cambridge : 1
farnham : 1
sebastopol : 1
browser : 1
ereader : 1
ship : 1
accompanying : 1
media : 1
content : 1
licensing : 1
concerns : 1
comprehensive : 1
professional : 1
guide : 1
mentions : 1
commonplace : 1
newcomers : 1
advice : 1
idioms : 1
focus : 1
visit : 1
sites : 1
interleaved : 1
goal : 1
balance : 1
desire : 1
chase : 1
overarching : 1
traditionally : 1
customer : 1
shortened : 1
clarity : 1
omissions : 1
dinkumware : 1
acknowledged : 1
dramatic : 1
progress : 1
interfering : 1
codewarrior : 1
nonterminal : 1
italic : 1
asked : 1
ongoing : 1
activities : 1
standardization : 1
glutton : 1
authors : 1
disagree : 1
standards : 1
evolving : 1
committees : 1
regularly : 1
review : 1
defect : 1
proposals : 1
approved : 1
corrects : 1
defects : 1
winding : 1
journey : 1
official : 1
ca : 1
ask : 1
email : 1
ron : 1
uwe : 1
bruce : 1
corrections : 1
drafts : 1
solicited : 1
cattarin : 1
roshan : 1
naik : 1
everyone : 1
frank : 1
cyrille : 1
jerry : 1
buster : 1
gerhard : 1
nicolas : 1
jarrod : 1
james : 1
michael : 1
clare : 1
thomas : 1
brian : 1
allan : 1
torsten : 1
giving : 1
me : 1
preparing : 1
vmware : 1
licenses : 1
jonathan : 1
patience : 1
love : 1
lexical : 1
dependencies : 1
encompasses : 1
translators : 1
affecting : 1
translate : 1
processed : 1
pdtr : 1
capital : 1
suffixes : 1
adjective : 1
escaped : 1
concatenating : 1
unterminated : 1
attempting : 1
signs : 1
inhibit : 1
superset : 1
edit : 1
sequential : 1
nonalphabetic : 1
hew : 1
workings : 1
complications : 1
outlines : 1
pertaining : 1
deserves : 1
disambiguation : 1
crop : 1
dictionary : 1
abuses : 1
scoping : 1
thumb : 1
delimit : 1
outermost : 1
lead : 1
incorrectly : 1
levels : 1
untangling : 1
succeeding : 1
trump : 1
foo : 1
consequences : 1
creator : 1
koenig : 1
mangle : 1
exporting : 1
hallmarks : 1
brand : 1
companion : 1
zeroes : 1
predecessor : 1
bitfields : 1
semantically : 1
clearly : 1
flavors : 1
infinite : 1
concoct : 1
tease : 1
apart : 1
really : 1
uint : 1
tend : 1
broader : 1
belong : 1
prevented : 1
learning : 1
varying : 1
fastest : 1
deep : 1
cp : 1
cpc : 1
lay : 1
unreadable : 1
ampersand : 1
rc : 1
cv : 1
rp : 1
pr : 1
quo : 1
rem : 1
q : 1
costly : 1
violate : 1
characteristic : 1
pose : 1
challenge : 1
lot : 1
rvector : 1
typedefs : 1
aggregates : 1
vec : 1
forces : 1
flatten : 1
maintaining : 1
worry : 1
duration : 1
screen : 1
typesetting : 1
fractions : 1
laying : 1
rights : 1
confer : 1
accumulation : 1
compose : 1
clash : 1
disadvantage : 1
abbreviation : 1
incorporate : 1
deeply : 1
imported : 1
qf : 1
refactor : 1
ugly : 1
promoting : 1
crude : 1
afraid : 1
contribute : 1
devise : 1
conflicting : 1
enhance : 1
tiny : 1
express : 1
plays : 1
borrows : 1
departure : 1
evolved : 1
contrast : 1
yielding : 1
loses : 1
confuse : 1
truncated : 1
discarding : 1
neighboring : 1
considers : 1
expose : 1
supplant : 1
older : 1
thus : 1
reducing : 1
risk : 1
detail : 1
briefly : 1
logger : 1
suffice : 1
clues : 1
enforce : 1
colloquial : 1
representative : 1
mnemonic : 1
maintainer : 1
unevaluated : 1
bites : 1
unwary : 1
ternary : 1
associativity : 1
parenthesized : 1
decrementing : 1
reinterprets : 1
pretty : 1
showbase : 1
adder : 1
wasting : 1
prefixed : 1
requested : 1
restrictive : 1
ints : 1
mistakes : 1
forgiving : 1
holdover : 1
syntactically : 1
reinterpret : 1
modifiable : 1
serializes : 1
serial : 1
unambiguously : 1
delimits : 1
declarative : 1
confined : 1
branching : 1
possibilities : 1
path : 1
forget : 1
colors : 1
arrives : 1
idea : 1
atypical : 1
execute : 1
reenters : 1
beforehand : 1
reevaluates : 1
redesign : 1
switches : 1
factoring : 1
retest : 1
reiterating : 1
cin : 1
abruptly : 1
expensive : 1
entering : 1
pushing : 1
unwinding : 1
rethrow : 1
clause : 1
min : 1
max : 1
verify : 1
pertains : 1
fptest : 1
deriving : 1
scaling : 1
amounts : 1
heeds : 1
cumulative : 1
suggests : 1
correctness : 1
accomplished : 1
surrounds : 1
explains : 1
redeclarations : 1
ties : 1
import : 1
eliminated : 1
precludes : 1
resolves : 1
illustrative : 1
optimizes : 1
assembled : 1
prunes : 1
versus : 1
answer : 1
concentrate : 1
undergoing : 1
discard : 1
adjustment : 1
hierarchy : 1
adjustments : 1
undergo : 1
preference : 1
say : 1
num : 1
glancing : 1
study : 1
waiting : 1
chain : 1
structures : 1
nonpointer : 1
bitmap : 1
publish : 1
herb : 1
sutter : 1
harm : 1
api : 1
serve : 1
virtue : 1
area : 1
effectively : 1
supplanted : 1
alternatives : 1
peek : 1
interfacing : 1
approximation : 1
cached : 1
accurately : 1
fpu : 1
truncate : 1
denormal : 1
pads : 1
surrounding : 1
qualifies : 1
enters : 1
traversal : 1
aside : 1
willing : 1
examined : 1
deallocated : 1
leak : 1
finalization : 1
unwound : 1
circumstances : 1
blindly : 1
arises : 1
crucial : 1
precisely : 1
talk : 1
vtable : 1
complicates : 1
matters : 1
indirection : 1
entered : 1
parlance : 1
nodes : 1
messing : 1
virtualness : 1
forcing : 1
runnable : 1
directed : 1
acyclic : 1
unambiguous : 1
graph : 1
modeled : 1
solved : 1
necessitates : 1
skeletons : 1
caps : 1
increasing : 1
accessibly : 1
increase : 1
menas : 1
bevity : 1
swap : 1
background : 1
mere : 1
lie : 1
heart : 1
behaviors : 1
independently : 1
customize : 1
reflects : 1
adopted : 1
floatt : 1
hashset : 1
listing : 1
procedure : 1
leftmost : 1
principle : 1
ultimate : 1
composed : 1
impossible : 1
contributes : 1
deducing : 1
insist : 1
dpoint : 1
tilde : 1
prefers : 1
granted : 1
buddy : 1
multitude : 1
exposes : 1
distinguishes : 1
wait : 1
meanings : 1
templ : 1
subexpression : 1
proc : 1
rise : 1
encloses : 1
lies : 1
sz : 1
albeit : 1
exploration : 1
exciting : 1
hardcode : 1
ipower : 1
manipulated : 1
simplified : 1
experience : 1
techniques : 1
doubt : 1
globally : 1
embodied : 1
habit : 1
newer : 1
incorporated : 1
printf : 1
opposed : 1
purposely : 1
behavioral : 1
customers : 1
western : 1
asian : 1
broad : 1
substrings : 1
occupy : 1
analyzed : 1
chinese : 1
hiding : 1
service : 1
everywhere : 1
trace : 1
valuable : 1
convey : 1
slower : 1
infers : 1
enforces : 1
nonintegral : 1
finish : 1
mechanisms : 1
satisfies : 1
abstracting : 1
bother : 1
mandating : 1
processes : 1
pc : 1
sophisticated : 1
validity : 1
leaks : 1
simplifying : 1
excerpts : 1
greatest : 1
parameterized : 1
exotic : 1
culture : 1
arrows : 1
simplification : 1
generality : 1
guidelines : 1
overall : 1
noteworthy : 1
practically : 1
appeals : 1
dec : 1
concise : 1
recommend : 1
exceeded : 1
interfaces : 1
representing : 1
persist : 1
involves : 1
dip : 1
bulk : 1
client : 1
learned : 1
measuring : 1
intrepid : 1
measures : 1
delegating : 1
connects : 1
port : 1
empties : 1
putting : 1
oversimplified : 1
sketch : 1
connectivity : 1
skipline : 1
parameterize : 1
reusable : 1
infrastructure : 1
unrecoverable : 1
indicating : 1
arrange : 1
reasons : 1
seriously : 1
disk : 1
deals : 1
staple : 1
assortment : 1
speed : 1
deletions : 1
rapid : 1
deletion : 1
rapidly : 1
implies : 1
adapters : 1
meeting : 1
lacking : 1
denoting : 1
notes : 1
hints : 1
robust : 1
face : 1
dispatch : 1
release : 1
eventually : 1
appending : 1
updates : 1
newitem : 1
erasures : 1
copyable : 1
exist : 1
indicated : 1
positional : 1
suggestive : 1
rearrange : 1
faster : 1
multimap : 1
picking : 1
lowest : 1
factored : 1
unmodifiable : 1
erasure : 1
namely : 1
extensible : 1
touching : 1
trained : 1
thinking : 1
invent : 1
crazy : 1
rethink : 1
subrange : 1
researcher : 1
patterns : 1
wants : 1
enhances : 1
statistical : 1
variance : 1
squares : 1
categorized : 1
rotating : 1
inexplicably : 1
efficiently : 1
trick : 1
designing : 1
wanted : 1
solves : 1
became : 1
stringify : 1
condensed : 1
assembles : 1
drawback : 1
detecting : 1
replacements : 1
phase : 1
balanced : 1
cautious : 1
rescanning : 1
predefine : 1
opportunity : 1
hello : 1
hi : 1
fifth : 1
echoed : 1
conforming : 1
ineffective : 1
consequence : 1
harmful : 1
predefines : 1
erroneous : 1
appeared : 1
placed : 1
folders : 1
distinctions : 1
knowledge : 1
referencing : 1
hypothetical : 1
inclusions : 1
locating : 1
configure : 1
subdirectory : 1
heed : 1
filesystem : 1
quoted : 1
folder : 1
records : 1
debuggers : 1
pragmas : 1
protect : 1
pack : 1
undefines : 1
terminal : 1
mistaken : 1
metacharacter : 1
bar : 1
quotes : 1
bars : 1
leads : 1
plenty : 1
asm : 1
borland : 1
nearest : 1
substatements : 1
compl : 1
reiterates : 1
auto : 1
destroys : 1
grants : 1
transfer : 1
transferring : 1
great : 1
rows : 1
inverts : 1
myrational : 1
routinely : 1
humans : 1
stricter : 1
multiples : 1
anew : 1
multibranch : 1
pending : 1
propagates : 1
identification : 1
quickly : 1
intrasection : 1
resides : 1
cluttering : 1
freestanding : 1
confused : 1
tends : 1
signifies : 1
aspect : 1
decremented : 1
coming : 1
ideally : 1
strictly : 1
children : 1
pairwise : 1
permutations : 1
nth : 1
predict : 1
cycles : 1
descending : 1
unwanted : 1
reversing : 1
rotated : 1
effecting : 1
rotation : 1
unaryoperation : 1
binaryoperation : 1
repetitions : 1
simulate : 1
numbered : 1
val : 1
assertion : 1
exclude : 1
requirement : 1
mutually : 1
flexible : 1
graphic : 1
feed : 1
carriage : 1
backspace : 1
asking : 1
resetting : 1
considerations : 1
realm : 1
describing : 1
reminders : 1
descriptive : 1
localization : 1
cost : 1
settings : 1
filling : 1
nonmonetary : 1
dollars : 1
queries : 1
quadrant : 1
discover : 1
occurred : 1
logn : 1
conjugate : 1
persforms : 1
o : 1
imag : 1
cursory : 1
unwinds : 1
restored : 1
originate : 1
interrupting : 1
extensive : 1
sends : 1
abnormal : 1
instruction : 1
addressing : 1
atomic : 1
termination : 1
contradicts : 1
looser : 1
practical : 1
prompt : 1
eof : 1
sigint : 1
fetching : 1
sequentially : 1
prepares : 1
fetch : 1
simplicity : 1
soon : 1
indicators : 1
forced : 1
verbatim : 1
reopen : 1
circumflex : 1
beeffeed : 1
counterparts : 1
registers : 1
parameterless : 1
indication : 1
unsuccessful : 1
inform : 1
quick : 1
reallocates : 1
resized : 1
chunks : 1
treating : 1
active : 1
secondary : 1
breaks : 1
constituent : 1
monday : 1
minutes : 1
elapsed : 1
clock : 1
ticks : 1
coordinated : 1
assembling : 1
reopening : 1
queried : 1
mbs : 1
classifications : 1
collection : 1
caused : 1
resort : 1
acts : 1
severing : 1
adapting : 1
functionals : 1
roundoff : 1
seq : 1
threshold : 1
empptrs : 1
emps : 1
modulus : 1
thorough : 1
establishing : 1
corrupt : 1
goodbit : 1
tying : 1
subtracted : 1
recovering : 1
sacrificing : 1
align : 1
registering : 1
revision : 1
ip : 1
synchronized : 1
consistent : 1
cleared : 1
strip : 1
ready : 1
clearing : 1
nonnumeric : 1
opening : 1
towards : 1
showing : 1
sever : 1
wistream : 1
cht : 1
discarded : 1
ahead : 1
noskipws : 1
decrease : 1
exposition : 1
stands : 1
largely : 1
capability : 1
prototypical : 1
measure : 1
acquire : 1
conceptually : 1
ramifications : 1
denormalization : 1
inexact : 1
quietly : 1
invalidated : 1
encourages : 1
constraint : 1
mandated : 1
invalidating : 1
embodiment : 1
cultural : 1
ability : 1
internt : 1
externt : 1
undo : 1
noconv : 1
finished : 1
collate : 1
indexed : 1
len : 1
interacting : 1
relying : 1
captures : 1
preferences : 1
id : 1
translated : 1
hourly : 1
intl : 1
extraction : 1
shortest : 1
uniquely : 1
collected : 1
groupings : 1
outputing : 1
numpunct : 1
ydm : 1
components : 1
interspersed : 1
checking : 1
narrowed : 1
honor : 1
unmodified : 1
dictionaries : 1
freqmap : 1
reinserting : 1
model : 1
handy : 1
myallocator : 1
permitting : 1
accidental : 1
prime : 1
owning : 1
drastically : 1
dangling : 1
drawing : 1
draw : 1
held : 1
reclaims : 1
implementors : 1
applications : 1
strictest : 1
symmetry : 1
bookkeeping : 1
fulfilled : 1
halt : 1
binaryop : 1
products : 1
accumulator : 1
accumulating : 1
successively : 1
unflushed : 1
preparation : 1
feel : 1
finishing : 1
tie : 1
adapt : 1
method : 1
triplet : 1
colormap : 1
assumption : 1
overwrites : 1
lightness : 1
saturation : 1
preconditions : 1
reasonably : 1
detected : 1
revealed : 1
informational : 1
purposes : 1
fetched : 1
synchronizes : 1
mediates : 1
reread : 1
adjusted : 1
daunting : 1
classifies : 1
identchars : 1
offering : 1
illustrating : 1
birthday : 1
streampos : 1
unspecified : 1
wstreampos : 1
encouraged : 1
exclusively : 1
iostream : 1
frozen : 1
thaw : 1
suggested : 1
freeze : 1
typeset : 1
minmax : 1
mm : 1
heavy : 1
consensus : 1
masked : 1
distinguishing : 1
sizes : 1
pay : 1
degenerate : 1
aliasing : 1
prohibit : 1
sliced : 1
disaster : 1
submatrix : 1
ten : 1
multiplies : 1
subtracts : 1
scalars : 1
circular : 1
reinitializes : 1
thought : 1
resize : 1
resizes : 1
keeping : 1
violates : 1
flip : 1
writers : 1
memfunc : 1
attribute : 1
eliminating : 1
associates : 1
universally : 1
retrieved : 1
height : 1
rtti : 1
designs : 1
hresult : 1
outdated : 1
hews : 1
retaining : 1
strong : 1
split : 1
locks : 1
garbage : 1
collector : 1
pinned : 1
studio : 1
getter : 1
capabilities : 1
minimize : 1
improvement : 1
wasted : 1
needlessly : 1
tinyvector : 1
tinymatrix : 1
metaprogramming : 1
subarray : 1
sin : 1
explore : 1
grown : 1
encompass : 1
regular : 1
lambda : 1
graphs : 1
extension : 1
tuples : 1
tuple : 1
solve : 1
nonexempt : 1
stlport : 1
threads : 1
hashed : 1
frequent : 1
glossary : 1
convince : 1
coworkers : 1
remarkable : 1
operates : 1
supplying : 1
informal : 1
document : 1
supplied : 1
crash : 1
embedded : 1
toy : 1
robot : 1
kernel : 1
panic : 1
shut : 1
corrupting : 1
filesystems : 1
obeys : 1
diagnosable : 1
lischner : 1
began : 1
career : 1
corporate : 1
rat : 1
late : 1
rewriting : 1
witnessed : 1
cfront : 1
integrated : 1
ray : 1
taught : 1
oregon : 1
upcoming : 1
feedback : 1
distribution : 1
breathing : 1
personality : 1
life : 1
dry : 1
animal : 1
striped : 1
squirrel : 1
dark : 1
light : 1
bushy : 1
squirrels : 1
coloration : 1
america : 1
homes : 1
forests : 1
entrances : 1
stone : 1
broken : 1
thick : 1
maze : 1
tunnels : 1
spend : 1
outdoors : 1
excellent : 1
eat : 1
cheek : 1
nuts : 1
seeds : 1
summer : 1
weather : 1
suddenly : 1
warm : 1
winter : 1
pawprints : 1
wake : 1
periods : 1
temperature : 1
season : 1
gestation : 1
litter : 1
baby : 1
mature : 1
got : 1
noise : 1
sounds : 1
loud : 1
hanging : 1
upside : 1
hutchinson : 1
copyeditor : 1
sarah : 1
sherman : 1
claire : 1
cloutier : 1
julie : 1
hawks : 1
derek : 1
di : 1
matteo : 1
mary : 1
brady : 1
volckhausen : 1
edie : 1
image : 1
engraving : 1
dover : 1
emma : 1
colby : 1
quarkxpress : 1
itc : 1
garamond : 1
futato : 1
interior : 1
joe : 1
wizda : 1
andrew : 1
savikas : 1
framemaker : 1
jason : 1
neil : 1
mike : 1
sierra : 1
perl : 1
xml : 1
linotype : 1
myriad : 1
thesans : 1
mono : 1
illustrations : 1
robert : 1
romano : 1
jessamyn : 1
macromedia : 1
freehand : 1
photoshop : 1
tip : 1
icons : 1
drawn : 1
christopher : 1
colophon : 1
clairemarie : 1
fisher : 1
online : 1
edition : 1
safari : 1
becki : 1
madeleine : 1
cleanup : 1
maintained : 1
benn : 1
regarding : 2
supplemental : 2
please : 2
books : 2
posted : 2
published : 2
database : 2
nonstandard : 2
portions : 2
roughly : 2
customary : 2
portion : 2
suite : 2
words : 2
phrases : 2
compilable : 2
download : 2
eliminate : 2
interfere : 2
fragments : 2
missing : 2
comeau : 2
bugs : 2
latest : 2
conformance : 2
kylix : 2
highlight : 2
buried : 2
brevity : 2
amendment : 2
completed : 2
concerning : 2
gravenstein : 2
highway : 2
send : 2
resource : 2
thanks : 2
suggestions : 2
greatly : 2
david : 2
jeff : 2
john : 2
microsoft : 2
machine : 2
his : 2
undergoes : 2
becoming : 2
phrase : 2
observable : 2
reduced : 2
backslash : 2
miscellaneous : 2
longest : 2
mixing : 2
located : 2
contiguous : 2
step : 2
recognizes : 2
underscores : 2
boundary : 2
endings : 2
combine : 2
ascii : 2
incorrect : 2
seeing : 2
widget : 2
eight : 2
horizontal : 2
merely : 2
trigraphs : 2
confusing : 2
ever : 2
pertain : 2
view : 2
favor : 2
readily : 2
mistake : 2
trumps : 2
brings : 2
mess : 2
unrelated : 2
parser : 2
parses : 2
cause : 2
wrinkle : 2
fact : 2
linkages : 2
resembles : 2
yellow : 2
likewise : 2
mixed : 2
morass : 2
compatible : 2
red : 2
people : 2
ordinarily : 2
hardware : 2
distinction : 2
finally : 2
hence : 2
signatures : 2
avoiding : 2
binding : 2
encapsulate : 2
ref : 2
supplies : 2
pt : 2
nesting : 2
software : 2
location : 2
fixing : 2
accuracy : 2
sample : 2
imports : 2
realize : 2
promote : 2
selected : 2
meaningless : 2
pointless : 2
typing : 2
tips : 2
aliases : 2
craft : 2
backward : 2
preserving : 2
falls : 2
evolution : 2
record : 2
debug : 2
informs : 2
obscure : 2
preserves : 2
examines : 2
contrived : 2
summarizes : 2
building : 2
cls : 2
incrementing : 2
generally : 2
rare : 2
ipi : 2
formed : 2
indicator : 2
multiplicative : 2
divisor : 2
ignoring : 2
seldom : 2
redeclare : 2
enable : 2
skipped : 2
jumping : 2
bounded : 2
labeled : 2
bypasses : 2
j : 2
flow : 2
exceptional : 2
indexing : 2
near : 2
pushed : 2
catches : 2
considering : 2
avoids : 2
catching : 2
unknown : 2
numerous : 2
scale : 2
substituted : 2
govern : 2
pruned : 2
fixedpoint : 2
choosing : 2
functionsnonmember : 2
dot : 2
rbnode : 2
picks : 2
nontemplate : 2
kept : 2
duplicated : 2
sense : 2
quality : 2
distances : 2
commutative : 2
completely : 2
involving : 2
option : 2
recommends : 2
environments : 2
nonreference : 2
pimpl : 2
posix : 2
stat : 2
lacks : 2
things : 2
info : 2
safer : 2
tokenizer : 2
interrupt : 2
packed : 2
radius : 2
clean : 2
had : 2
finalizes : 2
resources : 2
destructs : 2
guideline : 2
nonclass : 2
dp : 2
recommended : 2
overrides : 2
shares : 2
yet : 2
concept : 2
covariant : 2
delphi : 2
hashable : 2
trees : 2
virtually : 2
design : 2
burden : 2
illustrated : 2
users : 2
m : 2
privileges : 2
centers : 2
naming : 2
total : 2
differs : 2
concepts : 2
preceded : 2
letting : 2
concerned : 2
dst : 2
beyond : 2
grant : 2
partially : 2
bigfloat : 2
participates : 2
diagnose : 2
obj : 2
compiling : 2
truly : 2
give : 2
recursion : 2
simplify : 2
anyone : 2
membership : 2
placing : 2
supporting : 2
widespread : 2
configuration : 2
constraints : 2
marked : 2
wrapped : 2
imposes : 2
industrial : 2
encode : 2
seeking : 2
characterizes : 2
tools : 2
policies : 2
closely : 2
regard : 2
transcendental : 2
assumptions : 2
multiply : 2
rich : 2
pad : 2
flows : 2
attention : 2
malformed : 2
contained : 2
limitation : 2
spite : 2
judicious : 2
presented : 2
ending : 2
imbue : 2
characterized : 2
flushing : 2
skipper : 2
canonical : 2
ease : 2
insertions : 2
likely : 2
lifo : 2
us : 2
dereferences : 2
generalize : 2
unidirectional : 2
subtract : 2
excluded : 2
notably : 2
scott : 2
turns : 2
algorithmic : 2
doing : 2
clearer : 2
demonstrate : 2
accumulates : 2
accumulate : 2
summary : 2
newlines : 2
concatenation : 2
redefine : 2
rescanned : 2
tempest : 2
specially : 2
nonconforming : 2
emphasizes : 2
paired : 2
intervening : 2
symbolic : 2
nest : 2
unix : 2
period : 2
expressed : 2
intermediate : 2
pragma : 2
summaries : 2
duplicates : 2
relevant : 2
gnu : 2
sqr : 2
parm : 2
bitand : 2
bitor : 2
raw : 2
elaborates : 2
toggles : 2
modifications : 2
iterate : 2
xor : 2
cartesian : 2
bigger : 2
caught : 2
interrupted : 2
heading : 2
abbreviations : 2
lexicographically : 2
illustration : 2
forming : 2
reverses : 2
stable : 2
shifted : 2
extracting : 2
disables : 2
transforming : 2
occupies : 2
everyday : 2
workstations : 2
implied : 2
internationalization : 2
simultaneous : 2
query : 2
querying : 2
logx : 2
splits : 2
division : 2
magnitude : 2
signals : 2
abort : 2
segmentation : 2
violation : 2
fault : 2
delivered : 2
allowing : 2
varargs : 2
fetches : 2
getting : 2
closes : 2
truncates : 2
dropped : 2
mismatches : 2
previously : 2
scanset : 2
l : 2
seeks : 2
renames : 2
interactive : 2
overwritten : 2
race : 2
guarantees : 2
overlapping : 2
tokenizes : 2
facilitate : 2
english : 2
hours : 2
intended : 2
utc : 2
calendar : 2
designation : 2
sunday : 2
indirectly : 2
updated : 2
pushback : 2
equivalents : 2
translates : 2
did : 2
again : 2
combinations : 2
unshift : 2
estimate : 2
combining : 2
lucky : 2
bonus : 2
pow : 2
prompts : 2
statet : 2
fpos : 2
yield : 2
unneeded : 2
myclass : 2
selects : 2
suppress : 2
istream : 2
critical : 2
logging : 2
act : 2
extracted : 2
saved : 2
farther : 2
equals : 2
advantages : 2
analysis : 2
quiet : 2
signaling : 2
mandate : 2
turn : 2
codecvt : 2
lexicographical : 2
del : 2
owns : 2
codes : 2
country : 2
whatever : 2
moneypunct : 2
dateorder : 2
spelled : 2
convenience : 2
newkey : 2
uniqueness : 2
frequencies : 2
brush : 2
displaycontext : 2
transferred : 2
malloc : 2
unable : 2
sufficient : 2
colorspace : 2
adjust : 2
disappear : 2
platforms : 2
community : 2
live : 2
subsets : 2
extract : 2
gslice : 2
va : 2
transparent : 2
appendix : 2
development : 2
closure : 2
optimization : 2
com : 2
tcontrol : 2
ctl : 2
boxed : 2
box : 2
blitz : 2
pictorial : 2
proposed : 2
stats : 2
company : 2
our : 2
distinctive : 2
north : 2
lodge : 2
occasionally : 2
erik : 2
adobe : 2
desktop : 3
questions : 3
nutshell : 3
corrigendum : 3
omits : 3
suited : 3
seven : 3
formal : 3
entries : 3
syntactic : 3
tried : 3
alphabetical : 3
semantic : 3
excess : 3
limitations : 3
intent : 3
comments : 3
excluding : 3
icon : 3
issue : 3
aspects : 3
author : 3
tool : 3
ambiguities : 3
united : 3
improved : 3
freely : 3
executable : 3
involve : 3
processing : 3
speak : 3
collect : 3
build : 3
nondigit : 3
themselves : 3
consecutive : 3
underscore : 3
reserves : 3
quote : 3
ptr : 3
collects : 3
mapped : 3
representations : 3
vendors : 3
referring : 3
invocation : 3
intention : 3
establish : 3
counter : 3
knowing : 3
funcptr : 3
encodes : 3
obtaining : 3
yes : 3
enumerations : 3
fine : 3
aggregate : 3
accustomed : 3
harmless : 3
introductory : 3
determining : 3
prefer : 3
easiest : 3
signature : 3
encapsulates : 3
blue : 3
origin : 3
select : 3
equation : 3
high : 3
whereas : 3
unwieldy : 3
bring : 3
eqn : 3
mismatch : 3
twice : 3
surprising : 3
conflict : 3
repeatedly : 3
combines : 3
understanding : 3
role : 3
counterpart : 3
close : 3
strict : 3
reminder : 3
started : 3
reorder : 3
hex : 3
distinguished : 3
shifts : 3
multiplying : 3
none : 3
specifications : 3
redeclared : 3
stick : 3
against : 3
dispatches : 3
jump : 3
lines : 3
executing : 3
executed : 3
defaults : 3
interrupts : 3
establishes : 3
ifstream : 3
nameless : 3
graphics : 3
participate : 3
relationship : 3
relies : 3
interpreting : 3
ambiguity : 3
silly : 3
benefit : 3
addresses : 3
worst : 3
worse : 3
functors : 3
ditto : 3
destruction : 3
reduces : 3
nonlocal : 3
subobjects : 3
inherently : 3
underflow : 3
invoking : 3
responsible : 3
succeeds : 3
wrote : 3
polymorphism : 3
expr : 3
uniform : 3
concrete : 3
thread : 3
mentioned : 3
friendship : 3
swapping : 3
usable : 3
technique : 3
rounds : 3
matched : 3
specializing : 3
obvious : 3
nondependent : 3
normally : 3
pred : 3
raising : 3
h : 3
wrappers : 3
minimal : 3
japanese : 3
european : 3
deal : 3
greek : 3
characterize : 3
care : 3
far : 3
directions : 3
bases : 3
fields : 3
minus : 3
direction : 3
slash : 3
datafile : 3
saving : 3
safety : 3
systems : 3
accepted : 3
sources : 3
highly : 3
correspond : 3
restricted : 3
fifo : 3
deleted : 3
updating : 3
essentially : 3
dereferencing : 3
front : 3
logic : 3
explanation : 3
why : 3
helps : 3
statistics : 3
accommodate : 3
prepare : 3
subranges : 3
intersection : 3
efficient : 3
running : 3
std : 3
fourth : 3
install : 3
directories : 3
filenames : 3
alphabetic : 3
assembler : 3
iterates : 3
tested : 3
alone : 3
requests : 3
coordinates : 3
restricts : 3
interpretation : 3
hosted : 3
accepts : 3
remembers : 3
merged : 3
rearranges : 3
partitions : 3
rotates : 3
bitset : 3
enables : 3
errno : 3
precedes : 3
computation : 3
subtraction : 3
events : 3
positioned : 3
percent : 3
successful : 3
reallocate : 3
seed : 3
overwriting : 3
transformed : 3
seconds : 3
january : 3
year : 3
leap : 3
century : 3
years : 3
savings : 3
reaching : 3
connection : 3
fltt : 3
exceed : 3
unlucky : 3
receive : 3
foundation : 3
streamoff : 3
offsets : 3
sync : 3
sparse : 3
seekdir : 3
loss : 3
wostream : 3
ctype : 3
goes : 3
advancing : 3
perfectly : 3
appends : 3
inserter : 3
adapts : 3
existence : 3
denormalized : 3
nan : 3
allowable : 3
retrieving : 3
observers : 3
management : 3
rebind : 3
owner : 3
pen : 3
released : 3
protocol : 3
cont : 3
html : 3
positioning : 3
thaws : 3
freezefl : 3
periodic : 3
plane : 3
mostly : 3
column : 3
inpit : 3
highlights : 3
uuid : 3
rad : 3
unmanaged : 3
e : 3
manager : 3
ground : 3
stripes : 3
lodges : 3
chipmunk : 3
font : 3
links : 4
alphabetically : 4
topics : 4
unions : 4
meet : 4
projects : 4
page : 4
due : 4
alter : 4
warning : 4
frequently : 4
subject : 4
documented : 4
committee : 4
go : 4
early : 4
thank : 4
repeat : 4
trying : 4
instantiating : 4
vertical : 4
others : 4
accidentally : 4
reside : 4
entities : 4
braces : 4
arise : 4
parsed : 4
enclose : 4
built : 4
absence : 4
optionally : 4
enumerators : 4
preceding : 4
err : 4
helpful : 4
reader : 4
strange : 4
dimension : 4
ignored : 4
dereferenced : 4
fp : 4
differently : 4
divides : 4
bind : 4
particularly : 4
choice : 4
matter : 4
invoked : 4
collisions : 4
packages : 4
regions : 4
accessed : 4
ns : 4
aware : 4
changing : 4
legacy : 4
representable : 4
potentially : 4
elsewhere : 4
situation : 4
subsections : 4
subsection : 4
bad : 4
maybe : 4
overriding : 4
dimensions : 4
surround : 4
extracts : 4
bounds : 4
recursively : 4
conditions : 4
rethrows : 4
handled : 4
discards : 4
iteration : 4
bodies : 4
white : 4
branches : 4
jumps : 4
ensuring : 4
repeats : 4
unbounded : 4
counted : 4
generator : 4
cerr : 4
specifically : 4
impose : 4
extremely : 4
human : 4
mechanism : 4
differences : 4
careful : 4
str : 4
candidates : 4
transformation : 4
alternate : 4
subtracting : 4
subtle : 4
done : 4
differentiate : 4
meets : 4
skipping : 4
colon : 4
obtains : 4
finalize : 4
accept : 4
destroying : 4
iter : 4
dynamically : 4
pick : 4
binop : 4
affects : 4
issues : 4
slist : 4
accessing : 4
terminology : 4
deduction : 4
occur : 4
specifying : 4
illegal : 4
substitute : 4
powerful : 4
instantiates : 4
harder : 4
identifies : 4
exported : 4
moving : 4
vendor : 4
practice : 4
dealing : 4
marker : 4
directs : 4
optimized : 4
assume : 4
numerator : 4
padded : 4
controls : 4
down : 4
he : 4
manipulate : 4
command : 4
failed : 4
computer : 4
abstraction : 4
well : 4
bracket : 4
deleting : 4
computational : 4
conventions : 4
stuff : 4
advance : 4
respective : 4
append : 4
replacing : 4
partition : 4
replace : 4
median : 4
corresponds : 4
guard : 4
notion : 4
produced : 4
production : 4
qualifying : 4
rect : 4
inequality : 4
unexpected : 4
classic : 4
average : 4
odd : 4
alphanumeric : 4
tab : 4
retrieves : 4
trigonometric : 4
raises : 4
re : 4
cuts : 4
event : 4
unbuffered : 4
flushes : 4
buffered : 4
suitably : 4
transforms : 4
weekday : 4
daylight : 4
mappings : 4
currently : 4
decrements : 4
assumed : 4
callbacks : 4
grows : 4
causing : 4
graphical : 4
alters : 4
invalidate : 4
amortized : 4
sums : 4
product : 4
multiset : 4
exceeds : 4
slicing : 4
demonstrated : 4
exempt : 4
physical : 5
whenever : 5
we : 5
brief : 5
divided : 5
chapters : 5
cross : 5
satisfy : 5
correct : 5
visual : 5
removes : 5
intel : 5
steps : 5
translation : 5
familiar : 5
retrieve : 5
trigraph : 5
combination : 5
continue : 5
linked : 5
treats : 5
fits : 5
consult : 5
question : 5
recognize : 5
lifetimes : 5
closing : 5
prevent : 5
rather : 5
vary : 5
editor : 5
further : 5
expect : 5
enclosing : 5
innermost : 5
sees : 5
big : 5
solution : 5
granting : 5
linker : 5
dictates : 5
easily : 5
shorthand : 5
modulo : 5
supported : 5
mandates : 5
retain : 5
retains : 5
declarators : 5
synonyms : 5
attempts : 5
fast : 5
optimizations : 5
register : 5
commas : 5
separately : 5
thing : 5
demonstrates : 5
meaningful : 5
omitting : 5
latter : 5
row : 5
seen : 5
deprecated : 5
organization : 5
ostream : 5
compatibility : 5
lose : 5
promotion : 5
chooses : 5
idiom : 5
six : 5
evaluate : 5
logically : 5
exists : 5
subobject : 5
reflect : 5
loops : 5
happens : 5
goto : 5
entry : 5
popped : 5
arbitrary : 5
leave : 5
chosen : 5
separates : 5
respect : 5
little : 5
ignores : 5
consists : 5
equally : 5
deduces : 5
yourself : 5
qualification : 5
along : 5
invoke : 5
behave : 5
guarantee : 5
providing : 5
cache : 5
overflow : 5
tree : 5
commonly : 5
said : 5
deletes : 5
restore : 5
obey : 5
round : 5
tmp : 5
locates : 5
managing : 5
eastern : 5
increments : 5
freeing : 5
maintain : 5
detect : 5
denominator : 5
depicts : 5
primarily : 5
fail : 5
scientific : 5
serious : 5
examine : 5
denote : 5
hash : 5
holds : 5
streambuf : 5
ri : 5
pushes : 5
messages : 5
typeid : 5
textual : 5
correctly : 5
highest : 5
moved : 5
resets : 5
disable : 5
display : 5
multithreaded : 5
opaque : 5
begin : 5
interprets : 5
week : 5
zone : 5
capacity : 5
invalidates : 5
proportional : 5
maintains : 5
stride : 5
elementwise : 5
property : 5
accessible : 6
everything : 6
sections : 6
overview : 6
individual : 6
reduce : 6
abbreviated : 6
recent : 6
releases : 6
hard : 6
transformations : 6
preprocessing : 6
merge : 6
encodings : 6
contexts : 6
future : 6
fit : 6
extending : 6
closer : 6
resolved : 6
redundant : 6
notice : 6
explained : 6
blocks : 6
expected : 6
anonymous : 6
mix : 6
share : 6
modifies : 6
thereby : 6
initializing : 6
varies : 6
identity : 6
opposite : 6
java : 6
nf : 6
quite : 6
designed : 6
achieve : 6
rvalues : 6
unsafe : 6
unusual : 6
effects : 6
multiplication : 6
func : 6
fulfill : 6
perhaps : 6
dividing : 6
additive : 6
vacated : 6
selection : 6
above : 6
good : 6
finishes : 6
generalization : 6
repeated : 6
handlers : 6
overridden : 6
effect : 6
parenthesis : 6
usage : 6
construction : 6
cases : 6
dictated : 6
inherit : 6
circle : 6
languages : 6
skips : 6
responsibility : 6
assumes : 6
im : 6
directory : 6
abstract : 6
action : 6
predefined : 6
computed : 6
reasonable : 6
separators : 6
assuming : 6
raise : 6
endpoint : 6
grow : 6
head : 6
symmetric : 6
undefine : 6
report : 6
advanced : 6
merges : 6
moves : 6
printable : 6
printing : 6
iec : 6
groups : 6
exponential : 6
identified : 6
arg : 6
flushed : 6
opened : 6
insufficient : 6
reach : 6
deques : 6
openmode : 6
v : 6
methods : 6
conat : 6
cover : 7
extend : 7
network : 7
difficult : 7
introduce : 7
feature : 7
lack : 7
indicates : 7
builder : 7
portability : 7
decide : 7
update : 7
iso : 7
states : 7
who : 7
making : 7
compiles : 7
concatenated : 7
restrict : 7
octal : 7
changed : 7
across : 7
very : 7
problems : 7
bare : 7
move : 7
referred : 7
assigning : 7
complement : 7
situations : 7
taking : 7
behaves : 7
leaving : 7
asterisk : 7
vice : 7
r : 7
prevents : 7
modifying : 7
counting : 7
having : 7
grouping : 7
inaccessible : 7
remain : 7
significant : 7
meant : 7
days : 7
debugging : 7
serves : 7
happen : 7
grouped : 7
group : 7
postfix : 7
describe : 7
sizeof : 7
discussed : 7
frees : 7
filled : 7
raised : 7
gives : 7
wherever : 7
reason : 7
seem : 7
variety : 7
destructors : 7
restrictions : 7
sole : 7
friends : 7
closed : 7
deduced : 7
handles : 7
export : 7
application : 7
checks : 7
improve : 7
attributes : 7
imbued : 7
separator : 7
delimiter : 7
purpose : 7
polar : 7
overlap : 7
neither : 7
proxy : 7
infinity : 7
zeros : 7
registered : 7
formats : 7
day : 7
employees : 7
valarray : 7
chipmunks : 7
referenced : 8
international : 8
technical : 8
proper : 8
removed : 8
omitted : 8
easy : 8
introduced : 8
documentation : 8
testing : 8
unicode : 8
bnf : 8
something : 8
looking : 8
immediate : 8
black : 8
based : 8
alignment : 8
safely : 8
branch : 8
modified : 8
notation : 8
assignments : 8
semantics : 8
passes : 8
trait : 8
resolving : 8
leaves : 8
package : 8
alias : 8
lvalues : 8
casts : 8
five : 8
polymorphic : 8
nature : 8
higher : 8
ambiguous : 8
remains : 8
substatement : 8
visible : 8
among : 8
executes : 8
reached : 8
exits : 8
flexibility : 8
transfers : 8
bigint : 8
finding : 8
shorter : 8
fully : 8
features : 8
mutable : 8
table : 8
run : 8
link : 8
generated : 8
policy : 8
allocators : 8
caller : 8
radix : 8
upon : 8
room : 8
processor : 8
straightforward : 8
reorders : 8
recently : 8
math : 8
removal : 8
pointed : 8
substring : 8
cosine : 8
sine : 8
buffering : 8
outputiterator : 8
owned : 8
putback : 8
covers : 9
organized : 9
major : 9
span : 9
detailed : 9
introduces : 9
site : 9
clear : 9
checked : 9
sake : 9
process : 9
regardless : 9
letter : 9
encoding : 9
creating : 9
brackets : 9
precise : 9
knows : 9
small : 9
successfully : 9
runs : 9
resolution : 9
top : 9
distinguish : 9
simpler : 9
covered : 9
seems : 9
conventional : 9
natural : 9
aligned : 9
constants : 9
combined : 9
traditional : 9
variables : 9
hint : 9
modern : 9
rightmost : 9
almost : 9
binds : 9
approach : 9
wrapper : 9
subscript : 9
preferred : 9
check : 9
qualifier : 9
pi : 9
indices : 9
terminates : 9
characteristics : 9
resolve : 9
floating : 9
smart : 9
padding : 9
handle : 9
root : 9
am : 9
places : 9
interesting : 9
rounding : 9
included : 9
classification : 9
tag : 9
manage : 9
buffers : 9
setting : 9
initially : 9
operate : 9
insertion : 9
per : 9
binarypredicate : 9
logarithm : 9
month : 9
flush : 9
comparator : 9
ownership : 9
extensions : 10
computing : 10
ways : 10
fall : 10
catalog : 10
around : 10
middle : 10
legal : 10
suffix : 10
fractional : 10
portable : 10
interpret : 10
limit : 10
treated : 10
mapping : 10
meaning : 10
extra : 10
simplest : 10
containing : 10
parsing : 10
node : 10
properties : 10
amount : 10
declarator : 10
elaborated : 10
rarely : 10
modifiers : 10
multidimensional : 10
compute : 10
itself : 10
word : 10
layout : 10
advantage : 10
guaranteed : 10
since : 10
decrement : 10
produces : 10
preserve : 10
applied : 10
inclusive : 10
show : 10
applying : 10
throwing : 10
overloads : 10
extends : 10
exit : 10
handling : 10
catch : 10
sum : 10
expansion : 10
terminate : 10
marks : 10
indirect : 10
convertible : 10
ordered : 10
nor : 10
newly : 10
manages : 10
adapter : 10
onto : 10
erased : 10
properly : 10
denotes : 10
callback : 10
matrix : 10
limited : 11
libraries : 11
my : 11
parentheses : 11
status : 11
comment : 11
evaluation : 11
could : 11
expand : 11
necessary : 11
tries : 11
allow : 11
whichever : 11
incomplete : 11
enclosed : 11
mark : 11
identical : 11
attempt : 11
identify : 11
hidden : 11
searched : 11
rest : 11
boolean : 11
iostate : 11
complicated : 11
differ : 11
put : 11
quotient : 11
unnecessary : 11
saves : 11
storing : 11
fewer : 11
causes : 11
remember : 11
derive : 11
save : 11
offers : 11
wrong : 11
successive : 11
safe : 11
various : 11
relational : 11
equality : 11
comma : 11
trivial : 11
taken : 11
environment : 11
implementing : 11
parse : 11
accessibility : 11
opens : 11
manipulators : 11
advances : 11
concatenates : 11
represented : 11
normalized : 11
needs : 12
understand : 12
unformatted : 12
ellipsis : 12
compiled : 12
otherwise : 12
offer : 12
escape : 12
break : 12
symbols : 12
four : 12
anywhere : 12
inside : 12
now : 12
f : 12
ancestor : 12
choose : 12
casting : 12
byte : 12
lifetime : 12
tied : 12
dereference : 12
structure : 12
initializers : 12
invokes : 12
initialization : 12
entirely : 12
printed : 12
generates : 12
derives : 12
promotions : 12
pointing : 12
ensures : 12
evaluating : 12
negation : 12
nonmember : 12
allocating : 12
request : 12
freed : 12
too : 12
considered : 12
sort : 12
off : 12
s : 12
rtn : 12
extended : 12
instantiated : 12
imagine : 12
belongs : 12
interchangeable : 12
unit : 12
sorts : 12
overwrite : 12
collation : 12
clears : 12
orientation : 12
classifying : 12
comp : 12
queues : 12
stacks : 12
web : 13
throughout : 13
made : 13
reports : 13
terms : 13
mean : 13
term : 13
compilation : 13
newline : 13
tokens : 13
rely : 13
treat : 13
convention : 13
hide : 13
searching : 13
under : 13
host : 13
nonnegative : 13
performing : 13
optimize : 13
remainder : 13
duplicate : 13
z : 13
u : 13
reaches : 13
interface : 13
programmer : 13
precedence : 13
skip : 13
shape : 13
removing : 13
adding : 13
indicate : 13
therefore : 13
ascending : 13
reset : 13
failure : 13
counts : 13
upper : 13
permutation : 13
significand : 13
tangent : 13
main : 14
discusses : 14
toward : 14
units : 14
native : 14
punctuation : 14
keywords : 14
learn : 14
allowed : 14
angle : 14
entity : 14
righthand : 14
permit : 14
addition : 14
synonym : 14
larger : 14
performed : 14
help : 14
simply : 14
volatile : 14
becomes : 14
occurs : 14
destination : 14
away : 14
during : 14
labels : 14
inherits : 14
helper : 14
filename : 14
generate : 14
nonzero : 14
push : 14
bidiiter : 14
below : 14
erases : 14
generalized : 14
able : 15
affect : 15
presents : 15
still : 15
stops : 15
letters : 15
here : 15
depending : 15
place : 15
qualify : 15
scopes : 15
enumerator : 15
consider : 15
operations : 15
follow : 15
shared : 15
final : 15
exclusive : 15
discussion : 15
employee : 15
power : 15
system : 15
success : 15
dates : 15
facets : 15
via : 16
distinct : 16
directives : 16
identifiers : 16
replaced : 16
through : 16
possibly : 16
prefaced : 16
convenient : 16
omit : 16
runtime : 16
expanded : 16
get : 16
rule : 16
style : 16
force : 16
finds : 16
lefthand : 16
float : 16
extern : 16
overloading : 16
useful : 16
remaining : 16
functionality : 16
programs : 16
permitted : 16
remove : 16
lower : 16
allocates : 16
categories : 16
override : 16
nonvirtual : 16
implements : 16
limits : 16
errors : 16
mask : 16
distance : 16
mathematical : 16
thousands : 16
logarithmic : 16
heap : 16
replaces : 16
modifier : 16
managed : 16
direct : 17
width : 17
context : 17
specification : 17
slightly : 17
begins : 17
maps : 17
appropriate : 17
switch : 17
adds : 17
think : 17
illustrates : 17
curly : 17
looks : 17
follows : 17
longer : 17
keep : 17
defining : 17
existing : 17
requirements : 17
promoted : 17
underlying : 17
qualifiers : 17
ignore : 17
trailing : 17
directly : 17
full : 17
user : 17
increment : 17
inherited : 17
prior : 17
works : 17
primary : 17
stack : 17
subsequence : 17
fails : 17
deduce : 17
specializations : 17
partial : 17
become : 17
domain : 17
namespaces : 18
gets : 18
provided : 18
universal : 18
reserved : 18
permits : 18
block : 18
lets : 18
unnamed : 18
determine : 18
d : 18
unqualified : 18
precision : 18
old : 18
automatic : 18
leading : 18
p : 18
determined : 18
fraction : 18
evaluates : 18
pure : 18
offset : 18
functor : 18
obtained : 18
queue : 18
seek : 18
specializes : 18
fills : 18
erasing : 18
absolute : 18
may : 19
looked : 19
tell : 19
supply : 19
allows : 19
probably : 19
adjacent : 19
anything : 19
possible : 19
alternative : 19
problem : 19
constructing : 19
typical : 19
hides : 19
subset : 19
let : 19
positions : 19
applies : 19
label : 19
makes : 19
project : 19
currency : 19
boost : 19
deque : 19
available : 20
present : 20
delete : 20
comes : 20
smaller : 20
easier : 20
target : 20
fixed : 20
condition : 20
compared : 20
slice : 20
changes : 20
occurrences : 20
locales : 20
flags : 20
beginning : 20
fill : 20
inserts : 20
replacement : 20
inverse : 20
sentry : 20
book : 21
implementations : 21
certain : 21
especially : 21
include : 21
obtain : 21
produce : 21
manner : 21
listed : 21
numerical : 21
integers : 21
level : 21
declaring : 21
unlike : 21
bitmask : 21
square : 21
wraps : 21
deallocation : 21
priority : 21
occurrence : 21
pattern : 21
bidirectional : 21
forward : 21
terminating : 21
hyperbolic : 21
working : 22
general : 22
nothing : 22
suitable : 22
creates : 22
depend : 22
ok : 22
instances : 22
created : 22
exceptions : 22
keeps : 22
come : 22
found : 23
generic : 23
compile : 23
refers : 23
previous : 23
necessarily : 23
separated : 23
linkage : 23
appended : 23
space : 23
ends : 23
look : 23
operation : 23
relative : 23
continues : 23
instantiate : 23
inserting : 23
mode : 23
finite : 23
much : 24
identifier : 24
lowercase : 24
prefix : 24
constructs : 24
comparison : 24
pass : 24
false : 24
destroyed : 24
log : 24
thrown : 24
invalid : 24
field : 24
fmtflags : 24
refs : 24
pos : 24
plus : 25
few : 25
best : 25
sequences : 25
exact : 25
assign : 25
times : 25
appears : 25
uninitialized : 25
returning : 25
matches : 25
associative : 25
instantiation : 25
erase : 25
length : 25
inputiter : 25
swaps : 25
message : 25
imaginary : 25
basic : 26
programmers : 26
kind : 26
hexadecimal : 26
know : 26
body : 26
explicitly : 26
short : 26
specified : 26
track : 26
implemented : 26
yields : 26
specialize : 26
forms : 26
candidate : 26
adapted : 26
contain : 27
statements : 27
important : 27
token : 27
digit : 27
exponent : 27
unless : 27
series : 27
known : 27
suppose : 27
outer : 27
union : 27
custom : 27
specific : 27
comparing : 27
assigned : 27
linear : 27
enough : 28
includes : 28
versions : 28
details : 28
actually : 28
immediately : 28
inner : 28
search : 28
allocate : 28
predicate : 28
randiter : 28
open : 29
symbol : 29
conditional : 29
preprocessor : 29
literals : 29
automatically : 29
uppercase : 29
macros : 29
rational : 29
representation : 29
hold : 29
passing : 29
constructors : 29
perform : 29
allocation : 29
compound : 29
normal : 29
dependent : 29
require : 30
related : 30
required : 30
particular : 30
provides : 30
once : 30
enumeration : 30
kinds : 30
passed : 30
unique : 30
bitwise : 30
converting : 30
initializes : 30
rvalue : 30
inserted : 30
date : 30
programming : 31
text : 31
instantiations : 31
zero : 31
tells : 31
numbers : 31
region : 31
n : 31
add : 31
y : 31
needed : 31
bound : 31
desired : 31
side : 31
count : 31
tests : 31
algorithm : 31
inheritance : 31
operating : 31
alloc : 31
pairs : 31
files : 32
complete : 32
headers : 32
added : 32
were : 32
though : 32
assigns : 32
constructed : 32
conversions : 32
evaluated : 32
initer : 32
already : 32
pair : 32
sometimes : 33
try : 33
digits : 33
line : 33
specify : 33
outside : 33
lookup : 33
implicitly : 33
initialize : 33
monetary : 33
what : 34
represent : 34
special : 34
insert : 34
earlier : 34
third : 34
just : 34
smallest : 34
allocated : 34
describes : 35
modify : 35
literal : 35
specifies : 35
signed : 35
unary : 35
matching : 35
depends : 35
either : 35
parts : 35
copying : 35
dynamic : 35
destructor : 35
ensure : 35
keys : 35
given : 36
interpreted : 36
largest : 36
inline : 36
b : 36
according : 36
vector : 36
qualified : 36
minimum : 36
change : 36
specialized : 36
being : 37
initial : 37
described : 37
definitions : 37
greater : 37
map : 37
sure : 37
subsequent : 37
test : 37
apply : 37
resulting : 37
over : 37
description : 38
print : 38
specifiers : 38
create : 38
allocator : 38
ranges : 38
references : 39
convert : 39
logical : 39
fundamental : 39
optional : 39
operands : 39
back : 39
free : 40
language : 40
find : 40
better : 40
whitespace : 40
avoid : 40
arrays : 40
numeric : 40
starting : 40
variable : 40
searches : 40
placement : 40
although : 41
work : 41
them : 41
store : 41
initializer : 41
until : 41
color : 41
inputiterator : 41
examples : 42
lists : 42
ordinary : 42
associated : 42
index : 42
right : 42
never : 42
signal : 42
while : 43
supports : 43
plain : 43
nested : 43
copied : 43
descriptions : 44
category : 44
actual : 44
support : 44
usual : 44
handler : 44
formatting : 44
comparisons : 44
large : 45
including : 45
construct : 45
expressions : 45
stores : 45
bytes : 45
three : 46
appear : 46
difference : 46
real : 46
requires : 47
sign : 47
private : 47
complex : 48
entire : 48
usually : 48
separate : 48
refer : 48
was : 48
lvalue : 48
control : 48
throws : 48
algorithms : 48
functional : 48
streams : 48
make : 49
enumerated : 49
random : 49
fwditer : 49
streamsize : 49
typically : 50
external : 50
left : 50
match : 50
positive : 50
code : 51
address : 51
whose : 51
strings : 51
nonstatic : 51
expands : 51
similar : 52
performance : 52
throw : 52
flag : 52
outiter : 52
execution : 53
valid : 53
shown : 53
storage : 53
protected : 53
negative : 53
defines : 54
internal : 54
compilers : 55
shift : 55
been : 56
implement : 56
instance : 56
reverse : 56
complexity : 56
provide : 57
several : 57
directive : 57
out : 57
bits : 57
except : 58
key : 58
written : 58
instead : 58
temporary : 58
sorted : 58
example : 59
exactly : 59
starts : 59
demo : 59
implicit : 59
containers : 59
will : 60
loop : 60
another : 60
enum : 60
scalar : 60
maximum : 60
within : 61
narrow : 61
determines : 61
undefined : 61
bit : 61
state : 61
writes : 61
local : 62
less : 62
prints : 62
original : 63
reading : 63
returned : 63
current : 63
common : 64
format : 64
start : 65
reads : 65
friend : 65
want : 66
both : 66
those : 66
empty : 66
overload : 67
formatted : 67
own : 67
take : 67
corresponding : 67
past : 67
converts : 68
pod : 68
performs : 68
many : 69
true : 69
manipulator : 69
chart : 69
means : 70
parameters : 70
arithmetic : 70
syntax : 71
results : 71
writing : 71
else : 72
contents : 72
i : 73
least : 73
where : 74
unsigned : 74
additional : 75
contains : 75
pointers : 75
chapter : 75
often : 75
specifier : 75
named : 75
operand : 75
would : 76
decimal : 76
multiple : 77
traits : 77
stored : 77
without : 78
followed : 79
initialized : 79
compare : 79
note : 80
like : 80
rules : 81
assignment : 81
specialization : 82
templates : 84
facet : 84
keyword : 85
next : 85
order : 85
section : 86
binary : 86
cout : 86
time : 87
char : 87
represents : 88
between : 88
computes : 88
simple : 89
part : 90
version : 90
these : 91
cast : 91
equal : 91
case : 92
need : 93
x : 93
even : 94
declare : 94
later : 96
define : 96
scope : 96
defined : 97
error : 98
iterators : 98
implementation : 101
global : 101
definition : 101
takes : 101
overloaded : 105
locale : 105
declarations : 106
sets : 106
every : 106
last : 107
operators : 107
library : 109
way : 111
program : 111
declared : 112
then : 112
behavior : 112
their : 113
there : 114
copies : 114
classes : 115
multibyte : 115
should : 116
up : 116
list : 118
always : 118
names : 120
write : 120
integral : 120
your : 121
constant : 121
memory : 121
source : 122
whether : 122
access : 125
because : 125
single : 125
converted : 127
long : 127
after : 129
derived : 131
equivalent : 132
declares : 132
into : 133
how : 134
objects : 134
before : 136
uses : 137
statement : 137
conversion : 139
struct : 139
constructor : 141
arguments : 141
second : 142
buffer : 143
explicit : 145
end : 146
integer : 147
item : 148
size : 152
copy : 152
reference : 153
compares : 155
sequence : 156
calling : 157
header : 159
namespace : 161
types : 162
position : 164
form : 166
read : 166
some : 167
declaration : 167
most : 168
exception : 169
default : 170
called : 171
t : 171
container : 172
expression : 172
file : 173
point : 173
do : 174
shows : 180
different : 182
c : 182
double : 182
items : 182
values : 186
public : 190
they : 194
about : 195
null : 196
members : 197
data : 197
might : 206
information : 208
does : 212
elements : 214
argument : 216
points : 216
element : 221
new : 221
call : 221
calls : 226
such : 227
also : 230
result : 233
parameter : 234
following : 235
set : 239
than : 241
array : 252
output : 252
compiler : 262
cannot : 262
static : 265
macro : 266
on : 273
wide : 283
only : 287
stream : 288
bool : 290
its : 291
number : 292
two : 296
see : 311
range : 311
input : 311
each : 316
so : 318
base : 324
more : 325
virtual : 331
name : 344
string : 344
used : 346
characters : 347
no : 359
using : 370
functions : 373
first : 375
but : 381
has : 388
other : 388
iterator : 391
standard : 397
operator : 404
any : 408
same : 408
when : 413
one : 440
at : 441
object : 443
typedef : 453
void : 462
have : 479
this : 493
all : 503
pointer : 505
must : 534
member : 540
int : 543
use : 560
returns : 586
by : 620
typename : 629
character : 643
from : 688
value : 736
return : 771
which : 777
not : 855
it : 862
type : 981
you : 991
const : 1000
with : 1062
be : 1103
as : 1184
can : 1215
template : 1273
if : 1422
are : 1489
or : 1612
solid : 1715
that : 1867
an : 1890
class : 2332
for : 2492
function : 2958
and : 3186
in : 3345
of : 3858
to : 4064
is : 5246
a : 6034
the : 12618
in a in -> a : 2
in a in -> either : 1
in a in -> this : 1
a in a -> in : 1
a in a -> by : 1
a in a -> the : 1
a in a -> custom : 1
in a by -> cambridge : 1
a by cambridge -> farnham : 1
by cambridge farnham -> sebastopol : 1
cambridge farnham sebastopol -> note : 1
farnham sebastopol note -> regarding : 1
sebastopol note regarding -> supplemental : 1
note regarding supplemental -> note : 1
note regarding supplemental -> files : 1
regarding supplemental note -> regarding : 1
supplemental note regarding -> supplemental : 1
regarding supplemental files -> and : 1
supplemental files and -> examples : 1
files and examples -> for : 1
and examples for -> this : 1
examples for this -> book : 1
for this book -> can : 1
this book can -> be : 1
book can be -> found : 1
can be found -> at : 1
can be found -> in : 1
can be found -> throughout : 1
be found at -> please : 1
found at please -> use : 1
at please use -> a : 1
please use a -> standard : 1
use a standard -> desktop : 1
use a standard -> type : 1
a standard desktop -> web : 1
standard desktop web -> browser : 1
desktop web browser -> to : 1
web browser to -> access : 1
browser to access -> these : 1
to access these -> as : 1
access these as -> they : 1
these as they -> may : 1
as they may -> not : 1
they may not -> be : 1
may not be -> accessible : 1
may not be -> a : 1
may not be -> the : 1
not be accessible -> from : 1
be accessible from -> all : 1
accessible from all -> ereader : 1
from all ereader -> code : 1
all ereader code -> files : 1
ereader code files -> or : 1
code files or -> examples : 1
files or examples -> referenced : 1
or examples referenced -> in : 1
examples referenced in -> the : 1
referenced in the -> book : 1
in the book -> will : 1
in the book -> were : 1
the book will -> be : 1
book will be -> available : 1
will be available -> for : 1
be available for -> physical : 1
available for physical -> books : 1
for physical books -> that : 1
physical books that -> ship : 1
books that ship -> with : 1
that ship with -> an : 1
ship with an -> accompanying : 1
with an accompanying -> whenever : 1
an accompanying whenever -> posted : 1
accompanying whenever posted -> all : 1
whenever posted all -> note : 1
posted all note -> that : 1
all note that -> while : 1
note that while -> we : 1
note that while -> the : 1
that while we -> provide : 1
while we provide -> as : 1
we provide as -> much : 1
provide as much -> of : 1
as much of -> the : 1
much of the -> media : 1
much of the -> standard : 1
of the media -> content : 1
the media content -> as : 1
media content as -> we : 1
content as we -> are : 1
as we are -> able : 1
we are able -> via : 1
are able via -> free : 1
able via free -> we : 1
via free we -> are : 1
free we are -> sometimes : 1
we are sometimes -> limited : 1
are sometimes limited -> by : 1
sometimes limited by -> licensing : 1
limited by licensing -> please : 1
by licensing please -> direct : 1
licensing please direct -> any : 1
please direct any -> questions : 1
direct any questions -> or : 1
any questions or -> concerns : 1
questions or concerns -> to : 1
or concerns to -> in : 1
concerns to in -> a : 1
to in a -> is : 1
to in a -> custom : 1
in a is -> a : 1
in a is -> like : 1
in a is -> an : 1
a is a -> reference : 1
a is a -> sequence : 2
a is a -> single : 1
a is a -> class : 1
a is a -> constant : 1
a is a -> name : 1
a is a -> range : 1
a is a -> and : 1
a is a -> is : 1
a is a -> violation : 1
a is a -> of : 1
a is a -> new : 1
a is a -> helper : 1
a is a -> generalized : 1
a is a -> generalization : 1
is a reference -> to : 4
is a reference -> for : 3
is a reference -> the : 1
a reference to -> the : 18
a reference to -> a : 10
a reference to -> is : 1
a reference to -> thereby : 1
a reference to -> use : 1
a reference to -> in : 1
a reference to -> an : 3
a reference to -> that : 1
reference to the -> language : 1
reference to the -> string : 1
reference to the -> result : 1
reference to the -> class : 2
reference to the -> inaccessible : 1
reference to the -> relevant : 1
reference to the -> the : 5
reference to the -> array : 2
reference to the -> new : 2
reference to the -> header : 1
reference to the -> stream : 1
reference to the -> item : 1
reference to the -> units : 1
reference to the -> object : 1
reference to the -> original : 1
to the language -> and : 1
the language and -> being : 1
the language and -> standard : 1
the language and -> the : 1
the language and -> form : 1
language and being -> a : 1
and being a -> nutshell : 1
being a nutshell -> it : 1
a nutshell it -> is : 1
nutshell it is -> not : 1
it is not -> a : 6
it is not -> always : 1
it is not -> in : 2
it is not -> cannot : 1
it is not -> looked : 1
it is not -> particularly : 1
it is not -> so : 1
it is not -> expanded : 1
it is not -> the : 4
it is not -> documented : 1
it is not -> necessarily : 3
it is not -> and : 1
it is not -> an : 2
it is not -> it : 1
it is not -> if : 2
it is not -> possible : 1
it is not -> equal : 1
is not a -> comprehensive : 1
is not a -> newcomers : 1
is not a -> trigraph : 1
is not a -> member : 2
is not a -> so : 2
is not a -> class : 1
is not a -> such : 1
is not a -> pointer : 1
is not a -> then : 1
is not a -> compound : 1
is not a -> only : 1
is not a -> is : 1
is not a -> custom : 1
is not a -> valid : 4
is not a -> macro : 1
is not a -> standard : 1
is not a -> printable : 1
is not a -> fixed : 1
is not a -> container : 1
is not a -> reference : 1
is not a -> header : 1
not a comprehensive -> but : 1
a comprehensive but -> it : 1
comprehensive but it -> is : 1
but it is -> complete : 1
but it is -> not : 2
but it is -> semantically : 1
but it is -> better : 1
but it is -> case : 1
but it is -> the : 1
but it is -> often : 1
it is complete -> enough : 1
is complete enough -> to : 1
complete enough to -> cover : 1
enough to cover -> everything : 1
to cover everything -> a : 1
cover everything a -> working : 1
everything a working -> professional : 1
a working professional -> needs : 1
working professional needs -> to : 1
professional needs to -> is : 1
needs to is -> such : 1
to is such -> a : 1
is such a -> large : 1
is such a -> it : 2
such a large -> and : 1
a large and -> complex : 1
large and complex -> language : 1
and complex language -> that : 1
complex language that -> even : 1
language that even -> this : 1
that even this -> nutshell : 1
even this nutshell -> guide : 1
this nutshell guide -> is : 1
nutshell guide is -> a : 1
guide is a -> large : 1
is a large -> book : 1
a large book -> covers : 1
large book covers -> the : 1
book covers the -> the : 1
covers the the -> international : 1
the the international -> standard : 1
the international standard -> published : 1
international standard published -> as : 1
standard published as -> plus : 1
published as plus -> technical : 1
as plus technical -> corrigendum : 1
plus technical corrigendum -> many : 1
technical corrigendum many -> implementations : 1
corrigendum many implementations -> of : 1
many implementations of -> extend : 1
implementations of extend -> the : 1
of extend the -> language : 1
extend the language -> and : 1
language and standard -> except : 1
and standard except -> for : 1
standard except for -> brief : 1
except for brief -> mentions : 1
for brief mentions -> of : 1
brief mentions of -> language : 1
mentions of language -> and : 1
of language and -> library : 1
language and library -> extensions : 1
and library extensions -> in : 1
library extensions in -> the : 1
extensions in the -> this : 1
in the this -> book : 1
in the this -> is : 5
in the this -> includes : 1
the this book -> covers : 1
the this book -> uses : 1
this book covers -> only : 1
book covers only -> the : 1
covers only the -> the : 1
only the the -> standard : 1
only the the -> template : 1
the the standard -> library : 1
the the standard -> and : 1
the the standard -> declares : 1
the the standard -> is : 1
the standard library -> is : 3
the standard library -> and : 2
the standard library -> includes : 3
the standard library -> uses : 2
the standard library -> has : 4
the standard library -> often : 1
the standard library -> provides : 1
the standard library -> declares : 1
the standard library -> for : 1
the standard library -> are : 1
the standard library -> does : 1
the standard library -> to : 1
the standard library -> overload : 1
the standard library -> makes : 1
the standard library -> distinguish : 1
the standard library -> the : 2
the standard library -> declare : 1
the standard library -> except : 1
the standard library -> or : 1
the standard library -> specializes : 1
the standard library -> defines : 1
standard library is -> includes : 1
standard library is -> implemented : 1
standard library is -> free : 1
standard library is -> contained : 1
standard library is -> responsible : 1
library is includes -> common : 1
is includes common -> and : 1
includes common and -> much : 1
common and much -> it : 1
and much it -> omits : 1
much it omits -> much : 1
it omits much -> that : 1
omits much that -> is : 1
much that is -> commonplace : 1
that is commonplace -> in : 1
is commonplace in -> computing : 1
commonplace in computing -> network : 1
in computing network -> database : 1
computing network database -> and : 1
network database and -> so : 1
database and so -> see : 1
and so see -> for : 2
so see for -> information : 1
so see for -> more : 1
see for information -> about : 23
see for information -> on : 1
for information about -> nonstandard : 1
for information about -> access : 1
for information about -> casting : 1
for information about -> expressions : 1
for information about -> pod : 2
for information about -> template : 1
for information about -> this : 1
for information about -> type : 1
for information about -> that : 1
for information about -> specifications : 1
for information about -> other : 2
for information about -> the : 16
for information about -> which : 1
for information about -> class : 5
for information about -> base : 1
for information about -> blocks : 1
for information about -> some : 1
for information about -> syntax : 1
for information about -> these : 1
for information about -> see : 2
for information about -> character : 2
for information about -> addition : 1
for information about -> using : 1
for information about -> all : 1
for information about -> storage : 1
for information about -> functions : 1
for information about -> function : 6
for information about -> header : 1
for information about -> multibyte : 1
for information about -> wide : 1
for information about -> containers : 2
for information about -> traits : 2
for information about -> and : 2
for information about -> tied : 1
for information about -> unit : 1
for information about -> handling : 1
for information about -> constructors : 1
information about nonstandard -> libraries : 1
about nonstandard libraries -> that : 1
nonstandard libraries that -> provide : 1
libraries that provide -> additional : 2
that provide additional -> book : 1
that provide additional -> numeric : 1
provide additional book -> is : 1
additional book is -> a : 1
book is a -> it : 1
is a it -> is : 2
is a it -> must : 1
a it is -> not : 2
a it is -> also : 2
a it is -> your : 1
a it is -> followed : 1
a it is -> equivalent : 1
a it is -> one : 1
a it is -> written : 1
a it is -> used : 1
a it is -> up : 1
not a newcomers -> to : 1
a newcomers to -> might : 1
newcomers to might -> find : 1
to might find -> portions : 1
might find portions -> of : 1
find portions of -> this : 1
portions of this -> book : 1
of this book -> difficult : 1
of this book -> is : 1
of this book -> to : 1
of this book -> was : 1
this book difficult -> to : 1
book difficult to -> although : 1
difficult to although -> each : 1
to although each -> section : 1
although each section -> contains : 1
each section contains -> some : 1
section contains some -> advice : 1
contains some advice -> on : 1
some advice on -> idioms : 1
advice on idioms -> and : 1
on idioms and -> the : 1
idioms and the -> proper : 1
and the proper -> use : 1
the proper use -> of : 1
proper use of -> certain : 1
proper use of -> ensures : 1
use of certain -> language : 1
of certain language -> the : 1
certain language the -> main : 1
language the main -> focus : 1
the main focus -> is : 1
main focus is -> on : 1
focus is on -> the : 1
is on the -> reference : 1
on the reference -> visit : 1
the reference visit -> for : 1
reference visit for -> links : 1
visit for links -> to : 1
for links to -> sites : 1
links to sites -> and : 1
to sites and -> lists : 1
sites and lists -> of : 1
and lists of -> books : 1
lists of books -> that : 1
of books that -> are : 1
books that are -> better : 1
that are better -> suited : 1
are better suited -> for : 1
better suited for -> of : 1
suited for of -> this : 1
for of this -> of : 1
of this of -> this : 1
this of this -> book : 1
this book is -> divided : 1
book is divided -> into : 1
is divided into -> two : 1
is divided into -> a : 1
is divided into -> three : 3
divided into two -> interleaved : 1
into two interleaved -> sections : 1
two interleaved sections -> that : 1
interleaved sections that -> cover : 1
sections that cover -> the : 1
that cover the -> language : 1
cover the language -> and : 1
language and the -> and : 1
and the and -> a : 1
and the and -> facets : 1
and the and -> instantiations : 1
and the and -> most : 1
and the and -> specializations : 1
and the and -> sections : 1
and the and -> arrays : 1
the and a -> section : 1
the and a -> loop : 1
the and a -> trailing : 1
the and a -> file : 1
the and a -> actually : 1
the and a -> object : 1
the and a -> negative : 1
and a section -> of : 1
a section of -> roughly : 1
section of roughly -> the : 1
of roughly the -> language : 1
roughly the language -> is : 1
the language is -> the : 2
language is the -> part : 1
language is the -> linkage : 1
is the part -> of : 2
the part of -> that : 2
the part of -> the : 2
part of that -> does : 1
part of that -> is : 1
part of that -> function : 2
of that does -> not : 1
that does not -> require : 1
that does not -> return : 2
that does not -> use : 2
that does not -> have : 2
that does not -> take : 2
that does not -> change : 1
that does not -> come : 5
that does not -> start : 1
that does not -> correspond : 2
that does not -> match : 2
that does not -> call : 1
that does not -> appear : 2
that does not -> chart : 1
that does not -> c : 1
that does not -> follow : 1
that does not -> necessarily : 1
does not require -> any : 2
does not require -> that : 1
does not require -> cout : 2
not require any -> additional : 1
not require any -> support : 1
require any additional -> headers : 1
any additional headers -> or : 1
additional headers or -> the : 1
headers or the -> library : 1
or the library -> is : 1
the library is -> the : 1
the library is -> that : 1
the library is -> often : 1
library is the -> part : 1
of that is -> declared : 1
that is declared -> in : 3
that is declared -> later : 1
that is declared -> with : 1
is declared in -> the : 4
is declared in -> more : 1
is declared in -> lookup : 1
is declared in -> a : 1
is declared in -> an : 1
is declared in -> and : 1
is declared in -> but : 1
is declared in -> not : 1
declared in the -> standard : 2
declared in the -> global : 1
declared in the -> namespace : 2
declared in the -> a : 1
declared in the -> although : 1
declared in the -> condition : 1
declared in the -> compound : 1
declared in the -> substatement : 1
declared in the -> class : 1
declared in the -> same : 2
declared in the -> with : 2
declared in the -> external : 1
declared in the -> container : 1
declared in the -> for : 1
declared in the -> many : 1
declared in the -> strings : 1
in the standard -> and : 2
in the standard -> any : 1
in the standard -> int : 1
in the standard -> because : 1
in the standard -> shows : 1
in the standard -> typename : 1
in the standard -> see : 2
in the standard -> but : 1
in the standard -> library : 6
in the standard -> of : 1
in the standard -> with : 1
in the standard -> algorithms : 1
in the standard -> you : 4
in the standard -> including : 2
in the standard -> instantiations : 2
in the standard -> a : 1
in the standard -> is : 2
in the standard -> boost : 1
the standard and -> cover : 1
the standard and -> in : 1
the standard and -> recognize : 1
the standard and -> is : 1
the standard and -> about : 1
the standard and -> as : 1
the standard and -> you : 1
the standard and -> function : 1
the standard and -> it : 1
standard and cover -> the : 1
and cover the -> the : 1
cover the the -> first : 1
the the first -> seven : 1
the the first -> form : 4
the the first -> position : 1
the the first -> parameter : 1
the the first -> three : 1
the the first -> specialized : 1
the the first -> one : 1
the the first -> character : 1
the the first -> version : 6
the the first -> item : 1
the first seven -> chapters : 2
first seven chapters -> form : 1
first seven chapters -> for : 1
seven chapters form -> the : 1
chapters form the -> main : 1
form the main -> language : 1
the main language -> organized : 1
main language organized -> by : 1
language organized by -> it : 1
organized by it -> is : 1
by it is -> customary : 1
it is customary -> for : 1
is customary for -> a : 1
customary for a -> programming : 1
for a programming -> reference : 1
a programming reference -> to : 1
programming reference to -> contain : 1
reference to contain -> a : 1
to contain a -> formal : 1
contain a formal -> and : 1
a formal and -> this : 1
formal and this -> book : 1
and this book -> does : 1
and this book -> follows : 1
this book does -> so : 1
this book does -> not : 1
book does so -> in : 1
does so in -> which : 1
so in which -> is : 1
in which is -> organized : 1
in which is -> the : 32
in which is -> equivalent : 1
in which is -> a : 26
in which is -> to : 1
in which is -> an : 5
in which is -> true : 1
in which is -> function : 1
in which is -> not : 1
in which is -> in : 2
in which is -> it : 1
in which is -> and : 1
in which is -> any : 1
in which is -> must : 1
in which is -> initialized : 2
in which is -> initially : 1
in which is -> for : 1
in which is -> constructed : 4
which is organized -> alphabetically : 1
is organized alphabetically -> by : 1
organized alphabetically by -> keyword : 1
organized alphabetically by -> and : 2
alphabetically by keyword -> some : 1
by keyword some -> additional : 1
keyword some additional -> entries : 1
some additional entries -> for : 1
additional entries for -> major : 1
entries for major -> syntactic : 1
for major syntactic -> such : 1
major syntactic such -> as : 1
syntactic such as -> is : 1
such as is -> a : 1
such as is -> read : 1
such as is -> wrapped : 1
such as is -> used : 1
as is a -> reference : 1
as is a -> class : 1
a reference for -> the : 4
a reference for -> function : 1
reference for the -> is : 1
reference for the -> which : 1
reference for the -> language : 1
reference for the -> entire : 2
reference for the -> sake : 1
for the is -> the : 1
for the is -> a : 1
the is the -> library : 1
the is the -> statement : 1
the is the -> loop : 2
the is the -> function : 1
the is the -> only : 1
the is the -> is : 1
the is the -> result : 1
the is the -> prefix : 1
the is the -> input : 1
the is the -> return : 1
is the library -> organized : 1
the library organized -> alphabetically : 1
library organized alphabetically -> by : 1
alphabetically by and -> present : 1
alphabetically by and -> alphabetically : 1
by and present -> an : 1
and present an -> overview : 1
present an overview -> of : 1
an overview of -> the : 6
overview of the -> library : 1
overview of the -> standard : 3
overview of the -> for : 1
overview of the -> stream : 1
of the library -> and : 1
of the library -> that : 1
of the library -> are : 1
of the library -> get : 1
of the library -> uses : 1
of the library -> is : 1
the library and -> introduce : 1
the library and -> to : 1
library and introduce -> the : 1
and introduce the -> topics : 1
introduce the topics -> that : 1
the topics that -> span : 1
topics that span -> individual : 1
that span individual -> information : 1
span individual information -> is : 1
individual information is -> especially : 1
information is especially -> in : 1
is especially in -> my : 1
especially in my -> goal : 1
in my goal -> has : 1
my goal has -> been : 1
goal has been -> to : 1
has been to -> present : 1
been to present -> information : 1
to present information -> when : 1
present information when -> you : 1
information when you -> need : 1
when you need -> where : 1
when you need -> to : 1
when you need -> maximum : 1
you need where -> you : 1
need where you -> need : 1
where you need -> i : 1
you need i -> tried : 1
need i tried -> to : 1
i tried to -> balance : 1
tried to balance -> the : 1
to balance the -> need : 1
balance the need -> for : 1
the need for -> a : 2
the need for -> curly : 1
the need for -> large : 1
need for a -> complete : 1
need for a -> complex : 1
for a complete -> description : 2
for a complete -> the : 1
for a complete -> discussion : 1
for a complete -> and : 1
a complete description -> of : 2
complete description of -> each : 1
complete description of -> the : 1
description of each -> language : 1
description of each -> entity : 2
description of each -> operator : 1
of each language -> feature : 1
each language feature -> with : 1
language feature with -> the : 1
feature with the -> desire : 1
with the desire -> to : 1
the desire to -> reduce : 1
desire to reduce -> the : 1
to reduce the -> number : 1
reduce the number -> of : 1
the number of -> cross : 1
the number of -> bits : 7
the number of -> initial : 1
the number of -> it : 1
the number of -> values : 1
the number of -> bytes : 16
the number of -> elements : 20
the number of -> objects : 1
the number of -> and : 1
the number of -> instances : 1
the number of -> decimal : 2
the number of -> items : 19
the number of -> increments : 1
the number of -> characters : 28
the number of -> algorithms : 1
the number of -> times : 3
the number of -> negative : 1
the number of -> comparisons : 8
the number of -> digits : 3
the number of -> lines : 1
the number of -> remaining : 1
the number of -> open : 1
the number of -> complete : 1
the number of -> unique : 1
the number of -> wide : 6
the number of -> transformed : 1
the number of -> seconds : 1
the number of -> clock : 1
the number of -> points : 2
the number of -> for : 1
the number of -> places : 1
the number of -> pairs : 6
the number of -> keys : 2
the number of -> output : 1
the number of -> unnecessary : 1
number of cross -> references : 1
of cross references -> you : 1
of cross references -> to : 1
cross references you -> must : 1
references you must -> chase : 1
you must chase -> before : 1
must chase before -> you : 1
chase before you -> can : 1
before you can -> understand : 1
you can understand -> that : 1
can understand that -> language : 1
understand that language -> are : 1
that language are -> more : 1
language are more -> detailed : 1
are more detailed -> descriptions : 1
more detailed descriptions -> of : 1
detailed descriptions of -> each : 1
detailed descriptions of -> all : 1
detailed descriptions of -> the : 1
descriptions of each -> describes : 1
of each describes -> the : 1
each describes the -> basic : 1
describes the basic -> rules : 1
the basic rules -> for : 2
basic rules for -> the : 2
rules for the -> character : 1
rules for the -> such : 1
for the character -> and : 1
for the character -> sets : 1
for the character -> when : 1
for the character -> sequence : 1
for the character -> at : 1
the character and -> so : 1
the character and -> other : 1
the character and -> returns : 1
the character and -> the : 1
the character and -> sets : 1
character and so -> describes : 1
character and so -> for : 1
and so describes -> how : 1
and so describes -> a : 1
so describes how -> and : 1
describes how and -> namespaces : 1
how and namespaces -> are : 1
and namespaces are -> declared : 1
and namespaces are -> similar : 1
namespaces are declared -> and : 1
are declared and -> how : 1
declared and how -> names : 1
and how names -> are : 1
how names are -> looked : 1
names are looked -> describes : 1
names are looked -> up : 4
are looked describes -> and : 1
looked describes and -> type : 1
describes and type -> describes : 1
and type describes -> all : 1
type describes all -> the : 1
describes all the -> describes : 1
describes all the -> in : 1
all the describes -> function : 1
the describes function -> declarations : 1
describes function declarations -> and : 1
function declarations and -> overload : 1
function declarations and -> and : 1
declarations and overload -> argument : 1
and overload argument -> and : 1
overload argument and -> related : 1
argument and related -> describes : 1
and related describes -> classes : 1
related describes classes -> unions : 1
describes classes unions -> and : 1
classes unions and -> virtual : 1
unions and virtual -> and : 1
and virtual and -> multiple : 1
virtual and multiple -> describes : 1
and multiple describes -> class : 1
multiple describes class -> and : 1
describes class and -> function : 1
class and function -> template : 1
class and function -> templates : 1
and function template -> and : 1
and function template -> returns : 4
function template and -> how : 1
function template and -> a : 1
template and how -> templates : 1
and how templates -> are : 1
how templates are -> introduces : 1
how templates are -> a : 1
templates are introduces -> the : 1
are introduces the -> standard : 1
introduces the standard -> library : 1
standard library and -> discusses : 1
standard library and -> some : 1
standard library and -> is : 1
library and discusses -> some : 1
and discusses some -> overarching : 1
discusses some overarching -> such : 1
some overarching such -> as : 1
overarching such as -> traits : 1
such as traits -> and : 1
as traits and -> and : 1
traits and and -> introduces : 1
and and introduces -> the : 2
and introduces the -> portion : 1
and introduces the -> suite : 1
and introduces the -> input : 1
introduces the portion -> of : 1
the portion of -> the : 2
portion of the -> standard : 1
portion of the -> library : 1
of the standard -> topics : 1
of the standard -> exception : 2
of the standard -> recommends : 1
of the standard -> and : 2
of the standard -> library : 5
of the standard -> of : 1
of the standard -> gives : 1
of the standard -> requirements : 1
of the standard -> such : 1
of the standard -> classes : 1
of the standard -> types : 1
of the standard -> the : 2
of the standard -> functions : 1
of the standard -> containers : 1
of the standard -> algorithms : 2
of the standard -> implementations : 1
of the standard -> will : 1
of the standard -> headers : 1
of the standard -> system : 1
of the standard -> see : 2
of the standard -> committee : 2
of the standard -> c : 1
of the standard -> container : 7
of the standard -> stream : 1
of the standard -> objects : 1
of the standard -> by : 1
of the standard -> but : 1
of the standard -> class : 1
of the standard -> although : 1
the standard topics -> include : 1
standard topics include -> formatted : 1
topics include formatted -> and : 1
include formatted and -> unformatted : 1
formatted and unformatted -> stream : 1
and unformatted stream -> and : 1
unformatted stream and -> and : 1
stream and and -> introduces : 1
introduces the suite -> of : 1
the suite of -> container : 1
suite of container -> class : 1
of container class -> their : 1
container class their -> and : 1
class their and -> generic : 1
their and generic -> this : 1
and generic this -> is : 1
and generic this -> chapter : 1
generic this is -> the : 1
this is the -> portion : 1
this is the -> only : 1
is the portion -> of : 1
the library that -> has : 1
library that has -> traditionally : 1
that has traditionally -> been : 1
has traditionally been -> called : 1
traditionally been called -> the : 1
been called the -> standard : 1
called the standard -> template : 1
the standard template -> library : 1
the standard template -> to : 1
standard template library -> is : 1
template library is -> an : 1
library is an -> alphabetical : 1
is an alphabetical -> reference : 2
an alphabetical reference -> for : 2
alphabetical reference for -> the : 2
for the which -> is : 2
for the which -> represents : 1
the which is -> part : 1
the which is -> another : 1
the which is -> returned : 1
the which is -> an : 2
the which is -> known : 1
the which is -> important : 1
the which is -> implemented : 1
the which is -> ordinarily : 1
the which is -> typically : 1
the which is -> the : 1
the which is -> required : 1
which is part -> of : 1
is part of -> the : 6
is part of -> a : 1
part of the -> but : 1
part of the -> token : 1
part of the -> main : 1
part of the -> it : 1
part of the -> return : 1
part of the -> function : 4
part of the -> in : 1
part of the -> statement : 1
part of the -> and : 2
part of the -> for : 1
part of the -> code : 1
part of the -> all : 1
part of the -> the : 1
part of the -> technical : 1
part of the -> c : 1
part of the -> macro : 1
part of the -> imaginary : 1
part of the -> result : 2
part of the -> program : 1
part of the -> standard : 1
part of the -> masked : 1
part of the -> resulting : 1
part of the -> proposed : 1
of the but -> with : 1
of the but -> manipulators : 1
the but with -> a : 2
but with a -> distinct : 1
but with a -> slightly : 1
with a distinct -> set : 1
a distinct set -> of : 1
distinct set of -> syntactic : 1
set of syntactic -> and : 1
of syntactic and -> semantic : 1
syntactic and semantic -> is : 1
and semantic is -> an : 1
semantic is an -> alphabetical : 1
for the language -> and : 1
language and form -> syntax : 1
and form syntax -> descriptions : 1
form syntax descriptions -> are : 1
syntax descriptions are -> given : 1
descriptions are given -> for : 1
are given for -> each : 1
given for each -> keyword : 1
for each keyword -> and : 1
each keyword and -> other : 1
keyword and other -> language : 1
and other language -> with : 1
other language with -> pointers : 1
language with pointers -> to : 1
with pointers to -> the : 1
with pointers to -> employee : 1
pointers to the -> first : 1
pointers to the -> operator : 1
pointers to the -> which : 1
pointers to the -> same : 1
pointers to the -> array : 1
to the first -> seven : 1
to the first -> you : 1
to the first -> type : 1
to the first -> element : 8
to the first -> statement : 1
to the first -> item : 11
to the first -> position : 6
to the first -> of : 1
to the first -> occurrence : 8
to the first -> such : 3
to the first -> time : 1
to the first -> the : 1
to the first -> character : 3
to the first -> argument : 1
to the first -> in : 1
to the first -> matching : 4
to the first -> form : 2
to the first -> pair : 4
seven chapters for -> the : 1
chapters for the -> main : 1
for the main -> reference : 1
the main reference -> is : 1
main reference is -> a : 1
reference is a -> reference : 1
for the entire -> standard : 1
for the entire -> sequence : 1
for the entire -> runtime : 1
for the entire -> merged : 1
the entire standard -> organized : 1
entire standard organized -> alphabetically : 1
standard organized alphabetically -> by : 1
by and alphabetically -> by : 1
and alphabetically by -> name : 1
alphabetically by name -> within : 1
by name within -> each : 1
name within each -> header : 1
within each header -> describes : 1
each header describes -> ways : 1
header describes ways -> that : 1
describes ways that -> some : 1
ways that some -> compilers : 1
that some compilers -> extend : 1
that some compilers -> do : 1
some compilers extend -> the : 2
compilers extend the -> to : 1
compilers extend the -> standard : 1
compilers extend the -> syntax : 1
extend the to -> satisfy : 1
the to satisfy -> customer : 1
to satisfy customer -> to : 1
satisfy customer to -> meet : 1
customer to meet -> and : 1
to meet and -> so : 1
meet and so -> describes : 1
so describes a -> few : 1
describes a few -> open : 1
a few open -> source : 1
few open source -> you : 1
open source you -> can : 1
source you can -> find : 1
source you can -> do : 1
source you can -> define : 1
you can find -> information : 1
you can find -> under : 1
can find information -> about : 1
find information about -> additional : 1
information about additional -> projects : 1
about additional projects -> on : 1
additional projects on -> this : 1
projects on this -> web : 1
on this web -> site : 1
this web site -> defines : 1
this web site -> has : 1
web site defines -> some : 1
site defines some -> words : 1
defines some words -> and : 1
some words and -> phrases : 1
words and phrases -> used : 1
words and phrases -> that : 1
and phrases used -> throughout : 1
phrases used throughout -> this : 1
used throughout this -> book : 1
used throughout this -> a : 1
throughout this book -> and : 1
this book and -> in : 1
book and in -> the : 1
and in the -> the : 1
and in the -> namespaces : 1
and in the -> latter : 1
and in the -> global : 1
and in the -> various : 1
and in the -> range : 1
and in the -> several : 1
and in the -> item : 1
in the the -> the : 1
in the the -> sequence : 1
in the the -> type : 3
in the the -> remaining : 1
in the the -> implementation : 1
in the the -> amount : 1
in the the -> object : 1
in the the -> definition : 1
in the the -> access : 1
in the the -> behavior : 5
in the the -> standard : 2
in the the -> example : 1
in the the -> original : 1
in the the -> iterator : 5
in the the -> mathematical : 1
in the the -> name : 1
in the the -> relationship : 1
in the the -> space : 1
in the the -> of : 2
in the the -> stream : 2
in the the -> usual : 1
in the the -> first : 6
in the the -> complexity : 2
in the the -> number : 5
in the the -> currency : 1
in the the -> decimal : 2
in the the -> grouping : 2
in the the -> negative : 2
in the the -> positive : 2
in the the -> separator : 1
in the the -> thousands : 2
in the the -> flag : 1
in the the -> lower : 2
in the the -> contents : 4
in the the -> item : 1
in the the -> function : 1
in the the -> relative : 1
in the the -> elements : 1
in the the -> aliasing : 1
in the the -> largest : 1
in the the -> sum : 1
the the the -> the : 1
the the the -> examples : 1
the the examples -> in : 1
the examples in -> this : 2
examples in this -> book : 1
examples in this -> chapter : 1
in this book -> are : 1
in this book -> uses : 1
in this book -> reflects : 1
this book are -> compilable : 1
book are compilable -> you : 1
are compilable you -> can : 1
compilable you can -> tell : 1
you can tell -> which : 1
can tell which -> examples : 1
tell which examples -> fall : 1
which examples fall -> into : 1
examples fall into -> this : 1
fall into this -> category : 1
into this category -> because : 1
this category because -> they : 1
category because they -> start : 1
because they start -> with : 1
they start with -> directives : 1
start with directives -> and : 1
with directives and -> contain : 1
directives and contain -> a : 1
and contain a -> you : 1
contain a you -> can : 1
a you can -> download : 1
a you can -> assign : 3
a you can -> pass : 1
a you can -> flatten : 1
a you can -> avoid : 1
a you can -> add : 1
a you can -> use : 2
a you can -> refer : 3
a you can -> write : 1
a you can -> erase : 1
a you can -> also : 1
a you can -> call : 1
a you can -> invoke : 1
you can download -> these : 1
can download these -> examples : 1
download these examples -> as : 1
these examples as -> text : 1
examples as text -> files : 1
as text files -> from : 1
text files from -> the : 1
files from the -> web : 1
from the web -> site : 1
the web site -> at : 1
the web site -> also : 1
the web site -> has : 1
the web site -> thanks : 1
the web site -> for : 1
web site at -> or : 1
web site at -> to : 1
web site at -> for : 1
site at or -> from : 1
at or from -> catalog : 1
or from catalog -> page : 1
from catalog page -> for : 1
catalog page for -> this : 1
page for this -> examples : 1
page for this -> which : 1
for this examples -> are : 1
this examples are -> shortened : 1
examples are shortened -> to : 1
are shortened to -> eliminate : 1
shortened to eliminate -> excess : 1
to eliminate excess -> code : 1
eliminate excess code -> that : 1
excess code that -> might : 1
code that might -> interfere : 1
that might interfere -> with : 1
might interfere with -> the : 1
interfere with the -> clarity : 1
with the clarity -> of : 1
the clarity of -> the : 1
clarity of the -> in : 1
of the in -> these : 1
of the in -> for : 1
of the in -> which : 2
of the in -> a : 2
of the in -> when : 1
of the in -> and : 1
of the in -> the : 4
of the in -> other : 3
of the in -> macro : 1
of the in -> function : 1
of the in -> type : 1
the in these -> examples : 1
in these examples -> are : 1
these examples are -> fragments : 1
examples are fragments -> that : 1
are fragments that -> lack : 1
fragments that lack -> a : 1
that lack a -> an : 1
lack a an -> ellipsis : 1
a an ellipsis -> indicates : 1
an ellipsis indicates -> missing : 1
ellipsis indicates missing -> such : 1
indicates missing such -> as : 1
missing such as -> a : 1
such as a -> function : 2
such as a -> variable : 1
such as a -> class : 1
such as a -> null : 1
such as a -> generalized : 1
such as a -> or : 1
as a function -> in : 1
as a function -> the : 1
as a function -> name : 1
as a function -> argument : 1
as a function -> call : 1
as a function -> virtual : 1
as a function -> type : 1
as a function -> template : 1
as a function -> you : 1
as a function -> or : 1
as a function -> that : 1
as a function -> because : 1
as a function -> return : 1
as a function -> tells : 1
as a function -> especially : 1
as a function -> objects : 1
as a function -> shows : 2
as a function -> employee : 2
as a function -> one : 1
as a function -> earlier : 1
a function in -> other : 1
a function in -> that : 1
a function in -> the : 2
a function in -> which : 1
a function in -> a : 1
a function in -> either : 1
function in other -> the : 1
in other the -> omissions : 1
in other the -> behavior : 1
other the omissions -> are : 1
the omissions are -> clear : 1
omissions are clear -> from : 1
are clear from -> the : 1
clear from the -> most : 1
from the most -> abbreviated : 1
the most abbreviated -> examples : 1
most abbreviated examples -> have : 1
abbreviated examples have -> complete : 1
examples have complete -> and : 1
have complete and -> compilable : 1
complete and compilable -> versions : 1
and compilable versions -> available : 1
compilable versions available -> for : 1
versions available for -> of : 1
available for of -> the : 1
for of the -> examples : 1
for of the -> facets : 1
of the examples -> have : 1
the examples have -> been : 1
examples have been -> checked : 1
have been checked -> with : 1
been checked with -> several : 1
checked with several -> different : 1
with several different -> including : 1
with several different -> ways : 1
several different including -> comeau : 1
different including comeau -> compiler : 1
including comeau compiler -> with : 1
comeau compiler with -> the : 1
compiler with the -> dinkumware : 1
with the dinkumware -> standard : 1
the dinkumware standard -> library : 1
dinkumware standard library -> acknowledged : 1
standard library acknowledged -> as : 1
library acknowledged as -> the : 1
acknowledged as the -> most : 1
as the most -> complete : 1
as the most -> important : 1
the most complete -> and : 1
most complete and -> correct : 1
complete and correct -> implementations : 1
and correct implementations -> of : 1
correct implementations of -> the : 1
implementations of the -> not : 1
of the not -> all : 1
of the not -> the : 1
the not all -> compilers : 1
not all compilers -> can : 1
all compilers can -> compile : 1
compilers can compile -> all : 1
can compile all -> the : 1
compile all the -> examples : 1
all the examples -> due : 1
all the examples -> with : 1
the examples due -> to : 1
examples due to -> limitations : 1
due to limitations -> and : 1
to limitations and -> bugs : 1
limitations and bugs -> in : 1
and bugs in -> the : 1
bugs in the -> compilers : 1
in the compilers -> and : 1
the compilers and -> for : 1
compilers and for -> best : 1
and for best -> try : 1
for best try -> to : 1
best try to -> work : 1
try to work -> with : 1
to work with -> the : 1
to work with -> large : 1
to work with -> see : 1
to work with -> reverse : 1
to work with -> in : 1
to work with -> two : 1
work with the -> latest : 1
with the latest -> version : 1
the latest version -> of : 1
latest version of -> your : 1
version of your -> recent : 1
of your recent -> releases : 1
your recent releases -> of : 1
recent releases of -> several : 1
releases of several -> major : 1
of several major -> compilers : 1
several major compilers -> have : 1
major compilers have -> made : 1
compilers have made -> dramatic : 1
have made dramatic -> progress : 1
made dramatic progress -> toward : 1
dramatic progress toward -> conformance : 1
progress toward conformance -> with : 1
toward conformance with -> the : 1
conformance with the -> when : 1
conformance with the -> including : 1
with the when -> i : 1
the when i -> have : 1
when i have -> tried : 1
i have tried -> to : 1
have tried to -> alter : 1
tried to alter -> the : 1
to alter the -> example : 1
alter the example -> files : 1
the example files -> to : 1
example files to -> work : 1
files to work -> around : 1
to work around -> the : 1
work around the -> bugs : 1
work around the -> problem : 1
around the bugs -> without : 1
the bugs without -> interfering : 1
bugs without interfering -> with : 1
without interfering with -> the : 1
interfering with the -> intent : 1
with the intent -> of : 1
the intent of -> the : 2
intent of the -> have : 1
intent of the -> standard : 1
of the have -> checked : 1
the have checked -> all : 1
have checked all -> the : 1
checked all the -> examples : 1
the examples with -> the : 1
examples with the -> following : 1
with the following -> kylix : 1
with the following -> null : 1
with the following -> cannot : 2
with the following -> tempest : 1
the following kylix -> builder : 1
following kylix builder -> codewarrior : 1
kylix builder codewarrior -> visual : 1
builder codewarrior visual -> used : 1
codewarrior visual used -> in : 1
visual used in -> this : 1
used in this -> used : 1
used in this -> book : 2
used in this -> try : 1
used in this -> their : 1
used in this -> way : 1
in this used -> in : 1
this used in -> this : 1
this book uses -> the : 2
this book uses -> informal : 1
book uses the -> following : 1
book uses the -> phrase : 1
uses the following -> for : 1
the following for -> identifiers : 1
following for identifiers -> and : 1
for identifiers and -> including : 1
identifiers and including -> all : 1
and including all -> in : 1
including all in -> the : 1
all in the -> language : 1
all in the -> range : 6
all in the -> function : 1
in the language -> constant : 1
in the language -> reference : 2
the language constant -> width : 1
language constant width -> shows : 1
constant width shows -> syntax : 1
width shows syntax -> elements : 1
shows syntax elements -> that : 1
syntax elements that -> must : 2
elements that must -> be : 2
that must be -> used : 2
that must be -> replaced : 1
that must be -> a : 1
that must be -> compatible : 1
that must be -> additional : 1
must be used -> exactly : 2
must be used -> in : 2
must be used -> to : 1
be used exactly -> as : 2
used exactly as -> for : 1
used exactly as -> else : 1
exactly as for -> the : 1
as for the -> and : 1
as for the -> template : 1
for the and -> keyword : 1
for the and -> all : 1
for the and -> overloaded : 1
for the and -> the : 1
for the and -> versions : 1
for the and -> it : 1
for the and -> you : 1
for the and -> function : 1
for the and -> conversion : 1
for the and -> types : 1
for the and -> and : 1
for the and -> class : 3
for the and -> a : 1
the and keyword -> must : 1
and keyword must -> be : 1
keyword must be -> used : 1
exactly as else -> function : 1
as else function -> name : 1
else function name -> that : 1
function name that -> is : 1
name that is -> followed : 1
name that is -> declared : 2
that is followed -> by : 2
is followed by -> parentheses : 1
is followed by -> any : 1
is followed by -> a : 6
is followed by -> the : 4
is followed by -> an : 2
followed by parentheses -> refers : 1
by parentheses refers -> to : 1
parentheses refers to -> a : 1
parentheses refers to -> the : 1
refers to a -> function : 1
refers to a -> different : 1
refers to a -> qualified : 1
refers to a -> common : 1
refers to a -> or : 1
refers to a -> single : 1
refers to a -> private : 2
to a function -> typically : 1
to a function -> the : 1
to a function -> parameter : 1
to a function -> body : 1
to a function -> pointer : 2
to a function -> member : 1
to a function -> that : 4
to a function -> and : 1
to a function -> but : 1
to a function -> named : 1
to a function -> or : 1
to a function -> a : 2
to a function -> in : 1
to a function -> is : 1
to a function -> formats : 1
to a function -> converts : 1
to a function -> typename : 1
to a function -> function : 1
a function typically -> to : 1
function typically to -> obtain : 1
typically to obtain -> the : 1
to obtain the -> function : 1
to obtain the -> type : 1
to obtain the -> class : 1
to obtain the -> same : 2
to obtain the -> traits : 1
to obtain the -> value : 1
to obtain the -> and : 1
to obtain the -> resulting : 2
obtain the function -> the : 1
the function the -> function : 2
the function the -> reference : 1
the function the -> temporary : 1
the function the -> qualifiers : 1
the function the -> argument : 1
the function the -> type : 1
the function the -> manages : 1
the function the -> sentry : 1
function the function -> name : 2
function the function -> and : 1
function the function -> in : 1
function the function -> can : 1
function the function -> parameter : 1
the function name -> without : 1
the function name -> lookup : 1
the function name -> and : 2
the function name -> is : 4
the function name -> in : 1
the function name -> has : 1
the function name -> must : 1
the function name -> with : 2
the function name -> matches : 1
the function name -> can : 1
the function name -> as : 1
the function name -> from : 1
function name without -> the : 1
name without the -> parentheses : 1
without the parentheses -> refers : 1
the parentheses refers -> to : 1
refers to the -> function : 1
refers to the -> the : 1
refers to the -> positions : 1
refers to the -> struct : 1
refers to the -> a : 1
refers to the -> number : 2
refers to the -> declare : 1
refers to the -> input : 1
to the function -> in : 3
to the function -> and : 3
to the function -> call : 1
to the function -> returns : 2
to the function -> at : 1
to the function -> if : 1
to the function -> results : 1
to the function -> uses : 1
to the function -> calls : 4
to the function -> string : 1
to the function -> with : 1
the function in -> more : 1
the function in -> results : 1
the function in -> which : 1
the function in -> every : 1
the function in -> a : 2
the function in -> the : 5
the function in -> function : 3
the function in -> this : 1
the function in -> in : 2
the function in -> for : 3
function in more -> general : 1
in more general -> for : 1
more general for -> function : 1
general for function -> returns : 1
for function returns -> if : 1
for function returns -> true : 2
function returns if -> the : 1
function returns if -> is : 1
function returns if -> there : 1
returns if the -> container : 2
returns if the -> operands : 1
returns if the -> sequence : 2
returns if the -> real : 2
returns if the -> facet : 1
returns if the -> two : 1
returns if the -> function : 2
if the container -> is : 6
if the container -> permits : 1
if the container -> requires : 1
the container is -> width : 1
the container is -> some : 1
the container is -> then : 1
the container is -> initialized : 1
the container is -> the : 3
the container is -> as : 1
container is width -> in : 1
is width in -> the : 1
width in the -> language : 1
the language reference -> chapters : 1
the language reference -> for : 1
language reference chapters -> for : 1
reference chapters for -> syntax : 1
chapters for syntax -> elements : 1
for syntax elements -> that : 1
must be replaced -> by : 1
be replaced by -> your : 1
be replaced by -> its : 1
replaced by your -> in : 1
by your in -> the : 1
your in the -> previous : 1
in the previous -> you : 1
in the previous -> the : 2
the previous you -> must : 1
previous you must -> supply : 1
you must supply -> the : 1
you must supply -> an : 2
you must supply -> a : 1
you must supply -> arguments : 1
you must supply -> template : 1
must supply the -> and : 1
supply the and -> the : 1
the and the -> two : 1
the and the -> scope : 1
the and the -> definitions : 1
the and the -> object : 2
the and the -> compiler : 1
the and the -> corresponding : 1
the and the -> relative : 1
the and the -> function : 1
the and the -> specialization : 1
the and the -> final : 1
the and the -> character : 1
the and the -> algorithms : 1
the and the -> standard : 2
the and the -> date : 1
the and the -> time : 1
the and the -> macro : 1
the and the -> member : 2
the and the -> parenthesis : 1
the and the -> following : 1
the and the -> both : 1
the and the -> namespace : 1
and the two -> width : 1
the two width -> in : 1
two width in -> examples : 1
width in examples -> to : 1
in examples to -> highlight : 1
examples to highlight -> key : 1
to highlight key -> and : 1
highlight key and -> in : 1
key and in -> complex : 1
and in complex -> declarations : 1
in complex declarations -> to : 1
complex declarations to -> highlight : 1
declarations to highlight -> the : 1
to highlight the -> name : 1
highlight the name -> being : 1
the name being -> in : 1
the name being -> additional : 1
name being in -> some : 1
being in some -> especially : 1
in some especially -> for : 1
some especially for -> the : 1
especially for the -> name : 1
especially for the -> virtual : 1
for the name -> gets : 1
for the name -> of : 1
the name gets -> buried : 1
name gets buried -> in : 1
gets buried in -> the : 1
buried in the -> middle : 1
in the middle -> of : 8
the middle of -> the : 3
the middle of -> a : 4
the middle of -> another : 3
middle of the -> declaration : 1
middle of the -> all : 2
of the declaration -> and : 2
of the declaration -> or : 1
of the declaration -> in : 1
the declaration and -> can : 1
the declaration and -> later : 1
the declaration and -> instantiation : 1
declaration and can -> be : 1
and can be -> hard : 1
and can be -> in : 1
and can be -> mixed : 1
and can be -> or : 1
and can be -> a : 1
and can be -> called : 1
and can be -> useful : 1
and can be -> at : 1
and can be -> any : 1
and can be -> advanced : 1
and can be -> moved : 1
can be hard -> to : 2
be hard to -> in : 1
be hard to -> so : 1
hard to in -> the : 1
hard to in -> nested : 1
to in the -> language : 1
to in the -> underlying : 1
to in the -> standard : 1
to in the -> string : 2
language reference for -> nonterminal : 1
reference for nonterminal -> syntax : 1
for nonterminal syntax -> italic : 1
nonterminal syntax italic -> is : 1
syntax italic is -> also : 1
italic is also -> used : 1
is also used -> for : 2
is also used -> as : 1
also used for -> and : 1
also used for -> the : 1
used for and -> for : 1
used for and -> the : 2
used for and -> and : 1
for and for -> the : 1
for and for -> a : 1
and for the -> first : 1
and for the -> suffix : 1
and for the -> simple : 1
and for the -> streams : 1
and for the -> library : 1
and for the -> which : 1
and for the -> rules : 1
and for the -> fundamental : 1
and for the -> property : 1
for the first -> use : 1
for the first -> two : 1
for the first -> set : 1
for the first -> item : 1
for the first -> character : 5
for the first -> statement : 1
for the first -> call : 1
the first use -> of : 1
the first use -> reinterprets : 1
first use of -> a : 1
use of a -> technical : 1
use of a -> name : 1
use of a -> loop : 1
use of a -> it : 1
use of a -> function : 3
use of a -> local : 1
use of a -> class : 1
of a technical -> statements : 1
a technical statements -> and : 1
technical statements and -> declarations : 1
statements and declarations -> that : 1
and declarations that -> have : 1
declarations that have -> been : 1
that have been -> removed : 1
that have been -> hidden : 2
that have been -> and : 1
that have been -> added : 1
that have been -> fully : 1
have been removed -> for : 1
been removed for -> the : 1
removed for the -> sake : 1
for the sake -> of : 9
the sake of -> brevity : 1
the sake of -> are : 1
the sake of -> array : 1
the sake of -> for : 1
the sake of -> whenever : 1
the sake of -> entire : 1
the sake of -> every : 1
the sake of -> the : 1
the sake of -> shared : 1
sake of brevity -> and : 1
of brevity and -> an : 1
brevity and an -> ellipsis : 1
and an ellipsis -> is : 1
an ellipsis is -> also : 1
an ellipsis is -> a : 1
an ellipsis is -> the : 1
ellipsis is also -> a : 1
is also a -> symbol : 1
is also a -> constant : 1
also a symbol -> in : 1
a symbol in -> but : 1
symbol in but -> context : 1
in but context -> and : 1
but context and -> comments : 1
context and comments -> make : 1
and comments make -> it : 1
comments make it -> clear : 1
make it clear -> when : 1
make it clear -> which : 1
it clear when -> an : 1
clear when an -> ellipsis : 1
when an ellipsis -> is : 2
ellipsis is a -> language : 1
is a language -> element : 1
a language element -> and : 1
language element and -> when : 1
element and when -> it : 1
and when it -> represents : 1
when it represents -> omitted : 1
it represents omitted -> a : 1
represents omitted a -> range : 1
omitted a range -> of : 1
a range of -> values : 1
a range of -> typically : 1
a range of -> the : 1
a range of -> case : 1
range of values -> from : 1
range of values -> for : 1
range of values -> is : 1
of values from -> to : 1
values from to -> including : 1
values from to -> the : 2
from to including -> and : 1
from to including -> but : 1
to including and -> excluding : 1
including and excluding -> icon : 1
and excluding icon -> indicates : 1
excluding icon indicates -> a : 1
icon indicates a -> or : 1
icon indicates a -> warning : 1
indicates a or -> general : 1
a or general -> icon : 1
or general icon -> indicates : 1
general icon indicates -> a : 1
indicates a warning -> or : 1
a warning or -> with : 1
warning or with -> no : 1
or with no -> icon : 1
or with no -> universal : 1
or with no -> identifiers : 1
or with no -> c : 1
with no icon -> indicates : 1
no icon indicates -> an : 1
icon indicates an -> issue : 1
indicates an issue -> or : 1
an issue or -> feature : 1
issue or feature -> that : 1
or feature that -> might : 1
feature that might -> affect : 1
that might affect -> the : 1
might affect the -> portability : 1
affect the portability -> of : 1
the portability of -> your : 1
portability of your -> in : 1
of your in -> some : 1
your in some -> aspects : 1
in some aspects -> of : 1
some aspects of -> are : 1
some aspects of -> such : 1
aspects of are -> such : 1
of are such -> as : 1
are such as -> the : 1
such as the -> size : 1
such as the -> with : 1
such as the -> to : 1
such as the -> chinese : 1
such as the -> user : 1
such as the -> signal : 1
such as the -> smart : 1
as the size -> of : 5
the size of -> an : 6
the size of -> is : 1
the size of -> a : 7
the size of -> the : 21
the size of -> each : 2
the size of -> other : 1
the size of -> so : 1
the size of -> must : 1
the size of -> various : 1
the size of -> this : 1
size of an -> which : 1
size of an -> enumerated : 1
size of an -> parameter : 1
size of an -> integer : 1
size of an -> array : 1
size of an -> object : 1
size of an -> is : 1
of an which -> allows : 1
an which allows -> the : 1
which allows the -> compiler : 1
allows the compiler -> or : 1
the compiler or -> library : 1
the compiler or -> if : 1
compiler or library -> author : 1
or library author -> to : 1
library author to -> decide : 1
author to decide -> what : 1
to decide what -> the : 1
decide what the -> best : 1
what the best -> implementation : 1
the best implementation -> should : 1
best implementation should -> more : 1
implementation should more -> more : 1
should more more -> the : 1
more more the -> in : 1
more the in -> a : 1
the in a -> web : 1
the in a -> multidimensional : 1
the in a -> the : 1
the in a -> single : 1
the in a -> function : 2
in a web -> site : 1
a web site -> at : 1
site at to -> find : 1
at to find -> links : 1
to find links -> to : 1
find links to -> frequently : 1
links to frequently -> asked : 1
to frequently asked -> tool : 1
frequently asked tool -> and : 1
asked tool and -> library : 1
tool and library -> web : 1
and library web -> free : 1
library web free -> open : 1
web free open -> source : 1
free open source -> other : 1
open source other -> and : 1
source other and -> the : 1
other and the -> web : 1
and the web -> site : 1
web site also -> has : 1
site also has -> information : 1
also has information -> about : 1
has information about -> the : 2
information about the -> ongoing : 1
information about the -> status : 1
information about the -> and : 3
information about the -> expression : 1
information about the -> standard : 3
information about the -> return : 1
information about the -> is : 1
information about the -> special : 1
information about the -> boost : 1
information about the -> the : 1
information about the -> alternative : 1
information about the -> in : 1
information about the -> templates : 2
information about the -> class : 4
information about the -> mask : 1
information about the -> native : 1
information about the -> refer : 2
information about the -> see : 1
information about the -> default : 1
information about the -> base : 1
about the ongoing -> activities : 1
the ongoing activities -> of : 1
ongoing activities of -> the : 1
activities of the -> standardization : 1
of the standardization -> you : 1
the standardization you -> are : 1
standardization you are -> a : 1
you are a -> glutton : 1
are a glutton -> for : 1
a glutton for -> or : 1
glutton for or -> if : 1
for or if -> you : 1
for or if -> the : 1
or if you -> need : 3
or if you -> use : 1
or if you -> want : 1
if you need -> more : 1
if you need -> to : 6
if you need -> a : 1
you need more -> details : 1
need more details -> than : 1
more details than -> are : 1
details than are -> provided : 1
than are provided -> in : 1
are provided in -> this : 1
provided in this -> you : 1
in this you -> might : 1
in this you -> cannot : 1
in this you -> want : 1
in this you -> can : 1
this you might -> want : 1
you might want -> to : 4
might want to -> read : 1
might want to -> overload : 1
might want to -> use : 2
want to read -> the : 1
want to read -> a : 1
to read the -> actual : 1
to read the -> as : 1
to read the -> input : 1
to read the -> named : 1
to read the -> textual : 1
to read the -> resulting : 1
read the actual -> the : 1
the actual the -> standard : 1
actual the standard -> is : 1
the standard is -> not : 1
the standard is -> the : 1
the standard is -> purposely : 1
the standard is -> a : 1
the standard is -> built : 1
the standard is -> but : 1
the standard is -> global : 2
standard is not -> easy : 1
standard is not -> explicit : 1
is not easy -> to : 1
not easy to -> and : 1
easy to and -> even : 1
to and even -> its : 1
and even its -> authors : 1
even its authors -> sometimes : 1
its authors sometimes -> disagree : 1
authors sometimes disagree -> on : 1
sometimes disagree on -> its : 1
disagree on its -> it : 1
on its it -> is : 1
its it is -> the : 1
its it is -> replaced : 1
it is the -> one : 1
it is the -> name : 3
it is the -> logical : 2
it is the -> is : 2
it is the -> first : 1
it is the -> symbol : 1
it is the -> member : 1
it is the -> only : 1
it is the -> value : 1
it is the -> so : 1
it is the -> macro : 1
it is the -> same : 1
it is the -> equivalent : 1
it is the -> number : 2
it is the -> base : 1
it is the -> default : 1
it is the -> function : 1
is the one -> specification : 1
is the one -> even : 1
is the one -> that : 2
is the one -> with : 1
is the one -> or : 2
the one specification -> for : 1
one specification for -> the : 1
specification for the -> and : 1
the and all -> other : 1
and all other -> including : 1
and all other -> objects : 1
all other including -> this : 1
other including this -> are : 1
including this are -> subject : 1
this are subject -> to : 1
are subject to -> error : 1
are subject to -> memory : 1
subject to error -> and : 1
to error and -> the : 1
error and the -> standard : 1
and the standard -> library : 1
and the standard -> algorithms : 1
and the standard -> does : 1
and the standard -> streams : 1
and the standard -> function : 1
standard library includes -> the : 3
standard library includes -> several : 1
library includes the -> entire : 2
library includes the -> c : 1
library includes the -> following : 1
library includes the -> class : 1
includes the entire -> c : 2
the entire c -> standard : 2
entire c standard -> which : 1
entire c standard -> library : 1
c standard which -> is : 1
c standard which -> declares : 8
standard which is -> documented : 1
which is documented -> in : 1
is documented in -> plus : 1
documented in plus -> amendment : 1
in plus amendment -> c : 1
plus amendment c -> and : 1
amendment c and -> standards : 1
c and standards -> are : 1
and standards are -> evolving : 1
standards are evolving -> the : 1
are evolving the -> committees : 1
evolving the committees -> meet : 1
the committees meet -> regularly : 1
committees meet regularly -> to : 1
meet regularly to -> review : 1
regularly to review -> defect : 1
to review defect -> reports : 1
review defect reports -> and : 1
defect reports and -> proposals : 1
reports and proposals -> for : 1
and proposals for -> language : 1
proposals for language -> as : 1
for language as -> i : 1
language as i -> write : 1
as i write -> the : 1
i write the -> standard : 1
write the standard -> committee : 1
the standard committee -> has : 1
the standard committee -> is : 1
the standard committee -> as : 1
the standard committee -> might : 1
standard committee has -> approved : 1
committee has approved -> a : 1
has approved a -> technical : 1
approved a technical -> corrigendum : 1
a technical corrigendum -> which : 1
technical corrigendum which -> is : 1
corrigendum which is -> an : 1
which is an -> update : 1
which is an -> rvalue : 1
which is an -> iterator : 4
which is an -> output : 1
which is an -> instance : 3
which is an -> object : 1
which is an -> constant : 1
is an update -> to : 1
an update to -> the : 1
update to the -> standard : 1
to the standard -> that : 1
to the standard -> the : 1
to the standard -> containers : 1
to the standard -> iterator : 1
to the standard -> as : 1
to the standard -> error : 1
to the standard -> c : 1
to the standard -> output : 1
to the standard -> by : 1
to the standard -> see : 1
to the standard -> hashed : 1
the standard that -> corrects : 1
the standard that -> contains : 1
standard that corrects -> defects : 1
that corrects defects -> and : 1
corrects defects and -> removes : 1
defects and removes -> ambiguities : 1
and removes ambiguities -> in : 1
removes ambiguities in -> the : 1
ambiguities in the -> original : 1
in the original -> is : 1
in the original -> function : 1
in the original -> because : 1
in the original -> this : 1
in the original -> if : 1
the original is -> winding : 1
original is winding -> its : 1
is winding its -> way : 1
winding its way -> through : 1
its way through -> the : 1
way through the -> iso : 1
through the iso -> by : 1
the iso by -> the : 1
iso by the -> time : 1
by the time -> you : 2
the time you -> read : 2
time you read -> will : 1
time you read -> the : 1
you read will -> have : 1
read will have -> probably : 1
will have probably -> completed : 1
have probably completed -> its : 1
probably completed its -> journey : 1
completed its journey -> and : 1
its journey and -> been : 1
journey and been -> added : 1
and been added -> to : 1
been added to -> the : 1
added to the -> official : 1
added to the -> target : 1
added to the -> current : 2
added to the -> list : 3
added to the -> class : 1
added to the -> scope : 2
added to the -> an : 1
added to the -> standard : 1
added to the -> end : 3
added to the -> position : 1
added to the -> resulting : 1
to the official -> standard : 1
the official standard -> for : 1
official standard for -> the : 1
standard for the -> programming : 1
for the programming -> the : 1
the programming the -> web : 1
programming the web -> site : 1
web site has -> information : 1
web site has -> links : 1
site has information -> about : 1
about the status -> of : 1
the status of -> the : 1
the status of -> an : 1
status of the -> and : 1
of the and -> c : 1
of the and -> execution : 2
of the and -> parts : 1
of the and -> so : 1
of the and -> alignment : 1
of the and -> the : 3
of the and -> those : 1
of the and -> and : 1
of the and -> is : 1
of the and -> subsequent : 1
of the and -> macros : 1
of the and -> negative : 2
of the and -> members : 1
of the and -> a : 3
of the and -> arrays : 1
of the and -> thereby : 1
the and c -> and : 1
and c and -> and : 1
c and and -> address : 1
and and address -> comments : 1
and address comments -> and : 1
address comments and -> questions : 1
comments and questions -> concerning : 1
and questions concerning -> this : 1
questions concerning this -> book : 1
concerning this book -> to : 1
this book to -> the : 1
this book to -> my : 1
book to the -> gravenstein : 1
to the gravenstein -> highway : 1
the gravenstein highway -> ca : 1
gravenstein highway ca -> the : 1
highway ca the -> united : 1
ca the united -> states : 1
the united states -> or : 1
the united states -> is : 1
united states or -> is : 1
states or is -> a : 1
or is a -> web : 1
is a web -> page : 1
a web page -> for : 1
web page for -> this : 1
for this which -> lists : 1
this which lists -> or : 1
which lists or -> any : 1
lists or any -> additional : 1
or any additional -> you : 1
any additional you -> can : 1
additional you can -> access : 1
additional you can -> use : 1
you can access -> this : 1
can access this -> page : 1
access this page -> comment : 1
this page comment -> or : 1
page comment or -> ask : 1
comment or ask -> technical : 1
or ask technical -> questions : 1
ask technical questions -> about : 1
technical questions about -> this : 1
questions about this -> send : 1
about this send -> email : 1
this send email -> more : 1
send email more -> information : 1
email more information -> about : 1
more information about -> resource : 1
more information about -> see : 1
more information about -> with : 2
more information about -> empty : 1
more information about -> type : 3
more information about -> overloaded : 2
more information about -> pod : 6
more information about -> storage : 5
more information about -> function : 2
more information about -> templates : 1
more information about -> as : 1
more information about -> overloading : 1
more information about -> for : 1
more information about -> the : 8
more information about -> declarations : 1
more information about -> static : 1
more information about -> virtual : 2
more information about -> unsigned : 1
more information about -> can : 1
more information about -> specifiers : 1
more information about -> returning : 1
more information about -> declarators : 1
more information about -> constructor : 1
more information about -> to : 1
more information about -> elaborated : 1
more information about -> initializing : 1
more information about -> name : 2
more information about -> shows : 1
more information about -> blocks : 1
more information about -> cast : 1
more information about -> this : 1
more information about -> a : 1
more information about -> these : 1
more information about -> you : 1
more information about -> and : 1
more information about -> including : 1
more information about -> using : 1
more information about -> is : 1
more information about -> character : 2
more information about -> that : 1
more information about -> input : 1
more information about -> working : 1
more information about -> programmers : 1
more information about -> uses : 1
more information about -> expressions : 1
more information about -> most : 1
information about resource -> and : 1
about resource and -> the : 1
resource and the -> see : 1
and the see -> the : 1
and the see -> also : 1
the see the -> web : 1
the see the -> examples : 1
see the web -> site : 1
web site thanks -> go : 1
site thanks go -> to : 1
thanks go to -> my : 1
go to my -> technical : 1
to my technical -> ron : 1
my technical ron -> uwe : 1
technical ron uwe -> and : 1
ron uwe and -> bruce : 1
uwe and bruce -> their : 1
and bruce their -> corrections : 1
bruce their corrections -> and : 1
their corrections and -> suggestions : 1
corrections and suggestions -> have : 1
and suggestions have -> greatly : 1
suggestions have greatly -> improved : 1
have greatly improved -> this : 1
greatly improved this -> posted : 1
improved this posted -> early : 1
this posted early -> drafts : 1
posted early drafts -> of : 1
early drafts of -> this : 1
drafts of this -> book : 1
book to my -> web : 1
to my web -> and : 1
my web and -> solicited : 1
web and solicited -> david : 1
and solicited david -> cattarin : 1
solicited david cattarin -> and : 1
david cattarin and -> roshan : 1
cattarin and roshan -> naik : 1
and roshan naik -> were : 1
roshan naik were -> especially : 1
naik were especially -> i : 1
were especially i -> thank : 1
especially i thank -> everyone : 1
i thank everyone -> who : 1
thank everyone who -> also : 1
everyone who also -> provided : 1
who also provided -> david : 1
also provided david -> frank : 1
provided david frank -> cyrille : 1
david frank cyrille -> jerry : 1
frank cyrille jerry -> buster : 1
cyrille jerry buster -> gerhard : 1
jerry buster gerhard -> nicolas : 1
buster gerhard nicolas -> jarrod : 1
gerhard nicolas jarrod -> james : 1
nicolas jarrod james -> michael : 1
jarrod james michael -> clare : 1
james michael clare -> thomas : 1
michael clare thomas -> brian : 1
clare thomas brian -> jeff : 1
thomas brian jeff -> allan : 1
brian jeff allan -> torsten : 1
jeff allan torsten -> and : 1
allan torsten and -> john : 1
torsten and john -> to : 1
and john to -> comeau : 1
john to comeau -> and : 1
to comeau and -> microsoft : 1
comeau and microsoft -> for : 1
and microsoft for -> giving : 1
microsoft for giving -> me : 1
for giving me -> free : 1
giving me free -> versions : 1
me free versions -> of : 1
free versions of -> their : 1
versions of their -> compilers : 1
of their compilers -> and : 1
their compilers and -> libraries : 1
compilers and libraries -> to : 1
and libraries to -> use : 1
libraries to use -> while : 1
to use while -> preparing : 1
use while preparing -> this : 1
while preparing this -> thanks : 1
preparing this thanks -> also : 1
this thanks also -> to : 1
thanks also to -> intel : 1
also to intel -> for : 1
to intel for -> making : 1
intel for making -> its : 1
for making its -> compiler : 1
making its compiler -> freely : 1
its compiler freely -> available : 1
compiler freely available -> to : 1
freely available to -> download : 1
available to download -> for : 1
to download for -> evaluation : 1
download for evaluation -> i : 1
for evaluation i -> thank : 1
evaluation i thank -> vmware : 1
i thank vmware -> for : 1
thank vmware for -> licenses : 1
vmware for licenses -> to : 1
for licenses to -> its : 1
licenses to its -> virtual : 1
to its virtual -> machine : 1
its virtual machine -> thank : 1
virtual machine thank -> my : 1
machine thank my -> jonathan : 1
thank my jonathan -> for : 1
my jonathan for -> his : 1
jonathan for his -> patience : 1
for his patience -> and : 1
his patience and -> of : 1
patience and of -> i : 1
and of i -> thank : 1
of i thank -> my : 1
i thank my -> and : 1
thank my and -> my : 1
my and my -> for : 1
and my for -> their : 1
my for their -> love : 1
for their love -> and : 1
their love and -> without : 1
love and without -> which : 1
and without which -> i : 1
without which i -> could : 1
which i could -> not : 1
i could not -> have : 1
could not have -> written : 1
not have written -> this : 1
have written this -> is : 1
written this is -> a : 1
this is a -> programming : 1
this is a -> comment : 1
this is a -> second : 1
this is a -> must : 1
this is a -> good : 1
is a programming -> language : 1
is a programming -> albeit : 1
a programming language -> that : 1
programming language that -> supports : 1
language that supports -> and : 1
that supports and -> generic : 1
supports and generic -> this : 1
generic this chapter -> presents : 1
this chapter presents -> the : 1
this chapter presents -> information : 1
this chapter presents -> an : 1
this chapter presents -> each : 1
chapter presents the -> basic : 1
presents the basic -> rules : 1
for the such -> as : 1
the such as -> lexical : 1
the such as -> an : 1
the such as -> use : 1
such as lexical -> rules : 1
as lexical rules -> and : 1
lexical rules and -> basic : 1
rules and basic -> syntax : 1
and basic syntax -> source : 1
basic syntax source -> file : 1
syntax source file -> undergoes : 1
source file undergoes -> many : 1
file undergoes many -> transformations : 1
undergoes many transformations -> on : 1
many transformations on -> its : 1
transformations on its -> way : 1
on its way -> to : 1
its way to -> becoming : 1
way to becoming -> an : 1
to becoming an -> executable : 1
becoming an executable -> the : 1
an executable the -> initial : 1
executable the initial -> steps : 1
the initial steps -> involve : 1
initial steps involve -> processing : 1
steps involve processing -> all : 1
involve processing all -> the : 1
processing all the -> and : 1
all the and -> conditional : 1
the and conditional -> preprocessing : 1
and conditional preprocessing -> directives : 1
conditional preprocessing directives -> to : 1
preprocessing directives to -> produce : 1
directives to produce -> what : 1
to produce what -> the : 1
produce what the -> standard : 1
what the standard -> calls : 1
the standard calls -> a : 1
standard calls a -> translation : 1
calls a translation -> units : 1
a translation units -> are : 1
translation units are -> important : 1
units are important -> because : 1
are important because -> they : 1
important because they -> have : 1
because they have -> no : 1
they have no -> dependencies : 1
have no dependencies -> on : 1
no dependencies on -> other : 1
dependencies on other -> programmers : 1
on other programmers -> still : 1
other programmers still -> speak : 1
programmers still speak -> in : 1
still speak in -> terms : 1
speak in terms -> of : 1
in terms of -> source : 1
in terms of -> statement : 1
in terms of -> the : 2
in terms of -> and : 3
in terms of -> algorithms : 1
in terms of -> an : 1
in terms of -> const : 1
in terms of -> temporary : 1
terms of source -> even : 1
of source even -> if : 1
source even if -> they : 1
even if they -> actually : 1
even if they -> do : 2
even if they -> are : 1
even if they -> both : 1
even if they -> have : 1
if they actually -> mean : 1
they actually mean -> translation : 1
actually mean translation -> so : 1
mean translation so -> this : 1
translation so this -> book : 1
so this book -> uses : 1
uses the phrase -> because : 1
the phrase because -> it : 1
phrase because it -> is : 1
because it is -> familiar : 1
because it is -> a : 1
because it is -> buried : 1
because it is -> the : 1
it is familiar -> to : 1
is familiar to -> most : 1
familiar to most -> the : 1
to most the -> term : 1
most the term -> encompasses : 1
the term encompasses -> compilation : 1
term encompasses compilation -> and : 1
encompasses compilation and -> although : 1
compilation and although -> most : 1
and although most -> translators : 1
although most translators -> are : 1
most translators are -> this : 1
translators are this -> section : 1
are this section -> discusses : 1
are this section -> describes : 1
this section discusses -> how : 1
this section discusses -> function : 1
this section discusses -> these : 1
this section discusses -> both : 1
section discusses how -> reads : 1
discusses how reads -> and : 1
how reads and -> compiles : 1
reads and compiles -> source : 1
and compiles source -> files : 1
compiles source files -> program : 1
source files program -> can : 1
files program can -> be : 1
program can be -> made : 1
can be made -> from : 1
can be made -> smaller : 1
be made from -> many : 1
made from many -> source : 1
from many source -> and : 1
many source and -> each : 1
source and each -> file : 1
source and each -> source : 1
and each file -> can : 1
each file can -> be : 1
file can be -> compiled : 1
can be compiled -> the : 1
be compiled the -> compilation : 1
compiled the compilation -> process : 1
the compilation process -> has : 1
the compilation process -> reads : 1
the compilation process -> a : 1
compilation process has -> several : 1
process has several -> steps : 1
has several steps -> a : 1
several steps a -> compiler : 1
steps a compiler -> can : 1
a compiler can -> merge : 1
compiler can merge -> or : 1
can merge or -> otherwise : 1
merge or otherwise -> modify : 1
or otherwise modify -> steps : 1
otherwise modify steps -> if : 1
modify steps if -> it : 1
steps if it -> can : 1
if it can -> do : 1
it can do -> so : 1
it can do -> and : 1
it can do -> is : 1
can do so -> without : 1
do so without -> affecting : 1
so without affecting -> the : 1
without affecting the -> observable : 1
affecting the observable -> physical : 1
the observable physical -> characters : 1
observable physical characters -> from : 1
physical characters from -> the : 1
characters from the -> source : 1
characters from the -> storing : 1
characters from the -> string : 3
characters from the -> contents : 1
characters from the -> wide : 1
characters from the -> input : 3
characters from the -> stream : 2
characters from the -> starting : 2
from the source -> file : 1
from the source -> character : 2
from the source -> to : 1
the source file -> and : 1
the source file -> as : 2
the source file -> from : 1
the source file -> in : 1
the source file -> where : 1
the source file -> being : 2
the source file -> at : 1
source file and -> translate : 1
file and translate -> the : 1
and translate the -> characters : 1
translate the characters -> to : 1
the characters to -> the : 1
the characters to -> if : 1
characters to the -> source : 1
characters to the -> locale : 1
characters to the -> end : 2
characters to the -> corresponding : 1
characters to the -> string : 1
characters to the -> or : 1
characters to the -> external : 1
characters to the -> output : 2
characters to the -> stream : 1
characters to the -> characters : 2
characters to the -> first : 2
characters to the -> value : 1
characters to the -> character : 1
to the source -> character : 1
to the source -> wide : 1
the source character -> set : 4
the source character -> plus : 1
the source character -> that : 1
source character set -> in : 1
source character set -> it : 1
source character set -> to : 1
source character set -> or : 1
character set in -> later : 1
set in later -> in : 1
in later in -> this : 5
later in this -> the : 9
later in this -> each : 1
later in this -> of : 1
later in this -> chapter : 32
later in this -> start : 1
later in this -> define : 1
later in this -> can : 2
later in this -> functions : 1
later in this -> members : 1
later in this -> in : 2
later in this -> section : 18
later in this -> an : 4
later in this -> all : 1
later in this -> to : 1
later in this -> a : 2
later in this -> shows : 1
later in this -> bodies : 1
later in this -> or : 1
later in this -> you : 1
later in this -> int : 1
later in this -> class : 1
later in this -> complete : 1
later in this -> but : 1
later in this -> and : 1
later in this -> chart : 1
in this the -> source : 1
in this the -> compiler : 2
in this the -> global : 1
in this the -> used : 1
in this the -> first : 2
in this the -> is : 1
in this the -> casts : 1
in this the -> initializer : 1
in this the -> array : 1
in this the -> same : 1
in this the -> standard : 2
in this the -> descriptions : 1
this the source -> is : 1
the source is -> not : 1
source is not -> necessarily : 1
is not necessarily -> a : 5
is not necessarily -> equivalent : 1
is not necessarily -> wasting : 1
is not necessarily -> the : 3
is not necessarily -> equal : 1
is not necessarily -> function : 1
is not necessarily -> is : 1
not necessarily a -> physical : 1
not necessarily a -> it : 1
not necessarily a -> function : 1
not necessarily a -> valid : 2
necessarily a physical -> an : 1
a physical an -> implementation : 1
physical an implementation -> for : 1
an implementation for -> retrieve : 1
an implementation for -> in : 1
implementation for retrieve -> the : 1
for retrieve the -> source : 1
retrieve the source -> from : 1
the source from -> a : 1
source from a -> trigraph : 1
from a trigraph -> sequences : 1
a trigraph sequences -> are : 1
trigraph sequences are -> reduced : 1
trigraph sequences are -> shown : 1
sequences are reduced -> to : 1
are reduced to -> their : 1
reduced to their -> equivalent : 1
to their equivalent -> characters : 1
to their equivalent -> not : 1
their equivalent characters -> later : 1
equivalent characters later -> in : 1
characters later in -> this : 1
in this each -> native : 1
this each native -> character : 1
each native character -> or : 1
native character or -> character : 1
character or character -> sequence : 1
or character sequence -> is : 1
character sequence is -> replaced : 1
sequence is replaced -> by : 1
is replaced by -> a : 1
is replaced by -> the : 1
is replaced by -> its : 3
replaced by a -> newline : 1
replaced by a -> string : 1
by a newline -> a : 1
by a newline -> delete : 1
a newline a -> character : 1
newline a character -> is : 1
a character is -> followed : 1
a character is -> or : 1
a character is -> alphanumeric : 1
a character is -> a : 4
a character is -> graphical : 1
a character is -> lowercase : 1
a character is -> printable : 1
a character is -> punctuation : 1
a character is -> whitespace : 1
a character is -> uppercase : 1
a character is -> returned : 2
a character is -> pushed : 1
character is followed -> immediately : 1
is followed immediately -> by : 1
followed immediately by -> a : 1
immediately by a -> newline : 1
a newline delete -> the : 1
newline delete the -> backslash : 1
delete the backslash -> and : 1
the backslash and -> the : 1
backslash and the -> the : 1
and the the -> combination : 1
the the combination -> must : 1
the combination must -> not : 1
combination must not -> fall : 1
must not fall -> in : 1
not fall in -> the : 1
fall in the -> middle : 1
middle of a -> universal : 1
middle of a -> compound : 1
middle of a -> multibyte : 1
middle of a -> block : 1
of a universal -> character : 1
a universal character -> and : 1
a universal character -> escape : 1
a universal character -> maps : 1
a universal character -> to : 1
a universal character -> you : 1
universal character and -> must : 1
character and must -> not : 1
and must not -> be : 1
and must not -> add : 1
and must not -> the : 1
must not be -> at : 1
must not be -> if : 1
must not be -> nor : 1
must not be -> a : 1
must not be -> in : 1
not be at -> the : 1
be at the -> end : 1
at the end -> of : 21
the end of -> a : 5
the end of -> the : 92
the end of -> is : 1
the end of -> this : 1
the end of -> every : 1
the end of -> and : 1
the end of -> use : 1
the end of -> an : 1
the end of -> each : 1
the end of -> overwriting : 3
the end of -> at : 2
the end of -> you : 1
end of a -> it : 1
end of a -> a : 1
end of a -> two : 1
end of a -> range : 2
end of a -> is : 1
of a it -> can : 1
of a it -> causes : 1
of a it -> also : 1
of a it -> must : 2
of a it -> means : 1
a it can -> be : 2
a it can -> create : 1
a it can -> appear : 1
it can be -> used : 11
it can be -> so : 1
it can be -> found : 1
it can be -> an : 1
it can be -> called : 3
it can be -> a : 3
it can be -> copied : 1
it can be -> but : 1
it can be -> if : 1
it can be -> any : 1
it can be -> combined : 2
it can be -> for : 2
it can be -> extremely : 1
it can be -> difficult : 1
can be used -> in : 11
can be used -> as : 10
can be used -> on : 1
can be used -> only : 12
can be used -> to : 16
can be used -> for : 5
can be used -> more : 1
can be used -> without : 1
can be used -> by : 4
can be used -> with : 8
can be used -> within : 3
can be used -> freely : 1
can be used -> alone : 1
can be used -> if : 1
can be used -> an : 1
can be used -> double : 1
can be used -> when : 1
be used in -> a : 5
be used in -> headers : 1
be used in -> other : 2
be used in -> an : 2
be used in -> constructors : 1
be used in -> both : 1
be used in -> the : 3
be used in -> abstract : 1
be used in -> subsequent : 1
be used in -> place : 1
be used in -> different : 1
be used in -> many : 1
used in a -> character : 1
used in a -> parameter : 1
used in a -> class : 1
used in a -> function : 2
used in a -> continue : 1
used in a -> member : 1
used in a -> the : 1
used in a -> namespace : 1
used in a -> sequence : 1
used in a -> conditional : 1
used in a -> range : 1
in a character -> or : 2
a character or -> string : 2
a character or -> a : 3
character or string -> or : 1
character or string -> they : 1
character or string -> is : 1
or string or -> to : 1
string or to -> continue : 1
or to continue -> a : 1
to continue a -> preprocessor : 1
continue a preprocessor -> directive : 1
a preprocessor directive -> or : 1
preprocessor directive or -> comment : 1
directive or comment -> on : 1
or comment on -> multiple : 1
comment on multiple -> a : 1
on multiple a -> file : 1
multiple a file -> must : 1
a file must -> end : 1
file must end -> with : 1
must end with -> a : 1
end with a -> the : 1
with a the -> source : 1
a the source -> into : 1
the source into -> preprocessor : 1
source into preprocessor -> tokens : 1
into preprocessor tokens -> separated : 1
preprocessor tokens separated -> by : 1
tokens separated by -> whitespace : 1
separated by whitespace -> and : 1
separated by whitespace -> is : 1
by whitespace and -> a : 1
whitespace and a -> preprocessor : 1
and a preprocessor -> token : 1
a preprocessor token -> is : 1
a preprocessor token -> can : 1
a preprocessor token -> and : 1
preprocessor token is -> slightly : 1
preprocessor token is -> the : 1
token is slightly -> different : 1
is slightly different -> from : 2
slightly different from -> a : 1
slightly different from -> in : 1
different from a -> compiler : 1
different from a -> a : 1
from a compiler -> token : 1
a compiler token -> the : 1
a compiler token -> are : 1
compiler token the -> next : 1
token the next -> a : 1
the next a -> preprocessor : 1
the next a -> template : 1
the next a -> range : 1
next a preprocessor -> token : 1
preprocessor token can -> be : 1
token can be -> a : 1
token can be -> an : 1
can be a -> header : 1
can be a -> or : 1
can be a -> plain : 1
can be a -> object : 1
can be a -> shows : 1
can be a -> pointer : 3
can be a -> helpful : 1
can be a -> class : 1
can be a -> cannot : 1
can be a -> data : 1
can be a -> sequence : 2
can be a -> parameter : 1
can be a -> nonmember : 1
can be a -> nonstatic : 1
can be a -> series : 1
can be a -> which : 1
can be a -> literal : 1
can be a -> function : 8
can be a -> member : 1
can be a -> a : 2
can be a -> in : 1
can be a -> dereferencing : 2
can be a -> list : 1
can be a -> simple : 1
can be a -> forward : 4
can be a -> null : 1
can be a -> such : 1
can be a -> pod : 1
be a header -> character : 1
a header character -> string : 1
header character string -> or : 1
character string or -> miscellaneous : 1
string or miscellaneous -> each : 1
or miscellaneous each -> preprocessor : 1
miscellaneous each preprocessor -> token : 1
each preprocessor token -> is : 1
token is the -> longest : 1
is the longest -> sequence : 1
the longest sequence -> of : 2
longest sequence of -> characters : 1
longest sequence of -> declarators : 1
sequence of characters -> that : 3
sequence of characters -> in : 1
sequence of characters -> the : 1
sequence of characters -> to : 3
sequence of characters -> for : 4
sequence of characters -> stored : 1
of characters that -> can : 1
of characters that -> the : 1
of characters that -> matches : 1
of characters that -> you : 1
characters that can -> make : 1
that can make -> up : 1
can make up -> a : 2
make up a -> legal : 1
make up a -> and : 1
make up a -> null : 1
make up a -> logical : 1
up a legal -> regardless : 1
a legal regardless -> of : 1
legal regardless of -> what : 1
regardless of what -> comes : 1
of what comes -> after : 1
what comes after -> the : 1
comes after the -> preprocessing : 1
comes after the -> complexity : 1
after the preprocessing -> and : 1
the preprocessing and -> expand : 1
preprocessing and expand -> all : 1
and expand all -> files : 1
expand all files -> are : 1
all files are -> processed : 1
files are processed -> in : 1
are processed in -> the : 1
processed in the -> manner : 1
in the manner -> described : 3
in the manner -> of : 2
the manner described -> in : 1
the manner described -> earlier : 1
the manner described -> for : 1
manner described in -> steps : 1
described in steps -> for : 1
in steps for -> more : 1
steps for more -> information : 1
for more information -> about : 68
for more information -> on : 5
for more information -> and : 1
information about see -> character : 1
information about see -> also : 1
information about see -> the : 1
about see character -> and : 1
see character and -> string : 1
character and string -> literals : 2
character and string -> compiler : 1
and string literals -> to : 1
and string literals -> from : 1
string literals to -> the : 1
literals to the -> execution : 1
to the execution -> character : 5
the execution character -> adjacent : 1
the execution character -> if : 1
the execution character -> the : 2
the execution character -> includes : 1
the execution character -> set : 3
the execution character -> you : 1
execution character adjacent -> string : 1
character adjacent string -> narrow : 1
adjacent string narrow -> string : 1
string narrow string -> literals : 1
narrow string literals -> are : 1
string literals are -> concatenated : 2
string literals are -> arrays : 1
literals are concatenated -> with : 2
are concatenated with -> narrow : 1
are concatenated with -> wide : 1
concatenated with narrow -> string : 1
with narrow string -> wide : 1
narrow string wide -> string : 1
string wide string -> literals : 1
wide string literals -> are : 2
wide string literals -> results : 1
concatenated with wide -> string : 1
with wide string -> mixing : 1
wide string mixing -> narrow : 1
string mixing narrow -> and : 1
mixing narrow and -> wide : 2
narrow and wide -> string : 1
narrow and wide -> character : 3
narrow and wide -> characters : 1
narrow and wide -> functions : 1
and wide string -> literals : 1
string literals results -> in : 1
literals results in -> an : 1
results in an -> the : 2
results in an -> if : 1
results in an -> to : 1
results in an -> error : 1
results in an -> not : 1
results in an -> input : 1
results in an -> empty : 1
results in an -> calling : 1
results in an -> performing : 1
in an the -> main : 1
in an the -> suffix : 1
in an the -> parameter : 2
in an the -> arithmetic : 1
in an the -> same : 2
in an the -> operator : 2
in an the -> value : 1
an the main -> compiled : 1
the main compiled -> for : 1
main compiled for -> each : 1
compiled for each -> all : 1
for each all -> required : 1
each all required -> template : 1
all required template -> instantiations : 1
required template instantiations -> are : 1
template instantiations are -> and : 1
template instantiations are -> instances : 1
instantiations are and -> the : 1
instantiations are and -> writing : 1
are and the -> necessary : 1
are and the -> performance : 1
are and the -> is : 1
are and the -> resulting : 4
are and the -> operator : 1
are and the -> return : 2
are and the -> other : 1
and the necessary -> template : 1
the necessary template -> definitions : 1
necessary template definitions -> are : 1
template definitions are -> located : 1
definitions are located -> and : 1
are located and -> external : 1
located and external -> the : 1
and external the -> compiled : 1
external the compiled -> files : 1
the compiled files -> are : 1
compiled files are -> linked : 1
files are linked -> to : 1
are linked to -> produce : 1
linked to produce -> an : 1
to produce an -> executable : 1
produce an executable -> source : 1
an executable source -> code : 1
executable source code -> is : 1
source code is -> divided : 1
code is divided -> into : 1
divided into a -> stream : 1
into a stream -> of : 1
a stream of -> the : 1
stream of the -> compiler : 1
of the compiler -> tries : 1
of the compiler -> can : 1
of the compiler -> does : 1
of the compiler -> is : 1
the compiler tries -> to : 5
compiler tries to -> collect : 1
compiler tries to -> declare : 2
compiler tries to -> ensure : 1
compiler tries to -> determine : 1
tries to collect -> as : 1
to collect as -> many : 1
collect as many -> contiguous : 1
as many contiguous -> characters : 1
many contiguous characters -> as : 1
contiguous characters as -> it : 1
characters as it -> can : 2
as it can -> to : 2
it can to -> build : 1
it can to -> form : 1
can to build -> a : 1
to build a -> valid : 1
build a valid -> is : 1
a valid is -> sometimes : 1
valid is sometimes -> called : 1
is sometimes called -> the : 2
is sometimes called -> a : 7
sometimes called the -> it : 1
sometimes called the -> class : 1
sometimes called the -> because : 2
called the it -> stops : 1
the it stops -> when : 1
it stops when -> the : 1
stops when the -> next : 1
when the next -> character : 3
the next character -> it : 1
the next character -> to : 5
the next character -> read : 5
the next character -> would : 1
the next character -> in : 1
the next character -> will : 1
the next character -> there : 1
the next character -> is : 1
next character it -> would : 1
character it would -> read : 1
it would read -> cannot : 1
would read cannot -> possibly : 1
read cannot possibly -> be : 1
cannot possibly be -> part : 1
possibly be part -> of : 1
be part of -> the : 1
be part of -> an : 3
be part of -> a : 1
of the token -> it : 1
of the token -> will : 1
the token it -> is : 1
token it is -> token : 1
it is token -> can : 1
is token can -> be : 1
can be an -> a : 1
can be an -> expression : 2
can be an -> compound : 1
can be an -> which : 1
can be an -> ordinary : 1
can be an -> an : 1
can be an -> integral : 1
can be an -> lvalue : 1
be an a -> reserved : 1
be an a -> can : 1
an a reserved -> a : 1
a reserved a -> or : 1
reserved a or -> an : 1
a or an -> operator : 1
a or an -> incomplete : 1
a or an -> explicit : 1
a or an -> instance : 1
or an operator -> or : 1
an operator or -> punctuation : 1
an operator or -> a : 1
an operator or -> when : 1
an operator or -> for : 1
operator or punctuation -> each : 1
or punctuation each -> kind : 1
punctuation each kind -> of : 1
each kind of -> token : 1
each kind of -> the : 1
each kind of -> node : 1
kind of token -> is : 1
of token is -> described : 1
token is described -> later : 1
is described later -> in : 2
described later in -> this : 2
in this of -> the : 1
this of the -> compilation : 1
of the compilation -> process : 1
compilation process reads -> these : 1
process reads these -> tokens : 1
reads these tokens -> are : 1
these tokens are -> converted : 1
tokens are converted -> automatically : 1
are converted automatically -> to : 1
converted automatically to -> ordinary : 1
automatically to ordinary -> compiler : 1
to ordinary compiler -> tokens : 1
ordinary compiler tokens -> as : 1
compiler tokens as -> part : 1
tokens as part -> of : 1
as part of -> the : 6
as part of -> a : 2
of the main -> compilation : 1
of the main -> purpose : 1
the main compilation -> in : 1
the main compilation -> the : 1
main compilation in -> step : 1
compilation in step -> the : 1
in step the -> between : 1
step the between -> a : 1
the between a -> preprocessor : 1
the between a -> declaration : 1
between a preprocessor -> token : 1
preprocessor token and -> a : 1
token and a -> compiler : 1
and a compiler -> token : 1
compiler token are -> preprocessor : 1
token are preprocessor -> and : 1
are preprocessor and -> the : 1
preprocessor and the -> compiler : 1
and the compiler -> might : 1
and the compiler -> is : 1
and the compiler -> calls : 1
and the compiler -> looks : 1
and the compiler -> cannot : 1
and the compiler -> generates : 1
the compiler might -> use : 2
the compiler might -> not : 1
the compiler might -> generate : 1
the compiler might -> diagnose : 1
compiler might use -> different : 2
might use different -> encodings : 1
might use different -> rules : 1
use different encodings -> for : 1
different encodings for -> character : 1
encodings for character -> and : 1
for character and -> string : 1
and string compiler -> treats : 1
string compiler treats -> integer : 1
compiler treats integer -> and : 1
treats integer and -> literals : 1
integer and literals -> the : 1
and literals the -> preprocessor : 1
literals the preprocessor -> does : 1
the preprocessor does -> preprocessor : 1
preprocessor does preprocessor -> recognizes : 1
does preprocessor recognizes -> as : 1
preprocessor recognizes as -> a : 1
recognizes as a -> single : 1
as a single -> token : 1
as a single -> not : 1
as a single -> statement : 1
as a single -> if : 1
a single token -> the : 1
single token the -> compiler : 1
token the compiler -> does : 1
the compiler does -> is : 1
the compiler does -> not : 3
the compiler does -> so : 1
the compiler does -> with : 1
compiler does is -> a : 1
does is a -> name : 1
is a name -> that : 2
a name that -> you : 2
a name that -> follows : 1
a name that -> is : 2
a name that -> must : 1
a name that -> represents : 1
name that you -> define : 1
name that you -> reference : 1
that you define -> or : 1
you define or -> that : 1
define or that -> is : 1
or that is -> defined : 1
or that is -> initialized : 1
that is defined -> in : 2
that is defined -> by : 1
that is defined -> within : 1
is defined in -> a : 2
is defined in -> the : 2
is defined in -> namespace : 1
is defined in -> several : 1
is defined in -> to : 1
defined in a -> an : 1
defined in a -> different : 1
defined in a -> specific : 1
defined in a -> class : 1
in a an -> identifier : 1
in a an -> exception : 1
in a an -> html : 1
a an identifier -> begins : 1
an identifier begins -> with : 1
identifier begins with -> a : 1
begins with a -> nondigit : 1
begins with a -> series : 1
begins with a -> template : 1
begins with a -> space : 1
begins with a -> circumflex : 1
begins with a -> insert : 1
with a nondigit -> character : 1
a nondigit character -> and : 1
a nondigit character -> is : 1
nondigit character and -> is : 1
character and is -> followed : 1
character and is -> therefore : 1
character and is -> if : 1
and is followed -> by : 3
followed by any -> number : 1
by any number -> of : 1
any number of -> digits : 1
any number of -> like : 1
any number of -> it : 1
any number of -> base : 2
any number of -> functions : 1
any number of -> classes : 1
any number of -> intervening : 1
any number of -> directives : 1
any number of -> shows : 1
any number of -> use : 1
any number of -> declarations : 1
number of digits -> and : 1
number of digits -> to : 3
number of digits -> in : 1
number of digits -> for : 1
number of digits -> that : 1
number of digits -> is : 1
of digits and -> a : 1
digits and a -> nondigit : 1
and a nondigit -> character : 1
nondigit character is -> a : 1
character is a -> an : 1
character is a -> no : 1
character is a -> control : 3
character is a -> function : 1
character is a -> hexadecimal : 3
character is a -> letter : 2
character is a -> digit : 2
character is a -> lowercase : 1
is a an -> or : 1
is a an -> overview : 1
a an or -> one : 1
a an or -> a : 1
an or one -> of : 1
or one of -> a : 1
or one of -> the : 2
one of a -> set : 1
one of a -> given : 1
one of a -> sequence : 1
one of a -> list : 3
one of a -> number : 1
of a set -> of : 3
of a set -> difference : 1
of a set -> symmetric : 1
of a set -> union : 1
a set of -> universal : 1
a set of -> zero : 1
a set of -> numbers : 1
a set of -> bits : 1
a set of -> template : 3
a set of -> functions : 1
a set of -> and : 1
a set of -> character : 1
a set of -> templates : 1
a set of -> for : 1
a set of -> a : 1
a set of -> but : 1
a set of -> function : 1
a set of -> named : 1
a set of -> lexicographically : 2
a set of -> characters : 1
a set of -> cultural : 1
a set of -> class : 1
a set of -> several : 1
a set of -> one : 1
a set of -> an : 1
a set of -> elements : 2
a set of -> sizes : 1
a set of -> use : 1
a set of -> conversion : 1
set of universal -> the : 1
of universal the -> exact : 1
universal the exact -> set : 1
the exact set -> of : 1
exact set of -> nondigit : 1
set of nondigit -> characters : 1
of nondigit characters -> is : 1
nondigit characters is -> defined : 1
characters is defined -> in : 1
defined in the -> standard : 1
defined in the -> japanese : 1
defined in the -> template : 1
defined in the -> previous : 1
defined in the -> same : 1
defined in the -> the : 1
defined in the -> all : 1
defined in the -> an : 1
defined in the -> translation : 1
defined in the -> appendix : 1
standard and in -> pdtr : 1
and in pdtr -> this : 1
in pdtr this -> set : 1
pdtr this set -> contains : 1
this set contains -> the : 1
set contains the -> universal : 1
contains the universal -> characters : 1
the universal characters -> that : 1
universal characters that -> represent : 1
characters that represent -> most : 1
that represent most -> programmers : 1
represent most programmers -> restrict : 1
most programmers restrict -> themselves : 1
programmers restrict themselves -> to : 1
restrict themselves to -> the : 1
themselves to the -> characters : 1
to the characters -> and : 1
to the characters -> in : 2
the characters and -> but : 1
characters and but -> the : 1
and but the -> standard : 3
but the standard -> permits : 1
but the standard -> library : 1
but the standard -> does : 1
the standard permits -> letters : 1
the standard permits -> this : 1
the standard permits -> universal : 1
standard permits letters -> in : 1
permits letters in -> other : 1
letters in other -> with : 1
in other with -> no : 2
other with no -> all : 1
other with no -> keyword : 1
with no all -> compilers : 3
no all compilers -> support : 2
no all compilers -> correctly : 1
all compilers support -> universal : 1
all compilers support -> some : 1
compilers support universal -> characters : 1
support universal characters -> in : 1
universal characters in -> identifiers : 1
universal characters in -> terms : 1
universal characters in -> but : 1
characters in identifiers -> are : 1
in identifiers are -> for : 1
identifiers are for -> use : 1
are for use -> by : 1
for use by -> the : 3
use by the -> standard : 1
use by the -> the : 2
use by the -> when : 1
by the standard -> that : 1
by the standard -> allocator : 1
by the standard -> library : 3
by the standard -> literals : 1
standard that contains -> two : 1
that contains two -> consecutive : 1
contains two consecutive -> underscores : 1
two consecutive underscores -> is : 1
consecutive underscores is -> that : 1
underscores is that -> you : 1
is that you -> cannot : 3
is that you -> can : 2
is that you -> are : 1
is that you -> might : 1
that you cannot -> use : 3
that you cannot -> overload : 1
that you cannot -> do : 1
that you cannot -> store : 1
you cannot use -> such : 1
you cannot use -> a : 4
you cannot use -> the : 6
you cannot use -> to : 1
you cannot use -> an : 1
you cannot use -> it : 2
you cannot use -> type : 1
you cannot use -> outside : 2
you cannot use -> objects : 1
you cannot use -> on : 2
cannot use such -> an : 1
use such an -> identifier : 1
such an identifier -> for : 1
an identifier for -> class : 1
identifier for class -> global : 1
for class global -> or : 1
class global or -> anything : 1
global or anything -> that : 1
or anything that -> starts : 1
anything that starts -> with : 1
that starts with -> an : 2
that starts with -> you : 1
starts with an -> followed : 1
starts with an -> underscore : 1
starts with an -> equal : 1
starts with an -> optional : 1
with an followed -> by : 1
an followed by -> a : 1
followed by a -> capital : 1
followed by a -> lowercase : 5
followed by a -> digit : 1
followed by a -> name : 2
followed by a -> qualified : 3
followed by a -> by : 1
followed by a -> this : 1
followed by a -> statement : 1
followed by a -> compound : 2
followed by a -> function : 3
followed by a -> conversion : 1
followed by a -> plain : 1
followed by a -> class : 1
followed by a -> declaration : 2
followed by a -> parameter : 1
followed by a -> argument : 1
followed by a -> left : 1
followed by a -> period : 1
followed by a -> value : 1
followed by a -> number : 1
followed by a -> terminating : 4
followed by a -> colon : 1
followed by a -> and : 1
followed by a -> comment : 1
by a capital -> letter : 1
a capital letter -> is : 1
capital letter is -> identifier : 1
letter is identifier -> that : 1
is identifier that -> starts : 1
identifier that starts -> with : 1
with an underscore -> is : 1
an underscore is -> reserved : 1
underscore is reserved -> in : 1
is reserved in -> the : 1
is reserved in -> all : 1
reserved in the -> global : 3
in the global -> you : 1
in the global -> scope : 3
in the global -> not : 1
in the global -> namespace : 2
in the global -> the : 2
in the global -> use : 1
in the global -> in : 1
in the global -> candidate : 1
in the global -> proper : 1
in the global -> so : 2
in the global -> as : 1
the global you -> can : 1
global you can -> use : 1
you can use -> such : 1
you can use -> an : 7
you can use -> a : 6
you can use -> to : 3
you can use -> either : 1
you can use -> array : 1
you can use -> multiple : 1
you can use -> only : 2
you can use -> any : 2
you can use -> the : 21
you can use -> whichever : 1
you can use -> or : 2
you can use -> it : 2
you can use -> these : 1
you can use -> your : 1
you can use -> allocators : 1
you can use -> their : 1
you can use -> default : 1
you can use -> this : 1
you can use -> templates : 1
you can use -> in : 2
you can use -> different : 1
you can use -> and : 1
you can use -> narrow : 1
you can use -> strings : 1
you can use -> wherever : 1
can use such -> names : 1
use such names -> in : 1
such names in -> other : 1
names in other -> contexts : 1
names in other -> source : 1
in other contexts -> class : 1
in other contexts -> in : 1
other contexts class -> members : 1
contexts class members -> and : 1
class members and -> local : 1
members and local -> c : 1
and local c -> standard : 1
local c standard -> reserves : 1
c standard reserves -> some : 1
c standard reserves -> these : 1
standard reserves some -> identifiers : 1
reserves some identifiers -> for : 1
some identifiers for -> future : 1
identifiers for future -> these : 1
for future these -> identifiers : 1
future these identifiers -> fall : 1
these identifiers fall -> into : 1
identifiers fall into -> two : 1
fall into two -> function : 1
fall into two -> and : 1
fall into two -> identified : 1
into two function -> names : 1
two function names -> and : 1
function names and -> macro : 1
names and macro -> function : 1
and macro function -> names : 1
macro function names -> are : 1
function names are -> reserved : 1
function names are -> and : 1
names are reserved -> and : 1
names are reserved -> in : 1
are reserved and -> should : 1
reserved and should -> not : 1
and should not -> be : 1
should not be -> used : 1
not be used -> as : 1
be used as -> global : 1
be used as -> a : 10
be used as -> values : 1
be used as -> bits : 1
be used as -> an : 2
used as global -> function : 1
as global function -> or : 1
global function or -> object : 1
function or object -> you : 1
function or object -> used : 1
function or object -> declaration : 1
function or object -> at : 1
or object you -> should : 1
object you should -> also : 1
you should also -> avoid : 1
you should also -> override : 1
should also avoid -> using : 1
also avoid using -> them : 1
avoid using them -> as : 2
using them as -> linkage : 1
using them as -> much : 1
them as linkage -> names : 1
as linkage names -> in : 1
linkage names in -> any : 1
names in any -> note : 1
in any note -> that : 1
any note that -> the : 1
note that the -> c : 1
note that the -> first : 1
note that the -> compiler : 3
note that the -> statement : 1
note that the -> operator : 1
note that the -> return : 1
note that the -> order : 1
note that the -> two : 1
note that the -> adapted : 1
note that the -> standard : 1
note that the -> functions : 1
note that the -> character : 1
note that the -> default : 4
that the c -> standard : 2
the c standard -> reserves : 1
the c standard -> but : 1
the c standard -> are : 1
the c standard -> headers : 1
the c standard -> library : 2
the c standard -> has : 2
the c standard -> declares : 4
the c standard -> it : 1
the c standard -> does : 1
the c standard -> defines : 1
the c standard -> also : 1
the c standard -> in : 1
the c standard -> chapter : 1
the c standard -> which : 8
standard reserves these -> names : 1
reserves these names -> regardless : 1
these names regardless -> of : 1
names regardless of -> which : 1
regardless of which -> headers : 1
of which headers -> you : 1
which headers you -> the : 1
headers you the -> reserved : 1
you the reserved -> function : 1
the reserved function -> names : 1
reserved function names -> followed : 1
function names followed -> by : 1
names followed by -> a : 1
by a lowercase -> such : 5
a lowercase such -> as : 5
lowercase such as -> followed : 4
lowercase such as -> with : 1
such as followed -> by : 4
as followed by -> a : 4
such as with -> or : 1
as with or -> such : 1
with or such -> as : 1
or such as -> and : 2
such as and -> names : 1
such as and -> the : 1
such as and -> are : 1
such as and -> ease : 1
such as and -> return : 1
such as and -> do : 1
such as and -> is : 1
such as and -> might : 1
such as and -> which : 1
such as and -> default : 1
such as and -> provide : 1
as and names -> are : 1
and names are -> reserved : 1
and names are -> separate : 1
are reserved in -> all : 1
reserved in all -> do : 1
reserved in all -> contexts : 1
in all do -> not : 1
all do not -> use : 1
do not use -> any : 1
do not use -> alternative : 1
do not use -> the : 1
do not use -> default : 1
do not use -> your : 1
do not use -> and : 1
do not use -> write : 1
do not use -> stream : 1
not use any -> of : 1
not use any -> features : 1
use any of -> the : 5
any of the -> following : 6
any of the -> name : 1
any of the -> or : 1
any of the -> statements : 2
any of the -> it : 1
any of the -> types : 1
any of the -> copy : 2
any of the -> template : 1
any of the -> if : 1
any of the -> standard : 2
any of the -> names : 1
any of the -> predefined : 1
any of the -> reserved : 1
any of the -> input : 1
any of the -> value : 1
any of the -> character : 1
any of the -> characters : 2
any of the -> multibyte : 1
any of the -> wide : 2
any of the -> other : 1
any of the -> equivalent : 1
any of the -> above : 1
any of the -> assignment : 4
of the following -> reserved : 1
of the following -> rvalue : 1
of the following -> side : 1
of the following -> provided : 1
of the following -> as : 1
of the following -> conditions : 2
of the following -> else : 1
of the following -> function : 1
of the following -> is : 3
of the following -> has : 1
of the following -> parts : 2
of the following -> a : 2
of the following -> characters : 1
of the following -> input : 1
the following reserved -> macro : 1
following reserved macro -> that : 1
reserved macro that -> start : 1
macro that start -> with : 1
that start with -> followed : 2
that start with -> or : 1
that start with -> that : 1
that start with -> the : 1
start with followed -> by : 2
with followed by -> a : 1
with followed by -> an : 1
by a digit -> or : 1
a digit or -> an : 1
digit or an -> uppercase : 1
or an uppercase -> that : 1
an uppercase that -> start : 2
uppercase that start -> with : 2
followed by an -> uppercase : 3
followed by an -> expression : 1
followed by an -> optional : 3
followed by an -> ellipsis : 1
followed by an -> integral : 1
by an uppercase -> that : 1
by an uppercase -> with : 1
by an uppercase -> for : 1
start with or -> followed : 1
with or followed -> by : 1
or followed by -> an : 1
an uppercase with -> no : 1
uppercase with no -> is : 1
with no is -> an : 1
with no is -> of : 1
no is an -> identifier : 1
is an identifier -> that : 1
is an identifier -> is : 1
is an identifier -> optionally : 1
an identifier that -> is : 2
identifier that is -> reserved : 1
identifier that is -> distinct : 1
that is reserved -> in : 1
in all contexts -> for : 1
all contexts for -> special : 1
contexts for special -> use : 1
for special use -> by : 1
special use by -> the : 1
by the the -> following : 1
by the the -> context : 1
by the the -> parameter : 1
by the the -> type : 1
by the the -> known : 1
by the the -> string : 1
by the the -> most : 1
the the following -> is : 1
the the following -> are : 1
the following is -> a : 4
the following is -> an : 3
the following is -> the : 3
the following is -> not : 1
the following is -> if : 1
the following is -> reached : 1
the following is -> all : 1
following is a -> list : 2
following is a -> function : 1
following is a -> template : 1
following is a -> partial : 1
is a list -> of : 7
a list of -> all : 2
a list of -> declarators : 1
a list of -> each : 1
a list of -> expressions : 3
a list of -> one : 1
a list of -> zero : 1
a list of -> type : 3
a list of -> the : 3
a list of -> candidate : 1
a list of -> member : 1
a list of -> template : 1
a list of -> function : 1
a list of -> functions : 1
a list of -> identifiers : 1
a list of -> shows : 1
a list of -> any : 1
a list of -> first : 1
a list of -> attributes : 1
list of all -> the : 2
of all the -> reserved : 1
of all the -> curly : 1
of all the -> name : 1
of all the -> operators : 1
of all the -> data : 1
of all the -> members : 1
of all the -> standard : 1
of all the -> items : 1
of all the -> elements : 2
of all the -> memory : 1
all the reserved -> that : 1
the reserved that -> some : 1
reserved that some -> compilers : 1
some compilers do -> not : 3
compilers do not -> implement : 1
compilers do not -> support : 3
compilers do not -> treat : 1
do not implement -> all : 1
not implement all -> of : 1
implement all of -> the : 1
all of the -> these : 1
all of the -> alternative : 1
all of the -> argument : 1
all of the -> enumerator : 1
all of the -> values : 1
all of the -> template : 1
all of the -> letting : 1
all of the -> requirements : 1
all of the -> in : 1
of the these -> compilers : 1
of the these -> iterators : 1
the these compilers -> allow : 1
these compilers allow -> you : 1
compilers allow you -> to : 1
allow you to -> use : 2
you to use -> certain : 1
you to use -> them : 1
to use certain -> keywords : 1
use certain keywords -> as : 1
certain keywords as -> see : 1
keywords as see -> later : 1
as see later -> in : 2
see later in -> this : 28
in this chapter -> for : 46
in this chapter -> are : 6
in this chapter -> and : 1
in this chapter -> in : 1
in this chapter -> to : 2
in this chapter -> includes : 1
in this chapter -> is : 1
this chapter for -> more : 12
this chapter for -> for : 1
this chapter for -> uses : 1
this chapter for -> examples : 1
this chapter for -> parameters : 1
this chapter for -> function : 1
this chapter for -> information : 10
this chapter for -> a : 3
this chapter for -> members : 1
this chapter for -> with : 1
this chapter for -> are : 1
this chapter for -> to : 1
this chapter for -> details : 1
this chapter for -> signature : 1
this chapter for -> friend : 1
this chapter for -> you : 1
this chapter for -> class : 1
this chapter for -> most : 2
this chapter for -> the : 2
this chapter for -> an : 1
this chapter for -> detailed : 2
this chapter for -> specialized : 1
chapter for more -> solid : 1
chapter for more -> information : 3
chapter for more -> if : 1
chapter for more -> layout : 1
chapter for more -> data : 1
chapter for more -> order : 1
chapter for more -> are : 1
chapter for more -> template : 1
chapter for more -> declare : 1
chapter for more -> is : 1
for more solid -> solid : 1
more solid solid -> solid : 1
solid solid solid -> solid : 1257
solid solid solid -> is : 2
solid solid solid -> character : 2
solid solid solid -> or : 4
solid solid solid -> number : 5
solid solid solid -> cannot : 1
solid solid solid -> with : 2
solid solid solid -> to : 6
solid solid solid -> exclusive : 2
solid solid solid -> inclusive : 1
solid solid solid -> expression : 1
solid solid solid -> call : 1
solid solid solid -> member : 1
solid solid solid -> function : 1
solid solid solid -> functionsnonmember : 2
solid solid solid -> conversion : 3
solid solid solid -> be : 1
solid solid solid -> unary : 1
solid solid solid -> bitwise : 3
solid solid solid -> left : 1
solid solid solid -> right : 1
solid solid solid -> dynamic : 4
solid solid solid -> than : 2
solid solid solid -> overloaded : 1
solid solid solid -> operator : 1
solid solid solid -> access : 1
solid solid solid -> toward : 1
solid solid solid -> up : 3
solid solid solid -> surround : 1
solid solid solid -> sign : 3
solid solid solid -> opens : 4
solid solid solid -> creates : 2
solid solid solid -> in : 8
solid solid solid -> conversions : 1
solid solid solid -> output : 3
solid solid solid -> an : 1
solid solid solid -> weekday : 4
solid solid solid -> month : 4
solid solid solid -> date : 2
solid solid solid -> of : 4
solid solid solid -> designation : 2
solid solid solid -> sunday : 2
solid solid solid -> zone : 2
solid solid solid -> from : 3
solid solid solid -> type : 1
solid solid solid -> mode : 1
solid solid solid -> out : 3
solid solid solid -> global : 1
solid solid solid -> goodbit : 1
solid solid solid -> char : 1
solid solid solid -> and : 5
solid solid solid -> values : 2
solid solid solid -> a : 1
solid solid solid -> decimal : 1
solid solid solid -> plus : 1
solid solid solid -> whitespace : 1
solid solid solid -> leading : 1
solid solid solid -> such : 1
solid solid solid -> when : 1
solid solid solid -> for : 2
solid solid solid -> typename : 14
solid solid solid -> header : 1
solid solid solid -> finished : 1
solid solid solid -> that : 1
solid solid solid -> digit : 1
solid solid solid -> class : 1
solid solid is -> an : 1
solid solid is -> solid : 1
solid is an -> or : 1
is an or -> string : 1
is an or -> bitmask : 1
is an or -> bitset : 2
an or string -> integer : 1
or string integer -> literal : 1
string integer literal -> can : 1
integer literal can -> be : 1
integer literal can -> also : 1
literal can be -> a : 2
be a or -> hexadecimal : 1
a or hexadecimal -> a : 1
or hexadecimal a -> prefix : 1
hexadecimal a prefix -> specifies : 1
a prefix specifies -> the : 1
prefix specifies the -> base : 1
specifies the base -> or : 1
the base or -> or : 1
the base or -> it : 1
base or or -> for : 1
or or for -> for : 1
or or for -> hexadecimal : 1
or for for -> and : 2
or for for -> decimal : 1
or for for -> or : 1
for for and -> nothing : 1
for for and -> anything : 1
for and nothing -> for : 1
and nothing for -> an : 1
nothing for an -> integer : 1
for an integer -> literal : 1
for an integer -> is : 1
for an integer -> radix : 1
an integer literal -> can : 1
literal can also -> have : 1
can also have -> a : 2
can also have -> only : 1
also have a -> suffix : 1
also have a -> static : 1
also have a -> virtual : 2
also have a -> which : 1
also have a -> function : 1
have a suffix -> that : 1
a suffix that -> is : 1
suffix that is -> a : 1
that is a -> combination : 1
that is a -> type : 1
that is a -> pointer : 2
that is a -> which : 1
that is a -> dependent : 1
that is a -> and : 1
that is a -> valid : 2
that is a -> copy : 3
is a combination -> of : 1
a combination of -> and : 1
a combination of -> an : 1
combination of and -> for : 1
of and for -> and : 1
of and for -> the : 1
of and for -> information : 1
and for and -> the : 1
for and the -> suffix : 1
for and the -> multiplicative : 1
for and the -> additive : 1
for and the -> result : 2
for and the -> statement : 1
for and the -> end : 1
and the suffix -> can : 1
the suffix can -> be : 2
suffix can be -> uppercase : 2
can be uppercase -> or : 2
be uppercase or -> lowercase : 1
be uppercase or -> are : 1
uppercase or lowercase -> and : 1
or lowercase and -> can : 1
lowercase and can -> be : 1
can be in -> any : 1
can be in -> the : 6
can be in -> which : 3
can be in -> a : 1
be in any -> the : 1
in any the -> suffix : 1
in any the -> and : 1
in any the -> value : 1
any the suffix -> and : 1
the suffix and -> prefix : 1
suffix and prefix -> are : 1
and prefix are -> interpreted : 1
prefix are interpreted -> as : 1
are interpreted as -> the : 1
are interpreted as -> separators : 1
are interpreted as -> though : 6
are interpreted as -> a : 2
interpreted as the -> suffix : 1
interpreted as the -> complement : 1
interpreted as the -> bigfloat : 1
interpreted as the -> start : 1
interpreted as the -> real : 6
as the suffix -> is : 1
the suffix is -> the : 3
suffix is the -> type : 3
is the type -> is : 6
is the type -> of : 18
is the type -> returned : 1
the type is -> the : 16
the type is -> or : 2
the type is -> an : 5
the type is -> unless : 1
the type is -> a : 9
the type is -> unlike : 1
the type is -> actually : 1
the type is -> one : 1
the type is -> not : 3
the type is -> promoted : 1
the type is -> determined : 1
the type is -> distinct : 1
the type is -> but : 1
the type is -> also : 1
the type is -> you : 1
the type is -> that : 1
the type is -> defined : 2
the type is -> mostly : 2
the type is -> known : 1
type is the -> suffix : 1
type is the -> type : 12
type is the -> keyword : 1
type is the -> for : 1
type is the -> same : 10
type is the -> the : 1
type is the -> declared : 2
type is the -> base : 1
type is the -> return : 1
type is the -> promoted : 4
type is the -> result : 2
type is the -> dynamic : 1
type is the -> or : 1
type is the -> of : 1
type is the -> maximum : 2
type is the -> fundamental : 1
type is the -> second : 2
type is the -> template : 2
is the suffix -> is : 1
type is or -> whichever : 2
type is or -> an : 1
type is or -> the : 1
is or whichever -> fits : 2
or whichever fits -> if : 1
or whichever fits -> a : 1
or whichever fits -> octal : 1
or whichever fits -> with : 1
whichever fits if -> the : 1
fits if the -> value : 1
if the value -> fits : 1
if the value -> does : 1
if the value -> is : 7
the value fits -> in : 1
value fits in -> a : 1
fits in a -> the : 1
in a the -> type : 1
in a the -> default : 2
in a the -> initial : 1
in a the -> is : 2
in a the -> condition : 1
in a the -> compiler : 1
in a the -> minimum : 1
in a the -> first : 2
in a the -> last : 1
in a the -> only : 2
in a the -> declarator : 1
in a the -> constructor : 2
in a the -> value : 6
in a the -> template : 1
in a the -> class : 1
a the type -> is : 2
type is an -> error : 1
type is an -> array : 1
type is an -> rvalue : 1
type is an -> abstract : 1
type is an -> instance : 1
type is an -> integral : 10
type is an -> struct : 2
type is an -> opaque : 3
type is an -> arithmetic : 2
type is an -> pod : 1
type is an -> or : 3
type is an -> enumerated : 3
type is an -> type : 2
type is an -> and : 1
type is an -> see : 1
is an error -> results : 1
an error results -> if : 6
error results if -> the : 2
error results if -> there : 1
error results if -> each : 1
error results if -> two : 1
error results if -> is : 1
results if the -> value : 1
results if the -> conversion : 1
the value does -> not : 1
value does not -> fit : 1
does not fit -> in : 1
not fit in -> an : 1
fit in an -> the : 2
an the suffix -> is : 1
whichever fits a -> a : 1
fits a a -> decimal : 1
a a decimal -> integer : 1
a decimal integer -> has : 1
decimal integer has -> type : 1
integer has type -> or : 1
has type or -> whichever : 2
has type or -> if : 1
type or whichever -> fits : 2
whichever fits octal -> or : 1
fits octal or -> hexadecimal : 1
octal or hexadecimal -> literal : 1
or hexadecimal literal -> has : 1
hexadecimal literal has -> type : 1
literal has type -> or : 1
literal has type -> unless : 1
literal has type -> and : 2
whichever fits with -> no : 1
fits with no -> compilers : 1
with no compilers -> offer : 1
with no compilers -> do : 2
no compilers offer -> other : 1
compilers offer other -> suffixes : 1
offer other suffixes -> as : 1
other suffixes as -> extensions : 1
suffixes as extensions -> to : 1
as extensions to -> the : 2
extensions to the -> see : 1
extensions to the -> compilers : 1
extensions to the -> the : 1
extensions to the -> standard : 2
to the see -> for : 1
to the see -> a : 1
to the see -> later : 3
the see for -> are : 1
the see for -> more : 4
the see for -> information : 1
see for are -> some : 1
for are some -> examples : 1
are some examples -> of : 7
some examples of -> integer : 1
some examples of -> legal : 1
some examples of -> string : 1
some examples of -> how : 1
some examples of -> unsigned : 1
some examples of -> x : 1
some examples of -> numeric : 1
some examples of -> n : 1
some examples of -> references : 1
some examples of -> conversion : 1
examples of integer -> legal : 1
of integer legal -> legal : 1
integer legal legal -> legal : 1
legal legal legal -> legal : 3
legal legal legal -> is : 1
legal legal legal -> incomplete : 1
legal legal is -> not : 1
legal is not -> an : 1
is not an -> octal : 1
is not an -> examples : 1
is not an -> or : 1
is not an -> integral : 3
is not an -> error : 1
is not an -> operand : 1
is not an -> empty : 1
is not an -> interactive : 2
is not an -> array : 1
is not an -> output : 1
is not an -> and : 2
is not an -> when : 1
is not an -> a : 1
not an octal -> digit : 1
an octal digit -> cannot : 1
octal digit cannot -> repeat : 1
digit cannot repeat -> a : 1
cannot repeat a -> literal : 1
repeat a literal -> has : 1
a literal has -> an : 1
a literal has -> type : 1
literal has an -> integer : 1
literal has an -> implicit : 1
has an integer -> a : 1
an integer a -> decimal : 2
integer a decimal -> a : 1
integer a decimal -> and : 1
a decimal a -> fractional : 1
decimal a fractional -> and : 1
a fractional and -> an : 1
fractional and an -> exponent : 1
and an exponent -> you : 1
and an exponent -> a : 1
and an exponent -> the : 1
an exponent you -> must : 1
exponent you must -> include : 1
you must include -> the : 2
you must include -> this : 1
must include the -> decimal : 1
must include the -> integer : 1
include the decimal -> the : 1
the decimal the -> or : 1
the decimal the -> function : 2
decimal the or -> you : 1
the or you -> must : 1
the or you -> can : 1
or you must -> include : 1
include the integer -> the : 1
the integer the -> fractional : 1
the integer the -> number : 2
integer the fractional -> or : 1
the fractional or -> the : 1
fractional or the -> signed : 1
or the signed -> exponent : 1
the signed exponent -> is : 1
signed exponent is -> introduced : 1
exponent is introduced -> by : 2
exponent is introduced -> with : 1
is introduced by -> or : 2
is introduced by -> not : 1
is introduced by -> a : 1
introduced by or -> the : 1
introduced by or -> else : 1
by or the -> type : 1
or the type -> is : 4
or the type -> of : 5
type is unless -> there : 1
is unless there -> is : 1
unless there is -> a : 1
there is a -> for : 1
there is a -> standard : 1
there is a -> single : 1
there is a -> space : 1
there is a -> set : 2
there is a -> corresponding : 11
there is a -> read : 3
there is a -> decimal : 1
there is a -> write : 1
is a for -> type : 1
a for type -> and : 1
for type and -> for : 1
type and for -> the : 1
for the suffix -> can : 1
uppercase or are -> some : 1
or are some -> examples : 1
examples of legal -> legal : 1
of legal legal -> legal : 1
legal legal incomplete -> exponent : 1
legal incomplete exponent -> no : 1
incomplete exponent no -> decimal : 1
exponent no decimal -> or : 1
no decimal or -> exponent : 1
decimal or exponent -> missing : 1
or exponent missing -> integer : 1
exponent missing integer -> or : 1
missing integer or -> are : 1
integer or are -> two : 1
or are two -> both : 1
are two both -> and : 1
two both and -> literals : 1
both and literals -> are : 1
and literals are -> enclosed : 1
and literals are -> converted : 1
literals are enclosed -> in : 2
are enclosed in -> single : 1
are enclosed in -> double : 1
are enclosed in -> a : 1
enclosed in single -> if : 1
in single if -> the : 1
single if the -> literal : 1
single if the -> numerator : 1
single if the -> result : 1
single if the -> object : 1
if the literal -> begins : 1
if the literal -> contains : 1
the literal begins -> with : 1
literal begins with -> it : 1
begins with it -> is : 1
with it is -> a : 2
it is a -> wide : 1
it is a -> narrow : 1
it is a -> not : 1
it is a -> series : 1
it is a -> list : 1
it is a -> binary : 1
it is a -> total : 1
it is a -> constant : 1
it is a -> it : 1
it is a -> programming : 1
it is a -> big : 1
it is a -> synonym : 1
it is a -> bidirectional : 1
is a wide -> character : 5
is a wide -> another : 2
is a wide -> in : 5
is a wide -> control : 1
a wide character -> literal : 1
a wide character -> can : 1
a wide character -> must : 1
a wide character -> and : 1
a wide character -> the : 2
a wide character -> to : 8
a wide character -> representation : 1
a wide character -> from : 1
a wide character -> in : 1
a wide character -> is : 12
a wide character -> for : 2
a wide character -> type : 1
a wide character -> standard : 4
wide character literal -> it : 1
wide character literal -> is : 1
character literal it -> is : 1
literal it is -> a : 1
is a narrow -> character : 1
a narrow character -> literal : 2
a narrow character -> literals : 1
a narrow character -> to : 1
a narrow character -> must : 1
a narrow character -> is : 1
a narrow character -> or : 1
narrow character literal -> narrow : 1
narrow character literal -> contains : 1
character literal narrow -> characters : 1
literal narrow characters -> are : 1
narrow characters are -> used : 1
narrow characters are -> converted : 1
narrow characters are -> stored : 1
characters are used -> more : 1
are used more -> frequently : 1
used more frequently -> than : 1
more frequently than -> wide : 1
frequently than wide -> so : 1
than wide so -> the : 1
wide so the -> adjective : 1
so the adjective -> is : 1
the adjective is -> usually : 1
adjective is usually -> with : 1
is usually with -> no : 1
usually with no -> value : 1
with no value -> of : 3
with no value -> returned : 2
no value of -> a : 1
no value of -> is : 2
value of a -> narrow : 1
value of a -> data : 1
value of a -> or : 1
value of a -> default : 1
value of a -> character : 1
value of a -> scalar : 1
value of a -> wide : 2
value of a -> base : 1
value of a -> function : 1
of a narrow -> or : 1
of a narrow -> stream : 1
a narrow or -> wide : 1
narrow or wide -> character : 1
narrow or wide -> but : 1
or wide character -> literal : 1
character literal is -> the : 1
character literal is -> always : 1
literal is the -> value : 1
is the value -> of : 5
is the value -> is : 4
is the value -> that : 1
is the value -> can : 1
the value of -> the : 18
the value of -> its : 1
the value of -> cast : 1
the value of -> in : 1
the value of -> is : 4
the value of -> a : 4
the value of -> any : 1
the value of -> an : 3
the value of -> struct : 1
the value of -> positive : 1
value of the -> encoding : 1
value of the -> newline : 1
value of the -> first : 2
value of the -> appropriate : 1
value of the -> right : 1
value of the -> member : 1
value of the -> initializer : 1
value of the -> for : 1
value of the -> same : 1
value of the -> directive : 1
value of the -> preceding : 1
value of the -> iterator : 1
value of the -> destination : 1
value of the -> bit : 2
value of the -> if : 1
value of the -> referenced : 1
value of the -> parameter : 1
value of the -> significand : 2
value of the -> signal : 1
value of the -> the : 4
value of the -> header : 1
value of the -> terminate : 1
value of the -> unexpected : 1
value of the -> of : 1
value of the -> current : 1
value of the -> exceeds : 1
of the encoding -> in : 1
the encoding in -> the : 1
encoding in the -> execution : 1
in the execution -> character : 1
execution character if -> the : 1
character if the -> literal : 1
character if the -> character : 2
character if the -> write : 1
character if the -> deallocation : 1
character if the -> flag : 1
the literal contains -> more : 1
literal contains more -> than : 1
contains more than -> one : 2
more than one -> the : 4
more than one -> of : 2
more than one -> enumerator : 1
more than one -> statement : 1
more than one -> function : 1
more than one -> match : 1
more than one -> base : 2
more than one -> different : 1
more than one -> position : 2
more than one -> file : 1
more than one -> instance : 1
more than one -> this : 1
more than one -> a : 1
than one the -> literal : 1
than one the -> type : 2
than one the -> function : 1
one the literal -> value : 1
the literal value -> is : 1
literal value is -> note : 1
value is note -> that : 2
is note that -> a : 2
is note that -> c : 1
is note that -> for : 1
is note that -> is : 1
is note that -> does : 1
is note that -> has : 1
note that a -> character : 1
note that a -> pointer : 1
note that a -> type : 1
note that a -> library : 1
that a character -> might : 1
a character might -> have : 1
character might have -> different : 1
might have different -> encodings : 1
might have different -> default : 1
might have different -> control : 1
have different encodings -> in : 1
different encodings in -> different : 1
encodings in different -> consult : 1
in different consult -> your : 1
different consult your -> documentation : 1
consult your documentation -> to : 2
consult your documentation -> for : 1
your documentation to -> learn : 3
documentation to learn -> which : 2
documentation to learn -> how : 1
to learn which -> encoding : 1
to learn which -> macro : 1
learn which encoding -> it : 1
which encoding it -> uses : 1
encoding it uses -> for : 1
it uses for -> character : 1
uses for character -> character : 1
for character character -> literal : 1
character character literal -> with : 1
character literal with -> a : 1
literal with a -> single : 1
with a single -> character : 1
with a single -> value : 1
with a single -> calls : 1
with a single -> copy : 2
with a single -> an : 1
with a single -> element : 1
with a single -> saving : 1
a single character -> has : 1
a single character -> as : 1
a single character -> might : 1
a single character -> from : 1
a single character -> to : 1
a single character -> and : 2
a single character -> or : 2
a single character -> if : 1
a single character -> buffer : 1
a single character -> array : 1
single character has -> type : 1
character has type -> with : 1
has type with -> more : 1
has type with -> no : 1
type with more -> than : 1
with more than -> one : 1
one the type -> is : 1
one the type -> must : 1
one the type -> of : 1
the type of -> a : 2
the type of -> character : 1
the type of -> the : 34
the type of -> one : 1
the type of -> must : 3
the type of -> but : 1
the type of -> does : 2
the type of -> without : 1
the type of -> evaluating : 1
the type of -> is : 4
the type of -> or : 1
the type of -> assignment : 1
the type of -> an : 1
the type of -> which : 1
the type of -> double : 1
the type of -> any : 3
the type of -> each : 2
the type of -> in : 1
the type of -> point : 1
the type of -> if : 1
the type of -> and : 1
the type of -> its : 1
type of a -> character : 1
type of a -> simpler : 1
type of a -> static : 1
type of a -> the : 1
of a character -> literal : 1
of a character -> to : 1
of a character -> in : 1
of a character -> array : 1
a character literal -> is : 1
a character literal -> always : 1
literal is always -> a : 1
is always a -> character : 1
is always a -> signaling : 1
always a character -> literal : 1
character literal always -> has : 1
literal always has -> type : 1
always has type -> changed : 1
has type changed -> the : 1
type changed the -> type : 1
changed the type -> of : 1
type of character -> literals : 1
of character literals -> to : 1
character literals to -> support : 1
literals to support -> especially : 1
to support especially -> for : 1
support especially for -> starts : 1
especially for starts -> a : 1
for starts a -> new : 1
starts a new -> line : 1
a new line -> and : 1
new line and -> does : 1
line and does -> not : 1
and does not -> print : 1
and does not -> know : 1
and does not -> return : 1
and does not -> introduce : 1
and does not -> provide : 1
and does not -> affect : 1
and does not -> modify : 1
and does not -> depend : 1
does not print -> the : 1
not print the -> integer : 1
print the integer -> value : 1
the integer value -> of : 2
the integer value -> falls : 1
integer value of -> the : 1
integer value of -> statement : 1
integer value of -> is : 1
of the newline -> with : 1
the newline with -> no : 1
newline with no -> character : 1
with no character -> literal : 1
no character literal -> can : 1
character literal can -> be : 1
be a plain -> character : 1
a plain character -> an : 1
a plain character -> if : 1
plain character an -> escape : 1
character an escape -> sequence : 1
an escape sequence -> or : 1
an escape sequence -> for : 1
escape sequence or -> a : 1
sequence or a -> universal : 1
or a universal -> character : 1
universal character escape -> lists : 1
character escape lists -> the : 1
escape lists the -> possible : 1
lists the possible -> escape : 1
lists the possible -> values : 1
the possible escape -> note : 1
possible escape note -> that : 1
escape note that -> you : 1
note that you -> must : 2
note that you -> might : 2
that you must -> use : 3
you must use -> an : 1
you must use -> exactly : 1
you must use -> to : 1
you must use -> if : 1
you must use -> a : 3
you must use -> the : 3
you must use -> not : 1
you must use -> protect : 1
you must use -> signal : 1
must use an -> escape : 1
use an escape -> sequence : 1
escape sequence for -> a : 1
sequence for a -> backslash : 1
for a backslash -> or : 1
a backslash or -> character : 1
backslash or character -> using : 1
or character using -> an : 1
character using an -> escape : 1
using an escape -> for : 1
an escape for -> a : 1
escape for a -> double : 1
for a double -> quote : 1
a double quote -> or : 1
double quote or -> question : 1
quote or question -> mark : 1
or question mark -> is : 1
question mark is -> only : 1
mark is only -> the : 1
is only the -> characters : 1
is only the -> second : 1
is only the -> third : 1
only the characters -> shown : 1
only the characters -> for : 1
only the characters -> are : 2
the characters shown -> in : 1
characters shown in -> escape : 1
shown in escape -> are : 1
in escape are -> allowed : 1
escape are allowed -> in : 1
are allowed in -> an : 1
allowed in an -> escape : 1
in an escape -> compilers : 1
an escape compilers -> extend : 1
escape compilers extend -> the : 1
extend the standard -> and : 1
standard and recognize -> other : 1
and recognize other -> escape : 1
recognize other escape -> escape : 1
other escape escape -> escape : 1
escape escape escape -> solid : 1
escape escape solid -> solid : 1
escape solid solid -> solid : 1
solid solid character -> to : 1
solid solid character -> solid : 1
solid character to -> avoid : 1
character to avoid -> creating : 1
to avoid creating -> a : 1
avoid creating a -> solid : 1
creating a solid -> solid : 1
a solid solid -> solid : 3
solid solid or -> solid : 6
solid or solid -> solid : 4
solid or solid -> update : 2
solid or solid -> or : 1
or solid solid -> solid : 7
solid solid number -> of : 1
solid solid number -> week : 4
solid number of -> one : 2
number of one -> to : 1
number of one -> or : 1
number of one -> of : 1
of one to -> three : 1
one to three -> solid : 1
to three solid -> number : 1
three solid number -> of : 1
of one or -> more : 6
one or more -> literals : 1
one or more -> arguments : 1
one or more -> the : 2
one or more -> expressions : 1
one or more -> of : 2
one or more -> pointer : 1
one or more -> type : 1
one or more -> labels : 1
one or more -> each : 1
one or more -> times : 1
one or more -> and : 1
one or more -> which : 1
one or more -> template : 3
one or more -> or : 1
one or more -> iterators : 2
one or more -> macros : 1
one or more -> characters : 1
one or more -> copies : 3
one or more -> items : 4
one or more -> related : 1
one or more -> category : 1
one or more -> pairs : 4
one or more -> elements : 2
one or more -> note : 1
or more literals -> are : 1
more literals are -> enclosed : 1
enclosed in double -> a : 1
in double a -> string : 1
double a string -> contains : 1
a string contains -> characters : 1
string contains characters -> that : 1
contains characters that -> are : 1
characters that are -> similar : 1
characters that are -> in : 2
that are similar -> to : 3
are similar to -> character : 1
are similar to -> java : 1
are similar to -> the : 2
are similar to -> in : 1
similar to character -> plain : 1
to character plain -> escape : 1
character plain escape -> and : 1
plain escape and -> universal : 1
escape and universal -> a : 1
and universal a -> string : 1
universal a string -> cannot : 1
a string cannot -> cross : 1
string cannot cross -> a : 1
cannot cross a -> line : 1
cross a line -> boundary : 1
a line boundary -> in : 1
line boundary in -> the : 1
boundary in the -> source : 1
in the source -> but : 1
in the source -> character : 2
in the source -> file : 2
in the source -> long : 1
in the source -> code : 1
in the source -> files : 1
in the source -> the : 1
in the source -> range : 2
the source but -> it : 1
source but it -> can : 1
but it can -> contain : 1
but it can -> be : 1
but it can -> appear : 1
but it can -> have : 2
it can contain -> escaped : 1
can contain escaped -> line : 1
contain escaped line -> endings : 1
escaped line endings -> followed : 1
line endings followed -> by : 1
endings followed by -> with : 1
followed by with -> no : 1
by with no -> string : 1
with no string -> literal : 1
with no string -> and : 1
no string literal -> is : 1
string literal is -> prefaced : 1
string literal is -> an : 1
literal is prefaced -> with : 1
is prefaced with -> in : 1
is prefaced with -> it : 1
is prefaced with -> a : 1
prefaced with in -> a : 1
with in a -> wide : 1
in a wide -> string : 2
in a wide -> and : 2
in a wide -> function : 1
in a wide -> const : 1
a wide string -> a : 1
a wide string -> in : 1
a wide string -> is : 1
a wide string -> that : 1
a wide string -> to : 10
a wide string -> for : 1
a wide string -> with : 1
wide string a -> single : 1
string a single -> universal : 1
a single universal -> character : 1
single universal character -> always : 1
universal character always -> maps : 1
character always maps -> to : 1
always maps to -> a : 1
maps to a -> single : 1
to a single -> wide : 2
to a single -> space : 1
to a single -> bit : 1
to a single -> the : 1
to a single -> element : 2
to a single -> many : 1
a single wide -> in : 1
a single wide -> it : 1
a single wide -> call : 1
single wide in -> a : 1
wide in a -> narrow : 1
in a narrow -> string : 1
a narrow string -> the : 1
a narrow string -> with : 1
narrow string the -> implementation : 1
string the implementation -> determines : 1
the implementation determines -> whether : 1
implementation determines whether -> a : 1
determines whether a -> universal : 1
determines whether a -> state : 1
determines whether a -> wide : 12
determines whether a -> narrow : 1
determines whether a -> character : 11
whether a universal -> character : 1
universal character maps -> to : 1
character maps to -> one : 1
maps to one -> or : 1
maps to one -> of : 1
to one or -> multiple : 1
one or multiple -> characters : 1
or multiple characters -> a : 1
multiple characters a -> multibyte : 1
characters a multibyte -> see : 1
a multibyte see -> for : 1
multibyte see for -> more : 1
see for more -> information : 22
see for more -> few : 1
see for more -> an : 2
see for more -> a : 2
see for more -> can : 1
see for more -> that : 1
see for more -> details : 1
see for more -> in : 5
see for more -> the : 1
see for more -> class : 2
more information on -> multibyte : 1
more information on -> how : 1
more information on -> and : 1
more information on -> overloaded : 1
more information on -> iterators : 1
information on multibyte -> adjacent : 1
on multibyte adjacent -> string : 1
multibyte adjacent string -> literals : 1
adjacent string literals -> separated : 1
string literals separated -> by : 1
literals separated by -> including : 1
separated by including -> new : 1
by including new -> are : 1
including new are -> concatenated : 1
new are concatenated -> at : 1
are concatenated at -> compile : 1
concatenated at compile -> time : 1
at compile time -> into : 1
at compile time -> and : 1
compile time into -> a : 1
time into a -> single : 1
into a single -> this : 1
into a single -> in : 1
into a single -> that : 1
a single this -> is : 1
single this is -> often : 1
this is often -> a : 1
this is often -> done : 1
is often a -> convenient : 1
often a convenient -> way : 1
a convenient way -> to : 7
convenient way to -> break : 1
convenient way to -> implement : 1
convenient way to -> manipulate : 1
convenient way to -> construct : 4
convenient way to -> create : 5
way to break -> a : 1
to break a -> long : 1
break a long -> string : 1
a long string -> across : 1
long string across -> multiple : 1
string across multiple -> do : 1
across multiple do -> not : 1
multiple do not -> try : 1
do not try -> to : 1
not try to -> combine : 1
try to combine -> a : 1
to combine a -> narrow : 1
combine a narrow -> string : 1
narrow string with -> a : 1
string with a -> wide : 1
string with a -> universal : 1
with a wide -> string : 1
wide string in -> this : 1
string in this -> concatenating : 1
in this concatenating -> adjacent : 1
this concatenating adjacent -> the : 1
concatenating adjacent the -> null : 1
adjacent the null -> character : 1
the null character -> or : 1
the null character -> at : 1
null character or -> is : 1
character or is -> automatically : 1
or is automatically -> appended : 1
is automatically appended -> after : 1
automatically appended after -> the : 1
appended after the -> last : 1
after the last -> character : 1
after the last -> case : 1
after the last -> deleted : 1
the last character -> in : 2
the last character -> written : 1
the last character -> of : 2
the last character -> at : 2
last character in -> the : 2
character in the -> string : 3
character in the -> source : 1
character in the -> ascii : 1
character in the -> extended : 5
character in the -> a : 2
character in the -> shift : 2
character in the -> input : 1
character in the -> range : 1
character in the -> locale : 2
character in the -> the : 2
character in the -> but : 2
character in the -> first : 1
in the string -> are : 1
in the string -> specifies : 2
in the string -> if : 2
in the string -> the : 1
in the string -> in : 2
in the string -> whichever : 1
in the string -> before : 1
the string are -> some : 1
the string are -> all : 1
the string are -> in : 1
the string are -> it : 1
string are some -> examples : 1
examples of string -> note : 1
of string note -> that : 1
string note that -> the : 1
that the first -> three : 1
that the first -> two : 1
that the first -> is : 1
that the first -> form : 2
the first three -> form : 1
the first three -> characters : 2
the first three -> letters : 1
the first three -> are : 1
first three form -> identical : 1
three form identical -> ascii : 1
form identical ascii -> portable : 1
identical ascii portable -> unterminated : 1
ascii portable unterminated -> string : 1
portable unterminated string -> with : 1
unterminated string with -> string : 1
string with string -> type : 1
with string type -> is : 1
string type is -> an : 1
is an array -> of : 5
is an array -> subscript : 1
an array of -> for : 1
an array of -> or : 3
an array of -> function : 2
an array of -> to : 1
an array of -> integers : 1
an array of -> and : 2
an array of -> cannot : 1
an array of -> pointers : 1
an array of -> when : 1
an array of -> numeric : 2
an array of -> elements : 1
an array of -> at : 1
an array of -> each : 2
an array of -> mask : 1
an array of -> it : 1
an array of -> the : 1
an array of -> as : 1
an array of -> indices : 1
an array of -> pod : 1
array of for -> type : 1
of for type -> is : 1
for type is -> wide : 1
type is wide -> string : 1
is wide string -> literals : 1
literals are arrays -> of : 1
are arrays of -> all : 1
arrays of all -> string : 1
of all string -> literals : 1
all string literals -> have : 1
string literals have -> static : 1
literals have static -> lifetimes : 1
have static lifetimes -> for : 1
static lifetimes for -> more : 1
lifetimes for more -> information : 1
information about with -> an : 1
information about with -> the : 1
about with an -> of : 1
with an of -> the : 1
an of the -> compiler : 1
the compiler can -> automatically : 1
the compiler can -> find : 2
the compiler can -> insert : 1
the compiler can -> optimize : 3
the compiler can -> use : 1
the compiler can -> deduce : 1
the compiler can -> replace : 1
compiler can automatically -> convert : 1
can automatically convert -> the : 1
automatically convert the -> array : 1
automatically convert the -> type : 1
convert the array -> to : 1
the array to -> a : 2
the array to -> be : 1
the array to -> the : 2
the array to -> and : 1
array to a -> pointer : 1
array to a -> an : 1
array to a -> the : 1
array to a -> long : 1
array to a -> as : 5
array to a -> shift : 1
to a pointer -> to : 6
to a pointer -> pointing : 1
to a pointer -> the : 1
to a pointer -> always : 1
to a pointer -> produces : 1
to a pointer -> in : 1
to a pointer -> of : 1
to a pointer -> is : 1
to a pointer -> and : 1
a pointer to -> the : 72
a pointer to -> a : 47
a pointer to -> which : 2
a pointer to -> an : 11
a pointer to -> int : 1
a pointer to -> and : 2
a pointer to -> any : 1
a pointer to -> or : 4
a pointer to -> qualified : 1
a pointer to -> is : 2
a pointer to -> class : 1
a pointer to -> such : 1
a pointer to -> means : 1
a pointer to -> for : 1
a pointer to -> that : 2
a pointer to -> indicate : 1
a pointer to -> in : 1
a pointer to -> uninitialized : 1
pointer to the -> first : 13
pointer to the -> other : 1
pointer to the -> class : 1
pointer to the -> object : 2
pointer to the -> base : 1
pointer to the -> same : 2
pointer to the -> allocated : 1
pointer to the -> the : 6
pointer to the -> pod : 1
pointer to the -> that : 1
pointer to the -> vtable : 1
pointer to the -> next : 1
pointer to the -> node : 1
pointer to the -> memory : 1
pointer to the -> cast : 1
pointer to the -> target : 1
pointer to the -> current : 2
pointer to the -> output : 1
pointer to the -> input : 1
pointer to the -> array : 1
pointer to the -> start : 6
pointer to the -> newly : 4
pointer to the -> last : 2
pointer to the -> static : 2
pointer to the -> byte : 1
pointer to the -> character : 3
pointer to the -> member : 8
pointer to the -> in : 1
pointer to the -> item : 2
pointer to the -> stream : 2
pointer to the -> adapted : 1
pointer to the -> if : 1
pointer to the -> previous : 1
pointer to the -> internal : 6
the first you -> for : 1
first you for -> assign : 1
you for assign -> a : 1
for assign a -> string : 1
assign a string -> literal : 1
a string literal -> to : 2
a string literal -> is : 1
a string literal -> whose : 1
string literal to -> a : 2
literal to a -> suitable : 1
literal to a -> attempting : 1
to a suitable -> pointer : 1
to a suitable -> constructor : 1
to a suitable -> which : 1
to a suitable -> allocator : 1
a suitable pointer -> ptr : 1
suitable pointer ptr -> a : 1
pointer ptr a -> special : 1
ptr a special -> you : 1
a special you -> can : 1
a special you -> cannot : 1
special you can -> also : 1
special you can -> one : 1
you can also -> convert : 5
you can also -> write : 2
you can also -> stick : 1
you can also -> use : 6
you can also -> choose : 1
you can also -> have : 1
you can also -> store : 1
you can also -> think : 1
you can also -> work : 2
you can also -> assign : 4
you can also -> declare : 1
can also convert -> a : 3
can also convert -> the : 2
also convert a -> string : 1
also convert a -> pointer : 1
also convert a -> back : 1
convert a string -> literal : 1
to a attempting -> to : 1
a attempting to -> modify : 1
attempting to modify -> the : 1
to modify the -> string : 1
to modify the -> object : 1
to modify the -> input : 1
modify the string -> results : 1
modify the string -> returned : 1
the string results -> in : 1
string results in -> undefined : 1
results in undefined -> this : 1
results in undefined -> its : 1
results in undefined -> converting : 2
results in undefined -> behavior : 2
results in undefined -> for : 1
results in undefined -> unsigned : 1
results in undefined -> function : 1
in undefined this -> conversion : 1
undefined this conversion -> is : 1
this conversion is -> and : 1
conversion is and -> code : 1
is and code -> does : 1
and code does -> not : 1
code does not -> rely : 1
code does not -> modify : 1
does not rely -> on : 1
not rely on -> are : 1
rely on are -> used : 1
on are used -> as : 1
are used as -> operators : 1
are used as -> padding : 1
used as operators -> and : 1
as operators and -> as : 1
operators and as -> punctuation : 1
and as punctuation -> statement : 1
as punctuation statement -> some : 1
punctuation statement some -> symbols : 1
statement some symbols -> are : 1
some symbols are -> made : 1
symbols are made -> of : 1
are made of -> multiple : 1
made of multiple -> adjacent : 1
of multiple adjacent -> the : 1
multiple adjacent the -> following : 1
adjacent the following -> are : 1
the following are -> all : 1
the following are -> some : 5
the following are -> identical : 1
the following are -> the : 5
the following are -> unambiguously : 1
the following are -> dependent : 1
the following are -> four : 1
the following are -> three : 1
the following are -> descriptions : 1
following are all -> the : 1
are all the -> symbols : 1
are all the -> member : 1
are all the -> purpose : 4
all the symbols -> used : 1
the symbols used -> for : 1
symbols used for -> operators : 1
used for operators -> and : 1
for operators and -> solid : 1
operators and solid -> solid : 1
and solid solid -> solid : 5
solid solid cannot -> insert : 1
solid cannot insert -> between : 1
cannot insert between -> characters : 1
insert between characters -> that : 1
between characters that -> make : 1
characters that make -> up : 1
that make up -> a : 2
that make up -> what : 1
that make up -> that : 2
that make up -> the : 1
up a and -> always : 1
a and always -> collects : 1
and always collects -> as : 1
always collects as -> many : 1
collects as many -> characters : 1
as many characters -> as : 1
many characters as -> it : 1
can to form -> a : 1
to form a -> symbol : 1
to form a -> single : 1
to form a -> to : 1
to form a -> heap : 1
form a symbol -> before : 1
a symbol before -> trying : 1
symbol before trying -> to : 1
before trying to -> interpret : 1
trying to interpret -> the : 1
to interpret the -> an : 1
to interpret the -> declaration : 1
to interpret the -> symbol : 1
interpret the an -> expression : 1
the an expression -> such : 1
an expression such -> as : 1
expression such as -> is : 1
as is read -> as : 1
is read as -> a : 3
is read as -> because : 1
is read as -> multibyte : 3
read as a -> common : 1
read as a -> sequence : 1
read as a -> long : 1
as a common -> error : 1
a common error -> when : 1
common error when -> first : 1
error when first -> using : 1
when first using -> templates : 1
first using templates -> is : 1
using templates is -> to : 1
templates is to -> omit : 1
is to omit -> a : 1
to omit a -> space : 1
omit a space -> between : 1
a space between -> closing : 1
a space between -> the : 1
a space between -> and : 1
space between closing -> angle : 1
between closing angle -> brackets : 1
closing angle brackets -> in : 1
angle brackets in -> a : 1
brackets in a -> nested : 1
in a nested -> template : 1
in a nested -> or : 1
in a nested -> the : 1
in a nested -> compound : 1
a nested template -> the : 1
nested template the -> following : 1
template the following -> is : 1
template the following -> are : 1
following is an -> example : 4
is an example -> with : 1
is an example -> of : 4
an example with -> that : 1
example with that -> note : 1
with that note -> the : 1
that note the -> space : 1
note the space -> example : 1
the space example -> is : 1
space example is -> incorrect : 1
example is incorrect -> without : 1
is incorrect without -> the : 1
incorrect without the -> space : 1
without the space -> character : 1
the space character -> because : 1
the space character -> are : 1
space character because -> the : 1
character because the -> adjacent : 1
because the adjacent -> greater : 1
the adjacent greater -> than : 1
adjacent greater than -> signs : 1
greater than signs -> would : 1
than signs would -> be : 1
signs would be -> interpreted : 1
would be interpreted -> as : 1
be interpreted as -> a : 2
be interpreted as -> an : 1
interpreted as a -> single : 1
interpreted as a -> declaration : 1
interpreted as a -> and : 1
interpreted as a -> preprocessing : 1
interpreted as a -> series : 1
interpreted as a -> negative : 1
interpreted as a -> vector : 2
interpreted as a -> if : 1
interpreted as a -> numeric : 1
interpreted as a -> triplet : 1
a single not -> as : 1
single not as -> two : 1
not as two -> separate : 1
as two separate -> closing : 1
two separate closing -> angle : 1
separate closing angle -> slightly : 1
closing angle slightly -> less : 1
angle slightly less -> error : 1
slightly less error -> is : 1
less error is -> instantiating : 1
error is instantiating -> a : 1
is instantiating a -> template : 1
instantiating a template -> with : 1
instantiating a template -> do : 1
a template with -> a : 1
a template with -> several : 1
template with a -> template : 1
template with a -> function : 1
with a template -> argument : 1
with a template -> header : 2
with a template -> when : 1
with a template -> arguments : 1
a template argument -> that : 1
a template argument -> for : 1
a template argument -> or : 1
a template argument -> in : 1
template argument that -> uses : 1
argument that uses -> the : 1
that uses the -> global : 1
that uses the -> and : 1
that uses the -> this : 1
that uses the -> or : 1
that uses the -> iterator : 1
that uses the -> given : 1
that uses the -> facet : 1
that uses the -> common : 1
uses the global -> scope : 1
the global scope -> space : 1
the global scope -> operator : 5
the global scope -> of : 1
the global scope -> by : 1
the global scope -> or : 2
the global scope -> as : 1
global scope space -> here : 1
scope space here -> and : 1
space here and -> a : 1
here and a -> space : 1
and a space -> is : 1
a space is -> this : 1
space is this -> time : 1
is this time -> between : 1
this time between -> the : 1
time between the -> and : 1
between the and -> the : 1
and the scope -> operator : 1
and the scope -> of : 1
the scope operator -> to : 4
the scope operator -> such : 1
scope operator to -> prevent : 1
scope operator to -> access : 1
scope operator to -> qualify : 3
scope operator to -> call : 1
scope operator to -> look : 1
operator to prevent -> the : 1
to prevent the -> compiler : 1
to prevent the -> assignment : 1
prevent the compiler -> from : 1
the compiler from -> seeing : 1
compiler from seeing -> the : 1
from seeing the -> first : 1
seeing the first -> token : 1
the first token -> as : 1
first token as -> rather : 1
token as rather -> than : 1
as rather than -> the : 1
rather than the -> token : 1
than the token -> is : 1
the token is -> an : 1
the token is -> expanded : 1
token is an -> alternative : 1
is an alternative -> as : 1
an alternative as -> described : 1
alternative as described -> in : 1
as described in -> later : 1
as described in -> the : 4
as described in -> this : 1
as described in -> overloaded : 1
as described in -> you : 1
as described in -> a : 1
as described in -> class : 1
described in later -> in : 1
in this start -> with : 1
this start with -> and : 1
start with and -> end : 1
with and end -> with : 1
and end with -> these : 1
end with these -> comments : 1
with these comments -> do : 1
these comments do -> not : 1
comments do not -> for : 1
do not for -> this : 1
not for this -> is : 1
for this is -> a : 1
is a comment -> still : 1
a comment still -> a : 1
comment still a -> comment : 1
still a comment -> int : 1
a comment int -> comment : 1
comment int comment -> can : 1
int comment can -> also : 1
comment can also -> start : 1
can also start -> with : 1
also start with -> extending : 1
start with extending -> to : 1
with extending to -> the : 1
extending to the -> end : 1
to the end -> of : 26
to the end -> so : 2
end of the -> for : 2
end of the -> the : 13
end of the -> same : 4
end of the -> entire : 1
end of the -> or : 1
end of the -> and : 4
end of the -> loop : 2
end of the -> compound : 1
end of the -> expression : 1
end of the -> an : 1
end of the -> declaration : 1
end of the -> which : 1
end of the -> last : 3
end of the -> inserting : 1
end of the -> list : 2
end of the -> container : 1
end of the -> range : 2
end of the -> elements : 1
end of the -> output : 1
end of the -> a : 1
end of the -> line : 1
end of the -> macro : 1
end of the -> source : 1
end of the -> in : 2
end of the -> if : 3
end of the -> type : 1
end of the -> labels : 1
end of the -> destination : 1
end of the -> that : 1
end of the -> result : 12
end of the -> second : 1
end of the -> whichever : 1
end of the -> positive : 1
end of the -> caller : 2
end of the -> string : 1
end of the -> like : 1
end of the -> all : 3
end of the -> deque : 1
end of the -> negative : 1
end of the -> input : 4
end of the -> return : 3
end of the -> no : 1
end of the -> iterators : 1
end of the -> at : 1
end of the -> formatted : 3
end of the -> buffer : 1
end of the -> depending : 1
end of the -> pointers : 1
end of the -> characters : 1
end of the -> its : 1
end of the -> character : 1
end of the -> vector : 2
of the for -> int : 1
of the for -> in : 1
of the for -> more : 2
of the for -> details : 1
of the for -> all : 2
of the for -> each : 1
of the for -> maximum : 1
of the for -> an : 1
the for int -> largest : 1
for int largest -> size : 1
int largest size -> of : 2
largest size of -> a : 2
size of a -> a : 2
size of a -> widget : 1
size of a -> reference : 1
size of a -> subobject : 1
size of a -> return : 1
size of a -> type : 1
size of a -> single : 1
size of a -> the : 1
size of a -> digit : 1
size of a -> multibyte : 1
of a a -> and : 1
of a a -> reference : 1
of a a -> string : 1
of a a -> base : 1
of a a -> or : 1
of a a -> text : 1
of a a -> generalized : 1
of a a -> slice : 1
of a a -> a : 1
a a and -> characters : 1
a a and -> possibly : 1
a and characters -> have : 1
and characters have -> no : 1
characters have no -> special : 1
have no special -> within : 1
have no special -> you : 1
have no special -> meaning : 1
no special within -> a : 1
special within a -> and : 1
within a and -> have : 1
a and have -> no : 1
and have no -> special : 1
no special you -> can : 1
you can one -> kind : 1
can one kind -> of : 1
one kind of -> comment : 1
kind of comment -> within : 1
of comment within -> the : 1
comment within the -> other : 1
within the other -> for : 1
the other for -> comment : 1
the other for -> the : 1
other for comment -> out : 1
for comment out -> a : 1
comment out a -> block : 1
out a block -> of : 1
a block of -> const : 1
block of const -> int : 1
of const int -> largest : 1
of const int -> result : 1
const int largest -> size : 1
of a widget -> inhibit : 1
a widget inhibit -> the : 1
widget inhibit the -> start : 1
inhibit the start -> of : 1
the start of -> a : 3
the start of -> the : 30
the start of -> each : 1
the start of -> that : 4
start of a -> block : 1
start of a -> and : 2
of a block -> comment : 1
of a block -> and : 1
a block comment -> const : 1
block comment const -> int : 1
comment const int -> testing : 1
const int testing -> smaller : 1
int testing smaller -> widget : 1
testing smaller widget -> limit : 1
smaller widget limit -> comment : 1
widget limit comment -> is : 1
limit comment is -> treated : 1
comment is treated -> as : 1
is treated as -> for : 1
is treated as -> a : 4
is treated as -> an : 1
treated as for -> describes : 1
as for describes -> two : 1
for describes two -> separate : 1
describes two separate -> and : 1
two separate and -> with : 1
separate and with -> no : 1
and with no -> sets : 1
and with no -> type : 2
and with no -> function : 1
with no sets -> that : 1
no sets that -> uses : 1
sets that uses -> at : 1
that uses at -> compile : 1
uses at compile -> time : 1
compile time and -> runtime : 1
time and runtime -> are : 1
and runtime are -> a : 1
runtime are a -> source : 1
are a source -> file : 1
a source file -> is : 2
a source file -> must : 1
a source file -> name : 1
a source file -> where : 1
a source file -> contains : 1
a source file -> ignoring : 1
a source file -> start : 1
a source file -> uses : 1
source file is -> read : 1
source file is -> the : 1
source file is -> a : 1
file is read -> as : 1
as a sequence -> of : 4
a sequence of -> characters : 7
a sequence of -> zero : 2
a sequence of -> type : 2
a sequence of -> transformations : 1
a sequence of -> bits : 1
a sequence of -> c : 1
a sequence of -> narrow : 2
a sequence of -> elements : 1
a sequence of -> at : 1
a sequence of -> which : 1
a sequence of -> letters : 1
a sequence of -> typename : 1
a sequence of -> to : 1
a sequence of -> you : 1
a sequence of -> the : 5
a sequence of -> bit : 1
a sequence of -> multibyte : 1
a sequence of -> a : 1
a sequence of -> adding : 1
a sequence of -> input : 1
a sequence of -> each : 2
a sequence of -> items : 3
of characters in -> the : 4
characters in the -> character : 1
characters in the -> source : 1
characters in the -> standard : 1
characters in the -> a : 2
characters in the -> scanset : 1
characters in the -> file : 1
characters in the -> are : 2
characters in the -> range : 3
characters in the -> array : 3
characters in the -> output : 1
characters in the -> in : 1
in the character -> when : 1
in the character -> traits : 1
the character when -> a : 1
the character when -> you : 1
character when a -> source : 1
when a source -> file : 1
file is the -> physical : 1
file is the -> macro : 1
file is the -> file : 1
is the physical -> characters : 1
the physical characters -> are : 1
physical characters are -> mapped : 1
characters are mapped -> to : 2
are mapped to -> the : 1
are mapped to -> unicode : 1
mapped to the -> character : 1
to the character -> which : 1
to the character -> if : 1
to the character -> must : 1
to the character -> immediately : 1
to the character -> specifies : 1
to the character -> type : 1
to the character -> array : 2
to the character -> that : 3
the character which -> is : 1
the character which -> must : 1
character which is -> called : 1
which is called -> the : 1
which is called -> when : 1
is called the -> character : 1
is called the -> later : 1
is called the -> reading : 1
is called the -> the : 1
is called the -> you : 1
is called the -> when : 1
is called the -> but : 1
called the character -> the : 1
called the character -> might : 1
the character the -> mapping : 1
the character the -> size : 1
character the mapping -> is : 1
the mapping is -> but : 1
the mapping is -> casting : 1
mapping is but -> many : 1
is but many -> implementations : 1
but many implementations -> use : 1
many implementations use -> the : 1
many implementations use -> all : 1
many implementations use -> iso : 1
implementations use the -> same : 1
use the same -> character : 1
use the same -> mechanism : 1
use the same -> to : 1
use the same -> series : 1
use the same -> type : 1
use the same -> c : 1
use the same -> stream : 1
use the same -> library : 1
the same character -> the : 1
the same character -> in : 1
the same character -> as : 1
the same character -> sequence : 1
the same character -> that : 1
the same character -> contents : 1
same character the -> very : 1
character the very -> the : 1
the very the -> character : 1
very the character -> set : 1
the character set -> always : 1
the character set -> supports : 1
the character set -> encoding : 1
character set always -> includes : 1
set always includes -> the : 1
always includes the -> characters : 1
includes the characters -> listed : 1
the characters listed -> the : 2
characters listed the -> numeric : 1
characters listed the -> execution : 1
listed the numeric -> values : 1
the numeric values -> of : 1
numeric values of -> these : 1
values of these -> characters : 1
of these characters -> are : 1
these characters are -> character : 1
characters are character -> called : 1
are character called -> the : 1
character called the -> character : 1
character called the -> when : 1
the character might -> be : 1
character might be -> different : 1
might be different -> from : 1
be different from -> the : 1
be different from -> if : 1
different from the -> source : 1
different from the -> other : 1
different from the -> members : 1
different from the -> rules : 1
different from the -> rest : 1
character set it -> is : 1
set it is -> often : 1
it is often -> the : 1
it is often -> simplest : 1
it is often -> used : 1
it is often -> in : 1
is often the -> if : 1
often the if -> the : 1
the if the -> character : 1
the if the -> entity : 2
the if the -> return : 1
the if the -> allocation : 2
the if the -> class : 1
the if the -> two : 1
the if the -> flag : 3
the if the -> file : 1
the if the -> modifier : 2
the if the -> input : 1
the if the -> object : 1
the if the -> stream : 2
the if the -> buffer : 1
the if the -> list : 1
the if the -> key : 2
the if the -> request : 1
the if the -> queue : 1
the if the -> desired : 1
if the character -> sets : 1
if the character -> set : 1
if the character -> type : 2
the character sets -> are : 1
the character sets -> the : 1
character sets are -> the : 1
character sets are -> with : 1
character sets are -> program : 1
sets are the -> compiler : 1
are the compiler -> automatically : 1
the compiler automatically -> converts : 1
the compiler automatically -> convert : 1
the compiler automatically -> locates : 1
compiler automatically converts -> all : 1
automatically converts all -> character : 1
converts all character -> and : 1
all character and -> string : 1
string literals from -> the : 1
literals from the -> source : 1
character set to -> the : 1
character set to -> class : 1
character set to -> typename : 1
set to the -> execution : 1
set to the -> behavior : 1
set to the -> return : 5
set to the -> flag : 1
set to the -> number : 1
execution character the -> execution : 1
execution character the -> numeric : 1
character the execution -> character : 1
execution character includes -> all : 1
character includes all -> the : 1
includes all the -> characters : 1
all the characters -> in : 2
the characters in -> the : 7
the characters in -> and : 1
the characters in -> appear : 1
the characters in -> appears : 1
source character plus -> the : 1
character plus the -> characters : 1
plus the characters -> listed : 1
listed the execution -> character : 1
execution character set -> is : 2
execution character set -> one : 1
character set is -> a : 1
character set is -> some : 1
character set is -> iso : 1
character set is -> the : 1
set is a -> superset : 1
set is a -> container : 1
is a superset -> of : 1
a superset of -> the : 1
superset of the -> basic : 1
of the basic -> execution : 1
the basic execution -> character : 1
basic execution character -> additional : 1
execution character additional -> characters : 1
character additional characters -> are : 1
additional characters are -> and : 1
characters are and -> might : 1
characters are and -> other : 1
characters are and -> is : 1
are and might -> vary : 1
and might vary -> depending : 1
might vary depending -> on : 1
vary depending on -> source : 1
depending on source -> characters : 1
on source characters -> are : 1
source characters are -> mapped : 1
mapped to unicode -> and : 1
to unicode and -> from : 1
unicode and from -> unicode : 1
and from unicode -> to : 1
from unicode to -> the : 1
unicode to the -> execution : 1
execution character you -> can : 1
character you can -> specify : 2
character you can -> read : 1
character you can -> use : 1
character you can -> start : 1
you can specify -> any : 1
you can specify -> the : 2
can specify any -> character : 1
specify any character -> in : 1
specify any character -> that : 1
any character in -> the : 3
source file as -> a : 1
source file as -> just : 1
file as a -> in : 1
file as a -> sequence : 1
as a in -> the : 1
a in the -> form : 1
a in the -> global : 1
a in the -> the : 2
in the form -> or : 1
in the form -> of : 1
in the form -> in : 2
in the form -> an : 1
in the form -> and : 1
the form or -> in : 1
the form or -> use : 1
form or in -> which : 1
or in which -> or : 1
or in which -> is : 3
in which or -> is : 3
which or is -> the : 1
which or is -> it : 2
which or is -> for : 1
or is the -> hexadecimal : 1
or is the -> result : 1
or is the -> imaginary : 2
or is the -> guaranteed : 1
or is the -> international : 1
or is the -> number : 1
or is the -> return : 1
is the hexadecimal -> value : 1
the hexadecimal value -> for : 1
hexadecimal value for -> the : 1
value for the -> note : 1
value for the -> second : 1
value for the -> traits : 1
value for the -> that : 1
value for the -> type : 1
value for the -> the : 12
value for the -> and : 1
value for the -> character : 1
value for the -> two : 1
value for the -> next : 1
for the note -> that : 1
the note that -> you : 1
the note that -> the : 8
the note that -> there : 1
the note that -> each : 1
must use exactly -> four : 1
use exactly four -> or : 1
exactly four or -> eight : 1
four or eight -> hexadecimal : 1
or eight hexadecimal -> you : 1
eight hexadecimal you -> cannot : 1
hexadecimal you cannot -> use : 1
cannot use a -> universal : 1
cannot use a -> nonstatic : 1
cannot use a -> local : 1
cannot use a -> class : 1
cannot use a -> with : 1
use a universal -> character : 1
universal character to -> specify : 1
character to specify -> any : 1
to specify any -> character : 1
any character that -> is : 2
character that is -> in : 1
character that is -> not : 2
that is in -> the : 2
is in the -> source : 1
is in the -> scope : 3
is in the -> so : 1
is in the -> function : 1
is in the -> base : 1
is in the -> class : 1
is in the -> following : 1
is in the -> definitions : 1
is in the -> the : 6
is in the -> same : 2
is in the -> range : 12
is in the -> this : 1
is in the -> initial : 1
is in the -> classic : 1
character set or -> in : 1
set or in -> the : 1
or in the -> range : 1
or in the -> scope : 1
or in the -> case : 1
or in the -> following : 1
or in the -> definition : 2
or in the -> directory : 1
or in the -> locale : 1
in the range -> or : 5
in the range -> if : 3
in the range -> but : 1
in the range -> complexity : 1
in the range -> comparing : 1
in the range -> for : 4
in the range -> that : 5
in the range -> it : 7
in the range -> is : 7
in the range -> the : 11
in the range -> such : 6
in the range -> and : 10
in the range -> passing : 1
in the range -> to : 4
in the range -> are : 4
in the range -> order : 1
in the range -> so : 2
in the range -> first : 1
in the range -> see : 1
in the range -> function : 8
in the range -> starting : 2
in the range -> unless : 3
in the range -> must : 1
in the range -> into : 4
in the range -> in : 3
in the range -> which : 4
in the range -> added : 1
the range or -> with : 1
the range or -> a : 3
the range or -> is : 1
the range or -> until : 1
range or with -> no : 1
with no universal -> characters : 1
no universal characters -> map : 1
universal characters map -> to : 1
characters map to -> the : 1
map to the -> execution : 1
set is some -> compilers : 1
is some compilers -> recognize : 1
some compilers recognize -> universal : 1
compilers recognize universal -> characters : 1
recognize universal characters -> at : 1
universal characters at -> or : 1
characters at or -> support : 1
at or support -> them : 1
or support them -> only : 1
support them only -> in : 1
them only in -> limited : 1
only in limited -> you : 1
in limited you -> would : 1
limited you would -> not : 1
you would not -> write : 1
you would not -> be : 1
would not write -> a : 1
not write a -> universal : 1
not write a -> the : 1
write a universal -> character : 1
universal character you -> might : 1
character you might -> use : 1
you might use -> a : 1
you might use -> to : 1
might use a -> source : 1
use a source -> editor : 1
a source editor -> that : 1
source editor that -> lets : 1
editor that lets -> you : 1
that lets you -> edit : 1
that lets you -> add : 2
lets you edit -> source : 1
you edit source -> code : 1
edit source code -> in : 1
source code in -> any : 1
code in any -> and : 1
in any and -> the : 1
in any and -> and : 1
any and the -> editor : 1
any and the -> expression : 1
any and the -> context : 1
and the editor -> would : 1
the editor would -> store : 1
the editor would -> write : 1
editor would store -> source : 1
would store source -> files : 1
store source files -> in : 1
source files in -> a : 1
files in a -> manner : 1
in a manner -> that : 2
a manner that -> is : 2
manner that is -> appropriate : 1
manner that is -> best : 1
that is appropriate -> for : 1
is appropriate for -> a : 1
appropriate for a -> particular : 1
appropriate for a -> do : 1
for a particular -> when : 1
for a particular -> and : 1
a particular when -> the : 1
particular when the -> editor : 1
when the editor -> would : 1
editor would write -> universal : 1
would write universal -> character : 1
write universal character -> names : 1
universal character names -> for : 1
character names for -> characters : 1
names for characters -> that : 1
for characters that -> fall : 1
characters that fall -> outside : 1
that fall outside -> the : 1
fall outside the -> source : 1
fall outside the -> realm : 1
outside the source -> character : 1
source character that -> you : 1
character that you -> might : 1
that you might -> write : 1
that you might -> need : 2
that you might -> lose : 2
that you might -> be : 1
you might write -> the : 1
might write the -> following : 2
might write the -> array : 1
write the following -> in : 2
the following in -> the : 2
the following in -> which : 1
the following in -> for : 1
following in the -> long : 1
following in the -> source : 1
in the long -> double : 1
the long double -> the : 1
long double the -> editor : 1
double the editor -> might : 1
the editor might -> write : 1
editor might write -> the : 1
the source long -> double : 1
source long double -> numerical : 1
long double numerical -> values : 1
double numerical values -> for : 1
numerical values for -> characters : 1
values for characters -> in : 1
for characters in -> all : 1
characters in all -> character : 1
in all character -> sets : 1
all character sets -> are : 1
sets are with -> the : 1
are with the -> following : 1
the following null -> character : 1
following null character -> always : 1
null character always -> has : 1
character always has -> a : 1
always has a -> value : 1
always has a -> defined : 1
always has a -> nonnegative : 1
always has a -> length : 1
has a value -> that : 1
a value that -> contains : 1
a value that -> is : 4
a value that -> can : 2
value that contains -> all : 1
that contains all -> zero : 1
contains all zero -> digit : 1
all zero digit -> characters : 1
zero digit characters -> have : 1
digit characters have -> sequential : 1
characters have sequential -> starting : 1
have sequential starting -> with : 1
sequential starting with -> horizontal : 1
starting with horizontal -> vertical : 1
with horizontal vertical -> form : 1
horizontal vertical form -> and : 1
vertical form and -> newline : 1
form and newline -> characters : 1
and newline characters -> are : 1
newline characters are -> called : 1
characters are called -> in : 1
are called in -> most : 1
are called in -> reverse : 1
are called in -> the : 3
called in most -> whitespace : 1
in most whitespace -> characters : 1
most whitespace characters -> only : 1
whitespace characters only -> separate : 1
characters only separate -> tokens : 1
only separate tokens -> and : 1
separate tokens and -> are : 1
tokens and are -> otherwise : 1
and are otherwise -> are : 1
are otherwise are -> like : 1
otherwise are like -> see : 1
are like see -> earlier : 1
like see earlier -> in : 1
see earlier in -> this : 4
earlier in this -> symbols : 1
earlier in this -> if : 2
earlier in this -> chapter : 9
earlier in this -> the : 1
earlier in this -> no : 1
earlier in this -> qualified : 1
earlier in this -> class : 1
earlier in this -> to : 2
earlier in this -> with : 1
earlier in this -> in : 1
earlier in this -> function : 1
earlier in this -> section : 3
earlier in this -> for : 1
in this symbols -> have : 1
this symbols have -> multiple : 1
symbols have multiple -> as : 1
have multiple as -> shown : 1
multiple as shown -> in : 1
as shown in -> these : 1
as shown in -> reference : 1
as shown in -> namespace : 1
as shown in -> and : 1
as shown in -> default : 1
as shown in -> arguments : 1
as shown in -> typedef : 1
as shown in -> inherited : 1
as shown in -> ambiguous : 1
as shown in -> the : 5
as shown in -> operator : 1
as shown in -> anonymous : 1
as shown in -> a : 6
as shown in -> static : 1
as shown in -> int : 1
as shown in -> template : 1
as shown in -> character : 1
as shown in -> streams : 1
as shown in -> serious : 1
as shown in -> reverse : 1
as shown in -> parameter : 1
as shown in -> open : 1
as shown in -> if : 1
as shown in -> to : 1
as shown in -> notice : 1
as shown in -> proper : 1
as shown in -> way : 3
shown in these -> have : 1
in these have -> no : 1
these have no -> special : 1
no special meaning -> in : 1
special meaning in -> a : 1
meaning in a -> character : 1
or string they -> are : 1
string they are -> merely : 1
they are merely -> alternative : 1
are merely alternative -> representations : 1
merely alternative representations -> of : 1
alternative representations of -> common : 1
representations of common -> most : 1
of common most -> programmers : 1
common most programmers -> do : 1
most programmers do -> not : 1
programmers do not -> use : 1
programmers do not -> need : 1
not use alternative -> especially : 1
use alternative especially -> the : 1
alternative especially the -> nonalphabetic : 1
especially the nonalphabetic -> some : 1
the nonalphabetic some -> programmers : 1
nonalphabetic some programmers -> find : 1
some programmers find -> and : 1
programmers find and -> to : 1
find and to -> be : 1
and to be -> easier : 1
to be easier -> to : 1
be easier to -> read : 2
easier to read -> and : 1
easier to read -> than : 1
to read and -> understand : 1
to read and -> if : 1
to read and -> reason : 1
to read and -> section : 1
to read and -> parse : 1
read and understand -> than : 1
and understand than -> and : 1
understand than and -> solid : 1
than and solid -> solid : 1
solid solid with -> no : 2
solid with no -> compilers : 1
solid with no -> all : 1
solid with no -> use : 1
no compilers do -> not : 2
do not support -> some : 1
do not support -> the : 1
do not support -> universal : 1
do not support -> class : 1
do not support -> comparison : 1
not support some -> or : 1
support some or -> even : 1
some or even -> all : 1
or even all -> of : 1
even all of -> the : 1
of the alternative -> in : 1
the alternative in -> some : 1
alternative in some -> compilers : 1
in some compilers -> do : 1
do not treat -> alternative : 1
not treat alternative -> keywords : 1
treat alternative keywords -> as : 1
alternative keywords as -> reserved : 1
keywords as reserved -> but : 1
as reserved but -> allow : 1
reserved but allow -> you : 1
but allow you -> to : 1
to use them -> as : 1
use them as -> this : 1
them as this -> problem : 1
as this problem -> is : 1
this problem is -> becoming : 1
this problem is -> solved : 1
problem is becoming -> less : 1
is becoming less -> common : 1
becoming less common -> as : 1
less common as -> more : 1
common as more -> vendors : 1
as more vendors -> hew : 1
more vendors hew -> closer : 1
vendors hew closer -> to : 1
hew closer to -> the : 1
closer to the -> compilers : 1
closer to the -> parameter : 1
closer to the -> while : 1
to the compilers -> that : 1
to the compilers -> typically : 1
the compilers that -> do : 1
compilers that do -> not : 1
that do not -> support : 1
that do not -> have : 2
that do not -> change : 1
that do not -> throw : 1
that do not -> affect : 1
that do not -> nondependent : 1
that do not -> match : 1
not support the -> alternative : 1
not support the -> is : 1
support the alternative -> keywords : 1
the alternative keywords -> might : 1
alternative keywords might -> provide : 1
keywords might provide -> them : 1
might provide them -> as : 1
provide them as -> macros : 1
them as macros -> in : 1
as macros in -> the : 1
macros in the -> see : 1
in the see -> for : 1
in the see -> later : 1
in the see -> in : 1
in the see -> way : 1
for more few -> characters : 1
more few characters -> have : 1
few characters have -> an : 1
characters have an -> alternative : 1
have an alternative -> called : 1
an alternative called -> a : 1
alternative called a -> trigraph : 1
called a trigraph -> a : 1
a trigraph a -> is : 1
trigraph a is -> a : 1
is a sequence -> that : 2
is a sequence -> of : 10
is a sequence -> container : 5
a sequence that -> represents : 1
a sequence that -> lets : 1
sequence that represents -> a : 1
that represents a -> single : 2
that represents a -> such : 1
that represents a -> user : 1
that represents a -> request : 1
that represents a -> position : 1
that represents a -> date : 1
that represents a -> signed : 1
that represents a -> array : 1
represents a single -> the : 1
represents a single -> unicode : 1
represents a single -> character : 1
represents a single -> element : 1
represents a single -> bit : 1
a single the -> sequence : 1
a single the -> inner : 1
a single the -> class : 1
a single the -> wide : 1
a single the -> function : 1
single the sequence -> always : 1
the sequence always -> starts : 1
sequence always starts -> with : 1
always starts with -> two : 1
starts with two -> question : 1
with two question -> the : 1
two question the -> third : 1
question the third -> character : 1
the third character -> determines : 1
the third character -> is : 1
third character determines -> which : 1
character determines which -> character : 1
determines which character -> the : 1
which character the -> sequence : 1
character the sequence -> all : 1
the sequence all -> the : 1
sequence all the -> trigraph : 1
all the trigraph -> sequences : 1
the trigraph sequences -> are : 1
sequences are shown -> in : 1
are shown in -> if : 1
shown in if -> the : 1
shown in if -> must : 1
in if the -> third : 1
in if the -> jump : 1
in if the -> function : 1
in if the -> conversion : 2
in if the -> first : 1
in if the -> input : 4
if the third -> character : 1
if the third -> part : 3
third character is -> not : 1
character is not -> one : 1
character is not -> the : 1
character is not -> read : 1
character is not -> appended : 2
character is not -> part : 1
is not one -> of : 1
not one of -> those : 1
one of those -> in : 1
of those in -> the : 1
those in the -> the : 1
those in the -> c : 1
those in the -> definition : 1
those in the -> standard : 1
the the sequence -> is : 1
the sequence is -> not : 1
the sequence is -> sorted : 1
the sequence is -> out : 1
the sequence is -> less : 1
sequence is not -> a : 1
sequence is not -> is : 1
not a trigraph -> and : 1
a trigraph and -> is : 1
trigraph and is -> left : 1
and is left -> for : 1
is left for -> the : 1
left for the -> characters : 1
for the characters -> represent : 1
the characters represent -> the : 1
characters represent the -> two : 1
represent the two -> characters : 1
the two characters -> note : 1
two characters note -> that : 1
characters note that -> trigraphs : 1
note that trigraphs -> are : 1
that trigraphs are -> expanded : 1
trigraphs are expanded -> anywhere : 1
are expanded anywhere -> they : 1
expanded anywhere they -> including : 1
anywhere they including -> within : 1
they including within -> string : 1
including within string -> literals : 1
within string literals -> and : 1
string literals and -> character : 1
literals and character -> in : 1
and character in -> and : 1
and character in -> the : 1
character in and -> in : 1
in and in -> preprocessor : 1
in and in -> the : 1
in and in -> which : 1
in and in -> for : 1
and in preprocessor -> solid : 1
in preprocessor solid -> solid : 1
preprocessor solid solid -> solid : 1
compilers support some -> compilers : 1
support some compilers -> require : 1
some compilers require -> an : 1
compilers require an -> extra : 1
require an extra -> switch : 1
an extra switch -> or : 1
extra switch or -> others : 1
switch or others -> use : 1
or others use -> a : 1
others use a -> separate : 1
use a separate -> program : 1
use a separate -> set : 1
a separate program -> to : 1
separate program to -> convert : 1
program to convert -> all : 1
to convert all -> trigraphs : 1
convert all trigraphs -> to : 1
all trigraphs to -> their : 1
trigraphs to their -> equivalent : 1
their equivalent not -> use : 1
equivalent not use -> they : 1
not use they -> are : 1
use they are -> confusing : 1
they are confusing -> to : 1
are confusing to -> read : 1
confusing to read -> and : 1
read and if -> you : 1
and if you -> ever : 1
and if you -> have : 1
and if you -> want : 1
if you ever -> write : 1
you ever write -> adjacent : 1
ever write adjacent -> question : 1
write adjacent question -> make : 1
adjacent question make -> sure : 1
question make sure -> you : 1
make sure you -> are : 1
make sure you -> distinguish : 1
sure you are -> not : 1
you are not -> accidentally : 1
you are not -> aware : 1
you are not -> sure : 1
you are not -> implementing : 1
are not accidentally -> writing : 1
not accidentally writing -> a : 1
accidentally writing a -> for : 1
writing a for -> do : 1
a for do -> you : 1
for do you -> avoid : 1
do you avoid -> the : 1
you avoid the -> trigraph : 1
avoid the trigraph -> separate : 1
the trigraph separate -> the : 1
trigraph separate the -> string : 1
separate the string -> do : 1
the string do -> you : 1
string do you -> escape : 1
do you escape -> the : 1
you escape the -> question : 1
escape the question -> do : 1
the question do -> you : 1
question do you -> source : 1
do you source -> file : 1
you source file -> contains : 1
source file contains -> a : 1
source file contains -> the : 1
file contains a -> series : 1
contains a series -> of : 1
a series of -> zero : 1
a series of -> numbers : 2
a series of -> scopes : 1
a series of -> declarations : 3
a series of -> and : 1
a series of -> the : 1
a series of -> type : 2
a series of -> a : 1
a series of -> one : 1
a series of -> starting : 1
a series of -> shows : 1
a series of -> use : 1
a series of -> in : 1
a series of -> multibyte : 1
a series of -> which : 1
a series of -> integers : 1
series of zero -> or : 1
of zero or -> more : 5
zero or more -> a : 2
zero or more -> identifiers : 1
zero or more -> declarations : 1
zero or more -> assignment : 1
zero or more -> statements : 1
zero or more -> expressions : 1
zero or more -> copies : 1
zero or more -> see : 1
or more a -> declaration : 1
or more a -> class : 1
more a declaration -> can : 1
a declaration can -> be : 1
a declaration can -> also : 1
declaration can be -> a : 3
declaration can be -> an : 1
be a object -> or : 1
be a object -> cannot : 1
a object or -> or : 1
object or or -> a : 1
or or a -> related : 1
or or a -> pointer : 1
or or a -> class : 1
or a related -> the : 1
a related the -> first : 1
related the first -> part : 1
the first part -> of : 3
the first part -> is : 5
first part of -> this : 1
first part of -> a : 2
part of this -> chapter : 1
of this chapter -> covers : 1
of this chapter -> for : 1
this chapter covers -> general : 1
chapter covers general -> topics : 1
covers general topics -> that : 1
general topics that -> pertain : 1
topics that pertain -> to : 1
that pertain to -> all : 1
pertain to all -> the : 1
to all the -> second : 1
to all the -> declarators : 1
to all the -> standard : 1
all the second -> part : 1
the second part -> discusses : 1
the second part -> is : 6
second part discusses -> and : 1
part discusses and -> namespaces : 1
discusses and namespaces -> and : 1
and namespaces and -> template : 1
namespaces and template -> declarations : 1
and template declarations -> each : 1
template declarations each -> get : 1
declarations each get -> their : 1
each get their -> own : 1
get their own -> covers : 1
get their own -> and : 1
their own covers -> covers : 1
own covers covers -> classes : 1
covers covers classes -> and : 1
covers classes and -> and : 1
classes and and -> covers : 1
and and covers -> template : 1
and covers template -> and : 1
covers template and -> syntax : 1
template and syntax -> descriptions : 1
and syntax descriptions -> in : 1
syntax descriptions in -> this : 6
descriptions in this -> chapter : 6
descriptions in this -> section : 2
this chapter are -> see : 6
chapter are see -> for : 6
are see for -> a : 6
are see for -> more : 2
see for a -> precise : 6
see for a -> return : 1
see for a -> full : 1
see for a -> discussion : 1
see for a -> description : 3
for a precise -> bnf : 6
a precise bnf -> and : 2
a precise bnf -> statement : 1
a precise bnf -> declaration : 1
a precise bnf -> definition : 1
a precise bnf -> of : 1
precise bnf and -> and : 2
bnf and and -> is : 1
bnf and and -> and : 1
and and is -> the : 1
and is the -> term : 1
and is the -> right : 1
and is the -> amount : 1
and is the -> value : 1
and is the -> item : 1
and is the -> smallest : 1
and is the -> is : 1
and is the -> imaginary : 2
and is the -> angle : 1
and is the -> same : 2
and is the -> object : 1
and is the -> modifier : 1
and is the -> return : 2
is the term -> for : 1
is the term -> means : 1
the term for -> anything : 1
term for anything -> that : 1
for anything that -> tells : 1
anything that tells -> the : 1
that tells the -> compiler : 2
that tells the -> linker : 1
tells the compiler -> about : 3
tells the compiler -> to : 5
tells the compiler -> which : 1
tells the compiler -> that : 2
the compiler about -> an : 1
the compiler about -> a : 2
the compiler about -> the : 1
compiler about an -> in : 1
about an in -> order : 1
an in order -> to : 1
in order to -> use : 2
in order to -> find : 1
in order to -> delete : 1
order to use -> an : 1
order to use -> the : 1
to use an -> the : 1
to use an -> namespace : 1
to use an -> unnamed : 1
to use an -> empty : 1
to use an -> allocator : 1
use an the -> compiler : 1
an the compiler -> must : 1
an the compiler -> needs : 1
an the compiler -> converts : 1
an the compiler -> reports : 1
an the compiler -> might : 1
an the compiler -> saves : 1
the compiler must -> know : 3
the compiler must -> determine : 1
the compiler must -> be : 1
the compiler must -> choose : 1
compiler must know -> what : 1
compiler must know -> about : 1
compiler must know -> which : 1
must know what -> it : 1
know what it -> is : 1
what it is -> it : 1
it is it -> a : 1
it is it -> must : 1
it is it -> calls : 1
is it a -> type : 1
it a type -> a : 1
a type a -> variable : 1
a type a -> list : 1
type a variable -> a : 1
a variable a -> function : 1
variable a function -> or : 1
a function or -> something : 1
a function or -> referring : 1
a function or -> an : 1
a function or -> if : 1
a function or -> by : 1
a function or -> operator : 1
a function or -> array : 1
a function or -> object : 1
a function or -> member : 1
a function or -> class : 2
a function or -> when : 1
a function or -> with : 1
a function or -> a : 2
a function or -> functor : 2
a function or -> the : 1
function or something -> a : 1
or something a -> source : 1
something a source -> file : 1
source file must -> contain : 1
file must contain -> a : 1
must contain a -> declaration : 1
contain a declaration -> or : 1
a declaration or -> in : 1
a declaration or -> an : 1
a declaration or -> you : 1
a declaration or -> declaration : 1
declaration or in -> an : 1
declaration or in -> the : 1
or in an -> for : 1
in an for -> every : 1
an for every -> name : 1
for every name -> it : 1
every name it -> defines : 1
name it defines -> the : 1
it defines the -> or : 1
defines the or -> contents : 1
the or contents -> of : 1
or contents of -> a : 1
contents of a -> the : 1
contents of a -> you : 1
contents of a -> standard : 1
contents of a -> container : 1
of a the -> between : 1
of a the -> function : 2
of a the -> compiler : 1
of a the -> class : 1
of a the -> primary : 1
of a the -> median : 1
of a the -> expression : 1
of a the -> can : 1
of a the -> macro : 1
of a the -> first : 1
of a the -> syntax : 1
of a the -> result : 2
a the between -> a : 1
between a declaration -> and : 1
a declaration and -> a : 1
a declaration and -> for : 1
declaration and a -> definition : 1
and a definition -> is : 1
and a definition -> provides : 1
a definition is -> that : 1
a definition is -> bound : 1
definition is that -> a : 1
is that a -> declaration : 2
is that a -> name : 1
is that a -> function : 1
is that a -> wide : 1
is that a -> type : 2
is that a -> returns : 1
is that a -> program : 1
is that a -> null : 1
that a declaration -> tells : 1
that a declaration -> that : 1
a declaration tells -> you : 1
declaration tells you -> an : 1
tells you an -> name : 1
you an name -> and : 1
an name and -> the : 1
name and the -> external : 1
name and the -> types : 1
name and the -> scope : 1
name and the -> definition : 1
and the external -> view : 1
the external view -> of : 1
external view of -> the : 1
view of the -> such : 1
of the such -> as : 1
such as an -> type : 1
such as an -> assignment : 1
such as an -> values : 1
such as an -> array : 1
such as an -> you : 1
as an type -> or : 1
an type or -> a : 1
type or a -> and : 1
type or a -> qualified : 1
type or a -> pointer : 1
type or a -> variable : 1
or a and -> a : 1
or a and -> discusses : 1
a and a -> definition : 1
a and a -> is : 1
a and a -> although : 1
a and a -> parenthesis : 1
a and a -> you : 1
a and a -> stride : 1
a and a -> in : 1
a definition provides -> the : 1
definition provides the -> internal : 1
provides the internal -> workings : 1
the internal workings -> of : 1
internal workings of -> the : 1
workings of the -> the : 1
of the the -> storage : 1
of the the -> plain : 1
of the the -> in : 1
of the the -> namespace : 1
of the the -> term : 1
of the the -> six : 1
of the the -> demo : 1
of the the -> value : 2
of the the -> behavior : 5
of the the -> result : 2
of the the -> name : 1
of the the -> statement : 1
of the the -> parameter : 1
of the the -> compiler : 3
of the the -> scalar : 1
of the the -> recursion : 1
of the the -> container : 1
of the the -> integral : 1
of the the -> current : 2
of the the -> stream : 1
of the the -> and : 1
of the the -> declaration : 1
of the the -> algorithms : 1
of the the -> parameters : 1
of the the -> constant : 1
of the the -> second : 1
of the the -> range : 1
of the the -> relative : 2
of the the -> default : 1
of the the -> exact : 2
of the the -> signal : 1
of the the -> handler : 1
of the the -> macro : 4
of the the -> conversion : 2
of the the -> function : 3
of the the -> longer : 4
of the the -> multibyte : 2
of the the -> element : 2
of the the -> number : 8
of the the -> first : 2
of the the -> expression : 3
of the the -> maximum : 1
of the the -> lower : 2
of the the -> pointer : 3
of the the -> typical : 1
of the the -> subscript : 1
of the the -> return : 1
of the the -> elements : 1
of the the -> class : 1
the the storage -> and : 1
the storage and -> initial : 1
storage and initial -> value : 1
and initial value -> of : 1
initial value of -> an : 1
value of an -> a : 1
value of an -> enumerator : 2
value of an -> entity : 1
value of an -> object : 1
value of an -> environment : 1
value of an -> with : 1
of an a -> function : 1
an a function -> and : 1
an a function -> in : 1
an a function -> the : 1
a function and -> so : 2
a function and -> a : 1
a function and -> the : 1
a function and -> prints : 1
function and so -> a : 1
function and so -> keyword : 1
and so a -> single : 1
and so a -> destructor : 1
and so a -> immediate : 1
so a single -> source : 1
a single source -> there : 1
a single source -> file : 1
a single source -> a : 1
single source there -> can : 1
source there can -> be : 1
there can be -> at : 2
there can be -> any : 1
can be at -> most : 7
be at most -> one : 3
be at most -> comparisons : 4
at most one -> definition : 2
at most one -> function : 2
at most one -> case : 1
at most one -> of : 1
at most one -> if : 1
most one definition -> of : 2
one definition of -> an : 1
one definition of -> each : 1
one definition of -> these : 1
definition of an -> in : 1
definition of an -> inline : 1
of an in -> an : 1
an in an -> entire : 1
in an entire -> there : 1
an entire there -> must : 1
entire there must -> be : 1
there must be -> exactly : 2
there must be -> a : 1
must be exactly -> one : 2
be exactly one -> definition : 1
be exactly one -> best : 1
exactly one definition -> of : 1
definition of each -> function : 1
of each function -> or : 1
of each function -> is : 1
each function or -> object : 1
or object used -> in : 1
object used in -> the : 1
used in the -> except : 1
used in the -> parameter : 1
used in the -> function : 2
used in the -> default : 1
used in the -> program : 1
used in the -> constructor : 1
used in the -> base : 1
used in the -> standard : 1
used in the -> in : 1
used in the -> return : 1
used in the -> original : 1
used in the -> value : 1
used in the -> membership : 1
used in the -> the : 1
used in the -> descriptions : 1
used in the -> representation : 1
in the except -> for : 2
in the except -> that : 1
in the except -> the : 1
the except for -> inline : 2
except for inline -> an : 1
except for inline -> templates : 1
for inline an -> inline : 1
inline an inline -> function : 1
an inline function -> must : 2
an inline function -> even : 1
an inline function -> can : 1
inline function must -> be : 3
function must be -> defined : 4
function must be -> declared : 1
function must be -> types : 1
function must be -> a : 1
function must be -> the : 1
must be defined -> in : 5
must be defined -> exactly : 1
must be defined -> inline : 1
must be defined -> before : 1
be defined in -> every : 4
be defined in -> a : 2
be defined in -> one : 1
be defined in -> the : 1
be defined in -> more : 1
defined in every -> source : 4
defined in every -> file : 1
in every source -> file : 4
in every source -> are : 1
in every source -> define : 1
every source file -> that : 3
every source file -> in : 1
every source file -> sees : 1
source file that -> uses : 2
source file that -> needs : 1
source file that -> calls : 1
source file that -> depends : 1
file that uses -> the : 2
uses the and -> the : 1
uses the and -> macros : 1
and the definitions -> must : 1
and the definitions -> in : 1
and the definitions -> of : 1
the definitions must -> all : 1
definitions must all -> be : 1
must all be -> program : 1
all be program -> can : 1
be program can -> have : 1
program can have -> more : 1
program can have -> any : 1
can have more -> than : 3
have more than -> one : 2
have more than -> two : 1
than one of -> a : 1
than one of -> the : 1
of a given -> inline : 1
of a given -> even : 1
of a given -> value : 2
a given inline -> or : 1
given inline or -> provided : 1
inline or provided -> the : 1
or provided the -> definitions : 1
provided the definitions -> are : 1
the definitions are -> in : 2
definitions are in -> separate : 1
definitions are in -> the : 1
are in separate -> source : 1
are in separate -> the : 1
in separate source -> and : 1
in separate source -> the : 1
in separate source -> files : 1
separate source and -> each : 1
and each source -> file : 1
each source file -> has : 1
each source file -> that : 1
source file has -> the : 1
file has the -> same : 1
has the same -> rules : 1
has the same -> value : 6
has the same -> meaning : 2
has the same -> trait : 1
has the same -> number : 1
has the same -> length : 1
has the same -> sign : 1
has the same -> functionality : 5
has the same -> problem : 1
has the same -> character : 1
has the same -> size : 18
the same rules -> are : 1
the same rules -> that : 1
the same rules -> as : 1
same rules are -> known : 1
rules are known -> as : 1
are known as -> the : 1
known as the -> definition : 1
known as the -> you : 1
known as the -> a : 1
known as the -> template : 1
known as the -> and : 1
known as the -> the : 1
as the definition -> or : 1
the definition or -> you : 1
definition or you -> can : 2
or you can -> use : 2
or you can -> let : 1
or you can -> declare : 1
or you can -> omit : 1
or you can -> read : 1
or you can -> think : 1
or you can -> construct : 4
can use an -> entity : 1
can use an -> alias : 1
can use an -> ellipsis : 2
can use an -> access : 1
can use an -> note : 1
can use an -> member : 1
can use an -> a : 1
can use an -> associative : 1
use an entity -> calling : 1
an entity calling -> a : 1
entity calling a -> function : 1
calling a function -> or : 2
function or referring -> to : 1
or referring to -> an : 1
referring to an -> the : 1
referring to an -> index : 1
to an the -> compiler : 1
to an the -> value : 3
to an the -> integer : 1
to an the -> expression : 1
the compiler needs -> the : 1
the compiler needs -> to : 2
compiler needs the -> but : 1
needs the but -> not : 1
the but not -> necessarily : 1
but not necessarily -> its : 1
not necessarily its -> you : 1
necessarily its you -> can : 1
its you can -> use : 1
can use a -> class : 1
can use a -> template : 1
can use a -> forward : 2
can use a -> different : 2
can use a -> object : 1
can use a -> matrix : 1
can use a -> slice : 1
can use a -> type : 1
use a class -> that : 1
use a class -> specifier : 1
a class that -> has : 3
a class that -> performs : 1
a class that -> meets : 1
a class that -> can : 1
a class that -> allocates : 1
a class that -> derives : 1
a class that -> represents : 1
class that has -> an : 1
class that has -> virtual : 2
class that has -> at : 2
class that has -> a : 1
class that has -> its : 1
class that has -> public : 1
that has an -> incomplete : 1
that has an -> so : 1
has an incomplete -> declaration : 1
an incomplete declaration -> in : 1
incomplete declaration in -> some : 1
declaration in some -> but : 1
in some but -> usually : 1
some but usually -> you : 1
but usually you -> need : 1
usually you need -> a : 1
you need a -> complete : 2
you need a -> vector : 2
you need a -> sequence : 1
you need a -> standard : 1
need a complete -> for : 1
need a complete -> class : 1
a complete for -> details : 1
complete for details -> about : 1
for details about -> incomplete : 1
for details about -> type : 2
for details about -> the : 3
for details about -> each : 1
for details about -> lvalues : 1
for details about -> semantics : 1
for details about -> buffer : 2
details about incomplete -> the : 1
about incomplete the -> complete : 1
incomplete the complete -> program : 1
the complete program -> needs : 1
complete program needs -> definitions : 1
program needs definitions -> for : 1
needs definitions for -> all : 1
definitions for all -> the : 1
for all the -> declared : 1
for all the -> template : 1
for all the -> container : 1
for all the -> function : 2
for all the -> stream : 1
for all the -> fundamental : 1
for all the -> valid : 1
for all the -> standard : 1
all the declared -> but : 1
the declared but -> those : 1
declared but those -> definitions : 1
but those definitions -> can : 1
those definitions can -> often : 1
definitions can often -> reside : 1
can often reside -> in : 1
often reside in -> separate : 1
reside in separate -> source : 1
separate source the -> convention : 1
separate source the -> header : 1
source the convention -> is : 2
the convention is -> to : 5
convention is to -> place : 1
convention is to -> list : 2
convention is to -> use : 3
convention is to -> throw : 1
convention is to -> declare : 1
convention is to -> end : 1
is to place -> the : 2
to place the -> declarations : 1
to place the -> base : 1
place the declarations -> for : 1
the declarations for -> and : 1
the declarations for -> the : 1
declarations for and -> global : 1
for and global -> objects : 1
and global objects -> in : 1
global objects in -> a : 1
objects in a -> header : 1
objects in a -> standard : 2
objects in a -> you : 1
objects in a -> single : 1
objects in a -> container : 1
objects in a -> uuid : 1
in a header -> file : 2
in a header -> or : 1
in a header -> which : 1
in a header -> then : 1
in a header -> against : 1
a header file -> name : 1
a header file -> and : 1
header file name -> typically : 1
file name typically -> ends : 2
name typically ends -> with : 2
typically ends with -> or : 2
ends with or -> and : 1
ends with or -> any : 1
ends with or -> if : 1
with or and -> their : 1
with or and -> ends : 1
or and their -> definitions : 1
and their definitions -> in : 1
and their definitions -> for : 1
their definitions in -> a : 1
definitions in a -> source : 1
definitions in a -> header : 1
definitions in a -> configuration : 1
in a source -> file : 1
source file name -> typically : 1
with or any -> source : 1
or any source -> file : 1
any source file -> that : 1
file that needs -> to : 2
that needs to -> use : 2
needs to use -> those : 1
needs to use -> the : 2
to use those -> entities : 1
use those entities -> must : 1
those entities must -> the : 1
entities must the -> header : 1
must the header -> templates : 1
must the header -> every : 1
the header templates -> have : 1
header templates have -> additional : 1
templates have additional -> complications : 1
have additional complications -> concerning : 1
additional complications concerning -> declarations : 1
complications concerning declarations -> and : 1
concerning declarations and -> for : 1
declarations and for -> this : 1
and for this -> and : 1
for this and -> subsequent : 1
this and subsequent -> the : 1
this and subsequent -> includes : 1
and subsequent the -> description : 1
subsequent the description -> of : 1
the description of -> each : 3
the description of -> the : 1
of each entity -> states : 1
of each entity -> this : 1
each entity states -> whether : 1
entity states whether -> the : 1
states whether the -> entity : 1
whether the entity -> has : 1
the entity has -> separate : 1
entity has separate -> definitions : 1
has separate definitions -> and : 1
has separate definitions -> for : 1
separate definitions and -> states : 1
definitions and states -> when : 1
and states when -> definitions : 1
states when definitions -> are : 1
when definitions are -> and : 1
definitions are and -> outlines : 1
are and outlines -> any : 1
and outlines any -> other : 1
outlines any other -> rules : 1
any other rules -> pertaining : 1
other rules pertaining -> to : 1
rules pertaining to -> declarations : 1
pertaining to declarations -> and : 1
to declarations and -> language : 1
declarations and language -> constructs : 1
and language constructs -> can : 1
language constructs can -> look : 1
constructs can look -> like : 1
can look like -> a : 1
can look like -> see : 1
can look like -> an : 1
look like a -> declaration : 1
like a declaration -> or : 1
declaration or an -> such : 1
or an such -> are : 1
an such are -> always : 1
such are always -> resolved : 1
are always resolved -> in : 1
always resolved in -> favor : 1
resolved in favor -> of : 2
in favor of -> a : 1
in favor of -> that : 1
favor of a -> related : 1
of a related -> rule : 1
a related rule -> is : 1
related rule is -> that : 1
rule is that -> a : 2
rule is that -> the : 3
rule is that -> any : 1
rule is that -> you : 1
a declaration that -> is : 1
a declaration that -> provides : 1
a declaration that -> supplies : 1
a declaration that -> uses : 2
declaration that is -> a : 1
is a type -> specifier : 1
is a type -> possibly : 1
is a type -> as : 1
is a type -> that : 1
a type specifier -> followed : 1
a type specifier -> requires : 1
a type specifier -> to : 1
type specifier followed -> by : 1
specifier followed by -> a : 1
by a name -> and : 1
by a name -> that : 1
a name and -> empty : 1
a name and -> an : 1
name and empty -> parentheses : 1
and empty parentheses -> is : 1
empty parentheses is -> a : 1
parentheses is a -> declaration : 1
is a declaration -> of : 1
a declaration of -> a : 2
a declaration of -> an : 2
a declaration of -> the : 1
declaration of a -> function : 4
declaration of a -> or : 1
declaration of a -> the : 1
declaration of a -> data : 1
of a function -> that : 1
of a function -> named : 2
of a function -> parameter : 2
of a function -> to : 2
of a function -> without : 1
of a function -> declaration : 1
of a function -> a : 2
of a function -> template : 2
of a function -> as : 1
of a function -> the : 2
of a function -> you : 2
of a function -> it : 1
of a function -> or : 1
of a function -> is : 1
of a function -> probably : 1
of a function -> can : 1
of a function -> returns : 1
of a function -> int : 1
of a function -> argument : 1
a function that -> takes : 8
a function that -> does : 1
a function that -> returns : 3
a function that -> is : 3
a function that -> contains : 1
a function that -> rounds : 1
a function that -> applies : 1
a function that -> the : 1
a function that -> function : 1
a function that -> obtains : 1
a function that -> converts : 1
a function that -> classifies : 1
a function that -> makes : 1
function that takes -> no : 2
function that takes -> an : 3
function that takes -> a : 5
function that takes -> the : 1
function that takes -> one : 2
function that takes -> two : 1
that takes no -> not : 1
that takes no -> arguments : 1
that takes no -> and : 1
takes no not -> a : 1
no not a -> declaration : 1
no not a -> variable : 1
not a declaration -> of : 1
declaration of an -> object : 3
declaration of an -> array : 1
declaration of an -> the : 1
of an object -> with : 4
of an object -> named : 2
of an object -> of : 1
of an object -> in : 1
of an object -> a : 1
of an object -> is : 1
of an object -> that : 1
an object with -> an : 2
an object with -> static : 1
an object with -> external : 1
an object with -> a : 2
an object with -> values : 1
object with an -> empty : 1
object with an -> typename : 4
with an empty -> later : 1
with an empty -> a : 1
with an empty -> initializer : 1
with an empty -> function : 1
with an empty -> set : 1
with an empty -> string : 3
an empty later -> in : 1
empty later in -> this : 1
information about empty -> shows : 1
about empty shows -> some : 1
empty shows some -> examples : 1
shows some examples -> of : 3
examples of how -> declarations : 1
examples of how -> can : 1
of how declarations -> are : 1
how declarations are -> class : 1
declarations are class -> t : 1
are class t -> int : 1
class t int -> int : 1
t int int -> variable : 1
int int variable -> named : 1
int variable named -> a : 1
variable named a -> of : 1
named a of -> type : 1
a of type -> not : 1
of type not -> an : 1
type not an -> invocation : 1
not an invocation -> of : 1
an invocation of -> the : 1
invocation of the -> constructor : 1
invocation of the -> function : 1
of the constructor -> t : 1
of the constructor -> is : 1
the constructor t -> function : 1
constructor t function -> named : 1
t function named -> b : 1
function named b -> of : 1
named b of -> no : 1
named b of -> type : 1
b of no -> not : 1
of no not -> a : 1
not a variable -> named : 1
a variable named -> b : 1
variable named b -> of : 1
b of type -> t : 1
of type t -> t : 1
of type t -> last : 1
of type t -> to : 1
type t t -> declaration : 1
t t declaration -> of : 1
t declaration of -> a : 1
a function named -> with : 1
a function named -> whose : 1
a function named -> which : 1
a function named -> a : 1
a function named -> not : 1
function named with -> one : 1
named with one -> argument : 1
with one argument -> of : 1
one argument of -> type : 1
argument of type -> t : 1
argument of type -> some : 2
argument of type -> the : 1
argument of type -> an : 1
type t last -> item : 1
t last item -> in : 1
last item in -> deserves : 1
last item in -> the : 10
last item in -> a : 2
item in deserves -> further : 1
in deserves further -> the : 1
deserves further the -> function : 1
further the function -> parameter : 1
the function parameter -> could : 1
the function parameter -> type : 1
the function parameter -> types : 2
the function parameter -> is : 1
function parameter could -> be : 1
parameter could be -> interpreted : 1
could be interpreted -> as : 2
interpreted as an -> constructing : 1
interpreted as an -> integer : 1
as an constructing -> an : 1
an constructing an -> instance : 1
constructing an instance -> of : 1
an instance of -> with : 2
an instance of -> but : 1
an instance of -> a : 8
an instance of -> the : 8
an instance of -> to : 1
an instance of -> in : 2
an instance of -> or : 1
instance of with -> the : 1
instance of with -> value : 1
of with the -> argument : 1
with the argument -> or : 1
the argument or -> it : 1
argument or it -> could : 1
or it could -> be : 2
it could be -> interpreted : 1
it could be -> the : 1
as a declaration -> of : 1
as a declaration -> depending : 2
a function parameter -> of : 1
a function parameter -> is : 4
a function parameter -> but : 1
a function parameter -> can : 1
function parameter of -> type : 1
parameter of type -> named : 1
of type named -> with : 1
of type named -> your : 1
type named with -> a : 1
named with a -> redundant : 1
with a redundant -> set : 1
a redundant set -> of : 1
redundant set of -> parentheses : 1
set of parentheses -> around : 1
of parentheses around -> the : 1
parentheses around the -> parameter : 1
around the parameter -> according : 1
the parameter according -> to : 1
parameter according to -> the : 1
according to the -> disambiguation : 1
according to the -> name : 1
according to the -> rules : 1
according to the -> usual : 3
according to the -> following : 2
according to the -> same : 1
according to the -> normal : 1
according to the -> if : 1
according to the -> locale : 1
according to the -> the : 2
according to the -> conversion : 3
according to the -> in : 2
according to the -> description : 1
according to the -> given : 1
according to the -> solid : 1
according to the -> flags : 1
according to the -> see : 1
according to the -> format : 2
according to the -> template : 4
to the disambiguation -> it : 1
the disambiguation it -> must : 1
disambiguation it must -> be : 1
it must be -> a : 1
it must be -> the : 1
it must be -> combined : 1
it must be -> initialized : 1
it must be -> used : 1
it must be -> common : 1
it must be -> implemented : 3
it must be -> in : 1
it must be -> qualified : 1
it must be -> followed : 1
it must be -> one : 2
must be a -> not : 1
must be a -> class : 4
must be a -> single : 2
must be a -> constant : 3
must be a -> type : 3
must be a -> and : 1
must be a -> pointer : 9
must be a -> null : 1
must be a -> modifiable : 1
must be a -> nonmember : 1
must be a -> member : 1
must be a -> bidirectional : 1
must be a -> function : 1
must be a -> that : 1
must be a -> old : 1
must be a -> lvalue : 1
be a not -> an : 1
a not an -> this : 1
a not an -> the : 1
not an this -> means : 1
an this means -> that : 1
this means that -> the : 1
means that the -> entire : 1
means that the -> object : 1
means that the -> member : 1
means that the -> declared : 1
that the entire -> declaration : 1
that the entire -> file : 1
the entire declaration -> cannot : 1
entire declaration cannot -> be : 1
declaration cannot be -> the : 1
declaration cannot be -> a : 1
cannot be the -> declaration : 1
cannot be the -> target : 2
cannot be the -> new : 1
cannot be the -> compiler : 1
cannot be the -> same : 1
cannot be the -> return : 1
cannot be the -> pointer : 2
be the declaration -> of : 2
the declaration of -> an : 2
the declaration of -> a : 3
the declaration of -> would : 1
the declaration of -> the : 2
an object named -> whose : 1
an object named -> c : 1
an object named -> in : 1
an object named -> with : 1
object named whose -> initializer : 1
named whose initializer -> is : 1
whose initializer is -> the : 1
initializer is the -> expression : 1
initializer is the -> array : 1
is the expression -> it : 1
is the expression -> is : 1
is the expression -> yields : 2
the expression it -> must : 1
expression it must -> be : 1
must be the -> declaration : 1
must be the -> same : 6
must be the -> member : 1
must be the -> polar : 1
must be the -> first : 2
must be the -> template : 1
must be the -> result : 1
function named whose -> parameter : 1
named whose parameter -> is : 1
whose parameter is -> of : 1
parameter is of -> type : 1
is of type -> named : 1
is of type -> in : 1
is of type -> the : 7
type named your -> intention : 1
named your intention -> is : 1
your intention is -> to : 1
intention is to -> declare : 1
intention is to -> provide : 1
is to declare -> an : 1
is to declare -> the : 1
to declare an -> not : 1
to declare an -> object : 1
declare an not -> a : 1
an not a -> the : 1
not a the -> simplest : 1
a the simplest -> way : 1
the simplest way -> to : 5
the simplest way -> is : 1
simplest way to -> do : 1
simplest way to -> write : 1
simplest way to -> use : 2
simplest way to -> create : 2
way to do -> this : 1
way to do -> function : 2
to do this -> is : 1
do this is -> not : 1
this is not -> to : 1
this is not -> the : 1
this is not -> expanded : 1
this is not -> possible : 1
is not to -> use : 1
is not to -> read : 1
is not to -> convert : 1
not to use -> the : 1
not to use -> an : 1
to use the -> style : 1
to use the -> value : 1
to use the -> static : 1
to use the -> names : 1
to use the -> standard : 3
to use the -> or : 2
to use the -> most : 1
to use the -> quote : 1
to use the -> class : 1
to use the -> function : 5
to use the -> for : 1
to use the -> same : 2
to use the -> call : 11
to use the -> the : 1
to use the -> header : 2
to use the -> placement : 1
to use the -> and : 1
use the style -> of : 1
use the style -> c : 1
the style of -> type : 1
style of type -> use : 1
of type use -> a : 1
type use a -> keyword : 1
use a keyword -> cast : 1
a keyword cast -> such : 1
keyword cast such -> as : 1
cast such as -> for : 1
such as for -> more : 2
such as for -> but : 1
as for more -> information : 1
as for more -> specialized : 1
information about type -> for : 1
information about type -> conversion : 1
information about type -> the : 1
information about type -> specifiers : 1
about type for -> declares : 1
type for declares -> an : 1
for declares an -> object : 1
declares an object -> named : 1
declares an object -> to : 1
object named c -> whose : 1
named c whose -> initial : 1
c whose initial -> value : 1
whose initial value -> is : 1
initial value is -> cast : 1
initial value is -> converted : 1
initial value is -> a : 1
value is cast -> to : 2
is cast to -> type : 1
is cast to -> the : 1
is cast to -> if : 1
is cast to -> a : 1
cast to type -> problem : 1
to type problem -> can : 1
type problem can -> crop : 1
problem can crop -> up : 1
can crop up -> when : 1
crop up when -> you : 1
up when you -> least : 1
when you least -> expect : 2
you least expect -> for : 1
you least expect -> in : 1
least expect for -> suppose : 1
expect for suppose -> you : 1
for suppose you -> want : 4
for suppose you -> are : 2
for suppose you -> have : 2
for suppose you -> need : 1
for suppose you -> wrote : 1
for suppose you -> write : 1
suppose you want -> to : 7
you want to -> construct : 1
you want to -> call : 1
you want to -> write : 6
you want to -> permit : 1
you want to -> use : 8
you want to -> keep : 1
you want to -> convert : 1
you want to -> force : 1
you want to -> store : 1
you want to -> specify : 1
you want to -> make : 1
you want to -> specialize : 2
you want to -> allow : 1
you want to -> declare : 1
you want to -> the : 1
you want to -> offer : 1
you want to -> define : 2
you want to -> parameterize : 1
you want to -> handle : 1
you want to -> count : 2
you want to -> raise : 1
you want to -> understand : 1
you want to -> read : 1
you want to -> but : 1
you want to -> perform : 4
you want to -> ensure : 1
want to construct -> a : 1
to construct a -> vector : 1
to construct a -> temporary : 1
to construct a -> nameless : 1
to construct a -> use : 2
to construct a -> function : 2
to construct a -> new : 1
to construct a -> string : 1
construct a vector -> of : 1
a vector of -> integers : 1
a vector of -> that : 1
a vector of -> you : 1
a vector of -> in : 2
a vector of -> boolean : 1
a vector of -> size : 1
vector of integers -> by : 1
of integers by -> reading : 1
integers by reading -> a : 1
by reading a -> series : 1
reading a series -> of : 1
series of numbers -> from : 2
of numbers from -> the : 1
of numbers from -> an : 1
of numbers from -> a : 1
numbers from the -> standard : 1
from the standard -> your : 1
from the standard -> type : 1
from the standard -> input : 1
from the standard -> locale : 1
the standard your -> first : 1
the standard your -> problem : 1
standard your first -> attempt : 1
your first attempt -> might : 1
first attempt might -> be : 1
attempt might be -> to : 1
might be to -> use : 1
be to use -> an : 1
use an namespace -> declaration : 1
an namespace declaration -> actually : 1
namespace declaration actually -> declares : 1
declaration actually declares -> a : 1
actually declares a -> function : 1
declares a function -> named : 2
function named which -> takes : 3
function named which -> returns : 2
named which takes -> two : 2
named which takes -> a : 1
which takes two -> parameters : 1
which takes two -> arguments : 1
which takes two -> the : 1
takes two parameters -> of : 1
two parameters of -> type : 1
parameters of type -> the : 1
of type the -> first : 3
of type the -> result : 1
of type the -> operands : 2
of type the -> names : 1
of type the -> standard : 1
of type the -> return : 2
of type the -> argument : 6
of type the -> parameter : 2
of type the -> signal : 1
of type the -> file : 1
of type the -> format : 1
of type the -> keys : 1
of type the -> elements : 1
type the first -> parameter : 1
type the first -> form : 2
the first parameter -> is : 2
the first parameter -> to : 3
the first parameter -> must : 1
first parameter is -> named : 1
first parameter is -> the : 1
parameter is named -> and : 1
is named and -> the : 1
named and the -> second : 1
and the second -> is : 3
and the second -> of : 1
and the second -> uses : 1
and the second -> element : 1
and the second -> accepts : 1
and the second -> range : 1
and the second -> sequence : 1
and the second -> part : 3
and the second -> and : 1
and the second -> form : 2
and the second -> function : 1
the second is -> you : 1
the second is -> declarations : 1
the second is -> the : 1
the second is -> called : 1
the second is -> and : 1
second is you -> can : 1
is you can -> force : 1
is you can -> encapsulate : 1
is you can -> use : 1
is you can -> explicitly : 1
is you can -> control : 2
you can force -> the : 3
can force the -> compiler : 2
can force the -> orientation : 1
force the compiler -> to : 2
the compiler to -> interpret : 2
the compiler to -> identify : 1
the compiler to -> look : 2
the compiler to -> expand : 1
the compiler to -> resolve : 1
the compiler to -> consider : 1
the compiler to -> call : 1
the compiler to -> if : 1
the compiler to -> search : 1
the compiler to -> avoid : 1
the compiler to -> treat : 1
the compiler to -> store : 1
the compiler to -> remove : 1
compiler to interpret -> the : 2
interpret the declaration -> as : 1
the declaration as -> an : 1
declaration as an -> object : 2
as an object -> definition : 1
as an object -> that : 1
as an object -> color : 1
as an object -> or : 1
an object definition -> by : 1
object definition by -> enclosing : 1
definition by enclosing -> one : 1
by enclosing one -> or : 1
enclosing one or -> more : 1
or more arguments -> in : 1
more arguments in -> namespace : 1
arguments in namespace -> by : 1
in namespace by -> using : 1
namespace by using -> additional : 1
by using additional -> objects : 1
using additional objects -> for : 1
additional objects for -> the : 1
objects for the -> is : 1
the is a -> region : 1
the is a -> type : 1
the is a -> list : 1
the is a -> or : 1
the is a -> wide : 1
is a region -> of : 2
a region of -> source : 1
a region of -> storage : 1
a region of -> conditional : 6
a region of -> memory : 6
region of source -> code : 1
of source code -> that : 1
source code that -> contains : 1
source code that -> produce : 1
code that contains -> every : 1
that contains every -> declaration : 1
contains every declaration -> adds : 1
every declaration adds -> a : 1
declaration adds a -> name : 1
adds a name -> to : 1
a name to -> a : 1
name to a -> and : 1
to a and -> every : 1
to a and -> if : 2
to a and -> allow : 1
a and every -> use : 1
and every use -> of : 1
every use of -> a : 1
of a name -> requires : 1
a name requires -> the : 1
name requires the -> compiler : 1
requires the compiler -> to : 2
compiler to identify -> which : 1
to identify which -> scope : 1
identify which scope -> contains : 1
which scope contains -> that : 1
which scope contains -> the : 1
scope contains that -> sometimes : 1
contains that sometimes -> you : 1
that sometimes you -> tell : 1
sometimes you tell -> the : 1
you tell the -> compiler : 1
tell the compiler -> exactly : 1
tell the compiler -> where : 1
tell the compiler -> to : 1
tell the compiler -> that : 1
tell the compiler -> about : 1
the compiler exactly -> which : 1
compiler exactly which -> scope : 1
exactly which scope -> contains : 1
scope contains the -> and : 1
contains the and -> at : 1
the and at -> other : 1
and at other -> times : 1
at other times -> the : 1
other times the -> compiler : 1
times the compiler -> determines : 1
the compiler determines -> the : 1
compiler determines the -> once : 1
determines the once -> the : 1
the once the -> compiler : 1
once the compiler -> knows : 1
the compiler knows -> the : 2
the compiler knows -> that : 3
the compiler knows -> which : 1
compiler knows the -> it : 1
compiler knows the -> template : 1
knows the it -> can : 1
the it can -> look : 1
the it can -> never : 1
the it can -> be : 2
it can look -> up : 1
can look up -> the : 1
look up the -> name : 1
look up the -> qualified : 1
look up the -> identifier : 1
up the name -> to : 1
up the name -> by : 1
the name to -> learn : 1
the name to -> resolve : 1
name to learn -> what : 1
to learn what -> the : 1
learn what the -> name : 1
what the name -> is : 1
the name is -> and : 1
the name is -> then : 1
the name is -> used : 2
the name is -> looked : 2
the name is -> not : 1
the name is -> important : 1
the name is -> local : 1
the name is -> so : 1
the name is -> prefaced : 1
name is and -> how : 1
name is and -> the : 1
is and how -> the : 1
and how the -> name : 1
how the name -> can : 1
the name can -> be : 3
the name can -> mean : 1
name can be -> you : 1
name can be -> hidden : 2
name can be -> declared : 1
name can be -> in : 1
name can be -> qualified : 1
name can be -> prefaced : 1
name can be -> used : 2
name can be -> followed : 1
name can be -> a : 1
can be you -> can : 2
be you can -> think : 1
be you can -> declare : 1
be you can -> insert : 1
you can think -> of : 7
can think of -> a : 2
can think of -> the : 3
can think of -> its : 1
can think of -> as : 1
can think of -> an : 1
think of a -> scope : 1
think of a -> header : 1
think of a -> stream : 1
of a scope -> as : 1
a scope as -> a : 1
scope as a -> dictionary : 1
as a dictionary -> of : 1
a dictionary of -> names : 1
dictionary of names -> mapped : 1
of names mapped -> to : 1
names mapped to -> can : 1
mapped to can -> be : 1
to can be -> named : 1
to can be -> equivalent : 1
to can be -> cast : 1
to can be -> and : 1
can be named -> or : 1
be named or -> classes : 1
named or classes -> and : 1
or classes and -> namespaces : 1
classes and namespaces -> later : 1
classes and namespaces -> to : 1
classes and namespaces -> associated : 1
and namespaces later -> in : 1
namespaces later in -> this : 2
in this define -> named : 1
this define named -> statement : 1
define named statement -> function : 1
named statement function -> and : 1
statement function and -> unnamed : 1
function and unnamed -> namespaces : 1
and unnamed namespaces -> define : 1
unnamed namespaces define -> unnamed : 1
namespaces define unnamed -> you : 1
define unnamed you -> can : 1
unnamed you can -> a : 1
you can a -> name : 1
can a name -> with : 1
a name with -> a : 1
a name with -> its : 1
name with a -> scope : 1
name with a -> reference : 1
with a scope -> name : 1
a scope name -> to : 1
scope name to -> tell : 1
name to tell -> the : 2
to tell the -> compiler : 4
to tell the -> environment : 1
the compiler where -> to : 1
compiler where to -> look : 1
where to look -> up : 1
to look up -> the : 1
to look up -> a : 1
up the qualified -> but : 1
the qualified but -> you : 1
the qualified but -> such : 1
qualified but you -> cannot : 1
but you cannot -> qualify : 1
but you cannot -> change : 1
but you cannot -> omit : 1
but you cannot -> use : 1
but you cannot -> mix : 1
but you cannot -> take : 1
you cannot qualify -> names : 1
cannot qualify names -> from : 1
qualify names from -> unnamed : 1
names from unnamed -> in : 1
from unnamed in -> a : 1
unnamed in a -> typical : 1
in a typical -> most : 1
a typical most -> names : 1
typical most names -> are : 1
most names are -> so : 1
names are so -> the : 1
are so the -> compiler : 2
so the compiler -> must : 1
so the compiler -> parses : 1
so the compiler -> is : 1
so the compiler -> can : 2
so the compiler -> knows : 1
so the compiler -> might : 1
compiler must determine -> which : 1
must determine which -> scope : 1
determine which scope -> declares : 1
which scope declares -> the : 1
scope declares the -> later : 1
declares the later -> in : 1
the later in -> this : 2
in this can -> be : 1
in this can -> call : 1
this can be -> and : 1
can be and -> names : 1
can be and -> lists : 1
can be and -> a : 1
can be and -> registered : 1
be and names -> in : 1
and names in -> scopes : 1
and names in -> the : 1
names in scopes -> can : 1
in scopes can -> hide : 1
scopes can hide -> names : 4
can hide names -> that : 1
can hide names -> in : 3
can hide names -> from : 1
hide names that -> are : 1
hide names that -> would : 1
names that are -> declared : 1
names that are -> private : 1
names that are -> outside : 1
that are declared -> in : 5
that are declared -> local : 1
that are declared -> without : 1
are declared in -> in : 1
are declared in -> the : 7
are declared in -> when : 1
are declared in -> can : 1
are declared in -> library : 1
are declared in -> other : 1
declared in in -> inner : 1
in in inner -> scopes : 1
in inner scopes -> can : 3
inner scopes can -> hide : 3
hide names in -> outer : 4
names in outer -> illustrates : 1
names in outer -> int : 1
names in outer -> shows : 1
names in outer -> a : 1
in outer illustrates -> abuses : 1
outer illustrates abuses -> of : 1
illustrates abuses of -> the : 1
abuses of the -> simple : 1
of the simple -> scope : 1
of the simple -> declaration : 1
the simple scope -> the : 1
simple scope the -> body : 1
scope the body -> of : 1
the body of -> the : 6
the body of -> a : 4
body of the -> loop : 1
body of the -> class : 1
body of the -> simple : 1
body of the -> for : 1
body of the -> function : 1
body of the -> constructor : 1
body of the -> you : 1
of the loop -> is : 1
of the loop -> the : 1
of the loop -> or : 1
of the loop -> control : 1
the loop is -> a : 1
loop is a -> in : 1
loop is a -> generalization : 1
is a in -> which : 1
a in which -> the : 6
a in which -> case : 3
a in which -> a : 1
a in which -> is : 1
in which the -> variable : 2
in which the -> functions : 1
in which the -> arguments : 1
in which the -> class : 2
in which the -> usual : 1
in which the -> conversion : 1
in which the -> operands : 1
in which the -> argument : 1
in which the -> transformations : 1
in which the -> function : 5
in which the -> full : 1
in which the -> union : 1
in which the -> template : 1
in which the -> types : 1
in which the -> constructor : 1
in which the -> bits : 1
in which the -> first : 2
in which the -> compiler : 2
in which the -> actual : 1
in which the -> letters : 2
in which the -> square : 1
in which the -> groups : 1
in which the -> and : 1
in which the -> key : 2
in which the -> second : 1
in which the -> number : 1
in which the -> characters : 1
in which the -> last : 1
in which the -> relationship : 1
in which the -> flags : 1
in which the -> righthand : 2
in which the -> stride : 1
which the variable -> is : 2
the variable is -> declared : 1
the variable is -> the : 1
variable is declared -> as : 1
is declared as -> an : 1
is declared as -> a : 1
is declared as -> shown : 1
is declared as -> typename : 1
declared as an -> the : 1
as an the -> statement : 1
as an the -> compiler : 2
as an the -> expression : 3
as an the -> return : 1
as an the -> standard : 1
an the statement -> creates : 1
the statement creates -> a : 1
statement creates a -> nested : 1
creates a nested -> in : 1
a nested in -> which : 1
nested in which -> another : 1
in which another -> declaration : 1
which another declaration -> of : 1
another declaration of -> hides : 1
declaration of hides -> the : 1
of hides the -> outer : 1
hides the outer -> the : 1
hides the outer -> so : 1
the outer the -> reference : 1
the outer the -> inner : 1
outer the reference -> to : 1
the reference to -> at : 1
the reference to -> the : 1
reference to at -> the : 1
to at the -> end : 1
end of is -> no : 1
of is no -> is : 1
is no is -> in : 1
is no is -> the : 1
no is in -> scope : 1
is in scope -> at : 1
in scope at -> that : 1
scope at that -> in : 1
at that in -> inner : 1
that in inner -> scopes : 1
in outer int -> for : 1
outer int for -> i : 1
int for i -> i : 2
for i i -> int : 1
for i i -> undefined : 1
for i i -> statement : 1
for i i -> for : 1
for i i -> implicit : 1
for i i -> if : 2
for i i -> out : 1
for i i -> cout : 2
for i i -> return : 1
for i i -> blitz : 1
i i int -> x : 1
i int x -> if : 1
int x if -> double : 1
x if double -> x : 1
if double x -> prints : 1
double x prints -> prints : 1
x prints prints -> no : 1
x prints prints -> scope : 1
prints prints no -> x : 1
prints no x -> declared : 1
no x declared -> in : 1
x declared in -> this : 1
declared in this -> scope : 1
in this scope -> the : 1
this scope the -> same : 1
scope the same -> scope : 1
the same scope -> you : 1
the same scope -> for : 1
the same scope -> prints : 1
the same scope -> if : 1
the same scope -> as : 3
same scope you -> cannot : 1
scope you cannot -> have : 1
you cannot have -> multiple : 1
you cannot have -> an : 1
cannot have multiple -> declarations : 1
have multiple declarations -> for : 1
have multiple declarations -> of : 1
have multiple declarations -> not : 1
multiple declarations for -> the : 1
declarations for the -> same : 1
declarations for the -> member : 1
declarations for the -> standard : 1
for the same -> unless : 1
for the same -> template : 4
for the same -> count : 1
for the same -> if : 1
for the same -> the : 1
for the same -> and : 1
the same unless -> every : 1
same unless every -> declaration : 1
unless every declaration -> of : 1
every declaration of -> that : 1
declaration of that -> name : 1
of that name -> is : 1
that name is -> for : 1
name is for -> an : 1
is for an -> overloaded : 1
is for an -> uninitialized : 1
is for an -> error : 2
for an overloaded -> function : 1
for an overloaded -> binary : 1
an overloaded function -> or : 1
an overloaded function -> requires : 1
an overloaded function -> to : 1
overloaded function or -> function : 1
function or function -> or : 1
function or function -> template : 1
or function or -> if : 1
function or if -> the : 1
function or if -> you : 1
or if the -> declarations : 1
or if the -> declarator : 1
or if the -> function : 1
or if the -> token : 1
or if the -> initial : 1
or if the -> expression : 1
or if the -> sequence : 1
or if the -> range : 2
or if the -> subsequence : 2
or if the -> entire : 2
or if the -> contents : 1
or if the -> key : 1
or if the -> two : 1
or if the -> stream : 1
or if the -> pushback : 1
or if the -> file : 2
or if the -> new : 2
or if the -> employee : 1
or if the -> locale : 1
or if the -> thousands : 1
or if the -> flag : 1
or if the -> desired : 1
or if the -> input : 1
or if the -> search : 2
if the declarations -> are : 2
the declarations are -> identical : 1
the declarations are -> only : 1
the declarations are -> in : 1
declarations are identical -> in : 1
are identical in -> inner : 1
identical in inner -> scopes : 1
in outer shows -> that : 1
outer shows that -> a : 1
shows that a -> name : 1
that a name -> can : 1
that a name -> must : 1
a name can -> be : 1
can be hidden -> by : 2
be hidden by -> a : 1
be hidden by -> an : 1
hidden by a -> different : 1
hidden by a -> function : 1
by a different -> declaration : 1
a different declaration -> in : 1
different declaration in -> an : 1
declaration in an -> inner : 1
in an inner -> scope : 1
in an inner -> the : 1
an inner scope -> a : 1
inner scope a -> class : 1
scope a class -> name : 1
a class name -> or : 1
a class name -> name : 1
a class name -> and : 1
class name or -> enumeration : 1
class name or -> by : 1
class name or -> the : 1
name or enumeration -> type : 1
or enumeration type -> name : 1
enumeration type name -> can : 1
type name can -> be : 1
hidden by an -> or : 1
hidden by an -> inner : 1
by an or -> enumerator : 1
an or enumerator -> at : 1
or enumerator at -> the : 1
enumerator at the -> same : 1
at the same -> scope : 2
at the same -> offset : 1
same scope for -> x : 1
scope for x -> c : 1
for x c -> const : 1
x c const -> int : 1
c const int -> x : 1
const int x -> hides : 1
const int x -> cout : 1
int x hides -> enum : 1
x hides enum -> x : 1
hides enum x -> const : 1
enum x const -> int : 1
x const int -> a : 1
const int a -> int : 1
const int a -> inner : 1
int a int -> cannot : 1
int a int -> b : 1
a int cannot -> hide : 1
int cannot hide -> enumerator : 1
cannot hide enumerator -> a : 1
hide enumerator a -> const : 1
enumerator a const -> int : 1
a const int -> a : 1
a const int -> function : 1
int a inner -> scope : 1
a inner scope -> can : 1
inner scope can -> hide : 1
scope can hide -> outer : 1
can hide outer -> a : 1
hide outer a -> entities : 1
outer a entities -> establish : 1
a entities establish -> scope : 1
entities establish scope -> in : 1
establish scope in -> different : 1
scope in different -> the : 1
in different the -> description : 1
different the description -> of : 1
each entity this -> and : 1
entity this and -> subsequent : 1
and subsequent includes -> scoping : 1
subsequent includes scoping -> the : 1
includes scoping the -> general : 1
scoping the general -> rule : 1
the general rule -> of : 1
general rule of -> thumb : 1
rule of thumb -> is : 1
of thumb is -> that : 1
thumb is that -> curly : 1
is that curly -> braces : 1
that curly braces -> delimit : 1
curly braces delimit -> a : 1
braces delimit a -> scope : 1
delimit a scope -> the : 1
a scope the -> outermost : 1
scope the outermost -> scope : 1
the outermost scope -> region : 1
outermost scope region -> is : 1
scope region is -> outside : 1
region is outside -> of : 1
is outside of -> all : 1
outside of all -> the : 1
outside of all -> and : 1
all the curly -> braces : 1
the curly braces -> and : 2
curly braces and -> is : 1
curly braces and -> initialize : 1
braces and is -> called : 1
and is called -> the : 1
and is called -> direct : 1
called the later -> in : 1
this the compiler -> reads : 1
this the compiler -> keeps : 1
this the compiler -> allows : 1
the compiler reads -> an : 1
compiler reads an -> it : 1
reads an it -> must : 1
an it must -> look : 1
an it must -> be : 1
it must look -> up : 1
must look up -> the : 1
up the identifier -> to : 1
the identifier to -> determine : 1
identifier to determine -> which : 1
to determine which -> declaration : 1
to determine which -> overloaded : 1
to determine which -> function : 1
determine which declaration -> it : 1
which declaration it -> comes : 1
declaration it comes -> in : 1
it comes in -> most : 1
comes in most -> you : 1
in most you -> can : 2
most you can -> readily : 1
most you can -> use : 2
you can readily -> tell : 1
can readily tell -> which : 1
readily tell which -> identifier : 1
tell which identifier -> is : 1
which identifier is -> but : 1
identifier is but -> it : 1
is but it -> is : 3
is but it -> includes : 1
is but it -> usually : 1
is not always -> so : 1
is not always -> you : 1
not always so -> a : 1
always so a -> small : 1
so a small -> mistake : 1
a small mistake -> can : 1
small mistake can -> sometimes : 1
mistake can sometimes -> lead : 1
can sometimes lead -> to : 1
sometimes lead to -> code : 1
lead to code -> that : 1
to code that -> compiles : 1
code that compiles -> successfully : 2
that compiles successfully -> but : 1
that compiles successfully -> with : 1
compiles successfully but -> runs : 1
successfully but runs -> incorrectly : 1
but runs incorrectly -> because : 1
runs incorrectly because -> an : 1
incorrectly because an -> identifier : 1
because an identifier -> refers : 1
an identifier refers -> to : 1
identifier refers to -> a : 1
to a different -> object : 2
to a different -> for : 1
to a different -> location : 1
to a different -> arithmetic : 1
to a different -> the : 1
to a different -> enumerated : 1
to a different -> or : 1
to a different -> using : 1
to a different -> pointer : 3
to a different -> member : 1
to a different -> integer : 1
to a different -> a : 1
to a different -> position : 2
to a different -> if : 4
to a different -> value : 1
a different object -> from : 1
a different object -> at : 1
different object from -> the : 1
object from the -> one : 1
object from the -> point : 1
from the one -> you : 1
the one you -> to : 1
one you to -> understand : 1
you to understand -> name : 1
to understand name -> lookup : 1
understand name lookup -> you : 1
name lookup you -> must : 1
lookup you must -> first : 1
you must first -> understand : 1
must first understand -> namespaces : 1
first understand namespaces -> later : 1
understand namespaces later -> in : 1
in this functions -> classes : 1
this functions classes -> and : 1
functions classes and -> templates : 1
classes and templates -> lookup : 1
classes and templates -> for : 1
and templates lookup -> takes : 1
templates lookup takes -> place : 1
lookup takes place -> before : 1
takes place before -> functions : 1
place before functions -> are : 1
before functions are -> resolved : 1
functions are resolved -> and : 1
are resolved and -> before : 1
resolved and before -> the : 1
and before the -> access : 1
and before the -> exception : 2
and before the -> closing : 1
before the access -> level : 1
the access level -> of : 2
the access level -> caps : 1
the access level -> is : 3
the access level -> when : 1
access level of -> class : 1
access level of -> a : 4
access level of -> an : 1
level of class -> members : 1
of class members -> is : 1
class members is -> if : 1
members is if -> a : 1
is if a -> name : 1
if a name -> is : 2
a name is -> found : 1
a name is -> a : 1
name is found -> in : 1
is found in -> an : 1
found in an -> inner : 1
found in an -> outer : 1
an inner the -> compiler : 1
an inner the -> preprocessor : 1
inner the compiler -> uses : 1
the compiler uses -> that : 1
the compiler uses -> a : 1
the compiler uses -> the : 4
compiler uses that -> even : 1
uses that even -> if : 1
that even if -> a : 1
even if a -> better : 1
even if a -> different : 1
even if a -> signal : 1
even if a -> program : 1
even if a -> is : 1
if a better -> declaration : 1
a better declaration -> would : 1
better declaration would -> be : 1
declaration would be -> found : 1
would be found -> in : 1
be found in -> an : 1
be found in -> and : 1
in an outer -> lookup : 1
an outer lookup -> trumps : 1
outer lookup trumps -> overload : 1
lookup trumps overload -> shows : 1
lookup trumps overload -> i : 1
trumps overload shows -> how : 1
overload shows how -> problems : 1
shows how problems -> can : 1
how problems can -> arise : 1
problems can arise -> when : 1
can arise when -> an : 1
arise when an -> function : 1
when an function -> is : 1
an function is -> declared : 1
function is declared -> in : 2
function is declared -> you : 1
declared in more -> than : 1
in more than -> one : 2
one the function -> is : 1
one the function -> template : 1
the function is -> and : 1
the function is -> defined : 1
the function is -> declared : 1
the function is -> they : 1
the function is -> as : 1
the function is -> for : 1
the function is -> the : 5
the function is -> a : 3
the function is -> in : 1
the function is -> expanded : 1
the function is -> most : 1
the function is -> if : 1
the function is -> called : 5
the function is -> when : 1
the function is -> eliminated : 1
the function is -> never : 1
the function is -> qualified : 1
the function is -> implicitly : 1
the function is -> has : 1
the function is -> you : 2
the function is -> not : 2
the function is -> highly : 1
the function is -> equivalent : 2
the function is -> an : 2
the function is -> specialized : 2
the function is -> useful : 1
the function is -> overloaded : 1
function is and -> is : 1
is and is -> defined : 1
is and is -> membership : 1
is and is -> by : 1
is and is -> true : 1
is and is -> not : 2
is and is -> less : 1
is and is -> set : 9
is and is -> determined : 1
is and is -> equal : 2
is and is -> is : 1
and is defined -> in : 1
and is defined -> as : 1
defined in namespace -> inside : 1
in namespace inside -> the : 1
namespace inside the -> compiler : 1
inside the compiler -> looks : 1
the compiler looks -> up : 3
the compiler looks -> first : 1
the compiler looks -> for : 1
compiler looks up -> the : 2
compiler looks up -> an : 1
compiler looks up -> a : 1
compiler looks up -> nondependent : 1
looks up the -> name : 1
looks up the -> deallocation : 1
looks up the -> member : 1
looks up the -> unqualified : 1
the name by -> searching : 1
name by searching -> first : 1
by searching first -> in : 1
searching first in -> the : 1
first in the -> local : 2
first in the -> class : 3
first in the -> then : 1
first in the -> context : 1
in the local -> scope : 2
in the local -> function : 1
in the local -> count : 1
the local scope -> the : 1
the local scope -> and : 1
local scope the -> function : 1
scope the function -> then : 1
the function then -> in : 1
the function then -> the : 1
function then in -> namespace : 1
then in namespace -> where : 1
in namespace where -> it : 1
namespace where it -> finds : 1
where it finds -> name : 1
it finds name -> lookup : 1
finds name lookup -> stops : 1
name lookup stops -> at : 1
lookup stops at -> that : 1
stops at that -> point : 1
at that point -> because : 1
that point because -> the : 1
point because the -> compiler : 1
because the compiler -> found : 1
because the compiler -> would : 1
because the compiler -> cannot : 1
the compiler found -> a : 1
compiler found a -> converts : 1
found a converts -> to : 1
a converts to -> type : 1
converts to type -> and : 1
to type and -> calls : 1
to type and -> returns : 2
to type and -> ownership : 1
type and calls -> the : 1
and calls the -> function : 1
and calls the -> format : 1
calls the function -> brings : 1
calls the function -> returns : 1
the function brings -> all : 1
function brings all -> the : 1
brings all the -> overloaded : 1
all the overloaded -> functions : 2
all the overloaded -> with : 1
the overloaded functions -> into : 1
the overloaded functions -> as : 1
the overloaded functions -> call : 1
overloaded functions into -> its : 1
functions into its -> scope : 1
into its scope -> which : 1
its scope which -> are : 1
scope which are -> described : 1
which are described -> at : 1
are described at -> the : 1
described at the -> end : 1
end of this -> so : 1
of this so -> name : 1
this so name -> lookup : 1
so name lookup -> can : 1
name lookup can -> find : 1
lookup can find -> the : 1
can find the -> best : 1
can find the -> operator : 1
find the best -> which : 1
the best which -> is : 1
best which is -> lookup : 1
which is lookup -> trumps : 1
is lookup trumps -> overload : 1
trumps overload i -> namespace : 1
overload i namespace -> n : 1
i namespace n -> void : 1
namespace n void -> d : 1
n void d -> void : 1
void d void -> even : 1
d void even -> though : 1
void even though -> is : 1
even though is -> a : 1
though is a -> better : 1
is a better -> the : 1
a better the -> compiler : 1
better the compiler -> finds : 1
the compiler finds -> int : 1
the compiler finds -> the : 1
compiler finds int -> prints : 1
finds int prints -> using : 1
int prints using -> using : 1
prints using using -> now : 1
using using now -> all : 1
using now all -> overloaded : 1
now all overloaded -> are : 1
all overloaded are -> at : 1
overloaded are at -> the : 1
are at the -> same : 1
are at the -> they : 1
same scope prints -> to : 1
scope prints to -> for : 1
prints to for -> more : 1
to for more -> information : 4
information about overloaded -> functions : 1
information about overloaded -> and : 1
about overloaded functions -> and : 1
overloaded functions and -> to : 1
functions and to -> for : 1
and to for -> information : 1
and to for -> more : 1
to for information -> about : 4
information about access -> levels : 1
about access levels -> in : 1
access levels in -> a : 1
levels in a -> class : 1
in a class -> name : 1
in a class -> lookup : 1
in a class -> or : 4
in a class -> definition : 3
in a class -> hierarchy : 1
in a class -> in : 1
in a class -> and : 1
in a class -> template : 1
class name name -> specify : 1
name name specify -> a : 1
name specify a -> particular : 1
specify a particular -> namespace : 1
a particular namespace -> for : 1
particular namespace for -> looking : 1
namespace for looking -> up : 1
for looking up -> a : 1
for looking up -> unqualified : 1
looking up a -> qualify : 1
up a qualify -> the : 1
a qualify the -> name : 1
a qualify the -> function : 1
qualify the name -> using : 1
qualify the name -> to : 1
the name using -> the : 1
name using the -> operator : 1
using the operator -> a : 1
using the operator -> or : 1
the operator a -> name : 1
operator a name -> that : 1
name that follows -> the : 1
that follows the -> global : 1
that follows the -> usual : 1
that follows the -> statement : 1
that follows the -> template : 1
that follows the -> case : 1
that follows the -> the : 1
follows the global -> scope : 1
global scope operator -> unary : 2
global scope operator -> to : 3
scope operator unary -> is : 1
scope operator unary -> as : 1
operator unary is -> looked : 1
unary is looked -> up : 1
is looked up -> in : 5
is looked up -> according : 1
looked up in -> the : 10
up in the -> global : 2
up in the -> scope : 1
up in the -> manner : 1
up in the -> class : 4
up in the -> definition : 1
up in the -> local : 1
up in the -> type : 1
global scope of -> all : 1
scope of all -> the : 1
all the name -> must : 1
the name must -> be : 2
the name must -> have : 1
name must be -> declared : 2
name must be -> qualified : 2
name must be -> unique : 2
name must be -> one : 1
name must be -> followed : 1
must be declared -> in : 2
must be declared -> before : 1
must be declared -> or : 1
must be declared -> as : 1
be declared in -> the : 2
the global not -> in : 1
global not in -> a : 1
not in a -> nested : 1
not in a -> span : 1
a nested or -> the : 1
nested or the -> name : 1
or the name -> must : 1
or the name -> is : 1
or the name -> of : 2
name must have -> been : 1
must have been -> introduced : 1
must have been -> initialized : 1
must have been -> returned : 3
must have been -> allocated : 1
have been introduced -> into : 1
been introduced into -> the : 1
introduced into the -> global : 2
into the global -> scope : 1
into the global -> for : 1
into the global -> this : 1
global scope by -> a : 1
scope by a -> directive : 1
by a directive -> or : 1
a directive or -> declaration : 1
a directive or -> namespace : 1
directive or declaration -> later : 1
or declaration later -> in : 1
declaration later in -> this : 1
this the global -> scope : 1
operator to access -> names : 1
operator to access -> the : 1
operator to access -> any : 1
to access names -> that : 1
access names that -> have : 1
names that have -> been : 2
have been hidden -> by : 2
been hidden by -> an : 1
been hidden by -> other : 1
by an inner -> global : 1
an inner global -> scope : 1
inner global scope -> shows : 1
global scope shows -> this : 1
scope shows this -> use : 1
shows this use -> of : 1
this use of -> the : 2
this use of -> see : 1
use of the -> operator : 1
use of the -> with : 1
use of the -> c : 1
use of the -> and : 1
use of the -> parameter : 1
use of the -> inserter : 1
use of the -> class : 1
use of the -> terms : 1
of the operator -> to : 1
of the operator -> must : 1
of the operator -> takes : 1
the operator to -> access : 2
the operator to -> move : 1
the operator to -> any : 1
the operator to -> compare : 3
the operator to -> until : 1
to access the -> global : 1
to access the -> additional : 1
to access the -> arguments : 1
to access the -> member : 1
to access the -> key : 2
to access the -> associated : 2
access the global -> from : 1
the global from -> within : 1
global from within -> after : 1
from within after -> an : 1
within after an -> inner : 1
after an inner -> has : 1
an inner has -> been : 1
inner has been -> global : 1
has been global -> scope : 1
been global scope -> int : 1
global scope int -> x : 1
scope int x -> int : 1
int x int -> double : 1
int x int -> x : 1
int x int -> y : 1
x int double -> x : 1
int double x -> hides : 1
int double x -> radius : 1
double x hides -> the : 1
x hides the -> global : 1
hides the global -> x : 1
the global x -> x : 1
global x x -> prints : 1
x x prints -> prints : 1
x x prints -> declaration : 1
prints prints scope -> resolution : 1
prints scope resolution -> operator : 1
scope resolution operator -> requires : 1
scope resolution operator -> untangling : 1
resolution operator requires -> a : 1
operator requires a -> namespace : 1
operator requires a -> pointer : 1
requires a namespace -> or : 1
a namespace or -> class : 1
a namespace or -> declare : 1
namespace or class -> name : 1
namespace or class -> the : 1
or class name -> as : 1
class name as -> its : 1
name as its -> lefthand : 1
as its lefthand -> and : 1
its lefthand and -> an : 1
lefthand and an -> identifier : 1
and an identifier -> as : 1
an identifier as -> its : 1
an identifier as -> a : 1
identifier as its -> righthand : 1
as its righthand -> the : 1
its righthand the -> identifier : 1
righthand the identifier -> is : 1
the identifier is -> looked : 1
identifier is looked -> up : 1
in the scope -> of : 8
the scope of -> the : 7
the scope of -> so : 1
the scope of -> a : 4
the scope of -> is : 1
the scope of -> variables : 1
the scope of -> this : 1
the scope of -> both : 1
scope of the -> lefthand : 1
scope of the -> declared : 1
scope of the -> every : 1
scope of the -> part : 1
scope of the -> name : 1
scope of the -> you : 1
scope of the -> class : 1
of the lefthand -> namespace : 1
the lefthand namespace -> or : 1
lefthand namespace or -> scope : 1
namespace or scope -> resolution : 1
or scope resolution -> shows : 1
scope resolution shows -> the : 1
resolution shows the -> scope : 1
shows the scope -> resolution : 1
the scope resolution -> operator : 1
resolution operator untangling -> a : 1
operator untangling a -> mess : 1
untangling a mess -> made : 1
a mess made -> by : 1
mess made by -> using : 1
made by using -> the : 1
by using the -> same : 1
by using the -> which : 1
by using the -> they : 1
by using the -> that : 2
using the same -> names : 1
using the same -> mechanism : 1
using the same -> template : 1
using the same -> format : 2
using the same -> algorithm : 5
using the same -> syntax : 1
using the same -> technique : 1
the same names -> for : 1
the same names -> as : 1
the same names -> in : 1
same names for -> different : 1
names for different -> kinds : 1
for different kinds -> of : 6
different kinds of -> notice : 1
different kinds of -> lvalues : 1
different kinds of -> type : 1
different kinds of -> data : 1
different kinds of -> functions : 1
different kinds of -> nested : 1
different kinds of -> and : 1
different kinds of -> pointers : 1
different kinds of -> containers : 1
different kinds of -> see : 5
different kinds of -> stream : 1
kinds of notice -> how : 1
of notice how -> the : 1
notice how the -> inner : 1
how the inner -> hides : 1
the inner hides -> the : 1
inner hides the -> outer : 1
the outer so -> the : 1
outer so the -> simple : 1
so the simple -> name : 1
the simple name -> refers : 1
simple name refers -> to : 1
name refers to -> the : 1
name refers to -> a : 2
to the the -> lefthand : 1
to the the -> most : 2
to the the -> result : 1
to the the -> first : 2
to the the -> compiler : 1
to the the -> function : 11
to the the -> comma : 1
to the the -> standard : 1
to the the -> syntax : 1
to the the -> return : 2
to the the -> template : 1
to the the -> second : 2
to the the -> derived : 1
to the the -> implementation : 1
to the the -> stream : 1
to the the -> array : 1
to the the -> new : 1
the the lefthand -> operand : 1
the lefthand operand -> to : 1
the lefthand operand -> and : 2
the lefthand operand -> is : 1
the lefthand operand -> but : 1
the lefthand operand -> of : 1
lefthand operand to -> must : 1
operand to must -> be : 1
to must be -> a : 1
be a class -> or : 2
be a class -> and : 2
be a class -> it : 1
be a class -> erase : 1
a class or -> so : 1
a class or -> an : 1
a class or -> enumerated : 1
a class or -> a : 1
a class or -> namespace : 3
a class or -> object : 1
a class or -> or : 1
a class or -> class : 4
a class or -> function : 4
a class or -> the : 1
a class or -> other : 1
a class or -> template : 1
class or so -> in : 1
or so in -> the : 1
so in the -> expression : 1
in the expression -> the : 2
in the expression -> might : 1
in the expression -> result : 1
in the expression -> list : 2
the expression the -> inner : 1
the expression the -> compiler : 1
the expression the -> multiplication : 1
expression the inner -> does : 1
the inner does -> not : 1
inner does not -> hide : 1
does not hide -> the : 1
not hide the -> outer : 1
hide the outer -> scope : 1
the outer scope -> resolution : 1
outer scope resolution -> namespace : 1
scope resolution namespace -> n : 1
resolution namespace n -> struct : 1
namespace n struct -> counter : 1
n struct counter -> static : 1
struct counter static -> int : 1
counter static int -> double : 1
static int double -> n : 1
int double n -> int : 1
double n int -> defines : 1
n int defines -> static : 1
int defines static -> data : 1
defines static data -> member : 1
static data member -> int : 1
static data member -> can : 2
static data member -> regardless : 1
static data member -> is : 2
static data member -> cannot : 1
static data member -> before : 1
static data member -> of : 1
data member int -> int : 1
member int int -> counter : 1
int int counter -> unrelated : 1
int counter unrelated -> to : 1
counter unrelated to -> int : 1
unrelated to int -> n : 1
to int n -> hides : 1
int n hides -> namespace : 1
n hides namespace -> n : 1
hides namespace n -> refers : 1
namespace n refers -> to : 1
n refers to -> namespace : 1
refers to namespace -> n : 1
to namespace n -> prints : 1
namespace n prints -> prints : 1
n prints prints -> prints : 1
prints prints prints -> prints : 8
prints prints prints -> name : 1
prints prints prints -> advantage : 1
prints prints prints -> function : 1
prints prints prints -> in : 1
prints prints name -> name : 1
prints name name -> compiler : 1
name name compiler -> looks : 1
name compiler looks -> up : 1
looks up an -> unqualified : 1
up an unqualified -> that : 1
an unqualified that -> a : 1
unqualified that a -> bare : 1
that a bare -> identifier : 1
a bare identifier -> or : 1
bare identifier or -> operator : 1
identifier or operator -> in : 1
or operator in -> a : 1
operator in a -> series : 1
in a series -> of : 1
series of scopes -> in : 1
of scopes in -> order : 1
scopes in order -> to : 1
order to find -> its : 1
to find its -> the : 1
find its the -> simple : 1
its the simple -> rule : 1
the simple rule -> is : 1
simple rule is -> that : 2
is that the -> innermost : 1
is that the -> compiler : 3
is that the -> operators : 1
is that the -> and : 1
is that the -> c : 1
is that the -> template : 1
is that the -> basic : 1
is that the -> type : 1
is that the -> library : 1
is that the -> algorithms : 1
is that the -> default : 1
is that the -> first : 2
is that the -> value : 1
is that the -> flag : 1
that the innermost -> scope : 1
the innermost scope -> is : 1
innermost scope is -> searched : 1
scope is searched -> and : 1
is searched and -> succeeding : 1
is searched and -> so : 1
searched and succeeding -> outer : 1
and succeeding outer -> scopes : 1
succeeding outer scopes -> are : 1
outer scopes are -> searched : 1
scopes are searched -> until : 1
are searched until -> a : 1
searched until a -> matching : 1
until a matching -> declaration : 1
until a matching -> handler : 1
a matching declaration -> is : 1
matching declaration is -> additional : 1
declaration is additional -> named : 1
is additional named -> scopes : 1
additional named scopes -> are : 1
named scopes are -> depending : 1
scopes are depending -> on : 1
are depending on -> the : 1
depending on the -> context : 1
depending on the -> regardless : 1
depending on the -> this : 1
depending on the -> if : 1
depending on the -> type : 1
depending on the -> version : 1
depending on the -> the : 1
depending on the -> following : 2
depending on the -> it : 2
on the context -> of : 2
the context of -> the : 5
context of the -> as : 1
context of the -> function : 2
context of the -> declaration : 1
context of the -> in : 1
of the as -> explained : 1
of the as -> shown : 1
of the as -> the : 1
the as explained -> in : 1
as explained in -> this : 1
as explained in -> later : 1
as explained in -> the : 1
explained in this -> section : 1
explained in this -> most : 1
in this section -> and : 3
in this section -> lists : 1
in this section -> for : 24
in this section -> notes : 1
in this section -> presents : 1
in this section -> has : 1
in this section -> is : 1
in this section -> fall : 1
in this section -> refer : 1
in this section -> use : 1
in this section -> shows : 1
this section and -> the : 1
this section and -> in : 2
section and the -> next : 1
section and the -> other : 1
and the next -> name : 1
and the next -> two : 1
and the next -> character : 1
the next name -> an : 1
next name an -> associated : 1
name an associated -> simple : 1
an associated simple -> rule : 1
associated simple rule -> is : 1
a name must -> be : 1
be declared before -> it : 1
declared before it -> is : 1
before it is -> reading : 2
before it is -> for : 1
before it is -> an : 1
it is reading -> the : 2
is reading the -> source : 1
is reading the -> class : 1
reading the source -> file : 1
source file from -> top : 1
file from top -> to : 1
from top to -> a : 1
from top to -> the : 1
top to a -> class : 1
to a class -> the : 3
to a class -> a : 1
to a class -> type : 2
to a class -> if : 1
to a class -> chain : 1
to a class -> class : 1
a class the -> class : 1
a class the -> compiler : 2
a class the -> default : 1
a class the -> scalar : 1
a class the -> actual : 1
a class the -> entire : 1
a class the -> access : 1
a class the -> template : 1
a class the -> bare : 1
a class the -> first : 1
class the class -> is : 1
class the class -> must : 1
class the class -> name : 2
class the class -> template : 1
the class is -> searched : 3
the class is -> nested : 1
the class is -> local : 1
the class is -> then : 1
the class is -> the : 3
the class is -> not : 3
the class is -> can : 1
the class is -> used : 1
the class is -> organized : 1
the class is -> is : 1
class is searched -> the : 1
class is searched -> if : 1
class is searched -> for : 1
is searched the -> declaration : 1
searched the declaration -> must : 1
the declaration must -> appear : 1
the declaration must -> omit : 1
declaration must appear -> before : 1
must appear before -> it : 1
must appear before -> the : 1
appear before it -> is : 1
reading the class -> definition : 1
the class definition -> from : 1
the class definition -> if : 1
the class definition -> are : 1
the class definition -> is : 1
the class definition -> or : 1
the class definition -> declares : 1
the class definition -> with : 1
the class definition -> the : 2
the class definition -> in : 1
class definition from -> top : 1
definition from top -> to : 1
top to the -> immediate : 1
to the immediate -> base : 1
the immediate base -> classes : 1
the immediate base -> the : 1
immediate base classes -> are : 2
base classes are -> searched : 1
base classes are -> if : 2
base classes are -> initialized : 2
base classes are -> called : 1
base classes are -> base : 1
base classes are -> ignored : 1
base classes are -> not : 1
classes are searched -> next : 1
are searched next -> declaration : 1
searched next declaration -> and : 1
next declaration and -> their : 1
declaration and their -> base : 1
and their base -> classes : 1
their base classes -> are : 2
classes are if -> the : 2
are if the -> class : 3
are if the -> operands : 1
are if the -> expression : 1
are if the -> friend : 1
are if the -> includes : 1
if the class -> is : 4
if the class -> has : 2
if the class -> granting : 1
if the class -> type : 1
class is nested -> in : 1
is nested in -> another : 1
is nested in -> class : 2
nested in another -> the : 1
in another the -> containing : 1
another the containing -> class : 1
the containing class -> is : 1
the containing class -> and : 1
the containing class -> template : 1
containing class is -> and : 1
class is and -> its : 1
class is and -> never : 1
is and its -> base : 1
and its base -> classes : 1
its base classes -> are : 1
its base classes -> the : 1
its base classes -> and : 1
class is local -> to : 1
is local to -> a : 3
is local to -> the : 2
local to a -> the : 2
local to a -> function : 2
local to a -> block : 1
local to a -> that : 1
to a the -> block : 1
to a the -> pointer : 1
to a the -> compiler : 2
to a the -> right : 1
to a the -> mapping : 1
to a the -> function : 2
to a the -> string : 1
to a the -> resulting : 1
a the block -> that : 1
the block that -> contains : 1
block that contains -> the : 1
that contains the -> class : 2
that contains the -> friend : 2
that contains the -> declaration : 1
that contains the -> the : 1
that contains the -> nested : 1
that contains the -> greek : 1
that contains the -> source : 1
that contains the -> new : 1
that contains the -> same : 1
contains the class -> is : 2
contains the class -> a : 1
class is then -> enclosing : 1
is then enclosing -> blocks : 1
then enclosing blocks -> are : 1
enclosing blocks are -> the : 1
blocks are the -> namespaces : 1
are the namespaces -> that : 1
the namespaces that -> contain : 3
namespaces that contain -> the : 3
that contain the -> class : 1
that contain the -> outer : 1
that contain the -> types : 1
that contain the -> but : 1
contain the class -> declaration : 1
the class declaration -> are : 1
the class declaration -> unless : 1
the class declaration -> that : 1
the class declaration -> to : 1
class declaration are -> that : 1
declaration are that -> the : 1
are that the -> namespace : 1
are that the -> functions : 1
are that the -> corresponding : 2
that the namespace -> that : 1
the namespace that -> immediately : 1
the namespace that -> contains : 2
namespace that immediately -> contains : 1
that immediately contains -> the : 1
immediately contains the -> class : 1
is searched if -> that : 1
searched if that -> namespace : 1
if that namespace -> is : 1
that namespace is -> nested : 1
namespace is nested -> within : 1
is nested within -> another : 1
nested within another -> the : 1
within another the -> outer : 1
another the outer -> namespace : 1
the outer namespace -> is : 1
outer namespace is -> searched : 1
namespace is searched -> and : 1
namespace is searched -> for : 1
searched and so -> if : 1
and so if -> the : 1
and so if -> all : 1
so if the -> class : 1
so if the -> left : 2
class is the -> namespaces : 1
class is the -> name : 1
class is the -> same : 1
class is the -> base : 8
class is the -> root : 1
is the namespaces -> that : 1
contain the outer -> class : 1
the outer class -> or : 1
the outer class -> is : 1
the outer class -> nested : 1
outer class or -> classes : 1
class or classes -> are : 1
or classes are -> the : 1
classes are the -> body : 1
are the body -> of : 1
body of a -> member : 1
body of a -> or : 1
body of a -> it : 1
body of a -> the : 1
of a member -> names : 1
of a member -> functions : 1
of a member -> whose : 1
of a member -> function : 2
of a member -> template : 1
of a member -> of : 3
of a member -> properties : 2
a member names -> are : 1
member names are -> looked : 1
are looked up -> first : 3
are looked up -> at : 1
are looked up -> normally : 1
are looked up -> in : 1
looked up first -> in : 3
up first in -> the : 3
local scope and -> nested : 1
scope and nested -> scopes : 1
and nested scopes -> of : 1
nested scopes of -> the : 1
scopes of the -> function : 1
of the function -> then : 1
of the function -> name : 1
of the function -> slightly : 1
of the function -> type : 3
of the function -> pointer : 1
of the function -> lvalue : 1
of the function -> can : 2
of the function -> an : 1
of the function -> in : 3
of the function -> parameters : 1
of the function -> exception : 1
of the function -> call : 2
of the function -> is : 1
of the function -> the : 1
of the function -> template : 1
of the function -> x : 1
of the function -> searches : 1
of the function -> functions : 1
of the function -> by : 1
of the function -> descriptions : 1
of the function -> class : 5
of the function -> return : 1
of the function -> specifier : 1
function then the -> class : 1
then the class -> is : 1
is the name -> can : 1
is the name -> must : 1
is the name -> of : 7
can be declared -> anywhere : 1
can be declared -> as : 1
can be declared -> without : 1
can be declared -> with : 6
can be declared -> within : 1
be declared anywhere -> in : 1
declared anywhere in -> the : 1
anywhere in the -> class : 1
anywhere in the -> case : 1
anywhere in the -> the : 1
anywhere in the -> it : 1
in the class -> even : 1
in the class -> but : 2
in the class -> just : 1
in the class -> granting : 2
in the class -> that : 3
in the class -> declaration : 1
in the class -> definition : 3
in the class -> for : 1
in the class -> the : 4
in the class -> of : 1
in the class -> cannot : 1
in the class -> address : 1
in the class -> and : 2
in the class -> then : 1
in the class -> a : 1
in the class -> which : 1
in the class -> header : 3
in the class -> class : 1
the class even -> if : 1
class even if -> that : 1
even if that -> declaration : 1
even if that -> conversion : 1
if that declaration -> appears : 1
that declaration appears -> after : 1
declaration appears after -> the : 1
appears after the -> member : 1
after the member -> function : 1
the member function -> is : 14
the member function -> the : 1
the member function -> you : 1
the member function -> also : 1
the member function -> computes : 1
the member function -> for : 2
the member function -> does : 1
the member function -> can : 1
the member function -> that : 1
the member function -> interrupted : 1
the member function -> returns : 2
the member function -> to : 4
the member function -> of : 2
the member function -> or : 1
the member function -> checks : 1
member function is -> an : 1
member function is -> the : 2
member function is -> like : 1
member function is -> member : 1
member function is -> if : 1
member function is -> also : 1
member function is -> qualified : 1
member function is -> called : 9
member function is -> usually : 2
function is an -> exception : 1
function is an -> but : 1
function is an -> the : 1
function is an -> ordinary : 2
function is an -> input : 1
is an exception -> to : 1
is an exception -> type : 1
is an exception -> only : 1
is an exception -> bit : 1
is an exception -> class : 1
an exception to -> the : 1
exception to the -> such : 1
to the such -> names : 1
to the such -> as : 1
the such names -> can : 1
such names can -> be : 1
names can be -> used : 1
names can be -> accessed : 1
in a parameter -> a : 1
a parameter a -> default : 1
parameter a default -> argument : 1
a default argument -> or : 1
a default argument -> unless : 1
a default argument -> is : 2
a default argument -> for : 1
default argument or -> the : 1
argument or the -> function : 1
or the function -> but : 1
or the function -> is : 1
or the function -> calls : 2
or the function -> returns : 1
the function but -> not : 1
function but not -> in : 1
but not in -> the : 1
but not in -> namespace : 1
but not in -> any : 1
not in the -> return : 1
not in the -> class : 2
not in the -> global : 1
not in the -> declaration : 1
not in the -> if : 1
not in the -> string : 1
not in the -> wide : 1
not in the -> add : 1
not in the -> it : 1
not in the -> unlike : 2
in the return -> the : 1
in the return -> a : 1
in the return -> type : 1
in the return -> value : 5
the return the -> name : 2
the return the -> mean : 1
return the name -> is : 1
return the name -> and : 1
return the name -> of : 1
name is then -> looked : 1
is then looked -> up : 1
then looked up -> in : 2
manner described earlier -> for : 1
described earlier for -> other : 1
earlier for other -> names : 1
for other names -> used : 1
other names used -> in : 1
names used in -> a : 1
names used in -> the : 1
a class lookup -> rules : 1
class lookup rules -> permit : 1
lookup rules permit -> a : 1
rules permit a -> member : 1
permit a member -> function : 1
a member function -> to : 2
a member function -> of : 13
a member function -> member : 1
a member function -> can : 1
a member function -> which : 1
a member function -> you : 1
a member function -> apply : 1
a member function -> applies : 1
a member function -> with : 4
a member function -> searches : 1
a member function -> within : 1
a member function -> that : 2
a member function -> in : 1
a member function -> or : 2
a member function -> template : 3
a member function -> the : 9
a member function -> is : 1
a member function -> if : 1
a member function -> via : 2
a member function -> as : 2
a member function -> called : 6
member function to -> use : 1
member function to -> a : 1
member function to -> hint : 1
member function to -> learn : 2
member function to -> sort : 1
member function to -> read : 1
function to use -> a : 1
to use a -> name : 1
to use a -> reference : 1
to use a -> member : 1
to use a -> comma : 2
to use a -> you : 1
to use a -> nested : 1
to use a -> in : 1
to use a -> sign : 1
to use a -> list : 1
to use a -> standard : 1
to use a -> set : 1
to use a -> store : 1
use a name -> that : 1
is declared later -> in : 1
is declared later -> than : 1
declared later in -> the : 1
later in the -> class : 1
later in the -> context : 1
the class but -> the : 1
the class but -> when : 1
class but the -> name : 1
but the name -> lookup : 1
the name lookup -> rules : 4
the name lookup -> for : 1
name lookup rules -> do : 1
name lookup rules -> in : 1
name lookup rules -> listed : 1
name lookup rules -> apply : 1
name lookup rules -> are : 2
name lookup rules -> earlier : 1
lookup rules do -> not : 1
rules do not -> trump : 1
do not trump -> the : 1
not trump the -> syntax : 1
trump the syntax -> and : 1
the syntax and -> parsing : 1
the syntax and -> remains : 1
the syntax and -> rules : 1
the syntax and -> semantics : 1
syntax and parsing -> in : 1
and parsing in -> the : 1
parsing in the -> parser : 1
in the parser -> must : 1
the parser must -> be : 1
parser must be -> able : 1
must be able -> to : 3
be able to -> distinguish : 1
be able to -> use : 4
be able to -> evaluate : 1
be able to -> modify : 1
be able to -> free : 1
be able to -> compare : 1
be able to -> implement : 1
be able to -> push : 2
able to distinguish -> between : 1
to distinguish between -> names : 1
to distinguish between -> a : 2
to distinguish between -> the : 1
distinguish between names -> used : 1
between names used -> as : 1
names used as -> types : 1
used as types -> from : 1
as types from -> other : 1
types from other -> in : 1
from other in -> the : 1
other in the -> following : 1
in the following -> the : 8
in the following -> is : 2
in the following -> list : 1
in the following -> example : 2
in the following -> a : 3
in the following -> one : 1
in the following -> omitting : 1
in the following -> two : 2
in the following -> code : 1
in the following -> in : 1
in the following -> it : 1
in the following -> compiler : 1
in the following -> member : 4
in the following -> function : 1
in the following -> string : 1
the following the -> name : 2
the following the -> enumeration : 1
the following the -> is : 1
the following the -> pointer : 1
the following the -> end : 1
the following the -> logical : 2
the following the -> template : 1
the following the -> member : 1
the following the -> standard : 1
the following the -> macro : 1
following the name -> is : 1
following the name -> refers : 1
name is used -> as : 3
name is used -> to : 1
is used as -> a : 4
is used as -> the : 3
used as a -> and : 1
used as a -> generic : 2
used as a -> function : 2
used as a -> constant : 2
used as a -> single : 1
used as a -> template : 1
used as a -> base : 1
used as a -> virtual : 1
used as a -> random : 2
used as a -> unary : 1
used as a -> qualifier : 1
used as a -> type : 2
used as a -> mask : 1
used as a -> pointer : 1
as a and -> is : 1
as a and -> the : 2
a and is -> declared : 1
a and is -> a : 1
and is declared -> as : 1
and is declared -> in : 1
declared as a -> type : 1
declared as a -> pointer : 1
as a type -> in : 1
as a type -> as : 1
as a type -> specifier : 1
as a type -> it : 1
a type in -> the : 2
a type in -> this : 1
type in the -> class : 1
type in the -> preceding : 1
type in the -> form : 1
type in the -> same : 2
type in the -> sizeof : 1
type in the -> you : 1
type in the -> derived : 1
class but when -> the : 1
but when the -> compiler : 1
but when the -> template : 1
when the compiler -> first : 1
when the compiler -> searches : 2
when the compiler -> sees : 1
when the compiler -> looks : 1
the compiler first -> sees : 1
the compiler first -> searches : 1
the compiler first -> uses : 1
compiler first sees -> the : 1
first sees the -> name : 1
sees the name -> in : 1
the name in -> the : 1
name in the -> member : 1
name in the -> usual : 1
name in the -> namespaces : 1
name in the -> same : 1
name in the -> derived : 1
name in the -> class : 3
in the member -> function : 2
member function the -> only : 1
member function the -> usual : 1
member function the -> file : 3
member function the -> template : 8
function the only -> in : 1
the only in -> scope : 1
only in scope -> is : 1
in scope is -> the : 1
scope is the -> global : 1
scope is the -> accumulation : 1
is the global -> so : 1
is the global -> the : 1
the global so -> the : 1
the global so -> you : 2
global so the -> compiler : 1
the compiler parses -> the : 2
compiler parses the -> function : 1
compiler parses the -> not : 1
parses the function -> declaration : 1
the function declaration -> typedef : 1
the function declaration -> does : 1
function declaration typedef -> big : 1
declaration typedef big -> struct : 1
typedef big struct -> demo : 1
big struct demo -> void : 1
struct demo void -> error : 1
struct demo void -> void : 2
demo void error -> typedef : 1
void error typedef -> big : 1
error typedef big -> the : 1
typedef big the -> declaration : 1
big the declaration -> were : 1
the declaration were -> a : 1
declaration were a -> the : 1
were a the -> declaration : 1
a the declaration -> of : 1
a the declaration -> is : 1
declaration of would -> be : 1
of would be -> parsed : 1
would be parsed -> as : 1
be parsed as -> and : 1
parsed as and -> name : 1
as and name -> lookup : 1
and name lookup -> would : 1
name lookup would -> find : 1
lookup would find -> the : 1
would find the -> nested : 1
find the nested -> type : 1
the nested type -> for : 1
nested type for -> the : 1
type for the -> parameter : 1
type for the -> following : 1
type for the -> items : 2
type for the -> function : 1
for the parameter -> type : 1
the parameter type -> of : 1
the parameter type -> the : 1
parameter type of -> a : 1
of a simpler -> solution : 1
a simpler solution -> is : 1
simpler solution is -> to : 1
solution is to -> move : 1
solution is to -> get : 1
solution is to -> increment : 1
is to move -> the : 1
to move the -> to : 1
to move the -> iterator : 2
move the to -> the : 1
the to the -> start : 1
the to the -> the : 1
the to the -> next : 1
to the start -> of : 17
start of the -> class : 1
start of the -> range : 2
start of the -> definition : 1
start of the -> template : 1
start of the -> output : 1
start of the -> matching : 1
start of the -> new : 1
start of the -> subsequence : 2
start of the -> significand : 1
start of the -> positive : 1
start of the -> newly : 2
start of the -> third : 3
start of the -> it : 1
start of the -> when : 1
start of the -> multibyte : 1
start of the -> wide : 1
start of the -> so : 1
start of the -> formatted : 2
start of the -> a : 1
start of the -> characters : 1
start of the -> if : 3
start of the -> the : 1
start of the -> is : 1
of the class -> which : 1
of the class -> granting : 1
of the class -> the : 4
of the class -> is : 2
of the class -> type : 1
of the class -> whose : 1
of the class -> and : 2
of the class -> at : 1
of the class -> or : 2
of the class -> see : 1
of the class -> as : 1
of the class -> template : 2
of the class -> that : 2
of the class -> it : 3
of the class -> in : 1
the class which -> is : 1
the class which -> affects : 1
the class which -> has : 1
the class which -> stores : 1
class which is -> the : 1
which is the -> style : 1
which is the -> can : 1
which is the -> number : 4
which is the -> subject : 1
which is the -> same : 1
which is the -> integral : 1
which is the -> class : 1
which is the -> when : 1
which is the -> main : 1
which is the -> return : 10
which is the -> type : 2
which is the -> smallest : 7
which is the -> highest : 3
which is the -> real : 1
which is the -> magnitude : 1
which is the -> pointer : 1
which is the -> address : 1
which is the -> locale : 1
which is the -> format : 1
which is the -> comparator : 4
which is the -> smaller : 1
is the style -> used : 1
the style used -> throughout : 1
style used throughout -> this : 1
throughout this a -> or : 1
this a or -> namespace : 1
a or namespace -> contains : 1
or namespace contains -> a : 1
namespace contains a -> directive : 1
contains a directive -> later : 1
a directive later -> in : 1
directive later in -> this : 1
this the used -> class : 1
the used class -> or : 1
used class or -> namespace : 1
class or namespace -> is : 1
class or namespace -> the : 2
class or namespace -> or : 1
class or namespace -> name : 1
or namespace is -> also : 1
namespace is also -> declaration : 1
is also declaration -> does : 1
also declaration does -> not : 1
declaration does not -> add : 1
declaration does not -> define : 1
declaration does not -> have : 1
does not add -> its : 1
not add its -> name : 1
add its name -> to : 1
its name to -> the : 1
name to the -> class : 1
to the class -> the : 2
to the class -> its : 1
to the class -> so : 1
to the class -> for : 2
to the class -> if : 1
to the class -> graphics : 1
to the class -> and : 2
the class the -> rules : 1
the class the -> lookup : 1
the class the -> type : 1
the class the -> class : 2
the class the -> initializer : 1
the class the -> definition : 1
the class the -> function : 1
the class the -> template : 2
the class the -> header : 1
the class the -> string : 1
the class the -> and : 1
class the rules -> for : 1
the rules for -> name : 1
the rules for -> writing : 1
the rules for -> automatic : 1
the rules for -> integral : 1
the rules for -> any : 1
the rules for -> function : 2
the rules for -> overloading : 1
the rules for -> compiler : 1
the rules for -> locating : 1
the rules for -> a : 1
rules for name -> lookup : 1
for name lookup -> are : 1
name lookup are -> slightly : 1
lookup are slightly -> different : 1
are slightly different -> than : 1
slightly different than -> they : 1
different than they -> are : 1
than they are -> for : 1
they are for -> a : 1
are for a -> member : 1
are for a -> discussion : 1
for a member -> if : 2
a member if -> a : 1
a member if -> the : 1
a member if -> you : 1
member if a -> function : 1
member if a -> match : 1
if a function -> is : 1
if a function -> takes : 2
if a function -> requires : 1
if a function -> that : 1
if a function -> has : 1
if a function -> the : 1
a function is -> defined : 2
a function is -> an : 2
a function is -> in : 1
a function is -> kept : 1
a function is -> you : 1
a function is -> so : 1
a function is -> a : 1
a function is -> declared : 1
a function is -> dependent : 1
a function is -> the : 1
a function is -> what : 1
a function is -> out : 1
function is defined -> within : 1
function is defined -> outside : 1
function is defined -> might : 1
is defined within -> the : 1
is defined within -> a : 1
defined within the -> body : 1
defined within the -> class : 1
within the body -> of : 2
the class granting -> the : 1
the class granting -> if : 1
the class granting -> note : 1
the class granting -> friendship : 2
class granting the -> name : 1
granting the name -> is : 1
name is looked -> up : 4
name is looked -> member : 1
the class just -> as : 1
class just as -> it : 1
just as it -> would : 1
as it would -> be : 3
it would be -> for : 1
it would be -> to : 1
it would be -> the : 1
it would be -> if : 2
would be for -> a : 1
be for a -> member : 1
member if the -> function : 1
member if the -> string : 1
if the function -> is : 7
if the function -> modifies : 1
if the function -> has : 1
if the function -> body : 1
if the function -> actually : 1
if the function -> throws : 1
if the function -> declaration : 1
if the function -> does : 1
if the function -> call : 1
if the function -> name : 1
if the function -> returns : 3
if the function -> it : 2
is defined outside -> the : 1
is defined outside -> of : 2
defined outside the -> the : 1
outside the the -> class : 1
outside the the -> lifetime : 1
the the class -> is : 1
the the class -> template : 2
the the class -> declares : 1
class is not -> so : 1
class is not -> searched : 2
class is not -> required : 2
is not so -> the : 3
is not so -> its : 1
is not so -> you : 1
is not so -> equivalent : 2
not so the -> rules : 1
not so the -> header : 1
not so the -> errors : 1
so the rules -> are : 1
the rules are -> the : 1
the rules are -> not : 1
the rules are -> under : 1
rules are the -> same : 1
are the same -> as : 1
are the same -> numeric : 1
are the same -> for : 2
are the same -> size : 1
are the same -> is : 1
are the same -> one : 1
are the same -> the : 1
the same as -> for : 3
the same as -> declaring : 1
the same as -> the : 17
the same as -> a : 3
the same as -> or : 2
the same as -> an : 1
the same as -> but : 1
the same as -> expression : 1
the same as -> if : 2
the same as -> they : 1
the same as -> calling : 3
the same as -> that : 4
the same as -> ordinary : 1
the same as -> what : 1
the same as -> any : 1
the same as -> either : 1
the same as -> except : 1
the same as -> in : 1
the same as -> it : 2
the same as -> solid : 1
the same as -> and : 2
the same as -> every : 2
the same as -> is : 2
the same as -> plain : 1
same as for -> an : 1
same as for -> it : 1
same as for -> all : 1
as for an -> ordinary : 1
for an ordinary -> up : 1
an ordinary up -> names : 1
ordinary up names -> in : 1
up names in -> a : 2
up names in -> alternate : 1
names in a -> friend : 2
in a friend -> shows : 1
in a friend -> foo : 1
in a friend -> you : 1
in a friend -> class : 1
a friend shows -> how : 1
friend shows how -> the : 1
shows how the -> two : 1
shows how the -> results : 1
shows how the -> loop : 1
shows how the -> compiler : 1
shows how the -> template : 1
shows how the -> specializes : 1
shows how the -> macro : 2
shows how the -> use : 1
how the two -> different : 1
the two different -> lookup : 1
two different lookup -> rules : 1
different lookup rules -> can : 1
lookup rules can -> cause : 1
rules can cause -> up : 1
can cause up -> names : 1
cause up names -> in : 1
a friend foo -> friend : 1
friend foo friend -> void : 1
foo friend void -> refers : 1
friend void refers -> to : 1
void refers to -> friend : 1
refers to friend -> void : 1
to friend void -> static : 1
friend void static -> int : 1
void static int -> int : 1
static int int -> void : 1
static int int -> return : 1
int int void -> y : 1
int int void -> int : 1
int int void -> const : 1
int void y -> not : 1
void y not -> in : 1
y not in -> scope : 1
not in scope -> the : 1
in scope the -> friend : 1
scope the friend -> is : 1
the friend is -> a : 4
friend is a -> member : 1
friend is a -> all : 1
friend is a -> template : 2
is a member -> the : 1
is a member -> of : 1
is a member -> function : 2
a member the -> function : 2
a member the -> compiler : 1
a member the -> following : 2
a member the -> usual : 1
a member the -> object : 1
member the function -> and : 1
member the function -> name : 1
member the function -> is : 1
member the function -> template : 1
member the function -> object : 2
member the function -> returns : 1
the function and -> other : 1
the function and -> pointer : 1
the function and -> in : 1
the function and -> is : 2
the function and -> the : 3
the function and -> possibly : 1
the function and -> you : 1
the function and -> class : 1
the function and -> function : 1
the function and -> what : 1
function and other -> names : 1
and other names -> in : 1
other names in -> its : 1
names in its -> declaration : 1
in its declaration -> are : 1
its declaration are -> looked : 1
declaration are looked -> up : 1
class granting if -> not : 1
granting if not -> in : 1
if not in -> the : 1
the class that -> contains : 2
the class that -> defines : 1
the class that -> is : 1
the class that -> overrides : 1
the class that -> inherits : 1
the class that -> declares : 9
class that contains -> the : 2
contains the friend -> friend : 1
contains the friend -> a : 1
the friend friend -> member : 1
friend friend member -> friend : 1
friend member friend -> member : 1
member friend member -> test : 1
friend member test -> typedef : 1
member test typedef -> int : 1
test typedef int -> typedef : 1
typedef int typedef -> float : 1
typedef int typedef -> typedef : 1
typedef int typedef -> streamoff : 1
int typedef float -> void : 1
typedef float void -> void : 1
float void void -> class : 1
void void class -> other : 1
void void class -> derived : 2
void void class -> num : 1
void void class -> demo : 1
void void class -> template : 10
void class other -> typedef : 1
class other typedef -> char : 1
other typedef char -> friend : 1
typedef char friend -> void : 1
char friend void -> look : 1
friend void look -> up : 2
void look up -> f : 2
look up f -> and : 2
up f and -> in : 2
f and in -> friend : 1
f and in -> test : 1
and in friend -> void : 1
in friend void -> look : 1
and in test -> before : 1
in test before -> looking : 1
test before looking -> it : 1
before looking it -> up : 1
looking it up -> in : 1
it up in -> the : 1
in the definition -> of : 3
in the definition -> is : 1
in the definition -> int : 1
the definition of -> a : 10
the definition of -> can : 1
the definition of -> the : 4
the definition of -> and : 1
definition of a -> class : 4
definition of a -> reference : 1
definition of a -> pod : 1
definition of a -> friend : 1
definition of a -> member : 1
definition of a -> simple : 1
definition of a -> is : 2
definition of a -> for : 1
of a class -> member : 1
of a class -> shows : 2
of a class -> node : 1
of a class -> or : 1
of a class -> type : 1
of a class -> virtual : 1
of a class -> is : 2
of a class -> base : 1
of a class -> shares : 1
of a class -> template : 7
of a class -> default : 1
of a class -> the : 3
of a class -> declare : 1
of a class -> which : 1
of a class -> this : 1
of a class -> only : 1
of a class -> a : 1
of a class -> separately : 1
of a class -> statement : 1
of a class -> with : 1
of a class -> public : 1
of a class -> class : 1
a class member -> or : 1
a class member -> a : 1
a class member -> that : 1
class member or -> static : 1
member or static -> outside : 1
or static outside -> of : 1
static outside of -> the : 1
outside of the -> class : 1
outside of the -> namespace : 1
class the lookup -> searches : 1
the lookup searches -> the : 1
lookup searches the -> class : 1
searches the class -> and : 2
the class and -> ancestor : 2
the class and -> its : 2
the class and -> friends : 1
the class and -> does : 1
the class and -> derived : 1
the class and -> so : 1
the class and -> change : 1
the class and -> the : 1
the class and -> for : 1
the class and -> several : 1
class and ancestor -> but : 1
class and ancestor -> classes : 1
and ancestor but -> only : 1
ancestor but only -> after : 1
but only after -> the : 1
only after the -> class : 1
after the class -> name : 1
the class name -> appears : 1
the class name -> itself : 1
the class name -> is : 4
the class name -> in : 1
the class name -> assumes : 2
the class name -> that : 1
the class name -> or : 1
the class name -> serves : 1
class name appears -> in : 1
name appears in -> the : 1
appears in the -> the : 2
appears in the -> inheritance : 1
the the type -> specifier : 1
the the type -> of : 2
the the type -> must : 1
the the type -> for : 1
the type specifier -> return : 1
the type specifier -> represents : 2
type specifier return -> type : 1
specifier return type -> or : 1
return type or -> the : 2
return type or -> parameter : 1
type or the -> type : 2
of a static -> data : 2
of a static -> lvalue : 1
of a static -> see : 1
of a static -> member : 1
a static data -> is : 1
a static data -> the : 1
a static data -> with : 1
a static data -> member : 4
static data is -> not : 1
data is not -> looked : 1
is not looked -> up : 2
not looked up -> in : 1
not looked up -> when : 1
class declaration unless -> the : 1
declaration unless the -> type : 1
unless the type -> name : 1
the type name -> is : 1
the type name -> taking : 1
the type name -> in : 1
type name is -> explicitly : 1
type name is -> an : 1
name is explicitly -> and : 1
is explicitly and -> type : 1
explicitly and type -> specifiers : 1
and type specifiers -> are : 1
type specifiers are -> covered : 1
specifiers are covered -> later : 1
are covered later -> in : 1
covered later in -> this : 2
in this members -> outside : 1
this members outside -> of : 2
members outside of -> a : 2
outside of a -> class : 2
outside of a -> loop : 2
outside of a -> that : 1
a class shows -> the : 1
a class shows -> valid : 1
a class shows -> some : 1
a class shows -> specializations : 1
class shows the -> consequences : 1
shows the consequences -> of : 1
the consequences of -> this : 1
consequences of this -> members : 1
of this members -> outside : 1
a class node -> enum : 1
class node enum -> color : 1
node enum color -> black : 1
enum color black -> color : 1
enum color black -> enum : 1
enum color black -> the : 1
color black color -> color : 1
color black color -> declares : 1
black color color -> static : 1
color color static -> color : 1
color static color -> must : 1
static color must -> qualify : 1
color must qualify -> and : 1
must qualify and -> but : 1
qualify and but -> initializer : 1
and but initializer -> is : 1
but initializer is -> in : 1
initializer is in -> the : 1
scope of so -> it : 1
of so it -> need : 1
of so it -> can : 4
so it need -> to : 1
it need to -> be : 1
need to be -> qualified : 1
need to be -> elaborated : 1
need to be -> instantiated : 1
need to be -> approach : 1
need to be -> concerned : 1
need to be -> aware : 1
need to be -> when : 1
to be qualified -> return : 1
be qualified return -> type : 1
qualified return type -> must : 1
return type must -> be : 1
type must be -> but : 1
type must be -> a : 3
type must be -> arithmetic : 1
type must be -> an : 1
type must be -> convertible : 1
type must be -> one : 14
type must be -> implicitly : 1
must be but -> parameter : 1
must be but -> note : 2
be but parameter -> type : 1
but parameter type -> does : 1
parameter type does -> not : 1
type does not -> need : 2
type does not -> bring : 1
type does not -> have : 2
type does not -> match : 2
type does not -> do : 1
does not need -> to : 8
does not need -> any : 1
does not need -> a : 1
not need to -> return : 1
not need to -> know : 1
not need to -> publish : 1
not need to -> implement : 2
not need to -> be : 4
not need to -> deal : 1
not need to -> write : 1
not need to -> provide : 1
not need to -> use : 2
not need to -> you : 1
not need to -> flush : 1
need to return -> a : 1
to return a -> template : 1
to return a -> null : 1
to return a -> pointer : 1
to return a -> value : 1
to return a -> copy : 1
return a template -> the : 1
a template the -> lookup : 1
a template the -> conversion : 1
a template the -> compiler : 1
template the lookup -> rules : 1
the lookup rules -> for : 1
lookup rules for -> unqualified : 1
rules for unqualified -> names : 1
for unqualified names -> have : 1
unqualified names have -> an : 1
names have an -> additional : 1
have an additional -> wrinkle : 1
an additional wrinkle -> that : 1
additional wrinkle that -> depends : 1
wrinkle that depends -> on : 1
that depends on -> the : 3
that depends on -> a : 2
that depends on -> template : 1
that depends on -> those : 1
depends on the -> template : 1
depends on the -> types : 2
depends on the -> representation : 1
depends on the -> and : 2
depends on the -> order : 1
depends on the -> layout : 1
depends on the -> or : 2
depends on the -> characteristics : 1
depends on the -> an : 2
depends on the -> container : 1
depends on the -> a : 1
depends on the -> execution : 1
depends on the -> locale : 1
depends on the -> c : 1
depends on the -> type : 2
depends on the -> flags : 2
on the template -> parameters : 3
on the template -> you : 1
on the template -> the : 2
on the template -> parameter : 1
the template parameters -> and : 2
the template parameters -> enclosed : 1
the template parameters -> even : 1
the template parameters -> are : 1
the template parameters -> of : 1
the template parameters -> might : 1
the template parameters -> tell : 2
the template parameters -> when : 1
template parameters and -> see : 1
template parameters and -> those : 1
parameters and see -> for : 1
and see for -> name : 1
and see for -> information : 2
see for name -> name : 1
for name name -> name : 1
name name name -> lookup : 1
name name lookup -> is : 1
name lookup is -> an : 1
name lookup is -> also : 1
name lookup is -> the : 1
lookup is an -> additional : 1
is an additional -> rule : 1
an additional rule -> for : 1
additional rule for -> looking : 1
rule for looking -> up : 1
looking up unqualified -> function : 1
looking up unqualified -> math : 1
up unqualified function -> the : 1
unqualified function the -> rule : 1
function the rule -> specifies : 1
the rule specifies -> additional : 1
rule specifies additional -> classes : 1
specifies additional classes -> and : 1
additional classes and -> namespaces : 1
and namespaces to -> search : 1
namespaces to search -> based : 1
namespaces to search -> right : 1
to search based -> on : 1
search based on -> the : 1
based on the -> types : 1
based on the -> static : 1
based on the -> type : 1
on the types -> of : 2
on the types -> used : 1
on the types -> format : 1
the types of -> the : 6
the types of -> all : 1
the types of -> its : 1
types of the -> function : 2
types of the -> second : 1
types of the -> arguments : 1
types of the -> actual : 1
types of the -> it : 1
types of the -> same : 1
types of the -> macro : 1
function name lookup -> is : 1
lookup is also -> known : 1
is also known -> as : 3
also known as -> named : 1
also known as -> formatted : 1
also known as -> from : 1
also known as -> to : 1
known as named -> after : 1
as named after -> the : 1
named after the -> creator : 1
after the creator -> of : 1
the creator of -> this : 1
creator of this -> lookup : 1
of this lookup -> the : 1
this lookup the -> short : 1
lookup the short -> version : 1
the short version -> of : 1
short version of -> the : 1
version of the -> rule : 1
version of the -> koenig : 1
version of the -> function : 1
version of the -> algorithm : 1
version of the -> c : 9
version of the -> standard : 1
version of the -> you : 2
of the rule -> is : 1
the rule is -> that : 1
that the compiler -> looks : 1
that the compiler -> first : 1
that the compiler -> has : 1
that the compiler -> applies : 1
that the compiler -> cannot : 1
that the compiler -> initializes : 1
that the compiler -> knows : 2
that the compiler -> you : 1
that the compiler -> with : 1
that the compiler -> adds : 1
that the compiler -> can : 1
that the compiler -> is : 1
looks up a -> function : 1
looks up a -> given : 1
up a function -> name : 1
a function name -> in : 2
a function name -> and : 1
function name in -> the : 2
function name in -> this : 1
in the usual -> and : 2
in the usual -> for : 1
the usual and -> in : 1
the usual and -> the : 1
the usual and -> you : 1
usual and in -> the : 1
in the namespaces -> that : 1
in the namespaces -> can : 1
contain the types -> and : 1
the types and -> of : 1
the types and -> functions : 1
the types and -> from : 1
types and of -> the : 1
and of the -> function : 1
and of the -> boost : 1
the function slightly -> longer : 1
function slightly longer -> version : 1
slightly longer version -> of : 1
longer version of -> the : 1
of the koenig -> lookup : 1
the koenig lookup -> rule : 1
koenig lookup rule -> is : 1
lookup rule is -> that : 1
compiler first searches -> all : 1
first searches all -> the : 1
searches all the -> usual : 1
all the usual -> as : 1
all the usual -> operations : 1
the usual as -> described : 1
usual as described -> earlier : 1
as described earlier -> in : 3
described earlier in -> this : 3
described earlier in -> name : 1
in this if -> it : 1
in this if -> you : 1
this if it -> does : 1
this if it -> is : 1
if it does -> not : 1
it does not -> find : 1
it does not -> know : 1
it does not -> have : 2
it does not -> require : 1
it does not -> pragmas : 1
it does not -> create : 1
it does not -> initialize : 1
it does not -> automatically : 1
it does not -> need : 1
does not find -> a : 1
not find a -> it : 1
find a it -> then : 1
a it then -> searches : 1
it then searches -> an : 1
it then searches -> for : 1
then searches an -> additional : 1
searches an additional -> list : 1
an additional list -> of : 1
additional list of -> classes : 1
list of classes -> and : 1
of classes and -> the : 1
classes and the -> additional : 1
classes and the -> forward : 1
and the additional -> list : 1
the additional list -> depends : 1
additional list depends -> on : 1
list depends on -> the : 1
the types used -> for : 1
the types used -> as : 1
types used for -> all : 1
used for all -> of : 1
used for all -> header : 1
for all of -> the : 2
of the argument -> a : 1
of the argument -> can : 1
of the argument -> is : 1
of the argument -> containing : 2
of the argument -> types : 1
of the argument -> to : 2
of the argument -> are : 1
the argument a -> class : 1
argument a class -> the : 1
class the compiler -> searches : 1
class the compiler -> considers : 1
class the compiler -> looks : 1
class the compiler -> cannot : 1
the compiler searches -> the : 3
the compiler searches -> its : 1
the compiler searches -> namespaces : 1
the compiler searches -> for : 1
compiler searches the -> class : 1
compiler searches the -> classes : 1
compiler searches the -> declaration : 1
class and its -> plus : 2
class and its -> protected : 1
and its plus -> all : 2
its plus all -> ancestor : 2
plus all ancestor -> classes : 2
all ancestor classes -> and : 2
ancestor classes and -> their : 2
classes and their -> a : 2
classes and their -> see : 1
and their a -> pointer : 1
and their a -> function : 1
and their a -> union : 1
their a pointer -> to : 1
pointer to a -> data : 3
pointer to a -> wide : 1
pointer to a -> the : 2
pointer to a -> function : 5
pointer to a -> nonstatic : 1
pointer to a -> an : 1
pointer to a -> legacy : 1
pointer to a -> member : 14
pointer to a -> different : 3
pointer to a -> but : 1
pointer to a -> complex : 1
pointer to a -> class : 4
pointer to a -> scalar : 1
pointer to a -> it : 1
pointer to a -> pointer : 2
pointer to a -> string : 1
pointer to a -> array : 1
pointer to a -> which : 2
pointer to a -> character : 4
pointer to a -> static : 1
pointer to a -> derived : 1
pointer to a -> binary : 1
pointer to a -> in : 2
pointer to a -> unary : 1
pointer to a -> value : 1
pointer to a -> hidden : 1
pointer to a -> pod : 1
to a data -> the : 3
to a data -> member : 5
a data the -> compiler : 1
a data the -> result : 1
a data the -> type : 1
data the compiler -> searches : 1
compiler searches its -> class : 1
searches its class -> and : 2
its class and -> its : 1
its class and -> all : 1
their a function -> pointer : 1
a function pointer -> or : 9
a function pointer -> with : 1
a function pointer -> type : 3
a function pointer -> an : 1
a function pointer -> of : 1
a function pointer -> to : 1
a function pointer -> a : 1
a function pointer -> and : 1
a function pointer -> named : 1
a function pointer -> for : 1
function pointer or -> the : 4
function pointer or -> functor : 7
function pointer or -> function : 2
function pointer or -> which : 2
pointer or the -> compiler : 1
pointer or the -> documentation : 1
pointer or the -> type : 2
or the compiler -> searches : 1
searches the classes -> and : 1
the classes and -> namespaces : 1
the classes and -> functions : 1
and namespaces associated -> with : 1
namespaces associated with -> the : 1
associated with the -> return : 1
associated with the -> c : 9
associated with the -> is : 1
associated with the -> key : 1
with the return -> type : 1
with the return -> value : 2
the return type -> and : 3
the return type -> of : 4
the return type -> is : 7
the return type -> cannot : 1
the return type -> used : 1
the return type -> classes : 1
the return type -> in : 1
the return type -> or : 2
the return type -> for : 1
return type and -> all : 2
return type and -> returned : 1
return type and -> parameter : 2
type and all -> parameter : 2
and all parameter -> for : 1
and all parameter -> types : 1
all parameter for -> a : 1
parameter for a -> pointer : 1
parameter for a -> base : 1
for a pointer -> or : 1
for a pointer -> to : 7
for a pointer -> is : 1
a pointer or -> reference : 13
a pointer or -> an : 1
a pointer or -> another : 1
a pointer or -> to : 1
pointer or reference -> to : 14
or reference to -> a : 8
or reference to -> an : 3
or reference to -> cast : 1
or reference to -> the : 2
reference to a -> member : 1
reference to a -> for : 1
reference to a -> class : 2
reference to a -> large : 1
reference to a -> as : 1
reference to a -> derived : 4
reference to a -> base : 3
reference to a -> object : 1
reference to a -> long : 1
reference to a -> valid : 2
reference to a -> that : 1
to a member -> the : 1
to a member -> can : 1
to a member -> has : 1
to a member -> function : 9
to a member -> target : 1
to a member -> of : 6
to a member -> is : 1
to a member -> class : 1
member the compiler -> also : 1
the compiler also -> searches : 1
the compiler also -> tries : 1
compiler also searches -> its : 1
also searches its -> class : 1
class and all -> ancestor : 1
class and all -> of : 2
and all ancestor -> and : 1
all ancestor and -> their : 1
ancestor and their -> a : 1
their a union -> or : 1
a union or -> enumerated : 1
union or enumerated -> the : 1
or enumerated the -> namespace : 1
or enumerated the -> default : 1
or enumerated the -> member : 1
or enumerated the -> usual : 1
or enumerated the -> expression : 1
or enumerated the -> is : 1
or enumerated the -> value : 1
enumerated the namespace -> that : 1
namespace that contains -> the : 2
namespace that contains -> both : 1
contains the declaration -> is : 1
contains the declaration -> class : 1
the declaration is -> if : 1
the declaration is -> almost : 1
the declaration is -> the : 1
the declaration is -> in : 2
the declaration is -> for : 1
declaration is if -> the : 1
is if the -> type : 1
is if the -> result : 2
is if the -> corresponding : 3
is if the -> function : 3
is if the -> template : 1
is if the -> program : 1
is if the -> is : 1
is if the -> order : 2
is if the -> second : 1
is if the -> next : 1
is if the -> previous : 1
is if the -> first : 2
is if the -> locale : 1
is if the -> pushback : 1
is if the -> state : 1
is if the -> limit : 1
is if the -> argument : 1
is if the -> style : 1
is if the -> same : 1
is if the -> object : 1
is if the -> flag : 2
is if the -> allows : 1
is if the -> stream : 1
if the type -> is : 7
if the type -> can : 1
if the type -> of : 2
if the type -> contains : 1
if the type -> that : 1
type is a -> class : 2
type is a -> unique : 1
type is a -> pointer : 5
type is a -> and : 1
type is a -> fundamental : 2
type is a -> base : 1
type is a -> reference : 3
type is a -> the : 2
type is a -> pod : 1
type is a -> nested : 1
type is a -> signed : 1
type is a -> scalar : 2
type is a -> template : 1
type is a -> proxy : 1
type is a -> integer : 2
is a class -> its : 1
is a class -> the : 1
is a class -> is : 1
is a class -> or : 2
is a class -> template : 2
is a class -> member : 1
a class its -> class : 1
class its class -> is : 1
its class is -> name : 1
class is name -> shows : 1
is name shows -> a : 1
name shows a -> typical : 1
shows a typical -> case : 1
shows a typical -> use : 3
a typical case -> in : 1
typical case in -> which : 1
case in which -> name : 1
case in which -> you : 1
case in which -> is : 1
in which name -> lookup : 1
which name lookup -> is : 1
lookup is the -> function : 1
is the function -> is : 2
is the function -> in : 1
is the function -> of : 1
is the function -> that : 1
is the function -> to : 1
is the function -> sets : 2
is the function -> decrements : 1
is the function -> handles : 1
in the namespace -> in : 1
in the namespace -> tells : 1
in the namespace -> but : 2
in the namespace -> by : 1
the namespace in -> the : 1
the namespace in -> other : 1
namespace in the -> it : 1
in the it -> is : 4
in the it -> supports : 1
in the it -> also : 1
the it is -> not : 3
the it is -> handled : 1
the it is -> never : 1
the it is -> an : 6
the it is -> safe : 1
the it is -> equivalent : 1
the it is -> if : 1
the it is -> by : 1
the it is -> managed : 1
the it is -> using : 1
the it is -> added : 1
the it is -> called : 1
the it is -> up : 1
not a member -> function : 1
not a member -> the : 1
not a member -> container : 1
member function of -> and : 1
member function of -> a : 8
member function of -> the : 5
member function of -> class : 1
member function of -> or : 1
member function of -> an : 1
member function of -> in : 2
function of and -> the : 1
of and the -> only : 1
of and the -> other : 1
of and the -> filename : 1
of and the -> permitted : 1
of and the -> in : 1
of and the -> return : 2
of and the -> string : 1
of and the -> replacement : 1
of and the -> and : 1
and the only -> way : 1
and the only -> things : 1
the only way -> the : 1
the only way -> these : 1
the only way -> to : 4
only way the -> compiler : 1
way the compiler -> can : 1
compiler can find -> the : 1
compiler can find -> a : 1
find the operator -> is : 1
the operator is -> to : 1
the operator is -> found : 1
the operator is -> an : 1
the operator is -> used : 4
the operator is -> most : 1
the operator is -> evaluated : 1
the operator is -> interchangeable : 1
the operator is -> flags : 1
operator is to -> search : 1
is to search -> the : 1
to search the -> the : 1
to search the -> but : 1
to search the -> namespace : 1
search the the -> fact : 1
the the fact -> that : 1
the fact that -> its : 1
the fact that -> returns : 1
fact that its -> arguments : 1
that its arguments -> are : 1
its arguments are -> in : 1
its arguments are -> an : 1
arguments are in -> the : 1
are in the -> namespace : 1
are in the -> the : 1
are in the -> same : 3
are in the -> and : 1
are in the -> compiler : 1
are in the -> of : 1
are in the -> global : 1
are in the -> write : 1
are in the -> complement : 2
are in the -> string : 2
are in the -> you : 4
the namespace tells -> the : 1
namespace tells the -> compiler : 1
compiler to look -> name : 1
compiler to look -> only : 1
to look name -> int : 1
look name int -> way : 1
name int way -> to : 1
int way to -> look : 1
way to look -> at : 1
to look at -> lookup : 1
look at lookup -> is : 1
at lookup is -> to : 1
lookup is to -> consider : 1
is to consider -> a : 1
to consider a -> simple : 1
consider a simple -> class : 1
a simple class -> for : 1
a simple class -> that : 1
a simple class -> rational : 1
simple class for -> with : 1
class for with -> rational : 1
for with rational -> to : 1
with rational to -> support : 1
rational to support -> the : 1
to support the -> customary : 1
support the customary -> and : 1
the customary and -> usual : 1
customary and usual -> arithmetic : 1
and usual arithmetic -> you : 1
usual arithmetic you -> might : 1
arithmetic you might -> choose : 1
you might choose -> to : 1
might choose to -> declare : 1
choose to declare -> them : 1
to declare them -> as : 1
declare them as -> member : 1
them as member -> numeric : 1
as member numeric -> class : 1
member numeric class -> rational : 1
numeric class rational -> rational : 2
numeric class rational -> typename : 1
class rational rational -> rational : 1
class rational rational -> const : 1
rational rational rational -> such : 1
rational rational such -> as : 1
rational such as -> compile : 1
such as compile -> successfully : 1
as compile successfully -> because : 1
compile successfully because -> they : 1
successfully because they -> are : 1
because they are -> equivalent : 1
because they are -> close : 1
because they are -> more : 1
they are equivalent -> to : 1
are equivalent to -> member : 1
are equivalent to -> the : 2
are equivalent to -> or : 1
are equivalent to -> and : 1
are equivalent to -> this : 2
are equivalent to -> complexity : 1
equivalent to member -> function : 1
to member function -> calls : 1
member function calls -> such : 1
function calls such -> as : 1
calls such as -> so : 1
such as so -> the : 1
as so the -> operator : 1
so the operator -> is : 1
operator is found -> as : 1
is found as -> a : 1
found as a -> member : 1
as a member -> of : 1
as a member -> a : 1
as a member -> so : 2
as a member -> to : 1
as a member -> function : 2
as a member -> but : 1
a member of -> is : 1
a member of -> an : 2
a member of -> a : 11
a member of -> class : 1
a member of -> that : 1
a member of -> the : 1
member of is -> an : 1
of is an -> instance : 1
is an instance -> of : 7
instance of but -> does : 1
of but does -> not : 1
but does not -> work : 1
but does not -> refer : 1
but does not -> have : 1
but does not -> support : 1
but does not -> free : 1
does not work -> because : 1
not work because -> an : 1
work because an -> integer : 1
because an integer -> cannot : 1
an integer cannot -> have : 1
integer cannot have -> a : 1
cannot have a -> member : 1
cannot have a -> static : 1
cannot have a -> return : 1
cannot have a -> virtual : 1
have a member -> you : 1
have a member -> function : 2
have a member -> with : 1
a member you -> must : 1
a member you -> can : 1
member you must -> declare : 1
member you must -> use : 1
you must declare -> an : 1
you must declare -> the : 1
must declare an -> operator : 1
declare an operator -> at : 1
an operator at -> the : 1
operator at the -> namespace : 1
at the namespace -> numeric : 1
at the namespace -> functions : 1
the namespace numeric -> class : 1
the namespace numeric -> rational : 1
namespace numeric class -> rational : 2
rational rational const -> order : 1
rational const order -> to : 1
const order to -> compile : 1
order to compile -> the : 1
to compile the -> expression : 1
compile the expression -> the : 1
expression the compiler -> needs : 1
compiler needs to -> find : 1
compiler needs to -> use : 1
needs to find -> in : 1
to find in -> the : 1
find in the -> without : 1
in the without -> a : 1
the without a -> the : 1
without a the -> compiler : 1
a the compiler -> has : 2
a the compiler -> converts : 1
a the compiler -> deduces : 1
a the compiler -> does : 2
a the compiler -> creates : 1
a the compiler -> gives : 2
a the compiler -> uses : 2
a the compiler -> instantiates : 1
a the compiler -> distinguishes : 1
the compiler has -> no : 2
the compiler has -> seen : 2
the compiler has -> found : 1
the compiler has -> assembled : 1
compiler has no -> way : 1
compiler has no -> preference : 1
has no way -> of : 1
no way of -> knowing : 2
way of knowing -> it : 1
way of knowing -> how : 1
way of knowing -> the : 1
of knowing it -> needs : 1
knowing it needs -> to : 1
it needs to -> search : 1
needs to search -> the : 1
search the but -> the : 1
the but the -> compiler : 1
the but the -> item : 1
the but the -> element : 1
but the compiler -> knows : 1
but the compiler -> is : 2
compiler knows that -> the : 2
compiler knows that -> has : 1
knows that the -> type : 1
knows that the -> static : 1
that the type -> of : 1
that the type -> might : 1
that the type -> is : 2
type of the -> second : 1
type of the -> for : 1
type of the -> if : 3
type of the -> return : 1
type of the -> type : 2
type of the -> result : 8
type of the -> behavior : 2
type of the -> left : 2
type of the -> expression : 1
type of the -> third : 1
type of the -> the : 2
type of the -> one : 1
type of the -> right : 1
type of the -> in : 2
type of the -> exception : 3
type of the -> or : 1
type of the -> inheritance : 1
type of the -> container : 1
type of the -> object : 2
type of the -> macros : 1
type of the -> flag : 1
type of the -> maximum : 1
type of the -> argument : 4
type of the -> member : 6
type of the -> you : 1
of the second -> argument : 1
of the second -> or : 1
of the second -> and : 1
of the second -> the : 2
of the second -> character : 1
the second argument -> is : 1
the second argument -> to : 5
the second argument -> of : 1
second argument is -> declared : 1
argument is declared -> in : 1
declared in lookup -> allows : 1
in lookup allows -> for : 1
lookup allows for -> the : 1
allows for the -> expected : 1
for the expected -> use : 1
the expected use -> of : 1
expected use of -> overloaded : 1
use of overloaded -> name : 1
of overloaded name -> has : 1
overloaded name has -> which : 1
name has which -> determines : 1
has which determines -> how : 1
which determines how -> the : 1
determines how the -> compiler : 2
how the compiler -> and : 1
how the compiler -> parses : 1
how the compiler -> creates : 1
how the compiler -> ignores : 1
the compiler and -> linker : 3
the compiler and -> library : 1
the compiler and -> possibly : 1
compiler and linker -> can : 1
compiler and linker -> ensure : 2
and linker can -> use : 1
linker can use -> the : 1
can use the -> linkage : 1
can use the -> second : 1
can use the -> storage : 1
can use the -> function : 2
can use the -> same : 1
can use the -> bigint : 1
can use the -> bare : 1
can use the -> and : 1
can use the -> template : 1
can use the -> default : 1
can use the -> standard : 2
can use the -> if : 1
can use the -> are : 1
can use the -> specifier : 2
can use the -> keyword : 1
can use the -> the : 1
can use the -> category : 5
can use the -> maximum : 1
can use the -> string : 1
can use the -> locale : 2
use the linkage -> has : 1
the linkage has -> two : 1
linkage has two -> scope : 1
has two scope -> and : 1
two scope and -> dictates : 1
scope and dictates -> which : 1
and dictates which -> scopes : 1
dictates which scopes -> have : 1
which scopes have -> access : 1
scopes have access -> to : 1
have access to -> an : 1
have access to -> the : 1
access to an -> dictates : 1
to an dictates -> an : 1
an dictates an -> properties : 1
dictates an properties -> that : 1
an properties that -> depend : 1
properties that depend -> on : 1
that depend on -> programming : 1
that depend on -> the : 4
depend on programming -> linkage : 1
on programming linkage -> can : 1
programming linkage can -> be : 1
linkage can be -> one : 1
linkage can be -> referred : 3
can be one -> of : 1
be one of -> the : 8
be one of -> or : 1
one of the -> name : 1
one of the -> fundamental : 2
one of the -> an : 1
one of the -> three : 3
one of the -> following : 6
one of the -> two : 2
one of the -> cast : 1
one of the -> explicit : 1
one of the -> standard : 11
one of the -> listed : 1
one of the -> the : 4
one of the -> base : 2
one of the -> object : 1
one of the -> types : 1
one of the -> names : 1
one of the -> items : 1
one of the -> member : 3
one of the -> use : 1
one of the -> special : 1
one of the -> strings : 1
one of the -> decimal : 2
one of the -> letters : 1
one of the -> signed : 1
one of the -> is : 1
one of the -> five : 2
one of the -> facets : 1
one of the -> if : 1
one of the -> boost : 1
one of the -> more : 1
of the name -> with : 1
of the name -> of : 1
of the name -> lookup : 1
of the name -> string : 2
the name with -> linkage : 1
the name with -> the : 2
name with linkage -> can : 3
with linkage can -> be : 3
can be referred -> to : 3
be referred to -> from : 2
be referred to -> only : 1
referred to from -> a : 2
to from a -> different : 2
to from a -> range : 1
from a different -> scope : 1
from a different -> possibly : 1
from a different -> for : 1
from a different -> macro : 1
a different scope -> within : 1
different scope within -> the : 1
scope within the -> same : 1
scope within the -> curly : 1
within the same -> source : 2
within the same -> object : 1
the same source -> at : 1
the same source -> programmers : 1
the same source -> the : 1
the same source -> file : 1
the same source -> header : 1
same source at -> namespace : 1
source at namespace -> scope : 1
at namespace scope -> outside : 1
at namespace scope -> that : 1
at namespace scope -> are : 1
at namespace scope -> can : 1
namespace scope outside -> of : 1
scope outside of -> functions : 1
outside of functions -> and : 1
of functions and -> declarations : 1
of functions and -> simple : 1
functions and declarations -> have : 1
and declarations have -> internal : 1
declarations have internal -> as : 1
have internal as -> do : 1
internal as do -> declarations : 1
as do declarations -> that : 1
do declarations that -> are : 1
declarations that are -> not : 2
that are not -> also : 3
that are not -> have : 1
that are not -> listed : 1
that are not -> present : 1
that are not -> removed : 4
that are not -> equal : 2
that are not -> in : 2
that are not -> considered : 2
that are not -> possible : 1
are not also -> data : 1
are not also -> present : 2
not also data -> members : 1
also data members -> of : 1
data members of -> anonymous : 1
data members of -> integral : 1
data members of -> the : 1
data members of -> class : 1
members of anonymous -> unions : 1
of anonymous unions -> have : 1
anonymous unions have -> internal : 1
unions have internal -> names : 1
have internal names -> in : 1
internal names in -> an : 1
names in an -> unnamed : 1
in an unnamed -> namespace : 1
in an unnamed -> so : 1
an unnamed namespace -> have : 1
an unnamed namespace -> is : 1
an unnamed namespace -> because : 1
unnamed namespace have -> internal : 1
namespace have internal -> name : 1
have internal name -> with : 2
internal name with -> linkage : 2
a different possibly -> in : 1
different possibly in -> a : 1
possibly in a -> different : 1
in a different -> source : 2
in a different -> the : 1
a different source -> functions : 1
a different source -> function : 1
different source functions -> and : 1
source functions and -> objects : 1
functions and objects -> declared : 1
and objects declared -> with : 1
objects declared with -> the : 1
declared with the -> specifier : 2
declared with the -> type : 1
declared with the -> a : 1
declared with the -> an : 1
declared with the -> it : 1
declared with the -> function : 1
declared with the -> which : 1
with the specifier -> have : 1
with the specifier -> if : 1
with the specifier -> after : 1
with the specifier -> so : 1
the specifier have -> external : 1
specifier have external -> as : 1
have external as -> do : 1
external as do -> entities : 1
as do entities -> declared : 1
do entities declared -> at : 1
entities declared at -> namespace : 1
declared at namespace -> scope : 1
declared at namespace -> the : 2
namespace scope that -> do : 1
namespace scope that -> encloses : 1
scope that do -> not : 1
do not have -> internal : 1
do not have -> corresponding : 1
do not have -> you : 1
do not have -> return : 1
do not have -> the : 1
do not have -> cannot : 1
do not have -> to : 2
do not have -> any : 1
do not have -> access : 1
do not have -> a : 1
do not have -> valid : 1
not have internal -> name : 1
referred to only -> from : 1
to only from -> within : 1
only from within -> the : 1
from within the -> scope : 1
within the scope -> where : 1
within the scope -> of : 1
the scope where -> it : 2
scope where it -> is : 2
where it is -> local : 2
where it is -> use : 1
where it is -> before : 1
it is local -> declarations : 1
it is local -> variables : 1
is local declarations -> that : 1
local declarations that -> are : 1
are not have -> no : 1
not have no -> with : 1
have no with -> no : 1
no with no -> function : 1
with no function -> and : 1
with no function -> template : 1
with no function -> returns : 6
with no function -> terminates : 1
with no function -> obtains : 1
with no function -> passes : 1
with no function -> can : 1
no function and -> object : 1
function and object -> has : 1
and object has -> a : 1
object has a -> which : 1
object has a -> that : 1
object has a -> distinct : 1
has a which -> is : 2
has a which -> it : 1
a which is -> specified : 1
a which is -> a : 4
a which is -> converted : 1
a which is -> an : 1
a which is -> filled : 1
which is specified -> as : 1
is specified as -> a : 3
specified as a -> simple : 1
specified as a -> template : 1
specified as a -> dot : 1
as a simple -> character : 1
a simple character -> by : 1
simple character by -> the : 1
character by the -> linkage : 1
by the linkage -> is : 1
the linkage is -> the : 1
the linkage is -> also : 1
linkage is the -> only : 1
is the only -> other : 1
is the only -> time : 1
is the only -> way : 1
is the only -> difference : 1
is the only -> formatting : 1
is the only -> one : 1
the only other -> standard : 1
the only other -> names : 1
only other standard -> language : 1
other standard language -> linkage : 1
standard language linkage -> is : 1
language linkage is -> all : 1
linkage is all -> other : 1
is all other -> language : 1
all other language -> linkages : 1
other language linkages -> and : 1
language linkages and -> the : 1
linkages and the -> properties : 1
and the properties -> associated : 1
the properties associated -> with : 1
properties associated with -> different : 1
associated with different -> language : 1
with different language -> linkages : 1
different language linkages -> are : 1
language linkages are -> can : 1
linkages are can -> specify : 1
are can specify -> the : 1
can specify the -> language : 1
can specify the -> string : 1
can specify the -> exact : 1
specify the language -> linkage : 1
the language linkage -> for : 1
language linkage for -> a : 1
linkage for a -> single : 1
linkage for a -> series : 1
for a single -> declaration : 1
for a single -> and : 1
a single declaration -> a : 1
single declaration a -> or : 1
declaration a or -> for : 1
a or for -> a : 1
a or for -> is : 1
or for a -> series : 1
or for a -> derived : 1
or for a -> template : 1
or for a -> for : 1
or for a -> binary : 1
or for a -> and : 1
for a series -> of : 2
series of declarations -> and : 2
series of declarations -> make : 1
of declarations and -> when : 1
of declarations and -> you : 1
declarations and when -> you : 1
and when you -> specify : 1
and when you -> define : 2
and when you -> instantiate : 1
and when you -> write : 1
when you specify -> linkage : 1
you specify linkage -> for : 1
specify linkage for -> a : 1
declarations and you -> must : 1
and you must -> enclose : 1
and you must -> use : 1
and you must -> be : 1
you must enclose -> the : 1
must enclose the -> series : 1
enclose the series -> in : 1
the series in -> curly : 1
series in curly -> a : 1
in curly a -> language : 1
in curly a -> initializer : 1
curly a language -> linkage : 1
a language linkage -> declaration : 1
language linkage declaration -> does : 1
linkage declaration does -> not : 1
does not define -> a : 2
does not define -> any : 1
not define a -> scope : 1
not define a -> although : 1
not define a -> suitable : 1
define a scope -> within : 1
a scope within -> the : 1
within the curly -> for : 1
the curly for -> void : 1
curly for void -> extern : 1
curly for void -> const : 1
for void extern -> void : 1
void extern void -> void : 1
extern void void -> linkage : 1
void void linkage -> is : 1
void linkage is -> part : 1
linkage is part -> of : 1
part of a -> so : 1
part of a -> statement : 1
part of a -> single : 1
part of a -> and : 1
part of a -> function : 1
part of a -> multibyte : 1
part of a -> void : 1
part of a -> typename : 1
part of a -> the : 1
part of a -> valid : 1
of a so -> declarations : 1
of a so -> they : 1
of a so -> it : 1
a so declarations -> keep : 1
so declarations keep -> track : 1
declarations keep track -> of : 1
keep track of -> the : 2
keep track of -> which : 2
keep track of -> state : 1
keep track of -> a : 1
keep track of -> formatting : 1
keep track of -> when : 1
track of the -> language : 1
track of the -> the : 1
track of the -> current : 1
track of the -> conversion : 5
track of the -> number : 1
track of the -> bit : 1
track of the -> position : 1
of the language -> when : 1
the language when -> assigning : 1
language when assigning -> a : 1
when assigning a -> function : 1
when assigning a -> number : 1
assigning a function -> to : 1
a function to -> a : 2
a function to -> but : 1
a function to -> the : 1
a function to -> call : 1
a function to -> round : 1
a function to -> be : 2
a function to -> its : 1
function to a -> function : 2
function to a -> different : 1
function to a -> member : 1
function to a -> data : 1
a function the -> function : 2
a function the -> first : 1
a function the -> object : 1
a function the -> name : 1
a function the -> body : 1
a function the -> return : 1
a function the -> compiler : 2
a function the -> actual : 1
a function the -> pow : 1
a function the -> state : 1
function and pointer -> must : 1
and pointer must -> have : 1
pointer must have -> the : 1
pointer must have -> been : 1
must have the -> same : 25
must have the -> parameter : 1
have the same -> in : 1
have the same -> alignment : 1
have the same -> bit : 1
have the same -> the : 19
have the same -> types : 1
have the same -> type : 2
have the same -> that : 1
have the same -> effect : 1
have the same -> name : 1
have the same -> behavior : 1
have the same -> number : 1
have the same -> representation : 2
have the same -> void : 1
have the same -> length : 1
have the same -> offset : 1
have the same -> sign : 1
have the same -> if : 1
have the same -> functionality : 1
have the same -> size : 6
have the same -> meaning : 2
have the same -> each : 1
have the same -> or : 4
the same in -> the : 1
the same in -> but : 1
the same in -> other : 1
same in the -> following : 1
is a function -> pointer : 1
is a function -> all : 1
is a function -> call : 1
is a function -> in : 1
is a function -> object : 5
is a function -> that : 4
is a function -> returns : 1
is a function -> specifier : 1
function pointer with -> linkage : 1
pointer with linkage -> the : 1
with linkage the -> need : 1
linkage the need -> for : 1
need for curly -> braces : 1
for curly braces -> because : 1
curly braces because -> it : 1
braces because it -> is : 1
is a not -> a : 1
a not a -> you : 1
not a you -> can : 2
you can assign -> a : 7
can assign a -> function : 1
can assign a -> value : 1
can assign a -> to : 6
assign a function -> to : 1
function to but -> not : 1
to but not -> a : 1
to but not -> vice : 1
but not a -> even : 1
but not a -> different : 1
not a even -> though : 1
a even though -> the : 1
even though the -> rest : 1
even though the -> number : 4
even though the -> function : 1
though the rest -> of : 1
the rest of -> the : 6
the rest of -> this : 3
the rest of -> see : 1
rest of the -> function : 1
rest of the -> line : 1
rest of the -> library : 1
rest of the -> the : 2
rest of the -> directives : 1
rest of the -> loop : 1
the function type -> void : 1
the function type -> and : 2
function type void -> funcptr : 1
type void funcptr -> ok : 1
void funcptr ok -> funcptr : 1
funcptr ok funcptr -> does : 1
ok funcptr does -> not : 1
funcptr does not -> support : 1
does not support -> so : 1
does not support -> random : 1
does not support -> you : 1
does not support -> the : 1
not support so -> there : 1
support so there -> can : 1
so there can -> be : 1
most one function -> with : 1
most one function -> to : 1
one function with -> linkage : 1
one function with -> the : 1
function with linkage -> of : 1
function with linkage -> has : 1
with linkage of -> a : 1
linkage of a -> given : 1
a given even -> if : 1
given even if -> you : 1
even if you -> declare : 1
even if you -> use : 1
even if you -> omit : 2
even if you -> do : 2
if you declare -> a : 1
you declare a -> c : 1
you declare a -> special : 1
declare a c -> function : 1
a c function -> in : 1
c function in -> two : 1
function in two -> different : 1
in two different -> both : 1
in two different -> referring : 1
two different both -> declarations : 1
different both declarations -> refer : 1
both declarations refer -> to : 1
declarations refer to -> the : 1
refer to the -> same : 1
refer to the -> temporary : 1
refer to the -> class : 1
refer to the -> object : 1
refer to the -> and : 1
refer to the -> respective : 1
refer to the -> memory : 1
refer to the -> section : 3
to the same -> for : 1
to the same -> as : 1
to the same -> but : 1
to the same -> the : 1
to the same -> object : 1
to the same -> member : 2
to the same -> this : 1
to the same -> you : 1
to the same -> and : 1
to the same -> with : 1
to the same -> position : 1
to the same -> stream : 1
to the same -> so : 1
the same for -> which : 1
the same for -> all : 2
the same for -> the : 2
same for which -> there : 1
for which there -> must : 1
which there must -> be : 1
be a single -> linkage : 1
be a single -> preprocessor : 1
a single linkage -> is : 1
single linkage is -> used : 1
linkage is used -> for : 2
is used for -> external : 1
is used for -> native : 1
is used for -> and : 2
is used for -> exceptional : 1
is used for -> all : 1
is used for -> a : 1
is used for -> bounded : 1
is used for -> normal : 2
is used for -> wide : 2
is used for -> classifying : 1
is used for -> allocating : 1
used for external -> functions : 1
for external functions -> that : 1
external functions that -> are : 1
functions that are -> written : 1
functions that are -> declared : 1
functions that are -> meant : 1
functions that are -> candidates : 1
functions that are -> permitted : 1
functions that are -> unique : 1
functions that are -> outside : 1
functions that are -> defined : 1
that are written -> in : 1
are written in -> c : 1
written in c -> as : 1
in c as -> those : 1
c as those -> in : 1
as those in -> the : 1
in the c -> standard : 2
in the c -> require : 1
in the c -> of : 1
in the c -> header : 1
c standard but -> that : 1
standard but that -> you : 1
but that you -> want : 1
that you want -> to : 1
want to call -> from : 1
want to call -> the : 1
to call from -> a : 1
call from a -> linkage : 1
from a linkage -> is : 1
a linkage is -> used : 1
used for native -> you : 1
for native you -> want : 1
native you want -> to : 1
want to write -> a : 4
want to write -> an : 1
want to write -> your : 1
to write a -> function : 3
to write a -> generic : 1
to write a -> sequence : 1
to write a -> prefix : 2
to write a -> decimal : 2
to write a -> plus : 1
to write a -> the : 1
to write a -> string : 1
write a function -> in : 1
write a function -> to : 2
function in that -> can : 1
function in that -> takes : 1
in that can -> be : 1
that can be -> called : 2
that can be -> used : 7
that can be -> modified : 1
that can be -> evaluated : 2
that can be -> implicitly : 1
that can be -> converted : 8
that can be -> the : 1
that can be -> stored : 7
that can be -> lists : 1
that can be -> alternative : 1
that can be -> symbols : 1
that can be -> solid : 1
that can be -> assigned : 1
that can be -> returned : 1
that can be -> accessed : 1
that can be -> open : 1
that can be -> represented : 3
that can be -> written : 1
that can be -> for : 1
that can be -> if : 1
that can be -> compared : 1
that can be -> translated : 1
that can be -> in : 4
that can be -> shared : 1
that can be -> passed : 1
can be called -> from : 1
can be called -> easily : 1
can be called -> for : 3
can be called -> using : 2
can be called -> with : 4
can be called -> only : 1
be called from -> in : 1
called from in -> that : 1
from in that -> you : 1
from in that -> it : 1
in that you -> should : 2
in that you -> can : 1
that you should -> declare : 1
that you should -> avoid : 1
you should declare -> the : 3
should declare the -> function : 2
should declare the -> reference : 1
declare the function -> with : 1
declare the function -> in : 2
declare the function -> before : 1
the function with -> with : 1
the function with -> the : 1
the function with -> any : 1
the function with -> a : 1
function with with -> no : 1
with with no -> implementation : 1
with no implementation -> might : 1
with no implementation -> is : 1
no implementation might -> support : 1
implementation might support -> other : 1
might support other -> language : 1
support other language -> it : 1
other language it -> is : 1
language it is -> up : 1
it is up -> to : 2
it is up -> for : 1
is up to -> the : 2
is up to -> characters : 1
up to the -> implementation : 2
up to the -> a : 1
up to the -> smaller : 1
up to the -> the : 1
up to the -> return : 1
up to the -> several : 1
to the implementation -> to : 2
the implementation to -> define : 1
the implementation to -> have : 1
the implementation to -> determine : 1
implementation to define -> the : 1
to define the -> properties : 1
to define the -> type : 1
to define the -> maximum : 1
to define the -> data : 1
to define the -> function : 1
to define the -> identifier : 1
define the properties -> of : 1
the properties of -> each : 1
properties of each -> how : 1
properties of each -> fundamental : 1
of each how -> parameters : 1
each how parameters -> are : 1
how parameters are -> passed : 1
parameters are passed -> to : 1
are passed to -> how : 1
passed to how -> values : 1
to how values -> are : 1
how values are -> returned : 1
values are returned -> from : 1
are returned from -> whether : 1
returned from whether -> and : 1
from whether and -> how : 1
whether and how -> function : 1
and how function -> names : 1
how function names -> are : 1
names are and -> so : 1
are and so -> in : 1
and so in -> many : 1
and so in -> for : 1
so in many -> a : 1
in many a -> function : 1
many a function -> with : 1
a function with -> linkage : 1
a function with -> the : 2
a function with -> no : 1
with linkage has -> a : 1
linkage has a -> that : 1
has a that -> the : 2
a that the -> external : 1
a that the -> duration : 1
a that the -> syntax : 1
that the external -> name : 1
the external name -> encodes : 1
external name encodes -> the : 1
name encodes the -> function : 1
encodes the function -> name : 1
function name and -> the : 1
function name and -> how : 1
function name and -> context : 1
and the types -> of : 1
and the types -> so : 1
types of all -> its : 1
of all its -> so : 1
all its so -> the : 1
its so the -> function : 1
so the function -> might : 1
so the function -> takes : 2
so the function -> is : 1
so the function -> can : 2
so the function -> would : 1
so the function -> return : 2
the function might -> have : 1
the function might -> be : 2
function might have -> an : 1
might have an -> external : 1
might have an -> incomplete : 1
have an external -> name : 1
an external name -> of : 1
external name of -> making : 1
name of making -> it : 1
of making it -> hard : 1
making it hard -> to : 1
it hard to -> call : 1
hard to call -> the : 1
to call the -> function : 2
to call the -> global : 1
to call the -> the : 2
to call the -> type : 1
to call the -> inherited : 1
to call the -> display : 1
call the function -> from : 1
call the function -> that : 1
call the function -> cannot : 1
call the function -> using : 1
call the function -> in : 1
call the function -> as : 1
call the function -> and : 1
the function from -> a : 1
the function from -> modifying : 1
function from a -> c : 1
from a c -> which : 1
a c which -> does : 1
c which does -> not : 1
which does not -> know : 1
does not know -> about : 2
does not know -> the : 1
does not know -> how : 1
does not know -> anything : 1
not know about -> using : 1
not know about -> use : 1
know about using -> the : 1
about using the -> compiler : 1
using the compiler -> might : 1
compiler might not -> mangle : 1
might not mangle -> the : 1
not mangle the -> exporting : 1
mangle the exporting -> the : 1
the exporting the -> function : 1
exporting the function -> under : 1
the function under -> the : 1
function under the -> plain : 1
under the plain -> name : 1
the plain name -> of : 1
plain name of -> which : 1
name of which -> can : 1
of which can -> be : 2
which can be -> called : 1
which can be -> used : 5
which can be -> this : 1
which can be -> implicitly : 1
which can be -> for : 1
which can be -> a : 1
which can be -> or : 1
which can be -> an : 1
which can be -> overloaded : 1
which can be -> converted : 1
which can be -> implemented : 1
which can be -> represented : 1
which can be -> helpful : 1
which can be -> set : 1
which can be -> data : 1
be called easily -> from : 1
called easily from -> of : 1
easily from of -> the : 1
from of the -> hallmarks : 1
of the hallmarks -> of : 1
the hallmarks of -> is : 1
hallmarks of is -> that : 1
of is that -> you : 1
of is that -> the : 1
of is that -> is : 1
of is that -> they : 1
that you can -> define : 1
that you can -> cast : 1
that you can -> compile : 1
that you can -> implement : 1
that you can -> it : 1
that you can -> push : 2
that you can -> convert : 1
that you can -> use : 1
that you can -> derive : 1
you can define -> a : 2
you can define -> alternate : 1
you can define -> type : 1
you can define -> your : 3
you can define -> iterators : 1
you can define -> additional : 3
you can define -> the : 1
you can define -> and : 1
can define a -> type : 1
can define a -> brand : 1
can define a -> class : 1
can define a -> namespace : 1
can define a -> provided : 1
define a type -> that : 2
define a type -> conversion : 1
define a type -> to : 1
a type that -> resembles : 1
a type that -> supports : 1
a type that -> is : 2
a type that -> that : 1
a type that -> results : 1
a type that -> derives : 1
a type that -> can : 1
type that resembles -> any : 1
that resembles any -> if : 1
resembles any if -> you : 1
any if you -> need : 1
any if you -> use : 1
you need to -> define : 1
you need to -> treat : 2
you need to -> worry : 1
you need to -> obtain : 1
you need to -> work : 1
you need to -> customize : 1
you need to -> change : 1
you need to -> sort : 1
you need to -> know : 2
you need to -> your : 1
you need to -> be : 1
you need to -> an : 1
you need to -> write : 1
you need to -> use : 2
you need to -> process : 1
you need to -> read : 1
you need to -> convert : 1
you need to -> specialize : 1
you need to -> keep : 1
you need to -> modify : 3
you need to -> do : 1
you need to -> flush : 2
need to define -> a : 1
need to define -> two : 1
to define a -> type : 2
to define a -> interface : 1
to define a -> macro : 1
to define a -> traits : 1
to define a -> guard : 1
to define a -> facet : 1
to define a -> container : 1
type that supports -> it : 1
that supports it -> can : 1
supports it can -> do : 1
can do and -> programmers : 1
do and programmers -> will : 1
and programmers will -> be : 1
programmers will be -> able : 1
will be able -> to : 1
able to use -> objects : 1
able to use -> more : 1
able to use -> default : 1
able to use -> the : 1
to use objects -> the : 1
to use objects -> in : 1
use objects the -> same : 1
objects the same -> way : 1
the same way -> they : 1
the same way -> a : 1
the same way -> does : 2
the same way -> other : 1
same way they -> use : 1
way they use -> can : 1
they use can -> define : 1
use can define -> a : 1
define a brand -> new : 1
a brand new -> type : 1
brand new type -> by : 1
new type by -> defining : 1
type by defining -> a : 1
by defining a -> class : 2
defining a class -> or : 1
defining a class -> that : 1
class or an -> enumeration : 1
class or an -> ancestor : 1
or an enumeration -> later : 1
or an enumeration -> with : 1
an enumeration later -> in : 1
enumeration later in -> this : 1
in this in -> addition : 1
in this in -> a : 1
in this in -> the : 1
in this in -> this : 1
this in addition -> to : 1
in addition to -> declaring : 1
in addition to -> plain : 1
in addition to -> a : 1
in addition to -> the : 3
addition to declaring -> and : 1
to declaring and -> defining : 1
declaring and defining -> new : 1
and defining new -> you : 1
defining new you -> can : 1
new you can -> declare : 1
you can declare -> a : 4
you can declare -> an : 1
you can declare -> variables : 1
you can declare -> one : 1
you can declare -> the : 1
can declare a -> which : 1
can declare a -> function : 2
can declare a -> pod : 1
can declare a -> but : 1
can declare a -> parameter : 1
can declare a -> name : 1
can declare a -> that : 1
declare a which -> is : 1
which is a -> synonym : 1
which is a -> or : 1
which is a -> class : 1
which is a -> of : 2
which is a -> shorthand : 1
which is a -> sequence : 1
which is a -> powerful : 1
which is a -> the : 1
which is a -> set : 1
which is a -> character : 1
which is a -> positive : 1
which is a -> function : 1
which is a -> multibyte : 1
which is a -> pointer : 1
which is a -> temporary : 2
which is a -> null : 1
which is a -> scalar : 19
is a synonym -> for : 6
a synonym for -> an : 6
a synonym for -> the : 3
a synonym for -> one : 1
a synonym for -> operator : 1
synonym for an -> existing : 5
synonym for an -> object : 1
for an existing -> note : 1
for an existing -> a : 1
for an existing -> function : 1
for an existing -> you : 1
for an existing -> see : 1
for an existing -> it : 1
an existing note -> that : 1
existing note that -> while : 1
that while the -> name : 1
while the name -> seems : 1
the name seems -> to : 1
name seems to -> be : 1
seems to be -> a : 1
seems to be -> that : 1
to be a -> shorthand : 1
to be a -> meaningful : 1
to be a -> a : 1
to be a -> serious : 1
to be a -> and : 1
to be a -> private : 3
to be a -> sequence : 2
be a shorthand -> for : 1
a shorthand for -> it : 1
a shorthand for -> an : 1
shorthand for it -> is : 1
for it is -> actually : 1
for it is -> one : 1
for it is -> the : 2
for it is -> meaningful : 1
it is actually -> a : 1
is actually a -> type : 1
is actually a -> pointer : 1
is actually a -> not : 1
actually a type -> later : 1
a type later -> in : 1
type later in -> this : 1
this section lists -> the : 1
section lists the -> type : 1
section lists the -> headers : 1
lists the type -> specifiers : 1
the type specifiers -> that : 1
the type specifiers -> can : 1
type specifiers that -> are : 1
type specifiers that -> start : 1
specifiers that are -> built : 1
that are built -> into : 1
are built into -> the : 1
built into the -> for : 1
into the for -> types : 1
the for types -> that : 1
for types that -> require : 2
types that require -> multiple : 2
that require multiple -> keywords : 2
require multiple keywords -> you : 1
require multiple keywords -> is : 1
multiple keywords you -> can : 1
keywords you can -> mix : 1
you can mix -> the : 1
you can mix -> any : 1
you can mix -> c : 1
can mix the -> keywords : 1
mix the keywords -> in : 1
the keywords in -> any : 1
keywords in any -> but : 1
in any but -> the : 2
any but the -> order : 1
any but the -> convention : 2
but the order -> shown : 1
the order shown -> in : 1
order shown in -> the : 1
shown in the -> following : 1
shown in the -> int : 1
shown in the -> compiler : 1
shown in the -> median : 1
shown in the -> rest : 1
shown in the -> pow : 1
shown in the -> facet : 2
the following list -> is : 1
following list is -> the : 1
list is the -> conventional : 1
list is the -> result : 1
list is the -> order : 1
list is the -> const : 1
list is the -> size : 1
list is the -> first : 1
is the conventional -> if : 1
the conventional if -> a : 1
conventional if a -> type : 1
if a type -> specifier : 1
if a type -> is : 1
type specifier requires -> multiple : 1
specifier requires multiple -> one : 1
requires multiple one -> of : 1
multiple one of -> which : 1
one of which -> is : 2
of which is -> the : 1
of which is -> a : 2
of which is -> to : 1
is the can -> be : 1
the can be -> if : 1
the can be -> local : 1
the can be -> a : 3
the can be -> or : 1
the can be -> the : 1
can be if -> a : 1
can be if -> you : 1
can be if -> the : 1
can be if -> is : 1
be if a -> type : 1
a type is -> the : 3
a type is -> in : 1
a type is -> one : 1
a type is -> an : 3
a type is -> not : 2
is the keyword -> can : 1
the keyword can -> be : 2
keyword can be -> omitted : 1
keyword can be -> prefixed : 1
keyword can be -> used : 9
can be omitted -> in : 1
be omitted in -> the : 1
omitted in the -> case : 1
in the case -> of : 4
in the case -> does : 1
the case of -> a : 3
the case of -> placement : 1
case of a -> boolean : 1
case of a -> type : 1
case of a -> that : 1
case of a -> function : 1
case of a -> plain : 1
of a boolean -> or : 1
a boolean or -> logical : 1
boolean or logical -> it : 1
boolean or logical -> the : 1
or logical it -> has : 1
logical it has -> two : 1
it has two -> possible : 1
has two possible -> and : 1
two possible and -> a : 1
possible and a -> narrow : 1
and a narrow -> character : 1
narrow character literals -> usually : 1
character literals usually -> have : 1
literals usually have -> type : 1
usually have type -> a : 1
have type a -> narrow : 1
type a narrow -> character : 1
character literal contains -> multiple : 1
literal contains multiple -> the : 1
contains multiple the -> type : 1
multiple the type -> is : 1
type is unlike -> the : 1
is unlike the -> other : 1
unlike the other -> integral : 1
the other integral -> a : 1
other integral a -> plain : 1
integral a plain -> is : 1
a plain is -> not : 1
a plain is -> signed : 2
plain is not -> necessarily : 1
not necessarily equivalent -> to : 1
necessarily equivalent to -> can : 1
equivalent to can -> be : 1
can be equivalent -> to : 1
be equivalent to -> or : 1
be equivalent to -> const : 2
be equivalent to -> the : 1
be equivalent to -> type : 1
equivalent to or -> depending : 1
equivalent to or -> both : 1
to or depending -> on : 1
or depending on -> the : 3
on the regardless -> of : 1
the regardless of -> the : 1
regardless of the -> the : 1
regardless of the -> number : 2
regardless of the -> day : 1
regardless of the -> with : 1
regardless of the -> type : 1
the the plain -> type : 1
the plain type -> is : 1
plain type is -> distinct : 1
type is distinct -> and : 1
type is distinct -> from : 1
type is distinct -> type : 1
is distinct and -> separate : 1
distinct and separate -> from : 1
and separate from -> and : 1
separate from and -> the : 1
from and the -> narrow : 1
and the narrow -> character : 1
the narrow character -> types : 1
the narrow character -> set : 2
the narrow character -> if : 1
narrow character types -> and : 1
character types and -> share : 1
types and share -> a : 1
and share a -> common : 1
share a common -> size : 1
share a common -> stream : 1
a common size -> and : 1
common size and -> by : 1
size and by -> is : 1
and by is -> the : 1
by is the -> smallest : 1
by is the -> maximum : 1
is the smallest -> fundamental : 1
is the smallest -> such : 1
is the smallest -> that : 1
is the smallest -> value : 10
the smallest fundamental -> is : 1
smallest fundamental is -> a : 1
fundamental is a -> the : 1
is a the -> range : 2
is a the -> argument : 1
is a the -> difference : 1
is a the -> result : 4
is a the -> compiler : 1
is a the -> next : 1
is a the -> key : 1
a the range -> and : 2
the range and -> precision : 5
the range and -> another : 1
the range and -> in : 1
the range and -> for : 2
the range and -> stores : 1
the range and -> interprets : 1
the range and -> assigns : 1
the range and -> throw : 1
the range and -> returns : 1
the range and -> inserts : 1
the range and -> is : 1
range and precision -> are : 4
range and precision -> of : 2
and precision are -> at : 3
and precision are -> they : 1
precision are at -> least : 3
are at least -> as : 3
at least as -> much : 2
at least as -> large : 5
at least as -> specific : 1
at least as -> great : 1
at least as -> many : 1
at least as -> long : 1
least as much -> as : 2
as much as -> those : 2
as much as -> they : 1
as much as -> use : 1
as much as -> most : 1
much as those -> of : 2
as those of -> a : 3
those of a -> literal : 1
those of a -> signed : 1
those of a -> argument : 1
those of a -> plain : 1
of a literal -> has : 1
has type unless -> you : 1
type unless you -> use : 1
unless you use -> the : 1
you use the -> or : 1
you use the -> class : 2
you use the -> containing : 1
you use the -> default : 1
use the or -> a : 1
use the or -> which : 1
use the or -> locale : 2
use the or -> expands : 1
use the or -> size : 1
the or a -> an : 1
or a an -> the : 1
a an the -> range : 1
an the range -> and : 1
of a signed -> an : 1
a signed an -> integer : 1
signed an integer -> in : 1
an integer in -> a : 1
integer in a -> size : 1
in a size -> and : 1
a size and -> format : 1
size and format -> that : 1
and format that -> is : 1
format that is -> natural : 1
format that is -> slightly : 1
that is natural -> for : 1
is natural for -> the : 1
natural for the -> host : 1
for the host -> long : 1
the host long -> an : 1
host long an -> integer : 1
long an integer -> whose : 1
an integer whose -> range : 1
integer whose range -> is : 4
whose range is -> at : 3
whose range is -> possibly : 1
whose range is -> no : 2
whose range is -> the : 1
range is at -> least : 3
range is at -> most : 1
range is at -> the : 2
is at least -> as : 6
is at least -> call : 1
least as large -> as : 5
as large as -> that : 1
as large as -> the : 1
as large as -> a : 2
as large as -> call : 1
large as that -> of : 1
as that of -> short : 1
as that of -> the : 1
as that of -> in : 2
that of short -> an : 1
of short an -> integer : 1
short an integer -> such : 1
an integer such -> that : 1
integer such that -> the : 2
such that the -> range : 1
such that the -> square : 1
such that the -> result : 1
such that the -> characters : 1
that the range -> of : 1
that the range -> and : 1
the range of -> an : 1
the range of -> a : 1
the range of -> enumerator : 1
the range of -> values : 1
the range of -> items : 1
range of an -> is : 1
of an is -> at : 1
of an is -> followed : 1
of an is -> it : 1
an is at -> least : 1
large as the -> range : 1
as the range -> of : 1
range of a -> an : 1
of a an -> unsigned : 1
of a an -> object : 1
of a an -> or : 1
a an unsigned -> some : 1
an unsigned some -> especially : 1
unsigned some especially -> in : 1
some especially in -> the : 1
especially in the -> c : 1
the c require -> characters : 1
c require characters -> and : 1
require characters and -> character : 1
characters and character -> strings : 1
characters and character -> sets : 1
characters and character -> copy : 1
and character strings -> to : 1
character strings to -> be : 1
strings to be -> cast : 1
to be cast -> to : 1
be cast to -> instead : 1
be cast to -> ordinary : 1
be cast to -> a : 1
be cast to -> integers : 1
be cast to -> can : 1
be cast to -> other : 1
be cast to -> to : 1
cast to instead -> of : 1
to instead of -> plain : 1
instead of plain -> for : 1
of plain for -> long : 1
plain for long -> an : 1
for long an -> unsigned : 1
long an unsigned -> long : 1
an unsigned long -> short : 1
an unsigned long -> the : 1
an unsigned long -> if : 1
an unsigned long -> long : 1
unsigned long short -> an : 1
long short an -> unsigned : 1
short an unsigned -> short : 1
an unsigned short -> the : 1
unsigned short the -> absence : 1
short the absence -> of : 1
the absence of -> any : 1
the absence of -> access : 1
the absence of -> a : 1
absence of any -> you : 1
of any you -> cannot : 1
any you cannot -> declare : 1
you cannot declare -> an : 1
you cannot declare -> use : 1
you cannot declare -> a : 3
cannot declare an -> object : 1
declare an object -> of : 2
declare an object -> named : 1
declare an object -> before : 1
an object of -> type : 6
an object of -> class : 10
an object of -> its : 1
an object of -> dependent : 1
an object of -> fundamental : 1
object of type -> but : 1
object of type -> or : 1
object of type -> with : 1
object of type -> it : 3
object of type -> being : 1
object of type -> a : 1
object of type -> is : 2
of type but -> you : 1
type but you -> can : 1
but you can -> declare : 1
but you can -> also : 2
but you can -> do : 1
but you can -> have : 1
but you can -> refer : 1
but you can -> define : 1
but you can -> use : 4
but you can -> pick : 1
but you can -> call : 2
but you can -> compare : 1
but you can -> store : 1
declare a function -> that : 1
declare a function -> pointer : 2
declare a function -> you : 1
declare a function -> type : 1
function that does -> not : 1
does not return -> a : 5
does not return -> the : 1
does not return -> it : 1
does not return -> an : 1
not return a -> or : 1
not return a -> so : 1
not return a -> complexity : 2
not return a -> it : 1
return a or -> declare : 1
a or declare -> a : 1
or declare a -> pointer : 1
or declare a -> traditional : 1
or declare a -> separate : 1
declare a pointer -> to : 2
pointer to which -> can : 1
pointer to which -> the : 1
to which can -> be : 1
as a generic -> under : 1
as a generic -> pointer : 1
a generic under -> for : 1
generic under for -> information : 1
under for information -> about : 1
information about casting -> to : 1
about casting to -> and : 1
casting to and -> from : 1
to and from -> a : 1
to and from -> the : 1
to and from -> is : 1
to and from -> external : 1
to and from -> numeric : 1
to and from -> named : 1
to and from -> although : 1
to and from -> wide : 1
and from a -> pointer : 1
from a pointer -> to : 5
to a wide -> its : 1
to a wide -> character : 4
to a wide -> function : 1
to a wide -> const : 4
to a wide -> it : 1
to a wide -> which : 1
a wide its -> representation : 1
wide its representation -> must : 1
its representation must -> match : 2
representation must match -> one : 2
must match one -> of : 1
must match one -> or : 1
match one of -> the : 1
of the fundamental -> integer : 1
of the fundamental -> types : 2
of the fundamental -> integral : 1
of the fundamental -> numeric : 1
of the fundamental -> arithmetic : 1
of the fundamental -> the : 1
the fundamental integer -> wide : 1
fundamental integer wide -> character : 1
integer wide character -> literals : 1
wide character literals -> have : 1
character literals have -> type : 1
literals have type -> with : 1
have type with -> no : 1
type with no -> representations : 1
type with no -> type : 5
type with no -> used : 1
type with no -> rethrows : 1
with no representations -> of : 1
no representations of -> the : 1
representations of the -> fundamental : 1
the fundamental types -> are : 2
the fundamental types -> is : 1
the fundamental types -> and : 1
fundamental types are -> the : 2
fundamental types are -> described : 1
fundamental types are -> as : 1
types are the -> integral : 1
types are the -> same : 1
types are the -> if : 1
types are the -> standard : 1
types are the -> following : 1
types are the -> character : 1
are the integral -> types : 1
the integral types -> each : 1
the integral types -> and : 1
integral types each -> require : 1
types each require -> a : 1
each require a -> binary : 1
require a binary -> or : 1
a binary or -> some : 1
binary or some -> types : 1
or some types -> have : 1
some types have -> alignment : 1
types have alignment -> which : 1
have alignment which -> are : 1
alignment which are -> also : 1
which are also -> that : 1
which are also -> for : 1
are also that -> expressions : 1
also that expressions -> always : 1
that expressions always -> return : 1
expressions always return -> pointers : 1
always return pointers -> that : 1
return pointers that -> are : 1
pointers that are -> aligned : 1
that are aligned -> for : 1
are aligned for -> any : 1
aligned for any -> types : 1
aligned for any -> and : 1
aligned for any -> programs : 2
aligned for any -> contents : 1
for any types -> always : 1
any types always -> use : 1
types always use -> arithmetic : 1
always use arithmetic -> modulo : 1
use arithmetic modulo -> in : 1
arithmetic modulo in -> which : 1
modulo in which -> is : 2
is the number -> of : 34
is the number -> is : 1
number of bits -> in : 5
number of bits -> is : 1
number of bits -> all : 1
of bits in -> the : 8
bits in the -> unsigned : 1
bits in the -> result : 1
bits in the -> left : 1
bits in the -> for : 1
bits in the -> exception : 1
bits in the -> state : 3
bits in the -> resulting : 3
bits in the -> value : 1
bits in the -> class : 1
in the unsigned -> types : 1
the unsigned types -> take : 1
unsigned types take -> up : 1
types take up -> the : 1
take up the -> same : 1
up the same -> amount : 1
up the same -> number : 1
the same amount -> of : 1
same amount of -> space : 1
amount of space -> and : 1
of space and -> have : 1
space and have -> the : 1
and have the -> same : 9
the same alignment -> requirements : 1
same alignment requirements -> as : 1
alignment requirements as -> their : 1
requirements as their -> signed : 1
as their signed -> companion : 1
their signed companion -> nonnegative : 1
signed companion nonnegative -> signed : 1
companion nonnegative signed -> values : 1
nonnegative signed values -> are : 1
signed values are -> always : 1
values are always -> a : 1
are always a -> subset : 1
always a subset -> of : 1
a subset of -> the : 9
a subset of -> if : 1
a subset of -> this : 1
a subset of -> a : 2
subset of the -> values : 1
subset of the -> set : 1
subset of the -> standard : 1
subset of the -> elements : 6
of the values -> supported : 1
of the values -> of : 1
of the values -> in : 1
the values supported -> by : 1
values supported by -> the : 1
supported by the -> equivalent : 1
by the equivalent -> unsigned : 1
the equivalent unsigned -> type : 1
equivalent unsigned type -> and : 1
unsigned type and -> must : 1
type and must -> have : 1
and must have -> the : 1
the same bit -> representations : 1
same bit representations -> as : 1
bit representations as -> their : 1
representations as their -> corresponding : 1
as their corresponding -> unsigned : 1
their corresponding unsigned -> the : 1
corresponding unsigned the -> size : 1
unsigned the size -> and : 1
the size and -> range : 1
the size and -> value : 1
size and range -> of : 1
and range of -> the : 1
range of the -> fundamental : 1
range of the -> first : 1
fundamental types is -> the : 1
types is the -> standard : 1
is the standard -> mandates : 1
is the standard -> library : 1
is the standard -> is : 1
is the standard -> does : 1
is the standard -> recommends : 1
the standard mandates -> minimum : 2
the standard mandates -> the : 1
standard mandates minimum -> requirements : 1
standard mandates minimum -> decimal : 1
mandates minimum requirements -> for : 1
minimum requirements for -> these : 1
minimum requirements for -> an : 1
requirements for these -> these : 1
for these these -> requirements : 1
these these requirements -> are : 1
these requirements are -> specified : 1
requirements are specified -> in : 1
are specified in -> the : 1
specified in the -> integral : 1
in the integral -> and : 1
the integral and -> the : 1
integral and the -> see : 1
the see also -> which : 1
the see also -> for : 1
the see also -> the : 1
see also which -> declares : 1
also which declares -> templates : 1
which declares templates -> for : 1
declares templates for -> obtaining : 1
templates for obtaining -> the : 1
for obtaining the -> numerical : 1
obtaining the numerical -> properties : 1
the numerical properties -> of : 1
numerical properties of -> each : 1
of each fundamental -> an : 1
each fundamental an -> optional : 1
fundamental an optional -> type : 1
an optional type -> name : 1
optional type name -> and : 1
type name and -> a : 1
name and a -> set : 1
name and a -> collation : 1
and a set -> of : 2
set of zero -> or : 1
or more identifiers -> that : 1
more identifiers that -> can : 1
identifiers that can -> be : 1
used as values -> of : 1
as values of -> the : 1
values of the -> each : 1
values of the -> enumerated : 1
values of the -> source : 2
values of the -> type : 1
values of the -> and : 1
values of the -> literals : 1
of the each -> enumerator : 1
of the each -> bit : 4
the each enumerator -> is : 1
each enumerator is -> a : 1
enumerator is a -> constant : 1
is a constant -> whose : 1
is a constant -> as : 1
is a constant -> integral : 1
is a constant -> of : 1
is a constant -> object : 1
a constant whose -> type : 1
a constant whose -> value : 2
constant whose type -> is : 1
whose type is -> the : 4
whose type is -> or : 2
whose type is -> integral : 1
whose type is -> a : 2
whose type is -> an : 1
whose type is -> to : 1
whose type is -> any : 1
is the for -> logical : 1
is the for -> a : 1
the for logical -> yes : 1
for logical yes -> logical : 1
logical yes logical -> enum : 1
logical yes logical -> operator : 1
yes logical enum -> color : 1
logical enum color -> const : 1
enum color const -> color : 1
color const color -> yellow : 1
const color yellow -> enum : 1
color yellow enum -> zeroes : 1
yellow enum zeroes -> b : 1
enum zeroes b -> c : 1
zeroes b c -> can : 1
b c can -> optionally : 1
c can optionally -> specify : 1
can optionally specify -> the : 1
optionally specify the -> integral : 1
specify the integral -> value : 1
the integral value -> of : 2
the integral value -> is : 1
integral value of -> an : 1
integral value of -> the : 1
of an enumerator -> after : 1
of an enumerator -> is : 1
an enumerator after -> an : 1
enumerator after an -> equal : 1
after an equal -> sign : 1
an equal sign -> the : 1
equal sign the -> value : 1
sign the value -> must : 1
the value must -> be : 2
value must be -> a : 1
value must be -> in : 1
value must be -> copyable : 1
value must be -> less : 2
be a constant -> of : 1
be a constant -> integral : 2
a constant of -> integral : 2
constant of integral -> or : 2
of integral or -> enumerated : 5
integral or enumerated -> the : 5
integral or enumerated -> initializers : 1
integral or enumerated -> type : 1
integral or enumerated -> template : 1
integral or enumerated -> if : 1
integral or enumerated -> both : 1
integral or enumerated -> or : 1
integral or enumerated -> static : 1
integral or enumerated -> and : 1
integral or enumerated -> without : 1
enumerated the default -> value : 1
the default value -> of : 2
the default value -> for : 3
default value of -> the : 1
default value of -> to : 1
of the first -> enumerator : 2
of the first -> element : 1
of the first -> use : 1
of the first -> position : 1
of the first -> block : 1
of the first -> form : 3
of the first -> member : 1
of the first -> and : 1
of the first -> occurrence : 2
of the first -> result : 1
the first enumerator -> is : 2
first enumerator is -> the : 1
first enumerator is -> with : 1
enumerator is the -> default : 1
is the default -> value : 1
is the default -> for : 1
is the default -> access : 1
is the default -> size : 1
is the default -> is : 3
is the default -> allocator : 1
default value for -> any : 1
default value for -> a : 1
default value for -> the : 1
value for any -> other : 1
value for any -> character : 2
for any other -> enumerator : 1
for any other -> compound : 1
for any other -> argument : 1
for any other -> class : 1
for any other -> for : 1
for any other -> integer : 1
any other enumerator -> is : 1
other enumerator is -> one : 1
enumerator is one -> more : 2
is one more -> than : 2
one more than -> the : 2
more than the -> value : 2
more than the -> return : 1
more than the -> iterator : 2
than the value -> of : 2
value of its -> predecessor : 1
value of its -> if : 2
of its predecessor -> of : 1
its predecessor of -> whether : 1
predecessor of whether -> that : 1
of whether that -> value : 1
whether that value -> was : 1
that value was -> explicitly : 1
value was explicitly -> in : 1
was explicitly in -> a : 1
explicitly in a -> single : 1
in a single -> enumeration : 1
in a single -> each : 1
in a single -> all : 1
in a single -> source : 1
in a single -> container : 1
in a single -> argument : 1
in a single -> the : 2
in a single -> byte : 1
in a single -> you : 1
in a single -> if : 2
in a single -> object : 1
a single enumeration -> you : 1
single enumeration you -> can : 1
enumeration you can -> have : 1
you can have -> more : 1
you can have -> multiple : 3
you can have -> distinct : 1
you can have -> which : 1
you can have -> a : 1
than one enumerator -> with : 1
one enumerator with -> the : 1
enumerator with the -> same : 1
with the same -> name : 19
with the same -> if : 1
with the same -> additional : 1
with the same -> even : 1
with the same -> the : 2
with the same -> names : 1
with the same -> parameters : 1
with the same -> some : 1
with the same -> when : 1
with the same -> type : 1
with the same -> a : 2
with the same -> arguments : 1
with the same -> size : 1
the same name -> of : 1
the same name -> and : 6
the same name -> in : 2
the same name -> as : 2
the same name -> prefaced : 11
same name of -> an : 1
name of an -> enumeration : 1
name of an -> is : 1
name of an -> object : 1
name of an -> template : 1
name of an -> external : 1
name of an -> see : 1
of an enumeration -> is : 1
of an enumeration -> include : 1
an enumeration is -> but : 1
an enumeration is -> defined : 1
enumeration is but -> without : 1
is but without -> a : 1
but without a -> name : 1
without a name -> you : 1
without a name -> in : 1
without a name -> cannot : 1
a name you -> cannot : 1
name you cannot -> declare : 1
cannot declare use -> the : 1
declare use the -> enumeration : 1
use the enumeration -> in : 1
the enumeration in -> other : 1
enumeration in other -> such : 1
in other such -> a : 1
other such a -> declaration : 1
such a declaration -> is : 1
such a declaration -> might : 1
a declaration is -> sometimes : 1
a declaration is -> similar : 1
a declaration is -> added : 1
a declaration is -> not : 1
declaration is sometimes -> used : 1
is sometimes used -> to : 1
sometimes used to -> declare : 1
sometimes used to -> save : 1
used to declare -> integer : 1
used to declare -> a : 2
used to declare -> member : 1
to declare integer -> constants : 1
declare integer constants -> such : 1
integer constants such -> as : 1
constants such as -> the : 1
as the with -> no : 1
the with no -> enumerated : 1
the with no -> specifier : 1
the with no -> i : 1
the with no -> use : 1
the with no -> directive : 1
the with no -> compilers : 1
the with no -> value : 1
the with no -> are : 1
the with no -> is : 1
the with no -> the : 1
with no enumerated -> type : 2
no enumerated type -> is : 2
enumerated type is -> a : 1
enumerated type is -> likewise : 1
enumerated type is -> an : 2
enumerated type is -> stored : 1
is a unique -> each : 1
is a unique -> suitable : 1
a unique each -> enumerated : 1
unique each enumerated -> value : 1
each enumerated value -> has : 1
enumerated value has -> a : 1
value has a -> corresponding : 1
has a corresponding -> integer : 1
has a corresponding -> function : 1
a corresponding integer -> and : 1
corresponding integer and -> the : 1
integer and the -> enumerated : 1
integer and the -> index : 1
and the enumerated -> value : 1
the enumerated value -> can : 1
enumerated value can -> be : 2
value can be -> promoted : 1
value can be -> converted : 4
value can be -> positive : 1
value can be -> passed : 1
value can be -> in : 1
can be promoted -> automatically : 1
can be promoted -> to : 3
be promoted automatically -> to : 1
promoted automatically to -> its : 1
automatically to its -> integer : 1
to its integer -> but : 1
its integer but -> integers : 1
integer but integers -> cannot : 1
but integers cannot -> be : 1
integers cannot be -> implicitly : 1
cannot be implicitly -> converted : 2
be implicitly converted -> to : 8
implicitly converted to -> an : 3
implicitly converted to -> a : 3
implicitly converted to -> the : 6
converted to an -> enumerated : 1
converted to an -> and : 2
converted to an -> if : 1
converted to an -> the : 2
converted to an -> rvalue : 2
converted to an -> to : 1
converted to an -> object : 2
converted to an -> unsigned : 1
converted to an -> but : 1
to an enumerated -> you : 1
an enumerated you -> can : 1
enumerated you can -> use : 1
can use to -> cast : 2
can use to -> specialize : 1
use to cast -> an : 1
use to cast -> a : 2
to cast an -> integer : 1
to cast an -> expression : 1
cast an integer -> to : 2
an integer to -> an : 2
an integer to -> print : 1
an integer to -> a : 2
an integer to -> move : 2
integer to an -> enumeration : 1
integer to an -> you : 1
to an enumeration -> or : 1
an enumeration or -> cast : 1
enumeration or cast -> a : 1
or cast a -> value : 1
cast a value -> from : 1
a value from -> one : 1
a value from -> the : 1
a value from -> all : 1
value from one -> enumeration : 1
from one enumeration -> to : 1
one enumeration to -> a : 2
enumeration to a -> different : 2
a different for -> range : 1
a different for -> this : 1
a different for -> for : 1
different for range -> of : 1
for range of -> values : 1
of values for -> an : 2
of values for -> equality : 1
values for an -> enumeration : 1
values for an -> enumerated : 1
for an enumeration -> is : 1
enumeration is defined -> by : 1
is defined by -> the : 4
defined by the -> smallest : 1
defined by the -> standard : 2
defined by the -> so : 1
defined by the -> and : 1
defined by the -> the : 1
by the smallest -> and : 1
the smallest and -> largest : 1
smallest and largest -> bitfields : 1
and largest bitfields -> that : 1
largest bitfields that -> can : 1
bitfields that can -> hold : 1
that can hold -> all : 2
that can hold -> any : 1
can hold all -> of : 1
can hold all -> the : 1
hold all of -> its : 1
all of its -> in : 1
all of its -> base : 1
all of its -> members : 1
all of its -> template : 1
all of its -> and : 1
of its in -> more : 1
of its in -> the : 2
its in more -> precise : 1
in more precise -> let : 1
more precise let -> the : 1
precise let the -> largest : 1
let the largest -> and : 1
the largest and -> smallest : 2
the largest and -> all : 1
largest and smallest -> values : 1
largest and smallest -> enumerators : 1
and smallest values -> of : 1
smallest values of -> the : 1
of the enumerated -> type : 1
of the enumerated -> solid : 1
the enumerated type -> be : 1
enumerated type be -> and : 1
type be and -> the : 1
be and the -> largest : 1
and the largest -> enumerator : 1
the largest enumerator -> is : 1
largest enumerator is -> and : 1
enumerator is and -> the : 1
is and the -> smallest : 1
is and the -> type : 1
is and the -> other : 1
is and the -> loop : 1
is and the -> definition : 1
is and the -> constructor : 1
is and the -> grouping : 1
is and the -> code : 1
is and the -> second : 6
is and the -> program : 1
is and the -> iso : 1
is and the -> remaining : 1
is and the -> character : 1
is and the -> allows : 1
is and the -> flag : 1
and the smallest -> is : 1
and the smallest -> value : 3
and the smallest -> representable : 1
the smallest is -> using : 1
smallest is using -> complement : 1
is using complement -> representation : 1
using complement representation -> most : 1
complement representation most -> common : 1
representation most common -> integer : 1
most common integer -> is : 1
common integer is -> the : 1
integer is the -> smallest : 1
integer is the -> number : 1
the smallest such -> that : 3
smallest such that -> if : 1
smallest such that -> and : 1
smallest such that -> is : 1
such that if -> is : 1
such that if -> both : 1
such that if -> there : 1
that if is -> not : 4
that if is -> inserted : 1
that if is -> in : 5
that if is -> it : 1
if is not -> with : 1
if is not -> actually : 1
if is not -> listed : 1
if is not -> values : 1
if is not -> a : 4
if is not -> the : 7
if is not -> null : 1
if is not -> is : 5
if is not -> present : 2
if is not -> calls : 3
if is not -> and : 1
if is not -> const : 1
if is not -> in : 1
if is not -> tries : 1
if is not -> equivalent : 1
is not with -> no : 1
not with no -> other : 1
with no other -> the : 1
no other the -> of : 1
other the of -> values : 1
the of values -> for : 1
for an enumerated -> type : 1
an enumerated type -> can : 1
an enumerated type -> is : 2
an enumerated type -> does : 1
an enumerated type -> enum : 1
an enumerated type -> that : 3
enumerated type can -> be : 1
type can be -> larger : 1
type can be -> hard : 1
type can be -> converted : 4
type can be -> implicitly : 1
type can be -> a : 1
type can be -> initialized : 1
type can be -> compared : 1
type can be -> an : 1
can be larger -> than : 2
be larger than -> the : 2
larger than the -> range : 1
larger than the -> number : 1
larger than the -> declared : 1
larger than the -> old : 1
than the range -> of : 1
range of enumerator -> but : 1
of enumerator but -> the : 1
enumerator but the -> exact : 1
but the exact -> range : 1
the exact range -> depends : 1
exact range depends -> on : 1
range depends on -> the : 1
on the representation -> of : 1
the representation of -> integers : 1
the representation of -> a : 3
the representation of -> numbers : 1
representation of integers -> on : 1
of integers on -> the : 1
integers on the -> host : 1
on the host -> so : 1
on the host -> with : 1
the host so -> it : 1
host so it -> is : 1
so it is -> all : 1
so it is -> rarely : 2
so it is -> not : 3
so it is -> important : 1
so it is -> which : 1
so it is -> most : 1
it is all -> values : 1
is all values -> between : 1
is all values -> in : 1
all values between -> the : 1
values between the -> largest : 1
between the largest -> and : 1
and smallest enumerators -> are : 1
smallest enumerators are -> always : 1
enumerators are always -> even : 1
are always even -> if : 2
always even if -> they : 1
always even if -> you : 1
if they do -> not : 2
if they do -> in : 1
they do not -> have : 1
they do not -> always : 1
they do not -> work : 1
they do not -> remove : 1
they do not -> obey : 1
they do not -> reflect : 1
they do not -> apply : 1
they do not -> set : 1
they do not -> allow : 1
not have corresponding -> the : 1
have corresponding the -> following : 1
corresponding the following -> the : 1
following the enumeration -> has : 1
the enumeration has -> the : 1
the enumeration has -> four : 1
enumeration has the -> range : 1
has the range -> to : 1
the range to -> your : 1
the range to -> partition : 1
the range to -> form : 1
the range to -> the : 6
the range to -> a : 1
the range to -> macro : 1
range to your -> program : 1
to your program -> might : 1
your program might -> not : 1
program might not -> assign : 1
might not assign -> any : 1
not assign any -> meaning : 1
assign any meaning -> to : 1
any meaning to -> but : 1
meaning to but -> it : 1
to but it -> is : 1
it is semantically -> valid : 1
is semantically valid -> in : 1
semantically valid in -> a : 1
valid in a -> sign : 1
in a sign -> with : 1
a sign with -> no : 1
sign with no -> enumeration : 1
with no enumeration -> has : 1
no enumeration has -> an : 1
enumeration has an -> underlying : 1
has an underlying -> integral : 1
an underlying integral -> type : 1
underlying integral type -> that : 1
integral type that -> can : 3
integral type that -> defines : 1
integral type that -> would : 1
integral type that -> represents : 7
integral type that -> has : 1
type that can -> store : 1
type that can -> hold : 2
type that can -> be : 2
type that can -> represent : 1
type that can -> point : 1
that can store -> all : 1
that can store -> into : 2
that can store -> duplicate : 1
can store all -> of : 1
store all of -> the : 1
of the enumerator -> the : 1
the enumerator the -> actual : 1
enumerator the actual -> underlying : 1
the actual underlying -> type : 1
actual underlying type -> is : 1
underlying type is -> so : 1
type is so -> the : 2
is so the -> size : 1
is so the -> type : 1
is so the -> expression : 1
is so the -> candidate : 1
is so the -> standard : 1
is so the -> result : 1
is so the -> relative : 2
so the size -> of : 2
of an enumerated -> type : 1
type is likewise -> standard : 1
is likewise standard -> library : 1
likewise standard library -> has : 1
standard library has -> a : 2
standard library has -> the : 1
standard library has -> each : 1
standard library has -> several : 1
standard library has -> very : 1
library has a -> type : 1
library has a -> basic : 1
library has a -> few : 1
has a type -> called : 1
has a type -> conversion : 1
a type called -> which : 1
type called which -> might : 1
called which might -> be : 1
which might be -> implemented : 1
which might be -> defined : 1
which might be -> later : 1
which might be -> at : 1
which might be -> useful : 1
which might be -> a : 1
might be implemented -> as : 1
be implemented as -> an : 2
be implemented as -> a : 4
be implemented as -> enumerated : 1
be implemented as -> inline : 1
implemented as an -> implementations : 1
implemented as an -> integral : 1
implemented as an -> inline : 1
as an implementations -> are : 1
an implementations are -> also : 1
implementations are also -> see : 1
are also see -> in : 1
also see in -> for : 1
see in for -> the : 2
see in for -> information : 1
see in for -> algorithms : 1
see in for -> overridden : 1
see in for -> more : 6
see in for -> perform : 1
see in for -> character : 1
see in for -> specialization : 1
see in for -> section : 1
see in for -> if : 2
see in for -> which : 1
see in for -> streamsize : 1
in for the -> enumeration : 1
in for the -> standard : 1
in for the -> default : 1
in for the -> container : 1
in for the -> file : 1
in for the -> its : 1
for the enumeration -> has : 1
enumeration has four -> which : 1
has four which -> can : 1
four which can -> be : 1
used as bits -> in : 1
as bits in -> a : 1
bits in a -> bitmask : 1
in a bitmask -> and : 1
a bitmask and -> combined : 1
bitmask and combined -> using : 1
and combined using -> bitwise : 1
combined using bitwise -> iostate : 1
combined using bitwise -> categories : 1
using bitwise iostate -> enumeration : 1
bitwise iostate enumeration -> can : 1
iostate enumeration can -> clearly : 1
enumeration can clearly -> fit : 1
can clearly fit -> in : 1
clearly fit in -> a : 1
fit in a -> because : 1
fit in a -> the : 2
in a because -> the : 1
a because the -> range : 1
because the range -> of : 1
of values is -> to : 1
values is to -> but : 1
is to but -> the : 1
to but the -> compiler : 1
the compiler is -> free : 8
the compiler is -> prevented : 1
the compiler is -> not : 3
the compiler is -> also : 1
compiler is free -> to : 10
is free to -> use : 2
is free to -> reorder : 1
is free to -> request : 1
is free to -> construct : 1
is free to -> ignore : 2
is free to -> call : 1
is free to -> assume : 1
is free to -> make : 2
is free to -> substitute : 2
is free to -> predefine : 1
is free to -> implement : 1
is free to -> define : 1
is free to -> terminate : 1
is free to -> modify : 1
is free to -> optimize : 2
free to use -> or : 1
free to use -> different : 1
to use or -> the : 1
use or the -> flavors : 1
or the flavors -> of : 1
the flavors of -> these : 1
flavors of these -> types : 1
of these types -> as : 1
these types as -> the : 1
types as the -> underlying : 1
types as the -> largest : 1
as the underlying -> enumerations : 1
the underlying enumerations -> can : 1
underlying enumerations can -> be : 1
enumerations can be -> promoted : 1
be promoted to -> any : 1
be promoted to -> an : 2
be promoted to -> which : 1
promoted to any -> arithmetic : 1
to any arithmetic -> operation : 1
any arithmetic operation -> can : 1
arithmetic operation can -> be : 1
operation can be -> performed : 1
operation can be -> costly : 1
can be performed -> on : 1
be performed on -> enumerated : 1
performed on enumerated -> but : 1
on enumerated but -> the : 1
enumerated but the -> result : 1
but the result -> is : 1
the result is -> always : 1
the result is -> rules : 1
the result is -> an : 29
the result is -> not : 2
the result is -> if : 6
the result is -> the : 10
the result is -> in : 3
the result is -> determined : 2
the result is -> too : 1
the result is -> with : 1
the result is -> a : 5
the result is -> equal : 2
the result is -> standard : 1
the result is -> converted : 2
the result is -> second : 1
the result is -> still : 1
the result is -> permutation : 4
the result is -> and : 1
the result is -> out : 1
the result is -> dictated : 1
result is always -> an : 1
is always an -> if : 1
always an if -> you : 1
an if you -> want : 1
an if you -> use : 2
if you want -> to : 14
if you want -> the : 1
if you want -> more : 2
want to permit -> certain : 1
to permit certain -> operations : 1
permit certain operations -> that : 1
certain operations that -> produce : 1
operations that produce -> enumeration : 1
that produce enumeration -> you : 1
produce enumeration you -> must : 1
enumeration you must -> overload : 1
you must overload -> the : 1
you must overload -> so : 1
must overload the -> operators : 1
overload the operators -> for : 2
the operators for -> your : 1
the operators for -> is : 1
the operators for -> a : 1
operators for your -> enumerated : 1
for your enumerated -> for : 1
your enumerated for -> you : 1
enumerated for you -> might : 1
for you might -> want : 1
for you might -> be : 1
for you might -> install : 1
want to overload -> the : 2
to overload the -> bitwise : 1
to overload the -> and : 1
to overload the -> increment : 1
to overload the -> scalar : 1
to overload the -> shift : 1
overload the bitwise -> but : 1
the bitwise but -> not : 1
bitwise but not -> the : 1
but not the -> arithmetic : 1
but not the -> other : 2
not the arithmetic -> for : 1
the arithmetic for -> the : 1
arithmetic for the -> type : 1
for the type -> in : 1
for the type -> of : 1
for the type -> same : 1
for the type -> and : 2
the type in -> the : 1
in the preceding -> the : 1
the preceding the -> type : 1
the preceding the -> implicit : 1
preceding the type -> does : 1
the type does -> not : 3
not need any -> additional : 1
need any additional -> the : 1
any additional the -> comparison : 1
additional the comparison -> operators : 1
the comparison operators -> work : 1
comparison operators work -> just : 1
operators work just -> fine : 1
work just fine -> by : 1
just fine by -> implicitly : 1
fine by implicitly -> converting : 1
by implicitly converting -> values : 1
implicitly converting values -> to : 1
converting values to -> other : 1
values to other -> enumerations : 1
to other enumerations -> might : 1
other enumerations might -> call : 1
enumerations might call -> for : 1
might call for -> overloading : 1
call for overloading -> and : 1
for overloading and -> operators : 1
for overloading and -> double : 1
overloading and operators -> to : 1
and operators to -> the : 1
operators to the -> and : 1
to the and -> functions : 1
to the and -> then : 1
to the and -> the : 3
to the and -> using : 1
to the and -> for : 1
to the and -> macro : 1
to the and -> parts : 1
to the and -> returns : 2
the and functions -> in : 1
the and functions -> for : 2
the and functions -> that : 1
and functions in -> operators : 1
and functions in -> the : 1
functions in operators -> for : 1
in operators for -> shows : 1
operators for shows -> how : 1
for shows how -> operators : 1
shows how operators -> can : 1
shows how operators -> are : 1
how operators can -> be : 1
operators can be -> overloaded : 1
operators can be -> member : 1
operators can be -> and : 1
operators can be -> daunting : 1
can be overloaded -> for : 1
can be overloaded -> with : 1
can be overloaded -> described : 1
be overloaded for -> operators : 1
overloaded for operators -> for : 1
for operators for -> explicitly : 1
operators for explicitly -> cast : 1
for explicitly cast -> to : 1
explicitly cast to -> to : 1
cast to to -> avoid : 1
cast to to -> in : 1
to to avoid -> infinite : 1
to to avoid -> automatic : 1
to to avoid -> computing : 1
to avoid infinite -> inline : 1
avoid infinite inline -> iostate : 1
infinite inline iostate -> iostate : 1
inline iostate iostate -> return : 1
iostate iostate return -> inline : 1
iostate return inline -> iostate : 1
return inline iostate -> a : 1
inline iostate a -> a : 1
iostate a a -> return : 1
a a return -> repeat : 1
a return repeat -> for : 1
return repeat for -> and : 1
repeat for and -> int : 1
for and int -> iostate : 1
and int iostate -> err : 1
int iostate err -> if : 1
iostate err if -> err : 1
err if err -> is : 1
if err is -> short : 1
err is short -> for : 1
is short for -> plain : 1
short for plain -> old : 1
for plain old -> the : 1
plain old the -> fundamental : 1
old the fundamental -> types : 1
fundamental types and -> enumerated : 1
types and enumerated -> types : 1
and enumerated types -> are : 1
enumerated types are -> as : 1
types are as -> are : 2
types are as -> shown : 1
are as are -> pointers : 2
are as are -> the : 1
as are pointers -> and : 1
as are pointers -> to : 1
are pointers and -> arrays : 1
pointers and arrays -> of : 1
and arrays of -> pod : 1
and arrays of -> trivial : 1
arrays of pod -> you : 1
of pod you -> can : 1
pod you can -> declare : 1
declare a pod -> which : 1
a pod which -> is : 1
pod which is -> a : 1
is a or -> that : 1
is a or -> ensures : 1
a or that -> uses : 1
or that uses -> only : 1
that uses only -> pod : 1
uses only pod -> types : 1
only pod types -> for : 1
pod types for -> its : 1
types for its -> nonstatic : 1
for its nonstatic -> data : 1
its nonstatic data -> a : 1
its nonstatic data -> members : 2
nonstatic data a -> pod : 1
data a pod -> union : 1
a pod union -> is : 1
pod union is -> a : 1
union is a -> of : 1
is a of -> pod : 1
is a of -> class : 2
is a of -> the : 1
is a of -> in : 1
a of pod -> types : 1
of pod types -> are : 1
pod types are -> special : 1
types are special -> in : 1
are special in -> several : 1
special in several -> pod : 1
in several pod -> object : 1
several pod object -> can : 1
pod object can -> be : 5
pod object can -> also : 2
object can be -> copied : 1
object can be -> safely : 2
object can be -> initialized : 3
object can be -> so : 1
object can be -> treated : 1
object can be -> converted : 1
object can be -> made : 1
object can be -> shared : 2
object can be -> returned : 1
can be copied -> byte : 2
can be copied -> and : 1
can be copied -> or : 1
be copied byte -> for : 2
copied byte for -> byte : 2
byte for byte -> and : 2
for byte and -> retain : 2
byte and retain -> its : 2
and retain its -> in : 2
retain its in -> a : 2
its in a -> pod : 2
in a pod -> object : 2
a pod object -> can : 4
a pod object -> is : 3
can be safely -> copied : 2
be safely copied -> to : 2
safely copied to -> an : 2
copied to an -> array : 2
to an array -> of : 4
to an array -> or : 1
array of or -> and : 2
array of or -> a : 1
of or and -> when : 2
or and when -> copied : 2
and when copied -> it : 2
when copied it -> retains : 2
copied it retains -> its : 2
it retains its -> original : 2
retains its original -> a : 2
retains its original -> if : 1
its original a -> pod : 2
original a pod -> object : 2
object can also -> be : 2
can also be -> copied : 2
can also be -> used : 7
can also be -> declared : 1
can also be -> nested : 1
can also be -> if : 1
can also be -> one : 1
can also be -> a : 1
also be copied -> by : 2
be copied by -> calling : 2
copied by calling -> the : 2
by calling the -> copy : 2
by calling the -> default : 2
by calling the -> function : 1
by calling the -> appropriate : 1
by calling the -> base : 1
by calling the -> member : 1
by calling the -> the : 7
by calling the -> adapted : 1
by calling the -> locale : 1
by calling the -> a : 1
by calling the -> type : 1
by calling the -> setting : 1
by calling the -> equivalent : 4
by calling the -> sort : 1
by calling the -> temporary : 1
by calling the -> plain : 1
by calling the -> object : 1
by calling the -> number : 1
calling the copy -> has : 2
the copy has -> the : 2
copy has the -> same : 2
the same value -> as : 9
the same value -> using : 1
the same value -> for : 1
same value as -> the : 6
same value as -> or : 2
same value as -> function : 1
same value as -> is : 1
value as the -> local : 2
value as the -> c : 1
value as the -> corresponding : 1
value as the -> first : 3
value as the -> second : 1
as the local -> pod : 2
the local pod -> object : 2
local pod object -> without : 2
pod object without -> an : 2
object without an -> initializer : 2
without an initializer -> is : 3
an initializer is -> that : 1
an initializer is -> class : 1
an initializer is -> optional : 1
an initializer is -> not : 1
an initializer is -> left : 1
initializer is that -> its : 1
is that its -> value : 1
that its value -> is : 1
its value is -> a : 2
its value is -> an : 1
its value is -> compared : 1
value is a -> pod : 1
value is a -> pointer : 12
value is a -> expression : 1
value is a -> an : 1
value is a -> pair : 2
value is a -> value : 1
value is a -> null : 1
value is a -> subsequent : 2
value is a -> copy : 1
value is a -> as : 3
value is a -> number : 2
value is a -> of : 1
value is a -> single : 1
value is a -> new : 2
is a pod -> type : 1
is a pod -> the : 1
a pod type -> in : 2
a pod type -> is : 1
a pod type -> if : 1
pod type in -> a : 2
type in a -> expression : 2
type in a -> call : 1
in a expression -> without : 1
in a expression -> is : 1
a expression without -> an : 1
expression without an -> initializer : 1
initializer is class -> is : 1
is class is -> initialized : 1
class is initialized -> in : 1
class is initialized -> exactly : 1
is initialized in -> these : 1
is initialized in -> a : 1
initialized in these -> situations : 1
in these situations -> by : 1
these situations by -> calling : 1
situations by calling -> its : 1
by calling its -> default : 3
by calling its -> copy : 1
calling its default -> when : 1
calling its default -> a : 1
calling its default -> if : 1
its default when -> initialized : 1
default when initialized -> with : 1
when initialized with -> an : 1
initialized with an -> empty : 2
initialized with an -> object : 1
initialized with an -> and : 1
an empty a -> pod : 1
an empty a -> string : 1
an empty a -> of : 1
an empty a -> vector : 1
empty a pod -> object : 1
pod object is -> initialized : 2
pod object is -> a : 1
pod object is -> that : 1
object is initialized -> to : 5
object is initialized -> with : 1
object is initialized -> when : 1
object is initialized -> by : 2
is initialized to -> or : 1
is initialized to -> refer : 1
is initialized to -> empty : 1
is initialized to -> when : 1
is initialized to -> a : 3
is initialized to -> for : 1
is initialized to -> pod : 1
is initialized to -> its : 1
is initialized to -> the : 4
is initialized to -> read : 1
is initialized to -> overwrite : 1
is initialized to -> an : 1
initialized to or -> a : 1
to or a -> null : 1
to or a -> boolean : 1
to or a -> literal : 1
or a null -> statement : 1
or a null -> pointer : 11
a null statement -> can : 1
null statement can -> safely : 1
statement can safely -> branch : 2
can safely branch -> across : 1
can safely branch -> into : 1
safely branch across -> declarations : 1
branch across declarations -> of : 1
across declarations of -> uninitialized : 1
declarations of uninitialized -> pod : 2
of uninitialized pod -> for : 1
of uninitialized pod -> a : 1
uninitialized pod for -> more : 1
uninitialized pod for -> i : 1
pod for more -> pod : 1
for more pod -> object : 1
more pod object -> can : 1
can be initialized -> using : 3
can be initialized -> to : 1
can be initialized -> by : 1
can be initialized -> in : 1
can be initialized -> with : 1
be initialized using -> an : 1
be initialized using -> syntax : 2
initialized using an -> aggregate : 1
using an aggregate -> later : 1
an aggregate later -> in : 1
aggregate later in -> this : 1
chapter for for -> more : 1
for for more -> information : 2
information about pod -> especially : 1
information about pod -> and : 1
information about pod -> see : 1
information about pod -> initialize : 1
information about pod -> types : 1
information about pod -> type : 1
information about pod -> in : 2
about pod especially -> pod : 1
pod especially pod -> declares : 1
especially pod declares -> a : 1
pod declares a -> synonym : 1
declares a synonym -> for : 1
an existing a -> is : 1
existing a is -> like : 1
a is like -> declaring : 1
a is like -> a : 1
a is like -> an : 1
is like declaring -> a : 1
like declaring a -> with : 1
declaring a with -> the : 1
a with the -> type : 1
a with the -> keyword : 1
a with the -> standard : 1
with the type -> name : 1
with the type -> of : 2
with the type -> but : 1
with the type -> a : 1
with the type -> specifier : 2
with the type -> is : 1
type name taking -> the : 1
name taking the -> place : 1
taking the place -> of : 1
the place of -> the : 1
place of the -> variable : 1
place of the -> cast : 1
of the variable -> and : 1
the variable and -> with : 1
variable and with -> a : 1
and with a -> keyword : 1
with a keyword -> out : 1
a keyword out -> in : 1
keyword out in -> more : 1
out in more -> is : 1
in more is -> a : 1
in more is -> an : 1
more is a -> specifier : 1
more is a -> template : 1
is a specifier -> in : 1
a specifier in -> a : 1
specifier in a -> and : 1
specifier in a -> friend : 1
in a and -> it : 1
in a and -> so : 1
in a and -> these : 1
in a and -> print : 1
a and it -> must : 1
and it must -> be : 1
must be combined -> with : 1
be combined with -> type : 1
be combined with -> to : 2
be combined with -> represents : 1
combined with type -> specifiers : 1
with type specifiers -> and : 1
type specifiers and -> optional : 1
type specifiers and -> the : 1
type specifiers and -> statement : 1
type specifiers and -> array : 1
type specifiers and -> with : 1
specifiers and optional -> and : 1
and optional and -> qualifiers : 1
optional and qualifiers -> but : 1
and qualifiers but -> no : 1
qualifiers but no -> storage : 1
but no storage -> class : 1
no storage class -> a : 1
storage class a -> list : 1
class a list -> of : 1
list of declarators -> follow : 1
of declarators follow -> the : 1
declarators follow the -> the : 1
follow the the -> next : 1
the the next -> for : 1
the the next -> item : 1
the next for -> more : 2
the next for -> a : 1
the next for -> dp : 1
the next for -> if : 1
next for more -> information : 1
next for more -> is : 1
information about storage -> class : 4
information about storage -> classes : 1
information about storage -> storage : 1
about storage class -> and : 3
about storage class -> specifiers : 1
storage class and -> declarator : 1
storage class and -> can : 1
storage class and -> specifier : 1
class and declarator -> of : 1
and declarator of -> a : 1
declarator of a -> declaration : 1
of a declaration -> is : 1
declaration is similar -> to : 1
is similar to -> that : 1
is similar to -> but : 1
is similar to -> the : 5
is similar to -> a : 3
is similar to -> an : 1
is similar to -> using : 1
is similar to -> throwing : 1
is similar to -> calling : 7
is similar to -> except : 3
is similar to -> in : 7
is similar to -> their : 1
similar to that -> for : 1
similar to that -> shown : 1
to that for -> an : 1
that for an -> object : 1
for an object -> except : 1
for an object -> or : 1
for an object -> being : 1
for an object -> of : 1
for an object -> corresponds : 1
for an object -> whose : 1
an object except -> you : 1
object except you -> cannot : 1
except you cannot -> have : 1
except you cannot -> usually : 1
cannot have an -> the : 1
cannot have an -> if : 1
have an the -> following : 1
have an the -> type : 1
an the following -> are : 1
an the following -> type : 1
following are some -> examples : 4
following are some -> simple : 1
following are some -> additional : 1
following are some -> highlights : 1
examples of unsigned -> typedef : 1
of unsigned typedef -> long : 1
unsigned typedef long -> int : 2
typedef long int -> typedef : 1
typedef long int -> using : 1
long int typedef -> double : 1
int typedef double -> typedef : 1
typedef double typedef -> void : 1
double typedef void -> typedef : 1
typedef void typedef -> signed : 1
typedef void typedef -> void : 1
void typedef signed -> char : 1
typedef signed char -> the : 1
signed char the -> keyword : 1
char the keyword -> appears : 1
the keyword appears -> before : 1
keyword appears before -> the : 1
appears before the -> type : 1
appears before the -> first : 1
appears before the -> input : 1
before the type -> behaves : 1
the type behaves -> as : 1
type behaves as -> a : 1
behaves as a -> storage : 1
behaves as a -> normal : 1
as a storage -> class : 1
a storage class -> specifier : 1
a storage class -> you : 1
storage class specifier -> later : 1
storage class specifier -> is : 2
storage class specifier -> are : 1
storage class specifier -> declares : 1
storage class specifier -> marks : 1
storage class specifier -> can : 1
class specifier later -> in : 1
specifier later in -> this : 2
class and can -> be : 1
can be mixed -> in : 1
can be mixed -> with : 1
be mixed in -> any : 1
mixed in any -> order : 1
in any order -> with : 2
any order with -> other : 2
order with other -> type : 1
order with other -> function : 1
with other type -> for : 1
with other type -> specifiers : 1
other type for -> the : 1
for the following -> are : 2
for the following -> two : 2
for the following -> is : 1
for the following -> int : 1
for the following -> code : 1
for the following -> the : 1
for the following -> conventions : 1
for the following -> function : 1
following are identical -> and : 1
are identical and -> unsigned : 1
identical and unsigned -> conventional : 1
and unsigned conventional -> long : 1
unsigned conventional long -> typedef : 1
conventional long typedef -> int : 1
long typedef int -> unsigned : 1
typedef int unsigned -> but : 1
int unsigned but -> is : 1
unsigned but is -> especially : 1
but is especially -> helpful : 1
is especially helpful -> with : 1
especially helpful with -> complicated : 1
helpful with complicated -> such : 1
with complicated such -> as : 1
complicated such as -> function : 1
complicated such as -> matrix : 1
such as function -> pointer : 1
such as function -> you : 1
such as function -> converts : 1
as function pointer -> declarations : 1
function pointer declarations -> and : 1
function pointer declarations -> with : 3
pointer declarations and -> template : 1
declarations and template -> they : 1
and template they -> help : 1
template they help -> the : 1
they help the -> author : 1
they help the -> reader : 1
help the author -> who : 1
the author who -> must : 1
author who must -> concoct : 1
who must concoct -> the : 1
must concoct the -> and : 1
concoct the and -> they : 1
the and they -> help : 1
and they help -> the : 1
help the reader -> who : 1
the reader who -> must : 1
reader who must -> later : 1
who must later -> tease : 1
must later tease -> apart : 1
later tease apart -> the : 1
tease apart the -> morass : 1
apart the morass -> of : 1
the morass of -> and : 1
morass of and -> angle : 1
of and angle -> the : 1
and angle the -> standard : 1
angle the standard -> library : 1
standard library uses -> them : 1
standard library uses -> which : 1
library uses them -> also : 1
uses them also -> function : 1
them also function -> pointer : 1
also function pointer -> declarations : 1
pointer declarations with -> does : 1
pointer declarations with -> shows : 1
pointer declarations with -> array : 1
declarations with does -> not : 1
with does not -> create : 1
does not create -> a : 2
not create a -> new : 2
create a new -> type : 2
a new type -> the : 1
a new type -> and : 1
new type the -> way : 1
type the way -> and : 1
the way and -> it : 1
way and it -> simply : 1
and it simply -> declares : 1
it simply declares -> a : 1
simply declares a -> new : 1
declares a new -> name : 1
declares a new -> enumerated : 1
a new name -> for : 1
new name for -> an : 1
name for an -> existing : 1
an existing function -> declarations : 1
existing function declarations -> for : 1
function declarations for -> which : 1
declarations for which -> the : 1
declarations for which -> it : 1
for which the -> parameters : 1
for which the -> right : 1
for which the -> type : 1
for which the -> storage : 1
for which the -> predicate : 2
for which the -> array : 1
which the parameters -> differ : 1
the parameters differ -> only : 1
parameters differ only -> as : 1
differ only as -> are : 1
only as are -> not : 1
as are not -> actually : 1
are not actually -> different : 1
not actually different -> the : 1
actually different the -> two : 1
different the two -> function : 1
the two function -> declarations : 1
two function declarations -> in : 1
function declarations in -> the : 1
declarations in the -> following : 1
declarations in the -> global : 1
declarations in the -> first : 1
declarations in the -> a : 1
declarations in the -> header : 1
the following example -> are : 2
the following example -> shows : 6
the following example -> the : 1
the following example -> has : 1
following example are -> really : 1
following example are -> equal : 1
example are really -> two : 1
are really two -> declarations : 1
really two declarations -> of : 1
two declarations of -> the : 2
declarations of the -> same : 5
declarations of the -> unsigned : 1
declarations of the -> standard : 1
declarations of the -> various : 1
declarations of the -> overloaded : 1
of the same -> unsigned : 1
of the same -> namespace : 1
of the same -> shows : 1
of the same -> if : 1
of the same -> or : 2
of the same -> different : 1
of the same -> elements : 1
of the same -> they : 1
of the same -> including : 1
of the same -> the : 2
of the same -> function : 4
of the same -> member : 1
of the same -> equality : 1
of the same -> name : 2
of the same -> and : 1
of the same -> character : 1
of the same -> class : 1
of the same -> do : 1
of the same -> are : 1
of the same -> allocator : 1
the same unsigned -> int : 1
same unsigned int -> uint : 1
unsigned int uint -> two : 1
int uint two -> declarations : 1
uint two declarations -> of : 1
of the unsigned -> same : 1
the unsigned same -> because : 1
unsigned same because -> you : 1
same because you -> cannot : 1
because you cannot -> overload : 1
because you cannot -> obtain : 1
because you cannot -> dereference : 1
because you cannot -> measure : 1
because you cannot -> use : 1
you cannot overload -> an : 2
you cannot overload -> operators : 1
cannot overload an -> operator : 2
overload an operator -> on : 2
an operator on -> fundamental : 1
an operator on -> synonyms : 1
operator on fundamental -> you : 1
on fundamental you -> cannot : 1
fundamental you cannot -> overload : 1
operator on synonyms -> for : 1
on synonyms for -> fundamental : 1
synonyms for fundamental -> for : 1
for fundamental for -> both : 1
fundamental for both -> the : 1
for both the -> following : 1
both the following -> attempts : 1
the following attempts -> to : 1
following attempts to -> overload : 1
attempts to overload -> result : 1
to overload result -> in : 1
overload result in -> an : 1
result in an -> error : 1
in an error -> typedef : 1
in an error -> because : 1
in an error -> the : 1
an error typedef -> int : 1
error typedef int -> integer : 1
typedef int integer -> programmers : 1
int integer programmers -> are : 1
integer programmers are -> accustomed : 1
programmers are accustomed -> to : 3
are accustomed to -> declaring : 1
are accustomed to -> using : 2
accustomed to declaring -> for : 1
to declaring for -> and : 1
declaring for and -> but : 1
for and but -> such : 1
for and but -> that : 1
and but such -> are : 1
but such are -> not : 1
such are not -> necessary : 1
are not necessary -> in : 1
not necessary in -> in : 1
necessary in in -> the : 1
in in the -> and : 1
in in the -> declarations : 1
in the and -> names : 1
in the and -> you : 1
in the and -> a : 1
in the and -> suppose : 1
in the and -> that : 1
in the and -> before : 1
in the and -> the : 1
the and names -> are : 1
the and names -> in : 1
names are separate -> from : 1
are separate from -> the : 3
separate from the -> type : 1
separate from the -> unnamed : 1
separate from the -> virtual : 1
separate from the -> class : 1
from the type -> but : 1
from the type -> for : 1
from the type -> of : 1
the type but -> in : 1
the type but -> the : 1
type but in -> the : 1
but in the -> declaration : 1
but in the -> definition : 1
but in the -> traditional : 1
but in the -> scope : 1
in the declaration -> of : 1
in the declaration -> or : 2
in the declaration -> enforces : 1
of a or -> adds : 1
of a or -> elaborated : 1
of a or -> it : 1
of a or -> an : 2
of a or -> a : 1
a or adds -> the : 1
or adds the -> type : 1
adds the type -> to : 1
the type to -> the : 1
the type to -> be : 1
type to the -> type : 1
type to the -> and : 1
to the type -> such : 1
to the type -> of : 8
to the type -> are : 1
to the type -> characteristics : 1
the type such -> a : 1
type such a -> is : 1
such a is -> the : 1
a is the -> following : 1
a is the -> syntax : 1
a is the -> better : 1
a is the -> default : 1
a is the -> size : 1
is the following -> example : 1
is the following -> is : 1
following example shows -> being : 1
following example shows -> several : 2
following example shows -> a : 2
following example shows -> how : 1
following example shows -> one : 1
example shows being -> used : 1
shows being used -> to : 1
being used to -> create : 1
used to create -> the : 1
to create the -> synonym : 1
create the synonym -> for : 1
the synonym for -> the : 1
synonym for the -> point : 1
synonym for the -> original : 2
synonym for the -> class : 1
for the point -> int : 1
the point int -> typedef : 1
point int typedef -> struct : 1
point int typedef -> point : 1
int typedef struct -> point : 1
typedef struct point -> not : 1
struct point not -> needed : 1
point not needed -> in : 1
not needed in -> but : 1
needed in but -> harmless : 1
in but harmless -> point : 1
but harmless point -> type : 1
harmless point type -> type : 1
point type type -> type : 1
type type type -> begins : 1
type type type -> type : 1
type type type -> conversion : 1
type type begins -> with : 1
type begins with -> an : 1
begins with an -> introductory : 1
with an introductory -> or : 3
an introductory or -> the : 1
an introductory or -> if : 1
an introductory or -> there : 1
introductory or the -> keyword : 1
or the keyword -> is : 1
the keyword is -> followed : 1
the keyword is -> used : 1
the keyword is -> covered : 1
the keyword is -> interchangeable : 4
keyword is followed -> by : 1
by a qualified -> name : 1
by a qualified -> type : 2
a qualified name -> of : 3
a qualified name -> the : 1
a qualified name -> when : 1
qualified name of -> a : 3
name of a -> suitable : 1
name of a -> or : 1
name of a -> an : 1
name of a -> destructor : 1
name of a -> member : 2
name of a -> type : 1
name of a -> dependent : 1
name of a -> value : 1
name of a -> const : 1
name of a -> special : 1
name of a -> day : 1
name of a -> either : 1
name of a -> function : 1
of a suitable -> that : 1
a suitable that -> is : 1
suitable that is -> followed : 1
followed by the -> name : 2
followed by the -> type : 1
followed by the -> placement : 1
followed by the -> types : 1
followed by the -> operator : 3
followed by the -> class : 1
followed by the -> template : 1
followed by the -> optional : 1
followed by the -> specialized : 1
followed by the -> directive : 1
followed by the -> the : 1
followed by the -> elements : 1
followed by the -> unit : 1
by the name -> of : 2
the name of -> an : 4
the name of -> a : 10
the name of -> each : 1
the name of -> its : 1
the name of -> the : 8
an is followed -> by : 1
by a by -> a : 1
a by a -> and : 1
by a and -> by : 1
by a and -> facets : 1
a and by -> a : 1
and by a -> the : 1
by a the -> keyword : 1
by a the -> function : 1
a the keyword -> is : 2
keyword is used -> only : 1
keyword is used -> in : 1
is used only -> in : 2
is used only -> as : 2
is used only -> by : 1
is used only -> to : 1
is used only -> when : 1
used only in -> templates : 1
used only in -> the : 4
used only in -> functions : 1
used only in -> nonstatic : 1
used only in -> overloaded : 1
only in templates -> and : 1
in templates and -> is : 1
templates and is -> followed : 1
name that must -> be : 1
be a type -> name : 1
be a type -> a : 1
be a type -> that : 1
a type name -> in : 1
type name in -> a : 2
name in a -> template : 1
name in a -> separate : 1
name in a -> base : 1
name in a -> class : 1
in a template -> type : 1
in a template -> shows : 1
in a template -> erase : 1
in a template -> see : 1
a template type -> specifier : 1
template type specifier -> is : 1
type specifier is -> often : 1
specifier is often -> needed : 1
is often needed -> in : 1
often needed in -> template : 1
needed in template -> the : 1
in template the -> other : 1
template the other -> elaborated : 1
the other elaborated -> type : 1
other elaborated type -> specifiers : 1
elaborated type specifiers -> tend : 1
elaborated type specifiers -> that : 1
type specifiers tend -> to : 1
specifiers tend to -> be : 1
tend to be -> used : 1
to be used -> in : 1
to be used -> with : 2
to be used -> least : 1
to be used -> only : 1
to be used -> by : 3
used in headers -> that : 1
in headers that -> must : 2
in headers that -> are : 1
headers that must -> be : 2
must be compatible -> with : 1
be compatible with -> c : 1
compatible with c -> or : 1
with c or -> in : 1
c or in -> type : 1
or in type -> names : 1
in type names -> that : 1
type names that -> have : 1
hidden by other -> for : 1
hidden by other -> a : 1
by other for -> color : 1
other for color -> red : 1
for color red -> color : 1
color red color -> no : 1
red color no -> need : 1
color no need -> for : 1
no need for -> elaborated : 1
no need for -> add : 1
need for elaborated -> name : 1
for elaborated name -> enum : 1
elaborated name enum -> color : 1
name enum color -> function : 1
enum color function -> hides : 1
color function hides -> color : 1
function hides color -> enum : 1
hides color enum -> color : 1
color enum color -> c : 1
enum color c -> elaborated : 1
color c elaborated -> name : 1
c elaborated name -> is : 1
elaborated name is -> needed : 1
name is needed -> in : 1
is needed in -> is : 1
is needed in -> the : 1
is needed in -> a : 2
needed in is -> a : 1
in is a -> region : 1
in is a -> function : 1
in is a -> sequence : 1
region of storage -> with : 2
of storage with -> a : 2
storage with a -> a : 1
storage with a -> unlike : 1
with a a -> and : 1
with a a -> range : 1
with a a -> reverse : 1
a and possibly -> a : 1
and possibly a -> in : 1
possibly a in -> traditional : 1
a in traditional -> means : 1
in traditional means -> an : 1
traditional means an -> instance : 1
means an instance -> of : 2
instance of a -> but : 1
instance of a -> class : 4
instance of a -> function : 1
instance of a -> also : 1
instance of a -> when : 1
instance of a -> member : 1
instance of a -> the : 1
instance of a -> particular : 1
of a but -> in : 1
a but in -> the : 1
the definition is -> slightly : 1
the definition is -> preceded : 1
definition is slightly -> broader : 1
is slightly broader -> to : 1
slightly broader to -> include : 1
broader to include -> instances : 1
to include instances -> of : 1
include instances of -> any : 1
instances of any -> data : 1
of any data -> object : 1
any data object -> or : 1
data object or -> declaration : 1
object or declaration -> has : 1
or declaration has -> two : 1
declaration has two -> a : 1
has two a -> series : 1
has two a -> starting : 1
two a series -> of : 1
series of and -> a : 1
of and a -> list : 1
of and a -> value : 1
of and a -> temporary : 1
and a list -> of : 1
and a list -> definition : 1
list of each -> declarator : 1
of each declarator -> has : 1
each declarator has -> a : 1
declarator has a -> name : 1
has a name -> and : 1
has a name -> only : 2
name and an -> optional : 2
and an optional -> declaration : 1
and an optional -> use : 1
and an optional -> templates : 1
and an optional -> iterator : 1
and an optional -> directive : 1
an optional declaration -> begins : 1
optional declaration begins -> with : 1
declaration begins with -> a : 2
with a series -> of : 1
series of the -> series : 1
of the series -> can : 1
the series can -> contain : 1
series can contain -> a : 1
can contain a -> storage : 1
can contain a -> rich : 1
contain a storage -> and : 1
a storage and -> and : 1
storage and and -> the : 1
and and the -> in : 1
and and the -> and : 1
and and the -> compiler : 1
and the in -> any : 1
and the in -> the : 1
and the in -> particular : 1
the in any -> class : 1
in any class -> class : 1
any class class -> class : 1
class class class -> specifier : 1
class class class -> primary : 1
class class class -> input : 1
class class class -> wide : 2
class class class -> class : 297
class class class -> template : 53
class class class -> function : 21
class class class -> public : 1
class class class -> header : 3
class class class -> in : 8
class class class -> tag : 1
class class class -> base : 5
class class class -> facet : 2
class class class -> bool : 12
class class class -> void : 2
class class class -> output : 1
class class specifier -> can : 1
class specifier can -> specify : 1
class specifier can -> be : 1
specifier can specify -> scope : 1
can specify scope -> linkage : 1
specify scope linkage -> and : 1
scope linkage and -> the : 1
linkage and the -> storage : 1
and the storage -> class : 1
the storage class -> is : 1
the storage class -> because : 1
the storage class -> followed : 1
the storage class -> or : 1
the storage class -> declarations : 1
the storage class -> specifies : 1
storage class is -> for : 1
storage class is -> like : 1
class is for -> function : 1
is for function -> parameters : 1
for function parameters -> and : 2
for function parameters -> can : 1
function parameters and -> local : 2
function parameters and -> are : 1
function parameters and -> before : 2
function parameters and -> return : 1
parameters and local -> variables : 1
parameters and local -> which : 1
and local variables -> in : 1
local variables in -> a : 2
variables in a -> the : 1
variables in a -> except : 1
a the default -> storage : 1
a the default -> access : 1
a the default -> is : 1
the default storage -> class : 1
default storage class -> specifier : 1
class specifier is -> for : 1
class specifier is -> every : 1
specifier is for -> declarations : 1
is for declarations -> at : 1
for declarations at -> namespace : 1
declarations at namespace -> the : 1
at namespace the -> default : 1
at namespace the -> class : 2
at namespace the -> address : 1
namespace the default -> is : 1
the default is -> usually : 1
the default is -> that : 3
the default is -> which : 4
the default is -> to : 1
the default is -> number : 1
the default is -> unable : 1
default is usually -> an : 1
is usually an -> object : 1
usually an object -> with : 1
object with static -> lifetime : 1
with static lifetime -> and : 1
static lifetime and -> external : 1
static lifetime and -> internal : 1
lifetime and external -> has : 1
and external has -> no : 1
external has no -> explicit : 1
has no explicit -> storage : 1
no explicit storage -> class : 1
explicit storage class -> for : 1
storage class for -> such : 1
class for such -> a : 1
for such a -> later : 1
such a later -> in : 1
a later in -> this : 2
this chapter and -> earlier : 1
chapter and earlier -> in : 1
and earlier in -> this : 2
for more if -> you : 1
for more if -> the : 1
more if you -> use : 1
if you use -> a : 2
if you use -> and : 1
if you use -> where : 1
if you use -> an : 1
if you use -> write : 1
if you use -> to : 1
if you use -> boost : 1
if you use -> the : 2
you use a -> storage : 1
you use a -> manipulator : 1
you use a -> plain : 1
you use a -> pointer : 2
you use a -> map : 1
use a storage -> class : 1
storage class you -> must : 1
class you must -> choose : 1
class you must -> qualify : 1
class you must -> declare : 1
class you must -> supply : 1
you must choose -> only : 1
must choose only -> one : 1
choose only one -> of : 1
only one of -> the : 2
of the an -> automatic : 1
of the an -> object : 1
of the an -> iterator : 1
the an automatic -> a : 1
an automatic a -> variable : 1
automatic a variable -> with : 1
a variable with -> a : 2
variable with a -> lifetime : 1
variable with a -> hint : 1
variable with a -> static : 1
with a lifetime -> limited : 1
a lifetime limited -> to : 1
lifetime limited to -> the : 1
limited to the -> block : 1
limited to the -> body : 1
to the block -> in : 1
the block in -> which : 1
block in which -> the : 1
variable is the -> specifier : 1
is the specifier -> is : 1
the specifier is -> the : 1
the specifier is -> optional : 1
the specifier is -> usually : 1
the specifier is -> but : 1
specifier is the -> default : 1
the default for -> function : 1
the default for -> all : 2
default for function -> parameters : 1
and local which -> are : 1
local which are -> the : 1
which are the -> only : 1
which are the -> detailed : 1
are the only -> kinds : 1
the only kinds -> of : 1
only kinds of -> declarations : 1
kinds of declarations -> for : 1
of declarations for -> which : 1
for which it -> can : 1
which it can -> be : 1
can be so -> it : 1
can be so -> the : 1
be so it -> is : 1
be so it -> must : 1
it is rarely -> used : 2
is rarely used -> an : 1
is rarely used -> with : 1
rarely used an -> object : 1
used an object -> with : 1
object with external -> which : 1
with external which -> might : 1
external which might -> be : 1
might be defined -> in : 1
different source function -> parameters : 1
source function parameters -> cannot : 1
function parameters cannot -> be : 2
parameters cannot be -> a : 1
parameters cannot be -> and : 1
cannot be a -> data : 1
cannot be a -> object : 1
cannot be a -> global : 1
cannot be a -> function : 1
cannot be a -> base : 2
cannot be a -> member : 1
cannot be a -> partial : 1
cannot be a -> null : 2
cannot be a -> negative : 1
cannot be a -> subset : 1
be a data -> member : 2
a data member -> that : 1
a data member -> is : 2
a data member -> or : 3
a data member -> of : 2
a data member -> to : 1
a data member -> and : 1
a data member -> pointer : 1
a data member -> as : 1
a data member -> can : 1
a data member -> whose : 1
data member that -> can : 1
data member that -> points : 1
data member that -> stores : 1
member that can -> be : 1
can be modified -> even : 2
can be modified -> with : 1
be modified even -> if : 2
modified even if -> the : 2
even if the -> containing : 2
even if the -> array : 1
even if the -> expression : 1
even if the -> object : 1
even if the -> substatement : 1
even if the -> function : 1
even if the -> compiler : 1
even if the -> declarations : 1
even if the -> region : 1
even if the -> iterator : 1
even if the -> point : 2
even if the -> sign : 2
even if the -> member : 1
if the containing -> object : 2
the containing object -> is : 2
containing object is -> see : 1
containing object is -> represent : 1
object is see -> for : 1
is see for -> more : 4
for more an -> automatic : 1
for more an -> entity : 1
for more an -> input : 1
for more an -> output : 1
more an automatic -> variable : 1
an automatic variable -> with : 1
automatic variable with -> a : 1
with a hint -> to : 1
a hint to -> the : 4
hint to the -> compiler : 3
hint to the -> and : 1
hint to the -> human : 1
to the compiler -> that : 3
to the compiler -> uses : 1
to the compiler -> first : 1
the compiler that -> the : 5
the compiler that -> it : 1
compiler that the -> variable : 1
compiler that the -> function : 3
compiler that the -> object : 1
that the variable -> should : 1
the variable should -> be : 1
variable should be -> stored : 1
should be stored -> in : 1
be stored in -> a : 7
be stored in -> the : 1
be stored in -> standard : 1
be stored in -> an : 1
stored in a -> fast : 1
stored in a -> the : 5
stored in a -> value : 1
stored in a -> in : 1
stored in a -> followed : 2
stored in a -> private : 2
stored in a -> for : 1
stored in a -> more : 4
stored in a -> an : 1
stored in a -> depicts : 1
stored in a -> matrix : 1
stored in a -> gslice : 1
in a fast -> many : 1
a fast many -> modern : 1
fast many modern -> compilers : 1
many modern compilers -> ignore : 1
modern compilers ignore -> the : 1
compilers ignore the -> storage : 1
ignore the storage -> class : 1
storage class because -> the : 1
class because the -> compilers : 1
class because the -> base : 1
because the compilers -> are : 2
the compilers are -> better : 2
compilers are better -> than : 2
are better than -> people : 1
are better than -> template : 2
are better than -> when : 1
are better than -> those : 1
are better than -> of : 1
are better than -> longer : 1
are better than -> humans : 1
better than people -> at : 1
than people at -> determining : 1
people at determining -> which : 1
at determining which -> variables : 1
determining which variables -> belong : 1
which variables belong -> in : 1
variables belong in -> a : 1
belong in a -> variable : 1
in a variable -> with : 1
in a variable -> declaration : 1
with a static -> lifetime : 1
with a static -> or : 1
a static lifetime -> and : 1
lifetime and internal -> function : 1
and internal function -> parameters : 1
internal function parameters -> cannot : 1
cannot be and -> volatile : 1
cannot be and -> must : 2
be and volatile -> and : 1
and volatile and -> volatile : 1
and volatile and -> specifiers : 1
volatile and volatile -> and : 1
volatile and specifiers -> are : 1
and specifiers are -> you : 1
specifiers are you -> can : 1
are you can -> use : 1
are you can -> trace : 1
are you can -> instantiate : 1
can use either -> or : 1
use either or -> both : 1
either or both -> in : 1
or both in -> any : 2
both in any -> the : 1
both in any -> place : 1
any the and -> keywords : 1
the and keywords -> can : 1
and keywords can -> be : 1
keywords can be -> used : 1
used in other -> parts : 1
used in other -> initialization : 1
used in other -> with : 1
in other parts -> of : 1
other parts of -> a : 1
other parts of -> the : 2
parts of a -> so : 1
parts of a -> expression : 1
parts of a -> conversion : 1
parts of a -> utc : 1
parts of a -> local : 1
parts of a -> date : 3
parts of a -> and : 1
parts of a -> monetary : 1
a so they -> are : 1
so they are -> often : 1
so they are -> closely : 1
they are often -> referred : 2
are often referred -> to : 2
often referred to -> by : 1
often referred to -> as : 1
referred to by -> the : 1
to by the -> more : 1
to by the -> character : 1
by the more -> general : 1
the more general -> term : 1
the more general -> problem : 2
more general term -> for : 1
general term for -> they : 1
term for they -> are : 1
for they are -> often : 1
for they are -> compared : 1
referred to as -> an : 1
referred to as -> global : 1
to as an -> object : 1
an object that -> cannot : 1
an object that -> has : 3
an object that -> overloads : 1
an object that -> is : 2
an object that -> stands : 1
an object that -> exceeds : 1
object that cannot -> be : 1
that cannot be -> a : 2
that cannot be -> part : 3
a object cannot -> ordinarily : 1
object cannot ordinarily -> be : 1
cannot ordinarily be -> the : 1
ordinarily be the -> target : 1
be the target -> of : 3
the target of -> an : 3
the target of -> the : 4
the target of -> a : 1
target of an -> you : 1
target of an -> has : 1
target of an -> and : 1
of an you -> cannot : 1
an you cannot -> call : 1
an you cannot -> use : 1
you cannot call -> a : 1
you cannot call -> any : 1
cannot call a -> member : 1
call a member -> function : 4
call a member -> the : 1
function of a -> an : 1
function of a -> constant : 6
function of a -> reference : 1
a an object -> whose : 1
an object whose -> value : 1
an object whose -> constructor : 1
an object whose -> declared : 1
an object whose -> type : 4
an object whose -> class : 1
object whose value -> might : 1
whose value might -> change : 1
value might change -> the : 1
might change the -> compiler : 1
change the compiler -> is : 1
compiler is prevented -> from : 1
is prevented from -> performing : 1
prevented from performing -> optimizations : 1
from performing optimizations -> that : 1
performing optimizations that -> depend : 1
optimizations that depend -> on : 1
depend on the -> value : 1
depend on the -> but : 1
depend on the -> context : 1
depend on the -> template : 6
depend on the -> c : 1
depend on the -> characteristics : 1
depend on the -> native : 1
depend on the -> d : 1
on the value -> not : 1
on the value -> of : 1
the value not -> for : 1
value not for -> a : 1
not for a -> variable : 1
for a variable -> that : 1
for a variable -> of : 1
a variable that -> is : 1
variable that is -> tied : 1
that is tied -> to : 1
is tied to -> a : 1
is tied to -> the : 2
tied to a -> hardware : 1
tied to a -> specific : 1
to a hardware -> register : 1
a hardware register -> should : 1
hardware register should -> be : 1
register should be -> object : 1
should be object -> must : 1
be object must -> have : 1
object must have -> a : 1
must have a -> type : 2
must have a -> virtual : 2
must have a -> copy : 2
must have a -> functions : 1
must have a -> different : 1
must have a -> function : 2
must have a -> definition : 1
must have a -> single : 1
must have a -> the : 1
must have a -> statement : 1
must have a -> static : 1
have a type -> in : 1
have a type -> or : 1
have a type -> for : 1
have a type -> that : 1
the form of -> one : 1
the form of -> class : 1
the form of -> a : 1
the form of -> the : 2
form of one -> or : 1
or more the -> type : 1
or more the -> declares : 1
more the type -> specifiers : 1
type specifiers can -> be : 1
specifiers can be -> any : 1
can be any -> of : 3
can be any -> integral : 2
can be any -> you : 1
can be any -> kind : 1
can be any -> when : 1
can be any -> number : 1
be any of -> the : 3
a or elaborated -> series : 1
or elaborated series -> of : 1
elaborated series of -> fundamental : 1
series of fundamental -> type : 1
of fundamental type -> class : 1
of fundamental type -> can : 1
fundamental type class -> enumerated : 1
type class enumerated -> type : 1
class enumerated type -> and : 1
enumerated type and -> fundamental : 1
type and fundamental -> types : 1
and fundamental types -> are : 1
types are described -> earlier : 1
are described earlier -> in : 1
this chapter in -> class : 1
chapter in class -> types : 1
in class types -> are : 1
class types are -> covered : 1
types are covered -> in : 1
are covered in -> the : 2
covered in the -> keyword : 1
covered in the -> section : 1
covered in the -> remainder : 1
in the keyword -> is : 1
keyword is covered -> in : 1
is covered in -> can : 1
is covered in -> the : 1
is covered in -> and : 1
covered in can -> appear : 1
in can appear -> in : 1
can appear in -> any : 3
can appear in -> nested : 1
appear in any -> but : 1
appear in any -> order : 1
appear in any -> flag : 1
but the convention -> is : 3
is to list -> the : 1
is to list -> function : 1
to list the -> storage : 1
list the storage -> class : 1
storage class followed -> by : 1
class followed by -> the : 1
by the type -> followed : 1
by the type -> of : 2
the type followed -> by : 1
type followed by -> long : 1
type followed by -> the : 1
followed by long -> int : 1
by long int -> const : 1
long int const -> conventional : 1
int const conventional -> int : 1
const conventional int -> extern : 1
conventional int extern -> const : 1
int extern const -> long : 1
extern const long -> but : 1
const long but -> programmers : 1
long but programmers -> prefer : 1
but programmers prefer -> a : 1
programmers prefer a -> different : 1
prefer a different -> storage : 1
a different storage -> type : 1
different storage type -> more : 1
storage type more -> and : 1
type more and -> more : 1
more and more -> are : 1
and more are -> learning : 1
more are learning -> to : 1
are learning to -> put : 1
learning to put -> the : 1
to put the -> see : 1
to put the -> most : 1
to put the -> declaration : 1
put the see -> the : 1
see the examples -> under : 1
see the examples -> in : 1
the examples under -> later : 1
examples under later -> in : 1
under later in -> this : 1
this chapter to -> find : 1
this chapter to -> learn : 1
chapter to find -> out : 1
to find out -> convention : 1
find out convention -> for : 1
out convention for -> types : 1
convention for types -> that : 1
multiple keywords is -> to : 1
keywords is to -> place : 1
place the base -> type : 1
the base type -> last : 1
the base type -> of : 1
the base type -> is : 1
base type last -> and : 1
type last and -> the : 1
last and the -> modifiers : 1
and the modifiers -> long : 1
the modifiers long -> int : 1
modifiers long int -> conventional : 1
long int conventional -> int : 1
int conventional int -> unsigned : 1
conventional int unsigned -> long : 1
int unsigned long -> but : 1
int unsigned long -> using : 1
unsigned long but -> strange : 1
long but strange -> long : 1
but strange long -> double : 1
strange long double -> conventional : 1
long double conventional -> double : 1
double conventional double -> long : 1
conventional double long -> but : 1
double long but -> can : 1
long but can -> define : 1
but can define -> a : 1
define a class -> or : 2
define a class -> in : 2
class or enumerated -> type : 1
or enumerated type -> in : 1
or enumerated type -> are : 1
or enumerated type -> is : 1
enumerated type in -> the : 1
in the same -> declaration : 1
in the same -> package : 1
in the same -> scope : 4
in the same -> make : 1
in the same -> manner : 13
in the same -> see : 1
in the same -> jumping : 1
in the same -> later : 1
in the same -> you : 1
in the same -> class : 1
in the same -> template : 1
in the same -> the : 3
in the same -> but : 1
in the same -> namespace : 1
in the same -> long : 1
in the same -> header : 1
in the same -> source : 3
in the same -> directory : 1
in the same -> number : 1
in the same -> way : 2
in the same -> type : 1
in the same -> or : 1
the same declaration -> as : 1
same declaration as -> an : 1
an object color -> black : 1
object color black -> the : 1
object color black -> color : 1
color black the -> custom : 1
color black the -> actual : 1
black the custom -> is : 1
the custom is -> to : 1
custom is to -> define : 1
is to define -> the : 1
is to define -> a : 1
is to define -> as : 1
define the type -> then : 1
the type then -> use : 1
type then use -> the : 1
then use the -> type : 1
then use the -> facet : 1
use the type -> name : 1
in a separate -> object : 1
in a separate -> and : 1
in a separate -> is : 1
in a separate -> source : 1
in a separate -> such : 1
a separate object -> color : 1
separate object color -> black : 1
black color declares -> a : 1
color declares a -> single : 1
declares a single -> name : 1
declares a single -> class : 1
a single name -> within : 1
single name within -> a : 1
name within a -> in : 1
within a in -> a : 1
a the initial -> specifiers : 1
a the initial -> declaration : 1
the initial specifiers -> apply : 1
initial specifiers apply -> to : 1
specifiers apply to -> all : 1
specifiers apply to -> the : 1
apply to all -> the : 2
apply to all -> data : 1
all the declarators -> in : 1
the declarators in -> the : 1
declarators in the -> but : 1
in the but -> each : 1
in the but -> you : 1
in the but -> the : 1
in the but -> because : 1
in the but -> does : 2
the but each -> modifiers : 1
but each modifiers -> apply : 1
each modifiers apply -> only : 1
modifiers apply only -> to : 1
apply only to -> that : 1
apply only to -> the : 3
apply only to -> sequence : 1
apply only to -> associative : 1
only to that -> in : 1
to that in -> this : 1
that in this -> section : 1
this section for -> examples : 1
this section for -> class : 2
this section for -> treats : 1
this section for -> standard : 1
this section for -> formatting : 1
this section for -> if : 2
this section for -> a : 6
this section for -> the : 2
this section for -> more : 3
this section for -> of : 1
this section for -> header : 1
this section for -> information : 1
this section for -> an : 1
this section for -> can : 1
section for examples -> of : 1
for examples of -> where : 1
for examples of -> see : 1
for examples of -> and : 1
for examples of -> different : 1
for examples of -> derived : 1
examples of where -> this : 1
of where this -> distinction : 1
where this distinction -> is : 1
this distinction is -> a : 1
this distinction is -> crucial : 1
distinction is a -> declarator : 1
is a declarator -> contains : 1
a declarator contains -> the : 1
declarator contains the -> name : 1
contains the name -> being : 1
name being additional -> type : 1
being additional type -> information : 1
additional type information -> and : 1
type information and -> and : 1
type information and -> class : 1
information and and -> an : 1
and and an -> optional : 1
an optional use -> commas : 1
optional use commas -> to : 1
use commas to -> separate : 1
commas to separate -> multiple : 1
to separate multiple -> declarators : 1
separate multiple declarators -> in : 1
multiple declarators in -> a : 1
declarators in a -> for : 1
in a for -> is : 1
in a for -> declares : 1
in a for -> more : 1
a for is -> declared : 1
for is declared -> with : 1
for is declared -> as : 1
is declared with -> a : 3
is declared with -> an : 3
is declared with -> the : 1
declared with a -> constant : 1
declared with a -> leading : 1
declared with a -> template : 1
with a constant -> size : 1
a constant size -> specified : 1
constant size specified -> in : 1
size specified in -> square : 1
specified in square -> the : 1
in square the -> array : 1
in square the -> first : 1
in square the -> input : 1
square the array -> size : 1
the array size -> is : 2
the array size -> if : 1
the array size -> must : 1
array size is -> fixed : 1
array size is -> the : 1
size is fixed -> for : 1
size is fixed -> when : 1
is fixed for -> the : 1
fixed for the -> lifetime : 1
for the lifetime -> of : 1
the lifetime of -> the : 2
the lifetime of -> any : 1
the lifetime of -> a : 1
the lifetime of -> an : 1
lifetime of the -> object : 1
lifetime of the -> pen : 1
lifetime of the -> value : 1
of the object -> and : 1
of the object -> of : 1
of the object -> is : 4
of the object -> being : 1
of the object -> returned : 1
of the object -> can : 1
the object and -> cannot : 1
the object and -> finally : 1
the object and -> then : 1
object and cannot -> an : 1
and cannot an -> container : 1
cannot an container -> whose : 1
an container whose -> size : 1
container whose size -> can : 1
whose size can -> change : 1
size can change -> at : 1
can change at -> see : 1
change at see -> in : 1
at see in -> to : 1
see in to -> declare : 1
in to declare -> a : 1
in to declare -> overloaded : 1
to declare a -> multidimensional : 1
to declare a -> function : 2
to declare a -> friend : 2
to declare a -> the : 1
to declare a -> wide : 1
to declare a -> static : 1
to declare a -> closure : 1
declare a multidimensional -> use : 1
a multidimensional use -> a : 1
multidimensional use a -> separate : 1
a separate set -> of : 1
separate set of -> square : 1
set of square -> brackets : 1
of square brackets -> for : 1
square brackets for -> each : 1
brackets for each -> double : 1
for each double -> a : 1
each double a -> can : 1
double a can -> omit : 1
a can omit -> the : 1
can omit the -> array : 1
can omit the -> parameter : 1
can omit the -> leaving : 1
omit the array -> size : 1
array size if -> there : 1
size if there -> is : 1
if there is -> an : 5
if there is -> a : 6
if there is -> no : 22
if there is -> enough : 1
if there is -> such : 2
if there is -> insufficient : 2
there is an -> the : 1
there is an -> exception : 1
there is an -> exact : 1
there is an -> in : 2
there is an -> implied : 2
there is an -> function : 1
is an the -> number : 1
is an the -> size : 1
is an the -> type : 2
is an the -> result : 4
is an the -> expression : 1
is an the -> new : 1
is an the -> following : 1
is an the -> left : 2
is an the -> iterators : 1
an the number -> of : 1
number of initial -> values : 1
of initial values -> determines : 1
initial values determines -> the : 1
values determines the -> in : 1
determines the in -> a : 1
in a multidimensional -> you : 1
in a multidimensional -> array : 1
a multidimensional you -> can : 1
multidimensional you can -> omit : 1
you can omit -> only : 2
you can omit -> the : 1
you can omit -> them : 1
can omit only -> the : 2
omit only the -> first : 2
only the first -> int : 1
only the first -> for : 1
only the first -> is : 3
the first int -> char : 1
first int char -> with : 1
int char with -> trailing : 1
char with trailing -> a : 1
with trailing a -> all : 1
trailing a all -> elements : 1
a all elements -> are : 1
all elements are -> stored : 1
all elements are -> initialized : 1
elements are stored -> with : 1
elements are stored -> in : 4
are stored with -> the : 1
stored with the -> rightmost : 1
with the rightmost -> index : 1
the rightmost index -> varying : 1
rightmost index varying -> the : 1
index varying the -> fastest : 1
varying the fastest -> called : 1
the fastest called -> a : 1
fastest called a -> function : 1
called a function -> parameter : 1
function parameter is -> an : 2
function parameter is -> declared : 1
function parameter is -> a : 2
parameter is an -> the : 1
parameter is an -> operand : 2
parameter is an -> integral : 1
parameter is an -> object : 1
an the size -> is : 1
the size is -> and : 1
the size is -> for : 1
the size is -> determined : 1
the size is -> fixed : 1
size is and -> the : 1
and the type -> is : 4
and the type -> conversion : 1
and the type -> of : 2
type is actually -> a : 2
actually a pointer -> which : 1
a pointer which -> is : 1
a pointer which -> the : 1
pointer which is -> the : 1
is the subject -> of : 1
the subject of -> the : 1
subject of the -> next : 1
of the next -> for : 1
of the next -> to : 1
next for a -> multidimensional : 1
for a multidimensional -> array : 1
a multidimensional array -> used : 1
a multidimensional array -> is : 1
multidimensional array used -> as : 1
array used as -> a : 1
function the first -> dimension : 1
the first dimension -> is : 2
the first dimension -> can : 2
first dimension is -> so : 1
first dimension is -> ignored : 1
dimension is so -> the : 1
so the type -> is : 1
is a pointer -> to : 39
is a pointer -> that : 2
is a pointer -> and : 1
is a pointer -> or : 3
is a pointer -> into : 1
is a pointer -> in : 1
pointer to an -> because : 1
pointer to an -> integer : 3
pointer to an -> cannot : 1
pointer to an -> libraries : 1
pointer to an -> object : 1
pointer to an -> incomplete : 1
pointer to an -> element : 1
pointer to an -> stores : 2
pointer to an -> error : 1
pointer to an -> allocating : 1
to an because -> the : 1
an because the -> first : 1
because the first -> dimension : 1
because the first -> item : 1
dimension is ignored -> in : 1
is ignored in -> a : 1
ignored in a -> function : 1
in a function -> it : 1
in a function -> is : 2
in a function -> of : 1
in a function -> declaration : 3
in a function -> the : 2
in a function -> a : 3
in a function -> arguments : 1
in a function -> names : 1
in a function -> this : 1
in a function -> point : 1
in a function -> template : 1
in a function -> object : 1
in a function -> with : 1
in a function -> and : 1
in a function -> double : 1
in a function -> call : 1
in a function -> see : 1
a function it -> is : 1
a function it -> accumulates : 1
function it is -> usually : 1
it is usually -> leaving : 1
it is usually -> simpler : 1
is usually leaving -> empty : 1
usually leaving empty -> square : 1
leaving empty square -> double : 1
empty square double -> object : 1
square double object -> stores : 1
double object stores -> the : 1
object stores the -> address : 1
stores the address -> of : 1
the address of -> another : 1
the address of -> the : 16
the address of -> a : 11
the address of -> cout : 1
the address of -> or : 1
the address of -> an : 7
the address of -> that : 1
address of another -> a : 1
of another a -> pointer : 1
another a pointer -> is : 1
a pointer is -> declared : 1
a pointer is -> a : 1
a pointer is -> better : 1
a pointer is -> assigned : 2
a pointer is -> the : 1
pointer is declared -> with : 2
with a leading -> asterisk : 1
a leading asterisk -> optionally : 1
leading asterisk optionally -> followed : 1
asterisk optionally followed -> by : 1
optionally followed by -> then : 1
optionally followed by -> a : 1
followed by then -> the : 1
by then the -> object : 1
then the object -> and : 1
object and finally -> an : 1
and finally an -> optional : 1
finally an optional -> reading : 1
an optional reading -> and : 1
optional reading and -> writing : 1
reading and writing -> pointer : 1
reading and writing -> buffers : 1
reading and writing -> to : 1
reading and writing -> bool : 2
reading and writing -> at : 2
and writing pointer -> be : 1
writing pointer be -> sure : 1
pointer be sure -> to : 1
be sure to -> keep : 1
be sure to -> declare : 1
be sure to -> include : 1
be sure to -> clean : 1
be sure to -> leave : 1
be sure to -> avoid : 1
be sure to -> use : 2
be sure to -> test : 1
be sure to -> follow : 1
be sure to -> distinguish : 1
be sure to -> check : 1
be sure to -> read : 1
be sure to -> define : 1
be sure to -> implement : 1
sure to keep -> track : 1
to keep track -> of : 6
the the in -> the : 1
the in the -> declarator : 1
the in the -> specifiers : 1
the in the -> means : 1
the in the -> but : 1
the in the -> following : 4
the in the -> when : 1
the in the -> the : 2
the in the -> container : 1
in the declarator -> apply : 1
the declarator apply -> to : 1
declarator apply to -> the : 1
apply to the -> pointer : 1
apply to the -> type : 2
apply to the -> choice : 1
apply to the -> implicit : 1
apply to the -> entire : 1
apply to the -> standard : 1
apply to the -> abbreviated : 1
to the pointer -> and : 1
the pointer and -> the : 1
pointer and the -> in : 1
pointer and the -> right : 1
pointer and the -> like : 1
in the specifiers -> apply : 1
the specifiers apply -> to : 1
the for in -> the : 1
for in the -> following : 2
for in the -> expression : 2
for in the -> range : 2
for in the -> array : 1
for in the -> if : 2
for in the -> the : 1
for in the -> this : 1
following the is -> in : 1
the is in -> the : 1
the is in -> for : 1
in the so -> the : 1
in the so -> you : 1
the so the -> pointer : 1
the so the -> same : 1
the so the -> cache : 1
the so the -> only : 1
the so the -> stream : 1
the so the -> value : 1
so the pointer -> is : 1
so the pointer -> can : 1
the pointer is -> a : 1
the pointer is -> and : 1
the pointer is -> not : 1
the pointer is -> that : 1
the pointer is -> suitably : 3
the pointer is -> so : 1
pointer is a -> pointer : 1
pointer is a -> null : 2
a the pointer -> object : 1
the pointer object -> is : 1
pointer object is -> but : 1
object is but -> you : 1
is but you -> cannot : 1
you cannot change -> the : 1
cannot change the -> that : 1
change the that -> it : 1
the that it -> points : 1
the that it -> then : 1
the that it -> returns : 1
that it points -> this : 1
it points this -> kind : 1
points this kind -> of : 1
this kind of -> pointer : 2
this kind of -> the : 1
kind of pointer -> is : 2
of pointer is -> usually : 2
pointer is usually -> called : 2
is usually called -> a : 2
usually called a -> pointer : 1
usually called a -> int : 1
called a pointer -> to : 1
pointer to int -> const : 1
pointer to int -> int : 2
pointer to int -> pr : 1
pointer to int -> new : 1
to int const -> p : 1
to int const -> rc : 1
int const p -> ok : 1
int const p -> p : 1
const p ok -> the : 1
p ok the -> is : 1
ok the is -> part : 1
the is part -> of : 1
of the it -> modifies : 1
of the it -> is : 8
of the it -> then : 1
the it modifies -> the : 1
it modifies the -> pointer : 1
modifies the pointer -> in : 1
the pointer in -> the : 1
the pointer in -> an : 2
pointer in the -> following : 1
pointer in the -> manner : 1
pointer in the -> member : 1
pointer in the -> array : 1
following the pointer -> is : 1
pointer is and -> hence : 1
pointer is and -> anything : 1
pointer is and -> is : 1
is and hence -> not : 1
and hence not -> but : 1
hence not but -> it : 1
not but it -> points : 1
but it points -> to : 1
it points to -> a : 2
it points to -> can : 1
it points to -> cannot : 1
it points to -> an : 1
points to a -> plain : 1
points to a -> data : 2
points to a -> virtual : 1
points to a -> function : 1
points to a -> valid : 4
points to a -> region : 6
points to a -> single : 1
to a plain -> which : 1
a plain which -> can : 1
plain which can -> be : 1
can be this -> kind : 1
be this kind -> of : 1
called a int -> const : 1
a int const -> p : 1
a int const -> function : 1
const p p -> error : 1
p p error -> can : 1
p error can -> have : 1
error can have -> pointers : 1
can have pointers -> to : 1
have pointers to -> as : 1
pointers to as -> deep : 1
to as deep -> as : 1
as deep as -> you : 1
deep as you -> in : 1
as you in -> which : 1
you in which -> each : 1
in which each -> level : 1
in which each -> parameter : 1
in which each -> node : 2
in which each -> function : 1
in which each -> header : 1
in which each -> c : 1
in which each -> integer : 1
in which each -> element : 2
in which each -> character : 1
in which each -> field : 1
in which each -> value : 2
in which each -> buffer : 1
in which each -> new : 1
which each level -> of : 1
each level of -> pointer : 1
level of pointer -> has : 1
of pointer has -> its : 1
pointer has its -> own : 1
has its own -> the : 1
has its own -> copy : 1
has its own -> template : 1
has its own -> associated : 1
its own the -> easiest : 1
own the easiest -> way : 1
the easiest way -> to : 2
easiest way to -> read : 1
easiest way to -> understand : 1
way to read -> a : 1
to read a -> complicated : 1
to read a -> number : 1
to read a -> sequence : 1
to read a -> series : 2
to read a -> of : 1
to read a -> line : 1
to read a -> the : 1
read a complicated -> pointer : 1
a complicated pointer -> declaration : 1
complicated pointer declaration -> is : 1
pointer declaration is -> to : 1
declaration is to -> find : 1
is to find -> the : 1
to find the -> work : 1
to find the -> first : 1
to find the -> median : 1
to find the -> bounds : 1
find the work -> your : 1
the work your -> way : 1
work your way -> from : 1
your way from -> the : 1
way from the -> inside : 1
from the inside -> to : 1
the inside to -> the : 1
inside to the -> and : 1
the and then -> from : 1
the and then -> evaluates : 1
the and then -> the : 1
the and then -> call : 1
and then from -> right : 1
then from right -> to : 1
from right to -> in : 1
from right to -> that : 1
right to in -> this : 1
to in this -> it : 1
in this it -> is : 1
in this it -> means : 1
this it is -> best : 1
it is best -> to : 2
is best to -> put : 1
is best to -> avoid : 1
best to put -> after : 1
to put after -> the : 1
put after the -> type : 1
after the type -> for : 1
the type for -> int : 1
the type for -> use : 1
the type for -> this : 1
the type for -> more : 1
the type for -> a : 1
type for int -> pointer : 1
for int pointer -> to : 1
int pointer to -> int : 1
int pointer to -> pointer : 1
int pointer to -> uninitialized : 1
to int int -> const : 2
to int int -> pointer : 1
int int const -> cp : 1
int int const -> pointer : 1
int int const -> const : 1
int int const -> int : 3
int int const -> return : 5
int int const -> void : 1
int int const -> virtual : 1
int const cp -> const : 1
const cp const -> pointer : 1
cp const pointer -> to : 1
const pointer to -> int : 1
const pointer to -> const : 2
int const pointer -> to : 1
pointer to const -> int : 2
pointer to const -> is : 1
to const int -> int : 2
const int int -> const : 3
const int int -> array : 1
const int int -> volatile : 1
int const const -> cpc : 1
int const const -> const : 3
int const const -> int : 1
int const const -> virtual : 1
const const cpc -> const : 1
const cpc const -> pointer : 1
cpc const pointer -> to : 1
int int array -> of : 1
int array of -> pointers : 1
array of pointers -> to : 4
of pointers to -> int : 2
of pointers to -> the : 2
of pointers to -> with : 1
pointers to int -> int : 1
pointers to int -> new : 1
int int pointer -> to : 1
pointer to pointer -> to : 1
to pointer to -> a : 1
parameter is declared -> with : 1
declared with an -> array : 1
declared with an -> asterisk : 1
declared with an -> ellipsis : 1
with an array -> the : 1
with an array -> type : 1
with an array -> allocated : 1
an array the -> actual : 1
array the actual -> type : 1
the actual type -> is : 3
the actual type -> at : 1
the actual type -> and : 1
actual type is -> a : 1
actual type is -> the : 1
actual type is -> function : 1
is a and -> at : 1
is a and -> is : 1
is a and -> for : 1
a and at -> runtime : 1
and at runtime -> the : 1
and at runtime -> it : 1
at runtime the -> address : 1
runtime the address -> of : 1
address of the -> first : 1
address of the -> declaring : 1
address of the -> same : 1
address of the -> string : 8
address of the -> stream : 2
address of the -> buffer : 2
address of the -> object : 1
the first element -> of : 19
the first element -> for : 2
the first element -> from : 1
the first element -> is : 1
first element of -> the : 21
element of the -> array : 6
element of the -> function : 1
element of the -> the : 19
element of the -> pair : 1
element of the -> these : 1
element of the -> and : 1
element of the -> as : 2
element of the -> range : 2
element of the -> first : 1
element of the -> second : 1
element of the -> all : 1
element of the -> a : 8
element of the -> are : 1
element of the -> every : 2
element of the -> note : 4
element of the -> original : 1
element of the -> behavior : 3
element of the -> that : 1
element of the -> container : 1
of the array -> is : 2
of the array -> to : 3
of the array -> in : 1
of the array -> or : 3
of the array -> are : 1
of the array -> as : 1
of the array -> and : 1
the array is -> passed : 1
the array is -> the : 2
the array is -> extended : 3
the array is -> successfully : 1
the array is -> elements : 2
array is passed -> to : 1
is passed to -> the : 6
is passed to -> a : 1
passed to the -> you : 1
passed to the -> which : 1
passed to the -> deallocation : 1
passed to the -> the : 2
passed to the -> host : 1
passed to the -> allocator : 1
passed to the -> function : 1
passed to the -> callback : 1
passed to the -> base : 1
passed to the -> constructor : 1
passed to the -> return : 1
passed to the -> destructor : 1
passed to the -> unmanaged : 1
to the you -> can : 2
to the you -> have : 2
to the you -> would : 1
the you can -> use : 4
the you can -> set : 1
the you can -> overload : 1
the you can -> call : 1
the you can -> instantiate : 1
the you can -> define : 4
the you can -> write : 1
the you can -> push : 1
the you can -> add : 2
the you can -> create : 1
the you can -> also : 4
the you can -> switch : 2
can use array -> but : 1
use array but -> the : 1
array but the -> size : 1
but the size -> is : 1
size is for -> the : 1
is for the -> following : 2
is for the -> class : 1
is for the -> static : 1
is for the -> version : 1
is for the -> formatted : 1
is for the -> virtual : 1
is for the -> stream : 1
is for the -> character : 1
the following two -> declarations : 3
the following two -> expressions : 2
the following two -> constructors : 1
the following two -> function : 1
the following two -> code : 1
following two declarations -> mean : 1
following two declarations -> are : 2
two declarations mean -> the : 1
declarations mean the -> same : 1
mean the same -> int : 1
the same int -> using : 1
same int using -> array : 1
int using array -> notation : 1
using array notation -> for : 1
array notation for -> a : 1
notation for a -> function : 1
for a function -> you : 1
for a function -> that : 6
for a function -> parameter : 1
for a function -> is : 1
for a function -> in : 1
for a function -> template : 2
a function you -> can : 1
a function you -> cannot : 2
a function you -> must : 1
a function you -> probably : 1
function you can -> omit : 1
function you can -> use : 2
function you can -> even : 1
function you can -> provide : 1
function you can -> overload : 1
the first for -> the : 1
first for the -> following : 1
first for the -> syntax : 1
following is the -> following : 1
following is the -> same : 1
following is the -> name : 1
following is not -> if : 1
is not if -> the : 2
is not if -> a : 1
is not if -> there : 1
is not if -> occurs : 2
is not if -> returns : 1
not if the -> compiler : 1
not if the -> string : 1
if the compiler -> does : 1
if the compiler -> optimizes : 1
if the compiler -> can : 1
if the compiler -> requires : 1
if the compiler -> reports : 1
if the compiler -> cannot : 1
compiler does not -> know : 2
compiler does not -> have : 1
not know the -> number : 1
know the number -> of : 2
number of it -> does : 1
number of it -> must : 1
of it does -> not : 1
not know how -> to : 1
know how to -> lay : 1
know how to -> add : 1
how to lay -> out : 1
to lay out -> the : 1
lay out the -> memory : 1
out the memory -> for : 1
the memory for -> or : 1
the memory for -> the : 1
the memory for -> have : 1
the memory for -> said : 1
memory for or -> compute : 1
for or compute -> array : 1
or compute array -> useful : 1
compute array useful -> convention : 1
array useful convention -> is : 1
useful convention is -> to : 2
is to use -> array : 1
is to use -> a : 3
is to use -> when : 1
is to use -> conditional : 1
is to use -> the : 6
is to use -> unicode : 1
is to use -> all : 2
is to use -> type : 1
to use array -> syntax : 1
use array syntax -> when : 1
array syntax when -> declaring : 1
syntax when declaring -> parameters : 1
when declaring parameters -> that : 1
declaring parameters that -> are : 1
parameters that are -> used : 2
parameters that are -> references : 1
that are used -> in : 2
that are used -> throughout : 2
that are used -> to : 1
that are used -> often : 1
are used in -> an : 1
are used in -> the : 3
used in an -> the : 1
used in an -> expression : 1
used in an -> implicit : 1
an the parameter -> itself : 1
an the parameter -> specifies : 1
the parameter itself -> does : 1
parameter itself does -> not : 1
itself does not -> or : 1
does not or -> it : 1
not or it -> is : 1
or it is -> dereferenced : 2
or it is -> important : 1
or it is -> a : 1
or it is -> if : 1
it is dereferenced -> with : 2
is dereferenced with -> the : 2
dereferenced with the -> use : 1
dereferenced with the -> unary : 1
with the use -> pointer : 1
the use pointer -> syntax : 1
use pointer syntax -> for : 1
pointer syntax for -> parameters : 1
syntax for parameters -> that : 1
for parameters that -> are : 1
for parameters that -> already : 1
in the parameter -> value : 1
the parameter value -> or : 1
parameter value or -> it : 1
value or it -> is : 1
value or it -> can : 1
with the unary -> pointer : 1
the unary pointer -> is : 1
unary pointer is -> declared : 1
with an asterisk -> and : 1
an asterisk and -> the : 1
asterisk and the -> function : 1
and the function -> signature : 1
and the function -> can : 1
and the function -> the : 2
and the function -> is : 1
the function signature -> types : 1
function signature types -> and : 1
signature types and -> optional : 1
types and optional -> the : 1
and optional the -> specifiers : 1
optional the specifiers -> form : 1
the specifiers form -> the : 1
specifiers form the -> return : 1
form the return -> the : 1
the name and -> asterisk : 1
the name and -> a : 1
name and asterisk -> must : 1
and asterisk must -> be : 1
asterisk must be -> enclosed : 1
must be enclosed -> in : 1
be enclosed in -> so : 1
enclosed in so -> the : 1
in so the -> asterisk : 1
in so the -> results : 1
so the asterisk -> is : 1
the asterisk is -> not : 1
asterisk is not -> interpreted : 1
is not interpreted -> as : 1
not interpreted as -> part : 1
not interpreted as -> argument : 1
interpreted as part -> of : 1
of the return -> an : 1
of the return -> suppose : 1
of the return -> value : 5
of the return -> if : 1
of the return -> with : 1
the return an -> optional : 1
the return an -> iterator : 2
return an optional -> exception : 1
an optional exception -> specification : 1
optional exception specification -> can : 1
exception specification can -> follow : 1
specification can follow -> the : 1
can follow the -> see : 1
follow the see -> for : 1
information about function -> signatures : 1
information about function -> call : 1
information about function -> computes : 2
information about function -> converts : 1
information about function -> function : 3
about function signatures -> and : 1
function signatures and -> exception : 1
signatures and exception -> fp : 1
and exception fp -> is : 1
exception fp is -> pointer : 1
fp is pointer -> to : 1
is pointer to -> function : 1
pointer to function -> that : 1
to function that -> takes : 1
that takes an -> int : 1
that takes an -> parameter : 1
that takes an -> is : 1
that takes an -> these : 1
that takes an -> shows : 1
that takes an -> class : 1
that takes an -> explicit : 1
takes an int -> parameter : 1
an int parameter -> and : 1
int parameter and -> returns : 1
parameter and returns -> void : 1
parameter and returns -> an : 1
and returns void -> fp : 1
returns void fp -> declaration : 1
void fp declaration -> of : 1
fp declaration of -> an : 1
object with a -> function : 1
object with a -> single : 1
object with a -> type : 1
object with a -> dependent : 1
with a function -> pointer : 1
with a function -> is : 1
with a function -> exceptions : 1
with a function -> or : 1
function pointer type -> can : 1
function pointer type -> for : 2
pointer type can -> be : 1
hard to so -> typically : 1
to so typically -> you : 1
so typically you -> declare : 1
typically you declare -> the : 1
you declare the -> type : 1
declare the type -> separately : 1
the type separately -> with : 1
type separately with -> a : 1
separately with a -> and : 1
with a and -> then : 1
with a and -> a : 1
a and then -> declare : 1
and then declare -> the : 1
then declare the -> object : 1
declare the object -> using : 1
the object using -> the : 1
object using the -> void : 1
object using the -> same : 1
using the void -> function : 1
the void function -> fp : 1
the void function -> saves : 2
void function fp -> function : 1
function fp function -> pointer : 1
fp function pointer -> declarations : 1
declarations with shows -> a : 1
with shows a -> declaration : 1
with shows a -> simple : 1
with shows a -> program : 1
shows a declaration -> of : 1
of an array -> of : 2
of an array -> except : 1
of an array -> double : 1
of an array -> to : 1
array of function -> in : 1
array of function -> declare : 1
array of function -> every : 1
of function in -> which : 2
of function in -> function : 6
of function in -> header : 1
function in which -> the : 3
function in which -> it : 1
function in which -> each : 1
function in which -> is : 1
which the functions -> return : 1
the functions return -> and : 1
functions return and -> take : 1
return and take -> two : 1
and take two -> a : 1
take two a -> function : 1
two a function -> pointer : 1
function pointer an -> and : 1
pointer an and -> returning : 1
an and returning -> an : 1
and returning an -> and : 1
and returning an -> integer : 1
returning an and -> an : 1
an and an -> the : 1
and an the -> declaration : 1
and an the -> left : 1
an the declaration -> is : 1
declaration is almost -> unreadable : 1
is almost unreadable -> without : 1
almost unreadable without -> using : 1
unreadable without using -> declarations : 1
without using declarations -> for : 1
using declarations for -> each : 1
using declarations for -> names : 1
declarations for each -> part : 1
for each part -> of : 1
each part of -> the : 1
the function pointer -> declarations : 1
declarations with array -> of : 1
with array of -> function : 1
of function declare -> a : 1
function declare a -> type : 1
declare a type -> for : 1
a type for -> pointer : 1
a type for -> character : 1
type for pointer -> to : 1
for pointer to -> declare : 1
pointer to declare -> a : 1
pointer type for -> a : 2
type for a -> function : 3
type for a -> variable : 1
type for a -> link : 2
type for a -> definition : 1
type for a -> pointer : 1
type for a -> in : 1
takes an parameter -> and : 1
an parameter and -> returns : 1
an parameter and -> has : 2
and returns an -> declare : 1
and returns an -> lvalue : 1
and returns an -> this : 1
and returns an -> iterator : 10
and returns an -> error : 1
returns an declare -> a : 1
an declare a -> function : 1
function that returns -> and : 1
function that returns -> the : 1
function that returns -> to : 1
function that returns -> must : 1
function that returns -> a : 1
that returns and -> takes : 1
returns and takes -> two : 1
and takes two -> the : 1
and takes two -> each : 1
takes two the -> first : 2
takes two the -> scaling : 1
takes two the -> function : 1
two the first -> of : 1
two the first -> argument : 1
two the first -> is : 1
the first of -> type : 1
the first of -> multibyte : 1
the first of -> the : 1
first of type -> and : 1
of type and -> the : 2
of type and -> returns : 5
of type and -> supply : 1
type and the -> second : 1
type and the -> other : 1
type and the -> encoding : 1
the second of -> type : 1
second of type -> declare : 1
of type declare -> an : 1
type declare an -> array : 1
declare an array -> of : 1
array of to -> and : 1
of to and -> work : 1
to and work -> differently : 1
and work differently -> from : 1
work differently from -> other : 1
differently from other -> the : 1
from other the -> syntax : 1
other the syntax -> for : 1
the syntax for -> declaring : 1
the syntax for -> and : 2
the syntax for -> a : 2
the syntax for -> the : 1
the syntax for -> using : 1
syntax for declaring -> a : 1
for declaring a -> pointer : 1
for declaring a -> type : 1
declaring a pointer -> to : 1
to a nonstatic -> data : 1
to a nonstatic -> member : 1
a nonstatic data -> member : 2
a nonstatic data -> the : 1
nonstatic data member -> or : 1
nonstatic data member -> separated : 1
nonstatic data member -> as : 1
nonstatic data member -> can : 1
nonstatic data member -> has : 2
data member or -> a : 3
data member or -> names : 1
data member or -> member : 1
member or a -> nonstatic : 1
member or a -> data : 1
member or a -> member : 1
member or a -> class : 1
or a nonstatic -> member : 1
a nonstatic member -> function : 2
a nonstatic member -> its : 1
a nonstatic member -> it : 2
a nonstatic member -> of : 1
a nonstatic member -> the : 1
a nonstatic member -> that : 1
a nonstatic member -> taken : 1
a nonstatic member -> but : 1
a nonstatic member -> can : 1
nonstatic member function -> requires : 1
nonstatic member function -> or : 1
nonstatic member function -> can : 3
nonstatic member function -> with : 1
member function requires -> a : 1
function requires a -> class : 1
requires a class -> name : 1
class name and -> scope : 1
name and scope -> operator : 1
and scope operator -> before : 1
scope operator before -> the : 1
operator before the -> pointers : 1
before the pointers -> to : 1
the pointers to -> members : 1
pointers to members -> can : 1
to members can -> never : 1
members can never -> be : 1
can never be -> cast : 1
can never be -> called : 1
can never be -> less : 1
can never be -> more : 1
never be cast -> to : 1
cast to ordinary -> and : 1
to ordinary and -> vice : 1
ordinary and vice -> you : 1
and vice you -> cannot : 1
vice you cannot -> declare : 1
cannot declare a -> reference : 2
cannot declare a -> that : 1
cannot declare a -> friend : 1
declare a reference -> to : 1
declare a reference -> of : 1
to a for -> information : 1
a for information -> about : 1
information about expressions -> that : 1
information about expressions -> and : 1
about expressions that -> dereference : 1
expressions that dereference -> pointers : 1
that dereference pointers -> to : 1
dereference pointers to -> a : 1
pointers to a -> to : 1
to a to -> a : 1
a to a -> static : 1
a to a -> function : 1
a to a -> you : 1
a to a -> the : 1
a to a -> without : 1
a to a -> facet : 1
a to a -> generalized : 1
a to a -> object : 3
a to a -> in : 1
to a static -> member : 1
to a static -> buffer : 1
to a static -> and : 1
a static member -> is : 2
a static member -> the : 1
a static member -> of : 2
a static member -> function : 1
a static member -> class : 1
static member is -> an : 1
static member is -> no : 1
member is an -> ordinary : 1
is an ordinary -> not : 1
is an ordinary -> function : 2
an ordinary not -> a : 1
ordinary not a -> member : 1
member the following -> are : 1
member the following -> example : 1
are some simple -> examples : 1
some simple examples -> of : 1
simple examples of -> member : 1
simple examples of -> two : 1
simple examples of -> resolving : 1
examples of member -> simple : 1
of member simple -> int : 1
member simple int -> int : 1
simple int int -> int : 1
int int int -> p : 1
int int int -> return : 3
int int int -> int : 6
int int int -> local : 1
int int int -> out : 1
int int int -> equivalent : 1
int int int -> cannot : 1
int int int -> and : 1
int int int -> const : 1
int int int -> cout : 1
int int int -> x : 1
int int int -> day : 2
int int p -> int : 1
int p int -> simple : 1
p int simple -> is : 1
int simple is -> a : 1
simple is a -> synonym : 1
an object or -> a : 2
an object or -> an : 1
an object or -> pointer : 1
an object or -> function : 1
object or a -> reference : 1
object or a -> pointer : 1
or a reference -> is : 1
a reference is -> declared : 1
a reference is -> the : 1
reference is declared -> just : 1
is declared just -> like : 1
declared just like -> a : 1
just like a -> but : 1
like a but -> with : 2
a but with -> an : 1
a but with -> the : 1
but with an -> ampersand : 1
with an ampersand -> instead : 1
an ampersand instead -> of : 1
ampersand instead of -> an : 1
instead of an -> asterisk : 1
of an asterisk -> a : 1
an asterisk a -> local : 1
asterisk a local -> or : 1
a local or -> global : 1
local or global -> reference : 1
or global reference -> declaration : 1
global reference declaration -> must : 1
reference declaration must -> have : 1
declaration must have -> an : 1
must have an -> initializer : 2
must have an -> declaration : 1
must have an -> integral : 3
must have an -> the : 1
must have an -> exception : 1
must have an -> accessible : 1
must have an -> identifier : 1
must have an -> empty : 1
have an initializer -> that : 1
have an initializer -> in : 1
have an initializer -> you : 1
an initializer that -> specifies : 1
initializer that specifies -> the : 1
that specifies the -> target : 1
that specifies the -> or : 1
that specifies the -> minimum : 1
that specifies the -> maximum : 1
that specifies the -> origin : 1
that specifies the -> positions : 2
specifies the target -> of : 1
target of the -> data : 1
target of the -> type : 1
target of the -> member : 1
target of the -> without : 1
of the data -> members : 1
of the data -> not : 1
of the data -> member : 3
the data members -> and : 2
the data members -> so : 1
the data members -> in : 1
the data members -> that : 1
data members and -> function : 1
data members and -> member : 4
members and function -> do : 1
and function do -> not : 1
function do not -> have : 1
not have you -> cannot : 1
have you cannot -> declare : 2
a reference of -> a : 2
a reference of -> compiler : 1
reference of a -> a : 1
reference of a -> pose : 1
a a reference -> to : 2
a class a -> pointer : 1
a class a -> function : 1
a class a -> base : 1
class a pointer -> to : 1
to a an -> array : 1
to a an -> lvalue : 1
a an array -> of : 1
of or a -> for : 1
of or a -> class : 1
of or a -> null : 4
or a for -> int : 1
a for int -> reference : 1
for int reference -> to : 1
int reference to -> int : 1
reference to int -> const : 1
int const rc -> no : 1
const rc no -> cv : 1
rc no cv -> qualified : 1
no cv qualified -> references : 1
cv qualified references -> int : 1
qualified references int -> no : 1
references int no -> reference : 1
int no reference -> of : 1
no reference of -> reference : 1
reference of reference -> no : 1
of reference no -> arrays : 1
reference no arrays -> of : 1
no arrays of -> reference : 1
arrays of reference -> rp : 1
of reference rp -> no : 1
reference rp no -> pointer : 1
rp no pointer -> to : 1
no pointer to -> reference : 1
pointer to reference -> p : 1
to reference p -> pointer : 1
reference p pointer -> to : 1
p pointer to -> int : 1
to int pr -> reference : 1
int pr reference -> to : 1
pr reference to -> unlike : 1
reference to unlike -> a : 1
to unlike a -> cannot : 1
unlike a cannot -> be : 1
a cannot be -> made : 1
cannot be made -> to : 1
be made to -> refer : 1
made to refer -> to : 1
to refer to -> a : 4
to refer to -> the : 3
to refer to -> data : 1
to refer to -> programs : 1
refer to a -> different : 1
refer to a -> temporary : 1
refer to a -> name : 2
refer to a -> i : 1
refer to a -> specific : 1
refer to a -> member : 1
refer to a -> type : 1
refer to a -> single : 1
different object at -> assignments : 1
object at assignments -> to : 1
at assignments to -> a : 1
assignments to a -> reference : 1
to a reference -> are : 1
to a reference -> to : 4
to a reference -> of : 1
to a reference -> type : 1
to a reference -> yields : 1
a reference are -> just : 1
reference are just -> like : 1
are just like -> assignments : 1
just like assignments -> to : 1
like assignments to -> the : 1
assignments to the -> referenced : 1
to the referenced -> a : 1
the referenced a -> reference : 1
referenced a reference -> cannot : 1
a reference cannot -> have : 1
reference cannot have -> there : 1
cannot have there -> is : 1
have there is -> no : 1
there is no -> such : 9
there is no -> conflict : 1
there is no -> the : 1
there is no -> mechanism : 1
there is no -> matching : 2
there is no -> harm : 1
there is no -> need : 3
there is no -> decrement : 4
there is no -> reason : 1
there is no -> but : 1
there is no -> and : 1
there is no -> execution : 2
there is no -> keyword : 1
there is no -> further : 1
there is no -> is : 1
there is no -> position : 2
there is no -> problem : 1
there is no -> next : 1
there is no -> predefined : 1
there is no -> after : 1
there is no -> version : 1
there is no -> guarantee : 2
there is no -> read : 3
there is no -> more : 2
is no such -> thing : 1
is no such -> is : 5
is no such -> a : 2
is no such -> character : 1
no such thing -> as : 1
such thing as -> a : 1
thing as a -> a : 1
as a a -> reference : 1
as a a -> virtual : 1
as a a -> significand : 2
as a a -> slice : 1
reference to is -> often : 1
to is often -> called : 1
is often called -> a : 2
is often called -> the : 2
is often called -> templates : 1
is often called -> this : 1
often called a -> reference : 1
often called a -> functors : 1
called a reference -> for : 1
sake of are -> often : 1
of are often -> used : 1
are often used -> to : 3
are often used -> when : 1
are often used -> by : 1
are often used -> with : 1
are often used -> in : 1
often used to -> names : 1
often used to -> declare : 1
often used to -> implement : 1
often used to -> define : 1
often used to -> obtain : 1
often used to -> denote : 1
often used to -> guard : 1
often used to -> cast : 1
often used to -> promote : 1
often used to -> convert : 1
often used to -> represent : 1
used to names -> to : 1
to names to -> temporary : 1
names to temporary -> implement : 1
to temporary implement -> for : 1
temporary implement for -> function : 1
implement for function -> and : 1
for function and -> optimize : 1
for function and -> a : 1
function and optimize -> for : 1
and optimize for -> large : 1
optimize for large -> function : 1
for large function -> the : 1
for large function -> arguments : 1
large function the -> function : 1
function in results -> in : 1
in results in -> function : 1
results in function -> demonstrates : 1
results in function -> void : 1
in function demonstrates -> the : 1
function demonstrates the -> first : 1
demonstrates the first -> two : 1
the first two -> the : 1
the first two -> branches : 1
the first two -> parameters : 1
first two the -> standard : 1
two the standard -> library : 1
library has the -> which : 1
has the which -> divides : 1
the which divides -> two : 1
which divides two -> integers : 1
divides two integers -> and : 1
two integers and -> returns : 1
integers and returns -> the : 1
and returns the -> quotient : 3
and returns the -> new : 2
and returns the -> actual : 1
and returns the -> cached : 1
and returns the -> same : 1
and returns the -> value : 3
and returns the -> associated : 1
and returns the -> function : 1
and returns the -> saved : 2
and returns the -> second : 1
and returns the -> previous : 1
and returns the -> the : 1
and returns the -> first : 1
and returns the -> current : 1
and returns the -> character : 1
and returns the -> it : 1
and returns the -> class : 1
and returns the -> uuid : 1
returns the quotient -> and : 3
the quotient and -> remainder : 4
the quotient and -> results : 1
the quotient and -> the : 1
quotient and remainder -> in : 3
quotient and remainder -> int : 1
quotient and remainder -> of : 2
quotient and remainder -> long : 1
and remainder in -> a : 3
remainder in a -> instead : 1
remainder in a -> single : 1
remainder in a -> type : 2
in a instead -> of : 1
a instead of -> copying : 1
a instead of -> computing : 1
instead of copying -> the : 1
of copying the -> structure : 1
copying the structure -> to : 1
the structure to -> a : 1
structure to a -> local : 1
to a local -> binds : 1
a local binds -> the : 1
local binds the -> return : 1
binds the return -> value : 1
the return value -> to : 2
the return value -> from : 2
the return value -> depends : 3
the return value -> is : 167
the return value -> of : 1
the return value -> might : 2
the return value -> and : 1
the return value -> can : 1
return value to -> a : 1
return value to -> see : 1
value to a -> reference : 1
value to a -> if : 1
value to a -> pointer : 2
value to a -> fixed : 1
value to a -> void : 1
value to a -> variable : 1
value to a -> shows : 1
value to a -> of : 1
value to a -> out : 1
reference to thereby -> avoiding : 1
to thereby avoiding -> an : 1
thereby avoiding an -> unnecessary : 1
avoiding an unnecessary -> copy : 1
an unnecessary copy -> of : 1
unnecessary copy of -> the : 1
copy of the -> return : 1
copy of the -> nonstatic : 1
copy of the -> every : 1
copy of the -> static : 1
copy of the -> instantiated : 1
copy of the -> that : 1
copy of the -> calling : 1
copy of the -> current : 2
copy of the -> items : 1
copy of the -> contents : 1
copy of the -> or : 1
copy of the -> global : 1
copy of the -> pointer : 1
copy of the -> parameter : 1
copy of the -> subsequent : 1
copy of the -> imbued : 1
copy of the -> sliced : 1
copy of the -> function : 1
the return suppose -> that : 1
return suppose that -> you : 1
suppose that you -> would : 1
that you would -> rather : 1
you would rather -> have : 1
would rather have -> return : 1
rather have return -> the : 1
have return the -> results : 1
return the results -> as : 1
the results as -> the : 1
results as the -> function : 1
as the function -> parameters : 1
as the function -> the : 1
as the function -> returns : 1
as the function -> calls : 1
the function parameters -> and : 3
the function parameters -> are : 1
parameters and are -> when : 1
and are when -> the : 1
are when the -> function : 1
when the function -> is : 2
when the function -> returns : 1
function is they -> are : 1
is they are -> bound : 1
they are bound -> to : 1
are bound to -> the : 2
bound to the -> function : 2
bound to the -> actual : 1
bound to the -> parameter : 1
bound to the -> only : 1
function and in -> when : 1
and in when -> assigns : 1
in when assigns -> to : 1
when assigns to -> it : 1
assigns to it -> actually : 1
to it actually -> stores : 1
it actually stores -> the : 1
actually stores the -> value : 1
stores the value -> in : 1
the value in -> so : 1
the value in -> header : 1
the value in -> where : 4
the value in -> the : 2
the value in -> a : 1
value in so -> when : 1
in so when -> has : 1
so when has -> the : 1
when has the -> quotient : 1
has the quotient -> and : 1
quotient and results -> in : 1
and results in -> function : 1
in function void -> long : 1
function void long -> const : 1
void long const -> result : 1
long const result -> quo : 1
const result quo -> rem : 1
result quo rem -> int : 1
quo rem int -> long : 1
rem int long -> q : 1
int long q -> remainder : 1
long q remainder -> r : 1
q remainder r -> other : 1
remainder r other -> common : 1
r other common -> use : 1
other common use -> of : 1
common use of -> is : 1
common use of -> a : 1
common use of -> and : 1
common use of -> pairs : 1
use of is -> to : 2
use of is -> the : 1
of is to -> use : 2
of is to -> read : 1
of is to -> interface : 1
use a reference -> for : 1
reference for function -> especially : 1
for function especially -> for : 1
function especially for -> large : 1
especially for large -> function : 1
large function arguments -> are : 1
function arguments are -> passed : 1
arguments are passed -> by : 1
arguments are passed -> as : 1
are passed by -> value : 1
passed by value -> in : 1
by value in -> which : 1
value in which -> requires : 1
in which requires -> copying : 1
which requires copying -> the : 1
requires copying the -> the : 1
copying the the -> copy : 1
the the copy -> operation : 1
the the copy -> that : 1
the copy operation -> can : 1
copy operation can -> be : 1
can be costly -> for : 1
be costly for -> a : 1
costly for a -> large : 1
for a large -> so : 1
a large so -> passing : 1
large so passing -> a : 1
so passing a -> reference : 1
passing a reference -> to : 1
to a large -> object : 1
to a large -> note : 1
to a large -> or : 1
a large object -> yields : 1
large object yields -> better : 1
object yields better -> performance : 1
yields better performance -> than : 1
better performance than -> passing : 1
better performance than -> the : 1
better performance than -> their : 1
performance than passing -> the : 1
than passing the -> large : 1
passing the large -> object : 1
the large object -> the : 1
large object the -> reference : 1
object the reference -> parameter : 1
the reference parameter -> is : 1
reference parameter is -> bound : 1
parameter is bound -> to : 1
is bound to -> the : 3
is bound to -> a : 1
to the actual -> avoiding : 1
to the actual -> control : 1
to the actual -> which : 1
the actual avoiding -> the : 1
actual avoiding the -> unnecessary : 1
avoiding the unnecessary -> if : 1
the unnecessary if -> the : 1
unnecessary if the -> function : 1
the function modifies -> the : 1
function modifies the -> it : 1
modifies the it -> would : 1
the it would -> violate : 1
it would violate -> the : 1
would violate the -> so : 1
violate the so -> you : 1
the so you -> should : 1
the so you -> insert : 1
the so you -> can : 1
so you should -> declare : 1
so you should -> never : 2
so you should -> use : 3
declare the reference -> which : 1
the reference which -> prevents : 1
reference which prevents -> the : 1
which prevents the -> function : 1
which prevents the -> enclosed : 1
which prevents the -> copying : 1
prevents the function -> from : 1
function from modifying -> the : 1
from modifying the -> in : 1
modifying the in -> this : 1
the in this -> semantics : 1
the in this -> an : 1
the in this -> section : 1
in this semantics -> are : 1
this semantics are -> and : 1
semantics are and -> the : 1
and the performance -> of : 1
the performance of -> is : 1
the performance of -> this : 1
the performance of -> a : 1
the performance of -> the : 1
performance of is -> the : 1
of is the -> standard : 2
of is the -> previous : 1
standard library often -> uses : 1
library often uses -> this : 1
often uses this -> for : 1
uses this for -> for : 1
this for for -> uses : 1
for for uses -> a : 1
for uses a -> reference : 1
uses a reference -> to : 1
to the string -> to : 1
to the string -> see : 1
to the string -> except : 1
the string to -> avoid : 1
the string to -> the : 2
the string to -> it : 1
the string to -> if : 2
the string to -> construct : 1
the string to -> search : 2
the string to -> erase : 1
the string to -> insert : 1
the string to -> like : 1
string to avoid -> making : 1
to avoid making -> unnecessary : 1
avoid making unnecessary -> copies : 1
making unnecessary copies -> of : 1
unnecessary copies of -> the : 2
copies of the -> in : 1
copies of the -> exception : 1
copies of the -> which : 1
copies of the -> items : 2
copies of the -> wide : 1
copies of the -> elements : 5
copies of the -> allocator : 1
copies of the -> contents : 1
copies of the -> last : 1
copies of the -> third : 1
copies of the -> character : 4
copies of the -> element : 1
the in for -> a : 3
in for a -> function : 1
in for a -> description : 1
in for a -> complete : 1
in for a -> the : 2
in for a -> in : 2
in for a -> temporary : 4
parameter is a -> the : 1
parameter is a -> simple : 1
parameter is a -> type : 1
parameter is a -> pointer : 1
parameter is a -> function : 1
parameter is a -> wide : 6
parameter is a -> multibyte : 1
a the argument -> must : 1
a the argument -> type : 1
the argument must -> be : 11
argument must be -> an : 2
argument must be -> convertible : 1
argument must be -> a : 12
argument must be -> promoted : 1
argument must be -> or : 1
must be an -> a : 1
must be an -> arithmetic : 1
must be an -> or : 1
must be an -> input : 2
must be an -> exact : 1
must be an -> most : 1
must be an -> address : 1
must be an -> promoted : 1
must be an -> which : 1
must be an -> so : 1
an a can -> bind : 1
a can bind -> to : 1
can bind to -> an : 1
bind to an -> which : 1
to an which -> permits : 1
an which permits -> temporary : 1
an which permits -> a : 1
which permits temporary -> objects : 1
permits temporary objects -> to : 1
temporary objects to -> be : 1
objects to be -> passed : 1
to be passed -> to : 2
be passed to -> the : 3
be passed to -> to : 1
be passed to -> pointer : 1
to the which -> is : 2
to the which -> are : 1
to the which -> updates : 1
which is another -> characteristic : 1
is another characteristic -> of : 1
another characteristic of -> for : 1
characteristic of for -> the : 1
of for the -> definitions : 1
of for the -> facet : 1
of for the -> which : 1
for the definitions -> of : 1
the definitions of -> and : 1
the definitions of -> all : 1
the definitions of -> the : 1
the definitions of -> a : 1
definitions of and -> must : 1
definitions of and -> some : 1
of and must -> be : 1
and must be -> initialized : 1
and must be -> linked : 1
and must be -> a : 1
must be initialized -> so : 1
must be initialized -> in : 1
be initialized so -> it : 1
initialized so it -> refers : 1
so it refers -> to : 1
it refers to -> an : 1
refers to an -> if : 1
refers to an -> instance : 1
to an if -> a : 1
to an if -> the : 1
to an if -> has : 1
an if a -> data : 1
if a data -> member : 1
data member is -> a : 3
data member is -> union : 1
data member is -> no : 1
data member is -> similar : 2
data member is -> if : 1
member is a -> it : 1
member is a -> pointer : 3
a it must -> be : 2
a it must -> not : 1
be initialized in -> the : 2
initialized in the -> initializer : 1
initialized in the -> function : 1
initialized in the -> class : 1
initialized in the -> see : 1
in the initializer -> list : 3
in the initializer -> can : 1
the initializer list -> function : 1
the initializer list -> is : 1
the initializer list -> are : 1
initializer list function -> parameters : 1
list function parameters -> that : 1
function parameters that -> are : 1
that are references -> are : 1
are references are -> initialized : 1
references are initialized -> in : 1
are initialized in -> the : 2
are initialized in -> order : 3
in the function -> binding : 1
in the function -> for : 1
in the function -> the : 2
in the function -> each : 1
in the function -> not : 1
in the function -> return : 1
in the function -> template : 2
in the function -> function : 1
in the function -> is : 1
in the function -> might : 1
in the function -> returns : 1
the function binding -> each : 1
function binding each -> reference : 1
binding each reference -> parameter : 1
each reference parameter -> to : 1
reference parameter to -> its : 1
parameter to its -> corresponding : 1
to its corresponding -> actual : 1
its corresponding actual -> all : 1
corresponding actual all -> other : 1
actual all other -> reference : 1
all other reference -> definitions : 1
other reference definitions -> must : 1
reference definitions must -> have : 1
definitions must have -> an : 1
have an declaration -> is : 1
an declaration is -> not : 1
declaration is not -> a : 1
declaration is not -> quite : 1
not a so -> it : 2
a so it -> take : 1
a so it -> should : 1
a so it -> cannot : 2
so it take -> an : 1
it take an -> reference : 1
take an reference -> can : 1
an reference can -> be : 1
reference can be -> initialized : 1
reference can be -> cast : 1
be initialized to -> refer : 1
be initialized to -> if : 1
initialized to refer -> to : 2
to a temporary -> for : 1
to a temporary -> object : 1
to a temporary -> copy : 1
a temporary for -> if : 1
temporary for if -> a : 1
for if a -> function : 1
a function takes -> a : 1
a function takes -> no : 1
function takes a -> reference : 1
function takes a -> as : 1
takes a reference -> to : 1
takes a reference -> and : 2
takes a reference -> the : 2
takes a reference -> if : 2
to a as -> a : 1
to a as -> class : 5
a as a -> you : 1
a as a -> the : 1
a as a -> constant : 1
a as a -> a : 1
as a you -> can : 1
you can pass -> an : 1
can pass an -> integer : 1
pass an integer -> as : 1
an integer as -> an : 1
integer as an -> the : 1
the compiler converts -> the : 2
compiler converts the -> integer : 1
compiler converts the -> null : 1
converts the integer -> to : 1
the integer to -> saves : 1
integer to saves -> the : 1
to saves the -> value : 1
saves the value -> as : 1
saves the value -> after : 1
the value as -> an : 1
the value as -> a : 1
the value as -> though : 1
value as an -> unnamed : 1
value as an -> the : 2
value as an -> argument : 1
as an unnamed -> temporary : 1
an unnamed temporary -> and : 1
unnamed temporary and -> passes : 1
temporary and passes -> that : 1
and passes that -> temporary : 1
passes that temporary -> object : 1
that temporary object -> as : 1
temporary object as -> the : 1
object as the -> function : 1
object as the -> lefthand : 1
function the reference -> is : 1
the reference is -> initialized : 1
the reference is -> usually : 1
reference is initialized -> to : 1
to the temporary -> after : 1
the temporary after -> the : 1
temporary after the -> function : 1
after the function -> the : 1
after the function -> parameters : 1
after the function -> header : 1
after the function -> such : 1
after the function -> which : 1
function the temporary -> object : 1
the temporary object -> is : 1
the temporary object -> into : 1
temporary object is -> equivalent : 1
temporary object is -> created : 1
temporary object is -> bound : 1
object is equivalent -> const : 1
is equivalent const -> float : 1
equivalent const float -> unnamed : 1
const float unnamed -> on : 1
float unnamed on -> a : 1
unnamed on a -> especially : 1
on a especially -> to : 1
a especially to -> a : 1
especially to a -> reference : 1
of a pose -> an : 1
a pose an -> additional : 1
pose an additional -> challenge : 1
an additional challenge -> for : 1
additional challenge for -> template : 1
challenge for template -> for : 1
for template for -> you : 1
template for you -> cannot : 1
for you cannot -> store : 2
for you cannot -> a : 1
for you cannot -> use : 1
you cannot store -> references : 1
you cannot store -> objects : 1
you cannot store -> an : 1
cannot store references -> in : 1
store references in -> a : 1
references in a -> container : 1
in a container -> because : 2
in a container -> or : 1
in a container -> by : 3
in a container -> but : 1
a container because -> a : 1
a container because -> copies : 1
container because a -> number : 1
because a number -> of : 1
a number of -> container : 1
a number of -> arguments : 1
a number of -> class : 1
a number of -> one : 1
a number of -> type : 1
a number of -> in : 1
a number of -> functions : 2
a number of -> abbreviations : 1
a number of -> mathematical : 1
a number of -> lists : 1
a number of -> advantages : 1
a number of -> starting : 2
a number of -> useful : 1
a number of -> problems : 1
number of container -> functions : 1
of container functions -> explicitly : 1
container functions explicitly -> declare : 1
functions explicitly declare -> their : 1
explicitly declare their -> parameters : 1
declare their parameters -> as : 1
their parameters as -> references : 1
parameters as references -> to : 1
as references to -> the : 1
references to the -> value : 1
references to the -> object : 1
references to the -> name : 1
references to the -> item : 1
references to the -> same : 1
to the value -> using : 1
to the value -> objects : 1
to the value -> type : 1
to the value -> in : 4
to the value -> to : 1
the value using -> with : 1
value using with -> your : 1
using with your -> and : 1
with your and -> see : 1
your and see -> what : 1
and see what -> you : 1
see what you -> should : 1
what you should -> see : 1
you should see -> a : 1
should see a -> lot : 1
see a lot -> of : 1
a lot of -> error : 1
lot of error -> you : 1
of error you -> can : 1
error you can -> write : 1
you can write -> a : 2
you can write -> the : 1
you can write -> more : 1
you can write -> helper : 1
you can write -> your : 1
can write a -> call : 1
can write a -> custom : 1
can write a -> string : 1
write a call -> it : 1
a call it -> and : 1
call it and -> specialize : 1
it and specialize -> the : 1
and specialize the -> template : 1
specialize the template -> so : 1
specialize the template -> to : 2
specialize the template -> if : 1
the template so -> references : 1
the template so -> it : 1
template so references -> are : 1
so references are -> stored : 1
references are stored -> as : 1
are stored as -> but : 1
are stored as -> four : 1
stored as but -> all : 1
as but all -> the : 1
but all the -> access : 1
all the access -> functions : 1
the access functions -> hide : 1
access functions hide -> the : 1
functions hide the -> this : 1
hide the this -> approach : 1
the this approach -> requires : 1
this approach requires -> you : 1
approach requires you -> to : 1
requires you to -> duplicate : 1
you to duplicate -> the : 1
to duplicate the -> entire : 1
duplicate the entire -> which : 1
the entire which -> is : 1
entire which is -> you : 1
which is you -> can : 1
which is you -> should : 1
you can encapsulate -> the : 1
can encapsulate the -> specialization : 1
encapsulate the specialization -> in : 1
the specialization in -> a : 1
specialization in a -> traits : 1
in a traits -> template : 1
a traits template -> called : 1
a traits template -> that : 1
traits template called -> to : 1
template called to -> for : 1
called to for -> more : 1
information about templates -> and : 1
about templates and -> and : 1
templates and and -> to : 1
and and to -> for : 1
information about as -> shown : 1
about as shown -> in : 1
shown in reference -> reference : 1
in reference reference -> ref : 1
reference reference ref -> type : 1
reference ref type -> trait : 1
ref type trait -> encapsulates : 1
type trait encapsulates -> reference : 1
trait encapsulates reference -> and : 1
encapsulates reference and -> mapping : 1
reference and mapping -> to : 1
and mapping to -> and : 1
mapping to and -> from : 1
and from the -> type : 1
and from the -> return : 1
and from the -> values : 1
type for use -> in : 1
for use in -> a : 1
for use in -> much : 1
use in a -> struct : 1
in a struct -> ref : 1
a struct ref -> typedef : 1
struct ref typedef -> t : 1
ref typedef t -> typedef : 1
typedef t typedef -> typedef : 8
typedef t typedef -> class : 1
typedef t typedef -> enum : 1
typedef t typedef -> typename : 1
typedef t typedef -> alloc : 3
typedef t typedef -> difference : 1
typedef t typedef -> const : 1
t typedef typedef -> const : 2
t typedef typedef -> typedef : 2
t typedef typedef -> friend : 1
t typedef typedef -> class : 1
t typedef typedef -> compare : 2
typedef typedef const -> typedef : 10
typedef typedef const -> typename : 1
typedef const typedef -> typedef : 4
typedef const typedef -> t : 3
typedef const typedef -> static : 1
typedef const typedef -> const : 1
typedef const typedef -> class : 1
typedef const typedef -> void : 2
const typedef typedef -> const : 4
const typedef t -> static : 1
const typedef t -> template : 2
typedef t static -> reference : 1
t static reference -> return : 1
static reference return -> static : 2
static reference return -> struct : 1
reference return static -> return : 2
return static return -> static : 2
return static return -> typedef : 1
static return static -> reference : 1
static return static -> pointer : 1
return static reference -> return : 1
reference return struct -> typedef : 1
return struct typedef -> t : 1
struct typedef t -> typedef : 3
struct typedef t -> enum : 2
const typedef static -> reference : 1
typedef static reference -> return : 1
return static pointer -> return : 1
static pointer return -> is : 1
pointer return is -> similar : 1
return is similar -> to : 1
similar to but -> allows : 1
to but allows -> references : 1
but allows references -> by : 1
allows references by -> storing : 1
references by storing -> references : 1
by storing references -> as : 1
storing references as -> typename : 1
references as typename -> class : 1
as typename class -> rvector : 1
typename class rvector -> typedef : 1
class rvector typedef -> typename : 1
rvector typedef typename -> typedef : 1
typedef typename typedef -> typename : 65
typedef typename typedef -> alloc : 2
typedef typename typedef -> typedef : 16
typedef typename typedef -> traits : 12
typedef typename typedef -> container : 3
typename typedef typename -> typedef : 59
typename typedef typename -> other : 1
typename typedef typename -> allocate : 1
typename typedef typename -> virtual : 1
typename typedef typename -> class : 1
typename typedef typename -> explicit : 1
typename typedef typename -> int : 1
typedef typename other -> typedefs : 1
typename other typedefs -> are : 1
other typedefs are -> class : 1
typedefs are class -> iterator : 1
are class iterator -> wraps : 1
class iterator wraps -> a : 1
iterator wraps a -> class : 1
wraps a class -> constructors : 1
a class constructors -> pass : 1
class constructors pass -> arguments : 1
constructors pass arguments -> to : 1
pass arguments to -> iterator : 1
arguments to iterator -> return : 1
to iterator return -> iterator : 1
iterator return iterator -> return : 3
return iterator return -> void : 1
return iterator return -> swap : 1
return iterator return -> const : 3
return iterator return -> iterator : 1
return iterator return -> data : 1
iterator return void -> reference : 1
return void reference -> return : 1
void reference return -> reference : 1
reference return reference -> return : 1
return reference return -> const : 1
reference return const -> return : 1
return const return -> other : 2
return const return -> tokenizer : 1
return const return -> void : 4
return const return -> member : 1
return const return -> friend : 1
return const return -> iterator : 2
return const return -> alloc : 1
return const return -> bool : 2
return const return -> const : 3
return const return -> return : 3
const return other -> members : 1
const return other -> arithmetic : 1
return other members -> are : 1
other members are -> supplies : 1
other members are -> set : 1
members are supplies -> an : 1
are supplies an -> initial : 1
supplies an initial -> value : 1
an initial value -> for : 2
initial value for -> an : 1
initial value for -> each : 1
value for an -> object : 1
value for an -> in : 1
value for an -> are : 1
an object being -> you : 1
object being you -> must : 1
being you must -> supply : 1
must supply an -> initializer : 1
must supply an -> explicit : 1
must supply an -> argument : 1
supply an initializer -> for : 1
an initializer for -> the : 1
an initializer for -> a : 1
initializer for the -> definition : 1
for the definition -> of : 5
of a reference -> or : 1
of a reference -> is : 1
of a reference -> typename : 1
of a reference -> to : 1
of a reference -> see : 1
a reference or -> an : 1
reference or an -> initializer : 1
or an initializer -> is : 1
initializer is optional -> for : 1
is optional for -> other : 1
optional for other -> object : 1
for other object -> an : 1
other object an -> initializer : 1
object an initializer -> is : 1
initializer is not -> allowed : 1
is not allowed -> for : 1
is not allowed -> in : 1
not allowed for -> most : 1
not allowed for -> declarations : 1
allowed for most -> data : 1
for most data -> members : 1
most data members -> within : 1
data members within -> a : 1
data members within -> an : 1
members within a -> class : 1
within a class -> but : 1
within a class -> the : 1
within a class -> accessing : 1
within a class -> definition : 4
a class but -> an : 1
class but an -> exception : 1
but an exception -> is : 1
an exception is -> made : 1
an exception is -> statements : 1
an exception is -> used : 1
an exception is -> the : 5
an exception is -> destructor : 1
an exception is -> thrown : 10
an exception is -> such : 3
an exception is -> after : 1
an exception is -> if : 1
an exception is -> it : 1
an exception is -> is : 1
exception is made -> for : 1
is made for -> data : 1
made for data -> members : 1
for data members -> of : 1
members of integral -> or : 1
or enumerated initializers -> are : 1
enumerated initializers are -> also : 1
initializers are also -> not : 1
are also not -> allowed : 1
also not allowed -> for : 1
allowed for declarations -> and : 1
for declarations and -> function : 1
declarations and function -> arguments : 1
and function arguments -> for : 1
function arguments for -> function : 1
arguments for function -> parameters : 1
arguments for function -> t : 1
function parameters can -> look : 1
parameters can look -> like : 1
look like see -> for : 1
like see for -> two : 1
see for two -> forms : 1
for two forms -> of : 1
two forms of -> initializers : 1
two forms of -> one : 1
two forms of -> by : 1
forms of initializers -> are : 1
of initializers are -> and : 1
initializers are and -> the : 1
and the is -> called : 1
and the is -> checked : 1
and the is -> reset : 1
and the is -> interpreted : 1
and the is -> tested : 1
and the is -> a : 1
the is called -> copy : 1
is called copy -> and : 1
called copy and -> is : 1
copy and is -> called : 1
is called direct -> an : 1
called direct an -> initializer : 1
direct an initializer -> starts : 1
an initializer starts -> with : 1
initializer starts with -> an : 1
with an equal -> which : 1
an equal which -> is : 1
equal which is -> followed : 1
which is followed -> by : 1
which is followed -> in : 1
by an expression -> or : 1
an expression or -> a : 2
expression or a -> list : 1
expression or a -> simple : 1
or a list -> of : 2
list of expressions -> in : 3
list of expressions -> to : 1
of expressions in -> curly : 1
of expressions in -> each : 1
of expressions in -> if : 1
of expressions in -> the : 1
expressions in curly -> a : 1
curly a initializer -> is : 1
a initializer is -> a : 1
initializer is a -> list : 1
initializer is a -> constant : 1
list of one -> or : 1
or more expressions -> in : 1
or more expressions -> as : 1
more expressions in -> note : 1
expressions in note -> that : 1
in note that -> these : 1
in note that -> can : 1
in note that -> the : 1
note that these -> initializers : 1
that these initializers -> look : 1
these initializers look -> like : 1
initializers look like -> assignment : 1
look like assignment -> statements : 1
like assignment statements -> or : 1
assignment statements or -> function : 1
statements or function -> but : 1
or function but -> they : 1
or function but -> it : 1
function but they -> are : 1
but they are -> they : 1
but they are -> used : 1
but they are -> stored : 1
they are they -> are : 1
are they are -> the : 1
are they are -> initialized : 1
are they are -> compared : 1
are they are -> implemented : 1
are they are -> subject : 1
they are the -> difference : 1
they are the -> same : 1
they are the -> the : 2
they are the -> functions : 1
are the difference -> is : 1
the difference is -> particularly : 1
the difference is -> that : 1
difference is particularly -> important : 1
is particularly important -> for : 1
particularly important for -> classes : 1
important for classes -> the : 1
for classes the -> following : 1
classes the following -> are : 1
examples of x -> initializes : 1
of x initializes -> x : 1
x initializes x -> with : 1
initializes x with -> the : 1
x with the -> value : 1
with the value -> int : 3
with the value -> the : 1
with the value -> are : 1
with the value -> returned : 1
with the value -> of : 1
the value int -> initializes : 2
the value int -> z : 1
value int initializes -> y : 1
value int initializes -> an : 1
int initializes y -> with : 1
initializes y with -> the : 1
y with the -> value : 1
value int z -> initializes : 1
int z initializes -> z : 1
z initializes z -> with : 1
initializes z with -> the : 1
z with the -> value : 1
int initializes an -> array : 1
initializes an array -> calls : 1
an array calls -> complex : 1
array calls complex -> initializing : 1
calls complex initializing -> a : 1
complex initializing a -> scalar : 1
initializing a scalar -> the : 1
a scalar the -> form : 1
scalar the form -> is : 1
the form is -> the : 1
the form is -> or : 1
the form is -> always : 2
form is the -> initial : 1
is the initial -> value : 1
is the initial -> multiple : 1
is the initial -> shift : 1
is the initial -> you : 1
the initial value -> is : 1
value is converted -> to : 1
is converted to -> the : 9
is converted to -> a : 10
is converted to -> an : 4
is converted to -> type : 2
is converted to -> if : 5
is converted to -> integral : 1
is converted to -> both : 2
is converted to -> and : 1
is converted to -> values : 1
is converted to -> using : 1
is converted to -> its : 1
converted to the -> desired : 2
converted to the -> first : 1
converted to the -> operator : 1
converted to the -> type : 6
converted to the -> other : 2
converted to the -> return : 2
converted to the -> parameter : 1
converted to the -> value : 1
converted to the -> execution : 1
converted to the -> character : 2
to the desired -> type : 2
to the desired -> parameter : 2
to the desired -> typename : 1
the desired type -> using : 1
the desired type -> in : 1
desired type using -> the : 1
type using the -> usual : 1
type using the -> c : 1
using the usual -> conversion : 1
the usual conversion -> rules : 1
usual conversion rules -> described : 1
conversion rules described -> in : 1
rules described in -> an : 1
rules described in -> the : 1
described in an -> all : 1
in an all -> objects : 1
an all objects -> are : 1
all objects are -> initialized : 1
objects are initialized -> by : 2
objects are initialized -> is : 1
objects are initialized -> with : 2
objects are initialized -> to : 1
objects are initialized -> when : 1
are initialized by -> calling : 4
are initialized by -> constant : 1
are initialized by -> code : 1
are initialized by -> invoking : 1
are initialized by -> characters : 1
initialized by calling -> their : 2
initialized by calling -> each : 1
initialized by calling -> the : 2
initialized by calling -> its : 2
by calling their -> default : 2
calling their default -> for : 1
calling their default -> other : 1
their default for -> more : 1
default for more -> information : 1
about pod and -> all : 1
pod and all -> other : 1
all other objects -> with : 1
other objects with -> static : 1
objects with static -> lifetimes : 1
with static lifetimes -> are : 1
static lifetimes are -> initialized : 1
lifetimes are initialized -> to : 1
are initialized to -> objects : 1
are initialized to -> their : 1
are initialized to -> zero : 1
are initialized to -> because : 1
are initialized to -> and : 1
are initialized to -> a : 1
initialized to objects -> with : 1
to objects with -> automatic : 1
objects with automatic -> lifetimes : 1
with automatic lifetimes -> are : 1
automatic lifetimes are -> left : 1
lifetimes are left -> later : 1
are left later -> in : 1
left later in -> this : 1
in this an -> uninitialized : 1
in this an -> overloaded : 1
in this an -> anonymous : 1
in this an -> object : 1
in this an -> is : 1
in this an -> iterator : 1
this an uninitialized -> reference : 1
an uninitialized reference -> or : 1
uninitialized reference or -> object : 1
reference or object -> is : 1
or object is -> an : 1
object is an -> must : 1
object is an -> implementation : 1
object is an -> object : 1
is an must -> use : 1
an must use -> a : 1
must use a -> when : 1
must use a -> statement : 1
must use a -> plain : 1
must use a -> common : 1
use a when -> constructing : 1
a when constructing -> an : 1
when constructing an -> object : 1
constructing an object -> whose : 1
object whose constructor -> takes : 1
whose constructor takes -> two : 1
constructor takes two -> or : 1
takes two or -> more : 1
two or more -> or : 1
two or more -> specializations : 1
or more or -> when : 1
or more or -> narrow : 1
more or when -> calling : 1
or when calling -> an : 1
when calling an -> the : 1
when calling an -> unqualified : 1
calling an the -> usual : 1
an the usual -> rules : 1
the usual rules -> for : 6
the usual rules -> that : 1
the usual rules -> apply : 1
the usual rules -> of : 1
usual rules for -> resolving : 4
usual rules for -> overload : 1
usual rules for -> for : 1
usual rules for -> deducing : 1
rules for resolving -> overloaded : 4
for resolving overloaded -> functions : 3
for resolving overloaded -> in : 1
resolving overloaded functions -> apply : 1
resolving overloaded functions -> array : 1
resolving overloaded functions -> applies : 1
overloaded functions apply -> to : 1
functions apply to -> the : 1
to the choice -> of : 1
the choice of -> overloaded : 1
the choice of -> container : 1
choice of overloaded -> for : 1
of overloaded for -> more : 1
overloaded for more -> information : 1
information about overloading -> and : 1
about overloading and -> for : 1
overloading and for -> more : 1
and for more -> information : 10
and for more -> expression : 1
and for more -> of : 1
and for more -> key : 1
information about for -> point : 1
about for point -> int : 1
for point int -> explicit : 1
point int explicit -> point : 1
int explicit point -> invokes : 1
explicit point invokes -> int : 1
point invokes int -> point : 1
invokes int point -> invokes : 1
int point invokes -> point : 1
point invokes point -> invokes : 1
invokes point invokes -> cannot : 1
point invokes cannot -> be : 1
invokes cannot be -> used : 1
cannot be used -> as : 2
cannot be used -> in : 4
cannot be used -> to : 1
cannot be used -> or : 1
cannot be used -> with : 4
cannot be used -> directly : 1
cannot be used -> and : 1
cannot be used -> for : 1
used as an -> initializer : 1
used as an -> operand : 1
used as an -> implicit : 1
as an initializer -> in : 1
an initializer in -> an : 1
an initializer in -> the : 1
initializer in an -> but : 1
initializer in an -> point : 1
in an but -> can : 1
an but can -> be : 1
but can be -> used : 1
but can be -> revealed : 1
in other initialization -> contexts : 1
other initialization contexts -> a : 1
initialization contexts a -> constructor : 1
contexts a constructor -> initializer : 1
a constructor initializer -> list : 1
constructor initializer list -> or : 1
initializer list or -> as : 1
list or as -> a : 1
or as a -> value : 1
or as a -> function : 1
or as a -> parameter : 1
or as a -> character : 1
or as a -> container : 1
as a value -> in : 1
a value in -> an : 1
a value in -> only : 1
a value in -> a : 4
a value in -> resetting : 1
a value in -> convert : 1
value in an -> if : 1
in an if -> the : 2
in an if -> there : 1
an if the -> type : 3
an if the -> object : 1
an if the -> return : 1
an if the -> base : 1
an if the -> next : 1
an if the -> is : 1
an if the -> host : 1
class the default -> constructor : 1
the default constructor -> is : 1
the default constructor -> for : 3
the default constructor -> with : 1
the default constructor -> must : 1
the default constructor -> and : 1
default constructor is -> the : 1
default constructor is -> initializers : 1
default constructor is -> protected : 1
constructor is the -> object : 1
constructor is the -> constructor : 1
is the object -> is : 2
is the object -> a : 1
is the object -> remembers : 1
is the object -> that : 2
is the object -> owns : 1
the object is -> initialized : 3
the object is -> of : 1
the object is -> allocated : 1
the object is -> destroyed : 9
the object is -> created : 1
the object is -> not : 4
the object is -> an : 1
the object is -> never : 3
the object is -> bound : 1
the object is -> always : 1
the object is -> guaranteed : 1
the object is -> members : 1
the object is -> implicitly : 1
the object is -> being : 2
the object is -> finalization : 1
the object is -> the : 2
the object is -> accessed : 1
the object is -> associated : 1
the object is -> constructed : 1
the object is -> passed : 1
the object is -> fails : 2
the object is -> it : 2
the object is -> with : 1
the object is -> no : 2
the object is -> in : 5
initialized to empty -> shows : 1
to empty shows -> an : 1
empty shows an -> no : 1
shows an no -> matter : 1
an no matter -> what : 1
no matter what -> type : 1
matter what type -> the : 1
what type the -> template : 1
type the template -> can : 1
type the template -> is : 1
the template can -> rely : 1
the template can -> be : 1
template can rely -> on : 1
can rely on -> to : 1
can rely on -> the : 1
can rely on -> that : 1
rely on to -> be : 1
on to be -> a : 1
be a meaningful -> default : 1
a meaningful default -> empty : 1
meaningful default empty -> struct : 1
default empty struct -> wrapper : 1
empty struct wrapper -> explicit : 1
struct wrapper explicit -> t : 1
wrapper explicit t -> initializes : 1
explicit t initializes -> i : 1
t initializes i -> with : 1
initializes i with -> or : 1
i with or -> zero : 1
with or zero -> enum : 1
or zero enum -> color : 1
zero enum color -> blue : 1
enum color blue -> initializes : 1
color blue initializes -> c : 1
blue initializes c -> with : 1
initializes c with -> or : 1
c with or -> black : 1
with or black -> initializes : 1
or black initializes -> b : 1
black initializes b -> with : 1
initializes b with -> or : 1
b with or -> false : 1
with or false -> initializes : 1
or false initializes -> p : 1
false initializes p -> with : 1
initializes p with -> an : 1
p with an -> if : 1
with an if -> the : 1
if the object -> is : 7
if the object -> has : 2
if the object -> derives : 1
if the object -> does : 1
object is of -> class : 1
is of class -> the : 1
of class the -> value : 1
of class the -> result : 1
of class the -> size : 1
of class the -> class : 1
of class the -> candidate : 1
of class the -> syntax : 1
class the value -> to : 1
the value to -> the : 2
the value to -> each : 1
the value to -> an : 1
the value to -> format : 1
value to the -> right : 1
value to the -> power : 1
value to the -> inserting : 1
value to the -> first : 1
value to the -> second : 1
value to the -> preferred : 1
to the right -> of : 3
to the right -> are : 3
to the right -> by : 2
the right of -> the : 3
right of the -> equal : 1
right of the -> or : 1
right of the -> if : 1
of the equal -> sign : 1
the equal sign -> is : 1
equal sign is -> converted : 1
sign is converted -> to : 1
converted to a -> temporary : 1
converted to a -> value : 1
converted to a -> class : 1
converted to a -> type : 1
converted to a -> pointer : 5
converted to a -> the : 2
converted to a -> function : 2
converted to a -> null : 1
converted to a -> data : 1
converted to a -> nonmember : 1
converted to a -> one : 1
converted to a -> zero : 1
converted to a -> reference : 1
converted to a -> and : 2
converted to a -> base : 1
converted to a -> whitespace : 1
converted to a -> series : 1
converted to a -> if : 1
converted to a -> long : 1
converted to a -> wide : 1
converted to a -> in : 1
converted to a -> narrow : 1
a temporary object -> of : 1
a temporary object -> and : 2
a temporary object -> to : 1
a temporary object -> prior : 2
a temporary object -> that : 1
temporary object of -> the : 1
object of the -> desired : 1
object of the -> same : 1
of the desired -> and : 1
the desired and -> the : 1
desired and the -> first : 1
and the first -> object : 1
and the first -> dimension : 1
and the first -> permutation : 1
and the first -> parameter : 1
the first object -> is : 1
first object is -> constructed : 1
object is constructed -> by : 1
object is constructed -> when : 1
object is constructed -> at : 1
object is constructed -> and : 1
is constructed by -> calling : 1
is constructed by -> copying : 1
constructed by calling -> its : 1
calling its copy -> generic : 1
its copy generic -> term : 1
copy generic term -> for : 1
generic term for -> an : 1
term for an -> array : 1
for an array -> or : 1
for an array -> remaining : 1
an array or -> simple : 1
an array or -> function : 1
an array or -> a : 1
array or simple -> class : 1
or simple class -> is : 1
simple class is -> because : 1
class is because -> it : 1
is because it -> aggregates : 1
is because it -> contains : 1
because it aggregates -> multiple : 1
it aggregates multiple -> values : 1
aggregates multiple values -> into : 1
multiple values into -> a : 1
values into a -> single : 1
a single in -> this : 1
single in this -> case : 1
in this case -> means : 1
in this case -> three : 1
this case means -> the : 1
case means the -> class : 1
means the class -> does : 1
the class does -> not : 2
class does not -> have : 2
class does not -> override : 1
class does not -> need : 1
class does not -> use : 1
does not have -> any : 3
does not have -> to : 7
does not have -> an : 3
does not have -> a : 12
does not have -> class : 1
does not have -> the : 1
does not have -> if : 1
does not have -> container : 1
does not have -> constant : 1
not have any -> of : 2
not have any -> encoding : 1
not have any -> data : 1
not have any -> side : 3
have any of -> the : 3
of the or -> protected : 1
of the or -> in : 1
of the or -> or : 1
of the or -> an : 1
of the or -> reference : 1
of the or -> if : 1
of the or -> else : 1
of the or -> the : 1
the or protected -> nonstatic : 1
or protected nonstatic -> data : 2
protected nonstatic data -> initialize : 1
protected nonstatic data -> members : 1
nonstatic data initialize -> an : 1
data initialize an -> you : 1
initialize an you -> can : 1
an you can -> supply : 1
an you can -> use : 1
an you can -> take : 1
an you can -> think : 1
you can supply -> multiple : 1
you can supply -> a : 2
you can supply -> any : 1
can supply multiple -> values : 1
supply multiple values -> in : 1
multiple values in -> curly : 1
values in curly -> as : 1
in curly as -> described : 1
curly as described -> in : 1
described in the -> following : 1
described in the -> next : 4
described in the -> class : 1
described in the -> the : 1
the following a -> pod : 1
the following a -> left : 1
the following a -> nameless : 1
the following a -> member : 1
the following a -> call : 2
following a pod -> object : 1
object is a -> special : 1
object is a -> constant : 1
object is a -> block : 1
object is a -> standard : 4
object is a -> wide : 4
object is a -> copy : 1
is a special -> kind : 1
is a special -> member : 1
is a special -> case : 1
a special kind -> of : 2
special kind of -> an : 1
special kind of -> see : 1
kind of an -> earlier : 1
of an earlier -> in : 1
of an earlier -> supplying : 1
an earlier in -> this : 1
about pod see -> also : 1
pod see also -> for : 1
see also for -> information : 3
see also for -> wide : 1
see also for -> classes : 1
also for information -> about : 3
about pod initialize -> an : 1
pod initialize an -> aggregate : 1
initialize an aggregate -> of : 1
an aggregate of -> class : 1
aggregate of class -> supply : 1
of class supply -> an : 1
class supply an -> initial : 1
class supply an -> argument : 1
supply an initial -> value : 1
value for each -> nonstatic : 1
for each nonstatic -> data : 1
each nonstatic data -> member : 1
data member separated -> by : 1
member separated by -> commas : 1
separated by commas -> and : 2
by commas and -> enclosed : 2
commas and enclosed -> in : 2
and enclosed in -> curly : 2
enclosed in curly -> for : 1
enclosed in curly -> multidimensional : 1
in curly for -> nested : 1
curly for nested -> use : 1
for nested use -> nested : 1
nested use nested -> curly : 1
use nested curly -> values : 1
nested curly values -> are : 1
curly values are -> associated : 1
values are associated -> with : 1
are associated with -> members : 1
are associated with -> their : 1
are associated with -> you : 1
associated with members -> in : 1
with members in -> the : 1
members in the -> order : 1
members in the -> unless : 1
members in the -> base : 2
members in the -> structure : 1
in the order -> of : 2
the order of -> the : 6
the order of -> items : 2
the order of -> grouping : 1
the order of -> initialization : 1
the order of -> when : 1
the order of -> elements : 1
the order of -> standard : 1
order of the -> more : 1
order of the -> body : 1
order of the -> that : 1
order of the -> children : 1
order of the -> items : 1
order of the -> and : 1
order of the -> is : 1
order of the -> members : 1
order of the -> callback : 1
order of the -> entire : 1
order of the -> color : 1
of the more -> values : 1
of the more -> memory : 1
of the more -> complex : 1
of the more -> interesting : 1
the more values -> than : 1
more values than -> members : 1
more values than -> elements : 1
values than members -> results : 1
than members results -> in : 1
members results in -> an : 1
an if there -> are : 1
if there are -> fewer : 1
if there are -> more : 1
if there are -> multiple : 3
there are fewer -> values : 1
are fewer values -> than : 1
fewer values than -> the : 1
fewer values than -> elements : 1
values than the -> members : 1
than the members -> without : 1
the members without -> values : 1
members without values -> are : 1
without values are -> initialized : 1
values are initialized -> by : 3
by calling each -> default : 1
calling each default -> constructor : 1
each default constructor -> or : 1
default constructor or -> initializing : 1
default constructor or -> an : 1
constructor or initializing -> the : 1
or initializing the -> members : 1
initializing the members -> to : 1
the members to -> initializer : 1
members to initializer -> list : 1
to initializer list -> can : 1
initializer list can -> be : 2
list can be -> which : 1
list can be -> followed : 1
can be which -> means : 1
can be which -> forces : 1
can be which -> prevents : 1
be which means -> all : 1
be which means -> the : 1
which means all -> members : 1
means all members -> are : 1
means all members -> of : 1
all members are -> initialized : 1
members are initialized -> to : 1
members are initialized -> in : 2
initialized to their -> which : 1
to their which -> is : 1
their which is -> different : 1
which is different -> from : 1
is different from -> omitting : 1
is different from -> allocating : 2
is different from -> the : 1
is different from -> all : 1
different from omitting -> the : 1
from omitting the -> initializer : 1
omitting the initializer -> the : 1
omitting the initializer -> entirely : 1
the initializer the -> latter : 1
initializer the latter -> causes : 1
the latter causes -> all : 1
latter causes all -> members : 1
causes all members -> to : 1
all members to -> be : 2
members to be -> left : 1
members to be -> or : 1
to be left -> the : 1
be left the -> following : 1
left the following -> example : 1
example shows several -> different : 1
example shows several -> instances : 1
shows several different -> initializers : 1
shows several different -> kinds : 3
shows several different -> point : 1
shows several different -> ways : 1
several different initializers -> for : 1
different initializers for -> point : 1
initializers for point -> double : 1
for point double -> point : 1
point double point -> origin : 1
double point origin -> all : 1
point origin all -> members : 1
origin all members -> initialized : 1
all members initialized -> to : 1
members initialized to -> point : 1
initialized to point -> value : 1
to point value -> is : 1
point value is -> not : 1
value is not -> known : 1
value is not -> the : 1
value is not -> of : 1
is not known -> point : 1
not known point -> pt : 1
known point pt -> struct : 1
point pt struct -> line : 1
pt struct line -> point : 1
struct line point -> line : 1
line point line -> vec : 1
point line vec -> is : 1
line vec is -> all : 1
vec is all -> the : 1
is all the -> first : 1
is all the -> items : 1
all the first -> member : 1
the first member -> of : 2
first member of -> a : 1
first member of -> the : 1
member of a -> union : 1
member of a -> a : 1
member of a -> derived : 2
member of a -> base : 2
member of a -> specific : 1
member of a -> particular : 1
member of a -> class : 5
member of a -> and : 1
member of a -> as : 1
of a union -> can : 1
of a union -> must : 1
a union can -> be : 1
a union can -> have : 2
a union can -> initialize : 1
union can be -> u : 1
union can be -> declared : 1
union can be -> a : 1
can be u -> int : 1
be u int -> unsigned : 1
u int unsigned -> char : 1
int unsigned char -> u : 1
unsigned char u -> x : 1
char u x -> initializes : 1
u x initializes -> elements : 1
x initializes elements -> of : 1
initializes elements of -> an : 1
elements of an -> with : 1
of an with -> values : 1
of an with -> a : 1
of an with -> no : 1
an with values -> separated : 1
with values separated -> by : 1
values separated by -> commas : 1
in curly multidimensional -> arrays : 1
curly multidimensional arrays -> can : 1
multidimensional arrays can -> be : 1
arrays can be -> initialized : 1
be initialized by -> nesting : 1
initialized by nesting -> sets : 1
by nesting sets -> of : 1
nesting sets of -> curly : 1
sets of curly -> an : 1
of curly an -> error : 1
curly an error -> results : 1
results if there -> are : 1
there are more -> values : 1
there are more -> subtle : 1
are more values -> than : 1
values than elements -> in : 2
than elements in -> the : 2
elements in the -> if : 1
elements in the -> the : 4
elements in the -> array : 3
elements in the -> range : 22
elements in the -> some : 1
elements in the -> each : 1
elements in the -> refers : 1
elements in the -> argument : 1
elements in the -> same : 1
elements in the -> first : 1
elements in the -> sequences : 1
elements in the -> return : 1
elements in the -> function : 2
elements in the -> t : 1
elements in the -> deque : 1
elements in the -> generalized : 1
elements in the -> all : 1
in the if -> an : 1
in the if -> statements : 1
in the if -> a : 1
in the if -> that : 1
in the if -> is : 5
in the if -> the : 6
in the if -> you : 3
the if an -> initializer : 1
the if an -> exception : 1
the if an -> output : 1
the if an -> element : 1
if an initializer -> has : 1
an initializer has -> fewer : 1
initializer has fewer -> values : 1
has fewer values -> than : 1
the the remaining -> elements : 1
the remaining elements -> in : 1
the remaining elements -> at : 1
remaining elements in -> the : 1
in the array -> are : 3
in the array -> times : 1
in the array -> in : 1
in the array -> that : 2
in the array -> starting : 3
in the array -> must : 3
in the array -> using : 1
the array are -> initialized : 1
the array are -> all : 1
the array are -> overwritten : 1
the array are -> although : 2
array are initialized -> to : 1
initialized to zero -> values : 1
to zero values -> constructors : 1
zero values constructors -> or : 1
values constructors or -> if : 1
constructors or if -> the : 1
if the declarator -> omits : 1
the declarator omits -> the : 1
declarator omits the -> array : 1
omits the array -> the : 1
the array the -> size : 1
the array the -> list : 1
array the size -> is : 1
size is determined -> by : 1
is determined by -> counting : 1
is determined by -> the : 5
is determined by -> their : 1
is determined by -> adding : 1
determined by counting -> the : 1
by counting the -> number : 2
counting the number -> of : 3
number of values -> in : 1
of values in -> the : 1
values in the -> initializer : 1
values in the -> same : 1
values in the -> range : 8
values in the -> objects : 1
values in the -> memory : 1
values in the -> array : 1
values in the -> the : 1
the initializer can -> be : 1
initializer can be -> which : 1
be which forces -> all : 1
which forces all -> elements : 1
forces all elements -> to : 1
all elements to -> be : 1
elements to be -> initialized : 1
elements to be -> inserted : 1
to be initialized -> to : 1
to be initialized -> and : 1
to be initialized -> constructor : 1
initialized to if -> the : 1
to if the -> initializer : 1
to if the -> type : 1
to if the -> value : 3
to if the -> left : 1
to if the -> currency : 4
to if the -> symbol : 2
to if the -> size : 1
to if the -> result : 1
to if the -> orientation : 1
to if the -> entire : 1
to if the -> flag : 1
to if the -> new : 1
if the initializer -> is : 2
the initializer is -> the : 1
the initializer is -> a : 1
the initializer is -> required : 1
is the array -> size : 1
is the array -> is : 2
is the array -> cannot : 1
array size must -> be : 1
size must be -> omitting : 1
must be omitting -> the : 1
be omitting the -> initializer : 1
the initializer entirely -> causes : 1
initializer entirely causes -> all : 1
entirely causes all -> elements : 1
causes all elements -> of : 1
all elements of -> the : 2
all elements of -> c : 1
all elements of -> project : 1
elements of the -> array : 3
elements of the -> same : 3
elements of the -> container : 1
elements of the -> range : 1
elements of the -> map : 2
elements of the -> set : 2
elements of the -> slice : 2
elements of the -> argument : 1
elements of the -> then : 3
elements of the -> an : 1
elements of the -> the : 1
array to be -> uninitialized : 1
to be uninitialized -> which : 1
be uninitialized which -> are : 1
uninitialized which are -> initialized : 1
which are initialized -> with : 1
are initialized with -> their : 4
initialized with their -> default : 3
initialized with their -> given : 1
with their default -> the : 2
with their default -> if : 1
their default the -> following : 1
their default the -> can : 1
default the following -> example : 1
following example the -> size : 1
example the size -> of : 1
size of is -> set : 1
of is set -> to : 1
is set to -> because : 1
is set to -> if : 5
is set to -> in : 3
is set to -> the : 8
is set to -> point : 4
is set to -> is : 2
is set to -> and : 2
is set to -> bytes : 1
is set to -> a : 1
set to because -> its : 1
to because its -> initializer : 1
because its initializer -> contains : 1
its initializer contains -> three : 1
initializer contains three -> and : 1
contains three and -> the : 1
three and the -> elements : 1
and the elements -> of : 1
the elements of -> are : 1
the elements of -> this : 1
the elements of -> the : 10
the elements of -> a : 9
the elements of -> class : 3
the elements of -> in : 5
elements of are -> initialized : 1
of are initialized -> to : 1
initialized to because -> an : 1
to because an -> empty : 1
because an empty -> initializer : 1
an empty initializer -> is : 2
an empty initializer -> to : 1
an empty initializer -> in : 2
empty initializer is -> array : 1
empty initializer is -> initialized : 1
initializer is array -> of : 1
is array of -> three : 1
array of three -> elements : 1
of three elements -> int : 1
three elements int -> initialize : 1
elements int initialize -> to : 1
int initialize to -> all : 1
initialize to all -> initializing : 1
to all initializing -> a : 1
all initializing a -> you : 1
initializing a you -> can : 1
you can flatten -> the : 1
can flatten the -> curly : 1
flatten the curly -> braces : 1
braces and initialize -> elements : 1
and initialize elements -> of : 2
initialize elements of -> the : 2
the array in -> row : 1
the array in -> which : 1
array in row -> major : 1
in row major -> order : 1
row major order -> index : 1
major order index -> varies : 1
order index varies -> the : 1
index varies the -> for : 1
varies the for -> both : 1
the for both -> and : 1
for both and -> end : 1
both and end -> up : 1
and end up -> having : 1
end up having -> the : 1
up having the -> same : 1
having the same -> values : 1
the same values -> in : 1
same values in -> their : 1
values in their -> corresponding : 1
in their corresponding -> initialize : 1
their corresponding initialize -> and : 1
corresponding initialize and -> to : 1
initialize and to -> the : 1
and to the -> identity : 1
and to the -> compilation : 1
and to the -> imaginary : 1
and to the -> section : 2
and to the -> delimiter : 1
and to the -> first : 1
and to the -> corresponding : 1
to the identity -> int : 1
the identity int -> int : 1
identity int int -> of : 1
int int of -> or : 1
int of or -> is : 1
of or is -> special : 1
or is special -> because : 1
is special because -> you : 1
special because you -> can : 1
special because you -> never : 1
because you can -> initialize : 1
you can initialize -> such : 1
you can initialize -> a : 1
can initialize such -> arrays : 1
initialize such arrays -> with : 1
such arrays with -> a : 1
arrays with a -> string : 1
with a string -> remember : 1
with a string -> argument : 1
with a string -> and : 3
a string remember -> that : 1
string remember that -> every : 1
remember that every -> string : 1
that every string -> literal : 1
every string literal -> has : 1
string literal has -> an : 1
has an implicit -> null : 1
has an implicit -> if : 1
an implicit null -> character : 1
implicit null character -> at : 1
null character at -> the : 2
character at the -> for : 1
character at the -> end : 1
at the for -> the : 1
the for the -> following : 1
the for the -> same : 1
the for the -> symbol : 1
the for the -> function : 1
two declarations are -> as : 1
two declarations are -> char : 1
declarations are as -> are : 1
as are the -> two : 1
are the two -> the : 1
the two the -> following : 1
the two the -> left : 1
the two the -> postfix : 1
the two the -> reverse : 1
two the following -> two : 1
declarations are char -> char : 1
are char char -> last : 1
char char last -> expression : 1
char last expression -> in : 1
last expression in -> an : 1
expression in an -> initializer : 1
expression in an -> as : 1
in an initializer -> list : 1
in an initializer -> you : 1
an initializer list -> can : 1
can be followed -> by : 2
be followed by -> a : 3
be followed by -> the : 1
by a this -> is : 1
a this is -> convenient : 1
a this is -> sometimes : 1
a this is -> because : 1
this is convenient -> when : 1
is convenient when -> you : 1
convenient when you -> are : 1
when you are -> maintaining : 1
when you are -> using : 1
when you are -> dealing : 1
you are maintaining -> software : 1
are maintaining software -> and : 1
maintaining software and -> find : 1
software and find -> that : 1
and find that -> you : 1
find that you -> often : 1
find that you -> can : 1
that you often -> need : 1
you often need -> to : 1
often need to -> change : 1
need to change -> the : 2
to change the -> order : 1
to change the -> function : 1
to change the -> before : 1
to change the -> locale : 1
change the order -> of : 2
order of items -> in : 2
order of items -> within : 1
order of items -> that : 4
order of items -> is : 1
of items in -> an : 1
of items in -> a : 1
of items in -> the : 7
of items in -> struct : 1
items in an -> initializer : 1
an initializer you -> need : 1
an initializer you -> must : 1
initializer you need -> to : 1
need to treat -> the : 1
need to treat -> as : 1
to treat the -> last : 1
treat the last -> element : 1
the last element -> differently : 1
the last element -> in : 4
the last element -> and : 1
the last element -> of : 13
the last element -> function : 1
last element differently -> from : 1
element differently from -> the : 1
differently from the -> other : 1
from the other -> the : 1
from the other -> although : 1
from the other -> because : 1
the other the -> last : 1
the other the -> target : 1
the other the -> usual : 1
other the last -> item : 1
the last item -> has : 1
the last item -> from : 3
the last item -> of : 1
the last item -> in : 11
the last item -> to : 1
the last item -> function : 1
the last item -> inserted : 1
last item has -> a : 1
item has a -> trailing : 1
has a trailing -> you : 1
a trailing you -> can : 1
trailing you can -> easily : 1
you can easily -> select : 1
can easily select -> the : 1
easily select the -> entire : 1
select the entire -> line : 1
the entire line -> containing : 1
entire line containing -> and : 1
line containing and -> move : 1
containing and move -> it : 1
and move it -> to : 1
move it to -> a : 1
it to a -> different : 1
it to a -> in : 1
a different location -> in : 1
different location in -> the : 1
location in the -> and : 1
the and you -> need : 1
the and you -> will : 1
the and you -> can : 2
and you need -> to : 1
need to worry -> about : 1
to worry about -> fixing : 1
worry about fixing -> up : 1
about fixing up -> the : 1
fixing up the -> commas : 1
up the commas -> can : 1
the commas can -> initialize : 1
commas can initialize -> any : 1
can initialize any -> object : 1
initialize any object -> with : 1
any object with -> a : 1
a single value -> in : 1
a single value -> is : 1
single value in -> curly : 1
value in curly -> but : 1
in curly but -> you : 1
curly but you -> cannot : 1
you cannot omit -> the : 1
cannot omit the -> value : 1
omit the value -> the : 1
the value the -> way : 1
the value the -> result : 1
the value the -> function : 2
value the way -> you : 1
the way you -> can : 1
the way you -> would : 4
way you can -> with : 1
you can with -> a : 1
you can with -> the : 1
can with a -> x : 1
with a x -> object : 1
a x object -> has : 1
x object has -> a : 1
that the duration -> from : 1
the duration from -> when : 1
duration from when -> the : 1
from when the -> memory : 1
when the memory -> for : 1
memory for the -> object : 1
for the object -> is : 2
for the object -> that : 1
for the object -> at : 1
object is allocated -> and : 1
is allocated and -> the : 1
allocated and the -> object : 1
allocated and the -> template : 1
and the object -> is : 3
and the object -> retains : 1
initialized to when -> the : 1
to when the -> object : 1
to when the -> facet : 1
when the object -> is : 7
object is destroyed -> and : 1
object is destroyed -> when : 4
object is destroyed -> is : 1
object is destroyed -> before : 2
object is destroyed -> this : 1
object is destroyed -> or : 2
is destroyed and -> the : 1
destroyed and the -> memory : 1
and the memory -> is : 1
the memory is -> object : 1
the memory is -> freed : 1
the memory is -> deallocated : 1
the memory is -> managed : 1
the memory is -> properly : 2
memory is object -> lifetimes : 1
is object lifetimes -> fall : 1
object lifetimes fall -> into : 1
lifetimes fall into -> three : 1
fall into three -> are : 1
into three are -> local : 1
three are local -> to : 1
are local to -> a : 1
are local to -> the : 1
a function body -> or : 1
a function body -> used : 1
function body or -> a : 1
body or a -> nested : 1
or a nested -> block : 1
or a nested -> loop : 1
or a nested -> templates : 1
a nested block -> within : 1
nested block within -> a : 1
block within a -> function : 1
within a function -> the : 1
function the object -> is : 1
object is created -> when : 1
object is created -> and : 2
object is created -> as : 1
is created when -> execution : 1
created when execution -> reaches : 1
when execution reaches -> the : 3
when execution reaches -> a : 1
execution reaches the -> and : 2
execution reaches the -> global : 1
execution reaches the -> end : 1
execution reaches the -> last : 1
reaches the and -> the : 2
is destroyed when -> execution : 2
is destroyed when -> the : 2
destroyed when execution -> leaves : 3
when execution leaves -> the : 4
when execution leaves -> a : 1
execution leaves the -> can : 1
execution leaves the -> compound : 1
execution leaves the -> the : 1
execution leaves the -> scope : 1
leaves the can -> be : 1
can be local -> the : 1
be local the -> storage : 1
local the storage -> class : 1
storage class or -> global : 1
class or global -> namespace : 1
or global namespace -> static : 1
global namespace static -> objects : 1
namespace static objects -> are : 1
static objects are -> constructed : 2
static objects are -> destroyed : 3
static objects are -> if : 1
static objects are -> also : 1
objects are constructed -> at : 1
objects are constructed -> when : 2
are constructed at -> most : 1
constructed at most -> once : 1
constructed at most -> and : 1
at most once -> and : 1
most once and -> destroyed : 1
once and destroyed -> only : 1
and destroyed only -> if : 1
destroyed only if -> they : 1
only if they -> are : 2
only if they -> can : 1
if they are -> successfully : 1
if they are -> equal : 1
if they are -> not : 3
if they are -> the : 2
if they are -> struct : 1
if they are -> different : 1
they are successfully -> local : 1
are successfully local -> static : 1
successfully local static -> objects : 1
local static objects -> are : 1
are constructed when -> execution : 1
are constructed when -> the : 1
constructed when execution -> reaches : 2
reaches the global -> objects : 1
the global objects -> are : 1
global objects are -> constructed : 1
constructed when the -> program : 1
when the program -> starts : 1
when the program -> the : 1
when the program -> is : 1
when the program -> terminates : 1
when the program -> exits : 1
the program starts -> but : 1
program starts but -> before : 1
starts but before -> is : 1
but before is -> static : 1
before is static -> objects : 1
is static objects -> are : 1
objects are destroyed -> in : 2
objects are destroyed -> when : 2
objects are destroyed -> by : 1
objects are destroyed -> automatically : 2
are destroyed in -> the : 2
destroyed in the -> opposite : 1
destroyed in the -> reverse : 1
in the opposite -> order : 5
in the opposite -> direction : 1
the opposite order -> of : 5
opposite order of -> their : 1
opposite order of -> in : 1
opposite order of -> a : 1
opposite order of -> the : 2
order of their -> for : 1
order of their -> and : 2
order of their -> if : 1
of their for -> more : 1
their for more -> see : 1
for more see -> main : 1
more see main -> in : 1
see main in -> created : 1
main in created -> with : 1
in created with -> expressions : 1
created with expressions -> are : 1
with expressions are -> their : 1
expressions are their -> lifetimes : 1
are their lifetimes -> extend : 1
their lifetimes extend -> until : 1
lifetimes extend until -> the : 1
extend until the -> expression : 1
until the expression -> is : 1
the expression is -> invoked : 1
the expression is -> equivalent : 4
the expression is -> evaluated : 1
the expression is -> the : 2
the expression is -> not : 1
the expression is -> like : 1
the expression is -> typically : 1
the expression is -> storing : 1
expression is invoked -> on : 1
is invoked on -> the : 1
invoked on the -> see : 1
on the see -> for : 1
about the and -> is : 1
about the and -> help : 1
about the and -> expressions : 1
about the and -> instantiations : 1
about the and -> including : 1
the and is -> a : 1
the and is -> stored : 1
the and is -> an : 1
the and is -> the : 1
and is a -> by : 1
and is a -> is : 1
and is a -> pattern : 1
and is a -> template : 1
and is a -> plain : 1
and is a -> function : 1
and is a -> protected : 1
and is a -> container : 1
and is a -> scalar : 19
and is a -> integer : 1
is a by -> grouping : 1
is a by -> the : 1
a by grouping -> related : 1
by grouping related -> declarations : 1
grouping related declarations -> in : 1
related declarations in -> a : 1
declarations in a -> you : 1
declarations in a -> morass : 1
in a you -> can : 1
in a you -> must : 1
in a you -> cannot : 1
you can avoid -> name : 1
you can avoid -> these : 2
can avoid name -> collisions : 1
avoid name collisions -> with : 2
avoid name collisions -> within : 1
name collisions with -> declarations : 1
name collisions with -> base : 1
collisions with declarations -> in : 1
with declarations in -> other : 1
declarations in other -> for : 1
in other for -> suppose : 1
in other for -> one : 1
other for suppose -> you : 1
suppose you are -> writing : 3
you are writing -> a : 6
you are writing -> your : 1
are writing a -> word : 1
are writing a -> that : 1
are writing a -> custom : 1
are writing a -> generic : 1
are writing a -> data : 1
are writing a -> stream : 1
are writing a -> class : 1
writing a word -> and : 1
a word and -> you : 1
word and you -> use : 1
and you use -> packages : 1
you use packages -> that : 1
use packages that -> others : 1
packages that others -> have : 1
that others have -> including : 1
others have including -> a : 1
have including a -> screen : 1
including a screen -> layout : 1
a screen layout -> an : 1
screen layout an -> equation : 1
layout an equation -> typesetting : 1
an equation typesetting -> and : 1
equation typesetting and -> an : 1
typesetting and an -> package : 1
and an package -> for : 1
an package for -> computing : 1
package for computing -> printed : 1
for computing printed -> positions : 1
computing printed positions -> to : 1
printed positions to -> high : 1
positions to high -> accuracy : 1
to high accuracy -> with : 1
high accuracy with -> equation : 1
accuracy with equation -> package : 1
with equation package -> has : 1
equation package has -> a : 1
package has a -> class : 3
has a class -> called : 3
has a class -> template : 1
a class called -> which : 1
a class called -> for : 2
class called which -> represents : 1
called which represents -> fractions : 1
which represents fractions -> in : 1
represents fractions in -> an : 1
fractions in an -> the : 1
an the arithmetic -> package : 1
the arithmetic package -> has : 1
arithmetic package has -> a : 1
class called for -> computing : 1
class called for -> laying : 1
called for computing -> with : 1
for computing with -> exact : 1
computing with exact -> rational : 1
with exact rational -> and : 1
exact rational and -> the : 1
rational and the -> layout : 1
and the layout -> package : 1
the layout package -> has : 1
layout package has -> a : 1
called for laying -> out : 1
for laying out -> fractional : 1
laying out fractional -> regions : 1
out fractional regions -> of : 1
fractional regions of -> a : 1
regions of a -> without : 1
of a without -> all : 1
a without all -> three : 1
without all three -> would : 1
all three would -> and : 1
three would and -> you : 1
would and you -> would : 1
and you would -> not : 1
would not be -> able : 2
would not be -> portable : 1
would not be -> very : 1
not be able -> to : 2
to use more -> than : 1
use more than -> one : 1
of the three -> packages : 1
of the three -> special : 1
of the three -> partial : 1
the three packages -> in : 1
three packages in -> a : 1
packages in a -> single : 1
a single each -> class : 1
single each class -> can : 1
each class can -> reside : 1
class can reside -> in : 1
can reside in -> a : 1
reside in a -> separate : 1
a separate and -> namespaces : 1
separate and namespaces -> are : 1
namespaces are similar -> to : 1
similar to java -> with : 1
to java with -> a : 1
java with a -> key : 1
with a key -> in : 1
a key in -> classes : 1
a key in -> a : 6
key in classes -> in : 1
in classes in -> the : 1
classes in the -> same : 1
classes in the -> standard : 1
the same package -> have : 1
same package have -> additional : 1
package have additional -> access : 1
have additional access -> rights : 1
additional access rights -> to : 1
access rights to -> each : 1
rights to each -> in : 1
to each in -> namespaces : 1
each in namespaces -> confer : 1
in namespaces confer -> no : 1
namespaces confer no -> special : 1
confer no special -> access : 1
no special access -> a : 1
no special access -> privileges : 1
special access a -> with : 1
access a with -> the : 1
with the keyword -> followed : 4
the keyword followed -> by : 5
keyword followed by -> an : 1
keyword followed by -> a : 2
keyword followed by -> the : 3
by an optional -> identifier : 1
by an optional -> or : 1
by an optional -> modifier : 1
an optional identifier -> namespace : 1
optional identifier namespace -> and : 1
identifier namespace and -> zero : 1
namespace and zero -> or : 1
and zero or -> more : 1
or more declarations -> in : 1
more declarations in -> curly : 1
declarations in curly -> namespace : 1
in curly namespace -> declarations : 1
curly namespace declarations -> can : 1
namespace declarations can -> be : 1
namespace declarations can -> name : 1
declarations can be -> even : 1
can be even -> in : 1
be even in -> separate : 1
even in separate -> source : 1
separate source files -> or : 1
source files or -> the : 1
files or the -> namespace : 1
or the namespace -> scope : 1
the namespace scope -> is : 1
namespace scope is -> the : 1
is the accumulation -> of : 1
the accumulation of -> all : 1
accumulation of all -> definitions : 1
of all definitions -> of : 1
all definitions of -> the : 1
definitions of the -> same : 1
definitions of the -> templates : 1
definitions of the -> members : 1
definitions of the -> and : 1
the same namespace -> that : 1
the same namespace -> as : 2
same namespace that -> the : 1
namespace that the -> compiler : 1
compiler has seen -> at : 1
compiler has seen -> the : 1
has seen at -> the : 1
seen at the -> time : 1
at the time -> it : 1
at the time -> of : 1
the time it -> looks : 1
time it looks -> up : 1
it looks up -> a : 1
up a given -> name : 1
a given name -> in : 1
given name in -> the : 1
the namespaces can -> be : 1
namespaces can be -> a : 1
be a shows -> a : 1
a shows a -> sample : 1
a shows a -> simple : 3
a shows a -> function : 1
shows a sample -> namespace : 1
a sample namespace -> a : 1
sample namespace a -> the : 1
namespace a the -> initial : 1
the initial declaration -> namespace : 1
initial declaration namespace -> numeric : 1
declaration namespace numeric -> class : 1
class rational typename -> const : 1
rational typename const -> this : 1
typename const this -> is : 1
const this is -> a : 1
is a second -> it : 1
a second it -> adds : 1
second it adds -> an : 1
it adds an -> operator : 1
adds an operator -> to : 1
an operator to -> the : 1
an operator to -> each : 1
operator to the -> namespace : 1
operator to the -> corresponding : 1
to the namespace -> numeric : 1
to the namespace -> that : 1
namespace numeric rational -> const : 1
numeric rational const -> the : 1
rational const the -> definition : 1
const the definition -> of : 1
definition of can -> appear : 1
of can appear -> inside : 1
can appear inside -> or : 1
appear inside or -> outside : 1
inside or outside -> the : 1
or outside the -> namespace : 1
outside the namespace -> if : 1
outside the namespace -> are : 1
the namespace if -> it : 1
namespace if it -> is : 1
if it is -> the : 5
if it is -> it : 2
if it is -> not : 8
if it is -> signed : 1
if it is -> only : 2
if it is -> a : 2
if it is -> never : 1
if it is -> used : 1
if it is -> executes : 1
if it is -> with : 1
if it is -> call : 1
if it is -> equal : 2
if it is -> returning : 2
must be qualified -> with : 3
be qualified with -> the : 3
qualified with the -> scope : 1
qualified with the -> class : 1
qualified with the -> outer : 1
with the scope -> const : 1
with the scope -> operator : 1
the scope const -> int : 1
scope const int -> using : 1
const int using -> rational : 1
int using rational -> a : 1
using rational a -> b : 1
rational a b -> can : 1
a b can -> define : 1
b can define -> a : 1
define a namespace -> without : 1
define a namespace -> or : 1
a namespace without -> a : 1
namespace without a -> in : 1
without a in -> which : 1
in which case -> the : 24
in which case -> it : 4
in which case -> instances : 1
in which case -> every : 1
in which case -> is : 4
in which case -> no : 2
in which case -> a : 1
which case the -> compiler : 1
which case the -> result : 1
which case the -> expression : 1
which case the -> deallocation : 1
which case the -> serial : 1
which case the -> declaration : 1
which case the -> excess : 1
which case the -> object : 1
which case the -> entire : 1
which case the -> contents : 1
which case the -> declarations : 1
which case the -> function : 2
which case the -> value : 2
which case the -> deque : 1
which case the -> arguments : 6
which case the -> list : 1
which case the -> vector : 1
case the compiler -> uses : 1
compiler uses a -> internal : 1
uses a internal -> each : 1
a internal each -> source : 1
internal each source -> unnamed : 1
each source unnamed -> namespace : 1
source unnamed namespace -> is : 1
unnamed namespace is -> separate : 1
unnamed namespace is -> that : 1
namespace is separate -> from : 1
is separate from -> the : 1
from the unnamed -> namespace : 1
the unnamed namespace -> in : 2
the unnamed namespace -> int : 1
unnamed namespace in -> every : 1
unnamed namespace in -> each : 1
namespace in every -> other : 1
in every other -> source : 1
every other source -> can : 1
other source can -> define : 1
source can define -> an : 1
can define an -> unnamed : 1
define an unnamed -> nested : 1
an unnamed nested -> within : 1
unnamed nested within -> a : 1
nested within a -> named : 1
within a named -> namespace : 1
a named namespace -> vice : 1
named namespace vice -> the : 1
namespace vice the -> compiler : 1
vice the compiler -> generates : 1
the compiler generates -> a : 2
the compiler generates -> the : 1
the compiler generates -> calls : 1
compiler generates a -> private : 1
compiler generates a -> virtual : 1
generates a private -> name : 1
a private name -> for : 1
private name for -> the : 1
name for the -> unnamed : 1
name for the -> rules : 1
name for the -> macro : 1
for the unnamed -> namespace : 1
namespace in each -> unique : 1
in each unique -> as : 1
each unique as -> with : 1
unique as with -> a : 1
as with a -> named : 1
with a named -> you : 1
a named you -> can : 1
named you can -> use : 1
can use multiple -> namespace : 1
use multiple namespace -> definitions : 1
multiple namespace definitions -> to : 1
namespace definitions to -> compose : 1
definitions to compose -> the : 1
to compose the -> as : 1
compose the as -> shown : 1
the as shown -> in : 5
shown in namespace -> int : 1
in namespace int -> i : 1
namespace int i -> namespace : 1
namespace int i -> hides : 1
int i namespace -> int : 1
i namespace int -> same : 1
namespace int same -> unnamed : 1
int same unnamed -> namespace : 1
same unnamed namespace -> namespace : 1
unnamed namespace namespace -> x : 1
unnamed namespace namespace -> y : 1
namespace namespace x -> int : 1
namespace x int -> i : 2
x int i -> hides : 1
x int i -> is : 1
int i hides -> i : 1
int i hides -> but : 1
i hides i -> in : 1
hides i in -> unnamed : 1
i in unnamed -> namespace : 1
in unnamed namespace -> namespace : 1
namespace namespace y -> int : 1
namespace y int -> return : 1
y int return -> namespace : 1
int return namespace -> x : 1
int return namespace -> ns : 1
return namespace x -> int : 1
int i is -> different : 1
i is different -> namespace : 1
is different namespace -> than : 1
different namespace than -> namespace : 1
namespace than namespace -> int : 1
than namespace int -> i : 1
i hides but -> is : 1
hides but is -> inaccessible : 1
but is inaccessible -> outside : 1
is inaccessible outside -> the : 1
inaccessible outside the -> unnamed : 1
outside the unnamed -> namespace : 1
unnamed namespace int -> return : 1
namespace int return -> int : 1
int return int -> int : 3
int return int -> simpler : 1
int return int -> using : 1
int return int -> return : 3
return int int -> i : 1
return int int -> int : 6
return int int -> short : 1
return int int -> inner : 1
int int i -> or : 1
int i or -> prints : 1
i or prints -> prints : 1
or prints prints -> prints : 1
prints prints advantage -> of : 1
prints advantage of -> using : 1
advantage of using -> an : 1
advantage of using -> inheritance : 1
advantage of using -> over : 1
of using an -> unnamed : 1
using an unnamed -> namespace : 1
namespace is that -> you : 1
that you are -> guaranteed : 1
that you are -> using : 1
you are guaranteed -> that : 2
are guaranteed that -> all : 1
are guaranteed that -> the : 1
guaranteed that all -> names : 1
that all names -> declared : 1
all names declared -> in : 1
names declared in -> it : 1
names declared in -> the : 2
declared in it -> can : 1
in it can -> never : 1
in it can -> be : 1
it can never -> clash : 1
it can never -> be : 1
can never clash -> with : 1
never clash with -> names : 1
clash with names -> in : 1
with names in -> other : 1
in other source -> the : 1
in other source -> namespace : 1
in other source -> this : 1
other source the -> disadvantage : 1
other source the -> convention : 1
source the disadvantage -> is : 1
the disadvantage is -> that : 1
disadvantage is that -> you : 1
cannot use the -> scope : 1
cannot use the -> in : 1
cannot use the -> name : 1
cannot use the -> usual : 1
cannot use the -> these : 1
cannot use the -> position : 1
use the scope -> operator : 2
operator to qualify -> identifiers : 1
operator to qualify -> an : 1
operator to qualify -> the : 1
to qualify identifiers -> in : 1
qualify identifiers in -> an : 1
identifiers in an -> unnamed : 1
an unnamed so -> you : 1
unnamed so you -> must : 1
so you must -> avoid : 1
so you must -> pass : 1
so you must -> not : 1
so you must -> specify : 1
so you must -> cast : 1
so you must -> store : 1
you must avoid -> name : 1
must avoid name -> collisions : 1
name collisions within -> the : 1
collisions within the -> same : 1
same source programmers -> are : 1
source programmers are -> accustomed : 1
accustomed to using -> declarations : 1
accustomed to using -> macros : 1
to using declarations -> for : 1
declarations for names -> that : 1
for names that -> are : 1
that are private -> to : 1
are private to -> a : 1
are private to -> the : 1
private to a -> source : 1
to a source -> you : 1
to a source -> file : 1
a source you -> can : 1
you can do -> the : 1
you can do -> things : 1
you can do -> this : 1
you can do -> your : 1
you can do -> with : 1
can do the -> same : 2
do the same -> in : 1
do the same -> were : 1
same in but -> it : 1
in but it -> is : 1
it is better -> to : 1
is better to -> use : 1
better to use -> an : 1
use an unnamed -> namespace : 1
unnamed namespace because -> a : 1
namespace because a -> namespace : 1
because a namespace -> can : 1
a namespace can -> contain : 1
a namespace can -> be : 1
namespace can contain -> any : 1
can contain any -> kind : 1
contain any kind -> of : 1
any kind of -> declaration : 1
any kind of -> the : 1
any kind of -> expression : 1
any kind of -> container : 1
any kind of -> and : 1
any kind of -> crazy : 1
any kind of -> typename : 1
kind of declaration -> and : 1
of declaration and -> whereas : 1
declaration and whereas -> declarations : 1
and whereas declarations -> are : 1
whereas declarations are -> limited : 1
declarations are limited -> to : 1
are limited to -> functions : 1
limited to functions -> and : 1
to functions and -> of : 1
to functions and -> when : 1
functions and of -> objects : 1
and of objects -> and : 1
of objects and -> functions : 1
of objects and -> returns : 1
of objects and -> initialize : 1
objects and functions -> at : 1
objects and functions -> as : 1
and functions at -> namespace : 1
functions at namespace -> scope : 1
namespace scope are -> deprecated : 1
scope are deprecated -> in : 1
are deprecated in -> outside : 1
are deprecated in -> the : 1
deprecated in outside -> of : 1
in outside of -> all : 1
of all and -> classes : 1
all and classes -> are : 1
and classes are -> implicitly : 1
classes are implicitly -> declared : 1
are implicitly declared -> in : 1
implicitly declared in -> the : 1
in the a -> program : 1
in the a -> name : 1
in the a -> range : 2
in the a -> namespace : 1
in the a -> character : 1
in the a -> pointer : 2
in the a -> reverse : 4
in the a -> substring : 1
the a program -> has : 1
a program has -> a : 1
program has a -> single : 1
has a single -> global : 1
has a single -> and : 1
has a single -> conversion : 1
has a single -> the : 1
has a single -> which : 1
a single global -> which : 1
single global which -> is : 1
global which is -> shared : 1
which is shared -> by : 1
is shared by -> all : 1
shared by all -> source : 1
by all source -> files : 1
all source files -> that : 1
source files that -> are : 1
files that are -> compiled : 1
files that are -> part : 1
that are compiled -> and : 1
are compiled and -> linked : 1
compiled and linked -> into : 1
and linked into -> the : 1
linked into the -> declarations : 1
into the declarations -> in : 1
the declarations in -> the : 2
the global namespace -> are : 1
the global namespace -> called : 1
global namespace are -> typically : 1
namespace are typically -> referred : 1
are typically referred -> to : 1
typically referred to -> as : 1
to as global -> names : 1
as global names -> can : 1
global names can -> be : 1
can be accessed -> directly : 1
can be accessed -> only : 1
can be accessed -> even : 1
be accessed directly -> using : 1
accessed directly using -> the : 1
directly using the -> global : 1
using the global -> scope : 1
operator unary as -> described : 1
unary as described -> earlier : 1
earlier in name -> alias : 1
in name alias -> is : 1
name alias is -> a : 1
alias is a -> synonym : 1
an existing you -> can : 1
existing you can -> use : 1
use an alias -> name : 1
an alias name -> to : 1
alias name to -> qualify : 1
name to qualify -> names : 1
to qualify names -> the : 1
qualify names the -> in : 1
names the in -> declarations : 1
the in declarations -> and : 1
in declarations and -> but : 1
declarations and but -> not : 1
and but not -> in : 1
and but not -> virtual : 1
not in namespace -> shows : 1
in namespace shows -> some : 1
namespace shows some -> alias : 1
shows some alias -> original : 1
some alias original -> int : 1
alias original int -> ns : 1
original int ns -> alias : 1
int ns alias -> int : 1
ns alias int -> return : 1
alias int return -> ok : 1
int return ok -> using : 1
int return ok -> int : 1
return ok using -> ok : 1
ok using ok -> int : 1
using ok int -> return : 1
ok int return -> namespace : 1
return namespace ns -> cannot : 1
namespace ns cannot -> use : 1
ns cannot use -> alias : 1
cannot use alias -> here : 1
use alias here -> int : 1
alias here int -> namespace : 1
here int namespace -> alias : 1
int namespace alias -> can : 1
namespace alias can -> provide : 1
alias can provide -> an : 1
can provide an -> abbreviation : 1
provide an abbreviation -> for : 1
an abbreviation for -> an : 1
abbreviation for an -> otherwise : 1
for an otherwise -> unwieldy : 1
an otherwise unwieldy -> namespace : 1
otherwise unwieldy namespace -> the : 1
unwieldy namespace the -> long : 1
namespace the long -> name : 1
the long name -> might : 1
long name might -> incorporate : 1
name might incorporate -> a : 1
might incorporate a -> full : 1
incorporate a full -> organization : 1
a full organization -> deeply : 1
full organization deeply -> nested : 1
organization deeply nested -> or : 1
deeply nested or -> version : 1
nested or version -> namespace : 1
or version namespace -> namespace : 1
version namespace namespace -> namespace : 1
namespace namespace namespace -> namespace : 1
namespace namespace namespace -> declaration : 1
namespace namespace namespace -> using : 1
namespace namespace declaration -> imports : 1
namespace declaration imports -> a : 1
declaration imports a -> name : 2
imports a name -> from : 2
a name from -> one : 1
a name from -> another : 1
name from one -> namespace : 1
from one namespace -> and : 1
one namespace and -> adds : 1
namespace and adds -> it : 1
and adds it -> to : 1
adds it to -> the : 1
it to the -> namespace : 1
it to the -> result : 1
it to the -> output : 1
it to the -> initial : 1
contains the the -> imported : 1
the the imported -> name : 1
the imported name -> is : 1
imported name is -> a : 1
name is a -> synonym : 1
name is a -> function : 1
name is a -> special : 1
name is a -> template : 1
name is a -> bare : 1
for the original -> only : 1
for the original -> name : 1
the original only -> the : 1
original only the -> declared : 1
only the declared -> name : 1
the declared name -> is : 2
the declared name -> extends : 1
declared name is -> added : 1
declared name is -> in : 1
name is added -> to : 1
is added to -> the : 7
is added to -> a : 1
to the target -> which : 1
to the target -> object : 2
to the target -> of : 1
the target which -> means : 1
target which means -> an : 1
which means an -> enumerated : 1
means an enumerated -> type : 1
enumerated type does -> not : 1
does not bring -> with : 1
not bring with -> it : 1
bring with it -> all : 1
with it all -> the : 1
it all the -> enumerated : 1
all the enumerated -> if : 1
all the enumerated -> the : 1
the enumerated if -> you : 1
enumerated if you -> want : 1
want to use -> all : 1
want to use -> a : 2
want to use -> the : 4
want to use -> default : 1
want to use -> strings : 1
want to use -> an : 1
want to use -> any : 1
want to use -> stlport : 1
to use all -> the : 1
to use all -> uppercase : 1
to use all -> characters : 1
use all the -> each : 1
all the each -> one : 1
the each one -> requires : 1
each one requires -> its : 1
one requires its -> own : 1
requires its own -> a : 1
its own a -> name : 1
own a name -> that : 1
that you reference -> in : 1
you reference in -> a : 1
reference in a -> declaration : 1
in a declaration -> is : 1
in a declaration -> and : 1
declaration is added -> to : 1
to the current -> it : 1
to the current -> the : 1
to the current -> following : 1
to the current -> not : 1
to the current -> or : 1
to the current -> global : 1
the current it -> might : 1
the current it -> can : 1
current it might -> hide : 1
it might hide -> names : 1
might hide names -> in : 1
in outer a -> declaration : 1
outer a declaration -> can : 1
declaration can also -> interfere : 1
declaration can also -> be : 2
can also interfere -> with : 1
also interfere with -> local : 1
interfere with local -> declarations : 1
with local declarations -> of : 1
local declarations of -> the : 1
the same shows -> some : 1
same shows some -> examples : 1
examples of numeric -> class : 1
of numeric class -> fraction : 1
numeric class fraction -> fraction : 1
class fraction fraction -> const : 2
fraction fraction const -> fraction : 2
fraction fraction const -> namespace : 1
fraction fraction const -> int : 1
fraction const fraction -> fraction : 2
const fraction fraction -> const : 2
fraction const namespace -> eqn : 1
const namespace eqn -> class : 1
namespace eqn class -> fraction : 1
eqn class fraction -> fraction : 1
fraction const int -> nf : 1
const int nf -> nf : 1
int nf nf -> calls : 1
nf nf calls -> qf : 1
nf calls qf -> calls : 1
calls qf calls -> nf : 1
qf calls nf -> nf : 1
calls nf nf -> no : 1
nf nf no -> using : 1
nf no using -> fraction : 1
no using fraction -> f : 1
using fraction f -> is : 1
fraction f is -> f : 1
f is f -> nf : 1
is f nf -> ok : 1
f nf ok -> f : 1
nf ok f -> type : 1
ok f type -> mismatch : 1
f type mismatch -> using : 1
f type mismatch -> int : 1
type mismatch using -> like : 1
mismatch using like -> trying : 1
using like trying -> to : 1
like trying to -> declare : 1
trying to declare -> fraction : 1
to declare fraction -> twice : 1
declare fraction twice -> in : 1
fraction twice in -> the : 1
twice in the -> same : 1
same scope if -> using : 1
scope if using -> hides : 1
if using hides -> outer : 1
using hides outer -> fraction : 1
hides outer fraction -> fraction : 1
outer fraction fraction -> hides : 1
fraction fraction hides -> outer : 1
fraction hides outer -> f : 1
hides outer f -> f : 1
outer f f -> same : 1
f f same -> types : 1
f same types -> f : 1
same types f -> type : 1
types f type -> mismatch : 1
type mismatch int -> name : 1
mismatch int name -> fraction : 1
int name fraction -> in : 1
name fraction in -> use : 1
fraction in use -> can : 1
in use can -> copy : 1
use can copy -> names : 1
can copy names -> from : 1
copy names from -> one : 1
names from one -> to : 1
from one to -> another : 1
one to another -> with : 1
to another with -> a : 1
another with a -> suppose : 1
with a suppose -> you : 1
a suppose you -> refactor : 1
suppose you refactor -> a : 1
you refactor a -> program : 1
refactor a program -> and : 1
a program and -> realize : 1
program and realize -> that : 1
and realize that -> the : 1
realize that the -> class : 1
that the class -> has : 1
that the class -> name : 2
the class has -> all : 1
the class has -> a : 5
the class has -> no : 1
the class has -> at : 1
class has all -> the : 1
has all the -> functionality : 1
all the functionality -> you : 1
the functionality you -> need : 1
functionality you need -> in : 1
you need in -> the : 1
need in the -> equation : 1
in the equation -> you : 1
the equation you -> decide : 1
equation you decide -> to : 1
you decide to -> use : 2
you decide to -> write : 1
you decide to -> insert : 1
decide to use -> instead : 1
decide to use -> template : 1
to use instead -> of : 2
use instead of -> but : 1
use instead of -> const : 1
use instead of -> to : 1
use instead of -> see : 1
instead of but -> you : 1
of but you -> want : 1
but you want -> to : 2
want to keep -> the : 1
to keep the -> interface : 1
to keep the -> syntax : 1
to keep the -> function : 2
keep the interface -> the : 1
the interface the -> so : 1
interface the so -> you : 1
so you insert -> in : 1
you insert in -> the : 1
insert in the -> a : 1
the a name -> into : 1
a name into -> a : 2
name into a -> namespace : 1
name into a -> class : 1
into a namespace -> with : 1
a namespace with -> a : 1
namespace with a -> declaration : 1
with a declaration -> is : 1
is not quite -> the : 1
not quite the -> same : 1
quite the same -> as : 1
same as declaring -> the : 1
as declaring the -> name : 1
declaring the name -> the : 1
the name the -> new : 1
the name the -> base : 2
name the new -> name : 1
the new name -> is : 1
new name is -> just : 1
name is just -> a : 1
is just a -> synonym : 1
is just a -> contiguous : 1
is just a -> you : 1
is just a -> declaration : 1
is just a -> allocator : 1
just a synonym -> for : 1
the original name -> in : 1
original name in -> its : 1
name in its -> original : 1
in its original -> when : 1
its original when -> the : 1
original when the -> compiler : 1
compiler searches namespaces -> under : 1
searches namespaces under -> name : 1
namespaces under name -> it : 1
under name it -> searches : 1
name it searches -> the : 1
it searches the -> original : 1
searches the original -> synonym : 1
the original synonym -> declarations : 1
original synonym declarations -> with : 1
synonym declarations with -> using : 2
declarations with using -> shows : 1
declarations with using -> eqn : 1
with using shows -> how : 2
with using shows -> a : 1
using shows how -> the : 1
using shows how -> declarations : 1
how the results -> can : 1
the results can -> be : 1
results can be -> surprising : 1
can be surprising -> if : 1
be surprising if -> you : 1
surprising if you -> are : 1
if you are -> not : 3
if you are -> instantiating : 1
if you are -> you : 1
if you are -> your : 2
if you are -> querying : 1
if you are -> using : 2
if you are -> writing : 4
are not aware -> of : 1
not aware of -> the : 1
aware of the -> the : 1
aware of the -> precedence : 1
aware of the -> standard : 1
aware of the -> macro : 1
the the namespace -> declares : 1
the namespace declares -> to : 1
namespace declares to -> print : 1
declares to print -> a : 1
to print a -> but : 1
to print a -> series : 2
to print a -> sequence : 1
to print a -> variable : 1
print a but -> is : 1
a but is -> declared : 1
a but is -> safer : 1
but is declared -> in : 2
in the although -> uses : 1
the although uses -> when : 1
although uses when -> the : 1
uses when the -> compiler : 1
the compiler sees -> the : 1
compiler sees the -> use : 1
sees the use -> of : 1
the use of -> it : 1
the use of -> the : 2
the use of -> a : 1
the use of -> any : 1
the use of -> standard : 1
the use of -> formatting : 1
the use of -> posix : 1
the use of -> an : 1
the use of -> alternative : 1
the use of -> some : 1
the use of -> so : 4
use of it -> looks : 1
of it looks -> in : 1
it looks in -> only : 1
looks in only -> the : 1
in only the -> and : 1
only the and -> never : 1
only the and -> you : 1
the and never -> finds : 1
and never finds -> synonym : 1
never finds synonym -> declarations : 1
finds synonym declarations -> with : 1
with using eqn -> using : 1
using eqn using -> ugly : 1
eqn using ugly -> declaration : 1
using ugly declaration -> for : 1
ugly declaration for -> ostream : 1
declaration for ostream -> fraction : 1
for ostream fraction -> typename : 1
ostream fraction typename -> const : 1
fraction typename const -> out : 1
typename const out -> return : 2
const out return -> int : 2
out return int -> nf : 1
out return int -> using : 1
out return int -> const : 1
return int nf -> ok : 1
int nf ok -> because : 1
nf ok because -> the : 1
ok because the -> types : 1
because the types -> are : 1
the types are -> the : 1
the same numeric -> namespace : 1
same numeric namespace -> is : 1
numeric namespace is -> searched : 1
is searched for -> but : 1
is searched for -> nonmember : 1
searched for but -> not : 1
for but not -> eqn : 1
but not eqn -> namespace : 1
not eqn namespace -> declaration : 1
eqn namespace declaration -> can : 1
namespace declaration can -> also : 1
also be used -> within : 1
also be used -> to : 3
also be used -> the : 1
also be used -> with : 1
also be used -> as : 1
be used within -> a : 4
used within a -> you : 1
used within a -> class : 3
within a you -> can : 1
you can add -> names : 1
you can add -> or : 2
you can add -> a : 1
can add names -> to : 1
add names to -> a : 1
names to a -> derived : 1
to a derived -> class : 3
to a derived -> provided : 1
to a derived -> if : 1
to a derived -> the : 1
a derived class -> from : 1
a derived class -> can : 4
a derived class -> pointer : 1
a derived class -> a : 1
a derived class -> to : 8
a derived class -> with : 1
a derived class -> inherits : 1
a derived class -> the : 1
a derived class -> does : 1
a derived class -> must : 3
a derived class -> all : 1
a derived class -> as : 1
derived class from -> a : 1
class from a -> base : 1
from a base -> possibly : 1
a base possibly -> changing : 1
base possibly changing -> their : 1
possibly changing their -> for : 1
changing their for -> a : 1
their for a -> derived : 1
for a derived -> class : 1
for a derived -> the : 1
derived class can -> promote : 1
derived class can -> be : 1
derived class can -> access : 1
derived class can -> have : 1
derived class can -> override : 1
derived class can -> change : 1
derived class can -> restore : 1
derived class can -> use : 1
class can promote -> a : 1
can promote a -> protected : 1
promote a protected -> member : 1
a protected member -> to : 1
protected member to -> public : 1
member to public -> another : 1
to public another -> use : 1
public another use -> of : 1
another use of -> declarations : 1
use of declarations -> is : 1
of declarations is -> for : 1
declarations is for -> private : 1
is for private -> promoting : 1
for private promoting -> specific : 1
private promoting specific -> members : 1
promoting specific members -> to : 1
specific members to -> protected : 1
members to protected -> or : 1
to protected or -> public : 1
protected or public -> for : 1
or public for -> the : 1
public for the -> standard : 1
for the standard -> classes : 1
for the standard -> allocation : 1
for the standard -> as : 1
for the standard -> you : 1
for the standard -> containers : 1
the standard classes -> are : 2
the standard classes -> and : 1
standard classes are -> not : 2
classes are not -> designed : 1
classes are not -> used : 1
classes are not -> searched : 1
classes are not -> so : 1
are not designed -> for : 1
not designed for -> public : 1
designed for public -> in : 1
for public in -> a : 1
public in a -> few : 1
in a few -> it : 2
in a few -> value : 1
a few it -> is : 2
few it is -> possible : 1
few it is -> not : 1
it is possible -> to : 1
is possible to -> derive : 1
possible to derive -> from : 1
to derive from -> them : 1
to derive from -> the : 1
derive from them -> members : 1
from them members -> with : 1
them members with -> using : 1
members with using -> shows : 1
members with using -> class : 1
using shows a -> crude : 1
shows a crude -> way : 1
a crude way -> to : 1
crude way to -> implement : 1
way to implement -> a : 1
way to implement -> the : 6
way to implement -> this : 1
way to implement -> an : 1
to implement a -> container : 1
to implement a -> smart : 1
to implement a -> class : 1
to implement a -> generic : 1
to implement a -> signed : 1
to implement a -> subset : 1
to implement a -> copy : 1
implement a container -> type : 1
a container type -> to : 1
container type to -> represent : 1
type to represent -> a : 1
type to represent -> rational : 1
to represent a -> the : 1
to represent a -> multibyte : 1
to represent a -> single : 2
to represent a -> multidimensional : 1
represent a the -> class : 1
a the class -> template : 1
a the class -> identity : 1
a the class -> name : 1
a the class -> a : 1
the class template -> derives : 2
the class template -> takes : 2
the class template -> defines : 3
the class template -> may : 1
the class template -> that : 1
the class template -> is : 2
the class template -> uses : 1
the class template -> in : 2
the class template -> might : 1
the class template -> as : 2
the class template -> for : 3
the class template -> and : 6
the class template -> has : 1
the class template -> so : 1
class template derives -> from : 2
template derives from -> using : 1
template derives from -> and : 1
derives from using -> private : 1
from using private -> a : 1
using private a -> series : 1
private a series -> of : 1
of declarations make -> selected : 1
declarations make selected -> members : 1
make selected members -> of : 1
selected members of -> public : 1
members of public -> and : 1
of public and -> keep : 1
public and keep -> those : 1
and keep those -> members : 1
keep those members -> that : 1
those members that -> are : 1
members that are -> meaningless : 1
members that are -> all : 1
members that are -> listed : 1
members that are -> shown : 1
that are meaningless -> for : 1
are meaningless for -> a : 1
meaningless for a -> such : 1
for a such -> as : 1
a such as -> members : 1
a such as -> lacking : 1
a such as -> division : 1
a such as -> function : 1
a such as -> or : 1
a such as -> a : 1
such as members -> with : 1
as members with -> using : 1
with using class -> private : 1
using class private -> typedef : 1
class private typedef -> t : 1
private typedef t -> using : 1
typedef t using -> using : 1
t using using -> using : 1
using using using -> using : 10
using using using -> const : 1
using using using -> for : 1
using using using -> namespace : 1
using using const -> x : 1
using const x -> using : 1
const x using -> using : 1
x using using -> using : 1
using using for -> more : 1
using for more -> information : 1
information about declarations -> in : 1
about declarations in -> class : 1
declarations in class -> directive : 1
in class directive -> adds : 1
class directive adds -> a : 1
directive adds a -> namespace : 1
adds a namespace -> to : 1
a namespace to -> the : 1
namespace to the -> list : 1
to the list -> of : 5
the list of -> scopes : 1
the list of -> namespaces : 1
the list of -> exception : 1
the list of -> candidate : 2
the list of -> candidates : 1
the list of -> overload : 1
the list of -> template : 1
the list of -> tokens : 1
list of scopes -> that : 1
of scopes that -> is : 1
scopes that is -> used : 1
that is used -> when : 1
that is used -> in : 2
that is used -> to : 1
that is used -> like : 2
is used when -> the : 2
is used when -> an : 1
used when the -> compiler : 1
used when the -> righthand : 1
compiler searches for -> a : 1
searches for a -> unlike : 1
searches for a -> pair : 1
searches for a -> value : 1
searches for a -> int : 1
searches for a -> wide : 2
for a unlike -> a : 1
a unlike a -> no : 1
unlike a no -> names : 1
a no names -> are : 1
no names are -> added : 1
names are added -> to : 1
are added to -> the : 5
are added to -> achieve : 1
the current the -> used : 1
the current the -> initial : 1
the current the -> overloaded : 1
the current the -> first : 1
current the used -> namespace : 1
the used namespace -> is : 1
used namespace is -> added : 1
namespace is added -> to : 1
list of namespaces -> to : 1
of namespaces to -> search : 1
to search right -> after : 1
search right after -> the : 1
right after the -> innermost : 1
after the innermost -> namespace : 1
the innermost namespace -> that : 1
the innermost namespace -> scope : 1
innermost namespace that -> contains : 1
that contains both -> the : 1
contains both the -> current : 1
both the current -> and : 1
the current and -> used : 1
current and used -> the : 1
and used the -> containing : 1
and used the -> value : 1
used the containing -> namespace : 1
the containing namespace -> is : 1
containing namespace is -> the : 1
namespace is the -> global : 1
the global the -> directive : 1
the global the -> rest : 1
the global the -> functions : 1
the global the -> library : 1
global the directive -> is : 1
the directive is -> so : 1
the directive is -> typically : 1
directive is so -> if : 1
is so if -> namespace : 1
so if namespace -> a : 1
if namespace a -> uses : 1
namespace a uses -> namespace : 1
a uses namespace -> and : 1
uses namespace and -> namespace : 1
namespace and namespace -> b : 1
and namespace b -> uses : 1
namespace b uses -> namespace : 1
b uses namespace -> a : 1
uses namespace a -> name : 1
namespace a name -> search : 1
a name search -> in : 1
name search in -> a : 1
search in a -> also : 1
in a also -> searches : 1
a also searches -> using : 1
also searches using -> illustrates : 1
searches using illustrates -> the : 1
using illustrates the -> using : 1
illustrates the using -> namespace : 1
the using namespace -> a : 1
using namespace a -> int : 1
namespace a int -> x : 1
a int x -> namespace : 1
int x namespace -> b : 1
x namespace b -> int : 1
namespace b int -> y : 1
b int y -> namespace : 1
int y namespace -> c : 1
y namespace c -> int : 1
namespace c int -> z : 1
c int z -> using : 1
int z using -> namespace : 2
z using namespace -> namespace : 1
z using namespace -> harmless : 1
using namespace namespace -> d : 1
namespace namespace d -> int : 1
namespace d int -> z : 1
d int z -> using : 1
using namespace harmless -> but : 1
namespace harmless but -> pointless : 1
harmless but pointless -> because : 1
but pointless because -> hides : 1
pointless because hides -> int : 1
because hides int -> y : 1
hides int y -> int : 1
int y int -> int : 1
int y int -> the : 1
y int int -> x : 1
int int x -> using : 1
int int x -> int : 1
int x using -> namespace : 1
x using namespace -> does : 1
x using namespace -> using : 1
using namespace does -> not : 1
namespace does not -> introduce : 1
does not introduce -> so : 1
does not introduce -> the : 1
not introduce so -> there : 1
introduce so there -> is : 1
so there is -> no : 4
is no conflict -> with : 1
no conflict with -> x : 1
conflict with x -> using : 1
with x using -> namespace : 1
using namespace using -> namespace : 1
namespace using namespace -> to : 1
namespace using namespace -> keyword : 1
using namespace to -> save : 1
namespace to save -> typing : 1
to save typing -> repeatedly : 1
to save typing -> and : 1
save typing repeatedly -> cout : 1
typing repeatedly cout -> x : 1
repeatedly cout x -> prints : 1
cout x prints -> cout : 1
x prints cout -> y : 1
prints cout y -> prints : 1
cout y prints -> cout : 1
y prints cout -> prints : 1
prints cout prints -> cout : 2
prints cout prints -> using : 1
prints cout prints -> base : 1
prints cout prints -> const : 1
cout prints cout -> prints : 3
cout prints using -> namespace : 1
prints using namespace -> cout : 1
using namespace cout -> y : 1
using namespace cout -> prints : 1
using namespace cout -> cout : 1
namespace cout y -> y : 1
cout y y -> is : 1
y y is -> it : 1
y is it -> can : 1
is it can -> be : 1
found in and -> use : 1
found in and -> plus : 1
in and use -> of : 1
and use of -> to : 1
use of to -> use : 1
use of to -> convert : 1
use of to -> interpret : 1
of to use -> to : 1
to use to -> use : 1
to use to -> read : 2
to use to -> copy : 1
to use to -> count : 1
use to use -> have : 1
to use have -> no : 1
use have no -> runtime : 1
have no runtime -> be : 1
no runtime be -> afraid : 1
runtime be afraid -> to : 1
be afraid to -> use : 1
afraid to use -> especially : 1
to use especially -> in : 1
use especially in -> large : 1
especially in large -> projects : 1
in large projects -> in : 1
large projects in -> which : 1
projects in which -> many : 1
in which many -> people : 1
which many people -> contribute : 1
many people contribute -> code : 1
people contribute code -> and : 1
contribute code and -> might : 1
code and might -> accidentally : 1
and might accidentally -> devise : 1
might accidentally devise -> conflicting : 1
accidentally devise conflicting -> the : 1
devise conflicting the -> following : 1
conflicting the following -> are : 1
are some additional -> tips : 1
some additional tips -> and : 1
additional tips and -> suggestions : 1
tips and suggestions -> for : 1
and suggestions for -> using : 1
suggestions for using -> you : 1
for using you -> define : 1
for using you -> need : 1
using you define -> a : 1
you define a -> class : 2
you define a -> type : 1
you define a -> member : 1
you define a -> function : 1
you define a -> custom : 1
a class in -> a : 2
a class in -> this : 1
a class in -> which : 2
class in a -> be : 1
class in a -> but : 1
class in a -> dependent : 1
in a be -> sure : 1
a be sure -> to : 1
sure to declare -> all : 1
to declare all -> associated : 1
declare all associated -> operators : 1
all associated operators -> and : 1
associated operators and -> functions : 1
operators and functions -> in : 1
functions in the -> same : 2
functions in the -> standard : 3
functions in the -> derived : 1
the same make -> namespaces : 1
same make namespaces -> easier : 1
make namespaces easier -> to : 1
namespaces easier to -> keep : 1
easier to keep -> namespace : 1
to keep namespace -> names : 1
keep namespace names -> or : 1
namespace names or -> use : 1
names or use -> aliases : 1
or use aliases -> to : 1
use aliases to -> craft : 1
aliases to craft -> short : 1
to craft short -> synonyms : 1
craft short synonyms -> for : 1
short synonyms for -> longer : 1
synonyms for longer -> place : 1
for longer place -> a : 1
longer place a -> directive : 1
place a directive -> in : 1
a directive in -> a : 1
directive in a -> it : 1
in a it -> can : 2
in a it -> also : 1
it can create -> name : 1
can create name -> collisions : 1
create name collisions -> for : 1
name collisions for -> any : 1
collisions for any -> user : 1
for any user -> of : 1
any user of -> the : 1
user of the -> directives : 1
of the directives -> local : 1
of the directives -> are : 1
the directives local -> to : 1
directives local to -> functions : 1
local to functions -> to : 1
to functions to -> save : 1
functions to save -> typing : 1
save typing and -> enhance : 1
typing and enhance -> outside : 1
and enhance outside -> functions : 1
enhance outside functions -> only : 1
outside functions only -> for : 1
functions only for -> tiny : 1
only for tiny -> programs : 1
for tiny programs -> or : 1
tiny programs or -> for : 1
programs or for -> backward : 1
or for backward -> compatibility : 1
for backward compatibility -> in : 1
backward compatibility in -> legacy : 1
compatibility in legacy -> expression : 1
in legacy expression -> combines : 1
legacy expression combines -> and : 1
expression combines and -> symbols : 1
combines and symbols -> to : 1
and symbols to -> express : 1
symbols to express -> or : 1
to express or -> compute : 1
express or compute -> a : 1
or compute a -> or : 1
compute a or -> to : 1
a or to -> achieve : 1
or to achieve -> a : 1
to achieve a -> side : 1
achieve a side -> this : 1
a side this -> chapter : 1
side this chapter -> describes : 1
this chapter describes -> the : 2
this chapter describes -> classes : 1
chapter describes the -> rules : 1
chapter describes the -> syntax : 2
describes the rules -> for : 1
rules for writing -> and : 1
for writing and -> understanding : 1
writing and understanding -> including : 1
writing and understanding -> of : 1
and understanding including -> information : 1
understanding including information -> on : 1
including information on -> lvalues : 1
information on lvalues -> and : 1
on lvalues and -> type : 1
lvalues and type -> constant : 1
and type constant -> and : 1
type constant and -> how : 1
constant and how -> evaluates : 1
and how evaluates -> it : 1
how evaluates it -> contains : 1
evaluates it contains -> detailed : 1
it contains detailed -> descriptions : 1
contains detailed descriptions -> of : 1
descriptions of all -> the : 1
descriptions of all -> important : 1
all the operators -> and : 2
the operators and -> other : 1
the operators and -> not : 1
the operators and -> indicates : 1
operators and other -> forms : 1
and other forms -> of : 1
other forms of -> syntax : 1
other forms of -> placement : 1
other forms of -> the : 1
other forms of -> nested : 1
forms of syntax -> descriptions : 1
of syntax descriptions -> in : 1
and and and -> rvalues : 1
and and rvalues -> are : 1
and rvalues are -> fundamental : 1
rvalues are fundamental -> to : 1
are fundamental to -> put : 1
fundamental to put -> an : 1
to put an -> is : 1
put an is -> an : 1
an is an -> object : 1
an is an -> array : 1
is an object -> reference : 1
is an object -> and : 1
is an object -> of : 2
is an object -> that : 3
an object reference -> and : 1
object reference and -> an : 1
reference and an -> is : 1
reference and an -> array : 1
and an is -> a : 1
an is a -> the : 1
a the difference -> between : 1
the difference between -> lvalues : 1
the difference between -> a : 1
the difference between -> two : 4
the difference between -> shows : 1
the difference between -> the : 1
the difference between -> for : 1
the difference between -> subsequent : 1
the difference between -> and : 1
difference between lvalues -> and : 1
between lvalues and -> rvalues : 1
lvalues and rvalues -> plays : 1
lvalues and rvalues -> array : 1
and rvalues plays -> a : 1
rvalues plays a -> role : 1
plays a role -> in : 1
a role in -> the : 1
role in the -> writing : 1
in the writing -> and : 1
the writing and -> understanding : 1
and understanding of -> lvalue : 1
understanding of lvalue -> is : 1
of lvalue is -> an : 1
lvalue is an -> expression : 1
is an expression -> that : 6
is an expression -> in : 1
is an expression -> null : 1
an expression that -> yields : 1
an expression that -> is : 1
an expression that -> can : 3
an expression that -> uses : 1
an expression that -> returns : 2
an expression that -> evaluates : 1
an expression that -> depends : 1
expression that yields -> an : 1
that yields an -> object : 1
yields an object -> such : 1
an object such -> as : 1
object such as -> a : 1
as a variable -> an : 1
as a variable -> in : 1
a variable an -> array : 1
variable an array -> subscript : 1
an array subscript -> a : 1
an array subscript -> dereference : 1
an array subscript -> is : 1
array subscript a -> dereferenced : 1
subscript a dereferenced -> or : 1
a dereferenced or -> a : 1
dereferenced or a -> function : 1
or a function -> call : 1
or a function -> comma : 1
or a function -> declaration : 1
or a function -> to : 1
or a function -> the : 1
or a function -> or : 1
or a function -> for : 1
or a function -> object : 1
a function call -> that : 1
a function call -> is : 1
a function call -> operator : 3
a function call -> or : 2
a function call -> to : 3
a function call -> through : 1
a function call -> expression : 1
a function call -> has : 1
function call that -> returns : 1
call that returns -> a : 1
that returns a -> an : 1
that returns a -> reference : 1
that returns a -> function : 1
that returns a -> boolean : 3
returns a an -> lvalue : 1
a an lvalue -> always : 1
a an lvalue -> to : 1
an lvalue always -> has : 1
lvalue always has -> a : 1
has a defined -> region : 1
a defined region -> of : 1
defined region of -> so : 1
region of so -> you : 1
of so you -> can : 1
of so you -> should : 1
so you can -> take : 1
so you can -> use : 5
so you can -> have : 3
so you can -> write : 1
so you can -> perform : 1
so you can -> store : 2
so you can -> read : 2
so you can -> think : 1
so you can -> restore : 1
so you can -> detect : 1
so you can -> or : 1
you can take -> its : 1
you can take -> the : 2
can take its -> rvalue : 1
take its rvalue -> is : 1
its rvalue is -> an : 1
rvalue is an -> expression : 1
expression that is -> not : 2
expression that is -> built : 1
expression that is -> used : 1
that is not -> an : 1
that is not -> written : 1
that is not -> a : 2
that is not -> listed : 5
that is not -> defined : 1
that is not -> mentioned : 1
that is not -> normalized : 1
that is not -> in : 1
that is not -> it : 1
not an examples -> of : 1
an examples of -> rvalues : 1
examples of rvalues -> include : 1
of rvalues include -> the : 1
rvalues include the -> results : 1
include the results -> of : 1
the results of -> most : 1
the results of -> values : 1
results of most -> and : 1
of most and -> function : 1
most and function -> calls : 1
and function calls -> that : 1
function calls that -> return : 1
calls that return -> an : 1
that return an -> rvalue : 1
return an rvalue -> does : 1
an rvalue does -> not : 1
rvalue does not -> necessarily : 1
does not necessarily -> have : 2
does not necessarily -> point : 1
does not necessarily -> instantiate : 1
does not necessarily -> use : 1
does not necessarily -> fit : 1
not necessarily have -> any : 2
not necessarily have -> to : 1
necessarily have any -> storage : 2
have any storage -> associated : 1
have any storage -> or : 1
any storage associated -> with : 1
storage associated with -> a : 1
associated with a -> function : 1
associated with a -> standard : 1
associated with a -> reader : 1
associated with a -> getter : 1
is an but -> the : 1
is an but -> an : 1
an but the -> only : 1
but the only -> uses : 1
the only uses -> for : 1
only uses for -> it : 1
uses for it -> are : 1
for it are -> to : 1
it are to -> use : 1
are to use -> it : 1
to use it -> in : 1
use it in -> calling : 1
it in calling -> the : 1
in calling the -> or : 1
calling the or -> determining : 1
the or determining -> the : 1
or determining the -> most : 1
determining the most -> of : 1
the most of -> the : 1
most of the -> the : 1
most of the -> different : 1
most of the -> iteration : 1
most of the -> fundamental : 1
most of the -> standard : 1
most of the -> daylight : 1
the the term -> lvalue : 1
the term lvalue -> means : 1
the term lvalue -> from : 1
term lvalue means -> object : 1
lvalue means object -> and : 1
means object and -> this : 1
object and this -> book : 1
this book follows -> that : 1
book follows that -> borrows : 1
follows that borrows -> the : 1
that borrows the -> term : 1
borrows the term -> lvalue : 1
term lvalue from -> where : 1
lvalue from where -> only : 1
from where only -> an : 1
where only an -> lvalue : 1
only an lvalue -> can : 1
an lvalue can -> be : 2
lvalue can be -> used : 1
lvalue can be -> converted : 3
lvalue can be -> cast : 1
lvalue can be -> implicitly : 1
be used on -> the : 1
used on the -> left : 1
on the left -> side : 1
the left side -> of : 1
left side of -> an : 1
side of an -> assignment : 2
side of an -> for : 1
of an assignment -> the : 2
of an assignment -> expression : 1
an assignment the -> term : 1
an assignment the -> r : 1
assignment the term -> rvalue : 1
the term rvalue -> is : 1
term rvalue is -> a : 1
rvalue is a -> logical : 1
is a logical -> counterpart : 1
a logical counterpart -> for : 1
logical counterpart for -> an : 1
counterpart for an -> expression : 1
for an expression -> that : 1
expression that can -> be : 3
be used only -> on : 1
be used only -> to : 1
be used only -> in : 6
be used only -> with : 2
be used only -> as : 4
used only on -> the : 1
only on the -> righthand : 1
only on the -> right : 1
on the righthand -> side : 5
the righthand side -> of : 3
the righthand side -> is : 1
the righthand side -> must : 4
righthand side of -> an : 1
righthand side of -> the : 2
of an for -> rvalue : 1
an for rvalue -> int : 1
for rvalue int -> lvalue : 1
rvalue int lvalue -> these : 1
int lvalue these -> simple : 1
lvalue these simple -> rules : 1
these simple rules -> are : 1
simple rules are -> no : 1
rules are no -> longer : 1
are no longer -> but : 1
are no longer -> if : 1
no longer but -> the : 1
longer but the -> names : 1
but the names -> remain : 1
the names remain -> because : 1
names remain because -> they : 1
remain because they -> are : 1
they are close -> to : 1
are close to -> the : 1
close to the -> the : 1
the the most -> significant : 1
the the most -> common : 3
the the most -> convenient : 3
the the most -> widespread : 1
the most significant -> departure : 1
most significant departure -> from : 1
significant departure from -> traditional : 1
departure from traditional -> c : 1
from traditional c -> is : 1
traditional c is -> that : 1
c is that -> an : 1
is that an -> lvalue : 1
is that an -> implementation : 1
that an lvalue -> in : 1
an lvalue in -> might : 1
lvalue in might -> be : 1
in might be -> in : 1
might be in -> which : 1
be in which -> case : 4
which case it -> cannot : 1
which case it -> must : 1
which case it -> is : 1
which case it -> will : 1
case it cannot -> be : 1
it cannot be -> the : 1
it cannot be -> or : 2
it cannot be -> used : 7
it cannot be -> and : 1
it cannot be -> through : 1
it cannot be -> an : 1
it cannot be -> changed : 1
of an has -> since : 1
an has since -> evolved : 1
has since evolved -> and : 1
since evolved and -> now : 1
evolved and now -> has : 1
and now has -> assignment : 1
now has assignment -> require : 1
has assignment require -> an : 1
assignment require an -> lvalue : 1
require an lvalue -> as : 1
an lvalue as -> their : 1
an lvalue as -> do : 1
lvalue as their -> lefthand : 1
as their lefthand -> the : 1
their lefthand the -> address : 1
lefthand the address -> operator : 1
the address operator -> also : 1
address operator also -> requires : 1
operator also requires -> an : 1
also requires an -> lvalue : 1
requires an lvalue -> as : 1
lvalue as do -> the : 1
as do the -> increment : 1
do the increment -> and : 1
the increment and -> decrement : 2
increment and decrement -> other : 1
increment and decrement -> operators : 2
increment and decrement -> for : 1
and decrement other -> operators : 1
decrement other operators -> require : 1
other operators require -> the : 1
operators require the -> rules : 1
require the rules -> are : 1
rules are not -> as : 1
rules are not -> duplicated : 1
are not as -> strict : 1
not as strict -> for : 1
as strict for -> any : 1
strict for any -> including : 1
for any including -> an : 1
any including an -> can : 1
including an can -> be : 1
an can be -> used : 2
be used to -> call : 1
be used to -> the : 1
be used to -> control : 1
be used to -> declare : 2
be used to -> peek : 1
be used to -> define : 1
be used to -> select : 1
be used to -> characterize : 1
be used to -> specify : 1
be used to -> introduce : 1
be used to -> indicate : 1
be used to -> ensure : 1
be used to -> read : 1
be used to -> improve : 1
be used to -> mark : 1
be used to -> compare : 3
be used to -> identify : 2
be used to -> implement : 1
be used to -> modify : 2
used to call -> member : 1
to call member -> including : 1
call member including -> overloaded : 1
member including overloaded -> and : 1
including overloaded and -> rules : 1
overloaded and rules -> for : 1
and rules for -> lvalues : 1
and rules for -> and : 1
rules for lvalues -> and : 1
for lvalues and -> rvalues : 1
and rvalues array -> is : 1
rvalues array is -> an : 1
array is an -> but : 1
an but an -> address : 1
but an address -> is : 1
an address is -> an : 1
address is an -> array : 1
array subscript dereference -> assignment : 1
subscript dereference assignment -> increment : 1
dereference assignment increment -> and : 1
assignment increment and -> decrement : 1
and decrement operators -> produce : 1
and decrement operators -> are : 1
decrement operators produce -> other : 1
operators produce other -> operators : 1
produce other operators -> produce : 1
other operators produce -> type : 1
operators produce type -> cast : 1
produce type cast -> to : 1
type cast to -> a : 1
cast to a -> reference : 2
cast to a -> protected : 1
cast to a -> dependent : 1
a reference type -> produces : 1
reference type produces -> an : 1
type produces an -> other : 1
produces an other -> casts : 1
an other casts -> produce : 1
other casts produce -> function : 1
casts produce function -> call : 1
produce function call -> overloaded : 1
function call overloaded -> that : 1
call overloaded that -> returns : 1
overloaded that returns -> a : 1
returns a reference -> returns : 1
returns a reference -> to : 3
a reference returns -> an : 1
reference returns an -> it : 1
returns an it -> returns : 1
an it returns -> an : 1
it returns an -> lvalue : 1
it returns an -> in : 1
it returns an -> iterator : 4
it returns an -> negative : 1
returns an lvalue -> is : 1
returns an lvalue -> for : 1
an lvalue is -> converted : 1
lvalue is converted -> implicitly : 1
lvalue is converted -> to : 1
is converted implicitly -> to : 1
converted implicitly to -> an : 1
converted implicitly to -> a : 1
implicitly to an -> rvalue : 1
to an rvalue -> when : 1
to an rvalue -> for : 1
to an rvalue -> is : 1
to an rvalue -> pointer : 1
to an rvalue -> with : 1
an rvalue when -> but : 1
rvalue when but -> an : 1
when but an -> rvalue : 1
but an rvalue -> cannot : 1
an rvalue cannot -> be : 1
rvalue cannot be -> implicitly : 1
to an and -> shows : 1
to an and -> the : 2
to an and -> dividing : 1
an and shows -> several : 1
and shows several -> different : 2
several different kinds -> of : 5
kinds of lvalues -> and : 1
of lvalues and -> and : 1
lvalues and and -> number : 1
lvalues and and -> some : 1
and and number -> i : 1
and number i -> operator : 1
number i operator -> const : 1
i operator const -> return : 1
operator const return -> int : 4
operator const return -> in : 1
operator const return -> point : 1
operator const return -> operator : 3
operator const return -> t : 1
operator const return -> a : 1
operator const return -> demo : 1
operator const return -> return : 1
const return int -> number : 1
const return int -> silly : 1
const return int -> const : 4
const return int -> class : 1
const return int -> int : 2
const return int -> you : 1
const return int -> actual : 1
return int number -> const : 1
int number const -> int : 1
number const int -> number : 1
const int number -> lvalue : 1
int number lvalue -> lvalue : 1
number lvalue lvalue -> rvalue : 1
lvalue lvalue rvalue -> lvalue : 1
lvalue lvalue rvalue -> rvalue : 1
lvalue rvalue lvalue -> lvalue : 1
rvalue lvalue lvalue -> lvalue : 1
lvalue lvalue lvalue -> rvalue : 1
lvalue rvalue rvalue -> rvalue : 1
rvalue rvalue rvalue -> b : 1
rvalue rvalue b -> lvalue : 1
rvalue b lvalue -> an : 1
b lvalue an -> arithmetic : 1
lvalue an arithmetic -> binary : 1
an arithmetic binary -> operators : 1
arithmetic binary operators -> require : 1
binary operators require -> operands : 1
operators require operands -> of : 1
require operands of -> the : 1
operands of the -> same : 1
operands of the -> arithmetic : 1
operands of the -> operator : 1
operands of the -> the : 1
the same if -> this : 1
the same if -> the : 2
the same if -> includes : 1
the same if -> is : 1
same if this -> is : 1
if this is -> not : 1
is not the -> the : 1
is not the -> type : 1
is not the -> allocated : 1
is not the -> access : 1
is not the -> friend : 1
is not the -> result : 2
is not the -> operator : 2
is not the -> first : 1
is not the -> size : 1
is not the -> contents : 1
is not the -> complexity : 2
is not the -> root : 1
is not the -> locale : 1
is not the -> same : 3
is not the -> return : 4
is not the -> multibyte : 1
is not the -> sequence : 2
is not the -> attempt : 1
is not the -> current : 1
is not the -> sentry : 2
is not the -> template : 1
is not the -> function : 2
is not the -> currency : 1
is not the -> input : 1
is not the -> flag : 1
not the the -> type : 1
not the the -> marker : 1
type of one -> operand : 1
type of one -> of : 1
of one operand -> must : 1
one operand must -> be : 2
one operand must -> have : 1
operand must be -> converted : 1
operand must be -> a : 1
must be converted -> to : 1
be converted to -> match : 1
be converted to -> an : 6
be converted to -> type : 1
be converted to -> any : 3
be converted to -> a : 15
be converted to -> in : 1
be converted to -> pointer : 1
be converted to -> the : 2
be converted to -> using : 1
be converted to -> is : 1
be converted to -> and : 1
be converted to -> it : 2
be converted to -> as : 1
be converted to -> function : 6
converted to match -> that : 1
to match that -> of : 1
match that of -> the : 1
that of the -> other : 2
that of the -> type : 1
that of the -> base : 1
that of the -> exception : 1
that of the -> any : 1
of the other -> when : 1
of the other -> one : 1
of the other -> even : 1
of the other -> output : 1
the other when -> calling : 1
other when calling -> a : 1
when calling a -> the : 1
when calling a -> member : 1
calling a the -> argument : 1
the argument type -> must : 1
the argument type -> is : 1
argument type must -> match : 1
type must match -> the : 2
must match the -> parameter : 1
must match the -> type : 1
must match the -> primary : 1
must match the -> names : 1
must match the -> thousands : 1
must match the -> input : 1
match the parameter -> if : 1
the parameter if -> it : 1
parameter if it -> the : 1
if it the -> argument : 1
if it the -> element : 1
it the argument -> is : 1
the argument is -> converted : 1
the argument is -> needed : 1
the argument is -> interpreted : 7
the argument is -> condensed : 1
the argument is -> not : 1
the argument is -> a : 4
the argument is -> and : 1
the argument is -> the : 1
the argument is -> some : 1
argument is converted -> so : 1
is converted so -> its : 1
converted so its -> type : 1
so its type -> has : 1
its type has -> cast : 1
type has cast -> which : 1
has cast which -> let : 1
cast which let -> you : 1
which let you -> define : 1
which let you -> provide : 1
let you define -> a : 1
a type conversion -> or : 1
a type conversion -> operator : 1
a type conversion -> the : 1
a type conversion -> member : 1
a type conversion -> template : 1
a type conversion -> struct : 1
type conversion or -> you : 1
type conversion or -> a : 1
conversion or you -> can : 1
you can let -> the : 1
can let the -> compiler : 1
let the compiler -> automatically : 1
let the compiler -> deduce : 3
let the compiler -> match : 1
let the compiler -> substitute : 1
let the compiler -> convert : 1
compiler automatically convert -> the : 1
convert the type -> for : 1
type for this -> section : 1
for this section -> presents : 1
this section presents -> the : 1
this section presents -> some : 1
this section presents -> a : 1
this section presents -> highlights : 2
section presents the -> rules : 2
presents the rules -> for : 1
presents the rules -> that : 1
rules for automatic -> type : 1
for automatic type -> is : 1
automatic type is -> a : 1
is a fundamental -> integral : 1
is a fundamental -> an : 1
a fundamental integral -> or : 1
fundamental integral or -> or : 1
integral or or -> some : 1
or or some -> operations : 1
or some operations -> are : 1
some operations are -> permitted : 1
operations are permitted -> only : 1
are permitted only -> on : 1
permitted only on -> arithmetic : 1
permitted only on -> integral : 3
only on arithmetic -> pointer : 1
on arithmetic pointer -> class : 1
arithmetic pointer class -> or : 1
pointer class or -> some : 1
class or some -> combination : 1
or some combination -> of : 1
some combination of -> the : 1
combination of the -> description : 1
of the description -> of : 1
of each operator -> tells : 1
of each operator -> is : 1
each operator tells -> you : 1
operator tells you -> which : 1
tells you which -> types : 1
you which types -> the : 1
which types the -> operator : 1
types the operator -> is : 1
operator is an -> automatic : 1
operator is an -> assignment : 3
is an automatic -> type : 2
an automatic type -> conversion : 2
automatic type conversion -> that : 2
type conversion that -> applies : 1
type conversion that -> the : 1
conversion that applies -> only : 1
that applies only -> to : 2
applies only to -> arithmetic : 1
applies only to -> the : 2
applies only to -> certain : 1
only to arithmetic -> converting : 1
to arithmetic converting -> a : 1
arithmetic converting a -> type : 1
converting a type -> to : 1
a type to -> a : 1
a type to -> represent : 1
type to a -> type : 1
type to a -> different : 1
type to a -> object : 1
type to a -> certain : 1
to a type -> while : 1
to a type -> if : 1
to a type -> named : 1
to a type -> conversion : 1
a type while -> preserving : 1
type while preserving -> the : 1
while preserving the -> original : 1
preserving the original -> contrast : 1
the original contrast -> promotions : 1
original contrast promotions -> with : 1
contrast promotions with -> other : 1
promotions with other -> automatic : 1
with other automatic -> type : 1
other automatic type -> conversions : 1
automatic type conversions -> in : 1
automatic type conversions -> a : 1
type conversions in -> later : 1
conversions in later -> which : 1
in later which -> can : 1
later which can -> lose : 1
which can lose -> promotions : 1
can lose promotions -> involve : 1
lose promotions involve -> either : 1
promotions involve either -> integral : 1
involve either integral -> or : 1
either integral or -> the : 1
integral or the -> rules : 1
or the rules -> for : 1
rules for integral -> promotion : 1
for integral promotion -> integral : 1
integral promotion integral -> rvalue : 1
promotion integral rvalue -> is : 1
integral rvalue is -> converted : 1
rvalue is converted -> to : 1
the type can -> represent : 3
type can represent -> all : 1
type can represent -> positive : 1
type can represent -> a : 2
can represent all -> of : 1
represent all of -> the : 1
the values of -> the : 3
the values of -> and : 1
of the source -> it : 1
of the source -> the : 1
of the source -> or : 1
of the source -> file : 2
the source it -> is : 1
source it is -> converted : 1
it is converted -> to : 1
to a value -> is : 1
to a value -> that : 1
to a value -> type : 1
a value is -> an : 1
a value is -> assigned : 1
a value is -> always : 1
value is an -> integral : 1
value is an -> the : 1
value is an -> an : 1
value is an -> it : 1
value is an -> iterator : 17
value is an -> estimate : 1
is an integral -> whose : 1
is an integral -> the : 5
is an integral -> between : 1
is an integral -> there : 1
is an integral -> type : 8
is an integral -> in : 9
an integral whose -> size : 1
integral whose size -> is : 1
whose size is -> smaller : 1
whose size is -> the : 1
size is smaller -> than : 4
is smaller than -> an : 1
is smaller than -> the : 5
smaller than an -> or : 1
than an or -> a : 1
an or a -> value : 1
an or a -> the : 1
an or a -> function : 1
an or a -> nonnegative : 1
an or a -> string : 1
or a value -> with : 1
or a value -> to : 1
a value with -> one : 1
value with one -> of : 1
with one of -> the : 3
the following rvalue -> whose : 1
following rvalue whose -> type : 1
rvalue whose type -> is : 1
is or an -> enumeration : 1
an enumeration with -> enumeration : 1
enumeration with enumeration -> is : 1
with enumeration is -> converted : 1
enumeration is converted -> to : 1
the first type -> that : 1
first type that -> can : 1
hold all the -> values : 1
hold all the -> enumerated : 1
all the values -> of : 1
all the values -> in : 2
the source the -> type : 1
the source the -> preprocessor : 1
the source the -> most : 1
source the type -> is : 1
type is one -> or : 1
type is one -> of : 1
is one or -> rvalue : 1
one or rvalue -> of : 1
or rvalue of -> type : 1
rvalue of type -> can : 2
rvalue of type -> pointer : 1
rvalue of type -> if : 1
rvalue of type -> in : 1
rvalue of type -> the : 2
of type can -> be : 3
can be converted -> to : 33
can be converted -> implicitly : 1
can be converted -> into : 1
an the value -> becomes : 1
an the value -> is : 2
an the value -> depends : 1
the value becomes -> and : 1
the value becomes -> promotion : 1
value becomes and -> the : 1
becomes and the -> value : 1
and the value -> becomes : 1
and the value -> is : 2
value becomes promotion -> rule : 1
becomes promotion rule -> is : 1
promotion rule is -> rvalue : 1
rule is rvalue -> of : 1
is rvalue of -> type : 1
converted to type -> type : 1
converted to type -> yielding : 1
converted to type -> and : 1
to type type -> type : 1
type type conversion -> is : 1
type conversion is -> an : 1
type conversion is -> one : 1
type conversion is -> commonly : 1
conversion is an -> automatic : 1
conversion that the -> compiler : 1
the compiler applies -> to : 1
compiler applies to -> the : 1
applies to the -> operands : 1
to the operands -> of : 1
the operands of -> the : 3
of the arithmetic -> and : 1
the arithmetic and -> comparison : 1
arithmetic and comparison -> for : 1
arithmetic and comparison -> you : 1
arithmetic and comparison -> think : 1
and comparison for -> the : 1
comparison for the -> arithmetic : 1
comparison for the -> following : 1
for the arithmetic -> the : 1
the arithmetic the -> result : 1
arithmetic the result -> type : 1
the result type -> is : 9
result type is -> the : 6
result type is -> a : 1
result type is -> that : 1
result type is -> not : 1
is the same -> as : 33
is the same -> text : 1
is the same -> structure : 1
same as the -> operand : 1
same as the -> original : 1
same as the -> size : 1
same as the -> class : 1
same as the -> signed : 1
same as the -> unsigned : 1
same as the -> first : 1
same as the -> value : 1
same as the -> header : 1
same as the -> array : 1
same as the -> numerical : 1
same as the -> template : 6
as the operand -> with : 1
the operand with -> no : 1
operand with no -> arithmetic : 1
with no arithmetic -> type : 1
no arithmetic type -> conversions : 1
arithmetic type conversions -> try : 1
arithmetic type conversions -> described : 1
type conversions try -> to : 1
conversions try to -> preserve : 1
try to preserve -> the : 1
to preserve the -> original : 1
preserve the original -> values : 1
the original values -> as : 1
original values as -> much : 1
values as much -> as : 1
much as they -> do : 1
as they do -> not : 1
do not always -> for : 1
not always for -> does : 1
always for does -> not : 1
for does not -> produce : 1
for does not -> distinguish : 1
for does not -> have : 1
does not produce -> as : 1
does not produce -> an : 1
not produce as -> a : 1
produce as a -> result : 1
as a result -> because : 1
a result because -> has : 1
result because has -> type : 1
because has type -> which : 1
has type which -> is : 1
type which is -> converted : 1
which is converted -> to : 3
to type yielding -> an : 1
type yielding an -> arithmetic : 1
yielding an arithmetic -> on : 1
an arithmetic on -> a : 1
arithmetic on a -> the : 1
on a the -> result : 1
on a the -> file : 1
a the result -> is : 8
a the result -> type : 1
result is rules -> for : 1
is rules for -> arithmetic : 1
rules for arithmetic -> type : 1
for arithmetic type -> conversion : 1
arithmetic type conversion -> are : 1
type conversion are -> applied : 1
conversion are applied -> in : 1
are applied in -> the : 1
applied in the -> following : 1
the following one -> operand : 1
the following one -> using : 1
following one operand -> has : 1
one operand has -> type : 1
one operand has -> a : 2
operand has type -> the : 1
has type the -> other : 1
has type the -> new : 1
has type the -> expression : 1
type the other -> is : 1
the other is -> converted : 6
the other is -> type : 1
the other is -> a : 1
other is converted -> to : 6
converted to if -> one : 5
converted to if -> the : 3
to if one -> operand : 5
to if one -> or : 3
if one operand -> is : 7
if one operand -> has : 1
one operand is -> the : 6
one operand is -> and : 1
one operand is -> an : 1
one operand is -> a : 1
operand is the -> other : 5
operand is the -> result : 1
operand is the -> object : 1
operand is the -> for : 1
operand is the -> expression : 2
is the other -> is : 5
converted to integral -> promotions : 1
to integral promotions -> are : 1
integral promotions are -> performed : 1
promotions are performed -> the : 1
are performed the -> section : 1
are performed the -> list : 1
performed the section -> integral : 1
the section integral -> if : 1
section integral if -> one : 1
integral if one -> operand : 1
operand is and -> the : 1
operand is and -> if : 1
and the other -> is : 1
and the other -> five : 1
and the other -> operand : 1
and the other -> for : 1
and the other -> templates : 1
and the other -> state : 1
and the other -> using : 1
and the other -> fields : 1
other is type -> conversion : 1
is type conversion -> occurs : 1
type conversion occurs -> as : 1
conversion occurs as -> all : 1
occurs as all -> values : 1
as all values -> of : 1
as all values -> are : 1
all values of -> type : 1
all values of -> in : 4
values of type -> fit : 1
of type fit -> in : 1
type fit in -> a : 1
a the is -> converted : 1
a the is -> evaluated : 1
the is converted -> to : 3
converted to both -> operands : 2
to both operands -> are : 2
both operands are -> converted : 1
both operands are -> numeric : 1
both operands are -> the : 1
both operands are -> they : 1
both operands are -> it : 2
both operands are -> lvalues : 1
both operands are -> and : 1
both operands are -> return : 1
both operands are -> class : 2
operands are converted -> to : 1
are converted to -> if : 1
are converted to -> wide : 5
are converted to -> and : 1
are converted to -> the : 1
are converted to -> one : 1
are converted to -> multibyte : 1
operands are numeric -> numeric : 1
are numeric numeric -> arithmetic : 1
numeric numeric arithmetic -> value : 1
numeric arithmetic value -> can : 1
arithmetic value can -> be : 1
be converted implicitly -> to : 1
implicitly to a -> different : 1
a different arithmetic -> even : 1
different arithmetic even -> if : 1
arithmetic even if -> that : 1
if that conversion -> loses : 1
that conversion loses -> these : 1
conversion loses these -> implicit : 1
loses these implicit -> conversions : 1
these implicit conversions -> can : 1
implicit conversions can -> take : 1
conversions can take -> place : 1
can take place -> in : 2
take place in -> arguments : 1
take place in -> any : 1
place in arguments -> to : 1
in arguments to -> function : 1
arguments to function -> returning : 1
to function returning -> values : 1
function returning values -> from : 1
returning values from -> a : 1
values from a -> and : 1
values from a -> fwditer : 1
from a and -> template : 1
a and template -> do : 1
and template do -> not : 1
template do not -> confuse : 1
do not confuse -> these : 1
not confuse these -> conversions : 1
confuse these conversions -> with : 1
these conversions with -> the : 1
conversions with the -> arithmetic : 1
with the arithmetic -> type : 1
the arithmetic type -> conversions : 1
type conversions described -> which : 1
conversions described which -> can : 1
described which can -> take : 1
which can take -> place : 1
place in any -> arithmetic : 1
in any arithmetic -> basic : 1
any arithmetic basic -> rule : 1
arithmetic basic rule -> is : 1
basic rule is -> that : 1
is that any -> arithmetic : 1
that any arithmetic -> type : 1
any arithmetic type -> can : 1
arithmetic type can -> be : 1
converted to any -> if : 1
converted to any -> object : 1
converted to any -> of : 1
to any if -> the : 1
any if the -> destination : 1
if the destination -> type : 1
if the destination -> is : 1
the destination type -> cannot : 1
destination type cannot -> hold : 1
type cannot hold -> the : 1
cannot hold the -> converted : 1
hold the converted -> the : 1
the converted the -> behavior : 1
converted the behavior -> is : 1
the behavior is -> when : 1
the behavior is -> the : 13
the behavior is -> to : 2
the behavior is -> see : 1
the behavior is -> undefined : 29
the behavior is -> note : 1
the behavior is -> function : 2
the behavior is -> with : 1
the behavior is -> return : 1
the behavior is -> run : 1
the behavior is -> following : 1
the behavior is -> begins : 1
the behavior is -> statement : 1
the behavior is -> for : 2
the behavior is -> can : 1
the behavior is -> element : 1
behavior is when -> assigning : 1
is when assigning -> a : 1
assigning a number -> to : 1
a number to -> an : 1
a number to -> a : 2
number to an -> the : 1
the value is -> truncated : 1
the value is -> an : 2
the value is -> such : 1
the value is -> only : 1
the value is -> implicitly : 1
the value is -> is : 2
the value is -> the : 3
the value is -> note : 1
the value is -> a : 1
the value is -> not : 1
the value is -> always : 31
the value is -> defined : 1
the value is -> solid : 1
the value is -> and : 1
the value is -> parsed : 1
the value is -> used : 1
the value is -> or : 2
the value is -> unspecified : 1
the value is -> class : 1
value is truncated -> toward : 1
is truncated toward -> zero : 1
truncated toward zero -> by : 1
toward zero by -> discarding : 1
zero by discarding -> the : 1
by discarding the -> fractional : 1
discarding the fractional -> when : 1
the fractional when -> converting : 1
fractional when converting -> an : 1
when converting an -> integer : 1
converting an integer -> or : 1
an integer or -> enumerated : 1
an integer or -> vice : 1
an integer or -> enumeration : 1
integer or enumerated -> value : 2
or enumerated value -> to : 1
or enumerated value -> can : 1
enumerated value to -> a : 1
to a if -> the : 3
a if the -> integer : 1
a if the -> static : 1
a if the -> is : 2
a if the -> item : 1
a if the -> compiler : 1
a if the -> second : 1
a if the -> employee : 2
a if the -> sentry : 2
a if the -> numeric : 1
a if the -> formatted : 1
a if the -> evaluates : 1
a if the -> allows : 1
if the integer -> value : 1
integer value falls -> between : 1
value falls between -> two : 1
falls between two -> values : 1
between two values -> the : 1
two values the -> integer : 1
values the integer -> is : 1
the integer is -> not : 1
the integer is -> but : 1
integer is not -> representable : 1
is not representable -> in : 1
not representable in -> the : 1
representable in the -> the : 1
the the implementation -> chooses : 1
the the implementation -> is : 1
the implementation chooses -> one : 1
implementation chooses one -> of : 1
chooses one of -> the : 1
chooses one of -> two : 1
of the two -> neighboring : 1
of the two -> the : 1
of the two -> standard : 1
the two neighboring -> value : 1
two neighboring value -> can : 1
neighboring value can -> be : 1
a class type -> if : 1
a class type -> to : 1
a class type -> in : 2
a class type -> that : 1
class type if -> the : 1
type if the -> class : 1
type if the -> source : 1
type if the -> function : 1
class has a -> suitable : 1
class has a -> type : 1
class has a -> single : 2
class has a -> conversion : 1
class has a -> function : 1
class has a -> copy : 3
class has a -> the : 1
class has a -> virtual : 1
class has a -> you : 1
has a suitable -> constructor : 1
a suitable constructor -> that : 1
a suitable constructor -> to : 1
suitable constructor that -> does : 1
constructor that does -> not : 2
does not use -> the : 3
does not use -> its : 1
does not use -> flags : 1
does not use -> frequent : 1
not use the -> a : 1
not use the -> nonstatic : 1
not use the -> or : 1
not use the -> but : 1
use the a -> value : 1
the a value -> of : 1
a value of -> class : 1
a value of -> can : 1
a value of -> type : 1
a value of -> for : 1
a value of -> len : 1
value of class -> type : 1
of class type -> can : 2
of class type -> is : 1
of class type -> as : 1
of class type -> and : 2
of class type -> operator : 1
class type can -> be : 3
a type if -> the : 1
if the source -> class : 1
if the source -> range : 2
the source class -> has : 1
source class has -> a : 1
type conversion operator -> of : 1
type conversion operator -> operator : 1
conversion operator of -> the : 1
operator of the -> target : 1
of the target -> when : 1
of the target -> reference : 1
the target when -> converting : 1
target when converting -> a : 1
when converting a -> class : 1
when converting a -> stream : 1
converting a class -> type : 1
class type to -> another : 1
type to another -> class : 1
to another class -> the : 1
another class the -> compiler : 1
the compiler considers -> the : 1
compiler considers the -> constructors : 1
considers the constructors -> for : 1
the constructors for -> the : 1
constructors for the -> target : 1
for the target -> class : 1
the target class -> and : 1
the target class -> an : 1
target class and -> the : 1
class and the -> type : 3
class and the -> expression : 1
class and the -> operands : 1
class and the -> class : 2
the type conversion -> operators : 1
type conversion operators -> for : 1
type conversion operators -> must : 1
type conversion operators -> to : 1
type conversion operators -> or : 1
conversion operators for -> the : 1
operators for the -> source : 1
operators for the -> stream : 1
for the source -> conversions : 1
for the source -> file : 1
the source conversions -> automatically : 1
source conversions automatically -> convert : 1
conversions automatically convert -> an : 1
automatically convert an -> lvalue : 1
convert an lvalue -> to : 2
an lvalue to -> an : 3
lvalue to an -> rvalue : 2
lvalue to an -> or : 1
an rvalue for -> contexts : 1
rvalue for contexts -> in : 1
for contexts in -> which : 1
contexts in which -> an : 1
contexts in which -> a : 1
in which an -> rvalue : 1
in which an -> element : 1
which an rvalue -> is : 1
an rvalue is -> the : 1
an rvalue is -> usually : 1
an rvalue is -> if : 2
rvalue is the -> need : 1
is the need -> to : 1
the need to -> convert : 1
the need to -> reallocate : 2
need to convert -> an : 1
need to convert -> a : 1
to convert an -> lvalue : 1
to convert an -> object : 1
to convert an -> integer : 1
rvalue is usually -> and : 1
is usually and -> these : 1
usually and these -> conversions : 1
and these conversions -> are : 1
these conversions are -> listed : 1
conversions are listed -> only : 1
are listed only -> for : 1
listed only for -> the : 1
only for the -> sake : 2
only for the -> entire : 1
only for the -> fundamental : 1
sake of array -> lvalue : 1
of array lvalue -> can : 1
array lvalue can -> be : 1
a pointer pointing -> to : 1
pointer pointing to -> the : 1
pointing to the -> first : 1
pointing to the -> erased : 1
the function lvalue -> can : 1
function lvalue can -> be : 1
an rvalue pointer -> to : 1
rvalue pointer to -> the : 1
to the other -> lvalue : 1
to the other -> type : 1
to the other -> expression : 1
to the other -> a : 1
the other lvalue -> can : 1
other lvalue can -> be : 1
an rvalue with -> the : 1
rvalue with the -> same : 1
same if the -> type : 1
same if the -> file : 1
type is not -> a : 1
type is not -> the : 1
type is not -> considered : 1
type is not -> as : 1
type is not -> an : 2
type is not -> so : 1
not a class -> are : 1
a class are -> removed : 1
class are removed -> from : 1
are removed from -> the : 1
removed from the -> a : 1
removed from the -> next : 1
from the a -> lvalue : 1
from the a -> member : 2
from the a -> pointer : 1
the a lvalue -> is : 1
a lvalue is -> converted : 1
to an to -> to : 1
an to to -> and : 1
to to and -> pointer : 1
to and pointer -> values : 1
and pointer values -> can : 2
pointer values can -> be : 2
values can be -> converted : 2
values can be -> starting : 1
values can be -> copied : 1
values can be -> obtained : 1
converted to in -> which : 1
to in which -> null : 1
to in which -> is : 3
to in which -> if : 1
to in which -> the : 1
in which null -> pointers : 1
which null pointers -> and : 1
null pointers and -> zero : 1
pointers and zero -> arithmetic : 1
and zero arithmetic -> values : 1
zero arithmetic values -> are : 1
arithmetic values are -> and : 1
values are and -> everything : 1
are and everything -> else : 1
and everything else -> is : 1
everything else is -> a : 1
else is a -> common : 1
is a common -> idiom : 1
is a common -> cout : 1
is a common -> and : 1
a common idiom -> is : 1
common idiom is -> to : 3
idiom is to -> test : 1
idiom is to -> throw : 1
idiom is to -> read : 1
is to test -> whether : 1
is to test -> to : 1
is to test -> as : 1
to test whether -> a : 6
to test whether -> is : 2
to test whether -> for : 3
to test whether -> the : 3
to test whether -> two : 1
test whether a -> pointer : 1
test whether a -> type : 4
test whether a -> list : 2
test whether a -> sequence : 1
whether a pointer -> is : 1
is a null -> do : 1
is a null -> a : 1
is a null -> to : 1
is a null -> points : 1
is a null -> the : 5
is a null -> pointer : 2
is a null -> if : 1
is a null -> an : 3
is a null -> open : 1
is a null -> is : 2
is a null -> see : 1
a null do -> something : 1
null do something -> with : 1
do something with -> else : 1
do something with -> class : 1
something with else -> pointer : 1
with else pointer -> is : 1
else pointer is -> null : 1
pointer is null -> if : 1
is null if -> another : 1
null if another -> way : 1
if another way -> to : 1
another way to -> test : 1
another way to -> get : 1
way to test -> if : 1
way to test -> for : 1
to test if -> ptr : 1
test if ptr -> is : 1
if ptr is -> idiom : 1
ptr is idiom -> is : 1
is idiom is -> so : 1
idiom is so -> common : 1
idiom is so -> the : 1
is so common -> that : 1
so common that -> some : 1
common that some -> classes : 1
that some classes -> have : 1
some classes have -> operators : 1
classes have operators -> to : 1
have operators to -> convert : 1
operators to convert -> an : 1
operators to convert -> objects : 1
convert an object -> to : 1
convert an object -> whose : 1
an object to -> so : 1
an object to -> the : 1
an object to -> be : 1
object to so -> can : 1
to so can -> be : 1
so can be -> converted : 1
so can be -> implemented : 1
converted to pointer -> type : 1
to pointer type -> would : 1
pointer type would -> but : 1
type would but -> is : 1
would but is -> used : 1
but is used -> because : 1
is used because -> the : 1
used because the -> pointer : 1
because the pointer -> is : 1
pointer is not -> meant : 1
pointer is not -> the : 1
pointer is not -> modify : 1
is not meant -> to : 1
not meant to -> be : 1
meant to be -> only : 1
meant to be -> portable : 1
meant to be -> the : 1
meant to be -> argument : 1
meant to be -> used : 1
to be only -> converted : 1
be only converted -> to : 1
only converted to -> the : 1
to the operator -> is : 1
to the operator -> has : 1
to the operator -> are : 1
operator is used -> instead : 1
operator is used -> in : 1
operator is used -> to : 2
operator is used -> for : 1
is used instead -> of : 1
used instead of -> a : 1
instead of a -> direct : 1
instead of a -> plain : 1
instead of a -> character : 1
instead of a -> shows : 1
of a direct -> conversion : 1
a direct conversion -> to : 1
direct conversion to -> to : 1
conversion to to -> avoid : 1
conversion to to -> be : 1
to avoid automatic -> promotion : 1
avoid automatic promotion -> to : 1
automatic promotion to -> an : 1
promotion to an -> for : 1
to an for -> defines : 1
an for defines -> to : 1
for defines to -> return : 1
defines to return -> a : 1
return a null -> pointer : 2
return a null -> your : 1
a null pointer -> if : 11
a null pointer -> constant : 2
a null pointer -> but : 1
a null pointer -> value : 3
a null pointer -> a : 1
a null pointer -> when : 1
a null pointer -> defined : 1
a null pointer -> using : 1
a null pointer -> results : 2
a null pointer -> is : 9
a null pointer -> casting : 1
a null pointer -> of : 2
a null pointer -> as : 3
a null pointer -> in : 2
a null pointer -> for : 5
a null pointer -> it : 1
a null pointer -> such : 1
a null pointer -> see : 5
a null pointer -> or : 3
a null pointer -> instead : 3
a null pointer -> produces : 1
null pointer if -> the : 3
null pointer if -> no : 1
null pointer if -> there : 3
null pointer if -> is : 2
null pointer if -> does : 2
pointer if the -> is : 1
pointer if the -> type : 1
pointer if the -> pointer : 1
pointer if the -> state : 1
pointer if the -> specified : 1
if the is -> in : 1
if the is -> or : 1
if the is -> the : 5
if the is -> it : 1
if the is -> empty : 1
is in for -> is : 1
is in for -> the : 1
in for is -> an : 1
for is an -> type : 1
for is an -> expression : 1
is an type -> offers : 1
is an type -> that : 2
an type offers -> several : 1
type offers several -> different : 1
offers several different -> ways : 1
several different ways -> to : 2
several different ways -> the : 1
different ways to -> cast : 1
different ways to -> define : 1
ways to cast -> an : 1
cast an expression -> to : 1
an expression to -> a : 1
an expression to -> be : 1
an expression to -> the : 1
expression to a -> different : 1
a different the -> different : 1
a different the -> solution : 1
a different the -> string : 1
different the different -> ways : 1
the different ways -> expose : 1
different ways expose -> the : 1
ways expose the -> evolution : 1
expose the evolution -> of : 1
the evolution of -> the : 1
the evolution of -> from : 1
evolution of the -> the : 1
the the six -> forms : 1
the six forms -> of : 1
six forms of -> type : 1
forms of type -> cast : 1
forms of type -> casts : 1
of type cast -> expressions : 1
type cast expressions -> first : 1
type cast expressions -> are : 1
cast expressions first -> form : 1
expressions first form -> was : 1
first form was -> inherited : 1
form was inherited -> from : 1
was inherited from -> the : 1
inherited from the -> second : 1
inherited from the -> base : 1
inherited from the -> c : 1
from the second -> form : 1
from the second -> first : 1
the second form -> was : 1
the second form -> rethrows : 1
the second form -> are : 1
the second form -> searches : 1
the second form -> changes : 1
the second form -> calls : 25
the second form -> is : 5
the second form -> specifies : 2
the second form -> inserts : 1
the second form -> moves : 1
the second form -> determines : 1
the second form -> stores : 2
second form was -> added : 1
form was added -> in : 1
was added in -> the : 1
added in the -> early : 1
in the early -> days : 1
the early days -> of : 1
early days of -> and : 1
days of and -> has : 1
of and has -> the : 2
and has the -> same : 5
and has the -> usual : 1
the same meaning -> as : 1
the same meaning -> in : 3
same meaning as -> the : 1
meaning as the -> but : 1
as the but -> with : 1
as the but -> the : 1
as the but -> it : 1
with a slightly -> different : 1
a slightly different -> the : 1
slightly different the -> final : 1
different the final -> four : 1
the final four -> forms : 1
final four forms -> supplant : 1
four forms supplant -> the : 1
forms supplant the -> two : 1
supplant the two -> older : 1
the two older -> forms : 1
two older forms -> and : 1
older forms and -> are : 1
forms and are -> preferred : 1
and are preferred -> because : 1
are preferred because -> they : 1
preferred because they -> are : 1
they are more -> thus : 1
are more thus -> reducing : 1
more thus reducing -> the : 1
thus reducing the -> risk : 1
reducing the risk -> of : 1
the risk of -> all : 1
risk of all -> type : 1
of all type -> cast : 1
all type cast -> expressions : 1
cast expressions are -> described : 1
expressions are described -> in : 1
are described in -> detail : 1
are described in -> this : 1
are described in -> terms : 1
described in detail -> later : 1
in detail later -> in : 1
detail later in -> this : 1
this the first -> form : 1
this the first -> character : 1
the first form -> is : 1
the first form -> throws : 1
the first form -> does : 1
the first form -> searches : 1
the first form -> changes : 1
the first form -> compares : 3
the first form -> uses : 3
the first form -> specifies : 2
the first form -> of : 2
the first form -> inserts : 1
the first form -> moves : 1
the first form -> tests : 1
the first form -> returns : 4
the first form -> second : 1
first form is -> covered : 1
form is covered -> in : 1
in the section -> and : 1
in the section -> of : 3
the section and -> the : 1
the other five -> forms : 1
other five forms -> are : 1
five forms are -> covered : 1
forms are covered -> in : 1
in the remainder -> of : 1
the remainder of -> this : 1
the remainder of -> dividing : 2
the remainder of -> its : 1
remainder of this -> section : 1
of this section -> briefly : 1
of this section -> explains : 1
this section briefly -> discusses : 1
section briefly discusses -> when : 1
briefly discusses when -> to : 1
discusses when to -> use : 1
when to use -> each : 1
when to use -> overloading : 1
when to use -> default : 1
to use each -> you : 1
use each you -> simply : 1
each you simply -> want : 1
you simply want -> to : 2
simply want to -> force : 1
simply want to -> use : 1
want to force -> an : 1
want to force -> a : 1
to force an -> expression : 1
force an expression -> to : 1
expression to be -> or : 1
to be or -> to : 1
to be or -> the : 1
be or to -> remove : 1
or to remove -> a : 1
to remove a -> prior : 1
remove a prior -> to : 1
a prior to -> passing : 1
prior to passing -> a : 1
to passing a -> pointer : 1
passing a pointer -> to : 1
to a legacy -> library : 1
a legacy library -> that : 1
legacy library that -> is : 1
library that is -> not : 1
is not written -> in : 1
not written in -> and : 1
written in and -> does : 1
in and does -> not : 1
know about use -> can : 1
about use can -> also : 1
use can also -> change : 1
can also change -> the : 1
also change the -> but : 1
change the but -> that : 1
the but that -> is : 1
the but that -> requires : 1
but that is -> less : 1
but that is -> the : 1
but that is -> only : 1
that is less -> you : 1
that is less -> than : 1
is less you -> have : 1
less you have -> a : 1
you have a -> pointer : 1
you have a -> simple : 1
you have a -> you : 1
you have a -> new : 1
you have a -> binary : 2
you have a -> container : 2
you have a -> vector : 1
have a pointer -> or : 2
reference to an -> object : 2
reference to an -> array : 1
reference to an -> lvalue : 1
reference to an -> most : 1
reference to an -> implicit : 1
to an object -> whose : 1
to an object -> pointer : 1
to an object -> or : 1
to an object -> as : 1
to an object -> of : 3
to an object -> declared : 1
to an object -> that : 1
to an object -> they : 1
object whose declared -> type : 1
whose declared type -> is : 1
declared type is -> a : 1
declared type is -> often : 1
is a base -> but : 1
is a base -> class : 5
a base but -> you : 1
base but you -> need : 1
but you need -> to : 2
need to obtain -> a : 1
to obtain a -> derived : 1
to obtain a -> suitable : 2
to obtain a -> local : 1
obtain a derived -> class : 1
derived class pointer -> or : 1
class pointer or -> you : 1
class pointer or -> reference : 1
pointer or you -> should : 1
or you should -> use : 2
or you should -> always : 1
you should use -> the : 5
you should use -> is : 1
you should use -> qualified : 1
you should use -> exceptions : 1
you should use -> when : 1
you should use -> instead : 1
you should use -> a : 1
should use the -> dynamic : 1
should use the -> style : 1
should use the -> operator : 2
should use the -> and : 1
should use the -> lists : 3
should use the -> native : 1
use the dynamic -> cast : 1
the dynamic cast -> performs : 1
dynamic cast performs -> a : 1
cast performs a -> runtime : 1
performs a runtime -> check : 1
a runtime check -> to : 1
a runtime check -> is : 1
runtime check to -> make : 1
check to make -> sure : 1
to make sure -> the : 4
to make sure -> a : 1
make sure the -> cast : 1
make sure the -> true : 1
make sure the -> function : 1
make sure the -> implementation : 1
make sure the -> output : 1
make sure the -> memory : 1
sure the cast -> is : 1
the cast is -> a : 1
cast is a -> dynamic : 1
is a dynamic -> cast : 1
a dynamic cast -> works : 1
dynamic cast works -> only : 1
cast works only -> with : 1
works only with -> polymorphic : 1
works only with -> random : 1
only with polymorphic -> which : 1
with polymorphic which -> have : 1
polymorphic which have -> at : 1
which have at -> least : 1
have at least -> one : 2
have at least -> two : 1
have at least -> which : 1
at least one -> virtual : 6
at least one -> if : 1
at least one -> the : 1
at least one -> function : 1
at least one -> operand : 2
at least one -> argument : 1
at least one -> base : 1
at least one -> pure : 1
at least one -> dependent : 1
at least one -> name : 1
at least one -> instance : 1
at least one -> position : 1
least one virtual -> common : 1
least one virtual -> the : 2
least one virtual -> function : 3
one virtual common -> uses : 1
virtual common uses -> of : 1
common uses of -> are : 1
uses of are -> to : 1
of are to -> force : 1
are to force -> one : 1
to force one -> enumeration : 1
force one enumeration -> to : 1
a different enumerated -> force : 1
different enumerated force -> an : 1
enumerated force an -> arithmetic : 1
force an arithmetic -> type : 1
an arithmetic type -> to : 1
an arithmetic type -> or : 1
an arithmetic type -> returned : 1
an arithmetic type -> that : 1
arithmetic type to -> a : 1
a different or -> force : 1
different or force -> a : 1
or force a -> particular : 1
force a particular -> conversion : 1
force a particular -> type : 1
a particular conversion -> from : 1
particular conversion from -> a : 1
conversion from a -> object : 1
conversion from a -> function : 1
conversion from a -> narrow : 1
from a object -> that : 1
a object that -> has : 1
a object that -> a : 1
a object that -> describes : 2
object that has -> multiple : 2
object that has -> a : 2
object that has -> an : 1
object that has -> the : 2
that has multiple -> type : 1
that has multiple -> be : 1
has multiple type -> conversion : 1
multiple type conversion -> the : 1
type conversion the -> simpler : 1
type conversion the -> is : 2
conversion the simpler -> type : 1
the simpler type -> casts : 1
simpler type casts -> are : 1
type casts are -> sometimes : 1
casts are sometimes -> used : 1
are sometimes used -> in : 1
sometimes used in -> these : 1
used in these -> for : 1
in these for -> the : 1
these for the -> sake : 1
sake of for -> can : 1
of for can -> be : 1
for can be -> easier : 1
can be easier -> to : 1
to read than -> use : 1
read than use -> to : 1
than use to -> reverse : 1
use to reverse -> any : 1
to reverse any -> implicit : 1
reverse any implicit -> type : 1
any implicit type -> for : 1
implicit type for -> automatically : 1
type for automatically -> converts : 1
for automatically converts -> an : 1
automatically converts an -> to : 1
converts an to -> an : 1
an to an -> use : 1
to an use -> if : 1
an use if -> you : 1
use if you -> want : 1
use if you -> make : 1
want to convert -> an : 1
convert an integer -> to : 1
to an you -> can : 1
to cast a -> pointer : 2
to cast a -> to : 1
cast a pointer -> to : 3
cast a pointer -> or : 1
pointer to and -> from : 1
pointer to and -> the : 1
and from is -> reserved : 1
from is reserved -> for : 1
is reserved for -> potentially : 1
reserved for potentially -> unsafe : 1
for potentially unsafe -> type : 1
potentially unsafe type -> such : 1
potentially unsafe type -> it : 1
unsafe type such -> as : 1
type such as -> converting : 1
type such as -> most : 1
such as converting -> one : 1
such as converting -> a : 1
as converting one -> type : 1
converting one type -> of : 1
one type of -> pointer : 1
type of pointer -> to : 1
of pointer to -> you : 1
pointer to you -> can : 1
to you can -> also : 3
to you can -> write : 1
to you can -> see : 1
to you can -> cast : 1
convert a pointer -> to : 1
to an integer -> or : 1
to an integer -> back : 1
to an integer -> to : 1
to an integer -> macro : 1
to an integer -> function : 2
integer or vice -> for : 1
or vice for -> an : 1
vice for an -> internal : 1
for an internal -> debugging : 1
an internal debugging -> package : 1
internal debugging package -> might : 1
debugging package might -> record : 1
package might record -> debug : 1
might record debug -> log : 1
record debug log -> the : 1
debug log the -> logger : 1
log the logger -> might : 1
the logger might -> convert : 1
logger might convert -> pointers : 1
might convert pointers -> to : 1
convert pointers to -> integers : 1
pointers to integers -> using : 1
to integers using -> and : 1
integers using and -> print : 1
using and print -> the : 1
and print the -> integers : 1
and print the -> one : 1
and print the -> converted : 1
print the integers -> using : 1
the integers using -> a : 1
integers using a -> specific : 1
using a specific -> you : 1
a specific you -> try : 1
specific you try -> to : 1
you try to -> perform : 1
you try to -> compare : 1
you try to -> repeat : 1
try to perform -> the : 1
to perform the -> wrong : 1
to perform the -> the : 1
to perform the -> standard : 1
perform the wrong -> kind : 1
the wrong kind -> of : 1
wrong kind of -> cast : 1
kind of cast -> with : 1
of cast with -> one : 1
cast with one -> of : 1
of the cast -> the : 2
the cast the -> compiler : 1
the cast the -> result : 1
cast the compiler -> informs : 1
the compiler informs -> you : 1
compiler informs you -> of : 1
informs you of -> your : 1
you of your -> for : 1
of your for -> if : 1
of your for -> you : 1
your for if -> you : 1
for if you -> use : 2
for if you -> search : 1
for if you -> create : 1
you use and -> accidentally : 1
use and accidentally -> cast : 1
and accidentally cast -> away : 1
accidentally cast away -> the : 1
cast away the -> compiler : 1
cast away the -> cast : 1
cast away the -> rules : 1
away the compiler -> or : 1
compiler or if -> you : 1
you use where -> you : 1
use where you -> should : 1
where you should -> have : 1
you should have -> used : 1
you should have -> a : 1
should have used -> the : 1
have used the -> compiler : 1
used the compiler -> the : 1
the compiler the -> short : 1
compiler the short -> forms : 1
the short forms -> of : 1
short forms of -> casting : 1
forms of casting -> do : 1
of casting do -> not : 1
casting do not -> provide : 1
do not provide -> this : 1
not provide this -> extra : 1
provide this extra -> level : 1
this extra level -> of : 1
extra level of -> because : 1
level of because -> one : 1
of because one -> form : 1
because one form -> must : 1
one form must -> suffice : 1
form must suffice -> for : 1
must suffice for -> the : 1
suffice for the -> several : 1
for the several -> different : 1
the several different -> kinds : 1
kinds of type -> you : 1
of type you -> see : 1
of type you -> can : 1
type you see -> a : 1
you see a -> type : 1
see a type -> you : 1
a type you -> should : 1
a type you -> can : 1
type you should -> read : 1
type you should -> use : 1
you should read -> it : 1
should read it -> as : 1
read it as -> a : 1
it as a -> warning : 1
it as a -> binary : 1
it as a -> unary : 1
it as a -> handle : 1
it as a -> template : 1
it as a -> function : 1
as a warning -> that : 1
a warning that -> something : 1
warning that something -> unusual : 1
that something unusual -> is : 1
something unusual is -> the : 1
unusual is the -> longer : 1
is the longer -> forms : 1
the longer forms -> of : 1
longer forms of -> type : 1
of type casts -> provide : 1
type casts provide -> additional : 1
casts provide additional -> clues : 1
provide additional clues -> about : 1
additional clues about -> the : 1
clues about the -> and : 1
the and help -> the : 1
and help the -> compiler : 1
help the compiler -> enforce : 1
the compiler enforce -> that : 1
compiler enforce that -> expression : 1
enforce that expression -> is : 1
that expression is -> an : 1
that expression is -> its : 1
expression is an -> expression : 3
expression is an -> rvalue : 2
can be evaluated -> at : 2
be evaluated at -> compile : 2
evaluated at compile -> constants : 1
evaluated at compile -> and : 1
evaluated at compile -> for : 1
at compile constants -> of : 1
compile constants of -> integral : 1
constants of integral -> or : 1
enumerated type are -> required : 1
type are required -> in : 1
are required in -> several : 1
required in several -> different : 1
in several different -> such : 1
in several different -> automatic : 1
several different such -> as : 1
different such as -> array : 1
different such as -> and : 1
such as array -> enumerator : 1
as array enumerator -> and : 1
array enumerator and -> null : 1
enumerator and null -> pointer : 1
and null pointer -> constants : 1
null pointer constants -> are : 1
pointer constants are -> a : 1
constants are a -> special : 1
are a special -> case : 1
are a special -> kind : 1
a special case -> of : 4
special case of -> integral : 1
special case of -> the : 1
special case of -> a : 1
special case of -> an : 1
case of integral -> constant : 1
of integral constant -> constant : 1
integral constant constant -> constant : 1
constant constant constant -> expression : 1
constant constant expression -> is : 1
constant expression is -> an : 1
constant expression is -> and : 1
at compile and -> whose : 1
compile and whose -> type : 1
and whose type -> is : 1
type is integral -> or : 1
is integral or -> an : 1
integral or an -> the : 1
or an the -> situations : 1
or an the -> operator : 1
an the situations -> that : 1
the situations that -> require : 1
situations that require -> integral : 1
that require integral -> constant : 1
require integral constant -> expressions : 1
integral constant expressions -> include : 1
constant expressions include -> array : 1
expressions include array -> enumerator : 1
include array enumerator -> static : 1
array enumerator static -> member : 1
enumerator static member -> and : 1
static member and -> value : 1
member and value -> template : 1
and value template -> the : 1
value template the -> compiler : 1
template the compiler -> must : 2
template the compiler -> cannot : 1
template the compiler -> treats : 1
compiler must be -> able : 1
able to evaluate -> the : 1
to evaluate the -> expression : 1
evaluate the expression -> at : 1
the expression at -> compile : 1
expression at compile -> so : 1
at compile so -> you : 1
compile so you -> can : 1
can use only -> objects : 1
can use only -> one : 1
use only objects -> that : 1
only objects that -> have : 1
only objects that -> are : 1
objects that have -> constant : 1
objects that have -> been : 1
objects that have -> side : 1
that have constant -> integral : 1
that have constant -> the : 1
have constant integral -> or : 1
constant integral or -> enumerated : 2
constant integral or -> enumeration : 1
or enumerated template -> and : 1
enumerated template and -> constant : 1
template and constant -> the : 1
and constant the -> address : 1
constant the address -> of : 1
address of a -> static : 2
address of a -> a : 1
address of a -> to : 1
address of a -> cannot : 1
address of a -> nonstatic : 2
address of a -> named : 1
address of a -> struct : 1
address of a -> basic : 1
address of a -> wide : 1
address of a -> for : 1
a static lvalue -> object : 1
static lvalue object -> is : 1
lvalue object is -> a : 1
a constant as -> is : 1
constant as is -> the : 1
as is the -> address : 1
as is the -> return : 1
as is the -> mapping : 1
as is the -> thousands : 1
as is the -> decimal : 1
is the address -> of : 2
a a string -> being : 1
a string being -> a : 1
string being a -> static : 1
being a static -> array : 1
a static array -> of : 1
static array of -> is : 1
array of is -> also : 1
of is also -> a : 1
also a constant -> integral : 1
a constant integral -> static : 1
a constant integral -> or : 2
a constant integral -> the : 1
constant integral static -> data : 1
integral static data -> member : 1
data member can -> be : 2
data member can -> also : 1
data member can -> have : 1
member can be -> initialized : 1
member can be -> converted : 1
member can be -> declared : 1
member can be -> changed : 1
member can be -> a : 1
member can be -> used : 1
member can be -> accessed : 1
member can be -> modified : 1
class definition if -> the : 1
definition if the -> initializer : 1
enumerated the member -> can : 1
the member can -> then : 1
the member can -> be : 2
member can then -> be : 1
can then be -> used : 1
then be used -> as : 1
as a constant -> expression : 1
as a constant -> elsewhere : 1
as a constant -> the : 1
a constant expression -> elsewhere : 1
a constant expression -> of : 1
constant expression elsewhere -> in : 1
expression elsewhere in -> the : 1
elsewhere in the -> class : 2
elsewhere in the -> the : 1
elsewhere in the -> statement : 1
the class for -> class : 1
the class for -> the : 3
the class for -> an : 1
class for class -> array : 1
class for class -> typedef : 2
for class array -> static : 1
class array static -> const : 1
array static const -> size : 1
static const size -> t : 1
const size t -> for : 1
size t for -> more : 1
t for more -> information : 1
information about static -> data : 1
about static data -> constant : 1
static data constant -> expression : 1
data constant expression -> with : 1
constant expression with -> a : 1
expression with a -> value : 1
with a value -> of : 1
with a value -> that : 2
value of can -> be : 1
of can be -> a : 2
of can be -> constant : 1
be a pointer -> a : 1
be a pointer -> if : 1
be a pointer -> to : 8
be a pointer -> or : 2
a pointer a -> null : 1
pointer a null -> pointer : 2
null pointer constant -> can : 1
null pointer constant -> is : 1
null pointer constant -> to : 2
null pointer constant -> or : 1
pointer constant can -> be : 1
constant can be -> converted : 1
a pointer the -> colloquial : 1
a pointer the -> other : 1
a pointer the -> usual : 1
pointer the colloquial -> term : 1
the colloquial term -> null : 1
colloquial term null -> pointer : 1
term null pointer -> almost : 1
null pointer almost -> always : 1
pointer almost always -> means : 1
almost always means -> null : 1
always means null -> pointer : 1
means null pointer -> with : 1
null pointer with -> no : 1
pointer with no -> null : 1
with no null -> pointer : 1
no null pointer -> value : 1
null pointer value -> has : 1
null pointer value -> of : 1
null pointer value -> is : 2
pointer value has -> an : 1
value has an -> bit : 1
has an bit -> many : 1
an bit many -> implementations : 1
bit many implementations -> use : 1
implementations use all -> zero : 1
use all zero -> but : 1
all zero but -> some : 1
zero but some -> do : 1
but some do -> the : 1
some do the -> null : 1
do the null -> pointer : 1
the null pointer -> constant : 2
pointer constant is -> not : 1
constant is not -> representative : 1
is not representative -> of : 1
not representative of -> the : 1
representative of the -> bits : 1
of the bits -> that : 1
the bits that -> make : 1
bits that make -> up : 1
up a null -> pointer : 1
null pointer but -> serves : 1
pointer but serves -> only : 1
but serves only -> as : 1
but serves only -> to : 1
serves only as -> a : 1
only as a -> mnemonic : 1
only as a -> target : 1
only as a -> return : 4
as a mnemonic -> for : 1
a mnemonic for -> the : 1
mnemonic for the -> much : 1
for the much -> like : 1
the much like -> does : 1
much like does -> for : 1
like does for -> a : 1
does for a -> pure : 1
for a pure -> virtual : 2
for a pure -> specifier : 1
a pure virtual -> function : 4
a pure virtual -> the : 1
pure virtual function -> you : 1
pure virtual function -> allows : 1
pure virtual function -> and : 1
pure virtual function -> or : 1
pure virtual function -> without : 1
virtual function you -> assign : 1
function you assign -> a : 1
you assign a -> null : 1
assign a null -> pointer : 1
pointer constant to -> a : 2
constant to a -> the : 1
constant to a -> null : 1
converts the null -> pointer : 1
converts the null -> wide : 1
to a null -> pointer : 12
to a null -> character : 2
to a null -> a : 1
pointer value of -> the : 1
of the appropriate -> when : 1
the appropriate when -> comparing : 1
appropriate when comparing -> the : 1
when comparing the -> compiler : 1
when comparing the -> following : 1
comparing the compiler -> ensures : 1
the compiler ensures -> that : 1
compiler ensures that -> the : 1
ensures that the -> comparison : 1
ensures that the -> linked : 1
ensures that the -> elements : 1
ensures that the -> memory : 1
ensures that the -> largest : 1
that the comparison -> is : 1
the comparison is -> in : 1
comparison is in -> a : 1
is in a -> null : 1
is in a -> the : 2
is in a -> variable : 1
is in a -> nonstatic : 1
is in a -> type : 1
in a null -> pointer : 4
pointer value is -> never : 1
pointer value is -> the : 1
value is never -> equal : 1
is never equal -> to : 1
never equal to -> any : 1
equal to any -> valid : 1
equal to any -> other : 1
to any valid -> pointer : 1
to any valid -> wide : 2
any valid pointer -> is : 1
valid pointer is -> always : 1
pointer is always -> equal : 1
is always equal -> to : 4
always equal to -> another : 1
always equal to -> a : 1
always equal to -> times : 1
always equal to -> and : 1
equal to another -> null : 1
to another null -> pointer : 1
another null pointer -> and : 1
null pointer and -> is : 1
pointer and is -> always : 1
and is always -> equal : 1
equal to a -> null : 1
equal to a -> given : 2
equal to a -> typename : 1
null pointer a -> null : 1
null pointer when -> converted : 1
pointer when converted -> to : 1
when converted to -> is : 1
converted to is -> a : 2
to is a -> pointer : 2
to is a -> null : 1
a pointer that -> is : 2
a pointer that -> the : 1
a pointer that -> can : 2
a pointer that -> meets : 1
pointer that is -> initialized : 1
pointer that is -> aligned : 1
pointer that is -> owned : 1
that is initialized -> with : 2
that is initialized -> to : 1
is initialized with -> an : 2
is initialized with -> a : 1
is initialized with -> copies : 2
is initialized with -> or : 1
is initialized with -> the : 1
initializer is initialized -> to : 1
initialized to a -> null : 2
initialized to a -> reference : 1
initialized to a -> that : 1
null pointer defined -> in : 1
pointer defined in -> and : 1
defined in and -> other : 1
in and other -> headers : 1
and other headers -> expands : 1
other headers expands -> to : 1
headers expands to -> a : 1
expands to a -> null : 8
expands to a -> nonzero : 3
expands to a -> constant : 22
expands to a -> positive : 6
null pointer using -> instead : 1
pointer using instead -> of : 1
using instead of -> can : 1
using instead of -> see : 1
instead of can -> be : 1
be a helpful -> reminder : 1
a helpful reminder -> to : 1
helpful reminder to -> the : 1
reminder to the -> reader : 1
reminder to the -> human : 1
to the reader -> or : 1
the reader or -> maintainer : 1
reader or maintainer -> of : 1
or maintainer of -> a : 1
maintainer of a -> especially : 1
of a especially -> when : 1
a especially when -> obscure : 1
especially when obscure -> the : 1
when obscure the -> nature : 1
obscure the nature -> of : 1
the nature of -> a : 1
the nature of -> the : 2
nature of a -> is : 1
of a is -> token : 1
of a is -> not : 1
of a is -> both : 2
of a is -> a : 6
of a is -> the : 1
of a is -> used : 1
a is token -> a : 1
is token a -> pointer : 1
token a pointer -> or : 1
pointer or an -> token : 1
or an token -> token : 1
an token token -> is : 1
token token is -> probably : 1
token is probably -> a : 1
is probably a -> a : 1
probably a a -> null : 1
a a null -> pointer : 1
null pointer results -> in : 2
pointer results in -> undefined : 1
pointer results in -> a : 1
in undefined its -> most : 1
undefined its most -> fundamental : 1
its most fundamental -> the : 1
most fundamental the -> execution : 1
fundamental the execution -> of : 1
the execution of -> a : 2
execution of a -> program : 1
execution of a -> there : 1
of a program -> is : 1
a program is -> the : 1
a program is -> initially : 1
a program is -> likewise : 1
program is the -> successive : 1
program is the -> compiler : 1
is the successive -> evaluation : 1
the successive evaluation -> of : 1
successive evaluation of -> under : 1
evaluation of under -> the : 1
of under the -> control : 1
under the control -> of : 1
the control of -> statements : 1
control of statements -> in : 1
of statements in -> which : 1
statements in which -> some : 1
in which some -> expressions : 1
which some expressions -> can : 1
some expressions can -> produce : 1
expressions can produce -> side : 1
can produce side -> any : 1
produce side any -> expression : 1
side any expression -> might : 1
any expression might -> have : 1
expression might have -> one : 1
might have one -> or : 1
have one or -> more : 3
or more of -> the : 2
more of the -> following : 1
more of the -> requirements : 1
the following side -> a : 1
following side a -> volatile : 1
side a volatile -> an : 1
a volatile an -> a : 1
volatile an a -> function : 1
function in the -> standard : 2
function in the -> same : 1
function in the -> global : 1
function in the -> class : 2
function in the -> following : 1
function in the -> wrappers : 1
function in the -> so : 1
function in the -> earlier : 2
the standard any -> other : 1
standard any other -> function : 1
any other function -> that : 1
any other function -> with : 1
other function that -> has : 1
other function that -> uses : 1
function that has -> side : 1
function that has -> been : 1
that has side -> the : 1
has side the -> execution : 1
side the execution -> of : 1
of a there -> are : 1
a there are -> points : 1
there are points -> in : 1
are points in -> time : 1
points in time -> called : 1
in time called -> at : 1
time called at -> which : 1
called at which -> the : 1
at which the -> side : 1
at which the -> sequences : 1
which the side -> effects : 1
the side effects -> have : 1
side effects have -> all : 1
side effects have -> been : 1
effects have all -> been : 1
have all been -> completed : 1
all been completed -> for : 1
been completed for -> expressions : 1
completed for expressions -> that : 1
for expressions that -> have : 1
expressions that have -> been : 1
have been and -> no : 1
have been and -> if : 1
been and no -> side : 1
and no side -> effects : 1
no side effects -> have : 1
no side effects -> and : 1
no side effects -> but : 1
effects have been -> started : 1
have been started -> for : 1
been started for -> any : 1
started for any -> unevaluated : 1
for any unevaluated -> between : 1
any unevaluated between -> sequence : 1
unevaluated between sequence -> the : 1
between sequence the -> compiler : 1
sequence the compiler -> is : 1
free to reorder -> expressions : 1
to reorder expressions -> in : 1
reorder expressions in -> any : 1
expressions in any -> way : 1
in any way -> that : 1
any way that -> preserves : 1
way that preserves -> the : 1
that preserves the -> original : 1
preserves the original -> the : 1
preserves the original -> order : 1
the original the -> same : 1
the original the -> open : 1
the original the -> only : 1
the original the -> limitations : 1
the original the -> pointer : 1
the original the -> descriptions : 1
original the same -> term : 1
the same term -> also : 1
same term also -> refers : 1
term also refers -> to : 1
also refers to -> the : 1
also refers to -> an : 1
to the positions -> in : 1
the positions in -> the : 1
positions in the -> source : 1
the source code -> that : 1
code that produce -> sequence : 1
that produce sequence -> points : 1
produce sequence points -> when : 1
sequence points when -> the : 1
points when the -> code : 1
when the code -> you : 1
the code you -> can : 1
code you can -> usually : 1
you can usually -> ignore : 1
you can usually -> use : 1
can usually ignore -> the : 1
usually ignore the -> details : 1
ignore the details -> of : 1
the details of -> sequence : 1
the details of -> which : 1
the details of -> specific : 1
the details of -> this : 1
the details of -> are : 1
details of sequence -> but : 1
of sequence but -> when : 1
sequence but when -> you : 1
but when you -> are : 1
you are using -> or : 1
you are using -> the : 1
you are using -> you : 1
you are using -> a : 1
you are using -> does : 1
you are using -> an : 1
are using or -> it : 1
using or it -> is : 1
it is important -> that : 2
it is important -> to : 2
is important that -> you : 2
important that you -> know : 2
that you know -> exactly : 1
that you know -> which : 1
you know exactly -> when : 1
you know exactly -> which : 1
know exactly when -> it : 1
exactly when it -> is : 1
when it is -> safe : 2
when it is -> run : 1
when it is -> used : 1
when it is -> the : 2
when it is -> full : 1
when it is -> not : 1
when it is -> applied : 2
it is safe -> to : 3
it is safe -> or : 1
is safe to -> access : 1
is safe to -> delete : 1
is safe to -> check : 1
is safe to -> change : 1
safe to access -> those : 1
to access those -> that : 1
access those that -> time : 1
those that time -> is : 1
that time is -> after : 1
time is after -> a : 1
is after a -> sequence : 1
is after a -> library : 1
after a sequence -> any : 1
a sequence any -> expression : 1
sequence any expression -> that : 1
any expression that -> modifies : 1
expression that modifies -> a : 1
that modifies a -> scalar : 1
modifies a scalar -> object : 1
a scalar object -> more : 1
scalar object more -> than : 1
object more than -> once : 1
more than once -> between : 1
more than once -> in : 4
more than once -> as : 3
more than once -> has : 1
more than once -> for : 1
than once between -> sequence : 1
once between sequence -> or : 1
between sequence or -> that : 1
sequence or that -> examines : 1
or that examines -> a : 1
that examines a -> scalar : 1
examines a scalar -> value : 1
a scalar value -> after : 1
scalar value after -> modifying : 1
value after modifying -> yields : 1
after modifying yields -> undefined : 1
modifying yields undefined -> this : 1
yields undefined this -> rule : 1
undefined this rule -> often : 1
this rule often -> bites : 1
rule often bites -> the : 1
often bites the -> unwary : 1
bites the unwary -> programmer : 1
the unwary programmer -> who : 1
unwary programmer who -> uses : 1
programmer who uses -> the : 1
who uses the -> increment : 1
uses the increment -> and : 1
and decrement for -> i : 1
decrement for i -> i : 1
i i undefined -> behavior : 1
i undefined behavior -> undefined : 1
undefined behavior undefined -> behavior : 1
behavior undefined behavior -> i : 1
undefined behavior i -> i : 1
behavior i i -> are : 1
i i are -> sequence : 1
i are sequence -> points : 1
are sequence points -> in : 1
sequence points in -> the : 1
points in the -> following : 1
following the end -> of : 4
end of every -> expression : 1
of every expression -> that : 1
every expression that -> is : 1
not a such -> an : 1
a such an -> expression : 1
such an expression -> might : 1
an expression might -> be : 1
expression might be -> used : 1
expression might be -> called : 1
expression might be -> a : 1
might be used -> in : 2
might be used -> for : 2
in an expression -> in : 1
an expression in -> an : 1
an expression in -> a : 1
in an as -> a : 1
an as a -> condition : 1
as a condition -> in : 1
a condition in -> an : 1
condition in an -> evaluating : 1
in an evaluating -> all : 1
an evaluating all -> function : 1
evaluating all function -> arguments : 1
all function arguments -> but : 1
function arguments but -> before : 1
arguments but before -> calling : 1
but before calling -> the : 1
before calling the -> a : 1
calling the a -> function : 1
calling the a -> handler : 1
the a function -> after : 1
a function after -> copying : 1
function after copying -> the : 1
after copying the -> return : 1
copying the return -> value : 1
return value from -> the : 1
return value from -> must : 1
return value from -> is : 1
return value from -> class : 4
value from the -> function : 1
value from the -> iterators : 1
from the function -> call : 1
from the function -> such : 1
from the function -> you : 1
from the function -> when : 1
the function call -> but : 1
the function call -> operator : 3
the function call -> at : 1
the function call -> has : 1
the function call -> explained : 1
function call but -> before : 1
call but before -> evaluating : 1
but before evaluating -> any : 1
before evaluating any -> other : 1
evaluating any other -> expressions : 1
any other expressions -> outside : 1
other expressions outside -> the : 1
expressions outside the -> evaluating : 1
outside the evaluating -> the : 1
the evaluating the -> first : 1
evaluating the first -> expression : 1
the first expression -> in : 1
first expression in -> each : 1
expression in each -> of : 1
in each of -> the : 2
each of the -> following : 2
each of the -> descriptions : 1
each of the -> functions : 1
each of the -> argument : 1
the following provided -> they : 1
following provided they -> use : 1
provided they use -> the : 1
they use the -> operators : 1
use the operators -> and : 1
operators and not -> overloaded : 1
operators and not -> force : 1
and not overloaded -> of : 1
not overloaded of -> of : 1
overloaded of of -> the : 1
of of the -> in : 1
the in which -> operands : 1
the in which -> case : 2
the in which -> is : 1
in which operands -> are : 1
which operands are -> evaluated : 1
operands are evaluated -> is : 1
operands are evaluated -> before : 1
are evaluated is -> so : 1
are evaluated is -> operators : 1
evaluated is so -> you : 1
is so you -> should : 1
is so you -> can : 1
you should never -> write : 1
you should never -> call : 1
should never write -> code : 1
never write code -> that : 1
write code that -> depends : 1
code that depends -> on : 3
depends on a -> particular : 1
depends on a -> template : 1
on a particular -> for : 1
on a particular -> host : 1
a particular for -> in : 1
particular for in -> the : 1
the expression might -> be : 1
might be called -> or : 1
might be called -> the : 1
might be called -> operators : 1
be called or -> might : 1
called or might -> be : 1
or might be -> called : 1
be called the -> difference : 1
called the difference -> can : 1
the difference can -> be : 1
difference can be -> significant : 1
can be significant -> when : 1
be significant when -> the : 1
significant when the -> functions : 1
when the functions -> have : 1
the functions have -> side : 1
functions have side -> order : 1
have side order -> of : 1
side order of -> shows : 1
order of shows -> a : 1
of shows a -> contrived : 1
of shows a -> simple : 2
of shows a -> facet : 1
of shows a -> typical : 1
shows a contrived -> situation : 1
a contrived situation -> in : 1
contrived situation in -> which : 1
situation in which -> a : 1
in which a -> program : 1
in which a -> comma : 1
in which a -> function : 2
in which a -> class : 1
in which a -> template : 1
in which a -> new : 2
which a program -> prints : 1
a program prints -> if : 1
program prints if -> is : 1
prints if is -> called : 1
if is called -> or : 1
if is called -> order : 1
is called or -> if : 1
called or if -> is : 1
or if is -> called : 1
or if is -> a : 2
or if is -> the : 1
or if is -> is : 1
or if is -> set : 1
or if is -> calls : 2
or if is -> does : 1
is called order -> of : 1
called order of -> int : 1
order of int -> x : 1
of int x -> int : 1
x int x -> return : 1
int x return -> int : 1
x return int -> return : 1
x return int -> fill : 1
return int return -> int : 2
return int return -> the : 1
return int return -> double : 1
return int simpler -> example : 1
int simpler example -> the : 1
simpler example the -> increment : 1
example the increment -> of : 1
the increment of -> can : 1
increment of can -> happen : 1
of can happen -> before : 1
can happen before -> or : 1
happen before or -> after : 1
before or after -> the : 1
or after the -> so : 1
or after the -> statement : 1
or after the -> arguments : 1
after the so -> might : 1
the so might -> be : 1
so might be -> or : 1
might be or -> i : 1
might be or -> some : 2
might be or -> a : 1
be or i -> i : 1
or i i -> value : 1
i i value -> of : 1
i value of -> i : 1
value of i -> is : 1
of i is -> a : 1
i is a -> function : 1
a function all -> arguments : 1
function all arguments -> are : 1
all arguments are -> evaluated : 1
arguments are evaluated -> before : 2
arguments are evaluated -> is : 1
are evaluated before -> the : 2
are evaluated before -> a : 1
evaluated before the -> function : 2
evaluated before the -> righthand : 1
before the function -> is : 2
before the function -> a : 1
before the function -> can : 1
function is as -> you : 1
is as you -> might : 1
as you might -> the : 1
you might the -> order : 1
might the order -> in : 1
the order in -> which : 5
order in which -> the : 2
order in which -> static : 1
order in which -> initializers : 1
order in which -> items : 1
order in which -> substatements : 1
order in which -> parts : 1
which the arguments -> are : 1
the arguments are -> evaluated : 2
the arguments are -> used : 1
the arguments are -> the : 1
the arguments are -> interpreted : 6
evaluated is operators -> and : 1
is operators and -> perform : 1
operators and perform -> the : 1
and perform the -> left : 1
and perform the -> use : 1
perform the left -> operand : 1
the left operand -> is : 6
the left operand -> by : 1
the left operand -> and : 2
the left operand -> of : 3
the left operand -> after : 1
the left operand -> has : 1
left operand is -> and : 1
left operand is -> a : 1
left operand is -> not : 1
left operand is -> evaluated : 1
left operand is -> the : 2
is and if -> the : 3
is and if -> that : 1
is and if -> it : 2
and if the -> expression : 1
and if the -> members : 1
and if the -> object : 1
and if the -> level : 1
and if the -> result : 1
and if the -> value : 1
and if the -> source : 1
and if the -> exception : 1
and if the -> employee : 1
and if the -> bit : 1
and if the -> sentry : 2
if the expression -> result : 2
if the expression -> is : 2
if the expression -> throws : 1
if the expression -> evaluates : 1
the expression result -> can : 1
the expression result -> is : 4
expression result can -> be : 1
result can be -> known : 1
result can be -> a : 1
result can be -> type : 1
can be known -> at : 1
be known at -> that : 1
known at that -> the : 1
at that the -> right : 1
at that the -> compiler : 1
that the right -> operand : 1
the right operand -> is : 7
the right operand -> has : 1
right operand is -> is : 1
right operand is -> converted : 2
right operand is -> negative : 1
right operand is -> an : 2
right operand is -> never : 1
operand is is -> never : 1
is is never -> if : 1
is never if -> is : 1
never if is -> never : 1
if is never -> the : 1
is never the -> logical : 1
is never the -> class : 1
is never the -> standard : 1
never the logical -> operator : 1
the logical operator -> is : 3
the logical operator -> has : 2
logical operator is -> it : 1
logical operator is -> a : 2
operator is it -> cannot : 1
is it cannot -> perform : 1
is it cannot -> be : 2
it cannot perform -> like : 1
cannot perform like -> any : 1
perform like any -> other : 1
like any other -> all : 1
like any other -> formatted : 1
any other all -> the : 1
other all the -> arguments : 1
all the arguments -> are : 1
function is for -> this : 1
is for this -> you : 1
for this you -> should : 1
for this you -> cannot : 1
this you should -> avoid : 1
you should avoid -> overloading : 1
you should avoid -> using : 3
you should avoid -> them : 1
should avoid overloading -> the : 1
avoid overloading the -> and : 1
overloading the and -> has : 1
overloading the and -> decrement : 1
the and has -> the : 1
has the usual -> unary : 1
the usual unary -> operators : 1
usual unary operators -> such : 1
unary operators such -> as : 1
operators such as -> logical : 1
operators such as -> addition : 1
such as logical -> negation : 1
as logical negation -> binary : 1
logical negation binary -> operators : 1
negation binary operators -> such : 1
binary operators such -> as : 1
such as addition -> and : 1
as addition and -> even : 1
addition and even -> a : 1
and even a -> ternary : 1
even a ternary -> operator : 1
a ternary operator -> unlike : 1
ternary operator unlike -> many : 1
operator unlike many -> other : 1
unlike many other -> an : 1
many other an -> array : 1
other an array -> subscript : 1
array subscript is -> also : 1
subscript is also -> an : 1
is also an -> operator : 1
is also an -> ordinary : 1
also an operator -> and : 1
an operator and -> a : 1
an operator and -> operator : 1
operator and a -> function : 1
and a function -> call : 1
and a function -> also : 1
and a function -> that : 1
and a function -> can : 1
and a function -> pointer : 1
and a function -> with : 1
and a function -> template : 1
function call is -> an : 1
call is an -> operator : 1
is an operator -> operator : 1
is an operator -> and : 1
an operator operator -> has : 1
operator operator has -> a : 1
operator has a -> operators : 1
operator has a -> sequence : 1
operator has a -> dependent : 1
has a operators -> with : 1
a operators with -> higher : 1
operators with higher -> precedence : 1
with higher precedence -> are : 1
higher precedence are -> grouped : 1
precedence are grouped -> so : 1
are grouped so -> that : 1
grouped so that -> they : 1
so that they -> are : 1
that they are -> logically : 1
that they are -> always : 1
that they are -> inherently : 1
they are logically -> evaluated : 1
are logically evaluated -> before : 1
logically evaluated before -> operators : 1
evaluated before operators -> with : 1
before operators with -> lower : 1
operators with lower -> that : 1
with lower that -> precedence : 1
lower that precedence -> determines : 1
that precedence determines -> how : 1
precedence determines how -> the : 1
parses the not -> necessarily : 1
the not necessarily -> the : 1
not necessarily the -> actual : 1
not necessarily the -> if : 1
not necessarily the -> same : 1
not necessarily the -> the : 1
necessarily the actual -> order : 1
the actual order -> of : 1
actual order of -> for : 1
order of for -> in : 1
of for in -> the : 1
expression the multiplication -> has : 1
the multiplication has -> higher : 1
multiplication has higher -> but : 1
has higher but -> might : 1
higher but might -> be : 1
but might be -> called : 1
be called operators -> group : 1
called operators group -> from : 1
operators group from -> left : 1
group from left -> to : 1
from left to -> for : 1
left to for -> the : 1
to for the -> expression : 1
to for the -> second : 3
to for the -> and : 1
to for the -> first : 1
to for the -> base : 1
for the expression -> is : 1
expression is equivalent -> to : 4
is equivalent to -> other : 1
is equivalent to -> the : 2
is equivalent to -> unless : 1
is equivalent to -> and : 5
is equivalent to -> one : 1
is equivalent to -> having : 1
is equivalent to -> directive : 2
is equivalent to -> except : 3
is equivalent to -> function : 13
is equivalent to -> calling : 15
is equivalent to -> in : 3
is equivalent to -> macro : 1
is equivalent to -> which : 1
equivalent to other -> operators : 1
to other operators -> group : 1
other operators group -> right : 1
operators group right -> to : 1
group right to -> as : 1
right to as -> in : 1
to as in -> which : 1
as in which -> is : 2
which is equivalent -> to : 1
equivalent to the -> order : 1
equivalent to the -> behavior : 1
equivalent to the -> new : 1
equivalent to the -> allocator : 1
equivalent to the -> complexity : 1
to the order -> of : 1
order of grouping -> is : 1
of grouping is -> called : 1
grouping is called -> the : 1
called the reading -> you : 1
the reading you -> must : 1
reading you must -> be : 1
you must be -> aware : 1
you must be -> willing : 1
you must be -> able : 1
you must be -> sure : 1
must be aware -> of : 1
be aware of -> the : 3
of the precedence -> and : 1
the precedence and -> associativity : 1
precedence and associativity -> of : 1
and associativity of -> the : 1
associativity of the -> operators : 1
of the operators -> for : 1
of the operators -> as : 1
operators for is -> read : 1
for is read -> as : 1
read as because -> the : 1
as because the -> postfix : 1
because the postfix -> operator : 1
the postfix operator -> has : 1
postfix operator has -> higher : 1
operator has higher -> precedence : 1
has higher precedence -> than : 1
higher precedence than -> the : 1
higher precedence than -> equality : 1
precedence than the -> unary : 1
than the unary -> syntax : 1
the unary syntax -> and : 1
unary syntax and -> grouped : 1
syntax and grouped -> by : 2
syntax and grouped -> solid : 1
and grouped by -> summarizes : 1
and grouped by -> syntax : 1
grouped by summarizes -> the : 1
by summarizes the -> and : 1
summarizes the and -> of : 1
the and of -> each : 1
and of each -> kind : 1
of each kind -> of : 1
kind of the -> subsections : 1
kind of the -> address : 1
kind of the -> virtual : 1
kind of the -> simplest : 1
of the subsections -> that : 1
the subsections that -> follow : 1
subsections that follow -> describe : 1
that follow describe -> the : 1
follow describe the -> kinds : 1
describe the kinds -> of : 1
the kinds of -> expressions : 1
the kinds of -> extensions : 1
kinds of expressions -> in : 1
expressions in each -> subsection : 1
in each subsection -> covers : 1
each subsection covers -> a : 1
subsection covers a -> single : 1
covers a single -> precedence : 1
a single precedence -> syntax : 1
single precedence syntax -> and : 1
precedence syntax and -> grouped : 1
grouped by syntax -> and : 1
by syntax and -> grouped : 1
and grouped solid -> solid : 1
grouped solid solid -> solid : 1
solid solid to -> solid : 2
solid solid to -> set : 1
solid solid to -> read : 1
solid solid to -> before : 1
solid solid to -> immediately : 1
solid to solid -> solid : 2
to solid solid -> solid : 2
solid solid exclusive -> solid : 2
solid exclusive solid -> solid : 2
exclusive solid solid -> solid : 3
solid solid inclusive -> solid : 1
solid inclusive solid -> solid : 1
inclusive solid solid -> solid : 1
solid solid expression -> is : 1
solid expression is -> the : 1
expression is the -> basic : 1
expression is the -> initial : 1
expression is the -> result : 1
expression is the -> condition : 1
expression is the -> name : 1
is the basic -> building : 1
the basic building -> block : 1
basic building block -> for : 1
building block for -> more : 1
block for more -> complex : 1
for more complex -> it : 1
more complex it -> is : 1
complex it is -> an : 1
it is an -> expression : 1
it is an -> a : 1
it is an -> the : 2
it is an -> inline : 1
it is an -> unsigned : 6
it is an -> attempt : 1
expression in a -> or : 1
expression in a -> function : 1
expression in a -> you : 1
in a or -> a : 1
in a or -> loop : 1
a or a -> name : 1
a or a -> namespace : 1
a or a -> function : 1
a or a -> member : 1
a or a -> it : 1
or a name -> the : 1
a name the -> various : 1
name the various -> forms : 1
the various forms -> of : 1
various forms of -> primary : 1
forms of primary -> expressions : 1
of primary expressions -> constant : 1
primary expressions constant -> string : 1
expressions constant string -> literals : 1
constant string literals -> arrays : 1
string literals arrays -> of : 1
literals arrays of -> or : 1
arrays of or -> are : 1
arrays of or -> keyword : 1
of or are -> all : 1
or are all -> other : 1
are all other -> literals : 1
are all other -> comparisons : 1
all other literals -> are : 1
other literals are -> to : 1
literals are to -> the : 1
are to the -> target : 1
the target object -> in : 1
the target object -> via : 1
the target object -> of : 1
target object in -> a : 1
object in a -> nonstatic : 1
object in a -> machine : 1
object in a -> standard : 1
in a nonstatic -> member : 2
nonstatic member its -> type : 1
nonstatic member its -> value : 1
member its type -> is : 1
its type is -> a : 1
its type is -> its : 1
its type is -> cast : 1
its type is -> dependent : 1
the class its -> value : 1
class its value -> is : 1
an the type -> and : 1
an the type -> of : 3
an the type -> must : 1
an the type -> is : 1
the type and -> value : 1
the type and -> can : 1
the type and -> related : 3
the type and -> let : 1
the type and -> have : 2
type and value -> of : 1
and value of -> an : 1
of an entity -> according : 1
an entity according -> to : 1
entity according to -> the : 1
to the name -> lookup : 1
to the name -> or : 1
lookup rules in -> the : 1
rules in the -> expression : 1
rules in the -> type : 1
expression result is -> the : 1
expression result is -> an : 1
expression result is -> so : 1
expression result is -> known : 1
result is the -> entity : 1
result is the -> which : 1
result is the -> size : 1
result is the -> sign : 1
result is the -> difference : 1
result is the -> same : 1
result is the -> value : 1
result is the -> token : 1
result is the -> condition : 1
result is the -> result : 1
result is the -> branch : 1
is the entity -> and : 1
the entity and -> the : 1
entity and the -> expression : 1
and the expression -> type : 1
and the expression -> is : 1
and the expression -> list : 2
and the expression -> simply : 1
and the expression -> does : 1
and the expression -> must : 1
the expression type -> is : 2
expression type is -> the : 1
expression type is -> point : 1
is the the -> result : 1
is the the -> empty : 1
is the the -> locale : 1
the the result -> is : 2
the the result -> can : 1
the the result -> has : 1
the the result -> and : 1
result is an -> lvalue : 8
result is an -> the : 6
result is an -> if : 2
result is an -> instance : 1
result is an -> rvalue : 3
result is an -> it : 2
result is an -> you : 1
result is an -> and : 2
result is an -> a : 2
result is an -> which : 1
result is an -> every : 1
result is an -> otherwise : 1
is an lvalue -> if : 4
is an lvalue -> whose : 1
is an lvalue -> only : 1
is an lvalue -> of : 5
is an lvalue -> and : 1
is an lvalue -> that : 1
is an lvalue -> a : 1
an lvalue if -> the : 1
an lvalue if -> is : 2
an lvalue if -> points : 1
lvalue if the -> entity : 1
if the entity -> is : 3
the entity is -> an : 3
entity is an -> data : 3
is an data -> or : 3
an data or -> the : 3
data or the -> following : 1
data or the -> value : 2
or the following -> are : 1
following are the -> various : 1
following are the -> member : 17
following are the -> template : 1
following are the -> standard : 1
following are the -> protected : 12
following are the -> key : 1
following are the -> members : 6
following are the -> methods : 6
following are the -> possible : 2
following are the -> public : 2
are the various -> kinds : 1
the various kinds -> of : 1
various kinds of -> unqualified : 1
kinds of unqualified -> an : 1
of unqualified an -> or : 1
unqualified an or -> the : 1
an or the -> name : 1
an or the -> qualified : 1
an or the -> type : 1
an or the -> results : 1
looked up according -> to : 1
up according to -> the : 1
to the rules -> in : 1
to the rules -> of : 1
the rules in -> the : 1
in the type -> is : 1
in the type -> type : 1
in the type -> cannot : 1
is the declared -> type : 2
the declared type -> of : 5
the declared type -> is : 1
declared type of -> the : 5
of the if -> the : 7
of the if -> fails : 1
of the if -> contains : 1
of the if -> is : 4
of the if -> does : 1
of the if -> sequence : 1
or the value -> is : 2
or the value -> cannot : 1
is an an -> see : 1
an an see -> for : 1
an see for -> more : 1
for more a -> template : 1
for more a -> type : 1
more a template -> see : 1
a template see -> for : 1
a template see -> such : 1
template see for -> more : 2
template see for -> information : 1
more a type -> conversion : 1
conversion the is -> a : 1
conversion the is -> the : 1
a type possibly -> with : 1
type possibly with -> one : 1
possibly with one -> or : 1
with one or -> more : 1
or more pointer -> symbols : 1
more pointer symbols -> in : 1
pointer symbols in -> the : 1
symbols in the -> for : 1
in the for -> details : 1
in the for -> a : 1
in the for -> the : 1
the for details -> about : 1
the for details -> of : 1
details about type -> specifiers : 1
details about type -> each : 1
about type specifiers -> and : 2
specifiers and the -> destructor : 1
and the destructor -> for : 1
and the destructor -> in : 1
the destructor for -> the : 3
the destructor for -> each : 1
the destructor for -> to : 1
the destructor for -> every : 1
destructor for the -> scope : 1
destructor for the -> the : 1
destructor for the -> object : 1
for the scope -> operator : 1
to qualify an -> or : 1
qualify an or -> the : 1
or the qualified -> name : 1
the qualified name -> can : 1
the qualified name -> to : 1
qualified name can -> be : 1
be in the -> global : 1
be in the -> same : 1
be in the -> source : 2
be in the -> range : 3
be in the -> ranges : 1
be in the -> the : 1
be in the -> a : 4
global scope or -> in : 1
global scope or -> as : 1
scope or in -> the : 1
scope of a -> class : 1
scope of a -> is : 1
scope of a -> label : 1
scope of a -> parameter : 1
class or a -> global : 1
class or a -> derived : 2
class or a -> parameter : 1
or a global -> the : 1
a global the -> type : 2
global the type -> is : 1
global the type -> of : 1
is an it -> is : 3
an it is -> an : 3
is an a -> global : 1
is an a -> cannot : 1
is an a -> range : 1
an a global -> note : 1
a global note -> that : 1
global note that -> type : 1
note that type -> conversion : 1
that type conversion -> operators : 1
conversion operators must -> be : 1
operators must be -> member : 2
must be member -> so : 1
must be member -> and : 1
be member so -> there : 1
member so there -> cannot : 1
so there cannot -> be : 1
there cannot be -> a : 1
be a global -> type : 1
a global type -> conversion : 1
global type conversion -> see : 1
type conversion see -> for : 1
conversion see for -> more : 1
more an entity -> in : 1
an entity in -> a : 2
entity in a -> class : 2
or namespace the -> can : 1
or namespace the -> first : 1
namespace the can -> be : 1
or namespace or -> it : 1
namespace or it -> can : 1
or it can -> have : 1
or it can -> be : 4
or it can -> increase : 1
or it can -> produce : 1
it can have -> the : 3
can have the -> form : 1
can have the -> same : 1
can have the -> semantics : 2
have the form -> or : 1
have the form -> cannot : 1
form or use -> the : 1
or use the -> keyword : 2
or use the -> locale : 1
use the keyword -> when : 2
use the keyword -> if : 1
use the keyword -> before : 1
use the keyword -> to : 1
use the keyword -> in : 1
the keyword when -> instantiating : 1
the keyword when -> invoking : 1
keyword when instantiating -> a : 1
when instantiating a -> see : 1
instantiating a see -> for : 1
a see for -> information : 1
a see for -> copy : 1
a see for -> details : 1
information about template -> an : 1
about template an -> entity : 1
template an entity -> in : 1
namespace the first -> class : 1
the first class -> or : 1
the first class -> with : 1
first class or -> namespace : 1
or namespace name -> is : 1
namespace name is -> looked : 1
global the rest -> of : 1
rest of this -> the : 1
rest of this -> section : 1
rest of this -> x : 1
of this the -> syntax : 1
of this the -> intrepid : 1
of this the -> input : 2
this the syntax -> element : 1
the syntax element -> refers : 1
syntax element refers -> to : 1
element refers to -> a : 1
to a qualified -> or : 1
to a qualified -> even : 1
to a qualified -> member : 1
a qualified or -> unqualified : 1
qualified or unqualified -> as : 1
qualified or unqualified -> name : 1
or unqualified as -> described : 1
unqualified as described -> in : 1
described in this -> in : 1
described in this -> whether : 1
this in a -> can : 1
in a can -> be : 2
in a can -> have : 1
a can be -> used : 1
a can be -> at : 1
a can be -> deduced : 1
a can be -> promoted : 1
a can be -> set : 1
used to the -> right : 1
the or in -> a : 1
or in a -> postfix : 1
or in a -> standard : 1
in a postfix -> shows : 1
a postfix shows -> some : 1
postfix shows some -> primary : 1
shows some primary -> ns : 1
some primary ns -> int : 1
primary ns int -> class : 1
ns int class -> cls : 1
int class cls -> int : 1
class cls int -> literal : 1
cls int literal -> parenthesized : 1
int literal parenthesized -> expression : 1
literal parenthesized expression -> x : 1
parenthesized expression x -> unqualified : 1
expression x unqualified -> identifier : 1
x unqualified identifier -> qualified : 1
unqualified identifier qualified -> identifier : 1
identifier qualified identifier -> qualified : 1
qualified identifier qualified -> constructor : 1
identifier qualified constructor -> unqualified : 1
qualified constructor unqualified -> operator : 1
constructor unqualified operator -> expression : 1
unqualified operator expression -> is : 1
operator expression is -> an : 1
expression that uses -> postfix : 1
that uses postfix -> syntax : 1
uses postfix syntax -> follows : 1
postfix syntax follows -> the : 1
syntax follows the -> with : 1
follows the with -> some : 1
the with some -> exceptions : 1
the with some -> numerical : 1
with some exceptions -> that : 1
some exceptions that -> just : 1
exceptions that just -> happen : 1
that just happen -> to : 1
just happen to -> have : 1
happen to have -> the : 1
to have the -> same : 2
to have the -> compiler : 2
to have the -> protected : 1
the same the -> postfix : 1
the same the -> same : 1
the same the -> pointer : 1
the same the -> result : 1
the same the -> derived : 2
the same the -> program : 1
the same the -> compiler : 1
the same the -> standard : 1
the same the -> must : 1
the same the -> first : 1
the same the -> function : 1
the same the -> assignment : 1
the same the -> name : 1
the same the -> resulting : 17
same the postfix -> expressions : 1
the postfix expressions -> an : 1
postfix expressions an -> element : 1
expressions an element -> of : 1
an element of -> an : 1
an element of -> a : 2
an element of -> the : 6
an element of -> more : 2
an element of -> and : 19
an element of -> function : 1
an element of -> when : 17
an element of -> in : 1
an element of -> e : 1
element of an -> the : 1
element of an -> array : 1
of an the -> subscript : 1
of an the -> name : 1
of an the -> first : 3
of an the -> results : 1
of an the -> type : 1
of an the -> object : 1
of an the -> and : 1
of an the -> lefthand : 1
an the subscript -> operator : 1
the subscript operator -> requires : 1
the subscript operator -> to : 2
subscript operator requires -> a : 1
requires a pointer -> as : 1
a pointer as -> the : 1
a pointer as -> a : 6
pointer as the -> left : 1
pointer as the -> lefthand : 1
pointer as the -> note : 1
pointer as the -> first : 1
as the left -> an : 1
as the left -> operand : 1
the left an -> array : 1
left an array -> is : 1
an array is -> implicitly : 1
an array is -> different : 1
array is implicitly -> converted : 1
is implicitly converted -> to : 4
a the right -> operand : 1
operand is converted -> to : 3
an and the -> expression : 1
an and the -> type : 1
an and the -> compiler : 1
an and the -> algorithm : 1
an and the -> element : 1
expression is evaluated -> as : 1
expression is evaluated -> if : 1
is evaluated as -> if : 1
evaluated as if -> the : 1
as if the -> array : 1
as if the -> programmer : 1
as if the -> manipulator : 1
as if the -> number : 1
if the array -> index : 1
if the array -> size : 1
if the array -> is : 4
the array index -> is : 1
array index is -> out : 1
index is out -> of : 1
is out of -> the : 4
is out of -> this : 1
is out of -> such : 2
is out of -> a : 1
is out of -> function : 1
is out of -> its : 1
is out of -> range : 1
out of the -> behavior : 1
out of the -> intention : 1
out of the -> example : 1
out of the -> value : 1
out of the -> or : 1
out of the -> managed : 1
out of the -> corporate : 1
of the behavior -> is : 7
behavior is the -> result : 1
behavior is the -> remainder : 1
behavior is the -> value : 1
behavior is the -> same : 1
behavior is the -> best : 1
behavior is the -> token : 1
behavior is the -> return : 1
behavior is the -> element : 1
behavior is the -> size : 2
behavior is the -> mask : 1
behavior is the -> a : 1
behavior is the -> last : 1
is the result -> is : 10
is the result -> type : 1
is the result -> of : 7
is the result -> an : 1
an lvalue whose -> type : 1
lvalue whose type -> is : 1
is the base -> type : 1
is the base -> is : 2
is the base -> class : 11
is the base -> for : 3
is the base -> of : 1
base type of -> a : 1
a the function -> call : 1
a the function -> gets : 1
a the function -> body : 1
a the function -> argument : 1
a the function -> return : 1
a the function -> swaps : 2
a the function -> shows : 1
a the function -> returns : 1
a the function -> uses : 1
function call operator -> requires : 1
function call operator -> name : 1
function call operator -> of : 1
function call operator -> or : 1
function call operator -> is : 1
function call operator -> that : 1
call operator requires -> one : 1
operator requires one -> of : 1
requires one of -> the : 1
the following as -> a : 1
following as a -> left : 1
as a left -> a : 1
a left a -> function : 1
left a function -> an : 1
a function an -> expression : 1
function an expression -> that : 1
expression that returns -> a : 1
expression that returns -> an : 1
returns a function -> or : 2
returns a function -> object : 2
returns a function -> template : 2
function or an -> expression : 1
function or an -> argument : 1
or an expression -> that : 1
that returns an -> object : 1
that returns an -> iterator : 1
returns an object -> that : 1
that has a -> function : 2
that has a -> virtual : 1
that has a -> base : 1
has a function -> call : 2
has a function -> with : 1
has a function -> derived : 1
call operator name -> is : 1
operator name is -> the : 1
name is the -> same : 2
same as a -> function : 1
same as a -> parameter : 1
same as a -> reserved : 1
name in this -> the : 1
this the is -> a : 1
list of zero -> or : 1
or more assignment -> later : 1
more assignment later -> in : 1
assignment later in -> this : 1
in this all -> the : 1
this all the -> expressions : 1
all the expressions -> in : 1
the expressions in -> the : 1
expressions in the -> expression : 2
the expression list -> are : 1
the expression list -> is : 4
the expression list -> contains : 2
the expression list -> has : 1
expression list are -> and : 1
list are and -> then : 1
are and then -> the : 1
and then the -> function : 1
and then the -> a : 1
and then the -> member : 1
then the function -> is : 1
function is the -> result : 1
function is the -> requested : 1
function is the -> one : 3
function is the -> search : 1
function is the -> first : 1
function is the -> compiler : 2
function is the -> entry : 1
function is the -> namespace : 1
function is the -> instantiation : 1
function is the -> template : 1
function is the -> same : 1
is the return -> type : 4
is the return -> value : 43
is the return -> it : 1
is the return -> an : 1
return type of -> the : 3
return type of -> an : 2
return type of -> each : 1
if the return -> type : 2
if the return -> value : 3
return type is -> a : 2
return type is -> no : 2
return type is -> the : 1
return type is -> anything : 1
return type is -> not : 1
return type is -> at : 1
return type is -> usually : 1
return type is -> obtained : 1
a reference the -> result : 1
a reference the -> implicit : 4
reference the result -> is : 1
an the result -> is : 4
is an if -> the : 2
is an if -> is : 1
type is no -> value : 2
is no value -> is : 2
no value is -> see : 1
no value is -> returned : 1
value is see -> for : 1
value is see -> the : 1
value is see -> also : 2
about type conversion -> or : 1
conversion or a -> is : 1
or a is -> a : 1
is a single -> a : 1
is a single -> copy : 1
is a single -> character : 1
a single a -> fundamental : 1
a single a -> constant : 1
single a fundamental -> type : 1
a fundamental type -> or : 1
fundamental type or -> a : 1
or a qualified -> name : 2
or a qualified -> see : 1
or a the -> result : 1
or a the -> new : 1
or a the -> syntax : 1
or a the -> stream : 1
instance of the -> specified : 1
instance of the -> which : 1
instance of the -> specialized : 1
instance of the -> general : 1
instance of the -> either : 1
instance of the -> class : 2
instance of the -> template : 1
instance of the -> same : 2
instance of the -> derived : 1
instance of the -> formatting : 1
of the specified -> initialized : 1
the specified initialized -> as : 1
specified initialized as -> the : 1
initialized as the -> expression : 1
as the expression -> list : 1
expression list is -> the : 1
expression list is -> passed : 3
is an rvalue -> that : 1
is an rvalue -> of : 6
an rvalue that -> is : 1
rvalue that is -> initialized : 1
initialized with a -> default : 1
with a default -> or : 1
with a default -> associated : 1
a default or -> that : 1
default or that -> is : 1
initialized to for -> details : 1
to for details -> about : 1
details about the -> expression : 1
details about the -> statement : 1
details about the -> files : 1
details about the -> various : 1
about the expression -> list : 2
expression list contains -> one : 1
expression list contains -> more : 1
list contains one -> that : 1
contains one that -> value : 1
one that value -> is : 1
that value is -> cast : 1
that value is -> guaranteed : 1
cast to the -> desired : 1
cast to the -> static : 1
cast to the -> base : 1
cast to the -> number : 1
desired type in -> the : 1
the same manner -> as : 13
same manner as -> a : 3
same manner as -> any : 1
same manner as -> function : 1
same manner as -> is : 1
same manner as -> the : 3
same manner as -> if : 1
same manner as -> reading : 2
same manner as -> constructing : 1
manner as a -> cast : 1
manner as a -> pointer : 1
manner as a -> function : 1
as a cast -> if : 1
a cast if -> the : 1
cast if the -> type : 1
an the expression -> list : 1
an the expression -> is : 3
an the expression -> has : 1
list contains more -> than : 1
the type must -> be : 20
the type must -> have : 1
be a and -> the : 2
a and the -> expression : 1
a and the -> class : 1
a and the -> argument : 1
a and the -> entire : 1
a and the -> parenthesis : 2
a and the -> or : 1
a and the -> standard : 1
a and the -> values : 1
a and the -> increment : 3
a and the -> pointer : 2
list is passed -> as : 1
list is passed -> to : 2
is passed as -> arguments : 1
passed as arguments -> to : 1
as arguments to -> a : 1
as arguments to -> including : 1
arguments to a -> suitable : 1
arguments to a -> function : 1
arguments to a -> template : 1
suitable constructor to -> create : 1
constructor to create -> an : 1
to create an -> instance : 1
to create an -> indirect : 1
create an instance -> of : 4
of the which -> is : 3
of the which -> lets : 1
of the which -> tends : 1
which is returned -> as : 1
which is returned -> from : 1
is returned as -> an : 2
returned as an -> a : 1
returned as an -> names : 1
as an a -> member : 1
an a member -> of : 1
member of an -> the : 1
member of an -> inaccessible : 1
member of an -> object : 1
an the name -> can : 1
can be qualified -> to : 1
be qualified to -> refer : 1
qualified to refer -> to : 1
to a name -> in : 1
to a name -> that : 1
a name in -> a : 2
a name in -> only : 1
a name in -> which : 1
a name in -> class : 1
a name in -> the : 3
in a base -> class : 2
in a base -> if : 1
in a base -> or : 1
in a base -> ordinary : 1
a base class -> the : 1
a base class -> pointer : 1
a base class -> if : 1
a base class -> of : 2
a base class -> precludes : 1
a base class -> appears : 1
a base class -> by : 1
a base class -> has : 2
a base class -> is : 3
a base class -> must : 1
a base class -> affects : 1
a base class -> also : 1
a base class -> in : 1
a base class -> or : 1
a base class -> name : 1
a base class -> hides : 1
a base class -> for : 4
a base class -> as : 1
base class the -> return : 1
base class the -> derived : 1
class the return -> type : 1
return value depends -> on : 3
value depends on -> whether : 4
depends on whether -> is : 1
depends on whether -> the : 1
depends on whether -> multibyte : 2
on whether is -> a : 1
whether is a -> data : 1
whether is a -> heap : 1
is a data -> member : 1
is a data -> structure : 1
member or names -> a : 1
or names a -> static : 1
or names a -> type : 1
or names a -> class : 1
names a static -> data : 1
static data the -> member : 1
data the member -> is : 1
the member is -> returned : 1
the member is -> a : 1
the member is -> actually : 1
the member is -> set : 1
the member is -> more : 1
member is returned -> as : 1
as an names -> a : 1
an names a -> nonstatic : 1
names a nonstatic -> data : 1
nonstatic data the -> result : 1
nonstatic data the -> size : 1
data the result -> is : 2
an lvalue only -> if : 1
lvalue only if -> is : 1
only if is -> an : 1
if is an -> if : 1
if is an -> lvalue : 2
if is an -> uppercase : 2
if is an -> internal : 2
if is an -> alphabetic : 1
if is an -> integral : 1
an if is -> declared : 1
an if is -> is : 1
an if is -> not : 1
if is declared -> the : 1
is declared the -> result : 1
declared the result -> is : 1
result is not -> even : 1
result is not -> a : 1
is not even -> if : 1
not even if -> is : 1
even if is -> the : 1
if is the -> result : 5
if is the -> behavior : 2
if is the -> first : 1
if is the -> loop : 2
if is the -> input : 3
if is the -> iterator : 2
if is the -> return : 5
if is the -> is : 1
if is the -> orientation : 2
if is the -> value : 1
if is the -> sentry : 1
if is the -> output : 5
if is the -> number : 1
if is the -> same : 1
result is if -> either : 2
result is if -> is : 1
result is if -> the : 3
is if either -> or : 2
if either or -> is : 3
either or is -> the : 1
either or is -> names : 1
either or is -> in : 1
or is names -> a : 1
is names a -> member : 1
names a member -> the : 1
member the usual -> rules : 1
rules for overload -> resolution : 1
rules for overload -> object : 1
for overload resolution -> apply : 1
overload resolution apply -> if : 1
resolution apply if -> the : 1
apply if the -> function : 1
function is a -> static : 2
function is a -> nonstatic : 1
function is a -> expression : 1
function is a -> virtual : 1
function is a -> last : 1
function is a -> convenient : 2
function is a -> manipulator : 22
function is a -> counterpart : 1
is a static -> member : 2
is a static -> local : 1
is a static -> character : 1
static member the -> result : 1
member the result -> is : 1
is an you -> can : 1
can take the -> address : 2
take the address -> or : 1
take the address -> of : 6
the address or -> call : 1
address or call -> the : 1
or call the -> the : 1
or call the -> or : 1
or call the -> version : 1
call the the -> function : 1
call the the -> shows : 1
call the the -> actual : 1
the the function -> is : 2
the the function -> does : 1
the the function -> returns : 1
the the function -> definition : 1
the the function -> copies : 1
the the function -> takes : 1
the the function -> should : 1
the the function -> template : 8
the the function -> calls : 2
the the function -> fails : 2
is a nonstatic -> member : 2
nonstatic member it -> must : 1
nonstatic member it -> makes : 1
member it must -> be : 1
is an and -> returns : 1
is an and -> the : 1
is an and -> represents : 1
an and returns -> its : 1
and returns its -> value : 2
and returns its -> integer : 1
returns its value -> prior : 2
its value prior -> to : 2
value prior to -> incrementing : 1
value prior to -> decrementing : 1
prior to incrementing -> an : 1
to incrementing an -> the : 1
incrementing an the -> type : 1
type of must -> be : 3
of must be -> arithmetic : 2
of must be -> an : 1
of must be -> at : 1
must be arithmetic -> or : 2
must be arithmetic -> the : 1
be arithmetic or -> a : 2
arithmetic or a -> the : 1
arithmetic or a -> pointer : 1
a the new -> value : 1
the new value -> is : 5
the new value -> as : 2
new value is -> has : 1
new value is -> always : 1
new value is -> to : 1
new value is -> in : 2
value is has -> type : 1
is has type -> the : 1
type the new -> value : 1
value is always -> this : 1
value is always -> at : 19
value is always -> less : 13
value is always -> positive : 1
value is always -> a : 1
value is always -> or : 2
is always this -> behavior : 1
always this behavior -> is : 1
this behavior is -> and : 1
behavior is and -> returns : 1
is and returns -> its : 1
is and returns -> calls : 1
is and returns -> returns : 1
is and returns -> if : 1
is and returns -> see : 1
prior to decrementing -> an : 1
to decrementing an -> the : 1
decrementing an the -> type : 1
or a pointer -> and : 1
or a pointer -> to : 2
or a pointer -> the : 1
or a pointer -> obtained : 1
a pointer and -> cannot : 1
a pointer and -> the : 1
a pointer and -> vice : 1
pointer and cannot -> be : 1
and cannot be -> the : 3
and cannot be -> redeclared : 1
be the new -> value : 1
value is to -> if : 1
value is to -> the : 1
value is to -> push : 2
value is to -> seek : 1
value is to -> its : 1
is to if -> is : 1
to if is -> a : 7
to if is -> greater : 2
to if is -> throws : 1
to if is -> uppercase : 1
to if is -> lowercase : 1
to if is -> not : 2
to if is -> shorter : 2
to if is -> the : 1
to if is -> an : 2
to if is -> or : 2
to if is -> it : 1
if is a -> the : 2
if is a -> null : 10
if is a -> otherwise : 1
if is a -> dereference : 1
if is a -> static : 2
if is a -> nonstatic : 1
if is a -> pointer : 3
if is a -> known : 1
if is a -> failure : 2
if is a -> control : 1
if is a -> decimal : 2
if is a -> lowercase : 2
if is a -> printing : 1
if is a -> whitespace : 2
if is a -> range : 2
if is a -> domain : 1
if is a -> wide : 1
if is a -> printable : 1
if is a -> hexadecimal : 1
if is a -> value : 2
an the new -> type : 1
the new type -> must : 1
new type must -> match : 1
match the type -> of : 2
type of but -> the : 1
of but the -> and : 1
but the and -> qualifiers : 1
the and qualifiers -> can : 1
and qualifiers can -> be : 1
qualifiers can be -> that : 1
can be that -> removes : 1
can be that -> the : 1
be that removes -> a : 1
that removes a -> qualifier : 1
removes a qualifier -> is : 1
a qualifier is -> generally : 1
qualifier is generally -> a : 1
is generally a -> bad : 1
generally a bad -> it : 1
a bad it -> is : 1
bad it is -> sometimes : 1
it is sometimes -> necessary : 1
it is sometimes -> see : 1
is sometimes necessary -> to : 1
sometimes necessary to -> cast : 1
necessary to cast -> away : 1
to cast away -> especially : 1
cast away especially -> when : 1
away especially when -> passing : 1
especially when passing -> pointers : 1
when passing pointers -> to : 1
passing pointers to -> legacy : 1
pointers to legacy -> for : 1
to legacy for -> a : 1
legacy for a -> discussion : 1
for a discussion -> of : 8
a discussion of -> the : 1
a discussion of -> automatic : 1
a discussion of -> what : 1
a discussion of -> iterator : 1
a discussion of -> shift : 2
a discussion of -> some : 1
a discussion of -> locale : 1
discussion of the -> which : 1
discussion of the -> pimpl : 1
the which lets -> you : 1
which lets you -> modify : 1
lets you modify -> a : 1
you modify a -> data : 1
modify a data -> member : 1
data member of -> a : 1
data member of -> or : 1
data member of -> the : 1
data member of -> type : 1
a a base -> class : 1
base class pointer -> or : 1
derived class a -> runtime : 1
class a runtime -> check : 1
runtime check is -> performed : 1
check is performed -> to : 1
is performed to -> make : 1
performed to make -> sure : 1
sure the true -> class : 1
the true class -> of : 1
true class of -> is : 1
class of is -> or : 1
of is or -> a : 3
is or a -> class : 3
is or a -> character : 1
is or a -> string : 3
is or a -> number : 1
is or a -> temporary : 2
or a class -> derived : 4
or a class -> or : 1
or a class -> declaration : 1
a class derived -> from : 5
class derived from -> the : 4
class derived from -> one : 1
class derived from -> that : 1
derived from the -> class : 1
derived from the -> result : 2
derived from the -> cast : 1
from the class -> must : 1
from the class -> inherits : 1
from the class -> you : 1
from the class -> template : 1
from the class -> specify : 1
from the class -> class : 2
the class must -> be : 1
the class must -> have : 2
class must be -> that : 1
class must be -> repeated : 1
must be that -> have : 1
be that have -> at : 1
that have at -> least : 1
one virtual the -> base : 1
one virtual the -> type : 1
virtual the base -> class : 1
the base class -> can : 1
the base class -> must : 1
the base class -> the : 1
the base class -> functions : 1
the base class -> members : 1
the base class -> is : 4
the base class -> classes : 1
the base class -> are : 2
the base class -> to : 1
the base class -> because : 1
the base class -> become : 1
the base class -> retain : 1
the base class -> subobject : 1
the base class -> for : 11
the base class -> output : 1
the base class -> with : 3
the base class -> and : 3
base class can -> be : 2
class can be -> a : 1
class can be -> converted : 1
class can be -> used : 4
class can be -> declared : 2
be a cannot -> cast : 1
a cannot cast -> away : 2
cannot cast away -> the : 2
cannot cast away -> or : 1
away the cast -> works : 1
the cast works -> as : 1
cast works as -> is : 1
works as is -> the : 1
return value is -> a : 24
return value is -> implicitly : 1
return value is -> an : 18
return value is -> the : 39
return value is -> if : 9
return value is -> first : 1
return value is -> one : 12
return value is -> is : 5
return value is -> in : 22
return value is -> for : 25
return value is -> function : 13
return value is -> always : 2
return value is -> true : 2
return value is -> positive : 6
return value is -> you : 2
return value is -> from : 1
return value is -> also : 1
return value is -> to : 3
return value is -> streamsize : 2
return value is -> characters : 3
return value is -> ahead : 1
return value is -> that : 2
return value is -> with : 4
return value is -> see : 3
return value is -> and : 1
return value is -> class : 2
return value is -> input : 1
return value is -> second : 1
return value is -> this : 1
return value is -> t : 1
to the object -> that : 3
to the object -> is : 1
to the object -> by : 1
to the object -> associated : 1
the object that -> points : 4
the object that -> base : 1
the object that -> has : 2
object that points -> the : 2
object that points -> if : 1
object that points -> in : 1
that points the -> type : 1
that points the -> only : 1
that points the -> memory : 1
that points the -> pointer : 1
that points the -> new : 1
that points the -> argument : 1
that points the -> last : 1
that points the -> first : 1
points the type -> does : 1
not have to -> be : 6
not have to -> the : 1
not have to -> use : 2
not have to -> create : 1
have to be -> polymorphic : 2
have to be -> as : 1
have to be -> identical : 1
have to be -> concerned : 1
have to be -> but : 1
to be polymorphic -> in : 2
be polymorphic in -> this : 2
polymorphic in this -> is : 1
polymorphic in this -> shows : 1
in this is -> a : 1
in this is -> when : 2
in this is -> typically : 1
is a must -> be : 1
a must be -> a : 1
a pointer if -> the : 2
type of does -> not : 2
of does not -> match : 1
of does not -> a : 1
does not match -> not : 1
does not match -> the : 2
does not match -> any : 1
does not match -> that : 2
does not match -> or : 1
not match not -> the : 1
match not the -> same : 1
not the same -> as : 2
not the same -> value : 1
not the same -> character : 1
same as or -> derived : 1
same as or -> considering : 1
as or derived -> from : 1
or derived from -> a : 1
derived from a -> null : 1
from a null -> pointer : 1
value is the -> value : 3
value is the -> loop : 1
value is the -> is : 1
value is the -> end : 1
value is the -> size : 1
value is the -> fractional : 1
value is the -> real : 3
value is the -> number : 13
value is the -> actual : 2
value is the -> return : 10
value is the -> same : 4
value is the -> character : 1
value is the -> new : 1
value is the -> previous : 1
value is the -> stream : 1
value is the -> term : 1
value is the -> maximum : 1
value is the -> pointer : 1
value is the -> iterator : 1
value is the -> pointing : 1
value is the -> current : 1
value of cast -> to : 1
of cast to -> is : 1
cast to is -> if : 1
to is if -> is : 1
is if is -> a : 2
is if is -> the : 6
is if is -> not : 8
is if is -> set : 1
is if is -> reached : 1
is if is -> is : 1
a null a -> null : 1
a null a -> reference : 1
null a null -> pointer : 1
null pointer is -> is : 1
null pointer is -> and : 1
null pointer is -> not : 1
null pointer is -> function : 2
null pointer is -> type : 1
null pointer is -> in : 2
null pointer is -> returned : 1
pointer is is -> an : 1
is is an -> object : 1
is is an -> in : 1
an object and -> is : 1
object and is -> a : 1
is a is -> cast : 1
is a is -> not : 1
is a is -> at : 2
a is cast -> to : 1
cast to if -> the : 1
does not a -> exception : 1
not a exception -> is : 1
a exception is -> can : 1
exception is can -> also : 1
is can also -> cast : 1
can also cast -> from : 1
can also cast -> to : 1
also cast from -> a : 1
cast from a -> derived : 3
from a derived -> class : 3
from a derived -> to : 1
derived class to -> a : 5
derived class to -> an : 1
derived class to -> the : 1
derived class to -> call : 1
derived class to -> initialize : 1
class to a -> base : 4
class to a -> pointer : 1
to a base -> which : 1
to a base -> and : 1
to a base -> in : 2
to a base -> you : 1
to a base -> class : 2
to a base -> can : 1
to a base -> position : 1
a base which -> is : 1
base which is -> the : 1
same as an -> ordinary : 1
as an ordinary -> implicit : 1
as an ordinary -> such : 1
an ordinary implicit -> the : 1
ordinary implicit the -> type : 1
implicit the type -> does : 1
in this shows -> some : 1
in this shows -> a : 1
this shows some -> uses : 1
this shows some -> typical : 1
shows some uses -> of : 9
some uses of -> class : 3
some uses of -> the : 1
some uses of -> pointers : 1
some uses of -> int : 1
some uses of -> static : 1
some uses of -> type : 1
some uses of -> uses : 1
uses of class -> base : 3
of class base -> virtual : 2
of class base -> class : 1
class base virtual -> class : 2
class base virtual -> virtual : 1
base virtual class -> derived : 2
virtual class derived -> public : 2
class derived public -> base : 9
derived public base -> class : 2
derived public base -> enum : 1
derived public base -> int : 1
derived public base -> virtual : 2
derived public base -> void : 2
derived public base -> constructs : 1
public base class -> public : 1
public base class -> other : 1
base class public -> derived : 1
class public derived -> class : 1
public derived class -> other : 1
derived class other -> public : 1
class other public -> base : 2
other public base -> int : 1
other public base -> enum : 1
public base int -> b : 1
public base int -> the : 1
base int b -> new : 1
int b new -> null : 1
int b new -> ok : 1
int b new -> derived : 1
b new null -> pointer : 1
new null pointer -> ok : 1
null pointer ok -> null : 1
pointer ok null -> pointer : 1
ok null pointer -> d : 1
null pointer d -> new : 1
pointer d new -> b : 1
d new b -> b : 2
new b b -> but : 2
b b but -> is : 1
b b but -> unnecessary : 1
b but is -> to : 1
but is to -> when : 1
is to when -> using : 1
to when using -> no : 1
when using no -> conversion : 1
using no conversion -> functions : 1
no conversion functions -> or : 1
conversion functions or -> constructors : 1
functions or constructors -> are : 1
or constructors are -> casting : 1
constructors are casting -> to : 1
are casting to -> a : 1
casting to a -> reference : 1
a reference yields -> an : 1
reference yields an -> it : 1
yields an it -> yields : 1
an it yields -> an : 1
it yields an -> only : 1
yields an only -> the : 1
an only the -> following : 1
only the following -> conversions : 1
the following conversions -> are : 1
following conversions are -> pointer : 1
conversions are pointer -> can : 1
are pointer can -> be : 1
pointer can be -> converted : 5
pointer can be -> used : 2
pointer can be -> but : 1
an the integer -> must : 1
the integer must -> be : 1
integer must be -> large : 1
must be large -> enough : 5
be large enough -> to : 7
large enough to -> hold : 18
large enough to -> accommodate : 1
enough to hold -> the : 12
enough to hold -> a : 1
enough to hold -> all : 2
enough to hold -> returning : 3
to hold the -> which : 1
to hold the -> casting : 1
to hold the -> if : 1
to hold the -> sequence : 1
to hold the -> concatenated : 3
to hold the -> entire : 5
hold the which -> integer : 1
the which integer -> type : 1
which integer type -> you : 1
integer type you -> should : 1
should use is -> as : 1
use is as -> is : 1
is as is -> the : 1
is the mapping -> from : 1
the mapping from -> pointer : 1
mapping from pointer -> to : 1
from pointer to -> integer : 1
pointer to integer -> or : 1
to integer or -> enumerated : 1
a the mapping -> is : 1
mapping is casting -> from : 1
is casting from -> a : 1
casting from a -> pointer : 1
an integer back -> to : 1
integer back to -> the : 1
back to the -> original : 5
to the original -> pointer : 3
to the original -> type : 1
to the original -> the : 2
to the original -> file : 1
to the original -> because : 1
the original pointer -> type : 3
the original pointer -> provided : 1
the original pointer -> object : 1
the original pointer -> pointer : 1
the original pointer -> shows : 1
original pointer type -> yields : 1
original pointer type -> produces : 2
pointer type yields -> the : 1
type yields the -> original : 1
yields the original -> pointer : 1
yields the original -> the : 1
yields the original -> in : 1
original pointer provided -> the : 1
pointer provided the -> integer : 1
provided the integer -> type : 1
the integer type -> is : 1
integer type is -> large : 1
type is large -> an : 1
is large an -> integer : 1
large an integer -> constant : 1
an integer constant -> of : 1
an integer constant -> that : 1
integer constant of -> value : 1
constant of value -> to : 1
of value to -> a : 2
a pointer always -> produces : 1
pointer always produces -> a : 1
always produces a -> null : 1
produces a null -> pointer : 1
null pointer casting -> any : 1
pointer casting any -> other : 1
casting any other -> integer : 1
any other integer -> expression : 1
any other integer -> a : 1
other integer expression -> of : 1
integer expression of -> value : 1
expression of value -> to : 1
a pointer produces -> an : 1
pointer produces an -> which : 1
produces an which -> may : 1
an which may -> or : 1
which may or -> may : 1
may or may -> not : 4
or may not -> be : 2
or may not -> set : 1
or may not -> actually : 1
not be a -> null : 1
not be a -> a : 1
be a null -> function : 1
be a null -> pointer : 3
be a null -> in : 1
be a null -> you : 1
a null function -> pointer : 1
null function pointer -> can : 1
function pointer can -> be : 1
function pointer of -> a : 1
pointer of a -> different : 2
of a different -> calling : 1
of a different -> using : 1
of a different -> see : 1
a different calling -> such : 1
a different calling -> for : 2
different calling such -> a : 1
calling such a -> function : 1
such a function -> results : 1
such a function -> no : 1
such a function -> is : 1
such a function -> as : 1
a function results -> in : 1
function results in -> undefined : 1
function results in -> macro : 1
in undefined converting -> back : 2
undefined converting back -> to : 2
converting back to -> the : 2
converting back to -> a : 1
pointer type produces -> the : 2
type produces the -> original : 3
produces the original -> pointer : 3
produces the original -> and : 1
produces the original -> null : 1
original pointer object -> pointer : 1
pointer object pointer -> can : 1
object pointer can -> be : 1
an object pointer -> of : 1
an object pointer -> to : 1
object pointer of -> a : 1
a different using -> such : 1
a different using -> the : 1
different using such -> an : 1
using such an -> object : 1
such an object -> results : 1
an object results -> in : 1
object results in -> undefined : 1
original pointer pointer -> to : 1
pointer pointer to -> a : 1
a member can -> be : 1
different using the -> pointer : 1
using the pointer -> to : 1
the pointer to -> a : 3
the pointer to -> the : 5
the pointer to -> return : 1
a member has -> undefined : 1
member has undefined -> except : 1
has undefined except -> that : 1
undefined except that -> casting : 1
except that casting -> a : 1
that casting a -> pointer : 1
casting a pointer -> to : 3
data member to -> a : 1
data member to -> the : 2
member to a -> different : 1
a different pointer -> to : 1
a different pointer -> casting : 1
a different pointer -> and : 1
different pointer to -> a : 1
data member and -> back : 1
data member and -> nested : 1
member and back -> to : 1
and back to -> the : 1
the original type -> produces : 1
original type produces -> the : 1
the original and -> casting : 1
the original and -> back : 1
original and casting -> a : 1
and casting a -> pointer : 1
a different member -> function : 1
different member function -> and : 1
member function and -> back : 1
member function and -> static : 1
member function and -> a : 1
function and back -> produces : 1
and back produces -> the : 2
back produces the -> original : 2
the original null -> pointer : 1
original null pointer -> constant : 1
pointer constant or -> value : 1
constant or value -> can : 1
or value can -> be : 1
null pointer of -> the : 2
pointer of the -> target : 1
pointer of the -> destination : 1
the target reference -> can : 1
target reference can -> be : 1
can be cast -> in : 1
can be cast -> to : 4
can be cast -> only : 3
be cast in -> the : 1
cast in the -> same : 1
as a pointer -> that : 1
as a pointer -> or : 1
as a pointer -> in : 1
as a pointer -> to : 1
pointer that the -> pointer : 1
that the pointer -> is : 1
pointer is that -> casting : 1
is that casting -> is : 1
that casting is -> just : 1
casting is just -> like : 1
is just like -> casting : 1
is just like -> the : 1
just like casting -> has : 1
like casting has -> the : 1
casting has the -> following : 1
has the following -> function : 1
has the following -> form : 1
has the following -> to : 1
has the following -> bitwise : 3
has the following -> the : 2
has the following -> and : 1
has the following -> fourth : 1
has the following -> real : 1
has the following -> d : 1
has the following -> three : 1
the following function -> pointer : 1
the following function -> specifiers : 1
the following function -> this : 1
the following function -> refers : 1
following function pointer -> cannot : 1
function pointer cannot -> be : 2
pointer cannot be -> converted : 3
pointer cannot be -> but : 1
cannot be converted -> to : 7
object or an -> object : 1
or an object -> pointer : 1
object pointer to -> a : 1
a function member -> function : 1
function member function -> pointer : 1
function member function -> that : 1
member function pointer -> cannot : 1
or a data -> member : 1
data member pointer -> to : 1
member pointer to -> a : 1
member function member -> pointer : 1
member function member -> function : 1
function member pointer -> cannot : 1
member pointer cannot -> be : 1
to a nonmember -> or : 1
a nonmember or -> a : 1
nonmember or a -> nonmember : 1
or a nonmember -> pointer : 1
or a nonmember -> the : 1
a nonmember pointer -> to : 1
nonmember pointer to -> a : 1
a member target -> type : 1
member target type -> must : 1
target type must -> not : 1
type must not -> cast : 1
must not cast -> away : 1
not cast away -> need : 1
cast away need -> for : 1
away need for -> is : 1
need for is -> rare : 1
for is rare -> in : 1
is rare in -> an : 1
rare in an -> ordinary : 1
in an ordinary -> shows : 1
in an ordinary -> references : 1
an ordinary shows -> some : 1
ordinary shows some -> uses : 1
uses of the -> first : 1
uses of the -> the : 1
uses of the -> form : 1
first use reinterprets -> the : 1
use reinterprets the -> representation : 1
reinterprets the representation -> of : 1
representation of a -> as : 1
representation of a -> this : 1
representation of a -> ipi : 1
representation of a -> complex : 1
representation of a -> date : 1
representation of a -> wide : 2
representation of a -> numeric : 1
of a as -> an : 1
of a as -> a : 1
a as an -> to : 1
as an to -> show : 1
an to show -> the : 1
to show the -> underlying : 1
show the underlying -> representation : 1
the underlying representation -> of : 1
underlying representation of -> a : 1
of a this -> use : 1
a this use -> is : 1
this use is -> and : 1
this use is -> use : 1
use is and -> requires : 1
is and requires -> to : 1
and requires to -> be : 1
requires to be -> greater : 1
to be greater -> than : 2
be greater than -> or : 1
be greater than -> if : 1
greater than or -> equal : 6
greater than or -> negative : 6
than or equal -> to : 26
or equal to -> the : 5
or equal to -> if : 1
or equal to -> expression : 1
or equal to -> its : 1
or equal to -> macro : 13
or equal to -> function : 2
or equal to -> and : 1
or equal to -> that : 2
equal to the -> second : 1
equal to the -> difference : 1
equal to the -> a : 1
equal to the -> limits : 1
equal to the -> elements : 1
equal to the -> return : 2
equal to the -> macro : 1
equal to the -> data : 1
equal to the -> product : 1
to the second -> use : 1
to the second -> form : 1
to the second -> sequence : 1
to the second -> argument : 1
to the second -> version : 1
the second use -> is : 1
second use is -> a : 1
use is a -> simple : 1
is a simple -> conversion : 1
is a simple -> declaration : 1
is a simple -> storage : 1
is a simple -> object : 1
is a simple -> example : 1
a simple conversion -> from : 1
simple conversion from -> a : 1
from a function -> pointer : 1
from a function -> to : 1
function pointer to -> an : 1
integer to print -> the : 1
to print the -> address : 1
to print the -> one : 1
print the address -> in : 1
the address in -> a : 1
the address in -> of : 1
address in a -> specific : 1
in a specific -> it : 1
in a specific -> base : 1
a specific it -> requires : 1
a specific it -> is : 1
specific it requires -> that : 1
it requires that -> an : 1
requires that an -> be : 1
that an be -> large : 1
an be large -> enough : 1
to hold a -> function : 1
to hold a -> sequence : 1
hold a function -> int : 1
a function int -> return : 1
a function int -> struct : 1
a function int -> memfunc : 1
function int return -> int : 1
return int using -> namespace : 3
return int using -> cout : 1
int using namespace -> float : 1
int using namespace -> string : 2
int using namespace -> if : 1
int using namespace -> no : 1
int using namespace -> cout : 1
int using namespace -> try : 1
int using namespace -> use : 1
int using namespace -> stat : 1
int using namespace -> int : 1
int using namespace -> for : 2
int using namespace -> const : 2
using namespace float -> pi : 1
namespace float pi -> int : 1
float pi int -> print : 1
pi int print -> numbers : 1
int print numbers -> in : 1
print numbers in -> pretty : 1
numbers in pretty -> cout : 1
in pretty cout -> showbase : 1
pretty cout showbase -> hex : 1
cout showbase hex -> show : 1
showbase hex show -> the : 1
hex show the -> representation : 1
show the representation -> of : 1
of a ipi -> cout : 1
a ipi cout -> ipi : 1
ipi cout ipi -> show : 1
cout ipi show -> the : 1
ipi show the -> address : 1
show the address -> of : 1
address of cout -> to : 1
of cout to -> using : 1
cout to using -> a : 1
to using a -> standard : 2
using a standard -> or : 1
using a standard -> conversion : 1
using a standard -> the : 1
a standard or -> as : 1
a standard or -> a : 1
standard or as -> though : 1
or as though -> you : 1
as though you -> declared : 1
though you declared -> a : 1
you declared a -> temporary : 1
declared a temporary -> and : 1
a temporary and -> used : 1
temporary and used -> the : 1
used the value -> of : 1
value of in -> place : 1
of in place -> of : 1
in place of -> the : 1
in place of -> and : 1
cast the result -> is : 1
lvalue if is -> a : 1
lvalue if is -> an : 1
is a otherwise -> the : 1
a otherwise the -> result : 1
otherwise the result -> is : 2
an a cannot -> cast : 1
away the rules -> of : 1
the rules of -> permitted : 1
the rules of -> overloading : 1
the rules of -> name : 1
the rules of -> a : 3
the rules of -> the : 1
rules of permitted -> conversions : 1
of permitted conversions -> can : 1
permitted conversions can -> be : 1
conversions can be -> in : 1
case the result -> of : 1
the result of -> is : 1
the result of -> an : 2
the result of -> the : 11
the result of -> calling : 5
the result of -> a : 3
the result of -> normal : 1
the result of -> converting : 1
the result of -> any : 2
the result of -> applying : 1
the result of -> reader : 1
result of is -> lvalue : 1
of is lvalue -> can : 1
is lvalue can -> be : 1
a derived provided -> a : 1
derived provided a -> standard : 1
provided a standard -> conversion : 1
a standard conversion -> exists : 1
a standard conversion -> in : 1
a standard conversion -> is : 1
a standard conversion -> sequence : 2
standard conversion exists -> from : 1
conversion exists from -> a : 1
exists from a -> pointer : 1
to the base -> the : 2
to the base -> nor : 1
to the base -> level : 1
to the base -> t : 1
to the base -> as : 1
the base the -> base : 1
the base the -> expression : 1
the base the -> default : 1
the base the -> access : 1
the base the -> standard : 1
base the base -> class : 1
base class must -> not : 1
base class must -> be : 1
base class must -> also : 1
class must not -> be : 1
not be if -> is : 1
be if is -> not : 1
be if is -> is : 1
is not actually -> a : 1
not actually a -> subobject : 1
not actually a -> match : 1
actually a subobject -> of : 1
a subobject of -> the : 1
subobject of the -> behavior : 1
behavior is to -> learn : 1
behavior is to -> avoid : 1
behavior is to -> call : 1
behavior is to -> do : 8
behavior is to -> its : 1
is to learn -> how : 1
to learn how -> to : 6
to learn how -> it : 1
to learn how -> and : 1
learn how to -> make : 1
learn how to -> access : 1
learn how to -> obtain : 2
learn how to -> register : 2
how to make -> pointer : 1
to make pointer -> can : 1
make pointer can -> be : 1
a pointer in -> the : 3
manner described for -> class : 1
described for class -> pointer : 1
for class pointer -> to : 1
class pointer to -> a : 1
of a derived -> class : 3
of a derived -> especially : 1
of a base -> class : 4
of a base -> for : 6
of a base -> other : 1
base class if -> there : 1
class if there -> is : 1
is a standard -> conversion : 1
is a standard -> suitable : 1
is a standard -> file : 2
is a standard -> output : 2
is a standard -> input : 2
is a standard -> container : 2
is a standard -> sequence : 1
standard conversion in -> the : 1
conversion in the -> other : 1
conversion in the -> the : 1
in the other -> the : 2
in the other -> types : 1
other the target -> class : 1
target class an -> ancestor : 1
class an ancestor -> must : 1
an ancestor must -> contain : 1
ancestor must contain -> the : 1
must contain the -> original : 1
contain the original -> arithmetic : 1
the original arithmetic -> conversions : 1
original arithmetic conversions -> can : 1
arithmetic conversions can -> work : 1
conversions can work -> in : 1
can work in -> can : 1
work in can -> be : 1
in can be -> cast : 1
in can be -> used : 1
in can be -> any : 1
cast to integers -> can : 1
to integers can -> be : 1
integers can be -> cast : 1
cast to can -> be : 1
cast to other -> pointer : 1
to other pointer -> can : 1
other pointer can -> be : 1
to any object -> converting : 1
to any object -> can : 1
any object converting -> a : 1
object converting a -> pointer : 1
converting a pointer -> to : 2
as the original -> and : 1
as the original -> performance : 1
as the original -> but : 1
original and back -> produces : 1
original pointer shows -> some : 1
pointer shows some -> uses : 1
class base class -> derived : 2
class base class -> for : 9
base class derived -> public : 3
base class other -> public : 1
public base enum -> color : 2
base enum color -> black : 2
color black enum -> logical : 1
black enum logical -> maybe : 1
enum logical maybe -> int : 1
logical maybe int -> b : 1
maybe int b -> new : 1
b new ok -> undefined : 1
new ok undefined -> behavior : 1
ok undefined behavior -> d : 1
undefined behavior d -> new : 1
behavior d new -> b : 1
b but unnecessary -> color : 1
but unnecessary color -> c : 1
unnecessary color c -> int : 1
color c int -> i : 2
c int i -> type : 1
c int i -> bound : 1
int i type -> information : 1
i type information -> for : 1
type information for -> the : 2
type information for -> as : 1
information for the -> type : 1
information for the -> and : 1
information for the -> updating : 1
information for the -> published : 1
type of without -> evaluating : 1
of without evaluating -> the : 1
without evaluating the -> type : 1
without evaluating the -> see : 1
without evaluating the -> right : 2
evaluating the type -> information : 1
the type information -> is : 3
the type information -> for : 1
the type information -> includes : 1
type information is -> an : 1
type information is -> for : 2
information is an -> lvalue : 1
an lvalue of -> type : 3
an lvalue of -> a : 1
an lvalue of -> that : 1
lvalue of type -> an : 2
lvalue of type -> and : 1
of type an -> type : 1
of type an -> error : 1
of type an -> element : 1
type an type -> that : 1
type an type -> conversion : 1
an type that -> derives : 1
an type that -> represents : 1
an type that -> is : 1
type that derives -> from : 3
that derives from -> see : 1
that derives from -> the : 1
that derives from -> or : 2
derives from see -> in : 1
from see in -> for : 1
in for information -> about : 6
information about this -> is : 1
information about this -> use : 1
about this is -> an : 1
this is an -> lvalue : 1
lvalue of a -> polymorphic : 1
of a polymorphic -> type : 1
of a polymorphic -> the : 1
a polymorphic type -> class : 1
polymorphic type class -> with : 1
type class with -> at : 1
class with at -> least : 2
with at least -> one : 3
virtual the type -> information : 1
information is for -> the : 2
for the class -> of : 1
for the class -> you : 1
for the class -> declaration : 1
for the class -> template : 1
for the class -> and : 1
for the class -> class : 6
for the class -> it : 1
for the class -> throws : 1
the class of -> if : 1
the class of -> the : 2
class of if -> is : 1
of if is -> a : 1
of if is -> an : 1
of if is -> the : 1
is a dereference -> of : 1
a dereference of -> a : 1
dereference of a -> null : 1
of a null -> is : 1
a null is -> is : 1
a null is -> also : 1
a null is -> set : 1
null is is -> not : 1
is is not -> an : 1
is is not -> and : 1
is is not -> the : 1
is is not -> itself : 2
not an or -> the : 1
not the type -> information : 1
for the static -> type : 1
for the static -> data : 1
the static type -> of : 2
the static type -> does : 1
the static type -> to : 1
the static type -> and : 1
the static type -> used : 1
static type of -> the : 1
static type of -> member : 1
static type of -> b : 1
of the type -> information : 1
of the type -> cast : 1
of the type -> of : 2
of the type -> are : 1
of the type -> short : 1
of the type -> is : 1
of the type -> holds : 1
information for as -> described : 1
for as described -> for : 1
as described for -> shows : 1
as described for -> more : 1
described for shows -> some : 1
for shows some -> uses : 1
black the actual -> output : 1
the actual output -> is : 1
actual output is -> but : 1
output is but -> should : 1
is but should -> reflect : 1
but should reflect -> the : 1
should reflect the -> types : 1
reflect the types -> shown : 1
the types shown -> in : 1
types shown in -> the : 1
in the int -> b : 1
in the int -> x : 1
the int b -> new : 1
b new derived -> base : 1
new derived base -> d : 1
derived base d -> new : 1
base d new -> derived : 1
d new derived -> derived : 1
new derived derived -> color : 1
derived derived color -> color : 1
derived color color -> expression : 1
color color expression -> uses : 1
color expression uses -> a : 1
expression uses a -> unary : 1
uses a unary -> prefix : 1
a unary prefix -> which : 1
unary prefix which -> must : 1
prefix which must -> be : 1
which must be -> of : 3
which must be -> cast : 1
which must be -> obtained : 1
which must be -> the : 1
which must be -> pointing : 4
which must be -> one : 1
must be of -> arithmetic : 2
must be of -> type : 2
be of arithmetic -> or : 2
of arithmetic or -> pointer : 2
arithmetic or pointer -> and : 1
arithmetic or pointer -> type : 1
or pointer and -> returns : 1
pointer and returns -> the : 1
pointer and returns -> it : 1
returns the new -> value : 2
returns the new -> and : 1
returns the new -> the : 2
new value as -> an : 2
equivalent to unless -> is : 1
to unless is -> of : 1
unless is of -> type : 1
of type in -> which : 1
of type in -> the : 1
of type in -> and : 1
of type in -> every : 1
type in which -> case : 1
type in which -> the : 1
case the expression -> is : 1
to the behavior -> for : 1
to the behavior -> is : 1
the behavior for -> is : 1
the behavior for -> input : 1
the behavior for -> certain : 1
the behavior for -> a : 1
behavior for is -> which : 1
behavior for is -> to : 1
for is which -> must : 1
is which must -> be : 1
or pointer type -> and : 1
pointer type and -> returns : 1
type and returns -> the : 1
type and returns -> unmodifiable : 1
type and returns -> a : 2
type and returns -> true : 4
equivalent to and -> returns : 6
equivalent to and -> the : 1
equivalent to and -> their : 1
to and returns -> an : 7
to and returns -> following : 1
to and returns -> if : 1
to and returns -> the : 1
an lvalue for -> the : 1
lvalue for the -> object : 1
that points if -> has : 1
that points if -> is : 1
points if has -> type : 1
if has type -> the : 1
if has type -> or : 1
if has type -> see : 1
type the expression -> has : 1
the expression has -> type : 2
the expression has -> only : 1
expression has type -> any : 1
expression has type -> with : 1
has type any -> the : 1
type any the -> address : 1
any the address -> of : 1
address of or -> if : 1
of or if -> has : 1
or if has -> type : 1
or if has -> no : 2
type or if -> is : 1
static member of -> type : 2
member of type -> the : 1
member of type -> whose : 1
member of type -> in : 1
type the result -> is : 1
type the result -> has : 2
is the which -> is : 1
is the which -> strictly : 1
an rvalue of -> type : 5
an rvalue of -> static : 1
an rvalue of -> fundamental : 1
of type pointer -> to : 1
type pointer to -> if : 1
pointer to if -> is : 1
nonstatic member of -> class : 1
member of class -> the : 1
member of class -> that : 1
member of class -> type : 2
class the result -> type : 1
of class that -> a : 1
class that a -> pointer : 1
that a pointer -> to : 2
that a pointer -> has : 1
a member is -> formed : 1
a member is -> defined : 1
member is formed -> only : 1
is formed only -> by : 1
formed only by -> applying : 1
only by applying -> the : 1
by applying the -> operand : 1
by applying the -> assignment : 2
applying the operand -> to : 1
the operand to -> a : 1
operand to a -> qualified : 1
a qualified even -> in : 1
qualified even in -> the : 1
even in the -> scope : 1
even in the -> the : 1
a is not -> a : 2
a is not -> nor : 1
not a pointer -> to : 1
to a but -> an : 1
to a but -> the : 2
a but an -> ordinary : 1
but an ordinary -> pointer : 1
an ordinary pointer -> to : 1
an ordinary pointer -> can : 1
ordinary pointer to -> an : 1
to an cannot -> take : 1
an cannot take -> the : 1
cannot take the -> address : 3
cannot take the -> size : 1
of a to -> take : 1
of a to -> a : 2
of a to -> create : 2
a to take -> the : 1
to take the -> address : 1
address of an -> overloaded : 3
address of an -> ordinary : 1
address of an -> allocated : 1
address of an -> but : 1
address of an -> the : 1
of an overloaded -> the : 1
of an overloaded -> shows : 1
of an overloaded -> long : 1
an overloaded the -> context : 1
overloaded the context -> must : 1
the context must -> make : 1
context must make -> it : 1
must make it -> clear : 1
it clear which -> function : 1
clear which function -> you : 1
which function you -> the : 1
function you the -> shows : 1
you the shows -> uses : 1
the shows uses -> of : 1
shows uses of -> the : 1
the the demo -> int : 1
the demo int -> static : 1
demo int static -> int : 1
int static int -> int : 1
int int return -> int : 2
int int return -> a : 1
int int return -> x : 1
int int return -> is : 1
int int return -> rect : 1
int int return -> operator : 1
int return a -> double : 1
return a double -> double : 1
a double double -> return : 1
double double return -> a : 1
double double return -> function : 1
double return a -> int : 1
return a int -> demo : 1
a int demo -> int : 1
int demo int -> int : 1
demo int int -> int : 1
demo int int -> union : 1
int int local -> int : 1
int local int -> p : 1
local int p -> i : 1
int p i -> func : 1
p i func -> int : 1
i func int -> adder : 1
func int adder -> return : 1
int adder return -> which : 1
adder return which -> must : 1
return which must -> have : 1
which must have -> or : 1
which must have -> arithmetic : 1
which must have -> integral : 1
which must have -> been : 1
must have or -> pointer : 3
have or pointer -> the : 1
have or pointer -> for : 2
or pointer the -> usual : 2
pointer the usual -> type : 1
pointer the usual -> conversions : 3
the usual type -> promotions : 2
usual type promotions -> take : 2
type promotions take -> and : 2
promotions take and -> the : 2
take and the -> result : 2
and the result -> type : 3
and the result -> is : 4
and the result -> of : 1
and the result -> cannot : 1
is the promoted -> the : 3
is the promoted -> type : 1
the promoted the -> result : 3
promoted the result -> is : 3
is an which -> must : 1
is an which -> inserts : 1
an which must -> have : 1
must have arithmetic -> or : 1
have arithmetic or -> enumerated : 1
have arithmetic or -> enumeration : 1
arithmetic or enumerated -> the : 1
enumerated the usual -> type : 1
result is in -> which : 1
result is in -> the : 2
is in which -> is : 6
is in which -> each : 1
is in which -> means : 1
is in which -> ranges : 1
is in which -> case : 4
in the result -> the : 1
in the result -> an : 1
in the result -> set : 1
the result the -> bitwise : 1
the result the -> sorted : 1
the result the -> relative : 2
the result the -> source : 3
the result the -> result : 1
result the bitwise -> complement : 1
the bitwise complement -> of : 1
bitwise complement of -> which : 1
complement of which -> must : 1
of which must -> have : 1
must have integral -> or : 2
have integral or -> enumeration : 1
have integral or -> enumerated : 2
integral or enumeration -> the : 4
or enumeration the -> type : 1
or enumeration the -> usual : 2
or enumeration the -> result : 2
or enumeration the -> implicit : 1
or enumeration the -> address : 1
enumeration the type -> is : 1
type is promoted -> according : 1
is promoted according -> to : 1
promoted according to -> the : 1
to the usual -> and : 1
to the usual -> rules : 2
usual and the -> result : 1
is an every -> zero : 1
an every zero -> bit : 1
every zero bit -> in : 1
zero bit in -> is : 1
bit in is -> converted : 1
in is converted -> to : 1
to a one -> and : 1
a one and -> every : 1
one and every -> one : 1
and every one -> bit : 1
every one bit -> is : 1
one bit is -> converted : 1
bit is converted -> to : 2
to a zero -> the : 1
a zero the -> ambiguous : 1
zero the ambiguous -> case : 1
the ambiguous case -> of : 1
ambiguous case of -> in : 1
case of in -> which : 1
of in which -> is : 3
of in which -> each : 5
of in which -> depends : 1
of in which -> the : 3
a class is -> interpreted : 1
a class is -> usually : 1
a class is -> named : 1
a class is -> a : 2
class is interpreted -> as : 1
is interpreted as -> the : 9
is interpreted as -> a : 6
is interpreted as -> an : 1
as the complement -> not : 1
the complement not -> the : 1
complement not the -> destructor : 1
not the destructor -> of : 1
the destructor of -> if : 1
destructor of if -> does : 1
of if does -> not : 1
if does not -> have : 6
if does not -> appear : 6
if does not -> support : 1
not have an -> overloaded : 1
not have an -> exception : 2
have an overloaded -> or : 1
have an overloaded -> version : 2
an overloaded or -> an : 1
overloaded or an -> implicit : 1
or an implicit -> conversion : 1
an implicit conversion -> to : 1
an implicit conversion -> in : 1
implicit conversion to -> an : 1
conversion to an -> integral : 1
to an integral -> or : 2
to an integral -> function : 1
to an integral -> to : 1
an integral or -> enumerated : 5
an integral or -> enumeration : 1
enumerated the expression -> results : 1
the expression results -> in : 1
expression results in -> an : 1
in an to -> force : 1
an to force -> a : 1
to force a -> reference : 1
to force a -> particular : 1
force a reference -> to : 1
reference to use -> a : 1
use a member -> reference : 1
a member reference -> or : 1
member reference or -> a : 1
reference or a -> qualified : 1
qualified name the -> logical : 1
name the logical -> negation : 1
the logical negation -> of : 6
logical negation of -> after : 1
logical negation of -> the : 1
logical negation of -> a : 2
logical negation of -> another : 2
logical negation of -> see : 1
logical negation of -> class : 1
negation of after -> converting : 1
of after converting -> it : 1
after converting it -> to : 1
converting it to -> the : 1
to the result -> is : 2
to the result -> if : 1
of type if -> is : 1
of type if -> the : 1
type if is -> the : 1
type if is -> a : 1
is the size -> in : 1
is the size -> of : 5
is the size -> you : 1
the size in -> bytes : 1
size in bytes -> of : 1
in bytes of -> or : 1
bytes of or -> the : 1
of or the -> type : 1
of or the -> parameter : 1
of or the -> is : 1
type of evaluating -> by : 1
of evaluating by -> you : 1
evaluating by you -> cannot : 1
by you cannot -> take : 1
you cannot take -> the : 2
take the size -> of : 1
a a or -> an : 1
a a or -> a : 1
or an incomplete -> the : 1
an incomplete the -> size : 1
incomplete the size -> of : 1
reference is the -> size : 1
size of the -> referenced : 1
size of the -> derived : 1
size of the -> base : 1
size of the -> object : 1
size of the -> integer : 1
size of the -> rightmost : 1
size of the -> next : 1
size of the -> allocated : 1
size of the -> inserting : 1
size of the -> largest : 5
size of the -> deque : 1
size of the -> if : 1
size of the -> list : 1
size of the -> memory : 1
size of the -> string : 1
size of the -> character : 1
size of the -> you : 2
size of the -> array : 1
of the referenced -> operator : 1
of the referenced -> the : 2
the referenced operator -> always : 1
referenced operator always -> returns : 1
operator always returns -> a : 1
always returns a -> value : 1
returns a value -> greater : 1
returns a value -> that : 1
a value greater -> than : 1
value greater than -> zero : 1
value greater than -> that : 3
value greater than -> for : 1
greater than zero -> for : 1
greater than zero -> if : 1
than zero for -> a : 1
zero for a -> class : 1
for a class -> or : 1
for a class -> can : 1
for a class -> argument : 1
for a class -> using : 1
for a class -> see : 1
class or object -> of : 1
or object of -> class : 1
object of class -> the : 3
object of class -> a : 2
object of class -> type : 3
object of class -> for : 1
object of class -> objects : 1
object of class -> if : 1
object of class -> see : 1
class the size -> of : 1
of a subobject -> within : 1
a subobject within -> a : 1
subobject within a -> object : 1
within a object -> can : 1
within a object -> is : 1
a object can -> be : 1
be so the -> compiler : 1
be so the -> call : 1
be so the -> function : 1
compiler is not -> necessarily : 1
compiler is not -> required : 2
not necessarily wasting -> you : 1
necessarily wasting you -> can : 1
wasting you can -> see : 1
you can see -> this : 1
you can see -> in : 4
you can see -> how : 2
can see this -> in : 1
see this in -> the : 1
this in the -> sizeof : 1
this in the -> other : 1
in the sizeof -> which : 1
in the sizeof -> class : 1
the sizeof which -> shows : 1
sizeof which shows -> that : 1
which shows that -> the : 1
shows that the -> size : 1
that the size -> of : 1
of the derived -> class : 2
of the derived -> classes : 1
of the derived -> as : 1
the derived class -> is : 2
the derived class -> function : 1
the derived class -> has : 1
the derived class -> hides : 2
the derived class -> might : 1
the derived class -> if : 1
the derived class -> are : 1
the derived class -> but : 1
the derived class -> any : 1
the derived class -> declares : 1
the derived class -> can : 2
the derived class -> must : 1
the derived class -> for : 1
the derived class -> does : 1
derived class is -> the : 1
derived class is -> free : 1
of the base -> the : 1
of the base -> even : 1
of the base -> if : 1
of the base -> or : 1
of the base -> class : 3
of the base -> character : 1
of the base -> position : 1
base the expression -> result : 1
the sizeof class -> base : 1
sizeof class base -> class : 1
base int the -> values : 1
int the values -> actually : 1
the values actually -> printed : 1
values actually printed -> depend : 1
actually printed depend -> on : 1
printed depend on -> the : 1
on the but -> many : 1
the but many -> common : 1
but many common -> implementations : 1
many common implementations -> print : 1
common implementations print -> the : 1
implementations print the -> values : 1
print the values -> using : 1
print the values -> that : 1
the values using -> namespace : 1
values using namespace -> cout : 1
namespace cout prints -> cout : 1
cout prints base -> cout : 1
prints base cout -> prints : 1
base cout prints -> derived : 1
cout prints derived -> cout : 1
prints derived cout -> prints : 1
derived cout prints -> and : 1
cout prints and -> initializes : 1
prints and initializes -> a : 1
and initializes a -> dynamic : 1
initializes a dynamic -> object : 1
a dynamic object -> or : 4
dynamic object or -> array : 4
object or array -> of : 4
or array of -> the : 1
or array of -> objects : 1
or array of -> pod : 1
or array of -> delete : 1
or array of -> new : 1
array of the -> expression : 1
array of the -> base : 1
of the expression -> first : 1
of the expression -> is : 1
of the expression -> depends : 1
of the expression -> that : 1
the expression first -> calls : 1
expression first calls -> an : 1
first calls an -> allocation : 1
calls an allocation -> function : 1
an allocation function -> to : 1
allocation function to -> allocate : 1
allocation function to -> the : 1
function to allocate -> it : 1
function to allocate -> a : 1
function to allocate -> the : 1
to allocate it -> then : 1
to allocate it -> calls : 1
allocate it then -> constructs : 1
it then constructs -> the : 1
then constructs the -> object : 1
constructs the object -> in : 1
the object in -> the : 1
the object in -> this : 1
the object in -> a : 1
object in the -> allocated : 1
object in the -> latter : 1
object in the -> order : 1
object in the -> perhaps : 1
in the allocated -> a : 1
the allocated a -> class : 1
allocated a class -> can : 1
a class can -> provide : 2
a class can -> implement : 2
a class can -> be : 1
a class can -> use : 1
class can provide -> its : 2
can provide its -> own : 2
provide its own -> allocation : 1
provide its own -> deallocation : 1
its own allocation -> function : 1
own allocation function -> by : 1
allocation function by -> overriding : 1
function by overriding -> as : 1
function by overriding -> a : 1
by overriding as -> a : 1
overriding as a -> member : 1
a member a -> global : 1
a member a -> member : 1
member a global -> is : 1
a global is -> in : 1
global is in -> for : 1
the standard allocation -> parts : 1
the standard allocation -> function : 1
standard allocation parts -> of : 1
allocation parts of -> a : 1
of a expression -> keyword : 1
of a expression -> but : 1
a expression keyword -> can : 1
expression keyword can -> be : 1
can be prefixed -> with : 1
be prefixed with -> the : 1
prefixed with the -> global : 1
with the global -> scope : 1
with the global -> which : 1
with the global -> they : 1
operator to call -> the : 1
operator to call -> a : 1
operator to call -> global : 1
call the global -> as : 2
the global as -> the : 1
the global as -> shown : 1
the global as -> though : 1
global as the -> allocation : 1
as the allocation -> expression : 1
as the allocation -> and : 1
the allocation expression -> list : 1
allocation expression list -> in : 1
expression list in -> parentheses : 1
list in parentheses -> is : 1
in parentheses is -> called : 1
parentheses is called -> the : 1
called the the -> placement : 1
called the the -> state : 1
called the the -> most : 2
the the placement -> is : 1
the placement is -> but : 1
placement is but -> if : 1
is but if -> it : 1
but if it -> is : 1
but if it -> all : 1
is it must -> contain : 1
it must contain -> at : 1
must contain at -> least : 1
contain at least -> one : 1
least one if -> the : 1
one if the -> expressions : 1
if the expressions -> are : 1
the expressions are -> passed : 1
expressions are passed -> directly : 1
are passed directly -> to : 1
passed directly to -> the : 1
directly to the -> allocation : 1
directly to the -> output : 1
directly to the -> loop : 1
directly to the -> statement : 1
directly to the -> inherited : 1
to the allocation -> function : 2
the allocation function -> without : 1
the allocation function -> to : 1
the allocation function -> cannot : 1
the allocation function -> is : 1
the allocation function -> must : 1
the allocation function -> pointer : 1
allocation function without -> further : 1
function without further -> standard : 1
without further standard -> library : 1
further standard library -> defines : 1
standard library defines -> two : 1
standard library defines -> several : 1
standard library defines -> every : 1
library defines two -> placement : 1
defines two placement -> which : 1
two placement which -> are : 1
placement which are -> discussed : 1
which are discussed -> in : 1
are discussed in -> you : 1
are discussed in -> the : 1
discussed in you -> can : 1
in you can -> also : 1
in you can -> construct : 1
in you can -> invent : 1
in you can -> use : 2
in you can -> set : 1
in you can -> assign : 4
can also write -> your : 1
can also write -> a : 1
also write your -> own : 1
write your own -> overloaded : 1
write your own -> c : 1
write your own -> use : 1
write your own -> class : 1
write your own -> container : 1
write your own -> iterator : 1
write your own -> check : 1
write your own -> following : 1
write your own -> in : 2
write your own -> the : 1
write your own -> classes : 1
write your own -> or : 1
write your own -> you : 1
your own overloaded -> functions : 2
own overloaded functions -> for : 1
own overloaded functions -> that : 1
overloaded functions for -> other : 1
functions for other -> forms : 1
for other forms -> of : 1
forms of placement -> the : 1
of placement the -> first : 1
of placement the -> corresponding : 1
placement the first -> operand : 1
the first operand -> to : 1
first operand to -> is : 1
operand to is -> always : 1
to is always -> the : 1
is always the -> amount : 1
is always the -> global : 1
is always the -> lefthand : 1
is always the -> you : 1
is always the -> and : 2
always the amount -> of : 1
the amount of -> memory : 3
the amount of -> additional : 1
the amount of -> processor : 1
amount of memory -> to : 2
amount of memory -> required : 1
of memory to -> allocate : 1
of memory to -> the : 1
of memory to -> it : 1
memory to allocate -> followed : 1
to allocate followed -> by : 1
allocate followed by -> the : 1
by the placement -> type : 1
the placement type -> to : 1
placement type to -> it : 1
type to it -> has : 1
type to it -> cannot : 1
to it has -> the : 1
it has the -> following : 1
it has the -> form : 1
it has the -> same : 3
the following form -> in : 1
following form in -> for : 1
form in for -> information : 1
about type the -> are : 1
type the are -> optional : 1
the are optional -> and : 1
are optional and -> can : 2
optional and can -> be : 1
optional and can -> appear : 1
can be or -> for : 1
can be or -> in : 1
can be or -> even : 1
can be or -> class : 1
can be or -> it : 1
can be or -> can : 1
be or for -> pointers : 1
or for pointers -> or : 1
for pointers or -> the : 1
pointers or the -> array : 1
or the array -> are : 1
array are all -> dimensions : 1
are all dimensions -> of : 1
all dimensions of -> an : 1
dimensions of an -> array : 1
an array except -> the : 1
array except the -> first : 1
except the first -> must : 1
the first must -> be : 1
first must be -> constant : 1
must be constant -> integral : 1
must be constant -> if : 1
be constant integral -> expressions : 1
constant integral expressions -> in : 1
integral expressions in -> square : 1
expressions in square -> the : 1
square the first -> dimension : 1
first dimension can -> be : 2
dimension can be -> any : 1
dimension can be -> an : 1
be any integral -> compiler : 1
be any integral -> type : 1
any integral compiler -> reads : 1
integral compiler reads -> the : 1
compiler reads the -> longest : 1
reads the longest -> sequence : 1
sequence of declarators -> as : 1
of declarators as -> the : 1
declarators as the -> even : 1
as the even -> if : 1
the even if -> it : 1
the even if -> the : 1
even if it -> results : 1
even if it -> is : 3
if it results -> in : 1
it results in -> a : 1
results in a -> syntax : 1
results in a -> distinct : 1
results in a -> null : 1
results in a -> copy : 1
results in a -> call : 1
results in a -> compiler : 1
in a syntax -> if : 1
a syntax if -> contains : 1
syntax if contains -> parentheses : 1
if contains parentheses -> a : 1
contains parentheses a -> function : 1
parentheses a function -> or : 1
a particular type -> surround : 1
particular type surround -> with : 1
type surround with -> for : 1
surround with for -> allocates : 1
with for allocates -> an : 1
for allocates an -> array : 1
allocates an array -> of : 1
array of integers -> and : 1
of integers and -> extracts : 1
integers and extracts -> the : 1
and extracts the -> element : 1
extracts the element -> at : 1
the element at -> index : 7
the element at -> any : 1
the element at -> iterator : 2
the element at -> new : 1
the element at -> that : 1
element at index -> without : 1
element at index -> if : 4
element at index -> the : 1
element at index -> in : 1
at index without -> the : 1
index without the -> allocates : 1
without the allocates -> a : 1
the allocates a -> array : 1
allocates a array -> of : 2
a array of -> optional : 1
a array of -> pointers : 1
a array of -> if : 1
a array of -> numerical : 1
array of optional -> initializer : 1
of optional initializer -> that : 1
optional initializer that -> follows : 1
initializer that follows -> the : 1
follows the usual -> rules : 1
rules for for -> more : 1
expression list has -> a : 1
list has a -> single : 1
a single and -> a : 1
a single and -> defining : 1
single and a -> single : 1
and a single -> object : 1
and a single -> statement : 1
and a single -> letter : 1
and a single -> character : 1
a single object -> is : 2
a single object -> are : 1
single object is -> the : 1
single object is -> different : 1
object is the -> expression : 1
object is the -> members : 1
object is the -> compiler : 1
object is the -> class : 1
object is the -> output : 1
object is the -> see : 1
the initial multiple -> expressions : 1
initial multiple expressions -> are : 1
multiple expressions are -> in : 1
expressions are in -> the : 1
a class and -> the : 1
a class and -> all : 1
a class and -> when : 1
a class and -> most : 1
passed to a -> suitable : 1
a suitable which -> is : 1
suitable which is -> found : 1
which is found -> by : 1
which is found -> on : 1
is found by -> the : 1
is found by -> comparing : 1
found by the -> usual : 1
by the usual -> rules : 1
overloaded functions array -> cannot : 1
functions array cannot -> have : 1
array cannot have -> an : 1
have an if -> the : 1
if the base -> type : 1
if the base -> class : 2
base type is -> a : 1
a pod the -> array : 1
a pod the -> pod : 1
pod the array -> elements : 1
the array elements -> are : 1
array elements are -> they : 1
elements are they -> are : 1
they are initialized -> by : 1
calling the default -> constructor : 1
calling the default -> behavior : 1
default constructor for -> each : 1
default constructor for -> a : 1
default constructor for -> all : 1
constructor for each -> array : 1
constructor for each -> direct : 1
constructor for each -> member : 1
for each array -> for : 1
each array for -> a : 1
array for a -> comparison : 1
for a comparison -> of : 1
a comparison of -> pod : 1
comparison of pod -> and : 1
of pod and -> function : 1
pod and function -> is : 1
and function is -> called : 1
function is called -> with : 2
function is called -> must : 1
function is called -> if : 3
function is called -> in : 1
function is called -> when : 2
function is called -> to : 1
function is called -> from : 9
function is called -> for : 1
is called with -> at : 1
is called with -> as : 1
is called with -> a : 1
is called with -> the : 1
is called with -> for : 1
called with at -> least : 1
least one the -> number : 1
one the number -> of : 1
number of bytes -> to : 1
number of bytes -> of : 1
number of bytes -> in : 8
number of bytes -> required : 1
number of bytes -> that : 3
number of bytes -> needed : 4
number of bytes -> written : 3
number of bytes -> successfully : 1
of bytes to -> allocate : 1
bytes to allocate -> type : 1
to allocate type -> if : 1
allocate type if -> a : 1
type if a -> placement : 1
if a placement -> is : 1
a placement is -> the : 1
placement is the -> placement : 1
is the placement -> arguments : 1
the placement arguments -> are : 1
placement arguments are -> passed : 1
are passed as -> additional : 1
passed as additional -> arguments : 1
as additional arguments -> to : 1
additional arguments to -> the : 1
arguments to the -> allocation : 1
arguments to the -> desired : 1
arguments to the -> size : 1
arguments to the -> and : 2
function to the -> right : 1
function to the -> equivalent : 1
function to the -> the : 1
function to the -> compiler : 1
function to the -> list : 1
function to the -> function : 1
if the allocation -> function : 2
if the allocation -> but : 1
allocation function cannot -> fulfill : 1
function cannot fulfill -> the : 1
cannot fulfill the -> it : 1
fulfill the it -> typically : 1
the it typically -> throws : 1
it typically throws -> if : 1
typically throws if -> you : 1
throws if you -> pass : 1
throws if you -> attempt : 1
if you pass -> as : 1
you pass as -> the : 1
pass as the -> placement : 1
pass as the -> first : 2
as the placement -> the : 1
as the placement -> if : 1
the placement the -> standard : 1
placement the standard -> allocation : 1
standard allocation function -> returns : 1
allocation function returns -> a : 1
function returns a -> null : 6
function returns a -> pointer : 9
function returns a -> true : 1
function returns a -> the : 1
function returns a -> number : 1
function returns a -> complex : 1
function returns a -> temporary : 1
function returns a -> nonzero : 2
function returns a -> integer : 1
function returns a -> wide : 1
function returns a -> value : 1
returns a null -> pointer : 7
returns a null -> if : 1
returns a null -> in : 2
returns a null -> it : 3
returns a null -> the : 3
returns a null -> calls : 3
null pointer as -> an : 1
null pointer as -> the : 2
pointer as an -> error : 1
pointer as an -> the : 1
as an error -> indicator : 1
an error indicator -> instead : 1
error indicator instead -> of : 1
indicator instead of -> throwing : 1
instead of throwing -> with : 1
instead of throwing -> if : 3
of throwing with -> no : 1
throwing with no -> an : 1
with no an -> array : 1
with no an -> argument : 1
with no an -> overflow : 1
no an array -> is : 1
array is different -> from : 1
different from allocating -> a : 1
different from allocating -> and : 1
from allocating a -> the : 1
allocating a the -> allocation : 1
a the allocation -> function : 1
allocation function is -> the : 1
is the requested -> size : 1
the requested size -> is : 1
requested size is -> the : 1
size is the -> number : 1
size is the -> returned : 1
size is the -> natural : 1
size is the -> return : 1
number of elements -> in : 16
number of elements -> that : 1
number of elements -> between : 1
number of elements -> for : 1
number of elements -> the : 1
of elements in -> the : 15
of elements in -> an : 1
of elements in -> each : 1
of elements in -> a : 1
the array times -> the : 1
array times the -> size : 1
times the size -> of : 2
size of each -> an : 1
size of each -> memory : 1
of each an -> implementation : 1
each an implementation -> is : 1
an implementation is -> free : 5
an implementation is -> permitted : 1
an implementation is -> not : 2
implementation is free -> to : 7
free to request -> additional : 1
to request additional -> memory : 1
request additional memory -> for : 1
additional memory for -> its : 1
memory for its -> own : 1
for its own -> perhaps : 1
its own perhaps -> to : 1
own perhaps to -> store : 1
perhaps to store -> the : 1
to store the -> number : 1
to store the -> largest : 1
to store the -> base : 1
store the number -> of : 1
the the amount -> of : 1
amount of additional -> memory : 1
of additional memory -> is : 1
additional memory is -> even : 1
memory is even -> if : 1
is even if -> the : 1
is the returned -> pointer : 1
the returned pointer -> is : 1
returned pointer is -> not : 1
not the allocated -> memory : 1
the allocated memory -> is : 1
the allocated memory -> as : 1
the allocated memory -> to : 1
the allocated memory -> with : 1
the allocated memory -> that : 1
the allocated memory -> must : 1
allocated memory is -> aligned : 1
memory is aligned -> to : 1
is aligned to -> the : 1
aligned to the -> most : 1
to the most -> restrictive : 1
the most restrictive -> boundary : 1
most restrictive boundary -> for : 1
restrictive boundary for -> any : 1
boundary for any -> the : 1
for any the -> allocation : 1
any the allocation -> function : 1
allocation function must -> return : 1
function must return -> a : 1
function must return -> type : 1
must return a -> pointer : 1
return a pointer -> that : 1
return a pointer -> if : 1
return a pointer -> to : 2
that is aligned -> for : 1
is aligned for -> any : 1
for any and -> the : 1
the expression simply -> uses : 1
expression simply uses -> that : 1
simply uses that -> you : 1
uses that you -> for : 1
that you for -> allocate : 1
you for allocate -> an : 1
for allocate an -> array : 1
allocate an array -> of : 1
array of and -> use : 1
array of and -> is : 1
of and use -> the : 1
and use the -> memory : 1
and use the -> allocator : 1
and use the -> trait : 1
and use the -> associated : 1
and use the -> class : 11
use the memory -> to : 1
the memory to -> store : 1
memory to store -> any : 1
memory to store -> the : 1
to store any -> the : 1
to store any -> and : 1
store any the -> standard : 1
any the standard -> containers : 1
the standard containers -> often : 1
the standard containers -> have : 1
the standard containers -> use : 1
the standard containers -> deque : 1
the standard containers -> but : 1
the standard containers -> provide : 1
the standard containers -> notably : 1
the standard containers -> rely : 1
the standard containers -> that : 1
standard containers often -> do : 1
containers often do -> see : 1
often do see -> in : 1
do see in -> for : 1
in for algorithms -> that : 1
for algorithms that -> work : 1
for algorithms that -> need : 1
algorithms that work -> with : 1
that work with -> uninitialized : 1
that work with -> character : 1
that work with -> and : 1
that work with -> function : 1
work with uninitialized -> an : 1
work with uninitialized -> which : 1
with uninitialized an -> is : 1
uninitialized an is -> thrown : 1
an is thrown -> during : 1
is thrown during -> the : 3
thrown during the -> memory : 1
thrown during the -> initialization : 1
thrown during the -> destructors : 1
during the memory -> is : 1
memory is freed -> by : 1
is freed by -> calling : 1
freed by calling -> a : 1
freed by calling -> the : 1
by calling a -> corresponding : 1
by calling a -> function : 1
by calling a -> basic : 1
by calling a -> valid : 1
by calling a -> write : 2
by calling a -> pointer : 2
calling a corresponding -> deallocation : 1
a corresponding deallocation -> function : 1
corresponding deallocation function -> to : 1
deallocation function to -> the : 1
to the equivalent -> if : 1
the equivalent if -> placement : 1
equivalent if placement -> is : 1
if placement is -> a : 1
placement is a -> placement : 1
is a placement -> operator : 1
is a placement -> you : 1
a placement operator -> with : 1
placement operator with -> the : 1
operator with the -> same : 1
the same additional -> parameters : 2
same additional parameters -> is : 1
same additional parameters -> as : 1
additional parameters is -> the : 1
parameters is the -> deallocation : 1
is the deallocation -> if : 1
the deallocation if -> such : 1
deallocation if such -> a : 1
if such a -> function : 1
a function no -> deallocation : 1
function no deallocation -> function : 1
no deallocation function -> is : 1
deallocation function is -> following : 1
function is following -> are : 1
is following are -> some : 1
is following are -> brief : 1
is following are -> the : 1
examples of n -> note : 1
of n note -> that : 1
n note that -> n : 1
note that n -> is : 1
that n is -> not : 1
n is not -> const : 1
is not const -> new : 1
is not const -> unit : 1
is not const -> category : 1
not const new -> int : 1
const new int -> pointer : 1
new int pointer -> to : 1
pointer to uninitialized -> int : 1
pointer to uninitialized -> pointer : 1
pointer to uninitialized -> the : 1
to uninitialized int -> new : 1
uninitialized int new -> pointer : 1
int new pointer -> to : 2
new pointer to -> initialized : 1
new pointer to -> uninitialized : 1
new pointer to -> a : 1
pointer to initialized -> to : 1
to initialized to -> new : 1
initialized to new -> n : 1
to new n -> uninitialized : 1
new n uninitialized -> ints : 1
n uninitialized ints -> new : 1
uninitialized ints new -> pointer : 1
ints new pointer -> to : 1
to uninitialized pointer -> to : 1
uninitialized pointer to -> int : 1
to int new -> n : 1
to int new -> pointer : 1
int new n -> function : 2
new n function -> pointers : 2
n function pointers -> typedef : 1
n function pointers -> new : 1
function pointers typedef -> int : 1
pointers typedef int -> new : 1
typedef int new -> n : 1
function pointers new -> array : 1
pointers new array -> of : 1
new array of -> pointers : 1
to a complex -> object : 1
a complex object -> new : 1
a complex object -> instantiated : 1
a complex object -> that : 1
complex object new -> five : 1
object new five -> complex : 1
new five complex -> and : 1
five complex and -> frees : 1
complex and frees -> a : 1
and frees a -> dynamic : 1
frees a dynamic -> object : 1
array of objects -> and : 2
objects and returns -> the : 1
returns the actual -> memory : 1
the actual memory -> deallocation : 1
actual memory deallocation -> is : 1
memory deallocation is -> performed : 1
deallocation is performed -> by : 1
is performed by -> a : 1
performed by a -> deallocation : 1
by a deallocation -> a : 1
a deallocation a -> class : 1
deallocation a class -> can : 1
its own deallocation -> function : 1
own deallocation function -> by : 1
deallocation function by -> overriding : 1
by overriding a -> plain : 1
overriding a plain -> expression : 1
a plain expression -> looks : 1
plain expression looks -> up : 1
expression looks up -> the : 1
up the deallocation -> function : 1
the deallocation function -> first : 1
the deallocation function -> as : 1
the deallocation function -> does : 1
the deallocation function -> pointer : 1
deallocation function first -> in : 1
function first in -> the : 1
class the type -> is : 1
a class if -> it : 1
class if it -> is : 1
is not in -> the : 5
is not in -> other : 1
is not in -> which : 1
is not in -> it : 1
is not in -> if : 1
is not in -> or : 1
the global use -> the : 1
global use the -> global : 1
use the global -> scope : 1
operator to look -> only : 1
to look only -> in : 2
look only in -> the : 2
only in the -> global : 1
only in the -> body : 2
only in the -> function : 1
only in the -> class : 1
only in the -> macro : 2
only in the -> argument : 1
the global in -> for : 1
global in for -> the : 1
for the default -> deallocation : 1
for the default -> action : 1
the default deallocation -> free : 1
default deallocation free -> an : 1
deallocation free an -> you : 1
free an you -> must : 1
an you must -> use : 1
must use to -> free : 1
use to free -> a : 1
to free a -> you : 1
free a you -> must : 1
a you must -> use : 2
a you must -> supply : 1
a you must -> specify : 1
a you must -> test : 1
a you must -> define : 1
must use if -> you : 1
if you make -> a : 1
you make a -> the : 1
make a the -> results : 1
a the results -> are : 1
the results are -> note : 1
the results are -> and : 1
the results are -> undefined : 1
the results are -> than : 1
the results are -> the : 2
the results are -> see : 2
the results are -> has : 2
results are note -> that : 1
are note that -> the : 1
are note that -> keys : 2
the compiler cannot -> generally : 1
the compiler cannot -> deduce : 1
the compiler cannot -> find : 2
the compiler cannot -> instantiate : 1
the compiler cannot -> tell : 1
the compiler cannot -> generate : 1
compiler cannot generally -> help : 1
cannot generally help -> you : 1
generally help you -> avoid : 1
help you avoid -> mistakes : 1
you avoid mistakes -> because : 1
avoid mistakes because -> a : 1
mistakes because a -> pointer : 1
because a pointer -> to : 1
to a scalar -> cannot : 1
a scalar cannot -> be : 1
scalar cannot be -> distinguished : 1
cannot be distinguished -> from : 1
be distinguished from -> a : 1
distinguished from a -> pointer : 1
to an libraries -> are : 1
an libraries are -> more : 1
libraries are more -> forgiving : 1
are more forgiving -> of : 1
more forgiving of -> this : 1
forgiving of this -> error : 1
of this error -> than : 1
this error than -> expression : 1
error than expression -> is : 1
than expression is -> evaluated : 1
is evaluated if -> is : 1
evaluated if is -> a : 1
class the scalar -> form : 1
the scalar form -> calls : 1
scalar form calls -> the : 1
form calls the -> destructor : 2
form calls the -> limits : 3
calls the destructor -> and : 1
calls the destructor -> for : 2
calls the destructor -> but : 1
the destructor and -> the : 1
destructor and the -> array : 1
and the array -> form : 1
the array form -> calls : 1
the array form -> of : 1
array form calls -> the : 1
destructor for each -> element : 1
for each element -> of : 5
each element of -> the : 5
each element of -> an : 1
each element of -> to : 1
each element of -> in : 8
each element of -> function : 1
each element of -> e : 1
the the value -> of : 1
the the value -> is : 12
the the value -> means : 1
value of is -> then : 1
value of is -> converted : 1
value of is -> macro : 2
value of is -> that : 1
value of is -> and : 2
value of is -> the : 1
value of is -> a : 1
value of is -> written : 1
value of is -> function : 1
of is then -> passed : 1
is then passed -> to : 1
then passed to -> the : 1
to the deallocation -> function : 1
deallocation function as -> a : 1
function as a -> if : 1
function as a -> named : 1
as a if -> the : 4
as a if -> both : 1
as a if -> is : 2
if the static -> type : 1
static type does -> not : 1
not match the -> dynamic : 1
not match the -> static : 2
not match the -> actual : 1
match the dynamic -> the : 1
the dynamic the -> static : 1
dynamic the static -> class : 1
the static class -> must : 2
static class must -> have : 2
class must have -> a : 4
have a virtual -> or : 2
have a virtual -> as : 1
have a virtual -> if : 1
have a virtual -> the : 1
have a virtual -> and : 1
a virtual or -> else : 1
a virtual or -> virtual : 1
virtual or else -> the : 1
or else the -> behavior : 3
or else the -> program : 2
or else the -> compiler : 3
or else the -> application : 1
or else the -> number : 1
else the behavior -> is : 3
behavior is see -> for : 1
behavior is see -> and : 1
for more can -> delete : 1
more can delete -> a : 1
can delete a -> pointer : 1
delete a pointer -> to : 1
to a it -> is : 1
it is also -> safe : 1
it is also -> used : 1
is also safe -> to : 1
also safe to -> delete : 1
safe to delete -> a : 2
to delete a -> null : 2
delete a null -> pointer : 1
delete a null -> nothing : 1
null pointer in -> which : 1
null pointer in -> function : 1
null pointer in -> typeid : 1
pointer in which -> case : 1
pointer in which -> is : 1
case the deallocation -> function : 1
deallocation function does -> expression : 1
deallocation function does -> not : 1
function does expression -> performs : 1
does expression performs -> an : 1
expression performs an -> explicit : 1
performs an explicit -> type : 1
an explicit type -> the : 2
an explicit type -> complex : 1
an explicit type -> cast : 1
explicit type the -> cast : 1
explicit type the -> potentially : 1
type the cast -> expression : 1
the cast expression -> is : 1
cast expression is -> a : 1
cast expression is -> dependent : 1
expression is a -> holdover : 1
is a holdover -> from : 1
a holdover from -> in : 1
holdover from in -> the : 1
from in the -> preferred : 1
from in the -> event : 1
from in the -> format : 1
from in the -> second : 1
from in the -> the : 1
in the preferred -> cast : 1
in the preferred -> function : 1
the preferred cast -> syntax : 1
preferred cast syntax -> uses : 1
cast syntax uses -> one : 1
syntax uses one -> of : 1
uses one of -> the : 1
of the explicit -> cast : 1
the explicit cast -> operators : 1
explicit cast operators -> in : 1
cast operators in -> earlier : 1
operators in earlier -> in : 1
in earlier in -> this : 2
this the casts -> are : 1
the casts are -> still : 1
casts are still -> used : 1
are still used -> for : 1
still used for -> their : 1
used for their -> cast : 1
for their cast -> converts : 1
their cast converts -> to : 1
cast converts to -> using : 1
converts to using -> one : 1
to using one -> or : 1
using one or -> more : 1
or more type -> if : 1
more type if -> is : 1
is an otherwise -> the : 1
an otherwise the -> result : 1
the following type -> conversions : 1
following type conversions -> are : 1
type conversions are -> tried : 1
conversions are tried -> in : 1
are tried in -> the : 1
tried in the -> first : 1
in the first -> one : 2
in the first -> statement : 1
in the first -> range : 1
in the first -> the : 1
in the first -> bytes : 1
in the first -> wide : 1
in the first -> characters : 1
the first one -> that : 1
the first one -> to : 1
the first one -> is : 1
first one that -> is : 1
one that is -> syntactically : 1
one that is -> if : 2
that is syntactically -> allowed : 1
is syntactically allowed -> is : 1
syntactically allowed is -> the : 1
allowed is the -> one : 1
the one even -> if : 1
one even if -> the : 1
expression is not -> permitted : 1
expression is not -> necessarily : 1
is not permitted -> type : 1
not permitted type -> is : 1
permitted type is -> the : 1
same as but -> its : 1
as but its -> are : 1
but its are -> changed : 1
its are changed -> to : 1
are changed to -> match : 1
changed to match -> the : 1
to match the -> type : 1
to match the -> these : 1
to match the -> classes : 1
to match the -> exception : 1
to match the -> if : 1
to match the -> function : 1
the type cast -> can : 1
type cast can -> mix : 1
cast can mix -> a : 1
can mix a -> cast : 1
mix a cast -> with : 1
a cast with -> a : 1
cast with a -> static : 1
a static or -> reinterpret : 1
a static or -> a : 1
static or reinterpret -> a : 1
or reinterpret a -> cast : 1
reinterpret a cast -> can : 1
a cast can -> also : 1
cast can also -> cast : 1
also cast to -> an : 1
cast to an -> otherwise : 1
to an otherwise -> inaccessible : 1
an otherwise inaccessible -> base : 1
otherwise inaccessible base -> class : 1
inaccessible base class -> for : 1
inaccessible base class -> to : 1
inaccessible base class -> cast : 1
base class for -> information : 1
base class for -> all : 6
base class for -> iterator : 1
base class for -> binary : 1
base class for -> unary : 1
base class for -> its : 1
base class for -> input : 5
base class for -> the : 5
base class for -> ctype : 1
base class for -> locale : 1
base class for -> message : 1
base class for -> and : 1
base class for -> moneypunct : 1
base class for -> time : 1
base class for -> output : 3
base class for -> string : 3
base class for -> logic : 1
base class for -> a : 1
base class for -> runtime : 2
base class for -> character : 1
class for information -> about : 1
information about that -> you : 1
information about that -> is : 1
about that you -> can : 1
you can cast -> a : 1
you can cast -> from : 1
you can cast -> an : 1
can cast a -> derived : 1
cast a derived -> class : 1
class to an -> inaccessible : 1
class to an -> accessible : 1
to an inaccessible -> base : 1
an inaccessible base -> cast : 1
an inaccessible base -> or : 1
an inaccessible base -> class : 1
inaccessible base cast -> a : 1
base cast a -> pointer : 1
of an inaccessible -> base : 1
inaccessible base or -> cast : 1
base or cast -> from : 1
or cast from -> an : 1
cast from an -> inaccessible : 1
from an inaccessible -> base : 1
base class to -> an : 1
base class to -> store : 1
base class to -> protected : 1
to an accessible -> derived : 1
to an accessible -> base : 1
an accessible derived -> expression : 1
accessible derived expression -> takes : 1
derived expression takes -> an : 1
expression takes an -> object : 1
takes an object -> or : 1
an object as -> the : 1
as the lefthand -> operand : 2
lefthand operand and -> a : 1
lefthand operand and -> the : 1
operand and a -> as : 1
and a as -> the : 1
a as the -> righthand : 1
as the righthand -> and : 1
as the righthand -> the : 1
the righthand and -> it : 1
righthand and it -> binds : 1
and it binds -> the : 1
it binds the -> to : 1
binds the to -> the : 1
the result can -> be : 1
or a member -> a : 1
or a member -> of : 1
or a member -> with : 1
member a member -> function : 1
member function can -> be : 4
member function can -> have : 1
function can be -> used : 2
function can be -> defined : 4
function can be -> implicitly : 1
function can be -> an : 1
function can be -> called : 2
function can be -> declared : 3
function can be -> in : 1
function can be -> composed : 1
function can be -> like : 1
function can be -> cast : 1
function can be -> registered : 1
function can be -> implemented : 1
function can be -> modified : 1
used only to -> call : 1
used only to -> declare : 1
only to call -> the : 1
the the shows -> some : 1
the shows some -> uses : 1
uses of pointers -> to : 1
the operator has -> the : 2
operator has the -> following : 6
the following to -> in : 1
the following to -> if : 1
following to in -> which : 1
a of class -> and : 2
of class and -> the : 3
type of is -> or : 2
type of is -> used : 1
type of is -> a : 1
from the result -> is : 2
an lvalue and -> points : 1
lvalue and points -> to : 1
and points to -> a : 1
and points to -> the : 3
of the result -> is : 9
of the result -> starting : 1
of the result -> leaving : 1
of the result -> the : 6
of the result -> source : 1
of the result -> range : 4
of the result -> first : 1
of the result -> of : 6
result is determined -> by : 2
determined by the -> type : 2
determined by the -> as : 1
determined by the -> shortest : 1
determined by the -> member : 1
behavior is undefined -> if : 28
behavior is undefined -> for : 4
is undefined if -> is : 4
is undefined if -> the : 20
is undefined if -> a : 1
is undefined if -> you : 1
is undefined if -> there : 1
is undefined if -> and : 2
undefined if is -> a : 1
undefined if is -> null : 1
undefined if is -> out : 2
a null to -> the : 1
null to the -> object : 1
that points in -> which : 1
points in which -> is : 1
lvalue if points -> to : 1
if points to -> a : 2
if points to -> an : 2
data the type -> of : 1
if is null -> or : 3
is null or -> if : 1
is null or -> returns : 2
null or if -> is : 1
a null points -> to : 1
null points to -> a : 1
to a virtual -> the : 2
to a virtual -> function : 1
a virtual the -> usual : 1
a virtual the -> dynamic : 1
a virtual the -> compiler : 1
a virtual the -> behavior : 1
virtual the usual -> rules : 1
usual rules that -> the : 1
rules that the -> actual : 1
that the actual -> function : 1
the actual function -> called : 1
actual function called -> is : 1
function called is -> that : 1
called is that -> of : 1
is that of -> the : 2
type of or -> see : 1
of or see -> for : 1
or see for -> more : 1
information about virtual -> with : 1
information about virtual -> a : 1
about virtual with -> no : 1
virtual with no -> expression : 1
with no expression -> is : 2
with no expression -> initializes : 1
no expression is -> used : 1
no expression is -> called : 1
expression is used -> for : 2
and the multiplicative -> operators : 1
the multiplicative operators -> require : 1
the multiplicative operators -> have : 1
multiplicative operators require -> arithmetic : 1
operators require arithmetic -> or : 1
require arithmetic or -> enumeration : 1
arithmetic or enumeration -> the : 2
enumeration the usual -> conversions : 3
enumeration the usual -> promotions : 1
the usual conversions -> are : 6
the usual conversions -> and : 1
usual conversions are -> and : 4
usual conversions are -> performed : 2
conversions are and -> an : 2
conversions are and -> the : 2
are and an -> rvalue : 2
and an rvalue -> is : 2
rvalue is if -> the : 2
if the result -> is : 5
if the result -> of : 1
if the result -> causes : 1
result is too -> the : 1
is too the -> behavior : 2
is too the -> multibyte : 2
too the behavior -> is : 2
is undefined for -> unsigned : 2
is undefined for -> other : 1
is undefined for -> the : 1
undefined for unsigned -> for : 2
for unsigned for -> which : 2
unsigned for which -> arithmetic : 2
for which arithmetic -> is : 2
which arithmetic is -> performed : 2
arithmetic is performed -> modulo : 2
is performed modulo -> the : 2
performed modulo the -> integer : 2
modulo the integer -> see : 2
the integer see -> for : 3
integer see for -> many : 2
integer see for -> more : 1
see for many -> implementations : 2
see for many -> usually : 1
for many implementations -> ignore : 2
many implementations ignore -> integer : 2
implementations ignore integer -> the : 2
ignore integer the -> multiplicative : 1
ignore integer the -> additive : 1
integer the multiplicative -> operators : 1
multiplicative operators have -> the : 1
operators have the -> following : 6
operators have the -> same : 1
have the following -> if : 4
have the following -> a : 1
have the following -> to : 1
have the following -> do : 1
have the following -> classes : 1
have the following -> you : 1
have the following -> additional : 2
the following if -> the : 2
the following if -> one : 1
the following if -> is : 1
following if the -> divisor : 1
following if the -> operands : 1
if the divisor -> is : 1
the divisor is -> the : 1
divisor is the -> behavior : 1
is the behavior -> is : 3
is the behavior -> of : 1
is the behavior -> you : 1
is the remainder -> of : 1
remainder of dividing -> by : 2
of dividing by -> the : 1
of dividing by -> if : 1
dividing by the -> operands : 1
dividing by the -> same : 1
by the operands -> must : 1
the operands must -> have : 3
the operands must -> be : 1
operands must have -> integral : 1
operands must have -> or : 2
or enumerated if -> is : 1
enumerated if is -> the : 1
value is such -> that : 1
is such that -> if : 1
that if both -> operands : 1
if both operands -> are : 4
if both operands -> have : 1
operands are the -> result : 1
operands are the -> you : 1
are the result -> is : 1
are the result -> of : 1
is the sign -> of : 1
the sign of -> the : 2
the sign of -> both : 1
the sign of -> for : 1
sign of the -> result : 2
sign of the -> the : 1
sign of the -> return : 1
result is with -> no : 1
is with no -> additive : 1
is with no -> value : 1
is with no -> enumerated : 1
is with no -> functions : 1
is with no -> order : 1
is with no -> side : 3
is with no -> use : 1
with no additive -> expression : 1
no additive expression -> is : 1
additive expression is -> used : 1
additive expression is -> too : 1
and the additive -> operators : 1
the additive operators -> require : 1
the additive operators -> have : 1
the additive operators -> allow : 1
additive operators require -> or : 1
operators require or -> pointer : 1
require or pointer -> the : 1
result of an -> additive : 1
result of an -> equality : 1
result of an -> the : 1
of an additive -> expression : 1
an additive expression -> is : 1
expression is too -> the : 1
integer the additive -> operators : 1
additive operators have -> the : 1
following if one -> operand : 1
operand has a -> pointer : 1
operand has a -> if : 1
has a pointer -> the : 1
pointer the other -> must : 1
the other must -> have : 1
the other must -> wait : 1
other must have -> an : 1
have an integral -> or : 3
enumeration the result -> is : 2
result is a -> pointer : 1
result is a -> null : 1
result is a -> range : 1
result is a -> copy : 1
result is a -> but : 2
the same but -> with : 1
the same but -> does : 1
the same but -> without : 1
the same but -> under : 1
the same but -> you : 1
same but with -> the : 1
but with the -> index : 1
but with the -> following : 2
with the index -> offset : 1
the index offset -> by : 1
index offset by -> positions : 1
offset by positions -> can : 1
by positions can -> be : 1
positions can be -> or : 1
be or in -> which : 1
is the integral -> the : 1
the integral the -> resulting : 1
the integral the -> native : 1
integral the resulting -> pointer : 1
the resulting pointer -> must : 1
resulting pointer must -> be : 1
pointer must be -> within : 1
pointer must be -> large : 1
pointer must be -> convertible : 1
must be within -> the : 1
be within the -> bounds : 1
within the bounds -> of : 1
the bounds of -> the : 1
bounds of the -> array : 1
the array or -> point : 1
the array or -> an : 2
array or point -> to : 1
or point to -> one : 1
point to one -> past : 4
point to one -> element : 1
point to one -> position : 2
point to one -> item : 1
to one past -> the : 30
to one past -> where : 5
one past the -> end : 22
one past the -> last : 16
one past the -> new : 3
one past the -> but : 1
past the end -> of : 37
the the behavior -> is : 12
the the behavior -> of : 1
behavior is note -> that : 1
pointer to any -> object : 1
any object can -> be : 1
can be treated -> as : 1
be treated as -> a : 1
treated as a -> if : 1
treated as a -> normal : 1
treated as a -> unary : 1
treated as a -> sequence : 1
treated as a -> series : 1
a if both -> operands : 1
both operands have -> arithmetic : 1
both operands have -> the : 1
operands have arithmetic -> or : 1
the usual promotions -> apply : 1
usual promotions apply -> and : 1
promotions apply and -> the : 1
apply and the -> result : 1
is the difference -> of : 1
is the difference -> between : 1
the difference of -> the : 2
the difference of -> its : 1
the difference of -> any : 1
difference of the -> both : 1
difference of the -> indices : 1
of the both -> operands : 1
the both operands -> are : 1
operands are they -> must : 1
are they must -> point : 1
they must point -> to : 1
must point to -> elements : 1
must point to -> one : 1
must point to -> an : 1
point to elements -> of : 2
to elements of -> the : 2
to elements of -> a : 1
the same or -> to : 1
the same or -> one : 1
the same or -> if : 2
the same or -> you : 4
same or to -> one : 1
or to one -> element : 1
or to one -> position : 1
to one element -> past : 2
one element past -> the : 4
element past the -> end : 4
the result has -> type : 3
the result has -> the : 1
result has type -> in : 1
result has type -> if : 2
has type in -> and : 1
type in and -> is : 1
type in and -> in : 1
in and is -> equal : 1
in and is -> at : 1
in and is -> false : 1
in and is -> declared : 1
in and is -> not : 2
in and is -> set : 1
in and is -> true : 1
in and is -> the : 1
and is equal -> to : 5
is equal to -> the : 2
is equal to -> multiplying : 1
is equal to -> dividing : 1
is equal to -> its : 1
is equal to -> for : 2
is equal to -> an : 1
is equal to -> return : 2
is equal to -> and : 1
is equal to -> is : 2
to the difference -> of : 1
to the difference -> between : 1
of the indices -> of : 1
the indices of -> the : 1
indices of the -> two : 1
two the left -> operand : 1
operand is a -> pointer : 1
operand is a -> the : 1
operand is a -> cast : 1
operand is a -> dependent : 1
and the right -> operand : 1
right operand has -> integral : 1
operand has integral -> or : 1
has integral or -> enumeration : 1
same as expression -> shifts : 1
as expression shifts -> the : 1
expression shifts the -> bits : 1
shifts the bits -> of : 1
the bits of -> the : 2
bits of the -> left : 1
bits of the -> operands : 3
bits of the -> formatting : 1
of the left -> operand : 2
of the left -> with : 1
of the left -> assignment : 1
left operand by -> an : 1
operand by an -> amount : 1
by an amount -> specified : 1
an amount specified -> by : 1
amount specified by -> the : 1
specified by the -> right : 1
specified by the -> template : 4
by the right -> the : 1
the right the -> operands : 1
the right the -> result : 1
right the operands -> must : 1
operands must be -> have : 1
must be have -> integral : 1
be have integral -> or : 1
or enumerated both -> types : 1
enumerated both types -> are : 1
both types are -> promoted : 1
types are promoted -> to : 1
are promoted to -> integral : 1
are promoted to -> have : 1
are promoted to -> including : 1
are promoted to -> this : 1
promoted to integral -> the : 1
to integral the -> result : 1
integral the result -> type : 1
the promoted type -> of : 1
promoted type of -> the : 1
the left with -> no : 1
left with no -> result : 1
with no result -> of : 1
no result of -> a : 1
result of a -> shift : 1
result of a -> relational : 1
result of a -> function : 1
result of a -> computational : 2
of a shift -> operation : 1
of a shift -> state : 1
a shift operation -> is : 1
shift operation is -> undefined : 1
operation is undefined -> if : 1
undefined if the -> right : 1
undefined if the -> container : 4
undefined if the -> last : 1
undefined if the -> operator : 1
undefined if the -> output : 1
undefined if the -> deque : 4
undefined if the -> list : 4
undefined if the -> return : 1
undefined if the -> vector : 3
if the right -> operand : 2
operand is negative -> or : 1
is negative or -> is : 1
is negative or -> past : 2
negative or is -> larger : 1
or is larger -> than : 1
is larger than -> the : 2
than the number -> of : 1
in the left -> shift : 1
the left shift -> operators : 1
left shift operators -> have : 1
shift operators have -> the : 1
following a left -> shift : 1
a left shift -> of : 1
left shift of -> by : 1
shift of by -> vacated : 1
shift of by -> if : 1
of by vacated -> bits : 1
by vacated bits -> are : 5
vacated bits are -> filled : 6
bits are filled -> with : 6
are filled with -> if : 1
are filled with -> the : 1
are filled with -> returns : 2
are filled with -> a : 2
filled with if -> is : 1
with if is -> the : 1
with if is -> a : 1
result is equal -> to : 2
equal to multiplying -> by : 1
to multiplying by -> raised : 1
multiplying by raised -> to : 1
by raised to -> the : 1
by raised to -> to : 1
raised to the -> integer : 1
raised to the -> point : 1
to the integer -> see : 1
to the integer -> but : 1
information about unsigned -> integer : 1
about unsigned integer -> a : 1
unsigned integer a -> right : 1
integer a right -> shift : 1
a right shift -> of : 1
right shift of -> by : 1
of by if -> the : 1
by if the -> is : 1
by if the -> flag : 1
the is or -> if : 1
is or if -> it : 1
is or if -> the : 6
is or if -> there : 2
is or if -> has : 2
or if it -> is : 7
it is signed -> and : 1
is signed and -> has : 1
signed and has -> a : 1
and has a -> positive : 1
and has a -> rich : 1
has a positive -> vacated : 1
a positive vacated -> bits : 1
positive vacated bits -> are : 1
filled with the -> result : 1
with the result -> is : 1
equal to dividing -> by : 1
to dividing by -> raised : 1
dividing by raised -> to : 1
raised to to -> an : 1
to to an -> if : 1
an if has -> a : 1
if has a -> signed : 1
if has a -> the : 1
has a signed -> type : 1
a signed type -> and : 1
signed type and -> negative : 1
type and negative -> the : 1
and negative the -> result : 1
negative the result -> is : 1
result is standard -> library : 1
is standard library -> overloads : 1
is standard library -> has : 1
standard library overloads -> the : 1
library overloads the -> shift : 1
overloads the shift -> operators : 1
the shift operators -> for : 2
the shift operators -> to : 1
shift operators for -> the : 1
shift operators for -> and : 1
for the stream -> class : 1
for the stream -> most : 1
for the stream -> to : 1
for the stream -> the : 2
for the stream -> buffer : 1
the stream class -> as : 1
the stream class -> class : 1
stream class as -> with : 1
class as with -> any : 1
as with any -> overloaded : 1
as with any -> other : 3
as with any -> formatted : 1
as with any -> the : 1
as with any -> of : 1
with any overloaded -> the : 1
any overloaded the -> syntax : 1
overloaded the syntax -> and : 1
syntax and remains -> the : 1
and remains the -> only : 1
remains the only -> the : 1
the only the -> runtime : 1
the only the -> characters : 2
only the runtime -> behavior : 1
the runtime behavior -> is : 1
runtime behavior is -> see : 1
is see and -> for : 1
see and for -> more : 6
see and for -> information : 2
see and for -> to : 1
see and for -> the : 1
see and for -> an : 1
see and for -> a : 2
for more expression -> compares : 1
more expression compares -> two : 1
expression compares two -> values : 2
compares two values -> for : 1
compares two values -> to : 1
two values for -> relative : 1
values for relative -> relational : 1
for relative relational -> operators : 1
relative relational operators -> have : 1
relational operators have -> higher : 1
relational operators have -> the : 1
operators have higher -> precedence : 1
have higher precedence -> than : 1
precedence than equality -> so : 1
than equality so -> the : 1
equality so the -> following : 1
so the following -> two : 2
following two expressions -> are : 2
two expressions are -> b : 2
expressions are b -> c : 2
are b c -> d : 2
b c d -> result : 2
c d result -> of : 2
d result of -> a : 1
d result of -> an : 1
of a relational -> expression : 1
a relational expression -> is : 1
relational expression is -> an : 1
type the operands -> must : 2
or pointer for -> arithmetic : 2
pointer for arithmetic -> and : 2
for arithmetic and -> enumeration : 2
arithmetic and enumeration -> the : 2
and enumeration the -> usual : 2
and the resulting -> values : 2
and the resulting -> text : 1
and the resulting -> range : 1
and the resulting -> character : 1
the resulting values -> are : 2
resulting values are -> the : 1
resulting values are -> that : 1
values are the -> pointers : 1
are the pointers -> must : 1
the pointers must -> have : 2
pointers must have -> the : 2
the same types -> the : 1
same types the -> usual : 1
types the usual -> conversions : 1
usual conversions and -> ignoring : 1
conversions and ignoring -> one : 1
and ignoring one -> must : 1
ignoring one must -> be : 1
one must be -> a : 1
pointer to or -> one : 1
pointer to or -> array : 1
pointer to or -> a : 1
pointer to or -> nothing : 1
to or one -> operand : 1
or one operand -> must : 1
if the pointer -> types : 1
the pointer types -> are : 1
pointer types are -> they : 1
pointer types are -> initialized : 1
types are they -> are : 1
they are compared -> as : 1
they are compared -> using : 1
are compared as -> follows : 1
compared as follows -> is : 1
as follows is -> the : 1
follows is the -> left : 1
follows is the -> region : 1
is the left -> operand : 1
is the left -> for : 2
left operand and -> is : 1
left operand and -> in : 1
operand and is -> the : 1
is the right -> and : 1
is the right -> way : 1
the right and -> point : 1
the right and -> the : 1
right and point -> to : 1
and point to -> the : 1
and point to -> different : 1
and point to -> data : 2
and point to -> elements : 1
point to the -> same : 6
point to the -> actual : 1
point to the -> beginning : 1
point to the -> node : 1
point to the -> original : 1
point to the -> if : 1
point to the -> value : 2
same the same -> or : 1
same or one -> element : 1
or one element -> past : 1
same or if -> both : 1
same or if -> they : 1
or if both -> are : 1
if both are -> null : 1
both are null -> they : 1
are null they -> are : 1
null they are -> considered : 1
they are considered -> to : 2
are considered to -> be : 3
considered to be -> equal : 3
considered to be -> the : 2
to be equal -> to : 2
to be equal -> when : 1
be equal to -> each : 2
equal to each -> that : 1
equal to each -> and : 1
equal to each -> other : 1
to each that -> and : 1
each that and -> are : 1
that and are -> and : 1
that and are -> for : 1
and are and -> and : 1
are and and -> are : 1
are and and -> expression : 1
and and are -> with : 1
and and are -> associated : 1
and are with -> no : 1
are with no -> and : 1
are with no -> you : 1
are with no -> a : 1
with no and -> point : 1
no and point -> to : 1
point to different -> objects : 1
point to different -> elements : 1
to different objects -> are : 1
different objects are -> not : 1
objects are not -> members : 1
objects are not -> but : 1
are not members -> of : 1
not members of -> a : 1
members of a -> common : 1
members of a -> in : 1
members of a -> union : 1
members of a -> specific : 1
members of a -> class : 5
members of a -> which : 1
members of a -> value : 1
members of a -> new : 1
of a common -> object : 1
of a common -> mistake : 1
a common object -> and : 1
common object and -> not : 1
object and not -> elements : 1
and not elements -> of : 1
not elements of -> the : 1
the same different -> or : 1
same different or -> if : 1
different or if -> only : 1
different or if -> they : 1
or if only -> one : 1
if only one -> is : 1
only one is -> a : 1
one is a -> null : 1
a null the -> result : 2
a null the -> first : 1
a null the -> constructor : 3
a null the -> stream : 1
a null the -> behavior : 2
null the result -> of : 1
null the result -> is : 1
null the result -> would : 1
null the result -> always : 1
result of the -> relational : 1
result of the -> conditional : 1
result of the -> second : 1
result of the -> copy : 1
result of the -> the : 1
result of the -> it : 6
of the relational -> operators : 1
the relational operators -> depends : 1
the relational operators -> are : 1
relational operators depends -> on : 1
operators depends on -> the : 1
on the and -> point : 1
on the and -> the : 1
the and point -> to : 1
point to data -> members : 2
to data members -> ordinary : 2
to data members -> and : 2
data members ordinary -> not : 2
members ordinary not -> within : 1
members ordinary not -> of : 1
ordinary not within -> the : 1
not within the -> same : 1
the same object -> of : 1
the same object -> pointers : 1
same object of -> the : 1
the same elements -> of : 1
the same elements -> in : 1
same elements of -> arrays : 1
elements of arrays -> that : 1
of arrays that -> are : 1
arrays that are -> data : 1
arrays that are -> too : 1
that are data -> and : 1
are data and -> so : 1
data and so -> recursively : 1
and so recursively -> and : 1
so recursively and -> if : 1
recursively and if -> the : 1
if the members -> are : 2
the members are -> not : 2
the members are -> separated : 1
the members are -> all : 1
members are not -> separated : 1
members are not -> later : 1
are not separated -> by : 1
not separated by -> an : 1
separated by an -> access : 3
by an access -> specifier : 4
an access specifier -> and : 1
an access specifier -> the : 1
an access specifier -> label : 1
an access specifier -> later : 1
an access specifier -> before : 1
access specifier and -> if : 1
specifier and if -> the : 1
object is not -> a : 2
object is not -> freed : 1
object is not -> passed : 1
object is not -> that : 1
object is not -> deleted : 1
not a then -> if : 1
a then if -> the : 1
then if the -> member : 1
if the member -> to : 2
if the member -> function : 2
if the member -> does : 1
the member to -> which : 4
the member to -> for : 1
the member to -> access : 2
member to which -> points : 2
member to which -> if : 2
to which points -> is : 2
which points is -> declared : 2
points is declared -> later : 1
points is declared -> earlier : 1
declared later than -> the : 1
later than the -> member : 1
than the member -> to : 2
than the member -> but : 1
to which if -> the : 2
which if the -> member : 1
which if the -> members : 1
is declared earlier -> than : 1
declared earlier than -> the : 1
earlier than the -> member : 1
members are separated -> by : 1
are separated by -> an : 1
are separated by -> each : 1
are separated by -> the : 1
are separated by -> a : 1
are separated by -> vertical : 1
are separated by -> common : 1
are separated by -> monetary : 1
access specifier the -> results : 1
access specifier the -> order : 1
specifier the results -> are : 1
results are and -> point : 1
are and point -> to : 1
ordinary not of -> the : 1
not of the -> same : 1
the same they -> are : 1
same they are -> considered : 1
to each and -> point : 1
each and point -> to : 1
the same including -> one : 1
same including one -> element : 1
including one element -> past : 1
same the pointer -> with : 1
the pointer with -> the : 1
the pointer with -> if : 1
pointer with the -> higher : 1
with the higher -> subscript : 1
the higher subscript -> is : 1
higher subscript is -> shows : 1
subscript is shows -> some : 1
is shows some -> pointer : 1
shows some pointer -> struct : 1
some pointer struct -> demo : 1
pointer struct demo -> int : 1
struct demo int -> int : 1
struct demo int -> return : 1
int int union -> u : 1
int union u -> int : 1
union u int -> double : 1
u int double -> char : 1
int double char -> demo : 1
double char demo -> int : 1
char demo int -> demo : 1
demo int demo -> everything : 1
int demo everything -> prints : 1
demo everything prints -> u : 1
everything prints u -> relational : 1
prints u relational -> operators : 1
u relational operators -> have : 1
following if is -> less : 1
if is less -> than : 10
is less than -> if : 5
is less than -> or : 6
is less than -> the : 3
is less than -> in : 2
is less than -> using : 5
is less than -> sequence : 1
is less than -> assuming : 1
less than if -> is : 1
less than if -> one : 4
than if is -> greater : 1
than if is -> less : 1
if is greater -> than : 11
is greater than -> if : 1
is greater than -> or : 10
is greater than -> the : 5
is greater than -> sequence : 1
is greater than -> for : 1
is greater than -> no : 1
is greater than -> that : 1
greater than if -> is : 1
greater than if -> the : 1
less than or -> equal : 20
less than or -> greater : 1
equal to if -> is : 1
equal to if -> the : 2
equal to if -> there : 2
equal to expression -> compares : 1
to expression compares -> two : 1
two values to -> see : 1
values to see -> if : 1
to see if -> they : 2
to see if -> a : 1
to see if -> the : 1
to see if -> any : 1
see if they -> are : 2
they are equal -> or : 1
are equal or -> equality : 1
are equal or -> in : 1
equal or equality -> operators : 1
or equality operators -> have : 1
equality operators have -> lower : 1
equality operators have -> the : 1
operators have lower -> precedence : 1
have lower precedence -> than : 1
lower precedence than -> relational : 1
precedence than relational -> so : 1
than relational so -> the : 1
relational so the -> following : 1
of an equality -> expression : 1
an equality expression -> is : 1
equality expression is -> an : 1
values are that -> comparing : 1
are that comparing -> the : 1
that comparing the -> results : 1
comparing the results -> of : 1
results of values -> for : 1
values for equality -> rarely : 1
for equality rarely -> gives : 1
equality rarely gives -> the : 1
rarely gives the -> result : 1
gives the result -> you : 1
the result you -> you : 1
result you you -> probably : 1
you you probably -> want : 1
you probably want -> a : 1
you probably want -> friend : 1
probably want a -> comparison : 1
want a comparison -> that : 1
a comparison that -> allows : 1
comparison that allows -> for : 1
that allows for -> comparing : 1
allows for comparing -> the : 1
for comparing the -> pointers : 1
comparing the pointers -> must : 1
the same type -> the : 1
the same type -> argument : 1
the same type -> for : 1
the same type -> as : 2
same type the -> usual : 1
type the usual -> the : 1
the usual the -> pointers : 1
usual the pointers -> are : 1
the pointers are -> equal : 1
the pointers are -> not : 1
pointers are equal -> if : 1
are equal if -> any : 1
are equal if -> they : 1
equal if any -> of : 1
if any of -> the : 2
if any of -> its : 2
if any of -> them : 1
the following conditions -> and : 1
the following conditions -> is : 1
following conditions and -> are : 1
conditions and are -> not : 1
and are not -> equal : 2
and are not -> part : 2
and are not -> descriptive : 1
and are not -> monday : 1
and are not -> that : 1
are not equal -> if : 1
are not equal -> to : 3
are not equal -> in : 1
not equal if -> none : 1
equal if none -> of : 1
if none of -> the : 3
none of the -> conditions : 1
none of the -> characters : 2
of the conditions -> pointers : 1
the conditions pointers -> are : 1
conditions pointers are -> null : 1
pointers are null -> object : 1
pointers are null -> and : 1
are null object -> pointers : 1
null object pointers -> point : 1
object pointers point -> to : 2
pointers point to -> the : 4
pointers point to -> one : 1
pointers point to -> any : 1
same object pointers -> point : 1
the same function -> pointers : 1
the same function -> in : 1
the same function -> functions : 1
the same function -> type : 1
the same function -> template : 1
the same function -> used : 1
same function pointers -> point : 1
function pointers point -> to : 1
the same member -> pointers : 2
the same member -> of : 1
the same member -> functions : 1
same member pointers -> point : 2
member pointers point -> to : 2
same member of -> the : 1
member of the -> same : 1
member of the -> class : 1
member of the -> to : 1
member of the -> pair : 2
member of the -> data : 1
point to any -> data : 1
point to any -> element : 1
point to any -> of : 2
to any data -> members : 1
any data members -> of : 1
any data members -> to : 1
members of the -> same : 1
members of the -> and : 1
members of the -> derived : 1
members of the -> base : 3
members of the -> class : 3
members of the -> specialized : 1
members of the -> primary : 1
members of the -> ns : 1
members of the -> standard : 2
members of the -> smallest : 1
members of the -> character : 1
members of the -> message : 1
members of the -> currency : 1
members of the -> decimal : 1
members of the -> order : 1
members of the -> also : 1
members of the -> value : 1
the same equality -> operators : 1
same equality operators -> have : 1
if the operands -> are : 3
the operands are -> if : 1
the operands are -> and : 1
the operands are -> both : 2
the operands are -> not : 1
the operands are -> the : 1
the operands are -> different : 1
operands are if -> the : 1
operands are and -> and : 1
operands are and -> the : 1
and and expression -> performs : 1
and and expression -> implicitly : 1
and expression performs -> on : 1
expression performs on -> its : 3
performs on its -> the : 3
on its the -> bitwise : 3
its the bitwise -> expression : 3
the bitwise expression -> is : 3
bitwise expression is -> permitted : 3
expression is permitted -> only : 3
is permitted only -> on : 3
only on integral -> types : 3
on integral types -> after : 3
integral types after -> the : 3
types after the -> usual : 3
after the usual -> arithmetic : 3
the usual arithmetic -> the : 3
the usual arithmetic -> then : 3
the usual arithmetic -> promotion : 1
usual arithmetic the -> bitwise : 2
usual arithmetic the -> operator : 1
arithmetic the bitwise -> operator : 2
the bitwise operator -> has : 2
bitwise operator has -> the : 2
the following bitwise -> of : 3
following bitwise of -> the : 3
bitwise of the -> each : 3
the each bit -> of : 3
the each bit -> is : 1
each bit of -> the : 3
each bit of -> its : 1
bit of the -> result : 3
if the corresponding -> bits : 5
if the corresponding -> element : 1
the corresponding bits -> of : 3
the corresponding bits -> in : 2
the corresponding bits -> are : 1
corresponding bits of -> the : 3
of the operands -> are : 3
operands are both -> the : 2
are both the -> result : 3
both the result -> bit : 2
both the result -> is : 1
the result bit -> is : 3
result bit is -> exclusive : 1
result bit is -> inclusive : 1
result bit is -> and : 1
bit is exclusive -> or : 1
is exclusive or -> exclusive : 1
exclusive or exclusive -> or : 1
or exclusive or -> expression : 1
exclusive or expression -> performs : 1
or expression performs -> on : 2
arithmetic the operator -> has : 1
operands are not -> the : 1
are not the -> result : 1
are not the -> tokens : 1
are not the -> complexity : 2
are not the -> following : 1
not the result -> bit : 1
not the result -> final : 1
not the result -> of : 1
bit is inclusive -> or : 1
is inclusive or -> inclusive : 1
inclusive or inclusive -> or : 1
or inclusive or -> expression : 1
inclusive or expression -> performs : 1
bit is and -> and : 1
is and and -> expression : 1
and expression implicitly -> converts : 1
expression implicitly converts -> its : 2
implicitly converts its -> operands : 2
converts its operands -> to : 4
its operands to -> type : 4
operands to type -> the : 2
operands to type -> and : 2
to type the -> result : 2
has type if -> both : 2
type if both -> operands : 2
operands are it -> is : 2
are it is -> the : 2
is the logical -> operator : 2
operator is a -> so : 4
operator is a -> function : 1
operator is a -> binary : 1
operator is a -> following : 3
is a so -> the : 2
is a so -> if : 2
a so the -> second : 2
a so the -> function : 1
so the second -> operand : 2
so the second -> version : 1
the second operand -> is : 3
the second operand -> can : 1
second operand is -> evaluated : 2
second operand is -> if : 1
operand is evaluated -> only : 2
operand is evaluated -> for : 1
is evaluated only -> if : 2
is evaluated only -> the : 3
is evaluated only -> in : 1
is evaluated only -> keyword : 2
evaluated only if -> the : 2
only if the -> first : 2
only if the -> object : 1
only if the -> function : 1
only if the -> value : 1
only if the -> flag : 1
only if the -> placement : 1
if the first -> evaluates : 2
if the first -> digit : 2
if the first -> element : 1
if the first -> is : 1
if the first -> character : 1
if the first -> argument : 4
if the first -> should : 2
the first evaluates -> to : 2
first evaluates to -> the : 2
evaluates to the -> logical : 2
evaluates to the -> read : 1
evaluates to the -> write : 1
to the logical -> operator : 2
logical operator has -> the : 2
following the logical -> of : 2
the logical of -> the : 2
logical of the -> or : 1
logical of the -> expression : 1
the or or -> expression : 1
or or expression -> implicitly : 1
or expression implicitly -> converts : 1
expression is like -> an : 1
is like an -> statement : 1
is like an -> ordinary : 2
is like an -> except : 1
is like an -> adding : 1
like an statement -> in : 1
an statement in -> an : 1
statement in an -> first : 1
in an first -> operand : 1
an first operand -> is : 1
first operand is -> converted : 1
value is only -> the : 1
only the second -> operand : 1
operand is if -> it : 1
is if it -> is : 3
is if it -> ends : 1
it is only -> the : 1
it is only -> octal : 1
only the third -> operand : 1
the third operand -> is : 1
third operand is -> the : 1
of the conditional -> expression : 1
the conditional expression -> is : 1
conditional expression is -> the : 1
the second or -> third : 1
second or third -> whichever : 1
or third whichever -> is : 1
third whichever is -> type : 1
whichever is type -> of : 1
is type of -> the : 1
the expression depends -> on : 1
expression depends on -> the : 1
the second and -> third : 3
the second and -> no : 1
the second and -> subsequent : 6
the second and -> therefore : 1
second and third -> if : 1
second and third -> forms : 2
and third if -> both : 1
third if both -> operands : 1
operands are lvalues -> of : 1
are lvalues of -> the : 1
lvalues of the -> same : 1
same the result -> is : 1
lvalue of that -> if : 1
of that if -> one : 1
that if one -> operand : 1
operand is an -> lvalue : 2
operand is an -> the : 1
operand is an -> for : 1
the other operand -> is : 1
other operand is -> an : 1
an lvalue that -> can : 1
an lvalue that -> results : 1
lvalue that can -> be : 1
can be implicitly -> converted : 6
type an error -> results : 1
if the conversion -> is : 1
if the conversion -> of : 1
if the conversion -> ends : 2
the conversion is -> the : 2
the conversion is -> to : 1
the conversion is -> ambiguous : 1
the conversion is -> similar : 2
conversion is the -> second : 1
conversion is the -> corresponding : 1
is the second -> operand : 1
is the second -> is : 2
is the second -> argument : 1
is the second -> and : 2
second operand can -> be : 1
operand can be -> converted : 1
operand can be -> implicitly : 1
of the third -> just : 1
of the third -> part : 3
of the third -> form : 1
the third just -> as : 1
third just as -> readily : 1
just as readily -> as : 1
as readily as -> the : 1
readily as the -> third : 1
as the third -> can : 1
the third can -> be : 1
third can be -> converted : 1
type is determined -> as : 1
is determined as -> both : 1
is determined as -> shown : 1
is determined as -> an : 1
is determined as -> is : 1
determined as both -> operands : 1
as both operands -> have : 1
operands have the -> same : 1
the same that -> is : 1
same that is -> the : 1
that is the -> type : 1
that is the -> you : 1
that is the -> same : 1
that is the -> only : 1
that is the -> and : 2
that is the -> some : 1
that is the -> lower : 1
that is the -> maximum : 1
that is the -> integer : 1
that is the -> public : 1
that is the -> behavior : 1
of the one -> operand : 1
of the one -> important : 1
the one operand -> is : 2
type is that -> of : 1
type is that -> represents : 2
type is that -> defines : 1
type is that -> supports : 1
the other one -> type : 1
other one type -> can : 1
one type can -> be : 1
the other type -> is : 1
other type is -> the : 1
other type is -> an : 1
the result an -> error : 1
the result an -> iterator : 1
result an error -> results : 1
results if each -> operand : 1
if each operand -> can : 1
each operand can -> be : 1
the other expression -> assigns : 1
other expression assigns -> its : 1
expression assigns its -> right : 1
assigns its right -> operand : 1
its right operand -> to : 1
right operand to -> its : 1
operand to its -> left : 1
to its left -> in : 1
to its left -> cannot : 1
its left in -> addition : 1
left in addition -> to : 1
addition to plain -> assignment : 1
to plain assignment -> there : 1
plain assignment there -> are : 1
assignment there are -> several : 1
there are several -> other : 1
there are several -> ways : 1
are several other -> assignment : 1
several other assignment -> each : 1
other assignment each -> of : 1
assignment each of -> which : 1
each of which -> is : 1
is a shorthand -> for : 1
shorthand for an -> arithmetic : 1
for an arithmetic -> operation : 1
an arithmetic operation -> and : 1
arithmetic operation and -> an : 1
operation and an -> the : 1
an the left -> operand : 3
left operand of -> an : 2
left operand of -> a : 1
operand of an -> assignment : 1
operand of an -> operator : 1
an assignment expression -> must : 1
assignment expression must -> be : 1
expression must be -> a : 1
expression must be -> an : 1
be a modifiable -> the : 1
a modifiable the -> result : 1
modifiable the result -> is : 1
left operand after -> the : 1
operand after the -> assignment : 1
after the assignment -> is : 1
the assignment is -> operators : 1
assignment is operators -> have : 1
is operators have -> the : 1
following to if -> the : 1
if the left -> operand : 4
left operand has -> class : 1
operand has class -> a : 1
has class a -> suitable : 1
class a suitable -> assignment : 1
a suitable assignment -> operator : 1
suitable assignment operator -> is : 1
assignment operator is -> for : 1
assignment operator is -> shorthand : 2
assignment operator is -> an : 3
assignment operator is -> private : 1
operator is for -> more : 1
is for more -> if : 1
more if the -> left : 1
operand is not -> of : 1
is not of -> class : 1
is not of -> a : 1
not of class -> and : 1
and the operands -> have : 1
the operands have -> different : 1
the operands have -> fundamental : 1
operands have different -> the : 1
have different the -> right : 1
different the right -> operand : 1
the left assignment -> operator : 1
left assignment operator -> is : 1
operator is shorthand -> for : 2
is shorthand for -> except : 2
is shorthand for -> the : 1
shorthand for except -> that : 2
for except that -> is : 2
except that is -> evaluated : 5
that is evaluated -> only : 5
evaluated only the -> type : 2
evaluated only the -> keyword : 1
only the type -> of : 2
be an arithmetic -> type : 1
arithmetic type or -> a : 1
conversions are performed -> for : 2
are performed for -> and : 2
performed for and -> the : 2
result is converted -> to : 2
type of assignment -> operator : 1
of assignment operator -> is : 1
be arithmetic the -> additive : 1
arithmetic the additive -> assignment : 1
the additive assignment -> which : 1
additive assignment which -> allow : 1
assignment which allow -> pointers : 1
which allow pointers -> because : 1
allow pointers because -> the : 1
pointers because the -> additive : 1
because the additive -> operators : 1
additive operators allow -> pointer : 1
operators allow pointer -> the : 1
allow pointer the -> usual : 1
type of an -> the : 1
type of an -> overriding : 1
type of an -> operator : 1
an the first -> form : 1
an the first -> size : 1
an the first -> part : 2
first form throws -> as : 1
form throws as -> the : 1
throws as the -> exception : 1
as the exception -> the : 1
the exception the -> second : 1
the exception the -> qualifiers : 1
the exception the -> function : 3
exception the second -> form : 1
second form rethrows -> the : 1
form rethrows the -> current : 1
rethrows the current -> exception : 1
rethrows the current -> pending : 1
the current exception -> if : 1
current exception if -> a : 1
exception if a -> program : 1
exception if a -> match : 1
if a program -> uses : 1
if a program -> does : 1
if a program -> requests : 1
if a program -> must : 1
if a program -> needs : 1
a program uses -> the : 1
a program uses -> must : 1
program uses the -> second : 1
uses the second -> and : 1
second and no -> exception : 1
and no exception -> is : 1
no exception is -> being : 1
no exception is -> is : 1
exception is being -> calls : 1
is being calls -> in : 1
being calls in -> for : 1
calls in for -> more : 1
in for more -> information : 4
in for more -> detailed : 1
in for more -> in : 2
in for more -> flexibility : 1
in for more -> class : 2
information about can -> throw : 1
about can throw -> any : 1
can throw any -> but : 1
can throw any -> default : 1
can throw any -> functions : 1
throw any but -> the : 1
throw any but -> a : 1
is to throw -> an : 2
to throw an -> object : 1
to throw an -> exception : 2
throw an object -> of : 1
of type or -> of : 1
of type or -> function : 1
of type or -> its : 1
type or of -> a : 1
or of a -> derived : 1
or of a -> the : 1
a derived especially -> a : 1
derived especially a -> class : 1
especially a class -> derived : 1
derived from one -> of : 2
from one of -> the : 2
from one of -> its : 1
the standard exception -> classes : 2
the standard exception -> returns : 1
the standard exception -> shows : 1
the standard exception -> the : 1
the standard exception -> for : 1
standard exception classes -> in : 1
standard exception classes -> and : 1
exception classes in -> with : 1
exception classes in -> the : 1
classes in with -> no : 1
in with no -> expression : 1
in with no -> all : 1
no expression initializes -> a : 1
expression initializes a -> temporary : 1
initializes a temporary -> exception : 1
a temporary exception -> and : 1
temporary exception and -> that : 1
exception and that -> object : 1
and that object -> is : 1
that object is -> thrown : 1
object is thrown -> to : 1
object is thrown -> from : 1
is thrown to -> the : 1
is thrown to -> report : 1
thrown to the -> exception : 1
to the exception -> which : 1
to the exception -> and : 1
the exception which -> can : 1
exception which can -> copy : 1
which can copy -> the : 1
can copy the -> exception : 1
copy the exception -> object : 1
the exception object -> in : 1
the exception object -> is : 6
the exception object -> according : 1
exception object in -> its : 1
object in its -> when : 1
in its when -> the : 1
its when the -> handler : 1
its when the -> character : 1
when the handler -> the : 1
the handler the -> object : 1
the handler the -> exception : 1
handler the object -> is : 1
is an implementation -> can : 3
is an implementation -> does : 1
an implementation can -> optimize : 1
an implementation can -> support : 1
an implementation can -> define : 2
an implementation can -> add : 1
an implementation can -> have : 1
an implementation can -> use : 1
implementation can optimize -> away : 1
can optimize away -> the : 1
can optimize away -> repeated : 1
optimize away the -> extra : 2
optimize away the -> copy : 1
optimize away the -> call : 2
away the extra -> copy : 1
away the extra -> execution : 1
the extra copy -> and : 1
extra copy and -> initialize : 1
copy and initialize -> the : 1
copy and initialize -> most : 1
and initialize the -> object : 1
and initialize the -> typeset : 1
initialize the object -> directly : 1
the object directly -> with : 1
object directly with -> the : 1
directly with the -> exception : 1
with the exception -> even : 1
with the exception -> and : 1
the exception even -> if : 1
exception even if -> the : 1
object is never -> the : 2
object is never -> returns : 1
never the class -> must : 1
have a copy -> the : 1
have a copy -> constructor : 1
a copy the -> statement : 1
copy the statement -> in : 1
the statement in -> for : 2
statement in for -> a : 1
statement in for -> information : 1
for a description -> of : 10
a description of -> how : 1
a description of -> the : 9
description of how -> exceptions : 1
of how exceptions -> are : 1
how exceptions are -> handled : 1
exceptions are handled -> and : 1
are handled and -> for : 1
handled and for -> examples : 1
and for examples -> of : 1
examples of see -> also : 1
of see also -> for : 1
information about specifications -> in : 1
about specifications in -> function : 1
specifications in function -> expression : 1
in function expression -> serializes : 1
function expression serializes -> expression : 1
expression serializes expression -> the : 1
serializes expression the -> comma : 1
expression the comma -> operator : 1
the comma operator -> evaluates : 1
the comma operator -> is : 1
the comma operator -> then : 1
the comma operator -> has : 1
comma operator evaluates -> its : 1
operator evaluates its -> left : 1
evaluates its left -> discards : 1
its left discards -> the : 1
left discards the -> and : 1
discards the and -> then : 1
and then evaluates -> the : 1
then evaluates the -> right : 1
then evaluates the -> like : 1
evaluates the right -> the : 1
right the result -> is : 1
of the right -> and : 1
of the right -> if : 1
right and the -> type : 1
the right if -> the : 1
right if the -> right : 1
is evaluated for -> a : 1
evaluated for a -> side : 1
for a side -> such : 1
a side such -> as : 1
side such as -> an : 1
as an assignment -> or : 1
an assignment or -> a : 1
assignment or a -> function : 1
a function comma -> operator : 1
function comma operator -> can : 1
comma operator can -> be : 1
operator can be -> in : 1
operator can be -> a : 1
operator can be -> candidate : 1
case the serial -> nature : 1
the serial nature -> is : 1
serial nature is -> both : 1
nature is both -> operands : 1
is both operands -> are : 1
and the operator -> function : 1
and the operator -> dereferences : 1
the operator function -> is : 1
the operator function -> name : 1
operator function is -> overloading : 1
function is overloading -> the : 1
is overloading the -> comma : 1
overloading the comma -> operator : 1
comma operator is -> seldom : 1
operator is seldom -> of : 1
is seldom of -> the : 1
seldom of the -> comma : 1
of the comma -> operator : 1
comma operator then -> and : 1
operator then and -> returns : 1
then and returns -> to : 1
and returns to -> use : 1
and returns to -> and : 1
and returns to -> the : 1
returns to use -> a : 1
use a comma -> expression : 1
use a comma -> enclose : 1
a comma expression -> as : 1
comma expression as -> a : 1
expression as a -> function : 1
a function argument -> or : 1
a function argument -> in : 1
function argument or -> in : 1
argument or in -> other : 1
or in other -> contexts : 1
or in other -> returns : 2
other contexts in -> which : 1
which a comma -> is : 1
a comma is -> enclose : 1
comma is enclose -> the : 1
is enclose the -> comma : 1
enclose the comma -> expression : 1
the comma expression -> in : 1
comma expression in -> angle : 1
expression in angle -> define : 1
in angle define -> and : 1
angle define and -> control : 1
define and control -> what : 1
and control what -> a : 1
control what a -> program : 1
what a program -> this : 1
a program this -> chapter : 1
program this chapter -> describes : 1
describes the syntax -> and : 2
syntax and rules -> for : 1
rules for and -> the : 1
and the statement -> syntax : 1
and the statement -> in : 1
the statement syntax -> rules : 1
the statement syntax -> is : 1
statement syntax rules -> apply : 1
syntax rules apply -> and : 1
rules apply and -> wherever : 1
apply and wherever -> a : 1
and wherever a -> statement : 1
wherever a statement -> is : 2
wherever a statement -> can : 1
a statement is -> called : 2
a statement is -> typically : 1
a statement is -> the : 1
statement is called -> you : 1
statement is called -> a : 1
is called you -> can : 1
called you can -> use : 1
can use any -> of : 2
can use any -> following : 1
of the statements -> in : 1
of the statements -> within : 1
the statements in -> this : 1
the statements in -> that : 1
statements in this -> syntax : 1
in this syntax -> descriptions : 1
this syntax descriptions -> in : 1
precise bnf statement -> computes : 1
bnf statement computes -> an : 1
statement computes an -> such : 1
computes an such -> as : 1
an such as -> a : 2
function call or -> the : 1
function call or -> other : 1
call or the -> expression : 1
or the expression -> result : 1
result is so -> the : 1
so the expression -> is : 1
expression is typically -> evaluated : 1
is typically evaluated -> for : 1
typically evaluated for -> its : 1
evaluated for its -> side : 1
for its side -> for : 1
its side for -> details : 1
side for details -> about : 1
about the statement -> syntax : 1
statement syntax is -> simply : 1
syntax is simply -> an : 1
is simply an -> optional : 1
simply an optional -> expression : 1
an optional expression -> followed : 1
optional expression followed -> by : 1
expression followed by -> a : 1
by a statement -> with : 1
a statement with -> no : 1
statement with no -> expression : 1
expression is called -> a : 1
is called a -> null : 1
is called a -> compound : 1
is called a -> it : 1
is called a -> which : 1
called a null -> statements : 1
a null statements -> are : 1
null statements are -> most : 1
statements are most -> often : 2
are most often -> used : 6
most often used -> for : 2
most often used -> as : 3
most often used -> to : 6
most often used -> with : 4
most often used -> in : 1
often used for -> loops : 1
often used for -> extremely : 1
often used for -> traits : 1
used for loops -> when : 1
for loops when -> no : 1
loops when no -> code : 1
when no code -> is : 1
no code is -> needed : 1
code is needed -> in : 1
needed in the -> loop : 1
in the loop -> are : 1
the loop are -> several : 1
loop are several -> examples : 1
are several examples -> of : 1
several examples of -> expression : 1
several examples of -> most : 1
examples of expression -> valid : 1
of expression valid -> but : 1
expression valid but -> pointless : 1
valid but pointless -> cout : 1
but pointless cout -> more : 1
pointless cout more -> typical : 1
cout more typical -> x : 1
more typical x -> y : 1
typical x y -> remember : 1
x y remember -> that : 1
y remember that -> assignment : 1
remember that assignment -> is : 1
that assignment is -> an : 1
assignment is an -> expression : 1
an expression null -> can : 1
expression null can -> appear : 1
null can appear -> anywhere : 1
can appear anywhere -> a : 2
can appear anywhere -> in : 2
appear anywhere a -> statement : 2
anywhere a statement -> and : 1
anywhere a statement -> which : 1
a statement and -> certain : 1
statement and certain -> statements : 1
and certain statements -> permit : 1
certain statements permit -> additional : 1
statements permit additional -> declarations : 1
permit additional declarations -> within : 1
additional declarations within -> those : 1
declarations within those -> made : 1
within those made -> in : 1
those made in -> a : 1
made in a -> substatement : 1
in a substatement -> a : 1
a substatement a -> selection : 1
substatement a selection -> or : 1
a selection or -> loop : 1
selection or loop -> are : 1
or loop are -> limited : 1
loop are limited -> in : 1
are limited in -> scope : 1
limited in scope -> to : 1
in scope to -> the : 1
scope to the -> even : 1
to the even -> if : 1
if the substatement -> is : 1
the substatement is -> not : 1
substatement is not -> a : 1
not a compound -> for : 1
a compound for -> the : 1
compound for the -> following : 1
the following int -> x : 1
following int x -> equivalent : 1
int x equivalent -> int : 1
x equivalent int -> x : 1
equivalent int x -> first : 1
int x first -> example : 1
x first example -> uses : 1
first example uses -> a : 1
example uses a -> declaration : 1
uses a declaration -> as : 1
a declaration as -> the : 1
a declaration as -> having : 1
declaration as the -> entire : 1
as the entire -> loop : 1
the entire loop -> and : 1
entire loop and -> the : 1
loop and the -> second : 1
the second uses -> a : 1
second uses a -> compound : 1
uses a compound -> statement : 1
a compound statement -> the : 1
a compound statement -> is : 2
a compound statement -> delimits : 1
a compound statement -> in : 1
a compound statement -> to : 1
a compound statement -> as : 1
a compound statement -> and : 1
a compound statement -> or : 1
compound statement the -> loop : 1
statement the loop -> body : 1
the loop body -> in : 1
the loop body -> executes : 1
the loop body -> always : 1
loop body in -> curly : 1
body in curly -> in : 1
in curly in -> both : 1
curly in both -> the : 1
in both the -> scope : 1
in both the -> stream : 1
both the scope -> of : 1
scope of is -> limited : 1
of is limited -> to : 1
is limited to -> the : 1
to the body -> of : 1
the simple declaration -> can : 1
simple declaration can -> appear : 1
declaration can appear -> wherever : 1
declaration can appear -> anywhere : 1
declaration can appear -> only : 1
can appear wherever -> a : 1
appear wherever a -> statement : 1
a statement can -> be : 1
a statement can -> have : 1
statement can be -> you : 1
statement can be -> used : 3
statement can be -> reached : 1
statement can be -> an : 1
can declare an -> a : 1
declare an a -> or : 1
an a or -> a : 1
or a namespace -> you : 1
a namespace you -> can : 1
namespace you can -> also : 1
also write a -> declaration : 1
write a declaration -> or : 1
declaration or you -> can : 1
declaration or you -> should : 1
declare a but -> not : 1
a but not -> define : 1
a but not -> friend : 1
but not define -> a : 1
define a although -> there : 1
a although there -> is : 1
although there is -> rarely : 1
there is rarely -> any : 2
is rarely any -> reason : 2
rarely any reason -> to : 2
any reason to -> declare : 1
any reason to -> do : 2
reason to declare -> a : 1
function you cannot -> define : 1
function you cannot -> use : 1
function you cannot -> specify : 1
you cannot define -> a : 1
you cannot define -> new : 1
cannot define a -> namespace : 1
cannot define a -> class : 1
namespace or declare -> a : 1
declare a traditional -> c : 1
a traditional c -> declarations : 1
traditional c declarations -> appear : 1
c declarations appear -> at : 1
declarations appear at -> the : 1
appear at the -> start : 2
appear at the -> top : 1
appear at the -> proper : 1
appear at the -> end : 1
at the start -> of : 12
at the start -> or : 2
start of each -> block : 1
of each block -> or : 1
each block or -> compound : 1
block or compound -> in : 1
or compound in -> in : 1
compound in in -> the : 1
in the declarations -> can : 1
in the declarations -> are : 1
the declarations can -> appear : 1
declarations can appear -> anywhere : 1
declarations can appear -> only : 1
a statement which -> means : 1
statement which means -> you : 1
which means you -> can : 1
means you can -> declare : 1
can declare variables -> close : 1
can declare variables -> in : 1
declare variables close -> to : 1
variables close to -> where : 1
close to where -> they : 1
to where they -> are : 1
where they are -> declarations : 1
where they are -> thereby : 1
they are declarations -> and : 1
are declarations and -> shows : 1
declarations and shows -> examples : 1
and shows examples -> of : 1
shows examples of -> how : 1
shows examples of -> friend : 1
of how can -> be : 1
how can be -> mixed : 1
be mixed with -> declarations : 1
mixed with declarations -> and : 1
with declarations and -> count : 1
declarations and count -> and : 1
and count and -> characters : 1
count and characters -> in : 1
and characters in -> the : 1
the standard int -> unsigned : 1
standard int unsigned -> long : 1
unsigned long using -> namespace : 1
long using namespace -> string : 1
using namespace string -> while : 2
using namespace string -> cout : 1
namespace string while -> bool : 1
namespace string while -> loop : 1
string while bool -> for : 1
while bool for -> i : 1
bool for i -> char : 1
for i char -> c : 1
i char c -> if : 1
char c if -> if : 1
c if if -> else : 1
c if if -> the : 1
if if else -> if : 1
if if else -> keyword : 1
if if else -> statement : 1
if if else -> switch : 1
if else if -> if : 1
if else if -> return : 1
if else if -> sorted : 1
else if if -> cout : 1
if if cout -> right : 1
if if cout -> and : 1
if cout right -> a : 1
cout right a -> construct : 1
right a construct -> can : 1
a construct can -> look : 1
construct can look -> like : 1
look like an -> expression : 1
like an expression -> statement : 1
an expression statement -> or : 2
expression statement or -> a : 2
statement or a -> these : 1
statement or a -> function : 1
statement or a -> that : 1
or a these -> ambiguities : 1
a these ambiguities -> are : 1
these ambiguities are -> resolved : 1
ambiguities are resolved -> in : 1
are resolved in -> favor : 1
favor of that -> seem : 1
of that seem -> like : 1
that seem like -> shows : 1
that seem like -> cls : 1
seem like shows -> some : 1
like shows some -> that : 1
shows some that -> look : 1
some that look -> like : 1
that look like -> they : 1
look like they -> might : 1
like they might -> be : 1
they might be -> that : 1
they might be -> global : 1
might be that -> seem : 1
be that seem -> like : 1
seem like cls -> int : 1
like cls int -> y : 1
cls int y -> int : 1
y int the -> following : 1
int the following -> are : 1
following are unambiguously -> constructing : 1
are unambiguously constructing -> instances : 1
unambiguously constructing instances -> of : 1
constructing instances of -> without : 1
instances of without -> the : 1
of without the -> redundant : 1
without the redundant -> they : 1
the redundant they -> would : 1
redundant they would -> look : 1
they would look -> like : 1
would look like -> not : 1
look like not -> declares : 1
like not declares -> a : 1
not declares a -> variable : 1
declares a variable -> x : 1
a variable x -> declares : 1
variable x declares -> a : 1
x declares a -> pointer : 1
declares a pointer -> y : 1
a pointer y -> and : 1
pointer y and -> statements : 1
y and statements -> permit : 1
and statements permit -> a : 1
statements permit a -> within : 1
permit a within -> each : 1
a within each -> x : 1
within each x -> cout : 1
each x cout -> the : 1
x cout the -> condition : 1
cout the condition -> contains : 1
the condition contains -> a : 1
condition contains a -> the : 1
contains a the -> scope : 1
contains a the -> declared : 1
contains a the -> declaration : 1
a the scope -> of : 2
of the declared -> name : 1
declared name extends -> to : 1
name extends to -> the : 1
extends to the -> end : 3
of the entire -> in : 1
of the entire -> the : 1
the entire in -> a : 1
entire in a -> name : 1
in a name -> declared : 1
a name declared -> in : 1
name declared in -> the : 2
in the condition -> of : 1
the condition of -> an : 1
condition of an -> statement : 1
of an statement -> is : 1
an statement is -> visible : 1
statement is visible -> in : 1
is visible in -> the : 1
visible in the -> part : 1
visible in the -> if : 1
in the part -> of : 1
a the condition -> object : 1
the condition object -> is : 1
condition object is -> created : 1
is created and -> destroyed : 1
is created and -> if : 1
is created and -> initial : 1
created and destroyed -> for : 1
created and destroyed -> with : 1
and destroyed for -> each : 1
destroyed for each -> iteration : 1
for each iteration -> of : 1
each iteration of -> the : 1
iteration of the -> the : 1
the the name -> cannot : 1
the the name -> ends : 1
the the name -> of : 1
the name cannot -> be : 1
name cannot be -> redeclared : 1
name cannot be -> used : 1
name cannot be -> the : 1
cannot be redeclared -> in : 2
be redeclared in -> the : 1
be redeclared in -> a : 1
be redeclared in -> its : 1
redeclared in the -> immediate : 1
in the immediate -> substatement : 1
the immediate substatement -> can : 1
immediate substatement can -> be : 1
substatement can be -> redeclared : 1
can be redeclared -> in : 1
redeclared in a -> nested : 1
a nested the -> name : 1
nested the name -> is : 1
name is not -> visible : 1
name is not -> automatically : 1
name is not -> expanded : 2
name is not -> function : 1
is not visible -> in : 2
is not visible -> outside : 1
not visible in -> subsequent : 1
not visible in -> the : 1
not visible in -> other : 1
visible in subsequent -> for : 1
in subsequent for -> d : 1
subsequent for d -> else : 1
for d else -> same : 1
d else same -> d : 1
else same d -> as : 1
same d as -> above : 1
d as above -> double : 1
as above double -> redeclare : 1
above double redeclare -> d : 1
double redeclare d -> if : 1
redeclare d if -> int : 1
d if int -> inner : 1
if int inner -> block : 1
int inner block -> cout : 1
inner block cout -> d : 1
block cout d -> no : 1
cout d no -> longer : 1
d no longer -> in : 1
no longer in -> the : 1
longer in the -> and : 1
and a loop -> permits : 1
a loop permits -> a : 1
loop permits a -> declaration : 1
permits a declaration -> in : 1
a declaration in -> its : 1
a declaration in -> the : 1
declaration in its -> unlike : 1
in its unlike -> those : 1
its unlike those -> other : 1
unlike those other -> it : 1
those other it -> also : 1
other it also -> allows : 1
it also allows -> a : 1
also allows a -> declaration : 1
allows a declaration -> to : 1
a declaration to -> initialize : 1
declaration to initialize -> the : 1
to initialize the -> both : 1
to initialize the -> loop : 1
to initialize the -> virtual : 1
to initialize the -> copy : 1
to initialize the -> returns : 1
to initialize the -> priority : 1
initialize the both -> declarations : 1
the both declarations -> are : 1
both declarations are -> in : 1
both declarations are -> qualifiers : 1
declarations are in -> the : 1
declarations are in -> separate : 1
the same see -> for : 1
the same see -> source : 1
same see for -> syntax : 1
see for syntax -> for : 1
see for syntax -> point : 1
for syntax for -> a : 1
syntax for a -> declaration : 1
syntax for a -> loop : 1
syntax for a -> pure : 1
for a declaration -> syntax : 1
a declaration syntax -> is : 1
declaration syntax is -> similar : 1
syntax is similar -> to : 1
similar to the -> syntax : 1
similar to the -> lifetime : 1
similar to the -> manner : 1
similar to the -> one : 1
similar to the -> standard : 1
similar to the -> in : 1
similar to the -> function : 2
similar to the -> string : 1
to the syntax -> of : 1
the syntax of -> a : 2
syntax of a -> simple : 1
syntax of a -> compound : 1
of a simple -> object : 1
of a simple -> the : 1
a simple object -> in : 1
a simple object -> that : 1
simple object in -> this : 1
object in this -> the : 1
object in this -> a : 1
this the initializer -> is : 1
initializer is required -> the : 1
is required the -> condition : 1
required the condition -> would : 1
the condition would -> not : 1
condition would not -> have : 1
would not have -> a : 1
not have a -> and : 1
not have a -> compound : 1
not have a -> default : 1
not have a -> or : 1
not have a -> fixed : 2
not have a -> valid : 2
not have a -> so : 1
not have a -> lowercase : 1
not have a -> uppercase : 1
not have a -> the : 1
not have a -> subscript : 1
not have a -> read : 1
not have a -> type : 1
have a and -> only : 1
a and only -> one : 1
and only one -> declarator : 1
only one declarator -> is : 1
one declarator is -> see : 1
declarator is see -> for : 1
specifiers and statement -> is : 1
and statement is -> a : 1
statement is a -> sequence : 1
statement is a -> loop : 1
sequence of zero -> or : 2
or more statements -> enclosed : 1
more statements enclosed -> within : 1
statements enclosed within -> curly : 1
enclosed within curly -> compound : 1
within curly compound -> statements : 1
curly compound statements -> are : 1
compound statements are -> frequently : 1
statements are frequently -> used : 1
are frequently used -> in : 1
frequently used in -> selection : 1
used in selection -> and : 1
in selection and -> they : 1
selection and they -> enable : 1
and they enable -> you : 1
they enable you -> to : 1
enable you to -> write : 1
you to write -> loop : 1
you to write -> a : 1
you to write -> and : 1
to write loop -> bodies : 1
write loop bodies -> that : 1
loop bodies that -> are : 1
bodies that are -> more : 1
that are more -> than : 1
are more than -> one : 1
than one statement -> among : 1
one statement among -> other : 1
statement among other -> a : 1
among other a -> compound : 1
other a compound -> statement : 1
compound statement is -> sometimes : 1
compound statement is -> not : 1
compound statement is -> confined : 1
statement is sometimes -> called : 1
sometimes called a -> is : 1
sometimes called a -> a : 1
sometimes called a -> header : 1
sometimes called a -> as : 1
sometimes called a -> x : 1
sometimes called a -> narrow : 1
sometimes called a -> fifo : 1
sometimes called a -> lifo : 1
called a is -> the : 1
is the syntax -> of : 1
is the syntax -> is : 1
of a compound -> compound : 1
of a compound -> statement : 1
a compound compound -> statement : 1
compound compound statement -> can : 1
compound statement can -> be : 1
a single statement -> wherever : 1
a single statement -> in : 1
a single statement -> can : 2
a single statement -> must : 1
single statement wherever -> a : 1
statement wherever a -> statement : 1
called a compound -> statement : 1
compound statement delimits -> a : 1
statement delimits a -> declarative : 1
delimits a declarative -> that : 1
a declarative that -> any : 1
declarative that any -> name : 1
that any name -> declared : 1
any name declared -> in : 1
in the compound -> statement : 1
the compound statement -> is : 1
the compound statement -> for : 2
statement is not -> visible : 1
not visible outside -> the : 1
visible outside the -> and : 1
outside the and -> names : 1
names in the -> statement : 1
names in the -> in : 1
names in the -> namespace : 1
names in the -> global : 1
in the statement -> can : 1
in the statement -> labels : 1
the statement can -> hide : 1
the statement can -> be : 1
statement can hide -> names : 1
hide names from -> outside : 1
names from outside -> the : 1
from outside the -> the : 1
the the lifetime -> of : 1
lifetime of any -> automatic : 1
of any automatic -> object : 1
any automatic object -> declared : 1
automatic object declared -> in : 1
object declared in -> a : 1
declared in a -> compound : 1
declared in a -> base : 1
declared in a -> standard : 1
in a compound -> statement : 1
statement is confined -> to : 1
is confined to -> that : 1
confined to that -> all : 1
to that all -> such : 1
that all such -> objects : 1
all such objects -> are : 1
such objects are -> destroyed : 1
are destroyed when -> execution : 1
are destroyed when -> a : 1
leaves the compound -> statement : 1
compound statement for -> any : 1
compound statement for -> that : 1
statement for any -> reason : 1
for any reason -> branching : 1
any reason branching -> outside : 1
reason branching outside -> the : 1
branching outside the -> execution : 1
outside the execution -> reaches : 1
the execution reaches -> the : 1
reaches the end -> of : 4
the or an -> exception : 1
or an exception -> is : 2
exception is statements -> are : 1
is statements are -> most : 1
often used as -> the : 2
often used as -> a : 1
often used as -> an : 1
used as the -> bodies : 1
used as the -> left : 1
used as the -> value : 1
used as the -> basic : 1
used as the -> template : 1
as the bodies -> of : 1
the bodies of -> selection : 1
bodies of selection -> and : 1
of selection and -> loop : 1
selection and loop -> but : 1
and loop but -> you : 1
loop but you -> can : 1
can also stick -> a : 1
also stick a -> compound : 1
stick a compound -> statement : 1
compound statement in -> the : 1
statement in the -> middle : 1
statement in the -> substatement : 1
statement in the -> same : 1
statement in the -> function : 1
compound statement to -> restrict : 1
statement to restrict -> the : 1
to restrict the -> scope : 1
to restrict the -> use : 4
restrict the scope -> of : 1
scope of variables -> that : 1
of variables that -> are : 1
variables that are -> local : 1
that are local -> to : 1
that are local -> or : 1
local to the -> compound : 1
local to the -> outer : 1
local to the -> function : 1
to the compound -> see : 1
to the compound -> statement : 1
the compound see -> the : 1
compound see the -> examples : 1
chapter for uses -> of : 1
for uses of -> compound : 1
for uses of -> for : 1
uses of compound -> statement : 1
of compound statement -> chooses : 1
compound statement chooses -> one : 1
statement chooses one -> branch : 1
statement chooses one -> execution : 1
chooses one branch -> from : 1
one branch from -> multiple : 1
branch from multiple -> possibilities : 1
from multiple possibilities -> and : 1
multiple possibilities and -> executes : 1
possibilities and executes -> the : 1
and executes the -> statements : 1
executes the statements -> in : 1
statements in that -> the : 1
in that the -> two : 1
in that the -> compiler : 1
in that the -> identity : 1
in that the -> nested : 1
in that the -> only : 1
in that the -> third : 1
that the two -> selection : 1
that the two -> templates : 1
the two selection -> statements : 1
two selection statements -> supported : 1
selection statements supported -> by : 1
statements supported by -> are : 1
supported by are -> and : 1
by are and -> statement : 1
are and statement -> has : 1
and statement has -> one : 1
statement has one -> of : 1
statement has one -> case : 1
has one of -> the : 1
has one of -> two : 1
the following else -> the : 1
following else the -> first : 1
else the first -> the : 1
the first the -> is : 1
the first the -> conversion : 1
the first the -> header : 1
the first the -> return : 1
the first the -> new : 1
the first the -> array : 1
first the is -> converted : 1
a and if -> it : 2
and if it -> is : 6
is the is -> the : 1
is the is -> never : 1
is the is -> repeated : 1
is the is -> a : 1
is the is -> t : 1
is the is -> if : 1
is the is -> not : 1
is the is -> stored : 1
is the statement -> is : 2
the statement is -> and : 1
the statement is -> popped : 1
statement is and -> execution : 1
is and execution -> continues : 2
and execution continues -> with : 8
and execution continues -> by : 1
and execution continues -> if : 1
execution continues with -> the : 12
continues with the -> subsequent : 5
continues with the -> statement : 5
continues with the -> evaluation : 2
continues with the -> immediate : 1
with the subsequent -> second : 1
with the subsequent -> part : 1
with the subsequent -> if : 1
with the subsequent -> the : 1
with the subsequent -> is : 1
the subsequent second -> form : 1
subsequent second form -> chooses : 1
second form chooses -> one : 1
form chooses one -> of : 1
one of two -> alternative : 1
one of two -> when : 1
of two alternative -> code : 1
two alternative code -> the : 1
alternative code the -> is : 1
code the is -> converted : 1
is the first -> is : 1
is the first -> time : 1
is the first -> the : 1
is the first -> declaration : 1
is the first -> item : 6
is the first -> version : 2
is the first -> characters : 1
the first is -> the : 4
the first is -> smaller : 1
the first is -> a : 1
the first is -> greater : 1
the first is -> called : 1
first is the -> second : 1
first is the -> input : 1
first is the -> return : 2
second is declarations -> in : 1
is declarations in -> the : 1
the first statement -> are : 1
the first statement -> can : 1
the first statement -> in : 1
first statement are -> not : 1
statement are not -> visible : 1
are not visible -> in : 1
the if statements -> are : 1
if statements are -> the : 1
statements are the -> part : 1
are the part -> binds : 1
are the part -> of : 1
the part binds -> with : 1
part binds with -> the : 1
binds with the -> preceding : 1
with the preceding -> if : 1
the preceding if -> shows : 1
preceding if shows -> nested : 1
if shows nested -> if : 1
shows nested if -> if : 1
nested if if -> cout : 1
if cout and -> are : 1
cout and are -> else : 1
cout and are -> statement : 1
and are else -> cout : 1
are else cout -> is : 1
else cout is -> but : 1
cout is but -> is : 2
is but is -> else : 2
is but is -> linear : 1
is but is -> large : 1
but is else -> if : 1
but is else -> cout : 1
is else if -> cout : 1
else if cout -> is : 1
if cout is -> but : 1
is else cout -> and : 1
else cout and -> are : 1
and are statement -> chooses : 1
are statement chooses -> one : 1
chooses one execution -> path : 1
one execution path -> from : 1
execution path from -> among : 1
path from among -> many : 1
from among many -> the : 1
among many the -> syntax : 1
many the syntax -> must : 1
the syntax must -> have : 1
syntax must have -> an : 1
or enumerated or -> be : 1
enumerated or be -> of : 1
or be of -> a : 1
be of a -> class : 1
class type in -> which : 1
class type in -> an : 1
which the class -> has : 1
which the class -> is : 1
a single conversion -> function : 1
single conversion function -> to : 1
conversion function to -> an : 1
conversion function to -> one : 1
function to an -> integral : 1
enumerated the is -> evaluated : 1
the is evaluated -> its : 1
the is evaluated -> at : 1
the is evaluated -> and : 1
the is evaluated -> before : 1
is evaluated its -> value : 1
evaluated its value -> is : 1
value is compared -> against : 1
is compared against -> the : 1
compared against the -> labels : 1
against the labels -> in : 1
the labels in -> the : 1
the labels in -> must : 1
labels in the -> if : 1
the if a -> label : 1
the if a -> program : 1
if a label -> matches : 1
a label matches -> the : 1
label matches the -> execution : 1
matches the execution -> continues : 2
the execution continues -> with : 1
the execution continues -> after : 1
with the statement -> immediately : 3
with the statement -> that : 1
with the statement -> following : 1
the statement immediately -> after : 2
the statement immediately -> following : 2
statement immediately after -> the : 2
immediately after the -> if : 1
immediately after the -> deleted : 1
immediately after the -> last : 1
immediately after the -> performance : 5
immediately after the -> end : 1
immediately after the -> currency : 1
after the if -> no : 1
after the if -> one : 1
the if no -> matches : 1
the if no -> handler : 1
the if no -> characters : 1
if no matches -> the : 1
if no matches -> are : 2
no matches the -> execution : 1
execution continues after -> the : 1
continues after the -> if : 1
the if one -> is : 1
if one is -> if : 1
if one is -> is : 1
one is if -> there : 1
is if there -> is : 5
is no the -> is : 1
no the is -> skipped : 1
the is skipped -> and : 1
is skipped and -> execution : 1
skipped and execution -> continues : 1
the subsequent part -> of : 1
subsequent part of -> a : 1
of a statement -> is : 1
of a statement -> exits : 2
statement is typically -> a : 1
is typically a -> compound : 2
typically a compound -> in : 1
typically a compound -> the : 1
a compound in -> which : 1
compound in which -> every : 1
in which every -> substatement : 1
which every substatement -> has : 1
every substatement has -> one : 1
substatement has one -> or : 1
has one or -> more : 1
or more labels -> or : 1
more labels or -> a : 1
labels or a -> the : 1
a the syntax -> for : 2
syntax for and -> labels : 1
syntax for and -> both : 1
for and labels -> default : 1
and labels default -> must : 1
labels default must -> have : 1
default must have -> an : 1
enumerated the value -> is : 1
value is implicitly -> converted : 1
value is implicitly -> cast : 1
a single all -> must : 1
single all must -> have : 1
all must have -> different : 1
must have different -> a : 1
have different a -> single : 1
have different a -> for : 1
different a single -> statement : 1
single statement in -> the : 1
in the substatement -> can : 1
in the substatement -> unless : 1
in the substatement -> in : 1
the substatement can -> have : 1
substatement can have -> multiple : 1
can have multiple -> and : 1
can have multiple -> including : 1
can have multiple -> functions : 1
can have multiple -> declarations : 2
can have multiple -> if : 1
can have multiple -> access : 1
can have multiple -> instantiation : 1
can have multiple -> instantiations : 1
can have multiple -> you : 1
have multiple and -> a : 1
multiple and a -> single : 1
single statement can -> have : 2
statement can have -> any : 1
statement can have -> a : 1
statement can have -> multiple : 2
statement can have -> at : 1
can have any -> number : 3
have any number -> of : 3
number of like -> c : 1
of like c -> and : 1
like c and -> but : 1
c and but -> unlike : 1
and but unlike -> most : 1
but unlike most -> other : 1
unlike most other -> a : 1
most other a -> or : 1
other a or -> label : 1
a or label -> does : 1
or label does -> not : 1
label does not -> affect : 1
does not affect -> control : 1
does not affect -> the : 2
does not affect -> void : 1
not affect control -> execution : 1
affect control execution -> continues : 1
control execution continues -> from : 1
execution continues from -> one : 1
execution continues from -> the : 1
continues from one -> case : 1
from one case -> to : 1
one case to -> the : 1
case to the -> which : 1
which is known -> as : 1
is known as -> to : 1
is known as -> a : 1
is known as -> the : 4
is known as -> programmers : 1
is known as -> partial : 1
known as to -> the : 2
as to the -> next : 1
as to the -> integer : 1
as to the -> writes : 1
to the next -> use : 1
to the next -> two : 1
to the next -> and : 1
to the next -> but : 4
to the next -> if : 1
to the next -> character : 2
to the next -> element : 2
the next use -> the : 1
next use the -> statement : 1
use the statement -> later : 1
use the statement -> to : 2
the statement later -> in : 1
statement later in -> this : 1
in this to -> exit : 1
in this to -> learn : 2
this to exit -> from : 1
to exit from -> a : 2
exit from a -> can : 1
exit from a -> z : 1
from a can -> be : 1
most one case -> in : 1
one case in -> a : 1
case in a -> it : 1
it can appear -> anywhere : 1
it can appear -> more : 1
it can appear -> in : 1
appear anywhere in -> the : 2
the case does -> not : 1
case does not -> have : 1
to be as -> in : 1
be as in -> some : 1
as in some -> and : 1
in some and -> labels : 1
some and labels -> appear : 1
and labels appear -> at : 1
labels appear at -> the : 1
at the top -> level : 1
at the top -> of : 4
the top level -> of : 1
top level of -> the : 1
level of the -> they : 1
of the they -> can : 1
the they can -> appear : 1
they can appear -> in : 1
appear in nested -> but : 1
in nested but -> that : 1
nested but that -> makes : 1
but that makes -> the : 1
that makes the -> statements : 1
makes the statements -> hard : 1
the statements hard -> to : 1
statements hard to -> in : 1
to in nested -> and : 1
in nested and -> labels : 1
nested and labels -> apply : 1
and labels apply -> only : 1
labels apply only -> to : 1
only to the -> innermost : 2
only to the -> human : 1
only to the -> streams : 1
only to the -> definition : 1
only to the -> explicit : 1
to the innermost -> switch : 1
to the innermost -> to : 1
the innermost switch -> should : 1
innermost switch should -> not : 1
switch should not -> define : 1
should not define -> any : 1
not define any -> objects : 1
not define any -> see : 1
define any objects -> in : 1
any objects in -> the : 1
objects in the -> substatement : 1
objects in the -> memory : 1
the substatement unless -> they : 1
substatement unless they -> are : 1
unless they are -> enclosed : 1
they are enclosed -> in : 1
enclosed in a -> nested : 1
a nested compound -> when : 1
nested compound when -> the : 1
compound when the -> dispatches : 1
when the dispatches -> control : 1
the dispatches control -> to : 1
dispatches control to -> a : 1
control to a -> particular : 1
to a particular -> it : 1
to a particular -> function : 1
to a particular -> port : 1
to a particular -> locales : 1
to a particular -> message : 1
a particular it -> might : 1
particular it might -> jump : 1
it might jump -> over : 1
might jump over -> the : 1
jump over the -> jumping : 1
over the jumping -> over : 1
the jumping over -> a : 1
jumping over a -> declaration : 1
over a declaration -> results : 1
a declaration results -> in : 2
declaration results in -> undefined : 2
in undefined behavior -> unless : 2
undefined behavior unless -> the : 2
behavior unless the -> declared : 1
behavior unless the -> declaration : 1
unless the declared -> object : 1
the declared object -> has : 2
declared object has -> pod : 1
declared object has -> automatic : 1
object has pod -> type : 2
has pod type -> and : 2
pod type and -> is : 1
pod type and -> no : 1
type and is -> not : 1
type and is -> the : 1
type and is -> used : 1
and is not -> shows : 1
and is not -> necessarily : 1
and is not -> an : 2
and is not -> but : 2
and is not -> which : 1
and is not -> assigning : 1
and is not -> the : 1
and is not -> is : 1
and is not -> if : 1
and is not -> in : 2
is not shows -> sample : 1
not shows sample -> color : 1
shows sample color -> white : 1
sample color white -> color : 1
color white color -> unsigned : 1
color white color -> int : 1
white color unsigned -> void : 1
color unsigned void -> using : 1
unsigned void using -> int : 1
void using int -> r : 1
using int r -> int : 1
int r int -> c : 1
r int c -> switch : 1
int c switch -> cout : 1
c switch cout -> is : 1
switch cout is -> never : 1
cout is never -> but : 1
is never but -> it : 1
never but it -> is : 1
it is case -> cout : 1
is case cout -> forget : 1
case cout forget -> the : 1
cout forget the -> break : 1
forget the break -> case : 1
the break case -> case : 1
break case case -> case : 1
case case case -> cout : 1
case case cout -> omitting : 1
case cout omitting -> break : 1
cout omitting break -> is : 1
omitting break is -> a : 1
break is a -> common : 1
a common cout -> switch : 1
common cout switch -> case : 1
cout switch case -> const : 1
switch case const -> int : 1
case const int -> x : 1
int x cout -> this : 1
x cout this -> case : 1
cout this case -> is : 1
this case is -> private : 1
case is private -> to : 1
is private to -> the : 1
private to the -> inner : 1
private to the -> derived : 1
to the inner -> switch : 1
the inner switch -> c : 1
the inner switch -> statement : 1
inner switch c -> if : 1
switch c if -> if : 1
if if the -> color : 1
if the color -> is : 1
the color is -> the : 1
color is the -> switch : 1
is the switch -> branches : 1
the switch branches -> directly : 1
switch branches directly -> to : 1
branches directly to -> for : 1
directly to for -> colors : 1
to for colors -> other : 1
for colors other -> than : 1
colors other than -> and : 1
other than and -> execution : 1
than and execution -> jumps : 1
and execution jumps -> to : 1
execution jumps to -> the : 1
jumps to the -> default : 1
jumps to the -> end : 1
jumps to the -> label : 1
to the default -> label : 1
to the default -> seed : 1
the default label -> and : 1
default label and -> arrives : 1
label and arrives -> here : 1
and arrives here -> if : 1
arrives here if -> r : 1
here if r -> case : 1
if r case -> cout : 1
r case cout -> yellow : 1
case cout yellow -> or : 1
cout yellow or -> r : 1
yellow or r -> a : 1
or r a -> break : 1
r a break -> after : 1
a break after -> the : 1
break after the -> last : 1
the last case -> is : 1
last case is -> not : 1
last case is -> default : 1
case is not -> but : 1
is not but -> is : 3
not but is -> a : 1
not but is -> updated : 2
but is a -> good : 1
but is a -> reserved : 1
is a good -> idea : 1
is a good -> choice : 1
a good idea -> if : 1
good idea if -> you : 1
idea if you -> add : 1
if you add -> a : 1
you add a -> case : 1
add a case -> outer : 1
a case outer -> statement : 1
case outer statement -> has : 1
outer statement has -> one : 1
has one case -> for : 1
one case for -> another : 1
case for another -> case : 1
for another case -> for : 1
another case for -> or : 1
case for or -> a : 1
for or a -> default : 1
for or a -> read : 1
or a default -> and : 1
a default and -> a : 2
default and a -> final : 1
default and a -> copy : 1
and a final -> case : 1
a final case -> for : 1
final case for -> the : 1
case for the -> first : 1
first two branches -> are : 1
two branches are -> and : 1
branches are and -> each : 1
are and each -> ends : 1
are and each -> parameter : 1
and each ends -> with : 1
each ends with -> a : 1
ends with a -> statement : 1
ends with a -> pointer : 1
with a statement -> to : 1
a statement to -> exit : 1
statement to exit -> the : 2
statement to exit -> from : 1
to exit the -> case : 1
to exit the -> statement : 1
exit the case -> for : 1
the case for -> is : 1
case for is -> unusual : 1
for is unusual -> and : 1
is unusual and -> hard : 1
unusual and hard -> to : 1
and hard to -> read : 1
hard to read -> because : 1
to read because -> it : 1
read because it -> is : 1
it is buried -> in : 1
is buried in -> an : 1
buried in an -> the : 1
an the same -> statement : 1
an the same -> applies : 1
the same statement -> can : 1
the same statement -> cannot : 1
same statement can -> be : 1
can be reached -> from : 1
be reached from -> the : 1
reached from the -> default : 1
from the default -> case : 1
the default case -> when : 1
default case when -> the : 1
case when the -> condition : 1
when the condition -> is : 1
the condition is -> true : 1
the condition is -> in : 1
the condition is -> and : 1
condition is true -> default : 1
is true default -> case : 1
true default case -> has : 1
default case has -> a : 1
case has a -> nested : 1
has a nested -> which : 1
a nested which -> has : 1
nested which has -> a : 1
which has a -> single : 1
which has a -> unicode : 1
single the inner -> switch : 1
inner switch statement -> is : 1
switch statement is -> atypical : 1
statement is atypical -> because : 1
is atypical because -> it : 1
atypical because it -> does : 1
because it does -> not : 1
have a compound -> statement : 1
compound statement as -> its : 1
statement as its -> statement : 1
as its statement -> allows : 1
its statement allows -> you : 1
statement allows you -> to : 1
allows you to -> execute : 1
allows you to -> do : 1
you to execute -> a : 1
to execute a -> statement : 1
execute a statement -> multiple : 1
a statement multiple -> two : 1
statement multiple two -> loop : 1
multiple two loop -> and : 1
two loop and -> test : 1
loop and test -> at : 1
and test at -> the : 1
test at the -> top : 1
the top of -> the : 6
top of the -> the : 2
top of the -> and : 2
top of the -> at : 1
top of the -> header : 1
the the statement -> tests : 1
the statement tests -> at : 1
statement tests at -> the : 1
tests at the -> thereby : 1
tests at the -> end : 1
at the thereby -> ensuring : 1
the thereby ensuring -> that : 1
thereby ensuring that -> the : 1
thereby ensuring that -> every : 1
thereby ensuring that -> its : 1
ensuring that the -> loop : 1
that the loop -> body : 1
loop body executes -> at : 1
body executes at -> least : 1
executes at least -> this : 1
executes at least -> cout : 1
at least this -> section : 1
least this section -> describes : 1
this section describes -> the : 1
this section describes -> what : 1
section describes the -> loop : 1
section describes the -> types : 1
describes the loop -> see : 1
the loop see -> for : 2
loop see for -> additional : 1
loop see for -> more : 1
see for additional -> statements : 1
see for additional -> exception : 1
for additional statements -> that : 1
additional statements that -> affect : 1
statements that affect -> or : 1
that affect or -> control : 1
affect or control -> loop : 1
or control loop -> loop : 1
control loop loop -> statement : 1
loop loop statement -> can : 1
loop statement can -> declare : 1
statement can declare -> variables : 1
declare variables in -> the : 1
variables in the -> scope : 1
of the every -> time : 1
of the every -> instance : 1
of the every -> item : 2
the every time -> the : 1
every time the -> loop : 1
every time the -> argument : 1
every time the -> function : 2
time the loop -> it : 1
the loop it -> reenters : 1
loop it reenters -> the : 1
it reenters the -> substatement : 1
reenters the substatement -> this : 1
the substatement this -> means : 1
substatement this means -> objects : 1
this means objects -> that : 1
means objects that -> are : 1
objects that are -> declared : 1
objects that are -> instances : 1
objects that are -> logically : 1
objects that are -> local : 1
objects that are -> not : 1
objects that are -> managed : 1
the substatement in -> the : 1
substatement in the -> are : 1
in the are -> created : 1
in the are -> and : 1
in the are -> converted : 2
the are created -> and : 1
are created and -> destroyed : 1
and destroyed with -> every : 1
destroyed with every -> loop : 1
with every loop -> statement : 1
every loop statement -> repeats : 1
loop statement repeats -> a : 1
statement repeats a -> statement : 1
repeats a statement -> while : 1
a statement while -> a : 1
statement while a -> condition : 1
while a condition -> is : 1
while a condition -> can : 1
a condition is -> the : 1
condition is the -> syntax : 1
the syntax is -> evaluated : 1
the syntax is -> the : 1
the syntax is -> a : 1
syntax is evaluated -> and : 1
is evaluated and -> converted : 2
evaluated and converted -> to : 2
and converted to -> if : 2
and converted to -> characters : 1
value is is -> and : 1
value is is -> exactly : 4
value is is -> the : 1
value is is -> assigned : 2
is is and -> the : 1
is is and -> nothing : 1
and the loop -> if : 1
the loop if -> the : 1
loop if the -> value : 1
is the loop -> finishes : 3
is the loop -> executes : 1
is the loop -> body : 1
is the loop -> ends : 1
the loop finishes -> and : 3
loop finishes and -> execution : 3
finishes and execution -> continues : 3
the subsequent if -> is : 1
subsequent if is -> the : 1
the first time -> it : 1
the first time -> the : 1
the first time -> is : 1
the first time -> an : 1
first time it -> is : 1
time it is -> the : 1
time it is -> safe : 1
the is never -> statement : 1
is never statement -> in : 1
never statement in -> a : 1
statement in a -> loop : 3
statement in a -> a : 1
in a loop -> branches : 2
in a loop -> jumps : 1
a loop branches -> to : 2
loop branches to -> the : 2
branches to the -> top : 2
to the top -> of : 2
the and execution -> continues : 2
with the evaluation -> of : 1
with the evaluation -> and : 1
the evaluation of -> a : 1
the evaluation of -> the : 1
evaluation of a -> statement : 1
a statement exits -> loop : 1
a statement exits -> the : 1
a statement exits -> statements : 1
statement exits loop -> is : 1
exits loop is -> typically : 1
loop is typically -> used : 1
is typically used -> for : 4
is typically used -> only : 1
is typically used -> by : 2
is typically used -> as : 1
typically used for -> unbounded : 1
typically used for -> a : 1
typically used for -> error : 2
used for unbounded -> that : 1
for unbounded that -> when : 1
unbounded that when -> you : 1
that when you -> know : 1
when you know -> beforehand : 1
when you know -> the : 2
you know beforehand -> how : 1
know beforehand how -> many : 1
beforehand how many -> times : 1
how many times -> a : 1
how many times -> that : 1
many times a -> loop : 1
times a loop -> will : 1
a loop will -> with : 1
loop will with -> the : 1
will with the -> while : 1
with the while -> shows : 1
with the while -> sort : 1
the while shows -> how : 1
while shows how -> the : 1
how the loop -> can : 1
the loop can -> be : 1
loop can be -> used : 1
used to control -> with : 1
to control with -> the : 1
control with the -> while : 1
the while sort -> lines : 1
while sort lines -> of : 1
sort lines of -> int : 1
lines of int -> using : 1
of int using -> namespace : 1
string while loop -> is : 1
while loop is -> a : 1
is a generalization -> of : 2
a generalization of -> the : 2
a generalization of -> called : 1
a generalization of -> and : 1
generalization of the -> traditional : 1
generalization of the -> standard : 1
of the traditional -> counted : 1
the traditional counted -> loop : 1
traditional counted loop -> that : 1
counted loop that -> appears : 1
loop that appears -> in : 1
that appears in -> most : 1
that appears in -> or : 2
appears in most -> programming : 1
in most programming -> the : 1
most programming the -> syntax : 1
programming the syntax -> for : 1
for a loop -> and : 1
a loop and -> parts : 1
loop and parts -> are : 1
and parts are -> the : 1
and parts are -> in : 1
and parts are -> all : 1
parts are the -> part : 1
of the statement -> can : 1
be an expression -> or : 1
be an expression -> statement : 1
or a simple -> the : 1
a simple the -> part : 1
a simple the -> can : 1
simple the part -> offers : 1
the part offers -> more : 1
part offers more -> flexibility : 1
offers more flexibility -> than : 1
more flexibility than -> a : 1
more flexibility than -> member : 1
flexibility than a -> while : 1
than a while -> a : 1
a while a -> condition : 1
a condition can -> declare : 1
condition can declare -> only : 1
can declare only -> one : 1
declare only one -> the : 1
only one the -> part : 1
only one the -> type : 1
one the part -> can : 1
the part can -> declare : 1
part can declare -> multiple : 1
can declare multiple -> the : 1
declare multiple the -> syntax : 1
multiple the syntax -> for : 1
syntax for the -> part : 1
for the part -> with : 1
the part with -> the : 1
part with the -> the : 1
with the the -> scope : 1
with the the -> second : 8
with the the -> unary : 1
the the scope -> of : 1
the the scope -> is : 1
of the part -> extends : 1
the part extends -> to : 1
part extends to -> the : 1
the and parts -> are : 1
the and parts -> must : 1
parts are in -> the : 1
same scope as -> the : 1
same scope as -> and : 1
same scope as -> operator : 1
scope as the -> loop : 1
as the loop -> see : 1
information about specifiers -> and : 1
about specifiers and -> loop : 1
specifiers and loop -> starts : 1
and loop starts -> by : 1
loop starts by -> executing : 1
starts by executing -> the : 1
by executing the -> if : 1
executing the if -> it : 1
the if it -> then : 1
if it then -> evaluates : 1
it then evaluates -> the : 1
it then evaluates -> and : 1
evaluates the like -> a : 1
the like a -> if : 1
the like a -> performance : 1
like a if -> the : 1
the loop executes -> it : 1
loop executes it -> then : 1
executes it then -> evaluates : 1
then evaluates and -> reevaluates : 1
evaluates and reevaluates -> this : 1
and reevaluates this -> process : 1
reevaluates this process -> continues : 1
this process continues -> while : 1
process continues while -> is : 1
continues while is -> if : 1
while is if -> is : 1
the subsequent the -> part : 1
subsequent the part -> is : 1
the part is -> evaluated : 1
part is evaluated -> exactly : 1
is evaluated exactly -> the : 1
evaluated exactly the -> is : 1
exactly the is -> evaluated : 1
is evaluated at -> least : 1
evaluated at least -> the : 1
at least the -> might : 1
at least the -> range : 1
at least the -> following : 1
at least the -> type : 1
at least the -> new : 1
at least the -> capability : 1
least the might -> be : 1
the might be -> executed : 1
might be executed -> zero : 1
be executed zero -> most : 1
executed zero most -> common : 1
zero most common -> use : 1
most common use -> of : 3
of a loop -> is : 1
of a loop -> or : 1
of a loop -> if : 1
a loop is -> to : 1
loop is to -> count : 1
is to count -> a : 1
to count a -> bounded : 1
count a bounded -> although : 1
a bounded although -> its : 1
bounded although its -> flexibility : 1
although its flexibility -> makes : 1
its flexibility makes -> it : 1
flexibility makes it -> useful : 1
makes it useful -> for : 1
it useful for -> unbounded : 1
useful for unbounded -> as : 1
for unbounded as -> you : 1
unbounded as you -> can : 1
as you can -> see : 3
as you can -> have : 1
as you can -> with : 1
as you can -> it : 1
can see in -> uses : 1
can see in -> the : 1
can see in -> a : 1
can see in -> simple : 1
see in uses -> of : 1
in uses of -> for : 1
uses of for -> uses : 1
uses of for -> one : 1
of for uses -> of : 1
of for one -> way : 1
for one way -> to : 1
one way to -> implement : 4
one way to -> overload : 1
one way to -> write : 1
one way to -> nest : 1
one way to -> do : 2
one way to -> skip : 1
one way to -> use : 1
to implement the -> standard : 3
to implement the -> the : 1
to implement the -> shows : 1
to implement the -> typename : 1
to implement the -> algorithm : 1
to implement the -> preprocessor : 1
to implement the -> class : 2
implement the standard -> algorithm : 2
implement the standard -> typename : 1
implement the standard -> com : 1
the standard algorithm -> typename : 2
standard algorithm typename -> function : 1
standard algorithm typename -> typename : 1
algorithm typename function -> initer : 1
typename function initer -> function : 2
typename function initer -> func : 1
function initer function -> for : 1
function initer function -> names : 1
initer function for -> first : 1
function for first -> return : 1
for first return -> one : 1
for first return -> typename : 1
first return one -> way : 1
return one way -> to : 1
algorithm typename typename -> void : 1
typename typename void -> size : 3
typename typename void -> t : 1
typename typename void -> const : 3
typename typename void -> pred : 1
typename typename void -> fwditer : 1
typename typename void -> template : 1
typename typename void -> function : 1
typename void size -> generator : 2
typename void size -> const : 1
void size generator -> for : 1
void size generator -> function : 1
size generator for -> i : 1
generator for i -> i : 1
i i statement -> in : 1
i statement in -> a : 1
execution continues by -> evaluating : 1
continues by evaluating -> the : 1
by evaluating the -> and : 1
evaluating the and -> then : 1
then the a -> statement : 1
the a statement -> exits : 1
statement exits the -> loop : 1
exits the loop -> without : 1
the loop without -> evaluating : 1
loop without evaluating -> the : 1
evaluating the see -> later : 1
the see later -> in : 5
chapter for examples -> of : 1
examples of and -> and : 1
of and and -> parts : 1
of and and -> writing : 1
and and parts -> are : 1
parts are all -> if : 1
are all if -> the : 1
all if the -> or : 1
if the or -> parts : 1
the or parts -> are : 1
or parts are -> nothing : 1
parts are nothing -> happens : 1
are nothing happens -> to : 1
nothing happens to -> initialize : 1
happens to initialize -> the : 1
initialize the loop -> or : 1
the loop or -> after : 1
the loop or -> statement : 1
the loop or -> a : 1
the loop or -> an : 1
loop or after -> the : 1
after the statement -> if : 1
the statement if -> the : 1
statement if the -> is : 1
the is it -> defaults : 1
is it defaults -> to : 1
it defaults to -> statement : 1
defaults to statement -> is : 1
to statement is -> like : 1
statement is like -> a : 1
is like a -> except : 1
is like a -> for : 1
is like a -> but : 1
is like a -> function : 1
is like a -> destructor : 1
is like a -> static : 1
is like a -> pointer : 1
like a except -> that : 1
a except that -> it : 1
except that it -> tests : 1
except that it -> can : 1
except that it -> fills : 1
that it tests -> at : 1
it tests at -> the : 1
the loop the -> syntax : 1
loop the syntax -> while : 1
the syntax while -> is : 1
syntax while is -> then : 1
while is then -> the : 1
is then the -> is : 1
is then the -> character : 1
then the is -> evaluated : 1
the is repeated -> and : 1
is repeated and -> the : 1
repeated and the -> is : 1
the is checked -> if : 1
is checked if -> the : 1
checked if the -> is : 1
the subsequent is -> always : 1
subsequent is always -> executed : 1
is always executed -> at : 1
always executed at -> least : 1
executed at least -> statement : 1
at least statement -> in : 1
least statement in -> a : 1
a loop jumps -> to : 1
loop jumps to -> the : 1
end of and -> execution : 1
end of and -> negative : 1
of and execution -> continues : 1
the evaluation and -> test : 1
evaluation and test -> of : 1
and test of -> a : 1
test of a -> statement : 1
statement exits statements -> change : 1
exits statements change -> execution : 1
statements change execution -> from : 1
change execution from -> its : 1
execution from its -> normal : 1
from its normal -> when : 1
its normal when -> execution : 1
normal when execution -> leaves : 1
execution leaves a -> all : 1
leaves a all -> automatic : 1
a all automatic -> objects : 1
all automatic objects -> that : 1
automatic objects that -> were : 2
objects that were -> created : 1
objects that were -> declared : 1
that were created -> in : 1
were created in -> that : 1
created in that -> scope : 1
in that scope -> are : 1
that scope are -> for : 1
scope are for -> a : 1
discussion of automatic -> and : 1
of automatic and -> other : 1
automatic and other -> object : 1
and other object -> supports : 1
other object supports -> the : 1
object supports the -> following : 1
supports the following -> control : 1
the following control -> statement : 1
following control statement -> can : 1
control statement can -> be : 1
in the body -> of : 3
a or it -> terminates : 1
or it terminates -> the : 1
it terminates the -> loop : 1
terminates the loop -> or : 1
loop or statement -> and : 1
or statement and -> transfers : 1
statement and transfers -> execution : 1
and transfers execution -> to : 1
transfers execution to -> the : 1
transfers execution to -> a : 1
execution to the -> statement : 1
to the statement -> immediately : 1
to the statement -> that : 2
to the statement -> following : 1
statement immediately following -> the : 2
immediately following the -> loop : 1
immediately following the -> end : 1
following the loop -> or : 1
loop or a -> nested : 1
a nested loop -> or : 1
nested loop or -> the : 1
loop or the -> applies : 1
or the applies -> only : 1
the applies only -> to : 1
the innermost to -> break : 1
innermost to break -> out : 1
to break out -> of : 1
break out of -> multiple : 1
break out of -> nested : 1
out of multiple -> loops : 1
of multiple loops -> and : 1
multiple loops and -> you : 1
loops and you -> must : 1
use a statement -> or : 1
a statement or -> redesign : 1
a statement or -> the : 1
statement or redesign -> the : 1
or redesign the -> block : 1
redesign the block -> to : 1
the block to -> avoid : 1
block to avoid -> nested : 1
to avoid nested -> loops : 1
avoid nested loops -> and : 1
nested loops and -> switches : 1
loops and switches -> factoring : 1
and switches factoring -> the : 1
switches factoring the -> inner : 1
factoring the inner -> statement : 1
the inner statement -> into : 1
inner statement into -> a : 1
statement into a -> separate : 1
into a separate -> for : 1
a separate for -> break : 1
separate for break -> to : 1
for break to -> exit : 1
break to exit -> a : 2
to exit a -> shows : 1
to exit a -> one : 1
exit a shows -> a : 1
shows a simple -> use : 4
shows a simple -> implementation : 4
shows a simple -> class : 1
shows a simple -> way : 2
shows a simple -> program : 1
shows a simple -> signal : 1
a simple use -> of : 5
simple use of -> break : 1
simple use of -> the : 2
simple use of -> and : 1
simple use of -> to : 1
use of break -> to : 1
of break to -> exit : 1
exit a one -> way : 1
a one way -> to : 1
the standard typename -> initer : 1
the standard typename -> class : 1
standard typename initer -> initer : 1
typename initer initer -> predicate : 2
typename initer initer -> const : 1
initer initer predicate -> for : 1
initer initer predicate -> function : 1
initer predicate for -> first : 1
predicate for first -> if : 1
for first if -> return : 2
first if return -> statement : 1
first if return -> can : 1
if return statement -> can : 1
return statement can -> be : 1
a it causes -> the : 1
it causes the -> loop : 1
causes the loop -> to : 1
the loop to -> skip : 1
loop to skip -> the : 1
to skip the -> remainder : 1
skip the remainder -> of : 1
remainder of its -> body : 1
of its body -> and : 1
its body and -> immediately : 1
body and immediately -> retest : 1
and immediately retest -> its : 1
immediately retest its -> condition : 1
retest its condition -> prior : 1
its condition prior -> to : 1
condition prior to -> reiterating : 1
prior to reiterating -> the : 1
to reiterating the -> condition : 1
reiterating the condition -> is : 1
condition is in -> a : 1
is evaluated before -> testing : 1
evaluated before testing -> the : 1
before testing the -> continue : 1
testing the continue -> in : 1
the continue in -> a : 1
continue in a -> shows : 1
continue in a -> int : 1
in a shows -> how : 3
a shows how -> is : 2
a shows how -> a : 3
a shows how -> to : 3
a shows how -> the : 1
shows how is -> used : 1
shows how is -> if : 1
shows how is -> whether : 1
how is used -> in : 1
is used in -> a : 2
is used in -> the : 3
is used in -> any : 1
is used in -> every : 1
is used in -> two : 1
is used in -> virtual : 1
is used in -> digit : 1
is used in -> placement : 1
in a continue -> in : 1
a continue in -> a : 1
in a int -> using : 2
a int using -> using : 1
a int using -> namespace : 1
int using using -> cout : 1
using using cout -> a : 1
using cout a -> double : 1
cout a double -> cin : 1
a double cin -> if : 1
double cin if -> input : 1
cin if input -> exit : 1
if input exit -> else : 1
input exit else -> if : 1
exit else if -> invalid : 1
else if invalid -> skip : 1
if invalid skip -> the : 1
invalid skip the -> rest : 1
skip the rest -> of : 2
of the line -> cout : 1
of the line -> continues : 1
the line cout -> x : 1
line cout x -> statement : 1
cout x statement -> transfers : 1
x statement transfers -> control : 1
statement transfers control -> to : 2
transfers control to -> the : 2
transfers control to -> another : 1
control to the -> statement : 1
control to the -> evaluation : 1
the statement that -> has : 1
the statement that -> follows : 2
statement that has -> as : 1
that has as -> a : 1
has as a -> the : 1
as a the -> goto : 1
as a the -> specifier : 1
as a the -> string : 1
a the goto -> statement : 1
the goto statement -> and : 1
goto statement and -> the : 1
statement and the -> labeled : 1
and the labeled -> statement : 1
the labeled statement -> must : 1
labeled statement must -> be : 1
statement must be -> in : 1
must be in -> the : 3
must be in -> min : 1
must be in -> a : 1
the same jumping -> into : 1
same jumping into -> a : 1
jumping into a -> block : 1
into a block -> is : 1
a block is -> usually : 1
block is usually -> a : 1
is usually a -> bad : 3
usually a bad -> in : 1
usually a bad -> but : 1
usually a bad -> a : 1
a bad in -> if : 1
bad in if -> the : 1
if the jump -> bypasses : 1
the jump bypasses -> the : 1
jump bypasses the -> declaration : 1
bypasses the declaration -> of : 1
an the results -> are : 1
results are undefined -> unless : 1
are undefined unless -> the : 1
undefined unless the -> object : 1
unless the object -> has : 1
the object has -> pod : 1
the object has -> type : 1
the object has -> been : 1
type and no -> for : 1
and no for -> information : 1
no for information -> about : 1
about pod types -> and : 1
pod types and -> shows : 1
types and shows -> some : 1
and shows some -> uses : 1
uses of int -> int : 1
of int int -> for : 1
of int int -> years : 2
int int for -> i : 1
i i for -> j : 1
i for j -> j : 1
for j j -> if : 1
j j if -> goto : 1
j if goto -> goto : 1
if goto goto -> values : 1
goto goto values -> for : 1
goto values for -> the : 1
values for the -> return : 1
values for the -> with : 1
values for the -> the : 1
values for the -> following : 1
for the return -> statement : 1
for the return -> type : 1
for the return -> value : 4
for the return -> it : 1
the return statement -> transfers : 1
return statement transfers -> execution : 1
statement transfers execution -> out : 1
statement transfers execution -> to : 1
transfers execution out -> of : 1
execution out of -> a : 1
out of a -> function : 1
out of a -> domain : 1
first form does -> not : 1
form does not -> return : 1
return a so -> it : 1
so it should -> be : 1
it should be -> used : 1
should be used -> only : 1
only in functions -> of : 1
in functions of -> type : 1
functions of type -> in : 1
in the latter -> form : 1
in the latter -> the : 1
in the latter -> is : 1
the latter form -> cannot : 1
latter form cannot -> be : 1
form cannot be -> used : 1
used in constructors -> and : 1
in constructors and -> in : 1
constructors and in -> a : 1
and in a -> function : 1
a function of -> type : 1
function of type -> you : 1
type you can -> use : 2
use the second -> but : 1
the second but -> only : 1
second but only -> if : 1
but only if -> has : 1
but only if -> the : 1
but only if -> an : 2
only if has -> type : 1
only if has -> a : 1
has type see -> for : 1
type see for -> more : 1
type see for -> the : 1
information about returning -> from : 1
about returning from -> with : 1
returning from with -> no : 1
from with no -> value : 1
of is converted -> to : 1
to the return -> type : 1
to the return -> see : 1
to the return -> function : 1
to the return -> value : 16
to the return -> an : 1
type and returned -> to : 1
and returned to -> the : 1
returned to the -> the : 2
returned to the -> operating : 2
the the compiler -> is : 3
the the compiler -> implicitly : 1
the the compiler -> deduces : 1
free to construct -> a : 1
construct a temporary -> object : 1
construct a temporary -> string : 1
temporary object and -> copy : 1
temporary object and -> binds : 1
object and copy -> when : 1
and copy when -> some : 1
copy when some -> compilers : 1
when some compilers -> optimize : 1
some compilers optimize -> away : 1
compilers optimize away -> the : 1
the extra execution -> reaches : 1
extra execution reaches -> the : 1
reaches the last -> statement : 1
the last statement -> of : 1
last statement of -> a : 1
statement of a -> function : 1
a function without -> executing : 1
function without executing -> a : 1
without executing a -> an : 1
executing a an -> implicit : 1
a an implicit -> is : 1
an implicit is -> if : 1
implicit is if -> the : 1
the function has -> a : 1
function has a -> return : 1
function has a -> hidden : 1
function has a -> race : 1
has a return -> the : 1
a return the -> behavior : 1
a return the -> details : 1
return the behavior -> is : 1
behavior is function -> is : 1
behavior is function -> function : 1
is function is -> if : 1
function is if -> it : 2
function is if -> the : 2
function is if -> for : 1
if it ends -> without : 1
it ends without -> a : 1
ends without a -> is : 1
ends without a -> terminating : 2
without a is -> statement : 1
a is statement -> can : 1
is statement can -> have : 1
can have a -> a : 1
can have a -> argument : 1
can have a -> value : 1
can have a -> member : 1
can have a -> different : 2
can have a -> single : 1
can have a -> pointer : 1
can have a -> program : 1
have a a -> is : 1
a a is -> used : 1
a a is -> a : 1
a is used -> only : 2
used only as -> a : 5
used only as -> the : 1
as a target -> of : 1
a target of -> a : 1
target of a -> label : 1
target of a -> it : 1
of a label -> identifiers : 1
of a label -> is : 1
a label identifiers -> must : 1
label identifiers must -> be : 1
identifiers must be -> unique : 1
must be unique -> within : 1
must be unique -> in : 2
be unique within -> a : 1
unique within a -> the : 1
within a the -> scope : 1
within a the -> class : 1
a label is -> the : 1
label is the -> function : 1
in which it -> is : 2
which it is -> label : 1
which it is -> and : 1
it is label -> identifiers : 1
is label identifiers -> do : 1
label identifiers do -> not : 1
identifiers do not -> conflict : 1
do not conflict -> with : 1
not conflict with -> any : 1
conflict with any -> other : 1
with any other -> statement : 1
with any other -> the : 1
with any other -> overloaded : 2
any other statement -> can : 1
other statement can -> have : 1
have multiple including -> and : 1
multiple including and -> interrupts : 1
including and interrupts -> the : 1
and interrupts the -> normal : 1
interrupts the normal -> flow : 1
the normal flow -> of : 1
normal flow of -> control : 1
flow of control -> in : 1
of control in -> a : 1
control in a -> an : 1
a an exception -> an : 1
an exception an -> object : 1
exception an object -> from : 1
an object from -> the : 1
from the point -> where : 2
from the point -> of : 2
the point where -> the : 4
the point where -> was : 1
the point where -> it : 1
the point where -> an : 1
point where the -> exception : 2
point where the -> template : 1
point where the -> previous : 1
where the exception -> is : 2
the exception is -> raised : 1
the exception is -> in : 2
the exception is -> if : 1
the exception is -> thrown : 2
exception is raised -> to : 1
is raised to -> the : 1
to the point -> where : 2
exception is in -> between : 1
exception is in -> other : 1
is in between -> those : 1
in between those -> function : 1
between those function -> calls : 1
those function calls -> are : 1
function calls are -> and : 1
calls are and -> local : 1
are and local -> scopes : 1
and local scopes -> are : 1
local scopes are -> abruptly : 1
local scopes are -> popped : 1
scopes are abruptly -> local : 1
are abruptly local -> and : 1
abruptly local and -> temporary : 1
local and temporary -> objects : 1
and temporary objects -> in : 1
temporary objects in -> those : 1
temporary objects in -> function : 1
objects in those -> scopes : 1
in those scopes -> are : 1
those scopes are -> section : 1
scopes are section -> discusses : 1
are section discusses -> exception : 1
section discusses exception -> handling : 1
discusses exception handling -> in : 1
exception handling in -> general : 1
handling in general -> and : 1
in general and -> the : 1
in general and -> to : 2
general and the -> statement : 1
information about other -> aspects : 1
information about other -> libraries : 1
about other aspects -> of : 1
other aspects of -> exception : 1
aspects of exception -> see : 1
of exception see -> which : 1
exception see which -> describes : 1
see which describes -> the : 1
which describes the -> and : 1
describes the and -> which : 1
describes the and -> algorithms : 1
the and which -> describes : 1
the and which -> perform : 1
the and which -> are : 1
and which describes -> function : 1
which describes function -> blocks : 1
describes function blocks -> and : 1
function blocks and -> see : 1
blocks and see -> also : 1
and see also -> and : 1
and see also -> for : 1
see also and -> in : 1
also and in -> for : 1
and in for -> information : 1
and in for -> new : 1
and in for -> following : 1
and in for -> examples : 1
about the standard -> exception : 1
about the standard -> default : 1
about the standard -> template : 1
about the standard -> the : 1
exception classes and -> related : 1
classes and related -> the : 1
and related the -> name : 1
and related the -> functions : 2
related the name -> an : 1
the name an -> exception : 1
name an exception -> is : 1
exception is used -> for : 1
used for exceptional -> such : 1
for exceptional such -> as : 1
exceptional such as -> indexing : 1
such as indexing -> a : 1
as indexing a -> vector : 1
indexing a vector -> with : 1
a vector with -> an : 1
a vector with -> function : 1
a vector with -> shows : 1
a vector with -> generate : 1
a vector with -> int : 1
vector with an -> index : 1
with an index -> that : 1
an index that -> is : 1
index that is -> out : 1
that is out -> of : 1
of the intention -> in : 1
the intention in -> is : 1
intention in is -> that : 1
in is that -> statements : 1
is that statements -> should : 1
that statements should -> have : 1
statements should have -> near : 1
should have near -> zero : 1
have near zero -> but : 1
near zero but -> throwing : 1
zero but throwing -> and : 1
but throwing and -> handling : 1
throwing and handling -> an : 1
and handling an -> exception : 1
handling an exception -> can : 1
an exception can -> be : 1
exception can be -> expensive : 1
can be expensive -> in : 1
be expensive in -> terms : 1
expensive in terms -> of : 1
terms of statement -> establishes : 1
of statement establishes -> a : 1
statement establishes a -> local : 1
establishes a local -> scope : 1
a local scope -> plus : 1
a local scope -> is : 1
local scope plus -> exception : 1
scope plus exception -> a : 1
plus exception a -> statement : 1
exception a statement -> begins : 1
a statement begins -> with : 1
statement begins with -> the : 1
begins with the -> keyword : 1
begins with the -> first : 1
begins with the -> digit : 1
by a compound -> statement : 1
by a compound -> the : 1
compound statement and -> one : 1
compound statement and -> for : 1
statement and one -> or : 1
and one or -> more : 2
or more each -> handler : 1
more each handler -> has : 1
each handler has -> an : 1
handler has an -> exception : 1
has an exception -> type : 1
has an exception -> in : 1
has an exception -> specification : 1
has an exception -> it : 1
an exception type -> in : 1
an exception type -> that : 1
exception type in -> parentheses : 1
type in parentheses -> followed : 1
in parentheses followed -> by : 1
parentheses followed by -> a : 1
a compound the -> exception : 1
a compound the -> statements : 1
compound the exception -> type : 1
the exception type -> can : 1
the exception type -> handles : 1
exception type can -> be : 1
be a sequence -> of : 4
sequence of type -> specifiers : 2
of type specifiers -> followed : 1
of type specifiers -> with : 3
of type specifiers -> and : 2
of type specifiers -> is : 1
type specifiers followed -> by : 1
specifiers followed by -> an : 1
an optional or -> it : 1
optional or it -> can : 1
be an compound -> statement : 1
an compound statement -> and : 1
statement and for -> each : 1
and for each -> exception : 1
and for each -> in : 1
for each exception -> forms : 1
each exception forms -> a : 1
exception forms a -> separate : 1
forms a separate -> local : 1
a separate local -> following : 1
separate local following -> the : 1
local following the -> rules : 1
following the rules -> for : 1
rules for any -> other : 1
any other compound -> time : 1
other compound time -> a : 1
compound time a -> local : 1
time a local -> scope : 1
local scope is -> by : 1
scope is by -> calling : 1
is by calling -> a : 1
function or by -> entering : 1
or by entering -> a : 1
by entering a -> compound : 1
entering a compound -> statement : 1
compound statement or -> other : 1
compound statement or -> a : 1
statement or other -> statement : 1
or other statement -> that : 1
other statement that -> establishes : 1
statement that establishes -> a : 1
that establishes a -> can : 1
establishes a can -> think : 1
a can think -> of : 1
think of the -> scope : 1
think of the -> operators : 1
think of the -> size : 1
think of the -> dereference : 1
of the scope -> as : 1
the scope as -> pushing : 1
scope as pushing -> an : 1
as pushing an -> entry : 1
pushing an entry -> on : 1
an entry on -> an : 1
entry on an -> execution : 1
on an execution -> when : 1
an execution when -> execution : 1
execution when execution -> leaves : 1
leaves the the -> scope : 1
the scope is -> popped : 1
scope is popped -> from : 1
is popped from -> the : 2
popped from the -> each : 1
popped from the -> stack : 1
popped from the -> exception : 1
popped from the -> so : 1
from the each -> statement : 1
from the each -> initializer : 1
the each statement -> is : 1
each statement is -> also : 1
statement is also -> pushed : 1
is also pushed -> on : 1
also pushed on -> the : 1
pushed on the -> an : 1
on the an -> exception : 1
on the an -> associative : 2
the an exception -> is : 1
exception is the -> stack : 1
exception is the -> memory : 1
exception is the -> container : 1
exception is the -> is : 1
exception is the -> third : 1
is the stack -> is : 1
is the stack -> continues : 1
the stack is -> local : 1
the stack is -> another : 1
the stack is -> the : 1
stack is local -> scopes : 1
is local scopes -> are : 1
scopes are popped -> from : 1
are popped from -> the : 1
from the stack -> any : 1
the stack any -> automatic : 1
stack any automatic -> objects : 1
any automatic objects -> that : 1
that were declared -> in : 1
were declared in -> each : 1
declared in each -> until : 1
in each until -> a : 1
each until a -> statement : 1
until a statement -> is : 1
statement is the -> statement : 1
statement is popped -> from : 1
from the exception -> then : 1
the exception then -> the : 1
exception then the -> type : 1
then the type -> of : 1
of the exception -> object : 4
of the exception -> and : 1
of the exception -> specification : 1
exception object is -> compared : 2
exception object is -> copied : 1
exception object is -> and : 1
exception object is -> not : 1
exception object is -> a : 1
object is compared -> with : 2
is compared with -> each : 1
is compared with -> the : 2
compared with each -> exception : 1
with each exception -> if : 1
each exception if -> a : 1
if a match -> is : 2
if a match -> cannot : 1
a match is -> the : 1
a match is -> candidate : 1
a match is -> determined : 1
match is the -> exception : 1
match is the -> compiler : 1
is the exception -> object : 1
is the exception -> specification : 1
object is copied -> to : 1
is copied to -> the : 3
is copied to -> entries : 1
is copied to -> and : 1
is copied to -> for : 1
is copied to -> using : 1
copied to the -> exception : 1
copied to the -> a : 1
copied to the -> result : 1
the exception and -> execution : 1
the exception and -> the : 1
the exception and -> catching : 1
the exception and -> sets : 1
exception and execution -> transfers : 1
and execution transfers -> to : 1
execution transfers to -> the : 1
transfers to the -> compound : 1
statement for that -> after : 1
for that after -> the : 1
that after the -> handler : 1
after the handler -> the : 1
handler the exception -> object : 1
handler the exception -> propagates : 1
object is and -> execution : 1
object is and -> the : 1
statement that follows -> the : 2
follows the statement -> its : 1
the statement its -> no : 1
statement its no -> matching : 1
its no matching -> handler : 1
no matching handler -> is : 1
matching handler is -> the : 1
matching handler is -> if : 1
handler is the -> stack : 1
the stack continues -> to : 1
stack continues to -> be : 1
continues to be -> popped : 1
to be popped -> until : 1
be popped until -> the : 1
popped until the -> next : 1
until the next -> statement : 1
until the next -> or : 1
the next statement -> is : 1
next statement is -> its : 1
statement is its -> handlers : 1
is its handlers -> are : 1
its handlers are -> compared : 1
handlers are compared -> with : 1
are compared with -> the : 2
compared with the -> exception : 1
compared with the -> type : 2
compared with the -> standard : 1
compared with the -> operator : 1
exception and the -> process : 1
and the process -> repeats : 1
the process repeats -> until : 1
process repeats until -> a : 1
repeats until a -> matching : 1
a matching handler -> is : 1
handler is if -> no : 1
is if no -> statement : 1
is if no -> match : 1
is if no -> characters : 2
if no statement -> has : 1
no statement has -> a : 1
statement has a -> matching : 1
has a matching -> and : 1
a matching and -> the : 1
matching and the -> entire : 1
and the entire -> execution : 1
and the entire -> string : 1
the entire execution -> stack : 1
entire execution stack -> is : 1
execution stack is -> the : 1
stack is the -> function : 1
stack is the -> first : 1
stack is the -> item : 1
function is in -> exception : 1
function is in -> the : 1
is in exception -> handler : 1
in exception handler -> can : 1
exception handler can -> throw : 1
handler can throw -> an : 1
handler can throw -> a : 1
can throw an -> in : 1
can throw an -> your : 1
can throw an -> exception : 1
throw an in -> which : 1
an in which -> the : 1
an in which -> is : 1
which the usual -> rules : 1
usual rules apply -> for : 1
rules apply for -> unwinding : 1
apply for unwinding -> the : 1
for unwinding the -> note : 1
unwinding the note -> that : 1
that the statement -> has : 1
the statement has -> already : 1
statement has already -> been : 1
has already been -> popped : 1
has already been -> it : 1
already been popped -> from : 1
been popped from -> the : 1
from the so -> the : 1
from the so -> a : 1
so the same -> statement : 1
so the same -> datafile : 1
same statement cannot -> catch : 1
statement cannot catch -> the : 1
cannot catch the -> the : 1
catch the the -> handler : 1
the the handler -> can : 1
the the handler -> returns : 1
the handler can -> throw : 1
the handler can -> do : 1
can throw a -> new : 1
throw a new -> exception : 1
a new exception -> or : 1
a new exception -> results : 1
a new exception -> of : 1
new exception or -> rethrow : 1
exception or rethrow -> the : 1
or rethrow the -> existing : 1
rethrow the existing -> exception : 1
the existing exception -> which : 1
existing exception which -> the : 1
exception which the -> exception : 1
which the exception -> object : 1
is not freed -> handler : 1
not freed handler -> can : 1
freed handler can -> use : 1
handler can use -> an : 1
use an ellipsis -> to : 1
use an ellipsis -> as : 1
an ellipsis to -> mean : 1
ellipsis to mean -> it : 1
to mean it -> catches : 1
mean it catches -> any : 1
it catches any -> type : 1
catches any type -> of : 1
any type of -> when : 1
type of when -> an : 1
of when an -> ellipsis : 1
ellipsis is the -> handler : 1
is the handler -> must : 1
the handler must -> be : 1
handler must be -> last : 1
must be last -> in : 1
be last in -> the : 1
last in the -> list : 1
in the list -> of : 1
in the list -> if : 1
in the list -> struct : 1
in the list -> requires : 1
in the list -> and : 1
list of exception -> are : 1
of exception are -> checked : 1
exception are checked -> in : 1
are checked in -> the : 1
checked in the -> in : 1
in the in -> each : 2
in the in -> its : 1
in the in -> the : 2
in the in -> in : 1
in the in -> which : 2
the in each -> catch : 1
the in each -> is : 1
in each catch -> clause : 1
each catch clause -> is : 1
catch clause is -> compared : 1
clause is compared -> with : 1
exception object according -> to : 1
object according to -> the : 2
to the following -> is : 1
to the following -> base : 1
as or considering -> the : 1
or considering the -> handler : 1
considering the handler -> is : 1
the handler is -> a : 2
handler is a -> base : 1
handler is a -> pointer : 1
handler is a -> function : 1
base class of -> the : 1
base class of -> a : 1
class of the -> handler : 1
class of the -> left : 1
class of the -> object : 1
of the handler -> is : 1
pointer that can -> be : 1
pointer that can -> point : 1
converted to using -> a : 1
converted to using -> the : 1
standard conversion is -> handler : 1
conversion is handler -> ellipsis : 1
is handler ellipsis -> always : 1
handler ellipsis always -> it : 1
ellipsis always it -> is : 1
always it is -> important : 1
is important to -> put : 1
is important to -> do : 1
is important to -> detect : 1
important to put -> the : 1
put the most -> specific : 1
the most specific -> exceptions : 1
most specific exceptions -> and : 1
specific exceptions and -> put : 1
exceptions and put -> base : 1
and put base -> classes : 1
put base classes -> if : 1
base classes if -> you : 1
classes if you -> use : 1
you use an -> it : 1
you use an -> empty : 1
use an it -> must : 1
must be common -> idiom : 1
be common idiom -> is : 1
throw an exception -> object : 1
throw an exception -> for : 1
throw an exception -> as : 1
an exception object -> and : 1
exception object and -> catch : 1
object and catch -> a : 1
and catch a -> this : 1
catch a this -> avoids : 1
a this avoids -> unnecessary : 1
this avoids unnecessary -> copies : 1
avoids unnecessary copies -> of : 1
exception and catching -> shows : 1
and catching shows -> a : 1
catching shows a -> typical : 1
a typical use -> of : 3
typical use of -> a : 1
typical use of -> covariant : 1
typical use of -> typename : 1
typical use of -> is : 1
typical use of -> pairs : 1
a it also -> shows : 1
a it also -> returns : 1
it also shows -> a : 1
also shows a -> function : 1
shows a function -> which : 1
shows a function -> body : 1
shows a function -> that : 1
a function which -> is : 1
a function which -> wraps : 1
function which is -> covered : 1
which is covered -> in : 1
covered in and -> catching : 1
in and catching -> class : 1
and catching class -> public : 1
catching class public -> int : 1
class public int -> int : 1
public int int -> int : 1
int int out -> value : 1
int out value -> must : 1
out value must -> be : 1
be in min -> max : 1
in min max -> return : 1
min max return -> read : 1
max return read -> a : 1
return read a -> set : 1
read a set -> of : 1
set of numbers -> from : 1
numbers from an -> input : 1
from an input -> verify : 1
from an input -> the : 4
from an input -> stream : 6
from an input -> it : 1
from an input -> class : 1
an input verify -> that : 1
input verify that -> all : 1
verify that all -> data : 1
that all data -> is : 1
all data is -> within : 1
data is within -> the : 1
is within the -> defined : 1
within the defined -> throw : 1
the defined throw -> if : 1
defined throw if -> any : 1
throw if any -> data : 1
if any data -> is : 1
any data is -> if : 1
data is if -> an : 1
is if an -> exception : 2
if an exception -> is : 12
exception is destructor -> is : 1
is destructor is -> automatically : 1
destructor is automatically -> called : 1
is automatically called -> it : 1
automatically called it -> has : 1
called it has -> a : 1
it has a -> typename : 1
it has a -> size : 1
it has a -> copy : 1
it has a -> function : 1
has a typename -> typename : 1
a typename typename -> void : 5
a typename typename -> if : 1
a typename typename -> initer : 1
a typename typename -> typename : 6
a typename typename -> outiter : 1
typename void t -> t : 1
void t t -> t : 1
t t t -> while : 1
t t t -> t : 1
t t t -> void : 1
t t while -> if : 1
t while if -> throw : 1
while if throw -> else : 1
if throw else -> if : 1
if throw else -> arbitrary : 1
throw else if -> throw : 1
else if throw -> else : 1
throw else arbitrary -> precision : 1
else arbitrary precision -> integer : 1
arbitrary precision integer -> class : 1
precision integer class -> bigint : 1
integer class bigint -> int : 1
class bigint int -> using : 1
bigint int using -> namespace : 1
using namespace if -> cerr : 1
namespace if cerr -> return : 1
if cerr return -> ifstream : 1
cerr return ifstream -> if : 1
return ifstream if -> return : 1
ifstream if return -> try : 1
if return try -> catch : 1
return try catch -> cerr : 1
try catch cerr -> return : 1
catch cerr return -> unknown : 1
cerr return unknown -> return : 1
return unknown return -> if : 1
unknown return if -> cout : 1
return if cout -> else : 1
if cout else -> bigint : 1
cout else bigint -> sum : 1
else bigint sum -> program : 1
bigint sum program -> has : 1
sum program has -> at : 1
program has at -> least : 1
has at least -> one : 4
has at least -> the : 2
has at least -> as : 1
has at least -> a : 1
least one function -> and : 1
one function and -> all : 1
function and all -> but : 1
and all but -> the : 1
all but the -> most : 1
but the most -> trivial : 1
the most trivial -> programs : 1
most trivial programs -> define : 1
trivial programs define -> additional : 1
programs define additional -> the : 1
define additional the -> standard : 1
additional the standard -> library : 1
standard library provides -> numerous : 1
standard library provides -> a : 1
library provides numerous -> functions : 1
provides numerous functions -> that : 1
numerous functions that -> your : 1
functions that your -> program : 1
that your program -> can : 1
your program can -> this : 1
program can this -> chapter : 1
can this chapter -> discusses : 1
this chapter discusses -> how : 1
chapter discusses how -> to : 1
discusses how to -> and : 1
how to and -> call : 1
to and call -> a : 1
and call a -> tells : 1
call a tells -> the : 1
a tells the -> compiler : 1
compiler about a -> return : 1
compiler about a -> function : 1
about a return -> and : 1
a return and -> a : 1
a return and -> you : 1
return and a -> function : 1
a function also -> provides : 1
function also provides -> the : 1
also provides the -> body : 1
provides the body -> of : 1
the for more -> information : 2
about function call -> expressions : 1
function call expressions -> and : 1
call expressions and -> for : 1
expressions and for -> information : 2
and for information -> about : 12
and for information -> that : 1
information about which -> make : 1
about which make -> up : 1
which make up -> function : 1
make up function -> this : 1
up function this -> chapter : 1
function this chapter -> presents : 1
chapter presents information -> that : 1
presents information that -> is : 1
information that is -> common : 1
that is common -> to : 2
is common to -> all : 2
common to all -> kinds : 1
common to all -> streams : 1
to all kinds -> of : 1
all kinds of -> for : 1
kinds of for -> characteristics : 1
of for characteristics -> that : 1
for characteristics that -> are : 1
characteristics that are -> unique : 1
that are unique -> to : 2
are unique to -> member : 1
are unique to -> an : 1
unique to member -> see : 1
to member see -> and : 1
member see and -> for : 1
for information that -> pertains : 1
information that pertains -> specifically : 1
that pertains specifically -> to : 1
pertains specifically to -> function : 1
specifically to function -> see : 1
to function see -> syntax : 1
function see syntax -> descriptions : 1
see syntax descriptions -> in : 1
precise bnf declaration -> tells : 1
bnf declaration tells -> the : 1
declaration tells the -> compiler : 1
about a function -> name : 1
name and how -> to : 1
and how to -> call : 1
how to call -> the : 1
the the actual -> body : 1
the actual body -> of : 1
actual body of -> the : 1
the function can -> be : 5
the function can -> if : 1
the function can -> throw : 1
the function can -> refer : 1
the function can -> have : 2
can be defined -> separately : 1
can be defined -> within : 1
can be defined -> in : 3
be defined separately -> later : 1
defined separately later -> in : 1
separately later in -> this : 1
in this a -> function : 1
in this a -> constructor : 1
in this a -> temporary : 1
this a function -> declaration : 1
a function declaration -> has : 1
a function declaration -> is : 1
a function declaration -> not : 1
a function declaration -> can : 1
a function declaration -> and : 1
a function declaration -> followed : 1
a function declaration -> or : 2
function declaration has -> the : 1
declaration has the -> following : 1
the following and -> are : 1
the following and -> streams : 1
the following and -> can : 1
the following and -> and : 1
following and are -> the : 1
and are the -> is : 1
and are the -> same : 2
are the is -> except : 1
the is except -> for : 1
is except for -> and : 1
except for and -> type : 1
for and type -> conversion : 1
and type conversion -> the : 1
the function of -> these : 1
function of these -> parts : 1
of these parts -> is : 1
these parts is -> described : 1
parts is described -> later : 1
this shows a -> variety : 1
shows a variety -> of : 3
a variety of -> function : 1
a variety of -> restrictions : 1
a variety of -> shape : 1
a variety of -> virtual : 1
a variety of -> dependent : 1
a variety of -> japanese : 1
variety of function -> function : 1
of function function -> named : 1
of function function -> function : 2
of function function -> class : 1
of function function -> template : 1
of function function -> in : 2
function function named -> which : 1
named which returns -> type : 2
which returns type -> and : 1
which returns type -> takes : 1
returns type and -> takes : 1
type and takes -> two : 1
takes two each -> of : 1
two each of -> type : 1
each of type -> the : 1
each of type -> a : 1
each of type -> for : 1
type the names -> a : 1
the names a -> and : 1
names a and -> b : 1
a and b -> are : 2
a and b -> have : 1
and b are -> int : 1
and b are -> considered : 1
b are int -> function : 1
are int function -> named : 1
int function named -> which : 1
int function named -> that : 1
which takes a -> const : 1
takes a const -> string : 1
a const string -> and : 1
const string and -> does : 1
string and does -> not : 1
not return the -> function : 1
return the function -> is : 1
function is expanded -> void : 1
is expanded void -> function : 1
expanded void function -> named : 1
void function named -> which : 1
takes two arguments -> and : 5
two arguments and -> returns : 2
two arguments and -> applies : 1
two arguments and -> compares : 2
arguments and returns -> an : 1
arguments and returns -> a : 1
arguments and returns -> to : 1
returns an this -> function : 1
an this function -> does : 1
this function does -> not : 1
function does not -> throw : 3
function does not -> need : 2
function does not -> necessarily : 1
function does not -> make : 1
function does not -> see : 1
function does not -> return : 1
function does not -> have : 1
function does not -> always : 1
function does not -> which : 2
does not throw -> any : 3
does not throw -> but : 2
not throw any -> enum : 1
not throw any -> the : 1
not throw any -> exception : 1
not throw any -> exceptions : 2
not throw any -> but : 1
throw any enum -> fptest : 1
any enum fptest -> greater : 1
enum fptest greater -> class : 1
fptest greater class -> demo : 1
greater class demo -> member : 1
class demo member -> function : 1
demo member function -> named : 1
member function named -> which : 1
returns type takes -> no : 1
type takes no -> and : 1
takes no and -> is : 1
takes no and -> one : 1
no and is -> which : 1
and is which -> means : 1
is which means -> it : 1
is which means -> the : 1
is which means -> to : 1
which means it -> can : 1
which means it -> must : 1
means it can -> be : 1
be called for -> a : 3
be called for -> an : 1
be called for -> functions : 1
called for a -> const : 1
called for a -> in : 1
called for a -> declaring : 1
called for a -> scalar : 1
for a const -> int : 1
for a const -> function : 1
const int function -> named : 1
function named that -> a : 1
named that a -> that : 1
that a that -> is : 1
a that is -> constructors : 1
a that is -> known : 1
a that is -> stored : 1
a that is -> used : 1
that is constructors -> and : 1
is constructors and -> destructors : 1
constructors and destructors -> do : 1
and destructors do -> not : 1
destructors do not -> have : 1
destructors do not -> take : 1
not have return -> destructors : 1
have return destructors -> do : 1
return destructors do -> not : 1
do not take -> virtual : 1
do not take -> place : 1
do not take -> precedence : 1
do not take -> an : 1
not take virtual -> const : 1
take virtual const -> type : 1
virtual const type -> conversion : 1
const type conversion -> operator : 1
conversion operator operator -> const : 1
operator operator const -> return : 2
operator operator const -> operator : 2
const return in -> a : 1
return in a -> function : 1
function declaration is -> the : 1
declaration is the -> return : 1
declaration is the -> first : 1
the return it -> is : 1
the return it -> correctly : 1
return it is -> a : 1
is a series -> of : 1
series of type -> specifiers : 2
type specifiers with -> pointer : 1
type specifiers with -> and : 1
type specifiers with -> optional : 1
specifiers with pointer -> and : 1
with pointer and -> reference : 1
pointer and reference -> you : 1
pointer and reference -> see : 1
and reference you -> can : 1
reference you can -> mix : 1
can mix any -> of : 1
mix any of -> the : 1
following function specifiers -> freely : 1
function specifiers freely -> with : 1
specifiers freely with -> the : 1
freely with the -> type : 1
type but the -> convention : 1
to list function -> specifiers : 1
list function specifiers -> before : 1
function specifiers before -> other : 1
specifiers before other -> type : 1
before other type -> only : 1
other type only -> to : 1
type only to -> an : 1
only to an -> constructor : 1
to an constructor -> cannot : 1
an constructor cannot -> be : 1
constructor cannot be -> used : 1
constructor cannot be -> but : 1
in an implicit -> type : 1
an implicit type -> see : 1
an implicit type -> but : 1
an implicit type -> an : 1
an implicit type -> point : 1
implicit type see -> for : 1
see for the -> compiler : 1
see for the -> rules : 2
see for the -> refer : 1
see for the -> see : 1
for the compiler -> to : 2
for the compiler -> reports : 2
for the compiler -> calls : 1
for the compiler -> can : 1
compiler to expand -> the : 1
to expand the -> function : 1
expand the function -> body : 1
the function body -> at : 1
the function body -> contains : 1
the function body -> is : 2
function body at -> the : 1
body at the -> point : 1
at the point -> of : 6
at the point -> where : 2
the point of -> the : 5
the point of -> not : 1
the point of -> as : 1
the point of -> view : 1
the point of -> definition : 1
point of the -> function : 1
point of the -> compiler : 2
point of the -> or : 1
point of the -> one : 1
the function an -> function : 1
function an function -> must : 1
an function must -> be : 2
in every file -> in : 1
in every file -> refers : 1
in every file -> must : 1
every file in -> which : 1
file in which -> it : 1
file in which -> a : 1
file in which -> they : 1
it is and -> the : 1
and the definition -> must : 1
and the definition -> is : 1
the definition must -> be : 1
definition must be -> identical : 2
must be identical -> in : 1
must be identical -> to : 1
be identical in -> every : 1
identical in every -> if : 1
in every if -> the : 1
every if the -> function : 1
function body contains -> a : 1
body contains a -> local : 1
contains a local -> static : 1
a local static -> including : 1
local static including -> string : 1
static including string -> every : 1
including string every -> expansion : 1
string every expansion -> of : 1
every expansion of -> the : 1
expansion of the -> function : 1
function in every -> file : 1
every file refers -> to : 1
file refers to -> a : 1
to a common -> function : 1
a common function -> definition : 1
common function definition -> in : 1
function definition in -> a : 1
definition in a -> class : 1
definition in a -> another : 1
a class definition -> is : 2
a class definition -> that : 1
a class definition -> and : 1
a class definition -> apply : 1
a class definition -> by : 3
class definition is -> an : 1
class definition is -> just : 1
class definition is -> implicitly : 1
definition is an -> inline : 1
is an inline -> function : 2
inline function even -> without : 1
function even without -> the : 1
even without the -> use : 1
without the use -> of : 1
of the with -> no : 2
with no specifier -> is : 1
with no specifier -> labels : 1
no specifier is -> a : 1
specifier is a -> hint : 1
is a hint -> to : 1
free to ignore -> the : 2
to ignore the -> most : 1
to ignore the -> the : 1
ignore the most -> compilers : 1
the most compilers -> impose : 1
most compilers impose -> a : 1
compilers impose a -> variety : 1
impose a variety -> of : 1
variety of restrictions -> on : 1
of restrictions on -> which : 1
restrictions on which -> functions : 1
on which functions -> can : 1
which functions can -> be : 1
functions can be -> expanded : 1
functions can be -> called : 1
functions can be -> defined : 1
functions can be -> and : 1
functions can be -> implemented : 1
can be expanded -> the : 1
be expanded the -> restrictions : 1
expanded the restrictions -> vary : 1
the restrictions vary -> from : 1
restrictions vary from -> one : 1
vary from one -> compiler : 1
vary from one -> implementation : 1
from one compiler -> to : 1
one compiler to -> for : 1
compiler to for -> most : 1
to for most -> compilers : 1
for most compilers -> cannot : 1
for most compilers -> correctly : 1
most compilers cannot -> expand : 1
compilers cannot expand -> a : 1
cannot expand a -> functions : 1
expand a functions -> are : 1
a functions are -> most : 1
functions are most -> often : 1
functions are most -> commonly : 1
used for extremely -> simple : 1
for extremely simple -> for : 1
extremely simple for -> all : 1
simple for all -> standard : 1
for all standard -> containers : 1
for all standard -> virtual : 1
all standard containers -> have : 1
standard containers have -> a : 2
containers have a -> member : 1
containers have a -> constructor : 1
containers have a -> default : 1
member function which -> returns : 1
function which returns -> if : 1
which returns if -> the : 1
container is some -> containers : 1
is some containers -> might : 1
some containers might -> implement : 1
containers might implement -> the : 1
might implement the -> function : 1
might implement the -> global : 1
implement the function -> as : 2
the function as -> the : 1
the function as -> a : 1
the function as -> it : 1
the function as -> return : 1
the function as -> exported : 1
function as the -> following : 1
as the following -> bool : 1
the following bool -> const : 1
following bool const -> return : 1
bool const return -> only : 1
bool const return -> inline : 1
bool const return -> friend : 2
bool const return -> static : 2
bool const return -> numerical : 1
bool const return -> const : 4
bool const return -> holds : 1
bool const return -> typename : 1
bool const return -> here : 1
bool const return -> bool : 2
bool const return -> if : 1
bool const return -> fill : 2
bool const return -> class : 1
bool const return -> print : 1
const return only -> to : 1
return only to -> nonstatic : 1
only to nonstatic -> member : 1
to nonstatic member -> a : 1
nonstatic member a -> definition : 1
member a definition -> is : 1
definition is bound -> to : 1
function call at -> runtime : 1
call at runtime -> instead : 1
at runtime instead -> of : 1
runtime instead of -> at : 1
instead of at -> compile : 1
of at compile -> see : 1
at compile see -> for : 1
compile see for -> a : 1
for a return -> type : 1
a return type -> is : 1
a return type -> and : 1
value is returned -> to : 1
is returned to -> the : 3
is returned to -> indicate : 2
the function does -> not : 5
not need a -> the : 1
need a the -> form : 1
a the form -> is : 1
form is or -> the : 1
is or the -> return : 1
is or the -> type : 1
is or the -> performance : 1
is or the -> same : 1
is or the -> function : 2
is or the -> character : 3
is or the -> number : 2
is or the -> pattern : 2
is or the -> textual : 2
or the return -> expression : 1
or the return -> value : 1
the return expression -> must : 1
the return expression -> is : 1
return expression must -> have : 1
expression must have -> type : 1
must have type -> the : 1
have type the -> return : 1
type the return -> type : 1
type the return -> value : 2
type is anything -> other : 1
is anything other -> than : 1
anything other than -> every : 1
other than every -> statement : 1
than every statement -> must : 1
every statement must -> have : 1
statement must have -> an : 1
statement must have -> one : 1
type of which -> can : 1
the return see -> for : 1
return see for -> more : 1
about the return -> type : 1
return type cannot -> be : 1
type cannot be -> an : 1
cannot be an -> array : 1
cannot be an -> empty : 1
cannot be an -> element : 2
be an array -> or : 1
array or function -> but : 1
function but it -> can : 1
function but it -> ignores : 1
function but it -> is : 1
array or a -> function : 1
function declaration not -> a : 1
declaration not a -> you : 1
use the storage -> class : 1
storage class declarations -> and : 1
class declarations and -> definitions : 1
declarations and definitions -> can : 1
and definitions can -> have : 1
definitions can have -> linkage : 1
can have linkage -> see : 1
can have linkage -> or : 2
have linkage see -> for : 1
linkage see for -> more : 1
class and specifier -> can : 1
and specifier can -> be : 1
specifier can be -> used : 6
declare a friend -> see : 1
declare a friend -> in : 1
declare a friend -> template : 1
a friend see -> for : 1
friend see for -> more : 1
for more that -> the : 1
more that the -> return : 1
that the return -> type : 2
that the return -> value : 1
is not considered -> in : 1
is not considered -> for : 1
not considered in -> overload : 1
considered in overload -> see : 1
in overload see -> later : 1
overload see later -> in : 1
chapter for parameters -> are : 1
for parameters are -> if : 1
parameters are if -> a : 1
are if a -> function : 1
are if a -> key : 1
function takes no -> you : 1
function takes no -> it : 2
function takes no -> used : 1
takes no you -> can : 1
no you can -> leave : 1
you can leave -> the : 1
can leave the -> parentheses : 1
leave the parentheses -> empty : 1
the parentheses empty -> or : 1
parentheses empty or -> use : 1
empty or use -> the : 1
the keyword if -> a : 1
keyword if a -> function : 1
a function requires -> the : 1
function requires the -> parameter : 1
function requires the -> compiler : 1
requires the parameter -> list : 1
the parameter list -> is : 1
parameter list is -> in : 1
list is in -> which : 1
list is in -> in : 1
which each parameter -> is : 1
each parameter is -> a : 1
each parameter is -> replaced : 1
a simple declaration -> of : 1
simple declaration of -> the : 1
declaration of the -> following : 1
declaration of the -> primary : 1
declaration of the -> data : 1
declaration of the -> characters : 1
following is if -> it : 1
is the symbol -> is : 1
the symbol is -> also : 1
symbol is also -> the : 1
is also the -> allow : 1
is also the -> implicit : 1
is also the -> flag : 1
also the allow -> for : 1
the allow for -> the : 1
allow for the -> optional : 1
for the optional -> and : 1
the optional and -> storage : 1
optional and storage -> class : 1
and storage class -> specifiers : 1
and storage class -> specifier : 1
storage class specifiers -> and : 2
class specifiers and -> pointer : 1
class specifiers and -> declare : 1
specifiers and pointer -> and : 1
and pointer and -> reference : 1
and reference see -> for : 1
reference see for -> more : 1
information about declarators -> and : 1
about declarators and -> a : 1
declarators and a -> function : 1
takes no arguments -> requires : 1
takes no arguments -> because : 1
no arguments requires -> the : 1
arguments requires the -> but : 1
requires the but -> in : 1
the but in -> is : 1
but in is -> appears : 1
in is appears -> most : 1
is appears most -> often : 1
appears most often -> in : 1
most often in -> headers : 1
often in headers -> that : 1
used in both -> c : 1
in both c -> and : 1
both c and -> for : 1
c and for -> extern : 1
and for extern -> extern : 1
for extern extern -> extern : 1
extern extern extern -> extern : 2
extern extern extern -> int : 1
extern extern extern -> storage : 1
extern extern int -> other : 1
extern int other -> you : 1
int other you -> can : 1
other you can -> use : 1
can use whichever -> style : 1
use whichever style -> you : 1
whichever style you -> can : 1
style you can -> omit : 1
omit the parameter -> name : 1
the parameter name -> from : 1
the parameter name -> are : 1
parameter name from -> the : 1
name from the -> in : 1
name from the -> noise : 1
from the in -> a : 1
from the in -> that : 1
function the name -> is : 1
name is important -> only : 1
is important only -> to : 1
important only to -> the : 1
to the human -> in : 1
to the human -> a : 1
to the human -> the : 1
the human in -> a : 1
human in a -> function : 1
a function a -> nameless : 1
a function a -> parameter : 1
a function a -> function : 2
a function a -> object : 1
a function a -> qualification : 1
a function a -> local : 1
a function a -> template : 1
a function a -> class : 1
function a nameless -> parameter : 1
a nameless parameter -> cannot : 1
nameless parameter cannot -> be : 1
parameter cannot be -> used : 1
the function for -> suppose : 1
the function for -> how : 1
the function for -> an : 1
the function for -> in : 1
function for suppose -> a : 1
for suppose a -> graphics : 1
suppose a graphics -> package : 1
a graphics package -> defines : 1
graphics package defines -> a : 1
package defines a -> variety : 1
defines a variety -> of : 1
variety of shape -> all : 1
of shape all -> deriving : 1
shape all deriving -> from : 1
all deriving from -> a : 1
deriving from a -> common : 1
from a common -> base : 1
a common base -> among : 1
a common base -> unit : 1
common base among -> the : 1
base among the -> operations : 1
among the operations -> permitted : 1
the operations permitted -> on : 1
operations permitted on -> a : 1
permitted on a -> shape : 1
on a shape -> is : 1
a shape is -> which : 1
shape is which -> takes : 1
is which takes -> two : 1
two the scaling -> amounts : 1
the scaling amounts -> in : 1
scaling amounts in -> the : 1
amounts in the -> and : 1
the and suppose -> that : 1
and suppose that -> the : 1
suppose that the -> shape : 1
that the shape -> heeds : 1
the shape heeds -> only : 1
shape heeds only -> the : 1
heeds only the -> scale : 1
only the scale -> the : 1
the scale the -> function : 1
scale the function -> might : 1
function might be -> written : 1
function might be -> a : 1
might be written -> parameter : 1
be written parameter -> can : 1
written parameter can -> have : 1
parameter can have -> and : 1
parameter can have -> a : 1
can have and -> as : 1
can have and -> they : 1
have and as -> discussed : 1
and as discussed -> in : 1
as discussed in -> the : 1
as discussed in -> and : 1
discussed in the -> qualifiers : 1
discussed in the -> next : 1
in the qualifiers -> have : 1
the qualifiers have -> their : 1
qualifiers have their -> usual : 1
have their usual -> meaning : 1
have their usual -> although : 1
their usual meaning -> in : 1
usual meaning in -> the : 1
meaning in the -> function : 1
function the qualifiers -> and : 1
the qualifiers and -> storage : 1
qualifiers and storage -> class : 1
class specifier are -> not : 1
specifier are not -> part : 1
are not part -> of : 5
not part of -> the : 4
not part of -> a : 2
function type and -> do : 1
function type and -> participate : 1
type and do -> not : 1
and do not -> participate : 1
and do not -> take : 1
do not participate -> in : 1
not participate in -> overload : 1
participate in overload -> parameter : 1
participate in overload -> so : 1
participate in overload -> a : 1
in overload parameter -> can : 1
overload parameter can -> have : 1
have a argument -> from : 1
a argument from -> the : 1
argument from the -> declarator : 1
argument from the -> type : 1
from the declarator -> by : 1
the declarator by -> an : 1
declarator by an -> equal : 1
by an equal -> only : 2
an equal only -> the : 2
equal only the -> parameters : 1
equal only the -> rightmost : 1
only the parameters -> can : 1
the parameters can -> have : 1
parameters can have -> default : 2
can have default -> if : 2
have default if -> any : 2
default if any -> given : 1
default if any -> parameter : 1
if any given -> parameter : 1
any given parameter -> does : 1
given parameter does -> not : 1
parameter does not -> have : 1
have a default -> all : 1
have a default -> argument : 1
a default all -> parameters : 2
default all parameters -> to : 2
all parameters to -> its : 2
parameters to its -> left : 1
parameters to its -> right : 1
its left cannot -> have : 1
left cannot have -> default : 1
cannot have default -> the : 1
cannot have default -> template : 1
have default the -> default : 1
have default the -> reference : 1
default the default -> argument : 1
the default argument -> can : 1
the default argument -> is : 3
the default argument -> expressions : 1
the default argument -> for : 1
default argument can -> be : 1
argument can be -> any : 2
argument can be -> anything : 1
be any you -> want : 1
any you want -> to : 1
a comma enclose -> the : 1
comma enclose the -> expression : 1
enclose the expression -> in : 1
the expression in -> a : 1
the expression in -> the : 1
the expression in -> to : 1
a function arguments -> that : 1
function arguments that -> have : 1
arguments that have -> default : 1
that have default -> values : 1
have default values -> can : 1
default values can -> be : 1
can be starting -> from : 1
be starting from -> the : 1
starting from the -> for : 1
starting from the -> if : 1
starting from the -> the : 2
from the for -> each : 1
from the for -> the : 1
from the for -> positive : 1
the for each -> omitted : 1
the for each -> sequence : 1
for each omitted -> the : 1
each omitted the -> default : 1
omitted the default -> argument : 1
default argument is -> substituted : 1
default argument is -> implicitly : 1
default argument is -> chosen : 1
default argument is -> you : 1
default argument is -> it : 1
default argument is -> needed : 1
argument is substituted -> in : 1
is substituted in -> the : 1
substituted in the -> function : 1
substituted in the -> directives : 1
the function each -> default : 1
function each default -> argument : 1
each default argument -> is : 1
argument is implicitly -> converted : 2
to the parameter -> applying : 1
to the parameter -> versus : 1
to the parameter -> type : 1
to the parameter -> in : 1
to the parameter -> contains : 1
the parameter applying -> the : 1
parameter applying the -> same : 1
applying the same -> rules : 1
same rules that -> govern : 1
rules that govern -> initializers : 1
rules that govern -> some : 1
that govern initializers -> in : 1
govern initializers in -> the : 1
initializers in the -> default : 1
initializers in the -> second : 1
in the default -> argument : 1
in the default -> arguments : 1
default argument expressions -> are : 1
argument expressions are -> evaluated : 1
expressions are evaluated -> every : 1
are evaluated every -> time : 1
evaluated every time -> the : 1
time the argument -> is : 1
argument is needed -> in : 2
needed in a -> function : 2
a function names -> used : 1
function names used -> in : 1
the default arguments -> are : 2
the default arguments -> for : 1
default arguments are -> looked : 1
default arguments are -> typically : 1
default arguments are -> class : 1
arguments are looked -> up : 1
looked up at -> the : 1
up at the -> point : 1
point of not -> the : 1
of not the -> point : 1
not the point -> of : 1
point of as -> shown : 1
of as shown -> in : 1
shown in and -> using : 1
shown in and -> when : 1
in and using -> default : 1
and using default -> and : 1
and using default -> namespace : 1
using default and -> using : 1
default and using -> default : 1
using default namespace -> demo : 1
default namespace demo -> int : 1
namespace demo int -> return : 1
demo int return -> int : 1
demo int return -> x : 1
int return the -> default : 1
return the default -> argument : 1
default argument for -> y : 1
default argument for -> template : 1
default argument for -> their : 1
argument for y -> is : 1
for y is -> always : 1
y is always -> the : 1
always the global -> even : 1
the global even -> if : 1
global even if -> a : 1
if a different -> is : 1
a different is -> visible : 1
different is visible -> where : 1
is visible where -> is : 1
visible where is -> int : 1
where is int -> int : 1
is int int -> y : 1
is int int -> double : 1
int int y -> return : 1
int y return -> x : 1
int y return -> macro : 1
y return x -> int : 1
return x int -> using : 2
x int using -> prints : 1
x int using -> namespace : 1
int using prints -> prints : 1
using prints prints -> arguments : 1
prints prints arguments -> are : 1
prints arguments are -> cumulative : 1
arguments are cumulative -> in : 1
are cumulative in -> multiple : 1
cumulative in multiple -> declarations : 1
in multiple declarations -> of : 1
multiple declarations of -> the : 2
same function in -> the : 1
the same later -> declarations : 1
same later declarations -> can : 1
later declarations can -> provide : 1
declarations can provide -> default : 1
can provide default -> arguments : 1
provide default arguments -> for : 1
default arguments for -> additional : 1
default arguments for -> parameters : 1
default arguments for -> every : 1
default arguments for -> a : 1
arguments for additional -> in : 1
for additional in -> which : 1
additional in which -> case : 1
case the declaration -> must : 1
declaration must omit -> the : 1
must omit the -> default : 1
omit the default -> arguments : 1
arguments for parameters -> that : 1
parameters that already -> have : 1
that already have -> default : 1
already have default -> as : 1
have default as -> shown : 1
default as shown -> in : 1
shown in default -> default : 1
in default default -> int : 1
default default int -> void : 1
default int void -> int : 1
int void int -> y : 1
int void int -> number : 1
int void int -> real : 1
int void int -> static : 1
int void int -> height : 1
void int y -> void : 1
void int y -> error : 1
int y void -> x : 1
y void x -> int : 1
void x int -> void : 1
void x int -> derived : 1
void x int -> calls : 1
x int void -> same : 1
int void same -> as : 1
void same as -> scopes : 1
void same as -> base : 1
void same as -> specialization : 1
same as scopes -> can : 1
as scopes can -> have : 1
scopes can have -> different : 1
can have different -> default : 2
can have different -> behaviors : 1
can have different -> meanings : 1
can have different -> template : 5
have different default -> for : 1
have different default -> arguments : 2
different default for -> the : 1
default for the -> source : 1
source file in -> which : 2
which a function -> is : 1
which a function -> or : 2
is defined might -> have : 1
defined might have -> different : 1
different default arguments -> from : 1
different default arguments -> suggests : 1
different default arguments -> than : 1
default arguments from -> those : 1
arguments from those -> used : 1
from those used -> in : 1
those used in -> function : 1
used in function -> declarations : 1
in function declarations -> where : 1
function declarations where -> the : 1
declarations where the -> function : 1
where the function -> is : 3
function is most -> of : 1
is most of -> the : 1
of the different -> default : 1
of the different -> categories : 1
the different default -> arguments : 1
default arguments suggests -> programmer : 1
arguments suggests programmer -> a : 1
suggests programmer a -> an : 1
programmer a an -> overridden : 1
a an overridden -> function : 1
an overridden function -> can : 1
overridden function can -> have : 1
function can have -> different : 1
function can have -> or : 1
function can have -> linkage : 2
function can have -> constant : 1
function can have -> a : 1
default arguments than -> its : 1
arguments than its -> counterpart : 1
than its counterpart -> in : 1
its counterpart in -> the : 1
counterpart in the -> base : 1
in the base -> the : 1
in the base -> note : 1
in the base -> class : 2
in the base -> access : 1
in the base -> and : 1
base the default -> argument : 1
argument is chosen -> at : 1
is chosen at -> compile : 1
chosen at compile -> based : 1
at compile based -> on : 1
compile based on -> the : 1
on the static -> the : 1
the static the -> default : 1
the static the -> static : 1
static the default -> arguments : 1
arguments are typically -> those : 1
are typically those -> of : 1
typically those of -> the : 1
those of the -> base : 1
those of the -> class : 1
those of the -> not : 1
those of the -> c : 1
the base even -> if : 1
base even if -> the : 1
the function actually -> called : 1
function actually called -> is : 1
actually called is -> from : 1
called is from -> the : 1
is from the -> derived : 1
is from the -> point : 1
from the derived -> to : 1
the derived to -> avoid : 1
derived to avoid -> it : 1
to avoid it -> is : 1
avoid it is -> best : 1
best to avoid -> default : 1
to avoid default -> arguments : 1
avoid default arguments -> with : 1
default arguments with -> virtual : 1
arguments with virtual -> or : 1
with virtual or -> make : 1
virtual or make -> sure : 1
or make sure -> they : 1
or make sure -> the : 1
make sure they -> are : 1
sure they are -> the : 1
same for all -> overridden : 1
same for all -> the : 1
for all overridden -> for : 1
all overridden for -> more : 1
overridden for more -> information : 1
about virtual a -> member : 1
virtual a member -> function : 2
member function you -> cannot : 1
member function you -> can : 1
use a nonstatic -> data : 1
data member as -> a : 1
data member as -> the : 1
data member as -> shown : 1
member as a -> default : 1
as a default -> argument : 1
default argument unless -> it : 1
argument unless it -> is : 1
unless it is -> the : 1
is the member -> of : 1
is the member -> return : 8
the member of -> a : 1
of a specific -> if : 1
of a specific -> object : 1
a specific if -> you : 1
specific if you -> want : 1
use the value -> of : 1
of a data -> member : 1
of a data -> you : 1
of a data -> pass : 1
of a data -> using : 1
member as the -> default : 1
as the default -> value : 1
as the default -> access : 2
as the default -> programmers : 1
value for a -> use : 1
value for a -> type : 1
for a use -> an : 1
a use an -> overloaded : 1
use an overloaded -> as : 1
an overloaded as -> shown : 1
an overloaded as -> described : 1
overloaded as shown -> in : 1
shown in arguments -> in : 1
in arguments in -> member : 1
arguments in member -> for : 1
arguments in member -> example : 1
in member for -> more : 1
member for more -> on : 1
member for more -> information : 1
for more on -> overloaded : 1
more on overloaded -> arguments : 1
on overloaded arguments -> in : 1
overloaded arguments in -> member : 1
in member example -> void : 1
member example void -> int : 1
example void int -> y : 1
int y error -> achieve : 1
y error achieve -> the : 1
error achieve the -> desired : 1
achieve the desired -> effect : 1
achieve the desired -> the : 1
achieve the desired -> if : 1
the desired effect -> with : 1
desired effect with -> overloaded : 1
effect with overloaded -> void : 1
with overloaded void -> int : 1
overloaded void int -> void : 1
void int void -> int : 2
void int number -> of : 1
int number of -> number : 1
number of number -> of : 1
of number of -> last : 1
number of last -> parameter : 1
of last parameter -> in : 1
last parameter in -> a : 1
parameter in a -> function : 2
parameter in a -> but : 1
function declaration can -> be : 2
be an which -> permits : 1
be an which -> is : 1
which permits a -> number : 1
permits a number -> of : 1
number of arguments -> to : 1
number of arguments -> as : 1
number of arguments -> a : 1
of arguments to -> be : 1
arguments to be -> passed : 1
the the comma -> that : 1
the comma that -> separates : 1
comma that separates -> the : 1
that separates the -> parameter : 1
separates the parameter -> from : 1
the parameter from -> the : 1
parameter from the -> ellipsis : 1
from the ellipsis -> is : 1
the ellipsis is -> if : 1
ellipsis is if -> portability : 1
is if portability -> with : 1
if portability with -> c : 1
portability with c -> is : 1
with c is -> be : 1
with c is -> in : 1
c is be -> sure : 1
is be sure -> to : 2
sure to include -> the : 1
to include the -> in : 1
include the in -> to : 1
the in to -> learn : 1
in to learn -> how : 2
how to access -> the : 1
access the additional -> you : 1
the additional you -> can : 1
an ellipsis as -> the : 3
ellipsis as the -> sole : 2
ellipsis as the -> last : 1
as the sole -> parameter : 1
as the sole -> last : 1
as the sole -> argument : 1
the sole parameter -> in : 1
sole parameter in -> a : 1
in a but -> there : 1
in a but -> is : 1
in a but -> you : 1
a but there -> is : 1
but there is -> no : 9
but there is -> rarely : 1
but there is -> which : 1
but there is -> a : 1
is no mechanism -> in : 1
no mechanism in -> standard : 1
mechanism in standard -> to : 1
in standard to -> access : 1
standard to access -> the : 1
access the arguments -> from : 1
the arguments from -> the : 1
arguments from the -> function : 2
the function such -> a : 2
function such a -> declaration : 1
function such a -> function : 1
a declaration might -> be : 1
declaration might be -> used : 1
be used for -> an : 1
be used for -> any : 1
be used for -> c : 1
be used for -> placement : 1
be used for -> local : 1
be used for -> arithmetic : 2
be used for -> that : 1
used for an -> external : 1
for an external -> nonstatic : 1
an external nonstatic -> member : 1
external nonstatic member -> functions : 1
nonstatic member functions -> not : 1
member functions not -> constructors : 1
functions not constructors -> or : 1
not constructors or -> can : 1
constructors or can -> have : 1
or can have -> and : 1
or can have -> an : 1
have and they -> are : 1
and they are -> and : 1
they are and -> if : 1
they are and -> but : 1
are and if -> used : 1
are and if -> which : 1
and if used -> in : 1
if used in -> a : 1
in a member -> function : 4
member function apply -> to : 1
function apply to -> the : 1
to the implicit -> object : 1
the implicit object -> parameter : 1
the implicit object -> argument : 5
the implicit object -> section : 1
implicit object parameter -> of : 1
object parameter of -> the : 1
parameter of the -> member : 1
parameter of the -> primary : 1
of the member -> function : 2
of the member -> can : 1
of the member -> must : 1
of the member -> functions : 7
of the member -> the : 3
of the member -> sole : 4
of the member -> and : 1
of the member -> with : 2
can use or -> both : 1
can use or -> but : 1
use or both -> in : 1
in any place -> after : 1
any place after -> the : 1
place after the -> closing : 1
after the closing -> parenthesis : 1
the closing parenthesis -> of : 1
closing parenthesis of -> the : 1
parenthesis of the -> function : 1
parameters and before -> the : 2
before the exception -> the : 1
before the exception -> function : 1
exception the qualifiers -> are : 1
the qualifiers are -> part : 1
qualifiers are part -> of : 1
are part of -> the : 3
type and participate -> in : 1
and participate in -> overload : 1
in overload so -> you : 1
overload so you -> can : 1
have multiple functions -> with : 1
multiple functions with -> the : 1
functions with the -> same : 4
functions with the -> wrong : 2
functions with the -> desired : 1
functions with the -> standard : 1
same name and -> but : 1
same name and -> see : 1
same name and -> member : 1
same name and -> parameter : 1
same name and -> templates : 1
same name and -> parameters : 1
name and but -> with : 1
and but with -> different : 1
but with different -> qualifiers : 1
with different qualifiers -> only : 1
different qualifiers only -> if : 1
qualifiers only if -> you : 1
only if you -> do : 1
if you do -> not : 6
if you do -> you : 1
you do not -> also : 1
you do not -> overload : 2
you do not -> need : 3
you do not -> use : 1
you do not -> write : 1
you do not -> want : 2
you do not -> a : 1
you do not -> make : 1
do not also -> have : 1
not also have -> a : 1
have a static -> member : 1
have a static -> and : 1
have a static -> id : 1
static member function -> of : 1
function of the -> same : 1
function of the -> class : 1
function of the -> and : 1
function of the -> the : 1
function of the -> see : 1
name and see -> later : 1
and see later -> in : 1
chapter for function -> and : 1
function and a -> function : 1
function and a -> are : 1
function and a -> single : 1
a function can -> also : 1
a function can -> exception : 1
a function can -> be : 3
a function can -> use : 1
a function can -> return : 1
a function can -> have : 1
function can also -> have : 1
also have only -> a : 1
have only a -> can : 1
only a can -> have : 1
a can have -> you : 1
a can have -> size : 1
a can have -> an : 1
can have you -> cannot : 1
declare a that -> combines : 1
declare a that -> a : 1
a that combines -> a : 1
that combines a -> function : 1
combines a function -> and : 1
and a are -> most : 1
a are most -> often : 1
to declare member -> these : 1
declare member these -> functions : 1
member these functions -> can : 1
these functions can -> be : 1
for a in -> member : 1
for a in -> which : 2
for a in -> other : 3
for a in -> a : 1
a in member -> functions : 1
in member functions -> that : 1
member functions that -> do : 1
member functions that -> compare : 1
functions that do -> not : 2
do not change -> should : 1
not change should -> be : 1
change should be -> declared : 1
should be declared -> for : 1
be declared for -> more : 1
declared for more -> information : 1
information on how -> affect : 1
information on how -> templates : 1
on how affect -> member : 1
how affect member -> qualifiers : 1
affect member qualifiers -> with : 1
member qualifiers with -> member : 1
qualifiers with member -> shows : 1
qualifiers with member -> point : 1
with member shows -> some : 1
member shows some -> simple : 1
member shows some -> uses : 1
shows some simple -> uses : 1
some simple uses -> of : 1
simple uses of -> qualifiers : 1
uses of qualifiers -> with : 1
of qualifiers with -> member : 1
with member point -> int : 1
member point int -> int : 1
member point int -> static : 1
point int int -> return : 1
point int int -> point : 1
point int int -> const : 2
int return double -> return : 1
return double return -> void : 1
double return void -> cannot : 1
return void cannot -> be : 1
void cannot be -> const : 1
cannot be const -> because : 1
be const because -> modifies : 1
const because modifies -> and : 1
because modifies and -> int : 1
modifies and int -> specification : 1
and int specification -> tells : 1
int specification tells -> the : 1
specification tells the -> compiler : 1
the compiler which -> exceptions : 1
compiler which exceptions -> a : 1
which exceptions a -> function : 1
exceptions a function -> can : 1
function can exception -> specifications : 1
can exception specifications -> are : 1
exception specifications are -> optional : 1
exception specifications are -> not : 1
specifications are optional -> in : 1
are optional in -> a : 1
are optional in -> the : 1
optional in a -> function : 1
function declaration and -> are : 1
declaration and are -> rarely : 1
and are rarely -> the : 1
are rarely the -> syntax : 1
rarely the syntax -> is : 1
syntax is the -> exception : 1
the exception specification -> follows : 1
the exception specification -> is : 1
the exception specification -> that : 1
the exception specification -> does : 1
exception specification follows -> the : 1
specification follows the -> function : 1
follows the function -> header : 1
the function header -> and : 1
the function header -> but : 1
function header and -> if : 1
header and if -> it : 1
list of type -> for : 1
list of type -> specifiers : 2
of type for -> details : 1
of type for -> a : 1
of type for -> suppose : 1
type for details -> about : 1
about type each -> type : 1
type each type -> name : 1
each type name -> is : 1
each type name -> with : 1
name is an -> exception : 1
exception type that -> the : 1
type that the -> function : 1
that the function -> can : 1
that the function -> some : 1
that the function -> should : 1
that the function -> takes : 1
that the function -> does : 3
function can if -> the : 1
can if the -> function : 1
the function throws -> an : 1
function throws an -> exception : 3
throws an exception -> that : 5
throws an exception -> during : 2
throws an exception -> only : 1
an exception that -> is : 6
exception that is -> not : 5
exception that is -> caught : 1
is not listed -> in : 6
not listed in -> the : 6
listed in the -> exception : 7
listed in the -> search : 1
listed in the -> initializer : 1
in the exception -> the : 2
in the exception -> is : 2
in the exception -> in : 1
in the exception -> mask : 1
in the exception -> specification : 1
in the exception -> a : 1
exception the function -> is : 2
exception the function -> can : 1
exception the function -> for : 1
function declaration does -> not : 1
have an exception -> the : 1
have an exception -> specification : 1
have an exception -> it : 1
an exception the -> function : 1
function can throw -> any : 1
function can throw -> only : 1
throw any default -> implementation : 1
any default implementation -> of : 1
default implementation of -> calls : 2
implementation of calls -> to : 1
implementation of calls -> other : 1
of calls to -> terminate : 1
calls to terminate -> the : 1
to terminate the -> you : 1
to terminate the -> type : 1
to terminate the -> program : 3
terminate the you -> can : 1
you can set -> your : 1
you can set -> a : 1
can set your -> own : 2
set your own -> which : 1
set your own -> handler : 1
your own which -> must : 1
own which must -> call : 1
which must call -> or : 1
must call or -> throw : 1
call or throw -> an : 1
or throw an -> if : 1
throw an if -> your : 1
an if your -> handler : 1
if your handler -> throws : 1
your handler throws -> an : 1
handler throws an -> exception : 1
exception is if -> is : 1
exception is if -> no : 1
is in other -> if : 1
in other if -> there : 1
in other if -> class : 1
in other if -> the : 1
other if there -> is : 1
an exception only -> exceptions : 1
an exception only -> if : 1
exception only exceptions -> of : 1
only exceptions of -> the : 1
exceptions of the -> listed : 1
of the listed -> types : 1
of the listed -> can : 1
the listed types -> derived : 1
listed types derived -> from : 1
types derived from -> one : 1
the listed can -> be : 1
listed can be -> thrown : 1
can be thrown -> from : 1
can be thrown -> out : 1
be thrown from -> the : 1
thrown from the -> or : 1
thrown from the -> compound : 1
thrown from the -> function : 1
from the or -> else : 1
the or else -> the : 2
else the program -> see : 1
else the program -> terminates : 1
the program see -> in : 1
program see in -> for : 1
in for overridden -> virtual : 1
for overridden virtual -> function : 1
overridden virtual function -> must : 1
virtual function must -> have : 1
virtual function must -> be : 1
function must have -> an : 2
function must have -> the : 1
an exception specification -> that : 1
an exception specification -> if : 1
an exception specification -> and : 1
exception specification that -> lists : 1
exception specification that -> caused : 1
specification that lists -> only : 1
that lists only -> types : 1
lists only types -> that : 1
only types that -> are : 1
types that are -> also : 1
types that are -> manipulated : 1
types that are -> used : 1
types that are -> equivalent : 1
that are also -> listed : 1
that are also -> present : 1
are also listed -> in : 1
also listed in -> the : 1
the exception in -> if : 1
exception in if -> the : 1
throw any the -> derived : 1
any the derived -> class : 1
derived class function -> must : 1
class function must -> not : 1
function must not -> throw : 2
must not throw -> any : 1
must not throw -> suppose : 1
throw any exception -> specification : 1
any exception specification -> most : 1
exception specification most -> often : 1
specification most often -> marks : 1
most often marks -> functions : 1
often marks functions -> that : 1
marks functions that -> do : 1
do not throw -> exceptions : 1
do not throw -> any : 2
do not throw -> or : 1
not throw exceptions -> at : 1
throw exceptions at -> all : 1
exceptions at all -> exception : 1
at all exception -> shows : 1
all exception shows -> various : 1
exception shows various -> uses : 1
shows various uses -> of : 1
various uses of -> exception : 1
uses of exception -> exception : 1
of exception exception -> base : 1
exception exception base -> virtual : 1
exception base virtual -> void : 1
base virtual void -> virtual : 1
base virtual void -> same : 1
base virtual void -> subset : 1
base virtual void -> int : 2
base virtual void -> struct : 1
base virtual void -> overload : 1
base virtual void -> am : 2
virtual void virtual -> void : 2
virtual void virtual -> const : 3
void virtual void -> can : 1
void virtual void -> point : 1
void virtual void -> const : 1
void virtual void -> void : 1
virtual void can -> throw : 2
void can throw -> anything : 2
can throw anything -> virtual : 2
throw anything virtual -> void : 2
anything virtual void -> class : 1
anything virtual void -> ok : 1
virtual void class -> derived : 1
virtual void class -> template : 2
void class derived -> public : 3
public base virtual -> void : 2
virtual void same -> as : 1
same as base -> virtual : 1
as base virtual -> void : 1
virtual void subset -> of : 1
void subset of -> base : 1
subset of base -> virtual : 1
of base virtual -> void : 1
virtual void int -> not : 1
virtual void int -> class : 1
virtual void int -> base : 1
void int not -> in : 1
int not in -> base : 1
not in base -> class : 1
in base class -> more : 1
base class more -> public : 1
class more public -> derived : 1
more public derived -> virtual : 1
public derived virtual -> void : 1
derived virtual void -> can : 1
derived virtual void -> am : 1
virtual void ok -> function : 1
void ok function -> does : 1
ok function does -> not : 1
throw any exceptions -> int : 1
throw any exceptions -> of : 1
any exceptions int -> int : 1
exceptions int int -> try : 1
int int try -> return : 1
int try return -> return : 1
try return return -> return : 1
return return return -> programmers : 1
return return return -> type : 1
return return return -> and : 1
return return return -> container : 1
return return return -> return : 1
return return return -> t : 1
return return programmers -> should : 1
return programmers should -> note : 1
programmers should note -> two : 1
should note two -> significant : 1
note two significant -> differences : 1
two significant differences -> between : 1
significant differences between -> and : 1
differences between and -> java : 1
between and java -> with : 1
and java with -> respect : 1
java with respect -> to : 1
with respect to -> exception : 1
with respect to -> initer : 1
with respect to -> is : 1
with respect to -> container : 1
with respect to -> the : 1
respect to exception -> exception : 1
to exception exception -> specification : 1
exception exception specification -> is : 1
exception specification is -> introduced : 1
exception specification is -> checked : 1
specification is introduced -> by : 1
introduced by not -> correctness : 1
by not correctness -> of : 1
not correctness of -> the : 1
correctness of the -> exception : 1
specification is checked -> at : 1
is checked at -> not : 1
checked at not -> at : 1
at not at -> compile : 1
not at compile -> function : 1
at compile function -> that : 1
compile function that -> a : 1
function that a -> program : 1
function that a -> points : 1
that a program -> uses : 1
that a program -> should : 1
program uses must -> be : 1
uses must be -> defined : 1
be defined exactly -> once : 1
defined exactly once -> in : 1
exactly once in -> the : 1
once in the -> except : 1
once in the -> inheritance : 2
once in the -> base : 1
once in the -> the : 1
for inline templates -> are : 1
inline templates are -> a : 1
templates are a -> little : 1
templates are a -> program : 1
are a little -> see : 1
a little see -> for : 2
little see for -> an : 1
little see for -> class : 1
see for an -> function : 1
see for an -> explanation : 1
see for an -> class : 1
see for an -> following : 1
for an function -> must : 1
for an function -> template : 1
for an function -> changes : 1
for an function -> renames : 1
uses the this -> section : 1
the this section -> discusses : 1
section discusses function -> definitions : 1
discusses function definitions -> and : 1
function definitions and -> their : 1
definitions and their -> relationship : 1
and their relationship -> to : 1
their relationship to -> their : 1
relationship to their -> and : 1
to their and -> and : 1
their and and -> a : 1
and and a -> source : 1
and a source -> every : 1
a source every -> function : 1
source every function -> must : 1
every function must -> be : 1
be declared or -> defined : 1
be declared or -> it : 1
declared or defined -> before : 1
or defined before -> it : 1
defined before it -> is : 1
defined before it -> can : 1
it is for -> functions : 1
it is for -> all : 1
it is for -> typical : 1
is for functions -> defined : 1
for functions defined -> in : 1
functions defined in -> libraries : 1
defined in libraries -> or : 1
in libraries or -> other : 1
libraries or other -> source : 1
or other source -> the : 1
to declare the -> function : 1
to declare the -> implicit : 2
function in a -> header : 1
function in a -> base : 2
function in a -> nonvirtual : 1
function in a -> class : 1
function in a -> function : 2
a header or -> and : 1
a header or -> file : 1
header or and -> the : 1
or and the -> source : 1
or and the -> expression : 1
and the source -> file : 1
source file where -> the : 1
source file where -> preprocessor : 1
source file where -> it : 1
file where the -> function : 1
is called must -> the : 1
called must the -> header : 1
the header every -> function : 1
header every function -> that : 1
every function that -> is : 1
function that is -> used : 1
function that is -> declared : 2
function that is -> defined : 1
function that is -> called : 1
function that is -> the : 1
in the program -> must : 1
the program must -> have : 1
the program must -> never : 1
the program must -> not : 1
program must have -> a : 3
have a functions -> must : 1
a functions must -> be : 1
functions must be -> defined : 2
functions must be -> nonstatic : 2
in which they -> are : 1
in which they -> can : 1
which they are -> this : 1
they are this -> is : 1
are this is -> typically : 1
this is typically -> accomplished : 1
this is typically -> the : 3
this is typically -> and : 2
is typically accomplished -> by : 1
typically accomplished by -> defining : 1
accomplished by defining -> them : 1
by defining them -> in : 1
defining them in -> a : 1
them in a -> header : 1
them in a -> when : 1
a header which -> you : 1
header which you -> must : 1
which you must -> in : 1
which you must -> implement : 1
which you must -> specify : 1
you must in -> each : 1
must in each -> source : 1
in each source -> file : 1
file that calls -> the : 1
that calls the -> inline : 1
that calls the -> functions : 1
calls the inline -> every : 1
the inline every -> definition : 1
inline every definition -> of : 1
every definition of -> an : 1
of an inline -> function : 1
must be types -> and : 1
be types and -> types : 1
types and types -> and : 1
and types and -> includes : 1
and types and -> pod : 1
and types and -> functions : 1
types and includes -> the : 1
and includes the -> language : 1
includes the language -> return : 1
the language return -> parameter : 1
language return parameter -> and : 1
return parameter and -> note : 1
parameter and note -> that : 1
and note that -> for : 1
note that for -> each : 1
note that for -> values : 1
that for each -> only : 1
that for each -> virtual : 6
that for each -> there : 5
for each only -> its : 1
each only its -> type : 1
only its type -> is : 1
type is its -> storage : 1
is its storage -> and : 1
its storage and -> are : 1
storage and are -> not : 1
the function exception -> specifications : 1
function exception specifications -> are : 1
specifications are not -> part : 1
of a single -> source : 1
of a single -> you : 1
of a single -> is : 1
single source file -> can : 1
source file can -> have : 1
file can have -> multiple : 1
same function functions -> with : 1
function functions with -> the : 1
the same even -> if : 1
same even if -> those : 1
even if those -> declarations : 1
even if those -> parameters : 1
even if those -> values : 1
if those declarations -> differ : 1
if those declarations -> specify : 1
those declarations differ -> in : 1
declarations differ in -> other : 1
differ in other -> for : 1
other for one -> declaration : 1
for one declaration -> can : 1
one declaration can -> declare : 1
declaration can declare -> a : 1
declare a parameter -> and : 1
a parameter and -> another : 1
a parameter and -> have : 1
a parameter and -> pass : 1
parameter and another -> might : 1
and another might -> declare : 1
another might declare -> it : 1
might declare it -> because : 1
declare it because -> on : 1
it because on -> parameters : 1
because on parameters -> do : 1
on parameters do -> not : 1
parameters do not -> affect : 1
do not affect -> a : 1
do not affect -> the : 1
not affect a -> both : 1
affect a both -> declarations : 1
a both declarations -> are : 1
declarations are qualifiers -> matter : 1
are qualifiers matter -> only : 1
qualifiers matter only -> in : 1
matter only in -> the : 1
the function not -> the : 1
function not the -> and : 1
not the and -> defining : 1
the and defining -> shows : 1
and defining shows -> several : 1
defining shows several -> and : 1
shows several and -> one : 1
several and one -> all : 1
and one all -> for : 1
one all for -> a : 1
all for a -> single : 1
single and defining -> three : 1
and defining three -> declarations : 1
defining three declarations -> of : 1
three declarations of -> the : 1
same function type -> int : 1
function type int -> int : 1
type int int -> const : 1
int const int -> int : 2
int const int -> const : 2
int const int -> cout : 1
int int volatile -> int : 1
int volatile int -> int : 1
volatile int int -> definition : 1
int int definition -> of : 1
int int definition -> return : 1
int definition of -> the : 1
definition of the -> the : 1
definition of the -> helper : 1
definition of the -> member : 1
definition of the -> calls : 1
definition of the -> class : 1
definition of the -> function : 1
definition of the -> macro : 1
definition of the -> file : 1
definition of the -> possible : 1
the the parameter -> qualifiers : 1
the the parameter -> of : 1
the the parameter -> is : 1
the parameter qualifiers -> in : 1
parameter qualifiers in -> the : 1
qualifiers in the -> declarations : 1
declarations are only -> those : 1
are only those -> in : 1
only those in -> the : 1
the definition int -> int : 1
definition int int -> return : 1
int return x -> and : 1
int return x -> demo : 1
return x and -> pointer : 1
x and pointer -> parameter : 1
and pointer parameter -> types : 1
pointer parameter types -> are : 1
parameter types are -> also : 1
parameter types are -> then : 1
parameter types are -> dependent : 1
types are also -> in : 1
are also in -> a : 1
also in a -> function : 1
function a parameter -> with : 1
a parameter with -> an : 1
a parameter with -> a : 1
parameter with an -> array : 1
an array type -> is : 1
array type is -> actually : 1
actually a not -> an : 1
not an the -> first : 1
the first size -> in : 1
first size in -> a : 1
size in a -> multidimensional : 1
multidimensional array is -> ignored : 1
array is ignored -> and : 1
is ignored and -> can : 1
ignored and can -> be : 1
be a parameter -> of : 1
a parameter of -> function : 2
parameter of function -> type : 1
parameter of function -> pointer : 1
of function type -> is : 1
function type is -> the : 1
as a parameter -> of : 1
as a parameter -> list : 1
of function pointer -> the : 1
function pointer the -> rules : 1
pointer the rules -> for : 1
rules for function -> types : 1
rules for function -> templates : 1
for function types -> apply : 1
function types apply -> recursively : 1
types apply recursively -> to : 1
apply recursively to -> function : 1
recursively to function -> and : 1
to function and -> function : 1
function and function -> pointer : 1
function and function -> template : 1
and function pointer -> a : 1
function pointer a -> parameter : 1
function pointer a -> function : 1
pointer a parameter -> with : 1
parameter with a -> type : 1
with a type -> that : 2
with a type -> can : 1
with a type -> trait : 1
type that is -> a : 3
type that is -> convertible : 1
type that is -> used : 1
takes an is -> equivalent : 1
an is equivalent -> to : 1
equivalent to one -> with : 1
to one with -> a : 1
one with a -> type : 1
that takes a -> pointer : 1
that takes a -> reference : 2
that takes a -> implicit : 2
that takes a -> stream : 1
that takes a -> single : 1
that takes a -> value : 1
that takes a -> variable : 2
takes a pointer -> illustrates : 1
takes a pointer -> to : 2
a pointer illustrates -> equivalent : 1
pointer illustrates equivalent -> pointer : 1
illustrates equivalent pointer -> pointer : 1
equivalent pointer pointer -> const : 1
pointer pointer const -> size : 1
pointer const size -> is : 1
const size is -> ignored : 1
size is ignored -> int : 1
is ignored int -> const : 1
ignored int const -> equivalent : 1
int const equivalent -> declaration : 2
const equivalent declaration -> int : 2
equivalent declaration int -> const : 2
declaration int const -> equivalent : 1
declaration int const -> definition : 1
int const definition -> return : 1
const definition return -> int : 1
definition return int -> int : 1
int int equivalent -> int : 2
int equivalent int -> int : 2
equivalent int int -> equivalent : 1
equivalent int int -> definition : 1
int definition return -> declarations : 1
definition return declarations -> do : 1
return declarations do -> not : 1
declarations do not -> create : 1
do not create -> new : 1
do not create -> any : 1
not create new -> but : 1
create new but -> only : 1
new but only -> synonyms : 1
but only synonyms -> for : 1
only synonyms for -> existing : 1
synonyms for existing -> parameters : 1
for existing parameters -> that : 1
existing parameters that -> differ : 1
parameters that differ -> only : 1
that differ only -> in : 1
that differ only -> by : 3
differ only in -> their : 1
only in their -> use : 1
in their use -> of : 1
their use of -> types : 1
use of types -> are : 1
of types are -> as : 1
are as shown -> in : 2
shown in typedef -> in : 1
in typedef in -> equivalent : 1
typedef in equivalent -> parameter : 2
in equivalent parameter -> typedef : 1
in equivalent parameter -> int : 1
equivalent parameter typedef -> in : 1
parameter typedef in -> equivalent : 1
equivalent parameter int -> typedef : 1
parameter int typedef -> int : 1
int typedef int -> const : 1
typedef int const -> void : 1
int const void -> void : 1
int const void -> static : 1
const void void -> equivalent : 1
void void equivalent -> void : 1
void equivalent void -> equivalent : 2
void equivalent void -> int : 1
equivalent void equivalent -> void : 2
equivalent void int -> definition : 1
void int definition -> can : 1
int definition can -> declare : 1
definition can declare -> a : 1
a function type -> from : 1
a function type -> must : 1
function type from -> a : 1
type from a -> but : 1
from a but -> you : 1
a but you -> cannot : 1
a but you -> can : 1
use the in -> a : 1
a function this -> usage : 1
function this usage -> is : 1
this usage is -> for : 1
this usage is -> you : 1
this usage is -> needed : 1
usage is for -> int : 1
is for int -> func : 1
for int func -> declares : 1
int func declares -> int : 1
func declares int -> int : 1
declares int int -> int : 1
int int cannot -> use : 1
int cannot use -> here : 1
cannot use here -> return : 1
use here return -> a : 1
here return a -> careful : 1
return a careful -> to : 1
a careful to -> distinguish : 1
careful to distinguish -> between : 1
distinguish between a -> type : 1
distinguish between a -> pointer : 1
between a type -> and : 1
a type and -> a : 2
type and a -> function : 1
type and a -> list : 1
type and a -> functions : 1
pointer a function -> can : 1
function pointer and -> can : 1
pointer and can -> be : 1
be called using -> a : 1
be called using -> the : 1
called using a -> function : 1
using a function -> a : 1
function a function -> cannot : 1
function a function -> primary : 1
a function cannot -> be : 1
function cannot be -> used : 1
function cannot be -> declared : 1
function cannot be -> class : 1
declare a the -> following : 1
a the following -> is : 1
an example of -> the : 8
an example of -> how : 2
an example of -> for : 1
an example of -> a : 6
an example of -> reversing : 1
an example of -> function : 1
an example of -> intersection : 1
an example of -> finding : 1
an example of -> calling : 1
an example of -> such : 2
an example of -> value : 1
example of the -> implicit : 1
example of the -> removal : 4
example of the -> replacement : 3
of the implicit -> conversion : 1
the implicit conversion -> of : 1
implicit conversion of -> a : 1
conversion of a -> to : 1
function and the -> use : 1
function and the -> subsequent : 1
function and the -> template : 1
function and the -> default : 1
function and the -> first : 1
function and the -> overloaded : 1
function and the -> end : 1
and the use -> of : 1
function to call -> the : 1
function to call -> when : 1
call the type -> funcptr : 1
the type funcptr -> a : 1
type funcptr a -> object : 1
funcptr a object -> int : 1
a object int -> i : 1
object int i -> call : 1
int i call -> the : 1
i call the -> function : 1
the function that -> a : 1
the function that -> takes : 1
the function that -> function : 1
that a points -> is : 1
a points is -> similar : 1
points is similar -> to : 1
similar to a -> function : 2
similar to a -> global : 1
similar to a -> but : 2
a function but -> it : 1
but it ignores -> the : 1
it ignores the -> return : 1
ignores the return -> overload : 1
the return overload -> resolution : 1
return overload resolution -> relies : 1
overload resolution relies -> on : 1
resolution relies on -> function : 1
relies on function -> signatures : 1
on function signatures -> to : 1
function signatures to -> determine : 1
signatures to determine -> which : 1
determine which overloaded -> function : 1
which overloaded function -> to : 1
overloaded function to -> see : 1
overloaded function to -> a : 1
function to see -> later : 1
to see later -> in : 1
in this bodies -> and : 1
this bodies and -> try : 1
bodies and try -> bodies : 1
bodies and try -> function : 1
and try bodies -> and : 1
try bodies and -> try : 1
and try function -> definition : 1
try function definition -> consists : 1
function definition consists -> of : 1
definition consists of -> a : 1
consists of a -> function : 1
consists of a -> number : 1
consists of a -> sequence : 1
consists of a -> maze : 1
function declaration followed -> by : 1
declaration followed by -> a : 1
by a function -> the : 1
by a function -> int : 1
by a function -> declaration : 2
function the body -> has : 1
the body has -> one : 1
body has one -> of : 1
of two when -> the : 1
two when the -> function : 1
function is when -> execution : 1
is when execution -> reaches : 1
execution reaches a -> statement : 1
reaches a statement -> or : 1
statement or the -> end : 1
or the end -> of : 1
of the compound -> the : 1
the compound the -> function : 1
compound the function -> up : 1
the function up -> a : 1
function up a -> block : 1
up a block -> that : 1
a block that -> surrounds : 1
block that surrounds -> the : 1
that surrounds the -> constructor : 1
surrounds the constructor -> initializers : 1
the constructor initializers -> and : 1
the constructor initializers -> as : 1
constructor initializers and -> function : 1
initializers and function -> if : 1
and function if -> an : 1
function if an -> exception : 1
exception is thrown -> from : 3
exception is thrown -> while : 3
exception is thrown -> during : 2
exception is thrown -> after : 1
exception is thrown -> in : 2
exception is thrown -> by : 1
exception is thrown -> when : 1
exception is thrown -> or : 1
is thrown from -> any : 1
is thrown from -> an : 2
is thrown from -> the : 1
thrown from any -> of : 1
from any of -> the : 1
from any of -> these : 1
it is handled -> by : 1
is handled by -> the : 1
is handled by -> and : 1
handled by the -> handlers : 1
by the handlers -> in : 1
the handlers in -> the : 1
handlers in the -> same : 1
handlers in the -> usual : 1
manner as any -> exception : 1
as any exception -> thrown : 1
any exception thrown -> from : 1
exception thrown from -> the : 1
from the compound -> this : 1
the compound this -> form : 1
compound this form -> is : 1
this form is -> typically : 1
form is typically -> used : 1
typically used only -> with : 1
used only with -> constructors : 1
used only with -> an : 1
used only with -> a : 1
only with constructors -> that : 1
with constructors that -> have : 1
constructors that have -> see : 1
that have see -> for : 1
have see for -> more : 1
information about constructor -> constructor : 1
about constructor constructor -> initializers : 1
constructor constructor initializers -> in : 1
constructor initializers in -> the : 1
in the second -> form : 1
in the second -> the : 1
second form are -> without : 1
form are without -> the : 1
are without the -> form : 1
without the form -> can : 1
the form can -> be : 1
form can be -> used : 1
used for any -> it : 1
for any it -> is : 1
any it is -> equivalent : 1
any it is -> not : 1
any it is -> your : 1
it is equivalent -> to : 9
it is equivalent -> text : 1
equivalent to having -> a : 1
to having a -> statement : 1
having a statement -> around : 1
a statement around -> the : 1
statement around the -> entire : 1
around the entire -> function : 1
the entire function -> try : 1
the entire function -> definition : 1
entire function try -> function : 1
function try function -> shows : 1
try function shows -> a : 1
function shows a -> function : 1
function shows a -> simple : 1
function body used -> in : 1
body used in -> this : 1
in this try -> function : 1
this try function -> try : 1
try function try -> statements : 1
function try statements -> catch : 1
try statements catch -> handler : 1
statements catch handler -> void : 1
catch handler void -> try : 1
handler void try -> statements : 1
void try statements -> handler : 1
try statements handler -> single : 1
statements handler single -> function : 1
handler single function -> name : 1
single function name -> can : 1
function name can -> have : 1
function name can -> be : 1
name can have -> multiple : 1
name can have -> different : 1
have multiple if -> those : 1
multiple if those -> declarations : 1
those declarations specify -> different : 1
declarations specify different -> function : 1
specify different function -> the : 1
different function the -> function : 1
function name is -> a : 1
function name is -> looked : 2
function name is -> formed : 1
function name is -> followed : 1
function call to -> an : 1
function call to -> the : 1
function call to -> initialize : 1
call to an -> overloaded : 2
call to an -> unformatted : 1
to an overloaded -> function : 1
to an overloaded -> as : 1
overloaded function requires -> the : 1
compiler to resolve -> the : 1
to resolve the -> overloaded : 1
to resolve the -> overload : 1
resolve the overloaded -> name : 1
the overloaded name -> and : 1
overloaded name and -> decide : 1
name and decide -> which : 1
and decide which -> function : 1
decide which function -> to : 1
which function to -> the : 1
which function to -> if : 1
compiler uses the -> argument : 1
compiler uses the -> static : 1
compiler uses the -> template : 2
uses the argument -> types : 1
the argument types -> not : 1
the argument types -> and : 2
the argument types -> match : 2
argument types not -> the : 1
types not the -> return : 1
not the return -> to : 1
not the return -> value : 4
the return to -> resolve : 1
return to resolve -> calls : 1
to resolve calls -> to : 1
resolve calls to -> shows : 1
calls to shows -> simple : 1
to shows simple -> examples : 1
shows simple examples -> of : 2
examples of two -> overloaded : 1
of two overloaded -> functions : 1
two overloaded functions -> named : 1
overloaded functions named -> one : 1
functions named one -> for : 1
named one for -> arguments : 1
one for arguments -> and : 1
for arguments and -> the : 1
arguments and the -> other : 1
other for the -> rest : 1
for the rest -> of : 2
this section explains -> the : 1
section explains the -> rules : 1
explains the rules -> for : 1
rules for overloading -> and : 1
overloading and double -> int : 1
and double int -> overloaded : 1
double int overloaded -> overloaded : 1
int overloaded overloaded -> you : 1
overloaded overloaded you -> declare : 1
overloaded you declare -> more : 1
you declare more -> than : 1
declare more than -> one : 1
than one function -> with : 1
function with the -> same : 5
function with the -> or : 1
function with the -> desired : 1
function with the -> simplest : 1
same name in -> the : 1
same name in -> that : 1
the same you -> are : 1
the same you -> should : 1
same you are -> overloading : 1
you are overloading -> the : 1
are overloading the -> function : 1
overloading the function -> the : 1
be an ordinary -> member : 1
an ordinary member -> or : 1
ordinary member or -> overloaded : 1
member or overloaded -> functions : 1
or overloaded functions -> must : 1
overloaded functions must -> differ : 1
functions must differ -> in : 1
must differ in -> their : 1
differ in their -> parameter : 1
in their parameter -> they : 1
their parameter they -> must : 1
parameter they must -> have : 1
they must have -> a : 1
they must have -> the : 17
have a different -> number : 1
have a different -> for : 1
have a different -> each : 1
have a different -> when : 1
a different number -> of : 1
different number of -> or : 1
number of or -> the : 1
or the parameter -> types : 1
the parameter types -> must : 1
parameter types must -> be : 1
parameter types must -> match : 1
types must be -> refer : 1
types must be -> matched : 1
must be refer -> to : 1
be refer to -> types : 1
refer to types -> and : 1
to types and -> earlier : 1
types and earlier -> in : 1
chapter for information -> on : 2
chapter for information -> about : 8
for information on -> equivalent : 1
for information on -> how : 1
for information on -> the : 2
information on equivalent -> parameter : 1
on equivalent parameter -> arguments : 1
equivalent parameter arguments -> are : 1
parameter arguments are -> not : 1
arguments are not -> considered : 1
arguments are not -> allowed : 1
arguments are not -> treated : 1
are not considered -> when : 1
are not considered -> normal : 2
not considered when -> declaring : 1
considered when declaring -> overloaded : 1
when declaring overloaded -> functions : 1
declaring overloaded functions -> are : 1
overloaded functions are -> important : 1
overloaded functions are -> notice : 1
functions are important -> when : 1
are important when -> resolving : 1
important when resolving -> a : 1
when resolving a -> call : 1
resolving a call -> to : 1
a call to -> an : 1
a call to -> a : 4
a call to -> the : 7
a call to -> you : 1
a call to -> macro : 1
a call to -> call : 1
a call to -> functions : 1
a call to -> might : 2
a call to -> or : 1
a call to -> function : 1
a call to -> with : 2
overloaded as described -> in : 1
described in overloaded -> member : 1
in overloaded member -> and : 1
overloaded member and -> function : 1
member and function -> shows : 1
member and function -> point : 1
and function shows -> overloaded : 1
and function shows -> how : 1
function shows overloaded -> constructors : 1
shows overloaded constructors -> and : 1
overloaded constructors and -> member : 1
constructors and member -> functions : 1
and member functions -> for : 1
and member functions -> const : 1
and member functions -> using : 1
and member functions -> of : 1
and member functions -> if : 1
and member functions -> to : 1
member functions for -> the : 1
member functions for -> testing : 1
member functions for -> associative : 1
member functions for -> working : 1
member functions for -> and : 1
member functions for -> searching : 1
functions for the -> and : 1
functions for the -> overloaded : 1
functions for the -> associative : 1
the and overloaded -> declarations : 1
and overloaded declarations -> for : 1
overloaded declarations for -> the : 1
for the member -> and : 2
the member and -> function : 1
the member and -> the : 5
the member and -> throws : 1
and function point -> x : 1
function point x -> overloaded : 1
point x overloaded -> constructors : 1
x overloaded constructors -> int : 1
overloaded constructors int -> x : 1
constructors int x -> and : 1
int x and -> y : 1
int x and -> and : 1
x and y -> are : 1
x and y -> private : 1
and y are -> int : 1
y are int -> const : 1
are int const -> return : 1
int const return -> void : 5
int const return -> int : 5
int const return -> double : 1
int const return -> virtual : 1
int const return -> return : 2
int const return -> returns : 1
int const return -> const : 2
const return void -> int : 2
const return void -> void : 6
const return void -> double : 1
const return void -> const : 3
const return void -> reduce : 2
const return void -> typedef : 1
const return void -> control : 1
return void int -> const : 2
return void int -> add : 1
return void int -> instance : 1
void int const -> return : 2
void int const -> extern : 1
void int const -> function : 1
void int add -> is : 1
int add is -> int : 1
add is int -> int : 1
int int double -> double : 1
int int double -> float : 1
int double double -> long : 1
int double double -> double : 1
double double long -> long : 1
double double long -> double : 5
double double long -> function : 1
double long long -> the : 1
long long the -> following : 1
long the following -> declarations : 1
the following declarations -> are : 1
following declarations are -> not : 1
declarations are not -> but : 1
are not but -> are : 1
are not but -> static : 1
not but are -> redeclarations : 1
but are redeclarations -> of : 1
are redeclarations of -> the : 1
redeclarations of the -> add : 1
of the add -> int : 1
the add int -> a : 1
add int a -> int : 1
a int b -> long : 1
int b long -> long : 1
b long long -> long : 1
long long long -> cannot : 1
long long cannot -> overload : 1
long cannot overload -> on : 1
cannot overload on -> return : 1
overload on return -> overloaded : 1
on return overloaded -> overloaded : 1
return overloaded overloaded -> function : 1
overloaded overloaded function -> call : 1
overloaded function call -> expression : 1
function call expression -> must : 1
function call expression -> resolves : 1
call expression must -> identify : 1
expression must identify -> the : 1
must identify the -> function : 1
identify the function -> being : 1
the function being -> based : 1
function being based -> on : 1
being based on -> its : 1
based on its -> name : 1
on its name -> and : 1
its name and -> for : 1
name and for -> the : 1
for the simple -> expression : 1
for the simple -> syntax : 1
for the simple -> cout : 1
the simple expression -> might : 1
simple expression might -> be : 1
might be a -> call : 2
might be a -> range : 1
might be a -> multibyte : 2
might be a -> sparse : 2
be a call -> to : 2
call to a -> function : 1
call to a -> virtual : 2
call to a -> positioning : 2
call to a -> subset : 1
call to a -> copy : 2
function named a -> function : 1
named a function -> call : 1
named a function -> template : 1
function call through -> a : 1
call through a -> function : 1
through a function -> pointer : 1
function pointer named -> a : 1
pointer named a -> function : 1
a function template -> named : 1
a function template -> creates : 1
a function template -> has : 1
a function template -> with : 2
a function template -> and : 1
a function template -> using : 1
a function template -> declaration : 1
a function template -> includes : 1
a function template -> requires : 1
a function template -> or : 2
a function template -> returns : 1
a function template -> assigns : 1
a function template -> is : 2
a function template -> constructs : 2
function template named -> the : 1
template named the -> construction : 1
named the construction -> of : 1
the construction of -> an : 1
the construction of -> the : 2
construction of an -> object : 1
of class a -> conversion : 1
of class a -> type : 1
class a conversion -> of : 1
a conversion of -> to : 1
conversion of to -> a : 1
of to a -> type : 1
of to a -> source : 1
a type named -> or : 1
type named or -> the : 1
named or the -> invocation : 1
or the invocation -> of : 1
the invocation of -> the : 1
call operator of -> an : 1
operator of an -> object : 1
object named in -> each : 1
named in each -> the : 1
in each the -> compiler : 1
each the compiler -> might : 1
use different rules -> for : 1
different rules for -> interpreting : 1
rules for interpreting -> and : 1
for interpreting and -> compiler : 1
interpreting and compiler -> first : 1
and compiler first -> uses : 1
compiler first uses -> the : 2
first uses the -> function : 1
first uses the -> ordinary : 1
uses the function -> name : 1
name and context -> to : 1
and context to -> create : 1
context to create -> a : 1
to create a -> list : 1
to create a -> synonym : 1
to create a -> string : 2
to create a -> facet : 1
to create a -> function : 2
to create a -> class : 2
to create a -> object : 3
to create a -> generalized : 1
to create a -> mask : 1
to create a -> use : 1
create a list -> of : 2
list of the -> number : 1
list of the -> integral : 1
list of the -> function : 1
of the number -> and : 1
of the number -> of : 11
the number and -> types : 1
the number and -> type : 1
number and types -> of : 1
and types of -> the : 1
of the arguments -> are : 1
arguments are used -> to : 1
are used to -> select : 1
are used to -> instantiate : 1
are used to -> determine : 1
are used to -> working : 2
are used to -> convert : 1
used to select -> the : 1
used to select -> code : 1
to select the -> best : 1
select the best -> match : 1
the best match -> from : 1
the best match -> is : 2
best match from -> the : 1
match from the -> and : 1
match from the -> the : 1
from the and -> that : 1
from the and -> does : 1
from the and -> the : 1
the and that -> function : 1
the and that -> additional : 1
the and that -> a : 1
and that function -> is : 1
that function is -> the : 1
that function is -> called : 1
the one that -> is : 2
that is if -> no : 1
that is if -> multiple : 1
that is if -> there : 1
if no match -> is : 1
no match is -> the : 1
is the compiler -> reports : 1
is the compiler -> uses : 1
is the compiler -> generates : 1
is the compiler -> sets : 1
is the compiler -> combines : 1
the compiler reports -> an : 9
compiler reports an -> if : 1
compiler reports an -> ambiguity : 3
compiler reports an -> error : 2
compiler reports an -> the : 2
compiler reports an -> see : 1
reports an if -> more : 1
an if more -> than : 1
if more than -> one : 1
than one match -> ties : 1
one match ties -> for : 1
match ties for -> the : 1
ties for the -> compiler : 1
reports an ambiguity -> the : 1
reports an ambiguity -> to : 1
reports an ambiguity -> int : 1
an ambiguity the -> standard : 1
ambiguity the standard -> library : 1
standard library declares -> three : 1
library declares three -> different : 1
declares three different -> functions : 1
three different functions -> in : 1
different functions in -> double : 1
functions in double -> long : 1
in double long -> double : 1
double long double -> you : 1
double long double -> double : 22
double long double -> with : 2
double long double -> long : 1
double long double -> class : 1
double long double -> const : 1
long double you -> add : 1
double you add -> another : 1
you add another -> function : 1
add another function -> named : 1
another function named -> such : 1
function named such -> as : 1
named such as -> the : 1
as the to -> apply : 1
as the to -> match : 1
the to apply -> it : 1
to apply it -> to : 1
apply it to -> each : 1
it to each -> element : 1
to each element -> of : 3
to each element -> in : 2
to each element -> is : 1
an array double -> a : 1
array double a -> function : 1
double a function -> call : 1
call to the -> compiler : 1
call to the -> function : 3
call to the -> memory : 1
call to the -> collation : 1
call to the -> such : 1
call to the -> first : 1
call to the -> difference : 1
call to the -> multibyte : 1
call to the -> attributes : 1
uses the ordinary -> rules : 1
the ordinary rules -> of : 1
the ordinary rules -> so : 1
ordinary rules of -> name : 1
rules of name -> lookup : 1
rules of name -> when : 1
of name lookup -> to : 1
name lookup to -> find : 1
lookup to find -> the : 1
find the first -> suitable : 1
the first suitable -> object : 1
first suitable object -> or : 1
suitable object or -> function : 1
object or function -> named : 1
object or function -> with : 1
object or function -> can : 1
object or function -> has : 1
object or function -> is : 1
object or function -> these : 1
or function named -> suppose : 1
function named suppose -> you : 1
named suppose you -> used : 1
suppose you used -> to : 1
you used to -> import : 1
used to import -> the : 1
to import the -> standard : 1
import the standard -> functions : 1
the standard functions -> into : 1
the standard functions -> have : 1
standard functions into -> the : 1
functions into the -> same : 1
into the same -> namespace : 1
same namespace as -> your : 1
same namespace as -> the : 1
namespace as your -> the : 1
as your the -> compiler : 1
your the compiler -> would : 1
the compiler would -> collect : 1
the compiler would -> not : 1
the compiler would -> interpret : 1
compiler would collect -> all : 1
would collect all -> the : 1
collect all the -> overloaded : 1
overloaded functions as -> the : 1
functions as the -> candidate : 1
as the candidate -> which : 1
the candidate which -> has : 1
candidate which has -> four : 1
which has four -> elements : 1
has four elements -> in : 1
four elements in -> this : 1
elements in this -> case : 1
elements in this -> vector : 1
this case three -> original : 1
case three original -> functions : 1
three original functions -> plus : 1
original functions plus -> the : 1
functions plus the -> array : 1
plus the array -> the : 1
array the list -> is : 1
the list is -> then : 1
the list is -> constructed : 2
the list is -> not : 1
the list is -> an : 1
the list is -> note : 1
the list is -> the : 3
the list is -> at : 1
the list is -> in : 1
list is then -> pruned : 1
is then pruned -> to : 1
then pruned to -> eliminate : 1
pruned to eliminate -> functions : 1
to eliminate functions -> with : 1
eliminate functions with -> the : 1
with the wrong -> number : 2
the wrong number -> of : 3
wrong number of -> in : 1
wrong number of -> then : 1
wrong number of -> if : 1
number of in -> this : 1
number of in -> which : 1
of in this -> the : 1
of in this -> means : 1
this the array -> version : 1
the array version -> of : 1
array version of -> the : 1
function is eliminated -> because : 1
is eliminated because -> the : 1
eliminated because the -> expression : 1
because the expression -> has : 1
expression has only -> one : 1
has only one -> the : 1
has only one -> destructor : 1
of is used -> to : 1
is used to -> determine : 1
is used to -> initialize : 1
is used to -> finalize : 1
is used to -> define : 1
is used to -> compare : 2
is used to -> access : 1
is used to -> instantiate : 1
is used to -> ensure : 1
is used to -> represent : 1
is used to -> report : 1
is used to -> attempt : 1
used to determine -> which : 1
used to determine -> where : 1
determine which function -> to : 1
function to if -> there : 1
to if there -> is : 3
is an exact -> the : 1
an exact the -> corresponding : 1
exact the corresponding -> function : 1
the corresponding function -> is : 1
corresponding function is -> if : 1
is if for -> an : 1
if for an -> the : 1
for an the -> compiler : 1
for an the -> requirements : 1
reports an error -> because : 1
reports an error -> when : 1
an error because -> the : 1
an error because -> there : 1
error because the -> three : 1
because the three -> functions : 1
the three functions -> look : 1
three functions look -> equally : 1
functions look equally -> if : 1
look equally if -> has : 1
equally if has -> class : 1
if has class -> and : 1
if has class -> the : 1
has class and -> the : 1
and the class -> has : 2
and the class -> members : 1
and the class -> to : 1
and the class -> the : 1
and the class -> is : 2
and the class -> in : 1
has a conversion -> function : 1
a conversion function -> to : 1
a conversion function -> and : 1
function to one -> of : 1
to one of -> the : 3
to one of -> a : 1
the compiler implicitly -> calls : 1
the compiler implicitly -> converts : 1
compiler implicitly calls -> that : 1
implicitly calls that -> conversion : 1
calls that conversion -> and : 1
that conversion and -> then : 1
conversion and then -> calls : 1
and then calls -> the : 1
and then calls -> again : 1
and then calls -> if : 3
and then calls -> you : 1
and then calls -> to : 2
then calls the -> corresponding : 1
calls the corresponding -> fixedpoint : 1
the corresponding fixedpoint -> operator : 1
corresponding fixedpoint operator -> long : 1
fixedpoint operator long -> void : 1
operator long void -> fixedpoint : 1
long void fixedpoint -> prints : 1
void fixedpoint prints -> a : 1
fixedpoint prints a -> long : 1
prints a long -> double : 1
a long double -> a : 1
long double a -> candidate : 1
long double a -> value : 1
double a candidate -> is : 1
a candidate is -> a : 1
candidate is a -> the : 1
the compiler deduces -> the : 4
compiler deduces the -> argument : 1
compiler deduces the -> traits : 1
compiler deduces the -> template : 2
deduces the argument -> types : 1
argument types and -> from : 1
argument types and -> the : 1
types and from -> that : 1
types and from -> the : 1
and from that -> point : 1
from that point -> the : 1
that point the -> template : 1
point the template -> instance : 1
the template instance -> is : 2
the template instance -> requires : 1
template instance is -> treated : 1
template instance is -> added : 1
instance is treated -> as : 1
as a normal -> rules : 1
as a normal -> you : 1
a normal rules -> for : 1
normal rules for -> creating : 1
rules for creating -> the : 1
for creating the -> candidate : 1
creating the candidate -> list : 1
the candidate list -> and : 1
the candidate list -> is : 1
candidate list and -> argument : 1
list and argument -> list : 1
and argument list -> depend : 1
argument list depend -> on : 1
list depend on -> the : 1
function the argument -> list : 1
the argument list -> can : 1
the argument list -> is : 1
argument list can -> also : 1
list can also -> depend : 1
can also depend -> on : 1
also depend on -> when : 1
depend on when -> choosing : 1
on when choosing -> an : 1
when choosing an -> overloaded : 1
choosing an overloaded -> function : 1
a member class -> is : 1
member class is -> treated : 1
class is treated -> as : 1
treated as an -> argument : 1
as an argument -> more : 1
as an argument -> and : 6
as an argument -> to : 2
an argument more -> member : 1
argument more member -> functions : 1
more member functions -> have : 1
member functions have -> an : 1
member functions have -> the : 1
functions have an -> whose : 1
have an whose -> type : 1
an whose type -> is : 1
reference to in -> which : 1
is the class -> that : 9
is the class -> saves : 1
is the class -> of : 1
is the class -> required : 1
class that defines -> the : 1
class that defines -> an : 1
that defines the -> member : 1
that defines the -> mode : 1
defines the member -> any : 1
the member any -> qualifiers : 1
member any qualifiers -> on : 1
any qualifiers on -> the : 1
qualifiers on the -> member : 1
on the member -> function : 1
member function also -> qualify : 1
function also qualify -> the : 1
also qualify the -> type : 1
qualify the type -> the : 2
the type the -> object : 1
the type the -> function : 1
type the object -> type : 1
the object type -> for : 1
object type for -> a : 1
function the type -> of : 1
of is a -> pointer : 1
of is a -> policy : 1
of is a -> string : 2
of is a -> negative : 1
pointer to qualified -> for : 1
to qualified for -> more : 1
qualified for more -> information : 1
information about to -> a : 1
about to a -> member : 1
member function applies -> to : 1
function applies to -> a : 1
applies to a -> specific : 2
applies to a -> style : 1
to a specific -> which : 1
to a specific -> to : 1
to a specific -> member : 1
to a specific -> set : 1
to a specific -> it : 1
to a specific -> given : 1
a specific which -> is : 1
a specific which -> you : 1
specific which is -> the : 1
is the when -> calling : 2
the when calling -> a : 1
the when calling -> an : 1
calling a member -> function : 1
member function with -> the : 4
member function with -> an : 1
with the or -> the : 3
with the or -> it : 1
the or the -> implicit : 1
the or the -> difference : 1
the or the -> might : 1
the or the -> two : 1
the or the -> smallest : 1
or the implicit -> object : 1
implicit object argument -> is : 5
object argument is -> the : 4
object argument is -> considered : 1
argument is the -> left : 2
argument is the -> when : 1
argument is the -> implicit : 1
argument is the -> lefthand : 1
argument is the -> number : 1
the left for -> an : 1
the left for -> a : 1
left for an -> overloaded : 1
an overloaded binary -> operator : 1
overloaded binary operator -> as : 1
binary operator as -> the : 1
operator as the -> implicit : 1
as the implicit -> object : 1
left for a -> unary : 1
for a unary -> the : 1
for a unary -> operator : 1
a unary the -> implicit : 1
unary the implicit -> object : 1
calling an unqualified -> function : 1
an unqualified function -> inside : 1
unqualified function inside -> a : 1
function inside a -> nonstatic : 1
function inside a -> class : 1
inside a nonstatic -> member : 1
nonstatic member the -> implicit : 1
nonstatic member the -> name : 1
member the implicit -> object : 1
is the implicit -> object : 1
argument is considered -> the : 1
is considered the -> first : 1
considered the first -> argument : 1
the first argument -> in : 1
the first argument -> is : 1
the first argument -> and : 2
the first argument -> to : 3
the first argument -> of : 1
the first argument -> should : 4
first argument in -> the : 1
argument in the -> argument : 1
in the argument -> unlike : 1
in the argument -> range : 1
in the argument -> is : 2
in the argument -> to : 1
the argument unlike -> normal : 1
argument unlike normal -> implicit : 1
unlike normal implicit -> type : 1
normal implicit type -> conversions : 1
implicit type conversions -> do : 1
implicit type conversions -> on : 1
type conversions do -> not : 1
conversions do not -> take : 1
not take place -> for : 1
take place for -> the : 1
place for the -> implicit : 1
for the implicit -> object : 1
implicit object section -> describes : 1
object section describes -> how : 1
section describes how -> the : 1
describes how the -> compiler : 1
the compiler creates -> its : 1
the compiler creates -> a : 1
compiler creates its -> list : 1
creates its list -> of : 1
its list of -> candidate : 2
list of candidate -> calls : 1
list of candidate -> functions : 1
list of candidate -> it : 2
list of candidate -> each : 1
of candidate calls -> and : 1
candidate calls and -> candidate : 2
calls and candidate -> summarizes : 1
calls and candidate -> calls : 1
calls and candidate -> solid : 1
and candidate summarizes -> the : 1
candidate summarizes the -> various : 1
summarizes the various -> categories : 1
the various categories -> of : 1
various categories of -> function : 1
categories of function -> and : 1
of function and -> the : 2
and the subsequent -> subsections : 1
the subsequent subsections -> provide : 1
subsequent subsections provide -> the : 1
subsections provide the -> calls : 1
provide the calls -> and : 1
the calls and -> candidate : 1
and candidate calls -> and : 1
and candidate solid -> solid : 1
candidate solid solid -> solid : 1
solid solid call -> solid : 1
solid call solid -> solid : 1
call solid solid -> solid : 1
solid solid member -> function : 1
solid member function -> solid : 1
member function solid -> solid : 1
function solid solid -> solid : 2
solid solid function -> solid : 1
solid function solid -> solid : 1
solid solid functionsnonmember -> solid : 2
solid functionsnonmember solid -> solid : 2
functionsnonmember solid solid -> solid : 2
solid solid conversion -> solid : 3
solid conversion solid -> solid : 2
solid conversion solid -> bound : 1
conversion solid solid -> solid : 2
conversion solid bound -> to : 1
solid bound to -> solid : 1
bound to solid -> conversion : 1
to solid conversion -> member : 1
solid conversion member -> function : 1
conversion member function -> member : 1
member function that -> uses : 1
member function that -> returns : 1
member function that -> is : 1
member function that -> has : 1
function that uses -> the : 1
function that uses -> you : 1
uses the or -> operator : 1
the or operator -> to : 1
the or operator -> is : 1
or operator to -> call : 1
to call a -> function : 1
to call a -> virtual : 1
to call a -> member : 3
call a function -> must : 1
a function must -> call : 1
a function must -> dynamically : 1
function must call -> a : 1
must call a -> member : 1
operand and in -> its : 1
and in its -> base : 1
in its base -> classes : 1
base classes the -> name : 1
classes the name -> lookup : 1
lookup rules listed -> in : 1
rules listed in -> the : 1
in the search -> starts : 1
the search starts -> in : 1
the search starts -> at : 1
search starts in -> the : 1
starts in the -> if : 1
the if that -> class : 1
if that class -> declares : 1
that class declares -> a : 1
class declares a -> member : 1
declares a member -> function : 1
with the desired -> the : 1
with the desired -> name : 2
the desired the -> search : 1
the desired the -> flags : 1
the desired the -> solution : 1
the desired the -> performance : 4
desired the search -> and : 1
the search and -> the : 1
search and the -> candidate : 1
and the candidate -> functions : 1
the candidate functions -> are : 3
the candidate functions -> for : 1
candidate functions are -> all : 1
candidate functions are -> taken : 1
candidate functions are -> constructors : 1
candidate functions are -> the : 1
functions are all -> the : 1
all the member -> functions : 1
the member functions -> with : 1
the member functions -> for : 1
the member functions -> the : 1
the member functions -> of : 19
the member functions -> can : 2
member functions with -> the : 2
member functions with -> no : 1
name in that -> if : 1
in that if -> no : 1
that if no -> matching : 1
that if no -> matches : 1
if no matching -> member : 1
if no matching -> placement : 1
if no matching -> items : 1
if no matching -> item : 2
no matching member -> function : 1
matching member function -> is : 1
matching member function -> in : 1
is the search -> continues : 1
the search continues -> with : 2
search continues with -> the : 1
search continues with -> ancestor : 1
with the immediate -> base : 1
immediate base the -> search : 1
immediate base the -> compiler : 1
base the search -> stops : 1
the search stops -> when : 1
search stops when -> a : 1
stops when a -> matching : 1
when a matching -> name : 1
a matching name -> is : 1
a matching name -> and : 1
matching name is -> other : 1
name is other -> a : 1
is other a -> class : 1
other a class -> cannot : 1
a class cannot -> overload : 1
a class cannot -> have : 1
class cannot overload -> a : 1
cannot overload a -> function : 1
overload a function -> that : 1
overload a function -> template : 1
a base if -> the : 1
base if the -> derived : 1
if the derived -> class : 1
derived class has -> a : 2
same the derived -> class : 2
derived class hides -> the : 1
derived class hides -> a : 1
class hides the -> name : 1
hides the name -> that : 1
the name that -> would : 1
name that would -> be : 1
that would be -> inherited : 1
that would be -> visible : 1
that would be -> there : 1
that would be -> the : 1
would be inherited -> from : 1
be inherited from -> the : 1
from the base -> class : 1
class the derived -> class : 1
class the derived -> access : 1
derived class might -> override : 1
class might override -> a : 1
might override a -> virtual : 1
override a virtual -> see : 1
a virtual see -> insert : 1
virtual see insert -> a : 1
see insert a -> declaration : 1
insert a declaration -> in : 1
declaration in the -> derived : 1
declaration in the -> block : 1
declaration in the -> class : 1
in the derived -> class : 3
in the derived -> as : 1
in the derived -> protected : 1
in the derived -> public : 1
in the derived -> for : 1
in the derived -> the : 1
derived class if -> you : 1
class if you -> want : 2
class if you -> use : 1
class if you -> need : 1
you want the -> compiler : 1
want the compiler -> to : 1
compiler to consider -> the : 1
to consider the -> base : 1
consider the base -> class : 1
base class functions -> as : 1
class functions as -> as : 1
functions as as -> shown : 1
as as shown -> in : 1
shown in inherited -> inherited : 1
in inherited inherited -> class : 1
inherited inherited class -> base : 1
inherited class base -> void : 1
class base void -> void : 2
base void void -> class : 1
base void void -> using : 1
base void void -> void : 2
base void void -> calls : 1
public base void -> void : 2
void void using -> and : 1
void using and -> are : 1
using and are -> int : 1
and are int -> derived : 1
are int derived -> calls : 1
int derived calls -> calls : 1
int derived calls -> a : 1
derived calls calls -> a : 1
calls calls a -> class : 2
calls a class -> has : 1
calls a class -> template : 1
a class has -> multiple : 2
a class has -> no : 3
a class has -> only : 1
class has multiple -> immediate : 1
class has multiple -> base : 1
has multiple immediate -> overload : 1
multiple immediate overload -> resolution : 1
immediate overload resolution -> must : 1
overload resolution must -> find : 1
resolution must find -> a : 1
must find a -> name : 1
must find a -> way : 1
find a name -> in : 1
name in only -> one : 1
in only one -> of : 1
in only one -> data : 1
the base if -> functions : 1
base if functions -> with : 1
if functions with -> the : 1
the desired name -> are : 2
desired name are -> found : 1
desired name are -> initially : 1
name are found -> in : 1
are found in -> multiple : 1
are found in -> any : 1
are found in -> the : 1
found in multiple -> immediate : 1
in multiple immediate -> base : 1
multiple immediate base -> the : 1
base the compiler -> reports : 1
base the compiler -> can : 1
an ambiguity to -> resolve : 1
ambiguity to resolve -> this : 1
to resolve this -> use : 1
resolve this use -> the : 1
this use the -> scope : 1
this use the -> elaborated : 1
to qualify the -> function : 1
qualify the function -> name : 3
the derived as -> shown : 1
the derived as -> a : 1
derived as shown -> in : 1
shown in ambiguous -> ambiguous : 1
in ambiguous ambiguous -> void : 1
ambiguous ambiguous void -> struct : 1
ambiguous void struct -> void : 1
void struct void -> struct : 1
struct void struct -> derived : 1
void struct derived -> call : 1
void struct derived -> base : 1
struct derived call -> to : 1
derived call to -> overloaded : 1
call to overloaded -> func : 1
to overloaded func -> is : 1
overloaded func is -> void : 1
func is void -> qualify : 1
func is void -> proc : 1
is void qualify -> the : 1
void qualify the -> name : 1
name to resolve -> void : 1
to resolve void -> function : 1
resolve void function -> function : 1
void function function -> function : 1
function function function -> call : 1
function function function -> function : 388
function function function -> template : 86
function function function -> in : 6
function function function -> header : 2
function function function -> class : 4
function function call -> can : 1
function call can -> be : 1
call can be -> a : 1
be a nonmember -> a : 1
be a nonmember -> the : 1
a nonmember a -> member : 1
a nonmember a -> unary : 1
nonmember a member -> an : 1
a member an -> object : 1
member an object -> of : 1
class a type -> or : 1
a type or -> a : 1
a type or -> commutative : 1
a type or -> for : 1
a type or -> as : 1
or a variable -> of : 1
a variable of -> type : 4
variable of type -> for : 1
variable of type -> overload : 1
variable of type -> the : 1
variable of type -> and : 1
variable of type -> is : 1
of type overload -> resolution : 1
type overload resolution -> takes : 1
overload resolution takes -> place : 1
resolution takes place -> when : 1
takes place when -> a : 1
takes place when -> comparing : 1
place when a -> value : 1
when a value -> is : 1
value is assigned -> to : 1
is assigned to -> the : 1
is assigned to -> is : 2
is assigned to -> and : 1
is assigned to -> an : 1
assigned to the -> variable : 1
to the variable -> later : 1
the variable later -> in : 1
variable later in -> this : 1
other the usual -> name : 1
the usual name -> lookup : 1
usual name lookup -> rules : 1
lookup rules apply -> when : 1
rules apply when -> finding : 1
apply when finding -> the : 1
when finding the -> candidate : 1
finding the candidate -> function : 1
the candidate function -> call : 1
candidate function call -> in : 1
function call in -> a : 1
call in a -> member : 1
call in a -> multithreaded : 2
member function searches -> first : 1
function searches first -> for : 1
searches first for -> matching : 1
first for matching -> member : 1
for matching member -> functions : 1
matching member functions -> in : 1
member functions in -> the : 1
the same class -> or : 2
the same class -> cannot : 1
the same class -> more : 1
the same class -> class : 1
same class or -> an : 1
same class or -> a : 1
or an ancestor -> the : 1
an ancestor the -> search : 1
ancestor the search -> for : 1
the search for -> a : 1
search for a -> match : 1
search for a -> value : 1
for a match -> begins : 1
a match begins -> in : 1
match begins in -> the : 1
begins in the -> class : 1
class that is -> declaring : 1
class that is -> thrown : 1
that is declaring -> the : 1
is declaring the -> member : 1
declaring the member -> if : 1
the member if -> a : 1
the member if -> the : 1
match is candidate -> functions : 1
is candidate functions -> are : 1
functions are taken -> from : 1
are taken from -> that : 1
are taken from -> the : 3
are taken from -> successive : 3
are taken from -> a : 1
taken from that -> if : 1
from that if -> no : 1
no matches are -> the : 1
no matches are -> found : 1
matches are the -> search : 1
are the search -> continues : 1
continues with ancestor -> following : 1
with ancestor following -> the : 1
ancestor following the -> same : 1
following the same -> rules : 1
same rules as -> for : 1
rules as for -> qualified : 1
as for qualified -> member : 1
for qualified member -> function : 1
qualified member function -> if : 1
member function if -> no : 1
member function if -> the : 1
function if no -> matches : 1
matches are found -> in : 1
found in any -> ancestor : 1
in any ancestor -> the : 1
any ancestor the -> namespace : 1
ancestor the namespace -> of : 1
the namespace of -> the : 1
namespace of the -> class : 1
searched for nonmember -> candidate : 1
for nonmember candidate -> member : 1
nonmember candidate member -> shows : 1
candidate member shows -> how : 1
member shows how -> a : 1
shows how a -> matching : 1
shows how a -> object : 1
shows how a -> simple : 1
shows how a -> c : 1
shows how a -> function : 1
how a matching -> member : 1
a matching member -> function : 1
member function in -> a : 1
member function in -> which : 1
base class precludes -> finding : 1
class precludes finding -> a : 1
precludes finding a -> better : 1
finding a better -> match : 1
a better match -> in : 1
better match in -> the : 1
match in the -> global : 1
the global candidate -> member : 1
global candidate member -> void : 1
candidate member void -> x : 1
member void x -> class : 1
void x class -> base : 1
x class base -> void : 1
void void void -> class : 7
void void void -> void : 38
void void void -> bool : 2
void void void -> iterator : 1
void void calls -> not : 1
void void calls -> calls : 1
void calls not -> using : 1
calls not using -> declared : 1
not using declared -> after : 1
using declared after -> so : 1
declared after so -> call : 1
after so call -> to : 1
so call to -> inside : 1
call to inside -> never : 1
to inside never -> sees : 1
inside never sees -> this : 1
never sees this -> void : 1
sees this void -> x : 1
this void x -> int : 1
x int derived -> calls : 1
derived calls a -> function : 1
calls a function -> call : 1
calls a function -> and : 1
calls a function -> for : 1
calls a function -> at : 1
call expression resolves -> to : 1
expression resolves to -> an : 1
resolves to an -> object : 1
have a function -> call : 1
have a function -> in : 1
have a function -> template : 1
have a function -> for : 1
call operator or -> a : 1
operator or a -> conversion : 1
operator or a -> qualified : 1
or a conversion -> in : 1
a conversion in -> which : 1
conversion in which -> the : 1
which the conversion -> is : 1
conversion is to -> a : 1
is to a -> function : 1
is to a -> member : 1
is to a -> forward : 1
function or operator -> is : 1
or operator is -> rarely : 1
or operator is -> used : 1
operator is rarely -> the : 1
is rarely the -> compiler : 1
rarely the compiler -> constructs : 1
the compiler constructs -> a : 1
compiler constructs a -> wrapper : 1
constructs a wrapper -> function : 1
a wrapper function -> so : 1
wrapper function so -> that : 1
function so that -> the : 1
so that the -> conversion : 1
so that the -> largest : 1
so that the -> items : 2
so that the -> same : 1
so that the -> environment : 1
that the conversion -> function : 1
the conversion function -> is : 1
conversion function is -> the : 1
first the conversion -> type : 1
the conversion type -> followed : 1
conversion type followed -> by : 1
by the types -> of : 1
of the actual -> arguments : 1
of the actual -> types : 1
the actual arguments -> is : 1
the actual arguments -> to : 1
actual arguments is -> the : 1
arguments is the -> new : 1
is the new -> list : 1
is the new -> object : 1
is the new -> file : 1
is the new -> locale : 1
is the new -> default : 1
the new list -> of : 1
new list of -> argument : 1
list of argument -> types : 1
of argument types -> to : 1
argument types to -> use : 1
types to use -> in : 1
to use in -> overload : 1
to use in -> the : 1
to use in -> some : 1
use in overload -> in : 1
in overload in -> other : 1
overload in other -> all : 1
in other all -> of : 1
other all of -> a : 1
all of a -> conversion : 1
of a conversion -> operators : 1
of a conversion -> flag : 1
a conversion operators -> participate : 1
conversion operators participate -> in : 1
operators participate in -> overload : 1
in overload a -> object : 1
overload a object -> as : 1
a object as -> a : 4
a object as -> an : 1
object as a -> shows : 1
object as a -> typedef : 1
object as a -> boolean : 1
object as a -> up : 1
object as a -> comparator : 2
as a shows -> how : 1
how a object -> is : 1
a object is -> used : 1
a object is -> initialized : 1
a object is -> also : 1
a object is -> constructed : 1
a object is -> created : 1
a object is -> to : 3
a object is -> and : 1
object is used -> as : 1
object is used -> in : 1
operand of a -> function : 1
function a object -> as : 1
as a typedef -> void : 1
a typedef void -> void : 1
typedef void void -> str : 1
void void str -> void : 1
void str void -> x : 1
str void x -> void : 1
void x void -> x : 1
x void x -> struct : 1
void x struct -> simple : 1
x struct simple -> void : 1
struct simple void -> void : 1
simple void void -> typedef : 1
void void typedef -> void : 1
void typedef void -> typedef : 1
void typedef void -> struct : 1
typedef void struct -> indirect : 1
void struct indirect -> operator : 1
struct indirect operator -> return : 1
indirect operator return -> operator : 1
operator return operator -> return : 3
operator return operator -> operator : 1
return operator return -> operator : 2
return operator return -> int : 1
return operator return -> t : 1
operator return int -> simple : 1
return int simple -> indirect : 1
int simple indirect -> prints : 1
simple indirect prints -> prints : 1
indirect prints prints -> prints : 1
prints prints function -> for : 1
prints function for -> an : 1
function for an -> operator : 1
function for an -> example : 1
for an operator -> is : 1
an operator is -> chosen : 1
an operator is -> interchangeable : 1
operator is chosen -> according : 1
is chosen according -> to : 1
chosen according to -> the : 1
resolving overloaded in -> which : 1
overloaded in which -> the : 1
which the operands -> are : 1
are the you -> can : 1
you can overload -> operators : 1
you can overload -> a : 1
you can overload -> the : 1
you can overload -> these : 1
can overload operators -> only : 1
overload operators only -> if : 1
operators only if -> at : 1
only if at -> least : 1
if at least -> one : 1
least one operand -> has : 1
least one operand -> must : 1
has a if -> all : 1
a if all -> operands : 1
if all operands -> have : 1
all operands have -> an : 1
operands have an -> operator : 1
have an operator -> has : 1
an operator has -> its : 1
an operator has -> class : 1
an operator has -> a : 1
operator has its -> the : 1
has its the -> left : 1
its the left -> operand : 1
of an operator -> has : 1
of an operator -> or : 1
operator has class -> the : 1
has class the -> operator : 1
has class the -> candidates : 1
class the operator -> can : 1
the operator can -> be : 2
the operator can -> use : 1
be a nonstatic -> member : 1
member function or -> a : 2
member function or -> as : 1
member function or -> an : 1
function or a -> nonmember : 1
function or a -> nested : 1
function or a -> friend : 1
function or a -> member : 1
a nonmember the -> function : 1
a nonmember the -> operator : 1
nonmember the function -> must : 1
the function must -> be : 1
the function must -> have : 1
nonmember the operator -> function : 1
operator function name -> is : 1
name is formed -> from : 1
is formed from -> the : 1
formed from the -> keyword : 1
from the keyword -> followed : 1
by the operator -> or : 2
by the operator -> but : 1
the operator or -> unary : 1
the operator or -> in : 1
the operator or -> the : 1
the operator or -> by : 2
operator or unary -> operators : 1
or unary operators -> can : 1
unary operators can -> be : 1
can be member -> functions : 1
can be member -> or : 1
be member functions -> with : 1
functions with no -> arguments : 1
with no arguments -> or : 2
no arguments or -> nonmember : 1
no arguments or -> with : 1
arguments or nonmember -> functions : 1
or nonmember functions -> of : 2
or nonmember functions -> shown : 1
nonmember functions of -> one : 1
nonmember functions of -> two : 1
functions of one -> binary : 1
functions of one -> argument : 1
functions of one -> and : 1
of one binary -> operators : 1
one binary operators -> are : 1
binary operators are -> member : 1
operators are member -> functions : 1
are member functions -> of : 1
member functions of -> one : 1
member functions of -> all : 1
member functions of -> an : 3
member functions of -> a : 1
member functions of -> the : 8
member functions of -> is : 2
member functions of -> default : 2
member functions of -> typename : 1
member functions of -> to : 1
member functions of -> refer : 1
member functions of -> comp : 3
member functions of -> note : 1
member functions of -> refers : 1
member functions of -> those : 1
member functions of -> as : 1
of one argument -> or : 1
one argument or -> nonmember : 1
argument or nonmember -> functions : 1
functions of two -> postfix : 1
of two postfix -> increment : 1
two postfix increment -> and : 1
postfix increment and -> decrement : 1
decrement operators are -> they : 1
operators are they -> are : 1
they are implemented -> as : 1
are implemented as -> binary : 1
are implemented as -> member : 1
are implemented as -> class : 1
implemented as binary -> operators : 1
as binary operators -> for : 1
binary operators for -> which : 1
operators for which -> the : 1
which the right -> operand : 1
is an for -> more : 1
an for more -> operator : 1
for more operator -> is : 1
more operator is -> also : 1
operator is also -> although : 1
is also although -> it : 1
also although it -> is : 1
although it is -> a : 1
although it is -> often : 1
although it is -> ineffective : 1
although it is -> perfectly : 3
is a binary -> it : 1
is a binary -> sometimes : 1
is a binary -> in : 1
is a binary -> functional : 19
a binary it -> is : 1
binary it is -> treated : 1
it is treated -> as : 1
as a unary -> it : 2
as a unary -> sometimes : 1
a unary it -> must : 2
unary it must -> be : 2
must be implemented -> as : 3
implemented as a -> member : 4
implemented as a -> specialization : 1
implemented as a -> function : 1
a member so -> the : 2
member so the -> function : 2
the function takes -> no : 3
the function takes -> at : 1
takes no it -> returns : 1
takes no it -> must : 1
no it returns -> a : 1
it returns a -> pointer : 8
it returns a -> pair : 1
it returns a -> null : 5
it returns a -> reference : 2
returns a pointer -> or : 1
returns a pointer -> to : 23
pointer or another -> object : 1
or another object -> that : 1
another object that -> overloads : 1
object that overloads -> the : 2
object that overloads -> as : 1
that overloads the -> the : 1
that overloads the -> function : 1
overloads the the -> overloaded : 1
the the overloaded -> operators : 1
the overloaded operators -> must : 1
the overloaded operators -> and : 1
the overloaded operators -> can : 1
overloaded operators must -> resolve : 1
overloaded operators must -> be : 1
operators must resolve -> to : 1
must resolve to -> a : 1
resolve to a -> pointer : 1
a pointer of -> class : 1
pointer of class -> to : 1
of class to -> which : 1
class to which -> the : 1
to which the -> operator : 1
to which the -> iterator : 1
to which the -> pointer : 1
to which the -> manipulator : 1
to which the -> adapted : 1
which the operator -> can : 1
can be candidate -> functions : 1
be candidate functions -> for : 1
candidate functions for -> the : 1
candidate functions for -> are : 1
candidate functions for -> overload : 1
for the overloaded -> operator : 1
the overloaded operator -> include : 1
the overloaded operator -> returns : 1
overloaded operator include -> all : 1
operator include all -> and : 1
include all and -> candidate : 1
all and candidate -> member : 1
and candidate member -> functions : 1
candidate member functions -> do : 1
member functions do -> not : 3
functions do not -> take : 1
functions do not -> have : 1
functions do not -> throw : 2
functions do not -> set : 1
not take precedence -> over : 1
take precedence over -> nonmember : 1
take precedence over -> named : 1
precedence over nonmember -> overloaded : 1
over nonmember overloaded -> shows : 1
nonmember overloaded shows -> how : 1
overloaded shows how -> operator : 1
overloaded shows how -> overloaded : 1
shows how operator -> functions : 1
how operator functions -> are : 1
operator functions are -> different : 1
operator functions are -> called : 1
functions are different -> from : 1
are different from -> named : 1
are different from -> the : 1
different from named -> in : 1
from named in -> it : 1
named in it -> shows : 1
in it shows -> how : 1
it shows how -> operators : 1
how operators are -> resolved : 1
operators are resolved -> by : 1
are resolved by -> considering : 1
resolved by considering -> member : 1
by considering member -> functions : 1
considering member functions -> and : 1
member functions and -> global : 1
member functions and -> each : 1
functions and global -> whereas : 1
and global whereas -> named : 1
global whereas named -> member : 1
whereas named member -> functions : 1
named member functions -> take : 1
member functions take -> precedence : 1
functions take precedence -> over : 1
precedence over named -> global : 1
over named global -> overloaded : 1
named global overloaded -> demo : 1
global overloaded demo -> demo : 1
overloaded demo demo -> demo : 1
demo demo demo -> demo : 4
demo demo demo -> operator : 1
demo demo operator -> const : 1
demo operator const -> return : 2
return int silly -> but : 1
int silly but -> illustrative : 1
silly but illustrative -> demo : 1
but illustrative demo -> return : 1
illustrative demo return -> demo : 1
demo return demo -> return : 2
demo return demo -> const : 1
return demo return -> demo : 2
return demo const -> return : 2
demo const return -> force : 1
demo const return -> demo : 1
demo const return -> calls : 1
demo const return -> scopes : 1
const return force -> use : 1
return force use -> of : 1
force use of -> member : 1
use of member -> demo : 1
of member demo -> const : 1
member demo const -> calls : 1
demo const calls -> or : 1
const calls or -> demo : 1
calls or demo -> const : 1
or demo const -> member : 1
demo const member -> operator : 1
const member operator -> demo : 1
member operator demo -> const : 1
operator demo const -> global : 1
operator demo const -> return : 1
demo const global -> operator : 1
const global operator -> demo : 1
global operator demo -> const : 1
const return demo -> const : 1
const return demo -> p : 1
const return calls -> demo : 1
return calls demo -> const : 1
calls demo const -> return : 1
const return scopes -> operator : 1
return scopes operator -> to : 1
scopes operator to -> call : 1
to call global -> object : 1
call global object -> can : 1
global object can -> be : 1
initialized using syntax -> when : 1
initialized using syntax -> the : 1
using syntax when -> an : 1
syntax when an -> object : 1
when an object -> of : 1
when an object -> is : 2
class type is -> so : 1
class type is -> qualified : 1
so the candidate -> functions : 1
functions are constructors -> of : 1
are constructors of -> the : 1
are constructors of -> if : 1
constructors of the -> named : 1
of the named -> the : 1
of the named -> source : 1
the named the -> same : 1
named the same -> syntax : 1
the same syntax -> applies : 1
the same syntax -> as : 1
same syntax applies -> to : 1
syntax applies to -> conversion : 1
applies to conversion -> initialization : 1
to conversion initialization -> covered : 1
conversion initialization covered -> later : 1
initialization covered later -> in : 1
this an overloaded -> shows : 1
an overloaded shows -> initializers : 1
an overloaded shows -> simple : 1
overloaded shows initializers -> that : 1
shows initializers that -> call : 1
initializers that call -> an : 1
that call an -> overloaded : 1
call an overloaded -> an : 1
an overloaded an -> overloaded : 1
overloaded an overloaded -> point : 1
an overloaded point -> int : 1
overloaded point int -> int : 1
int int point -> point : 1
int point point -> object : 1
point point object -> can : 1
point object can -> be : 1
using syntax the -> candidate : 1
syntax the candidate -> functions : 1
functions for are -> constructors : 1
for are constructors -> of : 1
constructors of if -> has : 1
of if has -> class : 1
class the candidates -> are : 1
the candidates are -> conversion : 1
candidates are conversion -> functions : 1
are conversion functions -> that : 1
conversion functions that -> convert : 1
functions that convert -> to : 1
that convert to -> type : 1
convert to type -> as : 1
to type as -> shown : 1
type as shown -> in : 1
in the compiler -> is : 1
in the compiler -> automatically : 1
free to call -> copy : 1
to call copy -> constructor : 1
call copy constructor -> to : 1
copy constructor to -> copy : 1
constructor to copy -> a : 1
to copy a -> temporary : 1
to copy a -> sequence : 1
to copy a -> because : 1
copy a temporary -> object : 1
temporary object to -> even : 1
object to even -> if : 1
to even if -> the : 1
the compiler optimizes -> away : 1
compiler optimizes away -> this : 1
optimizes away this -> extra : 1
away this extra -> must : 1
this extra must -> have : 1
extra must have -> an : 1
have an accessible -> copy : 1
an accessible copy -> point : 1
accessible copy point -> int : 1
copy point int -> int : 1
return int const -> return : 3
return int const -> using : 1
return int const -> keyword : 1
return int class -> dot : 1
return int class -> demo : 1
int class dot -> int : 1
class dot int -> operator : 1
dot int operator -> const : 1
int operator const -> return : 1
const return point -> invokes : 1
return point invokes -> constructor : 1
point invokes constructor -> converts : 1
invokes constructor converts -> to : 1
constructor converts to -> and : 1
converts to and -> invokes : 1
to and invokes -> invokes : 1
and invokes invokes -> constructor : 1
invokes invokes constructor -> invokes : 1
invokes constructor invokes -> and : 1
constructor invokes and -> implicit : 1
invokes and implicit -> copy : 1
and implicit copy -> object : 1
implicit copy object -> that : 1
copy object that -> does : 1
object that does -> not : 1
not have class -> type : 1
have class type -> can : 1
be initialized with -> an : 1
with an object -> of : 1
class the candidate -> functions : 1
functions are the -> conversion : 1
functions are the -> if : 1
functions are the -> they : 1
functions are the -> same : 1
functions are the -> standard : 1
are the conversion -> functions : 1
the conversion functions -> of : 1
conversion functions of -> that : 1
functions of that -> class : 1
of that class -> objects : 1
that class objects -> by : 1
class objects by -> calling : 1
objects by calling -> conversion : 2
by calling conversion -> shows : 1
by calling conversion -> color : 1
by calling conversion -> constructors : 1
calling conversion shows -> two : 1
conversion shows two -> cases : 1
shows two cases -> of : 1
two cases of -> conversion : 1
cases of conversion -> in : 1
of conversion in -> the : 1
the the object -> is : 2
with an and -> the : 1
the compiler calls -> the : 3
the compiler calls -> destructors : 1
compiler calls the -> second : 1
compiler calls the -> constructor : 1
compiler calls the -> destructor : 1
calls the second -> invokes : 1
calls the second -> form : 3
the second invokes -> in : 1
second invokes in -> which : 1
invokes in which -> is : 1
which is to -> initialize : 1
which is to -> for : 1
is to initialize -> to : 1
to initialize to -> the : 1
initialize to the -> value : 1
the value objects -> by : 1
value objects by -> calling : 1
calling conversion color -> black : 1
conversion color black -> class : 2
color black class -> rbnode : 2
black class rbnode -> color : 2
class rbnode color -> operator : 2
rbnode color operator -> const : 1
rbnode color operator -> return : 1
color operator const -> return : 1
const return operator -> const : 1
const return operator -> return : 1
const return operator -> void : 1
return operator const -> return : 2
const return t -> color : 1
const return t -> function : 1
const return t -> const : 5
const return t -> export : 1
const return t -> t : 1
const return t -> visual : 1
return t color -> c : 1
return t color -> of : 1
t color c -> int : 1
int i bound -> to : 1
i bound to -> bound : 1
bound to bound -> to : 1
to bound to -> to : 1
bound to to -> initializing : 1
to to initializing -> an : 1
to initializing an -> object : 1
initializing an object -> of : 1
of type with -> an : 1
type with an -> expression : 1
with an expression -> of : 1
an expression of -> class : 1
an expression of -> type : 1
an expression of -> the : 1
expression of class -> you : 1
of class you -> can : 1
class you can -> initialize : 1
can initialize a -> reference : 1
can initialize a -> base : 1
initialize a reference -> to : 2
to an lvalue -> that : 1
lvalue that results -> from : 1
that results from -> a : 1
that results from -> the : 1
results from a -> conversion : 1
from a conversion -> function : 1
conversion function and -> initialize : 1
function and initialize -> a : 1
and initialize a -> reference : 1
to an most -> conversion : 1
an most conversion -> operators : 1
most conversion operators -> do : 1
conversion operators do -> not : 1
operators do not -> return : 1
do not return -> so : 1
not return so -> the : 1
not return so -> explicitly : 1
return so the -> reference : 1
so the reference -> version : 1
the reference version -> of : 1
reference version of -> this : 1
version of this -> rule : 1
version of this -> class : 1
of this rule -> is : 2
this rule is -> used : 1
this rule is -> that : 1
rule is used -> more : 1
is used more -> references : 1
is used more -> than : 1
used more references -> to : 1
more references to -> conversion : 1
references to conversion -> shows : 1
references to conversion -> color : 1
to conversion shows -> some : 1
conversion shows some -> examples : 1
examples of references -> to : 1
of references to -> the : 1
object is bound -> to : 2
bound to a -> temporary : 1
bound to a -> specific : 1
a temporary copy -> of : 2
temporary copy of -> and : 1
temporary copy of -> the : 1
copy of and -> is : 1
copy of and -> so : 1
copy of and -> returns : 1
copy of and -> remembers : 1
of and is -> bound : 1
of and is -> an : 1
of and is -> a : 20
of and is -> designed : 1
and is bound -> directly : 1
is bound directly -> to : 1
bound directly to -> references : 1
directly to references -> to : 1
to references to -> conversion : 1
to conversion color -> black : 1
color operator return -> operator : 1
operator return t -> color : 1
t color of -> overloaded : 1
color of overloaded -> of : 1
of overloaded of -> overloaded : 1
overloaded of overloaded -> taking : 1
of overloaded taking -> the : 1
overloaded taking the -> of : 1
taking the of -> a : 1
the of a -> the : 1
the of a -> type : 2
not have the -> benefit : 1
not have the -> next : 1
have the benefit -> of : 1
the benefit of -> an : 1
benefit of an -> argument : 1
of an argument -> list : 1
of an argument -> is : 1
an argument list -> to : 1
argument list to -> help : 1
list to help -> resolve : 1
to help resolve -> it : 1
help resolve it -> collects : 1
resolve it collects -> a : 1
it collects a -> list : 1
collects a list -> of : 2
of candidate functions -> and : 1
candidate functions and -> picks : 1
functions and picks -> one : 1
and picks one -> based : 1
picks one based -> on : 1
one based on -> the : 1
on the type -> required : 1
on the type -> of : 3
the type required -> by : 1
type required by -> the : 1
required by the -> the : 1
required by the -> class : 2
required by the -> multibyte : 1
the the context -> can : 1
the context can -> be : 1
the context can -> affect : 1
context can be -> an : 1
be an an -> a : 1
an an a -> function : 1
function the return -> value : 1
return value of -> a : 1
return value of -> is : 1
or an explicit -> type : 2
or an explicit -> call : 1
type the potentially -> matching : 1
the potentially matching -> nontemplate : 1
potentially matching nontemplate -> functions : 1
matching nontemplate functions -> are : 1
nontemplate functions are -> better : 1
functions are better -> than : 2
better than template -> and : 1
better than template -> there : 1
than template and -> template : 1
template and template -> functions : 1
and template functions -> are : 1
template functions are -> better : 1
template functions are -> equally : 1
template functions are -> preferred : 1
than template there -> must : 1
template there must -> be : 1
exactly one best -> or : 1
one best or -> else : 1
best or else -> the : 1
else the compiler -> reports : 2
else the compiler -> will : 1
reports an the -> address : 1
reports an the -> best : 1
an the address -> of : 1
overloaded shows simple -> examples : 1
examples of resolving -> the : 1
of resolving the -> addresses : 1
resolving the addresses -> of : 1
the addresses of -> overloaded : 1
addresses of overloaded -> the : 1
of overloaded the -> address : 1
overloaded the address -> of : 1
an overloaded long -> double : 1
overloaded long double -> t : 1
long double t -> typename : 1
double t typename -> t : 1
t typename t -> u : 1
typename t u -> int : 1
t u int -> int : 1
u int int -> double : 1
int double float -> short : 1
double float short -> short : 1
float short short -> overloaded : 1
short short overloaded -> overloaded : 1
short overloaded overloaded -> the : 1
overloaded overloaded the -> compiler : 1
overloaded the compiler -> has : 1
overloaded the compiler -> finds : 1
compiler has found -> the : 1
has found the -> list : 1
found the list -> of : 1
of candidate it -> must : 1
of candidate it -> prunes : 1
candidate it must -> choose : 1
it must choose -> the : 1
must choose the -> match : 1
choose the match -> from : 1
the match from -> the : 1
from the the -> candidate : 1
from the the -> function : 1
from the the -> as : 1
from the the -> next : 1
from the the -> behavior : 2
from the the -> performance : 1
from the the -> string : 2
from the the -> first : 4
the the candidate -> list : 1
candidate list is -> first : 1
list is first -> pruned : 1
is first pruned -> by : 1
first pruned by -> removing : 1
pruned by removing -> functions : 1
by removing functions -> with : 1
by removing functions -> that : 1
removing functions with -> the : 1
number of then -> the : 1
of then the -> remaining : 1
then the remaining -> functions : 1
the remaining functions -> are : 1
remaining functions are -> checked : 1
functions are checked -> to : 1
are checked to -> determine : 1
checked to determine -> how : 1
to determine how -> to : 1
determine how to -> convert : 1
how to convert -> the : 1
to convert the -> actual : 1
convert the actual -> arguments : 1
actual arguments to -> the : 1
the desired parameter -> the : 1
the desired parameter -> type : 1
desired parameter the -> function : 1
parameter the function -> with : 1
with the simplest -> conversions : 1
the simplest conversions -> this : 1
simplest conversions this -> section : 1
conversions this section -> discusses : 1
section discusses these -> two : 1
discusses these two -> the : 1
these two the -> candidate : 1
two the candidate -> the : 1
the candidate the -> candidate : 1
the candidate the -> compiler : 1
candidate the candidate -> the : 1
candidate the compiler -> has : 1
compiler has assembled -> its : 1
has assembled its -> list : 1
assembled its list -> of : 1
candidate it prunes -> the : 1
it prunes the -> list : 1
prunes the list -> by : 1
the list by -> removing : 1
list by removing -> functions : 1
removing functions that -> have : 1
functions that have -> the : 1
functions that have -> constant : 1
that have the -> wrong : 1
that have the -> same : 1
that have the -> given : 1
have the wrong -> number : 1
number of if -> the : 1
of if the -> function : 1
of if the -> size : 1
of if the -> third : 3
of if the -> strings : 2
of if the -> object : 1
of if the -> memory : 1
of if the -> behavior : 1
function call has -> argument : 1
function call has -> a : 1
call has argument -> a : 1
has argument a -> function : 1
argument a function -> is : 1
function is kept -> in : 1
is kept in -> the : 1
kept in the -> list : 1
the list if -> any : 1
list if any -> of : 1
the following has -> exactly : 1
following has exactly -> has : 1
has exactly has -> fewer : 1
exactly has fewer -> than : 1
has fewer than -> parameters : 1
fewer than parameters -> followed : 1
than parameters followed -> by : 1
parameters followed by -> an : 1
by an ellipsis -> has : 1
an ellipsis has -> more : 1
ellipsis has more -> than : 1
has more than -> and : 1
more than and -> the : 1
than and the -> extra : 1
and the extra -> parameters : 1
the extra parameters -> have : 1
extra parameters have -> default : 1
parameters have default -> each : 1
have default each -> actual : 1
default each actual -> argument : 1
each actual argument -> must : 1
actual argument must -> be : 1
must be convertible -> the : 1
must be convertible -> to : 5
be convertible the -> rules : 1
convertible the rules -> described : 1
the rules described -> in : 1
in the next -> to : 1
in the next -> some : 1
in the next -> and : 1
in the next -> for : 1
in the next -> return : 1
in the next -> from : 1
in the next -> if : 1
the next to -> the : 2
the next to -> one : 1
next to the -> parameter : 1
next to the -> group : 1
the parameter versus -> default : 1
parameter versus default -> functions : 1
versus default functions -> can : 1
default functions can -> have : 1
functions can have -> the : 1
functions can have -> different : 1
the same effect -> as : 1
same effect as -> using : 1
effect as using -> default : 1
as using default -> the : 1
using default the -> question : 1
default the question -> is : 1
the question is -> when : 1
question is when -> to : 1
is when to -> use : 1
to use overloading -> and : 1
use overloading and -> when : 1
overloading and when -> to : 1
and when to -> use : 1
to use default -> as : 1
to use default -> if : 1
to use default -> arguments : 1
use default as -> the : 1
default as the -> answer : 1
as the answer -> a : 1
the answer a -> default : 1
answer a default -> argument : 1
argument is you -> are : 1
is you are -> probably : 1
you are probably -> better : 2
are probably better -> off : 2
probably better off -> using : 2
better off using -> with : 1
better off using -> the : 1
off using with -> default : 1
using with default -> the : 1
with default the -> complicated : 1
default the complicated -> code : 1
the complicated code -> would : 1
complicated code would -> be : 1
code would be -> duplicated : 1
would be duplicated -> at : 1
be duplicated at -> every : 1
duplicated at every -> function : 1
at every function -> with : 1
every function with -> you : 1
function with you -> can : 1
with you can -> concentrate : 1
with you can -> use : 1
with you can -> mix : 1
you can concentrate -> it : 1
can concentrate it -> at : 1
concentrate it at -> a : 1
it at a -> single : 1
at a single -> yourself : 1
a single yourself -> whether : 1
single yourself whether -> it : 1
yourself whether it -> makes : 1
whether it makes -> sense : 1
it makes sense -> to : 1
makes sense to -> omit : 1
sense to omit -> starting : 1
to omit starting -> from : 1
omit starting from -> the : 1
from the if -> you : 2
from the if -> no : 1
the if you -> might : 1
the if you -> do : 1
the if you -> call : 2
the if you -> try : 1
the if you -> explicitly : 1
the if you -> need : 3
the if you -> initialize : 1
if you might -> be : 1
you might be -> able : 3
you might be -> guaranteed : 1
you might be -> sacrificing : 1
might be able -> to : 3
use default if -> some : 1
default if some -> arguments : 1
if some arguments -> cannot : 1
some arguments cannot -> be : 1
arguments cannot be -> omitted : 1
arguments cannot be -> the : 1
cannot be omitted -> you : 1
be omitted you -> might : 1
omitted you might -> need : 1
you might need -> to : 4
might need to -> use : 1
might need to -> define : 1
might need to -> keep : 1
might need to -> about : 1
might need to -> write : 1
need to use -> in : 1
need to use -> but : 1
need to use -> which : 1
need to use -> the : 1
need to use -> a : 1
use in the -> following : 2
the following omitting -> without : 1
following omitting without -> also : 1
omitting without also -> omitting : 1
without also omitting -> is : 1
also omitting is -> float : 1
omitting is float -> float : 1
is float float -> void : 1
float float void -> a : 1
float void a -> function : 1
void a function -> is : 1
function is you -> might : 1
function is you -> decide : 1
function is you -> cannot : 1
is you might -> want : 1
use default arguments -> so : 1
use default arguments -> instead : 1
default arguments so -> you : 1
arguments so you -> can : 1
can write the -> function : 1
write the function -> only : 1
write the function -> by : 1
the function only -> even : 1
function only even -> if : 1
only even if -> you : 1
you use write -> a : 1
use write a -> single : 1
use write a -> plain : 1
write a single -> base : 1
a single base -> function : 1
single base function -> and : 1
base function and -> let : 1
function and let -> the : 1
and let the -> overloaded : 1
and let the -> compiler : 1
and let the -> implicit : 1
and let the -> string : 2
let the overloaded -> functions : 1
overloaded functions call -> the : 1
functions call the -> base : 1
call the base -> shape : 1
the base shape -> using : 1
base shape using -> default : 1
shape using default -> arguments : 1
using default arguments -> keeps : 1
default arguments keeps -> the : 1
arguments keeps the -> code : 1
keeps the code -> simple : 1
the code simple -> because : 1
code simple because -> there : 1
simple because there -> is : 1
because there is -> only : 1
because there is -> no : 1
there is only -> one : 1
is only one -> explicit : 1
is only one -> possible : 1
only one explicit -> c : 1
one explicit c -> size : 1
explicit c size -> s : 1
c size s -> the : 1
size s the -> best : 1
s the best -> the : 1
the best the -> best : 1
the best the -> remaining : 1
best the best -> the : 1
best the remaining -> candidate : 1
the remaining candidate -> the : 1
remaining candidate the -> function : 1
candidate the function -> is : 1
is if multiple -> functions : 1
if multiple functions -> are : 1
multiple functions are -> tied : 1
functions are tied -> for : 1
are tied for -> the : 1
are tied for -> template : 1
tied for the -> compiler : 1
an the best -> function : 1
the best function -> is : 1
best function is -> found : 1
function is found -> by : 1
found by comparing -> the : 1
by comparing the -> implicit : 1
by comparing the -> adapted : 12
comparing the implicit -> type : 1
the implicit type -> conversion : 1
implicit type conversion -> sequences : 1
type conversion sequences -> needed : 1
conversion sequences needed -> for : 1
sequences needed for -> each : 1
needed for each -> argument : 1
for each argument -> type : 1
each argument type -> possibly : 1
argument type possibly -> an : 1
type possibly an -> implicit : 1
possibly an implicit -> object : 1
an implicit object -> as : 1
implicit object as -> described : 1
object as described -> in : 1
the next some -> sequences : 1
next some sequences -> are : 1
some sequences are -> better : 1
sequences are better -> than : 1
better than when -> comparing : 1
than when comparing -> two : 1
when comparing two -> the : 1
when comparing two -> also : 1
comparing two the -> better : 1
two the better -> function : 1
the better function -> is : 1
better function is -> the : 1
the one with -> the : 2
the one with -> fewer : 1
one with the -> better : 1
one with the -> highest : 1
with the better -> conversion : 1
the better conversion -> two : 1
better conversion two -> functions : 1
conversion two functions -> a : 1
two functions a -> and : 1
functions a and -> b : 1
and b have -> argument : 1
b have argument -> conversion : 1
have argument conversion -> sequences : 1
argument conversion sequences -> that : 1
conversion sequences that -> are : 1
sequences that are -> equally : 1
that are equally -> but : 1
are equally but -> a : 1
equally but a -> has : 1
but a has -> at : 1
but a has -> no : 1
a has at -> least : 1
least one argument -> with : 1
one argument with -> a : 1
argument with a -> better : 1
with a better -> a : 1
a better a -> is : 1
better a is -> the : 1
is the better -> all : 1
the better all -> the : 1
better all the -> conversion : 1
all the conversion -> sequences : 1
the conversion sequences -> are : 1
the conversion sequences -> for : 1
conversion sequences are -> equally : 1
sequences are equally -> a : 1
are equally a -> nontemplate : 1
are equally a -> template : 1
equally a nontemplate -> function : 1
a nontemplate function -> is : 1
nontemplate function is -> better : 1
function is better -> than : 2
is better than -> a : 3
is better than -> converting : 2
is better than -> to : 1
is better than -> matching : 1
is better than -> the : 1
is better than -> one : 1
better than a -> template : 2
better than a -> conversion : 1
than a template -> the : 1
than a template -> conversion : 1
template the conversion -> sequences : 1
conversion sequences for -> two : 1
sequences for two -> template : 1
for two template -> functions : 1
two template functions -> are : 1
functions are equally -> a : 1
equally a template -> function : 1
a template function -> is : 1
template function is -> better : 1
a template conversion -> conversion : 1
template conversion conversion -> actual : 1
conversion conversion actual -> argument : 1
conversion actual argument -> is : 1
actual argument is -> implicitly : 1
desired parameter type -> by : 1
parameter type by -> undergoing : 1
type by undergoing -> a : 1
by undergoing a -> series : 1
undergoing a series -> of : 1
series of a -> better : 1
of a better -> conversion : 1
a better conversion -> is : 1
better conversion is -> one : 1
conversion is one -> in : 1
conversion is one -> that : 1
is one in -> which : 1
one in which -> the : 1
which the argument -> type : 1
argument type is -> closer : 1
argument type is -> an : 1
type is closer -> to : 1
is closer to -> the : 1
parameter type the -> type : 1
type the type -> undergoes : 1
the type undergoes -> fewer : 1
type undergoes fewer -> is : 1
undergoes fewer is -> a : 1
fewer is a -> sequence : 1
sequence of transformations -> that : 1
sequence of transformations -> is : 1
of transformations that -> are : 1
transformations that are -> based : 1
that are based -> on : 1
are based on -> automatic : 1
based on automatic -> type : 1
on automatic type -> conversions : 1
type conversions a -> sequence : 1
conversions a sequence -> is : 1
a sequence is -> built : 1
a sequence is -> used : 1
a sequence is -> the : 1
sequence is built -> from : 1
is built from -> at : 2
built from at -> most : 1
built from at -> least : 1
from at most -> one : 1
most one of -> each : 1
one of each -> of : 1
of each of -> three : 1
of each of -> size : 1
of each of -> type : 2
of each of -> these : 1
each of three -> kinds : 1
of three kinds -> of : 1
three kinds of -> the : 1
three kinds of -> and : 1
three kinds of -> template : 1
kinds of the -> quality : 1
of the quality -> of : 1
the quality of -> a : 1
quality of a -> standard : 1
of a standard -> conversion : 1
of a standard -> hash : 1
of a standard -> the : 1
of a standard -> header : 1
standard conversion sequence -> is : 2
standard conversion sequence -> followed : 1
conversion sequence is -> dictated : 1
conversion sequence is -> better : 2
sequence is dictated -> by : 1
is dictated by -> its : 1
is dictated by -> your : 1
is dictated by -> and : 1
is dictated by -> the : 2
dictated by its -> worst : 1
by its worst -> in : 1
its worst in -> which : 1
worst in which -> the : 1
which the transformations -> are : 1
the transformations are -> better : 1
the transformations are -> as : 1
transformations are better -> than : 1
better than those -> that : 1
than those that -> might : 1
those that might -> discard : 1
that might discard -> the : 1
might discard the -> transformations : 1
discard the transformations -> are : 1
transformations are as -> ordered : 1
are as ordered -> from : 1
as ordered from -> best : 1
ordered from best -> to : 1
from best to -> transformation : 1
best to transformation -> and : 1
to transformation and -> qualification : 1
transformation and qualification -> lvalue : 1
and qualification lvalue -> transformation : 1
qualification lvalue transformation -> is : 1
lvalue transformation is -> the : 1
transformation is the -> of : 1
is the of -> an : 1
is the of -> the : 1
the of an -> array : 1
an array to -> a : 1
to an or -> a : 1
to an or -> behavior : 1
function a qualification -> adjustment : 1
a qualification adjustment -> is : 1
qualification adjustment is -> adding : 1
adjustment is adding -> or : 1
is adding or -> qualifiers : 1
adding or qualifiers -> to : 1
or qualifiers to -> match : 1
qualifiers to match -> the : 1
match the these -> transformations : 1
the these transformations -> are : 1
these transformations are -> just : 1
transformations are just -> as : 1
are just as -> good : 1
just as good -> as : 1
as good as -> no : 1
good as no -> transformation : 1
as no transformation -> at : 1
no transformation at -> void : 1
transformation at void -> type : 1
at void type -> promotions : 1
void type promotions -> are : 1
type promotions are -> listed : 1
type promotions are -> preferred : 1
promotions are listed -> in : 1
are listed in -> in : 1
are listed in -> the : 1
listed in in -> promotions : 1
in in promotions -> are : 1
in promotions are -> from : 1
promotions are from -> smaller : 1
are from smaller -> types : 1
from smaller types -> to : 1
smaller types to -> larger : 1
types to larger -> so : 1
to larger so -> information : 1
larger so information -> cannot : 1
so information cannot -> be : 1
information cannot be -> type : 1
cannot be type -> conversion : 1
cannot be type -> does : 1
be type conversion -> is : 1
is one that -> might : 1
one that might -> lose : 1
that might lose -> such : 1
might lose such -> as : 1
lose such as -> converting : 1
as converting a -> number : 1
converting a number -> to : 1
number to a -> smaller : 1
number to a -> multibyte : 1
to a smaller -> or : 1
a smaller or -> a : 1
smaller or a -> floating : 1
or a floating -> point : 1
a floating point -> to : 1
floating point to -> an : 1
point to an -> certain : 1
point to an -> erased : 1
point to an -> array : 1
point to an -> empty : 1
point to an -> element : 2
to an certain -> conversions : 1
an certain conversions -> are : 1
certain conversions are -> better : 1
conversions are better -> than : 1
better than of -> a : 1
than of a -> pointer : 1
of a pointer -> to : 1
of a pointer -> used : 1
of a pointer -> that : 1
pointer to is -> worse : 1
pointer to is -> better : 1
to is worse -> than : 1
is worse than -> other : 1
worse than other -> a : 1
than other a -> pointer : 1
other a pointer -> to : 1
pointer is better -> than : 1
better than converting -> the : 1
better than converting -> a : 1
than converting the -> pointer : 1
converting the pointer -> to : 1
to is better -> than : 2
than converting a -> pointer : 1
pointer to class -> and : 1
to class and -> pointers : 1
class and pointers -> to : 1
and pointers to -> shorter : 1
and pointers to -> items : 3
pointers to shorter -> distances : 1
to shorter distances -> in : 1
shorter distances in -> a : 1
distances in a -> class : 1
a class hierarchy -> are : 1
class hierarchy are -> better : 1
hierarchy are better -> than : 1
better than longer -> for : 1
than longer for -> if : 1
longer for if -> inherits : 1
for if inherits -> from : 1
if inherits from -> and : 1
inherits from and -> inherits : 1
from and inherits -> from : 1
and inherits from -> to : 1
inherits from to -> is : 1
from to is -> better : 1
from to is -> typically : 1
from to is -> is : 1
better than to -> following : 1
than to following -> are : 1
to following are -> some : 1
examples of conversion -> void : 1
of conversion void -> has : 1
conversion void has -> up : 1
void has up -> to : 1
has up to -> three : 1
up to three -> a : 1
to three a -> standard : 1
three a standard -> conversion : 1
conversion sequence followed -> by : 1
sequence followed by -> a : 1
by a conversion -> or : 1
a conversion or -> type : 1
conversion or type -> conversion : 1
or type conversion -> followed : 1
type conversion followed -> by : 1
conversion followed by -> another : 1
followed by another -> standard : 1
by another standard -> conversion : 1
another standard conversion -> standard : 1
standard conversion standard -> conversion : 1
conversion standard conversion -> sequence : 1
sequence is better -> than : 3
than a conversion -> a : 1
a conversion a -> conversion : 1
conversion a conversion -> sequence : 1
a conversion sequence -> is : 1
better than matching -> an : 1
than matching an -> ellipsis : 1
matching an ellipsis -> one : 1
an ellipsis one -> sequence : 1
ellipsis one sequence -> of : 1
one sequence of -> transformations : 1
of transformations is -> a : 1
transformations is a -> subsequence : 1
is a subsequence -> of : 1
a subsequence of -> the : 1
subsequence of the -> shorter : 1
of the shorter -> sequence : 1
the shorter sequence -> is : 1
shorter sequence is -> better : 1
better than the -> longer : 1
better than the -> another : 1
than the longer -> sequences : 1
the longer sequences -> that : 1
longer sequences that -> differ : 1
sequences that differ -> only : 1
differ only by -> the : 3
only by the -> one : 1
only by the -> class : 1
only by the -> template : 1
only by the -> form : 1
only by the -> particularly : 1
only by the -> function : 1
by the one -> with : 1
one with fewer -> qualification : 1
with fewer qualification -> adjustments : 1
fewer qualification adjustments -> is : 1
qualification adjustments is -> better : 1
adjustments is better -> than : 1
better than one -> with : 1
than one with -> more : 1
one with more -> overloaded : 1
with more overloaded -> shows : 1
more overloaded shows -> how : 1
shows how overloaded -> functions : 1
how overloaded functions -> are : 1
functions are notice -> that : 1
are notice that -> type : 1
notice that type -> promotions : 1
that type promotions -> are : 1
promotions are preferred -> to : 1
are preferred to -> the : 1
preferred to the -> conversion : 1
to the conversion -> to : 1
to the conversion -> but : 1
to the conversion -> specifiers : 2
the conversion to -> even : 1
the conversion to -> to : 1
conversion to even -> though : 1
to even though -> has : 1
to even though -> you : 1
even though has -> an : 1
though has an -> exact : 1
has an exact -> type : 1
an exact type -> conversion : 1
exact type conversion -> to : 1
type conversion to -> also : 1
conversion to also -> note : 1
to also note -> how : 1
also note how -> an : 1
note how an -> cannot : 1
how an cannot -> be : 1
an cannot be -> so : 1
cannot be so -> it : 1
cannot be so -> the : 1
so it must -> undergo : 1
it must undergo -> a : 1
must undergo a -> the : 1
undergo a the -> compiler : 1
has no preference -> of : 1
no preference of -> or : 1
preference of or -> so : 1
of or so -> the : 1
of or so -> it : 1
or so the -> conversion : 1
or so the -> constructor : 1
or so the -> constructors : 1
or so the -> member : 1
so the conversion -> is : 1
conversion is ambiguous -> results : 1
is ambiguous results -> in : 1
ambiguous results in -> an : 1
the same applies -> to : 1
same applies to -> even : 1
applies to even -> though : 1
even though you -> might : 1
though you might -> consider : 1
you might consider -> the : 1
might consider the -> conversion : 1
consider the conversion -> to : 1
to to be -> than : 1
to be than -> conversion : 1
be than conversion -> to : 1
than conversion to -> the : 1
conversion to the -> rules : 1
rules of overloading -> say : 1
of overloading say -> the : 1
overloading say the -> final : 1
say the final -> example : 1
the final example -> results : 1
final example results -> in : 1
example results in -> an : 1
example results in -> the : 1
error because there -> is : 1
is no matching -> an : 1
is no matching -> block : 1
no matching an -> array : 1
matching an array -> of : 1
array of cannot -> be : 1
of cannot be -> converted : 1
to any of -> the : 3
to any of -> its : 1
of the types -> used : 1
of the types -> declared : 1
of the types -> of : 1
types used as -> overloaded : 1
used as overloaded -> void : 1
as overloaded void -> void : 1
overloaded void void -> void : 1
void class num -> operator : 1
class num operator -> const : 1
num operator const -> return : 1
int int short -> n : 1
int short n -> ambiguous : 1
short n ambiguous -> ambiguous : 1
n ambiguous ambiguous -> no : 1
ambiguous ambiguous no -> match : 1
ambiguous no match -> types : 1
no match types -> and : 1
match types and -> you : 1
types and you -> can : 1
and you can -> define : 1
and you can -> use : 1
and you can -> rely : 1
and you can -> supply : 1
and you can -> examine : 1
and you can -> think : 1
and you can -> refer : 1
and you can -> instantiate : 1
and you can -> start : 1
and you can -> add : 1
and you can -> safely : 1
can define alternate -> behavior : 1
define alternate behavior -> for : 1
alternate behavior for -> the : 1
behavior for the -> this : 1
for the this -> is : 1
the this is -> called : 2
the this is -> known : 1
the this is -> typically : 4
this is called -> the : 2
called the you -> cannot : 1
the you cannot -> define : 1
the you cannot -> use : 1
the you cannot -> dereference : 1
cannot define new -> and : 1
define new and -> not : 1
new and not -> all : 1
and not all -> operators : 1
not all operators -> can : 1
all operators can -> be : 1
be and lists -> all : 1
and lists all -> the : 3
lists all the -> operators : 1
lists all the -> formatting : 1
lists all the -> position : 2
operators and indicates -> which : 1
and indicates which -> can : 1
indicates which can -> be : 1
can be for -> it : 1
can be for -> an : 2
can be for -> integer : 1
be for it -> shows : 1
for it shows -> whether : 1
it shows whether -> the : 1
shows whether the -> overload : 1
whether the overload -> must : 1
the overload must -> be : 1
overload must be -> a : 1
be a member -> overloaded : 1
be a member -> function : 2
a member overloaded -> operators : 1
member overloaded operators -> that : 1
overloaded operators that -> are : 1
overloaded operators that -> accept : 1
operators that are -> implemented : 1
that are implemented -> as : 1
implemented as member -> functions : 1
as member functions -> must : 1
as member functions -> or : 1
as member functions -> as : 1
as member functions -> of : 1
member functions must -> be : 1
must be nonstatic -> member : 2
be nonstatic member -> and : 1
be nonstatic member -> the : 1
nonstatic member and -> and : 1
member and and -> solid : 1
and and solid -> solid : 1
solid solid be -> member : 1
solid be member -> solid : 1
be member solid -> solid : 1
member solid solid -> solid : 1
solid solid unary -> solid : 1
solid unary solid -> solid : 1
unary solid solid -> solid : 1
solid solid bitwise -> solid : 2
solid solid bitwise -> exclusive : 1
solid bitwise solid -> solid : 2
bitwise solid solid -> solid : 2
solid bitwise exclusive -> solid : 1
bitwise exclusive solid -> solid : 1
solid solid left -> solid : 1
solid left solid -> solid : 1
left solid solid -> solid : 1
solid solid right -> solid : 1
solid right solid -> solid : 1
right solid solid -> solid : 1
solid solid dynamic -> solid : 4
solid dynamic solid -> solid : 4
dynamic solid solid -> solid : 4
solid solid than -> or : 2
solid than or -> solid : 2
than or solid -> solid : 2
solid solid overloaded -> operator : 1
solid overloaded operator -> is : 1
overloaded operator is -> a : 1
which the function -> name : 3
which the function -> is : 3
function name has -> the : 1
name has the -> form : 1
has the form -> followed : 1
has the form -> of : 1
the form followed -> by : 1
form followed by -> the : 1
operator or in -> the : 1
of a type -> conversion : 1
of a type -> contain : 1
of a type -> template : 1
of a type -> includes : 1
of a type -> or : 1
of a type -> is : 2
of a type -> depends : 2
type conversion member -> a : 1
conversion member a -> list : 1
member a list -> of : 1
specifiers and array -> for : 1
and array for -> the : 1
array for the -> following : 1
the following code -> declares : 1
the following code -> has : 1
following code declares -> functions : 1
code declares functions -> to : 1
declares functions to -> overload : 1
functions to overload -> the : 1
overload the and -> logical : 1
overload the and -> you : 1
the and logical -> yes : 1
and logical yes -> logical : 1
yes logical operator -> logical : 1
logical operator logical -> operator : 1
logical operator logical -> overloaded : 1
operator logical operator -> logical : 1
operator logical overloaded -> operators : 1
logical overloaded operators -> must : 1
be member and -> others : 1
member and others -> can : 1
and others can -> be : 1
others can be -> member : 1
be member or -> nonmember : 1
member or nonmember -> functions : 1
nonmember functions shown -> in : 1
functions shown in -> and : 1
in and when -> you : 1
when you define -> a : 2
when you define -> these : 1
define a member -> the : 1
member the object -> is : 1
object is always -> the : 1
always the lefthand -> a : 1
the lefthand a -> unary : 1
lefthand a unary -> takes : 1
a unary takes -> no : 1
unary takes no -> arguments : 1
no arguments because -> the : 1
arguments because the -> one : 1
because the one -> operand : 1
the object a -> binary : 1
object a binary -> operator : 1
a binary operator -> takes : 2
binary operator takes -> one : 1
binary operator takes -> two : 1
operator takes one -> the : 1
operator takes one -> argument : 1
takes one the -> righthand : 1
takes one the -> signal : 1
takes one the -> function : 1
one the righthand -> the : 1
the righthand the -> lefthand : 1
the righthand the -> operator : 1
righthand the lefthand -> operand : 1
lefthand operand is -> the : 1
the for a -> nonmember : 1
the for a -> control : 1
the for a -> description : 1
the for a -> function : 1
the for a -> file : 1
for a nonmember -> a : 1
nonmember a unary -> operator : 1
a unary operator -> takes : 1
a unary operator -> or : 1
unary operator takes -> one : 1
takes one argument -> and : 1
one argument and -> a : 1
argument and a -> binary : 1
argument and a -> pointer : 1
and a binary -> operator : 1
operator takes two -> the : 1
operator takes two -> and : 3
first argument is -> the : 1
is the lefthand -> and : 1
the lefthand and -> the : 1
lefthand and the -> second : 1
second is the -> righthand : 1
is the righthand -> overloaded : 1
the righthand overloaded -> operators : 1
righthand overloaded operators -> as : 1
overloaded operators as -> you : 1
operators as you -> would : 1
as you would -> you : 1
as you would -> any : 3
as you would -> local : 1
as you would -> with : 1
as you would -> from : 2
you would you -> can : 1
would you can -> also : 1
can also use -> function : 1
can also use -> a : 3
can also use -> an : 1
can also use -> the : 3
also use function -> in : 1
use function in -> which : 1
name is followed -> by : 1
the operator but -> this : 1
the operator but -> you : 1
operator but this -> usage : 1
but this usage -> is : 1
usage is you -> can : 1
use the function -> notation : 1
use the function -> specifier : 1
use the function -> class : 2
use the function -> way : 3
the function notation -> with : 1
function notation with -> but : 1
notation with but -> such : 1
with but such -> usage : 1
but such usage -> is : 2
such usage is -> extremely : 1
such usage is -> accessibility : 1
usage is extremely -> for : 1
is extremely for -> same : 1
extremely for same -> as : 1
for same as -> same : 1
same as same -> as : 1
as same as -> usual : 1
same as usual -> rules : 1
as usual rules -> for : 1
overloaded functions applies -> to : 1
functions applies to -> overloaded : 1
applies to overloaded -> the : 1
to overloaded the -> only : 1
overloaded the only -> difference : 1
the only difference -> is : 3
the only difference -> between : 2
only difference is -> that : 3
difference is that -> the : 2
difference is that -> a : 1
difference is that -> expands : 1
difference is that -> is : 1
difference is that -> no : 1
difference is that -> it : 1
that the operators -> are : 1
the operators are -> added : 1
the operators are -> never : 1
operators are added -> to : 1
list of candidates -> along : 1
of candidates along -> with : 1
candidates along with -> the : 1
along with the -> remember : 1
with the remember -> that : 1
the remember that -> you : 1
remember that you -> cannot : 1
remember that you -> might : 1
cannot overload operators -> when : 1
overload operators when -> all : 1
operators when all -> the : 1
when all the -> operands : 1
all the operands -> have : 1
operands have fundamental -> at : 1
have fundamental at -> least : 1
fundamental at least -> one : 1
operand must have -> a : 1
type or commutative -> overloading : 1
or commutative overloading -> a : 1
commutative overloading a -> binary : 1
overloading a binary -> consider : 1
a binary consider -> whether : 1
binary consider whether -> the : 1
consider whether the -> operator : 1
whether the operator -> should : 1
the operator should -> be : 1
operator should be -> commutative : 1
should be commutative -> is : 1
be commutative is -> the : 1
commutative is the -> same : 1
same as if -> that : 1
same as if -> you : 1
as if that -> is : 1
if that is -> the : 1
is the you -> might : 1
the you might -> need : 1
the you might -> find : 1
the you might -> think : 1
to define two -> overloaded : 1
define two overloaded -> priority : 1
two overloaded priority -> high : 1
overloaded priority high -> adding : 1
priority high adding -> an : 1
high adding an -> integer : 1
adding an integer -> to : 1
integer to a -> priority : 1
integer to a -> pointer : 1
to a priority -> for : 1
a priority for -> priority : 1
priority for priority -> int : 1
for priority int -> priority : 1
for priority int -> key : 1
priority int priority -> priority : 1
int priority priority -> subtracting : 1
priority priority subtracting -> an : 1
priority subtracting an -> integer : 1
subtracting an integer -> from : 1
an integer from -> a : 1
an integer from -> the : 2
an integer from -> nonnumeric : 1
integer from a -> priority : 1
from a priority -> does : 1
a priority does -> not : 1
priority does not -> for : 1
does not for -> priority : 1
not for priority -> int : 1
priority int key -> difference : 1
int key difference -> between : 1
key difference between -> the : 1
key difference between -> a : 1
key difference between -> and : 3
difference between the -> overloaded : 1
difference between the -> difference : 1
between the overloaded -> operators : 1
overloaded operators and -> the : 1
operators and the -> operators : 1
and the operators -> is : 1
the operators is -> that : 1
operators is that -> the : 1
that the and -> operators : 1
the and operators -> are : 2
the and operators -> perform : 1
and operators are -> if : 1
and operators are -> and : 1
operators are if -> the : 1
result is known -> by : 1
is known by -> evaluating : 1
known by evaluating -> only : 1
by evaluating only -> the : 1
evaluating only the -> left : 1
only the left -> the : 1
the left the -> right : 1
left the right -> operand : 1
operand is never -> for : 1
is never for -> overloaded : 1
never for overloaded -> all : 1
for overloaded all -> operands : 1
overloaded all operands -> are : 1
all operands are -> evaluated : 1
evaluated before a -> function : 1
before a function -> is : 1
function is so -> evaluation : 1
is so evaluation -> is : 1
so evaluation is -> other : 1
evaluation is other -> you : 1
is other you -> cannot : 1
other you cannot -> tell : 1
you cannot tell -> whether : 1
cannot tell whether -> the : 2
tell whether the -> and : 1
tell whether the -> name : 1
whether the and -> operators : 1
and operators perform -> evaluation : 1
operators perform evaluation -> by : 1
perform evaluation by -> merely : 1
evaluation by merely -> glancing : 1
by merely glancing -> at : 1
merely glancing at -> you : 1
glancing at you -> must : 1
at you must -> study : 1
at you must -> ensure : 2
you must study -> the : 1
must study the -> types : 1
study the types -> of : 1
it is never -> to : 1
it is never -> complex : 1
is never to -> overload : 1
never to overload -> these : 1
to overload these -> if : 1
overload these if -> the : 1
these if the -> operators : 1
if the operators -> are : 1
operators are never -> you : 1
are never you -> know : 1
never you know -> that : 1
you know that -> they : 1
you know that -> the : 1
know that they -> are : 1
they are always -> can : 1
they are always -> interpreted : 1
are always can -> overload : 1
always can overload -> the : 1
can overload the -> operator : 1
can overload the -> but : 1
overload the operator -> but : 1
operator but you -> will : 1
but you will -> rarely : 1
you will rarely -> have : 1
will rarely have -> any : 1
rarely have any -> reason : 1
have any reason -> to : 1
reason to do -> if : 1
reason to do -> the : 1
to do if -> you : 1
do if you -> you : 1
if you you -> change : 1
you you change -> its : 1
you change its -> semantics : 1
change its semantics -> in : 1
its semantics in -> a : 1
semantics in a -> subtle : 1
in a subtle -> the : 1
a subtle the -> comma : 1
subtle the comma -> operator : 1
comma operator has -> a : 1
has a sequence -> point : 1
a sequence point -> between : 1
sequence point between -> its : 1
point between its -> so : 1
between its so -> you : 1
its so you -> know : 1
so you know -> that : 1
so you know -> whether : 1
know that the -> lefthand : 1
that the lefthand -> expression : 1
the lefthand expression -> is : 1
lefthand expression is -> completely : 1
expression is completely -> evaluated : 1
is completely evaluated -> before : 1
completely evaluated before -> the : 1
before the righthand -> if : 1
the righthand if -> you : 1
righthand if you -> overload : 1
if you overload -> the : 1
if you overload -> or : 1
you overload the -> you : 1
you overload the -> and : 1
overload the you -> lose : 1
the you lose -> that : 1
you lose that -> the : 1
lose that the -> ordinary : 1
that the ordinary -> rules : 1
ordinary rules so -> the : 1
rules so the -> operands : 1
so the operands -> might : 1
the operands might -> be : 1
operands might be -> evaluated : 1
might be evaluated -> in : 1
be evaluated in -> any : 1
evaluated in any -> and : 1
any and and -> overloading : 1
and and overloading -> the : 1
and overloading the -> and : 1
the and decrement -> remember : 1
and decrement remember -> that : 1
decrement remember that -> they : 1
remember that they -> have : 1
that they have -> two : 1
they have two -> prefix : 1
have two prefix -> and : 1
two prefix and -> to : 1
prefix and to -> distinguish : 1
and to distinguish -> between : 1
distinguish between the -> two : 1
distinguish between the -> declared : 1
distinguish between the -> parameters : 1
between the two -> the : 1
between the two -> is : 1
two the postfix -> form : 1
the postfix form -> takes : 1
postfix form takes -> an : 1
form takes an -> additional : 1
takes an additional -> the : 1
an additional the -> compiler : 1
additional the compiler -> always : 1
the compiler always -> passes : 1
the compiler always -> treats : 1
compiler always passes -> as : 1
always passes as -> the : 1
passes as the -> additional : 1
as the additional -> the : 1
the additional the -> increment : 1
additional the increment -> shows : 1
the increment shows -> one : 1
increment shows one -> way : 1
shows one way -> to : 5
way to overload -> the : 1
overload the increment -> is : 1
the increment is -> the : 1
increment is the -> increment : 1
is the increment -> status : 1
the increment status -> waiting : 1
increment status waiting -> prefix : 1
status waiting prefix -> if : 1
waiting prefix if -> s : 1
prefix if s -> return : 1
if s return -> status : 1
s return status -> postfix : 1
return status postfix -> status : 1
status postfix status -> rtn : 1
postfix status rtn -> return : 1
status rtn return -> int : 1
rtn return int -> status : 1
return int status -> calls : 1
int status calls -> calls : 1
status calls calls -> operator : 1
calls calls operator -> is : 1
calls operator is -> different : 1
operator is different -> from : 1
the other although -> you : 1
other although you -> use : 1
although you use -> it : 1
you use it -> as : 1
use it as -> a : 2
use it as -> feature : 1
use it as -> an : 1
as a binary -> you : 1
a binary you -> overload : 1
binary you overload -> it : 1
you overload it -> as : 1
overload it as -> a : 1
no it must -> return : 1
it must return -> one : 1
must return one -> of : 1
return one of -> the : 1
the object of -> class : 1
of class for -> which : 1
class for which -> the : 1
which the type -> overloads : 1
the type overloads -> the : 1
type overloads the -> pointer : 1
overloads the pointer -> to : 1
a class chain -> of : 1
class chain of -> operators : 1
chain of operators -> is : 1
of operators is -> followed : 1
operators is followed -> until : 1
is followed until -> it : 1
followed until it -> ends : 1
until it ends -> with : 1
it ends with -> a : 1
with a pointer -> to : 1
class the actual -> right : 1
the actual right -> operand : 1
actual right operand -> must : 1
right operand must -> name : 1
operand must name -> a : 1
must name a -> member : 1
name a member -> of : 1
member of that -> the : 1
of that the -> operator : 1
that the operator -> is : 1
that the operator -> can : 1
that the operator -> return : 1
operator is most -> often : 1
is most often -> overloaded : 1
is most often -> known : 1
is most often -> used : 9
most often overloaded -> to : 1
often overloaded to -> implement : 1
overloaded to implement -> a : 1
implement a smart -> see : 1
a smart see -> the : 1
smart see the -> template : 1
see the template -> in : 1
the template in -> the : 2
the template in -> a : 1
template in the -> section : 1
template in the -> same : 1
template in the -> following : 1
the section of -> for : 4
the section of -> this : 1
section of for -> an : 1
section of for -> details : 2
section of for -> more : 1
of for an -> call : 1
of for an -> object : 1
for an call -> operator : 1
an call operator -> takes : 1
call operator takes -> any : 1
operator takes any -> number : 1
takes any number -> of : 1
of it must -> be : 1
a member to -> invoke : 1
member to invoke -> the : 1
to invoke the -> use : 1
invoke the use -> an : 1
the use an -> object : 1
use an object -> of : 1
use an object -> by : 1
class type as -> the : 1
type as the -> of : 1
type as the -> second : 2
type as the -> number : 1
as the of -> the : 1
the of the -> pass : 1
the of the -> argument : 1
the of the -> first : 1
the of the -> class : 1
the of the -> in : 1
of the pass -> the : 1
the pass the -> arguments : 1
pass the arguments -> as : 1
the arguments as -> you : 1
arguments as you -> would : 1
you would any -> other : 5
would any other -> function : 1
would any other -> data : 1
would any other -> except : 1
would any other -> output : 1
would any other -> t : 1
other function with -> a : 1
function with a -> simple : 1
function with a -> single : 1
with a simple -> variable : 1
a simple variable -> of : 1
simple variable of -> class : 1
variable of class -> the : 1
class the syntax -> looks : 1
the syntax looks -> like : 1
syntax looks like -> an : 1
looks like an -> ordinary : 1
like an ordinary -> function : 1
like an ordinary -> class : 1
like an ordinary -> a : 1
like an ordinary -> numerical : 1
like an ordinary -> for : 1
an ordinary function -> object : 1
an ordinary function -> or : 1
an ordinary function -> that : 2
ordinary function object -> that : 1
function object that -> overloads : 1
function object that -> can : 4
function object that -> returns : 1
function object that -> adds : 1
function object that -> wraps : 4
function object that -> performs : 2
overloads the function -> call : 1
call operator is -> often : 1
operator is often -> called : 1
called a functors -> are : 1
a functors are -> typically : 1
functors are typically -> used : 1
are typically used -> with : 1
typically used with -> the : 1
typically used with -> standard : 1
used with the -> standard : 7
used with the -> it : 1
used with the -> comma : 1
used with the -> declaration : 1
with the standard -> algorithms : 2
with the standard -> classes : 1
with the standard -> section : 1
with the standard -> the : 1
with the standard -> see : 2
with the standard -> they : 1
with the standard -> iterators : 1
with the standard -> library : 1
with the standard -> to : 1
with the standard -> class : 1
with the standard -> note : 3
with the standard -> of : 1
the standard algorithms -> to : 1
the standard algorithms -> as : 1
the standard algorithms -> offer : 1
the standard algorithms -> cannot : 1
the standard algorithms -> are : 2
the standard algorithms -> do : 1
the standard algorithms -> you : 1
the standard algorithms -> might : 1
the standard algorithms -> can : 1
the standard algorithms -> in : 1
standard algorithms to -> better : 1
algorithms to better -> encapsulate : 1
to better encapsulate -> some : 1
better encapsulate some -> such : 1
encapsulate some such -> as : 1
some such as -> also : 1
some such as -> have : 1
such as also -> permit : 1
as also permit -> the : 1
also permit the -> functor : 1
permit the functor -> to : 1
the functor to -> store : 1
functor to store -> state : 1
to store state -> which : 1
store state which -> cannot : 1
state which cannot -> be : 1
which cannot be -> done : 1
which cannot be -> used : 1
cannot be done -> with : 1
be done with -> a : 1
done with a -> plain : 1
with a plain -> comparison : 1
a plain comparison -> functions : 1
plain comparison functions -> for : 1
comparison functions for -> the : 1
for the associative -> containers : 1
the associative containers -> are : 1
the associative containers -> can : 1
the associative containers -> also : 1
associative containers are -> easier : 1
containers are easier -> to : 1
are easier to -> implement : 1
are easier to -> use : 1
easier to implement -> as : 1
to implement as -> see : 1
implement as see -> and : 1
as see and -> in : 1
see and in -> for : 1
in for new -> and : 1
for new and -> operator : 1
new and operator -> new : 1
new and operator -> expression : 1
new and operator -> operator : 1
new and operator -> class : 1
new and operator -> delete : 2
and operator new -> and : 2
operator new and -> operator : 5
and operator expression -> calls : 1
operator expression calls -> to : 1
expression calls to -> allocate : 1
calls to allocate -> and : 1
to allocate and -> a : 1
to allocate and -> free : 1
allocate and a -> expression : 1
and a expression -> calls : 2
and a expression -> can : 1
a expression calls -> expression : 1
a expression calls -> for : 1
expression calls expression -> calls : 1
calls expression calls -> and : 1
expression calls and -> a : 1
calls and a -> expression : 1
expression calls for -> the : 1
calls for the -> sake : 1
sake of whenever -> i : 1
of whenever i -> refer : 1
whenever i refer -> to : 1
i refer to -> a : 1
to a i -> mean : 1
a i mean -> a : 1
i mean a -> expression : 1
mean a expression -> or : 1
a expression or -> refers : 1
a expression or -> other : 1
expression or refers -> to : 1
or refers to -> and : 1
refers to and -> ditto : 1
to and ditto -> for : 1
and ditto for -> can : 1
ditto for can -> overload : 1
for can overload -> and : 1
can overload and -> in : 1
can overload and -> described : 1
overload and in -> the : 1
scope or as -> members : 1
or as members -> of : 1
as members of -> a : 2
of a in -> the : 1
global the functions -> must : 1
the functions must -> not : 1
functions must not -> be : 1
not be nor -> can : 1
be nor can -> you : 1
nor can you -> declare : 1
nor can you -> cast : 1
can you declare -> them : 1
you declare them -> in : 1
declare them in -> a : 1
in a when -> you : 1
a when you -> define : 1
a when you -> declare : 1
you define these -> operators : 1
define these operators -> as : 1
these operators as -> member : 1
operators as member -> the : 1
as member the -> functions : 1
member the functions -> are : 1
the functions are -> always : 1
the functions are -> described : 1
functions are always -> even : 1
if you omit -> the : 2
if you omit -> all : 1
you omit the -> if : 1
you omit the -> initializer : 1
you omit the -> operator : 1
omit the if -> you : 1
do not overload -> the : 2
not overload the -> global : 1
not overload the -> operators : 1
overload the global -> the : 1
global the library -> provides : 1
the library provides -> an : 1
library provides an -> implementation : 1
provides an implementation -> for : 1
implementation for in -> if : 1
for in if -> you : 1
in if you -> do : 1
in if you -> want : 1
operators for a -> the : 1
for a the -> global : 1
for a the -> function : 3
for a the -> precision : 1
a the global -> operators : 1
the global operators -> are : 1
global operators are -> a : 1
operators are a -> class : 1
are a class -> overloads : 1
a class overloads -> the : 1
class overloads the -> and : 1
overloads the and -> the : 1
and the corresponding -> operator : 1
the corresponding operator -> functions : 1
corresponding operator functions -> are : 1
functions are called -> for : 1
functions are called -> in : 2
are called for -> and : 1
called for and -> expressions : 1
called for and -> suppose : 1
for and expressions -> involving : 1
and expressions involving -> that : 1
expressions involving that -> when : 1
involving that when -> overloading : 1
that when overloading -> or : 1
when overloading or -> as : 1
overloading or as -> member : 1
or as member -> functions : 1
member functions or -> with : 1
member functions or -> whichever : 1
functions or with -> placement : 1
or with placement -> you : 1
with placement you -> can : 1
placement you can -> call : 1
you can call -> the : 2
you can call -> them : 1
you can call -> to : 2
you can call -> it : 1
can call the -> global : 1
can call the -> function : 1
can call the -> member : 2
global as shown -> in : 1
shown in operator -> new : 1
in operator new -> and : 1
and operator operator -> new : 1
operator operator new -> and : 1
and operator class -> demo : 1
operator class demo -> static : 1
class demo static -> operator : 1
demo static operator -> throw : 1
static operator throw -> if : 1
operator throw if -> instance : 1
throw if instance -> return : 1
if instance return -> static : 1
instance return static -> void : 1
return static void -> operator : 1
return static void -> derived : 1
static void operator -> if : 1
void operator if -> instance : 1
operator if instance -> static : 1
if instance static -> return : 1
instance static return -> new : 1
static return new -> static : 1
return new static -> static : 1
new static static -> int : 1
static static int -> return : 1
static static int -> const : 2
static int return -> first : 1
int return first -> parameter : 1
return first parameter -> to : 1
first parameter to -> has : 1
first parameter to -> is : 1
first parameter to -> for : 2
parameter to has -> type : 1
to has type -> and : 1
has type and -> is : 1
has type and -> integer : 1
has type and -> an : 1
is the amount -> of : 1
memory to the -> function : 1
the function returns -> a : 8
the function returns -> additional : 1
the function returns -> the : 6
the function returns -> as : 2
the function returns -> and : 2
the function returns -> const : 6
the function returns -> typename : 1
the function returns -> or : 1
the function returns -> in : 2
the function returns -> for : 1
the function returns -> up : 1
the function returns -> if : 1
to the allocated -> memory : 1
allocated memory as -> a : 1
memory as a -> additional : 1
as a additional -> parameters : 1
a additional parameters -> are : 1
additional parameters are -> allowed : 2
parameters are allowed -> for : 2
are allowed for -> placement : 2
are allowed for -> member : 1
allowed for placement -> functions : 1
allowed for placement -> see : 1
for placement functions -> the : 1
placement functions the -> first : 1
functions the first -> parameter : 1
parameter to is -> a : 1
function returns additional -> parameters : 1
returns additional parameters -> are : 1
for placement see -> in : 1
placement see in -> for : 1
about overloaded and -> you : 1
overloaded and you -> overload : 1
and you overload -> the : 1
and you will -> probably : 1
you will probably -> want : 1
you will probably -> need : 2
you will probably -> find : 1
will probably want -> to : 1
probably want to -> overload : 1
overload the scalar -> and : 1
the scalar and -> array : 2
scalar and array -> versions : 2
and array versions -> of : 1
and array versions -> often : 1
array versions of -> the : 1
versions of the -> the : 1
versions of the -> standard : 1
versions of the -> math : 2
versions of the -> for : 1
versions of the -> function : 3
versions of the -> multibyte : 1
the the scalar -> and : 1
array versions often -> behave : 1
versions often behave -> but : 1
often behave but -> you : 1
behave but you -> have : 1
but you have -> the : 1
you have the -> option : 1
have the option -> of : 1
the option of -> making : 1
option of making -> them : 1
of making them -> behave : 1
making them behave -> note : 1
them behave note -> that : 1
behave note that -> the : 1
the compiler initializes -> the : 1
compiler initializes the -> so : 1
initializes the so -> your : 1
the so your -> allocation : 1
so your allocation -> or : 1
your allocation or -> deallocation : 1
allocation or deallocation -> function : 1
allocation or deallocation -> with : 1
or deallocation function -> does : 1
need to know -> the : 2
need to know -> how : 1
to know the -> number : 1
to know the -> exact : 1
to know the -> iterator : 1
number of objects -> being : 1
of objects being -> allocated : 1
objects being allocated -> or : 1
being allocated or -> you : 1
allocated or you -> overload : 1
or you overload -> you : 1
you overload you -> should : 1
overload you should -> probably : 1
you should probably -> also : 1
you should probably -> use : 1
should probably also -> overload : 1
probably also overload -> in : 1
also overload in -> the : 1
overload in the -> case : 1
case of placement -> the : 1
placement the corresponding -> placement : 2
the corresponding placement -> function : 1
the corresponding placement -> operator : 1
the corresponding placement -> expression : 1
corresponding placement function -> is : 2
placement function is -> called : 2
placement function is -> a : 1
is called if -> an : 1
is called if -> a : 2
called if an -> exception : 1
is thrown while -> constructing : 1
is thrown while -> copying : 1
is thrown while -> the : 1
thrown while constructing -> the : 1
while constructing the -> newly : 1
constructing the newly -> allocated : 1
the newly allocated -> object : 1
the newly allocated -> memory : 3
the newly allocated -> if : 1
the newly allocated -> the : 1
newly allocated object -> or : 1
allocated object or -> without : 1
object or without -> a : 1
or without a -> corresponding : 1
without a corresponding -> placement : 1
a corresponding placement -> no : 1
a corresponding placement -> function : 1
corresponding placement no -> function : 1
placement no function -> is : 1
no function is -> this : 1
function is this -> is : 1
function is this -> form : 1
is this is -> the : 1
the only time -> a : 1
the only time -> you : 1
the only time -> it : 1
only time a -> placement : 1
time a placement -> function : 1
a placement function -> is : 1
is a expression -> always : 1
is a expression -> is : 1
a expression always -> calls : 1
expression always calls -> the : 1
always calls the -> form : 1
always calls the -> derived : 1
calls the form -> of : 1
form of class -> can : 1
form of class -> it : 1
of class can -> declare : 1
class can declare -> type : 1
can declare type -> conversion : 1
declare type conversion -> operators : 1
conversion operators to -> convert : 1
to convert objects -> to : 1
convert objects to -> other : 1
objects to other -> the : 1
to other the -> operator : 1
other the operator -> functions : 1
the operator functions -> must : 1
operator functions must -> be : 1
member the name -> of : 1
name of each -> operator : 1
each operator is -> the : 1
operator is the -> desired : 1
operator is the -> function : 1
is the desired -> which : 1
the desired which -> can : 1
desired which can -> be : 1
be a series -> of : 1
specifiers with and -> array : 1
with and array -> but : 1
and array but -> cannot : 1
array but cannot -> be : 1
but cannot be -> a : 1
be a function -> or : 2
be a function -> function : 2
be a function -> pointer : 5
be a function -> a : 1
function or array -> bigint : 1
or array bigint -> operator : 1
array bigint operator -> convert : 1
bigint operator convert -> object : 1
operator convert object -> to : 1
convert object to -> type : 1
object to type -> operator : 1
to type operator -> unsigned : 1
type operator unsigned -> operator : 1
operator unsigned operator -> const : 1
unsigned operator const -> return : 1
const return a -> string : 1
const return a -> b : 2
return a string -> representation : 1
a string representation -> main : 1
a string representation -> of : 1
string representation main -> main : 1
representation main main -> with : 1
main main with -> no : 1
main with no -> program : 1
with no program -> must : 1
no program must -> have : 1
global namespace called -> which : 1
namespace called which -> is : 1
called which is -> the : 1
is the main -> this : 1
the main this -> function : 1
main this function -> must : 1
this function must -> return : 1
must return type -> the : 1
return type the -> environment : 1
type the environment -> calls : 1
the environment calls -> your : 1
environment calls your -> program : 1
calls your program -> must : 1
your program must -> never : 1
program must never -> call : 1
program must never -> dereference : 1
must never call -> the : 1
never call the -> function : 1
the function cannot -> be : 1
cannot be declared -> or : 1
declared or it -> can : 1
be called with -> no : 2
be called with -> a : 2
called with no -> arguments : 1
called with no -> it : 1
arguments or with -> two : 1
arguments or with -> a : 1
or with two -> parameter : 1
with two parameter -> is : 1
two parameter is -> the : 1
parameter is the -> number : 1
parameter is the -> name : 1
parameter is the -> signal : 2
parameter is the -> function : 1
parameter is the -> member : 8
parameter is the -> class : 8
parameter is the -> type : 6
parameter is the -> return : 2
parameter is the -> object : 2
parameter is the -> default : 3
parameter is the -> new : 1
number of and -> is : 1
and is an -> array : 1
and is an -> iterator : 1
the which are -> character : 1
which are character -> by : 1
are character by -> is : 1
character by is -> a : 1
by is a -> null : 1
null the first -> element : 1
array is the -> program : 1
array is the -> contents : 1
array is the -> value : 1
is the program -> name : 1
the program name -> or : 1
program name or -> an : 1
name or an -> empty : 1
or an empty -> with : 1
or an empty -> string : 1
an empty with -> no : 1
empty with no -> implementation : 1
no implementation is -> required : 1
implementation is required -> to : 1
is required to -> support : 1
is required to -> keep : 1
is required to -> document : 1
required to support -> at : 1
to support at -> least : 1
support at least -> two : 1
at least two -> forms : 1
at least two -> one : 1
at least two -> the : 1
least two forms -> of : 1
forms of one -> that : 1
of one that -> takes : 1
one that takes -> no : 1
one that takes -> the : 1
one that takes -> a : 1
no and one -> that : 1
and one that -> takes : 1
that takes the -> two : 1
that takes the -> same : 1
takes the two -> parameters : 1
the two parameters -> for : 1
two parameters for -> an : 1
parameters for an -> implementation : 1
for an implementation -> can : 1
for an implementation -> of : 1
implementation can support -> other : 1
can support other -> forms : 1
support other forms -> of : 1
forms of the -> standard : 1
the standard recommends -> that : 1
the standard recommends -> the : 1
standard recommends that -> the : 1
recommends that the -> first : 1
first two parameters -> should : 1
two parameters should -> be : 1
parameters should be -> the : 1
should be the -> same : 2
should be the -> complexity : 2
be the same -> as : 9
be the same -> for : 1
be the same -> size : 4
same as they -> are : 1
as they are -> in : 1
as they are -> used : 1
as they are -> the : 1
they are in -> the : 1
and that additional -> parameters : 1
that additional parameters -> follow : 1
additional parameters follow -> with : 1
parameters follow with -> no : 1
follow with no -> objects : 1
with no objects -> at : 1
no objects at -> namespace : 1
objects at namespace -> scope : 1
namespace scope can -> have : 1
scope can have -> constant : 1
can have constant -> or : 2
have constant or -> dynamic : 1
have constant or -> linear : 1
constant or dynamic -> initial : 1
or dynamic initial -> those : 1
dynamic initial those -> of : 1
initial those of -> pod : 1
those of pod -> type : 1
of pod type -> with : 1
pod type with -> constant : 1
type with constant -> values : 1
with constant values -> are : 1
constant values are -> initialized : 1
initialized by constant -> data : 1
by constant data -> before : 1
constant data before -> the : 1
data before the -> program : 1
before the program -> and : 1
before the program -> they : 1
the program and -> those : 1
the program and -> freed : 1
program and those -> with : 1
and those with -> dynamic : 1
those with dynamic -> values : 1
with dynamic values -> are : 1
dynamic values are -> initialized : 1
initialized by code -> when : 1
by code when -> the : 1
code when the -> program : 1
the program the -> objects : 1
the program the -> next : 1
the program the -> environment : 1
program the objects -> are : 1
the objects are -> initialized : 1
are initialized is -> it : 1
initialized is it -> might : 1
is it might -> happen : 1
is it might -> be : 1
it might happen -> before : 1
might happen before -> is : 1
happen before is -> or : 1
before is or -> it : 1
is or it -> might : 1
or it might -> be : 1
it might be -> should : 1
it might be -> declared : 1
it might be -> pointing : 1
it might be -> difficult : 1
it might be -> a : 3
it might be -> or : 1
might be should -> avoid : 1
be should avoid -> writing : 1
should avoid writing -> code : 1
avoid writing code -> that : 1
writing code that -> depends : 2
on the order -> in : 2
in which static -> objects : 1
which static objects -> are : 1
objects are if -> you : 1
are if you -> cannot : 1
are if you -> overload : 1
if you cannot -> avoid : 1
you cannot avoid -> you : 1
cannot avoid you -> can : 1
avoid you can -> work : 1
you can work -> around : 1
can work around -> the : 1
around the problem -> by : 1
the problem by -> defining : 1
problem by defining -> a : 1
class that performs -> the : 1
class that performs -> input : 1
that performs the -> required : 1
that performs the -> logical : 2
that performs the -> equivalent : 1
performs the required -> initialization : 1
the required initialization -> and : 1
required initialization and -> defining : 1
initialization and defining -> a : 1
and defining a -> static : 1
and defining a -> shows : 1
and defining a -> export : 1
defining a static -> instance : 1
a static instance -> of : 1
static instance of -> your : 1
instance of your -> for : 1
your for you -> can : 1
for you can -> guarantee : 1
for you can -> force : 1
for you can -> create : 1
for you can -> traits : 1
for you can -> use : 1
for you can -> implement : 1
for you can -> treat : 1
you can guarantee -> that : 1
can guarantee that -> the : 1
guarantee that the -> standard : 2
that the standard -> stream : 1
that the standard -> offers : 1
that the standard -> library : 1
that the standard -> failed : 1
that the standard -> class : 1
the standard stream -> objects : 2
the standard stream -> because : 1
standard stream objects -> are : 1
standard stream objects -> the : 1
stream objects are -> created : 1
objects are created -> early : 1
objects are created -> with : 1
are created early -> so : 1
created early so -> they : 1
early so they -> can : 1
so they can -> be : 2
they can be -> used : 2
they can be -> unlike : 1
they can be -> implemented : 1
they can be -> subtracted : 1
in the constructor -> of : 1
the constructor of -> a : 1
constructor of a -> static : 1
a static see -> in : 1
static see in -> for : 1
more information and -> an : 1
information and an -> local : 1
and an local -> static : 1
an local static -> object : 1
local static object -> is : 1
static object is -> initialized : 1
static object is -> called : 1
is initialized when -> execution : 1
initialized when execution -> first : 1
when execution first -> reaches : 1
execution first reaches -> its : 1
first reaches its -> if : 1
reaches its if -> the : 1
its if the -> function : 2
function is never -> or : 1
is never or -> if : 1
never or if -> execution : 1
or if execution -> never : 1
if execution never -> reaches : 1
execution never reaches -> the : 1
never reaches the -> the : 1
reaches the the -> object : 1
is never returns -> or : 1
never returns or -> when : 1
returns or when -> is : 1
or when is -> called : 1
or when is -> read : 1
when is called -> in : 1
when is called -> with : 1
is called in -> static : 1
is called in -> the : 1
called in static -> objects : 1
in static objects -> are : 1
in the reverse -> order : 1
in the reverse -> direction : 1
the reverse order -> of : 1
reverse order of -> their : 2
of their and -> the : 1
of their and -> some : 1
their and the -> program : 1
their and the -> compiler : 1
and the program -> all : 1
and the program -> each : 1
the program all -> static : 1
program all static -> objects : 1
all static objects -> are : 1
objects are also -> if : 1
are also if -> a : 1
also if a -> function : 1
also if a -> base : 1
function that contains -> a : 1
that contains a -> static : 1
that contains a -> type : 1
contains a static -> object : 1
a static object -> is : 1
a static object -> using : 2
object is called -> during : 1
is called during -> the : 1
called during the -> destruction : 1
during the destruction -> of : 1
the destruction of -> static : 1
destruction of static -> the : 1
destruction of static -> objects : 1
of static the -> behavior : 1
static the behavior -> is : 1
behavior is with -> no : 1
no value returned -> from : 1
no value returned -> by : 1
value returned from -> is : 2
value returned from -> others : 1
value returned from -> in : 1
value returned from -> an : 1
returned from is -> passed : 1
returned from is -> an : 1
returned from is -> initialized : 1
from is passed -> to : 1
to the host -> you : 1
to the host -> operating : 1
the host you -> can : 1
host you can -> return : 1
you can return -> or : 1
can return or -> in : 1
return or in -> to : 1
or in to -> indicate : 1
in to indicate -> or : 1
to indicate or -> to : 1
indicate or to -> tell : 1
or to tell -> the : 1
tell the environment -> that : 1
the environment that -> the : 1
environment that the -> program : 1
that the program -> other : 1
that the program -> ends : 2
that the program -> contains : 2
that the program -> was : 2
the program other -> values : 1
program other values -> are : 1
other values are -> some : 1
other values are -> copied : 1
values are some -> environments : 1
are some environments -> ignore : 1
some environments ignore -> the : 1
environments ignore the -> value : 1
ignore the value -> returned : 1
the value returned -> from : 4
the value returned -> is : 2
returned from others -> rely : 1
from others rely -> on : 1
others rely on -> the : 1
rely on the -> supports : 1
rely on the -> standard : 1
rely on the -> which : 1
rely on the -> usual : 1
rely on the -> boost : 1
on the supports -> programming : 1
the supports programming -> with : 1
supports programming with -> a : 1
programming with a -> object : 1
with a object -> that : 1
object that a -> class : 1
that a class -> defines : 1
that a class -> definition : 1
that a class -> with : 1
that a class -> or : 1
that a class -> nested : 1
a class defines -> the : 1
class defines the -> behavior : 1
defines the behavior -> and : 1
the behavior and -> the : 1
behavior and the -> state : 1
and the state -> of : 1
the state of -> objects : 1
the state of -> the : 1
the state of -> members : 5
state of objects -> that : 1
of objects that -> are : 1
that are instances -> of : 1
are instances of -> the : 2
instances of the -> classes : 1
instances of the -> derived : 1
instances of the -> template : 3
instances of the -> class : 2
instances of the -> primary : 1
instances of the -> largest : 1
instances of the -> smallest : 1
of the classes -> can : 1
the classes can -> inherit : 1
classes can inherit -> behavior : 1
can inherit behavior -> from : 1
inherit behavior from -> ancestor : 1
behavior from ancestor -> virtual : 1
from ancestor virtual -> functions : 1
ancestor virtual functions -> implement : 1
virtual functions implement -> type : 1
functions implement type -> that : 1
implement type that -> a : 1
type that a -> variable : 1
that a variable -> can : 1
a variable can -> be : 1
variable can be -> declared : 1
be declared as -> a : 1
be declared as -> not : 1
a base and -> at : 1
base and at -> runtime : 1
at runtime it -> can : 1
runtime it can -> take : 1
it can take -> on : 1
it can take -> a : 1
can take on -> the : 1
take on the -> value : 1
value of any -> class : 1
value of any -> number : 2
of any class -> derived : 1
any class derived -> from : 1
derived from that -> base : 1
from that base -> also : 1
that base also -> supports : 1
base also supports -> structures : 1
also supports structures -> and : 1
supports structures and -> unions : 1
structures and unions -> using : 1
and unions using -> the : 1
unions using the -> same : 1
the same mechanism -> as : 1
the same mechanism -> to : 1
same mechanism as -> this : 1
mechanism as this -> chapter : 1
as this chapter -> describes : 1
chapter describes classes -> in : 1
describes classes in -> all : 1
classes in all -> their : 1
in all their -> for : 1
all their for -> information : 1
their for information -> about : 1
information about class -> see : 1
information about class -> class : 6
about class see -> member : 1
class see member -> functions : 1
see member functions -> are : 1
member functions are -> a : 1
member functions are -> the : 1
functions are a -> special : 1
functions are a -> pure : 1
kind of see -> for : 1
of see for -> general : 1
of see for -> information : 1
of see for -> an : 1
see for general -> information : 1
for general information -> about : 4
for general information -> on : 1
general information about -> syntax : 1
general information about -> class : 2
general information about -> algorithms : 1
information about syntax -> descriptions : 2
about syntax descriptions -> in : 2
precise bnf definition -> starts : 1
bnf definition starts -> with : 1
definition starts with -> the : 1
starts with the -> or : 1
starts with the -> keyword : 1
starts with the -> character : 1
starts with the -> first : 5
starts with the -> last : 1
or the difference -> between : 1
difference between a -> and : 2
difference between a -> narrow : 1
between a and -> a : 2
and a is -> the : 1
the default access -> later : 1
the default access -> for : 1
the default access -> level : 3
default access later -> in : 1
access later in -> this : 1
chapter for a -> is : 1
chapter for a -> the : 1
chapter for a -> discussion : 1
for a is -> like : 1
for a is -> a : 1
like a for -> which : 1
a for which -> the : 1
which the storage -> of : 1
the storage of -> all : 1
storage of all -> the : 1
all the data -> members : 2
data members so -> you : 1
members so you -> can : 1
use only one -> data : 1
only one data -> member : 2
one data member -> at : 2
data member at -> a : 2
member at a -> later : 1
member at a -> it : 1
member at a -> the : 1
at a later -> in : 1
section for class -> definition : 1
section for class -> class : 1
for class definition -> can : 1
class definition can -> list : 1
definition can list -> any : 1
can list any -> number : 1
list any number -> of : 1
number of base -> some : 1
number of base -> the : 1
of base some -> or : 1
base some or -> all : 1
some or all -> of : 1
or all of -> which : 1
all of which -> might : 1
of which might -> be : 1
of which might -> form : 1
might be later -> in : 1
be later in -> this : 1
information about base -> classes : 1
about base classes -> and : 1
base classes and -> virtual : 1
base classes and -> for : 1
base classes and -> all : 1
base classes and -> their : 1
classes and virtual -> base : 1
and virtual base -> the : 1
and virtual base -> classes : 1
and virtual base -> class : 2
and virtual base -> a : 1
virtual base the -> class : 1
virtual base the -> value : 1
virtual base the -> constructors : 1
virtual base the -> virtual : 1
base the class -> definition : 1
class definition are -> declarations : 1
definition are declarations -> for : 1
are declarations for -> members : 1
declarations for members -> variables : 1
for members variables -> or : 1
members variables or -> in : 1
variables or in -> some : 1
or in some -> other : 1
in some other -> functions : 1
in some other -> shift : 1
some other functions -> called : 1
other functions called -> and : 1
functions called and -> class : 1
called and class -> definition : 1
and class definition -> defines : 1
class definition defines -> a : 1
definition defines a -> and : 1
defines a and -> the : 1
the class members -> are : 1
class members are -> declared : 1
members are declared -> in : 1
class name itself -> is : 1
name itself is -> added : 1
itself is added -> to : 1
the class so -> a : 1
the class so -> it : 1
class so a -> class : 1
so a class -> cannot : 1
class cannot have -> any : 1
class cannot have -> private : 1
class cannot have -> static : 1
class cannot have -> a : 1
cannot have any -> nested : 1
cannot have any -> of : 1
have any nested -> or : 1
any nested or -> enumerators : 1
nested or enumerators -> that : 1
or enumerators that -> have : 1
enumerators that have -> the : 1
same name as -> the : 1
same name as -> a : 1
name as the -> as : 1
name as the -> constructor : 1
as the as -> with : 1
the as with -> any : 1
any other the -> class : 1
any other the -> performance : 5
any other the -> element : 1
other the class -> name : 1
class name is -> also : 1
class name is -> a : 1
class name is -> shorthand : 1
class name is -> and : 1
class name is -> trivial : 1
name is also -> added : 1
name is also -> an : 1
is also added -> to : 1
also added to -> the : 1
to the scope -> in : 2
the scope in -> which : 2
scope in which -> the : 3
class is can -> declare : 1
is can declare -> a : 1
declare a name -> as : 1
a name as -> a : 1
name as a -> or : 1
name as a -> member : 1
name as a -> string : 1
name as a -> which : 1
as a or -> without : 1
as a or -> global : 1
a or without -> providing : 1
or without providing -> its : 1
without providing its -> full : 1
providing its full -> this : 1
its full this -> incomplete : 1
full this incomplete -> class : 1
this incomplete class -> declaration : 1
incomplete class declaration -> lets : 1
class declaration lets -> you : 1
declaration lets you -> use : 1
lets you use -> the : 1
lets you use -> a : 3
lets you use -> with : 1
use the class -> name : 1
use the class -> supply : 1
use the class -> can : 1
use the class -> class : 10
use the class -> function : 2
use the class -> template : 1
use the class -> if : 1
class name in -> pointers : 1
name in pointers -> and : 1
in pointers and -> references : 1
pointers and references -> but : 1
pointers and references -> to : 1
and references but -> not : 1
references but not -> in : 1
not in any -> context : 1
not in any -> so : 1
not in any -> particular : 1
in any context -> in : 1
any context in -> which : 1
context in which -> the : 2
which the full -> definition : 1
the full definition -> is : 1
full definition is -> you : 1
definition is you -> need : 1
is you need -> a : 1
a complete class -> definition : 1
a complete class -> you : 1
complete class definition -> when : 1
class definition when -> declaring : 1
definition when declaring -> a : 1
when declaring a -> nonpointer : 1
when declaring a -> member : 1
when declaring a -> character : 1
when declaring a -> new : 5
declaring a nonpointer -> or : 1
a nonpointer or -> nonreference : 1
nonpointer or nonreference -> when : 1
or nonreference when -> using : 1
nonreference when using -> members : 1
when using members -> of : 1
using members of -> the : 1
the and so -> an : 1
the and so -> they : 1
and so an -> class : 1
so an class -> declaration : 1
an class declaration -> has : 1
class declaration has -> a : 1
declaration has a -> number : 1
has a number -> of : 2
number of class -> two : 1
of class two -> classes : 1
class two classes -> refer : 1
two classes refer -> to : 1
classes refer to -> each : 1
classes refer to -> the : 1
refer to each -> you : 1
to each you -> can : 1
to each you -> could : 1
each you can -> declare : 1
can declare one -> as : 1
declare one as -> an : 1
one as an -> incomplete : 1
as an incomplete -> then : 1
an incomplete then -> provide : 1
incomplete then provide -> the : 1
then provide the -> full : 1
provide the full -> definitions : 1
the full definitions -> of : 1
full definitions of -> class : 1
definitions of class -> bitmap : 1
of class bitmap -> void : 1
class bitmap void -> class : 1
bitmap void class -> a : 1
void class a -> class : 1
class a class -> uses : 1
class a class -> has : 1
a class uses -> helper : 1
class uses helper -> the : 1
uses helper the -> primary : 1
helper the primary -> class : 1
the primary class -> can : 1
the primary class -> if : 1
primary class can -> hold : 1
class can hold -> a : 1
can hold a -> pointer : 1
hold a pointer -> to : 2
to an incomplete -> helper : 1
an incomplete helper -> and : 1
incomplete helper and -> you : 1
helper and you -> do : 1
and you do -> not : 1
do not need -> to : 8
do not need -> is : 1
need to publish -> the : 1
to publish the -> definition : 1
publish the definition -> of : 1
of the helper -> the : 1
of the helper -> classes : 1
the helper the -> definition : 1
helper the definition -> might : 1
the definition might -> be : 1
definition might be -> hidden : 1
might be hidden -> in : 1
be hidden in -> a : 1
hidden in a -> this : 1
in a this -> is : 1
in a this -> technique : 1
this is sometimes -> called : 1
this is sometimes -> known : 1
called a a -> number : 1
a a number -> of : 1
a a number -> from : 1
of one of -> which : 1
of one of -> the : 3
is to for -> bigint : 1
to for bigint -> class : 1
for bigint class -> a : 1
bigint class a -> complete : 1
class a complete -> discussion : 1
a complete discussion -> of : 2
complete discussion of -> the : 1
complete discussion of -> storage : 1
of the pimpl -> see : 1
the pimpl see -> exceptional : 1
pimpl see exceptional -> by : 1
see exceptional by -> herb : 1
exceptional by herb -> sutter : 1
by herb sutter -> shows : 1
herb sutter shows -> several : 1
sutter shows several -> different : 1
several different point -> double : 1
different point double -> shape : 1
point double shape -> virtual : 1
double shape virtual -> virtual : 1
shape virtual virtual -> void : 2
virtual virtual void -> circle : 1
virtual virtual void -> int : 1
virtual virtual void -> virtual : 1
virtual void circle -> public : 1
void circle public -> shape : 1
circle public shape -> double : 1
circle public shape -> virtual : 1
public shape double -> point : 1
shape double point -> double : 1
double point double -> void : 1
point double void -> void : 1
double void void -> virtual : 1
void void virtual -> void : 2
virtual void point -> double : 1
void point double -> integer : 1
point double integer -> typedef : 1
double integer typedef -> int : 1
integer typedef int -> int : 1
typedef int int -> void : 1
typedef int int -> int : 1
void int real -> typedef : 1
int real typedef -> double : 1
real typedef double -> double : 1
typedef double double -> void : 1
double double void -> double : 1
double void double -> number : 1
void double number -> integer : 1
double number integer -> real : 1
number integer real -> a : 1
integer real a -> or : 1
real a or -> name : 1
a or name -> is : 1
or name is -> not : 1
is not automatically -> a : 1
not automatically a -> type : 1
automatically a type -> as : 1
a type as -> it : 1
a type as -> described : 1
a type as -> a : 1
type as it -> is : 1
as it is -> in : 2
as it is -> defined : 1
as it is -> being : 1
as it is -> given : 1
it is in -> a : 2
it is in -> the : 1
it is in -> which : 1
a variable declaration -> in : 1
variable declaration in -> for : 1
declaration in for -> would : 1
in for would -> need : 1
for would need -> to : 1
would need to -> be : 1
to be elaborated -> as : 1
be elaborated as -> instead : 1
elaborated as instead -> of : 1
as instead of -> simply : 1
instead of simply -> there : 1
of simply there -> is : 1
simply there is -> no : 1
is no harm -> in : 1
no harm in -> using : 1
harm in using -> the : 1
in using the -> fully : 1
in using the -> same : 1
using the fully -> elaborated : 1
the fully elaborated -> form : 2
fully elaborated form -> in : 1
fully elaborated form -> is : 1
elaborated form in -> and : 1
form in and -> this : 1
in and this -> is : 1
and this is -> often : 1
is often done -> in : 1
often done in -> headers : 1
done in headers -> that : 1
headers that are -> meant : 1
that are meant -> to : 3
are meant to -> be : 3
are meant to -> reflect : 1
to be portable -> between : 1
be portable between -> c : 1
portable between c -> and : 1
between c and -> are : 1
c and are -> even : 1
and are even -> in : 1
are even in -> when : 1
even in when -> the : 1
in when the -> fully : 1
when the fully -> elaborated : 1
elaborated form is -> such : 1
form is such -> as : 1
is such as -> when : 4
such as when -> a : 1
such as when -> asking : 1
such as when -> there : 4
as when a -> function : 1
when a function -> or : 1
or object declaration -> hides : 1
object declaration hides -> a : 1
declaration hides a -> class : 1
hides a class -> in : 1
class in this -> use : 1
class in this -> section : 3
class in this -> using : 1
in this use -> the : 1
use the elaborated -> form : 1
the elaborated form -> to : 1
elaborated form to -> refer : 1
form to refer -> to : 1
class for the -> posix : 1
class for the -> common : 1
class for the -> codecvt : 1
class for the -> and : 3
class for the -> class : 1
class for the -> declaration : 1
for the posix -> api : 1
the posix api -> has : 1
posix api has -> a : 1
api has a -> structure : 1
has a structure -> named : 1
a structure named -> which : 1
structure named which -> is : 1
named which is -> hidden : 1
which is hidden -> by : 1
is hidden by -> a : 1
function int struct -> int : 1
int struct int -> struct : 2
int struct int -> hides : 1
struct int struct -> stat : 1
struct int struct -> derived : 1
int struct stat -> if : 1
struct stat if -> for : 1
stat if for -> more : 1
if for more -> information : 1
information about elaborated -> type : 1
about elaborated type -> old : 1
elaborated type old -> old : 1
type old old -> programming : 1
old old programming -> languages : 1
old programming languages -> differentiate : 1
programming languages differentiate -> between : 1
languages differentiate between -> and : 1
differentiate between and -> a : 1
between and a -> record : 1
and a record -> is : 1
a record is -> a : 1
record is a -> simple : 1
a simple storage -> container : 1
simple storage container -> that : 1
storage container that -> lacks : 1
container that lacks -> the : 1
that lacks the -> more : 1
lacks the more -> complex : 1
the more complex -> features : 1
the more complex -> member : 1
more complex features -> of : 1
complex features of -> a : 1
features of a -> class : 1
a class virtual -> in : 1
class virtual in -> classes : 1
virtual in classes -> serve : 1
in classes serve -> both : 1
classes serve both -> but : 1
serve both but -> you : 1
both but you -> can : 1
can do things -> with : 1
do things with -> classes : 1
things with classes -> for : 1
with classes for -> old : 1
classes for old -> that : 1
for old that -> you : 1
old that you -> cannot : 1
you cannot do -> with : 1
cannot do with -> complicated : 1
do with complicated -> a : 1
with complicated a -> pod : 1
complicated a pod -> class : 1
a pod class -> is : 1
a pod class -> or : 1
a pod class -> can : 1
pod class is -> a : 1
class is a -> structure : 1
class is a -> the : 1
class is a -> derived : 1
class is a -> pattern : 1
class is a -> but : 1
class is a -> distinct : 1
class is a -> proxy : 1
class is a -> straightforward : 3
class is a -> specialization : 16
class is a -> base : 3
class is a -> stream : 1
is a structure -> that : 1
a structure that -> is : 1
structure that is -> compatible : 1
structure that is -> ideally : 1
that is compatible -> with : 1
is compatible with -> more : 1
compatible with more -> a : 1
with more a -> pod : 1
more a pod -> class : 1
pod class or -> union : 1
class or union -> does : 1
or union does -> not : 1
union does not -> have : 1
of the copy -> assignment : 2
of the copy -> constructor : 1
the copy assignment -> or : 1
the copy assignment -> base : 1
the copy assignment -> and : 1
the copy assignment -> operator : 2
copy assignment or -> protected : 1
copy assignment or -> you : 1
assignment or protected -> nonstatic : 1
nonstatic data members -> that : 1
nonstatic data members -> must : 2
nonstatic data members -> member : 1
nonstatic data members -> are : 3
nonstatic data members -> those : 1
nonstatic data members -> of : 1
nonstatic data members -> all : 1
data members that -> are : 2
that are all -> nonstatic : 1
are all nonstatic -> data : 1
all nonstatic data -> members : 3
all nonstatic data -> it : 2
data members must -> have : 1
data members must -> be : 2
members must have -> pod : 1
must have pod -> a : 1
must have pod -> type : 2
must have pod -> the : 1
have pod a -> pod : 1
pod a pod -> type : 1
pod type is -> a : 1
a fundamental an -> enumerated : 1
fundamental an enumerated -> a : 1
an enumerated a -> class : 1
enumerated a class -> or : 1
class or or -> a : 1
to or array -> of : 1
array of pod -> c : 1
array of pod -> a : 1
of pod c -> a : 1
pod c a -> pod : 1
c a pod -> class : 1
pod class can -> have : 1
pod class can -> contain : 1
class can have -> static : 2
class can have -> base : 1
class can have -> additional : 1
class can have -> a : 1
class can have -> data : 1
can have static -> data : 1
can have static -> and : 1
have static data -> nonvirtual : 1
have static data -> data : 1
have static data -> functions : 1
have static data -> a : 1
static data nonvirtual -> and : 1
data nonvirtual and -> nested : 1
nonvirtual and nested -> types : 1
and nested types -> that : 1
nested types that -> do : 1
types that do -> not : 1
not affect the -> data : 1
not affect the -> semantics : 1
not affect the -> count : 1
affect the data -> layout : 1
the data layout -> in : 1
data layout in -> an : 1
layout in an -> classes : 1
in an classes -> are : 1
an classes are -> often : 1
classes are often -> used : 1
often used when -> compatibility : 1
used when compatibility -> with : 1
when compatibility with -> c : 1
compatibility with c -> is : 1
compatibility with c -> see : 1
c is in -> that : 1
is in that -> you : 1
should avoid using -> any : 1
should avoid using -> them : 1
should avoid using -> deprecated : 1
avoid using any -> specifier : 1
using any specifier -> labels : 1
any specifier labels -> because : 1
specifier labels because -> they : 1
labels because they -> can : 1
because they can -> alter : 1
they can alter -> the : 1
can alter the -> layout : 1
alter the layout -> of : 1
the layout of -> data : 1
the layout of -> a : 1
the layout of -> the : 1
the layout of -> nonstatic : 1
layout of data -> members : 1
of data members -> within : 1
of data members -> are : 1
members within an -> pod : 1
within an pod -> class : 1
an pod class -> cannot : 1
pod class cannot -> have : 1
cannot have private -> or : 1
have private or -> protected : 1
private or protected -> but : 1
or protected but -> you : 1
protected but you -> can : 1
have multiple access -> specifier : 1
multiple access specifier -> labels : 1
access specifier labels -> and : 1
access specifier labels -> within : 1
specifier labels and -> still : 1
labels and still -> have : 1
and still have -> a : 1
still have a -> class : 1
have a class -> that : 1
class that meets -> the : 1
that meets the -> standard : 1
that meets the -> requirements : 1
that meets the -> strictest : 1
meets the standard -> definition : 1
the standard definition -> of : 1
standard definition of -> a : 1
of a pod -> pod : 1
of a pod -> object : 1
a pod pod -> and : 1
pod pod and -> shows : 1
pod and shows -> types : 1
and shows types -> and : 1
shows types and -> and : 1
types and and -> types : 1
and and types -> and : 1
types and pod -> and : 1
and pod and -> pod : 1
pod and pod -> int : 1
and pod int -> class : 1
pod int class -> not : 1
int class not -> pod : 1
class not pod -> int : 1
not pod int -> int : 1
not pod int -> virtue : 1
pod int int -> struct : 1
int int struct -> info : 1
int struct info -> pod : 1
struct info pod -> static : 1
info pod static -> const : 1
pod static const -> int : 1
static const int -> char : 1
static const int -> static : 8
const int char -> bool : 1
int char bool -> bool : 1
char bool bool -> compare : 1
bool bool compare -> struct : 1
bool compare struct -> employee : 1
compare struct employee -> info : 1
struct employee info -> not : 1
employee info not -> pod : 1
info not pod -> int : 1
pod int virtue -> of : 1
int virtue of -> a : 1
virtue of a -> pod : 1
object is that -> it : 1
object is that -> that : 1
is that it -> is : 2
is that it -> has : 1
is that it -> might : 1
that it is -> just : 1
that it is -> taking : 1
it is just -> a : 1
just a contiguous -> area : 1
a contiguous area -> of : 1
contiguous area of -> storage : 1
area of storage -> that : 1
of storage that -> stores : 1
storage that stores -> some : 1
that stores some -> value : 1
stores some value -> or : 1
some value or -> it : 1
initializer is left -> but : 1
is left but -> a : 1
left but a -> object : 1
but a object -> is : 1
is initialized by -> calling : 2
is initialized by -> copying : 1
its default a -> pod : 1
default a pod -> type : 1
a expression is -> but : 1
a expression is -> only : 1
expression is but -> a : 1
is but a -> new : 1
but a new -> object : 1
a new object -> is : 1
new object is -> initialized : 2
new object is -> that : 1
its default if -> you : 1
default if you -> supply : 1
if you supply -> an : 1
you supply an -> empty : 1
supply an empty -> initializer : 1
empty initializer to -> a : 1
initializer to a -> expression : 1
to a expression -> or : 1
expression or other -> expression : 1
or other expression -> that : 1
other expression that -> constructs : 1
expression that constructs -> a : 1
that constructs a -> pod : 1
constructs a pod -> the : 1
pod the pod -> object : 1
the pod object -> is : 1
the pod object -> can : 1
initialized to pod -> class : 1
to pod class -> can : 1
class can contain -> padding : 1
can contain padding -> between : 1
contain padding between -> data : 1
padding between data -> but : 1
between data but -> no : 1
data but no -> padding : 1
but no padding -> appears : 1
no padding appears -> before : 1
padding appears before -> the : 1
before the first -> a : 1
before the first -> element : 6
before the first -> item : 1
before the first -> form : 1
before the first -> character : 1
the first a -> pointer : 1
first a pointer -> to : 1
to the pod -> object : 1
be converted into -> a : 1
converted into a -> pointer : 1
into a pointer -> to : 1
first statement can -> safely : 1
safely branch into -> a : 1
branch into a -> skipping : 1
into a skipping -> over : 1
a skipping over -> declarations : 1
skipping over declarations -> of : 1
over declarations of -> uninitialized : 1
uninitialized pod a -> that : 1
pod a that -> skips : 1
a that skips -> any : 1
that skips any -> other : 1
skips any other -> declaration : 1
any other declaration -> in : 1
other declaration in -> the : 1
in the block -> results : 1
the block results -> in : 1
block results in -> undefined : 1
in undefined for -> more : 1
undefined for more -> information : 1
information about initializing -> pod : 1
about initializing pod -> and : 1
initializing pod and -> for : 1
pod and for -> more : 1
about the is -> another : 1
the is another -> form : 1
is another form -> of : 1
another form of -> class : 1
of class it -> cannot : 1
class it cannot -> have : 1
it cannot have -> any : 1
copy assignment base -> all : 1
assignment base all -> base : 1
base all base -> classes : 1
all base classes -> must : 1
all base classes -> and : 1
base classes must -> be : 1
classes must be -> and : 1
must be and -> all : 1
be and all -> nonstatic : 1
and all nonstatic -> data : 1
members must be -> trivial : 1
members must be -> object : 1
must be trivial -> or : 1
be trivial or -> have : 1
trivial or have -> unlike : 1
or have unlike -> pod : 1
have unlike pod -> a : 1
unlike pod a -> trivial : 1
pod a trivial -> class : 1
a trivial class -> can : 1
trivial class can -> have : 1
can have base -> private : 1
have base private -> and : 1
base private and -> protected : 1
private and protected -> and : 1
private and protected -> a : 1
and protected and -> members : 1
protected and members -> with : 1
and members with -> reference : 1
members with reference -> classes : 1
with reference classes -> are : 1
reference classes are -> important : 1
classes are important -> only : 1
are important only -> because : 1
important only because -> members : 1
only because members -> of : 1
because members of -> a : 1
a union must -> be : 1
union must be -> fundamental : 1
must be fundamental -> types : 1
be fundamental types -> are : 1
are pointers to -> and : 1
pointers to and -> arrays : 1
to and arrays -> of : 1
arrays of trivial -> is : 1
of trivial is -> like : 1
trivial is like -> a : 1
the following cannot -> have : 1
the following cannot -> take : 1
following cannot have -> base : 1
cannot have base -> cannot : 1
have base cannot -> be : 1
base cannot be -> a : 1
be a base -> cannot : 1
be a base -> class : 1
a base cannot -> have : 1
base cannot have -> virtual : 1
cannot have virtual -> cannot : 1
have virtual cannot -> have : 1
virtual cannot have -> static : 1
cannot have static -> data : 3
static data data -> members : 1
data data members -> cannot : 1
data members cannot -> be : 1
data members cannot -> have : 1
members cannot be -> of : 1
members cannot be -> static : 1
cannot be of -> its : 1
be of its -> data : 1
of its data -> members : 2
its data members -> must : 1
its data members -> in : 1
must be object -> of : 1
be object of -> union : 1
object of union -> type : 1
of union type -> has : 1
union type has -> enough : 1
type has enough -> memory : 1
has enough memory -> to : 1
enough memory to -> store : 1
enough memory to -> hold : 1
store the largest -> and : 1
largest and all -> data : 1
and all data -> members : 1
all data members -> share : 1
data members share -> that : 1
members share that -> in : 1
share that in -> other : 1
that in other -> a : 1
in other a -> union : 1
in other a -> concrete : 1
in other a -> custom : 1
other a union -> can : 1
union can have -> a : 1
union can have -> member : 1
have a value -> in : 1
value in only -> one : 1
at a it -> is : 1
it is your -> responsibility : 3
is your responsibility -> to : 5
your responsibility to -> keep : 1
your responsibility to -> ensure : 5
responsibility to keep -> track : 1
track of which -> data : 1
track of which -> function : 1
track of which -> subobjects : 1
track of which -> source : 1
track of which -> instantiations : 1
of which data -> member : 1
which data member -> is : 1
member is union -> can : 1
is union can -> be : 1
be declared without -> a : 1
declared without a -> name : 1
name in which -> case : 1
case it must -> have : 1
it must have -> only : 1
it must have -> at : 2
it must have -> an : 1
must have only -> nonstatic : 1
have only nonstatic -> data : 1
only nonstatic data -> members : 1
data members member -> no : 1
members member no -> nested : 1
member no nested -> the : 1
no nested the -> members : 1
nested the members -> of : 1
the members of -> an : 3
the members of -> the : 7
the members of -> a : 3
the members of -> p : 1
the members of -> are : 2
the members of -> queue : 1
the members of -> several : 1
the members of -> if : 1
the members of -> or : 1
members of an -> anonymous : 1
members of an -> empty : 2
of an anonymous -> union : 1
an anonymous union -> are : 1
an anonymous union -> reduces : 1
anonymous union are -> effectively : 1
union are effectively -> added : 1
are effectively added -> to : 1
effectively added to -> the : 1
which the union -> is : 1
the union is -> that : 1
union is that -> scope : 1
is that scope -> must : 1
that scope must -> not : 1
scope must not -> declare : 1
must not declare -> any : 1
must not declare -> your : 1
not declare any -> identifiers : 1
declare any identifiers -> with : 1
any identifiers with -> the : 1
identifiers with the -> same : 1
same names as -> the : 1
names as the -> in : 1
as the in -> this : 1
this an anonymous -> union : 1
anonymous union reduces -> the : 1
union reduces the -> nesting : 1
reduces the nesting -> that : 1
the nesting that -> is : 1
nesting that is -> needed : 1
that is needed -> to : 1
is needed to -> get : 1
is needed to -> support : 1
needed to get -> to : 1
to get to -> the : 1
to get to -> a : 1
get to the -> union : 1
to the union -> as : 1
the union as -> shown : 1
union as shown -> in : 1
shown in anonymous -> anonymous : 1
in anonymous anonymous -> node : 1
anonymous anonymous node -> enum : 1
anonymous node enum -> kind : 1
node enum kind -> string : 1
enum kind string -> union : 1
kind string union -> int : 1
string union int -> double : 1
union int double -> rtn : 1
int double rtn -> new : 1
double rtn new -> return : 1
rtn new return -> are : 1
new return are -> used : 1
return are used -> less : 1
are used less -> often : 1
used less often -> in : 1
less often in -> than : 3
often in than -> in : 3
in than in -> two : 1
in than in -> the : 1
in than in -> does : 1
than in two -> common : 1
in two common -> uses : 1
two common uses -> for : 1
common uses for -> in : 1
uses for in -> c : 1
for in c -> have : 1
in c have -> been : 1
c have been -> supplanted : 1
have been supplanted -> with : 1
been supplanted with -> other : 1
supplanted with other -> alternatives : 1
with other alternatives -> in : 1
other alternatives in -> can : 1
alternatives in can -> be : 1
used to peek -> inside : 1
to peek inside -> the : 1
peek inside the -> data : 1
inside the data -> representation : 1
the data representation -> for : 1
data representation for -> certain : 1
representation for certain -> but : 1
for certain but -> a : 1
certain but a -> can : 1
but a can -> do : 1
a can do -> the : 1
the same were -> sometimes : 1
same were sometimes -> used : 1
were sometimes used -> to : 1
used to save -> memory : 1
to save memory -> when : 1
save memory when -> storing : 1
memory when storing -> different : 1
when storing different -> kinds : 1
storing different kinds -> of : 1
kinds of data -> in : 1
of data in -> a : 1
data in a -> but : 1
but is safer -> and : 1
is safer and -> offers : 1
safer and offers -> more : 1
and offers more -> can : 1
offers more can -> declare : 1
more can declare -> a : 1
a that a -> class : 1
a that a -> is : 1
a that a -> function : 1
class definition that -> is : 1
definition that is -> local : 1
that is local -> to : 3
to a block -> in : 1
a block in -> a : 1
block in a -> function : 1
function a local -> class : 1
a local class -> has : 1
local class has -> several : 1
class has several -> restrictions : 1
has several restrictions -> when : 1
several restrictions when -> compared : 1
restrictions when compared -> to : 1
when compared to -> nonlocal : 1
compared to nonlocal -> local : 1
to nonlocal local -> class : 1
nonlocal local class -> cannot : 1
local class cannot -> have : 1
local class cannot -> be : 1
static data functions -> must : 1
data functions must -> be : 1
be defined inline -> in : 1
defined inline in -> the : 1
inline in the -> class : 1
the class cannot -> refer : 1
class cannot refer -> to : 1
cannot refer to -> nonstatic : 2
cannot refer to -> m : 1
cannot refer to -> a : 1
refer to nonstatic -> objects : 1
refer to nonstatic -> except : 1
to nonstatic objects -> from : 1
nonstatic objects from -> within : 1
objects from within -> a : 1
from within a -> local : 1
within a local -> but : 1
a local but -> you : 1
local but you -> can : 1
you can refer -> to : 6
can refer to -> local : 1
can refer to -> the : 1
can refer to -> data : 1
can refer to -> its : 1
can refer to -> and : 1
can refer to -> a : 2
can refer to -> individual : 1
refer to local -> static : 1
to local static -> local : 1
local static local -> and : 1
static local and -> functions : 1
local and functions -> that : 1
and functions that -> are : 2
and functions that -> compute : 1
and functions that -> support : 1
are declared local -> class : 1
declared local class -> cannot : 1
class cannot be -> used : 1
class cannot be -> listed : 1
as a template -> so : 2
as a template -> void : 1
a template so -> you : 1
a template so -> each : 1
template so you -> cannot : 1
so you cannot -> use : 3
so you cannot -> write : 1
so you cannot -> accidentally : 1
so you cannot -> copy : 1
use a local -> functor : 1
a local functor -> with : 1
local functor with -> the : 1
functor with the -> standard : 1
are not used -> local : 1
not used local -> shows : 1
used local shows -> one : 1
local shows one -> use : 1
shows one use -> of : 3
one use of -> a : 3
of a local -> local : 1
of a local -> function : 1
a local local -> take : 1
local local take -> a : 1
local take a -> string : 1
take a string -> and : 1
a string and -> break : 1
a string and -> writes : 1
a string and -> read : 2
a string and -> start : 1
a string and -> a : 6
string and break -> it : 1
and break it -> up : 1
break it up -> into : 1
it up into -> storing : 1
up into storing -> the : 1
into storing the -> tokens : 1
storing the tokens -> in : 1
the tokens in -> a : 1
tokens in a -> void : 1
in a void -> const : 1
in a void -> bidiiter : 1
in a void -> fwditer : 1
a void const -> class : 1
void const class -> tokenizer : 1
void const class -> circle : 1
const class tokenizer -> bool : 1
class tokenizer bool -> return : 1
tokenizer bool return -> const : 1
bool return const -> return : 1
const return tokenizer -> while : 1
return tokenizer while -> class : 1
tokenizer while class -> can : 1
while class can -> have : 1
have static and -> nonstatic : 1
static and nonstatic -> the : 1
static and nonstatic -> member : 1
and nonstatic the -> storage : 1
nonstatic the storage -> class : 1
storage class specifies -> a : 1
class specifies a -> static : 1
specifies a static -> data : 1
static data with -> no : 1
data with no -> storage : 1
with no storage -> a : 1
no storage a -> data : 1
storage a data -> member : 1
member is no -> other : 1
member is no -> different : 1
is no other -> storage : 1
no other storage -> class : 1
other storage class -> specifier : 1
specifier is every -> object : 1
is every object -> has : 1
every object has -> its : 1
object has its -> own : 1
its own copy -> of : 1
own copy of -> the : 1
of the nonstatic -> data : 1
the nonstatic data -> and : 1
nonstatic data and -> they : 1
data and they -> share : 1
and they share -> a : 1
they share a -> single : 1
share a single -> copy : 1
a single copy -> of : 8
single copy of -> each : 5
single copy of -> with : 1
single copy of -> and : 1
single copy of -> functions : 1
single copy of -> the : 1
copy of each -> static : 2
copy of each -> template : 2
copy of each -> third : 1
of each static -> data : 2
each static data -> a : 1
each static data -> member : 1
static data a -> data : 1
static data a -> static : 1
static data a -> class : 1
data a data -> member : 1
member can also -> be : 1
also be declared -> with : 1
be declared with -> see : 1
be declared with -> the : 5
be declared with -> no : 1
be declared with -> after : 1
declared with see -> for : 1
with see for -> more : 1
specifiers and declare -> data : 1
and declare data -> members : 1
declare data members -> as : 1
data members as -> you : 1
members as you -> would : 1
you would local -> variables : 1
would local variables -> in : 1
in a except -> you : 1
a except you -> cannot : 1
you cannot usually -> supply : 1
cannot usually supply -> nonstatic : 1
usually supply nonstatic -> data : 1
supply nonstatic data -> members : 1
data members are -> initialized : 2
data members are -> organized : 1
data members are -> called : 1
data members are -> left : 1
data members are -> at : 1
chapter for members -> are : 1
for members are -> typically : 1
members are typically -> declared : 1
are typically declared -> at : 1
typically declared at -> the : 1
declared at the -> access : 1
at the access -> see : 1
the access see -> later : 1
access see later -> in : 1
chapter for with -> no : 1
for with no -> data : 1
with no data -> members : 1
no data members -> are : 1
members are organized -> so : 1
are organized so -> that : 1
organized so that -> members : 1
organized so that -> an : 1
organized so that -> the : 1
so that members -> declared : 1
that members declared -> later : 1
members declared later -> have : 1
declared later have -> higher : 1
later have higher -> addresses : 1
have higher addresses -> than : 1
higher addresses than -> those : 1
addresses than those -> declared : 1
than those declared -> access : 1
those declared access -> specifier : 1
declared access specifier -> can : 1
access specifier can -> interrupt : 1
specifier can interrupt -> the : 1
can interrupt the -> and : 1
interrupt the and -> the : 1
and the relative -> order : 1
the relative order -> of : 13
relative order of -> members : 1
relative order of -> items : 6
relative order of -> equal : 1
relative order of -> the : 1
relative order of -> elements : 2
relative order of -> identical : 1
relative order of -> types : 1
order of members -> separated : 1
of members separated -> by : 1
members separated by -> an : 1
access specifier label -> is : 1
access specifier label -> yields : 1
specifier label is -> writing : 1
label is writing -> code : 1
is writing code -> that : 1
on the layout -> of : 1
layout of a -> class : 1
class is usually -> a : 1
a bad but -> when : 1
bad but when -> interfacing : 1
but when interfacing -> with : 1
when interfacing with -> external : 1
interfacing with external -> it : 1
with external it -> is : 1
external it is -> sometimes : 1
is sometimes see -> old : 1
sometimes see old -> earlier : 1
see old earlier -> in : 1
old earlier in -> this : 1
for more layout -> of : 1
more layout of -> subobjects : 1
layout of subobjects -> within : 1
of subobjects within -> a : 1
subobjects within a -> object : 1
object is also -> if : 1
is also if -> a : 1
if a base -> class : 3
base class appears -> more : 1
base class appears -> in : 1
class appears more -> than : 1
appears more than -> once : 2
than once in -> the : 3
than once in -> an : 1
in the inheritance -> it : 1
in the inheritance -> for : 1
in the inheritance -> base : 1
the inheritance it -> will : 1
inheritance it will -> have : 1
it will have -> multiple : 1
will have multiple -> copies : 1
have multiple copies -> of : 1
multiple copies of -> its : 1
copies of its -> data : 1
data members in -> the : 1
data members in -> a : 1
in the unless -> the : 1
the unless the -> inheritance : 1
the unless the -> program : 1
unless the inheritance -> is : 1
the inheritance is -> see : 1
inheritance is see -> later : 1
is see later -> in : 6
for more data -> members : 1
more data members -> might : 1
data members might -> have : 1
members might have -> specific : 1
might have specific -> alignment : 1
have specific alignment -> so : 1
specific alignment so -> the : 1
alignment so the -> compiler : 1
compiler can insert -> padding : 1
can insert padding -> between : 1
insert padding between -> adjacent : 1
padding between adjacent -> member : 1
between adjacent member -> declarations : 1
adjacent member declarations -> might : 1
member declarations might -> not : 1
declarations might not -> have : 1
might not have -> adjacent : 1
not have adjacent -> if : 1
have adjacent if -> a : 1
adjacent if a -> class : 1
if a class -> has : 3
if a class -> does : 1
if a class -> template : 4
class has no -> nonstatic : 1
class has no -> the : 1
class has no -> copy : 1
class has no -> behavior : 1
class has no -> special : 1
has no nonstatic -> data : 1
no nonstatic data -> the : 1
no nonstatic data -> java : 1
data the size -> of : 1
object is guaranteed -> to : 1
is guaranteed to -> be : 3
guaranteed to be -> greater : 1
guaranteed to be -> header : 1
guaranteed to be -> in : 2
guaranteed to be -> different : 1
than if the -> class : 1
class is used -> as : 2
class is used -> to : 3
class is used -> when : 1
as a base -> the : 1
a base the -> compiler : 1
compiler can optimize -> the : 1
compiler can optimize -> perhaps : 1
compiler can optimize -> away : 1
can optimize the -> subobject : 1
optimize the subobject -> so : 1
the subobject so -> it : 1
subobject so it -> has : 1
so it has -> a : 1
has a size -> of : 1
a size of -> within : 1
size of within -> the : 1
of within the -> derived : 1
within the derived -> data : 1
the derived data -> data : 1
derived data data -> nonstatic : 1
data data nonstatic -> member : 1
data nonstatic member -> can : 1
nonstatic member can -> be : 2
the type a -> mutable : 1
type a mutable -> member : 1
a mutable member -> can : 1
mutable member can -> be : 1
can be changed -> even : 1
be changed even -> when : 1
changed even when -> the : 1
even when the -> object : 1
object is members -> are : 1
is members are -> often : 1
members are often -> used : 1
used to implement -> a : 1
used to implement -> multidimensional : 1
implement a class -> that : 1
class that can -> have : 1
that can have -> objects : 1
can have objects -> that : 1
have objects that -> are : 1
that are logically -> even : 1
are logically even -> if : 1
logically even if -> they : 1
they are not -> physical : 1
they are not -> destroyed : 1
they are not -> the : 2
are not physical -> for : 1
not physical for -> a : 1
physical for a -> class : 1
class can implement -> a : 1
class can implement -> the : 1
can implement a -> private : 1
implement a private -> cache : 1
a private cache -> with : 1
private cache with -> a : 1
cache with a -> mutable : 1
with a mutable -> data : 1
a mutable data -> suppose : 1
a mutable data -> a : 1
a mutable data -> bigint : 1
mutable data suppose -> you : 1
data suppose you -> are : 1
writing a that -> implements : 1
a that implements -> very : 1
that implements very -> large : 1
implements very large -> the : 1
very large the -> member : 1
large the member -> function : 1
member function computes -> an : 1
function computes an -> approximation : 1
function computes an -> absolute : 1
computes an approximation -> of : 1
an approximation of -> the : 1
approximation of the -> value : 1
of the value -> as : 2
of the value -> of : 1
of the value -> is : 1
of the value -> it : 1
value as a -> instead : 1
value as a -> the : 1
value as a -> a : 1
value as a -> bool : 1
as a instead -> of : 1
instead of computing -> this : 1
of computing this -> value : 1
computing this value -> each : 1
this value each -> time : 1
value each time -> is : 1
each time is -> the : 1
each time is -> function : 1
time is the -> class : 1
time is the -> and : 1
the class saves -> the : 1
class saves the -> value : 1
the value after -> the : 1
value after the -> first : 1
after the first -> call : 1
the first call -> and : 1
the first call -> to : 1
first call and -> returns : 1
call and returns -> the : 1
returns the cached -> value : 1
the cached value -> for : 1
cached value for -> the : 1
for the second -> and : 3
for the second -> partial : 1
for the second -> unformatted : 1
second and subsequent -> when : 1
second and subsequent -> times : 1
second and subsequent -> dimensions : 1
second and subsequent -> pass : 2
second and subsequent -> items : 1
and subsequent when -> calling : 1
subsequent when calling -> for : 1
when calling for -> a : 1
calling for a -> you : 1
for a you -> still : 1
a you still -> want : 1
you still want -> to : 1
still want to -> be : 1
want to be -> able : 1
to be able -> to : 1
able to modify -> the : 1
modify the object -> to : 1
modify the object -> or : 1
the object to -> cache : 1
the object to -> own : 1
object to cache -> the : 1
to cache the -> so : 1
cache the so -> the : 1
so the cache -> is : 1
the cache is -> declared : 1
cache is declared -> as : 1
declared as shown -> in : 1
shown in a -> value : 1
shown in a -> number : 1
shown in a -> header : 1
shown in a -> a : 1
shown in a -> range : 1
shown in a -> logarithm : 1
shown in a -> valarray : 1
in a value -> in : 1
in a value -> is : 1
value in a -> mutable : 2
value in a -> the : 3
value in a -> range : 1
value in a -> there : 1
value in a -> sorted : 1
value in a -> fwditer : 1
value in a -> work : 1
value in a -> managed : 1
in a mutable -> data : 2
mutable data a -> value : 1
data a value -> in : 1
mutable data bigint -> double : 1
data bigint double -> const : 1
bigint double const -> if : 1
double const if -> return : 2
const if return -> double : 1
const if return -> void : 1
if return double -> mutable : 1
return double mutable -> double : 1
double mutable double -> mutable : 1
mutable double mutable -> bool : 1
double mutable bool -> nonstatic : 1
mutable bool nonstatic -> data : 1
bool nonstatic data -> member : 1
be a which -> is : 1
sequence of bits -> packed : 1
of bits packed -> into : 1
bits packed into -> an : 1
packed into an -> the : 1
into an the -> declarator : 1
an the declarator -> for : 1
the declarator for -> a : 1
declarator for a -> uses : 1
for a uses -> a : 1
a uses a -> colon : 1
uses a colon -> followed : 1
a colon followed -> by : 1
colon followed by -> an : 1
by an integral -> constant : 1
by an integral -> const : 1
an integral constant -> which : 1
integral constant which -> specifies : 1
constant which specifies -> the : 1
which specifies the -> number : 1
specifies the number -> of : 2
for a control -> shows : 1
for a control -> intel : 1
for a control -> function : 1
a control shows -> the : 1
control shows the -> layout : 1
shows the layout -> of : 1
layout of the -> control : 1
of the control -> word : 1
the control word -> for : 1
the control word -> is : 1
control word for -> an : 1
word for an -> intel : 1
for an intel -> this : 1
an intel this -> struct : 1
intel this struct -> definition : 1
this struct definition -> accurately : 1
struct definition accurately -> maps : 1
definition accurately maps -> to : 1
accurately maps to -> the : 1
maps to the -> actual : 1
the actual control -> word : 1
actual control word -> layout : 1
control word layout -> is : 1
word layout is -> but : 1
layout is but -> using : 1
is but using -> the : 1
but using the -> control : 1
using the control -> word : 1
control word is -> inherently : 1
word is inherently -> for : 1
is inherently for -> a : 1
inherently for a -> control : 1
a control intel -> fpu : 1
control intel fpu -> control : 1
intel fpu control -> struct : 1
fpu control struct -> enum : 1
control struct enum -> extended : 1
struct enum extended -> enum : 1
enum extended enum -> truncate : 1
extended enum truncate -> int : 1
enum truncate int -> reserved : 1
truncate int reserved -> int : 1
int reserved int -> reserved : 1
reserved int reserved -> bool : 1
int reserved bool -> precision : 1
reserved bool precision -> bool : 1
bool precision bool -> underflow : 1
precision bool underflow -> bool : 1
bool underflow bool -> overflow : 1
underflow bool overflow -> bool : 1
bool overflow bool -> bool : 1
overflow bool bool -> denormal : 1
bool bool denormal -> bool : 1
bool denormal bool -> a : 1
denormal bool a -> as : 1
bool a as -> you : 1
a as you -> would : 1
any other data -> but : 1
other data but -> with : 1
data but with -> the : 1
following cannot take -> the : 1
of a cannot -> bind : 1
a cannot bind -> a : 1
cannot bind a -> to : 1
bind a to -> a : 2
to a you -> bind : 1
to a you -> can : 2
to a you -> never : 1
a you bind -> a : 1
you bind a -> to : 1
compiler creates a -> temporary : 1
creates a temporary -> object : 1
object and binds -> that : 1
and binds that -> to : 1
binds that to -> the : 1
that to the -> a : 1
to the a -> bit : 1
to the a -> member : 1
to the a -> template : 1
to the a -> default : 1
to the a -> range : 2
the a bit -> field : 1
a bit field -> is : 1
bit field is -> signed : 1
field is signed -> or : 1
is signed or -> unsigned : 1
is signed or -> is : 1
signed or unsigned -> is : 1
or unsigned is -> implementation : 1
unsigned is implementation -> defined : 1
is implementation defined -> unless : 1
implementation defined unless -> you : 1
defined unless you -> explicitly : 1
unless you explicitly -> declare : 1
you explicitly declare -> it : 1
explicitly declare it -> with : 1
declare it with -> the : 1
it with the -> or : 1
it with the -> value : 1
it with the -> values : 1
or the might -> take : 1
the might take -> the : 1
might take the -> values : 1
take the values -> and : 1
the values and -> or : 1
the values and -> the : 1
the values and -> pairs : 1
values and or -> and : 1
and or and -> or : 1
or and or -> even : 1
and or even -> and : 1
or even and -> size : 1
even and size -> can : 1
and size can -> be : 1
size can be -> larger : 1
than the declared -> type : 1
case the excess -> bits : 1
the excess bits -> are : 1
excess bits are -> used : 1
bits are used -> as : 1
used as padding -> and : 1
as padding and -> are : 1
padding and are -> not : 1
the and alignment -> of : 1
and alignment of -> are : 1
alignment of are -> without : 1
of are without -> a : 1
are without a -> name : 1
a name cannot -> be : 1
be used or -> referred : 1
used or referred -> and : 1
or referred and -> is : 1
referred and is -> typically : 1
and is typically -> used : 1
used for a -> can : 1
used for a -> complete : 1
for a can -> have : 1
can have size -> which : 1
have size which -> pads : 1
size which pads -> the : 1
which pads the -> object : 1
pads the object -> so : 1
the object so -> the : 1
object so the -> next : 1
so the next -> is : 1
so the next -> read : 3
so the next -> character : 1
the next is -> aligned : 1
the next is -> and : 1
next is aligned -> on : 1
is aligned on -> a : 1
aligned on a -> natural : 1
on a natural -> memory : 1
a natural memory -> you : 1
natural memory you -> need : 1
memory you need -> to : 1
need to work -> with : 1
work with large -> or : 1
with large or -> treat : 1
large or treat -> a : 1
or treat a -> set : 1
treat a set -> of : 1
set of bits -> as : 1
of bits as -> an : 1
bits as an -> consider : 1
as an consider -> using : 1
an consider using -> the : 1
consider using the -> in : 1
consider using the -> streams : 1
using the in -> data : 1
the in data -> data : 1
in data data -> data : 1
data data data -> member : 1
data data member -> is : 1
member is similar -> to : 2
similar to an -> object : 1
an object declared -> at : 1
object declared at -> namespace : 1
namespace the class -> name : 2
class name assumes -> the : 2
name assumes the -> role : 2
assumes the role -> of : 2
the role of -> the : 2
role of the -> namespace : 2
of the namespace -> in : 1
of the namespace -> within : 1
of the namespace -> declaration : 1
namespace in other -> there : 1
in other there -> is : 1
other there is -> a : 1
data member regardless -> of : 1
member regardless of -> the : 1
number of instances -> of : 1
of instances of -> the : 1
the derived classes -> also : 1
the derived classes -> and : 1
derived classes also -> share : 1
classes also share -> the : 1
also share the -> single : 1
share the single -> static : 1
the single static -> data : 1
single static data -> in : 1
static data in -> some : 1
data in some -> static : 1
in some static -> data : 1
some static data -> members : 1
static data members -> are : 1
static data members -> and : 1
members are called -> class : 1
are called class -> lifetime : 1
called class lifetime -> of : 1
class lifetime of -> a : 1
lifetime of a -> static : 1
lifetime of a -> global : 1
to the lifetime -> of : 1
of a global -> static : 1
a global static -> see : 1
global static see -> for : 1
static see for -> classes : 1
see for classes -> and : 1
for classes and -> unions : 1
classes and unions -> cannot : 1
and unions cannot -> have : 1
unions cannot have -> static : 1
data a static -> data : 1
data member cannot -> be : 1
member cannot be -> member : 1
cannot be member -> declaration : 1
be member declaration -> in : 1
member declaration in -> the : 1
definition is just -> a : 1
just a you -> must : 1
must supply a -> definition : 1
supply a definition -> elsewhere : 1
a definition elsewhere -> in : 1
definition elsewhere in -> the : 1
the the definition -> can : 1
the definition can -> have : 1
definition can have -> an : 1
can have an -> an : 1
can have an -> initializer : 1
can have an -> argument : 1
can have an -> as : 1
have an an -> integral : 1
an an integral -> or : 1
or enumerated static -> data : 1
enumerated static data -> member : 1
member can have -> an : 1
initializer in the -> class : 1
class the initializer -> must : 1
the initializer must -> be : 1
initializer must be -> a : 1
constant integral the -> value : 1
integral the value -> of : 1
a constant elsewhere -> in : 1
constant elsewhere in -> the : 1
class the definition -> of : 1
the member must -> then : 1
member must then -> omit : 1
must then omit -> the : 1
then omit the -> this : 1
omit the this -> feature : 1
the this feature -> is : 1
this feature is -> often : 1
feature is often -> used : 1
is often used -> to : 2
is often used -> for : 1
is often used -> in : 2
is often used -> as : 1
used to define -> the : 2
used to define -> a : 1
define the maximum -> size : 1
the maximum size -> of : 1
the maximum size -> that : 1
maximum size of -> data : 1
maximum size of -> a : 1
size of data -> member : 1
of data member -> as : 1
member as shown -> in : 1
shown in static -> data : 1
in static data -> static : 1
static data static -> data : 1
data static data -> class : 1
static data class -> filename : 1
data class filename -> static : 1
class filename static -> const : 1
filename static const -> int : 1
const int static -> const : 7
const int static -> t : 1
int static const -> char : 1
int static const -> int : 4
int static const -> bool : 2
int static const -> category : 2
static const char -> static : 1
const char static -> filename : 1
const char static -> virtual : 1
char static filename -> char : 1
static filename char -> definitions : 1
filename char definitions -> for : 1
char definitions for -> the : 1
definitions for the -> static : 1
definitions for the -> classic : 1
the static data -> members : 1
the static data -> you : 1
the static data -> a : 1
members and member -> functions : 4
member functions const -> int : 1
functions const int -> const : 1
const int const -> char : 1
const int const -> extern : 1
const int const -> function : 1
const int const -> bool : 1
const int const -> const : 1
const int const -> static : 1
const int const -> int : 2
const int const -> class : 1
int const char -> filename : 1
const char filename -> implement : 1
char filename implement -> the : 1
filename implement the -> behavior : 1
implement the behavior -> of : 1
implement the behavior -> for : 1
the behavior of -> a : 3
the behavior of -> generated : 1
the behavior of -> some : 1
the behavior of -> the : 2
the behavior of -> each : 1
behavior of a -> member : 1
behavior of a -> stream : 1
behavior of a -> queue : 1
behavior of a -> stack : 1
a member functions -> can : 1
member functions can -> be : 2
member functions can -> throw : 1
be defined within -> the : 1
within the class -> definition : 2
class definition or -> you : 1
the function specifier -> and : 1
the function specifier -> that : 1
function specifier and -> either : 1
specifier and either -> the : 1
and either the -> or : 1
either the or -> not : 1
the or not -> for : 1
or not for -> more : 1
not for more -> about : 1
for more about -> function : 1
more about function -> defining : 1
about function defining -> a : 1
function defining a -> member : 1
defining a member -> function : 1
member function within -> the : 1
function within the -> class : 1
class definition declares -> the : 1
definition declares the -> function : 1
declares the function -> even : 1
declares the function -> or : 1
the function even -> if : 1
function even if -> you : 1
function even if -> optimizations : 1
use the nonstatic -> member : 1
the nonstatic member -> function : 1
can have or -> both : 1
have or both -> function : 1
or both function -> qualifiers : 1
both function qualifiers -> appear : 1
function qualifiers appear -> after : 1
qualifiers appear after -> the : 1
appear after the -> function : 2
appear after the -> declaration : 1
appear after the -> decimal : 4
the exception function -> qualifiers : 1
exception function qualifiers -> are : 1
function qualifiers are -> discussed : 1
qualifiers are discussed -> in : 1
the next and -> defining : 1
the next and -> then : 1
the next and -> the : 1
next and defining -> member : 1
and defining member -> shows : 1
and defining member -> class : 1
defining member shows -> various : 1
member shows various -> function : 1
shows various function -> declarations : 1
various function declarations -> and : 1
declarations and and -> defining : 1
declarations and and -> only : 1
and and defining -> member : 1
defining member class -> point : 1
member class point -> typedef : 1
class point typedef -> double : 1
class point typedef -> t : 1
point typedef double -> constructors : 1
typedef double constructors -> are : 1
double constructors are -> special : 1
constructors are special -> member : 1
are special member -> explicit : 1
special member explicit -> x : 1
member explicit x -> y : 1
explicit x y -> const : 1
x y const -> return : 1
y const return -> const : 1
const return const -> return : 13
const return const -> const : 1
return void void -> bool : 2
return void void -> t : 1
return void void -> container : 2
return void void -> class : 1
void void bool -> inline : 1
void void bool -> return : 1
void void bool -> bool : 1
void void bool -> element : 1
void bool inline -> static : 1
bool inline static -> point : 1
inline static point -> const : 1
static point const -> return : 1
point const return -> bool : 1
const return bool -> const : 5
return bool const -> return : 6
const return inline -> point : 1
return inline point -> return : 1
inline point return -> int : 1
point return int -> point : 1
return int point -> if : 1
int point if -> else : 1
point if else -> defining : 1
if else defining -> a : 1
else defining a -> function : 1
defining a function -> inside : 1
a function inside -> a : 1
inside a class -> the : 1
class the entire -> function : 1
entire function definition -> is : 1
function definition is -> in : 1
function definition is -> outside : 1
function definition is -> compiled : 1
definition is in -> the : 1
name lookup for -> the : 1
lookup for the -> return : 1
all parameter types -> looks : 1
parameter types looks -> first : 1
types looks first -> in : 1
looks first in -> the : 2
in the then -> in : 1
the then in -> all : 1
then in all -> base : 1
in all base -> and : 1
all base and -> then : 1
base and then -> in : 1
and then in -> the : 1
then in the -> surrounding : 1
in the surrounding -> for : 1
the surrounding for -> more : 1
surrounding for more -> information : 1
information about name -> the : 1
information about name -> resolve : 1
about name the -> function : 1
name the function -> definition : 1
the function definition -> is : 2
definition is outside -> the : 1
is outside the -> class : 1
outside the class -> the : 1
outside the class -> you : 2
outside the class -> only : 1
outside the class -> or : 1
class the function -> return : 1
the function return -> type : 2
the function return -> shows : 1
the function return -> if : 1
the function return -> value : 2
function return type -> is : 1
function return type -> and : 1
function return type -> to : 1
type is at -> namespace : 1
is at namespace -> if : 1
at namespace if -> the : 1
namespace if the -> type : 1
is a nested -> type : 1
is a nested -> class : 1
a nested type -> in : 1
a nested type -> outside : 1
nested type in -> the : 1
in the you -> must : 5
in the you -> can : 3
the you must -> fully : 1
the you must -> the : 1
the you must -> print : 1
the you must -> not : 4
you must fully -> qualify : 1
must fully qualify -> the : 1
fully qualify the -> type : 1
type the function -> name : 1
function name must -> also : 1
name must also -> be : 1
must also be -> qualified : 1
must also be -> items : 1
must also be -> unmanaged : 1
also be qualified -> so : 1
be qualified so -> the : 1
qualified so the -> compiler : 1
compiler knows which -> class : 1
knows which class -> contains : 1
which class contains -> the : 1
class contains the -> after : 1
contains the after -> the : 1
the after the -> compiler : 1
after the compiler -> has : 1
has seen the -> class : 1
seen the class -> name : 1
class name that -> qualifies : 1
name that qualifies -> the : 1
that qualifies the -> function : 1
qualifies the function -> it : 1
the function it -> enters : 1
the function it -> returns : 2
function it enters -> the : 1
it enters the -> class : 1
enters the class -> parameter : 1
the class parameter -> types : 1
class parameter types -> are : 1
types are then -> looked : 1
are then looked -> up : 1
the class address -> of : 1
class address of -> a : 1
is no different -> than : 1
no different than -> the : 1
different than the -> address : 1
than the address -> of : 1
of an ordinary -> function : 1
ordinary function or -> object : 1
or object at -> namespace : 1
object at namespace -> the : 1
namespace the address -> of : 1
of a nonstatic -> member : 2
nonstatic member that -> is : 1
member that is -> taken : 1
member that is -> a : 1
member that is -> used : 1
that is taken -> in : 1
is taken in -> a : 1
taken in a -> member : 1
function with an -> unqualified : 1
with an unqualified -> name : 1
an unqualified name -> is : 1
unqualified name is -> also : 1
also an ordinary -> the : 1
an ordinary the -> address : 1
ordinary the address -> of : 1
nonstatic member taken -> with : 1
member taken with -> a : 1
taken with a -> qualified : 1
with a qualified -> member : 1
a qualified member -> name : 1
a qualified member -> of : 1
qualified member name -> is : 1
member name is -> quite : 1
name is quite -> different : 1
is quite different -> from : 2
quite different from -> any : 1
quite different from -> a : 1
quite different from -> the : 1
different from any -> other : 1
from any other -> kind : 1
from any other -> input : 2
any other kind -> of : 1
other kind of -> the : 1
of the address -> even : 1
the address even -> has : 1
address even has -> a : 1
even has a -> special : 1
has a special -> you : 1
special you cannot -> use : 1
cannot use to -> cast : 1
cast a to -> or : 1
a to or -> from : 1
to or from -> an : 1
to or from -> a : 1
to or from -> external : 1
or from an -> ordinary : 1
or from an -> explicit : 1
from an ordinary -> data : 1
an ordinary data -> pointer : 1
ordinary data pointer -> or : 1
data pointer or -> function : 1
pointer or function -> does : 1
pointer or function -> object : 2
or function does -> not : 1
not necessarily point -> to : 1
necessarily point to -> a : 1
point to a -> particular : 1
point to a -> container : 1
point to a -> different : 1
point to a -> valid : 2
point to a -> single : 1
a particular function -> or : 1
particular function or -> think : 1
function or think -> of : 1
or think of -> it : 1
think of it -> as : 2
of it as -> a : 1
of it as -> the : 1
as a handle -> that : 1
a handle that -> keeps : 1
handle that keeps -> track : 1
that keeps track -> of : 1
keeps track of -> which : 3
keeps track of -> current : 1
keeps track of -> outer : 1
keeps track of -> the : 8
keeps track of -> a : 1
keeps track of -> formatting : 1
keeps track of -> conditional : 1
keeps track of -> an : 1
of which function -> or : 1
which function or -> data : 1
function or data -> member : 1
or data member -> you : 1
data member you -> have : 1
member you have -> selected : 1
you have selected -> but : 1
have selected but -> does : 1
selected but does -> not : 1
does not refer -> to : 1
not refer to -> a : 1
not refer to -> any : 1
not refer to -> the : 1
a specific to -> use : 1
specific to use -> a : 1
use a you -> must : 2
must use the -> or : 1
must use the -> keyword : 2
must use the -> array : 1
the or which -> requires : 1
or which requires -> an : 1
which requires an -> object : 1
requires an object -> or : 1
object or pointer -> as : 1
or pointer as -> the : 1
operand and the -> as : 1
and the as -> the : 1
the as the -> righthand : 1
the as the -> new : 2
righthand the operator -> looks : 1
the operator looks -> up : 1
operator looks up -> the : 1
up the member -> in : 1
the member in -> the : 1
the member in -> other : 1
member in the -> object : 1
member in the -> descriptions : 1
in the object -> and : 1
in the object -> that : 1
object and then -> obtains : 1
object and then -> initializes : 1
and then obtains -> the : 1
then obtains the -> actual : 1
obtains the actual -> data : 1
the actual data -> member : 1
the actual data -> if : 1
actual data member -> or : 1
member or member -> for : 1
or member for -> more : 1
information about shows -> one : 1
about shows one -> use : 1
a class base -> virtual : 1
base virtual virtual -> void : 1
base virtual virtual -> keyword : 1
void int class -> derived : 1
int class derived -> public : 1
int class derived -> rational : 1
void int base -> new : 1
int base new -> void : 1
base new void -> prints : 1
new void prints -> nonstatic : 1
void prints nonstatic -> member : 1
prints nonstatic member -> function : 1
be called only -> for : 1
called only for -> an : 1
only for an -> object : 1
object of its -> class : 1
of its class -> or : 1
of its class -> members : 1
its class or -> for : 1
class or for -> a : 1
a derived the -> object : 2
a derived the -> template : 1
a derived the -> default : 1
derived the object -> is : 2
object is implicitly -> passed : 1
is implicitly passed -> as : 1
implicitly passed as -> a : 1
passed as a -> hidden : 1
as a hidden -> parameter : 1
a hidden parameter -> to : 1
hidden parameter to -> the : 1
parameter to the -> and : 1
parameter to the -> macro : 3
function can refer -> to : 1
the object by -> using : 1
object by using -> the : 1
using the which -> represents : 1
using the which -> both : 1
the which represents -> an : 1
the which represents -> a : 1
which represents an -> pointer : 1
represents an pointer -> to : 1
an pointer to -> the : 1
to the that -> if : 1
the that if -> the : 2
the that if -> fails : 1
that if the -> object : 1
that if the -> parameter : 1
that if the -> flag : 1
object has type -> is : 1
has type is -> an : 1
rvalue of static -> type : 1
of static type -> in : 1
static type in -> a : 1
in a call -> to : 9
virtual the dynamic -> type : 1
the dynamic type -> might : 1
the dynamic type -> determines : 1
the dynamic type -> of : 2
the dynamic type -> does : 1
dynamic type might -> not : 1
type might not -> match : 1
might not match -> the : 2
match the static -> type : 1
match the static -> the : 1
type of member -> functions : 1
of member functions -> do : 1
have the next -> member : 1
the next member -> the : 1
the next member -> any : 1
next member the -> function : 1
function is qualified -> with : 1
function is qualified -> or : 1
is qualified with -> or : 1
qualified with or -> the : 1
with or the -> same : 1
with or the -> traditional : 1
with or the -> details : 1
or the same -> qualifiers : 2
or the same -> character : 1
or the same -> function : 1
the same qualifiers -> apply : 2
same qualifiers apply -> to : 2
qualifiers apply to -> within : 1
qualifiers apply to -> the : 1
apply to within -> the : 1
to within the -> member : 1
within the member -> in : 1
within the member -> is : 1
member in other -> within : 1
in other within -> a : 1
other within a -> member : 1
within a member -> function : 1
function of class -> has : 1
of class has -> type : 1
class has type -> a : 1
has type a -> cannot : 1
type a cannot -> modify : 1
a cannot modify -> its : 1
cannot modify its -> nonstatic : 1
modify its nonstatic -> data : 1
data members those -> declared : 1
members those declared -> with : 1
those declared with -> the : 1
with the a -> member : 1
the a member -> you : 1
the a member -> function : 3
member you can -> refer : 1
refer to data -> members : 2
member functions using -> just : 1
functions using just -> their : 1
using just their -> and : 1
just their and -> the : 1
up the unqualified -> names : 1
the unqualified names -> in : 1
unqualified names in -> the : 1
the in its -> ancestor : 1
the in its -> name : 2
in its ancestor -> and : 1
its ancestor and -> in : 1
ancestor and in -> namespace : 1
and in namespace -> for : 1
in namespace for -> you : 1
namespace for you -> can : 1
and ancestor classes -> by : 1
ancestor classes by -> explicitly : 1
classes by explicitly -> using : 1
by explicitly using -> to : 1
explicitly using to -> refer : 1
using to refer -> to : 1
the and using -> an : 1
and using an -> explicit : 1
using an explicit -> member : 1
using an explicit -> you : 1
an explicit member -> reference : 1
explicit member reference -> can : 1
member reference can -> reduce : 1
reference can reduce -> name : 1
can reduce name -> lookup : 1
reduce name lookup -> see : 1
name lookup see -> for : 1
lookup see for -> this : 1
see for this -> shows : 1
for this shows -> some : 1
shows some typical -> uses : 2
some typical uses -> of : 3
typical uses of -> this : 1
typical uses of -> pure : 1
typical uses of -> templates : 1
uses of this -> point : 1
of this point -> int : 1
this point int -> int : 1
void bool return -> void : 1
bool return void -> const : 1
return void const -> void : 2
return void const -> if : 1
return void const -> return : 1
return void const -> x : 1
void const void -> const : 2
void const void -> int : 1
void const void -> inputiter : 1
void const void -> class : 1
void const void -> bool : 1
void const void -> out : 1
const void const -> void : 3
const void const -> template : 3
const void int -> member : 1
void int member -> member : 1
int member member -> member : 1
member member member -> function : 1
member member function -> is : 1
member member function -> template : 1
function is like -> a : 1
function is like -> but : 5
like a function -> declared : 1
a function declared -> at : 1
function declared at -> namespace : 1
the namespace within -> the : 1
namespace within the -> scope : 1
of the you -> can : 5
of the you -> are : 2
of the you -> should : 1
the function using -> an : 1
function using an -> unqualified : 1
using an unqualified -> outside : 1
an unqualified outside -> the : 1
unqualified outside the -> class : 1
the class you -> must : 3
the class you -> cannot : 1
you must qualify -> the : 1
must qualify the -> function : 1
function name with -> the : 2
name with the -> class : 1
name with the -> which : 1
name with the -> name : 1
name with the -> base : 1
name with the -> replacement : 1
name with the -> scope : 1
with the class -> name : 1
with the class -> enumerations : 1
with the class -> template : 1
name or by -> calling : 1
or by calling -> the : 2
or by calling -> when : 1
calling the function -> as : 1
calling the function -> via : 1
as a named -> member : 1
a named member -> of : 1
named member of -> an : 1
an object in -> the : 2
an object in -> a : 1
the latter the -> object : 1
latter the object -> is : 1
is not passed -> as : 1
not passed as -> an : 1
passed as an -> implicit : 1
as an implicit -> parameter : 1
as an implicit -> conversion : 1
an implicit parameter -> it : 1
implicit parameter it -> would : 1
parameter it would -> be : 1
would be to -> a : 1
be to a -> nonstatic : 1
nonstatic member but -> serves : 1
member but serves -> only : 1
serves only to -> identify : 1
serves only to -> keep : 2
only to identify -> the : 1
to identify the -> class : 1
to identify the -> dynamic : 1
to identify the -> compiler : 1
to identify the -> category : 1
identify the class -> scope : 1
the class scope -> in : 1
the class scope -> the : 1
class scope in -> which : 1
is looked member -> functions : 1
looked member functions -> have : 1
functions have the -> following : 1
the following do -> not : 1
following do not -> have : 1
not have cannot -> be : 1
have cannot be -> cannot : 1
cannot be cannot -> have : 1
be cannot have -> or : 1
cannot have or -> cannot : 1
cannot have or -> and : 1
have or cannot -> refer : 1
or cannot refer -> to : 1
to nonstatic except -> as : 1
nonstatic except as -> members : 1
except as members -> of : 1
a specific object -> the : 1
specific object the -> or : 1
object the or -> class : 1
the or class -> cannot : 1
or class cannot -> have : 1
a static and -> nonstatic : 1
a static and -> a : 1
a static and -> the : 1
and nonstatic member -> function : 1
name and member -> shows : 1
and member shows -> some : 1
uses of static -> member : 1
of static member -> member : 1
static member member -> point : 1
member member point -> int : 1
point int static -> point : 1
int static point -> return : 1
static point return -> calls : 1
point return calls -> static : 1
return calls static -> bool : 1
calls static bool -> return : 1
static bool return -> int : 1
bool return int -> int : 1
int int and -> destructors : 1
int and destructors -> are : 1
and destructors are -> special : 1
and destructors are -> called : 1
destructors are special -> forms : 1
are special forms -> of : 1
special forms of -> a : 1
forms of a -> constructor : 1
of a constructor -> is : 1
a constructor is -> used : 1
constructor is used -> to : 1
used to initialize -> an : 1
to initialize an -> and : 1
to initialize an -> use : 1
initialize an and -> a : 1
an and a -> destructor : 1
an and a -> the : 1
an and a -> putback : 2
and a destructor -> is : 1
a destructor is -> used : 1
a destructor is -> a : 2
destructor is used -> to : 1
used to finalize -> an : 1
to finalize an -> name : 1
finalize an name -> is : 1
an name is -> the : 1
as the class -> if : 1
as the class -> templates : 1
as the class -> template : 1
the class if -> you : 2
the class if -> must : 1
you use to -> create : 1
use to create -> a : 1
create a synonym -> for : 1
class you cannot -> use : 1
class you cannot -> partially : 1
use the name -> as : 1
the name as -> the : 1
the name as -> a : 1
as the constructor -> point : 1
as the constructor -> after : 1
the constructor point -> int : 1
constructor point int -> typedef : 1
int typedef point -> int : 1
typedef point int -> ok : 1
point int ok -> int : 1
int ok int -> ok : 1
int ok int -> error : 1
ok int ok -> int : 1
ok int error -> int : 1
int error int -> constructor : 1
error int constructor -> cannot : 1
int constructor cannot -> have : 1
constructor cannot have -> a : 1
constructor cannot have -> or : 1
have a return -> and : 1
return and you -> cannot : 1
and you cannot -> return : 1
and you cannot -> use : 1
and you cannot -> call : 1
you cannot return -> a : 1
cannot return a -> that : 1
cannot return a -> a : 1
return a that -> you : 1
a that you -> must : 1
use a plain -> or : 1
use a plain -> pointer : 1
a plain or -> return : 1
plain or return -> an : 1
or return an -> expression : 1
return an expression -> of : 1
expression of type -> a : 1
of type a -> constructor : 1
of type a -> list : 1
of type a -> derived : 1
of type a -> to : 1
type a constructor -> cannot : 1
a constructor cannot -> have : 1
a constructor cannot -> be : 1
have or and -> it : 1
or and it -> cannot : 1
and it cannot -> be : 1
cannot be or -> can : 1
cannot be or -> the : 1
cannot be or -> have : 1
be or can -> initialize : 1
be or can -> be : 1
or can initialize -> data : 1
can initialize data -> members : 1
initialize data members -> with : 1
data members with -> a : 1
data members with -> the : 2
members with a -> list : 1
members with a -> derived : 1
with a list -> of : 1
list of member -> which : 1
of member which -> appear : 1
member which appear -> after : 1
which appear after -> the : 1
function header but -> before : 1
header but before -> the : 1
but before the -> function : 1
but before the -> file : 1
the function a -> colon : 1
function a colon -> separates : 1
a colon separates -> the : 1
colon separates the -> header : 1
separates the header -> from : 1
the header from -> the : 1
header from the -> each : 1
the each initializer -> names : 1
each initializer names -> a : 1
initializer names a -> data : 1
names a data -> an : 1
a data an -> immediate : 1
data an immediate -> base : 1
an immediate base -> or : 1
immediate base or -> a : 1
base or a -> virtual : 1
or a virtual -> base : 1
a virtual base -> the : 2
base the value -> of : 1
of the initializer -> follows : 1
the initializer follows -> in : 1
initializer follows in -> can : 1
follows in can -> also : 1
in can also -> use : 1
in can also -> treat : 1
also use a -> function : 2
also use a -> string : 1
use a function -> which : 1
use a function -> block : 1
function which wraps -> the : 1
which wraps the -> constructor : 1
wraps the constructor -> initializers : 1
constructor initializers as -> part : 1
initializers as part -> of : 1
information about blocks -> and : 2
about blocks and -> exception : 2
blocks and exception -> the : 1
blocks and exception -> exceptions : 1
and exception the -> syntax : 1
exception the syntax -> try : 1
the syntax try -> can : 1
syntax try can -> initialize : 1
try can initialize -> a : 1
initialize a base -> class : 1
base class by -> invoking : 1
class by invoking -> any : 1
by invoking any -> of : 1
invoking any of -> its : 1
any of its -> passing : 1
any of its -> arguments : 1
any of its -> operands : 1
any of its -> member : 1
any of its -> occurrences : 1
of its passing -> zero : 1
its passing zero -> or : 1
passing zero or -> more : 1
more expressions as -> see : 1
expressions as see -> later : 1
for more order -> in : 1
more order in -> which : 1
in which initializers -> appear : 1
which initializers appear -> in : 1
initializers appear in -> the : 1
appear in the -> initializer : 1
appear in the -> function : 1
appear in the -> actual : 1
appear in the -> book : 1
initializer list is -> the : 1
is the order -> of : 1
order of initialization -> is : 1
of initialization is -> determined : 1
initialization is determined -> by : 1
determined by their -> declarations : 1
by their declarations -> according : 1
their declarations according -> to : 1
declarations according to -> the : 1
the following base -> classes : 1
following base classes -> are : 1
classes are initialized -> in : 2
initialized in order -> of : 3
in order of -> declaration : 1
in order of -> data : 1
in order of -> the : 1
order of declaration -> in : 1
of declaration in -> a : 1
declaration in a -> traversal : 1
declaration in a -> header : 1
in a traversal -> of : 1
a traversal of -> the : 1
traversal of the -> inheritance : 1
of the inheritance -> each : 1
of the inheritance -> tree : 1
of the inheritance -> complicates : 1
the inheritance each -> virtual : 1
inheritance each virtual -> base : 1
each virtual base -> class : 4
virtual base class -> is : 1
virtual base class -> has : 2
virtual base class -> and : 2
virtual base class -> gets : 1
virtual base class -> any : 1
virtual base class -> constructor : 1
base class is -> initialized : 1
base class is -> constructed : 1
base class is -> said : 1
base class is -> you : 1
base class is -> ambiguous : 1
base class is -> used : 1
base class is -> a : 1
base class is -> not : 2
base class is -> base : 1
is initialized exactly -> once : 1
initialized exactly once -> for : 1
exactly once for -> the : 1
once for the -> direct : 1
once for the -> same : 1
for the direct -> base : 1
the direct base -> classes : 1
direct base classes -> are : 1
order of data -> members : 1
of the body -> of : 1
the constructor is -> that : 1
the constructor is -> the : 1
the constructor is -> responsible : 1
the constructor is -> so : 2
the constructor is -> template : 1
the constructor is -> a : 8
constructor is that -> each : 1
constructor is that -> the : 1
is that each -> base : 1
that each base -> class : 1
each base class -> is : 1
each base class -> no : 1
class is constructed -> according : 1
is constructed according -> to : 1
constructed according to -> the : 1
the same this -> causes : 1
same this causes -> the : 1
this causes the -> root : 1
causes the root -> of : 1
the root of -> the : 2
the root of -> all : 1
root of the -> inheritance : 1
root of the -> tree : 1
root of the -> elements : 1
the inheritance tree -> to : 1
inheritance tree to -> be : 1
tree to be -> initialized : 1
be initialized and -> the : 1
initialized and the -> class : 1
initialized and the -> named : 1
the class to -> be : 1
class to be -> initialized : 1
be initialized constructor -> can : 1
initialized constructor can -> be : 1
constructor can be -> declared : 1
constructor can be -> called : 2
constructor can be -> invoked : 1
with the an -> explicit : 1
the an explicit -> constructor : 1
an explicit constructor -> is : 1
an explicit constructor -> require : 1
an explicit constructor -> can : 1
explicit constructor is -> never : 1
constructor is never -> called : 1
is never called -> for : 1
never called for -> an : 1
called for an -> implicit : 2
called for an -> object : 1
called for an -> array : 1
for an implicit -> type : 2
implicit type but -> only : 1
type but only -> for : 1
but only for -> initialization : 1
only for initialization -> in : 1
for initialization in -> a : 1
initialization in a -> declaration : 1
declaration and for -> explicit : 1
and for explicit -> type : 1
for explicit type -> see : 1
explicit type see -> the : 1
type see the -> next : 1
see the next -> section : 2
see the next -> virtual : 1
see the next -> you : 1
the next section -> for : 2
the next section -> discusses : 1
next section for -> more : 2
section for more -> kinds : 1
section for more -> stream : 1
section for more -> an : 2
section for more -> characters : 1
for more kinds -> of : 1
more kinds of -> are : 1
kinds of are -> so : 1
of are so -> special : 1
are so special -> they : 1
so special they -> have : 1
special they have -> their : 1
they have their -> own : 1
have their own -> and : 1
their own and -> default : 1
their own and -> introduces : 1
their own and -> functions : 1
own and default -> constructor : 1
and default constructor -> can : 1
default constructor can -> be : 1
with no it -> might : 1
no it might -> be : 1
might be declared -> with : 1
declared with no -> default : 1
with no default -> arguments : 1
with no default -> behavior : 1
no default arguments -> for : 1
arguments for every -> or : 1
for every or -> an : 1
every or an -> ellipsis : 1
or an ellipsis -> as : 1
the sole last -> case : 1
sole last case -> is : 1
case is default -> constructors : 1
is default constructors -> are : 1
default constructors are -> called : 1
constructors are called -> when : 1
are called when -> you : 1
called when you -> construct : 1
when you construct -> an : 1
you construct an -> array : 1
construct an array -> of : 1
array of when -> you : 1
of when you -> omit : 1
when you omit -> the : 1
omit the initializer -> for : 1
the initializer for -> a : 1
initializer for a -> scalar : 1
initializer for a -> union : 1
for a scalar -> or : 1
for a scalar -> and : 1
a scalar or -> when : 1
a scalar or -> a : 1
a scalar or -> an : 38
scalar or when -> you : 1
or when you -> use : 1
or when you -> instantiate : 1
or when you -> explicitly : 1
or when you -> want : 1
when you use -> an : 1
when you use -> a : 1
use an empty -> initializer : 2
empty initializer in -> an : 1
empty initializer in -> a : 1
in an point -> point : 1
an point point -> new : 1
point point new -> not : 1
point new not -> to : 1
new not to -> use : 1
initializer in a -> for : 1
a for declares -> a : 1
for declares a -> function : 1
function named not -> a : 1
named not a -> see : 1
not a see -> for : 1
see for copy -> constructor : 1
for copy constructor -> can : 1
copy constructor can -> take : 1
constructor can take -> a : 1
can take a -> single : 1
can take a -> pointer : 1
take a single -> argument : 1
take a single -> a : 1
a single argument -> whose : 1
a single argument -> can : 1
single argument whose -> type : 1
argument whose type -> is : 2
class if must -> have : 1
if must have -> default : 1
must have default -> the : 1
must have default -> which : 1
default the reference -> is : 1
reference is usually -> but : 1
is usually but -> it : 1
usually but it -> does : 1
but it does -> not : 1
have to the -> copy : 1
to the copy -> constructor : 2
the copy constructor -> is : 5
the copy constructor -> for : 2
the copy constructor -> and : 2
the copy constructor -> or : 1
the copy constructor -> copies : 1
copy constructor is -> called : 2
copy constructor is -> declared : 1
copy constructor is -> private : 1
copy constructor is -> invoked : 1
constructor is called -> to : 2
is called to -> copy : 2
is called to -> change : 1
is called to -> handle : 1
is called to -> reset : 2
called to copy -> objects : 1
called to copy -> the : 1
to copy objects -> of : 1
copy objects of -> the : 1
copy objects of -> type : 1
objects of the -> class : 1
the class type -> when : 1
the class type -> is : 1
class type when -> passing : 1
type when passing -> objects : 1
when passing objects -> to : 1
passing objects to -> functions : 1
objects to functions -> and : 1
functions and when -> returning : 1
and when returning -> objects : 1
when returning objects -> from : 1
returning objects from -> following : 1
objects from following -> example : 1
from following example -> shows : 1
example shows a -> default : 1
example shows a -> simple : 1
shows a default -> and : 1
and a copy -> point : 1
and a copy -> assignment : 1
a copy point -> default : 1
copy point default -> constructor : 1
point default constructor -> copy : 1
default constructor copy -> constructor : 1
constructor copy constructor -> and : 1
copy constructor and -> copy : 1
copy constructor and -> a : 1
copy constructor and -> assignment : 3
constructor and copy -> constructors : 1
and copy constructors -> are : 1
copy constructors are -> so : 1
constructors are so -> the : 1
compiler might generate -> them : 1
might generate them -> for : 1
generate them for -> see : 1
them for see -> member : 1
for see member -> later : 1
see member later -> in : 1
member later in -> this : 1
chapter for are -> special : 1
for are special -> because : 1
are special because -> you : 1
because you never -> call : 1
because you never -> have : 1
you never call -> them : 1
never call them -> the : 1
call them the -> compiler : 1
them the compiler -> calls : 1
calls the constructor -> as : 1
the constructor as -> part : 1
the constructor as -> the : 1
constructor as part -> of : 1
of the code -> it : 1
of the code -> but : 1
the code it -> generates : 1
code it generates -> to : 1
it generates to -> create : 1
generates to create -> and : 1
to create and -> initialize : 1
create and initialize -> an : 1
and initialize an -> object : 1
initialize an object -> of : 1
of class objects -> can : 1
class objects can -> be : 1
objects can be -> created : 1
can be created -> in : 1
can be created -> only : 1
can be created -> from : 1
be created in -> several : 1
created in several -> different : 1
several different automatic -> variables : 1
different automatic variables -> and : 1
automatic variables and -> constants : 1
variables and constants -> in : 1
and constants in -> a : 1
constants in a -> function : 1
a function point -> const : 1
function point const -> point : 1
point const point -> static : 1
const point static -> objects : 1
point static objects -> that : 1
static objects that -> are : 1
are local or -> void : 1
local or void -> static : 1
or void static -> point : 1
void static point -> with : 1
static point with -> new : 1
point with new -> temporary : 1
with new temporary -> objects : 1
new temporary objects -> in : 1
objects in function -> parameters : 1
in function parameters -> and : 1
parameters and return -> return : 1
and return return -> point : 1
return return point -> x : 1
return point x -> calls : 1
point x calls -> implicit : 1
x calls implicit -> type : 1
calls implicit type -> p : 1
implicit type p -> invokes : 1
type p invokes -> then : 1
p invokes then -> constructor : 1
invokes then constructor -> int : 1
then constructor int -> each : 1
constructor int each -> memory : 1
int each memory -> is : 1
each memory is -> set : 1
memory is set -> aside : 1
is set aside -> for : 1
set aside for -> the : 1
aside for the -> then : 1
for the then -> the : 1
the then the -> constructor : 1
then the constructor -> is : 1
is the constructor -> is : 1
constructor is responsible -> for : 1
is responsible for -> the : 1
is responsible for -> filling : 1
is responsible for -> skipping : 1
responsible for the -> members : 1
for the members -> that : 1
the members that -> are : 1
the members that -> it : 1
that are listed -> in : 1
initializer list are -> initialized : 1
list are initialized -> as : 1
are initialized as -> scalar : 1
initialized as scalar -> and : 1
as scalar and -> pointer : 1
scalar and pointer -> types : 1
and pointer types -> are : 1
types are initialized -> with : 1
with their given -> objects : 1
their given objects -> are : 1
given objects are -> initialized : 1
initialized by invoking -> the : 1
by invoking the -> appropriate : 1
invoking the appropriate -> objects : 1
the appropriate objects -> that : 1
appropriate objects that -> are : 1
are not listed -> are : 1
not listed are -> initialized : 1
listed are initialized -> by : 1
their default other -> types : 1
default other types -> are : 1
other types are -> left : 1
other types are -> the : 2
types are left -> every : 1
are left every -> member : 1
left every member -> and : 1
every member and -> member : 1
member and member -> must : 1
and member must -> have : 1
member must have -> an : 1
initializer you must -> be : 1
must be willing -> to : 1
be willing to -> accept : 1
willing to accept -> the : 1
to accept the -> default : 1
accept the default -> constructor : 1
constructor for a -> within : 1
constructor for a -> string : 3
constructor for a -> pointer : 4
for a within -> the : 1
a within the -> body : 1
the you are -> free : 1
the you are -> encouraged : 1
you are free -> to : 1
are free to -> change : 1
are free to -> choose : 1
free to change -> any : 1
to change any -> many : 1
change any many -> simple : 1
any many simple -> constructors : 1
many simple constructors -> are : 1
simple constructors are -> written : 1
constructors are written -> with : 1
are written with -> empty : 1
written with empty -> point : 1
with empty point -> int : 1
empty point int -> double : 1
point int double -> x : 1
double x radius -> y : 1
x radius y -> radius : 1
radius y radius -> with : 1
y radius with -> no : 1
radius with no -> a : 1
with no a -> is : 1
with no a -> class : 1
with no a -> source : 1
with no a -> message : 1
no a is -> declared : 1
a is declared -> with : 1
with the it -> can : 1
with the it -> covers : 1
with the it -> represents : 1
never be called -> for : 1
implicit type an -> type : 1
an type conversion -> is : 1
conversion is commonly -> used : 1
is commonly used -> during : 1
commonly used during -> in : 1
used during in -> the : 1
during in the -> following : 1
following two constructors -> are : 1
two constructors are -> is : 1
constructors are is -> implicitly : 1
are is implicitly -> called : 1
is implicitly called -> to : 1
implicitly called to -> construct : 1
called to construct -> a : 1
construct a nameless -> temporary : 1
a nameless temporary -> then : 1
a nameless temporary -> object : 1
nameless temporary then -> the : 1
temporary then the -> copy : 1
then the copy -> constructor : 1
to copy the -> temporary : 1
to copy the -> following : 1
copy the temporary -> object : 1
temporary object into -> compiler : 1
object into compiler -> is : 1
into compiler is -> allowed : 1
compiler is allowed -> to : 1
is allowed to -> optimize : 1
is allowed to -> perform : 1
allowed to optimize -> away : 1
to optimize away -> the : 3
away the copy -> and : 1
the copy and -> initialize : 1
and initialize most -> modern : 1
initialize most modern -> compilers : 1
most modern compilers -> perform : 1
modern compilers perform -> this : 1
compilers perform this -> but : 1
compilers perform this -> optimization : 1
perform this but -> must : 1
this but must -> have : 1
but must have -> a : 1
a copy constructor -> even : 1
a copy constructor -> and : 2
a copy constructor -> that : 2
a copy constructor -> with : 1
a copy constructor -> when : 2
copy constructor even -> if : 1
constructor even if -> it : 1
is never complex -> double : 1
never complex double -> im : 1
complex double im -> complex : 1
double im complex -> z : 2
im complex z -> type : 1
im complex z -> error : 1
complex z type -> conversions : 1
z type conversions -> can : 1
type conversions can -> produce : 1
conversions can produce -> some : 1
can produce some -> surprising : 1
produce some surprising -> results : 1
some surprising results -> by : 1
surprising results by -> calling : 1
results by calling -> conversion : 1
calling conversion constructors -> when : 1
conversion constructors when -> you : 1
constructors when you -> least : 1
least expect in -> the : 1
expect in the -> following : 1
following a nameless -> temporary : 1
nameless temporary object -> is : 1
is created as -> and : 1
created as and -> this : 1
as and this -> temporary : 1
and this temporary -> object : 1
this temporary object -> is : 1
the parameter in -> the : 1
parameter in the -> call : 1
parameter in the -> case : 1
parameter in the -> following : 1
in the call -> to : 1
the call to -> return : 1
the call to -> the : 2
the call to -> and : 1
the call to -> that : 1
the call to -> rearranges : 1
the call to -> erase : 1
the call to -> a : 2
call to return -> z : 1
to return z -> avoid : 1
return z avoid -> constructor : 1
z avoid constructor -> declare : 1
avoid constructor declare -> a : 1
constructor declare a -> constructor : 1
declare a constructor -> with : 1
a constructor with -> the : 1
a constructor with -> a : 1
constructor with the -> specifier : 1
the specifier if -> that : 1
specifier if that -> constructor : 1
if that constructor -> can : 1
that constructor can -> be : 1
called with a -> single : 2
called with a -> null : 1
a single calls -> to : 1
single calls to -> an : 1
calls to an -> explicit : 1
to an explicit -> constructor : 1
explicit constructor require -> construction : 1
constructor require construction -> or : 1
require construction or -> an : 1
construction or an -> explicit : 1
explicit type complex -> explicit : 1
type complex explicit -> double : 1
complex explicit double -> im : 1
explicit double im -> complex : 1
complex z error -> complex : 1
z error complex -> ok : 1
error complex ok -> error : 1
complex ok error -> ok : 1
ok error ok -> exceptions : 1
error ok exceptions -> during : 1
ok exceptions during -> exceptions : 1
exceptions during exceptions -> during : 1
during exceptions during -> can : 1
exceptions during can -> also : 1
during can also -> use : 1
a function block -> as : 1
function block as -> its : 1
block as its -> function : 1
as its function -> the : 1
its function the -> keyword : 1
function the keyword -> comes : 1
the keyword comes -> before : 1
keyword comes before -> the : 1
comes before the -> if : 1
before the if -> an : 1
during the initialization -> of : 1
the initialization of -> any : 1
the initialization of -> the : 1
initialization of any -> the : 1
of any the -> corresponding : 1
any the corresponding -> blocks : 1
the corresponding blocks -> are : 1
corresponding blocks are -> examined : 1
blocks are examined -> for : 1
are examined for -> matching : 1
examined for matching -> handlers : 1
for matching handlers -> in : 1
matching handlers in -> the : 1
the usual for -> information : 1
usual for information -> about : 1
and exception exceptions -> in : 1
exception exceptions in -> shows : 1
exceptions in shows -> a : 1
in shows a -> constructor : 1
shows a constructor -> with : 1
constructor with a -> function : 1
constructor with a -> reference : 1
a function exceptions -> in : 1
function exceptions in -> array : 1
exceptions in array -> initialize : 1
in array initialize -> the : 1
array initialize the -> array : 1
initialize the array -> with : 1
the array with -> all : 1
the array with -> copies : 2
array with all -> the : 1
with all the -> items : 2
with all the -> elements : 2
all the items -> in : 9
all the items -> and : 1
all the items -> from : 4
all the items -> equivalent : 1
the items in -> the : 16
the items in -> if : 1
the items in -> this : 1
items in the -> range : 16
items in the -> requires : 1
items in the -> complexity : 2
items in the -> vector : 1
items in the -> destination : 1
items in the -> deque : 3
items in the -> invalidating : 1
items in the -> comparing : 1
items in the -> performance : 1
items in the -> priority : 1
items in the -> in : 1
items in the -> erasing : 2
items in the -> the : 3
the range if -> an : 1
the range if -> there : 2
range if an -> exception : 1
thrown while copying -> the : 1
while copying the -> be : 1
copying the be -> sure : 1
the be sure -> to : 1
sure to clean -> up : 1
to clean up -> by : 1
to clean up -> and : 1
clean up by -> destroying : 1
up by destroying -> the : 1
by destroying the -> items : 1
destroying the items -> that : 1
the items that -> have : 1
items that have -> been : 1
have been added -> so : 1
been added so -> initer : 1
added so initer -> try : 1
so initer try -> for : 1
initer try for -> iter : 1
try for iter -> catch : 1
for iter catch -> of : 1
iter catch of -> whether : 1
catch of whether -> the : 1
of whether the -> function : 1
whether the function -> body : 1
function body is -> a : 1
function body is -> in : 1
body is a -> plain : 1
is a plain -> compound : 1
is a plain -> not : 1
is a plain -> by : 1
a plain compound -> statement : 1
plain compound statement -> or : 1
function the compiler -> keeps : 1
function the compiler -> collects : 1
function the compiler -> tries : 1
the compiler keeps -> track : 2
compiler keeps track -> of : 2
of which subobjects -> and : 1
which subobjects and -> which : 1
subobjects and which -> members : 1
and which members -> have : 1
which members have -> been : 1
members have been -> if : 1
have been if -> an : 1
been if an -> exception : 1
during the destructors -> of : 1
the destructors of -> only : 1
destructors of only -> those : 1
of only those -> objects : 1
only those objects -> that : 1
those objects that -> have : 1
have been fully -> constructed : 1
been fully constructed -> are : 1
fully constructed are -> the : 1
constructed are the -> object : 1
are the object -> is : 1
object is being -> created : 2
is being created -> as : 1
is being created -> with : 1
being created as -> part : 1
created as part -> of : 1
of a and -> an : 1
of a and -> t : 1
of a and -> the : 9
of a and -> a : 1
a and an -> exception : 1
a and an -> everyday : 2
and an exception -> is : 2
is the memory -> is : 1
memory is deallocated -> by : 1
is deallocated by -> calling : 1
deallocated by calling -> the : 1
calling the appropriate -> deallocation : 1
the appropriate deallocation -> if : 1
appropriate deallocation if -> the : 1
deallocation if the -> object : 1
deallocation if the -> allocation : 1
being created with -> a : 1
created with a -> placement : 1
with a placement -> the : 1
a placement the -> corresponding : 1
corresponding placement operator -> is : 1
placement operator is -> the : 1
takes the same -> additional : 1
additional parameters as -> the : 1
parameters as the -> placement : 1
parameters as the -> class : 1
the placement if -> no : 1
placement if no -> matching : 1
no matching placement -> is : 1
matching placement is -> no : 1
placement is no -> deallocation : 1
is no deallocation -> takes : 1
no deallocation takes -> for : 1
deallocation takes for -> more : 1
takes for more -> information : 1
information on and -> shows : 1
on and shows -> a : 1
and shows a -> class : 1
and shows a -> simple : 1
and shows a -> trivial : 1
shows a class -> that : 1
class that allocates -> two : 1
that allocates two -> dynamic : 1
allocates two dynamic -> arrays : 1
two dynamic arrays -> in : 1
dynamic arrays in -> its : 1
arrays in its -> suppose : 1
in its suppose -> the : 1
its suppose the -> first : 1
suppose the first -> allocation : 1
the first allocation -> fails : 1
first allocation fails -> in : 1
allocation fails in -> that : 1
fails in that -> the : 1
knows that has -> not : 1
that has not -> been : 2
has not been -> initialized : 1
has not been -> passed : 1
not been initialized -> and : 1
been initialized and -> so : 1
initialized and so -> does : 1
and so does -> not : 1
so does not -> call : 1
does not call -> the : 1
does not call -> so : 1
not call the -> nor : 1
not call the -> operators : 1
call the nor -> does : 1
the nor does -> the : 1
nor does the -> compiler : 1
does the compiler -> call : 1
the compiler call -> the : 1
compiler call the -> destructor : 1
call the destructor -> for : 1
for the the -> allocation : 1
for the the -> classes : 1
for the the -> value : 12
for the the -> members : 1
for the the -> macro : 1
for the the -> last : 1
the the allocation -> for : 1
the the allocation -> and : 1
the allocation for -> succeeds : 1
allocation for succeeds -> and : 1
for succeeds and -> fails : 1
succeeds and fails -> for : 1
and fails for -> the : 1
fails for the -> compiler : 1
destructor for to -> free : 1
for to free -> the : 1
to free the -> memory : 3
to free the -> which : 1
free the memory -> that : 4
free the memory -> for : 1
free the memory -> without : 1
the memory that -> had : 1
the memory that -> must : 1
the memory that -> points : 8
the memory that -> you : 1
the memory that -> contains : 2
the memory that -> was : 1
memory that had -> been : 1
that had been -> allocated : 1
that had been -> inserted : 1
had been allocated -> note : 1
been allocated note -> that : 1
allocated note that -> if : 1
note that if -> were : 1
note that if -> is : 1
that if were -> not : 1
if were not -> the : 1
were not the -> class : 1
were not the -> results : 1
were not the -> box : 1
not the class -> would : 1
the class would -> have : 1
class would have -> a : 1
would have a -> memory : 1
have a memory -> leak : 1
a memory leak -> because : 1
memory leak because -> the : 1
leak because the -> compiler : 1
compiler would not -> be : 2
able to free -> the : 1
memory for have -> silly : 1
for have silly -> finalizes : 1
have silly finalizes -> an : 1
silly finalizes an -> object : 1
finalizes an object -> when : 1
an object when -> the : 1
object when the -> object : 1
object is finalization -> frees : 1
is finalization frees -> releases : 1
finalization frees releases -> resources : 1
frees releases resources -> as : 1
releases resources as -> open : 1
resources as open -> and : 1
as open and -> so : 1
open and so -> a : 1
so a destructor -> is : 1
destructor is a -> special : 1
destructor is a -> followed : 1
destructor is a -> string : 1
a special member -> it : 1
special member it -> has : 1
member it has -> no : 1
it has no -> return : 1
it has no -> operator : 1
has no return -> no : 1
no return no -> and : 1
return no and -> cannot : 1
no and cannot -> return : 1
and cannot return -> a : 1
return a a -> destructor : 1
a a destructor -> can : 1
a destructor can -> be : 1
a destructor can -> a : 1
destructor can be -> it : 1
can be it -> can : 2
be it can -> be : 1
be it can -> point : 1
can be but -> it : 1
can be but -> what : 1
be but it -> cannot : 1
but it cannot -> be : 1
be or the -> name : 1
be or the -> header : 1
be or the -> value : 1
of a destructor -> is : 1
is a followed -> by : 1
a followed by -> the : 1
a followed by -> a : 2
by the class -> a : 1
by the class -> and : 1
by the class -> itself : 1
by the class -> derived : 1
by the class -> refer : 2
by the class -> which : 1
the class a -> class : 1
the class a -> definition : 1
the class a -> template : 1
the class a -> keys : 1
class has only -> one : 1
only one destructor -> it : 1
one destructor it -> may : 1
destructor it may -> have : 1
it may have -> several : 1
may have several -> as : 1
have several as -> constructors : 1
several as constructors -> automatically : 1
as constructors automatically -> construct : 1
constructors automatically construct -> a : 1
automatically construct a -> destructor : 1
construct a destructor -> automatically : 1
a destructor automatically -> calls : 1
destructor automatically calls -> destructors : 1
automatically calls destructors -> for : 1
calls destructors for -> nonstatic : 1
destructors for nonstatic -> data : 1
for nonstatic data -> direct : 1
nonstatic data direct -> base : 1
data direct base -> and : 1
direct base and -> virtual : 1
direct base and -> once : 1
direct base and -> so : 1
base and virtual -> base : 1
virtual base classes -> after : 1
virtual base classes -> are : 1
virtual base classes -> so : 1
base classes after -> the : 1
classes after the -> destructor : 1
after the destructor -> body : 1
the destructor body -> member : 1
destructor body member -> and : 1
body member and -> destructors : 1
member and destructors -> are : 1
destructors are called -> in : 1
called in reverse -> order : 1
in reverse order -> of : 1
in reverse order -> in : 1
in reverse order -> from : 1
of their if -> you : 1
their if you -> do : 1
do not write -> a : 1
write a the -> compiler : 1
write a the -> increment : 1
compiler does so -> for : 1
does so for -> the : 1
so for the -> next : 1
for the next -> member : 1
for the next -> few : 1
for the next -> section : 1
for the next -> is : 1
for the next -> assuming : 1
for the next -> delimiter : 1
for the next -> token : 1
for the next -> input : 1
next member any -> class : 1
member any class -> that : 1
any class that -> has : 2
any class that -> uses : 1
that has virtual -> functions : 1
that has virtual -> base : 1
has virtual functions -> should : 1
virtual functions should -> have : 1
functions should have -> a : 1
should have a -> virtual : 1
should have a -> corresponding : 1
a virtual as -> explained : 1
virtual as explained -> in : 1
explained in later -> in : 1
this can call -> a : 1
can call a -> destructor : 1
call a destructor -> but : 1
a destructor but -> there : 1
destructor but there -> is : 1
to do the -> compiler : 1
to do the -> only : 1
to do the -> actual : 1
do the compiler -> calls : 1
compiler calls destructors -> automatically : 1
calls destructors automatically -> when : 1
destructors automatically when -> objects : 1
automatically when objects -> are : 1
when objects are -> dynamically : 1
objects are dynamically -> allocated : 1
are dynamically allocated -> objects : 1
dynamically allocated objects -> are : 2
allocated objects are -> destroyed : 1
allocated objects are -> prime : 1
are destroyed by -> static : 1
destroyed by static -> objects : 1
by static objects -> are : 1
destroyed when a -> program : 1
when a program -> other : 1
when a program -> every : 1
a program other -> named : 1
program other named -> objects : 1
other named objects -> are : 1
named objects are -> destroyed : 1
are destroyed automatically -> when : 1
are destroyed automatically -> at : 1
destroyed automatically when -> they : 1
automatically when they -> go : 1
automatically when they -> are : 1
when they go -> out : 1
they go out -> of : 1
go out of -> unnamed : 1
out of unnamed -> objects : 1
of unnamed objects -> are : 1
unnamed objects are -> destroyed : 1
destroyed automatically at -> the : 1
automatically at the -> end : 1
the expression that -> created : 1
expression that created -> you : 1
that created you -> write : 1
created you write -> a : 1
you write a -> make : 1
you write a -> new : 1
you write a -> program : 1
you write a -> to : 1
write a make -> sure : 1
a make sure -> that : 2
a make sure -> caller : 1
make sure that -> it : 1
make sure that -> the : 2
sure that it -> never : 1
that it never -> throws : 1
it never throws -> an : 1
never throws an -> when : 1
never throws an -> a : 1
throws an when -> an : 1
an when an -> exception : 1
when an exception -> causes : 1
when an exception -> is : 2
an exception causes -> the : 1
exception causes the -> stack : 1
causes the stack -> to : 1
the stack to -> be : 1
stack to be -> unwound : 1
to be unwound -> objects : 1
be unwound objects -> are : 1
unwound objects are -> automatically : 1
objects are automatically -> if : 1
are automatically if -> a : 1
automatically if a -> throws : 1
if a throws -> an : 1
a throws an -> exception : 1
an exception during -> stack : 1
an exception during -> the : 1
exception during stack -> the : 1
during stack the -> program : 1
stack the program -> terminates : 1
the program terminates -> in : 1
the program terminates -> the : 1
the program terminates -> a : 1
program terminates in -> a : 1
terminates in a -> shows : 1
how a simple -> destructor : 1
a simple destructor -> is : 1
simple destructor is -> a : 1
is a string -> char : 1
is a string -> of : 2
is a string -> that : 1
is a string -> is : 1
a string char -> c : 1
string char c -> const : 1
char c const -> const : 1
c const const -> return : 1
const const return -> const : 1
const const return -> virtual : 2
const const return -> int : 1
const const return -> explicit : 2
const const return -> void : 3
const const return -> return : 1
const const return -> a : 1
const return member -> member : 1
return member member -> compiler : 1
member member compiler -> implicitly : 1
member compiler implicitly -> declares : 1
compiler implicitly declares -> and : 1
compiler implicitly declares -> a : 3
implicitly declares and -> defines : 1
declares and defines -> default : 1
and defines default -> and : 1
defines default and -> copy : 1
default and copy -> the : 1
and copy the -> copy : 1
and copy the -> in : 1
copy the copy -> assignment : 1
copy assignment and -> the : 1
copy assignment and -> useful : 1
assignment and the -> destructor : 1
the destructor in -> certain : 1
destructor in certain -> all : 1
in certain all -> these : 1
certain all these -> implicit : 1
all these implicit -> functions : 1
these implicit functions -> are : 1
implicit functions are -> this : 1
implicit functions are -> often : 1
functions are this -> section : 1
section describes what -> each : 1
section describes what -> the : 1
describes what each -> function : 1
what each function -> does : 1
each function does -> and : 1
function does and -> the : 1
does and the -> circumstances : 1
and the circumstances -> under : 1
the circumstances under -> which : 1
circumstances under which -> the : 1
under which the -> function : 1
function is implicitly -> declared : 1
is implicitly declared -> and : 1
is implicitly declared -> point : 1
implicitly declared and -> member : 1
declared and member -> explicitly : 1
and member explicitly -> shows : 1
member explicitly shows -> how : 1
explicitly shows how -> each : 1
shows how each -> implicit : 1
how each implicit -> member : 1
each implicit member -> function : 1
implicit member function -> is : 1
function is member -> these : 1
is member these -> classes : 1
member these classes -> show : 1
these classes show -> explicitly : 1
classes show explicitly -> what : 1
show explicitly what -> the : 1
explicitly what the -> implicit : 1
what the implicit -> member : 1
the implicit member -> functions : 1
implicit member functions -> would : 1
member functions would -> class : 1
functions would class -> base : 1
would class base -> return : 1
class base return -> int : 1
base return int -> class : 1
int class demo -> default : 1
int class demo -> int : 1
class demo default -> constructs : 1
demo default constructs -> three : 1
default constructs three -> base : 1
constructs three base -> objects : 1
three base objects -> copies : 1
three base objects -> in : 1
three base objects -> base : 1
base objects copies -> three : 1
objects copies three -> base : 1
copies three base -> objects : 1
base objects in -> return : 1
objects in return -> default : 1
in return default -> destructs : 1
return default destructs -> three : 1
default destructs three -> base : 1
destructs three base -> objects : 1
base objects base -> class : 1
objects base class -> derived : 1
public base constructs -> copies : 1
base constructs copies -> return : 1
constructs copies return -> calls : 1
copies return calls -> destructs : 1
return calls destructs -> demo : 1
calls destructs demo -> objects : 1
destructs demo objects -> demo : 1
demo objects demo -> classes : 1
objects demo classes -> whose : 1
demo classes whose -> data : 1
classes whose data -> members : 1
whose data members -> have : 1
data members have -> or : 1
members have or -> enumeration : 1
have or enumeration -> the : 1
enumeration the implicit -> functions : 1
the implicit functions -> are : 1
functions are often -> the : 1
are often the -> most : 1
often the most -> common : 1
the most common -> case : 1
the most common -> filename : 1
the most common -> bases : 2
the most common -> use : 2
most common case -> in : 1
common case in -> which : 1
in which you -> must : 1
in which you -> have : 1
in which you -> need : 1
you must implement -> these : 1
must implement these -> functions : 1
implement these functions -> explicitly : 1
these functions explicitly -> is : 1
functions explicitly is -> when : 1
explicitly is when -> an : 1
is when an -> manages : 1
when an manages -> pointers : 1
an manages pointers -> to : 1
manages pointers to -> memory : 1
pointers to memory -> that : 1
to memory that -> the : 1
memory that the -> object : 1
that the object -> in : 1
that the object -> cannot : 1
that the object -> will : 1
that the object -> or : 1
this a constructor -> or : 1
a constructor or -> copy : 1
constructor or copy -> assignment : 1
or copy assignment -> operator : 1
copy assignment operator -> must : 1
copy assignment operator -> or : 1
copy assignment operator -> that : 3
copy assignment operator -> with : 1
copy assignment operator -> also : 1
copy assignment operator -> takes : 1
copy assignment operator -> calls : 1
copy assignment operator -> for : 2
copy assignment operator -> are : 4
assignment operator must -> not : 1
assignment operator must -> be : 2
operator must not -> blindly : 1
must not blindly -> copy : 1
not blindly copy -> a : 1
blindly copy a -> member : 1
copy a member -> that : 1
a member that -> is : 1
is a which -> results : 1
is a which -> can : 2
a which results -> in : 1
which results in -> two : 1
which results in -> an : 1
results in two -> pointers : 1
in two pointers -> to : 1
two pointers to -> the : 1
same you should -> allocate : 1
you should allocate -> a : 1
should allocate a -> new : 1
allocate a new -> pointer : 1
allocate a new -> link : 1
allocate a new -> display : 1
a new pointer -> and : 1
new pointer and -> copy : 1
pointer and copy -> the : 1
copy the in -> such : 1
the in such -> you : 1
in such you -> will : 1
such you will -> often : 1
you will often -> find : 1
will often find -> yourself : 1
often find yourself -> providing : 1
find yourself providing -> the : 1
yourself providing the -> copy : 1
providing the copy -> copy : 1
the copy copy -> assignment : 1
copy copy assignment -> and : 1
assignment and useful -> guideline : 1
and useful guideline -> is : 1
useful guideline is -> that : 2
guideline is that -> if : 1
guideline is that -> a : 1
is that if -> you : 1
is that if -> is : 1
is that if -> consists : 1
is that if -> any : 1
is that if -> there : 1
that if you -> write : 1
if you write -> one : 1
if you write -> your : 2
you write one -> of : 1
write one of -> the : 1
the three special -> functions : 1
three special functions -> copy : 1
special functions copy -> assignment : 1
functions copy assignment -> or : 1
assignment or you -> will : 1
or you will -> probably : 1
will probably need -> to : 2
probably need to -> write : 1
probably need to -> rely : 1
probably need to -> understand : 1
need to write -> all : 1
need to write -> your : 1
need to write -> some : 1
need to write -> separate : 1
to write all -> you : 1
write all you -> want : 1
all you want -> to : 1
want to store -> objects : 1
to store objects -> in : 1
store objects in -> a : 2
in a standard -> you : 2
in a standard -> return : 1
in a standard -> another : 1
in a standard -> but : 1
a standard you -> must : 1
a standard you -> get : 1
a standard you -> probably : 1
standard you must -> make : 1
you must make -> sure : 2
must make sure -> it : 2
make sure it -> has : 2
make sure it -> is : 1
make sure it -> takes : 1
make sure it -> correctly : 1
sure it has -> a : 1
sure it has -> room : 1
has a copy -> constructor : 3
has a copy -> assignment : 2
has a copy -> of : 1
constructor and a -> copy : 1
a copy assignment -> operator : 4
assignment operator or -> see : 1
operator or see -> and : 1
or see and -> for : 1
the standard default -> default : 1
standard default default -> compiler : 1
default default compiler -> implicitly : 1
default compiler implicitly -> declares : 1
implicitly declares a -> constructor : 2
implicitly declares a -> assignment : 1
declares a constructor -> if : 2
a constructor if -> a : 2
constructor if a -> class : 2
has no the -> implicit : 1
has no the -> name : 1
has no the -> exact : 1
has no the -> result : 1
no the implicit -> default : 1
the implicit default -> constructor : 1
implicit default constructor -> calls : 1
default constructor calls -> the : 1
constructor calls the -> default : 1
constructor calls the -> copy : 1
calls the default -> constructor : 1
constructor for all -> base : 1
for all base -> classes : 1
classes and for -> all : 1
classes and for -> static : 1
and for all -> nonstatic : 1
and for all -> in : 3
and for all -> all : 1
and for all -> other : 1
and for all -> for : 1
and for all -> also : 1
and for all -> valid : 1
for all nonstatic -> data : 1
members of class -> other : 1
of class other -> nonstatic : 1
class other nonstatic -> data : 1
other nonstatic data -> members : 1
members are left -> in : 1
are left in -> other : 1
left in other -> the : 1
other the behavior -> is : 1
as if you -> wrote : 1
if you wrote -> the : 1
you wrote the -> default : 1
wrote the default -> constructor : 1
default constructor with -> no : 1
constructor with no -> initializers : 1
with no initializers -> and : 1
no initializers and -> an : 1
initializers and an -> empty : 1
and an empty -> function : 1
an empty function -> copy : 1
an empty function -> class : 1
empty function copy -> copy : 1
function copy copy -> compiler : 1
copy copy compiler -> implicitly : 1
copy compiler implicitly -> declares : 1
has no copy -> if : 1
no copy if -> every : 1
copy if every -> direct : 1
if every direct -> base : 2
every direct base -> class : 2
direct base class -> and : 5
base class and -> virtual : 2
base class and -> each : 2
base class and -> then : 5
base class and -> one : 1
class and virtual -> base : 2
base class has -> a : 4
copy constructor that -> takes : 2
copy constructor that -> does : 1
constructor that takes -> a : 2
constructor that takes -> two : 1
a reference and -> every : 1
a reference and -> if : 1
a reference and -> an : 1
reference and every -> nonstatic : 1
and every nonstatic -> data : 1
every nonstatic data -> member : 2
data member has -> a : 2
member has a -> copy : 2
copy constructor with -> a : 1
with a reference -> the : 2
with a reference -> to : 1
reference the implicit -> copy : 4
the implicit copy -> constructor : 3
the implicit copy -> assignment : 3
implicit copy constructor -> also : 1
implicit copy constructor -> takes : 1
implicit copy constructor -> so : 1
implicit copy constructor -> calls : 1
copy constructor also -> takes : 1
constructor also takes -> a : 1
also takes a -> reference : 2
copy constructor takes -> a : 1
constructor takes a -> plain : 1
takes a plain -> reference : 2
a plain reference -> other : 2
plain reference other -> the : 2
reference other the -> compiler : 2
other the compiler -> tries : 2
tries to declare -> the : 2
declare the implicit -> copy : 2
copy constructor so -> it : 1
constructor so it -> takes : 1
so it takes -> a : 2
so it takes -> two : 1
it takes a -> reference : 2
it takes a -> single : 2
a reference if -> it : 2
reference if it -> cannot : 2
if it cannot -> because : 2
it cannot because -> the : 2
cannot because the -> implicit : 2
because the implicit -> function : 2
the implicit function -> would : 2
implicit function would -> end : 2
function would end -> up : 2
would end up -> calling : 2
end up calling -> an : 2
up calling an -> inherited : 2
calling an inherited -> or : 2
an inherited or -> member : 2
inherited or member -> copy : 2
or member copy -> constructor : 1
or member copy -> assignment : 1
member copy constructor -> that : 1
does not take -> a : 2
not take a -> the : 2
take a the -> compiler : 2
the compiler gives -> up : 2
compiler gives up -> and : 2
gives up and -> declares : 2
up and declares -> a : 2
and declares a -> copy : 2
declares a copy -> constructor : 1
declares a copy -> assignment : 1
takes a implicit -> copy : 2
a implicit copy -> constructor : 1
a implicit copy -> assignment : 1
copy constructor calls -> the : 1
calls the copy -> constructor : 2
calls the copy -> assignment : 2
copy constructor for -> each : 2
for each direct -> base : 2
each direct base -> class : 2
class and each -> virtual : 2
and each virtual -> base : 3
class and then -> performs : 2
class and then -> store : 1
class and then -> calls : 3
and then performs -> a : 2
and then performs -> using : 1
then performs a -> copy : 1
then performs a -> assignment : 1
performs a copy -> of : 1
a copy of -> all : 3
a copy of -> the : 10
a copy of -> obj : 1
a copy of -> note : 1
a copy of -> made : 1
a copy of -> decrements : 1
a copy of -> except : 1
a copy of -> because : 1
a copy of -> using : 1
a copy of -> and : 1
a copy of -> if : 1
a copy of -> with : 1
a copy of -> then : 1
copy of all -> nonstatic : 1
copy of all -> the : 2
of all nonstatic -> data : 2
nonstatic data it -> calls : 2
data it calls -> the : 2
it calls the -> copy : 2
it calls the -> second : 1
it calls the -> global : 1
it calls the -> handler : 1
it calls the -> next : 1
for each member -> of : 2
for each member -> function : 1
each member of -> class : 2
class type and -> copies : 1
class type and -> assigns : 1
type and copies -> the : 1
and copies the -> values : 1
and copies the -> first : 1
and copies the -> allocator : 3
copies the values -> for : 1
the values for -> members : 2
the values for -> which : 1
values for members -> of : 2
for members of -> nonclass : 2
for members of -> pointer : 1
members of nonclass -> copy : 1
members of nonclass -> compiler : 1
of nonclass copy -> assignment : 1
nonclass copy assignment -> copy : 1
copy assignment copy -> assignment : 1
assignment copy assignment -> compiler : 1
copy assignment compiler -> implicitly : 1
assignment compiler implicitly -> declares : 1
declares a assignment -> operator : 1
a assignment operator -> if : 1
assignment operator if -> a : 1
operator if a -> class : 1
a class does -> not : 1
not have if -> every : 1
have if every -> direct : 1
assignment operator that -> takes : 2
assignment operator that -> does : 1
assignment operator that -> performs : 3
operator that takes -> a : 2
reference and if -> every : 1
and if every -> nonstatic : 1
if every nonstatic -> data : 1
assignment operator with -> a : 1
operator with a -> reference : 1
implicit copy assignment -> operator : 3
implicit copy assignment -> so : 1
assignment operator also -> takes : 1
operator also takes -> a : 1
assignment operator takes -> a : 1
operator takes a -> plain : 1
operator takes a -> value : 1
copy assignment so -> it : 1
assignment so it -> takes : 1
member copy assignment -> operator : 1
operator that does -> not : 1
assignment operator calls -> the : 1
operator calls the -> copy : 1
assignment operator for -> each : 2
assignment operator for -> any : 1
operator for each -> direct : 1
operator for each -> member : 1
performs a assignment -> of : 1
a assignment of -> all : 1
assignment of all -> nonstatic : 1
type and assigns -> the : 1
and assigns the -> values : 1
and assigns the -> return : 1
assigns the values -> for : 1
of nonclass compiler -> declares : 1
nonclass compiler declares -> an : 1
compiler declares an -> implicit : 1
declares an implicit -> if : 1
an implicit if -> the : 1
an implicit if -> control : 1
implicit if the -> programmer : 1
if the programmer -> does : 1
if the programmer -> made : 1
the programmer does -> not : 1
programmer does not -> provide : 1
programmer does not -> need : 1
does not provide -> if : 1
does not provide -> iterators : 1
does not provide -> the : 1
does not provide -> any : 1
not provide if -> a : 1
provide if a -> base : 1
has a the -> implicit : 1
has a the -> function : 1
has a the -> from : 1
has a the -> c : 1
a the implicit -> destructor : 1
the implicit destructor -> is : 2
implicit destructor is -> also : 1
implicit destructor is -> like : 1
destructor is also -> the : 1
also the implicit -> destructor : 1
destructor is like -> a : 1
like a destructor -> with : 1
a destructor with -> an : 1
destructor with an -> empty : 1
empty function class -> can : 1
function class can -> inherit : 1
class can inherit -> from : 1
can inherit from -> zero : 1
inherit from zero -> or : 1
from zero or -> more : 1
more a class -> with : 1
a class with -> at : 1
a class with -> all : 1
a class with -> an : 1
least one base -> class : 1
one base class -> is : 1
one base class -> must : 1
class is said -> to : 1
is said to -> be : 1
is said to -> have : 3
said to be -> a : 1
be a a -> class : 1
be a a -> specialization : 1
be a a -> static : 1
be a a -> or : 1
a a class -> inherits : 1
a class inherits -> all : 1
class inherits all -> the : 1
inherits all the -> data : 1
functions of all -> of : 1
of all of -> its : 1
of its base -> classes : 1
of its base -> static : 1
classes and all -> of : 1
and all of -> their : 1
and all of -> its : 2
all of their -> base : 1
of their base -> and : 1
their base and -> so : 1
base and so -> a : 1
base and so -> see : 1
so a immediate -> base : 1
a immediate base -> classes : 1
classes are called -> base : 1
are called base -> their : 1
called base their -> base : 1
base their base -> classes : 1
classes are base -> the : 1
are base the -> complete : 1
base the complete -> set : 1
the complete set -> of : 1
complete set of -> direct : 1
set of direct -> and : 1
of direct and -> indirect : 1
direct and indirect -> base : 1
and indirect base -> classes : 1
indirect base classes -> is : 1
base classes is -> sometimes : 1
base classes is -> in : 1
classes is sometimes -> called : 1
called the class -> can : 1
called the class -> is : 1
the class can -> derive : 1
the class can -> and : 1
class can derive -> directly : 1
class can derive -> from : 1
can derive directly -> from : 1
derive directly from -> any : 1
directly from any -> number : 1
from any number -> of : 1
of base the -> names : 1
base the names -> follow : 1
the names follow -> a : 1
names follow a -> colon : 1
follow a colon -> and : 1
a colon and -> are : 1
a colon and -> a : 1
colon and are -> separated : 1
and are separated -> by : 1
separated by each -> class : 1
by each class -> name : 1
each class name -> can : 1
class name can -> be : 1
can be prefaced -> by : 1
be prefaced by -> an : 1
prefaced by an -> access : 1
access specifier later -> in : 1
this the same -> class : 1
same class cannot -> be : 1
cannot be listed -> more : 1
be listed more -> than : 1
listed more than -> once : 1
than once as -> a : 2
than once as -> an : 1
once as a -> direct : 4
as a direct -> base : 4
a direct base -> but : 2
a direct base -> and : 1
a direct base -> class : 1
direct base but -> it : 1
direct base but -> a : 1
base but it -> can : 1
can appear more -> than : 1
appear more than -> once : 1
the inheritance for -> in : 1
inheritance for in -> the : 1
following code has -> twice : 1
code has twice -> in : 1
has twice in -> its : 1
twice in its -> inheritance : 1
in its inheritance -> once : 1
its inheritance once -> as : 1
inheritance once as -> a : 1
base and once -> as : 1
and once as -> an : 1
once as an -> indirect : 2
as an indirect -> base : 3
an indirect base -> class : 1
an indirect base -> or : 1
an indirect base -> some : 1
indirect base class -> class : 1
base class class -> public : 1
class class public -> class : 1
class class public -> public : 1
class class public -> typedef : 1
class class public -> explicit : 4
class public class -> class : 1
class public class -> so : 1
public class class -> public : 1
class public public -> class : 1
class public public -> constructors : 1
class public public -> explicit : 2
class public public -> typedef : 4
public public class -> protected : 1
public class protected -> private : 1
class protected private -> derived : 1
protected private derived -> class : 1
private derived class -> can : 1
class can access -> the : 1
can access the -> members : 1
can access the -> private : 1
access the members -> that : 1
access the members -> of : 1
members that it -> inherits : 1
that it inherits -> from : 1
it inherits from -> an : 1
inherits from an -> ancestor : 1
inherits from an -> abstract : 1
from an ancestor -> provided : 1
an ancestor provided -> the : 1
ancestor provided the -> members : 1
provided the members -> are : 1
are not later -> in : 1
not later in -> this : 1
chapter for to -> look : 1
for to look -> up : 1
look up a -> name : 1
up a name -> in : 1
name in class -> the : 1
in class the -> compiler : 1
compiler looks first -> in : 1
the class then -> in : 1
class then in -> direct : 1
then in direct -> base : 1
in direct base -> then : 1
direct base then -> in : 1
base then in -> their : 1
then in their -> direct : 1
in their direct -> base : 1
their direct base -> and : 1
about name resolve -> overloaded : 1
name resolve overloaded -> the : 1
resolve overloaded the -> compiler : 1
compiler finds the -> first : 1
finds the first -> class : 1
finds the first -> subsequence : 2
first class with -> a : 1
class with a -> matching : 1
with a matching -> name : 1
matching name and -> then : 1
name and then -> searches : 1
and then searches -> for : 1
then searches for -> overloads : 1
then searches for -> the : 1
searches for overloads -> in : 1
for overloads in -> that : 1
overloads in that -> lists : 1
in that lists -> the : 1
that lists the -> complete : 1
lists the complete -> rules : 1
the complete rules -> for : 1
complete rules for -> overload : 1
for overload object -> with : 1
overload object with -> a : 1
a type can -> usually : 1
type can usually -> be : 1
can usually be -> converted : 1
usually be converted -> to : 1
a base in -> which : 1
a base in -> that : 1
base in which -> case : 1
case the object -> is : 1
is the members -> of : 1
derived class are -> and : 1
class are and -> only : 1
are and only -> the : 1
and only the -> base : 1
only the base -> class : 1
base class members -> file : 1
class members file -> struct : 1
members file struct -> directory : 1
file struct directory -> file : 1
struct directory file -> directory : 1
directory file directory -> file : 1
file directory file -> f : 1
directory file f -> only : 1
file f only -> is : 1
f only is -> copied : 1
only is copied -> to : 1
copied to entries -> are : 1
to entries are -> usually : 1
entries are usually -> arises : 1
are usually arises -> from : 1
usually arises from -> a : 1
arises from a -> programming : 1
from a programming -> you : 1
a programming you -> should : 1
programming you should -> probably : 1
should probably use -> a : 1
probably use a -> pointer : 1
use a pointer -> or : 1
use a pointer -> as : 2
reference to cast -> from : 1
to cast from -> a : 1
base in that -> the : 1
that the identity -> and : 1
the identity and -> members : 1
identity and members -> are : 1
and members are -> this : 1
and members are -> and : 2
members are this -> distinction : 1
are this distinction -> is : 1
distinction is crucial -> when : 1
is crucial when -> using : 1
crucial when using -> as : 1
when using as -> described : 1
using as described -> in : 1
next for dp -> new : 1
for dp new -> fp : 1
dp new fp -> keeps : 1
new fp keeps -> entries : 1
fp keeps entries -> and : 1
keeps entries and -> identity : 1
entries and identity -> as : 1
and identity as -> a : 1
identity as a -> directory : 1
as a directory -> you : 1
a directory you -> can : 1
directory you can -> see : 1
see in the -> previous : 1
the previous the -> compiler : 1
the previous the -> macro : 1
previous the compiler -> implicitly : 1
compiler implicitly converts -> a : 1
implicitly converts a -> derived : 1
converts a derived -> class : 1
a base you -> can : 1
base you can -> also : 1
also use an -> explicit : 1
use an explicit -> cast : 1
use an explicit -> for : 1
an explicit cast -> but : 1
explicit cast but -> if : 1
cast but if -> the : 1
cast but if -> you : 1
but if the -> base : 1
but if the -> type : 1
class is you -> must : 1
is you must -> use : 1
must use not -> see : 1
use not see -> for : 1
not see for -> more : 1
not see for -> details : 1
information about cast -> a : 1
about cast a -> base : 1
cast a base -> class : 1
class is ambiguous -> later : 1
is ambiguous later -> in : 1
ambiguous later in -> this : 1
in this or -> inaccessible : 1
this or inaccessible -> later : 1
or inaccessible later -> in : 1
inaccessible later in -> this : 1
this you cannot -> slice : 1
this you cannot -> rely : 1
you cannot slice -> a : 1
cannot slice a -> derived : 1
slice a derived -> class : 1
class to the -> base : 1
the base nor -> can : 1
base nor can -> you : 1
can you cast -> a : 1
you cast a -> pointer : 1
to the inaccessible -> base : 1
the inaccessible base -> class : 1
base class cast -> allows : 1
class cast allows -> it : 1
cast allows it -> but : 1
allows it but -> such : 1
it but such -> use : 1
but such use -> is : 1
such use is -> not : 1
use is not -> nonstatic : 1
is not nonstatic -> member : 1
not nonstatic member -> function : 1
with the function -> and : 1
with the function -> template : 1
with the function -> in : 1
function and is -> then : 1
function and is -> initialized : 1
and is then -> known : 1
is then known -> as : 1
then known as -> a : 1
known as a -> a : 1
known as a -> function : 1
a a virtual -> function : 1
a virtual function -> can : 2
a virtual function -> cannot : 1
a virtual function -> at : 1
a virtual function -> is : 1
a virtual function -> should : 1
a virtual function -> to : 1
virtual function can -> be : 3
be in a -> derived : 2
in a derived -> to : 1
in a derived -> class : 3
in a derived -> a : 1
in a derived -> the : 1
a derived to -> override : 1
a derived to -> an : 1
derived to override -> a : 1
to override a -> declare : 1
override a declare -> it : 1
a declare it -> in : 1
declare it in -> a : 1
it in a -> derived : 1
it in a -> function : 1
derived class with -> the : 1
class with the -> same : 1
name and parameter -> the : 1
and parameter the -> return : 1
parameter the return -> type : 1
type is usually -> the : 1
is usually the -> same : 1
is usually the -> elements : 1
is usually the -> simplest : 2
usually the same -> but : 2
same but does -> not : 1
to be identical -> described : 1
be identical described -> in : 1
identical described in -> the : 1
the next return -> the : 1
next return the -> specifier : 1
return the specifier -> is : 1
specifier is optional -> in : 1
is optional in -> the : 1
optional in the -> derived : 1
optional in the -> input : 1
derived class but -> is : 1
class but is -> recommended : 1
but is recommended -> as : 1
is recommended as -> a : 1
recommended as a -> hint : 1
as a hint -> to : 1
the human a -> constructor : 1
human a constructor -> cannot : 1
cannot be but -> a : 1
cannot be but -> what : 1
cannot be but -> must : 1
be but a -> destructor : 1
but a destructor -> can : 1
destructor can a -> virtual : 1
can a virtual -> function : 1
virtual function cannot -> be : 1
cannot be class -> that : 1
be class that -> has : 1
that has at -> least : 3
one virtual function -> is : 1
one virtual function -> has : 1
one virtual function -> should : 1
virtual function is -> this : 1
virtual function is -> compiled : 1
is this form -> of : 1
this form of -> polymorphism : 1
form of polymorphism -> is : 1
of polymorphism is -> more : 1
polymorphism is more -> precisely : 1
is more precisely -> known : 1
more precisely known -> as : 1
precisely known as -> also : 1
known as also -> supports : 1
as also supports -> with : 1
also supports with -> see : 1
supports with see -> most : 1
with see most -> programmers : 1
see most programmers -> mean : 1
most programmers mean -> type : 1
programmers mean type -> polymorphism : 1
mean type polymorphism -> when : 1
type polymorphism when -> they : 1
polymorphism when they -> talk : 1
when they talk -> about : 1
they talk about -> calling : 1
talk about calling -> you : 1
about calling you -> must : 1
calling you must -> distinguish : 1
you must distinguish -> between : 1
must distinguish between -> the : 1
between the declared -> type : 1
the or reference -> and : 1
or reference and -> the : 1
reference and the -> actual : 1
and the actual -> type : 3
and the actual -> behavior : 1
and the actual -> size : 1
actual type at -> the : 1
type at the -> declared : 1
at the declared -> type : 1
type is often -> called : 1
often called the -> static : 1
often called the -> class : 1
called the static -> and : 1
the static and -> the : 1
static and the -> actual : 1
static and the -> constructor : 1
is the dynamic -> for : 1
the dynamic for -> base : 1
dynamic for base -> virtual : 1
for base virtual -> void : 1
virtual void struct -> derived : 1
virtual void struct -> hashable : 1
struct derived base -> virtual : 2
struct derived base -> void : 1
struct derived base -> sz : 1
struct derived base -> b : 1
derived base virtual -> void : 2
virtual void overload -> b : 1
void overload b -> new : 1
overload b new -> static : 1
b new static -> type : 1
new static type -> of : 1
type of b -> is : 1
of b is -> dynamic : 1
b is dynamic -> type : 1
is dynamic type -> is : 1
dynamic type is -> calls : 1
type is calls -> any : 1
is calls any -> function : 1
calls any function -> is : 1
any function is -> the : 1
uses the static -> type : 1
static type to -> pick : 1
static type to -> it : 1
type to pick -> a : 1
to pick a -> function : 1
to pick a -> or : 1
pick a function -> if : 1
a function if -> the : 1
function if the -> function : 1
function if the -> member : 1
generates a virtual -> function : 1
virtual function at -> the : 1
function at the -> dynamic : 1
at the dynamic -> type : 1
dynamic type determines -> which : 1
type determines which -> function : 1
determines which function -> is : 1
which function is -> actually : 1
function is actually -> the : 1
is actually the -> function : 1
actually the function -> in : 1
class that overrides -> the : 1
that overrides the -> virtual : 1
overrides the virtual -> this : 1
the virtual this -> is : 1
the virtual this -> situation : 1
virtual this is -> known : 1
this is known -> as : 5
a function virtual -> functions : 1
function virtual functions -> are : 1
virtual functions are -> most : 1
virtual functions are -> those : 2
are most commonly -> implemented : 1
most commonly implemented -> using : 1
commonly implemented using -> function : 1
implemented using function -> or : 1
using function or -> each : 1
function or each -> class : 1
function or each -> template : 1
or each class -> that : 1
each class that -> declares : 1
class that declares -> at : 1
class that declares -> global : 1
class that declares -> the : 8
that declares at -> least : 1
declares at least -> one : 2
virtual function has -> a : 1
has a hidden -> data : 1
a hidden data -> member : 1
hidden data member -> the : 1
data member the -> member : 1
member the member -> points : 1
member the member -> function : 4
the member points -> to : 1
member points to -> an : 1
points to an -> array : 1
points to an -> item : 1
points to an -> element : 3
points to an -> empty : 2
points to an -> invalid : 2
points to an -> object : 1
of function every -> derived : 1
function every derived -> class : 1
every derived class -> has : 1
every derived class -> to : 1
the every instance -> of : 1
every instance of -> a : 1
every instance of -> the : 1
a class shares -> a : 1
class shares a -> common : 1
shares a common -> each : 1
a common each -> entry : 1
common each entry -> in : 1
each entry in -> the : 1
entry in the -> table : 1
in the table -> points : 1
the table points -> to : 1
table points to -> a : 1
a base or -> if : 1
base or if -> the : 1
is the entry -> points : 1
the entry points -> to : 1
entry points to -> the : 1
points to the -> derived : 1
points to the -> first : 36
points to the -> item : 2
points to the -> newly : 2
points to the -> iterator : 1
points to the -> position : 5
points to the -> start : 9
points to the -> head : 1
points to the -> median : 1
points to the -> matching : 2
points to the -> largest : 1
points to the -> smallest : 1
points to the -> second : 2
points to the -> last : 10
points to the -> multibyte : 2
points to the -> terminating : 3
points to the -> shift : 5
points to the -> stream : 1
points to the -> adapted : 1
points to the -> value : 2
points to the -> next : 1
points to the -> character : 1
to the derived -> class : 1
to the derived -> rational : 1
derived class any -> new : 1
class any new -> virtual : 1
any new virtual -> functions : 1
new virtual functions -> that : 1
virtual functions that -> the : 1
virtual functions that -> following : 1
functions that the -> derived : 1
that the derived -> class : 1
derived class declares -> are : 1
class declares are -> added : 1
declares are added -> at : 1
are added at -> the : 1
added at the -> end : 1
the an object -> is : 1
an object is -> the : 2
an object is -> to : 1
an object is -> it : 1
an object is -> returned : 2
the compiler sets -> its : 1
compiler sets its -> pointer : 1
sets its pointer -> to : 1
its pointer to -> the : 1
to the vtable -> for : 1
the vtable for -> its : 1
vtable for its -> dynamic : 1
for its dynamic -> a : 1
its dynamic a -> call : 1
dynamic a call -> to : 1
function is compiled -> into : 1
is compiled into -> an : 1
compiled into an -> index : 1
into an index -> into : 1
an index into -> the : 1
index into the -> table : 1
into the table -> and : 1
the table and -> into : 1
table and into -> a : 1
and into a -> call : 1
into a call -> to : 1
the function at -> that : 1
the function at -> compile : 1
function at that -> note : 1
at that note -> that : 1
that note that -> the : 1
operator can use -> the : 1
same mechanism to -> identify : 1
mechanism to identify -> the : 1
identify the dynamic -> type : 1
dynamic type of -> the : 2
the inheritance complicates -> matters : 1
inheritance complicates matters -> yet : 1
complicates matters yet -> the : 1
matters yet the -> basic : 1
yet the basic -> concept : 1
the basic concept -> remains : 1
basic concept remains -> the : 1
concept remains the -> indirection : 1
remains the indirection -> through : 1
the indirection through -> a : 1
indirection through a -> table : 1
through a table -> of : 1
a table of -> do : 1
table of do -> not : 1
of do not -> have : 1
have to use -> but : 1
have to use -> the : 1
have to use -> extensions : 1
to use but -> they : 1
to use but -> this : 1
use but they -> are : 1
they are used -> so : 1
they are used -> in : 2
they are used -> to : 1
are used so -> the : 1
used so the -> term : 1
used so the -> compiler : 1
so the term -> has : 1
the term has -> entered : 1
term has entered -> the : 1
has entered the -> common : 1
entered the common -> parlance : 1
the common parlance -> of : 1
common parlance of -> many : 1
parlance of many -> dynamic : 1
of many dynamic -> type : 1
many dynamic type -> can : 1
dynamic type can -> differ : 1
type can differ -> from : 1
can differ from -> its : 1
differ from its -> static : 1
from its static -> type : 1
its static type -> only : 1
its static type -> is : 1
static type only -> if : 1
type only if -> the : 1
object is accessed -> via : 1
is accessed via -> a : 1
accessed via a -> pointer : 1
via a pointer -> or : 1
via a pointer -> inside : 1
via a pointer -> as : 4
pointer or to -> call : 1
or to call -> a : 1
call a virtual -> you : 1
call a virtual -> member : 1
a virtual you -> typically : 1
virtual you typically -> access : 1
you typically access -> the : 1
typically access the -> target : 1
access the target -> object : 1
target object via -> a : 1
object via a -> pointer : 1
a pointer inside -> a : 1
pointer inside a -> member : 1
inside a member -> if : 1
member if you -> call : 1
if you call -> a : 2
if you call -> this : 1
if you call -> before : 1
you call a -> virtual : 1
you call a -> pure : 1
a virtual member -> function : 1
virtual member function -> using : 1
member function using -> its : 1
function using its -> unqualified : 1
using its unqualified -> that : 1
its unqualified that -> is : 1
unqualified that is -> the : 1
same as calling -> the : 2
same as calling -> value : 1
as calling the -> function : 1
as calling the -> macro : 1
the function via -> so : 1
function via so -> the : 1
via so the -> function : 1
called if a -> nonreference : 1
called if a -> expression : 1
if a nonreference -> object : 1
a nonreference object -> calls : 1
nonreference object calls -> a : 1
object calls a -> virtual : 1
calls a virtual -> the : 1
virtual the compiler -> knows : 1
that the static -> type : 1
static type and -> dynamic : 1
type and dynamic -> type : 1
and dynamic type -> always : 1
dynamic type always -> so : 1
type always so -> it : 1
always so it -> can : 1
so it can -> save : 1
so it can -> be : 5
it can save -> itself : 1
can save itself -> the : 1
save itself the -> lookup : 1
itself the lookup -> time : 1
the lookup time -> and : 1
lookup time and -> call : 1
time and call -> the : 1
and call the -> function : 1
in a nonvirtual -> and : 1
a nonvirtual and -> using : 1
nonvirtual and using -> virtual : 1
and using virtual -> shows : 1
and using virtual -> expr : 1
using virtual shows -> a : 1
virtual shows a -> variety : 1
variety of virtual -> functions : 1
of virtual functions -> for : 1
virtual functions for -> implementing : 1
functions for implementing -> a : 1
for implementing a -> simple : 1
implementing a simple -> a : 1
a simple a -> parser : 1
simple a parser -> constructs : 1
a parser constructs -> a : 1
parser constructs a -> parse : 1
constructs a parse -> tree : 1
a parse tree -> of : 1
parse tree of -> in : 1
tree of in -> which : 1
which each node -> can : 1
which each node -> is : 1
each node can -> be : 1
node can be -> a : 1
be a literal -> value : 1
a literal value -> or : 2
literal value or -> an : 1
literal value or -> add : 1
value or an -> the : 1
an the operator -> nodes : 1
an the operator -> advances : 1
an the operator -> is : 1
the operator nodes -> point : 1
operator nodes point -> to : 1
nodes point to -> operand : 1
point to operand -> and : 1
to operand and -> an : 1
operand and an -> operand : 1
and an operand -> in : 1
an operand in -> can : 1
operand in can -> be : 1
be any kind -> of : 1
of the virtual -> function : 1
of the virtual -> base : 1
the virtual function -> evaluates : 1
virtual function evaluates -> the : 1
function evaluates the -> expression : 1
evaluates the expression -> in : 1
expression in the -> parse : 1
in the parse -> returning : 1
the parse returning -> a : 1
parse returning a -> each : 1
returning a each -> kind : 1
a each kind -> of : 1
kind of node -> knows : 1
of node knows -> how : 1
node knows how -> to : 1
knows how to -> evaluate : 1
how to evaluate -> for : 1
to evaluate for -> a : 1
evaluate for a -> node : 1
for a node -> can : 1
a node can -> return : 1
node can return -> a : 1
can return a -> literal : 1
return a literal -> value : 1
value or add -> the : 1
or add the -> values : 1
add the values -> that : 1
the values that -> result : 1
the values that -> two : 1
the values that -> the : 1
the values that -> are : 1
values that result -> from : 1
that result from -> evaluating : 1
result from evaluating -> two : 1
from evaluating two -> and : 1
evaluating two and -> using : 1
two and using -> virtual : 1
using virtual expr -> virtual : 1
virtual expr virtual -> virtual : 1
expr virtual virtual -> double : 1
virtual virtual double -> const : 1
virtual double const -> const : 1
virtual double const -> return : 2
double const const -> return : 1
const return virtual -> void : 4
const return virtual -> double : 1
const return virtual -> const : 1
return virtual void -> const : 4
virtual void const -> virtual : 1
virtual void const -> out : 3
virtual void const -> if : 1
virtual void const -> class : 1
virtual void const -> void : 1
void const virtual -> int : 1
const virtual int -> const : 3
const virtual int -> int : 1
virtual int const -> typename : 1
virtual int const -> return : 2
virtual int const -> virtual : 2
virtual int const -> const : 2
virtual int const -> template : 1
int const typename -> static : 1
const typename static -> cout : 1
typename static cout -> prints : 1
static cout prints -> any : 1
cout prints any -> kind : 1
prints any kind -> of : 1
kind of expression -> because : 1
of expression because -> is : 1
expression because is -> typename : 1
because is typename -> const : 1
is typename const -> return : 1
typename const return -> class : 1
typename const return -> of : 1
typename const return -> multiply : 1
typename const return -> let : 1
typename const return -> you : 1
typename const return -> function : 1
typename const return -> t : 1
const return class -> literal : 1
const return class -> typedef : 1
return class literal -> public : 1
class literal public -> expr : 1
literal public expr -> virtual : 1
public expr virtual -> double : 2
expr virtual double -> const : 2
double const return -> virtual : 2
double const return -> left : 1
double const return -> void : 1
double const return -> double : 1
void const out -> virtual : 1
void const out -> double : 1
void const out -> const : 1
void const out -> for : 1
const out virtual -> int : 1
out virtual int -> const : 1
const return double -> abstract : 1
const return double -> class : 1
return double abstract -> base : 1
double abstract base -> class : 1
abstract base class -> for : 1
class for all -> binary : 1
class for all -> standard : 1
class for all -> exception : 1
class for all -> the : 2
class for all -> stream : 1
class for all -> a : 1
for all binary -> operators : 1
all binary operators -> class : 1
binary operators class -> binop : 1
operators class binop -> public : 1
class binop public -> expr : 1
binop public expr -> virtual : 1
void const if -> out : 1
void const if -> start : 1
const if out -> else : 1
if out else -> out : 2
out else out -> out : 1
out else out -> reminder : 1
else out out -> if : 1
out out if -> out : 1
out if out -> else : 1
else out reminder -> that : 1
out reminder that -> derived : 1
reminder that derived -> classes : 1
that derived classes -> must : 1
derived classes must -> override : 2
classes must override -> precedence : 1
classes must override -> but : 1
must override precedence -> virtual : 1
override precedence virtual -> int : 1
precedence virtual int -> const : 1
int const virtual -> double : 1
int const virtual -> bool : 1
int const virtual -> void : 1
const virtual double -> double : 1
virtual double double -> const : 2
double double const -> virtual : 1
double double const -> return : 1
double const virtual -> const : 1
const virtual const -> const : 3
const virtual const -> virtual : 2
virtual const const -> no : 1
virtual const const -> return : 2
virtual const const -> object : 1
virtual const const -> class : 2
virtual const const -> virtual : 4
virtual const const -> const : 2
virtual const const -> char : 1
virtual const const -> with : 1
virtual const const -> operator : 2
const const no -> copying : 1
const no copying -> allowed : 1
no copying allowed -> avoid : 1
copying allowed avoid -> messing : 1
allowed avoid messing -> up : 1
avoid messing up -> void : 1
messing up void -> example : 1
up void example -> binary : 1
void example binary -> class : 1
example binary class -> plus : 1
binary class plus -> public : 1
class plus public -> binop : 1
plus public binop -> virtual : 1
public binop virtual -> int : 1
binop virtual int -> const : 1
return virtual double -> double : 1
const return left -> virtual : 1
return left virtual -> const : 1
left virtual const -> const : 1
return int you -> do : 1
int you do -> not : 1
do not want -> to : 2
not want to -> take : 1
not want to -> bother : 1
want to take -> advantage : 1
to take advantage -> of : 2
take advantage of -> the : 2
take advantage of -> nonstandard : 1
take advantage of -> computation : 1
advantage of the -> virtualness : 1
advantage of the -> stream : 1
advantage of the -> generality : 1
advantage of the -> approach : 1
advantage of the -> fact : 1
of the virtualness -> of : 1
the virtualness of -> a : 1
virtualness of a -> you : 1
of a you -> may : 1
of a you -> should : 1
of a you -> can : 2
a you may -> want : 1
you may want -> to : 2
may want to -> call : 1
may want to -> simplify : 1
function as it -> is : 1
it is defined -> in : 2
a specific base -> in : 1
specific base in -> such : 1
base in such -> a : 1
in such a -> qualify : 1
such a qualify -> the : 1
with the which -> tells : 1
with the which -> is : 2
the which tells -> the : 2
the which tells -> an : 8
which tells the -> compiler : 1
which tells the -> stream : 1
compiler to call -> that : 1
to call that -> definition : 1
call that definition -> of : 1
that definition of -> the : 1
of the calls -> calls : 1
the calls calls -> class : 1
calls calls class -> that : 1
calls class that -> has : 1
virtual function should -> also : 2
function should also -> have : 2
should also have -> a : 2
a virtual if -> a : 1
virtual if a -> expression : 1
if a expression -> deletes : 1
if a expression -> throws : 1
a expression deletes -> a : 1
expression deletes a -> polymorphic : 1
deletes a polymorphic -> pointer : 1
a polymorphic pointer -> which : 1
polymorphic pointer which -> the : 1
pointer which the -> dynamic : 1
pointer which the -> pointer : 1
which the dynamic -> type : 1
dynamic type does -> not : 1
static the static -> class : 1
virtual the behavior -> is : 2
behavior is return -> return : 1
is return return -> return : 1
return return type -> of : 1
of an overriding -> virtual : 1
an overriding virtual -> function : 1
overriding virtual function -> must : 1
same as that -> of : 3
same as that -> printed : 1
base or it -> must : 1
or it must -> be : 1
or it must -> have : 1
a derived a -> covariant : 1
derived a covariant -> return : 1
a covariant return -> type : 1
covariant return type -> is : 1
class type that -> derives : 1
derives from the -> return : 1
derives from the -> original : 1
from the return -> type : 1
from the return -> value : 1
return type used -> in : 1
type used in -> the : 2
the base note -> that : 1
base note that -> the : 1
return type classes -> do : 1
type classes do -> not : 1
classes do not -> necessarily : 1
classes do not -> get : 1
do not necessarily -> have : 1
necessarily have to -> match : 1
have to match -> the : 1
match the classes -> that : 1
the classes that -> contain : 1
classes that contain -> the : 1
contain the but -> they : 1
the but they -> often : 1
but they often -> the : 1
they often the -> return : 1
often the return -> type : 1
return type in -> the : 1
can have additional -> or : 1
can have additional -> type : 1
have additional or -> qualifiers : 1
additional or qualifiers -> that : 1
or qualifiers that -> are : 1
qualifiers that are -> not : 1
are not present -> in : 1
not present in -> the : 4
present in the -> return : 1
present in the -> complexity : 1
present in the -> sorted : 3
present in the -> range : 1
present in the -> first : 2
present in the -> it : 1
present in the -> if : 2
the return a -> function : 1
return a function -> the : 1
function the actual -> return : 1
the actual return -> value : 1
actual return value -> is : 1
is implicitly cast -> to : 1
implicitly cast to -> the : 1
to the static -> type : 1
to the static -> subsequent : 2
static type used -> in : 1
function return shows -> one : 1
return shows one -> typical : 1
shows one typical -> use : 1
one typical use -> of : 1
use of covariant -> return : 1
of covariant return -> shape : 1
covariant return shape -> virtual : 1
return shape virtual -> struct : 1
shape virtual struct -> circle : 1
virtual struct circle -> shape : 1
struct circle shape -> virtual : 1
circle shape virtual -> return : 1
shape virtual return -> new : 2
virtual return new -> double : 2
return new double -> const : 1
return new double -> point : 1
new double const -> return : 1
return void double -> point : 1
return void double -> double : 1
void double point -> struct : 1
double point struct -> square : 1
point struct square -> shape : 1
struct square shape -> virtual : 1
struct square shape -> void : 1
square shape virtual -> return : 1
new double point -> circle : 1
double point circle -> result : 1
point circle result -> return : 1
circle result return -> int : 1
result return int -> s : 1
return int s -> t : 1
int s t -> delete : 1
s t delete -> delete : 1
t delete delete -> virtual : 1
delete delete virtual -> virtual : 1
delete virtual virtual -> function : 1
virtual virtual function -> can : 1
the specifier after -> the : 1
specifier after the -> function : 1
is a virtual -> called : 1
a virtual called -> an : 1
virtual called an -> the : 1
called an the -> syntax : 1
an the syntax -> for : 1
an the syntax -> summaries : 1
a pure specifier -> requires : 1
pure specifier requires -> the : 1
specifier requires the -> symbols : 1
requires the symbols -> you : 1
the symbols you -> cannot : 1
symbols you cannot -> use : 1
cannot use an -> expression : 1
use an expression -> that : 1
expression that evaluates -> to : 1
that evaluates to -> though : 1
evaluates to though -> a : 1
to though a -> function : 1
though a function -> is : 1
is declared you -> can : 1
declared you can -> still : 1
you can still -> provide : 1
can still provide -> a : 1
still provide a -> function : 1
provide a function -> definition : 1
a function definition -> not : 1
function definition not -> in : 1
definition not in -> the : 1
class a definition -> for : 1
a definition for -> a : 1
a definition for -> each : 1
definition for a -> pure : 1
definition for a -> function : 1
virtual function allows -> a : 1
function allows a -> derived : 1
allows a derived -> class : 1
class to call -> the : 1
call the inherited -> function : 1
the inherited function -> without : 1
inherited function without -> forcing : 1
function without forcing -> the : 1
without forcing the -> programmer : 1
forcing the programmer -> to : 1
the programmer to -> know : 1
programmer to know -> which : 1
to know which -> functions : 1
know which functions -> are : 1
which functions are -> a : 1
are a pure -> destructor : 1
a pure destructor -> must : 1
pure destructor must -> have : 1
destructor must have -> a : 1
have a definition -> because : 1
a definition because -> a : 1
definition because a -> destructor : 1
because a destructor -> always : 1
a destructor always -> calls : 1
destructor always calls -> the : 1
calls the derived -> class : 1
class can override -> a : 1
can override a -> pure : 1
override a pure -> virtual : 1
virtual function and -> provide : 1
function and provide -> a : 1
and provide a -> body : 1
and provide a -> completely : 1
provide a body -> for : 1
a body for -> override : 1
body for override -> it : 1
for override it -> and : 1
override it and -> declare : 1
it and declare -> it : 1
and declare it -> pure : 1
declare it pure -> or : 1
it pure or -> simply : 1
pure or simply -> inherit : 1
or simply inherit -> the : 1
simply inherit the -> pure : 1
inherit the pure -> see : 1
the pure see -> the : 1
pure see the -> next : 1
the next virtual -> shows : 1
next virtual shows -> some : 1
virtual shows some -> typical : 1
uses of pure -> virtual : 1
of pure virtual -> a : 1
pure virtual a -> base : 1
virtual a base -> defines : 1
a base defines -> several : 1
base defines several -> pure : 1
defines several pure -> virtual : 1
several pure virtual -> functions : 1
pure virtual functions -> and : 2
pure virtual functions -> all : 1
virtual functions and -> the : 1
virtual functions and -> no : 1
virtual functions and -> virtual : 1
functions and the -> class : 1
has no behavior -> of : 1
no behavior of -> its : 1
behavior of its -> so : 1
of its so -> its : 1
its so its -> functions : 1
so its functions -> are : 1
its functions are -> pure : 1
functions are pure -> virtual : 1
are pure virtual -> shape : 1
pure virtual shape -> virtual : 1
virtual shape virtual -> virtual : 1
void virtual const -> virtual : 1
void virtual const -> return : 2
virtual const virtual -> const : 1
virtual const virtual -> void : 1
virtual const virtual -> long : 1
const virtual void -> const : 1
const virtual void -> class : 1
const class circle -> public : 1
class circle public -> shape : 1
public shape virtual -> void : 1
shape virtual void -> virtual : 1
virtual const return -> virtual : 1
virtual const return -> new : 2
virtual const return -> static : 1
return virtual const -> return : 1
const return new -> virtual : 2
return new virtual -> void : 2
new virtual void -> const : 1
new virtual void -> virtual : 1
const out double -> const : 1
out double const -> return : 1
return double class -> public : 1
double class public -> circle : 1
class public circle -> virtual : 1
public circle virtual -> const : 1
circle virtual const -> return : 1
const out const -> return : 1
out const return -> color : 1
const return color -> void : 1
return color void -> const : 1
color void const -> though : 1
void const though -> is : 1
const though is -> it : 1
though is it -> has : 1
is it has -> a : 1
is it has -> the : 3
a function derived -> classes : 1
function derived classes -> must : 1
must override but -> they : 1
override but they -> can : 1
but they can -> also : 1
they can also -> call : 1
can also call -> which : 1
also call which -> permits : 1
call which permits -> uniform : 1
which permits uniform -> implementation : 1
permits uniform implementation -> of : 1
uniform implementation of -> the : 1
implementation of the -> various : 1
implementation of the -> standard : 2
implementation of the -> function : 5
implementation of the -> the : 1
implementation of the -> proxy : 2
implementation of the -> global : 1
of the various -> in : 1
of the various -> classes : 1
the various in -> other : 1
various in other -> every : 1
in other every -> implementation : 1
other every implementation -> of : 1
every implementation of -> starts : 1
implementation of starts -> by : 1
of starts by -> calling : 1
starts by calling -> the : 1
calling the base -> class : 1
base class classes -> that : 1
class classes that -> inherit : 1
classes that inherit -> directly : 1
classes that inherit -> declares : 1
that inherit directly -> from : 1
inherit directly from -> do : 1
directly from do -> not : 1
from do not -> need : 1
need to implement -> differently : 1
need to implement -> headers : 1
to implement differently -> from : 1
implement differently from -> classes : 1
differently from classes -> that : 1
from classes that -> inherit : 1
that inherit declares -> at : 1
inherit declares at -> least : 1
least one pure -> virtual : 1
one pure virtual -> function : 1
virtual function or -> inherits : 1
function or inherits -> a : 1
or inherits a -> pure : 1
inherits a pure -> virtual : 1
virtual function without -> overriding : 1
function without overriding -> a : 1
without overriding a -> has : 1
overriding a has -> no : 1
a has no -> pure : 1
a has no -> special : 1
has no pure -> virtual : 1
no pure virtual -> functions : 1
virtual functions all -> inherited : 1
functions all inherited -> pure : 1
all inherited pure -> functions : 1
inherited pure functions -> are : 1
pure functions are -> you : 1
functions are you -> cannot : 1
are you cannot -> create : 1
you cannot create -> an : 2
cannot create an -> object : 1
cannot create an -> instance : 1
create an object -> whose : 1
object whose type -> is : 4
is an abstract -> you : 1
an abstract you -> must : 1
abstract you must -> create : 1
you must create -> objects : 1
you must create -> an : 1
must create objects -> of : 1
create objects of -> concrete : 1
objects of concrete -> in : 1
of concrete in -> other : 1
concrete in other -> a : 1
other a concrete -> class : 1
a concrete class -> that : 1
concrete class that -> inherits : 1
class that inherits -> from : 1
class that inherits -> directly : 1
that inherits from -> an : 1
from an abstract -> class : 1
an abstract class -> must : 1
abstract class must -> override : 1
class must override -> every : 1
class must override -> the : 1
must override every -> pure : 1
override every pure -> virtual : 1
every pure virtual -> classes : 1
pure virtual classes -> can : 1
virtual classes can -> be : 1
classes can be -> used : 1
define a interface -> that : 1
a interface that -> a : 1
interface that a -> class : 1
class with all -> pure : 1
with all pure -> virtual : 1
all pure virtual -> functions : 1
functions and no -> nonstatic : 1
and no nonstatic -> data : 1
nonstatic data java -> and : 1
data java and -> delphi : 1
java and delphi -> programmers : 1
and delphi programmers -> recognize : 1
delphi programmers recognize -> this : 1
programmers recognize this -> style : 1
programmers recognize this -> type : 1
recognize this style -> of : 1
this style of -> programming : 3
style of programming -> because : 1
style of programming -> is : 2
style of programming -> that : 1
of programming because -> it : 1
programming because it -> is : 1
only way these -> languages : 1
way these languages -> support : 1
these languages support -> multiple : 1
languages support multiple -> abstract : 1
support multiple abstract -> classes : 1
multiple abstract classes -> as : 1
abstract classes as -> an : 2
classes as an -> interface : 2
as an interface -> shows : 1
as an interface -> runnable : 1
an interface shows -> how : 1
interface shows how -> interface : 1
shows how interface -> classes : 1
how interface classes -> might : 1
interface classes might -> be : 1
classes might be -> used : 1
used in abstract -> classes : 1
in abstract classes -> as : 1
an interface runnable -> virtual : 1
interface runnable virtual -> void : 1
runnable virtual void -> struct : 1
void struct hashable -> virtual : 1
struct hashable virtual -> class : 1
hashable virtual class -> thread : 1
virtual class thread -> public : 1
class thread public -> public : 1
thread public public -> hashable : 1
public public hashable -> virtual : 1
public hashable virtual -> void : 1
hashable virtual void -> virtual : 1
const return static -> void : 1
const return static -> bool : 1
const return static -> int : 1
static void derived -> classes : 1
void derived classes -> can : 1
derived classes can -> override : 3
classes can override -> run : 1
classes can override -> this : 2
can override run -> to : 1
override run to -> do : 1
run to do -> something : 1
to do something -> void : 1
do something void -> class : 1
something void class -> can : 1
void class can -> derive : 1
can derive from -> more : 1
can derive from -> to : 1
derive from more -> than : 1
from more than -> one : 1
than one base -> you : 1
than one base -> class : 1
one base you -> cannot : 1
base you cannot -> name : 1
you cannot name -> the : 1
cannot name the -> same : 1
name the same -> class : 1
name the same -> in : 1
name the same -> each : 1
same class more -> than : 1
class more than -> once : 1
base but a -> class : 1
but a class -> can : 1
be used more -> than : 1
used more than -> once : 2
indirect base or -> once : 1
base or once -> as : 1
or once as -> a : 1
class and one -> or : 1
or more times -> as : 1
more times as -> an : 1
times as an -> indirect : 1
indirect base some -> programmers : 1
base some programmers -> speak : 1
some programmers speak -> of : 1
programmers speak of -> inheritance : 1
speak of inheritance -> trees : 1
of inheritance trees -> or : 1
inheritance trees or -> but : 1
trees or but -> with : 1
or but with -> multiple : 1
but with multiple -> base : 1
with multiple base -> the : 1
multiple base the -> organization : 1
base the organization -> of : 1
the organization of -> inheritance : 1
the organization of -> multiple : 1
organization of inheritance -> is : 1
of inheritance is -> a : 1
inheritance is a -> directed : 1
is a directed -> acyclic : 1
a directed acyclic -> not : 1
directed acyclic not -> a : 1
acyclic not a -> programmers : 1
not a programmers -> sometimes : 1
a programmers sometimes -> speak : 1
programmers sometimes speak -> of : 1
sometimes speak of -> multiple : 1
speak of multiple -> base : 1
of multiple base -> classes : 1
of multiple base -> modeled : 1
multiple base classes -> declare : 1
base classes declare -> the : 1
classes declare the -> same : 1
declare the same -> the : 1
declare the same -> function : 1
declare the same -> does : 1
derived class must -> qualify : 1
derived class must -> override : 1
derived class must -> also : 1
derived class must -> declare : 1
class must qualify -> references : 1
must qualify references -> to : 1
qualify references to -> the : 1
the name or -> else : 1
the name or -> if : 1
name or else -> the : 1
an ambiguity int -> struct : 1
ambiguity int struct -> int : 1
int struct derived -> int : 2
int struct derived -> base : 1
struct derived int -> return : 1
struct derived int -> const : 1
derived int return -> plain : 1
int return plain -> n : 1
return plain n -> is : 1
plain n is -> an : 1
n is an -> of : 1
is an of -> a : 1
an of a -> type : 1
a type contain -> separate : 1
type contain separate -> subobjects : 1
contain separate subobjects -> for : 1
separate subobjects for -> each : 1
subobjects for each -> instance : 1
for each instance -> of : 1
each instance of -> every : 1
each instance of -> a : 1
instance of every -> base : 1
of every base -> class : 1
every base class -> to : 1
class to store -> the : 1
store the base -> nonstatic : 1
the base nonstatic -> data : 1
base nonstatic data -> to : 1
nonstatic data to -> refer : 1
data to refer -> to : 1
of a particular -> qualify : 1
of a particular -> iterators : 1
a particular qualify -> its : 1
particular qualify its -> name : 1
qualify its name -> with : 1
its name with -> the : 1
with the name -> of : 1
with the name -> initializes : 1
with the name -> the : 2
name of its -> base : 1
its base static -> nested : 1
base static nested -> and : 1
static nested and -> enumerators : 1
nested and enumerators -> are : 1
and enumerators are -> shared : 1
enumerators are shared -> among : 1
are shared among -> all : 1
shared among all -> instances : 1
among all instances -> of : 1
all instances of -> a : 1
all instances of -> the : 2
all instances of -> are : 1
all instances of -> an : 1
instances of a -> repeated : 1
of a repeated -> base : 1
a repeated base -> so : 1
repeated base so -> they : 1
base so they -> can : 1
be used without -> qualification : 1
used without qualification -> the : 1
without qualification the -> derived : 1
qualification the derived -> class : 1
class hides a -> name : 1
class hides a -> template : 1
hides a name -> with : 1
name with its -> own : 1
with its own -> as : 1
with its own -> template : 1
its own as -> shown : 1
own as shown -> in : 1
shown in int -> struct : 1
in int struct -> enum : 1
int struct enum -> color : 1
struct enum color -> red : 1
enum color red -> int : 1
color red int -> struct : 1
red int struct -> int : 1
struct int hides -> struct : 1
int hides struct -> derived : 1
hides struct derived -> color : 1
struct derived color -> unambiguous : 1
derived color unambiguous -> use : 1
color unambiguous use -> of : 1
unambiguous use of -> int : 1
use of int -> return : 1
of int return -> ambiguous : 1
int return ambiguous -> int : 1
return ambiguous int -> return : 1
ambiguous int return -> which : 1
int return which -> int : 1
return which int -> return : 1
which int return -> ok : 1
return ok int -> another : 1
ok int another -> way : 1
int another way -> to : 1
way to get -> to : 1
get to a -> specific : 1
a specific member -> n : 1
specific member n -> return : 1
member n return -> graph : 1
n return graph -> avoids : 1
return graph avoids -> problems : 1
graph avoids problems -> with : 1
avoids problems with -> ambiguities : 1
problems with ambiguities -> by : 1
with ambiguities by -> ensuring : 1
ambiguities by ensuring -> that : 1
by ensuring that -> names : 1
ensuring that names -> are : 1
that names are -> unique : 1
names are unique -> throughout : 1
are unique throughout -> the : 1
unique throughout the -> and : 1
throughout the and -> that : 1
and that a -> derived : 1
that a derived -> class : 1
derived class inherits -> from : 1
class inherits from -> each : 1
inherits from each -> base : 1
from each base -> class : 1
base class no -> more : 1
class no more -> than : 1
no more than -> a : 1
no more than -> wide : 1
no more than -> linear : 1
no more than -> characters : 1
more than a -> base : 1
more than a -> mere : 1
more than a -> sequence : 1
than a base -> class : 1
must be repeated -> in : 1
be repeated in -> an : 1
repeated in an -> inheritance : 1
in an inheritance -> from : 1
in an inheritance -> the : 1
in an inheritance -> all : 1
in an inheritance -> shape : 1
an inheritance from -> multiple : 1
inheritance from multiple -> base : 1
from multiple base -> illustrates : 1
from multiple base -> from : 1
from multiple base -> base : 1
multiple base illustrates -> the : 1
base illustrates the -> organization : 1
illustrates the organization -> of : 1
organization of multiple -> base : 1
multiple base modeled -> after : 1
base modeled after -> the : 1
modeled after the -> standard : 1
after the standard -> stream : 1
standard stream because -> derives : 1
stream because derives -> from : 1
because derives from -> and : 1
derives from and -> from : 1
derives from and -> declares : 1
from and from -> it : 1
and from it -> inherits : 1
from it inherits -> two : 1
it inherits two -> sets : 1
inherits two sets -> of : 1
two sets of -> two : 1
two sets of -> and : 1
sets of two -> sets : 1
of two sets -> of : 1
sets of and -> so : 1
of and so -> even : 1
of and so -> base : 1
of and so -> digit : 1
of and so -> generic : 1
and so even -> though : 1
so even though -> it : 1
even though it -> should : 1
though it should -> have : 1
it should have -> only : 1
should have only -> one : 1
have only one -> set : 1
only one set -> of : 1
one set of -> this : 1
set of this -> problem : 1
set of this -> is : 1
of this problem -> is : 1
problem is solved -> by : 1
is solved by -> virtual : 1
solved by virtual -> base : 1
by virtual base -> as : 1
virtual base as -> explained : 1
base as explained -> in : 1
explained in the -> next : 2
the next from -> multiple : 1
next from multiple -> base : 1
multiple base from -> multiple : 1
base from multiple -> base : 1
multiple base base -> class : 1
base base class -> can : 1
which is important -> when : 1
is important when -> a : 1
is important when -> implementing : 1
important when a -> class : 1
when a class -> has : 1
has multiple base -> each : 1
multiple base each -> time : 1
base each time -> a : 1
each time a -> class : 1
time a class -> is : 1
class is named -> in : 1
is named in -> an : 1
named in an -> inheritance : 1
an inheritance the -> class : 1
inheritance the class -> is : 1
class is organized -> so : 1
is organized so -> that : 2
so that an -> object : 1
that an object -> has : 1
that an object -> cannot : 1
an object has -> a : 1
has a distinct -> subobject : 1
a distinct subobject -> for : 1
distinct subobject for -> each : 1
subobject for each -> occurrence : 1
for each occurrence -> of : 1
each occurrence of -> each : 1
each occurrence of -> a : 1
each occurrence of -> an : 1
occurrence of each -> base : 1
of each base -> virtual : 1
each base virtual -> base : 1
base virtual base -> are : 1
virtual base are -> combined : 1
base are combined -> into : 1
are combined into -> a : 1
combined into a -> single : 1
a single that -> each : 1
a single that -> the : 1
single that each -> nonvirtual : 1
that each nonvirtual -> base : 1
each nonvirtual base -> class : 1
nonvirtual base class -> results : 1
nonvirtual base class -> in : 1
base class results -> in : 1
class results in -> a : 1
in a distinct -> and : 1
a distinct and -> each : 1
distinct and each -> virtual : 1
base class gets -> a : 1
class gets a -> single : 1
gets a single -> no : 1
gets a single -> copy : 1
a single no -> matter : 1
single no matter -> how : 1
no matter how -> many : 1
matter how many -> times : 1
many times that -> base : 1
times that base -> class : 1
that base class -> appears : 1
class appears in -> the : 1
the inheritance base -> illustrates : 1
inheritance base illustrates -> base : 1
base illustrates base -> classes : 1
illustrates base classes -> as : 1
base classes as -> they : 1
classes as they -> are : 1
the standard because -> and : 1
standard because and -> derive : 1
because and derive -> virtually : 1
and derive virtually -> from : 1
derive virtually from -> the : 1
virtually from the -> class : 1
the class inherits -> a : 1
class inherits a -> single : 1
inherits a single -> copy : 1
inherits a single -> instance : 1
copy of with -> its : 1
copy of with -> as : 1
of with its -> single : 1
with its single -> copy : 1
its single copy -> of : 1
and so base -> base : 1
so base base -> a : 1
base base a -> base : 1
base a base -> class : 1
as a virtual -> and : 1
a virtual and -> nonvirtual : 1
a virtual and -> destroying : 1
virtual and nonvirtual -> base : 1
and nonvirtual base -> class : 1
base class in -> an : 1
base class in -> any : 1
base class in -> this : 1
class in an -> inheritance : 1
an inheritance all -> the : 1
inheritance all the -> virtual : 1
all the virtual -> instances : 1
all the virtual -> base : 1
the virtual instances -> are : 1
virtual instances are -> and : 1
instances are and -> all : 1
are and all -> the : 1
are and all -> pointers : 1
and all the -> nonvirtual : 1
and all the -> streams : 1
and all the -> container : 1
and all the -> pairs : 1
and all the -> items : 2
all the nonvirtual -> instances : 1
the nonvirtual instances -> are : 1
nonvirtual instances are -> separate : 1
instances are separate -> from : 1
from the virtual -> this : 1
from the virtual -> base : 1
virtual this situation -> is : 1
this situation is -> and : 1
situation is and -> usually : 1
is and usually -> indicates : 1
and usually indicates -> a : 1
usually indicates a -> programming : 1
indicates a programming -> constructing : 1
a programming constructing -> a : 1
programming constructing a -> class : 1
constructing a class -> that : 1
has virtual base -> the : 1
base the constructors -> must : 1
the constructors must -> initialize : 1
constructors must initialize -> all : 1
must initialize all -> the : 1
initialize all the -> virtual : 1
the virtual base -> if : 1
the virtual base -> default : 1
the virtual base -> classes : 1
the virtual base -> class : 2
the virtual base -> inheritance : 1
virtual base if -> a : 1
base if a -> constructor : 1
if a constructor -> does : 1
a constructor does -> not : 1
constructor does not -> explicitly : 1
does not explicitly -> initialize : 1
not explicitly initialize -> a : 1
explicitly initialize a -> virtual : 1
initialize a virtual -> base : 1
base the virtual -> base : 1
virtual base default -> constructor : 1
base default constructor -> is : 1
constructor is initializers -> for : 1
is initializers for -> the : 1
initializers for the -> virtual : 1
for the virtual -> base : 1
for the virtual -> functions : 12
classes are ignored -> when : 1
are ignored when -> all : 1
ignored when all -> base : 1
when all base -> class : 1
all base class -> constructors : 1
base class constructors -> should : 1
class constructors should -> design : 1
constructors should design -> your : 1
should design your -> virtual : 1
design your virtual -> base : 1
your virtual base -> classes : 1
base classes so -> they : 1
classes so they -> require : 1
so they require -> only : 1
they require only -> the : 1
require only the -> default : 1
only the default -> you : 1
the default you -> impose : 1
default you impose -> a : 1
you impose a -> burden : 1
impose a burden -> on : 1
a burden on -> every : 1
burden on every -> derived : 1
on every derived -> class : 1
class to initialize -> the : 1
initialize the virtual -> base : 1
base class any -> change : 1
class any change -> to : 1
any change to -> the : 1
change to the -> parameters : 1
to the parameters -> of : 1
the parameters of -> the : 1
the parameters of -> a : 2
the parameters of -> are : 1
parameters of the -> virtual : 1
parameters of the -> partial : 1
base class constructor -> necessitates : 1
class constructor necessitates -> a : 1
constructor necessitates a -> corresponding : 1
necessitates a corresponding -> change : 1
a corresponding change -> to : 1
corresponding change to -> every : 1
change to every -> constructor : 1
to every constructor -> for : 1
every constructor for -> every : 1
constructor for every -> class : 1
for every class -> that : 1
every class that -> directly : 1
class that directly -> or : 1
that directly or -> from : 1
directly or from -> the : 1
or from the -> virtual : 1
virtual base inheritance -> in : 1
base inheritance in -> the : 2
inheritance in the -> standard : 2
inheritance in the -> library : 1
the standard shows -> the : 1
standard shows the -> skeletons : 1
shows the skeletons -> of : 1
the skeletons of -> the : 1
skeletons of the -> declarations : 1
of the declarations -> for : 1
the standard as -> illustrated : 1
the standard as -> part : 1
standard as illustrated -> in : 1
as illustrated in -> base : 1
as illustrated in -> a : 1
illustrated in base -> inheritance : 1
in base inheritance -> in : 1
standard typename class -> public : 1
typename class public -> typename : 2
typename class public -> virtual : 2
typename class public -> public : 1
typename class public -> explicit : 8
typename class public -> typedef : 1
class public typename -> class : 1
class public typename -> explicit : 1
class public typename -> typename : 3
class public typename -> typedef : 1
public typename class -> public : 1
class public virtual -> typename : 2
public virtual typename -> class : 2
virtual typename class -> public : 2
public public constructors -> and : 1
public constructors and -> constructors : 1
constructors and constructors -> and : 1
and constructors and -> an : 1
constructors and an -> object : 1
and an object -> is : 1
the object being -> created : 1
object being created -> is : 1
being created is -> called : 1
created is called -> the : 1
called the when -> a : 1
called the when -> setting : 1
the when a -> constructor : 1
when a constructor -> body : 1
a constructor body -> the : 1
constructor body the -> class : 1
body the class -> identity : 1
the class identity -> and : 2
class identity and -> virtual : 2
identity and virtual -> functions : 2
and virtual functions -> are : 2
functions are those -> of : 2
are those of -> the : 2
the class whose -> constructor : 1
class whose constructor -> is : 1
whose constructor is -> which : 1
constructor is which -> is : 1
is which is -> not : 1
is which is -> a : 1
is which is -> suitable : 1
is which is -> correct : 2
which is not -> necessarily : 1
which is not -> in : 1
necessarily the if -> you : 1
call a pure -> virtual : 1
pure virtual the -> behavior : 1
behavior is run -> in : 1
is run in -> the : 1
run in the -> opposite : 1
order of in -> the : 1
of in the -> body : 1
of in the -> latter : 1
of in the -> if : 2
of in the -> given : 2
of in the -> range : 1
of in the -> wide : 2
of in the -> following : 1
the not the -> as : 1
not the as -> mentioned : 1
the as mentioned -> any : 1
as mentioned any -> class : 1
mentioned any class -> that : 1
has a virtual -> function : 1
has a virtual -> a : 1
virtual and destroying -> an : 1
and destroying an -> illustrates : 1
and destroying an -> struct : 1
destroying an illustrates -> how : 1
an illustrates how -> an : 1
illustrates how an -> identity : 1
how an identity -> changes : 1
an identity changes -> as : 1
identity changes as -> it : 1
changes as it -> is : 1
it is being -> and : 1
is being and -> destroying : 1
being and destroying -> an : 1
destroying an struct -> base : 1
an struct base -> virtual : 1
struct base virtual -> void : 1
virtual void am -> struct : 2
virtual void am -> int : 1
void am struct -> derived : 1
void am struct -> virtual : 1
am struct derived -> base : 1
am struct virtual -> derived : 1
struct virtual derived -> virtual : 1
virtual derived virtual -> void : 1
void am int -> i : 1
am int i -> am : 1
int i am -> base : 1
i am base -> i : 1
i am base -> specifiers : 1
am base i -> am : 1
base i am -> derived : 1
i am derived -> i : 2
am derived i -> am : 2
derived i am -> i : 1
derived i am -> base : 1
i am i -> am : 2
am i am -> i : 1
am i am -> derived : 1
am base specifiers -> restrict : 1
base specifiers restrict -> who : 1
specifiers restrict who -> can : 1
restrict who can -> access : 1
who can access -> a : 1
can access a -> you : 1
can access a -> public : 1
access a you -> can : 1
use an access -> specifier : 1
access specifier before -> a : 1
specifier before a -> name : 1
before a name -> in : 4
class definition and -> have : 1
class definition and -> later : 1
definition and have -> access : 1
and have access -> specifier : 1
have access specifier -> labels : 1
specifier labels within -> a : 1
labels within a -> class : 1
class the access -> specifiers : 1
the access specifiers -> can : 1
access specifiers can -> access : 1
specifiers can access -> a : 1
access a public -> the : 1
a public the -> derived : 1
public the derived -> and : 1
the derived and -> friends : 1
the derived and -> public : 1
derived and friends -> can : 1
and friends can -> access : 2
and friends can -> cast : 2
friends can access -> protected : 1
friends can access -> private : 1
can access protected -> the : 1
access protected the -> class : 1
protected the class -> and : 1
class and friends -> can : 1
can access private -> a : 1
access private a -> the : 1
private a the -> default : 1
default access for -> members : 1
access for members -> and : 1
for members and -> base : 3
members and base -> classes : 1
members and base -> members : 2
and base classes -> is : 1
classes is in -> a : 1
default is that -> is : 1
default is that -> a : 2
is that is -> the : 3
is that is -> a : 1
is that is -> not : 1
only difference between -> a : 1
only difference between -> and : 1
and a although -> by : 1
a although by -> some : 1
although by some -> programmers : 1
by some programmers -> use : 1
some programmers use -> only : 1
programmers use only -> for : 1
use only for -> pod : 1
only for pod -> classes : 1
for pod classes -> and : 1
pod classes and -> use : 1
classes and use -> for : 1
and use for -> all : 1
and use for -> wide : 2
use for all -> other : 1
for all other -> access : 1
for all other -> input : 3
for all other -> rules : 1
for all other -> the : 1
for all other -> uses : 1
for all other -> and : 1
all other access -> level : 1
other access level -> of : 1
level of a -> base : 2
level of a -> is : 2
base class affects -> which : 1
class affects which -> members : 1
affects which members -> of : 1
which members of -> the : 1
base class are -> accessible : 1
base class are -> private : 1
class are accessible -> to : 1
are accessible to -> users : 1
accessible to users -> of : 1
to users of -> a : 1
users of a -> derived : 1
derived class the -> derived : 1
the derived access -> to : 1
derived access to -> the : 1
access to the -> base : 1
access to the -> only : 1
access to the -> private : 1
access to the -> keyword : 1
access to the -> class : 1
access to the -> stream : 2
access to the -> contents : 1
base the access -> level : 1
access level caps -> the : 1
level caps the -> accessibility : 1
caps the accessibility -> of : 1
the accessibility of -> inherited : 2
the accessibility of -> public : 1
the accessibility of -> a : 1
the accessibility of -> an : 1
accessibility of inherited -> in : 1
accessibility of inherited -> members : 1
of inherited in -> other : 1
inherited in other -> private : 1
in other private -> inheritance : 1
other private inheritance -> makes : 1
private inheritance makes -> all : 1
private inheritance makes -> private : 1
private inheritance makes -> x : 1
inheritance makes all -> inherited : 1
makes all inherited -> members : 1
all inherited members -> private : 1
inherited members private -> in : 1
members private in -> the : 1
private in the -> derived : 1
the derived protected -> inheritance : 1
derived protected inheritance -> reduces : 1
protected inheritance reduces -> the : 1
inheritance reduces the -> accessibility : 1
reduces the accessibility -> of : 1
accessibility of public -> members : 1
of public members -> in : 1
public members in -> the : 1
class to protected -> in : 1
to protected in -> the : 1
protected in the -> derived : 2
the derived public -> inheritance : 1
derived public inheritance -> leaves : 1
public inheritance leaves -> all : 1
inheritance leaves all -> accessibility : 1
leaves all accessibility -> as : 1
all accessibility as -> it : 1
accessibility as it -> is : 1
the base access -> level : 1
base access level -> of : 1
base class also -> limits : 1
class also limits -> type : 1
also limits type -> casts : 1
limits type casts -> and : 1
type casts and -> with : 1
casts and with -> public : 1
and with public -> you : 1
with public you -> can : 1
public you can -> cast : 1
can cast from -> a : 1
class in any -> only : 1
in any only -> derived : 1
any only derived -> classes : 1
only derived classes -> and : 1
derived classes and -> friends : 1
derived classes and -> overridden : 1
derived classes and -> following : 1
classes and friends -> can : 1
friends can cast -> to : 2
can cast to -> a : 1
can cast to -> the : 1
to a protected -> base : 1
a protected base -> for : 1
a protected base -> int : 1
protected base for -> private : 1
base for private -> only : 1
for private only -> the : 1
private only the -> class : 1
only the class -> that : 1
only the class -> template : 1
that inherits directly -> and : 1
inherits directly and -> friends : 1
directly and friends -> can : 1
the base level -> labels : 1
base level labels -> in : 1
level labels in -> a : 1
labels in a -> class : 1
class definition apply -> to : 1
definition apply to -> all : 1
to all data -> member : 1
all data member -> and : 1
member and nested -> a : 1
and nested a -> label : 1
nested a label -> remains : 1
a label remains -> in : 1
label remains in -> effect : 1
remains in effect -> until : 1
in effect until -> a : 1
effect until a -> new : 1
until a new -> access : 1
a new access -> label : 1
new access label -> is : 1
access label is -> seen : 1
label is seen -> or : 1
is seen or -> the : 1
seen or the -> class : 1
or the class -> definition : 1
class definition with -> no : 1
definition with no -> specifier : 1
no specifier labels -> affect : 1
specifier labels affect -> the : 1
labels affect the -> layout : 1
affect the layout -> of : 1
layout of nonstatic -> data : 1
of nonstatic data -> in : 1
nonstatic data in -> the : 1
data in the -> absence : 1
in the absence -> of : 1
absence of access -> specifier : 1
of access specifier -> nonstatic : 1
access specifier nonstatic -> data : 1
specifier nonstatic data -> members : 1
members are at -> increasing : 1
are at increasing -> addresses : 1
at increasing addresses -> within : 1
increasing addresses within -> an : 1
addresses within an -> object : 1
within an object -> in : 1
order of when -> separated : 1
of when separated -> by : 1
when separated by -> access : 1
separated by access -> specifier : 1
by access specifier -> the : 1
specifier the order -> is : 1
the order is -> looking : 1
the order is -> you : 2
the order is -> determined : 1
order is looking -> up : 1
is looking up -> names : 1
looking up names -> and : 1
up names and -> resolving : 1
names and resolving -> overloaded : 1
and resolving overloaded -> the : 1
resolving overloaded the -> access : 1
overloaded the access -> level : 1
access level is -> not : 2
access level is -> checked : 1
access level is -> private : 1
level is not -> the : 1
level is not -> cannot : 1
not the access -> level : 1
level is checked -> only : 1
is checked only -> after : 1
checked only after -> a : 1
only after a -> name : 1
after a name -> has : 1
a name has -> been : 1
name has been -> found : 1
has been found -> and : 1
been found and -> overloaded : 1
found and overloaded -> functions : 1
and overloaded functions -> have : 1
overloaded functions have -> been : 1
functions have been -> and : 1
been and if -> the : 1
if the level -> does : 1
the level does -> not : 1
level does not -> permit : 1
does not permit -> the : 1
not permit the -> compiler : 1
permit the compiler -> issues : 1
the compiler issues -> an : 1
compiler issues an -> error : 1
issues an error -> access : 1
issues an error -> directive : 1
an error access -> level : 1
error access level -> and : 1
access level and -> shows : 1
access level and -> base : 1
level and shows -> how : 1
and shows how -> the : 1
the compiler ignores -> the : 1
compiler ignores the -> access : 1
ignores the access -> level : 1
access level when -> resolving : 1
level when resolving -> names : 1
when resolving names -> and : 1
resolving names and -> access : 1
names and access -> level : 1
and access level -> and : 1
level and base -> void : 1
and base void -> void : 1
void class demo -> public : 1
void class demo -> friend : 1
class demo public -> base : 1
demo public base -> calls : 1
public base calls -> void : 1
base calls void -> is : 1
calls void is -> private : 1
void is private -> class : 1
is private class -> closed : 1
private class closed -> private : 1
class closed private -> demo : 1
closed private demo -> is : 1
private demo is -> accessible : 1
demo is accessible -> from : 1
is accessible from -> closed : 1
accessible from closed -> int : 1
from closed int -> demo : 1
closed int demo -> accessibly : 1
int demo accessibly -> only : 1
demo accessibly only -> from : 1
accessibly only from -> base : 1
only from base -> and : 1
from base and -> demo : 1
base and demo -> is : 1
and demo is -> private : 1
demo is private -> closed : 1
is private closed -> private : 1
private closed private -> inheritance : 1
closed private inheritance -> makes : 1
inheritance makes private -> in : 1
makes private in -> derived : 1
private in derived -> class : 1
in derived class -> can : 1
class can change -> the : 1
can change the -> accessibility : 1
can change the -> names : 1
can change the -> behavior : 1
can change the -> locale : 1
change the accessibility -> of : 1
of inherited members -> with : 1
inherited members with -> a : 1
with a derived -> class : 1
class can restore -> the : 1
can restore the -> accessibility : 1
restore the accessibility -> of : 1
accessibility of a -> member : 1
a member whose -> access : 1
member whose access -> was : 1
whose access was -> reduced : 1
access was reduced -> by : 1
was reduced by -> protected : 1
reduced by protected -> or : 1
by protected or -> private : 1
protected or private -> or : 1
or private or -> it : 1
private or it -> can : 1
it can increase -> the : 1
can increase the -> accessibility : 1
increase the accessibility -> of : 1
accessibility of an -> inherited : 1
of an inherited -> protected : 1
of an inherited -> member : 1
an inherited protected -> accessibility : 1
inherited protected accessibility -> with : 1
protected accessibility with -> using : 1
accessibility with using -> shows : 1
accessibility with using -> base : 1
shows how declarations -> can : 1
how declarations can -> omit : 1
declarations can omit -> the : 1
omit the leaving -> only : 1
the leaving only -> the : 1
leaving only the -> qualified : 1
only the qualified -> but : 1
qualified but such -> usage : 1
usage is accessibility -> with : 1
is accessibility with -> using : 1
with using base -> struct : 1
using base struct -> is : 1
base struct is -> public : 1
struct is public -> by : 1
is public by -> int : 1
public by int -> int : 1
by int int -> private : 1
int int private -> inheritance : 1
int private inheritance -> makes : 1
inheritance makes x -> and : 1
makes x and -> y : 1
and y private -> in : 1
y private in -> class : 1
private in class -> private : 1
in class private -> base : 1
class private base -> using : 1
private base using -> x : 1
base using x -> is : 1
using x is -> now : 1
using x is -> still : 1
x is now -> public : 1
is now public -> inheritance : 1
now public inheritance -> menas : 1
public inheritance menas -> x : 1
inheritance menas x -> is : 1
menas x is -> public : 1
x is public -> and : 1
x is public -> in : 3
is public and -> y : 1
public and y -> is : 1
and y is -> protected : 1
y is protected -> in : 2
is protected in -> class : 1
is protected in -> base : 1
protected in class -> public : 1
in class public -> base : 1
in class public -> friend : 1
class public base -> using : 1
public base using -> y : 1
base using y -> is : 1
using y is -> now : 1
y is now -> using : 1
is now using -> x : 1
now using x -> is : 1
x is still -> public : 1
is still public -> int : 1
still public int -> base : 1
public int base -> x : 1
int base x -> is : 1
base x is -> public : 2
is public in -> base : 1
is public in -> x : 1
is public in -> y : 1
is public in -> return : 1
public in base -> y : 1
in base y -> is : 1
base y is -> protected : 1
protected in base -> x : 1
in base x -> is : 1
public in x -> is : 1
in x is -> public : 1
public in y -> is : 1
in y is -> private : 1
in y is -> public : 1
y is private -> in : 1
is private in -> y : 1
private in y -> is : 1
y is public -> in : 1
public in return -> accessibility : 1
in return accessibility -> depends : 1
return accessibility depends -> on : 1
accessibility depends on -> how : 1
depends on how -> it : 1
on how it -> is : 1
how it is -> in : 1
how it is -> used : 1
be accessed only -> through : 1
accessed only through -> its : 1
only through its -> own : 1
through its own -> class : 1
its own class -> or : 1
own class or -> a : 1
or a derived -> but : 1
or a derived -> it : 1
a derived but -> not : 1
derived but not -> through : 1
but not through -> a : 1
not through a -> base : 1
through a base -> a : 1
through a base -> inheritance : 1
a base a -> protected : 1
a base a -> custom : 1
base a protected -> demonstrates : 1
a protected demonstrates -> this : 1
protected demonstrates this -> a : 1
demonstrates this a -> protected : 1
this a protected -> base : 1
protected base int -> struct : 1
base int struct -> derived : 1
derived base void -> ok : 1
base void ok -> void : 1
void ok void -> cannot : 1
void ok void -> ok : 1
void ok void -> the : 1
ok void cannot -> refer : 1
void cannot refer -> to : 1
refer to m -> through : 1
to m through -> base : 1
m through base -> bool : 1
through base bool -> return : 1
base bool return -> ok : 1
bool return ok -> is : 1
bool return ok -> typename : 1
return ok is -> permitted : 1
ok is permitted -> full : 1
is permitted full -> access : 1
permitted full access -> to : 1
full access to -> private : 1
full access to -> the : 1
access to private -> and : 1
access to private -> class : 1
to private and -> protected : 1
and protected a -> friend : 1
protected a friend -> can : 1
a friend can -> be : 1
friend can be -> a : 1
function or member -> or : 1
function or member -> function : 1
or member or -> a : 1
class or class -> in : 1
class or class -> the : 1
class or class -> template : 6
or class in -> which : 1
class in which -> case : 2
class in which -> the : 1
case the entire -> class : 1
the entire class -> and : 1
the entire class -> specializing : 1
entire class and -> all : 1
of its members -> are : 2
its members are -> the : 1
its members are -> also : 1
members are the -> specifier : 1
are the specifier -> to : 1
the specifier to -> declare : 1
the specifier to -> be : 2
the specifier to -> mark : 1
specifier to declare -> a : 1
a friend in -> the : 1
friend in the -> class : 1
class granting note -> that : 1
granting note that -> friendship : 1
note that friendship -> is : 1
that friendship is -> not : 1
friendship is not -> in : 1
friendship is not -> local : 1
not in other -> if : 1
other if class -> a : 1
if class a -> contains : 1
class a contains -> the : 1
a contains the -> declaration : 1
the declaration class -> b : 1
declaration class b -> can : 1
class b can -> access : 1
b can access -> the : 1
access the private -> members : 1
the private members -> of : 2
private members of -> but : 1
private members of -> the : 1
members of but -> a : 1
of but a -> has : 1
has no special -> privileges : 1
has no special -> access : 1
no special privileges -> to : 1
special privileges to -> access : 1
privileges to access -> b : 1
to access b -> b : 1
access b b -> declares : 1
b b declares -> a : 1
b declares a -> as : 1
declares a as -> a : 1
a the specifier -> is : 1
specifier is usually -> although : 1
is usually although -> it : 1
usually although it -> can : 1
although it can -> appear : 1
with other function -> and : 1
with other function -> you : 1
with other function -> templates : 1
other function and -> type : 1
function and type -> the : 1
and type the -> declaration : 1
type the declaration -> can : 1
the declaration can -> appear : 1
the the access -> level : 1
is not cannot -> use : 1
is not cannot -> declare : 1
not cannot use -> a : 1
a class specifier -> in : 1
class specifier in -> a : 1
a friend you -> should : 1
friend you should -> declare : 1
the function before -> the : 1
function before the -> class : 1
before the class -> definition : 1
class definition the -> storage : 1
class definition the -> specifier : 1
definition the storage -> but : 1
the storage but -> without : 1
storage but without -> the : 1
but without the -> then : 1
without the then -> redeclare : 1
the then redeclare -> the : 1
then redeclare the -> function : 1
redeclare the function -> in : 1
definition the specifier -> and : 1
the specifier and -> without : 1
specifier and without -> the : 1
and without the -> storage : 1
without the storage -> the : 1
the storage the -> function : 1
storage the function -> retains : 1
the function retains -> its : 1
function retains its -> original : 1
its original if -> the : 1
original if the -> declaration : 1
original if the -> new : 1
if the declaration -> is : 2
the first declaration -> of : 1
first declaration of -> a : 1
the function gets -> external : 1
function gets external -> for : 1
gets external for -> more : 1
external for more -> information : 1
about storage classes -> and : 1
storage classes and -> for : 1
and for static -> void : 1
for static void -> class : 1
static void class -> demo : 1
class demo friend -> void : 1
demo friend void -> is : 1
friend void is -> not : 1
void is not -> the : 1
not the friend -> of : 1
the friend of -> my : 1
friend of my -> friend : 1
of my friend -> is : 1
my friend is -> not : 1
friend is not -> my : 1
is not my -> friend : 1
not my friend -> i : 1
my friend i -> declare : 1
friend i declare -> so : 1
i declare so -> in : 1
declare so in -> a : 1
so in a -> separate : 1
a separate is -> a : 1
separate is a -> nested : 1
a nested class -> a : 1
a nested class -> is : 1
a nested class -> can : 1
nested class a -> friend : 1
class a friend -> just : 1
a friend just -> because : 1
friend just because -> the : 1
just because the -> outer : 1
because the outer -> class : 1
outer class is -> a : 1
a the next -> for : 1
a the next -> output : 1
a the next -> character : 1
for more is -> not : 1
for more is -> a : 1
more is not -> if : 1
not if a -> base : 1
is a derived -> classes : 1
a derived classes -> do : 1
derived classes do -> not : 1
do not get -> any : 1
not get any -> special : 1
get any special -> cannot : 1
any special cannot -> define : 1
special cannot define -> a : 1
define a provided -> the : 1
a provided the -> class : 1
provided the class -> granting : 1
class granting friendship -> is : 2
granting friendship is -> not : 1
granting friendship is -> a : 1
is not local -> to : 1
not local to -> a : 1
body is in -> the : 1
class which affects -> name : 1
which affects name -> lookup : 1
affects name lookup -> the : 1
name lookup the -> friend : 1
name lookup the -> compiler : 1
lookup the friend -> function : 1
the friend function -> is : 1
friend function is -> automatically : 1
function is automatically -> friend : 1
is automatically friend -> functions : 1
automatically friend functions -> are : 1
friend functions are -> not : 1
functions are not -> in : 1
functions are not -> called : 1
are not in -> the : 3
are not in -> any : 2
the declaration or -> definition : 2
the declaration or -> documentation : 1
declaration or definition -> of : 2
or definition of -> a : 1
or definition of -> the : 1
of a friend -> function : 1
a friend function -> does : 1
a friend function -> declaration : 1
friend function does -> not : 1
does not make -> that : 1
not make that -> function : 1
make that function -> a : 1
that function a -> member : 1
function a member -> of : 1
class and does -> not : 1
not introduce the -> name : 1
introduce the name -> into : 1
the name into -> the : 2
name into the -> class : 1
name into the -> global : 1
into the class -> functions : 1
the class functions -> and : 1
class functions and -> shows : 1
functions and shows -> several : 1
kinds of functions -> and : 1
functions and simple -> container : 1
and simple container -> for : 1
simple container for -> lists : 1
simple container for -> typename : 1
container for lists -> class : 1
for lists class -> slist : 1
lists class slist -> private : 1
class slist private -> type : 2
slist private type -> for : 2
private type for -> a : 2
for a link -> in : 2
a link in -> the : 2
link in the -> list : 1
link in the -> struct : 1
the list struct -> link : 1
list struct link -> u : 1
struct link u -> typedef : 2
link u typedef -> base : 1
link u typedef -> typedef : 1
u typedef base -> class : 1
typedef base class -> for : 1
class for iterator -> and : 1
for iterator and -> keeps : 1
iterator and keeps -> track : 1
and keeps track -> of : 1
track of current -> and : 1
of current and -> previous : 1
current and previous -> node : 1
and previous node -> to : 1
previous node to -> support : 1
node to support -> class : 1
to support class -> public : 1
support class public -> class : 1
public class so -> slist : 1
class so slist -> can : 2
so slist can -> construct : 1
so slist can -> call : 1
slist can construct -> iterators : 1
can construct iterators -> typedef : 1
construct iterators typedef -> t : 1
iterators typedef t -> typedef : 1
t typedef class -> iterator : 1
typedef class iterator -> public : 1
class iterator public -> members : 1
class iterator public -> const : 1
class iterator public -> public : 1
class iterator public -> friend : 1
iterator public members -> omitted : 1
public members omitted -> for : 1
members omitted for -> bevity : 1
omitted for bevity -> class : 1
for bevity class -> so : 1
bevity class so -> slist : 1
slist can call -> constructor : 1
can call constructor -> class : 1
call constructor class -> so : 1
constructor class so -> can : 1
class so can -> use : 1
so can use -> class : 1
can use class -> so : 1
use class so -> iterator : 1
class so iterator -> can : 1
so iterator can -> use : 1
iterator can use -> friend : 1
can use friend -> void : 1
use friend void -> iterator : 1
friend void iterator -> return : 1
void iterator return -> iterator : 1
iterator return swap -> two : 1
return swap two -> lists : 1
swap two lists -> in : 1
two lists in -> constant : 1
lists in constant -> time : 1
in constant time -> by : 1
in constant time -> over : 4
constant time by -> swapping : 1
time by swapping -> void : 1
by swapping void -> typename : 1
swapping void typename -> typename : 1
void typename typename -> can : 1
typename typename can -> declare : 1
typename can declare -> and : 1
can declare and -> define : 1
can declare and -> as : 1
declare and define -> types : 1
declare and define -> template : 1
declare and define -> an : 1
and define types -> within : 1
define types within -> a : 1
types within a -> class : 1
a class accessing -> these : 1
class accessing these -> nested : 1
accessing these nested -> types : 1
these nested types -> is : 1
nested types is -> similar : 1
types is similar -> to : 1
similar to using -> types : 1
to using types -> declared : 1
using types declared -> within : 1
types declared within -> a : 1
declared within a -> the : 1
class name serves -> as : 1
name serves as -> the : 1
serves as the -> namespace : 1
as the namespace -> programmers : 1
the namespace programmers -> have : 1
namespace programmers have -> several : 1
programmers have several -> different : 1
have several different -> kinds : 1
kinds of nested -> classes : 1
of nested classes -> to : 1
of nested classes -> by : 1
nested classes to -> choose : 1
classes to choose -> but : 1
to choose but -> has : 1
choose but has -> only : 1
but has only -> a : 1
has only a -> nested : 1
only a nested -> class : 1
nested class is -> like : 1
class is like -> a : 1
class is like -> it : 1
like a static -> member : 1
static member class -> in : 1
member class in -> you : 1
class in you -> can : 1
you can construct -> the : 1
you can construct -> a : 4
can construct the -> other : 1
construct the other -> forms : 1
the other forms -> of : 1
forms of nested -> classes : 1
nested classes by -> adding : 1
classes by adding -> the : 1
by adding the -> appropriate : 1
by adding the -> offset : 1
adding the appropriate -> declarations : 1
the appropriate declarations -> and : 1
appropriate declarations and -> support : 1
declarations and support -> for : 1
and support for -> outer : 1
support for outer -> friend : 1
for outer friend -> implicit : 1
outer friend implicit -> in : 1
friend implicit in -> java : 2
implicit in java -> class : 1
implicit in java -> inner : 1
in java class -> inner : 1
java class inner -> friend : 1
class inner friend -> implicit : 1
inner friend implicit -> in : 1
in java inner -> member : 1
java inner member -> class : 1
inner member class -> keeps : 1
member class keeps -> track : 1
class keeps track -> of : 1
track of outer -> int : 1
of outer int -> const : 1
outer int const -> return : 1
int int inner -> return : 1
int inner return -> types : 1
inner return types -> obey : 1
return types obey -> access : 1
types obey access -> so : 1
obey access so -> private : 1
access so private -> types : 1
so private types -> are : 1
private types are -> usable : 1
types are usable -> only : 1
types are usable -> by : 1
types are usable -> to : 1
are usable only -> by : 1
usable only by -> the : 1
and its protected -> types : 1
its protected types -> are : 1
protected types are -> usable : 1
are usable by -> the : 1
usable by the -> derived : 1
by the derived -> and : 1
by the derived -> classes : 1
derived and public -> types : 1
and public types -> are : 1
public types are -> usable : 1
are usable to -> use : 1
usable to use -> a : 1
use a nested -> type : 1
nested type outside -> the : 1
type outside the -> containing : 1
outside the containing -> class : 1
containing class and -> derived : 1
class and derived -> it : 1
class and derived -> keyword : 1
and derived it -> must : 1
derived it must -> be : 1
the class enumerations -> add : 1
class enumerations add -> every : 1
enumerations add every -> enumerator : 1
add every enumerator -> to : 1
every enumerator to -> the : 1
enumerator to the -> class : 1
the class graphics -> enum : 1
class graphics enum -> color : 1
graphics enum color -> white : 1
enum color white -> color : 1
white color int -> background : 1
color int background -> declaration : 1
int background declaration -> can : 1
background declaration can -> also : 1
also be nested -> in : 1
be nested in -> a : 1
nested in a -> this : 1
nested in a -> class : 1
a this technique -> is : 1
this technique is -> often : 1
technique is often -> used : 1
used for traits -> class : 1
for traits class -> array : 1
traits class array -> typedef : 1
class array typedef -> t : 2
array typedef t -> typedef : 1
array typedef t -> class : 1
typedef typedef typedef -> definition : 1
typedef typedef typedef -> static : 2
typedef typedef typedef -> typedef : 26
typedef typedef typedef -> t : 3
typedef typedef typedef -> result : 1
typedef typedef typedef -> class : 3
typedef typedef typedef -> typename : 4
typedef typedef typedef -> const : 2
typedef typedef typedef -> streamoff : 1
typedef typedef typedef -> bool : 1
typedef typedef definition -> is : 1
typedef definition is -> like : 1
definition is like -> an : 1
an ordinary class -> except : 1
ordinary class except -> the : 1
class except the -> name : 1
except the name -> is : 1
name is local -> to : 1
to the outer -> the : 1
to the outer -> and : 1
outer the inner -> class : 1
the inner class -> has : 1
inner class has -> no : 1
special access privileges -> to : 1
access privileges to -> the : 1
privileges to the -> outer : 1
the outer and -> vice : 1
outer and vice -> a : 1
and vice a -> nested : 1
vice a nested -> class : 1
nested class can -> be : 1
be declared within -> its : 1
declared within its -> outer : 1
within its outer -> class : 1
its outer class -> definition : 1
outer class definition -> and : 1
definition and later -> defined : 1
and later defined -> at : 1
later defined at -> namespace : 1
defined at namespace -> in : 1
at namespace in -> that : 1
namespace in that -> the : 1
that the nested -> name : 1
the nested name -> must : 1
nested name must -> be : 1
with the outer -> class : 1
outer class nested -> classes : 1
class nested classes -> are : 1
nested classes are -> fully : 1
classes are fully -> defined : 1
are fully defined -> within : 1
fully defined within -> their : 1
defined within their -> outer : 1
within their outer -> outer : 1
their outer outer -> struct : 1
outer outer struct -> int : 1
outer struct int -> return : 1
struct int return -> class : 1
int return class -> struct : 1
return class struct -> int : 1
class struct int -> int : 1
struct int int -> return : 1
int return is -> more : 1
int return is -> a : 1
return is more -> than : 1
is more than -> a : 1
than a mere -> programming : 1
a mere programming -> the : 1
mere programming the -> full : 1
programming the full -> power : 1
the full power -> of : 1
full power of -> is : 1
power of is -> seen : 1
of is seen -> when : 1
is seen when -> programming : 1
seen when programming -> with : 1
when programming with -> templates : 1
programming with templates -> lie : 1
programming with templates -> is : 1
with templates lie -> at : 1
templates lie at -> the : 1
lie at the -> heart : 1
at the heart -> of : 1
the heart of -> the : 1
heart of the -> standard : 1
standard and is -> a : 1
is a pattern -> for : 2
a pattern for -> creating : 2
a pattern for -> any : 2
pattern for creating -> classes : 1
pattern for creating -> objects : 1
for creating classes -> or : 1
creating classes or -> functions : 1
classes or functions -> as : 1
or functions as -> instances : 1
functions as instances -> of : 1
as instances of -> the : 2
of the template -> at : 1
of the template -> when : 1
of the template -> and : 1
of the template -> terminology : 1
of the template -> in : 1
of the template -> argument : 1
of the template -> but : 1
of the template -> are : 2
of the template -> grant : 2
of the template -> the : 1
of the template -> from : 1
of the template -> is : 1
of the template -> for : 17
of the template -> defines : 1
of the template -> parameters : 2
of the template -> use : 1
of the template -> only : 1
the template at -> compile : 1
template at compile -> similar : 1
at compile similar -> to : 1
compile similar to -> the : 1
to the manner -> in : 1
the manner in -> which : 1
manner in which -> a : 1
which a class -> is : 1
for creating objects -> as : 1
creating objects as -> instances : 1
objects as instances -> of : 1
the class at -> a : 1
class at a -> template : 1
at a template -> takes : 1
a template takes -> one : 1
template takes one -> or : 1
takes one or -> more : 2
or more and -> when : 1
more and when -> you : 1
when you instantiate -> a : 3
you instantiate a -> class : 1
you instantiate a -> the : 2
instantiate a class -> or : 1
class or function -> you : 1
class or function -> an : 1
class or function -> once : 1
class or function -> can : 1
or function you -> must : 1
function you must -> supply : 1
function you must -> provide : 1
must supply arguments -> for : 1
supply arguments for -> the : 1
arguments for the -> the : 1
arguments for the -> template : 2
arguments for the -> leftmost : 1
arguments for the -> long : 1
arguments for the -> remaining : 1
the the classes -> and : 1
classes and functions -> can : 1
and functions can -> have : 1
have different behaviors -> or : 1
different behaviors or -> depending : 1
behaviors or depending -> on : 1
on the this -> style : 1
the this style -> of : 1
of programming is -> often : 2
programming is often -> called : 1
programming is often -> known : 1
often called templates -> can : 1
called templates can -> also : 1
templates can also -> be : 1
to select code -> at : 1
select code at -> compile : 1
code at compile -> affect : 1
at compile affect -> the : 1
compile affect the -> behavior : 1
affect the behavior -> of : 1
behavior of generated -> and : 1
of generated and -> set : 1
generated and set -> this : 1
and set this -> style : 1
set this style -> of : 1
is often known -> as : 1
often known as -> with : 1
often known as -> the : 1
known as with -> templates : 1
as with templates -> is : 1
with templates is -> unlike : 1
with templates is -> beyond : 1
templates is unlike -> traditional : 1
is unlike traditional -> programming : 1
unlike traditional programming -> centers : 1
traditional programming centers -> around : 1
programming centers around -> type : 1
programming centers around -> in : 1
centers around type -> polymorphism : 1
around type polymorphism -> and : 1
type polymorphism and -> virtual : 1
polymorphism and virtual -> programming : 1
and virtual programming -> centers : 1
virtual programming centers -> around : 1
centers around in -> which : 1
around in which -> a : 1
function or class -> is : 2
function or class -> template : 1
or class is -> defined : 1
or class is -> needed : 1
class is defined -> independently : 1
is defined independently -> of : 1
defined independently of -> its : 1
independently of its -> parameters : 1
of its parameters -> can : 1
its parameters can -> be : 1
parameters can be -> or : 1
be or even -> other : 1
or even other -> chapter : 1
even other chapter -> describes : 1
other chapter describes -> the : 1
syntax and semantics -> of : 1
syntax and semantics -> that : 1
and semantics of -> and : 1
semantics of and -> using : 1
of and using -> see : 1
and using see -> for : 1
using see for -> information : 1
information about some -> typical : 1
about some typical -> uses : 1
uses of templates -> in : 1
of templates in -> the : 1
templates in the -> standard : 1
templates in the -> same : 1
the standard see -> for : 4
the standard see -> in : 2
the standard see -> and : 1
the standard see -> my : 1
standard see for -> information : 3
standard see for -> math : 1
precise bnf of -> of : 1
bnf of of -> template : 1
of of template -> declaration : 1
of template declaration -> can : 1
template declaration can -> be : 1
a function function -> class : 3
function function class -> or : 2
function function class -> class : 27
function function class -> tag : 3
function function class -> represents : 1
function class or -> class : 2
or class the -> template : 2
class the template -> declaration : 1
class the template -> name : 1
class the template -> parameter : 2
class the template -> is : 1
class the template -> instantiations : 1
the template declaration -> takes : 1
the template declaration -> and : 1
the template declaration -> from : 1
template declaration takes -> one : 1
declaration takes one -> or : 1
or more which -> can : 1
more which can -> be : 1
be or class -> most : 1
or class most -> you : 1
class most you -> can : 1
use a template -> simply : 1
use a template -> you : 1
a template simply -> by : 1
template simply by -> naming : 1
simply by naming -> the : 1
by naming the -> template : 1
naming the template -> and : 2
the template and -> providing : 1
the template and -> a : 1
the template and -> enclosing : 1
the template and -> the : 2
template and providing -> arguments : 1
and providing arguments -> for : 1
providing arguments for -> the : 1
providing arguments for -> each : 1
for the template -> constant : 1
for the template -> later : 1
for the template -> a : 1
for the template -> defines : 1
for the template -> enclosing : 1
for the template -> parameter : 1
the template constant -> or : 1
template constant or -> template : 1
constant or template -> this : 1
or template this -> is : 1
template this is -> known : 1
template this is -> not : 1
as the you -> can : 1
you can instantiate -> a : 1
you can instantiate -> the : 1
you can instantiate -> for : 1
can instantiate a -> template : 1
instantiate a template -> at : 1
instantiate a template -> by : 1
a template at -> its : 1
a template at -> first : 1
template at its -> point : 1
at its point -> of : 1
its point of -> or : 1
point of or -> declare : 1
of or declare -> a : 1
declare a separate -> instantiation : 1
a separate instantiation -> as : 1
separate instantiation as -> a : 1
instantiation as a -> class : 1
instantiation as a -> macro : 1
as a class -> or : 1
as a class -> see : 1
as a class -> in : 1
or function an -> instance : 1
function an instance -> of : 1
function template creates -> a : 9
function template creates -> an : 1
template creates a -> an : 1
template creates a -> class : 1
template creates a -> function : 7
template creates a -> pointer : 1
creates a an -> instance : 1
a an instance -> of : 1
a class template -> creates : 1
a class template -> has : 5
a class template -> or : 1
a class template -> does : 1
a class template -> are : 1
a class template -> participates : 1
a class template -> is : 3
a class template -> that : 3
a class template -> requires : 1
a class template -> in : 1
a class template -> for : 2
a class template -> contains : 1
class template creates -> a : 1
creates a class -> and : 1
of its template -> lets : 1
its template lets -> you : 1
template lets you -> define : 2
template lets you -> compile : 1
lets you define -> a : 2
or function once -> for : 1
function once for -> a : 1
once for a -> wide : 1
for a wide -> range : 1
for a wide -> variety : 1
for a wide -> character : 1
for a wide -> function : 1
a wide range -> of : 1
wide range of -> template : 1
range of template -> but : 1
of template but -> sometimes : 1
template but sometimes -> you : 1
but sometimes you -> need : 1
but sometimes you -> have : 1
sometimes you need -> to : 1
need to customize -> a : 1
to customize a -> template : 1
customize a template -> for : 1
a template for -> particular : 1
a template for -> specific : 1
a template for -> all : 1
a template for -> a : 1
template for particular -> this : 1
for particular this -> is : 1
particular this is -> known : 1
as the a -> template : 1
as the a -> substring : 1
the a template -> as : 1
the a template -> declaration : 1
a template as -> its : 1
template as its -> name : 1
as its name -> is : 1
as its name -> permits : 1
its name is -> a : 1
its name is -> function : 1
case of the -> template : 1
the template when -> you : 1
template when you -> instantiate : 1
instantiate a the -> compiler : 2
uses the template -> arguments : 2
the template arguments -> to : 2
the template arguments -> from : 2
the template arguments -> explicitly : 1
the template arguments -> of : 2
the template arguments -> for : 1
the template arguments -> are : 3
template arguments to -> pick : 2
template arguments to -> a : 1
arguments to pick -> a : 1
arguments to pick -> which : 1
pick a or -> if : 1
a or if -> no : 1
or if no -> specialization : 1
or if no -> matching : 1
or if no -> stream : 1
or if no -> characters : 2
or if no -> modifier : 1
or if no -> character : 2
if no specialization -> matches : 1
no specialization matches -> the : 1
specialization matches the -> the : 1
matches the the -> original : 1
the the original -> template : 1
the the original -> exception : 1
the the original -> memory : 1
the original template -> a : 1
original template a -> specialization : 1
template a specialization -> can : 2
a specialization can -> be : 2
specialization can be -> total : 1
specialization can be -> all : 1
can be total -> or : 1
be total or -> a : 1
total or a -> specifies : 1
or a specifies -> values : 1
a specifies values -> for : 1
specifies values for -> all : 1
values for all -> of : 1
template and a -> specifies : 1
template and a -> function : 1
template and a -> few : 3
and a specifies -> only : 1
a specifies only -> some : 1
specifies only some -> of : 1
only some of -> the : 3
some of the -> template : 3
some of the -> parameters : 1
some of the -> broad : 1
some of the -> member : 1
some of the -> items : 1
some of the -> return : 1
some of the -> interesting : 1
some of the -> other : 1
some of the -> more : 2
some of the -> functions : 1
the template terminology -> used : 1
template terminology used -> in : 1
terminology used in -> this : 1
this book reflects -> the : 1
book reflects the -> terminology : 1
reflects the terminology -> that : 1
the terminology that -> many : 1
terminology that many -> programmers : 1
that many programmers -> have : 1
many programmers have -> even : 1
programmers have even -> though : 1
have even though -> that : 1
even though that -> terminology : 1
though that terminology -> differs : 1
that terminology differs -> slightly : 1
terminology differs slightly -> from : 1
differs slightly from -> that : 1
differs slightly from -> constant : 1
slightly from that -> used : 1
from that used -> in : 1
that used in -> the : 1
in the means -> an : 1
the means an -> instance : 1
of a also -> refers : 1
a also refers -> to : 1
to an instance -> of : 1
of a when -> you : 1
when you declare -> a : 1
declare a special -> case : 1
of a that -> is : 1
of a that -> labels : 1
that is known -> as : 1
known as programmers -> prefer : 1
as programmers prefer -> to : 1
programmers prefer to -> keep : 1
prefer to keep -> specialization : 1
to keep specialization -> and : 1
keep specialization and -> instantiation : 1
specialization and instantiation -> as : 1
and instantiation as -> separate : 1
instantiation as separate -> concepts : 1
as separate concepts -> and : 1
separate concepts and -> separate : 1
concepts and separate -> and : 1
and separate and -> i : 1
and separate and -> pointers : 2
separate and i -> have : 1
and i have -> adopted : 1
i have adopted -> the : 1
have adopted the -> simpler : 1
adopted the simpler -> terminology : 1
the simpler terminology -> for : 1
simpler terminology for -> this : 1
terminology for this -> that : 1
for this that -> template : 1
this that template -> declaration : 1
that template declaration -> defines : 1
template declaration defines -> only : 1
declaration defines only -> the : 1
defines only the -> a : 1
defines only the -> the : 1
only the a -> specialization : 1
the a specialization -> defines : 1
a specialization defines -> a : 1
specialization defines a -> pattern : 1
defines a pattern -> that : 1
defines a pattern -> for : 2
a pattern that -> applies : 1
pattern that applies -> to : 1
that applies to -> a : 1
a specific set -> of : 2
specific set of -> template : 2
set of template -> only : 1
set of template -> deduced : 1
set of template -> they : 1
set of template -> parameters : 1
set of template -> a : 2
set of template -> arguments : 1
of template only -> by : 1
template only by -> instantiating : 1
only by instantiating -> a : 1
by instantiating a -> template : 1
a template do -> you : 1
template do you -> declare : 1
do you declare -> or : 1
you declare or -> define : 1
declare or define -> a : 2
or define a -> function : 1
or define a -> see : 1
define a function -> or : 1
define a function -> template : 1
function or when -> you : 1
to pick which -> pattern : 1
pick which pattern -> to : 1
which pattern to -> a : 1
pattern to a -> specialization : 1
to a specialization -> or : 1
a specialization or -> the : 1
specialization or the -> main : 1
or the main -> a : 1
the main a -> template : 1
main a template -> is : 1
a template is -> more : 1
a template is -> declared : 1
a template is -> a : 1
a template is -> if : 1
a template is -> but : 1
a template is -> can : 1
a template is -> specialized : 1
template is more -> difficult : 1
is more difficult -> than : 2
more difficult than -> writing : 1
more difficult than -> working : 1
difficult than writing -> a : 1
than writing a -> class : 1
writing a class -> or : 1
writing a class -> that : 1
class or the -> template : 1
or the template -> can : 1
template can be -> instantiated : 2
template can be -> a : 1
template can be -> entirely : 1
can be instantiated -> in : 1
can be instantiated -> if : 1
be instantiated in -> almost : 1
instantiated in almost -> any : 1
in almost any -> and : 1
almost any and -> the : 1
and the context -> can : 1
context can affect -> how : 1
can affect how -> the : 1
affect how the -> template : 1
how the template -> definition : 1
how the template -> name : 1
the template definition -> is : 1
template definition is -> name : 1
definition is name -> lookup : 1
is name lookup -> rules : 1
lookup rules are -> more : 1
lookup rules are -> different : 1
rules are more -> complicated : 1
are more complicated -> for : 1
are more complicated -> than : 1
more complicated for -> templates : 1
complicated for templates -> than : 1
for templates than -> for : 1
templates than for -> and : 1
than for and -> using : 1
for and using -> shows : 1
and using shows -> several : 1
using shows several -> different : 1
kinds of and -> their : 1
kinds of and -> class : 1
of and their -> and : 1
and their and -> using : 1
their and using -> template : 1
and using template -> declaration : 1
using template declaration -> of : 1
template declaration of -> class : 1
declaration of class -> point : 1
of class point -> typedef : 1
of class point -> x : 1
point typedef t -> const : 1
typedef t const -> t : 1
t const t -> const : 1
const t const -> return : 1
t const return -> return : 3
t const return -> pi : 1
t const return -> t : 7
t const return -> void : 1
t const return -> a : 1
t const return -> for : 1
const return return -> void : 4
const return return -> const : 4
const return return -> iterator : 2
const return return -> return : 1
return return void -> t : 2
return return void -> int : 2
return return void -> const : 1
return void t -> const : 1
return void t -> instantiate : 1
void t const -> return : 2
void t instantiate -> strange : 1
t instantiate strange -> specialize : 1
instantiate strange specialize -> to : 1
strange specialize to -> use : 1
specialize to use -> instead : 1
instead of const -> class : 1
of const class -> typedef : 1
const class typedef -> int : 1
class typedef int -> int : 1
class typedef int -> static : 1
void int instance -> of : 1
int instance of -> the : 1
of the specialized -> instance : 1
of the specialized -> class : 1
the specialized instance -> of : 1
specialized instance of -> the : 1
of the general -> using : 1
the general using -> long : 1
general using long -> as : 1
using long as -> the : 1
long as the -> template : 1
long as the -> return : 1
long as the -> file : 1
long as the -> object : 1
as the template -> argument : 1
as the template -> struct : 1
as the template -> or : 1
as the template -> parameter : 1
as the template -> see : 2
as the template -> the : 1
as the template -> an : 2
as the template -> all : 2
as the template -> your : 1
the template argument -> function : 1
the template argument -> types : 1
the template argument -> the : 1
the template argument -> demo : 1
the template argument -> list : 1
template argument function -> template : 1
argument function template -> t : 1
function template t -> return : 2
template t return -> x : 2
t return x -> namespace : 1
t return x -> class : 1
return x namespace -> explicit : 1
x namespace explicit -> instantiation : 1
namespace explicit instantiation -> const : 1
explicit instantiation const -> int : 1
instantiation const int -> implicit : 1
instantiation const int -> overload : 1
const int implicit -> instantiation : 1
int implicit instantiation -> const : 1
implicit instantiation const -> int : 1
const int overload -> with : 1
int overload with -> another : 1
overload with another -> function : 1
with another function -> typename : 1
another function typename -> floatt : 1
function typename floatt -> return : 1
typename floatt return -> int : 1
floatt return int -> call : 1
return int call -> instance : 1
int call instance -> of : 1
call instance of -> function : 1
instance of function -> compiler : 1
of function compiler -> deduces : 1
function compiler deduces -> second : 1
compiler deduces second -> template : 1
deduces second template -> argument : 1
second template argument -> from : 1
template argument from -> the : 1
type of double -> x : 1
of double x -> x : 1
double x x -> prints : 1
x prints declaration -> begins : 1
prints declaration begins -> with : 1
a template header -> followed : 1
a template header -> that : 1
template header followed -> by : 2
header followed by -> a : 4
function declaration or -> or : 1
function declaration or -> default : 1
declaration or or -> a : 1
a class declaration -> or : 3
class declaration or -> template : 1
class declaration or -> struct : 1
class declaration or -> the : 1
class declaration or -> names : 1
declaration or template -> declarations : 1
or template declarations -> can : 1
template declarations can -> appear : 1
can appear only -> at : 1
can appear only -> in : 1
can appear only -> on : 1
appear only at -> namespace : 1
only at namespace -> or : 1
at namespace or -> class : 1
the template name -> must : 1
the template name -> and : 2
the template name -> with : 1
the template name -> can : 1
template name must -> be : 1
be unique in -> its : 1
be unique in -> the : 1
unique in its -> scope : 1
in its scope -> for : 1
its scope for -> overloaded : 1
scope for overloaded -> header : 1
for overloaded header -> starts : 1
overloaded header starts -> with : 1
header starts with -> the : 1
by the template -> parameters : 1
by the template -> parameter : 1
by the template -> and : 2
by the template -> two : 1
by the template -> see : 1
template parameters enclosed -> in : 1
parameters enclosed in -> angle : 1
enclosed in angle -> brackets : 1
in angle brackets -> multiple : 1
in angle brackets -> and : 2
in angle brackets -> if : 1
angle brackets multiple -> parameters : 1
brackets multiple parameters -> are : 1
multiple parameters are -> separated : 1
parameters are separated -> by : 1
separated by the -> syntax : 1
by the syntax -> are : 1
the syntax are -> three : 1
syntax are three -> kinds : 1
are three kinds -> of : 2
of and class -> similar : 1
and class similar -> to : 1
class similar to -> a : 1
function a template -> parameter : 1
a template parameter -> has : 1
a template parameter -> the : 1
a template parameter -> for : 1
a template parameter -> name : 1
a template parameter -> if : 1
a template parameter -> specifies : 1
a template parameter -> is : 1
template parameter has -> an : 1
parameter has an -> optional : 1
has an optional -> name : 1
an optional name -> and : 1
optional name and -> an : 1
an optional templates -> cannot : 1
optional templates cannot -> have : 1
templates cannot have -> default : 1
have default template -> if : 1
default template if -> a : 1
template if a -> class : 2
class template has -> member : 1
class template has -> separate : 1
class template has -> fewer : 1
class template has -> its : 1
class template has -> any : 1
class template has -> several : 1
template has member -> definitions : 1
has member definitions -> that : 1
member definitions that -> are : 2
definitions that are -> outside : 1
definitions that are -> separate : 1
that are outside -> the : 3
are outside the -> class : 1
are outside the -> namespace : 1
are outside the -> valid : 1
the class only -> the : 1
class only the -> class : 1
class only the -> entire : 1
class template takes -> default : 1
class template takes -> a : 1
template takes default -> the : 1
takes default the -> individual : 1
default the individual -> member : 1
the individual member -> definitions : 1
individual member definitions -> do : 1
member definitions do -> if : 1
definitions do if -> a : 1
do if a -> default : 1
if a default -> argument : 1
argument is it -> is : 1
is it is -> preceded : 1
is it is -> copied : 2
is it is -> false : 1
is it is -> thousands : 1
is it is -> prefaced : 1
is it is -> obtained : 1
is it is -> log : 3
is it is -> usually : 1
is it is -> in : 1
is it is -> initially : 1
it is preceded -> by : 1
is preceded by -> an : 1
is preceded by -> a : 1
preceded by an -> equal : 1
only the rightmost -> parameters : 1
the rightmost parameters -> can : 1
the rightmost parameters -> for : 1
rightmost parameters can -> have : 1
if any parameter -> has : 1
any parameter has -> a : 1
parameter has a -> default : 1
has a default -> all : 1
has a default -> handler : 1
to its right -> must : 1
its right must -> also : 1
right must also -> have : 1
must also have -> default : 1
also have default -> members : 1
have default members -> of : 1
default members of -> a : 1
class shows valid -> and : 1
shows valid and -> invalid : 1
valid and invalid -> member : 1
and invalid member -> members : 1
invalid member members -> of : 1
member members of -> a : 1
a class default -> argument : 1
class default argument -> for : 1
argument for template -> parameter : 1
for template parameter -> a : 1
template parameter a -> typename : 1
parameter a typename -> a : 1
a typename a -> class : 1
typename a class -> hashset : 1
a class hashset -> bool : 1
class hashset bool -> do : 1
hashset bool do -> not : 1
bool do not -> use : 1
not use default -> argument : 1
use default argument -> here : 1
default argument here -> typename : 1
argument here typename -> a : 1
here typename a -> bool : 1
typename a bool -> return : 1
a bool return -> ok : 1
return ok typename -> template : 1
ok typename template -> header : 1
typename template header -> defines : 1
template header defines -> the : 1
header defines the -> template : 1
defines the template -> name : 1
template name and -> the : 2
template name and -> arguments : 1
of a parameter -> name : 2
a parameter name -> extends : 1
a parameter name -> can : 1
a parameter name -> for : 1
a parameter name -> is : 1
parameter name extends -> from : 1
name extends from -> its : 1
extends from its -> declaration : 1
from its declaration -> to : 1
its declaration to -> the : 1
declaration to the -> end : 1
the class or -> a : 1
the class or -> in : 2
the class or -> class : 1
or a parameter -> name : 1
parameter name can -> be : 1
used in subsequent -> template : 1
in subsequent template -> parameters : 1
subsequent template parameters -> in : 1
template parameters in -> the : 2
parameters in the -> same : 1
parameters in the -> template : 1
the same template -> header : 1
the same template -> then : 1
the same template -> parameter : 1
the same template -> illustrates : 1
the same template -> arguments : 2
the same template -> the : 1
the same template -> with : 1
same template header -> as : 1
template header as -> in : 1
header as in -> members : 1
as in members -> of : 1
in members of -> a : 1
the template parameter -> name : 1
the template parameter -> is : 27
the template parameter -> for : 1
the template parameter -> even : 1
the template parameter -> in : 1
the template parameter -> changes : 1
the template parameter -> as : 1
the template parameter -> must : 1
the template parameter -> of : 1
the template parameter -> specifies : 1
the template parameter -> to : 2
the template parameter -> can : 4
template parameter name -> must : 1
template parameter name -> hides : 1
parameter name must -> be : 1
unique in the -> template : 1
in the template -> declaration : 1
in the template -> header : 1
in the template -> declares : 1
template declaration and -> cannot : 1
template declaration and -> all : 1
declaration and cannot -> be : 1
redeclared in its -> if : 1
in its if -> a : 1
its if a -> class : 1
template has separate -> definitions : 1
template has separate -> template : 1
separate definitions for -> its : 1
definitions for its -> each : 1
for its each -> member : 1
its each member -> definition : 1
each member definition -> is : 1
member definition is -> free : 1
definition is free -> to : 1
to use different -> names : 1
use different names -> for : 1
different names for -> the : 1
names for the -> template : 1
names for the -> macro : 1
names for the -> argument : 2
the template later -> in : 1
template later in -> this : 1
for more are -> three : 1
for more are -> five : 1
more are three -> kinds : 1
kinds of template -> in : 1
of template in -> the : 1
function type must -> be : 1
be an or -> when : 1
an or when -> the : 1
an or when -> an : 1
or when the -> template : 1
or when the -> next : 2
or when the -> input : 1
when the template -> is : 5
when the template -> arguments : 1
when the template -> parameter : 1
the template is -> the : 3
the template is -> instantiated : 1
the template is -> a : 2
the template is -> not : 1
the template is -> later : 1
the template is -> specialized : 1
the template is -> plain : 1
the template is -> needed : 1
the template is -> dependent : 1
the template is -> when : 1
the template is -> declared : 1
the template is -> but : 1
the template is -> at : 1
the template is -> for : 1
the template is -> expanded : 1
the template is -> necessary : 1
the template is -> an : 1
template is the -> argument : 3
template is the -> most : 2
template is the -> root : 1
template is the -> base : 6
is the argument -> must : 5
enumeration the address -> of : 1
of a named -> object : 1
of a named -> the : 3
a named object -> or : 1
named object or -> function : 1
or function with -> external : 1
function with external -> or : 1
with external or -> the : 1
external or the -> address : 1
or the address -> of : 1
of a struct -> name : 1
a struct name -> unsigned : 1
struct name unsigned -> const : 1
name unsigned const -> return : 1
unsigned const return -> char : 1
const return char -> that : 1
return char that -> a : 1
char that a -> string : 1
that a string -> literal : 1
literal is an -> unnamed : 1
is an unnamed -> object : 1
an unnamed object -> with : 1
unnamed object with -> internal : 1
object with internal -> so : 1
with internal so -> you : 1
internal so you -> cannot : 1
cannot use it -> as : 2
a template void -> s : 1
template void s -> error : 1
void s error -> const : 1
s error const -> char : 1
error const char -> can : 1
const char can -> be : 1
char can be -> elaborated : 1
can be elaborated -> type : 1
be elaborated type -> specifiers : 1
specifiers that start -> with : 1
start with that -> followed : 1
with that followed -> by : 1
that followed by -> a : 1
a qualified type -> is : 1
a qualified type -> name : 1
qualified type is -> followed : 1
type is followed -> by : 1
by a plain -> the : 1
a plain the -> template : 1
plain the template -> parameter : 1
template parameter is -> a : 2
template parameter is -> for : 1
template parameter is -> an : 1
template parameter is -> the : 26
type as described -> for : 1
described for more -> information : 1
about this use -> of : 1
use of see -> later : 1
of see later -> in : 2
in this int -> return : 1
this int return -> with : 1
int return with -> the : 1
return with the -> keyword : 1
return with the -> correct : 1
by the optional -> parameter : 1
the optional parameter -> typename : 1
optional parameter typename -> keyword : 1
parameter typename keyword -> can : 1
typename keyword can -> be : 1
used in place -> of : 1
place of and -> has : 1
same meaning in -> this : 1
same meaning in -> all : 2
meaning in this -> useful : 1
in this useful -> convention : 1
this useful convention -> is : 1
to use when -> the : 1
to use when -> reading : 1
to use when -> implementing : 1
use when the -> argument : 1
when the argument -> must : 1
when the argument -> can : 1
class and when -> the : 1
and when the -> argument : 1
and when the -> last : 1
and when the -> destructor : 1
and when the -> displaycontext : 1
and when the -> weather : 1
the argument can -> be : 2
be any when -> the : 1
any when the -> template : 1
type a list -> of : 1
type a list -> is : 1
specifiers with optional -> and : 1
with optional and -> function : 1
optional and function -> in : 1
and function in -> the : 1
following the template -> is : 1
template is instantiated -> with : 1
is instantiated with -> as : 1
instantiated with as -> the : 1
with as the -> template : 2
with as the -> buffer : 1
with as the -> first : 1
with as the -> initial : 5
with as the -> a : 1
the template struct -> point : 1
template struct point -> t : 1
struct point t -> long : 1
struct point t -> use : 1
struct point t -> or : 1
point t long -> is : 1
t long is -> followed : 1
long is followed -> by : 1
qualified type name -> instead : 1
type name instead -> of : 1
name instead of -> a : 1
of a plain -> it : 1
of a plain -> operator : 1
of a plain -> specifier : 1
of a plain -> you : 1
a plain it -> declares : 1
a plain it -> can : 2
plain it declares -> a : 1
it declares a -> value : 1
declares a value -> parameter : 1
a value parameter -> of : 1
value parameter of -> that : 1
parameter of that -> as : 1
of that as -> described : 1
that as described -> be : 1
as described be -> a : 1
described be a -> class : 1
a class it -> has : 1
a class it -> associates : 1
class it has -> the : 1
form of a -> template : 2
of a template -> class : 1
of a template -> and : 1
of a template -> is : 1
of a template -> can : 1
of a template -> requires : 1
of a template -> this : 1
a template class -> template : 1
template class template -> class : 1
template class template -> template : 1
template class template -> for : 4
class template class -> the : 1
class template class -> circle : 1
class template class -> keyword : 1
class template class -> alloc : 1
class template class -> template : 4
template class the -> template : 1
a class erase -> all : 1
class erase all -> occurrences : 1
erase all occurrences -> of : 1
all occurrences of -> item : 1
all occurrences of -> complexity : 1
all occurrences of -> a : 2
all occurrences of -> one : 1
all occurrences of -> in : 1
all occurrences of -> with : 6
all occurrences of -> from : 1
all occurrences of -> performance : 1
all occurrences of -> the : 1
occurrences of item -> from : 1
of item from -> a : 1
item from a -> sequence : 1
item from a -> call : 1
item from a -> container : 1
item from a -> range : 1
from a sequence -> typename : 1
from a sequence -> shows : 1
from a sequence -> erase : 1
from a sequence -> container : 1
a sequence typename -> class : 1
sequence typename class -> typename : 1
typename class typename -> typename : 3
class typename typename -> void : 1
class typename typename -> typename : 2
typename void const -> use : 1
typename void const -> namespace : 1
typename void const -> unsigned : 1
typename void const -> const : 2
void const use -> a : 1
const use a -> template : 1
a template you -> must : 1
template you must -> create : 1
must create an -> instance : 1
of the either -> explicitly : 1
of the either -> abbreviated : 1
the either explicitly -> naming : 1
either explicitly naming -> the : 1
explicitly naming the -> template : 1
template and enclosing -> a : 1
and enclosing a -> list : 1
enclosing a list -> of : 1
list of template -> arguments : 1
list of template -> and : 1
of template arguments -> in : 1
of template arguments -> to : 1
template arguments in -> angle : 2
template arguments in -> a : 1
template arguments in -> multiple : 1
arguments in angle -> or : 1
arguments in angle -> brackets : 2
in angle or -> implicitly : 1
angle or implicitly -> letting : 1
or implicitly letting -> the : 1
implicitly letting the -> compiler : 1
letting the compiler -> deduce : 2
the compiler deduce -> the : 6
compiler deduce the -> template : 3
compiler deduce the -> specialized : 1
compiler deduce the -> character : 1
compiler deduce the -> container : 1
deduce the template -> arguments : 2
deduce the template -> argument : 1
deduce the template -> parameters : 1
template arguments from -> for : 1
template arguments from -> the : 1
arguments from for -> a : 1
from for a -> function : 1
function in either -> the : 1
in either the -> compiler : 1
either the compiler -> must : 1
must know about -> a : 1
know about a -> template : 1
about a template -> declaration : 1
a template declaration -> before : 1
a template declaration -> header : 2
a template declaration -> for : 1
a template declaration -> the : 1
a template declaration -> contains : 1
a template declaration -> or : 1
a template declaration -> and : 1
template declaration before -> the : 1
declaration before the -> template : 1
before the template -> is : 2
template is a -> template : 3
template is a -> dependent : 1
template is a -> member : 1
template is a -> binary : 19
template is a -> unary : 8
template is a -> convenient : 3
template is a -> function : 2
template is a -> base : 1
template is a -> facet : 16
template is a -> manipulator : 3
template is a -> standard : 3
is a template -> is : 1
is a template -> declaration : 2
is a template -> definition : 1
is a template -> name : 1
is a template -> inside : 1
is a template -> all : 1
is a template -> specialization : 1
is a template -> for : 1
is a template -> a : 1
template is declared -> in : 1
template is declared -> or : 1
declared in an -> file : 1
in an file -> or : 1
an file or -> the : 1
file or the -> header : 1
or the header -> declares : 1
or the header -> has : 1
the header declares -> the : 1
the header declares -> integer : 1
the header declares -> versions : 1
header declares the -> function : 1
header declares the -> generic : 1
header declares the -> class : 6
header declares the -> but : 1
header declares the -> and : 2
header declares the -> eight : 1
header declares the -> input : 1
header declares the -> output : 1
header declares the -> container : 1
the function or -> class : 1
the function or -> functor : 1
or class template -> and : 1
or class template -> hide : 1
or class template -> that : 2
or class template -> a : 1
or class template -> instance : 1
or class template -> contains : 1
class template and -> possibly : 1
class template and -> it : 1
class template and -> specializations : 1
class template and -> a : 3
class template and -> related : 1
class template and -> its : 1
template and possibly -> provides : 1
and possibly provides -> the : 1
possibly provides the -> definition : 1
provides the definition -> of : 1
the function template -> or : 1
the function template -> is : 3
the function template -> with : 1
the function template -> takes : 1
the function template -> assigns : 2
the function template -> two : 1
the function template -> a : 1
the function template -> for : 11
the function template -> does : 1
the function template -> moves : 1
the function template -> tests : 1
the function template -> retrieves : 1
function template or -> the : 1
function template or -> all : 1
function template or -> supplied : 1
template or the -> definitions : 1
or the definitions -> of : 1
definitions of all -> the : 1
all the members -> of : 3
the class see -> later : 1
class see later -> in : 1
chapter for details -> about : 1
about the files -> that : 1
the files that -> declare : 1
files that declare -> and : 1
that declare and -> define : 1
and define template -> instance : 1
define template instance -> must : 1
template instance must -> provide : 1
instance must provide -> an : 1
must provide an -> argument : 1
must provide an -> type : 1
provide an argument -> for : 1
an argument for -> each : 3
argument for each -> template : 3
argument for each -> parameter : 1
for each template -> if : 1
for each template -> you : 1
for each template -> parameter : 1
for each template -> the : 1
each template if -> a : 1
template has fewer -> arguments : 2
has fewer arguments -> than : 2
fewer arguments than -> the : 2
arguments than the -> remaining : 2
than the remaining -> parameters : 1
than the remaining -> arguments : 1
the remaining parameters -> must : 1
remaining parameters must -> have : 1
parameters must have -> default : 1
have default which -> are : 1
default which are -> used : 1
which are used -> for : 1
are used for -> the : 1
are used for -> and : 1
are used for -> informational : 1
used for the -> template : 1
used for the -> and : 1
used for the -> infinity : 1
the template a -> function : 1
the template a -> partial : 1
template a function -> template : 1
template a function -> parameter : 1
function template has -> fewer : 1
the remaining arguments -> are : 3
remaining arguments are -> deduced : 1
remaining arguments are -> printed : 1
remaining arguments are -> when : 1
arguments are deduced -> from : 1
are deduced from -> the : 1
deduced from the -> context : 1
deduced from the -> actual : 1
from the context -> of : 1
function call explained -> in : 1
call explained in -> the : 1
the next if -> the : 1
the next if -> there : 1
next if the -> arguments : 1
if the arguments -> cannot : 1
the arguments cannot -> be : 1
be the compiler -> reports : 1
reports an see -> later : 1
an see later -> in : 1
for more template -> defines : 1
more template defines -> a : 1
template defines a -> pattern : 2
pattern for any -> number : 2
for any number -> of : 2
number of functions -> whose : 1
number of functions -> for : 2
of functions whose -> definitions : 1
functions whose definitions -> depend : 1
whose definitions depend -> on : 2
definitions depend on -> the : 2
the template you -> can : 3
the template you -> have : 2
template you can -> overload : 1
template you can -> do : 1
template you can -> also : 2
can overload a -> function : 1
function template with -> a : 1
function template with -> the : 1
function template with -> template : 1
function template with -> another : 1
function or with -> other : 1
or with other -> function : 1
other function you -> can : 1
you can even -> have : 1
can even have -> a : 1
even have a -> function : 1
name and templates -> are : 1
and templates are -> used : 1
templates are used -> throughout : 2
are used throughout -> the : 4
are used throughout -> in : 1
used throughout the -> standard : 3
used throughout the -> a : 1
used throughout the -> formatting : 1
used throughout the -> it : 1
throughout the standard -> the : 1
throughout the standard -> library : 1
throughout the standard -> complete : 1
the standard the -> function : 1
the standard the -> programmer : 1
the standard the -> iterators : 1
the standard the -> standard : 2
the standard the -> subset : 1
standard the function -> templates : 1
the function templates -> are : 1
function templates are -> the : 1
function templates are -> instantiated : 1
templates are the -> standard : 1
are the standard -> algorithms : 1
are the standard -> containers : 1
are the standard -> mandates : 1
are the standard -> header : 1
standard algorithms as -> and : 1
algorithms as and -> a : 1
algorithms as and -> be : 1
as and a -> function : 1
as and a -> statement : 1
as and a -> putback : 1
function template using -> a : 1
template using a -> template : 1
using a template -> declaration : 1
using a template -> instantiation : 1
template declaration header -> followed : 2
declaration header followed -> by : 2
declaration or default -> template : 1
or default template -> arguments : 1
default template arguments -> are : 1
default template arguments -> for : 1
template arguments are -> not : 2
template arguments are -> bound : 1
template arguments are -> the : 1
template arguments are -> interpreted : 1
are not allowed -> in : 1
not allowed in -> a : 1
not allowed in -> but : 1
allowed in a -> function : 1
function template declaration -> or : 1
function template declaration -> is : 1
template declaration or -> in : 1
template declaration or -> you : 1
template declaration for -> a : 1
declaration for a -> function : 1
function that rounds -> a : 1
function that rounds -> off : 1
that rounds a -> number : 1
rounds a number -> of : 1
number of type -> to : 1
of type to -> decimal : 1
type to decimal -> places : 1
to decimal places -> example : 1
decimal places example -> for : 1
places example for -> the : 1
example for the -> definition : 1
definition of and -> is : 1
a template definition -> for : 1
a template definition -> that : 1
template definition for -> a : 1
that returns the -> minimum : 1
that returns the -> parameter : 1
that returns the -> logical : 2
returns the minimum -> of : 2
the minimum of -> two : 3
the minimum of -> a : 1
the minimum of -> and : 2
minimum of two -> round : 1
minimum of two -> the : 1
minimum of two -> const : 1
of two round -> off : 1
two round off -> a : 1
round off a -> value : 2
round off a -> to : 1
round off a -> functional : 1
off a value -> of : 1
off a value -> to : 1
value of type -> t : 1
value of type -> the : 1
type t to -> n : 1
t to n -> typename : 1
to n typename -> t : 1
n typename t -> return : 1
typename t return -> the : 1
t return the -> minimum : 1
return the minimum -> of : 1
return the minimum -> and : 1
minimum of a -> and : 1
a and t -> t : 1
and t t -> return : 1
t t return -> a : 3
t t return -> specialization : 1
t return a -> b : 2
t return a -> t : 1
return a b -> a : 3
return a b -> keyword : 1
a b a -> use : 1
a b a -> struct : 1
a b a -> typedef : 1
b a use -> a : 1
a use a -> you : 1
a use a -> bare : 1
a use a -> string : 1
you must specify -> a : 1
you must specify -> the : 1
you must specify -> them : 1
you must specify -> using : 1
must specify a -> template : 1
specify a template -> instance : 1
a template instance -> by : 1
a template instance -> at : 1
a template instance -> or : 1
a template instance -> applies : 1
a template instance -> to : 1
template instance by -> providing : 1
instance by providing -> arguments : 1
by providing arguments -> for : 1
arguments for each -> template : 1
each template you -> can : 1
can do this -> by : 1
do this by -> listing : 1
this by listing -> arguments : 1
by listing arguments -> inside : 1
listing arguments inside -> angle : 1
arguments inside angle -> x : 1
inside angle x -> it : 1
angle x it -> is : 1
x it is -> more : 1
it is more -> common : 1
is more common -> to : 1
more common to -> let : 1
common to let -> the : 1
to let the -> compiler : 1
template argument types -> from : 1
argument types from -> the : 1
types from the -> types : 1
from the types -> of : 1
the function x -> calls : 1
function x calls -> argument : 1
x calls argument -> later : 1
calls argument later -> in : 1
argument later in -> this : 1
chapter for signature -> of : 1
for signature of -> a : 1
signature of a -> function : 1
function template includes -> the : 1
template includes the -> template : 1
includes the template -> parameters : 1
template parameters even -> if : 1
parameters even if -> those : 1
if those parameters -> are : 1
those parameters are -> never : 1
parameters are never -> used : 1
are never used -> in : 1
never used in -> the : 1
type or parameter -> instances : 1
or parameter instances -> of : 1
parameter instances of -> different : 1
instances of different -> template : 1
of different template -> specializations : 1
different template specializations -> produce : 1
template specializations produce -> distinct : 1
specializations produce distinct -> the : 1
produce distinct the -> following : 1
distinct the following -> example : 1
following example has -> two : 1
example has two -> function : 1
has two function -> both : 1
two function both -> named : 1
function both named -> because : 1
both named because -> their : 1
named because their -> template : 1
because their template -> parameters : 1
their template parameters -> the : 1
template parameters the -> two : 1
parameters the two -> lines : 1
the two lines -> declare : 1
two lines declare -> two : 1
lines declare two -> separate : 1
declare two separate -> function : 1
two separate function -> void : 1
separate function void -> x : 1
function void x -> typename : 1
void x typename -> void : 1
x typename void -> x : 1
typename void x -> such : 1
void x such -> function : 1
x such function -> templates : 1
such function templates -> are : 1
templates are instantiated -> in : 1
are instantiated in -> separate : 1
instantiated in separate -> you : 1
in separate you -> must : 1
separate you must -> specify : 1
must specify the -> template : 1
must specify the -> size : 1
specify the template -> arguments : 1
template arguments explicitly -> to : 1
arguments explicitly to -> avoid : 1
explicitly to avoid -> overload : 1
to avoid overload -> function : 1
avoid overload function -> signature : 1
overload function signature -> also : 1
function signature also -> includes : 1
signature also includes -> expressions : 1
also includes expressions -> that : 1
includes expressions that -> use : 1
expressions that use -> any : 1
that use any -> of : 2
following two function -> templates : 1
two function templates -> overload : 1
function templates overload -> the : 1
templates overload the -> function : 1
overload the function -> parameter : 1
overload the function -> to : 1
overload the function -> template : 1
function parameter type -> is : 1
parameter type is -> an : 1
template parameter for -> is : 1
template parameter for -> a : 1
parameter for is -> an : 1
expression that depends -> on : 1
depends on template -> parameter : 1
on template parameter -> or : 1
template parameter or -> struct : 1
template parameter or -> template : 1
template parameter or -> names : 1
parameter or struct -> demo : 1
or struct demo -> void : 1
demo void void -> as : 1
demo void void -> calls : 1
void void as -> you : 1
void as you -> can : 1
multiple declarations not -> of : 1
declarations not of -> a : 1
not of a -> single : 1
not of a -> type : 1
a single you -> can : 1
a single you -> are : 1
single you can -> declare : 1
can declare the -> same : 1
same function template -> multiple : 1
function template multiple -> times : 1
template multiple times -> using : 1
multiple times using -> expressions : 1
times using expressions -> that : 1
using expressions that -> differ : 1
expressions that differ -> only : 1
template parameter even -> if : 1
parameter even if -> the : 1
in separate the -> compiler : 1
separate the compiler -> and : 1
and linker ensure -> that : 2
linker ensure that -> the : 2
ensure that the -> program : 4
ensure that the -> output : 3
ensure that the -> entire : 1
ensure that the -> sequence : 1
ensure that the -> destination : 1
ensure that the -> argument : 2
ensure that the -> file : 1
ensure that the -> construction : 1
ensure that the -> memory : 1
ensure that the -> buffer : 1
ensure that the -> next : 1
the program ends -> up : 2
program ends up -> with : 2
ends up with -> a : 2
up with a -> single : 2
up with a -> different : 1
of each template -> the : 2
each template the -> expressions : 1
each template the -> arguments : 1
each template the -> following : 1
template the expressions -> differ : 1
the expressions differ -> by : 1
expressions differ by -> more : 1
differ by more -> than : 1
by more than -> just : 1
by more than -> one : 2
more than just -> the : 1
than just the -> parameter : 1
just the parameter -> they : 1
the parameter they -> result : 1
parameter they result -> in : 1
they result in -> distinct : 1
result in distinct -> so : 1
in distinct so -> you : 1
distinct so you -> can : 1
can have distinct -> function : 1
have distinct function -> template : 1
distinct function template -> if : 1
function template if -> the : 1
template if the -> argument : 1
if the argument -> expressions : 1
if the argument -> is : 3
the argument expressions -> result : 1
argument expressions result -> in : 1
expressions result in -> the : 1
result in the -> same : 1
result in the -> deduction : 1
same the program -> is : 1
the program is -> although : 1
the program is -> the : 1
the program is -> shows : 1
the program is -> volatile : 1
program is although -> the : 1
is although the -> compiler : 1
although the compiler -> is : 1
is not required -> to : 7
not required to -> issue : 1
not required to -> implement : 1
not required to -> raise : 2
not required to -> have : 3
not required to -> diagnose : 1
required to issue -> an : 1
to issue an -> error : 2
issue an error -> void : 1
issue an error -> message : 1
an error void -> void : 1
error void void -> ok : 1
void void ok -> void : 1
ok void ok -> void : 1
ok void the -> standard : 1
void the standard -> procedure : 1
the standard procedure -> of : 1
standard procedure of -> declaring : 1
procedure of declaring -> templates : 1
of declaring templates -> in : 1
declaring templates in -> header : 1
templates in header -> files : 1
in header files -> and : 1
header files and -> using : 1
files and using -> those : 1
and using those -> headers : 1
using those headers -> in : 1
those headers in -> the : 1
headers in the -> source : 1
headers in the -> standard : 2
headers in the -> form : 1
the source files -> where : 1
source files where -> they : 1
files where they -> are : 1
they are thereby -> ensuring : 1
are thereby ensuring -> that : 1
ensuring that every -> source : 1
that every source -> file : 1
source file sees -> the : 1
file sees the -> same : 1
sees the same -> template : 1
same template then -> you : 1
template then you -> will : 1
then you will -> not : 1
you will not -> have : 1
will not have -> to : 1
to be concerned -> about : 1
to be concerned -> with : 1
be concerned about -> different : 1
concerned about different -> source : 1
about different source -> files : 1
different source files -> seeing : 1
source files seeing -> declarations : 1
files seeing declarations -> that : 1
seeing declarations that -> differ : 1
declarations that differ -> only : 1
by the form -> of : 1
form of the -> template : 1
form of the -> solid : 1
template argument the -> compiler : 1
argument the compiler -> tries : 1
tries to ensure -> that : 2
to ensure that -> the : 10
to ensure that -> is : 2
to ensure that -> prompts : 1
to ensure that -> you : 2
to ensure that -> it : 1
to ensure that -> iterators : 1
copy of functions -> that : 1
of functions that -> are : 2
to be the -> but : 1
to be the -> project : 2
to be the -> object : 1
to be the -> and : 1
to be the -> same : 2
be the but -> distinct : 1
the but distinct -> copies : 1
but distinct copies -> of : 1
distinct copies of -> those : 1
copies of those -> that : 1
of those that -> are : 1
those that are -> meant : 1
to be argument -> argument : 1
be argument argument -> uses : 1
argument argument uses -> of : 1
argument uses of -> function : 1
uses of function -> templates : 1
of function templates -> do : 1
function templates do -> not : 1
templates do not -> explicitly : 1
templates do not -> differ : 1
do not explicitly -> specify : 1
not explicitly specify -> all : 1
explicitly specify all -> of : 1
specify all of -> the : 1
of the letting -> the : 1
the letting the -> compiler : 1
the function you -> can : 2
you can provide -> explicit : 1
you can provide -> your : 2
you can provide -> to : 1
you can provide -> a : 1
can provide explicit -> arguments : 1
provide explicit arguments -> for : 1
explicit arguments for -> the : 1
for the leftmost -> template : 1
the leftmost template -> leaving : 1
leftmost template leaving -> the : 1
template leaving the -> rightmost : 1
leaving the rightmost -> parameters : 1
rightmost parameters for -> the : 1
parameters for the -> compiler : 1
compiler to if -> you : 1
to if you -> omit : 1
to if you -> want : 1
you omit all -> the : 1
omit all the -> template : 1
all the template -> you : 1
all the template -> arguments : 1
all the template -> must : 1
can also choose -> to : 1
also choose to -> omit : 1
choose to omit -> the : 1
to omit the -> angle : 1
omit the angle -> the : 1
the angle the -> following : 1
the angle the -> resulting : 1
angle the following -> make : 1
the following make -> sure : 1
following make sure -> you : 1
sure you distinguish -> between : 1
you distinguish between -> the : 1
between the parameters -> and : 1
the parameters and -> arguments : 1
the parameters and -> some : 1
parameters and arguments -> of : 1
and arguments of -> a : 1
arguments of a -> template : 1
arguments of a -> function : 1
a template and -> those : 1
template and those -> of : 1
and those of -> a : 1
of a argument -> type : 1
a argument type -> deduction : 2
argument type deduction -> is : 1
argument type deduction -> a : 1
type deduction is -> the : 1
deduction is the -> process : 1
is the process -> of : 1
the process of -> determining : 1
process of determining -> the : 1
of determining the -> template : 1
determining the template -> given : 1
the template given -> a : 1
template given a -> function : 1
given a function -> call : 1
call or other -> use : 1
or other use -> of : 1
other use of -> a : 1
a function as -> taking : 1
a function as -> an : 1
function as taking -> the : 1
as taking the -> address : 1
taking the address -> of : 2
of a basic -> principle : 1
a basic principle -> is : 1
basic principle is -> that : 1
principle is that -> a : 1
that a function -> call : 1
that a function -> pointer : 1
that a function -> that : 1
that a function -> can : 1
call has a -> list : 1
has a list -> of : 1
list of function -> in : 1
which each function -> argument : 1
each function argument -> has : 1
function argument has -> a : 1
argument has a -> the : 1
the function argument -> types : 1
the function argument -> the : 1
function argument types -> must : 1
argument types must -> be : 1
must be matched -> to : 1
be matched to -> function : 1
matched to function -> parameter : 1
to function parameter -> in : 1
function parameter in -> the : 1
function parameter types -> can : 1
function parameter types -> with : 1
parameter types can -> depend : 1
parameter types can -> be : 1
types can depend -> on : 1
can depend on -> the : 3
can depend on -> global : 1
the template the -> ultimate : 1
the template the -> target : 1
the template the -> compiler : 1
the template the -> next : 1
the template the -> specializations : 1
the template the -> values : 2
the template the -> template : 1
template the ultimate -> is : 1
the ultimate is -> to : 1
ultimate is to -> determine : 1
is to determine -> the : 1
to determine the -> appropriate : 1
to determine the -> quadrant : 1
to determine the -> number : 1
determine the appropriate -> template : 1
the appropriate template -> arguments : 1
appropriate template arguments -> that : 1
template arguments that -> let : 1
template arguments that -> are : 1
template arguments that -> meet : 1
template arguments that -> apply : 1
arguments that let -> the : 1
that let the -> compiler : 1
the compiler match -> the : 1
compiler match the -> function : 1
match the function -> parameter : 1
match the function -> that : 1
parameter types with -> the : 1
types with the -> given : 1
with the given -> function : 1
the given function -> argument : 1
given function argument -> the : 1
function argument the -> template : 1
function argument the -> instantiation : 1
argument the template -> parameters : 1
template parameters are -> type : 1
parameters are type -> or : 1
are type or -> template : 1
type or template -> template : 1
or template template -> but : 1
or template template -> struct : 1
template template but -> in : 1
template but in -> a : 1
but in a -> few : 1
a few value -> parameters : 1
few value parameters -> can : 1
value parameters can -> also : 1
parameters can also -> be : 1
be used the -> argument : 1
used the argument -> for : 1
the argument for -> another : 1
argument for another -> template : 1
for another template -> or : 1
another template or -> as : 1
template or as -> the : 1
or as the -> size : 1
or as the -> result : 1
of an parameter -> type : 1
an parameter type -> can : 1
parameter type can -> depend : 1
type can depend -> on : 1
template parameter in -> the : 1
following in which -> the : 1
which the template -> parameter : 1
parameter is for -> a : 1
is for a -> value : 1
is for a -> host : 1
is for a -> description : 1
is for a -> catalog : 1
is for a -> key : 1
for a value -> for : 1
for a value -> or : 1
for a value -> using : 1
a value for -> a : 1
for a type -> or : 1
type or for -> a : 1
for a template -> template : 1
for a template -> can : 1
for a template -> instance : 1
for a template -> definition : 1
a template template -> of : 1
template template of -> of : 1
template of of -> size : 1
of of size -> or : 1
of size or -> any : 1
size or any -> class : 1
or any class -> template : 1
any class template -> whose : 1
class template whose -> template : 1
template whose template -> argument : 1
whose template argument -> is : 1
template argument is -> or : 1
template argument is -> matched : 1
argument is or -> pointer : 1
is or pointer -> in : 1
or pointer in -> which : 1
type of any -> function : 2
type of any -> input : 1
of any function -> to : 1
of any function -> can : 1
any function to -> a : 1
member of or -> to : 1
of or to -> a : 2
or to a -> data : 1
or to a -> member : 1
data member whose -> type : 1
member whose type -> is : 1
type is to -> a : 1
type is to -> type : 1
that returns to -> a : 1
returns to a -> member : 1
function of or -> to : 1
any function can -> be : 1
can be composed -> from : 1
be composed from -> any : 1
composed from any -> of : 1
any of these -> type : 1
of these type -> deduction : 1
these type deduction -> can : 1
type deduction can -> occur : 1
deduction can occur -> for : 1
can occur for -> a : 1
occur for a -> in : 1
which the types -> of : 1
types of its -> members : 1
members are also -> or : 1
are also or -> a : 1
also or a -> return : 1
or a return -> type : 1
type and parameter -> types : 2
and parameter types -> can : 1
and parameter types -> must : 1
types can be -> single : 1
can be single -> function : 1
be single function -> argument : 1
single function argument -> can : 1
function argument can -> result : 1
argument can result -> in : 1
can result in -> the : 1
in the deduction -> of : 1
the deduction of -> multiple : 1
deduction of multiple -> template : 1
of multiple template -> or : 1
multiple template or -> multiple : 1
template or multiple -> function : 1
or multiple function -> arguments : 1
multiple function arguments -> might : 1
function arguments might -> depend : 1
arguments might depend -> on : 1
might depend on -> a : 1
depend on a -> single : 1
on a single -> template : 1
on a single -> stream : 1
a single template -> the : 1
single template the -> compiler : 1
compiler cannot deduce -> all : 1
compiler cannot deduce -> the : 1
cannot deduce all -> the : 1
deduce all the -> template : 1
template arguments of -> a : 1
template arguments of -> the : 1
you must provide -> explicit : 1
must provide explicit -> template : 1
provide explicit template -> shows : 1
explicit template shows -> several : 1
template shows several -> different : 1
different ways the -> can : 1
ways the can -> deduce : 1
the can deduce -> template : 1
can deduce template -> template : 1
deduce template template -> simple : 1
template template simple -> function : 1
template simple function -> easy : 1
simple function easy -> to : 1
function easy to -> deduce : 2
easy to deduce -> t : 1
easy to deduce -> but : 1
to deduce t -> t : 1
deduce t t -> return : 1
b a struct -> array : 1
a struct array -> t : 1
struct array t -> deduce : 1
array t deduce -> the : 1
t deduce the -> row : 1
deduce the row -> size : 1
the row size -> of : 1
row size of -> a : 1
of a return -> overload : 1
a return overload -> the : 1
return overload the -> function : 1
the function to -> return : 2
the function to -> the : 1
the function to -> call : 1
the function to -> take : 1
function to return -> the : 2
to return the -> number : 1
to return the -> quotient : 1
to return the -> input : 1
to return the -> name : 1
to return the -> result : 1
return the number -> of : 2
elements in an -> or : 1
elements in an -> the : 1
in an or -> in : 1
in an or -> with : 1
in an or -> directives : 1
an or in -> a : 1
a standard return -> typename : 1
standard return typename -> class : 1
return typename class -> typename : 1
typename typename typename -> return : 2
typename typename typename -> typename : 19
typename typename typename -> empty : 1
typename typename typename -> char : 1
typename typename typename -> binarypredicate : 4
typename typename typename -> outiter : 7
typename typename typename -> fwditer : 1
typename typename typename -> class : 2
typename typename typename -> function : 2
typename typename typename -> iterator : 1
typename typename typename -> void : 3
typename typename typename -> t : 2
typename typename typename -> bool : 12
typename typename return -> typename : 1
typename typename return -> more : 1
typename typename return -> preprocessing : 1
typename return typename -> typename : 1
return typename typename -> class : 1
typename typename class -> typename : 1
typename typename class -> template : 2
typename typename class -> public : 5
typename return more -> complicated : 1
return more complicated -> function : 1
more complicated function -> easy : 1
complicated function easy -> to : 1
to deduce but -> impossible : 1
deduce but impossible -> to : 1
but impossible to -> deduce : 1
impossible to deduce -> typename : 1
to deduce typename -> dst : 1
deduce typename dst -> return : 1
typename dst return -> int : 1
dst return int -> t : 1
return int t -> cannot : 1
int t cannot -> be : 1
t cannot be -> int : 1
cannot be int -> and : 1
be int and -> long : 1
int and long -> deduce : 1
and long deduce -> and : 1
long deduce and -> from : 1
deduce and from -> type : 1
and from type -> of : 1
from type of -> int : 1
type of int -> prints : 1
of int prints -> prints : 1
int prints prints -> const : 1
prints prints const -> char : 1
prints const char -> prints : 1
const char prints -> can : 1
char prints can -> deduce : 1
prints can deduce -> but : 1
can deduce but -> not : 1
deduce but not -> return : 1
but not return -> so : 1
return so explicitly -> set : 1
so explicitly set -> char : 1
explicitly set char -> c : 1
set char c -> templates : 1
char c templates -> can : 1
c templates can -> be : 1
templates can be -> overloaded : 1
be overloaded with -> other : 1
overloaded with other -> function : 1
other function templates -> and : 1
function templates and -> with : 1
templates and with -> templates : 1
and with templates -> introduce : 1
with templates introduce -> some : 1
templates introduce some -> beyond : 1
introduce some beyond -> those : 1
some beyond those -> of : 1
beyond those of -> ordinary : 1
those of ordinary -> overloading : 1
of ordinary overloading -> covered : 1
ordinary overloading covered -> in : 1
overloading covered in -> with : 1
covered in with -> any : 1
in with any -> function : 1
with any function -> the : 1
with any function -> or : 1
any function the -> compiler : 1
the compiler collects -> a : 1
compiler collects a -> list : 1
list of functions -> that : 1
that are candidates -> for : 1
are candidates for -> overload : 1
candidates for overload -> if : 1
for overload if -> the : 2
for overload if -> a : 1
overload if the -> function : 1
overload if the -> compiler : 1
function name matches -> that : 1
name matches that -> of : 1
matches that of -> a : 1
matches that of -> the : 1
that of a -> function : 1
tries to determine -> a : 1
to determine a -> set : 1
determine a set -> of : 1
of template deduced -> or : 1
template deduced or -> it : 1
deduced or it -> the : 1
or it the -> compiler : 1
it the compiler -> cannot : 1
compiler cannot find -> any : 1
compiler cannot find -> the : 1
cannot find any -> suitable : 1
find any suitable -> template : 1
any suitable template -> the : 1
suitable template the -> template : 1
template the template -> is : 2
template is not -> considered : 1
template is not -> itself : 1
template is not -> a : 1
template is not -> that : 1
not considered for -> overload : 1
considered for overload -> if : 1
can find a -> set : 1
find a set -> of : 1
of template they -> are : 1
template they are -> used : 1
used to instantiate -> the : 2
to instantiate the -> function : 1
to instantiate the -> template : 1
instantiate the function -> and : 1
instantiate the function -> with : 1
and the template -> instance : 1
and the template -> is : 2
and the template -> parameter : 9
instance is added -> to : 1
of candidate each -> template : 1
candidate each template -> contributes : 1
each template contributes -> at : 1
template contributes at -> most : 1
contributes at most -> one : 1
one function to -> the : 1
list of overload -> the : 1
of overload the -> best : 1
overload the best -> match : 1
best match is -> then : 1
best match is -> in : 1
match is then -> chosen : 1
is then chosen -> from : 1
then chosen from -> the : 1
chosen from the -> list : 1
from the list -> of : 1
from the list -> calling : 1
of template and -> functions : 1
template and functions -> according : 1
and functions according -> to : 1
functions according to -> the : 1
to the normal -> rules : 1
the normal rules -> of : 1
normal rules of -> overload : 1
rules of overload -> functions : 1
rules of overload -> resolution : 1
of overload functions -> are : 1
overload functions are -> preferred : 1
functions are preferred -> over : 2
are preferred over -> template : 1
are preferred over -> less : 1
preferred over template -> and : 1
over template and -> more : 1
template and more -> specialized : 1
and more specialized -> template : 1
more specialized template -> functions : 1
specialized template functions -> are : 1
preferred over less -> specialized : 1
over less specialized -> template : 1
less specialized template -> see : 1
specialized template see -> for : 1
for more details -> on : 1
more details on -> overload : 1
details on overload -> functions : 1
on overload functions -> and : 1
overload functions and -> function : 1
functions and function -> shows : 1
functions and function -> void : 1
function shows how -> affect : 1
function shows how -> to : 2
function shows how -> an : 1
shows how affect -> overload : 1
how affect overload -> template : 1
affect overload template -> instantiation : 1
overload template instantiation -> issues : 1
template instantiation issues -> can : 1
instantiation issues can -> be : 1
issues can be -> the : 1
can be the -> last : 1
can be the -> type : 1
can be the -> value : 1
can be the -> same : 3
be the last -> call : 1
be the last -> the : 1
be the last -> character : 1
the last call -> to : 1
last call to -> results : 1
call to results -> in : 1
to results in -> an : 1
in an not -> because : 1
an not because -> the : 1
not because the -> compiler : 1
compiler cannot instantiate -> but : 1
cannot instantiate but -> because : 1
instantiate but because -> the : 1
but because the -> instantiation : 1
because the instantiation -> contains : 1
the instantiation contains -> an : 1
instantiation contains an -> that : 1
contains an that -> is : 1
an that is -> not : 1
is not defined -> for : 2
is not defined -> by : 1
not defined for -> functions : 1
not defined for -> so : 1
defined for functions -> and : 1
for functions and -> function : 1
and function void -> void : 1
function void void -> if : 1
void void if -> else : 1
void if else -> void : 1
if else void -> x : 1
else void x -> int : 1
x int calls -> specialization : 1
int calls specialization -> calls : 1
calls specialization calls -> overload : 1
specialization calls overload -> calls : 1
calls overload calls -> overload : 1
calls overload calls -> calls : 1
overload calls overload -> calls : 1
overload calls calls -> argument : 1
calls calls argument -> required : 1
calls argument required -> error : 1
argument required error -> can : 1
required error can -> create : 1
error can create -> templates : 1
can create templates -> in : 1
create templates in -> the : 1
manner as function -> the : 1
as function the -> usual : 1
function the usual -> rules : 1
function the usual -> overloading : 1
rules for deducing -> argument : 1
for deducing argument -> types : 1
deducing argument types -> apply : 1
argument types apply -> as : 1
types apply as -> described : 1
apply as described -> earlier : 1
this if you -> want : 1
want to specify -> the : 1
to specify the -> arguments : 1
to specify the -> position : 1
specify the arguments -> you : 1
the arguments you -> can : 1
arguments you can -> use : 1
use the bigint -> const : 1
the bigint const -> bigint : 1
bigint const bigint -> a : 1
const bigint a -> a : 1
bigint a a -> argument : 1
a a argument -> type : 1
type deduction a -> explicit : 1
deduction a explicit -> argument : 1
a explicit argument -> using : 1
explicit argument using -> be : 1
argument using be -> sure : 1
using be sure -> to : 1
sure to leave -> a : 1
to leave a -> space : 1
leave a space -> between : 1
space between the -> operator : 1
between the operator -> symbol : 1
the operator symbol -> and : 1
operator symbol and -> the : 1
symbol and the -> angle : 1
symbol and the -> for : 1
and the angle -> brackets : 1
the angle brackets -> that : 2
angle brackets that -> surround : 2
brackets that surround -> the : 2
that surround the -> template : 2
surround the template -> or : 1
surround the template -> arguments : 1
the template or -> else : 1
the template or -> when : 1
the template or -> of : 1
template or else -> the : 1
the compiler will -> think : 1
compiler will think -> you : 1
will think you -> are : 1
think you are -> using : 1
are using the -> looks : 1
using the looks -> like : 1
the looks like -> conversion : 1
looks like conversion -> operators : 1
like conversion operators -> can : 1
conversion operators can -> use : 1
operators can use -> ordinary : 1
can use ordinary -> type : 1
use ordinary type -> cast : 1
ordinary type cast -> but : 1
type cast but -> if : 1
type cast but -> not : 1
but if you -> insist : 1
if you insist -> on : 1
you insist on -> using : 1
insist on using -> an : 1
on using an -> explicit : 1
an explicit you -> cannot : 1
explicit you cannot -> use : 1
use the usual -> syntax : 1
the usual syntax -> for : 1
usual syntax for -> specifying : 1
syntax for specifying -> the : 1
for specifying the -> template : 1
specifying the template -> the : 1
template the target -> type : 1
the target type -> specifies : 1
target type specifies -> the : 1
type specifies the -> template : 1
specifies the template -> argument : 1
template argument demo -> operator : 1
argument demo operator -> const : 1
return demo p -> illegal : 1
demo p illegal -> cast : 1
p illegal cast -> c : 1
illegal cast c -> template : 1
cast c template -> defines : 1
c template defines -> a : 1
number of classes -> whose : 1
of classes whose -> definitions : 1
classes whose definitions -> depend : 1
the compiler treats -> every : 1
the compiler treats -> boxed : 1
compiler treats every -> member : 1
treats every member -> function : 1
every member function -> of : 1
the class as -> a : 2
the class as -> the : 5
class as a -> function : 1
class as a -> managed : 1
template with the -> same : 2
the same parameters -> as : 1
same parameters as -> the : 1
the class templates -> are : 1
the class templates -> and : 1
class templates are -> used : 1
class templates are -> declared : 2
class templates are -> not : 1
standard library for -> containers : 1
library for containers -> complex : 1
for containers complex -> numbers : 1
containers complex numbers -> and : 1
complex numbers and -> even : 1
numbers and even -> strings : 1
and even strings -> and : 1
even strings and -> basic : 1
strings and basic -> form : 1
and basic form -> of : 1
basic form of -> a : 1
by a class -> declaration : 1
declaration or struct -> point : 1
or struct point -> t : 1
point t use -> the : 1
t use the -> class : 1
the class supply -> an : 1
supply an argument -> for : 2
each template parameter -> let : 1
template parameter let -> the : 1
parameter let the -> compiler : 1
the compiler substitute -> a : 1
compiler substitute a -> default : 1
substitute a default -> use : 1
a default use -> the : 1
default use the -> template : 1
use the template -> name : 2
use the template -> as : 1
name and arguments -> the : 1
and arguments the -> way : 1
arguments the way -> you : 1
way you would -> a : 1
way you would -> any : 2
way you would -> call : 1
you would a -> class : 1
would a class -> pt : 1
a class pt -> typedef : 1
class pt typedef -> dpoint : 1
pt typedef dpoint -> dp : 1
typedef dpoint dp -> member : 1
dpoint dp member -> definitions : 1
dp member definitions -> that : 1
that are separate -> from : 1
must declare the -> template : 1
must declare the -> function : 1
declare the template -> using : 1
the template using -> the : 1
template using the -> same : 1
same template parameter -> types : 1
template parameter types -> in : 1
parameter types in -> the : 1
types in the -> same : 4
types in the -> standard : 1
types in the -> in : 1
types in the -> members : 1
same but without -> any : 1
but without any -> default : 1
without any default -> can : 1
any default can -> change : 1
default can change -> the : 1
change the names -> of : 1
the names of -> the : 1
names of the -> template : 3
the template but -> be : 1
template but be -> sure : 1
but be sure -> to : 1
sure to avoid -> name : 1
to avoid name -> collisions : 1
collisions with base -> classes : 1
with base classes -> and : 1
and their see -> later : 1
their see later -> in : 1
for more declare -> the : 1
more declare the -> member : 1
declare the member -> definitions : 1
the member definitions -> the : 1
the member definitions -> of : 1
member definitions the -> way : 1
definitions the way -> you : 1
any other except -> that : 1
other except that -> the : 1
except that the -> class : 1
a template name -> and : 1
definition is preceded -> by : 1
preceded by a -> template : 1
by a template -> declaration : 1
template declaration the -> class : 1
declaration the class -> scope : 1
class scope the -> class : 1
scope the class -> or : 1
class or in -> the : 2
class the bare -> class : 1
the bare class -> name : 1
bare class name -> is : 1
name is shorthand -> for : 1
shorthand for the -> full : 1
for the full -> template : 1
the full template -> name : 1
full template name -> with : 1
template name with -> you : 1
template name with -> different : 1
name with you -> can : 1
use the bare -> identifier : 1
the bare identifier -> as : 1
bare identifier as -> the : 1
identifier as the -> constructor : 1
the constructor after -> the : 1
constructor after the -> tilde : 1
after the tilde -> in : 1
the tilde in -> a : 1
tilde in a -> destructor : 1
in a destructor -> in : 1
a destructor in -> parameter : 1
destructor in parameter -> and : 1
in parameter and -> so : 1
parameter and so -> outside : 1
and so outside -> the : 1
so outside the -> class : 1
must supply template -> arguments : 1
supply template arguments -> when : 1
template arguments when -> using : 1
arguments when using -> the : 1
when using the -> template : 1
when using the -> standard : 1
using the template -> you : 1
also use the -> template : 1
also use the -> pointer : 1
also use the -> library : 1
name with different -> arguments : 1
with different arguments -> to : 1
different arguments to -> specify : 1
arguments to specify -> a : 1
to specify a -> different : 1
to specify a -> memory : 1
specify a different -> template : 1
a different template -> instance : 1
a different template -> specialization : 1
different template instance -> when : 1
template instance when -> declaring : 1
instance when declaring -> a : 1
declaring a member -> the : 1
example shows how -> the : 1
template name can -> be : 1
used in different -> struct : 1
in different struct -> point : 1
different struct point -> t : 1
point t or -> t : 1
t or t -> or : 1
or t or -> class : 1
t or class -> shows : 1
or class shows -> a : 1
class shows a -> template : 1
shows a template -> with : 1
template with several -> different : 1
ways to define -> its : 1
to define its -> member : 1
define its member -> function : 1
its member function -> class : 1
member function class -> typename : 1
function class typename -> u : 1
class typename u -> class : 1
typename u class -> demo : 1
u class demo -> u : 1
class demo u -> static : 1
demo u static -> t : 1
u static t -> class : 1
static t class -> inner : 1
t class inner -> is : 1
class inner is -> a : 1
inner is a -> plain : 1
a plain not -> a : 1
plain not a -> typename : 1
not a typename -> or : 1
a typename or -> typename : 1
typename or typename -> or : 1
typename or typename -> but : 1
or typename or -> typename : 1
or typename but -> confusing : 1
typename but confusing -> u : 1
but confusing u -> typename : 1
confusing u typename -> class : 1
u typename class -> the : 1
typename class the -> class : 1
and the constructor -> name : 1
and the constructor -> prints : 1
the constructor name -> is : 1
constructor name is -> typename : 1
name is typename -> template : 1
is typename template -> defines : 1
typename template defines -> only : 1
template defines only -> the : 1
the the template -> must : 1
the the template -> parameter : 1
the template must -> be : 1
the template must -> appear : 1
template must be -> instantiated : 1
template must be -> defined : 1
template must be -> an : 1
must be instantiated -> to : 1
be instantiated to -> declare : 1
be instantiated to -> resolve : 1
instantiated to declare -> or : 1
to declare or -> define : 1
define a see -> the : 1
a see the -> sections : 1
a see the -> type : 1
see the sections -> and : 1
the sections and -> later : 1
sections and later -> in : 1
and later in -> this : 1
and later in -> the : 1
a template inside -> a : 1
template inside a -> template : 1
inside a template -> or : 1
a template or -> class : 1
template or class -> that : 1
or class that -> has : 1
that has its -> own : 1
its own template -> declaration : 1
its own template -> it : 1
own template declaration -> with : 1
template declaration with -> its : 1
declaration with its -> own : 1
own template it -> can : 1
template it can -> be : 1
a nested templates -> have : 1
nested templates have -> the : 1
templates have the -> following : 1
the following classes -> cannot : 1
following classes cannot -> have : 1
classes cannot have -> member : 1
cannot have member -> member : 1
have member member -> function : 1
member function template -> cannot : 2
member function template -> of : 1
member function template -> with : 1
function template cannot -> be : 2
template cannot be -> a : 2
a virtual a -> member : 1
function template of -> the : 1
template of the -> same : 1
template of the -> standard : 1
name and parameters -> in : 1
and parameters in -> a : 1
parameters in a -> derived : 1
derived class does -> not : 2
does not override -> that : 1
not override that -> conversion : 1
override that conversion -> functions : 1
that conversion functions -> have : 1
conversion functions have -> additional : 1
functions have additional -> rules : 1
have additional rules -> because : 1
additional rules because -> they : 1
rules because they -> cannot : 1
because they cannot -> be : 1
they cannot be -> instantiated : 1
cannot be instantiated -> using : 1
be instantiated using -> the : 1
instantiated using the -> normal : 1
using the normal -> template : 1
using the normal -> name : 1
using the normal -> to : 1
the normal template -> instantiation : 1
normal template instantiation -> or : 1
template instantiation or -> specialization : 1
instantiation or specialization -> declaration : 1
or specialization declaration -> cannot : 1
specialization declaration cannot -> refer : 1
declaration cannot refer -> to : 1
type conversion template -> in : 1
conversion template in -> a : 1
template in a -> base : 1
template in a -> local : 1
template in a -> function : 1
template in a -> separate : 1
template in a -> context : 1
a base ordinary -> type : 1
base ordinary type -> conversion : 1
ordinary type conversion -> syntax : 1
type conversion syntax -> to : 1
conversion syntax to -> instantiate : 1
syntax to instantiate -> a : 1
to instantiate a -> type : 1
instantiate a type -> conversion : 1
type conversion struct -> silly : 1
conversion struct silly -> operator : 1
struct silly operator -> return : 1
silly operator return -> if : 1
operator return if -> class : 1
return if class -> can : 1
if class can -> have : 1
the usual overloading -> rules : 1
usual overloading rules -> apply : 1
overloading rules apply -> which : 1
rules apply which -> means : 1
apply which means -> the : 1
which means the -> compiler : 1
which means the -> argument : 2
which means the -> function : 1
which means the -> information : 1
which means the -> imaginary : 2
means the compiler -> usually : 1
the compiler usually -> prefers : 1
compiler usually prefers -> the : 1
usually prefers the -> function : 1
prefers the function -> to : 1
the function if -> you : 1
function if you -> want : 1
want to make -> sure : 1
sure the function -> template : 1
function template is -> you : 1
function template is -> a : 5
function template is -> the : 2
function template is -> like : 3
function template is -> not : 1
template is you -> can : 1
you can explicitly -> instantiate : 1
can explicitly instantiate -> the : 1
can explicitly instantiate -> a : 1
explicitly instantiate the -> struct : 1
instantiate the struct -> demo : 1
the struct demo -> void : 1
void calls calls -> a : 1
class template or -> an : 1
template or an -> ordinary : 1
or an ordinary -> can : 1
an ordinary can -> be : 1
ordinary can be -> a : 1
a a specialization -> of : 2
a specialization of -> a : 5
a specialization of -> the : 17
specialization of a -> or : 2
specialization of a -> template : 1
specialization of a -> function : 1
specialization of a -> data : 1
specialization of a -> class : 1
or a friend -> declaration : 2
a friend declaration -> cannot : 1
a friend declaration -> is : 1
a friend declaration -> can : 1
friend declaration cannot -> be : 1
be a partial -> if : 1
a partial if -> the : 1
partial if the -> friend : 1
if the friend -> is : 3
is a all -> instances : 2
a all instances -> of : 2
the template are -> if : 2
template are if -> the : 2
friendship is a -> all : 1
the template grant -> a : 1
the template grant -> if : 1
template grant a -> specialization : 1
grant a specialization -> of : 1
a template can -> be : 2
a template can -> have : 1
be a in -> which : 1
which case instances -> of : 1
case instances of -> only : 1
instances of only -> that : 1
of only that -> specialization : 1
only that specialization -> are : 1
only that specialization -> or : 1
that specialization are -> granted : 1
specialization are granted -> class : 1
are granted class -> buddy : 1
granted class buddy -> class : 1
class buddy class -> special : 1
buddy class special -> class : 1
class special class -> demo : 1
special class demo -> all : 1
class demo all -> instances : 1
demo all instances -> of : 1
instances of are -> friend : 1
of are friend -> class : 1
are friend class -> is : 1
friend class is -> a : 1
is a but -> not : 1
is a but -> the : 2
but not friend -> class : 1
not friend class -> you : 1
friend class you -> use : 1
class you use -> the : 1
use the containing -> class : 1
containing class template -> as : 1
class template as -> a : 2
class template as -> the : 2
template as a -> function : 1
template as a -> convenient : 1
function you probably -> want : 1
probably want friend -> functions : 1
want friend functions -> to : 1
friend functions to -> be : 1
functions to be -> templates : 1
functions to be -> called : 1
to be templates -> class : 1
be templates class -> outer : 1
templates class outer -> friend : 1
class outer friend -> void : 1
outer friend void -> wrong : 1
friend void wrong -> friend : 1
void wrong friend -> void : 1
wrong friend void -> right : 1
friend void right -> friend : 1
void right friend -> function : 1
right friend function -> can : 1
friend function can -> be : 1
which case every -> instance : 1
case every instance -> of : 1
class template defines -> the : 1
class template defines -> several : 1
class template defines -> so : 1
template defines the -> the : 1
template defines the -> following : 1
template defines the -> stream : 1
defines the the -> function : 1
definition is compiled -> even : 1
is compiled even -> if : 1
compiled even if -> it : 1
not cannot declare -> a : 1
a friend template -> in : 1
friend template in -> a : 1
in a local -> a : 1
a local a -> friend : 1
local a friend -> declaration : 1
friend declaration is -> a : 1
declaration is a -> specialization : 1
is a specialization -> of : 17
you cannot specify -> any : 1
cannot specify any -> default : 1
specify any default -> function : 1
any default function -> and : 1
default function and -> you : 1
default function and -> the : 1
function and you -> cannot : 1
function and you -> must : 1
use the these -> items : 1
the these items -> can : 1
these items can -> be : 1
items can be -> used : 1
items can be -> rapidly : 1
the original function -> template : 1
original function template -> the : 1
function template the -> rules : 1
template the rules -> for : 1
for function templates -> apply : 1
function templates apply -> to : 1
templates apply to -> friend : 1
apply to friend -> function : 1
to friend function -> earlier : 1
friend function earlier -> in : 1
function earlier in -> this : 2
chapter for friend -> templates : 1
for friend templates -> and : 1
friend templates and -> friends : 2
templates and friends -> of : 2
and friends of -> shows : 1
and friends of -> class : 1
friends of shows -> examples : 1
of shows examples -> of : 1
examples of friend -> declarations : 1
of friend declarations -> and : 1
friend declarations and -> friend : 1
declarations and friend -> templates : 1
and friend templates -> and : 1
friends of class -> array : 1
of class array -> typedef : 1
typedef t class -> typedef : 1
t class typedef -> t : 1
class typedef t -> typedef : 1
class typedef t -> re : 1
class typedef t -> explicit : 2
class typedef t -> void : 4
typedef typedef friend -> inline : 1
typedef friend inline -> bool : 1
friend inline bool -> const : 2
inline bool const -> return : 4
const return friend -> inline : 2
const return friend -> class : 2
return friend inline -> bool : 1
return friend inline -> const : 1
friend inline const -> return : 1
inline const return -> friend : 1
return friend class -> class : 1
return friend class -> i : 1
friend class class -> iterator : 1
friend class class -> return : 1
class class iterator -> public : 1
iterator public const -> return : 1
public const return -> return : 1
return return const -> return : 1
return return const -> const : 3
friend class i -> friend : 1
class i friend -> inline : 1
i friend inline -> iterator : 1
friend inline iterator -> int : 1
inline iterator int -> return : 1
iterator int return -> iterator : 1
int return iterator -> return : 1
iterator return const -> return : 3
const return iterator -> t : 1
const return iterator -> return : 2
return iterator t -> friend : 1
iterator t friend -> void : 1
t friend void -> void : 1
friend void void -> tmp : 1
void void tmp -> declares : 1
void tmp declares -> a : 1
tmp declares a -> set : 1
declares a set -> of : 1
set of functions -> or : 1
of functions or -> classes : 1
functions or classes -> from : 1
or classes from -> a : 1
classes from a -> single : 1
from a single -> which : 1
a single which -> is : 2
single which is -> a : 1
single which is -> an : 1
is a powerful -> tool : 1
a powerful tool -> for : 1
powerful tool for -> writing : 1
tool for writing -> code : 1
for writing code -> once : 1
writing code once -> and : 1
code once and -> having : 1
once and having -> it : 1
and having it -> work : 1
having it work -> in : 1
it work in -> a : 1
work in a -> multitude : 1
work in a -> similar : 1
in a multitude -> of : 1
a multitude of -> a : 1
multitude of a -> approach : 1
of a approach -> is : 1
a approach is -> not : 1
approach is not -> always : 1
not always you -> can : 1
always you can -> therefore : 1
you can therefore -> specialize : 1
can therefore specialize -> a : 1
therefore specialize a -> template : 1
specialize a template -> for : 1
template for specific -> values : 1
for specific values -> of : 1
specific values of -> one : 1
values of one -> or : 1
or more template -> arguments : 2
or more template -> no : 1
more template arguments -> and : 1
more template arguments -> that : 1
template arguments and -> provide : 1
arguments and provide -> a : 1
provide a completely -> different : 1
a completely different -> definition : 1
completely different definition -> for : 1
different definition for -> that : 1
definition for that -> special : 1
for that special -> can : 1
that special can -> specialize : 1
special can specialize -> a : 1
can specialize a -> class : 1
specialize a class -> a : 1
class a function -> or : 1
a class declare -> a : 1
class declare a -> specialization : 1
declare a specialization -> with : 1
a specialization with -> an : 1
specialization with an -> empty : 1
an empty set -> of : 1
an empty set -> and : 1
empty set of -> template : 1
of template parameters -> in : 1
the template header -> followed : 1
the template header -> must : 1
by a declaration -> that : 2
declaration that provides -> arguments : 1
that provides arguments -> for : 1
provides arguments for -> all : 1
provides arguments for -> the : 1
arguments for all -> the : 1
template must appear -> after : 1
must appear after -> the : 1
after the declaration -> of : 1
of the primary -> and : 1
of the primary -> class : 1
of the primary -> template : 2
the primary and -> they : 1
primary and they -> must : 1
and they must -> be : 1
they must be -> declared : 1
namespace as the -> primary : 1
as the primary -> you : 1
the primary you -> can : 1
primary you can -> also : 1
have a which -> provides : 1
a which provides -> some : 1
which provides some -> of : 1
provides some of -> the : 1
template the next -> a : 1
next a template -> is : 1
template is if -> the : 1
if the template -> arguments : 1
if the template -> is : 1
arguments of the -> instantiation : 1
of the instantiation -> match : 1
the instantiation match -> the : 1
instantiation match the -> arguments : 1
match the arguments -> used : 1
the arguments used -> in : 1
arguments used in -> a : 1
the compiler instantiates -> the : 2
compiler instantiates the -> matching : 1
compiler instantiates the -> primary : 1
instantiates the matching -> it : 1
the matching it -> instantiates : 1
matching it instantiates -> the : 1
it instantiates the -> primary : 1
it instantiates the -> if : 1
instantiates the primary -> see : 1
instantiates the primary -> if : 1
the primary see -> later : 1
primary see later -> in : 1
types must match -> the : 1
match the primary -> template : 1
the primary template -> the : 1
the primary template -> describes : 1
the primary template -> rely : 1
the primary template -> or : 1
the primary template -> is : 1
primary template the -> function : 1
template the function -> name : 1
by the specialized -> template : 1
the specialized template -> arguments : 2
specialized template arguments -> in : 1
specialized template arguments -> can : 1
angle brackets and -> separated : 2
brackets and separated -> by : 2
and separated by -> or : 2
separated by or -> you : 1
separated by or -> implicit : 1
by or you -> can : 1
can omit them -> and : 1
omit them and -> let : 1
them and let -> the : 1
deduce the specialized -> see : 1
the specialized see -> argument : 1
specialized see argument -> earlier : 1
see argument earlier -> in : 2
argument earlier in -> this : 2
chapter for you -> need : 1
for you need -> to : 1
change the function -> you : 1
overload the but -> that : 1
but that requires -> an : 1
that requires an -> entirely : 1
requires an entirely -> new : 2
an entirely new -> function : 1
an entirely new -> class : 1
entirely new function -> or : 1
new function or -> function : 1
or function template -> not : 1
function template not -> a : 1
template not a -> a : 1
not a a -> function : 1
a a function -> shows : 1
a a function -> template : 1
a function shows -> two : 1
a function shows -> how : 2
function shows two -> specializations : 1
shows two specializations -> of : 1
two specializations of -> a : 1
specializations of a -> function : 1
a function primary -> template : 1
function primary template -> declaration : 1
primary template declaration -> t : 1
template declaration t -> t : 1
declaration t t -> return : 1
t return specialization -> in : 1
return specialization in -> which : 1
specialization in which -> t : 1
in which t -> is : 1
which t is -> deduced : 1
t is deduced -> to : 1
is deduced to -> be : 1
deduced to be -> long : 1
to be long -> long : 1
be long long -> if : 1
long long if -> return : 1
long if return -> else : 1
if return else -> return : 6
if return else -> if : 4
return else return -> specialization : 1
return else return -> overload : 1
return else return -> addition : 1
return else return -> the : 1
return else return -> specifier : 1
return else return -> void : 1
return else return -> skip : 1
else return specialization -> for : 1
return specialization for -> explicit : 1
specialization for explicit -> int : 1
for explicit int -> int : 1
explicit int int -> if : 1
int int if -> return : 1
int if return -> else : 1
else return overload -> with : 1
return overload with -> a : 1
overload with a -> different : 1
with a different -> function : 1
with a different -> the : 1
with a different -> template : 1
with a different -> calling : 2
a different function -> such : 1
a different function -> skips : 1
different function such -> as : 1
function such as -> class : 1
such as class -> typename : 1
as class typename -> const : 1
class typename const -> return : 2
const return of -> a : 1
return of a -> template : 1
a template requires -> an : 1
template requires an -> entirely : 1
entirely new class -> declaration : 1
new class declaration -> or : 1
declaration or the -> members : 1
or the members -> of : 1
the specialized class -> template : 1
specialized class template -> can : 1
class template can -> be : 1
can be entirely -> different : 1
be entirely different -> from : 1
entirely different from -> the : 1
from the members -> of : 1
primary class if -> you : 1
want to specialize -> only : 1
want to specialize -> your : 2
to specialize only -> some : 2
specialize only some -> you : 1
specialize only some -> of : 1
only some you -> can : 1
some you can -> specialize : 1
you can specialize -> just : 1
you can specialize -> templates : 1
you can specialize -> to : 1
can specialize just -> those : 1
specialize just those -> members : 1
just those members -> instead : 1
those members instead -> of : 1
members instead of -> specializing : 1
instead of specializing -> the : 1
of specializing the -> entire : 1
specializing the entire -> a : 1
the entire a -> specialization : 1
entire a specialization -> of : 1
a data you -> must : 1
a data you -> would : 1
data you must -> supply : 1
data you must -> make : 1
supply an explicit -> initializer : 1
an explicit initializer -> to : 1
explicit initializer to -> define : 1
initializer to define -> the : 1
define the data -> without : 1
the data without -> an : 1
data without an -> the : 1
without an the -> member : 1
an the member -> template : 1
the member template -> declaration : 1
member template declaration -> is : 1
template declaration is -> just : 1
template declaration is -> followed : 1
declaration is just -> a : 1
just a declaration -> of : 1
the data not -> a : 1
data not a -> if : 1
not a if -> you : 1
a if you -> want : 1
a if you -> know : 1
use the static -> data : 1
static data you -> must : 1
sure it is -> struct : 1
it is struct -> demo : 1
is struct demo -> static : 1
struct demo static -> t : 1
demo static t -> int : 1
static t int -> declaration : 1
t int declaration -> int : 1
int declaration int -> specializations : 1
declaration int specializations -> before : 1
int specializations before -> the : 1
specializations before the -> template : 1
template is later -> in : 1
is later in -> this : 3
on how templates -> are : 1
are a program -> must : 1
a program must -> have : 1
a program must -> work : 1
have a single -> specialization : 1
have a single -> definition : 1
a single specialization -> for : 1
single specialization for -> a : 1
specialization for a -> given : 1
for a given -> set : 1
a given set -> of : 1
given set of -> template : 1
of template a -> class : 1
of template a -> specialization : 1
template a class -> shows : 1
class shows some -> of : 1
shows some of -> a : 1
some of a -> class : 1
a class which -> exposes : 1
class which exposes -> a : 1
which exposes a -> few : 1
exposes a few -> or : 1
a few or -> of : 1
few or of -> a : 1
a the primary -> template : 1
primary template describes -> the : 1
template describes the -> default : 1
describes the default -> and : 1
the default and -> the : 1
default and the -> template : 1
default and the -> arguments : 1
default and the -> named : 1
template is specialized -> for : 5
template is specialized -> after : 1
is specialized for -> specific : 1
is specialized for -> random : 1
is specialized for -> this : 1
is specialized for -> pointers : 1
is specialized for -> the : 1
is specialized for -> all : 1
is specialized for -> type : 1
is specialized for -> char : 1
specialized for specific -> such : 1
for specific such -> as : 1
specific such as -> see : 1
such as see -> for : 1
as see for -> more : 1
information about a -> class : 1
information about a -> particular : 1
information about a -> single : 2
about a class -> struct : 1
a class struct -> typedef : 1
class struct typedef -> t : 1
typedef t enum -> enum : 2
t enum enum -> enum : 2
enum enum enum -> enum : 8
enum enum enum -> static : 4
enum enum static -> return : 2
enum enum static -> out : 2
enum static return -> specialize : 1
enum static return -> declarations : 1
static return specialize -> entire : 1
return specialize entire -> class : 1
specialize entire class -> for : 1
entire class for -> each : 1
class for each -> fundamental : 1
for each fundamental -> struct : 1
each fundamental struct -> typedef : 1
fundamental struct typedef -> int : 1
struct typedef int -> enum : 1
typedef int enum -> enum : 1
int enum enum -> enum : 1
enum static out -> return : 2
static out return -> struct : 1
static out return -> specialize : 1
out return struct -> point : 1
return struct point -> int : 1
struct point int -> specialize : 1
point int specialize -> only : 1
int specialize only -> the : 1
specialize only the -> member : 1
only the member -> function : 1
member function for -> type : 1
member function for -> more : 1
function for type -> out : 1
for type out -> return : 1
type out return -> int : 1
int using cout -> cout : 1
using cout cout -> cout : 1
cout cout cout -> cout : 7
cout cout cout -> can : 1
cout cout cout -> an : 1
cout cout cout -> describes : 1
cout cout can -> choose : 1
cout can choose -> to : 1
can choose to -> specialize : 1
can choose to -> ignore : 1
choose to specialize -> only : 1
of the parameters -> of : 1
parameters of a -> class : 1
parameters of a -> can : 1
a class this -> is : 2
class this is -> known : 1
class this is -> most : 1
known as partial -> note : 1
as partial note -> that : 1
partial note that -> function : 1
note that function -> templates : 1
that function templates -> cannot : 1
function templates cannot -> be : 1
templates cannot be -> partially : 1
cannot be partially -> use : 1
be partially use -> overloading : 1
partially use overloading -> to : 1
use overloading to -> achieve : 1
overloading to achieve -> the : 1
to achieve the -> same : 1
to achieve the -> desired : 2
achieve the same -> partial : 1
the same partial -> specialization : 1
same partial specialization -> is : 1
partial specialization is -> declared : 1
specialization is declared -> with : 1
template header that -> contains : 1
header that contains -> one : 1
that contains one -> or : 1
contains one or -> more : 1
more template no -> template : 1
template no template -> it : 1
no template it -> is : 1
template it is -> a : 2
is a total -> not : 1
a total not -> a : 1
total not a -> partial : 1
not a partial -> see : 1
a partial see -> the : 1
partial see the -> previous : 1
see the previous -> section : 1
the previous section -> for : 1
previous section for -> the : 1
section for the -> class : 1
section for the -> and : 1
section for the -> four : 1
class declaration that -> follows : 1
declaration that follows -> the : 1
follows the template -> header : 1
template header must -> supply : 1
header must supply -> an : 1
for each parameter -> of : 1
each parameter of -> the : 1
primary template rely -> on : 1
template rely on -> default : 1
rely on default -> and : 1
on default and -> the : 1
and the arguments -> can : 1
the arguments can -> depend : 1
the arguments can -> be : 1
arguments can depend -> on : 1
template parameters of -> the : 1
of the partial -> for : 1
the partial for -> suppose : 1
partial for suppose -> you : 1
suppose you have -> a : 2
suppose you have -> two : 1
have a simple -> similar : 1
a simple similar -> to : 1
simple similar to -> the : 1
to the one -> in : 1
to the one -> character : 1
the one in -> the : 1
one in the -> standard : 1
the standard but -> you : 1
the standard but -> are : 1
standard but you -> want : 1
standard but you -> can : 1
want to allow -> one : 1
to allow one -> member : 1
allow one member -> of : 1
one member of -> the : 1
of the to -> be : 1
of the to -> the : 1
the to be -> in : 1
to be in -> this : 1
to be in -> type : 1
to be in -> in : 1
be in this -> an : 1
this an object -> can : 1
an object can -> be : 2
be made smaller -> and : 1
made smaller and -> store : 1
smaller and store -> only : 1
and store only -> one : 1
store only one -> typename : 1
store only one -> member : 1
only one typename -> struct : 1
one typename struct -> pair : 1
typename struct pair -> t : 1
struct pair t -> u : 1
pair t u -> struct : 1
t u struct -> x : 1
u struct x -> partial : 1
struct x partial -> specialization : 1
x partial specialization -> of : 1
partial specialization of -> a : 1
is a distinct -> template : 1
a distinct template -> and : 1
distinct template and -> must : 1
template and must -> provide : 1
and must provide -> a : 1
must provide a -> complete : 1
must provide a -> unique : 1
provide a complete -> class : 1
complete class you -> cannot : 1
you cannot partially -> specialize : 1
cannot partially specialize -> a : 1
partially specialize a -> member : 1
specialize a member -> of : 1
a class only -> the : 1
only the entire -> class : 1
entire class specializing -> a : 1
class specializing a -> class : 1
specializing a class -> shows : 1
specializing a class -> specialize : 1
class shows specializations -> of : 1
shows specializations of -> the : 1
specializations of the -> template : 1
specializations of the -> class : 1
the template from -> a : 1
template from a -> class : 1
from a class -> the : 1
class the first -> partial : 1
the first partial -> specialization : 1
first partial specialization -> applies : 1
partial specialization applies -> to : 2
specialization applies to -> all : 2
applies to all -> pointer : 1
applies to all -> it : 1
to all pointer -> it : 1
all pointer it -> sets : 1
pointer it sets -> the : 1
it sets the -> member : 1
it sets the -> causing : 2
sets the member -> to : 1
member to for -> the : 1
the second partial -> specialization : 1
second partial specialization -> applies : 1
to all it -> sets : 1
to all it -> returns : 1
all it sets -> most : 1
it sets most -> members : 1
sets most members -> to : 1
most members to -> their : 1
members to their -> values : 1
to their values -> obtained : 1
their values obtained -> from : 1
values obtained from -> the : 1
obtained from the -> template : 1
obtained from the -> character : 1
obtained from the -> next : 1
obtained from the -> for : 1
obtained from the -> integers : 1
obtained from the -> external : 2
from the template -> is : 1
template is plain -> specializing : 1
is plain specializing -> a : 1
plain specializing a -> class : 1
a class specialize -> for : 1
class specialize for -> all : 1
specialize for all -> pointer : 1
for all pointer -> struct : 1
all pointer struct -> typedef : 1
pointer struct typedef -> t : 1
out return specialize -> for : 1
return specialize for -> const : 1
specialize for const -> so : 1
for const so -> refers : 1
const so refers -> to : 1
so refers to -> the : 1
to the struct -> typedef : 1
the struct typedef -> t : 1
t typedef enum -> enum : 1
typedef enum enum -> enum : 1
static return declarations -> and : 1
return declarations and -> specializations : 1
declarations and specializations -> describe : 1
and specializations describe -> the : 1
specializations describe the -> form : 1
describe the form -> that : 1
the form that -> a : 1
form that a -> class : 1
or function can -> take : 1
or function can -> be : 1
function can take -> but : 1
can take but -> do : 1
take but do -> not : 1
but do not -> create : 1
not create any -> actual : 1
create any actual -> classes : 1
any actual classes -> or : 1
actual classes or -> to : 1
classes or to -> do : 1
or to do -> these : 1
to do these -> you : 1
to do these -> simple : 1
do these you -> must : 1
these you must -> instantiate : 1
you must instantiate -> a : 1
must instantiate a -> you : 1
instantiate a you -> implicitly : 1
a you implicitly -> instantiate : 1
you implicitly instantiate -> a : 1
implicitly instantiate a -> template : 1
a template by -> using : 1
template by using -> it : 1
by using it -> in : 1
using it in -> a : 1
a function object -> or : 1
a function object -> that : 11
a function object -> is : 1
a function object -> to : 2
a function object -> from : 1
function object or -> similar : 1
object or similar -> the : 1
or similar the -> template : 1
similar the template -> instance : 1
template instance requires -> a : 1
instance requires a -> template : 1
requires a template -> argument : 1
template argument for -> each : 1
template the arguments -> can : 1
arguments can be -> explicit : 1
arguments can be -> deduced : 1
arguments can be -> used : 1
arguments can be -> or : 1
can be explicit -> in : 1
be explicit in -> angle : 1
explicit in angle -> brackets : 1
by or implicit -> arguments : 1
or implicit arguments -> for : 1
implicit arguments for -> class : 1
arguments for class -> templates : 1
for class templates -> or : 1
class templates or -> deduced : 1
templates or deduced -> arguments : 1
or deduced arguments -> for : 1
deduced arguments for -> function : 1
for function t -> t : 1
function t t -> return : 1
return a t -> struct : 1
a t struct -> wrapper : 1
t struct wrapper -> t : 1
struct wrapper t -> int : 1
wrapper t int -> x : 1
t int x -> instantiate : 1
t int x -> template : 1
int x instantiate -> instantiate : 1
x instantiate instantiate -> instantiate : 1
instantiate instantiate instantiate -> class : 1
instantiate instantiate class -> member : 1
instantiate class member -> expression : 1
class member expression -> or : 1
member expression or -> that : 1
expression or that -> names : 1
or that names -> an : 1
that names an -> instance : 1
names an instance -> of : 1
template with template -> arguments : 1
with template arguments -> must : 1
with template arguments -> that : 1
template arguments must -> use : 1
arguments must use -> the : 1
the keyword before -> the : 1
keyword before the -> member : 1
before the member -> a : 1
before the member -> the : 1
the member a -> qualified : 1
the member a -> object : 1
member a qualified -> name : 1
a member template -> must : 1
member template must -> use : 1
member template must -> be : 1
template must use -> before : 1
must use before -> the : 1
use before the -> member : 1
use before the -> qualified : 1
the member the -> symbol : 1
the member the -> function : 4
the member the -> argument : 4
the member the -> member : 4
the member the -> optional : 2
the member the -> template : 1
the member the -> constructor : 1
the member the -> number : 1
member the symbol -> that : 1
the symbol that -> introduces : 1
symbol that introduces -> the : 1
that introduces the -> template : 1
introduces the template -> argument : 1
template argument list -> is : 1
argument list is -> interpreted : 1
argument list is -> introduced : 1
list is interpreted -> as : 1
as the bigfloat -> double : 1
the bigfloat double -> static : 1
bigfloat double static -> double : 1
double static double -> bigfloat : 1
static double bigfloat -> with : 1
double bigfloat with -> no : 1
bigfloat with no -> a : 1
no a class -> template : 1
class template does -> not : 1
class template does -> for : 1
template does not -> necessarily : 1
template does not -> need : 1
template does not -> and : 1
not necessarily instantiate -> all : 1
necessarily instantiate all -> the : 1
instantiate all the -> members : 1
class template are -> instantiated : 1
class template are -> more : 1
template are instantiated -> only : 1
are instantiated only -> when : 1
instantiated only when -> they : 1
only when they -> are : 1
only when they -> point : 1
when they are -> a : 1
when they are -> past : 1
when they are -> no : 1
they are a -> static : 1
are a static -> data : 1
member is if -> the : 1
if the program -> refers : 1
if the program -> exits : 1
the program refers -> to : 1
program refers to -> the : 1
function is has -> its : 1
is has its -> address : 1
has its address -> or : 1
its address or -> participates : 1
address or participates -> in : 1
or participates in -> overload : 1
participates in overload -> an : 1
in overload an -> implementation : 1
overload an implementation -> is : 1
implementation is permitted -> to : 1
is permitted to -> define : 1
permitted to define -> every : 1
to define every -> virtual : 1
define every virtual -> function : 1
every virtual function -> in : 1
virtual function in -> a : 1
class and most -> implementations : 1
and most implementations -> each : 1
most implementations each -> instance : 1
implementations each instance -> of : 1
template has its -> separate : 1
has its separate -> copy : 1
its separate copy -> of : 1
separate copy of -> the : 2
separate copy of -> such : 1
of the static -> data : 1
data a class -> template : 1
template has any -> the : 1
has any the -> compiler : 1
any the compiler -> must : 1
compiler must choose -> which : 1
must choose which -> specialization : 1
choose which specialization -> to : 1
which specialization to -> it : 1
specialization to it -> starts : 1
to it starts -> by : 1
it starts by -> choosing : 1
it starts by -> counting : 1
it starts by -> creating : 1
starts by choosing -> which : 1
by choosing which -> partial : 1
choosing which partial -> specializations : 1
which partial specializations -> match : 1
partial specializations match -> the : 1
specializations match the -> template : 1
match the template -> a : 1
template a partial -> specialization : 1
a partial specialization -> matches : 1
partial specialization matches -> if : 1
specialization matches if -> the : 1
matches if the -> specialized : 1
if the specialized -> template : 1
template arguments can -> be : 2
can be deduced -> from : 2
can be deduced -> for : 1
be deduced from -> the : 1
be deduced from -> template : 1
from the actual -> template : 1
the actual template -> see : 1
actual template see -> argument : 1
template see argument -> earlier : 1
in this no -> specializations : 1
this no specializations -> the : 1
no specializations the -> compiler : 1
specializations the compiler -> instantiates : 1
the primary if -> one : 1
primary if one -> specialization : 1
if one specialization -> that : 1
one specialization that -> one : 1
specialization that one -> is : 1
that one is -> the : 1
one is the -> best : 1
is the best -> match : 1
is the best -> way : 2
match is in -> which : 1
in which means -> most : 1
in which means -> the : 1
which means most -> an : 1
means most an -> error : 1
most an error -> results : 1
results if two -> or : 1
if two or -> more : 1
or more specializations -> are : 1
more specializations are -> tied : 1
specializations are tied -> for : 1
tied for template -> specialization : 1
for template specialization -> a : 1
template specialization a -> is : 1
specialization a is -> at : 1
a is at -> least : 1
a is at -> comparisons : 1
a is at -> most : 1
least as specific -> as : 1
as specific as -> template : 1
specific as template -> specialization : 1
as template specialization -> b : 1
template specialization b -> if : 1
specialization b if -> the : 1
b if the -> parameters : 1
if the parameters -> of : 1
of a can -> be : 1
deduced from template -> parameter : 1
from template parameter -> no : 1
template parameter no -> implicit : 1
parameter no implicit -> conversion : 1
no implicit conversion -> takes : 1
implicit conversion takes -> place : 1
conversion takes place -> when : 1
place when comparing -> the : 1
comparing the following -> example : 1
shows several instances -> of : 1
several instances of -> the : 1
the template instantiations -> are : 1
the template instantiations -> at : 1
instantiations are instances -> of : 1
primary template or -> one : 1
template or one -> of : 1
the three partial -> typename : 1
three partial typename -> int : 1
partial typename int -> class : 1
typename int class -> demo : 1
class demo int -> class : 1
demo int class -> class : 1
int class class -> class : 1
class class primary -> template : 1
class primary template -> first : 1
primary template first -> specialization : 1
template first specialization -> second : 1
first specialization second -> specialization : 1
specialization second specialization -> primary : 1
second specialization primary -> template : 1
specialization primary template -> third : 1
primary template third -> template : 1
template third template -> primary : 1
third template primary -> template : 1
template primary template -> second : 1
primary template second -> template : 1
template second template -> addition : 1
second template addition -> to : 1
template addition to -> the : 1
addition to the -> obvious : 1
addition to the -> state : 1
addition to the -> standard : 2
addition to the -> there : 1
addition to the -> members : 1
to the obvious -> points : 1
the obvious points -> at : 1
obvious points at -> which : 1
points at which -> a : 1
at which a -> function : 1
class is needed -> calling : 1
is needed calling -> the : 1
needed calling the -> taking : 1
calling the taking -> the : 1
the taking the -> address : 1
of the declaring -> an : 1
the declaring an -> object : 1
declaring an object -> whose : 1
is the or -> casting : 1
the or casting -> an : 1
or casting an -> object : 1
casting an object -> to : 1
object to the -> there : 1
to the there -> are : 2
the there are -> more : 1
the there are -> also : 1
are more subtle -> points : 1
more subtle points -> of : 1
subtle points of -> for : 1
points of for -> a : 1
of for a -> template : 1
be instantiated if -> it : 1
instantiated if it -> is : 1
it is used -> in : 3
it is used -> more : 1
it is used -> for : 4
it is used -> only : 2
in the value -> of : 1
in the value -> representation : 1
of a default -> function : 1
a default function -> and : 1
and the default -> argument : 1
and the default -> behavior : 1
function with no -> template : 1
with no template -> is : 1
no template is -> needed : 1
template is needed -> if : 1
template is needed -> for : 1
is needed if -> an : 1
needed if an -> instance : 1
if an instance -> of : 1
is needed for -> overload : 1
is needed for -> the : 1
needed for overload -> if : 1
overload if a -> class : 1
class template participates -> in : 1
template participates in -> function : 1
participates in function -> overloading : 1
in function overloading -> as : 1
function overloading as -> part : 1
overloading as part -> of : 1
function parameter but -> the : 1
parameter but the -> template : 1
but the template -> does : 1
the template does -> not : 1
to be instantiated -> to : 1
instantiated to resolve -> the : 1
resolve the overload -> because : 1
the overload because -> the : 1
overload because the -> function : 1
because the function -> parameter : 1
class template may -> or : 1
template may or -> may : 1
not be the -> standard : 1
be the standard -> leaves : 1
the standard leaves -> this : 1
standard leaves this -> up : 1
leaves this up -> to : 1
this up to -> the : 1
template declaration contains -> an : 1
declaration contains an -> the : 1
contains an the -> compiler : 1
compiler might diagnose -> the : 1
might diagnose the -> error : 1
diagnose the error -> when : 1
the error when -> it : 1
error when it -> compiles : 1
when it compiles -> the : 1
when it compiles -> each : 1
it compiles the -> template : 1
compiles the template -> or : 1
compiles the template -> instantiations : 1
template or when -> it : 1
or when it -> instantiates : 1
when it instantiates -> the : 1
instantiates the if -> a : 1
a program does -> not : 1
program does not -> instantiate : 1
does not instantiate -> the : 1
not instantiate the -> you : 1
instantiate the you -> might : 1
you might find -> that : 1
you might find -> yourself : 2
might find that -> you : 1
you can compile -> a : 1
can compile a -> program : 1
compile a program -> successfully : 1
a program successfully -> using : 1
program successfully using -> one : 1
successfully using one -> compiler : 1
using one compiler -> reports : 1
one compiler reports -> errors : 1
compiler reports errors -> only : 1
compiler reports errors -> when : 1
reports errors only -> when : 1
errors only when -> a : 1
only when a -> template : 1
when a template -> is : 2
when a template -> parameter : 1
template is but -> not : 1
template is but -> when : 1
is but not -> a : 1
is but not -> when : 1
not a different -> compiler : 1
a different compiler -> reports : 1
different compiler reports -> errors : 1
reports errors when -> a : 1
errors when a -> template : 1
template is can -> explicitly : 1
is can explicitly -> instantiate : 1
explicitly instantiate a -> use : 1
instantiate a use -> a : 1
use a bare -> keyword : 1
a bare keyword -> followed : 1
bare keyword followed -> by : 1
declaration that supplies -> the : 1
that supplies the -> template : 1
supplies the template -> arguments : 1
template arguments for -> the : 2
for the long -> int : 1
the long int -> int : 1
long int int -> long : 1
long int int -> function : 2
int int long -> int : 1
int long int -> template : 1
long int template -> short : 1
int template short -> short : 1
template short short -> deduce : 1
short short deduce -> template : 1
short deduce template -> struct : 1
deduce template struct -> const : 1
template struct const -> or : 1
struct const or -> member : 1
const or member -> template : 1
or member template -> must : 1
be defined before -> it : 1
before it can -> be : 1
be if you -> are : 1
you are instantiating -> a : 1
are instantiating a -> the : 1
instantiating a the -> template : 1
a the template -> specialization : 1
a the template -> parameter : 1
the template specialization -> must : 1
template specialization must -> appear : 1
specialization must appear -> before : 1
appear before the -> instantiation : 1
before the instantiation -> in : 1
the instantiation in -> the : 1
instantiation in the -> the : 1
undefined if a -> template : 1
if a template -> is : 1
if a template -> parameter : 1
is specialized after -> it : 1
specialized after it -> has : 1
after it has -> been : 1
it has been -> instantiated : 1
has been instantiated -> for : 1
been instantiated for -> the : 1
instantiated for the -> same : 1
same template illustrates -> template : 1
template illustrates template -> const : 1
illustrates template const -> double : 1
template const double -> pi : 1
const double pi -> function : 1
double pi function -> template : 1
pi function template -> t : 1
return x class -> template : 1
x class template -> class : 1
template class circle -> is : 1
class circle is -> instantiated : 1
circle is instantiated -> when : 1
is instantiated when -> is : 1
instantiated when is -> t : 1
when is t -> const : 1
is t const -> return : 1
const return pi -> t : 1
return pi t -> const : 1
pi t const -> return : 1
return t function -> template : 1
t function template -> void : 1
t function template -> computes : 1
function template void -> obj : 1
template void obj -> overload : 1
void obj overload -> the : 1
obj overload the -> function : 1
template with another -> void : 1
with another void -> int : 1
another void int -> explicit : 1
void int explicit -> instantiation : 1
int explicit instantiation -> explicit : 1
explicit instantiation explicit -> instantiation : 1
instantiation explicit instantiation -> of : 1
explicit instantiation of -> and : 1
instantiation of and -> implicit : 1
instantiation of and -> therefore : 1
of and implicit -> instantiation : 1
and implicit instantiation -> of : 1
implicit instantiation of -> class : 1
implicit instantiation of -> cout : 1
implicit instantiation of -> introduce : 1
instantiation of class -> after : 1
of class after -> instantiation : 1
class after instantiation -> of : 1
after instantiation of -> illegal : 1
instantiation of illegal -> to : 1
of illegal to -> specialize : 1
illegal to specialize -> it : 1
to specialize it -> double : 1
specialize it double -> return : 1
it double return -> x : 1
double return x -> int : 1
using namespace no -> instance : 1
namespace no instance -> is : 1
no instance is -> needed : 1
instance is needed -> even : 1
is needed even -> to : 1
needed even to -> resolve : 1
even to resolve -> overloaded : 1
to resolve overloaded -> print : 1
resolve overloaded print -> for : 1
overloaded print for -> i : 1
print for i -> i : 1
i i implicit -> instantiation : 1
i implicit instantiation -> of : 1
instantiation of cout -> i : 1
of cout i -> instantiation : 1
cout i instantiation -> of : 1
i instantiation of -> and : 1
of and therefore -> implicit : 1
and therefore implicit -> instantiation : 1
therefore implicit instantiation -> of : 1
instantiation of introduce -> a : 1
of introduce a -> new : 1
introduce a new -> wrinkle : 1
a new wrinkle -> to : 1
new wrinkle to -> name : 1
wrinkle to name -> for : 1
to name for -> the : 1
for the rules -> of : 1
for the rules -> are : 1
for the rules -> that : 2
of name when -> compiling : 1
name when compiling -> a : 1
when compiling a -> the : 1
compiling a the -> compiler : 1
the compiler distinguishes -> between : 1
compiler distinguishes between -> names : 1
distinguishes between names -> that : 1
between names that -> depend : 1
names that depend -> on : 1
parameters and those -> that : 1
and those that -> do : 1
those that do -> not : 1
those that do -> the : 2
do not nondependent -> names : 1
not nondependent names -> are : 1
nondependent names are -> looked : 1
looked up normally -> when : 1
up normally when -> the : 1
normally when the -> template : 1
template is dependent -> on : 1
is dependent on -> the : 1
dependent on the -> other : 1
on the other -> must : 1
on the other -> might : 1
on the other -> these : 1
on the other -> implementing : 1
on the other -> is : 1
on the other -> an : 1
on the other -> c : 1
on the other -> facets : 1
on the other -> copying : 1
other must wait -> until : 1
must wait until -> the : 1
wait until the -> template : 1
until the template -> is : 1
template is when -> the : 1
is when the -> template : 1
arguments are bound -> to : 1
to the only -> then : 1
to the only -> to : 1
the only then -> can : 1
only then can -> the : 1
then can the -> compiler : 1
can the compiler -> know : 1
the compiler know -> what : 1
compiler know what -> those : 1
know what those -> names : 1
what those names -> truly : 1
those names truly -> this : 1
names truly this -> is : 1
truly this is -> sometimes : 1
is sometimes known -> as : 1
sometimes known as -> section : 1
known as section -> describes : 1
as section describes -> dependent : 1
section describes dependent -> and : 1
describes dependent and -> the : 1
dependent and the -> following : 1
and the following -> section : 1
and the following -> is : 1
and the following -> example : 1
the following section -> describes : 1
following section describes -> what : 1
describes what the -> compiler : 1
what the compiler -> does : 1
compiler does with -> dependent : 1
does with dependent -> name : 1
with dependent name -> can : 1
dependent name can -> have : 1
have different meanings -> in : 1
different meanings in -> different : 1
meanings in different -> template : 1
in different template -> in : 1
different template in -> a : 1
function is dependent -> if : 1
is dependent if -> any : 1
is dependent if -> its : 1
dependent if any -> of : 1
of its arguments -> are : 1
arguments are an -> operator : 1
are an operator -> has : 1
has a dependent -> name : 1
has a dependent -> it : 1
a dependent name -> if : 1
dependent name if -> any : 1
name if any -> of : 1
of its operands -> are : 1
its operands are -> is : 1
operands are is -> a : 1
are is a -> type : 1
are is a -> when : 1
type that that -> can : 1
that that can -> change : 1
that can change -> meaning : 1
that can change -> size : 1
can change meaning -> if : 1
change meaning if -> a : 1
meaning if a -> template : 1
template parameter the -> following : 1
parameter the following -> are : 1
following are dependent -> name : 1
are dependent name -> of : 1
dependent name of -> a : 1
a type template -> parameter : 2
a type template -> and : 1
type template parameter -> or : 2
parameter or template -> template : 1
parameter or template -> a : 1
template template struct -> demo : 1
template struct demo -> template : 1
struct demo template -> instance : 1
demo template instance -> with : 1
template instance with -> template : 1
instance with template -> arguments : 1
arguments that are -> class : 1
that are class -> templ : 1
are class templ -> class : 1
class templ class -> demo : 1
templ class demo -> nested : 1
class demo nested -> class : 1
demo nested class -> in : 1
nested class in -> a : 1
in a dependent -> class : 1
a dependent class -> template : 1
a dependent class -> demo : 2
dependent class template -> as : 1
template as the -> class : 1
template as the -> base : 1
class template that -> contains : 1
class template that -> lies : 1
class template that -> characterizes : 1
class template that -> defines : 1
class template that -> uses : 1
class template that -> represents : 1
template that contains -> the : 1
contains the nested -> class : 1
the nested class -> demo : 1
nested class demo -> array : 1
class demo array -> that : 1
class demo array -> with : 1
demo array that -> has : 1
array that has -> a : 1
array that has -> length : 1
array that has -> the : 2
has a base -> type : 1
a base type -> that : 1
base type that -> is : 1
is a dependent -> class : 1
is a dependent -> shows : 1
is a dependent -> it : 1
dependent class demo -> array : 1
dependent class demo -> qualified : 1
demo array with -> a : 1
array with a -> size : 1
with a size -> that : 1
a size that -> is : 1
size that is -> later : 1
that is later -> in : 1
in this class -> demo : 1
in this class -> class : 1
this class demo -> and : 1
class demo and -> references : 1
demo and references -> to : 1
and references to -> dependent : 1
and references to -> keywords : 1
and references to -> the : 1
and references to -> elements : 1
and references to -> a : 1
references to dependent -> types : 1
to dependent types -> or : 1
dependent types or -> functions : 1
types or functions -> functions : 1
or functions functions -> whose : 1
functions functions whose -> return : 1
functions whose return -> types : 1
whose return types -> or : 1
return types or -> parameter : 1
types or parameter -> types : 1
or parameter types -> are : 1
types are dependent -> or : 1
are dependent or -> whose : 1
dependent or whose -> default : 1
or whose default -> arguments : 1
whose default arguments -> are : 1
arguments are class -> demo : 1
are class demo -> or : 1
class demo or -> that : 1
demo or that -> depends : 1
or that depends -> on : 1
on a template -> parameter : 1
for a base -> class : 1
base class or -> member : 1
class or member -> that : 1
or member that -> a : 1
member that a -> class : 1
a class nested -> in : 1
class nested in -> a : 1
class template is -> always : 1
class template is -> defined : 1
class template is -> a : 50
class template is -> used : 1
class template is -> an : 5
class template is -> the : 7
class template is -> specialized : 3
class template is -> one : 1
class template is -> not : 1
class template is -> which : 1
template is always -> class : 1
is always class -> demo : 1
always class demo -> t : 1
class demo t -> or : 1
demo t or -> version : 1
t or version -> of : 1
or version of -> a : 1
version of a -> dependent : 1
of a dependent -> class : 1
of a dependent -> struct : 1
class demo qualified -> in : 1
demo qualified in -> which : 1
qualified in which -> any : 1
in which any -> qualifier : 1
which any qualifier -> is : 1
any qualifier is -> the : 1
qualifier is the -> name : 1
a dependent struct -> outer : 1
dependent struct outer -> struct : 1
struct outer struct -> inner : 1
outer struct inner -> class : 1
struct inner class -> demo : 1
inner class demo -> has : 1
class demo has -> a : 1
demo has a -> dependent : 1
a dependent it -> can : 1
a dependent it -> is : 1
a dependent it -> and : 1
dependent it can -> be : 1
type is qualified -> or : 1
is qualified or -> unqualified : 1
is qualified or -> the : 1
or unqualified name -> if : 1
unqualified name if -> its : 1
name if its -> type : 1
if its type -> is : 2
type is cast -> to : 1
to a dependent -> creating : 1
a dependent creating -> an : 1
dependent creating an -> object : 1
creating an object -> of : 1
object of dependent -> expression : 1
of dependent expression -> that : 1
dependent expression that -> is : 1
that is built -> from : 1
from at least -> one : 1
least one dependent -> except : 1
one dependent except -> when : 1
dependent except when -> the : 1
except when the -> result : 1
when the result -> type : 1
when the result -> of : 1
is not as -> in : 1
is not as -> shown : 1
not as in -> the : 1
as in the -> or : 1
as in the -> character : 1
as in the -> other : 1
in the or -> member : 1
the or member -> reference : 1
the or member -> call : 1
or member reference -> the : 1
member reference the -> or : 1
reference the or -> constant : 1
the or constant -> expression : 1
or constant expression -> can : 1
constant expression can -> also : 1
expression can also -> be : 1
also be if -> its : 1
be if its -> type : 1
type is dependent -> or : 1
is dependent or -> if : 1
dependent or if -> any : 1
or if any -> subexpression : 1
if any subexpression -> is : 1
any subexpression is -> an : 1
subexpression is an -> identifier : 1
an identifier is -> in : 1
an identifier is -> a : 1
identifier is in -> the : 1
the following it -> is : 1
following it is -> the : 1
with a dependent -> it : 1
dependent it is -> the : 1
of a value -> template : 1
of a value -> in : 2
of a value -> to : 1
a value template -> it : 1
value template it -> is : 1
or enumerated and -> its : 1
enumerated and its -> initial : 1
and its initial -> value : 1
its initial value -> is : 1
expression is only -> if : 1
is only if -> its : 1
only if its -> operand : 1
if its operand -> is : 2
its operand is -> a : 2
is a cast -> expression : 1
a cast expression -> is : 1
expression is dependent -> if : 1
dependent if its -> operand : 1
a dependent shows -> a : 1
dependent shows a -> variety : 1
variety of dependent -> types : 1
of dependent types -> and : 1
dependent types and -> struct : 1
types and struct -> base : 1
and struct base -> typedef : 1
struct base typedef -> t : 1
base typedef t -> is : 1
typedef t is -> void : 1
t is void -> func : 1
is void func -> is : 1
void func is -> void : 1
is void proc -> is : 1
void proc is -> class : 1
proc is class -> inner : 1
is class inner -> inner : 1
class inner inner -> is : 1
inner inner is -> int : 1
inner is int -> x : 1
is int x -> is : 1
int x is -> class : 1
x is class -> data : 1
is class data -> data : 1
class data data -> is : 1
data data is -> int : 1
data is int -> array : 1
is int array -> is : 1
int array is -> class : 1
array is class -> demo : 1
is class demo -> inner : 1
class demo inner -> demo : 1
demo inner demo -> is : 1
inner demo is -> char : 1
demo is char -> y : 1
is char y -> is : 1
char y is -> int : 1
y is int -> writing : 1
is int writing -> a : 1
int writing a -> template : 1
writing a template -> declaration : 1
writing a template -> that : 1
should use qualified -> names : 1
use qualified names -> as : 1
qualified names as -> much : 1
names as much -> as : 1
much as use -> member : 1
as use member -> expressions : 1
use member expressions -> to : 1
member expressions to -> refer : 1
expressions to refer -> to : 1
member functions if -> a : 1
functions if a -> name : 1
is a bare -> the : 1
a bare the -> name : 1
bare the name -> lookup : 1
rules are different -> from : 1
from the rules -> for : 1
rules for compiler -> looks : 1
for compiler looks -> up : 1
looks up nondependent -> names : 1
up nondependent names -> at : 1
nondependent names at -> the : 1
names at the -> point : 1
where the template -> is : 1
is declared or -> dependent : 1
declared or dependent -> base : 1
or dependent base -> classes : 1
dependent base classes -> are : 1
are not searched -> at : 1
not searched at -> the : 1
searched at the -> point : 1
not know anything -> about : 1
know anything about -> the : 1
anything about the -> instantiation : 1
about the instantiation -> base : 1
the instantiation base -> this : 1
instantiation base this -> can : 1
base this can -> give : 1
this can give -> rise : 1
can give rise -> to : 1
give rise to -> surprising : 1
rise to surprising -> in : 1
to surprising in -> the : 1
surprising in the -> following : 1
following the member -> function : 1
member function does -> not : 1
does not see -> so : 1
not see so -> it : 1
see so it -> returns : 1
so it returns -> the : 1
so it returns -> class : 1
it returns the -> global : 1
it returns the -> character : 3
it returns the -> number : 3
it returns the -> smallest : 2
it returns the -> class : 11
it returns the -> new : 2
it returns the -> next : 1
returns the global -> struct : 1
the global struct -> base : 1
global struct base -> double : 1
struct base double -> int : 1
base double int -> struct : 1
double int struct -> derived : 1
derived int const -> return : 1
const return returns -> names : 1
return returns names -> are : 1
returns names are -> looked : 1
in the context -> of : 2
declaration and later -> in : 1
the in when -> performing : 1
in when performing -> name : 1
in when performing -> such : 1
when performing name -> lookup : 1
performing name lookup -> the : 1
lookup the compiler -> searches : 1
searches the declaration -> and : 1
declaration and instantiation -> namespaces : 1
and instantiation namespaces -> for : 1
instantiation namespaces for -> the : 1
namespaces for the -> function : 1
for the function -> argument : 1
for the function -> uses : 1
for the function -> and : 1
for the function -> can : 1
for the function -> constructs : 1
for the function -> is : 1
for the function -> calls : 4
argument the instantiation -> context : 1
the instantiation context -> is : 1
the instantiation context -> never : 1
instantiation context is -> the : 1
context is the -> innermost : 1
is the innermost -> namespace : 1
innermost namespace scope -> that : 1
scope that encloses -> the : 1
that encloses the -> template : 1
encloses the template -> for : 1
the template for -> a : 2
the template for -> the : 2
the template for -> class : 15
the template for -> type : 1
template for a -> template : 1
template for a -> predicate : 1
template for a -> bit : 1
template for a -> file : 1
template for a -> specific : 1
template instance at -> global : 1
instance at global -> scope : 1
at global scope -> has : 1
global scope has -> the : 1
scope has the -> global : 1
has the global -> scope : 1
global scope as -> its : 1
scope as its -> instantiation : 1
as its instantiation -> the : 1
its instantiation the -> context : 1
instantiation the context -> for : 1
the context for -> an : 1
context for an -> instance : 1
for an instance -> that : 1
an instance that -> is : 1
instance that is -> local : 1
is the namespace -> where : 1
the namespace where -> the : 1
namespace where the -> function : 1
is the instantiation -> context : 1
instantiation context never -> includes : 1
context never includes -> local : 1
never includes local -> so : 1
includes local so -> dependent : 1
local so dependent -> names : 1
so dependent names -> are : 1
dependent names are -> never : 1
dependent names are -> resolved : 1
names are never -> looked : 1
are never looked -> up : 1
never looked up -> in : 1
the local function -> template : 1
local function template -> can : 1
function template can -> have : 1
template can have -> multiple : 2
have multiple instantiation -> points : 1
multiple instantiation points -> for : 1
instantiation points for -> the : 1
points for the -> same : 1
same template arguments -> in : 2
arguments in a -> single : 1
single source a -> template : 1
source a template -> can : 1
have multiple instantiations -> for : 1
multiple instantiations for -> the : 1
instantiations for the -> same : 1
arguments in multiple -> source : 1
in multiple source -> if : 1
multiple source if -> the : 1
source if the -> different : 1
if the different -> contexts : 1
the different contexts -> for : 1
different contexts for -> the : 1
contexts for the -> different : 1
for the different -> instantiations : 1
the different instantiations -> result : 1
different instantiations result -> in : 1
instantiations result in -> different : 1
result in different -> definitions : 1
in different definitions -> of : 1
different definitions of -> the : 1
of the templates -> for : 1
the templates for -> the : 1
templates for the -> same : 1
templates for the -> comparison : 1
templates for the -> standard : 1
same template the -> behavior : 1
template the behavior -> is : 1
the best way -> to : 2
best way to -> avoid : 1
best way to -> achieve : 1
way to avoid -> this : 1
to avoid this -> undefined : 1
avoid this undefined -> behavior : 1
this undefined behavior -> is : 1
undefined behavior is -> to : 1
is to avoid -> using : 1
to avoid using -> unqualified : 1
to avoid using -> an : 1
avoid using unqualified -> dependent : 1
using unqualified dependent -> dependent : 1
unqualified dependent dependent -> shows : 1
dependent dependent shows -> several : 1
dependent shows several -> ways : 1
shows several ways -> name : 1
several ways name -> lookup : 1
ways name lookup -> affects : 1
name lookup affects -> a : 1
lookup affects a -> in : 1
affects a in -> note : 1
a in note -> that : 1
note that can -> refer : 1
that can refer -> to : 1
refer to its -> members : 1
to its members -> without : 1
its members without -> qualification : 1
members without qualification -> or : 1
without qualification or -> member : 1
qualification or member -> the : 1
or member the -> derived : 1
member the derived -> such : 1
the derived such -> as : 1
derived such as -> must : 1
such as must -> use : 1
as must use -> or : 1
must use or -> qualify : 1
use or qualify -> the : 1
or qualify the -> member : 1
qualify the member -> name : 1
the member name -> with : 1
member name with -> the : 1
with the base -> class : 1
base class because -> the : 1
because the base -> class : 1
is not searched -> for : 1
is not searched -> when : 1
not searched for -> unqualified : 1
searched for unqualified -> the : 1
for unqualified the -> member : 1
unqualified the member -> function : 1
function is also -> it : 1
is also it -> prints : 1
also it prints -> the : 1
it prints the -> array : 1
prints the array -> by : 1
the array by -> using : 1
array by using -> an : 1
by using an -> which : 1
by using an -> acquire : 1
using an which -> calls : 1
an which calls -> to : 1
which calls to -> print : 1
calls to print -> each : 1
to print each -> the : 1
print each the -> name : 1
each the name -> is : 1
name is so -> it : 1
is so it -> is : 1
is so it -> cannot : 2
looked up when -> the : 1
up when the -> template : 1
is but when -> the : 1
template is at -> that : 1
is at that -> the : 1
knows the template -> so : 1
template so it -> also : 1
so it also -> knows : 1
it also knows -> to : 1
also knows to -> search : 1
knows to search -> the : 1
search the namespace -> for : 1
the namespace for -> the : 1
namespace for the -> right : 1
for the right -> overloaded : 1
the right overloaded -> dependent : 1
right overloaded dependent -> typename : 1
overloaded dependent typename -> class : 1
dependent typename class -> array : 1
typename class array -> typename : 1
class array typename -> friend : 1
array typename friend -> class : 1
typename friend class -> typename : 1
typename friend class -> class : 1
friend class typename -> friend : 1
class typename friend -> class : 1
class class return -> t : 1
class return t -> const : 1
return t const -> return : 7
const if start -> throw : 1
if start throw -> out : 1
start throw out -> of : 1
throw out of -> class : 1
out of class -> iterator : 1
of class iterator -> public : 1
iterator public public -> operator : 1
public public operator -> const : 1
public operator const -> return : 1
return return iterator -> return : 1
return return iterator -> const : 1
iterator return data -> typename : 1
return data typename -> void : 1
data typename void -> const : 1
void const namespace -> big : 1
const namespace big -> class : 1
namespace big class -> integer : 1
big class integer -> x : 1
class integer x -> operator : 1
integer x operator -> const : 1
x operator const -> return : 1
return int actual -> big : 1
int actual big -> integer : 1
actual big integer -> implementation : 1
big integer implementation -> is : 1
integer implementation is -> left : 1
implementation is left -> as : 1
is left as -> an : 2
left as an -> typename : 1
left as an -> void : 1
as an typename -> const : 1
an typename const -> out : 1
int const using -> several : 1
const using several -> situations : 1
using several situations -> can : 1
several situations can -> arise : 1
situations can arise -> in : 1
can arise in -> which : 1
arise in which -> template : 2
in which template -> parameters : 1
in which template -> parameter : 1
which template parameters -> hide : 1
template parameters hide -> names : 1
parameters hide names -> that : 1
names that would -> be : 1
would be visible -> in : 1
be visible in -> a : 1
visible in a -> class : 1
class or other -> situations : 1
or other situations -> arise : 1
other situations arise -> in : 1
situations arise in -> which : 1
which template parameter -> names : 1
template parameter names -> are : 2
parameter names are -> hidden : 2
parameter names are -> chosen : 1
names are hidden -> by : 1
names are hidden -> in : 1
are hidden by -> other : 1
by other a -> member : 1
other a member -> of : 1
template is defined -> outside : 1
defined outside of -> the : 1
defined outside of -> its : 1
the namespace declaration -> that : 1
namespace declaration that -> contains : 1
declaration that contains -> the : 1
class a template -> parameter : 1
class a template -> instance : 1
parameter name hides -> members : 1
name hides members -> of : 1
hides members of -> the : 1
of the ns -> struct : 1
the ns struct -> demo : 1
ns struct demo -> t : 1
struct demo t -> int : 1
struct demo t -> x : 1
demo t int -> x : 1
int x template -> parameter : 1
x template parameter -> not : 1
template parameter not -> parameter : 1
parameter not parameter -> names : 1
not parameter names -> are : 1
are hidden in -> the : 1
hidden in the -> following : 1
following a member -> is : 1
member is defined -> outside : 1
outside of its -> class : 1
its class members -> of : 1
class members of -> the : 1
class template hide -> template : 1
template hide template -> parameter : 1
hide template parameter -> struct : 1
template parameter struct -> demo : 1
parameter struct demo -> t : 1
demo t x -> member : 1
t x member -> not : 1
x member not -> parameter : 1
member not parameter -> the : 1
not parameter the -> definition : 1
parameter the definition -> of : 1
template that lies -> outside : 1
that lies outside -> the : 1
lies outside the -> class : 1
class a base -> class : 1
base class name -> or : 1
name or the -> name : 1
base class hides -> a : 1
hides a template -> parameter : 1
template parameter if -> the : 1
template parameter if -> you : 1
parameter if the -> base : 1
class is base -> typedef : 1
is base typedef -> struct : 1
base typedef struct -> derived : 1
typedef struct derived -> base : 1
derived base sz -> hides : 1
base sz hides -> template : 1
sz hides template -> a : 1
hides template a -> base : 1
template a base -> class : 1
class of a -> class : 1
dependent it and -> its : 1
it and its -> members : 1
and its members -> do : 1
its members do -> not : 1
members do not -> hide : 1
do not hide -> template : 1
not hide template -> and : 1
hide template and -> the : 1
template and the -> base : 1
template and the -> associated : 2
and the base -> class : 1
not searched when -> unqualified : 1
searched when unqualified -> names : 1
when unqualified names -> are : 1
unqualified names are -> looked : 1
unqualified names are -> resolved : 1
the type type -> parsing : 1
type type parsing -> a : 1
type parsing a -> template : 1
parsing a template -> the : 1
must know which -> names : 1
know which names -> are : 2
which names are -> types : 1
which names are -> macros : 1
names are types -> and : 1
are types and -> which : 1
types and which -> are : 1
and which are -> objects : 1
and which are -> the : 1
and which are -> not : 1
and which are -> with : 1
and which are -> specializations : 1
which are objects -> or : 1
are objects or -> unqualified : 1
objects or unqualified -> names : 1
or unqualified names -> are : 1
names are resolved -> using : 1
names are resolved -> according : 1
are resolved using -> the : 1
resolved using the -> normal : 1
the normal name -> lookup : 1
normal name lookup -> rules : 1
lookup rules earlier -> in : 1
rules earlier in -> this : 1
in this qualified -> dependent : 1
this qualified dependent -> names : 1
qualified dependent names -> are : 1
are resolved according -> to : 1
resolved according to -> a : 1
according to a -> simple : 1
according to a -> template : 1
according to a -> comparison : 1
according to a -> typename : 1
to a simple -> if : 1
a simple if -> the : 1
a simple if -> you : 1
simple if the -> name : 1
if the name -> is : 1
name is prefaced -> with : 1
prefaced with it -> is : 1
not a only -> in : 1
a only in -> template : 1
only in template -> declarations : 1
in template declarations -> and : 1
template declarations and -> and : 1
and and only -> with : 1
and only with -> qualified : 1
only with qualified -> although : 1
with qualified although -> is : 1
qualified although is -> meant : 1
although is meant -> to : 1
is meant to -> be : 1
be used with -> dependent : 1
be used with -> standard : 2
be used with -> the : 6
be used with -> a : 1
be used with -> any : 2
be used with -> and : 1
be used with -> objects : 1
be used with -> its : 1
used with dependent -> you : 1
with dependent you -> can : 1
dependent you can -> use : 1
can use it -> with : 1
can use it -> as : 1
use it with -> nondependent : 1
it with nondependent -> typename : 1
with nondependent typename -> in : 1
nondependent typename in -> a : 1
typename in a -> template : 2
a template shows -> a : 1
template shows a -> typical : 1
use of typename -> in : 1
of typename in -> a : 1
a template erase -> all : 1
template erase all -> items : 1
erase all items -> from : 2
erase all items -> erase : 1
erase all items -> standard : 1
erase all items -> for : 1
all items from -> an : 1
all items from -> container : 1
items from an -> associative : 1
items from an -> typename : 1
from an associative -> container : 1
an associative container -> for : 1
an associative container -> keeps : 1
an associative container -> that : 2
an associative container -> also : 1
an associative container -> much : 1
associative container for -> which : 1
container for which -> a : 1
for which a -> predicate : 11
for which a -> position : 1
which a predicate -> returns : 9
which a predicate -> is : 2
a predicate returns -> typename : 5
a predicate returns -> a : 3
a predicate returns -> items : 1
a predicate returns -> true : 3
predicate returns typename -> void : 1
predicate returns typename -> typename : 2
predicate returns typename -> initer : 1
predicate returns typename -> fwditer : 1
returns typename void -> pred : 1
typename void pred -> need : 1
typename void pred -> int : 1
void pred need -> typename : 1
pred need typename -> because : 1
need typename because -> iterator : 1
typename because iterator -> is : 1
because iterator is -> qualified : 1
iterator is qualified -> for : 1
is qualified for -> it : 1
qualified for it -> it : 1
for it it -> if : 1
it it if -> else : 1
it if else -> with : 1
if else with -> with : 1
else with with -> syntax : 1
with with syntax -> permits : 1
with syntax permits -> and : 1
syntax permits and -> in : 1
permits and in -> other : 1
and in other -> it : 1
in other it -> is : 1
in other it -> performs : 6
other it is -> a : 1
a programming albeit -> a : 1
programming albeit a -> language : 1
albeit a language -> that : 1
a language that -> is : 1
language that is -> hard : 1
that is hard -> to : 1
is hard to -> write : 1
hard to write -> and : 1
to write and -> even : 1
to write and -> you : 1
to write and -> which : 1
write and even -> harder : 1
and even harder -> to : 1
even harder to -> the : 1
harder to the -> full : 1
to the full -> scope : 1
the full scope -> and : 1
full scope and -> power : 1
scope and power -> of : 1
and power of -> programming : 1
power of programming -> with : 1
of programming with -> templates : 1
templates is beyond -> the : 1
is beyond the -> scope : 1
beyond the scope -> of : 1
scope of this -> this : 1
of this this -> section : 1
this this section -> presents : 1
section presents some -> tips : 1
presents some tips -> for : 1
some tips for -> starting : 1
tips for starting -> your : 1
for starting your -> own : 1
starting your own -> exploration : 1
your own exploration -> of : 1
own exploration of -> this : 1
exploration of this -> exciting : 1
of this exciting -> tells : 1
this exciting tells -> you : 1
exciting tells you -> about : 1
tells you about -> some : 1
you about some -> interesting : 1
about some interesting -> projects : 1
some interesting projects -> in : 1
interesting projects in -> this : 1
projects in this -> you : 1
this you want -> to : 1
function to round -> off : 1
to round off -> values : 1
to round off -> a : 2
round off values -> to : 1
off values to -> a : 1
values to a -> fixed : 1
to a fixed -> number : 2
a fixed number -> of : 2
fixed number of -> decimal : 1
fixed number of -> typename : 1
number of decimal -> you : 1
number of decimal -> digits : 3
number of decimal -> places : 1
of decimal you -> decide : 1
decimal you decide -> to : 1
decide to write -> the : 1
to write the -> function : 1
to write the -> numerator : 1
to write the -> a : 1
to write the -> next : 1
the function by -> multiplying : 1
the function by -> calling : 1
function by multiplying -> by : 1
by multiplying by -> a : 1
multiplying by a -> power : 1
by a power -> of : 1
a power of -> rounding : 1
power of rounding -> off : 1
of rounding off -> to : 1
rounding off to -> an : 1
rounding off to -> two : 1
off to an -> and : 1
an and dividing -> by : 1
and dividing by -> the : 1
by the same -> power : 1
the same power -> of : 2
same power of -> you : 1
same power of -> every : 1
power of you -> can : 1
of you can -> hardcode : 1
of you can -> use : 2
of you can -> avoid : 2
of you can -> also : 1
of you can -> print : 1
you can hardcode -> the : 1
can hardcode the -> in : 1
hardcode the in -> the : 1
the but you -> prefer : 1
the but you -> can : 2
but you prefer -> to : 1
you prefer to -> use : 1
prefer to use -> a : 1
use a in -> which : 1
which a template -> parameter : 1
template parameter specifies -> the : 2
parameter specifies the -> number : 1
parameter specifies the -> type : 1
parameter specifies the -> filename : 1
of decimal digits -> to : 1
of decimal digits -> for : 1
of decimal digits -> that : 1
decimal digits to -> to : 1
digits to to -> avoid : 1
to avoid computing -> the : 1
avoid computing the -> same : 1
computing the same -> power : 1
power of every -> time : 1
of every time -> the : 1
time the function -> is : 2
is you decide -> to : 1
to use template -> programming : 1
use template programming -> to : 1
template programming to -> compute : 1
programming to compute -> the : 1
to compute the -> constant : 1
to compute the -> power : 1
to compute the -> distance : 1
compute the constant -> at : 1
the constant at -> compile : 1
constant at compile -> template : 1
at compile template -> in : 1
compile template in -> at : 1
template in at -> compile : 1
in at compile -> uses : 1
at compile uses -> to : 1
compile uses to -> compute : 1
uses to compute -> the : 1
compute the power -> of : 1
the power of -> any : 1
the power of -> the : 1
power of any -> integer : 1
of any integer -> raised : 1
any integer raised -> to : 1
integer raised to -> any : 1
raised to any -> nonnegative : 1
to any nonnegative -> integer : 1
any nonnegative integer -> three : 1
nonnegative integer three -> base : 1
integer three base -> cases : 1
three base cases -> for : 1
base cases for -> the : 1
cases for the -> recursion : 1
for the recursion -> are : 1
the recursion are -> defined : 1
recursion are defined -> as : 1
are defined as -> raising : 1
are defined as -> member : 1
are defined as -> global : 1
are defined as -> or : 1
defined as raising -> any : 1
as raising any -> value : 1
raising any value -> to : 1
any value to -> the : 1
to the power -> is : 2
to the power -> of : 1
the power is -> always : 1
the power is -> an : 1
power is always -> raising : 1
power is always -> and : 1
is always raising -> to : 1
always raising to -> any : 1
raising to any -> power : 1
to any power -> is : 1
any power is -> always : 1
is always and -> raising : 1
always and raising -> to : 1
and raising to -> the : 1
raising to the -> power : 1
power is an -> try : 1
is an try -> to : 1
an try to -> define : 1
try to define -> more : 1
to define more -> the : 1
define more the -> class : 1
more the class -> template : 1
template is used -> to : 1
define the function -> at : 1
function at compile -> unsigned : 1
at compile unsigned -> struct : 1
compile unsigned struct -> ipower : 1
unsigned struct ipower -> enum : 1
struct ipower enum -> value : 1
ipower enum value -> x : 1
enum value x -> struct : 1
value x struct -> enum : 1
x struct enum -> value : 1
struct enum value -> struct : 3
struct enum value -> false : 3
struct enum value -> true : 2
struct enum value -> typename : 1
struct enum value -> typedef : 2
enum value struct -> enum : 3
enum value struct -> round : 1
enum value struct -> char : 1
value struct enum -> value : 3
value struct round -> off : 1
struct round off -> a : 1
a value to -> a : 6
a value to -> you : 2
a value to -> the : 2
a value to -> an : 1
a value to -> when : 1
a value to -> if : 1
number of typename -> t : 1
of typename t -> if : 1
typename t if -> return : 1
t if return -> else : 1
t if return -> return : 1
else return addition -> to : 1
return addition to -> you : 1
addition to you -> can : 1
can write more -> complicated : 1
write more complicated -> programs : 1
more complicated programs -> that : 1
complicated programs that -> are : 1
programs that are -> evaluated : 1
programs that are -> or : 1
that are evaluated -> at : 1
are evaluated at -> compile : 1
at compile for -> the : 1
compile for the -> project : 1
for the project -> in : 1
the project in -> uses : 1
project in uses -> templates : 1
in uses templates -> to : 1
uses templates to -> create : 1
templates to create -> that : 1
to create that -> lists : 1
create that lists -> of : 1
that lists of -> types : 1
lists of types -> that : 1
of types that -> are : 1
of types that -> can : 1
that are manipulated -> at : 1
are manipulated at -> compile : 1
manipulated at compile -> such : 1
at compile such -> lists : 1
compile such lists -> can : 1
such lists can -> greatly : 1
lists can greatly -> simplify : 1
can greatly simplify -> certain : 1
greatly simplify certain -> programming : 1
simplify certain programming -> such : 1
certain programming such -> as : 1
programming such as -> implementing : 1
such as implementing -> type : 1
as implementing type -> type : 1
implementing type type -> shows : 1
type type shows -> a : 1
type shows a -> simplified : 1
shows a simplified -> version : 1
a simplified version -> of : 1
simplified version of -> type : 1
version of type -> a : 1
a list is -> defined : 1
a list is -> shows : 1
a list is -> class : 1
list is defined -> recursively : 1
is defined recursively -> as : 1
defined recursively as -> an : 1
recursively as an -> list : 1
as an list -> or : 1
an list or -> a : 1
list or a -> that : 1
or a that -> contains : 1
or a that -> the : 1
a that contains -> a : 1
a that contains -> copies : 1
contains a type -> and : 1
a list definition -> should : 1
list definition should -> be : 1
definition should be -> familiar : 1
should be familiar -> to : 1
be familiar to -> anyone : 1
familiar to anyone -> with : 1
to anyone with -> experience : 1
anyone with experience -> using : 1
with experience using -> functional : 1
experience using functional -> programming : 1
using functional programming -> type : 1
functional programming type -> empty : 1
programming type empty -> typename : 1
type empty typename -> struct : 1
empty typename struct -> node : 1
typename struct node -> typedef : 1
struct node typedef -> h : 1
node typedef h -> typedef : 1
typedef h typedef -> t : 1
h typedef t -> typename : 1
typedef t typename -> typename : 1
t typename typename -> typename : 1
typename typename empty -> struct : 1
typename empty struct -> list : 1
empty struct list -> typedef : 1
struct list typedef -> empty : 1
list typedef empty -> struct : 1
typedef empty struct -> length : 1
empty struct length -> enum : 1
struct length enum -> value : 1
length enum value -> struct : 1
enum value false -> struct : 2
enum value false -> you : 1
value false struct -> enum : 2
false struct enum -> value : 2
enum value true -> on : 1
enum value true -> typename : 1
value true on -> type : 1
true on type -> lists : 1
on type lists -> are : 1
type lists are -> inherently : 1
lists are inherently -> to : 1
are inherently to -> count : 1
inherently to count -> the : 1
to count the -> number : 4
count the number -> of : 4
number of items -> in : 8
number of items -> the : 2
number of items -> equivalent : 1
number of items -> complexity : 1
number of items -> that : 4
number of items -> for : 2
number of items -> copied : 1
number of items -> read : 1
number of items -> and : 1
number of items -> of : 1
items in a -> type : 1
items in a -> and : 1
items in a -> typename : 2
in a type -> count : 1
in a type -> shows : 1
in a type -> typename : 1
in a type -> you : 1
in a type -> quotient : 2
a type count -> the : 1
type count the -> as : 1
count the as -> and : 1
the as and -> add : 1
as and add -> the : 1
and add the -> length : 1
add the length -> of : 1
the length of -> the : 4
the length of -> a : 1
length of the -> the : 1
length of the -> multibyte : 1
length of the -> string : 1
length of the -> day : 1
length of the -> character : 1
the the recursion -> stops : 1
the recursion stops -> at : 1
recursion stops at -> the : 1
stops at the -> end : 1
stops at the -> sets : 2
which is implemented -> as : 1
is implemented as -> a : 1
as a specialization -> of : 1
specialization of the -> template : 17
specialization of the -> although : 1
specialization of the -> class : 3
template for the -> important : 1
template for the -> limits : 1
template for the -> and : 1
for the important -> action : 1
the important action -> when : 1
important action when -> using : 1
action when using -> type : 1
when using type -> lists : 1
using type lists -> is : 1
type lists is -> to : 1
lists is to -> test : 1
to test to -> do : 1
test to do -> you : 1
to do you -> must : 1
do you must -> be : 1
do you must -> ensure : 1
able to compare -> two : 1
to compare two -> types : 1
to compare two -> objects : 1
compare two types -> to : 1
two types to -> see : 1
types to see -> if : 1
are the the -> class : 1
are the the -> specialization : 1
are the the -> keyword : 1
class template uses -> partial : 1
template uses partial -> specialization : 1
uses partial specialization -> to : 1
partial specialization to -> determine : 1
specialization to determine -> when : 1
to determine when -> two : 1
determine when two -> types : 1
when two types -> are : 1
two types are -> the : 1
are the if -> the : 2
if the two -> types : 1
if the two -> sequences : 1
if the two -> elements : 1
if the two -> locales : 1
the two types -> specified : 1
two types specified -> as : 1
types specified as -> template : 1
specified as template -> arguments : 1
as template arguments -> are : 1
arguments are the -> the : 1
arguments are the -> primary : 1
the the specialization -> sets : 1
the specialization sets -> to : 1
specialization sets to -> the : 1
sets to the -> arguments : 1
to the arguments -> are : 1
are the primary -> template : 1
primary template is -> and : 1
template is and -> is : 1
and is membership -> in : 1
is membership in -> a : 1
membership in a -> type : 2
a type shows -> and : 1
type shows and -> how : 1
shows and how -> it : 1
and how it -> is : 1
and how it -> can : 1
and how it -> encodes : 1
in the membership -> in : 1
the membership in -> a : 1
a type typename -> struct : 1
a type typename -> typename : 1
type typename struct -> enum : 1
typename struct enum -> value : 3
value true typename -> struct : 1
true typename struct -> enum : 1
enum value typename -> typename : 1
value typename typename -> struct : 1
typename typename struct -> enum : 1
typename typename struct -> typedef : 2
value false you -> can : 1
false you can -> define : 1
can define type -> lists : 1
define type lists -> and : 1
type lists and -> test : 1
lists and test -> whether : 1
and test whether -> a : 2
whether a type -> is : 5
whether a type -> tests : 1
type is in -> a : 1
type is in -> function : 5
can use these -> templates : 1
use these templates -> to : 1
these templates to -> implement : 1
templates to implement -> simple : 1
to implement simple -> type : 1
implement simple type -> for : 1
simple type for -> you : 1
type for you -> can : 1
you can create -> a : 1
you can create -> an : 1
can create a -> list : 1
of the integral -> types : 1
integral types and -> test : 1
integral types and -> a : 1
integral types and -> for : 1
integral types and -> often : 1
types and test -> whether : 1
is one of -> the : 11
the fundamental integral -> for : 1
fundamental integral for -> integral : 1
integral for integral -> types : 1
for integral types -> is : 1
for integral types -> are : 1
integral types is -> important : 1
types is important -> when : 1
important when implementing -> standard : 1
when implementing standard -> as : 1
implementing standard as -> discussed : 1
standard as discussed -> in : 1
discussed in and -> type : 1
in and type -> shows : 1
and type shows -> some : 1
type shows some -> uses : 1
uses of type -> type : 1
of type type -> typedef : 1
type type typedef -> unsigned : 1
type typedef unsigned -> signed : 1
typedef unsigned signed -> unsigned : 1
unsigned signed unsigned -> unsigned : 1
signed unsigned unsigned -> typedef : 1
unsigned unsigned typedef -> long : 1
long int using -> namespace : 1
namespace cout cout -> signed : 1
cout cout signed -> cout : 1
cout signed cout -> unsigned : 1
signed cout unsigned -> cout : 1
cout unsigned cout -> cout : 1
unsigned cout cout -> cout : 1
cout cout an -> ordinary : 1
cout an ordinary -> a : 1
an ordinary a -> function : 1
an ordinary a -> class : 1
ordinary a function -> template : 1
function template requires -> a : 1
template requires a -> definition : 2
requires a definition -> before : 1
requires a definition -> for : 1
a definition before -> the : 1
definition before the -> function : 1
can be like -> an : 1
be like an -> ordinary : 1
ordinary a class -> template : 1
class template requires -> a : 1
definition for each -> member : 1
each member function -> and : 1
function and static -> data : 1
and static data -> member : 1
data member before -> they : 1
member before they -> can : 1
before they can -> be : 1
can be unlike -> ordinary : 1
be unlike ordinary -> functions : 1
unlike ordinary functions -> or : 1
ordinary functions or -> templates : 1
functions or templates -> are : 1
or templates are -> typically : 1
templates are typically -> defined : 1
are typically defined -> in : 1
typically defined in -> every : 1
every source are -> often : 1
source are often -> used : 1
often used by -> placing : 1
used by placing -> a : 1
by placing a -> template : 1
placing a template -> declaration : 1
declaration and all -> supporting : 1
and all supporting -> definitions : 1
all supporting definitions -> in : 1
supporting definitions in -> a : 1
a header then -> that : 1
header then that -> file : 1
then that file -> anywhere : 1
that file anywhere -> the : 1
file anywhere the -> template : 1
anywhere the template -> is : 1
template is for -> every : 1
is for every -> implicit : 1
is for every -> characters : 1
for every implicit -> or : 1
every implicit or -> explicit : 1
implicit or explicit -> the : 1
or explicit the -> compiler : 1
explicit the compiler -> generates : 1
compiler generates the -> necessary : 1
generates the necessary -> code : 1
the necessary code -> for : 1
necessary code for -> the : 1
code for the -> if : 1
code for the -> united : 1
for the if -> multiple : 1
for the if -> you : 2
the if multiple -> source : 1
if multiple source -> files : 1
multiple source files -> instantiate : 1
source files instantiate -> the : 1
files instantiate the -> same : 1
instantiate the same -> template : 1
same template with -> the : 1
same the compiler -> and : 1
the program contains -> a : 2
program contains a -> single : 2
contains a single -> copy : 2
of the instantiated -> functions : 1
the instantiated functions -> and : 1
instantiated functions and -> compilers : 1
functions and compilers -> use : 1
and compilers use -> different : 1
compilers use different -> techniques : 1
use different techniques -> to : 1
different techniques to -> ensure : 1
techniques to ensure -> that : 1
following are four -> different : 1
are four different -> most : 1
four different most -> common : 1
different most common -> approach : 1
most common approach -> is : 1
common approach is -> to : 1
approach is to -> have : 2
approach is to -> separate : 1
is to have -> the : 2
have the compiler -> keep : 1
have the compiler -> generate : 1
the compiler keep -> track : 1
compiler keep track -> of : 1
of which source -> files : 1
which source files -> require : 1
source files require -> which : 1
files require which -> when : 1
require which when -> the : 1
which when the -> program : 1
the compiler combines -> all : 1
compiler combines all -> the : 1
combines all the -> lists : 1
all the lists -> of : 1
the lists of -> required : 1
lists of required -> instantiations : 1
of required instantiations -> and : 1
required instantiations and -> compiles : 1
instantiations and compiles -> the : 1
and compiles the -> template : 1
template instantiations at -> that : 1
instantiations at that -> as : 1
at that as -> an : 1
that as an -> the : 1
the compiler saves -> the : 1
compiler saves the -> compiled : 1
saves the compiled -> so : 1
the compiled so -> an : 1
compiled so an -> instantiation : 1
so an instantiation -> that : 1
an instantiation that -> does : 1
instantiation that does -> not : 1
does not change -> does : 1
not change does -> not : 1
change does not -> need : 1
to be approach -> is : 1
be approach is -> to : 1
the compiler generate -> the : 1
compiler generate the -> code : 1
generate the code -> for : 1
the code for -> all : 1
code for all -> needed : 1
for all needed -> instantiations : 1
all needed instantiations -> when : 1
needed instantiations when -> it : 1
instantiations when it -> compiles : 1
it compiles each -> source : 1
compiles each source -> the : 1
each source the -> linker : 1
source the linker -> identifies : 1
the linker identifies -> duplicate : 1
linker identifies duplicate -> instantiations : 1
identifies duplicate instantiations -> and : 1
duplicate instantiations and -> ensures : 1
instantiations and ensures -> that : 1
and ensures that -> the : 1
that the linked -> program : 1
the linked program -> gets : 1
linked program gets -> a : 1
program gets a -> single : 1
of each third -> approach : 1
each third approach -> is : 1
third approach is -> to : 1
is to separate -> the : 1
to separate the -> template : 1
separate the template -> declaration : 1
separate the template -> arguments : 1
template declaration from -> its : 1
declaration from its -> associated : 1
from its associated -> if : 1
its associated if -> the : 1
associated if the -> declaration : 1
declaration is in -> the : 2
in the definitions -> are : 1
compiler automatically locates -> the : 1
automatically locates the -> definition : 1
locates the definition -> file : 1
the definition file -> from : 1
definition file from -> the : 1
file from the -> name : 1
from the name -> of : 1
name of the -> declaration : 1
name of the -> container : 1
name of the -> macro : 1
name of the -> subsection : 1
name of the -> the : 1
name of the -> last : 1
name of the -> proxy : 1
name of the -> public : 1
name of the -> protected : 1
the declaration in -> this : 2
the declaration in -> a : 1
declaration in this -> the : 1
declaration in this -> section : 1
of which instantiations -> it : 1
which instantiations it -> needs : 1
instantiations it needs -> and : 1
it needs and -> compiles : 1
needs and compiles -> each : 1
and compiles each -> of : 1
compiles each of -> them : 1
each of them -> only : 1
of them only -> approach : 1
them only approach -> uses : 1
only approach uses -> the : 1
approach uses the -> keyword : 1
uses the keyword -> to : 1
the keyword to -> declare : 1
the keyword to -> tell : 1
keyword to declare -> and : 1
to declare and -> define : 1
and define an -> exported : 1
define an exported -> template : 1
an exported template -> lets : 2
exported template lets -> you : 2
template or all -> the : 1
or all the -> members : 1
or all the -> items : 1
class template in -> a : 1
class template in -> buffer : 1
class template in -> also : 1
a separate source -> the : 1
source the header -> contains : 1
the header contains -> only : 1
header contains only -> the : 1
contains only the -> with : 1
only the with -> no : 1
with no i -> write : 1
no i write -> exactly : 1
i write exactly -> one : 1
write exactly one -> compiler : 1
exactly one compiler -> supports : 1
one compiler supports -> the : 1
compiler supports the -> web : 1
supports the web -> site : 1
web site for -> current : 1
site for current -> major : 1
for current major -> compiler : 1
current major compiler -> vendors : 1
major compiler vendors -> are : 1
compiler vendors are -> finally : 1
vendors are finally -> moving : 1
are finally moving -> toward : 1
finally moving toward -> full : 1
moving toward full -> conformance : 1
toward full conformance -> with : 1
full conformance with -> the : 1
with the including -> i : 1
the including i -> doubt : 1
including i doubt -> will : 1
i doubt will -> see : 1
doubt will see -> widespread : 1
will see widespread -> at : 1
see widespread at -> least : 1
widespread at least -> for : 1
at least for -> the : 1
least for the -> next : 1
the next few -> portability : 1
next few portability -> is : 1
few portability is -> important : 1
portability is important -> to : 1
important to do -> not : 1
to do not -> use : 1
not use your -> documentation : 1
use your documentation -> to : 1
learn how it -> handles : 1
how it handles -> when : 1
it handles when -> writing : 1
handles when writing -> a : 1
when writing a -> template : 1
when writing a -> wide : 1
when writing a -> generic : 5
a template that -> can : 1
a template that -> will : 1
template that can -> be : 1
template that can -> tell : 1
be used by -> multiple : 1
be used by -> a : 1
be used by -> the : 2
be used by -> comparing : 1
be used by -> calls : 2
used by multiple -> a : 1
by multiple a -> common : 1
multiple a common -> technique : 1
a common technique -> is : 1
common technique is -> to : 1
technique is to -> put : 1
is to put -> the : 1
put the declaration -> in : 1
header file and -> the : 1
file and the -> definitions : 1
file and the -> file : 1
the definitions in -> another : 1
definitions in another -> file : 1
in another file -> and : 1
another file and -> at : 1
file and at -> the : 1
and at the -> end : 1
and at the -> you : 1
end of use -> conditional : 1
of use conditional -> directives : 1
use conditional directives -> to : 1
conditional directives to -> for : 1
conditional directives to -> define : 1
directives to for -> those : 1
to for those -> compilers : 1
for those compilers -> where : 1
those compilers where -> it : 1
compilers where it -> is : 1
it is use -> conditional : 1
is use conditional -> compilation : 1
use conditional compilation -> to : 2
conditional compilation to -> define : 1
conditional compilation to -> test : 1
compilation to define -> a : 1
define a macro -> only : 1
a macro only -> for : 1
macro only for -> compilers : 1
only for compilers -> that : 1
for compilers that -> support : 1
compilers that support -> and : 1
that support and -> defining : 1
support and defining -> a : 1
defining a shows -> this : 1
a shows this -> common : 1
shows this common -> and : 1
this common and -> defining : 1
common and defining -> a : 1
defining a export -> export : 1
a export export -> export : 1
export export export -> export : 1
export export export -> class : 1
export export class -> point : 1
export class point -> t : 1
class point t -> t : 2
point t t -> const : 1
point t t -> any : 1
t t const -> return : 1
return t export -> t : 1
t export t -> export : 1
export t export -> int : 1
t export int -> your : 1
export int your -> compiler : 1
int your compiler -> supports : 1
your compiler supports -> define : 1
compiler supports define -> if : 1
supports define if -> the : 1
define if the -> compiler : 1
the compiler requires -> template : 1
compiler requires template -> definitions : 1
requires template definitions -> in : 1
template definitions in -> every : 1
definitions in every -> source : 1
every source define -> most : 1
source define most -> compilers : 1
define most compilers -> offer : 1
most compilers offer -> a : 1
compilers offer a -> way : 1
offer a way -> to : 1
a way to -> define : 1
a way to -> implement : 1
a way to -> prevent : 1
a way to -> modify : 2
a way to -> explore : 1
way to define -> macros : 1
to define macros -> globally : 1
define macros globally -> in : 1
macros globally in -> a : 1
globally in a -> project : 1
in a project -> definition : 1
a project definition -> in : 1
project definition in -> a : 1
in a another -> alternative : 1
a another alternative -> is : 1
another alternative is -> to : 1
alternative is to -> use : 1
to use conditional -> compilation : 1
compilation to test -> the : 1
to test the -> predefined : 1
to test the -> the : 1
test the predefined -> macros : 1
the predefined macros -> that : 1
predefined macros that -> most : 1
macros that most -> compilers : 1
that most compilers -> and : 1
most compilers and -> use : 1
compilers and use -> those : 1
and use those -> to : 1
use those to -> set : 1
those to set -> the : 1
to set the -> template : 1
to set the -> you : 1
to set the -> value : 1
to set the -> file : 1
to set the -> new : 1
to set the -> buffer : 3
to set the -> capacity : 1
set the template -> macros : 1
the template macros -> put : 1
template macros put -> these : 1
macros put these -> definitions : 1
put these definitions -> in : 1
these definitions in -> a : 1
in a configuration -> file : 1
a configuration file -> that : 1
configuration file that -> is : 1
file that is -> included : 1
that is included -> first : 1
is included first -> by : 1
included first by -> every : 1
first by every -> other : 1
by every other -> as : 1
every other as -> shown : 1
other as shown -> in : 1
shown in template -> compilation : 1
in template compilation -> template : 1
template compilation template -> compilation : 1
compilation template compilation -> seven : 1
template compilation seven -> chapters : 1
compilation seven chapters -> describe : 1
seven chapters describe -> the : 1
chapters describe the -> this : 1
chapters describe the -> the : 1
describe the this -> and : 1
the this and -> the : 1
this and the -> next : 1
the next two -> chapters : 1
the next two -> characters : 1
next two chapters -> describe : 1
two chapters describe -> the : 1
describe the the -> library : 1
the the library -> consists : 1
the the library -> overloads : 1
the library consists -> of : 1
library consists of -> a : 1
of a number -> of : 2
of a number -> even : 1
which each header -> declares : 1
each header declares -> and : 1
header declares and -> functions : 2
header declares and -> other : 1
declares and functions -> for : 1
declares and functions -> of : 1
declares and functions -> related : 1
and functions for -> use : 1
and functions for -> working : 5
and functions for -> streams : 2
and functions for -> computation : 1
and functions for -> classifying : 1
and functions for -> convenient : 1
and functions for -> in : 1
and functions for -> operating : 1
functions for use -> in : 1
use in much -> of : 1
in much of -> the : 1
library is implemented -> using : 1
is implemented using -> so : 1
implemented using so -> the : 1
using so the -> implementation : 1
so the implementation -> is : 1
the implementation is -> typically : 1
the implementation is -> not : 1
implementation is typically -> embodied : 1
is typically embodied -> entirely : 1
typically embodied entirely -> in : 1
embodied entirely in -> header : 1
entirely in header -> parts : 1
in header parts -> of : 1
header parts of -> the : 1
parts of the -> library : 2
parts of the -> rational : 1
parts of the -> destination : 2
parts of the -> date : 1
the library are -> separately : 1
library are separately -> compiled : 1
are separately compiled -> and : 1
separately compiled and -> must : 1
compiled and must -> be : 1
must be linked -> into : 1
be linked into -> a : 1
linked into a -> the : 1
into a the -> details : 1
a the details -> of : 1
a the details -> are : 1
details of which -> are : 1
of which are -> dictated : 1
of which are -> an : 1
which are dictated -> by : 1
are dictated by -> the : 1
dictated by the -> chapter : 1
dictated by the -> in : 2
by the chapter -> presents : 1
the chapter presents -> an : 1
chapter presents an -> overview : 3
presents an overview -> of : 3
library and some -> of : 1
and some of -> its : 1
and some of -> the : 1
some of its -> more : 1
of its more -> important : 1
its more important -> wide : 1
more important wide -> and : 1
important wide and -> multibyte : 1
wide and multibyte -> and : 1
wide and multibyte -> but : 1
and multibyte and -> other : 1
and multibyte and -> multibyte : 1
multibyte and other -> important : 1
and other important -> parts : 1
other important parts -> of : 1
important parts of -> the : 1
the library get -> their : 1
library get their -> own : 1
own and introduces -> the : 1
introduces the input -> and : 1
the input and -> output : 1
the input and -> most : 1
the input and -> the : 1
input and output -> and : 2
input and output -> in : 1
input and output -> functions : 1
input and output -> using : 2
input and output -> streams : 1
input and output -> class : 4
input and output -> file : 1
input and output -> typename : 1
input and output -> locales : 1
input and output -> function : 2
input and output -> string : 3
input and output -> character : 1
input and output -> to : 1
and output and -> and : 1
and output and -> see : 1
output and and -> describes : 1
and and describes -> the : 1
and describes the -> and : 1
the and algorithms -> that : 1
and algorithms that -> make : 1
algorithms that make -> up : 1
make up what -> is : 1
up what is -> most : 1
what is most -> often : 1
most often known -> as : 1
template or of -> the : 1
or of the -> standard : 1
the standard of -> the : 4
standard of the -> standard : 2
standard of the -> most : 1
standard of the -> member : 1
library has each -> containing : 1
has each containing -> a : 1
each containing a -> set : 1
containing a set -> of : 1
set of and -> object : 1
set of and -> each : 1
set of and -> an : 1
of and object -> a : 1
and object a -> header : 1
object a header -> is : 1
a header is -> sometimes : 1
header is sometimes -> called : 1
called a header -> but : 1
a header but -> that : 1
header but that -> phrase : 1
but that phrase -> is : 1
that phrase is -> an : 1
phrase is an -> implementation : 1
an implementation does -> not : 2
implementation does not -> need : 1
implementation does not -> have : 1
to implement headers -> as : 1
implement headers as -> external : 1
headers as external -> although : 1
as external although -> it : 1
external although it -> is : 1
is often simplest -> to : 1
often simplest to -> think : 1
simplest to think -> of : 1
to think of -> a : 1
of a header -> as : 1
a header as -> a : 1
header as a -> file : 1
as a file -> that : 1
a file that -> contains : 1
file that contains -> and : 1
that contains and -> function : 1
contains and function -> all : 1
and function all -> the : 1
function all the -> names : 1
all the names -> declared : 1
the names declared -> in : 2
standard library are -> in : 1
library are in -> the : 1
in the of -> are : 1
the of are -> not : 1
of are not -> in : 1
in any so -> it : 1
any so it -> is : 1
you know which -> names : 1
names are macros -> and : 1
are macros and -> which : 1
macros and which -> are : 1
are the detailed -> descriptions : 1
the detailed descriptions -> in : 2
detailed descriptions in -> tell : 2
descriptions in tell -> you : 2
in tell you -> this : 2
tell you this -> the : 1
tell you this -> information : 1
you this the -> only : 1
this the only -> other : 1
only other names -> that : 1
other names that -> are : 1
the namespace are -> the : 1
namespace are the -> global : 1
are the global -> and : 1
the global and -> declared : 1
the global and -> functions : 1
the global and -> operator : 1
global and declared -> in : 1
and declared in -> the : 1
in the with -> no : 1
in the with -> some : 1
in the with -> as : 1
with no use -> the : 1
with no use -> of : 2
no use the -> you : 1
use the you -> must : 1
you must the -> desired : 1
must the desired -> header : 1
the desired header -> or : 1
desired header or -> some : 1
header or some -> implementations : 1
or some implementations -> headers : 1
some implementations headers -> within : 1
implementations headers within -> other : 1
headers within other -> headers : 1
within other headers -> might : 1
other headers might -> the : 1
headers might the -> headers : 1
might the headers -> that : 1
the headers that -> a : 1
headers that a -> vendor : 1
that a vendor -> includes : 1
a vendor includes -> within : 1
vendor includes within -> a : 1
includes within a -> header : 1
within a header -> vary : 1
a header vary -> from : 1
header vary from -> one : 1
from one implementation -> to : 2
one implementation to -> so : 1
one implementation to -> the : 1
implementation to so -> code : 1
to so code -> that : 1
so code that -> compiles : 1
compiles successfully with -> one : 1
successfully with one -> environment : 1
with one environment -> might : 1
one environment might -> not : 1
environment might not -> compile : 1
might not compile -> in : 1
not compile in -> a : 1
compile in a -> different : 1
different the solution -> is : 1
the solution is -> to : 2
is to get -> in : 1
to get in -> the : 1
get in the -> habit : 1
in the habit -> of : 1
the habit of -> including : 1
habit of including -> all : 1
of including all -> the : 1
including all the -> headers : 1
all the headers -> you : 1
the headers you -> you : 1
headers you you -> see : 1
you you see -> of : 1
you see of -> the : 1
see of the -> form : 1
of the form -> the : 1
of the form -> these : 1
of the form -> and : 1
of the form -> in : 1
the form the -> program : 1
form the program -> was : 1
the program was -> probably : 1
the program was -> returning : 2
program was probably -> written : 1
was probably written -> in : 1
probably written in -> the : 1
written in the -> days : 1
in the days -> before : 1
the days before -> the : 1
days before the -> it : 1
before the it -> might : 1
the it might -> also : 1
it might also -> mean : 1
might also mean -> that : 1
also mean that -> your : 1
mean that your -> compiler : 1
that your compiler -> and : 1
your compiler and -> library : 2
compiler and library -> were : 1
compiler and library -> vendor : 1
compiler and library -> might : 1
compiler and library -> documentation : 1
and library were -> written : 1
library were written -> before : 1
were written before -> was : 1
written before was -> although : 1
before was although -> some : 1
was although some -> old : 1
although some old -> compilers : 1
some old compilers -> are : 1
old compilers are -> still : 1
compilers are still -> in : 1
are still in -> wide : 1
still in wide -> they : 1
in wide they -> have : 1
wide they have -> newer : 1
they have newer -> versions : 1
have newer versions -> that : 1
newer versions that -> provide : 1
versions that provide -> much : 1
that provide much -> better : 1
provide much better -> support : 1
much better support -> for : 1
better support for -> the : 1
support for the -> following : 1
following the standard -> is : 1
following the standard -> or : 1
standard is the -> best : 1
way to achieve -> portability : 1
to achieve portability -> across : 1
achieve portability across -> recent : 1
portability across recent -> compilers : 1
across recent compilers -> and : 1
recent compilers and -> must : 1
compilers and must -> not : 1
must not add -> any : 1
not add any -> declarations : 1
add any declarations -> to : 1
any declarations to -> the : 1
declarations to the -> although : 1
declarations to the -> the : 1
to the although -> you : 1
the although you -> can : 1
although you can -> specialize : 1
can specialize templates -> that : 1
specialize templates that -> are : 1
templates that are -> declared : 1
templates that are -> similar : 1
declared in when -> you : 1
in when you -> add : 1
when you add -> your : 1
you add your -> own : 1
add your own -> you : 1
your own you -> must : 1
your own you -> should : 1
own you must -> obey : 1
you must obey -> all : 1
must obey all -> the : 1
obey all the -> constraints : 1
all the constraints -> specified : 1
the constraints specified -> for : 1
constraints specified for -> the : 1
specified for the -> and : 1
and the specialization -> must : 1
the specialization must -> depend : 1
specialization must depend -> on : 1
must depend on -> at : 1
depend on at -> least : 1
on at least -> one : 1
least one name -> that : 1
one name that -> has : 1
name that has -> external : 1
that has external -> the : 1
has external the -> behavior : 1
external the behavior -> is : 1
external the behavior -> for : 1
behavior is following -> are : 1
following are brief -> descriptions : 1
are brief descriptions -> of : 1
brief descriptions of -> the : 1
descriptions of the -> contents : 1
descriptions of the -> refers : 1
descriptions of the -> and : 1
descriptions of the -> currency : 1
descriptions of the -> parts : 1
descriptions of the -> conversion : 1
descriptions of the -> member : 3
descriptions of the -> members : 1
descriptions of the -> helper : 1
of the contents -> of : 2
of the contents -> and : 1
the contents of -> each : 1
the contents of -> might : 1
the contents of -> a : 3
the contents of -> the : 18
the contents of -> an : 5
the contents of -> are : 1
the contents of -> two : 4
the contents of -> inputiterator : 1
the contents of -> and : 1
contents of each -> the : 1
of each the -> headers : 1
of each the -> of : 1
each the headers -> inherited : 1
the headers inherited -> from : 1
headers inherited from -> the : 1
from the c -> standard : 1
from the c -> for : 2
c standard are -> marked : 1
standard are marked -> as : 1
are marked as -> some : 1
marked as some -> of : 1
as some of -> these : 1
some of these -> headers : 1
some of these -> member : 1
of these headers -> have : 1
these headers have -> improved : 1
headers have improved -> which : 1
have improved which -> are : 1
improved which are -> also : 1
are also for -> complete : 1
also for complete -> descriptions : 1
for complete descriptions -> of : 1
complete descriptions of -> these : 1
complete descriptions of -> and : 1
descriptions of these -> see : 1
descriptions of these -> functions : 1
of these see -> algorithms : 1
of these see -> for : 1
these see algorithms -> for : 1
see algorithms for -> and : 1
algorithms for and -> otherwise : 1
for and otherwise -> operating : 1
and otherwise operating -> on : 1
otherwise operating on -> iterators : 1
operating on iterators -> and : 2
on iterators and -> see : 1
on iterators and -> other : 1
on iterators and -> iterator : 1
iterators and see -> and : 1
and see and -> for : 2
standard template to -> hold : 1
template to hold -> a : 1
hold a sequence -> of : 1
sequence of c -> classification : 1
of c classification -> and : 1
c classification and -> case : 1
classification and case -> c : 2
and case c -> header : 2
case c header -> also : 2
c header also -> c : 3
c header also -> header : 1
c header also -> and : 3
c header also -> standard : 1
header also c -> of : 1
header also c -> header : 1
header also c -> c : 1
also c of -> c : 1
c of c -> header : 1
of c header -> also : 1
header also header -> because : 1
also header because -> c : 1
header because c -> declarations : 1
because c declarations -> are : 1
c declarations are -> incorporated : 1
declarations are incorporated -> in : 1
are incorporated in -> the : 1
incorporated in the -> c : 1
the c of -> integer : 1
c of integer -> c : 1
of integer c -> header : 1
integer c header -> also : 1
also c header -> also : 1
also c c -> c : 1
c c c -> to : 1
c c to -> help : 1
c to help -> implement : 1
to help implement -> functions : 1
help implement functions -> that : 1
implement functions that -> take : 1
functions that take -> a : 2
functions that take -> an : 2
functions that take -> strings : 1
that take a -> variable : 1
that take a -> parameter : 1
take a variable -> number : 1
a variable number -> of : 3
variable number of -> c : 1
variable number of -> that : 1
variable number of -> arguments : 1
number of c -> standard : 1
of c standard -> c : 1
c standard c -> input : 1
c standard c -> standard : 1
standard c input -> and : 1
c input and -> c : 1
input and c -> header : 1
and c header -> also : 1
and c header -> declares : 1
header also and -> related : 1
header also and -> time : 1
header also and -> other : 1
also and related -> functions : 1
and related functions -> and : 1
and related functions -> are : 3
related functions and -> related : 1
functions and related -> c : 1
and related c -> c : 1
related c c -> header : 1
c c header -> also : 1
c c header -> can : 1
also and time -> functions : 1
and time functions -> and : 1
time functions and -> c : 1
functions and c -> character : 1
and c character -> including : 1
c character including -> c : 1
character including c -> header : 1
including c header -> also : 1
also and other -> character : 1
and other character -> classification : 1
other character classification -> and : 1
character classification and -> case : 1
character classification and -> formatting : 1
header also standard -> exception : 1
also standard exception -> class : 1
standard exception class -> and : 1
exception class and -> functions : 1
class and functions -> related : 1
and functions related -> to : 3
functions related to -> stream : 1
functions related to -> managing : 1
functions related to -> fundamental : 1
functions related to -> dynamic : 1
related to stream -> typically : 1
to stream typically -> used : 1
stream typically used -> with : 1
used with standard -> used : 1
used with standard -> class : 1
used with standard -> containers : 1
used with standard -> algorithms : 1
used with standard -> iterator : 1
with standard used -> with : 1
standard used with -> standard : 1
with standard class -> declarations : 1
standard class declarations -> for : 1
class declarations for -> all : 1
declarations for all -> declarations : 1
for all declarations -> for : 1
all declarations for -> of : 1
declarations for of -> standard : 1
for of standard -> streams : 1
of standard streams -> and : 1
standard streams and -> iterators : 1
streams and iterators -> for : 1
and iterators for -> working : 1
iterators for working -> with : 1
for working with -> standard : 1
for working with -> for : 1
for working with -> wide : 2
for working with -> complex : 1
for working with -> narrow : 1
for working with -> dates : 2
for working with -> units : 2
for working with -> uninitialized : 1
for working with -> it : 1
working with standard -> containers : 1
with standard containers -> and : 2
standard containers and -> see : 1
standard containers and -> standard : 1
containers and see -> and : 1
for more of -> numerical : 1
more of numerical -> linked : 1
of numerical linked -> list : 1
numerical linked list -> information : 1
linked list information -> for : 1
list information for -> formatting : 1
information for formatting -> and : 1
for formatting and -> parsing : 1
for formatting and -> printing : 1
for formatting and -> outputing : 1
for formatting and -> writing : 2
formatting and parsing -> and : 1
formatting and parsing -> dates : 1
and parsing and -> currency : 1
parsing and currency -> plus : 1
and currency plus -> functions : 1
currency plus functions -> for : 1
plus functions for -> and : 1
functions for and -> comparing : 1
functions for and -> clearing : 1
functions for and -> copying : 1
for and comparing -> characters : 1
and comparing characters -> and : 1
comparing characters and -> map : 1
characters and map -> called : 1
and map called -> a : 1
map called a -> standard : 1
called a standard -> algorithms : 1
a standard algorithms -> for : 1
standard algorithms for -> uninitialized : 1
algorithms for uninitialized -> and : 1
for uninitialized and -> smart : 1
uninitialized and smart -> pointers : 1
and smart pointers -> and : 1
smart pointers and -> and : 1
pointers and and -> other : 1
and and other -> functions : 1
and and other -> formatting : 1
and other functions -> related : 1
other functions related -> to : 1
related to managing -> dynamic : 1
to managing dynamic -> and : 1
managing dynamic and -> priority : 1
dynamic and priority -> queue : 1
and priority queue -> container : 1
priority queue container -> set : 1
priority queue container -> typename : 1
queue container set -> container : 1
container set container -> exception : 1
set container exception -> stream : 1
container exception stream -> used : 1
exception stream used -> by : 1
stream used by -> and : 1
used by and -> streams : 1
by and streams -> that : 1
and streams that -> work : 1
streams that work -> with : 1
work with character -> arrays : 1
work with character -> strings : 1
with character arrays -> also : 1
with character arrays -> that : 1
character arrays also -> type : 1
arrays also type -> such : 1
also type such -> as : 1
such as most -> often : 1
as most often -> used : 1
often used with -> standard : 1
often used with -> but : 1
often used with -> to : 1
often used with -> the : 1
often used with -> flags : 1
containers and standard -> library : 1
and standard library -> library : 1
and standard library -> includes : 1
standard library library -> library : 1
library library library -> includes : 1
library library includes -> the : 1
c standard library -> the : 1
c standard library -> is : 1
c standard library -> and : 1
standard library the -> c : 1
standard library the -> you : 2
library the c -> plus : 1
the c plus -> amendment : 1
c plus amendment -> in : 1
plus amendment in -> which : 1
amendment in which -> each : 1
which each c -> such : 1
each c such -> as : 1
c such as -> is : 1
as is wrapped -> as : 1
is wrapped as -> a : 1
wrapped as a -> header : 1
as a header -> being : 1
a header being -> part : 1
header being part -> of : 1
being part of -> the : 1
of the all -> and : 3
of the all -> iterators : 2
of the all -> elements : 1
of the all -> a : 1
the all and -> objects : 1
the all and -> pointers : 2
all and objects -> are : 1
and objects are -> declared : 1
objects are declared -> in : 2
in the external -> names : 1
the external names -> are : 1
external names are -> also : 1
names are also -> reserved : 2
are also reserved -> in : 2
also reserved in -> the : 2
the global proper -> practice : 1
global proper practice -> is : 1
proper practice is -> to : 1
practice is to -> use : 1
practice is to -> treat : 1
practice is to -> install : 1
use the names -> in : 1
the names in -> the : 1
the namespace but -> realize : 1
the namespace but -> reserves : 1
namespace but realize -> that : 1
but realize that -> these : 1
realize that these -> names : 1
that these names -> are : 1
these names are -> also : 1
global so you -> cannot : 1
global so you -> must : 1
you cannot write -> your : 1
you cannot write -> to : 1
cannot write your -> own : 1
your own c -> standard : 1
own c standard -> permits : 1
c standard permits -> macros : 1
standard permits macros -> to : 1
permits macros to -> be : 1
macros to be -> defined : 1
to be defined -> to : 1
be defined to -> mask : 1
defined to mask -> function : 1
to mask function -> in : 1
mask function in -> the : 1
in the wrappers -> for : 1
the wrappers for -> these : 1
wrappers for these -> the : 1
for these the -> names : 1
these the names -> must : 1
the names must -> be : 1
names must be -> declared : 1
declared as not -> the : 1
as not the -> c : 1
not the c -> header : 1
the c header -> might : 1
the c header -> defines : 1
c header might -> contain : 1
header might contain -> the : 1
might contain the -> int : 1
contain the int -> printf : 1
the int printf -> the : 1
int printf the -> macro : 1
printf the macro -> is : 1
the macro is -> not : 3
the macro is -> the : 1
the macro is -> then : 1
the macro is -> defined : 1
macro is not -> so : 1
macro is not -> as : 1
macro is not -> in : 1
macro is not -> defined : 1
so the header -> must : 1
the header must -> declare : 1
header must declare -> the : 1
it as feature -> of : 1
as feature of -> is : 1
feature of is -> that : 2
c standard headers -> are : 1
standard headers are -> also : 1
standard headers are -> so : 1
headers are also -> available : 1
are also available -> as : 1
also available as -> their : 1
available as their -> original : 1
as their original -> c : 1
their original c -> names : 1
original c names -> when : 1
c names when -> used : 1
names when used -> in : 1
when used in -> this : 1
in this their -> names : 1
this their names -> are : 1
their names are -> in : 1
their names are -> suggestive : 1
names are in -> the : 1
global as though -> a : 1
as though a -> declaration : 1
though a declaration -> were : 1
a declaration were -> applied : 1
declaration were applied -> to : 1
were applied to -> each : 1
applied to each -> name : 1
applied to each -> element : 1
to each name -> the : 1
each name the -> old : 1
name the old -> style : 1
the old style -> headers : 1
old style headers -> are : 1
style headers are -> equivalent : 1
headers are equivalent -> to : 1
to the new -> the : 1
to the new -> element : 2
to the new -> an : 4
to the new -> a : 1
to the new -> ownership : 1
to the new -> you : 2
the new the -> old : 1
the new the -> order : 1
the new the -> complexity : 2
the new the -> stream : 2
the new the -> number : 1
new the old -> c : 1
the old c -> header : 1
old c header -> names : 1
c header names -> are : 1
header names are -> new : 1
names are new -> code : 1
are new code -> should : 1
new code should -> use : 1
code should use -> the : 2
the style c -> and : 1
style c and -> multibyte : 1
c and multibyte -> and : 1
multibyte and multibyte -> familiar : 1
and multibyte familiar -> type : 1
multibyte familiar type -> is : 1
familiar type is -> sometimes : 1
type is sometimes -> called : 1
called a as -> opposed : 1
a as opposed -> to : 1
as opposed to -> which : 1
opposed to which -> is : 1
to which is -> a : 1
to which is -> then : 1
to which is -> declared : 1
a the key -> difference : 1
the key difference -> between : 2
between a narrow -> and : 1
a narrow and -> wide : 1
and wide character -> is : 1
and wide character -> function : 1
and wide character -> character : 1
wide character is -> that : 1
wide character is -> bits : 1
wide character is -> appended : 1
wide character is -> stored : 1
wide character is -> always : 1
wide character is -> just : 1
wide character is -> function : 8
wide character is -> a : 3
character is that -> a : 1
that a wide -> character : 3
wide character can -> represent : 1
character can represent -> any : 1
can represent any -> single : 1
represent any single -> character : 1
any single character -> in : 1
single character in -> any : 1
character in any -> character : 1
character in any -> in : 1
in any character -> set : 1
any character set -> that : 1
character set that -> an : 1
set that an -> implementation : 1
that an implementation -> a : 1
that an implementation -> of : 1
an implementation a -> narrow : 1
implementation a narrow -> on : 1
a narrow on -> the : 1
narrow on the -> other : 1
the other might -> be : 1
other might be -> too : 1
might be too -> small : 1
be too small -> to : 1
too small to -> represent : 1
too small to -> fit : 1
small to represent -> all : 1
to represent all -> so : 1
represent all so -> multiple : 1
all so multiple -> narrow : 1
so multiple narrow -> objects : 1
multiple narrow objects -> can : 1
narrow objects can -> make : 1
objects can make -> up : 1
objects can make -> the : 1
up a logical -> character : 1
a logical character -> called : 1
logical character called -> a : 1
character called a -> some : 1
called a some -> minimal : 1
a some minimal -> requirements : 1
some minimal requirements -> for : 1
minimal requirements for -> the : 1
requirements for the -> character : 1
character sets the -> standard : 1
sets the standard -> is : 1
standard is purposely -> and : 1
is purposely and -> imposes : 1
purposely and imposes -> few : 1
and imposes few -> restrictions : 1
imposes few restrictions -> on : 1
few restrictions on -> an : 1
restrictions on an -> some : 1
on an some -> basic : 1
an some basic -> behavioral : 1
some basic behavioral -> requirements : 1
basic behavioral requirements -> are : 1
behavioral requirements are -> that : 1
requirements are that -> conversion : 1
are that conversion -> from : 1
that conversion from -> a : 1
from a narrow -> character : 1
narrow character to -> a : 1
character to a -> wide : 4
character to a -> multibyte : 4
character to a -> null : 1
character to a -> single : 1
wide character must -> produce : 1
character must produce -> an : 1
must produce an -> equivalent : 1
produce an equivalent -> converting : 1
an equivalent converting -> back : 1
equivalent converting back -> to : 1
back to a -> narrow : 1
back to a -> stream : 1
back to a -> if : 1
to a narrow -> character : 1
to a narrow -> the : 1
narrow character must -> restore : 1
character must restore -> the : 1
must restore the -> original : 1
restore the original -> the : 1
original the open -> nature : 1
the open nature -> of : 1
open nature of -> the : 1
nature of the -> standard : 1
nature of the -> first : 3
nature of the -> tangent : 1
nature of the -> the : 1
the standard gives -> the : 1
standard gives the -> compiler : 1
gives the compiler -> and : 1
and library vendor -> wide : 1
library vendor wide -> for : 1
vendor wide for -> a : 1
wide for a -> compiler : 1
for a compiler -> for : 1
for a compiler -> to : 1
a compiler for -> japanese : 1
compiler for japanese -> customers : 1
for japanese customers -> might : 1
japanese customers might -> support : 1
customers might support -> a : 1
might support a -> variety : 1
support a variety -> of : 1
variety of japanese -> industrial : 1
of japanese industrial -> standard : 1
japanese industrial standard -> character : 1
japanese industrial standard -> encodes : 1
industrial standard character -> but : 1
standard character but -> not : 1
character but not -> any : 1
but not any -> european : 1
but not any -> asian : 1
not any european -> character : 1
any european character -> another : 1
european character another -> vendor : 1
character another vendor -> might : 1
another vendor might -> support : 1
vendor might support -> multiple : 1
might support multiple -> iso : 1
support multiple iso -> character : 1
multiple iso character -> sets : 1
iso character sets -> for : 1
character sets for -> western : 1
sets for western -> and : 1
for western and -> eastern : 1
western and eastern -> but : 1
and eastern but -> not : 1
eastern but not -> any : 1
not any asian -> multibyte : 1
any asian multibyte -> character : 1
asian multibyte character -> although : 1
multibyte character although -> the : 1
character although the -> standard : 1
although the standard -> defines : 1
although the standard -> does : 1
the standard defines -> universal : 1
standard defines universal -> characters : 1
defines universal characters -> in : 1
characters in terms -> of : 1
terms of the -> unicode : 1
terms of the -> and : 1
of the unicode -> it : 1
the unicode it -> does : 1
unicode it does -> not : 1
require any support -> for : 1
any support for -> unicode : 1
support for unicode -> character : 1
for unicode character -> with : 1
unicode character with -> no : 1
character with no -> section : 1
with no section -> discusses : 1
no section discusses -> some : 1
section discusses some -> of : 1
discusses some of -> the : 1
of the broad -> issues : 1
the broad issues -> in : 1
broad issues in -> dealing : 1
issues in dealing -> with : 1
in dealing with -> wide : 1
in dealing with -> multiple : 1
dealing with wide -> and : 1
with wide and -> multibyte : 1
and multibyte but -> the : 1
multibyte but the -> details : 1
but the details -> of : 1
details of specific -> characters : 1
of specific characters -> and : 1
specific characters and -> character : 1
and character sets -> are : 1
sets are program -> that : 1
are program that -> must : 1
program that must -> deal : 1
that must deal -> with : 1
must deal with -> international : 1
deal with international -> character : 1
with international character -> sets : 1
international character sets -> might : 1
character sets might -> work : 1
sets might work -> entirely : 1
might work entirely -> with : 1
work entirely with -> wide : 1
entirely with wide -> although : 1
with wide although -> wide : 1
wide although wide -> characters : 1
although wide characters -> usually : 1
wide characters usually -> require : 1
characters usually require -> more : 1
usually require more -> memory : 1
require more memory -> than : 1
more memory than -> narrow : 1
memory than narrow -> they : 1
than narrow they -> are : 1
narrow they are -> usually : 1
they are usually -> easier : 1
they are usually -> different : 1
are usually easier -> to : 1
usually easier to -> searching : 1
easier to searching -> for : 1
to searching for -> substrings : 1
searching for substrings -> in : 1
for substrings in -> a : 1
substrings in a -> wide : 1
wide string is -> easy : 1
string is easy -> because : 1
is easy because -> you : 1
easy because you -> never : 1
you never have -> the : 1
never have the -> problem : 1
have the problem -> of : 1
the problem of -> matching : 1
the problem of -> comparing : 1
problem of matching -> partial : 1
of matching partial -> characters : 1
matching partial characters -> can : 1
partial characters can -> happen : 1
characters can happen -> with : 1
can happen with -> multibyte : 1
happen with multibyte -> common : 1
with multibyte common -> implementation : 1
multibyte common implementation -> of : 1
common implementation of -> is : 1
implementation of is -> to : 1
to use unicode -> which : 1
use unicode which -> means : 1
unicode which means -> each : 1
which means each -> wide : 1
means each wide -> character : 1
each wide character -> is : 1
each wide character -> to : 1
character is bits -> and : 1
is bits and -> represents : 1
bits and represents -> a : 1
and represents a -> single : 1
and represents a -> bitmask : 1
a single unicode -> suppose : 1
single unicode suppose -> you : 1
unicode suppose you -> want : 1
want to declare -> a : 1
declare a wide -> string : 1
wide string that -> contains : 1
string that contains -> the : 2
contains the greek -> letter : 1
the greek letter -> pi : 3
greek letter pi -> you : 1
greek letter pi -> which : 1
greek letter pi -> the : 1
letter pi you -> can : 1
pi you can -> specify : 1
specify the string -> with : 1
the string with -> a : 1
the string with -> copies : 1
with a universal -> name : 1
a universal name -> the : 1
universal name the -> string : 1
name the string -> would : 1
the string would -> contain : 2
string would contain -> with : 1
string would contain -> different : 1
would contain with -> a : 1
contain with a -> different : 1
different the string -> would : 1
would contain different -> standard : 1
contain different standard -> class : 1
different standard class -> supports : 1
standard class supports -> wide : 1
class supports wide -> and : 1
supports wide and -> all : 1
wide and all -> the : 1
all the streams -> support : 1
the streams support -> wide : 1
streams support wide -> characters : 1
support wide characters -> multibyte : 1
wide characters multibyte -> character : 1
characters multibyte character -> represents : 1
multibyte character represents -> a : 1
multibyte character represents -> the : 2
character represents a -> single : 1
single character as -> a : 1
character as a -> series : 1
as a series -> of : 3
series of one -> or : 1
more or narrow -> because : 1
or narrow because -> a : 1
narrow because a -> single : 1
because a single -> character : 1
single character might -> occupy : 1
character might occupy -> multiple : 1
might occupy multiple -> working : 1
occupy multiple working -> with : 1
multiple working with -> multibyte : 1
working with multibyte -> strings : 1
with multibyte strings -> is : 1
multibyte strings is -> more : 1
strings is more -> difficult : 1
difficult than working -> with : 1
than working with -> wide : 1
working with wide -> for : 1
working with wide -> see : 1
working with wide -> many : 1
working with wide -> consider : 1
with wide for -> if : 1
wide for if -> you : 1
if you search -> a : 1
you search a -> multibyte : 1
search a multibyte -> string : 1
a multibyte string -> for : 1
a multibyte string -> to : 3
multibyte string for -> the : 1
string for the -> character : 1
character when you -> find : 1
when you find -> a : 1
you find a -> you : 1
find a you -> must : 1
you must test -> whether : 1
you must test -> the : 1
must test whether -> the : 1
test whether the -> matching : 1
test whether the -> difference : 1
test whether the -> symmetric : 1
test whether the -> union : 1
whether the matching -> character : 1
the matching character -> is : 1
matching character is -> actually : 1
character is actually -> part : 1
is actually part -> of : 1
actually part of -> a : 1
of a multibyte -> character : 1
of a multibyte -> a : 1
of a multibyte -> macro : 1
of a multibyte -> the : 1
a multibyte character -> and : 1
a multibyte character -> library : 1
a multibyte character -> in : 1
a multibyte character -> sequence : 1
a multibyte character -> to : 3
a multibyte character -> that : 1
multibyte character and -> is : 1
and is therefore -> not : 1
is therefore not -> actually : 1
therefore not actually -> a : 1
actually a match -> for : 1
a match for -> the : 1
match for the -> single : 1
for the single -> character : 1
the single character -> you : 1
single character you -> want : 1
character you want -> to : 1
want to the -> problem : 1
to the problem -> of : 1
problem of comparing -> suppose : 1
of comparing suppose -> you : 1
comparing suppose you -> need : 1
suppose you need -> to : 2
need to sort -> the : 1
to sort the -> strings : 1
to sort the -> items : 1
sort the strings -> in : 1
the strings in -> ascending : 1
strings in ascending -> if : 1
in ascending if -> one : 1
ascending if one -> string : 1
if one string -> starts : 1
if one string -> is : 4
one string starts -> with : 1
string starts with -> the : 1
string starts with -> an : 1
with the character -> and : 1
with the character -> if : 1
with the character -> sequence : 1
with the character -> thousands : 1
character and other -> starts : 1
and other starts -> with : 1
other starts with -> it : 1
starts with it -> seems : 1
with it seems -> that : 1
it seems that -> the : 1
it seems that -> traits : 1
seems that the -> first : 1
first is smaller -> than : 1
smaller than the -> second : 1
smaller than the -> result : 1
smaller than the -> current : 3
than the second -> and : 1
second and therefore -> should : 1
and therefore should -> come : 1
therefore should come -> before : 1
should come before -> the : 7
come before the -> on : 1
come before the -> null : 1
come before the -> keys : 3
come before the -> second : 2
come before the -> into : 1
before the on -> the : 1
the on the -> other : 1
the on the -> righthand : 4
the on the -> lefthand : 4
the other these -> characters : 1
other these characters -> might : 1
these characters might -> be : 1
characters might be -> the : 1
characters might be -> function : 1
characters might be -> logically : 1
characters might be -> stored : 1
might be the -> first : 1
be the first -> of : 1
be the first -> form : 2
first of multibyte -> character : 1
of multibyte character -> so : 1
multibyte character so -> the : 1
character so the -> strings : 1
character so the -> next : 2
so the strings -> cannot : 1
the strings cannot -> be : 1
strings cannot be -> compared : 1
cannot be compared -> until : 1
be compared until -> you : 1
compared until you -> have : 1
until you have -> analyzed : 1
you have analyzed -> the : 1
have analyzed the -> strings : 1
analyzed the strings -> for : 1
the strings for -> multibyte : 1
strings for multibyte -> character : 1
for multibyte character -> character : 1
multibyte character character -> sets : 1
character character sets -> and : 1
character sets and -> a : 1
sets and a -> particular : 1
and a particular -> compiler : 1
and a particular -> implementation : 1
a particular compiler -> and : 1
particular compiler and -> library : 1
and library might -> support : 1
library might support -> only : 1
might support only -> one : 1
support only one -> or : 1
only one or -> just : 1
one or just -> a : 1
or just a -> some : 1
just a some -> multibyte : 1
a some multibyte -> character : 1
some multibyte character -> sets : 1
multibyte character sets -> specifically : 1
character sets specifically -> support : 1
sets specifically support -> a : 1
specifically support a -> particular : 1
support a particular -> such : 1
a particular such -> as : 1
particular such as -> the : 1
as the chinese -> character : 1
the chinese character -> the : 1
chinese character the -> character : 1
character the character -> set : 1
character set supports -> all : 1
set supports all -> unicode : 1
supports all unicode -> characters : 1
all unicode characters -> using : 1
unicode characters using -> one : 1
characters using one -> to : 1
using one to -> six : 1
one to six -> narrow : 1
to six narrow -> consider : 1
six narrow consider -> how : 1
narrow consider how -> an : 1
consider how an -> implementation : 1
how an implementation -> might : 1
an implementation might -> encode : 1
an implementation might -> require : 1
an implementation might -> include : 1
an implementation might -> throw : 2
an implementation might -> derive : 1
implementation might encode -> the : 1
might encode the -> greek : 1
encode the greek -> letter : 1
letter pi which -> has : 1
pi which has -> a : 1
has a unicode -> value : 1
a unicode value -> of : 1
unicode value of -> with : 1
value of with -> no : 1
of with no -> the : 1
of with no -> types : 1
with no the -> narrow : 1
with no the -> macro : 1
with no the -> function : 1
with no the -> constructor : 1
no the narrow -> character : 1
narrow character set -> is : 2
set is iso -> the : 1
is iso the -> encoding : 1
iso the encoding -> is : 1
the encoding is -> so : 1
encoding is so -> contains : 1
is so contains -> if : 1
so contains if -> the : 1
contains if the -> narrow : 1
if the narrow -> character : 1
set is the -> representation : 1
set is the -> whitespace : 1
is the representation -> is : 1
the representation is -> a : 1
the representation is -> signed : 1
representation is a -> multibyte : 1
is a multibyte -> and : 1
is a multibyte -> character : 1
is a multibyte -> shift : 1
a multibyte and -> would : 1
multibyte and would -> contain : 1
and would contain -> many : 1
would contain many -> character : 1
contain many character -> sets : 1
many character sets -> do : 1
character sets do -> not : 1
sets do not -> have : 1
have any encoding -> for : 1
any encoding for -> in : 1
encoding for in -> which : 1
for in which -> case : 1
case the contents -> of : 1
contents of might -> be : 1
of might be -> or : 1
be or some -> other : 2
or some other -> marker : 1
or some other -> failure : 2
or some other -> the : 1
some other marker -> for : 1
other marker for -> unknown : 1
marker for unknown -> can : 1
for unknown can -> convert : 1
unknown can convert -> a : 1
can convert a -> character : 1
can convert a -> to : 1
convert a character -> sequence : 1
a character sequence -> to : 1
a character sequence -> shifts : 1
character sequence to -> a : 2
sequence to a -> wide : 1
sequence to a -> single : 1
wide character and -> back : 1
character and back -> using : 1
and back using -> the : 1
back using the -> functions : 1
using the functions -> in : 1
the functions in -> when : 1
the functions in -> this : 2
the functions in -> type : 1
the functions in -> the : 1
functions in when -> performing : 1
when performing such -> the : 1
performing such the -> library : 1
such the library -> might : 1
the library might -> need : 1
library might need -> to : 1
need to keep -> track : 1
need to keep -> their : 1
track of state -> information : 1
of state information -> during : 1
state information during -> the : 1
information during the -> this : 1
during the this -> is : 1
as the and -> is : 1
as the and -> those : 1
and is stored -> in : 1
is stored in -> an : 1
is stored in -> the : 2
is stored in -> points : 1
is stored in -> parameter : 1
is stored in -> a : 6
is stored in -> if : 1
is stored in -> or : 1
is stored in -> and : 1
is stored in -> for : 1
stored in an -> object : 1
stored in an -> external : 1
in an object -> defined : 1
in an object -> cannot : 1
an object defined -> in : 1
object defined in -> the : 1
in the japanese -> industrial : 1
the japanese industrial -> standard : 1
industrial standard encodes -> characters : 1
standard encodes characters -> and : 1
encodes characters and -> a : 1
characters and a -> character : 1
and a character -> sequence : 1
and a character -> traits : 1
and a character -> is : 2
and a character -> it : 6
character sequence shifts -> from : 1
sequence shifts from -> to : 1
shifts from to -> and : 1
from to and -> another : 1
to and another -> sequence : 1
and another sequence -> shifts : 1
another sequence shifts -> the : 1
sequence shifts the -> shift : 1
shifts the shift -> state : 1
the shift state -> keeps : 1
the shift state -> is : 2
the shift state -> and : 1
the shift state -> depending : 1
the shift state -> separately : 1
shift state keeps -> track : 1
state keeps track -> of : 1
of the current -> the : 1
of the current -> filename : 1
of the current -> c : 2
of the current -> state : 1
of the current -> item : 1
of the current -> global : 1
of the current -> which : 1
current the initial -> shift : 1
the initial shift -> state : 1
the initial shift -> function : 1
the initial shift -> it : 1
the initial shift -> although : 1
the initial shift -> then : 1
initial shift state -> is : 1
shift state is -> the : 1
shift state is -> used : 5
shift state is -> reset : 2
shift state is -> that : 1
state is the -> multibyte : 1
state is the -> initial : 2
is the multibyte -> string : 1
the multibyte string -> represents : 1
multibyte string represents -> one : 1
string represents one -> wide : 1
represents one wide -> the : 1
one wide the -> greek : 1
wide the greek -> letter : 1
letter pi the -> first : 1
pi the first -> three : 1
first three characters -> switch : 1
first three characters -> are : 1
three characters switch -> to : 1
characters switch to -> the : 1
switch to the -> next : 1
next two characters -> encode : 1
two characters encode -> the : 1
characters encode the -> and : 1
encode the and -> the : 1
and the final -> three : 1
and the final -> result : 1
the final three -> characters : 1
final three characters -> restore : 1
three characters restore -> states : 1
characters restore states -> are : 1
restore states are -> especially : 1
states are especially -> important : 1
are especially important -> when : 2
especially important when -> performing : 1
especially important when -> using : 1
important when performing -> by : 1
when performing by -> file : 1
performing by file -> uses : 1
by file uses -> multibyte : 1
file uses multibyte -> that : 1
uses multibyte that -> a : 1
multibyte that a -> file : 1
that a file -> is : 1
a file is -> treated : 1
a file is -> it : 1
file is treated -> as : 2
sequence of narrow -> when : 1
sequence of narrow -> characters : 1
of narrow when -> reading : 1
narrow when reading -> a : 1
when reading a -> the : 1
when reading a -> whitespace : 1
reading a the -> narrow : 1
a the narrow -> characters : 1
the narrow characters -> are : 1
characters are converted -> to : 3
characters are converted -> back : 1
converted to wide -> and : 2
converted to wide -> characters : 3
to wide and -> when : 2
wide and when -> writing : 1
wide and when -> wide : 1
and when writing -> a : 1
writing a wide -> wide : 1
a wide wide -> characters : 1
wide wide characters -> are : 1
wide characters are -> converted : 2
wide characters are -> stored : 4
wide characters are -> written : 1
wide characters are -> copied : 1
wide characters are -> appended : 1
wide characters are -> the : 1
are converted back -> to : 1
converted back to -> multibyte : 1
back to multibyte -> seeking : 1
to multibyte seeking -> to : 1
multibyte seeking to -> a : 1
seeking to a -> new : 2
to a new -> position : 4
to a new -> file : 1
a new position -> in : 4
new position in -> a : 1
new position in -> the : 3
position in a -> file : 1
position in a -> sorted : 2
position in a -> the : 2
in a file -> might : 1
in a file -> to : 1
a file might -> seek : 1
a file might -> not : 1
file might seek -> to : 1
might seek to -> a : 1
seek to a -> position : 1
seek to a -> new : 3
to a position -> that : 1
to a position -> one : 1
a position that -> falls : 1
position that falls -> in : 1
that falls in -> the : 1
falls in the -> middle : 1
a multibyte a -> file : 1
multibyte a file -> position : 1
a file position -> is : 1
a file position -> to : 1
file position is -> required : 1
file position is -> set : 1
position is required -> to : 1
required to keep -> track : 1
track of a -> shift : 1
track of a -> set : 1
a shift state -> in : 1
a shift state -> by : 1
shift state in -> addition : 1
state in addition -> to : 1
addition to a -> byte : 1
to a byte -> position : 1
a byte position -> in : 1
byte position in -> the : 1
position in the -> see : 1
position in the -> object : 1
position in the -> must : 1
position in the -> position : 1
position in the -> file : 1
position in the -> the : 2
position in the -> if : 2
position in the -> same : 1
the see in -> and : 1
see in and -> and : 1
in and and -> used : 1
and and used -> throughout : 1
and used throughout -> the : 1
throughout the a -> is : 1
the a is -> a : 1
template that characterizes -> a : 1
that characterizes a -> possibly : 1
characterizes a possibly -> a : 1
a possibly a -> template : 1
possibly a template -> at : 1
template at first -> it : 1
at first it -> seems : 1
first it seems -> that : 1
seems that traits -> obscure : 1
that traits obscure -> hiding : 1
traits obscure hiding -> types : 1
obscure hiding types -> and : 1
hiding types and -> other : 1
types and other -> declarations : 1
and other declarations -> in : 1
other declarations in -> a : 1
in a morass -> of : 1
a morass of -> this : 1
morass of this -> is : 1
of this is -> but : 1
of this is -> for : 1
of this is -> to : 4
this is but -> traits : 1
is but traits -> are : 1
but traits are -> also : 1
traits are also -> powerful : 1
are also powerful -> tools : 1
also powerful tools -> used : 1
powerful tools used -> in : 1
tools used in -> writing : 1
used in writing -> traits : 1
in writing traits -> are : 1
writing traits are -> often : 1
traits are often -> used : 1
used to obtain -> information : 1
to obtain information -> from : 1
obtain information from -> types : 1
information from types -> in : 1
from types in -> the : 1
manner as is -> a : 1
template that defines -> an : 1
that defines an -> interface : 2
defines an interface -> as : 1
defines an interface -> for : 1
an interface as -> a : 1
interface as a -> service : 1
as a service -> to : 1
a service to -> other : 1
service to other -> traits : 1
to other traits -> define : 1
other traits define -> type : 1
traits define type -> and : 1
define type and -> policies : 1
type and policies -> define : 1
and policies define -> function : 1
policies define function -> so : 1
define function so -> they : 1
function so they -> are : 1
they are closely -> a : 1
are closely a -> single : 1
closely a single -> class : 1
a single class -> template : 1
a single class -> and : 1
single class template -> implements : 1
class template implements -> traits : 1
class template implements -> a : 3
class template implements -> an : 4
class template implements -> minimal : 1
template implements traits -> and : 1
implements traits and -> typical : 1
traits and typical -> application : 1
and typical application -> programmer : 1
typical application programmer -> might : 1
application programmer might -> never : 1
programmer might never -> use : 1
might never use -> traits : 1
never use traits -> and : 1
use traits and -> policies : 1
traits and policies -> they : 1
and policies they -> are : 1
policies they are -> used : 1
standard and about -> everywhere : 1
and about everywhere -> in : 1
about everywhere in -> the : 1
everywhere in the -> standard : 1
of the most -> commonly : 1
the most commonly -> used : 1
most commonly used -> and : 1
commonly used and -> policy : 1
used and policy -> templates : 1
and policy templates -> is : 1
policy templates is -> in : 1
templates is in -> the : 1
the standard declares -> two : 1
standard declares two -> and : 1
declares two and -> rest : 1
two and rest -> of : 1
and rest of -> the : 1
the library uses -> character : 1
library uses character -> traits : 1
uses character traits -> to : 1
character traits to -> obtain : 1
traits to obtain -> types : 1
to obtain types -> and : 1
obtain types and -> functions : 1
types and functions -> for : 10
types and functions -> to : 1
types and functions -> related : 1
functions for working -> with : 6
working with for -> the : 1
with for the -> class : 1
template takes a -> character : 1
template takes a -> functor : 1
template takes a -> pointer : 2
takes a character -> and : 1
a character and -> a : 1
a character and -> returns : 1
a character and -> the : 1
character and a -> character : 1
a character traits -> type : 1
character traits type -> as : 1
traits type as -> template : 1
type as template -> the : 1
as template the -> default : 1
template the default -> value : 1
for the traits -> parameter : 1
the traits parameter -> is : 1
traits parameter is -> which : 1
parameter is which -> is : 1
is a set -> of : 4
set of character -> traits : 1
of character traits -> defined : 1
character traits defined -> in : 1
traits defined in -> the : 1
the template declares -> the : 1
template declares the -> which : 1
declares the which -> reads : 1
declares the which -> is : 1
declares the which -> stores : 1
the which reads -> a : 1
which reads a -> character : 1
reads a character -> and : 1
reads a character -> from : 3
character and returns -> its : 1
character and returns -> a : 1
character and returns -> if : 1
character and returns -> an : 1
returns its integer -> the : 1
its integer the -> return : 1
integer the return -> type : 1
type is obtained -> from : 1
is obtained from -> the : 5
is obtained from -> if : 1
is obtained from -> unlike : 1
from the character -> traits : 1
from the character -> string : 1
from the character -> array : 3
the character traits -> specifically : 1
the character traits -> specified : 1
the character traits -> are : 2
character traits specifically -> a : 1
traits specifically a -> policy : 1
specifically a policy -> provides : 1
a policy provides -> member : 1
policy provides member -> functions : 1
provides member functions -> that : 1
provides member functions -> for : 1
functions that compare -> characters : 1
functions that compare -> reverse : 1
that compare characters -> and : 1
compare characters and -> character : 1
and character copy -> character : 1
character copy character -> and : 1
copy character and -> so : 1
and so for -> compares : 1
so for compares -> two : 1
for compares two -> character : 1
compares two character -> arrays : 1
two character arrays -> for : 1
character arrays for -> the : 1
arrays for the -> specialization : 1
for the specialization -> might : 1
for the specialization -> always : 1
the specialization might -> implement : 1
specialization might implement -> by : 1
might implement by -> calling : 1
implement by calling -> a : 1
implement by calling -> the : 1
calling a basic -> the : 1
a basic the -> typical : 1
basic the typical -> programmer : 1
the typical programmer -> does : 1
typical programmer does -> not : 1
be concerned with -> the : 1
concerned with the -> implementation : 1
with the implementation -> of : 1
the implementation of -> you : 1
the implementation of -> or : 1
the implementation of -> your : 1
implementation of you -> can : 1
use the and -> and : 1
use the and -> classes : 1
use the and -> instantiations : 3
use the and -> functions : 1
the and and -> everything : 1
the and and -> discusses : 1
the and and -> for : 1
and and everything -> just : 1
and everything just -> if : 1
everything just if -> you : 1
just if you -> are : 1
you are you -> can : 1
you can trace -> the : 1
can trace the -> declaration : 1
trace the declaration -> for : 1
the declaration for -> you : 1
the declaration for -> is : 1
the declaration for -> iterator : 1
the declaration for -> the : 1
declaration for you -> can : 1
you can traits -> can : 1
can traits can -> be : 1
traits can be -> difficult : 1
traits can be -> used : 1
can be difficult -> to : 2
be difficult to -> follow : 1
be difficult to -> compare : 1
be difficult to -> keep : 1
difficult to follow -> when : 1
to follow when -> you : 1
to follow when -> writing : 1
follow when you -> need : 1
know the exact -> type : 1
the exact type -> of : 1
the exact type -> is : 7
exact type of -> one : 1
the types declared -> in : 1
types declared in -> a : 1
standard you get -> used : 1
you get used -> to : 1
get used to -> you : 1
used to you -> can : 1
can see how -> valuable : 1
can see how -> the : 1
see how valuable -> traits : 1
how valuable traits -> can : 1
valuable traits can -> consider : 1
traits can consider -> what : 1
can consider what -> happens : 1
consider what happens -> when : 1
what happens when -> you : 1
happens when you -> change : 1
when you change -> from : 1
you change from -> to : 1
change from to -> that : 1
from to that -> the : 1
to that the -> declarations : 1
that the declarations -> of : 1
the declarations of -> and : 1
declarations of and -> the : 1
declarations of and -> other : 1
the other templates -> do : 1
other templates do -> not : 1
do not differ -> when : 1
not differ when -> the : 1
differ when the -> template : 1
template parameter changes -> from : 1
parameter changes from -> to : 1
changes from to -> you : 1
from to you -> end : 1
to you end -> up : 1
you end up -> with : 1
end up with -> a : 1
different template specialization -> for : 1
template specialization for -> which : 1
specialization for which -> directs : 1
for which directs -> you : 1
which directs you -> to : 1
directs you to -> a : 1
you to a -> different : 1
a different integer -> can : 1
different integer can -> implement : 1
integer can implement -> your : 1
can implement your -> own : 3
implement your own -> character : 1
implement your own -> overloaded : 1
implement your own -> if : 1
your own character -> traits : 1
own character traits -> and : 1
character traits and -> policy : 1
traits and policy -> for : 1
and policy for -> suppose : 1
policy for suppose -> you : 1
to use strings -> that : 1
use strings that -> compare : 1
strings that compare -> themselves : 1
that compare themselves -> without : 1
compare themselves without -> regard : 1
themselves without regard -> to : 1
without regard to -> case : 1
regard to case -> comparison : 1
to case comparison -> is : 1
case comparison is -> a : 1
comparison is a -> policy : 1
is a policy -> typically : 1
is a policy -> class : 1
a policy typically -> implemented : 1
policy typically implemented -> by : 1
typically implemented by -> the : 1
implemented by the -> you : 1
by the you -> can : 1
can define your -> own : 2
can define your -> specialization : 1
define your own -> template : 1
define your own -> classes : 1
define your own -> errno : 1
define your own -> traits : 1
your own template -> that : 1
own template that -> has : 1
template that has -> the : 1
that has the -> same : 4
that has the -> member : 2
the same trait -> and : 1
same trait and -> policy : 1
trait and policy -> but : 1
and policy but -> one : 1
policy but one -> that : 1
but one that -> implements : 1
one that implements -> to : 1
that implements to -> ignore : 1
implements to ignore -> case : 1
to ignore case -> using : 1
ignore case using -> your : 1
case using your -> you : 1
using your you -> can : 1
your you can -> specialize : 1
your you can -> assume : 1
can specialize to -> create : 1
specialize to create -> a : 1
create a string -> class : 1
create a string -> longer : 1
a string class -> and : 1
string class and -> then : 1
and then store -> those : 1
then store those -> strings : 1
store those strings -> in : 1
those strings in -> sets : 1
strings in sets -> and : 1
in sets and -> the : 1
sets and the -> keys : 1
and the keys -> will : 1
the keys will -> be : 1
keys will be -> compared : 1
will be compared -> using : 1
be compared using -> your : 1
compared using your -> policy : 1
using your policy -> function : 1
your policy function -> that : 1
policy function that -> ignores : 1
function that ignores -> case : 1
that ignores case -> as : 1
ignores case as -> shown : 1
case as shown -> in : 1
shown in character -> character : 1
in character character -> struct : 1
character character struct -> struct : 1
character struct struct -> typedef : 1
struct struct typedef -> char : 1
struct typedef char -> typedef : 2
typedef char typedef -> int : 2
typedef char typedef -> typename : 1
char typedef int -> typedef : 2
int typedef typedef -> typedef : 1
typedef typedef static -> void : 1
typedef typedef static -> const : 1
typedef static void -> const : 3
static void const -> dst : 1
static void const -> static : 2
void const dst -> static : 1
const dst static -> char : 1
dst static char -> return : 1
static char return -> static : 1
char return static -> bool : 1
return static bool -> const : 2
static bool const -> return : 2
static bool const -> static : 6
return static int -> const : 1
static int const -> for : 1
static int const -> static : 2
int const for -> i : 1
const for i -> i : 1
i i if -> return : 1
i i if -> break : 1
i if return -> else : 2
return else if -> return : 2
return else if -> in : 1
return else if -> check : 1
return else if -> there : 1
else if return -> return : 1
else if return -> comparison : 1
else if return -> implementation : 2
else if return -> else : 1
if return return -> static : 1
if return return -> write : 1
if return return -> keyword : 1
if return return -> class : 1
if return return -> compiler : 1
return return static -> return : 1
static return typedef -> void : 1
return typedef void -> int : 1
typedef void int -> while : 1
typedef void int -> void : 1
void int while -> are : 1
int while are -> also : 1
while are also -> useful : 1
are also useful -> for : 1
also useful for -> iterators : 1
useful for iterators -> and : 1
for iterators and -> an : 1
iterators and an -> algorithm : 1
and an algorithm -> often : 1
an algorithm often -> needs : 1
algorithm often needs -> to : 1
often needs to -> know : 1
needs to know -> the : 1
know the iterator -> category : 1
the iterator category -> to : 1
the iterator category -> as : 1
the iterator category -> is : 1
the iterator category -> when : 5
iterator category to -> provide : 1
category to provide -> specializations : 1
to provide specializations -> that : 1
provide specializations that -> optimize : 1
specializations that optimize -> performance : 1
that optimize performance -> for : 1
optimize performance for -> random : 1
performance for random -> access : 1
for random access -> for : 1
for random access -> the : 1
for random access -> iterators : 2
random access for -> traits : 1
access for traits -> provide : 1
for traits provide -> a : 1
traits provide a -> standard : 1
provide a standard -> way : 1
a standard way -> to : 1
standard way to -> convey : 1
way to convey -> this : 1
to convey this -> information : 1
convey this information -> to : 1
this information to -> the : 1
this information to -> format : 1
information to the -> algorithm : 1
information to the -> pattern : 1
to the algorithm -> by : 1
to the algorithm -> to : 1
the algorithm by -> using : 1
algorithm by using -> the : 1
using the they -> also : 1
the they also -> permit : 1
they also permit -> algorithms : 1
also permit algorithms -> to : 1
permit algorithms to -> use : 1
algorithms to use -> plain : 1
to use plain -> pointers : 1
use plain pointers -> as : 1
plain pointers as -> the : 1
pointers as the -> function : 1
function returns the -> distance : 1
function returns the -> number : 7
function returns the -> is : 1
function returns the -> absolute : 5
function returns the -> inverse : 4
function returns the -> smallest : 1
function returns the -> cosine : 1
function returns the -> hyperbolic : 3
function returns the -> largest : 1
function returns the -> remainder : 1
function returns the -> natural : 1
function returns the -> common : 1
function returns the -> sine : 1
function returns the -> square : 2
function returns the -> tangent : 1
function returns the -> argument : 1
function returns the -> complex : 11
function returns the -> exponential : 1
function returns the -> imaginary : 1
function returns the -> real : 1
function returns the -> current : 2
function returns the -> length : 2
function returns the -> address : 1
function returns the -> amount : 1
function returns the -> index : 1
function returns the -> function : 2
function returns the -> previous : 1
function returns the -> currently : 1
function returns the -> old : 1
returns the distance -> between : 1
the distance between -> two : 5
distance between two -> for : 1
distance between two -> it : 1
distance between two -> output : 1
distance between two -> reverse : 2
between two for -> random : 1
between two for -> in : 1
two for random -> access : 1
random access the -> distance : 1
access the distance -> can : 1
the distance can -> be : 1
distance can be -> computed : 1
can be computed -> by : 1
be computed by -> for : 1
be computed by -> incrementing : 1
computed by for -> other : 1
by for other -> the : 1
for other the -> distance : 1
other the distance -> must : 1
the distance must -> be : 1
distance must be -> computed : 1
must be computed -> by : 1
computed by incrementing -> an : 1
by incrementing an -> iterator : 1
incrementing an iterator -> and : 1
an iterator and -> counting : 1
an iterator and -> is : 1
iterator and counting -> the : 1
and counting the -> number : 1
number of increments -> the : 1
of increments the -> distance : 1
increments the distance -> function : 1
the distance function -> shows : 1
the distance function -> helper : 1
distance function shows -> a : 1
a simple implementation -> of : 4
simple implementation of -> that : 1
simple implementation of -> way : 1
simple implementation of -> the : 6
simple implementation of -> shows : 1
simple implementation of -> std : 1
simple implementation of -> which : 1
simple implementation of -> these : 1
implementation of that -> uses : 1
of that uses -> the : 1
uses the iterator -> traits : 1
the iterator traits -> to : 1
iterator traits to -> choose : 1
iterator traits to -> optimize : 1
traits to choose -> the : 1
to choose the -> optimized : 1
choose the optimized -> random : 1
the optimized random -> access : 1
optimized random access -> implementation : 1
random access implementation -> or : 1
access implementation or -> the : 1
implementation or the -> slower : 1
or the slower -> implementation : 1
the slower implementation -> for : 1
slower implementation for -> all : 1
implementation for all -> other : 1
all other input -> the : 2
all other input -> iterators : 1
other input the -> distance : 1
other input the -> sentry : 1
other input the -> function : 1
input the distance -> function : 1
distance function helper -> overloaded : 1
function helper overloaded -> for : 1
helper overloaded for -> random : 1
helper overloaded for -> all : 1
overloaded for random -> access : 1
random access iterators -> typename : 1
random access iterators -> yields : 2
random access iterators -> also : 1
random access iterators -> to : 1
random access iterators -> and : 1
random access iterators -> can : 1
access iterators typename -> inputiter : 1
iterators typename inputiter -> return : 1
iterators typename inputiter -> typename : 1
typename inputiter return -> last : 2
typename inputiter return -> able : 1
typename inputiter return -> function : 1
inputiter return last -> helper : 1
inputiter return last -> typename : 1
return last helper -> overloaded : 1
last helper overloaded -> for : 1
overloaded for all -> other : 1
other input iterators -> typename : 1
input iterators typename -> inputiter : 1
typename inputiter typename -> count : 1
typename inputiter typename -> for : 1
inputiter typename count -> while : 1
typename count while -> return : 1
count while return -> main : 1
while return main -> distance : 1
return main distance -> which : 1
main distance which -> calls : 1
distance which calls -> the : 1
which calls the -> helper : 1
which calls the -> descriptions : 9
which calls the -> description : 1
which calls the -> destructor : 1
calls the helper -> using : 1
the helper using -> the : 1
helper using the -> iterator : 1
using the iterator -> tag : 1
the iterator tag -> to : 1
iterator tag to -> differentiate : 1
tag to differentiate -> the : 1
to differentiate the -> overloaded : 1
differentiate the overloaded -> typename : 1
the overloaded typename -> inputiter : 1
overloaded typename inputiter -> return : 1
inputiter return able -> to : 1
return able to -> optimize : 1
able to optimize -> for : 1
to optimize for -> certain : 1
optimize for certain -> kinds : 1
for certain kinds -> of : 2
certain kinds of -> iterators : 1
certain kinds of -> java : 1
certain kinds of -> see : 1
kinds of iterators -> is : 1
of iterators is -> one : 1
of iterators is -> to : 1
iterators is one -> benefit : 1
is one benefit -> of : 1
one benefit of -> using : 1
benefit of using -> but : 1
of using but -> the : 1
using but the -> real : 1
but the real -> power : 1
the real power -> comes : 1
real power comes -> from : 1
power comes from -> the : 1
comes from the -> this : 1
from the this -> class : 1
from the this -> process : 1
from the this -> facet : 1
the this class -> permits : 1
this class permits -> the : 1
class permits the -> use : 1
permits the use -> of : 1
use of any -> pointer : 1
of any pointer -> type : 1
any pointer type -> as : 1
pointer type as -> an : 1
type as an -> in : 1
as an in -> for : 1
an in for -> consider : 1
in for consider -> how : 1
for consider how -> the : 1
consider how the -> function : 1
how the function -> is : 1
how the function -> template : 2
called in the -> following : 1
called in the -> opposite : 3
the following compiler -> infers : 1
following compiler infers -> the : 1
compiler infers the -> template : 1
infers the template -> parameter : 1
template parameter as -> type : 1
parameter as type -> the : 1
as type the -> template : 1
template is expanded -> to : 1
is expanded to -> obtain : 1
expanded to obtain -> the : 1
obtain the type -> and : 1
type and can -> be : 1
can be useful -> whenever : 1
be useful whenever -> you : 1
useful whenever you -> are : 1
whenever you are -> using : 1
are using you -> never : 1
using you never -> know : 1
you never know -> what : 1
never know what -> the : 1
know what the -> template : 1
what the template -> parameters : 1
template parameters might -> you : 1
parameters might you -> want : 1
might you want -> to : 1
to specialize your -> own : 1
to specialize your -> algorithm : 1
specialize your own -> code : 1
your own code -> according : 1
own code according -> to : 1
code according to -> a : 1
to a template -> all : 1
to a template -> creating : 1
a template all -> the : 1
a template all -> instantiations : 1
template all the -> standard : 1
template all the -> elements : 2
all the standard -> sequence : 1
all the standard -> containers : 1
all the standard -> grouped : 1
all the standard -> and : 1
all the standard -> headers : 1
all the standard -> class : 1
the standard sequence -> containers : 1
standard sequence containers -> have : 1
sequence containers have -> a : 1
have a constructor -> that : 1
a constructor that -> takes : 1
that takes two -> iterators : 1
that takes two -> the : 1
takes two iterators -> as : 1
two iterators as -> inputiterator : 1
iterators as inputiterator -> take : 1
as inputiterator take -> a : 1
inputiterator take a -> closer : 1
take a closer -> look : 1
a closer look -> at : 1
closer look at -> the : 1
look at the -> the : 1
at the the -> intent : 1
the the intent -> is : 1
the intent is -> that : 1
intent is that -> the : 1
that the template -> parameter : 1
template parameter must -> be : 2
parameter must be -> an : 2
parameter must be -> convertible : 1
parameter must be -> in : 2
parameter must be -> handler : 1
be an input -> but : 1
be an input -> and : 1
an input but -> nothing : 1
input but nothing -> in : 1
but nothing in -> the : 1
nothing in the -> declaration : 1
nothing in the -> c : 1
the declaration enforces -> this : 1
declaration enforces this -> the : 1
enforces this the -> compiler : 1
the compiler allows -> any : 1
compiler allows any -> type : 1
allows any type -> to : 1
any type to -> be : 1
type to be -> used : 1
type to be -> the : 1
be used least -> any : 1
used least any -> type : 1
least any type -> that : 1
any type that -> can : 1
any type that -> behaves : 1
be the type -> actually : 1
the type actually -> is : 1
type actually is -> an : 1
actually is an -> input : 1
is an input -> the : 1
is an input -> stream : 1
an input the -> list : 1
an input the -> facet : 1
an input the -> stream : 3
an input the -> class : 1
an input the -> and : 1
an input the -> extraction : 1
an input the -> components : 1
input the list -> is : 1
list is constructed -> by : 1
list is constructed -> as : 1
constructed by copying -> all : 1
by copying all -> the : 1
copying all the -> elements : 1
copying all the -> as : 1
all the elements -> in : 10
all the elements -> from : 1
all the elements -> of : 7
the elements in -> the : 11
the elements in -> with : 1
the elements in -> unless : 2
the elements in -> function : 1
the elements in -> this : 1
the elements in -> in : 1
the range but -> if : 1
range but if -> the : 1
an integral the -> argument : 1
an integral the -> container : 1
an integral the -> standard : 1
an integral the -> size : 1
an integral the -> second : 1
an integral the -> string : 1
an integral the -> temporary : 1
integral the argument -> is : 1
argument is interpreted -> as : 7
and the argument -> is : 2
and the argument -> are : 1
as an integer -> which : 1
an integer which -> is : 1
integer which is -> converted : 1
the value type -> of : 1
value type of -> the : 1
the the container -> is : 1
container is then -> initialized : 1
is then initialized -> with : 1
then initialized with -> copies : 1
initialized with copies -> of : 3
with copies of -> the : 13
with copies of -> complexity : 1
with copies of -> to : 2
with copies of -> a : 2
with copies of -> inputiterator : 1
with copies of -> are : 1
with copies of -> that : 1
which is ordinarily -> the : 1
is ordinarily the -> work : 1
ordinarily the work -> of : 1
the work of -> a : 1
work of a -> different : 1
a different see -> and : 1
different see and -> for : 1
information about these -> you : 1
information about these -> and : 1
about these you -> need : 1
these you need -> to : 1
need to your -> own : 1
to your own -> container : 1
your own container -> you : 2
your own container -> classes : 1
own container you -> must : 1
own container you -> should : 1
container you must -> find : 1
you must find -> a : 1
find a way -> to : 1
to implement this -> kind : 1
to implement this -> whether : 1
implement this kind -> of : 1
of the simplest -> way : 1
simplest way is -> to : 1
way is to -> define : 1
way is to -> use : 1
define a traits -> template : 1
traits template that -> can : 1
that can tell -> you : 1
can tell you -> whether : 1
tell you whether -> a : 1
you whether a -> type : 1
you whether a -> container : 1
an integral between -> integral : 1
integral between integral -> types : 1
between integral types -> using : 2
integral types using -> shows : 1
integral types using -> type : 1
types using shows -> one : 1
using shows one -> possible : 1
shows one possible -> implementation : 1
one possible implementation -> and : 1
possible implementation and -> how : 1
implementation and how -> it : 1
how it can -> be : 1
used by a -> between : 1
used by a -> command : 1
by a between -> integral : 1
a between integral -> types : 1
types using type -> trait : 1
using type trait -> to : 1
type trait to -> test : 2
type trait to -> tell : 1
trait to test -> whether : 2
is an struct -> struct : 2
an struct struct -> the : 2
struct struct the -> default : 2
struct the default -> is : 2
that a type -> is : 2
that a type -> without : 1
not an integral -> struct : 2
not an integral -> a : 1
an integral struct -> typedef : 1
an integral struct -> enum : 1
integral struct typedef -> override : 1
integral struct typedef -> struct : 1
struct typedef override -> the : 1
typedef override the -> default : 1
override the default -> explicitly : 1
override the default -> for : 1
the default explicitly -> for : 1
default explicitly for -> all : 1
explicitly for all -> integral : 1
for all integral -> struct : 2
for all integral -> types : 2
for all integral -> whether : 1
all integral struct -> typedef : 1
all integral struct -> enum : 1
struct typedef struct -> typedef : 2
typedef struct typedef -> struct : 1
typedef struct typedef -> and : 1
struct typedef and -> so : 1
typedef and so -> on : 1
and so on -> for : 1
so on for -> signed : 1
on for signed -> constructor : 1
for signed constructor -> uses : 1
signed constructor uses -> the : 1
constructor uses the -> trait : 1
uses the trait -> to : 1
the trait to -> distinguish : 1
the trait to -> dispatch : 1
the trait to -> choose : 1
trait to distinguish -> integral : 1
to distinguish integral -> from : 1
distinguish integral from -> nonintegral : 1
integral from nonintegral -> types : 1
from nonintegral types -> and : 1
nonintegral types and -> dispatches : 1
types and dispatches -> to : 1
and dispatches to -> the : 1
dispatches to the -> correct : 1
to the correct -> overloaded : 1
the correct overloaded -> construct : 1
correct overloaded construct -> typename : 1
overloaded construct typename -> inputiter : 1
construct typename inputiter -> the : 1
typename inputiter the -> construct : 1
inputiter the construct -> member : 1
the construct member -> functions : 1
construct member functions -> finish : 1
member functions finish -> the : 1
functions finish the -> initialization : 1
finish the initialization -> of : 1
initialization of the -> the : 1
the the integral -> version : 1
the integral version -> casts : 1
integral version casts -> the : 1
version casts the -> arguments : 1
casts the arguments -> to : 1
the arguments to -> the : 3
the arguments to -> a : 1
to the size -> and : 1
to the size -> of : 3
size and value -> typename : 1
and value typename -> void : 1
value typename void -> inputiter : 1
typename void inputiter -> the : 1
typename void inputiter -> can : 1
typename void inputiter -> typename : 1
typename void inputiter -> private : 1
void inputiter the -> version : 1
inputiter the version -> copies : 1
the version copies -> elements : 1
version copies elements -> from : 1
copies elements from -> the : 4
elements from the -> iterator : 1
elements from the -> first : 1
elements from the -> second : 1
elements from the -> range : 3
elements from the -> sorted : 4
elements from the -> an : 1
elements from the -> the : 2
elements from the -> array : 1
from the iterator -> typename : 1
the iterator typename -> void : 1
iterator typename void -> inputiter : 1
void inputiter can -> be : 1
inputiter can be -> used : 1
used to characterize -> any : 1
to characterize any -> type : 1
characterize any type -> and : 1
any type and -> specialize : 1
type and specialize -> templates : 1
and specialize templates -> for : 1
specialize templates for -> a : 1
templates for a -> wide : 1
a wide variety -> of : 1
wide variety of -> see : 1
variety of see -> the : 1
of see the -> boost : 1
of see the -> corresponding : 1
see the boost -> project : 2
the boost project -> in : 1
the boost project -> fills : 3
the boost project -> has : 2
the boost project -> for : 1
boost project in -> for : 1
project in for -> other : 1
in for other -> definitions : 1
for other definitions -> and : 1
other definitions and -> uses : 1
definitions and uses -> of : 1
and uses of -> is : 1
uses of is -> a : 1
a policy class -> that : 1
policy class that -> defines : 1
an interface for -> managing : 1
interface for managing -> dynamic : 1
for managing dynamic -> you : 1
managing dynamic you -> already : 1
dynamic you already -> know : 1
you already know -> about : 1
already know about -> the : 1
know about the -> and : 1
the and expressions -> for : 1
and expressions for -> allocating : 1
expressions for allocating -> and : 1
for allocating and -> freeing : 2
for allocating and -> using : 1
allocating and freeing -> dynamic : 1
allocating and freeing -> standard : 1
allocating and freeing -> a : 1
allocating and freeing -> an : 1
and freeing dynamic -> they : 1
freeing dynamic they -> are : 1
dynamic they are -> and : 1
are and but -> the : 1
standard library does -> not : 1
library does not -> necessarily : 1
not necessarily use -> them : 1
necessarily use them -> the : 1
use them the -> standard : 1
them the standard -> library : 1
library uses which -> let : 1
uses which let -> you : 1
let you provide -> alternative : 1
you provide alternative -> mechanisms : 1
provide alternative mechanisms -> for : 1
alternative mechanisms for -> allocating : 1
mechanisms for allocating -> and : 1
and freeing standard -> library : 1
freeing standard library -> provides : 1
library provides a -> standard : 1
provides a standard -> allocator : 1
a standard allocator -> in : 1
a standard allocator -> for : 1
standard allocator in -> if : 1
allocator in if -> you : 1
use the standard -> you : 2
use the standard -> manipulators : 1
use the standard -> and : 1
use the standard -> functors : 1
use the standard -> of : 1
the standard you -> can : 5
the standard you -> need : 1
the standard you -> never : 1
the standard you -> should : 1
the standard you -> replace : 2
standard you can -> use : 1
standard you can -> read : 1
standard you can -> define : 1
standard you can -> provide : 2
can use your -> provided : 1
use your provided -> it : 1
your provided it -> satisfies : 1
provided it satisfies -> the : 1
it satisfies the -> same : 1
satisfies the same -> interface : 1
the same interface -> that : 1
same interface that -> is : 1
interface that is -> defined : 1
the standard allocator -> is : 1
standard allocator is -> a : 1
allocator is a -> simple : 1
simple object that -> manages : 1
object that manages -> dynamic : 1
that manages dynamic -> abstracting : 1
manages dynamic abstracting -> and : 1
dynamic abstracting and -> all : 1
abstracting and all -> the : 1
all the container -> class : 1
all the container -> and : 1
the container class -> templates : 1
the container class -> the : 1
container class templates -> take : 1
class templates take -> an : 1
templates take an -> allocator : 1
take an allocator -> template : 1
an allocator template -> parameter : 1
allocator template parameter -> and : 1
template parameter and -> use : 1
template parameter and -> the : 1
parameter and use -> the : 1
use the allocator -> to : 3
the allocator to -> manage : 2
the allocator to -> allocate : 1
allocator to manage -> their : 1
allocator to manage -> internal : 1
allocator to manage -> you : 1
to manage their -> internal : 1
manage their internal -> you : 1
their internal you -> can : 1
internal you can -> use : 1
can use allocators -> in : 1
use allocators in -> your : 1
allocators in your -> own : 1
in your own -> container : 1
own container classes -> or : 1
container classes or -> wherever : 1
classes or wherever -> you : 1
or wherever you -> want : 1
wherever you want -> to : 1
want to offer -> flexibility : 1
to offer flexibility -> to : 1
offer flexibility to -> the : 1
flexibility to the -> user : 1
to the user -> of : 1
the user of -> your : 1
user of your -> class : 1
of your class -> or : 1
your class or -> you : 1
class or you -> do : 1
or you do -> not : 1
want to bother -> with : 1
to bother with -> you : 1
bother with you -> need : 1
with you need -> all : 1
you need all -> the : 1
need all the -> standard : 1
argument for their -> allocator : 1
for their allocator -> template : 1
their allocator template -> which : 1
allocator template which -> uses : 1
template which uses -> standard : 1
which uses standard -> and : 1
uses standard and -> expressions : 1
standard and expressions -> to : 1
and expressions to -> manage : 1
expressions to manage -> dynamic : 1
to manage dynamic -> you : 1
manage dynamic you -> write : 1
dynamic you write -> a : 1
write a new -> class : 1
a new class -> make : 1
new class make -> sure : 1
class make sure -> it : 1
sure it takes -> an : 1
it takes an -> allocator : 1
takes an allocator -> as : 1
an allocator as -> the : 1
allocator as the -> standard : 1
as the standard -> containers : 1
as the standard -> a : 1
as the standard -> way : 1
standard containers use -> the : 1
containers use the -> allocator : 1
to manage internal -> memory : 1
manage internal memory -> for : 1
internal memory for -> your : 1
memory for your -> see : 1
for your see -> and : 1
your see and -> for : 2
information about you -> simply : 1
about you simply -> want : 1
use an allocator -> to : 1
an allocator to -> manage : 1
to manage you -> can : 1
manage you can -> do : 1
can do your -> class : 1
do your class -> would : 1
your class would -> use : 1
class would use -> the : 1
would use the -> allocator : 1
allocator to allocate -> and : 1
allocate and free -> initialize : 1
and free initialize -> and : 1
free initialize and -> finalize : 1
initialize and finalize -> and : 1
and finalize and -> take : 1
finalize and take -> the : 1
and take the -> address : 1
of an allocated -> in : 1
of an allocated -> buffer : 1
an allocated in -> for : 1
allocated in for -> a : 1
description of the -> allocator : 1
description of the -> which : 1
description of the -> main : 1
description of the -> must : 1
description of the -> in : 4
description of the -> required : 1
description of the -> class : 1
description of the -> char : 1
description of the -> member : 1
of the allocator -> policy : 1
of the allocator -> the : 1
the allocator policy -> a : 1
allocator policy a -> dynamic : 1
policy a dynamic -> shows : 1
a dynamic shows -> a : 1
dynamic shows a -> simple : 1
simple class that -> wraps : 1
class that wraps -> a : 1
that wraps a -> dynamic : 1
that wraps a -> member : 10
that wraps a -> pointer : 2
that wraps a -> stream : 1
wraps a dynamic -> instance : 1
a dynamic instance -> of : 1
dynamic instance of -> any : 1
instance of any -> it : 1
of any it -> is : 1
is not particularly -> but : 1
not particularly but -> it : 1
particularly but it -> illustrates : 1
but it illustrates -> how : 1
it illustrates how -> a : 1
illustrates how a -> class : 1
how a class -> can : 1
class can use -> an : 1
class can use -> other : 1
class can use -> the : 1
use an note -> how : 1
an note how -> the : 1
note how the -> allocation : 1
how the allocation -> of : 1
the allocation of -> memory : 1
the allocation of -> objects : 1
allocation of memory -> is : 1
of memory is -> separated : 1
memory is separated -> from : 1
is separated from -> the : 1
is separated from -> a : 2
separated from the -> construction : 1
from the construction -> of : 1
construction of the -> if : 1
construction of the -> standard : 1
the if fails -> to : 1
if fails to -> allocate : 1
if fails to -> try : 1
fails to allocate -> the : 1
to allocate the -> desired : 1
to allocate the -> necessary : 1
allocate the desired -> it : 1
the desired it -> throws : 1
desired it throws -> so : 1
it throws so -> the : 1
throws so the -> wrapper : 1
so the wrapper -> constructor : 1
the wrapper constructor -> fails : 1
wrapper constructor fails -> before : 1
constructor fails before -> it : 1
fails before it -> tries : 1
before it tries -> to : 1
it tries to -> construct : 1
it tries to -> read : 1
tries to construct -> the : 1
to construct the -> if : 1
construct the if -> the : 1
the allocation but -> the : 1
allocation but the -> call : 1
but the call -> to : 1
to the memory -> must : 1
to the memory -> that : 1
to the memory -> function : 1
to the memory -> regions : 2
the memory must -> be : 1
the memory must -> have : 2
the memory must -> later : 1
memory must be -> hence : 1
memory must be -> freed : 1
must be hence -> the : 1
be hence the -> the : 1
hence the the -> destructor : 1
the the destructor -> assumes : 1
the destructor assumes -> that : 1
destructor assumes that -> wrapped : 1
assumes that wrapped -> class : 1
that wrapped class -> is : 1
wrapped class is -> and : 1
is and never -> throws : 1
and never throws -> an : 1
throws an a -> dynamic : 1
throws an a -> custom : 1
throws an a -> pointer : 1
an a dynamic -> typename : 1
a dynamic typename -> class : 1
dynamic typename class -> wrapper : 1
typename class wrapper -> typedef : 1
class wrapper typedef -> t : 1
wrapper typedef t -> typedef : 1
t typedef typename -> typedef : 1
typedef typename allocate -> and : 1
typename allocate and -> save : 1
allocate and save -> a : 1
and save a -> copy : 1
save a copy -> of : 2
copy of obj -> const : 1
of obj const -> a : 1
obj const a -> p : 1
const a p -> try : 1
a p try -> if : 1
p try if -> the : 1
try if the -> construction : 1
if the construction -> free : 1
the construction free -> the : 1
construction free the -> memory : 1
the memory without -> trying : 1
memory without trying -> to : 1
without trying to -> finalize : 1
trying to finalize -> the : 1
to finalize the -> everything : 1
finalize the everything -> so : 1
the everything so -> save : 1
everything so save -> the : 1
so save the -> typename : 1
save the typename -> return : 1
the typename return -> const : 1
typename return const -> return : 1
const return alloc -> typename : 1
return alloc typename -> a : 1
alloc typename a -> custom : 1
typename a custom -> requires : 1
a custom requires -> care : 1
custom requires care -> and : 1
requires care and -> one : 1
care and one -> particularly : 1
and one particularly -> difficult : 1
one particularly difficult -> point : 1
particularly difficult point -> is : 1
difficult point is -> that : 1
point is that -> an : 1
an implementation of -> the : 1
an implementation of -> must : 1
library is free -> to : 1
free to assume -> that : 1
to assume that -> all : 1
assume that all -> instances : 1
that all instances -> of : 1
that all instances -> must : 1
instances of an -> allocator : 1
of an allocator -> class : 1
an allocator class -> are : 1
allocator class are -> that : 1
class are that -> allocators : 1
are that allocators -> cannot : 1
that allocators cannot -> maintain : 1
allocators cannot maintain -> the : 1
cannot maintain the -> standard : 1
maintain the standard -> permits : 1
standard permits this -> behavior : 1
permits this behavior -> without : 1
this behavior without -> mandating : 1
behavior without mandating -> you : 1
without mandating you -> need : 1
mandating you need -> to : 1
to be aware -> of : 1
the standard requirements -> for : 1
standard requirements for -> your : 1
requirements for your -> once : 1
for your once -> you : 1
your once you -> know : 1
once you know -> the : 1
you know the -> you : 1
you know the -> string : 1
you know the -> vector : 1
know the you -> can : 1
write a custom -> as : 1
a custom as -> a : 1
custom as a -> starting : 1
as a starting -> see : 1
a starting see -> which : 1
starting see which -> implements : 1
see which implements -> the : 1
which implements the -> allocator : 1
implements the allocator -> as : 1
the allocator as -> trivial : 1
allocator as trivial -> wrappers : 1
as trivial wrappers -> around : 1
trivial wrappers around -> and : 1
wrappers around and -> other : 1
around and other -> allocators : 1
and other allocators -> might : 1
other allocators might -> manage : 1
allocators might manage -> memory : 1
might manage memory -> that : 1
manage memory that -> is : 1
memory that is -> shared : 2
memory that is -> large : 6
that is shared -> between : 1
that is shared -> across : 1
is shared between -> processes : 1
shared between processes -> or : 1
between processes or -> differentiate : 1
processes or differentiate -> between : 1
or differentiate between -> different : 1
differentiate between different -> kinds : 1
between different kinds -> of : 1
kinds of pointers -> as : 1
of pointers as -> near : 1
pointers as near -> and : 1
as near and -> far : 1
near and far -> pointers : 1
and far pointers -> found : 1
far pointers found -> on : 1
pointers found on -> old : 1
found on old -> pc : 1
on old pc -> operating : 1
old pc operating -> more : 1
pc operating more -> sophisticated : 1
operating more sophisticated -> allocators : 1
more sophisticated allocators -> can : 1
sophisticated allocators can -> implement : 1
allocators can implement -> debugging : 1
can implement debugging -> or : 1
implement debugging or -> validity : 1
debugging or validity -> checks : 1
or validity checks -> to : 1
validity checks to -> detect : 1
checks to detect -> programmer : 1
to detect programmer -> such : 1
detect programmer such -> as : 1
programmer such as -> memory : 1
programmer such as -> relying : 1
such as memory -> leaks : 1
as memory leaks -> or : 1
memory leaks or -> double : 1
leaks or double -> library : 1
or double library -> has : 1
double library has -> several : 1
library has several -> headers : 1
library has several -> an : 1
has several headers -> that : 1
several headers that -> support : 1
headers that support -> numerical : 1
that support numerical -> the : 1
support numerical the -> most : 1
numerical the most -> basic : 1
the most basic -> header : 1
most basic header -> is : 1
basic header is -> which : 1
header is which -> declares : 1
is which declares -> transcendental : 1
which declares transcendental -> and : 1
declares transcendental and -> other : 1
transcendental and other -> mathematical : 1
and other mathematical -> this : 1
other mathematical this -> c : 1
mathematical this c -> header : 1
this c header -> is : 1
c header is -> expanded : 1
header is expanded -> in : 1
is expanded in -> to : 1
expanded in to -> declare : 1
to declare overloaded -> versions : 1
declare overloaded versions -> of : 1
overloaded versions of -> every : 1
overloaded versions of -> a : 1
versions of every -> for : 1
of every for -> whereas : 1
every for whereas -> c : 1
for whereas c -> declares : 1
whereas c declares -> only : 1
c declares only -> also : 1
declares only also -> declares : 1
only also declares -> and : 1
also declares and -> header : 1
declares and header -> declares : 1
and header declares -> a : 1
and header declares -> the : 1
header declares a -> class : 1
header declares a -> few : 1
header declares a -> particular : 1
header declares a -> single : 1
header declares a -> number : 1
declares a class -> template : 1
declares a class -> or : 1
declares a class -> that : 1
class template for -> complex : 1
class template for -> rational : 2
class template for -> each : 1
class template for -> a : 1
class template for -> the : 1
class template for -> file : 4
class template for -> all : 1
class template for -> information : 1
template for complex -> with : 1
for complex with -> the : 1
complex with the -> specializations : 1
with the specializations -> you : 1
the specializations you -> would : 1
specializations you would -> probably : 1
you would probably -> expect : 1
would probably expect -> for : 1
probably expect for -> and : 1
expect for and -> transcendental : 1
for and transcendental -> and : 1
and transcendental and -> functions : 1
transcendental and functions -> are : 1
and functions are -> also : 1
and functions are -> noteworthy : 1
functions are also -> declared : 1
are also declared -> for : 1
also declared for -> complex : 1
declared for complex -> header : 1
for complex header -> declares : 1
complex header declares -> a : 1
declares a few -> algorithms : 1
declares a few -> types : 1
a few algorithms -> use : 1
few algorithms use -> standard : 1
algorithms use standard -> for : 1
use standard for -> numerical : 1
standard for numerical -> most : 1
for numerical most -> interesting : 1
numerical most interesting -> numerical : 1
most interesting numerical -> functions : 1
interesting numerical functions -> are : 1
numerical functions are -> in : 1
functions are in -> a : 1
are in a -> is : 1
an ordinary numerical -> but : 1
ordinary numerical but -> the : 1
numerical but the -> compiler : 1
free to make -> some : 1
free to make -> assumptions : 1
to make some -> simplifying : 1
make some simplifying -> assumptions : 1
some simplifying assumptions -> to : 1
simplifying assumptions to -> improve : 1
assumptions to improve -> a : 1
to improve a -> is : 1
improve a is -> not : 1
so it cannot -> be : 4
so it cannot -> advance : 1
with standard algorithms -> or : 1
standard algorithms or -> the : 1
algorithms or the -> standard : 1
or the standard -> numeric : 1
the standard numeric -> can : 1
standard numeric can -> use : 1
numeric can use -> the : 1
the template as -> an : 1
template as an -> example : 1
as an example -> of : 1
example of how -> to : 2
of how to -> define : 1
of how to -> use : 1
how to define -> custom : 1
how to define -> a : 1
to define custom -> numeric : 1
define custom numeric -> for : 1
custom numeric for -> suppose : 1
numeric for suppose -> you : 2
want to define -> a : 2
to represent rational -> numbers : 1
represent rational numbers -> to : 1
rational numbers to -> use : 1
numbers to use -> objects : 1
use objects in -> a : 2
you must define -> the : 1
must define the -> class : 1
define the class -> so : 1
class so it -> behaves : 1
so it behaves -> the : 1
it behaves the -> same : 1
behaves the same -> as : 1
same as ordinary -> such : 1
as ordinary such -> as : 1
ordinary such as -> in : 1
ordinary such as -> an : 1
such as in -> other : 1
such as in -> which : 1
as in other -> a : 1
as in other -> converting : 1
other a custom -> numeric : 1
a custom numeric -> type : 1
custom numeric type -> should : 1
numeric type should -> have : 1
type should have -> the : 1
should have the -> public : 1
should have the -> following : 3
have the public -> default : 1
the public default -> constructor : 1
public default constructor -> public : 1
default constructor public -> copy : 1
constructor public copy -> constructor : 1
public copy constructor -> public : 1
copy constructor public -> public : 1
constructor public public -> assignment : 1
public public assignment -> operator : 1
public assignment operator -> arithmetic : 1
assignment operator arithmetic -> and : 1
operator arithmetic and -> comparison : 1
and comparison you -> implement : 1
comparison you implement -> a : 1
you implement a -> make : 1
implement a make -> sure : 1
sure that the -> copy : 1
sure that the -> denominator : 1
sure that the -> state : 1
that the copy -> constructor : 2
constructor and assignment -> operator : 2
constructor and assignment -> operators : 1
and assignment operator -> have : 1
and assignment operator -> is : 1
and assignment operator -> for : 1
assignment operator have -> reasonable : 1
operator have reasonable -> arithmetic : 1
have reasonable arithmetic -> and : 1
reasonable arithmetic and -> comparison : 1
and comparison think -> about : 1
comparison think about -> which : 1
think about which -> operators : 1
about which operators -> are : 1
which operators are -> meaningful : 1
operators are meaningful -> most : 1
are meaningful most -> arithmetic : 1
meaningful most arithmetic -> types : 1
most arithmetic types -> should : 1
arithmetic types should -> have : 1
types should have -> and : 1
should have and -> but : 1
have and but -> only : 1
and but only -> integral : 1
but only integral -> types : 1
only integral types -> will : 1
integral types will -> probably : 1
types will probably -> have : 1
will probably have -> and : 1
probably have and -> shift : 1
have and shift -> you : 1
and shift you -> should : 1
shift you should -> provide : 1
you should provide -> overloaded : 1
you should provide -> all : 1
should provide overloaded -> operators : 1
provide overloaded operators -> that : 1
operators that accept -> the : 1
that accept the -> types : 1
accept the types -> as : 1
the types as -> for : 1
types as for -> the : 1
the template defines -> the : 2
defines the following -> functions : 1
defines the following -> reference : 1
the following functions -> for : 1
following functions for -> const : 1
functions for const -> const : 1
for const const -> const : 7
const const const -> rational : 1
const const const -> unary : 2
const const const -> binary : 2
const const const -> function : 3
const const const -> result : 1
const const const -> int : 1
const const const -> virtual : 6
const const const -> const : 9
const const const -> long : 1
const const const -> chart : 3
const const const -> inline : 1
const const const -> the : 3
const const const -> char : 1
const const const -> void : 1
const const const -> signed : 1
const const const -> class : 2
const const const -> operator : 17
const const rational -> class : 1
const rational class -> template : 1
rational class template -> for : 2
template for rational -> shows : 1
template for rational -> class : 1
for rational shows -> excerpts : 1
rational shows excerpts -> from : 1
shows excerpts from -> a : 1
excerpts from a -> simple : 1
from a simple -> class : 1
from a simple -> queue : 2
from a simple -> stack : 1
simple class rational -> class : 1
class rational class -> template : 1
for rational class -> rational : 1
rational class rational -> typedef : 1
class rational typedef -> t : 1
rational typedef t -> return : 1
typedef t return -> return : 1
t return return -> void : 1
void const return -> const : 1
void const return -> void : 1
return void reduce -> the : 1
return void reduce -> and : 1
void reduce the -> numerator : 1
reduce the numerator -> and : 1
the numerator and -> denominator : 4
numerator and denominator -> by : 1
numerator and denominator -> were : 1
numerator and denominator -> must : 1
numerator and denominator -> to : 1
and denominator by -> the : 1
denominator by the -> make : 1
by the make -> sure : 1
the make sure -> that : 1
that the denominator -> is : 1
the denominator is -> void : 1
denominator is void -> if : 1
is void if -> t : 1
void if t -> d : 1
if t d -> greatest : 1
t d greatest -> common : 1
d greatest common -> divisor : 1
greatest common divisor -> using : 1
common divisor using -> algorithm : 1
divisor using algorithm -> t : 1
using algorithm t -> t : 1
algorithm t t -> n : 1
t t n -> while : 1
t t n -> n : 1
t n while -> t : 1
n while t -> t : 1
while t t -> n : 1
t n n -> d : 1
n n d -> return : 1
n d return -> multiplication : 1
d return multiplication -> assignment : 1
return multiplication assignment -> often : 1
multiplication assignment often -> implemented : 1
assignment often implemented -> as : 1
often implemented as -> a : 1
a member but -> there : 1
member but there -> is : 1
is no need -> to : 2
is no need -> for : 1
no need to -> do : 1
no need to -> to : 1
no need to -> call : 1
need to do -> typename : 1
need to do -> is : 1
to do typename -> const : 1
do typename const -> return : 1
const return multiply -> two : 1
return multiply two -> rational : 1
multiply two rational -> const : 1
two rational const -> result : 1
rational const result -> return : 1
const result return -> multiply : 1
result return multiply -> rational : 1
return multiply rational -> by : 1
multiply rational by -> an : 1
rational by an -> integral : 1
an integral const -> return : 1
integral const return -> const : 1
return other arithmetic -> operators : 1
other arithmetic operators -> are : 1
arithmetic operators are -> all : 1
arithmetic operators are -> defined : 1
operators are all -> other : 1
all other comparisons -> can : 1
other comparisons can -> be : 1
comparisons can be -> implemented : 1
can be implemented -> in : 2
can be implemented -> using : 1
can be implemented -> as : 3
be implemented in -> terms : 1
be implemented in -> constant : 1
implemented in terms -> of : 2
terms of and -> bool : 1
terms of and -> an : 1
terms of and -> function : 1
of and bool -> const : 1
and bool const -> both : 1
bool const both -> operands : 1
const both operands -> are : 1
operands are return -> bool : 1
are return bool -> const : 1
const return numerical -> programmers : 1
return numerical programmers -> find : 1
numerical programmers find -> the : 1
programmers find the -> standard : 1
find the standard -> library : 1
standard library to -> be : 1
library to be -> the : 1
be the project -> is : 1
be the project -> includes : 1
the project is -> a : 1
project is a -> numerical : 1
project is a -> open : 1
is a numerical -> also : 1
a numerical also -> has : 1
numerical also has -> some : 1
also has some -> numerical : 1
has some numerical -> such : 1
some numerical such -> as : 1
numerical such as -> a : 1
numerical such as -> and : 1
a class see -> for : 1
a class see -> class : 1
class see for -> information : 1
about these and -> other : 1
these and other -> and : 1
these and other -> project : 1
and other and -> and : 1
other and and -> has : 1
and and has -> a : 1
has a rich -> which : 1
a rich which -> is : 1
rich which is -> often : 1
which is often -> called : 1
often called this -> chapter : 1
called this chapter -> presents : 1
for details of -> individual : 1
details of individual -> classes : 1
of individual classes -> and : 1
individual classes and -> see : 1
classes and see -> the : 1
and see the -> streams : 1
and see the -> section : 1
and see the -> and : 1
see the streams -> often : 1
the streams often -> use : 1
streams often use -> refer : 1
often use refer -> to : 1
use refer to -> for : 1
refer to for -> information : 3
about see also -> for : 1
information about character -> standard : 1
information about character -> for : 1
information about character -> and : 2
about character standard -> streams : 1
character standard streams -> can : 1
standard streams can -> also : 1
streams can also -> be : 1
with standard iterator -> see : 1
standard iterator see -> and : 1
iterator see and -> for : 1
and for to -> to : 1
and for to -> output : 1
for to to -> with : 1
to to with -> c : 1
to with c -> and : 1
with c and -> many : 1
c and many -> modern : 1
and many modern -> input : 1
and many modern -> workstations : 2
many modern input -> and : 1
modern input and -> output : 1
and output in -> is : 1
output in is -> implemented : 1
in is implemented -> entirely : 1
is implemented entirely -> in : 1
implemented entirely in -> the : 1
entirely in the -> no : 1
in the no -> language : 1
the no language -> features : 1
no language features -> specifically : 1
language features specifically -> support : 1
features specifically support -> library : 1
specifically support library -> is : 1
support library is -> based : 1
library is based -> on : 1
is based on -> a : 1
based on a -> set : 1
based on a -> series : 1
on a set -> of : 1
set of templates -> parameterized : 1
of templates parameterized -> on : 1
templates parameterized on -> the : 1
parameterized on the -> character : 1
on the character -> you : 1
the character you -> can : 1
you can read -> and : 2
you can read -> elements : 2
you can read -> the : 1
you can read -> a : 1
can read and -> write : 2
read and write -> plain : 1
read and write -> objects : 1
read and write -> which : 1
read and write -> to : 1
read and write -> positions : 1
read and write -> if : 1
and write plain -> wide : 1
write plain wide -> or : 1
plain wide or -> some : 1
wide or some -> exotic : 1
or some exotic -> character : 1
some exotic character -> type : 1
exotic character type -> that : 1
character type that -> you : 1
type that you -> might : 1
type that you -> are : 1
need to about -> character : 1
to about character -> traits : 1
about character traits -> in : 1
character traits in -> stream : 1
traits in stream -> class : 1
in stream class -> depicts : 1
stream class depicts -> the : 1
class depicts the -> class : 1
depicts the class -> notice : 1
the class notice -> that : 1
class notice that -> the : 1
notice that the -> names : 1
that the names -> are : 1
the names are -> of : 1
names are of -> the : 1
are of the -> form : 1
are of the -> functions : 1
are of the -> typical : 1
the form these -> are : 1
form these are -> the : 1
these are the -> template : 1
are the template -> the : 1
are the template -> which : 1
template the specializations -> have : 1
the specializations have -> the : 1
specializations have the -> more : 1
have the more -> familiar : 1
the more familiar -> names : 1
more familiar names -> specializes : 1
familiar names specializes -> stream : 1
names specializes stream -> class : 1
specializes stream class -> stream : 1
stream class stream -> class : 1
class stream class -> advantage : 1
stream class advantage -> of : 1
class advantage of -> using : 1
of using inheritance -> in : 1
using inheritance in -> the : 1
in the library -> is : 1
library is that -> the : 1
library is that -> it : 1
that the basic -> functions : 1
the basic functions -> are : 1
basic functions are -> defined : 1
functions are defined -> once : 1
are defined once -> in : 1
defined once in -> the : 1
the base and -> that : 1
base and that -> interface : 1
and that interface -> is : 1
that interface is -> inherited : 1
interface is inherited -> by : 1
is inherited by -> the : 1
inherited by the -> derived : 1
classes and overridden -> when : 1
and overridden when -> using : 1
overridden when using -> you : 1
when using you -> perform : 1
using you perform -> with : 1
you perform with -> files : 1
perform with files -> as : 1
with files as -> you : 1
files as you -> would : 1
you would with -> with : 1
would with with -> only : 1
with with only -> a : 1
with only a -> little : 1
only a little -> you : 1
a little you -> can : 1
little you can -> derive : 1
you can derive -> your : 1
you can derive -> from : 1
can derive your -> own : 1
derive your own -> classes : 1
derive your own -> stream : 1
your own classes -> for : 2
your own classes -> that : 1
own classes for -> specialized : 1
own classes for -> which : 1
classes for specialized -> class : 1
for specialized class -> to : 1
specialized class to -> understand : 1
class to understand -> in : 1
to understand in -> you : 1
understand in you -> must : 1
in you must -> start : 1
you must start -> with : 1
must start with -> the : 1
must start with -> a : 1
start with the -> advantage : 1
start with the -> last : 1
start with the -> first : 1
start with the -> expected : 1
with the advantage -> of : 1
the advantage of -> the : 1
the advantage of -> using : 1
of the stream -> classes : 1
of the stream -> macro : 1
of the stream -> offset : 1
of the stream -> derived : 1
of the stream -> buffer : 2
the stream classes -> is : 1
stream classes is -> that : 1
classes is that -> you : 1
you can implement -> your : 1
you can implement -> in : 1
you can implement -> all : 1
you can implement -> the : 1
overloaded functions that -> look : 1
functions that look -> and : 1
that look and -> behave : 1
look and behave -> like : 1
and behave like -> the : 1
behave like the -> standard : 1
like the standard -> you : 1
and write objects -> of : 1
write objects of -> your : 1
objects of your -> custom : 1
of your custom -> classes : 1
your custom classes -> just : 1
custom classes just -> as : 1
classes just as -> easily : 1
just as easily -> as : 2
as easily as -> the : 1
as easily as -> you : 1
easily as the -> fundamental : 1
as the fundamental -> class : 1
the fundamental class -> declares : 1
fundamental class declares -> types : 1
class declares types -> and : 1
declares types and -> constants : 1
declares types and -> functions : 6
types and constants -> that : 1
and constants that -> are : 1
constants that are -> used : 1
throughout the formatting -> state : 1
the formatting state -> open : 1
formatting state open -> and : 1
state open and -> seek : 1
open and seek -> directions : 1
and seek directions -> are : 1
seek directions are -> all : 1
directions are all -> declared : 1
are all declared -> in : 1
all declared in -> template : 1
declared in template -> declares : 1
in template declares -> input : 1
template declares input -> and : 1
declares input and -> declares : 1
declares input and -> output : 1
input and declares -> output : 1
and declares output -> the : 1
declares output the -> template : 1
output the template -> inherits : 1
the template inherits -> input : 1
template inherits input -> and : 1
inherits input and -> output : 1
and output functions -> through : 1
and output functions -> are : 1
output functions through -> multiple : 1
functions through multiple -> inheritance : 1
through multiple inheritance -> from : 1
multiple inheritance from -> and : 1
inheritance from and -> class : 1
from and class -> templates : 1
and class templates -> handle : 1
and class templates -> and : 2
and class templates -> for : 2
class templates handle -> of : 1
templates handle of -> and : 1
handle of and -> for : 1
for the streams -> rely : 1
the streams rely -> on : 1
streams rely on -> which : 1
rely on which -> control : 1
on which control -> reading : 1
which control reading -> and : 1
control reading and -> writing : 1
and writing buffers -> of : 1
writing buffers of -> the : 1
buffers of the -> template : 1
defines the stream -> buffer : 1
the stream buffer -> and : 2
the stream buffer -> template : 1
the stream buffer -> level : 1
the stream buffer -> class : 1
the stream buffer -> must : 2
the stream buffer -> returns : 1
the stream buffer -> if : 3
the stream buffer -> or : 1
the stream buffer -> object : 1
the stream buffer -> is : 3
the stream buffer -> has : 1
the stream buffer -> does : 1
the stream buffer -> might : 1
the stream buffer -> with : 1
the stream buffer -> to : 2
the stream buffer -> grows : 1
stream buffer and -> the : 1
stream buffer and -> deal : 1
stream buffer and -> defining : 1
stream buffer and -> for : 1
buffer and the -> actual : 1
the actual behavior -> is : 1
actual behavior is -> implemented : 1
behavior is implemented -> by : 1
is implemented by -> to : 1
implemented by to -> and : 1
by to and -> from : 1
and from external -> files : 1
from external files -> is : 1
external files is -> handled : 1
files is handled -> by : 1
handled by and -> using : 1
by and using -> as : 1
and using as -> the : 1
using as the -> stream : 1
using as the -> signal : 1
as the stream -> these : 1
as the stream -> type : 1
as the stream -> can : 1
the stream these -> class : 1
stream these class -> templates : 1
these class templates -> are : 3
templates are declared -> in : 2
declared in can -> also : 1
can also treat -> a : 1
also treat a -> string : 1
treat a string -> as : 1
a string as -> a : 1
a string as -> an : 1
string as a -> stream : 1
string as a -> copy : 1
as a stream -> using : 1
a stream using -> and : 1
stream using and -> the : 1
using and the -> stream : 1
using and the -> other : 1
and the stream -> buffer : 2
and the stream -> sets : 1
and the stream -> position : 1
and the stream -> contents : 1
stream buffer template -> is : 1
buffer template is -> these : 1
template is these -> class : 1
is these class -> templates : 1
declared in library -> supports : 1
in library supports -> and : 1
library supports and -> unformatted : 1
supports and unformatted -> unformatted : 1
and unformatted unformatted -> simply : 1
unformatted unformatted simply -> reads : 1
unformatted simply reads -> or : 1
simply reads or -> writes : 2
reads or writes -> characters : 1
reads or writes -> those : 1
or writes characters -> or : 1
writes characters or -> character : 1
characters or character -> strings : 1
or character strings -> without : 1
character strings without -> the : 1
strings without the -> streams : 1
without the streams -> have : 1
the streams have -> a : 1
streams have a -> number : 1
have a number -> of : 1
of functions for -> performing : 1
of functions for -> testing : 1
functions for performing -> unformatted : 1
for performing unformatted -> input : 1
performing unformatted input -> can : 1
unformatted input can -> skip : 1
input can skip -> over : 1
can skip over -> leading : 1
skip over leading -> parse : 1
over leading parse -> text : 1
leading parse text -> as : 1
parse text as -> and : 1
text as and -> interpret : 1
as and interpret -> numbers : 1
and interpret numbers -> in : 1
interpret numbers in -> different : 1
numbers in different -> bases : 1
in different bases -> formatted : 1
different bases formatted -> output : 1
bases formatted output -> can : 1
formatted output can -> pad : 1
output can pad -> fields : 1
can pad fields -> to : 1
pad fields to -> a : 1
fields to a -> desired : 1
to a desired -> width : 1
a desired width -> and : 1
desired width and -> write : 1
width and write -> numbers : 1
and write numbers -> as : 1
write numbers as -> text : 1
numbers as text -> in : 1
as text in -> different : 1
text in different -> formatted : 1
in different formatted -> uses : 1
different formatted uses -> a : 1
formatted uses a -> to : 1
uses a to -> parse : 1
uses a to -> represent : 1
a to parse -> numeric : 1
to parse numeric -> input : 1
parse numeric input -> or : 1
numeric input or -> format : 1
input or format -> numeric : 1
input or format -> if : 1
or format numeric -> is : 1
format numeric is -> an : 1
numeric is an -> object : 1
of type it -> stores : 1
of type it -> is : 1
of type it -> does : 1
type it stores -> character : 1
it stores character -> formatting : 1
stores character formatting -> and : 1
character formatting and -> related : 1
formatting and related -> information : 1
and related information -> about : 1
related information about -> a : 1
about a particular -> culture : 1
a particular culture -> or : 1
particular culture or -> this : 1
culture or this -> information : 1
or this information -> is : 1
this information is -> organized : 1
this information is -> stored : 1
information is organized -> into : 1
is organized into -> a : 1
organized into a -> set : 1
into a set -> of : 1
into a set -> and : 2
into a set -> does : 1
set of for -> the : 1
for the facet -> defines : 1
for the facet -> which : 1
the facet defines -> how : 2
facet defines how -> numbers : 2
defines how numbers -> are : 2
how numbers are -> read : 1
how numbers are -> formatted : 1
how numbers are -> class : 1
numbers are read -> and : 1
are read and -> parsed : 1
read and parsed -> from : 1
and parsed from -> an : 1
parsed from an -> input : 1
input the facet -> defines : 1
numbers are formatted -> and : 1
are formatted and -> written : 1
formatted and written -> to : 1
and written to -> an : 1
and written to -> until : 1
written to an -> output : 1
to an output -> and : 1
to an output -> an : 1
to an output -> starting : 1
to an output -> the : 3
to an output -> following : 1
to an output -> copying : 1
to an output -> any : 1
to an output -> class : 1
an output and -> the : 1
an output and -> are : 1
output and the -> facet : 1
output and the -> is : 1
and the facet -> specifies : 1
and the facet -> to : 2
the facet specifies -> the : 1
the facet specifies -> thousands : 1
facet specifies the -> punctuation : 1
specifies the punctuation -> characters : 1
the punctuation characters -> used : 2
punctuation characters used -> for : 1
punctuation characters used -> to : 1
characters used for -> decimal : 1
used for decimal -> minus : 1
for decimal minus -> and : 1
decimal minus and -> so : 1
minus and so -> locales : 1
and so locales -> are : 1
so locales are -> used : 1
locales are used -> primarily : 1
are used primarily -> by : 1
used primarily by -> but : 1
primarily by but -> they : 1
by but they -> have : 1
but they have -> other : 1
but they have -> many : 1
they have other -> as : 1
have other as -> see : 1
other as see -> in : 1
as see in -> for : 1
in for perform -> formatted : 1
for perform formatted -> the : 1
perform formatted the -> streams : 1
formatted the streams -> overload : 1
the streams overload -> the : 1
streams overload the -> shift : 1
overload the shift -> left : 1
overload the shift -> so : 1
overload the shift -> operators : 1
the shift left -> shift : 1
shift left shift -> writes : 1
left shift writes -> and : 1
shift writes and -> right : 1
writes and right -> shift : 1
and right shift -> think : 1
right shift think -> of : 1
shift think of -> the : 1
the operators as -> arrows : 1
operators as arrows -> pointing : 1
as arrows pointing -> in : 1
arrows pointing in -> the : 1
pointing in the -> direction : 1
in the direction -> of : 1
the direction of -> data : 1
direction of data -> output : 1
of data output -> flows : 1
data output flows -> from : 1
output flows from -> an : 1
flows from an -> expression : 1
from an expression -> to : 1
expression to the -> stream : 1
to the stream -> input : 1
to the stream -> as : 1
to the stream -> an : 1
to the stream -> and : 2
to the stream -> the : 4
to the stream -> buffer : 1
to the stream -> using : 1
to the stream -> files : 1
the stream input -> flows : 1
stream input flows -> from : 1
input flows from -> the : 1
flows from the -> stream : 1
from the stream -> to : 1
from the stream -> void : 1
from the stream -> into : 1
from the stream -> using : 1
from the stream -> files : 1
from the stream -> buffer : 2
from the stream -> but : 1
the stream to -> a : 1
the stream to -> throw : 1
the stream to -> read : 2
the stream to -> be : 1
the stream to -> allow : 2
stream to a -> variable : 1
to a variable -> the : 1
to a variable -> of : 1
a variable the -> and : 1
variable the and -> other : 1
the and other -> types : 1
the and other -> entities : 1
the and other -> pointers : 1
and other types -> in : 1
and other types -> for : 2
other types in -> the : 2
standard library overload -> the : 1
library overload the -> shift : 1
the shift so -> you : 1
shift so you -> can : 1
you can perform -> with : 1
can perform with -> these : 1
perform with these -> objects : 1
with these objects -> just : 1
these objects just -> as : 1
objects just as -> easily : 1
easily as you -> can : 1
can with the -> fundamental : 1
with the fundamental -> you : 1
the fundamental you -> define : 1
fundamental you define -> your : 1
you define your -> own : 1
classes for which -> is : 1
for which is -> you : 1
for which is -> it : 1
for which is -> or : 2
for which is -> true : 1
for which is -> the : 4
for which is -> copied : 1
for which is -> function : 5
for which is -> as : 1
for which is -> defined : 7
is you should -> also : 1
is you should -> follow : 1
should also override -> the : 1
also override the -> shift : 1
override the shift -> operators : 1
shift operators to -> perform : 1
operators to perform -> in : 1
to perform in -> the : 1
perform in the -> same : 1
manner as the -> standard : 1
manner as the -> input : 1
manner as the -> format : 1
the standard a -> common : 1
the standard a -> map : 1
standard a common -> simplification : 1
a common simplification -> is : 1
common simplification is -> to : 1
simplification is to -> overload : 1
is to overload -> the : 1
operators for and -> but : 1
and but that -> prevents : 1
but that prevents -> your : 1
that prevents your -> operators : 1
prevents your operators -> from : 1
your operators from -> being : 1
operators from being -> used : 1
from being used -> with : 2
being used with -> streams : 1
being used with -> the : 1
used with streams -> or : 1
with streams or -> streams : 1
streams or streams -> with : 1
or streams with -> custom : 1
streams with custom -> character : 1
with custom character -> you : 1
custom character you -> should : 2
character you should -> consider : 1
character you should -> specialize : 1
you should consider -> writing : 1
should consider writing -> function : 1
consider writing function -> templates : 1
writing function templates -> using : 1
writing function templates -> discussed : 1
function templates using -> and : 1
templates using and -> to : 1
using and to -> take : 1
and to take -> advantage : 1
and to take -> a : 1
of the generality -> that : 1
the generality that -> the : 1
generality that the -> stream : 1
that the stream -> templates : 1
that the stream -> buffer : 1
the stream templates -> guidelines : 1
stream templates guidelines -> to : 1
templates guidelines to -> follow : 1
guidelines to follow -> when : 1
follow when writing -> custom : 1
when writing custom -> functions : 1
writing custom functions -> attention : 1
custom functions attention -> to : 1
functions attention to -> the : 1
attention to the -> and : 1
attention to the -> final : 1
the and for -> malformed : 1
and for malformed -> careful : 1
for malformed careful -> with : 1
malformed careful with -> internal : 1
careful with internal -> writing : 1
with internal writing -> an : 1
internal writing an -> object : 1
writing an object -> that : 1
has multiple be -> careful : 1
multiple be careful -> of : 1
be careful of -> how : 1
careful of how -> you : 1
of how you -> treat : 1
how you treat -> the : 1
you treat the -> field : 1
treat the field -> remember : 1
the field remember -> that : 1
field remember that -> the : 1
remember that the -> width : 1
that the width -> is : 1
the width is -> reset : 1
width is reset -> to : 1
is reset to -> after : 1
is reset to -> the : 1
is reset to -> an : 2
reset to after -> each : 1
to after each -> formatted : 1
after each formatted -> output : 1
each formatted output -> with : 1
formatted output with -> the : 1
output with the -> rational : 1
with the rational -> class : 2
the rational class -> shows : 1
the rational class -> read : 1
rational class shows -> an : 1
class shows an -> example : 1
class shows an -> extremely : 1
shows an example -> of : 8
example of for -> the : 1
which represents a -> rational : 1
represents a rational -> for : 1
a rational for -> two : 1
rational for two -> numbers : 1
for two numbers -> are : 1
two numbers are -> separated : 1
two numbers are -> written : 1
numbers are separated -> by : 1
separated by a -> slash : 2
separated by a -> use : 1
by a slash -> if : 1
by a slash -> for : 1
a slash if -> the : 1
slash if the -> slash : 1
if the slash -> is : 1
the slash is -> the : 1
slash is the -> input : 1
is the input -> is : 5
is the input -> determines : 1
is the input -> range : 1
is the input -> buffer : 1
is the input -> position : 1
is the input -> positions : 1
is the input -> pointer : 1
is the input -> sequence : 1
the input is -> so : 1
the input is -> set : 2
the input is -> permutation : 4
the input is -> read : 3
the input is -> your : 1
the input is -> if : 1
the input is -> reached : 1
the input is -> interpreted : 1
the input is -> the : 5
the input is -> not : 2
input is so -> is : 1
is so is -> the : 1
so is the -> header : 1
is the header -> in : 1
the header in -> for : 1
header in for -> more : 1
information about and -> the : 3
about and the -> other : 1
about and the -> facet : 2
the other state -> for : 1
other state for -> the : 1
state for the -> two : 1
for the two -> parts : 1
for the two -> the : 1
the two parts -> of : 1
two parts of -> the : 1
of the rational -> number : 1
the rational number -> are : 1
rational number are -> formatted : 1
number are formatted -> as : 1
are formatted as -> a : 1
formatted as a -> and : 1
formatted as a -> string : 1
the entire string -> is : 1
the entire string -> plus : 3
entire string is -> written : 1
string is written -> to : 2
string is written -> with : 1
is written to -> the : 2
is written to -> a : 1
is written to -> for : 1
is written to -> minimize : 1
written to the -> output : 2
to the output -> using : 1
to the output -> the : 1
to the output -> and : 1
to the output -> then : 1
to the output -> iterator : 1
to the output -> stream : 2
to the output -> format : 1
to the output -> buffer : 1
to the output -> range : 1
to the output -> these : 1
to the output -> array : 1
to the output -> for : 1
to the output -> it : 1
the output using -> a : 1
output using a -> temporary : 1
output using a -> modified : 1
using a temporary -> string : 1
a temporary string -> lets : 1
a temporary string -> passing : 2
a temporary string -> and : 6
a temporary string -> constructed : 4
a temporary string -> as : 1
temporary string lets -> the : 1
string lets the -> caller : 1
lets the caller -> set : 1
the caller set -> the : 1
caller set the -> field : 1
set the field -> width : 1
the field width -> and : 1
the field width -> is : 1
the field width -> specifies : 1
the field width -> to : 2
field width and -> apply : 1
width and apply -> the : 1
and apply the -> width : 1
apply the width -> to : 1
the width to -> the : 1
the width to -> after : 1
width to the -> entire : 1
width to the -> return : 2
to the entire -> rational : 2
the entire rational -> number : 1
the entire rational -> out : 1
entire rational number -> as : 1
rational number as -> a : 1
rational number as -> two : 1
number as a -> single : 1
a single if -> the : 3
a single if -> this : 1
a single if -> is : 2
if the numerator -> and : 1
and denominator were -> written : 1
denominator were written -> directly : 1
were written directly -> to : 1
written directly to -> the : 1
written directly to -> interspersed : 1
the output the -> width : 1
the output the -> buffer : 1
the output the -> pointer : 1
the output the -> output : 1
the output the -> stream : 1
output the width -> would : 1
the width would -> apply : 1
width would apply -> only : 1
would apply only -> to : 1
to the streams -> one : 1
the streams one -> character : 1
streams one character -> at : 3
one character at -> a : 4
character at a -> for : 1
character at a -> shows : 1
character at a -> typename : 1
character at a -> char : 1
at a for -> more : 1
a for more -> information : 2
about with the -> rational : 1
rational class read -> a : 1
class read a -> rational : 1
read a rational -> the : 1
a rational the -> numerator : 1
rational the numerator -> and : 1
and denominator must -> be : 1
denominator must be -> written : 1
must be written -> as : 1
be written as -> two : 1
written as two -> numbers : 1
as two numbers -> first : 1
two numbers first -> can : 1
numbers first can -> be : 1
first can be -> separated : 1
can be separated -> by : 1
be separated by -> a : 1
a slash for -> typename : 1
slash for typename -> typename : 1
for typename typename -> typename : 7
typename typename char -> if : 1
typename char if -> return : 1
char if return -> allow : 1
if return allow -> whitespace : 1
return allow whitespace -> before : 1
allow whitespace before -> and : 1
whitespace before and -> after : 1
before and after -> the : 1
and after the -> dividing : 1
after the dividing -> if : 1
the dividing if -> return : 1
dividing if return -> if : 1
if return if -> malformed : 1
if return if -> return : 1
return if malformed -> input : 1
if malformed input -> return : 1
malformed input return -> if : 1
input return if -> return : 1
return if return -> return : 1
return if return -> find : 1
return return write -> a : 1
return write a -> rational : 1
write a rational -> number : 1
a rational number -> as : 1
number as two -> integers : 1
as two integers -> separated : 1
two integers separated -> by : 1
integers separated by -> a : 1
by a use -> a : 1
use a string -> stream : 3
a string stream -> so : 1
a string stream -> to : 1
a string stream -> if : 1
a string stream -> with : 5
string stream so -> the : 1
stream so the -> two : 1
so the two -> numbers : 1
so the two -> occurrences : 1
the two numbers -> are : 1
numbers are written -> without : 1
are written without -> and : 1
written without and -> the : 1
without and the -> overall : 1
and the overall -> formatted : 1
the overall formatted -> string : 1
overall formatted string -> is : 1
formatted string is -> then : 1
string is then -> padded : 2
is then padded -> to : 1
is then padded -> with : 1
then padded to -> the : 1
padded to the -> desired : 1
the desired typename -> typename : 1
desired typename typename -> const : 1
typename typename const -> use : 1
typename typename const -> allocate : 1
typename typename const -> operator : 1
typename typename const -> two : 1
typename const use -> the : 1
const use the -> same : 1
the same to -> write : 1
same to write -> the : 1
write the numerator -> and : 1
and denominator to -> a : 1
denominator to a -> string : 1
to a string -> s : 1
to a string -> that : 1
to a string -> of : 2
a string s -> write : 1
string s write -> the : 1
s write the -> string : 1
write the string -> to : 1
string to the -> field : 1
string to the -> caller : 2
string to the -> output : 1
to the field -> and : 1
the field and -> alignment : 1
the field and -> the : 1
field and alignment -> are : 1
and alignment are -> already : 1
alignment are already -> set : 1
are already set -> in : 1
already set in -> so : 1
set in so -> they : 1
in so they -> apply : 1
so they apply -> to : 1
they apply to -> the : 1
entire rational out -> return : 1
rational out return -> c : 1
out return c -> standard : 1
return c standard -> c : 1
standard c standard -> the : 1
c standard the -> library : 1
standard the library -> includes : 1
the library includes -> the : 1
includes the c -> you : 1
includes the c -> standard : 1
the c you -> can : 1
c you can -> use : 1
the standard such -> as : 1
standard such as -> and : 1
as and the -> c : 1
and the c -> standard : 1
library is contained -> in : 1
is contained in -> for : 1
is contained in -> the : 1
contained in for -> narrow : 1
in for narrow -> and : 1
for narrow and -> for : 1
narrow and for -> the : 1
for the library -> inherits : 1
for the library -> and : 1
the library inherits -> many : 1
library inherits many -> attributes : 1
inherits many attributes -> from : 1
many attributes from -> the : 1
attributes from the -> c : 1
the c for -> the : 3
the c for -> simple : 1
c for the -> has : 1
c for the -> c : 1
c for the -> function : 1
for the has -> the : 1
the has the -> same : 1
as the c -> in : 1
the c in -> most : 1
the c in -> some : 1
c in most -> a : 1
in most a -> program : 1
most a program -> should : 1
a program should -> use : 1
a program should -> avoid : 1
program should use -> functions : 1
should use functions -> rather : 1
use functions rather -> than : 1
functions rather than -> c : 1
rather than c -> and : 1
than c and -> functions : 1
c and functions -> are : 1
c and functions -> with : 1
functions are noteworthy -> for : 1
are noteworthy for -> their : 1
noteworthy for their -> lack : 1
for their lack -> of : 1
their lack of -> although : 1
lack of although -> some : 1
of although some -> compilers : 1
although some compilers -> now : 1
some compilers now -> check : 1
compilers now check -> the : 1
now check the -> format : 1
check the format -> strings : 1
the format strings -> and : 1
format strings and -> compare : 1
strings and compare -> them : 1
and compare them -> with : 1
compare them with -> the : 1
them with the -> actual : 1
them with the -> substring : 1
with the actual -> many : 1
with the actual -> implementation : 1
the actual many -> compilers : 1
actual many compilers -> do : 1
many compilers do -> it : 1
compilers do it -> is : 1
do it is -> too : 1
do it is -> used : 1
it is too -> easy : 1
is too easy -> to : 1
too easy to -> make : 1
easy to make -> a : 1
to make a -> simple : 1
make a simple -> if : 1
simple if you -> are : 1
you are your -> program : 2
are your program -> will : 2
your program will -> fail : 1
your program will -> appear : 1
program will fail -> if : 1
will fail if -> you : 1
fail if you -> are : 1
program will appear -> to : 1
will appear to -> work : 1
appear to work -> on : 1
to work on -> your : 1
work on your -> system : 1
on your system -> and : 1
your system and -> fail : 1
system and fail -> only : 1
and fail only -> when : 1
fail only when -> it : 1
only when it -> is : 1
it is run -> on : 1
is run on -> your : 1
run on your -> the : 1
on your the -> following : 1
your the following -> is : 1
example of a -> common : 1
example of a -> macro : 1
example of a -> heap : 1
example of a -> set : 3
example of a -> manipulator : 2
a common mistake -> made : 1
common mistake made -> when : 1
mistake made when -> using : 1
made when using -> problem : 1
when using problem -> here : 1
using problem here -> is : 1
problem here is -> that : 1
here is that -> the : 1
the type might -> be : 1
type might be -> which : 1
might be which -> means : 1
means the argument -> and : 1
means the argument -> expands : 1
the argument and -> the : 1
the argument and -> result : 2
argument and the -> format : 1
and the format -> do : 1
and the format -> also : 1
the format do -> not : 1
format do not -> on : 1
do not on -> some : 1
not on some -> the : 1
on some the -> mismatch : 1
some the mismatch -> is : 1
the mismatch is -> but : 1
mismatch is but -> on : 1
is but on -> wrong : 1
but on wrong -> information : 1
on wrong information -> will : 1
wrong information will -> be : 1
information will be -> or : 1
will be or -> such : 1
be or such -> as : 1
as and are -> unsafe : 1
and are unsafe -> because : 1
are unsafe because -> they : 1
unsafe because they -> write : 1
because they write -> to : 1
they write to -> character : 1
write to character -> arrays : 2
to character arrays -> with : 1
to character arrays -> using : 1
to character arrays -> in : 1
character arrays with -> no : 1
arrays with no -> way : 1
with no way -> to : 1
no way to -> limit : 2
no way to -> compare : 1
way to limit -> the : 2
to limit the -> number : 1
to limit the -> input : 1
limit the number -> of : 2
number of characters -> without : 1
number of characters -> read : 4
number of characters -> unformatted : 1
number of characters -> to : 4
number of characters -> available : 2
number of characters -> or : 1
number of characters -> that : 1
number of characters -> written : 1
number of characters -> at : 2
number of characters -> actually : 3
number of characters -> immediately : 2
number of characters -> extracted : 1
number of characters -> stored : 1
number of characters -> needed : 2
number of characters -> converted : 2
number of characters -> in : 2
number of characters -> copied : 1
number of characters -> left : 1
number of characters -> allocated : 1
number of characters -> is : 1
number of characters -> inserted : 1
of characters without -> a : 1
characters without a -> way : 1
without a way -> to : 1
way to prevent -> buffer : 1
to prevent buffer -> these : 1
prevent buffer these -> functions : 1
buffer these functions -> are : 1
these functions are -> practically : 1
these functions are -> wide : 1
functions are practically -> limitation : 1
are practically limitation -> of : 1
practically limitation of -> the : 1
limitation of the -> c : 1
of the c -> library : 1
of the c -> c : 1
of the c -> headers : 2
of the c -> it : 1
of the c -> standard : 9
of the c -> later : 1
of the c -> defines : 1
the c library -> is : 2
the c library -> requires : 1
the c library -> performs : 1
c library is -> that : 1
c library is -> necessary : 1
that it has -> little : 1
it has little -> support : 1
has little support -> for : 1
little support for -> alternate : 1
support for alternate -> in : 1
for alternate in -> every : 1
alternate in every -> stream : 1
in every stream -> can : 1
every stream can -> have : 1
stream can have -> a : 1
stream can have -> one : 1
different for this -> lets : 1
for this lets -> you : 1
this lets you -> write : 1
lets you write -> a : 1
write a program -> that : 1
a program that -> reads : 1
a program that -> demonstrates : 1
a program that -> is : 1
program that reads -> a : 1
that reads a -> datafile : 1
reads a datafile -> in : 1
a datafile in -> a : 1
datafile in a -> fixed : 1
in a fixed -> format : 1
a fixed format -> the : 1
fixed format the -> but : 1
format the but -> prints : 1
the but prints -> the : 1
but prints the -> results : 1
prints the results -> in : 1
the results in -> the : 1
results in the -> native : 2
results in the -> int : 1
results in the -> termination : 1
in the native -> writing : 1
in the native -> following : 1
the native writing -> such : 1
native writing such -> a : 1
writing such a -> program : 1
such a program -> using : 1
a program using -> the : 1
program using the -> c : 1
using the c -> library : 2
using the c -> if : 1
using the c -> convention : 1
c library requires -> that : 1
library requires that -> locales : 1
requires that locales -> be : 1
that locales be -> changed : 1
locales be changed -> between : 1
be changed between -> each : 1
changed between each -> read : 1
between each read -> and : 1
each read and -> write : 1
and write which -> is : 1
write which is -> much : 1
which is much -> less : 1
is much less -> spite : 1
much less spite -> of : 1
less spite of -> all : 1
spite of all -> these : 1
of all these -> some : 1
all these some -> programmers : 1
these some programmers -> still : 1
some programmers still -> use : 1
programmers still use -> the : 1
still use the -> c : 1
use the c -> in : 1
c in some -> the : 1
in some the -> c : 1
in some the -> same : 1
in some the -> collation : 1
some the c -> library : 1
c library performs -> better : 1
library performs better -> than : 1
performs better than -> the : 1
than the another -> reason : 1
the another reason -> is : 1
another reason is -> that : 1
reason is that -> some : 1
is that some -> such : 1
is that some -> members : 1
that some such -> as : 1
such as have -> a : 1
as have a -> brevity : 1
have a brevity -> that : 1
a brevity that -> appeals : 1
brevity that appeals -> to : 1
that appeals to -> c : 1
appeals to c -> and : 1
to c and -> compare : 1
c and compare -> the : 1
and compare the -> following : 1
compare the following -> one : 1
following one using -> and : 1
one using and -> the : 1
the other using -> the : 1
other using the -> which : 1
the which both -> print : 1
which both print -> the : 1
both print the -> same : 1
print the same -> and : 1
the same and -> values : 1
the same and -> for : 1
the same and -> be : 1
the same and -> disaster : 1
same and values -> in : 1
and values in -> the : 1
the same long -> cout : 1
same long cout -> right : 1
long cout right -> dec : 1
cout right dec -> count : 1
right dec count -> hex : 1
dec count hex -> mask : 1
count hex mask -> though : 1
hex mask though -> the : 1
mask though the -> approach : 1
though the approach -> seems : 1
the approach seems -> more : 1
approach seems more -> concise : 1
seems more concise -> and : 1
more concise and -> easier : 1
concise and easier -> to : 1
and easier to -> i : 1
easier to i -> recommend : 1
to i recommend -> using : 1
i recommend using -> the : 1
recommend using the -> you : 1
using the you -> might : 1
you might think -> is : 1
might think is -> saving : 1
think is saving -> you : 1
is saving you -> time : 1
saving you time -> but : 1
you time but -> the : 1
time but the -> lack : 1
but the lack -> of : 1
the lack of -> safety : 1
the lack of -> a : 1
the lack of -> and : 3
lack of safety -> can : 1
of safety can -> present : 1
safety can present -> major : 1
can present major -> problems : 1
present major problems -> in : 1
major problems in -> the : 1
problems in the -> the : 1
the the example -> and : 1
the example and -> imagine : 1
example and imagine -> what : 1
and imagine what -> would : 1
imagine what would -> happen : 1
what would happen -> if : 1
would happen if -> exceeded : 1
happen if exceeded -> the : 1
if exceeded the -> maximum : 1
exceeded the maximum -> value : 1
the maximum value -> for : 1
the maximum value -> in : 1
the maximum value -> of : 3
the maximum value -> that : 2
maximum value for -> type : 1
value for type -> using : 1
for type using -> the : 1
library is necessary -> perhaps : 1
is necessary perhaps -> legacy : 1
necessary perhaps legacy -> c : 1
perhaps legacy c -> code : 1
legacy c code -> is : 1
c code is -> being : 1
code is being -> called : 1
is being called -> from : 1
being called from -> to : 1
called from to -> help : 1
from to help -> in : 1
to help in -> such : 1
help in such -> the : 1
in such the -> standard : 1
such the standard -> objects : 1
the standard objects -> are : 2
the standard objects -> is : 1
standard objects are -> associated : 1
standard objects are -> synchronized : 1
objects are associated -> with : 1
associated with their -> corresponding : 1
with their corresponding -> c : 1
their corresponding c -> the : 1
corresponding c the -> object : 1
c the object -> is : 1
object is associated -> with : 1
is associated with -> the : 1
is associated with -> and : 1
is associated with -> an : 1
is associated with -> a : 3
with the c -> is : 1
with the c -> they : 1
with the c -> it : 6
with the c -> unlike : 2
with the c -> type : 1
the c is -> associated : 1
c is associated -> with : 1
associated with and -> and : 1
with and and -> are : 1
with and and -> function : 1
and are associated -> with : 1
associated with you -> can : 1
can mix c -> and : 1
mix c and -> functions : 1
and functions with -> the : 1
the standard section -> lists : 1
standard section lists -> the : 1
lists the headers -> in : 1
the headers in -> the : 1
the standard with -> a : 1
standard with a -> brief : 1
with a brief -> description : 1
a brief description -> of : 1
brief description of -> see : 1
description of see -> the : 1
see the corresponding -> sections : 1
the corresponding sections -> in : 2
corresponding sections in -> for : 1
corresponding sections in -> operator : 1
sections in for -> more : 1
for more detailed -> input : 1
more detailed input -> and : 1
detailed input and -> output : 1
and output using -> external : 1
and output using -> the : 1
output using external -> declares : 1
using external declares -> and : 1
external declares and -> other : 1
declares and other -> several : 1
declares and other -> types : 1
and other several -> function : 1
other several function -> objects : 1
several function objects -> that : 1
function objects that -> affect : 1
function objects that -> have : 1
objects that affect -> an : 1
that affect an -> stream : 1
affect an stream -> a : 1
an stream a -> manipulator : 1
stream a manipulator -> offers : 1
a manipulator offers -> an : 1
manipulator offers an -> often : 1
offers an often -> more : 1
an often more -> syntax : 1
often more syntax -> for : 1
more syntax for -> calling : 1
syntax for calling -> member : 1
for calling member -> functions : 1
calling member functions -> of : 1
functions of an -> stream : 1
functions of an -> that : 1
functions of an -> empty : 1
of an stream -> template : 1
of an stream -> see : 1
an stream template -> definitions : 1
stream template definitions -> of : 1
template definitions of -> and : 1
of and some -> common : 1
and some common -> all : 1
some common all -> streams : 1
common all streams -> derive : 1
all streams derive -> from : 1
streams derive from -> which : 1
derive from which -> derives : 1
from which derives -> from : 1
which derives from -> declarations : 1
derives from declarations -> of : 1
from declarations of -> the : 1
standard classes and -> judicious : 1
classes and judicious -> use : 1
and judicious use -> of : 2
judicious use of -> can : 1
judicious use of -> the : 1
use of can -> reduce : 1
of can reduce -> the : 1
can reduce the -> burden : 1
reduce the burden -> in : 1
the burden in -> certain : 1
burden in certain -> of : 1
in certain of -> the : 1
certain of the -> standard : 1
the standard types -> and : 1
standard types and -> functions : 1
functions for streams -> and : 2
for streams and -> and : 1
for streams and -> string : 1
streams and and -> for : 1
and and for -> input : 1
and and for -> information : 1
and and for -> related : 1
and and for -> all : 1
and for input -> and : 1
for input and -> output : 3
for input and -> storing : 1
for input and -> in : 1
for input and -> shows : 1
for input and -> open : 1
and output streams -> and : 1
output streams and -> types : 1
streams and types -> and : 1
streams and string -> streams : 1
and string streams -> and : 1
string streams and -> which : 1
streams and which -> read : 1
and which read -> from : 1
which read from -> and : 1
read from and -> write : 1
read from and -> interpreted : 1
read from and -> written : 1
from and write -> to : 1
and write to -> strings : 1
and write to -> character : 1
and write to -> the : 3
write to strings -> using : 1
to strings using -> the : 1
strings using the -> stream : 1
strings using the -> facet : 1
using the stream -> stream : 1
using the stream -> class : 1
the stream stream -> buffers : 1
stream stream buffers -> for : 1
stream buffers for -> the : 1
buffers for the -> stream : 1
buffers for the -> input : 1
the stream most -> programs : 1
stream most programs -> do : 1
most programs do -> not : 4
programs do not -> need : 3
programs do not -> throw : 1
programs do not -> call : 1
programs do not -> use : 1
need to deal -> with : 1
to deal with -> the : 1
deal with the -> stream : 1
with the stream -> but : 1
the stream but -> stick : 1
the stream but -> not : 1
stream but stick -> to : 1
but stick to -> the : 1
stick to the -> interfaces : 1
stick to the -> but : 1
to the interfaces -> presented : 1
the interfaces presented -> by : 1
interfaces presented by -> the : 1
presented by the -> stream : 1
by the stream -> string : 1
the stream string -> streams : 1
stream string streams -> which : 1
string streams which -> read : 1
streams which read -> and : 1
which read and -> write : 1
character arrays using -> a : 1
arrays using a -> stream : 1
using a stream -> these : 1
a stream these -> classes : 1
stream these classes -> are : 1
these classes are -> not : 1
are not so -> they : 1
not so they -> do : 1
so they do -> not : 1
do not work -> for : 1
do not work -> this : 1
not work for -> wide : 1
work for wide -> characters : 1
for wide characters -> or : 1
wide characters or -> alternative : 1
characters or alternative -> character : 1
or alternative character -> this : 1
alternative character this -> header : 1
character this header -> is : 1
this header is -> an : 1
header is an -> stream : 1
header is an -> array : 1
is an stream -> performs : 1
an stream performs -> text : 1
stream performs text -> also : 1
performs text also -> known : 1
text also known -> as : 1
known as formatted -> in : 1
as formatted in -> which : 1
formatted in which -> text : 1
in which text -> is : 1
which text is -> converted : 1
text is converted -> to : 2
converted to and -> from : 2
converted to and -> and : 1
and from numeric -> and : 1
from numeric and -> other : 1
numeric and other -> for : 1
and other for -> values : 1
other for values -> are : 1
for values are -> converted : 1
values are converted -> to : 1
to and and -> other : 1
and other formatting -> is : 1
other formatting is -> applied : 1
formatting is applied -> to : 1
is applied to -> the : 1
is applied to -> to : 1
is applied to -> any : 1
is applied to -> an : 1
applied to the -> for : 1
to the for -> formatting : 1
to the for -> a : 1
the for formatting -> controls : 1
for formatting controls -> how : 1
formatting controls how -> text : 1
controls how text -> is : 1
how text is -> converted : 1
converted to values -> and : 1
to values and -> whether : 1
values and whether -> whitespace : 1
and whether whitespace -> is : 1
whether whitespace is -> skipped : 1
whitespace is skipped -> prior : 1
is skipped prior -> to : 1
skipped prior to -> reading : 1
prior to reading -> an : 2
prior to reading -> from : 1
to reading an -> input : 2
reading an input -> with : 1
reading an input -> you : 1
an input with -> no : 1
input with no -> systems : 1
with no systems -> have : 1
no systems have -> different : 1
systems have different -> ways : 1
have different ways -> of : 1
different ways of -> representing : 1
ways of representing -> the : 1
of representing the -> end : 1
representing the end -> of : 1
a a text -> stream : 1
a text stream -> hides : 1
text stream hides -> these : 1
stream hides these -> details : 1
hides these details -> and : 1
these details and -> maps : 1
details and maps -> all : 1
and maps all -> line : 1
maps all line -> endings : 1
all line endings -> in : 1
line endings in -> a : 1
endings in a -> file : 1
a file to -> the : 1
file to the -> newline : 1
to the newline -> character : 1
the newline character -> the : 1
the newline character -> is : 1
newline character the -> number : 1
character the number -> of : 1
of characters read -> from : 1
of characters read -> in : 1
of characters read -> so : 1
of characters read -> a : 1
characters read from -> or : 1
read from or -> written : 1
from or written -> to : 1
or written to -> a : 1
written to a -> file : 1
written to a -> static : 1
to a file -> might : 1
file might not -> match : 1
match the actual -> file : 1
the actual file -> an : 1
actual file an -> implementation : 1
file an implementation -> might : 1
implementation might require -> a : 1
might require a -> newline : 1
might require a -> saturation : 1
require a newline -> at : 1
a newline at -> the : 1
newline at the -> end : 1
of the last -> line : 1
of the last -> parameter : 1
of the last -> multibyte : 1
of the last -> wide : 1
of the last -> item : 1
the last line -> of : 1
last line of -> a : 1
line of a -> control : 1
of a control -> a : 1
a control a -> stream : 1
control a stream -> keeps : 1
a stream keeps -> track : 1
stream keeps track -> of : 1
set of a -> field : 1
of a field -> and : 1
a field and -> a : 1
field and a -> of : 1
and a of -> calling : 1
a of calling -> the : 1
of calling the -> lists : 1
of calling the -> although : 1
of calling the -> input : 1
calling the lists -> all : 1
the lists all -> the : 1
all the formatting -> input : 1
the formatting input -> functions : 1
formatting input functions -> are : 1
input functions are -> the : 1
if the flag -> is : 13
the flag is -> set : 4
the flag is -> a : 4
the flag is -> not : 1
the flag is -> clear : 1
the flag is -> values : 1
the flag is -> and : 3
the flag is -> that : 1
the flag is -> or : 1
the flag is -> the : 4
the flag is -> in : 1
the flag is -> on : 1
the flag is -> destructor : 1
the flag is -> freezefl : 1
the flag is -> does : 1
the flag is -> then : 1
flag is set -> is : 3
flag is set -> or : 1
flag is set -> and : 1
is set is -> the : 1
is set is -> an : 1
is set is -> not : 1
is set is -> thousands : 1
is the whitespace -> characters : 1
the whitespace characters -> to : 1
whitespace characters to -> the : 1
to the locale -> imbued : 1
to the locale -> and : 1
the locale imbued -> in : 1
locale imbued in -> the : 1
imbued in the -> are : 1
the are and -> input : 1
are and input -> begins : 1
and input begins -> with : 1
input begins with -> the : 1
with the first -> reading : 1
with the first -> whitespace : 1
with the first -> permutation : 1
with the first -> character : 3
with the first -> solid : 2
the first reading -> into : 1
first reading into -> a : 1
reading into a -> or : 1
into a or -> character : 1
a or character -> all : 1
or character all -> characters : 1
character all characters -> are : 1
all characters are -> read : 1
characters are read -> into : 2
characters are read -> is : 1
characters are read -> or : 1
characters are read -> from : 7
characters are read -> before : 1
characters are read -> if : 1
are read into -> the : 1
are read into -> null : 1
read into the -> ending : 1
read into the -> function : 1
into the ending -> with : 1
the ending with -> the : 1
ending with the -> first : 1
the first whitespace -> character : 1
first whitespace character -> or : 1
whitespace character or -> when : 1
character or when -> characters : 1
or when characters -> have : 1
when characters have -> been : 1
characters have been -> read : 3
characters have been -> the : 1
characters have been -> they : 1
characters have been -> fetched : 1
characters have been -> stored : 1
have been read -> whichever : 1
have been read -> and : 1
have been read -> from : 1
been read whichever -> comes : 1
read whichever comes -> the : 1
whichever comes the -> is : 1
whichever comes the -> default : 1
comes the is -> then : 1
the is then -> reset : 1
is then reset -> to : 1
then reset to -> all : 1
reset to all -> other : 1
to all other -> the : 1
all other the -> is : 1
all other the -> traits : 1
other the is -> not : 1
the is not -> to : 1
the is not -> a : 1
not to read -> a : 1
read a number -> from : 1
a number from -> a : 3
a number from -> the : 1
number from a -> read : 1
number from a -> a : 1
number from a -> typename : 1
from a read -> the : 1
a read the -> field : 1
a read the -> function : 2
read the field -> into : 1
the field into -> a : 1
field into a -> then : 1
into a then -> use : 1
a then use -> a : 1
then use a -> string : 1
string stream to -> read : 1
stream to read -> the : 1
stream to read -> or : 2
read the as -> shown : 1
in a number -> from : 1
from a a -> number : 1
from a a -> is : 1
from a typename -> typename : 2
from a typename -> void : 1
from a typename -> class : 1
typename typename if -> not : 1
typename typename if -> the : 1
typename if not -> fixed : 1
if not fixed -> so : 1
not fixed so -> read : 1
fixed so read -> in : 1
so read in -> else : 1
read in else -> in : 1
in else in -> if : 1
else in if -> return : 1
in if return -> only : 1
in if return -> else : 1
if return only -> other : 1
return only other -> flags : 1
only other flags -> that : 1
other flags that -> affect : 1
flags that affect -> input : 1
that affect input -> are : 1
affect input are -> and : 1
input are and -> flag : 1
are and flag -> determines : 1
and flag determines -> how : 1
flag determines how -> integers : 1
determines how integers -> are : 1
how integers are -> if : 1
integers are if -> is : 1
are if is -> it : 1
are if is -> not : 1
if is it -> specifies : 1
if is it -> cannot : 1
if is it -> returns : 2
if is it -> will : 1
is it specifies -> a : 1
it specifies a -> fixed : 1
specifies a fixed -> radix : 1
a fixed radix -> or : 1
fixed radix or -> or : 1
radix or or -> if : 1
or or if -> is : 1
or or if -> the : 1
the input determines -> the : 1
input determines the -> leading : 1
determines the leading -> or : 1
the leading or -> for : 1
leading or for -> leading : 1
or for leading -> for : 1
for leading for -> decimal : 1
leading for decimal -> the : 1
for decimal the -> flag : 1
decimal the flag -> is : 1
flag is a -> formatted : 1
flag is a -> numeric : 1
flag is a -> string : 1
flag is a -> prefix : 1
is a formatted -> read : 1
a formatted read -> of : 1
a formatted read -> from : 1
a formatted read -> a : 1
formatted read of -> reads : 1
read of reads -> a : 1
of reads a -> which : 1
reads a which -> must : 1
a which must -> match : 1
which must match -> the : 1
match the names -> or : 1
the names or -> the : 1
names or the -> according : 1
or the according -> to : 1
the according to -> the : 1
to the if -> the : 4
to the if -> is : 2
to the if -> an : 1
flag is not -> a : 1
not a is -> read : 1
a is read -> as : 1
as a long -> and : 1
a long and -> the : 1
long and the -> number : 1
and the number -> is : 1
the number is -> converted : 1
the number is -> formatted : 2
the number is -> if : 1
the number is -> it : 1
the number is -> no : 1
number is converted -> to : 1
to using the -> standard : 1
to using the -> canonical : 1
to using the -> flags : 1
using the standard -> nonzero : 1
using the standard -> algorithms : 1
the standard nonzero -> is : 1
standard nonzero is -> and : 1
nonzero is and -> is : 1
and is by -> the : 1
is by the -> flag : 1
is by the -> class : 1
by the flag -> is : 1
flag is clear -> numbers : 1
flag is clear -> writing : 1
is clear numbers -> are : 1
clear numbers are -> accepted : 1
numbers are accepted -> in : 1
are accepted in -> fixed : 1
accepted in fixed -> or : 1
in fixed or -> scientific : 1
in fixed or -> exponential : 1
fixed or scientific -> decimal : 1
or scientific decimal -> point : 1
scientific decimal point -> character : 1
decimal point character -> is : 2
point character is -> determined : 1
point character is -> it : 1
character is determined -> by : 1
by the as -> is : 1
the as is -> the : 1
is the thousands -> thousands : 1
the thousands thousands -> separators : 1
thousands thousands separators -> are : 2
thousands separators are -> optional : 1
thousands separators are -> inserted : 1
thousands separators are -> read : 1
separators are optional -> in : 1
in the input -> but : 1
in the input -> typename : 1
in the input -> characters : 1
in the input -> is : 1
in the input -> if : 1
in the input -> yields : 1
in the input -> the : 1
the input but -> if : 1
input but if -> they : 1
but if they -> must : 1
if they must -> match : 1
they must match -> the : 1
match the thousands -> separator : 1
the thousands separator -> character : 1
the thousands separator -> is : 3
thousands separator character -> and : 1
separator character and -> grouping : 1
character and grouping -> for : 1
and grouping for -> assuming : 1
grouping for assuming -> that : 1
for assuming that -> the : 1
assuming that the -> thousands : 1
assuming that the -> member : 1
that the thousands -> separator : 1
thousands separator is -> and : 1
thousands separator is -> or : 2
separator is and -> the : 1
and the grouping -> is : 1
the grouping is -> for : 1
the grouping is -> or : 2
grouping is for -> every : 1
for every characters -> returns : 1
every characters returns -> the : 1
characters returns the -> following : 1
returns the following -> are : 1
following are three -> valid : 1
are three valid -> input : 1
three valid input -> examples : 1
valid input examples -> and : 1
input examples and -> one : 1
examples and one -> invalid : 1
and one invalid -> valid : 1
one invalid valid -> invalid : 1
invalid valid invalid -> valid : 1
valid invalid valid -> reading : 1
invalid valid reading -> data : 1
valid reading data -> that : 1
reading data that -> the : 1
data that the -> user : 1
that the user -> you : 1
the user you -> should : 1
user you should -> imbue : 1
user you should -> use : 1
you should imbue -> the : 2
should imbue the -> input : 1
should imbue the -> output : 1
imbue the input -> stream : 1
the input stream -> with : 1
the input stream -> returns : 1
the input stream -> a : 1
the input stream -> for : 1
the input stream -> beeffeed : 1
the input stream -> and : 1
the input stream -> to : 1
the input stream -> into : 1
input stream with -> the : 1
stream with the -> native : 2
with the native -> locale : 2
the native locale -> for : 2
native locale for -> input : 1
native locale for -> output : 1
locale for input -> that : 1
for input that -> is : 1
input that is -> being : 1
that is being -> read : 1
that is being -> written : 1
is being read -> from : 1
being read from -> files : 1
read from files -> or : 1
read from files -> and : 1
from files or -> other : 1
files or other -> sources : 2
or other sources -> that : 2
other sources that -> require : 2
sources that require -> portable : 2
that require portable -> data : 2
require portable data -> be : 2
portable data be -> sure : 2
data be sure -> to : 2
sure to use -> the : 2
the or locale -> the : 2
or locale the -> facet : 2
locale the facet -> in : 2
the facet in -> the : 2
the facet in -> function : 1
facet in the -> section : 2
of for details -> on : 2
for details on -> how : 2
details on how -> numeric : 2
on how numeric -> input : 1
on how numeric -> output : 1
how numeric input -> is : 1
numeric input is -> parsed : 1
input is parsed -> and : 1
is parsed and -> output : 1
parsed and output -> functions : 1
output functions are -> the : 1
are the they -> all : 1
the they all -> work : 1
they all work -> using : 1
all work using -> the : 1
work using the -> flags : 1
using the flags -> and : 1
using the flags -> of : 1
the flags and -> other : 1
the flags and -> a : 1
flags and other -> information : 1
and other information -> to : 1
other information to -> format : 1
information to format -> a : 1
information to format -> call : 1
to format a -> value : 1
to format a -> shows : 1
to format a -> namespace : 1
to format a -> monetary : 1
format a value -> as : 1
a value as -> a : 2
a value as -> an : 1
a value as -> according : 1
a the string -> is : 2
the string is -> then : 1
the string is -> no : 1
the string is -> divided : 3
the string is -> also : 1
the string is -> interpreted : 2
the string is -> or : 1
the string is -> its : 1
the string is -> and : 1
the string is -> initialized : 2
the string is -> empty : 1
then padded with -> zero : 1
padded with zero -> or : 1
with zero or -> more : 1
or more copies -> of : 4
more copies of -> a : 1
more copies of -> are : 3
copies of a -> character : 1
copies of a -> typename : 2
copies of a -> by : 1
a character to -> achieve : 1
a character to -> function : 2
a character to -> macro : 1
a character to -> so : 1
a character to -> lowercase : 1
a character to -> uppercase : 1
character to achieve -> the : 1
desired the flags -> are : 1
the flags are -> used : 1
flags are used -> to : 1
to determine where -> the : 1
determine where the -> characters : 1
where the characters -> are : 1
the characters are -> added : 1
the characters are -> different : 2
the characters are -> inserted : 1
the characters are -> appended : 1
characters are added -> the : 1
characters are added -> to : 1
are added the -> or : 1
added the or -> with : 1
the or with -> meaning : 1
or with meaning -> after : 1
with meaning after -> a : 1
meaning after a -> sign : 1
after a sign -> or : 1
after a sign -> if : 1
a sign or -> a : 1
sign or a -> leading : 1
or a leading -> or : 1
or a leading -> underscore : 1
a leading or -> padded : 1
a leading or -> means : 2
a leading or -> or : 1
leading or padded -> string : 1
or padded string -> is : 1
padded string is -> written : 1
the output and -> the : 1
the output and -> several : 1
the output and -> is : 2
the is reset -> to : 1
reset to the -> is : 1
to the is -> the : 1
the only formatting -> parameter : 1
only formatting parameter -> that : 1
formatting parameter that -> is : 1
parameter that is -> the : 1
parameter that is -> passed : 1
is the and -> the : 1
is the and -> is : 1
is the and -> members : 1
and the character -> are : 1
and the character -> or : 1
the character are -> and : 1
character are and -> persist : 1
are and persist -> until : 1
and persist until -> they : 1
persist until they -> are : 1
until they are -> changed : 1
they are changed -> an : 1
are changed an -> integer : 1
changed an integer -> depends : 1
an integer depends -> on : 1
integer depends on -> the : 1
on the or -> for : 2
the or for -> a : 1
the or for -> for : 2
the or for -> the : 1
for a for -> positive : 1
a for positive -> and : 1
a for positive -> the : 1
for positive and -> insert : 1
for positive and -> negative : 1
positive and insert -> a : 1
and insert a -> prefix : 1
insert a prefix -> of : 1
a prefix of -> or : 2
a prefix of -> the : 5
prefix of or -> for : 2
of or for -> hexadecimal : 1
of or for -> for : 1
or for hexadecimal -> or : 1
or for hexadecimal -> on : 1
for hexadecimal or -> for : 3
hexadecimal or for -> the : 3
or for the -> defaults : 1
or for the -> quote : 1
or for the -> for : 1
or for the -> if : 1
or for the -> flag : 1
or for the -> function : 4
or for the -> first : 1
or for the -> stream : 1
for the defaults -> are : 1
the defaults are -> no : 2
defaults are no -> positive : 1
defaults are no -> point : 1
are no positive -> and : 1
no positive and -> no : 1
positive and no -> if : 1
and no if -> the : 1
no if the -> facet : 1
if the facet -> specifies : 1
if the facet -> is : 1
facet specifies thousands -> thousands : 1
specifies thousands thousands -> separators : 1
separators are inserted -> at : 1
are inserted at -> the : 4
inserted at the -> specified : 1
inserted at the -> appropriate : 1
inserted at the -> start : 2
at the specified -> a : 1
the specified a -> number : 1
specified a number -> depends : 1
a number depends -> on : 1
number depends on -> the : 1
for for decimal -> point : 1
for decimal point -> even : 1
decimal point even -> if : 1
decimal point even -> when : 1
point even if -> not : 1
even if not -> and : 1
even if not -> solid : 2
if not and -> a : 1
not and a -> for : 1
not and a -> write : 1
and a for -> positive : 1
for positive the -> defaults : 1
positive the defaults -> are : 1
are no point -> unless : 1
no point unless -> and : 1
point unless and -> no : 1
unless and no -> positive : 1
and no positive -> the : 1
no positive the -> flag : 1
positive the flag -> is : 1
flag is values -> are : 1
is values are -> written : 1
values are written -> as : 2
are written as -> names : 1
are written as -> integers : 1
are written as -> needed : 1
written as names -> or : 1
as names or -> or : 1
names or or -> other : 1
or or other -> depending : 1
or other depending -> on : 1
other depending on -> the : 1
on the if -> is : 1
the if is -> not : 1
the if is -> the : 8
the if is -> too : 1
the if is -> and : 1
the if is -> hexadecimal : 1
the if is -> up : 1
the if is -> is : 1
is not values -> are : 1
not values are -> written : 1
written as integers -> the : 1
as integers the -> default : 1
integers the default -> flag : 1
the default flag -> is : 1
default flag is -> clear : 1
is clear writing -> output : 1
clear writing output -> for : 1
writing output for -> a : 1
output for a -> immediate : 1
output for a -> file : 1
for a immediate -> you : 1
a immediate you -> should : 1
immediate you should -> imbue : 1
imbue the output -> stream : 1
the output stream -> with : 1
the output stream -> in : 1
the output stream -> class : 1
the output stream -> after : 1
the output stream -> as : 1
output stream with -> the : 1
locale for output -> that : 1
for output that -> is : 1
output that is -> being : 1
is being written -> to : 1
being written to -> files : 1
written to files -> or : 1
to files or -> other : 1
how numeric output -> is : 1
numeric output is -> or : 1
output is or -> involves : 1
is or involves -> character : 1
or involves character -> or : 1
involves character or -> which : 1
character or which -> are : 1
or which are -> read : 1
which are read -> or : 1
are read or -> written : 2
read or written -> without : 1
read or written -> as : 1
or written without -> or : 1
written without or -> other : 1
without or other -> are : 1
or other are -> not : 1
other are not -> treated : 1
are not treated -> unformatted : 1
are not treated -> specially : 1
not treated unformatted -> read : 1
treated unformatted read -> functions : 1
unformatted read functions -> as : 1
read functions as -> and : 1
functions as and -> can : 2
as and can -> read : 1
as and can -> write : 1
and can read -> into : 1
can read into -> a : 1
read into a -> string : 1
into a string -> or : 1
into a string -> that : 1
a string or -> character : 3
a string or -> modify : 1
a string or -> or : 1
string or character -> the : 1
string or character -> you : 1
string or character -> or : 1
or character the -> function : 1
character the function -> returns : 1
character the function -> is : 1
character the function -> first : 1
returns the number -> of : 15
of characters unformatted -> output : 1
characters unformatted output -> functions : 1
unformatted output functions -> as : 1
output functions as -> and : 1
and can write -> a : 1
write a string -> or : 1
write a string -> of : 1
or character you -> can : 1
specify the exact -> number : 1
the exact number -> of : 2
exact number of -> characters : 2
of characters to -> write : 1
of characters to -> character : 1
of characters to -> the : 3
of characters to -> read : 1
of characters to -> narrow : 1
characters to write -> from : 1
to write from -> a : 1
write from a -> character : 1
from a character -> array : 6
from a character -> more : 1
a character array -> or : 1
a character array -> that : 5
a character array -> to : 9
a character array -> large : 1
a character array -> an : 1
character array or -> write : 1
array or write -> all : 1
or write all -> characters : 1
write all characters -> up : 1
all characters up -> to : 2
characters up to -> a : 1
characters up to -> and : 1
up to a -> null : 1
up to a -> this : 1
a null character -> write : 1
a null character -> and : 1
a null character -> in : 1
a null character -> is : 2
a null character -> by : 1
null character write -> a : 1
character write a -> can : 1
write a can -> also : 1
a can also -> dip : 1
can also dip -> down : 1
also dip down -> the : 1
dip down the -> stream : 1
down the stream -> buffer : 1
stream buffer level -> to : 1
buffer level to -> perform : 1
level to perform -> unformatted : 1
to perform unformatted -> although : 1
perform unformatted although -> this : 1
unformatted although this -> is : 1
although this is -> seldom : 1
this is seldom -> done : 1
is seldom done -> except : 1
seldom done except -> for : 1
done except for -> bulk : 1
except for bulk -> of : 1
for bulk of -> entire : 1
bulk of entire -> see : 1
of entire see -> the : 1
entire see the -> next : 1
for more stream -> classes : 1
more stream classes -> rely : 1
stream classes rely -> on : 1
classes rely on -> buffers : 1
rely on buffers -> for : 1
on buffers for -> the : 1
for the input -> and : 1
for the input -> the : 2
for the input -> array : 1
for the input -> locale : 1
input and most -> programmers : 1
and most programmers -> ignore : 1
most programmers ignore -> the : 1
programmers ignore the -> stream : 1
ignore the stream -> buffer : 1
buffer and deal -> only : 1
and deal only -> with : 1
deal only with -> you : 1
only with you -> might : 1
with you might -> find : 1
might find yourself -> dealing : 1
might find yourself -> on : 1
find yourself dealing -> with : 1
yourself dealing with -> stream : 1
dealing with stream -> buffers : 1
with stream buffers -> from : 1
with stream buffers -> is : 1
stream buffers from -> the : 1
buffers from the -> client : 1
from the client -> using : 1
the client using -> stream : 1
client using stream -> buffers : 1
using stream buffers -> to : 1
stream buffers to -> perform : 1
buffers to perform -> on : 1
to perform on -> entire : 1
perform on entire -> streams : 1
on entire streams -> at : 1
entire streams at -> you : 1
streams at you -> might : 1
at you might -> find : 1
find yourself on -> the : 1
yourself on the -> other : 1
the other implementing -> a : 1
other implementing a -> custom : 1
implementing a custom -> stream : 1
a custom stream -> this : 1
custom stream this -> section : 1
stream this section -> discusses : 1
stream this section -> assumes : 1
section discusses both -> of : 1
discusses both of -> these : 1
both of these -> can : 1
of these can -> copy : 1
these can copy -> a : 1
can copy a -> file : 1
copy a file -> in : 1
a file in -> several : 1
a file in -> append : 1
a file in -> is : 1
file in several -> streams : 1
in several streams -> one : 1
several streams one -> character : 1
at a shows -> how : 1
how a c -> programmer : 1
a c programmer -> might : 1
c programmer might -> copy : 1
programmer might copy -> a : 1
might copy a -> stream : 1
copy a stream -> once : 1
a stream once -> he : 1
stream once he -> has : 1
once he has -> learned : 1
he has learned -> about : 1
has learned about -> streams : 1
learned about streams -> one : 1
about streams one -> character : 1
at a typename -> void : 1
a typename void -> chart : 1
a typename void -> fwditer : 2
typename void chart -> while : 1
void chart while -> measuring : 1
chart while measuring -> the : 1
while measuring the -> performance : 1
measuring the performance -> of : 1
performance of this -> the : 1
this the intrepid -> programmer : 1
the intrepid programmer -> might : 1
intrepid programmer might -> decide : 1
programmer might decide -> that : 1
might decide that -> copying : 1
decide that copying -> larger : 1
that copying larger -> buffers : 1
copying larger buffers -> is : 1
larger buffers is -> the : 1
buffers is the -> right : 1
the right way -> to : 1
right way to -> streams : 1
way to streams -> with : 1
to streams with -> explicit : 1
to streams with -> streambuf : 1
streams with explicit -> shows : 1
streams with explicit -> typename : 1
streams with explicit -> but : 1
with explicit shows -> the : 1
explicit shows the -> new : 1
shows the new -> on : 1
shows the new -> a : 1
the new on -> my : 1
new on my -> the : 1
on my the -> new : 1
my the new -> version : 1
the new version -> runs : 1
the new version -> hews : 1
new version runs -> roughly : 1
version runs roughly -> twice : 1
runs roughly twice -> as : 1
roughly twice as -> fast : 1
twice as fast -> as : 1
as fast as -> the : 2
fast as the -> original : 1
fast as the -> version : 1
the original performance -> measures : 1
original performance measures -> depend : 1
performance measures depend -> highly : 1
measures depend highly -> on : 1
depend highly on -> and : 1
highly on and -> so : 1
on and so -> streams : 1
and so streams -> with : 1
so streams with -> explicit : 1
with explicit typename -> void : 1
explicit typename void -> const : 1
void const unsigned -> while : 1
const unsigned while -> reading : 1
unsigned while reading -> more : 1
while reading more -> about : 1
reading more about -> the : 1
more about the -> standard : 1
standard the programmer -> might : 1
the programmer might -> try : 1
programmer might try -> to : 1
might try to -> improve : 1
try to improve -> performance : 1
to improve performance -> by : 1
improve performance by -> delegating : 1
performance by delegating -> all : 1
by delegating all -> the : 1
delegating all the -> work : 1
all the work -> to : 1
the work to -> the : 1
work to the -> stream : 1
the stream as -> shown : 1
stream as shown -> in : 1
shown in streams -> via : 1
in streams via -> stream : 2
streams via stream -> streams : 1
streams via stream -> typename : 1
streams via stream -> runs : 1
via stream streams -> via : 1
stream streams via -> stream : 1
via stream typename -> void : 1
stream typename void -> out : 1
typename void out -> version : 1
void out version -> in : 1
out version in -> streams : 1
version in streams -> via : 1
version in streams -> with : 1
via stream runs -> about : 1
stream runs about -> as : 1
runs about as -> fast : 1
about as fast -> as : 1
as the version -> in : 1
the version in -> streams : 1
in streams with -> explicit : 1
with explicit but -> is : 1
explicit but is -> much : 1
but is much -> simpler : 1
is much simpler -> to : 1
much simpler to -> read : 1
simpler to read -> and : 1
read and reason -> to : 1
and reason to -> mess : 1
reason to mess -> around : 1
to mess around -> with : 1
mess around with -> stream : 1
around with stream -> buffers : 1
stream buffers is -> that : 1
buffers is that -> you : 1
to write your -> perhaps : 1
to write your -> this : 1
to write your -> own : 6
to write your -> see : 1
write your perhaps -> you : 1
your perhaps you -> are : 1
perhaps you are -> implementing : 1
you are implementing -> a : 1
are implementing a -> network : 1
implementing a network -> the : 1
a network the -> user : 1
network the user -> opens : 1
the user opens -> a : 1
user opens a -> network : 1
opens a network -> stream : 1
a network stream -> that : 1
network stream that -> connects : 1
stream that connects -> to : 1
that connects to -> a : 1
connects to a -> particular : 1
a particular port -> on : 1
particular port on -> a : 1
port on a -> particular : 1
a particular host -> and : 1
particular host and -> then : 1
host and then -> performs : 1
then performs using -> the : 1
performs using the -> normal : 1
the normal to -> implement : 1
normal to implement -> your : 1
to implement your -> you : 1
implement your you -> must : 1
your you must -> derive : 1
you must derive -> your : 1
must derive your -> own : 1
your own stream -> buffer : 1
own stream buffer -> class : 1
stream buffer class -> template : 1
stream buffer class -> manages : 1
stream buffer class -> specializes : 1
buffer class template -> from : 1
class template from -> the : 1
template from the -> class : 1
template in buffer -> is : 1
in buffer is -> characterized : 1
buffer is characterized -> by : 1
is characterized by -> three : 1
characterized by three -> pointers : 1
by three pointers -> that : 1
three pointers that -> point : 1
pointers that point -> to : 1
that point to -> the : 2
that point to -> that : 1
that point to -> dynamically : 1
the actual which -> is : 1
actual which is -> a : 1
is a character -> the : 1
a character the -> pointers : 1
a character the -> function : 1
character the pointers -> point : 1
the pointers point -> to : 1
to the beginning -> of : 5
the beginning of -> the : 12
the beginning of -> a : 1
beginning of the -> the : 3
beginning of the -> stream : 1
beginning of the -> solid : 1
beginning of the -> is : 1
beginning of the -> because : 2
beginning of the -> sequence : 2
beginning of the -> a : 1
beginning of the -> to : 1
the the current -> position : 1
the the current -> or : 1
the current position -> the : 1
the current position -> or : 1
the current position -> in : 2
current position the -> next : 1
position the next -> character : 1
next character to -> read : 5
character to read -> or : 2
character to read -> would : 1
character to read -> from : 1
character to read -> is : 1
to read or -> the : 2
to read or -> write : 3
to read or -> it : 1
read or the -> next : 1
read or the -> actual : 1
read or the -> macro : 1
read or the -> position : 1
read or the -> result : 1
or the next -> position : 1
or the next -> character : 1
the next position -> for : 1
next position for -> and : 1
position for and -> the : 1
and the end -> of : 1
and the end -> result : 1
the the stream -> buffer : 2
the the stream -> does : 2
buffer class manages -> the : 1
class manages the -> array : 1
manages the array -> and : 1
the array and -> the : 1
the array and -> compares : 1
the array and -> to : 1
array and the -> when : 1
array and the -> output : 1
array and the -> stream : 1
and the when -> the : 1
the when the -> array : 1
the when the -> default : 1
when the array -> empties : 1
when the array -> fills : 1
the array empties -> upon : 1
array empties upon -> the : 1
empties upon the -> stream : 1
upon the stream -> buffer : 2
stream buffer must -> obtain : 1
stream buffer must -> write : 1
buffer must obtain -> additional : 1
must obtain additional -> input : 1
obtain additional input -> from : 1
additional input from -> the : 1
input from the -> network : 1
from the network -> when : 1
the network when -> the : 1
network when the -> array : 1
the array fills -> upon : 1
array fills upon -> the : 1
fills upon the -> stream : 1
buffer must write -> the : 1
must write the -> data : 1
write the data -> to : 1
the data to -> the : 1
the data to -> be : 2
data to the -> network : 1
to the network -> other : 1
to the network -> typename : 1
the network other -> functions : 1
network other functions -> include : 1
other functions include -> putting : 1
functions include putting -> back : 1
include putting back -> a : 1
putting back a -> character : 1
back a character -> after : 1
a character after -> reading : 1
character after reading -> and : 1
after reading and -> so : 1
reading and so -> in : 1
so in for -> details : 1
in for details -> about : 3
details about each -> member : 1
about each member -> class : 1
each member class -> shows : 1
member class shows -> an : 1
shows an extremely -> oversimplified : 1
an extremely oversimplified -> sketch : 1
extremely oversimplified sketch -> of : 1
oversimplified sketch of -> how : 1
sketch of how -> the : 1
of how the -> class : 1
how the class -> template : 1
class template might -> class : 1
template might class -> typename : 1
might class typename -> traits : 1
class typename traits -> class : 1
typename traits class -> public : 3
typename traits class -> virtual : 1
traits class public -> typedef : 6
traits class public -> public : 1
class public typedef -> chart : 20
class public typedef -> container : 2
class public typedef -> explicit : 2
class public typedef -> typedef : 3
public typedef chart -> typedef : 23
public typedef chart -> explicit : 1
typedef chart typedef -> traits : 5
typedef chart typedef -> typename : 11
typedef chart typedef -> explicit : 5
typedef chart typedef -> inputiterator : 3
typedef chart typedef -> outputiterator : 4
chart typedef traits -> typedef : 5
typedef traits typedef -> typename : 3
typedef traits typedef -> const : 2
typedef traits typedef -> typedef : 1
traits typedef typename -> typedef : 3
typedef typename virtual -> bool : 1
typename virtual bool -> int : 1
virtual bool int -> virtual : 1
bool int virtual -> virtual : 1
int virtual virtual -> virtual : 2
virtual virtual virtual -> c : 2
virtual virtual virtual -> virtual : 6
virtual virtual virtual -> int : 2
virtual virtual virtual -> unsigned : 1
virtual virtual virtual -> long : 1
virtual virtual virtual -> string : 1
virtual virtual virtual -> class : 1
virtual virtual virtual -> streamsize : 1
virtual virtual c -> virtual : 3
virtual c virtual -> virtual : 3
virtual c virtual -> c : 3
virtual c virtual -> streamsize : 2
c virtual virtual -> virtual : 1
c virtual virtual -> which : 2
virtual virtual int -> bool : 1
virtual virtual int -> const : 1
virtual virtual int -> virtual : 1
virtual int bool -> true : 1
int bool true -> means : 1
bool true means -> destructor : 1
true means destructor -> must : 1
means destructor must -> delete : 1
destructor must delete -> network : 1
must delete network -> connectivity : 1
delete network connectivity -> construct : 1
network connectivity construct -> initializes : 1
connectivity construct initializes -> the : 1
construct initializes the -> buffer : 1
initializes the buffer -> typename : 1
the buffer typename -> leave : 1
buffer typename leave -> room : 1
typename leave room -> in : 1
leave room in -> the : 1
room in the -> output : 1
in the output -> buffer : 3
in the output -> array : 1
the output buffer -> for : 1
the output buffer -> always : 1
the output buffer -> is : 2
the output buffer -> after : 2
the output buffer -> copying : 1
the output buffer -> when : 1
the output buffer -> by : 2
output buffer for -> one : 1
buffer for one -> last : 1
for one last -> return : 2
one last return -> the : 1
one last return -> force : 1
last return the -> number : 1
of characters available -> in : 1
of characters available -> for : 1
characters available in -> the : 1
available in the -> input : 1
available in the -> current : 1
available in the -> standard : 1
the input typename -> return : 1
input typename return -> fill : 1
typename return fill -> the : 1
return fill the -> input : 1
fill the input -> buffer : 1
the input buffer -> and : 2
the input buffer -> in : 1
the input buffer -> is : 3
input buffer and -> set : 1
input buffer and -> discards : 1
input buffer and -> an : 1
buffer and set -> up : 1
and set up -> the : 1
set up the -> typename : 1
up the typename -> typename : 1
the typename typename -> get : 1
the typename typename -> outiter : 1
typename typename get -> up : 1
typename get up -> to : 1
get up to -> characters : 1
up to characters -> from : 4
up to characters -> and : 2
up to characters -> into : 2
up to characters -> are : 3
up to characters -> smaller : 3
to characters from -> the : 3
to characters from -> to : 1
from the storing -> them : 1
the storing them -> in : 1
storing them in -> store : 1
them in store -> the : 1
in store the -> actual : 1
store the actual -> number : 1
the actual number -> of : 3
actual number of -> characters : 1
actual number of -> bytes : 2
characters read in -> the : 1
read in the -> local : 1
the local count -> if : 1
local count if -> return : 1
count if return -> else : 1
else return the -> output : 1
return the output -> buffer : 1
return the output -> the : 1
output buffer always -> has : 1
buffer always has -> room : 1
always has room -> for : 1
has room for -> one : 2
has room for -> at : 1
has room for -> so : 1
room for one -> more : 1
room for one -> last : 1
for one more -> so : 1
one more so -> if : 1
more so if -> c : 1
so if c -> is : 1
if c is -> not : 1
c is not -> add : 1
is not add -> it : 1
not add it -> to : 1
add it to -> the : 1
the output then -> write : 1
output then write -> the : 1
then write the -> buffer : 1
write the buffer -> to : 1
the buffer to -> the : 3
the buffer to -> use : 1
buffer to the -> network : 1
buffer to the -> constructor : 12
the network typename -> typename : 1
network typename typename -> if : 1
typename if the -> output : 1
if the output -> buffer : 1
if the output -> range : 1
if the output -> fails : 1
output buffer is -> now : 1
output buffer is -> flushed : 1
buffer is now -> make : 1
is now make -> sure : 1
now make sure -> it : 1
it has room -> for : 1
last return force -> a : 1
return force a -> buffer : 1
force a buffer -> typename : 1
a buffer typename -> int : 1
buffer typename int -> return : 1
typename int return -> is : 1
return is a -> function : 1
object that can -> be : 2
object that can -> call : 2
as an operand -> to : 1
as an operand -> and : 3
an operand to -> an : 1
an operand to -> the : 1
operand to an -> input : 1
to an input -> or : 1
an input or -> output : 1
input or output -> operator : 1
input or output -> operators : 1
input or output -> stream : 1
or output operator -> to : 1
output operator to -> manipulate : 1
operator to manipulate -> the : 1
to manipulate the -> manipulators : 1
to manipulate the -> the : 1
manipulate the manipulators -> can : 1
the manipulators can -> send : 1
manipulators can send -> additional : 1
can send additional -> output : 1
send additional output -> to : 1
additional output to -> a : 1
output to a -> read : 1
output to a -> character : 1
to a read -> input : 1
a read input -> from : 1
read input from -> a : 1
input from a -> set : 1
input from a -> even : 1
from a set -> and : 1
a set and -> for : 1
a set and -> searching : 2
set and for -> to : 1
for to output -> a : 1
to output a -> hexadecimal : 1
output a hexadecimal -> you : 1
a hexadecimal you -> can : 1
hexadecimal you can -> use : 1
use an member -> functions : 1
an member functions -> or : 1
functions or whichever -> you : 1
or whichever you -> an : 1
whichever you an -> output : 1
you an output -> stream : 1
an output stream -> to : 10
an output stream -> of : 1
output stream to -> format : 2
output stream to -> which : 1
output stream to -> write : 5
output stream to -> always : 1
output stream to -> use : 2
stream to format -> a : 2
format a shows -> both : 1
a shows both -> an : 1
shows both an -> output : 1
both an output -> stream : 1
both an output -> bit : 1
format a namespace -> output : 1
a namespace output -> a : 1
namespace output a -> value : 1
output a value -> using : 1
a value using -> member : 1
a value using -> linear : 1
value using member -> cout : 1
using member cout -> output : 1
member cout output -> the : 1
cout output the -> same : 1
output the same -> value : 1
same value using -> cout : 1
value using cout -> hex : 1
using cout hex -> internal : 1
cout hex internal -> standard : 1
hex internal standard -> library : 1
internal standard library -> defines : 1
library defines several -> for : 1
defines several for -> setting : 1
several for setting -> formatting : 1
for setting formatting -> setting : 1
setting formatting setting -> other : 1
formatting setting other -> formatting : 1
setting other formatting -> skipping : 1
other formatting skipping -> flushing : 1
formatting skipping flushing -> and : 1
skipping flushing and -> the : 1
flushing and the -> following : 1
the standard grouped -> by : 1
standard grouped by -> the : 1
grouped by the -> manipulators : 1
by the manipulators -> that : 1
the manipulators that -> set : 1
manipulators that set -> the : 1
that set the -> formatting : 1
set the formatting -> and : 1
the formatting and -> the : 3
the formatting and -> so : 1
formatting and the -> input : 1
formatting and the -> remaining : 2
formatting and the -> imbued : 1
formatting and the -> and : 1
and the input -> the : 1
and the input -> pointers : 2
and the input -> buffer : 1
the input the -> output : 3
the input the -> integral : 1
the input the -> current : 1
the input the -> pointer : 2
the input the -> return : 1
the input the -> read : 1
input the output -> and : 3
output and several -> additional : 1
and several additional -> and : 1
several additional and -> manipulators : 1
additional and manipulators -> are : 1
and manipulators are -> declared : 1
manipulators are declared -> in : 1
the same header -> as : 1
the same header -> is : 1
same header as -> the : 1
header as the -> stream : 1
the stream type -> they : 1
stream type they -> the : 1
type they the -> only : 1
they the only -> time : 1
only time you -> need : 1
time you need -> to : 1
need to an -> additional : 1
to an additional -> header : 1
an additional header -> is : 1
additional header is -> when : 1
header is when -> you : 1
is when you -> use : 1
use a manipulator -> that : 1
a manipulator that -> takes : 3
a manipulator that -> sets : 13
a manipulator that -> selects : 2
a manipulator that -> clears : 7
a manipulator that -> uses : 2
a manipulator that -> writes : 2
a manipulator that -> calls : 1
manipulator that takes -> an : 3
takes an these -> manipulators : 1
an these manipulators -> are : 1
these manipulators are -> in : 1
manipulators are in -> the : 1
in the write -> your : 1
the write your -> own : 1
your own use -> the : 1
own use the -> standard : 1
the standard manipulators -> as : 1
standard manipulators as -> the : 1
manipulators as the -> easiest : 1
as the easiest -> to : 1
the easiest to -> use : 1
easiest to use -> are : 1
to use are -> manipulators : 1
use are manipulators -> that : 1
are manipulators that -> take : 1
manipulators that take -> no : 1
that take no -> a : 1
take no a -> manipulator : 1
no a manipulator -> is : 1
a manipulator is -> simply : 1
manipulator is simply -> a : 1
is simply a -> function : 1
simply a function -> that : 1
takes a stream -> as : 1
a stream as -> an : 1
a stream as -> a : 1
stream as an -> argument : 1
an argument and -> returns : 4
an argument and -> is : 2
argument and returns -> the : 1
argument and returns -> a : 3
returns the same -> the : 1
returns the same -> value : 1
same the standard -> streams : 1
the standard streams -> overload : 1
the standard streams -> use : 1
the standard streams -> or : 1
standard streams overload -> and : 1
streams overload and -> to : 1
overload and to -> take : 1
to take a -> pointer : 1
to take a -> look : 1
to take a -> generalized : 1
to take a -> slice : 1
take a pointer -> to : 1
take a pointer -> or : 1
pointer to such -> a : 1
to such a -> function : 1
to such a -> the : 1
function as an -> you : 1
function as an -> argument : 2
as an you -> want : 1
as an you -> can : 1
an you want -> to : 2
to write an -> input : 1
to write an -> algorithm : 1
to write an -> class : 2
write an input -> manipulator : 1
an input manipulator -> that : 1
input manipulator that -> skips : 1
manipulator that skips -> all : 1
manipulator that skips -> whitespace : 1
that skips all -> characters : 1
skips all characters -> up : 1
up to and -> including : 1
to and including -> a : 2
and including a -> this : 1
and including a -> into : 1
including a this -> manipulator : 1
a this manipulator -> is : 2
this manipulator is -> used : 1
this manipulator is -> defined : 1
manipulator is used -> by : 1
is used by -> a : 1
is used by -> functions : 1
is used by -> some : 1
is used by -> specifiers : 1
by a command -> processor : 1
a command processor -> after : 1
a command processor -> is : 1
command processor after -> reading : 1
processor after reading -> a : 1
after reading a -> comment : 1
reading a comment -> a : 1
a comment a -> line : 1
comment a line -> in : 1
a line in -> an : 2
line in an -> input : 2
in an input -> shows : 1
in an input -> typename : 1
in an input -> conditional : 1
in an input -> range : 1
in an input -> whitespace : 1
in an input -> ctype : 1
an input shows -> one : 1
input shows one -> way : 1
way to write -> the : 1
way to write -> your : 1
write the a -> line : 1
the a line -> in : 1
an input typename -> chart : 1
input typename chart -> while : 1
typename chart while -> c : 1
chart while c -> return : 1
while c return -> int : 1
c return int -> x : 1
return int x -> skipline : 1
return int x -> and : 1
int x skipline -> that : 1
x skipline that -> take : 1
skipline that take -> arguments : 1
that take arguments -> are : 1
take arguments are -> harder : 1
arguments are harder -> to : 1
are harder to -> but : 1
harder to but -> only : 1
harder to but -> also : 1
to but only -> you : 1
but only you -> need : 1
only you need -> to : 1
to write some -> supporting : 1
write some supporting -> such : 1
some supporting such -> as : 1
supporting such as -> additional : 1
such as additional -> overloaded : 1
as additional overloaded -> or : 1
additional overloaded or -> suppose : 1
overloaded or suppose -> you : 1
or suppose you -> want : 1
want to parameterize -> your : 1
to parameterize your -> input : 1
parameterize your input -> manipulator : 1
your input manipulator -> so : 1
input manipulator so -> it : 1
manipulator so it -> skips : 1
so it skips -> everything : 1
it skips everything -> up : 1
skips everything up -> to : 1
everything up to -> a : 1
to a this -> manipulator : 1
manipulator is defined -> as : 1
is defined as -> a : 1
is defined as -> solution : 1
is defined as -> in : 2
defined as a -> class : 1
which the constructor -> takes : 1
the constructor takes -> the : 1
constructor takes the -> that : 1
takes the that -> the : 1
the that the -> delimiter : 1
the that the -> type : 1
the that the -> item : 1
the that the -> next : 1
that the delimiter -> you : 1
the delimiter you -> must : 1
delimiter you must -> overload : 1
must overload so -> it : 1
overload so it -> recognizes : 1
so it recognizes -> your : 1
it recognizes your -> manipulator : 1
recognizes your manipulator -> as : 1
your manipulator as -> an : 1
manipulator as an -> operand : 1
an operand and -> invokes : 1
an operand and -> returns : 1
an operand and -> yields : 1
operand and invokes -> the : 1
and invokes the -> you : 1
invokes the you -> need : 1
the you need -> to : 1
the you need -> a : 1
use but this -> is : 1
but this is -> a : 1
a good choice -> when : 1
good choice when -> building : 1
choice when building -> a : 1
when building a -> reusable : 1
building a reusable -> infrastructure : 1
a reusable infrastructure -> for : 1
reusable infrastructure for -> a : 1
infrastructure for a -> manipulator : 1
for a manipulator -> that : 1
takes an shows -> the : 1
an shows the -> new : 1
the new a -> manipulator : 1
the new a -> reference : 1
the new a -> new : 3
new a manipulator -> that : 1
takes an class -> skipper : 1
an class skipper -> typedef : 1
class skipper typedef -> chart : 1
skipper typedef chart -> void : 1
typedef chart void -> skip : 1
chart void skip -> the : 1
void skip the -> rest : 1
deduces the traits -> type : 1
the traits type -> from : 1
traits type from -> the : 1
type from the -> stream : 1
the stream void -> const : 1
stream void const -> while : 1
void const while -> c : 1
const while c -> invoke : 1
while c invoke -> the : 1
c invoke the -> skipper : 1
invoke the skipper -> typename : 1
the skipper typename -> const : 1
skipper typename const -> return : 1
const return let -> the : 1
return let the -> compiler : 1
deduce the character -> return : 1
the character return -> int : 1
character return int -> x : 1
x and and -> streams : 1
and and streams -> do : 1
and streams do -> not : 1
streams do not -> raise : 1
do not raise -> exceptions : 1
not raise exceptions -> for : 1
raise exceptions for -> each : 1
exceptions for each -> stream : 1
for each stream -> keeps : 1
each stream keeps -> a : 1
stream keeps a -> mask : 1
keeps a mask -> of : 1
a mask of -> error : 1
mask of error -> bits : 1
of error bits -> called : 1
error bits called -> the : 1
bits called the -> the : 1
the the state -> mask : 1
the state mask -> keeps : 1
the state mask -> if : 1
state mask keeps -> track : 1
mask keeps track -> of : 1
track of formatting -> and : 1
track of formatting -> for : 1
of formatting and -> miscellaneous : 1
of formatting and -> stream : 1
formatting and miscellaneous -> error : 1
and miscellaneous error -> the : 1
miscellaneous error the -> class : 1
error the class -> template : 1
template defines several -> member : 1
defines several member -> functions : 1
several member functions -> for : 2
functions for testing -> and : 2
for testing and -> modifying : 1
for testing and -> mapping : 1
for testing and -> transforming : 1
testing and modifying -> the : 1
and modifying the -> state : 1
and modifying the -> you : 1
modifying the state -> flags : 1
the state flags -> common : 1
state flags common -> idiom : 1
flags common idiom -> is : 1
is to read -> from : 1
is to read -> the : 1
to read from -> an : 1
to read from -> the : 5
to read from -> a : 1
read from an -> input : 1
an input stream -> until : 1
an input stream -> to : 3
an input stream -> into : 2
an input stream -> using : 2
an input stream -> manipulator : 1
an input stream -> instance : 1
input stream until -> an : 1
stream until an -> input : 1
until an input -> operation : 1
an input operation -> because : 1
an input operation -> or : 1
an input operation -> throws : 1
input operation because -> this : 1
operation because this -> idiom : 1
because this idiom -> is : 1
this idiom is -> so : 1
so the standard -> library : 1
standard library makes -> it : 1
library makes it -> instead : 1
makes it instead -> of : 1
it instead of -> calling : 1
instead of calling -> and : 1
instead of calling -> call : 1
instead of calling -> function : 1
of calling and -> testing : 1
calling and testing -> the : 1
and testing the -> state : 1
testing the state -> you : 1
the state you -> can : 1
state you can -> simply : 1
you can simply -> treat : 1
can simply treat -> the : 1
simply treat the -> stream : 1
treat the stream -> object : 1
the stream object -> as : 1
the stream object -> is : 1
stream object as -> a : 1
as a boolean -> means : 1
a boolean means -> the : 1
boolean means the -> state : 1
means the state -> is : 1
means the state -> has : 1
the state is -> and : 1
the state is -> good : 1
the state is -> also : 1
the state is -> it : 1
state is and -> means : 1
is and means -> the : 1
and means the -> state : 1
the state has -> an : 1
state has an -> error : 1
has an error -> most : 1
has an error -> condition : 1
an error most -> functions : 1
error most functions -> return : 1
most functions return -> the : 1
functions return the -> stream : 1
return the stream -> which : 1
return the stream -> the : 1
the stream which -> makes : 1
stream which makes -> the : 1
which makes the -> test : 1
which makes the -> stream : 1
makes the test -> even : 1
the test even -> class : 1
test even class -> overloads : 1
even class overloads -> to : 1
class overloads to -> return : 1
overloads to return -> a : 1
overloads to return -> for : 1
if the state -> is : 2
state is good -> or : 1
is good or -> a : 1
good or a -> null : 1
null pointer for -> any : 1
null pointer for -> an : 1
null pointer for -> the : 2
null pointer for -> or : 1
pointer for any -> error : 1
for any error -> it : 1
for any error -> explained : 1
any error it -> overloads : 1
error it overloads -> to : 1
it overloads to -> return : 1
to return for -> any : 1
return for any -> error : 1
any error explained -> later : 1
error explained later -> in : 1
explained later in -> this : 1
this an is -> not : 1
an is not -> an : 1
not an error -> this : 1
an error this -> latter : 1
error this latter -> test : 1
this latter test -> is : 1
latter test is -> often : 1
test is often -> used : 1
often used in -> conditional : 1
often used in -> this : 1
often used in -> a : 2
used in conditional -> mask : 1
in conditional mask -> has : 1
conditional mask has -> three : 1
mask has three -> different : 1
has three different -> error : 1
three different error -> unrecoverable : 1
different error unrecoverable -> error : 1
error unrecoverable error -> for : 1
unrecoverable error for -> an : 1
error for an -> exception : 1
for an exception -> was : 1
an exception was -> thrown : 1
exception was thrown -> from : 1
was thrown from -> a : 1
thrown from a -> formatting : 1
from a formatting -> an : 1
a formatting an -> system : 1
formatting an system -> call : 1
an system call -> failed : 1
system call failed -> and : 1
call failed and -> so : 1
failed and so -> upon : 1
and so upon -> operation : 1
so upon operation -> failed : 1
upon operation failed -> to : 1
operation failed to -> produce : 1
failed to produce -> any : 1
to produce any -> input : 1
produce any input -> or : 1
any input or -> for : 1
input or for -> when : 1
or for when -> reading : 1
for when reading -> an : 1
when reading an -> if : 1
reading an if -> the : 1
if the next -> input : 1
if the next -> permutation : 1
the next input -> character : 3
next input character -> is : 1
next input character -> and : 1
next input character -> one : 1
input character is -> a : 1
input character is -> not : 1
is a no -> characters : 1
a no characters -> can : 1
no characters can -> be : 1
characters can be -> read : 2
can be read -> from : 1
can be read -> before : 1
be read from -> the : 1
read from the -> which : 1
read from the -> input : 8
read from the -> parameter : 1
read from the -> and : 1
read from the -> external : 1
read from the -> if : 2
read from the -> buffer : 2
read from the -> is : 3
read from the -> stream : 2
read from the -> limit : 1
read from the -> string : 2
read from the -> start : 2
read from the -> you : 1
from the which -> results : 1
the which results -> in : 1
an input conditional -> operators : 1
input conditional operators -> define : 1
conditional operators define -> as : 1
operators define as -> when : 1
define as when -> or : 1
as when or -> is : 1
when or is -> but : 1
or is but -> not : 1
but not when -> is : 1
not when is -> to : 1
when is to -> understand : 1
is to understand -> consider : 1
to understand consider -> the : 1
understand consider the -> following : 1
consider the following -> canonical : 1
the following canonical -> input : 1
following canonical input -> during : 1
canonical input during -> a : 1
input during a -> normal : 1
during a normal -> program : 1
a normal program -> the : 1
normal program the -> input : 1
program the input -> state : 1
the input state -> is : 1
input state is -> initially : 1
state is initially -> after : 1
is initially after -> reading : 1
initially after reading -> the : 1
after reading the -> last : 2
after reading the -> a : 1
reading the last -> item : 2
last item from -> the : 3
item from the -> input : 2
item from the -> these : 1
item from the -> an : 1
item from the -> stream : 1
item from the -> the : 2
item from the -> priority : 1
item from the -> at : 1
from the input -> is : 2
from the input -> no : 2
from the input -> if : 4
from the input -> stream : 2
from the input -> buffer : 1
from the input -> the : 2
from the input -> so : 1
from the input -> and : 1
from the input -> array : 1
from the input -> range : 1
input is set -> in : 2
is set in -> the : 8
is set in -> both : 2
is set in -> either : 1
is set in -> an : 1
is set in -> or : 3
is set in -> and : 2
is set in -> input : 1
is set in -> a : 1
is set in -> class : 1
set in the -> at : 2
set in the -> the : 4
set in the -> mask : 1
set in the -> formatting : 1
set in the -> buffer : 2
in the at -> this : 2
the at this -> the : 1
the at this -> is : 1
at this the -> state : 1
this the state -> does : 1
the state does -> not : 1
state does not -> indicate : 1
does not indicate -> so : 1
not indicate so -> the : 1
indicate so the -> program : 1
so the program -> continues : 1
so the program -> the : 1
the program continues -> by : 1
program continues by -> processing : 1
continues by processing -> the : 1
by processing the -> last : 1
processing the last -> input : 1
the last input -> the : 1
the last input -> if : 1
last input the -> next : 1
input the next -> time : 1
the next time -> it : 1
the next time -> the : 1
next time it -> tries : 1
time it tries -> to : 1
tries to read -> from : 2
the input no -> characters : 2
input no characters -> are : 2
no characters are -> read : 4
no characters are -> which : 1
no characters are -> copied : 2
no characters are -> stored : 1
no characters are -> extracted : 1
no characters are -> no : 1
no characters are -> characters : 1
no characters are -> is : 1
are read is -> which : 1
read is which -> causes : 1
is which causes -> the : 1
which causes the -> input : 2
which causes the -> stream : 1
causes the input -> to : 2
the input to -> so : 1
the input to -> and : 1
the input to -> the : 2
input to so -> the : 1
to so the -> stream : 1
to so the -> size : 1
to so the -> proper : 1
to so the -> facet : 1
so the stream -> sets : 1
so the stream -> throws : 1
so the stream -> is : 1
the stream sets -> now : 2
the stream sets -> in : 1
the stream sets -> performing : 2
the stream sets -> if : 2
the stream sets -> and : 1
stream sets now -> a : 1
stream sets now -> returns : 1
sets now a -> test : 1
now a test -> of : 1
a test of -> the : 1
test of the -> input : 1
of the input -> stream : 1
of the input -> merge : 1
of the input -> first : 1
of the input -> writing : 1
of the input -> is : 1
of the input -> sequence : 1
of the input -> the : 1
input stream returns -> indicating : 1
stream returns indicating -> which : 1
returns indicating which -> exits : 1
indicating which exits -> the : 1
which exits the -> input : 1
exits the input -> instead : 1
the input instead -> of : 1
input instead of -> testing : 1
instead of testing -> for : 1
of testing for -> failure : 1
testing for failure -> after : 1
for failure after -> each : 1
failure after each -> you : 1
after each you -> may : 1
each you may -> want : 1
want to simplify -> your : 1
to simplify your -> you : 1
simplify your you -> can : 1
you can assume -> that : 1
can assume that -> every : 1
assume that every -> operation : 1
that every operation -> succeeds : 1
every operation succeeds -> and : 1
operation succeeds and -> arrange : 1
succeeds and arrange -> for : 1
and arrange for -> the : 1
arrange for the -> stream : 1
stream to throw -> an : 1
an exception for -> any : 2
exception for any -> in : 1
exception for any -> when : 1
for any in -> addition : 1
any in addition -> to : 1
to the state -> every : 1
the state every -> stream : 1
state every stream -> has : 1
every stream has -> an : 1
every stream has -> a : 1
stream has an -> exception : 1
an exception in -> which : 1
exception in which -> the : 1
which the bits -> in : 1
the bits in -> the : 3
the exception mask -> correspond : 1
the exception mask -> to : 1
exception mask correspond -> to : 1
mask correspond to -> the : 1
correspond to the -> bits : 1
to the bits -> in : 1
in the state -> when : 1
in the state -> the : 1
in the state -> it : 1
the state when -> the : 1
state when the -> state : 1
when the state -> mask : 1
state mask if -> any : 1
mask if any -> bit : 1
if any bit -> is : 3
if any bit -> in : 1
any bit is -> set : 1
any bit is -> returns : 1
any bit is -> all : 1
bit is set -> in : 7
bit is set -> only : 1
bit is set -> when : 2
set in both -> the : 1
set in both -> an : 1
both the stream -> throws : 1
the stream throws -> an : 1
the stream throws -> stream : 1
stream throws an -> suppose : 1
throws an suppose -> you : 1
an suppose you -> set : 1
suppose you set -> the : 1
you set the -> exception : 1
set the exception -> mask : 1
exception mask to -> using : 1
mask to using -> the : 1
using the canonical -> input : 1
the canonical input -> after : 1
canonical input after -> reading : 1
input after reading -> the : 1
at this is -> still : 1
this is still -> so : 1
is still so -> the : 1
still so the -> program : 1
program the next -> time : 1
next time the -> program : 1
time the program -> tries : 1
the program tries -> to : 1
program tries to -> read : 1
characters are which -> causes : 1
are which causes -> the : 1
input to and -> the : 1
to and the -> stream : 1
to and the -> second : 1
to and the -> final : 1
to and the -> filename : 1
to and the -> member : 1
to and the -> result : 1
to and the -> parameter : 2
to and the -> call : 1
sets now returns -> a : 1
now returns a -> nonzero : 1
returns a nonzero -> so : 1
returns a nonzero -> value : 2
a nonzero so -> the : 1
nonzero so the -> stream : 1
stream throws stream -> often : 1
throws stream often -> relies : 1
stream often relies -> on : 1
often relies on -> other : 1
relies on other -> objects : 1
on other objects -> locale : 1
other objects locale -> to : 1
objects locale to -> parse : 1
locale to parse -> input : 1
to parse input -> or : 1
parse input or -> format : 1
or format if -> one : 1
format if one -> of : 1
if one of -> these : 1
one of these -> other : 1
one of these -> events : 1
of these other -> objects : 1
these other objects -> throws : 1
other objects throws -> an : 1
objects throws an -> the : 1
throws an the -> stream : 5
throws an the -> list : 1
an the stream -> catches : 1
an the stream -> sets : 4
the stream catches -> the : 1
stream catches the -> exception : 1
catches the exception -> and : 1
exception and sets -> if : 1
and sets if -> is : 1
sets if is -> set : 3
if is set -> in : 6
if is set -> or : 1
the original exception -> is : 1
original exception is -> for : 1
exception is for -> be : 1
is for be -> sure : 1
for be sure -> to : 1
sure to test -> for : 1
to test for -> as : 1
to test for -> a : 1
test for as -> a : 1
for as a -> special : 1
as a special -> indicator : 1
a special indicator -> of : 1
special indicator of -> a : 1
indicator of a -> serious : 1
of a serious -> a : 1
a serious a -> simple : 1
serious a simple -> test : 1
a simple test -> for : 1
simple test for -> does : 1
test for does -> not : 1
does not distinguish -> between : 1
not distinguish between -> different : 1
distinguish between different -> reasons : 1
between different reasons -> for : 1
different reasons for -> might : 1
reasons for might -> signal : 1
for might signal -> a : 1
might signal a -> normal : 1
signal a normal -> but : 1
a normal but -> might : 1
normal but might -> tell : 1
but might tell -> you : 1
might tell you -> that : 1
tell you that -> there : 1
you that there -> is : 1
that there is -> something : 1
that there is -> no : 2
that there is -> a : 2
there is something -> seriously : 1
is something seriously -> wrong : 1
something seriously wrong -> with : 1
seriously wrong with -> the : 1
wrong with the -> input : 1
with the input -> stream : 1
input stream a -> disk : 1
stream a disk -> one : 1
a disk one -> is : 1
disk one is -> to : 1
one is to -> set : 1
is to set -> in : 1
is to set -> a : 1
to set in -> the : 1
to set in -> that : 1
in the mask -> so : 1
the mask so -> normal : 1
mask so normal -> control : 1
so normal control -> flow : 1
normal control flow -> deals : 1
control flow deals -> with : 1
flow deals with -> the : 1
deals with the -> normal : 1
with the normal -> situation : 1
the normal situation -> of : 1
normal situation of -> reading : 1
situation of reading -> an : 1
of reading an -> more : 1
reading an more -> serious : 1
an more serious -> errors : 1
more serious errors -> result : 1
serious errors result -> in : 1
errors result in -> as : 1
errors result in -> undefined : 2
result in as -> shown : 1
in as shown -> in : 1
shown in serious -> serious : 1
in serious serious -> void : 1
serious serious void -> int : 1
serious void int -> using : 1
void int using -> namespace : 1
using namespace try -> string : 1
namespace try string -> while : 1
try string while -> return : 1
string while return -> return : 1
while return return -> return : 1
return return and -> and : 1
return and and -> called : 1
and and called -> are : 1
and called are -> a : 1
called are a -> staple : 1
are a staple -> of : 1
a staple of -> computer : 1
staple of computer -> every : 1
of computer every -> major : 1
computer every major -> programming : 1
every major programming -> language : 2
major programming language -> has : 2
programming language has -> fundamental : 1
programming language has -> a : 1
language has fundamental -> such : 1
has fundamental such -> as : 1
fundamental such as -> arrays : 1
such as arrays -> or : 1
as arrays or -> modern : 1
arrays or modern -> programming : 1
or modern programming -> languages : 1
modern programming languages -> usually : 1
programming languages usually -> have : 1
languages usually have -> an : 1
usually have an -> assortment : 1
have an assortment -> of : 1
an assortment of -> more : 1
assortment of more -> powerful : 1
of more powerful -> such : 1
more powerful such -> as : 1
powerful such as -> for : 1
for more specialized -> library : 1
more specialized library -> has : 1
specialized library has -> a : 1
has a basic -> suite : 1
a basic suite -> of : 1
basic suite of -> containers : 1
suite of containers -> and : 1
of containers and -> but : 1
containers and but -> more : 1
and but more -> it : 1
but more it -> has : 1
more it has -> which : 1
it has which -> are : 1
has which are -> function : 1
which are function -> templates : 1
are function templates -> that : 1
function templates that -> implement : 1
function templates that -> operate : 4
templates that implement -> common : 1
that implement common -> such : 1
implement common such -> as : 1
common such as -> searching : 1
such as searching -> and : 1
as searching and -> the : 1
searching and the -> algorithms : 1
and the algorithms -> operate : 1
and the algorithms -> that : 1
the algorithms operate -> on : 1
algorithms operate on -> which : 1
operate on which -> are : 1
on which are -> an : 1
which are an -> abstraction : 1
which are an -> implementation : 1
are an abstraction -> of : 1
an abstraction of -> pointers : 1
an abstraction of -> a : 2
abstraction of pointers -> that : 1
of pointers that -> apply : 1
pointers that apply -> to : 1
that apply to -> any : 1
that apply to -> the : 1
that apply to -> valid : 1
that apply to -> and : 1
apply to any -> container : 1
to any container -> or : 1
any container or -> other : 1
container or other -> chapter : 1
container or other -> such : 1
container or other -> most : 1
or other chapter -> presents : 1
other chapter presents -> an : 1
standard the iterators -> used : 1
the iterators used -> to : 1
iterators used to -> examine : 1
used to examine -> the : 1
to examine the -> and : 1
examine the and -> the : 1
the algorithms that -> can : 1
algorithms that can -> be : 1
the it covers -> how : 1
it covers how -> to : 1
covers how to -> use : 1
how to use -> the : 2
how to use -> iterators : 2
how to use -> iterator : 1
how to use -> callbacks : 1
how to use -> to : 4
standard and as -> well : 1
and as well -> as : 1
as well as -> how : 1
as well as -> other : 1
well as how -> to : 1
as how to -> write : 1
how to write -> your : 1
write your this -> the : 1
your this the -> mathematical : 1
this the mathematical -> notation : 1
the mathematical notation -> of : 3
mathematical notation of -> is : 1
mathematical notation of -> tells : 1
mathematical notation of -> in : 1
notation of is -> often : 1
of is often -> used : 1
used to denote -> a : 1
to denote a -> the : 1
denote a the -> square : 1
a the square -> bracket : 1
the square bracket -> marks : 1
the square bracket -> denotes : 1
the square bracket -> means : 1
square bracket marks -> an : 1
bracket marks an -> inclusive : 1
marks an inclusive -> endpoint : 1
an inclusive endpoint -> of : 3
inclusive endpoint of -> a : 3
endpoint of a -> and : 3
endpoint of a -> means : 1
endpoint of a -> is : 1
endpoint of a -> other : 1
and the parenthesis -> marks : 1
and the parenthesis -> denotes : 1
and the parenthesis -> means : 1
the parenthesis marks -> an : 1
parenthesis marks an -> exclusive : 1
marks an exclusive -> endpoint : 1
an exclusive endpoint -> of : 3
exclusive endpoint of -> a : 3
of a means -> a : 1
a means a -> range : 1
means a range -> that : 1
a range that -> extends : 1
a range that -> starts : 2
range that extends -> from : 1
that extends from -> to : 1
extends from to -> including : 1
to including but -> excluding : 1
including but excluding -> read : 1
but excluding read -> more : 1
excluding read more -> about : 1
read more about -> ranges : 1
more about ranges -> in : 1
about ranges in -> later : 1
ranges in later -> in : 1
in this complete -> details : 1
this complete details -> about : 1
complete details about -> the : 1
about the various -> and : 1
the various and -> see : 1
various and see -> fundamental : 1
and see fundamental -> purpose : 1
see fundamental purpose -> of : 1
fundamental purpose of -> a : 1
purpose of a -> container : 1
of a container -> is : 1
of a container -> or : 2
a container is -> to : 3
container is to -> store : 1
container is to -> call : 2
is to store -> multiple : 1
to store multiple -> objects : 1
store multiple objects -> in : 1
multiple objects in -> a : 1
a single container -> different : 1
single container different -> kinds : 1
container different kinds -> of : 1
kinds of containers -> have : 1
of containers have -> different : 1
of containers have -> additional : 1
containers have different -> such : 1
have different such -> as : 1
as and ease -> of : 1
and ease of -> the : 1
ease of the -> choice : 1
ease of the -> class : 1
of the choice -> of : 1
choice of container -> depends : 1
of container depends -> on : 1
container depends on -> the : 1
on the characteristics -> and : 1
on the characteristics -> of : 1
the characteristics and -> behavior : 1
characteristics and behavior -> you : 1
and behavior you -> the : 1
behavior you the -> containers : 1
you the containers -> are : 1
the containers are -> implemented : 1
containers are implemented -> as : 1
implemented as class -> so : 1
as class so -> you : 1
class so you -> can : 1
you can store -> anything : 1
you can store -> only : 1
you can store -> a : 1
can store anything -> in : 1
store anything in -> a : 1
anything in a -> almost : 1
in a almost -> the : 1
a almost the -> type : 1
almost the type -> must : 1
type must have -> which : 1
must have which -> means : 1
have which means -> it : 1
means it must -> behave : 1
it must behave -> as : 1
must behave as -> an : 1
behave as an -> ordinary : 1
an ordinary such -> as : 1
as an values -> can : 1
an values can -> be : 1
be copied and -> assigned : 1
copied and assigned -> an : 1
and assigned an -> original : 1
assigned an original -> and : 1
an original and -> its : 1
original and its -> copy : 1
and its copy -> must : 1
its copy must -> compare : 1
copy must compare -> as : 1
must compare as -> some : 1
compare as some -> containers : 1
as some containers -> impose : 1
some containers impose -> additional : 1
containers impose additional -> containers : 1
impose additional containers -> fall : 1
additional containers fall -> into : 1
containers fall into -> two : 1
into two and -> a : 1
two and a -> sequence : 1
two and a -> stream : 1
and a sequence -> container : 1
a sequence container -> preserves : 1
a sequence container -> that : 5
a sequence container -> in : 1
a sequence container -> plus : 1
sequence container preserves -> the : 1
container preserves the -> original : 1
the original order -> in : 1
original order in -> which : 1
in which items -> were : 1
which items were -> added : 1
items were added -> to : 1
were added to -> the : 1
to the an -> associative : 1
the an associative -> container : 1
the an associative -> does : 2
associative container keeps -> items : 1
container keeps items -> in : 1
keeps items in -> ascending : 1
items in ascending -> order : 1
items in ascending -> a : 1
items in ascending -> the : 1
in ascending order -> can : 1
in ascending order -> according : 1
in ascending order -> an : 1
ascending order can -> define : 1
order can define -> the : 1
can define the -> order : 1
can define the -> macro : 1
define the order -> to : 1
the order to -> speed : 1
order to speed -> up : 1
to speed up -> the : 1
speed up the -> standard : 1
up the standard -> containers : 1
standard containers deque -> is : 1
containers deque is -> a : 1
deque is a -> sequence : 1
sequence container that -> supports : 4
sequence container that -> is : 2
sequence container that -> has : 1
sequence container that -> yields : 1
container that supports -> fast : 1
container that supports -> rapid : 1
container that supports -> iterators : 1
container that supports -> bidirectional : 1
container that supports -> random : 2
container that supports -> the : 1
that supports fast -> insertions : 1
supports fast insertions -> and : 1
fast insertions and -> deletions : 1
insertions and deletions -> at : 1
and deletions at -> the : 1
deletions at the -> beginning : 1
at the beginning -> and : 2
at the beginning -> or : 2
at the beginning -> of : 2
the beginning and -> end : 2
the beginning and -> at : 1
beginning and end -> of : 2
and end of -> the : 2
of the inserting -> or : 1
of the inserting -> items : 1
the inserting or -> deleting : 1
inserting or deleting -> at : 1
or deleting at -> any : 1
deleting at any -> other : 1
at any other -> position : 1
at any other -> the : 6
any other position -> is : 1
other position is -> but : 1
position is but -> indexing : 1
is but indexing -> to : 1
but indexing to -> any : 1
indexing to any -> item : 1
to any item -> is : 1
any item is -> items : 1
item is items -> are : 1
is items are -> not : 1
is items are -> stored : 1
is items are -> compared : 1
items are not -> stored : 2
are not stored -> the : 2
not stored the -> header : 2
stored the header -> is : 3
the header is -> list : 1
the header is -> map : 1
the header is -> and : 1
the header is -> queue : 1
the header is -> stack : 1
the header is -> standard : 1
the header is -> an : 1
the header is -> unique : 1
the header is -> typically : 1
header is list -> is : 1
is list is -> a : 1
list is a -> sequence : 2
that supports rapid -> insertion : 1
supports rapid insertion -> or : 1
rapid insertion or -> deletion : 1
insertion or deletion -> at : 1
or deletion at -> any : 1
deletion at any -> position : 1
at any position -> but : 1
at any position -> requires : 1
any position but -> does : 1
position but does -> not : 1
not support random -> items : 1
support random items -> are : 1
random items are -> not : 1
header is map -> is : 1
is map is -> an : 1
map is an -> associative : 1
is an associative -> container : 2
associative container that -> stores : 2
container that stores -> pairs : 2
container that stores -> keys : 1
container that stores -> looking : 1
container that stores -> unique : 1
that stores pairs -> of : 2
stores pairs of -> keys : 4
stores pairs of -> unique : 1
pairs of keys -> and : 4
of keys and -> associated : 3
of keys and -> looking : 1
keys and associated -> the : 1
keys and associated -> in : 2
keys and associated -> boost : 1
and associated the -> keys : 1
associated the keys -> determine : 1
the keys determine -> the : 1
keys determine the -> order : 1
determine the order -> of : 1
in the requires -> unique : 1
the requires unique -> permits : 1
requires unique permits -> duplicate : 2
unique permits duplicate -> the : 2
permits duplicate the -> header : 2
duplicate the header -> for : 2
the header for -> and : 2
the header for -> a : 1
the header for -> information : 2
the header for -> scalar : 1
header for and -> is : 2
for and is -> set : 1
for and is -> vector : 1
and is set -> is : 1
and is set -> to : 11
set is an -> associative : 1
that stores keys -> in : 1
stores keys in -> ascending : 1
keys in ascending -> requires : 1
in ascending requires -> unique : 1
ascending requires unique -> permits : 1
and is vector -> is : 1
is vector is -> a : 1
vector is a -> sequence : 2
container that is -> like : 2
that is like -> an : 2
like an except -> that : 1
an except that -> it : 1
that it can -> grow : 1
it can grow -> as : 1
can grow as -> items : 1
can grow as -> needed : 1
grow as items -> can : 1
as items can -> be : 1
can be rapidly -> added : 1
be rapidly added -> or : 1
rapidly added or -> removed : 1
added or removed -> only : 1
or removed only -> at : 1
removed only at -> the : 1
only at the -> at : 1
at the at -> other : 1
the at other -> inserting : 1
at other inserting -> and : 1
other inserting and -> deleting : 1
inserting and deleting -> items : 1
inserting and deleting -> keys : 2
and deleting items -> is : 1
deleting items is -> items : 1
items is items -> are : 1
items are stored -> the : 1
are stored the -> header : 1
header is and -> containers : 1
is and containers -> perform : 1
and containers perform -> and : 1
containers perform and -> searches : 1
perform and searches -> in : 1
and searches in -> logarithmic : 1
searches in logarithmic -> which : 1
in logarithmic which -> implies : 1
logarithmic which implies -> a : 1
which implies a -> tree : 1
implies a tree -> or : 1
a tree or -> items : 1
tree or items -> must : 1
or items must -> be : 1
items must be -> kept : 1
items must be -> used : 1
must be kept -> in : 1
be kept in -> sorted : 1
kept in sorted -> so : 1
in sorted so -> a : 1
sorted so a -> hash : 1
so a hash -> table : 1
a hash table -> implementation : 1
a hash table -> is : 1
hash table implementation -> is : 1
table implementation is -> not : 1
implementation is not -> many : 1
implementation is not -> required : 3
is not many -> programmers : 1
not many programmers -> consider : 1
many programmers consider -> the : 1
programmers consider the -> lack : 1
consider the lack -> of : 1
lack of a -> standard : 1
a standard hash -> table : 1
standard hash table -> to : 1
hash table to -> be : 1
table to be -> a : 1
be a serious -> when : 1
a serious when -> the : 1
serious when the -> standard : 1
when the standard -> is : 1
standard is a -> hash : 1
is a hash -> table : 1
hash table is -> likely : 1
table is likely -> to : 1
is likely to -> be : 1
likely to be -> the : 1
the project includes -> hash : 1
project includes hash -> see : 1
includes hash see -> for : 1
hash see for -> information : 1
information about addition -> to : 1
about addition to -> the : 1
standard the standard -> library : 1
standard the standard -> adapters : 1
has several an -> adapter : 1
several an adapter -> is : 1
an adapter is -> a : 1
adapter is a -> class : 1
template that uses -> a : 1
that uses a -> container : 1
that uses a -> stream : 1
that uses a -> to : 1
that uses a -> wrapper : 1
uses a container -> for : 1
a container for -> storage : 1
container for storage -> and : 1
for storage and -> provides : 1
storage and provides -> a : 1
and provides a -> restricted : 1
and provides a -> set : 1
and provides a -> number : 1
provides a restricted -> interface : 1
a restricted interface -> when : 1
restricted interface when -> compared : 1
interface when compared -> with : 1
when compared with -> the : 1
the standard adapters -> priority : 1
standard adapters priority -> queue : 1
adapters priority queue -> is : 1
priority queue is -> organized : 1
priority queue is -> not : 1
priority queue is -> the : 1
queue is organized -> so : 1
that the largest -> element : 1
that the largest -> item : 1
the largest element -> is : 1
the largest element -> in : 3
the largest element -> of : 1
largest element is -> always : 1
element is always -> the : 1
always the you -> can : 1
you can push -> an : 1
you can push -> back : 2
can push an -> item : 1
push an item -> onto : 1
an item onto -> the : 1
item onto the -> examine : 1
onto the examine -> the : 1
the examine the -> first : 1
examine the first -> or : 1
the first or -> remove : 1
first or remove -> the : 1
or remove the -> first : 1
remove the first -> the : 1
remove the first -> item : 1
first the header -> is : 1
header is queue -> is : 1
is queue is -> a : 1
queue is a -> sequence : 1
sequence of elements -> that : 1
of elements that -> lets : 1
of elements that -> were : 1
elements that lets -> you : 1
lets you add -> elements : 1
lets you add -> and : 1
you add elements -> at : 1
add elements at -> one : 1
elements at one -> end : 1
at one end -> and : 2
one end and -> remove : 1
one end and -> removal : 1
end and remove -> them : 1
and remove them -> at : 1
remove them at -> the : 1
them at the -> other : 1
at the other -> this : 1
the other this -> organization : 1
other this organization -> is : 1
this organization is -> commonly : 2
organization is commonly -> known : 2
is commonly known -> as : 2
commonly known as -> fifo : 1
commonly known as -> lifo : 1
known as fifo -> the : 1
as fifo the -> header : 1
fifo the header -> is : 1
header is stack -> is : 1
is stack is -> a : 1
stack is a -> sequence : 2
sequence that lets -> you : 1
you add and -> remove : 1
add and remove -> elements : 1
and remove elements -> only : 1
remove elements only -> at : 1
elements only at -> one : 1
only at one -> this : 1
at one this -> organization : 1
at one this -> number : 1
one this organization -> is : 1
known as lifo -> the : 1
as lifo the -> header : 1
lifo the header -> is : 1
header is standard -> library : 1
has a few -> class : 1
a few class -> templates : 1
few class templates -> that : 1
class templates that -> are : 1
class templates that -> permit : 1
standard containers but -> fail : 1
containers but fail -> one : 1
but fail one -> or : 1
fail one or -> more : 1
of the requirements -> for : 1
of the requirements -> of : 1
the requirements for -> a : 1
the requirements for -> integral : 1
requirements for a -> standard : 1
requirements for a -> class : 1
for a standard -> a : 1
for a standard -> or : 1
for a standard -> in : 1
a standard a -> of : 1
standard a of -> arbitrary : 1
a of arbitrary -> the : 1
of arbitrary the -> size : 1
arbitrary the size -> is : 1
is fixed when -> the : 1
fixed when the -> is : 1
when the is -> there : 1
the is there -> are : 1
is there are -> no : 1
there are no -> so : 1
there are no -> function : 1
are no so -> you : 1
no so you -> cannot : 1
use a with -> the : 1
standard see in -> for : 2
in for character -> the : 1
for character the -> string : 1
character the string -> class : 1
the string class -> templates : 1
string class templates -> meet : 1
class templates meet -> almost : 1
templates meet almost -> all : 1
meet almost all -> of : 1
almost all of -> the : 1
the requirements of -> a : 3
the requirements of -> an : 1
the requirements of -> the : 2
requirements of a -> sequence : 1
requirements of a -> such : 1
requirements of a -> standard : 1
of a sequence -> and : 1
of a sequence -> with : 2
of a sequence -> without : 1
of a sequence -> to : 1
of a sequence -> of : 3
a sequence and -> you : 1
sequence and you -> can : 1
can use their -> iterators : 1
use their iterators -> with : 1
their iterators with -> the : 1
iterators with the -> standard : 1
the standard they -> fall : 1
standard they fall -> short : 1
they fall short -> of : 1
fall short of -> meeting : 1
short of meeting -> all : 1
of meeting all -> the : 1
meeting all the -> requirements : 1
all the requirements -> of : 1
of a such -> as : 1
such as lacking -> and : 1
as lacking and -> member : 1
lacking and member -> the : 1
and member the -> header : 1
and member the -> qualifier : 1
and member the -> adapter : 3
member the header -> is : 1
array of numeric -> values : 1
array of numeric -> with : 1
of numeric values -> optimized : 1
numeric values optimized -> for : 1
values optimized for -> computational : 1
optimized for computational -> a : 1
for computational a -> lacks : 1
computational a lacks -> and : 1
a lacks and -> as : 1
lacks and as -> part : 1
and as part -> of : 1
to make assumptions -> that : 1
make assumptions that -> prevent : 1
assumptions that prevent -> from : 1
that prevent from -> being : 1
prevent from being -> used : 1
in for specialization -> of : 1
for specialization of -> the : 1
of the although -> usually : 1
the although usually -> meets : 1
although usually meets -> the : 1
usually meets the -> requirements : 1
meets the requirements -> of : 2
a standard the -> specialization : 1
a standard the -> names : 1
standard the specialization -> does : 1
the specialization does -> not : 1
specialization does not -> because : 1
specialization does not -> have : 1
does not because -> you : 1
not because you -> cannot : 1
you cannot obtain -> a : 1
cannot obtain a -> pointer : 1
obtain a pointer -> to : 1
to an element -> of : 5
to an element -> that : 1
to an element -> earlier : 1
to an element -> in : 1
to an element -> must : 1
element of a -> see : 1
element of a -> sequence : 1
element of a -> container : 1
of a see -> in : 1
a see in -> for : 1
in for section -> presents : 1
for section presents -> the : 1
the rules that -> govern : 1
the rules that -> apply : 2
that govern some -> rules : 1
govern some rules -> apply : 1
some rules apply -> to : 1
rules apply to -> all : 1
standard and you -> can : 1
you can rely -> on : 2
on the standard -> behavior : 1
the standard behavior -> for : 1
standard behavior for -> all : 1
behavior for all -> other : 1
all other rules -> apply : 1
other rules apply -> only : 1
rules apply only -> to : 1
only to sequence -> and : 1
to sequence and -> some : 2
sequence and some -> apply : 1
sequence and some -> to : 1
and some apply -> only : 1
some apply only -> to : 1
only to associative -> if : 1
to associative if -> you : 1
associative if you -> write : 1
you write your -> own : 4
your own class -> be : 1
own class be -> sure : 1
class be sure -> to : 1
sure to follow -> the : 1
to follow the -> same : 1
follow the same -> conventions : 1
the same conventions -> and : 1
same conventions and -> rules : 1
conventions and rules -> that : 1
and rules that -> apply : 1
rules that apply -> to : 3
the standard iterator -> type : 1
standard iterator type -> for : 1
iterator type for -> lvalue : 1
type for lvalue -> type : 1
for lvalue type -> for : 1
lvalue type for -> the : 2
for the items -> stored : 2
the items stored -> in : 2
items stored in -> the : 2
stored in the -> this : 3
stored in the -> same : 1
stored in the -> return : 2
stored in the -> array : 4
stored in the -> map : 2
stored in the -> buffer : 1
stored in the -> in : 1
is typically the -> same : 3
is typically the -> last : 1
typically the same -> as : 3
as the signed -> integral : 1
the signed integral -> type : 1
the signed integral -> you : 1
signed integral type -> denoting : 1
signed integral type -> that : 1
integral type denoting -> the : 1
type denoting the -> difference : 1
denoting the difference -> between : 1
difference between two -> iterator : 1
difference between two -> shows : 1
difference between two -> the : 3
difference between two -> for : 1
difference between two -> function : 1
between two iterator -> lvalue : 1
two iterator lvalue -> type : 1
iterator lvalue type -> for : 1
as the unsigned -> integral : 1
the unsigned integral -> type : 1
unsigned integral type -> that : 1
can hold any -> nonnegative : 1
hold any nonnegative -> type : 1
any nonnegative type -> of : 1
nonnegative type of -> item : 1
type of item -> stored : 1
of item stored -> in : 1
item stored in -> the : 1
as the first -> template : 2
as the first -> argument : 5
as the first -> character : 1
as the first -> return : 1
as the first -> the : 1
as the first -> parameter : 2
as the first -> it : 1
as the first -> see : 3
the first template -> that : 1
the first template -> parameter : 1
first template that -> supports : 1
template that supports -> bidirectional : 1
that supports bidirectional -> iterators : 1
that supports bidirectional -> or : 1
supports bidirectional iterators -> should : 1
bidirectional iterators should -> also : 1
iterators should also -> define : 1
should also define -> the : 1
also define the -> and : 1
define the and -> container : 1
the and container -> should : 1
the and container -> these : 1
and container should -> define : 1
container should define -> as : 1
container should define -> the : 2
should define as -> the : 1
define as the -> key : 1
as the key -> as : 1
as the key -> compare : 1
the key as -> the : 1
key as the -> key : 1
the key compare -> function : 2
key compare function -> or : 2
compare function or -> and : 1
compare function or -> complexity : 2
function or and -> as : 1
or and as -> a : 1
and as a -> function : 1
function or functor -> that : 2
function or functor -> to : 1
function or functor -> or : 1
function or functor -> must : 3
function or functor -> specified : 1
or functor that -> compares : 5
or functor that -> you : 1
functor that compares -> two : 5
that compares two -> a : 1
that compares two -> objects : 4
compares two a -> container : 1
two a container -> can : 1
a container can -> declare : 1
container can declare -> and : 1
declare and as -> synonyms : 1
and as synonyms -> of : 1
as synonyms of -> the : 1
synonyms of the -> types : 1
same and for -> the : 1
which is typically -> the : 1
which is typically -> in : 1
which is typically -> class : 1
typically the last -> template : 1
the last template -> of : 1
last template of -> the : 1
standard functions have -> a : 1
functions have a -> complexity : 1
have a complexity -> that : 1
a complexity that -> is : 1
complexity that is -> constant : 1
that is constant -> or : 1
is constant or -> linear : 1
constant or linear -> in : 1
constant or linear -> the : 1
or linear in -> the : 1
linear in the -> number : 3
linear in the -> size : 1
in the number -> of : 5
in the some -> of : 1
in the some -> the : 1
the some of -> the : 1
functions for associative -> members : 1
for associative members -> are : 1
associative members are -> logarithmic : 1
members are logarithmic -> in : 1
are logarithmic in -> the : 1
logarithmic in the -> number : 1
in the each -> of : 1
the each of -> the : 1
of the descriptions -> in : 1
the descriptions in -> this : 1
this section notes -> the : 1
section notes the -> complexity : 1
notes the complexity -> of : 1
the complexity of -> the : 1
the complexity of -> each : 1
the complexity of -> can : 1
complexity of the -> container : 1
of the container -> template : 1
of the container -> class : 1
of the container -> so : 1
of the container -> typename : 1
of the container -> the : 1
of the container -> because : 1
the container template -> should : 1
container template should -> have : 1
template should have -> the : 1
the following you -> do : 1
following you do -> not : 1
to write separate -> in : 1
write separate in -> all : 1
separate in all -> sometimes : 1
in all sometimes -> you : 1
all sometimes you -> can : 1
sometimes you can -> use : 1
can use default -> arguments : 1
default arguments instead -> of : 1
arguments instead of -> if : 1
instead of if -> an : 1
of if an -> allocator : 1
if an allocator -> object : 1
an allocator object -> is : 1
an allocator object -> for : 1
allocator object is -> it : 1
object is it -> is : 1
object is it -> constructs : 1
object is it -> sets : 2
it is copied -> to : 1
it is copied -> and : 1
the a default -> allocator : 1
a default allocator -> is : 1
default allocator is -> in : 1
allocator is in -> each : 1
is in each -> of : 1
container class the -> container : 1
class the container -> to : 1
the container to -> be : 1
the container to -> add : 1
the container to -> insert : 1
container to be -> complexity : 1
to be complexity -> is : 1
be complexity is -> the : 1
be complexity is -> log : 1
complexity is the -> container : 1
complexity is the -> one : 2
complexity is the -> largest : 2
complexity is the -> comparator : 2
is the container -> with : 1
is the container -> remains : 1
the container with -> a : 1
the container with -> copies : 3
container with a -> copy : 1
with a copy -> of : 5
the items and -> the : 1
items and the -> allocator : 1
items and the -> copy : 1
and the allocator -> from : 1
the allocator from -> complexity : 1
allocator from complexity -> is : 1
from complexity is -> container : 1
from complexity is -> linear : 1
complexity is container -> should : 1
is container should -> have : 1
container should have -> the : 2
container should have -> all : 1
the following additional -> const : 1
the following additional -> an : 1
following additional const -> const : 1
additional const const -> the : 1
const const the -> container : 1
const const the -> sequence : 4
const const the -> pattern : 1
const the container -> with : 1
container with copies -> of : 3
copies of complexity -> is : 1
of complexity is -> linear : 1
of complexity is -> log : 2
complexity is linear -> with : 3
complexity is linear -> in : 1
complexity is linear -> if : 2
is linear with -> respect : 4
linear with respect -> to : 4
respect to initer -> initer : 1
to initer initer -> the : 1
initer initer the -> container : 1
initer initer the -> values : 1
initer the container -> with : 2
of the items -> in : 5
of the items -> from : 1
of the items -> do : 1
the range complexity -> is : 1
range complexity is -> linear : 1
respect to is -> an : 1
to is an -> integral : 1
integral the container -> is : 1
container is initialized -> with : 1
copies of to -> complexity : 1
copies of to -> the : 1
of to complexity -> is : 1
to complexity is -> linear : 1
to complexity is -> log : 1
to complexity is -> proportional : 1
respect to container -> should : 1
to container should -> have : 1
following additional an -> empty : 1
additional an empty -> container : 1
an empty container -> that : 1
empty container that -> uses : 1
container that uses -> to : 1
container that uses -> a : 1
that uses to -> compare : 1
uses to compare -> complexity : 1
to compare complexity -> is : 1
compare complexity is -> initer : 1
complexity is initer -> the : 1
is initer the -> container : 1
the range comparing -> keys : 1
range comparing keys -> with : 1
comparing keys with -> complexity : 1
keys with complexity -> is : 1
with complexity is -> must : 1
complexity is must -> have : 1
is must have -> a : 1
have a the -> destructor : 1
have a the -> effect : 1
have a the -> next : 2
a the destructor -> for : 1
destructor for every -> object : 1
for every object -> in : 1
every object in -> the : 1
in the perhaps -> by : 1
the perhaps by -> calling : 1
perhaps by calling -> complexity : 1
by calling complexity -> is : 1
calling complexity is -> member : 1
complexity is member -> functions : 1
is member functions -> are : 1
the container and -> when : 1
the container and -> then : 1
container and when -> you : 1
when you write -> your : 1
container you should -> implement : 1
you should implement -> the : 1
should implement the -> same : 1
implement the same -> member : 1
same member functions -> with : 1
the same some -> are : 1
the same some -> functions : 3
same some are -> specific : 1
some are specific -> to : 1
are specific to -> sequence : 1
specific to sequence -> and : 1
and some to -> associative : 1
some to associative -> each : 1
to associative each -> container : 1
associative each container -> template : 1
each container template -> can : 1
container template can -> define : 1
template can define -> additional : 1
can define additional -> an : 1
can define additional -> functions : 2
can define additional -> values : 1
can define additional -> see : 1
can define additional -> many : 1
define additional an -> iterator : 1
additional an iterator -> that : 1
an iterator that -> points : 79
an iterator that -> marks : 1
iterator that points -> to : 95
iterator that points -> one : 1
that points to -> the : 57
that points to -> one : 36
that points to -> copies : 1
that points to -> an : 1
that points to -> is : 2
that points to -> first : 1
that points to -> a : 6
that points to -> that : 4
the first item -> of : 1
the first item -> in : 16
the first item -> to : 1
the first item -> for : 1
the first item -> from : 3
the first item -> inserted : 1
the first item -> a : 2
first item of -> the : 1
item of the -> complexity : 2
of the complexity -> is : 3
the complexity is -> all : 1
the complexity is -> if : 1
the complexity is -> later : 1
the complexity is -> usually : 1
the complexity is -> log : 3
the complexity is -> but : 1
the complexity is -> at : 1
the complexity is -> linear : 2
the complexity is -> in : 1
the complexity is -> the : 6
the complexity is -> an : 1
complexity is all -> the : 1
in the complexity -> is : 4
complexity is if -> the : 1
the is empty -> complexity : 1
is empty complexity -> is : 1
empty complexity is -> an : 1
complexity is an -> iterator : 4
is an iterator -> that : 28
is an iterator -> and : 1
is an iterator -> adapter : 1
is an iterator -> interface : 1
is an iterator -> over : 1
points to one -> past : 27
points to one -> such : 1
points to one -> position : 12
points to one -> item : 1
past the last -> item : 6
past the last -> the : 1
past the last -> element : 6
past the last -> occurrence : 1
past the last -> character : 2
past the last -> output : 2
last item of -> the : 1
complexity is later -> in : 1
discussion of what -> past : 1
of what past -> the : 1
what past the -> last : 1
the last the -> item : 1
the last the -> argument : 1
last the item -> that : 1
the item that -> points : 3
the item that -> comes : 2
the item that -> the : 3
the item that -> belongs : 1
the item that -> was : 3
item that points -> for : 1
item that points -> to : 2
that points for -> a : 1
points for a -> sequence : 1
for a sequence -> returns : 2
for a sequence -> container : 1
a sequence returns -> an : 2
sequence returns an -> iterator : 2
returns an iterator -> that : 20
returns an iterator -> the : 1
to the item -> that : 5
to the item -> become : 1
item that comes -> immediately : 2
that comes immediately -> after : 2
comes immediately after -> the : 2
after the deleted -> item : 1
the deleted item -> or : 1
deleted item or -> complexity : 2
item or complexity -> depends : 2
or complexity depends -> on : 2
complexity depends on -> the : 2
an associative does -> not : 2
associative does not -> return : 2
return a complexity -> is : 2
a complexity is -> constant : 1
a complexity is -> plus : 1
a complexity is -> iterator : 2
complexity is constant -> over : 1
is constant over -> many : 6
constant over many -> all : 1
constant over many -> if : 1
constant over many -> at : 4
over many all -> the : 1
many all the -> items : 1
the range for -> a : 1
the range for -> which : 1
the range for -> any : 1
the range for -> the : 2
the range for -> all : 1
the range for -> values : 1
range for a -> sequence : 1
range for a -> typename : 1
range for a -> repeated : 1
the last deleted -> item : 1
last deleted item -> or : 1
complexity is plus -> the : 1
is plus the -> largest : 1
plus the largest -> number : 1
the largest number -> of : 5
largest number of -> items : 3
largest number of -> pairs : 2
of items the -> container : 1
of items the -> third : 1
items the container -> can : 1
the container can -> possibly : 1
container can possibly -> although : 1
can possibly although -> many : 1
possibly although many -> containers : 1
although many containers -> are : 1
many containers are -> not : 1
containers are not -> except : 1
are not except -> by : 1
not except by -> available : 1
except by available -> memory : 1
by available memory -> and : 1
available memory and -> the : 1
memory and the -> limits : 1
memory and the -> actual : 1
and the limits -> of : 1
and the limits -> in : 1
the limits of -> other : 1
the limits of -> where : 5
the limits of -> macros : 1
the limits of -> integer : 1
the limits of -> the : 1
the limits of -> its : 1
limits of other -> container : 1
of other container -> such : 1
other container such -> as : 1
container such as -> an : 1
as an array -> might : 1
an array might -> have : 1
array might have -> a : 1
might have a -> fixed : 1
might have a -> different : 1
might have a -> more : 1
have a fixed -> maximum : 2
have a fixed -> size : 1
a fixed maximum -> complexity : 1
a fixed maximum -> size : 1
fixed maximum complexity -> is : 1
maximum complexity is -> usually : 1
complexity is usually -> all : 1
complexity is usually -> the : 1
complexity is usually -> container : 1
is usually all -> items : 1
usually all items -> in : 1
all items in -> this : 1
all items in -> the : 3
all items in -> a : 1
items in this -> container : 1
items in this -> list : 1
in this container -> and : 1
this container and -> copies : 1
container and copies -> all : 1
container and copies -> its : 1
and copies all -> the : 2
copies all the -> items : 4
copies all the -> elements : 1
copies all the -> pairs : 3
the items from -> complexity : 1
the items from -> and : 1
the items from -> a : 1
the items from -> the : 1
the items from -> one : 1
the items from -> to : 2
items from complexity -> is : 1
is linear in -> the : 2
usually the elements -> of : 1
elements of this -> container : 1
of this container -> with : 1
this container with -> an : 1
container with an -> associative : 1
with an associative -> container : 1
associative container also -> swaps : 1
container also swaps -> the : 1
also swaps the -> comparison : 1
swaps the comparison -> function : 1
the comparison function -> or : 1
the comparison function -> takes : 1
comparison function or -> complexity : 1
comparison function or -> functor : 2
function or complexity -> is : 3
or complexity is -> usually : 1
or complexity is -> an : 2
is usually container -> should : 1
usually container should -> have : 1
should have all -> of : 1
have all of -> its : 1
of its and -> relational : 1
its and relational -> operators : 1
and relational operators -> either : 1
relational operators either -> as : 1
operators either as -> member : 1
either as member -> functions : 1
member functions as -> functions : 1
functions as functions -> at : 1
as functions at -> the : 1
functions at the -> namespace : 1
the namespace functions -> offer : 1
namespace functions offer -> more : 1
functions offer more -> flexibility : 1
offer more flexibility -> than : 1
offer more flexibility -> and : 1
flexibility than member -> for : 1
than member for -> the : 1
member for the -> compiler : 1
compiler can use -> implicit : 1
can use implicit -> type : 1
use implicit type -> conversions : 1
type conversions on -> the : 1
conversions on the -> lefthand : 1
on the lefthand -> operand : 1
on the lefthand -> you : 4
lefthand operand but -> only : 1
operand but only -> if : 1
function is not -> a : 1
function is not -> visible : 1
function is not -> useful : 1
a member container -> that : 1
member container that -> supports : 1
that supports iterators -> should : 1
supports iterators should -> define : 1
iterators should define -> and : 1
should define and -> member : 1
define and member -> functions : 1
member functions to -> return : 1
functions to return -> reverse : 1
to return reverse -> following : 1
return reverse following -> functions : 1
reverse following functions -> are : 1
following functions are -> the : 1
standard containers provide -> only : 1
containers provide only -> those : 1
provide only those -> functions : 1
only those functions -> that : 1
those functions that -> have : 1
have constant the -> item : 1
constant the item -> at : 1
the item at -> index : 2
the item at -> all : 1
the item at -> to : 1
the item at -> or : 1
the item at -> position : 1
the item at -> in : 2
the item at -> the : 2
item at index -> or : 1
item at index -> behavior : 1
at index or -> throws : 1
index or throws -> if : 1
or throws if -> the : 1
throws if the -> last : 1
throws if the -> index : 1
throws if the -> arithmetic : 1
if the last -> item : 2
item in the -> behavior : 4
item in the -> as : 1
item in the -> container : 3
item in the -> complexity : 1
item in the -> update : 1
item in the -> associative : 1
item in the -> a : 1
item in the -> function : 1
item in the -> range : 2
item in the -> which : 1
item in the -> the : 8
item in the -> all : 2
item in the -> iterator : 1
item in the -> t : 1
item in the -> every : 2
item in the -> map : 1
item in the -> this : 1
item in the -> priority : 1
item in the -> that : 1
item in the -> set : 4
in the behavior -> is : 4
container is the -> first : 2
container is the -> item : 1
first item in -> the : 16
first item in -> a : 1
is the item -> at : 2
is the item -> to : 1
at index behavior -> is : 1
index behavior is -> undefined : 1
container is as -> the : 1
is as the -> new : 3
as the new -> last : 3
as the new -> first : 2
as the new -> locale : 1
as the new -> owned : 1
the new last -> item : 1
the new last -> element : 2
new last item -> in : 1
in the as -> the : 1
in the as -> they : 1
the new first -> item : 1
the new first -> element : 1
new first item -> in : 1
in the container -> should : 1
in the container -> that : 2
in the container -> the : 1
in the container -> will : 1
in the container -> and : 1
the container should -> define : 1
should define the -> following : 2
should define the -> same : 1
define the following -> member : 2
the following member -> the : 1
the following member -> in : 1
the following member -> function : 4
following member the -> complexity : 1
member the complexity -> of : 1
complexity of each -> depends : 1
of each depends -> on : 1
each depends on -> the : 1
on the container -> const : 1
the container const -> immediately : 1
container const immediately -> before : 1
const immediately before -> and : 1
immediately before and -> returns : 1
before and returns -> an : 1
points to copies -> of : 1
to copies of -> before : 1
copies of before -> initer : 1
of before initer -> initer : 1
before initer initer -> the : 1
initer the values -> from : 1
the values from -> and : 1
values from and -> inserts : 1
from and inserts -> them : 1
from and inserts -> each : 1
and inserts them -> before : 1
inserts them before -> container : 1
them before container -> should : 1
before container should -> define : 1
following member in -> the : 1
in the descriptions -> of : 2
the descriptions of -> the : 3
the descriptions of -> these : 1
of the refers -> to : 1
the refers to -> the : 2
to the number -> of : 5
in the refers -> to : 1
the argument range -> and : 1
argument range and -> is : 1
range and is -> the : 1
range and is -> in : 1
the value that -> the : 1
the value that -> would : 1
the value that -> was : 1
value that the -> function : 1
the function some -> of : 1
function some of -> these : 1
of these member -> functions : 1
these member functions -> seem : 1
member functions seem -> to : 1
functions seem to -> duplicate : 1
seem to duplicate -> standard : 1
to duplicate standard -> algorithms : 1
duplicate standard algorithms -> discussed : 1
standard algorithms discussed -> in : 1
algorithms discussed in -> later : 1
discussed in later -> in : 1
in this but -> the : 1
this but the -> associative : 1
but the associative -> containers : 1
associative containers can -> implement : 1
containers can implement -> them : 1
can implement them -> with : 1
implement them with -> better : 1
them with better -> performance : 1
with better performance -> than : 1
performance than the -> generic : 1
than the generic -> the : 1
the generic the -> number : 1
generic the number -> of : 1
of items equivalent -> to : 1
items equivalent to -> complexity : 1
items equivalent to -> returns : 1
items equivalent to -> if : 1
equivalent to complexity -> is : 2
complexity is log -> the : 2
complexity is log -> all : 1
complexity is log -> an : 1
complexity is log -> if : 1
complexity is log -> const : 1
complexity is log -> in : 3
complexity is log -> standard : 1
is log the -> equivalent : 1
is log the -> value : 1
log the equivalent -> of : 1
the equivalent of -> complexity : 1
the equivalent of -> calling : 1
the equivalent of -> for : 1
the equivalent of -> the : 4
the equivalent of -> second : 1
the equivalent of -> in : 8
equivalent of complexity -> is : 1
is log all -> the : 1
log all the -> items : 1
the items equivalent -> to : 2
equivalent to returns -> the : 1
to returns the -> number : 1
to returns the -> bit : 1
to returns the -> real : 1
of items complexity -> is : 1
items complexity is -> log : 1
is log an -> item : 1
log an item -> equivalent : 1
an item equivalent -> to : 2
item equivalent to -> and : 2
item equivalent to -> if : 1
to one such -> or : 1
one such or -> if : 1
such or if -> not : 1
or if not -> complexity : 1
if not complexity -> is : 1
not complexity is -> log : 1
is log if -> the : 1
log if the -> container : 1
the container permits -> duplicate : 1
container permits duplicate -> returns : 1
permits duplicate returns -> an : 1
duplicate returns an -> iterator : 1
to the newly -> inserted : 2
to the newly -> resized : 1
to the newly -> allocated : 3
the newly inserted -> if : 1
the newly inserted -> typename : 1
newly inserted if -> the : 1
inserted if the -> container : 1
the container requires -> unique : 1
container requires unique -> returns : 1
requires unique returns -> in : 1
unique returns in -> which : 1
returns in which -> the : 1
returns in which -> and : 1
returns in which -> is : 13
which the first -> element : 1
which the first -> three : 1
of the pair -> is : 1
of the pair -> points : 2
the pair is -> an : 1
pair is an -> iterator : 1
to an item -> equivalent : 1
to an item -> as : 1
to an item -> is : 1
the second element -> is : 1
second element is -> if : 1
element is if -> was : 1
is if was -> inserted : 1
if was inserted -> or : 1
was inserted or -> if : 1
inserted or if -> was : 1
or if was -> already : 1
if was already -> present : 1
was already present -> in : 1
already present in -> the : 4
is log const -> and : 1
log const and -> returns : 1
const and returns -> an : 1
to the iterator -> hints : 1
to the iterator -> the : 3
the iterator hints -> to : 1
iterator hints to -> where : 1
hints to where -> might : 1
to where might -> complexity : 1
where might complexity -> is : 1
might complexity is -> log : 1
is log in -> but : 1
is log in -> which : 6
log in but -> is : 1
in but is -> constant : 1
in but is -> declared : 1
but is constant -> over : 1
over many if -> the : 1
many if the -> hint : 1
if the hint -> is : 1
the hint is -> that : 1
hint is that -> if : 1
if is inserted -> immediately : 5
is inserted immediately -> after : 5
inserted immediately after -> initer : 1
inserted immediately after -> the : 4
immediately after initer -> the : 1
after initer the -> items : 1
initer the items -> from : 1
items from and -> inserts : 1
and inserts each -> item : 1
inserts each item -> in : 1
each item in -> the : 3
each item in -> a : 1
complexity is but -> is : 1
but is linear -> if : 1
is linear if -> the : 3
is linear if -> there : 1
linear if the -> range : 1
linear if the -> keys : 2
if the range -> is : 3
the range is -> already : 1
the range is -> written : 1
the range is -> exactly : 5
the range is -> at : 3
the range is -> the : 1
the range is -> copied : 1
the range is -> constructed : 1
the range is -> an : 1
range is already -> the : 1
is already the -> key : 1
is already the -> insert : 2
already the key -> compare : 1
the container that -> does : 1
the container that -> comes : 1
container that does -> not : 1
does not come -> before : 5
not come before -> that : 5
come before that -> if : 5
before that if -> is : 5
if is in -> the : 6
if is in -> which : 1
if is in -> in : 1
the the iterator -> points : 5
the the iterator -> does : 3
the iterator points -> to : 15
the iterator points -> and : 1
the iterator points -> is : 1
the iterator points -> iterators : 1
iterator points to -> the : 15
iterator points to -> a : 1
iterator points to -> one : 1
iterator points to -> its : 2
to the position -> of : 3
to the position -> where : 2
to the position -> at : 1
the position of -> its : 3
the position of -> the : 3
the position of -> an : 1
position of its -> first : 3
of its first -> the : 3
its first the -> iterator : 3
first the iterator -> points : 3
the first position -> where : 10
first position where -> should : 5
first position where -> two : 2
first position where -> an : 1
first position where -> a : 2
first position where -> you : 1
position where should -> be : 5
where should be -> complexity : 1
where should be -> performance : 2
where should be -> the : 2
should be complexity -> is : 1
log the value -> compare : 1
the value compare -> function : 1
value compare function -> or : 1
container that comes -> after : 1
that comes after -> all : 3
that comes after -> performance : 1
that comes after -> the : 1
comes after all -> occurrences : 3
after all occurrences -> of : 3
occurrences of complexity -> is : 1
is log standard -> containers : 1
log standard containers -> are : 1
standard containers are -> designed : 2
containers are designed -> to : 2
are designed to -> be : 2
designed to be -> robust : 1
designed to be -> used : 1
to be robust -> in : 1
be robust in -> the : 1
robust in the -> face : 1
in the face -> of : 1
the face of -> the : 1
face of the -> exceptions : 1
of the exceptions -> that : 1
the exceptions that -> the : 1
exceptions that the -> containers : 1
that the containers -> themselves : 1
the containers themselves -> can : 1
containers themselves can -> throw : 1
themselves can throw -> are : 1
can throw are -> might : 1
throw are might -> throw : 1
are might throw -> and : 1
might throw and -> most : 1
throw and most -> member : 1
and most member -> functions : 1
most member functions -> do : 1
any exceptions of -> their : 1
exceptions of their -> a : 1
of their a -> single : 1
their a single -> value : 1
single value is -> being : 1
value is being -> added : 1
is being added -> to : 1
being added to -> a : 1
added to a -> calling : 1
added to a -> you : 1
to a calling -> or : 1
a calling or -> and : 1
calling or and -> an : 1
or and an -> exception : 1
the container remains -> in : 1
container remains in -> a : 1
remains in a -> valid : 1
in a valid -> state : 1
a valid state -> without : 1
valid state without -> adding : 1
state without adding -> the : 1
without adding the -> value : 1
adding the value -> to : 1
to the inserting -> more : 1
the inserting more -> than : 1
inserting more than -> one : 1
than one different -> have : 1
one different have -> different : 1
different have different -> a : 1
different a for -> ensures : 1
a for ensures -> that : 1
for ensures that -> all : 1
ensures that all -> items : 1
that all items -> are : 1
that all items -> for : 2
all items are -> inserted : 1
items are inserted -> or : 1
are inserted or -> that : 1
inserted or that -> if : 1
or that if -> an : 1
that if an -> exception : 1
a or ensures -> only : 1
or ensures only -> that : 1
ensures only that -> each : 1
only that each -> individual : 1
that each individual -> item : 1
each individual item -> is : 1
individual item is -> inserted : 1
item is inserted -> if : 1
item is inserted -> or : 1
is inserted if -> an : 1
inserted if an -> exception : 1
is thrown after -> inserting : 1
thrown after inserting -> some : 1
after inserting some -> of : 1
inserting some of -> the : 1
items from a -> the : 1
items from a -> sequence : 2
from a the -> destination : 1
from a the -> values : 1
from a the -> constructor : 1
from a the -> first : 1
a the destination -> container : 1
the destination container -> retains : 1
destination container retains -> the : 1
container retains the -> elements : 1
retains the elements -> that : 1
the elements that -> had : 1
the elements that -> are : 2
elements that had -> been : 1
had been inserted -> and : 1
been inserted and -> functions : 1
inserted and functions -> never : 1
and functions never -> throw : 1
functions never throw -> function : 1
never throw function -> throws : 1
throw function throws -> an : 1
exception only if -> an : 1
only if an -> associative : 1
only if an -> equivalent : 2
if an associative -> copy : 1
an associative copy -> constructor : 1
associative copy constructor -> or : 1
copy constructor or -> assignment : 4
constructor or assignment -> operator : 2
constructor or assignment -> the : 2
or assignment operator -> throws : 1
or assignment operator -> must : 1
or assignment operator -> is : 2
assignment operator throws -> an : 1
operator throws an -> a : 1
operator throws an -> throw : 1
an a custom -> a : 1
a custom a -> shows : 1
a custom a -> simple : 1
a custom a -> needs : 1
custom a shows -> an : 1
a shows an -> which : 1
a shows an -> example : 1
shows an which -> implements : 1
an which implements -> a : 1
which implements a -> a : 1
implements a a -> list : 1
a a list -> requires : 1
a list requires -> slightly : 1
list requires slightly -> less : 1
requires slightly less -> memory : 1
slightly less memory -> than : 1
less memory than -> a : 1
memory than a -> list : 1
than a list -> but : 1
a list but -> at : 1
list but at -> a : 1
but at a -> forward : 1
but at a -> cost : 1
at a forward -> not : 1
a forward not -> a : 1
forward not a -> bidirectional : 1
not a bidirectional -> a : 1
a bidirectional a -> custom : 1
bidirectional a custom -> a : 1
custom a simple -> container : 1
a simple container -> for : 1
container for typename -> alloc : 1
for typename alloc -> class : 1
typename alloc class -> slist : 1
typename alloc class -> types : 1
typename alloc class -> typedef : 4
alloc class slist -> private : 1
in the struct -> link : 1
the struct link -> u : 1
u typedef typedef -> typename : 1
typedef typedef typename -> typedef : 5
typename typedef alloc -> typedef : 2
typedef alloc typedef -> t : 1
typedef alloc typedef -> typename : 8
typedef alloc typedef -> typedef : 1
alloc typedef t -> typedef : 1
typedef typedef class -> later : 1
typedef typedef class -> destructor : 1
typedef typedef class -> exposition : 1
typedef typedef class -> template : 1
typedef typedef class -> public : 2
typedef typedef class -> static : 1
typedef class later -> in : 1
class later in -> this : 2
chapter for class -> the : 1
for class the -> alloc : 1
class the alloc -> const : 1
the alloc const -> const : 1
alloc const const -> inputiter : 1
const const inputiter -> const : 1
const inputiter const -> alloc : 1
inputiter const alloc -> const : 1
const alloc const -> return : 1
alloc const return -> iterator : 1
void void t -> const : 1
return iterator const -> void : 1
iterator const void -> const : 4
const void inputiter -> inputiter : 1
void inputiter inputiter -> iterator : 1
void inputiter inputiter -> pos : 1
inputiter inputiter iterator -> iterator : 1
inputiter iterator iterator -> iterator : 1
iterator iterator iterator -> void : 4
iterator iterator iterator -> one : 1
iterator iterator iterator -> class : 4
iterator iterator iterator -> const : 1
iterator iterator void -> bool : 1
iterator iterator void -> t : 2
iterator iterator void -> void : 3
iterator iterator void -> template : 1
iterator void bool -> const : 1
void bool const -> return : 2
void const x -> const : 1
const x const -> return : 1
const x const -> bool : 1
x const return -> void : 1
x const return -> t : 1
return void typedef -> typename : 1
void typedef typename -> next : 1
typedef typename next -> void : 1
typename next void -> void : 1
next void void -> inputiter : 1
void void inputiter -> void : 1
void inputiter void -> inputiter : 1
inputiter void inputiter -> if : 1
void inputiter if -> inputiter : 1
inputiter if inputiter -> is : 1
if inputiter is -> an : 1
inputiter is an -> integral : 1
integral the standard -> requires : 1
the standard requires -> the : 2
the standard requires -> that : 1
standard requires the -> constructor : 1
standard requires the -> implementation : 1
requires the constructor -> to : 1
the constructor to -> interpret : 1
the constructor to -> throw : 1
constructor to interpret -> first : 1
to interpret first -> and : 1
interpret first and -> last : 1
first and last -> as : 1
and last as -> a : 1
last as a -> count : 1
as a count -> and : 1
a count and -> and : 1
count and and -> perform : 1
and and perform -> the : 1
perform the use -> the : 1
the use the -> trait : 1
use the trait -> to : 2
trait to dispatch -> to : 1
to dispatch to -> the : 1
dispatch to the -> appropriate : 1
to the appropriate -> construct : 1
the appropriate construct -> which : 1
appropriate construct which -> does : 1
construct which does -> the : 1
which does the -> real : 1
does the real -> typename : 1
the real typename -> inputiter : 1
real typename inputiter -> const : 1
typename inputiter const -> typename : 1
inputiter const typename -> void : 1
const typename void -> inputiter : 1
void inputiter typename -> void : 1
inputiter typename void -> inputiter : 1
void inputiter private -> function : 1
inputiter private function -> to : 1
private function to -> allocate : 1
private function to -> release : 1
to allocate a -> new : 1
a new link -> typename : 1
new link typename -> typename : 1
link typename typename -> item : 1
typename typename item -> return : 1
typename typename item -> if : 1
typename item return -> private : 1
item return private -> function : 1
return private function -> to : 1
function to release -> a : 1
to release a -> link : 1
release a link -> typename : 1
a link typename -> void : 1
link typename void -> basic : 1
typename void basic -> insertion : 1
void basic insertion -> all : 1
basic insertion all -> insertions : 1
insertion all insertions -> eventually : 1
all insertions eventually -> find : 1
insertions eventually find -> their : 1
eventually find their -> way : 1
find their way -> inserting : 1
their way inserting -> at : 1
way inserting at -> the : 1
inserting at the -> head : 1
inserting at the -> end : 1
at the head -> of : 1
the head of -> the : 2
head of the -> list : 1
head of the -> the : 1
of the list -> must : 1
of the list -> means : 1
of the list -> the : 1
of the list -> to : 2
the list must -> set : 1
list must set -> the : 1
must set the -> inserting : 1
set the inserting -> at : 1
the inserting at -> the : 1
the list means -> appending : 1
list means appending -> to : 1
means appending to -> the : 1
appending to the -> which : 1
the which updates -> the : 1
which updates the -> next : 1
updates the next -> and : 1
next and then -> sets : 1
and then sets -> anywhere : 1
and then sets -> the : 1
then sets anywhere -> else : 1
sets anywhere else -> in : 1
anywhere else in -> the : 2
else in the -> list : 1
else in the -> standard : 1
the list requires -> updating : 1
list requires updating -> note : 1
requires updating note -> that : 1
updating note that -> inserting : 1
note that inserting -> into : 1
that inserting into -> an : 1
inserting into an -> empty : 1
into an empty -> list : 1
an empty list -> looks : 1
an empty list -> that : 1
empty list looks -> like : 1
list looks like -> inserting : 1
looks like inserting -> at : 1
like inserting at -> return : 1
inserting at return -> an : 1
at return an -> iterator : 1
return an iterator -> that : 4
return an iterator -> can : 1
newly inserted typename -> typename : 1
inserted typename typename -> const : 1
typename const allocate -> the : 1
const allocate the -> new : 1
allocate the new -> link : 1
the new link -> before : 1
new link before -> changing : 1
link before changing -> any : 1
before changing any -> if : 1
changing any if -> newitem : 1
any if newitem -> throws : 1
if newitem throws -> an : 1
newitem throws an -> the : 1
an the list -> is : 1
list is not -> item : 1
is not item -> if : 1
is not item -> ri : 1
not item if -> at : 1
item if at -> end : 1
if at end -> if : 1
at end if -> empty : 1
end if empty -> list : 1
if empty list -> else : 1
empty list else -> else : 1
list else else -> if : 1
else else if -> new : 1
else if new -> head : 1
if new head -> of : 1
new head of -> list : 1
head of list -> else : 1
of list else -> return : 1
list else return -> erase : 1
else return erase -> the : 1
return erase the -> item : 1
erase the item -> at : 1
item at all -> erasures : 1
at all erasures -> come : 1
all erasures come -> here : 1
erasures come here -> if : 1
come here if -> erasing : 1
here if erasing -> update : 1
if erasing update -> if : 1
erasing update if -> erasing : 1
update if erasing -> the : 1
if erasing the -> last : 1
erasing the last -> item : 1
erasing the last -> element : 1
in the update -> update : 1
the update update -> the : 1
update update the -> iterator : 1
update the iterator -> to : 1
the iterator to -> point : 1
iterator to point -> to : 1
to point to -> the : 3
to point to -> a : 1
to point to -> when : 1
to point to -> one : 2
to point to -> uninitialized : 1
to the node -> after : 1
to the node -> before : 1
the node after -> the : 1
node after the -> one : 1
after the one -> being : 1
the one being -> typename : 1
one being typename -> typename : 1
being typename typename -> item : 1
typename item if -> else : 1
item if else -> if : 1
if return comparison -> functions : 1
return comparison functions -> are : 1
comparison functions are -> bool : 1
functions are bool -> const : 1
are bool const -> return : 1
const return holds -> you : 1
return holds you -> need : 1
holds you need -> to : 1
to know how -> to : 1
how to add -> stuff : 1
to add stuff -> to : 1
add stuff to -> a : 1
stuff to a -> remove : 1
to a remove -> stuff : 1
a remove stuff -> from : 1
remove stuff from -> a : 1
stuff from a -> find : 1
from a find -> stuff : 1
a find stuff -> in : 1
find stuff in -> a : 1
stuff in a -> and : 1
a and so -> type : 1
and so type -> type : 1
so type type -> container : 1
type type container -> stores : 1
type container stores -> values : 1
container stores values -> and : 1
stores values and -> imposes : 1
values and imposes -> certain : 1
and imposes certain -> restrictions : 1
imposes certain restrictions -> on : 1
certain restrictions on -> the : 1
restrictions on the -> most : 1
on the most -> the : 1
the most the -> value : 1
most the value -> must : 1
must be copyable -> and : 1
be copyable and -> the : 1
copyable and the -> result : 1
operator must be -> an : 1
operator must be -> parameter : 1
operator must be -> a : 1
be an exact -> copy : 1
an exact copy -> of : 2
exact copy of -> the : 2
of the that -> you : 1
of the that -> if : 1
of the that -> it : 1
of the that -> is : 1
the that you -> cannot : 1
cannot store objects -> in : 1
container because copies -> are : 1
because copies are -> not : 1
copies are not -> exact : 1
are not exact -> a : 1
not exact a -> sequence : 1
exact a sequence -> is : 1
sequence is used -> to : 1
used to compare -> objects : 1
used to compare -> function : 1
used to compare -> the : 3
used to compare -> in : 1
to compare objects -> when : 1
compare objects when -> if : 1
objects when if -> you : 1
when if you -> compare : 1
if you compare -> entire : 1
you compare entire -> containers : 1
compare entire containers -> with : 1
entire containers with -> any : 1
containers with any -> relational : 1
with any relational -> the : 1
any relational the -> value : 1
relational the value -> types : 1
the value types -> must : 1
value types must -> also : 1
types must also -> support : 1
must also support -> all : 1
also support all -> the : 1
support all the -> relational : 1
all the relational -> operators : 1
all the relational -> based : 1
relational operators are -> defined : 1
operators are defined -> in : 1
operators are defined -> as : 2
are defined in -> terms : 1
are defined in -> the : 1
defined in terms -> of : 1
of and an -> associative : 1
of and an -> implementation : 1
and an associative -> values : 1
an associative values -> are : 1
associative values are -> stored : 1
values are stored -> in : 1
are stored in -> ascending : 1
are stored in -> if : 7
are stored in -> including : 3
are stored in -> is : 1
are stored in -> a : 2
stored in ascending -> order : 1
ascending order according -> to : 1
order according to -> a : 1
to a comparison -> function : 1
a comparison function -> or : 2
a comparison function -> to : 1
functor that you -> the : 1
that you the -> default : 1
you the default -> is : 1
default is which -> uses : 1
default is which -> is : 3
is which uses -> two : 1
which uses two -> objects : 1
uses two objects -> a : 1
two objects a -> and : 1
objects a and -> b : 1
b are considered -> to : 1
be equal when -> a : 1
equal when a -> b : 1
when a b -> is : 1
a b is -> false : 1
b is false -> and : 1
is false and -> b : 1
is false and -> is : 1
false and b -> a : 1
and b a -> is : 1
b a is -> so : 1
a is so -> there : 1
is so there -> is : 1
need for add -> an : 1
for add an -> item : 1
add an item -> to : 1
an item to -> a : 1
item to a -> call : 1
item to a -> container : 1
to a call -> an : 1
a call an -> member : 2
call an member -> sequence : 1
call an member -> all : 1
an member sequence -> containers : 1
member sequence containers -> might : 1
sequence containers might -> also : 1
containers might also -> have : 1
might also have -> or : 1
also have or -> to : 1
have or to -> insert : 1
or to insert -> an : 1
to insert an -> item : 1
insert an item -> at : 1
an item at -> the : 2
an item at -> a : 1
an item at -> any : 1
item at the -> beginning : 1
item at the -> nth : 1
item at the -> top : 2
the beginning or -> end : 3
beginning or end -> of : 3
or end of -> the : 4
the the and -> members : 1
the the and -> instantiations : 1
the and members -> exist : 1
the and members -> in : 1
the and members -> are : 2
and members exist -> only : 1
members exist only -> if : 1
exist only if -> they : 1
if they can -> be : 1
implemented in constant -> for : 1
in constant for -> does : 1
constant for does -> not : 1
not have container -> has : 1
have container has -> an : 1
container has an -> in : 1
has an in -> which : 1
iterator and is -> the : 1
the item to -> a : 1
the item to -> which : 2
to a container -> inserts : 1
to a container -> that : 1
a container inserts -> the : 1
container inserts the -> item : 1
inserts the item -> before : 1
inserts the item -> the : 1
the item before -> the : 1
item before the -> indicated : 1
item before the -> a : 1
before the indicated -> associative : 1
the indicated associative -> containers : 1
indicated associative containers -> treat : 1
associative containers treat -> the : 1
containers treat the -> iterator : 1
treat the iterator -> as : 1
the iterator as -> a : 1
iterator as a -> if : 1
if the item -> belongs : 1
if the item -> to : 1
the item belongs -> immediately : 1
item belongs immediately -> after : 1
belongs immediately after -> the : 1
after the performance -> is : 5
the performance is -> constant : 6
the performance is -> more : 1
the performance is -> at : 1
the performance is -> const : 1
the performance is -> linear : 1
the performance is -> exactly : 1
the performance is -> is : 1
the performance is -> the : 1
the performance is -> log : 1
the performance is -> comparisons : 1
the performance is -> use : 2
the performance is -> it : 4
the performance is -> third : 2
performance is constant -> instead : 1
performance is constant -> when : 2
performance is constant -> over : 4
is constant instead -> of : 1
constant instead of -> containers : 1
constant instead of -> a : 1
instead of containers -> have : 1
containers have additional -> for : 1
containers have additional -> functions : 1
have additional for -> inserting : 1
additional for inserting -> many : 1
for inserting many -> copies : 1
inserting many copies -> of : 1
many copies of -> an : 1
copies of an -> item : 1
of an item -> at : 1
item at a -> position : 1
at a position -> and : 1
a position and -> for : 1
position and for -> copying : 1
and for copying -> a : 2
for copying a -> range : 2
copying a range -> to : 1
copying a range -> into : 1
a range to -> a : 1
a range to -> prepare : 3
a range to -> the : 1
a range to -> remove : 3
a range to -> add : 1
a range to -> form : 2
a range to -> convert : 1
a range to -> properly : 1
range to a -> given : 1
range to a -> random : 1
to a given -> associative : 1
to a given -> a : 2
a given associative -> containers : 1
given associative containers -> have : 1
associative containers have -> additional : 1
have additional functions -> for : 1
additional functions for -> inserting : 1
functions for inserting -> an : 1
for inserting an -> item : 1
inserting an item -> no : 1
an item no -> positional : 1
item no positional -> and : 1
no positional and -> for : 1
positional and for -> copying : 1
a range into -> the : 1
a range into -> random : 1
a range into -> heap : 1
a range into -> even : 4
a range into -> a : 1
range into the -> remove : 1
range into the -> range : 2
range into the -> new : 4
into the remove -> an : 1
the remove an -> item : 1
remove an item -> from : 1
an item from -> a : 2
from a call -> an : 1
from a call -> to : 1
an member all -> containers : 1
member all containers -> have : 1
all containers have -> at : 1
containers have at -> least : 1
least two one -> that : 1
two one that -> takes : 1
takes a single -> iterator : 1
takes a single -> as : 2
takes a single -> if : 1
a single iterator -> to : 1
single iterator to -> delete : 1
iterator to delete -> the : 1
to delete the -> item : 2
delete the item -> that : 1
delete the item -> ri : 1
item that the -> iterator : 1
item that the -> reverse : 2
that the iterator -> points : 2
iterator points and -> another : 1
points and another -> two : 1
and another two -> iterators : 1
another two iterators -> to : 1
two iterators to -> delete : 1
iterators to delete -> every : 1
to delete every -> item : 1
delete every item -> in : 1
every item in -> the : 6
every item in -> a : 1
in the associative -> containers : 1
associative containers also -> have : 1
containers also have -> an : 1
also have an -> function : 1
have an function -> that : 1
an function that -> takes : 1
takes a value -> as : 1
takes a value -> object : 1
an argument to -> erase : 1
an argument to -> even : 1
an argument to -> the : 1
an argument to -> or : 1
argument to erase -> all : 1
to erase all -> matching : 1
to erase all -> elements : 1
to erase all -> items : 1
to erase all -> duplicate : 1
erase all matching -> standard : 1
all matching standard -> containers : 1
matching standard containers -> are : 1
the standard iterators -> later : 1
standard iterators later -> in : 1
iterators later in -> this : 1
in this and -> standard : 1
this and standard -> algorithms : 1
and standard algorithms -> later : 1
standard algorithms later -> in : 1
algorithms later in -> this : 1
this the standard -> algorithms : 1
this the standard -> also : 1
standard algorithms offer -> much : 1
algorithms offer much -> more : 1
offer much more -> functionality : 1
much more functionality -> than : 1
more functionality than -> the : 2
functionality than the -> member : 1
functionality than the -> c : 1
the member but -> they : 1
member but they -> also : 1
but they also -> have : 1
they also have -> in : 1
also have in -> the : 1
have in the -> standard : 1
standard algorithms cannot -> insert : 1
algorithms cannot insert -> or : 1
cannot insert or -> erase : 1
insert or erase -> for : 1
or erase for -> among : 1
erase for among -> the : 1
for among the -> standard : 1
for among the -> requirements : 1
among the standard -> algorithms : 1
standard algorithms are -> and : 1
standard algorithms are -> declared : 1
algorithms are and -> their : 1
are and their -> names : 1
and their names -> are : 1
names are suggestive -> but : 1
are suggestive but -> they : 1
suggestive but they -> do : 1
but they do -> not : 1
do not remove -> anything : 1
do not remove -> trailing : 1
not remove anything -> from : 1
remove anything from -> the : 1
anything from the -> they : 1
from the they -> rearrange : 1
the they rearrange -> the : 1
they rearrange the -> elements : 1
rearrange the elements -> of : 1
the container so -> that : 1
container so that -> the : 1
that the items -> to : 1
that the items -> in : 1
the items to -> retain : 1
the items to -> the : 1
items to retain -> are : 1
to retain are -> at : 1
retain are at -> the : 1
at the they -> return : 1
the they return -> an : 1
they return an -> iterator : 1
first item to -> be : 1
item to be -> call : 1
to be call -> with : 1
be call with -> this : 1
call with this -> iterator : 1
with this iterator -> as : 1
this iterator as -> the : 1
iterator as the -> first : 1
first argument and -> as : 1
first argument and -> a : 1
argument and as -> the : 1
and as the -> second : 1
and as the -> multiplication : 1
and as the -> allocation : 1
as the second -> to : 1
as the second -> in : 1
as the second -> returning : 1
as the second -> argument : 3
as the second -> version : 1
the second to -> erase : 1
second to erase -> the : 1
to erase the -> items : 1
to erase the -> unwanted : 1
erase the items -> from : 1
items from the -> this : 1
items from the -> range : 2
items from the -> beginning : 1
items from the -> items : 1
the this process -> is : 1
this process is -> needed : 1
process is needed -> because : 1
is needed because -> an : 1
needed because an -> iterator : 1
because an iterator -> cannot : 1
an iterator cannot -> erase : 1
iterator cannot erase -> the : 1
cannot erase the -> only : 1
erase the only -> way : 1
only way to -> erase : 2
only way to -> give : 1
only way to -> discover : 1
only way to -> set : 1
way to erase -> an : 2
to erase an -> item : 1
to erase an -> element : 1
erase an item -> from : 1
from a container -> is : 2
is to call -> a : 1
is to call -> one : 1
is to call -> to : 1
is to call -> and : 1
is to call -> function : 1
standard algorithms do -> not : 1
algorithms do not -> have : 1
algorithms do not -> permit : 1
algorithms do not -> present : 1
not have access -> to : 1
the only to -> matching : 1
only to matching -> items : 1
to matching items -> from : 1
matching items from -> a : 2
a sequence shows -> how : 1
sequence shows how -> to : 1
shows how to -> implement : 1
shows how to -> use : 8
shows how to -> read : 1
shows how to -> expand : 1
shows how to -> find : 1
shows how to -> remove : 2
shows how to -> change : 1
shows how to -> store : 1
how to implement -> a : 1
implement a generic -> function : 1
a generic function -> that : 1
generic function that -> calls : 1
function that calls -> and : 1
that calls and -> then : 1
calls and then -> the : 1
then the member -> matching : 1
the member matching -> items : 1
member matching items -> from : 1
a sequence erase -> all : 1
sequence erase all -> items : 1
items from container -> c : 1
from container c -> that : 1
container c that -> are : 1
c that are -> equal : 1
that are equal -> to : 6
that are equal -> or : 1
are equal to -> void : 1
are equal to -> is : 1
are equal to -> from : 2
are equal to -> the : 1
are equal to -> are : 1
are equal to -> unwieldy : 1
are equal to -> each : 1
equal to void -> const : 1
to void const -> typename : 1
void const typename -> typename : 1
const typename typename -> void : 1
const typename typename -> bool : 1
const typename typename -> fwditer : 3
const typename typename -> typename : 3
void pred int -> erase : 1
pred int erase -> all : 1
int erase all -> items : 1
all items erase -> all : 1
items erase all -> items : 1
all items standard -> algorithms : 1
items standard algorithms -> provide : 1
standard algorithms provide -> several : 1
algorithms provide several -> ways : 1
provide several ways -> to : 1
several ways to -> search : 1
several ways to -> do : 1
ways to search -> for : 1
to search for -> items : 1
to search for -> in : 1
to search for -> is : 2
search for items -> in : 1
for items in -> a : 1
a and these -> algorithms : 1
and these algorithms -> essentially : 1
these algorithms essentially -> perform : 1
algorithms essentially perform -> a : 1
essentially perform a -> linear : 1
perform a linear -> search : 1
a linear search -> of : 1
linear search of -> a : 1
search of a -> if : 1
of a if -> you : 1
if you know -> exactly : 1
know exactly which -> item : 1
exactly which item -> you : 1
which item you -> you : 1
item you you -> can : 1
you you can -> search : 1
you you can -> use : 1
you can search -> an : 1
can search an -> associative : 1
search an associative -> container : 1
associative container much -> faster : 1
container much faster -> by : 1
much faster by -> calling : 1
faster by calling -> the : 1
calling the member -> for : 1
the member for -> suppose : 1
member for suppose -> you : 1
write a generic -> that : 1
a generic that -> tells : 1
generic that tells -> you : 1
that tells you -> whether : 1
tells you whether -> a : 1
whether a container -> contains : 3
a container contains -> at : 1
a container contains -> an : 2
container contains at -> least : 1
contains at least -> one : 1
least one instance -> of : 1
one instance of -> an : 1
one instance of -> a : 1
instance of an -> whether : 1
of an whether -> a : 1
an whether a -> container : 1
container contains an -> shows : 1
container contains an -> need : 1
contains an shows -> one : 1
an shows one -> which : 1
shows one which -> relies : 1
one which relies -> on : 1
which relies on -> to : 1
relies on to -> implement : 1
on to implement -> this : 1
implement this whether -> a : 1
this whether a -> container : 1
this whether a -> locale : 1
contains an need -> a : 1
an need a -> type : 1
need a type -> trait : 1
a type trait -> to : 2
trait to tell -> us : 1
to tell us -> which : 1
tell us which -> containers : 1
us which containers -> are : 1
which containers are -> associative : 1
containers are associative -> and : 1
are associative and -> which : 1
associative and which -> are : 1
which are not -> struct : 1
which are not -> the : 1
which are not -> interpreted : 1
are not struct -> struct : 1
not struct struct -> struct : 1
struct struct struct -> typename : 1
struct struct typename -> struct : 1
struct typename struct -> typedef : 1
typename struct typedef -> ditto : 2
typename struct typedef -> typedef : 2
typename struct typedef -> arg : 1
struct typedef ditto -> for : 2
typedef ditto for -> vector : 1
typedef ditto for -> and : 1
ditto for vector -> and : 1
for vector and -> deque : 1
vector and deque -> typename : 1
and deque typename -> typename : 1
deque typename typename -> struct : 1
ditto for and -> multimap : 1
for and multimap -> typename : 1
and multimap typename -> inline : 1
multimap typename inline -> bool : 1
typename inline bool -> const : 2
const return typename -> inline : 1
return typename inline -> bool : 1
const return here -> is : 1
return here is -> the : 1
here is the -> actual : 1
here is the -> complete : 1
is the actual -> contains : 1
is the actual -> number : 2
the actual contains -> it : 1
actual contains it -> dispatches : 1
contains it dispatches -> to : 1
it dispatches to -> picking : 1
dispatches to picking -> the : 1
to picking the -> appropriate : 1
picking the appropriate -> overloaded : 1
the appropriate overloaded -> function : 1
appropriate overloaded function -> depending : 1
overloaded function depending -> on : 1
function depending on -> the : 1
the container typename -> const : 1
container typename const -> return : 1
const return you -> can : 1
return you can -> iterators : 1
you can iterators -> are : 1
can iterators are -> important : 1
iterators are important -> for : 1
are important for -> using : 1
important for using -> you : 1
using you need -> them : 1
you need them -> to : 1
need them to -> insert : 1
them to insert -> at : 1
to insert at -> a : 1
insert at a -> specific : 1
at a specific -> identify : 1
at a specific -> position : 1
a specific identify -> an : 1
specific identify an -> item : 1
identify an item -> for : 1
an item for -> or : 1
item for or -> specify : 1
for or specify -> ranges : 1
or specify ranges -> for : 1
specify ranges for -> the : 1
ranges for the -> next : 1
next section discusses -> iterators : 1
section discusses iterators -> in : 1
discusses iterators in -> more : 1
iterators in more -> is : 1
more is an -> abstraction : 1
is an abstraction -> of : 1
abstraction of a -> pointer : 2
abstraction of a -> the : 1
a pointer used -> for : 1
pointer used for -> pointing : 1
used for pointing -> into : 1
for pointing into -> containers : 1
pointing into containers -> and : 1
into containers and -> other : 1
containers and other -> an : 1
and other an -> ordinary : 1
other an ordinary -> pointer : 1
ordinary pointer can -> point : 1
pointer can point -> to : 1
pointer can point -> past : 1
can point to -> different : 1
can point to -> a : 2
can point to -> the : 1
can point to -> an : 2
can point to -> any : 1
can point to -> one : 1
to different elements -> in : 1
different elements in -> an : 1
the operator advances -> the : 1
the operator advances -> to : 1
operator advances the -> pointer : 1
advances the pointer -> to : 1
next and the -> operator : 1
the operator dereferences -> the : 1
operator dereferences the -> pointer : 1
dereferences the pointer -> to : 1
pointer to return -> a : 1
return a value -> from : 1
from the iterators -> generalize : 1
the iterators generalize -> the : 1
iterators generalize the -> concept : 1
generalize the concept -> so : 1
the concept so -> that : 1
concept so that -> the : 1
that the same -> operators : 1
that the same -> format : 1
the same operators -> have : 1
same operators have -> the : 1
the same behavior -> for : 1
same behavior for -> any : 1
behavior for any -> even : 1
for any even -> trees : 1
any even trees -> and : 1
even trees and -> see : 1
trees and see -> the : 1
see the section -> of : 1
see the section -> later : 1
of for more -> are : 1
of for more -> information : 1
more are five -> categories : 1
are five categories -> of : 2
five categories of -> you : 1
five categories of -> one : 1
categories of you -> to : 1
of you to -> read : 1
you to read -> a : 1
read a sequence -> in : 1
a sequence in -> one : 2
sequence in one -> the : 2
in one the -> operator : 1
in one the -> increment : 1
one the operator -> advances : 1
operator advances to -> the : 4
advances to the -> next : 4
the next but -> there : 4
next but there -> is : 4
is no decrement -> the : 2
is no decrement -> you : 2
no decrement the -> dereference : 2
decrement the dereference -> operator : 2
the dereference operator -> returns : 1
the dereference operator -> does : 1
dereference operator returns -> an : 1
operator returns an -> not : 1
returns an not -> an : 1
an not an -> so : 1
not an so -> you : 1
an so you -> can : 2
an so you -> could : 1
can read elements -> but : 2
read elements but -> not : 2
elements but not -> modify : 2
but not modify -> you : 1
but not modify -> one : 1
not modify you -> to : 1
modify you to -> write : 1
write a sequence -> in : 1
one the increment -> operator : 1
the increment operator -> advances : 3
the increment operator -> is : 3
increment operator advances -> to : 3
no decrement you -> can : 2
decrement you can -> dereference : 2
you can dereference -> an : 2
can dereference an -> element : 2
dereference an element -> only : 2
an element only -> to : 2
element only to -> assign : 2
only to assign -> a : 2
to assign a -> value : 2
assign a value -> to : 3
value to you -> cannot : 2
to you cannot -> compare : 2
to you cannot -> nest : 1
to you cannot -> write : 1
you cannot compare -> output : 2
cannot compare output -> unidirectional : 1
cannot compare output -> like : 1
compare output unidirectional -> access : 1
output unidirectional access -> to : 1
unidirectional access to -> a : 2
access to a -> you : 2
access to a -> sequence : 1
refer to and -> assign : 1
refer to and -> for : 3
refer to and -> describe : 1
to and assign -> to : 1
and assign to -> an : 1
assign to an -> item : 1
an item as -> many : 1
item as many -> times : 1
as many times -> as : 2
many times as -> you : 1
many times as -> it : 1
times as you -> you : 1
as you you -> can : 1
use a forward -> iterator : 2
a forward iterator -> wherever : 1
a forward iterator -> but : 1
a forward iterator -> is : 2
a forward iterator -> anywhere : 1
forward iterator wherever -> an : 1
iterator wherever an -> input : 1
wherever an input -> iterator : 1
an input iterator -> is : 3
an input iterator -> by : 1
an input iterator -> around : 1
an input iterator -> to : 1
input iterator is -> required : 2
input iterator is -> not : 1
iterator is required -> or : 2
is required or -> wherever : 1
is required or -> where : 1
required or wherever -> an : 1
or wherever an -> output : 1
wherever an output -> iterator : 1
an output iterator -> is : 2
an output iterator -> that : 5
an output iterator -> because : 2
an output iterator -> around : 1
an output iterator -> to : 1
output iterator is -> to : 1
output iterator is -> an : 1
output iterator is -> a : 1
iterator is to -> a : 1
iterator is to -> derive : 1
to a forward -> iterator : 1
forward iterator but -> also : 1
iterator but also -> supports : 2
but also supports -> the : 2
also supports the -> operator : 2
supports the operator -> to : 2
operator to move -> the : 2
move the iterator -> back : 1
move the iterator -> backward : 1
the iterator back -> one : 1
iterator back one -> to : 1
back one to -> a : 1
one to a -> bidirectional : 1
to a bidirectional -> iterator : 1
a bidirectional iterator -> but : 1
a bidirectional iterator -> can : 1
a bidirectional iterator -> when : 1
a bidirectional iterator -> iterator : 1
bidirectional iterator but -> also : 1
operator to any -> index : 1
to any index -> in : 1
any index in -> the : 3
index in the -> you : 2
index in the -> performance : 1
index in the -> new : 1
index in the -> original : 1
index in the -> by : 1
can add or -> subtract : 2
can add or -> remove : 1
add or subtract -> an : 2
or subtract an -> integer : 2
subtract an integer -> to : 2
integer to move -> a : 2
to move a -> random : 2
move a random -> access : 2
a random access -> iterator : 5
a random access -> or : 2
a random access -> you : 1
a random access -> in : 1
a random access -> even : 1
a random access -> with : 4
a random access -> class : 2
a random access -> public : 1
a random access -> but : 1
random access iterator -> by : 2
random access iterator -> is : 2
random access iterator -> can : 2
random access iterator -> where : 1
random access iterator -> when : 1
random access iterator -> to : 1
access iterator by -> more : 2
iterator by more -> than : 2
than one position -> at : 2
one position at -> a : 2
position at a -> subtracting : 2
at a subtracting -> two : 2
a subtracting two -> random : 2
subtracting two random -> access : 2
two random access -> iterators : 2
access iterators yields -> an : 2
iterators yields an -> integer : 2
yields an integer -> distance : 2
an integer distance -> between : 2
integer distance between -> a : 2
distance between a -> random : 2
between a random -> access : 2
access iterator is -> most : 2
iterator is most -> like : 2
is most like -> a : 2
most like a -> conventional : 2
like a conventional -> and : 1
like a conventional -> in : 1
a conventional and -> a : 1
conventional and a -> pointer : 1
and a pointer -> can : 1
and a pointer -> to : 2
and a pointer -> into : 1
a pointer can -> be : 2
a pointer can -> point : 1
as a random -> access : 4
random access or -> random : 2
access or random -> access : 2
or random access -> iterator : 3
or random access -> iterators : 1
or random access -> you : 1
or random access -> decrease : 1
access iterator can -> be : 2
iterator can be -> a : 6
iterator can be -> the : 2
be a dereferencing -> a : 2
a dereferencing a -> yields : 2
dereferencing a yields -> a : 2
a yields a -> constant : 2
yields a constant -> but : 1
yields a constant -> rvalue : 1
a constant but -> otherwise : 1
constant but otherwise -> behaves : 1
but otherwise behaves -> as : 1
otherwise behaves as -> described : 1
behaves as described -> see : 1
as described see -> later : 1
described see later -> in : 1
chapter for most -> important : 1
chapter for most -> of : 1
for most important -> point : 1
most important point -> to : 1
important point to -> remember : 1
point to remember -> about : 1
to remember about -> is : 1
remember about is -> that : 1
about is that -> they : 1
is that they -> are : 1
is that they -> do : 2
they are inherently -> like : 1
are inherently like -> an : 1
inherently like an -> iterator : 1
like an iterator -> can : 1
an iterator can -> point : 2
iterator can point -> to : 3
a container that -> has : 1
a container that -> holds : 1
a container that -> stores : 2
a container that -> supports : 1
a container that -> uses : 1
container that has -> been : 1
container that has -> constant : 1
that has been -> destroyed : 1
that has been -> you : 1
that has been -> bound : 1
has been destroyed -> or : 1
been destroyed or -> to : 1
destroyed or to -> an : 1
or to an -> element : 1
an element that -> has : 1
element that has -> been : 1
has been you -> can : 1
been you can -> advance : 1
you can advance -> an : 1
can advance an -> iterator : 1
advance an iterator -> past : 1
an iterator past -> the : 1
iterator past the -> end : 1
the container the -> same : 1
the container the -> type : 1
container the same -> way : 1
same way a -> pointer : 1
way a pointer -> can : 1
can point past -> the : 1
point past the -> end : 1
end of an -> with : 1
an with a -> little : 1
an with a -> if : 1
an with a -> string : 1
with a little -> care : 1
a little care -> and : 1
little care and -> iterators : 1
care and iterators -> are : 1
and iterators are -> safe : 1
and iterators are -> especially : 1
iterators are safe -> to : 1
are safe to -> first : 1
safe to first -> key : 1
to first key -> to : 1
first key to -> safe : 1
key to safe -> use : 1
to safe use -> of : 1
safe use of -> iterators : 1
use of iterators -> is : 1
iterators is to -> make : 1
is to make -> sure : 1
make sure a -> program : 1
sure a program -> never : 1
a program never -> an : 1
program never an -> iterator : 1
never an iterator -> that : 1
iterator that marks -> the : 1
that marks the -> end : 1
marks the end -> of : 2
of a two -> iterators : 1
a two iterators -> can : 1
two iterators can -> denote : 1
iterators can denote -> a : 1
can denote a -> range : 1
denote a range -> of : 1
range of typically -> in : 1
of typically in -> a : 1
typically in a -> one : 1
in a one -> iterator : 1
a one iterator -> points : 1
one iterator points -> to : 1
of the range -> and : 1
of the range -> by : 1
of the range -> must : 1
of the range -> of : 1
of the range -> is : 2
of the range -> for : 1
of the range -> into : 1
of the range -> to : 1
of the range -> that : 2
range and another -> marks : 1
and another marks -> the : 1
another marks the -> end : 1
the range by -> pointing : 1
range by pointing -> to : 1
by pointing to -> a : 1
pointing to a -> position : 1
pointing to a -> different : 4
a position one -> past : 1
position one past -> the : 1
last element in -> the : 4
element in the -> the : 2
element in the -> sorted : 1
element in the -> entire : 1
element in the -> range : 3
element in the -> a : 1
element in the -> performing : 1
element in the -> sequence : 1
element in the -> in : 1
element in the -> that : 1
element in the -> argument : 1
element in the -> original : 1
the the mathematical -> notation : 1
notation of tells -> you : 1
of tells you -> that : 1
tells you that -> the : 1
tells you that -> must : 1
you that the -> item : 1
that the item -> that : 2
points to is -> included : 1
points to is -> excluded : 1
to is included -> in : 1
is included in -> the : 4
included in the -> but : 1
included in the -> same : 1
included in the -> and : 1
included in the -> result : 1
but the item -> that : 1
to is excluded -> from : 1
is excluded from -> the : 2
excluded from the -> program : 1
excluded from the -> ordinary : 1
from the program -> must : 1
must never dereference -> an : 1
never dereference an -> iterator : 1
dereference an iterator -> that : 2
of a range -> because : 1
of a range -> to : 1
a range because -> that : 1
range because that -> iterator : 1
because that iterator -> might : 1
that iterator might -> not : 1
iterator might not -> be : 1
might not be -> it : 1
might not be -> macro : 1
might not be -> large : 1
might not be -> included : 1
not be it -> might : 1
be it might -> be : 1
might be pointing -> to : 1
be pointing to -> one : 1
be pointing to -> a : 4
pointing to one -> past : 3
of the elements -> of : 16
of the elements -> in : 1
elements of a -> for : 1
elements of a -> sequence : 1
elements of a -> reference : 1
elements of a -> string : 1
elements of a -> with : 1
elements of a -> characterized : 1
elements of a -> called : 1
elements of a -> to : 2
elements of a -> at : 1
elements of a -> taken : 1
of a for -> a : 1
of a for -> in : 1
of a for -> subsequent : 1
of a for -> the : 2
a for a -> valid : 1
a for a -> description : 3
for a valid -> iterator : 1
a valid iterator -> can : 1
valid iterator can -> become : 1
iterator can become -> invalid : 1
can become invalid -> and : 1
become invalid and -> therefore : 1
invalid and therefore -> unsafe : 1
and therefore unsafe -> to : 1
therefore unsafe to -> for : 1
unsafe to for -> example : 1
to for example -> if : 1
for example if -> the : 1
example if the -> item : 1
item to which -> the : 1
item to which -> you : 1
which the iterator -> points : 1
iterator points is -> the : 1
points is the -> detailed : 1
is the detailed -> descriptions : 1
you this information -> for : 1
this information for -> each : 1
information for each -> container : 1
for each container -> in : 1
each container in -> iterators : 1
container in iterators -> for : 1
in iterators for -> the : 1
iterators for the -> containers : 2
for the containers -> become : 2
the containers become -> invalid : 2
containers become invalid -> only : 1
containers become invalid -> when : 1
become invalid only -> when : 1
invalid only when -> they : 1
when they point -> to : 1
they point to -> an : 1
they point to -> the : 2
to an erased -> iterators : 1
an erased iterators -> for : 1
erased iterators for -> the : 1
become invalid when -> the : 2
become invalid when -> they : 1
invalid when the -> underlying : 1
invalid when the -> internal : 1
when the underlying -> array : 1
the underlying array -> is : 1
underlying array is -> which : 1
array is which -> might : 1
array is which -> can : 1
is which might -> happen : 1
which might happen -> for : 1
might happen for -> any : 1
happen for any -> insertion : 1
for any insertion -> and : 1
any insertion and -> for : 1
insertion and for -> some : 1
and for some -> are : 1
for some are -> often : 1
some are often -> used : 1
used with but -> they : 1
with but they -> have : 1
they have many -> more : 1
have many more -> you : 1
many more you -> can : 1
more you can -> define : 1
more you can -> usually : 1
can define iterators -> for : 1
define iterators for -> almost : 1
iterators for almost -> any : 1
for almost any -> sequence : 1
almost any sequence -> of : 1
any sequence of -> the : 1
any sequence of -> preprocessor : 1
sequence of the -> standard : 1
sequence of the -> header : 1
sequence of the -> bitwise : 1
sequence of the -> number : 1
sequence of the -> corresponding : 1
sequence of the -> conversion : 1
sequence of the -> reverse : 1
sequence of the -> characters : 1
library includes several -> examples : 1
includes several examples -> of : 1
examples of most -> notably : 1
of most notably -> iterators : 1
most notably iterators -> and : 1
notably iterators and -> the : 1
iterators and the -> lowest : 1
and the lowest -> a : 1
the lowest a -> stream : 1
lowest a stream -> is : 1
a stream is -> nothing : 1
a stream is -> also : 2
a stream is -> equal : 1
stream is nothing -> more : 1
is nothing more -> than : 1
nothing more than -> a : 1
than a sequence -> of : 1
sequence of at -> a : 1
of at a -> slightly : 1
at a slightly -> higher : 1
a slightly higher -> you : 1
slightly higher you -> can : 1
higher you can -> think : 1
of a stream -> as : 1
of a stream -> especially : 1
stream as a -> sequence : 1
sequence of which -> would : 1
of which would -> be : 1
which would be -> read : 1
would be read -> with : 1
be read with -> or : 1
read with or -> written : 1
with or written -> with : 1
or written with -> the : 1
written with the -> standard : 1
includes the following -> and : 1
following and streams -> with : 1
and streams with -> streambuf : 1
streams with streambuf -> shows : 1
streams with streambuf -> typename : 1
with streambuf shows -> how : 1
streambuf shows how -> to : 3
to use iterators -> to : 2
use iterators to -> copy : 2
iterators to copy -> one : 1
iterators to copy -> the : 1
to copy one -> stream : 1
copy one stream -> to : 1
one stream to -> streams : 1
stream to streams -> with : 1
with streambuf typename -> void : 1
streambuf typename void -> kind : 1
typename void kind -> of : 1
void kind of -> output : 1
kind of output -> iterator : 1
of output iterator -> is : 1
iterator is an -> which : 1
iterator is an -> the : 1
an which inserts -> items : 1
which inserts items -> into : 1
inserts items into -> a : 1
items into a -> sequence : 1
into a sequence -> the : 1
a sequence the -> insert : 1
sequence the insert -> iterator : 1
the insert iterator -> requires : 1
insert iterator requires -> a : 1
iterator requires a -> container : 1
requires a container -> and : 1
a container and -> an : 1
a container and -> return : 1
container and an -> optional : 1
an optional iterator -> to : 1
optional iterator to -> specify : 1
iterator to specify -> the : 1
specify the position -> where : 1
the position where -> the : 3
position where the -> new : 1
position where the -> next : 2
where the new -> items : 1
the new items -> should : 1
new items should -> be : 1
items should be -> you : 1
should be you -> can : 1
you can insert -> at : 1
you can insert -> and : 3
can insert at -> the : 1
insert at the -> back : 1
at the back -> of : 1
the back of -> a : 1
back of a -> sequence : 1
a sequence with -> at : 1
a sequence with -> or : 1
a sequence with -> successive : 1
sequence with at -> the : 1
with at the -> front : 1
at the front -> of : 2
the front of -> a : 2
front of a -> sequence : 1
front of a -> number : 1
front of a -> class : 1
sequence with or -> at : 1
with or at -> a : 1
or at a -> specific : 1
a specific position -> in : 1
specific position in -> any : 1
position in any -> kind : 1
in any kind -> of : 1
kind of container -> with : 1
of container with -> each : 1
container with each -> of : 1
with each of -> these : 1
each of these -> iterator : 1
each of these -> functions : 1
each of these -> concepts : 1
of these iterator -> class : 1
these iterator class -> templates : 1
iterator class templates -> has : 1
class templates has -> an : 1
templates has an -> associated : 1
has an associated -> function : 1
has an associated -> stream : 1
an associated function -> template : 1
associated function template -> that : 1
function template that -> creates : 1
template that creates -> the : 1
that creates the -> iterator : 1
creates the iterator -> for : 1
the iterator for -> you : 1
iterator for you -> and : 1
for you and -> lets : 1
you and lets -> the : 1
and lets the -> compiler : 1
lets the compiler -> deduce : 1
deduce the container -> numbers : 1
the container numbers -> in : 1
container numbers in -> a : 1
numbers in a -> shows : 1
numbers in a -> int : 1
how to read -> a : 1
read a series -> of : 2
numbers from a -> store : 1
from a store -> them : 1
a store them -> in : 1
store them in -> reverse : 1
them in reverse -> order : 1
reverse order in -> a : 1
order in a -> and : 1
a and print -> the : 1
print the one -> number : 2
print the one -> per : 1
the one number -> per : 3
one number per -> numbers : 1
one number per -> simplest : 1
one number per -> by : 1
number per numbers -> in : 1
per numbers in -> a : 1
using namespace use -> the : 1
namespace use the -> write : 1
use the write -> the : 1
the write the -> one : 1
write the one -> number : 1
number per simplest -> way : 1
per simplest way -> to : 1
your own iterator -> is : 1
your own iterator -> see : 1
own iterator is -> to : 1
is to derive -> from : 1
derive from the -> class : 1
the class specify -> the : 1
class specify the -> iterator : 1
specify the iterator -> category : 1
iterator category as -> the : 1
category as the -> first : 1
first template parameter -> and : 1
parameter and the -> item : 1
and the item -> type : 1
the item type -> as : 1
item type as -> the : 1
the second in -> most : 1
the second in -> the : 2
second in most -> you : 1
use the default -> template : 1
use the default -> constructor : 1
the default template -> arguments : 1
for the remaining -> in : 1
the remaining in -> for : 1
remaining in for -> the : 1
for the container -> from : 1
for the container -> to : 2
for the container -> a : 1
the container from -> a : 1
container from a -> custom : 1
from a custom -> a : 1
custom a needs -> an : 1
a needs an -> and : 1
needs an and -> a : 1
and a the -> only : 1
and a the -> error : 1
a the only -> difference : 2
a the only -> way : 1
that a returns -> rvalues : 1
a returns rvalues -> instead : 1
returns rvalues instead -> of : 1
rvalues instead of -> most : 1
instead of most -> of : 1
of most of -> the : 1
of the iteration -> logic : 1
of the iteration -> i : 1
the iteration logic -> can : 1
iteration logic can -> be : 1
logic can be -> factored : 1
can be factored -> into : 1
be factored into -> a : 1
factored into a -> base : 1
into a base -> a : 1
base a custom -> shows : 1
a custom shows -> and : 1
custom shows and -> is : 1
shows and is -> almost : 1
and is almost -> identical : 1
is almost identical -> to : 1
almost identical to -> so : 1
identical to so -> it : 1
to so it -> is : 1
not a custom -> the : 1
a custom the -> declaration : 1
a custom the -> type : 4
custom the declaration -> for : 1
declaration for is -> nested : 1
for is nested -> in : 1
nested in class -> public : 1
nested in class -> iterator : 1
class public friend -> class : 3
public friend class -> bool : 1
public friend class -> return : 1
public friend class -> compare : 2
friend class bool -> const : 1
friend class bool -> operator : 1
friend class bool -> class : 1
class bool const -> return : 1
class bool const -> template : 6
class bool const -> operator : 6
class bool const -> function : 2
class bool const -> const : 6
class bool const -> bool : 12
const return if -> the : 1
return if the -> iterator : 1
return if the -> most : 1
if the iterator -> a : 1
if the iterator -> points : 1
if the iterator -> is : 3
the iterator a -> pointer : 1
iterator a pointer -> to : 1
the node before -> is : 1
node before is -> needed : 1
before is needed -> to : 1
needed to support -> if : 1
to support if -> the : 1
support if the -> iterator : 1
to the head -> of : 1
the the declaration -> for : 1
declaration for iterator -> is : 1
for iterator is -> nested : 1
iterator is nested -> in : 1
in class iterator -> public : 1
iterator public friend -> class : 1
friend class return -> iterator : 1
class return iterator -> iterator : 1
return iterator iterator -> tmp : 1
iterator iterator tmp -> return : 1
iterator tmp return -> return : 1
tmp return return -> return : 1
return return container -> must : 1
return container must -> provide : 1
container must provide -> an : 1
provide an type -> and : 1
an type and -> a : 1
and a functions -> such : 1
a functions such -> as : 1
functions such as -> and : 1
functions such as -> macro : 1
functions such as -> use : 1
as and return -> when : 1
and return when -> called : 2
return when called -> on : 2
when called on -> a : 2
called on a -> container : 1
called on a -> that : 1
on a container -> and : 1
container and return -> when : 1
on a that -> a : 1
that a is -> quite : 1
a is quite -> different : 1
a constant object -> of : 1
a constant object -> with : 1
constant object of -> type : 1
of type being -> it : 1
type being it -> cannot : 1
being it cannot -> so : 1
it cannot so -> it : 1
cannot so it -> cannot : 1
it cannot advance -> to : 1
cannot advance to -> point : 1
advance to point -> to : 1
a different a -> on : 1
different a on -> the : 1
a on the -> other : 1
other is a -> object : 1
is a object -> of : 1
a object of -> type : 1
a object of -> another : 1
type it is -> not : 1
type it is -> permitted : 1
type it is -> most : 2
not so its -> value : 1
so its value -> can : 1
its value can -> the : 1
value can the -> key : 1
can the key -> difference : 1
difference between and -> is : 4
difference between and -> the : 4
between and is -> that : 4
and is that -> returns : 1
and is that -> the : 1
and is that -> advances : 2
is that returns -> lvalues : 1
that returns lvalues -> of : 1
returns lvalues of -> type : 1
lvalues of type -> and : 1
lvalues of type -> the : 1
and returns unmodifiable -> either : 1
returns unmodifiable either -> rvalues : 1
unmodifiable either rvalues -> or : 1
either rvalues or -> lvalues : 1
rvalues or lvalues -> of : 1
or lvalues of -> type : 1
type the standard -> requires : 1
standard requires that -> a : 1
requires that a -> plain : 1
that a plain -> be : 1
a plain be -> convertible : 1
plain be convertible -> to : 1
be convertible to -> but : 1
be convertible to -> the : 2
be convertible to -> an : 2
be convertible to -> ownership : 1
convertible to but -> not : 1
but not vice -> problem : 1
not vice problem -> is : 1
vice problem is -> that : 1
problem is that -> some : 1
problem is that -> it : 1
problem is that -> is : 1
problem is that -> must : 1
that some members -> of : 1
some members of -> the : 1
standard containers notably -> and : 1
containers notably and -> take : 1
notably and take -> as : 1
and take as -> a : 1
take as a -> not : 1
as a not -> if : 1
a not if -> you : 1
not if you -> have : 1
if you have -> a : 2
have a you -> cannot : 1
a you cannot -> use : 2
it as an -> insertion : 1
as an insertion -> or : 1
an insertion or -> erasure : 1
insertion or erasure -> problem : 1
or erasure problem -> is : 1
erasure problem is -> that : 1
that it might -> be : 1
might be difficult -> to : 1
difficult to compare -> an : 1
to compare an -> with : 1
compare an with -> a : 1
with a if -> the : 1
with a if -> return : 1
an error when -> you : 1
error when you -> try : 1
when you try -> to : 1
try to compare -> iterators : 1
to compare iterators -> for : 1
compare iterators for -> equality : 1
iterators for equality -> or : 1
for equality or -> try : 1
for equality or -> they : 1
for equality or -> compares : 1
equality or try -> swapping : 1
or try swapping -> the : 1
try swapping the -> order : 1
swapping the order -> of : 1
that if fails -> to : 1
fails to try -> most : 1
to try most -> the : 1
try most the -> problem : 1
most the problem -> is : 1
the problem is -> that : 2
a plain by -> swapping : 1
plain by swapping -> the : 1
by swapping the -> you : 1
swapping the you -> let : 1
the you let -> the : 1
you let the -> compiler : 1
the compiler convert -> to : 1
compiler convert to -> a : 1
convert to a -> and : 1
convert to a -> section : 1
a and allow -> the : 1
and allow the -> a : 1
allow the a -> full : 1
the a full -> explanation : 2
a full explanation -> of : 2
full explanation of -> how : 2
explanation of how -> best : 2
explanation of how -> and : 1
of how best -> to : 2
how best to -> work : 2
best to work -> with : 2
work with see -> scott : 1
work with see -> and : 1
with see scott -> container : 1
see scott container -> that : 1
scott container that -> supports : 1
supports bidirectional or -> random : 1
bidirectional or random -> access : 4
bidirectional or random -> can : 1
access iterators also -> provides : 1
iterators also provides -> that : 1
also provides that -> iterators : 1
provides that iterators -> that : 1
that iterators that -> start : 1
iterators that start -> with : 1
with the last -> element : 1
with the last -> items : 1
last element and -> toward : 1
element and toward -> the : 1
and toward the -> first : 1
toward the first -> element : 1
the these iterators -> are : 1
these iterators are -> named : 1
iterators are named -> and : 1
are named and -> standard : 1
are named and -> have : 1
named and standard -> library : 1
includes the class -> template : 1
as a convenient -> way : 1
implement the the -> class : 1
template is an -> iterator : 1
template is an -> adapter : 4
template is an -> example : 1
an iterator adapter -> that : 1
an iterator adapter -> could : 1
iterator adapter that -> runs : 1
adapter that runs -> in : 1
that runs in -> the : 1
runs in the -> reverse : 1
the reverse direction -> of : 1
reverse direction of -> the : 1
direction of the -> adapted : 2
of the adapted -> the : 1
of the adapted -> in : 1
the adapted the -> adapted : 1
the adapted the -> element : 1
adapted the adapted -> iterator : 1
the adapted iterator -> must : 1
the adapted iterator -> which : 1
the adapted iterator -> advances : 1
the adapted iterator -> in : 1
the adapted iterator -> is : 2
the adapted iterator -> points : 1
adapted iterator must -> be : 1
iterator must be -> a : 1
be a bidirectional -> or : 1
a bidirectional or -> random : 3
random access you -> can : 2
access you can -> obtain : 1
access you can -> use : 1
you can obtain -> the : 1
can obtain the -> adapted : 1
obtain the adapted -> given : 1
the adapted given -> a : 1
adapted given a -> reverse : 1
given a reverse -> by : 1
a reverse by -> calling : 1
reverse by calling -> the : 1
calling the the -> reverse : 1
calling the the -> most : 3
calling the the -> iterator : 3
the the reverse -> iterator : 1
the reverse iterator -> seems : 1
the reverse iterator -> appears : 1
the reverse iterator -> is : 1
the reverse iterator -> logically : 2
reverse iterator seems -> like : 1
iterator seems like -> a : 1
seems like a -> good : 1
like a good -> after : 1
a good after -> a : 1
good after a -> bidirectional : 1
after a bidirectional -> iterator : 1
bidirectional iterator can -> run : 1
iterator can run -> in : 1
can run in -> two : 1
run in two -> there : 1
in two there -> is : 1
two there is -> no : 1
is no reason -> why : 1
no reason why -> an : 1
reason why an -> iterator : 1
why an iterator -> adapter : 1
iterator adapter could -> not : 1
adapter could not -> implement : 1
could not implement -> by : 1
not implement by -> calling : 1
calling the adapted -> iterators : 1
the adapted iterators -> share : 1
adapted iterators share -> a : 1
iterators share a -> problem : 1
share a problem -> with : 1
a problem with -> namely : 1
problem with namely -> that : 1
with namely that -> several : 1
namely that several -> such : 1
that several such -> as : 1
several such as -> and : 1
as and do -> not : 1
not take an -> iterator : 1
take an iterator -> template : 1
an iterator template -> parameter : 1
iterator template parameter -> but : 1
template parameter but -> require : 1
parameter but require -> the : 1
but require the -> exact : 1
require the exact -> as : 1
the exact as -> declared : 1
exact as declared -> in : 1
as declared in -> the : 1
as declared in -> or : 1
as declared in -> but : 1
container the type -> is : 1
not so you -> must : 1
you must pass -> the : 1
must pass the -> adapted : 1
pass the adapted -> iterator : 1
adapted iterator which -> is : 1
iterator which is -> returned : 1
is returned from -> the : 1
is returned from -> contains : 1
is returned from -> a : 2
returned from the -> an : 1
returned from the -> for : 1
from the an -> insertion : 1
from the an -> iterator : 1
from the an -> that : 1
the an insertion -> the : 1
an insertion the -> iterator : 1
insertion the iterator -> works : 1
the iterator works -> but : 1
iterator works but -> for : 1
works but for -> it : 1
but for it -> is : 1
it is one -> off : 1
it is one -> of : 1
is one off -> from : 1
one off from -> the : 1
off from the -> desired : 1
from the desired -> the : 1
desired the solution -> is : 1
is to increment -> the : 1
to increment the -> reverse : 1
increment the reverse -> then : 1
increment the reverse -> it : 1
the reverse then -> call : 1
reverse then call -> as : 1
then call as -> shown : 1
call as shown -> in : 1
shown in reverse -> reverse : 1
in reverse reverse -> ri : 1
reverse reverse ri -> inserted : 1
reverse ri inserted -> before : 1
ri inserted before -> from : 1
inserted before from -> the : 1
before from the -> point : 1
point of view -> of : 1
of view of -> a : 1
view of a -> reverse : 1
of a reverse -> that : 1
a reverse that -> inserted : 1
reverse that inserted -> after : 1
that inserted after -> ri : 1
inserted after ri -> item : 1
after ri item -> is : 1
ri item is -> not : 1
item is not -> item : 1
not item ri -> in : 1
item ri in -> order : 1
ri in order -> to : 1
order to delete -> the : 1
the item ri -> points : 1
item ri points -> you : 1
ri points you -> must : 1
points you must -> advance : 1
you must advance -> ri : 1
must advance ri -> then : 1
advance ri then -> delete : 1
ri then delete -> the : 1
then delete the -> a : 1
delete the a -> full : 1
work with reverse -> see : 1
with reverse see -> scott : 1
reverse see scott -> in : 1
see scott in -> the : 1
scott in the -> standard : 1
standard library distinguish -> from : 1
library distinguish from -> other : 1
distinguish from other -> programming : 1
from other programming -> every : 1
other programming every -> major : 1
programming every major -> programming : 1
language has a -> set : 1
has a set -> of : 1
set of but -> in : 1
of but in -> the : 1
in the traditional -> each : 1
the traditional each -> container : 1
traditional each container -> defines : 1
each container defines -> the : 1
container defines the -> operations : 1
defines the operations -> that : 1
the operations that -> it : 1
operations that it -> and : 1
that it and -> turns : 1
it and turns -> programming : 1
and turns programming -> on : 1
turns programming on -> its : 1
programming on its -> head : 1
on its head -> and : 1
its head and -> provides : 1
head and provides -> a : 1
provides a set -> of : 1
set of function -> called : 1
of function called -> that : 1
function called that -> work : 1
called that work -> with : 1
work with and -> therefore : 1
with and therefore -> with : 1
and therefore with -> almost : 1
therefore with almost -> any : 1
with almost any -> advantage : 1
almost any advantage -> of : 1
any advantage of -> the : 1
of the approach -> is : 1
the approach is -> that : 1
approach is that -> the : 1
that the library -> can : 1
that the library -> calls : 1
the library can -> contain : 1
library can contain -> a : 1
contain a rich -> set : 1
a rich set -> of : 1
rich set of -> and : 1
of and each -> algorithm : 1
and each algorithm -> can : 1
and each algorithm -> is : 1
each algorithm can -> be : 1
algorithm can be -> written : 1
can be written -> once : 1
can be written -> to : 1
be written once -> and : 1
written once and -> work : 1
once and work -> with : 1
and work with -> any : 1
work with any -> kind : 1
with any kind -> of : 1
kind of and -> when : 1
of and when -> you : 1
define a custom -> it : 1
a custom it -> automatically : 1
custom it automatically -> works : 1
it automatically works -> with : 1
automatically works with -> the : 1
works with the -> standard : 1
standard algorithms you -> implemented : 1
algorithms you implemented -> the : 1
you implemented the -> iterators : 1
implemented the iterators -> the : 1
the iterators the -> set : 1
iterators the set -> of : 1
the set of -> algorithms : 1
the set of -> control : 1
the set of -> printing : 1
the set of -> valid : 1
set of algorithms -> is : 1
of algorithms is -> easily : 1
algorithms is easily -> extensible : 1
is easily extensible -> without : 1
easily extensible without -> touching : 1
extensible without touching -> the : 1
without touching the -> container : 1
touching the container -> another : 1
the container another -> benefit : 1
container another benefit -> is : 1
another benefit is -> that : 1
benefit is that -> the : 1
that the algorithms -> work : 1
the algorithms work -> with : 1
algorithms work with -> not : 1
algorithms work with -> see : 1
work with not -> so : 1
with not so -> even : 1
not so even -> iterators : 1
so even iterators -> as : 1
even iterators as -> the : 1
iterators as the -> stream : 1
the stream can -> have : 1
can have one -> remember : 1
have one remember -> that : 1
one remember that -> like : 1
remember that like -> can : 1
that like can -> be : 1
like can be -> algorithms : 1
can be algorithms -> use : 1
be algorithms use -> and : 1
algorithms use and -> therefore : 1
use and therefore -> are : 1
and therefore are -> equally : 1
therefore are equally -> pass : 1
are equally pass -> the : 1
equally pass the -> wrong : 1
pass the wrong -> iterator : 1
the wrong iterator -> to : 1
wrong iterator to -> an : 1
iterator to an -> and : 1
and the algorithm -> cannot : 1
the algorithm cannot -> detect : 1
algorithm cannot detect -> the : 1
cannot detect the -> error : 1
detect the error -> and : 1
the error and -> produces : 1
the error and -> indicators : 1
error and produces -> undefined : 1
and produces undefined -> most : 1
produces undefined most -> uses : 1
undefined most uses -> of : 1
most uses of -> algorithms : 1
most uses of -> in : 1
uses of algorithms -> make : 1
of algorithms make -> it : 1
algorithms make it -> easy : 1
make it easy -> to : 1
it easy to -> avoid : 1
easy to avoid -> programming : 1
to avoid programming -> of : 1
avoid programming of -> the : 1
programming of the -> standard : 1
algorithms are declared -> in : 1
with some numerical -> algorithms : 1
some numerical algorithms -> in : 1
numerical algorithms in -> refer : 1
algorithms in refer -> to : 1
in refer to -> the : 1
to the respective -> sections : 1
the respective sections -> of : 1
respective sections of -> for : 1
sections of for -> algorithms : 1
of for algorithms -> algorithms : 1
for algorithms algorithms -> generic : 1
algorithms algorithms generic -> all : 1
algorithms generic all -> work : 1
generic all work -> in : 1
all work in -> a : 1
in a similar -> they : 1
a similar they -> are : 1
similar they are -> all : 1
they are all -> function : 1
are all function -> and : 1
all function and -> most : 1
function and most -> have : 1
and most have -> one : 1
most have one -> or : 1
or more iterators -> as : 1
or more iterators -> and : 1
more iterators as -> template : 1
iterators as template -> because : 1
as template because -> the : 1
template because the -> algorithms : 1
because the algorithms -> are : 1
the algorithms are -> you : 1
algorithms are you -> can : 1
can instantiate the -> function : 1
function with any -> template : 1
with any template -> arguments : 1
any template arguments -> that : 1
arguments that meet -> the : 1
that meet the -> basic : 1
meet the basic -> for : 1
the basic for -> is : 1
basic for is -> declared : 1
declared as typename -> function : 1
as typename function -> initer : 1
initer function names -> of : 1
function names of -> the : 1
template parameters tell -> you : 2
parameters tell you -> what : 1
parameters tell you -> which : 1
tell you what -> is : 1
you what is -> expected : 1
what is expected -> as : 1
is expected as -> template : 1
expected as template -> must : 1
as template must -> be : 1
an input and -> must : 1
an input and -> an : 1
input and must -> be : 1
or the documentation -> for : 1
the documentation for -> further : 1
documentation for further -> tells : 1
for further tells -> you : 1
further tells you -> that : 1
you that must -> take : 1
that must take -> one : 1
must take one -> argument : 1
take one argument -> whose : 1
one argument whose -> type : 1
can be anything -> that : 1
be anything that -> meets : 1
anything that meets -> the : 1
requirements of an -> input : 1
of an input -> notice : 1
of an input -> and : 1
of an input -> string : 1
an input notice -> that : 1
input notice that -> no : 1
notice that no -> container : 1
that no container -> is : 1
no container is -> mentioned : 1
container is mentioned -> in : 1
is mentioned in -> the : 1
mentioned in the -> declaration : 1
mentioned in the -> but : 1
declaration or documentation -> of : 1
or documentation of -> for : 1
documentation of for -> you : 1
of for you -> can : 1
use an a -> programmer : 1
an a programmer -> trained : 1
a programmer trained -> in : 1
programmer trained in -> traditional : 1
trained in traditional -> the : 1
in traditional the -> flexibility : 1
traditional the flexibility -> of : 1
the flexibility of -> the : 1
flexibility of the -> standard : 1
standard algorithms might -> seem : 1
algorithms might seem -> strange : 1
might seem strange -> or : 1
might seem strange -> to : 1
seem strange or -> thinking : 1
strange or thinking -> in : 1
or thinking in -> terms : 1
thinking in terms -> of : 1
terms of algorithms -> takes : 1
of algorithms takes -> some : 1
algorithms takes some -> some : 1
takes some some -> container : 1
some some container -> classes : 1
some container classes -> define : 1
container classes define -> as : 1
classes define as -> a : 1
define as a -> member : 1
define as a -> so : 1
function or as -> a : 1
function that applies -> only : 1
only to certain -> kinds : 1
to certain kinds -> of : 1
kinds of java -> defines : 1
of java defines -> only : 1
java defines only -> on : 1
defines only on -> arrays : 1
only on arrays -> and : 1
on arrays and -> if : 1
arrays and if -> you : 1
have a new -> kind : 1
have a new -> locale : 1
a new kind -> of : 1
new kind of -> you : 1
kind of you -> must : 1
of you must -> duplicate : 1
of you must -> ensure : 1
you must duplicate -> the : 1
must duplicate the -> implementation : 1
duplicate the implementation -> of : 1
implementation of or -> make : 1
of or make -> sure : 1
sure the implementation -> of : 1
implementation of your -> container : 1
of your container -> maps : 1
your container maps -> to : 1
container maps to -> one : 1
the standard implementations -> of : 1
standard implementations of -> in : 1
implementations of in -> you : 1
of in you -> can : 1
you can invent -> any : 1
can invent any -> kind : 1
invent any kind -> of : 1
kind of crazy -> and : 1
of crazy and -> as : 1
crazy and as -> long : 1
and as long -> as : 1
as long as -> it : 1
as long as -> the : 3
long as it -> supports : 1
as it supports -> a : 1
it supports a -> random : 1
supports a random -> access : 1
standard you need -> to : 1
need to process -> the : 1
to process the -> contents : 1
process the contents -> of : 1
a you should -> think : 1
you should think -> about : 1
should think about -> how : 1
think about how -> the : 1
about how the -> standard : 1
how the standard -> algorithms : 1
standard algorithms can -> help : 1
algorithms can help -> for : 1
can help for -> suppose : 1
help for suppose -> you : 1
need to read -> a : 1
read a of -> numbers : 1
a of numbers -> into : 1
of numbers into -> a : 1
numbers into a -> data : 1
into a data -> you : 1
data you would -> set : 1
you would set -> up : 1
would set up -> a : 1
set up a -> loop : 1
up a loop -> to : 1
a loop to -> read : 1
loop to read -> the : 1
read the input -> stream : 1
input stream for -> each : 1
stream for each -> number : 1
for each number -> append : 1
each number append -> the : 1
number append the -> number : 1
append the number -> to : 1
the number to -> the : 1
number to the -> now : 1
to the now -> rethink : 1
the now rethink -> the : 1
now rethink the -> problem : 1
rethink the problem -> in : 1
the problem in -> terms : 1
problem in terms -> of : 1
terms of an -> algorithmic : 1
of an algorithmic -> what : 1
an algorithmic what -> you : 1
algorithmic what you -> are : 1
what you are -> actually : 1
you are actually -> doing : 1
are actually doing -> is : 1
actually doing is -> copying : 1
doing is copying -> data : 1
is copying data -> from : 1
copying data from -> an : 1
data from an -> input : 1
input stream to -> an : 1
input stream to -> skip : 2
input stream to -> until : 1
stream to an -> so : 1
to an so -> you : 1
so you could -> use : 1
you could use -> the : 2
could use the -> algorithm : 1
could use the -> following : 1
use the algorithm -> copies : 1
the algorithm copies -> all : 2
algorithm copies all -> the : 2
items from one -> range : 1
items from one -> end : 2
from one range -> to : 1
one range to -> the : 1
range to the -> input : 1
range to the -> other : 1
range to the -> previous : 1
range to the -> range : 6
range to the -> left : 1
to the input -> comes : 1
to the input -> format : 1
to the input -> or : 1
to the input -> position : 2
the input comes -> from : 1
input comes from -> an : 1
comes from an -> which : 1
from an which -> is : 1
an which is -> an : 1
an which is -> automatically : 1
an iterator interface -> for : 1
iterator interface for -> reading : 1
interface for reading -> from : 1
for reading from -> an : 1
for reading from -> the : 1
for reading from -> streams : 1
for reading from -> and : 1
for reading from -> character : 1
for reading from -> a : 1
reading from an -> the : 1
reading from an -> open : 1
from an the -> output : 1
an the output -> range : 1
the output range -> is : 2
the output range -> has : 1
the output range -> each : 1
the output range -> starting : 1
output range is -> a : 1
output range is -> large : 1
range is a -> by : 1
range is a -> subset : 1
a by the -> which : 1
by the which -> is : 1
is an output -> iterator : 1
output iterator that -> pushes : 1
output iterator that -> stores : 3
output iterator that -> writes : 1
output iterator that -> must : 1
iterator that pushes -> items : 1
that pushes items -> onto : 1
pushes items onto -> a : 1
items onto a -> first : 1
onto a first -> the : 1
a first the -> algorithmic : 1
first the algorithmic -> solution : 1
the algorithmic solution -> seem : 1
algorithmic solution seem -> any : 1
solution seem any -> simpler : 1
seem any simpler -> or : 1
any simpler or -> clearer : 1
simpler or clearer -> than : 1
or clearer than -> a : 1
clearer than a -> straightforward : 1
than a straightforward -> while : 1
a straightforward while -> complex : 1
straightforward while complex -> examples : 1
while complex examples -> demonstrate : 1
complex examples demonstrate -> the : 1
examples demonstrate the -> value : 1
demonstrate the value -> of : 1
the for all -> major : 1
the for all -> in : 1
for all major -> programming : 1
all major programming -> languages : 1
major programming languages -> have : 1
programming languages have -> a : 1
languages have a -> type : 1
type for character -> they : 1
for character they -> typically : 1
character they typically -> also : 1
they typically also -> have : 1
typically also have -> a : 1
a function for -> finding : 1
a function for -> each : 1
a function for -> more : 1
function for finding -> what : 1
for finding what -> about : 1
finding what about -> the : 1
what about the -> more : 1
about the more -> general : 1
more general problem -> of : 2
general problem of -> finding : 2
problem of finding -> a : 1
problem of finding -> the : 1
of finding a -> subrange : 1
finding a subrange -> in : 1
a subrange in -> any : 1
subrange in any -> larger : 1
in any larger -> suppose : 1
any larger suppose -> a : 1
larger suppose a -> researcher : 1
suppose a researcher -> is : 1
a researcher is -> looking : 1
researcher is looking -> for : 1
is looking for -> patterns : 1
looking for patterns -> in : 1
for patterns in -> a : 1
patterns in a -> data : 1
in a data -> set : 1
a data set -> and : 1
data set and -> wants : 1
set and wants -> to : 1
and wants to -> see : 1
wants to see -> if : 1
see if a -> small : 1
if a small -> data : 1
a small data -> pattern : 1
small data pattern -> occurs : 1
data pattern occurs -> in : 1
pattern occurs in -> a : 1
occurs in a -> larger : 1
in a larger -> data : 1
a larger data -> in : 1
larger data in -> you : 1
data in you -> can : 1
use the if -> found : 1
the if found -> the : 1
if found the -> number : 1
found the number -> of : 1
number of algorithms -> take : 1
number of algorithms -> require : 1
of algorithms take -> a : 1
algorithms take a -> function : 1
take a function -> pointer : 1
pointer or functor -> an : 1
pointer or functor -> that : 4
pointer or functor -> the : 2
or functor an -> object : 1
functor an object -> that : 1
that overloads as -> one : 1
overloads as one -> of : 1
as one of -> the : 1
the the algorithms -> call : 1
the algorithms call -> the : 1
algorithms call the -> function : 1
function and possibly -> use : 1
and possibly use -> the : 1
possibly use the -> return : 1
use the return -> for : 1
the return for -> counts : 1
return for counts -> the : 1
for counts the -> number : 1
counts the number -> of : 5
number of times -> the : 1
number of times -> a : 1
number of times -> is : 1
of times the -> function : 1
times the function -> returns : 1
returns a true -> result : 1
a true result -> when : 1
true result when -> applied : 1
result when applied -> to : 1
when applied to -> each : 1
when applied to -> such : 1
each element in -> a : 1
each element in -> the : 1
element in a -> return : 1
element in a -> fwditer : 1
element in a -> container : 1
element in a -> sequence : 1
element in a -> map : 2
element in a -> set : 2
in a return -> x : 1
a return x -> spite : 1
return x spite -> of : 1
x spite of -> the : 1
spite of the -> unwieldy : 1
of the unwieldy -> declaration : 1
the unwieldy declaration -> for : 1
unwieldy declaration for -> the : 1
declaration for the -> application : 1
declaration for the -> if : 1
for the application -> of : 1
the application of -> to : 1
application of to -> count : 1
of to count -> the : 1
number of negative -> items : 1
of negative items -> in : 1
negative items in -> the : 1
in the vector -> is : 1
the vector is -> easy : 1
the vector is -> constructed : 1
the vector is -> an : 1
the vector is -> the : 1
the vector is -> and : 1
the vector is -> as : 1
vector is easy -> to : 1
is easy to -> write : 1
easy to write -> and : 1
write and you -> want : 1
and you want -> to : 4
function to be -> used : 1
function to be -> called : 1
only with an -> you : 1
with an you -> might : 1
an you might -> be : 1
the standard functors -> or : 1
standard functors or -> function : 1
functors or function -> objects : 1
or function objects -> are : 1
function objects are -> declared : 1
function objects are -> most : 1
function objects are -> defined : 1
the same count -> of : 1
same count of -> negative : 1
count of negative -> values : 1
of negative values -> can : 1
negative values can -> be : 1
can be obtained -> with : 1
be obtained with -> the : 1
obtained with the -> class : 1
template defines so -> it : 1
defines so it -> takes : 1
it takes two -> arguments : 1
arguments and applies -> to : 1
and applies to -> those : 1
applies to those -> the : 1
to those the -> function : 1
those the function -> template : 1
function template takes -> a : 3
takes a functor -> and : 1
a functor and -> binds : 1
functor and binds -> a : 1
and binds a -> constant : 1
binds a constant -> value : 1
a constant value -> this : 1
constant value this -> case : 1
value this case -> as : 1
this case as -> the : 1
case as the -> second : 1
the second returning -> a : 1
second returning a -> function : 1
returning a function -> is : 1
function is what -> the : 1
is what the -> use : 1
what the use -> of : 1
use of standard -> function : 1
of standard function -> objects : 1
standard function objects -> can : 1
standard function objects -> are : 1
function objects can -> make : 1
can make the -> code : 1
make the code -> harder : 1
the code harder -> to : 1
code harder to -> but : 1
to but also -> helps : 1
but also helps -> avoid : 1
also helps avoid -> writing : 1
helps avoid writing -> custom : 1
avoid writing custom -> project : 1
writing custom project -> expands : 1
custom project expands -> and : 1
project expands and -> enhances : 1
expands and enhances -> the : 1
and enhances the -> standard : 1
enhances the standard -> see : 1
information about using -> function : 1
information about using -> and : 1
about using function -> be : 1
using function be -> very : 1
function be very -> careful : 1
be very careful -> if : 1
very careful if -> those : 1
careful if those -> objects : 1
if those objects -> maintain : 1
those objects maintain -> state : 1
objects maintain state -> or : 1
maintain state or -> have : 1
state or have -> global : 1
or have global -> side : 1
have global side -> some : 1
global side some -> algorithms : 1
side some algorithms -> copy : 1
some algorithms copy -> the : 1
algorithms copy the -> function : 1
copy the function -> and : 1
must be sure -> that : 1
be sure that -> the : 1
that the state -> is : 1
state is also -> properly : 1
is also properly -> the : 1
also properly the -> numerical : 1
properly the numerical -> algorithms : 1
the numerical algorithms -> do : 1
numerical algorithms do -> not : 1
do not permit -> function : 1
not permit function -> objects : 1
permit function objects -> that : 1
that have side -> statistics : 1
have side statistics -> with : 1
side statistics with -> a : 1
statistics with a -> shows : 1
statistics with a -> class : 1
with a shows -> one : 1
with a shows -> how : 1
a shows one -> use : 1
a shows one -> way : 1
function it accumulates -> statistical : 1
it accumulates statistical -> data : 1
accumulates statistical data -> for : 1
statistical data for -> computing : 1
data for computing -> the : 1
for computing the -> mean : 1
computing the mean -> and : 1
the mean and -> variance : 1
mean and variance -> of : 1
and variance of -> a : 1
variance of a -> data : 1
a data pass -> an : 1
data pass an -> instance : 1
pass an instance -> of : 1
instance of to -> the : 1
of to the -> algorithm : 1
of to the -> intermediate : 1
of to the -> real : 1
of to the -> return : 1
of to the -> power : 1
the algorithm to -> accumulate : 1
algorithm to accumulate -> the : 1
to accumulate the -> the : 1
accumulate the the -> copy : 1
the copy that -> is : 1
copy that is -> returned : 1
that is returned -> from : 1
returned from contains -> the : 1
from contains the -> desired : 1
contains the desired -> statistics : 1
the desired statistics -> with : 1
desired statistics with -> a : 1
with a class -> statistics : 1
with a class -> can : 1
a class statistics -> typedef : 1
class statistics typedef -> t : 1
statistics typedef t -> void : 1
typedef t void -> x : 1
typedef t void -> void : 4
t void x -> const : 1
void x const -> return : 1
return t t -> sum : 1
t t sum -> of : 1
t sum of -> squares : 1
sum of squares -> int : 1
of squares int -> using : 1
squares int using -> namespace : 1
using namespace stat -> cout : 1
namespace stat cout -> cout : 1
stat cout cout -> cout : 1
cout cout describes -> all : 1
cout describes all -> the : 1
all the in -> this : 1
all the in -> for : 2
section presents a -> categorized : 1
presents a categorized -> summary : 1
a categorized summary -> of : 1
categorized summary of -> the : 1
summary of the -> is : 1
of the is -> always : 1
of the is -> use : 1
of the is -> returned : 1
of the is -> determined : 1
of the is -> set : 1
of the is -> an : 2
the is always -> your : 1
is always your -> responsibility : 1
always your responsibility -> to : 1
responsibility to ensure -> that : 5
that the output -> range : 2
that the output -> sequence : 1
range is large -> enough : 1
is large enough -> to : 9
is large enough -> for : 1
enough to accommodate -> the : 1
to accommodate the -> the : 1
to accommodate the -> entire : 1
accommodate the the -> name : 1
the name ends -> with : 1
name ends with -> the : 1
ends with the -> final : 1
ends with the -> corresponding : 1
ends with the -> actual : 1
with the final -> argument : 1
the final argument -> must : 1
final argument must -> be : 1
be a that -> a : 1
or function object -> that : 1
or function object -> to : 1
object that returns -> a : 1
returns a boolean -> result : 2
returns a boolean -> number : 1
returns a boolean -> in : 1
a boolean result -> result : 1
a boolean result -> can : 1
boolean result result -> that : 1
result result that -> is : 1
result that is -> convertible : 1
that is convertible -> to : 2
is convertible to -> type : 1
is convertible to -> or : 1
convertible to type -> following : 1
to type following -> examine : 1
type following examine -> every : 1
following examine every -> element : 1
examine every element -> of : 1
every element of -> a : 1
every element of -> the : 5
a sequence without -> modifying : 1
sequence without modifying -> the : 1
without modifying the -> the : 1
modifying the the -> number : 1
modifying the the -> first : 1
the the number -> of : 14
of items that -> match : 1
of items that -> are : 5
of items that -> supports : 2
of items that -> can : 2
of items that -> or : 1
items that match -> a : 1
that match a -> given : 1
that match a -> span : 1
match a given -> the : 1
a given the -> number : 1
given the number -> of : 1
of items for -> which : 1
of items for -> a : 1
items for which -> a : 7
items for which -> the : 2
items for which -> returns : 3
predicate returns a -> function : 1
predicate returns a -> subsequence : 1
predicate returns a -> range : 1
or functor to -> each : 1
functor to each -> following : 1
to each following -> objects : 1
each following objects -> or : 1
following objects or -> sequences : 1
objects or sequences -> modifying : 1
or sequences modifying -> the : 1
sequences modifying the -> whether : 1
modifying the whether -> two : 1
the whether two -> ranges : 1
whether two ranges -> have : 1
two ranges have -> equivalent : 1
ranges have equivalent -> whether : 1
have equivalent whether -> one : 1
equivalent whether one -> range : 1
whether one range -> is : 1
one range is -> considered : 1
range is considered -> less : 1
is considered less -> than : 1
considered less than -> another : 1
less than another -> the : 1
than another the -> maximum : 1
another the maximum -> of : 1
the maximum of -> two : 2
maximum of two -> the : 1
maximum of two -> const : 1
of two the -> maximum : 1
of two the -> minimum : 1
of two the -> union : 1
two the maximum -> value : 1
maximum value in -> a : 1
a the minimum -> of : 1
two the minimum -> value : 1
the minimum value -> in : 1
the minimum value -> set : 1
minimum value in -> a : 1
a the first -> position : 2
a the first -> part : 1
a the first -> is : 1
position where two -> ranges : 2
where two ranges -> following : 1
where two ranges -> typename : 1
two ranges following -> search : 1
ranges following search -> for : 1
following search for -> a : 1
a value or -> a : 1
value or a -> subsequence : 1
or a subsequence -> in : 1
a subsequence in -> a : 3
subsequence in a -> modifying : 1
subsequence in a -> the : 1
subsequence in a -> following : 1
in a modifying -> the : 1
a modifying the -> the : 1
position where an -> item : 1
where an item -> is : 2
where an item -> belongs : 2
an item is -> equal : 1
an item is -> erased : 1
an item is -> inserted : 1
item is equal -> to : 1
equal to its -> the : 1
equal to its -> but : 1
to its the -> first : 1
to its the -> iterator : 2
its the first -> occurrence : 1
the first occurrence -> of : 11
first occurrence of -> a : 1
first occurrence of -> in : 3
first occurrence of -> or : 4
first occurrence of -> to : 1
first occurrence of -> such : 2
occurrence of a -> value : 1
occurrence of a -> subsequence : 1
occurrence of a -> parameter : 1
occurrence of a -> typename : 1
occurrence of a -> int : 1
occurrence of a -> wide : 1
a the last -> occurrence : 1
the last occurrence -> of : 5
last occurrence of -> a : 2
last occurrence of -> in : 2
last occurrence of -> to : 1
of a subsequence -> in : 1
position where a -> value : 1
position where a -> predicate : 1
where a value -> matches : 1
a value matches -> any : 1
value matches any -> one : 1
matches any one -> item : 1
any one item -> from : 1
one item from -> a : 1
from a range -> of : 1
from a range -> by : 6
where a predicate -> returns : 1
returns a subsequence -> in : 1
in a following -> apply : 1
a following apply -> a : 1
following apply a -> binary : 1
apply a binary -> search : 1
a binary search -> to : 3
binary search to -> a : 1
binary search to -> test : 1
binary search to -> search : 1
search to a -> sorted : 1
to a sorted -> the : 1
a sorted the -> sequence : 1
a sorted the -> upper : 1
a sorted the -> limits : 1
sorted the sequence -> typically : 1
the sequence typically -> comes : 1
sequence typically comes -> from : 1
typically comes from -> a : 1
comes from a -> sequence : 1
sequence container in -> which : 1
container in which -> you : 1
which you have -> already : 1
you have already -> sorted : 1
have already sorted -> the : 1
already sorted the -> you : 1
sorted the you -> can : 1
use an associative -> but : 1
an associative but -> they : 1
associative but they -> provide : 1
but they provide -> the : 1
they provide the -> last : 1
provide the last -> three : 1
the last three -> functions : 1
the last three -> versions : 1
last three functions -> as : 1
three functions as -> member : 1
functions as member -> which : 1
functions as member -> they : 1
as member which -> might : 1
member which might -> result : 1
which might result -> in : 1
might result in -> better : 1
result in better -> an : 1
in better an -> item : 1
better an item -> in : 1
an item in -> a : 1
item in a -> sorted : 1
item in a -> typename : 2
item in a -> a : 1
item in a -> container : 1
item in a -> priority : 1
in a sorted -> range : 4
in a sorted -> the : 2
in a sorted -> sequence : 1
in a sorted -> shows : 3
in a sorted -> for : 1
a sorted range -> using : 4
sorted range using -> a : 1
sorted range using -> binary : 3
range using a -> binary : 1
using a binary -> the : 1
using a binary -> typename : 1
a binary the -> upper : 1
binary the upper -> and : 1
the upper and -> lower : 3
upper and lower -> the : 1
upper and lower -> bound : 2
and lower the -> lower : 1
lower the lower -> bound : 1
the lower bound -> of : 2
the lower bound -> for : 1
the lower bound -> is : 1
the lower bound -> and : 4
lower bound of -> where : 1
lower bound of -> in : 1
bound of where -> an : 2
of where an -> item : 2
an item belongs -> in : 2
item belongs in -> a : 2
belongs in a -> sorted : 7
sorted the upper -> bound : 1
the upper bound -> of : 2
the upper bound -> for : 1
the upper bound -> is : 1
upper bound of -> where : 1
upper bound of -> in : 1
a sorted sequence -> sequence : 1
sorted sequence sequence -> following : 1
sequence sequence following -> modify : 1
sequence following modify -> a : 1
following modify a -> an : 1
modify a an -> input : 1
a an input -> range : 1
an input range -> to : 3
an input range -> results : 1
input range to -> an : 3
range to an -> output : 3
an output an -> input : 1
output an input -> range : 1
an output starting -> at : 1
output starting at -> the : 1
starting at the -> end : 1
starting at the -> typename : 1
starting at the -> element : 1
starting at the -> ranges : 1
starting at the -> number : 2
starting at the -> second : 1
of the output -> a : 1
of the output -> it : 1
the output a -> range : 1
output a range -> with : 1
a range with -> a : 2
a range with -> values : 2
a range with -> copies : 1
a range with -> illustrates : 1
a range with -> is : 1
range with a -> a : 1
range with a -> range : 1
a a range -> with : 1
range with values -> returned : 3
with values returned -> from : 3
values returned from -> a : 3
returned from a -> the : 1
returned from a -> typename : 2
returned from a -> call : 1
returned from a -> value : 1
returned from a -> prior : 2
returned from a -> some : 1
returned from a -> see : 1
a the values -> that : 1
values that two -> iterators : 1
that two iterators -> point : 1
two iterators point -> a : 1
iterators point a -> range : 1
point a range -> into : 1
range into random -> a : 1
into random a -> range : 1
random a range -> to : 1
range to prepare -> to : 3
to prepare to -> erase : 3
prepare to erase -> all : 3
erase all elements -> equal : 1
all elements equal -> to : 1
elements equal to -> a : 1
a given a -> removing : 2
given a removing -> all : 2
a removing all -> items : 2
removing all items -> equal : 1
removing all items -> for : 1
all items equal -> to : 1
items equal to -> a : 1
all items for -> which : 7
returns a range -> to : 1
predicate returns items -> of : 1
returns items of -> a : 1
items of a -> given : 2
a given value -> with : 2
given value with -> a : 2
value with a -> new : 2
with a new -> a : 3
with a new -> items : 1
with a new -> with : 2
a new a -> replacing : 2
a new a -> range : 1
a new a -> complex : 1
a new a -> subset : 1
new a replacing -> items : 2
a replacing items -> of : 1
a replacing items -> for : 1
replacing items of -> a : 1
replacing items for -> which : 1
predicate returns true -> with : 2
predicate returns true -> way : 1
returns true with -> a : 2
true with a -> new : 2
a new items -> for : 1
new items for -> which : 1
new a range -> in : 1
a range in -> a : 1
a range in -> reverse : 2
a range in -> void : 1
a range in -> stable : 1
a range in -> place : 1
range in a -> range : 1
range in a -> time : 2
in a range -> in : 1
in a range -> by : 1
in a range -> a : 1
in a range -> has : 1
in a range -> class : 1
range in reverse -> items : 1
range in reverse -> typename : 1
in reverse items -> from : 1
reverse items from -> one : 1
from one end -> of : 1
from one end -> to : 1
one end of -> a : 1
the other a -> rotating : 1
other a rotating -> items : 1
a rotating items -> from : 1
rotating items from -> one : 1
one end to -> the : 1
end to the -> values : 1
to the values -> in : 1
the values in -> two : 1
the values in -> a : 1
the values in -> the : 4
values in two -> every : 1
values in two -> typename : 1
in two every -> value : 1
two every value -> in : 1
every value in -> a : 1
a range by -> applying : 1
a range by -> calling : 6
a range by -> two : 4
range by applying -> a : 1
by applying a -> transformation : 1
applying a transformation -> a : 1
a transformation a -> range : 1
transformation a range -> to : 1
erase all duplicate -> a : 1
all duplicate a -> removing : 1
duplicate a removing -> duplicate : 1
a removing duplicate -> following : 1
removing duplicate following -> are : 1
duplicate following are -> related : 1
following are related -> to : 1
are related to -> and : 1
related to and -> you : 1
to and you -> can : 1
can supply a -> comparison : 1
can supply a -> buffer : 1
supply a comparison -> function : 1
or functor or -> rely : 1
functor or rely -> on : 1
or rely on -> the : 1
on the which -> uses : 1
the which uses -> the : 1
which uses the -> the : 1
uses the the -> item : 1
the the item -> that : 1
the the item -> at : 1
item that belongs -> at : 1
that belongs at -> the : 1
belongs at the -> position : 1
at the position -> the : 1
at the position -> of : 1
at the position -> pointed : 1
the position the -> range : 1
the position the -> second : 2
position the range -> were : 1
the range were -> and : 1
range were and -> reorders : 1
were and reorders -> the : 1
and reorders the -> range : 1
reorders the range -> to : 1
reorders the range -> so : 1
range to partition -> it : 1
to partition it -> into : 1
partition it into -> items : 1
it into items -> less : 1
into items less -> than : 1
items less than -> the : 1
less than the -> item : 1
less than the -> sequence : 1
less than the -> absolute : 1
less than the -> array : 1
less than the -> positive : 1
less than the -> the : 2
than the item -> and : 1
the item and -> items : 1
item and items -> greater : 1
and items greater -> than : 1
items greater than -> or : 1
the a range -> so : 1
the a range -> to : 1
the a range -> that : 1
the a range -> is : 1
a range so -> the : 2
a range so -> that : 2
range so the -> first : 2
so the first -> part : 2
so the first -> six : 1
first part is -> a : 2
first part is -> and : 3
part is a -> range : 2
is a range -> so : 2
is a range -> that : 1
is a range -> error : 2
is a range -> due : 1
range so that -> all : 5
range so that -> is : 1
so that all -> items : 2
so that all -> elements : 3
a predicate is -> true : 2
predicate is true -> come : 2
is true come -> before : 2
true come before -> all : 2
come before all -> items : 2
before all items -> for : 2
which the predicate -> is : 2
the predicate is -> items : 1
the predicate is -> the : 1
predicate is items -> in : 1
is items in -> ascending : 2
in ascending a -> range : 1
ascending a range -> so : 1
predicate is the -> relative : 1
is the relative -> order : 1
of items within -> a : 1
items within a -> partition : 1
within a partition -> is : 1
a partition is -> items : 1
partition is items -> in : 1
in ascending the -> relative : 1
ascending the relative -> order : 1
order of equal -> items : 1
of equal items -> is : 1
equal items is -> following : 1
items is following -> merge : 1
is following merge -> two : 1
following merge two -> sorted : 1
merge two sorted -> two : 1
two sorted two -> consecutive : 1
two sorted two -> sorted : 1
sorted two consecutive -> subranges : 1
two consecutive subranges -> in : 1
consecutive subranges in -> so : 1
subranges in so -> the : 1
so the results -> replace : 1
the results replace -> the : 1
results replace the -> original : 1
replace the original -> two : 1
the original two -> sorted : 1
original two sorted -> copying : 1
two sorted copying -> the : 1
sorted copying the -> results : 1
copying the results -> to : 1
copying the results -> into : 1
the results to -> a : 1
the results to -> fill : 1
results to a -> separate : 1
to a separate -> following : 1
a separate following -> apply : 1
separate following apply -> standard : 1
following apply standard -> set : 1
apply standard set -> operations : 1
standard set operations -> to : 1
set operations to -> sorted : 1
operations to sorted -> whether : 1
to sorted whether -> one : 1
sorted whether one -> sorted : 1
whether one sorted -> range : 1
one sorted range -> is : 1
sorted range is -> a : 1
is a subset -> of : 3
of the set -> difference : 1
of the set -> with : 2
of the set -> and : 2
the set difference -> of : 1
set difference of -> two : 1
set difference of -> sorted : 1
difference of two -> sorted : 2
of two sorted -> ranges : 4
two sorted ranges -> to : 4
sorted ranges to -> an : 4
ranges to an -> output : 4
an output the -> intersection : 1
an output the -> symmetric : 1
an output the -> union : 1
an output the -> operator : 3
an output the -> class : 1
an output the -> stream : 1
output the intersection -> of : 1
the intersection of -> two : 1
intersection of two -> sorted : 1
output the symmetric -> difference : 1
the symmetric difference -> of : 1
the symmetric difference -> between : 3
symmetric difference of -> two : 1
symmetric difference of -> sorted : 1
output the union -> of : 1
the union of -> two : 4
union of two -> sorted : 1
union of two -> shows : 1
union of two -> the : 1
union of two -> for : 1
an output following -> treat : 1
output following treat -> a : 1
following treat a -> sequence : 1
treat a sequence -> as : 1
a sequence as -> a : 1
sequence as a -> data : 1
as a data -> a : 1
a data a -> range : 1
data a range -> into : 1
range into heap -> a : 1
into heap a -> range : 1
heap a range -> to : 1
range to remove -> the : 1
range to remove -> all : 1
range to remove -> elements : 1
to remove the -> first : 1
range to add -> the : 1
to add the -> last : 1
add the last -> item : 1
last item to -> the : 1
item to the -> a : 1
range that starts -> in : 1
range that starts -> at : 12
that starts in -> heap : 1
starts in heap -> order : 1
in heap order -> into : 1
heap order into -> fully : 1
order into fully -> sorted : 1
into fully sorted -> following : 1
fully sorted following -> reorder : 1
sorted following reorder -> the : 1
following reorder the -> elements : 1
reorder the elements -> of : 1
a sequence to -> generate : 1
sequence to generate -> a : 1
to generate a -> range : 1
generate a range -> to : 1
range to form -> the : 2
range to form -> a : 1
to form the -> next : 2
to form the -> previous : 2
form the next -> a : 1
form the next -> for : 1
next a range -> to : 1
form the previous -> your : 1
form the previous -> for : 1
the previous your -> own : 1
previous your own -> is : 1
your own is -> some : 1
own is some -> care : 1
is some care -> is : 1
some care is -> always : 1
care is always -> needed : 1
is always needed -> when : 1
always needed when -> writing : 1
needed when writing -> function : 1
when writing function -> templates : 1
function templates discussed -> in : 1
templates discussed in -> but : 1
discussed in but -> generic : 1
in but generic -> algorithms : 1
but generic algorithms -> do : 1
generic algorithms do -> not : 1
do not present -> any : 1
not present any -> special : 1
present any special -> or : 1
any special or -> unusual : 1
special or unusual -> be : 1
or unusual be -> sure : 1
unusual be sure -> you : 1
be sure you -> understand : 1
sure you understand -> the : 1
you understand the -> requirements : 1
understand the requirements -> of : 1
requirements of the -> different : 1
requirements of the -> iec : 1
the different categories -> of : 1
different categories of -> iterators : 1
categories of iterators -> and : 1
of iterators and -> write : 1
iterators and write -> your : 1
and write your -> algorithm : 1
write your algorithm -> to : 1
your algorithm to -> use : 1
your algorithm to -> improve : 1
algorithm to use -> the : 1
use the most -> general : 1
the most general -> category : 1
most general category -> you : 1
general category you -> might : 1
category you might -> even : 1
you might even -> want : 1
might even want -> to : 1
even want to -> specialize : 1
specialize your algorithm -> to : 1
algorithm to improve -> its : 1
to improve its -> performance : 1
improve its performance -> with : 1
its performance with -> some : 1
performance with some -> first : 1
with some first -> generic : 1
some first generic -> algorithm : 1
first generic algorithm -> that : 1
generic algorithm that -> most : 1
algorithm that most -> programmers : 1
that most programmers -> will : 1
most programmers will -> probably : 1
programmers will probably -> write : 1
will probably write -> is : 1
probably write is -> which : 1
write is which -> was : 1
is which was -> inexplicably : 1
which was inexplicably -> omitted : 1
was inexplicably omitted -> from : 1
inexplicably omitted from -> the : 1
omitted from the -> the : 1
omitted from the -> are : 1
the function copies -> an : 1
the function copies -> characters : 1
function copies an -> input : 1
copies an input -> range : 1
an output copying -> only : 1
output copying only -> the : 1
copying only the -> values : 1
only the values -> for : 1
values for which -> a : 1
returns true way -> to : 1
true way to -> implement : 1
implement the shows -> a : 1
the shows a -> simple : 1
implementation of way -> to : 1
of way to -> implement : 1
implement the typename -> typename : 1
typename typename outiter -> initer : 8
typename typename outiter -> outiter : 11
typename typename outiter -> iter : 1
typename outiter initer -> outiter : 12
outiter initer outiter -> pred : 1
outiter initer outiter -> function : 1
outiter initer outiter -> const : 2
outiter initer outiter -> predicate : 1
outiter initer outiter -> unaryoperation : 1
outiter initer outiter -> typename : 1
outiter initer outiter -> binarypredicate : 1
outiter initer outiter -> template : 2
outiter initer outiter -> binop : 2
initer outiter pred -> for : 1
outiter pred for -> first : 1
pred for first -> if : 1
if return can -> also : 1
return can also -> specialize : 1
can also specialize -> an : 1
also specialize an -> for : 1
specialize an for -> you : 1
an for you -> might : 1
able to implement -> the : 1
implement the algorithm -> more : 1
the algorithm more -> efficiently : 1
algorithm more efficiently -> for : 1
more efficiently for -> a : 1
efficiently for a -> random : 1
for a random -> access : 2
random access in -> this : 1
access in this -> you : 1
this you can -> write : 1
can write helper -> functions : 1
write helper functions -> and : 1
helper functions and -> use : 1
functions and use -> the : 1
trait to choose -> a : 1
to choose a -> specialized : 1
choose a specialized -> has : 1
a specialized has -> more : 1
specialized has more -> information : 1
has more information -> about : 1
information about including -> an : 1
about including an -> example : 1
including an example -> of : 1
to use iterator -> traits : 1
use iterator traits -> to : 1
traits to optimize -> a : 1
to optimize a -> function : 1
optimize a function -> real : 1
a function real -> trick : 1
function real trick -> in : 1
real trick in -> designing : 1
trick in designing -> and : 1
in designing and -> writing : 1
designing and writing -> algorithms : 1
and writing algorithms -> is : 1
writing algorithms is -> being : 1
algorithms is being -> able : 1
is being able -> to : 1
being able to -> generalize : 1
able to generalize -> the : 1
to generalize the -> problem : 1
generalize the problem -> and : 1
the problem and -> then : 1
problem and then -> find : 1
and then find -> an : 1
then find an -> efficient : 1
find an efficient -> before : 1
an efficient before -> running : 1
efficient before running -> off : 1
before running off -> to : 1
running off to -> write : 1
off to write -> your : 1
your own check -> the : 1
own check the -> standard : 1
check the standard -> your : 1
standard your problem -> might : 1
your problem might -> already : 1
problem might already -> have : 1
might already have -> a : 1
might already have -> accepted : 1
already have a -> i : 1
have a i -> recently : 1
a i recently -> wanted : 1
i recently wanted -> to : 1
recently wanted to -> write : 1
wanted to write -> an : 1
write an algorithm -> to : 1
an algorithm to -> find : 1
algorithm to find -> the : 1
find the median -> value : 1
the median value -> in : 2
median value in -> a : 1
median value in -> the : 1
in a there -> is : 1
a there is -> no : 1
is no but -> there : 1
no but there -> is : 1
there is which -> solves : 1
is which solves -> the : 1
which solves the -> more : 1
solves the more -> general : 1
of finding the -> element : 1
of finding the -> bounds : 1
finding the element -> at : 1
element at any -> sorted : 1
at any sorted -> writing : 1
any sorted writing -> became : 1
sorted writing became -> a : 1
writing became a -> trivial : 1
became a trivial -> matter : 1
a trivial matter -> of : 1
trivial matter of -> making : 1
matter of making -> a : 1
of making a -> temporary : 1
making a temporary -> copy : 1
of the calling -> and : 1
the calling and -> then : 1
calling and then -> returning : 1
calling and then -> erasing : 1
and then returning -> an : 1
then returning an -> iterator : 1
returning an iterator -> that : 1
to the median -> value : 1
value in the -> original : 1
value in the -> range : 4
value in the -> standard : 2
the original because -> makes : 1
the original because -> the : 1
original because makes -> two : 1
because makes two -> passes : 1
makes two passes -> over : 1
two passes over -> the : 1
passes over the -> input : 1
over the input -> a : 1
the input a -> forward : 1
input a forward -> iterator : 1
forward iterator is -> as : 1
forward iterator is -> and : 1
iterator is as -> shown : 1
is as shown -> in : 1
in the median -> of : 1
the median of -> a : 2
median of a -> the : 1
median of a -> typename : 1
a the median -> of : 1
of a typename -> fwditer : 2
of a typename -> typename : 3
of a typename -> void : 1
of a typename -> randiter : 1
a typename fwditer -> fwditer : 2
typename fwditer fwditer -> compare : 3
typename fwditer fwditer -> binarypredicate : 2
typename fwditer fwditer -> const : 5
typename fwditer fwditer -> predicate : 1
typename fwditer fwditer -> size : 2
fwditer fwditer compare -> typedef : 1
fwditer fwditer compare -> function : 2
fwditer compare typedef -> typename : 1
compare typedef typename -> typename : 1
typedef typename typename -> return : 1
typename return preprocessing -> step : 1
return preprocessing step -> occurs : 1
preprocessing step occurs -> before : 1
step occurs before -> the : 1
occurs before the -> main : 1
before the main -> compilation : 1
main compilation the -> preprocessor : 1
compilation the preprocessor -> has : 1
the preprocessor has -> been : 1
the preprocessor has -> syntax : 1
preprocessor has been -> a : 1
has been a -> separate : 1
been a separate -> but : 1
a separate but -> compilers : 1
separate but compilers -> are : 1
but compilers are -> not : 1
compilers are not -> required : 1
are not required -> to : 1
required to implement -> the : 1
implement the preprocessor -> in : 1
the preprocessor in -> that : 1
preprocessor in that -> because : 1
in that because -> of : 1
that because of -> its : 1
because of its -> the : 1
of its the -> preprocessor : 1
of its the -> parameter : 2
of its the -> return : 1
of its the -> standard : 1
its the preprocessor -> has : 1
preprocessor has syntax -> and : 1
has syntax and -> semantics : 1
and semantics that -> are : 1
semantics that are -> quite : 1
that are quite -> different : 1
are quite different -> from : 1
from the rest -> of : 2
rest of see -> for : 1
information about all -> the : 1
about all the -> steps : 1
all the steps -> in : 1
the steps in -> compiling : 1
steps in compiling -> a : 1
in compiling a -> source : 1
compiling a source -> preprocessor : 1
a source preprocessor -> handles : 1
source preprocessor handles -> preprocessing : 1
preprocessor handles preprocessing -> which : 1
handles preprocessing which -> can : 1
preprocessing which can -> define : 1
which can define -> and : 1
can define and -> undefine : 2
define and undefine -> establish : 1
define and undefine -> multiple : 1
and undefine establish -> regions : 1
undefine establish regions -> of : 1
establish regions of -> conditional : 1
regions of conditional -> include : 1
of conditional include -> other : 1
conditional include other -> source : 1
include other source -> and : 1
other source and -> control : 1
source and control -> the : 1
and control the -> compilation : 1
control the compilation -> process : 1
compilation process a -> is : 1
process a is -> a : 1
name that represents -> other : 1
that represents other -> called : 1
represents other called -> the : 1
other called the -> replacement : 1
called the replacement -> when : 1
the replacement when -> the : 1
replacement when the -> macro : 1
when the macro -> name : 1
when the macro -> is : 1
the macro name -> is : 3
the macro name -> must : 1
the macro name -> as : 1
macro name is -> seen : 1
macro name is -> not : 2
macro name is -> expanded : 1
name is seen -> in : 1
is seen in -> the : 1
seen in the -> source : 1
source the preprocessor -> replaces : 1
the preprocessor replaces -> the : 1
preprocessor replaces the -> name : 1
replaces the name -> with : 1
with the replacement -> a : 1
with the replacement -> macro : 1
the replacement a -> macro : 1
replacement a macro -> can : 1
a macro can -> have : 1
macro can have -> formal : 1
can have formal -> and : 1
have formal and -> actual : 1
formal and actual -> arguments : 1
and actual arguments -> are : 1
actual arguments are -> substituted : 1
arguments are substituted -> in : 1
are substituted in -> the : 1
in the directives -> obey : 1
the directives obey -> different : 1
directives obey different -> syntax : 1
obey different syntax -> rules : 1
different syntax rules -> from : 1
syntax rules from -> the : 1
rules from the -> rest : 1
the directives are -> each : 1
directives are each -> directive : 1
are each directive -> starts : 1
each directive starts -> with : 1
directive starts with -> whitespace : 1
starts with whitespace -> characters : 1
with whitespace characters -> followed : 1
whitespace characters followed -> by : 1
characters followed by -> as : 1
characters followed by -> a : 2
followed by as -> the : 1
by as the -> first : 1
the first character -> on : 1
the first character -> in : 5
the first character -> that : 8
the first character -> as : 1
the first character -> of : 4
the first character -> from : 1
the first character -> at : 2
first character on -> a : 1
character on a -> after : 1
on a after -> the : 1
a after the -> is : 1
after the is -> more : 1
the is more -> optional : 1
is more optional -> whitespace : 1
more optional whitespace -> newlines : 1
optional whitespace newlines -> are : 1
whitespace newlines are -> followed : 1
newlines are followed -> by : 1
are followed by -> the : 1
are followed by -> one : 1
by the directive -> each : 1
by the directive -> and : 1
the directive each -> directive : 1
directive each directive -> extends : 1
each directive extends -> to : 1
directive extends to -> the : 1
of the a -> at : 1
of the a -> reverse : 10
of the a -> decimal : 1
of the a -> pointer : 1
of the a -> substring : 1
of the a -> closure : 1
the a at -> the : 1
a at the -> end : 1
the line continues -> the : 1
line continues the -> directive : 1
continues the directive -> onto : 1
the directive onto -> the : 1
directive onto the -> subsequent : 1
onto the subsequent -> directive : 1
the subsequent directive -> name : 1
subsequent directive name -> must : 1
directive name must -> be : 1
must be one -> of : 6
must be one -> for : 13
of the names -> listed : 1
of the names -> declared : 1
the names listed -> in : 1
names listed in -> this : 1
listed in this -> any : 1
in this any -> other : 1
this any other -> preprocessing : 1
any other preprocessing -> token : 1
other preprocessing token -> after : 1
preprocessing token after -> the : 1
token after the -> initial : 1
after the initial -> character : 1
the initial character -> is : 1
initial character is -> an : 1
character is an -> operator : 1
character is an -> alphanumeric : 1
character is an -> uppercase : 1
operator and operator -> and : 1
and operator and -> directive : 1
operator and directive -> stringify : 1
operator and directive -> defines : 1
and directive stringify -> operator : 1
directive stringify operator -> and : 1
stringify operator and -> null : 1
operator and null -> null : 1
and null null -> directive : 1
null null directive -> preprocessor : 1
null directive preprocessor -> directive : 1
directive preprocessor directive -> with : 1
preprocessor directive with -> no : 1
directive with no -> directive : 1
with no directive -> name : 1
with no directive -> is : 1
no directive name -> is : 1
directive name is -> called : 1
name is called -> a : 1
called a it -> has : 1
a it has -> no : 1
has no operator -> can : 1
no operator can -> also : 1
operator can also -> be : 1
a unary sometimes -> called : 1
unary sometimes called -> the : 1
called the because -> it : 2
the because it -> turns : 1
the because it -> concatenates : 1
because it turns -> its : 1
it turns its -> operand : 1
turns its operand -> into : 1
its operand into -> a : 1
operand into a -> it : 1
into a it -> can : 1
in the macro -> replacement : 2
the macro replacement -> text : 2
the macro replacement -> the : 1
the macro replacement -> each : 1
macro replacement text -> of : 2
replacement text of -> a : 2
text of a -> it : 2
must be followed -> by : 2
by a parameter -> name : 1
parameter name for -> the : 1
for the macro -> being : 2
for the macro -> and : 1
for the macro -> expansion : 1
for the macro -> in : 1
for the macro -> name : 1
for the macro -> expands : 1
for the macro -> or : 1
the macro being -> the : 1
the macro being -> they : 1
the macro being -> following : 1
macro being the -> operator : 1
being the operator -> and : 1
the operator and -> the : 1
operator and the -> parameter : 1
and the parameter -> name : 1
and the parameter -> is : 7
parameter name are -> replaced : 1
name are replaced -> by : 1
are replaced by -> a : 1
are replaced by -> the : 1
are replaced by -> might : 1
by a string -> literal : 1
string literal whose -> contents : 1
literal whose contents -> are : 1
whose contents are -> the : 2
contents are the -> text : 1
contents are the -> result : 1
are the text -> of : 1
the text of -> the : 4
text of the -> macro : 1
text of the -> and : 1
text of the -> integer : 2
of the macro -> argument : 1
of the macro -> replacement : 1
of the macro -> being : 1
of the macro -> named : 1
of the macro -> code : 1
of the macro -> the : 1
of the macro -> null : 1
of the macro -> computes : 1
the macro argument -> that : 1
the macro argument -> is : 1
macro argument that -> corresponds : 1
argument that corresponds -> to : 1
that corresponds to -> the : 3
corresponds to the -> macro : 1
corresponds to the -> error : 1
corresponds to the -> initial : 1
corresponds to the -> const : 1
to the macro -> the : 1
to the macro -> error : 1
to the macro -> abort : 1
to the macro -> sets : 2
to the macro -> disables : 1
to the macro -> expands : 1
the macro the -> macro : 1
the macro the -> actual : 1
macro the macro -> argument : 1
macro argument is -> not : 1
argument is not -> expanded : 1
argument is not -> is : 1
is not expanded -> before : 1
is not expanded -> by : 1
is not expanded -> if : 1
is not expanded -> in : 1
is not expanded -> as : 1
not expanded before -> being : 1
expanded before being -> converted : 1
before being converted -> to : 1
being converted to -> a : 1
to a whitespace -> in : 1
a whitespace in -> the : 2
a whitespace in -> function : 1
whitespace in the -> argument : 1
whitespace in the -> the : 1
whitespace in the -> input : 1
whitespace in the -> locale : 1
argument is condensed -> to : 1
is condensed to -> a : 1
condensed to a -> single : 1
a single space -> character : 1
single space character -> between : 1
space character between -> leading : 1
character between leading -> and : 1
between leading and -> trailing : 1
leading and trailing -> whitespace : 1
and trailing whitespace -> is : 1
trailing whitespace is -> evaluation : 1
whitespace is evaluation -> order : 1
is evaluation order -> of : 1
evaluation order of -> and : 2
order of and -> operators : 2
of and operators -> is : 2
and operators is -> if : 2
operators is if -> the : 2
if the order -> is : 2
order is you -> can : 2
you can control -> the : 2
can control the -> order : 2
control the order -> by : 2
the order by -> using : 2
order by using -> multiple : 2
by using multiple -> following : 2
using multiple following -> example : 2
multiple following example -> prints : 2
following example prints -> the : 1
following example prints -> to : 1
example prints the -> text : 1
prints the text -> now : 1
the text now -> then : 1
text now then -> is : 1
now then is -> was : 1
then is was -> now : 1
is was now -> is : 1
was now is -> the : 1
now is the -> time : 1
is the time -> operator : 1
the time operator -> concatenation : 1
time operator concatenation -> operator : 1
operator concatenation operator -> is : 1
concatenation operator is -> a : 1
a binary sometimes -> called : 1
binary sometimes called -> the : 1
because it concatenates -> preprocessor : 1
it concatenates preprocessor -> it : 1
concatenates preprocessor it -> can : 1
preprocessor it can -> be : 1
it must not -> appear : 1
must not appear -> at : 1
not appear at -> the : 1
the start or -> end : 2
start or end -> of : 1
start or end -> is : 1
macro replacement the -> operands : 1
replacement the operands -> of : 1
the operator must -> be : 1
must be parameter -> names : 1
be parameter names -> for : 1
parameter names for -> the : 1
parameter names for -> iterator : 3
macro being they -> are : 1
being they are -> replaced : 1
they are replaced -> by : 1
replaced by the -> corresponding : 2
by the corresponding -> macro : 1
by the corresponding -> for : 1
the corresponding macro -> which : 1
corresponding macro which -> are : 1
macro which are -> not : 1
macro which are -> recursively : 1
not the tokens -> immediately : 1
the tokens immediately -> adjacent : 1
tokens immediately adjacent -> to : 1
immediately adjacent to -> the : 1
adjacent to the -> operator : 1
the operator are -> concatenated : 1
operator are concatenated -> to : 1
are concatenated to -> form : 1
concatenated to form -> a : 1
form a single -> if : 1
not a valid -> the : 1
not a valid -> multibyte : 1
not a valid -> or : 2
a valid the -> behavior : 1
valid the behavior -> is : 1
is the token -> is : 1
is the token -> std : 1
token is expanded -> evaluation : 1
is expanded evaluation -> order : 1
expanded evaluation order -> of : 1
example prints to -> because : 1
prints to because -> the : 1
to because the -> macro : 1
because the macro -> assembles : 1
because the macro -> body : 1
the macro assembles -> the : 1
macro assembles the -> token : 1
assembles the token -> from : 1
the token from -> and : 1
token from and -> s : 1
from and s -> this : 1
and s this -> is : 1
s this is -> not : 1
not expanded by -> the : 1
expanded by the -> concatenation : 1
by the concatenation -> operator : 1
the concatenation operator -> t : 1
concatenation operator t -> nor : 1
operator t nor -> is : 1
t nor is -> so : 1
nor is so -> the : 1
so the result -> is : 1
the token std -> operator : 1
token std operator -> and : 1
std operator and -> directive : 1
and directive defines -> a : 1
directive defines a -> directive : 1
directive defines a -> macro : 1
defines a directive -> defines : 1
a directive defines -> a : 1
defines a macro -> named : 1
a macro named -> the : 1
macro named the -> replacement : 1
named the replacement -> text : 1
the replacement text -> is : 2
replacement text is -> the : 1
replacement text is -> rescanned : 1
replacement text is -> never : 1
text is the -> list : 1
text is the -> macro : 1
is the list -> of : 1
list of tokens -> shown : 1
of tokens shown -> as : 1
tokens shown as -> the : 1
shown as the -> macro : 1
as the macro -> can : 1
as the macro -> definition : 1
the macro can -> be : 1
macro can be -> with : 1
can be with -> no : 1
be with no -> or : 1
with no or -> can : 1
no or can -> have : 1
have an argument -> the : 1
an argument the -> argument : 1
argument the argument -> list : 1
list is introduced -> by : 1
introduced by a -> left : 1
by a left -> parenthesis : 1
by a left -> so : 1
a left parenthesis -> that : 1
left parenthesis that -> immediately : 1
parenthesis that immediately -> follows : 1
that immediately follows -> the : 1
that immediately follows -> is : 1
immediately follows the -> macro : 1
follows the macro -> if : 1
the macro if -> there : 1
macro if there -> is : 1
is a space -> between : 1
space between and -> the : 1
space between and -> stream : 1
between and the -> is : 1
between and the -> smallest : 4
between and the -> argument : 2
between and the -> function : 1
the is interpreted -> as : 1
as the start -> of : 3
of the definition -> of : 1
simple the can -> be : 1
be or it -> can : 1
be a list -> of : 1
list of identifiers -> separated : 1
of identifiers separated -> by : 1
identifiers separated by -> whitespace : 1
by whitespace is -> permitted : 1
whitespace is permitted -> in : 1
is permitted in -> the : 1
permitted in the -> and : 1
the and before -> the : 1
before the closing -> programmers : 1
the closing programmers -> are : 1
closing programmers are -> accustomed : 1
to using macros -> to : 1
using macros to -> declare : 1
macros to declare -> constants : 1
to declare constants -> and : 1
declare constants and -> simple : 1
constants and simple -> inline : 1
and simple inline -> but : 1
simple inline but -> offers : 1
inline but offers -> true : 1
but offers true -> inline : 1
offers true inline -> and : 1
true inline and -> macros : 1
inline and macros -> are : 1
and macros are -> therefore : 1
and macros are -> meant : 1
macros are therefore -> used : 1
are therefore used -> much : 1
therefore used much -> less : 1
used much less -> often : 1
much less often -> in : 1
than in the -> main : 1
than in the -> namespace : 1
in the main -> drawback : 1
the main drawback -> to : 1
main drawback to -> is : 1
drawback to is -> that : 1
to is that -> they : 1
that they do -> not : 2
do not obey -> scope : 1
not obey scope -> or : 1
obey scope or -> namespace : 1
scope or namespace -> when : 1
or namespace when -> you : 1
namespace when you -> must : 1
when you must -> use : 2
use a common -> convention : 1
a common convention -> is : 1
common convention is -> to : 1
common convention is -> that : 1
use all uppercase -> letters : 2
all uppercase letters -> for : 2
uppercase letters for -> the : 1
uppercase letters for -> scope : 1
uppercase letters for -> generated : 2
letters for the -> macro : 1
the macro and -> never : 1
the macro and -> conditional : 1
macro and never -> use : 1
and never use -> all : 1
never use all -> uppercase : 1
letters for scope -> is : 1
for scope is -> from : 1
scope is from -> the : 1
point of definition -> to : 1
of definition to -> the : 1
definition to the -> end : 1
the source or -> until : 1
source or until -> you : 1
or until you -> undefine : 1
or until you -> the : 1
or until you -> thaw : 1
until you undefine -> the : 1
you undefine the -> macro : 1
undefine the macro -> with : 1
the macro with -> the : 1
macro with the -> if : 1
with the if -> you : 1
with the if -> operator : 2
with the if -> the : 1
if you try -> to : 1
try to repeat -> a : 1
to repeat a -> macro : 1
repeat a macro -> the : 1
a macro the -> new : 1
a macro the -> angle : 1
a macro the -> directive : 1
macro the new -> definition : 1
the new definition -> must : 1
new definition must -> be : 1
be identical to -> the : 1
identical to the -> original : 1
original the only -> way : 1
way to give -> a : 1
to give a -> macro : 1
give a macro -> a : 1
a macro a -> different : 1
a macro a -> the : 1
macro a different -> definition : 1
a different definition -> is : 1
different definition is -> to : 1
definition is to -> undefine : 1
is to undefine -> it : 1
to undefine it -> with : 1
undefine it with -> no : 1
it with no -> you : 1
with no you -> any : 1
with no you -> call : 1
no you any -> standard : 1
you any standard -> a : 1
any standard a -> macro : 1
standard a macro -> name : 1
a macro name -> cannot : 1
a macro name -> appears : 1
macro name cannot -> be : 1
as a reserved -> keyword : 1
a reserved keyword -> or : 1
a reserved keyword -> in : 1
reserved keyword or -> any : 1
keyword or any -> of : 1
or any of -> the : 1
in the many -> compilers : 1
the many compilers -> accept : 1
many compilers accept -> keywords : 1
compilers accept keywords -> as : 1
accept keywords as -> macro : 1
keywords as macro -> but : 1
as macro but -> your : 1
macro but your -> program : 1
but your program -> would : 1
your program would -> still : 1
program would still -> be : 1
would still be -> wrong : 1
still be wrong -> and : 1
be wrong and -> would : 1
wrong and would -> not : 1
and would not -> be : 1
not be portable -> to : 1
be portable to -> a : 1
be portable to -> other : 1
portable to a -> compiler : 1
to a compiler -> that : 1
a compiler that -> is : 1
compiler that is -> more : 1
that is more -> strict : 1
is more strict -> about : 1
more strict about -> detecting : 1
strict about detecting -> this : 1
about detecting this -> particular : 1
detecting this particular -> even : 1
this particular even -> if : 1
particular even if -> you : 1
do not a -> standard : 1
not a standard -> using : 1
not a standard -> container : 1
a standard using -> to : 1
standard using to -> redefine : 1
using to redefine -> keywords : 1
to redefine keywords -> is : 1
redefine keywords is -> usually : 1
keywords is usually -> a : 1
a bad a -> macro : 1
bad a macro -> name : 1
macro name appears -> as : 1
name appears as -> a : 1
appears as a -> distinct : 1
as a distinct -> token : 1
a distinct token -> after : 1
distinct token after -> its : 1
token after its -> it : 1
after its it -> is : 1
it is replaced -> with : 1
is replaced with -> the : 2
replaced with the -> replacement : 1
replaced with the -> character : 1
the replacement macro -> names : 1
replacement macro names -> are : 1
macro names are -> not : 1
macro names are -> conditional : 1
names are not -> replaced : 1
names are not -> subject : 1
are not replaced -> inside : 1
not replaced inside -> string : 1
replaced inside string -> and : 1
inside string and -> character : 1
string and character -> the : 1
and character the -> replacement : 1
character the replacement -> text : 1
text is rescanned -> for : 2
is rescanned for -> macro : 1
is rescanned for -> the : 1
rescanned for macro -> which : 1
for macro which -> are : 1
which are recursively -> expanded : 1
are recursively expanded -> until : 1
recursively expanded until -> no : 1
expanded until no -> more : 1
until no more -> replacements : 1
no more replacements -> take : 1
more replacements take -> during : 1
replacements take during -> the : 1
take during the -> original : 1
during the original -> macro : 1
the original macro -> name : 1
original macro name -> is : 1
not expanded if -> it : 1
expanded if it -> appears : 1
if it appears -> in : 1
it appears in -> any : 1
appears in any -> replacement : 1
in any replacement -> here : 1
any replacement here -> is : 1
replacement here is -> a : 1
here is a -> simple : 1
a simple example -> of : 1
simple example of -> a : 1
of a macro -> definition : 1
of a macro -> maximum : 3
a macro definition -> and : 1
macro definition and -> name : 1
definition and name -> tempest : 1
definition and name -> of : 1
and name tempest -> char : 1
name tempest char -> the : 1
tempest char the -> expansion : 1
char the expansion -> phase : 1
the expansion phase -> of : 1
expansion phase of -> the : 1
phase of the -> token : 1
the token will -> be : 1
token will be -> replaced : 1
will be replaced -> by : 1
replaced by its -> with : 1
replaced by its -> corresponding : 1
replaced by its -> lowercase : 1
replaced by its -> uppercase : 1
by its with -> the : 1
its with the -> following : 1
the following tempest -> replacement : 1
following tempest replacement -> text : 1
tempest replacement text -> is : 1
text is never -> interpreted : 1
is never interpreted -> as : 1
never interpreted as -> a : 1
as a preprocessing -> this : 1
a preprocessing this -> for : 1
preprocessing this for -> you : 1
this for you -> cannot : 1
you cannot a -> macro : 1
cannot a macro -> within : 1
a macro within -> a : 1
macro within a -> replacement : 1
within a replacement -> directive : 1
a replacement directive -> names : 1
replacement directive names -> are : 1
directive names are -> not : 1
are not subject -> to : 1
not subject to -> macro : 1
subject to macro -> replacement : 1
to macro replacement -> directive : 1
macro replacement directive -> arguments : 1
replacement directive arguments -> can : 1
directive arguments can -> also : 1
arguments can also -> declare : 1
can also declare -> a : 2
also declare a -> macro : 1
also declare a -> static : 1
also declare a -> pointer : 1
declare a macro -> with : 1
a macro with -> a : 1
macro with a -> parameter : 1
with a parameter -> which : 1
a parameter which -> is : 1
parameter which is -> sometimes : 1
which is sometimes -> called : 1
called a x -> y : 1
a x y -> z : 1
x y z -> use : 1
y z use -> a : 1
z use a -> the : 1
use a the -> macro : 1
a the macro -> name : 1
a the macro -> expands : 2
macro name must -> be : 1
by a argument -> list : 1
a argument list -> in : 1
argument list in -> a : 1
list in a -> single : 1
single argument can -> contain : 1
argument can contain -> balanced : 1
can contain balanced -> and : 1
contain balanced and -> within : 1
balanced and within -> those : 1
and within those -> you : 1
within those you -> can : 1
those you can -> have : 1
can have which -> are : 1
have which are -> not : 1
are not interpreted -> as : 1
interpreted as argument -> the : 1
as argument the -> macro : 1
argument the macro -> invocation : 1
the macro invocation -> must : 1
macro invocation must -> have : 1
invocation must have -> the : 1
the same number -> of : 4
same number of -> arguments : 1
same number of -> even : 1
same number of -> starting : 1
same number of -> using : 1
of arguments as -> the : 1
arguments as the -> macro : 1
the macro definition -> has : 1
macro definition has -> newlines : 1
definition has newlines -> are : 1
has newlines are -> permitted : 1
newlines are permitted -> as : 1
are permitted as -> ordinary : 1
permitted as ordinary -> whitespace : 1
as ordinary whitespace -> characters : 1
ordinary whitespace characters -> in : 1
whitespace characters in -> a : 1
whitespace characters in -> using : 1
characters in a -> macro : 1
characters in a -> span : 1
in a macro -> following : 1
a macro following -> example : 1
macro following example -> uses : 1
following example uses -> the : 1
example uses the -> and : 1
the and macros -> defined : 1
the and macros -> are : 1
and macros defined -> in : 1
macros defined in -> the : 1
previous the macro -> replacement : 1
macro replacement each -> occurrence : 1
replacement each occurrence -> of : 1
parameter name is -> replaced : 1
name is replaced -> by : 1
the corresponding for -> the : 1
corresponding for the -> macro : 1
the macro expansion -> for : 1
macro expansion for -> the : 1
expansion for the -> previous : 1
for the previous -> example : 1
the previous example -> results : 1
previous example results -> in : 1
the int x -> x : 1
int x x -> must : 1
x x must -> be : 1
x must be -> extra : 1
must be extra -> cautious : 1
be extra cautious -> when : 1
extra cautious when -> using : 1
cautious when using -> a : 1
when using a -> template : 1
a template instantiation -> as : 1
template instantiation as -> a : 1
as a macro -> the : 1
macro the angle -> brackets : 1
not treated specially -> for : 1
treated specially for -> macro : 1
specially for macro -> so : 1
for macro so -> commas : 1
macro so commas -> that : 1
so commas that -> separate : 1
commas that separate -> the : 1
that separate the -> template : 1
arguments are interpreted -> as : 7
interpreted as separators -> for : 1
as separators for -> the : 1
separators for the -> macro : 1
the macro in -> the : 1
macro in the -> following : 1
following the macro -> attempts : 1
the macro attempts -> to : 1
macro attempts to -> declare : 1
attempts to declare -> an : 1
object named with -> type : 1
named with type -> this : 1
with type this -> works : 1
type this works -> fine : 1
this works fine -> for : 1
works fine for -> a : 1
fine for a -> simple : 1
for a simple -> such : 1
a simple such -> as : 1
simple such as -> but : 1
such as but -> fails : 1
as but fails -> with : 1
but fails with -> a : 1
fails with a -> template : 1
a template when -> used : 1
template when used -> with : 1
when used with -> the : 1
with the comma -> separates : 1
the comma separates -> macro : 1
comma separates macro -> so : 1
separates macro so -> the : 1
macro so the -> preprocessor : 1
so the preprocessor -> sees : 1
the preprocessor sees -> three : 1
preprocessor sees three -> macro : 1
sees three macro -> and : 1
three macro and -> reports : 1
macro and reports -> an : 1
and reports an -> t : 1
reports an t -> n : 1
an t n -> expands : 1
t n expands -> to : 1
n expands to -> int : 1
expands to int -> zero : 1
to int zero -> a : 1
int zero a -> macro : 1
zero a macro -> is : 1
a macro is -> the : 1
a macro is -> defined : 1
a macro is -> directive : 2
macro is the -> macro : 1
macro is the -> text : 1
macro is the -> number : 1
macro is the -> maximum : 1
macro is the -> largest : 1
macro is the -> smallest : 1
is the macro -> arguments : 1
is the macro -> is : 2
is the macro -> expands : 1
the macro arguments -> are : 1
macro arguments are -> and : 1
arguments are and -> each : 1
and each parameter -> is : 1
parameter is replaced -> by : 1
by its corresponding -> expanded : 1
its corresponding expanded -> argument : 1
corresponding expanded argument -> unless : 1
expanded argument unless -> the : 1
argument unless the -> parameter : 1
unless the parameter -> is : 1
the parameter is -> an : 2
the parameter is -> interpreted : 1
the parameter is -> the : 2
the parameter is -> a : 7
the parameter is -> not : 1
the parameter is -> passed : 1
the parameter is -> used : 1
is an operand -> to : 1
is an operand -> of : 1
operand to the -> or : 1
to the or -> after : 1
to the or -> converts : 1
to the or -> you : 1
to the or -> start : 2
to the or -> the : 1
the or after -> the : 1
after the arguments -> have : 1
the arguments have -> been : 1
arguments have been -> the : 1
have been the -> and : 1
have been the -> newline : 1
been the and -> operators : 1
operators are and -> the : 1
the resulting text -> is : 1
resulting text is -> rescanned : 1
rescanned for the -> macro : 1
name is expanded -> only : 1
is expanded only -> so : 1
expanded only so -> rescanning : 1
only so rescanning -> does : 1
so rescanning does -> not : 1
rescanning does not -> expand : 1
does not expand -> the : 1
not expand the -> name : 1
expand the name -> of : 1
macro being following -> are : 1
being following are -> do : 1
following are do -> not : 1
are do not -> undefine : 1
do not undefine -> or : 1
not undefine or -> redefine : 1
undefine or redefine -> any : 1
or redefine any -> of : 1
redefine any of -> the : 1
of the predefined -> the : 1
of the predefined -> function : 1
the predefined the -> value : 1
predefined the value -> future : 1
the value future -> versions : 1
value future versions -> of : 1
future versions of -> the : 1
the standard will -> use : 1
standard will use -> a : 1
will use a -> larger : 1
use a larger -> nonconforming : 1
a larger nonconforming -> compilers : 1
larger nonconforming compilers -> should : 1
nonconforming compilers should -> use : 1
compilers should use -> a : 1
should use a -> different : 1
should use a -> instead : 1
use a different -> to : 1
use a different -> function : 1
use a different -> in : 1
a different to -> the : 1
different to the -> date : 1
to the date -> of : 1
the date of -> as : 1
date of as -> a : 1
of as a -> string : 1
of as a -> generalization : 1
as a string -> in : 3
as a string -> of : 1
as a string -> the : 1
as a string -> and : 1
a string in -> the : 3
string in the -> form : 2
string in the -> input : 1
the form in -> which : 3
form in which -> begins : 1
form in which -> is : 2
in which begins -> with : 1
which begins with -> a : 1
with a space -> for : 1
a space for -> numbers : 1
space for numbers -> less : 1
for numbers less -> than : 1
numbers less than -> an : 1
less than an -> implementation : 1
than an implementation -> is : 1
free to substitute -> a : 2
to substitute a -> different : 2
substitute a different -> but : 2
a different but -> the : 2
different but the -> form : 2
but the form -> is : 2
form is always -> the : 2
always the and -> the : 2
and the date -> is : 1
the date is -> always : 1
date is always -> to : 1
is always to -> the : 1
always to the -> as : 1
to the as -> a : 1
the as a -> string : 1
a string of -> the : 1
a string of -> digits : 2
a string of -> multibyte : 2
a string of -> digit : 1
a string of -> length : 1
string of the -> source : 1
source file being -> to : 1
source file being -> compilers : 1
file being to -> the : 1
being to the -> line : 1
to the line -> as : 1
the line as -> a : 1
line as a -> decimal : 1
as a decimal -> of : 1
a decimal of -> the : 1
decimal of the -> source : 1
file being compilers -> might : 1
being compilers might -> define : 1
compilers might define -> this : 1
might define this -> if : 1
define this if -> it : 1
note that c -> compilers : 1
that c compilers -> are : 1
c compilers are -> required : 1
compilers are required -> to : 1
are required to -> define : 1
required to define -> as : 1
to define as -> and : 1
to define as -> a : 1
to define as -> to : 1
define as and -> in : 1
as and in -> some : 1
and in some -> the : 1
some the same -> preprocessor : 1
the same preprocessor -> might : 1
same preprocessor might -> be : 1
preprocessor might be -> used : 1
used for c -> and : 1
for c and -> to : 1
c and to -> the : 1
to the compilation -> as : 1
the compilation as -> a : 1
compilation as a -> string : 1
the form an -> implementation : 1
form an implementation -> is : 1
and the time -> is : 1
the time is -> always : 1
the time is -> returned : 1
time is always -> implementation : 1
is always implementation -> is : 1
always implementation is -> free : 1
free to predefine -> other : 1
to predefine other -> macros : 1
predefine other macros -> that : 1
other macros that -> use : 1
macros that use -> any : 1
of the reserved -> such : 1
the reserved such -> as : 1
reserved such as -> names : 1
such as names -> that : 1
as names that -> contain : 1
names that contain -> two : 1
that contain two -> adjacent : 1
contain two adjacent -> underscores : 1
two adjacent underscores -> or : 1
adjacent underscores or -> a : 1
underscores or a -> leading : 1
a leading underscore -> followed : 1
leading underscore followed -> by : 1
underscore followed by -> an : 1
an uppercase for -> compilers : 1
uppercase for compilers -> often : 1
for compilers often -> define : 1
compilers often define -> macros : 1
often define macros -> to : 1
define macros to -> indicate : 1
macros to indicate -> the : 1
to indicate the -> host : 1
to indicate the -> absence : 1
indicate the host -> or : 1
the host or -> target : 1
host or target -> consult : 1
or target consult -> your : 1
target consult your -> documentation : 1
your documentation for -> writing : 1
documentation for writing -> a : 1
for writing a -> container : 1
writing a container -> class : 1
a container class -> template : 1
container class template -> and : 1
container class template -> is : 1
template and it -> is : 1
and it is -> important : 1
and it is -> the : 1
important to detect -> when : 1
to detect when -> a : 1
detect when a -> template : 1
an integral there -> are : 1
integral there are -> several : 1
are several ways -> to : 1
ways to do -> one : 1
to do one -> way : 1
do one way -> is : 1
one way is -> to : 1
to use type -> traits : 1
use type traits -> a : 1
type traits a -> template : 1
traits a template -> declares : 1
a template declares -> a : 1
template declares a -> special : 1
declares a special -> tag : 1
a special tag -> for : 1
special tag for -> all : 1
tag for all -> integral : 1
tag for all -> other : 1
all integral types -> and : 2
types and a -> different : 1
and a different -> tag : 1
a different tag -> for : 1
different tag for -> all : 1
other the traits -> template : 1
the traits template -> is : 1
traits template is -> then : 1
template is then -> specialized : 1
is then specialized -> for : 1
then specialized for -> the : 1
specialized for the -> integral : 1
specialized for the -> it : 1
for the integral -> which : 1
for the integral -> the : 1
the integral which -> is : 1
integral which is -> and : 1
which is and -> using : 1
which is and -> is : 1
is and using -> a : 1
and using a -> reduces : 1
using a reduces -> the : 1
a reduces the -> opportunity : 1
reduces the opportunity -> for : 1
the opportunity for -> errors : 1
opportunity for errors -> because : 1
for errors because -> the : 1
errors because the -> macro : 1
the macro body -> is : 1
macro body is -> written : 1
body is written -> type : 1
is written type -> traits : 1
written type traits -> with : 1
type traits with -> a : 2
traits with a -> shows : 1
traits with a -> type : 1
how the specializes -> the : 1
the specializes the -> class : 1
specializes the class -> template : 1
template for each -> integral : 1
for each integral -> type : 1
each integral type -> traits : 1
integral type traits -> with : 1
integral struct enum -> value : 2
enum value typedef -> explicitly : 1
enum value typedef -> shows : 1
value typedef explicitly -> override : 1
typedef explicitly override -> the : 1
explicitly override the -> default : 1
default for all -> integral : 1
default for all -> categories : 1
value typedef shows -> another : 1
typedef shows another -> way : 1
shows another way -> that : 1
another way that -> macros : 1
way that macros -> are : 1
that macros are -> used : 1
macros are used -> when : 1
are used when -> testing : 1
used when testing -> the : 1
when testing the -> the : 1
testing the the -> macro : 1
the the macro -> calls : 1
the the macro -> cannot : 1
the the macro -> expands : 5
the macro calls -> a : 1
macro calls a -> function : 1
function and prints -> the : 1
and prints the -> the : 1
prints the the -> macro : 1
the macro cannot -> be : 1
macro cannot be -> implemented : 1
cannot be implemented -> as : 1
a function because -> it : 1
function because it -> uses : 1
because it uses -> the : 1
it uses the -> int : 1
it uses the -> rules : 1
it uses the -> unmodified : 1
uses the int -> using : 1
the int using -> namespace : 1
namespace string cout -> compilers : 1
string cout compilers -> have : 1
cout compilers have -> an : 1
compilers have an -> option : 1
have an option -> in : 1
an option in -> which : 1
option in which -> the : 1
which the compiler -> runs : 1
which the compiler -> would : 1
the compiler runs -> only : 1
compiler runs only -> the : 1
runs only the -> and : 1
you can examine -> the : 1
can examine the -> results : 1
examine the results -> after : 1
the results after -> all : 1
results after all -> macros : 1
after all macros -> have : 1
all macros have -> been : 1
macros have been -> expanded : 1
have been expanded -> and : 1
been expanded and -> all : 1
expanded and all -> preprocessor : 1
and all preprocessor -> directives : 1
all preprocessor directives -> have : 1
preprocessor directives have -> been : 1
directives have been -> this : 1
have been this -> mode : 1
been this mode -> can : 1
this mode can -> be : 1
mode can be -> helpful : 1
can be helpful -> when : 2
be helpful when -> debugging : 1
be helpful when -> implementing : 1
helpful when debugging -> an : 1
when debugging an -> incorrect : 1
debugging an incorrect -> macro : 1
an incorrect macro -> is : 1
incorrect macro is -> a : 1
macro is a -> contrived : 1
macro is a -> standard : 3
is a contrived -> example : 1
a contrived example -> that : 1
contrived example that -> illustrates : 1
example that illustrates -> how : 1
that illustrates how -> macros : 1
illustrates how macros -> are : 1
how macros are -> try : 1
macros are try -> running : 1
are try running -> the : 1
try running the -> example : 1
running the example -> through : 1
the example through -> your : 1
example through your -> compiler : 1
through your compiler -> to : 1
your compiler to -> see : 1
compiler to see -> if : 1
see if the -> results : 1
if the results -> are : 1
results are than -> the : 1
are than the -> results : 1
than the results -> should : 1
the results should -> be : 1
results should be -> the : 1
same as what -> is : 1
as what is -> shown : 1
what is shown -> in : 1
is shown in -> the : 1
is shown in -> a : 1
in the rest -> of : 1
of this x -> x : 1
this x x -> y : 1
x x y -> hello : 1
x y hello -> hi : 1
y hello hi -> x : 1
hello hi x -> first : 1
hi x first -> macro : 1
x first macro -> expansion : 1
first macro expansion -> shows : 1
macro expansion shows -> how : 3
expansion shows how -> the : 2
expansion shows how -> to : 1
how the macro -> name : 1
how the macro -> forms : 1
not expanded in -> the : 1
expanded in the -> replacement : 1
in the replacement -> the : 1
the replacement the -> result : 1
replacement the result -> is : 1
result is second -> macro : 1
is second macro -> expansion : 1
second macro expansion -> shows : 1
the macro forms -> a : 1
macro forms a -> new : 1
forms a new -> token : 1
a new token -> from : 1
new token from -> its : 1
token from its -> after : 1
from its after -> the : 1
its after the -> macro : 1
after the macro -> is : 1
is the text -> is : 1
the text is -> the : 1
macro is then -> invoked : 1
is then invoked -> with : 1
then invoked with -> the : 1
invoked with the -> because : 1
with the because -> the : 1
the because the -> parameter : 1
because the parameter -> is : 1
an operand of -> the : 1
an operand of -> or : 1
operand of the -> argument : 1
operand of the -> assignment : 1
is not is -> applied : 1
is not is -> assigned : 3
is not is -> modified : 1
is not is -> characters : 1
is not is -> appended : 1
is not is -> some : 1
not is applied -> to : 1
applied to to -> produce : 1
to to produce -> the : 1
to produce the -> third : 1
produce the third -> macro : 1
the third macro -> expansion : 1
third macro expansion -> is : 1
macro expansion is -> like : 1
expansion is like -> the : 1
is like the -> except : 4
is like the -> but : 3
like the except -> it : 2
like the except -> the : 1
like the except -> that : 1
the except it -> invokes : 1
the except it -> fills : 1
except it invokes -> instead : 1
it invokes instead -> of : 1
invokes instead of -> the : 1
instead of the -> difference : 1
instead of the -> default : 1
instead of the -> functions : 1
instead of the -> c : 1
of the difference -> is : 1
is that expands -> its : 1
that expands its -> because : 1
expands its because -> the : 1
its because the -> replacement : 1
because the replacement -> does : 1
the replacement does -> not : 1
replacement does not -> use : 1
the or expands -> to : 1
or expands to -> which : 1
expands to which -> has : 1
to which has -> the : 1
which has the -> following : 1
the following fourth -> expansion : 1
following fourth expansion -> also : 1
fourth expansion also -> invokes : 1
expansion also invokes -> to : 1
also invokes to -> produce : 1
invokes to produce -> but : 1
to produce but -> is : 1
produce but is -> not : 1
but is not -> followed : 1
but is not -> the : 1
but is not -> necessarily : 1
is not followed -> by : 1
not followed by -> a : 1
a left so -> it : 1
left so it -> is : 1
not expanded as -> a : 1
expanded as a -> it : 1
as a it -> is : 2
it is followed -> by : 1
the parameter of -> is : 1
parameter of is -> not : 1
of is not -> an : 1
not an operand -> of : 1
operand of or -> so : 1
or so it -> is : 1
it is which -> means : 1
the argument expands -> to : 1
argument expands to -> and : 1
expands to and -> the : 1
the final result -> fifth : 1
final result fifth -> expansion : 1
result fifth expansion -> is : 1
fifth expansion is -> just : 1
expansion is just -> like : 1
just like the -> but : 1
just like the -> ordinary : 1
like the but -> emphasizes : 1
like the but -> it : 3
the but emphasizes -> how : 1
but emphasizes how -> the : 1
emphasizes how the -> argument : 1
how the argument -> to : 1
the argument to -> is : 1
the argument to -> an : 1
the argument to -> let : 1
the argument to -> the : 6
argument to is -> not : 1
argument to is -> the : 2
to is not -> the : 1
to is not -> an : 2
the result final -> macro : 1
result final macro -> expansion : 1
final macro expansion -> shows : 1
how to expand -> as : 1
to expand as -> an : 1
expand as an -> argument : 1
argument to even -> when : 1
to even when -> is : 1
even when is -> the : 1
when is the -> result : 1
when is the -> loop : 1
when is the -> debugging : 1
when is the -> value : 1
the the parameters -> of : 1
parameters of are -> resulting : 1
of are resulting -> in : 1
are resulting in -> the : 1
resulting in the -> text : 1
in the text -> which : 1
the text which -> expands : 1
text which expands -> operator : 1
which expands operator -> tests : 1
expands operator tests -> whether : 1
operator tests whether -> a : 1
tests whether a -> macro : 3
tests whether a -> number : 1
tests whether a -> locale : 1
whether a macro -> is : 3
macro is defined -> unary : 1
macro is defined -> at : 1
is defined unary -> operator : 1
defined unary operator -> written : 1
unary operator written -> as : 1
operator written as -> without : 1
written as without -> the : 1
as without the -> evaluates : 1
as without the -> macro : 1
without the evaluates -> to : 1
the evaluates to -> if : 1
the evaluates to -> the : 1
evaluates to if -> is : 1
is a known -> macro : 1
a known macro -> name : 1
known macro name -> at : 1
macro name at -> the : 1
name at the -> point : 1
the or if -> it : 1
the or if -> you : 2
the or if -> the : 1
not the operator -> is : 2
operator is evaluated -> only : 1
evaluated only in -> the : 1
argument to an -> or : 1
an or behavior -> is : 1
or behavior is -> undefined : 2
if the operator -> is : 1
used in any -> other : 1
in any other -> or : 1
in any other -> file : 1
any other or -> if : 1
other or if -> the : 1
if the token -> results : 1
the token results -> from : 1
token results from -> macro : 1
results from macro -> directive : 1
from macro directive -> for : 1
macro directive for -> conditional : 1
directive for conditional -> directive : 1
for conditional directive -> marks : 2
conditional directive marks -> a : 2
directive marks a -> region : 2
marks a region -> of : 2
region of conditional -> every : 2
region of conditional -> directive : 1
region of conditional -> that : 1
region of conditional -> it : 2
of conditional every -> must : 2
conditional every must -> be : 2
every must be -> paired : 2
must be paired -> with : 2
be paired with -> an : 2
paired with an -> introductory : 2
introductory or if -> the : 1
if the initial -> condition : 2
the initial condition -> was : 2
initial condition was -> false : 2
condition was false -> and : 2
was false and -> every : 2
false and every -> subsequent : 2
and every subsequent -> condition : 2
every subsequent condition -> is : 2
subsequent condition is -> and : 1
subsequent condition is -> statements : 1
condition is and -> is : 1
condition is and -> the : 1
and is true -> subsequent : 1
and is true -> for : 2
is true subsequent -> statements : 1
true subsequent statements -> are : 1
subsequent statements are -> compiled : 1
statements are compiled -> until : 1
are compiled until -> the : 2
compiled until the -> next : 1
compiled until the -> corresponding : 1
the next or -> directive : 1
next or directive -> is : 1
or directive is -> reached : 1
directive is reached -> for : 1
is reached for -> this : 1
reached for this -> level : 1
for this level -> of : 1
this level of -> directive : 1
level of directive -> else : 1
of directive else -> for : 1
directive else for -> conditional : 1
else for conditional -> directive : 1
introductory or there -> can : 1
or there can -> be : 1
be any number -> of : 1
number of intervening -> if : 1
of intervening if -> the : 1
intervening if the -> initial : 1
condition is statements -> that : 1
is statements that -> follow : 1
statements that follow -> the : 2
statements that follow -> a : 1
statements that follow -> calls : 1
that follow the -> directive : 1
that follow the -> matching : 1
follow the directive -> are : 1
the directive are -> compiled : 1
directive are compiled -> until : 1
until the corresponding -> directive : 1
the corresponding directive -> is : 1
corresponding directive is -> directive : 1
directive is directive -> ends : 1
is directive ends -> conditional : 1
directive ends conditional -> directive : 1
ends conditional directive -> ends : 1
conditional directive ends -> a : 1
directive ends a -> region : 1
ends a region -> of : 1
of conditional directive -> issues : 1
conditional directive issues -> an : 1
directive issues an -> error : 1
an error directive -> tells : 1
error directive tells -> the : 1
directive tells the -> preprocessor : 1
directive tells the -> compiler : 1
tells the preprocessor -> to : 1
the preprocessor to -> issue : 1
preprocessor to issue -> an : 1
an error message -> and : 1
an error message -> to : 1
an error message -> string : 1
error message and -> mark : 1
message and mark -> the : 1
and mark the -> source : 1
mark the source -> file : 1
file as just -> as : 1
as just as -> if : 1
just as if -> the : 1
the programmer made -> a : 1
programmer made a -> programming : 1
made a programming -> error : 1
a programming error -> that : 1
programming error that -> the : 1
error that the -> compiler : 1
the compiler you -> can : 1
compiler you can -> supply : 1
can supply any -> sequence : 1
supply any sequence -> of : 1
sequence of preprocessor -> tokens : 1
of preprocessor tokens -> as : 1
preprocessor tokens as -> the : 1
tokens as the -> and : 1
the and those -> tokens : 1
the and those -> are : 1
and those tokens -> are : 1
those tokens are -> echoed : 1
tokens are echoed -> in : 1
are echoed in -> the : 1
echoed in the -> error : 1
in the error -> not : 1
the error not -> a : 1
error not a -> conforming : 1
not a conforming -> directive : 1
a conforming directive -> tests : 1
conforming directive tests -> a : 1
directive tests a -> directive : 1
tests a directive -> begins : 1
a directive begins -> a : 1
directive begins a -> region : 3
begins a region -> of : 3
of conditional that -> a : 1
conditional that a -> region : 1
that a region -> within : 1
a region within -> a : 1
region within a -> source : 1
within a source -> file : 1
file where preprocessor -> directives : 1
where preprocessor directives -> determine : 1
preprocessor directives determine -> whether : 1
directives determine whether -> the : 1
determine whether the -> code : 1
whether the code -> in : 1
the code in -> the : 2
code in the -> region : 2
in the region -> is : 1
in the region -> that : 1
the region is -> a : 1
the region is -> not : 2
region is a -> conditional : 1
is a conditional -> region : 1
a conditional region -> starts : 1
conditional region starts -> with : 1
region starts with -> or : 1
starts with or -> and : 1
or and ends -> with : 1
and ends with -> each : 1
ends with each -> region : 1
with each region -> can : 1
each region can -> have : 1
region can have -> any : 1
number of directives -> and : 1
of directives and -> an : 1
directives and an -> optional : 1
an optional directive -> after : 1
optional directive after -> all : 1
directive after all -> the : 1
after all the -> the : 1
all the the -> basic : 1
the the basic -> form : 1
the basic form -> to : 1
basic form to -> use : 1
form to use -> const : 1
to use const -> char : 1
use const char -> or : 1
const char or -> const : 1
char or const -> char : 1
or const char -> const : 1
const char const -> char : 2
char const char -> const : 1
char const char -> in : 1
char const char -> a : 1
const char in -> the : 1
char in the -> directive : 1
in the directive -> argument : 1
the directive argument -> are : 1
directive argument are -> except : 1
argument are except -> for : 1
are except for -> the : 1
except for the -> operands : 1
except for the -> facet : 1
for the operands -> of : 1
the the constant -> expression : 1
the constant expression -> is : 1
expression is and -> if : 1
is the condition -> is : 1
is the condition -> for : 1
and the code -> in : 1
and the code -> font : 1
the region that -> immediately : 1
region that immediately -> follows : 1
immediately follows is -> the : 1
is the region -> ends : 1
the region ends -> with : 1
region ends with -> or : 1
with or if -> the : 1
the condition for -> the : 1
condition for the -> next : 1
next is and -> if : 1
and if that -> expression : 1
if that expression -> is : 1
expression is its -> region : 1
is its region -> is : 2
its region is -> and : 1
its region is -> conditional : 1
region is and -> so : 1
is and so -> if : 1
is and so -> the : 1
so if all -> expressions : 1
if all expressions -> are : 1
all expressions are -> and : 1
expressions are and -> is : 1
are and is -> its : 1
are and is -> set : 1
and is its -> region : 1
region is conditional -> processing : 1
is conditional processing -> ends : 1
conditional processing ends -> with : 1
processing ends with -> the : 1
with the corresponding -> can : 1
the corresponding can -> be : 1
corresponding can be -> within : 1
can be within -> an : 1
be within an -> inner : 1
within an inner -> the : 1
inner the preprocessor -> keeps : 1
the preprocessor keeps -> track : 1
preprocessor keeps track -> of : 1
track of conditional -> directives : 1
of conditional directives -> even : 1
conditional directives even -> if : 1
directives even if -> the : 1
if the region -> is : 1
region is not -> being : 1
region is not -> can : 1
is not being -> so : 1
not being so -> conditional : 1
being so conditional -> directives : 1
so conditional directives -> can : 1
conditional directives can -> be : 1
directives can be -> properly : 1
can be properly -> and : 1
be properly and -> directives : 1
properly and directives -> take : 1
and directives take -> a : 1
directives take a -> single : 1
single a constant -> the : 1
a constant the -> expression : 1
a constant the -> must : 1
constant the expression -> differs : 1
the expression differs -> slightly : 1
expression differs slightly -> from : 1
slightly from constant -> can : 1
from constant can -> use : 1
constant can use -> the : 1
use the are -> that : 1
the are that -> values : 1
are that values -> values : 1
that values values -> that : 1
values values that -> are : 1
values that are -> promoted : 1
values that are -> equal : 2
values that are -> appropriate : 1
values that are -> for : 1
values that are -> above : 1
that are promoted -> to : 1
promoted to have -> the : 1
the same representation -> as : 2
same representation as -> and : 1
same representation as -> all : 1
representation as and -> values : 1
as and values -> have : 1
and values have -> the : 1
values have the -> same : 1
representation as all -> values : 1
all values are -> promoted : 1
values are promoted -> to : 1
promoted to including -> the : 1
to including the -> keywords : 1
including the keywords -> and : 1
the keywords and -> literals : 1
keywords and literals -> are : 1
literals are converted -> to : 1
character the numeric -> value : 1
the numeric value -> of : 1
the numeric value -> is : 1
numeric value of -> a : 1
a character in -> a : 2
character in a -> preprocessor : 1
character in a -> a : 1
character in a -> span : 1
character in a -> wide : 1
character in a -> bool : 1
in a preprocessor -> expression : 1
a preprocessor expression -> is : 1
preprocessor expression is -> not : 1
necessarily the same -> as : 1
as the value -> of : 2
same character in -> a : 1
in a a -> character : 1
in a a -> single : 2
in a a -> a : 1
in a a -> reverse : 1
in a a -> using : 1
a a character -> may : 1
a character may -> have : 1
character may have -> a : 1
may have a -> negative : 1
have a negative -> that : 1
a negative that -> are : 1
negative that are -> alternative : 1
that are alternative -> operators : 1
are alternative operators -> for : 1
alternative operators for -> symbolic : 1
operators for symbolic -> operators : 1
for symbolic operators -> and : 1
symbolic operators and -> have : 1
operators and have -> their : 1
and have their -> usual : 1
their usual although -> it : 1
usual although it -> is : 1
it is ineffective -> to : 1
is ineffective to -> try : 1
ineffective to try -> using : 1
to try using -> assignment : 1
try using assignment -> operators : 1
using assignment operators -> and : 1
assignment operators and -> in : 1
operators and in -> an : 1
and in an -> or : 1
an or with -> no : 1
with no identifiers -> and : 1
no identifiers and -> keywords : 1
identifiers and keywords -> that : 1
and keywords that -> remain : 1
keywords that remain -> after : 1
that remain after -> macro : 1
remain after macro -> expansion : 1
after macro expansion -> are : 1
macro expansion are -> replaced : 1
expansion are replaced -> by : 1
replaced by might -> seem : 1
by might seem -> strange : 1
seem strange to -> convert : 1
strange to convert -> such : 1
to convert such -> as : 1
convert such as -> to : 1
such as to -> the : 1
the integer but -> that : 1
integer but that -> is : 1
is the some -> compilers : 1
the some compilers -> fail : 1
some compilers fail -> to : 1
compilers fail to -> follow : 1
fail to follow -> this : 1
to follow this -> particular : 1
follow this particular -> one : 1
this particular one -> consequence : 1
particular one consequence -> of : 1
one consequence of -> this : 1
consequence of this -> rule : 1
cannot use type -> casts : 1
use type casts -> or : 1
type casts or -> or : 1
casts or or -> expressions : 1
or or expressions -> in : 1
or expressions in -> an : 1
expressions in an -> or : 1
an or directives -> are : 1
or directives are -> most : 1
directives are most -> often : 1
used to guard -> header : 1
to guard header -> files : 1
guard header files -> from : 1
header files from -> multiple : 1
files from multiple -> all : 1
from multiple all -> the : 1
multiple all the -> standard : 1
the standard headers -> are : 1
the standard headers -> in : 1
the standard headers -> without : 1
headers are so -> including : 1
are so including -> them : 1
so including them -> more : 1
including them more -> than : 1
them more than -> once : 1
than once has -> no : 1
once has no -> harmful : 1
has no harmful -> this : 1
no harmful this -> is : 1
harmful this is -> important : 1
this is important -> because : 1
is important because -> an : 1
important because an -> implementation : 1
because an implementation -> might : 1
implementation might include -> one : 1
might include one -> header : 1
include one header -> in : 1
one header in -> another : 1
header in another -> for : 1
in another for -> might : 1
another for might -> include : 1
for might include -> to : 1
might include to -> get : 1
include to get -> the : 1
to get the -> declaration : 1
to get the -> default : 1
get the declaration -> for : 1
if you explicitly -> and : 1
you explicitly and -> you : 1
explicitly and you -> might : 1
and you might -> end : 1
you might end -> up : 1
might end up -> including : 1
end up including -> more : 1
up including more -> than : 1
including more than -> common : 1
more than common -> use : 1
than common use -> is : 1
common use is -> for : 1
use is for -> or : 1
is for or -> every : 1
is for or -> a : 1
is for or -> or : 1
for or every -> compiler : 1
or every compiler -> predefines : 1
every compiler predefines -> one : 1
compiler predefines one -> or : 1
predefines one or -> more : 1
or more macros -> to : 1
more macros to -> identify : 1
macros to identify -> the : 1
identify the compiler -> and : 1
compiler and possibly -> the : 1
and possibly the -> host : 1
possibly the host -> operating : 1
the host operating -> system : 3
host operating system -> as : 1
host operating system -> might : 1
host operating system -> to : 1
host operating system -> does : 1
operating system as -> or : 1
system as or -> consult : 1
as or consult -> your : 1
or consult your -> documentation : 1
learn which macro -> names : 1
which macro names -> are : 1
names are conditional -> shows : 1
are conditional shows -> one : 1
conditional shows one -> way : 1
way to nest -> conditional : 1
to nest conditional -> conditional : 1
nest conditional conditional -> zero : 1
conditional conditional zero -> zero : 1
conditional zero zero -> identifiers : 1
zero zero identifiers -> are : 1
zero identifiers are -> converted : 1
identifiers are converted -> to : 1
converted to one -> true : 1
to one true -> bool : 1
one true bool -> expressions : 1
true bool expressions -> are : 1
bool expressions are -> promoted : 1
expressions are promoted -> to : 1
promoted to this -> region : 1
to this region -> is : 1
this region is -> this : 1
this region is -> const : 1
region is this -> region : 1
is this region -> can : 1
this region can -> contain : 1
region can contain -> erroneous : 1
can contain erroneous -> the : 1
contain erroneous the -> code : 1
erroneous the code -> is : 1
the code is -> not : 1
code is not -> so : 1
so the errors -> do : 1
the errors do -> not : 1
errors do not -> this : 1
do not this -> matches : 1
not this matches -> the : 1
this matches the -> inner : 2
this matches the -> outer : 1
matches the inner -> this : 1
matches the inner -> int : 1
the inner this -> region : 1
inner this region -> is : 1
region is const -> int : 1
is const int -> zero : 1
const int zero -> this : 1
int zero this -> matches : 1
zero this matches -> the : 1
the inner int -> x : 1
inner int x -> this : 1
int x this -> matches : 1
x this matches -> the : 1
matches the outer -> because : 1
the outer because -> the : 1
outer because the -> condition : 1
because the condition -> was : 1
the condition was -> the : 1
condition was the -> region : 1
was the region -> is : 1
is not can -> guard : 1
not can guard -> your : 1
can guard your -> own : 1
guard your own -> headers : 1
your own headers -> by : 1
own headers by -> using : 1
headers by using -> conditional : 1
by using conditional -> directives : 1
using conditional directives -> to : 1
directives to define -> a : 1
define a guard -> macro : 1
a guard macro -> and : 1
guard macro and -> using : 1
macro and using -> the : 1
and using the -> guard : 1
using the guard -> macro : 1
the guard macro -> to : 1
guard macro to -> ensure : 1
macro to ensure -> the : 1
to ensure the -> contents : 1
ensure the contents -> are : 1
the contents are -> compiled : 1
contents are compiled -> only : 1
are compiled only -> when : 2
compiled only when -> the : 1
compiled only when -> is : 1
only when the -> macro : 1
only when the -> corresponding : 2
only when the -> return : 1
not as shown -> in : 1
a header against -> multiple : 2
header against multiple -> a : 1
header against multiple -> in : 1
against multiple a -> header : 1
multiple a header -> against : 1
against multiple in -> the : 1
multiple in the -> header : 1
in the header -> file : 1
in the header -> are : 1
in the header -> exists : 1
the header file -> the : 1
header file the -> entire : 1
file the entire -> contents : 1
the entire contents -> of : 3
entire contents of -> the : 3
contents of the -> file : 1
contents of the -> the : 2
contents of the -> named : 1
contents of the -> new : 1
contents of the -> range : 4
contents of the -> object : 1
contents of the -> macro : 1
contents of the -> string : 4
contents of the -> array : 1
contents of the -> original : 1
contents of the -> deque : 2
contents of the -> and : 1
contents of the -> name : 2
contents of the -> map : 2
contents of the -> set : 2
contents of the -> buffer : 1
of the file -> are : 1
of the file -> buffer : 2
the file are -> compiled : 1
file are compiled -> only : 1
only when is -> not : 1
when is not -> the : 1
not the first -> time : 1
first time the -> file : 1
time the file -> is : 1
the file is -> the : 2
the file is -> closed : 1
the file is -> automatically : 1
the file is -> actually : 1
the file is -> thereby : 1
the file is -> already : 2
the file is -> positioned : 1
the file is -> open : 1
the file is -> opened : 1
the file is -> not : 2
the file is -> or : 1
the file is -> set : 1
not in which -> case : 1
case it is -> immediately : 1
it is immediately -> the : 1
is immediately the -> second : 1
immediately the second -> and : 1
and subsequent times -> the : 1
subsequent times the -> same : 1
times the same -> header : 1
same header is -> included : 1
header is included -> in : 1
same source the -> macro : 1
source the macro -> and : 1
macro and conditional -> directives : 1
and conditional directives -> ensure : 1
conditional directives ensure -> that : 1
directives ensure that -> the : 1
the entire file -> is : 1
entire file is -> class : 1
file is class -> employee : 1
is class employee -> end : 1
class employee end -> of : 1
employee end of -> directive : 1
end of directive -> tests : 1
of directive tests -> whether : 1
directive tests whether -> a : 2
macro is directive -> begins : 2
is directive begins -> a : 2
of conditional it -> takes : 2
conditional it takes -> a : 2
a single as -> an : 2
single as an -> argument : 2
argument and is -> equivalent : 2
and is equivalent -> to : 3
equivalent to directive -> tests : 1
equivalent to directive -> includes : 1
to directive tests -> whether : 1
to directive includes -> another : 1
directive includes another -> source : 1
includes another source -> directive : 1
another source directive -> includes : 1
source directive includes -> the : 1
directive includes the -> contents : 1
includes the contents -> of : 1
a standard header -> or : 1
standard header or -> source : 1
header or source -> the : 1
or source the -> first : 1
source the first -> form : 1
first form searches -> for : 1
form searches for -> and : 2
searches for and -> replaces : 2
for and replaces -> the : 2
and replaces the -> directive : 2
replaces the directive -> with : 2
the directive with -> the : 2
directive with the -> entire : 2
with the entire -> contents : 2
the the second -> form : 24
the the second -> version : 9
the the second -> one : 1
second form searches -> for : 1
the named source -> basic : 1
named source basic -> action : 1
source basic action -> of : 1
basic action of -> is : 1
action of is -> to : 1
read the named -> file : 1
the named file -> or : 1
the named file -> is : 2
named file or -> header : 1
file or header -> as : 1
or header as -> though : 1
header as though -> its : 1
as though its -> entire : 1
though its entire -> contents : 1
its entire contents -> appeared : 1
entire contents appeared -> in : 1
contents appeared in -> the : 1
appeared in the -> source : 1
source file at -> the : 1
file at the -> position : 1
position of the -> common : 1
position of the -> sign : 4
of the common -> declarations : 1
the common declarations -> are : 1
common declarations are -> placed : 1
declarations are placed -> in : 1
are placed in -> a : 1
placed in a -> separate : 1
a separate such -> as : 1
separate such as -> and : 1
as and is -> used : 1
as and is -> equal : 2
and is used -> in : 1
and is used -> throughout : 1
used in every -> source : 1
file that depends -> on : 1
depends on those -> with : 1
on those with -> no : 1
those with no -> a : 1
no a source -> file : 1
file contains the -> directive : 1
contains the directive -> and : 1
the directive and -> the : 1
the directive and -> used : 1
directive and the -> compiler : 1
cannot find the -> external : 1
find the external -> file : 1
the external file -> named : 2
the external file -> is : 2
the external file -> and : 2
the external file -> position : 1
external file named -> the : 1
external file named -> is : 1
file named the -> compiler : 1
named the compiler -> also : 1
compiler also tries -> the : 1
also tries the -> form : 1
tries the form -> most : 1
the form most -> compilers : 1
form most compilers -> implement : 1
most compilers implement -> these : 1
compilers implement these -> two : 1
implement these two -> forms : 1
these two forms -> of : 1
forms of by -> searching : 1
of by searching -> in : 1
by searching in -> different : 1
searching in different -> folders : 1
in different folders -> or : 1
different folders or -> for : 1
folders or for -> the : 1
for the quote -> form : 1
the quote form -> searches : 1
quote form searches -> in : 1
form searches in -> the : 1
searches in the -> current : 1
in the current -> directory : 1
in the current -> if : 2
in the current -> for : 1
in the current -> c : 1
in the current -> releases : 1
the current directory -> or : 1
current directory or -> in : 1
directory or in -> the : 1
in the directory -> that : 1
the directory that -> contains : 1
directory that contains -> the : 1
contains the source -> and : 1
the source and -> the : 1
the source and -> result : 3
source and the -> form : 1
and the form -> searches : 1
the form searches -> only : 1
form searches only -> in : 1
searches only in -> such : 1
only in such -> details : 1
in such details -> are : 1
such details are -> and : 1
details are and -> some : 1
are and some -> compilers : 1
and some compilers -> might : 1
some compilers might -> introduce : 1
compilers might introduce -> further : 1
might introduce further -> distinctions : 1
introduce further distinctions -> between : 1
further distinctions between -> the : 1
distinctions between the -> two : 1
the two is -> for : 1
two is for -> for : 1
is for for -> a : 1
for for a -> compiler : 1
a compiler to -> recognize : 1
compiler to recognize -> only : 1
to recognize only -> the : 1
recognize only the -> standard : 1
only the standard -> headers : 1
standard headers in -> the : 1
the form and -> use : 1
the form and -> require : 1
form and use -> knowledge : 1
and use knowledge -> of : 1
use knowledge of -> the : 1
knowledge of the -> standard : 1
standard headers without -> referencing : 1
headers without referencing -> any : 1
without referencing any -> external : 1
referencing any external -> this : 1
any external this -> hypothetical : 1
external this hypothetical -> compiler : 1
this hypothetical compiler -> might : 1
hypothetical compiler might -> report : 1
compiler might report -> an : 1
might report an -> error : 1
report an error -> for : 1
an error for -> all : 1
error for all -> other : 1
all other uses -> of : 1
other uses of -> the : 1
form and require -> all : 1
and require all -> external : 1
require all external -> file : 1
all external file -> inclusions : 1
external file inclusions -> to : 1
file inclusions to -> use : 1
inclusions to use -> the : 1
use the quote -> such : 1
the quote such -> a : 1
quote such a -> compiler : 1
such a compiler -> would : 1
a compiler would -> not : 1
not be very -> because : 1
be very because -> common : 1
very because common -> practice : 1
because common practice -> is : 1
common practice is -> to : 2
is to treat -> and : 1
to treat and -> as : 1
treat and as -> equivalent : 1
and as equivalent -> except : 1
as equivalent except -> when : 1
equivalent except when -> applying : 1
except when applying -> the : 1
when applying the -> rules : 1
applying the rules -> for : 1
rules for locating -> the : 1
for locating the -> external : 1
locating the external -> file : 1
file named is -> common : 1
named is common -> practice : 1
is common practice -> to : 1
common practice to -> install : 1
practice to install -> libraries : 1
to install libraries -> in : 1
install libraries in -> common : 1
libraries in common -> directories : 1
in common directories -> and : 1
common directories and -> to : 1
directories and to -> configure : 1
and to configure -> compilers : 1
to configure compilers -> to : 1
configure compilers to -> look : 1
compilers to look -> in : 1
to look in -> these : 1
look in these -> directories : 1
in these directories -> for : 1
these directories for -> for : 1
directories for for -> if : 1
for for if -> you : 1
you use boost -> in : 1
use boost in -> you : 1
boost in you -> might : 1
in you might -> use : 1
might use to -> obtain : 1
might use to -> declare : 1
might use to -> improve : 1
use to obtain -> the : 2
obtain the class -> another : 1
the class another -> common : 1
class another common -> practice : 1
another common practice -> is : 1
is to install -> such : 1
to install such -> libraries : 1
install such libraries -> in : 1
such libraries in -> on : 1
libraries in on -> a : 1
in on a -> unix : 1
on a unix -> for : 1
a unix for -> you : 1
unix for you -> might : 1
you might install -> boost : 1
might install boost -> in : 1
install boost in -> the : 1
boost in the -> subdirectory : 1
in the subdirectory -> of : 1
the subdirectory of -> one : 1
subdirectory of one -> of : 1
the standard system -> directories : 1
standard system directories -> and : 1
system directories and -> use : 1
directories and use -> you : 1
and use you -> should : 1
use you should -> be : 1
you should be -> because : 1
you should be -> aware : 1
should be because -> using : 1
be because using -> filenames : 1
because using filenames -> is : 1
using filenames is -> not : 1
filenames is not -> only : 1
is not only -> guarantee : 1
not only guarantee -> that : 1
only guarantee that -> the : 1
the standard offers -> is : 1
standard offers is -> that : 1
offers is that -> if : 1
that if consists -> of : 1
if consists of -> a : 1
sequence of letters -> and : 1
of letters and -> underscore : 1
letters and underscore -> characters : 1
and underscore characters -> followed : 1
underscore characters followed -> by : 1
by a period -> and : 1
a period and -> a : 1
period and a -> single : 1
a single letter -> or : 1
single letter or -> then : 1
letter or then -> the : 1
or then the -> implementation : 1
then the implementation -> must : 1
the implementation must -> provide : 1
implementation must provide -> a : 1
provide a unique -> mapping : 1
a unique mapping -> of : 1
unique mapping of -> to : 1
mapping of to -> a : 1
source file ignoring -> case : 1
file ignoring case -> the : 1
ignoring case the -> standard : 1
case the standard -> permits : 1
standard permits universal -> characters : 1
permits universal characters -> in : 1
characters in but -> you : 1
in but you -> should : 1
in but you -> cannot : 1
but you should -> avoid : 1
but you should -> be : 1
should avoid them -> when : 1
avoid them when -> you : 1
them when you -> need : 1
you need maximum -> portability : 1
need maximum portability -> because : 1
maximum portability because -> some : 1
portability because some -> compilers : 1
because some compilers -> do : 1
not support universal -> implementation : 1
support universal implementation -> defines : 1
universal implementation defines -> how : 1
implementation defines how -> and : 1
defines how and -> where : 1
how and where -> the : 1
and where the -> preprocessor : 1
where the preprocessor -> searches : 1
the preprocessor searches -> for : 1
preprocessor searches for -> or : 1
searches for or -> how : 1
for or how -> maps : 1
or how maps -> to : 1
how maps to -> an : 1
maps to an -> external : 1
to an external -> whether : 1
an external whether -> filenames : 1
external whether filenames -> heed : 1
whether filenames heed -> or : 1
filenames heed or -> ignore : 1
heed or ignore -> case : 1
or ignore case -> and : 1
ignore case and -> whether : 1
case and whether -> different : 1
and whether different -> character : 1
whether different character -> sequences : 1
different character sequences -> for : 1
character sequences for -> represent : 1
sequences for represent -> distinct : 1
for represent distinct -> external : 1
represent distinct external -> for : 1
distinct external for -> under : 1
external for under -> and : 1
for under and -> are : 1
under and are -> usually : 1
and are usually -> the : 1
are usually the -> same : 1
same but under -> they : 1
but under they -> are : 1
under they are -> usually : 1
are usually different -> if : 1
usually different if -> the : 1
different if the -> filesystem : 1
different if the -> items : 4
if the filesystem -> supports : 1
the filesystem supports -> such : 1
filesystem supports such -> as : 1
supports such as -> two : 1
such as two -> names : 1
as two names -> such : 1
two names such -> as : 1
names such as -> and : 1
as and might -> name : 1
and might name -> the : 1
might name the -> same : 1
same in other -> you : 1
in other you -> might : 1
other you might -> be : 1
might be guaranteed -> that : 1
be guaranteed that -> different : 1
guaranteed that different -> filenames : 1
that different filenames -> refer : 1
different filenames refer -> to : 1
filenames refer to -> distinct : 1
refer to distinct -> most : 1
to distinct most -> common : 1
distinct most common -> convention : 1
most common convention -> is : 1
convention is that -> refers : 1
is that refers -> only : 1
that refers only -> to : 1
refers only to -> standard : 1
only to standard -> headers : 1
to standard headers -> and : 1
standard headers and -> to : 1
headers and to -> extensions : 1
and to extensions -> to : 1
to extensions to -> the : 1
the compilers typically -> have : 1
compilers typically have -> a : 1
typically have a -> way : 1
have a way -> for : 1
a way for -> you : 1
way for you -> to : 1
for you to -> supply : 1
you to supply -> your : 1
to supply your -> own : 1
supply your own -> additional : 1
your own additional -> libraries : 1
own additional libraries -> and : 1
additional libraries and -> use : 1
libraries and use -> the : 1
use the associated -> headers : 1
the associated headers -> as : 1
associated headers as -> the : 1
headers as the -> quoted : 1
as the quoted -> form : 1
the quoted form -> is : 1
quoted form is -> used : 1
form is used -> for : 1
for all header -> files : 1
all header files -> that : 1
header files that -> are : 1
that are part -> of : 2
and those are -> typically : 1
those are typically -> located : 1
are typically located -> in : 1
typically located in -> the : 1
located in the -> same : 1
the same directory -> or : 1
same directory or -> folder : 1
directory or folder -> as : 1
or folder as -> the : 1
folder as the -> source : 1
as the source -> the : 1
source the most -> common : 1
most common filename -> convention : 1
common filename convention -> is : 1
filename convention is -> to : 1
is to end -> header : 1
to end header -> names : 1
end header names -> with : 1
header names with -> although : 1
names with although -> is : 1
with although is -> also : 1
although is also -> for : 1
is also for -> suppose : 1
also for suppose -> you : 1
suppose you wrote -> a : 1
you wrote a -> class : 1
wrote a class -> to : 1
a class to -> represent : 1
class to represent -> an : 1
to represent an -> put : 1
represent an put -> the : 1
an put the -> class : 1
put the class -> definition : 1
class definition in -> and : 1
definition in and -> the : 1
in and the -> definitions : 1
in and the -> standard : 1
of the members -> in : 1
of the members -> is : 1
of the members -> of : 4
the members in -> any : 1
members in any -> other : 1
any other file -> that : 1
other file that -> needs : 1
class can and -> use : 1
can and use -> the : 1
the class class -> can : 1
the class class -> class : 12
the class class -> in : 7
the class class -> template : 1
the class class -> function : 12
class class can -> use : 1
can use other -> preprocessor : 1
use other preprocessor -> tokens : 1
other preprocessor tokens -> in : 1
preprocessor tokens in -> an : 1
tokens in an -> provided : 1
in an provided -> they : 1
an provided they -> expand : 1
provided they expand -> to : 1
they expand to -> one : 1
expand to one -> of : 1
the two standard -> each : 1
two standard each -> header : 1
standard each header -> name : 1
each header name -> or : 1
header name or -> filename : 1
name or filename -> must : 1
or filename must -> be : 1
filename must be -> a : 1
a single preprocessor -> you : 1
single preprocessor you -> cannot : 1
preprocessor you cannot -> combine : 1
you cannot combine -> tokens : 1
cannot combine tokens -> to : 1
combine tokens to -> form : 1
tokens to form -> a : 1
form a to -> preserve : 1
a to preserve -> use : 1
to preserve use -> macros : 1
preserve use macros -> only : 1
use macros only -> for : 1
macros only for -> the : 1
the entire sequence -> of : 1
entire sequence of -> the : 1
of the header -> directive : 1
of the header -> declares : 1
of the header -> defines : 1
the header directive -> changes : 1
header directive changes -> the : 1
directive changes the -> line : 1
directive changes the -> notion : 1
changes the line -> number : 3
the line number -> in : 1
the line number -> expressed : 1
the line number -> to : 1
line number in -> error : 1
number in error -> directive : 1
in error directive -> changes : 1
error directive changes -> the : 1
changes the notion -> of : 1
the notion of -> the : 1
notion of the -> current : 1
the current filename -> and : 1
current filename and -> line : 1
filename and line -> the : 1
filename and line -> number : 2
and line the -> first : 1
line the first -> form : 1
first form changes -> the : 1
form changes the -> line : 2
line number expressed -> by : 1
number expressed by -> the : 1
expressed by the -> directive : 1
directive and used -> in : 1
and used in -> error : 1
and used in -> other : 1
used in error -> to : 1
in error to -> the : 1
error to the -> second : 1
second form changes -> the : 1
line number to -> and : 1
number to and -> the : 1
and the filename -> to : 1
and the filename -> and : 1
the filename to -> the : 1
filename to the -> contents : 1
to the contents -> of : 2
of the new -> file : 1
of the new -> elements : 1
of the new -> and : 1
the new file -> name : 1
the new file -> position : 2
new file name -> is : 1
file name is -> used : 1
of the directive -> is : 1
directive is typically -> used : 1
typically used by -> programs : 1
typically used by -> libraries : 1
used by programs -> that : 1
by programs that -> generate : 1
programs that generate -> as : 1
that generate as -> output : 1
generate as output -> from : 1
as output from -> some : 1
output from some -> other : 1
from some other -> the : 1
some other the -> directive : 1
some other the -> standard : 1
other the directive -> records : 1
the directive records -> the : 1
directive records the -> original : 1
records the original -> filename : 1
the original filename -> and : 1
original filename and -> line : 1
and line number -> that : 1
and line number -> where : 1
line number that -> produced : 1
number that produced -> the : 1
that produced the -> error : 1
produced the error -> messages : 1
the error messages -> and : 1
error messages and -> debuggers : 1
messages and debuggers -> can : 1
and debuggers can -> point : 1
debuggers can point -> to : 1
the original file -> instead : 1
original file instead -> of : 1
file instead of -> to : 1
instead of to -> the : 1
instead of to -> ensure : 1
to the intermediate -> source : 1
the intermediate source -> directive : 1
intermediate source directive -> controls : 1
source directive controls -> the : 1
directive controls the -> with : 1
controls the with -> no : 1
no directive is -> an : 1
directive is an -> implementation : 1
implementation can define -> certain : 1
implementation can define -> additional : 2
implementation can define -> other : 1
can define certain -> pragma : 1
define certain pragma -> parameters : 1
certain pragma parameters -> to : 1
pragma parameters to -> control : 1
parameters to control -> the : 1
to control the -> the : 1
to control the -> formatting : 1
control the the -> preprocessor : 1
the the preprocessor -> ignores : 1
the preprocessor ignores -> any : 1
preprocessor ignores any -> pragma : 1
ignores any pragma -> that : 1
any pragma that -> it : 1
pragma that it -> does : 1
that it does -> not : 1
does not pragmas -> are : 1
not pragmas are -> highly : 1
pragmas are highly -> you : 1
are highly you -> should : 1
highly you should -> avoid : 1
them as much -> as : 1
much as most -> compilers : 1
as most compilers -> let : 1
most compilers let -> you : 1
compilers let you -> control : 1
let you control -> the : 1
you control the -> compiler : 1
control the compiler -> by : 1
the compiler by -> providing : 1
compiler by providing -> configuration : 1
by providing configuration -> or : 1
providing configuration or -> project : 1
configuration or project -> do : 1
or project do -> your : 1
project do your -> best : 1
do your best -> to : 1
your best to -> keep : 1
best to keep -> information : 1
to keep information -> out : 1
keep information out -> of : 1
information out of -> your : 1
out of your -> source : 1
of your source -> when : 1
your source when -> you : 1
source when you -> must : 1
must use protect -> them : 1
use protect them -> with : 1
protect them with -> conditional : 1
them with conditional -> directives : 1
with conditional directives -> for : 1
conditional directives for -> specific : 1
directives for specific -> pack : 1
for specific pack -> instantiate : 1
specific pack instantiate -> directive : 1
pack instantiate directive -> undefines : 1
instantiate directive undefines -> a : 1
directive undefines a -> directive : 1
undefines a directive -> deletes : 1
a directive deletes -> the : 1
directive deletes the -> definition : 1
deletes the definition -> of : 1
the macro named -> if : 1
macro named if -> is : 1
named if is -> not : 1
not a macro -> the : 1
macro the directive -> has : 1
the directive has -> no : 1
directive has no -> if : 1
has no if -> you : 1
no if you -> attempt : 1
if you attempt -> to : 2
you attempt to -> undefine : 1
you attempt to -> create : 1
attempt to undefine -> the : 1
to undefine the -> identifier : 1
undefine the identifier -> or : 1
the identifier or -> any : 1
identifier or any -> predefined : 1
or any predefined -> the : 1
any predefined the -> behavior : 1
predefined the behavior -> is : 1
behavior is begins -> the : 1
is begins the -> alphabetic : 1
begins the alphabetic -> this : 1
the alphabetic this -> chapter : 1
alphabetic this chapter -> presents : 1
chapter presents each -> language : 1
presents each language -> keyword : 1
each language keyword -> with : 1
language keyword with -> a : 1
keyword with a -> syntax : 1
with a syntax -> in : 1
a syntax in -> some : 1
syntax in some -> an : 1
in some an -> the : 1
some an the -> syntax : 1
the syntax summaries -> use : 1
the syntax summaries -> short : 1
syntax summaries use -> a : 1
summaries use a -> modified : 1
use a modified -> bnf : 1
a modified bnf -> normal : 1
modified bnf normal -> form : 1
bnf normal form -> or : 1
normal form or -> symbols : 1
form or symbols -> and : 1
or symbols and -> operator : 1
symbols and operator -> are : 1
and operator are -> in : 1
operator are in -> avoid : 1
are in avoid -> a : 1
in avoid a -> terminal : 1
avoid a terminal -> symbol : 1
a terminal symbol -> that : 1
terminal symbol that -> might : 1
symbol that might -> be : 1
that might be -> mistaken : 1
might be mistaken -> for : 1
be mistaken for -> a : 1
mistaken for a -> bnf : 1
for a bnf -> metacharacter : 1
a bnf metacharacter -> a : 1
bnf metacharacter a -> vertical : 1
metacharacter a vertical -> bar : 1
a vertical bar -> or : 1
vertical bar or -> a : 1
bar or a -> square : 1
or a square -> is : 1
a square is -> enclosed : 1
square is enclosed -> in : 1
is enclosed in -> quotes : 1
enclosed in quotes -> symbols : 1
in quotes symbols -> are : 1
quotes symbols are -> in : 1
symbols are in -> an : 1
are in an -> elements : 1
in an elements -> are : 1
an elements are -> in : 1
elements are in -> square : 1
are in square -> brackets : 1
in square brackets -> are : 1
square brackets are -> separated : 1
brackets are separated -> by : 1
separated by vertical -> bars : 1
by vertical bars -> is : 1
vertical bars is -> introduced : 1
bars is introduced -> with : 1
is introduced with -> or : 2
introduced with or -> the : 1
introduced with or -> matching : 1
or the traditional -> symbol : 1
the traditional symbol -> is : 1
traditional symbol is -> used : 1
symbol is used -> for : 1
symbol is used -> when : 1
a complete the -> abbreviated : 1
complete the abbreviated -> symbol : 1
the abbreviated symbol -> is : 1
abbreviated symbol is -> used : 1
when the righthand -> side : 1
righthand side is -> for : 1
side is for -> here : 1
is for here -> is : 1
for here is -> the : 1
is the complete -> definition : 1
the complete definition -> of : 1
complete definition of -> as : 1
definition of as -> it : 1
of as it -> is : 1
it is given -> under : 1
is given under -> explicit : 1
given under explicit -> inline : 1
under explicit inline -> following : 1
explicit inline following -> is : 1
inline following is -> a : 1
is a partial -> production : 1
a partial production -> of : 1
partial production of -> abbreviated : 1
production of abbreviated -> symbol : 1
of abbreviated symbol -> lets : 1
abbreviated symbol lets -> you : 1
symbol lets you -> see : 1
lets you see -> that : 1
you see that -> the : 1
see that the -> syntax : 1
that the syntax -> summary : 1
that the syntax -> for : 1
the syntax summary -> is : 1
syntax summary is -> whenever : 1
summary is whenever -> an : 1
is whenever an -> incomplete : 1
whenever an incomplete -> rule : 1
an incomplete rule -> is : 1
incomplete rule is -> a : 1
rule is a -> cross : 1
is a cross -> reference : 1
a cross reference -> leads : 1
cross reference leads -> you : 1
reference leads you -> to : 1
leads you to -> the : 1
you to the -> complete : 1
to the complete -> starting : 1
the complete starting -> point : 1
complete starting point -> for : 1
starting point for -> parsing : 1
point for parsing -> a : 1
for parsing a -> source : 1
for parsing a -> time : 1
parsing a source -> file : 1
source file start -> is : 1
file start is -> which : 1
start is which -> you : 1
is which you -> can : 1
which you can -> find : 1
which you can -> then : 1
which you can -> think : 1
which you can -> provide : 1
can find under -> syntax : 1
find under syntax -> is : 1
under syntax is -> and : 1
syntax is and -> even : 1
is and even -> simple : 1
and even simple -> statements : 1
even simple statements -> require : 1
simple statements require -> an : 1
statements require an -> understanding : 1
require an understanding -> of : 1
an understanding of -> many : 1
understanding of many -> different : 1
of many different -> syntax : 1
many different syntax -> to : 1
different syntax to -> help : 1
syntax to help -> this : 1
to help this -> chapter : 1
help this chapter -> duplicates : 1
this chapter duplicates -> some : 1
chapter duplicates some -> syntax : 1
duplicates some syntax -> rules : 1
some syntax rules -> and : 1
some syntax rules -> are : 1
syntax rules and -> has : 1
rules and has -> plenty : 1
and has plenty -> of : 1
has plenty of -> cross : 1
plenty of cross -> references : 1
cross references to -> help : 1
references to help -> you : 1
to help you -> find : 2
help you find -> the : 1
help you find -> what : 1
you find the -> parts : 1
you find the -> right : 1
find the parts -> you : 1
the parts you -> every : 1
parts you every -> language : 1
you every language -> element : 1
every language element -> is : 1
language element is -> discussed : 1
element is discussed -> at : 1
is discussed at -> greater : 1
discussed at greater -> length : 1
at greater length -> in : 1
greater length in -> each : 1
length in each -> description : 1
in each description -> in : 1
each description in -> this : 1
description in this -> chapter : 1
this chapter includes -> a : 1
chapter includes a -> reference : 1
includes a reference -> to : 1
to the relevant -> chapter : 1
the relevant chapter -> or : 1
relevant chapter or -> references : 1
chapter or references -> to : 1
or references to -> specific : 1
or references to -> pairs : 1
or references to -> items : 1
references to specific -> headers : 1
to specific headers -> are : 1
specific headers are -> for : 1
headers are for -> the : 1
are for the -> corresponding : 1
are for the -> virtual : 10
are for the -> template : 1
for the corresponding -> sections : 1
for the corresponding -> if : 1
sections in operator -> logical : 1
in operator logical -> and : 1
operator logical and -> and : 1
logical and and -> operator : 1
and and operator -> converts : 1
and operator converts -> its : 1
operator converts its -> operands : 2
operator converts its -> operand : 1
and returns a -> this : 2
and returns a -> pointer : 7
and returns a -> the : 1
and returns a -> boolean : 1
and returns a -> pair : 1
and returns a -> new : 3
and returns a -> function : 2
and returns a -> single : 1
and returns a -> copy : 2
and returns a -> temporary : 2
and returns a -> managed : 1
returns a this -> operator : 2
a this operator -> is : 2
this operator is -> a : 2
a so if -> the : 2
the expression yields -> without : 2
expression yields without -> evaluating : 2
yields without evaluating -> the : 2
evaluating the right -> note : 2
the right note -> that : 2
right note that -> an : 1
right note that -> if : 1
note that an -> overloaded : 1
that an overloaded -> cannot : 1
an overloaded cannot -> be : 1
overloaded cannot be -> and : 1
be and must -> evaluate : 2
and must evaluate -> both : 2
must evaluate both -> the : 1
must evaluate both -> keyword : 1
evaluate both the -> keyword : 1
both the keyword -> is : 1
keyword is interchangeable -> with : 9
is interchangeable with -> the : 11
interchangeable with the -> if : 2
interchangeable with the -> bitmask : 7
interchangeable with the -> typename : 1
interchangeable with the -> note : 1
the if operator -> bitwise : 2
if operator bitwise -> and : 1
if operator bitwise -> or : 1
operator bitwise and -> assignment : 1
operator bitwise and -> bitand : 1
bitwise and assignment -> operator : 1
is an assignment -> operator : 3
an assignment operator -> that : 3
operator that performs -> bitwise : 1
operator that performs -> inclusive : 1
operator that performs -> exclusive : 1
that performs bitwise -> it : 1
performs bitwise it -> is : 1
bitwise it is -> equivalent : 1
equivalent to except -> that : 3
to except that -> is : 3
only the keyword -> is : 1
with the bitmask -> bitmask : 7
the bitmask bitmask -> becomes : 4
the bitmask bitmask -> bitmask : 3
bitmask bitmask becomes -> definition : 1
bitmask bitmask becomes -> operator : 2
bitmask bitmask becomes -> type : 1
bitmask bitmask becomes -> qualifier : 1
bitmask bitmask becomes -> access : 1
bitmask bitmask becomes -> chapter : 1
bitmask becomes definition -> inline : 1
becomes definition inline -> assembler : 1
definition inline assembler -> asm : 1
inline assembler asm -> with : 1
assembler asm with -> no : 1
asm with no -> definition : 1
with no definition -> is : 1
no definition is -> the : 1
definition is the -> contains : 1
is the contains -> assembler : 1
the contains assembler -> some : 1
contains assembler some -> compilers : 1
assembler some compilers -> extend : 1
extend the syntax -> to : 1
the syntax to -> make : 1
syntax to make -> it : 1
to make it -> easier : 1
make it easier -> to : 2
it easier to -> write : 1
it easier to -> print : 1
easier to write -> larger : 1
to write larger -> blocks : 1
write larger blocks -> of : 1
larger blocks of -> assembler : 1
blocks of assembler -> gnu : 1
of assembler gnu -> on : 1
assembler gnu on -> intel : 1
gnu on intel -> borland : 1
on intel borland -> on : 1
intel borland on -> intel : 1
borland on intel -> storage : 1
on intel storage -> storage : 1
intel storage storage -> class : 1
storage storage class -> automatic : 1
storage storage class -> external : 1
storage storage class -> register : 1
storage storage class -> static : 1
storage class automatic -> variable : 1
class automatic variable -> storage : 1
automatic variable storage -> class : 1
variable storage class -> specifier : 1
class specifier declares -> a : 2
specifier declares a -> local : 1
specifier declares a -> template : 1
specifier declares a -> friend : 1
declares a local -> variable : 1
a local variable -> to : 1
a local variable -> of : 1
local variable to -> be : 1
variable to be -> the : 1
be the object -> is : 1
is constructed when -> execution : 1
leaves the scope -> where : 1
is local variables -> and : 1
local variables and -> function : 1
variables and function -> parameters : 1
and function parameters -> are : 1
function parameters are -> by : 1
function parameters are -> declared : 1
parameters are by -> so : 1
are by so -> the : 1
by so the -> explicit : 1
so the explicit -> specifier : 1
the explicit specifier -> is : 1
explicit specifier is -> rarely : 1
specifier is rarely -> int : 1
is rarely int -> int : 1
rarely int int -> sqr : 1
int int sqr -> parm : 2
int sqr parm -> return : 2
sqr parm return -> operator : 2
parm return operator -> bitwise : 1
parm return operator -> cast : 1
return operator bitwise -> and : 1
bitwise and bitand -> operator : 1
and bitand operator -> requires : 1
bitand operator requires -> integer : 1
operator requires integer -> or : 3
requires integer or -> enumeration : 3
integer or enumeration -> it : 4
or enumeration it -> performs : 4
enumeration it performs -> the : 4
it performs the -> usual : 4
it performs the -> equivalent : 6
performs the usual -> arithmetic : 4
usual arithmetic then -> does : 3
arithmetic then does -> an : 3
then does an -> operation : 3
does an operation -> on : 3
an operation on -> pairs : 3
operation on pairs -> of : 3
on pairs of -> bits : 3
pairs of bits -> in : 3
in the resulting -> in : 3
the resulting in -> an : 3
resulting in an -> keyword : 2
resulting in an -> the : 1
resulting in an -> operator : 1
in an keyword -> is : 2
an keyword is -> interchangeable : 2
an keyword is -> a : 1
bitmask bitmask bitmask -> becomes : 3
bitmask becomes operator -> bitwise : 2
becomes operator bitwise -> inclusive : 1
becomes operator bitwise -> exclusive : 1
operator bitwise inclusive -> or : 1
bitwise inclusive or -> bitor : 1
bitwise inclusive or -> of : 1
inclusive or bitor -> operator : 1
or bitor operator -> requires : 1
bitor operator requires -> integer : 1
operator is interchangeable -> with : 2
bitmask becomes type -> boolean : 1
becomes type boolean -> type : 1
type boolean type -> type : 1
boolean type type -> represents : 1
type type represents -> boolean : 1
type represents boolean -> or : 1
represents boolean or -> logical : 1
or logical the -> only : 1
logical the only -> valid : 1
the only valid -> values : 1
only valid values -> of : 1
valid values of -> the : 1
valid values of -> an : 1
the type are -> the : 1
the type are -> you : 1
type are the -> literals : 1
are the literals -> and : 1
the literals and -> a : 1
the literals and -> their : 3
literals and a -> expression : 1
a expression can -> be : 1
expression can be -> promoted : 1
promoted to an -> becomes : 1
promoted to an -> the : 1
to an becomes -> and : 1
an becomes and -> becomes : 1
becomes and becomes -> and : 1
and becomes and -> pointer : 1
becomes and pointer -> values : 1
is and anything -> else : 1
and anything else -> is : 3
and anything else -> for : 2
anything else is -> statement : 1
anything else is -> must : 2
anything else is -> solid : 1
else is statement -> exits : 1
is statement exits -> from : 1
statement exits from -> a : 1
statement exits from -> the : 1
exits from a -> loop : 1
from a loop -> or : 1
a loop or -> switch : 1
a loop or -> if : 1
loop or switch -> break : 1
or switch break -> statement : 1
switch break statement -> exits : 1
break statement exits -> from : 1
exits from the -> nearest : 1
from the nearest -> enclosing : 1
the nearest enclosing -> loop : 1
nearest enclosing loop -> or : 1
enclosing loop or -> or : 1
loop or or -> execution : 1
or or execution -> continues : 1
or execution continues -> with : 1
loop or an -> error : 1
or an error -> results : 1
results if is -> used : 1
if is used -> outside : 1
is used outside -> of : 1
used outside of -> a : 1
loop or if -> keyword : 1
or if keyword -> case : 1
if keyword case -> label : 1
keyword case label -> for : 1
case label for -> switch : 1
label for switch -> case : 1
for switch case -> keyword : 1
switch case keyword -> labels : 1
case keyword labels -> a : 1
keyword labels a -> statement : 1
labels a statement -> in : 1
a statement in -> a : 1
a a single -> statement : 2
a a single -> label : 1
have multiple you -> cannot : 1
multiple you cannot -> use : 1
cannot use outside -> of : 2
use outside of -> a : 2
a that labels -> have : 1
that labels have -> no : 1
labels have no -> effect : 1
have no effect -> on : 1
no effect on -> the : 1
effect on the -> order : 1
effect on the -> c : 1
in which substatements -> are : 1
which substatements are -> executed : 1
substatements are executed -> within : 1
are executed within -> a : 1
executed within a -> use : 1
within a use -> the : 1
a use the -> statement : 1
the statement to -> exit : 2
from a z -> z : 1
a z z -> keyword : 1
z z keyword -> exception : 1
z z keyword -> declares : 1
z keyword exception -> handler : 1
keyword exception handler -> in : 1
exception handler in -> try : 1
exception handler in -> a : 1
handler in try -> catch : 1
in try catch -> keyword : 1
try catch keyword -> introduces : 1
catch keyword introduces -> an : 1
keyword introduces an -> exception : 1
introduces an exception -> handler : 1
an exception handler -> in : 1
an exception handler -> if : 1
handler in a -> a : 1
single statement must -> have : 1
must have one -> or : 1
more the declares -> an : 1
the declares an -> exception : 1
declares an exception -> handler : 1
exception handler if -> an : 1
handler if an -> exception : 1
is thrown in -> the : 1
is thrown in -> any : 1
thrown in the -> the : 1
type of each -> the : 1
type of each -> argument : 1
type of each -> manipulator : 1
each the of -> the : 1
the first block -> whose : 1
first block whose -> type : 1
block whose type -> matches : 1
whose type matches -> that : 1
type matches that -> of : 1
is a block -> the : 1
a block the -> last : 1
block the last -> one : 1
the last one -> in : 1
last one in -> a : 1
one in a -> can : 1
have an as -> the : 1
an as the -> to : 1
the to match -> all : 1
to match all -> try : 1
match all try -> program : 1
all try program -> type : 1
try program type -> character : 1
program type character -> type : 1
type character type -> with : 1
character type with -> no : 1
with no type -> represents : 1
with no type -> specifier : 3
with no type -> is : 17
no type represents -> a : 1
type represents a -> sometimes : 1
type represents a -> date : 1
type represents a -> multibyte : 1
type represents a -> wide : 1
type represents a -> character : 1
type represents a -> finite : 1
represents a sometimes -> called : 1
a sometimes called -> a : 1
called a narrow -> the : 1
a narrow the -> type : 1
a narrow the -> first : 1
narrow the type -> is : 2
is distinct from -> and : 1
is distinct from -> that : 1
distinct from and -> but : 1
from and but -> its : 1
and but its -> representation : 1
but its representation -> must : 1
match one or -> the : 1
one or the -> one : 1
or the one -> depends : 1
or the one -> with : 1
the one depends -> on : 1
one depends on -> the : 1
on the a -> can : 1
the a can -> be : 1
the value depends -> on : 1
on whether the -> representation : 1
on whether the -> macro : 1
whether the representation -> is : 1
representation is signed -> or : 1
signed or is -> so : 1
or is so -> a : 1
is so a -> is : 1
so a is -> often : 1
a is often -> used : 1
as the basic -> unit : 1
the basic unit -> of : 1
basic unit of -> memory : 1
unit of memory -> raw : 1
of memory raw -> memory : 1
memory raw memory -> is : 1
raw memory is -> often : 1
memory is often -> allocated : 1
is often allocated -> as : 1
often allocated as -> arrays : 1
allocated as arrays -> of : 1
as arrays of -> or : 1
as arrays of -> the : 1
as arrays of -> if : 3
of or keyword -> declares : 1
or keyword declares -> a : 1
keyword declares a -> class : 2
keyword declares a -> new : 1
keyword declares a -> or : 1
keyword declares a -> a : 1
keyword declares a -> type : 1
keyword declares a -> keyword : 1
class or template -> or : 1
or template or -> elaborates : 1
template or elaborates -> a : 1
or elaborates a -> type : 1
elaborates a type -> class : 1
a type class -> struct : 1
type class struct -> union : 1
class struct union -> virtual : 1
struct union virtual -> private : 1
union virtual private -> protected : 1
virtual private protected -> public : 1
private protected public -> class : 1
protected public class -> template : 1
public class template -> class : 1
template class keyword -> introduces : 1
class keyword introduces -> a : 1
keyword introduces a -> class : 1
keyword introduces a -> type : 1
introduces a class -> declaration : 1
declaration or names -> a : 1
names a type -> template : 1
parameter or names -> a : 1
names a class -> type : 1
type in an -> in : 1
in an in -> a : 1
an in a -> the : 1
an in a -> subsequence : 1
that the default -> access : 1
that the default -> copy : 4
default access level -> is : 1
default access level -> of : 2
level is private -> for : 1
is private for -> and : 1
private for and -> public : 1
for and public -> for : 1
and public for -> declaring : 1
public for declaring -> a : 1
declaring a type -> template : 1
type template and -> are : 1
template and are -> can : 1
and are can -> use : 1
are can use -> typename : 1
can use typename -> instead : 1
use typename instead -> of : 1
typename instead of -> class : 1
instead of class -> point : 1
class point x -> t : 1
point x t -> y : 1
x t y -> t : 1
t y t -> redundant : 1
y t redundant -> use : 1
t redundant use -> of : 1
redundant use of -> operator : 1
use of operator -> bitwise : 1
of operator bitwise -> complement : 1
operator bitwise complement -> compl : 1
bitwise complement compl -> operator : 1
complement compl operator -> requires : 1
compl operator requires -> an : 1
operator requires an -> integer : 1
requires an integer -> or : 1
usual arithmetic promotion -> and : 1
arithmetic promotion and -> toggles : 1
promotion and toggles -> each : 1
and toggles each -> bit : 1
toggles each bit -> of : 1
bit of its -> resulting : 1
of its resulting -> in : 1
its resulting in -> an : 1
bitmask becomes qualifier -> marks : 1
becomes qualifier marks -> objects : 1
qualifier marks objects -> and : 1
marks objects and -> functions : 1
and functions as -> const : 1
functions as const -> volatile : 1
as const volatile -> const : 1
const volatile const -> volatile : 4
volatile const volatile -> const : 3
volatile const volatile -> volatile : 2
const volatile volatile -> keyword : 1
const volatile volatile -> qualifier : 1
volatile volatile keyword -> can : 1
volatile keyword can -> be : 1
as a qualifier -> when : 1
a qualifier when -> declaring : 1
qualifier when declaring -> or : 1
when declaring or -> member : 1
declaring or member -> when : 1
or member when -> qualifying : 1
member when qualifying -> an : 1
member when qualifying -> the : 1
when qualifying an -> using : 1
qualifying an using -> means : 1
an using means -> that : 1
using means that -> the : 1
the object cannot -> be : 1
object cannot be -> the : 1
object cannot be -> an : 2
of an and -> you : 1
an and you -> cannot : 1
cannot call any -> of : 1
call any of -> its : 1
of its member -> when : 1
of its member -> a : 1
its member when -> qualifying : 1
when qualifying the -> target : 1
qualifying the target -> of : 1
a it means -> the : 1
it means the -> destination : 1
it means the -> input : 1
means the destination -> cannot : 1
the destination cannot -> be : 1
destination cannot be -> when : 1
cannot be when -> member : 1
be when member -> functions : 1
when member functions -> of : 1
functions of a -> object : 1
of a object -> are : 1
a object are -> is : 1
object are is -> a : 1
is a when -> qualifying : 1
a when qualifying -> a : 1
when qualifying a -> member : 1
qualifying a member -> using : 1
a member using -> the : 1
member using the -> qualifier : 1
using the qualifier -> means : 1
the qualifier means -> that : 1
qualifier means that -> within : 1
means that within -> the : 1
that within the -> member : 1
and the member -> function : 3
called for functions -> without : 1
for functions without -> the : 1
functions without the -> modifier : 1
without the modifier -> cannot : 1
the modifier cannot -> be : 1
modifier cannot be -> called : 1
cannot be called -> for : 1
for a declaring -> pointers : 1
a declaring pointers -> and : 1
declaring pointers and -> be : 1
pointers and be -> sure : 1
and be sure -> to : 2
sure to distinguish -> between : 1
between a pointer -> which : 1
which the pointer -> cannot : 1
which the pointer -> can : 1
the pointer cannot -> be : 1
be but what -> it : 2
but what it -> points : 2
what it points -> to : 2
points to can -> be : 1
be and a -> pointer : 1
the pointer can -> be : 1
the pointer can -> store : 1
points to cannot -> be : 1
to cannot be -> rect : 1
cannot be rect -> int : 1
be rect int -> void : 1
rect int void -> void : 1
int void void -> int : 1
void void int -> return : 1
void int return -> int : 1
int return rect -> rect : 1
return rect rect -> rect : 1
rect rect rect -> pointer : 1
rect rect pointer -> to : 1
rect pointer to -> const : 1
to const is -> const : 1
const is const -> p : 1
is const p -> is : 1
const p is -> not : 1
p is not -> const : 1
not const unit -> is : 1
const unit is -> const : 1
unit is const -> const : 1
is const const -> pointer : 1
is const const -> if : 1
const const pointer -> cannot : 1
const const pointer -> hint : 1
const pointer cannot -> set : 1
pointer cannot set -> is : 1
cannot set is -> not : 1
set is not -> operator : 1
set is not -> the : 1
is not operator -> cast : 1
not operator cast -> to : 1
operator cast to -> modify : 1
cast to modify -> operator : 1
to modify operator -> performs : 1
modify operator performs -> a : 1
operator performs a -> type : 1
operator performs a -> cast : 1
performs a type -> cast : 1
a type cast -> that : 1
type cast that -> can : 1
cast that can -> add : 1
that can add -> or : 1
add or remove -> and : 1
or remove and -> no : 1
remove and no -> other : 1
and no other -> modifications : 1
no other modifications -> to : 1
other modifications to -> the : 1
modifications to the -> type : 1
type are you -> cast : 1
are you cast -> away : 1
you cast away -> a : 1
cast away a -> or : 1
away a or -> qualifier : 1
a or qualifier -> from : 1
or qualifier from -> an : 1
qualifier from an -> and : 1
from an and -> then : 1
an and then -> modify : 1
and then modify -> the : 1
then modify the -> the : 1
modify the the -> behavior : 1
behavior is statement -> reiterates : 1
is statement reiterates -> a : 1
statement reiterates a -> loop : 1
reiterates a loop -> continue : 1
a loop continue -> statement : 1
loop continue statement -> iterates : 1
continue statement iterates -> a : 1
statement iterates a -> loop : 1
iterates a loop -> statement : 1
a loop statement -> without : 1
loop statement without -> executing : 1
statement without executing -> the : 1
without executing the -> rest : 1
executing the rest -> of : 1
the loop control -> passes : 1
loop control passes -> directly : 1
control passes directly -> to : 1
passes directly to -> the : 1
to the loop -> condition : 1
the loop condition -> in : 1
loop condition in -> a : 1
condition in a -> or : 1
a or loop -> or : 1
or loop or -> to : 1
loop or to -> the : 1
or to the -> iterate : 1
to the iterate -> expression : 1
the iterate expression -> in : 1
iterate expression in -> a : 1
a loop if -> template : 1
loop if template -> friend : 1
if template friend -> typedef : 1
template friend typedef -> auto : 1
friend typedef auto -> register : 1
typedef auto register -> static : 1
auto register static -> extern : 1
register static extern -> mutable : 1
static extern mutable -> inline : 1
extern mutable inline -> virtual : 1
mutable inline virtual -> source : 1
inline virtual source -> file : 1
virtual source file -> is : 1
file is a -> sequence : 1
or more see -> for : 1
more see for -> a : 1
for a full -> discussion : 1
a full discussion -> of : 1
full discussion of -> provides : 1
discussion of provides -> information : 1
of provides information -> about : 1
provides information about -> a : 1
about a single -> identifier : 2
a single identifier -> in : 2
single identifier in -> a : 2
identifier in a -> throw : 1
identifier in a -> the : 1
in a throw -> declarator : 1
a throw declarator -> provides : 1
throw declarator provides -> additional : 1
declarator provides additional -> information : 1
provides additional information -> about : 1
additional information about -> a : 1
a the declarator -> can : 1
the declarator can -> be : 1
declarator can be -> part : 1
can be part -> of : 1
part of an -> object : 1
part of an -> if : 1
part of an -> the : 2
an object a -> class : 1
object a class -> member : 1
class member a -> a : 1
member a a -> parameter : 1
a a parameter -> in : 1
a parameter in -> a : 1
and so keyword -> label : 1
so keyword label -> in : 1
keyword label in -> switch : 1
label in switch -> default : 1
in switch default -> statement : 1
switch default statement -> jumps : 1
default statement jumps -> to : 1
statement jumps to -> the : 1
to the label -> if : 1
the label if -> no : 1
label if no -> case : 1
if no case -> matches : 1
no case matches -> the : 1
case matches the -> switch : 1
matches the switch -> a : 1
the switch a -> statement : 1
switch a statement -> can : 1
can have at -> most : 1
have at most -> one : 2
most one if -> there : 1
one if there -> is : 1
is no and -> the : 1
no and the -> expression : 1
the expression does -> not : 1
expression does not -> match : 1
not match any -> control : 1
match any control -> jumps : 1
any control jumps -> directly : 1
control jumps directly -> to : 1
jumps directly to -> the : 1
follows the case -> case : 1
the case case -> cerr : 1
case case cerr -> c : 1
case cerr c -> operator : 1
cerr c operator -> deletes : 1
c operator deletes -> a : 1
operator deletes a -> dynamic : 1
deletes a dynamic -> object : 1
array of delete -> delete : 1
of delete delete -> expression : 1
delete delete expression -> destroys : 1
delete expression destroys -> objects : 1
expression destroys objects -> and : 1
destroys objects and -> frees : 1
objects and frees -> their : 1
and frees their -> a : 1
frees their a -> scalar : 1
their a scalar -> allocated : 1
a scalar allocated -> with : 1
scalar allocated with -> must : 1
allocated with must -> be : 2
with must be -> freed : 2
must be freed -> with : 2
must be freed -> by : 1
be freed with -> an : 1
be freed with -> do : 1
freed with an -> array : 1
an array allocated -> with : 1
array allocated with -> must : 1
freed with do -> not : 1
with do not -> mix : 1
do not mix -> scalar : 1
not mix scalar -> allocation : 1
mix scalar allocation -> or : 1
scalar allocation or -> deallocation : 1
or deallocation with -> array : 1
deallocation with array -> allocation : 1
with array allocation -> or : 1
array allocation or -> is : 1
allocation or is -> safe : 1
or is safe -> to : 1
a null nothing -> will : 1
null nothing will -> can : 1
nothing will can -> overload : 1
will can overload -> and : 1
overload and described -> in : 1
and described in -> two : 1
described in two -> global : 2
in two global -> placement : 2
two global placement -> functions : 2
global placement functions -> are : 2
placement functions are -> provided : 2
functions are provided -> by : 2
are provided by -> the : 2
provided by the -> standard : 2
library the you -> can : 2
define additional functions -> if : 2
additional functions if -> you : 2
functions if you -> first : 1
functions if you -> allocator : 1
if you first -> argument : 1
you first argument -> to : 1
first argument to -> is : 1
first argument to -> the : 2
first argument to -> a : 1
to is the -> pointer : 1
to is the -> iteration : 1
to is the -> name : 1
to is the -> return : 1
to is the -> contents : 1
is the pointer -> to : 3
memory that must -> be : 1
must be additional -> arguments : 1
be additional arguments -> can : 1
additional arguments can -> be : 1
used for placement -> which : 1
for placement which -> cannot : 1
placement which cannot -> be : 1
be used directly -> but : 1
used directly but -> are : 1
directly but are -> matched : 1
but are matched -> with : 1
are matched with -> placement : 1
matched with placement -> operations : 1
with placement operations -> if : 1
placement operations if -> the : 1
operations if the -> expression : 1
the expression throws -> an : 1
expression throws an -> p : 1
expression throws an -> a : 1
expression throws an -> delete : 1
expression throws an -> exception : 1
throws an p -> new : 1
an p new -> array : 1
p new array -> new : 1
new array new -> statement : 1
array new statement -> loop : 1
new statement loop -> do : 1
statement loop do -> while : 1
loop do while -> statement : 1
do while statement -> is : 1
while statement is -> a : 1
is a loop -> that : 1
a loop that -> executes : 1
loop that executes -> then : 1
that executes then -> tests : 1
executes then tests -> the : 1
then tests the -> loop : 1
tests the loop -> iterates : 1
the loop iterates -> while : 1
loop iterates while -> is : 1
iterates while is -> true : 1
while is true -> and : 1
is true and -> ends : 1
is true and -> vice : 1
is true and -> is : 1
true and ends -> if : 1
and ends if -> is : 1
ends if is -> the : 1
loop body always -> executes : 1
body always executes -> at : 1
always executes at -> least : 1
at least cout -> if : 1
least cout if -> type : 1
cout if type -> type : 1
if type type -> with : 1
type type with -> no : 3
no type specifier -> represents : 1
no type specifier -> denotes : 2
type specifier represents -> a : 3
specifier represents a -> the : 1
specifier represents a -> long : 1
specifier represents a -> short : 1
represents a the -> details : 1
the details are -> but : 1
the details are -> can : 1
details are but -> you : 1
are but you -> are : 1
are but you -> can : 1
but you are -> guaranteed : 1
guaranteed that the -> range : 1
and precision of -> can : 1
and precision of -> a : 1
precision of can -> never : 1
of can never -> be : 1
never be less -> than : 1
be less than -> those : 1
be less than -> the : 2
less than those -> of : 1
than those of -> type : 1
than those of -> or : 1
those of type -> has : 1
of type has -> at : 1
of type has -> the : 2
type has at -> least : 1
least the range -> and : 1
precision of a -> plain : 1
a plain operator -> polymorphic : 1
plain operator polymorphic -> cast : 1
operator polymorphic cast -> of : 1
polymorphic cast of -> class : 1
cast of class -> type : 1
class type operator -> performs : 1
type operator performs -> a : 1
performs a cast -> on : 1
a cast on -> a : 1
cast on a -> pointer : 1
on a pointer -> or : 1
of class if -> is : 1
class if is -> a : 1
a base can -> be : 1
base can be -> a : 1
a derived if -> the : 1
derived if the -> dynamic : 1
if the dynamic -> type : 1
is not that -> of : 1
is not that -> the : 1
is not that -> failure : 1
not that of -> or : 1
that of or -> a : 1
from the cast -> if : 1
the cast if -> is : 1
cast if is -> a : 1
is a failure -> returns : 1
is a failure -> throws : 1
a failure returns -> a : 1
failure returns a -> null : 1
a null if -> is : 2
a null if -> you : 1
null if is -> a : 2
null if is -> can : 1
null if is -> the : 1
a failure throws -> casts : 1
failure throws casts -> from : 1
throws casts from -> a : 1
casts from a -> derived : 1
derived to an -> accessible : 1
an accessible base -> class : 1
accessible base class -> always : 1
base class always -> is : 1
class always is -> a : 1
always is a -> null : 1
to the cast -> succeeds : 1
the cast succeeds -> and : 1
cast succeeds and -> returns : 1
succeeds and returns -> a : 1
object that base -> struct : 1
that base struct -> derived : 1
base struct derived -> base : 1
derived base b -> new : 1
base b new -> d : 1
b new d -> keyword : 1
new d keyword -> else : 1
d keyword else -> part : 1
keyword else part -> of : 1
else part of -> if : 1
else part of -> an : 1
part of if -> if : 1
part of if -> the : 3
of if if -> else : 1
if else keyword -> introduces : 1
else keyword introduces -> the : 1
keyword introduces the -> else : 1
introduces the else -> part : 1
the else part -> of : 1
of an if -> the : 1
of an if -> you : 1
the is t -> if : 1
is t if -> return : 1
return return keyword -> declares : 1
return keyword declares -> enumerated : 1
keyword declares enumerated -> type : 1
declares enumerated type -> or : 1
enumerated type or -> elaborates : 1
type or elaborates -> an : 1
or elaborates an -> enumerated : 1
elaborates an enumerated -> type : 1
enumerated type enum -> enum : 1
type enum enum -> keyword : 1
enum enum keyword -> declares : 1
enum keyword declares -> a : 1
a new enumerated -> type : 1
new enumerated type -> an : 1
enumerated type an -> or : 1
enumerated type an -> an : 1
type an or -> names : 1
an or names -> an : 1
or names an -> existing : 1
names an existing -> enumerated : 1
an existing enumerated -> type : 1
existing enumerated type -> an : 1
type an an -> enumerated : 1
an an enumerated -> type : 1
an integral type -> that : 8
type that defines -> a : 1
that defines a -> set : 1
that defines a -> special : 1
defines a set -> of : 1
set of named -> constants : 1
of named constants -> each : 1
named constants each -> is : 1
constants each is -> an : 1
each is an -> identifier : 1
an identifier optionally -> followed : 1
identifier optionally followed -> by : 1
by a value -> equal : 1
a value equal -> sign : 1
value equal sign -> and : 1
equal sign and -> a : 1
sign and a -> constant : 1
and a constant -> expression : 1
constant expression of -> integral : 1
expression of integral -> or : 1
or enumerated without -> an : 1
enumerated without an -> explicit : 1
without an explicit -> the : 1
an explicit the -> value : 1
an explicit the -> facet : 1
explicit the value -> of : 1
an enumerator is -> one : 1
of the preceding -> the : 1
preceding the implicit -> value : 1
the implicit value -> of : 1
implicit value of -> the : 1
enumerator is with -> no : 1
type is stored -> as : 1
is stored as -> an : 1
is stored as -> a : 1
stored as an -> integral : 1
as an integral -> the : 1
as an integral -> such : 1
integral the size -> of : 1
of the integer -> is : 1
of the integer -> and : 2
of the integer -> a : 2
integer is but -> is : 1
but is large -> enough : 1
to hold all -> the : 1
to hold all -> valid : 1
the enumerated the -> valid : 1
enumerated the valid -> values : 1
the valid values -> of : 1
values of an -> enumeration : 1
an enumeration include -> the : 1
enumeration include the -> declared : 1
include the declared -> enumerators : 1
the declared enumerators -> and : 1
declared enumerators and -> every : 1
enumerators and every -> value : 1
and every value -> that : 1
every value that -> can : 1
value that can -> be : 5
value that can -> the : 1
value that can -> return : 1
can be stored -> in : 7
number of even -> if : 1
number of even -> though : 4
of even if -> those : 1
if those values -> are : 1
those values are -> not : 1
values are not -> named : 1
are not named -> as : 1
not named as -> logical : 1
named as logical -> yes : 1
as logical yes -> bool : 1
logical yes bool -> logical : 1
yes bool logical -> redundant : 1
bool logical redundant -> enum : 1
logical redundant enum -> return : 1
redundant enum return -> x : 1
enum return x -> specifier : 1
return x specifier -> explicit : 1
x specifier explicit -> constructor : 1
specifier explicit constructor -> specifier : 1
explicit constructor specifier -> can : 1
constructor specifier can -> be : 1
used with a -> constructor : 1
with a constructor -> to : 1
a constructor to -> prevent : 1
constructor to prevent -> implicit : 1
to prevent implicit -> type : 1
prevent implicit type -> it : 1
implicit type it -> is : 1
it is permitted -> for : 1
is permitted for -> any : 1
permitted for any -> constructor : 1
for any constructor -> but : 1
any constructor but -> makes : 1
constructor but makes -> sense : 1
but makes sense -> only : 1
makes sense only -> for : 1
sense only for -> constructors : 1
only for constructors -> that : 1
for constructors that -> can : 1
constructors that can -> be : 1
a single an -> explicit : 1
single an explicit -> constructor : 1
explicit constructor can -> be : 1
can be invoked -> from : 1
be invoked from -> a : 1
invoked from a -> declaration : 1
from a declaration -> that : 2
declaration that uses -> initialization : 1
declaration that uses -> nor : 1
declaration that uses -> the : 1
that uses initialization -> or : 1
uses initialization or -> from : 1
initialization or from -> an : 1
from an explicit -> type : 1
explicit type cast -> but : 1
cast but not -> from : 1
but not from -> a : 1
not from a -> declaration : 1
not from a -> range : 1
that uses nor -> from : 1
uses nor from -> an : 1
nor from an -> implicit : 1
from an implicit -> type : 1
implicit type point -> int : 1
type point int -> y : 1
point int y -> point : 1
int y point -> ok : 1
y point ok -> point : 1
point ok point -> would : 1
ok point would -> be : 1
point would be -> ok : 2
would be ok -> without : 2
be ok without -> explicit : 2
ok without explicit -> point : 1
ok without explicit -> specifier : 1
without explicit point -> would : 1
explicit point would -> be : 1
without explicit specifier -> exported : 1
explicit specifier exported -> template : 1
specifier exported template -> template : 1
exported template template -> specifier : 1
template template specifier -> declares : 1
template specifier declares -> a : 1
declares a template -> to : 1
a template to -> be : 1
template to be -> an : 1
to be an -> exported : 1
be an exported -> template : 1
lets you compile -> the : 1
you compile the -> definitions : 1
compile the definitions -> of : 1
definitions of a -> function : 1
definitions of a -> class : 1
function or the -> member : 1
function or the -> results : 2
or the member -> definitions : 1
member definitions of -> a : 1
a class separately -> from : 1
class separately from -> the : 1
separately from the -> with : 1
from the with -> no : 1
not support class -> point : 1
support class point -> t : 1
t t any -> throw : 1
t any throw -> or : 1
any throw or -> and : 1
throw or and -> bitor : 1
or and bitor -> xor : 1
and bitor xor -> bitand : 1
bitor xor bitand -> sizeof : 1
xor bitand sizeof -> sizeof : 1
bitand sizeof sizeof -> typename : 1
sizeof sizeof typename -> typename : 1
sizeof typename typename -> typeid : 1
typename typename typeid -> typeid : 1
typename typeid typeid -> template : 1
typeid typeid template -> this : 1
typeid template this -> expression : 1
template this expression -> represents : 1
this expression represents -> a : 1
expression represents a -> value : 1
represents a value -> and : 1
a value and -> a : 1
a value and -> writes : 1
value and a -> see : 1
and a see -> for : 1
see for details -> about : 2
see for details -> and : 1
details about lvalues -> and : 1
about lvalues and -> and : 1
and and some -> syntax : 1
and some syntax -> rules : 1
syntax rules are -> presented : 1
rules are presented -> here : 1
are presented here -> and : 1
presented here and -> in : 1
here and in -> the : 1
in the various -> keyword : 1
the various keyword -> the : 1
various keyword the -> and : 1
keyword the and -> rules : 1
the and rules -> are : 1
and rules are -> not : 1
are not duplicated -> see : 1
not duplicated see -> and : 1
duplicated see and -> for : 1
rules are under -> see : 1
are under see -> for : 1
under see for -> information : 1
about storage storage -> class : 1
storage class external -> storage : 1
class external storage -> class : 1
external storage class -> extern : 1
storage class extern -> extern : 1
class extern extern -> extern : 1
extern extern storage -> class : 1
extern storage class -> specifier : 1
class specifier marks -> a : 1
specifier marks a -> declaration : 1
marks a declaration -> as : 1
declaration as having -> external : 1
as having external -> an : 1
having external an -> external : 1
external an external -> object : 1
an external object -> or : 1
external object or -> function : 1
defined in one -> file : 1
in one file -> and : 1
one file and -> used : 1
file and used -> in : 1
with no keyword -> can : 1
no keyword can -> also : 1
keyword can also -> be : 1
used to specify -> language : 1
to specify language -> you : 1
specify language you -> provide : 1
language you provide -> the : 1
you provide the -> language : 1
provide the language -> name : 1
the language name -> as : 1
language name as -> a : 1
a string the -> language : 1
string the language -> is : 1
is the linkage -> is : 1
linkage is also -> other : 1
is also other -> languages : 1
also other languages -> are : 1
other languages are -> int : 1
languages are int -> int : 1
are int int -> void : 1
int void const -> double : 1
void const double -> literal : 1
const double literal -> boolean : 1
double literal boolean -> false : 1
literal boolean false -> literal : 1
boolean false literal -> has : 1
false literal has -> type : 1
type and integer -> value : 1
and integer value -> type : 1
integer value type -> type : 1
value type type -> with : 1
no type is -> a : 2
no type is -> an : 8
no type is -> the : 7
precision are they -> can : 1
are they can -> never : 1
they can never -> be : 1
never be more -> than : 1
be more than -> those : 1
more than those -> of : 1
those of or -> statement : 1
of or statement -> for : 1
or statement for -> loop : 1
statement for loop -> for : 1
for loop for -> loop : 1
loop for loop -> is : 1
for loop is -> used : 1
loop is used -> for : 1
used for bounded -> loops : 1
for bounded loops -> and : 1
bounded loops and -> for : 1
loops and for -> unbounded : 1
and for unbounded -> loops : 1
for unbounded loops -> that : 1
unbounded loops that -> have : 1
loops that have -> execution : 1
that have execution -> starts : 1
have execution starts -> with : 1
execution starts with -> which : 1
starts with which -> can : 1
with which can -> be : 1
for and both -> include : 1
and both include -> a : 1
both include a -> terminating : 1
include a terminating -> is : 1
a terminating is -> then : 1
terminating is then -> if : 1
is then if -> evaluates : 1
then if evaluates -> to : 1
if evaluates to -> is : 1
evaluates to is -> the : 1
is the iteration -> is : 1
the iteration is -> then : 1
iteration is then -> and : 1
is then and -> the : 1
then and the -> is : 1
the is tested -> when : 1
is tested when -> is : 1
tested when is -> the : 1
the loop ends -> and : 1
loop ends and -> control : 1
ends and control -> passes : 1
and control passes -> to : 1
control passes to -> the : 1
passes to the -> statement : 1
passes to the -> host : 1
the statement following -> the : 2
statement following the -> end : 2
the in and -> are : 1
in and are -> in : 1
and are in -> the : 1
and are in -> function : 1
scope as and -> a : 1
and a statement -> inside : 1
a statement inside -> transfers : 1
statement inside transfers -> control : 1
inside transfers control -> to : 1
to the evaluation -> of : 1
evaluation of the -> iteration : 1
the iteration i -> i : 1
iteration i i -> cout : 1
i i cout -> i : 1
i i cout -> a : 1
i i cout -> create : 1
i cout i -> n : 1
cout i n -> n : 1
i n n -> n : 1
n n n -> specifier : 1
n n specifier -> grants : 1
n specifier grants -> access : 1
specifier grants access -> to : 1
grants access to -> private : 1
to private class -> specifier : 1
private class specifier -> declares : 1
declares a friend -> or : 1
a friend or -> a : 1
friend or a -> friend : 1
friend declaration can -> appear : 1
appear only in -> a : 1
only in a -> class : 1
class template a -> friend : 1
template a friend -> has : 1
a friend has -> full : 1
friend has full -> access : 1
has full access -> to : 1
to the private -> members : 1
the friend a -> friend : 1
friend a friend -> function : 1
friend function declaration -> can : 1
function a class -> template : 1
class template contains -> a : 1
class template contains -> descriptions : 1
template contains a -> friend : 1
contains a friend -> all : 1
a friend all -> instantiations : 1
friend all instantiations -> of : 1
all instantiations of -> the : 2
instantiations of the -> template : 2
template grant if -> the : 1
grant if the -> friend : 1
template all instantiations -> of : 1
a template specialization -> or : 1
template specialization or -> only : 1
specialization or only -> that : 1
or only that -> specialization : 1
that specialization or -> instantiation : 1
specialization or instantiation -> is : 1
or instantiation is -> a : 1
instantiation is a -> is : 1
is not nor -> is : 1
not nor is -> it : 1
nor is it -> list : 1
is it list -> bool : 1
it list bool -> const : 1
list bool const -> class : 1
bool const class -> function : 1
bool const class -> template : 10
bool const class -> class : 12
const class function -> try : 1
class function try -> for : 1
function try for -> information : 1
try for information -> about : 1
information about functions -> and : 1
about functions and -> for : 1
functions and for -> information : 1
functions and for -> all : 1
functions and for -> a : 1
about the special -> member : 1
the special member -> such : 1
special member such -> as : 1
member such as -> applies : 1
such as applies -> only : 1
as applies only -> to : 1
to the definition -> of : 1
a class statement -> transfers : 1
class statement transfers -> execution : 1
execution to a -> labeled : 1
to a labeled -> goto : 1
a labeled goto -> statement : 1
labeled goto statement -> transfers : 1
goto statement transfers -> control : 1
control to another -> statement : 1
to another statement -> in : 1
another statement in -> the : 1
same the must -> match : 1
the must match -> a : 1
must match a -> statement : 1
match a statement -> label : 1
a statement label -> elsewhere : 1
statement label elsewhere -> in : 1
label elsewhere in -> the : 1
the statement labels -> have : 1
statement labels have -> the : 1
labels have the -> form : 1
the form cannot -> transfer : 1
form cannot transfer -> into : 1
cannot transfer into -> a : 1
transfer into a -> transferring : 1
into a transferring -> control : 1
a transferring control -> into : 1
transferring control into -> the : 1
control into the -> middle : 1
into the middle -> of : 1
a block and -> across : 1
block and across -> a : 1
and across a -> declaration : 1
across a declaration -> results : 1
unless the declaration -> is : 1
declaration is for -> an : 1
for an uninitialized -> pod : 1
an uninitialized pod -> for : 1
pod for i -> i : 1
i if break -> out : 1
if break out -> of : 1
out of nested -> name : 1
of nested name -> of : 1
nested name of -> an : 1
of an template -> entity : 1
an template entity -> name : 1
template entity name -> can : 1
entity name can -> be : 1
be a simple -> an : 1
a simple an -> operator : 1
simple an operator -> or : 1
a qualified see -> for : 1
qualified see for -> the : 1
apply to valid -> see : 1
to valid see -> for : 1
valid see for -> more : 1
information on overloaded -> see : 1
on overloaded see -> for : 1
overloaded see for -> the : 1
apply to and -> statement : 1
apply to and -> several : 1
to and statement -> selection : 1
and statement selection -> if : 1
statement selection if -> if : 1
selection if if -> else : 1
if else statement -> tests : 1
else statement tests -> and : 1
statement tests and -> if : 1
tests and if -> it : 1
tests and if -> is : 1
it is executes -> the : 1
is executes the -> first : 1
executes the first -> if : 1
the first if -> is : 1
first if is -> and : 1
if is and -> an : 1
if is and -> is : 2
if is and -> class : 1
is and an -> part : 1
is and an -> iterator : 1
and an part -> is : 1
an part is -> the : 1
part is the -> is : 1
the is if -> there : 1
the is if -> exactly : 1
the is if -> the : 1
is no execution -> continues : 2
no execution continues -> with : 2
after the end -> of : 1
the if contains -> a : 1
if contains a -> the : 2
a the declared -> name : 1
name is in -> the : 1
scope of both -> the : 1
of both the -> and : 1
both the and -> t : 1
the and t -> return : 1
and t return -> else : 1
t return else -> return : 1
else return specifier -> inline : 1
return specifier inline -> function : 1
specifier inline function -> function : 1
inline function function -> specifier : 1
function function specifier -> can : 1
function specifier can -> be : 1
used with any -> function : 1
used with any -> integral : 1
any function or -> member : 1
or member function -> to : 1
or member function -> tcontrol : 1
function to hint -> to : 1
to hint to -> the : 1
the function should -> be : 1
the function should -> return : 1
function should be -> expanded : 1
should be expanded -> inline : 1
be expanded inline -> at : 1
expanded inline at -> the : 1
inline at the -> point : 1
ignore the the -> compiler : 1
compiler is also -> free : 1
is also free -> to : 1
also free to -> expand : 1
free to expand -> functions : 1
to expand functions -> inline : 1
expand functions inline -> that : 1
functions inline that -> are : 1
inline that are -> declared : 1
are declared without -> the : 1
declared without the -> so : 1
without the so -> long : 1
the so long -> as : 1
so long as -> this : 1
long as this -> does : 1
as this does -> not : 1
this does not -> affect : 1
affect the semantics -> of : 1
the semantics of -> the : 1
the semantics of -> a : 2
semantics of the -> inline : 1
of the inline -> function : 1
the inline function -> must : 1
same source file -> where : 1
file where it -> is : 1
it is before -> it : 1
is before it -> is : 1
inline function can -> be : 1
defined in more -> than : 1
than one file -> other : 1
one file other -> the : 1
file other the -> definition : 1
other the definition -> in : 1
the definition in -> every : 1
definition in every -> file : 1
every file must -> be : 1
file must be -> the : 1
be the member -> function : 1
defined within a -> class : 1
definition is implicitly -> declared : 1
implicitly declared point -> int : 1
declared point int -> redundant : 1
point int redundant -> int : 1
int redundant int -> type : 1
redundant int type -> integer : 1
int type integer -> type : 1
type integer type -> with : 1
integer type with -> no : 1
type specifier denotes -> an : 1
type specifier denotes -> a : 1
specifier denotes an -> integral : 1
denotes an integral -> it : 1
an integral it -> represents : 1
integral it represents -> a : 1
it represents a -> signed : 1
represents a signed -> integer : 1
represents a signed -> offset : 1
a signed integer -> whose : 1
signed integer whose -> size : 1
integer whose size -> is : 1
is the natural -> size : 1
the natural size -> of : 1
natural size of -> an : 1
of an integer -> on : 1
of an integer -> the : 1
an integer on -> the : 1
integer on the -> host : 1
the host with -> the : 1
host with the -> or : 1
the or it -> represents : 1
or it represents -> an : 1
it represents an -> integer : 1
it represents an -> unsigned : 1
represents an integer -> type : 1
an integer type -> whose : 1
integer type whose -> range : 1
type whose range -> is : 1
range is possibly -> smaller : 1
is possibly smaller -> or : 1
possibly smaller or -> larger : 1
smaller or larger -> than : 1
or larger than -> that : 1
larger than that -> of : 1
than that of -> plain : 1
that of plain -> with : 1
of plain with -> the : 1
plain with the -> it : 1
the it represents -> an : 1
represents an unsigned -> the : 1
an unsigned the -> specifier : 1
unsigned the specifier -> is : 1
specifier is but -> it : 1
is the so -> it : 1
the so it -> is : 1
rarely used with -> type : 1
used with type -> long : 1
with type long -> type : 1
type long type -> with : 1
long type with -> no : 1
with no used -> alone : 1
no used alone -> or : 1
used alone or -> with : 2
alone or with -> the : 2
or with the -> type : 2
represents a long -> integer : 1
a long integer -> whose : 1
a long integer -> function : 1
a long integer -> that : 1
long integer whose -> range : 1
large as a -> plain : 2
as a plain -> it : 1
as a plain -> a : 1
plain it can -> be : 2
can be combined -> with : 2
can be combined -> using : 1
combined with to -> denote : 2
with to denote -> an : 2
to denote an -> unsigned : 2
denote an unsigned -> integer : 2
an unsigned integer -> whose : 2
unsigned integer whose -> range : 2
a plain a -> plain : 2
plain a plain -> is : 2
plain is signed -> by : 2
is signed by -> but : 2
signed by but -> you : 2
by but you -> can : 2
use the specifier -> to : 2
specifier to be -> combined : 1
specifier to be -> specifier : 1
to be combined -> with : 1
combined with represents -> an : 1
with represents an -> whose : 1
represents an whose -> range : 1
an whose range -> and : 1
whose range and -> precision : 1
least as great -> as : 1
as great as -> those : 1
great as those -> of : 1
a plain specifier -> mutable : 1
plain specifier mutable -> data : 1
specifier mutable data -> member : 1
mutable data member -> specifier : 1
data member specifier -> can : 1
member specifier can -> be : 1
with the declaration -> of : 1
a data using -> it : 1
data using it -> means : 1
using it means -> that : 2
it means that -> the : 2
that the member -> can : 1
that the member -> is : 1
object is represent -> a : 1
is represent a -> point : 1
represent a point -> in : 1
a point in -> cartesian : 1
point in cartesian -> if : 1
in cartesian if -> the : 1
cartesian if the -> user : 1
if the user -> requests : 1
the user requests -> polar : 1
user requests polar -> compute : 1
requests polar compute -> and : 1
polar compute and -> cache : 1
compute and cache -> the : 1
and cache the -> polar : 1
cache the polar -> if : 1
the polar if -> the : 1
polar if the -> cartesian : 1
if the cartesian -> coordinates : 1
the cartesian coordinates -> the : 1
cartesian coordinates the -> polar : 1
coordinates the polar -> coordinates : 1
the polar coordinates -> must : 1
the polar coordinates -> are : 1
polar coordinates must -> be : 1
coordinates must be -> the : 1
be the polar -> coordinates : 1
polar coordinates are -> computed : 1
coordinates are computed -> only : 1
are computed only -> if : 1
computed only if -> they : 1
they are struct -> point : 1
are struct point -> double : 1
struct point double -> const : 1
point double const -> if : 1
if return void -> double : 1
void double double -> bool : 1
double double bool -> int : 1
double bool int -> const : 1
bool int const -> point : 1
int const point -> keyword : 1
const point keyword -> declares : 1
point keyword declares -> namespace : 1
keyword declares namespace -> namespace : 1
declares namespace namespace -> namespace : 1
namespace namespace using -> namespace : 1
using namespace keyword -> can : 1
using namespace keyword -> starts : 1
namespace keyword can -> be : 1
in a namespace -> a : 1
a namespace a -> namespace : 1
namespace a namespace -> alias : 1
a namespace alias -> or : 1
namespace alias or -> a : 1
alias or a -> a : 1
or a a -> namespace : 1
a a namespace -> is : 1
a namespace is -> a : 1
namespace is a -> scope : 1
is a scope -> for : 1
a scope for -> declarations : 1
scope for declarations -> of : 1
for declarations of -> and : 1
of and other -> outside : 1
and other outside -> a : 1
other outside a -> you : 1
outside a you -> can : 1
the namespace by -> qualifying : 1
namespace by qualifying -> the : 1
by qualifying the -> name : 1
qualifying the name -> with : 1
scope operator such -> as : 1
operator such as -> or : 1
such as or -> with : 2
such as or -> the : 1
such as or -> one : 1
such as or -> a : 1
such as or -> to : 1
as or with -> a : 1
as or with -> no : 1
or with a -> directive : 1
or with a -> and : 1
with a directive -> or : 1
directive or namespace -> declarations : 1
or namespace declarations -> can : 1
declarations can name -> the : 1
can name the -> same : 1
the same each -> one : 1
the same each -> pair : 1
same each one -> adding : 1
each one adding -> more : 1
one adding more -> declarations : 1
adding more declarations -> to : 1
more declarations to -> the : 1
standard is built -> this : 1
is built this -> with : 1
built this with -> many : 1
this with many -> different : 1
with many different -> headers : 1
many different headers -> all : 1
different headers all -> placing : 1
headers all placing -> their : 1
all placing their -> declarations : 1
placing their declarations -> in : 1
their declarations in -> the : 1
the a namespace -> can : 1
namespace can be -> which : 1
be which prevents -> the : 1
prevents the enclosed -> declarations : 1
the enclosed declarations -> from : 1
enclosed declarations from -> being : 1
declarations from being -> visible : 1
from being visible -> in : 1
being visible in -> other : 1
visible in other -> source : 2
other source namespace -> alias : 1
source namespace alias -> defines : 1
namespace alias defines -> an : 1
alias defines an -> identifier : 1
defines an identifier -> as : 1
identifier as a -> synonym : 1
as a synonym -> for : 1
an existing see -> for : 1
existing see for -> information : 1
information on the -> const : 1
information on the -> currency : 1
on the const -> long : 1
the const long -> double : 1
const long double -> pi : 2
long double pi -> math : 1
long double pi -> long : 1
double pi math -> using : 1
pi math using -> operator : 1
math using operator -> allocates : 1
using operator allocates -> a : 1
operator allocates a -> dynamic : 1
allocates a dynamic -> object : 1
array of new -> new : 1
of new new -> expression : 1
new new expression -> allocates : 1
new expression allocates -> memory : 1
expression allocates memory -> and : 1
allocates memory and -> constructs : 1
allocates memory and -> returns : 1
memory and constructs -> an : 1
and constructs an -> it : 1
constructs an it -> has : 1
an it has -> many : 1
it has many -> the : 1
has many the -> simplest : 1
many the simplest -> being : 1
the simplest being -> a : 1
simplest being a -> simple : 1
being a simple -> type : 1
a simple type -> name : 1
simple type name -> the : 1
type name the -> can : 1
name the can -> be : 1
specifiers and with -> pointer : 1
and with pointer -> a : 1
with pointer a -> reference : 1
pointer a reference -> and : 1
and an array -> size : 1
an array size -> which : 1
array size which -> allocates : 1
size which allocates -> a : 1
which allocates a -> array : 1
pointers to with -> rows : 1
to with rows -> and : 1
with rows and -> the : 1
rows and the -> first : 1
be an integral -> the : 1
integral the second -> and : 1
and subsequent dimensions -> must : 1
subsequent dimensions must -> be : 1
dimensions must be -> constant : 1
be constant if -> the : 1
constant if the -> type : 1
the type contains -> such : 1
type contains such -> as : 1
contains such as -> function : 1
as function you -> should : 1
function you should -> enclose : 1
you should enclose -> it : 1
should enclose it -> in : 1
enclose it in -> parentheses : 1
it in parentheses -> to : 1
in parentheses to -> avoid : 1
parentheses to avoid -> expression : 1
to avoid expression -> calls : 1
avoid expression calls -> an : 1
expression calls an -> allocator : 1
calls an allocator -> function : 1
an allocator function -> to : 1
allocator function to -> allocate : 1
allocate the necessary -> then : 1
the necessary then -> initializes : 1
necessary then initializes -> the : 1
then initializes the -> the : 1
initializes the the -> is : 1
the the is -> an : 1
the is an -> optional : 1
the is an -> unformatted : 1
the is an -> absolute : 1
is an optional -> list : 1
an optional list -> of : 1
optional list of -> expressions : 1
expressions in if -> no : 1
in if no -> is : 1
in if no -> character : 2
if no is -> the : 1
no is the -> new : 1
no is the -> number : 1
the new object -> is : 1
initialized to its -> default : 1
to its default -> pod : 1
its default pod -> objects : 1
default pod objects -> are : 1
pod objects are -> and : 1
pod objects are -> initialized : 1
objects are and -> other : 1
are and other -> objects : 1
are and other -> implementations : 1
are and other -> fields : 1
and other objects -> are : 2
other objects are -> initialized : 2
their default if -> the : 1
default if the -> consists : 1
if the consists -> of : 1
the consists of -> just : 1
consists of just -> empty : 1
of just empty -> pod : 1
just empty pod -> objects : 1
empty pod objects -> are : 1
initialized to and -> other : 1
to and other -> objects : 1
to and other -> templates : 1
default the can -> be : 1
be the value -> of : 1
of a scalar -> or : 1
scalar or a -> list : 1
of expressions to -> pass : 1
expressions to pass -> to : 1
to pass to -> a : 1
pass to a -> suitable : 1
a suitable allocator -> function : 1
suitable allocator function -> is : 1
allocator function is -> or : 1
function is or -> which : 1
is or which -> can : 1
or which can -> be : 1
be overloaded described -> in : 1
overloaded described in -> two : 1
if you allocator -> function : 1
you allocator function -> takes : 1
allocator function takes -> a : 1
takes a as -> its : 1
a as its -> first : 1
as its first -> which : 1
its first which -> is : 1
first which is -> the : 1
of bytes of -> memory : 1
bytes of memory -> to : 1
memory to it -> returns : 1
to it returns -> a : 1
to it returns -> to : 1
to it returns -> for : 2
to it returns -> or : 1
to it returns -> at : 1
the the syntax -> is : 1
syntax is a -> list : 1
to the allocator -> functions : 1
to the allocator -> object : 1
the allocator functions -> after : 1
allocator functions after -> the : 1
functions after the -> size : 1
after the size -> the : 1
the size the -> compiler : 1
size the compiler -> chooses : 1
the compiler chooses -> which : 1
compiler chooses which -> overloaded : 1
chooses which overloaded -> according : 1
which overloaded according -> to : 1
overloaded according to -> the : 1
usual rules of -> overload : 1
of overload resolution -> result : 1
overload resolution result -> if : 1
resolution result if -> throw : 1
result if throw -> more : 1
if throw more -> return : 1
throw more return -> p : 1
more return p -> array : 1
return p array -> placement : 1
p array placement -> delete : 1
array placement delete -> operator : 1
placement delete operator -> logical : 1
delete operator logical -> negation : 1
operator logical negation -> not : 1
logical negation not -> operator : 1
negation not operator -> converts : 1
not operator converts -> its : 1
converts its operand -> to : 1
its operand to -> type : 1
operand to type -> inverts : 1
to type inverts -> its : 1
type inverts its -> and : 1
inverts its and -> returns : 1
its and returns -> a : 1
returns a the -> keyword : 1
returns a the -> must : 1
with the typename -> if : 1
the typename if -> return : 1
typename if return -> throw : 1
typename if return -> is : 1
if return throw -> is : 2
return throw is -> operator : 1
return throw is -> specifier : 1
throw is operator -> inequality : 1
is operator inequality -> operator : 1
operator inequality operator -> compares : 1
inequality operator compares -> two : 1
operator compares two -> expressions : 1
operator compares two -> queues : 6
operator compares two -> stacks : 6
operator compares two -> strings : 6
compares two expressions -> for : 1
two expressions for -> it : 1
expressions for it -> returns : 1
for it returns -> if : 1
for it returns -> number : 1
it returns if -> the : 2
it returns if -> there : 2
it returns if -> is : 2
it returns if -> no : 5
it returns if -> every : 1
it returns if -> does : 2
operands are different -> or : 1
are different or -> if : 1
or if they -> are : 1
or if they -> both : 1
the the keyword -> is : 1
with the note -> that : 1
note that there -> is : 1
is no keyword -> equivalent : 1
no keyword equivalent -> for : 1
keyword equivalent for -> the : 1
equivalent for the -> keyword : 1
for the keyword -> function : 1
the keyword function -> call : 1
keyword function call -> syntax : 1
function call syntax -> for : 1
call syntax for -> operator : 1
syntax for operator -> operator : 1
for operator operator -> operator : 1
operator operator operator -> keyword : 1
operator operator operator -> const : 1
operator operator keyword -> converts : 1
operator keyword converts -> an : 1
keyword converts an -> operator : 1
converts an operator -> symbol : 1
an operator symbol -> into : 1
operator symbol into -> function : 1
symbol into function -> you : 1
into function you -> can : 1
keyword when invoking -> an : 1
when invoking an -> operator : 1
invoking an operator -> or : 1
operator or when -> overloading : 1
or when overloading -> an : 1
when overloading an -> x : 1
overloading an x -> same : 1
an x same -> as : 1
x same as -> above : 1
same as above -> bigint : 1
as above bigint -> const : 1
above bigint const -> symbols : 1
bigint const symbols -> that : 1
const symbols that -> can : 1
symbols that can -> be : 4
can be lists -> the : 1
be lists the -> operator : 1
lists the operator -> symbols : 1
the operator symbols -> that : 1
operator symbols that -> can : 1
can be alternative -> tokens : 1
be alternative tokens -> in : 1
alternative tokens in -> are : 1
tokens in are -> interchangeable : 1
in are interchangeable -> with : 1
are interchangeable with -> their : 1
interchangeable with their -> symbolic : 1
with their symbolic -> symbols : 1
their symbolic symbols -> that : 1
symbolic symbols that -> can : 1
can be symbols -> that : 1
be symbols that -> can : 1
can be solid -> solid : 1
be solid solid -> solid : 2
solid solid operator -> logical : 1
solid operator logical -> or : 1
operator logical or -> or : 1
logical or or -> operator : 1
or or operator -> converts : 1
or operator converts -> its : 1
evaluate both keyword -> is : 1
both keyword is -> interchangeable : 1
operator bitwise or -> assignment : 1
bitwise or assignment -> operator : 1
that performs inclusive -> it : 1
performs inclusive it -> is : 1
inclusive it is -> equivalent : 1
evaluated only keyword -> is : 2
only keyword is -> interchangeable : 2
bitmask becomes access -> access : 1
becomes access access -> specifier : 1
access access specifier -> restricts : 2
access access specifier -> no : 1
access specifier restricts -> member : 2
specifier restricts member -> access : 2
restricts member access -> to : 2
member access to -> the : 2
to the keyword -> can : 1
class definition by -> a : 3
definition by a -> to : 3
by a to -> mark : 3
a to mark -> subsequent : 3
to mark subsequent -> member : 3
mark subsequent member -> declarations : 3
subsequent member declarations -> as : 3
member declarations as -> private : 1
member declarations as -> protected : 1
member declarations as -> public : 1
declarations as private -> or : 1
as private or -> before : 1
private or before -> a : 1
or before a -> name : 3
the class header -> to : 3
class header to -> mark : 3
header to mark -> the : 3
to mark the -> inheritance : 3
to mark the -> end : 1
to mark the -> class : 1
mark the inheritance -> as : 3
the inheritance as -> the : 2
the inheritance as -> members : 1
inheritance as the -> default : 2
a is both -> for : 2
is both for -> members : 2
both for members -> and : 2
and base members -> can : 2
base members can -> be : 2
members can be -> used : 3
used by the -> class : 2
used by the -> the : 1
the class itself -> or : 1
class itself or -> by : 1
itself or by -> inheritance : 1
or by inheritance -> means : 1
by inheritance means -> all : 1
inheritance means all -> public : 2
inheritance means all -> members : 1
means all public -> and : 1
means all public -> members : 1
all public and -> protected : 1
public and protected -> members : 1
and protected members -> in : 1
protected members in -> the : 1
class are private -> to : 1
the derived rational -> int : 1
derived rational int -> int : 1
rational int int -> const : 1
void reduce and -> by : 1
reduce and by -> int : 1
and by int -> class : 1
by int class -> derived : 1
class derived rational -> class : 1
derived rational class -> myrational : 1
rational class myrational -> rational : 1
class myrational rational -> using : 1
myrational rational using -> using : 1
rational using using -> access : 1
using using access -> access : 1
using access access -> specifier : 1
and derived keyword -> can : 1
derived keyword can -> be : 1
declarations as protected -> or : 1
as protected or -> before : 1
protected or before -> a : 1
inheritance as members -> can : 1
as members can -> be : 1
the class derived -> or : 1
class derived or -> by : 1
derived or by -> when : 1
or by when -> accessing : 1
by when accessing -> a : 1
when accessing a -> protected : 1
accessing a protected -> the : 1
a protected the -> access : 1
protected the access -> must : 1
the access must -> be : 1
access must be -> through : 1
must be through -> or : 1
be through or -> an : 1
through or an -> instance : 1
or an instance -> of : 2
a derived it -> cannot : 1
derived it cannot -> be : 1
cannot be through -> a : 1
be through a -> base : 1
a base inheritance -> means : 1
base inheritance means -> all : 1
all public members -> of : 1
public members of -> the : 1
public members of -> call : 1
base class become -> protected : 1
class become protected -> in : 1
become protected in -> the : 1
the derived for -> an : 1
derived for an -> access : 1
for an access -> access : 1
an access access -> specifier : 1
access specifier no -> restrictions : 1
specifier no restrictions -> on : 1
no restrictions on -> member : 1
restrictions on member -> keyword : 1
on member keyword -> can : 1
member keyword can -> be : 2
declarations as public -> or : 1
as public or -> before : 1
public or before -> a : 1
be used freely -> by : 1
used freely by -> any : 1
freely by any -> other : 1
by any other -> class : 1
any other class -> or : 1
any other class -> invalid : 1
any other class -> arithmetic : 1
other class or -> inheritance : 1
class or inheritance -> means : 1
or inheritance means -> all : 1
all members of -> the : 1
base class retain -> their : 1
class retain their -> accessibility : 1
retain their accessibility -> for : 1
their accessibility for -> an : 1
accessibility for an -> storage : 1
for an storage -> storage : 1
an storage storage -> class : 1
storage class register -> storage : 1
class register storage -> class : 1
register storage class -> storage : 1
storage class storage -> class : 2
class storage class -> is : 1
class storage class -> specifier : 1
is like it -> can : 1
like it can -> be : 1
used for local -> objects : 1
for local objects -> and : 1
local objects and -> function : 1
objects and function -> and : 1
and function and -> using : 1
function and using -> it : 1
and using it -> means : 1
that the declared -> object : 1
object has automatic -> it : 1
has automatic it -> also : 1
automatic it also -> provides : 1
it also provides -> a : 1
also provides a -> hint : 1
provides a hint -> to : 1
the object will -> be : 1
object will be -> used : 1
object will be -> other : 1
will be used -> so : 1
be used so -> the : 1
can optimize perhaps -> by : 1
optimize perhaps by -> storing : 1
perhaps by storing -> the : 1
by storing the -> object : 1
storing the object -> in : 1
in a machine -> modern : 1
a machine modern -> compilers : 1
machine modern compilers -> routinely : 1
modern compilers routinely -> ignore : 1
compilers routinely ignore -> because : 1
routinely ignore because -> the : 1
ignore because the -> compilers : 1
better than humans -> at : 1
than humans at -> allocating : 1
humans at allocating -> int : 1
at allocating int -> int : 1
allocating int int -> sqr : 1
return operator cast -> for : 1
operator cast for -> unsafe : 1
cast for unsafe -> pointer : 1
for unsafe pointer -> operator : 1
unsafe pointer operator -> performs : 1
pointer operator performs -> potentially : 1
operator performs potentially -> unsafe : 1
performs potentially unsafe -> type : 1
unsafe type it -> is : 1
it is most -> often : 4
used to cast -> a : 1
different pointer casting -> a : 1
pointer casting a -> pointer : 1
different pointer and -> back : 1
pointer and back -> is : 1
and back is -> usually : 1
back is usually -> safe : 1
is usually safe -> and : 1
usually safe and -> yields : 1
safe and yields -> the : 1
and yields the -> original : 1
and yields the -> type : 1
original the limitations -> are : 1
the limitations are -> that : 1
limitations are that -> object : 1
are that object -> pointers : 1
that object pointers -> can : 1
object pointers can -> be : 1
pointers can be -> cast : 2
be cast only -> to : 3
cast only to -> object : 1
cast only to -> function : 1
cast only to -> you : 1
only to object -> pointers : 1
to object pointers -> with : 1
object pointers with -> similar : 1
pointers with similar -> or : 1
with similar or -> stricter : 1
similar or stricter -> alignment : 1
or stricter alignment -> and : 1
stricter alignment and -> function : 1
alignment and function -> pointers : 1
and function pointers -> can : 1
function pointers can -> be : 1
only to function -> can : 1
to function can -> be : 1
only to you -> can : 1
can cast an -> integer : 1
pointer and vice -> in : 1
and vice in -> all : 1
vice in all -> the : 1
in all the -> destination : 1
in all the -> other : 1
in all the -> relational : 1
all the destination -> pointer : 1
the destination pointer -> must : 1
destination pointer must -> be : 1
hold the casting -> a : 1
the casting a -> null : 1
casting a null -> pointer : 1
of the destination -> any : 1
of the destination -> range : 2
of the destination -> and : 1
of the destination -> that : 1
the destination any -> other : 1
destination any other -> cast : 1
any other cast -> results : 1
other cast results -> in : 1
cast results in -> undefined : 1
in undefined unsigned -> long : 1
undefined unsigned long -> statement : 1
unsigned long statement -> returns : 1
long statement returns -> from : 1
statement returns from -> a : 1
returns from a -> return : 1
from a return -> statement : 1
a return statement -> returns : 1
return statement returns -> control : 1
statement returns control -> from : 1
returns control from -> a : 1
control from a -> function : 1
function to its -> if : 1
to its if -> the : 1
returns the is -> typically : 1
the is typically -> or : 1
is typically or -> else : 1
typically or else -> must : 1
or else must -> be : 1
else must be -> of : 1
be of type -> if : 1
be of type -> the : 1
a the must -> be : 1
the must be -> convertible : 1
the must be -> a : 1
the must be -> one : 1
convertible to the -> return : 1
convertible to the -> same : 1
the return function -> that : 1
return function that -> returns : 1
that returns must -> have : 1
returns must have -> a : 1
have a statement -> for : 1
a statement for -> which : 1
statement for which -> has : 1
for which has -> an : 1
which has an -> implicit : 1
implicit if control -> reaches : 1
if control reaches -> the : 1
control reaches the -> end : 1
the type short -> integer : 1
type short integer -> type : 1
short integer type -> used : 1
integer type used -> alone : 1
type used alone -> or : 1
represents a short -> whose : 1
a short whose -> range : 1
short whose range -> is : 1
range is no -> bigger : 2
is no bigger -> than : 2
no bigger than -> a : 2
bigger than a -> plain : 2
than a plain -> it : 1
than a plain -> a : 1
to be specifier -> signed : 1
be specifier signed -> integer : 1
specifier signed integer -> type : 1
signed integer type -> keyword : 1
integer type keyword -> can : 1
type keyword can -> be : 1
be used alone -> to : 1
used alone to -> mean : 1
alone to mean -> or : 1
to mean or -> combined : 1
mean or combined -> with : 1
or combined with -> other : 2
combined with other -> type : 1
combined with other -> named : 1
other type specifiers -> to : 1
type specifiers to -> force : 1
specifiers to force -> the : 1
to force the -> type : 1
force the type -> to : 1
be the and -> types : 1
the and types -> are : 2
the and types -> have : 1
and types are -> implicitly : 1
and types are -> deprecated : 1
and types are -> therefore : 1
types are implicitly -> so : 1
are implicitly so -> it : 1
implicitly so it -> is : 1
used with to -> implement : 1
with to implement -> a : 1
implement a signed -> integral : 1
a signed integral -> value : 1
a signed integral -> type : 1
signed integral value -> whose : 1
integral value whose -> range : 1
value whose range -> is : 1
range is the -> smallest : 1
range is the -> which : 1
range is the -> number : 1
the smallest that -> the : 1
smallest that the -> compiler : 1
the compiler with -> no : 1
compiler with no -> signed : 1
with no signed -> integer : 1
no signed integer -> can : 1
signed integer can -> be : 1
integer can be -> represented : 1
can be represented -> using : 1
can be represented -> in : 1
can be represented -> by : 2
can be represented -> as : 1
be represented using -> or : 1
represented using or -> signed : 1
using or signed -> operator : 1
or signed operator -> size : 1
signed operator size -> of : 1
operator size of -> type : 1
size of type -> sizeof : 1
of type sizeof -> sizeof : 1
type sizeof sizeof -> compile : 1
sizeof sizeof compile -> the : 1
sizeof compile the -> operator : 1
compile the operator -> returns : 1
the operator returns -> the : 4
the operator returns -> a : 1
operator returns the -> amount : 1
operator returns the -> sum : 1
operator returns the -> difference : 1
operator returns the -> element : 1
operator returns the -> not : 3
returns the amount -> of : 2
of memory required -> to : 1
memory required to -> hold : 1
required to hold -> an : 1
to hold an -> object : 1
hold an object -> whose : 1
type of in -> the : 1
the latter is -> not : 1
latter is not -> the : 1
not the size -> of : 1
a type includes -> any : 1
type includes any -> padding : 1
includes any padding -> that : 1
any padding that -> the : 1
padding that the -> compiler : 1
the compiler adds -> to : 1
compiler adds to -> so : 1
adds to so -> the : 1
array of elements -> is : 1
of elements is -> always : 1
of elements is -> not : 1
elements is always -> equal : 1
equal to times -> the : 1
to times the -> size : 1
a single is -> so : 1
single is so -> you : 1
of the size -> of : 2
size of other -> types : 1
of other types -> as : 1
other types as -> multiples : 1
types as multiples -> of : 1
as multiples of -> the : 1
multiples of the -> size : 1
a the expression -> type : 1
type is point -> p : 1
is point p -> point : 1
point p point -> const : 1
p point const -> unsigned : 1
point const unsigned -> count : 1
const unsigned count -> statement : 1
unsigned count statement -> if : 1
count statement if -> if : 1
statement if if -> else : 1
if else switch -> while : 1
else switch while -> do : 1
switch while do -> while : 1
while do while -> for : 1
do while for -> break : 1
while for break -> continue : 1
for break continue -> goto : 1
break continue goto -> return : 1
continue goto return -> case : 1
goto return case -> default : 1
return case default -> for : 1
case default for -> a : 1
default for a -> complete : 1
discussion of storage -> storage : 1
of storage storage -> class : 1
storage class static -> storage : 1
class static storage -> class : 1
static storage class -> storage : 1
used with and -> class : 1
with and class -> its : 1
and class its -> purpose : 1
class its purpose -> varies : 1
its purpose varies -> slightly : 1
purpose varies slightly -> depending : 1
varies slightly depending -> on : 1
slightly depending on -> how : 1
depending on how -> you : 1
on how you -> use : 1
how you use -> local : 1
you use local -> affects : 1
use local affects -> the : 1
local affects the -> instead : 1
affects the instead -> of : 1
the instead of -> being : 1
instead of being -> constructed : 1
instead of being -> limited : 1
of being constructed -> anew : 1
being constructed anew -> every : 1
constructed anew every -> time : 1
anew every time -> the : 1
a static local -> object : 1
static local object -> is : 1
local object is -> constructed : 1
is constructed at -> most : 1
at most and -> the : 1
most and the -> object : 1
the object retains -> its : 1
object retains its -> value : 1
retains its value -> across : 1
its value across -> function : 1
value across function -> class : 1
across function class -> member : 1
function class member -> is : 1
class member is -> not : 1
member is not -> tied : 1
is not tied -> to : 1
not tied to -> a : 1
specific it is -> similar : 1
it is similar -> to : 4
to a global -> object : 1
a global object -> or : 1
global object or -> but : 1
object or but -> in : 1
or but in -> the : 1
or but in -> most : 1
that declares global -> using : 1
declares global using -> means : 1
global using means -> the : 1
using means the -> object : 1
means the object -> or : 1
the object or -> function : 2
the object or -> its : 1
or function has -> internal : 1
function has internal -> linkage : 1
has internal linkage -> instead : 1
internal linkage instead -> of : 1
linkage instead of -> the : 1
of the default -> external : 1
the default external -> that : 1
default external that -> the : 1
external that the -> object : 1
or function is -> not : 1
other source this -> use : 1
source this use -> is : 1
use is use -> anonymous : 1
is use anonymous -> namespaces : 1
use anonymous namespaces -> demo : 1
anonymous namespaces demo -> const : 1
namespaces demo const -> int : 1
demo const int -> size : 1
const int size -> void : 1
int size void -> return : 1
size void return -> int : 1
void return int -> int : 1
int return operator -> explicit : 1
return operator explicit -> cast : 1
operator explicit cast -> operator : 1
explicit cast operator -> performs : 1
cast operator performs -> type : 1
operator performs type -> conversions : 1
performs type conversions -> from : 1
type conversions from -> one : 1
conversions from one -> static : 1
from one static -> type : 1
one static type -> to : 1
to it cannot -> cast : 1
it cannot cast -> away : 1
cast away or -> a : 1
away or a -> static : 1
or a static -> cast : 1
a static cast -> can : 1
static cast can -> invoke : 1
cast can invoke -> type : 1
can invoke type -> promotions : 1
invoke type promotions -> or : 1
type promotions or -> conversions : 1
type promotions or -> else : 1
promotions or conversions -> or : 1
or conversions or -> type : 1
conversions or type -> conversions : 1
or type conversions -> with : 1
type conversions with -> type : 1
conversions with type -> conversion : 1
with type conversion -> operators : 1
conversion operators or -> constructors : 1
operators or constructors -> explicit : 1
or constructors explicit -> if : 1
constructors explicit if -> keyword : 1
explicit if keyword -> declares : 1
if keyword declares -> class : 1
if keyword declares -> a : 1
keyword declares class -> with : 1
declares class with -> public : 1
class with public -> keyword : 1
with public keyword -> declares : 1
public keyword declares -> a : 1
that has public -> access : 1
has public access -> by : 1
public access by -> inheritance : 1
access by inheritance -> is : 1
by inheritance is -> also : 1
inheritance is also -> public : 1
is also public -> by : 1
also public by -> see : 1
public by see -> for : 1
by see for -> syntax : 1
for syntax point -> int : 1
syntax point int -> point : 1
point int point -> is : 1
int point is -> redundant : 1
point is redundant -> point : 1
is redundant point -> statement : 1
redundant point statement -> multibranch : 1
point statement multibranch -> selection : 1
statement multibranch selection -> switch : 1
multibranch selection switch -> statement : 1
selection switch statement -> evaluates : 1
switch statement evaluates -> and : 1
statement evaluates and -> saves : 1
evaluates and saves -> the : 1
and saves the -> it : 1
saves the it -> compares : 1
the it compares -> the : 1
it compares the -> value : 1
compares the value -> to : 1
value to each -> label : 1
value to each -> element : 1
to each label -> in : 1
each label in -> is : 1
label in is -> typically : 1
in is typically -> a : 1
compound the statements -> that : 1
the statements that -> follow : 1
follow the matching -> label : 1
the matching label -> are : 1
matching label are -> if : 1
label are if -> no : 1
label are if -> there : 1
are if no -> label : 1
if no label -> the : 1
no label the -> statements : 1
label the statements -> following : 1
the statements following -> the : 1
statements following the -> label : 1
following the label -> are : 1
the label are -> if : 1
are if there -> is : 1
of the labels -> in : 1
labels in must -> be : 1
in must be -> use : 1
in must be -> for : 1
must be use -> the : 1
be use the -> statement : 1
exit the statement -> at : 1
the statement at -> the : 1
statement at the -> end : 1
end of each -> case : 1
of each case -> z : 1
each case z -> z : 1
case z z -> keyword : 1
z keyword declares -> a : 1
declares a or -> template : 1
a or template -> class : 1
or template class -> typename : 1
template class typename -> template : 1
class typename template -> class : 1
typename template class -> template : 1
class template template -> typename : 1
class template template -> specialization : 2
template template typename -> template : 1
template typename template -> template : 1
typename template template -> template : 1
template template template -> keyword : 1
template template keyword -> declares : 1
template keyword declares -> a : 1
declares a a -> specialization : 1
a the can -> be : 1
class template instance -> provides : 1
template instance provides -> arguments : 1
instance provides arguments -> for : 1
the template enclosing -> the : 1
template enclosing the -> arguments : 1
enclosing the arguments -> in : 1
the arguments in -> angle : 1
angle brackets if -> the : 1
brackets if the -> template : 1
and the or -> operator : 1
used to access -> the : 1
access the member -> you : 1
the member you -> must : 1
keyword to tell -> the : 1
interpret the symbol -> as : 2
the symbol as -> the : 2
symbol as the -> start : 1
symbol as the -> t : 1
the template use -> the : 1
template use the -> keyword : 1
the keyword in -> a : 1
keyword in a -> qualified : 1
in a qualified -> name : 1
qualified name when -> the : 1
name when the -> name : 1
when the name -> is : 1
instantiate the template -> in : 1
in a context -> in : 1
a context in -> which : 1
compiler would interpret -> the : 1
would interpret the -> symbol : 1
as the t -> const : 1
the t const -> return : 1
b a typedef -> const : 1
a typedef const -> return : 1
typedef const return -> int : 1
int const keyword -> object : 1
const keyword object -> pointer : 1
keyword object pointer -> in : 1
object pointer in -> member : 1
pointer in member -> keyword : 1
in member keyword -> can : 1
only in nonstatic -> member : 1
in nonstatic member -> its : 1
member its value -> is : 1
target object of -> a : 1
object of a -> member : 1
qualified or the -> same : 1
type of point -> bool : 1
of point bool -> bool : 1
point bool bool -> return : 1
bool bool return -> bool : 1
bool return bool -> operator : 1
return bool operator -> throws : 1
bool operator throws -> an : 1
throws an throw -> operator : 1
an throw operator -> throws : 1
throw operator throws -> as : 1
operator throws as -> an : 1
throws as an -> the : 1
with no rethrows -> the : 1
no rethrows the -> current : 1
the current pending -> if : 1
current pending if -> no : 1
pending if no -> exception : 1
if no exception -> is : 1
exception is is -> typename : 1
exception is is -> see : 1
is is typename -> if : 1
is typename if -> return : 1
if return is -> literal : 1
return is literal -> logical : 1
is literal logical -> true : 1
literal logical true -> literal : 1
logical true literal -> has : 1
true literal has -> type : 1
type and an -> integer : 1
and an integer -> value : 1
an integer value -> of : 1
value of statement -> handles : 1
of statement handles -> exceptions : 1
statement handles exceptions -> in : 1
handles exceptions in -> try : 1
exceptions in try -> try : 1
in try try -> catch : 1
try try catch -> statement : 1
try catch statement -> executes : 1
catch statement executes -> and : 1
statement executes and -> if : 1
executes and if -> an : 1
and if an -> exception : 1
thrown in any -> of : 1
in any of -> the : 3
the statements within -> that : 1
statements within that -> compound : 1
within that compound -> statement : 1
that compound statement -> not : 1
compound statement not -> caught : 1
statement not caught -> and : 1
not caught and -> handled : 1
caught and handled -> by : 1
and handled by -> another : 1
handled by another -> the : 1
by another the -> handlers : 1
another the handlers -> are : 1
the handlers are -> tested : 1
handlers are tested -> to : 1
are tested to -> see : 1
tested to see -> if : 1
see if any -> of : 1
any of them -> can : 1
of them can -> handle : 1
them can handle -> the : 1
can handle the -> each : 1
handle the each -> handler : 1
the each handler -> is : 1
each handler is -> tested : 1
handler is tested -> in : 1
is tested in -> the : 1
tested in the -> first : 1
first one to -> match : 1
one to match -> the : 1
match the exception -> type : 1
exception type handles -> the : 1
type handles the -> if : 1
handles the if -> no : 1
if no handler -> the : 1
no handler the -> exception : 1
the exception propagates -> up : 1
exception propagates up -> the : 1
propagates up the -> call : 1
up the call -> stack : 1
the call stack -> to : 2
call stack to -> the : 2
stack to the -> next : 1
stack to the -> point : 1
next if there -> is : 1
is no further -> is : 1
no further is -> program : 1
further is program -> in : 1
is program in -> type : 1
program in type -> template : 1
in type template -> bool : 1
type template bool -> char : 1
template bool char -> double : 1
bool char double -> float : 1
char double float -> int : 1
double float int -> long : 1
float int long -> short : 1
int long short -> signed : 1
long short signed -> unsigned : 1
short signed unsigned -> void : 1
signed unsigned void -> enum : 1
unsigned void enum -> typename : 1
void enum typename -> typename : 1
enum typename typename -> specifiers : 1
typename typename specifiers -> are : 1
typename specifiers are -> used : 1
specifiers are used -> throughout : 1
used throughout in -> type : 1
throughout in type -> and : 1
in type and -> so : 1
type and so -> although : 1
and so although -> the : 1
so although the -> syntax : 1
although the syntax -> rules : 1
the syntax rules -> shown : 1
syntax rules shown -> here : 1
rules shown here -> are : 1
shown here are -> quite : 1
here are quite -> the : 1
are quite the -> semantic : 1
quite the semantic -> rules : 1
the semantic rules -> impose : 1
semantic rules impose -> many : 1
rules impose many -> for : 1
impose many for -> the : 1
many for the -> simple : 1
the simple syntax -> rules : 1
simple syntax rules -> permit : 1
syntax rules permit -> as : 1
rules permit as -> a : 1
permit as a -> type : 1
type as a -> see : 1
as a see -> but : 1
a see but -> that : 1
see but that -> combination : 1
but that combination -> of : 1
that combination of -> type : 1
combination of type -> specifiers : 1
type specifiers is -> not : 1
specifiers is not -> see : 1
is not see -> for : 1
details about semantics -> for : 1
about semantics for -> valid : 1
semantics for valid -> type : 1
for valid type -> keyword : 1
valid type keyword -> declares : 1
type keyword declares -> a : 1
declares a type -> declaration : 1
a type declaration -> creates : 1
type declaration creates -> a : 1
declaration creates a -> synonym : 1
creates a synonym -> for : 1
an existing it -> does : 1
existing it does -> not : 1
new type and -> unsigned : 1
type and unsigned -> int : 1
and unsigned int -> operator : 1
unsigned int operator -> runtime : 1
int operator runtime -> type : 1
operator runtime type -> identification : 1
runtime type identification -> typeid : 1
type identification typeid -> typeid : 1
identification typeid typeid -> operator : 1
typeid typeid operator -> returns : 1
typeid operator returns -> a : 1
operator returns a -> reference : 1
operator returns a -> null : 1
operator returns a -> which : 1
to a object -> that : 1
to a object -> of : 1
to a object -> they : 3
object that describes -> or : 1
object that describes -> wide : 1
that describes or -> the : 1
describes or the -> type : 1
type of if -> is : 1
an lvalue a -> of : 1
lvalue a of -> a : 1
a of a -> polymorphic : 1
a of a -> shows : 1
a polymorphic the -> of : 1
polymorphic the of -> the : 1
class is is -> not : 1
is not and -> the : 3
is not and -> is : 1
is not and -> a : 1
not and the -> of : 1
not and the -> true : 1
not and the -> allows : 1
and the of -> its : 1
the of its -> static : 1
of its static -> type : 1
static type is -> distinct : 1
is distinct type -> has : 1
distinct type has -> its : 1
type has its -> own : 1
its own associated -> but : 1
own associated but -> type : 1
associated but type -> synonyms : 1
but type synonyms -> as : 1
type synonyms as -> those : 1
synonyms as those -> created : 1
as those created -> with : 1
those created with -> have : 1
created with have -> the : 1
with have the -> same : 1
the same void -> keyword : 1
same void keyword -> introduces : 1
void keyword introduces -> a : 1
introduces a type -> typename : 1
type typename typename -> using : 1
typename typename using -> typename : 1
typename using typename -> keyword : 1
using typename keyword -> is : 1
typename keyword is -> used : 1
used in two -> different : 1
two different referring -> to : 1
different referring to -> a : 1
referring to a -> qualified : 1
qualified member of -> a : 1
compiler cannot tell -> whether : 1
whether the name -> refers : 1
the name refers -> to : 2
to a or -> use : 1
a or use -> before : 1
or use before -> the : 1
before the qualified -> name : 1
qualified name to -> tell : 1
compiler that it -> names : 1
that it names -> a : 1
it names a -> a : 1
names a a -> template : 1
a a template -> use : 1
a template use -> to : 1
template use to -> name : 1
use to name -> a : 1
to name a -> type : 1
name a type -> in : 1
type in this -> means : 1
in this means -> the : 2
this means the -> same : 1
this means the -> must : 1
this means the -> lifetime : 1
means the same -> thing : 1
means the same -> see : 1
the same thing -> as : 3
same thing as -> if : 1
same thing as -> but : 1
same thing as -> the : 1
thing as if -> return : 1
as if return -> throw : 1
throw is specifier -> unsigned : 1
is specifier unsigned -> integer : 1
specifier unsigned integer -> type : 1
unsigned integer type -> type : 1
integer type type -> specifier : 1
type type specifier -> can : 1
type specifier can -> be : 1
with any integral -> type : 1
any integral type -> to : 1
any integral type -> that : 1
integral type to -> make : 1
type to make -> the : 1
to make the -> type : 1
make the type -> unsigned : 1
the type unsigned -> integer : 1
type unsigned integer -> arithmetic : 1
unsigned integer arithmetic -> is : 1
integer arithmetic is -> always : 1
arithmetic is always -> performed : 1
is always performed -> modulo : 1
always performed modulo -> in : 1
performed modulo in -> which : 1
the value representation -> of : 1
value representation of -> the : 1
representation of the -> when : 1
representation of the -> each : 1
of the when -> used : 1
of the when -> is : 1
the when used -> means : 1
when used means -> if : 1
used means if -> keyword : 1
means if keyword -> declares : 1
declares a keyword -> declares : 1
a keyword declares -> an : 1
keyword declares an -> aggregate : 1
declares an aggregate -> similar : 1
an aggregate similar -> to : 1
aggregate similar to -> a : 1
a but the -> union : 1
a but the -> performance : 1
a but the -> type : 2
but the union -> object : 1
the union object -> can : 1
union object can -> store : 1
object can store -> only : 1
can store only -> one : 1
can store only -> pod : 1
only one member -> at : 1
one member at -> a : 1
at a the -> storage : 1
a the storage -> for : 1
the storage for -> all : 1
storage for all -> members : 1
for all members -> a : 1
for all members -> to : 1
all members a -> union : 1
members a union -> can : 1
can have member -> functions : 1
have member functions -> constructors : 1
member functions constructors -> and : 1
functions constructors and -> but : 1
constructors and but -> not : 1
but not virtual -> member : 1
not virtual member -> a : 1
virtual member a -> union : 1
member a union -> cannot : 1
a union cannot -> be : 1
union cannot be -> or : 1
be or have -> a : 1
or have a -> base : 1
have a base -> union : 1
a base union -> members : 1
base union members -> cannot : 1
union members cannot -> be : 1
cannot be static -> or : 1
be static or -> data : 1
static or data -> members : 1
or data members -> cannot : 1
members cannot have -> a : 1
virtual or virtual -> base : 1
or virtual base -> an : 1
virtual base an -> initializer : 1
base an initializer -> for : 1
for a union -> can : 1
union can initialize -> only : 1
can initialize only -> its : 1
initialize only its -> first : 1
only its first -> for : 1
its first for -> the : 1
for the syntax -> kind : 1
the syntax kind -> text : 1
syntax kind text -> struct : 1
kind text struct -> data : 1
text struct data -> kind : 1
struct data kind -> int : 1
data kind int -> double : 1
kind int double -> keyword : 1
int double keyword -> looks : 1
double keyword looks -> up : 1
keyword looks up -> names : 1
looks up names -> in : 1
names in alternate -> classes : 1
in alternate classes -> or : 1
alternate classes or -> using : 1
classes or using -> using : 1
or using using -> using : 1
using using namespace -> keyword : 1
namespace keyword starts -> a : 1
keyword starts a -> declaration : 1
starts a declaration -> or : 1
declaration or declaration -> imports : 1
or declaration imports -> a : 1
name from another -> namespace : 1
from another namespace -> into : 1
another namespace into -> the : 1
namespace into the -> current : 1
into the current -> it : 1
into the current -> which : 1
current it can -> also : 1
it can also -> be : 1
used to introduce -> a : 1
to introduce a -> name : 1
introduce a name -> into : 1
into a class -> this : 1
into a class -> class : 1
this is most -> often : 1
used to promote -> the : 1
to promote the -> access : 1
promote the access -> level : 1
level of an -> inherited : 1
an inherited member -> or : 1
an inherited member -> into : 1
inherited member or -> bring : 1
member or bring -> an : 1
or bring an -> inherited : 1
bring an inherited -> member : 1
inherited member into -> the : 1
member into the -> derived : 1
into the derived -> class : 1
derived class for -> overload : 1
class for overload -> directive : 1
for overload directive -> tells : 1
overload directive tells -> the : 1
compiler to search -> an : 1
to search an -> additional : 1
search an additional -> namespace : 1
an additional namespace -> when : 1
additional namespace when -> looking : 1
namespace when looking -> up : 1
when looking up -> unqualified : 1
up unqualified math -> const : 1
unqualified math const -> long : 1
math const long -> double : 1
double pi long -> double : 1
pi long double -> double : 1
long double double -> x : 1
long double double -> function : 16
long double double -> long : 4
long double double -> int : 2
long double double -> with : 2
long double double -> re : 1
double double x -> int : 1
double x int -> namespace : 1
x int namespace -> cout : 1
int namespace cout -> specifier : 1
namespace cout specifier -> polymorphic : 1
cout specifier polymorphic -> function : 1
specifier polymorphic function -> specifier : 1
polymorphic function specifier -> or : 1
function specifier or -> shared : 1
specifier or shared -> base : 1
or shared base -> virtual : 1
shared base virtual -> virtual : 1
virtual virtual keyword -> has : 1
virtual keyword has -> two : 1
keyword has two -> unrelated : 1
has two unrelated -> it : 1
two unrelated it -> is : 1
unrelated it is -> used : 1
used in virtual -> functions : 1
in virtual functions -> and : 1
functions and virtual -> base : 1
virtual base a -> function : 1
base a function -> can : 1
only with a -> nonstatic : 1
with a nonstatic -> member : 1
member it makes -> the : 1
it makes the -> function : 1
makes the function -> and : 1
function and class -> a : 1
function and class -> templates : 1
and class a -> virtual : 1
class a virtual -> function : 1
declared with after -> the : 1
with after the -> function : 1
the function which -> means : 1
function which means -> the : 1
means the function -> is : 1
is you cannot -> create : 1
class with an -> abstract : 1
with an abstract -> a : 1
an abstract a -> derived : 1
abstract a derived -> class : 1
must override the -> you : 1
must override the -> virtual : 1
override the you -> can : 1
can create an -> instance : 1
derived as a -> modifier : 1
as a modifier -> means : 1
as a modifier -> for : 1
a modifier means -> the : 1
modifier means the -> base : 1
means the base -> class : 1
base class subobject -> is : 1
class subobject is -> shared : 1
subobject is shared -> when : 1
is shared when -> it : 1
shared when it -> is : 1
once in an -> inheritance : 1
an inheritance shape -> void : 1
inheritance shape void -> void : 1
shape void void -> struct : 1
shape void void -> keyword : 1
void void struct -> square : 1
void struct square -> shape : 1
square shape void -> void : 1
void void keyword -> absence : 1
void keyword absence -> of : 1
keyword absence of -> type : 1
absence of type -> or : 1
type or function -> keyword : 1
or function keyword -> can : 1
function keyword can -> be : 1
type specifier to -> indicate : 1
specifier to indicate -> the : 1
indicate the absence -> of : 1
absence of a -> type : 1
type or as -> a : 1
a parameter list -> to : 1
parameter list to -> indicate : 1
list to indicate -> that : 1
to indicate that -> the : 2
to indicate that -> there : 1
indicate that the -> function : 2
takes no used -> as : 1
no used as -> a : 1
a type it -> is : 1
a function return -> type : 1
return type to -> indicate : 1
type to indicate -> that : 1
return a it -> is : 1
also used as -> a : 1
a generic pointer -> although : 1
generic pointer although -> this : 1
pointer although this -> usage : 1
although this usage -> is : 1
usage is needed -> less : 1
is needed less -> often : 1
needed less often -> in : 1
than in does -> not : 1
in does not -> require : 1
not require that -> be : 1
require that be -> used : 1
that be used -> to : 1
used to indicate -> that : 1
indicate that there -> are : 1
that there are -> no : 1
are no function -> but : 1
no function but -> it : 1
in this way -> for : 1
this way for -> compatibility : 1
way for compatibility -> with : 1
for compatibility with -> qualifier : 1
for compatibility with -> function : 1
compatibility with qualifier -> volatile : 1
with qualifier volatile -> const : 1
qualifier volatile const -> volatile : 1
volatile volatile qualifier -> can : 1
volatile qualifier can -> be : 1
qualifier can be -> used : 1
used with objects -> and : 1
with objects and -> member : 1
objects and member -> the : 1
member the qualifier -> tells : 1
the qualifier tells -> the : 1
qualifier tells the -> compiler : 1
compiler to avoid -> certain : 1
to avoid certain -> optimizations : 1
avoid certain optimizations -> because : 1
certain optimizations because -> the : 1
optimizations because the -> value : 1
because the value -> can : 1
the value can -> change : 1
the value can -> be : 1
value can change -> in : 1
can change in -> unexpected : 1
change in unexpected -> as : 1
in unexpected as -> a : 1
unexpected as a -> function : 1
a function tells -> the : 1
function tells the -> compiler : 1
compiler to treat -> as : 1
to treat as -> a : 2
treat as a -> pointer : 1
treat as a -> character : 1
member function interrupted -> type : 1
function interrupted type -> type : 1
interrupted type type -> with : 1
specifier denotes a -> wide : 1
denotes a wide -> the : 1
a wide the -> representation : 1
a wide the -> function : 1
wide the representation -> and : 1
the representation and -> interpretation : 1
representation and interpretation -> of : 1
and interpretation of -> wide : 1
and interpretation of -> the : 1
interpretation of wide -> characters : 1
of wide characters -> is : 1
of wide characters -> stored : 1
of wide characters -> from : 1
of wide characters -> successfully : 1
of wide characters -> a : 1
of wide characters -> actually : 1
of wide characters -> at : 2
of wide characters -> including : 1
wide characters is -> statement : 1
characters is statement -> unbounded : 1
is statement unbounded -> loop : 1
statement unbounded loop -> while : 1
unbounded loop while -> loop : 1
loop while loop -> tests : 1
while loop tests -> and : 1
loop tests and -> if : 1
and if is -> executes : 1
and if is -> then : 1
and if is -> not : 2
and if is -> string : 1
if is executes -> this : 1
is executes this -> repeats : 1
executes this repeats -> until : 1
this repeats until -> is : 1
repeats until is -> if : 1
until is if -> contains : 1
is if contains -> a : 1
scope as operator -> bitwise : 1
as operator bitwise -> exclusive : 1
operator bitwise exclusive -> or : 2
bitwise exclusive or -> xor : 1
bitwise exclusive or -> assignment : 1
bitwise exclusive or -> of : 1
exclusive or xor -> exclusive : 1
or xor exclusive -> operator : 1
xor exclusive operator -> requires : 1
exclusive operator requires -> integer : 1
in an operator -> is : 1
exclusive or assignment -> operator : 1
that performs exclusive -> it : 1
performs exclusive it -> is : 1
exclusive it is -> equivalent : 1
bitmask becomes chapter -> is : 1
becomes chapter is -> a : 1
chapter is a -> reference : 1
the entire runtime -> as : 1
entire runtime as -> you : 1
runtime as you -> can : 1
you can it -> is : 1
you can it -> multiple : 1
can it is -> a : 1
is a big -> to : 1
a big to -> help : 1
big to help -> you : 1
you find what -> you : 1
find what you -> each : 1
what you each -> header : 1
you each header -> in : 1
each header in -> this : 1
header in this -> chapter : 1
this chapter is -> organized : 1
chapter is organized -> in : 1
is organized in -> alphabetical : 1
organized in alphabetical -> if : 1
in alphabetical if -> you : 1
alphabetical if you -> are : 1
are not sure -> which : 1
not sure which -> header : 1
sure which header -> declares : 1
which header declares -> a : 1
declares a particular -> or : 1
a particular or -> other : 1
particular or other -> check : 1
or other check -> the : 1
other check the -> once : 1
check the once -> you : 1
the once you -> find : 1
once you find -> the : 1
find the right -> you : 1
the right you -> can : 1
right you can -> quickly : 1
you can quickly -> see : 1
can quickly see -> which : 1
quickly see which -> header : 1
see which header -> you : 1
which header you -> must : 1
header you must -> to : 1
you must to -> define : 1
must to define -> the : 1
define the identifier -> you : 1
the identifier you -> subsections : 1
identifier you subsections -> in : 1
you subsections in -> each : 1
subsections in each -> section : 1
in each section -> describe : 1
each section describe -> the : 1
section describe the -> and : 1
describe the and -> other : 1
and other entities -> declared : 1
other entities declared -> and : 1
entities declared and -> defined : 1
declared and defined -> in : 1
and defined in -> the : 1
of the subsection -> tells : 1
the subsection tells -> you : 1
subsection tells you -> what : 1
tells you what -> kind : 1
you what kind -> of : 1
what kind of -> entity : 1
kind of entity -> is : 1
of entity is -> described : 1
entity is described -> in : 1
is described in -> the : 1
is described in -> its : 1
class and so -> cross : 1
and so cross -> references : 1
so cross references -> in : 1
cross references in -> each : 1
references in each -> heading : 1
in each heading -> list : 1
each heading list -> intrasection : 1
heading list intrasection -> references : 1
list intrasection references -> followed : 1
intrasection references followed -> by : 1
references followed by -> references : 1
followed by references -> to : 1
by references to -> other : 1
references to other -> headers : 1
to other headers -> this : 1
other headers this -> and : 1
headers this and -> references : 1
this and references -> to : 1
references to keywords -> subsection : 1
to keywords subsection -> for : 1
keywords subsection for -> each : 1
subsection for each -> class : 1
for each class -> or : 1
each class or -> class : 1
template contains descriptions -> of : 1
contains descriptions of -> all : 1
of all important -> a : 1
all important a -> few : 1
important a few -> obvious : 1
a few obvious -> or : 1
few obvious or -> members : 1
obvious or members -> are : 1
or members are -> omitted : 1
members are omitted -> as : 1
are omitted as -> most : 1
omitted as most -> for : 1
as most for -> the : 1
most for the -> sake : 1
sake of entire -> standard : 1
of entire standard -> library : 1
entire standard library -> resides : 1
standard library resides -> in : 1
library resides in -> the : 1
resides in the -> except : 1
the except that -> macros : 1
the except that -> it : 1
except that macros -> reside : 1
that macros reside -> outside : 1
macros reside outside -> any : 1
reside outside any -> be : 1
outside any be -> sure : 1
any be sure -> to : 1
sure to check -> the : 1
to check the -> subsection : 1
check the subsection -> name : 1
the subsection name -> closely : 1
subsection name closely -> so : 1
name closely so -> you : 1
closely so you -> know : 1
you know whether -> an : 1
know whether an -> identifier : 1
whether an identifier -> is : 1
identifier is a -> macro : 1
is a macro -> or : 1
a macro or -> something : 1
macro or something -> to : 1
or something to -> avoid : 1
something to avoid -> cluttering : 1
to avoid cluttering -> the : 1
avoid cluttering the -> reference : 1
cluttering the reference -> the : 1
the reference the -> prefix : 1
reference the prefix -> is : 1
the prefix is -> omitted : 1
prefix is omitted -> from : 1
is omitted from -> the : 1
from the are -> complete : 1
the are complete -> and : 1
are complete and -> show : 1
complete and show -> how : 1
and show how -> each : 1
show how each -> namespace : 1
how each namespace -> prefix : 1
each namespace prefix -> is : 1
namespace prefix is -> properly : 1
prefix is properly -> headers : 1
is properly headers -> are : 1
properly headers are -> taken : 1
headers are taken -> from : 1
taken from the -> c : 1
taken from the -> entire : 1
taken from the -> output : 1
for the c -> standard : 3
c standard has -> its : 1
c standard has -> an : 1
standard has its -> equivalent : 1
has its equivalent -> in : 1
its equivalent in -> the : 1
equivalent in the -> version : 1
in the version -> declares : 1
the version declares -> all : 1
version declares all -> the : 1
declares all the -> c : 1
all the c -> names : 1
the c names -> than : 1
c names than -> in : 1
names than in -> the : 1
namespace but reserves -> the : 1
but reserves the -> same : 1
reserves the same -> names : 1
same names in -> the : 1
you must not -> declare : 1
you must not -> change : 8
you must not -> call : 1
not declare your -> own : 1
declare your own -> names : 1
your own names -> that : 1
own names that -> conflict : 1
names that conflict -> with : 1
that conflict with -> those : 1
conflict with those -> of : 1
with those of -> the : 1
the c c -> header : 1
c header can -> be : 1
header can be -> used : 1
used with its -> c : 1
with its c -> in : 1
its c in -> which : 1
c in which -> case : 1
case the declarations -> in : 1
the header are -> explicitly : 1
header are explicitly -> introduced : 1
are explicitly introduced -> into : 1
explicitly introduced into -> the : 1
the global for -> declares : 1
global for declares -> many : 1
for declares many -> other : 1
declares many other -> and : 1
many other and -> does : 1
other and does -> the : 1
and does the -> but : 1
does the but -> adds : 1
the but adds -> to : 1
but adds to -> bring : 1
adds to bring -> the : 1
to bring the -> name : 1
bring the name -> into : 1
the global this -> use : 1
global this use -> of : 1
the c headers -> is : 1
the c headers -> and : 1
c headers is -> syntax : 1
headers is syntax -> description : 1
is syntax description -> for : 1
syntax description for -> most : 1
description for most -> macros : 1
for most macros -> shows : 1
most macros shows -> the : 1
macros shows the -> macro : 1
shows the macro -> name : 1
macro name as -> an : 1
name as an -> object : 1
or function these -> descriptions : 1
function these descriptions -> tell : 1
these descriptions tell -> you : 1
descriptions tell you -> the : 1
tell you the -> type : 1
you the type -> or : 1
the type or -> expected : 1
type or expected -> they : 1
or expected they -> do : 1
expected they do -> not : 1
do not reflect -> the : 1
not reflect the -> for : 1
reflect the for -> macros : 1
the for macros -> that : 1
for macros that -> expand : 1
macros that expand -> to : 1
that expand to -> read : 1
expand to read -> the : 1
read the textual -> description : 1
the textual description -> to : 1
textual description to -> learn : 1
description to learn -> whether : 1
to learn whether -> the : 1
to learn whether -> exception : 1
learn whether the -> value : 1
whether the value -> is : 1
a an overview -> of : 1
standard see and -> presents : 1
see and presents -> the : 1
and presents the -> portions : 1
presents the portions -> of : 1
the portions of -> the : 1
portions of the -> and : 1
and and discusses -> and : 1
and discusses and -> permits : 1
discusses and permits -> two : 1
and permits two -> kinds : 1
permits two kinds -> of : 1
two kinds of -> library : 1
kinds of library -> and : 1
of library and -> the : 1
library and the -> traditional : 1
and the traditional -> desktop : 1
the traditional desktop -> computer : 1
traditional desktop computer -> is : 1
desktop computer is -> a : 1
computer is a -> hosted : 1
is a hosted -> a : 1
a hosted a -> hosted : 1
hosted a hosted -> implementation : 1
a hosted implementation -> must : 1
hosted implementation must -> implement : 1
implementation must implement -> the : 1
must implement the -> entire : 1
implement the entire -> with : 1
the entire with -> no : 1
entire with no -> freestanding : 1
with no freestanding -> implementation : 1
no freestanding implementation -> is : 1
freestanding implementation is -> free : 1
free to implement -> a : 1
implement a subset -> of : 1
standard the subset -> must : 1
the subset must -> provide : 1
subset must provide -> at : 1
must provide at -> least : 1
provide at least -> the : 1
least the following -> and : 1
following and can -> optionally : 1
and can optionally -> provide : 1
can optionally provide -> header : 1
optionally provide header -> declares : 1
provide header declares -> the : 1
declares the generic -> algorithm : 1
the generic algorithm -> function : 1
the generic algorithm -> requires : 1
generic algorithm function -> templates : 1
algorithm function templates -> for : 1
function templates for -> operating : 1
function templates for -> the : 1
function templates for -> internationalization : 1
function templates for -> numerical : 1
templates for operating -> on : 1
for operating on -> iterators : 1
for operating on -> arrays : 1
iterators and other -> refer : 1
and other refer -> to : 1
other refer to -> and : 1
to and for -> more : 2
to and for -> values : 1
to and for -> general : 3
to and for -> a : 1
about using and -> writing : 1
using and writing -> generic : 1
and writing generic -> algorithms : 1
writing generic algorithms -> and : 1
generic algorithms and -> about : 1
algorithms and about -> the : 1
and about the -> iterators : 1
about the iterators -> they : 1
the iterators they -> see : 1
iterators they see -> for : 1
they see for -> a : 1
discussion of iterator -> you : 1
of iterator you -> are : 1
iterator you are -> at : 1
you are at -> all : 1
are at all -> confused : 1
at all confused -> by : 1
all confused by -> the : 1
confused by the -> removal : 1
by the removal -> algorithms : 1
the removal algorithms -> as : 1
removal algorithms as -> and : 1
as and be -> sure : 1
sure to read -> and : 1
read and section -> uses : 1
and section uses -> a : 1
section uses a -> number : 1
uses a number -> of : 1
number of abbreviations -> and : 1
of abbreviations and -> each : 1
abbreviations and each -> algorithm : 1
each algorithm is -> described : 1
algorithm is described -> using : 1
is described using -> plain : 1
described using plain -> a : 1
using plain a -> more : 1
plain a more -> mathematical : 1
a more mathematical -> description : 1
more mathematical description -> of : 1
mathematical description of -> the : 1
the which tends -> to : 1
which tends to -> be : 1
tends to be -> harder : 1
to be harder -> to : 1
be harder to -> is : 1
harder to is -> given : 1
to is given -> in : 1
is given in -> a : 1
given in a -> names : 1
in a names -> of : 1
a names of -> the : 1
tell you which -> category : 1
you which category -> of : 1
which category of -> iterator : 1
category of iterator -> is : 1
of iterator is -> the : 1
iterator is the -> iterator : 1
is the iterator -> category : 1
is the iterator -> points : 2
is the iterator -> pointing : 1
iterator category is -> the : 1
category is the -> minimal : 1
is the minimal -> functionality : 1
the minimal functionality -> so : 1
minimal functionality so -> you : 1
functionality so you -> for : 1
so you for -> use : 1
you for use -> a : 1
for use a -> random : 1
use a random -> access : 1
access iterator where -> at : 1
iterator where at -> least : 1
where at least -> a : 1
at least a -> forward : 1
at least a -> literal : 1
least a forward -> iterator : 1
iterator is and -> for : 1
iterator is and -> returns : 1
is and for -> more : 1
is and for -> in : 1
information on iterators -> and : 1
iterators and iterator -> to : 1
and iterator to -> keep : 1
iterator to keep -> the : 1
keep the syntax -> summaries : 1
syntax summaries short -> and : 1
summaries short and -> the : 1
short and the -> iterator : 1
and the iterator -> categories : 1
the iterator categories -> are : 1
iterator categories are -> as : 1
categories are as -> shown : 1
shown in parameter -> names : 1
in parameter names -> for : 1
names for iterator -> parameter : 2
names for iterator -> solid : 1
for iterator parameter -> names : 2
iterator parameter names -> for : 2
for iterator solid -> solid : 1
iterator solid solid -> solid : 1
solid solid access -> template : 1
solid access template -> parameter : 1
access template parameter -> names : 1
names are chosen -> to : 1
are chosen to -> be : 1
chosen to be -> for : 1
to be for -> any : 1
be for any -> name : 1
be for any -> this : 1
for any name -> that : 1
any name that -> ends : 1
name that ends -> in : 1
that ends in -> is : 1
ends in is -> a : 1
boolean result can -> be : 1
can be type -> or : 1
be type or -> any : 1
type or any -> other : 1
or any other -> type : 1
or any other -> class : 1
or any other -> header : 1
or any other -> value : 1
any other type -> that : 1
other type that -> is : 1
convertible to or -> a : 1
or a boolean -> functional : 1
a boolean functional -> object : 1
boolean functional object -> object : 1
functional object object -> that : 1
object object that -> has : 1
call operator that -> returns : 1
operator that returns -> a : 1
a boolean number -> of : 1
boolean number of -> algorithms : 1
of algorithms require -> sorted : 1
algorithms require sorted -> ranges : 1
require sorted ranges -> or : 1
sorted ranges or -> otherwise : 1
ranges or otherwise -> use : 1
or otherwise use -> a : 1
otherwise use a -> comparison : 1
use a comparison -> function : 1
comparison function to -> test : 1
function to test -> the : 1
test the the -> library : 1
the library overloads -> each : 1
library overloads each -> the : 1
overloads each the -> first : 1
each the first -> function : 1
the first function -> uses : 1
the first function -> returns : 1
first function uses -> and : 1
function uses and -> the : 1
uses and the -> second : 1
the second accepts -> a : 1
second accepts a -> function : 1
accepts a function -> pointer : 1
function object to -> perform : 1
function object to -> call : 2
object to perform -> the : 1
perform the the -> comparison : 1
the the comparison -> function : 1
comparison function takes -> two : 1
function takes two -> arguments : 1
function takes two -> pointers : 1
a boolean in -> the : 1
boolean in the -> the : 1
the the relationship -> signifies : 1
the relationship signifies -> or : 1
relationship signifies or -> the : 1
signifies or the -> depending : 1
or the depending -> on : 1
the depending on -> the : 1
the depending on -> or : 1
on the version -> of : 1
the version of -> the : 11
the version of -> is : 1
the version of -> behaves : 1
the version of -> or : 1
of the algorithm -> you : 1
the algorithm you -> are : 1
algorithm you are -> if : 1
you are if -> you : 1
you overload or -> provide : 1
overload or provide -> your : 1
or provide your -> own : 1
provide your own -> comparison : 1
provide your own -> implementation : 2
your own comparison -> make : 1
own comparison make -> sure : 1
comparison make sure -> it : 1
sure it correctly -> implements : 1
it correctly implements -> a : 1
correctly implements a -> in : 1
implements a in -> must : 1
a in must -> be : 1
must be for -> any : 1
for any this -> the : 1
any this the -> following : 1
this the following -> conventions : 1
the following conventions -> are : 2
following conventions are -> are : 1
following conventions are -> used : 1
conventions are are -> usually : 1
are are usually -> used : 1
are usually used -> in : 1
usually used in -> ranges : 1
used in ranges -> that : 1
in ranges that -> represent : 1
ranges that represent -> all : 1
that represent all -> the : 1
represent all the -> elements : 1
range or a -> range : 1
range or a -> domain : 2
or a range -> is : 1
a range is -> written : 1
a range is -> often : 1
range is written -> using : 1
range is written -> as : 1
is written using -> standard : 1
is written using -> the : 1
written using standard -> mathematical : 1
using standard mathematical -> a : 1
standard mathematical a -> square : 1
mathematical a square -> bracket : 1
a square bracket -> denotes : 1
square bracket denotes -> an : 2
bracket denotes an -> inclusive : 2
denotes an inclusive -> endpoint : 2
and a parenthesis -> denotes : 1
a parenthesis denotes -> an : 1
parenthesis denotes an -> exclusive : 2
denotes an exclusive -> endpoint : 2
that starts at -> including : 1
that starts at -> you : 1
that starts at -> only : 2
that starts at -> values : 1
that starts at -> elements : 1
that starts at -> in : 2
that starts at -> followed : 1
that starts at -> has : 1
that starts at -> the : 2
that starts at -> removing : 1
that starts at -> and : 1
that starts at -> position : 1
starts at including -> and : 1
at including and -> ends : 1
including and ends -> at : 1
and ends at -> excluding : 1
ends at excluding -> and : 1
at excluding and -> also : 1
excluding and also -> discusses : 1
and also discusses -> this : 1
also discusses this -> aspect : 1
discusses this aspect -> of : 1
this aspect of -> expressions : 1
aspect of expressions -> that : 1
of expressions that -> involve : 1
expressions that involve -> iterators : 1
that involve iterators -> work : 1
involve iterators work -> as : 1
iterators work as -> though : 1
work as though -> each : 1
as though each -> iterator : 1
though each iterator -> were : 1
each iterator were -> a : 1
iterator were a -> random : 1
were a random -> access : 1
random access even -> if : 1
access even if -> the : 1
the iterator is -> from : 1
the iterator is -> advanced : 4
the iterator is -> bidirectional : 1
the iterator is -> random : 1
the iterator is -> assumed : 1
iterator is from -> a : 1
is from a -> different : 1
different for for -> an : 1
for for an -> input : 1
for an input -> iterator : 1
for an input -> the : 4
iterator is not -> allowed : 1
allowed in but -> in : 1
in but in -> this : 1
but in this -> it : 1
this it means -> the : 1
means the input -> iterator : 1
the input iterator -> that : 1
input iterator that -> points : 1
to one position -> before : 9
to one position -> past : 5
to one position -> the : 1
one position before -> names : 1
one position before -> the : 8
position before names -> used : 1
before names used -> for : 1
names used for -> input : 1
used for input -> ranges : 1
for input ranges -> are : 1
input ranges are -> typically : 1
ranges are typically -> and : 1
are typically and -> in : 1
typically and in -> which : 1
typically and in -> it : 2
typically and in -> european : 1
and in which -> is : 1
and in which -> the : 3
points to first -> the : 1
to first the -> element : 1
first the element -> of : 1
the element of -> the : 1
the the range -> is : 1
is written as -> iterator : 1
is written as -> a : 2
written as iterator -> that : 1
as iterator that -> advances : 1
iterator that advances -> from : 1
that advances from -> to : 1
advances from to -> is : 1
to is typically -> called : 1
is typically called -> iterators : 1
typically called iterators -> are : 1
called iterators are -> typically : 1
iterators are typically -> named : 1
are typically named -> most : 1
typically named most -> algorithms : 1
named most algorithms -> specify : 1
most algorithms specify -> only : 1
algorithms specify only -> the : 1
specify only the -> start : 1
only the start -> of : 1
the output it -> is : 2
output it is -> your : 1
output it is -> equivalent : 1
output range has -> room : 1
range has room -> to : 1
has room to -> accommodate : 1
room to accommodate -> the : 1
accommodate the entire -> the : 1
the entire the -> behavior : 1
the entire the -> performance : 1
entire the behavior -> is : 1
output range each -> conventional : 1
range each conventional -> mathematical : 1
each conventional mathematical -> notation : 1
conventional mathematical notation -> is : 1
mathematical notation is -> used : 1
notation is used -> with : 1
is used with -> some : 1
used with some -> aspects : 1
with some aspects -> of : 1
aspects of such -> as : 1
of such as -> which : 1
of such as -> when : 2
of such as -> for : 1
of such as -> length : 1
of such as -> or : 1
such as which -> dereferences : 1
such as which -> calls : 9
as which dereferences -> an : 1
which dereferences an -> a : 1
dereferences an a -> single : 1
an a single -> equal : 1
a single equal -> sign : 1
single equal sign -> means : 1
equal sign means -> and : 1
equal sign means -> comparison : 1
sign means and -> a : 1
means and a -> double : 1
and a double -> equal : 1
a double equal -> sign : 1
double equal sign -> means : 1
sign means comparison -> for : 1
means comparison for -> the : 1
conventions are used -> for : 1
for and and -> denote : 1
and and denote -> the : 1
and denote the -> values : 1
denote the values -> that : 1
values that the -> iterators : 1
that the iterators -> point : 1
the iterators point -> which : 1
iterators point which -> are : 1
point which are -> usually : 1
which are usually -> of : 1
are usually of -> types : 1
usually of types -> that : 1
types that can -> be : 1
can be assigned -> to : 1
be assigned to -> or : 1
assigned to or -> from : 1
or from a -> dereferenced : 1
or from a -> character : 5
from a dereferenced -> iterator : 1
a dereferenced iterator -> function : 1
dereferenced iterator function -> function : 1
iterator function function -> template : 1
function function template -> searches : 8
function function template -> copies : 10
function function template -> counts : 3
function function template -> tests : 2
function function template -> finds : 6
function function template -> fills : 6
function function template -> calls : 1
function function template -> merges : 2
function function template -> swaps : 8
function function template -> compares : 63
function function template -> reorders : 5
function function template -> returns : 6
function function template -> generates : 2
function function template -> sorts : 5
function function template -> partitions : 2
function function template -> removes : 2
function function template -> adds : 1
function function template -> replaces : 2
function function template -> reverses : 1
function function template -> rotates : 2
function function template -> computes : 38
function function template -> performs : 17
function function template -> reads : 4
function function template -> writes : 3
function function template -> persforms : 1
function function template -> checks : 2
function function template -> converts : 3
function function template -> creates : 8
function function template -> sets : 1
function function template -> input : 2
function function template -> moves : 1
function function template -> test : 1
function function template -> determines : 11
function function template -> retrieves : 1
function function template -> allocates : 1
function function template -> frees : 1
function function template -> compute : 1
function function template -> manipulator : 3
function function template -> character : 1
function function template -> concatenates : 1
function function template -> constructs : 1
function template searches -> for : 5
function template searches -> using : 1
function template searches -> the : 1
function template searches -> a : 2
template searches for -> a : 2
template searches for -> the : 1
template searches for -> any : 1
template searches for -> when : 1
for a pair -> of : 1
for a pair -> whose : 2
a pair of -> equal : 1
a pair of -> iterators : 2
a pair of -> the : 2
a pair of -> related : 2
a pair of -> see : 1
pair of equal -> fwditer : 1
of equal fwditer -> fwditer : 1
equal fwditer fwditer -> typename : 1
fwditer fwditer typename -> fwditer : 4
fwditer typename fwditer -> fwditer : 4
fwditer fwditer binarypredicate -> function : 2
fwditer binarypredicate function -> template : 2
binarypredicate function template -> looks : 1
binarypredicate function template -> returns : 1
binarypredicate function template -> finds : 3
binarypredicate function template -> searches : 1
binarypredicate function template -> compares : 1
binarypredicate function template -> repetitions : 1
binarypredicate function template -> copies : 1
function template looks -> for : 1
template looks for -> the : 1
looks for the -> first : 1
the first set -> of : 1
first set of -> adjacent : 1
set of adjacent -> items : 1
of adjacent items -> in : 1
adjacent items in -> the : 1
the range that -> are : 3
the range that -> will : 1
the range that -> starts : 11
the range that -> does : 1
range that are -> equal : 2
range that are -> used : 1
equal or in -> which : 1
which is true -> items : 1
which is true -> with : 1
is true items -> are : 1
true items are -> when : 1
items are when -> their : 1
are when their -> iterators : 1
when their iterators -> differ : 1
their iterators differ -> by : 1
iterators differ by -> one : 1
differ by one -> return : 1
by one return -> value : 2
one return value -> is : 2
first of the -> adjacent : 1
of the adjacent -> or : 1
the adjacent or -> if : 1
adjacent or if -> no : 1
no matching items -> are : 1
matching items are -> see : 1
items are see -> to : 1
are see to -> find : 1
see to find -> two : 1
to find two -> equivalent : 3
find two equivalent -> for : 1
find two equivalent -> to : 1
find two equivalent -> function : 1
two equivalent for -> an : 1
equivalent for an -> to : 1
for an to -> find : 1
an to find -> two : 1
two equivalent to -> find : 1
equivalent to find -> two : 1
two equivalent function -> template : 1
equivalent function template -> returns : 1
function template returns -> in : 10
function template returns -> if : 6
function template returns -> the : 8
function template returns -> an : 3
function template returns -> is : 3
function template returns -> imaginary : 1
function template returns -> real : 1
function template returns -> a : 2
template returns in -> which : 10
in which and -> is : 1
in which and -> computes : 1
which and is -> the : 1
the smallest value -> such : 3
the smallest value -> in : 7
the smallest value -> greater : 3
the smallest value -> that : 1
smallest value such -> that : 3
value such that -> and : 1
value such that -> if : 1
value such that -> is : 1
such that and -> if : 1
such that and -> it : 1
such that and -> for : 2
that and if -> there : 1
and if there -> is : 1
no such is -> the : 1
no such is -> at : 3
no such is -> is : 1
such is the -> standard : 1
standard is but -> any : 1
is but any -> reasonable : 1
but any reasonable -> implementation : 1
any reasonable implementation -> calls : 1
reasonable implementation calls -> the : 1
implementation calls the -> predicate : 1
calls the predicate -> or : 1
the predicate or -> exactly : 1
predicate or exactly -> function : 1
or exactly function -> function : 1
exactly function function -> function : 6
exactly function function -> in : 1
exactly function function -> template : 2
template searches using -> a : 1
searches using a -> binary : 1
a binary typename -> bool : 1
binary typename bool -> fwditer : 1
typename bool fwditer -> const : 2
bool fwditer const -> typename : 1
bool fwditer const -> compare : 1
fwditer const typename -> typename : 4
typename typename bool -> fwditer : 1
typename typename bool -> binarypredicate : 1
typename typename bool -> compare : 2
typename typename bool -> bool : 1
typename typename bool -> const : 13
fwditer const compare -> function : 4
const compare function -> template : 6
compare function template -> uses : 1
compare function template -> determines : 3
compare function template -> returns : 6
compare function template -> checks : 1
compare function template -> merges : 4
compare function template -> reorders : 2
compare function template -> rearranges : 2
compare function template -> sorts : 4
compare function template -> copies : 4
compare function template -> adds : 1
function template uses -> a : 1
template uses a -> binary : 1
uses a binary -> search : 2
search to test -> whether : 1
test whether is -> in : 1
test whether is -> a : 1
whether is in -> the : 1
the range it -> returns : 8
range it returns -> upon : 1
range it returns -> a : 1
range it returns -> if : 5
range it returns -> an : 2
it returns upon -> success : 2
returns upon success -> and : 1
returns upon success -> or : 1
upon success and -> if : 1
success and if -> the : 1
not the contents -> of : 1
the range must -> be : 1
the range must -> not : 1
range must be -> sorted : 1
range must be -> at : 1
must be sorted -> in : 1
be sorted in -> ascending : 1
sorted in ascending -> first : 1
in ascending first -> version : 1
ascending first version -> compares : 1
first version compares -> items : 8
version compares items -> using : 8
compares items using -> the : 9
items using the -> the : 9
using the the -> second : 22
using the the -> time : 1
using the the -> date : 1
the second version -> uses : 8
the second version -> erases : 4
the second version -> calls : 4
the second version -> inserts : 1
the second version -> returns : 1
second version uses -> to : 8
version uses to -> test : 8
uses to test -> whether : 8
test whether for -> in : 3
whether for in -> function : 1
whether for in -> is : 2
for in function -> template : 7
for in function -> writes : 1
for in function -> reads : 1
for in function -> gets : 1
in function template -> returns : 5
in function template -> assigns : 2
template returns if -> there : 2
template returns if -> two : 1
template returns if -> for : 1
template returns if -> the : 1
template returns if -> either : 1
returns if there -> is : 5
is an in -> such : 3
an in such -> that : 3
in such that -> and : 1
in such that -> for : 5
in such that -> is : 3
that and it -> returns : 1
and it returns -> if : 1
and it returns -> an : 1
number of comparisons -> is : 8
of comparisons is -> at : 4
of comparisons is -> function : 4
comparisons is at -> most : 4
is at most -> although : 4
is at most -> comparisons : 9
is at most -> swaps : 2
is at most -> log : 2
is at most -> function : 1
at most although -> the : 4
most although the -> iterator : 4
although the iterator -> can : 4
the iterator can -> be : 6
be a forward -> the : 4
a forward the -> best : 4
forward the best -> performance : 4
the best performance -> is : 4
best performance is -> obtained : 4
performance is obtained -> with : 4
is obtained with -> a : 4
obtained with a -> random : 4
with a random -> access : 4
random access with -> a : 4
access with a -> forward : 4
with a forward -> or : 4
a forward or -> bidirectional : 4
forward or bidirectional -> the : 4
or bidirectional the -> iterator : 4
bidirectional the iterator -> is : 4
iterator is advanced -> a : 4
is advanced a -> linear : 4
advanced a linear -> number : 4
a linear number -> of : 4
linear number of -> even : 4
of even though -> the : 4
though the number -> of : 4
comparisons is function -> function : 4
is function function -> function : 6
is function function -> class : 1
is function function -> template : 17
is function function -> in : 1
function template copies -> every : 1
function template copies -> items : 5
function template copies -> a : 3
function template copies -> and : 1
function template copies -> the : 1
function template copies -> elements : 5
function template copies -> values : 2
function template copies -> replacing : 1
function template copies -> one : 1
function template copies -> unique : 1
function template copies -> into : 1
template copies every -> item : 1
copies every item -> in : 1
in a typename -> outiter : 4
in a typename -> function : 1
in a typename -> typename : 2
in a typename -> t : 1
a typename outiter -> initer : 3
a typename outiter -> fwditer : 1
initer outiter function -> template : 1
outiter function template -> copies : 3
template copies items -> from : 4
template copies items -> in : 1
copies items from -> to : 2
copies items from -> the : 2
items from to -> the : 4
from to the -> output : 2
from to the -> range : 3
from to the -> memory : 2
from to the -> stream : 1
from to the -> the : 1
from to the -> new : 4
from to the -> data : 1
from to the -> arrays : 2
the output iterator -> starting : 1
output iterator starting -> at : 1
iterator starting at -> you : 1
starting at you -> must : 1
you must ensure -> that : 5
must ensure that -> the : 3
must ensure that -> is : 1
must ensure that -> points : 6
must ensure that -> does : 1
the output sequence -> has : 1
the output sequence -> is : 1
output sequence has -> enough : 1
sequence has enough -> room : 1
has enough room -> for : 2
enough room for -> the : 2
room for the -> return : 1
room for the -> entire : 1
of the iterator -> after : 1
the iterator after -> copying : 1
iterator after copying -> all : 1
after copying all -> the : 1
all the as -> shown : 1
a a a -> iterator : 1
a a a -> function : 1
a a a -> the : 1
a a iterator -> cannot : 1
a iterator cannot -> be : 1
iterator cannot be -> in : 2
cannot be in -> the : 2
the source range -> but : 2
the source range -> is : 2
source range but -> other : 2
range but other -> parts : 2
but other parts -> of : 2
the destination range -> can : 2
the destination range -> by : 1
destination range can -> overlap : 2
range can overlap -> with : 2
can overlap with -> the : 2
overlap with the -> generate : 1
overlap with the -> function : 1
with the generate -> to : 1
the generate to -> fill : 1
generate to fill -> a : 4
to fill a -> vector : 4
to fill a -> sequence : 1
fill a vector -> with : 4
vector with function -> template : 1
with function template -> assigns : 2
function template assigns -> for : 14
function template assigns -> to : 1
function template assigns -> in : 4
function template assigns -> a : 1
function template assigns -> partial : 1
template assigns for -> all : 12
template assigns for -> in : 2
assigns for all -> in : 14
for all in -> the : 6
for all in -> it : 2
for all in -> and : 3
for all in -> is : 15
for all in -> or : 1
for all in -> if : 2
for all in -> for : 1
for all in -> in : 4
for all in -> second : 1
range is exactly -> assignments : 4
range is exactly -> swaps : 1
is exactly assignments -> are : 6
exactly assignments are -> function : 6
assignments are function -> function : 6
are function function -> function : 41
are function function -> in : 1
template copies a -> starting : 1
template copies a -> replacing : 1
template copies a -> range : 1
copies a starting -> at : 1
a starting at -> the : 1
at the typename -> function : 1
the typename function -> template : 1
typename function template -> does : 1
typename function template -> swaps : 1
typename function template -> takes : 2
typename function template -> creates : 1
function template does -> the : 1
function template does -> not : 1
template does the -> same : 1
does the same -> thing : 2
thing as but -> it : 1
as but it -> works : 1
but it works -> starting : 1
it works starting -> at : 1
works starting at -> the : 1
at the element -> before : 1
the element before -> and : 1
element before and -> copying : 1
before and copying -> elements : 1
and copying elements -> toward : 1
copying elements toward -> the : 1
elements toward the -> iterator : 1
toward the iterator -> must : 1
the iterator must -> point : 1
iterator must point -> to : 1
the destination and -> is : 1
destination and is -> decremented : 1
and is decremented -> before : 1
is decremented before -> copying : 1
decremented before copying -> each : 1
before copying each -> the : 1
copying each the -> return : 1
each the return -> value : 1
a range a -> range : 2
range a range -> a : 1
range a range -> iterator : 1
a range iterator -> cannot : 1
range iterator cannot -> be : 1
function template counts -> the : 2
function template counts -> elements : 1
template counts the -> occurrences : 1
template counts the -> number : 1
counts the occurrences -> of : 1
the occurrences of -> a : 1
occurrences of a -> typename : 2
occurrences of a -> value : 1
typename typename initer -> const : 1
typename typename initer -> predicate : 1
typename initer const -> function : 1
initer const function -> template : 2
const function template -> returns : 2
const function template -> fills : 1
const function template -> assigns : 1
const function template -> items : 1
const function template -> copies : 3
const function template -> replaces : 2
const function template -> obtains : 1
const function template -> always : 2
const function template -> is : 2
template returns the -> number : 2
template returns the -> equivalent : 1
template returns the -> maximum : 1
template returns the -> larger : 1
template returns the -> minimum : 1
template returns the -> smaller : 1
template returns the -> pair : 1
equal to is -> exactly : 1
equal to is -> set : 2
to is exactly -> comparisons : 1
is exactly comparisons -> are : 15
exactly comparisons are -> function : 13
exactly comparisons are -> the : 1
exactly comparisons are -> all : 1
comparisons are function -> function : 29
of times a -> predicate : 1
times a predicate -> returns : 1
returns typename typename -> initer : 1
returns typename typename -> outiter : 1
returns typename typename -> const : 1
typename initer predicate -> function : 1
initer predicate function -> template : 2
predicate function template -> returns : 1
predicate function template -> to : 1
predicate function template -> swaps : 2
predicate function template -> copies : 1
predicate function template -> items : 1
range for which -> returns : 1
for which returns -> is : 1
for which returns -> false : 2
for which returns -> see : 1
for which returns -> true : 1
for which returns -> the : 1
which returns is -> is : 1
returns is is -> called : 2
returns is is -> no : 1
is is called -> exactly : 9
is is called -> at : 1
is is called -> for : 1
is called exactly -> function : 7
is called exactly -> and : 1
is called exactly -> in : 1
is called exactly -> a : 1
is called exactly -> header : 1
called exactly function -> function : 8
function template tests -> whether : 2
function template tests -> sorted : 1
template tests whether -> ranges : 1
template tests whether -> a : 1
tests whether ranges -> have : 1
whether ranges have -> same : 1
ranges have same -> typename : 1
have same typename -> bool : 1
same typename bool -> typename : 1
typename bool typename -> typename : 3
bool typename typename -> bool : 3
typename bool binarypredicate -> function : 1
bool binarypredicate function -> template : 1
returns if two -> ranges : 1
if two ranges -> contain : 1
two ranges contain -> the : 1
ranges contain the -> same : 1
contain the same -> elements : 1
same elements in -> the : 1
same the first -> range : 1
the first range -> is : 1
the first range -> coming : 1
the first range -> come : 1
first range is -> and : 1
range is and -> the : 1
the second range -> has : 1
second range has -> the : 1
range has the -> same : 1
number of starting -> at : 1
number of starting -> from : 2
of starting at -> the : 1
of starting at -> if : 1
of starting at -> and : 1
at the ranges -> can : 1
the ranges can -> first : 1
ranges can first -> form : 1
can first form -> compares : 1
first form compares -> items : 8
first form compares -> values : 13
form compares items -> using : 1
form compares items -> with : 7
second form calls -> function : 7
second form calls -> the : 3
second form calls -> a : 2
second form calls -> and : 3
second form calls -> for : 3
second form calls -> two : 2
second form calls -> data : 1
second form calls -> is : 2
second form calls -> to : 1
second form calls -> unique : 1
form calls function -> template : 5
form calls function -> function : 2
calls function template -> returns : 4
calls function template -> assigns : 1
returns if for -> all : 1
if for all -> in : 1
at most comparisons -> are : 13
most comparisons are -> function : 13
function template finds -> all : 1
function template finds -> the : 5
function template finds -> lower : 1
function template finds -> first : 1
function template finds -> upper : 1
template finds all -> occurrences : 1
finds all occurrences -> of : 1
range using binary -> typename : 3
using binary typename -> fwditer : 3
binary typename fwditer -> const : 1
binary typename fwditer -> fwditer : 2
typename fwditer const -> typename : 1
typename fwditer const -> compare : 1
typename typename fwditer -> const : 1
typename typename fwditer -> fwditer : 4
function template determines -> where : 3
function template determines -> whether : 11
template determines where -> belongs : 3
determines where belongs -> in : 3
where belongs in -> the : 3
belongs in the -> sorted : 3
in the sorted -> range : 6
in the sorted -> sequence : 2
the sorted range -> it : 1
the sorted range -> the : 2
the sorted range -> to : 2
the sorted range -> are : 3
sorted range it -> returns : 1
returns a pair -> of : 2
pair of iterators -> that : 2
of iterators that -> specify : 1
of iterators that -> identifies : 1
iterators that specify -> the : 1
that specify the -> start : 1
specify the start -> and : 1
the start and -> one : 1
start and one -> past : 1
and one past -> the : 1
range of items -> that : 1
items that are -> equivalent : 1
items that are -> equal : 1
items that are -> not : 5
items that are -> already : 2
that are equivalent -> to : 4
to or both -> iterators : 1
or both iterators -> in : 1
both iterators in -> the : 1
iterators in the -> pair : 1
in the pair -> point : 1
the pair point -> to : 1
pair point to -> where : 1
point to where -> you : 1
to where you -> can : 1
where you can -> insert : 3
where you can -> see : 1
can insert and -> preserve : 3
insert and preserve -> the : 3
and preserve the -> sorted : 4
preserve the sorted -> nature : 3
preserve the sorted -> you : 1
the sorted nature -> of : 3
sorted nature of -> the : 3
form compares values -> using : 13
compares values using -> the : 13
values using the -> the : 13
values using the -> rules : 1
calls the limits -> of : 3
limits of where -> the : 5
of where the -> value : 5
where the value -> belongs : 5
the value belongs -> in : 5
value belongs in -> a : 5
a sorted shows -> how : 2
a sorted shows -> an : 1
sorted shows how -> bounds : 1
sorted shows how -> two : 1
sorted shows how -> to : 1
shows how bounds -> are : 1
how bounds are -> found : 1
bounds are found -> with : 1
are found with -> the : 1
found with the -> value : 1
value the result -> of : 1
result of calling -> is : 1
result of calling -> generate : 1
result of calling -> or : 1
result of calling -> if : 1
result of calling -> for : 1
of calling is -> note : 1
calling is note -> that : 1
that for values -> in : 1
for values in -> the : 4
the range the -> upper : 3
the range the -> lower : 1
the range the -> remaining : 1
the range the -> number : 1
the range the -> return : 2
the range the -> sort : 1
the range the -> first : 3
the range the -> last : 2
the range the -> highest : 1
range the upper -> and : 2
range the upper -> bound : 1
and lower bound -> are : 2
lower bound are -> both : 2
bound are both -> equal : 2
are both equal -> to : 2
both equal to -> and : 1
both equal to -> the : 1
equal to and -> for : 1
equal to and -> the : 1
equal to and -> returns : 1
equal to and -> saves : 1
equal to and -> not : 1
and for values -> in : 2
and for values -> that : 1
to the limits -> of : 1
sorted the limits -> of : 1
a sorted for -> in : 1
sorted for in -> function : 1
sorted for in -> and : 1
returns the equivalent -> of : 1
equivalent of calling -> the : 1
calling the although -> the : 1
the although the -> actual : 1
although the actual -> implementation : 1
the actual implementation -> might : 2
the actual implementation -> in : 1
actual implementation might -> be : 2
implementation might be -> is : 1
implementation might be -> provided : 1
might be is -> the : 1
be is the -> number : 1
function function in -> function : 11
function function in -> type : 1
function function in -> keyword : 1
function function in -> in : 2
function in function -> function : 21
function in function -> computes : 3
function in function -> calls : 1
function in function -> determines : 1
in function function -> template : 53
function template fills -> a : 4
function template fills -> the : 2
function template fills -> uninitialized : 2
template fills a -> range : 2
template fills a -> counted : 2
fills a range -> with : 2
range with copies -> of : 2
typename void fwditer -> const : 2
typename void fwditer -> generator : 1
typename void fwditer -> predicate : 1
void fwditer const -> function : 2
void fwditer const -> const : 1
fwditer const function -> template : 3
template fills the -> destination : 1
template fills the -> sequence : 1
fills the destination -> range : 1
destination range by -> assigning : 1
range by assigning -> to : 1
by assigning to -> each : 1
assigning to each -> item : 1
to each item -> in : 1
assigns for in -> the : 2
fills a counted -> range : 2
a counted range -> with : 2
counted range with -> copies : 1
counted range with -> values : 1
void size const -> function : 2
size const function -> template : 2
template assigns to -> successive : 1
assigns to successive -> items : 1
to successive items -> in : 1
successive items in -> the : 1
in the destination -> starting : 1
the destination starting -> at : 1
destination starting at -> and : 1
starting at and -> assigning : 1
starting at and -> extending : 1
at and assigning -> exactly : 1
and assigning exactly -> template : 1
assigning exactly template -> parameter : 1
exactly template parameter -> must : 1
convertible to an -> integral : 2
an integral function -> template : 1
integral function template -> assigns : 1
value using linear -> typename : 1
using linear typename -> initer : 1
linear typename initer -> initer : 1
initer initer const -> function : 1
template returns an -> iterator : 3
occurrence of in -> it : 1
occurrence of in -> the : 4
of in it -> returns : 1
in it returns -> if : 2
in it returns -> is : 3
returns if is -> not : 1
returns if is -> too : 1
returns if is -> returns : 1
returns if is -> and : 1
to compare function -> template : 1
that if there -> is : 2
such is at -> most : 2
such is at -> comparisons : 1
searches for the -> last : 1
searches for the -> next : 1
for the last -> occurrence : 1
typename typename binarypredicate -> function : 4
typename binarypredicate function -> template : 4
template finds the -> last : 1
template finds the -> largest : 1
template finds the -> smallest : 1
template finds the -> first : 2
finds the last -> subsequence : 1
the last subsequence -> within : 1
last subsequence within -> the : 1
subsequence within the -> range : 2
within the range -> as : 1
within the range -> it : 1
the range as -> illustrated : 1
range as illustrated -> in : 1
illustrated in a -> subsequence : 1
in a subsequence -> with : 2
a subsequence with -> and : 5
subsequence with and -> it : 1
subsequence with and -> that : 1
subsequence with and -> a : 1
subsequence with and -> and : 1
subsequence with and -> illustrates : 1
with and it -> returns : 1
returns an in -> a : 1
with and that -> points : 1
and that points -> to : 1
of the matching -> subsequence : 1
the matching subsequence -> or : 1
matching subsequence or -> if : 1
subsequence or if -> a : 1
subsequence or if -> the : 2
or if a -> match : 1
a match cannot -> be : 1
match cannot be -> first : 1
cannot be first -> form : 1
cannot be first -> cannot : 1
cannot be first -> or : 1
be first form -> compares : 1
compares items with -> the : 7
items with the -> the : 7
items with the -> operator : 1
form calls a -> subsequence : 2
calls a subsequence -> with : 2
with and a -> subsequence : 1
and a subsequence -> with : 1
and and function -> template : 1
is the highest -> value : 3
the highest value -> in : 3
the highest value -> of : 1
highest value in -> the : 1
highest value in -> such : 2
the range such -> that : 6
range such that -> for : 4
range such that -> is : 2
such that for -> all : 8
such that for -> some : 1
that for all -> in : 7
that for all -> m : 1
that for all -> character : 1
range and in -> the : 1
returns if no -> such : 4
returns if no -> matching : 1
returns if no -> character : 1
if no such -> can : 3
if no such -> and : 1
no such can -> be : 3
such can be -> at : 3
searches for any -> one : 1
searches for any -> of : 2
for any one -> of : 2
any one of -> a : 4
any one of -> the : 1
sequence of typename -> typename : 1
of typename typename -> typename : 1
template searches the -> range : 1
searches the range -> for : 2
range for any -> one : 1
items in if -> it : 1
in if it -> finds : 1
in if it -> reaches : 1
if it finds -> a : 1
it finds a -> matching : 1
finds a matching -> it : 1
a matching it -> returns : 1
matching it returns -> an : 1
to the matching -> in : 1
to the matching -> if : 1
the matching in -> the : 1
matching in the -> range : 1
no matching item -> is : 2
matching item is -> any : 1
matching item is -> is : 1
item is any -> one : 1
is any one -> of : 1
of a list -> of : 3
list of shows -> an : 1
of shows an -> any : 1
shows an any -> one : 1
an any one -> of : 1
list of any -> one : 1
of any one -> of : 1
list of first -> form : 1
of first form -> compares : 1
form calls and -> function : 2
form calls and -> for : 1
calls and function -> template : 2
template returns is -> the : 1
template returns is -> is : 1
template returns is -> linear : 1
returns is the -> smallest : 1
returns is the -> return : 2
smallest value in -> the : 3
smallest value in -> such : 3
smallest value in -> a : 1
that for some -> in : 1
for some in -> the : 1
for some in -> characters : 1
some in the -> range : 1
no such and -> can : 1
such and can -> be : 1
searches for when -> a : 1
for when a -> predicate : 1
when a predicate -> returns : 1
returns typename initer -> initer : 1
function template to -> searches : 1
template to searches -> the : 1
to searches the -> range : 1
range for the -> first : 1
range for the -> next : 1
first item for -> which : 1
item for which -> is : 1
which is it -> returns : 2
is it returns -> an : 1
is it returns -> first : 2
is it returns -> is : 2
is it returns -> function : 1
is it returns -> times : 1
is it returns -> when : 1
is it returns -> and : 1
is it returns -> the : 1
is it returns -> a : 1
the matching if -> no : 1
matching if no -> matching : 1
item is is -> function : 1
is is function -> template : 1
is function template -> returns : 1
such that is -> if : 1
such that is -> false : 2
such that is -> true : 2
such that is -> it : 1
such that is -> const : 1
such is is -> called : 1
is called at -> most : 1
called at most -> function : 1
at most function -> function : 2
most function function -> function : 2
function template calls -> a : 1
function template calls -> for : 1
function template calls -> exactly : 1
template calls a -> function : 1
template calls a -> member : 8
function for each -> item : 1
for each item -> in : 2
for each item -> inserted : 1
a typename function -> initer : 1
function initer func -> function : 1
initer func function -> template : 1
func function template -> calls : 1
template calls for -> each : 1
calls for each -> item : 1
calls for each -> if : 1
the range passing -> the : 1
range passing the -> item : 1
passing the item -> as : 1
the item as -> the : 1
item as the -> sole : 1
the sole argument -> to : 1
sole argument to -> it : 1
sole argument to -> the : 4
argument to it -> returns : 1
it returns to -> test : 1
returns to test -> whether : 1
whether a list -> is : 2
list is shows -> how : 1
is shows how -> the : 1
how the use -> to : 1
the use to -> test : 1
the use to -> set : 1
use to test -> whether : 1
whether a sequence -> is : 1
sequence is the -> object : 1
the object remembers -> the : 1
object remembers the -> previous : 1
remembers the previous -> item : 1
the previous item -> in : 1
previous item in -> the : 1
in the which -> it : 1
the which it -> compares : 1
which it compares -> with : 1
it compares with -> the : 1
compares with the -> current : 1
with the current -> the : 1
current the overloaded -> operator : 1
overloaded operator returns -> if : 1
operator returns if -> the : 3
operator returns if -> and : 4
if the sequence -> is : 3
sequence is sorted -> so : 1
is sorted so -> far : 1
sorted so far -> or : 1
so far or -> if : 1
far or if -> the : 1
sequence is out -> of : 1
of the example -> takes : 1
of the example -> omits : 1
the example takes -> advantage : 1
example takes advantage -> of : 1
takes advantage of -> the : 1
of the fact -> that : 1
fact that returns -> the : 1
returns the parameter -> as : 1
the parameter as -> its : 1
parameter as its -> to : 1
as its to -> test : 1
its to test -> whether : 1
list is class -> void : 1
is class void -> calls : 1
class void calls -> for : 1
void calls for -> each : 1
for each if -> else : 1
each if else -> if : 1
else if sorted -> operator : 1
if sorted operator -> return : 1
sorted operator return -> bool : 1
operator return bool -> bool : 1
return bool bool -> t : 1
bool bool t -> int : 1
bool t int -> if : 1
t int if -> is : 1
int if is -> is : 1
if is is -> is : 2
if is is -> input : 1
if is is -> like : 1
if is is -> in : 1
if is is -> and : 1
if is is -> set : 2
if is is -> the : 1
if is is -> written : 2
if is is -> if : 1
if is is -> characters : 1
is is is -> called : 1
is is is -> the : 1
is is is -> overridden : 1
void fwditer generator -> function : 1
fwditer generator function -> template : 1
generator function template -> fills : 1
generator function template -> calls : 1
fills the sequence -> by : 1
the sequence by -> assigning : 1
sequence by assigning -> the : 1
by assigning the -> result : 1
assigning the result -> of : 1
of calling generate -> to : 1
calling generate to -> fill : 1
vector with shows -> a : 1
a simple way -> to : 2
simple way to -> fill : 1
simple way to -> print : 1
way to fill -> a : 1
fill a sequence -> with : 1
sequence with successive -> generate : 1
with successive generate -> to : 1
successive generate to -> fill : 1
vector with generate -> a : 1
with generate a -> series : 1
generate a series -> of : 1
series of starting -> with : 1
of starting with -> template : 1
starting with template -> class : 1
with template class -> series : 1
template class series -> t : 1
class series t -> return : 1
series t return -> t : 1
t return t -> int : 1
return t int -> generate : 1
t int generate -> integers : 1
int generate integers -> from : 1
generate integers from -> to : 1
integers from to -> print : 1
integers from to -> is : 1
from to print -> the : 1
the one per -> is : 1
one per is -> is : 1
per is is -> called : 1
size generator function -> template : 1
template calls exactly -> assigning : 1
calls exactly assigning -> the : 1
exactly assigning the -> results : 1
assigning the results -> to : 1
results to fill -> the : 1
to fill the -> sequence : 1
to fill the -> allocated : 1
fill the sequence -> that : 1
the sequence that -> starts : 2
sequence that starts -> at : 1
sequence that starts -> with : 1
starts at you -> must : 1
that the sequence -> has : 1
the sequence has -> room : 1
sequence has room -> for : 1
room for at -> least : 1
for at least -> the : 1
least the type -> must : 1
an integral to -> print : 1
integral to print -> a : 1
print a series -> of : 2
series of shows -> a : 1
way to print -> a : 2
print a sequence -> of : 1
sequence of to -> print : 1
of to print -> a : 1
series of use -> the : 1
of use the -> same : 1
of use the -> class : 1
the same series -> template : 1
same series template -> generate : 1
series template generate -> to : 1
template generate to -> fill : 1
vector with int -> print : 1
with int print -> integers : 1
int print integers -> from : 1
print integers from -> to : 1
to is is -> called : 1
template tests sorted -> ranges : 1
tests sorted ranges -> for : 1
sorted ranges for -> typename : 1
ranges for typename -> bool : 2
for typename bool -> typename : 2
for typename bool -> const : 32
typename bool compare -> function : 2
bool compare function -> template : 2
function template checks -> for : 1
function template checks -> bool : 2
template checks for -> a : 1
checks for a -> subset : 1
for a subset -> that : 1
a subset that -> it : 1
subset that it -> returns : 1
that it returns -> if : 1
that it returns -> as : 1
that it returns -> in : 1
that it returns -> true : 1
that it returns -> the : 1
that it returns -> function : 1
returns if every -> element : 1
returns if every -> bit : 1
if every element -> in : 1
every element in -> the : 1
the sorted sequence -> is : 1
the sorted sequence -> it : 1
sorted sequence is -> contained : 1
sequence is contained -> in : 1
contained in the -> sorted : 1
sorted sequence it -> returns : 1
sequence it returns -> sequences : 1
it returns sequences -> must : 1
returns sequences must -> be : 1
sequences must be -> the : 2
first form uses -> the : 3
first form uses -> an : 1
form uses the -> operator : 3
uses the operator -> to : 3
operator to compare -> the : 3
to compare the -> the : 1
to compare the -> second : 2
to compare the -> merge : 1
to compare the -> same : 1
to compare the -> object : 2
compare the the -> second : 1
form calls for -> in : 1
form calls for -> an : 1
form calls for -> all : 1
calls for in -> and : 1
for in and -> for : 8
for in and -> is : 1
for in and -> false : 1
in and for -> in : 8
in and for -> all : 1
in and for -> types : 1
and for in -> function : 1
and for in -> for : 6
and for in -> and : 2
and for in -> is : 1
all in it -> returns : 2
is at comparisons -> are : 4
at comparisons are -> function : 3
at comparisons are -> int : 1
function template merges -> adjacent : 1
function template merges -> two : 1
function template merges -> sorted : 1
function template merges -> the : 1
function template merges -> elements : 2
template merges adjacent -> ranges : 1
merges adjacent ranges -> in : 1
adjacent ranges in -> void : 1
ranges in void -> bidiiter : 1
in void bidiiter -> bidiiter : 1
void bidiiter bidiiter -> typename : 1
void bidiiter bidiiter -> compare : 1
bidiiter bidiiter typename -> void : 1
bidiiter typename void -> bidiiter : 1
typename void bidiiter -> bidiiter : 1
bidiiter bidiiter compare -> function : 1
bidiiter compare function -> template : 3
template merges two -> consecutive : 1
merges two consecutive -> ranges : 1
two consecutive ranges -> in : 1
consecutive ranges in -> creating : 1
ranges in creating -> a : 1
in creating a -> single : 1
creating a single -> sorted : 1
a single sorted -> the : 1
single sorted the -> two : 1
sorted the two -> ranges : 1
the two ranges -> are : 1
the two ranges -> must : 1
two ranges are -> and : 1
ranges are and -> the : 1
the resulting range -> is : 1
resulting range is -> merge : 1
range is merge -> is : 1
is merge is -> so : 1
merge is so -> elements : 2
merge is so -> the : 1
is so elements -> retain : 1
is so elements -> preserve : 1
so elements retain -> their : 1
elements retain their -> respective : 1
retain their respective -> with : 1
their respective with -> equivalent : 1
respective with equivalent -> elements : 1
with equivalent elements -> in : 1
equivalent elements in -> the : 1
first range coming -> before : 1
range coming before -> elements : 1
coming before elements -> in : 1
before elements in -> the : 1
in the sequences -> must : 1
the sequences must -> be : 1
compare the second -> form : 2
form calls two -> sorted : 1
form calls two -> sequences : 1
calls two sorted -> shows : 1
two sorted shows -> how : 1
shows how two -> sorted : 1
how two sorted -> two : 1
sorted two sorted -> for : 1
two sorted for -> in : 1
for in for -> in : 6
in for in -> is : 4
in for in -> function : 2
for in is -> usually : 1
for in is -> at : 5
for in is -> is : 1
for in is -> log : 1
in is usually -> linear : 1
is usually linear -> with : 1
usually linear with -> but : 1
linear with but -> if : 1
with but if -> enough : 1
but if enough -> temporary : 1
if enough temporary -> memory : 1
enough temporary memory -> is : 1
temporary memory is -> not : 1
memory is not -> the : 1
memory is not -> wasted : 1
not the complexity -> might : 1
not the complexity -> is : 3
the complexity might -> be : 1
complexity might be -> log : 1
might be log -> in : 1
be log in -> which : 1
log in which -> is : 5
log in which -> function : 1
log in which -> provided : 1
log in which -> a : 2
which is function -> function : 6
function template swaps -> values : 1
function template swaps -> the : 5
function template swaps -> elements : 2
function template swaps -> with : 1
function template swaps -> two : 2
function template swaps -> all : 2
function template swaps -> contents : 1
template swaps values -> that : 1
swaps values that -> iterators : 1
values that iterators -> point : 1
that iterators point -> typename : 1
iterators point typename -> void : 1
point typename void -> function : 1
typename void function -> template : 4
void function template -> swaps : 2
void function template -> specialization : 6
template swaps the -> values : 2
template swaps the -> contents : 3
swaps the values -> pointed : 1
swaps the values -> of : 1
the values pointed -> to : 1
values pointed to -> by : 1
pointed to by -> and : 1
pointed to by -> the : 1
pointed to by -> as : 1
pointed to by -> to : 1
pointed to by -> into : 2
to by and -> you : 1
by and you -> can : 1
think of its -> functionality : 1
of its functionality -> tmp : 1
its functionality tmp -> is : 1
functionality tmp is -> function : 1
tmp is function -> function : 1
function template compares -> ranges : 1
function template compares -> two : 7
function template compares -> lists : 6
function template compares -> maps : 6
function template compares -> allocators : 2
function template compares -> queues : 6
function template compares -> sets : 6
function template compares -> stacks : 6
function template compares -> strings : 6
function template compares -> for : 18
template compares ranges -> for : 1
compares ranges for -> typename : 1
sequence is less -> than : 2
than the sequence -> if : 1
the sequence if -> the : 1
sequence if the -> sequences : 2
if the sequences -> have : 1
if the sequences -> are : 1
the sequences have -> the : 1
sequences have the -> same : 1
the same length -> and : 1
the same length -> as : 1
same length and -> the : 1
length and the -> return : 1
and the return -> value : 7
and the return -> many : 1
value is if -> the : 8
value is if -> is : 2
value is if -> character : 1
value is if -> there : 1
if the second -> sequence : 1
if the second -> part : 3
the second sequence -> is : 1
the second sequence -> starts : 1
the second sequence -> at : 1
second sequence is -> a : 1
sequence is a -> prefix : 1
is a prefix -> of : 5
is a prefix -> is : 1
prefix of the -> is : 1
prefix of the -> integer : 2
prefix of the -> the : 4
the is use -> of : 1
is use of -> emphasizes : 1
use of emphasizes -> that : 1
of emphasizes that -> the : 1
emphasizes that the -> ranges : 1
that the ranges -> are : 1
the ranges are -> compared : 1
ranges are compared -> like : 1
are compared like -> letters : 1
compared like letters -> in : 1
like letters in -> first : 1
letters in first -> form : 1
in first form -> uses : 1
in first form -> compares : 1
returns if either -> of : 1
if either of -> the : 1
either of the -> following : 1
either of the -> input : 1
following conditions is -> is : 1
conditions is is -> an : 1
all in and -> for : 1
all in and -> is : 2
and is at -> comparisons : 1
comparisons are int -> using : 1
are int using -> namespace : 1
using namespace int -> int : 1
namespace int int -> int : 1
int int cout -> cout : 1
int cout cout -> true : 1
cout cout true -> cout : 1
cout true cout -> false : 1
true cout false -> cout : 1
cout false cout -> false : 1
cout false cout -> true : 1
false cout false -> cout : 1
false cout true -> function : 1
cout true function -> function : 1
true function function -> function : 1
template finds lower -> bound : 1
finds lower bound -> for : 1
lower bound for -> a : 1
lower bound for -> all : 1
bound for a -> position : 2
for a position -> in : 2
a position in -> a : 4
fwditer fwditer const -> typename : 2
fwditer fwditer const -> compare : 2
fwditer fwditer const -> function : 1
sorted range the -> return : 2
range the return -> value : 5
position where you -> can : 2
how to find -> the : 1
find the bounds -> for : 1
the bounds for -> the : 2
bounds for the -> value : 2
for the value -> the : 2
for the value -> in : 2
value the function -> returns : 2
function returns as -> the : 2
returns as the -> lower : 1
returns as the -> upper : 2
as the lower -> bound : 1
bound of in -> the : 2
in the given -> note : 2
in the given -> there : 2
the given note -> that : 2
given note that -> is : 1
given note that -> it : 1
note that is -> the : 1
note that is -> slightly : 1
note that is -> not : 1
is the lower -> bound : 1
bound for all -> values : 2
for all values -> in : 2
for all values -> of : 4
all values in -> the : 2
all values in -> for : 1
all values in -> two : 1
all values in -> a : 1
range and for -> values : 1
range and for -> each : 1
range the lower -> bound : 1
lower bound is -> equal : 1
bound is equal -> to : 2
equal to for -> in : 2
equal to for -> any : 1
to for in -> function : 2
value in such -> that : 5
all in is -> the : 2
all in is -> is : 2
all in is -> linear : 1
all in is -> and : 1
all in is -> at : 1
all in is -> exactly : 7
all in is -> or : 1
in is the -> number : 2
in is the -> same : 1
in is the -> orientation : 1
function template reorders -> a : 5
function template reorders -> the : 2
template reorders a -> range : 5
reorders a range -> to : 4
reorders a range -> into : 1
range to convert -> it : 1
to convert it -> into : 1
convert it into -> a : 1
it into a -> void : 1
into a void -> randiter : 1
a void randiter -> typename : 3
a void randiter -> randiter : 1
void randiter typename -> void : 7
randiter typename void -> randiter : 9
typename void randiter -> compare : 6
typename void randiter -> randiter : 2
typename void randiter -> with : 1
void randiter compare -> function : 6
randiter compare function -> template : 9
template reorders the -> elements : 1
template reorders the -> range : 1
reorders the elements -> in : 1
form a heap -> in : 1
a heap in -> first : 1
a heap in -> void : 1
a heap in -> the : 1
heap in first -> form : 1
form calls data -> is : 1
calls data is -> a : 1
data is a -> data : 1
a data structure -> that : 1
data structure that -> is : 1
that is ideally -> suited : 1
is ideally suited -> for : 1
ideally suited for -> implementing : 1
suited for implementing -> priority : 1
for implementing priority -> defines : 1
implementing priority defines -> a : 1
priority defines a -> range : 1
defines a range -> as : 1
a range as -> a : 1
range as a -> heap : 1
as a heap -> if : 1
a heap if -> two : 1
heap if two -> properties : 1
if two properties -> are : 1
two properties are -> first : 1
properties are first -> element : 1
are first element -> of : 1
the which strictly -> means : 1
which strictly means -> that : 1
strictly means that -> is : 1
means that is -> false : 1
that is false -> for : 2
that is false -> and : 1
is false for -> all : 3
false for all -> in : 2
false for all -> function : 2
all in or -> removing : 1
in or removing -> an : 1
or removing an -> element : 1
removing an element -> can : 1
an element can -> be : 1
element can be -> done : 1
can be done -> in : 1
be done in -> logarithmic : 1
done in logarithmic -> and : 1
in logarithmic and -> the : 1
logarithmic and the -> result : 1
result is still -> a : 1
is still a -> classic : 1
still a classic -> example : 1
a classic example -> of : 1
classic example of -> a : 1
of a heap -> is : 1
a heap is -> a : 1
heap is a -> binary : 1
a binary in -> which : 1
binary in which -> each : 1
each node is -> greater : 1
node is greater -> than : 1
to its but -> the : 1
its but the -> relative : 1
but the relative -> order : 1
of the children -> is : 1
the children is -> not : 1
children is not -> the : 1
not the root -> of : 1
of the tree -> is : 1
the tree is -> the : 1
tree is the -> largest : 1
is the largest -> element : 1
is the largest -> value : 1
is the largest -> number : 4
is the largest -> item : 1
largest element in -> the : 2
largest element in -> a : 1
in the entire -> is : 1
the entire is -> a : 1
entire is a -> is : 1
returns the maximum -> of : 1
of two const -> const : 3
of two const -> operator : 3
two const const -> typename : 2
two const const -> const : 1
const const typename -> const : 2
const typename const -> const : 2
typename const const -> compare : 2
const const compare -> function : 2
returns the larger -> of : 1
the larger of -> and : 1
larger of and -> if : 1
of and if -> neither : 2
of and if -> the : 1
of and if -> all : 1
of and if -> is : 1
and if neither -> is : 2
if neither is -> it : 2
neither is it -> returns : 2
it returns first -> form : 2
returns first form -> compares : 2
calls function function -> function : 2
finds the largest -> element : 1
in a fwditer -> fwditer : 2
a fwditer fwditer -> typename : 3
fwditer compare function -> template : 2
to the largest -> element : 1
range if there -> are : 2
there are multiple -> instances : 2
there are multiple -> elements : 1
are multiple instances -> of : 2
multiple instances of -> the : 2
of the largest -> the : 1
of the largest -> possible : 4
of the largest -> allocation : 1
the largest the -> iterator : 1
the largest the -> precision : 1
largest the iterator -> points : 1
the first such -> first : 2
the first such -> the : 1
first such first -> form : 2
such first form -> compares : 2
in is is -> exactly : 2
in is is -> taking : 2
is is exactly -> comparisons : 6
template merges sorted -> typename : 1
merges sorted typename -> typename : 1
sorted typename typename -> outiter : 5
typename outiter outiter -> typename : 5
typename outiter outiter -> compare : 5
typename outiter outiter -> binaryoperation : 1
outiter outiter typename -> typename : 5
outiter typename typename -> typename : 5
outiter typename typename -> outiter : 1
outiter outiter compare -> function : 5
outiter compare function -> template : 5
template merges the -> sorted : 1
merges the sorted -> ranges : 1
the sorted ranges -> and : 3
sorted ranges and -> copying : 3
ranges and copying -> the : 3
and copying the -> results : 1
and copying the -> merged : 2
the results into -> the : 1
results into the -> sequence : 1
into the sequence -> that : 1
starts with you -> must : 1
with you must -> ensure : 1
with you must -> call : 1
that the destination -> has : 1
the destination has -> enough : 1
destination has enough -> room : 1
the entire merged -> return : 1
entire merged return -> value : 1
merged return value -> is : 1
is the end -> value : 1
the end value -> of : 1
end value of -> the : 1
the destination that -> destination : 1
destination that destination -> range : 1
that destination range -> must : 1
destination range must -> not : 1
range must not -> overlap : 5
range must not -> be : 1
must not overlap -> either : 5
not overlap either -> of : 1
not overlap either -> source : 4
overlap either of -> the : 1
the input merge -> is : 1
input merge is -> so : 1
so elements preserve -> their : 1
elements preserve their -> relative : 1
elements preserve their -> original : 1
preserve their relative -> equivalent : 1
their relative equivalent -> elements : 1
relative equivalent elements -> are : 1
equivalent elements are -> so : 1
elements are so -> elements : 1
are so elements -> from : 1
so elements from -> the : 1
from the first -> range : 1
from the first -> to : 1
first range come -> before : 1
range come before -> elements : 1
come before elements -> from : 1
before elements from -> the : 1
the second first -> form : 1
second first form -> compares : 1
calls and for -> in : 1
in is at -> comparisons : 1
in is at -> most : 5
returns the smaller -> of : 1
the smaller of -> and : 5
the smaller of -> the : 1
smaller of and -> if : 3
smaller of and -> a : 1
smaller of and -> the : 4
finds the smallest -> value : 1
to the smallest -> element : 1
the smallest element -> in : 1
the smallest element -> of : 1
smallest element in -> the : 1
of the smallest -> the : 1
of the smallest -> denormalized : 1
the smallest the -> iterator : 1
smallest the iterator -> points : 1
for all m -> in : 1
all m in -> is : 1
m in is -> is : 1
template finds first -> position : 1
finds first position -> where : 1
two ranges typename -> typename : 1
ranges typename typename -> typename : 1
template compares two -> sequences : 1
template compares two -> deques : 6
compares two sequences -> pairwise : 1
two sequences pairwise -> and : 1
sequences pairwise and -> returns : 1
pairwise and returns -> a : 1
iterators that identifies -> the : 1
that identifies the -> first : 1
identifies the first -> elements : 1
the first elements -> at : 1
the first elements -> are : 1
first elements at -> which : 1
elements at which -> the : 1
which the sequences -> the : 1
the sequences the -> first : 1
sequences the first -> sequence : 1
the first sequence -> is : 1
first sequence is -> and : 1
sequence is and -> the : 1
sequence is and -> any : 1
second sequence starts -> at : 1
sequence starts at -> and : 1
starts at and -> has : 1
starts at and -> extends : 3
at and has -> at : 1
and has at -> least : 1
least as many -> elements : 1
as many elements -> as : 1
many elements as -> the : 1
elements as the -> first : 1
the first return -> value : 1
first return value -> is : 1
is a pair -> of : 2
pair of the -> first : 1
pair of the -> allocated : 1
the pair points -> to : 2
pair points to -> an : 2
the first and -> second : 1
first and second -> member : 1
and second member -> of : 1
second member of -> the : 1
the second the -> two : 2
the second the -> new : 1
the second the -> type : 1
second the two -> iterators : 1
second the two -> ranges : 1
the two iterators -> have : 1
two iterators have -> the : 1
iterators have the -> same : 1
the same offset -> within : 1
the same offset -> call : 1
same offset within -> their : 1
offset within their -> respective : 1
within their respective -> if : 1
their respective if -> the : 1
respective if the -> two : 1
the two sequences -> are : 1
two sequences are -> the : 1
sequences are the -> pair : 1
are the pair -> returned : 1
the pair returned -> is : 1
pair returned is -> and : 1
returned is and -> an : 1
and an iterator -> that : 1
second sequence at -> the : 1
sequence at the -> same : 1
same offset call -> it : 1
offset call it -> first : 1
call it first -> form : 1
it first form -> compares : 1
calls two sequences -> for : 1
two sequences for -> a : 3
sequences for a -> illustrates : 1
sequences for a -> two : 1
sequences for a -> function : 1
for a illustrates -> how : 1
a illustrates how -> the : 1
illustrates how the -> function : 2
function template two -> sequences : 1
template two sequences -> for : 1
for a two -> sequences : 1
a two sequences -> for : 1
returns the pair -> in : 1
the pair in -> which : 1
the pair in -> logarithmic : 2
pair in which -> is : 1
false and is -> true : 1
is true for -> all : 3
is true for -> in : 2
is true for -> some : 1
is true for -> locale : 1
true for all -> in : 3
all in if -> there : 1
all in if -> is : 1
in if there -> is : 1
function template generates -> next : 1
function template generates -> previous : 1
template generates next -> bool : 1
generates next bool -> bidiiter : 1
next bool bidiiter -> typename : 1
bool bidiiter typename -> bool : 2
bidiiter typename bool -> bidiiter : 2
typename bool bidiiter -> compare : 2
bool bidiiter compare -> function : 2
function template rearranges -> the : 2
template rearranges the -> contents : 2
rearranges the contents -> of : 2
the next assuming -> that : 1
next assuming that -> there : 1
assuming that there -> is : 2
set of lexicographically -> ordered : 2
of lexicographically ordered -> the : 2
lexicographically ordered the -> return : 2
ordered the return -> value : 2
the next permutation -> is : 1
next permutation is -> or : 1
permutation is or -> if : 2
is at the -> last : 1
is at the -> first : 1
is at the -> end : 2
at the last -> in : 1
the last in -> which : 1
last in which -> case : 1
case the function -> and : 1
case the function -> cycles : 1
the first permutation -> is : 1
the first permutation -> print : 1
first permutation is -> generated : 1
permutation is generated -> with : 1
is generated with -> all : 1
generated with all -> elements : 1
with all elements -> in : 2
all elements in -> ascending : 1
all elements in -> the : 5
all elements in -> descending : 1
elements in ascending -> of : 1
in ascending of -> a : 1
ascending of a -> shows : 1
of a shows -> all : 2
of a shows -> a : 2
a shows all -> the : 2
shows all the -> in : 2
shows all the -> overloaded : 1
shows all the -> exception : 1
the function swaps -> elements : 2
function swaps elements -> to : 2
swaps elements to -> form : 2
elements to form -> the : 2
next for if -> the : 1
for if the -> input : 2
for if the -> file : 1
for if the -> bit : 2
if the input -> is : 10
if the input -> ranges : 1
if the input -> array : 1
if the input -> buffer : 1
input is permutation -> the : 4
is permutation the -> result : 4
permutation the result -> is : 4
result is permutation -> if : 2
result is permutation -> and : 2
is permutation if -> the : 2
permutation if the -> input : 2
is permutation and -> returns : 2
permutation and returns -> of : 1
permutation and returns -> is : 1
and returns of -> a : 1
returns of a -> of : 1
of a of -> a : 1
a simple program -> that : 1
simple program that -> prints : 1
program that prints -> all : 1
that prints all -> the : 1
prints all the -> permutations : 1
all the permutations -> of : 1
the permutations of -> a : 1
permutations of a -> sequence : 1
sequence of you -> can : 1
can use this -> program : 1
use this program -> to : 1
this program to -> better : 1
program to better -> understand : 1
to better understand -> the : 1
better understand the -> function : 1
understand the function -> void : 1
the function void -> int : 1
function void int -> a : 1
function void int -> type : 1
void int a -> few : 1
int a few -> followed : 1
a few followed -> by : 1
few followed by -> start : 1
followed by start -> with : 1
by start with -> the : 1
first permutation print -> all : 1
permutation print all -> the : 1
print all the -> subsequent : 1
all the subsequent -> while : 1
the subsequent while -> is : 1
subsequent while is -> at : 1
while is at -> there : 1
is at there -> are : 1
at there are -> function : 1
there are function -> function : 1
range to properly -> place : 1
to properly place -> an : 1
properly place an -> item : 1
place an item -> at : 1
at the nth -> void : 1
the nth void -> randiter : 1
nth void randiter -> randiter : 1
void randiter randiter -> typename : 2
void randiter randiter -> compare : 2
randiter randiter typename -> void : 2
randiter randiter typename -> typename : 1
randiter randiter compare -> function : 3
the range so -> that : 4
so that is -> assigned : 1
so that is -> a : 2
that is assigned -> the : 1
is assigned the -> value : 1
is assigned the -> character : 1
is assigned the -> corresponding : 2
is assigned the -> scalar : 1
assigned the value -> that : 1
value that would -> be : 1
would be there -> if : 1
be there if -> the : 1
there if the -> entire : 1
if the entire -> range : 1
if the entire -> value : 2
if the entire -> input : 1
the entire range -> were : 1
entire range were -> it : 1
range were it -> also : 1
were it also -> partitions : 1
it also partitions -> the : 1
also partitions the -> range : 1
partitions the range -> so : 1
that all elements -> in : 1
that all elements -> that : 2
the range are -> less : 1
the range are -> moved : 1
the range are -> rotated : 1
the range are -> copied : 1
range are less -> than : 1
are less than -> or : 1
to the elements -> in : 1
to the elements -> at : 1
the range order -> is : 1
range order is -> not : 1
order is not -> if : 1
not if there -> are : 1
are multiple elements -> that : 1
multiple elements that -> could : 1
elements that could -> be : 1
that could be -> moved : 1
that could be -> optimized : 1
could be moved -> to : 1
be moved to -> position : 1
be moved to -> that : 1
moved to position -> and : 1
to position and -> preserve : 1
position and preserve -> the : 1
the sorted you -> cannot : 1
sorted you cannot -> predict : 1
you cannot predict -> which : 1
cannot predict which -> element : 1
predict which element -> will : 1
which element will -> be : 1
element will be -> moved : 1
will be moved -> to : 1
moved to that -> a : 1
to that a -> range : 1
to that a -> single : 1
that a range -> with : 1
range with illustrates -> how : 1
with illustrates how -> the : 1
function template a -> range : 1
template a range -> with : 1
with a range -> with : 1
range with is -> in : 1
with is in -> the : 1
range for all -> in : 1
all in for -> all : 1
in for all -> and : 1
for all and -> for : 1
all and for -> all : 1
in is linear -> for : 1
is linear for -> the : 1
linear for the -> average : 1
for the average -> case : 1
the average case -> but : 1
average case but -> is : 1
case but is -> allowed : 1
but is allowed -> to : 1
allowed to perform -> worse : 1
to perform worse -> in : 1
perform worse in -> the : 1
worse in the -> worst : 1
in the worst -> function : 1
the worst function -> function : 1
worst function function -> function : 1
function template sorts -> the : 4
function template sorts -> and : 1
function template sorts -> a : 4
template sorts the -> first : 1
template sorts the -> initial : 1
template sorts the -> range : 2
sorts the first -> part : 1
of a void -> randiter : 1
sorts the initial -> elements : 1
the initial elements -> of : 1
initial elements of -> the : 1
the range into -> the : 6
into the range -> the : 2
range the remaining -> elements : 1
remaining elements at -> are : 1
elements at are -> not : 1
at are not -> in : 1
in any particular -> first : 1
any particular first -> form : 1
particular first form -> compares : 1
calls for an -> illustration : 1
for an illustration -> of : 1
an illustration of -> the : 2
illustration of the -> for : 1
illustration of the -> kinds : 1
in is and -> for : 1
is is taking -> about : 2
is taking about -> function : 1
is taking about -> log : 1
taking about function -> function : 1
about function function -> function : 2
about function function -> template : 2
template sorts and -> copies : 1
sorts and copies -> the : 1
copies the first -> part : 1
copies the first -> element : 1
a typename randiter -> initer : 1
typename randiter initer -> randiter : 2
randiter initer randiter -> randiter : 2
initer randiter randiter -> typename : 1
initer randiter randiter -> compare : 1
randiter typename typename -> randiter : 1
typename typename randiter -> initer : 1
template copies and -> sorts : 1
copies and sorts -> elements : 1
and sorts elements -> from : 1
sorts elements from -> the : 1
from the range -> into : 1
from the range -> nothing : 1
from the range -> to : 4
from the range -> the : 2
from the range -> or : 1
range the number -> of : 1
of items copied -> is : 1
items copied is -> the : 1
copied is the -> smaller : 1
is the smaller -> of : 4
source range is -> smaller : 1
source range is -> it : 1
range is smaller -> than : 1
than the result -> the : 1
result the sorted -> elements : 1
the sorted elements -> are : 1
sorted elements are -> taken : 1
elements are taken -> from : 2
from the entire -> source : 1
the entire source -> range : 1
entire source range -> and : 1
source range and -> copied : 1
range and copied -> into : 1
and copied into -> the : 1
copied into the -> first : 1
into the first -> positions : 2
the first positions -> of : 2
first positions of -> the : 2
positions of the -> result : 2
positions of the -> items : 1
the result starting -> at : 1
result starting at -> if : 1
starting at if -> the : 1
starting at if -> an : 1
starting at if -> is : 1
at if the -> source : 1
range is it -> is : 1
is copied and -> sorted : 1
copied and sorted -> into : 1
and sorted into -> the : 1
sorted into the -> first : 1
sorted into the -> current : 1
the result leaving -> the : 1
result leaving the -> elements : 1
leaving the elements -> in : 1
value is first -> form : 1
is first form -> compares : 1
calls for all -> in : 1
taking about log -> function : 1
about log function -> function : 1
log function function -> function : 1
function template partitions -> a : 2
template partitions a -> range : 2
partitions a range -> according : 1
partitions a range -> in : 1
a range according -> to : 1
range according to -> a : 1
to a typename -> bidiiter : 1
to a typename -> typename : 1
to a typename -> class : 1
a typename bidiiter -> bidiiter : 1
typename bidiiter bidiiter -> predicate : 2
bidiiter bidiiter predicate -> function : 2
bidiiter predicate function -> template : 2
template swaps elements -> in : 2
swaps elements in -> the : 2
all elements that -> satisfy : 2
elements that satisfy -> come : 2
that satisfy come -> before : 2
satisfy come before -> those : 2
come before those -> that : 2
before those that -> do : 2
that do the -> relative : 2
do the relative -> order : 2
order of elements -> is : 1
order of elements -> in : 2
elements is not -> return : 1
elements is not -> necessarily : 1
is not return -> value : 1
not return value -> is : 1
first element for -> which : 2
element for which -> is : 2
which is or -> if : 2
or if there -> is : 4
no such a -> range : 2
such a range -> into : 2
range into even -> and : 4
into even and -> odd : 4
even and odd -> illustrates : 2
even and odd -> a : 1
even and odd -> let : 1
and odd illustrates -> the : 2
odd illustrates the -> function : 1
odd illustrates the -> partition : 1
illustrates the function -> template : 1
illustrates the function -> and : 1
function template for -> a : 1
function template for -> an : 10
for a predicate -> that : 1
a predicate that -> tests : 1
predicate that tests -> whether : 1
that tests whether -> a : 1
whether a number -> is : 1
a number is -> return : 1
a number is -> the : 2
a number is -> or : 1
a number is -> represented : 1
number is return -> n : 1
is return n -> a : 1
return n a -> range : 1
n a range -> into : 1
and odd a -> range : 1
odd a range -> into : 1
and odd let -> be : 1
odd let be -> an : 1
let be an -> iterator : 2
be an iterator -> in : 2
an iterator in -> the : 2
iterator in the -> range : 2
that is true -> for : 2
true for in -> and : 2
and is false -> for : 1
for all function -> template : 2
all function template -> returns : 2
called exactly and -> at : 1
exactly and at -> most : 1
and at most -> swaps : 1
at most swaps -> are : 3
most swaps are -> function : 3
swaps are function -> function : 6
function template removes -> largest : 1
function template removes -> equal : 1
template removes largest -> element : 1
removes largest element -> from : 1
largest element from -> a : 1
element from a -> void : 1
element from a -> container : 1
from a void -> randiter : 1
template copies the -> first : 1
first element from -> the : 1
element from the -> heap : 1
element from the -> beginning : 1
element from the -> middle : 1
element from the -> subset : 1
from the heap -> in : 1
the heap in -> to : 1
the heap in -> forming : 1
heap in to -> the : 1
in to the -> end : 1
that it then -> ensures : 1
it then ensures -> that : 1
then ensures that -> the : 1
that the elements -> remaining : 1
the elements remaining -> in : 1
elements remaining in -> form : 1
remaining in form -> a : 1
in form a -> first : 1
form a first -> form : 1
a first form -> compares : 1
form calls is -> a : 2
calls is a -> heap : 2
is a heap -> for : 3
a heap for -> the : 3
heap for the -> definition : 3
a and for -> all : 1
a and for -> any : 1
template generates previous -> bool : 1
generates previous bool -> bidiiter : 1
previous bool bidiiter -> typename : 1
to the previous -> assuming : 1
to the previous -> value : 2
to the previous -> or : 1
the previous assuming -> that : 1
previous assuming that -> there : 1
if the previous -> permutation : 1
the previous permutation -> is : 1
previous permutation is -> or : 1
at the first -> in : 1
the first in -> which : 1
the first in -> addition : 1
first in which -> case : 1
the function cycles -> and : 1
function cycles and -> generates : 1
cycles and generates -> the : 1
and generates the -> last : 1
generates the last -> permutation : 1
the last permutation -> with : 1
last permutation with -> all : 1
permutation with all -> elements : 1
elements in descending -> of : 1
in descending of -> a : 1
descending of a -> shows : 1
the previous for -> if : 1
previous for if -> the : 1
and returns is -> at : 1
returns is at -> most : 3
function template adds -> a : 1
function template adds -> the : 1
template adds a -> value : 1
adds a value -> to : 1
to a void -> randiter : 1
template adds the -> item : 1
adds the item -> at : 1
item at to -> the : 1
at to the -> heap : 1
to the heap -> in : 1
heap in forming -> a : 1
in forming a -> new : 1
forming a new -> heap : 1
a new heap -> in : 1
new heap in -> the : 1
heap in the -> range : 2
the range first -> form : 1
range first form -> compares : 1
range into a -> random : 1
into a random -> void : 1
a random void -> randiter : 1
random void randiter -> typename : 1
void randiter with -> no : 1
randiter with no -> function : 1
no function template -> changes : 1
function template changes -> the : 1
template changes the -> order : 1
changes the order -> of : 1
to a random -> the : 1
a random the -> first : 1
random the first -> form : 1
form uses an -> random : 1
uses an random -> number : 1
an random number -> generator : 1
random number generator -> to : 1
number generator to -> produce : 1
generator to produce -> a : 1
to produce a -> uniform : 1
to produce a -> new : 2
produce a uniform -> the : 1
a uniform the -> second : 1
uniform the second -> form : 1
form calls to -> generate : 1
calls to generate -> random : 1
to generate random -> in : 1
generate random in -> which : 1
random in which -> is : 1
is a positive -> value : 1
a positive value -> of : 1
positive value of -> type : 1
value from must -> be : 1
from must be -> convertible : 1
same and be -> in : 1
and be in -> the : 1
is exactly swaps -> are : 3
exactly swaps are -> function : 3
to remove all -> occurrences : 1
to remove all -> the : 2
remove all occurrences -> of : 1
function template items -> that : 1
function template items -> for : 1
template items that -> are : 1
equal to from -> the : 1
equal to from -> a : 1
to from the -> range : 1
the range nothing -> is : 1
range nothing is -> actually : 1
nothing is actually -> erased : 1
is actually erased -> from : 3
actually erased from -> the : 3
erased from the -> items : 1
erased from the -> underlying : 2
erased from the -> end : 3
erased from the -> list : 1
from the items -> to : 1
from the items -> are : 1
items to the -> right : 3
the right are -> copied : 2
the right are -> assigned : 1
right are copied -> to : 2
are copied to -> new : 2
are copied to -> except : 1
are copied to -> is : 2
copied to new -> positions : 2
to new positions -> so : 2
to new positions -> at : 1
new positions so -> they : 2
positions so they -> overwrite : 2
so they overwrite -> the : 3
they overwrite the -> elements : 3
overwrite the elements -> that : 2
overwrite the elements -> for : 1
elements that are -> equal : 1
elements that are -> not : 3
elements that are -> also : 1
elements that are -> see : 1
value is one -> past : 9
value is one -> of : 3
is one past -> the : 9
past the new -> end : 3
the new end -> of : 3
new end of -> the : 3
the the relative -> order : 3
are not removed -> is : 4
not removed is -> only : 1
not removed is -> source : 2
not removed is -> is : 1
removed is only -> way : 1
is only way -> to : 1
erase an element -> from : 1
an element from -> a : 1
an element from -> the : 2
to call one -> of : 1
call one of -> the : 1
does not and -> cannot : 1
not and cannot -> erase : 1
and cannot erase -> all : 1
cannot erase all -> it : 1
erase all it -> can : 1
all it can -> do : 1
can do is -> move : 1
can do is -> to : 1
do is move -> items : 1
is move items -> within : 1
move items within -> its : 1
items within its -> given : 1
within its given -> a : 1
its given a -> typical : 1
given a typical -> is : 1
a typical is -> to : 1
typical is to -> call : 1
to call to -> reorder : 1
to call to -> retrieve : 1
call to reorder -> the : 1
to reorder the -> and : 1
reorder the and -> then : 1
and then call -> to : 1
then call to -> erase : 1
then call to -> obtain : 1
call to erase -> the : 1
call to erase -> removes : 1
erase the unwanted -> to : 1
the unwanted to -> help : 1
unwanted to help -> the : 1
to help the -> value : 1
help the value -> returned : 1
from is an -> iterator : 1
range that will -> be : 1
that will be -> for : 1
will be for -> data : 1
be for data -> erase : 1
for data erase -> all : 1
data erase all -> values : 1
erase all values -> that : 1
all values that -> are : 1
range by calling -> for : 3
range by calling -> illustrates : 1
range by calling -> from : 1
range by calling -> function : 1
by calling for -> an : 3
calling for an -> example : 3
for an example -> of : 11
for an example -> that : 1
of the removal -> function : 3
of the removal -> first : 1
the removal function -> template : 3
removal function template -> assigns : 3
template assigns in -> which : 4
assigns in which -> starts : 4
in which starts -> at : 4
which starts at -> for : 4
starts at for -> all : 4
at for all -> values : 4
values of in -> in : 4
of in in -> which : 4
of in in -> function : 5
of in in -> in : 2
in in which -> is : 6
in in which -> or : 2
in in which -> assign : 1
template copies elements -> that : 1
template copies elements -> for : 1
template copies elements -> from : 3
copies elements that -> are : 1
not equal to -> a : 1
not equal to -> are : 1
not equal to -> any : 1
not equal to -> and : 1
not equal to -> for : 1
initer outiter const -> function : 1
initer outiter const -> const : 1
outiter const function -> template : 1
to the range -> that : 8
to the range -> starting : 4
starts at only -> items : 2
at only items -> that : 1
at only items -> for : 1
only items that -> are : 1
equal to are -> that : 1
equal to are -> replaced : 1
to are that -> cases : 1
are that cases -> in : 1
that cases in -> which : 1
cases in which -> returns : 1
cases in which -> you : 1
in which returns -> return : 1
in which returns -> class : 12
in which returns -> note : 2
which returns return -> value : 1
returns return value -> is : 1
result the relative -> order : 2
removed is source -> and : 2
is source and -> result : 2
source and result -> ranges : 6
and result ranges -> must : 6
result ranges must -> not : 6
ranges must not -> from : 1
ranges must not -> see : 2
ranges must not -> all : 1
ranges must not -> a : 2
ranges must not -> function : 1
must not from -> a : 1
by calling illustrates -> the : 1
calling illustrates the -> removal : 1
illustrates the removal -> from : 1
the removal from -> a : 1
removal from a -> range : 1
by calling from -> a : 1
calling from a -> range : 1
by calling function -> template : 1
calling function template -> assigns : 1
copies elements for -> which : 1
elements for which -> a : 2
elements for which -> returns : 2
initer outiter predicate -> function : 1
outiter predicate function -> template : 1
only items for -> which : 1
which returns false -> are : 1
which returns false -> from : 1
returns false are -> return : 1
false are return -> value : 1
are return value -> is : 1
must not see -> from : 1
must not see -> all : 1
not see from -> a : 1
see from a -> range : 2
to remove elements -> for : 1
remove elements for -> which : 1
returns typename fwditer -> fwditer : 1
fwditer fwditer predicate -> function : 1
fwditer predicate function -> template : 1
template items for -> which : 1
returns false from -> the : 1
false from the -> range : 1
removed is is -> actually : 1
is is actually -> erased : 1
from the underlying -> items : 2
the underlying items -> to : 2
underlying items to -> the : 2
right are assigned -> to : 1
are assigned to -> new : 1
assigned to new -> positions : 1
the elements for -> which : 1
which returns see -> from : 1
returns see from -> a : 1
function template replaces -> all : 3
function template replaces -> values : 1
template replaces all -> occurrences : 2
template replaces all -> values : 1
replaces all occurrences -> of : 2
occurrences of one -> value : 2
of one value -> with : 2
one value with -> another : 2
value with another -> typename : 2
with another typename -> void : 1
with another typename -> typename : 1
another typename void -> fwditer : 1
fwditer const const -> function : 1
const const function -> template : 2
const const function -> returns : 3
const const function -> searches : 2
const const function -> formats : 1
const const function -> is : 1
const const function -> computes : 2
occurrences of in -> with : 1
occurrences of in -> the : 1
of in with -> see : 1
in with see -> all : 1
with see all -> occurrences : 2
see all occurrences -> of : 3
occurrences of with -> for : 3
occurrences of with -> illustrates : 1
occurrences of with -> all : 1
occurrences of with -> function : 1
of with for -> an : 3
with for an -> example : 3
of the replacement -> function : 3
the replacement function -> template : 3
replacement function template -> assigns : 3
in is exactly -> comparisons : 4
in is exactly -> swaps : 2
in is exactly -> assignments : 1
copies a replacing -> occurrences : 1
a replacing occurrences -> of : 1
replacing occurrences of -> one : 1
another typename typename -> outiter : 1
outiter const const -> function : 1
template copies values -> from : 2
copies values from -> to : 2
starts at values -> that : 1
at values that -> are : 1
to are replaced -> with : 1
are replaced with -> other : 2
replaced with other -> values : 1
replaced with other -> elements : 1
with other values -> are : 1
values are copied -> without : 1
are copied without -> return : 2
copied without return -> value : 2
without return value -> is : 2
result the source -> and : 3
must not all -> occurrences : 1
not all occurrences -> of : 1
of with illustrates -> the : 1
with illustrates the -> replacement : 1
illustrates the replacement -> all : 1
the replacement all -> occurrences : 1
replacement all occurrences -> of : 1
of with all -> occurrences : 1
with all occurrences -> of : 1
of with function -> template : 1
template copies replacing -> those : 1
copies replacing those -> that : 1
replacing those that -> satisfy : 1
those that satisfy -> a : 1
that satisfy a -> typename : 2
satisfy a typename -> typename : 2
typename outiter iter -> outiter : 1
outiter iter outiter -> predicate : 1
iter outiter predicate -> const : 1
outiter predicate const -> function : 1
predicate const function -> template : 2
starts at elements -> for : 1
at elements for -> which : 1
which returns true -> are : 1
returns true are -> replaced : 1
true are replaced -> with : 1
with other elements -> are : 1
other elements are -> copied : 1
elements are copied -> without : 1
not see all -> occurrences : 1
template replaces values -> that : 1
replaces values that -> satisfy : 1
values that satisfy -> a : 1
void fwditer predicate -> const : 1
fwditer predicate const -> function : 1
replaces all values -> in : 1
values in for -> which : 1
in for which -> is : 1
in for which -> changes : 1
is true with -> see : 1
true with see -> all : 1
function template reverses -> the : 2
template reverses the -> values : 1
template reverses the -> order : 1
reverses the values -> in : 1
values in a -> void : 1
values in a -> common : 1
values in a -> range : 1
values in a -> single : 1
a void bidiiter -> function : 1
void bidiiter function -> template : 1
bidiiter function template -> reverses : 1
reverses the order -> of : 1
the range see -> a : 1
range see a -> for : 1
see a for -> an : 1
a for an -> function : 1
a for an -> implementation : 1
an function template -> swaps : 1
template swaps with -> for : 1
swaps with for -> all : 1
with for all -> in : 1
copies a range -> in : 1
in reverse typename -> outiter : 1
reverse typename outiter -> bidiiter : 1
typename outiter bidiiter -> outiter : 1
outiter bidiiter outiter -> function : 1
bidiiter outiter function -> template : 1
copies items in -> reverse : 1
copies items in -> a : 1
items in reverse -> order : 1
reverse order from -> the : 1
order from the -> range : 1
starts at in -> other : 1
starts at in -> the : 1
at in other -> is : 1
in other is -> first : 1
other is first -> copied : 1
is first copied -> to : 1
first copied to -> then : 1
copied to then -> is : 1
to then is -> copied : 1
then is copied -> to : 1
copied to and -> so : 1
to and so -> the : 1
and so the -> return : 1
and so the -> second : 1
and so the -> package : 1
so the return -> value : 1
must not a -> shows : 1
must not a -> range : 1
not a shows -> an : 1
example of reversing -> a : 1
of reversing a -> a : 1
reversing a a -> a : 1
function template rotates -> elements : 2
function template rotates -> and : 1
template rotates elements -> in : 2
rotates elements in -> a : 1
rotates elements in -> the : 1
elements in a -> void : 1
elements in a -> container : 3
elements in a -> public : 1
elements in a -> table : 1
elements in a -> typename : 1
a void fwditer -> fwditer : 1
void fwditer fwditer -> function : 1
fwditer fwditer function -> template : 1
fwditer function template -> rotates : 1
fwditer function template -> is : 1
to the left -> so : 1
to the left -> by : 2
the left so -> that : 1
left so that -> the : 1
range are moved -> to : 1
are moved to -> the : 1
moved to the -> start : 1
the new elements -> in : 1
new elements in -> the : 1
range are rotated -> to : 1
are rotated to -> the : 1
rotated to the -> see : 1
the see a -> range : 1
see a range -> by : 1
range by two -> for : 1
range by two -> a : 1
range by two -> all : 1
range by two -> shows : 1
by two for -> an : 1
two for an -> a : 1
for an a -> range : 1
an a range -> by : 1
an a range -> error : 1
by two a -> range : 1
two a range -> by : 1
by two all -> in : 1
two all in -> the : 1
function template moves -> into : 1
function template moves -> iterator : 1
template moves into -> position : 1
moves into position -> is : 1
into position is -> at : 1
position is at -> most : 1
position is at -> the : 1
template rotates and -> copies : 1
rotates and copies -> items : 1
and copies items -> in : 1
typename outiter fwditer -> fwditer : 1
outiter fwditer fwditer -> outiter : 1
fwditer fwditer outiter -> function : 1
fwditer outiter function -> template : 1
starts at followed -> by : 1
at followed by -> the : 1
by the elements -> from : 1
the elements from -> thereby : 1
the elements from -> to : 2
the elements from -> into : 2
elements from thereby -> effecting : 1
from thereby effecting -> a : 1
thereby effecting a -> rotation : 1
effecting a rotation -> to : 1
a rotation to -> the : 1
rotation to the -> the : 1
the the return -> value : 3
the result source -> and : 1
result source and -> result : 1
not a range -> by : 1
by two shows -> an : 1
two shows an -> example : 4
example of function -> template : 1
of function template -> assigns : 1
it returns is -> exactly : 3
it returns is -> at : 2
returns is exactly -> assignments : 1
returns is exactly -> comparisons : 2
template searches a -> range : 2
searches a range -> for : 2
a range for -> a : 2
for a typename -> typename : 1
the first subsequence -> within : 1
the first subsequence -> of : 1
first subsequence within -> the : 1
of the subsequence -> or : 2
the subsequence or -> if : 2
if the subsequence -> is : 2
the subsequence is -> not : 2
subsequence is not -> first : 2
is not first -> form : 2
not first form -> compares : 2
with and illustrates -> the : 1
and illustrates the -> function : 1
for a repeated -> typename : 1
a repeated typename -> typename : 1
repeated typename typename -> fwditer : 1
fwditer fwditer size -> const : 2
fwditer size const -> typename : 1
fwditer size const -> binarypredicate : 1
size const typename -> typename : 1
size const binarypredicate -> function : 1
const binarypredicate function -> template : 1
first subsequence of -> adjacent : 1
subsequence of adjacent -> occurrences : 1
of adjacent occurrences -> of : 1
adjacent occurrences of -> in : 1
function template computes -> set : 1
function template computes -> intersection : 1
function template computes -> symmetric : 1
function template computes -> union : 1
function template computes -> absolute : 2
function template computes -> argument : 1
function template computes -> function : 9
function template computes -> hyperbolic : 6
function template computes -> natural : 2
function template computes -> common : 2
function template computes -> normalized : 1
function template computes -> int : 1
function template computes -> square : 2
function template computes -> a : 1
function template computes -> differences : 1
function template computes -> inner : 1
function template computes -> an : 1
function template computes -> inverse : 4
function template computes -> const : 1
template computes set -> difference : 1
computes set difference -> of : 1
difference of sorted -> typename : 2
of sorted typename -> typename : 4
from the sorted -> range : 2
from the sorted -> ranges : 2
sorted range to -> the : 2
the range starting -> at : 6
range starting at -> only : 3
range starting at -> if : 1
range starting at -> unless : 1
range starting at -> the : 1
range starting at -> position : 1
starting at only -> those : 3
at only those -> elements : 3
only those elements -> that : 3
only those elements -> of : 2
those elements that -> are : 3
not also present -> in : 2
also present in -> the : 3
sorted range are -> an : 2
sorted range are -> copied : 1
range are an -> iterator : 2
are an iterator -> that : 2
the result range -> is : 4
the result range -> can : 1
result range is -> result : 4
range is result -> range : 4
is result range -> must : 4
result range must -> not : 4
overlap either source -> first : 4
either source first -> version : 4
source first version -> compares : 4
whether the difference -> between : 1
difference between shows -> an : 1
between shows an -> example : 1
a set difference -> using : 1
set difference using -> the : 1
difference using the -> difference : 1
difference using the -> symmetric : 1
using the difference -> between : 1
between the difference -> between : 1
difference between for -> in : 1
between for in -> and : 1
all in in -> which : 4
not in it -> returns : 1
template computes intersection -> of : 1
computes intersection of -> sorted : 1
intersection of sorted -> typename : 1
are also present -> in : 1
test whether two -> shows : 1
whether two shows -> an : 1
example of intersection -> using : 1
of intersection using -> two : 1
intersection using two -> two : 1
using two two -> for : 1
two two for -> in : 1
two for in -> and : 3
which is in -> it : 1
which is in -> the : 1
is in it -> returns : 1
is in it -> remains : 1
template computes symmetric -> difference : 1
computes symmetric difference -> of : 1
template merges elements -> from : 2
merges elements from -> the : 2
copying the merged -> results : 2
the merged results -> to : 2
merged results to -> the : 2
results to the -> range : 2
range are copied -> from : 2
are copied from -> and : 1
are copied from -> an : 1
are copied from -> a : 2
are copied from -> the : 3
are copied from -> starting : 1
copied from and -> only : 1
copied from and -> each : 1
from and only -> those : 1
and only those -> not : 1
only those not -> present : 1
those not present -> in : 1
copied from an -> iterator : 1
from an iterator -> that : 1
whether the symmetric -> difference : 1
symmetric difference between -> two : 3
between two shows -> an : 1
a set symmetric -> difference : 1
set symmetric difference -> using : 1
symmetric difference using -> the : 1
using the symmetric -> difference : 1
between two the -> symmetric : 1
between two the -> exact : 1
between two the -> return : 1
two the symmetric -> difference : 1
template computes union -> of : 1
computes union of -> sorted : 1
union of sorted -> typename : 1
at if an -> element : 1
if an element -> is : 2
if an element -> of : 1
an element is -> present : 1
an element is -> included : 1
an element is -> that : 1
element is present -> in : 1
is present in -> both : 1
present in both -> only : 1
in both only -> one : 1
both only one -> element : 1
only one element -> is : 1
one element is -> copied : 1
element is copied -> to : 1
the result if -> the : 1
result if the -> input : 1
the input ranges -> contain : 1
input ranges contain -> each : 1
ranges contain each -> occurrence : 1
contain each occurrence -> of : 1
occurrence of an -> element : 1
of an element -> in : 1
an element in -> an : 1
an element in -> the : 1
an element in -> a : 4
element in an -> input : 1
input range results -> in : 1
range results in -> a : 1
in a copy -> in : 1
a copy in -> the : 1
copy in the -> result : 1
result an iterator -> that : 1
whether the union -> of : 1
of two shows -> an : 1
a set union -> using : 1
set union using -> the : 1
union using the -> union : 1
using the union -> of : 1
two the union -> of : 1
of two for -> in : 1
template sorts a -> range : 2
template sorts a -> heap : 2
sorts a range -> in : 2
range in void -> randiter : 1
in void randiter -> typename : 2
sorts the range -> in : 2
the range in -> the : 2
the range in -> a : 2
the range in -> which : 1
range in the -> sort : 2
in the sort -> is : 2
the sort is -> not : 3
the sort is -> so : 2
sort is not -> so : 2
sort is not -> that : 1
not so equivalent -> elements : 2
so equivalent elements -> do : 2
so equivalent elements -> preserve : 1
equivalent elements do -> not : 2
elements do not -> preserve : 2
do not preserve -> their : 2
not preserve their -> original : 2
preserve their original -> first : 3
their original first -> version : 3
original first version -> compares : 3
in is log -> comparisons : 1
is log comparisons -> in : 1
log comparisons in -> the : 1
comparisons in the -> average : 1
in the average -> in : 1
the average in -> which : 1
average in which -> worst : 1
in which worst -> case : 1
which worst case -> performance : 1
worst case performance -> might : 1
case performance might -> be : 1
performance might be -> use : 1
might be use -> if : 1
be use if -> the : 1
use if the -> performance : 1
if the performance -> is : 1
performance is more -> important : 1
is more important -> than : 1
more important than -> the : 1
important than the -> average : 1
than the average -> function : 1
the average function -> function : 1
average function function -> function : 1
sorts a heap -> in : 2
heap in void -> randiter : 1
range the sort -> is : 1
a for in -> is : 1
at most log -> in : 2
at most log -> swaps : 1
most log in -> which : 2
in which function -> function : 1
which function function -> function : 1
range in stable -> typename : 1
in stable typename -> bidiiter : 1
stable typename bidiiter -> bidiiter : 1
elements in each -> partition : 1
in each partition -> is : 1
each partition is -> return : 1
partition is return -> value : 1
is return value -> is : 3
illustrates the partition -> let : 1
the partition let -> be : 1
partition let be -> an : 1
in and false -> for : 1
and false for -> all : 1
returns is linear -> if : 1
linear if there -> is : 1
there is enough -> at : 1
is enough at -> most : 1
enough at most -> log : 1
most log swaps -> are : 1
log swaps are -> in : 1
swaps are in -> which : 1
are in which -> in : 1
in which in -> all : 1
which in all -> is : 1
in all is -> called : 1
all is called -> exactly : 1
range in place -> in : 1
in place in -> stable : 1
place in stable -> void : 1
in stable void -> randiter : 1
stable void randiter -> typename : 1
sort is so -> equivalent : 1
sort is so -> the : 1
is so equivalent -> elements : 1
equivalent elements preserve -> their : 1
in which provided -> that : 1
which provided that -> enough : 1
provided that enough -> memory : 1
that enough memory -> is : 1
enough memory is -> available : 1
memory is available -> for : 1
is available for -> temporary : 1
available for temporary -> if : 1
for temporary if -> memory : 1
temporary if memory -> is : 1
if memory is -> the : 1
memory is the -> complexity : 1
is the complexity -> is : 1
complexity is at -> most : 1
template swaps two -> void : 1
template swaps two -> class : 1
swaps two void -> function : 1
two void function -> template : 1
values of and -> standard : 1
of and standard -> containers : 1
and standard containers -> all : 1
and standard containers -> return : 1
standard containers all -> specialize : 1
containers all specialize -> the : 1
all specialize the -> template : 1
the template to -> call : 1
the template to -> obtain : 1
template to call -> their : 1
to call their -> member : 1
call their member -> which : 1
their member which -> usually : 1
member which usually -> run : 1
which usually run -> in : 1
usually run in -> constant : 1
run in constant -> regardless : 1
in constant regardless -> of : 1
constant regardless of -> the : 1
the function function -> function : 2
the function function -> opens : 1
template swaps all -> values : 1
template swaps all -> the : 1
swaps all values -> in : 1
in two typename -> function : 1
two typename function -> template : 1
swaps all the -> elements : 1
elements in with -> corresponding : 1
in with corresponding -> elements : 1
with corresponding elements -> in : 1
corresponding elements in -> the : 1
starts at has -> the : 1
at has the -> same : 1
same length as -> the : 1
length as the -> first : 1
first the return -> value : 1
two ranges must -> not : 1
must not function -> template : 1
not function template -> performs : 1
function template performs -> the : 1
function template performs -> bitwise : 6
function template performs -> negation : 1
function template performs -> const : 6
function template performs -> right : 1
function template performs -> left : 1
function template performs -> logical : 2
template performs the -> equivalent : 1
performs the equivalent -> of : 8
equivalent of for -> all : 1
of for all -> in : 1
template copies one -> or : 1
copies one or -> two : 1
one or two -> ranges : 1
or two ranges -> after : 1
two ranges after -> applying : 1
ranges after applying -> an : 1
after applying an -> operator : 1
applying an operator -> to : 1
operator to each -> typename : 1
operator to each -> element : 2
to each typename -> typename : 1
each typename typename -> outiter : 1
initer outiter unaryoperation -> typename : 1
outiter unaryoperation typename -> typename : 1
unaryoperation typename typename -> typename : 1
outiter outiter binaryoperation -> function : 1
outiter binaryoperation function -> template : 1
binaryoperation function template -> assigns : 1
template assigns a -> new : 1
assigns a new -> value : 1
a new value -> to : 1
new value to -> each : 1
at in the -> first : 1
first the new -> value : 1
value is in -> which : 4
value is in -> the : 6
value is in -> function : 9
value is in -> in : 5
an iterator over -> the : 1
iterator over the -> second : 1
over the second -> the : 1
second the new -> value : 1
in which ranges -> over : 1
which ranges over -> and : 1
ranges over and -> iterates : 1
over and iterates -> over : 1
and iterates over -> the : 1
iterates over the -> range : 1
over the range -> that : 1
starts at the -> second : 1
starts at the -> partial : 1
at the second -> input : 1
at the second -> version : 1
the second input -> range : 1
second input range -> must : 1
input range must -> be : 1
must be at -> least : 3
be at least -> as : 1
be at least -> function : 1
be at least -> which : 1
least as long -> as : 1
as the return -> value : 2
as the return -> type : 1
result the result -> range : 1
result range can -> be : 1
range can be -> the : 1
same as any -> of : 1
as any of -> the : 1
the input first -> form : 1
input first form -> of : 1
first form of -> assigns : 1
first form of -> reads : 2
form of assigns -> for : 1
of assigns for -> all : 1
all in second -> form : 1
in second form -> assigns : 1
second form assigns -> for : 1
form assigns for -> all : 1
in is or -> is : 1
is or is -> called : 1
or is called -> exactly : 1
or is called -> to : 1
called exactly in -> which : 1
exactly in which -> for : 1
in which for -> a : 1
which for a -> unary : 1
unary operator or -> for : 1
operator or for -> a : 1
operator or for -> typename : 1
for a binary -> function : 2
a binary function -> function : 1
a binary function -> that : 1
a binary function -> and : 2
a binary function -> the : 2
binary function function -> function : 1
template removes equal -> values : 1
removes equal values -> from : 1
equal values from -> a : 1
from a fwditer -> fwditer : 1
function template repetitions -> of : 1
template repetitions of -> identical : 1
repetitions of identical -> elements : 1
of identical elements -> from : 1
of identical elements -> is : 1
identical elements from -> the : 1
for each sequence -> of : 2
each sequence of -> identical : 2
sequence of identical -> only : 2
of identical only -> the : 2
identical only the -> first : 2
the input range -> does : 1
the input range -> without : 1
input range does -> not : 1
range does not -> have : 1
to be but -> if : 1
be but if -> it : 1
if it all -> duplicates : 1
it all duplicates -> are : 1
all duplicates are -> leaving : 1
duplicates are leaving -> only : 1
are leaving only -> unique : 1
leaving only unique -> values : 1
only unique values -> the : 1
unique values the -> is : 1
values the is -> actually : 1
the is actually -> erased : 1
new positions at -> lower : 1
positions at lower -> indices : 1
at lower indices -> the : 1
lower indices the -> so : 1
indices the so -> they : 1
the so they -> overwrite : 1
that are see -> unique : 1
are see unique -> for : 1
see unique for -> an : 1
unique for an -> example : 2
the removal first -> form : 1
removal first form -> compares : 1
or is it -> returns : 2
template copies unique -> typename : 1
copies unique typename -> outiter : 1
unique typename outiter -> initer : 1
initer outiter typename -> typename : 1
initer outiter binarypredicate -> function : 1
outiter binarypredicate function -> template : 1
starts at removing -> for : 1
at removing for -> each : 1
removing for each -> sequence : 1
the result first -> form : 1
result first form -> compares : 1
form calls unique -> for : 1
calls unique for -> an : 1
an example that -> calls : 1
example that calls -> unique : 1
that calls unique -> unique : 1
calls unique unique -> function : 1
unique unique function -> template : 1
unique function template -> assigns : 1
template finds upper -> bound : 1
finds upper bound -> for : 1
upper bound for -> a : 1
upper bound for -> all : 1
to the last -> position : 1
to the last -> occurrence : 2
to the last -> element : 7
to the last -> item : 2
to the last -> character : 1
the last position -> where : 1
last position where -> you : 1
sorted shows an -> example : 1
example of finding -> the : 1
finding the bounds -> for : 1
as the upper -> bound : 2
note that it -> returns : 1
it returns as -> the : 1
range for values -> in : 1
upper bound is -> equal : 1
function function header -> declares : 2
function function header -> the : 1
function function header -> is : 1
function header declares -> a : 1
function header declares -> types : 1
single class and -> some : 1
class and some -> related : 1
and some related -> a : 1
some related a -> is : 1
related a is -> a : 1
of the bitwise -> operators : 1
the bitwise operators -> are : 1
bitwise operators are -> overloaded : 1
operators are overloaded -> to : 1
are overloaded to -> work : 2
overloaded to work -> with : 2
work with in -> the : 1
with in the -> usual : 1
usual and you -> can : 1
refer to individual -> bits : 1
to individual bits -> by : 1
individual bits by -> boost : 1
bits by boost -> project : 1
by boost project -> has : 1
boost project has -> a : 2
boost project has -> additional : 2
boost project has -> templates : 1
project has a -> class : 1
project has a -> generalization : 1
for a bit -> sequence : 1
for a bit -> in : 1
a bit sequence -> that : 1
bit sequence that -> can : 1
sequence that can -> change : 1
can change size -> at : 1
change size at -> see : 1
size at see -> for : 1
at see for -> information : 1
about class class -> template : 6
class class template -> sequence : 1
class class template -> complex : 1
class class template -> class : 5
class class template -> base : 12
class class template -> logical : 2
class class template -> binds : 2
class class template -> calls : 8
class class template -> binary : 14
class class template -> unary : 1
class class template -> functional : 2
class class template -> represents : 3
class class template -> output : 3
class class template -> iterator : 6
class class template -> input : 2
class class template -> template : 2
class class template -> list : 1
class class template -> facet : 20
class class template -> associative : 2
class class template -> encapsulates : 1
class class template -> smart : 1
class class template -> priority : 1
class class template -> queue : 1
class class template -> set : 2
class class template -> stack : 1
class class template -> stream : 1
class class template -> helper : 4
class class template -> array : 1
class class template -> typename : 1
class template sequence -> of : 1
template sequence of -> class : 1
sequence of class -> proxy : 1
of class proxy -> class : 1
class proxy class -> to : 1
class proxy class -> for : 1
proxy class to -> simulate : 1
class to simulate -> a : 1
to simulate a -> bit : 1
simulate a bit -> reference : 1
a bit reference -> class : 1
bit reference class -> friend : 1
reference class friend -> class : 1
class friend class -> bool : 1
class bool operator -> constructors : 1
bool operator constructors -> long : 1
operator constructors long -> typename : 1
constructors long typename -> typename : 1
long typename typename -> explicit : 1
typename typename explicit -> typename : 2
typename explicit typename -> typename : 2
explicit typename typename -> basic : 1
explicit typename typename -> the : 1
typename typename basic -> n : 1
typename basic n -> bitset : 1
basic n bitset -> operations : 1
n bitset operations -> int : 1
bitset operations int -> element : 1
operations int element -> access : 1
int element access -> reference : 1
element access reference -> bool : 1
element access reference -> reference : 3
access reference bool -> unsigned : 1
reference bool unsigned -> long : 1
bool unsigned long -> template : 1
unsigned long template -> typename : 1
long template typename -> typename : 1
template typename typename -> bool : 2
template typename typename -> typename : 9
template typename typename -> outiter : 2
typename bool bool -> bool : 1
bool bool bool -> bool : 3
bool bool bool -> const : 2
bool bool bool -> iostate : 1
bool bool const -> class : 1
bool bool const -> with : 1
const class template -> offers : 1
const class template -> is : 18
const class template -> wraps : 3
const class template -> represents : 2
class template offers -> a : 1
template offers a -> convenient : 1
offers a convenient -> way : 1
way to manipulate -> a : 1
to manipulate a -> sequence : 1
manipulate a sequence -> of : 1
of bits is -> specified : 1
bits is specified -> as : 1
template so each -> object : 1
so each object -> can : 1
each object can -> have : 1
object can have -> a : 2
a different each -> bit : 1
different each bit -> in : 1
each bit in -> a : 1
bit in a -> can : 1
bit in a -> new : 1
bit in a -> friend : 1
bit in a -> the : 2
bit in a -> so : 1
can be set -> or : 1
can be set -> to : 1
can be set -> by : 1
be set or -> or : 1
set or or -> reset : 1
or or reset -> or : 1
or reset or -> bit : 1
reset or bit -> positions : 1
or bit positions -> are : 1
bit positions are -> numbered : 1
positions are numbered -> from : 1
are numbered from -> right : 1
numbered from right -> to : 1
right to that -> is : 1
to that is -> the : 1
a standard container -> and : 1
a standard container -> that : 3
a standard container -> is : 1
standard container and -> does : 1
container and does -> not : 1
not provide iterators -> or : 1
provide iterators or -> support : 1
iterators or support -> generic : 1
or support generic -> for : 1
support generic for -> a : 1
generic for a -> container : 1
for a container -> that : 1
container that holds -> a : 1
that holds a -> sequence : 1
that holds a -> pointer : 1
holds a sequence -> of : 1
sequence of bit -> use : 1
of bit use -> or : 1
bit use or -> later : 1
use or later -> in : 1
or later in -> this : 1
chapter to learn -> including : 1
to learn including -> why : 1
learn including why -> you : 1
including why you -> should : 1
why you should -> not : 1
why you should -> use : 1
you should not -> use : 1
you should not -> alter : 1
should not use -> in : 1
not use in -> the : 1
following member function -> is : 1
following member function -> the : 3
is the template -> parameter : 1
is the template -> the : 2
template parameter of -> all : 1
parameter of all -> long : 1
of all long -> the : 1
all long the -> first : 1
long the first -> bits : 1
the first bits -> to : 1
first bits to -> in : 1
bits to in -> which : 1
in which if -> all : 1
which if all -> other : 1
if all other -> bits : 1
all other bits -> are : 1
other bits are -> reset : 1
bits are reset -> to : 1
are reset to -> if : 1
reset to if -> excess : 1
to if excess -> bits : 1
if excess bits -> of : 1
excess bits of -> are : 1
bits of are -> typename : 1
of are typename -> typename : 1
are typename typename -> explicit : 1
typename typename the -> from : 1
typename the from -> the : 1
the from the -> character : 1
the character string -> starting : 1
the character string -> that : 1
character string starting -> at : 1
string starting at -> index : 1
string starting at -> position : 1
starting at index -> and : 1
at index and -> extending : 1
index and extending -> for : 1
and extending for -> characters : 1
and extending for -> up : 1
extending for characters -> to : 1
for characters to -> the : 1
of the whichever -> comes : 1
the whichever comes -> the : 1
comes the default -> is : 1
default is to -> use : 1
use all characters -> in : 1
all characters in -> the : 1
the a character -> equal : 1
a character equal -> to : 1
character equal to -> resets : 1
equal to resets -> a : 1
to resets a -> sets : 1
resets a sets -> a : 1
a sets a -> and : 1
sets a and -> any : 1
a and any -> other : 1
and any other -> character : 1
and any other -> value : 1
any other character -> causes : 1
any other character -> extracting : 1
other character causes -> the : 1
character causes the -> constructor : 1
causes the constructor -> to : 1
constructor to throw -> rightmost : 1
to throw rightmost -> character : 1
throw rightmost character -> of : 1
rightmost character of -> the : 1
rightmost character of -> initializes : 1
character of the -> substring : 1
character of the -> monetary : 1
character of the -> sign : 1
character of the -> a : 3
of the substring -> the : 1
the substring the -> character : 1
substring the character -> or : 1
the character or -> the : 1
the character or -> for : 1
the character or -> string : 1
character or the -> rightmost : 1
or the rightmost -> character : 1
the rightmost character -> of : 1
the rightmost character -> compiler : 1
character of initializes -> the : 1
of initializes the -> bit : 1
initializes the bit -> at : 1
the bit at -> index : 1
the bit at -> position : 6
bit at index -> of : 1
at index of -> the : 1
index of the -> and : 1
the and subsequent -> bits : 1
and subsequent bits -> are : 1
subsequent bits are -> initialized : 1
bits are initialized -> by : 1
initialized by characters -> at : 1
by characters at -> preceding : 1
characters at preceding -> indices : 1
at preceding indices -> of : 1
preceding indices of -> bits : 1
indices of bits -> left : 1
of bits left -> uninitialized : 1
bits left uninitialized -> by : 1
left uninitialized by -> the : 1
uninitialized by the -> string : 1
by the string -> are : 1
string are all -> of : 1
are all of -> the : 1
example are equal -> to : 1
equal to unwieldy -> declaration : 1
to unwieldy declaration -> is : 1
unwieldy declaration is -> due : 1
declaration is due -> to : 1
is due to -> the : 1
due to the -> class : 1
due to the -> nature : 1
for the common -> case : 1
the common case -> of : 1
common case of -> a : 1
a plain you -> can : 1
plain you can -> read : 1
can read the -> declaration : 1
read the declaration -> returns : 1
the declaration returns -> returns : 1
declaration returns returns -> returns : 1
returns returns returns -> bits : 1
returns returns bits -> to : 1
returns bits to -> the : 2
bits to the -> left : 1
bits to the -> right : 1
the left by -> vacated : 2
left by vacated -> bits : 2
filled with returns -> bits : 1
filled with returns -> if : 1
with returns bits -> to : 1
the right by -> vacated : 2
right by vacated -> bits : 2
with returns if -> every : 1
if every bit -> in : 1
every bit in -> has : 1
bit in has -> the : 1
bit in has -> a : 1
in has the -> same : 1
as the corresponding -> bit : 1
the corresponding bit -> in : 2
the corresponding bit -> is : 2
corresponding bit in -> if : 1
corresponding bit in -> a : 1
bit in if -> any : 1
in if any -> bit : 1
in if any -> multibyte : 1
any bit in -> has : 1
in has a -> different : 1
has a different -> value : 1
a different value -> than : 1
a different value -> the : 1
different value than -> the : 1
value than the -> corresponding : 1
than the corresponding -> bit : 1
in a new -> with : 1
a new with -> its : 2
a new with -> all : 1
new with its -> bits : 2
with its bits -> shifted : 2
its bits shifted -> to : 2
bits shifted to -> the : 2
shifted to the -> left : 1
shifted to the -> right : 1
filled with a -> new : 2
new with all -> bits : 1
with all bits -> a : 1
all bits a -> object : 1
bits a object -> for : 1
a object for -> the : 3
object for the -> bit : 1
object for the -> container : 3
for the bit -> at : 1
bit at position -> the : 2
bit at position -> if : 2
bit at position -> to : 1
bit at position -> throws : 1
at position the -> behavior : 2
at position the -> third : 1
at position the -> return : 1
at position the -> string : 1
at position the -> substring : 1
position the behavior -> is : 2
if is out -> of : 3
of the bit -> at : 2
of the bit -> number : 1
of the bit -> value : 1
out of this -> member : 1
of this member -> function : 1
this member function -> was : 1
member function was -> added : 1
function was added -> to : 1
was added to -> the : 1
standard as part -> of : 1
of the technical -> corrigendum : 1
the technical corrigendum -> so : 1
technical corrigendum so -> it : 1
corrigendum so it -> might : 1
so it might -> not : 1
it might not -> yet : 1
might not yet -> be : 1
not yet be -> supported : 1
yet be supported -> by : 1
be supported by -> some : 1
supported by some -> if : 1
by some if -> any : 1
some if any -> bit : 1
bit is returns -> if : 1
is returns if -> all : 1
returns if all -> bits : 2
if all bits -> are : 2
all bits are -> the : 1
all bits are -> returns : 1
bits are the -> number : 1
are the number -> of : 1
of bits all -> that : 1
bits all that -> sets : 1
all that sets -> bits : 1
that sets bits -> to : 1
sets bits to -> and : 1
bits to and -> bits : 1
to and bits -> to : 1
and bits to -> returns : 1
bits to returns -> the : 1
returns the bit -> at : 2
at position if -> is : 3
at position if -> the : 1
position if is -> throws : 2
position if is -> inserted : 4
position if is -> see : 1
if is throws -> returns : 3
is throws returns -> if : 1
is throws returns -> all : 1
is throws returns -> the : 1
throws returns if -> all : 1
bits are returns -> if : 1
are returns if -> any : 1
returns if any -> bit : 1
bit is all -> returns : 1
is all returns -> the : 1
all returns the -> bit : 1
throws returns all -> returns : 1
returns all returns -> int : 1
all returns int -> val : 1
returns int val -> the : 1
int val the -> bit : 1
val the bit -> at : 1
at position to -> if : 1
at position to -> the : 1
position to if -> is : 1
throws returns the -> value : 1
returns the value -> of : 4
returns the value -> used : 1
returns the value -> might : 1
at position throws -> if : 1
position throws if -> is : 1
throws if is -> class : 1
if is class -> class : 1
is class class -> a : 1
is class class -> function : 2
is class class -> type : 1
is class class -> class : 4
is class class -> template : 2
class class a -> string : 1
class a string -> representation : 1
string representation of -> the : 1
each bit is -> converted : 1
the character if -> reset : 1
the character if -> the : 4
character if reset -> or : 1
if reset or -> if : 1
reset or if -> bit : 1
or if bit -> position : 1
if bit position -> is : 1
bit position is -> the : 1
position is the -> rightmost : 1
position is the -> function : 1
position is the -> at : 1
position is the -> current : 1
is the rightmost -> character : 1
rightmost character compiler -> cannot : 1
character compiler cannot -> deduce : 1
cannot deduce the -> template : 1
template parameters when -> calling : 1
parameters when calling -> so : 1
when calling so -> you : 1
calling so you -> must : 1
must specify them -> str : 1
specify them str -> the : 1
them str the -> integral : 1
str the integral -> value : 1
if is too -> large : 1
if is too -> a : 1
is too large -> for : 1
is too large -> or : 1
is too large -> to : 1
too large for -> it : 1
large for it -> throws : 1
for it throws -> class : 1
it throws class -> proxy : 1
throws class proxy -> class : 1
proxy class for -> a : 1
class for a -> bit : 1
class for a -> is : 1
a bit in -> a : 1
a friend class -> bool : 1
class bool class -> is : 1
bool class is -> a : 1
is a proxy -> that : 2
a proxy that -> refers : 1
a proxy that -> represents : 1
proxy that refers -> to : 1
that refers to -> a : 1
that refers to -> the : 1
a single bit -> in : 2
single bit in -> a : 2
a the constructor -> is : 2
a the constructor -> might : 1
constructor is so -> instances : 1
constructor is so -> only : 1
is so instances -> can : 1
so instances can -> be : 1
instances can be -> created : 1
be created only -> by : 1
created only by -> the : 1
by the particularly -> by : 1
the particularly by -> its : 1
particularly by its -> the : 1
by its the -> member : 1
its the member -> functions : 1
member functions the -> referenced : 1
functions the referenced -> bit : 1
the referenced bit -> to : 1
the referenced bit -> in : 1
referenced bit to -> in : 1
bit to in -> the : 1
in the underlying -> returns : 2
the underlying returns -> the : 1
the underlying returns -> class : 1
underlying returns the -> logical : 1
returns the logical -> negation : 3
negation of the -> referenced : 1
the referenced the -> value : 1
the referenced the -> referenced : 1
referenced the value -> of : 1
referenced the referenced -> bit : 1
referenced bit in -> the : 1
bit in the -> underlying : 1
underlying returns class -> class : 1
returns class class -> function : 2
returns class class -> class : 14
returns class class -> type : 1
returns class class -> template : 1
class class function -> function : 69
class class function -> template : 1
class function function -> template : 27
class function function -> function : 22
class function function -> header : 1
class function function -> class : 20
class function function -> in : 3
template performs bitwise -> and : 1
template performs bitwise -> inclusive : 1
template performs bitwise -> exclusive : 2
template performs bitwise -> const : 2
performs bitwise and -> of : 1
bitwise and of -> two : 1
and of two -> const : 1
two const operator -> takes : 3
const operator takes -> two : 3
takes two and -> returns : 3
two and returns -> a : 3
returns a new -> that : 3
a new that -> represents : 3
new that represents -> the : 3
that represents the -> of : 1
that represents the -> inclusive : 1
that represents the -> exclusive : 1
that represents the -> value : 1
that represents the -> difference : 2
that represents the -> status : 1
that represents the -> same : 3
that represents the -> distance : 1
represents the of -> the : 1
the in other -> an : 3
in other an -> output : 3
other an output -> bit : 3
an output bit -> is : 6
output bit is -> set : 3
output bit is -> class : 1
output bit is -> reset : 2
is set only -> when : 1
set only when -> the : 1
when the corresponding -> bit : 2
when the corresponding -> bits : 1
when the corresponding -> placement : 1
corresponding bit is -> set : 2
in both an -> output : 1
bit is class -> class : 1
performs bitwise inclusive -> or : 1
inclusive or of -> two : 1
or of two -> const : 2
represents the inclusive -> of : 1
the inclusive of -> the : 1
inclusive of the -> in : 1
is set when -> the : 2
set when the -> corresponding : 2
set in either -> and : 1
in either and -> an : 2
either and an -> output : 2
and an output -> bit : 2
and an output -> you : 1
and an output -> in : 1
bit is reset -> if : 2
is reset if -> the : 2
reset if the -> corresponding : 2
corresponding bits in -> both : 2
bits in both -> operands : 2
in both operands -> are : 2
operands are class -> class : 2
are class class -> function : 3
are class class -> template : 1
are class class -> class : 8
performs bitwise exclusive -> or : 1
performs bitwise exclusive -> const : 1
exclusive or of -> two : 1
represents the exclusive -> of : 1
the exclusive of -> the : 1
exclusive of the -> in : 1
corresponding bits are -> not : 1
bits are not -> equal : 1
not equal in -> either : 1
equal in either -> and : 1
function template reads -> a : 5
template reads a -> typename : 1
template reads a -> complex : 1
template reads a -> line : 2
template reads a -> string : 1
reads a typename -> const : 1
a typename const -> operator : 2
typename const operator -> reads : 1
typename const operator -> writes : 1
typename const operator -> prints : 1
const operator reads -> a : 1
operator reads a -> from : 1
operator reads a -> complex : 1
operator reads a -> string : 1
reads a from -> an : 1
a from an -> input : 1
an input it -> extracts : 1
input it extracts -> up : 1
it extracts up -> to : 1
extracts up to -> characters : 1
to characters and -> constructs : 1
to characters and -> stores : 1
characters and constructs -> a : 1
and constructs a -> object : 1
constructs a object -> using : 1
constructs a object -> according : 1
constructs a object -> that : 1
constructs a object -> for : 2
a object using -> the : 1
the same format -> as : 2
the same format -> used : 1
same format as -> the : 2
format as the -> string : 1
format as the -> member : 1
as the string -> and : 1
as the string -> followed : 1
the string and -> characters : 1
the string and -> replaces : 1
string and characters -> are : 1
and characters are -> input : 1
characters are input -> stops : 1
are input stops -> when : 1
input stops when -> it : 1
stops when it -> reaches : 1
when it reaches -> any : 1
it reaches any -> other : 1
reaches any other -> character : 1
other character extracting -> that : 1
character extracting that -> other : 1
extracting that other -> class : 1
that other class -> class : 1
other class class -> function : 2
other class class -> class : 1
function template writes -> a : 3
template writes a -> typename : 1
template writes a -> complex : 1
template writes a -> string : 1
writes a typename -> const : 1
const operator writes -> a : 1
const operator writes -> the : 1
operator writes a -> on : 1
operator writes a -> single : 1
writes a on -> an : 1
a on an -> output : 1
on an output -> using : 1
an output using -> the : 1
output using the -> same : 1
output using the -> stream : 1
as the member -> class : 1
the member class -> class : 1
member class class -> function : 1
function header the -> c : 1
header the c -> standard : 6
c standard declares -> the : 1
c standard declares -> a : 1
c standard declares -> several : 1
c standard declares -> types : 1
standard declares the -> the : 1
declares the the -> header : 1
the the header -> is : 1
the the header -> for : 1
header is unique -> in : 1
is unique in -> that : 2
unique in that -> you : 1
unique in that -> it : 1
can it multiple -> times : 1
it multiple times -> to : 1
it multiple times -> before : 1
multiple times to -> obtain : 1
times to obtain -> different : 1
to obtain different -> effects : 1
obtain different effects -> on : 1
different effects on -> whether : 1
effects on whether -> the : 1
whether the macro -> is : 1
is defined at -> the : 1
defined at the -> time : 1
the time of -> are : 1
time of are -> checked : 1
of are checked -> at : 1
are checked at -> you : 1
checked at you -> can : 1
at you can -> use : 1
can use templates -> to : 1
use templates to -> craft : 1
templates to craft -> see : 1
to craft see -> for : 1
craft see for -> information : 1
about the boost -> which : 1
the boost which -> supports : 1
boost which supports -> of : 1
which supports of -> consider : 1
supports of consider -> using : 1
of consider using -> which : 1
of consider using -> unit : 1
consider using which -> offer : 1
using which offer -> more : 1
which offer more -> flexibility : 1
more flexibility and -> macro : 1
more flexibility and -> but : 1
flexibility and macro -> checks : 1
and macro checks -> an : 1
macro checks an -> assertion : 1
checks an assertion -> at : 1
an assertion at -> with : 1
assertion at with -> no : 1
at with no -> the : 1
no the macro -> ensures : 1
the macro ensures -> the : 1
macro ensures the -> is : 1
ensures the is -> true : 1
the is true -> if : 1
is true if -> nothing : 1
is true if -> a : 1
is true if -> multibyte : 1
true if nothing -> and : 1
if nothing and -> execution : 1
nothing and execution -> continues : 1
execution continues if -> the : 1
continues if the -> expression : 1
the expression evaluates -> to : 1
expression evaluates to -> prints : 1
evaluates to prints -> a : 1
to prints a -> message : 1
prints a message -> to : 1
a message to -> the : 1
message to the -> standard : 1
the standard error -> file : 1
standard error file -> and : 1
error file and -> calls : 1
file and calls -> the : 1
calls the format -> of : 1
the format of -> the : 1
the format of -> using : 2
format of the -> message : 1
of the message -> is : 1
of the message -> catalog : 1
the message is -> but : 1
the message is -> the : 1
message is but -> it : 1
but it includes -> a : 1
it includes a -> textual : 1
includes a textual -> representation : 1
a textual representation -> of : 1
textual representation of -> and : 1
representation of and -> the : 1
the filename and -> line : 1
line number where -> the : 1
number where the -> call : 1
where the call -> appears : 1
the call appears -> the : 1
call appears the -> values : 1
appears the values -> of : 1
and the macro -> does : 1
the macro does -> not : 1
macro does not -> evaluate : 1
does not evaluate -> and : 1
not evaluate and -> has : 1
evaluate and has -> no : 1
and has no -> function : 1
has no function -> in : 1
no function in -> macro : 1
function in macro -> enables : 1
in macro enables -> or : 1
macro enables or -> disables : 1
enables or disables -> compilation : 1
or disables compilation -> of : 1
disables compilation of -> macro : 1
compilation of macro -> is : 1
of macro is -> not : 1
not defined by -> or : 1
defined by or -> anywhere : 1
by or anywhere -> else : 1
or anywhere else -> in : 1
define the macro -> before : 1
the macro before -> including : 1
macro before including -> the : 1
before including the -> header : 1
including the header -> to : 1
the header to -> disable : 1
header to disable -> the : 1
to disable the -> one : 1
disable the one -> source : 1
the one source -> you : 1
one source you -> can : 1
and undefine multiple -> each : 1
undefine multiple each -> time : 1
multiple each time -> followed : 1
each time followed -> by : 1
time followed by -> to : 1
followed by to -> enable : 1
by to enable -> or : 1
to enable or -> disable : 1
enable or disable -> the : 1
or disable the -> macro : 1
disable the macro -> multiple : 1
the macro multiple -> times : 1
macro multiple times -> in : 1
multiple times in -> the : 1
times in the -> same : 1
same source header -> the : 1
source header the -> c : 1
standard declares a -> number : 1
declares a number -> of : 2
testing and mapping -> narrow : 1
and mapping narrow -> character : 1
mapping narrow character -> for : 1
narrow character for -> working : 1
character for working -> with : 1
with wide see -> the : 1
wide see the -> functions : 1
see the functions -> take : 1
the functions take -> but : 1
the functions take -> an : 2
the functions take -> a : 1
functions take but -> the : 1
take but the -> value : 1
but the value -> of : 1
of the parameter -> must : 1
of the parameter -> and : 1
of the parameter -> that : 1
the parameter must -> be : 3
the parameter must -> have : 1
be an most -> programs : 1
an most programs -> work : 1
most programs work -> with : 1
programs work with -> ordinary : 1
work with ordinary -> so : 1
with ordinary so -> you : 1
ordinary so you -> must : 1
you must cast -> the : 1
must cast the -> parameters : 1
cast the parameters -> and : 1
parameters and some -> of : 1
the return if -> c : 1
return if c -> only : 1
if c only -> other : 1
c only other -> value : 1
only other value -> that : 1
other value that -> is : 1
value that is -> permitted : 1
value that is -> not : 1
value that is -> initially : 2
value that is -> guaranteed : 1
that is permitted -> is : 1
is permitted is -> with : 1
permitted is with -> no : 1
with no functions -> get : 1
no functions get -> their : 1
functions get their -> information : 1
get their information -> from : 1
their information from -> the : 1
information from the -> current : 1
information from the -> new : 1
from the current -> as : 1
from the current -> file : 1
from the current -> positive : 1
the current as -> set : 1
current as set -> by : 1
as set by -> calling : 1
set by calling -> the : 3
set by calling -> if : 1
set by calling -> and : 1
set by calling -> is : 1
calling the locale -> is : 1
the locale is -> the : 1
locale is the -> only : 1
locale is the -> the : 1
the only one -> with : 1
only one with -> behavior : 1
one with behavior -> that : 1
with behavior that -> is : 1
behavior that is -> defined : 1
behavior that is -> dictated : 1
behavior that is -> common : 1
in the all -> other : 1
in the all -> the : 4
in the all -> occurrences : 1
the all other -> locales : 1
all other locales -> can : 1
other locales can -> define : 1
locales can define -> these : 1
locales can define -> other : 3
can define these -> functions : 1
define these functions -> to : 1
these functions to -> include : 1
functions to include -> or : 1
to include or -> exclude : 1
include or exclude -> different : 1
or exclude different -> even : 1
exclude different even -> in : 1
different even in -> the : 1
behavior of some -> functions : 1
of some functions -> depends : 1
some functions depends -> on : 1
functions depends on -> the : 1
on the execution -> character : 1
character set one -> requirement : 1
set one requirement -> for : 1
one requirement for -> all : 1
requirement for all -> locales : 1
for all locales -> is : 1
all locales is -> that : 1
locales is that -> and : 1
is that and -> the : 1
is that and -> behave : 1
that and the -> space : 1
and the space -> character : 1
space character are -> mutually : 1
character are mutually -> see : 1
are mutually see -> for : 1
mutually see for -> information : 1
about the the -> header : 1
header for a -> more : 1
for a more -> flexible : 1
a more flexible -> more : 1
more flexible more -> mechanism : 1
flexible more mechanism -> for : 1
more mechanism for -> testing : 1
mechanism for testing -> and : 1
testing and transforming -> each : 1
and transforming each -> of : 1
transforming each of -> the : 1
of the functions -> in : 3
of the functions -> depend : 1
of the functions -> take : 2
of the functions -> are : 1
functions in this -> section : 2
functions in this -> header : 1
this section has -> a : 1
section has a -> corresponding : 1
a corresponding function -> in : 1
corresponding function in -> that : 1
in that takes -> an : 1
takes an explicit -> the : 1
explicit the facet -> supports : 1
the facet supports -> similar : 1
facet supports similar -> function : 1
supports similar function -> tests : 1
similar function tests -> for : 1
function tests for -> an : 3
function tests for -> a : 8
function tests for -> function : 2
tests for an -> alphanumeric : 1
tests for an -> alphabetic : 1
tests for an -> uppercase : 1
for an alphanumeric -> function : 1
an alphanumeric function -> returns : 1
alphanumeric function returns -> true : 1
function returns true -> if : 24
function returns true -> for : 1
returns true if -> is : 21
returns true if -> has : 1
returns true if -> either : 1
returns true if -> and : 2
returns true if -> the : 4
true if is -> it : 1
true if is -> in : 1
true if is -> a : 12
true if is -> any : 2
true if is -> an : 3
true if is -> positioned : 1
true if is -> true : 1
it returns function -> tests : 1
it returns function -> converts : 1
it returns function -> in : 1
it returns function -> is : 2
it returns function -> function : 1
returns function tests -> for : 1
for an alphabetic -> function : 1
an alphabetic function -> returns : 1
alphabetic function returns -> true : 1
the this includes -> only : 1
this includes only -> the : 1
includes only the -> characters : 1
the characters for -> which : 1
characters for which -> or : 1
for which or -> is : 1
or is for -> other : 1
or is for -> any : 1
is for other -> other : 1
for other other -> characters : 1
other other characters -> might : 1
other characters might -> be : 1
might be function -> tests : 1
be function tests -> for : 1
tests for a -> control : 1
tests for a -> digit : 1
tests for a -> graphic : 1
tests for a -> lowercase : 1
tests for a -> printable : 1
tests for a -> punctuation : 1
tests for a -> white : 1
tests for a -> hexadecimal : 1
a control function -> returns : 2
control function returns -> true : 2
is a control -> the : 1
is a control -> function : 1
is a control -> character : 2
a control the -> set : 1
control the set -> of : 1
set of control -> characters : 1
of control characters -> depends : 1
control characters depends -> on : 1
characters depends on -> the : 2
on the locale -> and : 1
the locale and -> character : 2
locale and character -> in : 1
locale and character -> function : 1
locale and character -> a : 1
in the ascii -> character : 1
the ascii character -> the : 1
ascii character the -> control : 1
character the control -> characters : 1
the control characters -> are : 1
control characters are -> and : 1
and other implementations -> might : 1
other implementations might -> have : 1
implementations might have -> different : 1
have different control -> by : 1
different control by -> a : 1
control by a -> control : 1
by a control -> character : 1
a control character -> is : 1
a control character -> in : 2
control character is -> any : 1
character is any -> character : 1
is any character -> that : 1
not a printable -> character : 1
a printable character -> function : 1
printable character function -> tests : 1
character function tests -> for : 2
for a digit -> function : 1
a digit function -> returns : 1
digit function returns -> true : 2
is a decimal -> digit : 2
is a decimal -> pos : 1
a decimal digit -> of : 2
decimal digit of -> function : 1
decimal digit of -> in : 1
digit of function -> tests : 1
of function tests -> for : 1
for a graphic -> function : 1
a graphic function -> returns : 1
graphic function returns -> true : 1
if is any -> printing : 1
if is any -> hexadecimal : 1
is any printing -> character : 1
any printing character -> except : 1
printing character except -> space : 1
character except space -> the : 1
except space the -> set : 1
space the set -> of : 1
set of printing -> characters : 1
of printing characters -> varies : 1
printing characters varies -> with : 1
characters varies with -> locale : 1
varies with locale -> and : 1
with locale and -> character : 1
and character function -> tests : 1
for a lowercase -> function : 1
a lowercase function -> returns : 1
lowercase function returns -> true : 1
is a lowercase -> in : 2
is a lowercase -> letter : 1
a lowercase in -> the : 1
a lowercase in -> function : 1
lowercase in the -> only : 1
in the only -> the : 2
characters are different -> locales : 2
are different locales -> can : 2
different locales can -> define : 3
can define other -> lowercase : 1
can define other -> whitespace : 1
can define other -> uppercase : 1
can define other -> possible : 1
define other lowercase -> function : 1
other lowercase function -> tests : 1
lowercase function tests -> for : 1
for a printable -> function : 1
a printable function -> returns : 1
printable function returns -> true : 1
is a printing -> including : 1
a printing including -> space : 1
printing including space -> according : 1
including space according -> to : 1
space according to -> the : 1
and character a -> printing : 1
character a printing -> character : 1
a printing character -> occupies : 1
printing character occupies -> space : 1
character occupies space -> on : 1
occupies space on -> a : 1
space on a -> display : 1
on a display -> function : 1
a display function -> tests : 1
display function tests -> for : 1
for a punctuation -> function : 1
for a punctuation -> that : 1
a punctuation function -> returns : 1
punctuation function returns -> true : 1
returns true for -> a : 1
returns true for -> whitespace : 1
true for a -> punctuation : 1
a punctuation that -> any : 1
punctuation that any -> printable : 1
that any printable -> character : 1
any printable character -> other : 1
printable character other -> than : 1
character other than -> space : 1
other than space -> and : 1
than space and -> alphanumeric : 1
space and alphanumeric -> characters : 1
and alphanumeric characters -> function : 1
alphanumeric characters function -> tests : 1
characters function tests -> for : 1
for a white -> space : 1
a white space -> function : 1
white space function -> returns : 1
space function returns -> true : 1
is a whitespace -> in : 2
the the space -> form : 1
the space form -> feed : 1
space form feed -> newline : 1
form feed newline -> carriage : 1
feed newline carriage -> return : 1
newline carriage return -> horizontal : 1
carriage return horizontal -> tab : 1
return horizontal tab -> and : 1
horizontal tab and -> vertical : 1
tab and vertical -> tab : 1
and vertical tab -> characters : 1
vertical tab characters -> are : 1
tab characters are -> but : 1
characters are but -> backspace : 1
are but backspace -> is : 1
but backspace is -> different : 1
backspace is different -> locales : 1
is different locales -> can : 1
define other whitespace -> function : 1
other whitespace function -> tests : 1
whitespace function tests -> for : 1
for an uppercase -> function : 1
an uppercase function -> returns : 1
uppercase function returns -> true : 1
is an uppercase -> in : 2
is an uppercase -> letter : 1
an uppercase in -> the : 1
an uppercase in -> function : 1
uppercase in the -> only : 1
define other uppercase -> function : 1
other uppercase function -> tests : 1
uppercase function tests -> for : 1
for a hexadecimal -> digit : 1
a hexadecimal digit -> function : 1
a hexadecimal digit -> or : 1
a hexadecimal digit -> in : 2
a hexadecimal digit -> string : 1
hexadecimal digit function -> returns : 1
is any hexadecimal -> digit : 1
any hexadecimal digit -> or : 1
hexadecimal digit or -> of : 2
digit or of -> function : 1
digit or of -> in : 1
or of function -> converts : 1
of function converts -> a : 1
function converts a -> character : 5
function converts a -> string : 6
function converts a -> multibyte : 6
function converts a -> wide : 17
function converts a -> time : 2
converts a character -> to : 4
converts a character -> array : 3
character to function -> converts : 2
character to function -> maps : 2
to function converts -> uppercase : 1
to function converts -> lowercase : 1
to function converts -> a : 2
function converts uppercase -> characters : 1
converts uppercase characters -> to : 1
uppercase characters to -> if : 1
characters to if -> is : 3
if is uppercase -> returns : 1
is uppercase returns -> returns : 1
uppercase returns returns -> the : 1
returns returns the -> corresponding : 2
returns returns the -> current : 1
returns the corresponding -> lowercase : 1
returns the corresponding -> uppercase : 1
the corresponding lowercase -> character : 1
corresponding lowercase character -> which : 1
lowercase character which -> returns : 1
character which returns -> in : 2
which returns in -> the : 2
returns in the -> current : 2
the current if -> there : 2
current if there -> is : 2
there is such -> a : 2
such a it -> returns : 2
a it returns -> function : 1
a it returns -> header : 1
returns function converts -> a : 1
function converts lowercase -> characters : 1
converts lowercase characters -> to : 1
lowercase characters to -> if : 1
if is lowercase -> returns : 1
is lowercase returns -> returns : 1
lowercase returns returns -> the : 1
the corresponding uppercase -> character : 1
corresponding uppercase character -> which : 1
uppercase character which -> returns : 1
it returns header -> the : 1
returns header the -> c : 1
standard declares several -> macros : 1
declares several macros -> related : 1
several macros related -> to : 1
macros related to -> in : 1
macros related to -> signal : 1
related to in -> the : 1
the standard including -> the : 1
the standard including -> a : 1
standard including the -> macro : 1
including the macro -> code : 1
the macro code -> for : 2
macro code for -> a : 1
macro code for -> error : 1
macro code for -> range : 1
code for a -> math : 1
for a math -> domain : 1
a math domain -> library : 1
math domain library -> functions : 1
domain library functions -> that : 1
library functions that -> report : 3
library functions that -> are : 1
functions that report -> domain : 1
functions that report -> errors : 1
functions that report -> range : 1
that report domain -> errors : 1
report domain errors -> set : 1
domain errors set -> to : 1
errors set to -> a : 2
set to a -> domain : 1
set to a -> range : 1
set to a -> nonzero : 1
set to a -> putback : 1
to a domain -> error : 1
a domain error -> occurs : 3
a domain error -> the : 4
a domain error -> is : 1
a domain error -> can : 1
a domain error -> if : 1
a domain error -> a : 1
domain error occurs -> when : 1
domain error occurs -> if : 2
error occurs when -> the : 2
occurs when the -> domain : 1
occurs when the -> result : 1
when the domain -> of : 1
the domain of -> an : 1
domain of an -> argument : 1
an argument is -> out : 2
argument is out -> of : 2
out of such -> as : 2
as when asking -> for : 1
when asking for -> the : 1
asking for the -> square : 1
for the square -> root : 1
the square root -> of : 2
the square root -> or : 1
square root of -> a : 1
square root of -> branch : 1
square root of -> the : 1
root of a -> negative : 1
of a negative -> macro : 1
a negative macro -> expands : 1
negative macro expands -> to : 1
macro expands to -> a : 36
macro expands to -> an : 3
to a nonzero -> integer : 3
to a nonzero -> even : 1
a nonzero integer -> the : 3
nonzero integer the -> value : 3
integer the value -> of : 3
of is macro -> code : 1
of is macro -> global : 1
is macro code -> for : 1
code for error -> in : 1
for error in -> a : 1
error in a -> multibyte : 1
in a multibyte -> character : 1
in a multibyte -> number : 1
in a multibyte -> function : 2
multibyte character library -> functions : 1
character library functions -> that : 1
that report errors -> in : 1
report errors in -> multibyte : 1
errors in multibyte -> character : 1
in multibyte character -> sequences : 1
multibyte character sequences -> set : 1
multibyte character sequences -> to : 1
character sequences set -> to : 1
sequences set to -> for : 1
set to for -> passing : 1
set to for -> more : 1
to for passing -> an : 1
for passing an -> invalid : 1
passing an invalid -> wide : 1
an invalid wide -> character : 1
invalid wide character -> to : 1
wide character to -> the : 1
wide character to -> a : 5
wide character to -> macro : 1
wide character to -> its : 1
wide character to -> function : 2
wide character to -> if : 2
character to the -> function : 1
character to the -> character : 1
character to the -> output : 1
the function results -> in : 1
results in macro -> expands : 1
in macro expands -> to : 1
is not mentioned -> in : 1
not mentioned in -> the : 1
the but because -> includes : 1
but because includes -> the : 1
because includes the -> c : 1
library and is -> part : 1
and is part -> of : 1
the c it -> is : 7
c it is -> part : 1
c it is -> typically : 2
c it is -> used : 4
it is part -> of : 1
code for range -> library : 1
for range library -> functions : 1
range library functions -> that : 1
that report range -> errors : 1
report range errors -> set : 1
range errors set -> to : 1
to a range -> error : 1
a range error -> occurs : 1
a range error -> the : 1
a range error -> function : 1
a range error -> might : 2
a range error -> can : 1
range error occurs -> when : 1
function is out -> of : 1
as when there -> is : 4
when there is -> overflow : 1
when there is -> an : 1
when there is -> insufficient : 3
when there is -> no : 1
there is overflow -> from : 1
is overflow from -> the : 1
overflow from the -> macro : 1
from the macro -> expands : 1
the macro expands -> to : 16
is macro global -> error : 1
macro global error -> code : 1
global error code -> macro : 1
error code macro -> expands : 1
code macro expands -> into : 1
macro expands into -> an : 1
expands into an -> standard : 1
into an standard -> library : 1
an standard library -> functions : 1
standard library functions -> can : 1
library functions can -> store : 1
functions can store -> an : 1
can store an -> error : 1
store an error -> code : 1
an error code -> in : 1
error code in -> and : 1
code in and -> return : 1
in and return -> an : 1
and return an -> error : 1
return an error -> status : 1
an error status -> to : 1
an error status -> and : 1
error status to -> the : 1
status to the -> you : 1
can also store -> a : 1
also store a -> value : 1
store a value -> in : 1
value in resetting -> the : 1
in resetting the -> error : 1
resetting the error -> code : 1
the error code -> to : 1
error code to -> a : 1
code to a -> program : 1
to a program -> is : 1
program is initially -> no : 1
is initially no -> library : 1
initially no library -> function : 1
no library function -> resets : 1
library function resets -> to : 1
function resets to -> any : 1
resets to any -> library : 1
to any library -> function : 1
any library function -> might : 1
library function might -> set : 1
function might set -> to : 1
might set to -> a : 1
a nonzero even -> if : 1
nonzero even if -> it : 1
is not documented -> to : 1
not documented to -> do : 1
documented to do -> the : 1
do the only -> time : 1
only time it -> is : 1
safe to check -> is : 1
to check is -> after : 1
check is after -> a : 1
after a library -> function : 1
a library function -> returns : 1
library function returns -> an : 1
function returns an -> error : 1
returns an error -> status : 1
returns an error -> the : 1
error status and -> is : 1
status and is -> documented : 1
and is documented -> to : 1
is documented to -> set : 1
documented to set -> in : 1
set in that -> with : 1
in that with -> no : 1
that with no -> standard : 1
with no standard -> is : 1
no standard is -> not : 1
is not explicit -> as : 1
not explicit as -> to : 1
explicit as to -> whether : 1
as to whether -> is : 1
to whether is -> truly : 1
whether is truly -> a : 1
is truly a -> macro : 1
truly a macro -> a : 1
macro a the -> intent : 1
a the intent -> of : 1
standard committee is -> to : 1
committee is to -> define : 1
as a so -> do : 1
a so do -> not : 1
so do not -> use : 1
not use and -> if : 1
use and if -> your : 1
and if your -> library : 1
if your library -> declares : 1
your library declares -> as : 1
library declares as -> a : 1
declares as a -> variable : 1
a variable in -> the : 1
variable in the -> you : 1
your own errno -> a : 1
own errno a -> multithreaded : 1
errno a multithreaded -> a : 1
a multithreaded a -> library : 1
multithreaded a library -> implementation : 1
a library implementation -> typically : 1
a library implementation -> to : 1
library implementation typically -> ensures : 1
implementation typically ensures -> that : 1
typically ensures that -> each : 1
ensures that each -> thread : 1
that each thread -> gets : 1
each thread gets -> a : 1
thread gets a -> separate : 1
gets a separate -> copy : 1
a separate copy -> of : 2
copy of such -> considerations : 1
of such considerations -> fall : 1
such considerations fall -> outside : 1
considerations fall outside -> the : 1
outside the realm -> of : 1
the realm of -> the : 1
realm of the -> consult : 1
of the consult -> your : 1
the consult your -> compiler : 1
consult your compiler -> and : 1
and library documentation -> for : 1
library documentation for -> in : 1
documentation for in -> in : 1
for in in -> header : 2
in in header -> is : 3
in in header -> declares : 2
in header is -> the : 5
in header is -> for : 1
in header is -> one : 2
header is the -> version : 9
is the version -> of : 9
c standard it -> defines : 1
standard it defines -> parameters : 1
it defines parameters -> that : 1
defines parameters that -> characterize : 2
parameters that characterize -> types : 1
parameters that characterize -> integral : 1
that characterize types -> in : 1
characterize types in -> the : 1
same way does -> for : 2
way does for -> the : 2
does for the -> integral : 1
does for the -> floating : 1
integral the native -> defines : 1
the native defines -> the : 2
native defines the -> same : 2
defines the same -> information : 2
the same information -> using : 2
same information using -> templates : 2
information using templates -> instead : 2
using templates instead -> of : 2
templates instead of -> are : 1
templates instead of -> with : 1
instead of are -> three : 1
of are three -> sets : 1
are three sets -> of : 1
three sets of -> each : 1
sets of each -> describing : 1
of each describing -> a : 1
each describing a -> different : 1
describing a different -> fundamental : 1
a different fundamental -> for : 1
different fundamental for -> each : 1
fundamental for each -> the : 1
for each the -> corresponding : 1
each the corresponding -> set : 1
the corresponding set -> of : 1
corresponding set of -> macros : 1
set of macros -> has : 1
of macros has -> a : 1
macros has a -> common : 1
has a common -> and : 1
a common and -> each : 1
a common and -> sometimes : 2
common and each -> set : 1
and each set -> characterizes : 1
each set characterizes -> a : 1
set characterizes a -> value : 1
characterizes a value -> as : 1
a a significand -> called : 2
a significand called -> the : 2
significand called the -> a : 2
called the a -> and : 2
the a and -> an : 2
and an everyday -> we : 2
an everyday we -> are : 2
everyday we are -> used : 2
we are used -> to : 2
used to working -> with : 2
to working with -> a : 2
working with a -> of : 2
with a of -> base : 2
a of base -> is : 2
of base is -> also : 2
base is also -> called : 2
is also called -> the : 3
also called the -> the : 2
also called the -> see : 1
most common bases -> for : 2
common bases for -> computer : 2
bases for computer -> are : 2
for computer are -> and : 2
computer are and -> many : 2
are and many -> modern : 2
many modern workstations -> use : 2
modern workstations use -> the : 2
workstations use the -> iec : 2
use the iec -> standard : 2
the iec standard -> for : 3
the iec standard -> are : 1
iec standard for -> which : 2
iec standard for -> it : 1
standard for which -> uses : 2
for which uses -> a : 2
which uses a -> base : 2
uses a base -> of : 2
a base of -> is : 2
a base of -> such : 1
base of is -> a : 2
string of digits -> in : 2
of digits in -> the : 5
of digits in -> successive : 1
digits in the -> given : 2
digits in the -> significand : 3
the given there -> is : 2
given there is -> an : 2
is an implied -> radix : 2
an implied radix -> point : 2
implied radix point -> at : 2
radix point at -> the : 2
point at the -> start : 2
of the significand -> so : 1
of the significand -> is : 2
the significand so -> the : 1
significand so the -> value : 1
so the value -> of : 2
the significand is -> always : 2
significand is always -> less : 2
is always less -> than : 15
always less than -> is : 2
always less than -> or : 13
less than is -> the : 2
than is the -> generalization : 2
is the generalization -> of : 2
the generalization of -> a : 2
generalization of a -> decimal : 2
of a decimal -> point : 2
a decimal point -> for : 5
a decimal point -> are : 1
a decimal point -> is : 1
a decimal point -> character : 1
decimal point for -> any : 2
decimal point for -> do : 1
decimal point for -> even : 2
point for any -> value : 1
point for any -> finite : 1
for any value -> is : 1
for any value -> other : 1
any value is -> if : 1
the first digit -> of : 2
first digit of -> its : 2
digit of its -> significand : 2
of its significand -> is : 2
its significand is -> or : 2
significand is or -> if : 2
the entire value -> is : 3
entire value is -> a : 1
entire value is -> read : 1
entire value is -> the : 1
is a value -> that : 1
is a value -> other : 2
is not normalized -> is : 1
not normalized is -> of : 1
normalized is of -> a : 1
is of a -> type : 1
is the maximum -> number : 4
is the maximum -> value : 1
is the maximum -> finite : 1
the maximum number -> of : 6
maximum number of -> places : 2
maximum number of -> files : 1
maximum number of -> characters : 2
maximum number of -> bytes : 1
maximum number of -> wide : 1
number of places -> in : 3
of places in -> the : 3
places in the -> the : 2
places in the -> data : 1
places in the -> number : 1
places in the -> formatted : 1
the the of -> a : 2
a type depends -> primarily : 2
type depends primarily -> on : 2
depends primarily on -> the : 2
primarily on the -> minimum : 2
primarily on the -> eat : 1
on the minimum -> and : 2
the minimum and -> maximum : 3
minimum and maximum -> values : 3
minimum and maximum -> of : 1
and maximum values -> for : 2
and maximum values -> in : 1
maximum values for -> the : 2
for the with -> no : 1
value returned by -> each : 1
value returned by -> is : 1
value returned by -> the : 1
returned by each -> macro : 1
by each macro -> is : 1
each macro is -> because : 1
macro is because -> all : 1
is because all -> the : 1
because all the -> fundamental : 1
all the fundamental -> types : 1
all the fundamental -> numeric : 1
mandates minimum decimal -> precision : 1
minimum decimal precision -> and : 1
decimal precision and -> range : 1
precision and range -> for : 1
and range for -> each : 1
range for each -> in : 1
for each in -> this : 1
for each in -> the : 2
for each in -> in : 1
each in this -> the : 1
this the descriptions -> for : 1
the descriptions for -> the : 1
descriptions for the -> decimal : 1
for the decimal -> characteristics : 1
the decimal characteristics -> of : 1
decimal characteristics of -> each : 1
characteristics of each -> type : 1
of each type -> include : 1
each type include -> the : 1
type include the -> minimum : 1
include the minimum -> value : 1
minimum value set -> by : 1
value set by -> the : 1
set by the -> expands : 1
set by the -> most : 2
by the expands -> to : 1
the expands to -> a : 1
to a constant -> all : 1
to a constant -> which : 6
to a constant -> whose : 2
to a constant -> macro : 4
to a constant -> with : 3
to a constant -> function : 2
to a constant -> instead : 1
to a constant -> type : 1
to a constant -> integer : 2
a constant all -> other : 1
constant all other -> macros : 1
all other macros -> in : 1
other macros in -> expand : 1
macros in expand -> to : 2
in expand to -> numeric : 1
in expand to -> constant : 1
expand to numeric -> but : 1
to numeric but -> the : 1
numeric but the -> values : 1
but the values -> might : 1
but the values -> to : 3
the values might -> not : 1
values might not -> be : 1
not be macro -> decimal : 1
be macro decimal -> of : 1
macro decimal of -> significant : 3
decimal of significant -> decimal : 3
of significant decimal -> digits : 3
significant decimal digits -> that : 3
decimal digits that -> can : 4
digits that can -> be : 5
a the value -> is : 5
a the value -> or : 1
is always at -> least : 19
always at least -> macro : 18
always at least -> header : 1
at least macro -> limit : 3
at least macro -> maximum : 11
at least macro -> minimum : 4
least macro limit -> of : 3
macro limit of -> difference : 2
macro limit of -> double : 1
limit of difference -> between : 2
of difference between -> and : 2
smallest value greater -> than : 3
greater than that -> can : 3
greater than that -> function : 1
than that can -> be : 3
equal to macro -> significand : 3
equal to macro -> minimum : 6
equal to macro -> maximum : 4
to macro significand -> of : 3
macro significand of -> digits : 3
significand of digits -> in : 3
in the significand -> of : 3
the significand of -> a : 3
significand of a -> macro : 3
a macro maximum -> finite : 3
macro maximum finite -> finite : 2
macro maximum finite -> double : 1
maximum finite finite -> the : 2
finite finite the -> value : 2
finite the value -> is : 6
least macro maximum -> decimal : 3
least macro maximum -> exponent : 3
least macro maximum -> char : 1
least macro maximum -> signed : 1
least macro maximum -> unsigned : 3
macro maximum decimal -> decimal : 3
maximum decimal decimal -> exponent : 3
decimal decimal exponent -> for : 3
decimal exponent for -> a : 7
exponent for a -> finite : 5
exponent for a -> normalized : 3
exponent for a -> number : 1
for a finite -> the : 4
for a finite -> macro : 3
for a finite -> largest : 1
a finite the -> value : 3
a finite the -> minimum : 1
macro maximum exponent -> of : 3
maximum exponent of -> a : 3
exponent of a -> base : 6
a base for -> a : 6
base for a -> finite : 3
base for a -> normalized : 3
a finite macro -> minimum : 3
finite macro minimum -> positive : 3
macro minimum positive -> positive : 2
macro minimum positive -> double : 1
minimum positive positive -> the : 2
positive positive the -> value : 2
positive the value -> is : 3
to macro minimum -> decimal : 3
to macro minimum -> negative : 3
macro minimum decimal -> negative : 3
minimum decimal negative -> decimal : 3
decimal negative decimal -> exponent : 3
negative decimal exponent -> for : 3
negative decimal exponent -> such : 1
for a normalized -> the : 3
for a normalized -> macro : 2
for a normalized -> header : 1
a normalized the -> value : 3
normalized the value -> is : 3
macro minimum negative -> exponent : 3
minimum negative exponent -> of : 3
negative exponent of -> a : 3
a normalized macro -> decimal : 1
a normalized macro -> implementation : 1
normalized macro decimal -> of : 1
normalized macro implementation -> macro : 1
macro implementation macro -> is : 1
implementation macro is -> an : 1
macro is an -> integer : 1
is an integer -> constant : 1
is an integer -> a : 1
integer constant that -> specifies : 1
integer constant that -> represents : 6
constant that specifies -> the : 1
specifies the or -> for : 1
for the for -> iec : 1
the for iec -> has : 1
for iec has -> a : 1
iec has a -> of : 1
has a of -> macro : 1
a of macro -> rounding : 1
of macro rounding -> macro : 1
macro rounding macro -> specifies : 1
rounding macro specifies -> how : 1
macro specifies how -> the : 1
specifies how the -> implementation : 1
how the implementation -> rounds : 1
the implementation rounds -> rounding : 1
implementation rounds rounding -> lists : 1
rounds rounding lists -> the : 1
rounding lists the -> possible : 1
the possible values -> as : 1
possible values as -> defined : 1
values as defined -> in : 1
as defined in -> the : 1
in the an -> implementation : 1
the an implementation -> can : 1
define additional values -> with : 1
additional values with -> other : 1
values with other -> rounding : 1
with other rounding -> rounding : 1
other rounding rounding -> solid : 1
rounding rounding solid -> solid : 1
rounding solid solid -> solid : 1
solid solid toward -> solid : 1
solid toward solid -> solid : 1
toward solid solid -> solid : 1
solid solid up -> positive : 1
solid solid up -> to : 2
solid up positive -> solid : 1
up positive solid -> down : 1
positive solid down -> negative : 1
solid down negative -> macro : 1
down negative macro -> decimal : 1
negative macro decimal -> of : 1
limit of double -> difference : 1
of double difference -> between : 1
double difference between -> and : 1
maximum finite double -> finite : 1
finite double finite -> the : 1
double finite the -> value : 1
minimum positive double -> positive : 1
positive double positive -> the : 1
double positive the -> value : 1
a normalized header -> the : 1
normalized header the -> c : 1
c standard does -> nothing : 1
standard does nothing -> in : 1
does nothing in -> the : 1
c header defines -> a : 1
header defines a -> small : 1
defines a small -> number : 1
a small number -> of : 1
small number of -> such : 1
number of such -> as : 1
as for but -> these : 1
for but these -> macros : 1
but these macros -> are : 1
these macros are -> all : 1
macros are all -> reserved : 1
are all reserved -> keywords : 1
all reserved keywords -> in : 1
reserved keywords in -> the : 1
keywords in the -> header : 1
the header exists -> only : 1
header exists only -> for : 1
exists only for -> the : 1
exists only for -> compatibility : 1
sake of every -> header : 1
of every header -> in : 1
every header in -> the : 1
header in the -> c : 1
standard has an -> equivalent : 1
has an equivalent -> in : 1
an equivalent in -> with : 1
equivalent in with -> no : 1
all compilers correctly -> implement : 1
compilers correctly implement -> the : 1
correctly implement the -> alternative : 1
implement the alternative -> tokens : 1
the alternative tokens -> such : 1
alternative tokens such -> as : 1
tokens such as -> these : 1
such as these -> compilers : 1
as these compilers -> might : 1
these compilers might -> use : 1
compilers might use -> to : 1
use to declare -> these : 1
to declare these -> keywords : 1
declare these keywords -> as : 1
these keywords as -> for : 1
keywords as for -> maximum : 1
as for maximum -> portability : 1
for maximum portability -> to : 1
maximum portability to -> these : 1
portability to these -> nonconforming : 1
to these nonconforming -> include : 1
these nonconforming include -> the : 1
nonconforming include the -> header : 1
include the header -> when : 1
the header when -> you : 1
header when you -> want : 1
when you want -> to : 2
to use any -> alternative : 1
use any alternative -> token : 1
any alternative token -> see : 1
alternative token see -> for : 1
token see for -> more : 1
about the alternative -> header : 1
the alternative header -> the : 1
alternative header the -> c : 1
c standard defines -> parameters : 1
standard defines parameters -> that : 1
that characterize integral -> types : 1
characterize integral types -> in : 1
integral types in -> the : 1
for the floating -> point : 1
the floating point -> the : 1
the floating point -> type : 1
floating point the -> native : 1
point the native -> defines : 1
instead of with -> no : 1
with no types -> used : 1
no types used -> in : 1
types used in -> the : 1
macros are meant -> as : 1
are meant as -> reminders : 1
meant as reminders -> and : 1
as reminders and -> are : 1
reminders and are -> not : 1
are not descriptive -> of : 1
not descriptive of -> the : 1
descriptive of the -> actual : 1
the actual types -> of : 1
the actual types -> are : 1
actual types of -> the : 1
macro the actual -> types : 1
actual types are -> and : 1
types are and -> can : 1
are and can -> be : 1
type that would -> be : 1
would be the -> result : 1
would be the -> last : 2
would be the -> delimiter : 1
be the result -> of : 2
result of normal -> integral : 1
of normal integral -> promotions : 1
normal integral promotions -> for : 1
integral promotions for -> the : 1
promotions for the -> corresponding : 1
the corresponding if -> is : 1
corresponding if is -> promoted : 1
if is promoted -> to : 1
is promoted to -> might : 1
promoted to might -> have : 1
to might have -> type : 1
might have type -> of : 1
have type of -> the : 1
of the macros -> in : 1
the macros in -> expand : 1
expand to constant -> macro : 1
to constant macro -> bits : 1
constant macro bits -> per : 1
macro bits per -> of : 1
bits per of -> bits : 1
per of bits -> per : 1
of bits per -> the : 1
bits per the -> value : 1
per the value -> is : 1
macro maximum char -> value : 1
maximum char value -> for : 1
char value for -> the : 5
for the that -> the : 1
same as either -> or : 1
as either or -> so : 1
either or so -> has : 1
or so has -> the : 1
so has the -> same : 1
value as or -> in : 2
as or in -> macro : 2
as or in -> other : 2
or in macro -> minimum : 1
or in macro -> maximum : 1
in macro minimum -> char : 1
macro minimum char -> value : 1
minimum char value -> for : 1
the type same -> value : 1
type same value -> as : 1
type same value -> passed : 1
in macro maximum -> int : 1
macro maximum int -> value : 1
maximum int value -> for : 1
int value for -> the : 5
least macro minimum -> int : 1
least macro minimum -> long : 1
least macro minimum -> signed : 1
least macro minimum -> short : 1
macro minimum int -> value : 1
minimum int value -> for : 1
to macro maximum -> long : 1
to macro maximum -> bytes : 1
to macro maximum -> short : 1
to macro maximum -> unsigned : 1
to macro maximum -> value : 1
macro maximum long -> int : 1
maximum long int -> value : 1
long int value -> for : 2
macro minimum long -> int : 1
minimum long int -> value : 1
macro maximum bytes -> in : 1
maximum bytes in -> a : 1
bytes in a -> multibyte : 3
a multibyte number -> of : 1
multibyte number of -> bytes : 1
of bytes in -> any : 1
of bytes in -> a : 2
of bytes in -> that : 1
of bytes in -> the : 4
bytes in any -> multibyte : 1
in any multibyte -> in : 1
any multibyte in -> any : 1
multibyte in any -> the : 1
any the value -> is : 1
macro maximum signed -> char : 1
maximum signed char -> char : 1
signed char char -> value : 2
char char value -> for : 3
macro minimum signed -> char : 1
minimum signed char -> char : 1
macro maximum short -> value : 1
maximum short value -> for : 1
short value for -> the : 3
macro minimum short -> value : 1
minimum short value -> for : 1
macro maximum unsigned -> char : 1
macro maximum unsigned -> int : 1
macro maximum unsigned -> long : 1
macro maximum unsigned -> short : 1
maximum unsigned char -> char : 1
unsigned char char -> value : 1
maximum unsigned int -> int : 1
unsigned int int -> value : 1
int int value -> for : 1
maximum unsigned long -> long : 1
unsigned long long -> value : 1
unsigned long long -> int : 1
long long value -> for : 1
long value for -> the : 1
maximum unsigned short -> short : 1
unsigned short short -> value : 1
short short value -> for : 1
at least header -> the : 1
least header the -> c : 1
standard declares types -> and : 1
and functions to -> support : 1
functions to support -> internationalization : 1
to support internationalization -> and : 1
support internationalization and -> localization : 1
internationalization and localization -> for : 1
and localization for -> the : 1
localization for the -> c : 1
c standard also -> offers : 1
standard also offers -> which : 1
also offers which -> has : 1
offers which has -> more : 1
which has more -> flexibility : 1
has more flexibility -> and : 1
flexibility and but -> at : 1
and but at -> a : 1
at a cost -> of : 1
a cost of -> complexity : 1
cost of complexity -> and : 1
of complexity and -> various : 1
complexity and various -> locale : 1
and various locale -> settings : 1
various locale settings -> are : 1
locale settings are -> grouped : 1
settings are grouped -> into : 1
are grouped into -> each : 1
are grouped into -> categories : 1
grouped into each -> category : 1
into each category -> has : 1
each category has -> a : 1
each category has -> several : 1
category has a -> macro : 1
has a macro -> to : 1
a macro to -> identify : 1
macro to identify -> the : 1
identify the category -> in : 1
the category in -> a : 4
the category in -> the : 1
category in a -> call : 6
call to you -> would : 1
call to you -> cannot : 1
to you would -> use : 1
you would use -> to : 1
you would use -> an : 1
would use to -> set : 1
use to set -> all : 2
to set all -> the : 1
to set all -> categories : 1
set all the -> categories : 1
all the categories -> at : 1
the categories at -> but : 1
categories at but -> you : 1
at but you -> can : 1
you can pick -> a : 1
can pick a -> category : 1
pick a category -> from : 1
a category from -> one : 1
category from one -> locale : 1
from one locale -> and : 1
one locale and -> another : 1
locale and another -> category : 1
and another category -> from : 1
another category from -> a : 1
category from a -> different : 1
a different macro -> all : 1
different macro all -> locale : 1
macro all locale -> macro : 1
all locale macro -> expands : 1
locale macro expands -> to : 1
a constant which -> sets : 6
constant which sets -> all : 1
constant which sets -> the : 5
which sets all -> categories : 1
sets all categories -> in : 1
all categories in -> a : 1
categories in a -> call : 1
call to macro -> collation : 1
to macro collation -> order : 1
macro collation order -> macro : 1
collation order macro -> expands : 1
order macro expands -> to : 1
which sets the -> collation : 1
which sets the -> character : 1
which sets the -> category : 3
sets the collation -> order : 1
the collation order -> category : 1
the collation order -> is : 1
the collation order -> of : 1
collation order category -> in : 1
order category in -> a : 1
to the collation -> order : 1
collation order is -> used : 1
order is used -> by : 1
used by functions -> such : 1
by functions such -> as : 1
such as macro -> character : 1
as macro character -> type : 1
macro character type -> macro : 1
character type macro -> expands : 1
character type macro -> monetary : 1
type macro expands -> to : 1
sets the character -> type : 1
the character type -> category : 1
the character type -> is : 2
the character type -> by : 1
character type category -> in : 1
type category in -> a : 1
such as use -> character : 1
such as use -> this : 1
as use character -> type : 1
use character type -> macro : 1
type macro monetary -> formatting : 1
macro monetary formatting -> macro : 1
monetary formatting macro -> expands : 1
formatting macro expands -> to : 3
sets the category -> in : 3
call to call -> to : 1
call to retrieve -> this : 2
to retrieve this -> macro : 2
retrieve this macro -> numeric : 1
retrieve this macro -> time : 1
this macro numeric -> formatting : 1
macro numeric formatting -> macro : 1
numeric formatting macro -> expands : 1
call to functions -> such : 1
to functions such -> as : 1
as use this -> information : 1
use this information -> to : 1
to format call -> to : 1
format call to -> retrieve : 1
this macro time -> formatting : 1
macro time formatting -> macro : 1
time formatting macro -> expands : 1
the function uses -> this : 1
the function uses -> its : 1
the function uses -> for : 1
the function uses -> the : 1
the function uses -> a : 1
function uses this -> structure : 1
uses this structure -> numeric : 1
this structure numeric -> formatting : 1
structure numeric formatting -> char : 1
numeric formatting char -> char : 1
formatting char char -> char : 1
char char char -> char : 15
char char char -> with : 1
char char with -> no : 1
char with no -> structure : 1
with no structure -> stores : 1
no structure stores -> information : 1
structure stores information -> used : 1
stores information used -> to : 1
information used to -> format : 1
used to format -> numbers : 2
used to format -> a : 1
used to format -> negative : 1
used to format -> positive : 1
to format numbers -> and : 1
to format numbers -> for : 1
format numbers and -> monetary : 1
numbers and monetary -> an : 1
and monetary an -> implementation : 1
monetary an implementation -> can : 1
implementation can add -> more : 1
can add more -> members : 1
add more members -> to : 1
more members to -> the : 1
members to the -> class : 1
members to the -> address : 1
class and change -> the : 1
and change the -> order : 1
order of standard -> library : 1
of standard library -> is : 1
library is responsible -> for : 1
responsible for filling -> an : 1
for filling an -> object : 1
filling an object -> with : 1
object with values -> that : 1
with values that -> are : 1
that are appropriate -> for : 3
are appropriate for -> a : 1
are appropriate for -> the : 2
for a do -> not : 1
a do not -> modify : 2
do not modify -> the : 2
do not modify -> between : 1
not modify the -> object : 1
not modify the -> a : 1
not modify the -> string : 1
not modify the -> array : 1
not modify the -> return : 1
not modify the -> contents : 1
object or its -> data : 1
or its data -> locale : 1
its data locale -> defines : 1
data locale defines -> suitable : 1
locale defines suitable -> values : 1
defines suitable values -> for : 1
suitable values for -> the : 1
the the members -> are : 1
members are all -> nonnegative : 1
are all nonnegative -> in : 1
all nonnegative in -> which : 1
nonnegative in which -> means : 1
means the information -> is : 2
the information is -> not : 2
information is not -> available : 1
information is not -> the : 1
is not available -> in : 1
is not available -> the : 1
is not available -> for : 1
not available in -> the : 1
the current for -> the : 1
current for the -> an : 1
for the an -> empty : 1
the an empty -> string : 1
an empty string -> means : 1
an empty string -> for : 1
an empty string -> or : 1
an empty string -> and : 3
an empty string -> stream : 2
an empty string -> if : 1
empty string means -> the : 1
string means the -> information : 1
not the locale -> uses : 1
the locale uses -> for : 1
the locale uses -> a : 1
locale uses for -> an : 1
uses for an -> empty : 1
for an empty -> string : 1
empty string for -> all : 1
string for all -> other : 1
all other and -> for : 1
other and for -> all : 1
for all all -> strings : 1
all all strings -> are : 1
all strings are -> function : 1
strings are function -> returns : 1
are function returns -> a : 1
the current following -> are : 1
current following are -> descriptions : 1
following are descriptions -> of : 3
are descriptions of -> the : 3
of the currency -> symbol : 1
of the currency -> such : 1
the currency symbol -> for : 1
the currency symbol -> and : 1
the currency symbol -> precedes : 2
the currency symbol -> is : 6
currency symbol for -> the : 1
currency symbol for -> in : 1
symbol for the -> current : 2
for the current -> locale : 1
for the current -> this : 1
the current locale -> decimal : 1
current locale decimal -> point : 1
locale decimal point -> symbol : 1
decimal point symbol -> for : 1
point symbol for -> the : 1
the current this -> member : 1
current this member -> is : 1
this member is -> unique : 1
member is unique -> in : 1
in that it -> cannot : 1
in that it -> returns : 1
that it cannot -> be : 1
be an empty -> the : 1
an empty the -> default : 1
empty the default -> is : 1
default is number -> of : 1
is number of -> digits : 1
of digits to -> appear : 2
of digits to -> print : 1
digits to appear -> after : 2
to appear after -> the : 2
after the decimal -> point : 2
after the decimal -> used : 1
after the decimal -> the : 2
after the decimal -> this : 1
after the decimal -> or : 1
the decimal point -> in : 2
the decimal point -> is : 3
the decimal point -> if : 1
the decimal point -> which : 1
decimal point in -> monetary : 1
decimal point in -> an : 1
point in monetary -> string : 1
in monetary string -> that : 1
monetary string that -> is : 1
string that is -> interpreted : 1
string that is -> a : 1
that is interpreted -> as : 1
series of in -> which : 1
which each integer -> is : 1
each integer is -> the : 1
digits in successive -> groups : 1
in successive groups -> of : 1
successive groups of -> digits : 1
groups of digits -> for : 1
of digits for -> nonmonetary : 1
of digits for -> an : 1
digits for nonmonetary -> the : 1
for nonmonetary the -> value : 1
nonmonetary the value -> means : 1
the value means -> to : 1
the value means -> not : 1
value means to -> repeat : 1
means to repeat -> the : 1
to repeat the -> last : 1
repeat the last -> grouping : 1
the last grouping -> for : 1
last grouping for -> the : 1
grouping for the -> rest : 1
value means not -> to : 1
means not to -> group : 1
not to group -> the : 1
to group the -> remaining : 1
group the remaining -> any : 1
the remaining any -> other : 1
remaining any other -> value : 1
any other value -> is : 1
any other value -> for : 2
any other value -> in : 1
other value is -> the : 1
other value is -> to : 1
of a digit -> the : 1
a digit the -> first : 1
digit the first -> character : 1
first character in -> the : 4
first character in -> such : 1
the string specifies -> the : 2
string specifies the -> size : 2
specifies the size -> of : 2
of the rightmost -> group : 1
the rightmost group -> of : 1
rightmost group of -> the : 1
group of the -> second : 1
the second character -> in : 1
second character in -> the : 1
to the group -> of : 1
the group of -> and : 1
group of and -> so : 1
and so digit -> groups : 1
so digit groups -> are : 1
digit groups are -> separated : 1
groups are separated -> by : 2
separated by common -> value : 1
by common value -> is : 1
common value is -> which : 1
value is which -> means : 1
which means to -> format : 1
means to format -> digits : 1
to format digits -> in : 1
format digits in -> groups : 1
digits in groups -> of : 1
in groups of -> three : 1
groups of three -> in : 1
of three in -> which : 1
three in which -> the : 1
three characters are -> the : 1
characters are the -> international : 1
characters are the -> return : 1
characters are the -> maximum : 1
are the international -> currency : 1
the international currency -> symbol : 2
international currency symbol -> to : 1
international currency symbol -> for : 1
currency symbol to -> iso : 1
symbol to iso -> standard : 1
to iso standard -> and : 1
iso standard and -> the : 1
standard and the -> fourth : 1
and the fourth -> character : 1
the fourth character -> is : 1
fourth character is -> the : 1
character is the -> separator : 1
character is the -> behavior : 1
character is the -> function : 2
character is the -> input : 1
is the separator -> between : 1
the separator between -> the : 1
separator between the -> currency : 1
between the currency -> symbol : 1
currency symbol and -> the : 1
and the for -> the : 1
for the symbol -> for : 1
the symbol for -> united : 1
symbol for united -> states : 1
for united states -> dollars : 1
united states dollars -> is : 1
states dollars is -> if : 1
dollars is if -> the : 1
if the locale -> uses : 1
if the locale -> cannot : 1
if the locale -> has : 2
if the locale -> does : 1
locale uses a -> space : 1
uses a space -> as : 1
a space as -> the : 1
space as the -> would : 1
as the would -> be : 1
the would be -> number : 1
would be number -> of : 1
be number of -> digits : 1
point in an -> monetary : 1
in an monetary -> monetary : 1
an monetary monetary -> decimal : 1
monetary monetary decimal -> monetary : 1
monetary decimal monetary -> works : 1
decimal monetary works -> the : 1
monetary works the -> same : 1
works the same -> as : 2
same as except -> groups : 1
as except groups -> are : 1
except groups are -> separated : 1
separated by monetary -> thousands : 1
by monetary thousands -> works : 1
monetary thousands works -> the : 1
thousands works the -> same : 1
same as in -> monetary : 1
as in monetary -> as : 1
in monetary as -> specified : 1
monetary as specified -> by : 1
as specified by -> to : 1
as specified by -> function : 1
specified by to -> if : 1
specified by to -> the : 1
by to if -> the : 1
if the currency -> symbol : 4
currency symbol precedes -> the : 2
symbol precedes the -> amount : 2
precedes the amount -> when : 2
the amount when -> formatting : 2
amount when formatting -> a : 2
when formatting a -> negative : 1
when formatting a -> nonnegative : 1
formatting a negative -> monetary : 1
a negative monetary -> equal : 1
a negative monetary -> values : 1
a negative monetary -> value : 1
negative monetary equal -> to : 1
monetary equal to -> if : 2
if the symbol -> follows : 2
the symbol follows -> the : 2
symbol follows the -> to : 2
follows the to -> if : 2
the to if -> the : 2
currency symbol is -> separated : 2
currency symbol is -> it : 1
currency symbol is -> printed : 1
currency symbol is -> always : 1
currency symbol is -> or : 1
symbol is separated -> from : 2
separated from a -> negative : 1
separated from a -> nonnegative : 1
from a negative -> value : 1
a negative value -> by : 1
a negative value -> for : 2
a negative value -> if : 1
a negative value -> is : 1
negative value by -> a : 1
value by a -> equal : 2
by a equal -> to : 2
a equal to -> if : 2
is no position -> of : 2
no position of -> the : 2
of the sign -> for : 2
of the sign -> string : 2
of the sign -> is : 2
the sign for -> a : 2
sign for a -> negative : 1
sign for a -> nonnegative : 1
for a negative -> monetary : 2
negative monetary values -> for : 1
monetary values for -> and : 2
values for and -> lists : 2
values for and -> values : 1
for and lists -> all : 2
all the position -> values : 1
all the position -> for : 1
the position values -> for : 1
position values for -> and : 1
for and values -> for : 1
and values for -> solid : 1
values for solid -> solid : 1
for solid solid -> solid : 5
solid solid surround -> the : 1
solid surround the -> value : 1
surround the value -> and : 1
the value and -> the : 3
value and the -> currency : 3
and the currency -> solid : 3
the currency solid -> solid : 3
the currency solid -> sign : 1
currency solid solid -> solid : 3
solid solid sign -> precedes : 1
solid solid sign -> follows : 1
solid solid sign -> appears : 1
solid sign precedes -> the : 1
sign precedes the -> value : 1
precedes the value -> and : 1
solid sign follows -> the : 1
sign follows the -> value : 1
follows the value -> and : 1
solid sign appears -> immediately : 2
sign appears immediately -> before : 1
sign appears immediately -> after : 1
appears immediately before -> the : 1
immediately before the -> currency : 1
before the currency -> solid : 1
currency solid sign -> appears : 1
appears immediately after -> the : 1
after the currency -> for : 1
the currency for -> a : 1
currency for a -> negative : 1
negative monetary value -> to : 1
monetary value to -> if : 1
value to if -> the : 2
formatting a nonnegative -> monetary : 1
a nonnegative monetary -> equal : 1
a nonnegative monetary -> values : 1
a nonnegative monetary -> separator : 1
nonnegative monetary equal -> to : 1
from a nonnegative -> value : 1
a nonnegative value -> by : 1
a nonnegative value -> for : 2
nonnegative value by -> a : 1
for a nonnegative -> monetary : 2
nonnegative monetary values -> for : 1
the position for -> a : 1
position for a -> nonnegative : 1
nonnegative monetary separator -> which : 1
monetary separator which -> is : 1
separator which is -> used : 1
which is used -> in : 1
which is used -> for : 1
used in digit -> as : 1
in digit as -> specified : 1
digit as specified -> by : 1
specified by function -> retrieves : 1
by function retrieves -> function : 1
function retrieves function -> returns : 1
retrieves function returns -> a : 1
the current not -> modify : 1
current not modify -> the : 1
modify the a -> call : 1
the a call -> to : 1
call to might -> overwrite : 2
to might overwrite -> the : 2
might overwrite the -> contents : 2
overwrite the contents -> of : 3
the object returned -> from : 1
object returned from -> an : 1
returned from an -> earlier : 4
from an earlier -> call : 3
from an earlier -> successful : 1
an earlier call -> simultaneous : 2
an earlier call -> to : 1
earlier call simultaneous -> call : 2
call simultaneous call -> in : 2
simultaneous call in -> a : 2
in a multithreaded -> calls : 1
in a multithreaded -> header : 1
in a multithreaded -> for : 1
a multithreaded calls -> to : 1
multithreaded calls to -> for : 1
calls to for -> or : 1
to for or -> categories : 1
for or categories -> might : 1
or categories might -> also : 1
categories might also -> overwrite : 1
might also overwrite -> the : 1
also overwrite the -> contents : 1
the macro null -> pointer : 1
macro null pointer -> macro : 6
null pointer macro -> expands : 6
pointer macro expands -> to : 6
null pointer it -> is : 1
pointer it is -> defined : 1
pointer it is -> not : 1
defined in several -> c : 1
in several c -> see : 1
several c see -> its : 1
c see its -> description : 1
see its description -> in : 1
its description in -> for : 1
description in for -> function : 1
in for function -> sets : 1
for function sets -> or : 1
function sets or -> queries : 1
function sets or -> clears : 1
sets or queries -> const : 1
or queries const -> function : 1
queries const function -> sets : 1
const function sets -> the : 1
function sets the -> locale : 1
function sets the -> buffer : 1
function sets the -> buffering : 1
function sets the -> conversion : 1
function sets the -> flag : 1
sets the locale -> for : 1
the locale for -> a : 1
the locale for -> const : 1
locale for a -> specific : 1
for a specific -> which : 1
for a specific -> set : 1
specific which you -> must : 1
must specify using -> one : 1
specify using one -> of : 1
using one of -> the : 1
of the use -> to : 1
set all categories -> to : 1
all categories to -> the : 1
categories to the -> same : 1
the same with -> no : 1
same with no -> parameter : 1
with no parameter -> is : 1
with no parameter -> specifies : 1
no parameter is -> the : 1
the the default -> for : 1
for all categories -> is : 1
all categories is -> the : 1
categories is the -> the : 1
the the empty -> string : 1
the empty string -> is : 1
empty string is -> an : 1
string is an -> native : 1
string is an -> argument : 1
is an native -> the : 1
an native the -> implementation : 1
native the implementation -> can : 1
the implementation can -> define : 1
define other possible -> values : 1
other possible values -> for : 1
possible values for -> query : 1
values for query -> the : 1
for query the -> current : 1
query the current -> pass : 1
the current pass -> a : 1
current pass a -> null : 1
pass a null -> pointer : 1
pass a null -> because : 1
pass a null -> for : 1
as the note -> that : 2
note that each -> category : 1
that each category -> might : 1
each category might -> have : 1
category might have -> a : 1
a different when -> querying : 1
different when querying -> for : 1
when querying for -> the : 1
querying for the -> return : 1
return value might -> contain : 1
return value might -> be : 1
value might contain -> multiple : 1
might contain multiple -> locale : 1
contain multiple locale -> return : 1
multiple locale return -> value : 1
locale return value -> is : 1
a string that -> contains : 1
a string that -> does : 1
a string that -> can : 1
a string that -> specifies : 2
a string that -> is : 1
contains the new -> locale : 1
the new locale -> current : 1
the new locale -> and : 1
the new locale -> is : 1
the new locale -> has : 4
the new locale -> as : 1
new locale current -> locale : 1
locale current locale -> if : 1
current locale if -> you : 1
locale if you -> are : 1
you are querying -> with : 1
are querying with -> a : 1
querying with a -> null : 1
with a null -> for : 1
with a null -> pointer : 1
a null for -> the : 2
null for the -> specified : 1
null for the -> final : 1
for the specified -> if : 1
the specified if -> the : 1
specified if the -> locale : 1
the locale cannot -> be : 1
locale cannot be -> a : 1
is not modify -> the : 1
the string returned -> from : 2
string returned from -> a : 1
string returned from -> an : 1
of the string -> returned : 1
of the string -> are : 2
of the string -> that : 1
of the string -> without : 1
of the string -> buffer : 8
of the string -> and : 1
of the string -> to : 1
a multithreaded header -> declares : 1
multithreaded header declares -> a : 1
number of mathematical -> functions : 1
of mathematical functions -> the : 1
mathematical functions the -> c : 1
functions the c -> standard : 1
c standard in -> addition : 1
standard in addition -> to : 1
the standard c -> most : 1
the standard c -> it : 1
standard c most -> functions : 1
c most functions -> have : 1
most functions have -> overloaded : 1
functions have overloaded -> versions : 1
have overloaded versions -> for : 1
have overloaded versions -> that : 1
overloaded versions for -> different : 1
versions for different -> parameter : 1
for different parameter -> each : 1
different parameter each -> syntax : 1
parameter each syntax -> shows : 1
each syntax shows -> all : 1
syntax shows all -> the : 1
the overloaded with -> no : 1
overloaded with no -> an : 1
no an argument -> is : 1
of a domain -> error : 1
domain error the -> function : 1
domain error the -> return : 3
error the function -> sets : 1
error the function -> returns : 1
the function sets -> to : 1
the function sets -> and : 2
function sets to -> and : 1
sets to and -> returns : 1
an error the -> value : 1
an error the -> return : 1
error the value -> is : 1
value is defined -> by : 1
by the so -> the : 1
so the only -> portable : 1
the only portable -> way : 1
only portable way -> to : 1
portable way to -> test : 1
test for a -> domain : 1
for a domain -> error : 1
domain error is -> to : 1
error is to -> check : 1
is to check -> if : 1
to check if -> the : 1
check if the -> result : 1
range error the -> function : 1
function returns and -> sets : 1
function returns and -> may : 1
function returns and -> the : 1
returns and sets -> to : 1
and sets to -> if : 1
sets to if -> underflow : 1
to if underflow -> the : 1
if underflow the -> function : 1
underflow the function -> returns : 1
returns and may -> or : 1
and may or -> may : 1
may not set -> to : 1
not set to -> for : 1
not set to -> upon : 1
information about is -> defined : 1
about is defined -> to : 1
is defined to -> be : 2
defined to be -> a : 1
defined to be -> which : 1
the standard does -> not : 5
standard does not -> define : 2
standard does not -> specify : 2
standard does not -> guarantee : 1
standard does not -> mandate : 1
define a suitable -> value : 1
a suitable value -> for : 1
suitable value for -> the : 1
the and versions -> of : 2
and versions of -> the : 2
of the math -> if : 1
of the math -> the : 1
the math if -> you : 1
math if you -> are : 1
are using a -> system : 1
using a system -> that : 1
a system that -> has : 1
system that has -> infinity : 1
that has infinity -> as : 1
has infinity as -> an : 1
infinity as an -> explicit : 1
as an explicit -> value : 1
an explicit value -> as : 1
an explicit value -> for : 1
explicit value as -> iec : 1
value as iec -> which : 1
as iec which -> is : 1
iec which is -> found : 1
is found on -> and : 1
found on and -> modern : 1
on and modern -> the : 1
and modern the -> overloaded : 1
modern the overloaded -> versions : 1
the overloaded versions -> of : 1
versions of a -> function : 1
a function probably -> return : 1
function probably return -> infinity : 1
probably return infinity -> for : 1
return infinity for -> so : 1
infinity for so -> there : 1
for so there -> is : 1
is no problem -> with : 1
no problem with -> the : 1
problem with the -> and : 1
with the and -> versions : 1
with the and -> the : 2
the for maximum -> use : 1
for maximum use -> only : 1
maximum use only -> the : 1
use only the -> versions : 1
only the versions -> of : 1
the versions of -> the : 2
the math the -> trigonometric : 1
math the trigonometric -> functions : 1
the trigonometric functions -> use : 1
trigonometric functions use -> the : 1
functions use the -> descriptions : 1
functions use the -> common : 1
functions use the -> facet : 1
use the descriptions -> of : 1
of these functions -> use : 1
of these functions -> are : 1
of these functions -> returns : 1
these functions use -> the : 1
use the common -> mathematical : 1
the common mathematical -> notation : 1
common mathematical notation -> for : 1
mathematical notation for -> ranges : 1
notation for ranges -> of : 1
for ranges of -> represents : 1
ranges of represents -> all : 1
of represents all -> values : 1
represents all values -> such : 1
all values such -> that : 1
values such that -> the : 1
that the square -> bracket : 1
the parenthesis denotes -> an : 1
of a other -> headers : 1
a other headers -> in : 1
other headers in -> the : 1
standard library declare -> additional : 1
library declare additional -> mathematical : 1
declare additional mathematical -> macros : 1
additional mathematical macros -> for : 1
mathematical macros for -> the : 1
macros for the -> limits : 2
for the limits -> of : 3
limits of macros -> for : 1
of macros for -> the : 1
limits of integer -> types : 1
of integer types -> and : 1
integer types and -> functions : 1
working with complex -> integer : 1
with complex integer -> absolute : 1
complex integer absolute -> value : 1
integer absolute value -> functions : 1
absolute value functions -> and : 1
value functions and -> functions : 1
functions and functions -> that : 1
functions that compute -> a : 1
that compute a -> quotient : 1
compute a quotient -> and : 1
a quotient and -> remainder : 1
single the class -> template : 1
limits of the -> numerical : 1
of the numerical -> the : 1
the numerical the -> largest : 1
numerical the largest -> the : 1
largest the precision -> of : 1
the precision of -> and : 1
the precision of -> places : 1
precision of and -> so : 1
and so generic -> numerical : 1
so generic numerical -> types : 1
generic numerical types -> and : 1
numerical types and -> functions : 1
functions for computation -> with : 1
for computation with -> arrays : 1
computation with arrays -> of : 1
with arrays of -> function : 1
with arrays of -> narrow : 1
arrays of function -> computes : 1
of function computes -> absolute : 1
of function computes -> binary : 1
of function computes -> double : 1
function computes absolute -> double : 2
function computes absolute -> function : 1
computes absolute double -> long : 2
absolute double long -> double : 2
double double function -> returns : 15
double double function -> separates : 1
double function returns -> the : 14
double function returns -> if : 1
returns the absolute -> value : 5
the absolute value -> of : 8
absolute value of -> its : 2
absolute value of -> function : 4
absolute value of -> the : 1
absolute value of -> each : 1
of its if -> it : 2
of its if -> either : 2
its if it -> returns : 2
if it returns -> it : 2
if it returns -> may : 1
if it returns -> throwing : 1
it returns it -> returns : 2
returns it returns -> function : 3
returns it returns -> the : 1
returns it returns -> streamsize : 1
returns it returns -> following : 1
returns function in -> is : 1
function in is -> the : 1
as the header -> declares : 1
header declares integer -> versions : 1
declares integer versions -> of : 1
integer versions of -> the : 1
in function computes -> inverse : 1
in function computes -> double : 1
in function computes -> an : 1
in function computes -> quotient : 2
in function computes -> length : 1
function computes inverse -> double : 3
function computes inverse -> float : 1
computes inverse double -> long : 3
inverse double long -> double : 3
returns the inverse -> cosine : 1
returns the inverse -> sine : 1
returns the inverse -> tangent : 2
the inverse cosine -> of : 2
inverse cosine of -> its : 1
inverse cosine of -> each : 1
cosine of its -> the : 1
cosine of its -> in : 1
cosine of its -> note : 1
its the parameter -> must : 2
or a domain -> error : 3
error the return -> value : 4
the range function -> computes : 6
the range function -> in : 2
range function computes -> inverse : 3
range function computes -> double : 1
range function computes -> hyperbolic : 2
the inverse sine -> of : 2
inverse sine of -> its : 1
inverse sine of -> each : 1
sine of its -> the : 1
sine of its -> in : 1
sine of its -> note : 1
the inverse tangent -> of : 4
inverse tangent of -> its : 1
inverse tangent of -> using : 1
inverse tangent of -> each : 1
inverse tangent of -> two : 1
inverse tangent of -> in : 1
tangent of its -> the : 2
tangent of its -> note : 1
its the return -> value : 1
computes inverse float -> double : 1
inverse float double -> double : 1
float double double -> long : 2
long double with -> no : 2
double with no -> function : 4
no function returns -> the : 6
tangent of using -> the : 1
of using the -> sign : 1
of using the -> the : 2
of using the -> addition : 2
of using the -> subtraction : 1
of using the -> c : 1
using the sign -> of : 1
sign of both -> numbers : 1
of both numbers -> to : 1
both numbers to -> determine : 1
numbers to determine -> the : 1
determine the quadrant -> for : 1
the quadrant for -> the : 1
quadrant for the -> return : 1
return it correctly -> handles : 1
it correctly handles -> the : 1
correctly handles the -> case : 1
handles the case -> in : 1
the case in -> which : 1
it returns times -> the : 1
returns times the -> sign : 1
times the sign -> of : 1
sign of for -> nonzero : 1
of for nonzero -> if : 1
for nonzero if -> is : 1
nonzero if is -> the : 1
result is and -> might : 1
is and might -> be : 1
and might be -> a : 1
be a range -> the : 1
a range the -> return : 1
function computes double -> long : 6
computes double long -> double : 6
returns the smallest -> integer : 1
returns the smallest -> positive : 1
returns the smallest -> such : 2
the smallest integer -> that : 1
smallest integer that -> is : 1
integer that is -> greater : 1
integer that is -> less : 1
integer that is -> stored : 1
that is greater -> than : 1
equal to function -> computes : 2
to function computes -> double : 1
to function computes -> float : 1
returns the cosine -> of : 1
the cosine of -> its : 1
the cosine of -> each : 1
its in the -> return : 2
function computes hyperbolic -> double : 3
computes hyperbolic double -> long : 3
hyperbolic double long -> double : 3
returns the hyperbolic -> cosine : 1
returns the hyperbolic -> sine : 1
returns the hyperbolic -> tangent : 1
the hyperbolic cosine -> of : 2
hyperbolic cosine of -> its : 1
hyperbolic cosine of -> function : 1
hyperbolic cosine of -> each : 1
of its note -> that : 3
its note that -> has : 3
note that has -> no : 3
note that has -> constant : 1
that has no -> inverse : 3
has no inverse -> hyperbolic : 3
no inverse hyperbolic -> trigonometric : 3
inverse hyperbolic trigonometric -> the : 3
hyperbolic trigonometric the -> boost : 3
trigonometric the boost -> project : 3
boost project fills -> that : 3
project fills that -> see : 3
fills that see -> for : 3
that see for -> information : 3
that see for -> an : 1
about function computes -> double : 1
about function computes -> square : 1
is too a -> range : 1
too a range -> error : 1
range error function -> computes : 1
error function computes -> absolute : 1
returns function is -> the : 1
returns function is -> if : 1
as for it -> exists : 1
for it exists -> only : 1
it exists only -> for : 1
only for compatibility -> with : 1
compatibility with function -> in : 1
with function in -> function : 1
returns the largest -> integer : 1
returns the largest -> index : 1
returns the largest -> such : 1
the largest integer -> that : 1
largest integer that -> is : 1
function computes float -> double : 1
function computes float -> float : 1
computes float double -> double : 1
returns the remainder -> of : 1
dividing by if -> is : 1
by if is -> the : 1
value might be -> or : 1
value might be -> formatted : 1
be or a -> domain : 1
be or a -> pointer : 1
domain error can -> if : 1
error can if -> is : 1
can if is -> the : 1
value is for -> some : 1
value is for -> success : 12
value is for -> an : 2
value is for -> or : 1
value is for -> which : 1
value is for -> failure : 4
value is for -> if : 2
value is for -> the : 1
value is for -> s : 1
is for some -> integer : 1
for some integer -> such : 1
some integer such -> that : 1
that the result -> has : 1
result has the -> same : 1
the same sign -> as : 2
same sign as -> and : 1
same sign as -> the : 1
sign as and -> an : 1
as and an -> absolute : 1
and an absolute -> value : 1
an absolute value -> less : 1
absolute value less -> than : 1
value less than -> the : 1
than the absolute -> value : 1
value of function -> computes : 1
value of function -> function : 2
value of function -> in : 1
function computes binary -> fraction : 1
computes binary fraction -> and : 1
binary fraction and -> double : 1
binary fraction and -> int : 1
fraction and double -> long : 1
and double long -> double : 1
double function separates -> a : 1
function separates a -> number : 1
separates a number -> into : 1
a number into -> a : 1
a number into -> integral : 1
number into a -> fraction : 1
into a fraction -> and : 1
a fraction and -> an : 1
fraction and an -> exponent : 1
an exponent a -> base : 1
exponent a base -> of : 1
base of such -> that : 1
of such that -> in : 1
such that in -> which : 1
that in which -> is : 1
range or is -> if : 1
or is if -> is : 1
the is stored -> in : 1
return value and -> are : 1
value and are -> macro : 1
and are macro -> range : 1
are macro range -> error : 1
macro range error -> with : 1
range error with -> no : 1
error with no -> an : 1
no an overflow -> most : 1
an overflow most -> functions : 1
overflow most functions -> set : 1
most functions set -> to : 1
functions set to -> and : 1
set to and -> return : 1
set to and -> is : 2
to and return -> with : 1
and return with -> the : 1
with the correct -> sign : 1
the correct sign -> of : 1
correct sign of -> the : 1
the the exact -> value : 1
the the exact -> contents : 1
the exact value -> of : 1
exact value of -> is : 1
of is and -> is : 1
of is and -> functions : 1
necessarily a it -> might : 1
a it might -> even : 1
it might even -> be : 1
might even be -> a : 1
even be a -> value : 1
be a value -> that : 1
can be returned -> as : 1
can be returned -> from : 1
be returned as -> a : 1
returned as a -> valid : 1
as a valid -> result : 1
a valid result -> from : 1
valid result from -> the : 1
result from the -> in : 1
the in that -> the : 1
that the only -> way : 1
way to discover -> whether : 1
to discover whether -> an : 1
discover whether an -> overflow : 1
whether an overflow -> occurred : 1
an overflow occurred -> is : 1
overflow occurred is -> to : 1
occurred is to -> test : 1
to test as -> shown : 1
test as shown -> in : 1
in a logarithm -> to : 1
a logarithm to -> any : 2
logarithm to any -> a : 1
logarithm to any -> return : 1
to any a -> logarithm : 1
any a logarithm -> to : 1
to any return -> the : 1
any return the -> logarithm : 1
return the logarithm -> of : 1
the logarithm of -> x : 1
logarithm of x -> to : 1
of x to -> the : 1
x to the -> base : 1
the base t -> t : 1
base t t -> errno : 1
t t errno -> t : 1
t errno t -> logx : 1
errno t logx -> if : 1
t logx if -> return : 1
logx if return -> should : 1
if return should -> be : 2
return should be -> else : 2
should be else -> if : 2
be else if -> return : 2
if return implementation -> defined : 2
return implementation defined -> t : 1
return implementation defined -> if : 1
implementation defined t -> logn : 1
defined t logn -> if : 1
t logn if -> return : 1
logn if return -> should : 1
implementation defined if -> errno : 1
defined if errno -> return : 1
if errno return -> return : 1
errno return return -> logx : 1
return return logx -> function : 1
return logx function -> makes : 1
logx function makes -> floating : 1
function makes floating -> point : 1
makes floating point -> from : 1
floating point from -> binary : 1
point from binary -> fraction : 1
from binary fraction -> and : 1
fraction and int -> double : 1
and int double -> int : 1
int double int -> long : 1
double int long -> double : 2
int long double -> double : 2
int long double -> unformatted : 1
int long double -> a : 1
double double int -> function : 2
double double int -> long : 1
double int function -> returns : 1
double int function -> raises : 1
int function returns -> a : 3
int function returns -> the : 1
returns a number -> that : 1
a number that -> it : 1
number that it -> constructs : 1
that it constructs -> from : 1
it constructs from -> a : 1
constructs from a -> fractional : 1
from a fractional -> part : 1
a fractional part -> and : 1
fractional part and -> an : 1
part and an -> exponent : 1
an exponent the -> return : 1
exponent the return -> value : 1
value is function -> computes : 1
value is function -> closes : 1
value is function -> function : 12
is function computes -> natural : 1
is function computes -> common : 1
function computes natural -> double : 1
computes natural double -> long : 1
natural double long -> double : 1
double double with -> no : 2
returns the natural -> logarithm : 1
the natural logarithm -> of : 2
natural logarithm of -> its : 1
natural logarithm of -> the : 1
natural logarithm of -> each : 1
logarithm of its -> a : 2
of its a -> domain : 2
its a domain -> error : 2
error occurs if -> is : 2
occurs if is -> a : 2
range error might -> occur : 2
error might occur -> if : 2
might occur if -> is : 2
occur if is -> function : 2
if is function -> computes : 1
if is function -> separates : 1
function computes common -> double : 1
computes common double -> long : 1
common double long -> double : 1
returns the common -> logarithm : 1
the common logarithm -> of : 2
common logarithm of -> its : 1
common logarithm of -> the : 1
common logarithm of -> each : 1
is function separates -> integer : 1
function separates integer -> and : 1
separates integer and -> fraction : 1
integer and fraction -> double : 1
and fraction double -> long : 1
fraction double long -> double : 1
double long function -> splits : 1
long function splits -> a : 1
function splits a -> number : 1
splits a number -> into : 1
number into integral -> and : 1
into integral and -> fractional : 1
integral and fractional -> both : 1
and fractional both -> parts : 1
fractional both parts -> have : 1
both parts have -> the : 1
parts have the -> same : 1
sign as the -> integral : 1
as the integral -> part : 1
the integral part -> is : 1
integral part is -> stored : 1
part is stored -> in : 1
is the fractional -> function : 1
the fractional function -> computes : 1
fractional function computes -> float : 1
computes float float -> int : 1
float float int -> double : 1
float int double -> double : 1
double double double -> int : 1
long double long -> double : 3
int function raises -> to : 1
function raises to -> the : 1
raises to the -> if : 1
an integral a -> domain : 1
integral a domain -> error : 1
domain error if -> is : 1
error if is -> and : 1
and is less -> than : 1
the result cannot -> be : 1
result cannot be -> represented : 1
cannot be represented -> as : 4
be represented as -> a : 5
represented as a -> real : 1
represented as a -> multibyte : 2
represented as a -> is : 1
represented as a -> a : 1
represented as a -> number : 1
as a real -> a : 1
a real a -> domain : 1
real a domain -> error : 1
domain error a -> range : 1
error a range -> error : 1
range error can -> occur : 1
error can occur -> if : 1
can occur if -> the : 1
occur if the -> result : 1
result is out -> of : 1
out of function -> computes : 1
returns the sine -> of : 1
the sine of -> its : 1
the sine of -> the : 1
the hyperbolic sine -> of : 2
hyperbolic sine of -> its : 1
hyperbolic sine of -> function : 1
hyperbolic sine of -> the : 1
function computes square -> double : 1
computes square double -> long : 1
square double long -> double : 1
returns the square -> root : 1
returns the square -> of : 1
square root or -> its : 1
root or its -> if : 1
or its if -> is : 1
its if is -> a : 1
is a domain -> error : 1
is always positive -> or : 1
always positive or -> function : 1
positive or function -> computes : 2
or function computes -> double : 1
or function computes -> hyperbolic : 1
returns the tangent -> of : 1
the tangent of -> its : 1
the tangent of -> the : 1
its the standard -> does : 1
does not specify -> the : 1
does not specify -> which : 1
not specify the -> result : 1
specify the result -> when : 1
the result when -> the : 1
result when the -> tangent : 1
when the tangent -> is : 1
the tangent is -> undefined : 1
tangent is undefined -> when : 1
is undefined when -> is : 1
undefined when is -> for : 1
when is for -> any : 1
when is for -> a : 1
is for any -> integer : 1
is for any -> other : 1
is for any -> value : 1
for any integer -> but : 1
any integer but -> a : 1
integer but a -> reasonable : 1
but a reasonable -> result : 1
a reasonable result -> is : 1
reasonable result is -> a : 1
a range due -> to : 1
range due to -> the : 1
to the nature -> of : 1
of the tangent -> the : 1
the tangent the -> sign : 1
tangent the sign -> of : 1
return value can -> be : 1
can be positive -> or : 1
be positive or -> function : 1
the hyperbolic tangent -> of : 2
hyperbolic tangent of -> its : 1
hyperbolic tangent of -> function : 1
hyperbolic tangent of -> the : 1
information about header -> declares : 1
about header declares -> the : 1
declares the class -> template : 6
declares the class -> templates : 1
declares the class -> the : 1
declares the class -> which : 1
template and specializations -> for : 1
and specializations for -> the : 1
specializations for the -> and : 1
the and it -> also : 1
and it also -> declares : 1
it also declares -> mathematical : 1
also declares mathematical -> functions : 1
declares mathematical functions -> that : 1
mathematical functions that -> work : 1
functions that work -> with : 1
work with function -> function : 1
with function function -> template : 1
template computes absolute -> t : 1
template computes absolute -> function : 1
computes absolute t -> function : 1
absolute t function -> returns : 1
t function returns -> the : 5
template computes argument -> t : 1
computes argument t -> function : 1
argument t function -> returns : 1
returns the argument -> in : 1
returns the argument -> that : 1
the argument in -> polar : 1
argument in polar -> of : 1
in polar of -> function : 1
polar of function -> function : 1
function class class -> template : 7
function class class -> function : 7
function class class -> class : 20
class template complex -> number : 1
template complex number -> class : 1
complex number class -> typedef : 1
number class typedef -> t : 1
typedef t re -> const : 1
t re const -> im : 1
re const im -> t : 1
const im t -> t : 1
im t t -> class : 1
t t class -> template : 1
t class template -> represents : 1
t class template -> is : 1
class template represents -> a : 13
class template represents -> the : 3
class template represents -> an : 1
template represents a -> complex : 1
template represents a -> it : 1
template represents a -> file : 1
template represents a -> position : 1
template represents a -> stream : 1
template represents a -> map : 2
template represents a -> pair : 2
template represents a -> subset : 4
represents a complex -> the : 1
a complex the -> header : 1
complex the header -> specializes : 1
the header specializes -> the : 1
header specializes the -> template : 1
specializes the template -> for : 2
can instantiate for -> any : 1
instantiate for any -> type : 1
for any type -> that : 1
type that behaves -> in : 1
that behaves in -> the : 1
behaves in the -> manner : 1
the manner of -> the : 1
the manner of -> return : 1
manner of the -> fundamental : 1
the fundamental numeric -> type : 1
the fundamental numeric -> types : 1
fundamental numeric type -> definition : 1
numeric type definition -> is : 1
type definition is -> a : 1
definition is a -> straightforward : 1
is a straightforward -> representation : 1
is a straightforward -> specialization : 3
a straightforward representation -> of : 1
straightforward representation of -> a : 1
of a complex -> basic : 1
a complex basic -> assignment : 1
complex basic assignment -> operators : 1
basic assignment operators -> are : 1
assignment operators are -> defined : 1
assignment operators are -> so : 1
defined as member -> and : 1
as member and -> arithmetic : 1
member and arithmetic -> operators : 1
and arithmetic operators -> are : 1
defined as global -> a : 1
as global a -> object : 1
global a object -> by : 1
a object by -> copying : 1
object by copying -> the : 1
by copying the -> members : 1
by copying the -> contents : 1
by copying the -> elements : 1
copying the members -> from : 1
the members from -> this : 1
members from this -> converts : 1
from this converts -> a : 1
this converts a -> complex : 1
converts a complex -> object : 1
complex object instantiated -> for : 1
object instantiated for -> one : 1
instantiated for one -> type : 1
for one type -> to : 1
one type to -> a : 1
object of another -> the : 1
of another the -> real : 1
another the real -> part : 1
the real part -> of : 5
real part of -> the : 1
real part of -> and : 1
real part of -> leaving : 2
real part of -> that : 1
of the imaginary -> part : 1
the imaginary part -> of : 4
the imaginary part -> returns : 2
imaginary part of -> to : 1
imaginary part of -> that : 1
imaginary part of -> the : 2
imaginary part of -> or : 6
part of to -> the : 1
to the real -> part : 2
part of and -> to : 1
of and to -> the : 1
to the imaginary -> returns : 1
the imaginary returns -> to : 1
imaginary returns to -> the : 1
returns to the -> real : 1
returns to the -> end : 1
part of leaving -> the : 2
of leaving the -> imaginary : 2
leaving the imaginary -> part : 2
imaginary part returns -> from : 1
imaginary part returns -> the : 1
part returns from -> the : 1
returns from the -> real : 1
returns from the -> maximum : 1
from the real -> part : 1
part returns the -> real : 1
returns the real -> and : 4
returns the real -> part : 1
the real and -> imaginary : 5
the real and -> is : 2
the real and -> or : 2
real and imaginary -> parts : 5
real and imaginary -> r : 1
and imaginary parts -> of : 5
imaginary parts of -> by : 2
imaginary parts of -> to : 2
imaginary parts of -> both : 1
parts of by -> returns : 2
of by returns -> the : 2
by returns the -> real : 2
parts of to -> returns : 2
of to returns -> the : 1
of to returns -> note : 1
to returns note -> that : 2
returns note that -> and : 5
returns note that -> no : 2
note that and -> can : 5
that and can -> have : 5
and can have -> different : 5
have different template -> parameter : 5
different template parameter -> to : 1
different template parameter -> from : 1
different template parameter -> by : 2
different template parameter -> template : 1
template parameter to -> returns : 1
template parameter to -> if : 1
template parameter to -> obtain : 1
parameter to returns -> note : 1
template parameter from -> returns : 1
parameter from returns -> note : 1
from returns note -> that : 1
template parameter by -> returns : 2
parameter by returns -> note : 2
by returns note -> that : 2
template parameter template -> template : 1
parameter template template -> specialization : 1
template template specialization -> complex : 3
template template specialization -> iterator : 2
template specialization complex -> class : 3
specialization complex class -> typedef : 3
complex class typedef -> double : 1
complex class typedef -> float : 1
complex class typedef -> long : 1
class typedef double -> re : 1
typedef double re -> double : 1
double re double -> im : 1
re double im -> explicit : 1
double im explicit -> double : 1
im explicit double -> double : 1
explicit double double -> class : 1
double double class -> is : 1
double class is -> a : 2
a straightforward specialization -> of : 3
straightforward specialization of -> the : 3
the class it -> changes : 3
the class it -> declares : 1
class it changes -> the : 3
it changes the -> operators : 3
it changes the -> delimiter : 1
changes the operators -> to : 3
the operators to -> pass : 3
operators to pass -> parameters : 3
to pass parameters -> by : 3
pass parameters by -> value : 3
parameters by value -> instead : 3
by value instead -> of : 3
value instead of -> by : 3
instead of by -> and : 2
instead of by -> function : 1
of by and -> it : 2
by and it -> adds : 2
and it adds -> a : 1
and it adds -> two : 1
it adds a -> new : 1
adds a new -> a : 1
new a complex -> number : 2
a complex number -> by : 2
a complex number -> from : 1
complex number by -> copying : 2
number by copying -> from : 2
by copying from -> note : 2
copying from note -> that : 2
from note that -> you : 2
you might lose -> precision : 2
might lose precision -> or : 2
lose precision or -> so : 2
precision or so -> the : 2
so the constructor -> is : 1
constructor is template -> template : 1
is template template -> specialization : 1
class typedef float -> re : 1
typedef float re -> float : 1
float re float -> im : 1
re float im -> explicit : 1
float im explicit -> explicit : 1
im explicit explicit -> float : 1
explicit explicit float -> float : 1
explicit float float -> class : 1
float float class -> is : 1
float class is -> a : 1
it adds two -> new : 1
adds two new -> a : 1
two new a -> complex : 1
so the constructors -> are : 1
the constructors are -> template : 1
constructors are template -> template : 1
are template template -> specialization : 1
class typedef long -> double : 1
typedef long double -> double : 1
double double re -> long : 1
double re long -> double : 1
re long double -> im : 1
long double im -> long : 1
double im long -> double : 1
im long double -> long : 1
long double class -> is : 1
of by function -> function : 1
by function function -> template : 1
by function function -> function : 1
template computes function -> returns : 5
template computes function -> computes : 4
computes function returns -> the : 5
returns the complex -> conjugate : 1
returns the complex -> cosine : 1
returns the complex -> hyperbolic : 3
returns the complex -> natural : 1
returns the complex -> common : 1
returns the complex -> power : 1
returns the complex -> sine : 1
returns the complex -> square : 1
returns the complex -> tangent : 1
the complex conjugate -> of : 1
complex conjugate of -> function : 1
conjugate of function -> function : 1
the complex cosine -> of : 1
complex cosine of -> function : 1
cosine of function -> in : 2
template computes hyperbolic -> function : 6
computes hyperbolic function -> returns : 3
computes hyperbolic function -> computes : 3
hyperbolic function returns -> the : 3
the complex hyperbolic -> cosine : 1
the complex hyperbolic -> sine : 1
the complex hyperbolic -> tangent : 1
complex hyperbolic cosine -> of : 1
returns the exponential -> of : 1
the exponential of -> that : 1
exponential of that -> function : 1
of that function -> in : 2
of that function -> function : 1
that function in -> function : 2
template returns imaginary -> t : 1
returns imaginary t -> function : 1
imaginary t function -> returns : 1
returns the imaginary -> part : 1
template computes natural -> function : 2
computes natural function -> returns : 1
computes natural function -> computes : 1
natural function returns -> the : 1
the complex natural -> logarithm : 1
complex natural logarithm -> of : 1
logarithm of the -> branch : 2
of the branch -> cuts : 2
the branch cuts -> are : 3
branch cuts are -> along : 4
cuts are along -> the : 4
are along the -> negative : 4
along the negative -> real : 4
the negative real -> which : 2
the negative real -> function : 1
the negative real -> the : 1
negative real which -> means : 2
real which means -> the : 2
means the imaginary -> part : 2
range function in -> function : 2
template computes common -> function : 2
computes common function -> returns : 1
computes common function -> computes : 1
common function returns -> the : 1
the complex common -> logarithm : 1
complex common logarithm -> of : 1
template computes normalized -> t : 1
computes normalized t -> function : 1
normalized t function -> returns : 1
the square of -> the : 1
square of the -> absolute : 1
of the absolute -> value : 1
function template persforms -> unary : 1
template persforms unary -> positive : 1
persforms unary positive -> or : 1
unary positive or -> const : 1
positive or const -> const : 1
or const const -> const : 2
const const unary -> positive : 1
const const unary -> negation : 1
const unary positive -> operator : 1
unary positive operator -> returns : 1
positive operator returns -> binary : 1
operator returns binary -> addition : 1
operator returns binary -> subtraction : 1
returns binary addition -> operator : 1
binary addition operator -> returns : 1
addition operator returns -> the : 1
returns the sum -> of : 1
the sum of -> its : 1
the sum of -> all : 1
sum of its -> if : 1
its if either -> operand : 2
if either operand -> is : 6
either operand is -> of : 6
operand is of -> type : 6
type the argument -> is : 5
type the argument -> must : 1
as the real -> with : 6
the real with -> an : 6
real with an -> imaginary : 6
with an imaginary -> part : 6
an imaginary part -> of : 6
part of or -> function : 5
part of or -> division : 1
of or function -> function : 5
or function function -> template : 5
template performs negation -> or : 1
performs negation or -> const : 1
negation or const -> const : 1
const unary negation -> operator : 1
unary negation operator -> returns : 1
negation operator returns -> binary : 1
returns binary subtraction -> operator : 1
binary subtraction operator -> returns : 1
subtraction operator returns -> the : 1
returns the difference -> of : 1
difference of its -> if : 1
template performs const -> const : 6
performs const const -> const : 6
const const binary -> operator : 2
const binary operator -> performs : 2
binary operator performs -> complex : 2
operator performs complex -> if : 2
performs complex if -> either : 2
complex if either -> operand : 2
of or division -> by : 1
or division by -> zero : 1
division by zero -> results : 1
by zero results -> in : 1
zero results in -> undefined : 1
in undefined function -> function : 1
undefined function function -> template : 1
template checks bool -> const : 2
checks bool const -> bool : 2
bool const bool -> const : 13
bool const bool -> conat : 6
const bool const -> bool : 4
const bool const -> operator : 2
const bool const -> iostate : 1
const bool const -> int : 1
const bool const -> return : 1
const bool const -> class : 12
const bool const -> namespace : 1
bool const operator -> returns : 15
bool const operator -> is : 12
bool const operator -> determines : 5
bool const operator -> compares : 12
const operator returns -> if : 6
const operator returns -> a : 1
const operator returns -> function : 7
const operator returns -> class : 1
const operator returns -> true : 1
if the real -> and : 1
if the real -> or : 1
parts of both -> values : 1
of both values -> are : 1
both values are -> if : 1
values are if -> either : 1
are if either -> operand : 1
the real or -> imaginary : 1
real or imaginary -> parts : 1
or imaginary parts -> are : 1
imaginary parts are -> not : 1
parts are not -> if : 1
are not if -> either : 1
not if either -> operand : 1
type the parameter -> is : 1
type the parameter -> must : 1
parameter is interpreted -> as : 1
writes a complex -> typename : 1
a complex typename -> typename : 2
complex typename typename -> const : 1
complex typename typename -> operator : 1
const operator prints -> to : 1
operator prints to -> the : 1
prints to the -> output : 1
output stream in -> the : 1
stream in the -> form : 1
stream in the -> following : 1
is the real -> and : 4
real and is -> the : 2
is the imaginary -> a : 1
is the imaginary -> value : 2
is the imaginary -> function : 1
the imaginary a -> complex : 1
imaginary a complex -> shows : 1
a complex shows -> how : 1
complex shows how -> is : 1
how is if -> you : 1
is if you -> want : 1
you want more -> control : 2
want more control -> over : 2
more control over -> the : 2
control over the -> you : 1
control over the -> or : 1
over the you -> must : 1
you must print -> the : 1
must print the -> value : 1
print the value -> a : 1
the value a -> complex : 1
value a complex -> class : 1
a complex class -> class : 1
complex class class -> const : 1
class class const -> s : 1
class class const -> const : 4
class class const -> chart : 1
class const s -> return : 1
const s return -> o : 1
s return o -> function : 1
return o function -> function : 1
o function function -> template : 1
reads a complex -> typename : 1
reads a complex -> number : 1
typename typename operator -> reads : 1
typename operator reads -> a : 1
complex number from -> an : 1
number from an -> input : 1
input stream into -> the : 3
stream into the -> input : 1
stream into the -> character : 1
stream into the -> string : 1
into the input -> format : 1
the input format -> can : 1
the input format -> is : 1
input format can -> be : 1
format can be -> any : 1
real and or -> is : 2
and or is -> the : 2
the imaginary value -> is : 2
imaginary value is -> the : 2
the imaginary function -> function : 1
imaginary function function -> template : 1
function template converts -> to : 1
function template converts -> a : 2
template converts to -> polar : 1
converts to polar -> const : 1
to polar const -> function : 1
polar const function -> returns : 1
const function returns -> a : 1
const function returns -> the : 7
returns a complex -> object : 1
complex object that -> represents : 1
object that represents -> the : 1
represents the value -> given : 1
represents the value -> returned : 1
the value given -> in : 1
value given in -> polar : 1
given in polar -> in : 1
in polar in -> which : 1
polar in which -> is : 1
is the magnitude -> and : 1
the magnitude and -> is : 1
magnitude and is -> the : 1
is the angle -> the : 1
angle the resulting -> value : 1
the resulting value -> has : 1
the resulting value -> is : 2
resulting value has -> the : 1
value has the -> following : 1
value has the -> format : 1
the following real -> and : 1
following real and -> imaginary : 1
and imaginary r -> imag : 1
imaginary r imag -> r : 1
r imag r -> function : 1
imag r function -> function : 1
r function function -> function : 1
template computes int -> const : 1
computes int const -> const : 1
the complex power -> if : 1
complex power if -> and : 1
power if and -> are : 1
if and are -> both : 1
if and are -> in : 1
if and are -> the : 2
if and are -> that : 1
if and are -> not : 1
and are both -> the : 1
and are both -> smallest : 1
is the branch -> cuts : 1
negative real function -> function : 1
real function function -> function : 1
template returns real -> t : 1
returns real t -> function : 1
real t function -> returns : 1
that function function -> template : 5
the complex sine -> of : 1
complex sine of -> function : 1
sine of function -> in : 2
complex hyperbolic sine -> of : 1
template computes square -> function : 2
computes square function -> returns : 1
computes square function -> computes : 1
square function returns -> the : 1
the complex square -> root : 1
complex square root -> of : 1
root of branch -> cuts : 1
of branch cuts -> are : 1
negative real the -> result : 1
real the result -> always : 1
the result always -> has : 2
result always has -> a : 2
has a nonnegative -> real : 1
a nonnegative real -> function : 1
nonnegative real function -> in : 1
real function in -> function : 1
the complex tangent -> of : 1
complex tangent of -> function : 1
tangent of function -> in : 2
complex hyperbolic tangent -> of : 1
function in header -> is : 1
c standard chapter -> presents : 1
standard chapter presents -> only : 1
chapter presents only -> the : 1
presents only the -> most : 1
only the most -> cursory : 1
the most cursory -> description : 1
most cursory description -> of : 1
cursory description of -> this : 1
description of this -> header : 1
of this header -> because : 1
this header because -> its : 1
header because its -> use : 1
because its use -> is : 1
its use is -> limited : 1
its use is -> largely : 1
use is limited -> in : 1
is limited in -> a : 1
is limited in -> what : 1
limited in a -> use : 1
in a use -> exceptions : 1
a use exceptions -> instead : 1
use exceptions instead -> of : 2
exceptions instead of -> the : 1
exceptions instead of -> function : 1
functions in type -> jump : 1
in type jump -> type : 1
type jump type -> is : 1
jump type is -> an : 1
is an opaque -> array : 1
is an opaque -> type : 2
an opaque array -> type : 1
opaque array type -> that : 1
array type that -> stores : 1
type that stores -> information : 1
type that stores -> the : 1
that stores information -> for : 1
stores information for -> the : 1
the and function -> performs : 1
and function performs -> nonlocal : 1
function performs nonlocal -> int : 1
performs nonlocal int -> function : 1
nonlocal int function -> bypasses : 1
int function bypasses -> the : 1
function bypasses the -> normal : 1
bypasses the normal -> function : 1
the normal function -> return : 1
normal function return -> and : 1
function return and -> unwinds : 1
return and unwinds -> the : 1
and unwinds the -> call : 1
unwinds the call -> stack : 1
point where was -> called : 1
where was called -> with : 1
was called with -> the : 1
called with the -> same : 1
called with the -> callbacks : 1
the same when -> returns : 1
same when returns -> to : 1
when returns to -> its : 1
returns to its -> it : 1
to its it -> returns : 1
its it returns -> if : 1
if is returns -> is : 1
if is returns -> sync : 1
if is returns -> without : 1
is returns is -> similar : 1
returns is similar -> to : 1
similar to throwing -> an : 1
to throwing an -> exception : 1
throwing an exception -> that : 1
that is caught -> at : 1
is caught at -> the : 1
caught at the -> point : 1
the one important -> is : 1
one important is -> that : 1
important is that -> if : 1
that if any -> objects : 1
if any objects -> on : 1
any objects on -> the : 1
objects on the -> stack : 1
objects on the -> function : 1
on the stack -> would : 1
the stack would -> have : 1
stack would have -> been : 1
would have been -> destroyed : 1
have been destroyed -> by : 1
been destroyed by -> throwing : 1
destroyed by throwing -> an : 1
by throwing an -> the : 1
throwing an the -> behavior : 1
an the behavior -> is : 1
undefined if you -> call : 1
you call this -> is : 1
call this is -> why : 1
this is why -> you : 1
is why you -> should : 1
should use exceptions -> instead : 1
instead of function -> establishes : 1
of function establishes -> nonlocal : 1
function establishes nonlocal -> function : 1
establishes nonlocal function -> stores : 1
nonlocal function stores -> the : 1
function stores the -> current : 1
stores the current -> execution : 1
the current execution -> environment : 1
current execution environment -> in : 1
execution environment in -> its : 1
environment in its -> argument : 1
in its argument -> so : 1
its argument so -> that : 1
argument so that -> the : 1
that the environment -> can : 1
the environment can -> be : 1
environment can be -> restored : 1
can be restored -> by : 1
be restored by -> a : 1
restored by a -> call : 1
by a call -> to : 2
first time is -> it : 1
time is it -> returns : 1
it returns when -> is : 1
returns when is -> returns : 1
when is returns -> the : 1
is returns the -> argument : 1
the argument that -> was : 1
argument that was -> passed : 1
that was passed -> to : 2
was passed to -> that : 1
was passed to -> the : 1
passed to that -> value : 1
to that value -> is : 1
value is guaranteed -> to : 1
to be header -> is : 1
be header is -> the : 1
standard c it -> declares : 1
c it declares -> functions : 1
it declares functions -> and : 1
declares functions and -> macros : 1
functions and macros -> related : 1
and macros related -> to : 1
related to signal -> is : 1
to signal is -> a : 1
signal is a -> condition : 1
is a condition -> that : 1
a condition that -> can : 1
condition that can -> arise : 1
that can arise -> during : 1
can arise during -> program : 1
arise during program -> a : 1
during program a -> signal : 1
program a signal -> can : 1
a signal can -> originate : 1
signal can originate -> by : 1
can originate by -> an : 1
originate by an -> explicit : 1
by an explicit -> call : 2
an explicit call -> to : 4
explicit call to -> or : 2
explicit call to -> it : 1
explicit call to -> first : 1
call to or -> from : 1
call to or -> the : 1
call to or -> after : 1
call to or -> be : 1
or from external -> sources : 1
from external sources -> as : 1
external sources as -> the : 1
sources as the -> user : 1
as the user -> interrupting : 1
as the user -> terminating : 1
the user interrupting -> the : 1
user interrupting the -> or : 1
interrupting the or -> from : 1
the or from -> internal : 1
or from internal -> events : 1
from internal events -> as : 1
internal events as -> errors : 1
events as errors -> or : 1
as errors or -> memory : 1
errors or memory -> each : 1
or memory each -> signal : 1
memory each signal -> has : 1
each signal has -> a : 1
signal has a -> which : 1
function that the -> library : 1
the library calls -> when : 1
library calls when -> a : 1
calls when a -> signal : 1
when a signal -> occurs : 1
when a signal -> is : 1
a signal occurs -> the : 1
signal occurs the -> with : 1
occurs the with -> no : 1
with no are -> identified : 1
no are identified -> by : 1
are identified by -> a : 1
identified by a -> program : 1
by a program -> can : 1
by a program -> might : 1
a program can -> establish : 1
a program can -> change : 1
a program can -> store : 1
a program can -> have : 1
program can establish -> different : 1
can establish different -> handlers : 1
establish different handlers -> for : 1
different handlers for -> different : 1
handlers for different -> signal : 1
for different signal -> you : 1
different signal you -> can : 1
signal you can -> choose : 1
you can choose -> to : 1
choose to ignore -> a : 1
to ignore a -> signal : 1
to ignore a -> the : 1
to ignore a -> with : 1
ignore a signal -> by : 1
a signal by -> using : 1
signal by using -> as : 1
by using as -> the : 1
as the signal -> if : 1
as the signal -> handler : 1
the signal if -> the : 1
signal if the -> signal : 1
if the signal -> is : 1
the signal is -> no : 1
the signal is -> delivered : 1
the signal is -> the : 1
the signal is -> not : 1
signal is no -> handler : 1
is no handler -> is : 1
no handler is -> and : 1
handler is and -> the : 1
the program each -> signal : 1
program each signal -> also : 1
each signal also -> has : 1
signal also has -> a : 1
also has a -> default : 1
a default handler -> when : 1
default handler when -> a : 1
handler when a -> program : 1
a program every -> signal : 1
program every signal -> number : 1
every signal number -> is : 1
signal number is -> initialized : 1
number is initialized -> with : 1
initialized with or -> the : 1
or the details -> are : 1
details are can -> set : 1
are can set -> your : 1
your own handler -> for : 1
own handler for -> any : 1
handler for any -> signal : 1
for any signal -> by : 1
any signal by -> calling : 1
signal by calling -> the : 1
the a handler -> is : 1
a handler is -> a : 1
that takes one -> the : 2
one the signal -> the : 1
the signal the -> signal : 1
the signal the -> return : 1
the signal the -> second : 1
signal the signal -> handler : 1
the signal handler -> function : 1
the signal handler -> must : 2
the signal handler -> for : 1
signal handler function -> is : 1
handler function is -> limited : 1
function is limited -> in : 1
limited in what -> it : 1
in what it -> can : 2
what it can -> unless : 1
what it can -> handler : 1
it can unless -> a : 1
can unless a -> signal : 1
unless a signal -> is : 1
a signal is -> raised : 1
a signal is -> the : 1
a signal is -> delivered : 1
a signal is -> but : 1
signal is raised -> by : 1
is raised by -> an : 1
raised by an -> explicit : 1
to or the -> only : 1
or the only -> useful : 1
the only useful -> thing : 1
only useful thing -> the : 1
useful thing the -> handler : 1
thing the handler -> can : 1
handler can do -> is : 1
do is to -> set : 1
to set a -> global : 1
set a global -> the : 1
of the flag -> must : 1
the flag must -> be : 1
flag must be -> standard : 1
must be standard -> defines : 1
be standard defines -> a : 1
standard defines a -> basic : 1
defines a basic -> set : 1
a basic set -> of : 1
basic set of -> and : 1
and an implementation -> is : 1
free to define -> additional : 1
to define additional -> on : 1
define additional on -> the : 1
additional on the -> other : 1
the other an -> implementation : 1
other an implementation -> is : 1
required to raise -> any : 1
required to raise -> for : 1
to raise any -> remember : 1
raise any remember -> that : 1
any remember that -> arithmetic : 1
remember that arithmetic -> pointer : 1
that arithmetic pointer -> and : 1
arithmetic pointer and -> the : 1
and the like -> result : 1
the like result -> in : 1
like result in -> undefined : 1
result in undefined -> an : 1
result in undefined -> mismatches : 2
result in undefined -> same : 1
in undefined an -> implementation : 1
undefined an implementation -> is : 1
undefined an implementation -> might : 2
free to terminate -> a : 1
to terminate a -> program : 1
terminate a program -> ignore : 1
a program ignore -> the : 1
program ignore the -> raise : 1
ignore the raise -> a : 1
the raise a -> or : 1
raise a or -> do : 1
a or do -> anything : 1
or do anything -> some : 1
do anything some -> signals : 1
anything some signals -> are : 1
some signals are -> meant : 1
signals are meant -> to : 1
meant to reflect -> external : 1
to reflect external -> such : 1
reflect external such -> as : 1
external such as -> the : 1
the user terminating -> the : 1
user terminating the -> how : 1
terminating the how -> the : 1
the how the -> user : 1
how the user -> terminates : 1
the user terminates -> a : 1
user terminates a -> program : 1
terminates a program -> is : 1
program is likewise -> and : 1
is likewise and -> operating : 1
likewise and operating -> systems : 1
and operating systems -> have : 1
operating systems have -> much : 1
systems have much -> more : 1
have much more -> extensive : 1
much more extensive -> the : 1
more extensive the -> handler : 1
extensive the handler -> as : 1
the handler as -> documented : 1
handler as documented -> in : 1
as documented in -> this : 1
documented in this -> section : 1
this section is -> portable : 1
section is portable -> to : 1
is portable to -> all : 1
portable to all -> hosted : 1
to all hosted -> regardless : 1
all hosted regardless -> of : 1
hosted regardless of -> operating : 1
regardless of operating -> although : 1
of operating although -> the : 1
operating although the -> portable : 1
although the portable -> behavior : 1
the portable behavior -> is : 1
portable behavior is -> most : 1
behavior is most -> uses : 1
is most uses -> of : 1
uses of in -> real : 1
of in real -> programs : 1
in real programs -> take : 1
real programs take -> advantage : 1
programs take advantage -> of : 1
advantage of nonstandard -> consult : 1
of nonstandard consult -> your : 1
nonstandard consult your -> and : 1
consult your and -> documentation : 1
your and documentation -> for : 1
and documentation for -> function : 1
documentation for function -> raises : 1
for function raises -> a : 1
function raises a -> function : 1
raises a function -> sends : 1
a function sends -> a : 1
function sends a -> signal : 1
sends a signal -> to : 1
a signal to -> the : 1
signal to the -> running : 1
to the running -> the : 1
the running the -> parameter : 1
running the parameter -> is : 1
is the signal -> the : 2
signal the return -> value : 1
is for success -> or : 12
for success or -> nonzero : 5
for success or -> a : 3
for success or -> for : 5
success or nonzero -> for : 5
or nonzero for -> an : 3
or nonzero for -> if : 1
or nonzero for -> function : 1
nonzero for an -> macro : 1
nonzero for an -> function : 2
for an macro -> default : 1
an macro default -> macro : 1
macro default macro -> represents : 1
default macro represents -> the : 1
macro represents the -> default : 1
macro represents the -> value : 1
represents the default -> handling : 1
the default handling -> of : 1
default handling of -> a : 1
handling of a -> the : 1
constant whose value -> is : 2
whose value is -> suitable : 2
whose value is -> to : 1
whose value is -> the : 1
value is suitable -> as : 2
is suitable as -> the : 2
suitable as the -> second : 2
second argument to -> the : 3
second argument to -> is : 1
second argument to -> a : 1
argument to the -> macro : 2
argument to the -> you : 2
argument to the -> constructor : 8
argument to the -> member : 2
argument to the -> sentry : 1
argument to the -> function : 1
the macro error -> macro : 1
macro error macro -> represents : 1
error macro represents -> the : 1
returned from in -> the : 2
in the event -> of : 1
the event of -> an : 1
event of an -> it : 1
of an it -> expands : 1
an it expands -> to : 1
it expands to -> a : 1
a constant macro -> ignore : 1
a constant macro -> null : 1
a constant macro -> seek : 2
constant macro ignore -> macro : 1
macro ignore macro -> tells : 1
ignore macro tells -> to : 1
macro tells to -> ignore : 1
tells to ignore -> a : 1
ignore a the -> macro : 1
the macro abort -> signal : 1
macro abort signal -> macro : 1
abort signal macro -> expands : 1
signal macro expands -> to : 6
to a positive -> integer : 6
a positive integer -> constant : 6
positive integer constant -> that : 6
constant that represents -> an : 3
constant that represents -> a : 3
that represents an -> abnormal : 1
that represents an -> illegal : 1
that represents an -> addressing : 1
that represents an -> ordered : 1
represents an abnormal -> the : 1
an abnormal the -> abort : 1
abnormal the abort -> function : 1
the abort function -> raises : 1
abort function raises -> macro : 1
function raises macro -> error : 1
raises macro error -> signal : 1
macro error signal -> macro : 1
error signal macro -> expands : 1
represents a such -> as : 1
such as division -> by : 1
as division by -> an : 1
division by an -> implementation : 1
by an implementation -> is : 1
to raise for -> a : 1
raise for a -> macro : 1
for a macro -> illegal : 1
a macro illegal -> instruction : 1
macro illegal instruction -> signal : 1
illegal instruction signal -> macro : 1
instruction signal macro -> expands : 1
represents an illegal -> macro : 1
an illegal macro -> user : 1
illegal macro user -> interrupt : 1
macro user interrupt -> signal : 1
user interrupt signal -> macro : 1
interrupt signal macro -> expands : 1
represents a user -> macro : 1
a user macro -> segmentation : 1
user macro segmentation -> violation : 1
macro segmentation violation -> signal : 1
segmentation violation signal -> macro : 1
violation signal macro -> expands : 1
represents an addressing -> fault : 1
an addressing fault -> macro : 1
addressing fault macro -> terminate : 1
fault macro terminate -> signal : 1
macro terminate signal -> macro : 1
terminate signal macro -> expands : 1
represents a request -> to : 1
a request to -> terminate : 1
a request to -> allocate : 2
request to terminate -> the : 1
terminate the type -> atomic : 1
the type atomic -> with : 1
type atomic with -> no : 1
atomic with no -> type : 1
be accessed even -> if : 1
accessed even if -> a : 1
if a signal -> is : 1
signal is the -> entire : 1
signal is the -> result : 1
is the entire -> value : 1
value is read -> or : 1
value is read -> from : 1
is read or -> the : 2
or the actual -> type : 1
type is function -> sets : 1
is function sets -> a : 1
function sets a -> signal : 1
sets a signal -> void : 1
a signal void -> function : 1
signal void function -> controls : 1
void function controls -> the : 1
function controls the -> behavior : 1
controls the behavior -> when : 1
the behavior when -> a : 1
behavior when a -> signal : 1
signal is delivered -> to : 1
signal is delivered -> by : 1
is delivered to -> the : 1
delivered to the -> the : 1
signal the second -> parameter : 1
the second parameter -> is : 1
second parameter is -> the : 1
to call when -> signal : 1
call when signal -> is : 1
when signal is -> parameter : 1
when signal is -> unless : 1
signal is parameter -> can : 1
is parameter can -> also : 1
parameter can also -> be : 2
also be one -> of : 1
of the special -> values : 1
the special values -> or : 1
special values or -> use : 1
values or use -> to : 1
or use to -> get : 1
use to get -> the : 1
get the default -> use : 1
the default use -> to : 1
default use to -> ignore : 1
use to ignore -> a : 1
ignore a with -> no : 1
a with no -> default : 1
a with no -> parameter : 1
a with no -> function : 1
no default behavior -> for : 1
default behavior for -> a : 1
default behavior for -> is : 1
behavior for a -> signal : 1
behavior for a -> named : 1
for a signal -> is : 1
signal is but -> it : 1
but it usually -> results : 1
it usually results -> in : 1
usually results in -> the : 1
in the termination -> of : 1
the termination of -> the : 1
termination of the -> the : 1
the the signal -> handler : 1
signal handler must -> not : 2
handler must not -> use : 1
handler must not -> call : 1
handler must not -> refer : 1
handler must not -> but : 1
must not use -> any : 1
use any features -> as : 1
any features as -> throwing : 1
features as throwing -> an : 1
as throwing an -> or : 1
throwing an or -> the : 1
or the results -> will : 1
or the results -> are : 2
the results will -> be : 1
results will be -> the : 1
will be the -> function : 1
will be the -> next : 2
will be the -> derived : 1
be the function -> must : 1
have the parameter -> is : 1
function that function -> is : 1
function that function -> template : 1
is called when -> signal : 1
is called when -> the : 1
is called when -> normal : 1
is called when -> one : 1
called when signal -> is : 1
signal is unless -> the : 1
is unless the -> signal : 1
unless the signal -> is : 1
is delivered by -> calling : 1
delivered by calling -> or : 1
by calling or -> the : 1
by calling or -> its : 1
calling or the -> function : 1
function is highly -> restricted : 1
is highly restricted -> in : 1
highly restricted in -> what : 1
restricted in what -> it : 1
it can handler -> must : 1
can handler must -> not : 1
must not call -> any : 1
must not call -> more : 1
not call any -> function : 1
call any function -> in : 1
any function in -> the : 1
standard library except -> and : 1
library except and -> the : 1
except and the -> first : 1
first parameter must -> be : 1
must be handler -> must : 1
be handler must -> not : 1
must not refer -> to : 1
refer to any -> variable : 1
to any variable -> with : 1
any variable with -> static : 1
variable with static -> storage : 1
with static storage -> except : 1
static storage except -> it : 1
storage except it -> can : 1
except it can -> assign : 1
it can assign -> a : 1
type the signal -> is : 1
of a computational -> error : 1
of a computational -> execution : 1
a computational error -> such : 1
computational error such -> as : 1
error such as -> the : 1
must not but -> should : 1
not but should -> call : 1
but should call -> or : 1
should call or -> this : 1
call or this -> item : 1
or this item -> contradicts : 1
this item contradicts -> the : 1
item contradicts the -> first : 1
contradicts the first -> implementations : 1
the first implementations -> have : 1
first implementations have -> looser : 1
implementations have looser -> such : 1
have looser such -> as : 1
looser such as -> allowing : 1
such as allowing -> calls : 1
as allowing calls -> to : 1
allowing calls to -> other : 1
calls to other -> library : 1
calls to other -> member : 1
to other library -> functions : 1
other library functions -> from : 1
library functions from -> a : 1
functions from a -> signal : 1
from a signal -> the : 1
a signal the -> library : 1
signal the library -> functions : 1
the library functions -> that : 1
that are permitted -> but : 1
are permitted but -> every : 1
permitted but every -> practical : 1
but every practical -> implementation : 1
every practical implementation -> allows : 1
practical implementation allows -> at : 1
implementation allows at -> least : 1
allows at least -> if : 1
at least if -> you : 1
least if you -> must : 1
if you must -> use : 1
if you must -> do : 1
must use signal -> handlers : 1
use signal handlers -> in : 1
signal handlers in -> your : 1
handlers in your -> you : 1
in your you -> will : 1
your you will -> probably : 1
need to rely -> on : 1
to rely on -> behavior : 1
to rely on -> the : 1
rely on behavior -> that : 1
on behavior that -> is : 1
that is dictated -> by : 1
dictated by your -> host : 1
by your host -> extending : 1
your host extending -> the : 1
host extending the -> limitations : 1
extending the limitations -> of : 1
the limitations of -> the : 1
limitations of the -> the : 1
the handler returns -> and : 1
handler returns and -> the : 1
returns and the -> signal : 1
returns and the -> second : 1
and the signal -> is : 1
signal is not -> the : 1
a computational execution -> continues : 1
computational execution continues -> from : 1
continues from the -> point : 1
point where it -> was : 1
where it was -> return : 1
it was return -> value : 1
was return value -> of : 1
is the previous -> value : 2
the previous value -> of : 5
previous value of -> the : 5
of the signal -> handler : 1
signal handler for -> or : 1
handler for or -> for : 1
for or for -> an : 1
for or for -> always : 1
or for an -> if : 1
or for an -> error : 2
or for an -> in : 3
for an if -> is : 1
for an if -> you : 1
is is input -> until : 1
is input until -> the : 1
input until the -> program : 2
until the program -> is : 2
program is shows -> a : 1
is shows a -> simple : 1
a simple signal -> handler : 1
simple signal handler -> that : 1
signal handler that -> sets : 1
handler that sets -> a : 1
that sets a -> global : 1
sets a global -> flag : 2
a global flag -> when : 1
a global flag -> extern : 1
global flag when -> the : 1
flag when the -> user : 1
when the user -> interrupts : 1
when the user -> designs : 1
the user interrupts -> the : 2
user interrupts the -> until : 1
user interrupts the -> program : 1
interrupts the until -> the : 1
the until the -> user : 1
until the user -> interrupts : 1
interrupts the program -> reads : 1
the program reads -> input : 1
program reads input -> and : 1
reads input and -> counts : 1
input and counts -> the : 1
and counts the -> number : 1
number of lines -> the : 1
of lines the -> user : 1
lines the user -> input : 1
the user input -> until : 1
user input until -> the : 1
program is volatile -> signal : 1
is volatile signal -> handler : 1
volatile signal handler -> sets : 1
signal handler sets -> a : 1
handler sets a -> global : 1
global flag extern -> void : 1
flag extern void -> interrupted : 1
extern void interrupted -> int : 1
void interrupted int -> if : 1
interrupted int if -> set : 1
int if set -> signal : 1
if set signal -> else : 1
set signal else -> unsigned : 1
signal else unsigned -> long : 1
else unsigned long -> count : 1
unsigned long count -> count : 1
unsigned long count -> for : 1
long count count -> user : 1
count count user -> prompt : 1
count user prompt -> if : 1
user prompt if -> eof : 1
prompt if eof -> does : 1
if eof does -> not : 1
eof does not -> terminate : 1
does not terminate -> the : 1
not terminate the -> only : 1
terminate the only -> sigint : 1
the only sigint -> does : 1
only sigint does -> counted : 1
sigint does counted -> count : 1
does counted count -> header : 1
counted count header -> is : 1
count header is -> the : 1
standard which declares -> macros : 1
standard which declares -> a : 1
standard which declares -> input : 1
standard which declares -> and : 1
standard which declares -> functions : 1
standard which declares -> types : 3
which declares macros -> for : 1
declares macros for -> accessing : 1
macros for accessing -> the : 1
for accessing the -> arguments : 1
accessing the arguments -> to : 1
takes a variable -> number : 2
number of that -> a : 1
of that a -> function : 1
with an ellipsis -> as : 1
as the last -> function : 1
as the last -> parameter : 3
the last function -> that : 1
last function that -> takes : 1
of arguments a -> must : 1
arguments a must -> have : 1
a must have -> some : 1
must have some -> way : 1
have some way -> of : 1
some way of -> knowing : 1
of knowing how -> many : 1
knowing how many -> arguments : 1
how many arguments -> have : 1
many arguments have -> actually : 1
arguments have actually -> been : 1
have actually been -> passed : 1
actually been passed -> to : 1
been passed to -> the : 2
function and what -> their : 1
and what their -> types : 1
what their types -> for : 1
their types for -> the : 1
types for the -> function : 1
function uses its -> format : 1
uses its format -> string : 1
its format string -> to : 1
format string to -> determine : 1
string to determine -> the : 1
determine the number -> and : 1
number and type -> of : 1
and type of -> the : 1
of the maximum -> value : 1
maximum value of -> any : 2
maximum value of -> an : 1
of any number -> of : 2
number of shows -> how : 1
of shows how -> a : 1
how a function -> can : 1
function can use -> the : 2
use the the -> function : 1
use the the -> and : 1
function takes at -> least : 1
takes at least -> two : 1
least two the -> first : 1
first is a -> count : 1
is a count -> of : 1
a count of -> the : 5
count of the -> number : 5
number of remaining -> the : 1
of remaining the -> count : 1
remaining the count -> must : 1
the count must -> be : 1
count must be -> the : 1
be the template -> parameter : 1
specifies the type -> of : 1
of each argument -> that : 1
each argument that -> follows : 1
argument that follows -> the : 1
follows the the -> maximum : 1
the the maximum -> value : 1
the the maximum -> rounding : 1
number of use -> a : 1
of use a -> trivial : 1
use a trivial -> wrapper : 1
a trivial wrapper -> class : 1
trivial wrapper class -> to : 1
wrapper class to -> ensure : 1
class to ensure -> that : 1
ensure that is -> class : 1
ensure that is -> large : 1
ensure that is -> properly : 1
that is class -> varargs : 1
is class varargs -> template : 1
class varargs template -> t : 1
varargs template t -> varargs : 1
template t varargs -> t : 1
t varargs t -> result : 1
varargs t result -> get : 1
t result get -> first : 1
result get first -> while : 1
get first while -> t : 1
first while t -> arg : 1
while t arg -> get : 1
t arg get -> successive : 1
arg get successive -> if : 1
get successive if -> result : 1
successive if result -> remember : 1
if result remember -> the : 1
result remember the -> return : 1
remember the return -> int : 1
the return int -> int : 1
x int y -> return : 1
y return macro -> gets : 1
return macro gets -> next : 1
macro gets next -> macro : 1
gets next macro -> fetches : 1
next macro fetches -> the : 1
macro fetches the -> next : 1
fetches the next -> which : 1
the next which -> must : 1
next which must -> be : 1
parameter must have -> been : 1
have been initialized -> by : 1
been initialized by -> calling : 1
calling the type -> must : 1
type that results -> from : 1
results from the -> standard : 1
the standard type -> promotions : 1
standard type promotions -> or : 1
promotions or else -> the : 1
behavior is for -> cannot : 1
behavior is for -> any : 1
is for cannot -> be : 1
for cannot be -> but : 1
be but must -> be : 1
but must be -> because : 1
must be because -> the : 1
be because the -> standard : 1
because the standard -> promotion : 1
the standard promotion -> of : 1
standard promotion of -> type : 1
promotion of type -> is : 1
of type is -> to : 1
of type is -> as : 1
of type is -> created : 1
of type is -> an : 1
of type is -> considered : 2
is to type -> in : 1
to type in -> rare : 1
type in rare -> the : 1
in rare the -> behavior : 1
rare the behavior -> is : 1
undefined if there -> is : 1
is no next -> macro : 1
no next macro -> ends : 1
next macro ends -> getting : 1
macro ends getting -> macro : 1
ends getting macro -> finishes : 1
getting macro finishes -> fetching : 1
macro finishes fetching -> you : 1
finishes fetching you -> must : 1
fetching you must -> call : 1
you must call -> once : 1
you must call -> to : 1
you must call -> multiple : 2
must call once -> for : 1
call once for -> each : 1
once for each -> call : 1
once for each -> item : 1
for each call -> to : 1
each call to -> you : 1
each call to -> can : 1
each call to -> the : 1
you cannot nest -> calls : 1
cannot nest calls -> to : 1
nest calls to -> and : 1
calls to and -> but : 1
to and but -> you : 1
and but you -> can : 1
can call them -> multiple : 1
call them multiple -> times : 1
them multiple times -> sequentially : 1
multiple times sequentially -> in : 1
times sequentially in -> the : 1
sequentially in the -> same : 1
same type argument -> type : 1
type argument type -> is : 1
an opaque type -> that : 3
opaque type that -> refers : 1
opaque type that -> represents : 1
opaque type that -> uses : 1
type that refers -> to : 1
to the declare -> a : 1
the declare a -> local : 1
declare a local -> variable : 1
local variable of -> type : 1
type and supply -> the : 1
and supply the -> variable : 1
supply the variable -> to : 1
the variable to -> the : 1
variable to the -> and : 1
the and macro -> starts : 1
and macro starts -> getting : 1
macro starts getting -> macro : 1
starts getting macro -> initializes : 1
getting macro initializes -> and : 1
macro initializes and -> prepares : 1
initializes and prepares -> to : 1
and prepares to -> fetch : 1
prepares to fetch -> function : 1
to fetch function -> arguments : 1
fetch function arguments -> with : 1
function arguments with -> you : 1
arguments with you -> must : 1
must call to -> clean : 1
must call to -> initialize : 1
call to clean -> up : 1
clean up and -> finalize : 1
up and finalize -> the : 1
and finalize the -> second : 1
finalize the second -> argument : 1
the last parameter -> before : 1
the last parameter -> to : 3
last parameter before -> the : 1
parameter before the -> the : 1
before the the -> last : 1
the the last -> named : 1
the the last -> item : 1
the last named -> parameter : 1
last named parameter -> must : 1
named parameter must -> not : 1
parameter must not -> have : 1
must not have -> a : 1
must not have -> any : 3
must not have -> side : 1
have a or -> reference : 1
a or reference -> header : 1
or reference header -> is : 1
reference header is -> the : 1
which declares a -> few : 1
a few types -> and : 1
few types and -> c : 1
types and c -> header : 1
c header declares -> the : 1
declares the but -> is : 1
the but is -> a : 1
is a reserved -> keyword : 1
reserved keyword in -> so : 1
keyword in so -> there : 1
in so there -> is : 1
need to to -> declare : 1
to to declare -> this : 1
to declare this -> macro : 1
declare this macro -> null : 1
this macro null -> macro : 1
macro null macro -> expands : 1
null macro expands -> to : 1
null pointer such -> as : 1
pointer such as -> or : 1
with no c -> libraries : 1
no c libraries -> declare : 1
c libraries declare -> as : 1
libraries declare as -> in : 1
declare as in -> this : 1
as in this -> definition : 1
in this definition -> is : 1
this definition is -> fine : 1
definition is fine -> for : 1
is fine for -> but : 1
fine for but -> is : 1
for but is -> wrong : 1
but is wrong -> for : 1
is wrong for -> most : 1
wrong for most -> compilers : 1
most compilers correctly -> declare : 1
compilers correctly declare -> but : 1
correctly declare but -> you : 1
declare but you -> should : 1
should be aware -> of : 1
the macro computes -> member : 1
macro computes member -> macro : 1
computes member macro -> returns : 1
member macro returns -> the : 1
macro returns the -> in : 1
macro returns the -> number : 1
returns the in -> of : 1
the in of -> a : 1
in of a -> member : 1
constant the must -> be : 1
be a old -> or : 1
a old or -> and : 1
old or and -> the : 1
the expression must -> be : 1
be an address -> assuming : 1
an address assuming -> is : 1
address assuming is -> an : 1
assuming is an -> instance : 1
instance of in -> this : 1
instance of in -> the : 1
means the must -> not : 1
the must not -> be : 1
a a static -> or : 1
static or a -> function : 1
function for more -> information : 1
function for more -> const : 1
about pod type -> pointer : 1
pod type pointer -> difference : 1
type pointer difference -> with : 1
pointer difference with -> no : 1
difference with no -> type : 1
is a signed -> integral : 1
type that represents -> the : 6
type that represents -> a : 3
type that represents -> wide : 2
type that represents -> whether : 1
type that represents -> how : 1
represents the difference -> between : 1
represents the difference -> of : 1
two the exact -> type : 1
exact type is -> type : 1
exact type is -> header : 1
exact type is -> in : 5
exact type is -> that : 3
type is type -> sizeof : 1
is type sizeof -> result : 1
type sizeof result -> with : 1
sizeof result with -> no : 1
result with no -> type : 1
is an unsigned -> integral : 6
an unsigned integral -> the : 6
unsigned integral the -> exact : 6
integral the exact -> type : 6
type is header -> is : 1
is header is -> a : 1
header is a -> wrapper : 1
is a wrapper -> for : 1
a wrapper for -> the : 1
wrapper for the -> c : 1
which declares input -> and : 1
output and see -> also : 1
also for wide -> character : 2
for wide character -> streams : 1
for wide character -> string : 1
for wide character -> use : 2
wide character streams -> offer : 1
character streams offer -> more : 1
streams offer more -> and : 1
offer more and -> on : 1
more and on -> the : 1
and on the -> other : 1
the other c -> offers : 1
other c offers -> simplicity : 1
c offers simplicity -> and : 1
offers simplicity and -> compatibility : 1
simplicity and compatibility -> with : 1
and compatibility with -> c : 1
with c see -> and : 1
c see and -> for : 2
and for an -> overview : 1
for an overview -> of : 1
the stream macro -> full : 1
stream macro full -> passed : 1
macro full passed -> as : 1
full passed as -> the : 1
passed as the -> parameter : 3
as the parameter -> to : 3
the parameter to -> the : 3
the macro sets -> an : 2
macro sets an -> open : 2
sets an open -> file : 2
an open file -> to : 2
open file to -> full : 1
open file to -> line : 1
file to full -> a : 1
to full a -> buffer : 1
full a buffer -> is : 1
a buffer is -> flushed : 2
buffer is flushed -> when : 2
buffer is flushed -> and : 1
buffer is flushed -> before : 1
is flushed when -> it : 2
flushed when it -> is : 2
a constant with -> no : 3
constant with no -> for : 3
with no for -> streams : 2
with no for -> unbuffered : 1
no for streams -> is : 2
for streams is -> macro : 2
streams is macro -> line : 1
streams is macro -> no : 1
is macro line -> passed : 1
macro line passed -> as : 1
line passed as -> the : 1
file to line -> a : 1
to line a -> buffer : 1
line a buffer -> is : 1
it is full -> or : 1
is full or -> when : 1
full or when -> a : 1
or when a -> newline : 1
when a newline -> character : 1
a newline character -> is : 1
a newline character -> or : 1
newline character is -> read : 1
newline character is -> also : 1
character is read -> or : 1
character is read -> from : 2
or the macro -> expands : 1
is macro no -> int : 1
macro no int -> passed : 1
no int passed -> as : 1
int passed as -> the : 1
the macro disables -> the : 1
macro disables the -> buffering : 1
disables the buffering -> of : 1
the buffering of -> an : 1
buffering of an -> open : 1
of an open -> characters : 1
an open characters -> are : 1
open characters are -> read : 1
or written as -> soon : 1
written as soon -> as : 1
as soon as -> without : 1
soon as without -> the : 1
without the macro -> expands : 1
no for unbuffered -> streams : 1
for unbuffered streams -> is : 1
unbuffered streams is -> for : 1
streams is for -> a : 1
for a host -> operating : 1
a host operating -> system : 1
operating system might -> line : 1
system might line -> buffer : 1
might line buffer -> input : 1
line buffer input -> from : 1
buffer input from -> a : 1
from a even -> if : 1
a even if -> a : 1
a program requests -> unbuffered : 1
program requests unbuffered -> macro : 1
requests unbuffered macro -> buffer : 1
unbuffered macro buffer -> macro : 1
macro buffer macro -> specifies : 1
buffer macro specifies -> the : 1
macro specifies the -> minimum : 1
specifies the minimum -> buffer : 1
specifies the minimum -> number : 1
the minimum buffer -> size : 1
minimum buffer size -> for : 1
buffer size for -> the : 1
size for the -> the : 1
size for the -> byte : 1
a constant function -> clears : 1
a constant function -> sets : 1
constant function clears -> error : 1
function clears error -> function : 1
clears error function -> clears : 1
error function clears -> the : 1
function clears the -> error : 1
function clears the -> flag : 1
clears the error -> and : 1
error and indicators -> for : 1
and indicators for -> macro : 1
indicators for macro -> or : 1
for macro or -> macro : 1
macro or macro -> represents : 1
macro or macro -> expands : 2
or macro represents -> when : 1
macro represents when -> returned : 1
represents when returned -> from : 1
when returned from -> and : 1
returned from and -> other : 1
from and other -> some : 1
and other some -> functions : 1
other some functions -> return : 1
some functions return -> to : 1
functions return to -> indicate : 1
return to indicate -> an : 1
to indicate an -> with : 1
indicate an with -> no : 1
an with no -> value : 1
an with no -> string : 1
an with no -> that : 1
an with no -> argument : 1
is a negative -> integer : 1
a negative integer -> the : 1
negative integer the -> precise : 1
integer the precise -> value : 1
the precise value -> is : 1
precise value is -> function : 1
is function closes -> a : 1
function closes a -> function : 1
closes a function -> flushes : 1
a function flushes -> and : 1
function flushes and -> closes : 1
flushes and closes -> an : 1
and closes an -> open : 1
closes an open -> it : 1
an open it -> returns : 1
an open it -> by : 1
an open it -> characters : 1
open it returns -> upon : 1
upon success or -> when : 1
success or when -> there : 1
or when there -> is : 1
is an function -> tests : 1
an function tests -> for : 1
tests for function -> returns : 2
if is positioned -> at : 1
is positioned at -> the : 1
is positioned at -> its : 2
positioned at the -> or : 1
at the or -> false : 1
the or false -> function : 1
or false function -> tests : 1
false function tests -> for : 1
true if has -> an : 1
if has an -> error : 1
an error condition -> or : 1
error condition or -> function : 1
condition or function -> reads : 1
or function reads -> a : 1
function reads a -> function : 1
function reads a -> single : 1
function reads a -> int : 1
function reads a -> line : 3
function reads a -> string : 1
function reads a -> number : 1
function reads a -> wide : 2
function reads a -> character : 1
reads a function -> reads : 1
a function reads -> a : 1
reads a single -> character : 1
single character from -> it : 1
character from it -> returns : 3
from it returns -> the : 3
returns the character -> as : 1
returns the character -> or : 1
returns the character -> converted : 1
returns the character -> at : 1
the character as -> an : 1
character as an -> converted : 1
character as an -> the : 1
as an converted -> to : 1
an converted to -> or : 1
converted to or -> for : 3
to or for -> an : 2
to or for -> or : 1
for an error -> or : 6
an error or -> in : 1
an error or -> if : 2
an error or -> for : 2
an error or -> a : 1
error or in -> function : 1
or in function -> returns : 1
or in function -> allocates : 1
or in function -> generates : 1
in function returns -> file : 1
in function returns -> number : 1
function returns file -> function : 1
returns file function -> stores : 1
file function stores -> current : 1
function stores current -> position : 1
stores current position -> in : 1
current position in -> the : 3
points the only -> use : 1
the only use -> for : 1
only use for -> the : 1
use for the -> position : 1
use for the -> second : 1
for the position -> is : 1
the position is -> to : 1
position is to -> save : 1
is to save -> it : 1
to save it -> and : 1
save it and -> pass : 1
it and pass -> it : 2
and pass it -> to : 1
and pass it -> as : 1
and pass it -> directly : 1
pass it to -> to : 1
it to to -> set : 1
to to set -> the : 1
set the you -> cannot : 1
use the position -> to : 1
the position to -> advance : 1
the position to -> which : 1
position to advance -> the : 1
to advance the -> position : 1
advance the position -> by : 1
the position by -> one : 1
position by one -> return : 1
nonzero for if -> it : 1
for if it -> sets : 1
if it sets -> function : 1
it sets function -> reads : 1
sets function reads -> a : 1
reads a int -> function : 1
a int function -> reads : 1
a int function -> fills : 1
int function reads -> a : 2
reads a line -> of : 4
reads a line -> into : 1
a line of -> text : 4
a line of -> wide : 1
a line of -> consider : 1
line of text -> from : 2
line of text -> to : 1
line of text -> by : 1
of text from -> into : 1
of text from -> an : 1
text from into -> the : 1
from into the -> character : 1
from into the -> memory : 1
from into the -> all : 1
from into the -> unless : 1
into the character -> array : 4
the character array -> that : 4
the character array -> and : 3
the character array -> can : 2
the character array -> if : 2
the character array -> is : 3
the character array -> has : 2
the character array -> as : 1
the character array -> by : 1
character array that -> points : 4
character array that -> will : 1
character array that -> is : 1
character array that -> has : 2
character array that -> contains : 1
array that points -> it : 1
array that points -> to : 1
array that points -> reading : 2
array that points -> before : 1
array that points -> if : 1
array that points -> no : 1
that points it -> stops : 1
points it stops -> reading : 1
it stops reading -> after : 1
stops reading after -> a : 1
reading after a -> newline : 1
after a newline -> character : 1
newline character or -> after : 1
character or after -> characters : 1
or after characters -> have : 1
after characters have -> been : 1
been the newline -> if : 1
the newline if -> one : 1
newline if one -> is : 1
one is is -> copied : 1
is is copied -> into : 1
is copied into -> return : 1
is copied into -> that : 1
is copied into -> after : 1
copied into return -> value : 1
into return value -> is : 2
success or a -> null : 3
pointer for an -> error : 1
error or if -> the : 2
if the contents -> of : 1
string are in -> type : 1
are in type -> file : 1
in type file -> type : 1
type file type -> represents : 1
type file type -> is : 1
file type represents -> the : 1
type represents the -> contents : 1
type represents the -> rounding : 1
represents the contents -> of : 1
contents of an -> external : 1
contents of an -> iterator : 4
of an external -> a : 1
of an external -> or : 1
an external a -> program : 1
external a program -> works : 1
a program works -> with : 1
program works with -> in : 1
works with in -> which : 1
with in which -> the : 1
which the actual -> objects : 1
the actual objects -> are : 1
actual objects are -> managed : 1
objects are managed -> by : 1
are managed by -> functions : 1
are managed by -> automatically : 1
managed by functions -> in : 1
by functions in -> the : 1
standard you never -> need : 1
you never need -> to : 2
never need to -> allocate : 1
never need to -> examine : 1
need to allocate -> or : 1
to allocate or -> free : 1
allocate or free -> macro : 1
or free macro -> maximum : 1
free macro maximum -> length : 1
macro maximum length -> of : 1
maximum length of -> a : 1
length of a -> is : 1
length of a -> temporary : 1
length of a -> function : 1
length of a -> wide : 1
the size you -> should : 1
size you should -> use : 1
should use when -> declaring : 1
use when declaring -> a : 1
declaring a character -> array : 1
array that will -> store : 1
that will store -> a : 1
will store a -> some : 1
store a some -> systems : 1
a some systems -> do : 1
some systems do -> not : 1
systems do not -> have : 1
fixed maximum size -> for : 1
maximum size for -> a : 2
size for a -> in : 1
size for a -> the : 1
which case is -> a : 1
which case is -> is : 1
which case is -> set : 1
which case is -> if : 1
case is a -> recommended : 1
is a recommended -> and : 1
a recommended and -> the : 1
recommended and the -> resulting : 1
the resulting character -> array : 1
the resulting character -> once : 2
resulting character array -> might : 1
character array might -> not : 1
array might not -> be : 1
not be large -> enough : 1
hold all valid -> the : 1
all valid the -> macro : 1
valid the macro -> expands : 1
a constant instead -> of : 1
character array to -> avoid : 1
character array to -> a : 7
character array to -> an : 1
array to avoid -> any : 1
to avoid any -> problems : 1
avoid any problems -> with : 1
any problems with -> character : 1
problems with character -> arrays : 1
character arrays that -> are : 1
that are too -> function : 1
are too function -> opens : 1
too function opens -> a : 1
function opens a -> const : 1
function opens a -> with : 1
function opens a -> file : 2
function opens a -> temporary : 1
opens a const -> function : 1
a const function -> opens : 1
a const function -> renames : 1
a const function -> is : 2
a const function -> copies : 2
a const function -> splits : 1
a const function -> template : 1
const function opens -> a : 2
opens a with -> no : 1
no parameter specifies -> the : 1
specifies the filename -> in : 1
the filename in -> an : 1
filename in an -> the : 1
the parameter specifies -> how : 1
parameter specifies how -> to : 1
specifies how to -> open : 1
how to open -> the : 1
to open the -> the : 1
open the the -> must : 1
the the must -> begin : 1
the must begin -> with : 1
must begin with -> one : 1
begin with one -> of : 1
of the strings -> listed : 1
the strings listed -> in : 1
strings listed in -> open : 1
listed in open -> additional : 1
in open additional -> characters : 1
open additional characters -> can : 1
additional characters can -> and : 1
characters can and -> the : 1
can and the -> interpretation : 1
and the interpretation -> of : 1
the interpretation of -> the : 1
interpretation of the -> extra : 1
interpretation of the -> command : 1
of the extra -> characters : 1
the extra characters -> is : 1
extra characters is -> mode : 1
characters is mode -> strings : 1
is mode strings -> are : 1
mode strings are -> open : 1
strings are open -> open : 1
are open open -> solid : 1
open open solid -> solid : 2
open solid solid -> solid : 2
solid solid opens -> an : 3
solid solid opens -> a : 1
solid opens an -> existing : 3
opens an existing -> file : 3
an existing file -> for : 3
existing file for -> that : 1
existing file for -> solid : 1
existing file for -> and : 1
file for that -> every : 1
for that every -> write : 1
that every write -> is : 1
every write is -> forced : 1
write is forced -> to : 1
is forced to -> the : 1
forced to the -> end : 1
if the file -> to : 1
if the file -> already : 2
if the file -> is : 6
if the file -> contains : 1
the file to -> be : 1
file to be -> opened : 1
to be opened -> does : 1
be opened does -> not : 1
opened does not -> creates : 1
does not creates -> solid : 1
not creates solid -> solid : 1
creates solid solid -> solid : 1
file for solid -> solid : 1
solid solid creates -> a : 2
solid creates a -> new : 2
creates a new -> file : 2
a new file -> for : 2
a new file -> the : 1
new file for -> if : 1
new file for -> and : 1
file for if -> the : 1
the file already -> truncates : 2
file already truncates -> it : 2
already truncates it -> to : 2
truncates it to -> zero : 2
it to zero -> solid : 2
to zero solid -> solid : 2
zero solid solid -> solid : 1
zero solid solid -> or : 1
solid solid in -> binary : 3
solid solid in -> century : 2
solid solid in -> solid : 1
solid solid in -> out : 1
solid solid in -> function : 1
solid solid in -> conversion : 1
solid in binary -> solid : 3
in binary solid -> solid : 4
in binary solid -> or : 1
binary solid solid -> solid : 3
binary solid solid -> or : 1
solid opens a -> file : 1
opens a file -> in : 1
opens a file -> with : 2
opens a file -> using : 1
file in append -> mode : 1
in append mode -> and : 1
append mode and -> allows : 1
mode and allows -> it : 1
and allows it -> to : 1
allows it to -> be : 1
it to be -> solid : 1
to be solid -> solid : 1
file for and -> also : 2
for and also -> allows : 2
and also allows -> solid : 1
and also allows -> if : 1
also allows solid -> solid : 1
allows solid solid -> solid : 1
also allows if -> the : 1
allows if the -> file : 1
or solid update -> in : 2
solid update in -> binary : 2
update in binary -> solid : 2
update in binary -> macro : 1
binary solid or -> update : 1
solid or update -> in : 1
or update in -> binary : 1
in binary macro -> minimum : 1
binary macro minimum -> limit : 1
macro minimum limit -> on : 1
minimum limit on -> the : 1
limit on the -> number : 1
on the number -> of : 1
number of open -> typical : 1
of open typical -> operating : 1
open typical operating -> system : 1
typical operating system -> has : 1
operating system has -> a : 1
system has a -> maximum : 1
has a maximum -> number : 1
a maximum number -> of : 1
number of files -> that : 1
of files that -> can : 1
files that can -> be : 1
can be open -> at : 1
be open at -> one : 1
open at one -> this : 1
one this number -> might : 1
this number might -> be : 1
number might be -> variable : 1
might be variable -> or : 1
be variable or -> is : 1
variable or is -> the : 1
is the guaranteed -> minimum : 1
the guaranteed minimum -> value : 1
guaranteed minimum value -> of : 1
minimum value of -> the : 1
a constant type -> file : 1
constant type file -> type : 1
file type is -> an : 1
represents a position -> in : 2
way to set -> the : 1
set the value -> of : 1
object is to -> call : 1
object is to -> use : 3
to call and -> the : 1
to call and -> save : 1
call and the -> only : 1
call and the -> descriptions : 1
the only things -> you : 1
only things you -> can : 1
things you can -> do : 1
can do with -> the : 1
do with the -> value : 1
the value are -> assign : 1
value are assign -> an : 1
are assign an -> value : 1
assign an value -> to : 1
an value to -> it : 1
value to it -> and : 1
to it and -> pass : 1
pass it as -> a : 1
a function especially -> to : 1
function especially to -> in : 1
especially to in -> function : 1
to in function -> writes : 2
to in function -> deletes : 1
to in function -> reads : 1
to in function -> converts : 2
to in function -> runs : 1
to in function -> gets : 1
in function writes -> formatted : 12
in function writes -> a : 5
in function writes -> an : 1
function writes formatted -> const : 3
function writes formatted -> output : 1
function writes formatted -> function : 2
function writes formatted -> data : 4
function writes formatted -> int : 2
function writes formatted -> wide : 1
writes formatted const -> function : 3
formatted const function -> writes : 2
formatted const function -> performs : 1
formatted const function -> reads : 1
formatted const function -> is : 1
const function writes -> formatted : 1
const function writes -> wide : 1
writes formatted output -> to : 1
formatted output to -> the : 1
output to the -> parameter : 1
output to the -> external : 1
output to the -> function : 2
the parameter contains -> the : 1
the parameter contains -> formatting : 1
parameter contains the -> formatting : 1
contains the formatting -> and : 1
and the remaining -> arguments : 2
and the remaining -> field : 1
and the remaining -> characters : 1
arguments are printed -> according : 1
are printed according -> to : 1
printed according to -> the : 1
of characters or -> a : 1
characters or a -> negative : 1
or a negative -> value : 3
negative value for -> an : 2
for an in -> are : 1
for an in -> function : 2
for an in -> macro : 1
an in are -> printed : 1
in are printed -> verbatim : 1
are printed verbatim -> except : 1
printed verbatim except -> for : 1
verbatim except for -> conversion : 1
except for conversion -> which : 1
for conversion which -> begin : 1
conversion which begin -> with : 2
which begin with -> a : 2
begin with a -> percent : 2
begin with a -> sign : 1
with a percent -> sign : 3
a percent sign -> each : 1
a percent sign -> a : 1
a percent sign -> and : 1
percent sign each -> conversion : 1
sign each conversion -> specification : 1
each conversion specification -> is : 2
conversion specification is -> made : 2
specification is made -> up : 2
is made up -> of : 2
made up of -> the : 2
up of the -> following : 2
the following parts -> field : 1
the following parts -> assignment : 1
following parts field -> and : 1
parts field and -> conversion : 1
field and conversion -> following : 2
and conversion following -> are : 2
conversion following are -> detailed : 1
conversion following are -> descriptions : 1
following are detailed -> descriptions : 1
are detailed descriptions -> of : 1
of the parts -> of : 1
the parts of -> a : 3
a conversion flag -> characters : 1
conversion flag characters -> are : 1
flag characters are -> optional : 1
characters are optional -> and : 1
and can appear -> in : 1
in any flag -> lists : 1
any flag lists -> the : 1
flag lists the -> flag : 1
lists the flag -> characters : 1
lists the flag -> solid : 1
the flag characters -> and : 1
flag characters and -> their : 1
characters and their -> flag : 1
and their flag -> flag : 1
their flag flag -> solid : 1
flag flag solid -> solid : 1
flag solid solid -> solid : 2
solid is solid -> solid : 1
is solid solid -> solid : 3
is solid solid -> if : 1
solid solid conversions -> always : 1
solid conversions always -> begin : 1
conversions always begin -> with : 1
always begin with -> a : 1
with a sign -> is : 1
with a sign -> character : 1
a sign is -> to : 1
sign is to -> use : 1
use a sign -> only : 1
a sign only -> if : 1
sign only if -> the : 1
value is solid -> solid : 1
solid solid output -> is : 1
solid solid output -> to : 1
solid solid output -> after : 1
solid output is -> an : 1
output is an -> initial : 1
is an initial -> space : 1
an initial space -> character : 1
initial space character -> if : 1
space character if -> a : 1
character if a -> signed : 1
if a signed -> conversion : 1
a signed conversion -> results : 1
signed conversion results -> in : 1
conversion results in -> an : 1
in an empty -> string : 1
empty string or -> a : 1
string or a -> string : 1
or a string -> that : 2
or a string -> is : 1
or a string -> argument : 1
or a string -> of : 1
string that does -> not : 1
does not start -> with : 1
not start with -> a : 1
start with a -> sign : 1
start with a -> percent : 1
start with a -> string : 2
start with a -> if : 1
a sign character -> takes : 1
sign character takes -> precedence : 1
character takes precedence -> over : 1
takes precedence over -> solid : 1
takes precedence over -> for : 1
takes precedence over -> the : 1
precedence over solid -> solid : 1
over solid solid -> solid : 1
solid solid an -> alternate : 1
solid an alternate -> insert : 1
an alternate insert -> a : 1
alternate insert a -> for : 1
insert a for -> insert : 1
a for insert -> for : 1
for insert for -> or : 1
insert for or -> for : 1
or for always -> output : 1
for always output -> a : 1
always output a -> decimal : 1
output a decimal -> point : 1
point for do -> not : 1
for do not -> remove : 1
not remove trailing -> zeros : 1
remove trailing zeros -> for : 1
trailing zeros for -> or : 1
zeros for or -> behavior : 1
for or behavior -> is : 1
undefined for other -> solid : 1
for other solid -> are : 1
other solid are -> padded : 1
solid are padded -> with : 1
are padded with -> leading : 1
padded with leading -> zeros : 1
with leading zeros -> the : 1
leading zeros the -> sign : 1
zeros the sign -> or : 1
the sign or -> base : 1
sign or base -> the : 1
or base the -> flag : 1
base the flag -> takes : 1
the flag takes -> precedence : 1
flag takes precedence -> over : 1
precedence over for -> integer : 1
over for integer -> a : 1
for integer a -> precision : 1
integer a precision -> takes : 1
a precision takes -> precedence : 1
precision takes precedence -> over : 1
precedence over the -> optional : 1
over the optional -> number : 1
the optional number -> that : 1
optional number that -> specifies : 1
number that specifies -> the : 1
the minimum number -> of : 1
minimum number of -> characters : 1
characters that the -> field : 1
that the field -> will : 1
the field will -> if : 1
field will if -> the : 1
will if the -> field : 1
will if the -> return : 1
if the field -> is : 1
if the field -> value : 1
the field is -> an : 1
field is an -> asterisk : 1
is an asterisk -> the : 1
an asterisk the -> field : 1
asterisk the field -> width : 1
field width is -> obtained : 1
width is obtained -> from : 1
from the next -> argument : 1
from the next -> version : 1
the next argument -> to : 1
next argument to -> be : 1
argument to be -> optional : 1
to be optional -> number : 1
be optional number -> of : 1
optional number of -> digits : 1
digits for an -> number : 1
for an number -> of : 1
an number of -> decimal : 1
decimal digits for -> a : 1
digits for a -> or : 1
for a or -> maximum : 1
a or maximum -> size : 1
or maximum size -> for : 1
a the precision -> is : 1
the precision is -> specified : 1
precision is specified -> as : 1
as a dot -> followed : 1
a dot followed -> by : 1
dot followed by -> a : 1
by a number -> or : 1
a number or -> an : 1
a number or -> as : 1
number or an -> character : 1
or an character -> or : 1
an character or -> means : 1
character or means -> an : 2
or means an -> integer : 4
means an integer -> is : 4
an integer is -> or : 5
integer is or -> means : 2
integer is or -> a : 2
integer is or -> for : 1
is or means -> an : 2
or a character -> is : 1
or a character -> string : 1
character is or -> a : 1
a string is -> a : 1
a string is -> read : 1
string is a -> pointer : 1
string is a -> sequence : 1
string is a -> prefix : 4
pointer to means -> a : 1
to means a -> number : 1
means a number -> is : 2
number is the -> type : 1
number is the -> default : 1
the argument containing -> the : 2
argument containing the -> data : 2
containing the data -> to : 2
data to be -> printed : 2
to be printed -> using : 2
be printed using -> a : 2
printed using a -> conversion : 2
using a conversion -> it : 2
a conversion it -> must : 2
conversion it must -> be : 2
of the decimal -> octal : 1
of the decimal -> reads : 1
of the decimal -> point : 1
the decimal octal -> decimal : 1
decimal octal decimal -> hexadecimal : 1
octal decimal hexadecimal -> writes : 1
octal decimal hexadecimal -> point : 1
decimal hexadecimal writes -> the : 1
hexadecimal writes the -> digits : 1
writes the digits -> in : 2
the digits in -> and : 1
the digits in -> floating : 1
digits in and -> writes : 1
in and writes -> the : 1
in and writes -> formatted : 1
and writes the -> digits : 1
and writes the -> converted : 1
and writes the -> formatted : 3
and writes the -> string : 1
digits in floating -> floating : 1
in floating floating -> the : 1
floating floating the -> exponent : 1
floating the exponent -> is : 1
the exponent is -> introduced : 2
the exponent is -> less : 1
the exponent is -> or : 1
with or matching -> the : 1
or matching the -> conversion : 1
matching the conversion -> floating : 1
the conversion floating -> use : 1
conversion floating use -> style : 1
floating use style -> or : 1
use style or -> use : 1
style or use -> style : 1
or use style -> if : 1
use style if -> the : 1
style if the -> exponent : 1
if the exponent -> is : 2
exponent is less -> than : 1
than or greater -> than : 1
or greater than -> the : 2
greater than the -> use : 1
greater than the -> or : 1
greater than the -> shorter : 4
greater than the -> precision : 1
than the use -> style : 1
the use style -> trailing : 1
use style trailing -> zeros : 1
style trailing zeros -> are : 1
trailing zeros are -> and : 1
trailing zeros are -> as : 1
zeros are and -> a : 1
are and a -> trailing : 1
and a trailing -> decimal : 1
and a trailing -> which : 3
a trailing decimal -> point : 1
trailing decimal point -> is : 1
decimal point is -> dropped : 1
decimal point is -> or : 2
decimal point is -> replaced : 1
decimal point is -> always : 1
point is dropped -> if : 1
is dropped if -> it : 1
dropped if it -> would : 1
if it would -> be : 1
last the argument -> must : 1
be an promoted -> to : 1
an promoted to -> if : 1
promoted to if -> the : 1
if the size -> modifier : 2
the size modifier -> is : 2
size modifier is -> the : 2
modifier is the -> argument : 2
modifier is the -> input : 3
must be promoted -> to : 1
promoted to which -> is : 1
which is then -> printed : 1
is then printed -> as : 1
then printed as -> a : 1
printed as a -> multibyte : 1
as a multibyte -> the : 1
as a multibyte -> if : 2
as a multibyte -> is : 2
as a multibyte -> returns : 1
a multibyte the -> argument : 1
a multibyte the -> function : 1
a multibyte the -> contents : 1
multibyte the argument -> is : 1
multibyte the argument -> must : 1
argument is a -> pointer : 4
argument is a -> common : 1
to a array -> of : 1
array of if -> the : 1
to a which -> is : 2
to a which -> copies : 2
to a series -> of : 1
series of multibyte -> the : 1
of multibyte the -> argument : 1
of multibyte the -> parameter : 1
the output format -> is : 1
output format is -> argument : 1
format is argument -> must : 1
is argument must -> be : 1
to an stores -> in : 2
an stores in -> the : 2
stores in the -> integer : 2
in the integer -> the : 2
integer the number -> of : 2
of characters written -> so : 1
characters written so -> use : 1
written so use -> the : 1
so use the -> or : 1
the or size -> modifiers : 2
or size modifiers -> if : 1
or size modifiers -> can : 1
size modifiers if -> the : 1
modifiers if the -> argument : 1
or a literal -> is : 1
a literal is -> your : 1
a literal is -> written : 1
literal is your -> responsibility : 1
that the argument -> types : 2
argument types match -> the : 2
types match the -> any : 2
match the any -> errors : 2
the any errors -> result : 2
any errors result -> in : 2
in undefined mismatches -> between : 2
undefined mismatches between -> and : 2
mismatches between and -> the : 2
common and sometimes -> subtle : 2
and sometimes subtle -> source : 2
sometimes subtle source -> of : 2
subtle source of -> you : 2
source of you -> can : 2
can avoid these -> problems : 2
avoid these problems -> entirely : 2
these problems entirely -> by : 2
problems entirely by -> using : 2
entirely by using -> streams : 2
by using streams -> instead : 2
using streams instead -> of : 2
streams instead of -> and : 2
streams instead of -> using : 1
instead of and -> related : 2
of and related -> the : 2
of and related -> topics : 1
related the functions -> interpret : 2
the functions interpret -> the : 2
functions interpret the -> format : 2
interpret the format -> string : 2
the format string -> following : 2
format string following -> are : 1
format string following -> is : 1
string following are -> examples : 1
following are examples -> of : 1
are examples of -> calling : 1
examples of calling -> double : 1
of calling double -> pi : 1
calling double pi -> int : 1
double pi int -> i : 1
pi int i -> const : 1
int i const -> char : 1
i const char -> how : 1
const char how -> are : 1
char how are -> prints : 1
how are prints -> prints : 1
are prints prints -> prints : 1
prints prints in -> in : 1
prints in in -> function : 1
in in function -> writes : 4
in in function -> changes : 2
in in function -> computes : 2
in in function -> compares : 2
in in function -> copies : 6
in in function -> fills : 2
in in function -> tokenizes : 1
in in function -> determines : 1
in in function -> concatenates : 2
in in function -> counts : 1
in in function -> converts : 3
in in function -> transforms : 1
in in function -> manipulator : 7
in in function -> function : 6
function writes a -> function : 3
function writes a -> single : 1
function writes a -> string : 1
function writes a -> wide : 3
writes a function -> writes : 3
a function writes -> a : 2
a function writes -> the : 1
writes a single -> character : 2
single character to -> the : 1
the character must -> be : 2
character must be -> an : 2
which is automatically -> promoted : 1
is automatically promoted -> to : 1
automatically promoted to -> so : 1
promoted to so -> the : 1
so the proper -> way : 1
the proper way -> to : 1
proper way to -> print : 1
print a variable -> of : 1
type is as -> return : 1
is as return -> value : 1
as return value -> is : 1
error or for -> in : 1
error or for -> the : 1
or for in -> function : 1
or for in -> in : 1
function writes the -> string : 1
function writes the -> wide : 1
writes the string -> to : 2
writes the string -> contents : 2
string to it -> returns : 2
string to it -> is : 3
it returns for -> an : 2
it returns for -> success : 1
returns for an -> error : 1
returns for an -> or : 1
returns for an -> input : 1
error or a -> nonnegative : 1
or a nonnegative -> value : 2
nonnegative value for -> in : 2
value for in -> function : 2
in function reads -> binary : 1
in function reads -> formatted : 4
in function reads -> a : 2
function reads binary -> function : 1
reads binary function -> reads : 1
binary function reads -> up : 1
function reads up -> to : 1
reads up to -> elements : 1
up to elements -> from : 1
up to elements -> to : 1
up to elements -> the : 1
to elements from -> into : 1
elements from into -> the : 3
into the memory -> that : 1
memory that points -> the : 5
memory that points -> of : 2
memory that points -> that : 1
memory that points -> which : 1
points the memory -> must : 1
memory must have -> pod : 2
have pod type -> each : 1
have pod type -> return : 1
pod type each -> element : 1
type each element -> is : 1
each element is -> bytes : 2
each element is -> initialized : 1
element is bytes -> it : 1
element is bytes -> and : 1
is bytes it -> returns : 1
bytes it returns -> the : 1
elements that were -> read : 1
that were read -> function : 1
were read function -> opens : 1
read function opens -> a : 1
a file with -> an : 1
a file with -> that : 1
file with an -> existing : 1
with an existing -> const : 1
an existing const -> function : 1
existing const function -> opens : 1
a file using -> an : 1
a file using -> ifstream : 2
file using an -> existing : 1
using an existing -> the : 1
an existing the -> file : 1
existing the file -> previously : 1
the file previously -> associated : 1
file previously associated -> with : 1
previously associated with -> the : 1
with the is -> closed : 1
the is closed -> and : 1
is closed and -> the : 1
closed and the -> named : 1
and the named -> file : 2
and the named -> versions : 1
named file is -> opened : 2
file is opened -> in : 1
file is opened -> by : 1
file is opened -> is : 1
is opened in -> the : 1
opened in the -> same : 1
manner as if -> were : 1
as if were -> see : 1
if were see -> for : 1
were see for -> a : 1
the main purpose -> of : 1
main purpose of -> using : 1
purpose of using -> is : 1
of using is -> to : 1
using is to -> reopen : 1
is to reopen -> one : 1
to reopen one -> of : 1
reopen one of -> the : 1
standard and function -> reads : 1
and function reads -> formatted : 1
function reads formatted -> const : 2
function reads formatted -> data : 2
function reads formatted -> wide : 1
reads formatted const -> function : 2
const function performs -> a : 1
function performs a -> formatted : 1
function performs a -> binary : 1
performs a formatted -> read : 1
formatted read from -> the : 1
from the parameter -> contains : 1
parameter contains formatting -> and : 1
contains formatting and -> the : 1
arguments are when -> reads : 1
are when reads -> it : 1
when reads it -> stores : 1
reads it stores -> their : 1
it stores their -> values : 1
stores their values -> in : 1
their values in -> the : 1
in the objects -> that : 1
the objects that -> successive : 1
objects that successive -> arguments : 1
that successive arguments -> point : 1
successive arguments point -> the : 1
arguments point the -> return : 1
point the return -> value : 1
of items read -> or : 1
items read or -> a : 1
read or a -> negative : 1
for an are -> read : 1
an are read -> from : 1
are read from -> and : 2
are read from -> the : 4
are read from -> until : 1
are read from -> up : 1
from and interpreted -> according : 1
and interpreted according -> to : 1
interpreted according to -> which : 1
according to which -> contains : 1
to which contains -> whitespace : 1
which contains whitespace -> and : 1
contains whitespace and -> conversion : 1
whitespace and conversion -> which : 1
and conversion which -> begin : 1
percent sign a -> whitespace : 1
sign a whitespace -> character : 1
a whitespace character -> directs : 1
a whitespace character -> space : 1
a whitespace character -> is : 1
whitespace character directs -> to : 1
character directs to -> skip : 1
directs to skip -> over : 1
to skip over -> whitespace : 1
skip over whitespace -> in : 1
over whitespace in -> the : 1
the input characters -> must : 1
the input characters -> from : 4
input characters must -> match : 1
characters must match -> the : 1
match the input -> each : 1
the input each -> conversion : 1
input each conversion -> specification : 1
following parts assignment -> field : 1
parts assignment field -> and : 1
assignment field and -> conversion : 1
of the conversion -> specification : 2
of the conversion -> state : 5
the conversion specification -> optional : 1
the conversion specification -> lists : 1
conversion specification optional -> asterisk : 1
specification optional asterisk -> directs : 1
optional asterisk directs -> to : 1
asterisk directs to -> read : 1
directs to read -> and : 1
read and parse -> the : 1
and parse the -> input : 1
and parse the -> and : 1
parse the input -> according : 1
the input according -> to : 1
input according to -> the : 1
the conversion but -> not : 1
conversion but not -> to : 1
but not to -> assign : 1
not to assign -> the : 1
to assign the -> value : 1
assign the value -> to : 1
value to an -> optional : 1
value to an -> element : 1
to an optional -> number : 1
an optional number -> decimal : 1
optional number decimal -> that : 1
number decimal that -> specifies : 1
decimal that specifies -> the : 1
specifies the maximum -> number : 1
characters to character -> or : 1
to character or -> means : 1
or a number -> is : 1
number is or -> a : 1
a string argument -> is : 1
a string argument -> and : 1
string argument is -> a : 1
pointer to for -> the : 1
the and conversion -> means : 1
the and conversion -> lists : 1
and conversion means -> a : 1
conversion means a -> number : 1
the default size -> for : 1
default size for -> an : 1
size for an -> integer : 1
size for an -> is : 1
is or for -> a : 1
for a and -> for : 1
and for any -> of : 1
for any of -> the : 3
of the character -> conversion : 1
of the character -> sequences : 1
of the character -> constructor : 1
of the character -> characters : 1
of the character -> and : 2
of the character -> the : 1
of the character -> string : 1
of the character -> array : 1
the character conversion -> the : 1
character conversion the -> type : 1
conversion the type -> of : 1
the decimal reads -> and : 1
decimal reads and -> interprets : 1
reads and interprets -> a : 1
and interprets a -> prefix : 1
interprets a prefix -> of : 1
for for or -> anything : 1
for or anything -> else : 1
or anything else -> for : 1
anything else for -> octal : 1
anything else for -> numbers : 1
anything else for -> default : 1
else for octal -> decimal : 1
for octal decimal -> hexadecimal : 1
decimal hexadecimal point -> in : 1
hexadecimal point in -> fixed : 1
point in fixed -> or : 1
fixed or exponential -> the : 1
fixed or exponential -> regardless : 1
or exponential the -> field : 1
or exponential the -> function : 1
exponential the field -> width : 1
field width specifies -> the : 1
width specifies the -> exact : 1
specifies the exact -> number : 1
to the corresponding -> argument : 1
to the corresponding -> element : 2
the corresponding argument -> must : 2
corresponding argument must -> be : 2
to a character -> array : 5
to a character -> you : 1
character array large -> enough : 1
array large enough -> to : 1
hold the if -> the : 1
if the modifier -> is : 3
the modifier is -> the : 3
input is read -> as : 3
read as multibyte -> which : 3
as multibyte which -> are : 3
multibyte which are -> converted : 3
which are converted -> to : 3
to wide characters -> and : 4
to wide characters -> are : 2
to wide characters -> to : 1
wide characters and -> stored : 3
wide characters and -> working : 1
wide characters and -> related : 1
wide characters and -> wide : 1
characters and stored -> in : 3
and stored in -> a : 3
and stored in -> the : 2
and stored in -> is : 1
a in either -> no : 1
in either no -> null : 1
either no null -> character : 1
no null character -> is : 2
null character is -> reads : 1
null character is -> always : 4
null character is -> appended : 3
null character is -> not : 2
character is reads -> a : 1
is reads a -> sequence : 1
reads a sequence -> of : 1
of the corresponding -> argument : 1
of the corresponding -> element : 1
array that is -> large : 1
that is large -> enough : 8
hold the sequence -> plus : 1
the sequence plus -> a : 1
sequence plus a -> terminating : 1
plus a terminating -> null : 1
a terminating null -> if : 1
a terminating null -> wide : 5
a terminating null -> character : 3
a terminating null -> the : 3
a terminating null -> in : 1
terminating null if -> the : 1
null if the -> modifier : 1
null if the -> formatted : 1
in a followed -> by : 2
by a terminating -> null : 4
terminating null wide -> the : 1
terminating null wide -> a : 1
terminating null wide -> return : 1
terminating null wide -> that : 1
terminating null wide -> or : 1
terminating null wide -> in : 1
terminating null wide -> character : 1
null wide the -> argument : 1
wide the argument -> must : 1
input format is -> and : 1
format is and -> matches : 1
is and matches -> the : 1
and matches the -> format : 1
matches the format -> that : 1
the format that -> argument : 1
format that argument -> must : 1
that argument must -> be : 1
characters read so -> the : 1
read so the -> or : 1
so the or -> size : 1
size modifiers can -> be : 1
modifiers can be -> used : 1
be used if -> the : 1
used if the -> argument : 1
to or nothing -> is : 1
or nothing is -> read : 1
nothing is read -> from : 1
is read from -> the : 4
is read from -> is : 1
the and does -> not : 1
affect the count -> returned : 1
the count returned -> by : 1
count returned by -> a : 1
returned by a -> sequence : 1
returned by a -> call : 1
returned by a -> corresponding : 1
by a sequence -> of : 1
conversion specification lists -> a : 1
specification lists a -> set : 1
lists a set -> of : 1
set of characters -> the : 1
of characters the -> in : 1
of characters the -> first : 1
characters the in -> square : 1
the in square -> the : 1
square the input -> string : 1
the input string -> is : 1
input string is -> a : 1
characters that matches -> any : 1
that matches any -> of : 1
matches any of -> the : 1
of the characters -> in : 4
of the characters -> are : 2
of the characters -> from : 2
of the characters -> might : 1
in the scanset -> if : 1
the scanset if -> the : 1
scanset if the -> scanset : 1
if the scanset -> begins : 1
the scanset begins -> with : 1
scanset begins with -> a : 1
with a circumflex -> any : 1
a circumflex any -> character : 1
circumflex any character -> not : 1
any character not -> in : 1
character not in -> the : 1
null wide a -> literal : 1
wide a literal -> in : 1
a literal in -> the : 1
literal in the -> input : 1
input is your -> responsibility : 1
the argument are -> a : 1
the argument are -> the : 1
argument are a -> common : 1
are a common -> and : 1
string following is -> an : 1
example of calling -> the : 1
calling the input -> stream : 1
input stream beeffeed -> the : 1
stream beeffeed the -> call : 1
beeffeed the call -> double : 1
the call double -> float : 1
call double float -> long : 1
double float long -> int : 1
float long int -> unsigned : 1
long int unsigned -> short : 1
int unsigned short -> has : 1
unsigned short has -> the : 1
short has the -> following : 1
the following d -> f : 1
following d f -> l : 1
d f l -> us : 1
f l us -> in : 1
l us in -> in : 1
us in in -> function : 1
in function changes -> file : 1
in function changes -> the : 1
function changes file -> long : 1
function changes file -> const : 1
changes file long -> int : 1
file long int -> int : 1
int int function -> seeks : 1
int int function -> converts : 1
int int function -> searches : 1
int int function -> returns : 2
int function seeks -> to : 1
function seeks to -> a : 2
seeks to a -> different : 2
a different position -> in : 2
different position in -> the : 2
in the must -> be : 1
one of or -> the : 1
or the is -> relative : 1
the is relative -> to : 1
is relative to -> the : 1
relative to the -> current : 1
relative to the -> end : 2
the current or -> the : 1
the current or -> at : 1
current or the -> flag : 1
or the flag -> is : 1
or the flag -> can : 1
flag is and -> any : 1
flag is and -> the : 1
flag is and -> a : 1
is and any -> character : 1
is and any -> necessary : 1
and any character -> is : 1
any character is -> also : 1
any character is -> other : 1
character is also -> instead : 1
character is also -> at : 1
is also instead -> of : 1
also instead of -> when : 1
instead of when -> using : 1
of when using -> large : 1
when using large -> for : 1
using large for -> which : 1
large for which -> a : 1
which a position -> does : 1
a position does -> not : 1
position does not -> necessarily : 1
not necessarily fit -> into : 1
necessarily fit into -> a : 1
fit into a -> return : 1
into a return -> value : 1
a return value -> is : 1
a return value -> from : 4
an function changes -> file : 1
changes file const -> function : 1
file const function -> seeks : 1
const function seeks -> to : 1
in the position -> must : 1
the position must -> have : 1
position must have -> been : 1
have been returned -> from : 1
have been returned -> by : 2
been returned from -> an : 1
an earlier successful -> call : 1
earlier successful call -> to : 1
successful call to -> function : 1
call to function -> returns : 1
call to function -> handles : 1
to function returns -> current : 1
function returns current -> file : 1
returns current file -> int : 1
current file int -> function : 1
file int function -> returns : 1
file int function -> sets : 1
returns the current -> file : 1
returns the current -> date : 1
returns the current -> position : 1
returns the current -> contents : 1
the current file -> position : 1
the current file -> positive : 1
current file position -> in : 1
file position in -> this : 1
position in this -> position : 1
in this position -> can : 1
this position can -> be : 1
position can be -> used : 1
be used an -> origin : 1
used an origin -> of : 1
an origin of -> in : 1
origin of in -> a : 1
of in a -> subsequent : 1
of in a -> is : 1
in a subsequent -> call : 1
a subsequent call -> to : 4
subsequent call to -> if : 1
subsequent call to -> returns : 3
call to if -> it : 1
to if it -> returns : 1
to if it -> is : 2
it returns may -> but : 1
returns may but -> is : 1
may but is -> not : 1
value as function -> writes : 1
as function writes -> binary : 1
function writes binary -> function : 1
writes binary function -> writes : 1
binary function writes -> up : 1
function writes up -> to : 1
writes up to -> elements : 1
to elements to -> each : 1
elements to each -> element : 1
is bytes and -> points : 1
bytes and points -> to : 1
first such the -> memory : 1
such the memory -> must : 1
pod type return -> value : 1
type return value -> is : 1
number of complete -> elements : 1
of complete elements -> successfully : 1
complete elements successfully -> written : 1
elements successfully written -> to : 1
successfully written to -> macro : 1
written to macro -> reads : 1
to macro reads -> a : 1
macro reads a -> macro : 1
macro reads a -> character : 2
macro reads a -> wide : 3
reads a macro -> reads : 1
a macro reads -> a : 1
a character from -> and : 1
a character from -> macro : 1
a character from -> an : 1
character from and -> returns : 1
from and returns -> that : 1
from and returns -> to : 1
and returns that -> character : 1
returns that character -> as : 1
that character as -> an : 1
an the return -> value : 1
or a read -> macro : 1
a read macro -> reads : 1
read macro reads -> a : 1
character from macro -> is : 1
from macro is -> equivalent : 1
macro is equivalent -> to : 4
equivalent to function -> reads : 1
equivalent to function -> function : 11
equivalent to function -> template : 1
to function reads -> a : 1
reads a string -> function : 1
reads a string -> from : 2
a string function -> reads : 1
string function reads -> a : 1
of text to -> and : 1
text to and -> including : 1
including a into -> the : 1
a into the -> string : 1
into the string -> is : 1
into the string -> starting : 1
into the string -> it : 1
string is no -> way : 1
is no way -> to : 2
limit the input -> to : 1
input to the -> size : 1
input to the -> one : 1
input to the -> stream : 1
input to the -> for : 1
size of so -> you : 1
should never call -> use : 1
never call use -> macro : 1
call use macro -> length : 1
use macro length -> of : 1
macro length of -> temporary : 1
length of temporary -> is : 1
of temporary is -> the : 1
temporary is the -> length : 1
is the length -> of : 1
of a temporary -> filename : 1
a temporary filename -> for : 1
temporary filename for -> the : 1
filename for the -> macro : 1
constant macro null -> pointer : 1
null pointer see -> for : 5
pointer see for -> more : 5
for more in -> function : 3
for more in -> type : 2
for more in -> macro : 2
more in function -> writes : 1
more in function -> sorts : 1
more in function -> reads : 1
function writes an -> error : 2
writes an error -> function : 1
writes an error -> message : 1
an error function -> writes : 1
error function writes -> an : 1
error message to -> if : 1
message to if -> is : 1
is not null -> and : 1
not null and -> is : 1
null and is -> not : 1
not an empty -> it : 1
an empty it -> is : 1
empty it is -> printed : 1
it is printed -> followed : 1
is printed followed -> by : 1
printed followed by -> a : 1
by a colon -> and : 1
colon and a -> the : 1
a the error -> message : 1
the error message -> is : 1
error message is -> printed : 1
message is printed -> next : 1
is printed next -> and : 1
printed next and -> is : 1
next and is -> the : 1
the same text -> as : 1
same text as -> that : 1
text as that -> returned : 1
as that returned -> by : 1
that returned by -> passing : 1
returned by passing -> as : 1
by passing as -> its : 1
passing as its -> in : 1
as its in -> in : 1
its in in -> function : 1
writes formatted function -> is : 2
formatted function is -> equivalent : 1
formatted function is -> similar : 1
function is equivalent -> to : 3
equivalent to calling -> to : 1
equivalent to calling -> function : 1
equivalent to calling -> in : 6
equivalent to calling -> c : 1
equivalent to calling -> and : 1
equivalent to calling -> fmtflags : 1
equivalent to calling -> the : 1
equivalent to calling -> or : 1
equivalent to calling -> up : 2
to calling to -> see : 1
calling to see -> for : 1
to see for -> information : 1
to see for -> the : 1
about the in -> macro : 1
the in macro -> writes : 1
the in macro -> standard : 1
in macro writes -> a : 4
macro writes a -> macro : 1
macro writes a -> character : 1
macro writes a -> wide : 2
writes a macro -> writes : 1
a macro writes -> the : 1
macro writes the -> character : 1
macro writes the -> wide : 1
writes the character -> which : 1
character which must -> be : 1
must be cast -> to : 1
to to in -> macro : 1
to in macro -> writes : 1
writes a character -> to : 1
character to macro -> is : 2
to macro is -> equivalent : 2
equivalent to in -> function : 2
equivalent to in -> type : 1
writes a string -> to : 2
a string to -> in : 1
a string to -> floating : 1
a string to -> an : 2
a string to -> a : 2
a string to -> function : 1
a string to -> unsigned : 1
string to in -> function : 1
in function deletes -> a : 1
function deletes a -> function : 1
deletes a function -> deletes : 1
a function deletes -> the : 1
function deletes the -> file : 1
deletes the file -> named : 1
the file named -> by : 1
file named by -> it : 1
named by it -> returns : 1
by it returns -> for : 1
returns for success -> or : 1
an function renames -> a : 1
function renames a -> const : 1
renames a const -> function : 1
const function renames -> the : 1
function renames the -> file : 1
renames the file -> specified : 1
the file specified -> by : 1
file specified by -> to : 1
by to the -> return : 1
nonzero for function -> resets : 1
for function resets -> file : 1
function resets file -> function : 1
resets file function -> moves : 1
file function moves -> a : 1
function moves a -> file : 1
moves a file -> position : 1
file position to -> the : 1
file position to -> which : 1
position to the -> beginning : 1
position to the -> input : 2
position to the -> character : 1
beginning of a -> file : 1
of a file -> and : 1
a file and -> is : 1
a file and -> read : 1
file and is -> equivalent : 1
equivalent to macro -> seek : 1
to macro seek -> from : 1
macro seek from -> current : 1
macro seek from -> as : 1
macro seek from -> beginning : 1
seek from current -> file : 1
from current file -> as : 1
current file as -> the : 1
file as the -> last : 1
last parameter to -> to : 3
parameter to to -> seek : 3
to to seek -> from : 2
to to seek -> relative : 1
to seek from -> the : 2
seek from the -> current : 1
seek from the -> start : 1
current file positive -> offset : 1
file positive offset -> values : 1
positive offset values -> seek : 3
offset values seek -> toward : 2
offset values seek -> past : 1
values seek toward -> the : 4
seek toward the -> end : 2
seek toward the -> beginning : 2
toward the end -> of : 3
the and negative -> values : 2
and negative values -> seek : 2
negative values seek -> toward : 2
toward the beginning -> of : 3
constant macro seek -> from : 2
seek from as -> the : 1
from as the -> last : 1
to seek relative -> to : 1
seek relative to -> the : 1
of the positive -> offset : 2
the positive offset -> values : 2
values seek past -> the : 1
seek past the -> end : 1
seek from beginning -> of : 1
from beginning of -> as : 1
beginning of as -> the : 1
of as the -> last : 1
of as the -> inverse : 1
of as the -> suggested : 1
of as the -> if : 1
from the start -> of : 3
constant function sets -> file : 1
function sets file -> function : 1
function sets file -> int : 1
sets file function -> sets : 1
file function sets -> the : 1
sets the buffer -> to : 1
buffer to use -> when : 1
use when reading -> from : 1
when reading from -> or : 1
when reading from -> is : 1
reading from or -> writing : 1
from or writing -> to : 1
or writing to -> the : 1
writing to the -> size : 1
size of must -> be : 1
at least function -> sets : 1
least function sets -> file : 1
sets file int -> function : 1
int function sets -> the : 1
sets the buffering -> for : 1
the buffering for -> the : 1
buffering for the -> mode : 1
buffering for the -> or : 1
for the mode -> determines : 1
the mode determines -> the : 1
mode determines the -> buffering : 1
determines the buffering -> no : 1
the buffering no -> buffering : 1
buffering no buffering -> line : 1
no buffering line -> buffering : 1
buffering line buffering -> or : 1
line buffering or -> full : 1
buffering or full -> buffering : 1
or full buffering -> you : 1
full buffering you -> can : 1
buffering you can -> supply : 1
supply a buffer -> in : 1
a buffer in -> the : 1
buffer in the -> with : 1
buffer in the -> same : 1
the with as -> the : 1
as the buffer -> or : 1
the buffer or -> use : 1
the buffer or -> an : 1
buffer or use -> a : 1
or use a -> null : 1
use a null -> pointer : 1
pointer for the -> argument : 1
pointer for the -> file : 1
pointer for the -> input : 4
pointer for the -> output : 1
pointer for the -> sake : 1
for the argument -> to : 1
for the argument -> and : 2
argument to let -> allocate : 1
to let allocate -> the : 1
let allocate the -> buffer : 1
allocate the buffer -> will : 1
the buffer will -> be : 1
buffer will be -> freed : 1
will be freed -> when : 1
will be freed -> draw : 1
be freed when -> the : 1
freed when the -> file : 1
freed when the -> owning : 1
when the file -> is : 2
file is closed -> or : 1
file is closed -> by : 1
is closed or -> is : 1
closed or is -> called : 1
called to change -> the : 1
change the before -> performing : 1
the before performing -> any : 1
before performing any -> on : 1
performing any on -> type : 1
performing any on -> a : 1
any on type -> size : 1
on type size -> with : 1
type size with -> no : 5
size with no -> type : 6
is in function -> writes : 2
is in function -> converts : 2
is in function -> sets : 1
is in function -> concatenates : 1
is in function -> compares : 4
is in function -> counts : 3
is in function -> locates : 2
is in function -> extracts : 1
is in function -> formats : 1
is in function -> reads : 1
is in function -> searches : 1
is in function -> determines : 1
writes formatted data -> to : 4
formatted data to -> a : 4
data to a -> const : 1
data to a -> int : 1
data to a -> wide : 2
to a const -> function : 1
const function is -> like : 4
const function is -> similar : 6
const function is -> a : 2
is like but -> instead : 2
is like but -> the : 3
like but instead -> of : 2
but instead of -> writing : 1
but instead of -> reading : 1
instead of writing -> to : 1
of writing to -> an : 1
of writing to -> a : 1
of writing to -> any : 1
writing to an -> open : 1
to an open -> it : 1
open it by -> copying : 1
it by copying -> characters : 1
by copying characters -> to : 1
copying characters to -> the : 1
the string see -> for : 2
string see for -> a : 2
of the must -> ensure : 1
the must ensure -> that : 1
large enough for -> the : 1
enough for the -> formatted : 1
for the formatted -> for : 1
for the formatted -> functions : 1
the formatted for -> some : 1
formatted for some -> this : 1
for some this -> is : 1
some this is -> which : 1
this is which -> makes : 1
is which makes -> unsafe : 1
which makes unsafe -> to : 1
makes unsafe to -> in : 1
unsafe to in -> function : 1
reads formatted data -> from : 2
formatted data from -> a : 2
data from a -> const : 1
data from a -> wide : 1
from a const -> function : 1
instead of reading -> from : 1
of reading from -> an : 1
of reading from -> a : 1
from an open -> it : 1
open it characters -> from : 1
it characters from -> the : 1
from the string -> see : 1
from the string -> to : 1
from the string -> stream : 2
from the string -> with : 1
in macro standard -> error : 1
in macro standard -> input : 1
in macro standard -> output : 1
macro standard error -> macro : 1
standard error macro -> is : 1
error macro is -> a : 1
a standard suitable -> for : 1
standard suitable for -> printing : 1
suitable for printing -> error : 1
for printing error -> its : 1
printing error its -> buffering : 1
error its buffering -> is : 1
its buffering is -> either : 1
buffering is either -> unbuffered : 1
is either unbuffered -> or : 1
either unbuffered or -> line : 1
unbuffered or line -> in : 1
or line in -> in : 1
line in in -> macro : 1
in in macro -> standard : 1
in in macro -> null : 1
in in macro -> or : 1
macro standard input -> macro : 1
standard input macro -> is : 1
input macro is -> a : 1
a standard file -> used : 2
standard file used -> for : 1
standard file used -> to : 1
file used for -> reading : 1
used for reading -> from : 1
reading from the -> standard : 1
reading from the -> class : 1
the standard input -> is : 2
standard input is -> fully : 1
standard input is -> not : 1
input is fully -> buffered : 1
is fully buffered -> if : 2
fully buffered if -> the : 2
buffered if the -> standard : 2
if the standard -> input : 1
if the standard -> output : 1
input is not -> an : 1
input is not -> buffered : 2
not an interactive -> in : 2
an interactive in -> macro : 2
interactive in macro -> standard : 1
interactive in macro -> size : 1
macro standard output -> macro : 1
standard output macro -> is : 1
output macro is -> a : 1
file used to -> print : 1
used to print -> to : 1
to print to -> the : 1
print to the -> standard : 1
the standard output -> is : 2
standard output is -> fully : 1
standard output is -> not : 1
output is fully -> buffered : 1
output is not -> an : 1
in macro size -> of : 1
macro size of -> temporary : 1
size of temporary -> macro : 1
of temporary macro -> is : 1
temporary macro is -> the : 1
number of unique -> names : 1
of unique names -> the : 1
unique names the -> function : 1
names the function -> function : 1
function function opens -> a : 1
opens a temporary -> function : 1
a temporary function -> generates : 2
temporary function generates -> a : 2
function generates a -> unique : 2
function generates a -> function : 1
generates a unique -> filename : 2
a unique filename -> and : 2
unique filename and -> opens : 1
unique filename and -> returns : 1
filename and opens -> a : 1
and opens a -> file : 1
file with that -> name : 1
with that name -> using : 1
that name using -> mode : 1
name using mode -> when : 1
using mode when -> the : 1
mode when the -> program : 1
program terminates the -> file : 1
terminates the file -> is : 1
file is automatically -> if : 1
is automatically if -> the : 1
automatically if the -> temporary : 1
if the temporary -> file : 1
the temporary file -> cannot : 1
temporary file cannot -> be : 1
file cannot be -> a : 1
pointer is function -> returns : 1
pointer is function -> extracts : 1
is function returns -> a : 1
is function returns -> true : 8
returns a temporary -> function : 1
returns a temporary -> string : 1
returns a temporary -> or : 1
filename and returns -> a : 1
pointer to that -> if : 1
pointer to that -> buffer : 1
to that if -> the : 1
if the parameter -> is : 1
parameter is not -> it : 1
is not it -> must : 1
is not it -> runs : 1
is not it -> is : 1
not it must -> point : 1
it must point -> to : 1
array of at -> least : 1
of at least -> the : 1
least the new -> filename : 1
the new filename -> is : 1
new filename is -> copied : 1
filename is copied -> into : 1
copied into that -> and : 1
into that and -> is : 1
that and is -> if : 1
and is if -> is : 1
and is if -> the : 1
a static character -> array : 1
static character array -> is : 1
character array is -> the : 1
character array is -> not : 1
character array is -> so : 1
character array is -> extended : 1
is the contents -> of : 2
array are overwritten -> each : 1
are overwritten each -> time : 1
overwritten each time -> is : 1
time is function -> has : 1
is function has -> a : 1
is function has -> limited : 1
has a race -> after : 1
a race after -> it : 1
race after it -> generates : 1
after it generates -> a : 1
it generates a -> but : 1
generates a but -> before : 1
a but before -> the : 1
before the file -> is : 1
file is actually -> another : 1
is actually another -> program : 1
actually another program -> might : 1
another program might -> generate : 1
program might generate -> the : 1
might generate the -> same : 1
generate the same -> use : 1
the same use -> instead : 1
same use instead -> of : 1
of to ensure -> that : 1
that the file -> is : 1
file is thereby -> ensuring : 1
is thereby ensuring -> that : 1
ensuring that its -> name : 1
that its name -> is : 1
name is function -> pushes : 1
is function pushes -> a : 1
function pushes a -> character : 1
pushes a character -> back : 1
a character back -> for : 1
character back for -> reading : 1
back for reading -> function : 1
for reading function -> pushes : 1
reading function pushes -> back : 1
function pushes back -> the : 2
function pushes back -> a : 1
pushes back the -> character : 1
pushes back the -> wide : 1
back the character -> must : 1
back the character -> so : 3
back the character -> that : 1
be an so -> the : 1
an so the -> next : 1
the next read -> from : 2
the next read -> will : 1
next read from -> will : 2
read from will -> return : 2
from will return -> the : 2
will return the -> standard : 2
return the standard -> guarantees : 2
the standard guarantees -> that : 2
standard guarantees that -> you : 2
guarantees that you -> can : 2
can push back -> just : 2
push back just -> one : 2
back just one -> though : 2
just one though -> in : 2
one though in -> some : 2
though in some -> you : 1
though in some -> situations : 1
in some you -> may : 1
some you may -> be : 1
you may be -> able : 2
may be able -> to : 2
able to push -> back : 2
to push back -> return : 3
to push back -> the : 4
to push back -> onto : 2
to push back -> a : 1
push back return -> value : 3
back return value -> is : 3
success or for -> an : 1
success or for -> to : 1
success or for -> the : 1
success or for -> if : 2
an in function -> writes : 3
an in function -> reads : 1
writes formatted int -> const : 1
writes formatted int -> function : 1
formatted int const -> function : 1
int const function -> is : 2
int const function -> uses : 1
int const function -> sorts : 1
like but the -> values : 3
the values to -> print : 3
values to print -> are : 3
to print are -> taken : 3
print are taken -> from : 3
taken from successive -> arguments : 3
from successive arguments -> in : 3
successive arguments in -> by : 3
arguments in by -> calling : 3
in by calling -> use : 3
by calling use -> to : 3
calling use to -> write : 3
use to write -> your : 3
your own following -> shows : 1
your own following -> are : 1
own following shows -> how : 1
following shows how -> you : 1
shows how you -> can : 1
how you can -> implement : 1
can implement in -> terms : 1
implement in terms -> of : 1
terms of const -> int : 1
const int result -> return : 1
int result return -> in : 1
result return in -> function : 1
return in function -> writes : 1
formatted int function -> is : 1
int function is -> like : 1
your own in -> function : 1
your own in -> header : 1
own in function -> writes : 1
to a int -> const : 1
own in header -> is : 1
which declares and -> functions : 1
and functions of -> general : 1
functions of general -> several : 1
of general several -> functions : 1
general several functions -> in : 1
several functions in -> convert : 1
functions in convert -> character : 1
in convert character -> arrays : 1
convert character arrays -> to : 1
character arrays to -> you : 1
arrays to you -> can : 1
string stream if -> you : 1
stream if you -> want : 1
stream if you -> must : 1
over the or -> if : 1
to convert a -> number : 1
to convert a -> stream : 1
to convert a -> value : 1
convert a number -> to : 1
to a multibyte -> functions : 1
to a multibyte -> function : 2
to a multibyte -> it : 2
to a multibyte -> const : 2
a multibyte functions -> have : 1
multibyte functions have -> counterparts : 1
functions have counterparts -> in : 1
have counterparts in -> that : 1
counterparts in that -> are : 1
in that are -> that : 1
that are that -> the : 1
that the functions -> take : 1
that the functions -> do : 1
functions take an -> explicit : 1
functions take an -> parameter : 1
take an explicit -> parameter : 1
an explicit parameter -> to : 1
explicit parameter to -> avoid : 1
parameter to avoid -> using : 1
avoid using an -> static : 1
using an static -> shift : 1
an static shift -> function : 1
static shift function -> terminates : 1
shift function terminates -> the : 1
function terminates the -> program : 3
terminates the program -> function : 1
terminates the program -> with : 1
terminates the program -> automatic : 1
the program function -> raises : 1
program function raises -> the : 1
function raises the -> unless : 1
raises the unless -> the : 1
unless the program -> has : 1
the program has -> registered : 1
program has registered -> a : 1
has registered a -> handler : 1
registered a handler -> for : 1
a handler for -> the : 1
handler for the -> default : 1
the default action -> is : 1
default action is -> to : 1
action is to -> terminate : 1
is to terminate -> the : 1
terminate the program -> without : 1
terminate the program -> normally : 2
the program without -> destroying : 1
program without destroying -> any : 1
without destroying any -> automatic : 1
destroying any automatic -> or : 1
any automatic or -> static : 1
automatic or static -> objects : 1
or static objects -> and : 1
static objects and -> without : 1
static objects and -> objects : 1
objects and without -> calling : 1
and without calling -> any : 1
without calling any -> in : 1
without calling any -> wide : 1
without calling any -> functions : 1
calling any in -> in : 1
any in in -> function : 1
computes an absolute -> long : 1
an absolute long -> function : 1
absolute long function -> returns : 1
long function returns -> the : 1
header declares versions -> of : 1
declares versions of -> the : 1
in function calls -> a : 1
function calls a -> function : 1
a function at -> program : 1
function at program -> int : 1
at program int -> extern : 1
program int extern -> int : 1
int extern int -> function : 1
extern int function -> registers : 1
int function registers -> a : 1
function registers a -> parameterless : 1
registers a parameterless -> which : 1
a parameterless which -> is : 1
parameterless which is -> called : 1
called when the -> program : 1
the program exits -> functions : 1
the program exits -> due : 1
program exits functions -> can : 1
exits functions can -> be : 1
be and registered -> functions : 1
and registered functions -> are : 1
registered functions are -> called : 1
order of a -> function : 1
can be registered -> more : 1
be registered more -> than : 1
registered more than -> in : 1
more than in -> which : 1
than in which -> case : 1
case it will -> be : 1
it will be -> called : 1
it will be -> the : 2
it will be -> written : 1
it will be -> freed : 1
will be called -> as : 1
be called as -> many : 1
called as many -> times : 1
times as it -> was : 1
as it was -> functions : 1
it was functions -> are : 1
was functions are -> not : 1
are not called -> if : 1
not called if -> the : 1
called if the -> program : 1
program exits due -> to : 1
exits due to -> a : 1
due to a -> such : 1
to a such -> as : 1
as function converts -> a : 1
converts a string -> to : 6
string to floating -> function : 1
to floating function -> reads : 1
floating function reads -> a : 1
reads a number -> from : 1
number from the -> character : 1
character array and -> returns : 3
array and returns -> the : 4
array and returns -> if : 1
the the conversion -> is : 2
conversion is similar -> to : 2
similar to calling -> function : 2
similar to calling -> in : 5
to calling function -> converts : 2
to calling function -> performs : 1
calling function converts -> a : 2
string to an -> function : 1
string to an -> unsigned : 1
string to an -> output : 1
to an function -> reads : 1
an function reads -> an : 1
function reads an -> integer : 2
reads an integer -> from : 2
integer from the -> character : 2
string to a -> long : 3
string to a -> wide : 3
string to a -> multibyte : 2
string to a -> string : 2
to a long -> function : 1
to a long -> int : 2
to a long -> the : 1
to a long -> if : 1
to a long -> integer : 1
a long function -> reads : 1
long function reads -> an : 1
calling function performs -> a : 1
performs a binary -> const : 1
a binary const -> int : 1
binary const int -> const : 1
int const extern -> const : 1
int const extern -> void : 1
const extern const -> int : 1
extern const int -> const : 1
const function uses -> a : 1
function uses a -> binary : 1
function uses a -> format : 1
search to search -> for : 1
search for in -> the : 1
array in which -> each : 1
which each element -> takes : 1
which each element -> is : 1
each element takes -> up : 1
element takes up -> there : 1
takes up there -> are : 1
up there are -> elements : 1
there are elements -> in : 1
are elements in -> the : 1
called with as -> the : 1
a pointer into -> the : 2
pointer into the -> array : 2
into the array -> as : 1
into the array -> and : 1
into the array -> to : 1
into the array -> that : 1
the array as -> the : 1
the array as -> they : 1
array as the -> the : 1
as the the -> function : 1
as the the -> declared : 1
function should return -> an : 1
should return an -> integer : 1
return an integer -> less : 1
an integer less -> than : 1
integer less than -> zero : 1
less than zero -> if : 1
than zero if -> the : 2
zero if the -> key : 2
if the key -> is : 5
the key is -> less : 1
the key is -> or : 1
the key is -> the : 1
the key is -> already : 2
key is less -> than : 1
than the array -> greater : 1
the array greater -> than : 1
array greater than -> zero : 1
key is or -> if : 1
key is the -> same : 1
as the array -> function : 1
the array function -> returns : 1
array function returns -> a : 1
to the array -> element : 3
to the array -> names : 1
the array element -> that : 1
the array element -> is : 2
array element that -> matches : 1
element that matches -> or : 1
that matches or -> a : 1
matches or a -> null : 1
pointer if no -> element : 1
if no element -> versions : 1
no element versions -> of : 1
element versions of -> are : 1
versions of are -> declared : 2
of are declared -> so : 2
are declared so -> the : 2
declared so the -> function : 2
have linkage or -> in : 2
linkage or in -> function : 2
in function allocates -> function : 1
function allocates function -> allocates : 2
allocates function allocates -> each : 1
allocates function allocates -> bytes : 1
function allocates each -> of : 1
allocates each of -> and : 1
each of and -> initializes : 1
of and initializes -> the : 1
and initializes the -> allocated : 1
initializes the allocated -> memory : 1
allocated memory to -> all : 1
memory to all -> it : 1
all it returns -> a : 1
of the newly -> allocated : 2
newly allocated memory -> or : 2
newly allocated memory -> and : 1
allocated memory or -> a : 2
memory or a -> null : 2
pointer if there -> is : 3
there is insufficient -> memory : 6
is insufficient memory -> to : 3
is insufficient memory -> for : 3
insufficient memory to -> fulfill : 3
memory to fulfill -> the : 3
to fulfill the -> the : 3
fulfill the the -> pointer : 2
fulfill the the -> original : 1
the the pointer -> is : 2
the the pointer -> must : 1
the the pointer -> points : 2
the the pointer -> becomes : 1
pointer is suitably -> aligned : 3
is suitably aligned -> for : 3
suitably aligned for -> any : 3
for any programs -> should : 2
any programs should -> use : 2
programs should use -> the : 2
use the operator -> instead : 2
the operator instead -> of : 2
operator instead of -> calling : 2
of calling call -> or : 1
calling call or -> to : 1
call or to -> fill : 1
or to fill -> the : 1
fill the allocated -> memory : 1
allocated memory with -> in : 1
memory with in -> in : 1
with in in -> function : 1
function computes quotient -> and : 2
computes quotient and -> int : 1
computes quotient and -> long : 1
quotient and int -> long : 1
and int long -> function : 1
int long function -> divides : 1
long function divides -> by : 2
function divides by -> and : 2
divides by and -> returns : 2
by and returns -> the : 2
quotient and the -> remainder : 1
and the remainder -> in : 1
the remainder in -> a : 1
a type quotient -> and : 2
type quotient and -> remainder : 2
and remainder int -> type : 1
remainder int type -> is : 1
int type is -> used : 1
type is used -> only : 2
used only by -> the : 1
by the function -> to : 1
by the function -> is : 1
return the quotient -> and : 1
and remainder of -> an : 1
and remainder of -> a : 1
remainder of an -> integer : 1
an integer the -> order : 1
an integer the -> index : 1
integer the order -> of : 1
and members in -> the : 1
in the structure -> may : 1
the structure may -> vary : 1
structure may vary -> between : 1
may vary between -> function : 1
vary between function -> terminates : 1
between function terminates -> the : 1
the program with -> no : 1
program with no -> function : 1
no function terminates -> the : 1
the program automatic -> objects : 1
program automatic objects -> are : 1
automatic objects are -> not : 1
not but static -> objects : 1
but static objects -> all : 1
static objects all -> functions : 1
objects all functions -> registered : 1
all functions registered -> with : 1
functions registered with -> are : 1
registered with are -> called : 1
with are called -> in : 1
the is returned -> to : 1
to the operating -> an : 1
to the operating -> other : 1
the operating an -> exit : 1
operating an exit -> code : 1
an exit code -> of : 1
exit code of -> or : 1
code of or -> means : 1
of or means -> successful : 1
or means successful -> if : 1
means successful if -> code : 1
successful if code -> is : 1
if code is -> an : 1
code is an -> indication : 1
is an indication -> of : 1
an indication of -> program : 1
indication of program -> failure : 1
of program failure -> is : 1
program failure is -> returned : 1
failure is returned -> to : 1
the operating other -> values : 1
operating other values -> of : 1
other values of -> are : 1
values of are -> macro : 1
of are macro -> exit : 1
are macro exit -> status : 1
macro exit status -> for : 2
exit status for -> unsuccessful : 1
exit status for -> successful : 1
status for unsuccessful -> to : 1
for unsuccessful to -> to : 1
unsuccessful to to -> terminate : 1
to to terminate -> the : 2
the program normally -> and : 2
program normally and -> informs : 1
program normally and -> inform : 1
normally and informs -> the : 1
and informs the -> operating : 1
informs the operating -> system : 1
the operating system -> that : 2
the operating system -> for : 1
operating system that -> the : 2
system that the -> program : 2
program was returning -> from : 2
was returning from -> is : 2
returning from is -> the : 2
from is the -> same : 2
from is the -> input : 1
calling the macro -> expands : 1
expands to an -> integer : 3
an integer macro -> exit : 1
integer macro exit -> status : 1
status for successful -> to : 1
for successful to -> to : 1
successful to to -> terminate : 1
normally and inform -> the : 1
and inform the -> operating : 1
inform the operating -> system : 1
as calling value -> also : 1
calling value also -> means : 1
value also means -> but : 1
also means but -> is : 1
means but is -> not : 1
not necessarily equal -> to : 1
necessarily equal to -> the : 1
an integer function -> releases : 1
an integer function -> reallocates : 1
integer function releases -> allocated : 1
function releases allocated -> function : 1
releases allocated function -> releases : 1
allocated function releases -> the : 1
function releases the -> memory : 1
releases the memory -> that : 1
points the pointer -> must : 1
the pointer must -> have : 1
the pointer must -> be : 1
been returned by -> a : 2
to or after -> freeing : 1
or after freeing -> the : 1
after freeing the -> do : 1
freeing the do -> not : 1
the do not -> refer : 1
do not refer -> to : 1
the memory function -> gets : 1
memory function gets -> environment : 1
function gets environment -> with : 1
gets environment with -> no : 1
environment with no -> function : 1
no function obtains -> the : 1
function obtains the -> value : 1
obtains the value -> of : 1
of an environment -> the : 1
an environment the -> environment : 1
environment the environment -> is : 1
the environment is -> a : 1
environment is a -> list : 1
the function searches -> the : 1
function searches the -> environment : 1
function searches the -> memory : 2
searches the environment -> for : 1
the environment for -> and : 1
environment for and -> returns : 1
for and returns -> the : 1
returns the associated -> the : 1
the associated the -> function : 1
associated the function -> returns : 1
if the specified -> name : 1
the specified name -> is : 1
specified name is -> not : 1
is not function -> computes : 1
is not function -> function : 2
not function computes -> absolute : 1
computes absolute function -> returns : 1
computes absolute function -> computes : 1
absolute function returns -> the : 1
quotient and long -> function : 1
and long function -> divides : 1
and remainder long -> type : 1
remainder long type -> is : 1
long type is -> used : 1
only as the -> return : 1
return type for -> the : 1
and the overloaded -> it : 1
the overloaded it -> stores : 1
overloaded it stores -> the : 1
it stores the -> quotient : 1
it stores the -> formatted : 1
stores the quotient -> and : 1
remainder of a -> long : 1
of a long -> integer : 1
long integer function -> allocates : 1
integer function allocates -> function : 1
function allocates bytes -> of : 1
allocates bytes of -> it : 1
bytes of it -> returns : 1
of it returns -> a : 1
of calling function -> maximum : 1
calling function maximum -> size : 1
function maximum size -> of : 1
a multibyte macro -> is : 1
multibyte macro is -> the : 1
of bytes required -> to : 1
bytes required to -> represent : 1
required to represent -> a : 1
represent a multibyte -> character : 1
multibyte character in -> the : 1
multibyte character in -> is : 1
in the extended -> character : 5
the extended character -> in : 3
the extended character -> set : 2
extended character in -> any : 1
extended character in -> macro : 1
extended character in -> function : 1
in any in -> function : 1
any in function -> returns : 1
function returns number -> of : 1
returns number of -> bytes : 1
returns number of -> digits : 1
a multibyte function -> returns : 1
a multibyte function -> converts : 2
a multibyte function -> counts : 1
multibyte function returns -> the : 1
returns the length -> of : 2
of the multibyte -> character : 1
of the multibyte -> functions : 2
of the multibyte -> is : 1
the multibyte character -> pointed : 1
the multibyte character -> is : 3
the multibyte character -> represents : 2
the multibyte character -> sequences : 1
multibyte character pointed -> to : 1
character pointed to -> by : 1
by the character -> array : 1
character array can -> be : 1
character array can -> no : 1
array can be -> it : 1
it can point -> to : 1
to an empty -> or : 1
to an empty -> is : 2
to an empty -> vector : 1
an empty or -> it : 1
empty or it -> must : 1
must have at -> least : 1
must have at -> most : 1
at least which -> must : 1
at least which -> is : 1
least which must -> form : 1
which must form -> a : 1
must form a -> valid : 1
form a valid -> multibyte : 1
a valid multibyte -> is : 5
a valid multibyte -> the : 2
a valid multibyte -> or : 1
a valid multibyte -> that : 1
valid multibyte is -> the : 1
valid multibyte is -> is : 2
valid multibyte is -> too : 2
multibyte is the -> return : 3
on whether multibyte -> characters : 2
whether multibyte characters -> have : 2
multibyte characters have -> for : 2
multibyte characters have -> or : 1
characters have for -> a : 2
have for a -> discussion : 2
discussion of shift -> the : 2
of shift the -> function : 2
shift the function -> returns : 2
a nonzero value -> if : 2
nonzero value if -> encodings : 2
value if encodings -> are : 2
if encodings are -> or : 2
if encodings are -> not : 2
encodings are or -> if : 2
are or if -> encodings : 2
or if encodings -> are : 2
encodings are not -> points : 2
are not points -> to : 2
not points to -> an : 2
an empty is -> points : 2
empty is points -> to : 2
is points to -> a : 2
is points to -> the : 3
to a valid -> multibyte : 5
to a valid -> with : 2
to a valid -> element : 1
valid multibyte the -> number : 2
multibyte the number -> of : 2
of bytes that -> make : 2
of bytes that -> come : 1
bytes that make -> up : 2
make up that -> character : 2
up that character -> is : 2
that character is -> if : 2
that character is -> converted : 1
character is if -> points : 1
character is if -> is : 1
character is if -> the : 1
is if points -> to : 1
to an invalid -> multibyte : 2
an invalid multibyte -> is : 2
invalid multibyte is -> in : 2
multibyte is in -> function : 1
multibyte is in -> macro : 1
in function converts -> multibyte : 2
in function converts -> a : 11
function converts multibyte -> string : 1
function converts multibyte -> character : 1
converts multibyte string -> to : 1
multibyte string to -> wide : 1
multibyte string to -> a : 3
string to wide -> const : 1
to wide const -> function : 2
wide const function -> converts : 3
wide const function -> is : 4
wide const function -> concatenates : 2
wide const function -> compares : 3
wide const function -> copies : 4
const function converts -> a : 5
const function converts -> the : 2
converts a multibyte -> string : 3
converts a multibyte -> character : 4
wide character the -> parameter : 2
wide character the -> return : 2
wide character the -> category : 1
character the parameter -> points : 1
character the parameter -> indirectly : 1
the parameter points -> to : 1
the parameter points -> indirectly : 1
parameter points to -> the : 6
to the multibyte -> up : 1
to the multibyte -> that : 1
to the multibyte -> function : 1
to the multibyte -> macro : 1
the multibyte up -> to : 1
multibyte up to -> wide : 1
up to wide -> characters : 2
characters are stored -> in : 4
characters are stored -> and : 2
stored in if -> fewer : 3
stored in if -> any : 1
stored in if -> no : 1
stored in if -> the : 4
in if fewer -> than : 3
if fewer than -> characters : 2
if fewer than -> bytes : 1
fewer than characters -> are : 2
than characters are -> a : 2
than characters are -> read : 1
characters are a -> null : 1
characters are a -> trailing : 1
are a null -> wide : 1
are a null -> character : 1
a null wide -> character : 2
null wide character -> is : 2
null wide character -> using : 1
null wide character -> in : 1
character is appended -> to : 4
is appended to -> the : 7
is appended to -> any : 1
is appended to -> it : 1
appended to the -> wide : 2
appended to the -> end : 9
appended to the -> narrow : 1
appended to the -> return : 2
appended to the -> buffer : 1
appended to the -> output : 1
appended to the -> the : 2
appended to the -> reading : 1
appended to the -> character : 1
to the wide -> character : 2
the wide character -> return : 1
the wide character -> is : 1
the wide character -> if : 1
the wide character -> the : 3
the wide character -> so : 1
the wide character -> has : 1
the wide character -> whose : 1
the wide character -> according : 1
the wide character -> to : 2
wide character return -> value : 1
character return value -> is : 1
number of wide -> characters : 7
wide characters stored -> in : 1
characters stored in -> if : 1
characters stored in -> to : 1
characters stored in -> the : 1
if any multibyte -> character : 2
any multibyte character -> in : 1
any multibyte character -> is : 1
character in is -> not : 1
character in is -> replaced : 2
in is not -> the : 1
converts multibyte character -> to : 1
multibyte character to -> wide : 1
multibyte character to -> a : 3
character to wide -> const : 1
multibyte character sequence -> to : 1
single wide it -> starts : 1
wide it starts -> by : 1
starts by counting -> the : 1
bytes in that -> make : 1
in that make -> up : 1
make up the -> first : 1
up the first -> multibyte : 1
the first multibyte -> it : 1
first multibyte it -> examines : 1
multibyte it examines -> only : 1
it examines only -> the : 1
examines only the -> first : 1
not the multibyte -> character : 1
multibyte character is -> converted : 1
multibyte character is -> in : 2
multibyte character is -> not : 1
character is converted -> to : 3
converted to its -> equivalent : 1
to its equivalent -> wide : 1
to its equivalent -> character : 1
to its equivalent -> integer : 1
its equivalent wide -> and : 1
equivalent wide and -> the : 1
wide and the -> wide : 1
wide and the -> is : 1
wide and the -> string : 1
wide and the -> parameter : 4
and the wide -> character : 1
character is stored -> in : 2
stored in points -> to : 1
in points to -> an : 1
is in macro -> null : 2
in macro null -> pointer : 3
in function sorts -> an : 1
function sorts an -> void : 1
sorts an void -> int : 1
an void int -> const : 1
const extern void -> int : 1
extern void int -> const : 1
const function sorts -> in : 1
function sorts in -> ascending : 1
sorts in ascending -> order : 1
ascending order an -> array : 1
order an array -> of : 1
array of each -> of : 2
each of size -> in : 1
of size in -> which : 2
size in which -> is : 1
size in which -> each : 1
first the array -> must : 1
the array must -> have : 1
the array must -> be : 3
array must have -> pod : 1
have pod the -> sort : 1
pod the sort -> is : 1
not that the -> relative : 1
that the relative -> order : 1
order of identical -> elements : 1
identical elements is -> not : 1
not necessarily function -> takes : 1
necessarily function takes -> two : 1
takes two pointers -> into : 1
two pointers into -> the : 1
pointers into the -> array : 1
array and compares -> the : 1
and compares the -> it : 1
compares the it -> returns : 1
the it returns -> an : 1
returns an negative -> if : 1
an negative if -> the : 1
negative if the -> first : 1
first element is -> less : 1
element is less -> than : 1
than the positive -> if : 1
the positive if -> the : 1
positive if the -> first : 1
first is greater -> than : 1
than the or -> if : 1
the two elements -> are : 1
two elements are -> name : 1
elements are name -> derives : 1
are name derives -> from : 1
name derives from -> the : 1
from the original -> which : 1
the original which -> used : 1
original which used -> the : 1
which used the -> quick : 1
used the quick -> sort : 1
the quick sort -> the : 1
quick sort the -> current : 1
sort the current -> standard : 1
the current standard -> does : 1
current standard does -> not : 1
not specify which -> sort : 1
specify which sort -> algorithm : 1
which sort algorithm -> is : 1
sort algorithm is -> nor : 1
algorithm is nor -> does : 1
is nor does -> it : 1
nor does it -> specify : 1
does it specify -> any : 1
it specify any -> performance : 1
specify any performance -> characteristics : 1
any performance characteristics -> of : 1
performance characteristics of -> the : 1
characteristics of the -> sort : 1
characteristics of the -> fundamental : 1
of the sort -> versions : 1
the sort versions -> of : 1
sort versions of -> are : 1
in function generates -> a : 1
generates a function -> returns : 1
a function returns -> a : 1
a function returns -> the : 1
a function returns -> true : 1
returns a integer -> in : 1
a integer in -> the : 2
a integer in -> current : 1
integer in the -> range : 1
integer in the -> current : 1
range to macro -> maximum : 1
macro maximum value -> returned : 1
maximum value returned -> by : 1
returned by is -> the : 1
maximum value that -> can : 2
that can the -> macro : 1
can the macro -> expands : 1
integer function reallocates -> function : 1
function reallocates function -> changes : 1
reallocates function changes -> the : 1
function changes the -> size : 1
function changes the -> void : 2
changes the size -> of : 1
of the allocated -> memory : 2
allocated memory that -> points : 1
points the new -> size : 1
the new size -> is : 5
new size is -> the : 1
new size is -> larger : 1
new size is -> smaller : 3
the newly resized -> memory : 1
newly resized memory -> which : 1
resized memory which -> might : 1
memory which might -> be : 1
might be at -> a : 1
be at a -> different : 1
at a different -> address : 1
a different address -> than : 1
different address than -> the : 1
address than the -> original : 1
than the original -> the : 1
original the pointer -> is : 1
for any contents -> of : 1
any contents of -> the : 1
of the original -> memory : 1
of the original -> if : 1
of the original -> a : 1
the original memory -> are : 1
the original memory -> is : 1
original memory are -> up : 1
memory are up -> to : 1
are up to -> the : 1
to the smaller -> of : 1
smaller of the -> new : 1
the new and -> old : 1
the new and -> the : 1
new and old -> if : 1
and old if -> the : 1
old if the -> new : 1
if the new -> size : 4
if the new -> position : 1
if the new -> locale : 1
if the new -> handler : 1
if the new -> string : 2
size is larger -> than : 1
than the old -> the : 1
the old the -> extra : 1
old the extra -> memory : 1
the extra memory -> above : 1
extra memory above -> the : 1
memory above the -> old : 1
above the old -> size : 1
the old size -> is : 1
old size is -> memory : 1
size is memory -> might : 1
is memory might -> be : 1
memory might be -> so : 1
might be so -> you : 1
be so you -> can : 1
store only pod -> values : 1
only pod values -> in : 1
pod values in -> the : 1
in the memory -> that : 1
in the memory -> it : 1
memory that you -> reallocate : 1
that you reallocate -> with : 1
you reallocate with -> is : 1
reallocate with is -> behaves : 1
with is behaves -> just : 1
is behaves just -> like : 1
behaves just like -> if : 1
behaves just like -> the : 1
just like if -> is : 1
like if is -> is : 1
is is like -> and : 1
is like and -> frees : 1
like and frees -> there : 1
and frees there -> is : 1
frees there is -> insufficient : 1
original memory is -> and : 1
memory is and -> a : 1
is and a -> null : 1
is and a -> putback : 2
and a null -> pointer : 1
pointer is type -> size : 1
is type size -> with : 1
in function sets -> seed : 1
in function sets -> conversion : 1
in function sets -> specified : 1
in function sets -> function : 1
in function sets -> field : 1
function sets seed -> for : 1
sets seed for -> number : 1
seed for number -> int : 1
for number int -> function : 1
number int function -> saves : 1
int function saves -> as : 1
function saves as -> the : 1
saves as the -> seed : 1
saves as the -> new : 1
as the seed -> for : 1
the seed for -> a : 1
seed for a -> new : 1
for a new -> sequence : 1
for a new -> the : 3
a new sequence -> of : 1
new sequence of -> numbers : 1
sequence of numbers -> to : 1
of numbers to -> be : 1
numbers to be -> returned : 1
to be returned -> by : 1
be returned by -> successive : 1
returned by successive -> calls : 1
by successive calls -> to : 1
successive calls to -> the : 1
successive calls to -> when : 1
calls to the -> default : 1
calls to the -> multibyte : 1
calls to the -> previous : 2
calls to the -> especially : 1
calls to the -> some : 1
calls to the -> function : 1
the default seed -> is : 1
default seed is -> function : 1
seed is function -> converts : 1
is function converts -> a : 2
string to function -> converts : 2
string is divided -> into : 3
divided into three -> optional : 3
into three optional -> the : 3
three optional the -> text : 3
optional the text -> of : 3
a trailing which -> starts : 3
trailing which starts -> with : 3
which starts with -> the : 3
first character that -> cannot : 3
first character that -> is : 1
first character that -> matches : 2
first character that -> does : 2
character that cannot -> be : 3
cannot be part -> of : 3
part is and -> the : 3
second part is -> converted : 3
second part is -> is : 3
part is converted -> to : 3
part is is -> if : 3
is is if -> is : 4
not is assigned -> a : 3
is assigned a -> pointer : 5
is assigned a -> match : 1
assigned a pointer -> to : 5
the third part -> of : 3
the third part -> is : 3
third part of -> if : 3
third part is -> points : 3
part is points -> to : 3
to the terminating -> null : 3
the terminating null -> the : 1
the terminating null -> is : 2
the terminating null -> wide : 2
the terminating null -> in : 1
terminating null the -> result : 2
terminating null the -> return : 1
terminating null the -> pointer : 1
the result would -> cause : 1
result would cause -> positive : 1
would cause positive -> or : 1
cause positive or -> negative : 1
positive or negative -> is : 1
or negative is -> and : 1
negative is and -> is : 1
set to if -> the : 3
set to if -> is : 2
the result causes -> is : 1
result causes is -> and : 1
causes is and -> is : 1
set to in -> function : 3
a long int -> int : 1
a long int -> function : 1
int function converts -> a : 4
a long the -> string : 1
long the string -> is : 2
the integer and -> a : 2
the integer and -> the : 1
integer and a -> trailing : 2
a long if -> the : 1
long if the -> second : 2
terminating null is -> the : 2
null is the -> base : 2
the base is -> determined : 2
base is determined -> from : 2
is determined from -> the : 3
determined from the -> prefix : 2
determined from the -> the : 1
from the prefix -> of : 2
the prefix of -> the : 2
the integer a -> leading : 2
integer a leading -> or : 2
leading or means -> a : 2
or means a -> leading : 2
means a leading -> means : 2
a leading means -> and : 2
leading means and -> anything : 2
means and anything -> else : 2
else is must -> be : 2
is must be -> between : 2
must be between -> and : 2
be between and -> in : 2
between and in -> which : 2
which the letters -> either : 2
the letters either -> represent : 2
letters either represent -> digits : 2
either represent digits -> with : 2
represent digits with -> values : 2
digits with values -> of : 2
with values of -> only : 2
values of only -> letters : 2
of only letters -> that : 2
only letters that -> are : 2
letters that are -> appropriate : 2
appropriate for the -> base : 2
for the base -> are : 2
for the base -> the : 1
the base are -> that : 2
base are that -> the : 2
that the corresponding -> digit : 2
the corresponding digit -> value : 2
corresponding digit value -> must : 2
digit value must -> be : 2
must be less -> than : 2
than the the -> resulting : 2
the the resulting -> value : 2
resulting value is -> too : 2
value is too -> large : 2
too large or -> too : 1
large or too -> small : 1
or too small -> to : 1
small to fit -> in : 1
to fit in -> a : 1
to fit in -> an : 1
the value or -> is : 1
value or is -> and : 1
or is and -> is : 1
or is and -> the : 1
string to unsigned -> long : 1
to unsigned long -> int : 1
unsigned long int -> function : 1
long int function -> converts : 3
array to an -> unsigned : 1
to an unsigned -> long : 3
unsigned long the -> string : 1
unsigned long if -> the : 1
too large to -> fit : 1
large to fit -> in : 1
value is and -> is : 1
value is and -> returns : 1
in function runs -> a : 1
function runs a -> with : 1
runs a with -> no : 1
no function passes -> to : 1
function passes to -> the : 1
operating system to -> run : 1
system to run -> as : 1
to run as -> an : 1
run as an -> external : 1
as an external -> the : 1
an external the -> use : 1
an external the -> connection : 1
external the use -> and : 1
the use and -> interpretation : 1
use and interpretation -> of : 1
of the command -> string : 1
the command string -> is : 1
command string is -> return : 1
string is return -> value : 1
is is the -> return : 3
is is the -> difference : 1
is is the -> new : 1
is is the -> character : 1
is is the -> buffer : 1
value is true -> if : 2
true if a -> command : 1
if a command -> processor : 1
command processor is -> it : 1
command processor is -> function : 1
processor is it -> is : 1
it is false -> if : 1
is false if -> no : 1
false if no -> command : 1
if no command -> processor : 1
no command processor -> is : 1
processor is function -> converts : 1
converts a wide -> character : 7
converts a wide -> string : 10
multibyte function converts -> a : 2
a multibyte it -> first : 2
multibyte it first -> determines : 2
it first determines -> the : 2
first determines the -> number : 2
determines the number -> of : 2
of bytes needed -> to : 4
bytes needed to -> represent : 2
bytes needed to -> complete : 2
needed to represent -> as : 2
needed to represent -> a : 2
to represent as -> a : 2
represent as a -> multibyte : 2
a multibyte if -> is : 2
multibyte if is -> not : 2
not the sequence -> of : 2
the sequence of -> multibyte : 2
the sequence of -> the : 1
the sequence of -> characters : 5
sequence of multibyte -> characters : 2
sequence of multibyte -> when : 1
of multibyte characters -> is : 2
multibyte characters is -> stored : 2
characters is stored -> at : 2
is stored at -> bytes : 1
is stored at -> in : 1
stored at bytes -> are : 1
at bytes are -> and : 1
bytes are and -> the : 2
of bytes written -> to : 3
bytes written to -> if : 2
bytes written to -> counting : 1
written to if -> does : 2
to if does -> not : 2
have a valid -> multibyte : 2
multibyte is is -> the : 1
multibyte is is -> ignores : 1
true if multibyte -> characters : 1
if multibyte characters -> have : 1
characters have or -> false : 1
have or false -> if : 1
or false if -> they : 1
false if they -> do : 1
they do in -> function : 1
do in function -> converts : 1
wide string to -> a : 5
wide string to -> it : 4
wide string to -> the : 1
wide string to -> if : 1
wide string to -> function : 1
wide string to -> an : 1
a multibyte const -> function : 2
multibyte const function -> converts : 2
string of multibyte -> at : 1
string of multibyte -> the : 1
of multibyte at -> bytes : 1
multibyte at bytes -> of : 1
at bytes of -> are : 3
bytes of are -> written : 1
bytes of are -> parameter : 1
bytes of are -> if : 1
of are written -> if : 1
are written if -> the : 1
written if the -> conversion : 1
the conversion of -> requires : 1
conversion of requires -> fewer : 1
of requires fewer -> than : 1
requires fewer than -> a : 1
fewer than a -> trailing : 1
than a trailing -> null : 1
a trailing null -> byte : 1
a trailing null -> in : 1
a trailing null -> character : 2
trailing null byte -> is : 1
null byte is -> appended : 1
byte is appended -> to : 1
appended to any -> wide : 1
to any wide -> characters : 1
any wide characters -> cannot : 1
wide characters cannot -> be : 2
characters cannot be -> represented : 2
a multibyte is -> the : 2
written to counting -> a : 1
to counting a -> trailing : 1
counting a trailing -> null : 1
trailing null in -> header : 1
trailing null in -> in : 1
null in header -> is : 1
header is for -> the : 1
for the version -> of : 1
for the version -> described : 1
which declares functions -> in : 1
declares functions in -> this : 1
this section fall -> into : 1
section fall into -> two : 1
into two identified -> by : 1
two identified by -> the : 1
identified by the -> first : 1
identified by the -> new : 1
by the first -> three : 1
first three letters -> of : 1
three letters of -> the : 1
letters of the -> function : 1
the function functions -> operate : 1
function functions operate -> on : 1
functions operate on -> arbitrary : 1
functions operate on -> character : 1
operate on arbitrary -> chunks : 1
on arbitrary chunks -> of : 1
arbitrary chunks of -> treating : 1
chunks of treating -> the : 1
of treating the -> memory : 1
treating the memory -> as : 1
the memory as -> arrays : 1
memory as arrays -> of : 1
arrays of the -> caller : 1
of the caller -> must : 3
the caller must -> specify : 1
the caller must -> ensure : 5
caller must specify -> the : 1
specify the size -> of : 1
of each memory -> functions : 1
each memory functions -> operate : 1
memory functions operate -> on : 1
operate on character -> even : 1
on character even -> though : 1
character even though -> the : 1
though the function -> parameters : 1
parameters are declared -> as : 1
are declared as -> type : 1
declared as type -> they : 1
as type they -> are : 1
type they are -> always : 1
are always interpreted -> as : 1
always interpreted as -> when : 1
interpreted as when -> comparing : 1
as when comparing -> two : 1
comparing two also -> for : 1
two also for -> wide : 1
wide character string -> of : 1
wide character string -> class : 2
character string of -> using : 1
string of using -> character : 1
of using character -> code : 1
using character code -> should : 1
character code should -> use : 1
the and classes -> that : 1
and classes that -> are : 1
classes that are -> declared : 1
classes that are -> similar : 1
in the strings -> offer : 1
the strings offer -> high : 1
strings offer high -> more : 1
offer high more -> more : 1
high more more -> and : 1
more more and -> greater : 1
more and greater -> ease : 1
and greater ease -> of : 1
greater ease of -> the : 1
template in also -> provides : 1
in also provides -> member : 1
also provides member -> functions : 1
working with narrow -> and : 1
with narrow and -> wide : 1
with narrow and -> are : 1
wide character function -> searches : 1
character function searches -> for : 1
function searches for -> a : 3
function searches for -> any : 2
for a int -> int : 2
a int int -> function : 3
int function searches -> the : 1
searches the memory -> that : 2
that points of -> size : 2
points of size -> for : 1
points of size -> wide : 1
of size for -> the : 1
for the byte -> whose : 1
the byte whose -> value : 1
byte whose value -> is : 1
is to the -> return : 1
array to the -> first : 1
array to the -> if : 1
occurrence of or -> a : 4
pointer if is -> not : 2
is not present -> in : 2
the first bytes -> of : 2
first bytes of -> in : 1
first bytes of -> and : 1
bytes of in -> in : 1
in function compares -> const : 3
in function compares -> strings : 1
in function compares -> wide : 4
function compares const -> function : 3
compares const function -> compares : 3
const function compares -> the : 2
const function compares -> two : 4
const function compares -> at : 2
function compares the -> first : 2
compares the first -> bytes : 1
compares the first -> wide : 1
bytes of and -> as : 1
of and as -> arrays : 1
of and as -> the : 1
and as arrays -> of : 1
arrays of if -> all : 1
arrays of if -> the : 2
of if all -> bytes : 1
if all bytes -> are : 1
all bytes are -> the : 1
bytes are the -> return : 1
are the return -> value : 8
value is positive -> if : 6
is positive if -> is : 6
positive if is -> greater : 6
than or negative -> if : 6
or negative if -> is : 6
or negative if -> it : 1
negative if is -> less : 6
less than in -> in : 2
than in in -> in : 2
in in in -> in : 6
in in in -> function : 8
in in in -> class : 3
in in in -> variable : 2
in in in -> header : 1
in function copies -> const : 1
in function copies -> possibly : 1
in function copies -> a : 2
in function copies -> wide : 3
in function copies -> overlapping : 1
function copies const -> function : 1
copies const function -> copies : 1
const function copies -> bytes : 2
const function copies -> the : 2
const function copies -> at : 2
const function copies -> wide : 2
function copies bytes -> from : 2
copies bytes from -> to : 2
bytes from to -> if : 1
bytes from to -> the : 1
from to if -> and : 2
to if and -> the : 2
if and the -> results : 2
and the results -> are : 2
results are the -> return : 2
value is you -> copy : 2
is you copy -> the : 2
you copy the -> memory : 2
copy the memory -> that : 2
memory that contains -> any : 2
that contains any -> the : 2
contains any the -> results : 2
any the results -> are : 2
results are see -> for : 2
about pod in -> in : 2
pod in in -> function : 1
pod in in -> in : 1
function copies possibly -> overlapping : 1
copies possibly overlapping -> const : 1
possibly overlapping const -> function : 1
overlapping const function -> copies : 1
the memory regions -> can : 2
memory regions can -> the : 2
regions can the -> return : 2
can the return -> value : 2
in function fills -> memory : 1
in function fills -> a : 1
function fills memory -> with : 1
fills memory with -> a : 1
memory with a -> int : 1
with a int -> function : 1
int function fills -> the : 1
function fills the -> array : 2
fills the array -> with : 2
array with copies -> of : 2
is in in -> macro : 1
is in in -> type : 1
is in in -> function : 3
is in in -> in : 2
more in type -> size : 2
in type size -> with : 3
in function concatenates -> const : 2
in function concatenates -> wide : 2
function concatenates const -> function : 2
concatenates const function -> concatenates : 2
const function concatenates -> onto : 4
function concatenates onto -> the : 4
concatenates onto the -> end : 4
onto the end -> of : 4
end of overwriting -> the : 3
of overwriting the -> null : 3
overwriting the null -> byte : 2
overwriting the null -> character : 1
the null byte -> that : 1
the null byte -> at : 2
null byte that -> ends : 1
byte that ends -> the : 1
that ends the -> and : 1
ends the and -> arrays : 1
the and arrays -> cannot : 1
the and arrays -> are : 1
the and arrays -> must : 2
and arrays cannot -> the : 1
arrays cannot the -> caller : 1
cannot the caller -> must : 1
caller must ensure -> that : 5
ensure that points -> to : 6
to a region -> of : 6
region of memory -> that : 6
of memory that -> is : 6
hold the concatenated -> including : 2
hold the concatenated -> result : 1
the concatenated including -> its : 1
the concatenated including -> the : 1
concatenated including its -> null : 1
including its null -> in : 1
its null in -> function : 1
null in function -> searches : 1
null in function -> locates : 2
null in function -> reads : 1
null in function -> writes : 1
in function searches -> a : 1
in function searches -> for : 1
function searches a -> string : 1
searches a string -> for : 1
a string for -> a : 1
a string for -> const : 1
string for a -> int : 1
occurrence of to -> in : 2
of to in -> the : 2
the string if -> does : 2
string if does -> not : 4
does not appear -> in : 8
not appear in -> a : 2
not appear in -> is : 1
not appear in -> in : 2
not appear in -> the : 1
not appear in -> or : 2
appear in a -> null : 2
appear in a -> if : 1
pointer is in -> function : 2
function compares two -> strings : 1
function compares two -> interpreting : 1
function compares two -> wide : 2
compares two strings -> as : 1
compares two strings -> for : 2
compares two strings -> or : 4
two strings as -> arrays : 2
strings as arrays -> of : 2
if the strings -> are : 4
the strings are -> the : 4
strings are the -> return : 4
than if one -> string : 4
one string is -> a : 4
the the longer -> string : 4
the longer string -> is : 4
longer string is -> greater : 4
string is greater -> than : 4
than the shorter -> in : 4
the shorter in -> function : 4
shorter in function -> compares : 2
shorter in function -> copies : 2
function compares strings -> using : 1
compares strings using -> collation : 1
strings using collation -> const : 2
using collation const -> function : 2
collation const function -> compares : 2
compares two interpreting -> the : 1
two interpreting the -> strings : 1
interpreting the strings -> according : 2
the strings according -> to : 2
strings according to -> the : 2
to the in -> category : 2
to the in -> function : 1
to the in -> the : 1
the in category -> of : 2
in category of -> the : 2
category of the -> current : 2
category of the -> wide : 1
the current c -> the : 2
the current c -> locale : 1
current c the -> return : 2
c the return -> value : 2
that of in -> in : 2
function copies a -> const : 2
copies a const -> function : 2
function copies the -> string : 1
function copies the -> wide : 1
copies the string -> to : 1
to the caller -> must : 2
hold the entire -> string : 3
hold the entire -> converted : 2
entire string plus -> its : 3
string plus its -> null : 3
plus its null -> the : 3
its null the -> return : 3
null the return -> value : 6
in function counts -> initial : 2
in function counts -> characters : 2
function counts initial -> characters : 2
counts initial characters -> not : 1
counts initial characters -> that : 1
initial characters not -> in : 1
characters not in -> a : 1
in a span -> const : 3
a span const -> function : 4
a span const -> const : 1
span const function -> returns : 4
of characters at -> the : 2
characters at the -> start : 4
start of that -> are : 4
of that are -> not : 2
of that are -> in : 2
the string the -> in : 1
string the in -> its : 2
in its name -> means : 2
its name means -> that : 2
name means that -> counts : 2
means that counts -> characters : 2
that counts characters -> that : 2
counts characters that -> are : 2
counts characters that -> match : 1
that are in -> the : 4
in the complement -> of : 2
the complement of -> the : 2
complement of the -> span : 2
of the span -> in : 2
the span in -> function : 2
span in function -> retrieves : 1
span in function -> formats : 1
in function retrieves -> error : 1
function retrieves error -> message : 1
retrieves error message -> function : 1
error message function -> returns : 1
message function returns -> a : 1
to an error -> message : 1
error message string -> that : 1
message string that -> corresponds : 1
string that corresponds -> to : 1
to the error -> number : 1
the error number -> the : 1
error number the -> message : 1
number the message -> is : 1
message is the -> same : 1
as that printed -> by : 1
that printed by -> the : 1
printed by the -> program : 1
by the program -> must : 1
program must not -> modify : 1
must not modify -> the : 1
modify the array -> returned : 1
the array returned -> by : 1
array returned by -> and : 1
returned by and -> subsequent : 1
returned by and -> will : 1
by and subsequent -> calls : 1
and subsequent calls -> to : 1
subsequent calls to -> can : 1
subsequent calls to -> overwrite : 2
subsequent calls to -> is : 1
subsequent calls to -> return : 1
calls to can -> overwrite : 1
to can overwrite -> the : 1
can overwrite the -> in : 1
can overwrite the -> buffer : 1
overwrite the in -> function : 1
the in function -> computes : 1
the in function -> concatenates : 1
the in function -> tokenizes : 1
function computes length -> of : 1
computes length of -> a : 1
the string that -> the : 1
string that the -> number : 1
that the number -> of : 3
bytes that come -> before : 1
that come before -> the : 1
before the null -> byte : 1
null byte at -> the : 2
byte at the -> end : 2
end of at -> characters : 1
end of at -> wide : 1
of at characters -> are : 1
at characters are -> copied : 1
at characters are -> the : 1
characters are copied -> from : 3
characters are copied -> to : 2
copied from a -> terminating : 2
from a terminating -> null : 2
terminating null character -> is : 1
terminating null character -> in : 2
character is always -> appended : 5
is always appended -> to : 5
always appended to -> the : 5
concatenated including the -> null : 1
including the null -> the : 1
the null the -> return : 2
function compares at -> most : 2
compares at most -> characters : 1
compares at most -> wide : 1
at most characters -> of : 1
at most characters -> from : 1
most characters of -> two : 1
characters of two -> strings : 1
characters of two -> wide : 1
of two strings -> as : 1
function copies at -> most : 2
copies at most -> characters : 1
copies at most -> wide : 1
most characters from -> the : 1
string to if -> is : 2
string to if -> the : 1
if is shorter -> than : 2
is shorter than -> null : 2
shorter than null -> characters : 1
shorter than null -> wide : 1
than null characters -> are : 1
null characters are -> appended : 1
characters are appended -> to : 4
are appended to -> the : 4
the end so -> that : 2
end so that -> exactly : 2
so that exactly -> characters : 2
that exactly characters -> are : 2
exactly characters are -> always : 2
exactly characters are -> read : 1
characters are always -> written : 2
are always written -> to : 2
always written to -> return : 2
written to return -> value : 3
to return value -> is : 6
in function locates -> a : 2
in function locates -> rightmost : 2
function locates a -> character : 1
function locates a -> span : 1
locates a character -> in : 1
span const const -> function : 1
const function searches -> for : 2
characters in and -> returns : 2
in and returns -> a : 2
occurrence of such -> a : 2
of such a -> if : 2
of such a -> and : 1
of such a -> a : 1
such a if -> none : 2
a if none -> of : 2
characters in appear -> in : 1
in appear in -> returns : 1
appear in returns -> a : 1
in returns a -> null : 2
in returns a -> static : 1
a null in -> function : 2
a null in -> which : 1
function locates rightmost -> occurrence : 2
locates rightmost occurrence -> of : 2
rightmost occurrence of -> a : 2
of a int -> int : 1
appear in is -> in : 1
in is in -> function : 1
function counts characters -> in : 1
function counts characters -> that : 1
counts characters in -> a : 1
the string in -> function : 2
the string in -> like : 1
string in function -> finds : 2
in function finds -> a : 2
function finds a -> const : 1
function finds a -> wide : 1
finds a const -> const : 1
a const const -> function : 2
returns the address -> in : 1
address in of -> the : 1
in of the -> first : 2
pointer if does -> not : 2
appear in in -> function : 2
in function tokenizes -> a : 2
function tokenizes a -> const : 1
function tokenizes a -> wide : 1
tokenizes a const -> function : 1
const function splits -> into : 1
function splits into -> separate : 1
splits into separate -> separated : 1
into separate separated -> by : 1
separate separated by -> one : 1
separated by one -> or : 1
by one or -> more : 1
or more characters -> from : 1
or more characters -> including : 1
more characters from -> the : 1
from the contents -> of : 1
contents of are -> modified : 1
of are modified -> when : 1
are modified when -> each : 1
modified when each -> token : 1
when each token -> is : 1
each token is -> parse : 1
token is parse -> a : 1
is parse a -> string : 2
parse a string -> you : 2
a string you -> must : 2
string you must -> call : 2
must call multiple -> the : 2
call multiple the -> first : 2
multiple the first -> pass : 2
the first pass -> as : 2
first pass as -> the : 2
parameter to for -> the : 2
and subsequent pass -> a : 2
subsequent pass a -> null : 2
a null because -> saves : 1
null because saves -> only : 1
because saves only -> one : 1
saves only one -> series : 1
only one series -> of : 1
one series of -> calls : 1
series of calls -> can : 1
of calls can -> be : 1
calls can be -> active : 1
can be active -> at : 1
be active at -> a : 1
active at a -> each : 1
at a each -> call : 1
a each call -> to : 1
call to can -> use : 2
to can use -> a : 2
different function skips -> over : 1
function skips over -> initial : 1
skips over initial -> searching : 1
over initial searching -> for : 1
initial searching for -> the : 1
searching for the -> first : 1
searching for the -> next : 1
not in if -> it : 1
if it reaches -> the : 1
it reaches the -> end : 2
the string without -> finding : 1
string without finding -> any : 1
without finding any -> token : 1
finding any token -> it : 1
any token it -> returns : 1
token it returns -> a : 1
a null it -> saves : 1
a null it -> calls : 1
a null it -> returns : 1
null it saves -> a : 1
it saves a -> pointer : 1
saves a pointer -> to : 1
first character as -> the : 1
character as the -> start : 1
character as the -> file : 1
the it then -> searches : 1
the next delimiter -> which : 1
next delimiter which -> ends : 1
delimiter which ends -> the : 1
which ends the -> it : 1
ends the it -> changes : 1
the it changes -> the : 1
changes the delimiter -> character : 1
the delimiter character -> to : 1
the delimiter character -> is : 1
delimiter character to -> a : 1
null character and -> returns : 1
the when is -> called : 1
the when is -> the : 1
the first it -> starts : 1
first it starts -> searching : 1
it starts searching -> for : 1
starts searching for -> the : 1
the next token -> at : 1
next token at -> the : 1
token at the -> point : 1
where the previous -> search : 1
the previous search -> in : 1
previous search in -> function : 1
search in function -> transforms : 1
in function transforms -> a : 2
function transforms a -> string : 1
function transforms a -> wide : 1
transforms a string -> for : 1
string for const -> function : 2
for const function -> transforms : 2
const function transforms -> the : 2
function transforms the -> string : 1
function transforms the -> wide : 1
transforms the string -> by : 1
the string by -> converting : 1
string by converting -> each : 2
by converting each -> character : 1
by converting each -> wide : 1
converting each character -> to : 1
each character to -> its : 1
character to its -> collation : 2
to its collation -> order : 2
its collation order -> the : 2
collation order the -> equivalent : 1
collation order the -> functionality : 1
order the equivalent -> is : 1
the equivalent is -> copied : 1
equivalent is copied -> into : 1
copied into after -> transforming : 1
into after transforming -> two : 1
after transforming two -> different : 1
transforming two different -> strings : 1
two different strings -> with : 1
different strings with -> the : 1
strings with the -> transformed : 1
strings with the -> standard : 1
with the transformed -> strings : 1
the transformed strings -> can : 1
transformed strings can -> be : 1
strings can be -> compared : 1
can be compared -> by : 1
can be compared -> for : 1
can be compared -> a : 1
be compared by -> calling : 1
compared by calling -> to : 1
by calling to -> obtain : 1
by calling to -> set : 1
calling to obtain -> the : 1
obtain the same -> result : 2
the same result -> as : 2
same result as -> calling : 2
result as calling -> on : 2
as calling on -> the : 2
calling on the -> original : 2
calling on the -> owned : 1
on the original -> more : 1
on the original -> character : 1
the original more -> than : 1
original more than -> bytes : 1
more than bytes -> are : 1
more than bytes -> to : 1
than bytes are -> stored : 1
than bytes are -> a : 1
bytes are stored -> in : 3
stored in including -> the : 1
stored in including -> a : 2
in including the -> trailing : 1
including the trailing -> null : 1
the trailing null -> if : 1
the trailing null -> in : 1
trailing null if -> is : 1
if is can -> be : 1
is can be -> return : 1
can be return -> value : 1
be return value -> is : 1
number of transformed -> characters : 1
of transformed characters -> written : 1
transformed characters written -> to : 1
characters written to -> in : 1
written to in -> in : 1
to in in -> header : 1
which declares types -> and : 3
working with dates -> and : 2
with dates and -> with : 1
with dates and -> the : 1
dates and with -> no : 1
is the fundamental -> representation : 1
the fundamental representation -> of : 1
fundamental representation of -> a : 1
of a date -> and : 4
a date and -> the : 2
a date and -> time : 2
a date and -> parse : 1
a date and -> with : 1
a date and -> int : 2
a date and -> it : 1
date and the -> details : 1
date and the -> actual : 1
and the details -> of : 1
details of this -> type : 1
of this type -> and : 1
this type and -> how : 1
type and how -> it : 1
how it encodes -> a : 1
it encodes a -> date : 1
encodes a date -> and : 1
date and time -> are : 2
date and time -> have : 1
date and time -> into : 1
date and time -> see : 1
date and time -> pointed : 2
date and time -> in : 1
date and time -> value : 1
date and time -> information : 2
and time are -> unix : 1
and time are -> struct : 1
time are unix -> programmers : 1
are unix programmers -> recognize : 1
unix programmers recognize -> this : 1
recognize this type -> as : 1
this type as -> the : 1
as the number -> of : 1
number of seconds -> since : 1
of seconds since -> january : 1
seconds since january -> but : 1
since january but -> that : 1
january but that -> is : 1
that is only -> one : 1
only one possible -> date : 1
one possible date -> and : 1
possible date and -> time : 1
and time have -> a : 1
time have a -> secondary : 1
have a secondary -> representation : 1
a secondary representation -> as : 1
secondary representation as -> a : 1
representation as a -> which : 1
representation as a -> multibyte : 1
as a which -> breaks : 1
as a which -> might : 1
a which breaks -> down : 1
which breaks down -> a : 1
breaks down a -> date : 1
down a date -> and : 1
and time into -> constituent : 1
time into constituent -> the : 1
into constituent the -> parts : 1
constituent the parts -> facilitate : 1
the parts facilitate -> formatting : 1
parts facilitate formatting -> dates : 1
facilitate formatting dates -> and : 1
formatting dates and -> times : 1
dates and times -> for : 1
dates and times -> from : 2
dates and times -> using : 1
and times for -> or : 1
times for or -> you : 1
for or you -> can : 1
can read a -> date : 1
read a date -> and : 1
date and parse -> the : 1
parse the and -> build : 1
the and build -> a : 1
and build a -> which : 1
build a which -> you : 1
a which you -> can : 1
you can then -> convert : 1
you can then -> read : 1
can then convert -> to : 1
then convert to -> a : 1
to a section -> describes : 1
a section describes -> the : 1
describes the types -> and : 1
dates and the -> boost : 1
dates and the -> and : 1
dates and the -> modifier : 1
and the boost -> project : 1
project has additional -> date : 1
project has additional -> class : 1
has additional date -> and : 1
additional date and -> time : 1
and time see -> for : 1
time see for -> information : 1
about function converts -> a : 1
converts a time -> to : 2
a time to -> a : 2
time to a -> function : 2
a function formats -> the : 1
function formats the -> date : 1
formats the date -> and : 1
the date and -> time : 5
the date and -> is : 1
the date and -> if : 1
and time pointed -> to : 2
time pointed to -> by : 4
to by as -> a : 1
by as a -> character : 1
as a character -> it : 1
as a character -> the : 1
as a character -> you : 1
a character it -> returns : 7
character it returns -> a : 1
character it returns -> converting : 5
character it returns -> class : 1
a static buffer -> that : 1
static buffer that -> is : 1
buffer that is -> overwritten : 1
buffer that is -> associated : 1
that is overwritten -> with : 1
is overwritten with -> each : 1
overwritten with each -> static : 1
with each static -> buffer : 1
each static buffer -> can : 1
static buffer can -> be : 2
buffer can be -> shared : 2
can be shared -> with : 4
can be shared -> among : 1
be shared with -> returned : 1
be shared with -> function : 2
be shared with -> utc : 1
shared with returned -> value : 1
with returned value -> has : 1
returned value has -> the : 1
has the format -> followed : 1
the format followed -> by : 1
format followed by -> a : 1
has a length -> of : 1
a length of -> the : 1
of the day -> of : 2
the day of -> the : 2
day of the -> week : 1
day of the -> month : 1
day of the -> either : 1
of the week -> and : 1
the week and -> month : 1
week and month -> name : 1
and month name -> are : 1
month name are -> english : 1
name are english -> abbreviations : 1
are english abbreviations -> and : 1
english abbreviations and -> are : 1
abbreviations and are -> not : 1
are not monday -> is : 1
not monday is -> represented : 1
monday is represented -> by : 1
is represented by -> regardless : 1
represented by regardless -> of : 1
by regardless of -> the : 1
of the month -> always : 1
of the month -> solid : 2
the month always -> takes : 1
month always takes -> up : 1
always takes up -> the : 1
takes up the -> same : 1
number of using -> a : 1
of using a -> leading : 1
of using a -> reverse : 1
using a leading -> space : 1
a leading space -> if : 1
leading space if -> the : 1
space if the -> hours : 1
if the hours -> minutes : 1
the hours minutes -> and : 1
hours minutes and -> seconds : 1
minutes and seconds -> use : 1
and seconds use -> a : 1
seconds use a -> leading : 1
use a leading -> zero : 1
a leading zero -> if : 1
leading zero if -> in : 1
zero if in -> function : 1
if in function -> gets : 1
in function gets -> the : 2
in function gets -> or : 1
in function gets -> number : 1
in function gets -> length : 1
function gets the -> processor : 1
function gets the -> current : 1
gets the processor -> with : 1
the processor with -> no : 1
processor with no -> function : 1
amount of processor -> time : 1
of processor time -> used : 1
processor time used -> since : 1
time used since -> an : 1
used since an -> start : 1
since an start -> the : 1
an start the -> time : 1
start the time -> is : 1
time is returned -> in : 1
is returned in -> there : 1
is returned in -> function : 2
returned in there -> are : 1
in there are -> units : 1
there are units -> per : 1
are units per -> value : 1
units per value -> returned : 1
per value returned -> by : 1
returned by the -> function : 1
returned by the -> macro : 1
returned by the -> and : 2
is not useful -> by : 1
not useful by -> itself : 1
useful by itself -> but : 1
by itself but -> is : 1
itself but is -> intended : 1
but is intended -> to : 1
is intended to -> be : 1
intended to be -> used : 1
used by comparing -> it : 1
by comparing it -> with : 1
comparing it with -> the : 1
earlier call to -> for : 1
call to for -> the : 1
first statement in -> the : 1
difference between subsequent -> calls : 1
between subsequent calls -> and : 1
subsequent calls and -> the : 1
calls and the -> original : 1
and the original -> call : 1
the original call -> tell : 1
original call tell -> you : 1
call tell you -> how : 1
tell you how -> much : 1
you how much -> time : 1
you how much -> you : 1
how much time -> has : 1
much time has -> elapsed : 1
time has elapsed -> since : 1
has elapsed since -> the : 1
elapsed since the -> program : 1
since the program -> the : 1
program the environment -> cannot : 1
the environment cannot -> provide : 1
environment cannot provide -> the : 2
cannot provide the -> processor : 1
cannot provide the -> date : 1
provide the processor -> is : 1
the processor is -> type : 1
processor is type -> represents : 1
is type represents -> processor : 1
type represents processor -> type : 1
represents processor type -> is : 1
processor type is -> an : 1
is an arithmetic -> type : 2
arithmetic type returned -> by : 1
type returned by -> the : 2
by the macro -> processor : 1
the macro processor -> time : 1
macro processor time -> macro : 1
processor time macro -> returns : 1
time macro returns -> the : 1
number of clock -> ticks : 1
of clock ticks -> per : 1
clock ticks per -> it : 1
ticks per it -> is : 1
per it is -> not : 1
necessarily a function -> converts : 1
a function converts -> a : 1
a function converts -> the : 1
function converts the -> date : 1
function converts the -> character : 2
converts the date -> and : 1
to by to -> local : 1
by to local -> time : 1
to local time -> and : 1
local time and -> formats : 1
time and formats -> the : 1
and formats the -> time : 1
formats the time -> as : 1
the time as -> a : 1
time as a -> it : 1
time as a -> const : 1
time as a -> wide : 1
is equivalent text -> is : 1
equivalent text is -> written : 1
text is written -> to : 1
static and a -> pointer : 1
to that buffer -> is : 1
that buffer is -> subsequent : 1
buffer is subsequent -> calls : 1
is subsequent calls -> can : 1
subsequent calls can -> overwrite : 1
calls can overwrite -> the : 1
overwrite the buffer -> the : 1
the buffer the -> static : 1
buffer the static -> buffer : 1
the static buffer -> can : 1
shared with function -> computes : 1
shared with function -> makes : 1
with function computes -> the : 1
function computes the -> difference : 2
function computes the -> differences : 1
function computes the -> absolute : 1
function computes the -> inverse : 4
function computes the -> cosine : 1
function computes the -> hyperbolic : 3
function computes the -> exponential : 1
function computes the -> natural : 1
function computes the -> common : 1
function computes the -> power : 1
function computes the -> sine : 1
function computes the -> square : 1
function computes the -> tangent : 1
computes the difference -> between : 2
between two function -> computes : 1
two function computes -> the : 1
two the return -> value : 1
in function extracts -> parts : 1
function extracts parts -> of : 2
extracts parts of -> a : 2
of a utc -> function : 1
a utc function -> expands : 1
utc function expands -> the : 1
function expands the -> calendar : 2
expands the calendar -> time : 2
the calendar time -> pointed : 2
calendar time pointed -> to : 2
to by into -> a : 2
by into a -> static : 2
into a static -> object : 2
static object using -> coordinated : 1
static object using -> local : 1
object using coordinated -> universal : 1
using coordinated universal -> time : 1
coordinated universal time -> it : 1
universal time it -> returns : 1
time it returns -> a : 1
the static subsequent -> calls : 2
static subsequent calls -> to : 2
calls to overwrite -> the : 2
to overwrite the -> the : 2
to overwrite the -> c : 1
to overwrite the -> if : 1
overwrite the the -> static : 2
the the static -> object : 2
the static object -> can : 2
static object can -> be : 2
shared with utc -> is : 1
with utc is -> not : 1
utc is not -> available : 1
not available the -> host : 1
available the host -> operating : 1
operating system does -> not : 1
system does not -> provide : 1
not provide the -> time : 1
provide the time -> zone : 1
the time zone -> a : 1
time zone a -> null : 1
zone a null -> pointer : 1
is function extracts -> parts : 1
a local function -> expands : 1
local function expands -> the : 1
object using local -> it : 1
using local it -> returns : 1
local it returns -> a : 1
with function makes -> a : 1
function makes a -> time : 2
makes a time -> from : 1
makes a time -> by : 1
a time from -> function : 1
time from function -> makes : 1
from function makes -> a : 1
a time by -> assembling : 1
time by assembling -> the : 1
by assembling the -> parts : 1
assembling the parts -> in : 1
the parts in -> a : 1
parts in a -> interpreted : 1
in a interpreted -> as : 1
a interpreted as -> local : 1
interpreted as local -> the : 1
as local the -> and : 1
local the and -> members : 1
members are and -> other : 1
members are and -> the : 1
and other fields -> are : 1
other fields are -> permitted : 1
other fields are -> changed : 1
fields are permitted -> to : 1
are permitted to -> be : 1
permitted to be -> outside : 1
to be outside -> their : 1
be outside their -> normal : 1
outside their normal -> the : 1
their normal the -> conversion : 1
their normal the -> time : 1
normal the conversion -> is : 1
is the corresponding -> time : 1
the corresponding time -> is : 1
corresponding time is -> the : 1
the other fields -> are : 1
fields are changed -> if : 1
are changed if -> necessary : 1
changed if necessary -> to : 1
if necessary to -> reflect : 1
necessary to reflect -> their : 1
to reflect their -> normal : 1
reflect their normal -> the : 1
normal the time -> cannot : 1
the time cannot -> be : 1
time cannot be -> represented : 1
as a is -> in : 1
a is in -> macro : 1
in function formats -> a : 2
function formats a -> time : 2
function formats a -> object : 1
formats a time -> as : 2
a time as -> a : 2
as a const -> const : 1
const function formats -> a : 1
formats a object -> as : 1
as a up -> to : 1
a up to -> bytes : 1
up to bytes -> are : 2
to bytes are -> stored : 2
in including a -> terminating : 2
including a terminating -> null : 3
of characters actually -> not : 1
of characters actually -> read : 1
of characters actually -> written : 1
characters actually not -> counting : 1
actually not counting -> the : 1
not counting the -> final : 1
counting the final -> null : 1
the final null -> if : 1
final null if -> the : 1
if the formatted -> result : 1
if the formatted -> output : 1
if the formatted -> date : 1
the formatted result -> requires : 1
formatted result requires -> more : 1
result requires more -> than : 1
requires more than -> the : 1
than the return -> value : 1
value is from -> are : 1
is from are -> copied : 1
from are copied -> to : 1
copied to except -> conversion : 1
to except conversion -> which : 1
except conversion which -> start : 1
conversion which start -> with : 1
which start with -> a : 1
percent sign and -> are : 1
sign and are -> followed : 1
and are followed -> by : 1
followed by one -> of : 1
by one of -> the : 1
of the letters -> shown : 1
the letters shown -> in : 1
letters shown in -> specifiers : 1
shown in specifiers -> for : 2
in specifiers for -> the : 2
specifiers for the -> category : 1
specifiers for the -> date : 1
for the category -> in : 1
category in the -> current : 1
current c locale -> controls : 1
c locale controls -> the : 1
locale controls the -> text : 1
controls the text -> that : 1
the text that -> is : 1
text that is -> copied : 1
that is copied -> to : 1
copied to for -> each : 1
to for each -> conversion : 1
for each conversion -> specifiers : 1
each conversion specifiers -> for : 1
conversion specifiers for -> specifiers : 1
specifiers for specifiers -> for : 2
for specifiers for -> solid : 2
specifiers for solid -> solid : 2
solid solid weekday -> solid : 4
solid weekday solid -> solid : 4
weekday solid solid -> solid : 4
solid solid month -> solid : 4
solid month solid -> solid : 4
month solid solid -> solid : 6
solid solid date -> and : 2
solid date and -> solid : 2
date and solid -> solid : 2
solid solid of -> the : 4
solid of the -> month : 2
solid of the -> year : 2
the month solid -> solid : 2
of the year -> solid : 2
the year solid -> solid : 2
year solid solid -> solid : 2
solid solid designation -> for : 2
solid designation for -> use : 2
designation for use -> with : 2
for use with -> a : 2
for use with -> the : 1
use with a -> solid : 2
use with a -> a : 1
with a solid -> solid : 2
solid up to -> two : 2
up to two -> leap : 2
to two leap -> solid : 2
two leap solid -> solid : 2
leap solid solid -> solid : 2
solid number week -> starts : 4
number week starts -> with : 4
week starts with -> the : 2
week starts with -> first : 2
the first solid -> solid : 2
first solid solid -> solid : 4
solid solid sunday -> is : 2
solid sunday is -> day : 2
sunday is day -> solid : 2
is day solid -> solid : 2
day solid solid -> solid : 2
starts with first -> solid : 2
with first solid -> solid : 2
solid in century -> solid : 2
in century solid -> solid : 2
century solid solid -> solid : 2
solid solid zone -> name : 2
solid zone name -> or : 2
zone name or -> or : 2
name or or -> empty : 2
or or empty -> string : 2
or empty string -> if : 2
empty string if -> time : 2
empty string if -> the : 1
string if time -> zone : 2
if time zone -> is : 2
time zone is -> solid : 2
zone is solid -> in : 1
zone is solid -> with : 1
is solid in -> function : 1
solid in function -> gets : 1
solid in function -> function : 1
gets the current -> date : 1
the current date -> and : 2
current date and -> with : 1
current date and -> time : 1
date and with -> no : 2
and time in -> an : 1
time in an -> if : 1
if the host -> environment : 1
the host environment -> cannot : 1
host environment cannot -> provide : 1
provide the date -> and : 1
date and is -> is : 1
and is is -> not : 1
and is is -> the : 1
value is also -> stored : 1
is also stored -> in : 1
also stored in -> type : 1
stored in type -> represents : 1
in type represents -> a : 2
represents a date -> and : 2
arithmetic type that -> represents : 1
actual type and -> the : 1
and the encoding -> of : 1
the encoding of -> the : 1
encoding of the -> date : 1
of the date -> and : 3
time are struct -> represents : 1
are struct represents -> the : 1
struct represents the -> parts : 2
represents the parts -> of : 2
date and int -> int : 2
and int int -> int : 2
int int day -> of : 2
int day of -> int : 2
day of int -> int : 2
int int years -> since : 2
int years since -> int : 2
years since int -> days : 2
since int days -> since : 4
int days since -> int : 2
int days since -> january : 2
days since int -> days : 2
days since january -> int : 2
since january int -> daylight : 2
january int daylight -> savings : 2
int daylight savings -> time : 2
daylight savings time -> structure : 2
daylight savings time -> is : 1
savings time structure -> stores : 2
time structure stores -> parts : 2
structure stores parts -> of : 2
stores parts of -> a : 2
and the values -> returned : 1
the values returned -> by : 1
values returned by -> and : 1
by and will -> always : 1
and will always -> be : 1
will always be -> in : 1
always be in -> the : 1
in the ranges -> shown : 1
the ranges shown -> that : 1
ranges shown that -> two : 1
shown that two -> extra : 1
that two extra -> leap : 1
two extra leap -> seconds : 1
extra leap seconds -> are : 1
leap seconds are -> allowed : 1
seconds are allowed -> for : 1
allowed for member -> is : 1
for member is -> positive : 1
member is positive -> when : 1
is positive when -> daylight : 1
positive when daylight -> savings : 1
when daylight savings -> time : 1
savings time is -> in : 1
time is in -> when : 1
is in when -> it : 1
in when it -> is : 1
not in or -> negative : 1
in or negative -> if : 1
negative if it -> is : 1
it is with -> no : 1
with no order -> of : 1
no order of -> the : 1
the members is -> an : 1
members is an -> implementation : 1
implementation can have -> additional : 1
have additional type -> header : 1
additional type header -> is : 1
type header is -> the : 1
with wide many -> of : 1
wide many of -> these : 1
many of these -> functions : 1
functions are wide -> versions : 1
are wide versions -> of : 1
wide versions of -> functions : 1
versions of functions -> found : 1
of functions found -> in : 2
functions found in -> and : 1
functions found in -> for : 1
in and plus -> improved : 1
and plus improved -> versions : 1
plus improved versions -> of : 1
improved versions of -> the : 1
the multibyte functions -> from : 1
the multibyte functions -> as : 1
multibyte functions from -> can : 1
functions from can -> use : 1
from can use -> narrow : 1
can use narrow -> as : 1
can use narrow -> or : 1
use narrow as -> declared : 1
narrow as declared -> in : 1
declared in or -> wide : 1
in or wide -> as : 1
or wide as -> declared : 1
wide as declared -> in : 1
declared in but -> you : 1
declared in but -> is : 1
you cannot mix -> wide : 1
cannot mix wide -> and : 1
mix wide and -> narrow : 1
wide and narrow -> functions : 1
and narrow functions -> on : 1
narrow functions on -> a : 1
functions on a -> single : 1
functions on a -> stream : 1
a single stream -> without : 1
single stream without -> explicitly : 1
stream without explicitly -> changing : 1
without explicitly changing -> the : 1
explicitly changing the -> orientation : 1
changing the orientation -> the : 1
the orientation the -> function : 1
orientation the function -> in : 1
function in this -> section : 1
section for treats -> a : 1
for treats a -> file : 1
treats a file -> as : 1
a file as -> a : 1
of multibyte when -> multibyte : 1
multibyte when multibyte -> characters : 1
when multibyte characters -> are : 1
multibyte characters are -> converted : 1
multibyte characters are -> read : 1
and when wide -> characters : 1
when wide characters -> are : 1
converted to multibyte -> the : 1
to multibyte the -> conversion : 1
multibyte the conversion -> depends : 1
the conversion depends -> on : 1
conversion depends on -> the : 1
on the c -> locale : 2
on the c -> as : 1
the c locale -> with : 1
the c locale -> is : 2
c locale with -> in : 1
locale with in -> for : 1
with in for -> information : 1
about character for -> information : 1
character for information -> about : 1
information about multibyte -> characters : 1
about multibyte characters -> and : 1
multibyte characters and -> shift : 1
multibyte characters and -> converts : 1
multibyte characters and -> for : 1
characters and shift -> and : 1
and shift and -> and : 1
shift and and -> for : 1
information about wide -> characters : 1
about wide characters -> and : 1
characters and working -> with : 1
and working with -> wide : 1
with wide consider -> using : 1
wide consider using -> the : 1
using the streams -> and : 1
the streams and -> class : 1
streams and class -> instead : 1
and class instead -> of : 1
class instead of -> the : 1
class instead of -> being : 1
the c later -> in : 1
c later in -> this : 1
chapter for the -> class : 1
chapter for the -> most : 1
class the header -> provides : 1
the header provides -> additional : 1
header provides additional -> support : 1
provides additional support -> for : 1
additional support for -> converting : 1
support for converting -> between : 1
for converting between -> narrow : 1
converting between narrow -> and : 1
between narrow and -> wide : 2
and wide characters -> and : 1
characters and related -> function : 1
and related function -> converts : 1
related function converts -> a : 1
a wide function -> returns : 4
a wide function -> reads : 1
a wide function -> writes : 2
a wide function -> on : 1
a wide function -> pushes : 1
a wide function -> searches : 1
a wide function -> tests : 1
a wide function -> translates : 1
wide function returns -> a : 3
wide function returns -> the : 1
returns a wide -> character : 1
wide character representation -> of : 1
character representation of -> which : 1
representation of which -> is : 1
multibyte character that -> can : 1
multibyte character that -> points : 2
character that can -> be : 1
be represented in -> a : 1
represented in a -> single : 1
a single byte -> an : 1
single byte an -> if : 1
byte an if -> is : 1
valid multibyte or -> if : 1
multibyte or if -> is : 1
is is in -> function : 1
reads a wide -> function : 1
reads a wide -> int : 1
reads a wide -> macro : 2
reads a wide -> character : 1
wide function reads -> the : 1
function reads the -> next : 1
function reads the -> shift : 1
reads the next -> wide : 1
the next wide -> character : 1
next wide character -> from : 1
wide character from -> it : 2
character or for -> or : 1
or for or -> an : 2
for or an -> in : 3
or an in -> function : 2
or an in -> macro : 1
a wide int -> function : 1
wide int function -> reads : 1
line of wide -> characters : 1
wide characters from -> and : 1
wide characters from -> the : 1
wide characters from -> to : 2
characters from and -> stores : 1
characters from and -> interprets : 2
characters from and -> appends : 2
from and stores -> them : 1
from and stores -> the : 1
and stores them -> in : 2
stores them in -> the : 2
them in the -> newline : 1
them in the -> array : 1
in the newline -> character : 1
is also at -> wide : 1
also at wide -> characters : 1
at wide characters -> are : 2
null wide return -> value : 1
wide return value -> is : 1
pointer for or -> an : 1
writes a wide -> function : 2
writes a wide -> to : 1
writes a wide -> macro : 1
writes a wide -> character : 1
wide function writes -> a : 1
wide function writes -> the : 1
a wide to -> it : 1
wide to it -> returns : 1
it returns or -> for : 1
returns or for -> an : 1
writes the wide -> string : 1
writes the wide -> character : 1
the wide string -> to : 3
the wide string -> if : 2
the wide string -> the : 1
the wide string -> by : 1
for an or -> a : 1
for an or -> when : 1
function gets or -> sets : 2
gets or sets -> stream : 1
gets or sets -> the : 1
or sets stream -> int : 1
sets stream int -> function : 1
stream int function -> gets : 1
int function gets -> or : 1
or sets the -> orientation : 1
or sets the -> exception : 1
or sets the -> when : 1
or sets the -> precision : 1
or sets the -> minimum : 1
sets the orientation -> of : 1
the orientation of -> the : 1
orientation of the -> orientation : 1
of the orientation -> is : 1
the orientation is -> wide : 1
the orientation is -> it : 1
the orientation is -> set : 2
the orientation is -> queried : 1
orientation is wide -> or : 1
is wide or -> narrow : 1
wide or narrow -> when : 1
or narrow when -> a : 1
narrow when a -> file : 1
when a file -> is : 1
file is it -> starts : 1
is it starts -> without : 1
it starts without -> calling : 1
starts without calling -> any : 1
calling any wide -> function : 1
any wide function -> on : 1
wide function on -> the : 1
wide function on -> a : 1
function on the -> stream : 2
on the stream -> gives : 2
the stream gives -> it : 2
stream gives it -> wide : 1
stream gives it -> narrow : 1
gives it wide -> calling : 1
it wide calling -> any : 1
wide calling any -> narrow : 1
calling any narrow -> function : 1
any narrow function -> on : 1
narrow function on -> the : 1
narrow function on -> a : 1
gives it narrow -> mixing : 1
it narrow mixing -> narrow : 1
narrow mixing narrow -> and : 1
and wide functions -> on : 1
wide functions on -> a : 1
on a stream -> results : 1
on a stream -> with : 2
a stream results -> in : 1
stream results in -> an : 1
in an calling -> a : 1
an calling a -> narrow : 1
calling a narrow -> function : 1
a narrow function -> on : 1
function on a -> stream : 2
a stream with -> wide : 1
a stream with -> narrow : 1
stream with wide -> orientation : 1
with wide orientation -> or : 1
wide orientation or -> calling : 1
orientation or calling -> a : 1
or calling a -> wide : 1
calling a wide -> function : 1
stream with narrow -> orientation : 1
with narrow orientation -> results : 1
narrow orientation results -> in : 1
orientation results in -> an : 1
in an performing -> any : 1
an performing any -> on : 1
any on a -> newly : 1
on a newly -> opened : 1
a newly opened -> you : 1
newly opened you -> can : 1
opened you can -> force : 1
force the orientation -> by : 1
the orientation by -> calling : 1
orientation by calling -> once : 1
by calling once -> the : 1
calling once the -> orientation : 1
once the orientation -> is : 1
orientation is it -> cannot : 1
cannot be changed -> except : 1
be changed except -> by : 1
changed except by -> closing : 1
except by closing -> and : 1
by closing and -> reopening : 1
closing and reopening -> the : 1
and reopening the -> stream : 1
reopening the stream -> by : 1
the stream by -> calling : 1
stream by calling -> in : 1
by calling in -> is : 1
by calling in -> in : 2
calling in is -> the : 1
is the orientation -> is : 3
orientation is set -> to : 2
if the orientation -> has : 1
the orientation has -> already : 1
orientation has already -> been : 1
already been it -> is : 1
been it is -> not : 1
and the true -> orientation : 1
the true orientation -> is : 1
true orientation is -> if : 1
orientation is if -> is : 1
orientation is queried -> without : 1
is queried without -> being : 1
queried without being -> return : 1
without being return -> value : 1
being return value -> indicates : 1
return value indicates -> the : 1
value indicates the -> new : 1
indicates the new -> positive : 1
the new positive -> for : 1
new positive for -> negative : 1
positive for negative -> for : 1
for negative for -> or : 1
negative for or -> if : 1
if the stream -> has : 2
if the stream -> buffer : 4
the stream has -> no : 1
the stream has -> a : 1
stream has no -> in : 1
has no in -> in : 1
no in in -> function : 1
function writes wide -> output : 1
writes wide output -> to : 1
wide output to -> formatted : 1
output to formatted -> according : 1
to formatted according -> to : 1
formatted according to -> the : 1
the conversion specifiers -> in : 2
conversion specifiers in -> see : 2
specifiers in see -> in : 2
in see in -> for : 2
const function reads -> wide : 1
function reads wide -> input : 1
reads wide input -> from : 1
wide input from -> and : 1
input from and -> interprets : 1
from and interprets -> it : 1
from and interprets -> them : 2
and interprets it -> according : 1
interprets it according -> to : 1
it according to -> the : 1
more in macro -> reads : 1
more in macro -> writes : 1
in macro reads -> a : 2
a wide macro -> reads : 1
a wide macro -> is : 3
a wide macro -> writes : 1
wide macro reads -> a : 1
the character converted -> to : 2
character converted to -> or : 2
an in macro -> reads : 1
an in macro -> writes : 1
wide macro is -> equivalent : 1
wide macro is -> the : 2
function gets number -> of : 1
gets number of -> bytes : 1
multibyte function counts -> the : 1
function counts the -> number : 1
needed to complete -> the : 3
to complete the -> next : 2
to complete the -> shift : 1
to complete the -> for : 1
complete the next -> multibyte : 2
the next multibyte -> character : 2
next multibyte character -> that : 2
character that points -> at : 2
character that points -> the : 1
that points at -> bytes : 2
points at bytes -> of : 2
of are parameter -> points : 1
are parameter points -> to : 1
to the shift -> which : 5
the shift which -> keeps : 5
shift which keeps -> track : 5
which keeps track -> of : 5
the conversion state -> between : 5
the conversion state -> used : 1
conversion state between -> calls : 5
state between calls -> to : 5
between calls to -> if : 5
between calls to -> the : 1
calls to if -> is : 5
a null an -> internal : 3
null an internal -> shift : 3
an internal shift -> state : 5
internal shift state -> is : 5
state is used -> is : 5
is used is -> similar : 5
used is similar -> to : 5
to calling in -> return : 2
to calling in -> if : 2
to calling in -> in : 1
to calling in -> header : 4
to calling in -> class : 2
calling in return -> value : 2
in return value -> is : 2
the the multibyte -> character : 2
character represents the -> null : 2
represents the null -> wide : 2
the null wide -> does : 2
the null wide -> character : 1
null wide does -> not : 2
wide does not -> point : 2
does not point -> to : 2
not point to -> a : 2
multibyte is too -> the : 2
too the multibyte -> character : 2
character is in -> which : 2
case the value -> returned : 2
value returned is -> the : 2
returned is the -> number : 2
bytes in the -> multibyte : 2
bytes in the -> output : 2
bytes in the -> if : 1
in the multibyte -> in : 2
the multibyte in -> function : 1
the multibyte in -> in : 1
multibyte in function -> converts : 1
a wide const -> function : 5
a wide const -> converts : 1
a wide const -> const : 3
a wide it -> counts : 1
wide it counts -> the : 1
it counts the -> number : 1
of are if -> points : 1
are if points -> to : 1
valid multibyte that -> character : 1
multibyte that character -> is : 1
a wide which -> is : 1
wide which is -> stored : 1
which is stored -> in : 1
stored in parameter -> points : 1
in parameter points -> to : 1
multibyte in in -> function : 1
in function determines -> whether : 11
function determines whether -> a : 12
function determines whether -> exception : 1
function determines whether -> the : 12
whether a state -> is : 2
a state is -> the : 2
initial shift function -> returns : 1
shift function returns -> true : 1
null pointer or -> it : 1
null pointer or -> a : 1
null pointer or -> if : 1
pointer or it -> points : 1
or it points -> to : 1
object that is -> in : 1
object that is -> local : 1
in the initial -> shift : 1
initial shift it -> returns : 1
shift it returns -> false : 1
it returns false -> function : 1
returns false function -> converts : 1
false function converts -> a : 1
wide const converts -> a : 1
const converts a -> multibyte : 1
the parameter indirectly -> points : 1
parameter indirectly points -> to : 1
indirectly points to -> the : 1
the multibyte that -> points : 1
multibyte that points -> to : 1
the multibyte is -> not : 1
multibyte is not -> up : 1
is not up -> to : 2
not up to -> wide : 1
not up to -> bytes : 1
are a trailing -> null : 2
trailing null character -> is : 2
wide character if -> conversion : 1
character if conversion -> stops : 2
if conversion stops -> upon : 2
conversion stops upon -> reaching : 2
stops upon reaching -> a : 2
upon reaching a -> null : 2
reaching a null -> character : 1
reaching a null -> wide : 1
null character in -> the : 3
the a pointer -> is : 2
the a pointer -> to : 2
pointer is assigned -> to : 2
assigned to is -> assigned : 2
to is assigned -> a : 2
to the byte -> immediately : 1
the byte immediately -> past : 1
byte immediately past -> the : 1
immediately past the -> end : 2
the last multibyte -> character : 1
last multibyte character -> parameter : 1
multibyte character parameter -> can : 1
character parameter can -> be : 2
parameter can be -> a : 6
parameter can be -> in : 1
null in which -> case : 1
which case no -> wide : 1
which case no -> narrow : 1
case no wide -> characters : 1
no wide characters -> are : 1
are stored and -> is : 2
stored and is -> not : 2
but is updated -> and : 2
is updated and -> the : 2
updated and the -> return : 2
same as it -> would : 2
would be if -> were : 2
be if were -> large : 2
if were large -> enough : 2
were large enough -> to : 2
the entire converted -> parameter : 2
entire converted parameter -> points : 2
converted parameter points -> to : 2
calling in if -> the : 2
the conversion ends -> without : 2
conversion ends without -> a : 2
without a terminating -> null : 2
in the shift -> state : 2
state is reset -> to : 2
reset to an -> initial : 2
to an initial -> return : 1
to an initial -> any : 1
an initial return -> value : 1
initial return value -> is : 1
wide characters successfully -> if : 1
characters successfully if -> any : 1
successfully if any -> multibyte : 1
in in type -> represents : 1
in in type -> integer : 1
in in type -> seek : 1
represents a multibyte -> shift : 1
a multibyte shift -> type : 1
a multibyte shift -> such : 1
multibyte shift type -> is : 1
shift type is -> an : 1
is an pod -> type : 1
an pod type -> that : 1
pod type that -> stores : 1
that stores the -> conversion : 1
that stores the -> the : 1
stores the conversion -> state : 1
conversion state used -> to : 1
state used to -> convert : 1
used to convert -> between : 1
used to convert -> multibyte : 1
used to convert -> to : 1
to convert between -> multibyte : 1
convert between multibyte -> and : 1
between multibyte and -> wide : 1
multibyte and wide -> the : 1
and wide the -> type : 1
wide the type -> is : 2
type is but -> it : 1
not an array -> so : 1
an array so -> an : 1
array so an -> object : 1
so an object -> can : 1
be returned from -> a : 1
from a value -> of : 1
from a value -> in : 1
value of for -> an : 1
an object corresponds -> to : 1
object corresponds to -> the : 1
to the initial -> shift : 2
initial shift although -> other : 1
shift although other -> values : 1
although other values -> might : 1
other values might -> also : 1
values might also -> represent : 1
might also represent -> the : 1
also represent the -> initial : 1
represent the initial -> to : 1
the initial to -> initialize : 1
initial to initialize -> an : 1
initialize an use -> a : 1
an use a -> default : 1
use a default -> mbs : 1
a default mbs -> two : 1
default mbs two -> objects : 1
mbs two objects -> are : 1
two objects are -> they : 1
two objects are -> the : 1
objects are they -> represent : 1
are they represent -> the : 1
they represent the -> same : 2
represent the same -> shift : 1
represent the same -> but : 1
the same shift -> but : 1
same shift but -> the : 1
shift but the -> reverse : 1
but the reverse -> is : 1
the reverse is -> not : 2
reverse is not -> necessarily : 2
not necessarily is -> no : 1
necessarily is no -> way : 1
way to compare -> two : 1
compare two objects -> to : 1
two objects to -> determine : 1
objects to determine -> whether : 1
to determine whether -> they : 1
to determine whether -> a : 2
to determine whether -> years : 1
determine whether they -> represent : 1
whether they represent -> the : 1
same but you -> can : 1
can call to -> determine : 1
can call to -> obtain : 1
call to determine -> whether : 2
determine whether a -> state : 1
determine whether a -> or : 1
determine whether a -> locale : 1
the initial you -> would : 1
initial you would -> use : 1
would use an -> object : 1
an object by -> initializing : 1
object by initializing -> it : 1
by initializing it -> to : 1
initializing it to -> the : 1
initial shift then -> passing : 1
shift then passing -> it : 1
then passing it -> to : 1
passing it to -> any : 1
it to any -> of : 1
multibyte functions as -> each : 1
functions as each -> call : 1
as each call -> to : 1
the multibyte function -> reads : 1
multibyte function reads -> the : 1
reads the shift -> state : 1
shift state and -> uses : 1
state and uses -> that : 1
and uses that -> information : 1
uses that information -> for : 1
that information for -> the : 1
for the updating -> the : 1
the updating the -> shift : 1
updating the shift -> state : 1
shift state depending -> on : 1
state depending on -> which : 1
depending on which -> multibyte : 1
on which multibyte -> characters : 1
which multibyte characters -> were : 1
multibyte characters were -> provided : 1
characters were provided -> as : 1
were provided as -> you : 1
provided as you -> should : 1
as you should -> not : 1
should not alter -> the : 1
not alter the -> object : 1
alter the object -> between : 1
the object between -> calls : 1
object between calls -> to : 1
the multibyte macro -> null : 1
multibyte macro null -> pointer : 1
wide macro writes -> the : 1
character the return -> value : 2
is the character -> converted : 1
is the character -> by : 1
is the character -> is : 1
is the character -> to : 1
to in type -> size : 1
function is similar -> to : 9
similar to except -> it : 2
similar to except -> the : 1
to except it -> stores : 1
to except it -> reads : 1
except it stores -> the : 1
except it stores -> its : 1
stores the formatted -> output : 1
the formatted output -> in : 1
the formatted output -> requires : 1
formatted output in -> a : 1
output in a -> wide : 2
output in a -> manner : 1
a wide and -> the : 4
a wide another -> difference : 2
wide another difference -> is : 3
another difference is -> that : 3
wide characters a -> terminating : 1
characters a terminating -> null : 1
null wide that -> can : 1
wide that can -> be : 1
be written to -> return : 1
wide characters actually -> stored : 1
characters actually stored -> in : 1
actually stored in -> counting : 1
stored in counting -> the : 1
in counting the -> terminating : 1
counting the terminating -> null : 1
null wide or -> a : 1
wide or a -> negative : 1
negative value if -> the : 1
value if the -> formatted : 1
value if the -> array : 2
formatted output requires -> or : 1
output requires or -> more : 1
requires or more -> characters : 1
more characters including -> the : 1
characters including the -> terminating : 2
including the terminating -> null : 2
terminating null in -> function : 2
from a wide -> const : 1
from a wide -> and : 1
except it reads -> from : 1
except it reads -> wide : 1
it reads from -> a : 1
reads from a -> wide : 1
and the string -> is : 1
and the string -> to : 1
string is also -> like : 1
is also like -> the : 1
also like the -> return : 1
like the return -> value : 1
items in struct -> represents : 1
in struct represents -> the : 1
date and it -> is : 1
the same structure -> definition : 1
same structure definition -> as : 1
structure definition as -> that : 1
definition as that -> found : 1
as that found -> in : 1
that found in -> see : 1
found in see -> for : 1
in see for -> struct : 1
see for struct -> in : 1
for struct in -> function : 1
struct in function -> pushes : 1
in function pushes -> back : 1
pushes back a -> wide : 1
back a wide -> function : 1
wide function pushes -> back : 1
back the wide -> character : 1
wide character so -> the : 1
in some situations -> you : 1
some situations you -> may : 1
situations you may -> be : 1
if the pushback -> was : 2
the pushback was -> or : 1
the pushback was -> not : 1
pushback was or -> if : 1
was or if -> the : 1
pushback was not -> in : 1
was not in -> function : 1
not in function -> writes : 1
similar to in -> except : 8
to in except -> it : 7
to in except -> works : 1
in except it -> prints : 3
in except it -> stores : 1
in except it -> formats : 1
in except it -> works : 1
in except it -> reads : 1
except it prints -> wide : 3
it prints wide -> characters : 2
it prints wide -> and : 1
prints wide characters -> to : 2
wide characters to -> and : 2
wide characters to -> the : 1
wide characters to -> their : 1
characters to and -> the : 2
characters to and -> from : 1
a wide in -> function : 3
a wide in -> macro : 1
a wide in -> header : 1
wide in function -> writes : 1
wide in function -> gets : 1
wide in function -> reads : 1
wide in function -> determines : 1
it stores its -> output : 1
stores its output -> in : 1
its output in -> a : 1
is that no -> more : 1
that no more -> than : 1
more than wide -> characters : 1
than wide characters -> are : 1
characters are written -> to : 1
characters are written -> prior : 1
characters are written -> directly : 1
are written to -> including : 1
are written to -> that : 1
written to including -> a : 1
to including a -> terminating : 1
to including a -> object : 1
wide in macro -> largest : 1
in macro largest -> value : 1
macro largest value -> of : 1
largest value of -> a : 1
of a wide -> macro : 2
of a wide -> function : 3
of a wide -> the : 1
of a wide -> type : 2
the largest value -> that : 1
largest value that -> can : 1
be represented by -> the : 2
represented by the -> it : 2
by the it -> is : 2
necessarily a valid -> character : 2
a valid character -> in : 2
valid character in -> the : 2
character in macro -> smallest : 1
in macro smallest -> value : 1
macro smallest value -> of : 1
smallest value of -> a : 1
smallest value that -> can : 1
character in function -> converts : 1
stored at in -> bytes : 1
at in bytes -> are : 1
in bytes are -> and : 1
is is ignores -> and : 1
is ignores and -> converts : 1
ignores and converts -> the : 1
and converts the -> null : 1
wide character using -> a : 1
character using a -> internal : 1
using a internal -> buffer : 1
a internal buffer -> parameter : 1
internal buffer parameter -> points : 1
buffer parameter points -> to : 1
is an internal -> shift : 2
calling in in -> in : 1
calling in in -> class : 2
function concatenates wide -> const : 2
concatenates wide const -> function : 2
wide character in -> a : 1
wide character in -> the : 1
in the wide -> string : 3
wide string if -> does : 2
function compares wide -> const : 3
function compares wide -> strings : 1
compares wide const -> function : 3
compares two wide -> if : 1
compares two wide -> interpreting : 1
two wide if -> the : 2
wide if the -> strings : 2
compares wide strings -> using : 1
wide strings using -> collation : 1
two wide interpreting -> the : 1
wide interpreting the -> strings : 1
function copies wide -> const : 3
function copies wide -> characters : 2
copies wide const -> function : 3
copies the wide -> string : 1
initial characters that -> do : 1
characters that do -> not : 1
do not match -> a : 1
not match a -> span : 1
match a span -> const : 2
wide characters at -> the : 2
wide string the -> in : 1
as a wide -> const : 1
as a wide -> and : 1
wide const const -> function : 3
except it formats -> the : 1
it formats the -> result : 1
formats the result -> as : 1
the result as -> a : 1
result as a -> wide : 1
function gets length -> of : 1
gets length of -> a : 1
wide characters including -> the : 1
null wide in -> in : 1
wide in in -> function : 2
of at wide -> characters : 1
end of you -> must : 1
the concatenated result -> plus : 1
concatenated result plus -> the : 1
result plus the -> null : 1
plus the null -> the : 1
at most wide -> characters : 2
most wide characters -> of : 1
most wide characters -> from : 1
wide characters of -> two : 1
wide characters of -> in : 1
wide characters of -> and : 1
of two wide -> if : 1
from the wide -> string : 1
than null wide -> characters : 1
null wide characters -> are : 1
locates a span -> set : 1
a span set -> member : 1
span set member -> in : 1
set member in -> a : 1
member in a -> wide : 1
of the wide -> characters : 2
of the wide -> is : 1
of the wide -> character : 2
of the wide -> functions : 1
the wide characters -> in : 1
the wide characters -> cannot : 1
wide characters in -> and : 1
characters in appears -> in : 1
in appears in -> returns : 1
appears in returns -> a : 1
pointer in function -> converts : 1
multibyte the parameter -> points : 1
parameter points indirectly -> to : 1
points indirectly to -> the : 1
indirectly to the -> source : 1
the source wide -> that : 1
source wide that -> points : 1
wide that points -> to : 1
the wide is -> not : 1
wide is not -> up : 1
fewer than bytes -> are : 1
bytes are a -> trailing : 1
to the narrow -> character : 1
narrow character if -> conversion : 1
the character immediately -> past : 1
character immediately past -> the : 1
the last wide -> character : 1
last wide character -> parameter : 1
wide character parameter -> can : 1
case no narrow -> characters : 1
no narrow characters -> are : 1
an initial any -> of : 1
initial any of -> the : 1
of bytes successfully -> converted : 1
bytes successfully converted -> from : 1
successfully converted from -> wide : 1
converted from wide -> characters : 1
from wide characters -> counting : 1
wide characters counting -> the : 1
characters counting the -> trailing : 1
counting the trailing -> null : 1
null in in -> function : 1
characters that match -> a : 1
finds a wide -> const : 1
returns the index -> in : 1
the index in -> of : 1
the index in -> the : 1
index in of -> the : 1
to it is -> similar : 3
to it is -> most : 1
to it is -> not : 2
to it is -> equivalent : 1
tokenizes a wide -> const : 1
except it works -> with : 1
it works with -> wide : 1
works with wide -> another : 1
works with wide -> in : 1
with wide another -> difference : 1
it is taking -> a : 1
is taking a -> third : 1
taking a third -> which : 1
a third which -> is : 1
third which is -> the : 1
wide the function -> uses : 1
function uses for -> storing : 1
uses for storing -> working : 1
for storing working -> which : 1
storing working which -> it : 1
working which it -> uses : 1
which it uses -> when : 1
which it uses -> to : 1
it uses when -> is : 1
uses when is -> parse : 1
when is parse -> a : 1
for the final -> pass : 1
the final pass -> the : 1
final pass the -> address : 1
pass the address -> of : 2
a for subsequent -> calls : 1
for subsequent calls -> to : 1
calls to is -> pass : 1
to is pass -> the : 1
is pass the -> address : 1
the same do -> not : 1
same do not -> modify : 1
not modify between -> successive : 1
modify between successive -> calls : 1
between successive calls -> to : 1
calls to when -> parsing : 1
to when parsing -> a : 1
when parsing a -> single : 1
parsing a single -> wide : 1
single wide call -> to : 1
wide call to -> can : 1
a different in -> function : 1
different in function -> converts : 1
function in in -> function : 3
function in in -> class : 1
long long int -> function : 1
transforms a wide -> string : 1
wide string for -> const : 1
transforms the wide -> string : 1
wide string by -> converting : 1
converting each wide -> character : 1
order the functionality -> and : 1
the functionality and -> return : 1
functionality and return -> value : 1
and return value -> are : 1
return value are -> similar : 1
value are similar -> to : 1
in except works -> with : 1
except works with -> wide : 1
with wide in -> in : 1
single the wide -> character : 1
wide character has -> a : 1
character has a -> representation : 1
has a representation -> as : 1
a representation as -> a : 1
a multibyte returns -> that : 1
multibyte returns that -> it : 1
returns that it -> returns : 1
it returns in -> in : 1
returns in in -> macro : 1
returns in in -> function : 6
returns in in -> class : 2
in macro or -> macro : 1
or macro expands -> to : 2
a constant integer -> value : 2
constant integer value -> that : 2
integer value that -> does : 2
value that does -> not : 3
does not correspond -> to : 2
not correspond to -> any : 2
correspond to any -> valid : 2
any valid wide -> character : 2
valid wide character -> unlike : 2
wide character unlike -> is : 2
character unlike is -> not : 2
unlike is not -> guaranteed : 2
is not guaranteed -> to : 2
not guaranteed to -> be : 2
be in type -> integer : 1
in type integer -> representation : 2
type integer representation -> of : 2
integer representation of -> a : 2
a wide type -> is : 2
wide type is -> an : 2
that represents wide -> it : 2
represents wide it -> can : 2
wide it can -> hold : 2
it can hold -> the : 2
can hold the -> value : 2
hold the value -> for : 2
the value for -> any : 2
for any character -> in : 2
for any character -> the : 1
extended character set -> plus : 2
character set plus -> the : 2
set plus the -> value : 2
plus the value -> function : 1
plus the value -> in : 1
the value function -> searches : 1
value function searches -> for : 1
wide function searches -> the : 1
of size wide -> for : 1
size wide for -> the : 1
wide for the -> wide : 1
for the wide -> character : 1
wide character whose -> value : 1
character whose value -> is : 1
the array that -> points : 3
the first wide -> characters : 2
first wide characters -> of : 2
characters of in -> in : 1
characters of and -> if : 1
and if all -> wide : 1
if all wide -> characters : 1
all wide characters -> are : 1
copies wide characters -> from : 2
characters from to -> if : 1
characters from to -> the : 4
function copies overlapping -> wide : 1
copies overlapping wide -> const : 1
overlapping wide const -> function : 1
function fills a -> wide : 1
fills a wide -> string : 1
wide string with -> an : 1
string with an -> function : 1
with an function -> fills : 1
an function fills -> the : 1
writes formatted wide -> function : 1
formatted wide function -> is : 2
wide function is -> similar : 2
prints wide and -> the : 1
reads formatted wide -> function : 1
it reads wide -> and : 1
reads wide and -> the : 1
wide in header -> is : 1
functions for classifying -> and : 1
for classifying and -> converting : 1
classifying and converting -> wide : 1
and converting wide -> of : 1
converting wide of -> the : 1
wide of the -> functions : 1
in this header -> are : 1
this header are -> wide : 1
header are wide -> equivalents : 1
are wide equivalents -> of : 1
wide equivalents of -> functions : 1
equivalents of functions -> found : 1
found in for -> determines : 1
in for determines -> whether : 1
for determines whether -> a : 1
whether a wide -> character : 12
character is just -> as : 1
is just as -> determines : 1
just as determines -> whether : 1
as determines whether -> a : 1
whether a narrow -> character : 1
narrow character is -> the : 1
behavior of the -> wide : 1
behavior of the -> functions : 1
behavior of the -> function : 1
the wide functions -> is : 1
wide functions is -> similar : 1
functions is similar -> to : 1
similar to their -> narrow : 1
to their narrow -> in : 1
their narrow in -> for : 1
narrow in for -> any : 1
in for any -> narrow : 1
for any narrow -> character : 1
any narrow character -> its : 1
narrow character its -> wide : 1
character its wide -> character : 1
its wide character -> equivalent : 1
wide character equivalent -> and : 1
character equivalent and -> classification : 1
equivalent and classification -> functions : 1
and classification functions -> and : 1
classification functions and -> if : 1
functions and if -> is : 1
if is then -> is : 1
is then is -> true : 1
then is true -> and : 1
true and vice -> the : 1
and vice the -> only : 1
vice the only -> exception : 1
the only exception -> is : 1
only exception is -> that : 1
exception is that -> and : 1
that and behave -> slightly : 1
and behave slightly -> differently : 1
behave slightly differently -> than : 1
slightly differently than -> and : 1
differently than and -> for : 1
than and for -> whitespace : 1
and for whitespace -> characters : 1
for whitespace characters -> other : 2
whitespace characters other -> than : 2
characters other than -> behavior : 1
characters other than -> function : 1
other than behavior -> of : 1
than behavior of -> the : 1
the functions depend -> on : 1
functions depend on -> the : 1
the c as -> set : 1
c as set -> with : 1
as set with -> the : 1
set with the -> function : 1
set with the -> contents : 2
function in for -> more : 1
function in for -> an : 2
for more flexibility -> in : 1
more flexibility in -> dealing : 1
flexibility in dealing -> with : 1
dealing with multiple -> you : 1
with multiple you -> can : 1
multiple you can -> use : 1
can use in -> particular : 1
can use in -> other : 1
use in particular -> the : 1
in particular the -> facet : 1
in particular the -> it : 1
in particular the -> if : 1
particular the facet -> in : 1
facet in function -> determines : 1
character is function -> returns : 8
true if either -> or : 1
or is in -> function : 1
is an alphabetic -> that : 1
an alphabetic that -> a : 1
alphabetic that a -> wide : 1
wide character for -> which : 2
character for which -> and : 2
for which and -> all : 2
which and all -> return : 2
and all return -> false : 2
all return false -> in : 2
return false in -> function : 2
false in function -> determines : 1
false in function -> tests : 1
a wide control -> that : 1
wide control that -> a : 1
control that a -> wide : 1
in function tests -> any : 1
function tests any -> category : 2
tests any category -> of : 2
any category of -> a : 1
any category of -> the : 1
category of a -> wide : 1
wide function tests -> any : 1
character the category -> to : 1
the category to -> test : 1
the category to -> write : 5
category to test -> is : 1
to test is -> specified : 1
test is specified -> by : 1
is specified by -> which : 1
is specified by -> the : 2
specified by which -> must : 1
by which must -> be : 2
must be obtained -> by : 1
be obtained by -> calling : 1
obtained by calling -> the : 1
calling the setting -> of : 1
the setting of -> the : 1
setting of the -> category : 1
of the category -> must : 1
the category must -> be : 1
category must be -> the : 1
same for the -> call : 1
same for the -> version : 1
for the call -> to : 1
call to and -> the : 1
and the call -> to : 1
call to that -> returned : 1
call to that -> has : 1
to that returned -> you : 1
that returned you -> can : 1
returned you can -> implement : 1
can implement all -> the : 1
implement all the -> for : 1
all the for -> you : 1
the for you -> can : 1
can implement the -> function : 1
can implement the -> standard : 1
function as return -> function : 1
as return function -> determines : 1
return function determines -> whether : 1
digit of in -> function : 1
of in function -> determines : 1
of in function -> translates : 1
of in function -> sets : 4
of in function -> function : 9
if is true -> and : 1
if is true -> or : 3
if is true -> for : 2
true and is -> note : 1
and is note -> that : 1
that is slightly -> different : 1
that is slightly -> better : 1
different from in -> that : 1
it returns true -> for : 1
true for whitespace -> characters : 1
other than function -> determines : 1
than function determines -> whether : 1
lowercase in function -> determines : 1
is a printable -> wide : 1
a printable wide -> in : 1
printable wide in -> function : 1
true if and -> are : 1
true if and -> have : 1
are in function -> determines : 1
whitespace in function -> determines : 1
uppercase in function -> determines : 1
is a hexadecimal -> function : 1
is a hexadecimal -> digit : 3
a hexadecimal function -> returns : 1
hexadecimal function returns -> true : 1
or of in -> function : 1
in function translates -> a : 1
function translates a -> wide : 1
translates a wide -> function : 1
wide function translates -> the : 1
function translates the -> wide : 1
translates the wide -> character : 1
wide character according -> to : 1
character according to -> the : 1
to the description -> which : 1
the description which -> was : 1
description which was -> returned : 1
which was returned -> from : 1
was returned from -> the : 1
be implemented using -> return : 1
implemented using return -> function : 1
using return function -> converts : 1
return function converts -> a : 1
to function maps -> the : 2
function maps the -> wide : 2
maps the wide -> character : 2
character to if -> is : 2
if is or -> if : 2
if is or -> the : 1
if has no -> lowercase : 1
if has no -> uppercase : 1
has no lowercase -> is : 1
no lowercase is -> returned : 1
lowercase is returned -> in : 1
returned in function -> converts : 1
returned in function -> construct : 1
has no uppercase -> is : 1
no uppercase is -> returned : 1
uppercase is returned -> in : 1
in function construct -> a : 1
function construct a -> function : 1
construct a function -> constructs : 1
construct a function -> object : 2
a function constructs -> a : 2
function constructs a -> object : 2
function constructs a -> function : 1
a object according -> to : 1
to the given -> translation : 1
the given translation -> lists : 1
given translation lists -> the : 1
translation lists the -> properties : 1
lists the properties -> defined : 1
lists the properties -> that : 1
the properties defined -> in : 1
properties defined in -> the : 1
in the translation -> translation : 1
the translation translation -> solid : 1
translation translation solid -> solid : 1
translation solid solid -> solid : 1
solid solid from -> uppercase : 1
solid solid from -> the : 2
solid from uppercase -> to : 1
from uppercase to -> solid : 1
uppercase to solid -> from : 1
to solid from -> lowercase : 1
solid from lowercase -> to : 1
from lowercase to -> type : 1
lowercase to type -> represents : 1
to type represents -> a : 1
represents a wide -> character : 1
wide character type -> is : 1
character type is -> a : 3
character type is -> the : 2
is a scalar -> type : 2
is a scalar -> or : 38
a scalar type -> used : 2
scalar type used -> to : 2
type used to -> represent : 2
used to represent -> character : 2
used to represent -> the : 1
used to represent -> a : 1
to represent character -> mappings : 1
to represent character -> classifications : 1
represent character mappings -> for : 1
character mappings for -> the : 1
mappings for the -> function : 1
the function constructs -> a : 1
constructs a function -> constructs : 1
that describes wide -> characters : 1
describes wide characters -> that : 1
wide characters that -> have : 1
characters that have -> the : 1
have the given -> classification : 1
the given classification -> lists : 1
given classification lists -> the : 1
classification lists the -> properties : 1
the properties that -> are : 1
properties that are -> supported : 1
that are supported -> by : 1
are supported by -> this : 1
supported by this -> classification : 1
by this classification -> classification : 1
this classification classification -> solid : 1
classification classification solid -> solid : 1
classification solid solid -> solid : 1
solid solid type -> represents : 1
solid type represents -> a : 1
represents a character -> type : 1
a character type -> is : 1
a character type -> and : 2
represent character classifications -> for : 1
character classifications for -> the : 1
classifications for the -> macro : 1
the macro or -> macro : 1
be in in -> type : 1
value in header -> is : 1
header is one -> of : 5
the standard container -> template : 5
the standard container -> like : 2
standard container template -> it : 5
container template it -> declares : 5
template it declares -> the : 5
it declares the -> class : 3
it declares the -> which : 2
it declares the -> enumerated : 1
it declares the -> and : 3
it declares the -> see : 1
and a few -> global : 5
a few global -> functions : 1
a few global -> function : 4
few global functions -> that : 1
global functions that -> operate : 1
functions that operate -> on : 2
that operate on -> short : 1
that operate on -> list : 1
that operate on -> and : 2
that operate on -> scalar : 1
that operate on -> vector : 1
operate on short -> for : 1
on short for -> is : 1
short for is -> similar : 1
for is similar -> to : 1
but the performance -> is : 1
is constant when -> adding : 1
is constant when -> accessing : 1
constant when adding -> to : 1
when adding to -> or : 2
adding to or -> removing : 2
to or removing -> from : 2
or removing from -> the : 2
or removing from -> any : 1
or removing from -> anywhere : 1
removing from the -> collection : 1
removing from the -> end : 1
from the collection -> at : 1
the collection at -> the : 1
collection at the -> beginning : 1
beginning and at -> the : 1
at the you -> need : 1
need a vector -> of : 2
vector of that -> behaves : 1
of that behaves -> as : 1
that behaves as -> a : 1
a normal you -> should : 1
normal you should -> use : 1
should use instead -> of : 1
instead of see -> later : 1
instead of see -> for : 1
chapter for an -> and : 1
for an and -> for : 1
an and for -> information : 1
information about containers -> in : 1
information about containers -> function : 1
about containers in -> class : 1
containers in class -> class : 1
in class class -> template : 20
in class class -> header : 1
in class class -> class : 2
template class alloc -> class : 1
class alloc class -> typedef : 3
class alloc class -> public : 4
alloc class typedef -> typename : 2
alloc class typedef -> key : 4
alloc class typedef -> traits : 1
class typedef typename -> typedef : 5
typename typedef typedef -> typedef : 8
typename typedef typedef -> explicit : 5
typename typedef typedef -> class : 3
typedef typedef t -> typedef : 5
t typedef alloc -> typedef : 3
alloc typedef typename -> typedef : 8
typedef typedef explicit -> explicit : 3
typedef typedef explicit -> refs : 2
typedef typedef explicit -> comp : 2
typedef explicit explicit -> const : 3
explicit explicit const -> value : 3
explicit const value -> const : 3
const value const -> template : 3
const value const -> a : 2
value const template -> inputiterator : 2
value const template -> inpit : 1
const template inputiterator -> const : 7
template inputiterator const -> template : 2
template inputiterator const -> comp : 4
template inputiterator const -> x : 1
inputiterator const template -> void : 2
const template void -> inputiterator : 9
const template void -> inpit : 1
template void inputiterator -> void : 7
template void inputiterator -> inputiterator : 2
void inputiterator void -> const : 3
void inputiterator void -> void : 4
inputiterator void const -> iterator : 2
inputiterator void const -> iterators : 1
void const iterator -> iterator : 2
const iterator iterator -> void : 2
const iterator iterator -> bool : 1
iterator void t -> c : 2
void t c -> bool : 2
void t c -> element : 1
void t c -> class : 1
t c bool -> reference : 1
t c bool -> void : 1
c bool reference -> reference : 1
bool reference reference -> reference : 1
reference reference reference -> reference : 2
reference reference reference -> void : 1
reference reference reference -> modifiers : 1
reference reference void -> void : 1
reference void void -> iterator : 1
void void iterator -> const : 3
void void iterator -> iterator : 2
void void iterator -> void : 5
void iterator const -> void : 3
void const template -> void : 3
void inputiterator inputiterator -> void : 1
void inputiterator inputiterator -> iterator : 1
inputiterator inputiterator void -> void : 1
inputiterator void void -> iterator : 5
void iterator iterator -> iterator : 2
void iterator iterator -> void : 1
iterator void void -> class : 2
iterator void void -> list : 1
iterator void void -> observers : 3
iterator void void -> iterator : 1
void class template -> represents : 5
void class template -> implements : 1
void class template -> supports : 3
void class template -> is : 7
void class template -> encapsulates : 1
represents a it -> is : 1
standard container like -> and : 2
container like and -> like : 1
container like and -> a : 1
like and like -> a : 1
and like a -> a : 1
like a a -> deque : 1
a a deque -> yields : 1
a deque yields -> constant : 1
deque yields constant -> performance : 1
yields constant performance -> when : 1
constant performance when -> adding : 2
performance when adding -> and : 1
performance when adding -> to : 1
when adding and -> removing : 1
adding and removing -> items : 1
and removing items -> from : 1
removing items from -> the : 1
from the beginning -> and : 1
from the beginning -> or : 1
from the beginning -> of : 3
of the like -> a : 1
like a performance -> is : 1
a performance is -> constant : 1
constant when accessing -> items : 1
when accessing items -> at : 1
accessing items at -> any : 1
items at any -> index : 1
at any index -> in : 1
in the performance -> for : 1
in the performance -> of : 1
in the performance -> should : 1
the performance for -> inserting : 1
performance for inserting -> or : 1
performance for inserting -> and : 1
for inserting or -> removing : 1
inserting or removing -> items : 1
or removing items -> not : 1
removing items not -> at : 1
items not at -> the : 1
not at the -> start : 1
or end is -> linear : 1
end is linear -> with : 1
respect to the -> size : 1
the inserting items -> at : 1
inserting items at -> the : 1
items at the -> beginning : 1
the all iterators -> become : 1
the all iterators -> and : 1
all iterators become -> all : 1
iterators become all -> references : 1
become all references -> and : 1
all references and -> pointers : 1
references and pointers -> to : 1
pointers to items -> in : 3
to items in -> the : 5
in the deque -> remain : 1
in the deque -> become : 2
in the deque -> with : 1
the deque remain -> after : 1
deque remain after -> inserting : 1
remain after inserting -> in : 1
after inserting in -> the : 1
inserting in the -> middle : 1
all and pointers -> to : 2
the deque become -> erasing : 1
the deque become -> an : 1
deque become erasing -> an : 1
become erasing an -> element : 1
erasing an element -> from : 2
erasing an element -> invalidates : 4
all iterators and -> references : 3
iterators and references -> remain : 3
iterators and references -> that : 2
iterators and references -> to : 1
iterators and references -> also : 1
and references remain -> except : 1
and references remain -> if : 2
references remain except -> those : 1
remain except those -> pointing : 1
except those pointing -> to : 1
those pointing to -> the : 1
to the erased -> after : 1
the erased after -> erasing : 1
erased after erasing -> an : 1
after erasing an -> element : 1
from the middle -> of : 1
deque become an -> empty : 1
become an empty -> const : 1
an empty const -> value : 1
empty const value -> const : 1
value const a -> deque : 1
value const a -> list : 1
const a deque -> with : 1
a deque with -> copies : 2
deque with copies -> of : 2
copies of inputiterator -> const : 1
of inputiterator const -> alloc : 1
inputiterator const alloc -> a : 1
const alloc a -> deque : 1
alloc a deque -> with : 1
elements in unless -> is : 2
in unless is -> an : 2
unless is an -> integral : 9
an integral in -> which : 9
integral in which -> case : 9
case the deque -> is : 1
the deque is -> constructed : 1
the deque is -> an : 1
the deque is -> const : 1
the deque is -> and : 1
the deque is -> the : 1
the deque is -> as : 1
deque is constructed -> as : 1
is constructed as -> though : 3
is constructed as -> a : 1
is constructed as -> or : 4
constructed as though -> the : 3
as though the -> arguments : 3
as though the -> box : 1
though the arguments -> were : 3
the arguments were -> cast : 2
the arguments were -> a : 1
arguments were cast -> as : 2
were cast as -> inputiterator : 1
were cast as -> const : 1
were cast as -> a : 1
were cast as -> all : 1
were cast as -> an : 1
cast as inputiterator -> the : 1
as inputiterator the -> current : 1
inputiterator the current -> contents : 1
the current contents -> of : 3
current contents of -> the : 3
of the deque -> and : 2
of the deque -> to : 2
the deque and -> inserts : 2
deque and inserts -> the : 1
deque and inserts -> copies : 1
and inserts the -> elements : 1
inserts the elements -> in : 1
case the arguments -> are : 6
interpreted as though -> they : 6
as though they -> were : 6
though they were -> cast : 3
though they were -> an : 2
though they were -> const : 1
they were cast -> as : 3
cast as const -> the : 1
as const the -> current : 1
const the current -> contents : 1
and inserts copies -> of : 1
inserts copies of -> the : 4
the allocator the -> element : 1
allocator the element -> at : 1
at index if -> the : 2
at index if -> it : 1
at index if -> has : 2
at index if -> throws : 1
index if the -> behavior : 2
if the behavior -> is : 3
is the element -> at : 1
index if it -> throws : 1
if it throws -> the : 1
it throws the -> last : 1
throws the last -> element : 2
if the deque -> is : 4
deque is an -> iterator : 1
the all elements -> from : 1
all elements from -> the : 1
the an iterator -> that : 4
last element of -> the : 15
the the element -> at : 2
element at iterator -> all : 2
at iterator all -> the : 2
iterator all the -> elements : 2
range the first -> element : 2
range the first -> item : 1
deque is const -> at : 1
is const at -> if : 1
const at if -> is : 1
at if is -> or : 1
at if is -> out : 1
or the performance -> is : 1
performance is at -> any : 1
is at any -> other : 1
other the performance -> is : 5
performance is const -> copies : 1
is const copies -> of : 1
const copies of -> at : 1
copies of at -> inputiterator : 1
copies of at -> the : 1
of at inputiterator -> inputiterator : 1
at inputiterator inputiterator -> the : 1
inputiterator inputiterator the -> elements : 1
inputiterator the elements -> in : 1
starting at unless -> is : 1
at unless is -> an : 1
they were an -> exception : 2
were an exception -> is : 2
exception is such -> as : 3
insufficient memory for -> a : 3
memory for a -> new : 3
a new the -> deque : 1
a new the -> previous : 1
a new the -> list : 1
a new the -> owned : 1
a new the -> vector : 1
new the deque -> is : 1
deque is and -> all : 1
is and all -> iterators : 2
and all iterators -> and : 2
references remain if -> the : 2
remain if the -> exception : 2
if the exception -> is : 2
if the exception -> specification : 1
thrown from an -> copy : 2
from an copy -> constructor : 2
an copy constructor -> or : 2
or assignment the -> behavior : 2
assignment the behavior -> is : 2
the largest possible -> the : 3
the largest possible -> it : 1
the largest possible -> compare : 1
largest possible the -> first : 1
largest possible the -> character : 1
largest possible the -> element : 1
possible the first -> element : 1
deque is the -> last : 1
is the last -> element : 2
deque is as -> the : 1
new first element -> of : 1
new last element -> of : 2
the a reverse -> iterator : 15
a reverse iterator -> that : 17
a reverse iterator -> starts : 1
a reverse iterator -> conceptually : 1
a reverse iterator -> a : 1
a reverse iterator -> following : 1
a reverse iterator -> by : 2
reverse iterator that -> points : 16
reverse iterator that -> adapts : 1
position before the -> first : 8
in the t -> c : 2
the t c -> the : 2
t c the -> size : 2
c the size -> of : 3
the deque to -> if : 1
the deque to -> reach : 1
deque to if -> one : 1
if one or -> more : 3
copies of are -> added : 3
copies of are -> constructed : 1
of are added -> to : 3
deque to reach -> the : 1
to reach the -> desired : 3
to reach the -> new : 3
reach the desired -> if : 3
the desired if -> the : 3
the desired if -> is : 1
desired if the -> new : 3
than the current -> the : 1
than the current -> elements : 2
current the first -> elements : 1
first elements are -> and : 1
elements are and -> elements : 1
are and elements -> are : 1
and elements are -> erased : 1
elements are erased -> from : 3
are erased from -> the : 3
are erased from -> so : 1
from the end -> to : 3
from the end -> of : 1
the end to -> reach : 3
end to reach -> the : 3
reach the new -> all : 1
reach the new -> the : 2
the new all -> the : 1
new all the -> elements : 1
the deque with -> all : 1
deque with all -> the : 1
elements in function -> function : 1
compares two deques -> for : 6
two deques for -> typename : 6
deques for typename -> bool : 6
typename bool const -> operator : 30
typename bool const -> static : 1
typename bool const -> template : 12
typename bool const -> if : 6
returns if and -> are : 1
returns if and -> have : 3
the same size -> and : 5
the same size -> as : 25
same size and -> their : 5
size and their -> elements : 5
and their elements -> are : 5
their elements are -> that : 5
elements are that -> in : 5
are that in -> function : 5
that in function -> function : 5
const operator is -> equivalent : 12
operator is equivalent -> to : 12
to function function -> template : 17
const operator determines -> whether : 5
operator determines whether -> is : 5
determines whether is -> less : 5
whether is less -> than : 5
less than using -> the : 5
than using the -> same : 5
the same algorithm -> as : 5
same algorithm as -> in : 5
algorithm as in -> function : 5
as in function -> function : 5
to function template -> function : 1
function template function -> template : 1
template function template -> specialization : 1
function template specialization -> swaps : 1
function template specialization -> is : 6
template specialization swaps -> the : 1
specialization swaps the -> contents : 1
swaps the contents -> of : 4
contents of two -> typename : 4
contents of two -> class : 1
of two typename -> void : 3
of two typename -> typename : 2
two typename void -> function : 2
two typename void -> template : 1
template specialization is -> equivalent : 6
specialization is equivalent -> to : 6
calling in header -> declares : 4
in header declares -> and : 2
in header declares -> the : 6
in header declares -> class : 1
in header declares -> function : 1
related to fundamental -> exception : 1
to fundamental exception -> see : 1
fundamental exception see -> for : 1
exception see for -> additional : 1
for additional exception -> section : 1
additional exception section -> describes : 1
exception section describes -> a : 1
section describes a -> complicated : 1
describes a complicated -> system : 1
a complicated system -> of : 1
complicated system of -> function : 1
system of function -> and : 1
the end result -> is : 1
end result is -> simpler : 1
result is simpler -> than : 1
is simpler than -> it : 1
simpler than it -> might : 1
than it might -> seem : 1
it might seem -> at : 1
might seem at -> function : 1
seem at function -> can : 1
at function can -> throw : 1
can throw only -> the : 1
throw only the -> exception : 1
only the exception -> types : 1
the exception types -> listed : 1
exception types listed -> in : 1
types listed in -> its : 1
listed in its -> exception : 1
in its exception -> or : 1
its exception or -> else : 1
exception or else -> the : 1
program terminates a -> function : 1
terminates a function -> does : 1
a function does -> not : 1
an exception it -> can : 1
an exception it -> is : 1
exception it can -> throw : 1
it can throw -> any : 1
it can throw -> an : 1
throw any functions -> work : 1
any functions work -> a : 1
functions work a -> little : 1
work a little -> see : 1
see for class -> wrong : 1
for class wrong -> exception : 1
class wrong exception -> public : 1
wrong exception public -> exception : 1
exception public exception -> virtual : 1
public exception virtual -> const : 1
public exception virtual -> virtual : 3
exception virtual const -> const : 1
const const object -> is : 1
const object is -> thrown : 1
const object is -> used : 1
the function when -> throws : 1
function when throws -> an : 1
when throws an -> exception : 1
specification that caused -> to : 1
that caused to -> be : 1
caused to be -> most : 1
to be most -> programs : 1
be most programs -> do : 1
not throw or -> catch : 1
throw or catch -> you : 1
or catch you -> can : 1
or catch you -> must : 1
catch you can -> list : 1
you can list -> in : 1
can list in -> an : 1
list in an -> exception : 1
in an exception -> specification : 1
exception specification if -> you : 1
specification if you -> want : 1
want to handle -> this : 1
to handle this -> unusual : 1
handle this unusual -> situation : 1
this unusual situation -> and : 1
unusual situation and -> this : 1
situation and this -> for : 1
and this for -> more : 1
this for more -> class : 1
for more class -> base : 1
for more class -> class : 2
for more class -> exception : 1
for more class -> type : 1
more class base -> class : 1
all standard virtual -> virtual : 1
standard virtual virtual -> const : 1
virtual virtual const -> const : 5
virtual virtual const -> char : 1
const const class -> is : 2
const const class -> template : 1
const const class -> class : 3
const const class -> describes : 1
const class is -> the : 2
for all exception -> objects : 1
all exception objects -> thrown : 1
exception objects thrown -> by : 1
objects thrown by -> the : 1
thrown by the -> standard : 1
standard library or -> by : 1
library or by -> code : 1
or by code -> generated : 1
by code generated -> by : 1
code generated by -> the : 1
generated by the -> by : 1
by the by -> exception : 1
the by exception -> classes : 1
by exception classes -> also : 1
exception classes also -> derive : 1
classes also derive -> from : 1
also derive from -> or : 1
derive from or -> from : 1
from or from -> one : 1
or from one -> of : 1
one of its -> derived : 1
of its derived -> const : 1
its derived const -> const : 1
derived const const -> a : 1
const const a -> message : 1
const a message -> that : 1
a message that -> describes : 1
a message that -> is : 1
message that describes -> the : 1
that describes the -> nature : 1
that describes the -> punctuation : 1
describes the nature -> of : 1
the exact contents -> of : 2
exact contents of -> the : 2
string are it -> might : 1
are it might -> be : 1
be a multibyte -> which : 1
be a multibyte -> the : 1
a multibyte which -> can : 1
multibyte which can -> be : 1
to a in -> in : 1
to a in -> which : 4
a in in -> in : 1
changes the void -> function : 2
void function saves -> to : 2
function saves to -> be : 2
saves to be -> used : 2
used by calls -> to : 2
by calls to -> the : 2
of the terminate -> handler : 1
the terminate handler -> is : 1
terminate handler is -> function : 1
handler is function -> changes : 1
handler is function -> terminates : 1
is function changes -> the : 1
of the unexpected -> handler : 1
the unexpected handler -> is : 1
unexpected handler is -> function : 1
is function terminates -> program : 1
function terminates program -> when : 1
terminates program when -> exception : 1
program when exception -> handling : 1
when exception handling -> function : 1
exception handling function -> is : 1
handling function is -> called : 1
called when normal -> exception : 1
when normal exception -> handling : 1
normal exception handling -> cannot : 1
normal exception handling -> for : 1
exception handling cannot -> handle : 1
handling cannot handle -> an : 1
cannot handle an -> exception : 1
handle an exception -> for : 1
for any when -> there : 1
any when there -> is : 1
no matching block -> for : 1
matching block for -> an : 1
block for an -> or : 1
or when an -> exception : 1
thrown while the -> stack : 1
while the stack -> is : 1
stack is another -> exception : 1
is another exception -> is : 1
another exception is -> thrown : 1
is thrown by -> a : 1
thrown by a -> program : 1
a program might -> also : 1
program might also -> call : 1
might also call -> can : 1
also call can -> change : 1
call can change -> the : 1
change the behavior -> of : 1
function by calling -> the : 1
the default behavior -> is : 4
the default behavior -> if : 1
default behavior is -> to : 9
to call function -> is : 1
call function is -> a : 1
is a last -> resort : 1
a last resort -> because : 1
last resort because -> normal : 1
resort because normal -> exception : 1
because normal exception -> handling : 1
exception handling for -> this : 1
handling for this -> you : 1
you cannot rely -> on : 1
cannot rely on -> the : 1
on the usual -> destruction : 1
the usual destruction -> of : 1
usual destruction of -> static : 1
of static objects -> and : 1
objects and objects -> on : 1
and objects on -> the : 1
on the function -> in : 1
determines whether exception -> handling : 1
whether exception handling -> is : 2
exception handling is -> currently : 2
handling is currently -> function : 1
handling is currently -> if : 1
is currently function -> returns : 1
currently function returns -> while : 1
function returns while -> an : 1
returns while an -> exception : 1
while an exception -> is : 1
exception is after -> evaluating : 1
is after evaluating -> the : 1
after evaluating the -> argument : 1
evaluating the argument -> of : 1
the argument of -> a : 1
argument of a -> expression : 1
argument of a -> binary : 2
a expression but -> before : 1
expression but before -> a : 1
but before a -> matching : 1
before a matching -> exception : 1
a matching exception -> declaration : 1
matching exception declaration -> is : 1
exception declaration is -> initialized : 1
declaration is initialized -> in : 1
initialized in a -> it : 1
it also returns -> after : 1
also returns after -> is : 1
returns after is -> called : 1
after is called -> not : 1
is called not -> for : 1
called not for -> an : 1
not for an -> explicit : 1
for an explicit -> call : 1
call to it -> returns : 1
it returns at -> other : 1
returns at other -> to : 1
at other to -> learn : 1
other to learn -> whether : 1
learn whether exception -> handling : 1
is currently if -> it : 1
currently if it -> returns : 1
it returns throwing -> a : 1
returns throwing a -> new : 1
throwing a new -> exception : 1
new exception results -> in : 1
exception results in -> a : 1
to function handles -> an : 1
function handles an -> unexpected : 1
handles an unexpected -> exception : 1
an unexpected exception -> a : 1
unexpected exception a -> function : 1
exception a function -> has : 1
a function has -> an : 2
function has an -> exception : 2
exception specification and -> throws : 1
specification and throws -> an : 1
and throws an -> exception : 1
called to handle -> the : 1
to handle the -> unexpected : 1
handle the unexpected -> can : 1
the unexpected can -> implement : 1
unexpected can implement -> your : 1
your own if -> you : 1
own if you -> do : 1
you do you -> must : 1
ensure that does -> not : 1
not return it -> can : 1
return it can -> terminate : 1
it can terminate -> the : 1
can terminate the -> by : 1
terminate the by -> calling : 1
the by calling -> it : 1
by calling it -> can : 1
calling it can -> throw : 1
throw an your -> function : 1
an your function -> throws : 1
your function throws -> an : 1
the exception a -> new : 1
exception a new -> exception : 1
new exception of -> type : 1
exception of type -> is : 1
type is created -> and : 1
created and if -> the : 1
exception specification does -> not : 1
specification does not -> list : 1
does not list -> is : 1
not list is -> called : 1
list is called -> default : 1
is called default -> implementation : 1
called default implementation -> of : 1
of calls other -> if : 1
calls other if -> a : 1
other if a -> function : 1
exception it is -> guaranteed : 1
it is guaranteed -> that : 1
is guaranteed that -> only : 1
guaranteed that only -> the : 1
that only the -> specified : 1
only the specified -> exceptions : 1
the specified exceptions -> can : 1
specified exceptions can -> be : 1
exceptions can be -> thrown : 1
be thrown out -> of : 1
thrown out of -> the : 1
else the application -> will : 1
the application will -> be : 1
the application will -> crash : 1
application will be -> in : 1
will be in -> keyword : 1
be in keyword -> header : 1
in keyword header -> declares : 2
keyword header declares -> classes : 1
keyword header declares -> types : 1
header declares classes -> and : 2
declares classes and -> other : 1
declares classes and -> templates : 1
classes and other -> types : 1
other types for -> performing : 1
other types for -> reading : 1
types for performing -> with : 1
for performing with -> external : 1
performing with external -> a : 1
with external a -> file : 1
external a file -> in : 1
file in is -> a : 1
sequence of a -> narrow : 1
sequence of a -> multibyte : 1
a narrow stream -> or : 1
narrow stream or -> buffer : 1
stream or buffer -> simply : 1
stream or buffer -> reads : 1
or buffer simply -> reads : 1
buffer simply reads -> or : 1
or writes those -> a : 1
writes those a -> wide : 1
those a wide -> stream : 1
a wide stream -> or : 1
wide stream or -> buffer : 1
or buffer reads -> multibyte : 1
buffer reads multibyte -> characters : 1
reads multibyte characters -> and : 1
characters and converts -> them : 1
and converts them -> to : 1
converts them to -> wide : 1
them to wide -> characters : 1
the or converts -> wide : 1
or converts wide -> characters : 1
converts wide characters -> to : 1
characters to their -> multibyte : 1
to their multibyte -> equivalents : 1
their multibyte equivalents -> for : 1
multibyte equivalents for -> and : 1
equivalents for and -> for : 1
and for a -> general : 3
and for a -> thorough : 1
and for a -> discussion : 1
and for a -> few : 1
for a general -> discussion : 3
a general discussion -> of : 3
general discussion of -> and : 2
general discussion of -> for : 1
discussion of and -> related : 1
discussion of and -> the : 1
and related topics -> and : 1
related topics and -> for : 1
topics and for -> more : 1
about character and -> the : 2
character and the -> section : 2
character and the -> underlying : 1
character and the -> third : 1
character and the -> stream : 1
and the section -> in : 2
the section in -> this : 7
section in this -> chapter : 7
about the templates -> required : 2
the templates required -> by : 2
templates required by -> the : 2
the class refer -> to : 3
class refer to -> for : 2
class refer to -> the : 1
information about traits -> in : 2
about traits in -> general : 2
traits in general -> and : 2
general and to -> the : 2
to the section -> in : 5
to the section -> of : 1
chapter for detailed -> information : 2
for detailed information -> about : 2
detailed information about -> the : 2
about the class -> refer : 1
about the class -> open : 1
about the class -> class : 1
about the class -> input : 1
the class open -> a : 1
class open a -> file : 1
open a file -> for : 1
open a file -> and : 1
a file for -> use : 1
file for use -> for : 1
for use for -> use : 1
for use for -> reading : 2
use for use -> for : 2
use for reading -> and : 2
for reading and -> use : 2
for reading and -> writing : 1
for reading and -> that : 2
for reading and -> separate : 2
reading and use -> for : 2
use for wide -> character : 2
wide character use -> or : 2
character use or -> class : 1
character use or -> a : 1
use or class -> class : 1
or class class -> template : 1
or class class -> class : 2
template for file -> class : 1
template for file -> input : 2
template for file -> output : 1
for file class -> traits : 1
file class traits -> class : 1
class traits class -> public : 4
class traits class -> virtual : 1
class traits class -> alloc : 5
class traits class -> typedef : 1
chart typedef typename -> typedef : 11
typename typedef traits -> virtual : 2
typename typedef traits -> explicit : 9
typename typedef traits -> status : 1
typedef traits virtual -> bool : 1
typedef traits virtual -> locale : 1
traits virtual bool -> virtual : 1
virtual bool virtual -> streamsize : 1
virtual bool virtual -> long : 1
bool virtual streamsize -> virtual : 1
virtual streamsize virtual -> virtual : 2
virtual streamsize virtual -> which : 1
virtual streamsize virtual -> int : 1
streamsize virtual virtual -> virtual : 1
streamsize virtual virtual -> which : 1
c virtual c -> virtual : 3
c virtual streamsize -> virtual : 1
c virtual streamsize -> streamsize : 1
virtual virtual which -> virtual : 3
virtual which virtual -> int : 1
virtual which virtual -> which : 3
virtual which virtual -> streamsize : 1
which virtual int -> virtual : 1
virtual int virtual -> void : 1
virtual int virtual -> pattern : 1
virtual int virtual -> virtual : 1
int virtual void -> class : 1
template implements a -> stream : 2
template implements a -> smart : 1
implements a stream -> buffer : 3
a stream buffer -> that : 1
a stream buffer -> and : 1
a stream buffer -> object : 2
a stream buffer -> for : 2
a stream buffer -> is : 1
stream buffer that -> is : 1
that is associated -> with : 1
associated with an -> external : 1
with an external -> the : 1
external the connection -> to : 1
the connection to -> the : 1
connection to the -> external : 1
to the external -> file : 1
to the external -> the : 2
external file is -> equivalent : 1
external file is -> treated : 1
external file is -> closed : 1
file is equivalent -> to : 1
to calling c -> functions : 1
calling c functions -> in : 1
c functions in -> but : 1
functions in but -> may : 1
in but may -> or : 1
but may or -> may : 1
may not actually -> call : 1
not actually call -> the : 1
actually call the -> c : 1
call the c -> for : 1
to calling and -> having : 1
calling and having -> the : 1
and having the -> object : 1
having the object -> store : 1
the object store -> the : 1
object store the -> returned : 1
store the returned -> external : 1
the returned external -> file : 1
returned external file -> is : 1
series of which -> might : 1
which might form -> multibyte : 1
might form multibyte -> when : 1
form multibyte when -> converting : 1
multibyte when converting -> the : 1
when converting the -> multibyte : 1
converting the multibyte -> character : 1
character sequences to -> characters : 1
sequences to characters -> in : 1
to characters in -> the : 1
in the file -> which : 1
in the file -> as : 1
the file which -> are : 1
file which are -> of : 1
which are of -> type : 1
are of type -> the : 1
are of type -> has : 2
type the file -> buffer : 1
the file buffer -> uses : 1
the file buffer -> in : 1
the file buffer -> is : 1
the file buffer -> attempts : 1
the file buffer -> decrements : 1
the file buffer -> object : 3
file buffer uses -> a : 1
buffer uses a -> code : 1
uses a code -> conversion : 1
a code conversion -> facet : 1
code conversion facet -> from : 1
conversion facet from -> the : 1
facet from the -> this : 1
facet from the -> global : 1
the this facet -> is : 1
this facet is -> equivalent : 1
facet is equivalent -> to : 1
equivalent to which -> is : 1
which is declared -> and : 1
is declared and -> initialized : 1
declared and initialized -> as : 1
and initialized as -> typename : 1
initialized as typename -> typename : 1
as typename typename -> of : 1
typename typename of -> the : 1
typename of the -> function : 1
the function descriptions -> in : 1
the function descriptions -> clear : 2
function descriptions in -> this : 1
this section refer -> to : 1
section refer to -> and : 1
to and describe -> assuming : 1
and describe assuming -> that : 1
describe assuming that -> an : 1
assuming that an -> actual : 1
that an actual -> facet : 1
an actual facet -> object : 1
actual facet object -> an : 1
facet object an -> implementation : 1
object an implementation -> does : 1
have to create -> a : 1
create a facet -> object : 1
a facet object -> as : 1
facet object as -> long : 1
object as long -> as : 1
as the file -> stream : 1
as the file -> buffer : 1
the file stream -> acts : 1
file stream acts -> as : 1
stream acts as -> though : 1
acts as though -> it : 1
as though it -> did : 1
though it did -> create : 1
it did create -> and : 1
did create and -> use : 1
create and use -> an : 1
and use an -> explicit : 1
an explicit for -> more : 1
explicit for more -> information : 1
about that is -> essentially : 1
that is essentially -> a : 1
is essentially a -> mapping : 1
essentially a mapping -> a : 1
a mapping a -> character : 1
mapping a character -> to : 1
character to so -> the : 1
so the facet -> is : 1
the facet is -> most : 1
the facet is -> supported : 1
the facet is -> if : 1
facet is most -> important : 1
is most important -> when : 1
most important when -> is : 1
important when is -> for : 1
of the required -> behavior : 1
the required behavior -> of : 1
required behavior of -> a : 1
a stream especially -> for : 1
stream especially for -> the : 1
the virtual functions -> that : 1
the virtual functions -> because : 11
the virtual functions -> to : 1
functions that following -> are : 1
that following are -> the : 1
are the member -> functions : 14
are the member -> the : 1
are the member -> a : 1
are the member -> const : 1
functions of the -> file : 1
functions of the -> but : 1
functions of the -> member : 2
functions of the -> data : 2
functions of the -> locale : 1
functions of the -> stream : 1
functions of the -> current : 1
file buffer in -> a : 1
buffer in a -> closed : 1
in a closed -> and : 1
a closed and -> finalizes : 1
closed and finalizes -> the : 1
and finalizes the -> file : 1
finalizes the file -> the : 1
the file the -> severing : 1
file the severing -> the : 1
the severing the -> connection : 1
severing the connection -> between : 1
the connection between -> the : 1
connection between the -> external : 1
between the external -> file : 1
external file and -> the : 1
external file and -> converted : 1
and the file -> if : 1
the file if -> the : 2
the file if -> neither : 1
file if the -> file : 2
file is already -> it : 1
file is already -> open : 1
is already it -> returns : 1
already it returns -> a : 1
null it calls -> to : 1
it calls to -> flush : 1
calls to flush -> the : 2
to flush the -> output : 7
to flush the -> the : 1
flush the output -> if : 1
flush the output -> buffer : 3
flush the output -> do : 1
flush the output -> stream : 1
flush the output -> prior : 1
the output if -> the : 1
the output if -> return : 1
the output if -> is : 1
output if the -> buffer : 1
if the buffer -> recently : 1
if the buffer -> object : 1
the buffer recently -> called : 1
buffer recently called -> the : 1
recently called the -> external : 1
called the external -> character : 1
the external character -> stream : 1
external character stream -> might : 1
character stream might -> have : 1
stream might have -> an : 1
have an incomplete -> shift : 1
an incomplete shift -> sequence : 1
incomplete shift sequence -> of : 1
shift sequence of -> a : 1
multibyte the function -> therefore : 1
the function therefore -> calls : 1
function therefore calls -> as : 1
therefore calls as -> often : 1
calls as often -> as : 1
as often as -> needed : 1
often as needed -> to : 1
as needed to -> complete : 1
as needed to -> accommodate : 1
complete the shift -> and : 1
the shift and -> then : 1
shift and then -> calls : 1
then calls again -> to : 1
calls again to -> flush : 1
again to flush -> the : 1
flush the the -> external : 1
the the external -> file : 1
is closed by -> calling : 1
closed by calling -> or : 1
calling or its -> return : 1
or its return -> value : 1
its return value -> is : 1
for the file -> in : 1
for the file -> is : 1
the file in -> particular : 1
file in particular -> the : 1
particular the it -> is : 1
safe to change -> the : 1
change the locale -> when : 1
change the locale -> at : 1
the locale when -> the : 1
locale when the -> file : 1
file is positioned -> at : 2
positioned at its -> when : 1
positioned at its -> end : 1
at its when -> the : 1
when the character -> encoding : 1
the character encoding -> is : 1
character encoding is -> not : 1
encoding is not -> or : 1
is not or -> the : 1
not or the -> old : 1
or the old -> and : 1
the old and -> new : 1
the old and -> the : 1
old and new -> locales : 1
and new locales -> have : 1
new locales have -> the : 1
locales have the -> same : 1
file is open -> or : 1
is open or -> if : 1
open or if -> the : 1
is the file -> if : 1
is already open -> returns : 1
already open returns -> a : 1
open returns a -> null : 1
pointer is returned -> the : 1
is returned the -> file : 1
returned the file -> buffer : 1
file buffer is -> initialized : 1
buffer is initialized -> and : 1
is initialized and -> the : 1
is opened by -> calling : 1
opened by calling -> the : 1
calling the equivalent -> of : 4
equivalent of the -> is : 1
equivalent of the -> return : 1
equivalent of the -> c : 1
equivalent of the -> bit : 1
the is determined -> from : 1
the the as -> shown : 1
shown in open -> no : 1
in open no -> other : 1
open no other -> mode : 1
no other mode -> combinations : 1
other mode combinations -> are : 1
mode combinations are -> if : 1
combinations are if -> the : 1
if the includes -> the : 1
the includes the -> opened : 1
includes the opened -> file : 1
the opened file -> is : 1
opened file is -> positioned : 1
at its end -> by : 1
its end by -> calling : 1
end by calling -> the : 1
equivalent of second -> form : 1
of second form -> is : 1
second form is -> it : 3
second form is -> see : 4
form is it -> has : 3
the same functionality -> as : 6
same functionality as -> the : 3
same functionality as -> its : 2
same functionality as -> their : 1
functionality as the -> first : 3
the first see -> in : 3
first see in -> for : 3
is opened is -> the : 1
opened is the -> return : 1
a null open -> open : 1
null open open -> solid : 1
solid solid mode -> solid : 1
solid mode solid -> equivalent : 1
mode solid equivalent -> mode : 1
solid equivalent mode -> solid : 1
equivalent mode solid -> solid : 1
mode solid solid -> solid : 1
solid solid out -> solid : 3
solid out solid -> solid : 3
out solid solid -> solid : 3
solid in solid -> solid : 1
in solid solid -> in : 1
in solid solid -> solid : 2
solid in out -> its : 1
in out its -> output : 1
out its output -> using : 1
its output using -> and : 1
output using and -> writes : 1
using and writes -> the : 1
writes the converted -> characters : 1
the converted characters -> to : 1
converted characters to -> the : 1
the external the -> return : 1
the external the -> behavior : 1
external the return -> value : 1
is for which -> also : 1
for which also -> occurs : 1
which also occurs -> if : 1
also occurs if -> the : 1
occurs if the -> file : 1
file is not -> for : 1
file is not -> the : 1
is not for -> the : 1
not for the -> return : 1
is to push -> back : 2
push back the -> character : 3
push back the -> last : 1
the character so -> it : 2
the character so -> the : 1
character so it -> will : 2
so it will -> be : 2
be the next -> character : 2
next character read -> from : 3
next character read -> would : 1
next character read -> will : 1
character read from -> the : 3
the input if -> a : 2
the input if -> return : 1
the input if -> no : 2
the input if -> returns : 1
the input if -> is : 1
the input if -> there : 1
the input if -> the : 1
input if a -> position : 2
if a position -> is : 3
a position is -> not : 1
a position is -> available : 1
a position is -> the : 1
position is not -> available : 1
position is not -> and : 1
position is not -> the : 1
not available for -> a : 1
available for a -> definition : 1
for a definition -> of : 2
a definition of -> the : 2
file buffer attempts -> to : 1
buffer attempts to -> make : 1
attempts to make -> one : 1
to make one -> available : 1
make one available -> by : 1
one available by -> moving : 1
available by moving -> the : 1
by moving the -> file : 1
moving the file -> is : 1
file is or -> the : 1
same character as -> the : 1
file buffer decrements -> the : 1
buffer decrements the -> if : 1
decrements the if -> the : 1
the input array -> is : 1
the input array -> by : 1
the input array -> will : 1
the input array -> and : 3
the input array -> for : 1
input array is -> is : 1
array is is -> assigned : 1
is is assigned -> to : 1
is is assigned -> if : 1
is is assigned -> is : 1
assigned to and -> is : 1
to and is -> return : 1
to and is -> assigned : 2
and is return -> value : 1
is for failure -> or : 3
is for failure -> and : 1
for failure or -> for : 2
for failure or -> any : 1
failure or for -> to : 1
failure or for -> in : 1
or for to -> seek : 1
or for to -> push : 1
for to seek -> to : 1
to seek to -> a : 3
the file as -> an : 1
file as an -> offset : 1
as an offset -> from : 3
as an offset -> which : 1
an offset from -> a : 3
offset from a -> defined : 1
offset from a -> known : 2
from a defined -> if : 1
a defined if -> the : 1
defined if the -> file : 1
not the attempt -> to : 1
the attempt to -> seek : 1
attempt to seek -> if : 1
to seek if -> the : 1
seek if the -> character : 1
character set encoding -> uses : 1
set encoding uses -> shift : 1
encoding uses shift -> states : 1
uses shift states -> or : 1
shift states or -> otherwise : 1
states or otherwise -> does : 1
or otherwise does -> not : 1
otherwise does not -> have : 1
a fixed size -> per : 1
fixed size per -> must : 1
size per must -> be : 1
per must be -> if : 1
must be if -> the : 1
be if the -> destination : 1
be if the -> iterator : 1
the destination is -> not : 1
destination is not -> the : 1
not the current -> position : 1
current position or -> the : 1
position or the -> output : 1
or the output -> buffer : 1
is flushed and -> unshift : 1
flushed and unshift -> sequences : 1
and unshift sequences -> are : 1
unshift sequences are -> written : 1
sequences are written -> as : 1
written as needed -> the : 1
as needed the -> new : 1
needed the new -> file : 1
new file position -> is : 1
new file position -> or : 1
position is set -> by : 1
position is set -> if : 4
is set by -> calling : 2
equivalent of in -> which : 2
equivalent of in -> class : 1
equivalent of in -> function : 4
equivalent of in -> header : 1
and is determined -> as : 1
determined as shown -> in : 1
in if must -> be : 1
if must be -> so : 1
must be so -> the : 1
must be so -> an : 1
so the call -> is : 1
the call is -> the : 1
call is the -> return : 1
file position or -> for : 1
position or for -> an : 1
the new position -> is : 1
the new position -> as : 2
new position is -> note : 1
new position is -> determined : 2
position is note -> that : 1
note that does -> not : 4
not use its -> final : 1
use its final -> solid : 1
its final solid -> solid : 1
final solid solid -> solid : 1
solid to set -> the : 1
set the file -> position : 1
the file position -> to : 1
position to which -> must : 1
position to which -> the : 1
to which must -> be : 1
of calling or -> on : 1
calling or on -> the : 1
or on the -> same : 1
on the same -> if : 1
same if includes -> the : 1
if includes the -> the : 2
includes the the -> input : 1
includes the the -> output : 1
the the input -> sequence : 1
the input sequence -> is : 3
input sequence is -> if : 1
input sequence is -> of : 1
input sequence is -> moved : 1
sequence is if -> includes : 1
is if includes -> the : 1
the the output -> sequence : 1
output sequence is -> and : 1
and any necessary -> unshift : 1
any necessary unshift -> characters : 1
necessary unshift characters -> are : 1
unshift characters are -> written : 1
are written prior -> to : 1
written prior to -> setting : 1
prior to setting -> the : 1
to setting the -> file : 1
setting the file -> if : 1
file if neither -> bit : 1
if neither bit -> is : 2
neither bit is -> set : 1
neither bit is -> or : 1
set in an -> error : 1
you call before -> any : 1
call before any -> operations : 1
before any operations -> are : 1
any operations are -> performed : 1
operations are performed -> on : 1
are performed on -> a : 1
performed on a -> the : 1
a the file -> is : 1
file is set -> to : 1
any other argument -> the : 1
other argument the -> return : 1
argument the return -> value : 1
is an estimate -> of : 1
an estimate of -> the : 2
estimate of the -> number : 2
of characters immediately -> available : 2
characters immediately available -> for : 2
immediately available for -> other : 1
immediately available for -> if : 1
available for other -> it : 1
for other it -> does : 1
other it does -> the : 1
it does the -> same : 1
thing as the -> base : 1
as the base -> class : 1
as the base -> for : 1
base class output -> to : 1
class output to -> the : 1
behavior for input -> is : 1
for input is -> the : 1
input is the -> input : 1
input is the -> state : 5
input buffer in -> the : 1
as the input -> multibyte : 1
the input multibyte -> characters : 1
input multibyte characters -> are : 1
from the external -> file : 1
from the external -> and : 2
file and converted -> to : 1
converted to characters -> by : 1
to characters by -> calling : 1
characters by calling -> the : 1
of in class -> class : 3
of in class -> generalized : 1
of in class -> slice : 1
for file input -> and : 1
for file input -> class : 1
file input and -> output : 1
and output class -> class : 1
and output class -> is : 1
and output class -> specializes : 2
output class class -> public : 1
output class class -> class : 2
output class class -> const : 1
typedef traits explicit -> mode : 4
typedef traits explicit -> virtual : 2
typedef traits explicit -> which : 3
traits explicit mode -> bool : 3
traits explicit mode -> explicit : 1
explicit mode bool -> void : 3
mode bool void -> mode : 3
bool void mode -> void : 3
void mode void -> class : 1
void mode void -> void : 2
mode void class -> template : 1
class template supports -> reading : 2
class template supports -> writing : 1
template supports reading -> and : 1
template supports reading -> from : 1
supports reading and -> writing : 1
and writing to -> and : 2
and writing to -> strings : 1
and writing to -> character : 1
and writing to -> header : 1
writing to and -> from : 1
writing to and -> for : 1
and from named -> files : 1
from named files -> using : 2
named files using -> a : 3
files using a -> for : 3
using a for -> a : 3
function the file -> buffer : 3
file buffer object -> is : 3
buffer object is -> assumed : 3
object is assumed -> to : 3
is assumed to -> be : 3
is assumed to -> point : 1
assumed to be -> a : 3
be a private -> data : 3
a private data -> member : 4
private data member -> with : 3
private data member -> that : 1
data member with -> the : 3
data member with -> its : 1
member with the -> name : 3
member with the -> return : 2
the name initializes -> the : 1
name initializes the -> base : 1
initializes the base -> class : 1
base class with -> and : 3
class with and -> initializes : 3
with and initializes -> with : 3
and initializes with -> its : 3
initializes with its -> default : 3
with its default -> the : 4
its default the -> base : 3
its default the -> data : 1
default the base -> class : 3
then calls if -> returns : 3
calls if returns -> a : 3
calls if returns -> is : 1
calls if returns -> sets : 1
if returns a -> null : 3
if returns a -> positive : 1
if returns a -> do : 1
null the constructor -> calls : 3
the constructor calls -> if : 3
constructor calls if -> that : 3
calls if that -> function : 4
if that function -> returns : 3
if that function -> calls : 3
that function returns -> a : 3
a null calls -> if : 1
a null calls -> the : 2
null calls if -> that : 1
that function calls -> class : 3
function calls class -> class : 3
calls class class -> in : 3
class class in -> in : 16
class class in -> class : 17
class class in -> header : 2
class class in -> function : 6
class in in -> class : 15
class in in -> header : 1
in in class -> class : 8
in in class -> file : 1
in in class -> initialization : 1
in in class -> input : 3
in in class -> output : 2
in in class -> narrow : 2
in in class -> wide : 4
in in class -> stream : 1
in in class -> character : 1
in in class -> buffer : 1
in in class -> specialized : 1
in in class -> bit : 1
file input class -> traits : 1
input class traits -> class : 1
mode void void -> class : 2
supports reading from -> named : 1
reading from named -> files : 1
name the base -> class : 2
null calls the -> second : 2
in for if -> that : 2
for if that -> function : 2
for file output -> class : 1
file output class -> traits : 1
output class traits -> class : 2
template supports writing -> to : 1
supports writing to -> named : 1
writing to named -> files : 1
to named files -> using : 1
in class file -> class : 1
class file class -> is : 1
file class is -> a : 5
template for class -> class : 15
for class class -> class : 9
for class class -> in : 13
for class class -> bool : 6
class class input -> and : 1
class input and -> output : 3
and output file -> class : 1
output file class -> is : 2
class in class -> input : 2
class in class -> output : 1
class in class -> wide : 5
class in class -> narrow : 1
class in class -> class : 7
class in class -> tag : 1
in class input -> file : 1
in class input -> class : 1
in class input -> string : 1
in class input -> and : 2
class input file -> class : 1
input file class -> is : 1
for a file -> using : 1
for a file -> stream : 2
file using ifstream -> and : 2
using ifstream and -> shows : 1
using ifstream and -> for : 1
ifstream and shows -> a : 1
and a file -> using : 1
ifstream and for -> for : 1
and for for -> cerr : 1
for for cerr -> int : 1
for cerr int -> if : 1
cerr int if -> copy : 1
int if copy -> from : 1
if copy from -> return : 1
copy from return -> open : 1
from return open -> the : 1
return open the -> input : 1
return open the -> output : 1
open the input -> if : 1
input if return -> open : 1
if return open -> the : 1
open the output -> if : 1
output if return -> copy : 1
if return copy -> the : 1
return copy the -> input : 1
copy the input -> to : 1
the one character -> at : 1
at a char -> while : 1
a char while -> make : 1
char while make -> sure : 1
while make sure -> the : 1
sure the output -> was : 1
the output was -> if : 1
output was if -> return : 1
was if return -> class : 1
if return class -> class : 1
return class class -> in : 1
return class class -> template : 1
return class class -> class : 1
in class output -> file : 1
in class output -> string : 1
in class output -> character : 1
class output file -> class : 1
in class wide -> character : 5
in class wide -> input : 3
in class wide -> output : 2
class wide character -> file : 1
class wide character -> input : 2
class wide character -> output : 1
class wide character -> string : 2
wide character file -> class : 1
character file class -> is : 1
class class wide -> character : 1
class class wide -> input : 1
wide character input -> and : 1
wide character input -> class : 1
character input and -> output : 1
output class is -> a : 2
character input class -> is : 1
input class is -> a : 1
wide character output -> class : 1
character output class -> is : 1
character output class -> chart : 1
class in header -> defines : 1
class in header -> declares : 1
in header defines -> several : 1
header defines several -> or : 1
header defines several -> standard : 1
defines several or -> a : 1
several or a -> function : 1
function object is -> an : 1
has an so -> it : 1
an so it -> can : 1
called using the -> same : 1
same syntax as -> a : 1
syntax as a -> function : 1
a function objects -> are : 1
objects are most -> often : 1
the standard to -> copy : 1
standard to copy -> a : 1
copy a sequence -> of : 1
sequence of adding -> a : 1
of adding a -> fixed : 1
adding a fixed -> amount : 1
a fixed amount -> to : 1
fixed amount to -> each : 1
amount to each -> you : 1
each you could -> use : 1
use the following -> result : 1
the following result -> of : 1
following result of -> combining : 1
result of combining -> and : 1
of combining and -> is : 1
combining and is -> a : 1
object that adds -> the : 1
that adds the -> value : 1
adds the value -> when : 1
the value when -> it : 1
value when it -> is : 1
it is applied -> to : 2
applied to any -> the : 1
to any the -> algorithm : 1
to any the -> function : 1
to any the -> behavior : 1
any the algorithm -> copies : 1
elements from to -> applying : 1
elements from to -> the : 1
from to applying -> the : 1
to applying the -> functional : 1
applying the functional -> argument : 1
the functional argument -> to : 1
functional argument to -> each : 1
argument to each -> see : 1
to each see -> the : 1
each see the -> detailed : 1
see the detailed -> description : 1
the detailed description -> of : 1
detailed description of -> and : 1
description of and -> in : 1
of and in -> this : 1
and in this -> section : 1
section for standard -> function : 1
for standard function -> objects : 1
objects are defined -> for : 1
are defined for -> for : 1
are defined for -> the : 2
are defined for -> that : 1
defined for for -> binding : 1
for for binding -> function : 1
for binding function -> and : 1
binding function and -> for : 1
function and for -> adapting : 1
and for adapting -> member : 1
for adapting member -> as : 1
adapting member as -> function : 1
member as function -> defines : 1
as function defines -> functionals : 1
function defines functionals -> that : 1
defines functionals that -> extend : 1
functionals that extend -> and : 1
that extend and -> improve : 1
extend and improve -> on : 1
and improve on -> those : 1
improve on those -> in : 1
on those in -> the : 1
class template base -> class : 12
template base class -> for : 11
template base class -> template : 1
class for binary -> typename : 1
for binary typename -> typename : 1
binary typename typename -> struct : 1
struct typedef typedef -> typedef : 2
struct typedef typedef -> t : 2
struct typedef typedef -> const : 1
typedef typedef result -> template : 1
typedef result template -> is : 2
result template is -> a : 2
template for all -> the : 1
template for all -> class : 1
all the function -> classes : 2
the function classes -> that : 2
function classes that -> represent : 2
classes that represent -> binary : 1
classes that represent -> unary : 1
that represent binary -> it : 1
represent binary it -> provides : 1
binary it provides -> standard : 1
it provides standard -> names : 2
provides standard names -> for : 2
standard names for -> the : 2
argument and result -> base : 1
argument and result -> class : 1
and result base -> template : 1
result base template -> has : 1
base template has -> separate : 1
has separate template -> parameters : 1
separate template parameters -> for : 1
template parameters for -> each : 1
parameters for each -> of : 1
for each of -> the : 1
types and the -> return : 1
the return many -> of : 1
return many of -> the : 1
many of the -> predefined : 1
the predefined function -> objects : 1
predefined function objects -> in : 1
function objects in -> this : 1
objects in this -> section : 1
this section use -> the : 1
section use the -> same : 1
same type for -> all : 1
type for all -> three : 1
for all three -> but : 1
all three but -> you : 1
three but you -> can : 1
can use different -> types : 1
use different types -> when : 1
different types when -> defining : 1
types when defining -> your : 1
when defining your -> own : 1
defining your own -> function : 1
your own function -> as : 2
your own function -> sets : 1
own function as -> shown : 2
function as shown -> in : 2
shown in to -> round : 1
in to round -> off : 1
off a to -> round : 1
a to round -> off : 1
off a functional -> for : 1
a functional for -> a : 1
functional for a -> binary : 1
functional for a -> pointer : 2
binary function that -> rounds : 1
that rounds off -> a : 1
rounds off a -> number : 1
off a number -> type : 1
a number type -> to : 1
number type to -> a : 1
to a certain -> number : 1
a certain number -> of : 1
certain number of -> decimal : 1
of decimal places -> as : 1
decimal places as -> an : 1
places as an -> struct : 1
as an struct -> roundoff : 1
an struct roundoff -> fltt : 1
struct roundoff fltt -> unsigned : 1
roundoff fltt unsigned -> const : 1
fltt unsigned const -> fltt : 1
unsigned const fltt -> y : 1
const fltt y -> fltt : 1
fltt y fltt -> z : 1
y fltt z -> x : 1
fltt z x -> return : 1
z x return -> copy : 1
x return copy -> seq : 1
return copy seq -> to : 1
copy seq to -> rounding : 1
seq to rounding -> off : 1
to rounding off -> to : 1
off to two -> decimal : 1
to two decimal -> class : 1
two decimal class -> class : 1
decimal class class -> class : 1
class template logical -> negation : 2
template logical negation -> of : 2
negation of a -> binary : 1
negation of a -> unary : 1
of a binary -> class : 3
a binary class -> public : 3
a binary class -> class : 1
binary class public -> typename : 3
public typename explicit -> bool : 1
typename explicit bool -> typename : 1
explicit bool typename -> const : 1
explicit bool typename -> class : 1
bool typename const -> typename : 1
typename const typename -> class : 1
typename const typename -> typename : 2
const typename class -> template : 2
typename class template -> is : 4
typename class template -> implements : 1
typename class template -> declares : 1
typename class template -> represents : 1
a binary functional -> that : 6
a binary functional -> in : 13
binary functional that -> returns : 2
binary functional that -> wraps : 4
functional that returns -> the : 2
negation of another -> binary : 1
negation of another -> unary : 1
of another binary -> returns : 1
another binary returns -> the : 1
binary returns the -> simplest : 1
returns the simplest -> way : 2
way to use -> is : 2
way to use -> a : 1
to use is -> to : 2
use is to -> use : 2
the function class -> class : 7
creates a function -> typename : 2
creates a function -> object : 3
creates a function -> template : 2
a function typename -> const : 2
a function typename -> typename : 1
function typename const -> function : 2
typename const function -> is : 2
is a convenient -> way : 4
is a convenient -> template : 1
way to construct -> a : 4
way to construct -> and : 10
construct a use -> when : 2
a use when -> you : 2
use when you -> have : 2
when you have -> a : 2
have a binary -> function : 2
binary function and -> always : 2
function and always -> want : 2
and always want -> to : 2
always want to -> supply : 2
want to supply -> the : 2
to supply the -> same : 2
supply the same -> value : 2
the you have -> a : 2
the you have -> no : 1
have a container -> of : 2
a container of -> data : 2
a container of -> one : 1
a container of -> as : 1
container of data -> and : 2
of data and -> you : 2
data and you -> want : 2
want to count -> the : 2
number of points -> that : 2
of points that -> exceed : 2
points that exceed -> a : 2
that exceed a -> other : 1
that exceed a -> here : 1
exceed a other -> where : 1
a other where -> the : 1
other where the -> threshold : 1
where the threshold -> is : 1
the threshold is -> less : 1
threshold is less -> than : 1
to the data -> here : 1
to the data -> member : 3
to the data -> if : 1
the data here -> is : 1
data here is -> one : 1
here is one -> way : 2
is one way -> to : 3
to do function -> function : 2
do function function -> class : 2
exceed a here -> is : 1
a here is -> one : 1
class template binds -> a : 2
template binds a -> value : 2
binds a value -> to : 2
first argument of -> a : 1
public typename typename -> operation : 2
public typename typename -> typename : 1
typename typename operation -> typename : 2
typename operation typename -> const : 2
operation typename const -> typename : 2
is a unary -> functional : 8
a unary functional -> that : 7
a unary functional -> in : 1
unary functional that -> binds : 2
unary functional that -> wraps : 4
unary functional that -> performs : 1
functional that binds -> a : 2
that binds a -> fixed : 2
binds a fixed -> value : 2
a fixed value -> as : 2
fixed value as -> the : 2
argument to a -> binary : 2
to a binary -> function : 2
to a binary -> class : 1
binary function the -> constructor : 2
function the constructor -> initializes : 2
the constructor initializes -> the : 2
constructor initializes the -> and : 2
initializes the and -> data : 2
the and data -> members : 2
and data members -> with : 2
members with the -> and : 2
members with the -> same : 11
member function returns -> the : 2
returns the function -> template : 2
returns the function -> copies : 1
template for an -> easier : 10
for an easier -> way : 10
an easier way -> to : 10
easier way to -> construct : 10
to construct and -> use : 10
construct and use -> the : 10
the class function -> function : 3
second argument of -> a : 1
class template calls -> a : 8
calls a member -> function : 8
of a constant -> reference : 3
of a constant -> class : 2
of a constant -> object : 1
a constant reference -> typename : 1
a constant reference -> object : 2
constant reference typename -> class : 1
reference typename class -> public : 2
class public explicit -> rtn : 10
class public explicit -> bool : 1
class public explicit -> refs : 2
class public explicit -> class : 1
public explicit rtn -> class : 6
public explicit rtn -> arg : 4
explicit rtn class -> template : 6
rtn class template -> is : 6
functional that wraps -> a : 8
wraps a member -> function : 8
wraps a member -> in : 2
function the template -> parameter : 8
the member return -> and : 4
the member return -> the : 4
member return and -> the : 4
return and the -> template : 4
that declares the -> member : 8
declares the member -> the : 4
declares the member -> and : 4
member the argument -> to : 4
to the constructor -> is : 8
to the constructor -> as : 1
to the constructor -> for : 12
constructor is a -> pointer : 8
to the member -> which : 4
to the member -> the : 4
to the member -> function : 4
to the member -> allowing : 1
the member which -> takes : 4
member which takes -> no : 4
which takes no -> the : 4
takes no the -> member : 4
no the member -> function : 4
is called from -> using : 8
is called from -> a : 1
is called from -> if : 1
called from using -> a : 8
from using a -> reference : 4
from using a -> pointer : 4
using a reference -> to : 4
a constant class -> class : 2
constant class class -> public : 2
constant class class -> class : 1
using a pointer -> to : 4
constant reference object -> with : 2
reference object with -> an : 2
with an typename -> typename : 4
an typename typename -> class : 4
explicit rtn arg -> class : 4
rtn arg class -> template : 4
arg class template -> is : 4
member return the -> template : 4
return the template -> parameter : 4
member and the -> template : 5
the member sole -> argument : 4
member sole argument -> to : 4
constant object with -> an : 1
class template binary -> functional : 14
template binary functional -> to : 6
template binary functional -> for : 8
binary functional to -> struct : 1
binary functional to -> compare : 5
functional to struct -> t : 1
to struct t -> const : 1
struct t const -> class : 5
t const class -> template : 5
binary functional in -> which : 13
functional in which -> returns : 14
which returns class -> class : 12
functional to compare -> for : 5
to compare for -> struct : 5
compare for struct -> bool : 5
for struct bool -> const : 6
struct bool const -> class : 8
binary functional for -> logical : 3
binary functional for -> struct : 4
binary functional for -> modulus : 1
functional for logical -> struct : 3
for logical struct -> bool : 3
logical struct bool -> const : 2
logical struct bool -> class : 1
which returns note -> that : 2
note that no -> occurs : 2
that no occurs -> because : 2
no occurs because -> both : 2
occurs because both -> arguments : 2
because both arguments -> must : 2
both arguments must -> be : 2
arguments must be -> evaluated : 2
must be evaluated -> before : 2
be evaluated before -> can : 2
evaluated before can -> be : 2
before can be -> class : 2
can be class -> class : 2
be class class -> class : 2
struct bool class -> template : 1
bool class template -> is : 2
bool class template -> wraps : 1
unary functional in -> which : 1
object to call -> a : 2
member function via -> a : 2
function via a -> typename : 2
via a typename -> typename : 2
typename typename function -> template : 2
member function as -> an : 2
that can call -> the : 2
call the member -> the : 2
call the member -> function : 2
the function object -> must : 2
function object must -> be : 2
object must be -> applied : 2
must be applied -> to : 2
be applied to -> a : 1
be applied to -> an : 1
applied to a -> pointer : 1
derived the template -> parameter : 1
has the member -> the : 2
member the optional -> template : 2
the optional template -> parameter : 2
optional template parameter -> is : 2
function is usually -> the : 2
usually the simplest -> way : 2
way to create -> a : 7
create a function -> object : 2
object that wraps -> a : 4
object that wraps -> the : 1
a member in -> normal : 2
member in normal -> the : 2
in normal the -> compiler : 2
normal the compiler -> deduces : 2
deduces the template -> you : 2
template you have -> an : 2
you have an -> class : 2
have an class -> and : 2
an class and -> a : 2
class and a -> container : 2
and a container -> of : 2
container of one -> of : 1
functions of is -> which : 2
of is which -> returns : 2
is which returns -> a : 2
which returns a -> if : 2
returns a if -> the : 2
if the employee -> is : 4
the employee is -> lucky : 2
the employee is -> a : 2
employee is lucky -> and : 2
is lucky and -> gets : 2
lucky and gets -> a : 2
and gets a -> bonus : 2
gets a bonus -> this : 2
a bonus this -> and : 1
a bonus this -> or : 1
bonus this and -> if : 1
this and if -> the : 1
employee is a -> member : 2
member function called -> via : 6
function called via -> a : 6
called via a -> pointer : 4
called via a -> reference : 2
pointer as a -> function : 4
pointer as a -> random : 2
how to remove -> all : 2
remove all the -> unlucky : 2
all the unlucky -> employees : 2
the unlucky employees -> from : 3
unlucky employees from -> the : 3
employees from the -> a : 2
employees from the -> class : 1
a function employee -> int : 2
function employee int -> const : 2
employee int const -> return : 2
const return fill -> empptrs : 1
const return fill -> emps : 1
return fill empptrs -> with : 1
fill empptrs with -> pointers : 1
empptrs with pointers -> to : 1
pointers to employee -> remove : 1
to employee remove -> the : 1
employee remove the -> employees : 1
remove the employees -> who : 1
the employees who -> will : 2
employees who will -> not : 2
who will not -> receive : 2
will not receive -> last : 1
will not receive -> the : 1
not receive last -> class : 1
receive last class -> class : 1
last class class -> class : 1
applied to an -> object : 1
applied to an -> expression : 1
type a derived -> the : 1
object is passed -> by : 1
is passed by -> reference : 1
passed by reference -> to : 1
by reference to -> the : 1
member the template -> parameter : 1
container of as -> in : 1
of as in -> a : 1
as in a -> member : 1
a function one -> of : 1
function one of -> the : 1
bonus this or -> if : 1
this or if -> the : 1
via a reference -> as : 2
a reference as -> a : 2
reference as a -> function : 2
return fill emps -> with : 1
fill emps with -> employee : 1
emps with employee -> erase : 1
with employee erase -> the : 1
employee erase the -> employees : 1
erase the employees -> who : 1
not receive the -> call : 1
receive the call -> to : 1
call to rearranges -> the : 1
to rearranges the -> call : 1
rearranges the call -> to : 1
to erase removes -> the : 1
erase removes the -> unlucky : 1
removes the unlucky -> employees : 1
a reference typename -> class : 1
function of an -> object : 1
functional for struct -> t : 3
functional for struct -> bool : 1
for struct t -> const : 3
functional for modulus -> struct : 1
for modulus struct -> t : 1
modulus struct t -> const : 1
class template unary -> functional : 1
template unary functional -> for : 1
unary functional for -> arithmetic : 1
functional for arithmetic -> struct : 1
for arithmetic struct -> t : 1
arithmetic struct t -> class : 1
struct t class -> template : 1
functional that performs -> arithmetic : 1
that performs arithmetic -> that : 1
performs arithmetic that -> returns : 1
arithmetic that returns -> class : 1
that returns class -> class : 1
template returns a -> function : 2
object that performs -> the : 2
performs the logical -> negation : 2
negation of see -> a : 1
of see a -> member : 1
see a member -> function : 1
a function earlier -> in : 1
this class class -> function : 1
this class class -> in : 1
negation of class -> class : 1
of class class -> class : 1
of class class -> typedef : 1
of class class -> in : 3
class template functional -> for : 2
template functional for -> a : 2
binary class class -> class : 1
wraps a pointer -> to : 2
ordinary function that -> takes : 2
two the function -> template : 1
is the most -> convenient : 2
the most convenient -> way : 5
most convenient way -> to : 5
create a class -> class : 2
a class class -> function : 3
a class class -> template : 1
a class class -> chart : 1
to a unary -> typename : 1
a unary typename -> class : 1
unary typename class -> public : 1
creates a pointer -> to : 1
function typename typename -> template : 1
typename typename template -> typename : 1
typename template typename -> function : 1
template typename function -> template : 1
function object from -> a : 1
object from a -> pointer : 1
a the resulting -> function : 1
the resulting function -> object : 1
resulting function object -> has : 1
function object has -> an : 1
object has an -> that : 1
object has an -> associated : 1
has an that -> calls : 1
an that calls -> the : 1
calls the functions -> of : 1
the functions of -> one : 1
of one and -> two : 1
one and two -> arguments : 1
and two arguments -> are : 1
two arguments are -> suppose : 1
arguments are suppose -> you : 1
are suppose you -> have : 1
you have two -> numeric : 1
have two numeric -> and : 1
two numeric and -> and : 1
numeric and and -> you : 1
and and you -> want : 1
want to raise -> each : 1
to raise each -> element : 1
raise each element -> of : 1
element of to -> the : 1
power of the -> corresponding : 1
the corresponding element -> in : 3
the corresponding element -> from : 1
the corresponding element -> of : 1
corresponding element in -> saving : 1
corresponding element in -> the : 2
element in saving -> the : 1
in saving the -> result : 1
saving the result -> in : 1
the result in -> a : 1
result in a -> third : 1
in a third -> there : 1
a third there -> is : 1
third there is -> no : 1
is no predefined -> power : 1
no predefined power -> function : 1
predefined power function -> so : 1
power function so -> you : 1
function so you -> can : 1
can use and -> your : 1
use and your -> own : 1
and your own -> function : 1
in the pow -> function : 1
the pow function -> in : 2
pow function in -> a : 2
function the pow -> function : 1
a function double -> double : 1
function double double -> return : 1
double return function -> function : 1
return function function -> function : 1
return function function -> class : 1
return function function -> template : 1
of a unary -> class : 1
a unary class -> public : 1
unary class public -> explicit : 1
public explicit bool -> typename : 1
bool typename class -> template : 1
of another unary -> returns : 1
another unary returns -> the : 1
unary returns the -> simplest : 1
class for unary -> typename : 1
for unary typename -> struct : 1
unary typename struct -> typedef : 1
struct typedef arg -> typedef : 1
typedef arg typedef -> result : 1
arg typedef result -> template : 1
that represent unary -> it : 1
represent unary it -> provides : 1
unary it provides -> standard : 1
and result class -> class : 1
result class class -> class : 1
class class header -> declares : 3
class class header -> is : 1
class header declares -> several : 2
class header declares -> classes : 1
header declares several -> an : 1
header declares several -> function : 1
header declares several -> classes : 1
declares several an -> manipulator : 1
several an manipulator -> is : 1
an manipulator is -> a : 1
manipulator is a -> function : 1
in a sequence -> of : 1
in a sequence -> or : 1
sequence of input -> or : 1
of input or -> output : 1
or output operators -> to : 1
output operators to -> manipulate : 1
operators to manipulate -> the : 1
manipulate the the -> manipulators : 1
the the manipulators -> are : 1
the manipulators are -> simple : 1
manipulators are simple -> wrappers : 1
are simple wrappers -> for : 1
simple wrappers for -> functionality : 1
wrappers for functionality -> that : 1
for functionality that -> is : 1
functionality that is -> available : 1
that is available -> as : 1
is available as -> member : 1
available as member -> functions : 1
the but manipulators -> are : 1
but manipulators are -> simpler : 1
manipulators are simpler -> to : 1
are simpler to -> use : 1
simpler to use -> in : 1
use in some -> to : 1
in some to -> print : 1
some to print -> formatted : 1
to print formatted -> the : 1
print formatted the -> following : 1
formatted the following -> two : 1
following two code -> fragments : 1
two code fragments -> are : 1
code fragments are -> using : 1
fragments are using -> manipulators : 1
are using manipulators -> without : 1
using manipulators without -> manipulators : 1
manipulators without manipulators -> a : 1
without manipulators a -> basic : 1
manipulators a basic -> manipulators : 1
a basic manipulators -> are : 1
basic manipulators are -> easy : 1
manipulators are easy -> to : 1
are easy to -> if : 1
easy to if -> you : 1
want to understand -> exactly : 1
to understand exactly -> how : 1
understand exactly how -> they : 1
exactly how they -> perhaps : 1
how they perhaps -> to : 1
they perhaps to -> write : 1
perhaps to write -> your : 1
write your see -> and : 1
for a thorough -> discussion : 1
a thorough discussion -> of : 1
thorough discussion of -> including : 1
discussion of including -> with : 1
of including with -> no : 1
including with no -> return : 1
with no return -> type : 1
no return type -> of : 1
of each manipulator -> is : 1
each manipulator is -> for : 1
manipulator is for -> the : 1
following function this -> type : 1
function this type -> is : 1
this type is -> shown : 1
type is shown -> as : 1
is shown as -> a : 1
shown as a -> manipulator : 1
as a manipulator -> by : 1
a manipulator by -> applying : 1
manipulator by applying -> it : 1
by applying it -> to : 1
applying it to -> a : 1
instance of or -> in : 1
of or in -> which : 1
following function refers -> to : 1
function refers to -> the : 1
the input or -> output : 1
or output stream -> to : 1
stream to which -> the : 1
which the manipulator -> is : 1
the manipulator is -> being : 1
manipulator is being -> function : 1
is being function -> clears : 1
being function clears -> specified : 1
function clears specified -> function : 1
clears specified function -> clears : 1
specified function clears -> the : 1
clears the flag -> bits : 1
clears the flag -> to : 1
the flag bits -> in : 2
flag bits in -> for : 2
bits in for -> a : 2
a in other -> it : 3
other it performs -> the : 6
function sets conversion -> function : 1
sets conversion function -> sets : 1
conversion function sets -> the : 1
sets the conversion -> radix : 4
the conversion radix -> for : 1
the conversion radix -> to : 3
conversion radix for -> a : 1
radix for a -> in : 1
in which depends -> on : 1
which depends on -> as : 1
depends on as -> shown : 1
on as shown -> in : 1
shown in notice -> that : 1
in notice that -> any : 1
notice that any -> value : 1
that any value -> of : 1
any value of -> a : 1
a base other -> than : 1
base other than -> or : 1
other than or -> is : 1
other than or -> class : 1
than or is -> treated : 1
or is treated -> the : 1
is treated the -> same : 1
treated the same -> as : 1
same as solid -> solid : 1
as solid solid -> solid : 1
function template sets -> pad : 1
function template sets -> the : 3
template sets pad -> function : 1
sets pad function -> template : 1
pad function template -> sets : 1
template sets the -> fill : 1
template sets the -> output : 2
sets the fill -> character : 1
the fill character -> for : 1
the fill character -> called : 1
fill character for -> a : 1
character for a -> stream : 1
for a stream -> to : 3
for a stream -> an : 1
a stream to -> in : 3
stream to in -> other : 3
to in other -> it : 3
function sets specified -> function : 1
sets specified function -> sets : 1
specified function sets -> the : 1
sets the flag -> bits : 1
function sets function -> template : 1
sets function template -> sets : 1
sets the output -> precision : 1
sets the output -> field : 1
sets the output -> style : 2
the output precision -> for : 1
output precision for -> a : 1
precision for a -> stream : 1
function sets field -> function : 1
sets field function -> template : 1
field function template -> sets : 1
the output field -> width : 1
output field width -> for : 1
field width for -> a : 1
width for a -> stream : 1
of in header -> declares : 1
declares the and -> manipulator : 1
declares the and -> a : 1
declares the and -> class : 2
declares the and -> container : 1
the and manipulator -> functions : 1
and manipulator functions -> that : 1
manipulator functions that -> form : 1
functions that form -> the : 1
that form the -> foundation : 1
form the foundation -> of : 1
the foundation of -> the : 2
foundation of the -> library : 1
foundation of the -> visual : 1
library is often -> called : 1
for all stream -> the : 1
all stream the -> class : 1
stream the class -> template : 1
from and declares -> the : 1
and declares the -> behavior : 1
declares the behavior -> that : 1
the behavior that -> is : 1
to all streams -> establishing : 1
all streams establishing -> a : 1
streams establishing a -> stream : 1
establishing a stream -> buffer : 1
buffer and defining -> the : 1
and defining the -> to : 1
defining the to -> and : 1
the to and -> for : 1
information about input -> and : 1
about input and -> including : 1
input and including -> the : 1
and including the -> use : 1
including the use -> of : 1
use of formatting -> and : 1
formatting and stream -> header : 1
and stream header -> class : 1
stream header class -> class : 1
header class class -> template : 1
base class template -> for : 1
for all class -> traits : 1
all class traits -> class : 1
typedef traits status -> const : 1
traits status const -> bool : 1
status const bool -> const : 1
bool const iostate -> void : 1
const iostate void -> state : 1
iostate void state -> void : 1
void state void -> void : 1
state void void -> void : 1
void bool bool -> bool : 1
bool bool iostate -> void : 1
bool iostate void -> void : 1
iostate void void -> explicit : 1
void void explicit -> virtual : 1
void explicit virtual -> locale : 1
explicit virtual locale -> char : 1
virtual locale char -> char : 1
locale char char -> void : 1
char char void -> not : 1
char void not -> defined : 1
void not defined -> not : 2
void not defined -> class : 1
not defined not -> defined : 4
defined not defined -> class : 2
defined not defined -> object : 2
not defined class -> template : 1
not defined class -> is : 1
not defined class -> identifies : 1
defined class template -> is : 1
is the root -> of : 1
is the root -> class : 1
root of all -> stream : 1
of all stream -> class : 1
all stream class -> it : 1
stream class it -> provides : 1
class it provides -> a : 1
it provides a -> common : 1
provides a common -> functionality : 1
a common functionality -> for : 1
common functionality for -> all : 1
functionality for all -> derived : 1
for all derived -> stream : 1
all derived stream -> in : 1
derived stream in -> it : 1
stream in it -> manages : 1
in it manages -> a : 1
it manages a -> stream : 1
manages a stream -> in : 1
a stream in -> the : 1
a stream in -> function : 1
to a private -> data : 1
to a private -> copy : 1
member that points -> to : 1
the stream an -> implementation : 1
stream an implementation -> can : 1
implementation can use -> any : 1
use any following -> are : 1
any following are -> the : 1
functions of default -> constructor : 2
of default constructor -> leaves : 1
of default constructor -> is : 1
default constructor leaves -> the : 1
constructor leaves the -> data : 1
leaves the data -> members : 1
members in a -> derived : 1
derived the default -> constructor : 1
default constructor must -> call : 1
constructor must call -> to : 1
call to initialize -> the : 1
call to initialize -> a : 1
initialize the copy -> constructor : 1
constructor is declared -> private : 1
is declared private -> and : 1
declared private and -> is : 1
private and is -> not : 1
is not which -> prevents : 1
not which prevents -> the : 1
prevents the copying -> of : 1
the copying of -> any : 1
copying of any -> stream : 1
of any stream -> to : 1
any stream to -> initialize : 1
stream to initialize -> the : 1
initialize the returns -> the : 1
the returns the -> operator : 1
returns the operator -> returns : 1
null it returns -> a : 1
pointer to indicate -> is : 1
to indicate is -> most : 1
to indicate is -> not : 1
indicate is most -> often : 1
implicit conversion in -> a : 1
conversion in a -> conditional : 1
in a conditional -> is : 1
in a conditional -> assignment : 1
a conditional is -> most : 1
conditional is most -> often : 1
a conditional assignment -> like : 1
conditional assignment like -> the : 1
assignment like the -> copy : 1
like the copy -> is : 1
the copy is -> so : 1
copy is so -> it : 1
be used and -> is : 1
used and is -> not : 1
is not assigning -> or : 1
not assigning or -> copying : 1
assigning or copying -> an : 1
or copying an -> stream : 1
copying an stream -> would : 1
an stream would -> corrupt : 1
stream would corrupt -> the : 1
would corrupt the -> stream : 1
corrupt the stream -> if : 1
the stream if -> is : 2
the stream if -> the : 1
stream if is -> set : 1
stream if is -> returns : 1
set in or -> state : 1
set in or -> or : 1
set in or -> if : 1
in or state -> the : 1
or state the -> state : 1
state the state -> to : 1
the state to -> if : 1
state to if -> is : 1
null is also -> set : 1
is also set -> after : 1
also set after -> setting : 1
set after setting -> the : 1
after setting the -> if : 1
setting the if -> any : 1
the if any -> state : 1
if any state -> bit : 1
any state bit -> is : 1
state bit is -> an : 1
bit is an -> exception : 1
an exception bit -> is : 1
exception bit is -> second : 1
bit is second -> form : 1
is second form -> is : 1
is second form -> of : 1
form is see -> later : 3
form is see -> in : 2
section for formatting -> information : 1
for formatting information -> from : 1
formatting information from -> in : 1
information from in -> the : 1
in the format -> fill : 1
the format fill -> and : 1
format fill and -> the : 1
fill and the -> contents : 1
and the contents -> of : 1
and arrays are -> the : 1
arrays are the -> state : 1
are the state -> and : 1
the state and -> stream : 1
state and stream -> buffer : 1
and stream buffer -> are : 1
stream buffer are -> not : 1
buffer are not -> before : 1
are not before -> copying : 1
not before copying -> any : 1
before copying any -> callback : 1
copying any callback -> each : 1
any callback each -> one : 1
callback each one -> is : 1
each one is -> called : 2
one is called -> with : 2
with the callbacks -> are : 1
the callbacks are -> then : 1
callbacks are then -> replaced : 1
are then replaced -> with : 1
then replaced with -> those : 1
replaced with those -> copied : 1
with those copied -> from : 1
those copied from -> and : 1
from and each -> one : 1
and each one -> is : 1
called with for -> information : 1
with for information -> about : 1
about the mask -> is : 1
the mask is -> copied : 1
mask is copied -> the : 1
is copied the -> return : 1
copied the return -> value : 1
in or or -> sets : 1
or or sets -> the : 1
sets the exception -> the : 1
function for how -> and : 1
for how and -> when : 1
how and when -> an : 1
how and when -> placement : 1
and when an -> exception : 1
is the third -> form : 1
the third form -> is : 1
the third form -> copies : 1
the third form -> moves : 1
the third form -> requires : 1
third form is -> see : 1
section for if -> is : 1
section for if -> you : 1
for if is -> set : 1
for if is -> a : 2
is set or -> if : 1
is set or -> for : 1
set or if -> is : 1
in or if -> neither : 1
in or if -> every : 2
in or if -> no : 2
or if neither -> bit : 1
or if neither -> iterator : 1
or if neither -> the : 2
bit is or -> changes : 1
is or changes -> the : 1
or changes the -> fill : 1
or changes the -> stream : 1
changes the fill -> character : 1
fill character called -> the : 1
the when setting -> the : 2
when setting the -> fill : 1
when setting the -> the : 2
setting the fill -> the : 1
the fill the -> old : 1
fill the old -> fill : 1
the old fill -> character : 1
old fill character -> is : 1
fill character is -> if : 1
state is it -> returns : 1
it returns and -> is : 1
returns and is -> not : 1
of the of -> calling : 1
the of calling -> lists : 1
of calling lists -> the : 1
calling lists the -> observable : 1
lists the observable -> effects : 1
the observable effects -> of : 1
observable effects of -> the : 1
effects of the -> arrays : 1
of the arrays -> for : 1
of the arrays -> and : 1
the arrays for -> and : 1
arrays for and -> are : 1
for and are -> initially : 1
and are initially -> null : 1
are initially null -> of : 1
initially null of -> calling : 1
null of calling -> of : 1
of calling of -> calling : 1
calling of calling -> solid : 1
of calling solid -> solid : 1
calling solid solid -> solid : 1
solid solid global -> that : 1
solid global that -> solid : 1
global that solid -> solid : 1
that solid solid -> solid : 1
solid solid goodbit -> solid : 1
solid goodbit solid -> solid : 1
goodbit solid solid -> solid : 1
solid solid char -> the : 1
solid char the -> character : 1
char the character -> by : 1
the character by -> returning : 2
character by returning -> the : 2
by returning the -> or : 1
by returning the -> in : 1
returning the or -> changes : 1
the or changes -> the : 1
changes the stream -> after : 1
changes the stream -> the : 2
the stream after -> changing : 1
stream after changing -> the : 1
after changing the -> stream : 1
changing the stream -> the : 1
the stream the -> function : 2
the stream the -> and : 1
the stream the -> member : 2
the stream the -> input : 2
the stream the -> second : 2
the stream the -> default : 2
stream the function -> calls : 1
stream the function -> for : 1
the function calls -> the : 1
the function calls -> and : 22
the function calls -> when : 1
function calls the -> function : 1
returns the previous -> value : 1
returns the previous -> global : 1
the current state -> see : 1
current state see -> the : 1
state see the -> and : 1
see the and -> functions : 1
see the and -> class : 1
see the and -> headers : 1
functions for convenient -> ways : 1
for convenient ways -> to : 1
convenient ways to -> test : 1
ways to test -> different : 1
to test different -> bits : 1
test different bits -> in : 1
different bits in -> the : 1
the state the -> specified : 1
state the specified -> bits : 1
the specified bits -> in : 1
specified bits in -> the : 1
the state it -> calls : 1
state it calls -> the : 1
section for a -> stream : 1
section for a -> discussion : 1
section for a -> map : 1
section for a -> set : 2
section for a -> description : 1
a stream an -> input : 1
stream an input -> to : 1
an input to -> an : 1
input to an -> output : 1
an output any -> input : 1
output any input -> operation : 1
any input operation -> on : 1
any input operation -> sets : 1
input operation on -> this : 1
operation on this -> stream : 1
on this stream -> is : 1
this stream is -> prefaced : 1
stream is prefaced -> by : 1
is prefaced by -> flushing : 1
prefaced by flushing -> tying : 1
by flushing tying -> streams : 1
flushing tying streams -> can : 1
tying streams can -> be : 1
streams can be -> used : 1
used to ensure -> that : 2
ensure that prompts -> appear : 1
that prompts appear -> at : 1
prompts appear at -> the : 1
at the proper -> with : 1
the proper with -> no : 1
proper with no -> the : 1
no the function -> returns : 1
returns the currently -> tied : 1
the currently tied -> or : 1
currently tied or -> if : 1
tied or if -> no : 1
if no stream -> is : 1
no stream is -> the : 1
stream is the -> character : 1
returning the in -> in : 1
the in in -> function : 1
the in in -> in : 2
in function manipulator -> for : 5
in function manipulator -> to : 13
function manipulator for -> reading : 1
function manipulator for -> decimal : 1
function manipulator for -> function : 1
function manipulator for -> hexadecimal : 1
function manipulator for -> octal : 1
manipulator for reading -> and : 1
and writing bool -> as : 2
writing bool as -> function : 2
bool as function -> is : 2
as function is -> a : 2
is a manipulator -> that : 25
manipulator that sets -> the : 13
that sets the -> which : 7
that sets the -> conversion : 3
that sets the -> output : 2
that sets the -> alignment : 1
sets the which -> tells : 6
sets the which -> causes : 1
tells the stream -> to : 1
read or write -> a : 1
read or write -> expected : 1
read or write -> values : 1
or write a -> value : 1
write a value -> as : 1
value as according -> to : 1
as according to -> the : 2
function calls and -> returns : 22
calls and returns -> in : 17
calls and returns -> internal : 1
calls and returns -> function : 4
calls and returns -> the : 1
and returns in -> in : 6
and returns in -> function : 9
and returns in -> type : 1
and returns in -> header : 1
and returns in -> which : 4
manipulator for decimal -> function : 1
for decimal function -> is : 1
decimal function is -> a : 2
conversion radix to -> base : 3
radix to base -> the : 3
to base the -> function : 3
base the function -> calls : 3
manipulator for function -> is : 1
for function is -> a : 2
the output style -> to : 2
output style to -> the : 1
output style to -> scientific : 1
style to the -> function : 1
represents a file -> class : 1
a file class -> statet : 1
file class statet -> void : 1
class statet void -> the : 1
statet void the -> following : 1
void the following -> functionality : 1
the following functionality -> is : 1
following functionality is -> although : 1
functionality is although -> not : 1
is although not -> necessarily : 1
although not necessarily -> as : 1
not necessarily as -> member : 1
necessarily as member -> operator : 1
as member operator -> bool : 1
member operator bool -> bool : 1
operator bool bool -> fpos : 1
bool bool fpos -> fpos : 1
bool fpos fpos -> streamoff : 1
fpos fpos streamoff -> class : 1
fpos streamoff class -> template : 1
streamoff class template -> represents : 1
multibyte shift such -> as : 1
shift such as -> objects : 1
such as objects -> of : 1
as objects of -> type : 1
objects of type -> can : 1
objects of type -> or : 1
objects of type -> and : 4
objects of type -> the : 2
objects of type -> class : 1
be compared for -> equality : 1
compared for equality -> or : 1
equality or they -> can : 1
or they can -> be : 1
can be subtracted -> to : 1
be subtracted to -> yield : 1
subtracted to yield -> a : 1
to yield a -> stream : 1
yield a stream -> or : 1
a stream or -> a : 1
stream or a -> stream : 1
or a stream -> offset : 1
or a stream -> constructs : 1
a stream offset -> can : 1
a stream offset -> back : 1
stream offset can -> be : 1
offset can be -> added : 1
can be added -> to : 2
be added to -> an : 1
be added to -> any : 1
added to an -> position : 1
to an position -> to : 1
an position to -> produce : 1
position to produce -> a : 1
produce a new -> stream : 1
produce a new -> named : 1
a new stream -> offsets : 1
new stream offsets -> can : 1
stream offsets can -> be : 1
offsets can be -> converted : 1
and from although -> the : 1
from although the -> declaration : 1
although the declaration -> in : 1
this section shows -> these : 1
section shows these -> functions : 1
shows these functions -> as : 1
these functions as -> member : 1
these functions as -> even : 1
as member they -> might : 1
member they might -> be : 1
might be global -> functions : 1
be global functions -> or : 1
global functions or -> be : 1
functions or be -> provided : 1
or be provided -> in : 1
be provided in -> some : 1
provided in some -> other : 1
some other shift -> state : 1
other shift state -> standard : 1
shift state standard -> requires : 1
state standard requires -> a : 1
standard requires a -> library : 1
requires a library -> implementation : 1
library implementation to -> implement : 1
implementation to implement -> and : 1
to implement and -> the : 1
implement and the -> types : 1
the types so -> that : 1
types so that -> you : 1
so that you -> can : 1
you can convert -> an : 1
you can convert -> a : 1
can convert an -> object : 1
type is any -> instance : 1
is any instance -> into : 1
any instance into -> a : 1
instance into a -> object : 1
into a object -> and : 1
a object and -> back : 1
a object and -> then : 1
a object and -> initializes : 1
object and back -> recovering : 1
and back recovering -> the : 1
back recovering the -> original : 1
recovering the original -> library : 1
the original library -> implementations : 1
original library implementations -> do : 1
library implementations do -> not : 1
implementations do not -> work : 1
not work this -> is : 1
work this is -> usually : 1
this is usually -> implemented : 1
is usually implemented -> as : 1
is usually implemented -> with : 1
usually implemented as -> an : 1
an integral such -> as : 1
integral such as -> or : 1
as or the -> problem : 1
as or the -> first : 1
as or the -> last : 2
as or the -> allocator : 1
or the problem -> is : 1
is that must -> store : 1
that must store -> a : 1
must store a -> stream : 1
store a stream -> position : 1
a stream position -> and : 1
a stream position -> to : 1
stream position and -> a : 1
position and a -> shift : 1
and a shift -> and : 1
a shift and -> the : 1
shift and the -> stream : 1
the stream position -> is : 1
the stream position -> to : 2
stream position is -> usually : 1
position is usually -> implemented : 1
usually implemented with -> the : 1
implemented with the -> same : 1
same type as -> in : 1
same type as -> the : 1
type as in -> other : 1
in other converting -> from : 1
other converting from -> to : 1
converting from to -> discards : 1
from to discards -> the : 1
to discards the -> shift : 1
discards the shift -> the : 1
the shift the -> library : 1
shift the library -> cannot : 1
the library cannot -> convert : 1
library cannot convert -> back : 1
cannot convert back -> to : 1
convert back to -> the : 1
original because the -> original : 1
because the original -> shift : 1
the original shift -> state : 1
original shift state -> is : 1
state is that -> has : 1
is that has -> the : 1
the same problem -> when : 1
same problem when -> specialized : 1
problem when specialized -> for : 1
when specialized for -> and : 1
specialized for and -> because : 1
for and because -> its : 1
and because its -> is : 1
because its is -> defined : 1
its is defined -> to : 1
to be which -> is : 1
be which is -> defined : 1
which is defined -> in : 1
which is defined -> and : 7
defined in to -> be : 1
in to be -> and : 1
to be and -> is : 1
be and is -> defined : 1
defined as solution -> is : 1
as solution is -> not : 1
solution is not -> to : 1
not to convert -> a : 1
convert a stream -> position : 1
stream position to -> a : 1
stream position to -> the : 2
position to a -> stream : 1
to a stream -> if : 1
to a stream -> in : 1
to a stream -> is : 1
a stream if -> you : 1
you must do -> remember : 1
must do remember -> that : 1
do remember that -> you : 1
might be sacrificing -> the : 1
be sacrificing the -> shift : 1
sacrificing the shift -> save : 1
the shift save -> the : 1
shift save the -> shift : 1
save the shift -> state : 1
shift state separately -> so : 1
state separately so -> you : 1
separately so you -> can : 1
you can restore -> it : 1
can restore it -> when : 1
restore it when -> converting : 1
it when converting -> a : 1
converting a stream -> offset : 1
stream offset back -> to : 1
offset back to -> a : 1
stream in function -> manipulator : 1
manipulator for hexadecimal -> function : 1
for hexadecimal function -> is : 1
hexadecimal function is -> a : 1
function manipulator to -> align : 1
function manipulator to -> function : 2
function manipulator to -> disable : 3
function manipulator to -> suppress : 2
function manipulator to -> use : 5
function manipulator to -> show : 3
function manipulator to -> skip : 1
manipulator to align -> output : 1
to align output -> on : 1
align output on -> an : 1
output on an -> internal : 1
on an internal -> function : 1
an internal function -> is : 1
internal function is -> a : 1
sets the alignment -> to : 1
the alignment to -> the : 1
alignment to the -> function : 1
and returns internal -> padding : 1
returns internal padding -> works : 1
internal padding works -> as : 1
padding works as -> the : 1
works as the -> formatted : 1
as the formatted -> number : 1
the formatted number -> begins : 2
formatted number begins -> with : 2
number begins with -> a : 1
number begins with -> or : 1
with a insert -> the : 1
a insert the -> padding : 1
insert the padding -> after : 2
insert the padding -> before : 1
the padding after -> the : 2
padding after the -> the : 1
padding after the -> or : 1
after the the -> formatted : 1
the the formatted -> number : 1
begins with or -> insert : 1
with or insert -> the : 1
or insert the -> padding : 2
after the or -> insert : 1
the or insert -> the : 1
the padding before -> the : 1
padding before the -> number : 1
before the number -> class : 1
the number class -> root : 1
number class root -> class : 1
class root class -> for : 1
root class for -> class : 1
root class for -> all : 1
for class typedef -> typedef : 1
for class typedef -> t : 1
class typedef typedef -> typedef : 2
class typedef typedef -> const : 2
typedef class destructor -> virtual : 1
class destructor virtual -> formatting : 1
destructor virtual formatting -> fmtflags : 1
virtual formatting fmtflags -> fmtflags : 1
formatting fmtflags fmtflags -> fmtflags : 1
fmtflags fmtflags fmtflags -> fmtflags : 2
fmtflags fmtflags fmtflags -> void : 1
fmtflags fmtflags void -> streamsize : 1
fmtflags void streamsize -> streamsize : 1
void streamsize streamsize -> streamsize : 2
streamsize streamsize streamsize -> streamsize : 3
streamsize streamsize streamsize -> locales : 1
streamsize streamsize streamsize -> n : 1
streamsize streamsize streamsize -> int : 1
streamsize streamsize streamsize -> putback : 1
streamsize streamsize streamsize -> signed : 1
streamsize streamsize locales -> locale : 1
streamsize locales locale -> locale : 1
locales locale locale -> storage : 1
locale locale storage -> static : 1
locale storage static -> int : 1
storage static int -> callbacks : 1
static int callbacks -> enum : 1
int callbacks enum -> typedef : 1
callbacks enum typedef -> void : 1
enum typedef void -> int : 1
void int static -> bool : 1
int static bool -> sync : 1
static bool sync -> class : 1
bool sync class -> is : 1
sync class is -> the : 1
the root class -> for : 1
all the stream -> it : 1
the stream it -> declares : 1
stream it declares -> fundamental : 1
it declares fundamental -> types : 1
declares fundamental types -> that : 1
fundamental types that -> are : 1
throughout the it -> also : 1
the it also -> has : 1
the it also -> defines : 1
it also has -> members : 1
also has members -> to : 1
has members to -> keep : 1
members to keep -> track : 1
of formatting for -> input : 1
formatting for input -> and : 1
input and storing -> arbitrary : 1
and storing arbitrary -> information : 1
storing arbitrary information -> for : 1
arbitrary information for -> derived : 1
information for derived -> and : 1
for derived and -> registering : 1
derived and registering -> functions : 1
and registering functions -> to : 1
registering functions to -> be : 1
to be called -> when : 2
be called when -> something : 1
be called when -> one : 1
called when something -> interesting : 1
when something interesting -> happens : 1
something interesting happens -> to : 1
interesting happens to -> the : 1
happens to the -> stream : 1
the stream and -> types : 1
the stream and -> to : 1
stream and types -> are : 1
types are deprecated -> and : 1
are deprecated and -> might : 1
deprecated and might -> not : 1
and might not -> be : 1
not be included -> in : 1
be included in -> a : 1
included in a -> future : 1
in a future -> revision : 1
a future revision -> of : 1
future revision of -> the : 1
revision of the -> the : 1
first three are -> integer : 1
three are integer -> types : 1
are integer types -> that : 1
integer types that -> are : 1
to and their -> respective : 1
and their respective -> subsections : 1
their respective subsections -> later : 1
respective subsections later -> in : 1
subsections later in -> this : 1
and types have -> equivalent : 1
types have equivalent -> types : 1
have equivalent types -> at : 1
equivalent types at -> namespace : 1
types at namespace -> see : 1
at namespace see -> later : 1
namespace see later -> in : 1
section and in -> for : 1
section and in -> note : 1
in for following -> are : 1
for following are -> the : 1
constructor is protected -> so : 1
is protected so -> you : 1
protected so you -> cannot : 1
you cannot accidentally -> declare : 1
cannot accidentally declare -> an : 1
accidentally declare an -> object : 1
type it does -> not : 1
does not initialize -> its : 1
not initialize its -> that : 1
initialize its that -> is : 1
its that is -> left : 1
that is left -> to : 1
is left to -> the : 1
left to the -> copy : 1
constructor is private -> and : 1
is private and -> not : 2
private and not -> defined : 2
and not defined -> so : 1
and not defined -> to : 1
not defined so -> you : 1
defined so you -> cannot : 1
you cannot copy -> objects : 1
cannot copy objects -> of : 1
type or its -> derived : 1
or its derived -> every : 1
its derived every -> registered : 1
derived every registered -> callback : 1
every registered callback -> with : 1
registered callback with -> the : 1
callback with the -> if : 1
object has been -> properly : 1
has been properly -> see : 1
been properly see -> assignment : 1
properly see assignment -> operator : 1
see assignment operator -> is : 1
operator is private -> and : 1
not defined to -> prevent : 1
defined to prevent -> the : 1
prevent the assignment -> of : 1
the assignment of -> objects : 1
assignment of objects -> or : 1
of objects or -> its : 1
objects or its -> the : 1
or its the -> current : 1
its the current -> format : 1
the current format -> flags : 1
current format flags -> or : 1
format flags or -> sets : 1
flags or sets -> the : 1
sets the when -> setting : 1
setting the the -> previous : 2
the the previous -> flags : 1
the the previous -> width : 1
the previous flags -> are : 1
previous flags are -> the : 1
flags are the -> currently : 1
are the currently -> imbued : 1
the currently imbued -> as : 1
currently imbued as -> the : 1
imbued as the -> new : 1
new locale and -> calls : 1
locale and calls -> all : 1
and calls all -> registered : 1
calls all registered -> callbacks : 1
all registered callbacks -> with : 1
registered callbacks with -> the : 1
callbacks with the -> new : 1
with the new -> locale : 1
with the new -> units : 1
new locale is -> stored : 1
locale is stored -> before : 1
is stored before -> calling : 1
stored before calling -> any : 1
before calling any -> so : 1
calling any so -> if : 1
any so if -> a : 1
so if a -> callback : 1
so if a -> were : 1
if a callback -> function : 1
a callback function -> calls : 1
callback function calls -> it : 1
function calls it -> gets : 1
calls it gets -> the : 1
it gets the -> new : 1
gets the new -> a : 1
new a reference -> to : 1
long integer that -> is : 1
that is stored -> in : 2
in a private -> at : 2
a private at -> index : 2
private at index -> if : 2
index if has -> been : 2
if has been -> called : 2
has been called -> before : 2
been called before -> with : 2
called before with -> the : 2
before with the -> same : 2
the same a -> reference : 2
same a reference -> to : 2
array element is -> the : 2
element is the -> array : 2
element is the -> result : 1
array is extended -> as : 2
array is extended -> and : 1
array is extended -> by : 1
is extended as -> needed : 2
extended as needed -> so : 2
as needed so -> that : 2
needed so that -> is : 2
is a valid -> and : 2
a valid and -> the : 2
valid and the -> new : 2
and the new -> entry : 2
the new entry -> is : 2
new entry is -> initialized : 2
entry is initialized -> to : 2
the new element -> is : 3
new element is -> structure : 2
new element is -> the : 1
new element is -> set : 1
element is structure -> of : 2
is structure of -> the : 2
structure of the -> internal : 2
of the internal -> array : 2
the internal array -> is : 3
the internal array -> grows : 2
the internal array -> cannot : 2
the internal array -> the : 1
internal array is -> and : 2
internal array is -> which : 1
array is and -> it : 2
is and it -> might : 2
and it might -> be : 2
be a sparse -> the : 2
a sparse the -> internal : 2
sparse the internal -> array : 2
internal array grows -> as : 2
array grows as -> and : 2
grows as and -> all : 2
as and all -> prior : 2
and all prior -> values : 2
all prior values -> stored : 2
prior values stored -> in : 2
values stored in -> the : 4
array are although -> the : 2
are although the -> references : 2
although the references -> might : 2
the references might -> become : 2
references might become -> invalid : 2
might become invalid -> in : 2
become invalid in -> any : 2
become invalid in -> the : 1
invalid in any -> of : 2
following a call -> to : 2
call to with -> a : 2
to with a -> different : 2
different calling for -> this : 2
calling for this -> the : 2
for this the -> object : 2
this the object -> is : 2
object is fails -> because : 2
is fails because -> the : 2
fails because the -> internal : 2
because the internal -> array : 2
internal array cannot -> it : 2
array cannot it -> returns : 2
cannot it returns -> a : 2
a valid with -> a : 2
valid with a -> value : 2
that is initially -> if : 2
is initially if -> the : 2
initially if the -> member : 1
initially if the -> object : 1
initially if the -> compiler : 1
is called for -> an : 2
is called for -> and : 1
is called for -> a : 1
object whose class -> derives : 1
whose class derives -> from : 1
class derives from -> is : 1
derives from is -> set : 2
from is set -> might : 2
is set might -> throw : 2
set might throw -> the : 2
might throw the -> member : 2
throw the member -> function : 2
function to learn -> how : 2
how to obtain -> a : 2
obtain a suitable -> or : 1
obtain a suitable -> int : 1
a suitable or -> sets : 1
suitable or sets -> the : 1
sets the precision -> after : 1
the precision after -> the : 1
precision after the -> decimal : 1
the decimal used -> to : 1
decimal used to -> format : 1
format numbers for -> when : 1
numbers for when -> setting : 1
for when setting -> a : 1
when setting a -> new : 1
setting a new -> the : 1
new the previous -> precision : 1
the previous precision -> is : 1
previous precision is -> a : 1
precision is a -> reference : 1
to a that -> is : 1
to a that -> contains : 1
to a that -> each : 1
null a reference -> to : 1
the object derives -> from : 1
object derives from -> is : 1
a suitable int -> a : 1
suitable int a -> function : 1
int a function -> to : 1
called when one -> of : 2
when one of -> three : 1
when one of -> these : 1
when one of -> the : 1
one of three -> events : 1
one of three -> is : 1
of three events -> occurs : 1
three events occurs -> for : 1
events occurs for -> the : 1
occurs for the -> object : 1
is destroyed is -> called : 1
destroyed is called -> followed : 1
is called followed -> by : 1
called followed by -> is : 1
followed by is -> called : 1
by is called -> callback : 1
is called callback -> function : 1
called callback function -> is : 1
callback function is -> registered : 1
function is registered -> with : 1
is registered with -> an : 1
registered with an -> integer : 1
with an integer -> the : 1
integer the index -> is : 1
the index is -> passed : 1
the index is -> class : 1
index is passed -> to : 1
to the callback -> functions : 1
the callback functions -> are : 1
callback functions are -> called : 1
of the callback -> function : 1
the callback function -> must : 1
callback function must -> not : 1
not throw suppose -> a : 1
throw suppose a -> program : 1
suppose a program -> stores : 1
suppose a program -> constructs : 1
a program stores -> some : 1
program stores some -> debugging : 1
stores some debugging -> information : 1
some debugging information -> with : 1
debugging information with -> each : 1
information with each -> it : 1
with each it -> allocates : 1
each it allocates -> a : 1
it allocates a -> and : 1
allocates a and -> stores : 1
a and stores -> a : 1
and stores a -> pointer : 1
stores a pointer -> to : 1
in the when -> is : 1
is the debugging -> information : 1
the debugging information -> should : 1
debugging information should -> also : 1
information should also -> be : 1
should also be -> information : 1
also be information -> associated : 1
be information associated -> with : 1
information associated with -> shows : 1
information associated with -> int : 1
associated with shows -> how : 1
with shows how -> to : 1
to use callbacks -> to : 1
use callbacks to -> make : 1
callbacks to make -> sure : 1
sure the memory -> is : 1
memory is managed -> information : 1
is managed information -> associated : 1
managed information associated -> with : 1
associated with int -> case : 1
with int case -> ip : 1
int case ip -> delete : 1
case ip delete -> case : 1
ip delete case -> new : 1
delete case new -> does : 1
case new does -> not : 1
new does not -> affect : 1
not affect void -> const : 1
affect void const -> int : 1
void const int -> index : 1
const int index -> new : 1
int index new -> the : 1
index new the -> bits : 1
new the bits -> of : 1
of the formatting -> it : 1
of the formatting -> and : 1
the formatting it -> is : 2
formatting it is -> equivalent : 2
to calling fmtflags -> the : 1
calling fmtflags the -> bits : 1
fmtflags the bits -> from : 1
the bits from -> the : 1
bits from the -> formatting : 2
from the formatting -> flags : 1
from the formatting -> it : 1
the formatting flags -> and : 1
the formatting flags -> the : 1
formatting flags and -> then : 1
flags and then -> sets : 1
then sets the -> it : 1
sets the it -> is : 1
to calling the -> version : 1
calling the version -> of : 1
version of is -> most : 1
of is most -> often : 1
used with flags -> sync : 1
with flags sync -> whether : 1
flags sync whether -> the : 1
sync whether the -> standard : 1
whether the standard -> objects : 1
objects are synchronized -> with : 1
are synchronized with -> the : 1
synchronized with the -> c : 1
the c they -> are : 1
c they are -> with : 1
they are with -> no : 1
no you call -> after : 1
you call after -> any : 1
call after any -> has : 1
after any has -> been : 1
any has been -> the : 1
has been the -> behavior : 1
has been the -> set : 1
been the behavior -> is : 1
is the mask -> bits : 1
the mask bits -> from : 1
mask bits from -> the : 1
to calling or -> sets : 1
calling or sets -> the : 1
sets the minimum -> field : 1
the minimum field -> when : 1
minimum field when -> setting : 1
field when setting -> the : 1
the previous width -> is : 1
previous width is -> a : 1
width is a -> unique : 1
a unique suitable -> for : 1
unique suitable for -> use : 1
suitable for use -> as : 1
for use as -> an : 1
use as an -> index : 1
as an index -> to : 1
an index to -> the : 1
index to the -> or : 1
think of as -> having : 1
of as having -> a : 1
as having a -> static : 1
having a static -> integer : 1
a static integer -> data : 1
static integer data -> and : 1
integer data and -> is : 1
data and is -> implemented : 1
and is implemented -> so : 1
is implemented so -> it : 1
implemented so it -> returns : 1
it returns class -> class : 3
class class type -> callback : 1
class class type -> open : 1
class type callback -> event : 1
type callback event -> type : 1
callback event type -> denotes : 1
event type denotes -> an : 1
type denotes an -> interesting : 1
denotes an interesting -> event : 1
an interesting event -> in : 1
an interesting event -> class : 1
interesting event in -> the : 1
event in the -> lifetime : 1
in the lifetime -> of : 1
lifetime of an -> stream : 1
an stream see -> the : 1
stream see the -> function : 1
see the function -> in : 4
see the function -> for : 1
in the earlier -> in : 2
the earlier in -> this : 2
this to learn -> how : 2
how to register -> a : 2
to register a -> function : 1
to register a -> callback : 1
register a function -> that : 1
that is called -> when : 1
of these events -> type : 1
these events type -> callback : 1
events type callback -> function : 1
type callback function -> void : 1
callback function void -> int : 1
void int type -> denotes : 1
int type denotes -> a : 1
type denotes a -> callback : 1
denotes a callback -> see : 1
a callback see -> the : 1
callback see the -> function : 1
register a callback -> which : 1
a callback which -> a : 1
callback which a -> stream : 1
which a stream -> object : 1
a stream object -> calls : 1
stream object calls -> when : 1
object calls when -> an : 1
calls when an -> interesting : 1
when an interesting -> event : 1
interesting event class -> exception : 1
event class exception -> class : 1
class exception class -> for : 2
exception class for -> public : 1
exception class for -> failed : 1
class for public -> exception : 1
for public exception -> explicit : 1
for public exception -> virtual : 1
public exception explicit -> virtual : 1
public exception explicit -> class : 2
exception explicit virtual -> virtual : 1
explicit virtual virtual -> const : 1
class for its -> use : 1
for its use -> of : 1
its use of -> the : 1
the parameter and -> member : 1
parameter and member -> function : 1
and member function -> are : 1
member function are -> consistent : 1
function are consistent -> with : 1
are consistent with -> the : 1
consistent with the -> conventions : 1
with the conventions -> of : 1
the conventions of -> the : 1
conventions of the -> in : 1
the in type -> formatting : 1
in type formatting -> static : 1
type formatting static -> const : 1
formatting static const -> fmtflags : 1
static const fmtflags -> static : 17
static const fmtflags -> with : 1
const fmtflags static -> const : 17
fmtflags static const -> fmtflags : 17
const fmtflags with -> no : 1
fmtflags with no -> type : 1
an or bitmask -> type : 1
or bitmask type -> exact : 1
bitmask type exact -> type : 1
type exact type -> is : 3
is that represents -> formatting : 1
is that represents -> the : 1
that represents formatting -> flags : 1
represents formatting flags -> for : 1
formatting flags for -> input : 1
flags for input -> and : 1
input and in -> the : 1
in the several -> static : 1
the several static -> constants : 1
several static constants -> are : 1
static constants are -> also : 1
constants are also -> which : 1
are also which -> can : 1
also which can -> be : 1
implemented as enumerated -> literals : 1
as enumerated literals -> or : 1
enumerated literals or -> as : 1
literals or as -> explicit : 1
or as explicit -> lists : 1
as explicit lists -> the : 1
explicit lists the -> flag : 1
the flag solid -> solid : 1
solid solid and -> writes : 5
solid and writes -> bool : 1
solid and writes -> decimal : 1
solid and writes -> hexadecimal : 1
solid and writes -> octal : 1
solid and writes -> in : 1
and writes bool -> values : 1
writes bool values -> as : 1
bool values as -> according : 1
values as according -> to : 1
to the solid -> solid : 1
the solid solid -> solid : 2
and writes decimal -> solid : 1
writes decimal solid -> solid : 1
decimal solid solid -> solid : 1
solid solid values -> in : 2
solid values in -> fixed : 1
solid values in -> scientific : 1
values in fixed -> solid : 1
in fixed solid -> solid : 1
fixed solid solid -> solid : 1
and writes hexadecimal -> solid : 1
writes hexadecimal solid -> solid : 1
hexadecimal solid solid -> solid : 1
solid output to -> internal : 1
output to internal -> point : 1
to internal point -> after : 1
internal point after -> sign : 1
point after sign -> or : 1
after sign or -> solid : 1
sign or solid -> solid : 1
and writes octal -> solid : 1
writes octal solid -> solid : 1
octal solid solid -> solid : 1
values in scientific -> solid : 1
in scientific solid -> solid : 1
scientific solid solid -> solid : 1
solid solid a -> prefix : 1
solid a prefix -> for : 1
a prefix for -> an : 1
a prefix for -> integer : 2
prefix for an -> integer : 1
an integer radix -> for : 1
integer radix for -> solid : 1
radix for solid -> solid : 1
solid solid decimal -> even : 1
solid decimal even -> if : 1
decimal even if -> not : 1
if not solid -> solid : 2
not solid solid -> solid : 3
solid solid plus -> sign : 1
solid plus sign -> even : 1
plus sign even -> if : 1
sign even if -> not : 1
solid solid whitespace -> before : 1
solid whitespace before -> solid : 1
whitespace before solid -> solid : 1
before solid solid -> solid : 1
solid output after -> each : 1
output after each -> solid : 1
after each solid -> uppercase : 1
each solid uppercase -> in : 1
solid uppercase in -> generated : 1
uppercase in generated -> output : 1
in generated output -> formatting : 1
generated output formatting -> items : 1
output formatting items -> are : 1
formatting items are -> a : 1
items are a -> flag : 1
are a flag -> is : 1
a flag is -> set : 1
set or for -> the : 1
for the flag -> can : 1
the flag can -> be : 2
flag can be -> set : 1
flag can be -> cleared : 1
be set to -> perform : 1
set to perform -> output : 1
to perform output -> in : 1
perform output in -> uppercase : 1
output in uppercase -> the : 1
in uppercase the -> hexadecimal : 1
uppercase the hexadecimal -> prefix : 1
the hexadecimal prefix -> or : 1
hexadecimal prefix or -> in : 1
hexadecimal prefix or -> for : 2
prefix or in -> scientific : 1
or in scientific -> or : 1
in scientific or -> the : 1
scientific or the -> flag : 1
can be cleared -> for : 1
be cleared for -> lowercase : 1
cleared for lowercase -> other : 1
for lowercase other -> flags : 1
lowercase other flags -> are : 1
other flags are -> set : 1
flags are set -> in : 1
are set in -> you : 1
set in you -> can : 1
can set a -> field : 1
set a field -> to : 1
a field to -> one : 1
field to one -> of : 1
number of lists -> the : 1
of lists the -> field : 1
lists the field -> and : 1
field and the -> default : 1
default behavior if -> the : 1
behavior if the -> field : 1
the field value -> is : 1
field value is -> each : 1
value is each -> field : 1
is each field -> name : 1
each field name -> is : 1
field name is -> used : 1
as a mask -> for : 1
a mask for -> the : 1
mask for the -> form : 1
for the form -> of : 1
of the solid -> solid : 1
of the solid -> relative : 1
solid solid leading -> or : 1
solid leading or -> is : 1
leading or is -> is : 1
or is is -> anything : 1
is is anything -> else : 1
is anything else -> is : 1
else is solid -> solid : 1
solid solid if -> exponent : 1
solid if exponent -> is : 1
if exponent is -> or : 1
exponent is or -> else : 1
exponent is or -> less : 1
is or else -> strip : 1
is or else -> the : 1
or else strip -> trailing : 1
else strip trailing -> zeros : 1
strip trailing zeros -> and : 1
trailing zeros and -> unneeded : 1
zeros and unneeded -> decimal : 1
and unneeded decimal -> in : 1
unneeded decimal in -> in : 1
decimal in in -> in : 1
in class initialization -> class : 1
class initialization class -> is : 1
initialization class is -> used : 1
that the construction -> of : 1
stream objects the -> first : 1
objects the first -> time : 1
first time an -> object : 1
time an object -> is : 1
is it constructs -> and : 1
it constructs and -> initializes : 1
constructs and initializes -> and : 1
and initializes and -> a : 1
initializes and a -> static : 1
and a static -> counter : 1
a static counter -> keeps : 1
static counter keeps -> track : 1
counter keeps track -> of : 1
of times is -> constructed : 1
times is constructed -> and : 1
is constructed and -> when : 1
is constructed and -> initial : 1
constructed and when -> the : 1
when the last -> instance : 1
the last instance -> is : 1
last instance is -> is : 1
instance is is -> called : 1
for and suppose -> a : 1
and suppose a -> program : 1
a program constructs -> a : 1
program constructs a -> static : 1
constructs a static -> and : 1
the constructor prints -> a : 1
constructor prints a -> warning : 1
prints a warning -> to : 1
a warning to -> if : 1
warning to if -> certain : 1
to if certain -> conditions : 1
if certain conditions -> to : 1
certain conditions to -> ensure : 1
conditions to ensure -> that : 1
that is properly -> initialized : 1
is properly initialized -> and : 1
properly initialized and -> ready : 1
initialized and ready -> to : 1
and ready to -> receive : 1
ready to receive -> declare : 1
to receive declare -> an : 1
receive declare an -> object : 1
an object before -> your : 1
object before your -> static : 1
before your static -> as : 1
your static as -> shown : 1
static as shown -> in : 1
shown in proper -> initialization : 1
in proper initialization -> of : 1
proper initialization of -> standard : 2
initialization of standard -> proper : 1
initialization of standard -> myclass : 1
of standard proper -> initialization : 1
standard proper initialization -> of : 1
of standard myclass -> if : 1
standard myclass if -> not : 1
myclass if not -> static : 1
if not static -> static : 1
not static static -> myclass : 1
static static myclass -> type : 1
static myclass type -> typedef : 1
myclass type typedef -> static : 1
type typedef static -> const : 1
typedef static const -> iostate : 1
typedef static const -> openmode : 1
typedef static const -> seekdir : 1
typedef static const -> explicit : 1
static const iostate -> const : 1
static const iostate -> static : 1
static const iostate -> with : 1
const iostate const -> iostate : 1
iostate const iostate -> static : 1
const iostate static -> const : 2
iostate static const -> iostate : 2
const iostate with -> no : 1
iostate with no -> type : 1
an or bitset -> type : 2
or bitset type -> exact : 2
bitset type exact -> type : 2
represents the status -> of : 1
status of an -> the : 1
represents the same -> some : 3
same some functions -> that : 3
some functions that -> take : 3
some functions that -> are : 1
that take an -> parameter : 2
take an parameter -> have : 2
take an parameter -> in : 1
an parameter have -> an : 2
parameter have an -> overloaded : 2
an overloaded version -> that : 2
overloaded version that -> accepts : 2
version that accepts -> an : 2
that accepts an -> parameter : 2
accepts an parameter -> and : 2
parameter and has -> the : 2
functionality as its -> the : 2
as its the -> type : 2
its the type -> and : 2
type and related -> functions : 3
related functions are -> so : 3
functions are so -> you : 3
are so you -> should : 3
are so you -> must : 1
use the lists -> the : 3
the lists the -> literals : 2
the lists the -> note : 1
lists the literals -> and : 2
lists the literals -> of : 1
literals and their -> the : 1
literals and their -> to : 1
literals and their -> definitions : 1
and their the -> class : 1
their the class -> template : 1
template has several -> member : 1
has several member -> functions : 1
for and clearing -> solid : 1
and clearing solid -> solid : 1
clearing solid solid -> solid : 1
solid solid such -> as : 1
solid such as -> a : 1
as a null -> pointer : 1
pointer or a -> write : 1
or a write -> solid : 1
a write solid -> solid : 1
write solid solid -> solid : 1
solid solid when -> solid : 1
solid when solid -> solid : 1
when solid solid -> solid : 1
solid to read -> or : 1
or write expected -> characters : 1
write expected characters -> trying : 1
expected characters trying -> to : 1
characters trying to -> read : 1
trying to read -> an : 1
to read an -> integer : 1
read an integer -> from : 1
integer from nonnumeric -> solid : 1
from nonnumeric solid -> value : 1
nonnumeric solid value -> is : 1
solid value is -> class : 1
value is class -> class : 4
class type open -> mode : 1
type open mode -> typedef : 1
open mode typedef -> static : 1
mode typedef static -> const : 1
static const openmode -> static : 5
static const openmode -> with : 1
const openmode static -> const : 5
openmode static const -> openmode : 5
const openmode with -> no : 1
openmode with no -> type : 1
is that defines -> the : 1
defines the mode -> for : 1
the mode for -> opening : 1
mode for opening -> a : 1
for opening a -> the : 1
opening a the -> type : 1
and their to -> the : 1
their to the -> section : 1
section of this -> chapter : 1
for the most -> common : 1
use of and -> the : 1
use of and -> and : 1
and the permitted -> combinations : 1
the permitted combinations -> of : 1
permitted combinations of -> the : 1
combinations of the -> type : 1
type is also -> used : 1
and for related -> solid : 1
for related solid -> solid : 1
related solid solid -> solid : 1
solid to before -> each : 1
to before each -> solid : 1
before each solid -> solid : 1
each solid solid -> solid : 1
solid to immediately -> after : 1
to immediately after -> solid : 1
immediately after solid -> solid : 1
after solid solid -> solid : 1
and writes in -> binary : 1
writes in binary -> mode : 1
in binary mode -> is : 1
binary mode is -> solid : 1
mode is solid -> solid : 1
solid solid for -> input : 1
solid solid for -> output : 1
solid for input -> solid : 1
for input solid -> solid : 1
input solid solid -> solid : 1
solid for output -> solid : 1
for output solid -> file : 1
output solid file -> to : 1
solid file to -> zero : 1
file to zero -> in : 1
to zero in -> in : 1
zero in in -> type : 1
in type seek -> typedef : 1
type seek typedef -> static : 1
seek typedef static -> const : 1
static const seekdir -> static : 2
static const seekdir -> with : 1
const seekdir static -> const : 2
seekdir static const -> seekdir : 2
const seekdir with -> no : 1
seekdir with no -> type : 1
is an enumerated -> type : 3
enumerated type that -> specifies : 1
enumerated type that -> represents : 2
type that specifies -> the : 1
specifies the origin -> for : 1
the origin for -> seeking : 1
origin for seeking -> to : 1
for seeking to -> a : 1
new file the -> type : 1
file the type -> is : 1
take a parameter -> have : 1
take a parameter -> and : 1
a parameter have -> overloaded : 1
parameter have overloaded -> versions : 1
overloaded versions that -> accept : 1
versions that accept -> a : 1
that accept a -> parameter : 1
accept a parameter -> and : 1
parameter and have -> the : 1
functionality as their -> the : 1
as their the -> type : 1
their the type -> and : 1
lists the note -> that : 1
that the order -> and : 1
that the order -> of : 1
the order and -> integer : 1
order and integer -> values : 1
and integer values -> of : 1
integer values of -> the : 1
of the literals -> are : 1
the literals are -> solid : 1
literals are solid -> solid : 1
are solid solid -> solid : 1
solid from the -> beginning : 1
solid from the -> current : 1
the stream offset -> is : 1
stream offset is -> absolute : 1
offset is absolute -> solid : 1
is absolute solid -> solid : 1
absolute solid solid -> solid : 1
the current positive -> is : 1
current positive is -> toward : 1
positive is toward -> end : 1
is toward end -> of : 1
toward end of -> and : 1
of and negative -> offsets : 1
and negative offsets -> are : 1
negative offsets are -> toward : 1
negative offsets are -> towards : 1
offsets are toward -> the : 1
are toward the -> beginning : 1
the solid relative -> to : 1
solid relative to -> the : 1
of the negative -> offsets : 1
the negative offsets -> are : 1
offsets are towards -> the : 1
are towards the -> in : 1
towards the in -> in : 1
manipulator to function -> is : 2
to function is -> a : 2
manipulator that selects -> for : 2
that selects for -> output : 2
selects for output -> to : 2
for output to -> the : 2
and returns function -> manipulator : 4
returns function manipulator -> to : 4
manipulator to disable -> reading : 1
manipulator to disable -> showing : 1
manipulator to disable -> skipping : 1
to disable reading -> and : 1
disable reading and -> writing : 1
manipulator that clears -> the : 7
that clears the -> causing : 2
that clears the -> which : 4
that clears the -> so : 1
clears the causing -> the : 1
clears the causing -> an : 1
the causing the -> stream : 1
causing the stream -> to : 1
or write values -> as : 1
write values as -> the : 1
values as the -> function : 1
returns in function -> manipulator : 9
to disable showing -> output : 1
disable showing output -> function : 1
showing output function -> is : 1
output function is -> a : 2
clears the which -> tells : 3
clears the which -> causes : 1
which tells an -> output : 6
which tells an -> input : 2
tells an output -> stream : 6
stream to write -> a : 5
write a prefix -> for : 2
prefix for integer -> for : 2
for integer for -> hexadecimal : 2
integer for hexadecimal -> or : 2
manipulator to suppress -> unnecessary : 1
manipulator to suppress -> plus : 1
to suppress unnecessary -> decimal : 1
suppress unnecessary decimal -> function : 1
unnecessary decimal function -> is : 1
the causing an -> output : 1
causing an output -> stream : 1
write a decimal -> point : 2
point for even -> if : 2
for even if -> the : 2
if the point -> is : 2
the point is -> unnecessary : 2
point is unnecessary -> zeros : 2
is unnecessary zeros -> appear : 2
unnecessary zeros appear -> after : 2
zeros appear after -> the : 2
decimal the function -> calls : 2
to suppress plus -> sign : 1
suppress plus sign -> in : 1
plus sign in -> nonnegative : 1
plus sign in -> front : 1
sign in nonnegative -> function : 1
in nonnegative function -> is : 1
nonnegative function is -> a : 2
the which causes -> an : 1
the which causes -> the : 1
which causes an -> output : 1
causes an output -> stream : 1
stream to always -> write : 1
to always write -> a : 1
always write a -> plus : 1
write a plus -> sign : 1
write a plus -> even : 1
a plus sign -> in : 1
sign in front -> of : 1
in front of -> a : 1
a number even -> if : 1
number even if -> the : 1
if the sign -> is : 2
the sign is -> unnecessary : 2
the sign is -> dictated : 2
sign is unnecessary -> value : 2
is unnecessary value -> is : 2
unnecessary value is -> or : 2
value is or -> the : 2
value is or -> a : 1
value is or -> class : 1
to disable skipping -> whitespace : 1
disable skipping whitespace -> before : 1
skipping whitespace before -> function : 1
whitespace before function -> is : 2
before function is -> a : 2
tells an input -> stream : 2
stream to skip -> whitespace : 2
to skip whitespace -> before : 3
to skip whitespace -> at : 1
to skip whitespace -> and : 1
skip whitespace before -> reading : 2
skip whitespace before -> function : 1
whitespace before reading -> most : 2
before reading most -> the : 2
reading most the -> function : 2
most the function -> calls : 2
manipulator to use -> unit : 2
manipulator to use -> lowercase : 1
manipulator to use -> scientific : 1
manipulator to use -> uppercase : 1
to use unit -> function : 2
use unit function -> is : 2
unit function is -> a : 2
clears the so -> the : 1
the stream is -> not : 1
the stream is -> and : 1
the stream is -> frozen : 1
stream is not -> flushed : 1
is not flushed -> after : 1
not flushed after -> each : 1
flushed after each -> output : 2
after each output -> the : 2
each output the -> function : 2
each output the -> sentry : 1
output the function -> calls : 2
to use lowercase -> in : 1
use lowercase in -> generated : 1
lowercase in generated -> function : 1
in generated function -> is : 1
generated function is -> a : 2
stream to use -> uppercase : 2
to use uppercase -> letters : 2
to use uppercase -> for : 1
use uppercase letters -> for : 2
letters for generated -> output : 2
for generated output -> for : 2
generated output for -> hexadecimal : 2
output for hexadecimal -> prefix : 2
for hexadecimal prefix -> or : 2
prefix or for -> the : 2
manipulator for octal -> function : 1
for octal function -> is : 1
octal function is -> a : 1
to use scientific -> notation : 1
use scientific notation -> for : 1
scientific notation for -> function : 1
notation for function -> is : 1
style to scientific -> or : 1
to scientific or -> exponential : 1
scientific or exponential -> the : 1
exponential the function -> calls : 1
manipulator to show -> output : 1
manipulator to show -> decimal : 1
manipulator to show -> plus : 1
to show output -> function : 1
show output function -> is : 1
to show decimal -> point : 1
show decimal point -> even : 1
point even when -> function : 1
even when function -> is : 1
when function is -> a : 1
to show plus -> sign : 1
show plus sign -> for : 1
plus sign for -> nonnegative : 1
sign for nonnegative -> function : 1
for nonnegative function -> is : 1
a plus even -> if : 1
plus even if -> the : 1
manipulator to skip -> whitespace : 1
returns in type -> stream : 1
in type stream -> offset : 1
in type stream -> size : 1
type stream offset -> with : 1
stream offset with -> no : 1
offset with no -> type : 1
a signed offset -> in : 1
signed offset in -> a : 1
offset in a -> see : 1
in a see -> the : 1
see the type -> for : 1
type for more -> information : 1
information about working -> with : 1
about working with -> file : 1
working with file -> positions : 1
with file positions -> and : 1
file positions and -> in : 1
positions and in -> type : 1
and in type -> stream : 1
type stream size -> with : 1
stream size with -> no : 1
to represent the -> size : 1
to represent the -> elements : 1
represent the size -> of : 2
size of various -> stream : 1
of various stream -> such : 1
various stream such -> as : 1
stream such as -> number : 1
such as number -> of : 1
as number of -> characters : 1
characters to read -> or : 1
read or it -> is : 1
synonym for one -> of : 1
for one of -> the : 2
for one of -> three : 1
of the signed -> integral : 1
signed integral you -> can : 1
integral you can -> convert : 1
convert a to -> a : 1
to a without -> loss : 1
a without loss -> of : 1
without loss of -> you : 1
loss of you -> can : 1
convert a back -> to : 1
a back to -> a : 1
result of converting -> a : 1
of converting a -> converting : 1
converting a converting -> the : 1
a converting the -> back : 1
converting the back -> to : 1
the back to -> yields : 1
back to yields -> the : 1
to yields the -> original : 1
the original in -> function : 1
original in function -> manipulator : 1
causes the stream -> to : 1
stream to be -> flushed : 1
to be flushed -> after : 1
be flushed after -> each : 1
use uppercase for -> generated : 1
uppercase for generated -> function : 1
for generated function -> is : 1
returns in header -> provides : 1
in header provides -> forward : 1
header provides forward -> declarations : 1
provides forward declarations -> of : 1
forward declarations of -> the : 1
the various classes -> and : 1
various classes and -> the : 1
and the forward -> declarations : 1
the forward declarations -> are : 1
forward declarations are -> incomplete : 1
declarations are incomplete -> type : 1
are incomplete type -> about : 1
incomplete type about -> complete : 1
type about complete -> and : 1
about complete and -> incomplete : 1
complete and incomplete -> types : 1
and incomplete types -> in : 1
incomplete types in -> by : 1
types in by -> using : 1
in by using -> you : 1
in by using -> a : 1
by using you -> can : 1
using you can -> sometimes : 1
using you can -> safely : 1
you can sometimes -> avoid : 1
can sometimes avoid -> including : 1
sometimes avoid including -> the : 1
avoid including the -> complete : 1
including the complete -> definitions : 1
the complete definitions -> of : 1
complete definitions of -> the : 1
the and thereby -> save : 1
and thereby save -> some : 1
thereby save some -> compilation : 1
save some compilation -> is : 1
some compilation is -> always : 1
compilation is always -> safe : 1
is always safe -> to : 1
always safe to -> include : 1
safe to include -> and : 1
to include and -> any : 1
include and any -> of : 1
and any of -> the : 1
the other even -> if : 1
other even if -> they : 1
if they both -> declare : 1
if they both -> point : 1
they both declare -> the : 1
both declare the -> same : 1
the same does -> not : 1
same does not -> provide : 1
not provide any -> complete : 1
provide any complete -> type : 1
any complete type -> this : 1
complete type this -> section : 1
type this section -> contains : 1
this section contains -> only : 1
section contains only -> type : 1
contains only type -> declarations : 1
only type declarations -> in : 1
type declarations in -> which : 1
type declarations in -> type : 1
type declarations in -> solid : 1
declarations in which -> lists : 1
in which lists -> each : 1
which lists each -> type : 1
lists each type -> name : 1
type name with -> a : 1
to the header -> that : 1
the header that -> is : 1
header that is -> required : 1
that is required -> for : 1
is required for -> the : 1
is required for -> implementing : 1
required for the -> complete : 1
for the complete -> type : 1
the complete type -> declarations : 1
complete type declarations -> in : 1
declarations in type -> declarations : 1
in type declarations -> in : 1
declarations in solid -> solid : 1
solid solid typename -> solid : 10
solid solid typename -> typename : 4
solid typename solid -> solid : 10
typename solid solid -> solid : 10
solid typename typename -> alloc : 4
typename typename alloc -> solid : 4
typename alloc solid -> solid : 4
alloc solid solid -> solid : 4
solid solid header -> declares : 1
solid header declares -> the : 1
declares the eight -> standard : 1
the eight standard -> stream : 1
eight standard stream -> and : 1
standard stream and -> these : 1
stream and these -> objects : 1
and these objects -> are : 1
these objects are -> initialized : 1
are initialized when -> the : 1
initialized when the -> first : 1
when the first -> instance : 1
the first instance -> of : 1
first instance of -> is : 1
instance of is -> constructed : 1
of is constructed -> or : 1
is constructed or -> before : 1
constructed or before -> the : 1
or before the -> program : 1
the program they -> are : 1
program they are -> not : 1
are not destroyed -> during : 1
not destroyed during -> normal : 1
destroyed during normal -> program : 1
during normal program -> so : 1
normal program so -> any : 1
program so any -> static : 1
so any static -> destructor : 1
any static destructor -> or : 1
static destructor or -> other : 1
destructor or other -> function : 1
or other function -> can : 1
or other function -> that : 1
other function can -> use : 1
standard objects is -> associated : 1
objects is associated -> with : 1
with a standard -> c : 1
a standard c -> pointer : 1
standard c pointer -> can : 1
c pointer can -> sever : 1
pointer can sever -> the : 1
can sever the -> connection : 1
sever the connection -> by : 1
the connection by -> calling : 1
connection by calling -> as : 1
by calling as -> described : 1
calling as described -> in : 1
described in you -> can : 1
use narrow or -> wide : 1
or wide but -> once : 1
wide but once -> you : 1
but once you -> have : 1
once you have -> performed : 1
you have performed -> any : 1
have performed any -> on : 1
performed any on -> an : 1
any on an -> underlying : 1
on an underlying -> c : 1
an underlying c -> you : 1
underlying c you -> cannot : 1
c you cannot -> switch : 1
you cannot switch -> from : 1
cannot switch from -> narrow : 1
switch from narrow -> to : 1
from narrow to -> wide : 1
narrow to wide -> or : 1
to wide or -> wide : 1
wide or wide -> to : 1
or wide to -> for : 1
wide to for -> after : 1
to for after -> writing : 1
for after writing -> to : 1
after writing to -> you : 1
writing to you -> cannot : 1
cannot write to -> because : 1
write to because -> both : 1
to because both -> objects : 1
because both objects -> use : 1
both objects use -> the : 1
objects use the -> same : 1
the same c -> see : 1
same c see -> and : 1
information about programmers -> assume : 1
about programmers assume -> that : 1
programmers assume that -> automatically : 1
assume that automatically -> and : 1
that automatically and -> but : 1
automatically and but -> the : 1
does not guarantee -> that : 1
not guarantee that -> always : 1
guarantee that always -> every : 1
that always every -> header : 1
always every header -> you : 1
every header you -> for : 1
header you for -> copy : 1
you for copy -> standard : 1
for copy standard -> input : 1
copy standard input -> to : 1
standard input to -> standard : 1
input to standard -> int : 1
to standard int -> return : 1
standard int return -> variable : 1
int return variable -> error : 1
return variable error -> message : 1
variable error message -> ostream : 1
error message ostream -> object : 1
message ostream object -> is : 1
ostream object is -> a : 3
a standard output -> stream : 2
standard output stream -> associated : 4
output stream associated -> with : 4
stream associated with -> the : 8
it is typically -> used : 2
it is typically -> in : 2
used for error -> when : 2
for error when -> the : 2
error when the -> object : 2
is it sets -> the : 2
sets the causing -> to : 2
the causing to -> flush : 2
causing to flush -> the : 2
output buffer after -> every : 2
buffer after every -> in : 2
after every in -> variable : 2
every in variable -> normal : 1
every in variable -> wide : 1
in variable normal -> input : 1
in variable normal -> output : 1
variable normal input -> istream : 1
normal input istream -> object : 1
input istream object -> is : 1
istream object is -> a : 1
a standard input -> stream : 2
standard input stream -> associated : 4
input stream associated -> with : 4
used for normal -> program : 2
for normal program -> it : 1
for normal program -> in : 1
normal program it -> is : 1
program it is -> tied : 2
it is tied -> to : 2
tied to the -> member : 2
function of in -> in : 2
in in variable -> log : 1
in in variable -> wide : 1
in variable log -> output : 1
variable log output -> ostream : 1
log output ostream -> object : 1
output ostream object -> is : 2
the c unlike -> the : 2
c unlike the -> object : 2
unlike the object -> does : 2
the object does -> not : 3
object does not -> set : 2
object does not -> actually : 1
object does not -> produce : 1
does not set -> the : 2
not set the -> this : 2
set the this -> makes : 2
the this makes -> it : 2
this makes it -> more : 2
makes it more -> suitable : 2
it more suitable -> for : 2
more suitable for -> writing : 2
suitable for writing -> less : 2
for writing less -> critical : 2
writing less critical -> messages : 2
less critical messages -> that : 2
critical messages that -> are : 2
messages that are -> not : 2
not considered normal -> program : 2
considered normal program -> such : 2
normal program such -> as : 2
program such as -> debugging : 2
such as debugging -> or : 2
as debugging or -> logging : 2
debugging or logging -> in : 2
or logging in -> variable : 2
logging in variable -> normal : 1
logging in variable -> wide : 1
variable normal output -> ostream : 1
normal output ostream -> object : 1
normal program in -> variable : 1
program in variable -> wide : 1
in variable wide -> error : 1
in variable wide -> input : 1
in variable wide -> log : 1
in variable wide -> output : 1
variable wide error -> message : 1
wide error message -> wostream : 1
error message wostream -> object : 1
message wostream object -> is : 1
wostream object is -> a : 3
wide character standard -> output : 2
wide character standard -> input : 2
character standard output -> stream : 2
variable wide input -> wistream : 1
wide input wistream -> object : 1
input wistream object -> is : 1
wistream object is -> a : 1
character standard input -> stream : 2
used for wide -> program : 2
for wide program -> it : 1
for wide program -> in : 1
wide program it -> is : 1
variable wide log -> output : 1
wide log output -> wostream : 1
log output wostream -> object : 1
output wostream object -> is : 2
variable wide output -> wostream : 1
wide output wostream -> object : 1
wide program in -> header : 1
program in header -> declares : 1
declares the input -> stream : 1
input stream and -> an : 1
stream and an -> input : 1
and an input -> is : 1
an input is -> declared : 1
input is declared -> in : 1
declared in and -> is : 1
declared in not -> for : 1
in not for -> templates : 1
not for templates -> that : 1
for templates that -> read : 2
templates that read -> from : 2
that read from -> files : 1
that read from -> see : 1
from files and -> for : 1
files and for -> templates : 1
files and for -> derived : 1
and for templates -> that : 1
read from see -> for : 1
from see for -> the : 1
for the refer -> to : 1
the refer to -> and : 2
the refer to -> the : 1
and for general -> information : 4
class for input -> and : 2
class for input -> typename : 2
class for input -> string : 2
and output typename -> traits : 1
output typename traits -> class : 1
public public explicit -> virtual : 1
public public explicit -> tab : 1
public explicit virtual -> class : 1
explicit virtual class -> template : 1
explicit virtual class -> formatted : 2
virtual class template -> represents : 1
virtual class template -> is : 3
represents a stream -> that : 1
a stream that -> can : 1
stream that can -> perform : 1
that can perform -> input : 1
can perform input -> and : 1
perform input and -> see : 1
input and see -> its : 1
and see its -> base : 1
see its base -> class : 1
its base class -> in : 1
and in note -> that : 1
the two templates -> share : 1
two templates share -> a : 1
templates share a -> common : 1
a common stream -> note : 1
common stream note -> also : 1
stream note also -> that : 1
note also that -> and : 1
also that and -> inherit : 1
that and inherit -> virtually : 1
and inherit virtually -> from : 1
inherit virtually from -> inherits : 1
virtually from inherits -> a : 1
from inherits a -> single : 1
a single instance -> of : 1
single instance of -> the : 1
formatting and so -> class : 1
and so class -> class : 1
so class class -> in : 1
for input typename -> traits : 1
for input typename -> class : 1
input typename traits -> class : 1
traits class virtual -> public : 2
class virtual public -> types : 2
virtual public types -> typedef : 1
virtual public types -> from : 1
public types typedef -> cht : 1
types typedef cht -> typedef : 1
typedef cht typedef -> typename : 1
cht typedef typename -> typedef : 1
traits explicit virtual -> class : 2
virtual class formatted -> input : 1
virtual class formatted -> output : 1
class formatted input -> unformatted : 1
formatted input unformatted -> input : 1
input unformatted input -> streamsize : 1
unformatted input streamsize -> streamsize : 1
input streamsize streamsize -> streamsize : 2
streamsize streamsize n -> streamsize : 1
streamsize n streamsize -> streamsize : 1
n streamsize streamsize -> streamsize : 1
streamsize streamsize int -> class : 1
streamsize int class -> template : 1
int class template -> is : 1
the base for -> all : 2
the base for -> your : 1
the base for -> the : 1
base for all -> input : 1
base for all -> output : 1
for all input -> it : 1
all input it -> declares : 1
input it declares -> members : 1
it declares members -> for : 2
declares members for -> reading : 1
declares members for -> writing : 1
members for reading -> from : 1
reading from streams -> and : 1
from streams and -> for : 1
streams and for -> managing : 2
and for managing -> the : 2
for managing the -> act : 2
for managing the -> buffer : 1
managing the act -> of : 2
the act of -> reading : 1
the act of -> writing : 1
act of reading -> from : 1
reading from a -> stream : 1
reading from a -> standard : 1
from a stream -> is : 1
stream is also -> known : 2
known as from -> the : 1
as from the -> reads : 1
from the reads -> go : 1
the reads go -> through : 1
reads go through -> a : 1
go through a -> stream : 2
through a stream -> which : 2
a stream which -> provides : 2
stream which provides -> the : 1
stream which provides -> access : 1
which provides the -> access : 1
provides the access -> to : 1
the access to -> the : 1
stream the and -> functions : 1
functions for in -> the : 1
stream buffer returns -> for : 1
buffer returns for -> an : 1
input the stream -> sets : 1
input the stream -> buffer : 2
stream sets in -> the : 1
sets in the -> if : 1
the buffer object -> throws : 1
buffer object throws -> an : 2
object throws an -> the : 2
stream sets performing -> an : 2
sets performing an -> input : 1
sets performing an -> output : 1
performing an input -> operation : 1
input operation or -> a : 1
operation or a -> the : 1
operation or a -> stream : 1
a the stream -> constructs : 1
the stream constructs -> a : 1
stream constructs a -> if : 2
constructs a if -> the : 2
if the sentry -> evaluates : 3
if the sentry -> object : 1
the sentry evaluates -> to : 3
sentry evaluates to -> the : 1
sentry evaluates to -> it : 2
to the read -> operation : 1
the read operation -> if : 1
read operation if -> the : 1
operation if the -> read : 1
operation if the -> write : 1
if the read -> throws : 1
the read throws -> an : 1
read throws an -> is : 1
throws an is -> the : 2
an is the -> second : 1
an is the -> object : 1
to the sentry -> constructor : 1
the sentry constructor -> is : 1
sentry constructor is -> for : 1
constructor is for -> the : 1
the formatted functions -> and : 1
formatted functions and -> for : 1
input the sentry -> object : 1
the sentry object -> is : 2
the sentry object -> evaluates : 1
sentry object is -> destroyed : 2
is destroyed before -> the : 2
destroyed before the -> input : 1
destroyed before the -> output : 1
before the input -> function : 1
before the input -> is : 1
the input function -> see : 1
input function see -> later : 1
function see later -> in : 2
more an input -> operation : 1
input operation throws -> an : 1
operation throws an -> the : 2
stream sets if -> is : 2
the stream does -> not : 2
stream does not -> throw : 2
not throw but -> instead : 2
throw but instead -> rethrows : 2
but instead rethrows -> the : 2
instead rethrows the -> original : 2
rethrows the original -> if : 1
rethrows the original -> following : 1
the original if -> any : 1
the original if -> the : 1
the original if -> or : 1
original if any -> input : 1
if any input -> operation : 1
input operation sets -> or : 1
operation sets or -> and : 1
sets or and -> that : 1
or and that -> bit : 1
and that bit -> is : 1
that bit is -> set : 1
the the usual -> exception : 1
the usual exception -> is : 1
usual exception is -> following : 1
exception is following -> are : 1
member the constructor -> and : 1
the constructor and -> initializes : 1
constructor and initializes -> to : 1
and initializes to -> see : 1
and initializes to -> or : 1
initializes to see -> the : 1
to see the -> function : 1
example of such -> a : 2
such a and -> returns : 1
a and returns -> see : 1
and returns see -> the : 2
and returns see -> later : 1
returns see the -> function : 2
in for an -> example : 2
in for an -> input : 1
such a a -> formatted : 1
a a formatted -> item : 1
a formatted item -> from : 1
formatted item from -> the : 1
from the these -> formatted : 1
the these formatted -> input : 1
these formatted input -> functions : 1
formatted input functions -> use : 1
input functions use -> the : 1
use the facet -> of : 2
the facet of -> the : 2
facet of the -> imbued : 2
facet of the -> const : 1
of the imbued -> locale : 2
of the imbued -> the : 1
the imbued locale -> as : 2
the imbued locale -> of : 1
imbued locale as -> shown : 2
locale as shown -> in : 2
in the facet -> to : 2
the facet to -> format : 4
the facet to -> perform : 1
facet to format -> see : 1
facet to format -> err : 1
facet to format -> if : 1
facet to format -> iter : 1
to format see -> the : 1
format see the -> header : 1
see the header -> for : 2
header for information -> about : 2
to format err -> input : 1
format err input -> to : 1
err input to -> the : 1
stream buffer if -> is : 2
stream buffer if -> you : 1
buffer if is -> a : 1
buffer if is -> is : 1
null the stream -> sets : 1
stream sets and -> returns : 1
sets and returns -> the : 1
sets and returns -> a : 1
function copies characters -> from : 1
copies characters from -> the : 2
stream to until -> it : 1
to until it -> reaches : 1
until it reaches -> the : 1
the input writing -> to : 1
input writing to -> or : 1
writing to or -> an : 1
writing to or -> when : 1
to or an -> exception : 1
if no characters -> are : 4
if no characters -> match : 2
copied to is -> the : 1
copied to is -> streamsize : 1
of characters extracted -> by : 1
characters extracted by -> the : 1
extracted by the -> most : 1
by the most -> recent : 3
the most recent -> call : 4
most recent call -> to : 4
recent call to -> an : 1
recent call to -> then : 1
recent call to -> was : 1
recent call to -> this : 1
to an unformatted -> member : 1
an unformatted member -> function : 1
unformatted member function -> and : 1
single character and -> returns : 1
single character and -> stores : 1
and returns if -> no : 1
and returns if -> both : 1
and returns if -> ever : 1
and returns if -> the : 3
and returns if -> you : 1
and returns if -> an : 1
and returns if -> they : 1
if no character -> is : 3
if no character -> appears : 2
no character is -> the : 2
no character is -> is : 1
function sets and -> returns : 1
function sets and -> does : 1
returns a single -> character : 1
character and stores -> it : 1
and stores it -> in : 1
stores it in -> if : 1
it in if -> no : 1
sets and does -> not : 1
does not modify -> the : 1
does not modify -> any : 1
modify the return -> value : 1
value is streamsize -> streamsize : 1
value is streamsize -> to : 1
is streamsize streamsize -> up : 2
streamsize streamsize up -> to : 2
streamsize up to -> characters : 5
to characters into -> the : 2
characters into the -> character : 2
that points reading -> stops : 2
points reading stops -> at : 2
reading stops at -> the : 2
at the sets -> or : 2
the sets or -> when : 2
sets or when -> the : 1
sets or when -> is : 1
next character would -> be : 1
character would be -> the : 1
be the delimiter -> character : 1
delimiter character is -> not : 1
delimiter character is -> read : 1
is not read -> from : 3
not read from -> the : 3
stored in is -> null : 1
stored in is -> derived : 1
in is null -> character : 1
is null character -> is : 2
value is characters -> to : 1
value is characters -> from : 2
is characters to -> the : 2
output buffer copying -> stops : 1
buffer copying stops -> when : 1
copying stops when -> an : 1
stops when an -> is : 1
when an is -> when : 1
an is when -> writing : 1
is when writing -> to : 1
when writing to -> or : 1
when writing to -> a : 1
to or when -> the : 1
to read would -> be : 1
read would be -> delimiter : 1
read would be -> a : 1
would be delimiter -> is : 1
be delimiter is -> not : 1
delimiter is not -> read : 1
input if no -> characters : 1
input if no -> read : 1
to is streamsize -> streamsize : 1
when is read -> delimiter : 1
is read delimiter -> character : 1
read delimiter character -> is : 1
from the buffer -> but : 1
from the buffer -> is : 1
the buffer but -> not : 1
buffer but not -> stored : 1
but not stored -> in : 1
not stored in -> no : 1
stored in no -> characters : 1
in no characters -> are : 1
from the is -> if : 1
from the is -> that : 1
from the is -> assigned : 1
from the is -> the : 1
is if exactly -> characters : 1
if exactly characters -> are : 1
are read before -> reaching : 1
read before reaching -> the : 1
before reaching the -> is : 1
reaching the is -> if : 1
if the limit -> of : 1
the limit of -> characters : 1
limit of characters -> is : 1
of characters is -> reached : 1
of characters is -> not : 1
of characters is -> the : 1
characters is reached -> before : 1
is reached before -> reading : 2
reached before reading -> a : 1
reached before reading -> and : 1
before reading a -> is : 1
reading a is -> null : 1
a is null -> character : 1
is characters from -> the : 1
is characters from -> if : 1
buffer and discards -> the : 1
and discards the -> operation : 1
discards the operation -> stops : 1
the operation stops -> when : 1
operation stops when -> one : 1
stops when one -> of : 1
the following characters -> have : 1
following characters have -> been : 1
been read and -> discarded : 1
read and discarded -> if : 1
and discarded if -> is : 1
discarded if is -> in : 1
case is is -> read : 1
is is read -> if : 1
is read if -> return : 1
read if return -> value : 1
if return value -> is : 1
value is ahead -> to : 1
is ahead to -> the : 1
ahead to the -> next : 1
next character in -> the : 1
input if returns -> is : 1
if returns is -> is : 1
if returns is -> and : 1
is is no -> characters : 1
is no characters -> are : 2
characters are extracted -> from : 1
are extracted from -> the : 1
extracted from the -> so : 1
the so a -> subsequent : 1
so a subsequent -> call : 1
call to returns -> streamsize : 1
call to returns -> to : 1
call to returns -> class : 1
to returns streamsize -> up : 1
returns streamsize up -> to : 1
characters and stores -> them : 1
that points before -> reading : 1
points before reading -> if : 1
before reading if -> is : 1
reading if is -> is : 1
is and nothing -> is : 1
and nothing is -> if : 1
nothing is if -> is : 1
if is reached -> before : 1
before reading and -> are : 1
reading and are -> a : 1
and are a -> null : 1
is not appended -> to : 2
not appended to -> the : 3
is streamsize to -> read : 1
streamsize to read -> as : 1
to read as -> many : 1
read as many -> immediately : 1
as many immediately -> available : 1
many immediately available -> characters : 1
immediately available characters -> as : 1
available characters as -> possible : 1
characters as possible -> into : 1
as possible into -> the : 1
possible into the -> array : 1
points if is -> false : 1
if is false -> before : 1
is false before -> is : 1
false before is -> and : 1
before is and -> returns : 1
and returns calls -> and : 1
returns calls and -> does : 1
calls and does -> one : 1
and does one -> of : 1
does one of -> the : 1
the is set -> and : 1
is set and -> no : 1
is set and -> if : 2
is set and -> the : 1
set and no -> characters : 1
and no characters -> are : 1
characters are no -> characters : 1
are no characters -> are : 1
characters are characters -> are : 1
are characters are -> read : 1
read into null -> character : 1
into null character -> is : 1
of characters stored -> in : 2
stored in to -> push : 1
in to push -> back : 1
input if is -> is : 2
is is set -> and : 2
is is set -> to : 4
set and if -> is : 2
is not calls -> if : 3
not calls if -> is : 2
not calls if -> returns : 1
calls if is -> null : 2
null or returns -> is : 2
or returns is -> the : 2
is a subsequent -> call : 2
to returns to -> seek : 1
returns to seek -> to : 1
first form specifies -> the : 2
form specifies the -> position : 2
form specifies the -> new : 2
specifies the position -> the : 2
position the second -> form : 2
second form specifies -> the : 2
specifies the new -> position : 2
new position as -> an : 2
position as an -> offset : 2
from a known -> position : 2
a known position -> of : 1
a known position -> current : 1
known position of -> current : 1
position of current -> or : 1
of current or -> if : 1
current or if -> is : 2
if is calls -> or : 2
is calls or -> the : 1
is calls or -> if : 1
calls or the -> return : 1
is the stream -> if : 1
is returns sync -> calls : 1
returns sync calls -> if : 1
sync calls if -> returns : 1
returns is and -> returns : 1
and returns returns -> the : 1
back the last -> input : 1
last input if -> is : 1
to returns class -> sentry : 1
returns class sentry -> class : 1
class sentry class -> for : 2
sentry class for -> input : 1
sentry class for -> output : 1
input typename class -> explicit : 1
typename class explicit -> bool : 1
class explicit bool -> noskipws : 1
explicit bool noskipws -> not : 1
bool noskipws not -> defined : 1
noskipws not defined -> not : 1
not defined object -> constructs : 2
defined object constructs -> a : 2
object constructs a -> temporary : 2
constructs a temporary -> object : 2
temporary object prior -> to : 2
object prior to -> each : 2
prior to each -> input : 1
prior to each -> output : 1
to each input -> the : 1
each input the -> object : 1
input the object -> is : 1
destroyed when the -> input : 1
destroyed when the -> output : 1
when the input -> operation : 1
when the input -> is : 1
when the input -> buffer : 1
the input operation -> finishes : 1
input operation finishes -> and : 1
operation finishes and -> the : 2
finishes and the -> function : 2
function the manages -> tied : 1
the manages tied -> streams : 1
manages tied streams -> and : 2
tied streams and -> is : 1
tied streams and -> unit : 1
tied streams and -> the : 1
streams and is -> responsible : 1
and is responsible -> for : 1
responsible for skipping -> whitespace : 1
for skipping whitespace -> prior : 1
skipping whitespace prior -> to : 1
whitespace prior to -> a : 1
prior to a -> formatted : 1
to a formatted -> stream : 1
a formatted stream -> passes : 1
formatted stream passes -> itself : 1
stream passes itself -> and : 1
stream passes itself -> to : 1
passes itself and -> a : 1
itself and a -> flag : 1
and a flag -> to : 1
a flag to -> the : 1
flag to the -> formatted : 1
to the formatted -> reads : 1
the formatted reads -> use : 1
formatted reads use -> for : 1
reads use for -> the : 1
the second unformatted -> reads : 1
second unformatted reads -> use : 1
unformatted reads use -> is : 1
reads use is -> the : 1
use is the -> sentry : 1
is the sentry -> first : 2
the sentry first -> flushes : 2
sentry first flushes -> any : 2
first flushes any -> tied : 2
flushes any tied -> that : 2
any tied that -> if : 2
tied that if -> is : 2
not the sentry -> calls : 2
the sentry calls -> this : 1
the sentry calls -> the : 1
the sentry calls -> sentry : 1
sentry calls this -> ensures : 1
calls this ensures -> that : 1
this ensures that -> prompts : 1
ensures that prompts -> and : 1
that prompts and -> similar : 1
prompts and similar -> output : 1
and similar output -> appears : 1
similar output appears -> before : 1
output appears before -> the : 1
input is if -> the : 1
argument is and -> if : 1
if the bit -> is : 3
the bit is -> not : 1
the bit is -> set : 2
the bit is -> clear : 2
bit is not -> set : 1
is not set -> in : 1
not set in -> the : 1
in the formatting -> flags : 1
formatting flags the -> constructor : 1
flags the constructor -> reads : 1
the constructor reads -> and : 1
constructor reads and -> discards : 1
reads and discards -> whitespace : 1
and discards whitespace -> the : 1
discards whitespace the -> sentry : 1
whitespace the sentry -> uses : 1
the sentry uses -> code : 1
sentry uses code -> similar : 1
uses code similar -> to : 1
code similar to -> that : 1
to that shown -> in : 1
that shown in -> whitespace : 1
shown in whitespace -> in : 1
in whitespace in -> an : 1
whitespace in an -> input : 2
an input whitespace -> in : 1
input whitespace in -> an : 1
an input ctype -> while : 1
input ctype while -> if : 1
ctype while if -> put : 1
while if put -> back : 1
if put back -> the : 1
put back the -> anything : 1
back the anything -> goes : 1
the anything goes -> the : 1
anything goes the -> sentry : 1
goes the sentry -> calls : 1
sentry calls the -> returns : 1
calls the returns -> if : 1
the returns if -> is : 1
is and class -> class : 1
and class class -> in : 1
and class class -> function : 1
and class class -> class : 1
in class narrow -> input : 1
in class narrow -> character : 2
class narrow input -> and : 1
narrow input and -> output : 1
output class specializes -> for : 4
class specializes for -> the : 8
class specializes for -> narrow : 1
class specializes for -> wide : 1
class specializes for -> type : 2
specializes for the -> class : 6
specializes for the -> in : 2
class input class -> specializes : 1
input class specializes -> for : 2
class in function -> function : 5
class in function -> skips : 1
function template input -> operator : 2
template input operator -> for : 2
input operator for -> single : 1
input operator for -> character : 1
operator for single -> typename : 1
for single typename -> unsigned : 1
single typename unsigned -> signed : 1
typename unsigned signed -> function : 2
unsigned signed function -> reads : 2
signed function reads -> a : 1
signed function reads -> characters : 1
character from an -> input : 1
input stream using -> the : 1
input stream using -> a : 1
stream using the -> rules : 1
stream using the -> return : 1
using the rules -> for : 1
using the rules -> of : 2
rules for a -> formatted : 1
for a formatted -> read : 1
formatted read a -> object : 1
read a object -> is : 1
constructed and initial -> whitespace : 1
and initial whitespace -> is : 2
initial whitespace is -> the : 1
initial whitespace is -> characters : 1
whitespace is the -> character : 1
the character is -> stored : 1
the character is -> an : 2
the character is -> a : 5
the character is -> graphical : 1
the character is -> printable : 1
the character is -> punctuation : 1
the character is -> whitespace : 1
character is is -> the : 1
value is that -> the : 1
value is that -> a : 1
form of reads -> the : 1
form of reads -> with : 1
of reads the -> character : 1
reads the character -> if : 1
and third forms -> read : 2
third forms read -> and : 2
forms read and -> class : 2
read and class -> class : 2
operator for character -> typename : 1
for character typename -> unsigned : 1
character typename unsigned -> signed : 1
function reads characters -> from : 1
reads characters from -> into : 1
reads characters from -> and : 2
characters from into -> as : 1
from into as -> with : 1
into as with -> any : 1
with any formatted -> a : 1
any formatted a -> object : 1
formatted a object -> is : 1
created and initial -> whitespace : 1
whitespace is characters -> are : 1
is characters are -> then : 1
is characters are -> read : 2
characters are then -> read : 1
are then read -> from : 1
then read from -> the : 3
the stream into -> until : 1
stream into until -> an : 1
into until an -> is : 1
until an is -> reached : 1
an is reached -> or : 1
is reached or -> the : 1
is reached or -> is : 1
reached or the -> next : 1
character read would -> be : 1
would be a -> whitespace : 1
be a whitespace -> character : 1
whitespace character space -> is : 1
character space is -> not : 1
space is not -> read : 1
from the limit -> the : 1
the limit the -> number : 1
characters read a -> good : 1
read a good -> set : 1
a good set -> the : 1
good set the -> to : 1
set the to -> at : 1
the to at -> characters : 1
to at characters -> will : 1
to at characters -> are : 1
at characters will -> be : 1
characters will be -> read : 1
will be read -> into : 1
will be read -> or : 1
be read into -> the : 1
into the function -> resets : 1
the function resets -> the : 1
function resets the -> width : 1
resets the width -> to : 1
width to after -> reading : 1
to after reading -> the : 1
reading the a -> null : 1
the a null -> character : 1
of the no -> characters : 1
the no characters -> are : 1
the is that -> the : 1
of reads with -> the : 1
reads with the -> character : 1
class wide input -> and : 2
class wide input -> class : 1
class wide input -> string : 1
wide input and -> output : 2
wide input class -> specializes : 1
in function skips -> whitespace : 1
function skips whitespace -> class : 1
skips whitespace class -> function : 1
whitespace class function -> is : 1
class function is -> an : 1
input stream manipulator -> that : 1
stream manipulator that -> skips : 1
that skips whitespace -> characters : 1
skips whitespace characters -> in : 1
characters in using -> the : 1
the same technique -> as : 1
same technique as -> if : 1
technique as if -> the : 1
if the manipulator -> reaches : 1
the manipulator reaches -> the : 1
manipulator reaches the -> it : 1
reaches the it -> sets : 1
the it sets -> but : 1
it sets but -> not : 1
sets but not -> you : 1
but not you -> want : 1
not you want -> to : 1
read a line -> of : 1
of text by -> calling : 1
text by calling -> but : 1
by calling but -> you : 1
calling but you -> also : 1
but you also -> want : 1
you also want -> to : 1
also want to -> skip : 1
also want to -> use : 1
want to skip -> whitespace : 1
skip whitespace at -> the : 1
whitespace at the -> beginning : 1
is an unformatted -> input : 1
an unformatted input -> it : 1
unformatted input it -> does : 1
input it does -> not : 1
does not automatically -> skip : 1
not automatically skip -> the : 1
automatically skip the -> following : 1
skip the following -> example : 1
example shows one -> way : 1
way to skip -> whitespace : 1
skip whitespace and -> read : 1
whitespace and read -> the : 1
and read the -> line : 1
read the line -> using : 1
the line using -> in : 1
line using in -> class : 1
using in class -> class : 1
and templates for -> defining : 1
templates for defining -> and : 1
for defining and -> using : 1
defining and using -> and : 1
and using and -> iterators : 1
using and iterators -> are : 1
iterators are especially -> important : 1
important when using -> the : 1
standard algorithms in -> iterator : 1
algorithms in iterator -> gives : 1
in iterator gives -> a : 1
iterator gives a -> program : 1
gives a program -> access : 1
a program access -> to : 1
program access to -> the : 1
a container or -> other : 2
a container or -> sequence : 1
or other such -> as : 1
other such as -> an : 1
other such as -> you : 4
other such as -> multiplication : 1
think of an -> iterator : 1
of an iterator -> as : 1
of an iterator -> points : 1
of an iterator -> that : 4
an iterator as -> an : 1
iterator as an -> abstraction : 1
as an abstraction -> of : 1
syntax for using -> iterators : 1
for using iterators -> resembles : 1
using iterators resembles -> that : 1
iterators resembles that -> of : 1
resembles that of -> an : 1
that of an -> iterator : 1
an iterator points -> to : 1
a single element -> in : 2
a single element -> and : 1
a single element -> more : 1
a single element -> by : 1
single element in -> a : 1
single element in -> and : 1
container or sequence -> and : 1
or sequence and -> can : 1
sequence and can -> be : 1
can be advanced -> to : 1
be advanced to -> the : 1
advanced to the -> next : 1
the next element -> with : 1
the next element -> in : 1
next element with -> the : 1
element with the -> the : 1
the the unary -> operator : 1
the unary operator -> returns : 1
the unary operator -> to : 1
unary operator returns -> the : 1
returns the element -> that : 1
the element that -> the : 1
element that the -> iterator : 1
iterator points iterators -> for : 1
points iterators for -> output : 1
iterators for output -> can : 1
for output can -> be : 1
output can be -> two : 1
can be two -> iterators : 1
be two iterators -> are : 1
two iterators are -> equal : 1
iterators are equal -> if : 1
iterators are equal -> to : 1
equal if they -> point : 1
if they point -> to : 2
the same position -> in : 1
same position in -> the : 1
they both point -> to : 1
both point to -> one : 1
one position past -> the : 5
position past the -> end : 3
position past the -> you : 1
position past the -> last : 1
the same are -> five : 1
same are five -> categories : 1
categories of one -> pass : 1
of one pass -> to : 1
one pass to -> read : 1
one pass to -> write : 1
pass to read -> a : 1
read a the -> increment : 1
a the increment -> operator : 2
dereference operator does -> not : 1
operator does not -> return : 1
not return an -> so : 1
return an so -> you : 1
not modify one -> pass : 1
modify one pass -> to : 1
pass to write -> a : 1
compare output like -> a : 1
output like a -> combination : 1
like a combination -> of : 1
combination of an -> input : 1
input and an -> output : 1
an output you -> can : 1
output you can -> use : 1
forward iterator anywhere -> an : 1
iterator anywhere an -> input : 1
anywhere an input -> iterator : 1
required or where -> an : 1
or where an -> output : 1
where an output -> iterator : 1
iterator is a -> forward : 1
is a forward -> as : 1
a forward as -> its : 1
forward as its -> name : 1
its name permits -> unidirectional : 1
name permits unidirectional -> access : 1
permits unidirectional access -> to : 1
single element and -> modify : 1
element and modify -> it : 1
and modify it -> multiple : 1
modify it multiple -> times : 1
multiple times before -> advancing : 1
times before advancing -> the : 1
before advancing the -> like : 1
advancing the like -> forward : 1
the like forward -> iterators : 1
like forward iterators -> but : 1
forward iterators but -> also : 1
iterators but also -> support : 2
but also support -> the : 2
also support the -> decrement : 1
also support the -> operator : 1
support the decrement -> operator : 1
the decrement operator -> to : 1
decrement operator to -> move : 1
the iterator backward -> by : 1
iterator backward by -> one : 1
backward by one -> access : 1
by one access -> like : 1
one access like -> bidirectional : 1
access like bidirectional -> iterators : 1
like bidirectional iterators -> but : 1
bidirectional iterators but -> also : 1
support the operator -> to : 1
to access any -> index : 1
access any index -> in : 1
a conventional in -> a : 1
conventional in a -> pointer : 1
in a pointer -> can : 1
a constant rvalue -> or : 1
constant rvalue or -> a : 1
rvalue or a -> and : 1
a and discusses -> in : 1
and discusses in -> more : 1
discusses in more -> iterator : 1
in more iterator -> can : 1
more iterator can -> point : 1
to any element -> in : 1
any element in -> a : 1
a sequence or -> to : 1
sequence or to -> one : 1
past the you -> cannot : 1
you cannot dereference -> an : 2
cannot dereference an -> iterator : 1
cannot dereference an -> output : 1
past the but -> you : 1
you can compare -> it : 1
can compare it -> with : 1
compare it with -> other : 1
it with other -> iterators : 1
with other iterators -> it : 1
other iterators it -> is : 1
iterators it is -> not : 1
not an output -> if : 1
an output if -> it : 1
output if it -> is : 1
is a bidirectional -> or : 1
random access decrease -> its : 1
access decrease its -> position : 1
decrease its position -> so : 1
its position so -> it : 1
position so it -> points : 1
so it points -> to : 1
a valid element -> of : 1
valid element of -> the : 1
of the are -> often : 1
the are often -> used : 1
a range has -> two : 1
range has two -> a : 1
two a starting -> point : 1
a starting point -> and : 1
starting point and -> an : 1
point and an -> ending : 1
and an ending -> the : 1
an ending the -> end : 1
ending the end -> iterator : 1
the end iterator -> typically : 1
end iterator typically -> points : 1
iterator typically points -> to : 1
typically points to -> one : 1
range is often -> written : 1
is often written -> using : 1
often written using -> the : 1
written using the -> mathematical : 1
written using the -> for : 1
using the mathematical -> notation : 1
notation of in -> which : 1
which the square -> bracket : 1
square bracket means -> is : 1
bracket means is -> included : 1
means is included -> in : 1
the parenthesis means -> is : 1
parenthesis means is -> excluded : 1
means is excluded -> from : 1
from the ordinary -> iterators : 1
the ordinary iterators -> can : 1
ordinary iterators can -> be : 1
iterators can be -> uninitialized : 1
can be uninitialized -> or : 1
be uninitialized or -> otherwise : 1
uninitialized or otherwise -> have : 1
or otherwise have -> invalid : 1
otherwise have invalid -> such : 1
have invalid such -> as : 1
invalid such as -> in : 1
which is any -> it : 1
is any it -> is : 1
ensure that you -> dereference : 1
ensure that you -> do : 1
that you dereference -> only : 1
you dereference only -> valid : 1
dereference only valid -> that : 1
only valid that -> you : 1
valid that you -> let : 1
that you let -> iterators : 1
you let iterators -> run : 1
let iterators run -> past : 1
iterators run past -> their : 1
run past their -> valid : 1
past their valid -> and : 1
their valid and -> so : 1
valid and so -> create : 1
and so create -> your : 1
so create your -> own : 1
create your own -> iterator : 1
own iterator see -> the : 1
iterator see the -> class : 1
see the class -> function : 1
see the class -> later : 1
see the class -> in : 1
see the class -> for : 1
see the class -> template : 1
template moves iterator -> forward : 1
moves iterator forward -> or : 1
iterator forward or -> typename : 1
forward or typename -> void : 1
or typename void -> distance : 1
typename void distance -> function : 1
void distance function -> template : 1
distance function template -> advances : 1
function template advances -> an : 1
template advances an -> input : 1
advances an input -> iterator : 1
input iterator by -> a : 1
iterator by a -> distance : 1
by a distance -> if : 1
a distance if -> the : 1
distance if the -> iterator : 1
iterator is bidirectional -> or : 1
is bidirectional or -> random : 1
or random can -> be : 1
random can be -> if : 1
iterator is random -> the : 1
is random the -> function : 1
random the function -> is : 1
function is specialized -> as : 1
function is specialized -> for : 1
is specialized as -> other : 1
specialized as other -> iterators : 1
as other iterators -> apply : 1
other iterators apply -> the : 1
iterators apply the -> operator : 1
apply the operator -> times : 1
the operator times -> for : 1
operator times for -> a : 1
times for a -> bidirectional : 1
for a bidirectional -> iterator : 1
for a bidirectional -> public : 1
for a bidirectional -> or : 1
bidirectional iterator when -> is : 1
bidirectional iterator when -> writing : 1
iterator when is -> function : 1
iterator when is -> a : 1
when is function -> function : 1
class template output -> iterator : 3
template output iterator -> to : 3
output iterator to -> push : 1
output iterator to -> write : 3
iterator to push -> items : 1
to push items -> back : 1
push items back -> onto : 1
items back onto -> a : 1
back onto a -> class : 1
onto a class -> public : 1
a class public -> typedef : 2
public typedef container -> explicit : 2
typedef container explicit -> class : 2
typedef container explicit -> x : 1
typedef container explicit -> bool : 1
container explicit class -> template : 2
explicit class template -> implements : 3
template implements an -> output : 4
implements an output -> iterator : 4
iterator that stores -> elements : 3
that stores elements -> in : 3
stores elements in -> a : 3
a container by -> calling : 3
container by calling -> the : 6
container by calling -> this : 1
create a object -> is : 3
the function way -> works : 3
function way works -> seems : 3
way works seems -> slightly : 3
works seems slightly -> although : 3
seems slightly although -> it : 3
slightly although it -> is : 3
it is perfectly -> reasonable : 3
is perfectly reasonable -> for : 3
perfectly reasonable for -> an : 3
reasonable for an -> output : 3
for an output -> the : 5
for an output -> iterator : 2
for an output -> and : 1
output the operator -> returns : 3
returns the not -> an : 3
the not an -> element : 3
not an element -> of : 3
the the expression -> assigns : 3
the expression assigns -> to : 3
expression assigns to -> the : 3
assigns to the -> iterator : 3
the iterator the -> assignment : 3
the iterator the -> item : 1
iterator the assignment -> operator : 3
the assignment operator -> appends : 1
the assignment operator -> adds : 2
the assignment operator -> does : 1
the assignment operator -> to : 2
the assignment operator -> must : 1
assignment operator appends -> to : 1
operator appends to -> the : 1
appends to the -> underlying : 1
to the underlying -> container : 6
the underlying container -> by : 3
the underlying container -> the : 3
underlying container by -> calling : 3
the iterator does -> not : 3
iterator does not -> maintain : 3
does not maintain -> any : 3
not maintain any -> notion : 3
maintain any notion -> of : 3
any notion of -> a : 3
notion of a -> and : 3
and the increment -> operator : 3
increment operator is -> a : 3
is a following -> are : 3
a following are -> the : 4
the member with -> the : 2
the member with -> and : 1
value is with -> no : 3
value is with -> the : 1
with no side -> function : 1
with no side -> class : 3
no side function -> function : 1
side function function -> class : 1
function template constructs -> a : 3
function template constructs -> an : 1
template constructs a -> object : 2
template constructs a -> pair : 1
container to add -> numbers : 1
to add numbers -> to : 5
add numbers to -> a : 5
numbers to a -> shows : 2
numbers to a -> class : 1
numbers to a -> function : 1
numbers to a -> the : 1
to a shows -> how : 2
to a shows -> a : 1
use to read -> integers : 2
to read integers -> from : 2
read integers from -> a : 2
integers from a -> file : 2
integers from a -> following : 1
from a file -> into : 2
a file into -> a : 2
file into a -> to : 1
file into a -> list : 1
into a to -> add : 1
a to add -> numbers : 4
function class tag -> for : 3
class tag for -> a : 3
class tag for -> an : 2
tag for a -> bidirectional : 1
tag for a -> forward : 1
tag for a -> random : 1
a bidirectional public -> the : 1
bidirectional public the -> class : 1
public the class -> as : 3
class as the -> iterator : 5
as the iterator -> category : 5
iterator category when -> declaring : 5
category when declaring -> a : 5
declaring a new -> bidirectional : 1
declaring a new -> forward : 1
declaring a new -> input : 1
declaring a new -> output : 1
declaring a new -> random : 1
a new bidirectional -> iterator : 1
new bidirectional iterator -> when : 1
iterator when writing -> a : 5
writing a generic -> algorithm : 6
a generic algorithm -> or : 6
generic algorithm or -> similar : 5
generic algorithm or -> other : 1
algorithm or similar -> you : 5
or similar you -> can : 5
similar you can -> use : 5
use the category -> to : 5
category to write -> specialized : 5
to write specialized -> implementations : 5
write specialized implementations -> for : 5
specialized implementations for -> different : 5
implementations for different -> kinds : 5
kinds of see -> simple : 6
of see simple -> implementation : 6
see simple implementation -> of : 6
template counts elements -> between : 1
counts elements between -> two : 1
elements between two -> typename : 1
between two typename -> inputiterator : 1
two typename inputiterator -> function : 1
typename inputiterator function -> returns : 1
inputiterator function returns -> the : 1
of elements between -> and : 1
elements between and -> the : 1
specialized for random -> access : 1
access iterators to -> use : 1
iterators to use -> the : 1
use the for -> other : 1
the for other -> input : 1
for other input -> the : 1
input the function -> applies : 1
the function applies -> the : 1
function applies the -> operator : 1
applies the operator -> to : 1
operator to until -> the : 1
to until the -> behavior : 1
until the behavior -> is : 1
undefined if and -> refer : 1
undefined if and -> are : 1
if and refer -> to : 1
and refer to -> different : 1
refer to different -> containers : 1
to different containers -> or : 1
different containers or -> if : 1
containers or if -> points : 1
or if points -> to : 1
an element earlier -> than : 1
element earlier than -> simple : 1
earlier than simple -> implementation : 1
than simple implementation -> of : 1
implementation of shows -> a : 1
the first specialized -> implementation : 1
first specialized implementation -> works : 1
specialized implementation works -> for : 1
implementation works for -> any : 1
works for any -> iterator : 1
for any iterator -> output : 1
any iterator output -> which : 1
iterator output which -> do : 1
output which do -> not : 1
which do not -> support : 1
not support comparison -> with : 1
support comparison with -> the : 1
comparison with the -> the : 1
the second one -> works : 1
second one works -> only : 1
one works only -> with : 1
only with random -> access : 1
with random access -> iterators : 1
access iterators and -> uses : 1
iterators and uses -> the : 1
and uses the -> subtraction : 1
uses the subtraction -> operator : 1
the subtraction operator -> to : 1
subtraction operator to -> compute : 1
operator to compute -> the : 1
compute the distance -> in : 1
the distance in -> constant : 1
distance in constant -> the : 1
in constant the -> compiler : 1
constant the compiler -> picks : 1
the compiler picks -> the : 1
compiler picks the -> more : 1
picks the more -> specialized : 1
the more specialized -> function : 1
more specialized function -> when : 1
specialized function when -> it : 1
function when it -> so : 1
when it so -> random : 1
it so random -> access : 1
so random access -> iterators : 1
access iterators can -> compute : 1
iterators can compute -> distances : 1
can compute distances -> in : 1
compute distances in -> constant : 1
distances in constant -> compared : 1
in constant compared -> to : 1
constant compared to -> linear : 1
compared to linear -> time : 1
to linear time -> for : 1
linear time for -> other : 1
time for other -> simple : 1
for other simple -> implementation : 1
other simple implementation -> of : 1
implementation of std -> typename : 1
of std typename -> inputiter : 1
std typename inputiter -> typename : 1
inputiter typename for -> first : 1
typename for first -> return : 1
first return typename -> inputiter : 1
return typename inputiter -> return : 1
return last typename -> inputiter : 1
last typename inputiter -> return : 1
inputiter return function -> function : 1
for a forward -> public : 1
a forward public -> the : 1
forward public the -> class : 1
a new forward -> iterator : 1
new forward iterator -> when : 1
forward iterator when -> writing : 1
class template iterator -> to : 2
class template iterator -> typename : 1
class template iterator -> struct : 1
class template iterator -> wrapper : 1
class template iterator -> for : 1
template iterator to -> insert : 2
iterator to insert -> elements : 2
to insert elements -> at : 1
to insert elements -> in : 1
insert elements at -> the : 1
elements at the -> front : 1
elements at the -> desired : 1
assignment operator adds -> to : 2
operator adds to -> the : 2
adds to the -> underlying : 2
no side class -> class : 3
side class class -> function : 1
side class class -> class : 2
the container a -> to : 1
container a to -> add : 1
into a list -> in : 1
a list in -> reverse : 1
list in reverse -> a : 1
in reverse a -> to : 1
reverse a to -> add : 1
tag for an -> input : 1
tag for an -> output : 1
input the class -> as : 1
a new input -> iterator : 1
new input iterator -> when : 1
input iterator when -> writing : 1
insert elements in -> a : 1
in a public -> typename : 1
in a public -> function : 1
a public typename -> typedef : 1
public typename typedef -> container : 1
public typename typedef -> chart : 1
typename typedef container -> typename : 1
typename typedef container -> explicit : 2
typename typedef container -> container : 1
typedef container typename -> class : 1
container typename class -> template : 1
functions of typename -> the : 1
of typename the -> member : 1
typename the member -> with : 1
member with and -> with : 1
with and with -> the : 1
with and with -> with : 1
with and with -> performing : 1
and with the -> elements : 1
with the elements -> to : 1
the elements to -> be : 1
the elements to -> the : 1
to be inserted -> in : 1
be inserted in -> the : 1
inserted in the -> container : 1
inserted in the -> the : 1
the container will -> be : 1
container will be -> inserted : 1
will be inserted -> at : 1
be inserted at -> position : 1
inserted at position -> a : 1
at position a -> value : 1
position a value -> to : 1
in the performing -> the : 1
the performing the -> equivalent : 1
performing the equivalent -> of : 1
the return with -> no : 1
return with no -> side : 1
template creates an -> typename : 1
creates an typename -> iterator : 1
an typename iterator -> function : 1
typename iterator function -> template : 1
iterator function template -> constructs : 1
template constructs an -> object : 1
constructs an object -> for : 1
an object for -> the : 1
container to insert -> items : 1
to insert items -> starting : 1
insert items starting -> at : 1
items starting at -> position : 1
starting at position -> inserter : 1
starting at position -> the : 2
starting at position -> to : 1
starting at position -> and : 1
starting at position -> unless : 1
at position inserter -> to : 1
position inserter to -> insert : 1
inserter to insert -> a : 3
to insert a -> vector : 3
to insert a -> special : 1
insert a vector -> in : 3
a vector in -> the : 3
vector in the -> middle : 3
middle of another -> illustrates : 1
middle of another -> inserter : 1
middle of another -> function : 1
of another illustrates -> a : 1
another illustrates a -> simple : 1
illustrates a simple -> use : 1
of the inserter -> to : 1
the inserter to -> insert : 1
of another inserter -> to : 1
another inserter to -> insert : 1
of another function -> function : 1
another function function -> function : 1
class template input -> iterator : 2
template input iterator -> to : 2
input iterator to -> read : 3
iterator to read -> items : 1
iterator to read -> characters : 2
to read items -> from : 1
read items from -> an : 1
from an typename -> chart : 1
an typename chart -> typename : 2
typename chart typename -> traits : 2
chart typename traits -> typename : 1
chart typename traits -> class : 1
typename traits typename -> distance : 1
traits typename distance -> class : 1
typename distance class -> public : 1
distance class public -> const : 1
class public const -> const : 1
public const const -> typedef : 1
const const typedef -> chart : 1
const typedef chart -> typedef : 1
traits typedef const -> const : 1
traits typedef const -> class : 1
typedef const const -> class : 1
class template wraps -> an : 2
class template wraps -> a : 2
template wraps an -> input : 1
template wraps an -> output : 1
wraps an input -> iterator : 1
input iterator around -> an : 1
iterator around an -> input : 1
iterator around an -> output : 1
around an input -> stream : 1
input stream instance -> of : 1
stream instance of -> making : 1
instance of making -> the : 1
of making the -> stream : 2
making the stream -> appear : 2
the stream appear -> to : 2
stream appear to -> be : 2
appear to be -> a : 2
sequence of each -> of : 2
type a to -> add : 1
the function shows -> how : 1
shows how an -> can : 1
how an can -> be : 1
used to read -> a : 1
series of integers -> from : 1
of integers from -> a : 1
from a following -> are : 1
of an that -> denotes : 1
an that denotes -> the : 1
that denotes the -> end : 1
denotes the end -> of : 1
of the iterators -> are : 1
the iterators are -> equal : 1
to each other -> and : 1
each other and -> are : 1
other and are -> not : 1
to any other -> an : 1
any other an -> to : 1
other an to -> read : 1
an to read -> from : 1
read from a -> the : 1
read from a -> use : 1
the constructor might -> read : 1
constructor might read -> the : 1
might read the -> first : 1
read the first -> item : 1
first item from -> the : 3
the an that -> wraps : 1
an that wraps -> a : 1
wraps a stream -> is : 1
wraps a stream -> buffer : 1
stream is equal -> to : 1
equal to an -> iterator : 1
to an iterator -> when : 1
an iterator when -> is : 1
when is a -> copy : 1
is a copy -> of : 7
copy of note -> that : 1
of note that -> two : 1
of note that -> does : 1
note that two -> objects : 1
that two objects -> are : 1
objects are the -> same : 1
the same is -> if : 1
same is if -> they : 1
is if they -> point : 1
the same stream -> the : 1
the same stream -> class : 1
same stream the -> item : 1
stream the item -> that : 1
item that was -> read : 2
item that was -> added : 1
that was read -> most : 3
was read most -> recently : 3
read most recently -> from : 3
most recently from -> the : 3
recently from the -> a : 1
recently from the -> the : 1
recently from the -> input : 1
the next item -> from : 1
next item from -> the : 1
the stream using -> the : 1
the stream using -> if : 1
using the return -> value : 1
copy of made -> prior : 1
of made prior -> to : 1
made prior to -> reading : 1
to reading from -> the : 1
to read characters -> from : 2
read characters from -> a : 1
read characters from -> the : 1
characters from a -> typename : 1
characters from a -> character : 1
a typename class -> public : 2
typename typedef chart -> typedef : 1
typedef class exposition -> only : 1
class exposition only -> chart : 1
exposition only chart -> bool : 1
only chart bool -> class : 1
chart bool class -> template : 1
template wraps a -> stream : 1
template wraps a -> object : 1
stream buffer object -> of : 1
stream buffer object -> throws : 1
stream buffer object -> manages : 1
buffer object of -> as : 1
object of as -> an : 1
of as an -> input : 1
as an input -> iterator : 1
the stream files -> using : 2
stream files using -> streambuf : 2
files using streambuf -> shows : 2
files using streambuf -> const : 1
using streambuf shows -> how : 2
use to copy -> files : 1
to copy files -> using : 1
copy files using -> streambuf : 1
using streambuf const -> operator : 1
streambuf const operator -> returns : 1
returns a which -> is : 1
object that stands -> in : 1
that stands in -> for : 1
stands in for -> the : 1
for the its -> use : 1
the its use -> is : 1
use is largely -> and : 1
is largely and -> you : 1
largely and you -> rarely : 1
and you rarely -> need : 1
you rarely need -> to : 1
rarely need to -> think : 1
need to think -> about : 1
to think about -> the : 1
think about the -> definition : 1
about the definition -> and : 1
the definition and -> name : 1
and name of -> the : 1
of the proxy -> class : 1
of the proxy -> shows : 1
of the proxy -> typename : 1
the proxy class -> are : 1
proxy class are -> but : 1
class are but -> the : 1
are but the -> class : 1
but the class -> has : 1
class has at -> least : 1
least the capability -> to : 1
the capability to -> return : 1
capability to return -> the : 1
return the input -> character : 1
return the input -> array : 3
the input character -> and : 1
the input character -> is : 1
input character and -> the : 1
input character and -> advances : 1
and the underlying -> stream : 1
the underlying stream -> this : 1
underlying stream this -> section : 1
this section assumes -> that : 1
section assumes that -> the : 1
assumes that the -> class : 1
assumes that the -> order : 1
name is trivial -> implementation : 1
is trivial implementation -> of : 1
trivial implementation of -> the : 3
the proxy shows -> a : 1
proxy shows a -> prototypical : 1
shows a prototypical -> implementation : 1
a prototypical implementation -> of : 1
prototypical implementation of -> trivial : 1
implementation of trivial -> implementation : 1
of trivial implementation -> of : 1
the proxy typename -> class : 1
proxy typename class -> friend : 1
typename class friend -> typename : 1
class friend typename -> class : 1
friend typename class -> chart : 1
typename class chart -> chart : 1
class chart chart -> return : 1
chart chart return -> the : 1
chart return the -> following : 1
return the following -> descriptions : 1
the following descriptions -> of : 3
following descriptions of -> the : 3
the data member -> is : 2
the data member -> that : 1
the data member -> with : 1
the data member -> to : 2
the data member -> copies : 2
stream the member -> serves : 2
the member serves -> only : 2
member serves only -> to : 2
only to keep -> the : 2
keep the function -> descriptions : 2
function descriptions clear -> and : 2
descriptions clear and -> the : 2
clear and the -> class : 2
required to have -> such : 3
required to have -> a : 1
to have such -> a : 3
have such a -> nor : 1
have such a -> or : 1
have such a -> data : 1
such a nor -> is : 1
a nor is -> the : 1
nor is the -> class : 1
the class required -> to : 1
class required to -> have : 1
to have a -> member : 1
to have a -> the : 2
to have a -> when : 1
a member with -> that : 2
member with that -> the : 2
with that the -> an : 1
with that the -> stream : 1
that the an -> and : 1
the an and -> initializes : 1
an and initializes -> to : 1
initializes to or -> if : 1
to or if -> an : 1
or if an -> iterator : 1
if an iterator -> is : 1
an iterator is -> and : 1
returns if both -> iterators : 1
if both iterators -> are : 1
both iterators are -> iterators : 1
iterators are iterators -> or : 1
are iterators or -> if : 1
iterators or if -> neither : 1
if neither iterator -> is : 1
neither iterator is -> an : 1
an the iterators -> do : 1
the iterators do -> not : 1
iterators do not -> have : 1
iterators do not -> become : 1
same stream class -> class : 1
stream class class -> class : 1
stream class class -> template : 1
template iterator typename -> typename : 1
iterator typename typename -> difference : 1
typename typename difference -> typename : 1
typename difference typename -> pointer : 1
difference typename pointer -> typename : 1
typename pointer typename -> reference : 1
pointer typename reference -> struct : 1
typename reference struct -> typedef : 1
reference struct typedef -> t : 1
t typedef difference -> typedef : 1
typedef difference typedef -> pointer : 1
difference typedef pointer -> typedef : 1
typedef pointer typedef -> reference : 1
pointer typedef reference -> typedef : 1
typedef reference typedef -> category : 1
reference typedef category -> class : 1
typedef category class -> template : 1
category class template -> is : 1
a convenient template -> to : 1
convenient template to -> use : 1
template to use -> when : 1
use when implementing -> your : 1
when implementing your -> own : 1
implementing your own -> following : 1
own following are -> the : 1
the template which -> are : 1
template which are -> all : 1
which are all -> type : 1
are all type -> be : 1
all type be -> one : 1
type be one -> of : 1
of the five -> iterator : 2
the five iterator -> category : 1
the five iterator -> tag : 1
five iterator category -> or : 1
iterator category or -> element : 1
category or element -> it : 1
or element it -> can : 1
element it can -> be : 1
be for an -> output : 2
output iterator because -> you : 2
iterator because you -> cannot : 2
dereference an output -> integral : 1
an output integral -> type : 1
output integral type -> that : 1
represents the distance -> between : 1
between two it -> can : 1
two it can -> be : 1
you cannot measure -> the : 1
cannot measure the -> distance : 1
measure the distance -> between : 1
between two output -> this : 1
two output this -> parameter : 1
output this parameter -> is : 1
this parameter is -> the : 3
which is suitable -> for : 1
is suitable for -> typical : 1
suitable for typical -> this : 1
for typical this -> parameter : 1
typical this parameter -> is : 1
which is correct -> for : 2
is correct for -> most : 2
correct for most -> this : 1
correct for most -> class : 1
for most this -> parameter : 1
most this parameter -> is : 1
for most class -> class : 1
most class class -> class : 1
template iterator struct -> typedef : 1
iterator struct typedef -> typename : 1
struct typedef typename -> typedef : 1
typedef typename class -> template : 1
class template declares -> traits : 1
template declares traits -> for : 1
declares traits for -> an : 1
traits for an -> if : 1
base for your -> custom : 1
for your custom -> you : 1
your custom you -> need : 1
custom you need -> to : 1
need to specialize -> if : 1
to specialize if -> you : 1
specialize if you -> are : 1
writing a custom -> container : 1
a custom container -> or : 1
custom container or -> you : 1
container or you -> should : 1
you should always -> use : 1
should always use -> to : 1
always use to -> obtain : 1
obtain the traits -> of : 1
the traits of -> an : 1
traits of an -> if : 1
a plain pointer -> as : 1
plain pointer as -> an : 1
an the standard -> library : 1
standard library specializes -> for : 1
library specializes for -> see : 1
specializes for see -> the : 1
for see the -> next : 1
the next you -> write : 1
next you write -> your : 1
your own the -> type : 1
own the type -> must : 1
five iterator tag -> the : 1
iterator tag the -> class : 1
tag the class -> for : 1
class for an -> output : 1
output and are -> writing : 1
and are writing -> a : 1
algorithm or other -> function : 1
that uses you -> can : 1
uses you can -> use : 1
use to specialize -> the : 1
to specialize the -> behavior : 1
specialize the behavior -> for : 1
behavior for certain -> kinds : 1
implementation of which -> shows : 1
implementation of which -> replaces : 2
of which shows -> how : 1
which shows how -> iterator : 1
which shows how -> to : 3
shows how iterator -> traits : 1
how iterator traits -> can : 1
iterator traits can -> be : 1
used to improve -> the : 1
to improve the -> performance : 1
improve the performance -> of : 1
performance of a -> class : 1
template specialization iterator -> traits : 2
specialization iterator traits -> specialized : 2
iterator traits specialized -> for : 2
traits specialized for -> struct : 1
traits specialized for -> pointers : 1
specialized for struct -> typedef : 1
for struct typedef -> typedef : 1
typedef class template -> is : 2
specialized for this -> specialization : 1
for this specialization -> lets : 1
this specialization lets -> you : 2
specialization lets you -> use : 2
random access class -> class : 2
access class class -> template : 1
access class class -> class : 1
specialized for pointers -> to : 2
for pointers to -> struct : 1
for pointers to -> this : 1
pointers to struct -> typedef : 1
to struct typedef -> typedef : 1
t typedef const -> typedef : 1
const typedef const -> typedef : 1
const typedef class -> template : 1
pointers to this -> specialization : 1
to this specialization -> lets : 1
iterator to write -> items : 1
iterator to write -> characters : 2
to write items -> to : 2
write items to -> an : 1
write items to -> if : 1
items to an -> typename : 1
to an typename -> chart : 1
typedef const class -> template : 1
wraps an output -> iterator : 1
output iterator around -> an : 1
around an output -> stream : 1
output stream of -> making : 1
stream of making -> the : 1
type for suppose -> you : 1
have a vector -> of : 1
vector of you -> can : 1
you can print -> the : 1
can print the -> one : 1
number per by -> using : 1
per by using -> an : 1
using an acquire -> following : 1
an acquire following -> are : 1
acquire following are -> the : 1
functions of to -> write : 1
of to write -> items : 1
items to if -> is : 1
is it will -> be : 1
is it will -> delete : 1
will be written -> after : 1
be written after -> each : 1
written after each -> the : 1
after each the -> copy : 1
each the copy -> constructor : 1
copy constructor copies -> the : 1
constructor copies the -> reference : 1
copies the reference -> to : 1
stream and to -> the : 1
to the delimiter -> from : 1
the delimiter from -> to : 1
delimiter from to -> the : 1
stream using if -> the : 1
using if the -> has : 1
using if the -> array : 1
if the has -> a : 1
the has a -> it : 1
has a it -> is : 1
it is written -> after : 1
is written after -> the : 1
written after the -> return : 1
after the return -> value : 1
to write characters -> to : 2
write characters to -> a : 1
write characters to -> the : 1
characters to a -> typename : 1
traits typedef typedef -> bool : 1
typedef typedef bool -> const : 1
typedef typedef bool -> typedef : 1
typedef bool const -> class : 1
typedef bool const -> typedef : 1
wraps a object -> as : 1
object as an -> output : 1
object as an -> argument : 1
as an output -> iterator : 1
copy the following -> descriptions : 1
such a or -> a : 1
stream buffer or -> in : 1
buffer or in -> if : 1
or in if -> returns : 1
in if returns -> and : 1
if returns and -> returns : 1
returns and returns -> if : 1
returns if ever -> returned : 1
if ever returned -> it : 1
ever returned it -> returns : 1
returned it returns -> class : 1
in class tag -> for : 1
output the class -> as : 1
a new output -> iterator : 1
new output iterator -> when : 1
output iterator when -> writing : 1
class class tag -> for : 1
random access public -> the : 1
access public the -> class : 1
a new random -> access : 1
new random access -> iterator : 1
access iterator when -> writing : 1
template iterator wrapper -> to : 1
iterator wrapper to -> reverse : 1
wrapper to reverse -> class : 1
to reverse class -> public : 1
reverse class public -> typename : 1
typename typename iterator -> typedef : 1
typename iterator typedef -> iterator : 1
iterator typedef iterator -> typedef : 1
typedef iterator typedef -> typename : 1
iterator typedef typename -> typedef : 1
typedef typename explicit -> template : 1
typename explicit template -> iterator : 1
explicit template iterator -> explicit : 1
template iterator explicit -> reference : 1
iterator explicit reference -> pointer : 1
explicit reference pointer -> reference : 1
reference pointer reference -> class : 1
pointer reference class -> template : 1
reference class template -> is : 1
is an adapter -> for : 4
an adapter for -> a : 1
an adapter for -> any : 3
adapter for a -> bidirectional : 1
access iterator to -> iterate : 1
iterator to iterate -> the : 1
to iterate the -> sequence : 1
iterate the sequence -> in : 1
the sequence in -> the : 1
sequence in the -> opposite : 1
the opposite direction -> of : 1
opposite direction of -> the : 1
the adapted in -> other : 1
adapted in other -> if : 1
other if the -> adapted : 1
if the adapted -> iterator : 1
adapted iterator advances -> from : 1
iterator advances from -> the : 1
advances from the -> first : 1
the first to -> the : 1
first to the -> last : 1
a a reverse -> iterator : 2
reverse iterator starts -> with : 1
iterator starts with -> the : 1
the last items -> and : 1
last items and -> to : 1
items and to -> the : 1
first in addition -> to : 1
there are also -> several : 1
are also several -> function : 1
also several function -> templates : 1
several function templates -> for : 2
for the comparison -> and : 1
the comparison and -> arithmetic : 1
comparison and arithmetic -> and : 1
and arithmetic and -> standard : 1
arithmetic and standard -> containers : 1
standard containers return -> objects : 1
containers return objects -> from : 1
return objects from -> the : 1
objects from the -> and : 1
implementation of these -> return : 1
of these return -> return : 1
these return return -> an : 1
return return an -> iterator : 1
a container but -> cannot : 1
container but cannot -> point : 1
but cannot point -> to : 1
cannot point to -> one : 1
cannot point to -> an : 1
to one item -> before : 1
to one item -> the : 1
one item before -> the : 1
before the a -> reverse : 1
reverse iterator conceptually -> points : 1
iterator conceptually points -> to : 1
conceptually points to -> one : 1
one item the -> position : 1
one item the -> item : 1
item the position -> to : 1
which the adapted -> iterator : 1
adapted iterator in -> other : 1
iterator in other -> given : 1
in other given -> an : 1
other given an -> which : 1
given an which -> points : 1
an which points -> to : 1
which points to -> in : 1
points to in -> infinity : 1
to in infinity -> or : 1
in infinity or -> maximum : 1
infinity or maximum -> finite : 3
or maximum finite -> value : 3
maximum finite value -> to : 3
maximum finite value -> when : 1
finite value to -> mean : 3
value to mean -> if : 1
value to mean -> lists : 1
value to mean -> define : 1
to mean if -> you : 1
mean if you -> construct : 1
if you construct -> a : 1
you construct a -> reverse : 1
construct a reverse -> iterator : 1
iterator that adapts -> the : 1
that adapts the -> reverse : 1
adapts the reverse -> iterator : 1
reverse iterator appears -> to : 1
iterator appears to -> point : 1
appears to point -> to : 1
point to when -> you : 1
to when you -> increment : 1
when you increment -> the : 1
you increment the -> reverse : 1
the reverse it -> decrements : 1
reverse it decrements -> the : 1
it decrements the -> adapted : 1
decrements the adapted -> the : 1
adapted the element -> in : 1
the element in -> the : 1
in the sequence -> of : 1
of the reverse -> iterator : 1
reverse iterator is -> adapted : 1
iterator is adapted -> iterator : 1
is adapted iterator -> points : 1
adapted iterator points -> to : 2
to the adapted -> iterator : 2
to the adapted -> note : 1
adapted iterator is -> also : 1
adapted iterator is -> typically : 1
iterator is also -> called : 1
called the see -> and : 1
the see and -> for : 1
discussion of some -> of : 1
of some of -> the : 2
of the interesting -> ramifications : 1
the interesting ramifications -> of : 1
interesting ramifications of -> using : 1
ramifications of using -> a : 1
using a reverse -> iterator : 1
reverse iterator a -> reverse : 1
iterator a reverse -> iterator : 1
reverse iterator following -> member : 1
iterator following member -> functions : 1
following member functions -> of : 1
functions of refer -> to : 1
of refer to -> as : 1
refer to as -> the : 1
to as the -> data : 1
as the data -> member : 1
member that stores -> the : 1
stores the the -> member : 1
the the member -> is : 1
member is actually -> named : 1
is actually named -> and : 1
actually named and -> is : 1
named and is -> a : 1
is a protected -> data : 1
a protected data -> member : 1
protected data member -> of : 1
member with its -> default : 1
default the data -> member : 1
member to the -> data : 1
member to the -> adapted : 1
the adapted note -> that : 1
adapted note that -> the : 1
that the adapted -> iterator : 1
one position the -> reverse : 1
position the reverse -> logical : 1
the reverse logical -> a : 1
reverse logical a -> reference : 1
logical a reference -> to : 1
that the reverse -> iterator : 2
reverse iterator logically -> points : 2
iterator logically points -> which : 1
iterator logically points -> that : 1
logically points which -> is : 1
points which is -> one : 1
which is one -> item : 1
is one item -> the : 1
item the item -> to : 1
to which you -> can : 1
of the dereference -> function : 1
the dereference function -> working : 1
dereference function working -> as : 1
function working as -> const : 1
working as const -> tmp : 1
as const tmp -> return : 1
const tmp return -> a : 1
tmp return a -> pointer : 1
logically points that -> and : 1
points that and -> returns : 1
that and returns -> a : 1
returns a copy -> of : 2
copy of decrements -> and : 1
of decrements and -> returns : 1
decrements and returns -> the : 1
returns the saved -> copy : 1
returns the saved -> from : 1
the saved copy -> of : 1
saved copy of -> and : 1
of and returns -> a : 2
of and returns -> the : 1
the current item -> increments : 1
current item increments -> and : 1
item increments and -> returns : 1
increments and returns -> the : 1
the saved from -> and : 1
saved from and -> returns : 1
returns to and -> returns : 1
and returns following -> are : 1
returns following are -> several : 1
returns following are -> the : 1
following are several -> nonmember : 1
are several nonmember -> functions : 1
several nonmember functions -> that : 1
nonmember functions that -> compare : 1
that compare reverse -> iterators : 1
compare reverse iterators -> and : 1
reverse iterators and -> perform : 1
reverse iterators and -> advancing : 1
iterators and perform -> basic : 1
and perform basic -> arithmetic : 1
perform basic arithmetic -> such : 1
basic arithmetic such -> as : 1
arithmetic such as -> finding : 1
such as finding -> the : 1
as finding the -> distance : 1
finding the distance -> between : 1
between two reverse -> iterators : 1
between two reverse -> that : 1
two reverse iterators -> and : 1
iterators and advancing -> a : 1
and advancing a -> reverse : 1
advancing a reverse -> iterator : 1
reverse iterator by -> an : 1
reverse iterator by -> this : 1
iterator by an -> const : 1
by an const -> when : 1
an const when -> the : 1
const when the -> base : 1
when the base -> iterators : 1
the base iterators -> are : 1
base iterators are -> that : 1
iterators are that -> const : 1
are that const -> when : 1
that const when -> and : 1
that const when -> is : 1
const when and -> have : 1
when and have -> different : 1
and have different -> base : 1
have different base -> that : 1
different base that -> const : 1
base that const -> when : 1
const when is -> closer : 2
const when is -> farther : 2
when is closer -> than : 2
is closer than -> to : 2
closer than to -> the : 2
than to the -> beginning : 2
of the because -> and : 2
the because and -> are : 2
because and are -> reverse : 4
and are reverse -> the : 4
are reverse the -> function : 4
reverse the function -> returns : 4
function returns const -> when : 3
function returns const -> the : 1
function returns const -> a : 2
returns const when -> is : 3
when is farther -> than : 2
is farther than -> from : 2
farther than from -> the : 2
than from the -> beginning : 2
of the sequence -> or : 2
the sequence or -> equals : 2
sequence or equals -> because : 2
or equals because -> and : 2
equals because and -> are : 2
returns const the -> distance : 1
returns const the -> it : 1
const the distance -> between : 1
two reverse that -> a : 1
reverse that a -> reverse : 1
that a reverse -> iterator : 1
iterator by this -> function : 1
by this function -> is : 1
this function is -> a : 1
is a counterpart -> to : 1
a counterpart to -> the : 1
counterpart to the -> member : 1
the member allowing -> you : 1
member allowing you -> to : 1
allowing you to -> write : 1
write and which -> yield : 1
and which yield -> the : 1
which yield the -> same : 1
yield the same -> class : 1
same class class -> and : 1
class class and -> header : 1
class and header -> declares : 1
template and related -> types : 1
and related types -> and : 1
related types and -> specializations : 1
types and specializations -> that : 1
and specializations that -> define : 1
specializations that define -> the : 1
that define the -> limits : 1
define the limits -> and : 1
the limits and -> characteristics : 3
limits and characteristics -> of : 3
and characteristics of -> the : 1
and characteristics of -> an : 2
the fundamental arithmetic -> types : 1
fundamental arithmetic types -> as : 1
arithmetic types as -> the : 1
as the largest -> possible : 1
largest possible it -> is : 1
possible it is -> the : 1
is the equivalent -> of : 1
c headers and -> the : 1
headers and the -> limits : 1
the limits in -> header : 1
limits in header -> has : 1
in header has -> a : 1
header has a -> number : 1
number of advantages -> over : 1
of advantages over -> the : 1
advantages over the -> and : 1
over the and -> in : 1
the and in -> by : 1
and in by -> using : 1
by using a -> you : 1
by using a -> the : 1
by using a -> violates : 1
using a you -> can : 1
can write your -> own : 1
own classes that -> depend : 1
classes that depend -> on : 1
the characteristics of -> a : 1
characteristics of a -> template : 1
a template this -> is : 1
is not possible -> with : 1
is not possible -> to : 1
not possible with -> the : 1
possible with the -> c : 1
the c type -> represents : 1
c type represents -> existence : 1
type represents existence -> of : 1
represents existence of -> type : 1
existence of type -> is : 1
that represents whether -> denormalized : 1
represents whether denormalized -> values : 1
whether denormalized values -> are : 1
denormalized values are -> type : 1
values are type -> represents : 1
are type represents -> the : 1
represents the rounding -> type : 1
the rounding type -> is : 1
rounding type is -> an : 1
that represents how -> numbers : 1
represents how numbers -> are : 1
numbers are class -> class : 1
template represents the -> limits : 2
template represents the -> information : 1
represents the limits -> and : 2
characteristics of an -> arithmetic : 2
characteristics of an -> integral : 1
of an arithmetic -> class : 1
of an arithmetic -> the : 1
an arithmetic class -> static : 1
arithmetic class static -> const : 1
class static const -> bool : 1
static const bool -> static : 13
static const bool -> virtual : 1
const bool static -> t : 2
const bool static -> const : 11
bool static t -> static : 2
static t static -> t : 5
static t static -> const : 3
t static t -> static : 5
t static const -> int : 2
t static const -> bool : 1
bool static const -> bool : 8
bool static const -> int : 1
bool static const -> static : 1
bool static const -> class : 1
int static t -> static : 1
static const static -> const : 1
static const static -> bool : 2
const static const -> bool : 1
const static const -> static : 2
const static const -> const : 2
static const class -> template : 3
an arithmetic the -> data : 1
arithmetic the data -> members : 1
that are shown -> as : 1
are shown as -> are : 1
shown as are -> constants : 1
as are constants -> that : 1
are constants that -> you : 1
constants that you -> can : 1
use in other -> integral : 1
in other integral -> constant : 1
other integral constant -> default : 1
integral constant default -> is : 1
constant default is -> for : 1
default is for -> all : 1
is for all -> members : 1
is for all -> fundamental : 1
is for all -> integral : 1
the header has -> specializations : 1
header has specializations -> for : 1
has specializations for -> all : 1
specializations for all -> fundamental : 1
for all fundamental -> and : 1
for all fundamental -> whether : 1
all fundamental and -> only : 1
fundamental and only -> for : 1
and only for -> the : 1
for the fundamental -> every : 1
for the fundamental -> whether : 1
the fundamental every -> specialization : 1
fundamental every specialization -> in : 1
every specialization in -> the : 1
specialization in the -> standard : 1
library defines every -> even : 1
defines every even -> if : 1
every even if -> the : 1
the member does -> not : 1
member does not -> pertain : 1
does not pertain -> to : 1
not pertain to -> the : 1
pertain to the -> type : 1
the type characteristics -> of : 1
type characteristics of -> an : 1
of an integral -> meaningless : 1
an integral meaningless -> members : 1
integral meaningless members -> are : 1
meaningless members are -> defined : 1
members are defined -> as : 1
defined as or -> can : 1
as or can -> specialize : 1
or can specialize -> for : 1
can specialize for -> your : 1
specialize for your -> own : 1
for your own -> for : 1
your own for -> suppose : 1
own for suppose -> you : 1
suppose you write -> a : 1
write a to -> represent : 1
a to represent -> integers : 1
a to represent -> the : 1
to represent integers -> of : 1
represent integers of -> arbitrary : 1
integers of arbitrary -> you : 1
of arbitrary you -> can : 1
arbitrary you can -> define : 1
define your specialization -> to : 1
your specialization to -> show : 1
specialization to show -> that : 1
to show that -> the : 1
show that the -> type : 1
type is you -> should : 1
you should follow -> the : 1
should follow the -> convention : 1
follow the convention -> of : 1
the convention of -> the : 1
convention of the -> standard : 1
the standard by -> defining : 1
the standard by -> the : 1
standard by defining -> all : 1
by defining all -> even : 1
defining all even -> if : 1
all even if -> they : 1
do not apply -> to : 1
not apply to -> your : 1
apply to your -> be : 1
to your be -> sure : 1
your be sure -> to : 1
sure to define -> as : 1
define as to -> query : 1
as to query -> the : 1
to query the -> properties : 1
query the properties -> or : 1
the properties or -> traits : 1
properties or traits -> of : 1
or traits of -> a : 1
traits of a -> numeric : 1
of a numeric -> for : 2
a numeric for -> suppose : 1
a numeric for -> it : 1
writing a data -> analysis : 1
a data analysis -> among : 1
data analysis among -> the : 1
analysis among the -> data : 1
among the data -> are : 1
the data are -> points : 1
data are points -> you : 1
are points you -> want : 1
points you want -> to : 1
want to but -> you : 1
to but you -> need : 1
to keep their -> places : 1
keep their places -> in : 1
their places in -> the : 1
in the data -> you : 1
the data you -> decide : 1
data you decide -> to : 1
decide to insert -> a : 1
insert a special -> marker : 1
a special marker -> the : 1
special marker the -> marker : 1
marker the marker -> value : 1
the marker value -> as : 1
marker value as -> cannot : 1
value as cannot -> possibly : 1
as cannot possibly -> appear : 1
cannot possibly appear -> in : 1
possibly appear in -> the : 1
in the actual -> data : 1
actual data if -> the : 1
data if the -> type : 1
data if the -> stack : 1
the type that -> you : 1
are using does -> not : 1
using does not -> support : 1
not support you -> can : 1
support you can -> use : 1
use the maximum -> finite : 1
the maximum finite -> infinity : 1
the maximum finite -> value : 1
maximum finite infinity -> or : 1
finite infinity or -> maximum : 1
to mean lists -> the : 1
mean lists the -> which : 1
lists the which -> returns : 1
the which returns -> the : 1
which returns the -> value : 1
which returns the -> performance : 1
the value used -> for : 1
value used for -> the : 1
for the infinity -> or : 1
the infinity or -> maximum : 1
to mean define -> a : 1
mean define a -> template : 1
define a template -> that : 1
template that will -> differentiate : 1
that will differentiate -> types : 1
will differentiate types -> that : 1
differentiate types that -> have : 1
types that have -> a : 1
that have a -> specialized : 1
have a specialized -> and : 1
a specialized and -> an : 1
specialized and an -> explicit : 1
and an explicit -> value : 1
explicit value for -> bool : 1
value for bool -> bool : 1
for bool bool -> struct : 1
bool bool struct -> specialize : 1
bool struct specialize -> the : 1
struct specialize the -> template : 1
template to obtain -> the : 1
obtain the value -> of : 1
value of struct -> static : 1
of struct static -> t : 1
struct static t -> return : 2
static t return -> specialize : 1
static t return -> note : 1
t return specialize -> the : 1
return specialize the -> template : 1
the template if -> infinity : 1
template if infinity -> is : 1
if infinity is -> not : 1
infinity is not -> struct : 1
is not struct -> static : 1
not struct static -> t : 1
t return note -> that : 1
return note that -> a : 1
a type without -> a : 1
type without a -> specialization : 1
without a specialization -> does : 1
a specialization does -> not : 1
have a so -> the : 1
the function would -> result : 1
function would result -> in : 1
would result in -> errors : 1
result in errors -> when : 1
in errors when -> applied : 1
errors when applied -> to : 1
applied to such -> a : 1
such a the -> function : 1
used to mark -> points : 1
to mark points -> that : 1
mark points that -> do : 1
points that do -> not : 1
not have valid -> return : 1
have valid return -> standard : 1
valid return standard -> mandates : 1
return standard mandates -> that : 1
standard mandates that -> all : 1
mandates that all -> integers : 1
that all integers -> are : 1
all integers are -> binary : 1
integers are binary -> and : 1
are binary and -> use : 1
binary and use -> or : 1
and use or -> signed : 1
use or signed -> magnitude : 1
or signed magnitude -> the : 1
signed magnitude the -> representation : 1
magnitude the representation -> of : 1
representation of numbers -> is : 1
of numbers is -> not : 1
numbers is not -> the : 1
not the template -> assumes : 1
the template assumes -> that : 1
template assumes that -> a : 1
assumes that a -> number : 1
that a number -> is : 1
number is represented -> as : 1
is represented as -> a : 1
of the so -> the : 1
for any finite -> value : 1
any finite value -> is : 1
finite value is -> if : 1
finite value is -> not : 1
the term means -> a : 1
term means a -> finite : 1
means a finite -> value : 1
a finite value -> is : 1
the smallest denormalized -> if : 1
smallest denormalized if -> is : 1
denormalized if is -> it : 1
the smallest positive -> normalized : 1
smallest positive normalized -> for : 1
positive normalized for -> it : 1
normalized for it -> returns : 1
it returns number -> of : 1
of digits that -> can : 1
be for integer -> it : 1
for integer it -> is : 1
integer it is -> the : 1
number of for -> it : 1
of for it -> is : 1
the smallest representable -> value : 1
smallest representable value -> greater : 1
representable value greater -> than : 1
greater than for -> integral : 1
greater than for -> in : 1
than for integral -> returns : 1
for integral returns -> const : 1
integral returns const -> the : 1
const the it -> is : 1
it is if -> the : 1
it is if -> errors : 1
if the style -> cannot : 1
the style cannot -> be : 1
style cannot be -> determined : 1
cannot be determined -> at : 1
be determined at -> compile : 1
determined at compile -> it : 1
at compile it -> is : 1
compile it is -> meaningful : 1
it is meaningful -> for : 1
it is meaningful -> only : 1
it is meaningful -> when : 1
is meaningful for -> all : 1
meaningful for all -> whether : 1
for all whether -> the : 1
all whether the -> loss : 1
whether the loss -> of : 1
the loss of -> accuracy : 1
loss of accuracy -> in : 1
of accuracy in -> a : 1
accuracy in a -> computation : 1
in a computation -> is : 1
a computation is -> a : 1
computation is a -> denormalization : 1
is a denormalization -> loss : 1
a denormalization loss -> rather : 1
denormalization loss rather -> than : 1
loss rather than -> an : 1
rather than an -> inexact : 1
than an inexact -> whether : 1
an inexact whether -> the : 1
inexact whether the -> type : 1
whether the type -> can : 2
whether the type -> represents : 2
whether the type -> follows : 1
whether the type -> uses : 1
whether the type -> is : 1
can represent positive -> in : 1
represent positive in -> is : 1
positive in is -> when : 1
in is when -> is : 1
is when is -> whether : 2
is when is -> the : 1
when is whether -> the : 2
is whether the -> type : 2
is whether the -> floating : 1
can represent a -> quiet : 1
can represent a -> signaling : 1
represent a quiet -> nan : 1
a quiet nan -> in : 1
a quiet nan -> value : 1
quiet nan in -> this : 1
nan in this -> is : 1
this is when -> is : 2
whether the floating -> point : 1
floating point type -> can : 1
point type can -> represent : 1
represent a signaling -> in : 1
a signaling in -> this : 1
signaling in this -> is : 1
value of positive -> infinity : 1
of positive infinity -> if : 1
positive infinity if -> is : 1
infinity if is -> whether : 1
if is whether -> the : 1
the type represents -> a : 1
the type represents -> values : 1
represents a finite -> set : 1
a finite set -> of : 1
finite set of -> this : 1
this is for -> all : 1
all fundamental whether -> the : 1
fundamental whether the -> type : 2
type represents values -> it : 1
represents values it -> is : 1
values it is -> for : 1
types and for -> the : 1
types and for -> no : 1
the fundamental whether -> the : 1
the type follows -> the : 1
type follows the -> iec : 1
follows the iec -> standard : 1
standard for it -> is : 1
is meaningful only -> for : 1
meaningful only for -> among : 1
only for among -> the : 1
among the requirements -> of : 1
of the iec -> standard : 1
iec standard are -> support : 1
standard are support -> for : 1
are support for -> positive : 1
support for positive -> and : 1
positive and negative -> and : 1
positive and negative -> whether : 1
and negative and -> for : 1
negative and for -> values : 1
for values that -> are : 1
that are for -> all : 1
are for all -> integral : 1
all integral whether -> the : 1
integral whether the -> type : 1
the type uses -> modulo : 1
type uses modulo -> this : 1
uses modulo this -> is : 1
modulo this is -> always : 1
this is always -> for : 1
is always for -> unsigned : 1
always for unsigned -> integral : 1
for unsigned integral -> types : 1
unsigned integral types -> and : 1
types and often -> for : 1
and often for -> signed : 1
often for signed -> integral : 1
for signed integral -> it : 1
signed integral it -> is : 1
integral it is -> for : 1
is for typical -> whether : 1
for typical whether -> the : 1
typical whether the -> type : 1
is that supports -> positive : 1
that supports positive -> and : 1
supports positive and -> negative : 1
and negative whether -> is : 1
negative whether is -> specialized : 1
whether is specialized -> for : 1
for the it -> is : 1
it is by -> so : 1
is by so -> you : 1
by so you -> can : 1
you can detect -> whether : 1
can detect whether -> has : 1
detect whether has -> been : 1
whether has been -> specialized : 1
has been specialized -> for : 1
been specialized for -> a : 1
specialized for a -> particular : 1
a particular and -> therefore : 1
particular and therefore -> determine : 1
and therefore determine -> whether : 1
therefore determine whether -> a : 1
whether a or -> value : 1
a or value -> is : 1
or value is -> the : 1
finite value when -> is : 1
value when is -> largest : 1
when is largest -> allowable : 1
is largest allowable -> exponent : 1
largest allowable exponent -> for : 1
allowable exponent for -> a : 2
a finite largest -> allowable : 1
finite largest allowable -> decimal : 1
largest allowable decimal -> exponent : 1
allowable decimal exponent -> for : 1
finite the minimum -> finite : 1
the minimum finite -> it : 1
minimum finite it -> is : 1
finite it is -> meaningful : 1
is meaningful when -> is : 1
meaningful when is -> or : 1
when is or -> when : 1
is or when -> and : 1
or when and -> are : 1
when and are -> both : 1
are both smallest -> allowable : 1
both smallest allowable -> exponent : 1
smallest allowable exponent -> for : 1
for a number -> such : 1
a number such -> that : 1
number such that -> raised : 1
such that raised -> to : 2
that raised to -> is : 2
raised to is -> representable : 2
to is representable -> as : 2
is representable as -> a : 2
representable as a -> normalized : 2
as a normalized -> const : 1
as a normalized -> a : 1
a normalized const -> smallest : 1
normalized const smallest -> negative : 1
const smallest negative -> decimal : 1
smallest negative decimal -> exponent : 1
decimal exponent such -> that : 1
exponent such that -> raised : 1
a normalized a -> quiet : 1
normalized a quiet -> nan : 1
quiet nan value -> if : 1
nan value if -> is : 2
value if is -> const : 2
if is const -> base : 1
if is const -> whether : 1
is const base -> used : 1
const base used -> in : 1
base used in -> the : 1
in the representation -> of : 1
numeric for it -> is : 1
the base of -> the : 1
base of the -> the : 1
the maximum rounding -> const : 1
maximum rounding const -> the : 1
rounding const the -> rounding : 1
const the rounding -> style : 1
the rounding style -> used : 1
rounding style used -> by : 1
style used by -> the : 1
of the possible -> return : 1
the possible return -> for : 1
possible return for -> integral : 1
return for integral -> the : 1
for integral the -> return : 1
integral the return -> value : 1
always a signaling -> nan : 1
a signaling nan -> value : 1
signaling nan value -> if : 1
is const whether -> a : 1
const whether a -> type : 1
a type tests -> for : 1
type tests for -> denormalized : 1
tests for denormalized -> values : 1
for denormalized values -> before : 1
denormalized values before -> const : 1
values before const -> whether : 1
before const whether -> arithmetic : 1
const whether arithmetic -> errors : 1
whether arithmetic errors -> that : 1
arithmetic errors that -> result : 1
errors that result -> in : 1
that result in -> signals : 1
result in signals -> or : 1
in signals or -> it : 1
signals or it -> is : 1
is if errors -> are : 1
if errors are -> quietly : 1
errors are quietly -> template : 1
are quietly template -> is : 1
quietly template is -> specialized : 1
specialized for all -> the : 1
fundamental numeric types -> and : 1
numeric types and -> for : 1
and for no -> other : 1
for no other -> types : 1
no other types -> in : 1
in each is -> and : 1
each is and -> other : 1
is and other -> members : 1
and other members -> are : 1
members are set -> as : 1
are set as -> the : 1
set as the -> standard : 1
the standard way -> of : 1
standard way of -> the : 1
way of the -> c : 1
the c defines -> the : 1
c defines the -> minimum : 1
defines the minimum -> requirements : 1
the minimum requirements -> for : 1
requirements for an -> the : 1
an the requirements -> for : 1
requirements for integral -> types : 1
integral types are -> given : 1
types are given -> in : 1
are given in -> and : 1
given in and -> for : 1
and for types -> in : 1
for types in -> following : 1
types in following -> are : 1
in following are -> the : 2
the standard header -> is : 1
standard header is -> one : 1
few global function -> templates : 4
global function templates -> that : 4
templates that operate -> on : 4
operate on list -> is : 1
on list is -> a : 1
that has constant -> performance : 1
that has constant -> but : 1
that has constant -> complexity : 1
has constant performance -> when : 1
removing from any -> point : 1
from any point -> in : 1
any point in -> the : 2
point in the -> it : 1
point in the -> except : 1
the it supports -> bidirectional : 1
it supports bidirectional -> but : 1
supports bidirectional but -> not : 1
bidirectional but not -> random : 1
but not random -> although : 1
not random although -> the : 1
random although the -> standard : 1
does not mandate -> any : 1
not mandate any -> particular : 1
mandate any particular -> the : 1
any particular the -> obvious : 1
particular the obvious -> choice : 1
the obvious choice -> is : 1
obvious choice is -> to : 1
choice is to -> use : 1
use a list -> to : 1
a list to -> implement : 1
list to implement -> the : 1
implement the class -> and : 1
implement the class -> template : 1
class and for -> information : 1
class and for -> derived : 1
class template list -> typename : 1
template list typename -> alloc : 1
list typename alloc -> class : 1
alloc class types -> typedef : 1
class types typedef -> typename : 1
types typedef typename -> typedef : 1
void const iterators -> iterator : 1
const iterators iterator -> iterator : 4
iterators iterator iterator -> capacity : 3
iterators iterator iterator -> bool : 1
iterator iterator capacity -> bool : 3
iterator capacity bool -> void : 1
iterator capacity bool -> element : 1
iterator capacity bool -> modifiers : 1
capacity bool void -> t : 1
bool void t -> c : 1
t c element -> access : 1
c element access -> reference : 1
access reference reference -> modifiers : 1
access reference reference -> pos : 1
access reference reference -> reference : 1
reference reference modifiers -> void : 2
reference modifiers void -> void : 2
modifiers void void -> void : 1
modifiers void void -> iterator : 1
inputiterator inputiterator iterator -> iterator : 1
inputiterator iterator iterator -> iterator : 1
void void list -> operations : 1
void list operations -> void : 1
list operations void -> void : 1
operations void void -> iterator : 1
void iterator void -> iterator : 1
void iterator void -> void : 4
iterator void iterator -> iterator : 1
iterator void template -> void : 1
void template void -> void : 3
void template void -> compare : 1
void template void -> function : 1
template void void -> template : 2
template void void -> class : 1
void void template -> void : 2
template void compare -> void : 1
void compare void -> template : 1
compare void template -> void : 1
template is one -> of : 1
like and a -> stores : 1
and a stores -> a : 1
a stores a -> sequence : 1
stores a sequence -> of : 1
sequence of items -> such : 1
sequence of items -> that : 2
of items such -> that : 1
items such that -> inserting : 1
such that inserting -> or : 1
that inserting or -> erasing : 1
inserting or erasing -> an : 1
inserting or erasing -> any : 1
or erasing an -> item : 1
erasing an item -> at : 1
item at any -> position : 1
any position requires -> constant : 1
position requires constant -> the : 1
requires constant the -> template : 1
constant the template -> supports : 1
the template supports -> all : 1
template supports all -> the : 1
supports all the -> usual : 1
the usual operations -> for : 1
usual operations for -> a : 1
operations for a -> sequence : 1
sequence container plus -> some : 1
container plus some -> functions : 1
plus some functions -> that : 1
unique to an -> item : 1
item is erased -> from : 1
is erased from -> the : 1
the list calling -> all : 1
list calling all -> iterators : 1
calling all iterators -> that : 1
all iterators that -> point : 2
iterators that point -> to : 2
point to that -> item : 1
to that item -> become : 1
that item become -> all : 1
item become all -> pointers : 1
become all pointers -> and : 1
all pointers and -> references : 1
the item become -> no : 1
item become no -> other : 1
become no other -> or : 1
no other or -> references : 1
other or references -> are : 1
or references are -> invalidated : 1
references are invalidated -> when : 1
are invalidated when -> inserting : 1
invalidated when inserting -> or : 1
when inserting or -> erasing : 1
or erasing any -> with : 1
erasing any with -> no : 1
any with no -> function : 1
no function can -> have : 1
or linear the -> standard : 1
linear the standard -> encourages : 1
the standard encourages -> library : 1
standard encourages library -> vendors : 1
encourages library vendors -> to : 1
library vendors to -> implement : 1
vendors to implement -> the : 1
class template so -> that : 1
template so that -> has : 1
so that has -> constant : 1
has constant but -> it : 1
constant but it -> permits : 1
but it permits -> worse : 1
it permits worse -> performance : 1
permits worse performance -> linear : 1
worse performance linear -> in : 1
performance linear in -> the : 1
in the size -> of : 1
the if does -> not : 1
not have constant -> you : 1
have constant you -> should : 1
constant you should -> expect : 1
you should expect -> all : 1
you should expect -> to : 1
should expect all -> versions : 1
expect all versions -> of : 1
all versions of -> to : 1
versions of to -> have : 1
of to have -> constant : 1
to have constant -> complexity : 2
have constant complexity -> in : 2
constant complexity in -> all : 2
complexity in all -> last : 1
complexity in all -> all : 1
in all last -> constraint : 1
all last constraint -> is : 1
last constraint is -> not : 1
constraint is not -> mandated : 1
is not mandated -> by : 1
not mandated by -> the : 1
mandated by the -> but : 1
by the but -> by : 1
the but by -> common : 1
but by common -> following : 1
by common following -> are : 1
common following are -> the : 1
of an empty -> list : 1
of an empty -> input : 1
of an empty -> output : 2
of an empty -> string : 2
of an empty -> a : 2
empty list that -> uses : 1
list that uses -> the : 1
uses the given -> const : 1
the given const -> value : 1
given const value -> const : 1
const a list -> that : 1
a list that -> contains : 1
list that contains -> copies : 1
that contains copies -> of : 2
contains copies of -> typename : 1
contains copies of -> the : 1
contains copies of -> a : 1
copies of typename -> inputiterator : 1
of typename inputiterator -> const : 1
of typename inputiterator -> class : 1
typename inputiterator const -> the : 1
inputiterator const the -> list : 1
const the list -> with : 1
the list with -> a : 1
list with a -> copy : 1
the range unless -> is : 3
range unless is -> an : 3
case the list -> is : 1
arguments were a -> copy : 1
were a copy -> of : 1
the contents and -> allocator : 1
contents and allocator -> of : 1
and allocator of -> the : 1
allocator of the -> list : 1
the list the -> contents : 1
list the contents -> with : 1
the contents with -> copies : 2
the contents with -> the : 1
contents with copies -> of : 2
contents of inputiterator -> the : 1
of inputiterator the -> contents : 1
inputiterator the contents -> with : 1
contents with the -> items : 1
contents with the -> contents : 1
with the items -> in : 1
they were const -> the : 1
were const the -> contents : 1
const the contents -> with : 1
if the list -> is : 5
list is an -> iterator : 1
the all the -> items : 1
the all the -> elements : 4
in the invalidating -> all : 1
the invalidating all -> iterators : 1
invalidating all iterators -> that : 1
list is note -> that : 1
has constant complexity -> even : 1
constant complexity even -> if : 1
complexity even if -> does : 1
even if does -> an : 1
if does an -> iterator : 1
does an iterator -> that : 1
that points one -> past : 1
points one past -> the : 1
in the iterator -> the : 1
iterator the item -> at : 1
item at or -> all : 1
at or all -> the : 1
is the const -> const : 1
the const const -> inputiterator : 1
the const const -> const : 1
const const inputiterator -> inputiterator : 1
const inputiterator inputiterator -> one : 1
inputiterator inputiterator one -> or : 1
inputiterator one or -> more : 1
or more items -> before : 1
or more items -> from : 1
or more items -> into : 2
more items before -> the : 1
items before the -> performance : 1
before the performance -> is : 1
performance is linear -> in : 1
of items and -> the : 1
and the copy -> constructor : 1
constructor is invoked -> once : 1
is invoked once -> for : 1
invoked once for -> each : 1
each item inserted -> in : 1
item inserted in -> the : 1
first form inserts -> the : 1
form inserts the -> item : 1
the item the -> second : 1
item the second -> form : 1
second form inserts -> copies : 1
form inserts copies -> of : 1
third form copies -> the : 1
form copies the -> items : 1
copies the items -> in : 1
new the list -> is : 1
largest possible compare -> another : 1
possible compare another -> sorted : 1
compare another sorted -> into : 1
another sorted into -> the : 1
the current which -> must : 1
the current which -> can : 1
current which must -> also : 1
which must also -> be : 1
also be items -> are : 1
be items are -> erased : 1
items are erased -> from : 1
erased from so -> after : 1
from so after -> is : 1
so after is -> items : 1
after is items -> are : 1
items are compared -> using : 1
items are compared -> with : 1
are compared using -> the : 3
are compared using -> element : 1
compared using the -> operator : 1
compared using the -> function : 1
compared using the -> smallest : 1
operator or the -> same : 1
same function used -> to : 1
function used to -> sort : 1
used to sort -> the : 1
sort the items -> must : 1
the items must -> be : 1
compare the merge -> is : 1
the merge is -> so : 1
the merge is -> exactly : 1
so the relative -> order : 1
so the relative -> positions : 1
of items is -> if : 1
items is if -> the : 1
if the same -> item : 1
the same item -> is : 1
same item is -> already : 1
item is already -> in : 1
is already in -> the : 1
is already in -> a : 2
already in the -> list : 1
already in the -> performance : 1
already in the -> desired : 6
the list and -> in : 1
list and in -> the : 1
in the item -> from : 1
the item from -> is : 1
item from is -> added : 1
from is added -> after : 1
is added after -> the : 1
added after the -> item : 1
after the item -> already : 1
the item already -> in : 1
item already in -> the : 1
performance of the -> merge : 1
of the merge -> is : 1
merge is exactly -> comparisons : 1
comparisons are the -> last : 1
are the last -> item : 1
list is at -> the : 1
of the at -> the : 2
the at the -> beginning : 1
the at the -> end : 1
the at the -> top : 1
the all occurrences -> of : 1
occurrences of from -> the : 1
of from the -> the : 1
the the performance -> is : 1
performance is exactly -> comparisons : 1
comparisons are all -> items : 1
are all items -> for : 1
returns the performance -> is : 1
performance is is -> called : 1
called exactly a -> reverse : 1
exactly a reverse -> iterator : 1
the list to -> if : 1
the list to -> reach : 1
list to if -> one : 1
list to reach -> the : 1
the current elements -> are : 2
current elements are -> erased : 2
new the order -> of : 1
entire the performance -> is : 1
performance is the -> number : 1
performance is the -> largest : 2
the the complexity -> of : 1
the the complexity -> is : 1
complexity of can -> be : 1
can be constant -> or : 1
be constant or -> depending : 1
constant or depending -> on : 1
on the the -> items : 1
on the the -> minimum : 1
the the items -> in : 1
in the comparing -> items : 1
the comparing items -> with : 1
comparing items with -> the : 1
with the operator -> or : 2
operator or by -> calling : 2
calling the sort -> is : 1
the relative positions -> of : 1
relative positions of -> the : 1
the items do -> not : 1
items do not -> the : 1
do not the -> performance : 1
not the performance -> is : 1
performance is log -> in : 1
which is must -> call : 1
is must call -> the : 1
must call the -> member : 1
function to sort -> a : 1
to sort a -> the : 1
sort a the -> generic : 1
a the generic -> algorithm : 1
generic algorithm requires -> a : 1
algorithm requires a -> random : 1
requires a random -> access : 1
random access but -> provides : 1
access but provides -> only : 1
but provides only -> a : 1
provides only a -> bidirectional : 1
only a bidirectional -> iterator : 1
bidirectional iterator iterator -> iterator : 1
iterator iterator one -> or : 1
iterator one or -> more : 5
more items from -> inserting : 1
items from inserting -> the : 1
from inserting the -> items : 1
inserting the items -> just : 1
the items just -> before : 1
items just before -> the : 1
just before the -> first : 1
first form moves -> every : 1
form moves every -> item : 1
moves every item -> from : 1
every item from -> to : 1
item from to -> the : 1
second form moves -> the : 1
form moves the -> item : 1
moves the item -> at : 1
item at position -> the : 1
position the third -> form : 1
third form moves -> all : 1
form moves all -> items : 1
moves all items -> in : 1
not be in -> that : 1
be in that -> the : 1
that the third -> form : 1
third form requires -> no : 1
form requires no -> more : 1
requires no more -> than : 1
more than linear -> time : 1
than linear time -> when : 1
linear time when -> all : 1
time when all -> other : 1
when all other -> cases : 1
all other cases -> work : 1
other cases work -> in : 1
cases work in -> constant : 1
work in constant -> if : 1
in constant if -> has : 1
constant if has -> linear : 1
if has linear -> you : 1
has linear you -> should : 1
linear you should -> expect : 1
should expect to -> have : 1
expect to have -> constant : 1
in all all -> the : 1
all all the -> items : 1
in this list -> with : 1
in this list -> can : 1
this list with -> all : 1
list with all -> the : 1
the performance should -> be : 1
performance should be -> adjacent : 1
should be adjacent -> duplicate : 1
be adjacent duplicate -> items : 1
adjacent duplicate items -> from : 1
duplicate items from -> the : 1
the items are -> compared : 1
the items are -> already : 4
by calling when -> adjacent : 1
calling when adjacent -> equal : 1
when adjacent equal -> items : 1
adjacent equal items -> are : 1
equal items are -> found : 1
items are found -> in : 1
found in the -> the : 1
first one is -> and : 1
one is and -> the : 1
one is and -> increments : 1
and subsequent items -> are : 1
subsequent items are -> the : 1
items are the -> performance : 1
are the performance -> is : 1
performance is comparisons -> are : 1
is comparisons are -> performed : 1
comparisons are performed -> the : 1
performed the list -> is : 1
template compares lists -> for : 6
compares lists for -> typename : 6
lists for typename -> bool : 6
if and have -> the : 4
if and have -> a : 1
header declares class -> and : 1
declares class and -> function : 1
and function templates -> for : 1
templates for internationalization -> and : 1
for internationalization and -> it : 1
internationalization and it -> supports : 1
and it supports -> conversion : 1
it supports conversion -> between : 1
supports conversion between -> narrow : 1
conversion between narrow -> and : 1
wide character character -> classification : 1
character character classification -> and : 1
classification and formatting -> and : 1
and formatting and -> parsing : 1
and parsing dates -> and : 1
parsing dates and -> and : 1
dates and and -> retrieving : 1
and and retrieving -> for : 1
and retrieving for -> every : 1
retrieving for every -> stream : 1
for every stream -> has : 1
stream has a -> which : 1
stream has a -> read : 1
a which it -> uses : 1
it uses to -> parse : 1
uses to parse -> formatted : 1
to parse formatted -> input : 1
parse formatted input -> or : 1
formatted input or -> to : 1
input or to -> format : 1
or to format -> is : 1
to format is -> an : 1
to format is -> either : 1
format is an -> embodiment : 1
format is an -> integer : 1
is an embodiment -> of : 1
an embodiment of -> a : 1
embodiment of a -> set : 1
set of cultural -> including : 1
of cultural including -> information : 1
cultural including information -> about : 1
including information about -> the : 1
about the native -> character : 1
the native character -> how : 1
the native character -> with : 1
native character how -> dates : 1
character how dates -> are : 1
how dates are -> which : 1
dates are which -> symbol : 1
are which symbol -> to : 1
which symbol to -> use : 1
symbol to use -> for : 1
to use for -> and : 1
use for and -> so : 1
for and so -> each : 1
and so each -> set : 1
so each set -> of : 1
each set of -> related : 1
set of related -> attributes : 1
of related attributes -> is : 1
related attributes is -> called : 1
attributes is called -> a : 1
called a which -> are : 1
a which are -> grouped : 1
which are grouped -> into : 1
grouped into categories -> are : 1
into categories are -> fixed : 1
categories are fixed -> and : 1
are fixed and -> defined : 1
fixed and defined -> by : 1
and defined by -> the : 1
the standard literals -> for : 1
standard literals for -> classifying : 1
literals for classifying -> under : 1
literals for classifying -> describes : 1
literals for classifying -> literals : 1
literals for classifying -> solid : 1
for classifying under -> for : 1
classifying under for -> a : 1
under for a -> complete : 1
a complete and -> each : 1
complete and each -> category : 1
and each category -> has : 1
category has several -> predefined : 1
has several predefined -> for : 1
several predefined for -> one : 1
predefined for one -> of : 1
of the facets -> in : 1
of the facets -> come : 1
the facets in -> the : 1
the facets in -> one : 1
facets in the -> time : 1
in the time -> category : 1
the time category -> is : 1
time category is -> which : 1
category is which -> specifies : 1
is which specifies -> rules : 1
which specifies rules -> for : 1
specifies rules for -> parsing : 1
rules for parsing -> a : 1
parsing a time -> you : 1
a time you -> can : 1
time you can -> define : 1
define additional see -> the : 1
additional see the -> description : 1
see the description -> of : 1
the class in -> this : 3
the class in -> for : 1
section for of -> the : 1
the facets come -> in : 1
facets come in -> two : 1
come in two -> plain : 1
in two plain -> and : 1
two plain and -> the : 1
plain and the -> plain : 1
and the plain -> versions : 1
the plain versions -> implement : 1
plain versions implement -> default : 1
versions implement default -> and : 1
implement default and -> the : 1
the named versions -> implement : 1
named versions implement -> the : 1
versions implement the -> behavior : 1
for a named -> see : 1
a named see -> the : 1
named see the -> class : 1
the class later -> in : 1
discussion of locale -> a : 1
of locale a -> program : 1
locale a program -> the : 1
a program the -> global : 1
program the global -> locale : 1
the global locale -> is : 1
the global locale -> to : 1
global locale is -> initialized : 1
global locale is -> the : 1
locale is initialized -> to : 1
initialized to the -> and : 1
initialized to the -> final : 2
initialized to the -> current : 1
standard streams use -> this : 1
streams use this -> locale : 1
use this locale -> for : 1
this locale for -> character : 1
locale for character -> conversions : 1
for character conversions -> and : 1
character conversions and -> a : 1
conversions and a -> program : 1
and a program -> can : 2
program can change -> the : 1
the locale at -> any : 1
locale at any -> see : 1
at any see -> the : 1
any see the -> class : 1
any see the -> member : 1
section for header -> provides : 1
for header provides -> more : 1
header provides more -> functionality : 1
provides more functionality -> than : 1
than the c -> and : 1
than the c -> for : 1
the c and -> especially : 1
c and especially -> the : 1
and especially the -> ability : 1
especially the ability -> to : 1
the ability to -> extend : 1
ability to extend -> a : 1
to extend a -> locale : 1
extend a locale -> with : 1
a locale with -> your : 1
locale with your -> own : 1
with your own -> on : 1
with your own -> new : 1
with your own -> function : 1
your own on -> the : 1
own on the -> other : 1
the other facets -> and : 1
other facets and -> the : 1
other facets and -> their : 1
facets and the -> locale : 1
and the locale -> class : 1
the locale class -> template : 1
the locale class -> class : 2
locale class template -> are : 1
template are more -> complicated : 1
more complicated than -> the : 1
complicated than the -> c : 1
c for simple -> character : 1
for simple character -> classification : 1
simple character classification -> in : 1
character classification in -> a : 1
classification in a -> single : 1
single you are -> probably : 1
off using the -> c : 1
the c if -> a : 1
c if a -> program : 1
program must work -> with : 1
must work with -> multiple : 1
work with multiple -> locales : 1
with multiple locales -> use : 1
multiple locales use -> the : 1
locales use the -> class : 1
class template facet -> for : 20
template facet for -> mapping : 2
template facet for -> comparing : 2
template facet for -> classifying : 2
template facet for -> retrieving : 2
template facet for -> input : 4
template facet for -> output : 4
template facet for -> punctuation : 4
facet for mapping -> one : 2
for mapping one -> character : 2
mapping one character -> set : 2
one character set -> to : 2
set to class -> public : 1
to class public -> public : 1
public public typedef -> internt : 1
public public typedef -> chart : 4
public typedef internt -> typedef : 1
typedef internt typedef -> externt : 1
internt typedef externt -> typedef : 1
typedef externt typedef -> statet : 1
externt typedef statet -> explicit : 1
typedef statet explicit -> refs : 1
statet explicit refs -> result : 1
explicit refs result -> const : 1
refs result const -> const : 1
result const const -> const : 4
const const result -> result : 1
const result result -> const : 1
result result const -> const : 1
const const int -> const : 2
int const bool -> const : 1
bool const int -> const : 1
int const static -> virtual : 1
int const static -> const : 2
const static virtual -> virtual : 4
static virtual virtual -> result : 1
static virtual virtual -> int : 1
static virtual virtual -> bool : 3
static virtual virtual -> catalog : 1
static virtual virtual -> long : 1
static virtual virtual -> virtual : 2
static virtual virtual -> dateorder : 1
static virtual virtual -> const : 1
virtual virtual result -> const : 1
virtual result const -> const : 2
const const virtual -> result : 2
const const virtual -> int : 1
const const virtual -> const : 3
const const virtual -> chart : 3
const const virtual -> char : 1
const const virtual -> inline : 1
const virtual result -> const : 1
const virtual result -> virtual : 1
virtual result virtual -> int : 1
result virtual int -> const : 1
const virtual bool -> const : 1
virtual bool const -> virtual : 1
bool const virtual -> int : 1
int const template -> converts : 1
const template converts -> characters : 1
template converts characters -> from : 2
converts characters from -> one : 2
characters from one -> character : 2
from one character -> encoding : 2
one character encoding -> to : 2
character encoding to -> it : 1
character encoding to -> another : 1
encoding to it -> is : 1
to convert multibyte -> characters : 1
convert multibyte characters -> to : 1
multibyte characters to -> and : 1
multibyte characters to -> with : 1
and from wide -> following : 1
from wide following -> template : 1
wide following template -> specializations : 1
following template specializations -> are : 1
template specializations are -> required : 1
specializations are required -> by : 1
are required by -> the : 1
by the multibyte -> narrow : 1
the multibyte narrow -> characters : 1
multibyte narrow characters -> to : 1
narrow characters to -> wide : 1
narrow characters to -> characters : 1
characters to wide -> characters : 1
characters and wide -> to : 1
and wide to -> multibyte : 1
wide to multibyte -> characters : 1
to multibyte characters -> to : 1
characters to with -> other : 1
to with other -> the : 1
with other the -> public : 11
other the public -> members : 11
other the public -> function : 1
the public members -> of : 1
the public members -> call : 10
members of call -> protected : 1
of call protected -> members : 1
call protected members -> with : 11
protected members with -> the : 11
same name prefaced -> by : 11
name prefaced by -> to : 11
prefaced by to -> use : 11
by to use -> the : 11
use the call -> the : 11
the call the -> public : 11
call the public -> such : 10
call the public -> function : 1
the public such -> as : 10
public such as -> and : 1
public such as -> which : 9
as and which -> in : 1
and which in -> turn : 1
which in turn -> call : 1
in turn call -> and : 1
turn call and -> the : 1
and the descriptions -> below : 1
the descriptions below -> are : 11
descriptions below are -> for : 10
descriptions below are -> clearer : 1
below are for -> the : 10
virtual functions because -> they : 11
functions because they -> do : 11
because they do -> the : 11
they do the -> real : 11
do the real -> imagine : 11
the real imagine -> that : 11
real imagine that -> for : 11
imagine that for -> each : 11
for each virtual -> function : 6
each virtual function -> there : 6
virtual function there -> is : 6
function there is -> a : 6
is a corresponding -> description : 11
a corresponding description -> for : 11
corresponding description for -> a : 11
description for a -> nonvirtual : 11
for a nonvirtual -> such : 11
a nonvirtual such -> following : 8
a nonvirtual such -> const : 1
a nonvirtual such -> chart : 1
a nonvirtual such -> long : 1
nonvirtual such following -> are : 8
such following are -> the : 8
are the protected -> members : 11
are the protected -> member : 1
the protected members -> of : 11
protected members of -> if : 1
protected members of -> the : 5
protected members of -> chart : 1
protected members of -> characters : 1
protected members of -> const : 1
protected members of -> a : 2
members of if -> the : 1
members of if -> this : 1
does not actually -> perform : 1
not actually perform -> any : 1
actually perform any -> that : 1
perform any that -> and : 1
any that and -> are : 1
and are for -> for : 1
are for for -> the : 1
for for the -> specialization : 1
the specialization always -> returns : 1
specialization always returns -> the : 1
always returns the -> number : 1
of characters needed -> to : 2
characters needed to -> represent : 2
represent a single -> if : 1
represent a single -> that : 1
single if this -> number : 1
if this number -> is : 1
this number is -> not : 1
number is not -> a : 1
not a fixed -> the : 1
a fixed the -> return : 1
fixed the return -> value : 1
is if character -> sequences : 1
if character sequences -> are : 1
character sequences are -> not : 1
sequences are not -> const : 1
are not const -> characters : 1
not const characters -> to : 1
const characters to -> the : 1
the are converted -> and : 2
are converted and -> stored : 2
converted and stored -> in : 2
the array starting -> at : 3
array starting at -> the : 2
array starting at -> such : 1
at the number -> of : 2
of characters converted -> is : 2
characters converted is -> the : 2
converted is the -> minimum : 2
is the minimum -> of : 2
minimum of and -> parameter : 2
of and parameter -> is : 2
and parameter is -> set : 2
parameter is set -> to : 2
set to point -> to : 4
value in where -> the : 4
in where the -> conversion : 4
where the conversion -> and : 2
where the conversion -> if : 2
the conversion and -> points : 2
conversion and points -> to : 2
the conversion if -> no : 2
conversion if no -> conversion : 2
if no conversion -> was : 2
no conversion was -> is : 2
conversion was is -> the : 2
was is the -> same : 2
same as and -> is : 2
equal to return -> value : 2
is a as -> described : 3
a as described -> in : 3
to convert to -> at : 1
convert to at -> characters : 1
are the maximum -> number : 1
single that the -> maximum : 1
that the maximum -> value : 1
that can return -> when : 1
can return when -> is : 1
return when is -> characters : 1
when is characters -> to : 1
described in a -> shift : 1
in a shift -> state : 1
shift state by -> storing : 1
state by storing -> characters : 1
by storing characters -> in : 1
storing characters in -> the : 1
starting at such -> that : 1
at such that -> the : 1
that the characters -> undo : 1
the characters undo -> the : 1
characters undo the -> state : 1
undo the state -> shift : 1
the state shift -> given : 1
state shift given -> by : 1
shift given by -> up : 1
given by up -> to : 1
by up to -> characters : 1
to characters are -> and : 1
to characters are -> copied : 1
to characters are -> reading : 1
last character written -> into : 1
character written into -> return : 1
written into return -> value : 1
described in class -> class : 1
class class base -> class : 5
for the codecvt -> enum : 1
the codecvt enum -> noconv : 1
codecvt enum noconv -> class : 1
enum noconv class -> is : 1
noconv class is -> the : 1
the and class -> it : 3
the and class -> templates : 3
and class it -> declares : 3
class it declares -> the : 4
the type returned -> by : 1
by the and -> conversion : 1
by the and -> facets : 1
by the and -> identifies : 1
and conversion lists -> the : 1
conversion lists the -> literals : 1
the literals of -> the : 1
literals of the -> enumerated : 1
the enumerated solid -> solid : 1
enumerated solid solid -> solid : 1
solid in conversion -> invalid : 1
in conversion invalid -> state : 1
conversion invalid state -> or : 1
invalid state or -> multibyte : 1
state or multibyte -> character : 1
or multibyte character -> solid : 1
multibyte character solid -> solid : 1
character solid solid -> solid : 1
solid solid finished -> solid : 1
solid finished solid -> all : 1
finished solid all -> source : 1
solid all source -> characters : 1
all source characters -> or : 1
source characters or -> sequence : 1
characters or sequence -> is : 1
or sequence is -> class : 1
sequence is class -> class : 1
set to typename -> typename : 1
to typename typename -> class : 1
public explicit refs -> same : 2
explicit refs same -> virtual : 9
refs same virtual -> functions : 9
same virtual functions -> as : 9
virtual functions as -> in : 9
functions as in -> codecvt : 1
functions as in -> collate : 1
functions as in -> ctype : 1
functions as in -> class : 3
functions as in -> messages : 1
functions as in -> moneypunct : 1
functions as in -> numpunct : 1
as in codecvt -> class : 1
in codecvt class -> template : 1
codecvt class template -> converts : 1
class template converts -> characters : 1
encoding to another -> using : 1
to another using -> the : 1
another using the -> rules : 1
rules of a -> named : 3
rules of a -> prohibit : 1
a named the -> and : 7
named the and -> instantiations : 7
the and instantiations -> are : 16
and instantiations are -> class : 8
and instantiations are -> with : 5
and instantiations are -> and : 1
and instantiations are -> for : 1
and instantiations are -> of : 1
and instantiations are -> that : 1
instantiations are class -> class : 8
facet for comparing -> strings : 2
for comparing strings -> in : 2
comparing strings in -> collation : 2
strings in collation -> class : 2
in collation class -> public : 2
collation class public -> typedef : 2
chart typedef explicit -> refs : 5
typedef explicit refs -> int : 1
typedef explicit refs -> same : 5
typedef explicit refs -> catalog : 1
typedef explicit refs -> bool : 2
typedef explicit refs -> chart : 1
typedef explicit refs -> string : 1
explicit refs int -> const : 1
refs int const -> const : 1
const const long -> const : 1
const long const -> static : 1
long const static -> virtual : 1
const virtual long -> const : 1
virtual long const -> class : 1
long const class -> template : 1
is a facet -> used : 1
is a facet -> for : 14
is a facet -> that : 1
a facet used -> to : 1
facet used to -> compare : 1
to compare in -> some : 1
compare in some -> the : 1
some the collation -> order : 1
collation order of -> characters : 1
order of characters -> is : 1
characters is not -> the : 1
as the numerical -> order : 1
the numerical order -> of : 1
numerical order of -> their : 1
their and some -> characters : 1
and some characters -> might : 1
some characters might -> be : 1
might be logically -> equivalent : 1
be logically equivalent -> even : 1
logically equivalent even -> if : 1
equivalent even if -> they : 1
if they have -> different : 1
they have different -> can : 1
have different can -> use : 1
different can use -> a : 1
use a object -> as : 1
as a comparator -> for : 1
as a comparator -> predicate : 1
a comparator for -> algorithms : 1
comparator for algorithms -> that : 1
algorithms that need -> a : 1
that need a -> comparison : 1
need a comparison -> the : 1
a comparison the -> function : 1
comparison the function -> uses : 1
function uses the -> facet : 1
uses the facet -> to : 1
uses the facet -> is : 1
facet to perform -> the : 1
perform the standard -> mandates : 1
standard mandates the -> and : 1
mandates the and -> which : 1
and which perform -> lexicographical : 1
which perform lexicographical -> see : 1
perform lexicographical see -> in : 1
lexicographical see in -> earlier : 1
see in earlier -> in : 1
in this with -> other : 1
this with other -> the : 1
public members call -> protected : 10
members call protected -> members : 10
as which calls -> the : 9
calls the descriptions -> below : 9
nonvirtual such const -> following : 1
such const following -> are : 1
const following are -> the : 1
the character sequences -> with : 1
character sequences with -> the : 1
sequences with the -> character : 1
the character sequence -> the : 1
the character sequence -> if : 1
the character sequence -> into : 1
character sequence the -> return : 1
sequence the return -> value : 1
the if sequence -> is : 1
if sequence is -> less : 1
if sequence is -> greater : 1
less than sequence -> if : 1
than sequence if -> the : 1
the sequences are -> if : 1
sequences are if -> sequence : 1
are if sequence -> is : 1
sequence is greater -> than : 1
greater than sequence -> a : 1
than sequence a -> hash : 1
sequence a hash -> value : 1
a hash value -> for : 1
hash value for -> the : 1
character sequence if -> returns : 1
sequence if returns -> for : 1
if returns for -> two : 1
returns for two -> character : 1
for two character -> returns : 1
two character returns -> the : 1
character returns the -> same : 1
same value for -> the : 1
two the reverse -> is : 1
necessarily the the -> character : 1
the the character -> sequence : 1
character sequence into -> a : 1
sequence into a -> string : 1
string that can -> be : 1
be compared a -> simple : 1
compared a simple -> lexicographical : 1
a simple lexicographical -> with : 1
simple lexicographical with -> another : 1
lexicographical with another -> transformed : 1
with another transformed -> string : 1
another transformed string -> to : 1
transformed string to -> obtain : 1
string to obtain -> the : 1
the original character -> the : 1
original character the -> function : 1
function is useful -> if : 1
is useful if -> a : 1
useful if a -> program : 1
a program needs -> to : 1
program needs to -> compare : 1
needs to compare -> the : 1
compare the same -> character : 1
same character sequence -> many : 1
character sequence many -> class : 1
sequence many class -> class : 1
many class class -> class : 1
public typedef explicit -> refs : 2
as in collate -> strings : 1
in collate strings -> using : 1
collate strings using -> a : 1
strings using a -> named : 1
using a named -> collation : 1
using a named -> the : 2
a named collation -> the : 1
named collation the -> and : 1
collation the and -> instantiations : 1
facet for classifying -> public : 1
facet for classifying -> with : 1
facet for classifying -> narrow : 2
facet for classifying -> class : 1
facet for classifying -> it : 1
for classifying public -> public : 1
classifying public public -> typedef : 1
typedef chart explicit -> refs : 1
chart explicit refs -> bool : 1
explicit refs bool -> chart : 1
explicit refs bool -> long : 3
refs bool chart -> const : 1
bool chart const -> const : 1
chart const const -> const : 1
chart const const -> chart : 2
chart const const -> char : 1
const const chart -> const : 3
const const chart -> iterator : 2
const chart const -> const : 3
const const char -> char : 2
const const char -> static : 1
const const char -> class : 1
const char char -> const : 1
const char char -> modifier : 2
const char char -> class : 1
const char char -> a : 1
char char const -> const : 1
char const const -> char : 1
char static virtual -> virtual : 1
virtual virtual bool -> chart : 1
virtual virtual bool -> long : 1
virtual virtual bool -> virtual : 1
virtual bool chart -> virtual : 1
bool chart virtual -> const : 1
chart virtual const -> const : 4
const virtual chart -> virtual : 3
virtual chart virtual -> const : 3
virtual chart virtual -> chart : 1
virtual chart virtual -> string : 1
const virtual char -> char : 1
virtual char char -> virtual : 1
char char virtual -> const : 1
char virtual const -> const : 1
const char class -> template : 1
char class template -> is : 2
a facet for -> classifying : 2
a facet for -> a : 3
a facet for -> parsing : 3
a facet for -> formatting : 4
a facet for -> numeric : 2
a facet for -> reading : 1
for classifying with -> no : 1
classifying with no -> specialization : 1
with no specialization -> is : 1
no specialization is -> described : 1
specialization is described -> in : 1
described in its -> own : 1
in its own -> section : 1
in its own -> but : 1
its own section -> later : 1
own section later -> in : 1
section later in -> this : 2
the standard also -> mandates : 1
standard also mandates -> the : 1
also mandates the -> both : 1
mandates the both -> instantiations : 1
the both instantiations -> depend : 1
both instantiations depend -> on : 1
instantiations depend on -> the : 1
on the native -> character : 1
native character with -> other : 1
character with other -> the : 1
nonvirtual such chart -> following : 1
such chart following -> are : 1
chart following are -> the : 1
members of chart -> a : 1
of chart a -> single : 1
chart a single -> character : 1
single character or -> a : 2
character or a -> sequence : 5
character or a -> character : 1
or a sequence -> of : 5
characters the first -> form : 1
first form tests -> the : 1
form tests the -> classification : 1
tests the classification -> of : 1
the classification of -> and : 1
classification of and -> returns : 1
returns the second -> form : 1
second form determines -> the : 1
form determines the -> mask : 1
determines the mask -> for : 1
the mask for -> each : 1
mask for each -> character : 1
for each character -> in : 1
each character in -> the : 1
each character in -> is : 2
range and stores -> the : 1
and stores the -> values : 1
and stores the -> string : 1
stores the values -> in : 1
array must be -> large : 3
to hold returning -> see : 1
to hold returning -> if : 1
to hold returning -> class : 1
hold returning see -> the : 1
returning see the -> for : 1
see the for -> a : 1
of the char -> const : 1
the char const -> char : 1
const char a -> character : 1
char a character -> or : 1
characters to narrow -> characters : 1
to narrow characters -> of : 1
narrow characters of -> type : 1
characters of type -> the : 2
first form returns -> the : 4
form returns the -> narrow : 1
form returns the -> lowercase : 1
form returns the -> uppercase : 1
form returns the -> new : 1
returns the narrow -> and : 1
the narrow and -> the : 1
narrow and the -> second : 1
second form stores -> the : 3
form stores the -> characters : 2
form stores the -> following : 1
stores the characters -> in : 2
hold returning if -> a : 1
returning if a -> source : 1
if a source -> character : 1
a source character -> cannot : 1
source character cannot -> be : 1
character cannot be -> converted : 3
character cannot be -> put : 1
narrow the first -> function : 1
first function returns -> and : 1
the second function -> stores : 1
second function stores -> in : 1
function stores in -> as : 1
stores in as -> the : 1
in as the -> narrow : 1
as the narrow -> version : 1
the narrow version -> of : 1
narrow version of -> that : 1
version of that -> const : 1
of that const -> const : 1
that const const -> the : 1
const the sequence -> of : 4
of characters for -> the : 4
characters for the -> first : 4
character that matches -> that : 2
that matches that -> for : 2
matches that for -> which : 2
that for which -> is : 4
the first matching -> or : 4
first matching or -> if : 4
matching or if -> no : 2
matching or if -> every : 2
no characters match -> const : 2
characters match const -> const : 2
match const const -> the : 1
match const const -> const : 1
character that does -> not : 2
not match that -> for : 2
match that for -> which : 2
or if every -> character : 4
if every character -> matches : 2
if every character -> appears : 2
every character matches -> const : 2
character matches const -> a : 1
character matches const -> the : 1
matches const a -> character : 1
const a character -> or : 2
returns the lowercase -> version : 1
the lowercase version -> of : 1
lowercase version of -> or : 1
version of or -> it : 2
version of or -> after : 1
of or it -> returns : 2
or it returns -> if : 2
returns if does -> not : 2
have a lowercase -> second : 1
a lowercase second -> form : 1
lowercase second form -> modifies : 1
second form modifies -> the : 2
form modifies the -> character : 2
modifies the character -> each : 2
the character each -> character : 2
character each character -> in : 2
in is replaced -> by : 2
by its lowercase -> if : 1
its lowercase if -> a : 1
lowercase if a -> character : 1
if a character -> cannot : 2
a character cannot -> be : 2
converted to it -> is : 2
not the function -> returns : 2
returns const a -> character : 1
returns const a -> narrow : 1
returns the uppercase -> version : 1
the uppercase version -> of : 1
uppercase version of -> or : 1
have a uppercase -> second : 1
a uppercase second -> form : 1
uppercase second form -> modifies : 1
by its uppercase -> if : 1
its uppercase if -> a : 1
uppercase if a -> character : 1
const a narrow -> character : 1
narrow character or -> a : 1
of narrow characters -> to : 1
characters to characters -> of : 1
to characters of -> type : 1
new and the -> second : 1
hold returning class -> class : 1
returning class class -> class : 1
class class facet -> for : 2
class facet for -> classifying : 2
for classifying narrow -> class : 2
classifying narrow class -> public : 2
narrow class public -> public : 1
narrow class public -> explicit : 1
public explicit tab -> bool : 1
explicit tab bool -> del : 1
tab bool del -> refs : 2
bool del refs -> static : 1
bool del refs -> the : 1
del refs static -> const : 1
refs static const -> inline : 1
static const inline -> bool : 1
const inline bool -> char : 1
inline bool char -> inline : 1
bool char inline -> const : 1
char inline const -> const : 1
inline const const -> inline : 2
inline const const -> const : 2
const const inline -> const : 2
const const inline -> static : 1
const inline const -> const : 2
const virtual inline -> const : 1
virtual inline const -> const : 1
const inline static -> const : 1
inline static const -> class : 1
inline static const -> a : 1
specialized for type -> not : 1
for type not -> or : 1
type not or -> so : 1
not or so -> the : 1
so the member -> functions : 1
implemented as inline -> the : 1
as inline the -> standard : 1
inline the standard -> requires : 1
requires the implementation -> to : 1
implementation to have -> the : 1
have the protected -> member : 1
the protected member -> functions : 2
protected member functions -> and : 1
protected member functions -> of : 1
functions and each -> of : 1
and each of -> these : 1
these functions returns -> an : 1
functions returns an -> array : 1
returns an array -> of : 1
array of mask -> values : 1
of mask values -> indexed : 1
mask values indexed -> by : 1
values indexed by -> characters : 1
indexed by characters -> cast : 1
by characters cast -> to : 1
characters cast to -> the : 1
in a table -> must : 1
a table must -> be : 1
table must be -> at : 1
least which is -> an : 1
is an constant -> following : 1
an constant following -> are : 1
constant following are -> the : 2
are the key -> member : 1
the key member -> tab : 1
key member tab -> bool : 1
member tab bool -> del : 1
del refs the -> pointer : 1
refs the pointer -> with : 1
pointer with if -> is : 1
null is set -> to : 1
not and is -> the : 1
the object owns -> the : 1
object owns the -> and : 1
owns the and -> when : 1
the and when -> the : 1
when the destructor -> is : 1
the destructor is -> it : 1
destructor is it -> will : 1
it will delete -> the : 1
will delete the -> the : 1
delete the the -> parameter : 1
parameter is passed -> to : 1
the base as -> with : 1
base as with -> any : 1
with any the -> flag : 1
any the flag -> was : 1
the flag was -> and : 1
flag was and -> was : 1
was and was -> not : 1
and was not -> a : 1
was not a -> null : 1
not a null -> performs : 1
a null performs -> chart : 1
null performs chart -> character : 1
performs chart character -> the : 1
chart character the -> first : 1
character the first -> form : 1
first form second -> form : 1
form second form -> stores : 1
stores the following -> in : 1
following in for -> each : 1
in for each -> element : 1
range that does -> not : 1
not call so -> can : 1
call so can -> be : 1
as an inline -> static : 1
an inline static -> const : 1
static const a -> table : 1
const a table -> that : 1
a table that -> corresponds : 1
table that corresponds -> to : 1
to the const -> const : 1
matches const the -> value : 1
const the value -> that : 1
value that was -> passed : 1
constructor as the -> if : 1
as the if -> was : 1
as the if -> an : 1
the if was -> is : 1
if was is -> class : 1
was is class -> class : 1
class for ctype -> enum : 1
for ctype enum -> class : 1
ctype enum class -> is : 1
enum class is -> the : 1
declares the enumerated -> which : 1
the enumerated which -> is : 1
enumerated which is -> used : 1
used for classifying -> literals : 1
for classifying literals -> for : 2
classifying literals for -> classifying : 2
for classifying describes -> the : 1
classifying describes the -> literals : 1
describes the literals -> and : 1
their definitions for -> the : 1
for the classic -> literals : 1
the classic literals -> for : 1
classic literals for -> classifying : 1
for classifying solid -> solid : 1
classifying solid solid -> solid : 1
or solid or -> solid : 1
solid solid that -> occupies : 1
solid that occupies -> graphical : 1
that occupies graphical -> solid : 1
occupies graphical solid -> but : 1
graphical solid but -> not : 1
solid but not -> solid : 1
but not solid -> solid : 1
solid character solid -> on : 1
character solid on -> character : 1
solid on character -> in : 1
on character in -> solid : 1
character in solid -> solid : 1
solid solid digit -> class : 1
solid digit class -> class : 1
digit class class -> class : 1
for classifying class -> public : 1
classifying class public -> typedef : 1
as in ctype -> class : 1
in ctype class -> template : 1
ctype class template -> is : 1
for classifying it -> uses : 1
classifying it uses -> a : 1
it uses a -> named : 2
uses a named -> the : 2
as in class -> specializes : 1
as in class -> template : 2
in class specializes -> the : 1
class specializes the -> template : 1
template for type -> specialization : 1
for type specialization -> exists : 1
type specialization exists -> for : 1
specialization exists for -> and : 1
exists for and -> it : 1
for and it -> derives : 1
for and it -> declares : 1
and it derives -> from : 1
it derives from -> so : 1
derives from so -> it : 1
from so it -> inherits : 1
so it inherits -> its : 1
it inherits its -> class : 1
inherits its class -> class : 1
its class class -> function : 1
function template test -> for : 1
template test for -> existence : 1
test for existence -> of : 1
for existence of -> a : 1
existence of a -> facet : 1
of a facet -> in : 1
a facet in -> a : 1
facet in a -> bool : 1
in a bool -> function : 1
in a bool -> const : 11
a bool function -> determines : 1
bool function determines -> whether : 1
determines whether the -> locale : 1
determines whether the -> character : 11
whether the locale -> supports : 1
the locale supports -> the : 1
locale supports the -> facet : 1
supports the facet -> it : 1
the facet it -> returns : 1
facet it returns -> if : 1
facet is supported -> or : 1
is supported or -> if : 1
supported or if -> it : 1
it is call -> to : 1
is call to -> determine : 1
whether a locale -> supports : 5
a locale supports -> a : 5
locale supports a -> locale : 1
locale supports a -> shows : 1
locale supports a -> the : 1
locale supports a -> particular : 1
locale supports a -> and : 1
supports a locale -> must : 1
a locale must -> support : 1
locale must support -> the : 1
must support the -> standard : 1
support the standard -> facets : 1
the standard facets -> that : 1
standard facets that -> are : 1
facets that are -> described : 1
that are described -> in : 1
in this whether -> a : 1
supports a shows -> how : 1
how is whether -> a : 1
is whether a -> locale : 1
supports a the -> units : 1
a the units -> facet : 1
the units facet -> is : 1
the units facet -> of : 1
the units facet -> to : 1
the units facet -> from : 1
units facet is -> defined : 1
facet is defined -> under : 1
is defined under -> the : 1
defined under the -> class : 1
under the class -> in : 1
in this using -> if : 1
this using if -> get : 1
using if get -> a : 1
if get a -> reference : 1
get a reference -> to : 1
to the units -> facet : 1
units facet of -> the : 1
of the const -> u : 1
the const u -> construct : 1
const u construct -> a : 1
u construct a -> value : 1
construct a value -> of : 1
value of len -> print : 1
of len print -> the : 1
len print the -> length : 1
print the length -> in : 1
the length in -> the : 1
the length in -> base : 1
length in the -> preferred : 1
the preferred function -> function : 1
preferred function function -> function : 1
template determines whether -> a : 11
whether a character -> is : 11
character is alphanumeric -> in : 1
is alphanumeric in -> a : 1
alphanumeric in a -> bool : 1
a bool const -> function : 11
bool const function -> determines : 11
bool const function -> template : 2
const function determines -> whether : 11
whether the character -> is : 11
is an alphanumeric -> character : 1
an alphanumeric character -> in : 1
alphanumeric character in -> the : 1
in the locale -> it : 11
the locale it -> returns : 11
locale it returns -> the : 11
returns the class -> class : 12
is a letter -> in : 2
a letter in -> a : 1
a letter in -> the : 1
letter in a -> bool : 1
letter in the -> locale : 3
control character in -> a : 1
control character in -> the : 1
is a digit -> in : 2
a digit in -> a : 1
a digit in -> the : 1
digit in a -> bool : 2
digit in the -> locale : 2
character is graphical -> in : 1
character is graphical -> or : 1
is graphical in -> a : 1
graphical in a -> bool : 1
is graphical or -> in : 1
graphical or in -> the : 1
character is lowercase -> in : 1
is lowercase in -> a : 1
lowercase in a -> bool : 1
lowercase in a -> chart : 1
a lowercase letter -> in : 1
lowercase letter in -> the : 1
character is printable -> in : 2
is printable in -> a : 1
is printable in -> the : 1
printable in a -> bool : 1
printable in the -> locale : 1
character is punctuation -> in : 2
is punctuation in -> a : 1
is punctuation in -> the : 1
punctuation in a -> bool : 1
punctuation in the -> locale : 1
character is whitespace -> in : 2
is whitespace in -> a : 1
is whitespace in -> the : 1
whitespace in a -> bool : 1
character is uppercase -> in : 1
is uppercase in -> a : 1
uppercase in a -> bool : 1
uppercase in a -> chart : 1
an uppercase letter -> in : 1
uppercase letter in -> the : 1
hexadecimal digit in -> a : 1
hexadecimal digit in -> the : 1
function class represents -> a : 1
class represents a -> locale : 1
class represents a -> single : 1
represents a locale -> as : 1
a locale as -> a : 1
locale as a -> set : 1
as a set -> of : 2
set of class -> class : 1
class class typedef -> int : 1
typedef int static -> const : 1
static const category -> explicit : 1
static const category -> type : 1
const category explicit -> const : 1
category explicit const -> template : 1
explicit const template -> const : 1
const template const -> const : 1
template const const -> template : 1
const const template -> locale : 1
const template locale -> bool : 1
template locale bool -> bool : 1
locale bool bool -> template : 1
bool bool template -> typename : 1
bool template typename -> typename : 1
bool const static -> locale : 1
bool const static -> virtual : 1
bool const static -> bool : 2
bool const static -> static : 4
const static locale -> static : 1
static locale static -> const : 1
locale static const -> class : 1
represents the information -> for : 1
the information for -> a : 1
information for a -> this : 1
for a this -> information : 1
a this information -> is : 1
information is stored -> as : 1
stored as a -> set : 1
set of several -> facets : 1
of several facets -> are : 1
several facets are -> defined : 1
facets are defined -> by : 1
are defined by -> the : 1
the and facets -> can : 1
the and facets -> for : 1
the and facets -> use : 1
and facets can -> be : 1
facets can be -> added : 1
added to any -> the : 1
any the function -> template : 1
supports a particular -> the : 1
a particular the -> function : 1
particular the function -> template : 1
function template retrieves -> a : 2
template retrieves a -> facet : 2
retrieves a facet -> of : 1
retrieves a facet -> for : 1
a facet of -> a : 1
facet of a -> to : 1
to a facet -> are : 1
a facet are -> safe : 1
facet are safe -> until : 1
are safe until -> all : 1
safe until all -> locale : 1
until all locale -> objects : 1
all locale objects -> that : 1
locale objects that -> use : 1
objects that use -> that : 1
that use that -> facet : 1
use that facet -> have : 1
that facet have -> been : 1
facet have been -> new : 1
have been new -> locales : 1
been new locales -> can : 1
new locales can -> be : 1
locales can be -> created : 1
be created from -> existing : 1
created from existing -> with : 1
from existing with -> modifications : 1
existing with modifications -> to : 1
with modifications to -> a : 1
modifications to a -> particular : 1
a particular locales -> have : 1
particular locales have -> a : 1
locales have a -> locale : 1
have a locale -> can : 1
a locale can -> be : 1
locale can be -> constructed : 1
locale can be -> copied : 1
can be constructed -> for : 1
be constructed for -> a : 1
constructed for a -> standard : 1
standard or a -> named : 1
or a named -> locale : 1
a named locale -> can : 1
named locale can -> be : 1
be copied or -> combined : 1
copied or combined -> with : 1
with other named -> locales : 1
other named locales -> to : 1
named locales to -> produce : 1
locales to produce -> a : 1
a new named -> interacting : 1
new named interacting -> with : 1
named interacting with -> the : 1
interacting with the -> either : 1
with the either -> through : 1
the either through -> the : 1
either through the -> standard : 1
through the standard -> streams : 1
standard streams or -> through : 1
streams or through -> a : 1
or through a -> graphical : 1
through a graphical -> user : 1
a graphical user -> you : 1
graphical user you -> should : 1
use the native -> that : 1
the native that -> when : 1
native that when -> performing : 1
that when performing -> to : 1
when performing to -> external : 1
performing to external -> files : 1
to external files -> where : 1
external files where -> the : 1
files where the -> data : 1
where the data -> must : 1
the data must -> be : 1
data must be -> portable : 1
data must be -> properly : 1
must be portable -> to : 1
portable to other -> or : 1
to other or -> use : 1
other or use -> the : 1
use the locale -> locales : 1
use the locale -> object : 1
use the locale -> to : 1
the locale locales -> for : 1
locale locales for -> input : 1
locales for input -> and : 2
input and shows -> locales : 1
and shows locales -> that : 1
shows locales that -> control : 1
locales that control -> input : 1
that control input -> and : 1
control input and -> output : 1
and output locales -> for : 1
output locales for -> input : 1
input and open -> a : 1
and open a -> file : 1
file and read -> numbers : 1
and read numbers -> from : 1
read numbers from -> computing : 1
numbers from computing -> the : 1
from computing the -> return : 1
computing the return -> the : 1
return the mean -> or : 1
the mean or -> if : 1
mean or if -> the : 1
the file contains -> no : 1
file contains no -> the : 1
contains no the -> data : 1
no the data -> is : 1
the data is -> in : 1
data is in -> the : 1
in the classic -> that : 1
in the classic -> so : 1
the classic that -> the : 1
classic that the -> same : 1
same format used -> by : 1
format used by -> double : 1
used by double -> force : 1
by double force -> the : 1
double force the -> datafile : 1
force the datafile -> to : 1
the datafile to -> be : 1
datafile to be -> interpreted : 1
to be interpreted -> in : 1
be interpreted in -> the : 1
interpreted in the -> classic : 1
the classic so -> the : 1
classic so the -> same : 1
the same datafile -> can : 1
same datafile can -> be : 1
datafile can be -> used : 1
be used double -> sum : 1
used double sum -> unsigned : 1
double sum unsigned -> long : 1
sum unsigned long -> count : 1
long count for -> iter : 1
count for iter -> sum : 1
for iter sum -> return : 1
iter sum return -> count : 1
sum return count -> sum : 1
return count sum -> int : 1
count sum int -> print : 1
sum int print -> results : 1
int print results -> in : 1
print results in -> the : 1
the native following -> are : 1
native following are -> the : 1
of the locale -> with : 1
the locale with -> a : 1
locale with a -> copy : 1
the current global -> the : 2
current global the -> initial : 1
current global the -> pointer : 1
global the initial -> global : 1
the initial global -> locale : 1
initial global locale -> is : 1
the the locale -> using : 1
the locale using -> a : 1
locale using a -> standard : 1
standard the names -> and : 1
the names and -> are : 1
names and are -> always : 1
and are always -> in : 1
are always in -> which : 1
always in which -> is : 1
is the locale -> returned : 1
the locale returned -> by : 1
the locale returned -> from : 1
locale returned by -> the : 1
the and identifies -> the : 1
and identifies the -> native : 1
identifies the native -> implementation : 1
the native implementation -> can : 1
native implementation can -> define : 1
define additional many -> implementations : 1
additional many implementations -> use : 1
implementations use iso -> language : 1
use iso language -> codes : 1
iso language codes -> and : 1
language codes and -> country : 1
codes and country -> codes : 1
and country codes -> to : 1
country codes to -> identify : 1
codes to identify -> a : 1
to identify a -> for : 1
identify a for -> the : 1
a for the -> iso : 1
a for the -> va : 2
for the iso -> language : 1
the iso language -> code : 1
iso language code -> for : 1
language code for -> english : 1
code for english -> is : 1
for english is -> and : 1
english is and -> the : 1
and the iso -> country : 1
the iso country -> code : 1
iso country code -> for : 1
country code for -> the : 1
for the united -> states : 1
united states is -> so : 1
states is so -> could : 1
is so could -> identify : 1
so could identify -> the : 1
could identify the -> locale : 1
identify the locale -> for : 1
locale for const -> category : 1
for const category -> the : 1
const category the -> from : 1
const category the -> locale : 1
category the from -> except : 1
the from except -> for : 2
from except for -> those : 2
from except for -> the : 1
except for those -> categories : 2
for those categories -> identified : 2
those categories identified -> by : 2
categories identified by -> which : 2
identified by which -> are : 2
by which are -> copied : 2
which are copied -> from : 2
copied from the -> standard : 1
copied from the -> new : 1
copied from the -> input : 1
the standard locale -> identified : 1
standard locale identified -> by : 1
locale identified by -> the : 1
by the new -> locale : 1
new locale has -> a : 3
new locale has -> no : 1
locale has a -> name : 2
locale has a -> the : 1
a name only -> if : 2
name only if -> has : 1
name only if -> and : 1
a the from -> except : 1
the facet which -> is : 1
facet which is -> obtained : 1
which is obtained -> from : 1
obtained from if -> is : 1
from if is -> not : 2
not const category -> the : 1
category the locale -> from : 1
the locale from -> except : 1
locale from except -> for : 1
from the new -> locale : 1
from the new -> function : 1
only if and -> have : 1
and have a -> new : 1
a new locale -> that : 3
new locale that -> is : 3
locale that is -> a : 2
locale that is -> equal : 1
copy of except -> for : 1
of except for -> which : 1
except for which -> is : 1
which is copied -> from : 1
is copied from -> if : 1
copied from if -> does : 1
from if does -> not : 1
support the is -> is : 1
the is is -> the : 1
locale has no -> the : 2
no the name -> or : 1
name or if -> the : 1
the locale has -> no : 1
the locale has -> the : 1
no the exact -> contents : 1
the name string -> are : 2
name string are -> but : 1
name string are -> which : 1
string are but -> you : 1
use the string -> to : 1
string to construct -> a : 1
string to construct -> an : 1
construct a new -> locale : 2
construct a new -> from : 4
that is equal -> to : 1
the two locales -> are : 2
two locales are -> the : 1
two locales are -> named : 1
locales are the -> same : 1
the same one -> locale : 1
same one locale -> object : 1
one locale object -> is : 1
locale object is -> a : 1
or the two -> locales : 1
locales are named -> and : 1
named and have -> the : 1
same the function -> returns : 1
function returns typename -> typename : 1
typename const two -> strings : 1
const two strings -> using : 1
two strings using -> the : 1
using the facet -> and : 1
the facet and -> returns : 1
facet and returns -> if : 1
returns if you -> can : 1
if you can -> use : 1
the locale object -> as : 1
locale object as -> a : 1
a comparator predicate -> to : 1
comparator predicate to -> compare : 1
predicate to compare -> see : 1
to compare see -> for : 1
compare see for -> more : 1
for more the -> global : 1
more the global -> locale : 1
global locale to -> and : 1
locale to and -> returns : 1
the previous global -> if : 1
previous global if -> the : 1
global if the -> new : 1
a the c -> locale : 1
c locale is -> set : 1
c locale is -> a : 1
locale is set -> by : 1
by calling if -> the : 2
by calling if -> fill : 1
by calling if -> is : 1
calling if the -> locale : 1
calling if the -> priority : 1
calling if the -> stream : 1
the locale does -> not : 1
locale does not -> have : 1
a the effect -> on : 1
the effect on -> the : 1
locale is a -> locale : 1
is a locale -> that : 1
a locale that -> implements : 1
locale that implements -> the : 1
that implements the -> function : 1
implements the function -> function : 1
function in type -> bitmask : 1
in type bitmask -> of : 1
type bitmask of -> facet : 1
bitmask of facet -> int : 1
of facet int -> static : 1
facet int static -> const : 1
const category type -> is : 1
category type is -> an : 1
an and represents -> a : 1
represents a bitmask -> of : 1
a bitmask of -> category : 1
bitmask of category -> as : 1
of category as -> listed : 1
category as listed -> in : 1
as listed in -> categories : 1
listed in categories -> and : 1
in categories and -> their : 1
categories and their -> each : 1
categories and their -> categories : 1
categories and their -> solid : 1
and their each -> category : 1
their each category -> represents : 1
each category represents -> a : 1
category represents a -> set : 1
represents a set -> of : 1
set of one -> or : 1
or more related -> when : 1
more related when -> combining : 1
related when combining -> you : 1
when combining you -> can : 1
combining you can -> copy : 1
you can copy -> all : 1
can copy all -> the : 1
copy all the -> facets : 1
all the facets -> in : 1
facets in one -> or : 1
in one or -> more : 1
or more category -> identifiers : 1
more category identifiers -> can : 1
category identifiers can -> be : 1
identifiers can be -> combined : 1
be combined using -> bitwise : 1
using bitwise categories -> and : 1
bitwise categories and -> their : 1
and their categories -> and : 1
their categories and -> their : 1
and their solid -> solid : 1
their solid solid -> solid : 1
solid solid class -> base : 1
solid class base -> class : 1
class for locale -> explicit : 1
for locale explicit -> refs : 1
locale explicit refs -> virtual : 1
explicit refs virtual -> not : 1
refs virtual not -> defined : 1
virtual not defined -> void : 1
not defined void -> not : 1
defined void not -> defined : 1
defined class is -> the : 1
for all a -> derived : 1
all a derived -> class : 1
class must also -> declare : 1
class must also -> be : 1
must also declare -> a : 1
declare a static -> data : 1
declare a static -> member : 1
of type whose -> name : 1
type whose name -> is : 1
whose name is -> even : 1
name is even -> a : 1
is even a -> derived : 1
even a derived -> class : 1
class must declare -> its : 1
must declare its -> own : 1
declare its own -> member : 1
its own member -> because : 1
own member because -> it : 1
member because it -> must : 1
because it must -> have : 1
have an identifier -> that : 1
that is distinct -> from : 1
distinct from that -> of : 1
from that of -> the : 1
of the any -> other : 1
the any other -> members : 1
any other members -> for : 1
other members for -> a : 1
members for a -> custom : 1
for a custom -> facet : 1
a custom facet -> are : 1
custom facet are -> entirely : 1
facet are entirely -> up : 1
are entirely up -> to : 1
entirely up to -> the : 1
the the derived -> class : 1
need to provide -> a : 1
to provide a -> copy : 1
to provide a -> more : 2
to provide a -> library : 1
provide a copy -> or : 1
a copy or -> default : 1
copy or default -> constructor : 1
or default constructor -> or : 1
constructor or an -> assignment : 1
or an assignment -> class : 1
an assignment class -> assigns : 1
assignment class assigns -> a : 1
class assigns a -> value : 1
assigns a value -> to : 1
value to when -> the : 1
when the facet -> object : 1
the facet object -> is : 1
facet object is -> added : 1
object is added -> to : 1
a you never -> need : 1
need to examine -> or : 1
to examine or -> alter : 1
examine or alter -> the : 1
or alter the -> it : 1
alter the it -> is : 1
it is managed -> entirely : 1
is managed entirely -> by : 1
managed entirely by -> explicit : 1
entirely by explicit -> constructor : 1
by explicit constructor -> for : 1
explicit constructor for -> takes : 1
constructor for takes -> a : 1
for takes a -> single : 1
is not deleted -> until : 1
not deleted until -> the : 1
deleted until the -> last : 1
until the last -> locale : 1
the last locale -> that : 1
last locale that -> uses : 1
locale that uses -> the : 1
facet is if -> the : 1
never the standard -> facet : 1
the standard facet -> classes : 1
standard facet classes -> also : 1
facet classes also -> take : 1
classes also take -> a : 1
also take a -> parameter : 1
parameter and pass -> it : 1
pass it directly -> to : 1
it directly to -> the : 1
to the inherited -> custom : 1
the inherited custom -> facets : 1
inherited custom facets -> can : 1
custom facets can -> do : 1
facets can do -> whatever : 1
can do whatever -> the : 1
do whatever the -> programmer : 1
whatever the programmer -> such : 1
the programmer such -> as : 1
such as relying -> on : 1
as relying on -> the : 1
relying on the -> default : 1
on the default -> value : 1
value of to -> manage : 1
of to manage -> the : 1
to manage the -> lifetime : 1
manage the lifetime -> suppose : 1
the lifetime suppose -> you : 1
lifetime suppose you -> want : 1
define a facet -> that : 1
a facet that -> captures : 1
a facet that -> allows : 1
a facet that -> describes : 1
facet that captures -> the : 1
that captures the -> preferences : 1
captures the preferences -> for : 1
the preferences for -> units : 1
preferences for units -> of : 1
for units of -> such : 1
units of such -> as : 1
such as length -> and : 1
as length and -> a : 1
length and a -> program : 1
program can store -> and : 1
can store and -> manipulate : 1
store and manipulate -> values : 1
and manipulate values -> in : 1
manipulate values in -> a : 1
in a common -> base : 1
common base unit -> and : 1
base unit and -> convert : 1
unit and convert -> to : 1
and convert to -> the : 1
convert to the -> preferred : 1
to the preferred -> unit : 1
to the preferred -> and : 1
the preferred unit -> for : 2
preferred unit for -> simple : 1
preferred unit for -> int : 1
unit for simple -> facet : 1
for simple facet -> for : 1
simple facet for -> working : 2
facet for working -> with : 2
working with units -> of : 2
with units of -> shows : 1
with units of -> units : 1
units of shows -> a : 1
shows a facet -> that : 1
facet that allows -> you : 1
that allows you -> to : 1
you to do -> these : 1
do these simple -> facet : 1
these simple facet -> for : 1
units of units -> public : 1
of units public -> enum : 1
units public enum -> typedef : 1
public enum typedef -> double : 1
enum typedef double -> all : 1
typedef double all -> facets : 1
double all facets -> must : 1
all facets must -> have : 1
facets must have -> a : 1
a static id -> static : 1
static id static -> constructor : 1
id static constructor -> initializes : 1
static constructor initializes -> according : 1
constructor initializes according -> to : 1
initializes according to -> local : 1
according to local -> read : 1
to local read -> a : 1
local read a -> length : 1
read a length -> and : 1
a length and -> its : 1
length and its -> and : 1
and its and -> return : 1
its and return -> the : 1
and return the -> length : 1
and return the -> output : 1
and return the -> input : 3
and return the -> minimum : 1
return the length -> in : 1
length in base -> convert : 1
in base convert -> value : 1
base convert value -> to : 1
convert value to -> the : 1
the preferred and -> print : 1
preferred and print -> the : 1
print the converted -> value : 1
the converted value -> followed : 1
converted value followed -> by : 1
value followed by -> the : 1
by the unit -> void : 1
the unit void -> make : 1
unit void make -> a : 1
void make a -> base : 1
make a base -> unit : 1
a base unit -> value : 1
base unit value -> from : 1
unit value from -> a : 1
value from a -> value : 1
value in convert -> base : 1
in convert base -> units : 1
convert base units -> to : 1
base units to -> return : 1
units to return -> the : 1
of a const -> return : 1
a const return -> the : 1
const return the -> preferred : 1
return the preferred -> unit : 1
unit for int -> add : 1
for int add -> the : 1
int add the -> units : 1
add the units -> facet : 1
units facet to -> the : 1
facet to the -> global : 1
to the global -> construct : 1
the global construct -> a : 1
global construct a -> new : 1
of the global -> with : 1
of the global -> and : 1
the global with -> the : 1
global with the -> new : 1
the new units -> facet : 1
new units facet -> added : 1
units facet added -> to : 1
facet added to -> set : 1
added to set -> the : 1
set the new -> locale : 1
new locale as -> the : 1
locale as the -> global : 1
as the global -> new : 1
the global new -> now : 1
global new now -> anyone : 1
new now anyone -> can : 1
now anyone can -> get : 1
anyone can get -> the : 1
can get the -> units : 1
get the units -> facet : 1
units facet from -> the : 1
from the global -> const : 1
the global const -> u : 1
global const u -> size : 1
const u size -> class : 1
u size class -> facet : 1
size class facet -> void : 1
class facet void -> not : 1
facet void not -> defined : 1
defined class identifies -> a : 1
class identifies a -> it : 1
identifies a it -> is : 1
only to declare -> a : 1
type in every -> facet : 1
in every facet -> see : 1
every facet see -> for : 1
facet see for -> more : 1
more class class -> template : 1
more class class -> class : 1
facet for retrieving -> strings : 2
for retrieving strings -> from : 2
retrieving strings from -> a : 2
strings from a -> message : 2
from a message -> class : 2
a message class -> public : 2
message class public -> public : 1
message class public -> typedef : 1
explicit refs catalog -> const : 1
refs catalog const -> int : 1
catalog const int -> int : 1
const void static -> virtual : 1
void static virtual -> virtual : 1
virtual virtual catalog -> const : 1
virtual catalog const -> virtual : 1
catalog const virtual -> int : 1
virtual int int -> const : 1
facet for a -> message : 2
facet for a -> const : 1
for a message -> a : 1
for a message -> it : 1
a message a -> message : 1
message a message -> catalog : 1
a message catalog -> is : 2
a message catalog -> if : 1
message catalog is -> a : 1
message catalog is -> found : 1
catalog is a -> database : 1
is a database -> of : 1
a database of -> textual : 1
database of textual -> messages : 1
of textual messages -> that : 1
textual messages that -> can : 1
messages that can -> be : 1
can be translated -> into : 1
be translated into -> different : 1
translated into different -> the : 1
into different the -> and : 1
different the and -> instantiations : 1
instantiations are with -> no : 1
instantiations are with -> other : 4
no a message -> catalog : 1
catalog is found -> is : 1
is found is -> for : 1
found is for -> a : 1
for a catalog -> name : 1
a catalog name -> could : 1
catalog name could -> be : 1
name could be -> the : 1
could be the -> name : 2
be the name -> of : 2
an external or -> it : 1
external or it -> could : 1
of a special -> resource : 1
a special resource -> section : 1
special resource section -> in : 1
resource section in -> the : 1
section in the -> executable : 1
in the executable -> the : 1
the executable the -> mapping : 1
executable the mapping -> of : 1
the mapping of -> message : 1
mapping of message -> identifiers : 1
of message identifiers -> to : 1
message identifiers to -> a : 1
identifiers to a -> particular : 1
a particular message -> is : 1
particular message is -> also : 1
message is also -> with : 1
is also with -> other : 1
also with other -> the : 1
for each there -> is : 5
each there is -> a : 5
the message catalog -> a : 1
message catalog a -> message : 1
catalog a message -> that : 1
message that is -> identified : 1
that is identified -> by : 1
is identified by -> and : 1
identified by and -> from : 1
by and from -> catalog : 1
by and from -> the : 1
and from catalog -> if : 1
from catalog if -> the : 1
catalog if the -> message : 1
catalog if the -> catalog : 1
if the message -> cannot : 1
the message cannot -> be : 1
message cannot be -> is : 1
cannot be is -> a : 1
cannot be is -> implementation : 1
be is a -> message : 1
is a message -> catalog : 1
message catalog if -> the : 1
if the catalog -> cannot : 1
the catalog cannot -> be : 1
catalog cannot be -> a : 1
be a negative -> value : 1
negative value is -> the : 1
can be passed -> to : 2
passed to to -> retrieve : 1
to to retrieve -> call : 1
to retrieve call -> to : 1
retrieve call to -> close : 1
call to close -> the : 1
to close the -> class : 1
close the class -> class : 1
class for message -> typedef : 1
for message typedef -> int : 1
message typedef int -> class : 1
typedef int class -> is : 1
int class is -> the : 1
int class is -> a : 1
class for and -> it : 1
and it declares -> the : 1
the which stores -> a : 1
which stores a -> handle : 1
stores a handle -> for : 1
a handle for -> an : 1
handle for an -> open : 1
for an open -> message : 1
an open message -> class : 1
open message class -> class : 1
message class class -> class : 1
public typedef typedef -> explicit : 2
public typedef typedef -> inputiterator : 1
as in messages -> class : 1
in messages class -> template : 1
messages class template -> is : 1
a message it -> uses : 1
message it uses -> a : 1
class for moneypunct -> enum : 1
for moneypunct enum -> value : 1
moneypunct enum value -> struct : 1
value struct char -> class : 1
struct char class -> is : 1
char class is -> a : 1
and a actually -> stores : 1
a actually stores -> four : 1
actually stores four -> but : 1
stores four but -> they : 1
four but they -> are : 1
they are stored -> as : 1
stored as four -> values : 1
as four values -> for : 1
four values for -> space : 1
values for space -> see : 1
for space see -> for : 1
space see for -> an : 1
for an explanation -> of : 1
an explanation of -> how : 1
of how and -> are : 1
how and are -> class : 1
and are class -> class : 1
facet for input -> of : 4
for input of -> monetary : 1
for input of -> typename : 1
for input of -> dates : 2
input of monetary -> typename : 1
of monetary typename -> inputiterator : 1
of monetary typename -> outputiterator : 1
monetary typename inputiterator -> class : 1
typename inputiterator class -> public : 4
inputiterator class public -> typedef : 3
inputiterator class public -> public : 1
chart typedef inputiterator -> typedef : 1
chart typedef inputiterator -> explicit : 2
typedef inputiterator typedef -> explicit : 1
inputiterator typedef explicit -> refs : 1
refs bool long -> bool : 1
refs bool long -> double : 1
refs bool long -> unsigned : 1
bool long bool -> static : 1
long bool static -> virtual : 1
bool static virtual -> virtual : 1
virtual bool long -> virtual : 1
bool long virtual -> bool : 1
long virtual bool -> class : 1
virtual bool class -> template : 1
facet for parsing -> monetary : 1
facet for parsing -> and : 2
for parsing monetary -> values : 1
parsing monetary values -> from : 1
monetary values from -> an : 1
values from an -> input : 2
input the and -> instantiations : 1
are and writing -> monetary : 1
and writing monetary -> shows : 1
and writing monetary -> int : 1
and writing monetary -> which : 1
and writing monetary -> earlier : 1
writing monetary shows -> a : 1
monetary shows a -> simple : 1
and and writing -> monetary : 2
writing monetary int -> err : 1
monetary int err -> long : 1
int err long -> double : 1
err long double -> is : 1
long double is -> your : 1
double is your -> hourly : 1
is your hourly -> if : 1
your hourly if -> else : 1
hourly if else -> value : 1
if else value -> make : 1
else value make -> value : 1
value make value -> in : 1
make value in -> a : 1
in a work -> with : 1
a work with -> other : 1
work with other -> the : 1
the public function -> which : 1
the public function -> does : 1
the public function -> is : 1
public function which -> calls : 1
function which calls -> the : 1
calls the description -> below : 1
the description below -> is : 1
description below is -> for : 1
below is for -> the : 1
nonvirtual such long -> following : 1
such long following -> are : 1
long following are -> the : 1
members of characters -> in : 1
range and interprets -> them : 1
and interprets them -> as : 3
interprets them as -> a : 3
them as a -> monetary : 1
them as a -> according : 2
as a monetary -> if : 1
a monetary if -> is : 1
monetary if is -> the : 1
value is parsed -> using : 1
is parsed using -> international : 1
parsed using international -> local : 1
using international local -> format : 1
international local format -> is : 1
local format is -> that : 1
format is that -> the : 1
that the value -> is : 1
value is used -> as : 1
parameter to if -> a : 1
to if a -> valid : 1
if a valid -> monetary : 1
a valid monetary -> value : 1
a valid monetary -> is : 1
valid monetary value -> is : 1
monetary value is -> read : 1
input the integral -> value : 1
integral value is -> stored : 1
value is stored -> in : 2
stored in or -> is : 1
in or is -> formatted : 1
or is formatted -> as : 1
is formatted as -> a : 1
is formatted as -> if : 1
is formatted as -> hexadecimal : 1
the input yields -> the : 1
input yields the -> units : 1
yields the units -> or : 1
the units or -> the : 1
units or the -> digits : 1
or the digits -> the : 1
the digits the -> digit : 1
digits the digit -> string : 1
the digit string -> starts : 1
the digit string -> is : 1
the digit string -> pos : 1
digit string starts -> with : 1
with an optional -> minus : 1
an optional minus -> sign : 1
optional minus sign -> followed : 1
minus sign followed -> by : 1
sign followed by -> digits : 1
followed by digits -> in : 1
by digits in -> which : 1
digits in which -> each : 1
which each character -> is : 1
each character is -> produced : 1
each character is -> converted : 1
character is produced -> by : 1
is produced by -> calling : 1
produced by calling -> a : 1
calling a valid -> sequence : 1
a valid sequence -> is : 1
valid sequence is -> not : 1
not is modified -> to : 1
is modified to -> include : 1
modified to include -> if : 1
to include if -> the : 1
include if the -> end : 1
if the end -> of : 2
input is reached -> without : 1
is reached without -> forming : 1
reached without forming -> a : 1
without forming a -> valid : 1
forming a valid -> monetary : 1
valid monetary is -> also : 1
monetary is also -> the : 1
also the flag -> is : 1
not the currency -> symbol : 1
symbol is it -> is : 1
it is thousands -> if : 1
is thousands if -> the : 1
thousands if the -> local : 1
if the local -> format : 1
the local format -> supports : 1
local format supports -> is : 1
format supports is -> sign : 1
supports is sign -> of : 1
is sign of -> the : 1
result is dictated -> by : 1
dictated by and -> from : 1
last character of -> the : 2
of the monetary -> class : 1
the monetary class -> class : 1
monetary class class -> class : 1
facet for output -> of : 4
for output of -> monetary : 1
for output of -> typename : 1
for output of -> dates : 2
output of monetary -> typename : 1
monetary typename outputiterator -> class : 1
typename outputiterator class -> public : 4
outputiterator class public -> typedef : 4
chart typedef outputiterator -> typedef : 1
chart typedef outputiterator -> explicit : 3
typedef outputiterator typedef -> explicit : 1
outputiterator typedef explicit -> refs : 1
bool long double -> bool : 1
long double bool -> const : 1
double bool const -> static : 1
virtual virtual long -> double : 1
virtual virtual long -> virtual : 1
virtual long double -> virtual : 2
long double virtual -> const : 2
double virtual const -> class : 2
virtual const class -> template : 2
facet for formatting -> and : 4
formatting and printing -> monetary : 1
and printing monetary -> see : 1
printing monetary see -> and : 1
monetary see and -> writing : 1
see and writing -> monetary : 1
writing monetary which -> shows : 1
monetary which shows -> how : 1
are with other -> the : 4
members of const -> a : 1
of const a -> monetary : 1
const a monetary -> value : 1
a monetary value -> and : 1
a monetary value -> must : 1
monetary value and -> writes : 1
value and writes -> the : 2
writes the formatted -> characters : 3
the formatted characters -> to : 3
the formatted characters -> are : 1
formatted characters to -> the : 3
value to format -> is : 1
format is either -> an : 1
is either an -> or : 1
either an or -> a : 1
string of digit -> characters : 1
of digit characters -> in : 1
digit characters in -> if : 1
characters in if -> the : 1
first character of -> digits : 1
first character of -> the : 3
character of digits -> is : 1
of digits is -> the : 1
of digits is -> a : 1
digits is the -> remaining : 1
is the remaining -> digits : 1
the remaining digits -> are : 1
remaining digits are -> interpreted : 1
digits are interpreted -> as : 1
as a negative -> formatting : 1
a negative formatting -> pattern : 1
negative formatting pattern -> and : 1
formatting pattern and -> punctuation : 1
pattern and punctuation -> characters : 1
and punctuation characters -> are : 1
punctuation characters are -> obtained : 1
characters are obtained -> from : 1
are obtained from -> the : 1
the for positive -> is : 1
for positive is -> for : 1
positive is for -> negative : 1
is for negative -> is : 1
for negative is -> the : 1
negative is the -> pattern : 1
is the pattern -> dictates : 1
the pattern dictates -> the : 1
pattern dictates the -> output : 1
dictates the output -> later : 1
the output later -> in : 1
output later in -> this : 1
section for information -> on : 1
on the currency -> symbol : 1
symbol is printed -> only : 1
is printed only -> if : 1
printed only if -> the : 1
set is thousands -> separators : 1
is thousands separators -> and : 1
thousands separators and -> a : 1
separators and a -> decimal : 1
and a decimal -> point : 2
decimal point are -> inserted : 1
point are inserted -> at : 1
at the appropriate -> places : 1
the appropriate places -> in : 1
appropriate places in -> the : 1
in the formatted -> characters : 1
formatted characters are -> inserted : 1
characters are inserted -> until : 2
characters are inserted -> where : 1
characters are inserted -> at : 2
characters are inserted -> after : 1
are inserted until -> the : 2
inserted until the -> formatted : 2
until the formatted -> width : 2
the formatted width -> is : 2
formatted width is -> the : 2
width is the -> flag : 2
is the flag -> dictates : 2
the flag dictates -> how : 2
flag dictates how -> fill : 1
flag dictates how -> characters : 1
dictates how fill -> characters : 1
how fill characters -> are : 1
fill characters are -> that : 1
fill characters are -> added : 1
characters are that -> is : 2
are that is -> and : 2
are that is -> unlike : 1
that is and -> if : 2
it is equal -> characters : 2
is equal characters -> are : 2
equal characters are -> inserted : 2
are inserted where -> the : 1
inserted where the -> pattern : 1
where the pattern -> is : 1
the pattern is -> or : 1
pattern is or -> characters : 1
is or characters -> are : 1
or characters are -> appended : 1
of the formatted -> of : 1
of the formatted -> is : 2
of the formatted -> if : 1
of the formatted -> other : 1
the formatted of -> the : 1
formatted of the -> characters : 1
the formatted is -> called : 2
formatted is called -> to : 2
called to reset -> the : 2
to reset the -> field : 2
reset the field -> width : 2
field width to -> the : 2
the last output -> class : 2
last output class -> class : 2
facet for punctuation -> of : 4
for punctuation of -> monetary : 2
for punctuation of -> class : 2
punctuation of monetary -> bool : 2
of monetary bool -> international : 1
of monetary bool -> intl : 1
monetary bool international -> class : 1
bool international class -> public : 1
international class public -> public : 1
explicit refs chart -> chart : 1
refs chart chart -> string : 1
chart chart string -> int : 1
chart string int -> pattern : 1
string int pattern -> pattern : 1
int pattern pattern -> static : 1
pattern pattern static -> static : 1
pattern static static -> const : 1
static static const -> bool : 1
const bool virtual -> virtual : 1
bool virtual virtual -> chart : 1
virtual virtual chart -> virtual : 1
chart virtual chart -> virtual : 1
chart virtual string -> virtual : 1
virtual string virtual -> virtual : 2
string virtual virtual -> virtual : 1
string virtual virtual -> class : 1
int virtual pattern -> virtual : 1
virtual pattern virtual -> pattern : 1
pattern virtual pattern -> class : 1
virtual pattern class -> template : 1
pattern class template -> is : 1
facet that describes -> the : 1
describes the punctuation -> characters : 1
characters used to -> format : 1
format a monetary -> and : 1
format a monetary -> the : 1
a monetary and -> instantiations : 1
monetary and instantiations -> are : 1
instantiations are for -> the : 1
parameter to obtain -> an : 1
to obtain an -> international : 1
obtain an international -> or : 1
an international or -> to : 1
international or to -> obtain : 1
or to obtain -> a : 1
obtain a local -> in : 1
a local in -> an : 1
local in an -> international : 1
in an international -> the : 1
an international the -> currency : 1
international the currency -> symbol : 1
symbol is always -> four : 1
is always four -> usually : 1
always four usually -> three : 1
four usually three -> characters : 1
usually three characters -> followed : 1
three characters followed -> by : 1
a and facets -> use : 1
and facets use -> a : 1
and facets use -> the : 1
facets use a -> pattern : 1
use a pattern -> to : 1
a pattern to -> parse : 1
pattern to parse -> or : 1
to parse or -> format : 1
parse or format -> a : 1
or format a -> monetary : 1
a monetary the -> pattern : 1
monetary the pattern -> specifies : 1
the pattern specifies -> the : 1
pattern specifies the -> order : 1
specifies the order -> in : 1
in which parts -> of : 1
which parts of -> a : 1
of a monetary -> value : 1
monetary value must -> each : 1
value must each -> pattern : 1
must each pattern -> has : 1
each pattern has -> four : 1
pattern has four -> in : 1
has four in -> which : 1
four in which -> each : 1
which each field -> has : 1
each field has -> type : 1
field has type -> to : 1
has type to -> the : 1
and parts must -> appear : 1
parts must appear -> exactly : 1
must appear exactly -> and : 1
appear exactly and -> the : 1
exactly and the -> remaining : 1
the remaining field -> must : 1
remaining field must -> be : 1
field must be -> or : 1
must be or -> the : 1
must be or -> a : 1
the value cannot -> be : 1
value cannot be -> first : 1
be first cannot -> be : 1
first cannot be -> first : 1
be first or -> last : 1
first or last -> appears : 1
or last appears -> in : 1
last appears in -> the : 1
the sign string -> or : 1
the sign string -> appear : 1
sign string or -> is : 1
string or is -> and : 1
the remaining characters -> of : 1
remaining characters of -> the : 1
characters of the -> sign : 1
characters of the -> original : 1
characters of the -> arrays : 1
characters of the -> length : 1
sign string appear -> at : 1
string appear at -> the : 1
the formatted if -> returns : 1
formatted if returns -> the : 1
if returns the -> value : 1
the value might -> be : 1
might be formatted -> as : 1
be formatted as -> with : 1
formatted as with -> other : 1
as with other -> the : 1
as with other -> formatted : 1
the currency such -> as : 1
currency such as -> is : 1
as is used -> by : 1
used by some -> or : 1
by some or -> is : 1
some or is -> the : 1
is the international -> currency : 1
symbol for in -> the : 1
the the currency -> symbol : 1
symbol is or -> the : 1
or the character -> used : 3
the character used -> before : 1
the character used -> to : 2
character used before -> the : 1
used before the -> fractional : 1
before the fractional -> part : 1
the fractional part -> when : 1
fractional part when -> is : 1
part when is -> greater : 1
when is greater -> than : 1
than for in -> the : 1
is typically and -> in : 3
and in it -> is : 2
in it is -> typically : 1
in it is -> often : 1
is typically in -> the : 2
is typically in -> locales : 1
typically in the -> the : 2
the the decimal -> point : 2
point is or -> the : 2
or the number -> of : 2
digits to print -> after : 1
to print after -> the : 1
print after the -> decimal : 1
the decimal this -> value : 1
decimal this value -> can : 1
this value can -> be : 1
digits is a -> string : 1
string that specifies -> the : 2
specifies the positions -> of : 2
the positions of -> thousands : 2
positions of thousands -> the : 2
of thousands the -> string : 2
thousands the string -> is : 2
string is interpreted -> as : 3
as a vector -> of : 2
vector of in -> which : 2
which each value -> is : 2
each value is -> a : 2
is a number -> of : 2
of starting from -> the : 2
the the string -> means : 2
the the string -> grows : 1
the string means -> every : 2
string means every -> three : 2
means every three -> digits : 2
every three digits -> form : 2
three digits form -> a : 2
digits form a -> in : 2
form a in -> the : 2
the the grouping -> is : 2
grouping is or -> the : 2
or the pattern -> used : 2
the pattern used -> to : 2
pattern used to -> format : 2
to format negative -> in : 1
format negative in -> the : 1
negative in the -> the : 1
the the negative -> format : 1
the the negative -> sign : 1
the negative format -> is : 1
negative format is -> the : 1
format is the -> string : 2
format is the -> flags : 1
is the string -> may : 2
the string may -> be : 2
string may be -> used : 2
may be used -> to : 2
used to identify -> negative : 1
used to identify -> positive : 1
to identify negative -> the : 1
identify negative the -> position : 1
negative the position -> of : 1
sign is dictated -> by : 2
by the in -> the : 2
the negative sign -> is : 1
negative sign is -> or : 1
sign is or -> the : 2
to format positive -> in : 1
format positive in -> the : 1
positive in the -> the : 1
the the positive -> format : 1
the the positive -> sign : 1
the positive format -> is : 1
positive format is -> the : 1
to identify positive -> the : 1
identify positive the -> position : 1
positive the position -> of : 1
the positive sign -> is : 1
positive sign is -> or : 1
character used to -> separate : 2
used to separate -> groups : 1
used to separate -> digit : 1
to separate groups -> of : 1
separate groups of -> in : 1
groups of in -> which : 1
which the groups -> are : 1
the groups are -> specified : 1
groups are specified -> by : 1
are specified by -> in : 1
specified by in -> the : 1
by in the -> the : 1
the the separator -> is : 1
the separator is -> typically : 1
separator is typically -> and : 1
is often in -> the : 1
often in the -> the : 1
the the thousands -> separator : 2
separator is or -> class : 1
separator is or -> the : 1
is or class -> class : 2
monetary bool intl -> class : 1
bool intl class -> public : 1
intl class public -> typedef : 1
as in moneypunct -> class : 1
in moneypunct class -> template : 1
moneypunct class template -> provides : 1
class template provides -> formatting : 1
class template provides -> a : 1
template provides formatting -> characters : 1
provides formatting characters -> and : 1
formatting characters and -> information : 1
characters and information -> for : 1
and information for -> monetary : 1
information for monetary -> values : 1
for monetary values -> using : 1
monetary values using -> the : 1
input of typename -> inputiterator : 1
typedef inputiterator explicit -> refs : 3
inputiterator explicit refs -> unsigned : 1
inputiterator explicit refs -> dateorder : 1
inputiterator explicit refs -> same : 1
explicit refs unsigned -> unsigned : 1
refs unsigned unsigned -> unsigned : 1
unsigned unsigned unsigned -> long : 1
unsigned unsigned long -> static : 1
unsigned long static -> virtual : 1
long static virtual -> virtual : 1
virtual virtual unsigned -> virtual : 1
virtual unsigned virtual -> unsigned : 2
virtual unsigned virtual -> virtual : 1
virtual unsigned virtual -> double : 1
unsigned virtual unsigned -> virtual : 2
unsigned virtual virtual -> virtual : 1
virtual long virtual -> class : 1
virtual long virtual -> unsigned : 1
long virtual class -> template : 1
for parsing and -> reading : 2
parsing and reading -> numeric : 1
parsing and reading -> dates : 1
and reading numeric -> values : 1
reading numeric values -> from : 1
numeric values from -> an : 1
input the extraction -> operators : 1
the extraction operators -> use : 1
extraction operators use -> the : 1
operators use the -> and : 2
of a which -> can : 1
a which can -> be : 3
as a number -> or : 1
number or as -> a : 1
the function first -> tests : 1
function first tests -> the : 1
first tests the -> that : 1
tests the that -> if : 1
is a numeric -> value : 1
a numeric value -> is : 1
numeric value is -> if : 1
numeric value is -> is : 1
numeric value is -> stored : 1
string is read -> from : 1
read from is -> the : 1
input is interpreted -> as : 1
if the numeric -> value : 1
is assigned if -> the : 1
assigned if the -> value : 1
is assigned is -> set : 1
assigned is set -> in : 1
set in and -> is : 2
not is characters -> are : 1
read from until -> one : 1
from until one -> of : 1
until one of -> the : 2
the following input -> matches : 1
following input matches -> from : 1
input matches from -> the : 1
matches from the -> is : 1
the is assigned -> and : 1
is assigned and -> is : 2
assigned and is -> assigned : 2
and is assigned -> a : 1
and is assigned -> in : 1
and is assigned -> return : 1
and is assigned -> the : 1
assigned a match -> is : 1
match is determined -> by : 1
by the shortest -> input : 1
the shortest input -> sequence : 1
shortest input sequence -> that : 1
input sequence that -> uniquely : 1
sequence that uniquely -> matches : 1
that uniquely matches -> or : 1
uniquely matches or -> input : 1
matches or input -> matches : 1
or input matches -> is : 1
input matches is -> assigned : 1
matches is assigned -> and : 1
is assigned in -> which : 1
assigned in which -> case : 1
case is set -> in : 1
set in input -> does : 1
in input does -> not : 1
input does not -> match : 1
not match or -> is : 1
match or is -> set : 1
or is set -> in : 1
set in a -> single : 1
single the function -> is : 1
function is overloaded -> for : 1
is overloaded for -> most : 1
overloaded for most -> of : 1
for most of -> the : 2
the fundamental the -> behavior : 1
fundamental the behavior -> of : 1
behavior of each -> function : 1
each function is -> essentially : 1
function is essentially -> the : 1
is essentially the -> same : 1
essentially the same -> for : 1
the version described -> and : 1
version described and -> depends : 1
described and depends -> on : 1
and depends on -> the : 1
and the both -> facets : 1
the both facets -> are : 1
both facets are -> obtained : 1
facets are obtained -> for : 1
are obtained for -> the : 1
obtained for the -> locale : 1
for the locale -> input : 1
the locale input -> characters : 1
locale input characters -> are : 1
input characters are -> collected : 1
characters are collected -> from : 1
are collected from -> the : 1
collected from the -> range : 1
range or until -> the : 1
or until the -> input : 1
until the input -> character : 1
is not part -> of : 1
of a valid -> number : 1
a valid number -> according : 1
valid number according -> to : 1
number according to -> the : 1
to the flags -> and : 1
flags and a -> decimal : 1
point is replaced -> with : 1
the character thousands -> separators : 1
character thousands separators -> are : 1
separators are read -> but : 1
are read but -> not : 1
read but not -> checked : 1
but not checked -> for : 1
not checked for -> valid : 1
checked for valid -> positions : 1
for valid positions -> until : 1
valid positions until -> after : 1
positions until after -> the : 1
until after the -> entire : 1
after the entire -> number : 1
the entire number -> has : 1
entire number has -> been : 1
number has been -> the : 1
been the set -> of : 1
set of valid -> characters : 1
of valid characters -> depends : 1
valid characters depends -> on : 1
type of and -> the : 1
the in particular -> the : 1
particular the if -> is : 1
if is hexadecimal -> characters : 1
is hexadecimal characters -> are : 1
hexadecimal characters are -> if : 1
characters are if -> it : 1
are if it -> is : 1
is only octal -> characters : 1
only octal characters -> are : 1
octal characters are -> read : 1
are read if -> the : 1
read if the -> is : 1
is the prefix -> determines : 1
the prefix determines -> the : 1
prefix determines the -> or : 1
determines the or -> for : 1
for and anything -> else : 1
else for numbers -> can : 1
for numbers can -> use : 1
numbers can use -> fixed : 1
can use fixed -> or : 1
use fixed or -> exponential : 1
or exponential regardless -> of : 1
exponential regardless of -> the : 1
no is of -> type : 1
type the format -> is : 1
the format is -> in : 1
the format is -> an : 1
the format is -> the : 1
format is in -> the : 1
as the format -> for : 1
the format for -> all : 1
format for all -> the : 1
all the valid -> characters : 1
the valid characters -> have : 1
valid characters have -> been : 1
have been they -> are : 1
been they are -> interpreted : 1
they are interpreted -> as : 1
as a numeric -> if : 1
a numeric if -> the : 1
numeric if the -> string : 1
if the string -> is : 3
string is or -> if : 1
if the thousands -> groupings : 1
the thousands groupings -> are : 1
thousands groupings are -> is : 1
groupings are is -> set : 1
are is set -> in : 1
string is its -> numeric : 1
is its numeric -> value : 1
its numeric value -> is : 1
stored in and -> is : 1
the entire input -> stream : 1
entire input stream -> is : 1
input stream is -> read : 1
stream is read -> to : 1
is read to -> is : 1
read to is -> set : 1
to is set -> in : 1
to is set -> to : 2
set in class -> class : 1
output of typename -> outputiterator : 1
of typename outputiterator -> class : 1
typedef outputiterator explicit -> refs : 3
outputiterator explicit refs -> bool : 1
outputiterator explicit refs -> const : 1
outputiterator explicit refs -> same : 1
bool long unsigned -> long : 1
long unsigned long -> double : 1
long unsigned long -> i : 1
unsigned long double -> long : 1
long double const -> static : 1
double const static -> virtual : 1
bool virtual long -> virtual : 1
long virtual unsigned -> virtual : 1
unsigned virtual double -> virtual : 1
virtual double virtual -> long : 1
double virtual long -> double : 1
formatting and outputing -> a : 1
and outputing a -> numeric : 1
outputing a numeric -> the : 1
a numeric the -> output : 1
numeric the output -> operators : 1
the output operators -> use : 1
output operators use -> the : 1
flag is that -> is : 1
is the integer -> value : 1
of is written -> as : 1
written as a -> if : 2
a if is -> is : 2
is is written -> as : 1
is is written -> using : 1
using the for -> n : 1
the for n -> s : 1
for n s -> v : 1
n s v -> write : 1
s v write -> characters : 1
v write characters -> of : 1
write characters of -> s : 1
characters of s -> to : 1
of s to -> as : 1
s to as -> a : 1
to as a -> string : 1
string and writes -> the : 1
the string contents -> to : 1
the string contents -> by : 1
string contents to -> using : 1
contents to using -> the : 1
the flags of -> to : 1
flags of to -> control : 1
of to control -> the : 1
control the formatting -> and : 1
and the imbued -> locale : 1
imbued locale of -> to : 1
locale of to -> obtain : 1
of to obtain -> the : 1
obtain the and -> facets : 1
and facets for -> punctuation : 1
facets for punctuation -> rules : 1
for punctuation rules -> and : 1
punctuation rules and -> the : 1
rules and the -> format : 1
the format also -> depends : 1
format also depends -> on : 1
also depends on -> types : 1
depends on types -> format : 1
on types format -> depends : 1
types format depends -> on : 2
format depends on -> the : 2
on the flags -> if : 2
the flags if -> the : 2
flags if the -> number : 1
flags if the -> format : 1
if the number -> is : 3
number is formatted -> as : 2
formatted as if -> the : 1
formatted as hexadecimal -> for : 1
as hexadecimal for -> the : 1
hexadecimal for the -> digits : 1
hexadecimal for the -> sake : 1
for the digits -> or : 1
the digits or -> if : 1
digits or if -> the : 1
flag is or -> else : 1
else the number -> is : 1
number is if -> the : 1
a prefix is -> for : 1
prefix is for -> or : 1
for or or -> for : 1
for hexadecimal on -> the : 1
hexadecimal on the -> types : 1
the types format -> depends : 1
if the format -> is : 2
a decimal and -> a : 1
decimal and a -> fractional : 1
and a fractional -> if : 1
a fractional if -> the : 1
fractional if the -> format : 1
is the flags -> do : 1
the flags do -> not : 1
flags do not -> indicate : 1
do not indicate -> or : 1
not indicate or -> the : 1
indicate or the -> general : 1
or the general -> format : 1
the general format -> is : 1
general format is -> exponential : 1
format is exponential -> if : 1
is exponential if -> the : 1
exponential if the -> exponent : 1
is or less -> or : 1
or less or -> greater : 1
less or greater -> than : 1
than the precision -> of : 1
precision of places -> after : 1
of places after -> the : 1
places after the -> decimal : 1
the decimal or -> fixed : 1
decimal or fixed -> trailing : 1
or fixed trailing -> zeros : 1
fixed trailing zeros -> are : 1
zeros are as -> is : 1
are as is -> the : 1
is the decimal -> point : 2
decimal point if -> would : 1
point if would -> be : 1
if would be -> the : 1
the the flag -> is : 1
flag is the -> exponent : 1
flag is the -> decimal : 1
flag is the -> freeze : 1
flag is the -> array : 1
is the exponent -> is : 1
by or else -> by : 1
or else by -> if : 1
else by if -> the : 1
point is always -> output : 1
is always output -> format : 1
always output format -> for : 1
output format for -> a : 1
format for a -> pointer : 1
pointer is the -> number : 1
pointer is the -> operator : 2
number is it -> is : 1
it is prefaced -> with : 1
prefaced with a -> minus : 1
with a minus -> sign : 1
a minus sign -> if : 1
minus sign if -> the : 1
sign if the -> number : 1
number is no -> sign : 1
is no sign -> is : 1
no sign is -> output : 1
sign is output -> unless : 1
is output unless -> the : 1
output unless the -> flag : 1
unless the flag -> is : 1
flag is in -> which : 1
which case a -> positive : 1
case a positive -> sign : 1
a positive sign -> appears : 1
positive sign appears -> at : 1
sign appears at -> the : 1
appears at the -> start : 1
the a decimal -> point : 1
character is it -> is : 1
it is obtained -> from : 1
from the integers -> have : 1
the integers have -> thousands : 1
integers have thousands -> separators : 1
have thousands separators -> inserted : 1
thousands separators inserted -> according : 1
separators inserted according -> to : 1
inserted according to -> the : 1
for more characters -> are : 1
more characters are -> inserted : 1
dictates how characters -> are : 1
how characters are -> that : 1
are inserted after -> a : 1
inserted after a -> sign : 1
a sign if -> there : 1
sign if there -> is : 1
is no after -> a : 1
no after a -> leading : 1
after a leading -> or : 1
leading or or -> else : 1
or or else -> at : 1
or else at -> the : 1
else at the -> start : 1
the formatted other -> characters : 1
formatted other characters -> are : 1
other characters are -> inserted : 1
punctuation of class -> public : 2
of class public -> typedef : 1
of class public -> this : 1
explicit refs string -> static : 1
refs string static -> virtual : 1
string static virtual -> virtual : 1
virtual virtual string -> virtual : 1
virtual virtual class -> template : 2
facet for numeric -> formatting : 2
for numeric formatting -> and : 2
numeric formatting and -> the : 1
numeric formatting and -> it : 1
facets use the -> and : 1
decimal point which -> is : 1
point which is -> typically : 1
typically in locales -> and : 1
in locales and -> in : 1
locales and in -> european : 1
and in european -> in : 1
and in european -> it : 1
in european in -> the : 1
european in the -> the : 1
or the textual -> representation : 2
the textual representation -> for : 2
textual representation for -> the : 2
representation for the -> value : 2
the standard instantiations -> and : 2
standard instantiations and -> the : 2
instantiations and the -> value : 2
to separate digit -> earlier : 1
separate digit earlier -> in : 1
digit earlier in -> this : 1
this in this -> is : 1
in european it -> is : 1
european it is -> typically : 1
class public this -> class : 1
public this class -> is : 1
this class is -> specialized : 1
class is specialized -> for : 1
specialized for char -> and : 1
for char and -> typedef : 1
char and typedef -> chart : 1
and typedef chart -> typedef : 1
as in numpunct -> class : 1
in numpunct class -> template : 1
numpunct class template -> is : 1
formatting and it -> uses : 1
and it uses -> the : 1
uses the rules -> of : 1
class for time -> enum : 1
for time enum -> ydm : 1
time enum ydm -> class : 1
enum ydm class -> is : 1
ydm class is -> a : 1
declares the see -> for : 1
input of dates -> and : 2
of dates and -> typename : 4
dates and typename -> inputiterator : 2
dates and typename -> outputiterator : 2
and typename inputiterator -> class : 2
explicit refs dateorder -> static : 1
refs dateorder static -> virtual : 1
dateorder static virtual -> virtual : 1
virtual virtual dateorder -> virtual : 1
virtual dateorder virtual -> virtual : 1
dateorder virtual virtual -> virtual : 1
and reading dates -> and : 1
reading dates and -> times : 2
and times from -> an : 2
times from an -> input : 2
input the components -> of : 1
the components of -> the : 1
components of the -> date : 1
and time value -> are : 1
time value are -> stored : 1
value are stored -> in : 1
instantiations are of -> the : 1
an parameter in -> much : 1
parameter in much -> the : 1
in much the -> same : 1
much the same -> way : 1
same way other -> facets : 1
way other facets -> and : 1
facets and their -> functions : 1
and their functions -> unlike : 1
their functions unlike -> other : 1
functions unlike other -> the : 1
unlike other the -> functions : 1
unlike other the -> public : 1
other the functions -> do : 1
the functions do -> not : 2
do not set -> to : 1
do not set -> if : 1
set to upon -> they : 1
to upon they -> only : 1
upon they only -> set : 1
they only set -> for : 1
only set for -> an : 1
set for an -> they : 1
for an they -> do : 1
an they do -> not : 1
not set if -> the : 1
set if the -> end : 1
set if the -> input : 1
set if the -> corresponding : 1
sequence is of -> the : 1
is of the -> functions : 1
functions take a -> which : 1
take a which -> is : 1
which is filled -> in : 1
is filled in -> with : 1
filled in with -> the : 1
in with the -> relevant : 1
with the relevant -> parts : 1
the relevant parts -> of : 1
relevant parts of -> the : 1
date and if -> a : 1
and if a -> function : 1
function the state -> of : 1
state of the -> object : 1
object is with -> other : 1
is with other -> the : 1
of the order -> in : 1
which the and -> year : 1
the and year -> appear : 1
and year appear -> in : 1
year appear in -> a : 1
in a if -> the : 1
the formatted date -> includes : 1
formatted date includes -> additional : 1
date includes additional -> the : 1
includes additional the -> return : 1
additional the return -> value : 1
is see the -> class : 1
is see the -> header : 1
for the declaration -> of : 1
the characters from -> and : 1
the characters from -> the : 1
as a according -> to : 2
a according to -> the : 2
to the format -> of : 2
format of using -> the : 2
the the time -> elements : 1
the time elements -> are : 1
time elements are -> stored : 1
is the state -> of : 5
state of members -> is : 5
of members is -> and : 5
members is and -> is : 5
one past where -> the : 5
past where the -> input : 5
where the input -> characters : 4
where the input -> class : 1
input characters from -> and : 1
input characters from -> until : 3
the the date -> elements : 1
the date elements -> are : 1
date elements are -> stored : 3
characters from until -> it : 3
from until it -> reads : 3
until it reads -> the : 2
until it reads -> a : 1
it reads the -> name : 2
reads the name -> of : 2
of a day -> of : 1
a day of -> the : 1
the either abbreviated -> or : 1
either abbreviated or -> spelled : 2
abbreviated or spelled -> the : 2
or spelled the -> appropriate : 2
spelled the appropriate -> date : 2
the appropriate date -> elements : 2
appropriate date elements -> are : 2
of a either -> abbreviated : 1
a either abbreviated -> or : 1
it reads a -> it : 1
reads a it -> is : 1
implementation to determine -> whether : 1
determine whether years -> are : 1
whether years are -> and : 1
years are and -> if : 1
and if which -> century : 1
if which century -> to : 1
which century to -> apply : 1
century to apply -> to : 1
to apply to -> the : 1
to the abbreviated -> the : 1
the abbreviated the -> member : 1
abbreviated the member -> is : 1
member is set -> if : 1
is set if -> the : 1
is set if -> is : 4
the input class -> class : 1
input class class -> class : 1
input class class -> operator : 1
typedef typedef inputiterator -> explicit : 1
in class template -> is : 2
facet for reading -> dates : 1
for reading dates -> and : 1
stream using a -> named : 1
output of dates -> and : 2
and typename outputiterator -> class : 2
explicit refs const -> const : 1
refs const const -> const : 1
char char modifier -> static : 1
char char modifier -> const : 1
char modifier static -> virtual : 1
modifier static virtual -> virtual : 1
virtual const char -> char : 1
char char class -> template : 1
formatting and writing -> dates : 2
and writing dates -> and : 2
writing dates and -> the : 1
writing dates and -> times : 1
instantiations are that -> is : 1
that is unlike -> other : 1
is unlike other -> the : 1
public function does -> not : 1
does not always -> directly : 1
not always directly -> call : 1
always directly call -> here : 1
directly call here -> are : 1
call here are -> the : 1
here are the -> complete : 1
are the complete -> descriptions : 1
the complete descriptions -> of : 1
descriptions of and -> const : 1
of and const -> const : 1
and const const -> const : 1
const the pattern -> in : 1
the pattern in -> and : 1
pattern in and -> writes : 1
and writes formatted -> date : 1
writes formatted date -> and : 1
formatted date and -> time : 1
and time information -> to : 1
and time information -> is : 1
time information to -> the : 1
to the pattern -> contains : 1
the pattern contains -> ordinary : 1
pattern contains ordinary -> characters : 1
contains ordinary characters -> are : 1
ordinary characters are -> written : 1
are written directly -> to : 1
directly to interspersed -> with : 1
to interspersed with -> format : 1
interspersed with format -> a : 1
with format a -> format : 1
format a format -> specifier : 1
a format specifier -> starts : 1
a format specifier -> the : 1
format specifier starts -> with : 1
specifier starts with -> and : 1
starts with and -> is : 1
with and is -> followed : 1
an optional modifier -> which : 1
optional modifier which -> is : 1
modifier which is -> followed : 1
is followed in -> turn : 1
followed in turn -> by : 1
in turn by -> a : 1
turn by a -> format : 1
by a format -> specifier : 1
format specifier the -> function : 1
specifier the function -> checks : 1
the function checks -> format : 1
function checks format -> characters : 1
checks format characters -> by : 1
format characters by -> first : 1
characters by first -> calling : 1
by first calling -> from : 1
first calling from -> the : 1
calling from the -> then : 1
from the then -> checking : 1
the then checking -> the : 1
then checking the -> narrowed : 1
checking the narrowed -> each : 1
the narrowed each -> format : 1
narrowed each format -> calls : 1
each format calls -> in : 1
format calls in -> which : 1
calls in which -> is : 1
is the format -> specifier : 1
the format specifier -> and : 1
format specifier and -> is : 1
specifier and is -> the : 1
is the modifier -> character : 1
the modifier character -> or : 1
modifier character or -> if : 1
character or if -> no : 1
character or if -> the : 1
if no modifier -> is : 1
no modifier is -> with : 1
modifier is with -> no : 1
no use of -> modifier : 1
no use of -> is : 1
use of modifier -> characters : 1
of modifier characters -> is : 1
modifier characters is -> the : 1
characters is the -> standard : 1
characters is the -> smaller : 1
define any see -> the : 1
see the member -> function : 1
for more const -> char : 1
more const char -> char : 1
char modifier const -> char : 1
modifier const char -> char : 1
char char a -> single : 1
char a single -> date : 1
a single date -> or : 1
single date or -> time : 1
date or time -> element : 1
or time element -> and : 1
time element and -> writes : 1
element and writes -> the : 1
the character specifies -> what : 1
character specifies what -> to : 1
specifies what to -> output : 1
what to output -> shown : 1
to output shown -> in : 1
output shown in -> specifiers : 1
for the date -> and : 1
time information is -> obtained : 1
information is obtained -> from : 1
obtained from unlike -> some : 1
from unlike some -> of : 1
unlike some of -> the : 1
the other output -> does : 1
other output does -> not : 1
output does not -> use : 1
not use flags -> or : 1
use flags or -> field : 1
flags or field -> the : 1
or field the -> parameter : 1
field the parameter -> is : 1
parameter is used -> by : 1
used by specifiers -> for : 1
by specifiers for -> specifiers : 1
is solid with -> no : 1
standard recommends the -> use : 1
recommends the use -> of : 1
use of posix -> which : 1
of posix which -> are : 1
posix which are -> and : 1
which are and -> these : 1
are and these -> modifiers : 1
and these modifiers -> request : 1
these modifiers request -> the : 1
modifiers request the -> use : 1
request the use -> of : 2
use of an -> alternative : 1
of an alternative -> format : 1
an alternative format -> if : 1
alternative format if -> the : 1
format if the -> locale : 1
format if the -> formatting : 1
locale has the -> modifier : 1
has the modifier -> applies : 1
the modifier applies -> to : 2
modifier applies to -> certain : 2
applies to certain -> format : 2
to certain format -> specifiers : 2
certain format specifiers -> to : 2
format specifiers to -> request : 2
specifiers to request -> an : 1
specifiers to request -> the : 1
to request an -> alternative : 1
request an alternative -> representation : 1
an alternative representation -> for : 1
alternative representation for -> dates : 1
representation for dates -> and : 1
for dates and -> the : 1
and the modifier -> applies : 1
to request the -> use : 1
use of alternative -> numeric : 1
of alternative numeric -> if : 1
alternative numeric if -> a : 1
numeric if a -> locale : 1
if a locale -> cannot : 1
a locale cannot -> honor : 1
locale cannot honor -> the : 1
cannot honor the -> modified : 1
honor the modified -> it : 1
the modified it -> uses : 1
modified it uses -> the : 1
uses the unmodified -> format : 1
the unmodified format -> class : 1
unmodified format class -> class : 1
format class class -> class : 1
and times using -> a : 1
times using a -> named : 1
template converts a -> character : 2
character to lowercase -> in : 1
character to lowercase -> using : 1
to lowercase in -> a : 1
in a chart -> const : 2
a chart const -> function : 2
a chart const -> inputiterator : 1
chart const function -> converts : 2
converts the character -> to : 2
the character to -> lowercase : 1
the character to -> uppercase : 1
the character to -> the : 1
to lowercase using -> the : 1
lowercase using the -> locale : 1
using the locale -> class : 2
locale class class -> function : 2
character to uppercase -> in : 1
character to uppercase -> using : 1
to uppercase in -> a : 1
to uppercase using -> the : 1
uppercase using the -> locale : 1
function template obtains -> a : 1
template obtains a -> facet : 1
obtains a facet -> from : 1
a facet from -> locale : 1
facet from locale -> see : 1
from locale see -> whether : 1
locale see whether -> a : 1
see whether a -> locale : 1
supports a and -> and : 1
a and and -> writing : 1
writing monetary earlier -> in : 1
monetary earlier in -> this : 1
in this function -> function : 1
this function function -> header : 1
function header is -> one : 1
class templates and -> a : 2
class templates and -> functions : 1
templates and a -> few : 2
operate on and -> is : 1
operate on and -> set : 1
on and is -> a : 1
is a container -> that : 2
keys and looking -> up : 1
and looking up -> inserting : 1
looking up inserting -> and : 2
up inserting and -> deleting : 2
and deleting keys -> can : 2
deleting keys can -> all : 2
keys can all -> be : 2
can all be -> performed : 2
can all be -> null : 1
all be performed -> in : 2
be performed in -> logarithmic : 2
performed in logarithmic -> or : 2
in logarithmic or -> better : 2
logarithmic or better -> maps : 1
logarithmic or better -> sets : 1
or better maps -> support : 1
better maps support -> bidirectional : 1
maps support bidirectional -> iterators : 1
support bidirectional iterators -> random : 2
bidirectional iterators random -> in : 1
bidirectional iterators random -> and : 1
iterators random in -> other : 1
random in other -> languages : 1
in other languages -> and : 1
other languages and -> maps : 1
languages and maps -> are : 1
and maps are -> also : 1
maps are also -> called : 1
are also called -> dictionaries : 1
also called dictionaries -> and : 1
called dictionaries and -> associative : 1
dictionaries and associative -> and : 1
and associative and -> for : 1
associative and for -> information : 1
about see the -> section : 1
the section later -> in : 1
class template associative -> map : 2
template associative map -> container : 2
associative map container -> with : 2
map container with -> unique : 1
map container with -> duplicate : 1
container with unique -> typename : 2
with unique typename -> typename : 1
with unique typename -> compare : 1
unique typename typename -> compare : 1
typename typename compare -> typename : 1
typename compare typename -> alloc : 3
compare typename alloc -> class : 3
class typedef key -> typedef : 4
typedef key typedef -> t : 2
typedef key typedef -> key : 2
typedef key typedef -> compare : 2
key typedef t -> typedef : 2
typedef typedef compare -> typedef : 2
typedef compare typedef -> alloc : 4
typedef compare typedef -> compare : 2
compare typedef alloc -> typedef : 4
typedef class public -> friend : 2
friend class compare -> bool : 2
class compare bool -> const : 2
compare bool const -> const : 2
bool const const -> return : 2
bool const const -> bool : 6
const return explicit -> comp : 2
return explicit comp -> const : 2
explicit comp const -> template : 4
comp const template -> inputiterator : 4
inputiterator const comp -> const : 4
const comp const -> iterators : 3
const comp const -> iterator : 1
comp const iterators -> iterator : 3
capacity bool element -> access : 1
bool element access -> modifiers : 1
bool element access -> reference : 1
element access modifiers -> iterator : 1
access modifiers iterator -> const : 1
modifiers iterator const -> template : 1
iterator const template -> void : 4
void void observers -> map : 2
void void observers -> set : 1
void observers map -> operations : 2
observers map operations -> iterator : 2
map operations iterator -> iterator : 2
operations iterator iterator -> iterator : 3
iterator iterator class -> template : 4
iterator class template -> represents : 2
iterator class template -> is : 2
represents a map -> a : 1
represents a map -> container : 1
a map a -> map : 1
map a map -> stores : 1
a map stores -> pairs : 2
map stores pairs -> of : 2
pairs of unique -> keys : 1
of unique keys -> and : 1
of unique keys -> of : 1
unique keys and -> associated : 1
and associated in -> which : 2
associated in which -> the : 2
which the key -> type : 2
the key type -> is : 2
key type is -> specified : 2
type is specified -> by : 2
and the associated -> type : 2
the associated type -> is : 2
associated type is -> the : 2
template the values -> stored : 2
the values stored -> in : 2
in the map -> are : 2
in the map -> that : 4
in the map -> in : 1
the map are -> of : 2
map are of -> type : 2
type has the -> convenience : 2
has the convenience -> typedef : 2
the convenience typedef -> iterators : 2
convenience typedef iterators -> are : 2
typedef iterators are -> they : 2
iterators are they -> return : 2
are they return -> use : 2
they return use -> the : 2
return use the -> member : 2
use the member -> to : 2
member to access -> the : 2
access the key -> or : 2
the key or -> to : 2
key or to -> access : 2
or to access -> the : 2
access the associated -> that : 2
the associated that -> keys : 2
associated that keys -> are : 2
that keys are -> in : 4
keys are in -> the : 4
must not change -> the : 8
not change the -> key : 8
change the key -> while : 4
change the key -> in : 4
the key while -> it : 4
key while it -> is : 4
while it is -> stored : 4
it is stored -> in : 5
in a more -> you : 4
a more you -> must : 4
more you must -> not : 4
the key in -> a : 4
key in a -> way : 6
key in a -> typename : 2
key in a -> in : 1
key in a -> the : 1
in a way -> that : 4
in a way -> to : 2
a way that -> alters : 4
way that alters -> its : 4
that alters its -> relative : 4
alters its relative -> order : 4
its relative order -> with : 4
relative order with -> the : 4
order with the -> other : 4
with the other -> keys : 4
the other keys -> in : 4
other keys in -> the : 4
keys in the -> if : 3
keys in the -> see : 1
need to modify -> a : 3
to modify a -> you : 1
to modify a -> key : 6
to modify a -> erase : 2
to modify a -> or : 2
modify a you -> can : 1
you can erase -> the : 1
can erase the -> key : 1
erase the key -> from : 3
the key from -> the : 3
key from the -> modify : 3
from the modify -> the : 3
the modify the -> and : 3
modify the and -> insert : 3
the and insert -> the : 3
and insert the -> new : 3
insert the new -> key : 1
insert the new -> as : 2
the new key -> with : 1
new key with -> its : 1
key with its -> original : 1
with its original -> associated : 1
its original associated -> as : 1
original associated as -> shown : 1
associated as shown -> in : 1
shown in way -> to : 3
in way to -> modify : 3
way to modify -> a : 6
modify a key -> in : 6
void const const -> using : 2
const const using -> typedef : 2
const using typedef -> typename : 2
using typedef typename -> i : 2
typedef typename i -> if : 2
typename i if -> save : 1
typename i if -> what : 1
i if save -> a : 1
if save a -> copy : 1
copy of because -> erase : 1
of because erase -> invalidates : 1
because erase invalidates -> t : 1
erase invalidates t -> tmp : 1
invalidates t tmp -> what : 1
t tmp what -> if : 1
tmp what if -> newkey : 1
what if newkey -> is : 2
if newkey is -> already : 2
newkey is already -> in : 2
already in a -> keys : 2
in a keys -> are : 2
a keys are -> ordered : 4
keys are ordered -> in : 4
are ordered in -> ascending : 4
ordered in ascending -> according : 4
in ascending according -> to : 4
ascending according to -> the : 4
to the template -> parameter : 4
template parameter can -> be : 5
compares two objects -> of : 4
two objects of -> type : 4
and returns true -> if : 4
true if the -> first : 4
first argument should -> come : 4
argument should come -> before : 4
before the keys -> must : 2
before the keys -> do : 1
the keys must -> be : 2
keys must be -> but : 2
be but note -> that : 2
but note that -> uniqueness : 2
note that uniqueness -> is : 2
that uniqueness is -> determined : 2
uniqueness is determined -> only : 2
is determined only -> by : 2
determined only by -> calling : 2
only by calling -> not : 2
by calling not -> by : 2
calling not by -> using : 2
not by using -> the : 2
using the that -> two : 2
the that two -> and : 2
that two and -> are : 2
two and are -> different : 3
and are different -> therefore : 2
and are different -> if : 1
are different therefore -> can : 2
different therefore can -> both : 2
therefore can both -> be : 2
can both be -> present : 2
both be present -> in : 2
be present in -> a : 2
present in a -> single : 2
single if is -> true : 2
is true or -> is : 3
true or is -> see : 3
or is see -> later : 2
or is see -> earlier : 1
for a map -> container : 1
a map container -> that : 2
map container that -> can : 2
container that can -> store : 3
can store into -> a : 2
store into a -> map : 1
store into a -> set : 1
into a map -> does : 2
into a map -> and : 2
a map does -> not : 2
map does not -> invalidate : 2
does not invalidate -> any : 4
not invalidate any -> iterators : 4
invalidate any iterators -> for : 4
any iterators for -> that : 4
iterators for that -> map : 1
iterators for that -> erasing : 1
iterators for that -> set : 2
for that map -> or : 1
that map or -> references : 1
map or references -> to : 1
references to pairs -> in : 1
to pairs in -> the : 1
pairs in the -> erasing : 1
pairs in the -> range : 4
pairs in the -> the : 2
in the erasing -> an : 3
the erasing an -> element : 3
an element invalidates -> only : 4
element invalidates only -> iterators : 4
invalidates only iterators -> and : 2
invalidates only iterators -> that : 1
invalidates only iterators -> or : 1
only iterators and -> references : 2
and references that -> refer : 2
references that refer -> to : 3
that refer to -> that : 4
refer to that -> into : 3
refer to that -> a : 1
to that into -> a : 3
that into a -> map : 1
that into a -> set : 2
a map and -> searching : 2
map and searching -> for : 2
and searching for -> an : 4
searching for an -> element : 4
for an element -> in : 4
in a map -> usually : 2
in a map -> to : 1
a map usually -> take : 2
map usually take -> logarithmic : 2
usually take logarithmic -> erasing : 4
take logarithmic erasing -> a : 4
logarithmic erasing a -> single : 4
erasing a single -> given : 4
a single given -> an : 4
single given an -> takes : 4
given an takes -> amortized : 2
given an takes -> constant : 2
an takes amortized -> constant : 2
takes amortized constant -> subscript : 1
takes amortized constant -> following : 1
amortized constant subscript -> operator : 1
constant subscript operator -> lets : 1
subscript operator lets -> you : 1
operator lets you -> use : 1
use a map -> as : 1
a map as -> an : 1
map as an -> associative : 1
as an associative -> for : 1
an associative for -> which : 1
associative for which -> the : 1
which the array -> indices : 1
the array indices -> are : 1
array indices are -> if : 1
indices are if -> a : 1
if a key -> is : 1
a key is -> not : 1
key is not -> already : 3
is not already -> present : 3
not already present -> in : 3
it is using -> allows : 1
is using allows -> for : 1
using allows for -> as : 1
allows for as -> you : 1
for as you -> can : 1
see in a -> map : 1
a map to -> count : 2
map to count -> word : 2
to count word -> which : 1
to count word -> frequencies : 1
to count word -> typedef : 1
count word which -> shows : 1
word which shows -> how : 1
use to count -> word : 1
count word frequencies -> in : 1
word frequencies in -> the : 1
frequencies in the -> standard : 1
standard a map -> to : 1
count word typedef -> print : 1
word typedef print -> a : 1
typedef print a -> single : 1
print a single -> word : 1
a single word -> and : 1
single word and -> its : 1
word and its -> void : 1
and its void -> int : 1
its void int -> freqmap : 1
void int freqmap -> count : 1
int freqmap count -> if : 1
freqmap count if -> a : 1
count if a -> word : 1
if a word -> is : 1
a word is -> not : 1
word is not -> in : 1
in the add -> when : 1
the add when -> a : 1
add when a -> new : 1
when a new -> word : 1
a new word -> is : 1
new word is -> its : 1
word is its -> count : 1
is its count -> is : 1
its count is -> initially : 1
count is initially -> each : 1
is initially each -> including : 1
initially each including -> the : 1
each including the -> increment : 1
including the increment -> the : 1
the increment the -> while : 1
increment the while -> print : 1
the while print -> the : 1
while print the -> frequencies : 1
print the frequencies -> of : 1
the frequencies of -> each : 1
frequencies of each -> in : 1
of each in -> following : 1
each in following -> are : 1
functions of comp -> const : 3
of comp const -> an : 3
comp const an -> empty : 4
const an empty -> inputiterator : 2
const an empty -> an : 2
an empty inputiterator -> an : 2
empty inputiterator an -> empty : 2
inputiterator an empty -> map : 2
an empty map -> and : 2
empty map and -> then : 2
map and then -> copies : 2
and then copies -> all : 4
then copies all -> pairs : 2
then copies all -> items : 2
copies all pairs -> in : 2
all pairs in -> the : 2
into the new -> a : 2
into the new -> the : 2
into the new -> vector : 1
new a new -> map : 2
new a new -> the : 1
a new map -> and : 2
new map and -> copies : 2
map and copies -> the : 1
map and copies -> all : 1
copies the allocator -> and : 3
the allocator and -> all : 3
allocator and all -> the : 3
all the pairs -> from : 2
all the pairs -> in : 2
all the pairs -> equivalent : 1
the pairs from -> to : 2
pairs from to -> the : 2
the new an -> iterator : 4
new an iterator -> that : 4
in the every -> item : 2
the every item -> in : 4
number of pairs -> whose : 2
number of pairs -> that : 3
number of pairs -> in : 2
number of pairs -> the : 1
of pairs whose -> keys : 2
pairs whose keys -> are : 2
whose keys are -> equivalent : 2
keys are equivalent -> to : 2
equivalent to this -> value : 2
to this value -> is : 2
this value is -> always : 2
is always or -> an : 1
is always or -> the : 1
always or an -> iterator : 1
or an iterator -> that : 1
the the lower -> bound : 4
lower bound and -> upper : 4
bound and upper -> bound : 4
and upper bound -> as : 4
upper bound as -> a : 4
bound as a -> iterator : 2
bound as a -> complexity : 2
as a iterator -> one : 2
a iterator one -> or : 2
or more pairs -> from : 2
or more pairs -> into : 2
more pairs from -> the : 2
pairs from the -> the : 2
the first version -> erases : 4
the first version -> attempts : 2
the first version -> inserts : 3
first version erases -> the : 4
version erases the -> pair : 3
version erases the -> item : 3
version erases the -> items : 1
erases the pair -> at : 2
erases the pair -> equivalent : 1
the pair at -> in : 2
pair at in -> constant : 2
at in constant -> time : 4
constant time over -> many : 5
time over many -> the : 4
time over many -> such : 1
over many the -> second : 4
many the second -> version : 4
second version erases -> the : 3
second version erases -> all : 1
the pair equivalent -> to : 1
pair equivalent to -> if : 1
equivalent to if -> it : 2
equivalent to if -> any : 2
it is returning -> a : 2
is returning a -> count : 2
returning a count -> of : 4
of pairs that -> or : 1
of pairs that -> can : 2
pairs that or -> it : 1
that or it -> runs : 2
or it runs -> in : 2
it runs in -> logarithmic : 3
runs in logarithmic -> the : 3
in logarithmic the -> third : 2
in logarithmic the -> one : 1
logarithmic the third -> version : 2
the third version -> erases : 4
the third version -> inserts : 1
third version erases -> all : 4
version erases all -> elements : 4
version erases all -> the : 1
erases all elements -> in : 4
in a time -> proportional : 2
a time proportional -> to : 2
time proportional to -> log : 1
time proportional to -> the : 1
time proportional to -> in : 2
proportional to log -> for : 1
to log for -> a : 1
log for a -> pair : 1
a pair whose -> key : 2
pair whose key -> is : 2
whose key is -> equivalent : 2
key is equivalent -> to : 2
points to that -> pair : 2
points to that -> key : 2
to that pair -> or : 2
that pair or -> if : 2
pair or if -> it : 2
not it runs -> in : 1
logarithmic the one -> or : 1
the one or -> more : 4
more pairs into -> the : 2
pairs into the -> but : 1
pairs into the -> the : 1
into the but -> only : 2
the but only -> if : 2
if an equivalent -> key : 2
an equivalent key -> is : 2
equivalent key is -> not : 2
key is already -> the : 2
already the insert -> attempt : 2
the insert attempt -> is : 2
insert attempt is -> the : 2
attempt is the -> first : 2
first version attempts -> to : 2
version attempts to -> insert : 2
attempts to insert -> the : 1
attempts to insert -> in : 1
to insert the -> pair : 1
insert the pair -> in : 1
pair in logarithmic -> second : 2
in logarithmic second -> version : 4
logarithmic second version -> inserts : 4
second version inserts -> the : 2
second version inserts -> using : 2
second version inserts -> copies : 1
version inserts the -> pair : 3
version inserts the -> character : 1
version inserts the -> temporary : 1
inserts the pair -> using : 2
inserts the pair -> in : 1
the pair using -> as : 2
pair using as -> a : 2
using as a -> position : 4
as a position -> if : 4
a position if -> is : 4
over many at -> any : 4
many at any -> other : 4
performance is use -> this : 2
is use this -> form : 2
use this form -> when : 2
this form when -> inserting : 2
form when inserting -> many : 2
when inserting many -> items : 2
inserting many items -> that : 2
many items that -> are : 2
that are already -> in : 2
are already in -> the : 6
in the desired -> third : 2
in the desired -> the : 4
the desired third -> version : 2
desired third version -> copies : 2
third version copies -> all : 4
version copies all -> the : 4
the pairs in -> the : 2
the range which -> must : 4
range which must -> be : 4
must be pointing -> to : 4
a different if -> the : 4
if the items -> are : 4
items are already -> in : 4
desired the performance -> is : 4
performance is it -> is : 4
it is log -> in : 3
is the comparator -> function : 6
the comparator function -> pointer : 6
comparator function pointer -> or : 6
pointer or which -> compares : 2
or which compares -> the : 2
which compares the -> type : 2
compares the type -> is : 2
the template see -> also : 2
the template see -> for : 1
template see also -> the : 2
see also the -> an : 2
see also the -> member : 1
see also the -> the : 1
also the an -> iterator : 2
the first pair -> in : 4
first pair in -> the : 4
pair in the -> map : 4
the map that -> does : 2
the map that -> comes : 2
map that does -> not : 2
points to its -> the : 2
its the iterator -> points : 2
should be performance -> is : 2
be performance is -> the : 2
pairs that can -> be : 2
of pairs in -> the : 2
the the contents -> of : 4
of the map -> with : 2
of the map -> and : 2
the map with -> the : 2
map with the -> contents : 2
with the contents -> of : 5
map that comes -> after : 2
comes after performance -> is : 1
after performance is -> a : 1
performance is a -> which : 2
performance is a -> vector : 1
compare the object -> takes : 2
the object takes -> two : 2
object takes two -> arguments : 2
arguments and compares -> their : 2
and compares their -> returning : 2
compares their returning -> if : 2
their returning if -> the : 2
returning if the -> first : 2
the first should -> come : 2
first should come -> before : 2
before the second -> in : 2
second in the -> all : 2
the map and -> replaces : 2
map and replaces -> them : 2
and replaces them -> with : 5
replaces them with -> copies : 4
replaces them with -> the : 1
them with copies -> of : 4
the object associated -> with : 1
object associated with -> the : 1
with the key -> if : 1
the key if -> is : 1
key if is -> not : 1
it is added -> with : 1
is added with -> a : 1
added with a -> default : 1
a default associated -> and : 1
default associated and -> a : 1
associated and a -> reference : 1
and a reference -> to : 1
reference to that -> new : 1
to that new -> object : 1
that new object -> is : 1
is that that -> there : 1
that that there -> is : 1
is no version -> of : 1
no version of -> this : 1
of this class -> class : 1
container with duplicate -> class : 1
container with duplicate -> typename : 1
with duplicate class -> class : 1
duplicate class class -> compare : 1
class class compare -> class : 1
class compare class -> alloc : 1
compare class alloc -> class : 1
capacity bool modifiers -> iterator : 1
bool modifiers iterator -> iterator : 1
modifiers iterator iterator -> const : 1
iterator iterator const -> template : 2
iterator iterator const -> const : 1
can store duplicate -> a : 1
store duplicate a -> map : 1
duplicate a map -> stores : 1
the see way -> to : 1
see way to -> modify : 1
a in this -> which : 1
in this which -> shows : 1
this which shows -> how : 1
how to change -> a : 1
to change a -> key : 1
change a key -> by : 1
a key by -> erasing : 1
key by erasing -> and : 1
by erasing and -> reinserting : 1
erasing and reinserting -> an : 1
and reinserting an -> a : 1
reinserting an a -> keys : 1
an a keys -> are : 1
before the into -> a : 1
the into a -> map : 1
for that erasing -> an : 1
that erasing an -> element : 1
only iterators that -> refer : 1
iterators that refer -> to : 1
that a single -> item : 1
a single item -> into : 1
single item into -> a : 1
item into a -> map : 1
amortized constant following -> are : 1
functions of note -> that : 1
have a subscript -> comp : 1
a subscript comp -> const : 1
subscript comp const -> an : 1
the map in -> linear : 1
map in linear -> the : 1
in linear the -> number : 1
linear the number -> of : 1
complexity is proportional -> to : 1
is proportional to -> the : 1
proportional to the -> return : 1
proportional to the -> number : 1
erases all the -> pairs : 1
the pairs equivalent -> to : 1
pairs equivalent to -> if : 1
to if any -> are : 2
if any are -> returning : 2
any are returning -> a : 2
are returning a -> count : 2
of pairs the -> third : 1
pairs the third -> version : 1
range the last -> two : 2
the last two -> forms : 3
the last two -> versions : 2
last two forms -> take : 1
last two forms -> do : 1
last two forms -> run : 1
two forms take -> time : 1
forms take time -> proportional : 1
take time proportional -> to : 1
of elements for -> a : 1
elements for a -> pair : 1
not if occurs -> more : 2
if occurs more -> than : 2
occurs more than -> the : 2
than the iterator -> might : 2
the iterator might -> point : 2
iterator might point -> to : 2
might point to -> any : 2
of the equivalent -> the : 1
the equivalent the -> one : 1
equivalent the one -> or : 1
into the the -> first : 2
first version inserts -> the : 2
first version inserts -> in : 1
occurrences of performance -> is : 1
of performance is -> a : 1
elements of class -> class : 3
template compares maps -> for : 6
compares maps for -> class : 6
maps for class -> class : 6
class class bool -> const : 30
bool const template -> class : 6
bool const template -> typename : 10
bool const template -> bool : 6
const template class -> class : 6
template class class -> class : 7
of two class -> class : 1
two class class -> class : 1
two class class -> const : 1
two class class -> void : 1
class class void -> template : 1
class class void -> function : 1
class class void -> size : 1
class class void -> void : 1
class void template -> class : 1
void template class -> class : 1
class void function -> template : 1
header declares function -> and : 1
declares function and -> class : 1
class templates for -> allocating : 1
class templates for -> the : 1
templates for allocating -> and : 1
allocating and using -> such : 1
and using such -> as : 1
using such as -> the : 1
as the smart -> algorithms : 1
the smart algorithms -> for : 1
smart algorithms for -> working : 1
algorithms for working -> with : 1
working with uninitialized -> and : 1
with uninitialized and -> a : 1
uninitialized and a -> standard : 1
and a standard -> allocator : 1
standard allocator for -> use : 1
allocator for use -> with : 1
use with the -> standard : 1
the standard class -> template : 2
the standard class -> class : 1
the standard class -> instead : 1
standard class template -> provides : 1
standard class template -> does : 1
template provides a -> simple : 1
provides a simple -> ownership : 1
a simple ownership -> model : 1
simple ownership model -> for : 1
ownership model for -> working : 1
model for working -> with : 1
working with it -> can : 1
with it can -> be : 1
can be extremely -> useful : 1
be extremely useful -> for : 1
extremely useful for -> writing : 1
useful for writing -> on : 1
for writing on -> the : 1
writing on the -> other : 1
the other copying -> an : 1
other copying an -> object : 1
copying an object -> does : 1
an object does -> not : 1
not produce an -> exact : 1
produce an exact -> copy : 1
of the pointer -> is : 1
of the pointer -> that : 1
of the pointer -> to : 1
pointer is so -> objects : 1
is so objects -> cannot : 1
so objects cannot -> be : 1
objects cannot be -> stored : 1
cannot be stored -> in : 1
stored in standard -> functions : 1
in standard functions -> work : 1
standard functions work -> with : 1
functions work with -> uninitialized : 1
with uninitialized which -> can : 1
uninitialized which can -> be : 1
helpful when implementing -> a : 1
when implementing a -> for : 1
implementing a for -> an : 1
implementation of must -> allocate : 1
of must allocate -> an : 1
must allocate an -> uninitialized : 1
allocate an uninitialized -> array : 1
an uninitialized array -> of : 1
uninitialized array of -> objects : 1
objects and initialize -> elements : 1
array as they -> are : 1
are the functions -> can : 1
the functions can -> come : 1
functions can come -> in : 1
can come in -> handy : 1
come in handy -> for : 1
in handy for -> that : 1
handy for that -> class : 1
for that class -> template : 1
that class template -> manages : 1
class template manages -> memory : 1
class template manages -> an : 1
template manages memory -> allocation : 1
manages memory allocation -> and : 1
memory allocation and -> deallocation : 1
memory allocation and -> class : 1
allocation and deallocation -> and : 1
allocation and deallocation -> the : 1
allocation and deallocation -> if : 1
allocation and deallocation -> functions : 2
allocation and deallocation -> all : 1
and deallocation and -> the : 1
deallocation and the -> construction : 1
and the construction -> and : 1
the construction and -> destruction : 1
construction and destruction -> of : 1
and destruction of -> objects : 1
destruction of objects -> in : 1
of objects in -> the : 1
the memory it -> it : 1
memory it it -> is : 1
it it is -> the : 1
the default allocator -> for : 1
default allocator for -> all : 1
allocator for all -> the : 1
standard class class -> template : 1
class template encapsulates -> memory : 1
class template encapsulates -> basic : 1
template encapsulates memory -> allocation : 1
encapsulates memory allocation -> and : 1
allocation and class -> typedef : 1
and class typedef -> typedef : 1
typedef t template -> struct : 2
t template struct -> typedef : 1
t template struct -> rebind : 1
template struct typedef -> template : 1
struct typedef template -> pointer : 1
typedef template pointer -> pointer : 1
typedef template pointer -> const : 1
template pointer pointer -> hint : 1
pointer pointer hint -> void : 1
pointer hint void -> const : 1
hint void const -> void : 1
const void class -> template : 1
template encapsulates basic -> allocation : 1
encapsulates basic allocation -> and : 1
basic allocation and -> deallocation : 1
and deallocation the -> standard : 1
deallocation the standard -> containers : 1
standard containers rely -> on : 1
containers rely on -> allocators : 1
rely on allocators -> for : 1
on allocators for -> memory : 1
allocators for memory -> management : 1
for memory management -> and : 1
memory management and -> use : 1
management and use -> as : 1
and use as -> the : 1
use as the -> default : 1
the default programmers -> do : 1
default programmers do -> not : 1
to use which -> offers : 1
use which offers -> few : 1
which offers few -> advantages : 1
offers few advantages -> over : 1
few advantages over -> plain : 1
advantages over plain -> and : 1
over plain and -> if : 1
plain and if -> you : 1
your own or -> provide : 1
own or provide -> a : 1
or provide a -> custom : 1
provide a custom -> allocator : 1
a custom allocator -> for : 1
custom allocator for -> the : 1
allocator for the -> standard : 1
standard you should -> take : 1
you should take -> the : 1
should take the -> time : 1
take the time -> to : 1
the time to -> understand : 1
time to understand -> the : 1
to understand the -> easiest : 1
understand the easiest -> way : 1
way to understand -> is : 1
to understand is -> to : 1
understand is to -> take : 1
is to take -> a : 1
take a look -> at : 1
a look at -> a : 1
look at a -> trivial : 1
at a trivial -> implementation : 1
a trivial implementation -> in : 1
a trivial implementation -> of : 1
trivial implementation in -> allocator : 1
implementation in allocator -> note : 1
in allocator note -> that : 1
allocator note that -> a : 1
that a library -> might : 1
a library might -> have : 1
library might have -> a : 1
have a more -> complicated : 1
a more complicated -> implementation : 1
more complicated implementation -> to : 1
complicated implementation to -> handle : 1
implementation to handle -> improve : 1
to handle improve -> some : 1
handle improve some -> libraries : 1
improve some libraries -> offer : 1
some libraries offer -> allocators : 1
libraries offer allocators -> for : 1
offer allocators for -> special : 1
allocators for special -> such : 1
for special such -> as : 1
special such as -> allocating : 1
such as allocating -> memory : 2
as allocating memory -> that : 2
allocating memory that -> can : 1
allocating memory that -> is : 1
memory that can -> be : 1
be shared among -> multiple : 1
shared among multiple -> this : 1
among multiple this -> particular : 1
multiple this particular -> implementation : 1
this particular implementation -> is : 1
particular implementation is -> just : 1
implementation is just -> a : 1
just a allocator -> class : 1
a allocator class -> myallocator : 1
allocator class myallocator -> typedef : 1
class myallocator typedef -> typedef : 1
myallocator typedef typedef -> typedef : 1
template struct rebind -> typedef : 3
struct rebind typedef -> template : 1
struct rebind typedef -> following : 1
struct rebind typedef -> specialization : 1
rebind typedef template -> pointer : 1
template pointer const -> const : 1
pointer const const -> pointer : 1
const pointer hint -> return : 1
pointer hint return -> new : 1
hint return new -> void : 1
return new void -> const : 1
new void const -> return : 1
const void bool -> const : 1
return class typedef -> typedef : 1
const typedef void -> template : 2
typedef void template -> struct : 2
void template struct -> rebind : 2
rebind typedef following -> are : 1
typedef following are -> the : 1
are the members -> of : 6
of a new -> allocator : 1
a new allocator -> possibly : 1
new allocator possibly -> copying : 1
allocator possibly copying -> an : 1
possibly copying an -> existing : 1
copying an existing -> remember : 1
an existing remember -> that : 1
existing remember that -> all : 1
remember that all -> instances : 1
all instances must -> be : 1
instances must be -> so : 1
be so an -> allocator : 1
so an allocator -> typically : 1
an allocator typically -> does : 1
allocator typically does -> not : 1
typically does not -> have : 1
have any data -> members : 1
data members to -> the : 1
to the address -> of : 1
address of that -> hint : 1
of that hint -> the : 1
that hint the -> global : 1
hint the global -> operator : 1
the global operator -> to : 3
global operator to -> allocate : 1
global operator to -> construct : 1
global operator to -> free : 1
operator to allocate -> enough : 1
to allocate enough -> memory : 1
allocate enough memory -> to : 1
memory to hold -> objects : 1
to hold objects -> of : 1
hold objects of -> type : 1
a pointer obtained -> from : 1
pointer obtained from -> a : 1
pointer obtained from -> calling : 1
obtained from a -> prior : 1
from a prior -> call : 3
a prior call -> to : 3
prior call to -> that : 1
prior call to -> a : 2
to that has -> not : 1
not been passed -> to : 1
newly allocated if -> the : 1
allocated if the -> memory : 1
if the memory -> cannot : 2
if the memory -> allocation : 1
the memory cannot -> be : 2
memory cannot be -> is : 1
memory cannot be -> the : 1
memory cannot be -> third : 1
memory cannot be -> allocate : 1
be is implementation -> might : 1
is implementation might -> use : 1
implementation might use -> to : 1
use to improve -> const : 1
to improve const -> type : 1
improve const type -> for : 1
const type for -> a : 2
pointer to in -> a : 1
in a custom -> the : 4
custom the type -> should : 4
the type should -> be : 4
type should be -> equivalent : 4
should be equivalent -> to : 4
equivalent to const -> type : 1
equivalent to const -> the : 1
to const type -> for : 1
to const the -> global : 1
const the global -> operator : 1
operator to construct -> an : 1
to construct an -> instance : 1
to construct an -> pass : 1
to construct an -> with : 1
construct an instance -> of : 1
of with value -> using : 1
with value using -> the : 1
value using the -> memory : 1
using the memory -> that : 1
that points that -> it : 1
points that it -> calls : 1
that it calls -> the : 1
that it calls -> type : 1
that it calls -> if : 1
calls the global -> operator : 1
operator to free -> the : 1
points the argument -> is : 1
of items of -> type : 1
items of type -> same : 1
of type same -> value : 1
same value passed -> to : 1
value passed to -> the : 1
to the destructor -> for : 1
the object at -> address : 1
object at address -> that : 1
at address that -> it : 1
address that it -> calls : 1
it calls type -> that : 1
calls type that -> represents : 1
difference of any -> two : 1
of any two -> pointers : 1
any two pointers -> that : 1
two pointers that -> the : 1
pointers that the -> allocator : 1
that the allocator -> returns : 1
the allocator returns -> from : 1
allocator returns from -> the : 1
from the maximum -> size : 1
maximum size that -> can : 1
size that can -> be : 1
passed to pointer -> in : 1
to pointer in -> a : 1
pointer in a -> custom : 1
the allocator object -> to : 1
allocator object to -> a : 1
object to a -> different : 1
different value the -> class : 1
value the class -> has : 1
the same allocator -> but : 1
same allocator but -> with : 1
allocator but with -> as : 1
but with as -> the : 1
template is necessary -> for : 1
is necessary for -> standard : 1
necessary for standard -> containers : 1
for standard containers -> that : 1
standard containers that -> allocate : 1
standard containers that -> are : 1
containers that allocate -> helper : 1
that allocate helper -> such : 1
allocate helper such -> as : 1
helper such as -> link : 1
such as link -> rather : 1
as link rather -> than : 1
link rather than -> allocating : 1
rather than allocating -> values : 1
than allocating values -> if : 1
allocating values if -> you : 1
values if you -> are : 1
are not implementing -> a : 1
not implementing a -> standard : 1
implementing a standard -> you : 1
standard you probably -> need : 1
you probably need -> to : 1
need to understand -> lvalue : 1
to understand lvalue -> in : 1
understand lvalue in -> a : 1
lvalue in a -> custom : 1
equivalent to type -> that : 1
to type that -> can : 1
that can represent -> the : 1
can represent the -> size : 1
the largest allocation -> type : 1
largest allocation type -> of : 1
allocation type of -> allocated : 1
type of allocated -> which : 1
of allocated which -> is : 1
allocated which is -> typically : 1
is typically class -> specializes : 1
typically class specializes -> allocator : 1
class specializes allocator -> for : 1
specializes allocator for -> void : 1
allocator for void -> class : 1
for void class -> typedef : 1
void class typedef -> typedef : 1
rebind typedef specialization -> is : 1
typedef specialization is -> necessary : 1
specialization is necessary -> to : 1
is necessary to -> represent : 1
necessary to represent -> pointers : 1
to represent pointers -> to : 1
represent pointers to -> without : 1
pointers to without -> permitting : 1
to without permitting -> the : 1
without permitting the -> allocation : 1
permitting the allocation -> of : 1
allocation of objects -> of : 1
of objects of -> type : 1
of type class -> class : 1
type class class -> class : 2
type class class -> function : 1
class template smart -> pointer : 1
template smart pointer -> to : 1
smart pointer to -> manage : 2
pointer to manage -> ownership : 2
to manage ownership -> of : 2
manage ownership of -> struct : 1
manage ownership of -> proper : 1
ownership of struct -> class : 1
of struct class -> typedef : 1
struct class typedef -> t : 1
typedef t explicit -> p : 1
typedef t explicit -> t : 1
t explicit p -> const : 1
explicit p const -> const : 1
p const const -> const : 1
const const void -> p : 1
const void p -> class : 1
void p class -> template : 1
p class template -> implements : 1
implements a smart -> pointer : 1
a smart pointer -> to : 1
ownership of proper -> use : 1
of proper use -> of : 1
use of ensures -> that : 1
of ensures that -> a : 1
ensures that a -> pointer : 1
a pointer has -> exactly : 1
pointer has exactly -> one : 1
has exactly one -> owner : 1
has exactly one -> and : 1
exactly one owner -> prevents : 1
one owner prevents -> accidental : 1
owner prevents accidental -> double : 1
prevents accidental double -> and : 1
accidental double and -> the : 1
double and the -> owner : 1
and the owner -> automatically : 1
the owner automatically -> frees : 1
owner automatically frees -> the : 1
automatically frees the -> memory : 1
frees the memory -> when : 1
the memory when -> the : 1
memory when the -> owner : 1
when the owner -> goes : 1
the owner goes -> out : 1
owner goes out -> of : 1
goes out of -> scope : 1
goes out of -> the : 1
out of scope -> prevents : 1
of scope prevents -> memory : 1
scope prevents memory -> assignment : 1
prevents memory assignment -> of : 1
memory assignment of -> values : 1
assignment of values -> transfers : 1
of values transfers -> ownership : 1
values transfers ownership -> from : 1
transfers ownership from -> the : 1
ownership from the -> source : 1
the source to -> the : 1
source to the -> target : 1
the type holds -> a : 1
type holds a -> reference : 1
holds a reference -> to : 1
to an implicit -> conversions : 1
an implicit conversions -> between : 1
implicit conversions between -> and : 1
conversions between and -> facilitate : 1
between and facilitate -> the : 1
and facilitate the -> return : 1
facilitate the return -> of : 1
the return of -> objects : 1
return of objects -> from : 1
of objects from -> you : 1
objects from you -> can : 1
from you can -> ignore : 1
you can ignore -> the : 1
can ignore the -> type : 1
ignore the type -> and : 1
type and let -> the : 1
let the implicit -> conversions : 1
the implicit conversions -> handle : 1
implicit conversions handle -> the : 1
conversions handle the -> details : 1
handle the details -> for : 1
the details for -> all : 1
details for all -> you : 1
for all you -> need : 1
all you need -> to : 1
to do is -> use : 1
do is use -> as : 1
is use as -> a : 1
use as a -> return : 1
use as a -> modifier : 1
as a return -> the : 1
as a return -> value : 4
return the details -> of : 1
details of are -> of : 1
of are of -> the : 1
of the typical -> uses : 1
the typical uses -> for : 1
typical uses for -> members : 1
uses for members -> of : 1
members of pointer -> type : 1
of pointer type -> that : 1
pointer type that -> point : 1
type that point -> to : 1
point to dynamically -> allocated : 1
to dynamically allocated -> objects : 1
objects are prime -> candidates : 1
are prime candidates -> for : 1
prime candidates for -> which : 1
candidates for which -> ensures : 1
for which ensures -> that : 1
which ensures that -> the : 2
that the memory -> is : 2
memory is properly -> freed : 2
is properly freed -> when : 1
is properly freed -> if : 1
properly freed when -> the : 1
when the owning -> object : 1
the owning object -> is : 1
owning object is -> be : 1
object is be -> sure : 1
sure to implement -> a : 1
implement a copy -> constructor : 1
operator for any -> class : 1
for any class -> that : 1
class that uses -> for : 1
class that uses -> a : 1
that uses for -> its : 1
uses for its -> data : 1
for its data -> a : 1
its data a -> function : 1
data a function -> must : 1
function must dynamically -> allocate : 1
must dynamically allocate -> a : 1
dynamically allocate a -> temporary : 1
allocate a temporary -> store : 1
a temporary store -> the : 1
temporary store the -> pointer : 1
store the pointer -> in : 1
pointer in an -> when : 1
pointer in an -> class : 1
in an when -> the : 1
an when the -> function : 1
an when the -> compiler : 1
function returns or -> as : 1
returns or as -> the : 1
as the result -> of : 1
an the object -> is : 1
is destroyed this -> can : 1
destroyed this can -> drastically : 1
this can drastically -> reduce : 1
can drastically reduce -> the : 1
drastically reduce the -> need : 1
reduce the need -> for : 1
for a complex -> objects : 1
a complex objects -> are : 1
complex objects are -> frequently : 1
objects are frequently -> allocated : 1
are frequently allocated -> in : 1
frequently allocated in -> one : 1
allocated in one -> part : 1
in one part -> of : 1
one part of -> the : 1
of the program -> and : 1
program and freed -> in : 1
and freed in -> it : 1
freed in it -> can : 1
difficult to keep -> track : 1
track of when -> it : 1
of when it -> is : 1
is safe or -> proper : 1
safe or proper -> to : 1
or proper to -> free : 1
proper to free -> an : 1
to free an -> using : 1
free an using -> you : 1
an using you -> can : 1
you can safely -> ensure : 1
you can safely -> assume : 1
can safely ensure -> that : 1
safely ensure that -> each : 1
ensure that each -> object : 1
that each object -> has : 1
each object has -> exactly : 1
object has exactly -> one : 1
exactly one and -> ownership : 1
one and ownership -> is : 1
and ownership is -> properly : 1
and ownership is -> transferred : 1
ownership is properly -> passed : 1
is properly passed -> via : 1
properly passed via -> assignment : 1
passed via assignment -> and : 1
via assignment and -> function : 1
assignment and function -> when : 1
and function when -> the : 1
function when the -> object : 1
object is no -> longer : 3
is no longer -> it : 1
is no longer -> used : 1
is no longer -> pinned : 1
no longer it -> is : 1
longer it is -> freed : 1
it is freed -> you : 1
is freed you -> cannot : 1
freed you cannot -> simply : 1
you cannot simply -> copy : 1
cannot simply copy -> or : 1
simply copy or -> assign : 1
copy or assign -> an : 1
copy or assign -> but : 1
or assign an -> you : 1
assign an you -> cannot : 1
cannot use objects -> in : 1
a standard another -> limitation : 1
standard another limitation -> is : 1
another limitation is -> that : 1
limitation is that -> cannot : 1
is that cannot -> hold : 1
that cannot hold -> a : 1
cannot hold a -> pointer : 1
to an allocating -> and : 1
an allocating and -> freeing : 1
and freeing a -> single : 1
freeing a single -> object : 1
object is different -> from : 1
from allocating and -> freeing : 1
and freeing an -> array : 1
freeing an array -> of : 1
and is designed -> to : 1
is designed to -> work : 1
designed to work -> only : 1
to work only -> with : 1
work only with -> single : 1
only with single -> useful : 1
with single useful -> guideline : 1
single useful guideline -> is : 1
program should avoid -> bare : 1
should avoid bare -> pointers : 1
avoid bare pointers -> bare : 1
bare pointers bare -> pointers : 1
pointers bare pointers -> are : 1
bare pointers are -> they : 1
pointers are they -> are : 1
they are subject -> to : 1
subject to memory -> and : 1
to memory and -> dangling : 1
memory and dangling -> use : 1
and dangling use -> some : 1
dangling use some -> form : 1
use some form -> of : 1
some form of -> such : 1
form of such -> as : 1
as or one -> of : 1
of the boost -> smart : 1
of the boost -> packages : 1
the boost smart -> boost : 1
boost smart boost -> project : 1
smart boost project -> has : 1
has additional class -> templates : 1
additional class templates -> that : 1
templates that permit -> and : 1
that permit and -> shared : 1
permit and shared -> see : 1
and shared see -> for : 1
shared see for -> more : 1
information about uses -> of : 1
about uses of -> shows : 1
uses of shows -> some : 1
of shows some -> uses : 1
uses of uses -> of : 1
of uses of -> brush : 1
uses of brush -> class : 1
of brush class -> pen : 1
brush class pen -> a : 1
class pen a -> function : 1
pen a function -> can : 1
function can return -> an : 1
can return an -> return : 1
return an return -> class : 1
an return class -> displaycontext : 1
return class displaycontext -> display : 1
class displaycontext display -> or : 1
displaycontext display or -> graphics : 1
display or graphics -> context : 1
or graphics context -> for : 1
graphics context for -> drawing : 1
context for drawing -> on : 1
for drawing on -> a : 1
drawing on a -> make : 1
on a make -> sure : 1
make sure caller -> never : 1
sure caller never -> tries : 1
caller never tries -> to : 1
never tries to -> copy : 1
tries to copy -> or : 1
to copy or -> assign : 1
or assign but -> uses : 1
assign but uses -> only : 1
but uses only -> objects : 1
uses only objects -> that : 1
that are managed -> by : 1
managed by automatically -> manage : 1
by automatically manage -> lifetime : 1
automatically manage lifetime -> of : 1
manage lifetime of -> the : 1
of the pen -> and : 1
the pen and -> when : 1
the pen and -> brush : 1
pen and when -> the : 1
when the displaycontext -> is : 1
the displaycontext is -> so : 1
displaycontext is so -> are : 1
is so are -> the : 1
so are the -> pen : 1
are the pen -> and : 1
pen and brush -> void : 1
and brush void -> allocate : 1
brush void allocate -> a : 1
void allocate a -> new : 1
a new display -> use : 1
new display use -> to : 1
display use to -> ensure : 1
use to ensure -> that : 1
ensure that it -> will : 1
that it will -> be : 1
that it will -> throw : 2
be freed draw -> stuff : 1
freed draw stuff -> on : 1
draw stuff on -> the : 1
stuff on the -> display : 1
on the display -> no : 1
the display no -> need : 1
display no need -> to : 1
need to call -> the : 1
call the display -> context : 1
the display context -> is : 1
display context is -> automatically : 1
context is automatically -> released : 1
is automatically released -> when : 1
automatically released when -> int : 1
released when int -> following : 1
when int following -> are : 1
int following are -> the : 1
members of p -> the : 1
of p the -> object : 1
p the object -> to : 1
object to own -> the : 1
to own the -> pointer : 1
own the pointer -> the : 1
the pointer the -> object : 1
pointer the object -> with : 1
the object with -> the : 2
object with the -> pointer : 2
with the pointer -> returned : 1
with the pointer -> obtained : 1
the pointer returned -> from : 3
pointer returned from -> in : 1
pointer returned from -> remains : 2
second the type -> must : 1
must be implicitly -> convertible : 1
be implicitly convertible -> to : 1
implicitly convertible to -> note : 1
convertible to note -> that : 1
to note that -> is : 1
not it is -> not : 1
not possible to -> copy : 1
possible to copy -> a : 1
copy a because -> to : 1
a because to -> do : 1
because to do -> so : 1
to do so -> would : 1
do so would -> break : 1
so would break -> the : 1
would break the -> ownership : 1
break the ownership -> the : 1
the ownership the -> object : 1
ownership the object -> with : 1
the pointer obtained -> from : 1
obtained from calling -> on : 1
from calling on -> the : 1
on the owned -> pointer : 1
the owned pointer -> the : 1
the owned pointer -> to : 1
the owned pointer -> it : 1
the owned pointer -> is : 2
owned pointer the -> owned : 1
pointer the owned -> and : 1
the owned and -> resets : 1
owned and resets -> the : 1
and resets the -> owned : 1
resets the owned -> pointer : 1
owned pointer to -> p : 1
pointer to p -> the : 1
to p the -> owned : 1
p the owned -> pointer : 1
owned pointer it -> is : 1
is not equal -> to : 1
to and saves -> as : 1
and saves as -> the : 1
the new owned -> a : 1
new owned a -> temporary : 1
owned a temporary -> object : 1
temporary object that -> owns : 1
object that owns -> the : 1
that owns the -> the : 1
owns the the -> pointer : 1
convertible to ownership -> is : 1
to ownership is -> released : 1
ownership is released -> and : 1
is released and -> transferred : 1
released and transferred -> to : 1
and transferred to -> the : 1
transferred to the -> new : 2
new the owned -> pointer : 1
owned pointer is -> converted : 1
owned pointer is -> a : 1
pointer is converted -> to : 1
type and ownership -> is : 1
ownership is transferred -> to : 1
is transferred to -> the : 1
the new ownership -> of : 1
new ownership of -> the : 1
ownership of the -> pointer : 1
the pointer that -> is : 1
that is owned -> by : 1
is owned by -> or : 1
owned by or -> by : 1
by or by -> the : 1
or by the -> object : 1
by the object -> held : 1
the object held -> by : 1
object held by -> to : 1
held by to -> that : 1
by to that -> it : 1
to that it -> calls : 1
it calls if -> the : 1
calls if the -> owned : 1
if the owned -> pointer : 1
null the behavior -> is : 2
function template allocates -> temporary : 1
function template allocates -> memory : 1
template allocates temporary -> memory : 1
allocates temporary memory -> function : 1
temporary memory function -> template : 1
memory function template -> allocates : 1
template allocates memory -> for : 1
allocates memory for -> temporary : 1
allocates memory for -> storing : 1
memory for temporary -> the : 1
for temporary the -> request : 1
temporary the request -> is : 1
the request is -> for : 1
the request is -> fulfilled : 1
request is for -> up : 1
is for up -> to : 1
for up to -> adjacent : 1
for up to -> the : 1
for up to -> if : 1
for up to -> characters : 3
up to adjacent -> objects : 1
to adjacent objects -> of : 1
adjacent objects of -> type : 1
a of the -> pointer : 1
allocated memory and -> the : 1
the actual size -> of : 1
actual size of -> the : 1
of the memory -> allocated : 1
the memory allocated -> units : 1
memory allocated units -> of : 1
allocated units of -> if : 1
units of if -> the : 1
be the return -> value : 1
allocated memory must -> be : 1
be freed by -> calling : 1
calling the temporary -> buffer : 1
the temporary buffer -> is : 1
temporary buffer is -> function : 1
buffer is function -> has : 1
function has limited -> you : 1
has limited you -> must : 1
limited you must -> test : 1
must test the -> return : 1
test the return -> value : 1
value to see -> how : 1
to see how -> much : 1
see how much -> memory : 1
how much memory -> was : 1
much memory was -> allocated : 1
memory was allocated -> and : 1
was allocated and -> ensure : 1
allocated and ensure -> that : 1
and ensure that -> the : 1
properly freed if -> an : 1
freed if an -> exception : 1
exception is it -> is : 1
is usually simpler -> to : 1
usually simpler to -> call : 1
simpler to call -> and : 1
call and save -> the : 1
and save the -> pointer : 1
save the pointer -> in : 1
in an class -> class : 1
an class class -> function : 1
an class class -> in : 1
template compares allocators -> for : 2
compares allocators for -> class : 2
allocators for class -> bool : 2
for class bool -> const : 2
function template always -> returns : 2
template always returns -> in : 2
always returns in -> other : 2
returns in other -> any : 2
in other any -> object : 2
other any object -> of : 2
any object of -> type : 2
type is considered -> to : 2
is considered to -> be : 2
same as every -> other : 2
as every other -> class : 2
every other class -> class : 2
template iterator for -> uninitialized : 1
iterator for uninitialized -> class : 1
for uninitialized class -> class : 1
uninitialized class class -> public : 1
uninitialized class class -> void : 1
public explicit class -> template : 1
public explicit class -> is : 4
public explicit class -> can : 2
iterator that writes -> to : 1
that writes to -> uninitialized : 1
writes to uninitialized -> it : 1
to uninitialized it -> adapts : 1
uninitialized it adapts -> another : 1
it adapts another -> output : 1
adapts another output -> iterator : 1
another output iterator -> that : 1
iterator that must -> have : 1
that must have -> return : 1
must have return -> a : 1
have return a -> pointer : 1
iterator is typically -> used : 1
typically used as -> a : 1
to uninitialized the -> as : 1
to uninitialized the -> range : 1
uninitialized the as -> you : 1
the as you -> would : 1
any other output -> function : 1
other output function -> function : 1
output function function -> function : 1
function template frees -> temporary : 1
template frees temporary -> memory : 1
frees temporary memory -> void : 1
temporary memory void -> function : 1
memory void function -> reclaims : 1
void function reclaims -> the : 1
function reclaims the -> memory : 1
reclaims the memory -> that : 1
memory that was -> previously : 1
that was previously -> allocated : 1
was previously allocated -> by : 1
previously allocated by -> function : 1
allocated by function -> function : 1
template copies into -> uninitialized : 1
copies into uninitialized -> class : 1
into uninitialized class -> fwditer : 1
uninitialized class fwditer -> inputiter : 1
class fwditer inputiter -> fwditer : 1
fwditer inputiter fwditer -> function : 1
inputiter fwditer function -> template : 1
template is like -> the : 3
the except the -> iterator : 1
the except the -> for : 1
except the iterator -> is : 1
iterator is assumed -> to : 1
assumed to point -> to : 1
point to uninitialized -> the : 1
uninitialized the range -> is : 1
range is copied -> to : 1
copied to using -> placement : 1
to using placement -> class : 1
using placement class -> class : 2
using placement class -> function : 1
placement class class -> function : 2
template fills uninitialized -> class : 2
fills uninitialized class -> void : 1
fills uninitialized class -> class : 1
uninitialized class void -> fwditer : 1
class void fwditer -> const : 1
that it fills -> uninitialized : 1
it fills uninitialized -> every : 1
it fills uninitialized -> starting : 1
fills uninitialized every -> item : 1
uninitialized every item -> in : 1
range is constructed -> as : 1
constructed as a -> copy : 1
as a copy -> of : 3
copy of using -> placement : 1
of using placement -> class : 1
placement class function -> function : 1
class void size -> const : 1
except it fills -> uninitialized : 1
fills uninitialized starting -> with : 1
uninitialized starting with -> copies : 1
starting with copies -> of : 1
of are constructed -> using : 1
are constructed using -> placement : 1
constructed using placement -> class : 1
function in keyword -> header : 1
header declares types -> and : 2
related to dynamic -> memory : 1
to dynamic memory -> for : 1
dynamic memory for -> more : 1
memory for more -> information : 1
the and including -> placement : 1
and including placement -> and : 1
including placement and -> and : 1
placement and and -> the : 1
the and most -> programs : 1
and most programs -> do : 1
use the header -> is : 1
use the header -> and : 1
header is typically -> used : 1
used by libraries -> and : 1
by libraries and -> programs : 1
libraries and programs -> that : 1
and programs that -> implement : 1
programs that implement -> their : 1
that implement their -> own : 1
implement their own -> and : 1
own and functions -> or : 1
and functions or -> otherwise : 1
and functions or -> provide : 1
and functions or -> functors : 1
functions or otherwise -> provide : 1
or otherwise provide -> custom : 1
otherwise provide custom -> management : 1
provide custom management -> of : 1
custom management of -> dynamic : 1
management of dynamic -> a : 1
of dynamic a -> source : 1
dynamic a source -> file : 1
source file uses -> the : 1
file uses the -> standard : 1
uses the standard -> and : 1
standard and it -> does : 1
and it does -> not : 1
need to you -> can : 1
use the pointer -> placement : 1
the pointer placement -> without : 1
pointer placement without -> including : 1
placement without including -> this : 1
without including this -> in : 1
including this in -> order : 1
this in order -> to : 1
use the placement -> or : 1
the placement or -> catch : 1
placement or catch -> you : 1
catch you must -> include : 1
must include this -> programs : 1
include this programs -> do : 1
this programs do -> not : 1
do not call -> the : 1
call the operators -> but : 1
the operators but -> instead : 1
operators but instead -> use : 1
but instead use -> and : 1
instead use and -> and : 1
use and and -> the : 1
compiler generates calls -> using : 1
generates calls using -> the : 1
calls using the -> appropriate : 1
using the appropriate -> library : 1
the appropriate library -> implementors : 1
appropriate library implementors -> sometimes : 1
library implementors sometimes -> make : 1
implementors sometimes make -> direct : 1
sometimes make direct -> calls : 1
make direct calls -> to : 1
direct calls to -> the : 1
to the especially -> to : 1
the especially to -> allocate : 1
especially to allocate -> uninitialized : 1
to allocate uninitialized -> see : 1
allocate uninitialized see -> earlier : 1
uninitialized see earlier -> in : 1
chapter for specialized -> applications : 1
for specialized applications -> might : 1
specialized applications might -> implement : 1
applications might implement -> the : 1
implement the global -> and : 1
global and functions -> or : 1
functions or provide -> additional : 1
or provide additional -> overloaded : 1
provide additional overloaded -> operators : 1
additional overloaded operators -> for : 1
overloaded operators for -> specialized : 1
operators for specialized -> such : 1
for specialized such -> as : 1
specialized such as -> allocating : 1
is shared across -> process : 1
shared across process -> if : 1
across process if -> you : 1
process if you -> write : 1
own you should -> obey : 1
you should obey -> the : 1
should obey the -> following : 1
obey the following -> and : 1
following and and -> even : 1
and and even -> if : 1
and even if -> your : 1
even if your -> is : 1
if your is -> a : 1
your is a -> placement : 1
a placement you -> should : 1
placement you should -> have : 1
have a corresponding -> placement : 1
a expression throws -> an : 1
an a pointer -> that : 1
pointer that meets -> the : 1
meets the strictest -> alignment : 1
the strictest alignment -> requirements : 1
strictest alignment requirements -> of : 1
alignment requirements of -> any : 1
requirements of any -> that : 1
of any that -> in : 1
any that in -> and : 1
that in and -> the : 1
the standard function -> return : 1
standard function return -> aligned : 1
function return aligned -> situations : 1
return aligned situations -> by : 1
aligned situations by -> throwing : 1
situations by throwing -> a : 1
by throwing a -> class : 1
throwing a class -> that : 1
class that derives -> from : 1
derives from or -> returning : 1
derives from or -> to : 1
from or returning -> a : 1
or returning a -> null : 1
returning a null -> if : 1
null if you -> return : 1
if you return -> a : 1
you return a -> null : 1
a null your -> function : 1
null your function -> must : 1
your function must -> have : 1
have an empty -> exception : 1
an empty exception -> and : 1
empty exception and -> are : 1
exception and are -> member : 1
and are member -> include : 1
are member include -> the : 1
member include the -> keyword : 1
include the keyword -> as : 1
the keyword as -> a : 1
keyword as a -> reminder : 1
as a reminder -> to : 1
a reminder to -> the : 1
the human the -> compiler : 1
human the compiler -> always : 1
compiler always treats -> these : 1
always treats these -> functions : 1
treats these functions -> as : 1
functions as even -> if : 1
as even if -> you : 1
omit the operator -> new : 1
the operator new -> and : 1
and operator delete -> with : 2
operator delete with -> malloc : 2
delete with malloc -> and : 2
with malloc and -> shows : 1
with malloc and -> operator : 1
malloc and shows -> a : 1
shows a trivial -> implementation : 1
global and operator -> new : 1
malloc and operator -> ptr : 1
and operator ptr -> if : 1
operator ptr if -> throw : 1
ptr if throw -> return : 1
if throw return -> operator : 1
throw return operator -> const : 1
return operator operator -> const : 1
return operator void -> operator : 1
operator void operator -> void : 2
operator void operator -> const : 3
operator void operator -> global : 1
void operator void -> operator : 3
void operator const -> void : 3
void operator const -> operator : 1
operator const void -> operator : 3
const void operator -> operator : 1
const void operator -> const : 1
const void operator -> void : 1
void operator operator -> void : 1
operator operator void -> operator : 2
operator const operator -> class : 1
operator const operator -> operator : 2
const operator class -> exception : 1
operator class exception -> class : 1
class for failed -> memory : 1
for failed memory -> public : 1
failed memory public -> exception : 1
memory public exception -> virtual : 1
exception virtual virtual -> const : 3
const const with -> no : 1
const with no -> class : 1
const with no -> operator : 1
with no class -> is : 1
with no class -> can : 1
with no class -> specializes : 1
no class is -> an : 1
class is an -> exception : 1
an exception class -> that : 1
exception class that -> is : 1
that is thrown -> when : 1
is thrown when -> is : 1
is thrown when -> reading : 1
thrown when is -> unable : 1
when is unable -> to : 1
is unable to -> fulfill : 2
unable to fulfill -> a : 2
to fulfill a -> request : 2
fulfill a request -> to : 2
request to allocate -> as : 1
request to allocate -> it : 1
to allocate as -> with : 1
allocate as with -> any : 1
with any of -> the : 1
standard exception returns -> an : 1
exception returns an -> character : 1
returns an character -> in : 1
an character in -> object : 1
character in object -> requests : 1
in object requests -> null : 1
object requests null -> pointer : 1
requests null pointer -> return : 1
null pointer return -> when : 1
pointer return when -> out : 1
return when out -> of : 1
when out of -> extern : 1
out of extern -> const : 1
of extern const -> object : 1
extern const object -> is : 1
used in placement -> expressions : 1
in placement expressions -> to : 1
placement expressions to -> request : 1
placement expressions to -> specify : 1
expressions to request -> that : 1
to request that -> the : 1
request that the -> operator : 1
the operator return -> a : 1
operator return a -> null : 1
null pointer instead -> of : 3
pointer instead of -> throwing : 3
of throwing if -> the : 1
of throwing if -> sufficient : 2
throwing if the -> memory : 1
the memory allocation -> request : 1
memory allocation request -> cannot : 1
allocation request cannot -> be : 1
request cannot be -> type : 1
request cannot be -> it : 1
be type does -> not : 1
does not do -> it : 1
not do it -> is : 1
only in overloaded -> placement : 1
in overloaded placement -> and : 1
overloaded placement and -> that : 1
placement and that -> is : 1
and that is -> also : 1
that is also -> accepted : 1
is also accepted -> by : 1
also accepted by -> overloaded : 1
accepted by overloaded -> for : 1
by overloaded for -> symmetry : 1
overloaded for symmetry -> with : 1
for symmetry with -> the : 1
symmetry with the -> version : 1
with the version -> of : 1
version of behaves -> just : 1
of behaves just -> like : 1
like the ordinary -> like : 1
the ordinary like -> any : 1
ordinary like any -> placement : 1
like any placement -> it : 1
any placement it -> is : 1
placement it is -> called : 1
it is called -> only : 1
it is called -> from : 1
is called only -> if : 1
called only if -> the : 1
if the placement -> expression : 1
the placement expression -> throws : 1
placement expression throws -> an : 2
throws an delete -> global : 1
an delete global -> operator : 1
delete global operator -> operator : 1
global operator operator -> void : 1
global operator operator -> operator : 1
void operator global -> function : 1
operator global function -> is : 1
operator global function -> allocates : 1
global function is -> called : 1
called from a -> expression : 1
called from a -> the : 1
from a expression -> to : 1
a expression to -> free : 1
expression to free -> the : 1
free the which -> points : 1
the which points -> must : 1
which points must -> have : 1
points must have -> been : 1
by a corresponding -> call : 1
by a corresponding -> expression : 1
a corresponding call -> to : 1
corresponding call to -> or : 1
to or be -> a : 1
or be a -> null : 1
or be a -> template : 1
a null you -> must : 1
null you must -> not : 1
not call more -> than : 1
call more than -> once : 1
than once for -> the : 1
same if is -> returns : 1
is returns without -> doing : 1
returns without doing -> first : 1
without doing first -> two : 1
doing first two -> versions : 1
first two versions -> of : 1
two versions of -> free : 1
two versions of -> with : 2
versions of free -> the : 1
of free the -> memory : 1
that points which -> must : 1
points which must -> have : 1
have been allocated -> by : 1
been allocated by -> calling : 1
allocated by calling -> the : 1
calling the plain -> form : 1
the plain form -> of : 1
plain form of -> these : 1
form of these -> forms : 1
of these forms -> of : 1
these forms of -> are : 1
forms of are -> called : 1
of are called -> from : 1
are called from -> a : 1
first is called -> for : 1
a scalar and -> the : 1
scalar and the -> second : 1
second is called -> for : 1
an array remaining -> forms : 1
array remaining forms -> are : 1
remaining forms are -> called : 1
forms are called -> only : 1
are called only -> when : 1
called only when -> the : 1
corresponding placement expression -> throws : 1
exception during the -> functions : 1
during the functions -> free : 1
the functions free -> the : 1
functions free the -> memory : 1
points the last -> two : 1
two forms do -> see : 1
forms do see -> the : 1
do see the -> expression : 1
see the expression -> in : 1
expression in to -> learn : 1
learn how and -> when : 1
and when placement -> is : 1
when placement is -> other : 1
placement is other -> identifiers : 1
is other identifiers -> in : 1
other identifiers in -> the : 2
identifiers in the -> standard : 2
standard is global -> and : 2
is global and -> is : 2
global and is -> not : 2
in the unlike -> with : 2
the unlike with -> other : 2
unlike with other -> functions : 2
with other functions -> in : 2
other functions in -> the : 2
can provide your -> own : 2
your own implementation -> of : 2
own implementation of -> which : 2
of which replaces -> the : 2
which replaces the -> standard : 2
replaces the standard -> you : 2
standard you replace -> the : 2
you replace the -> last : 2
replace the last -> two : 2
last two versions -> of : 2
versions of with -> your : 2
of with your -> own : 2
your own new -> global : 1
own new global -> operator : 1
new global operator -> operator : 1
const operator operator -> const : 1
const operator operator -> global : 1
operator operator global -> function : 1
global function allocates -> memory : 1
function allocates memory -> and : 1
memory and returns -> a : 1
newly allocated the -> memory : 1
allocated the memory -> must : 1
memory must later -> be : 1
must later be -> released : 1
later be released -> by : 1
be released by -> a : 1
released by a -> corresponding : 1
a corresponding expression -> or : 1
corresponding expression or -> an : 1
expression or an -> explicit : 1
call to first -> version : 1
to first version -> of : 1
first version of -> allocates : 1
version of allocates -> at : 1
of allocates at -> least : 1
allocates at least -> bytes : 1
at least bytes -> of : 1
least bytes of -> suitably : 1
bytes of suitably -> aligned : 1
of suitably aligned -> to : 1
suitably aligned to -> store : 1
aligned to store -> any : 1
store any and -> returns : 1
any and returns -> a : 1
if the request -> cannot : 1
the request cannot -> be : 1
cannot be it -> throws : 1
be it throws -> second : 1
it throws second -> version : 1
throws second version -> is : 1
second version is -> like : 1
version is like -> the : 3
the but it -> returns : 2
the but it -> allocates : 1
the but it -> also : 1
but it returns -> a : 2
throwing if sufficient -> memory : 2
if sufficient memory -> cannot : 2
sufficient memory cannot -> be : 2
cannot be third -> version : 1
be third version -> is : 1
third version is -> like : 1
but it allocates -> memory : 1
it allocates memory -> for : 1
memory for storing -> an : 1
for storing an -> array : 1
storing an array -> of : 1
array of it -> might : 1
of it might -> allocate : 1
it might allocate -> more : 1
might allocate more -> than : 1
allocate more than -> bytes : 1
than bytes to -> permit : 1
bytes to permit -> the : 1
to permit the -> library : 1
permit the library -> to : 1
the library to -> store : 1
library to store -> additional : 1
to store additional -> bookkeeping : 1
to store additional -> runtime : 1
store additional bookkeeping -> you : 1
additional bookkeeping you -> must : 1
bookkeeping you must -> use : 1
use the array -> form : 1
array form of -> to : 1
form of to -> free : 1
of to free -> this : 1
to free this -> fourth : 1
free this fourth -> version : 1
this fourth version -> is : 1
fourth version is -> like : 1
cannot be allocate -> the : 1
be allocate the -> functions : 1
allocate the functions -> first : 1
the functions first -> try : 1
functions first try -> to : 1
first try to -> allocate : 1
try to allocate -> if : 1
to allocate if -> they : 1
allocate if they -> they : 1
if they they -> call : 1
they they call -> the : 1
they call the -> handler : 1
call the handler -> function : 1
the handler function -> set : 1
the handler function -> fails : 1
handler function set -> by : 1
function set by -> the : 1
call to then -> they : 1
to then they -> try : 1
then they try -> again : 1
they try again -> to : 1
try again to -> allocate : 1
again to allocate -> this : 1
to allocate this -> loop : 1
allocate this loop -> repeats : 1
this loop repeats -> until : 1
loop repeats until -> the : 1
repeats until the -> request : 1
until the request -> is : 1
request is fulfilled -> or : 1
is fulfilled or -> the : 1
fulfilled or the -> handler : 1
or the handler -> function : 1
handler function fails -> to : 1
function fails to -> the : 1
fails to the -> versions : 1
to the versions -> of : 1
function return if -> the : 1
if the most -> recent : 1
call to was -> a : 1
to was a -> null : 1
was a null -> pointer : 1
pointer or if -> the : 1
the new handler -> function : 1
new handler function -> throws : 1
handler function throws -> final : 1
function throws final -> two : 1
throws final two -> versions : 1
final two versions -> do : 1
two versions do -> nothing : 1
versions do nothing -> except : 1
do nothing except -> return : 3
nothing except return -> these : 1
nothing except return -> the : 1
nothing except return -> streamsize : 1
except return these -> forms : 1
return these forms -> permit : 1
these forms permit -> placement : 1
forms permit placement -> expressions : 1
permit placement expressions -> to : 1
expressions to specify -> a : 1
specify a memory -> location : 1
a memory location -> where : 1
memory location where -> an : 1
location where an -> object : 1
where an object -> will : 1
an object will -> be : 1
will be other -> identifiers : 1
be other identifiers -> in : 1
own function sets -> handler : 1
function sets handler -> for : 1
sets handler for -> obtaining : 1
handler for obtaining -> void : 1
for obtaining void -> function : 1
obtaining void function -> stores : 1
void function stores -> a : 1
function stores a -> function : 1
stores a function -> pointer : 1
function pointer for -> a : 1
pointer for a -> function : 1
function that obtains -> additional : 1
that obtains additional -> memory : 1
obtains additional memory -> from : 1
additional memory from -> the : 1
memory from the -> operating : 1
memory from the -> host : 1
from the operating -> system : 1
operating system for -> use : 1
system for use -> by : 1
by the when -> the : 1
when the default -> is : 1
default is unable -> to : 1
allocate it calls -> the : 1
calls the handler -> that : 1
the handler that -> was : 1
handler that was -> set : 1
that was set -> by : 1
was set by -> the : 1
call to this -> handler : 1
to this handler -> must : 1
this handler must -> do : 1
handler must do -> one : 1
must do one -> of : 1
do one of -> the : 1
the more memory -> from : 1
more memory from -> the : 1
from the host -> a : 1
the host a -> type : 1
host a type -> that : 1
from or to -> halt : 1
or to halt -> the : 1
to halt the -> return : 1
halt the return -> value : 1
the previous or -> for : 1
previous or for -> the : 1
first call to -> header : 1
call to header -> declares : 1
to header declares -> several : 1
declares several function -> templates : 1
templates for numerical -> see : 1
for numerical see -> earlier : 1
numerical see earlier -> in : 1
see for math -> functions : 1
for math functions -> that : 1
math functions that -> operate : 1
operate on scalar -> the : 1
on scalar the -> section : 1
scalar the section -> contains : 1
the section contains -> the : 1
section contains the -> standard : 1
contains the standard -> which : 1
the standard which -> might : 1
standard which might -> be : 1
might be useful -> when : 1
be useful when -> calling : 1
useful when calling -> the : 1
when calling the -> numeric : 1
calling the numeric -> to : 1
the numeric to -> and : 1
numeric to and -> for : 1
information about algorithms -> and : 1
about algorithms and -> see : 1
algorithms and see -> for : 1
about other libraries -> that : 1
other libraries that -> provide : 1
provide additional numeric -> function : 1
additional numeric function -> function : 1
numeric function function -> template : 1
template computes a -> value : 1
computes a value -> from : 1
value from all -> items : 1
from all items -> in : 1
a typename t -> inputiter : 1
typename t inputiter -> t : 2
t inputiter t -> template : 1
t inputiter t -> binaryop : 1
inputiter t template -> typename : 1
t template typename -> typename : 2
typename typename t -> inputiter : 1
typename typename t -> t : 2
inputiter t binaryop -> function : 1
t binaryop function -> template : 1
binaryop function template -> sums : 1
function template sums -> all : 1
template sums all -> the : 1
sums all the -> values : 1
the range added -> with : 1
range added with -> and : 1
added with and -> returns : 1
with and returns -> the : 1
returns the the -> result : 1
the result and -> intermediate : 1
result and intermediate -> sum : 1
and intermediate sum -> have : 1
intermediate sum have -> the : 1
sum have the -> same : 1
second version calls -> instead : 3
second version calls -> as : 1
version calls instead -> of : 3
calls instead of -> using : 3
instead of using -> the : 4
instead of using -> see : 1
using the addition -> result : 1
using the addition -> operator : 1
the addition result -> is : 1
addition result is -> computed : 1
result is computed -> as : 2
is computed as -> for : 2
computed as for -> each : 2
as for each -> in : 2
each in the -> range : 2
range in which -> is : 1
which is initialized -> to : 2
to the final -> value : 2
to the final -> where : 1
the final value -> of : 2
final value of -> is : 2
of is function -> or : 1
is function or -> functor : 1
or functor must -> not : 3
functor must not -> have : 3
have any side -> is : 1
have any side -> the : 2
any side is -> is : 1
side is is -> called : 1
template computes differences -> of : 1
computes differences of -> adjacent : 1
differences of adjacent -> elements : 2
of adjacent elements -> in : 2
adjacent elements in -> a : 1
adjacent elements in -> the : 1
initer outiter template -> typename : 2
outiter template typename -> typename : 2
initer outiter binop -> function : 2
outiter binop function -> computes : 1
outiter binop function -> template : 1
binop function computes -> the : 1
computes the differences -> of : 1
the differences of -> adjacent : 1
range and assigns -> those : 1
and assigns those -> differences : 1
assigns those differences -> to : 1
those differences to -> the : 1
differences to the -> output : 1
output range starting -> at : 1
using the subtraction -> each : 1
the subtraction each -> in : 1
subtraction each in -> and : 1
each in and -> assign : 1
in and assign -> in : 1
and assign in -> which : 1
assign in which -> is : 2
assign in which -> and : 1
which is initially -> it : 1
is initially it -> becomes : 1
initially it becomes -> each : 1
it becomes each -> assignment : 1
becomes each assignment -> to : 1
each assignment to -> return : 1
assignment to return -> value : 1
the iterator pointing -> to : 1
iterator pointing to -> one : 1
last element function -> or : 1
element function or -> functor : 1
any side the -> iterator : 2
side the iterator -> can : 2
same as is -> is : 2
as is is -> called : 2
as is is -> is : 1
template computes inner -> product : 1
computes inner product -> of : 1
inner product of -> two : 2
product of two -> typename : 1
product of two -> it : 1
two typename typename -> t : 1
two typename typename -> typename : 1
typename t t -> template : 1
typename t t -> function : 1
t t template -> typename : 1
t t function -> template : 1
template computes an -> inner : 1
computes an inner -> product : 1
an inner product -> of : 1
of two it -> accumulates : 1
two it accumulates -> the : 1
it accumulates the -> products : 1
accumulates the products -> of : 1
the products of -> corresponding : 1
products of corresponding -> items : 1
of corresponding items -> in : 1
corresponding items in -> and : 1
items in and -> in : 1
which the second -> version : 1
version calls as -> the : 1
calls as the -> accumulator : 1
as the accumulator -> operator : 1
the accumulator operator -> of : 1
accumulator operator of -> and : 1
operator of and -> as : 1
as the multiplication -> result : 1
the multiplication result -> is : 1
multiplication result is -> computed : 1
each in in -> which : 1
in which assign -> in : 1
which assign in -> which : 1
is and functions -> or : 1
functions or functors -> must : 1
or functors must -> not : 1
functors must not -> have : 1
not have side -> is : 1
have side is -> and : 1
side is and -> are : 1
is and are -> called : 1
and are called -> exactly : 1
are called exactly -> function : 1
function template compute -> sums : 1
template compute sums -> of : 1
compute sums of -> subranges : 1
sums of subranges -> in : 1
of subranges in -> a : 1
subranges in a -> typename : 1
binop function template -> assigns : 1
template assigns partial -> sums : 1
assigns partial sums -> to : 1
partial sums to -> the : 1
sums to the -> range : 1
at the partial -> sums : 1
the partial sums -> are : 1
partial sums are -> computed : 1
sums are computed -> by : 1
are computed by -> accumulating : 1
computed by accumulating -> successively : 1
by accumulating successively -> larger : 1
accumulating successively larger -> subranges : 1
successively larger subranges -> of : 1
larger subranges of -> the : 1
subranges of the -> first : 1
the first result -> item : 1
first result item -> is : 1
result item is -> the : 1
item is the -> second : 1
second is and -> so : 1
the addition operator -> each : 1
addition operator each -> in : 1
operator each in -> assign : 1
each in assign -> in : 1
in assign in -> which : 1
which and computes -> the : 1
and computes the -> sum : 1
computes the sum -> in : 1
the sum in -> the : 1
sum in the -> manner : 1
manner of return -> value : 1
of return value -> is : 1
is the pointing -> to : 1
the pointing to -> one : 1
last item function -> or : 1
item function or -> functor : 1
called exactly header -> declares : 1
exactly header declares -> the : 1
declares the output -> stream : 1
output stream class -> and : 1
stream class and -> for : 1
and for derived -> classes : 2
for derived classes -> that : 2
derived classes that -> write : 2
derived classes that -> might : 1
classes that write -> to : 2
that write to -> files : 1
that write to -> see : 1
write to files -> and : 1
to files and -> for : 1
write to see -> for : 1
for the see -> for : 1
about the refer -> to : 2
class for output -> class : 1
class for output -> traits : 1
class for output -> string : 2
for output class -> traits : 1
public types from -> typedef : 1
types from typedef -> chart : 1
from typedef chart -> typedef : 1
class formatted output -> short : 1
formatted output short -> int : 1
output short int -> long : 1
short int long -> double : 2
long double unformatted -> output : 1
double unformatted output -> streamsize : 1
unformatted output streamsize -> class : 1
output streamsize class -> template : 1
streamsize class template -> is : 1
streamsize class template -> manages : 1
for all output -> it : 1
all output it -> declares : 1
output it declares -> members : 1
members for writing -> to : 1
for writing to -> streams : 1
writing to streams -> and : 1
to streams and -> for : 1
act of writing -> to : 1
writing to a -> stream : 1
writing to a -> character : 1
to the writes -> go : 1
the writes go -> through : 1
writes go through -> a : 1
which provides access -> to : 1
provides access to -> the : 1
function for in -> the : 1
performing an output -> operation : 1
an output operation -> or : 1
an output operation -> throws : 1
output operation or -> a : 1
a stream constructs -> a : 1
if the evaluates -> to : 1
to the write -> operation : 1
the write operation -> if : 1
write operation if -> the : 1
if the write -> throws : 1
if the write -> sets : 1
the write throws -> an : 1
write throws an -> is : 1
before the output -> function : 1
the output function -> see : 1
the output function -> did : 1
output function see -> later : 1
more an output -> operation : 1
output operation throws -> an : 1
the original following -> are : 1
original following are -> the : 1
member a object -> and : 1
and then initializes -> it : 1
then initializes it -> by : 1
initializes it by -> calling : 1
it by calling -> the : 1
calling the object -> without : 1
the object without -> calling : 1
object without calling -> any : 1
calling any functions -> of : 1
any functions of -> the : 1
the stream derived -> classes : 1
stream derived classes -> that : 1
classes that might -> have : 1
that might have -> unflushed : 1
might have unflushed -> data : 1
have unflushed data -> must : 1
unflushed data must -> take : 1
data must take -> appropriate : 1
must take appropriate -> action : 1
take appropriate action -> to : 1
appropriate action to -> ensure : 1
action to ensure -> that : 1
that the buffer -> is : 1
that the buffer -> has : 2
the buffer is -> flushed : 1
the buffer is -> extended : 1
the buffer is -> stream : 1
the buffer is -> constructed : 4
is flushed before -> the : 1
flushed before the -> stream : 1
before the stream -> object : 1
stream object is -> the : 1
is the output -> if : 1
is the output -> position : 3
is the output -> positions : 1
is the output -> pointers : 1
output if is -> not : 1
if returns sets -> the : 1
returns sets the -> return : 1
sets the return -> value : 2
single character if -> the : 1
the write sets -> the : 1
write sets the -> return : 1
is to seek -> to : 1
known position current -> or : 1
position current or -> if : 1
calls or if -> is : 1
if is does -> the : 1
is does the -> return : 1
is does the -> internal : 1
does the return -> value : 1
is the current -> position : 1
is the current -> stream : 1
characters from if -> the : 1
from if the -> output : 1
from if the -> input : 1
the output fails -> after : 1
output fails after -> any : 1
fails after any -> sets : 1
after any sets -> and : 1
any sets and -> stops : 1
sets and stops -> the : 1
and stops the -> return : 1
stops the return -> value : 1
returns see later -> in : 1
section for an -> example : 1
of a manipulator -> that : 2
manipulator that uses -> this : 2
that uses this -> and : 1
that uses this -> short : 1
uses this and -> returns : 1
this and returns -> see : 1
uses this short -> int : 1
this short int -> long : 1
double a value -> and : 1
the output these -> functions : 1
output these functions -> start : 1
these functions start -> by : 1
functions start by -> creating : 1
start by creating -> a : 1
by creating a -> they : 1
by creating a -> if : 1
creating a they -> then : 1
a they then -> use : 1
they then use -> the : 1
to format if -> the : 1
if the formatting -> is : 1
the formatting is -> if : 1
formatting is if -> an : 1
is is see -> the : 1
to format iter -> if : 1
format iter if -> characters : 1
iter if characters -> from : 1
if characters from -> the : 1
is is characters -> are : 1
from and written -> to : 1
written to until -> one : 1
to until one -> of : 1
following is reached -> on : 1
is reached on -> fails : 1
reached on fails -> is : 1
on fails is -> exception : 1
fails is exception -> is : 1
is exception is -> thrown : 1
thrown when reading -> from : 1
reading from is -> no : 1
from is no -> characters : 1
characters are is -> in : 1
are is in -> class : 1
is in class -> sentry : 1
in class sentry -> class : 1
for output traits -> class : 1
output traits class -> explicit : 1
traits class explicit -> not : 1
class explicit not -> defined : 1
explicit not defined -> not : 1
to each output -> the : 1
output the sentry -> object : 1
when the output -> operation : 1
the output operation -> finishes : 1
output operation finishes -> and : 1
function the sentry -> manages : 1
the sentry manages -> tied : 1
sentry manages tied -> streams : 1
streams and unit -> stream : 1
and unit stream -> passes : 1
unit stream passes -> itself : 1
passes itself to -> the : 1
itself to the -> if : 1
sentry calls sentry -> preparation : 1
calls sentry preparation -> is : 1
sentry preparation is -> sentry : 1
preparation is sentry -> destructor : 1
is sentry destructor -> flushes : 1
sentry destructor flushes -> the : 1
destructor flushes the -> buffer : 1
flushes the buffer -> if : 1
the buffer if -> the : 1
buffer if the -> flag : 1
flag is on -> and : 1
is on and -> the : 1
on and the -> output : 1
and the output -> function : 1
and the output -> array : 1
and the output -> pointers : 1
output function did -> not : 1
function did not -> throw : 1
did not throw -> an : 1
not throw an -> class : 1
throw an class -> class : 1
function template manipulator -> to : 3
template manipulator to -> write : 2
template manipulator to -> flush : 1
manipulator to write -> an : 2
write an class -> function : 2
an class function -> template : 2
class function template -> is : 3
class function template -> reads : 1
manipulator that writes -> a : 2
that writes a -> newline : 1
that writes a -> null : 1
writes a newline -> to : 1
a newline to -> and : 1
newline to and -> then : 1
to and then -> calls : 2
to and then -> adds : 1
then calls you -> do : 1
calls you do -> not : 1
need to flush -> the : 3
the output do -> not : 1
output do not -> use : 1
not use write -> a : 1
write a plain -> character : 1
plain character if -> you : 1
character if you -> feel : 1
if you feel -> you : 1
you feel you -> need : 1
feel you need -> to : 1
output stream after -> finishing : 1
stream after finishing -> a : 1
after finishing a -> line : 1
finishing a line -> of : 1
line of consider -> using : 1
consider using unit -> buffering : 1
using unit buffering -> for : 1
unit buffering for -> the : 1
for the or -> if : 1
the output prior -> to : 1
output prior to -> reading : 1
an input you -> can : 1
input you can -> tie : 1
you can tie -> the : 1
can tie the -> streams : 1
tie the streams -> instead : 1
the streams instead -> of : 1
of using see -> the : 1
using see the -> class : 1
template for information -> about : 1
information about tied -> streams : 1
about tied streams -> and : 1
streams and the -> class : 1
class in for -> information : 1
information about unit -> in : 1
about unit in -> in : 1
unit in in -> function : 1
writes a null -> character : 1
null character by -> to : 1
character by to -> to : 1
by to to -> mark : 1
to to mark -> the : 1
mark the end -> of : 1
used only when -> writing : 1
only when writing -> to : 1
that has length -> function : 1
has length function -> function : 1
length function function -> template : 1
manipulator to flush -> output : 1
to flush output -> class : 1
flush output class -> function : 1
output class function -> template : 1
manipulator that calls -> is : 1
that calls is -> class : 1
calls is class -> class : 1
function template character -> output : 1
template character output -> class : 1
output class chart -> class : 1
class chart class -> char : 1
chart class char -> char : 1
class char char -> signed : 1
char char signed -> char : 1
char signed char -> unsigned : 1
signed char unsigned -> char : 1
char unsigned char -> class : 1
unsigned char class -> const : 1
char class const -> class : 1
class const class -> const : 1
const class const -> const : 1
class const const -> const : 3
class const const -> class : 1
class const const -> operator : 1
const const signed -> const : 1
const signed const -> unsigned : 1
signed const unsigned -> operator : 1
const unsigned operator -> writes : 1
unsigned operator writes -> a : 1
a character string -> to : 1
character string to -> the : 1
output stream as -> with : 1
stream as with -> other : 1
with other formatted -> output : 1
other formatted output -> a : 1
formatted output a -> object : 1
output a object -> is : 1
or string is -> written : 1
is written with -> appropriate : 1
is written with -> a : 3
written with appropriate -> each : 1
with appropriate each -> character : 1
appropriate each character -> is : 1
character type by -> calling : 1
type by calling -> is : 1
by calling is -> class : 1
by calling is -> determined : 1
calling is class -> class : 1
class class output -> class : 1
class output class -> specializes : 1
class wide output -> class : 1
class wide output -> string : 1
wide output class -> specializes : 1
and container these -> class : 1
container these class -> templates : 1
templates are not -> containers : 1
are not containers -> in : 1
not containers in -> their : 1
containers in their -> own : 1
in their own -> but : 1
their own but -> they : 1
own but they -> adapt : 1
but they adapt -> containers : 1
they adapt containers -> to : 1
adapt containers to -> present : 1
containers to present -> the : 2
to present the -> behavior : 2
present the behavior -> of : 2
of a queue -> or : 1
a queue or -> priority : 1
queue or priority -> is : 1
or priority is -> a : 1
priority is a -> sequence : 1
items that supports -> insertion : 2
that supports insertion -> at : 1
that supports insertion -> and : 1
supports insertion at -> one : 1
insertion at one -> end : 1
end and removal -> from : 1
and removal from -> the : 1
removal from the -> other : 1
the other because -> the : 1
other because the -> first : 1
first item inserted -> into : 1
item inserted into -> a : 2
inserted into a -> queue : 1
inserted into a -> stack : 1
into a queue -> is : 1
a queue is -> the : 1
a queue is -> sometimes : 1
queue is the -> first : 2
queue is the -> largest : 1
first item a -> queue : 1
first item a -> stack : 1
item a queue -> is : 1
queue is sometimes -> called : 1
called a fifo -> of : 1
a fifo of -> preserving : 1
fifo of preserving -> fifo : 1
of preserving fifo -> a : 1
preserving fifo a -> maintains : 1
fifo a maintains -> heap : 1
a maintains heap -> which : 1
maintains heap which -> ensures : 1
heap which ensures -> that : 1
the largest item -> is : 1
the largest item -> from : 1
the largest item -> in : 1
largest item is -> always : 1
item is always -> in : 1
is always in -> strict : 1
always in strict -> the : 1
in strict the -> first : 1
strict the first -> item : 1
in a priority -> queue : 1
a priority queue -> is : 1
queue is not -> less : 1
is not less -> than : 1
not less than -> any : 1
less than any -> other : 1
than any other -> item : 1
any other item -> in : 1
other item in -> the : 1
called the but -> you : 1
can also think -> of : 1
also think of -> it : 1
it as the -> most : 1
the most important -> item : 1
most important item -> or : 1
important item or -> the : 1
item or the -> one : 1
with the highest -> and : 1
the highest and -> for : 1
highest and for -> information : 1
template compares queues -> for : 6
compares queues for -> typename : 6
queues for typename -> bool : 6
const operator compares -> two : 12
const operator compares -> each : 6
compares two queues -> for : 2
compares two queues -> by : 4
two queues for -> equality : 1
two queues for -> inequality : 1
queues for equality -> by : 1
for equality by -> comparing : 2
equality by comparing -> the : 2
comparing the adapted -> containers : 12
the adapted containers -> the : 12
adapted containers the -> return : 12
containers the return -> value : 12
queues for inequality -> by : 1
for inequality by -> comparing : 2
inequality by comparing -> the : 2
two queues by -> comparing : 4
queues by comparing -> the : 4
class template priority -> queue : 1
template priority queue -> container : 1
queue container typename -> container : 1
container typename container -> typename : 1
typename container typename -> compare : 1
container typename compare -> class : 1
typename compare class -> typedef : 1
compare class typedef -> typename : 1
container explicit x -> const : 1
explicit x const -> template : 1
x const template -> inputiterator : 1
inputiterator const x -> const : 1
x const bool -> const : 1
return const const -> return : 4
void void container -> compare : 1
void void container -> class : 1
void container compare -> class : 1
container compare class -> template : 1
compare class template -> is : 1
adapter for any -> sequence : 3
for any sequence -> container : 2
for any sequence -> as : 1
any sequence container -> that : 2
that supports random -> such : 1
that supports random -> access : 1
supports random such -> as : 1
random such as -> and : 1
as and default -> is : 1
and default is -> the : 1
and default is -> is : 1
default is the -> priority : 1
is the priority -> queue : 1
the priority queue -> keeps : 1
the priority queue -> by : 2
the priority queue -> is : 1
priority queue keeps -> its : 1
queue keeps its -> elements : 1
keeps its elements -> in : 1
its elements in -> heap : 1
elements in heap -> so : 1
in heap so -> it : 1
heap so it -> requires : 1
so it requires -> a : 1
it requires a -> comparator : 1
requires a comparator -> template : 1
a comparator template -> is : 1
comparator template is -> not : 1
is not itself -> a : 3
not itself a -> standard : 3
itself a standard -> it : 3
a standard it -> cannot : 3
standard it cannot -> be : 3
the standard note -> the : 3
standard note the -> lack : 3
note the lack -> of : 3
lack of and -> member : 3
of and member -> the : 3
member the adapter -> is : 3
the adapter is -> useful : 3
adapter is useful -> only : 3
is useful only -> for : 3
useful only for -> simple : 3
only for simple -> has : 1
only for simple -> of : 2
for simple has -> no : 1
simple has no -> comparison : 1
has no comparison -> of : 1
no comparison of -> the : 1
comparison of the -> members : 1
members of are -> straightforward : 2
members of are -> when : 4
of are straightforward -> mappings : 2
are straightforward mappings -> from : 3
straightforward mappings from -> a : 3
mappings from a -> simple : 3
a simple queue -> protocol : 2
simple queue protocol -> to : 2
queue protocol to -> the : 2
protocol to the -> underlying : 3
underlying container the -> members : 3
container the members -> const : 1
container the members -> cont : 1
container the members -> the : 1
the members const -> cont : 1
members const cont -> to : 1
const cont to -> the : 1
cont to the -> data : 2
data member copies -> to : 2
member copies to -> and : 2
copies to and -> then : 2
then calls to -> initialize : 1
then calls to -> restore : 1
calls to initialize -> the : 1
initialize the priority -> cont : 1
the priority cont -> to : 1
priority cont to -> the : 1
and then adds -> the : 1
then adds the -> elements : 1
adds the elements -> to : 1
elements to the -> container : 1
to the container -> by : 1
the container by -> calling : 1
by calling this -> method : 1
calling this method -> initializes : 1
this method initializes -> the : 1
method initializes the -> priority : 1
initializes the priority -> queue : 1
priority queue by -> calling : 2
queue by calling -> if : 1
queue by calling -> and : 1
if the priority -> queue : 1
largest item from -> the : 1
from the priority -> queue : 1
by calling and -> then : 1
by calling and -> the : 1
by calling and -> returning : 1
and then erasing -> the : 1
then erasing the -> last : 1
container and then -> calls : 1
calls to restore -> priority : 1
to restore priority -> queue : 1
restore priority queue -> the : 1
priority queue the -> number : 1
queue the number -> of : 1
in the priority -> the : 1
in the priority -> and : 1
the priority the -> largest : 1
priority the largest -> item : 1
largest item in -> the : 1
the priority and -> in : 1
priority and in -> in : 1
and in in -> in : 1
class template queue -> container : 1
template queue container -> class : 1
queue container class -> container : 1
container class container -> class : 2
class container class -> typedef : 2
container class typedef -> typename : 2
container explicit bool -> const : 2
explicit bool const -> return : 2
void container class -> template : 1
that supports the -> and : 1
supports the and -> see : 1
supports the and -> default : 1
the and see -> the : 1
containers that are -> default : 1
that are default -> is : 1
are default is -> is : 1
default is is -> not : 2
for simple of -> the : 2
simple of the -> members : 2
members of queue -> are : 1
of queue are -> straightforward : 1
queue are straightforward -> mappings : 1
the members cont -> an : 1
members cont an -> existing : 1
cont an existing -> container : 1
an existing container -> and : 1
existing container and -> copies : 1
and copies its -> contents : 1
copies its contents -> into : 1
its contents into -> the : 1
contents into the -> with : 1
into the with -> no : 1
no the constructor -> creates : 1
the constructor creates -> a : 1
constructor creates a -> empty : 1
creates a empty -> container : 1
a empty container -> for : 1
empty container for -> the : 1
container for the -> the : 1
in the that -> the : 2
that was added -> most : 1
was added most -> recently : 1
added most recently -> to : 1
most recently to -> the : 1
recently to the -> if : 1
if the queue -> is : 1
the queue is -> the : 1
from the at -> the : 1
on and set -> is : 1
and set is -> a : 1
that stores looking -> up : 1
stores looking up -> inserting : 1
or better sets -> support : 1
better sets support -> bidirectional : 1
sets support bidirectional -> iterators : 1
iterators random and -> for : 1
random and for -> information : 1
class template set -> container : 2
template set container -> with : 2
set container with -> duplicate : 1
set container with -> unique : 1
with duplicate typename -> compare : 1
duplicate typename compare -> typename : 1
key typedef key -> typedef : 2
key typedef compare -> typedef : 2
compare typedef compare -> typedef : 2
typedef explicit comp -> const : 2
iterator iterator bool -> iterator : 2
iterator bool iterator -> iterator : 1
iterator bool iterator -> const : 1
bool iterator iterator -> const : 1
standard container that -> contains : 3
container that contains -> an : 2
container that contains -> use : 1
that contains an -> ordered : 2
contains an ordered -> set : 2
an ordered set -> of : 2
ordered set of -> keys : 1
ordered set of -> unique : 1
set of keys -> of : 1
of keys of -> type : 1
keys of type -> the : 1
keys of type -> iterators : 1
type the keys -> can : 1
the keys can -> be : 1
keys can be -> that : 1
be that the -> multiset : 1
be that the -> standard : 1
that the multiset -> can : 1
the multiset can -> contain : 1
multiset can contain -> more : 1
can contain more -> than : 1
contain more than -> one : 1
than one instance -> of : 1
a particular iterators -> are : 1
particular iterators are -> note : 1
iterators are note -> that : 2
note that keys -> are : 2
modify a erase -> the : 2
a erase the -> key : 2
the new as -> shown : 2
new as shown -> in : 2
class a keys -> are : 1
the keys do -> not : 1
keys do not -> need : 1
to be when -> searching : 1
be when searching -> for : 1
when searching for -> they : 1
searching for they -> are : 1
using the function -> or : 1
or functor specified -> by : 1
functor specified by -> the : 1
the template two -> and : 1
template two and -> are : 1
are different if -> is : 1
different if is -> true : 1
for a set -> container : 2
a set container -> that : 2
set container that -> stores : 1
set container that -> can : 1
that stores unique -> into : 1
stores unique into -> a : 1
unique into a -> multiset : 1
into a multiset -> does : 1
a multiset does -> not : 1
multiset does not -> invalidate : 1
for that set -> or : 2
that set or -> references : 1
that set or -> any : 1
set or references -> to : 1
references to items -> in : 2
set and searching -> for : 2
in a set -> usually : 2
a set usually -> take : 2
set usually take -> logarithmic : 2
an takes constant -> amortized : 2
takes constant amortized -> over : 2
constant amortized over -> many : 2
amortized over many -> following : 2
over many following -> are : 2
many following are -> the : 2
an empty an -> empty : 2
empty an empty -> multiset : 1
empty an empty -> set : 1
an empty multiset -> and : 1
empty multiset and -> then : 1
multiset and then -> copies : 1
copies all items -> in : 2
new the complexity -> is : 2
if the keys -> in : 2
the keys in -> are : 2
keys in are -> already : 2
in are already -> if : 2
are already if -> they : 2
already if they -> are : 2
which a new -> multiset : 1
which a new -> set : 1
a new multiset -> and : 1
new multiset and -> copies : 1
multiset and copies -> the : 1
number of keys -> that : 2
of keys that -> are : 2
keys that are -> equivalent : 2
to the complexity -> is : 1
complexity is in -> which : 1
as a complexity -> is : 2
complexity is iterator -> one : 2
is iterator one -> or : 2
or more elements -> from : 2
more elements from -> the : 2
erases the item -> at : 2
erases the item -> equivalent : 1
item at in -> constant : 2
erases the items -> equivalent : 1
items the third -> version : 1
two forms run -> in : 1
forms run in -> time : 1
run in time -> proportional : 1
in time proportional -> to : 1
proportional to in -> which : 2
which the number -> of : 1
items for a -> key : 1
for a key -> that : 2
a key that -> is : 2
key that is -> equivalent : 2
that is equivalent -> to : 2
to that key -> or : 2
that key or -> if : 2
key or if -> it : 2
of its occurrences -> in : 1
its occurrences in -> the : 1
occurrences in the -> the : 1
more items into -> the : 2
items into the -> the : 1
items into the -> but : 1
version inserts in -> logarithmic : 1
inserts in logarithmic -> second : 1
version inserts using -> as : 2
inserts using as -> a : 2
performance is third -> version : 2
is third version -> copies : 2
the template an -> iterator : 2
template an iterator -> that : 2
in the set -> that : 4
the set that -> does : 2
the set that -> comes : 2
set that does -> not : 2
be the complexity -> is : 2
items that can -> be : 2
the set with -> the : 2
set that comes -> after : 2
occurrences of the -> complexity : 1
or functor the -> type : 2
functor the type -> is : 2
the template all -> the : 2
the set and -> replaces : 2
set and replaces -> them : 2
template compares sets -> for : 6
compares sets for -> typename : 6
sets for typename -> typename : 6
const template typename -> typename : 6
const template typename -> bool : 4
operator returns function -> function : 7
returns function function -> template : 7
returns function function -> in : 1
operator returns class -> class : 1
unique typename compare -> typename : 1
comp const iterator -> iterator : 1
bool iterator const -> template : 1
void observers set -> operations : 1
observers set operations -> iterator : 1
set operations iterator -> iterator : 1
set of unique -> keys : 1
unique keys of -> type : 1
of type iterators -> are : 1
type iterators are -> note : 1
i if what -> if : 1
if what if -> newkey : 1
is see earlier -> in : 1
a set does -> not : 1
set does not -> invalidate : 1
set or any -> references : 1
or any references -> to : 1
any references to -> items : 1
only iterators or -> references : 1
iterators or references -> that : 1
or references that -> refer : 1
empty set and -> then : 1
set and then -> copies : 1
a new set -> and : 1
new set and -> copies : 1
set and copies -> the : 1
always or the -> complexity : 1
or the complexity -> is : 1
the item equivalent -> to : 1
items that or -> it : 1
which is for -> a : 1
to insert in -> logarithmic : 1
insert in logarithmic -> second : 1
after the complexity -> is : 1
typename void template -> typename : 1
typename void template -> void : 1
void template typename -> typename : 1
types for reading -> from : 1
reading from and -> writing : 3
from and writing -> to : 3
writing to strings -> in : 1
to strings in -> the : 1
strings in the -> same : 1
manner as reading -> from : 2
as reading from -> and : 2
discussion of for -> more : 1
about the see -> also : 1
also for classes -> that : 1
for classes that -> are : 1
the string except -> they : 1
string except they -> work : 1
except they work -> with : 1
they work with -> arrays : 1
work with arrays -> of : 1
arrays of narrow -> read : 1
of narrow read -> from : 1
narrow read from -> a : 1
from a use -> for : 1
a use for -> use : 1
use or a -> value : 1
of to convert -> a : 1
convert a value -> to : 1
to a of -> as : 1
a of as -> the : 1
as the inverse -> of : 1
the inverse of -> and : 1
inverse of and -> a : 1
and a value -> to : 1
to a out -> return : 1
a out return -> an : 1
out return an -> html : 1
return an html -> color : 1
an html color -> shows : 1
an html color -> unsigned : 1
html color shows -> a : 1
color shows a -> use : 1
shows a use -> of : 1
a use of -> to : 1
of to interpret -> html : 1
to interpret html -> in : 1
interpret html in -> a : 1
html in a -> color : 1
in a color -> can : 1
a color can -> be : 1
color can be -> a : 1
be a such -> as : 1
as or a -> hexadecimal : 1
or a hexadecimal -> digit : 1
hexadecimal digit string -> that : 1
digit string that -> begins : 1
string that begins -> with : 1
that begins with -> the : 1
with the digit -> string : 1
digit string is -> interpreted : 1
as a triplet -> of : 1
a triplet of -> and : 1
triplet of and -> blue : 1
of and blue -> color : 1
and blue color -> each : 1
blue color each -> expressed : 1
color each expressed -> as : 1
each expressed as -> two : 1
expressed as two -> hexadecimal : 1
as two hexadecimal -> for : 1
two hexadecimal for -> the : 1
sake of the -> example : 1
the example omits -> error : 1
example omits error -> handling : 1
omits error handling -> and : 1
error handling and -> assumes : 1
handling and assumes -> that : 1
and assumes that -> the : 1
of the color -> elements : 1
the color elements -> matches : 1
color elements matches -> the : 1
elements matches the -> order : 1
matches the order -> needed : 1
the order needed -> by : 1
order needed by -> the : 1
needed by the -> the : 1
the the known -> color : 1
the known color -> names : 1
known color names -> are : 1
color names are -> stored : 1
names are stored -> in : 1
a an html -> color : 1
html color unsigned -> colormap : 1
color unsigned colormap -> unsigned : 1
unsigned colormap unsigned -> long : 1
colormap unsigned long -> unsigned : 1
unsigned long unsigned -> long : 1
unsigned long i -> if : 1
long i if -> return : 1
else if in -> if : 1
if in if -> return : 1
else return void -> class : 1
return void class -> class : 1
void class class -> template : 1
for input string -> class : 1
for input string -> you : 1
input string class -> traits : 1
input string class -> is : 2
string class traits -> class : 5
traits class alloc -> class : 5
alloc class public -> typedef : 4
traits explicit which -> explicit : 3
explicit which explicit -> which : 3
which explicit which -> void : 3
explicit which void -> class : 3
which void class -> template : 3
input string you -> would : 1
string you would -> construct : 2
you would construct -> an : 2
would construct an -> with : 2
construct an with -> a : 1
construct an with -> no : 2
string argument and -> then : 1
argument and then -> read : 1
and then read -> from : 1
the string stream -> just : 2
the string stream -> allocate : 2
string stream just -> as : 2
stream just as -> you : 2
just as you -> would : 2
you would from -> any : 2
would from any -> other : 2
any other input -> following : 2
other input following -> are : 2
input following are -> the : 2
are the methods -> of : 6
the methods of -> an : 6
methods of an -> empty : 5
methods of an -> input : 1
an empty input -> string : 1
empty input string -> stream : 1
input string stream -> by : 3
string stream by -> constructing : 7
stream by constructing -> an : 7
by constructing an -> internal : 12
constructing an internal -> passing : 6
constructing an internal -> stream : 2
constructing an internal -> object : 4
an internal passing -> to : 3
an internal passing -> and : 3
internal passing to -> that : 3
passing to that -> and : 2
passing to that -> constructor : 1
to that and -> passing : 4
that and passing -> the : 4
and passing the -> address : 10
passing the address -> of : 10
the string buffer -> to : 8
string buffer to -> the : 8
the constructor for -> a : 7
the constructor for -> streamsize : 1
the constructor for -> int : 2
the constructor for -> if : 2
for a string -> stream : 3
for a string -> buffer : 1
string stream with -> as : 5
stream with as -> the : 5
as the initial -> string : 5
the initial string -> contents : 5
initial string contents -> by : 5
string contents by -> constructing : 5
string contents by -> calling : 1
contents by constructing -> an : 5
internal passing and -> to : 3
passing and to -> that : 3
and to that -> and : 2
and to that -> constructor : 1
to the internal -> the : 4
to the internal -> a : 2
the internal the -> buffer : 3
the internal the -> internal : 1
internal the buffer -> contents : 3
the buffer contents -> as : 3
the buffer contents -> are : 2
buffer contents as -> a : 3
contents as a -> that : 3
as a that -> to : 3
a that to -> set : 3
that to set -> the : 3
set the buffer -> class : 3
the buffer class -> class : 3
buffer class class -> in : 2
buffer class class -> class : 1
for output string -> class : 1
for output string -> you : 1
output string class -> traits : 2
output string class -> is : 4
output string you -> would : 1
output string you -> can : 1
no string and -> let : 1
string and let -> the : 1
let the string -> stream : 2
string stream allocate -> the : 2
stream allocate the -> string : 2
allocate the string -> as : 2
the string as -> you : 2
string as you -> write : 2
as you write -> to : 2
you write to -> the : 2
write to the -> you : 1
write to the -> or : 2
write to the -> then : 1
write to the -> the : 1
the you would -> then : 1
you would then -> call : 1
would then call -> the : 1
then call the -> member : 1
function to read -> the : 1
read the resulting -> following : 1
the resulting following -> are : 1
resulting following are -> the : 1
an empty output -> string : 2
empty output string -> stream : 2
output string stream -> by : 2
class for string -> class : 2
class for string -> streams : 1
for string class -> traits : 2
explicit mode explicit -> mode : 1
mode explicit mode -> void : 1
explicit mode void -> virtual : 1
mode void virtual -> virtual : 1
void virtual virtual -> c : 1
which virtual which -> class : 2
which virtual which -> virtual : 1
virtual which class -> template : 1
virtual which class -> implements : 1
which class template -> implements : 1
stream buffer for -> a : 1
stream buffer for -> character : 1
buffer for a -> string : 1
a string buffer -> maintains : 1
string buffer maintains -> a : 1
buffer maintains a -> single : 2
maintains a single -> character : 2
single character buffer -> with : 1
character buffer with -> separate : 1
buffer with separate -> positions : 1
with separate positions -> for : 2
separate positions for -> reading : 2
positions for reading -> and : 2
reading and that -> the : 2
and that the -> buffer : 2
the buffer has -> and : 2
buffer has and -> pointers : 2
has and pointers -> for : 2
and pointers for -> reading : 2
and pointers for -> the : 2
pointers for reading -> and : 2
reading and separate -> and : 2
separate and pointers -> for : 2
pointers for the -> pointer : 2
for the pointer -> points : 2
the pointer points -> to : 6
pointer points to -> the : 4
pointer points to -> one : 2
and the pointer -> points : 2
where the next -> character : 2
next character will -> be : 1
character will be -> read : 1
be read or -> refer : 2
read or refer -> to : 2
or refer to -> in : 2
refer to in -> for : 2
to in for -> details : 2
details about buffer -> the : 1
details about buffer -> object : 1
about buffer the -> following : 1
buffer the following -> descriptions : 1
functions of refers -> to : 1
of refers to -> a : 1
a private copy -> of : 1
private copy of -> the : 1
the parameter that -> is : 1
that is passed -> to : 1
such a data -> but : 1
a data but -> the : 1
a data but -> it : 2
data but the -> descriptions : 1
but the descriptions -> below : 1
below are clearer -> with : 1
are clearer with -> the : 1
clearer with the -> assumption : 1
with the assumption -> that : 1
the assumption that -> it : 1
assumption that it -> mode : 1
that it mode -> the : 1
it mode the -> buffer : 1
mode the buffer -> with : 2
the buffer with -> an : 1
the buffer with -> a : 1
buffer with an -> empty : 1
empty string and -> remembers : 1
empty string and -> write : 2
string and remembers -> the : 1
and remembers the -> mode : 1
and remembers the -> if : 1
remembers the mode -> the : 1
the mode the -> buffer : 1
buffer with a -> copy : 1
of and remembers -> the : 1
remembers the if -> is : 1
the input position -> is : 3
input position is -> initialized : 1
input position is -> set : 2
position is initialized -> to : 2
initialized to read -> from : 1
the output position -> is : 5
output position is -> initialized : 1
output position is -> set : 2
output position is -> fails : 2
output position is -> returns : 1
initialized to overwrite -> the : 1
overwrite the c -> to : 1
the c to -> append : 1
c to append -> to : 2
to append to -> the : 2
append to the -> end : 2
of the buffer -> as : 2
of the buffer -> to : 2
the buffer as -> is : 1
the buffer as -> a : 1
buffer as is -> an : 1
as is an -> character : 2
is an character -> is : 2
an character is -> nothing : 1
an character is -> and : 1
character is nothing -> and : 1
is nothing and -> a : 1
nothing and a -> character : 1
character is returned -> to : 2
returned to indicate -> is : 1
returned to indicate -> and : 1
indicate is not -> and : 1
and a write -> position : 2
a write position -> is : 4
write position is -> is : 2
write position is -> not : 2
position is is -> appended : 2
position is is -> set : 3
is is appended -> to : 2
to the buffer -> by : 1
the buffer by -> calling : 3
buffer by calling -> a : 3
buffer by calling -> in : 2
buffer by calling -> and : 1
calling a write -> position : 2
and the allows -> writing : 2
the allows writing -> is : 2
allows writing is -> the : 1
allows writing is -> is : 1
writing is the -> buffer : 1
is the buffer -> is : 1
is the buffer -> contents : 1
is the buffer -> pointers : 1
buffer is extended -> by : 1
is extended by -> one : 1
is extended by -> allocating : 1
extended by one -> character : 1
by one character -> and : 1
one character and -> is : 1
if the allows -> reading : 1
if the allows -> output : 1
the allows reading -> is : 1
allows reading is -> the : 1
reading is the -> read : 1
is the read -> end : 1
the read end -> pointer : 2
read end pointer -> is : 2
end pointer is -> set : 1
end pointer is -> advanced : 1
pointer is set -> to : 1
for to push -> back : 2
push back onto -> the : 2
back onto the -> buffer : 1
back onto the -> input : 1
onto the buffer -> for : 1
the buffer for -> reading : 1
buffer for reading -> as : 1
for reading as -> is : 1
for reading as -> and : 1
reading as is -> an : 1
character is and -> a : 1
and a putback -> position : 5
a putback position -> is : 6
putback position is -> is : 3
putback position is -> and : 3
set to is -> not : 2
not an and -> a : 2
position is and -> is : 2
position is and -> the : 1
writing is is -> set : 1
is assigned return -> value : 1
assigned return value -> is : 1
stream the input -> output : 2
the input output -> or : 2
input output or -> both : 2
output or both -> can : 2
or both can -> be : 2
both can be -> depending : 2
can be depending -> on : 2
be depending on -> the : 2
on the following -> are : 2
are the possible -> results : 2
the possible results -> of : 2
possible results of -> this : 2
results of this -> the : 2
this the input -> the : 2
output and is -> either : 2
and is either -> or : 2
is either or -> input : 2
either or input -> and : 2
or input and -> output : 2
and output function -> fails : 2
output function fails -> and : 2
function fails and -> returns : 4
fails and returns -> new : 2
fails and returns -> if : 2
and returns new -> position : 2
returns new position -> is : 2
position is determined -> as : 1
position is determined -> by : 1
determined as an -> offset : 1
an offset which -> is : 1
offset which is -> added : 1
which is added -> to : 1
the position at -> the : 1
the position at -> which : 1
position at the -> start : 1
current or at -> the : 1
or at the -> end : 1
of the depending -> on : 1
depending on or -> if : 1
on or if -> the : 1
if the desired -> position : 2
the desired position -> is : 2
desired position is -> negative : 2
position is negative -> or : 2
negative or past -> the : 2
or past the -> end : 2
the function fails -> and : 2
function it returns -> the : 2
new the stream -> position : 2
set if is -> the : 2
set if is -> if : 2
if is if -> is : 2
a valid or -> if : 2
valid or if -> neither : 2
if neither the -> input : 2
neither the input -> nor : 2
the input nor -> the : 2
input nor the -> output : 2
nor the output -> position : 2
position is fails -> and : 2
is fails and -> is : 2
fails and is -> the : 2
is for if -> was : 2
for if was -> not : 2
if was not -> returned : 2
was not returned -> from : 2
not returned from -> a : 2
to a positioning -> function : 2
a positioning function -> or : 2
positioning function or -> the : 2
results are has -> no : 2
are has no -> effect : 1
are has no -> the : 1
has no effect -> other : 1
no effect other -> than : 1
effect other than -> to : 1
other than to -> return : 1
than to return -> the : 1
return the result -> of : 1
result of any -> other : 2
of any other -> call : 2
any other call -> to : 2
other call to -> is : 2
call to is -> the : 1
call to is -> another : 1
buffer as a -> if : 1
the allows output -> is : 1
allows output is -> the : 1
output is the -> buffer : 1
buffer contents are -> taken : 1
buffer contents are -> copied : 1
contents are taken -> from : 1
from the output -> the : 1
output the buffer -> contents : 1
contents are copied -> from : 1
input the current -> buffer : 1
the current buffer -> if : 1
current buffer if -> one : 1
buffer if one -> exists : 1
if one exists -> and : 1
one exists and -> replaces : 1
exists and replaces -> it : 1
and replaces it -> with : 1
replaces it with -> a : 1
it with a -> copy : 1
copy of if -> is : 1
the input positions -> are : 1
input positions are -> set : 1
positions are set -> to : 2
are set to -> read : 1
are set to -> overwrite : 1
are set to -> null : 1
set to read -> from : 1
the output positions -> are : 1
output positions are -> set : 1
set to overwrite -> the : 1
overwrite the if -> more : 1
the if more -> input : 1
if more input -> is : 1
more input is -> that : 1
input is that -> if : 1
is a read -> the : 1
is a read -> position : 2
read the function -> returns : 2
read the function -> name : 1
function returns in -> in : 2
and output string -> class : 3
for string streams -> that : 1
string streams that -> permit : 1
streams that permit -> input : 1
that permit input -> and : 1
permit input and -> you : 1
input and you -> can : 1
you can start -> with : 2
can start with -> an : 2
start with an -> empty : 2
string and write -> to : 2
the or start -> with : 2
or start with -> a : 2
string and read -> from : 2
and read from -> the : 2
if you initialize -> the : 1
you initialize the -> stream : 1
initialize the stream -> with : 1
the stream with -> a : 1
stream with a -> string : 1
string and start -> the : 1
and start the -> output : 1
start the output -> overwrites : 1
the output overwrites -> the : 1
output overwrites the -> you : 1
overwrites the you -> can : 1
you can switch -> between : 2
can switch between -> reading : 2
switch between reading -> and : 2
between reading and -> writing : 2
and writing at -> any : 2
writing at any -> time : 1
writing at any -> if : 1
at any time -> and : 1
any time and -> set : 1
time and set -> the : 1
and set the -> read : 1
set the read -> and : 1
the read and -> write : 2
and write positions -> following : 1
write positions following -> are : 1
positions following are -> the : 1
empty string stream -> by : 2
to that constructor -> and : 2
that constructor and -> the : 2
constructor and the -> address : 2
and the address -> of : 2
class input string -> class : 1
string class is -> a : 8
class output string -> class : 1
class narrow character -> string : 2
narrow character string -> class : 2
character string class -> is : 2
character string class -> specializes : 2
wide input string -> class : 1
wide output string -> class : 1
declares the container -> this : 1
the container this -> class : 1
container this class -> template : 1
this class template -> is : 1
not a container -> in : 1
a container in -> its : 1
container in its -> own : 1
its own but -> adapts : 1
own but adapts -> other : 1
but adapts other -> containers : 1
adapts other containers -> to : 1
other containers to -> present : 1
of a stack -> is : 1
a stack is -> a : 1
a stack is -> the : 1
a stack is -> sometimes : 1
supports insertion and -> removal : 1
insertion and removal -> at : 1
and removal at -> one : 1
removal at one -> because : 1
at one because -> the : 1
one because the -> last : 1
because the last -> item : 1
last item inserted -> into : 1
into a stack -> is : 1
item a stack -> is : 1
stack is sometimes -> called : 1
called a lifo -> and : 1
a lifo and -> for : 1
lifo and for -> information : 1
template compares stacks -> for : 6
compares stacks for -> typename : 6
stacks for typename -> bool : 6
compares two stacks -> for : 2
compares two stacks -> by : 4
two stacks for -> equality : 1
two stacks for -> inequality : 1
stacks for equality -> by : 1
stacks for inequality -> by : 1
two stacks by -> comparing : 4
stacks by comparing -> the : 4
class template stack -> container : 1
template stack container -> class : 1
stack container class -> container : 1
typedef container container -> explicit : 1
container container explicit -> bool : 1
any sequence as -> and : 1
sequence as and -> supports : 1
as and supports -> the : 1
and supports the -> and : 1
the and default -> is : 1
a simple stack -> protocol : 1
simple stack protocol -> to : 1
stack protocol to -> the : 1
the members the -> elements : 1
members the elements -> from : 1
the data if -> the : 1
if the stack -> is : 1
the header defines -> several : 1
defines several standard -> exception : 1
several standard exception -> to : 1
standard exception to -> for : 1
exception to for -> the : 1
base the standard -> exception : 1
standard exception shows -> all : 1
exception shows all -> the : 1
all the exception -> classes : 1
the exception classes -> in : 1
standard including a -> few : 1
including a few -> that : 1
a few that -> are : 1
few that are -> declared : 1
declared in other -> note : 1
in other note -> that : 1
other note that -> the : 1
library has very -> few : 1
has very few -> places : 1
very few places -> that : 1
few places that -> throw : 1
places that throw -> the : 1
that throw the -> exceptions : 1
throw the exceptions -> in : 1
the exceptions in -> are : 1
exceptions in are -> available : 1
in are available -> primarily : 1
are available primarily -> for : 1
available primarily for -> your : 1
primarily for your -> the : 1
for your the -> standard : 1
your the standard -> exception : 1
standard exception the -> standard : 1
exception the standard -> exception : 1
standard exception for -> more : 1
exception for more -> information : 1
about expressions and -> for : 1
information about handling -> exceptions : 1
about handling exceptions -> with : 1
handling exceptions with -> class : 1
exceptions with class -> arithmetic : 1
with class arithmetic -> domain : 1
class arithmetic domain -> public : 1
arithmetic domain public -> explicit : 1
domain public explicit -> class : 1
explicit class is -> used : 3
explicit class is -> thrown : 1
explicit class is -> a : 1
explicit class is -> the : 1
used to report -> domain : 1
to report domain -> that : 1
report domain that -> arguments : 1
domain that arguments -> to : 1
that arguments to -> functions : 1
arguments to functions -> that : 1
to functions that -> are : 1
outside the valid -> domain : 1
the valid domain -> for : 1
valid domain for -> input : 1
domain for input -> to : 1
for input to -> the : 1
function that converts -> a : 1
that converts a -> color : 1
converts a color -> from : 1
a color from -> the : 1
color from the -> lightness : 1
from the lightness -> colorspace : 1
the lightness colorspace -> to : 1
lightness colorspace to -> the : 1
colorspace to the -> blue : 1
to the blue -> colorspace : 1
the blue colorspace -> might : 1
blue colorspace might -> require : 1
colorspace might require -> a : 1
require a saturation -> in : 1
a saturation in -> the : 1
saturation in the -> range : 1
range and throw -> for : 1
and throw for -> any : 1
throw for any -> other : 1
other class invalid -> function : 1
class invalid function -> public : 1
invalid function public -> explicit : 1
function public explicit -> class : 1
class is thrown -> to : 1
thrown to report -> invalid : 1
to report invalid -> arguments : 1
report invalid arguments -> to : 1
invalid arguments to -> specific : 1
arguments to specific -> kinds : 1
to specific kinds -> of : 1
specific kinds of -> invalid : 1
kinds of invalid -> arguments : 1
of invalid arguments -> are : 1
invalid arguments are -> covered : 1
arguments are covered -> by : 1
are covered by -> the : 1
covered by the -> other : 1
by the other -> logic : 1
the other logic -> use : 1
other logic use -> for : 1
logic use for -> any : 1
use for any -> other : 1
any other for -> constructing : 1
other for constructing -> a : 1
for constructing a -> from : 1
constructing a from -> a : 1
a from a -> throws : 1
from a throws -> if : 1
a throws if -> any : 1
throws if any -> character : 1
if any character -> is : 1
character is other -> than : 1
is other than -> or : 1
than or class -> exceed : 1
or class exceed -> maximum : 1
class exceed maximum -> public : 1
exceed maximum public -> explicit : 1
maximum public explicit -> class : 1
used to attempt -> to : 1
to attempt to -> set : 1
attempt to set -> or : 1
to set or -> change : 1
set or change -> the : 1
or change the -> size : 1
change the size -> of : 1
change the size -> by : 1
object that exceeds -> the : 1
that exceeds the -> maximum : 1
that exceeds the -> limits : 1
exceeds the maximum -> for : 1
exceeds the maximum -> value : 1
the maximum for -> the : 1
maximum for the -> class : 1
the class throws -> if : 1
class throws if -> you : 1
attempt to create -> a : 1
a string longer -> than : 1
string longer than -> class : 1
longer than class -> base : 1
than class base -> class : 1
class for logic -> public : 1
for logic public -> exception : 1
logic public exception -> explicit : 1
exception explicit class -> is : 2
is a violation -> of : 1
a violation of -> the : 1
violation of the -> preconditions : 1
of the preconditions -> or : 1
the preconditions or -> other : 1
preconditions or other -> requirements : 1
or other requirements -> for : 1
other requirements for -> a : 1
a class argument -> out : 1
class argument out -> of : 1
argument out of -> public : 1
out of public -> explicit : 1
of public explicit -> class : 1
used when an -> index : 1
when an index -> or : 1
an index or -> similar : 1
index or similar -> value : 1
or similar value -> is : 1
similar value is -> out : 1
value is out -> of : 1
out of its -> expected : 1
of its expected -> or : 1
its expected or -> allowed : 1
expected or allowed -> for : 1
or allowed for -> the : 1
allowed for the -> member : 1
member and throws -> if : 1
and throws if -> the : 1
if the index -> is : 1
index is class -> arithmetic : 1
is class arithmetic -> public : 1
class arithmetic public -> explicit : 2
arithmetic public explicit -> class : 1
arithmetic public explicit -> with : 1
explicit class can -> be : 2
used for arithmetic -> for : 1
used for arithmetic -> note : 1
for arithmetic for -> throws : 1
arithmetic for throws -> if : 1
for throws if -> the : 1
if the arithmetic -> value : 1
the arithmetic value -> of : 1
arithmetic value of -> the : 1
of the exceeds -> the : 1
the exceeds the -> maximum : 1
with no that -> overflow : 1
no that overflow -> in : 1
that overflow in -> most : 1
overflow in most -> arithmetic : 1
in most arithmetic -> expressions : 2
most arithmetic expressions -> has : 2
arithmetic expressions has -> undefined : 2
expressions has undefined -> an : 2
has undefined an -> implementation : 2
implementation might throw -> but : 2
might throw but -> there : 2
throw but there -> is : 2
is no guarantee -> that : 2
no guarantee that -> it : 2
guarantee that it -> will : 2
it will throw -> this : 2
will throw this -> or : 2
throw this or -> any : 2
this or any -> other : 2
other class arithmetic -> range : 1
class arithmetic range -> public : 1
arithmetic range public -> explicit : 1
range public explicit -> class : 1
be used when -> a : 1
used when a -> results : 1
when a results -> would : 1
a results would -> fall : 1
results would fall -> outside : 1
would fall outside -> its : 1
fall outside its -> valid : 1
outside its valid -> note : 1
its valid note -> that : 1
valid note that -> the : 1
any but a -> math : 1
but a math -> library : 1
a math library -> might : 1
math library might -> throw : 1
library might throw -> computing : 1
might throw computing -> a : 1
throw computing a -> power : 1
computing a power -> that : 1
a power that -> exceeds : 1
power that exceeds -> the : 1
exceeds the limits -> of : 1
limits of its -> return : 1
of its return -> class : 1
its return class -> base : 1
return class base -> class : 1
class for runtime -> public : 1
class for runtime -> which : 1
for runtime public -> exception : 1
runtime public exception -> explicit : 1
for runtime which -> are : 1
runtime which are -> errors : 1
which are errors -> that : 1
are errors that -> cannot : 1
errors that cannot -> reasonably : 1
that cannot reasonably -> be : 1
cannot reasonably be -> detected : 1
reasonably be detected -> by : 1
be detected by -> a : 1
detected by a -> static : 1
by a static -> analysis : 1
a static analysis -> of : 1
static analysis of -> the : 1
analysis of the -> code : 1
the code but -> can : 1
code but can -> be : 1
can be revealed -> only : 1
be revealed only -> at : 1
revealed only at -> class : 1
only at class -> arithmetic : 1
at class arithmetic -> public : 1
public explicit with -> no : 1
explicit with no -> class : 1
no class can -> be : 1
for arithmetic note -> that : 1
arithmetic note that -> underflow : 1
note that underflow -> in : 1
that underflow in -> most : 1
underflow in most -> arithmetic : 1
any other header -> declares : 1
other header declares -> the : 1
template and its -> two : 1
and its two -> and : 1
its two and -> a : 1
and a stream -> buffer : 1
buffer object manages -> access : 1
object manages access -> to : 1
manages access to -> a : 1
to a sequence -> of : 1
the characters might -> be : 1
might be stored -> in : 1
in an external -> file : 1
an external file -> or : 1
external file or -> reside : 1
file or reside -> entirely : 1
or reside entirely -> in : 1
reside entirely in -> see : 1
entirely in see -> the : 1
in see the -> and : 1
the and headers -> for : 1
and headers for -> examples : 1
headers for examples -> of : 1
examples of different -> kinds : 1
of different kinds -> of : 1
kinds of stream -> buffers : 1
of stream buffers -> that : 1
stream buffers that -> are : 1
buffers that are -> derived : 1
that are derived -> from : 1
are derived from -> programs : 1
derived from programs -> do : 1
from programs do -> not : 1
not use stream -> buffers : 1
use stream buffers -> but : 1
stream buffers but -> use : 1
buffers but use -> stream : 1
but use stream -> classes : 1
use stream classes -> instead : 1
stream classes instead -> because : 1
classes instead because -> they : 1
instead because they -> provide : 1
because they provide -> a : 1
they provide a -> each : 1
provide a each -> stream : 1
a each stream -> object : 1
each stream object -> has : 1
stream object has -> an : 1
an associated stream -> buffer : 1
associated stream buffer -> and : 1
buffer and for -> general : 1
general information on -> input : 1
information on input -> and : 1
on input and -> output : 1
class template stream -> class : 1
template stream class -> traits : 1
stream class traits -> class : 1
traits class typedef -> chart : 1
class typedef chart -> typedef : 1
traits virtual locale -> locale : 1
virtual locale locale -> locale : 1
locale locale locale -> streamsize : 1
locale locale streamsize -> which : 1
locale streamsize which -> which : 1
streamsize which which -> int : 1
which which int -> input : 1
which int input -> streamsize : 1
int input streamsize -> streamsize : 1
streamsize streamsize putback -> output : 1
streamsize streamsize putback -> virtual : 1
streamsize putback output -> streamsize : 1
putback output streamsize -> streamsize : 1
output streamsize streamsize -> input : 1
streamsize streamsize input -> void : 1
streamsize input void -> void : 1
input void void -> output : 1
void void output -> void : 1
void output void -> void : 1
output void void -> locales : 1
void void locales -> virtual : 1
void locales virtual -> void : 1
locales virtual void -> locale : 1
virtual void locale -> buffer : 1
void locale buffer -> management : 1
locale buffer management -> and : 1
buffer management and -> positioning : 1
management and positioning -> virtual : 1
and positioning virtual -> streamsize : 1
positioning virtual streamsize -> virtual : 1
streamsize virtual which -> virtual : 1
which virtual streamsize -> virtual : 1
streamsize virtual int -> virtual : 1
virtual virtual streamsize -> streamsize : 1
virtual streamsize streamsize -> putback : 1
virtual streamsize streamsize -> class : 1
streamsize putback virtual -> c : 1
putback virtual c -> output : 1
virtual c output -> virtual : 1
c output virtual -> c : 1
output virtual c -> virtual : 1
streamsize streamsize class -> template : 1
streamsize streamsize class -> represents : 1
template manages an -> input : 1
manages an input -> buffer : 1
an input buffer -> and : 1
buffer and an -> output : 1
an output in -> which : 1
output in which -> each : 1
which each buffer -> is : 1
each buffer is -> an : 1
buffer is an -> array : 1
the base character -> type : 1
base character type -> is : 1
a template a -> buffer : 1
template a buffer -> has : 1
a buffer has -> the : 1
buffer has the -> following : 1
the following three -> pointers : 1
following three pointers -> to : 1
three pointers to -> the : 1
the array names -> below : 1
array names below -> are : 1
names below are -> not : 1
below are not -> part : 1
standard but are -> used : 1
but are used -> for : 1
used for informational -> purposes : 1
for informational purposes -> to : 1
informational purposes to -> the : 1
purposes to the -> beginning : 1
next element in -> the : 1
that the next -> character : 2
or the position -> at : 1
position at which -> to : 1
at which to -> write : 1
which to write -> the : 1
write the next -> to : 1
next to one -> past : 1
of the pointers -> in : 1
the pointers in -> this : 1
pointers in this -> list : 1
this list can -> all : 1
list can all -> be : 1
all be null -> which : 1
be null which -> makes : 1
null which makes -> the : 1
makes the stream -> if : 1
stream if the -> pointers : 1
if the pointers -> are : 1
pointers are not -> the : 1
not the following -> rules : 1
the following rules -> for : 1
following rules for -> an : 1
rules for an -> output : 1
output the stream -> buffer : 1
output the stream -> the : 1
stream buffer is -> said : 3
stream buffer is -> it : 1
buffer is said -> to : 3
said to have -> a : 3
the next output -> character : 1
next output character -> is : 1
output character is -> written : 1
character is written -> to : 1
written to for -> an : 1
to for an -> input : 1
have a when -> a : 1
a when a -> character : 1
when a character -> is : 1
character is pushed -> it : 1
is pushed it -> is : 1
pushed it is -> stored : 1
stored in for -> an : 1
buffer is stream -> depicts : 1
is stream depicts -> an : 1
stream depicts an -> input : 1
stream depicts an -> output : 1
depicts an input -> in : 1
an input in -> which : 1
input in which -> the : 1
which the characters -> have : 1
the characters have -> been : 1
have been fetched -> from : 1
been fetched from -> the : 1
fetched from the -> input : 1
the input so -> the : 1
input so the -> first : 1
the first six -> characters : 1
first six characters -> have : 1
six characters have -> been : 1
been read from -> the : 1
input and the -> next : 1
to read is -> the : 1
read is the -> space : 1
is the space -> between : 1
the space between -> and : 1
between and stream -> stream : 1
and stream stream -> stream : 1
stream stream stream -> depicts : 1
stream stream depicts -> an : 1
depicts an output -> which : 1
an output which -> has : 1
output which has -> room : 1
which has room -> for : 1
room for so -> the : 1
for so the -> buffer : 1
so the buffer -> contains : 1
the buffer contains -> the : 1
buffer contains the -> five : 1
contains the five -> characters : 1
the five characters -> stream : 1
five characters stream -> stream : 1
characters stream stream -> functions : 1
stream stream functions -> come : 1
stream functions come -> in : 1
functions come in -> a : 1
come in a -> public : 1
a public function -> that : 2
public function that -> is : 1
public function that -> simply : 1
is the public -> interface : 1
the public interface -> and : 1
public interface and -> a : 1
interface and a -> virtual : 1
and a virtual -> function : 1
virtual function to -> do : 1
function to do -> the : 1
do the actual -> for : 1
the actual for -> is : 1
actual for is -> a : 1
for is a -> public : 1
for is a -> function : 1
is a public -> function : 1
function that simply -> calls : 1
that simply calls -> which : 1
simply calls which -> is : 1
calls which is -> protected : 1
which is protected -> and : 1
is protected and -> the : 1
protected and the -> name : 1
and the name -> of : 1
of the public -> function : 1
public function is -> followed : 1
function is followed -> by : 1
of the protected -> the : 1
the protected the -> two : 1
protected the two -> exceptions : 1
the two exceptions -> are : 1
two exceptions are -> and : 1
exceptions are and -> which : 1
are and which -> are : 1
which are with -> and : 1
are with and -> as : 1
with and as -> their : 1
and as their -> protected : 1
as their protected -> class : 1
their protected class -> template : 1
protected class template -> implements : 1
template implements minimal -> functionality : 1
implements minimal functionality -> for : 1
minimal functionality for -> managing : 1
functionality for managing -> the : 1
managing the buffer -> templates : 1
the buffer templates -> must : 1
buffer templates must -> override : 1
templates must override -> the : 1
override the virtual -> functions : 1
virtual functions to -> provide : 1
functions to provide -> concrete : 1
to provide concrete -> see : 1
provide concrete see -> in : 1
concrete see in -> in : 1
see in in -> and : 1
in in and -> in : 1
in for examples -> of : 1
examples of derived -> classes : 1
of derived classes -> and : 1
classes and following -> descriptions : 1
and following descriptions -> start : 1
following descriptions start -> with : 1
descriptions start with -> the : 1
with the expected -> public : 1
the expected public -> if : 1
expected public if -> you : 1
public if you -> are : 1
writing a stream -> class : 1
a stream class -> that : 2
stream class that -> uses : 1
stream class that -> performs : 1
uses a stream -> you : 1
a stream you -> can : 1
stream you can -> rely : 1
rely on that -> behavior : 1
on that behavior -> from : 1
that behavior from -> the : 1
behavior from the -> stream : 1
buffer if you -> are : 1
are writing your -> own : 1
writing your own -> that : 1
your own that -> is : 1
own that is -> the : 1
the behavior you -> must : 1
behavior you must -> each : 1
you must each -> description : 1
must each description -> ends : 1
each description ends -> with : 1
description ends with -> the : 1
actual implementation in -> comparing : 1
implementation in comparing -> converting : 1
in comparing converting -> characters : 1
comparing converting characters -> to : 1
converting characters to -> integers : 1
characters to integers -> or : 1
to integers or -> integers : 1
integers or integers -> to : 1
or integers to -> and : 1
integers to and -> obtaining : 1
to and obtaining -> the : 1
and obtaining the -> uses : 1
obtaining the uses -> the : 1
the uses the -> character : 1
uses the character -> traits : 1
character traits specified -> by : 1
traits specified by -> the : 1
about the default -> character : 1
the default character -> following : 1
default character following -> are : 1
character following are -> the : 1
are the public -> member : 2
the public member -> functions : 2
public member functions -> of : 2
current which can -> be : 1
be set by -> calling : 1
calling the number -> of : 1
characters available for -> the : 1
available for the -> return : 1
stream buffer has -> a : 1
buffer has a -> read : 1
has a read -> or : 1
has a read -> the : 1
a read or -> the : 1
or the result -> of : 1
of calling if -> the : 1
stream buffer does -> not : 1
buffer does not -> have : 1
have a read -> locale : 1
a read locale -> a : 1
read locale a -> copy : 1
locale a copy -> of : 1
of the subsequent -> calls : 1
the subsequent calls -> to : 1
calls to return -> a : 1
return a copy -> of : 1
the imbued the -> class : 1
imbued the class -> does : 1
use the but -> a : 1
the but a -> derived : 1
but a derived -> class : 1
the locale to -> interpret : 1
locale to interpret -> multibyte : 1
to interpret multibyte -> characters : 1
interpret multibyte characters -> and : 1
characters and for -> other : 1
and for other -> when : 1
for other when -> a : 1
other when a -> stream : 1
when a stream -> buffer : 1
buffer is it -> is : 1
it is initially -> imbued : 1
is initially imbued -> with : 1
initially imbued with -> the : 1
imbued with the -> global : 1
the global which -> changes : 1
global which changes -> the : 1
which changes the -> stream : 2
stream the second -> form : 2
is see in -> for : 2
for which changes -> the : 1
in for streamsize -> which : 1
for streamsize which -> typically : 1
streamsize which typically -> sets : 1
which typically sets -> the : 1
typically sets the -> and : 1
sets the and -> array : 1
the and array -> which : 1
and array which -> synchronizes : 1
array which synchronizes -> the : 1
which synchronizes the -> internal : 1
synchronizes the internal -> arrays : 1
the internal arrays -> with : 1
internal arrays with -> the : 1
arrays with the -> external : 1
with the external -> if : 1
with the external -> input : 1
the external if -> the : 1
external if the -> function : 1
function returns for -> a : 1
returns for a -> failure : 1
for a failure -> and : 1
a failure and -> any : 1
failure and any -> other : 1
other value for -> the : 1
other value for -> default : 1
character and advances -> the : 1
and advances the -> input : 1
advances the input -> calls : 1
advances the input -> pointer : 2
the input calls -> and : 1
input calls and -> if : 1
calls and if -> returns : 1
and if returns -> returns : 1
if returns returns -> it : 1
returns returns it -> returns : 1
returns the next -> input : 1
input character one -> is : 1
character one is -> and : 1
is and increments -> the : 1
and increments the -> input : 1
increments the input -> if : 1
input if there -> is : 1
is no read -> returns : 1
is no read -> the : 1
is no read -> but : 1
no read returns -> it : 1
read returns it -> returns : 1
is it calls -> the : 1
calls the next -> available : 1
the next available -> input : 1
next available input -> character : 1
available input character -> without : 1
input character without -> advancing : 1
character without advancing -> the : 1
without advancing the -> input : 1
advancing the input -> if : 1
if no read -> position : 1
no read position -> is : 1
read position is -> returns : 1
position is returns -> it : 1
position is returns -> streamsize : 1
is returns it -> returns : 1
it returns streamsize -> an : 1
returns streamsize an -> estimate : 1
streamsize an estimate -> of : 1
available for if -> returns : 1
for if returns -> a : 1
returns a positive -> at : 1
a positive at -> least : 1
positive at least -> that : 1
at least that -> many : 1
least that many -> characters : 1
that many characters -> can : 1
many characters can -> be : 1
be read before -> returns : 1
read before returns -> if : 1
before returns if -> returns : 1
returns if returns -> calls : 1
if returns calls -> to : 1
returns calls to -> or : 1
calls to or -> will : 1
to or will -> if : 1
or will if -> the : 1
value is input -> might : 1
is input might -> be : 1
input might be -> but : 1
might be but -> there : 1
be but there -> is : 1
no read the -> function : 1
function name as -> to : 1
name as to -> push : 1
as to push -> back : 1
next read will -> return : 1
read will return -> if : 1
will return if -> a : 1
return if a -> position : 1
position is available -> and : 1
is available and -> the : 1
available and the -> most : 1
and the most -> recently : 1
the most recently -> read : 1
most recently read -> character : 1
most recently read -> the : 1
recently read character -> is : 1
read character is -> the : 1
the input pointer -> is : 1
the input pointer -> and : 1
the input pointer -> after : 2
input pointer is -> and : 1
the output array -> and : 2
the output array -> are : 1
output array and -> returns : 1
output array and -> the : 1
returns if an -> output : 1
if an output -> position : 1
if an output -> error : 1
an output position -> is : 1
is returns streamsize -> to : 1
returns streamsize to -> write : 1
streamsize to write -> a : 1
string of length -> back : 1
of length back -> the : 1
length back the -> character : 1
the character that -> was : 1
the character that -> pointed : 1
the character that -> points : 1
the character that -> the : 2
character that was -> read : 1
character that was -> most : 1
the function decrements -> the : 1
function decrements the -> input : 1
decrements the input -> pointer : 1
input pointer and -> returns : 1
and returns it -> returns : 1
it returns following -> are : 1
functions of those -> marked : 1
of those marked -> as : 1
those marked as -> should : 1
marked as should -> probably : 1
as should probably -> be : 1
should probably be -> overridden : 1
probably be overridden -> in : 1
be overridden in -> a : 1
overridden in a -> derived : 1
derived class all -> pointers : 1
class all pointers -> to : 1
all pointers to -> null : 1
pointers to null -> the : 1
to null the -> locale : 1
to null the -> flag : 1
null the locale -> returned : 1
locale returned from -> is : 1
from is initialized -> to : 1
global the pointer -> for : 1
the pointer for -> the : 5
input the pointer -> for : 2
for the output -> the : 1
output the pointer -> for : 1
input array by -> the : 1
array by the -> pointer : 1
by the pointer -> for : 1
the input locale -> derived : 1
input locale derived -> class : 1
locale derived class -> overrides : 1
derived class overrides -> the : 1
class overrides the -> function : 1
overrides the function -> to : 1
function to take -> whatever : 1
to take whatever -> action : 1
take whatever action -> is : 1
whatever action is -> needed : 1
action is needed -> when : 1
is needed when -> the : 1
needed when the -> stream : 1
when the stream -> locale : 1
the stream locale -> is : 1
stream locale is -> for : 1
locale is for -> the : 1
stream buffer might -> cache : 1
stream buffer might -> write : 1
stream buffer might -> adjust : 1
buffer might cache -> facets : 1
might cache facets -> or : 1
cache facets or -> other : 1
facets or other -> information : 1
or other information -> from : 1
other information from -> the : 1
the new function -> calls : 1
new function calls -> storing : 1
function calls storing -> a : 1
calls storing a -> new : 1
storing a new -> within : 1
a new within -> the : 1
new within the -> call : 1
within the call -> to : 1
returns the old -> and : 1
old and the -> parameter : 1
the new default -> behavior : 1
new default behavior -> for : 1
for is to -> do : 1
is to do -> c : 1
is to do -> nothing : 8
to do c -> stream : 1
do c stream -> buffer : 1
c stream buffer -> calls : 1
stream buffer calls -> to : 1
buffer calls to -> flush : 1
output buffer when -> it : 1
buffer when it -> is : 1
the function handles -> the : 1
function handles the -> sequence : 1
handles the sequence -> of : 1
in the buffer -> or : 1
in the buffer -> is : 4
buffer or an -> empty : 1
string if the -> and : 1
if the and -> other : 1
and other pointers -> are : 1
other pointers are -> if : 1
pointers are if -> is : 1
not is appended -> to : 1
the output for -> a : 1
a file stream -> buffer : 2
file stream buffer -> might : 2
buffer might write -> the : 1
write the array -> to : 1
an output error -> an : 1
output error an -> exception : 1
error an exception -> is : 1
is thrown or -> is : 1
thrown or is -> for : 1
any value other -> than : 1
value other than -> is : 3
other than is -> default : 1
other than is -> returned : 2
than is default -> behavior : 1
is default behavior -> is : 1
to do nothing -> and : 6
to do nothing -> except : 2
do nothing and -> return : 6
nothing and return -> c : 1
nothing and return -> the : 4
nothing and return -> streamsize : 1
and return c -> a : 1
return c a -> when : 1
c a when -> the : 1
a when the -> or : 1
when the or -> functions : 1
the or functions -> try : 1
or functions try -> to : 1
functions try to -> push : 1
try to push -> back : 1
push back a -> they : 1
back a they -> first : 1
a they first -> attempt : 1
they first attempt -> to : 1
first attempt to -> adjust : 1
attempt to adjust -> the : 1
to adjust the -> current : 1
adjust the current -> input : 1
the current input -> this : 1
current input this -> can : 1
input this can -> fail : 1
this can fail -> for : 1
can fail for -> one : 1
fail for one -> of : 1
of three is -> unbuffered : 1
three is unbuffered -> input : 1
is unbuffered input -> buffer : 1
unbuffered input buffer -> is : 1
input buffer is -> empty : 3
input buffer is -> set : 1
buffer is empty -> is : 1
buffer is empty -> input : 2
is empty is -> not : 1
empty is not -> the : 1
same character that -> was : 1
that was most -> recently : 1
was most recently -> read : 1
recently read the -> attempt : 1
read the attempt -> mediates : 1
the attempt mediates -> with : 1
attempt mediates with -> the : 1
mediates with the -> external : 1
the external input -> if : 1
external input if -> to : 1
input if to -> try : 1
if to try -> to : 1
to try to -> complete : 1
try to complete -> the : 1
complete the for -> a : 1
buffer might adjust -> the : 1
might adjust the -> external : 1
adjust the external -> file : 1
external file position -> so : 1
file position so -> the : 1
position so the -> next : 1
input array will -> retrieve : 1
array will retrieve -> the : 1
will retrieve the -> is : 1
retrieve the is -> the : 1
sequence is moved -> back : 1
is moved back -> one : 1
moved back one -> position : 1
back one position -> to : 1
one position to -> reread : 1
position to reread -> the : 1
to reread the -> character : 1
reread the character -> at : 1
the character at -> that : 1
the character at -> position : 2
the character at -> and : 1
character at that -> if : 1
at that if -> is : 1
is not tries -> to : 1
not tries to -> ensure : 1
character read will -> be : 1
read will be -> the : 1
be the derived -> class : 1
class is free -> to : 1
free to modify -> the : 1
modify the input -> change : 1
the input change -> the : 1
input change the -> stream : 1
change the stream -> or : 1
the stream or -> take : 1
stream or take -> another : 1
or take another -> action : 1
take another action -> to : 1
another action to -> push : 1
action to push -> back : 1
failure or any -> other : 1
value for default -> behavior : 1
for default behavior -> is : 2
output the output -> pointer : 1
the output pointer -> by : 1
output pointer by -> the : 1
pointer by the -> output : 1
by the output -> the : 1
stream the default -> behavior : 2
except return the -> stream : 1
except return streamsize -> sets : 1
return streamsize sets -> the : 1
streamsize sets the -> internal : 1
sets the internal -> array : 1
internal array the -> default : 1
array the default -> behavior : 1
input array and -> the : 1
input array and -> fetches : 1
input array and -> returns : 1
stream buffer with -> its : 1
buffer with its -> external : 1
with its external -> if : 1
its external if -> any : 1
external if any -> characters : 1
if any characters -> in : 1
any characters in -> the : 1
output array are -> and : 1
array are and -> all : 1
and all pointers -> are : 1
all pointers are -> adjusted : 1
pointers are adjusted -> as : 1
are adjusted as -> the : 1
adjusted as the -> return : 1
for failure and -> anything : 1
failure and anything -> else : 1
else for default -> behavior : 1
array and fetches -> the : 1
and fetches the -> first : 1
fetches the first -> character : 1
first character from -> the : 1
character from the -> it : 1
character from the -> input : 1
from the it -> is : 1
called from if -> the : 1
is not buffered -> or : 2
not buffered or -> if : 1
not buffered or -> when : 1
buffered or if -> the : 1
is empty input -> is : 2
empty input is -> obtained : 2
input is obtained -> from : 2
the external and -> the : 2
external and the -> input : 2
the input pointers -> are : 3
input pointers are -> key : 2
input pointers are -> set : 1
pointers are key -> difference : 2
are key difference -> between : 2
is that advances -> the : 2
that advances the -> input : 2
input pointer after -> returning : 2
pointer after returning -> the : 2
after returning the -> first : 2
returning the first -> character : 2
the but does -> return : 2
but does return -> value : 2
does return value -> from : 1
does return value -> is : 1
value from is -> if : 1
from is if -> there : 1
a read position -> or : 2
read position or -> if : 2
position or if -> there : 2
is no more -> input : 2
no more input -> or : 2
more input or -> some : 2
input or some -> other : 2
some other failure -> default : 2
other failure default -> behavior : 2
failure default behavior -> is : 2
returns the first -> character : 1
function calls when -> the : 1
calls when the -> input : 1
buffered or when -> the : 1
and return streamsize -> up : 1
return streamsize up -> to : 1
that points no -> null : 1
points no null -> character : 1
appended to it -> is : 1
to calling up -> to : 2
calling up to -> times : 2
up to times -> or : 2
to times or -> until : 2
times or until -> it : 2
or until it -> returns : 2
until it returns -> the : 2
characters actually read -> and : 1
actually read and -> stored : 1
read and stored -> in : 1
in is derived -> classes : 1
is derived classes -> can : 2
can override this -> function : 2
override this function -> to : 2
this function to -> provide : 2
function to provide -> a : 2
provide a more -> efficient : 2
a more efficient -> streamsize : 1
a more efficient -> in : 1
more efficient streamsize -> up : 1
efficient streamsize up -> to : 1
characters actually written -> is : 1
actually written is -> derived : 1
written is derived -> classes : 1
more efficient in -> in : 1
efficient in in -> class : 1
in class stream -> buffer : 1
in class stream -> wide : 1
class stream buffer -> class : 1
buffer class specializes -> for : 1
for the in -> class : 1
for the in -> header : 1
the in class -> stream : 1
class stream wide -> character : 1
stream wide character -> class : 1
wide character class -> specializes : 1
character class specializes -> for : 1
the in header -> declares : 1
templates and functions -> that : 1
functions that support -> the : 1
that support the -> and : 1
support the and -> which : 1
which are specializations -> of : 1
are specializations of -> the : 1
class the string -> types : 1
the string types -> are : 1
string types are -> easier : 1
types are easier -> to : 1
easier to use -> and : 2
to use and -> safer : 1
to use and -> offer : 1
use and safer -> than : 1
and safer than -> character : 1
safer than character -> another : 1
than character another -> important : 1
character another important -> class : 1
another important class -> template : 1
important class template -> is : 1
template is which -> describes : 1
is which describes -> a : 1
which describes a -> character : 1
describes a character -> type : 2
character type and -> is : 1
character type and -> provides : 1
is used throughout -> the : 1
the standard complete -> declarations : 1
standard complete declarations -> of : 1
complete declarations of -> the : 1
of the overloaded -> operators : 1
overloaded operators can -> be : 1
can be daunting -> to : 1
be daunting to -> to : 1
daunting to to -> help : 1
to to help -> each : 1
to help each -> function : 1
help each function -> template : 1
each function template -> declaration : 1
declaration is followed -> by : 1
by a comment -> that : 1
a comment that -> shows : 1
comment that shows -> the : 1
that shows the -> equivalent : 1
shows the equivalent -> declaration : 1
the equivalent declaration -> that : 1
equivalent declaration that -> uses : 1
uses the common -> for : 1
the common for -> narrow : 1
common for narrow -> characters : 1
for narrow characters -> instead : 1
narrow characters instead -> of : 1
characters instead of -> a : 1
function that classifies -> a : 1
that classifies a -> string : 1
classifies a string -> as : 1
string as an -> floating : 1
as an floating -> or : 1
an floating or -> the : 1
floating or the -> example : 1
or the example -> demonstrates : 1
the example demonstrates -> the : 1
example demonstrates the -> use : 1
demonstrates the use -> of : 1
class and several -> of : 1
and several of -> its : 1
several of its -> member : 1
its member a -> enum : 1
member a enum -> kind : 1
a enum kind -> error : 1
enum kind error -> kind : 1
kind error kind -> using : 1
error kind using -> const : 1
kind using const -> string : 1
using const string -> const : 1
const string const -> string : 3
string const string -> const : 1
string const string -> letters : 1
string const string -> identchars : 1
const string letters -> lower : 1
string letters lower -> upper : 1
letters lower upper -> const : 1
lower upper const -> string : 1
upper const string -> const : 1
const string identchars -> letters : 1
string identchars letters -> if : 1
identchars letters if -> return : 1
letters if return -> else : 1
else if check -> for : 1
if check for -> valid : 1
check for valid -> if : 1
for valid if -> return : 1
valid if return -> else : 1
else return skip -> a : 1
return skip a -> leading : 1
skip a leading -> if : 1
a leading if -> if : 1
leading if if -> or : 1
if if or -> pos : 1
if or pos -> else : 1
or pos else -> pos : 1
pos else pos -> the : 1
else pos the -> number : 1
pos the number -> must : 1
the number must -> start : 1
number must start -> with : 1
a if return -> if : 1
if return find -> where : 1
return find where -> the : 1
find where the -> digit : 1
where the digit -> string : 1
digit string pos -> if : 1
string pos if -> only : 1
pos if only -> digits : 1
if only digits -> integer : 1
only digits integer -> return : 1
digits integer return -> else : 1
integer return else -> if : 1
else if there -> is : 1
a decimal pos -> if : 1
decimal pos if -> integer : 1
pos if integer -> part : 1
if integer part -> fractional : 1
integer part fractional -> part : 1
part fractional part -> return : 1
fractional part return -> look : 1
part return look -> for : 1
return look for -> optional : 1
look for optional -> if : 1
for optional if -> or : 1
optional if or -> if : 1
if or if -> return : 1
or if return -> or : 1
if return or -> is : 1
return or is -> last : 1
or is last -> char : 1
is last char -> else : 1
last char else -> if : 1
char else if -> or : 1
else if or -> skip : 1
if or skip -> over : 1
or skip over -> if : 1
skip over if -> return : 1
over if return -> sign : 1
if return sign -> is : 1
return sign is -> last : 1
sign is last -> pos : 1
is last pos -> if : 1
last pos if -> return : 1
pos if return -> return : 1
return return class -> class : 1
class typedef traits -> typedef : 1
static const explicit -> a : 1
const explicit a -> n : 1
explicit a n -> const : 1
a n const -> a : 1
n const a -> const : 1
const a const -> a : 2
a const a -> const : 1
a const a -> chart : 1
const a chart -> const : 1
chart const inputiterator -> const : 1
const inputiterator const -> a : 1
inputiterator const a -> iterator : 1
const a iterator -> iterator : 1
a iterator iterator -> size : 1
iterator iterator size -> and : 1
iterator size and -> capacity : 1
size and capacity -> void : 1
and capacity void -> chart : 1
capacity void chart -> void : 1
void chart void -> void : 1
void chart void -> inputiter : 1
chart void void -> void : 1
void bool element -> access : 1
reference reference pos -> n : 1
reference pos n -> modifiers : 1
pos n modifiers -> chart : 1
n modifiers chart -> inputiter : 1
modifiers chart inputiter -> void : 1
chart inputiter void -> chart : 1
inputiter void chart -> inputiter : 1
void chart inputiter -> const : 1
chart inputiter const -> const : 1
inputiter const const -> const : 1
const chart iterator -> chart : 1
const chart iterator -> const : 1
chart iterator chart -> void : 1
iterator chart void -> chart : 1
chart void chart -> void : 1
chart void inputiter -> inputiter : 1
inputiter inputiter pos -> n : 1
inputiter pos n -> iterator : 1
pos n iterator -> iterator : 1
n iterator iterator -> iterator : 1
iterator const const -> const : 1
chart iterator const -> iterator : 1
iterator const iterator -> const : 2
iterator const iterator -> chart : 1
const iterator const -> iterator : 2
const iterator chart -> iterator : 1
iterator chart iterator -> inputiterator : 1
chart iterator inputiterator -> inputiterator : 1
iterator inputiterator inputiterator -> pos : 1
inputiterator inputiterator pos -> void : 1
inputiterator pos void -> string : 1
pos void string -> operations : 1
void string operations -> const : 1
string operations const -> const : 1
operations const const -> searching : 1
const const searching -> pos : 1
const searching pos -> pos : 1
searching pos pos -> pos : 1
pos pos pos -> pos : 13
pos pos pos -> comparisons : 1
pos pos comparisons -> int : 1
pos comparisons int -> int : 1
comparisons int int -> const : 1
int const class -> template : 1
base for the -> and : 1
and a object -> holds : 1
a object holds -> a : 1
object holds a -> or : 1
holds a or -> of : 1
a or of -> characters : 1
or of characters -> and : 1
of characters and -> provides : 1
characters and provides -> a : 1
provides a number -> of : 1
number of useful -> member : 1
of useful member -> functions : 1
useful member functions -> for : 1
functions for searching -> and : 1
for searching and -> modifying : 1
searching and modifying -> the : 1
modifying the you -> can : 1
can also work -> with : 2
also work with -> character : 1
also work with -> parts : 1
with character strings -> as : 1
character strings as -> arguments : 1
strings as arguments -> to : 1
arguments to including -> a : 1
including a object -> keeps : 1
a object keeps -> track : 1
object keeps track -> of : 1
track of an -> explicit : 1
of an explicit -> length : 1
an explicit length -> instead : 1
explicit length instead -> of : 1
length instead of -> using : 1
the c convention -> of : 1
c convention of -> character : 1
convention of character -> the : 1
of character the -> and : 1
character the and -> types : 1
types are therefore -> much : 1
are therefore much -> easier : 1
therefore much easier -> to : 1
much easier to -> use : 1
use and offer -> greater : 1
and offer greater -> safety : 1
offer greater safety -> the : 1
greater safety the -> member : 1
safety the member -> while : 1
the member while -> still : 1
member while still -> offering : 1
while still offering -> with : 1
still offering with -> many : 1
offering with many -> functions : 1
with many functions -> that : 1
many functions that -> take : 1
that take strings -> as : 1
take strings as -> you : 1
strings as you -> need : 1
as you need -> a : 1
need a sequence -> of : 1
characters that you -> need : 1
that you need -> to : 1
a character you -> can : 2
use or but -> in : 1
but in most -> cases : 1
in most cases -> you : 1
most cases you -> will : 1
cases you will -> probably : 1
will probably find -> or : 1
probably find or -> to : 1
find or to -> be : 1
or to be -> more : 1
to be more -> you : 1
be more you -> can : 1
can usually use -> a : 1
usually use a -> or : 1
use a or -> as : 1
a or as -> a : 1
as a container -> that : 1
supports random access -> so : 1
supports random access -> a : 1
random access so -> you : 1
access so you -> can : 1
can use strings -> with : 1
use strings with -> the : 1
functions can throw -> specifying : 1
can throw specifying -> an : 1
throw specifying an -> index : 1
specifying an index -> out : 1
an index out -> of : 2
index out of -> range : 2
out of range -> often : 1
out of range -> is : 1
out of range -> or : 1
of range often -> throws : 1
range often throws -> an : 1
often throws an -> attempt : 1
throws an attempt -> to : 1
an attempt to -> construct : 1
an attempt to -> demonstrate : 1
attempt to construct -> a : 1
construct a string -> or : 1
string or modify -> a : 1
or modify a -> string : 1
modify a string -> so : 1
a string so -> its : 1
string so its -> length : 1
so its length -> exceeds : 1
its length exceeds -> throws : 1
length exceeds throws -> the : 1
exceeds throws the -> class : 1
throws the class -> uses : 1
the class uses -> an : 1
class uses an -> allocator : 1
uses an allocator -> object : 1
allocator object for -> memory : 1
object for memory -> which : 1
for memory which -> can : 1
memory which can -> throw : 1
which can throw -> an : 1
an exception as -> almost : 1
exception as almost -> any : 1
as almost any -> time : 1
almost any time -> the : 1
any time the -> string : 1
time the string -> is : 1
string is and -> references : 1
is and references -> to : 1
references to elements -> of : 1
of a string -> become : 1
of a string -> or : 2
a string become -> invalid : 1
string become invalid -> in : 1
invalid in the -> following : 1
the following string -> is : 1
following string is -> the : 1
string is the -> target : 1
is the target -> of : 1
or an argument -> to : 1
the function string -> is : 1
function string is -> an : 1
is an argument -> to : 1
argument to or -> call : 1
to or call -> the : 1
call the or -> member : 1
or member call -> any : 1
member call any -> member : 1
call any member -> function : 1
any member function -> except : 1
any member function -> of : 2
member function except -> or : 1
function except or -> call : 1
except or call -> the : 1
call the version -> of : 1
of or after -> any : 1
or after any -> of : 1
after any of -> the : 1
of the above -> except : 1
the above except -> after : 1
above except after -> calling : 1
except after calling -> a : 1
after calling a -> form : 1
calling a form -> of : 1
a form of -> or : 1
form of or -> that : 1
of or that -> returns : 1
or that returns -> an : 1
an iterator the -> returned : 1
iterator the returned -> iterator : 1
the returned iterator -> remains : 1
returned iterator remains -> following : 1
iterator remains following -> are : 1
remains following are -> the : 1
members of several -> small : 1
of several small -> examples : 1
several small examples -> appear : 1
small examples appear -> throughout : 1
examples appear throughout -> this : 1
appear throughout this -> illustrating : 1
throughout this illustrating -> the : 1
this illustrating the -> use : 1
illustrating the use -> of : 1
use of some -> of : 1
more complex member -> some : 1
complex member some -> of : 1
member some of -> the : 1
functions are described -> in : 1
described in terms -> of : 1
terms of temporary -> string : 1
of temporary string -> objects : 1
temporary string objects -> or : 1
string objects or -> calls : 1
objects or calls -> to : 1
or calls to -> other : 1
to other member -> the : 1
other member the -> actual : 1
member the actual -> implementation : 1
might be provided -> the : 1
be provided the -> behavior : 1
provided the behavior -> is : 1
is the a -> an : 1
the a an -> empty : 1
a an empty -> a : 1
empty a string -> that : 1
of with as -> the : 1
the a substring -> of : 1
the a substring -> and : 1
the a substring -> that : 1
a substring of -> starting : 2
a substring of -> into : 1
substring of starting -> at : 2
of range is -> the : 1
of characters copied -> is : 1
characters copied is -> or : 1
copied is or -> the : 1
of characters left -> in : 1
characters left in -> the : 1
left in the -> string : 1
left in the -> input : 1
the string whichever -> is : 1
string whichever is -> the : 1
whichever is the -> first : 1
the first characters -> from : 1
the first characters -> of : 3
first characters from -> a : 1
a character more -> this : 1
character more this -> constructor : 1
more this constructor -> copies : 1
this constructor copies -> characters : 1
constructor copies characters -> from : 1
string with copies -> of : 1
the character constructor -> depends : 1
character constructor depends -> on : 1
constructor depends on -> the : 1
of any input -> the : 1
any input the -> string : 1
input the string -> is : 1
string is initialized -> by : 1
string is initialized -> with : 1
initialized by copying -> the : 1
copying the contents -> of : 1
range is an -> integral : 1
integral the string -> is : 1
the character characters -> to : 1
character characters to -> the : 1
if is up -> to : 1
copied from starting -> at : 1
from starting at -> position : 1
position the return -> value : 1
is see also -> later : 3
see also later -> in : 3
also later in -> this : 4
this a temporary -> string : 1
temporary string passing -> the : 2
string passing the -> arguments : 2
passing the arguments -> to : 2
the and returns -> the : 2
string and replaces -> them : 1
with the substring -> of : 1
the substring of -> that : 1
substring of that -> starts : 1
of that starts -> at : 1
at and extends -> for : 3
and extends for -> up : 4
extends for up -> to : 4
in this chart -> a : 1
this chart a -> temporary : 1
chart a temporary -> string : 1
character at position -> if : 2
if is see -> also : 1
this an iterator -> that : 1
array that contains -> the : 1
contains the same -> characters : 1
the same characters -> as : 1
same characters as -> the : 1
characters as the -> string : 1
the string followed -> by : 1
string followed by -> a : 1
null the pointer -> becomes : 1
the pointer becomes -> invalid : 2
pointer becomes invalid -> after : 2
becomes invalid after -> calling : 2
invalid after calling -> any : 2
after calling any -> member : 2
calling any member -> function : 2
the the typical -> use : 1
the typical use -> of : 1
is to interface -> with : 1
to interface with -> c : 1
interface with c -> functions : 1
with c functions -> that : 1
c functions that -> require : 1
functions that require -> a : 1
that require a -> character : 1
require a character -> also : 1
a character also -> the : 1
character also the -> member : 1
also the member -> the : 1
also the member -> if : 1
member the number -> of : 1
of characters allocated -> for : 1
characters allocated for -> use : 1
allocated for use -> by : 1
the string grows -> as : 1
string grows as -> tells : 1
grows as tells -> you : 1
as tells you -> how : 1
tells you how -> much : 1
how much you -> can : 1
much you can -> put : 1
you can put -> in : 1
can put in -> the : 1
put in the -> string : 1
the string before -> it : 1
string before it -> must : 1
before it must -> grow : 1
it must grow -> all : 1
must grow all -> the : 1
grow all the -> characters : 1
and a temporary -> string : 1
temporary string and -> returns : 6
string and returns -> a : 1
string and returns -> two : 1
string and returns -> in : 4
and returns two -> temporary : 1
returns two temporary -> strings : 1
two temporary strings -> and : 1
temporary strings and -> or : 1
strings and or -> the : 1
and or the -> function : 1
function returns up -> to : 1
returns up to -> characters : 1
from the starting -> at : 2
the starting at -> position : 2
character array if -> is : 1
character array if -> the : 1
array if is -> the : 1
same character contents -> as : 1
character contents as -> the : 1
contents as the -> note : 1
that the character -> array : 5
array is not -> if : 1
not if returns -> a : 1
returns a do -> not : 1
modify the contents -> of : 1
of the see -> also : 1
string is empty -> an : 1
is empty an -> iterator : 1
empty an iterator -> that : 1
at position and -> erasing : 1
at position and -> extends : 1
position and erasing -> or : 1
and erasing or -> whichever : 1
erasing or whichever -> is : 1
or whichever is -> if : 1
whichever is if -> is : 1
character at and -> returns : 1
at and returns -> an : 1
next character there -> is : 1
character there is -> or : 1
there is or -> iterator : 1
is or iterator -> characters : 1
or iterator characters -> in : 1
iterator characters in -> the : 1
range and returns -> an : 1
character that pointed -> to : 1
that pointed to -> to : 1
pointed to to -> the : 1
to to the -> or : 1
or the smallest -> index : 1
the smallest index -> of : 1
smallest index of -> a : 1
index of a -> string : 1
string or or -> if : 1
if the search -> the : 2
the search the -> search : 1
the search the -> string : 1
search the search -> starts : 1
search starts at -> position : 1
starts at position -> the : 1
starts at position -> and : 1
position the string -> to : 1
string to search -> for : 2
search for is -> or : 2
for is or -> a : 2
or a temporary -> string : 2
temporary string constructed -> as : 4
temporary string constructed -> from : 1
string constructed as -> or : 4
constructed as or -> in : 2
constructed as or -> the : 4
constructed as or -> for : 1
constructed as or -> that : 1
in other returns -> the : 2
other returns the -> smallest : 1
other returns the -> largest : 1
that and for -> all : 2
for all for -> also : 1
all for also -> later : 1
for also later -> in : 1
first character at -> or : 2
character at or -> after : 2
character at or -> before : 2
at or after -> position : 2
or after position -> that : 2
after position that -> does : 1
after position that -> appears : 1
position that does -> not : 2
appear in or -> if : 2
every character appears -> in : 2
character appears in -> for : 4
appears in for -> a : 4
for a temporary -> string : 4
which is constructed -> as : 4
or the first -> character : 1
position that appears -> in : 2
appears in or -> if : 2
no character appears -> in : 2
or the last -> character : 2
last character at -> or : 2
at or before -> position : 2
at or before -> of : 1
or before position -> that : 2
before position that -> does : 1
before position that -> appears : 1
or the allocator -> a : 1
the allocator a -> substring : 1
allocator a substring -> of : 1
substring of into -> the : 1
of into the -> string : 1
the string starting -> at : 1
position the substring -> to : 1
the substring to -> insert : 1
substring to insert -> starts : 1
to insert starts -> at : 1
insert starts at -> and : 1
up to if -> or : 1
to if or -> is : 1
if or is -> the : 2
of characters inserted -> is : 1
characters inserted is -> the : 1
inserted is the -> smaller : 1
is for s -> s : 1
for s s -> in : 1
s s in -> which : 1
s in which -> the : 1
which the last -> three : 1
last three versions -> construct : 1
three versions construct -> a : 1
versions construct a -> temporary : 1
temporary string as -> or : 1
string as or -> and : 1
as or and -> then : 1
or and then -> returns : 1
and then returns -> chart : 1
then returns chart -> text : 1
returns chart text -> before : 1
chart text before -> the : 1
text before the -> character : 1
before the character -> that : 1
points the first -> version : 1
inserts the character -> and : 1
version inserts copies -> of : 1
and the third -> version : 1
third version inserts -> the : 1
inserts the temporary -> string : 1
the temporary string -> constructed : 1
the temporary string -> contains : 1
string constructed from -> the : 1
constructed from the -> arguments : 1
from the arguments -> if : 1
the arguments if -> is : 1
arguments if is -> an : 1
integral the temporary -> string : 1
temporary string contains -> copies : 1
string contains copies -> of : 1
character the size -> of : 1
possible the character -> at : 1
position if the -> return : 1
that a null -> the : 1
same the assignment -> operator : 1
assignment operator does -> nothing : 1
operator does nothing -> and : 1
does nothing and -> returns : 1
nothing and returns -> if : 1
returns if they -> are : 1
they are different -> the : 1
are different the -> operator : 1
different the operator -> replaces : 1
the operator replaces -> the : 1
operator replaces the -> current : 1
replaces the current -> string : 1
the current string -> contents : 1
current string contents -> with : 1
string contents with -> the : 1
string contents with -> in : 1
contents of and -> returns : 1
a temporary or -> and : 1
temporary or and -> assigns : 1
or and assigns -> the : 1
assigns the return -> value : 1
is with the -> same : 1
the same arguments -> and : 1
same arguments and -> returns : 1
of the its -> existence : 1
the its existence -> lets : 1
its existence lets -> you : 1
existence lets you -> use : 1
you use with -> a : 1
a substring and -> inserts : 1
substring and inserts -> another : 1
and inserts another -> string : 1
inserts another string -> in : 1
another string in -> its : 1
string in its -> the : 1
in its the -> string : 1
its the string -> to : 1
string to erase -> starts : 1
to erase starts -> at : 1
erase starts at -> and : 1
to characters smaller -> of : 3
characters smaller of -> and : 3
string to insert -> is : 1
to insert is -> a : 1
insert is a -> substring : 1
is a substring -> of : 1
at and extending -> for : 1
extending for up -> to : 1
and the replacement -> string : 1
the replacement string -> is : 1
replacement string is -> inserted : 1
string is inserted -> at : 1
is inserted at -> if : 1
inserted at if -> or : 1
at if or -> is : 1
is a temporary -> string : 2
as or for -> birthday : 1
or for birthday -> the : 1
for birthday the -> text : 1
birthday the text -> in : 1
the text in -> the : 1
text in the -> range : 1
range and inserts -> at : 1
and inserts at -> the : 1
inserts at the -> position : 1
the position pointed -> the : 1
position pointed the -> return : 1
pointed the return -> value : 1
as or that -> the : 1
or that the -> is : 1
that the is -> at : 1
the is at -> least : 1
large as call -> to : 1
as call to -> avoid : 1
call to avoid -> the : 2
to avoid the -> need : 2
avoid the need -> to : 2
need to reallocate -> the : 2
to reallocate the -> string : 1
to reallocate the -> vector : 1
reallocate the string -> data : 1
the string data -> repeatedly : 1
string data repeatedly -> when : 1
data repeatedly when -> you : 1
repeatedly when you -> know : 2
know the string -> will : 1
the string will -> grow : 1
string will grow -> by : 1
will grow by -> small : 2
grow by small -> increments : 2
by small increments -> to : 2
small increments to -> a : 2
increments to a -> large : 2
a large note -> that : 1
large note that -> does : 1
does not chart -> the : 1
not chart the -> size : 1
chart the size -> of : 1
the new string -> has : 2
new string has -> the : 1
new string has -> copies : 1
string has the -> first : 1
has the first -> characters : 1
first characters of -> the : 3
string has copies -> of : 1
has copies of -> appended : 1
copies of appended -> to : 1
of appended to -> the : 1
second version returns -> the : 1
version returns the -> largest : 1
the largest index -> at : 1
largest index at -> or : 1
index at or -> before : 1
or before of -> a : 1
before of a -> string : 1
or character or -> if : 1
search the string -> to : 1
the largest such -> that : 1
largest such that -> and : 1
for all also -> earlier : 1
all also earlier -> in : 1
also earlier in -> this : 1
in this for -> the : 1
this for the -> number : 1
for the number -> of : 1
a substring that -> starts : 1
substring that starts -> at : 1
position and extends -> for : 1
if is string -> contents : 1
is string contents -> with : 1
contents with in -> constant : 1
with in constant -> class : 1
in constant class -> class : 1
class for character -> struct : 1
for character struct -> template : 1
character struct template -> describes : 1
struct template describes -> a : 1
template describes a -> character : 1
type and provides -> basic : 1
and provides basic -> functions : 1
provides basic functions -> for : 1
basic functions for -> and : 1
for and copying -> character : 1
and copying character -> values : 1
copying character values -> and : 1
character values and -> the : 1
character values and -> has : 1
values and the -> and : 1
values and the -> advantage : 1
the and specializations -> later : 1
and specializations later -> in : 1
specializations later in -> this : 1
if you create -> a : 1
you create a -> custom : 1
create a custom -> character : 1
a custom character -> you : 1
you should specialize -> or : 1
should specialize or -> define : 1
specialize or define -> your : 1
or define your -> own : 1
your own traits -> which : 1
own traits which -> you : 1
traits which you -> can : 1
can provide to -> and : 1
provide to and -> other : 1
and other templates -> as : 1
other templates as -> the : 1
templates as the -> template : 1
the template your -> traits : 1
template your traits -> class : 1
your traits class -> should : 1
traits class should -> define : 1
class should define -> the : 1
define the same -> members : 1
the same members -> that : 1
same members that -> see : 1
members that see -> for : 1
for an class -> character : 1
an class character -> traits : 1
class character traits -> of : 2
character traits of -> char : 1
character traits of -> struct : 1
traits of char -> struct : 1
of char struct -> typedef : 1
char struct typedef -> char : 1
int typedef streamoff -> typedef : 1
typedef streamoff typedef -> streampos : 1
typedef streamoff typedef -> wstreampos : 1
streamoff typedef streampos -> typedef : 1
typedef streampos typedef -> static : 1
streampos typedef static -> void : 1
void const static -> const : 2
const static bool -> const : 4
const static static -> int : 2
const static static -> static : 4
static const const -> static : 2
const const static -> static : 2
static static static -> bool : 2
static static static -> static : 2
static static static -> with : 1
static static static -> class : 1
static static bool -> const : 2
static static with -> no : 1
static with no -> class : 1
no class specializes -> for : 1
specializes for narrow -> the : 1
for narrow the -> type : 1
type is defined -> as : 2
defined as in -> the : 2
character traits are -> defined : 2
traits are defined -> for : 2
defined for the -> type : 2
type and have -> the : 2
meaning in all -> the : 1
meaning in all -> earlier : 1
all the other -> types : 1
the other types -> are : 2
are the following -> are : 1
the member const -> with : 1
member const with -> copies : 1
const with copies -> of : 1
copies of that -> through : 1
of that through -> the : 1
that through the -> first : 1
through the first -> characters : 1
the arrays and -> returning : 1
the arrays and -> must : 1
the arrays and -> are : 1
arrays and returning -> an : 1
returning an integer -> if : 1
an integer if -> is : 1
integer if is -> true : 1
in if is -> true : 1
true for some -> in : 1
some in characters -> from : 1
in characters from -> to : 1
to the arrays -> and : 2
arrays and must -> not : 1
must not the -> the : 1
the the marker -> is : 1
the marker is -> different : 1
marker is different -> from : 1
different from all -> that : 1
from all that -> for : 1
all that for -> all : 1
for all character -> values : 2
all character values -> is : 1
all character values -> and : 1
character values is -> const : 1
values is const -> const : 1
const const if -> is : 1
const if is -> the : 1
const if is -> less : 2
const if is -> greater : 2
as for all -> character : 1
values and has -> the : 1
value as is -> always : 1
as is always -> equal : 1
to and not -> equal : 1
and not equal -> to : 1
to for any -> character : 1
any character the -> value : 1
character the value -> is : 1
value is unspecified -> for : 1
is unspecified for -> any : 1
unspecified for any -> other : 1
other integer a -> pointer : 1
integer a pointer -> to : 1
character in such -> that : 1
that is it -> returns : 1
no such character -> in : 1
such character in -> the : 1
of the length -> of : 1
character string that -> it : 1
string that it -> returns : 1
that is const -> characters : 1
is const characters -> from : 1
const characters from -> to : 1
arrays and are -> allowed : 1
and are allowed -> to : 1
are allowed to -> a : 1
allowed to a -> value : 1
that is guaranteed -> to : 1
to be different -> from : 1
different from if -> is : 1
not is some -> other : 1
is some other -> value : 1
some other value -> is : 1
is to its -> equivalent : 2
its equivalent character -> value : 1
equivalent character value -> which : 1
character value which -> is : 1
value which is -> if : 1
which is if -> is : 1
is not equivalent -> to : 1
not equivalent to -> any : 1
equivalent to any -> the : 1
any the behavior -> is : 1
its equivalent integer -> in : 1
equivalent integer in -> in : 1
integer in in -> class : 1
in class character -> traits : 1
traits of struct -> typedef : 1
of struct typedef -> typedef : 1
typedef typedef streamoff -> typedef : 1
streamoff typedef wstreampos -> typedef : 1
typedef wstreampos typedef -> static : 1
wstreampos typedef static -> void : 1
static static class -> specializes : 1
static class specializes -> for : 1
specializes for wide -> the : 1
for wide the -> type : 1
are the character -> traits : 1
in all earlier -> in : 1
all earlier in -> this : 1
a line into -> a : 1
line into a -> class : 1
class class chart -> char : 1
class chart char -> class : 1
chart char class -> class : 1
char class class -> function : 1
text from an -> input : 1
the string it -> starts : 1
string it starts -> by : 1
starts by creating -> a : 1
creating a if -> the : 1
sentry object evaluates -> to : 1
object evaluates to -> erases : 1
evaluates to erases -> then : 1
to erases then -> reads : 1
erases then reads -> characters : 1
then reads characters -> from : 2
from and appends -> them : 1
from and appends -> the : 1
and appends them -> to : 1
appends them to -> until : 1
them to until -> is : 1
to until is -> reached : 1
until is reached -> or : 1
reached or is -> character : 1
or is character -> is : 1
is character is -> read : 1
stream but not -> appended : 1
but not appended -> to : 1
to the reading -> also : 1
the reading also -> stops : 1
reading also stops -> if : 1
reading also stops -> at : 1
also stops if -> characters : 1
stops if characters -> have : 1
if characters have -> been : 1
have been stored -> in : 1
been stored in -> the : 1
case is if -> no : 1
value is second -> form : 1
second form of -> uses : 1
form of uses -> a : 1
of uses a -> newline : 1
uses a newline -> as : 1
a newline as -> the : 1
newline as the -> that : 1
as the that -> it : 1
function template concatenates -> two : 1
template concatenates two -> class : 1
concatenates two class -> class : 1
const class class -> const : 3
const class class -> bool : 12
class const chart -> char : 1
const chart char -> operator : 1
chart char operator -> concatenates : 1
char operator concatenates -> two : 1
operator concatenates two -> strings : 1
concatenates two strings -> and : 1
two strings and -> returns : 1
strings and returns -> the : 1
returns the it -> constructs : 1
the it constructs -> a : 1
it constructs a -> new : 1
constructs a new -> string : 1
a new string -> as : 1
new string as -> a : 1
copy of then -> calls : 1
of then calls -> and : 1
then calls and -> returns : 1
template compares strings -> for : 6
compares strings for -> class : 6
strings for class -> class : 6
const const bool -> const : 6
const bool conat -> operator : 6
bool conat operator -> compares : 6
conat operator compares -> two : 6
two strings for -> equality : 1
two strings for -> inequality : 1
strings for equality -> or : 1
equality or compares -> a : 1
or compares a -> string : 6
compares a string -> and : 6
string and a -> character : 6
it returns converting -> or : 5
returns converting or -> from : 5
converting or from -> a : 5
a as class -> class : 5
as class class -> function : 5
strings for inequality -> or : 1
for inequality or -> compares : 1
inequality or compares -> a : 1
two strings or -> compares : 4
strings or compares -> a : 4
an output class -> class : 1
const const operator -> writes : 1
const const operator -> throws : 2
const const operator -> performs : 11
const const operator -> compares : 6
operator writes the -> string : 1
string to like -> any : 1
to like any -> formatted : 1
like any formatted -> output : 1
any formatted output -> it : 1
formatted output it -> first : 1
output it first -> creates : 1
it first creates -> a : 2
first creates a -> sentry : 2
creates a sentry -> and : 1
creates a sentry -> object : 1
a sentry and -> if : 1
sentry and if -> the : 1
evaluates to it -> writes : 1
evaluates to it -> erases : 1
to it writes -> the : 1
it writes the -> string : 1
contents by calling -> if : 1
calling if fill -> characters : 1
if fill characters -> are : 1
added to achieve -> the : 1
desired if is -> in : 1
a string from -> an : 1
a string from -> and : 1
string from an -> input : 1
an input class -> class : 1
class class operator -> reads : 1
class operator reads -> a : 1
string from and -> stores : 1
stores the string -> in : 1
string in like -> any : 1
in like any -> other : 1
any other formatted -> input : 1
other formatted input -> it : 1
formatted input it -> first : 1
input it first -> creates : 1
a sentry object -> and : 1
sentry object and -> if : 1
object and if -> the : 1
to it erases -> and : 1
it erases and -> then : 1
erases and then -> reads : 1
and then reads -> characters : 1
and appends the -> characters : 1
appends the characters -> to : 1
greater than no -> more : 1
than no more -> than : 1
more than characters -> are : 1
read from up -> to : 1
from up to -> characters : 1
characters are reading -> also : 1
are reading also -> stops : 1
also stops at -> or : 1
stops at or -> when : 1
at or when -> reading : 1
or when reading -> a : 1
reading a whitespace -> character : 1
whitespace character is -> true : 1
whitespace character is -> left : 1
character is true -> for : 1
true for locale -> the : 1
for locale the -> whitespace : 1
locale the whitespace -> character : 1
the whitespace character -> is : 1
character is left -> in : 1
is left in -> the : 1
input the return -> value : 1
string class specializes -> for : 2
specializes for type -> class : 2
for type class -> class : 2
swaps two class -> class : 1
class void void -> function : 1
void void function -> template : 1
calling in class -> wide : 1
calling in class -> class : 1
declares several classes -> for : 1
several classes for -> reading : 1
classes for reading -> from : 1
reading from character -> arrays : 1
from character arrays -> and : 1
character arrays and -> writing : 1
arrays and writing -> to : 1
writing to character -> arrays : 1
character arrays in -> the : 1
arrays in the -> same : 1
writing to header -> and : 1
to header and -> its : 1
header and its -> classes : 1
header and its -> class : 1
and its classes -> are : 1
its classes are -> deprecated : 1
classes are deprecated -> in : 1
deprecated in the -> meaning : 1
in the meaning -> they : 1
the meaning they -> might : 1
meaning they might -> disappear : 1
they might disappear -> from : 1
might disappear from -> a : 1
disappear from a -> future : 1
from a future -> version : 1
a future version -> of : 1
future version of -> the : 1
you are encouraged -> to : 1
are encouraged to -> use : 1
encouraged to use -> the : 1
the header and -> its : 1
and its class -> the : 1
its class the -> classes : 1
class the classes -> have : 1
the classes have -> their : 1
classes have their -> when : 1
have their when -> you : 1
their when you -> are : 1
you are dealing -> exclusively : 1
are dealing exclusively -> with : 1
dealing exclusively with -> narrow : 1
exclusively with narrow -> and : 1
narrow and are -> using : 1
and are using -> character : 1
are using character -> arrays : 1
using character arrays -> instead : 1
character arrays instead -> of : 1
arrays instead of -> string : 1
instead of string -> these : 1
of string these -> classes : 1
string these classes -> sometimes : 1
these classes sometimes -> offer : 1
classes sometimes offer -> better : 1
sometimes offer better -> performance : 1
offer better performance -> than : 1
performance than their -> and : 1
than their and -> for : 1
their and for -> a : 1
the and sections -> in : 1
and sections in -> this : 1
sections in this -> chapter : 1
about the base -> classes : 1
the base classes -> from : 1
base classes from -> which : 1
classes from which -> the : 1
from which the -> classes : 1
which the classes -> refer : 1
the classes refer -> to : 1
the class input -> character : 1
class input character -> array : 1
input character array -> public : 1
character array public -> istream : 1
character array public -> ostream : 1
character array public -> iostream : 1
character array public -> explicit : 1
array public istream -> explicit : 1
public istream explicit -> explicit : 1
istream explicit explicit -> streamsize : 1
explicit explicit streamsize -> streamsize : 1
explicit streamsize streamsize -> class : 1
streamsize class represents -> an : 1
class represents an -> input : 1
class represents an -> output : 1
represents an input -> string : 1
an input string -> to : 1
an input string -> stream : 2
input string to -> construct : 1
construct an pass -> a : 1
an pass a -> character : 1
pass a character -> array : 1
character array an -> optional : 1
character array an -> internal : 1
array an optional -> you : 1
an optional you -> can : 1
optional you can -> then : 1
can then read -> from : 1
an internal stream -> buffer : 2
internal stream buffer -> as : 2
stream buffer as -> and : 2
buffer as and -> passing : 2
as and passing -> the : 2
stream buffer to -> the : 2
constructor for streamsize -> streamsize : 1
for streamsize streamsize -> an : 1
streamsize streamsize an -> input : 1
streamsize an input -> string : 1
internal the internal -> in : 1
the internal in -> in : 1
internal in in -> class : 1
class output character -> array : 1
output character array -> public : 2
array public ostream -> int : 1
public ostream int -> mode : 1
ostream int mode -> void : 1
int mode void -> flag : 1
mode void flag -> int : 1
void flag int -> class : 1
flag int class -> represents : 1
int class represents -> an : 1
represents an output -> string : 1
an output string -> you : 1
string you can -> provide : 1
can provide a -> character : 1
provide a character -> and : 1
the stream contents -> are : 1
stream contents are -> written : 1
contents are written -> to : 1
written to that -> another : 1
to that another -> typical : 1
that another typical -> usage : 1
another typical usage -> is : 1
typical usage is -> to : 1
usage is to -> construct : 1
is to construct -> an : 1
with no argument -> and : 1
no argument and -> let : 1
argument and let -> the : 1
to the then -> call : 1
the then call -> to : 1
call to obtain -> the : 2
obtain the resulting -> character : 2
resulting character once -> you : 2
character once you -> call : 2
once you call -> the : 2
you call the -> stream : 2
call the stream -> is : 2
stream is and -> cannot : 1
is and cannot -> be : 1
be the pointer -> returned : 2
returned from remains -> valid : 2
from remains valid -> until : 2
remains valid until -> the : 2
valid until the -> object : 2
until the object -> is : 2
is destroyed or -> until : 2
destroyed or until -> you : 2
until you the -> stream : 1
you the stream -> to : 1
stream to allow -> writing : 2
to allow writing -> following : 2
allow writing following -> are : 2
writing following are -> the : 2
an internal object -> and : 4
internal object and -> passing : 4
object and passing -> the : 4
constructor for int -> a : 2
for int a -> string : 2
int a string -> stream : 2
constructor for if -> the : 2
buffer is constructed -> like : 4
is constructed like -> str : 2
is constructed like -> flag : 2
constructed like str -> the : 2
like str the -> bit : 2
str the bit -> is : 2
bit is clear -> in : 2
is clear in -> the : 2
clear in the -> buffer : 2
constructed like flag -> or : 2
like flag or -> thaws : 2
flag or thaws -> the : 2
or thaws the -> buffer : 2
or thaws the -> character : 1
thaws the buffer -> by : 2
calling a pointer -> to : 2
the internal a -> pointer : 2
internal a pointer -> to : 2
character that the -> number : 2
output buffer by -> calling : 2
and output character -> array : 1
array public iostream -> typedef : 1
public iostream typedef -> char : 1
iostream typedef char -> typedef : 1
char typedef typename -> typedef : 1
typedef typename int -> mode : 1
typename int mode -> virtual : 1
int mode virtual -> void : 1
mode virtual void -> freezefl : 1
virtual void freezefl -> int : 2
void freezefl int -> class : 1
void freezefl int -> virtual : 1
freezefl int class -> is : 1
is a stream -> class : 1
that performs input -> and : 1
performs input and -> output : 1
and output to -> a : 1
from the you -> can : 1
at any if -> you : 1
default constructor and -> write : 1
constructor and write -> to : 1
stream buffer grows -> as : 1
buffer grows as -> then : 1
grows as then -> you : 1
as then you -> can : 1
then you can -> call : 1
stream is frozen -> and : 1
is frozen and -> cannot : 1
frozen and cannot -> be : 1
until you thaw -> the : 1
you thaw the -> stream : 1
thaw the stream -> to : 1
in class buffer -> for : 1
class buffer for -> character : 1
buffer for character -> array : 2
for character array -> public : 1
for character array -> an : 1
array public explicit -> void : 1
public explicit void -> streamsize : 1
explicit void streamsize -> streamsize : 1
streamsize streamsize signed -> signed : 1
streamsize signed signed -> streamsize : 1
signed signed streamsize -> streamsize : 1
signed streamsize streamsize -> unsigned : 1
streamsize streamsize unsigned -> unsigned : 1
streamsize unsigned unsigned -> streamsize : 1
unsigned unsigned streamsize -> virtual : 1
unsigned streamsize virtual -> void : 1
streamsize virtual void -> freezefl : 1
freezefl int virtual -> c : 1
int virtual c -> virtual : 1
which class implements -> a : 1
class implements a -> stream : 1
array an internal -> buffer : 1
an internal buffer -> maintains : 1
internal buffer maintains -> a : 1
single character array -> with : 1
character array with -> separate : 1
array with separate -> positions : 1
next character is -> to : 1
character is to -> be : 1
is to be -> read : 1
to be read -> or : 1
about buffer object -> maintains : 1
buffer object maintains -> a : 1
object maintains a -> set : 1
maintains a set -> of : 1
set of an -> allocated : 1
an allocated buffer -> and : 1
allocated buffer and -> two : 1
buffer and two -> function : 1
and two function -> pointers : 1
two function pointers -> for : 1
function pointers for -> an : 1
pointers for an -> allocation : 1
for an allocation -> and : 1
an allocation and -> deallocation : 1
and deallocation if -> the : 1
allocation function pointer -> is : 1
function pointer is -> the : 2
is the operator -> is : 2
used for allocating -> the : 1
for allocating the -> character : 1
allocating the character -> if : 1
if the deallocation -> function : 1
deallocation function pointer -> is : 1
operator is flags -> that : 1
is flags that -> the : 1
flags that the -> character : 1
character array has -> been : 2
array has been -> so : 1
array has been -> dynamically : 1
has been so -> the : 1
been so the -> destructor : 1
so the destructor -> should : 1
the destructor should -> delete : 1
destructor should delete -> that : 1
should delete that -> the : 1
delete that the -> character : 1
array is so -> it : 1
used for that -> the : 1
for that the -> character : 1
has been dynamically -> allocated : 1
been dynamically allocated -> and : 1
dynamically allocated and -> can : 1
allocated and can -> grow : 1
and can grow -> as : 1
grow as needed -> to : 1
needed to accommodate -> that : 1
to accommodate that -> the : 1
accommodate that the -> character : 1
array can no -> longer : 1
can no longer -> be : 1
no longer be -> or : 1
longer be or -> following : 1
be or following -> are : 1
or following are -> the : 1
functions of as -> the : 1
as the suggested -> size : 1
the suggested size -> of : 1
suggested size of -> the : 1
character and sets -> the : 1
and sets the -> the : 1
and sets the -> allocation : 1
sets the the -> allocation : 1
the allocation and -> deallocation : 3
and deallocation functions -> are : 1
and deallocation functions -> to : 1
deallocation functions are -> set : 1
functions are set -> to : 1
set to null -> the : 1
null the flag -> and : 1
the flag and -> saves : 1
flag and saves -> and : 1
and saves and -> as : 1
saves and as -> the : 1
and deallocation all -> flags : 1
deallocation all flags -> and : 1
all flags and -> sets : 1
flags and sets -> the : 1
sets the allocation -> and : 1
deallocation functions to -> null : 1
functions to null -> if : 1
to null if -> is : 1
the output pointers -> are : 2
output pointers are -> null : 1
output pointers are -> set : 1
are null and -> the : 1
null and the -> input : 1
buffer is set -> to : 1
set to bytes -> starting : 1
to bytes starting -> at : 1
bytes starting at -> by : 1
starting at by -> calling : 1
at by calling -> if : 1
calling if is -> not : 1
not the input -> pointers : 1
pointers are set -> by : 2
are set by -> calling : 2
calling and the -> output : 1
calling is determined -> as : 1
determined as is -> is : 1
the buffer pointers -> in : 1
buffer pointers in -> the : 1
pointers in the -> same : 1
manner as constructing -> the : 1
as constructing the -> only : 1
constructing the only -> difference : 1
that the flag -> is : 1
flag is destructor -> frees : 1
is destructor frees -> the : 1
destructor frees the -> character : 1
frees the character -> array : 1
array if the -> flag : 1
set and the -> flag : 1
and the flag -> is : 2
flag is freezefl -> or : 1
is freezefl or -> thaws : 1
freezefl or thaws -> the : 1
thaws the character -> if : 1
is the freeze -> function : 1
the freeze function -> sets : 1
freeze function sets -> or : 1
sets or clears -> the : 1
or clears the -> flag : 1
the flag to -> match : 1
flag to match -> the : 1
match the if -> the : 1
flag is does -> the : 1
does the internal -> character : 1
the internal character -> buffer : 1
internal character buffer -> by : 1
character buffer by -> calling : 1
calling and returning -> the : 1
and returning the -> number : 1
returning the number -> of : 1
number of output -> bytes : 1
of output bytes -> in : 1
output bytes in -> the : 1
is is overridden -> virtual : 1
is overridden virtual -> functions : 1
overridden virtual functions -> c : 1
virtual functions c -> to : 1
functions c to -> append : 1
character array as -> nothing : 1
array as nothing -> happens : 1
as nothing happens -> and : 1
nothing happens and -> a : 1
happens and a -> character : 1
to indicate and -> a : 1
indicate and a -> write : 1
character array by -> calling : 1
array by calling -> a : 1
not the flag -> is : 1
flag is then -> the : 1
then the character -> array : 1
is extended and -> is : 1
extended and is -> appended : 1
and is appended -> to : 1
the the array -> is : 1
extended by allocating -> a : 1
by allocating a -> larger : 1
allocating a larger -> character : 1
a larger character -> copying : 1
larger character copying -> the : 1
character copying the -> old : 1
copying the old -> contents : 1
the old contents -> updating : 1
old contents updating -> the : 1
contents updating the -> read : 1
updating the read -> and : 1
and write if -> the : 1
write if the -> array : 1
array is successfully -> the : 1
is successfully the -> flag : 1
successfully the flag -> is : 1
the array cannot -> be : 1
array cannot be -> so : 1
function return value -> is : 2
or for if -> is : 2
a value other -> than : 2
than is returned -> for : 2
is returned for -> to : 1
is returned for -> the : 1
returned for to -> push : 1
onto the input -> array : 1
input array for -> reading : 1
array for reading -> as : 1
reading as and -> a : 1
to a putback -> position : 1
to the flag -> is : 1
assigned the character -> cannot : 1
the character cannot -> be : 1
cannot be put -> so : 1
be put so -> the : 1
put so the -> function : 1
returned for the -> stream : 1
determined by adding -> the : 1
adding the offset -> to : 1
the offset to -> a : 1
offset to a -> base : 1
a base position -> given : 1
base position given -> by : 1
position given by -> which : 1
given by which -> must : 1
the base position -> is : 1
base position is -> the : 2
base position is -> at : 1
is the at -> start : 1
the at start -> of : 1
at start of -> the : 1
is an absolute -> base : 1
an absolute base -> position : 1
absolute base position -> is : 1
the current stream -> base : 1
current stream base -> position : 1
stream base position -> is : 1
the all a -> positive : 1
all a positive -> offset : 1
a positive offset -> is : 1
positive offset is -> toward : 1
offset is toward -> the : 2
is toward the -> end : 1
is toward the -> start : 1
and a negative -> offset : 1
a negative offset -> is : 1
negative offset is -> toward : 1
toward the start -> of : 1
no the result -> of : 1
to is another -> character : 1
is another character -> from : 1
another character from -> the : 1
input range without -> moving : 1
range without moving -> the : 1
without moving the -> input : 1
moving the input -> if : 1
input if the -> stream : 1
no read but -> there : 1
read but there -> is : 1
is a write -> pointer : 1
a write pointer -> past : 1
write pointer past -> the : 1
pointer past the -> end : 1
input the read -> end : 1
pointer is advanced -> at : 1
is advanced at -> least : 1
advanced at least -> one : 1
least one position -> but : 1
one position but -> still : 1
position but still -> less : 1
but still less -> than : 1
still less than -> or : 1
class the and -> two : 1
the and two -> exception : 1
and two exception -> classes : 1
two exception classes -> related : 1
exception classes related -> to : 1
classes related to -> type : 1
related to type -> information : 1
to type information -> and : 1
information and class -> exception : 1
and class exception -> for : 1
class exception for -> public : 1
class exception for -> null : 1
exception for public -> exception : 1
const operator throws -> when : 2
operator throws when -> the : 1
operator throws when -> it : 1
throws when the -> cast : 1
when the cast -> of : 1
the cast of -> a : 1
cast of a -> reference : 1
a reference see -> in : 1
reference see in -> for : 1
more class exception -> for : 1
exception for null -> pointer : 1
for null pointer -> in : 1
pointer in typeid -> public : 1
in typeid public -> exception : 1
typeid public exception -> virtual : 1
throws when it -> is : 1
to an expression -> of : 1
expression of the -> form : 1
a null see -> in : 1
null see in -> for : 1
more class type -> virtual : 1
class type virtual -> bool : 1
type virtual bool -> bool : 1
virtual bool bool -> bool : 1
bool const with -> no : 1
with no operator -> in : 1
no operator in -> returns : 1
operator in returns -> a : 1
returns a static -> the : 1
a static the -> type : 1
static the type -> information : 1
type information includes -> the : 1
information includes the -> name : 1
includes the name -> and : 1
and a collation -> both : 1
a collation both -> of : 1
collation both of -> which : 1
both of which -> are : 1
are an implementation -> might : 1
implementation might derive -> classes : 1
might derive classes -> from : 1
derive classes from -> to : 1
classes from to -> provide : 1
from to provide -> additional : 1
to provide additional -> that : 1
provide additional that -> the : 1
additional that the -> copy : 1
and assignment operators -> are : 1
operators are so -> you : 1
you must store -> pointers : 1
must store pointers -> if : 1
store pointers if -> you : 1
pointers if you -> want : 1
a standard type -> shows : 1
standard type shows -> how : 1
type shows how -> to : 1
how to store -> pointers : 1
to store pointers -> in : 2
store pointers in -> a : 1
store pointers in -> an : 1
pointers in a -> where : 1
in a where -> the : 1
a where the -> order : 1
where the order -> is : 1
order is determined -> by : 1
by the member -> type : 1
the member type -> typedef : 1
member type typedef -> bool : 1
type typedef bool -> const : 1
bool const typedef -> return : 1
const typedef return -> true : 1
typedef return true -> if : 1
return true if -> comes : 1
true if comes -> before : 1
if comes before -> function : 1
comes before function -> to : 1
before function to -> store : 1
function to store -> pointers : 1
pointers in an -> associative : 1
in an associative -> bool : 1
an associative bool -> const : 1
associative bool const -> return : 1
const return print -> a : 1
return print a -> name : 1
print a name -> on : 1
a name on -> a : 1
name on a -> void : 1
on a void -> void : 1
a void void -> construct : 1
void void construct -> and : 1
void construct and -> initialize : 1
construct and initialize -> the : 1
initialize the typeset -> print : 1
the typeset print -> the : 1
typeset print the -> types : 1
print the types -> in : 1
the types in -> the : 1
in the members -> of : 1
of if this -> object : 1
if this object -> comes : 1
this object comes -> before : 1
object comes before -> in : 1
comes before in -> the : 1
before in the -> the : 1
order of types -> can : 1
of types can -> vary : 1
types can vary -> between : 1
can vary between -> even : 1
vary between even -> for : 1
between even for -> the : 1
even for the -> same : 1
same the name -> as : 1
a which might -> be : 1
multibyte the contents -> of : 1
string are which -> are : 1
are which are -> equal : 1
are which are -> distinguished : 1
which are equal -> when : 1
are equal when -> the : 1
equal when the -> types : 1
when the types -> they : 1
the types they -> describe : 1
types they describe -> are : 1
they describe are -> the : 1
describe are the -> operator : 1
are the operator -> header : 1
the operator header -> declares : 1
operator header declares -> the : 1
class which has -> many : 1
which has many -> especially : 1
has many especially -> by : 1
many especially by -> maps : 1
especially by maps -> in : 1
by maps in -> the : 1
maps in the -> it : 1
it also defines -> the : 1
also defines the -> which : 1
also defines the -> following : 1
defines the which -> defines : 1
the which defines -> relational : 1
which defines relational -> operators : 1
defines relational operators -> in : 1
relational operators in -> terms : 1
operators in terms -> of : 1
of and function -> function : 1
and function function -> template : 1
constructs a pair -> typename : 1
a pair typename -> a : 1
pair typename a -> object : 1
typename a object -> and : 1
object and initializes -> it : 1
and initializes it -> with : 1
initializes it with -> the : 1
with the values -> and : 1
and the advantage -> of : 1
of using over -> a : 1
using over a -> simple : 1
over a simple -> constructor : 1
a simple constructor -> is : 1
simple constructor is -> that : 1
compiler can deduce -> the : 1
can deduce the -> types : 1
deduce the types -> and : 1
from the values -> and : 1
values and pairs -> of : 1
and pairs of -> shows : 1
pairs of shows -> a : 1
use of pairs -> of : 1
use of pairs -> is : 1
of pairs of -> suitable : 1
pairs of suitable -> for : 1
of suitable for -> passing : 1
suitable for passing -> to : 1
for passing to -> to : 1
passing to to -> find : 1
to to find -> minimum : 1
to find minimum -> and : 1
find minimum and -> maximum : 1
maximum values in -> a : 1
a range class -> minmax : 1
range class minmax -> void : 1
class minmax void -> if : 1
minmax void if -> if : 1
void if if -> operator : 1
if if operator -> const : 1
if operator const -> t : 1
operator const t -> t : 1
const t t -> int : 1
t t int -> fill : 1
t int fill -> v : 1
int fill v -> with : 2
fill v with -> mm : 1
fill v with -> data : 1
v with mm -> do : 1
with mm do -> something : 1
mm do something -> with : 1
something with class -> class : 1
with class class -> function : 1
template compares for -> typename : 8
template compares for -> bool : 4
template compares for -> const : 6
compares for typename -> bool : 8
bool const if -> and : 2
bool const if -> is : 4
const if and -> are : 2
and are that -> function : 1
are that function -> function : 1
compares for bool -> const : 4
for bool const -> template : 4
template typename bool -> const : 4
are not that -> function : 1
not that function -> function : 1
less than assuming -> that : 1
than assuming that -> the : 1
member is more -> significant : 1
is more significant -> than : 1
more significant than -> that : 1
significant than that -> the : 1
than that the -> return : 1
equal to that -> function : 1
equal to that -> class : 1
to that function -> function : 1
than that function -> function : 1
to that class -> class : 1
that class class -> template : 1
represents a pair -> of : 2
pair of related -> typename : 1
pair of related -> in : 1
of related typename -> struct : 1
related typename struct -> typedef : 1
typedef const typename -> class : 1
of related in -> which : 1
related in which -> the : 1
which the relationship -> is : 1
the relationship is -> defined : 1
relationship is defined -> by : 1
of pairs is -> by : 1
pairs is by -> the : 1
class which stores -> pairs : 1
which stores pairs -> of : 1
and associated boost -> project : 1
associated boost project -> has : 1
has a generalization -> of : 1
generalization of called -> see : 1
of called see -> for : 1
called see for -> information : 1
information about constructors -> are : 1
about constructors are -> as : 1
constructors are as -> and : 1
are as and -> as : 1
as and as -> const : 1
and as const -> with : 1
as const with -> and : 1
const with and -> with : 1
and with with -> and : 1
with with and -> with : 1
and with performing -> implicit : 1
with performing implicit -> conversions : 1
performing implicit conversions -> as : 1
implicit conversions as -> function : 1
conversions as function -> function : 1
as function function -> namespace : 1
function function namespace -> relational : 1
function namespace relational -> std : 1
namespace relational std -> namespace : 1
relational std namespace -> bool : 1
std namespace bool -> const : 1
namespace bool const -> bool : 1
bool const namespace -> declares : 1
const namespace declares -> four : 1
namespace declares four -> comparison : 1
declares four comparison -> the : 1
four comparison the -> four : 1
comparison the four -> operators : 1
the four operators -> are : 1
four operators are -> implemented : 1
operators are implemented -> in : 1
are implemented in -> terms : 1
and the namespace -> has : 1
the namespace has -> limited : 1
namespace has limited -> if : 1
has limited if -> you : 1
limited if you -> are : 1
are using an -> unusual : 1
using an unusual -> which : 1
an unusual which -> has : 1
unusual which has -> only : 1
which has only -> and : 1
has only and -> you : 1
only and you -> can : 1
can add a -> directive : 1
add a directive -> to : 1
a directive to -> a : 1
directive to a -> function : 1
function that makes -> heavy : 1
that makes heavy -> use : 1
makes heavy use -> of : 1
heavy use of -> comparison : 1
use of comparison -> operators : 1
of comparison operators -> and : 1
comparison operators and -> this : 1
operators and this -> unusual : 1
and this unusual -> even : 1
this unusual even -> is : 1
unusual even is -> fixing : 1
even is fixing -> the : 1
is fixing the -> class : 1
fixing the class -> declaration : 1
class declaration to -> provide : 1
declaration to provide -> all : 1
to provide all -> necessary : 1
provide all necessary -> comparison : 1
all necessary comparison -> if : 1
necessary comparison if -> you : 1
comparison if you -> are : 1
class that represents -> an : 1
represents an ordered -> you : 1
an ordered you -> should : 1
ordered you should -> provide : 1
should provide all -> six : 1
provide all six -> operators : 1
all six operators -> and : 1
six operators and -> not : 1
and not force -> your : 1
not force your -> users : 1
force your users -> to : 1
your users to -> rely : 1
users to rely -> on : 1
on the boost -> project : 1
project has templates -> that : 1
has templates that -> you : 1
templates that you -> can : 1
derive from to -> fill : 1
from to fill -> in : 1
to fill in -> all : 1
fill in all -> the : 1
the relational based -> on : 1
relational based on -> equality : 1
based on equality -> and : 1
on equality and -> see : 1
equality and see -> for : 1
functions for operating -> on : 1
operating on arrays -> of : 2
on arrays of -> numerical : 1
on arrays of -> different : 1
arrays of numerical -> the : 1
of numerical the -> intention : 1
of numerical the -> array : 1
numerical the intention -> is : 1
the intention is -> to : 1
is to provide -> types : 1
to provide types -> that : 1
provide types that -> could : 1
types that could -> be : 1
could be optimized -> on : 1
be optimized on -> certain : 1
optimized on certain -> hardware : 1
on certain hardware -> platforms : 1
certain hardware platforms -> for : 1
hardware platforms for -> the : 1
platforms for the -> consensus : 1
for the consensus -> in : 1
the consensus in -> the : 1
consensus in the -> user : 1
in the user -> community : 1
the user community -> seems : 1
user community seems -> to : 1
community seems to -> be : 1
to be that -> the : 1
the standard failed -> to : 1
standard failed to -> live : 1
failed to live -> up : 1
to live up -> to : 1
live up to -> the : 1
to the several -> other : 1
the several other -> numerical : 1
several other numerical -> such : 1
other numerical such -> as : 1
as and provide -> matrix : 1
and provide matrix -> for : 1
provide matrix for -> more : 1
matrix for more -> information : 1
information about most -> programs : 1
about most programs -> do : 1
not need is -> a : 1
need is a -> class : 1
template that represents -> a : 1
represents a array -> of : 1
array of numerical -> the : 1
numerical the array -> can : 1
the array can -> grow : 1
array can grow -> at : 1
can grow at -> all : 1
grow at all -> the : 1
at all the -> arithmetic : 1
all the arithmetic -> operators : 1
the arithmetic operators -> and : 1
arithmetic operators and -> mathematical : 2
operators and mathematical -> functions : 2
and mathematical functions -> are : 1
and mathematical functions -> involving : 1
mathematical functions are -> overloaded : 1
functions are overloaded -> to : 1
work with two -> arguments : 1
with two arguments -> or : 1
two arguments or -> with : 1
and a you -> can : 1
work with parts -> of : 1
with parts of -> an : 1
parts of an -> generalized : 1
of an generalized -> and : 1
an generalized and -> indirect : 1
generalized and indirect -> is : 1
and indirect is -> a : 1
indirect is a -> set : 1
set of elements -> of : 1
set of elements -> at : 1
of elements of -> a : 1
of a with -> a : 1
a with a -> starting : 1
with a starting -> a : 1
a starting a -> and : 2
starting a and -> a : 2
and a stride -> index : 1
a stride index -> a : 1
stride index a -> lets : 1
index a lets -> the : 1
a lets the -> stride : 1
lets the stride -> count : 1
the stride count -> and : 1
stride count and -> length : 1
count and length -> which : 1
and length which -> can : 1
length which can -> be : 1
to implement multidimensional -> a : 1
implement multidimensional a -> is : 1
multidimensional a is -> a : 1
a of in -> which : 1
which the flags -> indicate : 1
the flags indicate -> whether : 1
flags indicate whether -> the : 1
indicate whether the -> corresponding : 1
whether the corresponding -> item : 1
the corresponding item -> is : 1
corresponding item is -> part : 1
item is part -> of : 1
of the masked -> an : 1
the masked an -> is : 1
masked an is -> an : 1
of these concepts -> is : 1
these concepts is -> explained : 1
concepts is explained -> in : 1
is explained in -> this : 1
in this most -> important : 1
this most important -> distinguishing : 1
most important distinguishing -> feature : 1
important distinguishing feature -> of : 1
distinguishing feature of -> is : 1
do not allow -> that : 1
not allow that -> an : 1
allow that an -> object : 1
an object cannot -> be : 2
be an element -> of : 2
element of more -> than : 2
of more than -> one : 2
than one this -> enables : 1
one this enables -> additional : 1
this enables additional -> optimizations : 1
enables additional optimizations -> that : 1
additional optimizations that -> are : 1
optimizations that are -> not : 1
are not possible -> on : 1
not possible on -> ordinary : 1
possible on ordinary -> is : 1
on ordinary is -> optimized : 1
ordinary is optimized -> for : 1
is optimized for -> no : 1
optimized for no -> is : 1
for no is -> referring : 1
no is referring -> to : 1
is referring to -> an : 1
to an index -> out : 1
of range or -> operating : 1
range or operating -> on : 1
or operating on -> arrays : 1
arrays of different -> size : 1
of different size -> result : 1
different size result -> in : 1
size result in -> undefined : 1
in undefined same -> as : 1
undefined same as -> with : 1
same as with -> ordinary : 1
as with ordinary -> unlike : 1
with ordinary unlike -> ordinary : 1
ordinary unlike ordinary -> a : 1
unlike ordinary a -> convenient : 1
ordinary a convenient -> member : 1
a convenient member -> function : 1
convenient member function -> helps : 1
member function helps -> to : 1
function helps to -> ensure : 1
helps to ensure -> that : 1
that you do -> not : 1
do not make -> the : 1
not make the -> header : 1
make the header -> for : 1
header for scalar -> mathematical : 1
for scalar mathematical -> functions : 1
scalar mathematical functions -> and : 1
mathematical functions and -> for : 1
for a few -> numeric : 1
a few numeric -> see : 1
few numeric see -> for : 1
numeric see for -> complex : 1
see for complex -> this : 1
for complex this -> examples : 1
complex this examples -> show : 1
this examples show -> objects : 1
examples show objects -> and : 1
show objects and -> subsets : 1
objects and subsets -> printed : 1
and subsets printed -> using : 1
subsets printed using -> which : 1
printed using which -> is : 1
using which is -> shown : 1
which is shown -> in : 1
in a valarray -> or : 1
a valarray or -> subset : 2
valarray or subset -> a : 1
valarray or subset -> print : 1
or subset a -> valarray : 1
subset a valarray -> or : 1
or subset print -> a : 1
subset print a -> valarray : 1
print a valarray -> on : 1
a valarray on -> one : 1
valarray on one -> enclosed : 1
on one enclosed -> by : 1
one enclosed by -> curly : 1
enclosed by curly -> for : 1
by curly for -> void : 1
for void const -> out : 1
const out for -> i : 1
out for i -> i : 1
i i out -> out : 1
i out out -> print : 1
out out print -> a : 1
out print a -> by : 1
print a by -> converting : 1
a by converting -> to : 1
by converting to -> a : 1
converting to a -> converting : 1
to a converting -> a : 1
a converting a -> valarray : 1
converting a valarray -> to : 1
a valarray to -> a : 1
valarray to a -> valarray : 1
to a valarray -> is : 1
a valarray is -> but : 1
valarray is but -> harmless : 1
is but harmless -> for : 1
but harmless for -> these : 1
harmless for these -> simple : 1
for these simple -> class : 1
these simple class -> typename : 1
simple class typename -> const : 1
const return function -> function : 1
absolute function computes -> the : 1
computes the absolute -> value : 1
value of each -> element : 1
of each element -> of : 8
element of in -> in : 1
element of in -> function : 6
element of in -> class : 2
template computes inverse -> function : 3
template computes inverse -> tangent : 1
computes inverse function -> computes : 3
inverse function computes -> the : 3
computes the inverse -> cosine : 1
computes the inverse -> sine : 1
computes the inverse -> tangent : 2
cosine of each -> element : 3
sine of each -> element : 1
tangent of each -> element : 1
element of function -> function : 2
computes inverse tangent -> of : 1
tangent of two -> const : 1
const function computes -> the : 2
tangent of in -> which : 1
scalar or an -> element : 38
or an element -> of : 38
element of and -> is : 19
computes function computes -> the : 4
computes the cosine -> of : 1
hyperbolic function computes -> the : 3
computes the hyperbolic -> cosine : 1
computes the hyperbolic -> sine : 1
computes the hyperbolic -> tangent : 1
computes the exponential -> for : 1
the exponential for -> each : 1
exponential for each -> element : 1
in class generalized -> const : 1
class generalized const -> const : 1
generalized const const -> class : 1
const class describes -> a : 1
class describes a -> generalized : 1
class describes a -> slice : 1
describes a generalized -> slice : 1
a generalized slice -> of : 3
a generalized slice -> is : 1
a generalized slice -> or : 1
generalized slice of -> a : 3
slice of a -> a : 2
slice of a -> you : 2
slice of a -> the : 2
a a generalized -> slice : 1
generalized slice is -> a : 1
generalized slice is -> equal : 1
generalized slice is -> most : 1
slice is a -> subset : 2
of a characterized -> by : 1
a characterized by -> a : 1
characterized by a -> starting : 1
by a starting -> index : 1
a starting index -> and : 1
starting index and -> a : 1
index and a -> set : 1
set of sizes -> and : 1
of sizes and -> the : 1
sizes and the -> and : 1
and arrays must -> have : 1
and arrays must -> both : 1
arrays must have -> the : 1
same each pair -> denotes : 1
each pair denotes -> a : 1
pair denotes a -> set : 1
denotes a set -> of : 1
of elements at -> periodic : 1
elements at periodic -> the : 1
at periodic the -> number : 1
at periodic the -> slice : 1
periodic the number -> of : 1
in the generalized -> slice : 1
the generalized slice -> is : 1
slice is equal -> to : 1
to the product -> of : 1
the product of -> the : 1
product of the -> values : 1
the the elements -> are : 2
the elements are -> taken : 1
the elements are -> packed : 1
taken from a -> at : 1
from a at -> each : 1
a at each -> index : 1
at each index -> which : 1
each index which -> takes : 1
index which takes -> all : 1
which takes all -> the : 1
takes all the -> values : 1
and is in -> the : 1
range the highest -> value : 1
highest value of -> varies : 1
value of varies -> with : 1
of varies with -> a : 1
varies with a -> single : 1
element in and -> is : 1
same as plain -> slicing : 1
as plain slicing -> of : 1
plain slicing of -> a : 1
slicing of a -> demonstrates : 1
slicing of a -> construct : 1
slicing of a -> for : 2
of a demonstrates -> more : 1
a demonstrates more -> pay : 1
demonstrates more pay -> particular : 1
more pay particular -> attention : 1
pay particular attention -> to : 1
particular attention to -> the : 1
the final where -> you : 1
final where you -> can : 1
see how the -> indices : 1
how the indices -> first : 1
the indices first -> with : 1
indices first with -> a : 1
first with a -> stride : 1
with a stride -> of : 2
a stride of -> ranges : 2
stride of ranges -> from : 2
of ranges from -> to : 2
ranges from to -> then : 1
ranges from to -> slicing : 1
from to then -> with : 1
to then with -> a : 1
then with a -> stride : 1
from to slicing -> of : 1
to slicing of -> a : 1
of a construct -> valarray : 1
a construct valarray -> objects : 1
construct valarray objects -> from : 1
valarray objects from -> a : 1
objects from a -> few : 1
from a few -> return : 1
a few return -> return : 1
few return return -> int : 1
return return int -> using : 1
using namespace for -> i : 2
namespace for i -> i : 2
i cout a -> prints : 1
cout a prints -> cout : 2
a prints cout -> prints : 1
a prints cout -> is : 1
cout prints const -> cout : 1
prints const cout -> prints : 1
const cout prints -> also : 1
cout prints also -> that : 1
prints also that -> the : 1
also that the -> final : 1
that the final -> requires : 1
the final requires -> a : 1
final requires a -> this : 1
requires a this -> is : 1
this is because -> it : 1
because it contains -> degenerate : 1
it contains degenerate -> in : 1
contains degenerate in -> which : 1
degenerate in which -> an : 1
which an element -> appears : 1
an element appears -> more : 1
element appears more -> than : 1
the the aliasing -> rules : 1
the aliasing rules -> of : 1
aliasing rules of -> a : 1
of a prohibit -> multiple : 1
a prohibit multiple -> references : 1
prohibit multiple references -> to : 1
multiple references to -> the : 1
the same so -> if : 1
same so if -> a : 1
if a were -> not : 1
a were not -> the : 1
not the results -> would : 1
the results would -> be : 1
results would be -> by : 1
would be by -> using : 1
be by using -> a : 1
using a the -> result : 1
of the sliced -> so : 1
the sliced so -> the : 1
sliced so the -> two : 1
the two occurrences -> of : 1
two occurrences of -> element : 1
occurrences of element -> are : 1
of element are -> separate : 1
element are separate -> not : 1
are separate not -> aliases : 1
separate not aliases -> for : 1
not aliases for -> the : 1
aliases for the -> same : 1
same and disaster -> is : 1
and disaster is -> generalized : 1
disaster is generalized -> slice : 1
is generalized slice -> is : 1
slice is most -> often : 1
represent a multidimensional -> for : 1
a multidimensional for -> you : 1
multidimensional for you -> can : 1
you can treat -> a : 1
can treat a -> of : 1
treat a of -> elements : 1
a of elements -> as : 1
of elements as -> a : 1
elements as a -> to : 1
as a to -> extract : 1
a to extract -> a : 1
to extract a -> plane : 1
extract a plane -> of : 1
a plane of -> the : 1
plane of the -> you : 1
use a matrix -> stored : 1
a matrix stored -> in : 2
matrix stored in -> a : 3
in a depicts -> the : 1
a depicts the -> matrix : 1
depicts the matrix -> and : 1
the matrix and -> the : 1
matrix and the -> gslice : 1
and the gslice -> for : 1
the gslice for -> multidimensional : 1
gslice for multidimensional -> shows : 1
gslice for multidimensional -> slicing : 1
for multidimensional shows -> the : 1
multidimensional shows the -> matrix : 1
shows the matrix -> stored : 1
the matrix stored -> in : 1
in a matrix -> stored : 1
in a gslice -> for : 1
a gslice for -> multidimensional : 1
for multidimensional slicing -> of : 1
multidimensional slicing of -> a : 1
for the va -> int : 2
the va int -> using : 2
va int using -> namespace : 2
i cout create -> an : 1
cout create an -> submatrix : 1
create an submatrix -> of : 1
an submatrix of -> an : 1
submatrix of an -> the : 1
an the and -> arrays : 1
arrays must both -> have : 1
must both have -> length : 1
both have length -> the : 1
have length the -> array : 1
length the array -> determines : 1
the array determines -> the : 1
array determines the -> dimensions : 1
determines the dimensions -> of : 1
the dimensions of -> the : 1
dimensions of the -> the : 1
the the subscript -> operator : 1
subscript operator to -> take : 2
operator to take -> a : 2
take a generalized -> slice : 2
assign a to -> a : 5
assign a to -> an : 1
to a generalized -> in : 1
a generalized in -> which : 1
generalized in which -> the : 1
which the righthand -> side : 2
side of the -> assignment : 2
of the assignment -> must : 2
of the assignment -> the : 4
of the assignment -> operator : 1
the assignment must -> have : 2
assignment must have -> the : 2
same size as -> the : 25
size as the -> size : 2
size as the -> on : 4
size as the -> argument : 17
size as the -> but : 1
size as the -> original : 1
also convert the -> slice : 2
convert the slice -> to : 2
the slice to -> a : 2
the slice to -> the : 2
slice to a -> which : 2
a which copies -> only : 2
which copies only -> those : 2
copies only those -> elements : 2
those elements of -> the : 2
of the slice -> to : 2
slice to the -> new : 2
the new you -> take : 2
new you take -> a : 2
you take a -> generalized : 1
you take a -> slice : 1
but the type -> is : 2
type is mostly -> transparent : 2
is mostly transparent -> to : 2
mostly transparent to -> the : 2
transparent to the -> see : 2
class template helper -> class : 4
template helper class -> for : 4
helper class for -> generalized : 1
helper class for -> indirect : 1
helper class for -> mask : 1
helper class for -> class : 1
class for generalized -> class : 1
for generalized class -> typedef : 1
generalized class typedef -> t : 1
t void void -> void : 4
represents a subset -> of : 4
of a called -> a : 1
a called a -> generalized : 1
called a generalized -> to : 1
a generalized to -> create : 1
generalized to create -> a : 1
create a generalized -> use : 1
a generalized use -> with : 1
generalized use with -> an : 1
use with an -> argument : 4
with an argument -> of : 4
an argument of -> type : 4
of type some -> the : 2
type some the -> object : 2
some the object -> is : 4
object is in -> you : 4
object is in -> it : 1
is in you -> can : 4
a object they -> have : 3
object they have -> the : 4
they have the -> same : 4
same or you -> can : 4
can construct a -> new : 4
a new from -> a : 3
a new from -> an : 1
new from a -> you : 3
from a you -> want : 3
a you want -> to : 3
want to perform -> other : 4
to perform other -> such : 4
perform other such -> as : 4
such as you -> must : 4
as you must -> explicitly : 4
you must explicitly -> convert : 4
must explicitly convert -> the : 4
explicitly convert the -> to : 4
convert the to -> as : 4
the to as -> demonstrated : 4
to as demonstrated -> in : 4
as demonstrated in -> slicing : 1
as demonstrated in -> using : 1
as demonstrated in -> simple : 1
as demonstrated in -> a : 1
demonstrated in slicing -> of : 1
in slicing of -> a : 1
using namespace const -> int : 4
namespace const int -> cout : 3
namespace const int -> const : 1
const int cout -> a : 3
const int cout -> v : 1
int cout a -> prints : 1
int cout a -> specify : 1
int cout a -> print : 1
prints cout is -> not : 1
cout is not -> defined : 1
defined for so -> cast : 1
for so cast -> to : 1
so cast to -> valarray : 1
cast to valarray -> to : 1
to valarray to -> perform : 1
valarray to perform -> cout : 1
to perform cout -> simple : 1
perform cout simple -> assignment : 1
cout simple assignment -> does : 1
simple assignment does -> not : 1
assignment does not -> require : 2
not require cout -> a : 2
require cout a -> computational : 1
require cout a -> members : 1
cout a computational -> assignment : 1
a computational assignment -> does : 1
computational assignment does -> not : 1
cout a members -> of : 1
a members of -> are : 1
of are when -> using : 4
are when using -> any : 4
when using any -> of : 4
using any of -> the : 4
the assignment the -> on : 4
assignment the on -> the : 4
righthand side must -> be : 4
side must be -> the : 4
as the on -> the : 4
the lefthand you -> can : 4
lefthand you can -> also : 4
can also assign -> a : 4
also assign a -> scalar : 4
assign a scalar -> to : 4
a scalar to -> every : 4
scalar to every -> element : 4
to every element -> of : 4
of the note -> that : 5
the default copy -> and : 4
default copy and -> copy : 4
copy and copy -> assignment : 4
and copy assignment -> operator : 4
assignment operator are -> all : 4
operator are all -> the : 4
all the purpose -> of : 4
the purpose of -> this : 4
purpose of this -> is : 4
this is to -> restrict : 4
is to restrict -> the : 4
restrict the use -> of : 4
use of so -> it : 4
value from class -> class : 4
from class class -> class : 4
class for indirect -> class : 1
for indirect class -> typedef : 1
indirect class typedef -> t : 1
a to create -> an : 1
a to create -> a : 2
create an indirect -> use : 1
an indirect use -> with : 1
indirect use with -> an : 1
type the elements -> of : 1
argument are the -> desired : 1
are the desired -> indices : 1
the desired indices -> in : 1
desired indices in -> the : 1
indices in the -> some : 1
the some the -> object : 1
a to an -> object : 1
an object they -> have : 1
new from an -> you : 1
from an you -> want : 1
demonstrated in using -> namespace : 1
in using namespace -> const : 1
cout a specify -> the : 1
a specify the -> indices : 1
specify the indices -> into : 1
the indices into -> const : 1
indices into const -> cout : 1
into const cout -> add : 1
const cout add -> to : 1
cout add to -> the : 1
add to the -> elements : 1
the elements at -> the : 1
at the desired -> cout : 1
the desired cout -> a : 1
desired cout a -> must : 1
cout a must -> cast : 1
a must cast -> to : 1
must cast to -> perform : 1
cast to perform -> ordinary : 1
to perform ordinary -> cout : 1
perform ordinary cout -> ten : 1
ordinary cout ten -> members : 1
cout ten members -> of : 1
ten members of -> are : 1
natural function computes -> the : 1
computes the natural -> logarithm : 1
logarithm of each -> element : 2
common function computes -> the : 1
computes the common -> logarithm : 1
class for mask -> class : 1
for mask class -> typedef : 1
mask class typedef -> t : 1
create a mask -> use : 1
a mask use -> with : 1
mask use with -> an : 1
type an element -> is : 1
element is included -> in : 1
the result set -> if : 1
result set if -> the : 1
argument is some -> the : 1
is some the -> object : 1
demonstrated in simple -> average : 1
in simple average -> t : 1
simple average t -> return : 1
average t return -> int : 1
t return int -> using : 1
cout a print -> the : 1
a print the -> values : 1
that are above -> cout : 1
are above cout -> cout : 1
above cout cout -> force : 1
cout cout force -> all : 1
cout force all -> negative : 1
force all negative -> values : 1
all negative values -> to : 1
negative values to -> be : 1
values to be -> notice : 1
to be notice -> how : 1
be notice how -> no : 1
notice how no -> cast : 1
how no cast -> is : 1
no cast is -> needed : 1
cast is needed -> for : 1
needed for the -> simple : 1
the simple cout -> a : 1
simple cout a -> other : 1
cout a other -> such : 1
a other such -> as : 1
such as multiplication -> by : 1
as multiplication by -> a : 1
multiplication by a -> are : 1
by a are -> defined : 1
a are defined -> only : 1
are defined only -> for : 1
defined only for -> so : 1
only for so -> a : 1
for so a -> cast : 1
so a cast -> is : 1
a cast is -> cout : 1
cast is cout -> members : 1
is cout members -> of : 1
cout members of -> are : 2
const operator performs -> elementwise : 4
const operator performs -> on : 5
const operator performs -> right : 1
const operator performs -> left : 1
operator performs elementwise -> it : 4
performs elementwise it -> multiplies : 1
performs elementwise it -> divides : 1
performs elementwise it -> adds : 1
performs elementwise it -> subtracts : 1
elementwise it multiplies -> each : 1
it multiplies each -> in : 1
multiplies each in -> which : 1
each in which -> is : 17
element of when -> multiplying : 1
element of when -> dividing : 1
element of when -> adding : 1
element of when -> subtracting : 1
element of when -> operating : 13
of when multiplying -> two : 1
when multiplying two -> they : 1
multiplying two they -> must : 1
two they must -> have : 17
same the resulting -> array : 17
the resulting array -> has : 17
resulting array has -> the : 17
array has the -> same : 17
as the argument -> function : 4
as the argument -> the : 13
the argument function -> function : 4
argument function function -> template : 4
elementwise it divides -> each : 1
it divides each -> in : 1
divides each in -> which : 1
of when dividing -> two : 1
when dividing two -> they : 1
dividing two they -> must : 1
elementwise it adds -> each : 1
it adds each -> in : 1
adds each in -> which : 1
of when adding -> two : 1
when adding two -> they : 1
adding two they -> must : 1
elementwise it subtracts -> each : 1
it subtracts each -> in : 1
subtracts each in -> which : 1
of when subtracting -> two : 1
when subtracting two -> they : 1
subtracting two they -> must : 1
performs bitwise const -> const : 2
bitwise const const -> const : 2
operator performs on -> each : 5
performs on each -> in : 5
on each in -> which : 7
of when operating -> on : 13
when operating on -> two : 13
operating on two -> they : 13
on two they -> must : 13
the argument the -> type : 13
argument the type -> must : 13
be one for -> which : 13
one for which -> is : 13
bitwise exclusive const -> const : 1
exclusive const const -> const : 1
template performs right -> const : 1
performs right const -> const : 1
right const const -> const : 1
operator performs right -> shift : 1
performs right shift -> on : 1
right shift on -> each : 1
shift on each -> in : 2
template performs left -> const : 1
performs left const -> const : 1
left const const -> const : 1
operator performs left -> shift : 1
performs left shift -> on : 1
left shift on -> each : 1
template performs logical -> const : 2
performs logical const -> const : 2
logical const const -> const : 2
which is as -> with : 1
is as with -> any : 1
any other overloaded -> evaluation : 2
other overloaded evaluation -> is : 2
overloaded evaluation is -> not : 2
evaluation is not -> function : 2
not function function -> template : 2
is defined and -> yields : 7
defined and yields -> a : 7
and yields a -> result : 7
yields a result -> or : 7
a result or -> a : 7
result or a -> result : 7
or a result -> that : 7
a result that -> can : 7
result that can -> be : 7
converted to as -> with : 1
to as with -> any : 1
compares for const -> const : 6
operator compares each -> in : 6
compares each in -> which : 6
converted to function -> function : 6
template computes const -> const : 1
computes const const -> const : 1
computes the power -> in : 1
the power in -> which : 1
power in which -> is : 1
computes the sine -> of : 1
sine of the -> elements : 2
elements of in -> function : 3
elements of in -> class : 2
in class slice -> of : 1
class slice of -> an : 1
slice of an -> class : 1
of an class -> describes : 1
an class describes -> a : 1
describes a slice -> of : 1
a slice of -> a : 3
a a slice -> is : 1
a a slice -> can : 1
a slice is -> a : 1
of a at -> periodic : 1
a at periodic -> the : 1
periodic the slice -> has : 1
the slice has -> a : 1
slice has a -> starting : 1
has a starting -> a : 1
and a in -> which : 1
which the stride -> is : 1
the stride is -> the : 1
stride is the -> index : 1
is the index -> a : 1
the index a -> depicts : 1
index a depicts -> of : 1
a depicts of -> a : 1
depicts of a -> a : 1
a a the -> subscript : 1
a the subscript -> operator : 1
take a slice -> of : 2
section for can -> use : 1
for can use -> a : 1
use a slice -> to : 1
a slice to -> treat : 1
slice to treat -> a : 1
to treat a -> as : 1
treat a as -> a : 1
a slice can -> specify : 1
slice can specify -> a : 1
can specify a -> row : 1
can specify a -> range : 1
specify a row -> or : 1
a row or -> column : 2
row or column -> of : 2
or column of -> the : 1
or column of -> a : 1
column of the -> for : 1
the for an -> row : 1
for an row -> is : 1
an row is -> and : 1
row is and -> column : 1
is and column -> as : 1
and column as -> you : 1
column as you -> can : 1
see in simple -> matrix : 1
in simple matrix -> simple : 1
simple matrix simple -> matrix : 1
matrix simple matrix -> class : 1
simple matrix class -> const : 1
matrix class const -> return : 1
class const return -> const : 1
return return t -> const : 1
const return for -> i : 1
return for i -> i : 1
i i return -> class : 1
i return class -> class : 1
of a taken -> at : 1
a taken at -> periodic : 1
taken at periodic -> called : 1
at periodic called -> a : 1
periodic called a -> to : 1
called a to -> create : 1
create a use -> with : 1
a use with -> an : 1
demonstrated in a -> a : 1
a a using -> namespace : 1
a using namespace -> const : 1
int cout v -> cout : 1
cout v cout -> v : 2
cout v cout -> cout : 1
v cout v -> cout : 2
v cout cout -> members : 1
cout cout members -> of : 1
square function computes -> the : 1
computes the square -> root : 1
computes the tangent -> of : 1
tangent of the -> elements : 2
class template array -> of : 1
template array of -> class : 1
array of class -> typedef : 1
of class typedef -> t : 1
of class typedef -> bool : 1
t explicit t -> t : 1
explicit t t -> t : 1
t t void -> t : 1
t void t -> c : 1
t c class -> template : 1
c class template -> represents : 1
template represents an -> array : 1
represents an array -> of : 1
of numeric with -> restrictions : 1
numeric with restrictions -> that : 1
with restrictions that -> permit : 1
restrictions that permit -> an : 1
that permit an -> implementation : 1
permit an implementation -> to : 1
an implementation to -> optimize : 1
implementation to optimize -> in : 1
to optimize in -> an : 1
optimize in an -> object : 1
than one a -> such : 1
one a such -> as : 1
as a generalized -> slice : 1
generalized slice or -> indirect : 1
slice or indirect -> cannot : 1
or indirect cannot -> specify : 1
indirect cannot specify -> a : 1
cannot specify a -> single : 1
specify a single -> element : 1
single element more -> than : 1
element more than -> or : 1
more than or -> else : 1
than or else -> the : 1
behavior is can -> instantiate : 1
is can instantiate -> with : 1
can instantiate with -> any : 1
instantiate with any -> numerical : 1
with any numerical -> type : 1
any numerical type -> as : 1
numerical type as -> its : 1
type as its -> template : 1
as its template -> parameter : 1
its template parameter -> if : 1
parameter if you -> limit : 1
if you limit -> yourself : 1
you limit yourself -> to : 1
limit yourself to -> using : 1
yourself to using -> only : 1
to using only -> operations : 1
using only operations -> that : 1
only operations that -> are : 1
operations that are -> defined : 1
that are defined -> for : 1
that are defined -> in : 1
defined for that -> for : 1
for that for -> you : 1
that for you -> cannot : 1
cannot use on -> because : 1
cannot use on -> scalars : 1
use on because -> you : 1
on because you -> cannot : 1
use on scalars -> of : 1
on scalars of -> type : 1
scalars of type -> of : 1
of type of -> using : 1
type of using -> can : 1
of using can -> be : 1
using can be -> found : 1
be found throughout -> this : 1
found throughout this -> following : 1
throughout this following -> are : 1
this following are -> the : 1
empty a of -> length : 1
a of length -> in : 1
of length in -> which : 1
length in which -> all : 1
in which all -> elements : 1
which all elements -> are : 1
elements are initialized -> to : 1
of a by -> copying : 1
a by copying -> elements : 1
a by copying -> a : 1
a by copying -> the : 1
by copying elements -> from : 1
copying elements from -> the : 1
from the array -> a : 1
the array a -> by : 1
array a by -> copying : 1
by copying a -> by : 1
copying a by -> copying : 1
copying the elements -> referenced : 1
the elements referenced -> by : 1
elements referenced by -> a : 1
referenced by a -> new : 1
by a new -> array : 1
a new array -> whose : 1
a new array -> that : 1
a new array -> with : 1
new array whose -> contents : 1
array whose contents -> are : 1
of calling for -> each : 1
calling for each -> element : 1
the original a -> circular : 1
original a circular -> shift : 1
a circular shift -> by : 1
circular shift by -> the : 1
shift by the -> return : 2
by the return -> value : 2
is a new -> array : 2
is a new -> a : 1
new array that -> has : 1
but the element -> at : 2
element at new -> index : 1
at new index -> comes : 1
new index comes -> from : 1
index comes from -> in : 1
comes from in -> the : 1
the the largest -> element : 1
largest element of -> the : 1
array or an -> undefined : 2
or an undefined -> value : 2
an undefined value -> if : 2
undefined value if -> the : 2
array is elements -> are : 2
is elements are -> compared : 2
elements are compared -> using : 2
using the smallest -> element : 1
smallest element of -> the : 1
compared using element -> of : 1
using element of -> this : 1
element of this -> array : 3
of this array -> is : 3
this array is -> assigned : 3
array is assigned -> the : 3
assigned the corresponding -> elements : 1
assigned the corresponding -> element : 1
the corresponding elements -> of : 1
corresponding elements of -> if : 1
elements of if -> the : 1
behavior is element -> of : 1
is element of -> this : 1
assigned the scalar -> value : 1
the scalar value -> element : 1
scalar value element -> of : 1
value element of -> this : 1
corresponding element from -> the : 1
from the subset -> array : 1
the subset array -> the : 1
subset array the -> value : 1
array the value -> being : 1
the value being -> assigned : 1
value being assigned -> to : 1
being assigned to -> an : 1
assigned to an -> element : 1
assigned to an -> the : 1
an element must -> not : 1
element must not -> depend : 1
must not depend -> on : 1
not depend on -> any : 2
depend on any -> other : 1
depend on any -> global : 1
on any other -> value : 1
other value in -> this : 1
value in this -> that : 1
in this that -> cannot : 1
this that cannot -> be : 1
be a subset -> of : 1
subset of if -> it : 1
of if it -> the : 1
it the element -> assigned : 1
the element assigned -> to : 1
element assigned to -> index : 1
assigned to index -> must : 1
to index must -> depend : 1
index must depend -> only : 1
must depend only -> on : 1
depend only on -> index : 1
only on index -> and : 1
on index and -> not : 1
index and not -> on : 1
and not on -> values : 1
not on values -> at : 1
on values at -> any : 1
values at any -> other : 1
other the element -> at : 1
at index the -> behavior : 1
index the behavior -> is : 1
undefined for the -> rule : 1
for the rule -> means : 1
the rule means -> that : 1
rule means that -> for : 1
means that for -> any : 1
that for any -> two : 1
for any two -> distinct : 1
any two distinct -> objects : 1
two distinct objects -> and : 1
distinct objects and -> and : 1
objects and and -> for : 1
for all valid -> indices : 1
all valid indices -> and : 1
valid indices and -> you : 1
indices and you -> can : 1
can safely assume -> that : 1
safely assume that -> the : 1
assume that the -> following : 1
that the following -> is : 1
following is all -> values : 1
single object are -> stored : 1
object are stored -> just : 1
are stored just -> as : 1
are stored just -> like : 1
stored just as -> in : 1
just as in -> an : 1
as in an -> ordinary : 1
an ordinary references -> become : 1
ordinary references become -> invalid : 1
references become invalid -> after : 1
become invalid after -> a : 1
become invalid after -> inserting : 1
invalid after a -> call : 1
after a call -> to : 1
to a subset -> of : 1
subset of this -> a : 1
of this a -> subset : 1
this a subset -> of : 1
subset of a -> is : 2
new a subset -> of : 1
is a helper -> object : 1
a helper object -> that : 1
helper object that -> maintains : 1
object that maintains -> a : 1
that maintains a -> reference : 1
maintains a reference -> to : 1
original the descriptions -> of : 1
the helper classes -> earlier : 1
helper classes earlier -> in : 1
classes earlier in -> this : 1
for the four -> kinds : 1
the four kinds -> of : 1
four kinds of -> subsets : 1
kinds of subsets -> object : 1
of subsets object -> specifies : 1
subsets object specifies -> a : 1
object specifies a -> simple : 1
specifies a simple -> suitable : 1
a simple suitable -> for : 1
simple suitable for -> extracting : 1
suitable for extracting -> a : 1
for extracting a -> row : 1
extracting a row -> or : 1
column of a -> is : 1
is a generalized -> which : 1
a generalized which -> permits : 1
generalized which permits -> multidimensional : 1
which permits multidimensional -> is : 1
permits multidimensional is -> created : 1
multidimensional is created -> by : 1
is created by -> specifying : 2
created by specifying -> an : 2
by specifying an -> array : 2
specifying an array -> of : 2
array of as -> the : 1
element is that -> element : 1
is that element -> is : 1
that element is -> part : 1
element is part -> of : 1
of the resulting -> is : 1
the resulting is -> created : 1
resulting is created -> by : 1
array of indices -> as : 1
of indices as -> the : 1
indices as the -> each : 1
as the each -> element : 1
the each element -> specifies : 1
each element specifies -> an : 1
element specifies an -> and : 1
specifies an and -> the : 1
and the element -> at : 1
element at that -> index : 1
at that index -> is : 1
that index is -> added : 1
index is added -> to : 1
to the resulting -> a : 1
the resulting a -> new : 1
resulting a new -> in : 1
a new in -> which : 1
new in which -> each : 1
which each new -> element : 1
each new element -> is : 1
result of applying -> the : 1
of applying the -> unary : 1
applying the unary -> operator : 1
unary operator to -> the : 1
the original this -> by : 1
original this by -> applying : 1
this by applying -> the : 2
applying the assignment -> operator : 2
assignment operator to -> each : 2
value is this -> by : 1
is this by -> applying : 1
array and to -> the : 1
corresponding element of -> the : 1
corresponding element of -> f : 1
value is t -> x : 1
is t x -> the : 1
t x the -> size : 1
x the size -> of : 1
array to and -> reinitializes : 1
to and reinitializes -> every : 1
and reinitializes every -> element : 1
reinitializes every element -> of : 1
to a shift -> by : 1
a shift by -> the : 1
new array with -> the : 1
array with the -> same : 1
the original but -> the : 1
original but the -> element : 1
at index in -> the : 1
in the new -> array : 1
the new array -> comes : 1
new array comes -> from : 1
array comes from -> index : 1
comes from index -> in : 1
from index in -> the : 1
original if or -> the : 1
if or the -> new : 1
or the new -> element : 1
element is set -> to : 1
the the sum -> of : 1
sum of all -> the : 1
the array using -> if : 1
array using if -> the : 1
class header is -> one : 1
operate on vector -> is : 1
on vector is -> a : 1
container that yields -> linear : 1
that yields linear -> performance : 1
yields linear performance -> for : 1
linear performance for -> inserting : 1
for inserting and -> erasing : 1
inserting and erasing -> at : 1
and erasing at -> any : 1
erasing at any -> point : 1
at any point -> in : 1
except the for -> which : 1
the for which -> performance : 1
for which performance -> is : 1
which performance is -> a : 1
is a vector -> supports : 1
a vector supports -> random : 1
vector supports random -> access : 1
random access a -> vector : 1
access a vector -> is : 1
a vector is -> best : 1
vector is best -> thought : 1
is best thought -> of : 1
best thought of -> as : 1
thought of as -> a : 1
as a generalization -> of : 1
generalization of and -> for : 1
about containers function -> function : 1
containers function function -> template : 1
const template bool -> const : 6
template bool const -> operator : 6
operator returns true -> if : 1
template swaps contents -> of : 1
swaps contents of -> two : 1
template void function -> template : 1
class template typename -> alloc : 1
template typename alloc -> class : 1
const template inpit -> const : 1
template inpit const -> template : 1
inpit const template -> void : 1
c bool void -> element : 1
bool void element -> access : 1
void element access -> reference : 1
template void inpit -> inpit : 1
void inpit inpit -> iterator : 1
inpit inpit iterator -> iterator : 1
inpit iterator iterator -> iterator : 1
a standard sequence -> container : 1
standard sequence container -> that : 1
like an adding -> or : 1
an adding or -> removing : 1
adding or removing -> from : 2
of the vector -> takes : 1
of the vector -> to : 1
the vector takes -> constant : 1
vector takes constant -> time : 1
takes constant time -> over : 1
over many such -> adding : 1
many such adding -> or : 1
such adding or -> removing : 1
removing from anywhere -> else : 1
from anywhere else -> takes : 1
anywhere else takes -> linear : 1
else takes linear -> and : 1
takes linear and -> random : 1
linear and random -> access : 1
and random access -> happens : 1
random access happens -> in : 1
access happens in -> constant : 1
happens in constant -> of : 1
in constant of -> a : 1
constant of a -> are : 1
of a are -> stored : 1
a are stored -> just : 1
stored just like -> an : 1
just like an -> ordinary : 1
an ordinary for -> most : 1
ordinary for most -> cases : 1
for most cases -> in : 1
most cases in -> which : 1
which you need -> an : 1
you need an -> you : 1
need an you -> should : 1
an you should -> use : 1
use a instead -> because : 1
a instead because -> a : 1
instead because a -> offers : 1
because a offers -> greater : 1
a offers greater -> safety : 1
offers greater safety -> need : 1
greater safety need -> for : 1
safety need for -> dynamic : 1
need for dynamic -> memory : 1
for dynamic memory -> and : 1
dynamic memory and -> raw : 1
memory and raw -> the : 1
and raw the -> member : 1
raw the member -> function : 1
member function checks -> array : 1
function checks array -> iterators : 1
checks array iterators -> and : 1
array iterators and -> references : 1
references to a -> elements : 1
to a elements -> become : 1
a elements become -> invalid : 1
elements become invalid -> when : 1
when the internal -> array : 1
is which can -> happen : 1
which can happen -> for : 1
can happen for -> an : 1
happen for an -> insertion : 1
for an insertion -> when : 1
an insertion when -> the : 1
insertion when the -> size : 1
when the size -> matches : 1
the size matches -> the : 1
size matches the -> or : 1
matches the or -> when : 1
the or when -> you : 1
when you explicitly -> change : 1
you explicitly change -> the : 1
explicitly change the -> size : 1
the size by -> calling : 1
size by calling -> you : 1
by calling you -> can : 1
calling you can -> ensure : 1
you can ensure -> that : 1
can ensure that -> an : 1
ensure that an -> insertion : 1
that an insertion -> does : 1
an insertion does -> not : 1
insertion does not -> force : 1
does not force -> a : 1
not force a -> resize : 1
force a resize -> by : 1
a resize by -> calling : 1
resize by calling -> to : 1
calling to set -> the : 1
set the capacity -> prior : 1
the capacity prior -> to : 1
capacity prior to -> inserting : 1
prior to inserting -> one : 1
to inserting one -> or : 1
inserting one or -> more : 2
more iterators and -> references : 1
and references also -> become : 1
references also become -> invalid : 1
also become invalid -> when : 1
invalid when they -> are : 1
they are past -> a : 1
are past a -> higher : 1
past a higher -> the : 1
a higher the -> point : 1
higher the point -> where : 1
point where an -> item : 1
is inserted or -> you : 1
inserted or you -> need : 1
or you need -> a : 1
vector of boolean -> consider : 1
of boolean consider -> using : 1
boolean consider using -> instead : 1
consider using instead -> of : 1
for an following -> are : 1
an following are -> the : 1
empty a vector -> of : 1
vector of size -> in : 1
element is initialized -> to : 1
initialized to an -> empty : 1
an empty vector -> and : 1
empty vector and -> copies : 1
vector and copies -> into : 1
and copies into -> the : 1
copies into the -> new : 1
the new vector -> unless : 1
new vector unless -> is : 1
vector unless is -> an : 1
case the vector -> is : 1
vector is constructed -> as : 1
cast as a -> copy : 1
of the then -> copies : 2
of the then -> inserts : 1
the then copies -> the : 2
then copies the -> elements : 2
copies the elements -> from : 2
into the all -> the : 1
into the unless -> is : 1
the unless is -> an : 1
cast as all -> the : 1
as all the -> elements : 1
the then inserts -> copies : 1
then inserts copies -> of : 1
of the element -> at : 1
index if throws -> the : 1
if throws the -> last : 1
if the vector -> is : 3
vector is an -> iterator : 1
of elements the -> vector : 1
elements the vector -> can : 1
the vector can -> store : 1
vector can store -> before : 1
can store before -> it : 1
store before it -> resizes : 1
before it resizes -> all : 1
it resizes all -> elements : 1
resizes all elements -> of : 1
vector is the -> allocator : 1
is the allocator -> before : 1
the allocator before -> copies : 1
allocator before copies -> of : 1
before copies of -> at : 1
of at the -> elements : 1
at the elements -> in : 1
at position unless -> is : 1
position unless is -> an : 1
cast as an -> exception : 1
as an exception -> is : 1
new the vector -> is : 1
vector is and -> all : 1
possible the element -> at : 1
vector is as -> the : 1
the that is -> at : 1
that is at -> least : 1
at least call -> to : 1
least call to -> avoid : 1
reallocate the vector -> repeatedly : 1
the vector repeatedly -> when : 1
vector repeatedly when -> you : 1
know the vector -> will : 1
the vector will -> grow : 1
vector will grow -> by : 1
a large or -> when : 1
large or when -> you : 1
want to ensure -> that : 1
ensure that iterators -> do : 1
that iterators do -> not : 1
do not become -> invalid : 1
not become invalid -> after : 1
invalid after inserting -> one : 1
after inserting one -> or : 1
or more note -> that : 1
more note that -> does : 1
does not c -> the : 1
not c the -> size : 1
size of this -> vector : 1
of this vector -> to : 1
this vector to -> if : 1
vector to if -> one : 1
the vector to -> reach : 1
vector to reach -> the : 1
new the number -> of : 1
in this vector -> with : 1
this vector with -> all : 1
vector with all -> the : 1
elements in in -> in : 1
in class specialized -> vector : 1
class specialized vector -> of : 1
specialized vector of -> class : 1
vector of class -> typedef : 1
class typedef bool -> typedef : 1
typedef bool typedef -> typedef : 1
typedef bool typedef -> alloc : 1
bool typedef typedef -> typedef : 1
bool typedef alloc -> typedef : 1
alloc typedef typedef -> typedef : 1
typedef class static -> void : 1
class static void -> reference : 1
static void reference -> void : 1
void reference void -> same : 1
reference void same -> as : 1
same as specialization -> is : 1
as specialization is -> an : 1
specialization is an -> interesting : 1
is an interesting -> it : 1
an interesting it -> is : 1
interesting it is -> an : 1
is an attempt -> to : 1
attempt to demonstrate -> how : 1
to demonstrate how -> to : 1
demonstrate how to -> define : 1
define a container -> that : 1
represent the elements -> of : 1
elements are packed -> into : 1
are packed into -> and : 1
packed into and -> the : 1
into and the -> type : 1
proxy that represents -> a : 1
single element by -> keeping : 1
element by keeping -> track : 1
by keeping track -> of : 1
keeping track of -> the : 1
the bit number -> within : 1
bit number within -> the : 1
number within the -> integer : 1
within the integer -> and : 1
and the index -> in : 1
in the by -> using : 1
the by using -> a : 1
using a violates -> the : 1
a violates the -> constraints : 1
violates the constraints -> of : 1
the constraints of -> a : 1
constraints of a -> so : 1
used in many -> situations : 1
in many situations -> that : 1
many situations that -> call : 1
situations that call -> for : 1
that call for -> a : 1
call for a -> standard : 1
a standard in -> the : 1
standard in the -> type : 1
the type cannot -> point : 1
type cannot point -> to : 1
the container because -> does : 1
container because does -> not : 1
because does not -> have : 1
that can point -> to : 2
a single many -> algorithms : 1
single many algorithms -> require : 1
many algorithms require -> the : 1
algorithms require the -> and : 1
require the and -> so : 1
and so they -> cannot : 1
so they cannot -> work : 1
they cannot work -> with : 1
cannot work with -> a : 1
work with a -> you : 1
with a you -> need : 1
a you need -> to : 1
use a set -> of : 1
set of use -> the : 1
need a standard -> container : 1
that contains use -> addition : 1
contains use addition -> to : 1
use addition to -> the : 1
to the members -> of : 1
of the also -> defines : 1
the also defines -> the : 1
the following reference -> two : 1
following reference two -> bit : 1
reference two bit -> all : 1
two bit all -> the : 1
bit all the -> bits : 1
all the bits -> in : 1
in class bit -> reference : 1
class bit reference -> friend : 1
bit reference friend -> class : 1
reference friend class -> operator : 1
friend class operator -> bool : 1
class operator bool -> void : 1
operator bool void -> class : 1
bool void class -> represents : 1
void class represents -> a : 1
is so only -> can : 1
so only can -> create : 1
only can create -> the : 1
can create the -> keeps : 1
create the keeps -> track : 1
the keeps track -> of : 1
of the position -> of : 1
position of an -> individual : 1
of an individual -> bit : 1
an individual bit -> in : 1
individual bit in -> a : 1
in a so -> you : 1
a so you -> can : 1
you can or -> flip : 1
can or flip -> the : 1
or flip the -> the : 1
flip the the -> following : 1
members of or -> toggles : 1
of or toggles -> the : 1
or toggles the -> that : 1
toggles the that -> performs : 1
the that performs -> the : 1
the bit value -> as : 1
bit value as -> a : 1
as a bool -> to : 1
a bool to -> writing : 1
bool to writing -> portable : 1
to writing portable -> you : 1
writing portable you -> should : 1
portable you should -> stick : 1
you should stick -> to : 1
should stick to -> the : 1
to the but -> sometimes : 1
the but sometimes -> you : 1
sometimes you have -> to : 1
you have to -> use : 1
to use extensions -> of : 1
use extensions of -> the : 1
extensions of the -> this : 1
of the this -> appendix : 1
of the this -> book : 1
the this appendix -> lists : 1
this appendix lists -> some : 1
appendix lists some -> of : 1
lists some of -> the : 1
the more interesting -> extensions : 1
more interesting extensions -> in : 1
interesting extensions in -> a : 1
extensions in a -> few : 1
not a reference -> of : 1
reference of compiler -> but : 1
of compiler but -> more : 1
compiler but more -> an : 1
but more an -> illustration : 1
more an illustration -> of : 1
of the kinds -> of : 1
kinds of extensions -> that : 1
of extensions that -> compiler : 1
extensions that compiler -> writers : 1
that compiler writers -> choose : 1
compiler writers choose -> to : 1
writers choose to -> builder : 1
choose to builder -> and : 1
to builder and -> builder : 1
builder and builder -> and : 1
and builder and -> has : 1
builder and has -> several : 1
and has several -> extensions : 1
has several extensions -> to : 1
several extensions to -> to : 1
extensions to to -> support : 1
to to support -> its : 1
to support its -> application : 1
support its application -> development : 1
its application development -> builder : 1
application development builder -> microsoft : 1
development builder microsoft -> and : 1
builder microsoft and -> kylix : 1
microsoft and kylix -> this : 1
and kylix this -> section : 1
kylix this section -> presents : 1
section presents highlights -> of : 2
presents highlights of -> the : 1
presents highlights of -> only : 1
highlights of the -> a : 1
highlights of the -> operator : 1
the a closure -> is : 1
a closure is -> like : 1
closure is like -> a : 1
like a pointer -> to : 1
has been bound -> to : 1
been bound to -> a : 1
a specific given -> a : 1
specific given a -> you : 1
given a you -> can : 1
can call it -> the : 1
call it the -> way : 1
it the way -> you : 1
you would call -> an : 1
would call an -> ordinary : 1
call an ordinary -> to : 1
an ordinary to -> declare : 1
ordinary to declare -> a : 1
declare a closure -> type : 1
a closure type -> or : 1
closure type or -> use : 1
type or use -> as : 1
or use as -> a : 1
a modifier for -> the : 1
modifier for the -> name : 1
function int memfunc -> struct : 1
int memfunc struct -> demo : 1
memfunc struct demo -> int : 1
return x demo -> func : 1
x demo func -> int : 1
demo func int -> n : 1
func int n -> n : 1
int n n -> keyword : 1
n n keyword -> takes : 1
n keyword takes -> an : 1
keyword takes an -> attribute : 1
keyword takes an -> expression : 1
takes an attribute -> in : 1
an attribute in -> parentheses : 1
attribute in parentheses -> and : 1
in parentheses and -> serves : 2
parentheses and serves -> as : 2
and serves as -> a : 2
serves as a -> declaration : 2
a declaration depending -> on : 2
declaration depending on -> the : 2
on the it -> can : 2
used to modify -> a : 2
modify a or -> for : 1
modify a or -> see : 1
or for is -> a : 1
a function specifier -> that : 1
function specifier that -> tells : 2
specifier that tells -> the : 2
does not which -> permits : 1
does not which -> enables : 1
not which permits -> additional : 1
which permits additional -> optimization : 1
permits additional optimization -> and : 1
additional optimization and -> eliminating : 1
optimization and eliminating -> statements : 1
and eliminating statements -> that : 1
eliminating statements that -> follow : 1
that follow a -> call : 1
follow a call -> to : 1
to the attributes -> specifier : 1
the attributes specifier -> that : 1
attributes specifier that -> declares : 1
specifier that declares -> an : 1
that declares an -> object : 1
object to be -> local : 1
to be local -> to : 1
be local to -> a : 1
a that each -> runtime : 1
that each runtime -> thread : 1
each runtime thread -> has : 1
runtime thread has -> a : 1
thread has a -> separate : 1
has a separate -> copy : 1
tells the linker -> to : 1
the linker to -> export : 1
linker to export -> the : 1
to export the -> function : 1
export the function -> name : 1
function name from -> a : 1
name from a -> library : 1
from a library -> a : 1
a library a -> class : 1
library a class -> it : 1
class it associates -> a : 1
it associates a -> universally : 1
associates a universally -> unique : 1
a universally unique -> identifier : 1
universally unique identifier -> with : 1
unique identifier with -> the : 1
identifier with the -> which : 1
which is required -> for : 1
required for implementing -> com : 1
for implementing com -> objects : 1
implementing com objects -> in : 1
com objects in -> a : 1
in a uuid -> can : 1
a uuid can -> be : 1
uuid can be -> retrieved : 1
can be retrieved -> with : 1
be retrieved with -> the : 1
retrieved with the -> type : 1
is a integer -> in : 2
is a integer -> literal : 2
integer in current -> releases : 1
in current releases -> of : 1
current releases of -> builder : 1
current releases of -> visual : 1
releases of builder -> and : 1
of builder and -> is : 1
of builder and -> a : 1
builder and is -> a : 1
a integer literal -> is : 2
integer literal is -> written : 2
literal is written -> with : 3
written with a -> suffix : 3
with a suffix -> of : 3
a suffix of -> property : 1
a suffix of -> and : 1
a suffix of -> a : 1
suffix of property -> is : 1
of property is -> a : 1
property is a -> class : 1
property is a -> that : 1
class member that -> is : 1
is used like -> a : 2
used like a -> data : 2
like a data -> but : 2
data but it -> can : 2
have the semantics -> of : 2
semantics of a -> member : 2
a member properties -> are : 2
member properties are -> the : 2
properties are the -> foundation : 2
are the foundation -> for : 1
are the foundation -> of : 1
the foundation for -> the : 1
foundation for the -> rad : 1
for the rad -> features : 1
the rad features -> of : 1
the rad features -> use : 1
rad features of -> builder : 1
features of builder -> and : 1
builder and a -> property : 1
and a property -> is : 1
a property is -> associated : 2
property is associated -> with : 2
with a reader -> and : 1
a reader and -> which : 1
reader and which -> can : 1
and which can -> be : 1
can be data -> member : 1
be data member -> names : 1
data member names -> or : 1
member names or -> member : 1
names or member -> function : 1
member function tcontrol -> int : 1
function tcontrol int -> void : 1
tcontrol int void -> int : 1
void int height -> tcontrol : 1
int height tcontrol -> ctl : 1
height tcontrol ctl -> new : 1
tcontrol ctl new -> calls : 1
ctl new calls -> int : 2
new calls int -> h : 2
calls int h -> gets : 1
calls int h -> calls : 1
int h gets -> access : 1
h gets access -> specifier : 1
gets access specifier -> label : 1
specifier label yields -> the : 1
label yields the -> same : 1
yields the same -> accessibility : 1
the same accessibility -> as : 1
same accessibility as -> the : 1
accessibility as the -> but : 1
but it also -> directs : 1
it also directs -> the : 1
also directs the -> compiler : 1
directs the compiler -> to : 1
compiler to store -> additional : 1
store additional runtime -> type : 1
additional runtime type -> information : 1
runtime type information -> for : 1
for the published -> the : 1
the published the -> rad : 1
published the rad -> features : 1
rad features use -> the : 1
features use the -> rtti : 1
use the rtti -> when : 1
the rtti when -> the : 1
rtti when the -> user : 1
the user designs -> an : 1
user designs an -> keyword : 1
designs an keyword -> is : 1
keyword is a -> synonym : 1
synonym for operator -> takes : 1
for operator takes -> an : 1
operator takes an -> expression : 1
takes an expression -> as : 2
an expression as -> an : 2
expression as an -> operand : 2
operand and returns -> the : 1
returns the uuid -> of : 1
the uuid of -> the : 1
uuid of the -> the : 1
the class declares -> its : 1
class declares its -> uuid : 1
declares its uuid -> with : 1
its uuid with -> a : 1
uuid with a -> class : 1
the standard com -> member : 1
standard com member -> with : 1
com member with -> demo : 1
member with demo -> virtual : 1
with demo virtual -> hresult : 1
demo virtual hresult -> if : 1
virtual hresult if -> return : 1
hresult if return -> return : 1
return return compiler -> compiler : 1
return compiler compiler -> compiler : 1
compiler compiler compiler -> has : 1
compiler compiler has -> many : 1
compiler has many -> extensions : 1
has many extensions -> to : 1
many extensions to -> the : 1
the most widespread -> is : 1
most widespread is -> but : 1
widespread is but -> very : 1
is but very -> much : 1
but very much -> outdated : 1
very much outdated -> with : 1
much outdated with -> regard : 1
outdated with regard -> to : 1
with regard to -> the : 1
regard to the -> the : 1
the the new -> version : 1
new version hews -> much : 1
version hews much -> closer : 1
hews much closer -> to : 1
much closer to -> the : 1
to the while -> retaining : 1
the while retaining -> the : 1
while retaining the -> familiar : 1
retaining the familiar -> gnu : 1
the familiar gnu -> this : 1
familiar gnu this -> section : 1
gnu this section -> presents : 1
highlights of only -> a : 1
of only a -> few : 1
only a few -> of : 1
a few of -> the : 2
few of the -> function : 1
few of the -> features : 1
be modified with -> attributes : 1
modified with attributes -> to : 1
with attributes to -> tell : 1
attributes to tell -> the : 1
compiler about the -> for : 1
about the for -> tells : 1
the for tells -> the : 1
for tells the -> compiler : 1
not which enables -> the : 1
which enables the -> compiler : 1
enables the compiler -> to : 1
compiler to remove -> unneeded : 1
to remove unneeded -> such : 1
remove unneeded such -> as : 1
unneeded such as -> statements : 1
such as statements -> that : 1
as statements that -> follow : 1
that follow calls -> to : 1
follow calls to -> the : 1
to the some -> attributes : 1
the some attributes -> can : 1
some attributes can -> apply : 1
attributes can apply -> to : 1
can apply to -> and : 1
to and several -> different : 1
and several different -> attributes : 1
several different attributes -> are : 1
different attributes are -> such : 1
attributes are such -> expand : 1
are such expand -> this : 1
such expand this -> function : 1
expand this function -> even : 1
this function even -> if : 1
even if optimizations -> are : 1
if optimizations are -> function : 1
optimizations are function -> has : 1
are function has -> no : 1
function has no -> side : 2
has no side -> effects : 2
side effects and -> does : 1
effects and does -> not : 1
does not depend -> on : 1
on any global -> the : 1
any global the -> compiler : 1
global the compiler -> can : 2
compiler can replace -> repeated : 1
can replace repeated -> calls : 1
replace repeated calls -> to : 1
repeated calls to -> the : 1
a single saving -> the : 1
single saving the -> or : 1
saving the or -> type : 1
the or type -> is : 1
or type is -> using : 1
type is using -> a : 1
is using a -> entity : 1
using a entity -> results : 1
a entity results -> in : 1
entity results in -> a : 1
in a compiler -> marks : 1
a compiler marks -> the : 1
compiler marks the -> function : 1
marks the function -> as : 1
function as exported -> from : 1
as exported from -> a : 1
exported from a -> less : 1
from a less -> strong : 1
a less strong -> than : 1
less strong than -> a : 1
strong than a -> pure : 1
than a pure -> function : 1
a pure function -> has : 1
pure function has -> no : 1
side effects but -> can : 1
effects but can -> depend : 1
but can depend -> on : 1
depend on global -> the : 1
on global the -> compiler : 1
optimize away repeated -> calls : 1
away repeated calls -> when : 1
repeated calls when -> it : 1
calls when it -> knows : 1
when it knows -> intervening : 1
it knows intervening -> code : 1
knows intervening code -> does : 1
intervening code does -> not : 1
not modify any -> global : 1
modify any global -> a : 1
any global a -> a : 1
global a a -> single : 1
a single label -> can : 1
single label can -> specify : 1
label can specify -> a : 1
specify a range -> of : 1
range of case -> case : 1
of case case -> other : 1
case case other -> type : 1
case other type -> is : 1
type that has -> at : 1
least a literal -> is : 1
suffix of and -> maximum : 1
of and maximum -> operators : 1
and maximum operators -> and : 1
maximum operators and -> return : 1
operators and return -> the : 1
and maximum of -> their : 1
maximum of their -> two : 1
of their two -> you : 1
their two you -> can : 1
two you can -> overload : 1
can overload these -> operators : 1
overload these operators -> the : 1
these operators the -> way : 1
operators the way -> you : 1
any other t -> const : 1
other t const -> const : 1
t const const -> return : 1
a b keyword -> takes : 1
b keyword takes -> an : 1
operand and yields -> the : 1
yields the type -> of : 1
can use wherever -> you : 1
use wherever you -> can : 1
wherever you can -> use : 1
use a type -> templates : 1
a type templates -> create : 1
type templates create -> a : 1
templates create a -> need : 1
create a need -> for : 1
a need for -> because : 1
need for because -> when : 1
for because when -> writing : 1
because when writing -> the : 1
when writing the -> you : 1
writing the you -> have : 1
you have no -> way : 1
have no way -> of : 1
of knowing the -> return : 1
knowing the return -> type : 1
or for typename -> const : 1
for typename const -> return : 1
return t visual -> visual : 1
t visual visual -> latest : 1
visual visual latest -> compiler : 1
visual latest compiler -> has : 1
latest compiler has -> a : 1
compiler has a -> split : 1
has a split -> it : 1
a split it -> can : 1
split it can -> generate : 1
it can generate -> a : 1
can generate a -> conventional : 1
generate a conventional -> program : 1
a conventional program -> following : 1
conventional program following -> the : 1
program following the -> standard : 1
the standard or -> or : 1
standard or or -> it : 1
or or it -> can : 1
it can produce -> output : 1
can produce output -> using : 1
produce output using -> a : 1
using a modified -> language : 1
a modified language -> called : 1
modified language called -> managed : 1
language called managed -> which : 1
called managed which -> restricts : 1
managed which restricts -> some : 1
which restricts some -> features : 1
restricts some features -> and : 1
some features and -> adds : 1
features and adds -> the : 1
and adds the -> following : 1
adds the following -> are : 1
are some highlights -> of : 1
some highlights of -> the : 1
the operator takes -> a : 1
a value object -> as : 1
value object as -> an : 1
returns a managed -> object : 1
a managed object -> that : 1
a managed object -> at : 1
managed object that -> wraps : 1
that wraps the -> value : 1
wraps the value -> in : 1
in a managed -> you : 1
a managed you -> can : 1
managed you can -> also : 1
a value type -> with : 1
value type with -> the : 1
type with the -> specifier : 1
the specifier so -> the : 1
specifier so the -> pointer : 1
pointer can store -> boxed : 1
can store boxed -> the : 1
store boxed the -> compiler : 1
boxed the compiler -> treats : 1
compiler treats boxed -> values : 1
treats boxed values -> specially : 1
boxed values specially -> and : 1
values specially and -> lets : 1
specially and lets -> you : 1
and lets you -> access : 1
lets you access -> the : 1
you access the -> members : 1
value as though -> the : 1
though the box -> were : 1
the box were -> not : 1
box were not -> the : 1
not the box -> manages : 1
the box manages -> the : 1
box manages the -> lifetime : 1
manages the lifetime -> of : 1
the value it -> keyword : 1
value it keyword -> takes : 1
it keyword takes -> a : 1
keyword takes a -> list : 1
takes a list -> of : 1
list of attributes -> in : 1
of attributes in -> parentheses : 1
attributes in parentheses -> and : 1
a or see -> builder : 1
or see builder -> and : 1
see builder and -> for : 1
builder and for -> more : 1
for more key -> feature : 1
more key feature -> of : 1
key feature of -> managed : 1
feature of managed -> is : 1
of managed is -> that : 1
managed is that -> objects : 1
is that objects -> are : 1
that objects are -> this : 1
objects are this -> means : 1
are this means -> the : 1
means the lifetime -> and : 1
the lifetime and -> memory : 1
lifetime and memory -> are : 1
and memory are -> managed : 1
memory are managed -> automatically : 1
are managed automatically -> by : 1
managed automatically by -> the : 1
managed automatically by -> boost : 1
automatically by the -> runtime : 1
by the runtime -> as : 1
the runtime as -> long : 1
runtime as long -> as : 1
as the object -> is : 1
in it remains -> when : 1
it remains when -> the : 1
remains when the -> object : 1
no longer used -> anywhere : 1
longer used anywhere -> in : 1
used anywhere in -> the : 1
is up for -> a : 1
up for a -> class : 1
a class using -> the : 1
class using the -> specifier : 1
using the specifier -> to : 1
specifier to mark -> the : 1
mark the class -> as : 1
as a managed -> class : 1
a managed class -> has : 1
a managed class -> can : 1
managed class has -> numerous : 1
class has numerous -> such : 1
has numerous such -> more : 1
numerous such more -> than : 1
such more than -> one : 1
also be unmanaged -> data : 1
be unmanaged data -> members : 1
unmanaged data members -> pod : 1
data members pod -> or : 1
members pod or -> copy : 1
pod or copy -> or : 1
or copy or -> qualified : 1
copy or qualified -> member : 1
or qualified member -> objects : 1
qualified member objects -> are : 1
member objects are -> created : 1
are created with -> the : 1
created with the -> global : 1
the global they -> are : 1
global they are -> freed : 1
they are freed -> automatically : 1
are freed automatically -> when : 1
freed automatically when -> they : 1
they are no -> longer : 1
no longer if -> the : 1
longer if the -> class : 1
has a you -> can : 1
you can invoke -> the : 1
can invoke the -> which : 1
invoke the which -> calls : 1
the which calls -> the : 1
the destructor but -> does : 1
destructor but does -> not : 1
does not free -> the : 1
not free the -> type : 1
free the type -> is : 1
the current releases -> of : 1
releases of visual -> is : 1
of visual is -> a : 1
visual is a -> integer : 1
suffix of a -> managed : 1
of a managed -> application : 1
a managed application -> must : 1
managed application must -> call : 1
application must call -> an : 1
must call an -> unmanaged : 1
call an unmanaged -> library : 1
an unmanaged library -> or : 1
unmanaged library or -> system : 1
library or system -> the : 1
or system the -> keyword : 1
system the keyword -> locks : 1
the keyword locks -> a : 1
keyword locks a -> managed : 1
locks a managed -> object : 1
managed object at -> its : 1
object at its -> address : 1
at its address -> in : 1
its address in -> memory : 1
address in memory -> and : 1
in memory and -> prevents : 1
memory and prevents -> the : 1
and prevents the -> garbage : 1
prevents the garbage -> collector : 1
the garbage collector -> from : 1
garbage collector from -> moving : 1
collector from moving -> the : 1
from moving the -> the : 1
moving the the -> address : 1
the the address -> of : 1
the object can -> safely : 1
object can safely -> be : 1
can safely be -> passed : 1
safely be passed -> to : 1
to the unmanaged -> when : 1
the unmanaged when -> the : 1
unmanaged when the -> pointer : 1
when the pointer -> goes : 1
the pointer goes -> out : 1
pointer goes out -> of : 1
of the managed -> object : 1
the managed object -> is : 1
managed object is -> no : 1
no longer pinned -> and : 1
longer pinned and -> can : 1
pinned and can -> be : 1
can be moved -> or : 1
be moved or -> property : 1
moved or property -> is : 1
or property is -> a : 1
is a that -> is : 1
of the visual -> studio : 1
the visual studio -> rad : 1
visual studio rad -> a : 1
studio rad a -> property : 1
rad a property -> is : 1
with a getter -> and : 1
a getter and -> which : 1
getter and which -> have : 1
and which have -> the : 1
which have the -> forms : 1
have the forms -> and : 1
the forms and -> for : 1
forms and for -> the : 1
for the property -> named : 1
the property named -> class : 1
property named class -> control : 1
named class control -> int : 1
class control int -> int : 1
control int int -> const : 1
return void control -> ctl : 1
void control ctl -> new : 1
control ctl new -> calls : 1
int h calls -> class : 1
h calls class -> is : 1
calls class is -> intended : 1
class is intended -> for : 1
is intended for -> small : 1
intended for small -> objects : 1
for small objects -> with : 1
small objects with -> short : 1
objects with short -> which : 1
with short which -> are : 1
short which are -> allocated : 1
which are allocated -> on : 1
are allocated on -> the : 1
allocated on the -> runtime : 1
on the runtime -> not : 1
the runtime not -> the : 1
runtime not the -> managed : 1
not the managed -> heap : 1
the managed heap -> way : 1
managed heap way -> objects : 1
heap way objects -> are : 1
way objects are -> a : 1
objects are a -> managed : 1
are a managed -> class : 1
managed class can -> have : 1
can have data -> but : 1
have data but -> not : 1
data but not -> the : 1
not the other -> way : 2
the other way -> directive : 1
the other way -> see : 1
other way directive -> is : 1
way directive is -> similar : 1
directive is similar -> to : 1
to except the -> included : 1
except the included -> object : 1
the included object -> is : 1
included object is -> not : 1
not a header -> or : 1
header or file -> but : 1
or file but -> a : 1
file but a -> which : 1
but a which -> contains : 1
a which contains -> all : 1
which contains all -> the : 1
contains all the -> information : 1
all the information -> the : 1
the information the -> compiler : 1
information the compiler -> needs : 1
in the appendix -> lists : 1
the appendix lists -> three : 1
appendix lists three -> interesting : 1
lists three interesting -> of : 1
three interesting of -> many : 1
interesting of many -> more : 1
of many more -> projects : 1
many more projects -> these : 1
more projects these -> were : 1
projects these were -> chosen : 1
these were chosen -> because : 1
were chosen because -> they : 1
chosen because they -> best : 1
because they best -> reflect : 1
they best reflect -> the : 1
best reflect the -> capabilities : 1
reflect the capabilities -> or : 1
the capabilities or -> future : 1
capabilities or future -> directions : 1
or future directions -> of : 1
future directions of -> this : 1
directions of this -> web : 1
of this web -> site : 1
site has links -> to : 1
has links to -> these : 1
links to these -> and : 1
to these and -> other : 1
and other project -> brings : 1
other project brings -> numerical : 1
project brings numerical -> computing : 1
brings numerical computing -> to : 1
numerical computing to -> in : 1
computing to in -> some : 1
to in some -> it : 1
in some it -> is : 1
some it is -> what : 1
it is what -> should : 1
is what should -> have : 1
what should have -> has : 1
should have has -> powerful : 1
have has powerful -> array : 1
has powerful array -> and : 1
powerful array and -> matrix : 1
array and matrix -> and : 1
and matrix and -> with : 1
matrix and with -> and : 1
and with and -> so : 1
with and so -> the : 1
so the package -> is : 1
the package is -> written : 1
package is written -> to : 1
written to minimize -> the : 1
to minimize the -> number : 1
minimize the number -> of : 1
number of unnecessary -> temporary : 1
of unnecessary temporary -> objects : 1
unnecessary temporary objects -> and : 1
temporary objects and -> take : 1
objects and take -> advantage : 1
and take advantage -> of : 1
advantage of computation -> template : 1
of computation template -> whenever : 1
computation template whenever -> of : 1
template whenever of -> the : 1
whenever of the -> key : 1
of the key -> optimizations : 1
the key optimizations -> is : 1
key optimizations is -> that : 1
optimizations is that -> arithmetic : 1
is that arithmetic -> operators : 1
that arithmetic operators -> and : 1
mathematical functions involving -> arrays : 1
functions involving arrays -> do : 1
involving arrays do -> not : 1
arrays do not -> compute : 1
do not compute -> values : 1
not compute values -> they : 1
compute values they -> return : 1
values they return -> expression : 1
they return expression -> when : 1
return expression when -> an : 1
expression when an -> expression : 1
when an expression -> object : 1
an expression object -> is : 1
expression object is -> assigned : 1
object is assigned -> to : 1
expression is storing -> the : 1
is storing the -> results : 1
storing the results -> directly : 1
the results directly -> in : 1
results directly in -> the : 1
directly in the -> target : 1
in the target -> of : 1
of the without -> the : 1
the without the -> need : 1
without the need -> for : 1
need for large -> temporary : 1
for large temporary -> with : 1
large temporary with -> shows : 1
temporary with shows -> a : 1
shows a program -> that : 1
program that demonstrates -> a : 1
that demonstrates a -> few : 1
demonstrates a few -> of : 1
of the features -> of : 1
the features of -> with : 1
features of with -> blitz : 1
of with blitz -> formats : 1
with blitz formats -> output : 1
blitz formats output -> in : 1
formats output in -> a : 1
that is best -> suited : 1
is best suited -> for : 1
best suited for -> subsequent : 1
suited for subsequent -> input : 1
for subsequent input -> by : 1
subsequent input by -> a : 1
input by a -> not : 1
by a not -> for : 1
a not for -> reading : 1
not for reading -> by : 1
for reading by -> a : 1
reading by a -> the : 1
uses a format -> that : 1
a format that -> is : 1
is slightly better -> for : 1
slightly better for -> human : 1
better for human -> improvement : 1
for human improvement -> is : 1
human improvement is -> left : 1
improvement is left -> as : 1
as an void -> x : 1
an void x -> x : 1
void x x -> for : 1
x x for -> i : 1
x for i -> i : 1
i i blitz -> can : 1
i blitz can -> print : 1
blitz can print -> a : 1
can print a -> array : 1
print a array -> well : 1
a array well -> so : 1
array well so -> extract : 1
well so extract -> each : 1
so extract each -> plane : 1
extract each plane -> and : 1
each plane and -> print : 1
plane and print -> note : 1
and print note -> that : 1
print note that -> plane : 1
note that plane -> shares : 1
that plane shares -> storage : 1
plane shares storage -> with : 1
shares storage with -> so : 1
storage with so -> even : 1
with so even -> if : 1
so even if -> a : 1
if a is -> memory : 1
a is memory -> is : 1
is memory is -> not : 1
is not wasted -> by : 1
not wasted by -> needlessly : 1
wasted by needlessly -> copying : 1
by needlessly copying -> int : 1
needlessly copying int -> math : 1
copying int math -> with : 1
int math with -> tinyvector : 1
math with tinyvector -> and : 1
with tinyvector and -> tinymatrix : 1
tinyvector and tinymatrix -> uses : 1
and tinymatrix uses -> template : 1
tinymatrix uses template -> metaprogramming : 1
uses template metaprogramming -> to : 1
template metaprogramming to -> produce : 1
metaprogramming to produce -> fast : 1
to produce fast -> even : 1
produce fast even -> for : 1
fast even for -> complicated : 1
even for complicated -> such : 1
for complicated such -> as : 1
such as matrix -> a : 1
as matrix a -> set : 1
matrix a set -> elements : 1
a set elements -> of : 1
set elements of -> b : 1
set elements of -> d : 1
elements of b -> set : 1
of b set -> all : 1
b set all -> elements : 1
set all elements -> of : 1
elements of c -> matrix : 1
of c matrix -> multiplication : 1
c matrix multiplication -> a : 1
matrix multiplication a -> b : 1
multiplication a b -> arrays : 1
a b arrays -> can : 1
b arrays can -> have : 1
arrays can have -> more : 1
more than two -> dimensions : 1
than two dimensions -> and : 1
two dimensions and -> offer : 1
dimensions and offer -> more : 1
and offer more -> computing : 1
offer more computing -> set : 1
more computing set -> elements : 1
computing set elements -> of : 1
elements of d -> to : 1
of d to -> values : 1
of d to -> call : 1
d to values -> that : 1
to values that -> depend : 1
values that depend -> on : 1
on the d -> set : 1
the d set -> a : 1
d set a -> subarray : 1
set a subarray -> of : 1
a subarray of -> d : 1
subarray of d -> to : 1
d to call -> sin : 1
to call sin -> for : 1
call sin for -> each : 1
sin for each -> element : 1
element of e -> if : 1
element of e -> is : 1
of e if -> an : 1
e if an -> element : 1
of e is -> set : 1
e is set -> corresponding : 1
is set corresponding -> element : 1
set corresponding element -> of : 1
element of f -> to : 1
of f to -> set : 1
f to set -> other : 1
to set other -> elements : 1
set other elements -> to : 1
other elements to -> f : 1
elements to f -> elementwise : 1
to f elementwise -> multiplication : 1
f elementwise multiplication -> e : 1
elementwise multiplication e -> add : 1
multiplication e add -> all : 1
e add all -> elements : 1
add all elements -> of : 1
elements of project -> was : 1
of project was -> started : 1
project was started -> by : 1
was started by -> members : 1
started by members -> of : 1
by members of -> the : 1
standard committee as -> a : 1
committee as a -> way : 1
as a way -> to : 1
way to explore -> future : 1
to explore future -> directions : 1
explore future directions -> for : 1
future directions for -> the : 1
directions for the -> library : 1
library and to -> provide : 1
and to provide -> a : 1
provide a library -> that : 1
a library that -> extends : 1
library that extends -> what : 1
that extends what -> is : 1
extends what is -> available : 1
what is available -> in : 1
is available in -> the : 1
the standard boost -> has : 1
standard boost has -> grown : 1
boost has grown -> to : 1
has grown to -> encompass : 1
grown to encompass -> many : 1
to encompass many -> such : 1
encompass many such -> as : 1
many such as -> dates : 1
such as dates -> and : 1
as dates and -> regular : 1
dates and regular -> lambda : 1
and regular lambda -> mathematical : 1
regular lambda mathematical -> graphs : 1
lambda mathematical graphs -> mathematical : 1
mathematical graphs mathematical -> not : 1
graphs mathematical not -> the : 1
mathematical not the -> pictorial : 1
not the pictorial -> type : 1
the pictorial type -> multithreaded : 1
pictorial type multithreaded -> and : 1
type multithreaded and -> of : 1
multithreaded and of -> the : 1
the boost packages -> have : 1
boost packages have -> already : 1
packages have already -> been : 1
have already been -> proposed : 1
already been proposed -> as : 1
been proposed as -> extensions : 1
proposed as extensions -> to : 1
standard by the -> time : 1
you read the -> standard : 1
read the standard -> committee : 1
standard committee might -> already : 1
committee might already -> have : 1
already have accepted -> a : 1
have accepted a -> formal : 1
accepted a formal -> technical : 1
a formal technical -> specification : 1
formal technical specification -> for : 1
technical specification for -> an : 1
specification for an -> extension : 1
for an extension -> to : 1
an extension to -> the : 1
extension to the -> standard : 1
standard see my -> web : 1
see my web -> site : 1
my web site -> at : 1
site at for -> current : 1
at for current -> section : 1
for current section -> presents : 1
current section presents -> two : 1
section presents two -> of : 1
presents two of -> the : 1
two of the -> packages : 1
of the packages -> in : 1
the packages in -> boost : 1
packages in boost -> that : 1
in boost that -> are : 1
boost that are -> part : 1
of the proposed -> library : 1
the proposed library -> tuples : 1
proposed library tuples -> and : 1
library tuples and -> smart : 1
tuples and smart -> a : 1
and smart a -> is : 1
smart a is -> a : 1
standard class instead -> of : 1
of being limited -> to : 1
being limited to -> a : 1
limited to a -> tuple : 1
to a tuple -> can : 1
a tuple can -> contain : 1
tuple can contain -> up : 1
can contain up -> to : 1
contain up to -> elements : 1
to elements the -> maximum : 1
elements the maximum -> can : 1
the maximum can -> be : 1
maximum can be -> extended : 1
can be extended -> if : 1
be extended if -> a : 1
extended if a -> shows : 1
if a shows -> one : 1
use a store -> and : 1
a store and -> sum : 1
store and sum -> of : 1
and sum of -> accumulate : 1
sum of accumulate -> stats : 1
of accumulate stats -> double : 1
accumulate stats double -> x : 1
stats double x -> return : 1
double x return -> int : 1
return int fill -> v : 1
v with data -> stats : 1
with data stats -> s : 1
data stats s -> has : 1
stats s has -> several : 1
s has several -> smart : 1
has several smart -> pointer : 1
several smart pointer -> class : 1
smart pointer class -> they : 1
pointer class they -> solve : 1
class they solve -> a : 1
they solve a -> number : 1
solve a number -> of : 1
number of problems -> that : 1
of problems that -> the : 1
problems that the -> standard : 1
template does for -> you : 1
does for you -> cannot : 1
cannot store an -> object : 1
store an object -> in : 1
a standard but -> you : 1
can store a -> boost : 1
store a boost -> has : 1
a boost has -> several : 1
boost has several -> other : 1
has several other -> smart : 1
several other smart -> pointer : 1
other smart pointer -> for : 1
smart pointer for -> the : 1
sake of shared -> shows : 1
of shared shows -> only : 1
shared shows only -> shared : 1
shows only shared -> a : 1
only shared a -> company : 1
shared a company -> has : 1
a company has -> each : 1
company has each -> employee : 1
has each employee -> can : 1
each employee can -> be : 1
employee can be -> exempt : 1
can be exempt -> or : 1
be exempt or -> certain : 1
exempt or certain -> exempt : 1
or certain exempt -> employees : 1
certain exempt employees -> are : 1
exempt employees are -> which : 1
employees are which -> are : 1
which are distinguished -> by : 1
are distinguished by -> having : 1
distinguished by having -> a : 1
by having a -> group : 1
having a group -> of : 1
a group of -> all : 1
group of all -> the : 1
all the memory -> for : 1
memory for said -> employees : 1
for said employees -> is : 1
said employees is -> managed : 1
employees is managed -> automatically : 1
is managed automatically -> by : 1
automatically by boost -> class : 1
by boost class -> employee : 1
boost class employee -> virtual : 1
class employee virtual -> const : 1
employee virtual const -> const : 1
const void out -> class : 1
void out class -> exempt : 1
out class exempt -> public : 1
class exempt public -> employee : 1
exempt public employee -> class : 1
public employee class -> nonexempt : 1
public employee class -> manager : 1
employee class nonexempt -> public : 1
class nonexempt public -> employee : 1
nonexempt public employee -> class : 1
employee class manager -> public : 1
class manager public -> exempt : 1
manager public exempt -> void : 1
public exempt void -> void : 1
exempt void void -> virtual : 1
virtual void void -> out : 1
void void out -> out : 1
void out out -> make : 1
out out make -> it : 1
out make it -> easier : 1
easier to print -> any : 1
to print any -> kind : 1
print any kind -> of : 1
kind of typename -> employee : 1
of typename employee -> return : 1
typename employee return -> int : 1
employee return int -> manager : 1
return int manager -> manager : 1
int manager manager -> project : 1
manager manager project -> is : 1
manager project is -> a : 1
is a open -> source : 1
a open source -> implementation : 1
open source implementation -> of : 1
source implementation of -> the : 1
the standard although -> every : 1
standard although every -> modern : 1
although every modern -> compiler : 1
every modern compiler -> comes : 1
modern compiler comes -> with : 1
compiler comes with -> a : 1
comes with a -> complete : 1
with a complete -> standard : 1
a complete standard -> there : 1
complete standard there -> remain : 1
standard there remain -> and : 1
there remain and -> errors : 1
remain and errors -> in : 1
and errors in -> most : 1
errors in most -> if : 1
in most if -> portability : 1
most if portability -> across : 1
if portability across -> compilers : 1
portability across compilers -> and : 1
across compilers and -> platforms : 1
compilers and platforms -> is : 1
and platforms is -> a : 1
platforms is a -> major : 1
is a major -> you : 1
a major you -> might : 1
major you might -> want : 1
the same library -> implementation : 1
same library implementation -> on : 1
library implementation on -> all : 1
implementation on all -> might : 1
on all might -> also : 1
all might also -> want : 1
might also want -> to : 1
to use stlport -> for : 1
use stlport for -> its : 1
stlport for its -> additional : 1
for its additional -> such : 1
its additional such -> as : 1
additional such as -> debug : 1
such as debug -> which : 1
as debug which -> helps : 1
debug which helps -> detect : 1
which helps detect -> programming : 1
helps detect programming -> you : 1
detect programming you -> can : 1
programming you can -> also : 1
use the library -> safely : 1
the library safely -> in : 1
library safely in -> a : 1
safely in a -> multithreaded : 1
a multithreaded for -> reading : 1
multithreaded for reading -> from : 1
from a standard -> container : 1
standard container is -> of : 1
container is of -> writing : 1
is of writing -> to : 1
writing to any -> shared : 1
to any shared -> data : 1
any shared data -> must : 1
shared data must -> be : 1
must be properly -> see : 1
be properly see -> the : 1
properly see the -> boost : 1
boost project for -> help : 1
project for help -> with : 1
for help with -> threads : 1
help with threads -> and : 1
with threads and -> included : 1
threads and included -> are : 1
and included are -> extensions : 1
included are extensions -> to : 1
are extensions to -> the : 1
the standard hashed -> and : 1
standard hashed and -> that : 1
hashed and that -> scale : 1
and that scale -> well : 1
that scale well -> for : 1
scale well for -> very : 1
well for very -> large : 1
for very large -> my : 1
very large my -> page : 1
large my page -> at : 1
my page at -> for : 1
page at for -> links : 1
at for links -> and : 1
for links and -> more : 1
links and more -> brief : 1
and more brief -> defines : 1
more brief defines -> words : 1
brief defines words -> and : 1
defines words and -> phrases : 1
and phrases that -> are : 1
phrases that are -> used : 1
are used often -> in : 1
used often in -> this : 1
often in this -> also : 1
in this also -> included : 1
this also included -> are : 1
also included are -> terms : 1
included are terms -> that : 1
are terms that -> the : 1
terms that the -> community : 1
that the community -> often : 1
the community often -> even : 1
community often even -> though : 1
often even though -> this : 1
even though this -> book : 1
though this book -> does : 1
book does not -> use : 1
not use frequent -> and : 1
use frequent and -> judicious : 1
frequent and judicious -> use : 1
of the terms -> in : 1
the terms in -> this : 1
terms in this -> glossary : 1
in this glossary -> will : 1
this glossary will -> convince : 1
glossary will convince -> all : 1
will convince all -> your : 1
convince all your -> friends : 1
all your friends -> and : 1
your friends and -> coworkers : 1
friends and coworkers -> of : 1
and coworkers of -> your : 1
coworkers of your -> remarkable : 1
of your remarkable -> generic : 1
your remarkable generic -> usually : 1
remarkable generic usually -> one : 1
generic usually one -> that : 1
usually one that -> operates : 1
one that operates -> on : 1
that operates on -> a : 1
operates on a -> sequence : 1
on a sequence -> specified : 1
a sequence specified -> by : 1
sequence specified by -> a : 1
specified by a -> pair : 1
by a pair -> of : 1
pair of see -> and : 1
of see and -> expression : 1
see and expression -> that : 1
and expression that -> is : 1
to initialize a -> function : 1
initialize a function -> parameter : 1
function parameter can -> also : 1
also be a -> template : 1
be a template -> argument : 1
be a template -> instance : 1
template argument or -> or : 1
argument or or -> both : 1
or or both -> any : 1
or both any -> see : 1
both any see -> a : 1
any see a -> language : 1
see a language -> or : 1
a language or -> library : 1
language or library -> feature : 1
or library feature -> that : 1
library feature that -> is : 1
feature that is -> deprecated : 1
that is deprecated -> might : 1
is deprecated might -> be : 1
deprecated might be -> removed : 1
might be removed -> from : 1
be removed from -> the : 1
the next version -> of : 1
next version of -> the : 1
the you should -> avoid : 1
avoid using deprecated -> features : 1
using deprecated features -> if : 1
deprecated features if -> you : 1
features if you -> standard : 1
if you standard -> term : 1
you standard term -> for : 1
standard term for -> a : 1
term for a -> template : 1
template definition that -> defines : 1
definition that defines -> a : 1
defines a special -> case : 1
case of an -> earlier : 1
an earlier supplying -> one : 1
earlier supplying one -> or : 1
supplying one or -> more : 1
arguments that apply -> only : 1
that apply only -> to : 1
to the explicit -> in : 1
the explicit in -> this : 1
explicit in this -> plain : 1
in this plain -> means : 1
this plain means -> the : 1
plain means the -> same : 1
same see source -> file : 1
see source file -> or : 1
source file or -> program : 1
file or program -> that : 1
or program that -> does : 1
program that does -> not : 1
does not follow -> the : 1
not follow the -> rules : 1
follow the rules -> of : 1
rules of the -> this : 1
book uses informal -> such : 1
uses informal such -> as : 1
informal such as -> or : 1
as or to -> refer : 1
or to refer -> to : 1
refer to programs -> that : 1
to programs that -> are : 1
that are or -> that : 1
are or that -> invoke : 1
or that invoke -> undefined : 1
that invoke undefined -> see : 1
invoke undefined see -> also : 1
undefined see also -> that : 1
see also that -> is : 1
also that is -> but : 1
that is but -> varies : 1
that is but -> still : 1
is but varies -> from : 1
but varies from -> one : 1
varies from one -> implementation : 1
implementation to the -> vendor : 1
to the vendor -> is : 1
the vendor is -> required : 1
vendor is required -> to : 1
required to document -> the : 1
to document the -> precise : 1
document the precise -> for : 1
the precise for -> the : 1
precise for the -> size : 1
for the size -> of : 1
an is it -> might : 1
other the standard -> can : 1
the standard can -> mandate : 1
standard can mandate -> limits : 1
can mandate limits -> on : 1
mandate limits on -> the : 1
limits on the -> the : 1
the the minimum -> size : 1
the minimum size -> for : 1
minimum size for -> an : 1
for an is -> or : 1
an is or -> be : 1
is or be -> a : 1
template instance or -> class : 1
instance or class -> a : 1
or class a -> template : 1
template instance applies -> a : 1
instance applies a -> set : 1
applies a set -> of : 1
a template creating -> a : 1
template creating a -> specific : 1
creating a specific -> function : 1
a specific function -> or : 1
specific function or -> each : 1
or each template -> argument : 1
each template argument -> is : 1
argument is matched -> with : 1
is matched with -> a : 1
matched with a -> template : 1
a template arguments -> can : 1
or can be -> deduced : 1
be deduced for -> a : 1
deduced for a -> function : 1
template or supplied -> by : 1
or supplied by -> default : 1
supplied by default -> arguments : 1
by default arguments -> for : 1
arguments for a -> class : 1
class see class -> instance : 1
see class instance -> is : 1
class instance is -> an : 1
instance is an -> object : 1
of class see -> abstraction : 1
class see abstraction -> of : 1
see abstraction of -> a : 1
or other most -> algorithms : 1
other most algorithms -> work : 1
most algorithms work -> with : 1
with see and -> object : 1
see and object -> you : 1
and object you -> can : 1
object you can -> take : 1
of an but -> you : 1
an but you -> cannot : 1
an the lefthand -> operand : 1
lefthand operand of -> the : 1
be a lvalue -> the : 1
a lvalue the -> l : 1
lvalue the l -> in : 1
the l in -> see : 1
l in see -> also : 1
in see also -> return : 1
see also return -> value : 1
also return value -> a : 1
return value a -> compiler : 1
value a compiler -> is : 2
a compiler is -> free : 2
free to optimize -> away : 2
away the call -> to : 2
to a copy -> constructor : 2
copy constructor when -> an : 2
constructor when an -> object : 2
object is returned -> from : 2
from a some -> compilers : 1
a some compilers -> perform : 1
some compilers perform -> this : 1
perform this optimization -> only : 1
this optimization only -> when : 1
optimization only when -> the : 1
when the return -> expression : 1
return expression is -> the : 1
of an see -> also : 1
an see also -> region : 1
see also region -> of : 1
also region of -> storage : 1
with a unlike -> some : 1
a unlike some -> the : 1
unlike some the -> term : 1
some the term -> is : 1
the term is -> not : 1
term is not -> restricted : 1
is not restricted -> to : 1
not restricted to -> instances : 1
restricted to instances -> of : 1
to instances of -> class : 1
instances of class -> an : 1
of class an -> object : 1
class an object -> of : 1
be an lvalue -> or : 1
an lvalue or -> an : 1
lvalue or an -> an : 1
or an an -> object : 1
an an object -> of : 1
object of fundamental -> or : 1
of fundamental or -> enumerated : 1
fundamental or enumerated -> type : 1
is an see -> definition : 1
an see definition -> a : 1
see definition a -> program : 1
definition a program -> can : 1
number of declarations -> of : 1
of declarations of -> an : 1
declarations of an -> such : 1
of an such -> as : 1
a or global -> it : 1
or global it -> must : 1
global it must -> have : 1
definition of these -> see : 1
these see for -> details : 1
for details and -> exceptions : 1
details and exceptions -> to : 1
and exceptions to -> this : 1
exceptions to this -> type : 1
to this type -> whose : 1
this type whose -> implementation : 1
type whose implementation -> is : 1
whose implementation is -> a : 1
implementation is a -> pimpl : 1
is a pimpl -> is : 1
a pimpl is -> one : 1
pimpl is one -> way : 1
to implement an -> opaque : 1
implement an opaque -> see : 1
an opaque see -> also : 1
opaque see also -> parameter : 1
see also parameter -> or : 1
also parameter or -> template : 1
or template a -> function : 1
and is initialized -> with : 1
initialized with the -> value : 1
function argument in -> a : 1
argument in a -> function : 1
argument in a -> template : 1
a function see -> template : 1
function see template -> parameter : 1
see template parameter -> can : 1
or a it -> gets : 1
a it gets -> its : 1
it gets its -> from : 1
gets its from -> a : 1
its from a -> template : 1
from a template -> argument : 1
template argument in -> a : 1
template see such -> that : 1
see such that -> a : 1
such that a -> function : 1
a single definition -> that : 1
single definition that -> applies : 1
definition that applies -> regardless : 1
that applies regardless -> of : 1
applies regardless of -> the : 1
type of its -> see : 1
of its see -> way : 1
its see way -> of : 1
see way of -> implementing : 1
way of implementing -> an : 1
of implementing an -> opaque : 1
implementing an opaque -> type : 1
type that uses -> a : 1
uses a wrapper -> class : 1
a wrapper class -> that : 1
wrapper class that -> holds : 1
class that holds -> a : 1
holds a pointer -> to : 1
to a hidden -> implementation : 1
a hidden implementation -> the : 1
hidden implementation the -> name : 1
implementation the name -> can : 1
name can mean -> see : 1
can mean see -> old : 1
mean see old -> a : 1
see old a -> a : 1
old a a -> fundamental : 1
a a fundamental -> enumerated : 1
a fundamental enumerated -> a : 1
fundamental enumerated a -> pointer : 1
enumerated a pointer -> to : 1
to a pod -> or : 1
a pod or -> an : 1
pod or an -> array : 1
or an array -> of : 1
of pod a -> or : 1
pod a or -> union : 1
a or union -> can : 1
or union can -> be : 1
be a pod -> type : 1
pod type if -> its : 1
type if its -> nonstatic : 1
if its nonstatic -> data : 1
data members all -> have : 1
members all have -> pod : 1
all have pod -> see : 1
have pod see -> for : 1
pod see for -> many : 1
for many usually -> means : 1
many usually means -> see : 1
usually means see -> also : 1
means see also -> allocation : 1
see also allocation -> is : 1
also allocation is -> initialization : 1
allocation is initialization -> applies : 1
is initialization applies -> to : 1
initialization applies to -> a : 1
to a style -> of : 1
a style of -> programming : 1
of programming that -> ensures : 1
programming that ensures -> that : 1
that ensures that -> resources : 1
ensures that resources -> are : 1
that resources are -> correctly : 1
resources are correctly -> allocated : 1
are correctly allocated -> and : 1
correctly allocated and -> the : 1
example of value -> that : 1
of value that -> does : 1
any storage or -> an : 1
storage or an -> rvalue : 1
or an rvalue -> of : 1
rvalue of fundamental -> type : 1
fundamental type can -> appear : 1
type can appear -> only : 1
appear only on -> the : 1
on the right -> side : 1
the right side -> of : 1
right side of -> an : 1
assignment the r -> in : 1
the r in -> an : 1
r in an -> lvalue : 1
in an lvalue -> can : 1
to an but -> not : 1
an but not -> the : 1
other way see -> value : 1
way see value -> a : 1
see value a -> compiler : 1
from a see -> also : 1
a see also -> failure : 1
see also failure -> is : 1
also failure is -> not : 1
failure is not -> an : 1
not an when -> the : 1
compiler looks for -> candidate : 1
looks for candidate -> functions : 1
for candidate functions -> for : 1
functions for overload -> all : 1
for overload all -> function : 1
overload all function -> templates : 1
all function templates -> with : 1
function templates with -> the : 1
templates with the -> desired : 1
name are initially -> if : 1
are initially if -> the : 1
compiler cannot generate -> a : 1
cannot generate a -> template : 1
generate a template -> instance : 1
template instance to -> match : 1
instance to match -> the : 1
that function template -> is : 1
not that failure -> to : 1
that failure to -> substitute : 1
failure to substitute -> the : 1
to substitute the -> arguments : 1
substitute the arguments -> is : 1
the arguments is -> not : 1
arguments is not -> an : 1
not an a -> template : 1
an a template -> for : 1
can be all -> template : 1
be all template -> or : 1
all template or -> only : 1
template or only -> some : 1
or only some -> of : 1
the template only -> class : 1
template only class -> templates : 1
only class templates -> can : 1
class templates can -> have : 1
templates can have -> partial : 1
can have partial -> see : 1
have partial see -> object : 1
partial see object -> can : 1
see object can -> have : 1
base class as -> its : 1
class as its -> at : 2
as its at -> it : 1
as its at -> calls : 1
its at it -> can : 1
at it can -> take : 1
derived class as -> its : 1
its at calls -> to : 1
at calls to -> virtual : 1
calls to virtual -> functions : 1
to virtual functions -> bind : 1
virtual functions bind -> to : 1
functions bind to -> the : 1
bind to the -> functions : 1
to the functions -> in : 1
the derived the -> type : 1
derived the type -> is : 1
type is known -> as : 1
the the declared -> type : 1
is the see -> can : 1
the see can -> maybe : 1
see can maybe -> an : 1
can maybe an -> exception : 1
maybe an exception -> will : 1
an exception will -> be : 1
exception will be -> maybe : 1
will be maybe -> a : 1
will be maybe -> the : 1
be maybe a -> signal : 1
maybe a signal -> will : 1
a signal will -> be : 1
signal will be -> maybe : 1
be maybe the -> application : 1
maybe the application -> will : 1
application will crash -> and : 1
will crash and -> a : 1
crash and a -> particular : 1
a particular implementation -> might : 1
particular implementation might -> have : 1
implementation might have -> but : 1
might have but -> different : 1
have but different -> implementations : 1
but different implementations -> are : 1
different implementations are -> free : 1
implementations are free -> to : 1
free to choose -> different : 1
to choose different -> for : 1
choose different for -> dereferencing : 1
different for dereferencing -> a : 1
for dereferencing a -> null : 1
dereferencing a null -> pointer : 1
null pointer produces -> undefined : 1
pointer produces undefined -> a : 1
produces undefined a -> desktop : 1
undefined a desktop -> application : 1
a desktop application -> might : 1
desktop application might -> raise : 1
application might raise -> a : 1
might raise a -> segmentation : 1
raise a segmentation -> fault : 1
a segmentation fault -> an : 1
segmentation fault an -> embedded : 1
fault an embedded -> control : 1
an embedded control -> for : 1
embedded control for -> a : 1
control for a -> toy : 1
for a toy -> robot : 1
a toy robot -> might : 1
toy robot might -> reset : 1
robot might reset -> an : 1
might reset an -> operating : 1
reset an operating -> system : 1
an operating system -> kernel : 1
operating system kernel -> might : 1
system kernel might -> panic : 1
kernel might panic -> and : 1
might panic and -> shut : 1
panic and shut -> possibly : 1
and shut possibly -> corrupting : 1
shut possibly corrupting -> filesystems : 1
possibly corrupting filesystems -> and : 1
corrupting filesystems and -> anything : 1
filesystems and anything -> can : 1
and anything can -> program : 1
anything can program -> that : 1
can program that -> obeys : 1
program that obeys -> the : 1
that obeys the -> syntactic : 1
obeys the syntactic -> the : 1
the syntactic the -> diagnosable : 1
syntactic the diagnosable -> semantic : 1
the diagnosable semantic -> and : 1
diagnosable semantic and -> the : 1
semantic and the -> rule : 1
and the rule -> of : 1
the rule of -> the : 1
rule of the -> note : 1
required to diagnose -> all : 1
to diagnose all -> so : 1
diagnose all so -> you : 1
all so you -> can : 1
have a program -> that : 1
program that is -> but : 1
is but still -> see : 1
but still see -> also : 1
still see also -> the : 1
also the the -> lischner : 1
the the lischner -> began : 1
the lischner began -> his : 1
lischner began his -> career : 1
began his career -> as : 1
his career as -> a : 1
career as a -> software : 1
as a software -> but : 1
a software but -> dropped : 1
software but dropped -> out : 1
but dropped out -> of : 1
dropped out of -> the : 1
of the corporate -> rat : 1
the corporate rat -> race : 1
corporate rat race -> to : 1
rat race to -> become : 1
race to become -> an : 1
to become an -> he : 1
become an he -> started : 1
an he started -> using : 1
he started using -> in : 1
started using in -> the : 1
using in the -> late : 1
in the late -> working : 1
the late working -> at : 1
late working at -> a : 1
working at a -> company : 1
at a company -> that : 1
a company that -> was : 1
company that was -> rewriting : 1
that was rewriting -> its : 1
was rewriting its -> entire : 1
rewriting its entire -> product : 1
its entire product -> line : 1
entire product line -> in : 1
product line in -> over : 1
line in over -> the : 1
in over the -> he : 1
over the he -> has : 1
the he has -> witnessed : 1
he has witnessed -> the : 1
has witnessed the -> evolution : 1
witnessed the evolution -> of : 1
evolution of from -> cfront : 1
of from cfront -> to : 1
from cfront to -> native : 1
cfront to native -> compilers : 1
to native compilers -> to : 1
native compilers to -> integrated : 1
compilers to integrated -> development : 1
to integrated development -> environments : 1
integrated development environments -> to : 1
development environments to -> ray : 1
environments to ray -> has : 1
to ray has -> taught : 1
ray has taught -> at : 1
has taught at -> oregon : 1
taught at oregon -> state : 1
at oregon state -> he : 1
oregon state he -> is : 1
state he is -> the : 1
he is the -> author : 1
is the author -> of : 1
the author of -> delphi : 1
author of delphi -> in : 1
of delphi in -> a : 1
delphi in a -> nutshell : 1
in a nutshell -> and : 1
a nutshell and -> upcoming : 1
nutshell and upcoming -> in : 1
and upcoming in -> a : 1
upcoming in a -> as : 1
in a as -> well : 1
a as well -> as : 1
well as other -> look : 1
as other look -> is : 1
other look is -> the : 1
look is the -> result : 1
result of reader -> our : 1
of reader our -> own : 1
reader our own -> and : 1
our own and -> feedback : 1
own and feedback -> from : 1
and feedback from -> distribution : 1
feedback from distribution -> distinctive : 1
from distribution distinctive -> covers : 1
distribution distinctive covers -> complement : 1
distinctive covers complement -> our : 1
covers complement our -> distinctive : 1
complement our distinctive -> approach : 1
our distinctive approach -> to : 1
distinctive approach to -> technical : 1
approach to technical -> breathing : 1
to technical breathing -> personality : 1
technical breathing personality -> and : 1
breathing personality and -> life : 1
personality and life -> into : 1
and life into -> potentially : 1
life into potentially -> dry : 1
into potentially dry -> animal : 1
potentially dry animal -> on : 1
dry animal on -> the : 1
animal on the -> cover : 1
on the cover -> of : 1
the cover of -> in : 1
the cover of -> this : 1
cover of in -> a : 1
a is an -> eastern : 1
is an eastern -> a : 1
an eastern a -> striped : 1
eastern a striped -> ground : 1
a striped ground -> squirrel : 1
striped ground squirrel -> found : 1
ground squirrel found -> mostly : 1
squirrel found mostly -> in : 1
found mostly in -> eastern : 1
mostly in eastern -> north : 1
in eastern north -> eastern : 1
eastern north eastern -> chipmunks : 1
north eastern chipmunks -> have : 1
eastern chipmunks have -> five : 1
chipmunks have five -> dark : 1
have five dark -> and : 1
five dark and -> two : 1
dark and two -> light : 1
and two light -> stripes : 1
two light stripes -> on : 1
light stripes on -> their : 1
stripes on their -> extending : 1
stripes on their -> bushy : 1
on their extending -> from : 1
their extending from -> head : 1
extending from head -> to : 1
from head to -> and : 1
head to and -> two : 1
to and two -> stripes : 1
and two stripes -> on : 1
two stripes on -> their : 1
on their bushy -> they : 1
their bushy they -> are : 1
bushy they are -> distinguished : 1
they are distinguished -> from : 1
are distinguished from -> other : 1
distinguished from other -> ground : 1
from other ground -> squirrels : 1
other ground squirrels -> by : 1
ground squirrels by -> the : 1
squirrels by the -> white : 1
by the white -> stripes : 1
the white stripes -> above : 1
white stripes above -> and : 1
stripes above and -> below : 1
above and below -> their : 1
and below their -> the : 1
below their the -> coloration : 1
their the coloration -> of : 1
the coloration of -> chipmunks : 1
coloration of chipmunks -> throughout : 1
of chipmunks throughout -> north : 1
chipmunks throughout north -> america : 1
throughout north america -> varies : 1
north america varies -> but : 1
america varies but -> is : 1
varies but is -> quite : 1
but is quite -> uniform : 1
is quite uniform -> within : 1
quite uniform within -> often : 1
uniform within often -> make : 1
within often make -> their : 1
often make their -> homes : 1
make their homes -> in : 1
their homes in -> sparse : 1
homes in sparse -> forests : 1
in sparse forests -> or : 1
sparse forests or -> where : 1
forests or where -> they : 1
or where they -> can : 1
where they can -> build : 1
they can build -> the : 1
can build the -> entrances : 1
build the entrances -> to : 1
the entrances to -> their : 1
entrances to their -> lodges : 1
to their lodges -> in : 1
their lodges in -> stone : 1
lodges in stone -> broken : 1
in stone broken -> or : 1
stone broken or -> thick : 1
broken or thick -> a : 1
or thick a -> lodge : 1
thick a lodge -> consists : 1
a lodge consists -> of : 1
lodge consists of -> a : 1
of a maze -> of : 1
a maze of -> tunnels : 1
maze of tunnels -> leading : 1
of tunnels leading -> to : 1
tunnels leading to -> a : 1
leading to a -> chipmunks : 1
to a chipmunks -> spend : 1
a chipmunks spend -> most : 1
chipmunks spend most -> of : 1
spend most of -> the : 1
of the daylight -> hours : 1
the daylight hours -> outdoors : 1
daylight hours outdoors -> but : 1
hours outdoors but -> head : 1
outdoors but head -> for : 1
but head for -> their : 1
head for their -> lodges : 1
for their lodges -> before : 1
their lodges before -> although : 1
lodges before although -> they : 1
before although they -> are : 1
although they are -> excellent : 1
they are excellent -> chipmunks : 1
are excellent chipmunks -> live : 1
excellent chipmunks live -> primarily : 1
chipmunks live primarily -> on : 1
live primarily on -> the : 1
on the eat -> and : 1
the eat and -> occasionally : 1
eat and occasionally -> like : 1
and occasionally like -> all : 1
occasionally like all -> ground : 1
like all ground -> they : 1
all ground they -> have : 1
ground they have -> large : 1
they have large -> cheek : 1
have large cheek -> sometimes : 1
large cheek sometimes -> extending : 1
cheek sometimes extending -> as : 1
sometimes extending as -> far : 1
extending as far -> back : 1
as far back -> as : 1
far back as -> their : 1
back as their -> in : 1
as their in -> which : 1
their in which -> they : 1
which they can -> store : 1
they can store -> they : 1
can store they -> collect : 1
store they collect -> and : 1
they collect and -> store : 1
collect and store -> nuts : 1
and store nuts -> and : 1
store nuts and -> seeds : 1
nuts and seeds -> through : 1
and seeds through -> the : 1
seeds through the -> summer : 1
through the summer -> and : 1
the summer and -> when : 1
summer and when -> the : 1
when the weather -> starts : 1
the weather starts -> to : 1
weather starts to -> get : 1
starts to get -> all : 1
to get all -> the : 1
get all the -> chipmunks : 1
all the chipmunks -> in : 1
the chipmunks in -> a : 1
chipmunks in a -> region : 1
in a region -> suddenly : 1
a region suddenly -> disappear : 1
region suddenly disappear -> into : 1
suddenly disappear into -> their : 1
disappear into their -> where : 1
into their where -> they : 1
their where they -> begin : 1
where they begin -> on : 1
they begin on -> warm : 1
begin on warm -> winter : 1
on warm winter -> days : 1
warm winter days -> one : 1
winter days one -> can : 1
days one can -> often : 1
one can often -> see : 1
can often see -> chipmunk : 1
often see chipmunk -> pawprints : 1
see chipmunk pawprints -> in : 1
chipmunk pawprints in -> the : 1
pawprints in the -> as : 1
the as they -> will : 1
as they will -> sometimes : 1
they will sometimes -> wake : 1
will sometimes wake -> up : 1
sometimes wake up -> and : 1
wake up and -> leave : 1
up and leave -> their : 1
and leave their -> lodges : 1
leave their lodges -> for : 1
their lodges for -> brief : 1
lodges for brief -> periods : 1
for brief periods -> when : 1
brief periods when -> the : 1
periods when the -> temperature : 1
when the temperature -> season : 1
the temperature season -> for : 1
temperature season for -> eastern : 1
season for eastern -> chipmunks : 1
for eastern chipmunks -> is : 1
eastern chipmunks is -> to : 1
chipmunks is to -> early : 1
is to early -> the : 1
to early the -> gestation : 1
early the gestation -> period : 1
the gestation period -> is : 1
gestation period is -> after : 1
period is after -> which : 1
is after which -> a : 1
after which a -> litter : 1
which a litter -> of : 1
a litter of -> three : 1
litter of three -> to : 1
of three to -> six : 1
three to six -> is : 1
to six is -> baby : 1
six is baby -> chipmunks : 1
is baby chipmunks -> leave : 1
baby chipmunks leave -> the : 1
chipmunks leave the -> lodge : 1
leave the lodge -> after : 1
the lodge after -> one : 1
lodge after one -> month : 1
after one month -> and : 1
one month and -> are : 1
month and are -> mature : 1
and are mature -> by : 1
are mature by -> chipmunk : 1
mature by chipmunk -> most : 1
by chipmunk most -> likely : 1
chipmunk most likely -> got : 1
most likely got -> its : 1
likely got its -> name : 1
got its name -> from : 1
its name from -> the : 1
from the noise -> it : 1
the noise it -> which : 1
noise it which -> sounds : 1
it which sounds -> like : 1
which sounds like -> a : 1
sounds like a -> loud : 1
like a loud -> you : 1
a loud you -> can : 1
loud you can -> occasionally : 1
you can occasionally -> see : 1
can occasionally see -> a : 1
occasionally see a -> chipmunk : 1
see a chipmunk -> hanging : 1
a chipmunk hanging -> upside : 1
chipmunk hanging upside -> down : 1
hanging upside down -> from : 1
upside down from -> a : 1
down from a -> tree : 1
from a tree -> branch : 1
a tree branch -> its : 1
tree branch its -> hutchinson : 1
branch its hutchinson -> was : 1
its hutchinson was -> the : 1
hutchinson was the -> production : 1
was the production -> editor : 1
the production editor -> and : 1
production editor and -> copyeditor : 1
editor and copyeditor -> for : 1
and copyeditor for -> in : 1
copyeditor for in -> a : 1
for in a -> sarah : 1
in a sarah -> sherman : 1
a sarah sherman -> and : 1
sarah sherman and -> claire : 1
sherman and claire -> cloutier : 1
and claire cloutier -> provided : 1
claire cloutier provided -> quality : 1
cloutier provided quality -> julie : 1
provided quality julie -> hawks : 1
quality julie hawks -> wrote : 1
julie hawks wrote -> the : 1
hawks wrote the -> derek : 1
wrote the derek -> di : 1
the derek di -> matteo : 1
derek di matteo -> and : 1
di matteo and -> mary : 1
matteo and mary -> brady : 1
and mary brady -> provided : 1
mary brady provided -> production : 1
brady provided production -> volckhausen : 1
provided production volckhausen -> designed : 1
production volckhausen designed -> the : 1
volckhausen designed the -> cover : 1
designed the cover -> of : 1
cover of this -> based : 1
of this based -> on : 1
this based on -> a : 1
on a series -> design : 1
a series design -> by : 1
series design by -> edie : 1
design by edie -> the : 1
by edie the -> cover : 1
edie the cover -> image : 1
the cover image -> is : 1
cover image is -> a : 1
image is a -> engraving : 1
is a engraving -> from : 1
a engraving from -> the : 1
engraving from the -> dover : 1
from the dover -> pictorial : 1
the dover pictorial -> emma : 1
dover pictorial emma -> colby : 1
pictorial emma colby -> produced : 1
emma colby produced -> the : 1
colby produced the -> cover : 1
produced the cover -> layout : 1
the cover layout -> with : 1
cover layout with -> quarkxpress : 1
layout with quarkxpress -> using : 1
with quarkxpress using -> itc : 1
quarkxpress using itc -> garamond : 1
using itc garamond -> futato : 1
itc garamond futato -> designed : 1
garamond futato designed -> the : 1
futato designed the -> interior : 1
designed the interior -> this : 1
the interior this -> book : 1
interior this book -> was : 1
this book was -> converted : 1
this book was -> created : 1
book was converted -> by : 1
was converted by -> joe : 1
converted by joe -> wizda : 1
by joe wizda -> and : 1
joe wizda and -> andrew : 1
wizda and andrew -> savikas : 1
and andrew savikas -> to : 1
andrew savikas to -> framemaker : 1
savikas to framemaker -> with : 1
to framemaker with -> a : 1
framemaker with a -> format : 1
with a format -> conversion : 1
a format conversion -> tool : 1
format conversion tool -> created : 1
conversion tool created -> by : 1
tool created by -> erik : 1
created by erik -> jason : 1
by erik jason -> neil : 1
erik jason neil -> and : 1
jason neil and -> mike : 1
neil and mike -> sierra : 1
and mike sierra -> that : 1
mike sierra that -> uses : 1
sierra that uses -> perl : 1
that uses perl -> and : 1
uses perl and -> xml : 1
perl and xml -> the : 1
and xml the -> text : 1
xml the text -> font : 1
the text font -> is : 1
text font is -> linotype : 1
font is linotype -> the : 1
is linotype the -> heading : 1
linotype the heading -> font : 1
the heading font -> is : 1
heading font is -> adobe : 1
font is adobe -> myriad : 1
is adobe myriad -> and : 1
adobe myriad and -> the : 1
myriad and the -> code : 1
the code font -> is : 1
code font is -> thesans : 1
font is thesans -> mono : 1
is thesans mono -> the : 1
thesans mono the -> illustrations : 1
mono the illustrations -> that : 1
the illustrations that -> appear : 1
illustrations that appear -> in : 1
that appear in -> the : 1
the book were -> produced : 1
book were produced -> by : 1
were produced by -> robert : 1
produced by robert -> romano : 1
by robert romano -> and : 1
robert romano and -> jessamyn : 1
romano and jessamyn -> read : 1
and jessamyn read -> using : 1
jessamyn read using -> macromedia : 1
read using macromedia -> freehand : 1
using macromedia freehand -> and : 1
macromedia freehand and -> adobe : 1
freehand and adobe -> photoshop : 1
and adobe photoshop -> the : 1
adobe photoshop the -> tip : 1
photoshop the tip -> and : 1
the tip and -> warning : 1
tip and warning -> icons : 1
and warning icons -> were : 1
warning icons were -> drawn : 1
icons were drawn -> by : 1
were drawn by -> christopher : 1
drawn by christopher -> this : 1
by christopher this -> colophon : 1
christopher this colophon -> was : 1
this colophon was -> written : 1
colophon was written -> by : 1
was written by -> clairemarie : 1
written by clairemarie -> fisher : 1
by clairemarie fisher -> online : 1
clairemarie fisher online -> edition : 1
fisher online edition -> of : 1
online edition of -> this : 1
edition of this -> book : 1
book was created -> by : 1
was created by -> the : 1
created by the -> safari : 1
by the safari -> production : 1
the safari production -> group : 1
safari production group -> becki : 1
production group becki -> and : 1
group becki and -> madeleine : 1
becki and madeleine -> using : 1
and madeleine using -> a : 1
madeleine using a -> set : 1
using a set -> of : 1
set of conversion -> and : 1
of conversion and -> cleanup : 1
conversion and cleanup -> tools : 1
and cleanup tools -> written : 1
cleanup tools written -> and : 1
tools written and -> maintained : 1
written and maintained -> by : 1
and maintained by -> erik : 1
maintained by erik -> benn : 1
by erik benn -> john : 1
erik benn john -> and : 1
benn john and -> jeff : 1
john and jeff -> in : 1
and jeff in -> a : 1
jeff in a -> gravenstein : 1
in a gravenstein -> highway : 1
