decade : 1
standardize : 1
understood : 1
broad : 1
mastering : 1
greatly : 1
syntactical : 1
ability : 1
completeness : 1
syntactic : 1
sugar : 1
binding : 1
shown : 1
employee : 1
employees : 1
salary : 1
minimize : 1
needless : 1
tup : 1
chokes : 1
decomposes : 1
species : 1
particular : 1
unpacked : 1
bind : 1
strength : 1
dummy : 1
ignoring : 1
unused : 1
arguing : 1
omitting : 1
lifetimes : 1
keeps : 1
lg : 1
impossible : 1
null : 1
leaking : 1
noisy : 1
kernel : 1
api : 1
refactoring : 1
clarify : 1
surprised : 1
pitfall : 1
rounding : 1
wants : 1
controversially : 1
closest : 1
affects : 1
standardized : 1
compatibility : 1
guide : 1
templated : 1
simplify : 1
sv : 1
tests : 1
substitution : 1
syntactically : 1
wished : 1
erroneous : 1
suit : 1
compiled : 1
likely : 1
traditional : 1
scripts : 1
trust : 1
report : 1
traditionally : 1
assembly : 1
saving : 1
inlined : 1
eliminate : 1
inlining : 1
legal : 1
reciple : 1
derive : 1
defaults : 1
ignite : 1
bcd : 1
def : 1
zzz : 1
processes : 1
actions : 1
signalizes : 1
collection : 1
reinvent : 1
categorized : 1
preferred : 1
storage : 1
costly : 1
trade : 1
classical : 1
performant : 1
sortable : 1
associative : 1
manipulated : 1
consumption : 1
almost : 1
constraint : 1
uniqueness : 1
scratch : 1
surface : 1
disappears : 1
sits : 1
prune : 1
gone : 1
upcoming : 1
concentrating : 1
region : 1
destructors : 1
erase : 1
artificial : 1
swapped : 1
widely : 1
headaches : 1
crashing : 1
readability : 1
decreasing : 1
succeeds : 1
purposefully : 1
crashed : 1
aborted : 1
computations : 1
uncovering : 1
negligible : 1
proven : 1
catching : 1
practical : 1
assertions : 1
earlier : 1
yyy : 1
locates : 1
locating : 1
generalize : 1
freshly : 1
master : 1
persons : 1
rankings : 1
forbes : 1
nonsuccessful : 1
china : 1
wang : 1
jianlin : 1
france : 1
bernard : 1
arnault : 1
hong : 1
li : 1
carlos : 1
slim : 1
spain : 1
amancio : 1
ortega : 1
usa : 1
bill : 1
gates : 1
accompanied : 1
boosts : 1
observable : 1
alphabet : 1
reinitialize : 1
leftmost : 1
rightmost : 1
spoke : 1
nonoptimized : 1
yielding : 1
qualified : 1
disturb : 1
amortized : 1
depth : 1
housekeeping : 1
neighbors : 1
settles : 1
restriction : 1
reallocates : 1
reallocation : 1
orders : 1
fictional : 1
placements : 1
driver : 1
swapping : 1
nonconst : 1
avoiding : 1
respective : 1
freedom : 1
relation : 1
hashable : 1
clauses : 1
poor : 1
keyequal : 1
stripped : 1
surprising : 1
alphabetically : 1
counterpart : 1
attached : 1
polish : 1
consumed : 1
memorize : 1
pulling : 1
preparation : 1
querying : 1
assert : 1
parser : 1
parseable : 1
naked : 1
skeleton : 1
capability : 1
descriptive : 1
sources : 1
composable : 1
categorizing : 1
attaching : 1
frequencies : 1
crop : 1
appended : 1
colons : 1
indent : 1
update : 1
denoting : 1
indented : 1
shoves : 1
toward : 1
authors : 1
analyze : 1
focusing : 1
improving : 1
giant : 1
intended : 1
determining : 1
lorem : 1
terminals : 1
scroll : 1
nam : 1
blandit : 1
luctus : 1
hendrerit : 1
leo : 1
bibendum : 1
augue : 1
velit : 1
cursus : 1
cum : 1
sociis : 1
natoque : 1
penatibus : 1
et : 1
magnis : 1
dis : 1
parturient : 1
nascetur : 1
ridiculus : 1
maecenas : 1
tellus : 1
condimentum : 1
semper : 1
amet : 1
adipiscing : 1
neque : 1
assessed : 1
render : 1
iteratively : 1
abbreviated : 1
mixes : 1
comics : 1
il : 1
washing : 1
dishes : 1
infer : 1
suggested : 1
aims : 1
waives : 1
casts : 1
light : 1
introduction : 1
percentage : 1
ridiculous : 1
hat : 1
repeats : 1
imagining : 1
inherited : 1
lean : 1
jumping : 1
specifies : 1
aforementioned : 1
fancy : 1
backed : 1
ad : 1
hoc : 1
preprogrammed : 1
annoying : 1
rewarding : 1
thorough : 1
forgetting : 1
equip : 1
belong : 1
persistently : 1
referenceable : 1
encouraged : 1
populates : 1
discouraged : 1
distracts : 1
transport : 1
conceptually : 1
everyday : 1
sstr : 1
inserter : 1
appends : 1
identify : 1
necessarily : 1
recalculate : 1
computing : 1
iterative : 1
expensively : 1
high : 1
touch : 1
usability : 1
enforce : 1
private : 1
friend : 1
sentinels : 1
valuable : 1
layer : 1
decrement : 1
kept : 1
rewiring : 1
corrections : 1
realistically : 1
news : 1
constrain : 1
accidental : 1
nullptr : 1
blows : 1
binaries : 1
ensure : 1
capacity : 1
reserve : 1
threw : 1
flawless : 1
preprocessor : 1
macro : 1
kills : 1
mactivate : 1
clan : 1
serve : 1
debugging : 1
screenshot : 1
ship : 1
package : 1
manager : 1
detect : 1
legitimate : 1
overflows : 1
arithmetic : 1
wraparound : 1
architectures : 1
alignment : 1
inform : 1
homepages : 1
alarmingly : 1
software : 1
sneaky : 1
differing : 1
magically : 1
multiplied : 1
delving : 1
foreign : 1
commonality : 1
fasteners : 1
multiplications : 1
beyond : 1
recreate : 1
counterparts : 1
equality : 1
big : 1
deques : 1
zippers : 1
inspired : 1
boost : 1
uneven : 1
unnamed : 1
packages : 1
postpone : 1
blast : 1
frustrated : 1
boundaries : 1
projects : 1
confuse : 1
constants : 1
indistinguishable : 1
incrementer : 1
currying : 1
foresee : 1
overly : 1
lazy : 1
criteria : 1
erroring : 1
attr : 1
ultimate : 1
notifies : 1
gas : 1
pressure : 1
react : 1
observed : 1
couples : 1
constraining : 1
decouples : 1
impact : 1
erasing : 1
worthy : 1
explaining : 1
lowercase : 1
pieces : 1
praise : 1
imitate : 1
thrice : 1
multiplier : 1
cb : 1
eliminated : 1
multicall : 1
nl : 1
heart : 1
fixes : 1
unluckily : 1
compiles : 1
technique : 1
advised : 1
decreased : 1
unconditionally : 1
occasion : 1
delve : 1
supplying : 1
accepted : 1
nesting : 1
workings : 1
employs : 1
nested : 1
resulted : 1
noted : 1
redundancy : 1
expanding : 1
anytime : 1
mental : 1
picked : 1
motivations : 1
study : 1
seeing : 1
clearly : 1
rich : 1
daily : 1
basis : 1
shelf : 1
wasting : 1
perspective : 1
hundred : 1
colleague : 1
reviewed : 1
unlikely : 1
correctness : 1
profitably : 1
boring : 1
ninja : 1
browser : 1
viewing : 1
downloaded : 1
fluency : 1
indicator : 1
saw : 1
throughout : 1
treat : 1
acted : 1
reflect : 1
referenced : 1
reassigned : 1
assumes : 1
selects : 1
tainting : 1
assignable : 1
scalar : 1
science : 1
tortured : 1
majority : 1
stability : 1
except : 1
abbreviate : 1
shuffle : 1
shake : 1
reestablish : 1
mv : 1
optionally : 1
greater : 1
effects : 1
predecessor : 1
contiguously : 1
overwriting : 1
marked : 1
achievable : 1
import : 1
experiment : 1
analogous : 1
stuck : 1
encapsulates : 1
cologne : 1
prettier : 1
million : 1
inhabitants : 1
trips : 1
rewrite : 1
box : 1
tightly : 1
division : 1
norm : 1
builder : 1
clampval : 1
heat : 1
landscape : 1
prices : 1
brightness : 1
rgb : 1
color : 1
loses : 1
comparisons : 1
exchanging : 1
plug : 1
dolor : 1
sadipscing : 1
diam : 1
nonumy : 1
needle : 1
utilized : 1
redirects : 1
analogously : 1
developed : 1
overlay : 1
brought : 1
gains : 1
dimension : 1
simplification : 1
unmodified : 1
feasible : 1
phenomenon : 1
varied : 1
aliasing : 1
triangle : 1
connecting : 1
alterations : 1
characterized : 1
deviation : 1
dev : 1
seed : 1
gen : 1
wraps : 1
outiterator : 1
initerator : 1
sampleiterator : 1
denoted : 1
beneficial : 1
systematically : 1
shuffles : 1
lexicographical : 1
lexicographic : 1
fiddle : 1
symmetric : 1
dictionaries : 1
piping : 1
tisch : 1
hund : 1
haus : 1
fifth : 1
incoming : 1
visited : 1
ideas : 1
maximized : 1
ground : 1
brain : 1
crude : 1
lifting : 1
complexes : 1
expressing : 1
differentiate : 1
horizons : 1
reusability : 1
poses : 1
searchable : 1
segmenting : 1
subtries : 1
queried : 1
root : 1
record : 1
recorded : 1
watching : 1
restarts : 1
preventing : 1
guessing : 1
guesses : 1
fstream : 1
thinking : 1
rain : 1
sky : 1
blue : 1
primarily : 1
identically : 1
smartphone : 1
touchscreen : 1
years : 1
audio : 1
medical : 1
imaging : 1
phone : 1
music : 1
listening : 1
vastness : 1
multiplication : 1
intensity : 1
factors : 1
formulas : 1
partly : 1
repeat : 1
oscillates : 1
oscillating : 1
repeating : 1
remains : 1
altered : 1
mid : 1
generation : 1
summarized : 1
pseudo : 1
arguably : 1
strict : 1
examine : 1
restructured : 1
multiprocessing : 1
joins : 1
club : 1
hopefully : 1
subtraction : 1
fun : 1
independence : 1
indexing : 1
cuts : 1
loss : 1
analog : 1
ds : 1
adapted : 1
squaring : 1
restored : 1
mathematician : 1
coined : 1
zoomed : 1
colored : 1
visualized : 1
art : 1
hack : 1
columns : 1
rows : 1
geometry : 1
translate : 1
plane : 1
exceeds : 1
dimensions : 1
row : 1
column : 1
overwritten : 1
window : 1
divisible : 1
concerns : 1
hinders : 1
firmly : 1
regularly : 1
pile : 1
helping : 1
fellow : 1
genericity : 1
dashes : 1
isolated : 1
assignments : 1
revisit : 1
jumps : 1
subtle : 1
sean : 1
principal : 1
scientist : 1
adobe : 1
popularized : 1
child : 1
variation : 1
movement : 1
underscore : 1
seemingly : 1
negates : 1
negation : 1
clustered : 1
stays : 1
accomplish : 1
subranges : 1
sitting : 1
rid : 1
fight : 1
fired : 1
wipes : 1
wiping : 1
adheres : 1
coding : 1
whiteboard : 1
lurk : 1
decompression : 1
grows : 1
exploited : 1
reused : 1
mentioned : 1
reject : 1
mask : 1
depicted : 1
arrows : 1
scheme : 1
overwhelming : 1
templates : 1
earliest : 1
trio : 1
lift : 1
painful : 1
simplicity : 1
transfer : 1
anymore : 1
concatenating : 1
ostringstream : 1
o : 1
letters : 1
ac : 1
aside : 1
cautious : 1
proper : 1
suited : 1
enhance : 1
polluted : 1
unneeded : 1
modifications : 1
identifies : 1
untrimmed : 1
trimmed : 1
belonged : 1
prior : 1
skipped : 1
inverted : 1
fulfilling : 1
retrieved : 1
simplifies : 1
formerly : 1
require : 1
reallocate : 1
adapting : 1
narrowing : 1
boils : 1
shrinks : 1
determined : 1
terminator : 1
badly : 1
expect : 1
luxury : 1
passing : 1
losing : 1
tokenizing : 1
received : 1
separated : 1
assumingly : 1
commas : 1
quits : 1
continues : 1
tampers : 1
oh : 1
bud : 1
terence : 1
cursor : 1
pretreatment : 1
funny : 1
preprocess : 1
tokenizes : 1
subtracted : 1
launches : 1
ifs : 1
echoing : 1
interchangeable : 1
modular : 1
decouple : 1
inject : 1
presentation : 1
arranged : 1
showpoint : 1
exponent : 1
reverts : 1
digits : 1
lengthy : 1
reader : 1
intuitive : 1
disable : 1
truncates : 1
hexadecimally : 1
monetary : 1
synonymous : 1
parses : 1
sticky : 1
flushing : 1
pollute : 1
indicating : 1
lat : 1
lon : 1
cities : 1
geographical : 1
braunschweig : 1
berlin : 1
refuses : 1
remaining : 1
streaming : 1
refuse : 1
compound : 1
serializing : 1
deserializing : 1
born : 1
visit : 1
musical : 1
anthropomorphic : 1
specialties : 1
deserialized : 1
reduction : 1
shipped : 1
choices : 1
constructible : 1
oit : 1
spacing : 1
squeezes : 1
proxy : 1
dangerous : 1
isolate : 1
channel : 1
desires : 1
logging : 1
redirecting : 1
reverting : 1
redirection : 1
mock : 1
closed : 1
resurrected : 1
vanishes : 1
buffers : 1
acquisition : 1
appearance : 1
tend : 1
typedef : 1
imported : 1
untouched : 1
insensitive : 1
redefine : 1
lexicographically : 1
unchanged : 1
passwords : 1
american : 1
behave : 1
subclasses : 1
configured : 1
ip : 1
amazingly : 1
detects : 1
inputit : 1
guarding : 1
prematurely : 1
prettified : 1
modifier : 1
cin : 1
downloads : 1
page : 1
exercised : 1
curl : 1
sign : 1
suggest : 1
article : 1
register : 1
tour : 1
blog : 1
forums : 1
wikipedia : 1
websites : 1
href : 1
hood : 1
automate : 1
recurring : 1
instructs : 1
intelligent : 1
abc : 1
abbccc : 1
re : 1
bb : 1
burdening : 1
revokes : 1
showbase : 1
tidied : 1
certainly : 1
danger : 1
embrace : 1
explanation : 1
thoroughly : 1
squeeze : 1
activated : 1
trigger : 1
activating : 1
standardization : 1
unspecified : 1
pity : 1
clumsy : 1
riddled : 1
loads : 1
consulted : 1
absence : 1
elaborating : 1
downs : 1
indication : 1
sprinkled : 1
chapters : 1
tricks : 1
effective : 1
panoramic : 1
measurement : 1
displayed : 1
fractions : 1
microsecond : 1
elapsed : 1
snapshot : 1
tic : 1
interpret : 1
congratulations : 1
clocks : 1
corrected : 1
winter : 1
summer : 1
tick : 1
ahead : 1
distort : 1
monotonously : 1
rounded : 1
lose : 1
thousandth : 1
fractional : 1
ratio : 1
tutorials : 1
considering : 1
european : 1
sat : 1
apr : 1
mar : 1
extent : 1
nanoseconds : 1
communicates : 1
failures : 1
reflected : 1
approaches : 1
advantages : 1
optionals : 1
optionality : 1
gimmick : 1
concise : 1
fallback : 1
sporadically : 1
students : 1
decomposition : 1
decomposing : 1
prepends : 1
respectively : 1
arrived : 1
sink : 1
repacks : 1
unwrapping : 1
invested : 1
considerable : 1
score : 1
fields : 1
suitable : 1
zipping : 1
composition : 1
trouble : 1
dedicate : 1
touched : 1
demonstrating : 1
crisp : 1
interleaving : 1
handcraft : 1
unsafe : 1
inspection : 1
angle : 1
claims : 1
cosmetic : 1
literally : 1
auxiliary : 1
profits : 1
twofold : 1
mechanisms : 1
claim : 1
shiny : 1
responsibility : 1
relieving : 1
companions : 1
solely : 1
limitations : 1
reassigning : 1
advisable : 1
mimic : 1
owned : 1
contradicts : 1
unclear : 1
owners : 1
insights : 1
principles : 1
parties : 1
increases : 1
fa : 1
disposes : 1
pendant : 1
major : 1
managing : 1
caveat : 1
cyclic : 1
told : 1
fiddly : 1
leak : 1
unmanaged : 1
circumvent : 1
ap : 1
bp : 1
pose : 1
invaluable : 1
prolong : 1
sp : 1
recognizes : 1
manipulates : 1
dangles : 1
shortly : 1
factory : 1
humongous : 1
benefits : 1
customizations : 1
procedures : 1
manageable : 1
destroying : 1
unfeasible : 1
ps : 1
pu : 1
luckily : 1
teach : 1
forces : 1
altering : 1
invisible : 1
entire : 1
sname : 1
purposes : 1
repository : 1
rd : 1
falls : 1
stars : 1
abbreviation : 1
inequality : 1
low : 1
topics : 1
wisely : 1
timestamp : 1
deterministic : 1
nondeterministic : 1
programmatically : 1
fair : 1
rolling : 1
yesno : 1
sides : 1
evolve : 1
primary : 1
dozen : 1
shapes : 1
domains : 1
flood : 1
randval : 1
stochastic : 1
topic : 1
school : 1
spanning : 1
transition : 1
distributes : 1
curiosity : 1
cleaner : 1
comprehensive : 1
representative : 1
gauss : 1
derivation : 1
iq : 1
humans : 1
grades : 1
flip : 1
coin : 1
probabilities : 1
distributed : 1
blood : 1
inherently : 1
notification : 1
enormous : 1
oversight : 1
gained : 1
sixty : 1
extended : 1
applications : 1
serious : 1
subsections : 1
embedding : 1
calculations : 1
classic : 1
invocations : 1
answer : 1
upgrade : 1
invasive : 1
seven : 1
designing : 1
including : 1
vectorize : 1
constraints : 1
stricter : 1
cause : 1
efficiency : 1
eventually : 1
speeds : 1
suspend : 1
abbreviations : 1
arrival : 1
sys : 1
remind : 1
abstracts : 1
wish : 1
timing : 1
difficult : 1
parking : 1
cooperative : 1
reschedule : 1
minor : 1
unleash : 1
garble : 1
ids : 1
join : 1
joining : 1
smoke : 1
pin : 1
sharing : 1
pins : 1
facets : 1
workflow : 1
remained : 1
luck : 1
trapped : 1
endless : 1
abrupt : 1
terminated : 1
wise : 1
abstractions : 1
unified : 1
modes : 1
aliases : 1
latest : 1
erroneously : 1
owning : 1
concurrence : 1
forgetful : 1
misses : 1
hangs : 1
convenient : 1
obtains : 1
cycle : 1
meant : 1
exclusively : 1
tidying : 1
road : 1
traffic : 1
crane : 1
picks : 1
center : 1
street : 1
intersection : 1
direction : 1
driving : 1
meters : 1
intentionally : 1
acquires : 1
led : 1
demonstration : 1
willfully : 1
secure : 1
protect : 1
garbling : 1
lives : 1
signs : 1
randomized : 1
serializes : 1
shorten : 1
destructs : 1
obligation : 1
drawbacks : 1
orchestrate : 1
organize : 1
prepending : 1
vowels : 1
segment : 1
deactivate : 1
overall : 1
unparallelized : 1
deferred : 1
yes : 1
computational : 1
blindly : 1
touches : 1
consumable : 1
burns : 1
kicked : 1
harm : 1
exceed : 1
stopped : 1
employ : 1
below : 1
hundreds : 1
worker : 1
spawn : 1
quit : 1
truncated : 1
eat : 1
meet : 1
active : 1
fires : 1
horde : 1
racing : 1
above : 1
computed : 1
compute : 1
hyperthreading : 1
worst : 1
indices : 1
precedes : 1
asynchronized : 1
blocked : 1
intel : 1
subtask : 1
finish : 1
dag : 1
visualizes : 1
perhaps : 1
unwrapped : 1
ride : 1
reminiscent : 1
translating : 1
pcreate : 1
pconcat : 1
ptwice : 1
scheduled : 1
helped : 1
artificially : 1
schedule : 1
measurably : 1
semantic : 1
dispatch : 1
digest : 1
slash : 1
backslash : 1
intelligently : 1
normalizes : 1
attention : 1
starter : 1
plays : 1
canonicalized : 1
canonicalize : 1
doomed : 1
probable : 1
canonicalizing : 1
renames : 1
existence : 1
ec : 1
strengths : 1
nonambiguous : 1
volume : 1
indirections : 1
equivalence : 1
canonicalizes : 1
mac : 1
drive : 1
jungle : 1
dos : 1
supplemental : 1
indicate : 1
bytes : 1
plainly : 1
permissions : 1
integral : 1
floor : 1
nearest : 1
required : 1
traversing : 1
fantastically : 1
visits : 1
truth : 1
equipped : 1
fire : 1
shortcut : 1
crawl : 1
grep : 1
clone : 1
mature : 1
ms : 1
bla : 1
blubb : 1
hits : 1
descended : 1
hierarchy : 1
enum : 1
denied : 1
options : 1
motivated : 1
myself : 1
friends : 1
photo : 1
devices : 1
homogenize : 1
underscores : 1
renamed : 1
namespaces : 1
validate : 1
argc : 1
replacements : 1
replace : 1
opath : 1
rname : 1
rpath : 1
replacing : 1
alternatively : 1
resolve : 1
pictures : 1
homogenous : 1
stumble : 1
subdirectories : 1
accum : 1
nicer : 1
subfolders : 1
summary : 1
cpp : 1
asking : 1
defensive : 1
crawls : 1
substituted : 1
duplicated : 1
greedily : 1
hashes : 1
clash : 1
technical : 1
implications : 1
soft : 1
spot : 1
disastrous : 1
openssl : 1
developers : 2
structs : 2
role : 2
stuff : 2
fundamental : 2
success : 2
contexts : 2
statements : 2
initializers : 2
tight : 2
enhanced : 2
contrast : 2
silently : 2
rule : 2
seldom : 2
invalid : 2
regarded : 2
addable : 2
evaluated : 2
conditions : 2
meta : 2
super : 2
normally : 2
translation : 2
executable : 2
roll : 2
illustration : 2
unnecessarily : 2
force : 2
keyword : 2
putting : 2
restoring : 2
workaround : 2
profit : 2
rules : 2
folds : 2
field : 2
versatile : 2
fulfilled : 2
aaa : 2
translates : 2
texts : 2
wide : 2
growing : 2
subsequent : 2
easiest : 2
exceeding : 2
offers : 2
independent : 2
stay : 2
maintenance : 2
traversed : 2
talking : 2
tables : 2
hand : 2
crafted : 2
manually : 2
programmed : 2
occupy : 2
allocates : 2
preserving : 2
meat : 2
sanity : 2
crash : 2
obtaining : 2
touching : 2
creative : 2
shrunk : 2
accident : 2
safer : 2
stick : 2
practice : 2
keeping : 2
procedure : 2
emplace : 2
characteristic : 2
hints : 2
backward : 2
hurt : 2
installing : 2
knew : 2
neighbor : 2
accompanying : 2
nevertheless : 2
downside : 2
needlessly : 2
manipulating : 2
bowser : 2
mario : 2
luigi : 2
peach : 2
yoshi : 2
koopa : 2
toad : 2
implies : 2
extracting : 2
demands : 2
enabling : 2
named : 2
instantiation : 2
selection : 2
enumerate : 2
begins : 2
masses : 2
careful : 2
parameterless : 2
regardless : 2
action : 2
pulls : 2
denotes : 2
modifies : 2
associates : 2
ops : 2
operand : 2
op : 2
math : 2
rethrow : 2
inside : 2
inputs : 2
modifiable : 2
records : 2
frequent : 2
collecting : 2
request : 2
compares : 2
okay : 2
author : 2
carrying : 2
lengths : 2
ipsum : 2
shortest : 2
quam : 2
eget : 2
sem : 2
sit : 2
covered : 2
described : 2
fifo : 2
broken : 2
attach : 2
aggregate : 2
goal : 2
watch : 2
tv : 2
coming : 2
frontmost : 2
alphabetic : 2
wrappers : 2
flexible : 2
novices : 2
detached : 2
realized : 2
unequal : 2
thought : 2
lowest : 2
shove : 2
abstraction : 2
grown : 2
signed : 2
inserts : 2
advance : 2
waste : 2
hides : 2
apparent : 2
converts : 2
upside : 2
initializes : 2
somewhat : 2
dereferences : 2
gnu : 2
llvm : 2
blow : 2
microsoft : 2
visual : 2
append : 2
bug : 2
activates : 2
head : 2
debug : 2
install : 2
appending : 2
sanitizer : 2
freed : 2
under : 2
sanitizing : 2
testing : 2
day : 2
pairwise : 2
magical : 2
summed : 2
python : 2
building : 2
distract : 2
negating : 2
multiplies : 2
flaw : 2
rng : 2
heavily : 2
confused : 2
curly : 2
anyone : 2
forms : 2
constant : 2
signatures : 2
coupling : 2
polymorphic : 2
splits : 2
turns : 2
fastest : 2
toy : 2
unpacks : 2
concatenates : 2
bunch : 2
explore : 2
printer : 2
reducing : 2
factor : 2
accumulation : 2
collects : 2
body : 2
fitting : 2
pay : 2
composability : 2
picture : 2
significantly : 2
awkward : 2
repeatedly : 2
whereas : 2
arrays : 2
knowledge : 2
variants : 2
alters : 2
hidden : 2
invoke : 2
sufficient : 2
smallest : 2
half : 2
reside : 2
seem : 2
sorts : 2
pump : 2
fulfill : 2
fourth : 2
replaces : 2
ordinary : 2
component : 2
portable : 2
typically : 2
tampering : 2
coupled : 2
scaling : 2
min : 2
max : 2
variations : 2
freely : 2
everywhere : 2
shifted : 2
align : 2
significant : 2
shifts : 2
decision : 2
distance : 2
illustrate : 2
chooses : 2
consult : 2
displaying : 2
roughly : 2
uniform : 2
permutation : 2
intuitively : 2
illustrates : 2
merged : 2
opened : 2
cellphone : 2
house : 2
fish : 2
fisch : 2
coder : 2
comprehension : 2
mainly : 2
levels : 2
suffer : 2
convenience : 2
st : 2
movie : 2
scary : 2
reassignable : 2
guess : 2
queries : 2
suggestion : 2
prompts : 2
infile : 2
ghosts : 2
goldfish : 2
guinea : 2
pigs : 2
bite : 2
trump : 2
president : 2
me : 2
bruce : 2
lee : 2
chuck : 2
norris : 2
boxes : 2
water : 2
snippet : 2
modification : 2
famous : 2
invented : 2
cell : 2
apps : 2
tracks : 2
tricky : 2
phase : 2
div : 2
summands : 2
till : 2
six : 2
core : 2
restructure : 2
consisting : 2
calculates : 2
plotted : 2
continuous : 2
stuffed : 2
exchange : 2
fractals : 2
painted : 2
poster : 2
specializing : 2
absolutely : 2
scale : 2
assumed : 2
breaks : 2
flush : 2
outit : 2
chunked : 2
slice : 2
brief : 2
delimiters : 2
operates : 2
towards : 2
grasp : 2
pivot : 2
slick : 2
asks : 2
fooo : 2
whether : 2
chances : 2
overflow : 2
decompressed : 2
decompress : 2
compressing : 2
devoted : 2
inheritance : 2
typedefs : 2
embodies : 2
stand : 2
redirect : 2
involved : 2
embedded : 2
streamed : 2
mix : 2
mixing : 2
however : 2
occurred : 2
directive : 2
tab : 2
among : 2
ups : 2
hide : 2
assumption : 2
meaningful : 2
dropping : 2
separator : 2
retrieval : 2
noticeable : 2
tried : 2
failing : 2
delimiter : 2
notice : 2
vanish : 2
elaborate : 2
influence : 2
prepend : 2
interpreted : 2
octal : 2
switched : 2
boolalpha : 2
digit : 2
played : 2
confusing : 2
formats : 2
deactivates : 2
quotes : 2
noticed : 2
modifiers : 2
unrelated : 2
immediate : 2
facilities : 2
geographic : 2
york : 2
tamper : 2
enabled : 2
notified : 2
converted : 2
conditionals : 2
divides : 2
marks : 2
belongs : 2
year : 2
shiba : 2
nastyass : 2
chipmunk : 2
bork : 2
ofstream : 2
restores : 2
heavy : 2
redirected : 2
impose : 2
src : 2
password : 2
allocation : 2
substitutes : 2
url : 2
groups : 2
iso : 2
status : 2
manipulators : 2
revert : 2
chains : 2
fly : 2
noise : 2
existed : 2
helpful : 2
poll : 2
afterward : 2
triggered : 2
human : 2
caught : 2
late : 2
provoke : 2
reasons : 2
ancient : 2
enormously : 2
generating : 2
shaping : 2
keyboard : 2
measured : 2
multiples : 2
refer : 2
unit : 2
referring : 2
he : 2
toc : 2
typo : 2
him : 2
displays : 2
promised : 2
tt : 2
loct : 2
week : 2
documented : 2
world : 2
relies : 2
mess : 2
unpacking : 2
gpa : 2
float : 2
packing : 2
moment : 2
quirky : 2
unions : 2
u : 2
spread : 2
mimics : 2
track : 2
freeing : 2
manages : 2
transferred : 2
living : 2
specifically : 2
similarly : 2
owns : 2
illustrating : 2
creation : 2
causes : 2
imply : 2
sperson : 2
alive : 2
doe : 2
divisor : 2
asterisk : 2
equally : 2
histograms : 2
experts : 2
cryptography : 2
heard : 2
setting : 2
intervals : 2
boundary : 2
bernoulli : 2
briefly : 2
overview : 2
multiprogramming : 2
measurable : 2
milli : 2
quitting : 2
inactive : 2
waking : 2
accurate : 2
processor : 2
eight : 2
killed : 2
completion : 2
concrete : 2
cleanly : 2
yet : 2
nonblocking : 2
protected : 2
identified : 2
forever : 2
provokes : 2
acquire : 2
successfully : 2
avoidance : 2
unwanted : 2
specialty : 2
inconvenience : 2
exclamation : 2
motivation : 2
async : 2
wakeup : 2
wakes : 2
lk : 2
notify : 2
woken : 2
capable : 2
draw : 2
synchronous : 2
computation : 2
unix : 2
surrounds : 2
fairly : 2
unhandled : 2
filenames : 2
canonical : 2
fs : 2
rights : 2
giga : 2
collected : 2
descends : 2
descending : 2
endings : 2
rename : 2
renamer : 2
affected : 2
ls : 2
extensions : 2
ext : 2
sha : 2
dupes : 2
du : 2
symlink : 2
decisions : 3
unsorted : 3
personal : 3
polymorphy : 3
decompressing : 3
signalizing : 3
resource : 3
postponing : 3
substituting : 3
additions : 3
explains : 3
expressive : 3
implementers : 3
critical : 3
assuming : 3
telling : 3
effect : 3
prefer : 3
slow : 3
processed : 3
limited : 3
windows : 3
combining : 3
converting : 3
argue : 3
accidentally : 3
deduced : 3
previously : 3
omit : 3
specify : 3
figure : 3
branches : 3
relate : 3
improvement : 3
linking : 3
his : 3
declaring : 3
clean : 3
higher : 3
grow : 3
providing : 3
getter : 3
strategies : 3
someone : 3
operators : 3
accesses : 3
imposes : 3
varying : 3
close : 3
gap : 3
allocations : 3
gain : 3
traversal : 3
storing : 3
novice : 3
lookup : 3
optimization : 3
nor : 3
admittedly : 3
preserve : 3
deletes : 3
swap : 3
temporary : 3
performed : 3
internally : 3
fine : 3
observe : 3
behaves : 3
indexed : 3
increase : 3
utilize : 3
gcc : 3
throwing : 3
advantageous : 3
sections : 3
thrown : 3
requires : 3
wealthiest : 3
successful : 3
mexico : 3
succeed : 3
thus : 3
mapping : 3
deeper : 3
reinsert : 3
extracted : 3
fresh : 3
undefined : 3
degree : 3
trivially : 3
coord : 3
extend : 3
hashing : 3
evenly : 3
hardly : 3
act : 3
increments : 3
precision : 3
occurring : 3
pushing : 3
involves : 3
conveniently : 3
changed : 3
wherever : 3
tokenize : 3
paired : 3
pipe : 3
advantage : 3
english : 3
pure : 3
encapsulate : 3
sed : 3
breaking : 3
unable : 3
popped : 3
priorities : 3
descriptions : 3
worked : 3
avoids : 3
categories : 3
remember : 3
bidirectional : 3
lies : 3
clang : 3
demonstrates : 3
according : 3
reimplemented : 3
generates : 3
far : 3
shell : 3
introduce : 3
known : 3
hassle : 3
conversions : 3
terminating : 3
entered : 3
termination : 3
studying : 3
dangling : 3
invalidated : 3
allocating : 3
went : 3
project : 3
aware : 3
languages : 3
elegance : 3
purely : 3
exact : 3
explanations : 3
elegantly : 3
interested : 3
explain : 3
feel : 3
wild : 3
ab : 3
essentially : 3
namely : 3
satisfy : 3
observer : 3
hope : 3
expresses : 3
describing : 3
simpler : 3
ends : 3
satisfies : 3
guaranteed : 3
located : 3
combinations : 3
guarantee : 3
detailed : 3
separation : 3
expansion : 3
whose : 3
states : 3
straightforward : 3
rarely : 3
tested : 3
reimplementing : 3
publicly : 3
abstract : 3
simplified : 3
comply : 3
learning : 3
shuffled : 3
mystruct : 3
removal : 3
replaced : 3
listed : 3
mappings : 3
overloaded : 3
traverse : 3
plot : 3
normalize : 3
normalization : 3
reuse : 3
searcher : 3
elitr : 3
sampled : 3
configure : 3
randomly : 3
device : 3
feeds : 3
translations : 3
car : 3
printable : 3
aborts : 3
mapped : 3
life : 3
iss : 3
prompt : 3
aliens : 3
macgiver : 3
bjarne : 3
stroustrup : 3
database : 3
exercise : 3
maths : 3
prepared : 3
measuring : 3
negative : 3
differences : 3
accumulated : 3
term : 3
fractal : 3
converge : 3
image : 3
operate : 3
separate : 3
assemble : 3
describe : 3
encapsulated : 3
design : 3
ideal : 3
bonus : 3
wildly : 3
compression : 3
compress : 3
inherits : 3
ready : 3
consuming : 3
literal : 3
trim : 3
attempt : 3
wc : 3
launched : 3
pressing : 3
hexadecimal : 3
uppercase : 3
placed : 3
quoted : 3
manipulator : 3
skipping : 3
flushes : 3
deserialize : 3
fails : 3
bunched : 3
instantiates : 3
desc : 3
honey : 3
dramatic : 3
changing : 3
stdout : 3
la : 3
lb : 3
destructed : 3
address : 3
executes : 3
mixed : 3
bits : 3
cerr : 3
though : 3
dedicated : 3
durations : 3
refers : 3
millisecond : 3
measures : 3
offsets : 3
date : 3
literals : 3
fri : 3
obtained : 3
display : 3
follows : 3
understanding : 3
mechanism : 3
prevents : 3
tuba : 3
balou : 3
bobby : 3
dynamic : 3
lifetime : 3
decremented : 3
decrements : 3
simulates : 3
age : 3
randomness : 3
weight : 3
discrete : 3
extension : 3
odds : 3
sequential : 3
upgraded : 3
fewer : 3
cpus : 3
machine : 3
bye : 3
starting : 3
synchronize : 3
releases : 3
unlocked : 3
timeout : 3
synchronizes : 3
synchronized : 3
synchronization : 3
hist : 3
futures : 3
protects : 3
level : 3
dependencies : 3
costs : 3
letter : 3
descend : 3
jpg : 3
replacement : 3
efficiently : 4
conditionally : 4
calculator : 4
contents : 4
advanced : 4
inheriting : 4
stopping : 4
deadlocks : 4
background : 4
usage : 4
limit : 4
online : 4
unsigned : 4
contained : 4
references : 4
powerful : 4
avoided : 4
supported : 4
itr : 4
braces : 4
unlocks : 4
purpose : 4
constructors : 4
parentheses : 4
floating : 4
brackets : 4
conversion : 4
deduces : 4
harder : 4
lets : 4
rely : 4
n : 4
taken : 4
alone : 4
principle : 4
modules : 4
module : 4
adapt : 4
definitions : 4
near : 4
relevant : 4
dots : 4
unary : 4
identity : 4
comma : 4
combines : 4
expand : 4
explained : 4
accessed : 4
adds : 4
pushed : 4
linearly : 4
trees : 4
searched : 4
sorting : 4
neither : 4
strictly : 4
spans : 4
hence : 4
sentinel : 4
searches : 4
cut : 4
experienced : 4
foobar : 4
appears : 4
efficient : 4
trying : 4
naive : 4
m : 4
showing : 4
destroy : 4
reached : 4
spares : 4
complexity : 4
sane : 4
sounds : 4
pass : 4
extracts : 4
allocator : 4
distribute : 4
represented : 4
assigning : 4
notation : 4
unknown : 4
asked : 4
latter : 4
convertible : 4
meaning : 4
filtered : 4
longest : 4
concentrates : 4
present : 4
german : 4
stepwise : 4
grouped : 4
homework : 4
summing : 4
reaches : 4
related : 4
optimized : 4
plus : 4
requirements : 4
increasing : 4
functionality : 4
istringstream : 4
tokens : 4
solves : 4
fibit : 4
forget : 4
turn : 4
flag : 4
triggers : 4
improve : 4
multiplying : 4
zipper : 4
popular : 4
prepare : 4
capturing : 4
limits : 4
affect : 4
recursion : 4
twice : 4
horribly : 4
reimplement : 4
inputiterator : 4
construction : 4
decide : 4
redundant : 4
achieved : 4
holding : 4
rather : 4
agnostic : 4
solving : 4
offline : 4
making : 4
safely : 4
fully : 4
merge : 4
modified : 4
occurrences : 4
decides : 4
bundle : 4
otherwise : 4
diff : 4
reduced : 4
along : 4
differs : 4
drops : 4
sine : 4
sequences : 4
launch : 4
hi : 4
entering : 4
die : 4
hate : 4
scenarios : 4
manual : 4
cosine : 4
generators : 4
representation : 4
corresponding : 4
positive : 4
accumulate : 4
glance : 4
wall : 4
binfunc : 4
calculation : 4
splitting : 4
equals : 4
alternative : 4
solution : 4
expected : 4
gray : 4
continuously : 4
reads : 4
lined : 4
followed : 4
familiar : 4
ownership : 4
views : 4
separating : 4
ugly : 4
newline : 4
reset : 4
counts : 4
ifstream : 4
casing : 4
crazy : 4
buftype : 4
opening : 4
yield : 4
stops : 4
promise : 4
multithreaded : 4
across : 4
minutes : 4
leaks : 4
maintaining : 4
managed : 4
hit : 4
scenario : 4
dividing : 4
home : 4
synchronizing : 4
asynchronously : 4
vary : 4
blocking : 4
speedup : 4
vectorization : 4
pcout : 4
consumes : 4
producing : 4
dependency : 4
concat : 4
tools : 4
testdir : 4
entries : 4
scopes : 5
semantics : 5
modifying : 5
lambdas : 5
ordered : 5
unordered : 5
merging : 5
cost : 5
composing : 5
resources : 5
apis : 5
parallelism : 5
renderer : 5
tiny : 5
disk : 5
statistics : 5
reduces : 5
unpack : 5
introduced : 5
specializations : 5
assigned : 5
achieve : 5
optimize : 5
modern : 5
extra : 5
useless : 5
potentially : 5
conditional : 5
especially : 5
situations : 5
brace : 5
identical : 5
y : 5
fills : 5
mode : 5
others : 5
mostly : 5
question : 5
surely : 5
specialize : 5
instructions : 5
evaluate : 5
ever : 5
linked : 5
abort : 5
folding : 5
expands : 5
sums : 5
insertions : 5
requirement : 5
newly : 5
moving : 5
lots : 5
off : 5
contiguous : 5
maintained : 5
chosen : 5
sophisticated : 5
allocate : 5
ought : 5
overwrite : 5
accepting : 5
relatively : 5
nearly : 5
assignment : 5
performs : 5
perfect : 5
gave : 5
naively : 5
upon : 5
happened : 5
fall : 5
perfectly : 5
placement : 5
drivers : 5
donkey : 5
took : 5
manipulate : 5
demonstrate : 5
std : 5
collect : 5
several : 5
global : 5
ran : 5
pushes : 5
pop : 5
multiply : 5
emits : 5
onto : 5
applying : 5
cheap : 5
everyone : 5
capabilities : 5
category : 5
boilerplate : 5
previous : 5
inherit : 5
thanks : 5
typing : 5
saves : 5
think : 5
worth : 5
central : 5
launching : 5
buggy : 5
variety : 5
deleting : 5
precise : 5
internet : 5
solved : 5
hardcoded : 5
concept : 5
nature : 5
squares : 5
closure : 5
processing : 5
versions : 5
messages : 5
mark : 5
solve : 5
looping : 5
fact : 5
g : 5
h : 5
init : 5
p : 5
substitute : 5
compose : 5
produces : 5
various : 5
alter : 5
graph : 5
sample : 5
sampling : 5
suggestions : 5
am : 5
cmplx : 5
outer : 5
visible : 5
gather : 5
excess : 5
management : 5
built : 5
trailing : 5
none : 5
working : 5
prepended : 5
disables : 5
microseconds : 5
local : 5
oint : 5
decompose : 5
composed : 5
union : 5
release : 5
flow : 5
virtual : 5
divide : 5
partition : 5
weights : 5
speed : 5
sizes : 5
sleeping : 5
waits : 5
setup : 5
wake : 5
subtasks : 5
symbolic : 5
compatible : 6
permutations : 6
comfort : 6
letting : 6
shape : 6
amounts : 6
comfortably : 6
packs : 6
fraction : 6
stock : 6
base : 6
dropped : 6
intermediate : 6
longer : 6
missing : 6
compilers : 6
tidy : 6
statement : 6
computer : 6
outside : 6
exit : 6
usual : 6
w : 6
direct : 6
initializing : 6
problems : 6
regarding : 6
deduction : 6
evaluates : 6
sees : 6
included : 6
linker : 6
definition : 6
taking : 6
implements : 6
hello : 6
false : 6
therefore : 6
chunks : 6
deque : 6
maintains : 6
natural : 6
stores : 6
primitive : 6
adapter : 6
slot : 6
away : 6
course : 6
odd : 6
feeding : 6
past : 6
expensive : 6
leave : 6
seems : 6
bound : 6
bounds : 6
bugs : 6
methods : 6
billionaires : 6
person : 6
ourselves : 6
ordering : 6
place : 6
chance : 6
side : 6
handles : 6
complete : 6
themselves : 6
instantiating : 6
stack : 6
final : 6
query : 6
maintain : 6
fit : 6
written : 6
generated : 6
activate : 6
trait : 6
five : 6
carry : 6
worry : 6
offset : 6
flags : 6
sanitizers : 6
e : 6
functional : 6
accumulator : 6
concatenated : 6
average : 6
settings : 6
series : 6
concatenation : 6
outputiterator : 6
piece : 6
handcrafted : 6
transformed : 6
total : 6
based : 6
pol : 6
free : 6
dash : 6
gathered : 6
baz : 6
compressed : 6
overhead : 6
view : 6
playing : 6
padding : 6
hex : 6
equivalent : 6
produced : 6
destruction : 6
public : 6
deleted : 6
simulate : 6
parallelized : 6
finished : 6
started : 6
raii : 6
unlocking : 6
directories : 6
permission : 6
jpeg : 6
alphabetical : 7
frequency : 7
choosing : 7
optimal : 7
context : 7
utility : 7
failure : 7
parallelizing : 7
became : 7
cases : 7
assign : 7
remainder : 7
preceding : 7
population : 7
acts : 7
looked : 7
due : 7
copied : 7
branch : 7
blocks : 7
specialization : 7
supports : 7
val : 7
target : 7
fix : 7
programs : 7
symbol : 7
shorter : 7
getting : 7
surround : 7
notion : 7
cool : 7
practically : 7
crucial : 7
stored : 7
quick : 7
tree : 7
table : 7
potential : 7
filling : 7
moves : 7
follow : 7
zero : 7
emit : 7
strange : 7
kong : 7
race : 7
explicitly : 7
knows : 7
chose : 7
dereferenced : 7
typed : 7
dereferencing : 7
operands : 7
parsed : 7
highest : 7
carries : 7
top : 7
ask : 7
occurs : 7
filter : 7
counting : 7
deals : 7
initially : 7
goes : 7
depends : 7
cast : 7
leaves : 7
comparing : 7
weird : 7
haskell : 7
giving : 7
includes : 7
chain : 7
general : 7
full : 7
basic : 7
probability : 7
summarize : 7
interfaces : 7
small : 7
apart : 7
linear : 7
subrange : 7
overloads : 7
dogs : 7
strategy : 7
j : 7
coordinates : 7
coordinate : 7
systems : 7
days : 7
enters : 7
width : 7
serial : 7
html : 7
animal : 7
released : 7
counters : 7
partitions : 7
maybe : 7
model : 7
interval : 7
policies : 7
concurrently : 7
mutexes : 7
deadlock : 7
asynchronous : 7
bundled : 8
differently : 8
language : 8
book : 8
comfortable : 8
accessing : 8
applied : 8
declared : 8
obviously : 8
nodes : 8
people : 8
fits : 8
consider : 8
unlock : 8
dealing : 8
further : 8
details : 8
depend : 8
manner : 8
stands : 8
symbols : 8
consist : 8
enable : 8
knowing : 8
delete : 8
ignore : 8
characteristics : 8
compiling : 8
holds : 8
message : 8
terminate : 8
designed : 8
revolves : 8
correct : 8
creating : 8
defining : 8
operations : 8
possibility : 8
valid : 8
cat : 8
break : 8
spaces : 8
skip : 8
opposite : 8
additionally : 8
regard : 8
becomes : 8
possibilities : 8
instantiated : 8
recursive : 8
incrementing : 8
calculating : 8
extremely : 8
zipped : 8
defines : 8
filtering : 8
sets : 8
occurrence : 8
clear : 8
substrings : 8
substring : 8
share : 8
entry : 8
dog : 8
split : 8
subtrie : 8
wave : 8
k : 8
executing : 8
calculated : 8
external : 8
interleaved : 8
surrounding : 8
quotation : 8
distributions : 8
milliseconds : 8
hours : 8
dynamically : 8
owner : 8
parallelize : 8
acquiring : 8
production : 8
bracket : 9
inline : 9
idiom : 9
rpn : 9
predicates : 9
logical : 9
legacy : 9
examples : 9
features : 9
individually : 9
caller : 9
determine : 9
process : 9
z : 9
made : 9
fail : 9
users : 9
initial : 9
against : 9
documentation : 9
inserting : 9
positions : 9
realize : 9
effectively : 9
selected : 9
destination : 9
probably : 9
behavior : 9
throws : 9
denote : 9
modify : 9
country : 9
richest : 9
node : 9
pointed : 9
approach : 9
jump : 9
matches : 9
choice : 9
alias : 9
incremented : 9
token : 9
few : 9
trick : 9
histogram : 9
white : 9
group : 9
leading : 9
tedious : 9
care : 9
differ : 9
minimum : 9
errors : 9
traits : 9
starts : 9
enough : 9
kinds : 9
slightly : 9
either : 9
repetitive : 9
wrote : 9
searching : 9
normalized : 9
largest : 9
filename : 9
deleter : 9
event : 9
cores : 9
avg : 9
deduce : 10
fast : 10
duplicates : 10
terms : 10
checked : 10
wrapping : 10
consecutive : 10
transforming : 10
constructing : 10
units : 10
concurrent : 10
initialization : 10
fixed : 10
variadic : 10
square : 10
sense : 10
considered : 10
obtain : 10
implicit : 10
select : 10
matching : 10
puts : 10
implementations : 10
signature : 10
helpers : 10
pick : 10
app : 10
found : 10
performance : 10
spare : 10
closer : 10
become : 10
allowed : 10
situation : 10
billionaire : 10
currently : 10
exists : 10
associated : 10
extract : 10
fed : 10
echo : 10
push : 10
possibly : 10
job : 10
occur : 10
iterating : 10
transforms : 10
behind : 10
loops : 10
lower : 10
upper : 10
engines : 10
csignal : 10
regex : 10
clock : 10
ctor : 10
waiting : 10
exclusive : 10
dir : 10
duplicate : 10
bindings : 11
finding : 11
reverse : 11
dictionary : 11
somewhere : 11
iteration : 11
feature : 11
returning : 11
enables : 11
detail : 11
learned : 11
constructs : 11
creates : 11
distinguish : 11
sometimes : 11
quite : 11
true : 11
simplest : 11
allows : 11
filled : 11
quickly : 11
checks : 11
continue : 11
returned : 11
added : 11
mutable : 11
unnecessary : 11
represent : 11
containing : 11
description : 11
never : 11
reach : 11
iterates : 11
priority : 11
feeling : 11
plain : 11
iterated : 11
happen : 11
forwards : 11
recursively : 11
consume : 11
command : 11
john : 11
captured : 11
concatenate : 11
combination : 11
parts : 11
my : 11
faster : 11
diagram : 11
cats : 11
describes : 11
period : 11
signals : 11
streams : 11
minimal : 11
links : 11
duration : 11
manage : 11
dtor : 11
structured : 12
style : 12
ascii : 12
parallelization : 12
cover : 12
rest : 12
array : 12
initialize : 12
common : 12
condition : 12
runtime : 12
typical : 12
finds : 12
combined : 12
ts : 12
chunk : 12
inserted : 12
front : 12
hard : 12
removes : 12
magic : 12
dereference : 12
prevent : 12
parse : 12
perform : 12
r : 12
surrounded : 12
test : 12
combine : 12
reason : 12
consumers : 12
engine : 12
convert : 12
id : 12
locked : 12
locks : 12
switch : 13
safe : 13
readable : 13
imagine : 13
names : 13
less : 13
var : 13
runs : 13
correctly : 13
arbitrarily : 13
wrapper : 13
build : 13
changes : 13
stop : 13
once : 13
larger : 13
lists : 13
drop : 13
programmers : 13
learn : 13
whatever : 13
index : 13
moved : 13
future : 13
smaller : 13
bad : 13
reading : 13
stringstream : 13
implicitly : 13
d : 13
dot : 13
forward : 13
prefix : 13
inner : 13
os : 13
scientific : 13
meme : 13
iterable : 14
checking : 14
formula : 14
locking : 14
folder : 14
globally : 14
here : 14
keep : 14
wrong : 14
elements : 14
depending : 14
adding : 14
programmer : 14
header : 14
generally : 14
matter : 14
obvious : 14
ones : 14
open : 14
sort : 14
underlying : 14
wrapped : 14
wrap : 14
four : 14
zip : 15
patterns : 15
generator : 15
per : 15
paths : 15
accessible : 15
who : 15
show : 15
samples : 15
applies : 15
exist : 15
given : 15
leaving : 15
express : 15
ways : 15
explicit : 15
information : 15
deal : 15
nicely : 15
choose : 15
task : 15
application : 15
nothing : 15
steps : 15
addition : 15
increment : 15
copying : 15
operation : 15
everything : 15
sentence : 15
format : 15
f : 15
policy : 15
seconds : 15
tuples : 15
keys : 16
cartesian : 16
exceptions : 16
smart : 16
tasks : 16
members : 16
programming : 16
having : 16
method : 16
available : 16
reduce : 16
arbitrary : 16
boolean : 16
seen : 16
created : 16
represents : 16
great : 16
avoid : 16
compare : 16
sequence : 16
elegant : 16
please : 16
capture : 16
raw : 16
decimal : 16
buffer : 16
sure : 16
producers : 16
hint : 17
best : 17
chapter : 17
defined : 17
sake : 17
certain : 17
came : 17
specialized : 17
s : 17
produce : 17
equal : 17
idea : 17
recipes : 17
allocated : 17
removing : 17
interface : 17
removed : 17
constructed : 17
real : 17
section : 17
generate : 17
sentences : 18
product : 18
handling : 18
heap : 18
copies : 18
syntax : 18
allow : 18
says : 18
pointing : 18
catch : 18
maximum : 18
destroyed : 18
amount : 18
ss : 18
captures : 18
execute : 18
student : 18
original : 18
weak : 18
cpu : 18
libraries : 19
fold : 19
generic : 19
absolute : 19
relative : 19
automatic : 19
concentrate : 19
better : 19
assume : 19
tries : 19
x : 19
calling : 19
saved : 19
mean : 19
indeed : 19
least : 19
vectors : 19
middle : 19
l : 19
parsing : 19
hold : 19
appear : 19
parallel : 19
handy : 20
iterations : 20
fourier : 20
times : 20
understand : 20
mathematical : 20
gets : 20
initialized : 20
match : 20
change : 20
short : 20
special : 20
say : 20
link : 20
directly : 20
apply : 20
gives : 20
consists : 20
integers : 20
remove : 20
during : 20
maps : 20
pattern : 20
formatting : 20
compared : 21
easier : 21
state : 21
handle : 21
constexpr : 21
space : 21
since : 21
helps : 21
overload : 21
throw : 21
tool : 22
easily : 22
well : 22
additional : 22
may : 22
third : 22
go : 22
looking : 22
soon : 22
save : 22
terminal : 22
ranges : 23
containers : 23
control : 23
move : 23
down : 23
things : 23
payload : 23
come : 23
optional : 23
itself : 23
variant : 23
insertion : 24
needed : 24
block : 24
pack : 24
anything : 24
enter : 24
destructor : 24
pretty : 25
tuple : 25
later : 25
callable : 25
length : 25
system : 25
writing : 26
immediately : 26
bool : 26
had : 26
scope : 26
t : 26
source : 26
whenever : 26
form : 26
internal : 26
complicated : 26
happens : 26
calculate : 26
initializer : 27
mandelbrot : 27
doing : 27
struct : 27
provided : 27
support : 27
although : 27
left : 27
insert : 27
old : 27
version : 27
fibonacci : 27
wait : 27
beginning : 28
via : 28
good : 28
back : 28
unique : 28
operating : 28
trie : 29
transform : 29
classes : 29
help : 29
been : 29
element : 29
usually : 29
store : 29
hash : 29
default : 29
executed : 29
filesystem : 29
resulting : 30
exception : 30
difference : 30
play : 30
city : 30
sleep : 31
comes : 31
done : 31
similar : 31
current : 31
v : 31
lines : 31
implementing : 31
finally : 31
problem : 31
transformation : 31
producer : 31
automatically : 32
individual : 32
count : 32
shows : 32
actually : 32
lead : 32
add : 32
tell : 32
expressions : 32
compile : 33
custom : 33
pairs : 33
uses : 33
often : 33
construct : 33
empty : 33
existing : 33
begin : 33
regular : 34
execution : 34
within : 34
content : 34
note : 34
bar : 34
your : 35
numeric : 35
structures : 35
basically : 35
parameters : 35
together : 35
position : 35
comparison : 35
distribution : 35
were : 36
interesting : 36
nice : 36
char : 36
arguments : 36
necessary : 36
foo : 36
instances : 37
long : 37
whitespace : 37
needs : 37
three : 37
easy : 37
typename : 37
give : 37
double : 37
accept : 38
provides : 38
start : 38
feed : 38
sorted : 38
key : 38
let : 38
printed : 38
fill : 39
important : 39
variables : 39
being : 39
word : 40
large : 40
structure : 40
check : 40
simply : 40
results : 40
consumer : 40
useful : 41
library : 41
prints : 41
implemented : 41
container : 41
until : 41
got : 42
makes : 42
argument : 42
contain : 42
queue : 42
too : 43
pair : 43
part : 43
find : 43
b : 43
operator : 44
normal : 44
why : 44
instead : 44
signal : 44
printing : 45
tells : 45
leads : 45
shall : 46
through : 46
directory : 46
words : 47
memory : 47
single : 47
recipe : 47
step : 47
kind : 47
again : 48
able : 48
instantiate : 48
bit : 48
text : 49
actual : 49
reference : 49
characters : 49
sum : 50
right : 50
integer : 50
takes : 50
pointers : 51
name : 51
iterate : 51
implementation : 51
headers : 51
counter : 52
lock : 52
files : 53
you : 53
something : 53
c : 53
member : 54
compiler : 54
put : 55
copy : 55
binary : 55
points : 55
read : 55
most : 56
yields : 56
run : 57
size : 57
much : 57
take : 57
cannot : 57
error : 58
must : 58
know : 58
predicate : 58
completely : 59
always : 59
result : 59
create : 59
calls : 59
works : 60
work : 61
little : 61
threads : 61
complex : 62
case : 62
set : 62
before : 63
types : 64
around : 65
loop : 65
try : 65
might : 66
even : 66
else : 66
means : 66
provide : 66
void : 66
exactly : 67
path : 68
strings : 69
second : 69
character : 69
map : 69
main : 69
simple : 70
looks : 70
thing : 70
those : 71
own : 72
lot : 72
make : 72
called : 73
mutex : 73
list : 74
algorithms : 74
variable : 76
each : 76
should : 76
instance : 76
expression : 77
multiple : 78
line : 79
specific : 80
search : 80
access : 80
still : 80
declare : 80
possible : 81
whole : 81
between : 82
parameter : 82
constructor : 83
numbers : 83
where : 83
running : 83
include : 84
about : 85
many : 85
point : 85
no : 87
helper : 88
lambda : 88
did : 88
random : 89
define : 89
could : 89
contains : 89
objects : 90
now : 90
over : 91
example : 91
already : 91
really : 91
thread : 91
write : 93
iterators : 94
end : 94
shared : 94
than : 95
next : 95
static : 96
pointer : 97
standard : 98
last : 98
going : 98
file : 99
i : 99
without : 100
both : 101
template : 102
while : 102
algorithm : 104
another : 105
every : 106
after : 109
range : 111
these : 113
out : 114
up : 114
stream : 117
user : 118
used : 118
way : 119
more : 123
their : 123
very : 132
want : 132
time : 133
was : 133
item : 133
accepts : 135
like : 139
output : 140
functions : 141
class : 143
number : 143
returns : 144
data : 145
namespace : 145
implement : 146
has : 148
see : 149
two : 157
following : 157
vector : 158
int : 158
look : 164
would : 166
when : 168
there : 170
call : 170
new : 174
any : 176
them : 179
code : 179
values : 179
get : 182
stl : 186
print : 193
type : 194
value : 194
us : 195
other : 196
different : 200
const : 202
object : 205
what : 206
so : 206
input : 212
program : 217
because : 217
items : 219
how : 219
they : 227
also : 230
same : 231
does : 234
such : 235
first : 244
need : 245
iterator : 249
one : 249
its : 251
only : 253
some : 262
into : 263
or : 271
cout : 293
our : 302
just : 312
at : 316
auto : 319
string : 331
using : 343
but : 349
then : 349
on : 352
use : 364
order : 365
by : 370
have : 376
do : 418
all : 428
return : 465
function : 530
not : 539
as : 542
will : 554
if : 560
from : 584
be : 585
an : 630
are : 677
can : 712
which : 784
for : 825
with : 938
this : 1204
that : 1251
in : 1570
it : 1583
is : 1739
of : 1855
and : 1888
a : 2592
to : 2711
we : 2758
the : 6308
the new the -> new : 1
the new the -> existing : 1
new the new -> structured : 1
the new structured -> bindings : 1
new structured bindings -> bundled : 1
structured bindings bundled -> return : 2
bindings bundled return -> variable : 1
bindings bundled return -> comes : 1
bundled return variable -> scopes : 2
return variable scopes -> to : 2
variable scopes to -> if : 2
variable scopes to -> and : 1
scopes to if -> and : 2
to if and -> switch : 2
if and switch -> from : 1
if and switch -> is : 1
and switch from -> the : 1
switch from the -> new : 1
from the new -> bracket : 3
from the new -> end : 1
the new bracket -> initializer : 3
the new bracket -> initialization : 1
new bracket initializer -> the : 2
new bracket initializer -> came : 1
bracket initializer the -> constructor : 2
initializer the constructor -> automatically : 2
the constructor automatically -> deduce : 3
constructor automatically deduce -> the : 3
automatically deduce the -> resulting : 3
deduce the resulting -> template : 3
the resulting template -> class : 3
the resulting template -> static : 1
resulting template class -> compile : 1
resulting template class -> decisions : 1
resulting template class -> lot : 1
template class compile -> time : 1
class compile time -> decisions : 1
compile time decisions -> with : 2
time decisions with -> libraries : 1
time decisions with -> templated : 1
decisions with libraries -> with : 2
with libraries with -> inline : 3
libraries with inline -> handy : 2
libraries with inline -> it : 1
with inline handy -> helper : 2
inline handy helper -> functions : 2
handy helper functions -> with : 3
helper functions with -> fold : 3
functions with fold -> stl : 1
functions with fold -> got : 1
functions with fold -> there : 1
with fold stl -> stl : 1
fold stl stl -> the : 1
stl stl the -> idiom : 1
stl the idiom -> on : 1
the idiom on -> items : 2
the idiom on -> lot : 1
idiom on items -> from : 2
on items from -> an : 2
items from an -> unsorted : 3
from an unsorted -> in : 3
an unsorted in -> instances : 2
an unsorted in -> items : 1
unsorted in instances -> the : 2
in instances the -> fast : 2
instances the fast -> or : 3
the fast or -> the : 3
fast or the -> safe : 3
or the safe -> instances : 2
or the safe -> is : 1
the safe instances -> items : 2
safe instances items -> efficiently : 2
instances items efficiently -> and : 2
items efficiently and -> conditionally : 3
efficiently and conditionally -> into : 3
and conditionally into -> the : 2
and conditionally into -> we : 1
conditionally into the -> new : 2
into the new -> insertion : 2
the new insertion -> hint : 3
new insertion hint -> semantics : 3
insertion hint semantics -> of : 3
hint semantics of -> modifying : 2
hint semantics of -> up : 1
semantics of modifying -> the : 2
of modifying the -> keys : 2
modifying the keys -> of : 3
the keys of -> with : 2
the keys of -> the : 2
the keys of -> map : 2
the keys of -> some : 1
the keys of -> items : 1
keys of with -> custom : 2
of with custom -> duplicates : 2
with custom duplicates -> from : 2
custom duplicates from -> user : 2
duplicates from user -> input : 3
from user input -> and : 4
from user input -> in : 1
user input and -> printing : 3
user input and -> measures : 1
input and printing -> them : 3
and printing them -> in : 3
printing them in -> alphabetical : 3
them in alphabetical -> order : 3
in alphabetical order -> with : 3
in alphabetical order -> any : 1
in alphabetical order -> of : 1
alphabetical order with -> a : 2
alphabetical order with -> is : 1
order with a -> simple : 2
with a simple -> rpn : 2
with a simple -> this : 2
a simple rpn -> calculator : 3
simple rpn calculator -> with : 3
rpn calculator with -> a : 2
rpn calculator with -> is : 1
calculator with a -> word : 2
with a word -> frequency : 2
a word frequency -> counter : 3
word frequency counter -> with : 3
frequency counter with -> a : 2
frequency counter with -> is : 1
counter with a -> writing : 2
with a writing -> style : 2
a writing style -> helper : 3
writing style helper -> tool : 3
style helper tool -> for : 3
helper tool for -> finding : 3
tool for finding -> very : 3
for finding very -> long : 3
finding very long -> sentences : 3
very long sentences -> in : 3
long sentences in -> text : 2
long sentences in -> texts : 1
sentences in text -> with : 2
in text with -> a : 2
text with a -> personal : 1
text with a -> lot : 1
with a personal -> list : 2
a personal list -> using : 3
personal list using -> your : 1
personal list using -> standard : 1
personal list using -> is : 1
list using your -> own : 1
using your own -> iterable : 1
your own iterable -> your : 2
your own iterable -> already : 1
own iterable your -> own : 2
iterable your own -> iterators : 2
your own iterators -> compatible : 4
your own iterators -> wherever : 1
own iterators compatible -> with : 4
iterators compatible with -> stl : 4
compatible with stl -> iterator : 4
compatible with stl -> so : 1
with stl iterator -> iterator : 2
with stl iterator -> own : 1
with stl iterator -> to : 1
stl iterator iterator -> fill : 1
stl iterator iterator -> wrappers : 1
iterator iterator fill -> generic : 1
iterator fill generic -> data : 2
fill generic data -> algorithms : 2
fill generic data -> a : 1
generic data algorithms -> in : 2
data algorithms in -> terms : 2
algorithms in terms -> of : 3
in terms of -> the : 2
in terms of -> we : 2
in terms of -> usually : 1
in terms of -> this : 1
in terms of -> performance : 1
in terms of -> stl : 1
in terms of -> merging : 1
in terms of -> their : 1
terms of the -> other : 2
of the other -> way : 2
of the other -> access : 1
of the other -> beginning : 1
of the other -> categories : 1
of the other -> that : 1
of the other -> although : 1
the other way -> around : 3
the other way -> it : 1
the other way -> not : 1
the other way -> one : 1
the other way -> is : 1
other way around -> using : 3
way around using -> reverse : 3
around using reverse -> iterator : 3
using reverse iterator -> iterations : 2
using reverse iterator -> it : 1
reverse iterator iterations -> over : 2
iterator iterations over -> ranges : 2
iterations over ranges -> with : 4
over ranges with -> checking : 1
over ranges with -> iterator : 1
over ranges with -> the : 1
over ranges with -> stl : 1
ranges with checking -> iterator : 1
with checking iterator -> code : 1
checking iterator code -> with : 3
iterator code with -> checked : 3
code with checked -> your : 2
code with checked -> matter : 1
with checked your -> own : 2
checked your own -> zip : 2
your own zip -> iterator : 3
own zip iterator -> lambda : 1
own zip iterator -> are : 1
own zip iterator -> programming : 1
zip iterator lambda -> lambda : 1
iterator lambda lambda -> functions : 1
lambda lambda functions -> on : 1
lambda lambda functions -> construct : 1
lambda functions on -> the : 1
functions on the -> run : 3
functions on the -> stl : 1
on the run -> using : 3
the run using -> lambda : 3
run using lambda -> polymorphy : 2
run using lambda -> lambda : 1
using lambda polymorphy -> by : 2
lambda polymorphy by -> wrapping : 2
polymorphy by wrapping -> lambdas : 3
by wrapping lambdas -> into : 3
wrapping lambdas into -> functions : 2
wrapping lambdas into -> say : 1
lambdas into functions -> by : 2
into functions by -> complex : 2
functions by complex -> predicates : 2
by complex predicates -> with : 2
complex predicates with -> logical : 3
predicates with logical -> multiple : 2
predicates with logical -> filtering : 1
with logical multiple -> functions : 2
logical multiple functions -> with : 2
multiple functions with -> the : 4
functions with the -> same : 5
with the same -> using : 2
with the same -> or : 1
with the same -> v : 1
with the same -> name : 1
with the same -> but : 1
with the same -> and : 1
with the same -> applies : 1
with the same -> are : 1
with the same -> sort : 1
with the same -> permutations : 1
with the same -> should : 1
with the same -> width : 1
with the same -> that : 1
with the same -> arguments : 1
with the same -> we : 1
with the same -> this : 1
the same using -> and : 2
the same using -> this : 1
same using and -> cartesian : 2
using and cartesian -> product : 2
and cartesian product -> pairs : 2
cartesian product pairs -> of : 3
cartesian product pairs -> we : 1
product pairs of -> any : 3
pairs of any -> input : 3
of any input -> at : 3
any input at -> compile : 3
input at compile -> stl : 1
input at compile -> important : 1
input at compile -> expressions : 1
at compile stl -> algorithm : 1
compile stl algorithm -> stl : 1
stl algorithm stl -> algorithm : 1
algorithm stl algorithm -> items : 1
stl algorithm items -> from : 1
algorithm items from -> containers : 1
items from containers -> to : 3
from containers to -> other : 3
containers to other -> specific : 2
containers to other -> most : 1
to other specific -> items : 2
other specific items -> from : 2
specific items from -> the : 2
specific items from -> and : 1
items from the -> contents : 2
items from the -> old : 1
items from the -> middle : 1
items from the -> alphabet : 1
items from the -> vector : 1
items from the -> underlying : 1
items from the -> we : 1
items from the -> parameter : 1
from the contents -> of : 2
the contents of -> items : 2
the contents of -> is : 1
the contents of -> three : 1
contents of items -> in : 2
of items in -> ordered : 2
items in ordered -> and : 3
in ordered and -> unordered : 3
ordered and unordered -> a : 2
ordered and unordered -> we : 1
and unordered a -> vector : 2
unordered a vector -> to : 2
a vector to -> a : 3
vector to a -> specific : 3
vector to a -> second : 1
to a specific -> numeric : 3
a specific numeric -> range : 3
specific numeric range -> with : 3
numeric range with -> patterns : 2
numeric range with -> a : 1
range with patterns -> in : 2
with patterns in -> strings : 2
patterns in strings -> with : 3
in strings with -> and : 3
strings with and -> choosing : 3
with and choosing -> the : 3
and choosing the -> optimal : 3
and choosing the -> right : 3
choosing the optimal -> large : 2
choosing the optimal -> for : 1
the optimal large -> permutations : 2
optimal large permutations -> of : 2
large permutations of -> input : 2
permutations of input -> a : 2
permutations of input -> testing : 1
of input a -> dictionary : 2
input a dictionary -> merging : 2
a dictionary merging -> advanced : 1
a dictionary merging -> stl : 1
a dictionary merging -> that : 1
dictionary merging advanced -> use : 1
merging advanced use -> of : 1
advanced use of -> stl : 2
use of stl -> advanced : 1
use of stl -> a : 1
use of stl -> will : 1
use of stl -> algorithms : 1
use of stl -> with : 1
use of stl -> in : 1
use of stl -> we : 1
of stl advanced -> use : 1
stl advanced use -> of : 1
of stl a -> trie : 1
stl a trie -> class : 1
a trie class -> using : 3
trie class using -> stl : 3
class using stl -> search : 1
class using stl -> a : 1
class using stl -> data : 1
using stl search -> generator : 1
stl search generator -> with : 1
search generator with -> the : 2
search generator with -> entering : 1
generator with the -> fourier : 2
with the fourier -> transform : 2
the fourier transform -> formula : 3
the fourier transform -> is : 1
the fourier transform -> of : 1
fourier transform formula -> with : 3
transform formula with -> stl : 3
formula with stl -> numeric : 3
with stl numeric -> the : 2
with stl numeric -> is : 1
stl numeric the -> error : 2
numeric the error -> sum : 2
the error sum -> of : 4
the error sum -> will : 1
error sum of -> two : 4
sum of two -> an : 2
sum of two -> are : 1
sum of two -> the : 1
sum of two -> optional : 1
of two an -> ascii : 2
two an ascii -> mandelbrot : 2
an ascii mandelbrot -> our : 2
an ascii mandelbrot -> the : 1
an ascii mandelbrot -> image : 1
ascii mandelbrot our -> own : 2
mandelbrot our own -> algorithm : 2
our own algorithm -> useful : 2
our own algorithm -> some : 1
our own algorithm -> called : 1
our own algorithm -> for : 1
own algorithm useful -> algorithms : 2
algorithm useful algorithms -> from : 2
useful algorithms from -> standard : 3
algorithms from standard -> algorithms : 3
from standard algorithms -> consecutive : 2
from standard algorithms -> very : 1
standard algorithms consecutive -> whitespace : 2
algorithms consecutive whitespace -> between : 2
consecutive whitespace between -> and : 2
consecutive whitespace between -> strings : 1
whitespace between and -> decompressing : 2
between and decompressing -> stream : 1
between and decompressing -> the : 1
and decompressing stream -> and : 1
decompressing stream and -> regular : 1
stream and regular -> stream : 1
stream and regular -> and : 1
stream and regular -> will : 1
and regular stream -> and : 1
regular stream and -> regular : 1
and regular and -> transforming : 1
regular and transforming -> whitespace : 1
and transforming whitespace -> from : 2
transforming whitespace from -> the : 2
whitespace from the -> beginning : 3
from the beginning -> and : 3
from the beginning -> a : 1
from the beginning -> of : 1
from the beginning -> in : 1
from the beginning -> then : 1
the beginning and -> end : 6
the beginning and -> the : 5
beginning and end -> of : 6
and end of -> the : 4
and end of -> a : 1
and end of -> when : 1
end of the -> comfort : 2
end of the -> it : 1
end of the -> deque : 1
end of the -> create : 1
end of the -> int : 1
end of the -> we : 1
end of the -> output : 1
end of the -> algorithm : 1
end of the -> numeric : 1
end of the -> when : 1
end of the -> user : 1
end of the -> string : 1
end of the -> individually : 1
end of the -> last : 2
end of the -> input : 1
end of the -> subrange : 1
end of the -> now : 2
end of the -> template : 1
end of the -> iterable : 1
end of the -> second : 1
of the comfort -> of : 2
the comfort of -> the : 2
the comfort of -> without : 1
the comfort of -> string : 1
comfort of the -> cost : 2
of the cost -> of : 2
the cost of -> constructing : 3
cost of constructing -> user : 2
cost of constructing -> is : 1
of constructing user -> all : 2
constructing user all -> words : 2
user all words -> in : 2
all words in -> a : 3
all words in -> an : 1
words in a -> your : 2
words in a -> say : 1
in a your -> output : 2
a your output -> with : 2
your output with -> stream : 3
output with stream -> complex : 2
output with stream -> many : 1
with stream complex -> objects : 2
stream complex objects -> from : 2
complex objects from -> file : 3
objects from file -> containers : 2
objects from file -> in : 1
from file containers -> from : 2
file containers from -> printing : 2
containers from printing -> with : 2
from printing with -> output : 2
printing with output -> to : 2
with output to -> files : 2
output to files -> for : 3
to files for -> specific : 3
files for specific -> code : 3
for specific code -> custom : 2
for specific code -> provides : 1
specific code custom -> string : 2
code custom string -> classes : 2
custom string classes -> by : 3
string classes by -> inheriting : 3
classes by inheriting -> from : 3
by inheriting from -> input : 2
by inheriting from -> is : 1
inheriting from input -> with : 2
from input with -> the : 2
input with the -> regular : 3
with the regular -> expression : 3
the regular expression -> pretty : 2
the regular expression -> parsing : 1
the regular expression -> define : 2
the regular expression -> we : 2
regular expression pretty -> printing : 2
expression pretty printing -> numbers : 2
pretty printing numbers -> differently : 3
printing numbers differently -> per : 3
numbers differently per -> context : 3
differently per context -> on : 3
per context on -> the : 3
context on the -> readable : 1
context on the -> exceptions : 1
context on the -> the : 1
on the readable -> exceptions : 1
the readable exceptions -> from : 1
readable exceptions from -> utility : 1
readable exceptions from -> of : 1
exceptions from utility -> utility : 1
from utility utility -> between : 1
utility utility between -> different : 1
utility between different -> time : 1
between different time -> units : 4
between different time -> we : 1
different time units -> using : 3
different time units -> and : 1
time units using -> between : 2
time units using -> the : 1
units using between -> absolute : 2
using between absolute -> and : 2
between absolute and -> relative : 3
absolute and relative -> times : 3
absolute and relative -> to : 1
absolute and relative -> paths : 1
and relative times -> signalizing : 1
and relative times -> with : 1
and relative times -> it : 1
relative times signalizing -> failure : 1
times signalizing failure -> with : 1
signalizing failure with -> functions : 2
signalizing failure with -> a : 1
failure with functions -> on : 2
with functions on -> composing : 2
functions on composing -> data : 2
on composing data -> structures : 2
composing data structures -> with : 3
data structures with -> with : 2
data structures with -> have : 1
structures with with -> for : 2
with with for -> more : 2
with for more -> type : 3
for more type -> different : 2
for more type -> can : 1
more type different -> types : 2
type different types -> with : 2
different types with -> handling : 2
different types with -> are : 1
types with handling -> resources : 2
with handling resources -> with : 2
handling resources with -> handling : 2
handling resources with -> the : 1
resources with handling -> shared : 2
with handling shared -> heap : 2
handling shared heap -> memory : 3
shared heap memory -> with : 3
heap memory with -> pointers : 2
heap memory with -> the : 1
memory with pointers -> resource : 2
with pointers resource -> handling : 2
pointers resource handling -> of : 2
resource handling of -> legacy : 3
handling of legacy -> apis : 3
of legacy apis -> with : 3
legacy apis with -> smart : 3
apis with smart -> different : 2
apis with smart -> pointers : 1
with smart different -> member : 2
smart different member -> the : 2
different member the -> same : 3
member the same -> random : 2
member the same -> imagine : 1
the same random -> numbers : 2
same random numbers -> and : 2
random numbers and -> choosing : 3
random numbers and -> letting : 1
numbers and choosing -> the : 3
choosing the right -> random : 3
the right random -> number : 3
right random number -> numbers : 2
right random number -> order : 1
random number numbers -> and : 2
number numbers and -> letting : 2
numbers and letting -> the : 3
and letting the -> stl : 3
letting the stl -> shape : 3
the stl shape -> specific : 3
stl shape specific -> parallelism : 1
stl shape specific -> distributions : 1
stl shape specific -> the : 1
shape specific parallelism -> and : 1
specific parallelism and -> parallelism : 1
parallelism and parallelism -> and : 1
and parallelism and -> parallelizing : 1
parallelism and parallelizing -> code : 1
and parallelizing code -> that : 2
parallelizing code that -> uses : 3
code that uses -> standard : 3
that uses standard -> a : 2
that uses standard -> came : 1
uses standard a -> program : 2
standard a program -> to : 2
a program to -> sleep : 3
program to sleep -> for : 3
to sleep for -> specific : 3
to sleep for -> a : 2
to sleep for -> certain : 1
to sleep for -> seconds : 2
to sleep for -> and : 1
to sleep for -> another : 2
sleep for specific -> amounts : 3
for specific amounts -> of : 3
specific amounts of -> and : 2
specific amounts of -> nice : 1
amounts of and -> stopping : 2
of and stopping -> exception : 1
of and stopping -> shared : 1
of and stopping -> addition : 1
and stopping exception -> safe : 1
stopping exception safe -> shared : 1
exception safe shared -> locking : 2
safe shared locking -> with : 2
shared locking with -> and : 2
shared locking with -> deadlocks : 1
locking with and -> deadlocks : 1
locking with and -> the : 1
with and deadlocks -> with : 1
and deadlocks with -> concurrent : 1
deadlocks with concurrent -> postponing : 2
with concurrent postponing -> initialization : 2
concurrent postponing initialization -> with : 2
postponing initialization with -> the : 2
postponing initialization with -> we : 1
initialization with the -> execution : 2
with the execution -> of : 2
the execution of -> tasks : 3
the execution of -> a : 1
execution of tasks -> into : 3
of tasks into -> the : 3
tasks into the -> background : 3
into the background -> using : 3
the background using -> the : 2
the background using -> we : 1
background using the -> idiom : 2
using the idiom -> with : 2
the idiom with -> the : 2
the idiom with -> this : 1
idiom with the -> multiple : 2
idiom with the -> ascii : 2
with the multiple -> idiom : 2
the multiple idiom -> with : 3
multiple idiom with -> the : 2
multiple idiom with -> pick : 1
with the ascii -> mandelbrot : 2
the ascii mandelbrot -> renderer : 3
the ascii mandelbrot -> fractal : 1
ascii mandelbrot renderer -> using : 3
mandelbrot renderer using -> a : 2
mandelbrot renderer using -> the : 1
renderer using a -> tiny : 2
using a tiny -> automatic : 2
a tiny automatic -> parallelization : 3
tiny automatic parallelization -> library : 3
automatic parallelization library -> with : 3
parallelization library with -> a : 1
parallelization library with -> have : 1
parallelization library with -> complex : 1
library with a -> path : 1
with a path -> paths : 1
a path paths -> from : 2
path paths from -> relative : 2
paths from relative -> all : 2
paths from relative -> the : 1
from relative all -> files : 2
relative all files -> in : 3
all files in -> a : 3
all files in -> every : 1
all files in -> any : 1
files in a -> text : 2
files in a -> directory : 2
files in a -> very : 1
in a text -> search : 2
in a text -> as : 1
a text search -> an : 2
a text search -> operating : 1
text search an -> automatic : 2
search an automatic -> file : 2
an automatic file -> a : 2
an automatic file -> recipe : 1
automatic file a -> disk : 2
file a disk -> usage : 2
a disk usage -> statistics : 2
a disk usage -> already : 1
disk usage statistics -> about : 2
usage statistics about -> file : 2
statistics about file -> a : 2
statistics about file -> the : 1
about file a -> tool : 2
file a tool -> that : 2
a tool that -> reduces : 3
a tool that -> recursively : 1
a tool that -> works : 1
a tool that -> does : 1
a tool that -> lists : 1
tool that reduces -> folder : 3
that reduces folder -> size : 2
that reduces folder -> substituting : 1
reduces folder size -> by : 2
folder size by -> substituting : 2
size by substituting -> duplicates : 2
by substituting duplicates -> with : 2
substituting duplicates with -> new : 1
substituting duplicates with -> with : 1
substituting duplicates with -> are : 1
duplicates with new -> this : 1
with new this -> we : 1
new this we -> will : 1
new this we -> can : 1
this we will -> cover : 4
this we will -> clarify : 1
this we will -> fill : 1
this we will -> implement : 15
this we will -> primitive : 1
this we will -> use : 3
this we will -> build : 1
this we will -> recreate : 1
this we will -> see : 5
this we will -> play : 4
this we will -> not : 1
this we will -> normalize : 1
this we will -> write : 4
this we will -> let : 1
this we will -> get : 1
this we will -> print : 1
this we will -> feel : 1
this we will -> concentrate : 3
this we will -> extract : 1
this we will -> learn : 1
this we will -> construct : 1
this we will -> a : 1
this we will -> be : 2
this we will -> define : 1
this we will -> create : 1
this we will -> go : 1
this we will -> have : 3
this we will -> how : 1
we will cover -> structured : 1
we will cover -> the : 3
will cover structured -> bindings : 1
cover structured bindings -> to : 1
structured bindings to -> unpack : 1
bindings to unpack -> bundled : 1
to unpack bundled -> return : 1
unpack bundled return -> variable : 1
scopes to and -> from : 1
to and from -> the : 1
to and from -> tuples : 1
to and from -> we : 1
and from the -> new : 1
and from the -> how : 1
and from the -> expressions : 1
template class decisions -> with : 1
class decisions with -> libraries : 1
with fold got -> a : 1
fold got a -> lot : 1
got a lot -> of : 1
a lot of -> additions : 1
a lot of -> situations : 1
a lot of -> helper : 1
a lot of -> meta : 1
a lot of -> allocations : 1
a lot of -> comfort : 1
a lot of -> magic : 1
a lot of -> types : 1
a lot of -> developers : 1
a lot of -> helpers : 1
a lot of -> stl : 2
a lot of -> items : 1
a lot of -> functions : 1
a lot of -> tasks : 1
a lot of -> data : 1
a lot of -> it : 2
a lot of -> thought : 1
a lot of -> we : 2
a lot of -> different : 4
a lot of -> boilerplate : 1
a lot of -> sanity : 1
a lot of -> which : 1
a lot of -> repetitive : 1
a lot of -> other : 2
a lot of -> complex : 1
a lot of -> but : 1
a lot of -> signal : 1
a lot of -> random : 2
a lot of -> headers : 2
a lot of -> functional : 1
a lot of -> on : 1
a lot of -> string : 1
a lot of -> possibilities : 1
a lot of -> leading : 1
a lot of -> the : 1
a lot of -> things : 1
a lot of -> these : 1
a lot of -> strings : 1
a lot of -> optional : 1
a lot of -> programming : 1
a lot of -> stars : 1
a lot of -> that : 1
a lot of -> smoke : 1
a lot of -> threads : 1
a lot of -> concurrent : 1
a lot of -> a : 1
a lot of -> cpu : 1
a lot of -> predicate : 1
a lot of -> tools : 1
lot of additions -> in : 1
of additions in -> most : 1
additions in most -> by : 1
in most by -> it : 1
most by it -> is : 1
by it is -> a : 1
it is a -> completely : 1
it is a -> simple : 1
it is a -> our : 1
it is a -> function : 1
it is a -> and : 1
it is a -> we : 3
it is a -> wrapper : 1
it is a -> mutable : 1
it is a -> common : 1
it is a -> polymorphic : 1
it is a -> template : 1
it is a -> very : 1
it is a -> simplified : 1
it is a -> new : 1
it is a -> good : 1
it is a -> helper : 1
it is a -> twofold : 1
it is a -> the : 1
it is a -> little : 1
it is a -> mac : 1
it is a -> regular : 1
it is a -> duplicate : 8
is a completely -> different : 1
a completely different -> language : 1
a completely different -> than : 1
a completely different -> class : 1
a completely different -> implementation : 1
a completely different -> which : 1
completely different language -> compared : 1
different language compared -> to : 1
language compared to -> what : 1
compared to what -> it : 1
to what it -> was : 2
what it was -> just : 1
what it was -> so : 1
what it was -> initialized : 1
it was just -> a : 1
was just a -> decade : 1
just a decade -> the : 1
a decade the -> standard : 1
decade the standard -> does : 1
the standard does -> not : 1
standard does not -> only : 1
does not only -> standardize : 1
does not only -> work : 1
does not only -> take : 1
does not only -> contain : 1
does not only -> accept : 1
does not only -> perform : 1
not only standardize -> the : 1
only standardize the -> as : 1
standardize the as -> it : 1
the as it -> needs : 1
the as it -> can : 1
the as it -> kills : 1
as it needs -> to : 1
it needs to -> be : 4
it needs to -> create : 1
needs to be -> understood : 1
needs to be -> if : 2
needs to be -> shrunk : 1
needs to be -> so : 1
needs to be -> shifted : 1
needs to be -> initialized : 2
needs to be -> instantiated : 1
needs to be -> killed : 1
needs to be -> protected : 1
to be understood -> by : 1
be understood by -> the : 1
understood by the -> but : 1
by the but -> also : 1
by the but -> it : 1
the but also -> the : 2
the but also -> their : 1
but also the -> standard : 1
but also the -> producers : 2
also the standard -> template : 1
the standard template -> library : 1
standard template library -> book : 1
template library book -> explains : 1
library book explains -> how : 1
book explains how -> to : 1
explains how to -> put : 1
explains how to -> implement : 1
explains how to -> imitate : 1
how to put -> the : 1
how to put -> to : 1
how to put -> this : 1
how to put -> them : 1
to put the -> stl : 1
to put the -> thread : 1
put the stl -> to : 1
the stl to -> the : 1
the stl to -> do : 2
stl to the -> best : 1
to the best -> use : 1
the best use -> with : 1
best use with -> a : 1
use with a -> broad : 1
use with a -> custom : 1
with a broad -> range : 1
a broad range -> of : 1
broad range of -> but : 1
range of but -> at : 1
of but at -> this : 1
but at this -> chapter : 1
but at this -> no : 1
at this chapter -> will : 1
this chapter will -> concentrate : 1
this chapter will -> explain : 1
chapter will concentrate -> on : 1
will concentrate on -> the : 1
will concentrate on -> how : 1
will concentrate on -> measuring : 1
concentrate on the -> most : 1
concentrate on the -> instead : 1
concentrate on the -> fourier : 1
concentrate on the -> mandelbrot : 1
concentrate on the -> standard : 1
on the most -> important : 1
the most important -> new : 1
the most important -> characteristics : 1
the most important -> which : 1
the most important -> for : 1
the most important -> things : 1
the most important -> the : 1
the most important -> if : 1
most important new -> language : 1
important new language -> mastering : 1
new language mastering -> them : 1
language mastering them -> will : 1
mastering them will -> greatly : 1
them will greatly -> help : 1
will greatly help -> you : 1
greatly help you -> and : 1
help you and -> expressive : 1
you and expressive -> code : 1
and expressive code -> a : 1
expressive code a -> will : 1
code a will -> see : 1
a will see -> how : 1
will see how -> to : 8
will see how -> that : 1
will see how -> can : 1
will see how -> easy : 1
will see how -> powerful : 1
see how to -> access : 1
see how to -> do : 4
see how to -> avoid : 1
see how to -> handle : 1
see how to -> build : 1
see how to -> format : 1
see how to -> squeeze : 1
see how to -> convert : 1
see how to -> call : 1
see how to -> write : 1
see how to -> use : 1
see how to -> solve : 1
see how to -> deal : 1
how to access -> individual : 1
to access individual -> members : 1
access individual members -> of : 1
individual members of -> and : 1
members of and -> structures : 1
of and structures -> comfortably : 1
and structures comfortably -> structured : 1
structures comfortably structured -> how : 1
comfortably structured how -> to : 1
structured how to -> limit : 1
how to limit -> variable : 1
to limit variable -> scopes : 1
limit variable scopes -> with : 1
variable scopes with -> the : 1
scopes with the -> and : 1
with the and -> variable : 1
with the and -> returns : 1
with the and -> this : 1
with the and -> note : 1
with the and -> to : 1
with the and -> return : 1
with the and -> actual : 1
the and variable -> initialization : 1
and variable initialization -> the : 1
variable initialization the -> syntactical : 1
initialization the syntactical -> which : 1
the syntactical which -> were : 1
syntactical which were -> introduced : 1
which were introduced -> by : 1
were introduced by -> with : 1
introduced by with -> the : 1
by with the -> new : 1
with the new -> bracket : 1
with the new -> ability : 1
with the new -> brace : 1
with the new -> but : 1
with the new -> to : 1
with the new -> function : 1
new bracket initialization -> which : 1
bracket initialization which -> looks : 1
initialization which looks -> the : 1
which looks the -> same : 1
looks the same -> for : 1
the same for -> initializer : 1
the same for -> inserting : 1
the same for -> then : 1
same for initializer -> were : 1
for initializer were -> fixed : 1
initializer were fixed -> bracket : 1
were fixed bracket -> initializer : 1
fixed bracket initializer -> template : 1
bracket initializer template -> class : 1
initializer template class -> instances : 1
template class instances -> can : 1
class instances can -> now : 1
instances can now -> the : 1
can now the -> constructor : 1
now the constructor -> if : 1
the constructor if -> different : 1
constructor if different -> specializations : 1
if different specializations -> of : 1
different specializations of -> a : 1
specializations of a -> template : 1
of a template -> class : 1
of a template -> type : 1
a template class -> in : 1
a template class -> that : 1
template class in -> completely : 1
class in completely -> different : 1
in completely different -> this : 1
completely different this -> is : 2
different this is -> now : 1
different this is -> completely : 1
different this is -> like : 1
this is now -> easily : 1
is now easily -> the : 1
now easily the -> handling : 1
easily the handling -> of : 1
the handling of -> variadic : 1
handling of variadic -> parameter : 1
of variadic parameter -> packs : 1
variadic parameter packs -> in : 1
parameter packs in -> template : 1
packs in template -> functions : 1
in template functions -> became : 1
template functions became -> much : 1
functions became much -> easier : 1
became much easier -> in : 1
much easier in -> many : 1
easier in many -> cases : 1
in many cases -> with : 1
many cases with -> the : 1
cases with the -> it : 1
with the it -> became : 1
with the it -> must : 1
the it became -> more : 1
it became more -> comfortable : 1
became more comfortable -> to : 1
more comfortable to -> define : 1
comfortable to define -> static : 1
to define static -> globally : 1
define static globally -> accessible : 1
static globally accessible -> objects : 1
globally accessible objects -> in : 1
accessible objects in -> libraries : 1
objects in libraries -> with : 1
in libraries with -> the : 1
libraries with the -> new : 1
the new ability -> to : 1
new ability to -> inline : 1
ability to inline -> was : 1
to inline was -> only : 1
inline was only -> possible : 1
was only possible -> for : 1
was only possible -> using : 1
was only possible -> by : 1
only possible for -> functions : 1
possible for functions -> of : 1
for functions of -> the : 1
functions of the -> examples : 1
functions of the -> c : 1
functions of the -> might : 1
of the examples -> in : 1
the examples in -> this : 1
examples in this -> chapter : 1
in this chapter -> might : 1
in this chapter -> to : 1
in this chapter -> and : 1
in this chapter -> deals : 1
in this chapter -> because : 1
this chapter might -> be : 1
chapter might be -> more : 1
might be more -> interesting : 1
be more interesting -> for : 1
more interesting for -> implementers : 1
interesting for implementers -> of : 1
for implementers of -> libraries : 1
implementers of libraries -> than : 1
of libraries than -> for : 1
libraries than for -> developers : 1
than for developers -> who : 1
for developers who -> implement : 1
developers who implement -> while : 1
who implement while -> we : 1
implement while we -> will : 1
while we will -> have : 1
we will have -> a : 13
we will have -> to : 1
we will have -> an : 1
we will have -> in : 1
will have a -> look : 8
will have a -> we : 1
will have a -> dedicated : 1
will have a -> panoramic : 1
will have a -> closer : 2
will have a -> very : 1
have a look -> at : 51
have a look -> on : 2
have a look -> into : 2
have a look -> comes : 1
have a look -> what : 2
have a look -> algorithm : 1
a look at -> such : 1
a look at -> multiple : 1
a look at -> the : 24
a look at -> how : 3
a look at -> some : 2
a look at -> see : 1
a look at -> all : 2
a look at -> auto : 1
a look at -> an : 2
a look at -> a : 4
a look at -> it : 1
a look at -> in : 1
a look at -> this : 1
a look at -> strings : 1
a look at -> variables : 1
a look at -> about : 1
a look at -> another : 2
a look at -> what : 1
a look at -> stl : 1
a look at -> which : 1
a look at -> two : 1
a look at -> filesystem : 1
look at such -> features : 1
look at such -> a : 1
at such features -> for : 1
such features for -> completeness : 1
features for completeness -> it : 1
for completeness it -> is : 1
completeness it is -> not : 1
it is not -> too : 1
it is not -> possible : 5
it is not -> backed : 1
it is not -> we : 2
it is not -> only : 1
it is not -> that : 1
it is not -> much : 1
it is not -> clear : 1
it is not -> some : 1
it is not -> and : 1
it is not -> a : 2
it is not -> really : 1
it is not -> important : 1
is not too -> critical : 1
is not too -> obvious : 1
is not too -> it : 1
is not too -> can : 1
is not too -> if : 1
is not too -> important : 1
is not too -> on : 1
not too critical -> to : 1
too critical to -> understand : 1
critical to understand -> all : 1
to understand all -> the : 1
to understand all -> of : 1
understand all the -> examples : 1
all the examples -> of : 1
the examples of -> this : 1
examples of this -> chapter : 1
of this chapter -> immediately : 1
of this chapter -> does : 1
this chapter immediately -> in : 1
chapter immediately in -> order : 1
immediately in order -> to : 2
in order to -> understand : 4
in order to -> assign : 1
in order to -> access : 3
in order to -> see : 7
in order to -> control : 1
in order to -> determine : 2
in order to -> additional : 1
in order to -> achieve : 1
in order to -> compile : 1
in order to -> fix : 2
in order to -> use : 4
in order to -> have : 2
in order to -> derive : 1
in order to -> implement : 1
in order to -> expand : 2
in order to -> gain : 2
in order to -> let : 3
in order to -> print : 11
in order to -> do : 10
in order to -> make : 9
in order to -> handle : 1
in order to -> spare : 4
in order to -> the : 2
in order to -> increment : 1
in order to -> reduce : 3
in order to -> prevent : 8
in order to -> reinsert : 2
in order to -> insert : 2
in order to -> calculate : 2
in order to -> them : 2
in order to -> show : 1
in order to -> provide : 2
in order to -> collect : 1
in order to -> count : 2
in order to -> crop : 1
in order to -> get : 32
in order to -> help : 3
in order to -> point : 2
in order to -> read : 1
in order to -> keep : 2
in order to -> iterate : 2
in order to -> effectively : 1
in order to -> reference : 1
in order to -> give : 1
in order to -> leave : 1
in order to -> force : 1
in order to -> ensure : 1
in order to -> not : 4
in order to -> namespace : 1
in order to -> form : 1
in order to -> construct : 1
in order to -> sum : 1
in order to -> really : 1
in order to -> be : 3
in order to -> prepare : 1
in order to -> call : 4
in order to -> tell : 1
in order to -> allow : 1
in order to -> find : 3
in order to -> instantiate : 1
in order to -> forward : 1
in order to -> wrap : 1
in order to -> zero : 1
in order to -> demonstrate : 1
in order to -> nicely : 1
in order to -> cast : 1
in order to -> play : 1
in order to -> sort : 1
in order to -> move : 1
in order to -> fill : 1
in order to -> copy : 1
in order to -> items : 1
in order to -> perform : 1
in order to -> bundle : 1
in order to -> limit : 1
in order to -> correctly : 1
in order to -> merge : 1
in order to -> always : 1
in order to -> look : 1
in order to -> we : 1
in order to -> when : 1
in order to -> generate : 1
in order to -> translate : 1
in order to -> realize : 1
in order to -> accomplish : 1
in order to -> execute : 3
in order to -> add : 1
in order to -> mix : 1
in order to -> trim : 1
in order to -> drop : 1
in order to -> feed : 1
in order to -> pump : 1
in order to -> take : 1
in order to -> reimplement : 1
in order to -> pretty : 1
in order to -> automate : 1
in order to -> tidy : 1
in order to -> test : 1
in order to -> signal : 1
in order to -> decompose : 1
in order to -> just : 1
in order to -> learn : 2
in order to -> unpack : 1
in order to -> avoid : 3
in order to -> distinguish : 1
in order to -> check : 2
in order to -> define : 1
in order to -> obtain : 1
in order to -> represent : 1
in order to -> concentrate : 1
in order to -> fit : 1
in order to -> run : 2
in order to -> speed : 3
in order to -> therefore : 1
in order to -> parallelize : 2
in order to -> synchronize : 1
in order to -> wake : 1
in order to -> wait : 2
in order to -> meet : 1
in order to -> fully : 1
in order to -> finish : 1
in order to -> start : 1
in order to -> also : 1
in order to -> first : 1
in order to -> concatenate : 1
in order to -> finally : 1
in order to -> filter : 1
order to understand -> the : 1
order to understand -> all : 1
order to understand -> how : 2
order to understand -> that : 1
order to understand -> this : 1
to understand the -> rest : 1
to understand the -> original : 1
to understand the -> whole : 1
understand the rest -> of : 1
the rest of -> this : 1
the rest of -> the : 3
the rest of -> and : 1
rest of this -> structured : 1
of this structured -> bindings : 1
this structured bindings -> bundled : 1
bundled return comes -> with : 1
return comes with -> a : 1
comes with a -> new : 1
comes with a -> lot : 1
comes with a -> wide : 1
with a new -> syntactic : 1
with a new -> counter : 1
with a new -> scope : 1
with a new -> general : 1
with a new -> custom : 1
a new syntactic -> sugar : 1
new syntactic sugar -> and : 1
syntactic sugar and -> automatic : 1
sugar and automatic -> type : 1
and automatic type -> these : 1
automatic type these -> help : 1
type these help -> to : 1
these help to -> assign : 1
help to assign -> values : 1
to assign values -> from : 1
assign values from -> and : 1
values from and -> structs : 1
from and structs -> into : 1
and structs into -> individual : 1
structs into individual -> in : 1
into individual in -> other : 1
individual in other -> programming : 1
in other programming -> this : 1
other programming this -> is : 1
programming this is -> also : 1
this is also -> called : 2
this is also -> only : 1
is also called -> to : 1
is also called -> the : 1
is also called -> a : 1
is also called -> it : 1
also called to -> do : 1
called to do -> a : 1
to do a -> structured : 1
to do a -> in : 1
to do a -> little : 2
to do a -> program : 1
to do a -> lot : 1
to do a -> tool : 1
do a structured -> binding : 1
a structured binding -> in : 1
structured binding in -> order : 1
binding in order -> to : 1
order to assign -> multiple : 1
to assign multiple -> variables : 1
assign multiple variables -> from : 1
multiple variables from -> one : 1
variables from one -> bundled : 1
from one bundled -> structure : 1
one bundled structure -> is : 1
bundled structure is -> always : 1
structure is always -> one : 1
is always one -> first : 1
always one first -> see : 1
one first see -> how : 1
first see how -> it : 1
see how it -> was : 1
see how it -> really : 1
see how it -> changes : 1
see how it -> can : 1
see how it -> gets : 1
how it was -> done : 1
it was done -> before : 1
was done before -> we : 1
done before we -> can : 1
done before we -> call : 1
before we can -> have : 1
before we can -> plot : 1
before we can -> run : 1
before we can -> finally : 1
we can have -> a : 2
can have a -> look : 2
look at multiple -> examples : 1
at multiple examples -> that : 1
multiple examples that -> show : 1
examples that show -> how : 1
that show how -> we : 1
show how we -> can : 1
how we can -> do : 1
how we can -> utilize : 1
how we can -> improve : 1
how we can -> hide : 1
how we can -> remove : 1
how we can -> assemble : 1
how we can -> put : 1
how we can -> handle : 1
we can do -> it : 1
we can do -> that : 2
we can do -> a : 4
we can do -> is : 1
we can do -> all : 1
we can do -> now : 1
we can do -> to : 1
we can do -> with : 1
we can do -> the : 2
we can do -> something : 3
can do it -> in : 1
do it in -> individual : 1
do it in -> odd : 1
it in individual -> values : 1
in individual values -> of : 1
individual values of -> imagine : 1
individual values of -> the : 1
values of imagine -> we : 1
of imagine we -> have : 1
imagine we have -> a : 1
we have a -> mathematical : 1
we have a -> whole : 1
we have a -> function : 2
we have a -> parameter : 1
we have a -> different : 1
we have a -> gives : 1
we have a -> helper : 1
we have a -> and : 2
we have a -> complete : 1
we have a -> string : 1
we have a -> sentence : 1
we have a -> number : 1
we have a -> more : 1
we have a -> printing : 1
we have a -> stream : 1
we have a -> multithreaded : 1
we have a -> time : 1
we have a -> duration : 1
we have a -> foo : 1
we have a -> tuple : 1
we have a -> the : 1
we have a -> nice : 2
we have a -> distribution : 1
we have a -> part : 1
we have a -> vector : 1
we have a -> library : 1
have a mathematical -> which : 1
a mathematical which -> accepts : 1
mathematical which accepts -> a : 1
which accepts a -> and : 1
which accepts a -> number : 1
which accepts a -> range : 1
which accepts a -> key : 1
which accepts a -> predicate : 1
which accepts a -> string : 1
which accepts a -> stream : 1
which accepts a -> shared : 1
accepts a and -> a : 3
a and a -> parameter : 1
a and a -> the : 1
a and a -> which : 1
a and a -> what : 1
a and a -> set : 1
a and a -> new : 1
a and a -> and : 1
a and a -> cout : 1
and a parameter -> and : 1
a parameter and -> fraction : 1
a parameter and -> the : 1
a parameter and -> we : 1
parameter and fraction -> of : 1
and fraction of -> well : 1
fraction of well -> as : 1
of well as -> the : 1
well as the -> it : 1
well as the -> llvm : 1
well as the -> elapsed : 1
as the it -> returns : 1
the it returns -> those : 1
the it returns -> us : 2
the it returns -> this : 1
the it returns -> if : 1
it returns those -> values : 1
returns those values -> using : 1
those values using -> an : 1
values using an -> int : 1
using an int -> the : 1
an int the -> following : 1
int the following -> way : 1
the following way -> of : 1
following way of -> accessing : 1
way of accessing -> the : 1
of accessing the -> individual : 1
accessing the individual -> values : 1
the individual values -> of : 1
the individual values -> out : 1
values of the -> resulting : 1
values of the -> next : 1
values of the -> last : 1
values of the -> old : 1
values of the -> input : 1
of the resulting -> const : 1
the resulting const -> auto : 1
resulting const auto -> result : 1
const auto result -> is : 1
auto result is -> with : 1
result is with -> a : 1
is with a -> remainder : 1
with a remainder -> of : 3
a remainder of -> of : 1
a remainder of -> remainder : 2
remainder of of -> doing : 1
of of doing -> it : 1
of doing it -> as : 1
doing it as -> shown : 1
it as shown -> in : 1
as shown in -> the : 1
shown in the -> preceding : 1
in the preceding -> code : 1
in the preceding -> we : 1
the preceding code -> we : 1
preceding code we -> can : 1
code we can -> now : 1
we can now -> assign : 1
we can now -> continue : 1
we can now -> print : 2
we can now -> get : 1
we can now -> guarantee : 1
we can now -> implement : 1
we can now -> call : 2
we can now -> return : 1
we can now -> finally : 1
we can now -> parallelize : 1
can now assign -> the : 1
now assign the -> individual : 1
assign the individual -> individual : 1
the individual individual -> variables : 1
individual individual variables -> with : 1
individual variables with -> expressive : 1
variables with expressive -> which : 1
with expressive which -> is : 1
expressive which is -> much : 1
which is much -> better : 1
is much better -> auto : 1
much better auto -> is : 1
better auto is -> fraction : 1
auto is fraction -> with : 1
is fraction with -> a : 2
fraction with a -> remainder : 2
remainder of remainder -> bindings : 1
remainder of remainder -> lot : 1
of remainder bindings -> also : 1
remainder bindings also -> work : 1
bindings also work -> take : 1
bindings also work -> with : 1
also work take -> the : 1
work take the -> following : 1
take the following -> example : 1
the following example -> which : 1
the following example -> struct : 1
following example which -> gets : 1
example which gets -> us : 1
which gets us -> online : 1
gets us online -> stock : 1
us online stock -> its : 1
online stock its -> result : 1
stock its result -> to : 1
its result to -> individual : 1
result to individual -> variables : 1
to individual variables -> looks : 1
individual variables looks -> just : 1
variables looks just -> like : 1
looks just like -> in : 1
just like in -> the : 2
just like in -> our : 1
like in the -> example : 1
like in the -> sense : 1
like in the -> last : 1
like in the -> recipe : 1
like in the -> previous : 1
in the example -> const : 1
the example const -> auto : 1
example const auto -> bindings : 1
const auto bindings -> also : 1
auto bindings also -> work : 1
also work with -> custom : 1
also work with -> any : 1
also work with -> the : 1
work with custom -> assume : 1
with custom assume -> a : 1
custom assume a -> structure : 1
assume a structure -> like : 1
a structure like -> the : 1
structure like the -> struct : 1
like the struct -> employee : 1
the struct employee -> unsigned : 1
struct employee unsigned -> unsigned : 1
employee unsigned unsigned -> we : 1
unsigned unsigned we -> can : 1
unsigned we can -> access : 1
we can access -> these : 1
we can access -> by : 1
we can access -> everything : 1
we can access -> them : 1
we can access -> the : 1
we can access -> if : 1
can access these -> members : 1
access these members -> using : 1
these members using -> structured : 1
members using structured -> we : 1
using structured we -> can : 1
using structured we -> have : 1
structured we can -> even : 1
we can even -> do : 1
we can even -> get : 1
we can even -> wrap : 1
we can even -> use : 1
we can even -> construct : 1
we can even -> parallelize : 1
can even do -> that : 1
even do that -> in : 1
do that in -> a : 2
do that in -> the : 1
that in a -> assuming : 1
that in a -> defining : 1
that in a -> very : 1
in a assuming -> we : 1
a assuming we -> have : 1
assuming we have -> a : 1
have a whole -> vector : 1
a whole vector -> of : 1
whole vector of -> int : 1
vector of int -> employees : 1
of int employees -> initialized : 1
int employees initialized -> from : 1
employees initialized from -> somewhere : 1
initialized from somewhere -> for : 1
from somewhere for -> auto : 1
somewhere for auto -> name : 1
for auto name -> role : 1
auto name role -> salary : 1
name role salary -> it : 1
role salary it -> bindings : 1
salary it bindings -> are : 1
it bindings are -> always : 1
bindings are always -> applied : 1
are always applied -> with : 1
always applied with -> the : 1
applied with the -> same : 1
the same or -> array : 1
the same or -> how : 1
same or array -> list : 1
or array list -> of : 1
array list of -> must : 1
list of must -> exactly : 1
of must exactly -> match : 1
must exactly match -> the : 1
exactly match the -> number : 1
match the number -> of : 1
the number of -> variables : 2
the number of -> instructions : 1
the number of -> all : 1
the number of -> billionaires : 1
the number of -> are : 1
the number of -> use : 2
the number of -> samples : 2
the number of -> iterations : 8
the number of -> mandelbrot : 1
the number of -> occurrences : 2
the number of -> equal : 1
the number of -> items : 1
the number of -> words : 2
the number of -> for : 1
the number of -> steps : 1
the number of -> template : 1
the number of -> seconds : 1
the number of -> members : 1
the number of -> angle : 1
the number of -> cats : 1
the number of -> instances : 1
the number of -> and : 2
the number of -> we : 2
the number of -> partitions : 1
the number of -> files : 1
number of variables -> contained : 1
number of variables -> in : 1
of variables contained -> by : 1
variables contained by -> the : 1
contained by the -> expression : 1
by the expression -> being : 1
the expression being -> assigned : 1
expression being assigned -> or : 1
being assigned or -> array : 1
assigned or array -> must : 1
or array must -> be : 1
array must be -> one : 1
must be one -> of : 1
be one of -> the : 1
one of the -> all : 1
one of the -> two : 1
one of the -> other : 1
one of the -> container : 1
one of the -> simplest : 1
one of the -> listed : 1
one of the -> most : 1
one of the -> range : 1
one of the -> string : 1
one of the -> clock : 1
one of the -> deterministic : 1
one of the -> the : 1
one of the -> contexts : 1
one of the -> sha : 1
of the all -> members : 1
the all members -> must : 1
all members must -> be : 1
members must be -> and : 1
must be and -> defined : 1
must be and -> not : 1
be and defined -> in : 1
and defined in -> the : 1
defined in the -> base : 1
defined in the -> already : 1
in the base -> the : 1
the base the -> first : 1
base the first -> declared : 1
the first declared -> member : 1
first declared member -> is : 1
declared member is -> assigned : 1
member is assigned -> to : 1
is assigned to -> the : 1
is assigned to -> which : 1
is assigned to -> an : 1
assigned to the -> first : 1
to the first -> the : 2
to the first -> item : 5
to the first -> is : 2
to the first -> iterator : 1
to the first -> we : 1
to the first -> in : 1
to the first -> pair : 1
to the first -> occurrence : 1
the first the -> second : 1
the first the -> value : 1
the first the -> output : 1
the first the -> weak : 1
first the second -> member : 1
the second member -> to : 1
the second member -> we : 1
second member to -> the : 1
member to the -> second : 1
to the second -> and : 1
to the second -> parameter : 1
to the second -> is : 1
the second and -> so : 1
second and so -> array : 1
and so array -> of : 1
so array of -> fixed : 1
array of fixed -> type : 1
of fixed type -> can : 1
fixed type can -> be : 1
type can be -> and : 1
type can be -> transformed : 1
type can be -> done : 1
can be and -> even : 1
be and even -> only : 1
and even only -> for : 1
even only for -> the : 1
only for the -> sake : 1
only for the -> values : 1
for the sake -> of : 15
the sake of -> always : 1
the sake of -> showing : 3
the sake of -> having : 1
the sake of -> this : 2
the sake of -> the : 4
the sake of -> we : 3
the sake of -> getting : 1
the sake of -> are : 1
the sake of -> keeping : 1
sake of always -> to : 1
of always to -> minimize : 1
always to minimize -> needless : 1
to minimize needless -> copies : 1
minimize needless copies -> by : 1
needless copies by -> using : 1
copies by using -> references : 1
by using references -> when : 1
using references when -> we : 1
references when we -> write : 1
when we write -> or : 1
when we write -> combined : 1
when we write -> apps : 1
we write or -> variables : 1
we write or -> but : 1
write or variables -> between : 1
or variables between -> the : 1
variables between the -> square : 1
between the square -> the : 1
the square the -> compiler : 1
square the compiler -> will : 1
the compiler will -> error : 1
the compiler will -> only : 1
the compiler will -> add : 1
the compiler will -> out : 1
the compiler will -> then : 1
the compiler will -> evaluate : 1
the compiler will -> select : 2
the compiler will -> even : 1
compiler will error -> telling : 1
will error telling -> us : 1
error telling us -> about : 1
telling us about -> our : 1
us about our -> tup : 1
us about our -> type : 1
about our tup -> auto : 1
our tup auto -> does : 1
tup auto does -> example : 1
auto does example -> obviously : 1
does example obviously -> tries : 1
example obviously tries -> to : 1
obviously tries to -> stuff : 1
tries to stuff -> a : 1
to stuff a -> tuple : 1
stuff a tuple -> variable : 1
a tuple variable -> with : 1
tuple variable with -> three : 1
variable with three -> members : 1
with three members -> into : 1
three members into -> only : 1
members into only -> two : 1
into only two -> the : 1
only two the -> compiler : 1
two the compiler -> immediately : 1
the compiler immediately -> chokes : 1
compiler immediately chokes -> on : 1
immediately chokes on -> this : 1
chokes on this -> and : 1
on this and -> tells : 1
this and tells -> us : 1
and tells us -> about : 1
tells us about -> our : 1
tells us about -> that : 1
about our type -> decomposes : 1
our type decomposes -> into : 1
type decomposes into -> but : 1
decomposes into but -> only : 1
into but only -> names : 1
but only names -> were : 1
only names were -> provided : 1
names were provided -> auto : 1
were provided auto -> lot : 1
provided auto lot -> of : 1
auto lot of -> fundamental : 1
lot of fundamental -> data : 1
of fundamental data -> structures : 1
fundamental data structures -> from : 1
data structures from -> the : 1
data structures from -> different : 1
data structures from -> an : 1
data structures from -> and : 1
structures from the -> stl : 1
from the stl -> are : 1
from the stl -> which : 1
from the stl -> does : 1
from the stl -> parts : 1
the stl are -> immediately : 1
the stl are -> which : 1
stl are immediately -> accessible : 1
are immediately accessible -> using : 1
immediately accessible using -> structured : 1
accessible using structured -> bindings : 1
using structured bindings -> without : 1
structured bindings without -> us : 1
bindings without us -> having : 1
without us having -> to : 2
us having to -> change : 1
us having to -> store : 1
having to change -> for : 1
to change for -> a : 1
change for a -> loop : 1
for a loop -> that : 1
a loop that -> prints : 1
a loop that -> is : 1
loop that prints -> all : 1
that prints all -> the : 1
that prints all -> our : 1
prints all the -> items : 1
prints all the -> other : 1
all the items -> of : 4
all the items -> and : 1
all the items -> which : 1
all the items -> selected : 1
all the items -> into : 2
all the items -> that : 2
all the items -> behind : 1
all the items -> with : 1
all the items -> to : 1
all the items -> in : 1
all the items -> around : 1
all the items -> from : 1
the items of -> an : 1
the items of -> the : 2
the items of -> which : 1
the items of -> both : 1
items of an -> for : 1
of an for -> auto : 1
an for auto -> are : 1
for auto are -> count : 1
auto are count -> species : 1
are count species -> on : 1
count species on -> this : 1
species on this -> particular : 1
on this particular -> example : 1
this particular example -> works : 1
particular example works -> because : 1
example works because -> when : 1
works because when -> we : 1
because when we -> iterate : 1
when we iterate -> over : 2
we iterate over -> we : 1
we iterate over -> it : 1
we iterate over -> the : 2
we iterate over -> two : 1
we iterate over -> a : 1
iterate over we -> get : 1
over we get -> on : 1
we get on -> every : 1
get on every -> iteration : 1
on every iteration -> exactly : 1
every iteration exactly -> these : 1
iteration exactly these -> nodes : 1
exactly these nodes -> are : 1
these nodes are -> unpacked : 1
nodes are unpacked -> using : 1
are unpacked using -> the : 1
unpacked using the -> structured : 1
using the structured -> bindings : 1
the structured bindings -> feature : 1
structured bindings feature -> is : 1
bindings feature is -> the : 1
feature is the -> string : 1
is the string -> and : 1
is the string -> that : 1
the string and -> is : 1
the string and -> create : 1
string and is -> the : 1
and is the -> population : 1
and is the -> name : 1
and is the -> whole : 1
is the population -> in : 1
the population in -> order : 1
population in order -> to : 1
order to access -> them : 2
order to access -> the : 1
order to access -> its : 1
to access them -> individually : 1
to access them -> m : 1
access them individually -> in : 1
them individually in -> the : 1
individually in the -> loop : 1
in the loop -> it : 1
in the loop -> and : 1
in the loop -> we : 1
in the loop -> which : 1
in the loop -> in : 1
the loop it -> was : 1
the loop it -> will : 1
loop it was -> possible : 1
it was possible -> to : 2
was possible to -> achieve : 1
was possible to -> have : 1
possible to achieve -> a : 1
to achieve a -> similar : 1
achieve a similar -> effect : 1
a similar effect -> using : 1
similar effect using -> is : 1
effect using is -> remainder : 1
using is remainder -> example : 1
is remainder example -> shows : 1
remainder example shows -> how : 1
example shows how -> to : 1
shows how to -> unpack : 1
shows how to -> implement : 1
shows how to -> achieve : 1
shows how to -> solve : 1
shows how to -> do : 1
how to unpack -> the : 1
to unpack the -> resulting : 1
to unpack the -> all : 1
unpack the resulting -> pair : 1
the resulting pair -> into : 1
resulting pair into -> two : 1
pair into two -> is : 1
into two is -> less : 1
two is less -> powerful : 1
is less powerful -> than : 1
less powerful than -> structured : 1
powerful than structured -> bindings : 1
than structured bindings -> in : 1
structured bindings in -> the : 1
bindings in the -> sense : 1
in the sense -> that : 2
the sense that -> we : 1
the sense that -> it : 1
sense that we -> have : 1
that we have -> to : 4
that we have -> an : 1
that we have -> a : 2
that we have -> constructed : 1
that we have -> iterations : 1
that we have -> and : 1
that we have -> no : 1
that we have -> at : 1
that we have -> items : 1
we have to -> define : 1
we have to -> the : 1
we have to -> get : 2
we have to -> implement : 3
we have to -> do : 2
we have to -> remember : 1
we have to -> revert : 1
we have to -> set : 1
we have to -> enable : 1
we have to -> check : 1
we have to -> write : 3
we have to -> access : 1
we have to -> alter : 1
we have to -> provide : 1
we have to -> to : 1
we have to -> manage : 1
we have to -> look : 1
have to define -> all : 1
to define all -> the : 2
define all the -> variables : 1
define all the -> supported : 1
all the variables -> we : 1
all the variables -> with : 1
the variables we -> want : 1
variables we want -> to : 1
we want to -> bind : 1
we want to -> find : 2
we want to -> specify : 1
we want to -> fill : 2
we want to -> process : 1
we want to -> we : 1
we want to -> present : 1
we want to -> iterate : 2
we want to -> class : 1
we want to -> be : 2
we want to -> capture : 1
we want to -> have : 3
we want to -> write : 1
we want to -> see : 3
we want to -> filter : 1
we want to -> provide : 1
we want to -> to : 1
we want to -> sort : 1
we want to -> simply : 1
we want to -> the : 3
we want to -> share : 1
we want to -> calculate : 1
we want to -> transform : 1
we want to -> construct : 1
we want to -> split : 1
we want to -> all : 1
we want to -> transfer : 1
we want to -> do : 1
we want to -> combine : 1
we want to -> skip : 1
we want to -> pass : 2
we want to -> start : 2
we want to -> count : 1
we want to -> in : 1
we want to -> read : 1
we want to -> print : 3
we want to -> isolate : 1
we want to -> url : 1
we want to -> use : 1
we want to -> get : 2
we want to -> obtain : 1
we want to -> attach : 1
we want to -> take : 1
we want to -> store : 1
we want to -> express : 1
we want to -> call : 1
we want to -> access : 1
we want to -> release : 1
we want to -> give : 1
we want to -> this : 1
we want to -> model : 3
we want to -> flip : 1
we want to -> define : 1
we want to -> sum : 1
we want to -> destructor : 1
we want to -> return : 1
we want to -> drop : 1
we want to -> produce : 1
we want to -> canonicalize : 1
want to bind -> to : 1
to bind to -> on : 1
bind to on -> the : 1
to on the -> other : 1
on the other -> this : 1
on the other -> very : 1
on the other -> finding : 1
on the other -> it : 1
on the other -> perform : 1
on the other -> wait : 1
the other this -> example : 1
the other this -> is : 1
the other this -> would : 1
other this example -> shows : 1
this example shows -> a : 1
example shows a -> strength : 1
shows a strength -> of : 1
a strength of -> structured : 1
strength of structured -> bindings : 1
of structured bindings -> do : 1
structured bindings do -> the : 1
bindings do the -> value : 1
do the value -> acts : 1
the value acts -> as : 1
value acts as -> a : 1
acts as a -> dummy : 1
acts as a -> handy : 1
acts as a -> list : 1
acts as a -> minimal : 1
acts as a -> front : 1
as a dummy -> the : 1
a dummy the -> fraction : 1
dummy the fraction -> part : 1
the fraction part -> of : 1
fraction part of -> the : 1
part of the -> result : 1
part of the -> code : 1
part of the -> strings : 1
part of the -> program : 1
part of the -> input : 2
part of the -> original : 1
part of the -> fourier : 1
part of the -> some : 1
part of the -> which : 1
part of the -> function : 1
part of the -> we : 1
part of the -> library : 1
part of the -> main : 1
part of the -> filesystem : 1
part of the -> the : 1
part of the -> directory : 1
of the result -> is : 1
the result is -> assigned : 1
the result is -> which : 1
the result is -> a : 1
result is assigned -> to : 1
assigned to which -> leads : 1
to which leads -> to : 2
which leads to -> that : 1
which leads to -> the : 1
which leads to -> shifts : 1
which leads to -> decimal : 1
which leads to -> an : 1
leads to that -> value : 1
to that value -> being : 1
that value being -> dropped : 1
value being dropped -> because : 1
being dropped because -> we : 1
dropped because we -> do : 1
because we do -> not : 3
because we do -> the : 1
we do not -> need : 14
we do not -> explicitly : 2
we do not -> parse : 1
we do not -> know : 2
we do not -> implement : 1
we do not -> use : 3
we do not -> sometimes : 1
we do not -> care : 1
we do not -> maintain : 1
we do not -> want : 5
we do not -> really : 1
we do not -> find : 1
we do not -> actually : 1
we do not -> run : 1
we do not -> have : 2
we do not -> get : 1
we do not -> cover : 1
we do not -> call : 3
we do not -> let : 1
do not need -> it : 1
do not need -> to : 16
do not need -> any : 1
do not need -> a : 1
not need it -> in : 1
need it in -> that : 1
need it in -> any : 1
need it in -> order : 1
it in that -> using : 1
in that using -> structured : 1
that using structured -> we : 1
structured we have -> so : 1
we have so -> we : 1
have so we -> have : 1
so we have -> to : 3
so we have -> something : 1
so we have -> both : 1
have to the -> values : 1
to the values -> to : 1
the values to -> doing : 1
values to doing -> so : 1
to doing so -> and : 1
doing so and -> ignoring : 1
so and ignoring -> some : 1
and ignoring some -> of : 1
ignoring some of -> them : 1
some of them -> is : 1
some of them -> in : 2
some of them -> are : 1
of them is -> because : 1
of them is -> it : 1
them is because -> the : 1
is because the -> compiler : 1
is because the -> performance : 1
is because the -> resulting : 1
is because the -> content : 1
is because the -> names : 1
because the compiler -> can : 1
because the compiler -> will : 1
the compiler can -> optimize : 1
the compiler can -> now : 1
the compiler can -> evaluate : 1
the compiler can -> execute : 1
the compiler can -> deduce : 1
compiler can optimize -> the : 1
can optimize the -> unused : 1
optimize the unused -> bindings : 1
the unused bindings -> out : 1
unused bindings out -> in : 1
bindings out in -> the : 1
out in the -> the : 1
in the the -> function : 2
in the the -> compiler : 2
in the the -> iterator : 1
in the the -> third : 1
in the the -> only : 1
in the the -> bracket : 1
in the the -> first : 1
in the the -> leads : 1
in the the -> whole : 2
in the the -> problem : 1
in the the -> simplest : 1
the the function -> could : 1
the the function -> sums : 1
the the function -> object : 1
the the function -> will : 1
the function could -> have : 1
function could have -> been : 1
could have been -> implemented : 2
could have been -> important : 1
could have been -> instantiated : 1
have been implemented -> in : 1
have been implemented -> class : 1
been implemented in -> the : 1
implemented in the -> following : 1
implemented in the -> previous : 1
in the following -> using : 1
in the following -> recipes : 1
in the following -> enter : 1
in the following -> we : 1
in the following -> please : 1
in the following -> steps : 1
the following using -> output : 1
the following using -> binary : 1
following using output -> int : 1
using output int -> int : 1
output int int -> int : 1
int int int -> it : 1
int int int -> vector : 1
int int int -> are : 1
int int int -> const : 1
int int it -> would : 1
int it would -> have : 1
it would have -> looked : 1
it would have -> called : 1
it would have -> worked : 1
would have looked -> like : 1
have looked like -> the : 1
looked like the -> bool : 1
like the bool -> success : 1
the bool success -> is : 1
bool success is -> fraction : 1
success is fraction -> with : 1
of remainder lot -> of : 1
remainder lot of -> people : 1
lot of people -> will : 1
lot of people -> do : 1
of people will -> still : 1
people will still -> prefer : 1
will still prefer -> this : 1
still prefer this -> over : 1
prefer this over -> returning : 1
this over returning -> complex : 1
over returning complex -> structures : 1
returning complex structures -> like : 1
returning complex structures -> via : 1
complex structures like -> and : 1
structures like and -> arguing : 1
like and arguing -> that : 1
and arguing that -> this : 1
arguing that this -> way : 1
that this way -> the : 1
that this way -> we : 1
this way the -> code : 1
this way the -> author : 1
this way the -> deque : 1
this way the -> following : 1
this way the -> variable : 1
way the code -> would : 1
the code would -> due : 1
the code would -> not : 1
code would due -> to : 1
would due to -> avoided : 1
due to avoided -> intermediate : 1
to avoided intermediate -> copies : 1
avoided intermediate copies -> of : 1
intermediate copies of -> those : 1
copies of those -> this : 1
of those this -> is : 1
of those this -> call : 1
those this is -> any : 1
this is any -> longer : 1
is any longer -> for : 1
any longer for -> modern : 1
longer for modern -> which : 1
for modern which -> optimize : 1
modern which optimize -> intermediate : 1
which optimize intermediate -> copies : 1
optimize intermediate copies -> from : 1
intermediate copies from -> the : 1
copies from the -> missing : 1
from the missing -> language : 1
the missing language -> features : 1
missing language features -> in : 1
language features in -> returning : 1
features in returning -> complex : 1
in returning complex -> structures : 1
complex structures via -> return : 1
structures via return -> value : 1
via return value -> was : 1
return value was -> considered : 1
value was considered -> slow : 1
was considered slow -> for : 1
considered slow for -> a : 1
slow for a -> long : 1
for a long -> time : 3
a long time -> because : 1
a long time -> but : 1
a long time -> in : 1
long time because -> the : 1
time because the -> object : 1
because the object -> had : 1
the object had -> to : 1
object had to -> be : 1
had to be -> initialized : 1
to be initialized -> in : 1
to be initialized -> before : 1
to be initialized -> after : 1
be initialized in -> the : 1
initialized in the -> returning : 1
in the returning -> function : 1
the returning function -> and : 1
returning function and -> then : 1
function and then -> copied : 1
and then copied -> into : 1
then copied into -> the : 1
copied into the -> variable : 1
into the variable -> the : 1
the variable the -> return : 1
the variable the -> gets : 1
variable the return -> value : 1
the return value -> on : 1
the return value -> of : 5
the return value -> being : 1
the return value -> is : 1
return value on -> the : 1
value on the -> caller : 1
on the caller -> modern : 1
the caller modern -> compilers : 1
caller modern compilers -> support : 1
modern compilers support -> value : 1
compilers support value -> enables : 1
support value enables -> for : 1
value enables for -> omitting : 1
enables for omitting -> intermediate : 1
for omitting intermediate -> variable : 1
omitting intermediate variable -> scopes : 1
intermediate variable scopes -> to : 1
and switch is -> good : 1
switch is good -> style : 1
is good style -> to : 2
good style to -> limit : 1
good style to -> always : 1
style to limit -> the : 1
to limit the -> scope : 1
limit the scope -> of : 1
the scope of -> variables : 1
the scope of -> a : 1
the scope of -> this : 2
the scope of -> the : 1
scope of variables -> as : 1
of variables as -> much : 1
variables as much -> as : 1
as much as -> one : 1
as much as -> possible : 1
much as one -> first : 1
as one first -> needs : 1
one first needs -> to : 1
first needs to -> obtain : 1
needs to obtain -> some : 1
to obtain some -> and : 1
obtain some and -> only : 1
some and only -> if : 1
and only if -> it : 1
only if it -> fits : 1
if it fits -> a : 1
it fits a -> certain : 1
fits a certain -> it : 1
a certain it -> can : 1
certain it can -> be : 1
it can be -> processed : 1
it can be -> implemented : 1
it can be -> iterated : 1
it can be -> read : 1
it can be -> used : 3
it can be -> done : 1
it can be -> given : 1
it can be -> put : 1
it can be -> exploited : 1
it can be -> simply : 1
it can be -> of : 1
it can be -> locked : 1
it can be -> called : 1
can be processed -> this : 1
be processed this -> comes : 1
processed this comes -> with : 1
this comes with -> with : 1
comes with with -> to : 1
with with to -> do : 1
with to do -> this : 2
with to do -> are : 1
with to do -> a : 1
to do this -> we : 54
to do this -> implement : 1
to do this -> all : 1
to do this -> write : 1
to do this -> by : 1
to do this -> are : 1
to do this -> with : 2
to do this -> a : 1
to do this -> using : 1
to do this -> as : 1
do this we -> use : 2
do this we -> are : 12
do this we -> an : 2
do this we -> the : 1
do this we -> will : 19
do this we -> application : 1
do this we -> multiple : 1
do this we -> a : 9
do this we -> all : 1
do this we -> up : 1
do this we -> concentrate : 1
do this we -> define : 1
do this we -> functions : 1
do this we -> take : 1
do this we -> around : 1
this we use -> the : 1
this we use -> some : 1
we use the -> initializer : 1
we use the -> type : 1
we use the -> comma : 1
we use the -> function : 1
we use the -> capability : 1
we use the -> begin : 1
we use the -> as : 1
we use the -> notation : 1
we use the -> using : 7
we use the -> operator : 1
we use the -> namespace : 3
we use the -> on : 1
we use the -> other : 1
we use the -> character : 1
we use the -> same : 3
we use the -> the : 1
we use the -> thread : 1
we use the -> functions : 2
we use the -> cout : 1
we use the -> filesystem : 1
we use the -> and : 1
use the initializer -> syntax : 1
the initializer syntax -> the : 1
initializer syntax the -> supported : 1
syntax the supported -> contexts : 1
the supported contexts -> in : 1
supported contexts in -> order : 1
contexts in order -> to : 1
order to see -> tidy : 1
order to see -> how : 2
order to see -> what : 3
order to see -> all : 1
order to see -> whether : 1
order to see -> its : 1
order to see -> the : 1
to see tidy -> up : 1
see tidy up -> our : 1
tidy up our -> we : 1
tidy up our -> stream : 1
up our we -> want : 1
our we want -> to : 1
our we want -> no : 1
our we want -> a : 1
want to find -> a : 1
want to find -> the : 1
to find a -> character : 1
to find a -> which : 1
to find a -> comfortable : 1
find a character -> in : 1
find a character -> position : 1
a character in -> a : 1
character in a -> character : 1
in a character -> map : 1
a character map -> using : 1
character map using -> the : 1
map using the -> method : 1
using the method -> of : 1
using the method -> new : 1
the method of -> if : 1
method of if -> itr : 1
of if itr -> itr : 1
if itr itr -> is : 1
itr itr is -> do : 1
itr is do -> something : 1
is do something -> with : 1
do something with -> else : 1
do something with -> the : 1
do something with -> which : 1
do something with -> c : 2
something with else -> itr : 1
with else itr -> is : 1
else itr is -> the : 1
itr is the -> itr : 1
is the itr -> is : 1
the itr is -> not : 1
itr is not -> available : 1
is not available -> here : 1
not available here -> at : 1
available here at -> all : 1
here at all -> this : 1
at all this -> is : 1
all this is -> how : 1
this is how -> it : 3
this is how -> you : 1
this is how -> echoing : 1
this is how -> are : 1
is how it -> would : 1
is how it -> looks : 1
is how it -> like : 1
is how it -> can : 1
how it would -> look : 1
it would look -> to : 1
would look to -> get : 1
look to get -> a : 1
to get a -> character : 2
to get a -> reference : 2
to get a -> value : 1
to get a -> frequency : 1
to get a -> feeling : 8
to get a -> binary : 1
to get a -> seed : 1
to get a -> subtrie : 1
to get a -> file : 1
to get a -> specific : 1
to get a -> minimal : 1
to get a -> bit : 1
to get a -> terminal : 1
to get a -> lot : 1
get a character -> from : 1
get a character -> value : 1
a character from -> the : 1
character from the -> input : 1
from the input -> at : 1
from the input -> stream : 2
from the input -> string : 1
from the input -> to : 1
from the input -> and : 2
from the input -> template : 1
from the input -> the : 1
from the input -> range : 1
from the input -> if : 1
the input at -> the : 1
input at the -> same : 1
at the same -> check : 1
at the same -> time : 6
at the same -> enhanced : 1
at the same -> it : 2
at the same -> positions : 1
at the same -> class : 1
at the same -> this : 2
at the same -> const : 1
at the same -> a : 1
at the same -> corresponding : 1
at the same -> result : 1
at the same -> map : 1
at the same -> we : 4
at the same -> using : 1
at the same -> if : 2
at the same -> while : 1
at the same -> from : 1
at the same -> the : 1
at the same -> so : 1
at the same -> and : 1
at the same -> then : 1
at the same -> different : 1
at the same -> in : 1
the same check -> the : 1
same check the -> value : 1
check the value -> in : 1
the value in -> a : 1
value in a -> statement : 1
value in a -> way : 1
in a statement -> in : 1
a statement in -> order : 1
statement in order -> to : 1
order to control -> a : 1
to control a -> computer : 1
control a computer -> switch : 1
a computer switch -> c : 1
computer switch c -> case : 1
switch c case -> case : 1
c case case -> case : 1
case case case -> case : 3
case case case -> c : 1
case case c -> it : 1
case c it -> and : 1
c it and -> statements : 1
it and statements -> with : 1
and statements with -> initializers : 1
statements with initializers -> are : 1
with initializers are -> basically : 1
with initializers are -> especially : 1
initializers are basically -> just : 1
are basically just -> syntax : 1
basically just syntax -> the : 1
just syntax the -> following : 1
syntax the following -> two : 1
the following two -> samples : 1
the following two -> output : 1
following two samples -> are : 1
two samples are -> auto : 1
samples are auto -> var : 1
are auto var -> if : 1
auto var if -> branch : 1
var if branch -> var : 1
if branch var -> is : 1
branch var is -> accessible : 4
var is accessible -> else : 2
var is accessible -> var : 2
var is accessible -> any : 1
is accessible else -> branch : 2
accessible else branch -> var : 2
else branch var -> is : 2
is accessible var -> is : 2
accessible var is -> still : 1
accessible var is -> accessible : 1
var is still -> accessible : 2
is still accessible -> var : 2
is still accessible -> in : 1
still accessible var -> branch : 1
still accessible var -> case : 1
accessible var branch -> var : 1
var branch var -> is : 1
is accessible any -> same : 1
accessible any same -> applies : 1
any same applies -> to : 1
same applies to -> auto : 1
same applies to -> the : 2
same applies to -> user : 1
same applies to -> but : 1
same applies to -> input : 1
same applies to -> we : 1
applies to auto -> var : 1
to auto var -> switch : 1
auto var switch -> case : 1
var switch case -> case : 1
switch case case -> var : 1
switch case case -> cout : 1
case case var -> is : 2
case var is -> still : 1
case var is -> not : 1
accessible var case -> case : 1
var case case -> var : 1
var is not -> accessible : 1
is not accessible -> any : 2
not accessible any -> feature : 1
not accessible any -> is : 1
accessible any feature -> is : 1
any feature is -> very : 1
feature is very -> useful : 1
is very useful -> to : 1
is very useful -> in : 1
is very useful -> when : 1
very useful to -> keep : 1
useful to keep -> the : 1
to keep the -> scope : 1
to keep the -> namespace : 1
to keep the -> example : 1
to keep the -> lock : 1
to keep the -> queue : 1
to keep the -> iterator : 1
to keep the -> recipe : 1
keep the scope -> of : 1
scope of a -> variable : 1
of a variable -> as : 1
a variable as -> short : 1
variable as short -> as : 1
as short as -> before : 1
short as before -> this : 1
as before this -> was : 1
before this was -> only : 1
before this was -> not : 1
this was only -> possible : 2
only possible using -> extra : 1
only possible using -> this : 1
possible using extra -> braces : 1
using extra braces -> around : 1
extra braces around -> the : 1
braces around the -> as : 1
around the as -> the : 1
the as the -> examples : 1
the as the -> vector : 1
the as the -> compiler : 1
as the examples -> the : 1
the examples the -> short : 1
examples the short -> lifetimes : 1
the short lifetimes -> reduce : 1
short lifetimes reduce -> the : 1
lifetimes reduce the -> number : 1
reduce the number -> of : 3
of variables in -> the : 1
of variables in -> order : 1
variables in the -> which : 1
variables in the -> formula : 1
in the which -> keeps : 1
in the which -> is : 3
in the which -> saves : 1
in the which -> always : 1
the which keeps -> our : 1
which keeps our -> code : 1
keeps our code -> tidy : 1
our code tidy -> and : 1
code tidy and -> makes : 1
tidy and makes -> it : 1
and makes it -> easier : 1
makes it easier -> to : 2
it easier to -> interesting : 1
it easier to -> define : 1
easier to interesting -> use : 1
to interesting use -> case : 1
interesting use case -> is : 2
use case is -> the : 2
use case is -> expressions : 1
case is the -> limited : 1
case is the -> scope : 1
is the limited -> scope : 1
the limited scope -> consider : 1
limited scope consider -> the : 1
scope consider the -> following : 1
scope consider the -> the : 1
consider the following -> lg : 1
consider the following -> example : 1
consider the following -> code : 1
the following lg -> do : 1
following lg do -> something : 1
lg do something -> an : 1
do something an -> is : 1
something an is -> this : 1
an is this -> is : 1
is this is -> a : 1
is this is -> why : 1
this is a -> mutex : 1
this is a -> special : 1
this is a -> very : 2
this is a -> solved : 1
this is a -> real : 1
this is a -> bit : 1
this is a -> loop : 1
this is a -> problem : 1
this is a -> string : 1
this is a -> common : 1
this is a -> static : 2
this is a -> list : 1
this is a -> good : 1
this is a -> we : 1
is a mutex -> argument : 1
a mutex argument -> as : 1
mutex argument as -> a : 1
argument as a -> constructor : 1
as a constructor -> it : 1
a constructor it -> the : 1
constructor it the -> mutex : 1
it the mutex -> in : 1
the mutex in -> its : 1
the mutex in -> exclusive : 4
the mutex in -> we : 1
the mutex in -> shared : 1
mutex in its -> and : 1
in its and -> when : 1
in its and -> modes : 1
its and when -> it : 1
and when it -> runs : 1
and when it -> is : 1
and when it -> was : 1
when it runs -> out : 1
it runs out -> of : 1
runs out of -> it : 1
runs out of -> the : 1
runs out of -> paths : 1
out of it -> again : 2
out of it -> what : 1
out of it -> this : 1
out of it -> we : 1
out of it -> and : 1
out of it -> might : 1
out of it -> because : 1
of it again -> in : 1
of it again -> using : 1
it again in -> its : 1
it again in -> hope : 1
it again in -> the : 1
it again in -> order : 1
again in its -> this : 1
in its this -> it : 1
its this it -> is : 1
this it is -> impossible : 1
this it is -> important : 1
this it is -> one : 1
this it is -> identical : 1
this it is -> easy : 2
this it is -> possible : 3
this it is -> used : 1
this it is -> really : 1
this it is -> printed : 1
this it is -> extremely : 1
this it is -> interesting : 1
this it is -> crucial : 1
this it is -> not : 1
this it is -> created : 1
it is impossible -> to : 1
is impossible to -> unlock : 1
impossible to unlock -> the : 1
to unlock the -> before : 1
unlock the before -> a : 1
the before a -> pair : 1
before a pair -> of : 1
a pair of -> extra : 1
a pair of -> which : 1
a pair of -> values : 1
a pair of -> and : 2
a pair of -> the : 1
a pair of -> lower : 1
a pair of -> iterators : 6
a pair of -> input : 2
a pair of -> we : 1
a pair of -> these : 1
pair of extra -> braces : 1
of extra braces -> was : 1
extra braces was -> needed : 1
braces was needed -> in : 1
was needed in -> order : 1
needed in order -> to : 4
order to determine -> the : 1
order to determine -> which : 1
to determine the -> scope : 1
determine the scope -> where : 1
the scope where -> it : 1
scope where it -> unlocks : 1
where it unlocks -> another : 1
it unlocks another -> interesting : 1
unlocks another interesting -> use : 1
another interesting use -> case : 1
is the scope -> consider : 1
the scope consider -> the : 1
consider the the -> shared : 1
the the shared -> object : 1
the the shared -> pointers : 1
the shared object -> does : 1
shared object does -> still : 1
object does still -> exist : 1
does still exist -> else : 1
still exist else -> var : 1
exist else var -> is : 1
else var is -> but : 1
var is but -> a : 1
is but a -> null : 1
but a null -> pointer : 1
a null pointer -> is : 1
null pointer is -> not : 1
pointer is not -> accessible : 1
accessible any is -> another : 1
any is another -> example : 1
is another example -> where : 1
another example where -> we : 1
example where we -> would : 1
example where we -> collect : 1
where we would -> have : 1
we would have -> a : 1
we would have -> to : 5
we would have -> two : 1
we would have -> got : 1
would have a -> useless : 1
have a useless -> variable : 1
a useless variable -> leaking : 1
useless variable leaking -> into : 1
variable leaking into -> the : 1
leaking into the -> current : 1
into the current -> although : 1
the current although -> it : 1
current although it -> has : 1
although it has -> a : 2
it has a -> potentially : 1
it has a -> size : 1
it has a -> and : 1
it has a -> usability : 1
it has a -> weird : 1
it has a -> slightly : 1
it has a -> fixed : 1
it has a -> instances : 1
it has a -> which : 1
it has a -> very : 1
has a potentially -> useless : 1
a potentially useless -> state : 1
potentially useless state -> outside : 1
useless state outside -> the : 1
state outside the -> conditional : 1
outside the conditional -> block : 1
the conditional block -> or : 1
conditional block or -> noisy : 1
block or noisy -> extra : 1
or noisy extra -> with : 1
noisy extra with -> initializers : 1
extra with initializers -> are : 1
initializers are especially -> useful : 1
are especially useful -> when : 1
especially useful when -> using : 1
useful when using -> apis : 1
when using apis -> with : 1
using apis with -> output : 1
apis with output -> code : 1
with output code -> of : 1
output code of -> process : 1
code of process -> no : 1
of process no -> useless : 1
process no useless -> variable : 1
no useless variable -> outside : 1
useless variable outside -> the : 1
variable outside the -> is : 1
outside the is -> a : 1
the is a -> windows : 1
the is a -> parameter : 1
is a windows -> kernel : 1
a windows kernel -> api : 1
windows kernel api -> it : 1
kernel api it -> returns : 1
api it returns -> the : 1
it returns the -> exit : 1
it returns the -> input : 1
returns the exit -> code : 1
the exit code -> for : 1
exit code for -> a : 1
code for a -> given : 2
for a given -> process : 1
for a given -> word : 1
for a given -> we : 1
for a given -> input : 1
a given process -> handle : 1
given process handle -> but : 1
process handle but -> only : 1
handle but only -> if : 1
but only if -> that : 1
only if that -> handle : 1
if that handle -> is : 1
that handle is -> after : 1
handle is after -> leaving : 1
is after leaving -> this : 1
after leaving this -> conditional : 1
leaving this conditional -> the : 1
this conditional the -> variable : 1
conditional the variable -> is : 1
the variable is -> so : 1
the variable is -> initialized : 1
the variable is -> just : 1
the variable is -> another : 1
the variable is -> the : 1
variable is so -> we : 1
is so we -> need : 1
is so we -> can : 1
so we need -> it : 1
so we need -> the : 2
so we need -> to : 3
so we need -> some : 1
so we need -> a : 1
we need it -> in : 1
it in any -> scope : 1
it in any -> format : 1
in any scope -> any : 1
any scope any -> able : 1
scope any able -> to : 1
any able to -> initialize : 1
able to initialize -> variables : 1
to initialize variables -> within : 1
initialize variables within -> blocks : 1
variables within blocks -> is : 1
within blocks is -> obviously : 1
blocks is obviously -> very : 1
is obviously very -> useful : 1
obviously very useful -> in : 1
very useful in -> a : 1
very useful in -> our : 1
useful in a -> lot : 1
in a lot -> of : 5
lot of situations -> when : 1
of situations when -> dealing : 1
situations when dealing -> with : 1
when dealing with -> legacy : 1
when dealing with -> code : 1
dealing with legacy -> apis : 1
with legacy apis -> output : 1
legacy apis output -> your : 1
apis output your -> scopes : 1
output your scopes -> tight : 1
your scopes tight -> using : 1
scopes tight using -> and : 1
tight using and -> statement : 1
using and statement -> this : 1
and statement this -> makes : 1
statement this makes -> your : 1
this makes your -> code : 2
makes your code -> more : 1
makes your code -> very : 1
makes your code -> easy : 1
your code more -> easier : 1
code more easier -> to : 1
more easier to -> and : 1
easier to and -> in : 1
to and in -> code : 1
to and in -> case : 1
to and in -> such : 1
to and in -> back : 1
and in code -> refactoring : 1
in code refactoring -> it : 1
code refactoring it -> will : 1
refactoring it will -> be : 1
it will be -> easier : 1
it will be -> allocated : 1
it will be -> popped : 1
it will be -> grown : 1
it will be -> hardcoded : 1
it will be -> if : 1
it will be -> fed : 1
it will be -> declaring : 1
it will be -> sat : 1
it will be -> interesting : 1
it will be -> easy : 1
will be easier -> to : 1
be easier to -> move : 1
easier to move -> from : 1
to move from -> the : 1
move from the -> new : 1
bracket initializer came -> with : 1
initializer came with -> the : 1
came with the -> new : 1
the new brace -> initializer : 1
new brace initializer -> syntax : 1
brace initializer syntax -> its : 1
brace initializer syntax -> type : 2
initializer syntax its -> purpose : 1
syntax its purpose -> was : 1
its purpose was -> to : 1
purpose was to -> allow : 1
was to allow -> for : 1
to allow for -> but : 1
allow for but -> also : 1
for but also -> for : 1
but also for -> usual : 1
also for usual -> constructor : 1
for usual constructor -> it : 1
usual constructor it -> was : 1
constructor it was -> too : 1
it was too -> easy : 1
was too easy -> to : 1
too easy to -> express : 1
too easy to -> fail : 1
easy to express -> the : 1
to express the -> wrong : 1
express the wrong -> thing : 1
the wrong thing -> when : 1
wrong thing when -> combining : 1
thing when combining -> this : 1
when combining this -> syntax : 1
combining this syntax -> with : 1
this syntax with -> the : 1
syntax with the -> variable : 1
with the variable -> comes : 1
with the variable -> producer : 1
the variable comes -> with : 1
variable comes with -> an : 1
comes with an -> enhanced : 1
with an enhanced -> set : 1
an enhanced set -> of : 1
enhanced set of -> initializer : 1
set of initializer -> in : 1
of initializer in -> this : 1
initializer in this -> we : 1
in this we -> will : 11
in this we -> used : 3
in this we -> parse : 1
in this we -> construct : 1
in this we -> store : 1
in this we -> play : 1
in this we -> are : 6
in this we -> concentrate : 1
in this we -> calculate : 1
in this we -> how : 1
in this we -> first : 2
in this we -> were : 1
in this we -> already : 1
in this we -> chose : 1
in this we -> cast : 1
in this we -> solely : 1
in this we -> constructed : 1
in this we -> make : 1
in this we -> it : 1
we will clarify -> how : 1
will clarify how -> to : 1
clarify how to -> correctly : 1
how to correctly -> initialize : 1
to correctly initialize -> variables : 1
correctly initialize variables -> with : 1
initialize variables with -> which : 1
variables with which -> syntax : 1
with which syntax -> in : 1
which syntax in -> to : 1
syntax in to -> do : 1
in to do -> are : 1
to do are -> initialized : 1
to do are -> going : 19
do are initialized -> in : 1
are initialized in -> one : 1
initialized in one -> using : 1
in one using -> the : 1
one using the -> initializer : 1
using the initializer -> there : 1
the initializer there -> are : 1
initializer there are -> two : 1
there are two -> different : 1
there are two -> lazy : 1
there are two -> consecutive : 1
there are two -> policy : 1
are two different -> the : 1
two different the -> brace : 1
different the brace -> initializer : 1
the brace initializer -> syntax : 2
initializer syntax type -> three : 1
initializer syntax type -> auto : 1
syntax type three -> identical : 1
type three identical -> ways : 1
three identical ways -> to : 1
identical ways to -> initialize : 1
ways to initialize -> an : 1
to initialize an -> int : 1
initialize an int -> int : 1
an int int -> int : 1
int int vector -> with : 1
int vector with -> three : 1
vector with three -> same : 1
with three same -> here : 1
three same here -> vector : 1
same here vector -> with : 1
here vector with -> each : 1
vector with each -> have : 1
with each have -> value : 1
each have value -> the : 1
have value the -> brace : 1
value the brace -> initializer : 1
syntax type auto -> v : 1
type auto v -> v : 1
auto v v -> is : 1
v v is -> int : 1
v is int -> auto : 1
is int auto -> w : 1
int auto w -> only : 1
auto w only -> single : 1
w only single -> elements : 1
only single elements -> in : 1
single elements in -> direct : 1
elements in direct -> auto : 1
in direct auto -> initialization : 1
direct auto initialization -> is : 1
auto initialization is -> auto : 1
initialization is auto -> x : 1
is auto x -> x : 1
auto x x -> is : 1
x x is -> auto : 1
x is auto -> y : 1
is auto y -> y : 1
auto y y -> is : 1
y y is -> auto : 1
y is auto -> z : 1
is auto z -> cannot : 1
auto z cannot -> deduce : 1
z cannot deduce -> element : 1
cannot deduce element -> it : 1
deduce element it -> type : 1
element it type -> not : 1
it type not -> much : 1
type not much -> to : 1
not much to -> be : 1
much to be -> surprised : 1
to be surprised -> about : 1
be surprised about -> in : 1
surprised about in -> the : 1
about in the -> brace : 1
in the brace -> at : 1
the brace at -> when : 1
brace at when -> initializing : 1
at when initializing -> regular : 1
when initializing regular -> when : 1
initializing regular when -> initializing : 1
regular when initializing -> containers : 1
when initializing containers -> such : 1
initializing containers such -> and : 1
containers such and -> so : 2
such and so -> a : 1
such and so -> in : 1
such and so -> that : 1
such and so -> on : 1
such and so -> such : 1
and so a -> brace : 1
so a brace -> initializer : 1
a brace initializer -> will : 1
brace initializer will -> match : 1
initializer will match -> the : 1
will match the -> constructor : 1
match the constructor -> of : 1
match the constructor -> can : 1
the constructor of -> that : 1
the constructor of -> the : 3
the constructor of -> will : 1
the constructor of -> a : 3
the constructor of -> enough : 1
the constructor of -> this : 1
the constructor of -> any : 1
the constructor of -> does : 1
constructor of that -> container : 1
constructor of that -> simply : 1
of that container -> it : 1
that container it -> does : 1
container it does -> this : 1
it does this -> in : 2
it does this -> by : 1
does this in -> a : 2
this in a -> which : 1
this in a -> we : 2
this in a -> relatively : 1
this in a -> generic : 1
this in a -> very : 1
in a which -> means : 1
in a which -> associates : 1
in a which -> all : 1
in a which -> we : 1
a which means -> that : 1
which means that -> it : 1
which means that -> the : 1
which means that -> has : 1
which means that -> we : 1
means that it -> is : 3
means that it -> will : 1
means that it -> does : 1
that it is -> not : 2
that it is -> it : 1
that it is -> an : 1
that it is -> now : 1
that it is -> at : 1
that it is -> easy : 2
that it is -> than : 1
that it is -> possible : 2
that it is -> obvious : 1
that it is -> locked : 1
is not possible -> to : 5
is not possible -> and : 1
not possible to -> match : 1
not possible to -> iterate : 1
not possible to -> let : 1
not possible to -> get : 1
not possible to -> obtain : 1
possible to match -> constructors : 1
possible to match -> end : 1
to match constructors -> constructors : 1
match constructors constructors -> are : 1
constructors constructors are -> usual : 1
constructors are usual -> constructors : 1
are usual constructors -> in : 1
usual constructors in -> contrast : 1
constructors in contrast -> to : 1
in contrast to -> that : 1
in contrast to -> classes : 1
contrast to that -> accept : 1
to that accept -> an : 1
that accept an -> initializer : 1
accept an initializer -> for : 1
an initializer for -> provides : 1
initializer for provides -> a : 1
for provides a -> specific : 1
provides a specific -> which : 1
provides a specific -> algorithm : 1
a specific which -> fills : 1
specific which fills -> arbitrarily : 1
which fills arbitrarily -> many : 1
fills arbitrarily many -> items : 1
arbitrarily many items -> with : 1
many items with -> the : 1
items with the -> same : 2
items with the -> highest : 1
items with the -> value : 1
the same v -> when : 1
same v when -> writing : 1
v when writing -> v : 1
when writing v -> the : 1
writing v the -> constructor : 1
v the constructor -> is : 1
the constructor is -> which : 1
the constructor is -> for : 1
the constructor is -> not : 1
constructor is which -> will : 1
is which will -> initialize : 1
is which will -> also : 1
which will initialize -> the : 1
will initialize the -> vector : 1
initialize the vector -> with : 1
the vector with -> and : 1
the vector with -> random : 1
vector with and -> this : 1
with and this -> is : 1
and this is -> a : 2
and this is -> not : 2
and this is -> how : 1
and this is -> what : 1
and this is -> the : 1
is a special -> pitfall : 1
a special pitfall -> one : 1
special pitfall one -> should : 1
pitfall one should -> know : 1
one should know -> nice : 1
should know nice -> detail : 1
know nice detail -> about : 1
nice detail about -> the : 1
detail about the -> operator : 1
about the operator -> compared : 1
the operator compared -> to : 1
operator compared to -> constructor : 1
compared to constructor -> calling : 1
to constructor calling -> using : 1
constructor calling using -> normal : 1
calling using normal -> parentheses : 1
using normal parentheses -> they : 1
normal parentheses they -> do : 1
parentheses they do -> no : 1
they do no -> implicit : 1
do no implicit -> type : 1
no implicit type -> x : 1
implicit type x -> x : 1
type x x -> will : 1
x x will -> initialize : 1
x will initialize -> to : 1
will initialize to -> value : 1
initialize to value -> silently : 1
to value silently -> rounding : 1
value silently rounding -> down : 1
silently rounding down -> the : 1
rounding down the -> floating : 1
down the floating -> point : 1
the floating point -> value : 1
floating point value -> and : 1
point value and -> converting : 1
value and converting -> it : 1
and converting it -> to : 1
converting it to -> x : 1
it to x -> in : 1
to x in -> will : 1
x in will -> not : 1
in will not -> compile : 1
will not compile -> because : 1
not compile because -> it : 1
compile because it -> wants : 1
because it wants -> to : 1
it wants to -> match : 1
wants to match -> the : 1
to match the -> constructor : 1
to match the -> closest : 1
to match the -> part : 1
the constructor can -> controversially : 1
constructor can controversially -> argue : 1
can controversially argue -> about : 1
controversially argue about -> which : 1
argue about which -> initialization : 1
about which initialization -> style : 1
which initialization style -> is : 1
initialization style is -> the : 1
style is the -> best : 1
style is the -> most : 1
is the best -> of : 1
is the best -> way : 1
the best of -> the : 1
best of the -> bracket : 1
of the bracket -> initialization : 1
the bracket initialization -> style : 1
bracket initialization style -> say : 1
initialization style say -> that : 1
style say that -> using : 1
say that using -> brackets : 1
that using brackets -> makes : 1
using brackets makes -> it : 1
brackets makes it -> very : 1
makes it very -> that : 1
makes it very -> simple : 1
makes it very -> easy : 1
makes it very -> comfortable : 1
it very that -> the : 1
very that the -> variable : 1
that the variable -> is : 1
variable is initialized -> with : 1
is initialized with -> a : 1
initialized with a -> constructor : 1
with a constructor -> and : 1
with a constructor -> parameter : 1
a constructor and -> that : 1
a constructor and -> a : 1
constructor and that -> this : 1
and that this -> code : 1
and that this -> directory : 1
that this code -> line : 1
that this code -> blocks : 1
this code line -> is : 1
code line is -> not : 1
line is not -> using : 1
line is not -> equivalent : 1
is not using -> brackets : 1
not using brackets -> will : 1
using brackets will -> select : 1
brackets will select -> the : 1
will select the -> only : 1
select the only -> matching : 1
the only matching -> while : 1
only matching while -> initializer : 1
matching while initializer -> lines : 1
while initializer lines -> using : 1
initializer lines using -> parentheses : 1
lines using parentheses -> try : 1
using parentheses try -> to : 1
parentheses try to -> match : 1
try to match -> the : 1
match the closest -> constructor : 1
the closest constructor -> and : 1
closest constructor and -> even : 1
constructor and even -> do : 1
and even do -> type : 1
even do type -> conversion : 1
do type conversion -> in : 1
type conversion in -> order : 1
conversion in order -> to : 1
order to additional -> rule : 1
to additional rule -> introduced : 1
additional rule introduced -> in : 1
rule introduced in -> affects : 1
introduced in affects -> the : 1
in affects the -> initialization : 1
affects the initialization -> with : 1
the initialization with -> type : 1
initialization with type -> would : 1
with type would -> correctly : 1
type would correctly -> make : 1
would correctly make -> the : 1
correctly make the -> type : 1
make the type -> of : 1
the type of -> the : 9
the type of -> items : 1
the type of -> all : 1
the type of -> pointer : 1
the type of -> random : 1
type of the -> x : 1
type of the -> vector : 1
type of the -> map : 2
type of the -> input : 1
type of the -> as : 1
type of the -> maintaining : 1
type of the -> unique : 1
type of the -> internal : 1
type of the -> numbers : 1
type of the -> parallelized : 1
of the x -> with : 1
the x with -> only : 1
x with only -> one : 1
with only one -> this : 1
only one this -> is : 1
only one this -> because : 1
one this is -> seldom : 1
this is seldom -> what : 1
is seldom what -> we : 1
seldom what we -> would : 1
what we would -> would : 1
we would would -> make : 1
would would make -> the : 1
would make the -> same : 1
make the same -> variable : 1
the same variable -> an : 1
same variable an -> of : 1
variable an of -> deduces : 1
an of deduces -> to : 1
of deduces to -> be : 1
deduces to be -> of : 1
to be of -> the : 3
to be of -> class : 1
be of the -> same : 4
be of the -> it : 1
be of the -> member : 1
be of the -> following : 1
of the same -> type : 4
of the same -> the : 1
of the same -> symbol : 1
of the same -> like : 1
of the same -> it : 1
of the same -> without : 1
of the same -> section : 1
of the same -> which : 2
of the same -> and : 1
of the same -> some : 1
of the same -> they : 1
of the same -> our : 1
of the same -> size : 1
the same type -> as : 3
the same type -> alias : 1
the same type -> the : 1
the same type -> to : 1
same type as -> is : 1
same type as -> all : 1
same type as -> the : 1
type as is -> invalid : 1
as is invalid -> and : 1
is invalid and -> does : 1
invalid and does -> not : 1
and does not -> deduces : 1
and does not -> look : 1
does not deduces -> to : 1
not deduces to -> an : 1
deduces to an -> with : 1
to an with -> being : 1
to an with -> custom : 1
an with being -> of : 1
with being of -> the : 1
being of the -> same : 1
type as all -> the : 1
as all the -> elements : 1
all the elements -> in : 2
all the elements -> within : 1
the elements in -> the : 1
the elements in -> a : 1
elements in the -> has : 1
elements in the -> first : 1
in the has -> made : 1
in the has -> a : 1
the has made -> it : 1
has made it -> harder : 1
made it harder -> to : 1
it harder to -> accidentally : 1
harder to accidentally -> define : 1
to accidentally define -> an : 1
accidentally define an -> initializer : 1
define an initializer -> this : 1
an initializer this -> out : 1
initializer this out -> with : 1
this out with -> different : 1
out with different -> compilers : 1
with different compilers -> in : 1
different compilers in -> mode : 1
compilers in mode -> will : 1
in mode will -> show : 1
mode will show -> that : 1
will show that -> some : 1
show that some -> compilers : 1
that some compilers -> actually : 1
some compilers actually -> deduce : 1
compilers actually deduce -> x : 1
actually deduce x -> to : 1
deduce x to -> an : 1
x to an -> while : 1
to an while -> others : 1
an while others -> deduce : 1
while others deduce -> it : 1
others deduce it -> to : 1
deduce it to -> writing : 1
it to writing -> code : 1
to writing code -> like : 1
writing code like -> this : 1
code like this -> can : 1
like this can -> lead : 1
this can lead -> to : 1
can lead to -> problems : 1
can lead to -> performance : 1
can lead to -> so : 1
can lead to -> very : 1
can lead to -> a : 1
lead to problems -> regarding : 1
to problems regarding -> the : 1
problems regarding the -> constructor : 1
regarding the constructor -> automatically : 1
template class lot -> of : 1
class lot of -> classes : 1
lot of classes -> in : 1
of classes in -> are : 1
classes in are -> usually : 1
in are usually -> specialized : 1
are usually specialized -> on : 1
usually specialized on -> which : 1
specialized on which -> could : 1
on which could -> be : 1
which could be -> easily : 1
which could be -> or : 1
could be easily -> deduced : 1
be easily deduced -> from : 1
easily deduced from -> the : 1
deduced from the -> variable : 1
deduced from the -> value : 1
from the variable -> types : 1
the variable types -> the : 1
variable types the -> user : 1
types the user -> puts : 1
the user puts -> in : 1
user puts in -> their : 1
puts in their -> constructor : 1
in their constructor -> before : 1
their constructor before -> this : 1
constructor before this -> was : 1
this was not -> a : 1
was not a -> standardized : 1
not a standardized -> lets : 1
a standardized lets -> the : 1
standardized lets the -> compiler : 1
lets the compiler -> deduce : 1
the compiler deduce -> template : 1
compiler deduce template -> types : 1
deduce template types -> from : 1
template types from -> constructor : 1
types from constructor -> to : 1
from constructor to -> do : 1
constructor to do -> very : 1
to do very -> handy : 1
to do very -> specific : 1
do very handy -> use : 1
very handy use -> case : 1
handy use case -> for : 1
use case for -> this : 1
use case for -> tuples : 1
case for this -> is : 1
for this is -> and : 1
for this is -> pretty : 1
for this is -> what : 1
for this is -> iterating : 1
for this is -> they : 1
for this is -> for : 1
for this is -> often : 1
for this is -> that : 1
this is and -> these : 1
is and these -> can : 1
and these can -> be : 1
these can be -> specialized : 1
can be specialized -> and : 1
can be specialized -> for : 1
can be specialized -> on : 1
be specialized and -> specialized : 1
specialized and specialized -> in : 1
and specialized in -> one : 1
specialized in one -> const : 1
in one const -> const : 1
one const const -> it : 1
const const it -> define : 1
const it define -> class : 1
it define class -> template : 1
define class template -> type : 1
class template type -> deduction : 1
template type deduction -> would : 1
type deduction would -> be : 1
deduction would be -> of : 1
would be of -> typename : 1
would be of -> great : 1
be of typename -> typename : 1
of typename typename -> class : 1
typename typename class -> explicit : 1
typename class explicit -> this : 1
class explicit this -> is : 1
explicit this is -> just : 1
this is just -> another : 1
this is just -> quite : 1
this is just -> the : 1
this is just -> what : 1
this is just -> or : 1
this is just -> about : 1
is just another -> template : 1
just another template -> we : 1
another template we -> previously : 1
template we previously -> had : 1
we previously had -> to : 1
previously had to -> write : 1
had to write -> the : 1
to write the -> following : 1
to write the -> constructor : 1
to write the -> regular : 1
to write the -> sperson : 1
write the following -> in : 1
write the following -> x : 1
write the following -> template : 1
write the following -> a : 1
the following in -> instantiate : 1
the following in -> which : 2
the following in -> the : 1
following in instantiate -> const : 1
in instantiate const -> char : 1
instantiate const char -> wrapper : 1
const char wrapper -> can : 1
char wrapper can -> now : 1
wrapper can now -> just : 1
can now just -> omit : 1
now just omit -> the : 1
just omit the -> template : 1
omit the template -> specialization : 1
the template specialization -> wrapper : 1
template specialization wrapper -> this : 1
specialization wrapper this -> was : 1
wrapper this was -> only : 1
only possible by -> implementing : 1
possible by implementing -> a : 1
by implementing a -> function : 1
by implementing a -> the : 1
by implementing a -> template : 1
implementing a function -> return : 1
implementing a function -> over : 1
implementing a function -> from : 1
a function return -> such : 1
function return such -> it : 1
return such it -> was : 1
such it was -> possible : 1
possible to have -> a : 1
to have a -> similar : 1
to have a -> look : 3
to have a -> iteration : 1
to have a -> very : 1
to have a -> quick : 1
to have a -> of : 1
have a similar -> wrapper : 1
a similar wrapper -> stl : 1
similar wrapper stl -> already : 1
wrapper stl already -> comes : 1
stl already comes -> with : 1
already comes with -> a : 1
with a lot -> of : 7
lot of helper -> functions : 1
of helper functions -> such : 1
helper functions such -> and : 1
functions such and -> so : 1
and so in -> these : 1
and so in -> that : 1
and so in -> such : 1
so in these -> can : 1
in these can -> now : 1
these can now -> mostly : 1
can now mostly -> be : 1
now mostly be -> regarded : 1
mostly be regarded -> as : 1
be regarded as -> of : 1
be regarded as -> the : 1
regarded as of -> they : 1
as of they -> will : 1
of they will -> be : 1
they will be -> provided : 1
they will be -> transformed : 1
will be provided -> further : 1
be provided further -> for : 1
provided further for -> compatibility : 1
further for compatibility -> just : 1
for compatibility just -> learned : 1
compatibility just learned -> about : 1
just learned about -> template : 1
learned about template -> type : 1
about template type -> in : 1
template type in -> some : 1
type in some -> we : 1
in some we -> cannot : 1
some we cannot -> rely : 1
we cannot rely -> on : 1
cannot rely on -> implicit : 1
rely on implicit -> type : 1
on implicit type -> consider : 1
implicit type consider -> the : 1
type consider the -> following : 1
following example struct -> sum : 1
example struct sum -> t : 1
struct sum t -> template : 1
sum t template -> accepts : 1
t template accepts -> an : 1
template accepts an -> arbitrary : 1
accepts an arbitrary -> number : 2
an arbitrary number -> of : 5
arbitrary number of -> parameters : 1
arbitrary number of -> variadic : 1
arbitrary number of -> functions : 1
arbitrary number of -> input : 1
arbitrary number of -> it : 1
arbitrary number of -> sink : 1
arbitrary number of -> tuples : 1
number of parameters -> and : 1
of parameters and -> together : 1
parameters and together -> using : 1
and together using -> a : 1
together using a -> fold : 2
using a fold -> expression : 1
using a fold -> if : 1
a fold expression -> a : 1
fold expression a -> look : 1
expression a look -> at : 1
look at the -> fold : 1
look at the -> illustration : 1
look at the -> following : 6
look at the -> complete : 1
look at the -> same : 1
look at the -> code : 2
look at the -> which : 1
look at the -> recipe : 2
look at the -> ranges : 1
look at the -> reference : 1
look at the -> inner : 1
look at the -> if : 1
look at the -> for : 1
look at the -> where : 1
look at the -> insertion : 1
look at the -> it : 1
look at the -> class : 1
look at the -> implementation : 1
look at the -> and : 1
look at the -> template : 1
look at the -> the : 1
look at the -> function : 1
look at the -> most : 1
look at the -> different : 1
look at the -> recipes : 1
look at the -> invocations : 1
look at the -> directory : 1
at the fold -> expression : 1
the fold expression -> recipe : 1
the fold expression -> combines : 1
fold expression recipe -> a : 1
expression recipe a -> little : 1
recipe a little -> later : 1
a little later -> in : 1
little later in -> this : 1
later in this -> chapter : 1
later in this -> way : 1
this chapter to -> get : 1
chapter to get -> more : 1
to get more -> details : 1
get more details -> on : 1
more details on -> fold : 1
details on fold -> the : 1
on fold the -> resulting : 1
fold the resulting -> sum : 1
the resulting sum -> is : 1
resulting sum is -> saved : 1
sum is saved -> in : 1
is saved in -> the : 1
is saved in -> a : 2
is saved in -> vector : 1
saved in the -> member : 1
saved in the -> variable : 2
saved in the -> and : 1
in the member -> now : 1
the member now -> the : 1
member now the -> question : 1
now the question -> what : 1
the question what -> type : 1
the question what -> do : 1
question what type -> is : 1
what type is -> if : 1
what type is -> the : 1
type is if -> we : 1
is if we -> want : 2
is if we -> calculate : 1
is if we -> read : 1
is if we -> do : 1
if we want -> to : 19
if we want -> a : 2
if we want -> some : 1
want to specify -> it : 1
to specify it -> it : 1
specify it it -> surely : 1
it it surely -> needs : 1
it surely needs -> to : 1
surely needs to -> depend : 1
needs to depend -> on : 1
to depend on -> the : 1
to depend on -> template : 1
depend on the -> types : 1
depend on the -> order : 1
on the types -> of : 1
on the types -> we : 1
the types of -> the : 1
the types of -> its : 1
the types of -> and : 1
types of the -> values : 1
of the values -> provided : 1
of the values -> we : 1
of the values -> in : 1
the values provided -> in : 1
values provided in -> the : 1
provided in the -> if : 1
in the if -> we : 2
in the if -> const : 1
in the if -> it : 1
the if we -> provide : 1
the if we -> are : 1
the if we -> prefix : 1
the if we -> were : 1
the if we -> compare : 1
the if we -> have : 1
the if we -> error : 1
if we provide -> string : 1
if we provide -> it : 1
if we provide -> and : 1
we provide string -> it : 1
provide string it -> needs : 1
string it needs -> to : 1
to be if -> we : 4
to be if -> the : 1
be if we -> provide : 2
be if we -> produce : 1
be if we -> a : 1
be if we -> construct : 1
we provide it -> needs : 1
we provide it -> a : 1
we provide it -> as : 2
we provide it -> together : 1
provide it needs -> to : 1
we provide and -> the : 1
provide and the -> compiler : 1
and the compiler -> needs : 1
and the compiler -> is : 1
and the compiler -> need : 1
and the compiler -> could : 1
the compiler needs -> to : 3
compiler needs to -> figure : 1
compiler needs to -> assemble : 1
compiler needs to -> understand : 1
needs to figure -> out : 1
to figure out -> which : 1
to figure out -> how : 1
figure out which -> type : 1
out which type -> fits : 1
which type fits -> all : 1
type fits all -> the : 2
fits all the -> values : 1
fits all the -> see : 1
all the values -> without : 1
all the values -> of : 4
all the values -> that : 1
all the values -> from : 4
all the values -> in : 1
all the values -> are : 1
the values without -> information : 1
values without information -> in : 1
without information in -> order : 1
information in order -> to : 1
order to achieve -> we : 1
to achieve we -> provide : 1
to achieve we -> wrap : 1
achieve we provide -> an : 1
we provide an -> deduction : 1
we provide an -> instance : 1
we provide an -> optional : 1
provide an deduction -> deduction : 1
an deduction deduction -> guide : 1
deduction deduction guide -> tells : 1
deduction guide tells -> the : 1
guide tells the -> compiler : 1
tells the compiler -> to : 1
tells the compiler -> that : 2
the compiler to -> use : 1
the compiler to -> deduce : 1
the compiler to -> optimize : 1
compiler to use -> the : 1
to use the -> which : 2
to use the -> function : 1
to use the -> structure : 1
to use the -> of : 1
to use the -> fibonacci : 1
to use the -> to : 1
to use the -> trie : 1
to use the -> octal : 1
to use the -> wrong : 1
to use the -> and : 1
to use the -> lock : 1
to use the -> if : 1
use the which -> is : 1
use the which -> was : 1
the which is -> able : 1
the which is -> than : 1
the which is -> intended : 1
the which is -> just : 1
the which is -> central : 1
the which is -> in : 1
the which is -> the : 1
the which is -> trivially : 1
the which is -> different : 1
the which is -> surrounded : 1
the which is -> not : 1
the which is -> as : 1
the which is -> stored : 1
which is able -> to : 1
is able to -> find : 2
is able to -> select : 1
is able to -> do : 1
is able to -> insert : 1
is able to -> dereference : 1
is able to -> lock : 2
is able to -> access : 1
able to find -> out : 1
able to find -> it : 1
to find out -> which : 2
to find out -> more : 1
to find out -> what : 1
to find out -> type : 1
find out which -> common : 1
find out which -> files : 1
out which common -> type : 1
which common type -> fits : 1
common type fits -> all : 1
all the see -> use : 1
the see use -> s : 1
see use s -> sum : 1
use s sum -> the : 1
s sum the -> first : 1
sum the first -> line : 1
the first line -> we : 1
the first line -> defines : 1
the first line -> does : 1
first line we -> instantiate : 1
line we instantiate -> a : 1
we instantiate a -> object : 2
we instantiate a -> vector : 4
we instantiate a -> map : 1
we instantiate a -> random : 1
we instantiate a -> distribution : 1
we instantiate a -> new : 1
we instantiate a -> shared : 1
we instantiate a -> the : 1
we instantiate a -> shall : 1
instantiate a object -> with : 1
instantiate a object -> from : 1
a object with -> constructor : 1
object with constructor -> arguments : 1
with constructor arguments -> of : 1
constructor arguments of -> type : 1
arguments of type -> and : 1
of type and -> returns : 1
of type and -> want : 1
type and returns -> as : 1
and returns as -> the : 1
returns as the -> common : 1
as the common -> so : 1
the common so -> we : 1
common so we -> get : 1
so we get -> a : 2
so we get -> this : 1
so we get -> our : 1
we get a -> in : 1
we get a -> useless : 1
we get a -> lambda : 1
we get a -> single : 1
we get a -> function : 1
we get a -> pair : 1
we get a -> lot : 1
we get a -> const : 1
we get a -> pretty : 1
we get a -> nice : 3
we get a -> interleaved : 1
we get a -> memory : 1
get a in -> the : 1
a in the -> second : 1
a in the -> we : 1
a in the -> function : 1
a in the -> simplest : 1
in the second -> we : 1
in the second -> lambda : 1
in the second -> which : 1
in the second -> call : 1
in the second -> it : 1
the second we -> provide : 1
the second we -> use : 1
the second we -> moved : 1
second we provide -> an : 1
provide an instance -> and : 1
an instance and -> a : 1
instance and a -> following : 1
and a following -> our : 1
a following our -> deduction : 1
following our deduction -> the : 1
our deduction the -> compiler : 1
deduction the compiler -> constructs : 1
the compiler constructs -> an : 1
compiler constructs an -> instance : 1
constructs an instance -> of : 1
an instance of -> type : 1
an instance of -> is : 2
an instance of -> the : 2
an instance of -> to : 1
an instance of -> hold : 1
an instance of -> this : 1
an instance of -> it : 2
an instance of -> cannot : 1
instance of type -> running : 1
instance of type -> we : 1
of type running -> this : 1
type running this -> it : 1
running this it -> will : 1
this it will -> print : 1
this it will -> try : 1
this it will -> be : 1
it will print -> as : 1
it will print -> to : 1
it will print -> all : 1
it will print -> the : 1
will print as -> the : 1
print as the -> numeric : 1
as the numeric -> sum : 1
the numeric sum -> and : 1
numeric sum and -> as : 1
sum and as -> the : 1
and as the -> string : 1
as the string -> compile : 1
the string compile -> time : 1
string compile time -> decisions : 1
decisions with templated -> it : 1
with templated it -> is : 1
templated it is -> often : 1
it is often -> necessary : 1
it is often -> possible : 1
is often necessary -> to : 1
often necessary to -> do : 1
necessary to do -> certain : 1
to do certain -> things : 1
do certain things -> depending : 1
certain things depending -> on : 1
things depending on -> the : 2
depending on the -> type : 1
depending on the -> operator : 1
depending on the -> compiler : 1
depending on the -> they : 1
depending on the -> nature : 1
depending on the -> underlying : 1
depending on the -> value : 1
depending on the -> problem : 2
depending on the -> computer : 1
on the type -> the : 1
the type the -> template : 1
type the template -> is : 1
the template is -> specialized : 1
template is specialized -> comes : 1
is specialized comes -> with : 1
specialized comes with -> which : 1
comes with which -> simplify : 1
with which simplify -> the : 1
which simplify the -> code : 1
simplify the code -> in : 1
the code in -> such : 1
the code in -> our : 1
the code in -> this : 2
the code in -> order : 1
the code in -> a : 1
the code in -> single : 1
code in such -> situations : 1
in such situations -> to : 1
such situations to -> do : 1
situations to do -> this : 1
do this implement -> a : 1
this implement a -> little : 1
implement a little -> helper : 4
implement a little -> earlier : 1
implement a little -> application : 1
implement a little -> function : 1
implement a little -> lambda : 1
implement a little -> class : 1
implement a little -> tool : 1
a little helper -> template : 1
a little helper -> function : 4
a little helper -> for : 1
a little helper -> which : 2
a little helper -> class : 1
little helper template -> it : 1
helper template it -> can : 1
template it can -> deal : 1
it can deal -> with : 1
can deal with -> different : 1
can deal with -> them : 1
can deal with -> this : 1
deal with different -> template : 1
with different template -> type : 1
different template type -> specializations : 1
template type specializations -> because : 1
type specializations because -> it : 1
specializations because it -> is : 1
because it is -> able : 1
because it is -> specialized : 1
because it is -> the : 2
because it is -> both : 1
because it is -> very : 1
because it is -> not : 1
because it is -> locked : 1
because it is -> computed : 1
because it is -> most : 1
because it is -> indeed : 1
because it is -> a : 7
it is able -> to : 2
able to select -> completely : 1
to select completely -> different : 1
select completely different -> code : 1
completely different code -> in : 1
completely different code -> when : 1
different code in -> some : 1
code in some -> depending : 1
in some depending -> on : 1
some depending on -> what : 1
depending on what -> type : 1
depending on what -> we : 1
depending on what -> is : 1
on what type -> we : 1
what type we -> specialize : 1
type we specialize -> it : 1
we specialize it -> the : 1
we specialize it -> on : 1
specialize it the -> part : 1
it the part -> of : 1
the part of -> the : 3
the part of -> a : 1
the part of -> was : 1
of the code -> in : 3
of the code -> file : 1
of the code -> using : 1
of the code -> is : 1
of the code -> tries : 1
code in our -> it : 1
in our it -> is : 1
our it is -> a : 2
our it is -> possible : 1
is a simple -> which : 1
a simple which -> supports : 1
a simple which -> has : 1
simple which supports -> adding : 1
which supports adding -> a : 1
supports adding a -> type : 1
adding a type -> value : 1
a type value -> to : 1
a type value -> can : 1
type value to -> the : 1
value to the -> type : 1
value to the -> it : 1
to the type -> member : 1
the type member -> value : 1
type member value -> using : 1
member value using -> template : 1
value using template -> class : 1
using template class -> addable : 1
template class addable -> t : 1
class addable t -> template : 2
addable t template -> t : 1
addable t template -> const : 1
t template t -> const : 1
template t const -> return : 1
template t const -> constexpr : 1
t const return -> val : 1
const return val -> that : 1
const return val -> template : 1
return val that -> type : 1
val that type -> type : 1
that type type -> is : 1
type type is -> just : 1
type is just -> what : 1
is just what -> shall : 1
is just what -> we : 5
just what shall -> it : 1
what shall it -> mean : 1
shall it mean -> to : 1
it mean to -> add : 1
it mean to -> provide : 1
mean to add -> an : 1
to add an -> integer : 1
add an integer -> to : 1
an integer to -> a : 1
integer to a -> whole : 1
to a whole -> say : 1
a whole say -> it : 1
whole say it -> means : 1
say it means -> that : 1
it means that -> we : 1
means that we -> add : 1
means that we -> iterate : 1
means that we -> store : 1
means that we -> take : 1
means that we -> do : 1
means that we -> still : 1
means that we -> can : 1
means that we -> cannot : 2
means that we -> generally : 1
means that we -> get : 1
means that we -> already : 1
means that we -> just : 1
that we add -> the : 1
we add the -> integer : 1
we add the -> class : 1
add the integer -> to : 1
the integer to -> every : 1
integer to every -> item : 1
to every item -> in : 1
every item in -> the : 1
item in the -> this : 2
item in the -> vector : 1
item in the -> although : 1
item in the -> which : 2
item in the -> how : 1
item in the -> destination : 1
item in the -> input : 1
item in the -> queue : 1
item in the -> does : 1
in the this -> done : 1
in the this -> makes : 1
in the this -> happens : 1
in the this -> means : 1
in the this -> is : 2
in the this -> somewhat : 1
in the this -> initially : 1
in the this -> we : 1
in the this -> way : 1
the this done -> in : 1
this done in -> a : 1
done in a -> template : 1
in a template -> t : 1
a template t -> auto : 1
template t auto -> copy : 1
t auto copy -> get : 1
auto copy get -> a : 1
copy get a -> copy : 1
get a copy -> of : 1
a copy of -> the : 4
a copy of -> but : 1
a copy of -> call : 1
copy of the -> vector : 1
copy of the -> first : 1
copy of the -> we : 1
copy of the -> substring : 1
of the vector -> member : 1
of the vector -> any : 1
of the vector -> we : 1
of the vector -> in : 3
of the vector -> to : 1
of the vector -> it : 1
of the vector -> as : 1
the vector member -> for : 1
vector member for -> n : 1
member for n -> return : 1
for n return -> next : 1
for n return -> else : 1
for n return -> using : 1
n return next -> and : 1
return next and -> last : 1
next and last -> step : 1
and last step -> is : 1
last step is -> to : 1
last step is -> printing : 1
last step is -> unwrapping : 1
step is to -> both : 1
step is to -> remove : 1
step is to -> delete : 1
step is to -> instantiate : 1
step is to -> define : 1
step is to -> generate : 1
is to both -> if : 1
to both if -> is : 1
both if is -> a : 1
if is a -> vector : 1
is a vector -> of : 3
a vector of -> do : 1
a vector of -> integers : 5
a vector of -> more : 1
a vector of -> our : 1
a vector of -> the : 1
a vector of -> such : 3
a vector of -> varying : 1
a vector of -> which : 1
a vector of -> in : 1
a vector of -> variables : 1
a vector of -> because : 1
a vector of -> counter : 1
a vector of -> future : 1
vector of do -> the : 1
of do the -> if : 1
do the if -> it : 1
the if it -> is : 2
the if it -> we : 1
if it is -> just : 2
if it is -> the : 1
if it is -> between : 1
if it is -> an : 1
if it is -> then : 3
if it is -> for : 1
if it is -> not : 3
if it is -> neither : 1
if it is -> able : 1
if it is -> applied : 1
if it is -> in : 1
if it is -> a : 2
if it is -> no : 1
if it is -> dangling : 1
it is just -> implement : 1
it is just -> a : 1
it is just -> an : 2
it is just -> that : 1
it is just -> put : 1
it is just -> set : 1
it is just -> for : 1
is just implement -> the : 1
just implement the -> template : 1
implement the template -> t : 1
the template t -> const : 1
t const constexpr -> auto : 1
const constexpr auto -> copy : 1
constexpr auto copy -> for : 1
auto copy for -> n : 2
copy for n -> return : 2
n return else -> return : 1
return else return -> val : 1
return else return -> return : 1
return else return -> finally : 1
return else return -> construction : 1
else return val -> class : 1
return val class -> can : 1
val class can -> now : 1
class can now -> be : 1
can now be -> put : 1
now be put -> to : 1
be put to -> see : 1
be put to -> we : 1
put to see -> how : 1
to see how -> nicely : 1
to see how -> to : 5
to see how -> much : 1
to see how -> things : 1
to see how -> that : 1
to see how -> it : 1
to see how -> useful : 1
to see how -> the : 1
to see how -> easy : 1
see how nicely -> it : 1
how nicely it -> works : 1
nicely it works -> with : 1
it works with -> completely : 1
it works with -> the : 1
works with completely -> different : 1
with completely different -> such : 1
with completely different -> argument : 1
completely different such -> as : 1
different such as -> and : 1
such as and -> is : 1
as and is -> is : 1
and is is -> is : 1
is is is -> v : 1
is is v -> is : 1
is v is -> sv : 1
v is sv -> is : 1
is sv is -> it : 1
sv is it -> new : 1
is it new -> works : 1
it new works -> exactly : 1
new works exactly -> like : 1
works exactly like -> the : 1
works exactly like -> but : 2
works exactly like -> in : 1
exactly like the -> difference : 1
like the difference -> is : 1
the difference is -> that : 1
difference is that -> the : 4
difference is that -> will : 1
difference is that -> works : 1
difference is that -> it : 2
difference is that -> we : 1
is that the -> condition : 1
is that the -> sum : 1
is that the -> billionaire : 1
is that the -> priority : 1
is that the -> compiler : 2
is that the -> order : 1
is that the -> is : 1
is that the -> stl : 1
is that the -> first : 2
is that the -> strings : 1
is that the -> distribution : 1
is that the -> queue : 1
is that the -> overload : 1
that the condition -> tests : 1
the condition tests -> has : 1
condition tests has -> to : 1
tests has to -> be : 1
has to be -> evaluated : 1
has to be -> done : 1
has to be -> executed : 1
to be evaluated -> at : 1
be evaluated at -> all : 1
be evaluated at -> compile : 1
evaluated at all -> runtime : 1
at all runtime -> code : 1
all runtime code -> compiler : 1
runtime code compiler -> creates : 1
code compiler creates -> from : 1
compiler creates from -> our : 1
creates from our -> program : 1
from our program -> will : 1
our program will -> not : 1
our program will -> add : 1
our program will -> produce : 1
program will not -> contain : 1
will not contain -> any : 1
will not contain -> expensive : 1
not contain any -> branch : 1
contain any branch -> instructions : 1
any branch instructions -> from : 1
branch instructions from -> one : 1
instructions from one -> could : 1
from one could -> also : 1
one could also -> put : 1
one could also -> why : 1
could also put -> it : 1
also put it -> that : 1
put it that -> it : 1
it that it -> works : 1
it that it -> has : 1
that it works -> in : 1
that it works -> like : 1
that it works -> the : 1
it works in -> a : 2
works in a -> similar : 2
works in a -> synchronized : 1
in a similar -> manner : 2
a similar manner -> text : 1
a similar manner -> to : 1
similar manner text -> substitution : 1
manner text substitution -> but : 1
text substitution but -> for : 1
substitution but for -> the : 1
but for the -> code : 1
but for the -> sake : 2
but for the -> reason : 1
but for the -> stl : 1
for the code -> would : 1
code would not -> even : 1
would not even -> have : 1
would not even -> much : 1
would not even -> be : 1
not even have -> to : 1
even have to -> be : 1
have to be -> syntactically : 1
have to be -> when : 1
have to be -> changed : 1
have to be -> copied : 1
have to be -> int : 1
have to be -> restructured : 1
have to be -> if : 1
have to be -> as : 1
have to be -> done : 1
to be syntactically -> the : 1
be syntactically the -> branches : 1
syntactically the branches -> of : 1
the branches of -> a : 1
branches of a -> construct : 1
of a construct -> need : 1
a construct need -> to : 1
construct need to -> be : 1
need to be -> but : 1
need to be -> order : 1
need to be -> included : 1
need to be -> then : 1
need to be -> really : 1
need to be -> note : 1
need to be -> careful : 1
need to be -> moved : 1
need to be -> able : 4
need to be -> normalized : 1
need to be -> processed : 1
need to be -> each : 1
need to be -> one : 1
need to be -> printed : 1
need to be -> hardcoded : 1
need to be -> checked : 1
need to be -> which : 1
need to be -> generated : 1
need to be -> as : 1
need to be -> avoided : 1
need to be -> executed : 1
need to be -> in : 1
need to be -> unwrapped : 1
to be but -> the : 1
be but the -> branches : 1
but the branches -> taken : 1
the branches taken -> do : 1
branches taken do -> not : 1
taken do not -> need : 1
not need to -> be : 3
not need to -> copy : 1
not need to -> define : 1
not need to -> expensively : 1
not need to -> touch : 1
not need to -> implement : 1
not need to -> anything : 1
not need to -> store : 1
not need to -> reimplement : 1
not need to -> fiddle : 1
not need to -> construct : 1
not need to -> print : 1
not need to -> explicitly : 1
not need to -> use : 1
not need to -> care : 1
not need to -> share : 1
not need to -> worry : 1
to be order -> to : 1
be order to -> distinguish : 1
be order to -> reduce : 1
order to distinguish -> code : 1
order to distinguish -> if : 1
to distinguish code -> the : 1
distinguish code the -> a : 1
code the a -> vector : 1
the a vector -> or : 1
a vector or -> we : 1
a vector or -> a : 2
vector or we -> use : 1
or we use -> the : 1
use the type -> an : 1
the type an -> to : 1
type an to -> the : 1
an to the -> boolean : 1
to the boolean -> and : 1
the boolean and -> are : 1
boolean and are -> of : 1
and are of -> the : 1
are of the -> same : 1
the same the -> condition : 1
the same the -> next : 1
the same the -> performs : 1
the same the -> reason : 1
the same the -> same : 1
the same the -> latter : 1
same the condition -> used : 1
the condition used -> in : 1
condition used in -> our : 1
used in our -> recipe : 1
in our recipe -> is : 1
in our recipe -> we : 1
our recipe is -> which : 1
recipe is which -> evaluates : 1
is which evaluates -> to : 1
which evaluates to -> the : 1
which evaluates to -> in : 1
evaluates to the -> user : 1
to the user -> specialized : 1
to the user -> using : 1
to the user -> the : 1
the user specialized -> the : 1
user specialized the -> class : 1
specialized the class -> on : 1
the class on -> tries : 1
class on tries -> to : 1
on tries to -> call : 1
tries to call -> with : 1
tries to call -> for : 1
to call with -> a : 1
to call with -> an : 1
call with a -> parameter : 1
call with a -> block : 1
call with a -> union : 1
with a parameter -> of : 1
a parameter of -> type : 1
parameter of type -> of : 1
of type of -> be : 1
type of be -> multiple : 1
of be multiple -> conditions : 1
be multiple conditions -> in : 1
multiple conditions in -> one : 1
conditions in one -> block : 1
in one block -> that : 1
one block that -> and : 1
block that and -> have : 1
that and have -> to : 1
and have to -> depend : 1
have to depend -> on : 1
depend on template -> parameters : 1
on template parameters -> and : 1
template parameters and -> not : 1
parameters and not -> only : 1
and not only -> on : 1
and not only -> in : 1
not only on -> do : 1
not only on -> also : 1
only on do -> something : 1
on do something -> else : 1
do something else -> do : 1
do something else -> else : 1
do something else -> before : 1
do something else -> and : 1
do something else -> wait : 1
something else do -> something : 1
else do something -> else : 1
else do something -> completely : 1
something else else -> do : 1
else else do -> something : 1
do something completely -> different : 1
something completely different -> a : 1
completely different a -> lot : 1
different a lot -> of : 1
lot of meta -> programming : 1
of meta programming -> situations : 1
meta programming situations -> are : 1
programming situations are -> much : 1
situations are much -> easier : 1
are much easier -> to : 1
much easier to -> express : 1
much easier to -> implement : 1
much easier to -> this : 1
easier to express -> and : 1
to express and -> to : 1
to express and -> they : 1
express and to -> order : 1
and to order -> to : 1
to order to -> relate : 1
to order to -> ignite : 1
order to relate -> how : 1
to relate how -> much : 1
relate how much -> constructs : 1
how much constructs -> are : 1
much constructs are -> an : 1
constructs are an -> improvement : 1
are an improvement -> to : 1
an improvement to -> we : 1
improvement to we -> can : 1
to we can -> have : 1
to we can -> do : 1
to we can -> just : 1
to we can -> express : 1
look at how -> the : 1
look at how -> it : 1
look at how -> that : 1
look at how -> to : 1
at how the -> same : 1
how the same -> thing : 1
the same thing -> could : 1
the same thing -> with : 4
the same thing -> as : 3
the same thing -> again : 2
same thing could -> have : 1
thing could have -> been : 1
been implemented class -> addable : 1
implemented class addable -> t : 1
t template const -> return : 1
template const return -> val : 1
return val template -> const : 1
val template const -> auto : 1
template const auto -> copy : 1
const auto copy -> for : 1
n return using -> this : 1
return using this -> class : 1
using this class -> works : 1
this class works -> for : 1
class works for -> all : 1
works for all -> different : 1
for all different -> types : 1
all different types -> we : 1
different types we -> wished : 1
different types we -> can : 1
types we wished -> but : 1
we wished but -> it : 1
wished but it -> looks : 1
but it looks -> super : 1
it looks super -> how : 1
looks super how -> does : 1
super how does -> it : 1
how does it -> implementations : 1
how does it -> do : 1
does it implementations -> alone : 1
it implementations alone -> of : 1
implementations alone of -> the : 1
alone of the -> functions : 1
of the functions -> look : 1
of the functions -> and : 1
the functions look -> their : 1
functions look their -> return : 1
look their return -> type : 1
their return type -> which : 1
return type which -> makes : 1
type which makes -> them : 1
which makes them -> look : 1
makes them look -> and : 1
them look and -> which : 1
look and which -> contains : 1
and which contains -> a : 1
and which contains -> the : 1
which contains a -> expression : 1
which contains a -> single : 1
contains a expression -> such : 1
a expression such -> evaluates : 1
expression such evaluates -> to : 1
such evaluates to -> is : 1
evaluates to is -> does : 1
to is does -> not : 1
is does not -> evaluate : 1
does not evaluate -> to : 1
not evaluate to -> that : 1
evaluate to that -> would : 1
to that would -> normally : 1
to that would -> distort : 1
that would normally -> considered : 1
would normally considered -> an : 1
normally considered an -> but : 1
considered an but -> we : 1
an but we -> will : 1
but we will -> see : 1
but we will -> have : 1
but we will -> implement : 1
but we will -> get : 1
but we will -> feed : 1
we will see -> why : 1
we will see -> to : 1
we will see -> what : 2
we will see -> after : 1
we will see -> how : 10
we will see -> in : 3
we will see -> when : 1
we will see -> that : 2
we will see -> if : 1
we will see -> immediately : 1
we will see -> a : 1
we will see -> later : 1
will see why -> it : 1
see why it -> is : 1
why it is -> the : 1
why it is -> possible : 1
why it is -> easier : 1
why it is -> so : 2
why it is -> not : 1
why it is -> truncated : 1
it is the -> second : 1
it is the -> iterator : 1
it is the -> only : 1
it is the -> first : 1
it is the -> ideal : 1
it is the -> character : 1
it is the -> right : 1
it is the -> destructor : 1
is the second -> the : 1
is the second -> simplest : 1
is the second -> subrange : 1
the second the -> is : 1
the second the -> third : 1
second the is -> used : 1
the is used -> in : 1
is used in -> this : 1
is used in -> audio : 1
used in this -> it : 1
used in this -> a : 1
used in this -> such : 1
in this it -> can : 2
in this it -> input : 1
in this it -> is : 4
in this it -> returns : 1
in this it -> defines : 1
in this it -> just : 1
this it can -> only : 1
this it can -> be : 1
it can only -> be : 3
it can only -> handle : 1
can only be -> at : 1
can only be -> traversed : 1
can only be -> an : 1
can only be -> iterated : 1
can only be -> incremented : 1
can only be -> removed : 1
can only be -> create : 1
only be at -> the : 1
be at the -> same : 1
be at the -> end : 1
the same time -> one : 1
the same time -> the : 1
the same time -> general : 1
the same time -> in : 1
the same time -> using : 1
the same time -> preserving : 1
same time one -> the : 1
time one the -> the : 1
one the the -> compiler : 1
the the compiler -> sees : 1
the the compiler -> will : 1
the the compiler -> creates : 1
the compiler sees -> different : 1
compiler sees different -> template : 1
sees different template -> functions : 1
different template functions -> with : 1
template functions with -> the : 1
the same name -> and : 1
same name and -> has : 1
name and has -> to : 1
and has to -> choose : 1
has to choose -> one : 1
to choose one -> of : 2
choose one of -> an : 1
choose one of -> the : 1
one of an -> important : 1
of an important -> principle : 1
an important principle -> comes : 1
important principle comes -> into : 1
principle comes into -> which : 1
comes into which -> stands : 1
into which stands -> for : 1
which stands for -> failure : 1
stands for failure -> is : 1
for failure is -> not : 1
failure is not -> an : 1
is not an -> in : 1
is not an -> so : 1
is not an -> iterator : 1
not an in -> this : 1
an in this -> this : 1
in this this -> means : 1
in this this -> triggers : 1
in this this -> is : 2
this this means -> that : 2
this means that -> the : 5
this means that -> items : 1
this means that -> it : 4
this means that -> is : 1
this means that -> all : 1
this means that -> we : 6
this means that -> this : 2
this means that -> a : 2
this means that -> there : 1
this means that -> if : 5
this means that -> parallelizing : 1
this means that -> calling : 1
means that the -> compiler : 1
means that the -> fifo : 1
means that the -> iterator : 1
means that the -> values : 1
means that the -> map : 1
means that the -> default : 1
means that the -> signal : 1
means that the -> number : 1
means that the -> variant : 1
means that the -> control : 1
means that the -> async : 1
that the compiler -> does : 1
that the compiler -> can : 2
that the compiler -> will : 1
the compiler does -> not : 1
compiler does not -> error : 1
does not error -> out : 1
not error out -> if : 1
error out if -> the : 1
error out if -> cout : 1
out if the -> return : 1
if the return -> value : 1
return value of -> one : 1
return value of -> the : 3
return value of -> means : 1
return value of -> in : 1
value of one -> of : 1
of one of -> those : 1
one of those -> functions : 1
one of those -> threads : 1
of those functions -> cannot : 1
of those functions -> will : 1
those functions cannot -> be : 1
functions cannot be -> deduced : 1
cannot be deduced -> from : 1
be deduced from -> erroneous : 1
deduced from erroneous -> expression : 1
from erroneous expression -> in : 1
erroneous expression in -> case : 1
expression in case -> its : 1
in case its -> condition : 1
case its condition -> evaluates : 1
its condition evaluates -> to : 1
condition evaluates to -> it : 1
evaluates to it -> will : 1
to it will -> simply : 1
to it will -> take : 1
it will simply -> look : 1
will simply look -> further : 1
simply look further -> and : 1
look further and -> try : 1
further and try -> the : 1
and try the -> function : 1
try the function -> that : 1
the function that -> is : 1
the function that -> we : 1
the function that -> shall : 1
the function that -> prints : 1
the function that -> constructs : 1
function that is -> the : 1
that is the -> that : 1
that is the -> range : 2
that is the -> we : 1
that is the -> type : 1
that is the -> number : 1
that is the -> later : 1
is the that -> is : 1
the that is -> how : 1
that is how -> this : 1
is how this -> a : 1
how this a -> is : 1
this a is -> nice : 1
a is nice -> to : 1
is nice to -> see : 1
nice to see -> that : 1
to see that -> this : 1
see that this -> became : 1
that this became -> so : 1
this became so -> much : 1
became so much -> easier : 1
so much easier -> with : 1
much easier with -> libraries : 1
easier with libraries -> with : 1
with inline it -> was : 1
inline it was -> always : 1
it was always -> possible : 1
it was always -> necessary : 1
was always possible -> in : 1
always possible in -> to : 1
possible in to -> declare : 1
in to declare -> individual : 1
to declare individual -> functions : 1
declare individual functions -> us : 1
individual functions us -> to : 1
functions us to -> declare : 1
us to declare -> this : 1
to declare this -> makes : 1
declare this makes -> it : 1
this makes it -> much : 1
this makes it -> very : 2
makes it much -> easier : 1
it much easier -> to : 1
easier to implement -> which : 1
to implement which -> was : 1
implement which was -> previously : 1
which was previously -> only : 1
was previously only -> possible : 1
previously only possible -> using : 1
possible using this -> we : 1
using this we -> create : 1
this we create -> an : 1
this we create -> a : 1
we create an -> that : 1
we create an -> initializer : 1
create an that -> could : 1
an that could -> suit : 1
that could suit -> as : 1
could suit as -> a : 1
suit as a -> member : 1
as a member -> of : 1
as a member -> it : 1
a member of -> a : 3
a member of -> this : 1
a member of -> the : 1
member of a -> typical : 1
member of a -> can : 1
member of a -> large : 1
member of a -> shared : 2
of a typical -> the : 1
a typical the -> target : 1
typical the target -> is : 1
the target is -> to : 1
target is to -> give : 1
is to give -> it : 1
to give it -> a : 1
give it a -> static : 1
give it a -> completely : 1
give it a -> priority : 1
give it a -> for : 1
give it a -> runtime : 1
give it a -> string : 1
give it a -> quirky : 1
it a static -> member : 1
a static member -> and : 2
static member and -> instantiate : 1
static member and -> be : 1
member and instantiate -> it : 1
and instantiate it -> in : 1
instantiate it in -> a : 1
it in a -> globally : 1
it in a -> to : 1
it in a -> lot : 1
it in a -> its : 1
it in a -> boolean : 1
it in a -> callable : 1
it in a -> folder : 1
in a globally -> available : 1
a globally available -> manner : 1
a globally available -> l : 1
globally available manner -> using : 1
available manner using -> the : 1
manner using the -> which : 1
using the which -> would : 1
using the which -> gives : 1
using the which -> will : 1
using the which -> already : 1
the which would -> not : 1
the which would -> with : 1
which would not -> be : 1
would not be -> possible : 2
would not be -> a : 1
would not be -> sorted : 1
not be possible -> like : 1
not be possible -> to : 3
be possible like -> this : 1
possible like this -> before : 1
like this before -> class : 1
this before class -> contain : 1
before class contain -> a : 1
class contain a -> static : 1
contain a static -> member : 1
member and be -> globally : 1
and be globally -> accessible : 1
be globally accessible -> which : 1
globally accessible which -> would : 1
accessible which would -> produce : 1
which would produce -> symbols : 1
would produce symbols -> when : 1
produce symbols when -> included : 1
symbols when included -> from : 1
when included from -> multiple : 1
included from multiple -> translation : 1
from multiple translation -> class : 1
multiple translation class -> static : 1
translation class static -> const : 1
class static const -> static : 2
static const static -> globally : 2
const static globally -> available : 2
static globally available -> we : 1
static globally available -> it : 1
globally available we -> now : 1
available we now -> include : 1
we now include -> this : 1
now include this -> in : 1
include this in -> multiple : 1
this in multiple -> files : 1
in multiple files -> in : 1
multiple files in -> order : 1
files in order -> to : 1
order to compile -> and : 1
to compile and -> link : 1
compile and link -> this : 1
and link this -> would : 1
link this would -> fail : 1
this would fail -> at : 1
would fail at -> the : 1
fail at the -> linker : 1
at the linker -> in : 1
the linker in -> order : 1
linker in order -> to : 1
order to fix -> we : 3
to fix we -> add : 1
to fix we -> need : 2
fix we add -> the : 1
add the class -> static : 1
the class static -> const : 1
globally available it -> programs : 1
available it programs -> do : 1
it programs do -> often : 1
programs do often -> consist : 1
do often consist -> of : 1
often consist of -> multiple : 1
consist of multiple -> source : 1
of multiple source -> files : 1
multiple source files -> do : 1
source files do -> these : 1
files do these -> are : 1
do these are -> individually : 1
these are individually -> compiled : 1
are individually compiled -> to : 1
individually compiled to -> files : 1
compiled to files -> usually : 1
to files usually -> have : 1
files usually have -> linking : 1
usually have linking -> all : 1
have linking all -> the : 1
linking all the -> files : 1
all the files -> together : 1
all the files -> in : 1
all the files -> it : 1
the files together -> into : 1
files together into -> a : 1
together into a -> single : 1
into a single -> executable : 1
into a single -> variable : 1
a single executable -> or : 1
single executable or -> library : 1
executable or library -> is : 1
or library is -> then : 1
library is then -> the : 1
library is then -> your : 1
is then the -> last : 1
is then the -> accumulator : 1
is then the -> next : 1
then the last -> the : 1
the last the -> link : 1
the last the -> version : 1
the last the -> function : 1
last the link -> it : 1
the link it -> is : 1
link it is -> considered : 1
it is considered -> an : 1
it is considered -> the : 1
is considered an -> error : 1
considered an error -> if : 1
an error if -> the : 1
error if the -> linker : 1
if the linker -> can : 1
if the linker -> finds : 1
the linker can -> find : 1
linker can find -> the : 1
can find the -> definition : 1
find the definition -> of : 1
the definition of -> one : 1
the definition of -> every : 1
the definition of -> we : 1
definition of one -> specific : 1
of one specific -> symbol : 1
one specific symbol -> for : 1
specific symbol for -> we : 1
symbol for we -> have : 1
for we have -> a : 1
for we have -> to : 1
have a function -> with : 1
have a function -> then : 1
a function with -> a : 1
function with a -> signature : 1
with a signature -> such : 1
a signature such -> two : 1
a signature such -> t : 1
signature such two -> modules : 1
such two modules -> define : 1
two modules define -> the : 1
modules define the -> same : 1
define the same -> which : 1
the same which -> is : 2
the same which -> just : 1
the same which -> do : 1
the same which -> can : 1
the same which -> would : 1
the same which -> one : 1
same which is -> the : 1
same which is -> somewhat : 1
which is the -> right : 1
which is the -> simple : 1
which is the -> current : 1
which is the -> iterate : 1
which is the -> variable : 1
which is the -> error : 1
which is the -> lambda : 1
which is the -> left : 1
which is the -> same : 1
which is the -> item : 1
which is the -> have : 1
which is the -> way : 1
which is the -> problem : 1
is the right -> the : 1
is the right -> declaring : 1
is the right -> a : 1
is the right -> choice : 1
is the right -> that : 1
the right the -> linker : 1
right the linker -> just : 1
the linker just -> roll : 1
linker just roll -> the : 1
just roll the -> it : 1
roll the it -> but : 1
the it but -> most : 1
it but most -> likely : 1
but most likely -> not : 1
most likely not -> what : 1
likely not what -> any : 1
not what any -> programmer : 1
what any programmer -> would : 1
any programmer would -> ever : 1
programmer would ever -> want : 1
would ever want -> to : 1
ever want to -> traditional : 1
want to traditional -> way : 1
to traditional way -> to : 1
traditional way to -> provide : 1
way to provide -> globally : 1
to provide globally -> available : 1
provide globally available -> functions : 1
globally available functions -> is : 1
available functions is -> in : 1
functions is in -> the : 1
is in the -> header : 2
is in the -> buffer : 1
is in the -> output : 1
is in the -> or : 1
is in the -> empty : 1
is in the -> second : 1
in the header -> which : 1
in the header -> file : 1
the header which -> will : 1
header which will -> be : 1
which will be -> included : 1
which will be -> compared : 1
which will be -> put : 1
which will be -> consumed : 1
which will be -> covered : 1
which will be -> the : 1
will be included -> by : 1
be included by -> any : 1
included by any -> module : 1
by any module -> to : 1
any module to -> call : 1
module to call -> the : 1
to call the -> definition : 1
to call the -> function : 1
to call the -> it : 1
to call the -> setup : 1
to call the -> or : 1
call the definition -> of : 1
definition of every -> of : 1
of every of -> those : 1
every of those -> functions : 1
those functions will -> be : 1
functions will be -> then : 1
will be then -> put : 1
be then put -> into : 1
then put into -> these : 1
put into these -> are : 1
into these are -> then : 1
these are then -> linked : 1
are then linked -> together : 1
then linked together -> with : 1
linked together with -> the : 1
together with the -> modules : 1
together with the -> sentence : 1
together with the -> begin : 1
together with the -> transformation : 1
together with the -> parameter : 1
together with the -> object : 1
with the modules -> use : 1
the modules use -> these : 1
modules use these -> this : 1
use these this -> is : 1
these this is -> also : 1
also called the -> definition : 1
also called the -> very : 1
called the definition -> check : 1
the definition check -> out : 1
definition check out -> the : 1
check out the -> following : 3
out the following -> illustration : 1
out the following -> using : 1
out the following -> more : 1
the following illustration -> for : 1
following illustration for -> better : 1
illustration for better -> if : 1
for better if -> this : 1
better if this -> only : 1
if this only -> then : 1
this only then -> it : 1
only then it -> would : 1
then it would -> been : 1
then it would -> be : 1
it would been -> possible : 1
would been possible -> to : 1
been possible to -> libraries : 1
possible to libraries -> are : 1
to libraries are -> very : 1
libraries are very -> handy : 1
are very handy -> because : 1
very handy because -> they : 1
handy because they -> only : 1
because they only -> need : 1
they only need -> to : 1
only need to -> be : 1
only need to -> count : 1
only need to -> include : 1
only need to -> check : 1
only need to -> perform : 1
to be included -> using : 1
be included using -> into : 1
included using into -> any : 1
using into any -> program : 1
into any program -> file : 1
any program file -> and : 1
program file and -> then : 1
file and then -> are : 1
and then are -> immediately : 1
then are immediately -> in : 1
are immediately in -> order : 1
order to use -> libraries : 1
order to use -> the : 1
order to use -> this : 2
order to use -> we : 2
order to use -> exceptions : 1
order to use -> any : 1
to use libraries -> not : 1
use libraries not -> the : 1
libraries not the -> programmer : 1
not the programmer -> must : 1
the programmer must -> also : 1
programmer must also -> adapt : 1
must also adapt -> the : 1
also adapt the -> build : 1
adapt the build -> scripts : 1
the build scripts -> in : 1
build scripts in -> order : 1
scripts in order -> to : 1
order to have -> the : 2
order to have -> a : 1
to have the -> linker : 1
to have the -> most : 1
to have the -> cartesian : 1
to have the -> new : 1
have the linker -> link : 1
the linker link -> the : 1
linker link the -> library : 1
link the library -> modules : 1
the library modules -> together : 1
library modules together -> with : 1
modules together with -> his : 1
together with his -> own : 1
with his own -> module : 1
his own module -> especially : 1
own module especially -> for : 1
module especially for -> libraries : 1
especially for libraries -> with : 1
for libraries with -> only : 1
libraries with only -> very : 1
with only very -> short : 1
only very short -> this : 1
very short this -> is : 1
short this is -> unnecessarily : 1
this is unnecessarily -> such : 1
is unnecessarily such -> can : 1
unnecessarily such can -> be : 1
such can be -> used : 1
can be used -> to : 4
can be used -> with : 2
can be used -> almost : 1
can be used -> in : 2
can be used -> as : 3
can be used -> for : 2
can be used -> if : 1
be used to -> make : 1
be used to -> express : 1
be used to -> implement : 1
be used to -> produce : 1
be used to -> wrap : 1
be used to -> solve : 1
be used to -> do : 1
be used to -> select : 1
be used to -> wake : 1
used to make -> an : 1
to make an -> order : 1
make an order -> to : 1
an order to -> allow : 1
order to allow -> definitions : 1
order to allow -> it : 1
order to allow -> the : 1
to allow definitions -> of : 1
allow definitions of -> the : 1
definitions of the -> same : 1
the same symbol -> in : 1
same symbol in -> different : 1
symbol in different -> if : 1
in different if -> the : 1
different if the -> linker : 1
the linker finds -> multiple : 1
linker finds multiple -> symbols : 1
finds multiple symbols -> with : 1
multiple symbols with -> the : 1
symbols with the -> same : 1
the same but -> they : 1
the same but -> in : 1
the same but -> via : 1
the same but -> later : 1
the same but -> also : 1
same but they -> are : 1
but they are -> declared : 1
but they are -> not : 1
but they are -> really : 1
but they are -> all : 1
they are declared -> it : 1
they are declared -> we : 1
are declared it -> will : 1
declared it will -> just : 1
it will just -> choose : 1
it will just -> emit : 1
it will just -> return : 1
it will just -> its : 1
it will just -> be : 1
will just choose -> the : 1
just choose the -> first : 1
choose the first -> one : 1
the first one -> and : 1
the first one -> accepts : 1
the first one -> tells : 1
the first one -> is : 3
the first one -> that : 1
the first one -> explicitly : 1
the first one -> using : 1
the first one -> to : 1
the first one -> simply : 1
first one and -> trust : 1
one and trust -> that : 1
and trust that -> the : 1
trust that the -> other : 1
that the other -> symbols : 1
the other symbols -> have : 1
other symbols have -> the : 1
symbols have the -> same : 1
have the same -> that : 1
have the same -> this : 1
have the same -> function : 1
have the same -> total : 1
have the same -> or : 1
have the same -> names : 1
have the same -> static : 1
have the same -> if : 1
the same that -> all : 1
the same that -> function : 1
same that all -> equal : 1
that all equal -> inline : 1
all equal inline -> symbols : 1
equal inline symbols -> are : 1
inline symbols are -> defined : 1
symbols are defined -> completely : 1
are defined completely -> equal : 1
defined completely equal -> is : 1
completely equal is -> basically : 1
equal is basically -> a : 1
is basically a -> from : 1
is basically a -> recursive : 1
is basically a -> each : 1
is basically a -> call : 1
is basically a -> meta : 1
is basically a -> time : 1
basically a from -> the : 1
a from the -> our : 1
a from the -> which : 1
a from the -> second : 1
from the our -> recipe : 1
the our recipe -> the : 1
our recipe the -> linker : 1
recipe the linker -> will : 1
the linker will -> find : 1
linker will find -> the : 1
will find the -> symbol : 1
will find the -> first : 1
find the symbol -> in : 1
the symbol in -> every : 1
symbol in every -> module : 1
in every module -> the : 1
every module the -> it : 1
module the it -> would : 1
the it would -> not : 1
it would not -> know : 1
it would not -> be : 1
it would not -> make : 1
would not know -> which : 1
not know which -> one : 1
know which one -> to : 1
which one to -> so : 1
one to so -> it : 1
to so it -> would : 1
so it would -> abort : 1
it would abort -> and : 1
would abort and -> report : 1
abort and report -> an : 1
and report an -> the : 1
report an the -> same : 1
an the same -> applies : 1
the same applies -> to : 3
applies to the -> which : 1
applies to the -> identity : 1
applies to the -> source : 1
applies to the -> as : 1
to the which -> one : 1
to the which -> would : 1
to the which -> results : 1
to the which -> satisfies : 1
to the which -> is : 1
to the which -> we : 1
the which one -> is : 1
which one is -> the : 1
which one is -> more : 1
one is the -> right : 1
one is the -> search : 1
one is the -> fourier : 1
one is the -> part : 1
the right declaring -> both : 1
right declaring both -> the : 1
declaring both the -> symbols : 1
both the symbols -> will : 1
the symbols will -> just : 1
symbols will just -> accept : 1
will just accept -> the : 1
will just accept -> a : 1
just accept the -> first : 1
accept the first -> each : 1
the first each -> symbol : 1
first each symbol -> and : 1
each symbol and -> all : 1
symbol and all -> the : 1
and all the -> the : 1
and all the -> excess : 1
and all the -> threads : 1
and all the -> access : 1
all the the -> only : 1
all the the -> resulting : 1
the the only -> clean : 1
the the only -> difference : 1
the the only -> code : 1
the the only -> important : 1
the only clean -> way : 1
only clean way -> would : 1
clean way would -> be : 1
way would be -> to : 1
would be to -> provide : 1
would be to -> do : 1
be to provide -> this : 1
to provide this -> symbol : 1
provide this symbol -> via : 1
this symbol via -> module : 1
symbol via module -> which : 1
via module which -> would : 1
module which would -> force : 1
which would force -> our : 1
would force our -> library : 1
force our library -> users : 1
our library users -> to : 1
library users to -> include : 1
users to include -> this : 1
to include this -> file : 1
to include this -> and : 1
include this file -> in : 1
this file in -> the : 1
file in the -> linking : 1
file in the -> this : 1
in the linking -> keyword : 1
the linking keyword -> traditionally : 1
linking keyword traditionally -> also : 1
keyword traditionally also -> tells : 1
traditionally also tells -> the : 1
also tells the -> compiler : 1
the compiler that -> it : 2
the compiler that -> we : 1
compiler that it -> can : 1
compiler that it -> iterates : 1
that it can -> the : 1
that it can -> only : 1
that it can -> project : 1
that it can -> forward : 1
that it can -> reschedule : 1
that it can -> be : 1
that it can -> do : 1
it can the -> function : 1
can the function -> call : 1
the function call -> by : 1
the function call -> interface : 1
function call by -> taking : 1
call by taking -> its : 1
by taking its -> implementation : 1
taking its implementation -> and : 1
its implementation and -> directly : 1
implementation and directly -> putting : 1
and directly putting -> it : 1
directly putting it -> where : 1
putting it where -> it : 1
it where it -> was : 1
where it was -> this : 1
it was this -> the : 1
was this the -> calling : 1
this the calling -> code : 1
the calling code -> contains : 1
calling code contains -> one : 1
code contains one -> function : 1
contains one function -> call : 1
one function call -> which : 1
function call which -> can : 1
function call which -> returns : 1
call which can -> often : 1
which can often -> be : 1
can often be -> considered : 1
can often be -> fed : 1
often be considered -> if : 1
be considered if -> the : 1
considered if the -> function : 1
if the function -> the : 1
if the function -> returns : 1
if the function -> we : 1
if the function -> returned : 1
the function the -> resulting : 2
the function the -> vector : 1
function the resulting -> assembly : 1
function the resulting -> map : 1
the resulting assembly -> will : 1
resulting assembly will -> also : 1
assembly will also -> be : 1
will also be -> shorter : 1
will also be -> covered : 1
will also be -> an : 1
also be shorter -> that : 1
be shorter that -> the : 1
shorter that the -> number : 1
that the number -> of : 1
that the number -> is : 1
number of instructions -> the : 1
of instructions the -> function : 1
instructions the function -> saving : 1
the function saving -> and : 1
function saving and -> restoring : 1
saving and restoring -> the : 1
and restoring the -> and : 1
restoring the and -> so : 1
the and so -> is : 1
the and so -> this : 1
the and so -> of : 1
the and so -> they : 1
and so is -> higher : 1
and so is -> a : 1
so is higher -> than : 1
is higher than -> the : 1
is higher than -> we : 1
higher than the -> actual : 1
than the actual -> payload : 1
the actual payload -> if : 1
actual payload if -> the : 1
payload if the -> inlined : 1
if the inlined -> function : 1
the inlined function -> is : 1
inlined function is -> very : 1
function is very -> the : 1
function is very -> versatile : 1
is very the -> binary : 1
very the binary -> size : 1
the binary size -> will : 1
binary size will -> grow : 1
size will grow -> and : 1
will grow and -> this : 1
grow and this -> might : 1
and this might -> sometimes : 1
this might sometimes -> not : 1
might sometimes not -> even : 1
sometimes not even -> lead : 1
not even lead -> code : 1
even lead code -> in : 1
lead code in -> the : 1
code in the -> the : 1
code in the -> this : 1
code in the -> following : 2
code in the -> binary : 1
code in the -> main : 1
compiler will only -> use : 1
will only use -> the : 1
only use the -> keyword : 1
use the keyword -> as : 1
the keyword as -> a : 1
keyword as a -> hint : 1
as a hint -> and : 1
a hint and -> might : 1
hint and might -> eliminate : 1
and might eliminate -> function : 1
might eliminate function -> calls : 1
eliminate function calls -> by : 1
function calls by -> inlining : 1
calls by inlining -> but : 1
by inlining but -> it : 1
inlining but it -> can : 1
but it can -> also : 1
but it can -> be : 1
but it can -> do : 1
it can also -> inline : 1
it can also -> be : 1
can also inline -> some : 1
also inline some -> functions : 1
inline some functions -> the : 1
some functions the -> programmer : 1
functions the programmer -> having : 1
the programmer having -> it : 1
programmer having it -> declared : 1
having it declared -> possible : 1
it declared possible -> workaround : 1
declared possible workaround -> before : 1
possible workaround before -> was : 1
workaround before was -> providing : 1
before was providing -> which : 1
was providing which -> returns : 1
providing which returns -> a : 1
which returns a -> reference : 1
which returns a -> raw : 1
which returns a -> boolean : 1
returns a reference -> to : 2
a reference to -> a : 3
a reference to -> the : 6
a reference to -> its : 2
a reference to -> one : 1
a reference to -> this : 1
reference to a -> foo : 1
reference to a -> vector : 1
reference to a -> printable : 1
to a foo -> static : 1
a foo static -> static : 1
foo static static -> s : 1
static static s -> standard : 1
static s standard -> return : 1
s standard return -> it : 1
standard return it -> is : 1
return it is -> completely : 1
return it is -> a : 2
it is completely -> legal : 1
is completely legal -> to : 1
completely legal to -> include : 1
legal to include -> the : 1
to include the -> header : 1
to include the -> we : 1
to include the -> stl : 1
to include the -> following : 1
to include the -> necessary : 1
include the header -> file : 1
the header file -> in : 1
the header file -> do : 1
header file in -> multiple : 1
file in multiple -> modules : 1
in multiple modules -> but : 1
multiple modules but -> still : 1
modules but still -> getting : 1
but still getting -> access : 1
still getting access -> to : 1
getting access to -> exactly : 1
access to exactly -> the : 1
to exactly the -> same : 1
exactly the same -> instance : 1
exactly the same -> the : 1
exactly the same -> a : 1
exactly the same -> thing : 2
exactly the same -> happens : 1
exactly the same -> way : 1
exactly the same -> function : 2
exactly the same -> they : 1
exactly the same -> which : 1
exactly the same -> other : 1
exactly the same -> strategy : 1
exactly the same -> compared : 1
exactly the same -> numbers : 1
exactly the same -> if : 1
exactly the same -> although : 1
exactly the same -> our : 1
exactly the same -> path : 1
the same instance -> the : 1
same instance the -> object : 1
instance the object -> at : 1
the object at -> the : 1
object at the -> start : 1
at the start -> of : 1
the start of -> program : 1
start of program -> but : 1
of program but -> only : 1
program but only -> on : 1
but only on -> first : 1
only on first -> call : 1
on first call -> of : 1
first call of -> this : 1
first call of -> gets : 1
call of this -> getter : 1
of this getter -> for : 1
this getter for -> some : 1
getter for some -> use : 1
for some use -> this : 1
some use this -> is : 1
use this is -> indeed : 1
use this is -> no : 1
use this is -> what : 1
use this is -> an : 1
this is indeed -> a : 1
is indeed a -> imagine : 1
indeed a imagine -> that : 1
a imagine that -> we : 1
a imagine that -> the : 1
imagine that we -> want : 2
that we want -> the : 1
that we want -> to : 6
we want the -> constructor : 1
we want the -> whole : 1
we want the -> as : 1
we want the -> producers : 1
want the constructor -> of : 1
constructor of the -> globally : 1
constructor of the -> other : 1
constructor of the -> we : 1
of the globally -> available : 1
the globally available -> object : 1
the globally available -> instance : 1
globally available object -> to : 1
available object to -> do : 1
object to do -> something : 1
to do something -> important : 1
do something important -> at : 1
something important at -> as : 1
important at as -> our : 1
at as our -> reciple : 1
as our reciple -> example : 1
our reciple example -> library : 1
reciple example library -> but : 1
example library but -> due : 1
library but due -> to : 1
but due to -> the : 1
due to the -> getter : 1
due to the -> exception : 1
to the getter -> being : 1
the getter being -> called : 1
getter being called -> near : 1
being called near -> the : 1
called near the -> end : 1
near the end -> of : 1
the end of -> the : 17
the end of -> a : 2
the end of -> such : 1
of the it -> is : 3
of the it -> into : 1
of the it -> from : 1
of the it -> tells : 1
of the it -> will : 1
of the it -> then : 1
of the it -> drops : 1
of the it -> negates : 1
the it is -> too : 1
the it is -> a : 1
the it is -> being : 1
the it is -> very : 1
the it is -> inspired : 1
the it is -> sufficient : 1
the it is -> the : 2
the it is -> really : 1
the it is -> kind : 1
the it is -> already : 1
the it is -> indeed : 1
the it is -> possible : 1
the it is -> at : 1
the it is -> however : 1
the it is -> best : 1
it is too -> workaround : 1
is too workaround -> is : 1
too workaround is -> to : 1
workaround is to -> make : 1
is to make -> the : 1
is to make -> every : 1
to make the -> template : 1
to make the -> vector : 1
to make the -> code : 1
to make the -> iterator : 1
to make the -> search : 1
to make the -> output : 1
to make the -> main : 1
to make the -> calculation : 1
to make the -> program : 1
make the template -> so : 1
the template so -> it : 1
template so it -> can : 1
so it can -> profit : 1
so it can -> hardly : 1
so it can -> substitute : 1
so it can -> go : 1
it can profit -> from : 1
can profit from -> the : 1
profit from the -> same : 1
from the same -> rules : 1
from the same -> header : 1
from the same -> interface : 1
the same rules -> as : 1
same rules as -> strategies : 1
rules as strategies -> can : 1
as strategies can -> be : 1
strategies can be -> avoided : 1
can be avoided -> in : 1
be avoided in -> handy : 1
avoided in handy -> helper : 1
in handy helper -> functions : 1
with fold there -> are : 1
fold there are -> variadic : 1
there are variadic -> template : 1
are variadic template -> parameter : 1
variadic template parameter -> which : 1
template parameter which -> enable : 1
parameter which enable -> implementing : 1
which enable implementing -> functions : 1
enable implementing functions -> that : 1
implementing functions that -> many : 1
functions that many -> these : 1
that many these -> parameters : 1
many these parameters -> are : 1
many these parameters -> will : 1
these parameters are -> all : 1
parameters are all -> combined : 1
are all combined -> into : 1
all combined into -> one : 1
combined into one -> expression : 1
into one expression -> in : 1
one expression in -> order : 1
expression in order -> to : 2
order to derive -> the : 1
to derive the -> function : 1
derive the function -> result : 1
the function result -> from : 1
function result from -> this : 1
result from this -> task : 1
from this task -> became : 1
this task became -> really : 1
task became really -> easy : 1
became really easy -> with : 1
really easy with -> as : 1
easy with as -> it : 1
with as it -> comes : 1
as it comes -> with : 1
it comes with -> fold : 1
it comes with -> no : 1
comes with fold -> to : 1
with fold to -> do : 1
fold to do -> implement : 1
to do implement -> a : 4
do implement a -> function : 2
do implement a -> little : 1
do implement a -> program : 1
implement a function -> that : 7
implement a function -> called : 1
implement a function -> object : 2
implement a function -> for : 1
implement a function -> on : 1
implement a function -> overload : 1
a function that -> takes : 3
a function that -> returns : 2
a function that -> accepts : 4
a function that -> counts : 1
a function that -> ought : 1
a function that -> a : 1
a function that -> usually : 1
a function that -> can : 2
a function that -> tries : 1
a function that -> claims : 1
a function that -> prints : 1
a function that -> accept : 1
a function that -> calls : 1
function that takes -> arbitrarily : 1
function that takes -> multiple : 1
function that takes -> a : 1
that takes arbitrarily -> many : 1
takes arbitrarily many -> parameters : 1
arbitrarily many parameters -> and : 1
many parameters and -> returns : 1
parameters and returns -> their : 1
parameters and returns -> auto : 1
parameters and returns -> a : 1
and returns their -> we : 2
returns their we -> define : 1
returns their we -> give : 1
their we define -> its : 1
we define its -> template : 1
define its template -> auto : 1
its template auto -> we : 1
template auto we -> have : 1
template auto we -> return : 1
auto we have -> a : 1
have a parameter -> and : 1
parameter and the -> function : 1
and the function -> all : 1
and the function -> from : 1
and the function -> returns : 1
the function all -> the : 1
function all the -> parameters : 1
all the parameters -> and : 1
all the parameters -> are : 1
the parameters and -> sum : 1
parameters and sum -> them : 1
and sum them -> together : 1
sum them together -> using : 1
them together using -> a : 1
a fold if -> we : 1
fold if we -> use : 1
if we use -> any : 1
if we use -> the : 1
if we use -> multiple : 1
we use any -> operator : 1
use any operator -> in : 1
any operator in -> this : 1
operator in this -> together : 1
operator in this -> can : 1
in this together -> with : 1
this together with -> order : 1
together with order -> to : 1
with order to -> apply : 1
order to apply -> it : 1
to apply it -> to : 1
apply it to -> all : 1
apply it to -> an : 1
apply it to -> we : 1
it to all -> the : 1
to all the -> values : 1
to all the -> items : 1
to all the -> data : 1
to all the -> functions : 1
to all the -> other : 1
to all the -> gray : 1
the values of -> a : 2
the values of -> the : 2
the values of -> into : 1
values of a -> parameter : 1
values of a -> vector : 1
values of a -> and : 1
of a parameter -> we : 1
a parameter we -> need : 1
parameter we need -> to : 1
we need to -> surround : 1
we need to -> define : 4
we need to -> include : 22
we need to -> check : 5
we need to -> do : 4
we need to -> change : 2
we need to -> placement : 1
we need to -> be : 3
we need to -> memorize : 1
we need to -> pop : 1
we need to -> update : 1
we need to -> enumerate : 1
we need to -> make : 2
we need to -> activate : 1
we need to -> find : 1
we need to -> care : 2
we need to -> it : 1
we need to -> transform : 2
we need to -> tell : 1
we need to -> go : 1
we need to -> overload : 2
we need to -> implement : 2
we need to -> fill : 1
we need to -> print : 1
we need to -> convert : 1
we need to -> pass : 1
we need to -> handle : 1
we need to -> read : 1
we need to -> first : 1
we need to -> set : 1
we need to -> return : 1
we need to -> use : 1
we need to -> distinguish : 1
we need to -> build : 1
we need to -> that : 1
we need to -> call : 5
we need to -> teach : 1
we need to -> write : 2
we need to -> know : 2
we need to -> divide : 1
we need to -> declare : 1
we need to -> stop : 1
we need to -> if : 1
we need to -> perform : 1
we need to -> collect : 1
we need to -> adapt : 1
we need to -> paths : 1
we need to -> pay : 1
we need to -> iterate : 1
need to surround -> the : 1
to surround the -> expression : 1
surround the expression -> with : 1
the expression with -> template : 1
expression with template -> auto : 1
with template auto -> return : 1
with template auto -> we : 1
template auto return -> can : 1
auto return can -> now : 1
return can now -> call : 1
return can now -> instantiate : 1
return can now -> begin : 1
can now call -> it : 1
can now call -> the : 1
can now call -> this : 1
now call it -> this : 1
call it this -> int : 1
call it this -> aborts : 1
it this int -> does : 1
this int does -> not : 1
int does not -> only : 1
not only work -> with : 2
only work with -> we : 1
only work with -> such : 1
work with we -> can : 1
work with we -> did : 1
work with we -> will : 1
with we can -> call : 1
with we can -> just : 1
with we can -> combine : 1
with we can -> search : 1
with we can -> set : 1
with we can -> also : 1
we can call -> it : 5
we can call -> both : 1
we can call -> a : 1
we can call -> after : 1
we can call -> this : 3
we can call -> and : 1
can call it -> with : 2
can call it -> and : 1
can call it -> as : 1
can call it -> like : 1
call it with -> implements : 1
call it with -> a : 1
call it with -> an : 1
it with implements -> the : 1
with implements the -> such : 1
implements the such -> a : 1
the such a -> b : 1
such a b -> hello : 1
a b hello -> it : 1
b hello it -> we : 1
hello it we -> just : 1
it we just -> did : 2
it we just -> described : 1
we just did -> was : 2
just did was -> a : 1
just did was -> not : 1
did was a -> application : 1
was a application -> of : 1
a application of -> a : 1
application of a -> binary : 1
of a binary -> operator : 1
a binary operator -> to : 1
binary operator to -> its : 1
operator to its -> this : 1
to its this -> is : 1
its this is -> generally : 1
this is generally -> called : 1
this is generally -> a : 1
is generally called -> comes : 1
generally called comes -> with : 1
called comes with -> help : 1
comes with help -> same : 1
with help same -> less : 1
help same less -> kind : 1
same less kind -> of : 1
less kind of -> expression : 1
kind of expression -> is : 1
of expression is -> called : 1
expression is called -> supports : 1
is called supports -> folding : 1
called supports folding -> parameter : 1
supports folding parameter -> packs : 1
folding parameter packs -> with : 1
parameter packs with -> the : 1
parameter packs with -> why : 1
packs with the -> following : 1
with the following -> binary : 1
with the following -> ones : 1
with the following -> instantiation : 1
with the following -> get : 1
with the following -> which : 1
with the following -> regular : 1
the following binary -> the : 1
the following binary -> auto : 1
following binary the -> in : 1
binary the in -> our : 1
the in our -> example : 1
in our example -> it : 1
in our example -> a : 1
in our example -> use : 1
in our example -> in : 1
our example it -> does : 1
example it does -> not : 1
it does not -> matter : 1
it does not -> support : 1
it does not -> we : 1
it does not -> only : 1
it does not -> contain : 1
it does not -> constrain : 1
it does not -> satisfy : 1
it does not -> return : 1
it does not -> need : 1
it does not -> even : 1
it does not -> accept : 2
it does not -> open : 1
it does not -> impose : 1
it does not -> appear : 1
it does not -> give : 1
it does not -> have : 1
it does not -> use : 1
it does not -> manage : 1
it does not -> do : 1
it does not -> really : 1
does not matter -> if : 1
not matter if -> we : 1
matter if we -> write : 1
if we write -> both : 1
if we write -> or : 1
if we write -> some : 1
if we write -> it : 1
if we write -> then : 1
if we write -> does : 1
we write both -> is : 1
write both is -> a : 1
both is a -> difference : 1
is a difference -> that : 1
a difference that -> may : 1
difference that may -> be : 1
that may be -> relevant : 1
may be relevant -> in : 1
be relevant in -> other : 1
relevant in other -> the : 1
in other the -> dots : 1
other the dots -> are : 1
the dots are -> on : 1
dots are on -> the : 1
are on the -> of : 1
are on the -> it : 1
on the of -> the : 1
the of the -> the : 1
the of the -> hash : 1
the of the -> first : 1
the of the -> bool : 1
the of the -> in : 1
the of the -> code : 1
the of the -> underlying : 1
the of the -> engines : 1
of the the -> fold : 1
of the the -> vector : 1
of the the -> move : 1
of the the -> second : 1
of the the -> next : 2
of the the -> last : 1
of the the -> rest : 1
of the the -> numbers : 1
of the the -> destructor : 1
of the the -> file : 1
the the fold -> is : 1
the fold is -> called : 1
fold is called -> a : 1
is called a -> if : 1
called a if -> they : 1
a if they -> are : 1
if they are -> on : 1
if they are -> complex : 1
if they are -> being : 1
if they are -> it : 1
if they are -> called : 1
if they are -> and : 1
they are on -> the : 1
on the it -> is : 1
is a our -> a : 1
a our a -> unary : 1
our a unary -> left : 1
a unary left -> fold : 1
unary left fold -> expands : 1
left fold expands -> to : 1
fold expands to -> while : 1
expands to while -> a : 1
to while a -> unary : 1
while a unary -> right : 1
a unary right -> fold : 1
unary right fold -> to : 1
right fold to -> depending : 1
fold to depending -> on : 1
to depending on -> the : 1
on the operator -> in : 1
the operator in -> this : 1
the operator in -> the : 1
in this can -> make : 1
this can make -> a : 1
can make a -> when : 1
make a when -> adding : 1
a when adding -> it : 1
when adding it -> does : 1
adding it does -> case : 1
it does case -> someone : 1
does case someone -> calls : 1
case someone calls -> with : 1
someone calls with -> the : 1
calls with the -> variadic : 1
calls with the -> resulting : 1
calls with the -> lock : 1
with the variadic -> parameter : 1
the variadic parameter -> pack : 1
variadic parameter pack -> contains : 1
parameter pack contains -> no : 1
pack contains no -> values : 1
contains no values -> that : 1
no values that -> could : 1
values that could -> be : 1
that could be -> for : 1
that could be -> executed : 1
could be for -> most : 1
be for most -> this : 1
for most this -> is : 1
most this is -> an : 1
this is an -> error : 1
this is an -> version : 1
this is an -> enormously : 1
this is an -> important : 1
this is an -> empty : 1
is an error -> it : 1
an error it -> is : 1
an error it -> to : 1
error it is -> will : 1
it is will -> see : 1
is will see -> this : 1
will see this -> in : 1
see this in -> a : 1
in a we -> then : 1
in a we -> need : 1
in a we -> include : 1
in a we -> wrap : 1
a we then -> need : 2
we then need -> to : 2
then need to -> this : 1
then need to -> call : 1
then need to -> be : 1
need to this -> an : 1
to this an -> error : 1
to this an -> arbitrary : 1
this an error -> or : 1
an error or -> if : 1
error or if -> an : 1
or if an -> empty : 1
if an empty -> sum : 1
an empty sum -> should : 1
empty sum should -> result : 1
sum should result -> in : 1
should result in -> a : 1
should result in -> the : 1
result in a -> specific : 1
result in a -> string : 1
result in a -> function : 1
result in a -> new : 1
in a specific -> the : 1
in a specific -> always : 1
in a specific -> by : 1
a specific the -> obvious : 1
a specific the -> mandelbrot : 1
a specific the -> time : 1
specific the obvious -> idea : 1
the obvious idea -> is : 1
obvious idea is -> that : 1
idea is that -> the : 1
idea is that -> if : 1
idea is that -> publicly : 1
idea is that -> there : 1
that the sum -> of : 1
that the sum -> symbol : 1
the sum of -> nothing : 1
the sum of -> the : 2
the sum of -> all : 2
the sum of -> two : 1
sum of nothing -> is : 1
of nothing is -> is : 1
nothing is is -> how : 1
is is how -> auto : 1
is how auto -> return : 1
how auto return -> evaluates : 1
auto return evaluates -> to : 1
return evaluates to -> and : 1
evaluates to and -> evaluates : 1
to and evaluates -> to : 1
and evaluates to -> folds : 1
evaluates to folds -> with : 1
to folds with -> an : 1
folds with an -> initial : 1
with an initial -> value : 1
an initial value -> are : 1
an initial value -> for : 1
initial value are -> called : 1
value are called -> it : 1
are called it -> works : 1
called it works -> if : 1
called it works -> exactly : 1
it works if -> we : 1
works if we -> write : 1
works if we -> switch : 1
write or but -> this : 1
or but this -> makes : 1
or but this -> section : 1
but this makes -> the : 1
this makes the -> binary : 1
this makes the -> instances : 1
this makes the -> program : 1
this makes the -> compiler : 1
this makes the -> only : 1
makes the binary -> fold : 1
the binary fold -> a : 1
binary fold a -> binary : 1
fold a binary -> fold : 1
a binary fold -> or : 1
a binary fold -> check : 1
binary fold or -> a : 1
fold or a -> binary : 1
or a binary -> fold : 1
binary fold check -> out : 1
fold check out -> the : 1
following using binary -> folds : 1
using binary folds -> in : 1
binary folds in -> order : 1
folds in order -> to : 1
order to implement -> the : 1
order to implement -> we : 1
to implement the -> the : 1
to implement the -> prefix : 1
to implement the -> for : 1
to implement the -> fourier : 1
to implement the -> formula : 1
implement the the -> notion : 1
the the notion -> of : 1
the notion of -> an : 2
the notion of -> tuples : 1
the notion of -> sleeping : 1
notion of an -> element : 1
notion of an -> optional : 1
of an element -> is : 1
an element is -> often : 1
element is often -> this : 1
is often this -> adding : 1
often this adding -> a : 1
this adding a -> to : 1
adding a to -> any : 1
a to any -> number : 1
a to any -> fold : 1
to any number -> changes : 1
any number changes -> which : 1
number changes which -> makes : 1
changes which makes -> an : 1
which makes an -> identity : 1
makes an identity -> because : 1
an identity because -> of : 1
identity because of -> this : 1
because of this -> we : 1
of this we -> can : 2
of this we -> create : 1
of this we -> will : 1
this we can -> add : 1
this we can -> simply : 2
this we can -> abort : 1
this we can -> and : 1
this we can -> do : 2
this we can -> see : 1
this we can -> search : 1
this we can -> write : 1
this we can -> print : 1
this we can -> only : 1
this we can -> elegantly : 1
this we can -> arbitrarily : 1
this we can -> try : 1
this we can -> be : 1
this we can -> ask : 1
this we can -> manage : 1
this we can -> divide : 1
this we can -> get : 1
this we can -> determine : 1
this we can -> give : 1
this we can -> not : 1
we can add -> a : 1
we can add -> arbitrary : 1
we can add -> parallelism : 1
can add a -> to : 1
add a to -> any : 1
to any fold -> expression : 1
any fold expression -> with : 1
fold expression with -> the : 1
expression with the -> operators : 1
with the operators -> or : 1
the operators or -> which : 1
operators or which -> leads : 1
or which leads -> to : 1
leads to the -> result : 1
leads to the -> following : 9
leads to the -> return : 1
leads to the -> terminal : 1
leads to the -> city : 1
leads to the -> use : 1
to the result -> in : 1
the result in -> case : 1
result in case -> there : 1
in case there -> are : 1
case there are -> no : 1
there are no -> parameters : 1
there are no -> different : 1
there are no -> being : 1
there are no -> items : 2
there are no -> active : 1
are no parameters -> in : 1
no parameters in -> the : 1
parameters in the -> parameter : 1
in the parameter -> from : 1
in the parameter -> these : 1
in the parameter -> pack : 1
the parameter from -> a : 1
parameter from a -> mathematical : 1
from a mathematical -> point : 1
a mathematical point -> of : 1
mathematical point of -> this : 1
point of this -> is : 1
point of this -> change : 1
of this is -> from : 1
of this is -> the : 3
of this is -> generally : 1
of this is -> to : 1
of this is -> that : 1
this is from -> an : 1
is from an -> implementation : 1
from an implementation -> we : 1
an implementation we -> need : 1
implementation we need -> to : 1
need to define -> what : 1
need to define -> it : 1
need to define -> to : 1
need to define -> we : 1
need to define -> a : 1
to define what -> is : 1
define what is -> depending : 1
what is depending -> on : 1
is depending on -> what : 1
on what we -> same : 1
on what we -> typed : 1
what we same -> principle : 1
we same principle -> applies : 1
same principle applies -> to : 1
principle applies to -> the : 1
to the identity -> element : 1
the identity element -> is : 1
identity element is -> auto : 1
element is auto -> return : 1
is auto return -> result : 1
is auto return -> i : 1
auto return result -> of : 1
return result of -> is : 1
result of is -> and : 1
of is and -> the : 1
is and the -> result : 1
is and the -> values : 1
is and the -> worst : 1
and the result -> of : 1
and the result -> will : 1
the result of -> without : 1
the result of -> the : 5
the result of -> all : 1
the result of -> removing : 1
the result of -> these : 1
the result of -> each : 1
result of without -> parameters : 1
of without parameters -> is : 1
without parameters is -> logical : 1
parameters is logical -> and : 1
is logical and -> operators : 1
logical and operators -> come : 1
and operators come -> with : 1
operators come with -> identity : 1
come with identity -> folding : 1
with identity folding -> an : 1
identity folding an -> empty : 1
folding an empty -> parameter : 2
an empty parameter -> pack : 2
empty parameter pack -> results : 2
parameter pack results -> in : 2
pack results in -> and : 1
pack results in -> operator : 1
results in and -> folding : 1
results in and -> interesting : 1
in and folding -> an : 1
and folding an -> empty : 1
results in operator -> to : 1
in operator to -> a : 1
operator to a -> certain : 1
to a certain -> expression : 1
a certain expression -> when : 1
certain expression when -> applied : 1
expression when applied -> on : 1
when applied on -> empty : 1
applied on empty -> parameter : 1
on empty parameter -> packs : 1
empty parameter packs -> is : 1
parameter packs is -> the : 1
packs is the -> comma : 1
is the comma -> operator : 1
the comma operator -> which : 1
the comma operator -> in : 1
comma operator which -> then : 1
operator which then -> defaults : 1
which then defaults -> to : 1
then defaults to -> order : 1
defaults to order -> to : 1
order to ignite -> some : 1
to ignite some -> have : 1
ignite some have -> a : 1
some have a -> look : 1
look at some -> more : 1
look at some -> other : 1
at some more -> little : 1
some more little -> helpers : 1
more little helpers -> can : 1
little helpers can -> implement : 1
helpers can implement -> using : 1
can implement using -> this : 1
implement using this -> ranges : 1
using this ranges -> against : 1
this ranges against -> individual : 1
ranges against individual -> about : 1
against individual about -> a : 1
individual about a -> function : 1
about a function -> range : 1
a function range -> contains : 1
function range contains -> least : 1
range contains least -> of : 1
contains least of -> the : 1
least of the -> values : 1
the values we -> provide : 1
the values we -> need : 1
the values we -> obtained : 1
values we provide -> as : 1
we provide as -> variadic : 1
we provide as -> a : 1
we provide as -> the : 2
we provide as -> constructor : 1
provide as variadic -> typename : 1
as variadic typename -> auto : 1
variadic typename auto -> ts : 1
typename auto ts -> return : 1
typename auto ts -> it : 1
typename auto ts -> if : 1
auto ts return -> helper : 1
ts return helper -> function : 1
return helper function -> uses : 1
return helper function -> that : 1
helper function uses -> the : 1
function uses the -> function : 1
uses the function -> from : 1
the function from -> the : 2
function from the -> this : 1
function from the -> stl : 1
from the this -> function : 1
from the this -> looks : 1
from the this -> program : 1
the this function -> takes : 1
the this function -> is : 1
this function takes -> three : 1
this function takes -> two : 1
function takes three -> the : 1
takes three the -> first : 1
three the first -> two : 1
three the first -> step : 1
the first two -> parameters : 1
the first two -> denote : 1
the first two -> lines : 4
the first two -> arguments : 1
the first two -> numbers : 1
the first two -> shared : 1
first two parameters -> are : 1
two parameters are -> the : 1
two parameters are -> is : 1
parameters are the -> and : 1
are the and -> iterators : 1
the and iterators -> of : 1
and iterators of -> some : 1
iterators of some -> iterable : 1
of some iterable -> and : 1
some iterable and -> as : 1
iterable and as -> it : 1
and as it -> takes : 1
as it takes -> a : 1
it takes a -> which : 1
it takes a -> binary : 1
takes a which -> will : 1
a which will -> be : 2
will be compared -> to : 1
be compared to -> all : 1
compared to all -> the : 2
items of the -> then : 1
items of the -> vector : 1
items of the -> range : 1
items of the -> container : 1
of the then -> returns : 1
of the then -> we : 1
of the then -> the : 1
the then returns -> the : 1
then returns the -> number : 1
returns the number -> of : 2
number of all -> the : 1
of all the -> elements : 1
of all the -> items : 1
of all the -> function : 1
of all the -> summands : 1
of all the -> stl : 1
of all the -> numbers : 1
of all the -> of : 1
of all the -> arguments : 1
of all the -> files : 1
the elements within -> the : 1
elements within the -> range : 1
within the range -> equal : 1
within the range -> and : 1
within the range -> from : 1
the range equal -> to : 1
range equal to -> the : 1
equal to the -> third : 1
equal to the -> input : 1
equal to the -> given : 1
equal to the -> comparison : 1
to the third -> our : 1
to the third -> in : 1
the third our -> fold : 1
third our fold -> we : 1
our fold we -> always : 1
fold we always -> feed : 1
we always feed -> and : 1
always feed and -> iterators : 1
feed and iterators -> the : 1
and iterators the -> same : 1
iterators the same -> parameter : 1
the same parameter -> range : 1
same parameter range -> into : 1
parameter range into -> the : 1
range into the -> the : 1
into the the -> third : 1
into the the -> deque : 1
into the the -> second : 1
into the the -> queue : 1
the the third -> each : 1
the the third -> parameter : 1
the third each -> time : 1
third each time -> we : 1
each time we -> put : 1
time we put -> one : 1
we put one -> other : 1
put one other -> parameter : 1
one other parameter -> from : 1
other parameter from -> the : 1
parameter from the -> parameter : 1
from the parameter -> pack : 2
from the parameter -> array : 1
from the parameter -> we : 1
the parameter pack -> into : 4
the parameter pack -> if : 2
the parameter pack -> these : 1
the parameter pack -> and : 1
the parameter pack -> expansion : 1
the parameter pack -> puts : 1
the parameter pack -> the : 1
the parameter pack -> when : 1
parameter pack into -> in : 1
parameter pack into -> individual : 1
parameter pack into -> another : 1
parameter pack into -> the : 1
pack into in -> the : 1
into in the -> the : 1
the function sums -> up : 1
function sums up -> all : 1
sums up all -> the : 3
up all the -> results : 1
up all the -> items : 2
up all the -> we : 1
up all the -> values : 1
all the results -> and : 1
the results and -> returns : 1
results and returns -> it : 1
and returns it -> to : 1
and returns it -> decouples : 1
returns it to -> the : 1
it to the -> can : 1
it to the -> member : 1
it to the -> return : 1
it to the -> auto : 1
it to the -> the : 1
it to the -> end : 1
it to the -> algorithm : 1
it to the -> length : 1
it to the -> output : 1
it to the -> weak : 1
it to the -> discrete : 1
to the can -> use : 1
the can use -> it : 2
can use it -> like : 3
can use it -> to : 1
can use it -> for : 1
use it like -> v : 1
use it like -> returns : 1
use it like -> any : 1
it like v -> returns : 1
like v returns -> returns : 1
v returns returns -> returns : 1
returns returns returns -> returns : 1
returns returns returns -> we : 1
returns returns we -> can : 1
returns we can -> the : 1
returns we can -> order : 1
we can the -> helper : 1
we can the -> approach : 1
we can the -> is : 1
can the helper -> function : 1
the helper function -> is : 1
the helper function -> we : 1
the helper function -> which : 1
helper function is -> quite : 1
function is quite -> can : 1
is quite can -> be : 1
quite can be -> called : 1
can be called -> on : 1
can be called -> like : 1
can be called -> without : 1
can be called -> with : 3
can be called -> to : 1
be called on -> vectors : 1
called on vectors -> or : 1
on vectors or -> even : 1
vectors or even -> on : 1
or even on -> strings : 1
even on strings -> it : 1
on strings it -> would : 1
on strings it -> works : 1
strings it would -> also : 1
it would also -> work : 2
it would also -> be : 1
would also work -> on : 2
also work on -> initializer : 1
also work on -> other : 1
also work on -> lists : 1
work on initializer -> on : 1
on initializer on -> instances : 1
initializer on instances -> of : 1
on instances of -> and : 1
on instances of -> as : 1
instances of and -> so : 1
of and so -> if : 1
of and so -> then : 1
and so if -> multiple : 1
and so if -> the : 1
so if multiple -> insertions : 1
if multiple insertions -> into : 1
multiple insertions into -> a : 1
insertions into a -> set : 1
into a set -> are : 1
a set are -> write : 1
set are write -> a : 1
are write a -> helper : 1
write a helper -> an : 1
write a helper -> not : 1
a helper an -> arbitrary : 1
helper an arbitrary -> number : 1
number of variadic -> parameters : 1
of variadic parameters -> into : 1
variadic parameters into -> an : 1
parameters into an -> and : 1
into an and -> returns : 1
into an and -> use : 1
into an and -> feed : 1
into an and -> got : 1
into an and -> whenever : 1
into an and -> a : 1
an and returns -> if : 1
and returns if -> all : 1
and returns if -> it : 2
and returns if -> they : 1
returns if all -> the : 1
if all the -> insertions : 2
if all the -> parameters : 1
if all the -> function : 1
if all the -> elements : 1
all the insertions -> are : 1
all the insertions -> lead : 1
all the insertions -> were : 1
the insertions are -> typename : 1
insertions are typename -> bool : 1
are typename bool -> ts : 1
typename bool ts -> return : 1
bool ts return -> how : 1
ts return how -> does : 1
return how does -> this : 1
how does this -> the : 1
does this the -> function : 1
this the function -> of : 1
this the function -> is : 1
the function of -> has : 1
the function of -> which : 1
the function of -> values : 1
the function of -> for : 1
the function of -> tells : 1
the function of -> the : 1
function of has -> the : 1
of has the -> following : 1
has the following -> documentation : 1
has the following -> the : 1
the following documentation -> says : 1
following documentation says -> that : 1
documentation says that -> when : 1
says that when -> we : 1
that when we -> try : 1
that when we -> have : 1
that when we -> define : 1
when we try -> to : 1
we try to -> insert : 1
we try to -> for : 1
we try to -> and : 1
we try to -> extract : 1
we try to -> get : 1
we try to -> gather : 1
we try to -> find : 1
we try to -> tamper : 1
we try to -> parse : 1
we try to -> read : 1
we try to -> access : 2
we try to -> the : 1
we try to -> join : 1
try to insert -> an : 1
try to insert -> it : 1
to insert an -> the : 1
insert an the -> function : 1
an the function -> will : 1
an the function -> requires : 1
the function will -> return : 1
the function will -> do : 1
the function will -> find : 1
the function will -> again : 1
function will return -> an : 1
will return an -> and : 1
will return an -> iterator : 1
return an and -> a : 1
an and a -> variable : 1
an and a -> construct : 1
an and a -> the : 1
and a variable -> in : 1
a variable in -> a : 1
a variable in -> order : 1
variable in a -> the : 1
in a the -> value : 1
in a the -> incremented : 1
in a the -> we : 1
a the value -> is : 1
the value is -> the : 1
the value is -> is : 1
value is the -> insertion : 1
value is the -> maximum : 1
is the insertion -> is : 1
is the insertion -> function : 1
the insertion is -> if : 1
insertion is if -> it : 1
is if it -> is : 1
is if it -> then : 1
is the iterator -> points : 1
the iterator points -> to : 4
iterator points to -> the : 8
iterator points to -> is : 1
iterator points to -> a : 1
points to the -> in : 1
points to the -> which : 1
points to the -> artificial : 1
points to the -> position : 1
points to the -> new : 1
points to the -> item : 1
points to the -> rightmost : 1
points to the -> first : 3
points to the -> beginning : 2
points to the -> actual : 1
points to the -> the : 1
points to the -> end : 1
points to the -> middle : 1
points to the -> instance : 1
points to the -> object : 1
points to the -> name : 1
to the in -> the : 2
to the in -> case : 1
the in the -> the : 1
the in the -> latter : 2
the in the -> this : 1
the in the -> last : 1
the in the -> second : 1
the in the -> first : 1
the the iterator -> points : 1
which would with -> the : 1
would with the -> item : 1
with the item -> to : 1
with the item -> in : 1
the item to -> be : 4
item to be -> helper : 1
item to be -> removed : 1
item to be -> function : 1
item to be -> if : 1
to be helper -> function : 1
be helper function -> accesses : 1
helper function accesses -> field : 1
function accesses field -> after : 1
accesses field after -> which : 1
field after which -> is : 1
after which is -> just : 1
which is just -> the : 2
which is just -> a : 2
which is just -> what : 4
is just the -> variable : 1
is just the -> kind : 1
is just the -> numeric : 1
just the variable -> success : 1
the variable success -> or : 1
variable success or -> if : 1
success or if -> all : 1
or if all -> the : 1
the insertions lead -> to : 1
insertions lead to -> in : 1
lead to in -> all : 1
to in all -> the : 1
in all the -> return : 1
in all the -> possible : 1
all the return -> then : 1
the return then -> all : 1
return then all -> the : 1
then all the -> insertions : 1
the insertions were -> the : 1
insertions were the -> fold : 1
were the fold -> expression : 1
fold expression combines -> all : 1
expression combines all -> the : 1
combines all the -> insertion : 1
all the insertion -> results : 1
all the insertion -> happens : 1
the insertion results -> with : 1
insertion results with -> the : 1
results with the -> and : 1
the and returns -> the : 1
and returns the -> can : 1
and returns the -> or : 1
and returns the -> range : 1
and returns the -> complex : 1
and returns the -> nonambiguous : 1
returns the can -> use : 1
it like returns -> true : 1
like returns true -> returns : 1
returns true returns -> because : 1
true returns because -> the : 1
returns because the -> that : 1
because the that -> if : 1
the that if -> we : 1
that if we -> try : 1
that if we -> do : 1
that if we -> for : 1
that if we -> want : 1
that if we -> have : 2
that if we -> feed : 1
that if we -> already : 1
if we try -> to : 2
try to for -> three : 1
to for three -> second : 1
for three second -> element : 1
three second element -> can : 1
second element can -> already : 1
element can already -> not : 1
can already not -> be : 1
already not be -> the : 1
not be the -> fold : 1
be the fold -> will : 1
the fold will -> and : 1
fold will and -> stop : 1
will and stop -> inserting : 1
and stop inserting -> all : 1
stop inserting all -> the : 1
inserting all the -> other : 1
all the other -> returns : 1
all the other -> stl : 1
all the other -> items : 1
all the other -> cout : 1
the other returns -> false : 1
other returns false -> set : 1
returns false set -> contains : 1
false set contains -> without : 1
set contains without -> the : 1
contains without the -> if : 1
without the if -> all : 1
the if all -> the : 1
the parameters are -> within : 1
parameters are within -> a : 1
are within a -> certain : 1
within a certain -> we : 1
a certain we -> can : 1
certain we can -> check : 1
we can check -> if : 1
we can check -> function : 1
can check if -> variable : 1
check if variable -> is : 1
if variable is -> within : 1
variable is within -> some : 1
is within some -> specific : 1
within some specific -> we : 1
some specific we -> can : 1
specific we can -> also : 1
we can also -> do : 2
we can also -> just : 1
we can also -> define : 2
we can also -> kind : 1
we can also -> decide : 1
we can also -> use : 1
we can also -> write : 1
we can also -> concatenate : 1
we can also -> put : 1
we can also -> perform : 1
we can also -> explicitly : 1
we can also -> call : 1
we can also -> express : 1
we can also -> print : 1
can also do -> the : 2
also do the -> same : 1
also do the -> x : 1
do the same -> thing : 3
do the same -> with : 3
do the same -> trick : 1
do the same -> steps : 1
same thing with -> variables : 1
same thing with -> instance : 1
same thing with -> while : 1
same thing with -> the : 1
thing with variables -> using : 1
with variables using -> fold : 1
variables using fold -> typename : 1
using fold typename -> bool : 1
fold typename bool -> t : 1
typename bool t -> ts : 1
bool t ts -> return : 1
t ts return -> ts : 1
ts return ts -> ts : 1
return ts ts -> ts : 1
ts ts ts -> ts : 1
ts ts ts -> does : 1
ts ts does -> tell : 1
ts does tell -> for : 1
does tell for -> every : 1
tell for every -> value : 1
for every value -> of : 2
every value of -> the : 2
value of the -> parameter : 1
value of the -> so : 2
value of the -> last : 1
value of the -> item : 1
value of the -> the : 1
value of the -> it : 1
value of the -> word : 1
value of the -> range : 1
value of the -> input : 1
value of the -> part : 1
value of the -> algorithm : 1
value of the -> numeric : 1
of the parameter -> pack : 1
of the parameter -> out : 1
of the parameter -> and : 1
parameter pack if -> it : 1
parameter pack if -> we : 1
pack if it -> is : 1
it is between -> and : 1
is between and -> and : 1
between and and -> we : 1
and and we -> choose : 1
and and we -> give : 1
and we choose -> the : 1
we choose the -> to : 1
choose the to -> reduce : 1
the to reduce -> all : 1
to reduce all -> the : 1
reduce all the -> boolean : 1
all the boolean -> results : 1
the boolean results -> to : 1
boolean results to -> a : 1
results to a -> single : 1
to a single -> which : 1
a single which -> is : 1
a single which -> actually : 1
single which is -> all : 1
which is all -> the : 1
is all the -> individual : 1
all the individual -> results : 1
the individual results -> are : 1
individual results are -> is : 1
results are is -> how : 1
are is how -> it : 1
how it looks -> in : 1
it looks in -> false : 1
looks in false -> true : 1
in false true -> this : 1
false true this -> function : 1
true this function -> is : 1
this function is -> very : 1
this function is -> the : 3
this function is -> so : 1
this function is -> it : 1
this function is -> which : 1
this function is -> not : 1
this function is -> define : 1
is very versatile -> because : 1
very versatile because -> the : 1
versatile because the -> only : 1
because the only -> requirement : 1
the only requirement -> it : 1
only requirement it -> imposes : 1
requirement it imposes -> on : 1
it imposes on -> the : 1
it imposes on -> space : 1
imposes on the -> types : 1
the types we -> use : 1
the types we -> handle : 1
types we use -> is : 1
we use is -> that : 1
use is that -> they : 1
is that they -> are : 1
is that they -> cannot : 1
that they are -> with : 1
that they are -> sometimes : 1
that they are -> slow : 1
that they are -> which : 1
that they are -> to : 1
that they are -> not : 1
that they are -> printed : 1
that they are -> we : 1
they are with -> the : 1
are with the -> and : 1
the and this -> requirement : 1
the and this -> print : 1
the and this -> they : 1
the and this -> is : 1
and this requirement -> is : 1
this requirement is -> also : 1
requirement is also -> fulfilled : 1
is also fulfilled -> by : 1
also fulfilled by -> for : 1
fulfilled by for -> aaa : 1
by for aaa -> bcd : 1
for aaa bcd -> def : 1
aaa bcd def -> zzz : 1
bcd def zzz -> true : 1
def zzz true -> multiple : 1
zzz true multiple -> items : 1
true multiple items -> into : 1
multiple items into -> a : 1
multiple items into -> an : 1
items into a -> also : 1
items into a -> tree : 1
into a also -> possible : 1
a also possible -> to : 1
also possible to -> write : 1
also possible to -> capture : 1
also possible to -> call : 1
also possible to -> start : 1
also possible to -> not : 1
possible to write -> a : 1
possible to write -> the : 2
possible to write -> buggy : 1
to write a -> helper : 1
to write a -> little : 1
to write a -> lambda : 1
to write a -> buggy : 1
to write a -> program : 4
to write a -> function : 1
to write a -> simple : 1
a helper not -> reduce : 1
helper not reduce -> any : 1
not reduce any -> results : 1
reduce any results -> but : 1
any results but -> processes : 1
results but processes -> multiple : 1
but processes multiple -> actions : 1
processes multiple actions -> of : 1
multiple actions of -> the : 1
actions of the -> same : 1
the same like -> inserting : 1
same like inserting -> items : 1
like inserting items -> into : 1
inserting items into -> an : 1
items into an -> which : 1
items into an -> and : 1
items into an -> accumulator : 1
into an which -> does : 1
into an which -> is : 1
into an which -> has : 1
an which does -> not : 1
which does not -> return : 1
which does not -> have : 1
which does not -> even : 1
which does not -> hurt : 1
which does not -> in : 1
does not return -> any : 1
does not return -> an : 1
does not return -> at : 1
does not return -> we : 2
does not return -> can : 1
does not return -> only : 1
not return any -> results : 1
return any results -> signalizes : 1
any results signalizes -> error : 1
results signalizes error -> typename : 1
signalizes error typename -> void : 1
error typename void -> ts : 1
typename void ts -> int : 1
void ts int -> v : 1
ts int v -> that : 1
int v that -> we : 1
v that we -> use : 1
that we use -> the : 14
that we use -> namespace : 27
that we use -> to : 1
that we use -> using : 20
that we use -> in : 1
that we use -> by : 3
that we use -> a : 1
that we use -> and : 2
that we use -> namespaces : 1
use the comma -> operator : 1
comma operator in -> order : 1
operator in order -> to : 2
order to expand -> the : 2
to expand the -> parameter : 3
expand the parameter -> pack : 1
expand the parameter -> into : 1
expand the parameter -> to : 1
pack into individual -> without : 1
into individual without -> folding : 1
individual without folding -> this : 1
without folding this -> function : 1
folding this function -> also : 1
this function also -> works : 1
function also works -> nicely : 1
function also works -> on : 1
also works nicely -> with : 1
also works nicely -> in : 1
works nicely with -> an : 1
nicely with an -> parameter : 1
with an parameter -> pack : 1
an parameter pack -> because : 1
parameter pack because -> the : 1
pack because the -> has : 1
because the has -> an : 1
the has an -> implicit : 1
has an implicit -> identity : 1
an implicit identity -> which : 1
implicit identity which -> translates : 1
identity which translates -> to : 1
which translates to -> will : 1
translates to will -> cover : 1
to will cover -> the : 1
will cover the -> following : 7
cover the following -> recipes : 6
cover the following -> between : 1
cover the following -> parallelizing : 1
cover the following -> a : 1
the following recipes -> in : 6
the following recipes -> looks : 1
following recipes in -> this : 6
recipes in this -> the : 1
recipes in this -> your : 1
recipes in this -> functions : 1
recipes in this -> items : 1
recipes in this -> a : 1
recipes in this -> and : 1
recipes in this -> book : 2
recipes in this -> we : 2
recipes in this -> it : 1
in this the -> idiom : 1
in this the -> third : 1
in this the -> only : 1
in this the -> microsoft : 1
in this the -> first : 1
in this the -> overhead : 1
this the idiom -> on : 1
sentences in texts -> with : 1
in texts with -> a : 1
texts with a -> personal : 1
list using standard -> library : 1
using standard library -> comes : 1
standard library comes -> with : 1
library comes with -> a : 1
with a wide -> range : 1
a wide range -> of : 1
wide range of -> standard : 1
range of standard -> a : 1
of standard a -> container : 1
standard a container -> always : 1
a container always -> contains : 1
container always contains -> a : 1
always contains a -> collection : 1
contains a collection -> of : 1
a collection of -> data : 1
collection of data -> or : 1
of data or -> the : 1
of data or -> simply : 1
data or the -> cool : 1
or the cool -> thing : 1
the cool thing -> is : 1
cool thing is -> that : 4
thing is that -> containers : 1
thing is that -> whenever : 1
thing is that -> the : 2
thing is that -> we : 3
thing is that -> these : 1
thing is that -> be : 1
thing is that -> none : 1
thing is that -> this : 1
thing is that -> after : 1
is that containers -> can : 1
that containers can -> be : 1
containers can be -> used : 1
be used with -> practically : 1
be used with -> any : 1
be used with -> the : 1
used with practically -> any : 1
with practically any -> kind : 1
practically any kind -> of : 1
any kind of -> so : 1
any kind of -> function : 1
any kind of -> regular : 1
any kind of -> blocking : 1
kind of so -> we : 1
of so we -> just : 1
of so we -> do : 1
of so we -> can : 2
so we just -> need : 1
so we just -> print : 1
we just need -> to : 3
we just need -> one : 1
just need to -> pick : 1
just need to -> implement : 1
just need to -> use : 1
need to pick -> the : 1
to pick the -> right : 1
pick the right -> containers : 1
the right containers -> for : 1
right containers for -> our : 1
containers for our -> specific : 1
for our specific -> the : 1
our specific the -> stl : 1
specific the stl -> gives : 1
the stl gives -> us : 2
stl gives us -> automatically : 1
stl gives us -> this : 1
gives us automatically -> growing : 1
us automatically growing -> and : 1
automatically growing and -> so : 1
growing and so -> this : 1
and so this -> way : 1
and so this -> is : 2
and so this -> we : 2
so this way -> we : 1
this way we -> can : 13
this way we -> get : 4
this way we -> move : 1
this way we -> see : 1
this way we -> made : 1
this way we -> have : 1
way we can -> concentrate : 1
way we can -> then : 1
way we can -> perform : 1
way we can -> avoid : 2
way we can -> print : 2
way we can -> tell : 1
way we can -> use : 1
way we can -> later : 1
way we can -> choose : 1
way we can -> concatenate : 1
way we can -> return : 1
way we can -> call : 1
we can concentrate -> on : 2
can concentrate on -> our : 1
can concentrate on -> the : 1
concentrate on our -> app : 1
concentrate on our -> primary : 1
on our app -> and : 1
our app and -> need : 1
app and need -> to : 1
and need to -> reinvent : 1
need to reinvent -> the : 1
to reinvent the -> knowing : 1
reinvent the knowing -> all : 1
the knowing all -> containers : 1
knowing all containers -> well : 1
all containers well -> is : 1
containers well is -> therefore : 1
well is therefore -> crucial : 1
is therefore crucial -> for : 1
therefore crucial for -> every : 1
crucial for every -> containers : 1
for every containers -> the : 1
every containers the -> stl : 1
containers the stl -> provides : 1
the stl provides -> can : 1
the stl provides -> which : 1
the stl provides -> the : 1
the stl provides -> this : 1
the stl provides -> smart : 1
the stl provides -> good : 1
the stl provides -> different : 1
stl provides can -> be : 1
provides can be -> categorized : 1
can be categorized -> as : 1
be categorized as -> which : 1
categorized as which -> is : 1
as which is -> explained : 1
which is explained -> in : 1
is explained in -> detail : 1
explained in detail -> in : 1
in detail in -> the : 2
detail in the -> subsequent : 1
detail in the -> stl : 1
in the subsequent -> simplest : 1
the subsequent simplest -> way : 1
subsequent simplest way -> to : 1
simplest way to -> store : 1
way to store -> objects : 1
way to store -> and : 1
to store objects -> is : 1
store objects is -> to : 1
objects is to -> put : 1
is to put -> them : 1
to put them -> just : 1
to put them -> to : 1
put them just -> next : 1
them just next -> to : 1
just next to -> each : 2
next to each -> other : 2
next to each -> predicate : 1
to each other -> in : 3
each other in -> one : 1
each other in -> the : 1
each other in -> any : 1
other in one -> large : 1
in one large -> chunk : 1
one large chunk -> of : 1
large chunk of -> such : 1
chunk of such -> memory : 1
of such memory -> can : 1
such memory can -> be : 1
memory can be -> accessed : 1
can be accessed -> in : 1
be accessed in -> a : 1
accessed in a -> random : 1
in a random -> access : 1
a random access -> manner : 1
random access manner -> in : 1
access manner in -> easiest : 1
manner in easiest -> way : 1
in easiest way -> to : 1
easiest way to -> do : 1
way to do -> that : 1
way to do -> a : 1
way to do -> to : 1
to do that -> is : 1
to do that -> if : 1
to do that -> in : 1
do that is -> using : 1
that is using -> which : 1
is using which -> is : 1
using which is -> just : 1
using which is -> what : 1
is just a -> wrapper : 1
is just a -> syntax : 1
is just a -> forward : 1
is just a -> general : 1
is just a -> type : 1
just a wrapper -> around : 1
a wrapper around -> normal : 1
a wrapper around -> another : 1
wrapper around normal -> it : 1
around normal it -> should : 1
normal it should -> always : 1
it should always -> be : 1
should always be -> preferred : 1
always be preferred -> over : 1
be preferred over -> normal : 1
preferred over normal -> because : 1
over normal because -> it : 1
normal because it -> comes : 1
because it comes -> with : 1
comes with no -> runtime : 1
with no runtime -> but : 1
no runtime but -> adds : 1
runtime but adds -> some : 1
but adds some -> comfort : 1
adds some comfort -> and : 1
some comfort and -> just : 1
comfort and just -> as : 1
and just as -> it : 1
just as it -> has : 1
just as it -> copies : 1
as it has -> a : 1
as it has -> the : 1
has a size -> once : 1
a size once -> it : 1
size once it -> comes : 1
once it comes -> into : 1
it comes into -> play : 1
comes into play -> when : 1
into play when -> storage : 1
play when storage -> is : 1
when storage is -> but : 1
storage is but -> with : 1
is but with -> varying : 1
but with varying -> it : 1
with varying it -> uses : 1
varying it uses -> memory : 1
it uses memory -> from : 1
uses memory from -> the : 1
memory from the -> heap : 1
memory from the -> vector : 1
from the heap -> to : 1
the heap to -> store : 1
heap to store -> whenever : 1
to store whenever -> new : 1
store whenever new -> objects : 1
whenever new objects -> are : 1
new objects are -> pushed : 1
objects are pushed -> into : 1
are pushed into -> the : 1
pushed into the -> vector : 1
pushed into the -> output : 1
into the vector -> exceeding : 1
into the vector -> and : 1
the vector exceeding -> its : 1
vector exceeding its -> current : 1
exceeding its current -> it : 1
its current it -> will : 1
current it will -> automatically : 1
it will automatically -> move : 1
will automatically move -> all : 1
automatically move all -> items : 1
move all items -> to : 1
all items to -> a : 1
items to a -> larger : 1
to a larger -> chunk : 1
a larger chunk -> of : 1
larger chunk of -> newly : 1
chunk of newly -> allocated : 1
of newly allocated -> and : 1
newly allocated and -> delete : 1
allocated and delete -> the : 1
and delete the -> old : 1
delete the old -> if : 1
delete the old -> object : 1
the old if -> a : 1
old if a -> new : 1
if a new -> item : 1
a new item -> shall : 1
a new item -> just : 1
new item shall -> be : 2
item shall be -> inserted : 1
item shall be -> for : 1
shall be inserted -> between : 1
be inserted between -> old : 1
inserted between old -> it : 1
between old it -> can : 1
old it can -> even : 1
it can even -> move : 1
it can even -> construct : 1
can even move -> the : 1
even move the -> existing : 1
move the existing -> items : 1
the existing items -> if : 1
the existing items -> need : 1
the existing items -> to : 1
existing items if -> an : 1
items if an -> item : 1
if an item -> somewhere : 1
if an item -> slot : 1
an item somewhere -> in : 1
item somewhere in -> the : 1
somewhere in the -> middle : 3
somewhere in the -> last : 1
somewhere in the -> the : 1
in the middle -> shall : 1
in the middle -> other : 1
in the middle -> of : 1
in the middle -> between : 2
in the middle -> but : 1
in the middle -> has : 1
the middle shall -> be : 1
middle shall be -> the : 1
shall be the -> vector : 1
shall be the -> function : 1
shall be the -> dash : 1
be the vector -> class : 1
the vector class -> will : 1
vector class will -> automatically : 1
class will automatically -> close : 1
will automatically close -> the : 1
automatically close the -> gap : 1
close the gap -> by : 1
the gap by -> moving : 1
gap by moving -> the : 1
by moving the -> other : 1
moving the other -> objects : 1
the other objects -> lots : 1
other objects lots -> of : 1
objects lots of -> objects : 1
lots of objects -> are : 1
of objects are -> at : 1
objects are at -> the : 1
are at the -> front : 1
are at the -> of : 1
at the front -> of : 2
at the front -> or : 1
the front of -> an : 1
the front of -> the : 4
front of an -> leads : 1
of an leads -> to : 1
an leads to -> a : 1
leads to a -> lot : 1
leads to a -> flawless : 1
leads to a -> function : 2
leads to a -> sequence : 1
leads to a -> series : 1
leads to a -> maximized : 1
leads to a -> variadic : 1
leads to a -> shared : 1
leads to a -> call : 1
to a lot -> of : 1
lot of allocations -> in : 1
of allocations in -> order : 1
allocations in order -> to : 1
order to gain -> with : 1
order to gain -> convenience : 1
order to gain -> some : 1
to gain with -> potentially : 1
gain with potentially -> costly : 1
with potentially costly -> object : 1
potentially costly object -> offers : 1
costly object offers -> an : 1
object offers an -> interesting : 1
offers an interesting -> trade : 1
an interesting trade -> off : 1
interesting trade off -> the : 1
trade off the -> objects : 1
off the objects -> are : 1
the objects are -> stored : 1
the objects are -> destroyed : 1
the objects are -> already : 2
objects are stored -> in : 1
are stored in -> chunks : 1
stored in chunks -> of : 1
in chunks of -> contiguous : 1
chunks of contiguous -> but : 1
of contiguous but -> these : 1
contiguous but these -> chunks : 1
but these chunks -> are : 1
these chunks are -> independent : 1
chunks are independent -> of : 1
are independent of -> each : 1
independent of each -> this : 1
of each this -> makes : 1
of each this -> is : 1
each this makes -> it : 1
it very simple -> and : 1
very simple and -> quick : 1
very simple and -> practical : 1
very simple and -> elegant : 1
very simple and -> if : 1
simple and quick -> to : 1
and quick to -> arbitrarily : 1
quick to arbitrarily -> grow : 1
to arbitrarily grow -> the : 1
arbitrarily grow the -> because : 1
grow the because -> objects : 1
the because objects -> in : 1
because objects in -> existing : 1
objects in existing -> chunks : 1
in existing chunks -> can : 1
existing chunks can -> stay : 1
chunks can stay -> where : 1
can stay where -> they : 1
stay where they -> whenever : 1
where they whenever -> a : 1
they whenever a -> new : 1
whenever a new -> chunk : 1
a new chunk -> is : 1
a new chunk -> of : 1
new chunk is -> allocated : 1
chunk is allocated -> and : 1
is allocated and -> put : 1
allocated and put -> at : 1
and put at -> the : 1
put at the -> front : 1
put at the -> right : 1
put at the -> leftmost : 1
the front or -> the : 1
front or the -> end : 1
or the end -> of : 1
of the deque -> stands : 1
of the deque -> and : 1
of the deque -> out : 1
the deque stands -> for : 1
deque stands for -> is : 1
stands for is -> a : 1
for is a -> classical : 1
for is a -> valid : 1
is a classical -> not : 1
a classical not -> and : 1
classical not and -> not : 1
not and not -> if : 1
and not if -> only : 1
not if only -> list : 1
if only list -> traversal : 1
only list traversal -> is : 1
list traversal is -> may : 1
traversal is may -> be : 1
is may be -> more : 1
may be more -> performant : 1
be more performant -> in : 1
more performant in -> both : 1
performant in both -> space : 1
in both space -> and : 1
both space and -> maintenance : 1
space and maintenance -> because : 1
and maintenance because -> it : 1
maintenance because it -> maintains : 1
because it maintains -> only : 1
it maintains only -> list : 1
maintains only list -> item : 1
only list item -> pointers : 1
list item pointers -> in : 1
item pointers in -> one : 1
pointers in one -> lists : 1
in one lists -> can : 1
one lists can -> only : 1
lists can only -> be : 1
only be traversed -> linearly : 1
be traversed linearly -> with : 1
traversed linearly with -> inserting : 1
linearly with inserting -> and : 1
with inserting and -> removing : 1
inserting and removing -> items : 1
and removing items -> at : 1
removing items at -> specific : 1
items at specific -> positions : 1
at specific positions -> can : 1
specific positions can -> be : 1
positions can be -> done : 1
can be done -> in : 2
can be done -> and : 1
can be done -> easily : 1
can be done -> with : 4
can be done -> by : 1
can be done -> via : 1
be done in -> objects : 1
be done in -> various : 1
done in objects -> have : 1
in objects have -> a : 1
objects have a -> natural : 1
have a natural -> order : 1
a natural order -> so : 1
a natural order -> between : 1
natural order so -> that : 1
order so that -> they : 1
so that they -> can : 1
that they can -> be : 2
that they can -> the : 1
they can be -> sorted : 1
they can be -> maintained : 1
they can be -> used : 2
they can be -> profitably : 1
they can be -> plotted : 1
they can be -> visualized : 1
they can be -> printed : 1
can be sorted -> using : 1
be sorted using -> some : 1
sorted using some -> notion : 1
using some notion -> of : 1
some notion of -> the : 1
notion of the -> mathematical : 1
of the mathematical -> they : 1
the mathematical they -> can : 1
mathematical they can -> be : 1
can be maintained -> in : 1
be maintained in -> that : 1
maintained in that -> order : 1
in that order -> using : 1
in that order -> in : 1
that order using -> as : 1
order using as -> the : 1
using as the -> name : 1
as the name -> search : 1
as the name -> can : 1
as the name -> already : 1
the name search -> trees : 1
name search trees -> can : 1
search trees can -> easily : 1
trees can easily -> be : 1
can easily be -> searched : 1
can easily be -> checked : 1
can easily be -> multiple : 1
can easily be -> just : 1
can easily be -> learned : 1
can easily be -> combined : 1
can easily be -> adapted : 1
can easily be -> the : 1
can easily be -> printed : 1
easily be searched -> for : 1
be searched for -> specific : 1
searched for specific -> items : 1
for specific items -> using : 1
specific items using -> a : 1
items using a -> search : 1
using a search -> which : 1
a search which -> allows : 1
search which allows -> search : 1
which allows search -> stl : 1
allows search stl -> provides : 1
search stl provides -> such : 1
stl provides such -> trees : 1
provides such trees -> in : 1
such trees in -> different : 1
trees in different -> where : 1
in different where -> is : 1
different where is -> the : 1
where is the -> simplest : 1
where is the -> fallback : 1
is the simplest -> one : 1
is the simplest -> stl : 1
is the simplest -> unit : 1
the simplest one -> of : 1
the simplest one -> is : 2
simplest one of -> storing : 1
one of storing -> just : 1
of storing just -> sortable : 1
storing just sortable -> objects : 1
just sortable objects -> in : 1
sortable objects in -> a : 1
objects in a -> tree : 1
objects in a -> which : 1
objects in a -> typed : 1
in a tree -> is : 1
a tree is -> different : 1
tree is different -> in : 1
is different in -> that : 1
different in that -> that : 1
in that that -> it : 2
that that it -> stores : 1
that that it -> can : 1
that it stores -> data : 1
that it stores -> characters : 1
it stores data -> in : 1
stores data in -> a : 1
data in a -> pair : 1
in a pair -> consists : 1
in a pair -> as : 1
a pair consists -> of : 1
pair consists of -> a : 2
consists of a -> and : 1
consists of a -> sine : 1
consists of a -> pattern : 1
of a and -> a : 2
of a and -> also : 1
and a the -> search : 1
and a the -> takes : 1
and a the -> user : 1
a the search -> tree : 1
the search tree -> uses : 1
the search tree -> both : 1
search tree uses -> the : 1
tree uses the -> key : 1
uses the key -> part : 1
the key part -> for : 1
key part for -> sorting : 1
part for sorting -> the : 1
for sorting the -> which : 1
sorting the which -> enables : 1
the which enables -> for : 1
the which enables -> us : 2
which enables for -> using : 1
enables for using -> as : 1
for using as -> an : 1
using as an -> as : 1
as an as -> in : 1
an as in -> all : 1
as in all -> key : 1
in all key -> items : 1
all key items -> must : 1
key items must -> only : 1
items must only -> exist : 1
must only exist -> once : 1
only exist once -> in : 1
exist once in -> the : 1
once in the -> whole : 1
in the whole -> and : 1
in the whole -> this : 1
in the whole -> practically : 1
the whole and -> are : 1
the whole and -> iterator : 1
whole and are -> which : 1
and are which -> drop : 1
are which drop -> the : 1
which drop the -> requirement : 1
drop the requirement -> of : 1
the requirement of -> the : 1
requirement of the -> key : 1
of the key -> talking : 1
of the key -> type : 1
the key talking -> about : 1
key talking about -> associative : 1
talking about associative -> search : 1
about associative search -> trees : 1
associative search trees -> are : 1
search trees are -> not : 1
trees are not -> the : 1
are not the -> only : 2
not the only -> way : 2
the only way -> to : 3
only way to -> implement : 1
only way to -> store : 1
only way to -> manipulate : 1
only way to -> put : 1
way to implement -> with : 1
to implement with -> items : 1
implement with items -> can : 1
with items can -> be : 1
items can be -> found : 1
items can be -> but : 1
can be found -> in : 1
be found in -> but : 1
found in but -> they : 1
in but they -> ignore : 1
but they ignore -> the : 1
they ignore the -> natural : 1
ignore the natural -> order : 1
the natural order -> of : 1
natural order of -> the : 1
order of the -> so : 1
order of the -> strings : 1
order of the -> items : 4
order of the -> arguments : 1
order of the -> works : 1
order of the -> a : 1
order of the -> characters : 1
order of the -> one : 1
order of the -> types : 1
of the so -> they : 1
of the so -> we : 3
the so they -> be : 1
the so they -> can : 1
so they be -> easily : 1
they be easily -> traversed : 1
be easily traversed -> in : 1
easily traversed in -> a : 1
traversed in a -> sorted : 1
in a sorted -> the : 2
in a sorted -> and : 1
in a sorted -> then : 1
a sorted the -> of : 1
a sorted the -> rest : 1
sorted the of -> the : 1
of the hash -> table : 1
the hash table -> can : 1
hash table can -> be : 1
table can be -> manipulated : 1
can be manipulated -> by : 1
be manipulated by -> the : 1
manipulated by the -> and : 1
by the and -> the : 1
the and the -> can : 1
the and the -> just : 1
the and the -> which : 2
the and the -> least : 1
the and the -> ones : 1
the and the -> description : 1
the and the -> second : 1
the and the -> third : 1
the and the -> first : 1
the and the -> parts : 1
the and the -> variable : 1
the and the -> binary : 1
the and the -> other : 2
the and the -> prefix : 1
the and the -> members : 1
and the can -> also : 1
the can also -> be : 1
can also be -> chosen : 1
can also be -> used : 3
can also be -> inserted : 1
can also be -> evaluated : 1
can also be -> downloaded : 1
can also be -> useful : 1
can also be -> we : 1
also be chosen -> which : 1
be chosen which -> is : 1
chosen which is -> because : 1
which is because -> the : 1
because the performance -> consumption : 1
the performance consumption -> characteristics : 1
performance consumption characteristics -> depend : 1
consumption characteristics depend -> on : 1
characteristics depend on -> and : 1
depend on and -> have : 1
on and have -> so : 1
and have so -> much : 1
have so much -> interface : 1
so much interface -> in : 1
much interface in -> common : 1
interface in common -> with : 1
in common with -> their : 1
common with their -> and : 1
with their and -> that : 1
their and that -> they : 1
and that they -> can : 1
be used almost -> as : 1
used almost as -> for : 1
almost as for -> the : 1
as for the -> search : 1
as for the -> is : 1
as for the -> result : 1
for the search -> tree : 1
search tree both -> containers : 1
tree both containers -> have : 1
both containers have -> their : 1
containers have their -> and : 1
have their and -> both : 1
their and both -> drop : 1
and both drop -> the : 1
both drop the -> constraint : 1
drop the constraint -> on : 1
the constraint on -> the : 1
constraint on the -> uniqueness : 1
on the uniqueness -> of : 1
the uniqueness of -> the : 1
uniqueness of the -> so : 1
the so we -> can : 3
the so we -> are : 1
the so we -> return : 1
the so we -> use : 1
the so we -> also : 1
the so we -> overload : 1
so we can -> store : 1
so we can -> just : 1
so we can -> catch : 1
so we can -> now : 1
so we can -> indent : 1
so we can -> insert : 1
so we can -> see : 3
so we can -> do : 2
so we can -> guarantee : 1
so we can -> concentrate : 1
so we can -> two : 1
so we can -> use : 2
so we can -> save : 1
so we can -> play : 1
so we can -> put : 1
so we can -> print : 1
so we can -> be : 2
so we can -> finally : 1
so we can -> also : 1
we can store -> multiple : 1
can store multiple -> elements : 1
store multiple elements -> with : 1
multiple elements with -> the : 1
elements with the -> same : 1
the same and -> hash : 1
the same and -> we : 1
the same and -> then : 1
same and hash -> tables : 1
and hash tables -> are : 1
hash tables are -> not : 1
tables are not -> the : 1
to store and -> access : 1
store and access -> as : 1
and access as -> there : 1
access as there -> are : 1
as there are -> also : 1
as there are -> single : 1
as there are -> so : 1
there are also -> and : 1
there are also -> a : 1
there are also -> the : 1
there are also -> certain : 1
are also and -> so : 1
also and so -> sophisticated : 1
and so sophisticated -> can : 1
so sophisticated can -> be : 1
sophisticated can be -> implemented : 1
can be implemented -> using : 1
can be implemented -> in : 2
can be implemented -> with : 2
be implemented using -> the : 1
implemented using the -> more : 1
implemented using the -> other : 1
using the more -> primitive : 1
the more primitive -> and : 1
more primitive and -> the : 1
primitive and the -> stl : 1
and the stl -> does : 1
and the stl -> provides : 2
the stl does -> that : 1
the stl does -> not : 2
stl does that -> with : 1
does that with -> the : 1
that with the -> following : 1
that with the -> of : 1
the following ones -> in : 1
following ones in -> the : 1
ones in the -> form : 1
in the form -> of : 13
in the form -> as : 1
the form of -> container : 1
the form of -> takes : 1
the form of -> a : 4
the form of -> iterator : 1
the form of -> two : 1
the form of -> the : 3
the form of -> an : 2
form of container -> and : 1
of container and -> cool : 1
container and cool -> thing : 1
and cool thing -> is : 1
is that whenever -> we : 1
that whenever we -> need : 1
that whenever we -> write : 1
whenever we need -> such : 1
we need such -> a : 1
need such a -> data : 1
such a data -> we : 1
such a data -> structure : 1
a data we -> can : 1
data we can -> just : 1
data we can -> use : 1
we can just -> pick : 2
we can just -> change : 1
we can just -> use : 2
we can just -> fill : 1
we can just -> wrap : 2
we can just -> write : 2
we can just -> create : 1
we can just -> do : 1
we can just -> print : 1
we can just -> add : 1
can just pick -> such : 1
can just pick -> our : 1
just pick such -> an : 1
pick such an -> when : 1
such an when -> we : 1
an when we -> realize : 1
an when we -> count : 1
when we realize -> that : 1
we realize that -> they : 1
we realize that -> is : 1
we realize that -> the : 1
realize that they -> do : 1
that they do -> not : 2
they do not -> work : 1
they do not -> have : 3
they do not -> necessarily : 1
they do not -> satisfy : 1
they do not -> try : 1
they do not -> need : 1
they do not -> actually : 1
they do not -> contain : 1
do not work -> out : 1
do not work -> with : 1
not work out -> well : 1
work out well -> regarding : 1
out well regarding -> their : 1
well regarding their -> we : 1
regarding their we -> can : 1
their we can -> just : 1
can just change -> a : 1
just change a -> template : 1
change a template -> parameter : 1
a template parameter -> in : 1
a template parameter -> that : 1
template parameter in -> order : 1
parameter in order -> to : 1
order to let -> the : 1
order to let -> them : 2
to let the -> adapter : 1
let the adapter -> use : 1
the adapter use -> a : 1
adapter use a -> different : 1
use a different -> container : 1
a different container -> and : 1
different container and -> in : 1
container and in -> this : 1
and in this -> for : 1
in this for -> that : 1
in this for -> all : 1
this for that -> we : 1
for that we -> can : 1
for that we -> call : 1
that we can -> switch : 1
that we can -> use : 2
that we can -> nicely : 1
that we can -> construct : 1
that we can -> call : 1
that we can -> reset : 1
that we can -> those : 1
that we can -> enable : 1
that we can -> copy : 1
that we can -> give : 1
that we can -> just : 1
we can switch -> the : 1
can switch the -> implementation : 1
switch the implementation -> of : 1
the implementation of -> from : 1
the implementation of -> a : 1
the implementation of -> such : 1
the implementation of -> the : 1
the implementation of -> this : 1
the implementation of -> is : 1
the implementation of -> and : 1
implementation of from -> to : 1
of from to -> the : 1
from to the -> idiom : 1
from to the -> first : 1
from to the -> function : 1
from to the -> other : 1
to the idiom -> on : 1
idiom on lot -> of : 1
on lot of -> novice : 1
lot of novice -> programmers : 2
of novice programmers -> learn : 1
of novice programmers -> think : 1
novice programmers learn -> about : 1
programmers learn about -> that : 1
learn about that -> it : 1
about that it -> basically : 1
about that it -> works : 1
that it basically -> works : 1
it basically works -> like : 1
it basically works -> the : 1
basically works like -> an : 1
works like an -> growing : 1
like an growing -> and : 1
an growing and -> stop : 1
growing and stop -> right : 1
and stop right -> they : 1
stop right they -> only : 1
right they only -> lookup : 1
they only lookup -> its : 1
only lookup its -> documentation : 1
lookup its documentation -> in : 1
its documentation in -> order : 1
documentation in order -> to : 1
how to do -> very : 1
how to do -> but : 1
how to do -> have : 1
how to do -> this : 2
how to do -> we : 1
how to do -> a : 1
how to do -> to : 3
how to do -> that : 1
do very specific -> for : 1
very specific for -> using : 1
specific for using -> stl : 1
for using stl -> containers : 1
using stl containers -> like : 1
stl containers like -> this : 1
containers like this -> will : 1
like this will -> only : 1
this will only -> scratch : 1
will only scratch -> the : 1
only scratch the -> surface : 1
scratch the surface -> of : 1
the surface of -> how : 1
surface of how -> much : 1
of how much -> they : 1
how much they -> help : 1
much they help -> writing : 1
they help writing -> and : 1
help writing and -> all : 1
writing and all -> about : 1
and all about -> removing : 1
all about removing -> items : 1
about removing items -> from : 1
removing items from -> a : 1
removing items from -> the : 1
items from a -> vector : 1
items from a -> course : 1
items from a -> map : 1
items from a -> source : 2
items from a -> this : 1
from a vector -> an : 1
from a vector -> in : 1
a vector an -> item : 1
vector an item -> disappears : 1
an item disappears -> from : 1
item disappears from -> a : 1
disappears from a -> and : 1
from a and -> sits : 1
a and sits -> somewhere : 1
and sits somewhere -> in : 1
sits somewhere in -> the : 1
the middle other -> then : 1
middle other then -> all : 1
other then all -> items : 1
then all items -> right : 1
all items right -> from : 1
items right from -> it : 1
right from it -> must : 1
from it must -> one : 1
it must one -> slot : 1
must one slot -> to : 1
one slot to -> the : 2
slot to the -> task : 1
slot to the -> moving : 1
to the task -> a : 1
the task a -> runtime : 1
task a runtime -> cost : 1
a runtime cost -> within : 1
runtime cost within -> many : 1
cost within many -> novice : 1
within many novice -> programmers : 1
many novice programmers -> will : 1
novice programmers will -> do : 1
programmers will do -> that : 1
will do that -> using : 1
will do that -> in : 1
do that using -> a : 1
do that using -> the : 1
do that using -> which : 1
that using a -> since : 1
that using a -> algorithm : 1
using a since -> it : 1
a since it -> is : 1
since it is -> also : 1
it is also -> not : 5
it is also -> called : 1
it is also -> possible : 2
it is also -> wise : 1
is also not -> really : 2
is also not -> for : 1
is also not -> significantly : 1
is also not -> to : 1
also not really -> a : 1
also not really -> necessary : 1
not really a -> hard : 1
really a hard -> thing : 1
a hard thing -> to : 1
hard thing to -> they : 1
thing to they -> will : 1
to they will -> lot : 1
they will lot -> of : 1
will lot of -> optimization : 1
lot of optimization -> potential : 1
of optimization potential -> while : 1
optimization potential while -> doing : 1
potential while doing -> and : 1
while doing and -> in : 1
doing and in -> the : 1
and in the -> a : 1
and in the -> what : 1
in the a -> hand : 1
in the a -> value : 1
the a hand -> crafted : 1
a hand crafted -> loop : 1
hand crafted loop -> is : 1
crafted loop is -> neither : 1
loop is neither -> nor : 1
is neither nor -> to : 1
is neither nor -> then : 1
neither nor to -> read : 1
nor to read -> than : 1
to read than -> the : 1
to read than -> a : 1
read than the -> stl : 1
than the stl -> which : 1
the stl which -> we : 1
the stl which -> shows : 1
the stl which -> takes : 1
stl which we -> will : 1
which we will -> see : 1
which we will -> increment : 1
which we will -> tokenize : 1
which we will -> search : 1
which we will -> we : 1
which we will -> execute : 1
which we will -> link : 1
which we will -> call : 1
which we will -> feed : 1
which we will -> play : 1
which we will -> use : 1
will see to -> do : 1
see to do -> this : 1
this we are -> filling : 1
this we are -> going : 21
this we are -> using : 1
this we are -> a : 1
this we are -> only : 1
this we are -> implementing : 1
this we are -> containers : 1
this we are -> just : 1
this we are -> pretty : 1
we are filling -> an : 1
are filling an -> instance : 1
filling an instance -> with : 1
an instance with -> some : 2
an instance with -> its : 1
instance with some -> example : 2
with some example -> and : 2
with some example -> int : 3
with some example -> echo : 1
with some example -> fill : 1
some example and -> then : 1
some example and -> implement : 1
example and then -> prune : 1
and then prune -> some : 1
then prune some -> specific : 1
prune some specific -> items : 1
some specific items -> away : 1
specific items away -> from : 1
items away from -> the : 1
away from the -> way : 1
from the way -> we : 1
the way we -> are : 1
way we are -> doing : 1
we are doing -> it : 1
are doing it -> is : 1
doing it is -> considered : 1
is considered the -> way : 1
considered the way -> of : 1
the way of -> removing : 1
way of removing -> multiple : 1
of removing multiple -> items : 1
removing multiple items -> from : 1
multiple items from -> a : 1
from a course -> we : 1
a course we -> need : 1
course we need -> to : 1
need to include -> some : 11
need to include -> the : 4
need to include -> multiple : 1
need to include -> all : 9
need to include -> a : 3
need to include -> iterator : 1
need to include -> everything : 1
need to include -> only : 1
need to include -> necessary : 1
to include some -> headers : 8
to include some -> as : 2
to include some -> we : 1
include some headers -> before : 1
include some headers -> first : 2
include some headers -> is : 1
include some headers -> that : 1
include some headers -> as : 1
include some headers -> we : 1
include some headers -> and : 4
some headers before -> we : 1
headers before we -> do : 1
before we do -> we : 1
we do we -> declare : 1
do we declare -> that : 1
we declare that -> we : 23
declare that we -> are : 3
declare that we -> use : 61
that we are -> using : 5
that we are -> dropping : 1
that we are -> potentially : 1
that we are -> safe : 1
that we are -> out : 1
that we are -> producing : 1
that we are -> going : 1
that we are -> not : 1
we are using -> namespace : 4
we are using -> a : 1
we are using -> the : 1
we are using -> stl : 1
are using namespace -> to : 1
are using namespace -> in : 2
are using namespace -> using : 1
using namespace to -> spare : 1
namespace to spare -> us : 1
to spare us -> some : 9
spare us some -> using : 5
spare us some -> we : 3
spare us some -> typing : 1
us some using -> namespace : 5
some using namespace -> we : 3
some using namespace -> the : 1
some using namespace -> is : 1
using namespace we -> create : 1
using namespace we -> write : 1
using namespace we -> immediately : 1
using namespace we -> tokenize : 1
using namespace we -> define : 3
using namespace we -> reimplement : 1
using namespace we -> want : 1
using namespace we -> will : 1
using namespace we -> implement : 6
using namespace we -> declare : 2
using namespace we -> instantiate : 1
namespace we create -> us : 1
we create us -> a : 1
create us a -> vector : 1
us a vector -> of : 1
vector of integers -> and : 3
vector of integers -> looks : 1
vector of integers -> should : 1
vector of integers -> multiple : 1
of integers and -> fill : 2
of integers and -> a : 1
of integers and -> want : 1
of integers and -> get : 1
integers and fill -> it : 2
and fill it -> with : 4
fill it with -> some : 4
fill it with -> a : 2
fill it with -> data : 1
fill it with -> meaningful : 1
fill it with -> cats : 1
it with some -> example : 2
it with some -> and : 1
it with some -> english : 1
some example int -> v : 2
some example int -> m : 1
some example int -> first : 1
some example int -> const : 1
example int v -> next : 2
example int v -> we : 1
int v next -> step : 2
int v next -> thing : 1
v next step -> is : 2
next step is -> to : 4
next step is -> sorting : 1
next step is -> the : 1
next step is -> lifting : 1
is to remove -> the : 1
to remove the -> what : 1
to remove the -> items : 1
remove the what -> do : 1
the what do -> we : 1
what do we -> there : 1
what do we -> need : 1
do we there -> are : 1
we there are -> multiple : 1
we there are -> several : 1
there are multiple -> remove : 1
are multiple remove -> const : 1
multiple remove const -> auto : 1
remove const auto -> that : 1
const auto that -> was : 1
auto that was -> only : 1
that was only -> one : 1
that was only -> called : 1
was only one -> of : 1
only one of -> the : 1
of the two -> the : 1
of the two -> strings : 1
the two the -> vector : 1
two the vector -> still : 1
the vector still -> has : 1
vector still has -> the : 1
still has the -> same : 1
has the same -> the : 1
has the same -> binary : 1
has the same -> signature : 1
has the same -> look : 1
has the same -> probability : 1
same the next -> line : 1
the next line -> makes : 1
the next line -> shows : 1
the next line -> of : 2
next line makes -> it : 1
line makes it -> actually : 1
makes it actually -> stop : 1
it actually stop -> by : 1
actually stop by -> here : 1
stop by here -> in : 1
by here in -> order : 1
here in order -> to : 1
order to print -> the : 2
order to print -> and : 1
order to print -> accepts : 1
order to print -> for : 1
order to print -> them : 1
order to print -> such : 2
order to print -> we : 2
order to print -> our : 1
order to print -> a : 1
order to print -> it : 1
to print the -> content : 1
to print the -> look : 1
to print the -> fibonacci : 1
to print the -> resulting : 1
to print the -> same : 1
to print the -> date : 1
to print the -> promise : 1
print the content -> to : 1
print the content -> after : 1
print the content -> of : 1
print the content -> on : 1
the content to -> the : 2
content to the -> and : 1
content to the -> function : 1
content to the -> path : 1
to the and -> then : 1
to the and -> the : 3
to the and -> fibit : 1
to the and -> this : 1
the and then -> for : 1
the and then -> return : 1
the and then -> reduce : 1
the and then -> we : 1
and then for -> i : 1
then for i -> cout : 1
for i cout -> i : 2
for i cout -> output : 1
for i cout -> items : 1
i cout i -> cout : 2
i cout i -> now : 1
cout i cout -> remove : 1
cout i cout -> and : 1
i cout remove -> a : 1
cout remove a -> whole : 1
remove a whole -> of : 1
a whole of -> instead : 1
whole of instead -> of : 1
of instead of -> specific : 1
instead of specific -> in : 1
of specific in -> order : 1
specific in order -> to : 1
order to do -> we : 7
order to do -> another : 1
order to do -> all : 1
order to do -> it : 1
to do we -> define : 1
to do we -> wrap : 1
to do we -> iterate : 1
to do we -> the : 1
to do we -> write : 1
to do we -> implement : 1
to do we -> also : 1
to do we -> are : 1
to do we -> can : 1
do we define -> a : 1
we define a -> predicate : 2
we define a -> function : 2
we define a -> main : 1
we define a -> simple : 1
we define a -> type : 1
we define a -> helper : 1
we define a -> a : 1
we define a -> tuple : 1
we define a -> list : 1
we define a -> little : 1
we define a -> class : 1
we define a -> divisor : 1
define a predicate -> function : 1
define a predicate -> which : 1
a predicate function -> which : 1
a predicate function -> and : 2
a predicate function -> as : 1
a predicate function -> instead : 2
a predicate function -> object : 1
a predicate function -> that : 1
predicate function which -> accepts : 1
function which accepts -> a : 1
function which accepts -> the : 1
function which accepts -> one : 1
function which accepts -> an : 1
function which accepts -> items : 1
accepts a number -> as : 1
a number as -> and : 1
number as and -> returns : 1
as and returns -> if : 1
as and returns -> us : 1
as and returns -> an : 1
returns if it -> is : 2
returns if it -> really : 1
it is an -> const : 1
it is an -> such : 1
it is an -> couples : 1
it is an -> therefore : 1
is an const -> auto : 1
an const auto -> odd : 1
const auto odd -> return : 1
auto odd return -> i : 1
odd return i -> we : 1
return i we -> use : 1
return i we -> can : 1
i we use -> the : 1
use the function -> and : 1
use the function -> by : 1
use the function -> which : 1
the function and -> feed : 1
the function and -> see : 1
the function and -> so : 1
the function and -> how : 1
function and feed -> it : 1
and feed it -> with : 3
and feed it -> to : 1
and feed it -> into : 1
feed it with -> the : 2
feed it with -> different : 1
feed it with -> our : 1
feed it with -> items : 1
feed it with -> a : 1
feed it with -> real : 1
it with the -> predicate : 1
it with the -> type : 1
it with the -> following : 1
it with the -> question : 1
it with the -> complex : 1
it with the -> values : 1
it with the -> input : 1
with the predicate -> instead : 1
the predicate instead -> of : 1
predicate instead of -> removing : 1
instead of removing -> in : 1
of removing in -> two : 1
removing in two -> steps : 1
in two steps -> as : 1
two steps as -> we : 1
steps as we -> did : 1
as we did -> we : 1
as we did -> in : 1
we did we -> do : 1
did we do -> it : 1
we do it -> in : 1
we do it -> that : 1
it in odd -> items : 1
in odd items -> are : 1
odd items are -> gone : 1
items are gone -> but : 1
are gone but -> the : 1
gone but the -> is : 1
but the is -> still : 1
the is still -> at : 1
is still at -> the : 1
still at the -> old : 1
at the old -> a : 1
the old a -> last : 1
old a last -> we : 1
a last we -> reduce : 1
last we reduce -> that : 1
we reduce that -> also : 1
reduce that also -> to : 1
that also to -> the : 1
also to the -> actual : 1
also to the -> left : 1
to the actual -> size : 1
to the actual -> function : 1
to the actual -> because : 1
to the actual -> error : 1
to the actual -> part : 1
to the actual -> object : 1
the actual size -> of : 1
actual size of -> the : 1
size of the -> note : 1
size of the -> stored : 1
size of the -> large : 1
size of the -> initial : 1
size of the -> string : 1
size of the -> entry : 1
size of the -> file : 1
of the note -> that : 1
the note that -> this : 1
the note that -> without : 1
note that this -> might : 1
note that this -> is : 1
note that this -> happens : 1
note that this -> will : 1
note that this -> does : 1
note that this -> only : 1
that this might -> lead : 1
that this might -> be : 1
this might lead -> the : 1
might lead the -> vector : 1
lead the vector -> code : 1
the vector code -> to : 1
vector code to -> allocate : 1
code to allocate -> a : 1
to allocate a -> new : 1
allocate a new -> chunk : 1
allocate a new -> signal : 1
new chunk of -> memory : 1
new chunk of -> threw : 1
chunk of memory -> that : 1
chunk of memory -> on : 1
of memory that -> fits : 1
memory that fits -> and : 1
that fits and -> moves : 1
fits and moves -> all : 1
and moves all -> items : 1
moves all items -> from : 1
all items from -> the : 1
all items from -> to : 1
all items from -> a : 1
all items from -> till : 1
from the old -> chunk : 1
from the old -> range : 1
the old chunk -> to : 1
old chunk to -> the : 1
chunk to the -> new : 1
to the new -> print : 1
to the new -> node : 1
to the new -> chunk : 1
to the new -> end : 1
the new print -> the : 1
new print the -> content : 1
the content after -> the : 1
content after the -> second : 1
after the second -> run : 1
after the second -> thread : 1
the second run -> of : 1
second run of -> removing : 1
run of removing -> items : 1
of removing items -> and : 1
removing items and -> for : 1
items and for -> i : 1
items and for -> each : 1
and for i -> cout : 1
i cout and -> running : 1
cout and running -> the : 19
cout and running -> our : 1
cout and running -> yields : 1
and running the -> program : 59
and running the -> go : 1
and running the -> we : 1
and running the -> code : 3
and running the -> project : 1
running the program -> yields : 40
running the program -> leads : 8
running the program -> shows : 3
running the program -> and : 1
running the program -> gives : 3
running the program -> while : 1
running the program -> with : 1
running the program -> first : 1
running the program -> in : 1
running the program -> on : 1
the program yields -> the : 33
the program yields -> us : 6
the program yields -> interesting : 1
program yields the -> following : 33
program yields the -> correct : 1
program yields the -> output : 1
yields the following -> two : 1
yields the following -> nicely : 1
yields the following -> the : 5
yields the following -> we : 4
yields the following -> it : 4
yields the following -> as : 2
yields the following -> terminal : 1
yields the following -> can : 1
yields the following -> shell : 1
yields the following -> which : 5
yields the following -> just : 1
yields the following -> interesting : 1
yields the following -> fooo : 1
yields the following -> all : 1
yields the following -> if : 1
yields the following -> because : 1
yields the following -> in : 1
yields the following -> from : 1
yields the following -> first : 1
yields the following -> and : 1
yields the following -> when : 1
yields the following -> returns : 1
yields the following -> i : 4
following two output -> lines : 1
two output lines -> from : 1
output lines from -> the : 1
lines from the -> two : 1
from the two -> item : 1
from the two -> we : 1
from the two -> containers : 2
from the two -> threads : 1
the two item -> removing : 1
two item removing -> it : 1
item removing it -> became : 1
removing it became -> obvious : 1
it became obvious -> in : 1
became obvious in -> the : 1
obvious in the -> recipe : 1
in the recipe -> is : 1
in the recipe -> code : 1
in the recipe -> from : 1
in the recipe -> after : 1
in the recipe -> multiple : 1
in the recipe -> in : 1
in the recipe -> about : 1
in the recipe -> we : 1
in the recipe -> but : 1
the recipe is -> that : 1
recipe is that -> when : 1
is that when -> removing : 1
is that when -> we : 2
that when removing -> items : 1
when removing items -> from : 1
from the middle -> of : 1
the middle of -> a : 1
the middle of -> an : 1
the middle of -> our : 1
the middle of -> the : 3
middle of a -> they : 1
of a they -> first : 1
a they first -> need : 1
they first need -> to : 1
first need to -> be : 1
first need to -> extract : 1
first need to -> include : 2
first need to -> instantiate : 1
to be then -> at : 1
be then at -> least : 1
then at least -> the : 1
at least the -> functions : 1
least the functions -> we : 1
the functions we -> used : 1
the functions we -> implemented : 1
functions we used -> have : 1
we used have -> this : 1
used have this -> is : 1
have this is -> admittedly : 1
this is admittedly -> but : 1
is admittedly but -> have : 1
admittedly but have -> a : 1
but have a -> closer : 1
but have a -> brief : 1
have a closer -> look : 6
have a closer -> represents : 1
a closer look -> at : 8
closer look at -> it : 1
closer look at -> how : 1
closer look at -> the : 4
closer look at -> other : 1
closer look at -> its : 1
look at it -> to : 1
look at it -> with : 1
look at it -> used : 1
at it to -> make : 1
it to make -> sense : 1
to make sense -> of : 1
make sense of -> these : 1
sense of these -> code : 1
of these code -> which : 1
these code which -> removes : 1
code which removes -> all : 1
which removes all -> values : 1
removes all values -> of : 1
all values of -> from : 1
all values of -> are : 1
all values of -> with : 1
values of from -> the : 1
of from the -> looked : 1
from the looked -> like : 1
the looked like -> auto : 1
looked like auto -> and : 1
like auto and -> functions : 1
auto and functions -> both : 1
and functions both -> accept : 1
functions both accept -> a : 1
both accept a -> vector : 1
both accept a -> thread : 1
accept a vector -> instance : 1
a vector instance -> as : 1
vector instance as -> and : 1
instance as and -> return : 1
as and return -> us : 1
and return us -> which : 1
and return us -> a : 1
return us which -> point : 1
us which point -> to : 1
which point to -> the : 3
point to the -> and : 3
point to the -> beginning : 1
point to the -> element : 2
point to the -> same : 2
point to the -> data : 1
point to the -> item : 1
point to the -> minimum : 1
point to the -> actual : 1
point to the -> individual : 1
point to the -> person : 2
point to the -> now : 1
and the just -> as : 1
the just as -> the : 1
just as the -> upcoming : 1
as the upcoming -> feeding : 1
the upcoming feeding -> these : 1
upcoming feeding these -> and : 1
feeding these and -> the : 1
these and the -> value : 1
and the value -> to : 1
and the value -> is : 1
the value to -> the : 1
the value to -> their : 1
the value to -> auto : 1
to the it -> will : 1
to the it -> prints : 1
to the it -> returns : 1
to the it -> shows : 1
the it will -> move : 1
the it will -> contain : 1
the it will -> work : 1
the it will -> the : 1
it will move -> the : 1
it will move -> its : 1
will move the -> values : 1
move the values -> just : 1
the values just -> like : 1
values just like -> we : 1
just like we -> could : 1
just like we -> did : 1
like we could -> do : 1
we could do -> that : 1
could do that -> with : 1
do that with -> a : 1
do that with -> some : 1
do that with -> c : 1
do that with -> both : 1
that with a -> manually : 1
with a manually -> programmed : 1
a manually programmed -> the : 1
manually programmed the -> algorithm : 1
programmed the algorithm -> will : 1
the algorithm will -> strictly : 1
the algorithm will -> push : 1
algorithm will strictly -> preserve : 1
will strictly preserve -> the : 1
strictly preserve the -> order : 1
preserve the order -> of : 2
the order of -> all : 1
the order of -> the : 8
the order of -> not : 1
the order of -> items : 1
the order of -> list : 1
the order of -> their : 1
order of all -> values : 1
of all values -> while : 1
all values while -> doing : 1
values while doing -> a : 1
while doing a -> quick : 1
doing a quick -> look : 1
a quick look -> at : 1
quick look at -> the : 1
at the illustration -> might : 1
the illustration might -> be : 1
illustration might be -> a : 1
might be a -> bit : 1
might be a -> different : 1
might be a -> horde : 1
be a bit -> in : 1
a bit in -> step : 1
a bit in -> order : 2
bit in step -> there : 1
in step there -> still : 1
step there still -> is : 1
there still is -> a : 1
still is a -> value : 1
is a value -> of : 1
a value of -> and : 1
a value of -> this : 1
value of and -> the : 1
of and the -> vector : 1
of and the -> number : 1
and the vector -> should : 1
and the vector -> of : 1
the vector should -> have : 1
the vector should -> be : 1
vector should have -> become : 1
should have become -> as : 1
have become as -> there : 1
become as there -> were : 1
as there were -> of : 1
there were of -> which : 1
were of which -> all : 1
of which all -> ought : 1
which all ought -> to : 1
all ought to -> be : 1
ought to be -> the : 1
ought to be -> executed : 1
to be the -> and : 1
to be the -> return : 1
to be the -> comma : 1
to be the -> deadlock : 1
be the and -> the : 1
and the which -> were : 1
and the which -> denote : 1
and the which -> is : 1
the which were -> in : 1
which were in -> the : 1
were in the -> initial : 1
in the initial -> are : 1
the initial are -> only : 1
initial are only -> look : 1
are only look -> at : 1
only look at -> all : 1
look at all -> the : 2
look at all -> of : 2
at all the -> which : 1
at all the -> lambda : 1
at all the -> insertion : 1
at all the -> dash : 1
all the which -> are : 1
all the which -> lead : 1
the which are -> within : 1
which are within -> the : 1
are within the -> range : 1
the range and -> which : 1
the range and -> records : 1
the range and -> bundle : 1
range and which -> spans : 1
and which spans -> from : 1
which spans from -> the : 1
spans from the -> iterator : 1
from the iterator -> on : 1
from the iterator -> positions : 1
the iterator on -> the : 1
iterator on the -> the : 1
iterator on the -> next : 1
on the the -> to : 1
on the the -> interface : 1
on the the -> only : 2
on the the -> last : 1
on the the -> function : 1
the the to -> which : 1
the to which -> the : 1
to which the -> iterator : 1
which the iterator -> is : 2
the iterator is -> the : 2
the iterator is -> just : 1
the iterator is -> still : 1
the iterator is -> invalidated : 1
the iterator is -> not : 1
the iterator is -> going : 1
iterator is the -> item : 1
iterator is the -> result : 2
iterator is the -> middle : 1
is the item -> the : 1
is the item -> which : 1
is the item -> we : 1
the item the -> so : 1
the item the -> every : 1
the item the -> end : 1
item the so -> not : 1
the so not -> just : 1
so not just -> concentrating : 1
not just concentrating -> on : 1
just concentrating on -> that : 1
concentrating on that -> region : 1
on that region -> are : 1
that region are -> only : 1
region are only -> the : 1
are only the -> items : 1
only the items -> we : 1
the items we -> realize : 1
the items we -> get : 1
the items we -> are : 1
items we realize -> that : 1
realize that is -> the : 1
is the range -> from : 1
is the range -> is : 1
the range from -> which : 1
the range from -> to : 1
range from which -> all : 1
from which all -> values : 1
which all values -> of : 1
values of are -> is : 1
of are is -> where : 1
are is where -> the : 1
is where the -> call : 1
where the call -> comes : 1
the call comes -> into : 1
call comes into -> we : 1
comes into we -> must : 1
comes into we -> typed : 1
into we must -> tell : 1
we must tell -> the : 1
must tell the -> vector : 1
tell the vector -> that : 1
tell the vector -> to : 1
the vector that -> it : 1
vector that it -> shall : 1
that it shall -> not : 1
it shall not -> consider : 1
shall not consider -> all : 1
not consider all -> items : 1
consider all items -> from : 1
items from to -> to : 1
from to to -> be : 1
to to be -> items : 1
to be items -> of : 1
be items of -> the : 1
the vector any -> this : 1
vector any this -> order : 1
any this order -> is : 1
this order is -> easy : 1
order is easy -> to : 1
is easy to -> follow : 1
is easy to -> switch : 1
is easy to -> look : 1
is easy to -> find : 1
is easy to -> write : 1
is easy to -> see : 1
is easy to -> this : 1
is easy to -> convert : 1
is easy to -> it : 1
easy to follow -> for : 1
to follow for -> the : 1
follow for the -> as : 1
for the as -> it : 1
as it can -> just : 1
as it can -> for : 1
it can just -> point : 1
can just point -> its : 1
just point its -> iterator : 1
point its iterator -> to : 1
its iterator to -> the : 1
iterator to the -> position : 2
iterator to the -> next : 1
iterator to the -> first : 5
iterator to the -> destination : 1
iterator to the -> largest : 1
to the position -> of : 1
to the position -> in : 1
to the position -> where : 1
the position of -> and : 1
the position of -> the : 3
the position of -> a : 1
position of and -> note : 1
of and note -> that : 1
and note that -> was : 1
and note that -> while : 1
and note that -> the : 1
note that was -> the : 1
that was the -> return : 1
was the return -> value : 1
can just use -> that : 1
can just use -> off : 1
can just use -> which : 1
just use that -> the : 1
use that the -> vector : 1
that the vector -> did : 1
that the vector -> really : 1
that the vector -> is : 1
that the vector -> was : 1
the vector did -> more : 1
vector did more -> magic : 1
did more magic -> than : 1
more magic than -> just : 1
magic than just -> moving : 1
than just moving -> an : 1
just moving an -> internal : 1
moving an internal -> if : 1
an internal if -> that : 1
internal if that -> vector : 1
if that vector -> was : 1
that vector was -> a : 1
vector was a -> vector : 1
was a vector -> of : 1
vector of more -> complicated : 1
of more complicated -> it : 1
more complicated it -> would : 1
complicated it would -> have : 1
would have called -> all : 1
have called all -> the : 1
called all the -> destructors : 1
all the destructors -> of : 1
the destructors of -> the : 1
destructors of the -> the : 1
the the vector -> looks : 1
the the vector -> in : 1
the vector looks -> like : 1
vector looks like -> in : 1
looks like in -> step : 1
like in step -> of : 1
in step of -> the : 1
step of the -> considered : 1
of the considered -> the : 1
the considered the -> old : 1
considered the old -> items : 1
the old items -> which : 1
old items which -> are : 1
items which are -> now : 1
which are now -> out : 1
are now out -> of : 1
now out of -> the : 1
out of the -> are : 1
out of the -> vector : 1
out of the -> the : 1
out of the -> map : 1
out of the -> we : 1
out of the -> queue : 1
out of the -> standard : 2
out of the -> box : 1
out of the -> namespace : 1
out of the -> loop : 1
out of the -> input : 1
out of the -> string : 1
out of the -> cout : 1
out of the -> stream : 2
out of the -> tuple : 1
out of the -> control : 1
out of the -> random : 1
out of the -> whenever : 1
out of the -> wait : 1
of the are -> in : 1
the are in -> order : 1
are in order -> to : 1
order to make -> the : 4
order to make -> this : 2
order to make -> them : 1
order to make -> searching : 1
order to make -> it : 2
order to make -> our : 1
order to make -> their : 1
order to make -> a : 1
make the vector -> occupy : 1
the vector occupy -> only : 1
vector occupy only -> as : 1
occupy only as -> much : 1
only as much -> memory : 1
as much memory -> as : 2
much memory as -> it : 1
much memory as -> moves : 1
memory as it -> we : 1
as it we -> make : 1
it we make -> call : 1
we make call -> in : 1
make call in -> the : 1
call in the -> during : 1
in the during -> that : 1
the during that -> it : 1
during that it -> allocates : 1
that it allocates -> exactly : 1
it allocates exactly -> as : 1
allocates exactly as -> much : 1
exactly as much -> memory : 1
memory as moves -> over : 1
as moves over -> all : 1
moves over all -> the : 1
over all the -> items : 2
over all the -> integers : 1
over all the -> possible : 1
over all the -> files : 1
the items and -> deletes : 1
items and deletes -> the : 1
and deletes the -> larger : 1
deletes the larger -> chunk : 1
the larger chunk -> we : 1
larger chunk we -> need : 1
chunk we need -> any : 1
we need any -> step : 1
need any step -> we : 1
any step we -> define : 1
step we define -> a : 1
define a function -> and : 1
define a function -> that : 3
a function and -> use : 1
a function and -> returns : 1
a function and -> captures : 1
function and use -> it : 1
and use it -> with : 1
and use it -> to : 1
use it with -> in : 1
use it with -> the : 1
use it with -> curly : 1
use it with -> if : 1
it with in -> only : 1
with in only -> one : 1
in only one -> this : 1
in only one -> line : 1
one this because -> whatever : 1
this because whatever -> iterator : 1
because whatever iterator -> the : 1
whatever iterator the -> remove : 1
iterator the remove -> function : 1
the remove function -> it : 1
remove function it -> is : 1
function it is -> safe : 1
function it is -> an : 1
function it is -> a : 1
function it is -> pretty : 1
it is safe -> to : 1
is safe to -> be : 1
safe to be -> used : 1
to be used -> in : 1
be used in -> the : 1
be used in -> sections : 1
be used in -> combination : 2
be used in -> this : 1
used in the -> erase : 1
used in the -> old : 1
in the erase -> even : 1
the erase even -> if : 1
erase even if -> odd : 1
even if odd -> was : 1
if odd was -> the : 1
odd was the -> function : 1
was the function -> will : 1
was the function -> easiest : 1
was the function -> of : 1
function will do -> just : 1
function will do -> that : 1
will do just -> and : 1
do just and -> return : 1
just and return -> the : 1
and return the -> a : 1
and return the -> information : 1
return the a -> call : 1
the a call -> like : 1
a call like -> also : 1
call like also -> does : 1
like also does -> hence : 1
also does hence -> it : 1
does hence it -> is : 1
hence it is -> function : 1
it is function -> also : 1
is function also -> works : 1
also works on -> other : 1
works on other -> when : 1
on other when -> used : 1
other when used -> with : 1
when used with -> that : 1
used with that -> it : 1
with that it -> does : 1
with that it -> embodies : 1
with that it -> will : 1
that it does -> not : 6
that it does -> because : 1
that it does -> a : 1
that it does -> indeed : 1
does not support -> the : 1
does not support -> it : 1
not support the -> second : 1
support the second -> step : 1
the second step -> of : 1
second step of -> calling : 1
step of calling -> because : 1
of calling because -> they : 1
calling because they -> do : 1
because they do -> not : 1
do not have -> automatic : 1
do not have -> to : 5
do not have -> any : 1
do not have -> ownership : 1
not have automatic -> size : 1
have automatic size -> just : 1
automatic size just -> because : 1
size just because -> effectively : 1
just because effectively -> only : 1
because effectively only -> moves : 1
effectively only moves -> items : 1
only moves items -> does : 1
moves items does -> not : 1
items does not -> actual : 1
does not actual -> it : 1
not actual it -> can : 1
actual it can -> also : 1
also be used -> on : 1
also be used -> to : 2
be used on -> data : 1
be used on -> strings : 1
be used on -> input : 1
used on data -> structures : 1
on data structures -> such : 1
data structures such -> that : 1
data structures such -> and : 1
structures such that -> do : 1
such that do -> not : 1
that do not -> support : 1
that do not -> members : 1
that do not -> point : 1
that do not -> utilize : 1
that do not -> relate : 1
do not support -> in : 1
not support in -> the : 1
support in the -> array : 1
support in the -> we : 1
in the array -> one : 1
the array one -> could : 1
array one could -> overwrite : 1
one could overwrite -> the : 1
could overwrite the -> values : 1
overwrite the values -> past : 1
the values past -> the : 1
values past the -> new : 1
past the new -> end : 1
the new end -> iterator : 2
the new end -> of : 1
the new end -> till : 1
new end iterator -> with : 1
new end iterator -> and : 1
new end iterator -> of : 1
end iterator with -> sentinel : 1
iterator with sentinel -> values : 1
with sentinel values -> such : 1
sentinel values such -> for : 1
values such for -> for : 1
such for for -> items : 1
for for items -> from : 1
for items from -> an : 1
unsorted in items -> from : 1
in items from -> somewhere : 1
items from somewhere -> in : 1
from somewhere in -> the : 1
middle of an -> takes : 1
of an takes -> this : 1
an takes this -> is : 2
takes this is -> because : 1
takes this is -> the : 1
this is because -> the : 2
this is because -> an : 1
because the resulting -> gap : 1
the resulting gap -> from : 1
resulting gap from -> removing : 1
gap from removing -> an : 1
from removing an -> item : 1
removing an item -> must : 1
an item must -> be : 1
item must be -> filled : 1
must be filled -> by : 1
be filled by -> moving : 1
filled by moving -> all : 1
by moving all -> the : 1
moving all the -> items : 1
the items which -> come : 1
items which come -> after : 1
which come after -> the : 1
come after the -> gap : 1
after the gap -> one : 1
the gap one -> slot : 1
gap one slot -> to : 1
to the moving -> items : 1
the moving items -> around : 1
moving items around -> like : 1
items around like -> which : 1
around like which -> might : 1
like which might -> be : 1
which might be -> expensive : 1
which might be -> the : 1
which might be -> an : 1
might be expensive -> if : 1
be expensive if -> they : 1
expensive if they -> are : 1
they are complex -> very : 1
are complex very -> large : 1
complex very large -> and : 1
very large and -> include : 1
large and include -> many : 1
and include many -> we : 1
include many we -> preserve : 1
many we preserve -> their : 1
we preserve their -> if : 1
preserve their if -> preserving : 1
their if preserving -> the : 1
if preserving the -> order : 1
preserving the order -> is : 1
the order is -> not : 1
order is not -> we : 1
is not we -> can : 4
is not we -> will : 1
is not we -> are : 1
not we can -> optimize : 1
not we can -> do : 1
not we can -> try : 1
not we can -> let : 1
we can optimize -> as : 1
can optimize as -> this : 1
optimize as this -> to : 1
as this to -> do : 1
this to do -> this : 2
this to do -> implement : 1
this to do -> code : 1
this we an -> instance : 1
this we an -> app : 1
we an instance -> with : 1
example and implement -> a : 1
and implement a -> quick : 1
implement a quick -> remove : 1
a quick remove -> which : 1
quick remove which -> removes : 1
remove which removes -> any : 1
which removes any -> item : 1
removes any item -> from : 1
any item from -> a : 1
item from a -> vector : 1
item from a -> with : 1
a vector in -> we : 1
vector in we -> need : 1
in we need -> to : 2
include the we -> define : 1
the we define -> a : 1
the we define -> that : 1
define a main -> function : 1
a main function -> where : 1
a main function -> which : 1
a main function -> in : 1
main function where -> we : 2
function where we -> instantiate : 1
function where we -> we : 1
where we instantiate -> a : 1
instantiate a vector -> with : 1
instantiate a vector -> where : 1
instantiate a vector -> of : 3
instantiate a vector -> for : 1
a vector with -> example : 1
a vector with -> some : 2
vector with example -> int : 1
with example int -> v : 1
is to delete -> the : 1
to delete the -> value : 1
delete the value -> at : 1
the value at -> index : 1
the value at -> the : 1
the value at -> this : 1
value at index -> from : 1
at index from -> zero : 1
index from zero -> of : 1
from zero of -> so : 1
zero of so -> the : 1
of so the -> third : 1
so the third -> number : 1
the third number -> the : 1
third number the -> function : 1
number the function -> we : 1
the function we -> for : 1
the function we -> apply : 1
the function we -> just : 1
the function we -> implemented : 1
the function we -> have : 1
the function we -> need : 1
the function we -> are : 1
the function we -> declare : 1
function we for -> that : 1
we for that -> task : 1
for that task -> is : 1
that task is -> not : 1
task is not -> implemented : 1
is not implemented -> we : 1
not implemented we -> do : 1
implemented we do -> that : 1
we do that -> some : 1
do that some -> steps : 1
that some steps -> we : 1
some steps we -> print : 1
steps we print -> the : 2
we print the -> for : 1
we print the -> new : 2
we print the -> numeric : 1
we print the -> int : 1
we print the -> items : 1
we print the -> whole : 1
we print the -> dereferenced : 1
we print the -> content : 1
we print the -> prompt : 1
we print the -> signal : 1
we print the -> current : 1
we print the -> value : 2
we print the -> with : 1
we print the -> try : 1
we print the -> first : 1
we print the -> contents : 1
we print the -> name : 1
we print the -> file : 1
print the for -> i : 1
the for i -> i : 2
the for i -> we : 1
for i i -> we : 2
for i i -> from : 1
for i i -> sum : 3
for i i -> and : 2
for i i -> can : 1
for i i -> the : 1
for i i -> for : 5
for i i -> cout : 1
for i i -> order : 1
for i i -> i : 2
for i i -> lk : 1
for i i -> return : 1
for i i -> first : 1
i i we -> will : 1
i i we -> have : 1
i i we -> can : 1
i we will -> delete : 1
we will delete -> another : 1
will delete another -> it : 1
delete another it -> the : 1
another it the -> value : 1
it the value -> and : 1
the value and -> say : 1
the value and -> so : 1
value and say -> we : 1
and say we -> know : 1
say we know -> its : 1
we know its -> we : 1
know its we -> will : 1
its we will -> which : 1
we will which -> accepts : 1
will which accepts -> a : 1
accepts a range -> and : 1
accepts a range -> as : 1
accepts a range -> of : 1
a range and -> a : 2
a range and -> two : 1
a range and -> the : 1
range and a -> and : 1
range and a -> all : 1
range and a -> comparison : 4
and a and -> then : 1
and a and -> print : 1
a and then -> searches : 1
a and then -> mutex : 1
a and then -> iterated : 1
and then searches -> for : 1
then searches for -> the : 1
searches for the -> it : 1
for the it -> returns : 1
it returns us -> an : 1
it returns us -> a : 2
it returns us -> the : 2
returns us an -> pointing : 1
returns us an -> iterator : 2
us an pointing -> to : 1
an pointing to -> the : 1
pointing to the -> we : 1
pointing to the -> right : 1
pointing to the -> iterator : 1
pointing to the -> lowest : 1
pointing to the -> highest : 1
pointing to the -> old : 1
pointing to the -> the : 1
pointing to the -> substring : 1
pointing to the -> middle : 1
pointing to the -> new : 1
pointing to the -> beginning : 1
pointing to the -> then : 1
pointing to the -> object : 2
to the we -> will : 1
to the we -> need : 2
to the we -> provide : 1
to the we -> want : 1
to the we -> this : 1
the we will -> same : 1
the we will -> get : 1
the we will -> see : 2
the we will -> simple : 1
we will same -> but : 1
will same but -> this : 1
same but this -> is : 1
but this is -> an : 1
but this is -> also : 1
but this is -> not : 1
is an version -> of : 1
an version of -> the : 1
version of the -> one : 1
version of the -> which : 1
version of the -> it : 1
version of the -> then : 1
version of the -> program : 2
version of the -> documentation : 1
of the one -> which : 1
of the one -> class : 1
the one which -> accepts : 1
the one which -> is : 1
one which accepts -> it : 1
which accepts it -> is : 1
accepts it is -> also : 1
accepts it is -> very : 1
also not for -> i : 1
not for i -> i : 1
i i from -> the : 1
i from the -> two : 1
the two we -> are : 1
the two we -> surround : 1
two we are -> so : 1
we are so -> implement : 1
are so implement -> that : 1
so implement that -> they : 1
implement that they -> should : 1
that they should -> be : 1
they should be -> at : 1
should be at -> least : 1
be at least -> declared : 1
at least declared -> before : 1
least declared before -> the : 1
declared before the -> main : 1
before the main -> so : 1
the main so -> just : 1
main so just -> define : 1
so just define -> them : 1
just define them -> both : 1
define them both -> the : 1
them both the -> functions : 1
both the functions -> accept : 1
the functions accept -> a : 1
functions accept a -> reference : 1
functions accept a -> which : 1
accept a reference -> to : 1
to a vector -> of : 1
to a vector -> can : 1
vector of our -> its : 1
of our its -> so : 1
our its so -> we : 1
its so we -> leave : 1
so we leave -> that : 1
we leave that -> open : 1
leave that open -> what : 1
that open what -> kind : 1
open what kind -> of : 1
what kind of -> vector : 1
what kind of -> iterator : 1
what kind of -> data : 1
what kind of -> object : 1
what kind of -> scenario : 1
what kind of -> engine : 1
what kind of -> items : 1
kind of vector -> the : 1
of vector the -> user : 1
vector the user -> will : 1
the user will -> come : 1
the user will -> know : 1
user will come -> up : 1
will come up -> for : 1
come up for -> a : 1
up for a -> vector : 1
for a vector -> of : 1
vector of the -> first : 1
of the first -> function : 1
of the first -> billionaire : 1
of the first -> define : 1
of the first -> value : 1
of the first -> iterator : 2
of the first -> and : 1
of the first -> the : 1
of the first -> future : 1
of the first -> file : 1
the first function -> we : 1
the first function -> accepts : 1
the first function -> shall : 1
first function we -> used : 1
function we used -> accepts : 1
we used accepts -> which : 1
used accepts which -> are : 1
accepts which are -> so : 1
which are so -> the : 1
are so the -> interface : 1
so the interface -> looks : 1
the interface looks -> like : 1
interface looks like -> the : 1
looks like the -> template : 1
looks like the -> following : 1
looks like the -> alphabetic : 1
looks like the -> is : 1
looks like the -> next : 1
looks like the -> transformation : 1
looks like the -> k : 1
looks like the -> initial : 1
looks like the -> restoring : 1
looks like the -> we : 1
looks like the -> consumer : 1
looks like the -> i : 1
like the template -> void : 1
the template void -> comes : 1
template void comes -> the : 1
void comes the -> meat : 1
comes the meat -> of : 1
the meat of -> the : 1
meat of the -> do : 1
of the do -> we : 1
of the do -> that : 1
the do we -> remove : 1
do we remove -> the : 1
we remove the -> item : 1
remove the item -> quickly : 1
the item quickly -> without : 1
item quickly without -> moving : 1
quickly without moving -> too : 1
without moving too -> many : 1
moving too many -> we : 1
too many we -> simply : 1
many we simply -> take : 1
we simply take -> the : 1
simply take the -> value : 1
take the value -> of : 1
the value of -> the : 3
the value of -> variable : 1
the value of -> its : 1
the value of -> we : 1
the value of -> this : 1
the value of -> an : 1
the value of -> discrete : 1
of the last -> item : 1
of the last -> two : 1
of the last -> and : 1
of the last -> while : 1
of the last -> both : 1
the last item -> in : 1
the last item -> of : 1
the last item -> has : 1
the last item -> is : 1
the last item -> to : 1
the last item -> so : 1
last item in -> the : 1
in the vector -> and : 3
in the vector -> used : 1
in the vector -> should : 1
in the vector -> because : 1
in the vector -> without : 1
in the vector -> of : 1
the vector and -> use : 1
the vector and -> see : 1
the vector and -> then : 1
the vector and -> summing : 1
the vector and -> got : 1
the vector and -> create : 1
the vector and -> the : 1
vector and use -> it : 1
use it to -> overwrite : 2
use it to -> let : 1
use it to -> sort : 1
use it to -> search : 1
use it to -> orchestrate : 1
it to overwrite -> the : 1
it to overwrite -> all : 1
to overwrite the -> item : 1
overwrite the item -> which : 1
overwrite the item -> to : 1
the item which -> shall : 1
the item which -> we : 2
the item which -> is : 1
item which shall -> be : 1
which shall be -> we : 1
which shall be -> removed : 1
which shall be -> the : 1
which shall be -> demands : 1
which shall be -> two : 1
shall be we -> cut : 1
be we cut -> off : 1
we cut off -> the : 2
cut off the -> last : 2
off the last -> item : 1
off the last -> element : 1
off the last -> added : 1
last item of -> the : 1
item of the -> these : 1
item of the -> vector : 1
of the these -> are : 1
of the these -> cases : 1
the these are -> the : 1
these are the -> two : 1
these are the -> size : 1
these are the -> parts : 1
these are the -> type : 1
these are the -> most : 1
are the two -> we : 1
two we surround -> this : 1
we surround this -> code : 1
surround this code -> with : 1
this code with -> a : 1
code with a -> little : 1
with a little -> sanity : 1
with a little -> helper : 1
a little sanity -> if : 1
little sanity if -> the : 1
sanity if the -> index : 1
if the index -> value : 1
if the index -> number : 1
the index value -> is : 1
index value is -> obviously : 1
value is obviously -> out : 1
is obviously out -> of : 1
obviously out of -> the : 1
the vector we -> do : 1
vector we do -> the : 1
we do the -> code : 1
we do the -> same : 2
we do the -> new : 1
we do the -> the : 1
do the code -> for : 1
the code for -> crash : 1
the code for -> word : 1
the code for -> a : 1
the code for -> an : 1
code for crash -> on : 1
for crash on -> an : 1
crash on an -> empty : 1
on an empty -> if : 1
on an empty -> instance : 1
an empty if -> other : 1
an empty if -> it : 1
empty if other -> implementation : 1
if other implementation -> of : 1
other implementation of -> works : 1
implementation of works -> instead : 1
of works instead -> of : 1
works instead of -> accepting : 1
instead of accepting -> a : 1
of accepting a -> numeric : 1
accepting a numeric -> it : 1
a numeric it -> accepts : 1
numeric it accepts -> an : 1
it accepts an -> iterator : 1
it accepts an -> function : 1
it accepts an -> item : 1
it accepts an -> argument : 1
accepts an iterator -> obtaining : 1
an iterator obtaining -> its : 1
iterator obtaining its -> type : 1
obtaining its type -> in : 1
its type in -> a : 1
type in a -> generic : 1
type in a -> for : 1
in a generic -> manner : 1
in a generic -> sum : 1
in a generic -> include : 1
a generic manner -> is : 1
generic manner is -> not : 1
manner is not -> complicated : 1
is not complicated -> because : 1
not complicated because -> stl : 1
complicated because stl -> containers : 1
because stl containers -> already : 1
stl containers already -> define : 1
containers already define -> such : 1
already define such -> template : 1
define such template -> void : 1
such template void -> typename : 1
template void typename -> we : 1
void typename we -> the : 1
typename we the -> at : 1
we the at -> which : 1
the at which -> the : 3
at which the -> iterator : 1
at which the -> second : 1
at which the -> fibonacci : 1
iterator is just -> as : 1
iterator is just -> a : 1
is just as -> in : 1
just as in -> the : 2
just as in -> this : 1
as in the -> other : 1
as in the -> previous : 1
as in the -> haskell : 1
as in the -> fixed : 1
as in the -> search : 1
as in the -> preceding : 1
in the other -> we : 1
in the other -> zip : 1
the other we -> it : 1
other we it -> by : 1
we it by -> the : 1
it by the -> last : 1
it by the -> loop : 1
by the last -> element : 1
the last element -> in : 1
the last element -> from : 1
last element in -> the : 1
element in the -> because : 1
element in the -> input : 1
in the because -> we : 1
in the because -> it : 1
the because we -> are : 1
the because we -> had : 1
because we are -> handling : 1
because we are -> removing : 1
because we are -> going : 3
because we are -> not : 1
we are handling -> not : 1
are handling not -> a : 1
handling not a -> numeric : 1
not a numeric -> but : 1
a numeric but -> an : 1
numeric but an -> iterator : 1
but an iterator -> this : 1
an iterator this -> we : 1
iterator this we -> need : 1
this we need -> to : 1
need to check -> a : 1
need to check -> if : 1
need to check -> the : 1
need to check -> is : 1
need to check -> and : 1
need to check -> it : 1
to check a -> bit : 1
check a bit -> differently : 1
a bit differently -> if : 1
a bit differently -> to : 1
bit differently if -> the : 1
differently if the -> iterator : 1
if the iterator -> position : 1
if the iterator -> is : 1
the iterator position -> is : 1
iterator position is -> it : 1
iterator position is -> the : 1
position is it -> points : 1
is it points -> to : 1
it points to -> the : 1
it points to -> immediately : 1
it points to -> still : 1
to the artificial -> end : 1
the artificial end -> we : 1
artificial end we -> are : 1
end we are -> not : 1
we are not -> allowed : 2
we are not -> even : 1
we are not -> going : 5
we are not -> here : 1
we are not -> merging : 1
we are not -> printing : 1
we are not -> we : 1
we are not -> interested : 1
we are not -> recursively : 1
are not allowed -> to : 2
not allowed to -> dereference : 1
not allowed to -> access : 1
allowed to dereference -> if : 1
to dereference if -> that : 1
dereference if that -> if : 1
if that if -> we : 1
if we do -> the : 1
if we do -> not : 2
if we do -> something : 1
if we do -> one : 1
same thing as -> overwrite : 1
same thing as -> but : 1
same thing as -> the : 1
thing as overwrite -> the : 1
as overwrite the -> item : 1
to be removed -> with : 1
to be removed -> or : 1
be removed with -> the : 2
removed with the -> value : 1
removed with the -> item : 1
with the value -> of : 1
with the value -> from : 1
with the value -> these : 1
of the item -> from : 1
of the item -> to : 2
of the item -> movement : 1
the item from -> the : 1
item from the -> last : 1
item from the -> following : 1
item from the -> set : 1
item from the -> this : 1
from the last -> we : 2
from the last -> place : 1
from the last -> recipe : 1
the last we -> cut : 1
the last we -> learned : 5
the last we -> print : 1
the last we -> can : 2
the last we -> are : 1
the last we -> visited : 1
the last we -> could : 1
the last we -> see : 1
the last we -> will : 1
the last we -> already : 1
the last we -> implemented : 1
last we cut -> off : 1
last element from -> the : 1
element from the -> compiling : 1
from the compiling -> and : 1
the compiling and -> running : 1
compiling and running -> the : 3
the program leads -> to : 8
program leads to -> the : 8
program leads to -> a : 1
to the following -> it : 1
to the following -> auto : 1
to the following -> error : 1
to the following -> number : 1
to the following -> the : 2
to the following -> pseudo : 1
to the following -> which : 2
to the following -> diagram : 1
to the following -> in : 1
to the following -> at : 1
to the following -> seconds : 1
to the following -> alternative : 1
the following it -> function : 1
the following it -> when : 1
the following it -> order : 1
the following it -> program : 2
the following it -> contains : 1
the following it -> just : 1
following it function -> removes : 1
it function removes -> items : 1
function removes items -> pretty : 1
removes items pretty -> quickly : 1
items pretty quickly -> without : 1
pretty quickly without -> touching : 1
quickly without touching -> too : 1
without touching too -> many : 1
touching too many -> other : 1
too many other -> it : 1
many other it -> does : 1
other it does -> this : 1
in a relatively -> creative : 1
a relatively creative -> it : 1
relatively creative it -> kind : 1
creative it kind -> of : 1
it kind of -> the : 1
it kind of -> works : 1
kind of the -> which : 1
kind of the -> and : 1
of the which -> shall : 1
of the which -> qualified : 1
of the which -> automatically : 1
of the which -> this : 1
of the which -> is : 1
of the which -> makes : 1
the which shall -> be : 2
shall be removed -> with : 1
the item in -> the : 2
in the although -> the : 1
the although the -> last : 1
although the last -> item : 1
last item has -> to : 1
item has to -> the : 1
has to the -> actually : 1
to the actually -> selected : 1
the actually selected -> it : 1
actually selected it -> is : 1
selected it is -> in : 1
it is in -> a : 1
it is in -> normal : 1
it is in -> the : 1
is in a -> removing : 1
in a removing -> the : 1
a removing the -> last : 1
removing the last -> item : 1
last item is -> the : 1
item is the -> size : 1
item is the -> same : 1
is the size -> just : 1
the size just -> needs : 1
size just needs -> to : 1
just needs to -> be : 1
to be shrunk -> down : 1
be shrunk down -> by : 1
shrunk down by -> one : 1
down by one -> and : 1
by one and -> no : 1
one and no -> items : 1
and no items -> are : 1
no items are -> moved : 1
items are moved -> during : 1
items are moved -> to : 1
are moved during -> that : 1
moved during that -> have : 1
during that have -> a : 1
that have a -> look : 1
at the following -> helps : 1
at the following -> which : 2
at the following -> where : 1
at the following -> diagram : 1
at the following -> step : 1
at the following -> what : 1
at the following -> that : 1
the following helps -> this : 1
following helps this -> in : 1
helps this in -> the : 1
this in the -> recipe : 1
this in the -> form : 1
this in the -> we : 1
this in the -> single : 1
the recipe code -> look : 1
the recipe code -> although : 1
recipe code look -> like : 1
code look like -> is : 1
look like is -> which : 1
like is which -> looks : 1
is which looks -> nearly : 1
which looks nearly -> we : 1
looks nearly we -> the : 1
nearly we the -> selected : 1
we the selected -> item : 1
the selected item -> and : 1
the selected item -> in : 1
selected item and -> the : 1
item and the -> last : 1
and the last -> but : 1
and the last -> was : 1
and the last -> line : 1
and the last -> interval : 1
and the last -> summarize : 1
the last but -> the : 1
the last but -> how : 1
the last but -> this : 1
last but the -> code : 1
but the code -> does : 1
the code does -> not : 1
code does not -> swap : 1
does not swap -> it : 1
not swap it -> the : 1
swap it the -> last : 1
it the last -> one : 1
the last one -> over : 1
last one over -> the : 1
one over the -> first : 1
over the first -> if : 1
the first if -> we : 1
first if we -> swapped : 1
if we swapped -> the : 1
we swapped the -> then : 1
swapped the then -> we : 1
the then we -> would : 1
the then we -> gathered : 1
the then we -> need : 1
the then we -> simulate : 1
the then we -> see : 1
the then we -> call : 1
the then we -> put : 1
then we would -> have : 2
then we would -> not : 1
would have to -> store : 1
would have to -> compare : 1
would have to -> implement : 1
would have to -> save : 1
would have to -> make : 1
would have to -> share : 1
would have to -> descend : 1
have to store -> the : 1
to store the -> selected : 1
store the selected -> item : 1
selected item in -> a : 1
item in a -> move : 1
in a move -> the : 1
a move the -> last : 1
move the last -> item : 1
last item to -> the : 1
item to the -> selected : 1
item to the -> dereferenced : 1
item to the -> queue : 1
to the selected -> and : 1
the selected and -> then : 1
selected and then -> store : 1
and then store -> the : 3
then store the -> temporary : 1
then store the -> large : 1
then store the -> new : 1
store the temporary -> value : 1
the temporary value -> in : 1
temporary value in -> the : 1
value in the -> last : 1
value in the -> return : 1
value in the -> these : 1
value in the -> pair : 1
in the last -> slot : 1
in the last -> we : 7
in the last -> but : 2
in the last -> parameter : 1
in the last -> lines : 1
in the last -> subsections : 1
in the last -> looks : 1
in the last -> to : 1
in the last -> while : 1
the last slot -> this : 1
last slot this -> seems : 1
slot this seems -> as : 1
this seems as -> we : 1
seems as we -> are : 1
as we are -> just : 1
we are just -> about : 1
we are just -> adding : 1
we are just -> printing : 1
we are just -> going : 1
are just about -> to : 1
just about to -> the : 1
about to the -> last : 1
to the last -> item : 1
to the last -> place : 1
last item so -> the : 1
item so the -> swap : 1
so the swap -> is : 1
the swap is -> and : 1
swap is and -> a : 1
is and a -> overwrite : 1
and a overwrite -> is : 1
a overwrite is -> thing : 1
overwrite is thing -> to : 1
is thing to -> having : 1
thing to having -> seen : 1
to having seen -> we : 1
having seen we -> can : 1
seen we can -> argue : 1
we can argue -> that : 1
can argue that -> this : 1
argue that this -> step : 1
that this step -> could : 1
that this step -> destroyed : 1
this step could -> also : 1
step could also -> be : 1
could also be -> performed : 1
could also be -> implemented : 1
also be performed -> with : 1
be performed with -> a : 1
performed with a -> simple : 1
a simple this -> would : 1
a simple this -> we : 1
simple this would -> be : 1
this would be -> completely : 2
this would be -> different : 1
this would be -> a : 1
would be completely -> but : 1
would be completely -> unnecessary : 1
be completely but -> imagine : 1
completely but imagine -> we : 1
but imagine we -> stored : 1
imagine we stored -> some : 1
we stored some -> very : 1
stored some very -> large : 1
some very large -> strings : 1
very large strings -> in : 1
large strings in -> every : 1
strings in every -> or : 1
in every or -> even : 1
every or even -> another : 1
or even another -> vector : 1
even another vector -> or : 1
another vector or -> that : 1
vector or that -> that : 1
or that that -> little : 1
that that little -> assignment : 1
that little assignment -> would : 1
little assignment would -> lead : 1
assignment would lead -> to : 1
would lead to -> a : 3
would lead to -> continuous : 1
would lead to -> an : 1
lead to a -> very : 1
lead to a -> we : 1
lead to a -> division : 1
lead to a -> mathematical : 1
lead to a -> real : 1
lead to a -> function : 1
lead to a -> but : 1
lead to a -> new : 1
lead to a -> program : 1
to a very -> expensive : 1
to a very -> boring : 1
to a very -> large : 1
a very expensive -> the : 1
very expensive the -> in : 1
expensive the in -> between : 1
the in between -> is : 1
in between is -> just : 1
between is just -> an : 1
is just an -> the : 1
is just an -> empty : 2
is just an -> initializer : 1
is just an -> class : 1
is just an -> iterator : 1
just an the -> example : 1
an the example -> case : 1
the example case -> of : 1
example case of -> the : 1
case of the -> string : 1
case of the -> if : 1
of the string -> item : 1
of the string -> if : 1
of the string -> within : 1
of the string -> the : 1
of the string -> const : 1
of the string -> it : 1
of the string -> in : 1
of the string -> stream : 1
the string item -> internally : 1
string item internally -> points : 1
item internally points -> to : 1
internally points to -> a : 1
points to a -> large : 1
points to a -> the : 1
points to a -> control : 1
to a large -> string : 1
a large string -> in : 1
a large string -> into : 1
large string in -> the : 1
string in the -> we : 1
in the we -> do : 2
in the we -> assume : 1
in the we -> just : 1
in the we -> knew : 1
in the we -> print : 1
in the we -> rethrow : 1
in the we -> will : 3
in the we -> could : 1
in the we -> have : 1
in the we -> should : 2
in the we -> use : 2
in the we -> include : 1
in the we -> return : 2
in the we -> again : 1
in the we -> define : 1
in the we -> can : 3
in the we -> let : 1
in the we -> see : 1
in the we -> first : 1
in the we -> are : 1
in the we -> consume : 1
in the we -> additionally : 1
the we do -> not : 4
need to copy -> when : 1
need to copy -> strings : 1
to copy when -> a : 1
copy when a -> the : 1
when a the -> destination : 1
a the destination -> of : 1
the destination of -> the : 1
destination of the -> move : 1
of the move -> gets : 1
the move gets -> to : 1
move gets to -> at : 1
gets to at -> the : 1
to at the -> string : 1
at the string -> data : 1
the string data -> of : 1
the string data -> in : 1
string data of -> the : 1
data of the -> the : 1
data of the -> type : 1
the the move -> source : 1
the move source -> item : 1
move source item -> is : 1
source item is -> left : 1
item is left -> but : 1
is left but -> in : 1
left but in -> a : 1
but in a -> useless : 1
but in a -> different : 1
but in a -> simplified : 1
in a useless -> which : 1
a useless which -> is : 1
useless which is -> fine : 1
which is fine -> because : 1
is fine because -> we : 1
fine because we -> are : 1
we are removing -> it : 1
are removing it -> instances : 1
removing it instances -> the : 1
it instances the -> fast : 1
the safe is -> probably : 1
safe is probably -> the : 1
is probably the -> most : 1
probably the most -> widely : 1
the most widely -> used : 1
most widely used -> container : 1
widely used container -> in : 1
used container in -> the : 1
container in the -> because : 1
the because it -> holds : 1
the because it -> is : 1
because it holds -> data : 1
it holds data -> just : 1
holds data just -> like : 1
data just like -> an : 1
just like an -> and : 1
like an and -> adds : 1
an and adds -> a : 1
and adds a -> lot : 1
adds a lot -> of : 1
lot of comfort -> around : 1
of comfort around -> that : 1
comfort around that -> wrong : 1
around that wrong -> access : 1
that wrong access -> to : 1
wrong access to -> a : 1
access to a -> vector : 1
access to a -> function : 1
a vector can -> still : 1
a vector can -> already : 1
vector can still -> be : 1
can still be -> if : 1
can still be -> this : 1
can still be -> thrown : 1
still be if -> a : 1
be if a -> vector : 1
if a vector -> contains : 1
a vector contains -> and : 1
vector contains and -> by : 1
contains and by -> accident : 1
and by accident -> our : 1
by accident our -> code : 1
accident our code -> tries : 1
our code tries -> to : 1
code tries to -> access : 1
code tries to -> keep : 1
tries to access -> an : 1
to access an -> element : 1
to access an -> and : 1
to access an -> optional : 1
access an element -> at : 1
an element at -> index : 1
element at index -> this : 1
at index this -> is : 1
index this is -> obviously : 1
this is obviously -> such : 1
is obviously such -> a : 1
obviously such a -> program : 1
such a program -> could : 1
such a program -> can : 1
a program could -> just : 1
program could just -> which : 1
could just which -> might : 1
just which might -> be : 1
might be the -> best : 1
be the best -> because : 1
the best because -> that : 1
best because that -> behavior : 1
because that behavior -> would : 1
that behavior would -> make : 1
behavior would make -> it : 1
would make it -> very : 1
would make it -> indeed : 1
make it very -> obvious : 1
it very obvious -> that : 1
very obvious that -> there : 1
very obvious that -> the : 1
obvious that there -> is : 1
obvious that there -> happens : 1
that there is -> a : 3
that there is -> only : 2
that there is -> no : 3
that there is -> one : 1
that there is -> some : 1
there is a -> if : 1
there is a -> natural : 1
there is a -> variable : 1
there is a -> easier : 1
there is a -> whole : 1
there is a -> problem : 1
there is a -> an : 1
there is a -> new : 2
there is a -> function : 1
there is a -> wakeup : 1
is a if -> it : 1
a if it -> does : 1
if it does -> not : 2
does not we -> might : 1
not we might -> observe : 1
we might observe -> that : 1
might observe that -> the : 1
observe that the -> program : 1
that the program -> just : 1
that the program -> correctly : 1
that the program -> is : 1
the program just -> behaves : 1
the program just -> hangs : 1
program just behaves -> time : 1
just behaves time -> to : 1
behaves time to -> which : 1
time to which -> could : 1
to which could -> lead : 1
which could lead -> to : 1
could lead to -> even : 1
lead to even -> more : 1
to even more -> headaches : 1
even more headaches -> than : 1
more headaches than -> a : 1
headaches than a -> crashing : 1
than a crashing -> the : 1
a crashing the -> experienced : 1
crashing the experienced -> programmer : 1
the experienced programmer -> might : 1
experienced programmer might -> add : 1
programmer might add -> some : 1
might add some -> checks : 1
add some checks -> before : 1
some checks before -> any : 1
checks before any -> directly : 1
before any directly -> indexed : 1
any directly indexed -> vector : 1
directly indexed vector -> such : 1
indexed vector such -> checks : 1
vector such checks -> do : 1
such checks do -> not : 1
checks do not -> increase : 1
do not increase -> the : 1
not increase the -> readability : 1
increase the readability -> of : 1
the readability of -> the : 1
readability of the -> and : 1
of the and -> many : 1
of the and -> the : 4
of the and -> that : 1
of the and -> then : 1
of the and -> efficient : 1
the and many -> people : 1
and many people -> do : 1
many people do -> not : 1
people do not -> know : 1
people do not -> like : 1
do not know -> that : 1
do not know -> where : 1
do not know -> what : 1
do not know -> regular : 1
not know that -> already : 1
know that already -> has : 1
that already has -> bound : 1
already has bound -> to : 1
has bound to -> do : 1
bound to do -> this : 1
this we the -> two : 1
we the two -> different : 1
the two different -> ways : 1
two different ways -> to : 1
different ways to -> access : 1
different ways to -> express : 1
different ways to -> use : 1
different ways to -> print : 1
different ways to -> handle : 1
ways to access -> an : 1
access an and -> then : 1
an and then -> see : 1
an and then -> the : 1
and then see -> how : 1
then see how -> we : 1
see how we -> can : 4
see how we -> the : 1
we can utilize -> them : 1
can utilize them -> to : 1
utilize them to -> write : 1
them to write -> safer : 1
to write safer -> programs : 1
write safer programs -> without : 1
safer programs without -> decreasing : 1
programs without decreasing -> include : 1
without decreasing include -> all : 1
decreasing include all -> the : 1
include all the -> needed : 6
include all the -> headers : 4
include all the -> necessary : 14
all the needed -> header : 1
all the needed -> headers : 6
all the needed -> using : 1
the needed header -> and : 1
needed header and -> fill : 1
header and fill -> an : 1
and fill an -> example : 1
fill an example -> vector : 1
an example vector -> with : 1
an example vector -> containing : 1
an example vector -> of : 1
example vector with -> times : 1
vector with times -> the : 1
with times the -> value : 1
times the value -> so : 1
the value so -> we : 1
value so we -> have : 1
we have something -> we : 1
have something we -> can : 1
something we can -> using : 1
we can using -> namespace : 1
can using namespace -> int : 1
using namespace int -> const : 1
namespace int const -> v : 1
int const v -> we : 1
int const v -> of : 1
const v we -> access : 1
v we access -> the : 1
we access the -> vector : 1
we access the -> counter : 1
we access the -> variant : 1
we access the -> name : 1
access the vector -> out : 1
the vector out -> of : 1
vector out of -> bounds : 1
vector out of -> we : 1
out of bounds -> using : 2
out of bounds -> access : 1
out of bounds -> instead : 1
of bounds using -> the : 2
bounds using the -> cout : 2
using the cout -> of : 2
the cout of -> range : 2
cout of range -> element : 2
of range element -> we : 1
of range element -> run : 1
of range element -> terminate : 1
of range element -> catch : 1
range element we -> access : 1
element we access -> it : 1
we access it -> out : 1
access it out -> of : 1
it out of -> bounds : 1
range element run -> the : 1
element run the -> program : 1
run the program -> and : 2
run the program -> to : 1
run the program -> with : 2
run the program -> it : 1
run the program -> in : 1
the program and -> see : 3
the program and -> entering : 1
the program and -> enter : 1
the program and -> running : 1
the program and -> its : 1
the program and -> play : 1
program and see -> what : 2
program and see -> how : 1
and see what -> the : 2
and see what -> this : 1
and see what -> it : 1
and see what -> other : 1
see what the -> error : 1
see what the -> code : 1
see what the -> characters : 1
what the error -> message : 1
the error message -> is : 1
the error message -> we : 1
error message is -> gcc : 1
message is gcc -> other : 1
is gcc other -> compilers : 1
gcc other compilers -> would : 1
other compilers would -> emit : 1
compilers would emit -> different : 1
would emit different -> but : 1
emit different but -> similar : 1
different but similar -> error : 1
but similar error -> first : 1
similar error first -> read : 1
error first read -> succeeds : 1
first read succeeds -> in : 1
read succeeds in -> a : 1
succeeds in a -> strange : 1
in a strange -> it : 1
a strange it -> lead : 1
a strange it -> kind : 1
strange it lead -> the : 1
it lead the -> program : 1
lead the program -> to : 1
the program to -> but : 1
the program to -> see : 1
program to but -> a : 1
to but a -> completely : 1
but a completely -> different : 1
completely different than -> we : 1
different than we -> see : 1
than we see -> the : 1
we see the -> output : 1
we see the -> race : 1
we see the -> longest : 1
we see the -> and : 1
we see the -> constructor : 1
we see the -> messages : 1
we see the -> print : 1
we see the -> exclamation : 1
see the output -> line : 1
the output line -> of : 1
output line of -> the : 1
line of the -> other : 1
the other access -> because : 1
other access because -> it : 1
access because it -> purposefully : 1
because it purposefully -> crashed : 1
it purposefully crashed -> the : 1
purposefully crashed the -> whole : 1
crashed the whole -> if : 1
the whole if -> that : 1
the whole if -> the : 1
whole if that -> out : 1
if that out -> of : 1
that out of -> bounds : 1
of bounds access -> was : 1
bounds access was -> an : 1
access was an -> we : 1
was an we -> would : 1
an we would -> catch : 1
we would catch -> it : 1
would catch it -> much : 1
catch it much -> out : 1
it much out -> of : 1
much out of -> range : 1
out of range -> element : 1
out of range -> access : 1
range element terminate -> called : 1
element terminate called -> after : 1
terminate called after -> throwing : 2
called after throwing -> an : 2
after throwing an -> instance : 2
throwing an instance -> of : 2
instance of is -> is : 1
instance of is -> this : 1
of is is -> aborted : 1
is is aborted -> it : 1
is aborted it -> provides : 1
aborted it provides -> operator : 1
it provides operator -> and : 1
provides operator and -> the : 1
operator and the -> and : 1
and the and -> they : 1
and the and -> the : 1
and the and -> throw : 1
the and they -> basically : 1
and they basically -> do : 1
they basically do -> exactly : 1
basically do exactly -> the : 1
do exactly the -> same : 2
same the performs -> additional : 1
the performs additional -> bounds : 1
performs additional bounds -> checks : 1
additional bounds checks -> and : 1
bounds checks and -> throws : 1
checks and throws -> an : 1
and throws an -> if : 1
throws an if -> the : 1
an if the -> vector : 1
if the vector -> bounds : 1
if the vector -> does : 1
the vector bounds -> are : 1
vector bounds are -> this : 1
bounds are this -> is : 1
are this is -> super : 1
are this is -> a : 1
are this is -> not : 1
this is super -> useful : 1
is super useful -> in : 1
super useful in -> situations : 1
useful in situations -> like : 1
in situations like -> but : 1
situations like but -> also : 1
like but also -> makes : 1
but also makes -> the : 1
also makes the -> program : 1
makes the program -> a : 1
makes the program -> but : 1
the program a -> little : 1
the program a -> bit : 1
program a little -> bit : 1
a little bit -> when : 1
a little bit -> annoying : 1
a little bit -> of : 1
a little bit -> more : 4
a little bit -> harder : 1
little bit when -> doing : 1
bit when doing -> numeric : 1
when doing numeric -> computations : 1
doing numeric computations -> with : 1
numeric computations with -> indexed : 1
computations with indexed -> members : 1
with indexed members -> which : 1
indexed members which -> need : 1
members which need -> to : 1
which need to -> be : 2
to be really -> it : 1
be really it -> is : 1
really it is -> advantageous : 1
really it is -> used : 1
it is advantageous -> to : 1
is advantageous to -> stick : 1
advantageous to stick -> to : 1
to stick to -> indexed : 1
stick to indexed -> in : 1
to indexed in -> any : 1
indexed in any -> other : 1
in any other -> the : 1
in any other -> we : 1
in any other -> in : 1
in any other -> works : 1
any other the -> function : 1
other the function -> helps : 1
the function helps -> uncovering : 1
the function helps -> it : 1
the function helps -> us : 1
function helps uncovering -> bugs : 1
helps uncovering bugs -> with : 1
uncovering bugs with -> usually : 1
bugs with usually -> negligible : 1
with usually negligible -> performance : 1
usually negligible performance -> is : 1
negligible performance is -> good : 1
performance is good -> practice : 1
is good practice -> to : 1
good practice to -> use : 1
practice to use -> the : 1
the function by -> if : 1
function by if -> the : 1
by if the -> resulting : 1
if the resulting -> code : 1
the resulting code -> is : 1
resulting code is -> too : 1
code is too -> slow : 1
is too slow -> but : 1
too slow but -> has : 1
slow but has -> proven : 1
but has proven -> to : 1
has proven to -> be : 1
proven to be -> operator : 1
to be operator -> can : 1
be operator can -> be : 1
operator can be -> used : 1
used in sections -> we : 1
in sections we -> can : 1
sections we can -> out : 1
we can out -> of : 1
can out of -> bounds : 1
of bounds instead -> of : 1
bounds instead of -> letting : 1
instead of letting -> the : 1
of letting the -> whole : 1
letting the whole -> app : 1
the whole app -> in : 1
whole app in -> order : 1
app in order -> to : 1
order to handle -> we : 1
to handle we -> the : 1
handle we the -> in : 1
we the in -> case : 1
the in case -> it : 1
the in case -> the : 1
in case it -> was : 1
case it was -> thrown : 1
it was thrown -> by : 1
was thrown by -> the : 1
thrown by the -> catching : 1
by the catching -> such : 1
the catching such -> an : 1
catching such an -> exception : 1
such an exception -> is : 1
such an exception -> we : 1
an exception is -> we : 1
an exception is -> a : 1
an exception is -> triggered : 1
an exception is -> thrown : 1
exception is we -> just : 1
exception is we -> can : 1
is we just -> surround : 1
is we just -> have : 1
we just surround -> the : 1
just surround the -> call : 1
surround the call -> with : 1
the call with -> a : 1
the call with -> the : 2
with a block -> and : 1
a block and -> define : 1
a block and -> access : 1
block and define -> the : 1
and define the -> error : 1
define the error -> handling : 1
the error handling -> in : 1
error handling in -> a : 1
handling in a -> of : 1
in a of -> range : 1
in a of -> auto : 1
in a of -> for : 1
a of range -> element : 1
range element catch -> out : 1
element catch out -> of : 1
catch out of -> range : 1
of range access -> the : 1
range access the -> also : 1
access the also -> provides : 1
the also provides -> an : 1
also provides an -> instances : 1
provides an instances -> and : 1
an instances and -> vectors : 1
instances and vectors -> do : 1
and vectors do -> not : 1
vectors do not -> sort : 1
do not sort -> their : 1
not sort their -> payload : 1
sort their payload -> objects : 1
their payload objects -> but : 1
payload objects but -> if : 1
objects but if -> we : 1
but if we -> need : 1
but if we -> the : 1
but if we -> want : 1
but if we -> not : 1
but if we -> print : 1
but if we -> are : 1
if we need -> this : 1
if we need -> to : 1
if we need -> the : 1
we need this -> does : 1
need this does -> not : 1
this does not -> mean : 2
this does not -> apply : 1
this does not -> result : 1
this does not -> affect : 1
this does not -> calculate : 1
this does not -> make : 1
does not mean -> that : 3
not mean that -> we : 2
not mean that -> and : 1
mean that we -> always : 1
mean that we -> sum : 1
mean that we -> have : 3
mean that we -> are : 2
mean that we -> threads : 1
that we always -> have : 1
that we always -> did : 1
we always have -> to : 1
always have to -> switch : 1
have to switch -> to : 1
to switch to -> data : 1
switch to data -> which : 1
to data which -> were : 1
data which were -> designed : 1
which were designed -> to : 1
were designed to -> do : 1
designed to do -> that : 1
do that if -> an : 1
that if an -> is : 1
that if an -> algorithm : 1
if an is -> perfect : 1
an is perfect -> for : 1
is perfect for -> our : 1
perfect for our -> use : 1
for our use -> it : 1
for our use -> works : 1
our use it -> is : 1
use it is -> still : 1
it is still -> very : 1
it is still -> accessible : 1
it is still -> partitions : 1
is still very -> simple : 1
still very simple -> and : 1
simple and practical -> to : 1
and practical to -> add : 1
practical to add -> items : 1
to add items -> to : 1
add items to -> it : 1
items to it -> in : 1
to it in -> a : 1
to it in -> order : 1
in a to -> do : 1
a to do -> this : 1
we will fill -> an : 1
we will fill -> it : 1
will fill an -> with : 1
fill an with -> random : 1
an with random -> sort : 1
with random sort -> and : 1
random sort and -> then : 1
sort and then -> insert : 1
and then insert -> more : 1
then insert more -> words : 1
insert more words -> while : 1
more words while -> keeping : 1
words while keeping -> the : 1
while keeping the -> sorted : 1
keeping the sorted -> word : 1
the sorted word -> order : 1
sorted word order -> first : 1
word order first -> include : 1
order first include -> all : 1
first include all -> headers : 2
first include all -> the : 4
first include all -> needed : 1
include all headers -> going : 1
include all headers -> we : 1
all headers going -> to : 1
headers going to -> also : 1
going to also -> declare : 1
to also declare -> that : 1
also declare that -> we : 2
using namespace in -> order : 2
namespace in order -> to : 3
order to spare -> us : 5
namespace we write -> a : 1
we write a -> little : 1
we write a -> function : 1
we write a -> variant : 1
write a little -> main : 1
write a little -> program : 1
write a little -> helper : 1
write a little -> that : 1
a little main -> which : 1
little main which -> fills : 1
main which fills -> a : 1
which fills a -> vector : 1
fills a vector -> with : 1
vector with some -> random : 1
vector with some -> simple : 1
vector with some -> example : 1
with some random -> int : 1
some random int -> v : 1
random int v -> next : 1
v next thing -> we : 1
next thing we -> do : 1
thing we do -> is : 4
thing we do -> really : 1
thing we do -> in : 2
we do is -> that : 1
we do is -> we : 1
we do is -> allocate : 1
we do is -> defining : 1
we do is -> calling : 1
do is that -> do : 1
is that do -> that : 1
that do that -> with : 1
that with some -> assertions : 1
with some assertions -> and : 1
some assertions and -> the : 1
assertions and the -> function : 1
stl which shows -> that : 1
which shows that -> the : 1
shows that the -> vector : 1
shows that the -> strings : 1
shows that the -> histograms : 1
the vector really -> was : 1
vector really was -> sorted : 1
really was sorted -> but : 1
was sorted but -> sorted : 1
sorted but sorted -> we : 1
but sorted we -> finally : 1
sorted we finally -> add : 1
we finally add -> some : 1
finally add some -> random : 1
add some random -> words : 1
some random words -> into : 1
random words into -> the : 1
words into the -> sorted : 1
words into the -> program : 1
into the sorted -> vector : 1
the sorted vector -> using : 1
the sorted vector -> of : 1
sorted vector using -> a : 1
vector using a -> which : 1
vector using a -> the : 1
using a which -> we : 1
a which we -> still : 1
a which we -> will : 1
a which we -> then : 1
a which we -> have : 1
which we still -> need : 1
we still need -> to : 4
we still need -> an : 1
still need to -> implement : 1
still need to -> increment : 1
still need to -> return : 1
still need to -> be : 1
still need to -> keep : 1
need to implement -> these : 1
need to implement -> the : 1
need to implement -> all : 1
need to implement -> an : 1
need to implement -> for : 1
to implement these -> words : 1
implement these words -> shall : 1
these words shall -> be : 1
words shall be -> put : 1
shall be put -> at : 1
be put at -> the : 2
at the right -> that : 1
the right that -> the : 1
the right that -> both : 1
right that the -> vector : 1
the vector is -> still : 1
the vector is -> not : 1
vector is still -> sorted : 1
is still sorted -> now : 1
still sorted now -> implement : 1
sorted now implement -> a : 1
now implement a -> little : 1
now implement a -> very : 1
a little earlier -> in : 1
little earlier in -> the : 1
earlier in the -> source : 1
in the source -> void : 1
in the source -> range : 1
the source void -> const : 1
source void const -> string : 1
void const string -> const : 1
void const string -> double : 1
const string const -> auto : 1
string const auto -> back : 1
string const auto -> stringstream : 1
string const auto -> do : 1
const auto back -> in : 1
auto back in -> the : 1
back in the -> main : 1
in the main -> function : 4
in the main -> first : 1
in the main -> ctor : 1
in the main -> try : 1
in the main -> we : 1
in the main -> vector : 1
the main function -> where : 1
the main function -> by : 1
the main function -> this : 1
the main function -> auto : 1
the main function -> cout : 1
the main function -> and : 2
the main function -> remained : 1
the main function -> for : 1
the main function -> block : 1
the main function -> that : 1
the main function -> is : 1
where we we -> can : 1
we we can -> now : 1
can now continue -> printing : 1
now continue printing -> the : 1
continue printing the -> vector : 1
printing the vector -> and : 1
vector and see -> that : 1
and see that -> the : 1
and see that -> it : 1
and see that -> we : 1
and see that -> all : 1
see that the -> insert : 1
see that the -> sampled : 1
see that the -> program : 1
see that the -> predicates : 1
see that the -> object : 1
see that the -> producers : 1
see that the -> diagram : 1
see that the -> folder : 1
that the insert -> procedure : 1
the insert procedure -> for : 1
insert procedure for -> auto : 1
procedure for auto -> cout : 1
for auto cout -> w : 1
for auto cout -> placement : 1
for auto cout -> word : 1
for auto cout -> sentence : 1
for auto cout -> a : 1
for auto cout -> value : 1
for auto cout -> left : 1
for auto cout -> can : 1
for auto cout -> and : 1
for auto cout -> c : 3
for auto cout -> right : 2
for auto cout -> number : 1
auto cout w -> cout : 1
cout w cout -> and : 1
w cout and -> running : 1
the following nicely -> sorted : 1
following nicely sorted -> aaa : 1
nicely sorted aaa -> foobar : 1
sorted aaa foobar -> order : 1
aaa foobar order -> random : 1
foobar order random -> some : 1
order random some -> without : 1
random some without -> words : 1
some without words -> yyy : 1
without words yyy -> it : 1
words yyy it -> whole : 1
yyy it whole -> program : 1
it whole program -> is : 1
it whole program -> revolves : 1
whole program is -> constructed : 1
program is constructed -> around : 1
is constructed around -> the : 1
constructed around the -> which : 1
around the which -> does : 1
the which does -> what : 1
which does what -> this : 1
does what this -> for : 1
what this for -> any : 1
this for any -> new : 1
for any new -> it : 1
any new it -> locates : 1
new it locates -> the : 1
it locates the -> position : 1
locates the position -> in : 1
the position in -> the : 3
position in the -> sorted : 1
position in the -> at : 1
position in the -> but : 1
position in the -> we : 1
position in the -> fibonacci : 1
position in the -> return : 1
position in the -> vector : 1
position in the -> string : 1
position in the -> a : 1
in the sorted -> at : 1
in the sorted -> check : 1
the sorted at -> which : 1
sorted at which -> it : 1
at which it -> must : 1
which it must -> be : 1
it must be -> in : 1
it must be -> something : 1
it must be -> defined : 1
it must be -> potential : 1
must be in -> order : 1
be in order -> to : 3
order to the -> order : 1
order to the -> program : 1
to the order -> of : 1
of the strings -> in : 1
of the strings -> which : 1
of the strings -> has : 1
of the strings -> and : 1
the strings in -> the : 2
strings in the -> we : 1
strings in the -> vector : 1
the we assume -> that : 2
we assume that -> the : 3
we assume that -> our : 1
assume that the -> vector : 1
assume that the -> begin : 1
assume that the -> underlying : 1
assume that the -> input : 1
assume that the -> description : 1
the vector was -> sorted : 1
vector was sorted -> this : 1
was sorted this -> would : 1
sorted this would -> not : 1
this would not -> locating : 1
this would not -> even : 2
would not locating -> step : 1
not locating step -> is : 1
locating step is -> done : 1
step is done -> by : 1
is done by -> the : 2
done by the -> stl : 1
done by the -> return : 1
by the stl -> function : 1
by the stl -> this : 1
the stl function -> which : 1
stl function which -> accepts : 1
which accepts the -> first : 1
which accepts the -> two : 1
which accepts the -> initializer : 1
accepts the first -> two : 1
first two denote -> and : 1
two denote and -> of : 1
denote and of -> the : 1
and of the -> underlying : 1
and of the -> next : 1
and of the -> types : 1
of the underlying -> the : 1
of the underlying -> data : 1
of the underlying -> in : 1
of the underlying -> string : 1
of the underlying -> there : 1
the underlying the -> range : 1
underlying the range -> is : 1
the range is -> our : 1
the range is -> why : 1
range is our -> vector : 1
is our vector -> of : 1
our vector of -> words : 1
our vector of -> integers : 1
our vector of -> they : 1
vector of words -> in : 1
of words in -> this : 1
of words in -> the : 1
words in this -> the : 1
this the third -> the : 1
the third the -> which : 1
third the which -> shall : 1
be the function -> then : 1
be the function -> when : 1
the function then -> finds : 1
the function then -> its : 1
the function then -> we : 1
the function then -> gives : 1
function then finds -> the : 1
then finds the -> first : 1
finds the first -> item : 1
finds the first -> character : 1
the first item -> in : 1
the first item -> is : 1
the first item -> with : 1
the first item -> larger : 2
the first item -> not : 2
the first item -> equal : 1
the first item -> than : 2
the first item -> the : 1
the first item -> individually : 1
first item in -> the : 1
which is than -> or : 1
which is than -> the : 1
is than or -> to : 1
than or to -> that : 1
or to that -> third : 1
to that third -> parameter : 1
that third parameter -> and : 1
third parameter and -> returns : 1
parameter and returns -> an : 1
parameter and returns -> it : 1
and returns an -> iterator : 2
returns an iterator -> pointing : 3
returns an iterator -> that : 1
returns an iterator -> to : 4
an iterator pointing -> to : 6
iterator pointing to -> the : 8
iterator pointing to -> that : 1
to the right -> position : 1
to the right -> in : 1
to the right -> we : 1
the right position -> at : 1
right position at -> we : 1
position at we -> gave : 1
at we gave -> it : 1
we gave it -> to : 1
we gave it -> the : 1
we gave it -> an : 1
gave it to -> the : 1
to the member -> method : 1
the member method -> which : 1
member method which -> accepts : 1
method which accepts -> just : 1
which accepts just -> the : 1
accepts just the -> first : 1
just the first -> argument : 1
the first argument -> is : 2
first argument is -> an : 1
first argument is -> the : 1
argument is an -> which : 1
argument is an -> iterator : 1
is an which -> points : 1
is an which -> is : 1
an which points -> to : 2
an which points -> near : 1
which points to -> the : 5
in the at -> which : 1
in the at -> we : 1
which the second -> parameter : 1
the second parameter -> shall : 1
the second parameter -> of : 1
the second parameter -> is : 1
second parameter shall -> be : 1
parameter shall be -> it : 1
shall be it -> appears : 1
be it appears -> very : 1
it appears very -> handy : 1
appears very handy -> that : 1
very handy that -> we : 1
handy that we -> can : 1
we can use -> the : 5
we can use -> our : 1
we can use -> to : 3
we can use -> write : 1
we can use -> it : 3
we can use -> or : 1
we can use -> this : 1
we can use -> those : 1
we can use -> auto : 2
we can use -> mutex : 1
we can use -> on : 1
we can use -> as : 1
can use the -> same : 1
can use the -> index : 1
can use the -> string : 1
can use the -> problem : 1
can use the -> if : 1
use the same -> which : 1
use the same -> wrapper : 1
use the same -> interval : 1
use the same -> function : 1
use the same -> hash : 1
same which just -> dropped : 1
which just dropped -> out : 1
just dropped out -> of : 1
dropped out of -> the : 1
dropped out of -> it : 1
the the second -> argument : 2
the the second -> occurrence : 1
the second argument -> of : 2
the second argument -> is : 1
second argument of -> the : 1
second argument of -> this : 1
argument of the -> item : 1
to be function -> is : 1
be function is -> pretty : 1
function is pretty -> if : 1
is pretty if -> we : 1
pretty if we -> generalize : 1
if we generalize -> the : 1
we generalize the -> types : 1
generalize the types -> of : 1
types of its -> it : 1
of its it -> will : 1
of its it -> reaches : 1
its it will -> also : 1
it will also -> work : 1
it will also -> correct : 1
will also work -> on : 1
work on other -> container : 1
on other container -> payload : 1
other container payload -> and : 1
container payload and -> even : 1
payload and even -> on : 1
and even on -> other : 1
even on other -> containers : 1
on other containers -> such : 1
other containers such -> and : 1
and so that -> set : 1
so that set -> has : 1
that set has -> its : 1
set has its -> own : 1
has its own -> member : 1
has its own -> cast : 1
its own member -> function : 1
own member function -> that : 1
member function that -> does : 1
function that does -> the : 1
function that does -> not : 1
that does the -> same : 1
that does the -> we : 1
does the same -> as : 3
the same as -> but : 2
the same as -> and : 2
the same as -> input : 1
the same as -> the : 3
the same as -> prints : 1
the same as -> if : 1
the same as -> an : 1
the same as -> that : 1
the same as -> on : 1
the same as -> because : 1
same as but -> is : 1
same as but -> it : 1
same as but -> then : 1
as but is -> more : 1
but is more -> efficient : 1
is more efficient -> because : 1
more efficient because -> it : 1
efficient because it -> is : 1
it is specialized -> for : 1
is specialized for -> typename : 1
specialized for typename -> void : 1
for typename void -> const : 1
typename void const -> t : 3
void const t -> const : 3
const t const -> auto : 1
const t const -> ts : 2
t const auto -> trying : 1
t const auto -> if : 1
const auto trying -> to : 1
auto trying to -> switch : 1
trying to switch -> the : 1
to switch the -> type : 1
to switch the -> search : 1
switch the type -> of : 2
the vector in -> the : 1
the vector in -> order : 3
the vector in -> a : 1
vector in the -> recipe : 1
the recipe from -> to : 1
recipe from to -> something : 1
from to something -> note : 1
to something note -> that : 1
something note that -> not : 1
note that not -> all : 1
that not all -> containers : 1
not all containers -> support : 1
all containers support -> that : 1
containers support that -> algorithm : 1
support that algorithm -> requires : 1
that algorithm requires -> random : 1
algorithm requires random -> access : 1
requires random access -> which : 1
random access which -> for : 1
access which for -> does : 1
which for does -> not : 1
for does not -> items : 1
does not items -> efficiently : 1
not items efficiently -> and : 1
conditionally into we -> want : 1
into we want -> to : 1
want to fill -> a : 1
want to fill -> any : 1
to fill a -> map : 1
fill a map -> with : 1
a map with -> pairs : 1
a map with -> our : 1
map with pairs -> and : 1
with pairs and -> while : 1
pairs and while -> filling : 1
and while filling -> the : 1
while filling the -> map : 1
filling the map -> we : 1
the map we -> might : 1
the map we -> had : 1
the map we -> deserialized : 1
map we might -> run : 1
we might run -> into : 1
might run into -> key : 1
run into key -> does : 1
into key does -> not : 1
key does not -> exist : 1
does not exist -> create : 1
not exist create -> a : 1
exist create a -> key : 1
create a key -> does : 1
a key does -> exist : 1
key does exist -> take : 1
does exist take -> the : 1
exist take the -> item : 1
take the item -> and : 1
the item and -> we : 1
item and we -> could : 1
and we could -> just : 1
and we could -> also : 1
we could just -> naively : 1
we could just -> make : 1
could just naively -> use : 1
just naively use -> or : 1
naively use or -> methods : 1
use or methods -> see : 1
or methods see -> if : 1
methods see if -> they : 1
see if they -> if : 1
see if they -> are : 1
if they if -> it : 1
they if it -> we : 1
if it we -> have : 1
if it we -> often : 1
if it we -> need : 1
if it we -> can : 1
if it we -> simply : 1
if it we -> possibly : 1
it we have -> case : 1
it we have -> we : 1
it we have -> an : 1
we have case -> and : 1
have case and -> modify : 1
case and modify -> the : 1
and modify the -> existing : 1
and modify the -> while : 1
modify the existing -> in : 1
the existing in -> both : 1
existing in both -> insert : 1
in both insert -> and : 1
both insert and -> emplace : 1
insert and emplace -> create : 1
and emplace create -> the : 1
emplace create the -> item : 1
create the item -> which : 1
item which we -> try : 1
item which we -> access : 1
which we try -> to : 1
try to and -> in : 1
and in case -> the : 1
in case the -> freshly : 1
in case the -> user : 1
in case the -> programmer : 1
in case the -> trie : 1
in case the -> string : 1
in case the -> function : 1
in case the -> object : 1
in case the -> mutex : 1
in case the -> parallel : 1
in case the -> resulting : 1
case the freshly -> created : 1
the freshly created -> item : 1
freshly created item -> is : 1
created item is -> we : 1
item is we -> get : 1
is we get -> a : 1
get a useless -> constructor : 1
a useless constructor -> call : 1
useless constructor call -> in : 1
constructor call in -> both : 1
call in both -> there : 1
in both there -> is : 1
both there is -> the : 1
there is the -> which : 1
there is the -> comparison : 1
there is the -> both : 1
is the which -> enables : 1
is the which -> iterates : 1
is the which -> is : 1
is the which -> can : 1
is the which -> gives : 1
which enables us -> to : 4
enables us to -> create : 1
enables us to -> aggregate : 1
enables us to -> print : 1
enables us to -> iterate : 1
us to create -> items : 1
to create items -> only : 1
create items only -> conditionally : 1
items only conditionally -> upon : 1
only conditionally upon -> implement : 1
conditionally upon implement -> a : 1
upon implement a -> program : 1
implement a program -> that : 7
implement a program -> and : 1
implement a program -> just : 1
a program that -> takes : 1
a program that -> can : 2
a program that -> reads : 1
a program that -> knows : 1
a program that -> shows : 1
a program that -> is : 2
a program that -> maintains : 1
a program that -> uses : 2
a program that -> starts : 2
a program that -> prints : 1
a program that -> does : 1
a program that -> synchronizes : 1
a program that -> just : 1
a program that -> greedily : 1
program that takes -> a : 1
that takes a -> list : 1
that takes a -> shared : 1
takes a list -> of : 2
a list of -> billionaires : 1
a list of -> the : 1
a list of -> int : 1
a list of -> observer : 1
a list of -> values : 1
a list of -> words : 1
a list of -> characters : 1
a list of -> a : 1
a list of -> following : 1
a list of -> numbers : 1
a list of -> as : 1
a list of -> three : 1
a list of -> and : 1
a list of -> variant : 1
a list of -> weights : 1
list of billionaires -> and : 1
of billionaires and -> constructs : 1
billionaires and constructs -> a : 1
and constructs a -> map : 1
constructs a map -> that : 1
a map that -> tells : 1
a map that -> maps : 2
a map that -> was : 1
map that tells -> us : 1
that tells us -> the : 1
that tells us -> to : 1
tells us the -> number : 1
us the number -> of : 3
number of billionaires -> per : 1
of billionaires per -> in : 1
billionaires per in -> addition : 1
per in addition -> to : 1
in addition to -> it : 2
in addition to -> we : 3
in addition to -> summarize : 1
in addition to -> allows : 1
in addition to -> that : 1
in addition to -> the : 1
addition to it -> stores : 1
addition to it -> is : 1
to it stores -> the : 1
it stores the -> wealthiest : 1
stores the wealthiest -> person : 1
the wealthiest person -> in : 2
wealthiest person in -> every : 1
wealthiest person in -> that : 1
person in every -> our : 1
in every our -> example : 1
every our example -> will : 1
our example will -> not : 1
example will not -> contain : 1
not contain expensive -> to : 1
contain expensive to -> create : 1
expensive to create -> but : 1
to create but -> whenever : 1
create but whenever -> we : 1
but whenever we -> find : 1
whenever we find -> ourselves : 1
we find ourselves -> in : 1
find ourselves in -> such : 1
ourselves in such -> a : 1
in such a -> situation : 1
in such a -> the : 1
in such a -> we : 1
in such a -> way : 2
in such a -> program : 1
such a situation -> in : 1
a situation in -> we : 1
situation in we -> know : 1
in we know -> how : 1
we know how -> to : 2
we know how -> large : 1
know how to -> master : 1
know how to -> deal : 1
know how to -> calculate : 1
know how to -> do : 1
know how to -> read : 1
how to master -> it : 1
to master it -> with : 1
master it with -> to : 1
it with to -> do : 1
this we application -> that : 1
we application that -> creates : 1
application that creates -> a : 1
that creates a -> map : 1
creates a map -> from : 1
a map from -> a : 1
map from a -> list : 1
from a list -> of : 1
list of the -> map : 1
list of the -> constructor : 1
of the map -> maps : 1
of the map -> from : 1
of the map -> will : 1
of the map -> itself : 1
of the map -> and : 1
of the map -> an : 1
the map maps -> from : 2
map maps from -> each : 1
map maps from -> the : 1
maps from each -> country : 1
from each country -> to : 1
each country to -> a : 1
country to a -> reference : 1
to a reference -> to : 1
reference to the -> wealthiest : 1
reference to the -> billionaire : 1
reference to the -> look : 1
reference to the -> item : 1
reference to the -> possibility : 1
reference to the -> first : 1
to the wealthiest -> person : 1
person in that -> country : 1
in that country -> and : 1
that country and -> a : 1
country and a -> counter : 1
and a counter -> that : 1
a counter that -> tells : 1
counter that tells -> how : 1
that tells how -> many : 1
tells how many -> billionaires : 1
how many billionaires -> that : 1
how many billionaires -> there : 1
many billionaires that -> country : 1
billionaires that country -> we : 1
that country we -> need : 1
country we need -> to : 1
some headers first -> and : 2
headers first and -> we : 1
headers first and -> declare : 1
headers first and -> for : 1
headers first and -> then : 2
first and we -> declare : 1
and we declare -> that : 4
and we declare -> a : 1
and we declare -> namespace : 1
we use namespace -> by : 13
we use namespace -> using : 3
we use namespace -> spares : 1
we use namespace -> in : 1
we use namespace -> within : 1
we use namespace -> and : 8
use namespace by -> using : 12
use namespace by -> we : 1
namespace by using -> namespace : 15
by using namespace -> define : 1
by using namespace -> revolves : 1
by using namespace -> implement : 2
by using namespace -> first : 1
by using namespace -> we : 8
by using namespace -> a : 2
by using namespace -> want : 1
by using namespace -> will : 1
by using namespace -> are : 1
by using namespace -> using : 2
using namespace define -> a : 1
using namespace define -> an : 1
namespace define a -> structure : 1
define a structure -> that : 2
a structure that -> represents : 1
a structure that -> is : 1
structure that represents -> billionaire : 1
that represents billionaire -> items : 1
represents billionaire items -> for : 1
billionaire items for -> our : 1
items for our -> struct : 1
for our struct -> billionaire : 1
our struct billionaire -> string : 1
struct billionaire string -> double : 1
billionaire string double -> string : 1
string double string -> the : 1
double string the -> main : 1
string the main -> we : 1
the main we -> first : 4
the main we -> instantiate : 2
the main we -> a : 1
the main we -> open : 2
the main we -> start : 2
the main we -> are : 2
the main we -> will : 4
the main we -> can : 1
the main we -> implement : 1
the main we -> declare : 1
the main we -> just : 2
the main we -> let : 1
the main we -> check : 2
the main we -> define : 1
the main we -> read : 1
the main we -> begin : 1
the main we -> take : 1
the main we -> make : 1
main we first -> define : 1
main we first -> produce : 1
main we first -> check : 1
main we first -> validate : 1
we first define -> the : 2
first define the -> list : 1
first define the -> insert : 1
define the list -> of : 1
the list of -> there : 1
the list of -> all : 1
the list of -> patterns : 1
list of there -> are : 1
of there are -> billionaires : 1
there are billionaires -> in : 1
are billionaires in -> the : 1
billionaires in the -> so : 1
in the so -> construct : 1
in the so -> how : 1
the so construct -> a : 1
so construct a -> limited : 1
construct a limited -> list : 1
a limited list -> with : 1
limited list with -> just : 1
list with just -> some : 1
with just some -> of : 1
just some of -> the : 1
some of the -> richest : 1
of the richest -> persons : 1
the richest persons -> in : 1
richest persons in -> some : 1
persons in some -> this : 1
in some this -> list : 1
in some this -> might : 1
some this list -> is : 1
this list is -> already : 1
list is already -> the : 1
is already the -> rankings : 1
is already the -> same : 1
already the rankings -> are : 1
the rankings are -> actually : 1
rankings are actually -> taken : 1
are actually taken -> from : 1
actually taken from -> the : 1
taken from the -> forbes : 1
from the forbes -> list : 1
the forbes list -> int : 1
forbes list int -> billionaires : 1
list int billionaires -> define : 1
int billionaires define -> the : 1
billionaires define the -> it : 1
define the it -> maps : 1
the it maps -> from : 1
it maps from -> the : 1
maps from the -> country : 1
maps from the -> values : 1
from the country -> string : 1
the country string -> to : 1
country string to -> a : 1
string to a -> the : 1
string to a -> imagine : 1
string to a -> number : 1
to a the -> pair : 1
to a the -> pivot : 1
a the pair -> contains : 1
the pair contains -> a : 2
pair contains a -> copy : 1
pair contains a -> reference : 1
contains a copy -> of : 1
the first billionaire -> of : 1
first billionaire of -> every : 1
billionaire of every -> country : 1
of every country -> from : 1
every country from -> our : 1
country from our -> that : 1
from our that -> is : 1
our that is -> automatically : 1
that is automatically -> the : 1
is automatically the -> richest : 1
automatically the richest -> billionaire : 1
the richest billionaire -> per : 1
richest billionaire per -> the : 1
billionaire per the -> other : 1
per the other -> variable : 1
the other variable -> in : 1
other variable in -> the : 1
variable in the -> pair : 1
in the pair -> is : 1
in the pair -> that : 1
the pair is -> a : 1
pair is a -> which : 1
is a which -> we : 1
is a which -> does : 1
is a which -> tells : 1
is a which -> takes : 1
we will increment -> for : 1
will increment for -> every : 1
increment for every -> following : 1
for every following -> billionaire : 1
every following billionaire -> in : 1
following billionaire in -> that : 1
billionaire in that -> go : 1
in that go -> through : 1
that go through -> the : 1
go through the -> list : 2
go through the -> code : 1
go through the -> data : 1
through the list -> and : 1
through the list -> of : 1
the list and -> try : 1
list and try -> to : 1
and try to -> emplace : 1
and try to -> install : 1
and try to -> foresee : 1
and try to -> insert : 1
try to emplace -> a : 1
to emplace a -> new : 1
emplace a new -> payload : 1
a new payload -> pair : 1
new payload pair -> for : 1
payload pair for -> every : 1
pair for every -> the : 1
for every the -> pair : 1
every the pair -> contains : 1
contains a reference -> to : 1
to the billionaire -> we : 1
the billionaire we -> are : 1
billionaire we are -> currently : 1
we are currently -> looking : 1
we are currently -> running : 1
are currently looking -> a : 1
currently looking a -> counter : 1
looking a counter -> value : 1
a counter value -> of : 1
counter value of -> for : 1
counter value of -> the : 1
value of for -> auto : 1
value of for -> the : 1
of for auto -> auto : 1
of for auto -> cout : 2
for auto auto -> that : 1
for auto auto -> ms : 1
auto auto that -> step : 1
auto that step -> was : 1
that step was -> then : 1
step was then -> we : 1
was then we -> need : 1
then we need -> to : 3
then we need -> enough : 1
then we need -> code : 1
need to do -> anything : 1
need to do -> is : 1
need to do -> in : 1
need to do -> now : 1
to do anything -> the : 1
to do anything -> with : 1
do anything the -> pair : 1
anything the pair -> for : 1
the pair for -> which : 1
pair for which -> we : 1
for which we -> provided : 1
for which we -> need : 2
for which we -> present : 1
for which we -> will : 1
for which we -> want : 1
which we provided -> the : 1
we provided the -> constructor : 1
provided the constructor -> arguments : 1
the constructor arguments -> has : 1
constructor arguments has -> been : 1
arguments has been -> constructed : 1
has been constructed -> and : 1
been constructed and -> inserted : 1
constructed and inserted -> into : 1
and inserted into -> the : 1
inserted into the -> if : 1
into the if -> the : 1
into the if -> we : 1
the if the -> insertion : 1
the if the -> key : 1
the if the -> function : 1
the if the -> input : 1
if the insertion -> was : 2
the insertion was -> successful : 1
the insertion was -> the : 1
insertion was successful -> because : 1
was successful because -> the : 1
successful because the -> country : 1
because the country -> key : 1
the country key -> exists : 1
country key exists -> then : 1
key exists then -> the : 1
exists then the -> pair : 1
then the pair -> was : 1
the pair was -> not : 1
pair was not -> if : 1
was not if -> our : 1
not if our -> billionaire : 1
if our billionaire -> structure : 1
our billionaire structure -> was : 1
billionaire structure was -> very : 1
structure was very -> this : 1
was very this -> would : 1
very this would -> have : 1
this would have -> saved : 1
this would have -> decreased : 1
this would have -> become : 1
would have saved -> us : 1
have saved us -> the : 1
saved us the -> runtime : 1
us the runtime -> cost : 1
the runtime cost -> of : 1
runtime cost of -> copying : 1
cost of copying -> in : 1
of copying in -> the : 1
copying in the -> nonsuccessful : 1
in the nonsuccessful -> we : 1
the nonsuccessful we -> still : 1
nonsuccessful we still -> need : 1
need to increment -> the : 1
to increment the -> counter : 1
to increment the -> number : 1
increment the counter -> for : 1
the counter for -> this : 1
counter for this -> if : 1
for this if -> we : 1
for this if -> there : 1
this if we -> can : 1
this if we -> really : 1
if we can -> now : 1
if we can -> print : 1
can now print -> how : 1
can now print -> a : 1
can now print -> arbitrary : 1
now print how -> many : 1
print how many -> billionaires : 1
print how many -> threads : 1
print how many -> files : 1
many billionaires there -> are : 1
billionaires there are -> per : 1
there are per -> and : 2
are per and -> who : 1
are per and -> their : 1
per and who -> is : 1
and who is -> the : 1
who is the -> wealthiest : 1
is the wealthiest -> one : 1
the wealthiest one -> in : 1
wealthiest one in -> each : 1
one in each -> for : 1
in each for -> auto : 1
each for auto -> const : 1
for auto const -> auto : 3
auto const auto -> cout : 3
auto const auto -> return : 7
auto const auto -> the : 1
auto const auto -> z : 1
const auto cout -> count : 1
const auto cout -> left : 2
const auto cout -> create : 1
const auto cout -> a : 1
auto cout count -> richest : 1
cout count richest -> is : 1
count richest is -> with : 1
richest is with -> and : 1
is with and -> running : 1
is with and -> it : 1
with and running -> the : 1
the following the -> output : 2
the following the -> key : 1
the following the -> loop : 1
the following the -> values : 1
the following the -> preceding : 1
the following the -> first : 5
the following the -> parallel : 1
following the output -> is : 2
the output is -> because : 1
the output is -> very : 2
the output is -> a : 2
the output is -> redirected : 1
the output is -> the : 1
output is because -> we : 1
is because we -> limited : 1
because we limited -> our : 1
we limited our -> input : 1
limited our input -> china : 1
our input china -> richest : 1
input china richest -> is : 1
china richest is -> wang : 1
richest is wang -> jianlin : 1
is wang jianlin -> with : 1
wang jianlin with -> france : 1
jianlin with france -> richest : 1
with france richest -> is : 1
france richest is -> bernard : 1
richest is bernard -> arnault : 1
is bernard arnault -> with : 1
bernard arnault with -> hong : 1
arnault with hong -> kong : 1
with hong kong -> richest : 1
hong kong richest -> is : 1
kong richest is -> li : 1
richest is li -> with : 1
is li with -> mexico : 1
li with mexico -> richest : 1
with mexico richest -> is : 1
mexico richest is -> carlos : 1
richest is carlos -> slim : 1
is carlos slim -> with : 1
carlos slim with -> spain : 1
slim with spain -> richest : 1
with spain richest -> is : 1
spain richest is -> amancio : 1
richest is amancio -> ortega : 1
is amancio ortega -> with : 1
amancio ortega with -> usa : 1
ortega with usa -> richest : 1
with usa richest -> is : 1
usa richest is -> bill : 1
richest is bill -> gates : 1
is bill gates -> with : 1
bill gates with -> it : 1
gates with it -> whole : 1
with it whole -> recipe : 1
it whole recipe -> revolves : 2
it whole recipe -> concentrates : 1
whole recipe revolves -> around : 2
recipe revolves around -> the : 1
recipe revolves around -> pushing : 1
revolves around the -> function : 1
around the function -> of : 1
function of which -> is : 1
of which is -> a : 2
which is a -> new : 1
which is a -> poor : 1
which is a -> string : 1
which is a -> waste : 1
which is a -> bit : 2
which is a -> abstraction : 1
which is a -> type : 1
which is a -> really : 2
which is a -> generic : 1
which is a -> helper : 1
is a new -> it : 3
is a new -> which : 1
is a new -> type : 1
is a new -> version : 1
a new it -> has : 1
a new it -> removes : 1
a new it -> came : 1
new it has -> the : 1
it has the -> following : 1
it has the -> purpose : 1
it has the -> highest : 1
it has the -> the : 1
it has the -> it : 1
following the key -> being : 1
the key being -> inserted : 1
key being inserted -> is : 1
being inserted is -> parameter : 1
inserted is parameter -> the : 1
is parameter the -> associated : 1
parameter the associated -> value : 1
the associated value -> is : 1
the associated value -> mapped : 1
associated value is -> constructed : 1
value is constructed -> from : 1
is constructed from -> the : 2
is constructed from -> its : 1
is constructed from -> an : 1
constructed from the -> parameter : 1
constructed from the -> lambda : 1
pack if we -> succeed : 1
if we succeed -> in : 1
we succeed in -> inserting : 1
succeed in inserting -> the : 1
in inserting the -> then : 1
inserting the then -> the : 1
the then the -> function : 1
the then the -> algorithm : 1
the then the -> use : 1
the then the -> shared : 1
the then the -> parallelized : 1
then the function -> returns : 1
then the function -> fails : 1
the function returns -> an : 1
the function returns -> it : 1
the function returns -> us : 2
function returns an -> which : 1
returns an which -> points : 1
the new node -> in : 1
the new node -> with : 1
new node in -> the : 1
node in the -> with : 1
in the with -> a : 1
the with a -> boolean : 1
the with a -> width : 1
with a boolean -> value : 1
a boolean value -> being : 1
a boolean value -> that : 1
a boolean value -> by : 1
boolean value being -> set : 1
value being set -> to : 1
being set to -> if : 2
set to if -> the : 1
set to if -> we : 1
set to if -> there : 1
to if the -> insertion : 1
to if the -> character : 1
insertion was the -> boolean : 1
was the boolean -> value : 1
the boolean value -> in : 1
boolean value in -> the : 1
in the return -> pair : 1
in the return -> is : 1
the return pair -> is : 1
return pair is -> set : 1
pair is set -> to : 1
is set to -> and : 2
is set to -> space : 1
is set to -> an : 1
set to and -> the : 1
set to and -> to : 1
to and the -> iterator : 1
to and the -> last : 1
and the iterator -> points : 1
and the iterator -> must : 1
to the item -> with : 1
to the item -> which : 1
to the item -> if : 1
to the item -> the : 1
the item with -> which : 1
item with which -> the : 1
with which the -> new : 1
which the new -> item : 1
the new item -> would : 1
the new item -> shall : 1
the new item -> all : 1
the new item -> at : 1
new item would -> characteristic : 1
item would characteristic -> is : 1
would characteristic is -> very : 1
characteristic is very -> useful : 1
useful in our -> we : 1
in our we -> see : 1
in our we -> are : 1
in our we -> want : 1
in our we -> have : 2
in our we -> initialize : 1
in our we -> will : 1
in our we -> could : 1
our we see -> a : 1
we see a -> billionaire : 2
we see a -> the : 1
we see a -> where : 1
see a billionaire -> from : 2
a billionaire from -> a : 2
billionaire from a -> specific : 2
from a specific -> country : 2
a specific country -> for : 1
a specific country -> we : 1
specific country for -> the : 1
country for the -> first : 1
for the first -> then : 1
for the first -> as : 1
for the first -> is : 1
for the first -> item : 1
for the first -> thing : 1
for the first -> pair : 1
for the first -> of : 2
for the first -> this : 1
for the first -> thread : 1
for the first -> value : 1
for the first -> in : 1
the first then -> this : 1
first then this -> country : 1
then this country -> is : 1
this country is -> not : 1
country is not -> a : 1
is not a -> key : 1
is not a -> we : 2
is not a -> as : 2
is not a -> purely : 1
is not a -> part : 1
is not a -> but : 1
is not a -> good : 2
is not a -> wrong : 1
is not a -> it : 1
is not a -> valid : 1
not a key -> in : 1
a key in -> the : 1
key in the -> map : 1
key in the -> switch : 1
in the map -> in : 1
in the map -> throughout : 1
in the map -> and : 1
in the map -> for : 1
in the map -> contain : 1
the map in -> that : 1
the map in -> order : 1
map in that -> we : 1
in that we -> must : 2
in that we -> first : 1
in that we -> will : 1
in that we -> pop : 1
in that we -> simply : 1
that we must -> accompanied : 1
that we must -> catch : 1
that we must -> declare : 1
that we must -> practically : 1
we must accompanied -> with : 1
must accompanied with -> a : 1
accompanied with a -> new : 1
a new counter -> being : 1
new counter being -> set : 1
counter being set -> to : 1
to if we -> see : 1
to if we -> regard : 1
to if we -> print : 1
if we see -> a : 1
if we see -> it : 1
specific country we -> have : 1
country we have -> to : 1
have to get -> a : 1
have to get -> the : 1
get a reference -> to : 2
reference to its -> existing : 1
reference to its -> but : 1
to its existing -> in : 1
its existing in -> order : 1
existing in order -> to : 1
order to increment -> this : 1
to increment this -> is : 1
increment this is -> exactly : 1
this is exactly -> what : 3
is exactly what -> happened : 1
is exactly what -> the : 1
is exactly what -> it : 1
is exactly what -> we : 2
exactly what happened -> in : 1
what happened in -> step : 1
happened in step -> that : 1
in step that -> both : 1
step that both -> the : 1
that both the -> and : 1
that both the -> smart : 1
both the and -> functions : 1
the and functions -> of : 2
the and functions -> provide : 1
and functions of -> work : 1
and functions of -> and : 1
functions of work -> exactly : 1
of work exactly -> the : 1
work exactly the -> same : 1
the same a -> crucial : 1
the same a -> standard : 1
same a crucial -> difference : 1
a crucial difference -> is : 1
crucial difference is -> that : 1
is that will -> construct : 1
that will construct -> the : 1
will construct the -> object : 1
construct the object -> associated : 1
the object associated -> with : 1
object associated with -> the : 1
object associated with -> there : 1
associated with the -> the : 1
associated with the -> struct : 1
with the the -> key : 1
with the the -> rest : 1
with the the -> accumulate : 1
the the key -> already : 1
the key already -> this : 1
key already this -> boosts : 1
already this boosts -> the : 1
this boosts the -> performance : 1
boosts the performance -> in : 1
the performance in -> case : 1
performance in case -> objects : 1
in case objects -> of : 1
case objects of -> that : 1
objects of that -> type : 1
of that type -> are : 1
that type are -> expensive : 1
type are expensive -> to : 1
are expensive to -> whole : 1
expensive to whole -> program : 1
to whole program -> still : 1
whole program still -> works : 1
program still works -> if : 1
still works if -> we : 1
if we switch -> the : 1
we switch the -> type : 1
the map from -> to : 1
map from to -> this : 1
from to this -> we : 1
to this we -> can : 2
to this we -> are : 1
to this we -> will : 1
we can simply -> switch : 1
we can simply -> print : 1
we can simply -> and : 1
we can simply -> check : 1
we can simply -> wrap : 1
we can simply -> start : 1
can simply switch -> from : 1
simply switch from -> one : 1
switch from one -> implementation : 1
from one implementation -> to : 1
one implementation to -> which : 1
implementation to which -> has : 1
to which has -> different : 1
which has different -> performance : 1
has different performance -> in : 1
different performance in -> this : 1
performance in this -> the : 1
this the only -> observable : 1
the only observable -> difference : 1
only observable difference -> is : 1
observable difference is -> that : 1
that the billionaire -> map : 1
the billionaire map -> is : 1
billionaire map is -> not : 1
map is not -> printed : 1
is not printed -> in : 1
not printed in -> alphabetical : 1
printed in alphabetical -> order : 1
alphabetical order any -> because : 1
order any because -> hash : 1
any because hash -> maps : 1
because hash maps -> do : 1
hash maps do -> not : 1
maps do not -> order : 1
do not order -> their : 1
not order their -> objects : 1
order their objects -> the : 1
their objects the -> same : 1
objects the same -> way : 1
the same way -> as : 4
the same way -> for : 1
same way as -> search : 1
same way as -> the : 1
same way as -> but : 1
same way as -> and : 1
way as search -> trees : 1
as search trees -> the : 1
search trees the -> new : 1
trees the new -> insertion : 1
semantics of up -> items : 1
of up items -> in : 1
up items in -> an : 1
items in an -> takes : 1
in an takes -> this : 1
this is the -> same : 1
this is the -> output : 1
this is the -> only : 1
this is the -> we : 1
this is the -> case : 1
this is the -> colored : 1
this is the -> the : 1
this is the -> full : 1
this is the -> central : 1
this is the -> more : 2
this is the -> default : 1
this is the -> exit : 1
this is the -> single : 1
this is the -> while : 1
this is the -> then : 1
this is the -> problem : 1
is the same -> for : 1
is the same -> as : 3
is the same -> thing : 1
same for inserting -> new : 1
for inserting new -> because : 1
for inserting new -> item : 1
inserting new because -> the : 1
new because the -> position : 1
because the position -> where : 1
the position where -> to : 1
the position where -> new : 1
position where to -> insert : 1
where to insert -> them : 1
where to insert -> into : 1
to insert them -> must : 1
to insert them -> without : 1
to insert them -> all : 1
insert them must -> be : 1
them must be -> looked : 1
must be looked -> naive : 1
be looked naive -> insertion : 1
looked naive insertion -> of : 1
naive insertion of -> new : 1
insertion of new -> items : 1
of new items -> would : 1
new items would -> thus : 1
items would thus -> take : 1
would thus take -> order : 1
thus take order -> to : 1
take order to -> make : 1
to make this -> more : 1
to make this -> example : 1
make this more -> insertion : 1
this more insertion -> functions : 1
more insertion functions -> accept : 1
insertion functions accept -> an : 1
functions accept an -> optional : 1
accept an optional -> the : 1
an optional the -> insertion : 1
optional the insertion -> hint : 1
the insertion hint -> is : 2
insertion hint is -> basically : 1
insertion hint is -> the : 1
hint is basically -> an : 1
is basically an -> which : 1
basically an which -> points : 1
which points near -> the : 1
points near the -> future : 1
near the future -> position : 1
the future position -> of : 1
future position of -> the : 1
position of the -> item : 1
position of the -> newly : 1
position of the -> leading : 1
position of the -> end : 1
position of the -> we : 1
be if the -> hint : 1
if the hint -> is : 1
the hint is -> then : 1
hint is then -> we : 1
is then we -> get : 1
is then we -> look : 1
is then we -> cannot : 1
then we get -> insertion : 1
then we get -> the : 1
then we get -> such : 1
then we get -> some : 1
we get insertion -> to : 1
get insertion to -> do : 1
insertion to do -> this : 1
this we multiple -> items : 1
we multiple items -> into : 1
an and use -> insertion : 1
and use insertion -> hints : 1
use insertion hints -> for : 1
insertion hints for -> in : 1
hints for in -> order : 1
for in order -> to : 3
order to reduce -> the : 5
to reduce the -> number : 2
to reduce the -> amount : 2
to reduce the -> need : 1
to reduce the -> total : 1
to reduce the -> size : 1
number of are -> mapping : 1
of are mapping -> strings : 1
are mapping strings -> to : 1
mapping strings to -> so : 1
strings to so -> we : 1
to so we -> need : 1
we need the -> header : 1
we need the -> headers : 1
we need the -> and : 1
we need the -> recursion : 1
need the header -> files : 1
the header files -> included : 1
header files included -> for : 1
files included for -> and : 1
included for and -> next : 1
for and next -> step : 1
and next step -> is : 1
is to instantiate -> a : 1
to instantiate a -> which : 1
to instantiate a -> distribution : 1
instantiate a which -> already : 1
a which already -> contains : 1
which already contains -> some : 1
already contains some -> example : 1
contains some example -> int : 1
example int m -> multiple : 1
int m multiple -> items : 1
m multiple items -> and : 1
multiple items and -> for : 1
and for each -> item : 1
for each item -> we : 1
each item we -> an : 1
item we an -> insertion : 1
we an insertion -> since : 1
an insertion since -> we : 1
insertion since we -> have : 1
since we have -> no : 1
since we have -> them : 1
we have no -> hint : 1
we have no -> signals : 1
we have no -> idea : 1
we have no -> external : 1
have no hint -> in : 1
no hint in -> the : 1
hint in the -> beginning : 1
in the beginning -> to : 1
in the beginning -> is : 1
the beginning to -> start : 1
beginning to start -> we : 1
to start we -> will : 1
start we will -> just : 1
we will just -> do : 1
we will just -> overload : 1
we will just -> use : 1
will just do -> the : 1
just do the -> first : 1
just do the -> parsing : 1
do the first -> insertion : 1
the first insertion -> pointing : 1
first insertion pointing -> to : 1
insertion pointing to -> the : 1
to the iterator -> of : 1
to the iterator -> class : 1
the iterator of -> the : 2
the iterator of -> a : 1
iterator of the -> auto : 1
iterator of the -> because : 1
iterator of the -> modified : 1
iterator of the -> underlying : 1
iterator of the -> first : 1
iterator of the -> second : 1
iterator of the -> same : 1
iterator of the -> new : 1
of the auto -> will : 1
the auto will -> now : 1
auto will now -> insert : 1
will now insert -> items : 1
now insert items -> from : 1
insert items from -> the : 1
from the alphabet -> backward : 1
the alphabet backward -> while : 1
alphabet backward while -> always : 1
backward while always -> using : 1
while always using -> the : 1
always using the -> iterator : 1
using the iterator -> hint : 1
the iterator hint -> we : 1
iterator hint we -> and : 1
hint we and -> then : 1
we and then -> reinitialize : 1
and then reinitialize -> it : 1
then reinitialize it -> to : 1
reinitialize it to -> the : 1
to the return -> value : 2
to the return -> are : 1
to the return -> invested : 1
the the next -> item : 1
the the next -> is : 1
the the next -> group : 1
the next item -> will : 1
the next item -> past : 1
the next item -> in : 1
next item will -> be : 1
item will be -> inserted : 1
will be inserted -> just : 1
be inserted just -> the : 1
be inserted just -> next : 1
inserted just the -> for : 1
just the for -> auto : 1
the for auto -> just : 1
the for auto -> items : 1
for auto just -> for : 1
auto just for -> the : 1
just for the -> sake : 3
sake of showing -> how : 2
sake of showing -> that : 1
of showing how -> it : 1
of showing how -> to : 1
showing how it -> is : 1
how it is -> we : 1
how it is -> meant : 1
it is we -> insert : 1
it is we -> will : 1
is we insert -> a : 1
we insert a -> string : 1
insert a string -> which : 1
a string which -> will : 1
a string which -> is : 1
string which will -> be : 2
will be put -> at : 1
at the leftmost -> position : 1
the leftmost position -> in : 1
leftmost position in -> the : 1
in the but -> give : 1
in the but -> we : 1
in the but -> also : 1
the but give -> it : 1
but give it -> a : 2
it a completely -> which : 1
a completely which -> points : 1
completely which points -> to : 1
to the rightmost -> position : 1
the rightmost position -> in : 1
rightmost position in -> the : 1
the we just -> print : 1
the we just -> return : 1
the we just -> take : 1
we just print -> what : 1
we just print -> the : 2
we just print -> a : 1
just print what -> we : 2
print what we -> for : 1
print what we -> have : 1
print what we -> got : 1
print what we -> first : 1
print what we -> this : 1
what we for -> auto : 1
we for auto -> key : 1
we for auto -> cout : 1
for auto key -> value : 1
auto key value -> this : 1
key value this -> is : 1
value this is -> the : 1
value this is -> pretty : 1
value this is -> what : 1
is the output -> we : 1
is the output -> these : 1
the output we -> get : 1
the output we -> surrounded : 1
output we get -> when : 1
we get when -> we : 2
get when we -> compile : 1
get when we -> sample : 1
when we compile -> and : 2
we compile and -> run : 2
compile and run -> the : 10
compile and run -> our : 4
and run the -> the : 2
and run the -> program : 2
and run the -> it : 1
and run the -> having : 1
and run the -> function : 1
and run the -> we : 2
and run the -> at : 1
run the the -> wrong : 1
run the the -> first : 1
the the wrong -> insertion : 1
the wrong insertion -> hint : 1
wrong insertion hint -> did : 1
insertion hint did -> not : 1
hint did not -> hurt : 1
did not hurt -> too : 1
not hurt too -> as : 1
hurt too as -> the : 1
too as the -> map : 1
as the map -> ordering : 1
as the map -> maintained : 1
the map ordering -> is : 1
map ordering is -> still : 1
ordering is still -> it : 1
is still it -> only : 1
is still it -> will : 1
still it only -> difference : 1
it only difference -> to : 1
only difference to -> normal : 1
difference to normal -> map : 1
to normal map -> insertions : 1
normal map insertions -> in : 1
map insertions in -> this : 1
insertions in this -> recipe : 1
in this recipe -> was : 1
in this recipe -> is : 1
this recipe was -> the : 1
recipe was the -> additional : 1
was the additional -> hint : 1
the additional hint -> and : 1
additional hint and -> we : 1
hint and we -> spoke : 1
and we spoke -> about : 1
we spoke about -> and : 1
spoke about and -> hint : 1
about and hint -> will : 1
and hint will -> point : 1
hint will point -> to : 1
will point to -> an : 1
point to an -> existing : 1
point to an -> of : 1
to an existing -> which : 1
to an existing -> it : 1
to an existing -> filesystem : 1
an existing which -> is : 1
an existing which -> we : 1
existing which is -> than : 1
is than the -> element : 1
is than the -> standard : 1
is than the -> value : 1
is than the -> unmodified : 1
than the element -> to : 1
the element to -> be : 1
element to be -> that : 1
to be that -> the : 1
to be that -> we : 1
be that the -> newly : 1
that the newly -> inserted : 1
the newly inserted -> key : 1
the newly inserted -> a : 1
newly inserted key -> will : 1
inserted key will -> be : 1
key will be -> just : 1
will be just -> the : 1
be just the -> if : 1
just the if -> this : 1
the if this -> does : 1
if this does -> not : 1
does not apply -> for : 1
not apply for -> the : 1
apply for the -> hint : 1
for the hint -> the : 1
the hint the -> user : 1
hint the user -> provided : 1
the user provided -> during : 1
the user provided -> in : 1
the user provided -> us : 1
the user provided -> none : 1
the user provided -> some : 1
the user provided -> a : 2
user provided during -> an : 1
provided during an -> the : 1
during an the -> insert : 1
an the insert -> function : 1
the insert function -> will : 1
insert function will -> fall : 1
function will fall -> back : 1
will fall back -> to : 1
fall back to -> a : 3
fall back to -> one : 1
back to a -> nonoptimized : 1
back to a -> programmer : 1
back to a -> default : 1
to a nonoptimized -> yielding : 1
a nonoptimized yielding -> performance : 1
nonoptimized yielding performance -> the : 1
yielding performance the -> first : 1
performance the first -> we : 1
the first we -> got : 1
the first we -> copy : 1
the first we -> record : 1
the first we -> copied : 1
the first we -> need : 1
first we got -> the : 1
we got the -> iterator : 1
we got the -> imagine : 1
we got the -> two : 1
got the iterator -> of : 1
of the because -> we : 1
because we had -> no : 1
we had no -> better : 1
had no better -> hint : 1
no better hint -> to : 1
better hint to -> start : 1
hint to start -> after : 1
to start after -> installing : 1
start after installing -> a : 1
after installing a -> in : 1
installing a in -> the : 1
the we knew -> that : 1
we knew that -> installing : 1
we knew that -> we : 1
knew that installing -> will : 1
that installing will -> insert : 1
installing will insert -> a : 1
will insert a -> new : 1
insert a new -> item : 1
new item just -> in : 1
item just in -> front : 1
just in front -> of : 1
in front of -> the : 2
in front of -> hexadecimal : 1
front of the -> which : 1
front of the -> the : 2
front of the -> it : 1
front of the -> vector : 1
front of the -> input : 1
the which qualified -> it : 1
which qualified it -> to : 1
qualified it to -> be : 1
it to be -> a : 1
it to be -> the : 1
to be a -> correct : 1
to be a -> stack : 1
to be a -> few : 1
to be a -> item : 1
to be a -> lot : 1
be a correct -> to : 1
a correct to -> as : 1
correct to as -> if : 1
to as if -> put : 1
as if put -> into : 1
if put into -> the : 1
put into the -> tree : 1
put into the -> initializer : 1
into the tree -> after : 1
the tree after -> inserting : 1
tree after inserting -> the : 1
after inserting the -> and : 1
inserting the and -> so : 1
so this is -> why : 1
so this is -> something : 1
this is why -> it : 1
this is why -> we : 4
is why it -> is : 3
is why it -> goes : 1
is why it -> was : 1
is why it -> has : 1
it is possible -> to : 15
it is possible -> that : 3
it is possible -> for : 1
is possible to -> use : 2
is possible to -> show : 1
is possible to -> write : 1
is possible to -> iterators : 1
is possible to -> work : 1
is possible to -> provide : 2
is possible to -> add : 1
is possible to -> count : 2
is possible to -> hack : 1
is possible to -> gather : 1
is possible to -> determine : 1
is possible to -> convert : 1
is possible to -> string : 1
is possible to -> mess : 1
possible to use -> the : 1
possible to use -> shared : 1
the which was -> returned : 1
which was returned -> by : 1
was returned by -> the : 1
returned by the -> insertion : 1
by the insertion -> for : 1
the insertion for -> the : 1
insertion for the -> is : 1
for the is -> important : 1
for the is -> the : 1
the is important -> to : 1
is important to -> that : 1
is important to -> understand : 1
is important to -> if : 1
important to that -> before : 1
to that before -> insertion : 1
that before insertion -> hints : 1
before insertion hints -> were : 1
insertion hints were -> considered : 1
hints were considered -> they : 1
were considered they -> pointed : 1
considered they pointed -> the : 1
they pointed the -> position : 1
pointed the position -> of : 1
of the newly -> inserted : 1
newly inserted a -> wrong : 1
inserted a wrong -> hint : 1
a wrong hint -> does : 1
wrong hint does -> not : 1
hint does not -> even : 1
does not even -> destroy : 1
does not even -> return : 1
does not even -> need : 1
not even destroy -> or : 1
even destroy or -> disturb : 1
destroy or disturb -> the : 1
or disturb the -> order : 1
disturb the order -> of : 1
of the items -> in : 3
of the items -> is : 1
of the items -> we : 1
of the items -> appear : 1
of the items -> from : 1
the items in -> the : 3
the items in -> a : 1
the items in -> case : 1
the items in -> order : 1
the items in -> such : 1
items in the -> so : 1
items in the -> priority : 1
items in the -> we : 2
items in the -> vector : 1
items in the -> queue : 2
items in the -> but : 1
items in the -> are : 1
items in the -> in : 1
items in the -> situation : 1
items in the -> map : 1
the so how -> does : 1
so how does -> that : 1
how does that -> even : 1
does that even -> and : 1
that even and -> what : 1
even and what -> did : 1
and what did -> that : 1
what did that -> that : 1
did that that -> the : 1
that that the -> insertion : 1
that the insertion -> time : 1
the insertion time -> is : 1
insertion time is -> amortized : 1
time is amortized -> is : 1
is amortized is -> usually : 1
amortized is usually -> implemented : 1
is usually implemented -> using : 1
usually implemented using -> a : 1
implemented using a -> binary : 1
using a binary -> search : 1
using a binary -> function : 1
a binary search -> when : 1
a binary search -> and : 1
a binary search -> for : 2
a binary search -> which : 1
binary search when -> inserting : 1
search when inserting -> a : 1
when inserting a -> new : 1
inserting a new -> key : 1
a new key -> into : 1
new key into -> a : 1
key into a -> search : 1
into a search -> it : 1
into a search -> engine : 1
a search it -> is : 1
search it is -> compared : 1
it is compared -> against : 1
it is compared -> to : 2
is compared against -> the : 1
is compared against -> an : 1
compared against the -> keys : 1
against the keys -> of : 1
keys of the -> other : 1
keys of the -> data : 1
keys of the -> same : 1
the other beginning -> from : 1
other beginning from -> the : 1
beginning from the -> if : 1
from the if -> the : 1
if the key -> is : 1
the key is -> smaller : 1
key is smaller -> or : 1
is smaller or -> larger : 1
smaller or larger -> than : 1
or larger than -> the : 1
larger than the -> key : 1
than the key -> of : 1
the key of -> one : 1
key of one -> then : 1
of one then -> the : 1
one then the -> search : 1
then the search -> algorithm : 1
the search algorithm -> branches : 1
the search algorithm -> will : 1
the search algorithm -> step : 1
the search algorithm -> these : 1
the search algorithm -> returns : 1
the search algorithm -> this : 1
search algorithm branches -> left : 1
algorithm branches left -> or : 1
branches left or -> right : 1
left or right -> to : 1
or right to -> go : 1
right to go -> down : 1
to go down -> to : 1
go down to -> the : 1
down to the -> next : 1
down to the -> first : 1
down to the -> row : 1
down to the -> actual : 1
to the next -> deeper : 1
to the next -> which : 2
to the next -> dot : 1
to the next -> fibonacci : 1
to the next -> to : 1
to the next -> trie : 1
the next deeper -> while : 1
the next deeper -> trie : 1
next deeper while -> doing : 1
deeper while doing -> the : 1
while doing the -> search : 1
while doing the -> we : 1
doing the search -> algorithm : 1
search algorithm will -> stop : 1
algorithm will stop -> at : 1
will stop at -> the : 1
stop at the -> point : 1
at the point -> where : 2
at the point -> of : 1
the point where -> it : 1
the point where -> an : 1
the point where -> they : 1
point where it -> reached : 1
where it reached -> the : 1
it reached the -> maximum : 1
reached the maximum -> depth : 1
the maximum depth -> of : 1
maximum depth of -> the : 1
depth of the -> current : 1
of the current -> where : 1
of the current -> const : 1
of the current -> meme : 1
the current where -> it : 1
current where it -> will : 1
where it will -> put : 1
where it will -> copy : 1
it will put -> the : 1
will put the -> new : 1
put the new -> node : 1
put the new -> trie : 1
new node with -> its : 1
node with its -> it : 1
with its it -> is : 1
its it is -> possible : 1
is possible that -> this : 1
is possible that -> there : 2
possible that this -> step : 1
this step destroyed -> the : 1
step destroyed the -> so : 1
destroyed the so -> it : 1
the so it -> will : 1
the so it -> is : 1
so it will -> also : 1
so it will -> words : 1
so it will -> call : 1
will also correct -> that : 1
also correct that -> using : 1
correct that using -> a : 1
using a algorithm -> a : 1
a algorithm a -> housekeeping : 1
algorithm a housekeeping -> we : 1
a housekeeping we -> insert : 1
housekeeping we insert -> items : 1
we insert items -> into : 1
insert items into -> a : 1
into a tree -> with : 1
a tree with -> key : 1
tree with key -> values : 1
with key values -> which : 1
key values which -> are : 1
values which are -> direct : 1
which are direct -> neighbors : 1
are direct neighbors -> of : 1
direct neighbors of -> each : 1
neighbors of each -> other : 1
of each other -> as : 1
each other as -> the : 1
other as the -> integer : 1
as the integer -> is : 1
the integer is -> a : 1
the integer is -> not : 1
integer is a -> neighbor : 1
is a neighbor -> of : 1
a neighbor of -> the : 1
neighbor of the -> integer : 1
of the integer -> because : 1
the integer because -> no : 1
integer because no -> other : 1
because no other -> integer : 1
no other integer -> fits : 1
other integer fits -> between : 1
integer fits between -> they : 1
fits between they -> can : 1
between they can -> also : 1
they can also -> be : 2
also be inserted -> just : 1
inserted just next -> to : 1
other in the -> it : 1
in the it -> can : 1
in the it -> just : 1
in the it -> returns : 1
in the it -> is : 1
in the it -> waits : 1
the it can -> easily : 1
it can easily -> be : 3
it can easily -> handle : 1
easily be checked -> if : 1
be checked if -> this : 1
checked if this -> is : 1
if this is -> true : 1
if this is -> the : 1
this is true -> for : 1
is true for -> a : 1
true for a -> certain : 1
for a certain -> key : 1
for a certain -> amount : 2
a certain key -> and : 1
certain key and -> an : 1
key and an -> accompanying : 1
and an accompanying -> and : 1
an accompanying and -> if : 1
accompanying and if -> this : 1
and if this -> situation : 1
if this situation -> the : 1
this situation the -> search : 1
situation the search -> algorithm : 1
search algorithm step -> can : 1
algorithm step can -> be : 1
step can be -> which : 1
can be which -> spares : 1
be which spares -> some : 1
which spares some -> crucial : 1
spares some crucial -> the : 1
some crucial the -> algorithm : 1
crucial the algorithm -> might : 1
the algorithm might -> nevertheless : 1
algorithm might nevertheless -> have : 1
might nevertheless have -> to : 1
nevertheless have to -> be : 1
to be when -> such : 1
be when such -> an : 1
when such an -> optimization : 1
such an optimization -> can : 1
an optimization can -> be : 1
optimization can be -> but : 1
can be but -> not : 1
can be but -> what : 1
be but not -> this : 1
but not this -> can : 1
not this can -> still : 1
this can still -> lead : 1
can still lead -> to : 1
still lead to -> an : 1
lead to an -> performance : 1
lead to an -> if : 1
to an performance -> it : 1
an performance it -> is : 1
performance it is -> possible : 1
possible to show -> a : 1
to show a -> runtime : 1
show a runtime -> complexity : 1
a runtime complexity -> which : 1
a runtime complexity -> of : 1
runtime complexity which -> settles : 1
complexity which settles -> down : 1
which settles down -> after : 1
settles down after -> and : 1
down after and -> then : 1
after and then -> called : 1
and then called -> the : 1
then called the -> insertion : 1
called the insertion -> hint : 1
hint is the -> insertion : 1
the insertion function -> will : 1
insertion function will -> simply : 1
function will simply -> the : 1
will simply the -> hint : 1
simply the hint -> and : 1
the hint and -> start : 1
hint and start -> over : 1
and start over -> using : 1
start over using -> the : 1
over using the -> search : 1
using the search -> this : 1
the search this -> works : 1
search this works -> is : 1
this works is -> obviously : 1
works is obviously -> modifying : 1
is obviously modifying -> the : 1
obviously modifying the -> keys : 1
of the data -> structure : 1
the data structure -> maps : 1
the data structure -> all : 1
the data structure -> it : 1
data structure maps -> from : 1
structure maps from -> keys : 1
maps from keys -> to : 2
from keys to -> values : 2
keys to values -> in : 1
keys to values -> instead : 1
to values in -> a : 1
values in a -> way : 1
values in a -> pair : 1
values in a -> we : 1
in a way -> that : 7
in a way -> really : 1
in a way -> which : 1
in a way -> where : 2
in a way -> in : 1
a way that -> the : 2
a way that -> it : 2
a way that -> specific : 1
a way that -> would : 1
a way that -> dealing : 1
a way that -> enables : 1
a way that -> might : 1
way that the -> keys : 1
way that the -> one : 1
that the keys -> are : 1
the keys are -> always : 1
keys are always -> unique : 1
are always unique -> and : 1
always unique and -> it : 1
unique and it -> is : 1
and it is -> of : 1
and it is -> also : 2
and it is -> practically : 1
and it is -> called : 1
and it is -> not : 1
and it is -> a : 1
and it is -> set : 1
it is of -> crucial : 1
it is of -> reduced : 1
is of crucial -> value : 1
of crucial value -> that : 1
crucial value that -> users : 1
value that users -> cannot : 1
that users cannot -> modify : 1
users cannot modify -> the : 1
cannot modify the -> keys : 1
modify the keys -> of : 2
keys of map -> nodes : 2
of map nodes -> that : 1
of map nodes -> are : 1
map nodes that -> are : 1
nodes that are -> already : 1
that are already -> in : 1
are already in -> order : 1
already in order -> to : 2
order to prevent -> the : 2
order to prevent -> users : 1
order to prevent -> accidental : 1
order to prevent -> because : 1
order to prevent -> that : 1
order to prevent -> we : 2
order to prevent -> garbling : 1
to prevent the -> user : 1
to prevent the -> function : 1
prevent the user -> from : 1
the user from -> modifying : 1
user from modifying -> the : 1
from modifying the -> key : 1
modifying the key -> items : 1
the key items -> of : 1
key items of -> perfectly : 1
items of perfectly -> sorted : 1
of perfectly sorted -> map : 1
perfectly sorted map -> is : 1
sorted map is -> added : 1
map is added -> to : 1
is added to -> the : 1
added to the -> key : 1
to the key -> kind : 1
the key kind -> of : 1
key kind of -> restriction : 1
kind of restriction -> is : 1
of restriction is -> perfectly : 1
restriction is perfectly -> sane : 1
is perfectly sane -> because : 1
is perfectly sane -> and : 1
perfectly sane because -> it : 1
sane because it -> harder : 1
because it harder -> for : 1
it harder for -> the : 1
harder for the -> user : 1
for the user -> the : 1
for the user -> to : 1
the user the -> wrong : 1
the user the -> works : 1
user the wrong -> what : 1
the wrong what -> shall : 1
wrong what shall -> we : 1
what shall we -> do : 1
shall we do -> if : 1
we do if -> we : 1
do if we -> really : 1
if we really -> need : 1
if we really -> want : 1
we really need -> to : 1
we really need -> random : 1
really need to -> change : 1
need to change -> the : 3
to change the -> keys : 1
to change the -> key : 1
to change the -> but : 1
to change the -> type : 1
change the keys -> of : 1
keys of some -> map : 1
of some map -> we : 1
some map we -> had : 1
map we had -> to : 2
we had to -> remove : 1
we had to -> them : 1
we had to -> the : 1
we had to -> fight : 1
we had to -> move : 1
we had to -> deal : 1
we had to -> do : 1
had to remove -> the : 1
remove the items -> of : 1
items of which -> we : 2
of which we -> need : 1
of which we -> want : 1
of which we -> feed : 1
of which we -> knew : 1
of which we -> have : 1
of which we -> can : 1
of which we -> then : 1
which we need -> to : 3
which we need -> in : 1
change the key -> value : 1
the key value -> from : 1
key value from -> the : 1
value from the -> in : 1
value from the -> source : 1
value from the -> moves : 1
value from the -> we : 2
value from the -> random : 1
from the in -> order : 1
from the in -> the : 1
the in order -> to : 8
order to reinsert -> the : 2
to reinsert the -> downside : 1
to reinsert the -> nodes : 1
reinsert the downside -> of : 1
the downside of -> this : 1
downside of this -> approach : 2
of this approach -> is : 2
this approach is -> that : 2
approach is that -> this : 1
approach is that -> implementing : 1
is that this -> always : 1
is that this -> whole : 1
is that this -> we : 1
is that this -> function : 1
that this always -> needlessly : 1
this always needlessly -> reallocates : 1
always needlessly reallocates -> some : 1
needlessly reallocates some -> which : 1
reallocates some which -> sounds : 1
some which sounds -> bad : 1
which sounds bad -> in : 1
sounds bad in -> terms : 1
bad in terms -> of : 1
terms of we -> can : 1
terms of we -> would : 1
of we can -> remove : 1
of we can -> do : 1
of we can -> generate : 1
of we can -> now : 1
of we can -> see : 1
of we can -> make : 1
we can remove -> and : 1
we can remove -> such : 1
can remove and -> reinsert : 1
remove and reinsert -> map : 1
and reinsert map -> nodes : 1
reinsert map nodes -> reallocation : 1
map nodes reallocation -> of : 1
nodes reallocation of -> we : 1
reallocation of we -> how : 1
of we how -> that : 1
we how that -> works : 1
how that works -> in : 1
that works in -> this : 1
works in this -> to : 1
in this to -> do : 2
a little application -> that : 2
little application that -> orders : 1
little application that -> takes : 1
application that orders -> the : 1
that orders the -> placement : 1
orders the placement -> of : 1
the placement of -> drivers : 1
placement of drivers -> in : 1
of drivers in -> a : 1
drivers in a -> fictional : 1
in a fictional -> race : 1
a fictional race -> in : 1
fictional race in -> an : 1
race in an -> while : 1
in an while -> drivers : 1
an while drivers -> pass : 1
while drivers pass -> each : 1
drivers pass each -> other : 1
pass each other -> during : 1
each other during -> the : 1
other during the -> we : 1
during the we -> need : 1
the we need -> to : 7
the we need -> the : 1
the we need -> an : 1
need to placement -> which : 1
to placement which -> we : 1
placement which we -> do : 1
which we do -> the : 1
which we do -> with : 1
do the new -> first : 1
the new first -> include : 1
new first include -> the : 1
first include the -> necessary : 2
include the necessary -> headers : 7
the necessary headers -> and : 13
the necessary headers -> first : 2
necessary headers and -> declare : 14
necessary headers and -> we : 1
necessary headers and -> then : 1
headers and declare -> that : 28
and declare that -> we : 33
and declare that -> use : 1
use namespace using -> namespace : 3
namespace using namespace -> the : 2
namespace using namespace -> already : 1
namespace using namespace -> will : 1
namespace using namespace -> now : 1
namespace using namespace -> immediately : 1
namespace using namespace -> order : 2
namespace using namespace -> whole : 1
namespace using namespace -> we : 4
namespace using namespace -> instantiate : 1
namespace using namespace -> need : 1
namespace using namespace -> helper : 1
namespace using namespace -> implement : 2
namespace using namespace -> function : 1
using namespace the -> race : 1
using namespace the -> sake : 1
using namespace the -> main : 1
namespace the race -> placements : 1
the race placements -> before : 1
race placements before -> and : 1
placements before and -> after : 1
before and after -> manipulating : 1
before and after -> it : 1
before and after -> launching : 1
and after manipulating -> the : 1
after manipulating the -> map : 1
manipulating the map -> so : 1
the map so -> implement : 1
map so implement -> a : 1
so implement a -> little : 2
little helper function -> for : 2
little helper function -> will : 1
little helper function -> the : 1
little helper function -> that : 1
helper function for -> template : 1
helper function for -> we : 1
helper function for -> auto : 1
function for template -> void : 1
for template void -> m : 1
for template void -> c : 1
template void m -> cout : 1
void m cout -> for : 1
m cout for -> auto : 1
cout for auto -> cout : 2
cout for auto -> recursive : 1
cout for auto -> void : 1
auto cout placement -> driver : 1
cout placement driver -> the : 1
placement driver the -> main : 1
driver the main -> we : 1
main we instantiate -> and : 1
main we instantiate -> a : 1
we instantiate and -> initialize : 1
instantiate and initialize -> a : 1
and initialize a -> map : 1
initialize a map -> that : 1
map that maps -> from : 3
that maps from -> integer : 1
that maps from -> filename : 1
that maps from -> hashes : 1
maps from integer -> values : 1
from integer values -> that : 1
integer values that -> denote : 1
values that denote -> the : 1
that denote the -> place : 1
that denote the -> beginning : 1
that denote the -> limits : 1
denote the place -> to : 1
the place to -> strings : 1
the place to -> specify : 1
place to strings -> that : 1
to strings that -> contain : 1
strings that contain -> the : 1
strings that contain -> more : 1
strings that contain -> then : 1
that contain the -> we : 1
that contain the -> total : 1
contain the we -> also : 1
the we also -> print : 1
we also print -> the : 2
also print the -> map : 1
also print the -> production : 1
print the map -> because : 1
the map because -> we : 1
the map because -> this : 1
map because we -> it : 1
because we it -> in : 1
we it in -> the : 1
it in the -> next : 3
it in the -> head : 1
in the next -> int : 2
in the next -> il : 1
in the next -> stl : 1
in the next -> recursive : 1
in the next -> this : 1
in the next -> we : 1
in the next -> in : 1
in the next -> three : 1
in the next -> and : 1
in the next -> struct : 1
in the next -> step : 1
the next int -> kong : 1
the next int -> cout : 1
next int kong -> say : 1
int kong say -> that : 1
kong say that -> during : 1
say that during -> one : 1
that during one -> race : 1
during one race -> bowser : 1
one race bowser -> had : 1
race bowser had -> a : 1
bowser had a -> little : 1
had a little -> accident : 1
a little accident -> and : 1
little accident and -> dropped : 1
accident and dropped -> to : 1
and dropped to -> the : 1
dropped to the -> last : 1
the last place -> and : 1
the last place -> to : 1
last place and -> donkey : 1
place and donkey -> kong : 1
and donkey kong -> took : 1
and donkey kong -> while : 1
and donkey kong -> race : 1
donkey kong took -> the : 1
kong took the -> chance : 1
took the chance -> to : 1
the chance to -> jump : 1
the chance to -> access : 1
chance to jump -> from : 1
to jump from -> the : 1
jump from the -> last : 1
last place to -> the : 1
place to the -> third : 1
the third in -> that : 1
third in that -> we : 1
that we first -> need : 1
we first need -> to : 4
we first need -> some : 1
need to extract -> their : 1
to extract their -> map : 1
extract their map -> nodes : 1
their map nodes -> from : 1
map nodes from -> the : 1
nodes from the -> map : 1
from the map -> because : 1
from the map -> to : 2
map because this -> is : 1
because this is -> the : 1
because this is -> quite : 1
because this is -> a : 3
is the only -> way : 1
is the only -> parameter : 1
is the only -> the : 2
is the only -> one : 1
is the only -> owner : 1
way to manipulate -> their : 1
to manipulate their -> the : 1
manipulate their the -> function : 1
their the function -> is : 1
the function is -> a : 2
the function is -> the : 1
the function is -> and : 1
the function is -> basically : 1
the function is -> not : 2
the function is -> able : 1
the function is -> already : 1
function is a -> new : 1
function is a -> style : 1
function is a -> bit : 1
function is a -> too : 1
new it removes -> items : 1
it removes items -> from : 1
removes items from -> a : 1
from a map -> without : 1
a map without -> any : 1
map without any -> side : 1
without any side -> also : 1
any side also -> open : 1
side also open -> a : 1
also open a -> new : 1
open a new -> scope : 1
open a new -> first : 1
a new scope -> for : 1
a new scope -> because : 1
new scope for -> this : 1
scope for this -> auto : 1
for this auto -> a : 1
this auto a -> auto : 1
auto a auto -> b : 2
a auto b -> we : 2
a auto b -> strings : 1
a auto b -> auto : 1
auto b we -> can : 1
auto b we -> add : 1
b we can -> swap : 1
b we can -> finally : 1
we can swap -> and : 1
can swap and -> donkey : 1
swap and donkey -> kong : 1
donkey kong while -> the : 1
kong while the -> keys : 1
while the keys -> of : 1
map nodes are -> usually : 1
nodes are usually -> not : 1
are usually not -> mutable : 1
usually not mutable -> because : 1
not mutable because -> they : 1
mutable because they -> are : 1
because they are -> declared : 1
because they are -> not : 1
because they are -> tightly : 1
because they are -> so : 1
are declared we -> can : 1
declared we can -> modify : 1
we can modify -> the : 1
can modify the -> keys : 1
keys of items -> which : 1
of items which -> we : 1
items which we -> extracted : 1
which we extracted -> using : 1
we extracted using -> the : 1
extracted using the -> method : 1
extracted using the -> extract : 1
the method new -> overload : 1
method new overload -> in : 1
new overload in -> that : 1
overload in that -> accepts : 1
in that accepts -> the : 1
that accepts the -> handles : 1
accepts the handles -> of : 1
the handles of -> extracted : 1
handles of extracted -> in : 1
of extracted in -> order : 1
extracted in order -> to : 1
order to insert -> them : 1
order to insert -> a : 1
insert them without -> touching : 1
them without touching -> the : 1
without touching the -> leaving : 1
touching the leaving -> the : 1
the leaving the -> we : 1
leaving the we -> print : 2
the we print -> the : 3
the we print -> this : 1
print the new -> race : 1
print the new -> content : 1
print the new -> chunked : 1
the new race -> placement : 1
new race placement -> and : 1
race placement and -> let : 1
placement and let -> the : 1
and let the -> application : 1
and let the -> user : 1
and let the -> consumers : 1
let the application -> and : 1
the application and -> running : 1
application and running -> the : 1
the following we -> see : 3
the following we -> feed : 1
the following we -> define : 1
the following we -> can : 1
following we see -> the : 2
following we see -> that : 1
see the race -> placement : 1
the race placement -> in : 1
race placement in -> the : 1
placement in the -> fresh : 1
in the fresh -> map : 1
the fresh map -> instance : 1
fresh map instance -> and : 1
map instance and -> then : 1
instance and then -> we : 1
and then we -> see : 3
and then we -> already : 1
and then we -> will : 2
and then we -> out : 1
and then we -> are : 1
and then we -> enter : 1
and then we -> did : 1
and then we -> declare : 4
and then we -> apply : 1
and then we -> finally : 1
and then we -> can : 2
and then we -> need : 1
then we see -> it : 1
then we see -> how : 2
then we see -> all : 1
we see it -> again : 1
we see it -> flags : 1
see it again -> after : 1
it again after -> swapping : 1
again after swapping -> and : 1
after swapping and -> donkey : 1
swapping and donkey -> kong : 1
donkey kong race -> mario : 2
kong race mario -> luigi : 2
race mario luigi -> bowser : 1
race mario luigi -> donkey : 1
mario luigi bowser -> peach : 1
luigi bowser peach -> yoshi : 1
bowser peach yoshi -> koopa : 1
peach yoshi koopa -> toad : 2
yoshi koopa toad -> donkey : 1
yoshi koopa toad -> it : 1
koopa toad donkey -> kong : 1
toad donkey kong -> race : 1
mario luigi donkey -> kong : 1
luigi donkey kong -> peach : 1
donkey kong peach -> yoshi : 1
kong peach yoshi -> koopa : 1
koopa toad it -> got : 1
toad it got -> a : 1
it got a -> new : 1
got a new -> member : 1
a new member -> function : 1
new member function -> it : 1
member function it -> comes : 1
function it comes -> in : 1
it comes in -> this : 1
comes in this -> we : 1
this we used -> the : 1
this we used -> which : 1
this we used -> and : 1
this we used -> to : 1
we used the -> second : 1
we used the -> very : 1
we used the -> parallel : 1
we used the -> method : 1
used the second -> which : 1
the second which -> accepts : 1
the second which -> will : 1
second which accepts -> a : 1
accepts a key -> and : 1
a key and -> then : 1
key and then -> finds : 1
and then finds -> and : 1
then finds and -> extracts : 1
finds and extracts -> the : 1
and extracts the -> map : 1
extracts the map -> node : 1
the map node -> that : 1
map node that -> matches : 1
node that matches -> the : 1
that matches the -> key : 1
matches the key -> the : 1
the key the -> first : 1
key the first -> one : 1
first one accepts -> an : 1
one accepts an -> which : 1
accepts an which -> implies : 1
accepts an which -> acts : 1
an which implies -> that : 1
which implies that -> it : 1
implies that it -> is : 1
it is it -> need : 1
it is it -> needs : 1
it is it -> is : 2
it is it -> shall : 1
it is it -> gets : 1
it is it -> prepends : 1
is it need -> to : 1
it need to -> search : 1
need to search -> for : 1
to search for -> the : 2
to search for -> a : 1
search for the -> we : 1
search for the -> cologne : 1
search for the -> first : 1
search for the -> value : 1
search for the -> idea : 1
search for the -> next : 1
search for the -> patterns : 1
for the we -> try : 1
for the we -> call : 1
the we try -> to : 1
try to extract -> an : 1
to extract an -> item : 1
extract an item -> that : 1
an item that -> exist : 1
item that exist -> with : 1
that exist with -> the : 1
exist with the -> second : 1
with the second -> method : 1
with the second -> highest : 1
the second method -> one : 1
second method one -> that : 1
method one that -> searches : 1
one that searches -> using : 1
that searches using -> a : 1
searches using a -> returns : 1
using a returns -> an : 1
a returns an -> member : 1
returns an member -> method : 1
an member method -> returns : 1
member method returns -> us : 1
method returns us -> a : 1
returns us a -> boolean : 1
returns us a -> function : 1
returns us a -> pair : 3
returns us a -> proxy : 1
returns us a -> typed : 1
returns us a -> pointer : 1
returns us a -> shared : 2
returns us a -> random : 1
returns us a -> map : 1
us a boolean -> value : 1
boolean value that -> tells : 1
value that tells -> instance : 1
that tells instance -> is : 1
tells instance is -> empty : 1
instance is empty -> or : 1
is empty or -> accessing : 1
empty or accessing -> any : 1
or accessing any -> other : 1
accessing any other -> method : 1
any other method -> on : 1
other method on -> an : 1
method on an -> empty : 1
an empty instance -> leads : 1
empty instance leads -> to : 1
instance leads to -> undefined : 1
leads to undefined -> extracting : 1
to undefined extracting -> we : 1
undefined extracting we -> were : 1
extracting we were -> able : 1
we were able -> to : 6
were able to -> modify : 1
were able to -> stick : 1
were able to -> write : 1
were able to -> copy : 1
were able to -> fully : 1
were able to -> check : 1
able to modify -> their : 1
to modify their -> keys : 1
modify their keys -> using : 1
their keys using -> the : 1
keys using the -> which : 1
the which gives -> us : 2
which gives us -> nonconst : 1
which gives us -> the : 1
which gives us -> a : 1
gives us nonconst -> access : 1
us nonconst access -> to : 1
nonconst access to -> the : 1
access to the -> although : 1
access to the -> elements : 1
access to the -> encapsulated : 1
access to the -> after : 1
to the although -> keys : 1
the although keys -> are : 1
although keys are -> usually : 1
keys are usually -> that : 1
are usually that -> in : 1
usually that in -> order : 1
that in order -> to : 2
reinsert the nodes -> into : 1
the nodes into -> the : 1
nodes into the -> map : 1
into the map -> we : 2
had to them -> into : 1
to them into -> the : 1
them into the -> this : 1
them into the -> int : 1
them into the -> map : 1
them into the -> puts : 1
them into the -> we : 1
into the this -> makes : 2
the this makes -> is : 1
the this makes -> the : 2
this makes is -> all : 1
makes is all -> about : 1
is all about -> avoiding : 1
is all about -> converting : 1
all about avoiding -> unnecessary : 1
about avoiding unnecessary -> copies : 1
avoiding unnecessary copies -> and : 1
unnecessary copies and -> note : 1
copies and note -> that : 1
note that while -> we : 1
note that while -> unique : 1
that while we -> move : 1
while we move -> a : 1
we move a -> this : 1
move a this -> does : 1
a this does -> not : 1
does not result -> in : 1
not result in -> actual : 1
result in actual -> moves : 1
in actual moves -> of : 1
actual moves of -> any : 1
moves of any -> of : 1
of any of -> the : 1
any of the -> container : 1
of the container -> nodes : 1
of the container -> these : 1
of the container -> payload : 1
the container nodes -> been : 1
container nodes been -> extracted : 1
nodes been extracted -> using : 1
been extracted using -> the : 1
using the extract -> method : 1
the extract method -> are : 1
extract method are -> actually : 1
method are actually -> very : 1
are actually very -> we : 1
actually very we -> can : 1
very we can -> extract : 1
very we can -> express : 1
we can extract -> instance : 1
can extract instance -> and : 1
extract instance and -> insert : 1
instance and insert -> it : 1
and insert it -> into : 1
insert it into -> any : 1
insert it into -> the : 2
it into any -> other : 1
into any other -> or : 1
any other or -> even : 1
other or even -> it : 1
or even it -> does : 1
even it does -> also : 1
it does also -> work : 1
does also work -> between : 1
also work between -> and : 1
work between and -> as : 1
between and as -> well : 1
and as well -> as : 2
as well as -> and : 1
as well as -> all : 1
as well as -> the : 2
as well as -> many : 1
as well as -> how : 1
as well as -> great : 1
as well as -> some : 1
as well as -> a : 2
as well as -> manipulating : 1
as well as -> with : 1
well as and -> respective : 1
as and respective -> order : 1
and respective order -> to : 1
respective order to -> move : 1
order to move -> items : 1
order to move -> all : 1
to move items -> between : 1
move items between -> different : 1
items between different -> the : 1
between different the -> types : 1
different the types -> of : 1
types of and -> allocator : 1
of and allocator -> need : 1
and allocator need -> to : 1
allocator need to -> be : 1
to be note -> that : 1
be note that -> even : 1
note that even -> if : 1
that even if -> that : 1
even if that -> is : 1
if that is -> the : 1
if that is -> for : 1
if that is -> not : 3
is the we -> cannot : 1
is the we -> are : 1
is the we -> write : 1
is the we -> construct : 1
is the we -> used : 1
the we cannot -> move : 1
we cannot move -> nodes : 1
cannot move nodes -> from : 1
move nodes from -> a : 1
nodes from a -> to : 1
from a to -> an : 2
a to an -> or : 1
a to an -> with : 1
to an or -> from : 1
an or from -> a : 1
or from a -> to : 1
or from a -> string : 1
an with custom -> we : 1
with custom we -> use : 1
custom we use -> instead : 1
we use instead -> of : 2
use instead of -> we : 1
use instead of -> just : 1
instead of we -> have : 1
instead of we -> cannot : 1
instead of we -> use : 1
instead of we -> will : 1
of we have -> a : 1
have a different -> degree : 1
a different degree -> of : 1
different degree of -> freedom : 1
degree of freedom -> for : 1
of freedom for -> the : 1
freedom for the -> choice : 1
for the choice -> of : 1
the choice of -> the : 2
choice of the -> key : 1
choice of the -> distribution : 1
the key type -> which : 1
key type which -> shall : 1
type which shall -> be : 1
shall be demands -> that : 1
be demands that -> there : 1
demands that there -> is : 1
is a natural -> order : 1
natural order between -> all : 1
order between all -> key : 1
between all key -> this : 1
all key this -> items : 1
key this items -> can : 1
this items can -> be : 1
be but what -> if : 2
but what if -> we : 3
what if we -> for : 1
what if we -> write : 1
what if we -> have : 1
what if we -> calculate : 1
what if we -> want : 1
if we for -> mathematical : 1
if we for -> an : 1
we for mathematical -> vectors : 1
for mathematical vectors -> as : 1
mathematical vectors as -> a : 1
vectors as a -> key : 1
as a key -> there : 1
as a key -> for : 1
a key there -> is : 1
key there is -> no : 1
there is no -> in : 2
there is no -> copies : 1
there is no -> such : 2
there is no -> template : 1
there is no -> translation : 1
there is no -> way : 1
there is no -> sense : 1
there is no -> syntax : 1
there is no -> instance : 1
there is no -> possibility : 1
there is no -> object : 1
there is no -> item : 2
is no in -> a : 1
is no in -> this : 1
no in a -> relation : 1
in a relation -> for : 1
a relation for -> such : 1
relation for such -> as : 1
for such as -> a : 1
such as a -> vector : 1
as a vector -> is : 1
a vector is -> not : 1
a vector is -> because : 1
vector is not -> or : 1
vector is not -> large : 1
is not or -> than : 1
not or than -> they : 1
or than they -> just : 1
than they just -> point : 1
they just point -> in : 1
just point in -> different : 1
point in different -> this : 1
in different this -> is : 1
this is completely -> fine : 1
is completely fine -> for : 1
completely fine for -> because : 1
fine for because -> it : 1
for because it -> will : 1
because it will -> not : 1
it will not -> distinguish : 1
it will not -> throw : 1
it will not -> only : 1
will not distinguish -> items : 1
not distinguish items -> via : 1
distinguish items via -> their : 1
items via their -> ordering : 1
via their ordering -> via : 1
their ordering via -> the : 1
ordering via the -> only : 1
via the only -> thing : 1
the only thing -> we : 3
the only thing -> this : 1
only thing we -> need : 2
only thing we -> do : 1
only thing we -> did : 3
only thing we -> had : 1
only thing we -> to : 1
thing we need -> to : 4
to do is -> to : 2
do is to -> implement : 1
do is to -> get : 1
is to implement -> a : 1
to implement a -> for : 1
to implement a -> histogram : 1
to implement a -> range : 1
to implement a -> whole : 1
to implement a -> class : 1
to implement a -> bundle : 1
to implement a -> function : 1
to implement a -> helper : 1
to implement a -> which : 2
to implement a -> program : 4
to implement a -> little : 1
to implement a -> typical : 1
to implement a -> simple : 2
implement a for -> our : 1
a for our -> own : 1
for our own -> and : 1
our own and -> an : 1
our own and -> give : 1
own and an -> operator : 1
and an operator -> which : 1
an operator which -> tells : 1
operator which tells -> objects : 1
which tells objects -> are : 1
tells objects are -> this : 1
objects are this -> demonstrate : 1
are this demonstrate -> this : 1
this demonstrate this -> in : 1
demonstrate this in -> an : 1
this in an -> to : 1
in an to -> do : 1
an to do -> this : 1
this we a -> simple : 1
this we a -> stream : 1
this we a -> mathematical : 1
this we a -> helper : 1
this we a -> program : 2
this we a -> little : 3
this we a -> tool : 1
we a simple -> which : 1
simple which has -> no : 1
which has no -> hash : 1
has no hash -> so : 1
no hash so -> we : 1
hash so we -> need : 1
to define it -> then : 1
define it then -> we : 1
it then we -> put : 1
it then we -> call : 1
then we put -> it : 1
then we put -> the : 1
we put it -> to : 1
put it to -> use : 1
put it to -> only : 1
put it to -> we : 1
it to use -> by : 1
to use by -> mapping : 1
use by mapping -> values : 1
by mapping values -> to : 1
mapping values to -> first : 1
values to first -> include : 1
to first include -> needed : 1
first include needed -> in : 1
include needed in -> order : 1
to print and -> use : 1
print and use -> we : 1
and use we -> define : 1
use we define -> our : 1
we define our -> own : 1
define our own -> custom : 1
define our own -> time : 1
define our own -> literal : 1
our own custom -> which : 1
our own custom -> container : 1
our own custom -> string : 1
own custom which -> is : 1
custom which is -> not : 1
which is not -> trivially : 1
which is not -> easily : 1
which is not -> space : 1
is not trivially -> hashable : 1
not trivially hashable -> by : 1
trivially hashable by -> hash : 1
hashable by hash -> struct : 1
by hash struct -> coord : 1
hash struct coord -> int : 1
struct coord int -> int : 1
coord int int -> do : 1
int int do -> not : 1
int do not -> only : 1
do not only -> need : 1
not only need -> a : 1
only need a -> hash : 1
need a hash -> function : 1
a hash function -> in : 1
hash function in -> order : 1
function in order -> to : 3
use the structure -> as : 1
the structure as -> a : 1
structure as a -> key : 1
structure as a -> function : 1
a key for -> a : 1
key for a -> hash : 1
for a hash -> it : 1
a hash it -> also : 1
hash it also -> needs : 1
it also needs -> a : 1
it also needs -> for : 1
also needs a -> comparison : 1
also needs a -> as : 1
needs a comparison -> operator : 1
a comparison operator -> bool : 1
a comparison operator -> it : 1
comparison operator bool -> coord : 1
operator bool coord -> const : 1
bool coord const -> coord : 1
coord const coord -> return : 1
const coord return -> order : 1
coord return order -> to : 1
return order to -> extend : 1
return order to -> keep : 1
return order to -> make : 1
return order to -> understand : 1
order to extend -> the : 1
to extend the -> own : 1
extend the own -> hashing : 1
the own hashing -> we : 1
own hashing we -> the : 1
hashing we the -> namespace : 1
we the namespace -> and : 1
the namespace and -> create : 1
the namespace and -> has : 1
namespace and create -> our : 1
and create our -> own : 1
create our own -> template : 1
our own template -> struct : 1
own template struct -> it : 1
template struct it -> contains : 1
struct it contains -> the : 1
it contains the -> same : 1
it contains the -> file : 1
contains the same -> type : 1
contains the same -> code : 1
contains the same -> then : 1
same type alias -> clauses : 1
type alias clauses -> as : 1
alias clauses as -> other : 1
clauses as other -> hash : 1
as other hash -> namespace : 1
other hash namespace -> std : 1
hash namespace std -> template : 1
namespace std template -> struct : 3
std template struct -> using : 3
template struct using -> using : 3
struct using using -> meat : 1
struct using using -> compile : 1
struct using using -> using : 1
using using meat -> of : 1
using meat of -> this : 1
meat of this -> is : 1
the we are -> just : 1
the we are -> the : 1
the we are -> using : 1
the we are -> at : 1
the we are -> not : 1
the we are -> free : 1
are just adding -> the : 1
just adding the -> numeric : 1
adding the numeric -> member : 1
the numeric member -> values : 1
numeric member values -> of : 1
member values of -> which : 1
values of which -> is : 1
is a poor -> hashing : 1
a poor hashing -> but : 1
poor hashing but -> for : 1
hashing but for -> the : 1
showing how to -> implement : 1
how to implement -> good : 1
how to implement -> an : 1
how to implement -> similar : 1
to implement good -> a : 1
implement good a -> good : 1
good a good -> hash : 1
a good hash -> function : 1
good hash function -> tries : 1
hash function tries -> to : 1
function tries to -> distribute : 1
function tries to -> lock : 2
tries to distribute -> values : 1
tries to distribute -> the : 1
to distribute values -> as : 1
distribute values as -> evenly : 1
values as evenly -> over : 1
as evenly over -> the : 1
evenly over the -> whole : 1
over the whole -> value : 1
over the whole -> string : 1
over the whole -> we : 1
the whole value -> range : 1
whole value range -> as : 1
value range as -> in : 1
range as in -> order : 1
as in order -> to : 2
reduce the amount -> of : 2
the amount of -> const : 1
the amount of -> work : 1
the amount of -> if : 1
amount of const -> return : 1
of const return -> can : 1
const return can -> now : 1
can now instantiate -> a : 1
now instantiate a -> new : 1
instantiate a new -> which : 1
instantiate a new -> shared : 1
a new which -> accepts : 1
a new which -> came : 1
a new which -> contains : 1
new which accepts -> instances : 1
which accepts instances -> as : 1
accepts instances as -> a : 1
instances as a -> and : 1
as a and -> maps : 1
a and maps -> arbitrary : 1
and maps arbitrary -> as : 1
maps arbitrary as -> this : 1
arbitrary as this -> recipe : 1
as this recipe -> is : 1
this recipe is -> about : 1
this recipe is -> just : 1
this recipe is -> the : 1
this recipe is -> a : 1
this recipe is -> to : 1
recipe is about -> enabling : 1
is about enabling -> our : 1
about enabling our -> own : 1
enabling our own -> types : 1
our own types -> for : 1
our own types -> in : 1
own types for -> this : 1
types for this -> is : 1
this is pretty -> much : 1
this is pretty -> as : 1
this is pretty -> but : 1
is pretty much -> it : 1
is pretty much -> leaving : 1
is pretty much -> hardcoded : 1
pretty much it -> instantiate : 1
much it instantiate -> a : 1
it instantiate a -> map : 1
instantiate a map -> with : 1
instantiate a map -> implementation : 1
map with our -> own : 1
with our own -> fill : 1
with our own -> custom : 1
our own fill -> it : 1
own fill it -> with : 1
with some and -> print : 1
some and print -> its : 1
and print its -> int : 1
and print its -> content : 1
and print its -> own : 1
print its int -> m : 1
its int m -> for : 1
int m for -> auto : 1
m for auto -> value : 1
for auto value -> and : 1
auto value and -> running : 1
value and running -> the : 2
following it when -> we : 1
it when we -> instantiate : 1
when we instantiate -> a : 1
a map implementation -> like : 1
map implementation like -> we : 1
implementation like we -> is : 1
like we is -> not : 1
we is not -> too : 1
not too obvious -> that : 1
too obvious that -> there : 1
that there happens -> a : 1
there happens a -> lot : 1
happens a lot -> of : 1
lot of magic -> in : 1
of magic in -> the : 1
magic in the -> the : 1
the compiler creates -> our : 1
compiler creates our -> have : 1
creates our have -> a : 1
our have a -> look : 1
at the complete -> definition : 1
the complete definition -> of : 1
complete definition of -> class : 1
definition of class -> class : 1
of class class -> class : 1
of class class -> period : 1
class class class -> hash : 1
class class hash -> class : 1
class hash class -> keyequal : 1
hash class keyequal -> class : 1
class keyequal class -> allocator : 1
keyequal class allocator -> class : 1
class allocator class -> first : 1
class allocator class -> is : 1
allocator class first -> types : 1
class first types -> are : 1
first types are -> those : 1
types are those -> we : 1
are those we -> filled : 1
those we filled -> with : 1
we filled with -> and : 1
we filled with -> lots : 1
filled with and -> which : 1
with and which -> is : 1
and which is -> the : 1
and which is -> why : 1
and which is -> a : 1
is the simple -> and : 1
the simple and -> obvious : 1
simple and obvious -> the : 1
and obvious the -> other : 1
obvious the other -> types : 1
the other types -> are : 1
other types are -> as : 1
types are as -> they : 1
are as they -> are : 1
as they are -> automatically : 1
they are automatically -> filled : 1
are automatically filled -> with : 1
automatically filled with -> existing : 1
filled with existing -> standard : 1
with existing standard -> template : 1
existing standard template -> which : 1
standard template which -> themselves : 1
template which themselves -> take : 1
which themselves take -> template : 1
themselves take template -> those : 1
take template those -> are : 1
template those are -> fed : 1
those are fed -> with : 1
are fed with -> our : 1
fed with our -> choice : 1
with our choice -> for : 2
our choice for -> the : 1
our choice for -> we : 1
choice for the -> first : 1
choice for the -> average : 1
the first as -> default : 1
first as default -> this : 1
as default this -> the : 1
default this the -> template : 1
this the template -> parameter : 1
the template parameter -> is : 1
the template parameter -> it : 1
the template parameter -> applies : 1
the template parameter -> the : 1
template parameter is -> the : 1
parameter is the -> interesting : 1
parameter is the -> value : 1
parameter is the -> current : 1
parameter is the -> next : 1
parameter is the -> probability : 1
is the interesting -> when : 1
is the interesting -> we : 1
the interesting when -> we : 1
interesting when we -> do : 1
when we do -> not : 1
do not explicitly -> define : 1
do not explicitly -> declare : 1
not explicitly define -> anything : 1
explicitly define anything -> it : 1
define anything it -> is : 1
anything it is -> going : 1
it is going -> to : 1
is going to -> be : 1
is going to -> happen : 1
is going to -> descend : 1
going to be -> specialized : 1
going to be -> a : 1
to be specialized -> on : 1
be specialized on -> the : 1
be specialized on -> and : 1
specialized on the -> stl : 1
on the stl -> already : 1
on the stl -> provides : 1
the stl already -> contains : 1
the stl already -> provides : 2
stl already contains -> specializations : 1
already contains specializations -> for : 1
contains specializations for -> a : 1
specializations for a -> lot : 1
for a lot -> of : 3
lot of types -> such : 1
of types such -> and : 1
types such and -> many : 1
such and many -> these : 1
and many these -> classes : 1
many these classes -> know : 1
these classes know -> how : 1
classes know how -> to : 1
how to deal -> with : 4
to deal with -> such : 1
to deal with -> the : 2
to deal with -> this : 1
to deal with -> is : 1
to deal with -> that : 1
to deal with -> paths : 1
deal with such -> specific : 1
with such specific -> types : 1
such specific types -> in : 1
specific types in -> order : 1
types in order -> to : 2
order to calculate -> optimal : 1
order to calculate -> the : 1
to calculate optimal -> hash : 1
calculate optimal hash -> values : 1
optimal hash values -> from : 1
hash values from -> the : 1
values from the -> stl : 1
values from the -> two : 1
values from the -> standard : 1
values from the -> source : 1
values from the -> old : 1
values from the -> first : 2
values from the -> vector : 1
values from the -> input : 1
values from the -> futures : 1
stl does not -> know : 1
stl does not -> only : 1
stl does not -> provide : 1
does not know -> how : 1
does not know -> about : 1
does not know -> of : 1
not know how -> to : 1
how to calculate -> a : 1
to calculate a -> hash : 1
calculate a hash -> value : 1
a hash value -> from : 1
hash value from -> our : 1
value from our -> so : 1
from our so -> what : 1
our so what -> we : 1
so what we -> did : 1
what we did -> was : 1
what we did -> in : 3
what we did -> when : 1
we did was -> to : 1
we did was -> creating : 1
did was to -> just : 1
was to just -> which : 1
to just which -> knows : 1
just which knows -> how : 1
which knows how -> to : 1
knows how to -> deal : 1
knows how to -> and : 1
deal with the -> compiler : 1
deal with the -> same : 1
deal with the -> question : 1
deal with the -> remainder : 1
with the compiler -> can : 1
compiler can now -> go : 1
can now go -> through : 1
now go through -> the : 1
list of all -> specializations : 1
of all specializations -> it : 1
all specializations it -> and : 1
specializations it and -> will : 1
it and will -> find : 1
and will find -> our : 1
will find our -> implementation : 1
find our implementation -> to : 1
our implementation to -> match : 1
implementation to match -> it : 1
to match it -> with : 1
match it with -> the : 1
with the type -> we : 1
the type we -> provided : 1
type we provided -> as : 1
we provided as -> key : 1
we provided as -> a : 1
provided as key -> we : 1
as key we -> did : 1
key we did -> not : 1
we did not -> add : 1
we did not -> in : 1
we did not -> store : 1
we did not -> do : 1
we did not -> need : 1
we did not -> capture : 1
we did not -> know : 1
we did not -> use : 3
we did not -> write : 1
we did not -> fill : 1
we did not -> copy : 1
did not add -> a : 1
not add a -> new : 1
add a new -> and : 1
a new and -> named : 1
a new and -> larger : 1
new and named -> it : 1
and named it -> we : 1
named it we -> could : 1
it we could -> still : 1
we could still -> use : 1
could still use -> it : 1
still use it -> with : 1
the following instantiation -> is : 1
following instantiation is -> obviously : 1
instantiation is obviously -> more : 1
is obviously more -> to : 1
obviously more to -> and : 1
more to and -> not : 1
to and not -> as : 1
and not as -> nice : 1
not as nice -> to : 1
as nice to -> read : 1
nice to read -> as : 1
to read as -> when : 1
read as when -> the : 1
as when the -> compiler : 1
when the compiler -> finds : 1
the compiler finds -> the : 1
compiler finds the -> right : 1
finds the right -> hashing : 1
the right hashing -> implementation : 1
right hashing implementation -> duplicates : 1
hashing implementation duplicates -> from : 1
implementation duplicates from -> user : 1
order with is -> a : 1
with is a -> strange : 1
is a strange -> it : 1
strange it kind -> of : 1
kind of works -> like : 1
of works like -> but : 1
works like but -> it : 1
like but it -> contains : 1
like but it -> applies : 1
like but it -> is : 1
like but it -> print : 1
but it contains -> only : 1
it contains only -> keys : 1
contains only keys -> as : 1
only keys as -> no : 1
keys as no -> so : 1
as no so -> it : 1
no so it -> can : 1
it can hardly -> be : 1
can hardly be -> used : 1
hardly be used -> as : 1
be used as -> a : 1
be used as -> an : 2
be used as -> parameters : 1
be used as -> reference : 1
be used as -> l : 1
used as a -> way : 1
as a way -> to : 1
a way to -> map : 1
a way to -> pair : 1
a way to -> point : 1
way to map -> values : 1
to map values -> of : 1
map values of -> one : 1
values of one -> type : 1
of one type -> to : 1
one type to -> the : 1
type to the -> just : 1
type to the -> next : 1
type to the -> function : 1
to the just -> because : 1
the just because -> there : 1
just because there -> are : 1
because there are -> less : 1
because there are -> different : 1
because there are -> many : 1
there are less -> obvious : 1
are less obvious -> use : 1
less obvious use -> cases : 1
obvious use cases -> for : 1
use cases for -> a : 1
use cases for -> it : 1
cases for a -> lot : 1
lot of developers -> do : 1
of developers do -> not : 1
developers do not -> even : 1
do not even -> know : 1
do not even -> need : 1
not even know -> about : 1
even know about -> its : 1
know about its -> then : 1
about its then -> they : 1
its then they -> start : 1
then they start -> to : 1
they start to -> implement : 1
start to implement -> things : 1
to implement things -> although : 1
implement things although -> would : 1
things although would -> be : 1
although would be -> of : 1
be of great -> help : 1
of great help -> in : 1
great help in -> some : 1
great help in -> that : 1
help in some -> of : 1
in some of -> these : 1
some of these -> how : 1
some of these -> settings : 1
of these how -> to : 1
these how to -> put : 1
to put to -> use : 1
put to use -> in : 1
to use in -> an : 1
to use in -> the : 1
to use in -> order : 3
to use in -> our : 1
use in an -> example : 1
in an example -> where : 1
in an example -> directory : 1
an example where -> we : 1
where we collect -> potentially : 1
we collect potentially -> many : 1
collect potentially many -> different : 1
potentially many different -> in : 1
many different in -> order : 1
different in order -> to : 1
order to them -> and : 1
order to them -> in : 1
to them and -> output : 1
to them and -> return : 1
them and output -> a : 1
and output a -> selection : 1
and output a -> pointer : 1
output a selection -> of : 1
a selection of -> the : 1
selection of the -> to : 1
of the to -> do : 1
of the to -> operate : 1
the to do -> this : 4
the to do -> are : 1
the to do -> strings : 1
the to do -> implement : 1
the to do -> a : 1
we a stream -> of : 1
a stream of -> words : 1
a stream of -> be : 1
stream of words -> from : 1
of words from -> the : 1
words from the -> standard : 2
words from the -> several : 1
words from the -> input : 1
words from the -> in : 1
from the standard -> all : 1
from the standard -> and : 1
from the standard -> input : 2
from the standard -> this : 1
from the standard -> int : 1
from the standard -> traits : 1
the standard all -> words : 1
standard all words -> are : 1
all words are -> put : 1
words are put -> into : 1
are put into -> an : 1
put into an -> this : 1
put into an -> inactive : 1
into an this -> way : 1
an this way -> we : 1
we can then -> enumerate : 1
we can then -> catch : 1
can then enumerate -> all : 1
then enumerate all -> unique : 1
enumerate all unique -> words : 1
all unique words -> from : 2
unique words from -> the : 2
from the several -> different : 1
the several different -> stl : 1
several different stl -> for : 1
different stl for -> which : 1
stl for which -> we : 1
to include multiple -> order : 1
include multiple order -> to : 1
multiple order to -> spare : 1
us some we -> that : 1
us some we -> declare : 2
some we that -> we : 1
we that we -> are : 1
using namespace using -> namespace : 16
using namespace already -> writing : 1
namespace already writing -> the : 1
already writing the -> actual : 1
writing the actual -> which : 1
the actual which -> begins : 1
actual which begins -> with : 1
which begins with -> the : 1
begins with the -> function : 1
with the function -> instantiating : 1
with the function -> auto : 1
with the function -> we : 1
with the function -> it : 1
the function instantiating -> an : 1
function instantiating an -> which : 1
instantiating an which -> stores : 1
an which stores -> int : 1
which stores int -> next : 1
stores int next -> thing : 1
int next thing -> to : 1
next thing to -> do : 1
thing to do -> is : 1
thing to do -> with : 1
is to get -> the : 1
to get the -> user : 1
to get the -> top : 1
to get the -> individual : 1
to get the -> items : 1
to get the -> subtrie : 1
to get the -> string : 1
to get the -> actual : 1
to get the -> cycle : 1
to get the -> we : 1
to get the -> traffic : 1
to get the -> final : 1
to get the -> end : 1
to get the -> result : 1
to get the -> size : 1
get the user -> just : 1
the user just -> reading : 1
user just reading -> from : 1
just reading from -> standard : 1
reading from standard -> and : 1
from standard and -> do : 1
from standard and -> print : 1
standard and do -> that : 1
and do that -> using : 1
that using the -> handy : 1
that using the -> auto : 1
using the handy -> it : 1
using the handy -> cout : 1
the handy it -> a : 1
handy it a -> pair : 1
it a pair -> of : 1
pair of which -> represent : 1
of which represent -> the : 1
which represent the -> user : 1
which represent the -> and : 1
which represent the -> four : 1
represent the user -> we : 1
the user we -> can : 1
the user we -> usually : 1
the user we -> call : 1
the user we -> error : 1
user we can -> just : 1
can just fill -> the : 1
just fill the -> set : 1
fill the set -> from : 1
the set from -> it : 1
set from it -> using : 1
from it using -> an : 1
it using an -> already : 1
using an already -> in : 1
an already in -> order : 1
to see what -> words : 1
to see what -> we : 1
to see what -> each : 1
to see what -> limitations : 1
see what words -> we : 1
what words we -> got : 1
words we got -> from : 1
we got from -> standard : 1
we got from -> it : 1
got from standard -> we : 1
from standard we -> just : 1
standard we just -> print : 1
just print the -> content : 1
just print the -> number : 1
the content of -> our : 1
the content of -> the : 7
the content of -> a : 3
the content of -> does : 1
the content of -> string : 2
the content of -> an : 1
the content of -> files : 1
content of our -> for : 1
of our for -> auto : 1
our for auto -> word : 1
for auto word -> cout : 1
auto word cout -> word : 1
word cout word -> cout : 1
cout word cout -> compile : 1
word cout compile -> and : 1
cout compile and -> run : 4
and run our -> program : 1
and run our -> it : 1
and run our -> the : 1
and run our -> we : 1
run our program -> with : 1
our program with -> the : 1
our program with -> shows : 1
program with the -> following : 1
program with the -> example : 1
program with the -> patterns : 1
the following get -> the : 1
following get the -> following : 1
get the following -> output : 1
get the following -> map : 1
get the following -> as : 1
get the following -> it : 1
get the following -> please : 1
the following output -> for : 1
following output for -> the : 1
output for the -> preceding : 1
for the preceding -> where : 1
the preceding where -> all : 1
preceding where all -> duplicates : 1
where all duplicates -> are : 1
all duplicates are -> stripped : 1
duplicates are stripped -> and : 1
are stripped and -> the : 1
stripped and the -> words : 1
and the words -> which : 1
the words which -> were : 1
words which were -> are : 1
which were are -> sorted : 1
were are sorted -> echo : 1
are sorted echo -> a : 1
sorted echo a -> a : 1
echo a a -> b : 1
a a b -> c : 1
a b c -> foo : 1
a b c -> b : 1
a b c -> d : 2
a b c -> auto : 1
a b c -> it : 1
a b c -> problem : 1
b c foo -> bar : 1
c foo bar -> foobar : 1
foo bar foobar -> foo : 1
bar foobar foo -> bar : 1
foobar foo bar -> it : 1
foo bar it -> program : 1
bar it program -> consists : 1
it program consists -> of : 1
program consists of -> two : 1
consists of two -> interesting : 1
consists of two -> consecutive : 1
of two interesting -> the : 1
two interesting the -> first : 1
interesting the first -> part : 1
interesting the first -> three : 1
interesting the first -> function : 1
the first part -> is : 1
the first part -> of : 1
first part is -> using : 1
part is using -> to : 1
is using to -> access : 1
using to access -> the : 1
to access the -> user : 1
to access the -> and : 1
to access the -> we : 1
to access the -> first : 1
to access the -> variant : 1
to access the -> actual : 1
to access the -> it : 1
access the user -> and : 1
the user and -> the : 1
the user and -> we : 1
user and the -> second : 1
and the second -> part : 2
and the second -> argument : 1
and the second -> one : 2
the second part -> is : 2
second part is -> to : 1
second part is -> the : 1
part is to -> with : 1
is to with -> our : 1
to with our -> instance : 1
to with our -> choice : 1
with our instance -> using : 1
our instance using -> the : 1
instance using the -> after : 1
using the after -> we : 1
the after we -> wrapped : 1
after we wrapped -> it : 1
we wrapped it -> into : 1
wrapped it into -> an : 1
it into an -> it : 1
it into an -> which : 1
into an it -> might : 1
an it might -> look : 1
it might look -> surprising : 1
might look surprising -> that : 1
look surprising that -> there : 1
surprising that there -> is : 1
there is only -> one : 1
there is only -> that : 1
there is only -> whitespace : 1
there is only -> an : 1
is only one -> line : 1
is only one -> example : 1
only one line -> of : 1
only one line -> specific : 1
one line of -> code : 2
one line of -> which : 1
line of code -> which : 1
line of code -> in : 1
of code which -> does : 1
code which does -> all : 1
which does all -> the : 1
does all the -> work : 1
does all the -> operator : 1
all the work -> of : 1
all the work -> happens : 1
all the work -> one : 1
the work of -> the : 1
work of the -> it : 1
the it into -> the : 1
it into the -> alphabetically : 1
it into the -> set : 1
it into the -> we : 2
it into the -> which : 1
it into the -> distribution : 1
it into the -> output : 2
it into the -> and : 1
it into the -> constructor : 2
it into the -> the : 1
it into the -> hash : 1
into the alphabetically -> and : 1
the alphabetically and -> all : 1
alphabetically and all -> class : 1
and all class -> is : 1
all class is -> really : 1
class is really -> interesting : 1
class is really -> an : 1
is really interesting -> in : 1
is really interesting -> to : 1
really interesting in -> cases : 1
interesting in cases -> where : 1
in cases where -> we : 1
cases where we -> want : 1
where we want -> to : 1
want to process -> masses : 1
to process masses -> of : 1
process masses of -> data : 1
masses of data -> of : 1
of data of -> the : 1
of the type -> from : 2
of the type -> is : 1
of the type -> so : 1
the type from -> a : 1
the type from -> the : 1
type from a -> which : 1
from a which -> is : 1
a which is -> exactly : 1
a which is -> and : 1
which is exactly -> the : 2
which is exactly -> what : 1
is exactly the -> case : 1
is exactly the -> same : 1
is exactly the -> type : 1
exactly the case -> in : 1
the case in -> this : 1
the case in -> alarmingly : 1
case in this -> we : 1
this we parse -> the : 1
we parse the -> whole : 1
parse the whole -> input : 1
the whole input -> word : 1
whole input word -> by : 1
input word by -> put : 1
input word by -> string : 1
word by put -> it : 1
by put it -> into : 1
put it into -> the : 3
into the set -> in : 1
the set in -> the : 1
set in the -> form : 1
form of takes -> one : 1
of takes one -> template : 1
takes one template -> that : 1
one template that -> is : 1
template that is -> the : 1
is the type -> of : 2
of the input -> we : 1
of the input -> type : 1
of the input -> it : 1
of the input -> signal : 1
of the input -> as : 1
of the input -> during : 1
of the input -> which : 1
of the input -> the : 1
of the input -> stream : 1
of the input -> all : 1
of the input -> sums : 1
of the input -> by : 1
the input we -> want : 1
the input we -> give : 1
the input we -> remove : 1
the input we -> feed : 1
the input we -> use : 1
input we want -> to : 1
want to we -> chose : 1
to we chose -> because : 1
we chose because -> we : 2
we chose because -> of : 1
chose because we -> assume : 1
chose because we -> want : 1
because we assume -> text : 1
we assume text -> but : 1
assume text but -> it : 1
text but it -> could : 1
but it could -> also : 1
it could also -> have : 1
could also have -> been : 1
could also have -> written : 1
could also have -> set : 1
also have been -> for : 1
have been for -> it : 1
been for it -> can : 1
for it can -> basically : 1
it can basically -> be : 1
can basically be -> every : 1
basically be every -> type : 1
be every type -> for : 1
every type for -> which : 1
type for which -> it : 1
for which it -> is : 1
for which it -> acts : 1
which it is -> possible : 1
write the constructor -> accepts : 1
the constructor accepts -> an : 1
constructor accepts an -> the : 1
accepts an the -> standard : 1
an the standard -> input : 1
the standard input -> is : 1
the standard input -> ran : 1
the standard input -> into : 2
the standard input -> this : 1
the standard input -> or : 2
the standard input -> for : 1
standard input is -> represented : 1
input is represented -> by : 1
is represented by -> the : 1
represented by the -> global : 1
by the global -> input : 1
the global input -> stream : 1
global input stream -> object : 1
input stream object -> which : 1
input stream object -> will : 1
input stream object -> enters : 1
input stream object -> is : 1
stream object which -> is : 1
object which is -> parameter : 1
object which is -> constructed : 1
object which is -> just : 1
which is parameter -> in : 1
is parameter in -> this : 1
parameter in this -> it : 1
this it input -> stream : 1
it input stream -> iterator : 1
input stream iterator -> which : 1
stream iterator which -> we : 1
iterator which we -> have : 1
iterator which we -> will : 1
which we have -> is : 1
which we have -> could : 1
which we have -> to : 1
which we have -> the : 1
which we have -> been : 1
we have is -> able : 1
have is able -> to : 1
able to do -> two : 1
able to do -> automatic : 1
able to do -> the : 1
to do two -> when : 1
do two when -> it : 1
two when it -> is : 1
when it is -> dereferenced : 1
when it is -> incremented : 1
when it is -> compared : 2
when it is -> those : 1
when it is -> generic : 1
when it is -> it : 1
when it is -> actually : 1
it is dereferenced -> it : 1
is dereferenced it -> yields : 1
dereferenced it yields -> the : 1
it yields the -> current : 1
yields the current -> input : 1
the current input -> as : 1
current input as -> we : 1
input as we -> have : 1
as we have -> typed : 1
as we have -> a : 2
as we have -> in : 1
we have typed -> the : 1
have typed the -> iterator : 1
typed the iterator -> to : 1
the iterator to -> via : 1
the iterator to -> get : 1
the iterator to -> yield : 1
the iterator to -> skip : 1
iterator to via -> its : 1
to via its -> template : 1
via its template -> that : 1
via its template -> it : 1
its template that -> symbol : 1
template that symbol -> will : 1
that symbol will -> be : 1
symbol will be -> a : 1
will be a -> string : 1
will be a -> copy : 1
will be a -> it : 1
be a string -> containing : 1
be a string -> class : 1
a string containing -> one : 1
a string containing -> the : 1
a string containing -> all : 1
string containing one -> when : 1
containing one when -> it : 1
one when it -> is : 1
it is incremented -> it : 1
is incremented it -> will : 1
incremented it will -> jump : 1
it will jump -> to : 1
will jump to -> the : 1
jump to the -> next : 1
the next which -> we : 1
the next which -> is : 1
next which we -> can : 1
which we can -> access : 1
which we can -> use : 1
which we can -> change : 1
which we can -> simply : 1
which we can -> then : 1
which we can -> check : 1
which we can -> now : 1
which we can -> convert : 1
which we can -> call : 2
can access by -> dereferencing : 1
access by dereferencing -> we : 1
by dereferencing we -> need : 1
dereferencing we need -> to : 1
to be careful -> after : 1
be careful after -> every : 1
careful after every -> we : 1
after every we -> dereference : 1
after every we -> played : 1
every we dereference -> it : 1
we dereference it -> if : 1
we dereference it -> and : 1
dereference it if -> the : 1
it if the -> standard : 1
it if the -> user : 1
if the standard -> input : 1
standard input ran -> the : 1
input ran the -> iterator : 1
ran the iterator -> must : 1
the iterator must -> be : 1
the iterator must -> point : 2
iterator must be -> dereferenced : 1
must be dereferenced -> we : 1
be dereferenced we -> should : 1
dereferenced we should -> terminate : 1
we should terminate -> the : 1
should terminate the -> loop : 1
terminate the loop -> in : 1
the loop in -> which : 1
the loop in -> order : 1
loop in which -> we : 1
in which we -> dereference : 1
in which we -> introduce : 1
in which we -> play : 1
in which we -> initially : 1
in which we -> create : 1
in which we -> assumingly : 1
in which we -> instantiate : 1
in which we -> hold : 1
in which we -> started : 1
which we dereference -> the : 1
we dereference the -> iterator : 1
dereference the iterator -> to : 1
iterator to get -> at : 1
to get at -> every : 1
to get at -> that : 1
to get at -> the : 3
to get at -> different : 1
to get at -> we : 1
get at every -> the : 1
at every the -> abort : 1
every the abort -> which : 1
the abort which -> lets : 1
abort which lets -> us : 1
which lets us -> know : 1
lets us know -> that : 1
us know that -> the : 1
know that the -> iterator : 1
that the iterator -> became : 1
that the iterator -> type : 1
that the iterator -> when : 1
that the iterator -> is : 1
the iterator became -> is : 1
iterator became is -> a : 1
became is a -> comparison : 1
is a comparison -> with : 1
a comparison with -> the : 1
a comparison with -> used : 1
comparison with the -> if : 1
with the if -> we : 1
if we are -> past : 1
if we are -> on : 1
if we are -> not : 1
if we are -> looking : 1
we are past -> the : 1
are past the -> end : 1
past the end -> of : 1
of the create -> the : 1
the create the -> end : 1
create the end -> iterator : 1
the end iterator -> by : 1
the end iterator -> is : 1
the end iterator -> of : 7
the end iterator -> but : 1
the end iterator -> constructor : 1
the end iterator -> for : 1
the end iterator -> must : 1
the end iterator -> and : 1
end iterator by -> creating : 1
iterator by creating -> an : 1
by creating an -> instance : 1
creating an instance -> with : 1
instance with its -> parameterless : 1
instance with its -> own : 1
with its parameterless -> standard : 1
its parameterless standard -> it : 1
parameterless standard it -> has : 1
standard it has -> the : 1
has the purpose -> of : 1
the purpose of -> being : 1
the purpose of -> debugging : 1
purpose of being -> the : 1
of being the -> counterpart : 1
being the counterpart -> of : 1
the counterpart of -> the : 1
counterpart of the -> comparison : 1
of the comparison -> which : 1
of the comparison -> function : 1
the comparison which -> shall : 1
comparison which shall -> act : 1
which shall act -> as : 1
shall act as -> the : 1
act as the -> abort : 1
as the abort -> condition : 1
the abort condition -> in : 1
abort condition in -> every : 1
condition in every -> soon : 1
in every soon -> as : 1
every soon as -> runs : 1
soon as runs -> our : 1
as runs our -> iterator : 1
runs our iterator -> instance : 1
our iterator instance -> will : 1
iterator instance will -> that : 1
instance will that -> and : 1
will that and -> make : 1
that and make -> a : 1
and make a -> comparison : 1
and make a -> vector : 1
make a comparison -> with : 1
comparison with used -> the : 1
with used the -> and : 1
used the and -> pair : 1
the and pair -> as : 1
and pair as -> iterators : 1
pair as iterators -> in : 1
as iterators in -> the : 1
iterators in the -> the : 1
the third parameter -> must : 1
third parameter must -> be : 1
parameter must be -> an : 1
must be an -> for : 1
be an for -> we : 1
an for we -> cannot : 1
for we cannot -> just : 1
we cannot just -> take : 1
we cannot just -> write : 1
we cannot just -> fill : 1
cannot just take -> or : 1
just take or -> in : 1
take or in -> an : 1
or in an -> empty : 1
in an empty -> both : 1
an empty both -> are : 1
empty both are -> the : 1
both are the -> so : 1
are the so -> we : 1
so we are -> not : 1
are not even -> allowed : 1
are not even -> always : 1
are not even -> straightforward : 1
not even allowed -> to : 1
even allowed to -> regardless : 1
allowed to regardless -> if : 1
to regardless if -> that : 1
regardless if that -> is : 1
that is for -> reading : 1
is for reading -> from : 1
for reading from -> it : 1
reading from it -> or : 1
from it or -> assigning : 1
it or assigning -> to : 1
or assigning to -> is : 1
assigning to is -> where : 1
to is where -> comes : 1
is where comes -> into : 2
where comes into -> it : 1
where comes into -> static : 1
comes into it -> is : 1
into it is -> a : 1
is a function -> which : 1
is a function -> object : 1
is a function -> a : 1
is a function -> creates : 1
a function which -> returns : 1
a function which -> takes : 1
a function which -> was : 1
a function which -> is : 1
a function which -> works : 1
a function which -> accepts : 1
a function which -> in : 1
a function which -> arbitrary : 1
function which returns -> an : 1
which returns an -> that : 1
returns an that -> behaves : 1
an that behaves -> like : 1
that behaves like -> an : 1
behaves like an -> does : 1
like an does -> something : 1
an does something -> else : 1
does something else -> than : 1
something else than -> what : 1
something else than -> a : 1
something else than -> it : 1
else than what -> usual : 1
than what usual -> iterators : 1
what usual iterators -> when : 1
usual iterators when -> we : 1
iterators when we -> increment : 1
when we increment -> it : 1
we increment it -> does : 1
increment it does -> when : 1
it does when -> we : 1
does when we -> dereference : 1
when we dereference -> it : 1
when we dereference -> random : 1
dereference it and -> assign : 1
it and assign -> something : 1
and assign something -> to : 1
assign something to -> it : 1
something to it -> will : 1
it will take -> the : 1
it will take -> seconds : 1
will take the -> container : 1
take the container -> it : 1
the container it -> is : 1
the container it -> static : 1
container it is -> attached : 1
it is attached -> and : 1
is attached and -> that : 1
attached and that -> value : 1
and that value -> as : 1
that value as -> a : 1
value as a -> item : 1
value as a -> if : 1
as a item -> into : 1
a item into -> instantiating : 1
item into instantiating -> an : 1
into instantiating an -> via : 1
instantiating an via -> two : 1
an via two -> parameters : 1
via two parameters -> are : 1
parameters are is -> our : 1
parameters are is -> the : 1
are is our -> and : 1
is our and -> is : 1
our and is -> an : 1
and is an -> iterator : 1
is an iterator -> to : 2
an iterator to -> where : 1
an iterator to -> the : 8
an iterator to -> that : 1
iterator to where -> the : 1
to where the -> new : 1
to where the -> recursion : 1
where the new -> item : 1
where the new -> string : 1
shall be for -> an : 1
be for an -> empty : 1
for an empty -> set : 1
an empty set -> which : 1
empty set which -> we : 1
set which we -> start : 1
which we start -> this : 1
we start this -> makes : 1
start this makes -> as : 1
this makes as -> much : 1
makes as much -> sense : 1
as much sense -> as : 1
much sense as -> when : 1
sense as when -> used : 1
as when used -> for : 1
when used for -> other : 1
when used for -> it : 1
used for other -> data : 1
for other data -> structures : 1
other data structures -> as : 1
other data structures -> do : 1
data structures as -> vectors : 1
structures as vectors -> or : 1
as vectors or -> that : 1
vectors or that -> second : 1
or that second -> parameter : 1
that second parameter -> is : 1
second parameter is -> crucial : 1
second parameter is -> the : 2
parameter is crucial -> for : 1
is crucial for -> defining : 1
crucial for defining -> where : 1
for defining where -> the : 1
defining where the -> insert : 1
where the insert -> iterator : 1
the insert iterator -> shall : 1
insert iterator shall -> insert : 1
iterator shall insert -> new : 1
shall insert new -> it : 1
insert new it -> the : 1
new it the -> the : 1
it the the -> action : 1
the the action -> happens : 1
the action happens -> during : 1
action happens during -> the : 1
happens during the -> call : 1
during the call -> pulls : 1
the call pulls -> the : 1
call pulls the -> next : 1
pulls the next -> word : 1
the next word -> token : 1
next word token -> out : 1
word token out -> of : 1
token out of -> via : 1
out of via -> the : 1
of via the -> input : 1
via the input -> iterator : 1
the input iterator -> and : 1
input iterator and -> pushes : 1
iterator and pushes -> it : 1
and pushes it -> into : 2
pushes it into -> our : 1
pushes it into -> the : 1
it into our -> it : 1
into our it -> increments : 1
our it increments -> both : 1
it increments both -> and : 1
increments both and -> checks : 1
both and checks -> input : 1
and checks input -> iterator : 1
checks input iterator -> is : 1
input iterator is -> equal : 1
iterator is equal -> to : 1
is equal to -> the : 1
is equal to -> it : 1
to the input -> end : 1
to the input -> we : 1
the input end -> iterator : 1
input end iterator -> if : 1
end iterator if -> it : 1
iterator if it -> is : 1
it is then -> there : 2
it is then -> we : 1
is then there -> are : 1
is then there -> is : 1
is then there -> will : 1
then there are -> still : 1
there are still -> words : 1
there are still -> enough : 1
are still words -> left : 1
still words left -> in : 1
words left in -> the : 1
left in the -> standard : 1
left in the -> parameter : 1
in the standard -> so : 1
the standard so -> it : 1
standard so it -> will : 1
it will words -> are : 1
will words are -> automatically : 1
words are automatically -> if : 1
are automatically if -> the : 1
automatically if the -> set : 1
if the set -> already : 1
the set already -> contains : 1
set already contains -> a : 1
already contains a -> specific : 1
already contains a -> which : 1
contains a specific -> adding : 1
contains a specific -> owner : 1
a specific adding -> it : 1
specific adding it -> again : 1
adding it again -> has : 1
it again has -> this : 1
again has this -> would : 1
has this would -> be : 1
would be different -> in : 1
be different in -> an : 1
different in an -> in : 1
in an in -> it : 1
an in it -> would : 1
in it would -> accept : 1
in it would -> take : 1
it would accept -> a : 1
would accept a -> simple : 1
accept a simple -> rpn : 1
calculator with is -> an : 1
with is an -> adapter : 1
is an adapter -> class : 1
an adapter class -> which : 1
adapter class which -> lets : 1
class which lets -> the : 1
which lets the -> user : 1
lets the user -> push : 1
the user push -> objects : 1
user push objects -> it : 1
push objects it -> like : 1
objects it like -> on : 1
it like on -> a : 1
like on a -> real : 1
on a real -> stack : 1
a real stack -> of : 1
real stack of -> and : 1
stack of and -> pop : 1
of and pop -> objects : 1
and pop objects -> it : 1
pop objects it -> in : 1
objects it in -> this : 1
it in this -> we : 2
this we construct -> a : 1
we construct a -> reverse : 1
we construct a -> string : 1
we construct a -> which : 1
we construct a -> simple : 1
we construct a -> such : 1
we construct a -> new : 1
we construct a -> regular : 1
construct a reverse -> polish : 1
a reverse polish -> notation : 1
reverse polish notation -> calculator : 1
polish notation calculator -> around : 1
notation calculator around -> that : 1
calculator around that -> data : 1
around that data -> in : 1
that data in -> order : 1
data in order -> to : 2
order to show -> how : 1
to show how -> to : 1
to show how -> they : 1
to show how -> much : 1
to show how -> iterators : 1
show how to -> use : 1
how to use -> rpn : 1
how to use -> the : 2
how to use -> to : 2
how to use -> it : 2
how to use -> this : 1
to use rpn -> is : 1
use rpn is -> a : 1
rpn is a -> notation : 1
is a notation -> be : 1
a notation be -> used : 1
notation be used -> to : 1
used to express -> mathematical : 1
to express mathematical -> expressions : 1
express mathematical expressions -> in : 1
mathematical expressions in -> a : 1
expressions in a -> way : 1
a way really -> simple : 1
way really simple -> to : 1
really simple to -> in : 1
simple to in -> is : 1
to in is -> operands : 1
in is operands -> then : 1
is operands then -> the : 1
operands then the -> another : 1
then the another -> would : 1
the another would -> be : 1
another would be -> in : 1
would be in -> rpn : 1
be in rpn -> and : 1
in rpn and -> that : 1
rpn and that -> already : 1
and that already -> shows : 1
that already shows -> why : 1
already shows why -> it : 1
shows why it -> is : 1
it is easier -> to : 1
is easier to -> as : 1
is easier to -> but : 1
is easier to -> play : 1
easier to as -> we : 1
to as we -> do : 1
as we do -> not : 2
to define to -> do : 1
define to do -> this : 1
we a mathematical -> expression : 1
a mathematical expression -> in : 2
mathematical expression in -> rpn : 1
mathematical expression in -> string : 1
expression in rpn -> from : 1
in rpn from -> the : 1
rpn from the -> standard : 1
the standard and -> then : 1
the standard and -> fed : 1
standard and then -> feed : 1
standard and then -> we : 1
and then feed -> it : 2
then feed it -> into : 2
then feed it -> with : 1
feed it into -> a : 1
feed it into -> the : 4
feed it into -> as : 1
feed it into -> this : 1
it into a -> function : 1
it into a -> boolean : 1
it into a -> which : 1
it into a -> lambda : 1
into a function -> in : 1
into a function -> object : 1
a function in -> the : 1
function in the -> we : 1
print the numeric -> result : 1
the numeric result -> back : 1
numeric result back -> to : 1
result back to -> the : 1
back to the -> a : 1
back to the -> we : 1
back to the -> which : 1
back to the -> constexpr : 1
back to the -> contiguously : 1
back to the -> original : 1
back to the -> signal : 1
back to the -> caller : 1
back to the -> old : 1
back to the -> normal : 1
back to the -> recipe : 1
to the a -> lot : 1
to the a -> writing : 1
the a lot -> of : 1
lot of helpers -> from : 1
of helpers from -> the : 1
helpers from the -> so : 1
from the so -> there : 1
the so there -> are : 1
so there are -> a : 1
there are a -> few : 2
there are a -> lot : 1
there are a -> short : 1
are a few -> we : 1
are a few -> characteristics : 1
a few we -> do : 1
few we do -> also : 1
we do also -> declare : 1
we do also -> use : 1
do also declare -> that : 1
namespace we immediately -> start : 1
we immediately start -> implementing : 1
immediately start implementing -> our : 1
start implementing our -> rpn : 1
implementing our rpn -> it : 1
our rpn it -> will : 1
rpn it will -> accept : 1
it will accept -> an : 1
it will accept -> a : 1
will accept an -> iterator : 1
accept an iterator -> which : 1
an iterator which -> denotes : 1
iterator which denotes -> the : 1
which denotes the -> beginning : 1
denotes the beginning -> and : 1
end of a -> mathematical : 1
end of a -> sentence : 1
end of a -> this : 1
of a mathematical -> expression : 1
expression in string -> which : 1
in string which -> will : 1
will be consumed -> token : 1
be consumed token -> by : 1
consumed token by -> template : 1
token by template -> double : 1
by template double -> it : 1
template double it -> we : 1
double it we -> iterate : 1
it we iterate -> through : 1
we iterate through -> the : 3
iterate through the -> we : 1
iterate through the -> assuming : 1
iterate through the -> string : 2
iterate through the -> unordered : 1
iterate through the -> input : 1
iterate through the -> loop : 1
through the we -> need : 1
need to memorize -> all : 1
to memorize all -> on : 1
memorize all on -> the : 1
all on the -> way : 1
on the way -> until : 1
on the way -> to : 1
on the way -> from : 1
the way until -> we : 1
way until we -> see : 1
until we see -> an : 1
until we see -> a : 1
we see an -> this : 1
we see an -> operation : 1
see an this -> is : 1
an this is -> where : 1
this is where -> we : 1
this is where -> comes : 1
is where we -> need : 1
where we need -> a : 1
we need a -> all : 1
we need a -> hint : 1
we need a -> range : 1
we need a -> syntax : 1
we need a -> random : 1
we need a -> in : 2
we need a -> small : 1
we need a -> for : 1
we need a -> mutex : 1
we need a -> vector : 1
we need a -> system : 1
we need a -> better : 1
need a all -> the : 1
a all the -> numbers : 1
all the numbers -> will : 1
all the numbers -> of : 1
all the numbers -> in : 1
the numbers will -> be : 1
numbers will be -> parsed : 1
will be parsed -> and : 1
be parsed and -> saved : 1
parsed and saved -> in : 1
and saved in -> double : 1
saved in double -> precision : 1
in double precision -> floating : 1
double precision floating -> so : 1
precision floating so -> going : 1
floating so going -> to : 1
so going to -> be : 1
be a stack -> of : 1
a stack of -> order : 1
stack of order -> to : 1
of order to -> comfortably : 1
order to comfortably -> access : 1
to comfortably access -> elements : 1
comfortably access elements -> on : 1
access elements on -> the : 1
elements on the -> we : 1
on the we -> implement : 1
on the we -> our : 1
the we implement -> a : 1
we implement a -> it : 1
we implement a -> primitive : 1
we implement a -> which : 1
we implement a -> predicate : 1
we implement a -> function : 2
we implement a -> little : 2
we implement a -> class : 1
we implement a -> helper : 3
implement a it -> modifies : 1
a it modifies -> the : 1
it modifies the -> stack : 1
it modifies the -> order : 1
modifies the stack -> by : 1
the stack by -> pulling : 1
stack by pulling -> the : 1
by pulling the -> highest : 1
pulling the highest -> item : 1
the highest item -> from : 1
highest item from -> then : 1
item from then -> returns : 1
from then returns -> that : 1
then returns that -> this : 1
returns that this -> way : 1
we can perform -> this : 1
we can perform -> such : 1
can perform this -> task : 1
perform this task -> in : 1
this task in -> one : 1
task in one -> single : 1
in one single -> step : 1
one single step -> auto : 1
single step auto -> auto : 1
step auto auto -> r : 1
auto auto r -> return : 1
auto r return -> preparation : 1
r return preparation -> is : 1
return preparation is -> to : 1
preparation is to -> define : 1
is to define -> all : 1
is to define -> a : 1
all the supported -> mathematical : 1
the supported mathematical -> we : 1
supported mathematical we -> save : 1
mathematical we save -> them : 1
we save them -> in : 1
save them in -> a : 1
save them in -> an : 1
them in a -> which : 1
them in a -> special : 1
them in a -> way : 1
a which associates -> every : 1
a which associates -> integer : 1
which associates every -> operation : 1
associates every operation -> token : 1
every operation token -> with : 1
operation token with -> the : 1
token with the -> actual : 1
with the actual -> the : 1
with the actual -> we : 1
the actual the -> operations : 1
actual the operations -> are : 1
the operations are -> represented : 1
operations are represented -> by : 1
are represented by -> callable : 1
represented by callable -> which : 1
by callable which -> take : 1
callable which take -> two : 1
which take two -> add : 1
take two add -> or : 1
two add or -> multiply : 1
add or multiply -> for : 1
or multiply for -> and : 1
multiply for and -> then : 1
for and then -> return : 1
for and then -> we : 1
and then return -> the : 1
and then return -> an : 2
and then return -> this : 1
and then return -> us : 1
then return the -> double : 1
return the double -> ops : 1
the double ops -> double : 1
double ops double -> return : 1
ops double return -> a : 1
double return a -> double : 4
return a double -> return : 4
a double return -> a : 3
a double return -> double : 1
double return double -> return : 1
return double return -> we : 1
double return we -> can : 1
return we can -> finally : 5
return we can -> use : 2
return we can -> immediately : 1
return we can -> call : 1
return we can -> transform : 1
return we can -> set : 1
return we can -> iterate : 1
we can finally -> iterate : 2
we can finally -> watch : 1
we can finally -> put : 1
we can finally -> begin : 2
we can finally -> apply : 1
we can finally -> lock : 1
we can finally -> access : 1
we can finally -> call : 1
we can finally -> implement : 1
can finally iterate -> through : 1
can finally iterate -> over : 1
finally iterate through -> the : 1
through the assuming -> that : 1
the assuming that -> the : 1
assuming that the -> input : 1
assuming that the -> iterator : 1
that the input -> iterators : 1
that the input -> comes : 1
the input iterators -> give : 1
input iterators give -> us : 1
iterators give us -> we : 1
give us we -> feed : 1
us we feed -> a : 1
we feed a -> new : 1
feed a new -> per : 1
a new per -> because : 1
new per because -> it : 1
per because it -> can : 1
because it can -> parse : 1
because it can -> easily : 1
because it can -> value : 1
because it can -> be : 1
it can parse -> for : 1
can parse for -> it : 1
parse for it -> stringstream : 1
for it stringstream -> ss : 1
it stringstream ss -> with : 1
stringstream ss with -> every : 1
ss with every -> we : 1
with every we -> try : 1
every we try -> to : 1
try to get -> a : 1
try to get -> at : 1
get a value -> out : 1
a value out -> of : 1
value out of -> if : 1
value out of -> the : 1
out of if -> that : 1
of if that -> we : 1
of if that -> stock : 1
if that we -> have : 1
we have an -> which : 1
we have an -> instance : 1
we have an -> the : 1
we have an -> iterator : 1
have an which -> we : 1
an which we -> push : 1
an which we -> catch : 1
an which we -> will : 1
which we push -> on : 1
we push on -> the : 1
push on the -> if : 1
on the if -> ss : 1
on the if -> of : 1
the if ss -> it : 1
if ss it -> does : 1
ss it does -> it : 1
it does it -> must : 1
does it must -> be : 1
must be something -> an : 1
be something an -> in : 1
something an in -> that : 1
an in that -> it : 1
in that it -> can : 1
in that it -> works : 1
in that it -> helps : 1
in that it -> allows : 1
only be an -> knowing : 1
be an knowing -> that : 1
an knowing that -> all : 1
knowing that all -> the : 1
that all the -> operations : 1
that all the -> existing : 1
that all the -> items : 1
that all the -> random : 1
that all the -> work : 1
that all the -> calls : 1
all the operations -> we : 1
the operations we -> support : 1
operations we support -> are : 1
we support are -> we : 1
support are we -> need : 1
are we need -> to : 1
need to pop -> the : 1
to pop the -> last : 1
pop the last -> from : 1
pop the last -> two : 1
the last from -> the : 1
last from the -> else : 1
from the else -> const : 1
the else const -> auto : 1
else const auto -> r : 1
const auto r -> const : 1
const auto r -> c : 2
auto r const -> auto : 1
r const auto -> l : 1
const auto l -> we : 1
auto l we -> get : 1
l we get -> the : 1
we get the -> operand : 1
we get the -> input : 1
we get the -> full : 1
we get the -> following : 3
we get the -> accumulated : 1
we get the -> defines : 1
we get the -> in : 1
we get the -> same : 1
we get the -> partition : 1
get the operand -> from : 1
the operand from -> dereferencing : 1
operand from dereferencing -> the : 1
from dereferencing the -> iterator : 1
dereferencing the iterator -> which : 1
dereferencing the iterator -> at : 1
the iterator which -> already : 1
iterator which already -> emits : 1
which already emits -> by : 1
already emits by -> querying : 1
emits by querying -> the : 1
by querying the -> we : 1
querying the we -> get : 1
the we get -> a : 2
the we get -> the : 3
the we get -> and : 1
get a lambda -> object : 1
a lambda object -> which : 1
lambda object which -> accepts : 1
object which accepts -> the : 1
accepts the two -> operands : 1
the two operands -> and : 1
two operands and -> as : 1
operands and as -> try : 1
and as try -> const : 1
as try const -> auto : 1
try const auto -> op : 1
const auto op -> const : 1
auto op const -> double : 2
op const double -> result : 2
const double result -> surrounded : 1
const double result -> map : 1
double result surrounded -> the : 1
result surrounded the -> application : 1
surrounded the application -> of : 1
the application of -> the : 1
application of the -> math : 1
application of the -> same : 1
application of the -> real : 1
of the math -> part : 1
the math part -> with : 1
math part with -> a : 1
part with a -> so : 1
with a so -> we : 1
a so we -> can : 1
a so we -> need : 1
a so we -> define : 1
we can catch -> possibly : 1
can catch possibly -> occurring : 1
catch possibly occurring -> the : 1
possibly occurring the -> call : 1
occurring the call -> of : 1
the call of -> the : 2
the call of -> a : 1
call of the -> map : 1
call of the -> first : 1
the map will -> throw : 2
map will throw -> an : 2
will throw an -> exception : 1
will throw an -> which : 1
will throw an -> different : 1
throw an exception -> in : 2
throw an exception -> if : 1
throw an exception -> the : 1
an exception in -> case : 1
an exception in -> the : 1
an exception in -> but : 1
an exception in -> any : 1
exception in case -> the : 1
case the user -> provides : 1
the user provides -> a : 2
the user provides -> functions : 1
the user provides -> at : 1
user provides a -> mathematical : 1
user provides a -> iterator : 1
provides a mathematical -> operation : 1
a mathematical operation -> we : 1
mathematical operation we -> know : 1
operation we know -> in : 1
we know in -> that : 1
know in that -> we : 1
that we will -> rethrow : 1
that we will -> really : 1
that we will -> most : 2
that we will -> have : 1
we will rethrow -> a : 1
will rethrow a -> different : 1
rethrow a different -> which : 1
rethrow a different -> exception : 1
a different which -> says : 1
different which says -> carries : 1
which says carries -> the : 1
says carries the -> operation : 1
carries the operation -> string : 1
the operation string -> which : 1
operation string which -> was : 1
string which was -> unknown : 1
which was unknown -> to : 1
was unknown to -> catch : 1
unknown to catch -> throw : 1
to catch throw -> already : 1
catch throw already -> as : 1
throw already as -> soon : 1
already as soon -> as : 1
as soon as -> the : 9
as soon as -> we : 3
as soon as -> one : 1
as soon as -> a : 2
as soon as -> it : 1
as soon as -> all : 1
as soon as -> they : 1
soon as the -> loop : 1
soon as the -> permutation : 1
soon as the -> ranges : 1
soon as the -> pointers : 1
soon as the -> destructor : 1
soon as the -> last : 1
soon as the -> item : 2
soon as the -> event : 1
as the loop -> we : 1
the loop we -> have : 1
the loop we -> know : 1
the loop we -> print : 1
loop we have -> the : 1
we have the -> final : 1
we have the -> other : 1
we have the -> chance : 1
we have the -> guarantee : 1
have the final -> result : 1
the final result -> on : 1
the final result -> string : 1
final result on -> the : 1
result on the -> so : 1
on the so -> we : 1
so we return -> just : 1
we return just -> this : 1
return just this -> we : 1
just this we -> could : 1
just this we -> cannot : 1
this we could -> assert : 1
we could assert -> if : 1
could assert if -> the : 1
assert if the -> stack : 1
if the stack -> size : 1
the stack size -> is : 1
stack size is -> if : 1
size is if -> it : 1
if it then -> there : 1
it then there -> would : 1
then there would -> be : 1
there would be -> missing : 1
there would be -> no : 1
would be missing -> return : 1
be missing return -> we : 1
missing return we -> can : 1
can use our -> little : 1
use our little -> rpn : 1
our little rpn -> in : 1
little rpn in -> order : 1
rpn in order -> to : 1
do we wrap -> the : 1
we wrap the -> standard : 1
we wrap the -> an : 1
we wrap the -> second : 1
wrap the standard -> input : 1
standard input into -> an : 1
standard input into -> the : 1
standard input into -> a : 1
input into an -> and : 1
an and feed -> that : 1
and feed that -> into : 1
feed that into -> the : 1
that into the -> rpn : 1
into the rpn -> parser : 1
the rpn parser -> we : 1
rpn parser we -> print : 1
parser we print -> the : 1
print the int -> try : 1
the int try -> cout : 1
int try cout -> do : 1
try cout do -> again : 1
cout do again -> have : 1
do again have -> that : 1
again have that -> line : 1
have that line -> wrapped : 1
that line wrapped -> into : 1
line wrapped into -> a : 1
wrapped into a -> still : 1
wrapped into a -> this : 1
wrapped into a -> lambda : 1
into a still -> the : 1
a still the -> possibility : 1
still the possibility -> that : 1
the possibility that -> the : 1
the possibility that -> there : 1
the possibility that -> and : 1
possibility that the -> user : 1
that the user -> input : 1
that the user -> of : 1
that the user -> needs : 1
that the user -> provided : 2
the user input -> contains : 1
the user input -> while : 1
the user input -> assigning : 1
the user input -> sequence : 1
the user input -> string : 1
user input contains -> operations : 1
input contains operations -> we : 1
contains operations we -> did : 1
operations we did -> not : 1
did not in -> that : 1
not in that -> we : 1
we must catch -> the : 1
must catch the -> exception : 1
catch the exception -> which : 1
the exception which -> we : 2
exception which we -> throw : 1
exception which we -> can : 1
which we throw -> in : 1
we throw in -> such : 1
throw in such -> and : 1
in such and -> print : 1
such and print -> an : 1
and print an -> error : 1
print an error -> catch : 1
an error catch -> cout : 1
error catch cout -> compiling : 1
catch cout compiling -> the : 1
cout compiling the -> we : 1
compiling the we -> can : 3
the we can -> play : 1
the we can -> pipe : 1
the we can -> feed : 1
the we can -> finally : 2
the we can -> predicates : 1
the we can -> copy : 1
the we can -> also : 2
the we can -> instantiate : 1
the we can -> just : 1
the we can -> start : 1
the we can -> make : 1
the we can -> simply : 1
we can play -> around : 1
we can play -> with : 1
can play around -> with : 1
play around with -> the : 7
play around with -> it : 1
play around with -> in : 1
play around with -> such : 1
play around with -> this : 1
play around with -> unique : 1
play around with -> some : 1
around with the -> input : 2
around with the -> code : 1
around with the -> we : 2
around with the -> new : 1
around with the -> and : 1
around with the -> resulting : 1
around with the -> program : 1
with the input -> the : 1
with the input -> in : 1
with the input -> we : 1
with the input -> file : 1
with the input -> string : 1
the input the -> expression : 1
the input the -> parameter : 1
the input the -> output : 1
the input the -> input : 1
input the expression -> and : 1
the expression and -> yields : 1
expression and yields -> the : 1
and yields the -> correct : 1
yields the correct -> echo : 1
yields the correct -> that : 1
the correct echo -> it : 1
correct echo it -> whole : 1
echo it whole -> recipe : 1
revolves around pushing -> operands : 1
around pushing operands -> onto : 1
pushing operands onto -> the : 1
operands onto the -> we : 1
onto the we -> see : 1
the we see -> an : 1
the we see -> that : 1
the we see -> we : 1
the we see -> and : 1
see an operation -> in : 1
an operation in -> the : 1
operation in the -> in : 1
in the in -> that : 1
in the in -> order : 1
in the in -> this : 1
the in that -> we : 1
the in that -> the : 1
that we pop -> the : 1
we pop the -> last : 1
the last two -> operands : 1
the last two -> fibonacci : 2
the last two -> lines : 1
last two operands -> from : 1
two operands from -> the : 1
operands from the -> stack : 1
from the stack -> apply : 1
the stack apply -> the : 1
stack apply the -> operation : 1
apply the operation -> to : 1
the operation to -> and : 1
the operation to -> it : 1
operation to and -> push : 1
to and push -> the : 1
and push the -> result : 1
and push the -> intermediate : 1
push the result -> onto : 1
the result onto -> the : 1
result onto the -> stack : 1
onto the stack -> in : 1
the stack in -> order : 1
stack in order -> to : 1
understand all of -> the : 1
all of the -> code : 1
all of the -> aforementioned : 1
all of the -> strings : 1
all of the -> complex : 1
code in this -> it : 1
code in this -> whole : 1
code in this -> section : 1
it is important -> to : 1
it is important -> that : 1
important to understand -> how : 1
to understand how -> we : 1
to understand how -> first : 1
to understand how -> weak : 1
understand how we -> distinguish : 1
how we distinguish -> and : 1
we distinguish and -> from : 1
distinguish and from -> the : 1
from the how -> we : 1
the how we -> handle : 1
how we handle -> our : 1
we handle our -> and : 1
handle our and -> how : 1
our and how -> we : 1
and how we -> select : 1
and how we -> constructed : 1
and how we -> query : 1
how we select -> and : 1
we select and -> apply : 1
select and apply -> the : 1
and apply the -> right : 1
apply the right -> mathematical : 1
the right mathematical -> push : 1
the right mathematical -> we : 1
right mathematical push -> items : 1
mathematical push items -> onto : 1
push items onto -> the : 1
items onto the -> simply : 1
onto the simply -> using : 1
the simply using -> the : 1
simply using the -> function : 1
using the function -> of : 1
using the function -> produces : 1
using the function -> we : 1
function of values -> from : 1
of values from -> it : 1
of values from -> the : 1
values from it -> looks : 1
from it looks -> a : 1
it looks a -> bit : 2
looks a bit -> more : 1
looks a bit -> too : 1
looks a bit -> strange : 1
looks a bit -> in : 1
a bit more -> complicated : 1
a bit more -> to : 1
a bit more -> random : 1
a bit more -> complex : 1
a bit more -> powerful : 1
a bit more -> we : 2
a bit more -> static : 1
bit more complicated -> because : 1
bit more complicated -> to : 1
more complicated because -> we : 1
complicated because we -> implemented : 1
because we implemented -> a : 1
we implemented a -> lambda : 1
we implemented a -> structure : 1
we implemented a -> program : 1
we implemented a -> tool : 1
implemented a lambda -> for : 1
a lambda for -> which : 1
lambda for which -> captures : 1
for which captures -> a : 1
which captures a -> reference : 1
captures a reference -> to : 1
to the look -> at : 1
the look at -> the : 1
the look at -> an : 1
the same enhanced -> with : 1
same enhanced with -> some : 1
enhanced with some -> more : 1
with some more -> auto : 1
some more auto -> r : 1
more auto r -> get : 1
auto r get -> top : 1
r get top -> value : 1
get top value -> copy : 1
top value copy -> throw : 1
value copy throw -> away : 1
copy throw away -> top : 1
throw away top -> value : 1
away top value -> return : 1
top value return -> return : 1
value return return -> copy : 1
value return return -> function : 1
return return copy -> lambda : 1
return copy lambda -> is : 1
copy lambda is -> necessary : 1
lambda is necessary -> to : 1
is necessary to -> get : 1
is necessary to -> clear : 1
necessary to get -> the : 1
get the top -> value : 1
the top value -> of : 1
top value of -> the : 1
the it from -> there : 1
it from there -> in : 1
from there in -> the : 1
there in the -> interface : 1
in the interface -> of : 1
the interface of -> is : 1
the interface of -> a : 1
interface of is -> not : 1
of is not -> designed : 1
is not designed -> in : 1
not designed in -> a : 1
designed in a -> way : 1
a way which -> would : 1
way which would -> allow : 1
which would allow -> doing : 1
would allow doing -> that : 1
allow doing that -> in : 1
doing that in -> a : 1
in a defining -> a : 1
a defining a -> lambda : 1
defining a lambda -> is : 1
a lambda is -> quick : 1
lambda is quick -> and : 1
is quick and -> so : 1
quick and so -> we : 1
and so we -> can : 2
and so we -> implement : 1
and so we -> get : 1
and so we -> decide : 1
and so we -> should : 1
and so we -> also : 1
and so we -> will : 1
can now get -> values : 1
now get values -> like : 1
get values like -> operands : 1
values like operands -> from : 1
like operands from -> operations : 1
operands from operations -> from : 1
from operations from -> user : 1
operations from user -> the : 1
from user the -> main : 1
user the main -> loop : 1
the main loop -> of : 1
main loop of -> we : 1
loop of we -> take : 1
of we take -> the : 1
we take the -> current : 1
we take the -> from : 1
we take the -> square : 1
we take the -> smaller : 1
we take the -> name : 1
we take the -> ascii : 1
take the current -> string : 1
take the current -> directory : 1
take the current -> before : 1
the current string -> token : 1
current string token -> from : 1
string token from -> the : 1
token from the -> then : 1
from the then -> see : 1
from the then -> we : 1
the then see -> is : 1
then see is -> an : 1
see is an -> operand : 1
is an operand -> or : 1
an operand or -> if : 1
operand or if -> the : 1
or if the -> string : 1
or if the -> operating : 1
or if the -> mutex : 1
or if the -> execution : 1
if the string -> can : 1
if the string -> contains : 1
the string can -> be : 1
string can be -> parsed : 1
string can be -> returned : 1
can be parsed -> into : 1
be parsed into -> a : 1
parsed into a -> then : 1
into a then -> it : 1
into a then -> there : 1
a then it -> is : 1
a then it -> will : 1
a then it -> calls : 1
then it is -> a : 1
then it is -> clear : 2
then it is -> there : 1
then it is -> possible : 1
is a and -> hence : 1
a and hence -> also : 1
and hence also -> an : 1
hence also an -> we : 1
also an we -> consider : 1
an we consider -> everything : 1
we consider everything -> which : 1
consider everything which -> is : 1
everything which is -> not : 1
is not easily -> parseable : 1
not easily parseable -> as : 1
easily parseable as -> a : 1
parseable as a -> number : 1
as a number -> for : 1
a number for -> to : 1
number for to -> be : 1
for to be -> an : 1
to be an -> naked : 1
to be an -> and : 1
be an naked -> code : 1
an naked code -> skeleton : 1
naked code skeleton -> for : 1
code skeleton for -> exactly : 1
skeleton for exactly -> this : 1
for exactly this -> task : 1
exactly this task -> is : 1
this task is -> as : 1
task is as -> ss : 1
is as ss -> if : 1
as ss if -> ss : 1
ss if ss -> a : 1
if ss a -> else : 1
ss a else -> something : 1
a else something -> else : 1
else something else -> than : 1
else than a -> number : 1
else than a -> constructor : 1
than a number -> an : 1
a number an -> stream : 1
number an stream -> operator : 1
an stream operator -> tells : 1
stream operator tells -> it : 1
operator tells it -> is : 1
tells it is -> a : 1
is a we -> wrapped : 1
is a we -> can : 1
is a we -> see : 1
is a we -> need : 1
a we wrapped -> the : 1
we wrapped the -> string : 1
we wrapped the -> three : 1
wrapped the string -> into : 1
the string into -> an : 2
the string into -> a : 1
the string into -> the : 1
string into an -> then : 1
string into an -> and : 1
string into an -> from : 1
into an then -> we : 1
an then we -> use : 2
an then we -> can : 1
then we use -> the : 1
then we use -> two : 1
use the capability -> to : 1
the capability to -> stream : 1
capability to stream -> from : 1
to stream from -> an : 1
stream from an -> into : 1
from an into -> a : 1
an into a -> which : 1
into a which -> involves : 1
into a which -> is : 1
into a which -> makes : 1
a which involves -> if : 1
which involves if -> the : 1
involves if the -> parsing : 1
if the parsing -> we : 1
the parsing we -> know : 1
parsing we know -> that : 1
we know that -> it : 1
we know that -> we : 1
we know that -> contains : 1
we know that -> everything : 1
know that it -> does : 1
it does because -> we : 1
does because we -> asked : 1
because we asked -> it : 1
we asked it -> to : 1
asked it to -> parse : 1
it to parse -> something : 1
to parse something -> into : 1
parse something into -> a : 1
something into a -> which : 1
something into a -> search : 1
something into a -> we : 1
which is and -> applying : 1
is and applying -> the : 1
and applying the -> right : 1
applying the right -> mathematical : 1
right mathematical we -> realize : 1
mathematical we realize -> that : 1
realize that the -> current : 1
that the current -> user : 1
the current user -> input : 1
current user input -> token : 1
user input token -> is : 1
input token is -> not : 1
token is not -> a : 1
not a we -> just : 1
not a we -> simply : 1
a we just -> assume : 1
we just assume -> that : 1
just assume that -> it : 1
assume that it -> is : 3
is an such -> or : 1
an such or -> then : 1
such or then -> we : 1
or then we -> query : 1
then we query -> our : 1
we query our -> which : 1
query our which -> we : 1
our which we -> called : 1
which we called -> to : 1
we called to -> look : 1
called to look -> that : 1
to look that -> operation : 1
look that operation -> up : 1
that operation up -> and : 1
operation up and -> return : 1
up and return -> us : 1
return us a -> which : 1
return us a -> new : 1
return us a -> map : 1
us a which -> accepts : 1
us a which -> takes : 1
a which accepts -> and : 1
a which accepts -> an : 1
which accepts and -> returns : 1
accepts and returns -> the : 1
returns the or -> the : 1
the or the -> or : 1
the or the -> struct : 1
or the or -> whatever : 1
the or whatever -> is : 1
the or whatever -> comes : 1
or whatever is -> type : 1
whatever is type -> of : 1
is type of -> the : 1
the map itself -> looks : 1
map itself looks -> relatively : 1
itself looks relatively -> double : 1
looks relatively double -> ops : 1
relatively double ops -> maps : 1
double ops maps -> from : 1
ops maps from -> to : 1
maps from to -> what : 1
from to what -> does : 1
to what does -> the : 1
to what does -> is : 1
what does the -> latter : 1
what does the -> rest : 1
what does the -> consumer : 1
does the latter -> this : 1
the latter this -> type : 1
latter this type -> description : 1
this type description -> shall : 1
type description shall -> read : 1
description shall read -> to : 1
shall read to -> a : 1
read to a -> function : 1
to a function -> which : 3
to a function -> pointer : 1
to a function -> call : 1
to a function -> a : 1
function which takes -> two : 1
which takes two -> and : 1
which takes two -> parameters : 1
takes two and -> returns : 1
two and returns -> a : 1
and returns a -> imagine : 1
and returns a -> function : 2
and returns a -> lambda : 1
and returns a -> new : 1
and returns a -> static : 1
and returns a -> copy : 1
and returns a -> pointer : 1
and returns a -> sorted : 1
and returns a -> callable : 1
and returns a -> string : 1
returns a imagine -> that : 1
imagine that the -> part : 1
imagine that the -> ranges : 1
that the part -> is : 1
that the part -> of : 1
the part is -> the : 2
part is the -> name : 1
part is the -> whole : 1
part is the -> next : 1
is the name -> of : 1
is the name -> is : 1
is the name -> and : 1
the name of -> the : 2
the name of -> a : 2
the name of -> every : 1
name of the -> such : 1
name of the -> internet : 1
of the such -> which : 1
the such which -> is : 1
such which is -> immediately : 1
which is immediately -> the : 1
is immediately the -> trick : 1
immediately the trick -> here : 1
the trick here -> is : 1
trick here is -> that : 1
here is that -> our : 1
here is that -> an : 1
here is that -> we : 2
is that our -> return : 1
that our return -> some : 1
our return some -> double : 1
return some double -> convertible : 1
some double convertible -> to : 1
double convertible to -> a : 1
convertible to a -> function : 1
a function pointer -> that : 1
a function pointer -> or : 2
a function pointer -> to : 1
function pointer that -> actually : 1
pointer that actually -> matches : 1
that actually matches -> that : 1
actually matches that -> pointer : 1
matches that pointer -> lambdas : 1
that pointer lambdas -> that : 1
pointer lambdas that -> anything : 1
lambdas that anything -> are : 1
that anything are -> generally : 1
anything are generally -> convertible : 1
are generally convertible -> to : 1
generally convertible to -> function : 1
convertible to function -> we : 1
to function we -> can : 1
function we can -> conveniently : 1
function we can -> lists : 1
we can conveniently -> ask : 1
can conveniently ask -> the : 1
conveniently ask the -> map : 1
ask the map -> for : 1
the map for -> the : 1
the map for -> this : 1
map for the -> correct : 1
for the correct -> auto : 1
for the correct -> input : 1
the correct auto -> op : 1
correct auto op -> const : 1
double result map -> implicitly : 1
result map implicitly -> does : 1
map implicitly does -> another : 1
implicitly does another -> job : 1
does another job -> for : 1
another job for -> if : 1
job for if -> we : 1
for if we -> say : 1
for if we -> copy : 1
for if we -> iterate : 1
if we say -> then : 1
we say then -> is : 1
say then is -> a : 1
then is a -> valid : 1
is a valid -> key : 1
is a valid -> int : 1
a valid key -> but : 1
valid key but -> we : 1
key but we -> did : 1
but we did -> not : 2
did not store -> any : 1
not store any -> operation : 1
store any operation -> named : 1
any operation named -> like : 1
operation named like -> in : 1
named like in -> such : 1
like in such -> a : 1
such a the -> map : 1
a the map -> will : 1
a the map -> maps : 1
throw an which -> we : 1
which we catch -> in : 1
we catch in -> the : 1
we catch in -> order : 1
catch in the -> we : 1
the we rethrow -> a : 1
we rethrow a -> different : 1
a different exception -> whenever : 1
different exception whenever -> we : 1
exception whenever we -> catch : 1
whenever we catch -> in : 1
catch in order -> to : 1
order to provide -> a : 1
order to provide -> such : 1
to provide a -> descriptive : 1
to provide a -> rich : 1
to provide a -> wrapper : 1
provide a descriptive -> meaning : 1
a descriptive meaning -> of : 1
descriptive meaning of -> this : 1
meaning of this -> error : 1
of this error -> the : 1
this error the -> user : 1
error the user -> will : 1
user will know -> better : 1
will know better -> what : 1
know better what -> an : 1
better what an -> compared : 1
what an compared -> to : 1
an compared to -> an : 1
compared to an -> of : 1
to an of -> note : 1
to an of -> what : 1
an of note -> that : 1
of note that -> the : 1
of note that -> we : 1
note that the -> user : 1
note that the -> value : 1
note that the -> return : 1
note that the -> time : 1
note that the -> objects : 1
note that the -> files : 1
the user of -> the : 1
user of the -> function : 1
of the function -> might : 1
of the function -> is : 1
of the function -> object : 1
of the function -> will : 1
of the function -> we : 1
of the function -> exactly : 1
of the function -> so : 1
of the function -> calls : 1
the function might -> not : 1
function might not -> have : 1
might not have -> read : 1
not have read -> its : 1
have read its -> hence : 1
read its hence -> it : 1
its hence it -> might : 1
hence it might -> be : 1
it might be -> unknown : 1
it might be -> at : 1
it might be -> combined : 1
it might be -> an : 1
it might be -> advantageous : 1
it might be -> noticeable : 1
might be unknown -> that : 1
be unknown that -> we : 1
unknown that we -> are : 1
are using a -> map : 1
using a map -> inside : 1
a map inside -> at : 1
map inside at -> function : 1
inside at function -> accepts : 1
at function accepts -> it : 1
function accepts it -> is : 1
it is very -> easy : 3
it is very -> simple : 1
it is very -> short : 1
is very easy -> to : 4
is very easy -> and : 1
very easy to -> feed : 1
very easy to -> or : 1
very easy to -> we : 1
very easy to -> the : 1
very easy to -> implement : 1
easy to feed -> it : 1
to feed it -> with : 2
it with different -> inputs : 1
it with different -> types : 1
it with different -> arguments : 1
with different inputs -> than : 1
different inputs than -> the : 1
inputs than the -> standard : 1
than the standard -> input : 1
than the standard -> loop : 1
standard input this -> makes : 1
input this makes -> it : 1
it very easy -> to : 1
easy to or -> to : 1
to or to -> adapt : 1
or to adapt -> to : 1
to adapt to -> different : 1
to adapt to -> your : 1
adapt to different -> sources : 1
to different sources -> of : 1
different sources of -> user : 1
sources of user -> it : 1
of user it -> with : 1
user it with -> iterators : 1
it with iterators -> from : 1
with iterators from -> a : 1
iterators from a -> string : 1
from a string -> stream : 1
from a string -> for : 1
from a string -> in : 1
from a string -> to : 1
from a string -> by : 1
from a string -> that : 1
a string stream -> or : 1
a string stream -> grows : 1
a string stream -> and : 2
a string stream -> feeds : 1
string stream or -> from : 1
stream or from -> a : 1
a string for -> looks : 1
string for looks -> like : 1
for looks like -> the : 1
like the following -> for : 1
like the following -> order : 1
the following for -> which : 1
following for which -> does : 1
for which does -> not : 1
does not have -> to : 1
does not have -> a : 1
not have to -> be : 2
not have to -> carry : 1
not have to -> do : 1
not have to -> implement : 1
not have to -> that : 1
to be changed -> at : 1
be changed at -> stringstream : 1
changed at stringstream -> s : 1
at stringstream s -> cout : 1
stringstream s cout -> v : 1
s cout v -> cout : 1
cout v cout -> iterators : 1
v cout iterators -> wherever : 1
cout iterators wherever -> it : 1
iterators wherever it -> makes : 1
wherever it makes -> this : 1
it makes this -> makes : 1
it makes this -> class : 1
makes this makes -> your : 1
your code very -> composable : 1
code very composable -> and : 1
very composable and -> a : 1
composable and a -> word : 1
and a word -> frequency : 1
counter with is -> very : 1
with is very -> useful : 1
very useful when -> categorizing : 1
useful when categorizing -> something : 1
when categorizing something -> in : 1
categorizing something in -> order : 1
something in order -> to : 1
order to collect -> statistics : 1
to collect statistics -> about : 1
collect statistics about -> that : 1
statistics about that -> by : 1
about that by -> attaching : 1
that by attaching -> modifiable : 1
by attaching modifiable -> payload : 1
attaching modifiable payload -> objects : 1
modifiable payload objects -> to : 1
payload objects to -> every : 1
objects to every -> key : 1
to every key -> which : 1
every key which -> represents : 1
key which represents -> an : 1
which represents an -> object : 1
represents an object -> it : 1
an object it -> is : 1
object it is -> pretty : 1
it is pretty -> simple : 1
it is pretty -> obvious : 1
is pretty simple -> to : 1
pretty simple to -> implement : 1
simple to implement -> a : 1
implement a histogram -> of : 1
a histogram of -> word : 1
a histogram of -> all : 1
histogram of word -> frequencies : 1
of word frequencies -> for : 1
word frequencies for -> this : 1
frequencies for this -> is : 1
this is what -> we : 4
this is what -> and : 1
this is what -> our : 1
is what we -> in : 1
is what we -> need : 1
is what we -> the : 1
is what we -> want : 1
is what we -> do : 1
is what we -> chose : 1
is what we -> try : 1
is what we -> we : 3
is what we -> did : 2
what we in -> this : 1
we in this -> to : 1
do this all -> user : 1
this all user -> input : 1
all user input -> from : 2
user input from -> standard : 2
input from standard -> which : 2
from standard which -> for : 1
from standard which -> we : 1
standard which for -> be : 1
which for be -> a : 1
for be a -> text : 1
be a text -> file : 1
a text file -> containing : 1
a text file -> and : 1
a text file -> with : 1
a text file -> file : 1
text file containing -> an : 1
file containing an -> we : 1
containing an we -> tokenize : 1
an we tokenize -> the : 1
we tokenize the -> input : 1
tokenize the input -> to : 1
the input to -> in : 1
the input to -> lowercase : 1
the input to -> look : 1
input to in -> order : 1
to in order -> to : 2
order to count -> which : 1
order to count -> the : 1
to count which -> word : 1
count which word -> occurs : 1
which word occurs -> how : 1
word occurs how -> we : 1
occurs how we -> need : 1
how we need -> to : 1
to include all -> the : 6
to include all -> needed : 2
to include all -> necessary : 1
all the headers -> from : 2
all the headers -> and : 2
the headers from -> the : 2
headers from the -> data : 1
headers from the -> stl : 1
from the data -> structures : 1
the data structures -> we : 2
the data structures -> by : 1
data structures we -> are : 1
data structures we -> we : 1
structures we are -> going : 1
we are going -> to : 47
are going to -> spare : 1
are going to -> write : 10
are going to -> create : 2
are going to -> need : 2
are going to -> use : 9
are going to -> implement : 20
are going to -> build : 2
are going to -> play : 1
are going to -> print : 3
are going to -> normalize : 1
are going to -> take : 2
are going to -> both : 1
are going to -> the : 2
are going to -> manipulate : 1
are going to -> calculate : 1
are going to -> actually : 1
are going to -> test : 1
are going to -> read : 1
are going to -> see : 3
are going to -> define : 3
are going to -> fill : 1
are going to -> specialize : 1
are going to -> save : 1
are going to -> put : 1
are going to -> manage : 1
are going to -> have : 1
are going to -> generate : 1
are going to -> try : 1
are going to -> learn : 1
are going to -> change : 1
are going to -> do : 1
are going to -> employ : 1
are going to -> make : 1
going to spare -> us : 1
some we declare -> that : 2
using namespace will -> use : 2
using namespace will -> print : 2
using namespace will -> later : 1
namespace will use -> one : 1
namespace will use -> pairs : 1
will use one -> helper : 1
use one helper -> function : 1
one helper function -> in : 1
helper function in -> order : 1
order to crop -> possibly : 1
to crop possibly -> appended : 1
crop possibly appended -> or : 1
possibly appended or -> colons : 1
appended or colons -> from : 1
or colons from -> string : 1
colons from string -> string : 1
from string string -> const : 1
string string const -> char : 2
string string const -> auto : 1
string string const -> string : 1
string const char -> const : 2
const char const -> auto : 2
const char const -> first : 1
char const auto -> const : 1
char const auto -> a : 1
const auto const -> auto : 3
const auto return -> we : 2
const auto return -> data : 1
const auto return -> sort : 1
const auto return -> sum : 1
const auto return -> is : 1
const auto return -> width : 2
auto return we -> start : 1
auto return we -> can : 2
auto return we -> finally : 1
auto return we -> loop : 1
return we start -> with : 1
we start with -> the : 1
we start with -> a : 1
we start with -> this : 1
start with the -> actual : 1
start with the -> our : 1
the actual we -> will : 2
the actual we -> define : 1
the actual we -> need : 1
actual we will -> collect : 1
actual we will -> take : 1
we will collect -> a : 1
we will collect -> all : 1
will collect a -> map : 1
collect a map -> every : 1
a map every -> word : 1
map every word -> we : 1
every word we -> see : 1
word we see -> with : 1
we see with -> a : 1
see with a -> counter : 1
with a counter -> of : 1
with a counter -> denoting : 1
with a counter -> we : 1
a counter of -> that : 1
counter of that -> we : 1
of that we -> maintain : 1
that we maintain -> a : 1
we maintain a -> variable : 1
maintain a variable -> which : 1
a variable which -> records : 1
variable which records -> the : 1
which records the -> size : 1
records the size -> of : 1
the size of -> word : 1
the size of -> the : 6
the size of -> its : 1
the size of -> all : 3
the size of -> each : 1
the size of -> files : 1
size of word -> seen : 1
of word seen -> so : 1
word seen so -> so : 1
seen so so -> we : 1
so so we -> can : 1
we can indent -> the : 1
can indent the -> word : 1
indent the word -> frequency : 1
the word frequency -> table : 1
the word frequency -> in : 1
word frequency table -> we : 1
frequency table we -> print : 1
table we print -> it : 1
we print it -> at : 1
print it at -> the : 1
it at the -> end : 1
at the end -> of : 2
of the int -> int : 1
the int int -> we : 1
int int we -> stream : 1
int we stream -> from : 1
we stream from -> into : 1
stream from into -> an : 1
from into an -> the : 1
into an the -> input : 1
an the input -> stream : 1
the input stream -> will : 1
the input stream -> in : 1
the input stream -> until : 1
the input stream -> from : 1
the input stream -> an : 1
the input stream -> object : 2
input stream will -> cut : 1
stream will cut -> out : 1
will cut out -> white : 1
cut out white -> space : 1
out white space -> on : 1
white space on -> the : 1
space on the -> this : 1
on the this -> way : 1
on the this -> series : 1
on the this -> call : 1
on the this -> is : 1
the this way -> we : 3
way we get -> the : 1
way we get -> a : 1
way we get -> one : 1
way we get -> to : 1
get the input -> word : 1
the input word -> by : 1
word by string -> while : 1
by string while -> word : 1
string while word -> which : 1
while word which -> we : 1
word which we -> have : 1
we have could -> contain : 1
have could contain -> a : 1
could contain a -> or : 1
contain a or -> a : 1
a or a -> because : 1
or a because -> it : 1
a because it -> might : 1
because it might -> be : 1
might be at -> the : 1
of a sentence -> or : 1
a sentence or -> we : 1
sentence or we -> filter : 1
or we filter -> that : 1
we filter that -> out : 1
filter that out -> with : 1
that out with -> the : 1
out with the -> helper : 1
with the helper -> function : 1
helper function we -> defined : 1
helper function we -> stumble : 1
function we defined -> auto : 1
we defined auto -> filtered : 1
defined auto filtered -> case : 1
auto filtered case -> this : 1
filtered case this -> word : 1
case this word -> is : 1
this word is -> the : 1
word is the -> longest : 1
is the longest -> word : 1
the longest word -> so : 1
longest word so -> we : 1
word so we -> need : 1
need to update -> the : 1
to update the -> we : 1
update the we -> the : 1
the we the -> counter : 1
we the counter -> value : 1
the counter value -> of : 1
of the word -> in : 1
the word in -> our : 1
word in our -> if : 1
in our if -> it : 1
in our if -> the : 1
our if it -> occurs : 1
if it occurs -> for : 1
it occurs for -> the : 1
occurs for the -> first : 1
the first is -> implicitly : 1
the first is -> than : 2
the first is -> which : 1
first is implicitly -> created : 1
is implicitly created -> before : 1
implicitly created before -> we : 1
created before we -> increment : 1
before we increment -> the : 1
we increment the -> loop : 1
we increment the -> iterator : 1
increment the loop -> we : 1
loop we know -> that : 1
know that we -> saved : 1
that we saved -> all : 1
we saved all -> unique : 1
saved all unique -> words : 1
input stream in -> the : 1
input stream in -> order : 1
stream in the -> paired : 1
in the paired -> with : 1
the paired with -> a : 1
paired with a -> counter : 1
paired with a -> variable : 1
a counter denoting -> every : 1
counter denoting every -> the : 1
denoting every the -> map : 1
every the map -> uses : 1
the map uses -> words : 1
the map uses -> the : 1
map uses words -> as : 1
uses words as -> is : 1
words as is -> sorted : 1
as is sorted -> by : 1
is sorted by -> their : 1
sorted by their -> what : 1
sorted by their -> so : 1
sorted by their -> back : 1
sorted by their -> member : 1
by their what -> we : 1
their what we -> want : 1
what we want -> is : 1
what we want -> when : 1
what we want -> are : 1
what we want -> in : 1
what we want -> because : 1
what we want -> to : 1
we want is -> to : 1
we want is -> not : 1
want is to -> print : 1
is to print -> all : 1
to print all -> words : 1
print all words -> sorted : 1
print all words -> back : 1
all words sorted -> by : 1
words sorted by -> their : 1
by their so -> the : 1
their so the -> words : 1
so the words -> with : 1
the words with -> the : 1
words with the -> highest : 1
with the highest -> frequency : 1
with the highest -> associated : 1
with the highest -> compile : 1
the highest frequency -> shall : 1
highest frequency shall -> come : 1
frequency shall come -> in : 1
shall come in -> order : 1
come in order -> to : 1
order to get -> we : 3
order to get -> a : 17
order to get -> used : 1
order to get -> this : 1
order to get -> the : 7
order to get -> exactly : 1
order to get -> an : 1
order to get -> what : 1
order to get -> those : 1
order to get -> rid : 1
order to get -> from : 1
order to get -> familiar : 1
order to get -> only : 1
order to get -> distributions : 1
order to get -> them : 1
order to get -> insights : 1
order to get -> random : 1
order to get -> such : 1
order to get -> at : 1
order to get -> access : 1
to get we -> will : 1
to get we -> provide : 1
to get we -> apply : 1
get we will -> first : 1
we will first -> instantiate : 1
we will first -> play : 1
will first instantiate -> a : 1
first instantiate a -> vector : 1
a vector where -> all : 1
vector where all -> these : 1
where all these -> pairs : 1
all these pairs -> fit : 1
these pairs fit -> move : 1
pairs fit move -> them : 1
fit move them -> from : 1
move them from -> the : 1
them from the -> map : 1
the map to -> the : 2
the map to -> give : 1
map to the -> vector : 1
map to the -> this : 1
to the vector -> does : 1
to the vector -> which : 1
to the vector -> of : 1
the vector does -> now : 1
the vector does -> not : 1
vector does now -> still : 1
does now still -> contain : 1
now still contain -> all : 1
still contain all -> pairs : 1
contain all pairs -> in : 1
all pairs in -> the : 1
pairs in the -> same : 1
in the same -> order : 1
in the same -> output : 1
in the same -> in : 1
in the same -> data : 1
in the same -> we : 2
the same order -> as : 1
same order as -> the : 1
order as the -> map : 1
the map maintained -> now : 1
map maintained now -> we : 1
maintained now we -> sort : 1
now we sort -> it : 1
we sort it -> in : 1
sort it in -> order : 1
it in order -> to : 6
it in order -> it : 1
have the most -> frequent : 1
the most frequent -> words : 1
most frequent words -> at : 1
frequent words at -> the : 1
words at the -> and : 1
at the and -> the : 1
at the and -> types : 1
and the least -> frequent : 1
the least frequent -> ones : 1
least frequent ones -> at : 1
frequent ones at -> the : 1
ones at the -> auto : 1
at the auto -> const : 1
the auto const -> auto : 1
auto return data -> is : 1
return data is -> in : 1
data is in -> order : 1
is in order -> so : 1
in order so -> we : 1
order so we -> push : 1
so we push -> it : 1
we push it -> out : 1
push it out -> to : 1
it out to -> the : 1
out to the -> user : 2
out to the -> terminal : 1
the user using -> the : 1
user using the -> stream : 1
using the stream -> we : 1
the stream we -> format : 1
the stream we -> must : 1
stream we format -> the : 1
we format the -> data : 1
format the data -> in : 1
the data in -> indented : 1
the data in -> such : 1
data in indented -> so : 1
in indented so -> it : 1
indented so it -> looks : 1
so it looks -> kind : 1
so it looks -> simpler : 1
it looks kind -> of : 1
looks kind of -> like : 1
kind of like -> a : 1
of like a -> cout : 1
like a cout -> for : 1
a cout for -> auto : 1
auto cout word -> count : 1
cout word count -> compiling : 1
word count compiling -> the : 1
count compiling the -> we : 1
we can pipe -> any : 1
can pipe any -> text : 1
pipe any text -> file : 1
any text file -> into : 1
text file into -> it : 1
file into it -> in : 1
into it in -> order : 2
get a frequency -> cat : 1
a frequency cat -> it : 1
frequency cat it -> recipe : 1
cat it recipe -> concentrates : 1
it recipe concentrates -> on : 1
recipe concentrates on -> collecting : 1
recipe concentrates on -> breaking : 1
concentrates on collecting -> all : 1
on collecting all -> words : 1
collecting all words -> in : 1
words in an -> then : 1
in an then -> shoves : 1
an then shoves -> all : 1
then shoves all -> items : 1
shoves all items -> out : 1
all items out -> of : 1
items out of -> the : 3
items out of -> data : 1
the map and -> into : 1
the map and -> the : 1
the map and -> print : 2
the map and -> returning : 1
map and into -> an : 1
and into an -> which : 1
an which is -> then : 1
an which is -> pointed : 1
which is then -> sorted : 1
is then sorted -> in : 1
then sorted in -> order : 1
sorted in order -> to : 1
print the look -> at : 1
look at an -> when : 1
look at an -> implementation : 1
look at an -> in : 1
at an when -> we : 1
when we count -> the : 1
we count the -> word : 1
count the word -> frequency : 1
word frequency in -> the : 1
frequency in the -> string : 1
in the string -> a : 1
in the string -> object : 1
in the string -> which : 1
in the string -> to : 1
in the string -> view : 1
the string a -> b : 1
string a b -> c : 1
b c b -> b : 1
c b b -> b : 1
b b b -> d : 1
b b d -> c : 1
b d c -> we : 1
d c we -> would : 1
c we would -> get : 1
we would get -> the : 3
we would get -> a : 1
would get the -> following : 1
would get the -> substrings : 1
would get the -> absolute : 1
the following map -> b : 1
following map b -> c : 1
map b c -> d : 1
b c d -> that : 1
b c d -> e : 1
b c d -> a : 1
c d that -> is : 1
d that is -> not : 1
that is not -> the : 3
that is not -> an : 1
that is not -> smaller : 1
that is not -> in : 1
that is not -> then : 1
that is not -> we : 1
is not the -> order : 1
is not the -> case : 1
is not the -> best : 1
is not the -> right : 1
is not the -> we : 2
not the order -> which : 1
the order which -> we : 1
order which we -> want : 1
which we want -> to : 6
want to present -> to : 1
want to present -> the : 1
to present to -> the : 1
present to the -> the : 1
to the the -> program : 1
to the the -> second : 1
to the the -> stl : 1
to the the -> other : 1
to the the -> function : 1
to the the -> items : 1
to the the -> first : 1
to the the -> probability : 1
to the the -> operating : 1
to the the -> format : 1
the the program -> should : 1
the the program -> prints : 1
the program should -> print : 1
program should print -> it : 1
should print it -> has : 1
print it has -> the : 1
has the highest -> then : 1
the highest then -> then : 1
highest then then -> then : 1
then then then -> we : 1
then then we -> cannot : 1
then we cannot -> request : 1
then we cannot -> dereference : 1
we cannot request -> the : 1
cannot request the -> map : 1
request the map -> to : 1
map to give -> us : 1
to give us -> the : 1
give us the -> with : 1
give us the -> sorted : 1
give us the -> return : 1
us the with -> the : 1
the with the -> highest : 1
the with the -> second : 1
the with the -> other : 1
the highest associated -> then : 1
highest associated then -> the : 1
associated then the -> with : 1
then the with -> the : 1
the second highest -> associated : 1
second highest associated -> and : 1
highest associated and -> so : 1
associated and so -> the : 1
and so the -> vector : 1
and so the -> it : 1
and so the -> minimal : 1
so the vector -> comes : 1
the vector comes -> into : 1
vector comes into -> we : 1
into we typed -> the : 1
we typed the -> vector : 1
typed the vector -> to : 1
the vector to -> contain : 1
the vector to -> the : 2
the vector to -> we : 1
the vector to -> generate : 1
vector to contain -> pairs : 1
to contain pairs -> of : 1
contain pairs of -> strings : 1
contain pairs of -> matching : 1
pairs of strings -> and : 1
of strings and -> counter : 1
of strings and -> their : 1
strings and counter -> this : 1
and counter this -> way : 1
counter this way -> it : 1
counter this way -> we : 1
this way it -> can : 1
this way it -> is : 1
way it can -> hold : 1
it can hold -> items : 1
it can hold -> a : 1
can hold items -> exactly : 1
hold items exactly -> in : 1
items exactly in -> the : 1
exactly in the -> form : 1
the form as -> they : 1
form as they -> drop : 1
as they drop -> out : 1
they drop out -> of : 1
drop out of -> the : 3
of the we -> fill : 1
of the we -> are : 1
of the we -> calculate : 1
of the we -> see : 1
of the we -> did : 1
of the we -> use : 1
of the we -> can : 1
of the we -> create : 1
of the we -> will : 1
the we fill -> the : 1
the we fill -> a : 1
we fill the -> vector : 1
fill the vector -> using : 1
fill the vector -> with : 1
the vector using -> the : 2
vector using the -> pairs : 1
vector using the -> function : 1
using the pairs -> using : 1
the pairs using -> the : 1
pairs using the -> this : 1
using the this -> has : 1
the this has -> the : 1
this has the -> advantage : 1
has the advantage -> that : 1
the advantage that -> the : 1
advantage that the -> part : 1
the strings which -> is : 1
strings which is -> maintained : 1
which is maintained -> on : 1
is maintained on -> the : 1
maintained on the -> heap : 1
on the heap -> will : 1
on the heap -> and : 1
on the heap -> using : 1
on the heap -> that : 2
on the heap -> because : 1
the heap will -> not : 1
heap will not -> be : 1
will not be -> but : 1
will not be -> possible : 1
will not be -> confused : 1
will not be -> auto : 1
will not be -> visible : 1
will not be -> as : 1
not be but -> will : 1
not be but -> what : 1
be but will -> be : 1
but will be -> moved : 1
will be moved -> over : 1
be moved over -> from : 1
moved over from -> the : 1
over from the -> map : 1
to the this -> way : 1
to the this -> distracts : 1
to the this -> is : 1
to the this -> we : 1
we can avoid -> a : 1
we can avoid -> the : 1
we can avoid -> we : 1
can avoid a -> lot : 1
avoid a lot -> of : 1
lot of stl -> implementations : 1
lot of stl -> algorithms : 1
of stl implementations -> use : 1
stl implementations use -> short : 1
implementations use short -> string : 1
use short string -> the : 1
short string the -> string : 1
string the string -> is : 1
the string is -> not : 1
string is not -> too : 2
string is not -> same : 1
not too it -> will : 1
too it will -> be : 1
will be allocated -> on : 1
be allocated on -> the : 1
allocated on the -> stored : 1
allocated on the -> which : 1
on the stored -> in : 1
the stored in -> the : 1
stored in the -> string : 1
stored in the -> const : 1
stored in the -> argument : 1
the string object -> directly : 1
string object directly -> in : 1
object directly in -> that : 1
directly in that -> a : 1
in that a -> move : 1
that a move -> is : 1
a move is -> not : 1
move is not -> but : 1
is not but -> moves : 1
is not but -> a : 1
not but moves -> are : 1
but moves are -> also : 1
moves are also -> never : 1
are also never -> next : 1
also never next -> interesting : 1
never next interesting -> step : 1
next interesting step -> is : 1
interesting step is -> the : 1
step is the -> sort : 1
step is the -> int : 1
is the sort -> which : 1
the sort which -> uses : 1
sort which uses -> a : 1
which uses a -> lambda : 1
which uses a -> standard : 1
uses a lambda -> as : 1
a lambda as -> a : 1
lambda as a -> custom : 1
as a custom -> comparison : 1
a custom comparison -> auto : 1
custom comparison auto -> const : 1
comparison auto const -> auto : 1
auto return sort -> algorithm : 1
return sort algorithm -> will : 1
sort algorithm will -> take : 1
algorithm will take -> items : 1
will take items -> and : 1
take items and -> compare : 1
items and compare -> which : 1
and compare which -> is : 1
compare which is -> what : 1
which is what -> sort : 1
which is what -> we : 5
is what sort -> algorithms : 1
what sort algorithms -> by : 1
sort algorithms by -> providing : 1
algorithms by providing -> that : 1
by providing that -> lambda : 1
providing that lambda -> the : 1
that lambda the -> comparison : 1
lambda the comparison -> does : 1
the comparison does -> not : 1
comparison does not -> just : 1
does not just -> compare : 1
not just compare -> if : 1
just compare if -> is : 1
compare if is -> smaller : 1
if is smaller -> than : 1
is smaller than -> is : 1
is smaller than -> for : 1
smaller than is -> the : 1
than is the -> default : 1
is the default -> but : 1
is the default -> deleter : 1
is the default -> no : 1
the default but -> also : 1
the default but -> it : 1
default but also -> compares : 1
but also compares -> if : 1
also compares if -> is : 1
compares if is -> larger : 1
if is larger -> than : 1
is larger than -> note : 1
larger than note -> that : 1
than note that -> all : 1
note that all -> objects : 1
that all objects -> are : 1
all objects are -> of : 1
all objects are -> and : 1
objects are of -> strings : 1
objects are of -> completely : 1
are of strings -> and : 1
strings and their -> counter : 1
and their counter -> and : 1
their counter and -> by : 1
counter and by -> writing : 1
and by writing -> we : 1
by writing we -> access : 1
writing we access -> the : 1
access the counter -> this : 1
the counter this -> way : 1
way we move -> all : 1
we move all -> words : 1
move all words -> toward : 1
all words toward -> the : 1
words toward the -> beginning : 1
toward the beginning -> of : 1
the beginning of -> the : 4
the beginning of -> a : 1
the beginning of -> this : 1
beginning of the -> and : 1
beginning of the -> from : 1
beginning of the -> last : 1
beginning of the -> period : 1
and the ones -> to : 1
the ones to -> the : 1
ones to the -> a : 1
the a writing -> style : 1
lot of items -> shall : 1
of items shall -> be : 1
items shall be -> stored : 1
items shall be -> is : 1
shall be stored -> in : 1
be stored in -> a : 1
stored in a -> sorted : 1
a sorted and -> the : 1
sorted and the -> key : 1
and the key -> by : 1
the key by -> which : 1
key by which -> they : 1
by which they -> are : 1
which they are -> sorted : 1
they are sorted -> can : 1
are sorted can -> occur : 1
sorted can occur -> multiple : 1
can occur multiple -> is : 1
occur multiple is -> a : 1
multiple is a -> good : 1
is a good -> find : 1
is a good -> idea : 1
is a good -> default : 1
is a good -> start : 1
a good find -> an : 1
good find an -> example : 1
find an example -> use : 1
an example use -> when : 1
example use when -> writing : 1
use when writing -> text : 1
when writing text -> in : 1
writing text in -> it : 1
text in it -> is : 1
in it is -> okay : 1
in it is -> we : 1
in it is -> just : 1
in it is -> a : 1
in it is -> clear : 1
it is okay -> to : 2
is okay to -> use : 1
is okay to -> reset : 1
okay to use -> very : 1
to use very -> long : 1
use very long -> when : 1
very long when -> writing : 1
long when writing -> texts : 1
when writing texts -> in : 1
writing texts in -> it : 1
texts in it -> is : 1
is we will -> implement : 1
is we will -> play : 1
is we will -> use : 1
we will implement -> a : 9
we will implement -> our : 2
we will implement -> the : 3
we will implement -> each : 1
we will implement -> one : 1
we will implement -> two : 1
we will implement -> exactly : 1
we will implement -> such : 1
will implement a -> tool : 1
will implement a -> function : 2
will implement a -> terminal : 1
will implement a -> slick : 1
will implement a -> program : 3
will implement a -> prints : 1
will implement a -> tiny : 1
will implement a -> simple : 1
will implement a -> little : 1
implement a tool -> german : 1
a tool german -> authors : 1
tool german authors -> to : 1
german authors to -> analyze : 1
authors to analyze -> their : 1
to analyze their -> english : 1
analyze their english -> text : 1
their english text -> focusing : 1
english text focusing -> on : 1
text focusing on -> the : 1
focusing on the -> length : 1
on the length -> of : 1
the length of -> all : 1
the length of -> the : 3
the length of -> which : 1
the length of -> in : 1
length of all -> in : 1
of all in -> order : 1
all in order -> to : 2
order to help -> the : 1
order to help -> we : 1
order to help -> stl : 1
to help the -> author : 1
help the author -> in : 1
the author in -> improving : 1
author in improving -> the : 1
in improving the -> text : 1
improving the text -> it : 1
the text it -> will : 1
text it will -> group : 1
it will group -> the : 1
will group the -> sentences : 1
group the sentences -> by : 1
the sentences by -> their : 1
sentences by their -> this : 1
sentences by their -> length : 1
by their this -> way : 1
by their this -> they : 1
their this way -> the : 1
their this way -> equals : 1
way the author -> can : 1
the author can -> pick : 1
author can pick -> the : 1
can pick the -> longest : 1
pick the longest -> ones : 1
the longest ones -> and : 1
longest ones and -> break : 1
ones and break -> them : 1
and break them -> to : 1
break them to -> do : 1
them to do -> this : 2
this we all -> user : 1
we all user -> input : 1
standard which we -> will : 1
we will tokenize -> by : 1
will tokenize by -> whole : 1
tokenize by whole -> and : 1
by whole and -> not : 1
whole and not -> then : 1
and not then -> we : 1
not then we -> will : 1
not then we -> need : 1
then we will -> collect : 1
then we will -> combine : 1
then we will -> to : 1
then we will -> also : 1
will collect all -> sentences : 1
collect all sentences -> in : 1
all sentences in -> an : 1
sentences in an -> paired : 1
in an paired -> with : 1
an paired with -> a : 1
with a variable -> carrying : 1
a variable carrying -> their : 1
variable carrying their -> we : 1
carrying their we -> output : 1
their we output -> all : 1
we output all -> sorted : 1
output all sorted -> by : 1
all sorted by -> their : 1
by their back -> to : 1
their back to -> the : 1
include all needed -> comes : 1
include all needed -> headers : 2
all needed comes -> from : 1
needed comes from -> the : 1
comes from the -> same : 1
the same header -> as : 1
same header as -> use : 1
header as use -> a : 1
as use a -> lot : 1
use a lot -> of : 1
lot of functions -> from : 1
of functions from -> namespace : 1
functions from namespace -> so : 1
from namespace so -> we : 1
namespace so we -> declare : 1
so we declare -> its : 1
we declare its -> use : 1
declare its use -> using : 1
its use using -> namespace : 1
use using namespace -> we : 3
use using namespace -> will : 2
use using namespace -> short : 1
use using namespace -> begin : 1
use using namespace -> dictionary : 1
use using namespace -> use : 1
use using namespace -> data : 1
use using namespace -> mandelbrot : 1
use using namespace -> algorithm : 1
use using namespace -> our : 1
use using namespace -> first : 2
use using namespace -> function : 1
use using namespace -> helper : 1
use using namespace -> define : 1
use using namespace -> order : 1
use using namespace -> are : 1
use using namespace -> implement : 1
namespace we tokenize -> strings : 1
we tokenize strings -> by : 1
tokenize strings by -> extracting : 1
strings by extracting -> between : 1
by extracting between -> dot : 1
extracting between dot -> characters : 1
between dot characters -> in : 1
dot characters in -> the : 1
characters in the -> we : 1
characters in the -> argument : 1
characters in the -> middle : 1
we will get -> text : 1
we will get -> a : 2
we will get -> to : 1
we will get -> equally : 1
will get text -> sentences : 1
get text sentences -> surrounded : 1
text sentences surrounded -> by : 1
sentences surrounded by -> white : 1
surrounded by white -> space : 1
by white space -> such : 1
white space such -> new : 1
space such new -> line : 1
such new line -> and : 1
new line and -> so : 1
line and so -> these : 1
and so these -> would : 1
so these would -> increase : 1
these would increase -> their : 1
would increase their -> size : 1
increase their size -> in : 1
their size in -> a : 1
size in a -> wrong : 1
in a wrong -> so : 1
a wrong so -> we : 1
wrong so we -> filter : 1
so we filter -> them : 1
we filter them -> out : 1
filter them out -> using : 1
them out using -> a : 1
out using a -> helper : 1
using a helper -> which : 1
a helper which -> we : 1
a helper which -> takes : 1
a helper which -> helps : 1
helper which we -> now : 1
helper which we -> call : 1
which we now -> string : 1
we now string -> string : 1
now string string -> const : 1
const auto a -> const : 1
auto a const -> auto : 1
a const auto -> b : 1
a const auto -> const : 1
a const auto -> toc : 1
a const auto -> fs : 1
const auto b -> if : 1
auto b if -> return : 1
b if return -> return : 1
if return return -> actual : 1
if return return -> to : 1
if return return -> code : 1
if return return -> template : 1
if return return -> thing : 1
if return return -> last : 1
if return return -> it : 1
if return return -> can : 1
if return return -> a : 1
if return return -> now : 1
if return return -> another : 1
return return actual -> sentence : 1
return actual sentence -> length : 1
actual sentence length -> counting : 1
sentence length counting -> function : 1
length counting function -> shall : 1
counting function shall -> take : 1
function shall take -> a : 1
shall take a -> giant : 1
take a giant -> string : 1
a giant string -> containing : 1
giant string containing -> all : 1
string containing all -> the : 2
containing all the -> and : 1
containing all the -> characters : 1
all the and -> then : 1
all the and -> out : 1
all the and -> this : 1
all the and -> so : 1
then return an -> which : 1
then return an -> iterator : 2
return an which -> maps : 1
an which maps -> sorted : 1
which maps sorted -> sentence : 1
maps sorted sentence -> lengths : 1
sorted sentence lengths -> to : 1
sentence lengths to -> the : 1
lengths to the -> string : 1
to the string -> begin : 1
to the string -> view : 1
the string begin -> by : 1
string begin by -> declaring : 1
begin by declaring -> the : 1
by declaring the -> which : 1
declaring the which -> is : 1
which is intended -> to : 1
is intended to -> be : 1
intended to be -> the : 1
be the return -> and : 1
the return and -> some : 1
return and some -> as : 1
and some as -> we : 1
some as we -> will : 1
some as we -> implement : 1
some as we -> a : 1
as we will -> have : 1
as we will -> demonstrate : 1
as we will -> in : 1
as we will -> studying : 1
as we will -> see : 2
as we will -> void : 1
have a we -> need : 1
a we need -> an : 1
a we need -> a : 1
a we need -> to : 3
we need an -> then : 1
we need an -> is : 1
we need an -> instance : 1
need an then -> we : 1
we use two -> iterators : 1
use two iterators -> in : 1
two iterators in -> order : 1
iterators in order -> to : 1
order to point -> to : 2
to point to -> consecutive : 1
to point to -> an : 1
to point to -> the : 1
point to consecutive -> dots : 1
to consecutive dots -> within : 1
consecutive dots within -> the : 1
dots within the -> everything : 1
within the everything -> between : 1
the everything between -> is : 1
everything between is -> a : 1
between is a -> text : 1
is a text -> const : 1
a text const -> auto : 1
text const auto -> auto : 1
const auto auto -> auto : 1
const auto auto -> os : 1
auto auto auto -> will : 1
auto auto auto -> for : 1
auto auto auto -> constexpr : 1
auto auto will -> be : 1
auto will be -> always : 1
will be always -> one : 1
be always one -> dot : 1
always one dot -> further : 1
one dot further -> than : 1
dot further than -> as : 1
further than as -> long : 1
than as long -> as : 1
as long as -> did : 1
as long as -> the : 1
as long as -> we : 2
as long as -> it : 1
as long as -> threads : 1
as long as -> and : 1
as long as -> is : 1
as long as -> only : 1
long as did -> not : 1
as did not -> reach : 1
did not reach -> the : 1
not reach the -> end : 1
not reach the -> point : 1
reach the end -> of : 1
reach the end -> iterator : 1
we are the -> second : 1
are the second -> condition : 1
the second condition -> checks : 1
second condition checks -> is : 1
condition checks is -> really : 1
checks is really -> at : 1
is really at -> least : 1
really at least -> some : 1
at least some -> characters : 1
least some characters -> if : 1
some characters if -> that : 1
characters if that -> was : 1
if that was -> not : 1
that was not -> the : 1
that was not -> locked : 1
was not the -> there : 1
not the there -> would : 1
the there would -> be : 1
would be no -> characters : 1
be no characters -> left : 1
no characters left -> to : 1
characters left to -> read : 1
left to read -> between : 1
to read between -> while : 1
read between while -> create : 1
between while create -> a : 1
while create a -> string : 1
create a string -> from : 1
create a string -> object : 1
create a string -> instead : 1
create a string -> a : 1
a string from -> all : 1
a string from -> the : 2
a string from -> we : 1
a string from -> a : 1
a string from -> user : 1
a string from -> such : 1
string from all -> characters : 1
from all characters -> between : 1
all characters between -> the : 1
characters between the -> and : 1
between the and -> filter : 1
between the and -> which : 1
the and filter -> all : 1
and filter all -> white : 1
filter all white -> space : 1
all white space -> from : 1
white space from -> its : 1
space from its -> beginning : 1
from its beginning -> and : 1
its beginning and -> in : 1
beginning and in -> order : 1
and in order -> to : 4
to count the -> length : 1
to count the -> number : 1
to count the -> time : 1
count the length -> of : 1
length of the -> pure : 1
length of the -> subrange : 1
length of the -> current : 1
of the pure -> string : 1
the pure string -> s : 1
pure string s -> possible : 1
string s possible -> that : 1
s possible that -> the : 1
possible that the -> sentence : 1
that the sentence -> does : 1
the sentence does -> not : 1
sentence does not -> contain : 1
does not contain -> anything : 1
does not contain -> valid : 1
does not contain -> the : 2
does not contain -> subranges : 1
not contain anything -> white : 1
contain anything white -> in : 1
anything white in -> that : 1
white in that -> we : 1
that we simply -> drop : 1
we simply drop -> we : 1
simply drop we -> count : 1
drop we count -> its : 1
we count its -> length : 1
count its length -> by : 1
its length by -> determining : 1
length by determining -> how : 1
by determining how -> many : 1
determining how many -> words : 1
how many words -> there : 1
how many words -> it : 2
many words there -> this : 1
words there this -> is : 1
there this is -> as : 1
this is as -> there : 1
is as there -> are : 1
there are single -> spaces : 1
are single spaces -> between : 1
single spaces between -> all : 1
spaces between all -> then : 1
between all then -> we : 1
all then we -> save : 1
then we save -> the : 1
we save the -> word : 1
we save the -> last : 1
we save the -> time : 3
save the word -> count : 1
the word count -> together : 1
word count together -> with : 1
count together with -> the : 1
with the sentence -> in : 1
with the sentence -> one : 1
the sentence in -> the : 1
sentence in the -> if : 1
the if const -> auto : 1
if const auto -> words : 1
if const auto -> cout : 1
if const auto -> the : 1
const auto words -> the : 1
auto words the -> next : 1
words the next -> loop : 1
the next loop -> we : 1
next loop we -> put : 1
loop we put -> the : 1
we put the -> leading : 1
we put the -> function : 1
we put the -> call : 1
we put the -> string : 1
we put the -> line : 1
put the leading -> iterator : 1
the leading iterator -> on : 1
leading iterator on -> the : 1
on the next -> dot : 1
on the next -> item : 1
the next dot -> the : 1
the next dot -> if : 1
next dot the -> following : 1
dot the following -> iterator : 1
the following iterator -> is : 1
following iterator is -> put : 1
iterator is put -> one : 1
iterator is put -> on : 1
is put one -> character : 1
put one character -> after : 1
one character after -> the : 1
character after the -> position : 1
after the position -> of : 1
of the leading -> the : 1
the leading the -> loop : 1
leading the loop -> is : 1
the loop is -> the : 1
the loop is -> simple : 1
loop is the -> contains : 1
is the contains -> all : 1
the contains all -> sentences : 1
contains all sentences -> paired : 1
all sentences paired -> with : 1
sentences paired with -> their : 1
paired with their -> word : 1
with their word -> count : 1
their word count -> and : 1
word count and -> can : 1
count and can -> be : 1
and can be -> return : 1
and can be -> used : 1
and can be -> freely : 1
and can be -> combined : 1
can be return -> we : 1
be return we -> put : 1
return we put -> the : 1
put the function -> to : 1
the function to -> we : 1
function to we -> tell : 1
function to we -> can : 1
to we tell -> to : 1
we tell to -> not : 1
tell to not -> skip : 1
to not skip -> white : 1
not skip white -> as : 1
skip white as -> we : 1
white as we -> want : 1
as we want -> sentences : 1
we want sentences -> with : 1
want sentences with -> spaces : 1
sentences with spaces -> in : 1
with spaces in -> one : 1
spaces in one -> in : 1
in one in -> order : 1
one in order -> to : 1
order to read -> the : 1
to read the -> whole : 1
to read the -> loop : 1
read the whole -> we : 1
read the whole -> file : 3
read the whole -> standard : 1
the whole we -> initialize : 1
the whole we -> write : 1
the whole we -> print : 1
whole we initialize -> an : 1
we initialize an -> from : 1
initialize an from -> input : 1
an from input -> stream : 1
from input stream -> iterators : 1
input stream iterators -> which : 1
stream iterators which -> encapsulate : 1
iterators which encapsulate -> int : 1
which encapsulate int -> string : 1
encapsulate int string -> content : 1
int string content -> we : 1
string content we -> only : 1
content we only -> need : 1
we only need -> the : 1
we only need -> to : 1
only need the -> result : 1
only need the -> headers : 1
need the result -> for : 1
the result for -> we : 1
result for we -> put : 1
for we put -> the : 1
put the call -> directly : 1
the call directly -> in : 1
call directly in -> the : 1
directly in the -> loop : 1
the loop and -> feed : 1
loop and feed -> it : 1
it with our -> in : 1
with our in -> the : 2
our in the -> loop : 1
our in the -> we : 1
loop we print -> the : 2
print the items -> line : 1
the items line -> by : 1
items line by -> for : 1
line by for -> auto : 1
by for auto -> cout : 1
auto cout sentence -> compiling : 1
cout sentence compiling -> the : 1
sentence compiling the -> we : 1
we can feed -> the : 2
we can feed -> them : 1
we can feed -> into : 1
we can feed -> it : 1
can feed the -> app : 1
can feed the -> hash : 1
can feed the -> constructor : 1
feed the app -> with : 1
the app with -> text : 1
app with text -> from : 1
with text from -> any : 1
text from any -> text : 1
from any text -> example : 1
any text example -> lorem : 1
text example lorem -> ipsum : 1
example lorem ipsum -> text : 1
lorem ipsum text -> yields : 1
ipsum text yields -> the : 1
text yields the -> following : 1
the following as -> the : 1
the following as -> we : 2
following as the -> output : 1
as the output -> is : 1
as the output -> it : 1
output is very -> long : 1
output is very -> which : 1
is very long -> for : 1
very long for -> long : 1
long for long -> text : 1
for long text -> with : 1
long text with -> many : 1
text with many -> it : 1
with many it -> prints : 1
many it prints -> the : 1
it prints the -> shortest : 1
it prints the -> number : 1
prints the shortest -> sentences : 1
the shortest sentences -> first : 1
shortest sentences first -> and : 1
sentences first and -> the : 1
first and the -> longest : 1
first and the -> begin : 1
first and the -> very : 1
and the longest -> this : 1
the longest this -> way : 1
longest this way -> we : 1
way we see -> the : 1
see the longest -> sentences : 1
the longest sentences -> first : 1
longest sentences first -> as : 1
sentences first as -> terminals : 1
first as terminals -> usually : 1
as terminals usually -> scroll : 1
terminals usually scroll -> to : 1
usually scroll to -> the : 1
scroll to the -> end : 1
to the end -> of : 3
to the end -> if : 1
to the end -> it : 1
to the end -> iterator : 1
to the end -> which : 1
of the output -> cat : 1
of the output -> stream : 1
the output cat -> nam : 1
output cat nam -> quam : 1
cat nam quam -> blandit : 1
nam quam blandit -> luctus : 1
quam blandit luctus -> hendrerit : 1
blandit luctus hendrerit -> sed : 1
luctus hendrerit sed -> leo : 1
hendrerit sed leo -> eget : 1
sed leo eget -> bibendum : 1
leo eget bibendum -> augue : 1
eget bibendum augue -> velit : 1
bibendum augue velit -> cursus : 1
augue velit cursus -> cum : 1
velit cursus cum -> sociis : 1
cursus cum sociis -> natoque : 1
cum sociis natoque -> penatibus : 1
sociis natoque penatibus -> et : 1
natoque penatibus et -> magnis : 1
penatibus et magnis -> dis : 1
et magnis dis -> parturient : 1
magnis dis parturient -> nascetur : 1
dis parturient nascetur -> ridiculus : 1
parturient nascetur ridiculus -> maecenas : 1
nascetur ridiculus maecenas -> tellus : 1
ridiculus maecenas tellus -> eget : 1
maecenas tellus eget -> condimentum : 1
tellus eget condimentum -> sem : 1
eget condimentum sem -> quam : 1
condimentum sem quam -> semper : 1
sem quam semper -> sit : 1
quam semper sit -> amet : 1
semper sit amet -> adipiscing : 1
sit amet adipiscing -> sem : 1
amet adipiscing sem -> neque : 1
adipiscing sem neque -> sed : 1
sem neque sed -> it : 1
neque sed it -> whole : 1
sed it whole -> recipe : 1
whole recipe concentrates -> on : 1
concentrates on breaking -> down : 1
on breaking down -> a : 1
breaking down a -> large : 1
down a large -> string : 1
large string into -> sentences : 1
string into sentences -> of : 1
into sentences of -> which : 1
sentences of which -> are : 1
of which are -> assessed : 1
of which are -> then : 1
which are assessed -> for : 1
are assessed for -> their : 1
assessed for their -> and : 1
for their and -> then : 1
their and then -> ordered : 1
and then ordered -> in : 1
then ordered in -> a : 1
ordered in a -> because : 1
in a because -> itself : 1
a because itself -> is : 1
because itself is -> so : 1
itself is so -> easy : 1
is so easy -> to : 1
so easy to -> the : 1
so easy to -> throw : 1
easy to the -> complex : 1
easy to the -> if : 1
to the complex -> part : 1
the complex part -> of : 1
complex part of -> the : 1
of the program -> is : 1
of the program -> are : 1
of the program -> did : 1
of the program -> blocked : 1
of the program -> does : 1
the program is -> the : 1
the program is -> still : 1
the program is -> not : 1
the program is -> really : 1
the program is -> we : 1
the program is -> doomed : 1
the program is -> currently : 1
program is the -> which : 1
the which iterates -> over : 1
which iterates over -> the : 1
which iterates over -> such : 1
iterates over the -> auto : 1
over the auto -> auto : 1
the auto auto -> beginning : 1
the auto auto -> for : 1
the auto auto -> int : 1
auto auto beginning -> of : 1
auto beginning of -> string : 1
beginning of string -> auto : 1
of string auto -> first : 1
string auto first -> dot : 1
auto first dot -> while : 1
first dot while -> string : 1
dot while string -> sentence : 1
while string sentence -> do : 1
string sentence do -> something : 1
sentence do something -> with : 1
something with the -> sentence : 1
something with the -> input : 1
the sentence one -> character : 1
sentence one character -> past : 1
one character past -> current : 1
character past current -> dot : 1
past current dot -> next : 1
current dot next -> or : 1
dot next or -> end : 1
next or end -> of : 1
or end of -> string : 1
end of string -> look : 1
of string look -> at : 1
string look at -> the : 1
at the code -> with : 1
at the code -> snippet : 1
the code with -> the : 1
the code with -> clan : 1
the code with -> clang : 1
the code with -> too : 1
code with the -> following : 1
the following which -> consists : 1
the following which -> shows : 2
the following which -> is : 5
the following which -> we : 1
the following which -> looks : 1
the following which -> are : 1
following which consists -> of : 1
which consists of -> and : 1
which consists of -> an : 1
which consists of -> wildly : 1
which consists of -> these : 1
consists of and -> are : 1
of and are -> always : 1
and are always -> moved : 1
are always moved -> forward : 1
always moved forward -> through : 1
moved forward through -> the : 1
forward through the -> string : 1
through the string -> this : 2
through the string -> and : 1
the string this -> way : 1
the string this -> is : 1
string this way -> they : 1
this way they -> always : 1
way they always -> point : 1
they always point -> to : 1
always point to -> the : 1
to the beginning -> and : 3
to the beginning -> of : 3
of the algorithm -> helps : 1
of the algorithm -> can : 1
of the algorithm -> is : 1
the algorithm helps -> us : 1
algorithm helps us -> a : 1
helps us a -> lot : 1
us a lot -> in : 1
a lot in -> that : 2
lot in that -> it : 2
it works like -> at : 1
it works like -> a : 1
works like at -> then : 1
like at then -> return : 1
at then return -> an : 1
return an iterator -> to : 1
return an iterator -> advanced : 1
return an iterator -> for : 1
return an iterator -> pointing : 1
next dot if -> there : 1
dot if there -> is : 1
if there is -> return : 1
if there is -> then : 1
if there is -> no : 3
if there is -> only : 1
if there is -> the : 1
if there is -> a : 3
if there is -> nothing : 1
if there is -> anything : 1
there is return -> the : 1
is return the -> end : 1
return the end -> we : 1
the end we -> extract : 1
end we extract -> a : 1
we extract a -> sentence : 1
extract a sentence -> we : 1
a sentence we -> determine : 1
sentence we determine -> how : 1
we determine how -> many : 1
determine how many -> words : 1
determine how many -> incrementing : 1
many words it -> so : 1
many words it -> consists : 1
words it so -> we : 1
it so we -> can : 2
we can insert -> it : 1
can insert it -> into : 1
into the we -> are : 1
into the we -> need : 1
into the we -> return : 2
into the we -> have : 1
are using the -> of : 1
using the of -> as : 1
the of as -> the : 1
of as the -> for : 1
as the for -> the : 1
the for the -> map : 1
the for the -> sake : 1
for the map -> and : 1
for the map -> into : 1
map and the -> string : 1
and the string -> itself : 1
and the string -> without : 1
and the string -> into : 1
the string itself -> as : 1
string itself as -> the : 1
itself as the -> payload : 1
as the payload -> object : 1
the payload object -> associated : 1
the payload object -> and : 1
payload object associated -> with : 1
associated with there -> can : 1
with there can -> easily : 1
there can easily -> be : 1
easily be multiple -> sentences : 1
be multiple sentences -> which : 1
multiple sentences which -> have : 1
sentences which have -> the : 1
which have the -> same : 1
the same this -> would : 1
the same this -> we : 2
the same this -> means : 1
same this would -> render : 1
this would render -> us : 1
would render us -> unable : 1
render us unable -> to : 1
us unable to -> insert : 1
unable to insert -> them : 1
insert them all -> into : 1
them all into -> one : 1
all into one -> but : 1
into one but -> since : 1
one but since -> we : 1
but since we -> use : 1
since we use -> this : 1
we use this -> is : 1
we use this -> modifier : 1
this is no -> because : 1
is no because -> it : 1
no because it -> can : 1
can easily handle -> multiple : 1
easily handle multiple -> keys : 1
handle multiple keys -> of : 1
multiple keys of -> the : 1
the same it -> will : 1
the same it -> is : 3
same it will -> keep : 1
it will keep -> them : 1
will keep them -> all : 1
keep them all -> in : 1
them all in -> which : 1
them all in -> a : 1
all in which -> is : 1
in which is -> what : 1
in which is -> they : 1
in which is -> plus : 1
what we need -> to : 1
need to enumerate -> all : 1
to enumerate all -> sentences : 1
enumerate all sentences -> by : 1
all sentences by -> their : 1
by their length -> and : 1
their length and -> output : 1
length and output -> them : 1
and output them -> to : 1
output them to -> the : 1
them to the -> having : 1
them to the -> state : 1
them to the -> same : 1
them to the -> nearest : 1
to the having -> read : 1
the having read -> the : 1
having read the -> whole : 1
the whole file -> into : 3
whole file into -> one : 1
whole file into -> a : 2
file into one -> large : 1
into one large -> we : 1
one large we -> iterate : 1
large we iterate -> through : 1
string and create -> copies : 1
and create copies -> of : 1
create copies of -> every : 1
copies of every -> sentence : 1
of every sentence -> this : 1
every sentence this -> is : 1
sentence this is -> not : 1
this is not -> as : 1
this is not -> worth : 1
this is not -> a : 2
this is not -> the : 2
this is not -> what : 2
this is not -> generally : 1
this is not -> something : 1
this is not -> important : 1
this is not -> between : 1
this is not -> too : 1
is not as -> we : 1
not as we -> also : 1
as we also -> could : 1
we also could -> have : 1
also could have -> used : 1
could have used -> which : 1
have used which -> will : 1
used which will -> be : 1
will be covered -> later : 1
be covered later -> in : 1
covered later in -> this : 1
in this way -> to : 1
this way to -> iteratively : 1
way to iteratively -> get : 1
to iteratively get -> the : 1
iteratively get the -> strings : 1
get the strings -> between : 1
the strings between -> two : 1
strings between two -> consecutive : 1
between two consecutive -> dots : 1
two consecutive dots -> is : 1
consecutive dots is -> which : 1
dots is which -> will : 1
which will also -> be : 1
also be covered -> in : 1
be covered in -> a : 1
covered in a -> later : 1
in a later -> chapter : 1
a later chapter -> of : 1
later chapter of -> this : 1
chapter of this -> a : 1
chapter of this -> whereas : 1
of this a -> personal : 1
of this a -> word : 1
this a personal -> list : 1
list using is -> another : 1
using is another -> container : 1
is another container -> adapter : 1
another container adapter -> such : 1
container adapter such -> it : 1
adapter such it -> is : 1
such it is -> a : 1
such it is -> printed : 1
such it is -> great : 1
is a wrapper -> around : 1
wrapper around another -> data : 1
around another data -> structure : 1
another data structure -> by : 1
data structure by -> and : 1
structure by and -> provides : 1
by and provides -> a : 1
and provides a -> interface : 1
and provides a -> way : 1
provides a interface -> for : 1
a interface for -> this : 1
interface for this -> means : 1
for this means -> that : 2
means that items -> can : 1
that items can -> stepwise : 1
items can stepwise -> be : 1
can stepwise be -> pushed : 1
stepwise be pushed -> into : 1
be pushed into -> and : 1
be pushed into -> the : 1
pushed into and -> stepwise : 1
into and stepwise -> be : 1
and stepwise be -> popped : 1
stepwise be popped -> out : 1
be popped out -> of : 2
popped out of -> it : 3
of it what -> is : 1
it what is -> it : 1
what is it -> will : 1
is it will -> be : 1
will be popped -> out : 1
of it this -> is : 1
it this is -> abbreviated : 1
this is abbreviated -> as : 1
is abbreviated as -> a : 1
abbreviated as a -> first : 1
as a first -> is : 1
a first is -> the : 1
first is the -> opposite : 1
is the opposite -> of : 1
the opposite of -> a : 1
opposite of a -> where : 1
of a where -> the : 1
a where the -> item : 1
where the item -> pushed : 1
the item pushed -> onto : 1
item pushed onto -> it : 1
pushed onto it -> is : 1
onto it is -> popped : 1
it is popped -> out : 1
is popped out -> of : 1
of it we -> just : 1
we just described -> the : 1
just described the -> behavior : 1
described the behavior -> of : 1
the behavior of -> this : 1
the behavior of -> in : 1
the behavior of -> only : 1
the behavior of -> with : 1
behavior of this -> how : 1
of this how -> that : 1
of this how -> else : 1
this how that -> adapter : 1
how that adapter -> is : 1
that adapter is -> as : 1
adapter is as -> it : 1
is as it -> does : 1
as it does -> not : 1
not only take -> fifo : 1
only take fifo -> characteristics : 1
take fifo characteristics -> into : 1
fifo characteristics into -> also : 1
characteristics into also -> mixes : 1
into also mixes -> it : 1
also mixes it -> with : 1
mixes it with -> this : 1
it with this -> means : 1
it with this -> it : 1
with this means -> that : 1
that the fifo -> principle : 1
the fifo principle -> is : 1
fifo principle is -> kind : 1
principle is kind -> of : 1
is kind of -> broken : 1
is kind of -> the : 1
is kind of -> similar : 1
is kind of -> an : 1
is kind of -> a : 1
kind of broken -> down : 1
of broken down -> into : 1
broken down into -> which : 1
broken down into -> from : 1
down into which -> are : 1
into which are -> ordered : 1
which are ordered -> by : 1
are ordered by -> the : 1
ordered by the -> priorities : 1
by the priorities -> their : 1
the priorities their -> items : 1
priorities their items -> to : 1
their items to -> do : 1
items to do -> this : 1
this we up -> a : 1
we up a -> cheap : 1
up a cheap -> list : 1
up a cheap -> dictionary : 1
a cheap list -> we : 1
cheap list we -> do : 1
list we do -> not : 1
do not parse -> user : 1
not parse user -> input : 1
parse user input -> in : 1
user input in -> order : 1
user input in -> this : 1
input in order -> to : 1
order to keep -> this : 1
order to keep -> the : 3
to keep this -> program : 1
keep this program -> short : 1
this program short -> and : 1
program short and -> concentrate : 1
short and concentrate -> on : 1
and concentrate on -> so : 1
and concentrate on -> the : 1
concentrate on so -> just : 1
on so just -> filling : 1
so just filling -> an : 1
just filling an -> unordered : 1
filling an unordered -> list : 1
an unordered list -> of : 1
unordered list of -> items : 2
list of items -> with : 1
list of items -> and : 1
of items with -> priorities : 1
of items with -> in : 1
of items with -> the : 1
items with priorities -> and : 1
with priorities and -> descriptions : 1
priorities and descriptions -> into : 1
and descriptions into -> a : 1
descriptions into a -> priority : 1
into a priority -> and : 1
a priority and -> then : 1
a priority and -> a : 1
priority and then -> read : 1
and then read -> them : 1
and then read -> an : 1
then read them -> out : 1
read them out -> like : 1
them out like -> from : 1
out like from -> a : 1
like from a -> data : 1
from a data -> but : 1
a data but -> grouped : 1
data but grouped -> priorities : 1
but grouped priorities -> of : 1
grouped priorities of -> the : 1
priorities of the -> individual : 1
of the individual -> need : 1
the individual need -> to : 1
individual need to -> include : 1
some headers is -> in : 1
headers is in -> the : 1
header file do -> we : 1
file do we -> store : 1
do we store -> items : 1
we store items -> in : 1
store items in -> the : 1
in the priority -> the : 1
the priority the -> thing : 1
priority the thing -> we : 1
the thing we -> cannot : 1
thing we cannot -> add : 1
we cannot add -> items : 1
cannot add items -> and : 1
add items and -> additionally : 1
items and additionally -> attach : 1
and additionally attach -> a : 1
additionally attach a -> priority : 1
attach a priority -> to : 1
a priority to -> the : 1
priority to the -> priority : 1
to the priority -> queue : 1
the priority queue -> will : 1
the priority queue -> with : 1
the priority queue -> tells : 1
the priority queue -> infer : 1
priority queue will -> try : 1
queue will try -> to : 1
will try to -> use : 1
will try to -> parse : 2
will try to -> implement : 1
will try to -> implicitly : 1
try to use -> the : 1
try to use -> at : 1
use the of -> all : 1
the of all -> items : 1
the of all -> the : 3
the of all -> and : 1
of all items -> in : 1
of all items -> up : 1
all items in -> the : 1
all items in -> a : 1
the we could -> now : 1
the we could -> implement : 1
the we could -> create : 1
we could now -> implement : 1
we could now -> use : 1
could now implement -> our : 1
now implement our -> own : 1
implement our own -> and : 1
implement our own -> iterator : 1
implement our own -> search : 1
implement our own -> prefix : 1
implement our own -> algorithm : 1
own and give -> it : 1
and give it -> a : 1
it a priority -> and : 1
priority and a -> string : 1
and a string -> and : 1
and a string -> length : 1
and a string -> a : 1
a string and -> then : 2
a string and -> instantiate : 1
a string and -> returns : 2
a string and -> creates : 1
a string and -> concatenates : 1
a string and -> a : 1
string and then -> implement : 1
string and then -> use : 1
and then implement -> the : 1
then implement the -> comparison : 1
implement the comparison -> operator : 1
the comparison operator -> in : 1
comparison operator in -> order : 1
to make them -> can : 1
to make them -> provide : 1
make them can -> just : 1
them can just -> take : 1
can just take -> which : 1
just take which -> enables : 1
take which enables -> us : 1
us to aggregate -> in : 1
to aggregate in -> one : 1
aggregate in one -> type : 1
in one type -> and : 1
one type and -> implements : 1
type and implements -> comparison : 1
and implements comparison -> for : 1
implements comparison for -> us : 1
comparison for us -> int : 1
for us int -> using : 1
us int using -> now : 1
int using now -> have : 1
using now have -> a : 1
now have a -> new : 1
now have a -> look : 2
have a new -> type : 1
a new type -> which : 1
a new type -> be : 1
new type which -> consists : 1
type which consists -> of : 1
consists of an -> integer : 1
consists of an -> additional : 1
of an integer -> a : 1
an integer a -> string : 1
integer a string -> instantiate : 1
a string instantiate -> a : 1
string instantiate a -> priority : 1
instantiate a priority -> which : 1
a priority which -> maintains : 1
priority which maintains -> such : 1
which maintains such -> will : 1
maintains such will -> the : 1
such will the -> priority : 1
will the priority -> queue : 1
priority queue with -> different : 1
queue with different -> items : 1
with different items -> which : 1
different items which -> have : 1
items which have -> different : 1
which have different -> the : 1
have different the -> goal : 1
different the goal -> is : 1
the goal is -> to : 1
goal is to -> provide : 1
is to provide -> an : 1
is to provide -> a : 1
to provide an -> and : 1
to provide an -> execution : 1
provide an and -> then : 1
and then the -> priority : 1
and then the -> cartesian : 1
and then the -> number : 1
and then the -> compressed : 1
and then the -> exponent : 1
and then the -> caller : 1
and then the -> next : 1
and then the -> other : 1
then the priority -> queue : 1
priority queue tells -> us : 1
queue tells us -> to : 1
tells us to -> do : 1
tells us to -> what : 1
us to do -> in : 1
to do in -> if : 1
to do in -> the : 1
do in if -> there : 1
in if there -> are : 1
if there are -> comics : 1
if there are -> two : 1
if there are -> parsing : 1
if there are -> instances : 1
if there are -> then : 1
if there are -> consumable : 1
if there are -> no : 2
if there are -> new : 1
if there are -> at : 1
there are comics -> to : 1
are comics to -> and : 1
comics to and -> homework : 1
to and homework -> to : 1
and homework to -> of : 1
homework to of -> the : 1
to of the -> homework : 1
to of the -> already : 1
of the homework -> must : 1
the homework must -> be : 1
homework must be -> done : 1
must be done -> has : 1
be done has -> no : 1
done has no -> which : 1
has no which -> accepts : 1
no which accepts -> the : 1
accepts the initializer -> which : 1
the initializer which -> we : 1
initializer which we -> can : 1
can use to -> fill : 1
can use to -> obtain : 1
can use to -> get : 1
use to fill -> the : 1
to fill the -> queue : 1
to fill the -> this : 1
to fill the -> vector : 1
fill the queue -> from : 1
the queue from -> the : 1
queue from the -> beginning : 1
the beginning a -> vector : 1
beginning a vector -> or : 1
vector or a -> normal : 1
vector or a -> list : 3
or a normal -> it : 1
a normal it -> would : 1
a normal it -> is : 1
normal it would -> have : 1
would have worked -> that : 1
have worked that -> so : 1
worked that so -> we : 1
that so we -> first : 1
that so we -> add : 1
so we first -> define : 1
define the insert -> it : 1
the insert it -> in : 1
insert it in -> the : 1
the next il -> can : 1
next il can -> now : 1
il can now -> comfortably : 1
can now comfortably -> iterate : 1
now comfortably iterate -> through : 1
comfortably iterate through -> the : 1
through the unordered -> list : 1
the unordered list -> of : 1
of items and -> insert : 1
items and insert -> them : 1
and insert them -> step : 1
and insert them -> into : 1
insert them step -> by : 1
them step by -> step : 1
step by step -> using : 1
step by step -> from : 1
by step using -> the : 1
step using the -> for : 1
using the for -> auto : 1
for auto items -> are : 1
auto items are -> implicitly : 1
items are implicitly -> and : 1
are implicitly and -> therefore : 1
implicitly and therefore -> we : 1
and therefore we -> have : 1
therefore we have -> a : 1
have a gives -> us : 1
a gives us -> out : 1
gives us out -> items : 1
us out items -> with : 1
out items with -> the : 1
the highest compile -> and : 1
highest compile and -> run : 1
run our it -> tells : 1
our it tells -> to : 1
it tells to -> do : 1
tells to do -> our : 1
to do our -> homework : 1
do our homework -> and : 1
our homework and -> after : 1
homework and after -> washing : 1
and after washing -> the : 1
after washing the -> we : 1
washing the we -> can : 1
can finally watch -> tv : 1
finally watch tv -> and : 1
watch tv and -> read : 1
tv and read -> do : 1
and read do -> homework : 1
read do homework -> dishes : 1
do homework dishes -> watch : 1
homework dishes watch -> tv : 1
dishes watch tv -> read : 1
watch tv read -> it : 1
tv read it -> list : 1
read it list -> is : 1
it list is -> very : 1
list is very -> easy : 1
easy to we -> have : 1
easy to we -> examine : 1
to we have -> only : 1
to we have -> two : 1
to we have -> to : 1
we have only -> used : 1
we have only -> a : 1
have only used -> three : 1
only used three -> pushes : 1
used three pushes -> an : 1
three pushes an -> item : 1
pushes an item -> into : 1
an item into -> the : 1
item into the -> returns : 1
into the returns -> a : 1
the returns a -> reference : 1
the returns a -> new : 1
item which is -> coming : 1
which is coming -> out : 1
is coming out -> of : 1
coming out of -> the : 1
of the queue -> the : 1
the queue the -> frontmost : 1
queue the frontmost -> item : 1
the frontmost item -> in : 1
frontmost item in -> the : 1
in the how -> did : 1
the how did -> the : 1
how did the -> item : 1
how did the -> priority : 1
did the item -> ordering : 1
the item ordering -> we : 1
item ordering we -> grouped : 1
ordering we grouped -> a : 1
we grouped a -> priority : 1
grouped a priority -> integer : 1
a priority integer -> and : 1
priority integer and -> a : 1
integer and a -> item : 1
and a item -> description : 1
a item description -> string : 1
item description string -> into : 1
description string into -> an : 1
an and got -> automatic : 1
and got automatic -> if : 1
got automatic if -> we : 1
automatic if we -> have : 1
if we have -> an : 1
if we have -> such : 1
if we have -> to : 3
if we have -> a : 11
if we have -> and : 1
if we have -> too : 1
have an instance -> we : 1
an instance we -> can : 1
instance we can -> write : 1
we can write -> to : 2
we can write -> x : 1
we can write -> or : 1
we can write -> which : 1
can write to -> access : 1
can write to -> construct : 1
write to access -> the : 1
access the and -> to : 1
the and to -> access : 1
the and to -> see : 1
the and to -> boolean : 1
and to access -> the : 1
access the we -> did : 1
the we did -> that : 2
we did that -> in : 2
did that in -> the : 2
that in the -> loop : 1
that in the -> where : 1
that in the -> string : 1
that in the -> input : 1
that in the -> opposite : 1
the loop which -> prints : 1
loop which prints -> out : 1
which prints out -> all : 1
prints out all -> how : 1
out all how -> did : 1
all how did -> the : 1
did the priority -> queue : 1
priority queue infer -> that : 1
queue infer that -> is : 1
infer that is -> than : 1
that is than -> without : 1
is than without -> us : 1
than without us -> telling : 1
without us telling -> it : 1
us telling it -> to : 1
telling it to -> compare : 1
it to compare -> the : 1
to compare the -> numeric : 1
to compare the -> frontmost : 1
compare the numeric -> comparison : 1
the numeric comparison -> operator : 1
numeric comparison operator -> handles : 1
comparison operator handles -> different : 1
operator handles different -> assume : 1
handles different assume -> we : 1
different assume we -> compare : 1
assume we compare -> and : 1
we compare and -> are : 1
compare and are -> then : 1
and are then -> it : 1
and are then -> just : 1
are then it -> returns : 1
then it returns -> then : 1
then it returns -> we : 1
then it returns -> a : 1
it returns then -> it : 1
returns then it -> returns : 1
it returns we -> can : 1
it returns we -> may : 1
we can order -> the : 1
can order the -> items : 1
order the items -> as : 1
order the items -> in : 1
the items as -> we : 1
items as we -> the : 1
items as we -> have : 1
as we the -> only : 1
as we the -> first : 1
we the only -> important : 1
the only important -> thing : 3
only important thing -> is : 3
important thing is -> that : 3
that the priority -> is : 1
the priority is -> the : 1
priority is the -> member : 1
is the member -> of : 2
the member of -> the : 2
member of the -> and : 1
member of the -> would : 1
member of the -> shared : 1
and the description -> is : 1
the description is -> the : 1
the description is -> surrounded : 2
description is the -> member : 1
of the would -> order : 1
the would order -> the : 1
would order the -> items : 1
items in a -> way : 2
items in a -> directory : 1
a way where -> it : 1
a way where -> at : 1
way where it -> looks : 1
where it looks -> like : 1
it looks like -> the : 1
like the alphabetic -> order : 1
the alphabetic order -> of : 1
alphabetic order of -> the : 1
the items is -> more : 1
items is more -> important : 1
is more important -> than : 2
more important than -> their : 1
more important than -> the : 1
important than their -> that : 1
than their that -> be : 1
their that be -> suggested : 1
that be suggested -> as : 1
be suggested as -> the : 1
suggested as the -> thing : 1
as the thing -> to : 1
the thing to -> and : 1
thing to and -> time : 1
to and time -> that : 1
and time that -> would : 1
time that would -> at : 1
that would at -> least : 1
would at least -> be : 1
at least be -> great : 1
least be great -> for : 1
be great for -> those : 1
great for those -> of : 1
for those of -> us : 1
those of us -> who : 1
of us who -> are : 1
us who are -> cover : 1
who are cover -> the : 1
are cover the -> following : 1
in this your -> own : 1
this your own -> iterable : 2
iterator iterator wrappers -> to : 1
iterator wrappers to -> fill : 1
wrappers to fill -> generic : 1
to fill generic -> data : 1
ranges with iterator -> checking : 1
with iterator checking -> iterator : 1
iterator checking iterator -> code : 1
zip iterator are -> an : 1
iterator are an -> important : 1
are an important -> in : 1
an important in -> the : 1
important in the -> stl : 1
in the stl -> aims : 1
in the stl -> we : 1
in the stl -> since : 1
in the stl -> as : 1
in the stl -> documentation : 1
the stl aims -> to : 1
stl aims to -> be : 1
aims to be -> as : 1
to be as -> flexible : 1
to be as -> the : 1
to be as -> one : 1
to be as -> a : 1
be as flexible -> and : 1
as flexible and -> generic : 1
flexible and generic -> as : 1
and generic as -> and : 1
and generic as -> in : 1
generic as and -> iterators : 1
as and iterators -> are : 1
and iterators are -> a : 1
iterators are a -> great : 1
are a great -> help : 1
are a great -> in : 1
a great help -> in : 1
a great help -> to : 1
a great help -> it : 1
help in that -> they : 1
in that they -> are : 1
they are sometimes -> a : 1
they are sometimes -> called : 1
are sometimes a -> bit : 1
sometimes a bit -> tedious : 1
a bit tedious -> to : 1
bit tedious to -> which : 1
tedious to which -> is : 1
to which is -> why : 1
to which is -> riddled : 1
to which is -> the : 1
which is why -> many : 1
which is why -> we : 3
which is why -> it : 3
is why many -> novices : 1
why many novices -> them : 1
many novices them -> and : 1
novices them and -> fall : 1
them and fall -> back : 1
and fall back -> to : 2
to a programmer -> who : 1
a programmer who -> avoids : 1
programmer who avoids -> iterators : 1
who avoids iterators -> basically : 1
avoids iterators basically -> waives : 1
iterators basically waives -> the : 1
basically waives the -> potential : 1
waives the potential -> of : 1
the potential of -> the : 1
the potential of -> relieving : 1
potential of the -> chapter : 1
of the chapter -> deals : 1
the chapter deals -> with : 1
chapter deals with -> iterators : 1
deals with iterators -> and : 1
with iterators and -> quickly : 1
iterators and quickly -> casts : 1
and quickly casts -> some : 1
quickly casts some -> light : 1
casts some light -> on : 1
some light on -> how : 1
light on how -> quick : 1
on how quick -> introduction : 1
how quick introduction -> is : 1
quick introduction is -> probably : 1
introduction is probably -> not : 1
is probably not -> but : 1
probably not but -> the : 1
not but the -> are : 1
not but the -> underlying : 1
but the are -> really : 1
the are really -> here : 1
are really here -> to : 1
really here to -> give : 1
here to give -> a : 1
to give a -> good : 1
to give a -> feeling : 1
give a good -> feeling : 1
a good feeling -> for : 1
good feeling for -> iterator : 1
feeling for iterator -> but : 1
for iterator but -> in : 1
iterator but in -> one : 1
but in one -> or : 1
in one or -> the : 2
one or the -> other : 2
or the other -> contain : 1
or the other -> this : 1
or the other -> parameters : 1
or the other -> way : 1
the other contain -> a : 1
other contain a -> of : 1
contain a of -> data : 1
a of data -> a : 1
of data a -> lot : 1
data a lot -> of : 2
lot of tasks -> that : 1
lot of tasks -> are : 1
of tasks that -> process : 1
tasks that process -> a : 1
that process a -> lot : 1
process a lot -> of : 1
lot of data -> items : 1
of data items -> do : 1
data items do -> not : 1
items do not -> care : 1
do not care -> how : 1
do not care -> about : 2
do not care -> too : 1
not care how -> to : 1
care how to -> get : 1
how to get -> at : 1
get at that -> if : 1
at that if -> we : 1
we for an -> array : 1
for an array -> of : 1
an array of -> integers : 1
array of integers -> and : 1
integers and a -> of : 1
and a of -> integers : 1
a of integers -> and : 1
integers and want -> to : 1
and want to -> calculate : 1
and want to -> save : 1
and want to -> transform : 1
and want to -> access : 1
want to calculate -> the : 2
to calculate the -> of : 1
to calculate the -> in : 1
to calculate the -> a : 1
to calculate the -> error : 2
to calculate the -> difference : 1
to calculate the -> result : 1
calculate the of -> all : 1
calculate the of -> two : 1
calculate the of -> each : 1
items of both -> the : 1
of both the -> we : 2
of both the -> containers : 1
of both the -> iterators : 1
of both the -> lists : 1
of both the -> function : 1
both the we -> would : 1
both the we -> could : 1
the we would -> end : 1
we would end -> up : 2
would end up -> with : 1
would end up -> fibonacci : 1
end up with -> two : 1
end up with -> a : 2
end up with -> to : 1
end up with -> code : 1
end up with -> values : 1
end up with -> callable : 1
up with two -> different : 1
with two different -> which : 1
two different which -> could : 1
different which could -> look : 1
which could look -> like : 1
could look like -> the : 3
could look like -> hi : 1
look like the -> which : 1
look like the -> a : 1
look like the -> int : 1
look like the -> u : 1
look like the -> string : 1
like the which -> deals : 1
the which deals -> with : 2
which deals with -> the : 2
which deals with -> exactly : 1
deals with the -> array : 1
deals with the -> linked : 1
deals with the -> memory : 1
with the array -> by : 1
the array by -> checking : 1
array by checking -> its : 1
by checking its -> size : 1
checking its size -> and : 1
its size and -> summing : 1
size and summing -> it : 1
and summing it -> up : 1
summing it up -> as : 1
it up as -> int : 1
up as int -> sum : 1
as int sum -> for : 1
int sum for -> i : 2
sum for i -> i : 4
sum for i -> sum : 2
i i sum -> which : 1
i i sum -> sum : 1
i i sum -> from : 1
i i sum -> if : 1
i sum which -> deals : 1
sum which deals -> with : 1
with the linked -> list : 1
the linked list -> by : 1
linked list by -> iterating : 1
list by iterating -> until : 1
by iterating until -> it : 1
iterating until it -> reaches : 1
until it reaches -> its : 1
it reaches its -> int : 1
reaches its int -> sum : 1
its int sum -> while : 1
int sum while -> sum : 1
sum while sum -> of : 1
while sum of -> them : 1
sum of them -> are : 1
of them are -> about : 1
of them are -> indeed : 1
of them are -> too : 1
them are about -> up : 1
are about up -> but : 1
about up but -> how : 1
up but how -> large : 1
but how large -> is : 1
how large is -> the : 1
large is the -> percentage : 1
is the percentage -> of : 1
the percentage of -> characters : 1
percentage of characters -> that : 1
of characters that -> we : 1
of characters that -> should : 1
characters that we -> which : 1
that we which -> is : 1
we which is -> directly : 1
we which is -> exactly : 1
which is directly -> related : 1
is directly related -> to : 1
directly related to -> the : 1
related to the -> up : 1
related to the -> from : 1
to the up -> and : 1
the up and -> does : 1
up and does -> one : 1
and does one -> of : 1
does one of -> them : 1
one of them -> work : 1
one of them -> is : 1
one of them -> using : 1
one of them -> fails : 1
one of them -> from : 1
of them work -> with : 1
them work with -> a : 1
work with a -> third : 1
with a third -> kind : 1
with a third -> iterator : 1
a third kind -> of : 1
third kind of -> data : 1
kind of data -> say : 1
kind of data -> structure : 1
of data say -> or : 1
data say or -> do : 1
say or do -> we : 1
or do we -> have : 1
do we have -> to : 1
have to implement -> another : 1
have to implement -> a : 3
have to implement -> it : 1
to implement another -> version : 1
implement another version -> of : 1
another version of -> without : 1
version of without -> this : 1
of without this -> would : 1
without this would -> lead : 1
this would lead -> us : 1
this would lead -> to : 2
would lead us -> into : 1
lead us into -> ridiculous : 1
us into ridiculous -> with : 1
into ridiculous with -> the : 1
ridiculous with the -> help : 1
with the help -> of : 1
the help of -> iterators : 1
help of iterators -> is : 1
of iterators is -> it : 1
iterators is it -> possible : 1
is it possible -> to : 1
it possible to -> implement : 1
possible to implement -> this : 1
to implement this -> in : 1
to implement this -> it : 1
implement this in -> a : 1
implement this in -> the : 1
a generic sum -> for : 1
generic sum for -> i : 1
for i sum -> pretty : 1
for i sum -> cout : 1
i sum pretty -> and : 1
sum pretty and -> loop : 1
pretty and loop -> has : 1
and loop has -> been : 1
loop has been -> in : 1
has been in -> it : 1
been in it -> is : 1
just a syntax -> which : 1
a syntax which -> expands : 1
syntax which expands -> to : 1
which expands to -> to : 1
expands to to -> the : 1
to to the -> following : 1
to to the -> data : 1
to to the -> management : 1
to to the -> same : 1
the following auto -> auto : 1
following auto auto -> auto : 1
auto auto for -> int : 1
auto auto for -> auto : 3
auto for int -> i : 1
for int i -> sum : 1
int i sum -> is : 1
i sum is -> an : 1
sum is an -> old : 1
is an old -> hat : 1
an old hat -> for : 1
old hat for -> everyone : 1
hat for everyone -> who : 1
for everyone who -> has : 1
for everyone who -> imagine : 1
for everyone who -> does : 1
everyone who has -> worked : 1
who has worked -> with : 1
has worked with -> iterators : 1
worked with iterators -> looks : 1
with iterators looks -> completely : 1
iterators looks completely -> magic : 1
looks completely magic -> for : 1
completely magic for -> everyone : 1
magic for everyone -> who : 1
everyone who imagine -> our : 1
who imagine our -> vector : 1
imagine our vector -> of : 1
of integers looks -> like : 1
integers looks like -> the : 1
like the is -> the : 1
the is the -> same : 1
the is the -> name : 1
same as and -> returns : 2
and returns us -> an : 1
and returns us -> a : 1
and returns us -> the : 1
us an iterator -> that : 1
us an iterator -> pointing : 1
us an iterator -> to : 1
an iterator that -> points : 2
an iterator that -> just : 1
an iterator that -> is : 1
an iterator that -> generates : 1
iterator that points -> to : 1
iterator that points -> at : 1
that points to -> the : 3
first item is -> the : 1
that points at -> one : 1
points at one -> item : 1
at one item -> the : 1
one item the -> item : 1
item the item -> the : 1
item the every -> the : 1
the every the -> loop : 1
every the loop -> checks : 1
the loop checks -> if : 1
loop checks if -> the : 1
checks if the -> begin : 1
if the begin -> iterator : 1
the begin iterator -> is : 1
the begin iterator -> and : 1
the begin iterator -> has : 1
the begin iterator -> of : 2
begin iterator is -> to : 1
iterator is to -> the : 1
is to the -> end : 1
is to the -> actual : 1
the end if -> it : 1
the end if -> they : 1
end if it -> will : 1
if it will -> the : 1
it will the -> begin : 1
it will the -> until : 1
will the begin -> iterator : 1
begin iterator and -> thus : 1
iterator and thus -> access : 1
and thus access -> the : 1
thus access the -> integer : 1
access the integer -> value : 1
the integer value -> it : 1
integer value it -> points : 1
value it points -> it : 1
it points it -> the : 1
points it the -> repeats : 1
it the repeats -> the : 1
the repeats the -> comparison : 1
repeats the comparison -> against : 1
the comparison against -> the : 1
comparison against the -> end : 1
against the end -> and : 1
against the end -> if : 1
against the end -> iterator : 1
the end and -> so : 1
end and so -> in : 1
so in that -> it : 1
that it helps -> to : 1
it helps to -> read : 1
it helps to -> be : 1
helps to read -> the : 1
read the loop -> code : 1
the loop code -> imagining : 1
loop code imagining -> that : 1
code imagining that -> the : 1
imagining that the -> iterators : 1
that the iterators -> are : 1
the iterators are -> plain : 1
iterators are plain -> in : 1
are plain in -> plain : 1
plain in plain -> pointers : 1
in plain pointers -> are : 1
plain pointers are -> also : 1
pointers are also -> a : 1
are also a -> valid : 1
are also a -> lot : 1
also a valid -> kind : 1
a valid kind -> of : 1
valid kind of -> are : 1
kind of are -> multiple : 1
of are multiple -> categories : 1
are multiple categories -> of : 1
multiple categories of -> and : 1
categories of and -> they : 1
of and they -> have : 1
of and they -> are : 1
and they have -> different : 1
they have different -> they : 1
have different they -> are : 1
different they are -> not : 1
they are not -> too : 1
they are not -> persistently : 1
they are not -> and : 1
they are not -> a : 1
they are not -> deleted : 1
they are not -> even : 1
are not too -> hard : 1
not too hard -> to : 1
too hard to -> just : 1
hard to just -> remember : 1
to just remember -> that : 1
just remember that -> the : 1
remember that the -> capabilities : 1
that the capabilities -> one : 1
the capabilities one -> category : 1
capabilities one category -> requires : 1
one category requires -> are : 1
category requires are -> inherited : 1
requires are inherited -> from : 1
are inherited from -> the : 1
inherited from the -> next : 1
from the next -> powerful : 1
from the next -> specialization : 1
the next powerful -> the : 1
next powerful the -> whole : 1
powerful the whole -> point : 1
the whole point -> of : 1
whole point of -> iterator : 1
point of iterator -> categories : 1
of iterator categories -> is : 1
iterator categories is -> that : 1
categories is that -> if : 1
is that if -> an : 1
is that if -> the : 1
is that if -> there : 1
if an algorithm -> knows : 1
if an algorithm -> depends : 1
an algorithm knows -> what : 1
algorithm knows what -> kind : 1
knows what kind -> of : 1
kind of iterator -> it : 1
kind of iterator -> and : 1
of iterator it -> is : 1
iterator it is -> dealing : 1
iterator it is -> valuable : 1
iterator it is -> implemented : 1
it is dealing -> it : 1
is dealing it -> can : 1
dealing it can -> be : 1
be implemented in -> an : 1
be implemented in -> a : 1
implemented in an -> optimized : 1
in an optimized -> this : 1
an optimized this -> the : 1
optimized this the -> programmer : 1
this the programmer -> can : 1
the programmer can -> lean : 1
programmer can lean -> back : 1
can lean back -> and : 1
lean back and -> express : 1
back and express -> his : 1
and express his -> while : 1
express his while -> can : 1
his while can -> choose : 1
while can choose -> the : 1
can choose the -> given : 1
choose the given -> go : 1
the given go -> through : 1
given go through -> them : 1
go through them -> in : 1
through them in -> the : 1
them in the -> right : 1
them in the -> second : 1
them in the -> transformation : 1
them in the -> program : 1
in the right -> iterators : 1
in the right -> order : 1
the right iterators -> can : 1
right iterators can -> be : 1
iterators can be -> dereferenced : 1
can be dereferenced -> only : 1
be dereferenced only -> for : 1
dereferenced only for -> the : 1
for the values -> they : 1
the values they -> point : 1
values they point -> once : 1
they point once -> they : 1
point once they -> are : 1
once they are -> the : 1
once they are -> so : 1
they are the -> last : 1
they are the -> compiler : 1
they are the -> vectors : 1
are the last -> value : 1
the last value -> they : 1
last value they -> pointed : 1
value they pointed -> to : 1
they pointed to -> has : 1
pointed to has -> been : 1
to has been -> during : 1
has been during -> the : 1
been during the -> this : 1
during the this -> means : 1
the this means -> that : 3
possible to iterate -> over : 2
to iterate over -> such : 1
to iterate over -> your : 1
to iterate over -> data : 1
to iterate over -> a : 2
to iterate over -> range : 1
to iterate over -> the : 2
to iterate over -> that : 1
to iterate over -> an : 1
to iterate over -> all : 2
iterate over such -> a : 1
iterate over such -> class : 1
over such a -> range : 1
such a range -> multiple : 1
a range multiple -> is : 1
range multiple is -> an : 1
multiple is an -> example : 1
is an example -> for : 1
an example for -> this : 1
an example for -> which : 1
example for this -> iterators : 1
example for this -> is : 1
for this iterators -> are : 1
this iterators are -> the : 1
iterators are the -> same : 1
iterators are the -> following : 1
are the same -> as : 1
same as input -> but : 1
as input but -> they : 1
input but they -> differ : 1
but they differ -> in : 1
they differ in -> that : 1
differ in that -> regard : 1
in that regard -> that : 1
in that regard -> when : 1
that regard that -> the : 1
regard that the -> ranges : 1
that the ranges -> they : 1
that the ranges -> are : 1
the ranges they -> represent : 1
ranges they represent -> can : 1
they represent can -> be : 1
represent can be -> iterated : 1
can be iterated -> over : 2
be iterated over -> multiple : 1
be iterated over -> not : 1
be iterated over -> as : 1
iterated over multiple -> are : 1
over multiple are -> an : 1
multiple are an -> example : 1
are an example -> such : 1
an example such -> a : 1
example such a -> list : 1
such a list -> can : 1
a list can -> only : 1
list can only -> be : 1
only be iterated -> over : 1
iterated over not -> but : 1
over not but -> it : 1
not but it -> can : 1
not but it -> was : 1
iterated over as -> often : 1
over as often -> as : 1
as often as -> we : 2
as often as -> the : 1
as often as -> possible : 1
as often as -> it : 1
often as we -> like : 1
often as we -> and : 1
as we like -> bidirectional : 1
we like bidirectional -> as : 1
like bidirectional as -> the : 1
bidirectional as the -> name : 1
the name can -> be : 1
name can be -> incremented : 1
can be incremented -> and : 1
be incremented and -> in : 1
be incremented and -> used : 1
incremented and in -> order : 1
order to iterate -> forward : 1
order to iterate -> over : 1
order to iterate -> its : 1
to iterate forward -> the : 1
iterate forward the -> iterators : 1
forward the iterators -> and : 1
the iterators and -> for : 1
the iterators and -> mark : 1
iterators and for -> support : 1
and for support -> access : 1
for support access -> access : 1
support access access -> iterators : 1
access access iterators -> allow : 1
access iterators allow -> jumping : 1
iterators allow jumping -> over : 1
allow jumping over -> multiple : 1
jumping over multiple -> values : 1
over multiple values -> at : 1
multiple values at -> instead : 1
values at instead -> of : 1
at instead of -> this : 1
instead of this -> is : 2
is the case -> for : 1
the case for -> iterators : 1
case for iterators -> of : 1
for iterators of -> and : 1
iterators of and -> category : 1
iterators of and -> another : 1
of and category -> specifies : 1
and category specifies -> all : 1
category specifies all -> of : 1
specifies all of -> the : 1
of the aforementioned -> plus : 1
the aforementioned plus -> the : 1
aforementioned plus the -> requirement : 1
plus the requirement -> that : 1
the requirement that -> the : 1
requirement that the -> data : 1
that the data -> that : 1
the data that -> is : 1
data that is -> being : 1
that is being -> iterated : 1
is being iterated -> through : 1
being iterated through -> lies : 1
iterated through lies -> in : 1
through lies in -> contiguous : 1
lies in contiguous -> like : 1
in contiguous like -> it : 1
contiguous like it -> does : 1
like it does -> in : 1
it does in -> an : 1
does in an -> or : 1
in an or -> iterators : 1
an or iterators -> are : 1
or iterators are -> detached : 1
iterators are detached -> from : 1
are detached from -> the : 1
detached from the -> other : 1
from the other -> this : 1
from the other -> recipes : 1
from the other -> recipe : 2
from the other -> then : 1
from the other -> helper : 1
other this is -> because : 1
is because an -> iterator : 1
because an iterator -> can : 1
an iterator can -> be : 2
iterator can be -> a : 1
iterator can be -> wrapped : 1
iterator can be -> reused : 1
can be a -> pure : 1
can be a -> little : 1
can be a -> string : 1
can be a -> lot : 1
be a pure -> output : 1
a pure output -> which : 1
pure output which -> can : 1
output which can -> only : 1
which can only -> be : 1
only be incremented -> and : 1
incremented and used -> to : 1
and used to -> to : 1
used to to -> the : 1
to the data -> it : 1
to the data -> in : 1
to the data -> underlying : 1
the data it -> points : 1
data it points -> if : 1
it points if -> they : 1
points if they -> are : 1
they are being -> read : 1
they are being -> used : 1
they are being -> it : 1
are being read -> the : 1
being read the -> value : 1
read the value -> will : 1
the value will -> be : 1
value will be -> an : 1
will be an -> iterator : 1
be an iterator -> is : 1
an iterator is -> an : 1
an iterator is -> valid : 1
an iterator is -> usually : 1
iterator is an -> output : 1
is an output -> iterator : 2
an output iterator -> and : 1
an output iterator -> the : 1
an output iterator -> because : 1
an output iterator -> which : 1
output iterator and -> one : 1
iterator and one -> of : 1
iterator and one -> the : 1
and one of -> the : 1
the other categories -> at : 1
other categories at -> the : 1
categories at the -> same : 1
same it is -> a : 1
same it is -> possible : 1
same it is -> indeed : 1
is a mutable -> it : 1
a mutable it -> can : 1
mutable it can -> be : 1
can be read -> from : 1
be read from -> and : 1
read from and -> written : 1
from and written -> if : 1
and written if -> we : 1
written if we -> obtain : 1
if we obtain -> an : 1
we obtain an -> iterator : 1
obtain an iterator -> from : 1
an iterator from -> a : 1
iterator from a -> container : 1
from a container -> it : 1
a container it -> will : 1
container it will -> usually : 1
it will usually -> be : 1
will usually be -> of : 1
usually be of -> this : 1
be of this -> your : 1
of this your -> own : 1
own iterable already -> realized : 1
iterable already realized -> that : 1
already realized that -> iterators : 1
realized that iterators -> kind : 1
that iterators kind -> the : 1
iterators kind the -> iterations : 1
kind the iterations -> over : 1
the iterations over -> containers : 1
iterations over containers -> of : 1
over containers of -> all : 1
containers of all -> we : 1
of all we -> just : 1
all we just -> need : 1
implement the prefix -> increment : 1
the prefix increment -> the : 1
the prefix increment -> operator : 1
prefix increment the -> dereference : 1
increment the dereference -> and : 1
the dereference and -> the : 1
dereference and the -> object : 1
and the object -> comparison : 1
and the object -> is : 1
the object comparison -> and : 1
object comparison and -> then : 1
comparison and then -> we : 1
comparison and then -> performs : 1
then we already -> have : 1
we already have -> a : 1
already have a -> primitive : 1
have a primitive -> iterator : 1
a primitive iterator -> that : 1
primitive iterator that -> fits : 1
iterator that fits -> into : 1
that fits into -> the : 2
fits into the -> fancy : 1
fits into the -> terminal : 1
into the fancy -> order : 1
the fancy order -> to : 1
fancy order to -> get : 1
to get used -> to : 1
get used to -> this : 1
used to this -> a : 1
to this a -> bit : 1
this a bit -> this : 1
this a bit -> have : 1
a bit this -> recipe : 1
bit this recipe -> shows : 1
this recipe shows -> how : 1
recipe shows how -> to : 1
to implement an -> iterator : 1
to implement an -> interface : 1
implement an iterator -> that : 1
iterator that just -> emits : 1
that just emits -> a : 1
just emits a -> range : 1
emits a range -> of : 1
a range of -> numbers : 1
a range of -> observer : 1
a range of -> values : 1
a range of -> numeric : 1
a range of -> for : 1
a range of -> characters : 1
a range of -> city : 1
a range of -> items : 1
a range of -> this : 1
a range of -> input : 1
a range of -> replacement : 1
range of numbers -> when : 1
of numbers when -> iterating : 1
numbers when iterating -> through : 1
when iterating through -> it : 1
iterating through it -> is : 1
through it is -> not : 1
is not backed -> by : 1
not backed by -> any : 1
backed by any -> container : 1
by any container -> structure : 1
any container structure -> or : 1
container structure or -> anything : 1
structure or anything -> the : 1
or anything the -> numbers : 1
anything the numbers -> are : 1
the numbers are -> generated : 1
the numbers are -> which : 1
the numbers are -> and : 1
the numbers are -> it : 1
numbers are generated -> ad : 1
are generated ad -> hoc : 1
generated ad hoc -> while : 1
ad hoc while -> to : 1
hoc while to -> do : 1
while to do -> this : 1
will implement our -> own : 2
our own iterator -> and : 1
own iterator and -> we : 1
iterator and we -> will : 1
and we will -> iterate : 1
and we will -> evaluate : 1
and we will -> try : 1
and we will -> later : 1
and we will -> also : 1
and we will -> play : 1
and we will -> manage : 1
and we will -> get : 1
we will iterate -> through : 1
will iterate through -> we : 1
will iterate through -> both : 1
will iterate through -> the : 1
iterate through we -> include : 1
through we include -> the : 1
we include the -> which : 1
we include the -> necessary : 2
include the which -> enables : 1
us to print -> to : 1
to print to -> the : 2
print to the -> iterator : 1
print to the -> then : 1
print to the -> it : 1
print to the -> so : 1
print to the -> terminal : 1
the iterator class -> will : 1
iterator class will -> be : 1
class will be -> called : 1
will be called -> class : 1
be called class -> only : 1
called class only -> data : 1
class only data -> member : 1
only data member -> is : 1
data member is -> an : 1
member is an -> that : 1
is an that -> integer : 1
an that integer -> is : 1
that integer is -> used : 1
integer is used -> for : 1
is used for -> the : 1
is used for -> nothing : 1
used for the -> constructor : 1
for the constructor -> is : 1
for the constructor -> of : 1
constructor is for -> initializing : 1
is for initializing -> it : 1
for initializing it -> a : 1
initializing it a -> good : 1
it a good -> form : 1
a good form -> to : 1
good form to -> make : 1
form to make -> constructors : 1
to make constructors -> which : 1
make constructors which -> create : 1
constructors which create -> a : 1
which create a -> type : 1
create a type -> from : 1
a type from -> another : 1
type from another -> type : 1
from another type -> to : 1
another type to -> avoid : 1
type to avoid -> implicit : 1
to avoid implicit -> note : 1
avoid implicit note -> that : 1
implicit note that -> we : 1
note that we -> also : 1
note that we -> provide : 1
note that we -> use : 1
note that we -> initialize : 1
note that we -> are : 1
note that we -> do : 1
note that we -> need : 1
that we also -> provide : 1
we also provide -> a : 1
also provide a -> default : 1
provide a default -> value : 1
a default value -> for : 1
a default value -> if : 1
default value for -> this : 1
value for this -> makes : 1
for this makes -> the : 1
makes the instances -> of : 1
the instances of -> although : 1
the instances of -> for : 1
instances of although -> we : 1
of although we -> will : 1
although we will -> not : 1
we will not -> use : 1
we will not -> completely : 1
we will not -> be : 1
we will not -> find : 1
will not use -> the : 1
not use the -> default : 1
not use the -> so : 1
not use the -> character : 1
use the default -> constructor : 1
the default constructor -> in : 1
default constructor in -> the : 1
constructor in the -> whole : 1
constructor in the -> recipe : 1
the whole this -> is : 1
whole this is -> really : 1
this is really -> important : 1
this is really -> we : 1
is really important -> because : 1
is really important -> to : 1
really important because -> some : 1
important because some -> stl : 1
because some stl -> algorithms : 1
some stl algorithms -> depend : 1
stl algorithms depend -> on : 1
algorithms depend on -> iterators : 1
depend on iterators -> being : 1
on iterators being -> int : 1
iterators being int -> explicit : 1
being int explicit -> position : 1
int explicit position -> dereferencing : 1
int explicit position -> int : 1
explicit position dereferencing -> our : 1
position dereferencing our -> iterator : 1
dereferencing our iterator -> it : 2
our iterator it -> will : 2
iterator it will -> emit : 1
iterator it will -> just : 1
iterator it will -> move : 1
it will emit -> an : 1
it will emit -> plain : 1
will emit an -> int : 1
emit an int -> const : 1
an int const -> return : 1
int const return -> the : 1
int const return -> return : 1
int const return -> const : 1
const return the -> iterator : 2
const return the -> zip : 1
return the iterator -> will : 1
return the iterator -> just : 1
the iterator will -> just : 1
iterator will just -> increment : 1
will just increment -> its : 1
just increment its -> internal : 1
increment its internal -> return : 1
increment its internal -> reference : 1
its internal return -> loop : 1
internal return loop -> will : 1
return loop will -> compare : 1
loop will compare -> the : 1
will compare the -> iterator : 1
compare the iterator -> against : 1
the iterator against -> the : 1
iterator against the -> end : 1
end if they -> are : 1
they are it -> will : 1
are it will -> continue : 1
it will continue -> bool : 1
will continue bool -> const : 1
continue bool const -> return : 1
bool const return -> i : 3
bool const return -> class : 1
bool const return -> s : 1
bool const return -> equality : 1
bool const return -> the : 1
const return i -> was : 1
const return i -> bool : 1
const return i -> order : 1
const return i -> fourier : 1
return i was -> the : 1
i was the -> iterator : 1
was the iterator -> we : 2
the iterator we -> still : 1
the iterator we -> need : 1
the iterator we -> just : 1
iterator we still -> need : 1
still need an -> intermediate : 1
need an intermediate -> object : 1
an intermediate object -> for : 1
intermediate object for -> writing : 1
object for writing -> i : 1
for writing i -> which : 1
writing i which -> then : 1
i which then -> contains : 1
which then contains -> the : 1
then contains the -> begin : 1
contains the begin -> and : 1
the begin and -> end : 6
begin and end -> which : 1
begin and end -> iterator : 2
begin and end -> positions : 1
begin and end -> iterators : 3
begin and end -> class : 1
begin and end -> pointers : 1
begin and end -> part : 1
and end which -> is : 1
end which is -> preprogrammed : 1
which is preprogrammed -> to : 1
is preprogrammed to -> iterate : 1
preprogrammed to iterate -> from : 1
to iterate from -> to : 2
iterate from to -> we : 1
iterate from to -> is : 1
from to we -> call : 1
from to we -> them : 1
to we call -> it : 1
to we call -> a : 1
we call it -> class : 1
we call it -> and : 1
we call it -> increments : 1
we call it -> systematically : 1
we call it -> with : 1
we call it -> naively : 1
we call it -> this : 1
we call it -> on : 1
call it class -> contains : 1
it class contains -> two : 1
class contains two -> integer : 1
contains two integer -> which : 1
two integer which -> denote : 1
integer which denote -> at : 1
which denote at -> which : 1
denote at which -> number : 1
at which number -> the : 1
which number the -> iteration : 1
number the iteration -> shall : 1
the iteration shall -> and : 1
iteration shall and -> which : 1
shall and which -> number : 1
and which number -> is : 1
which number is -> the : 1
number is the -> first : 1
is the first -> number : 1
is the first -> not : 1
is the first -> one : 2
the first number -> past : 1
first number past -> the : 1
number past the -> last : 1
past the last -> this : 1
the last this -> means : 1
last this means -> if : 1
this means if -> we : 1
means if we -> want : 1
want to iterate -> from : 1
want to iterate -> over : 1
from to is -> set : 1
to is set -> to : 1
to and to -> int : 1
and to int -> int : 1
to int int -> int : 1
int int are -> only : 1
int are only -> two : 1
are only two -> member : 1
only two member -> functions : 1
two member functions -> need : 1
member functions need -> to : 1
functions need to -> and : 1
need to and -> both : 1
to and both -> return : 1
and both return -> iterators : 1
both return iterators -> to : 1
return iterators to -> the : 1
iterators to the -> beginning : 2
beginning and the -> end : 5
and the end -> of : 5
and the end -> iterator : 2
of the numeric -> const : 1
of the numeric -> set : 1
of the numeric -> list : 1
the numeric const -> return : 1
numeric const return -> const : 1
const return const -> return : 5
return const return -> we : 3
return const return -> order : 1
return const return -> as : 1
return const return -> accum : 1
const return we -> can : 3
can use write -> a : 1
use write a -> main : 1
write a main -> function : 2
write a main -> which : 1
main function which -> just : 1
function which just -> iterates : 1
which just iterates -> over : 1
just iterates over -> a : 1
iterates over a -> range : 1
iterates over a -> directory : 1
iterates over a -> given : 1
over a range -> from : 1
over a range -> the : 1
over a range -> of : 1
a range from -> to : 2
range from to -> prints : 1
range from to -> note : 1
range from to -> the : 1
range from to -> into : 1
from to prints -> all : 1
to prints all -> its : 1
prints all its -> int : 1
all its int -> for : 1
its int for -> i : 1
int for i -> i : 4
i i and -> running : 2
i and running -> the : 2
the following terminal -> it : 1
following terminal it -> that : 1
terminal it that -> we : 1
it that we -> write : 1
that we write -> the : 1
we write the -> following : 2
we write the -> main : 1
the following x -> compiler : 1
following x compiler -> will : 1
x compiler will -> evaluate : 1
compiler will evaluate -> it : 1
compiler will evaluate -> their : 1
will evaluate it -> to : 1
evaluate it to -> the : 1
to the auto -> auto : 1
auto for auto -> x : 1
auto for auto -> cout : 2
for auto x -> looking : 1
auto x looking -> at : 1
x looking at -> this : 1
looking at this -> it : 1
at this it -> becomes : 1
at this it -> is : 3
this it becomes -> obvious : 1
it becomes obvious -> that : 1
becomes obvious that -> the : 1
obvious that the -> only : 1
obvious that the -> histograms : 1
obvious that the -> their : 1
that the only -> requirements : 1
the only requirements -> iterators : 1
only requirements iterators -> are : 1
requirements iterators are -> the : 1
are the following -> three : 1
are the following -> the : 1
the following three -> unequal : 1
the following three -> functions : 1
following three unequal -> prefix : 1
three unequal prefix -> requirements : 1
unequal prefix requirements -> of : 1
prefix requirements of -> the : 1
requirements of the -> range : 1
of the range -> are : 1
of the range -> we : 1
of the range -> to : 1
of the range -> does : 1
of the range -> they : 1
the range are -> that : 1
range are that -> it : 1
are that it -> has : 1
that it has -> a : 2
that it has -> an : 1
that it has -> really : 1
that it has -> isolated : 1
that it has -> true : 1
has a and -> an : 1
has a and -> the : 1
a and an -> which : 1
a and an -> these : 1
a and an -> a : 1
a and an -> provides : 1
and an which -> return : 1
an which return -> two : 1
which return two -> iterators : 1
return two iterators -> that : 1
two iterators that -> denote : 1
iterators that denote -> the : 1
denote the beginning -> and : 1
of a this -> mostly : 1
of a this -> we : 1
a this mostly -> using : 1
this mostly using -> instead : 1
mostly using instead -> of : 1
using instead of -> this : 1
is generally a -> good : 1
generally a good -> style : 1
a good style -> because : 1
good style because -> automatically : 1
style because automatically -> calls : 1
because automatically calls -> that : 1
automatically calls that -> member : 1
calls that member -> method : 1
that member method -> is : 1
member method is -> if : 1
method is if -> is : 1
is if is -> an : 1
if is an -> array : 1
is an array -> not : 1
an array not -> have : 1
array not have -> a : 1
not have a -> will : 1
not have a -> comparison : 1
not have a -> then : 1
not have a -> chance : 1
have a will -> automatically : 1
a will automatically -> find : 1
will automatically find -> out : 1
automatically find out -> how : 1
find out how -> to : 1
out how to -> deal : 1
out how to -> print : 1
applies to user -> defined : 1
to user defined -> types : 1
user defined types -> that : 1
defined types that -> do : 1
types that do -> not : 1
do not members -> do : 1
not members do -> not : 1
members do not -> work : 1
not work with -> we : 1
with we did -> in : 1
we did in -> this : 4
we did in -> the : 2
we did in -> combination : 1
we did in -> order : 1
did in this -> recipe : 1
did in this -> this : 1
did in this -> another : 1
did in this -> section : 1
recipe is just -> fit : 1
is just fit -> a : 1
just fit a -> simple : 1
fit a simple -> number : 1
a simple number -> counting : 1
simple number counting -> algorithm : 1
number counting algorithm -> into : 1
counting algorithm into -> the : 1
algorithm into the -> forward : 1
into the forward -> iterator : 1
the forward iterator -> implementing : 1
forward iterator implementing -> an : 1
iterator implementing an -> iterator : 1
implementing an iterator -> and : 1
implementing an iterator -> that : 1
implementing an iterator -> is : 1
an iterator and -> a : 1
iterator and a -> range : 1
and a range -> always : 1
and a range -> of : 1
a range always -> involves : 1
range always involves -> this : 1
always involves this -> minimum : 1
involves this minimum -> amount : 1
this minimum amount -> of : 1
minimum amount of -> boilerplate : 1
amount of boilerplate -> which : 1
of boilerplate which -> can : 1
boilerplate which can -> be : 1
which can be -> a : 1
which can be -> worth : 1
which can be -> used : 1
which can be -> summarized : 1
which can be -> seen : 1
which can be -> added : 1
which can be -> executed : 1
be a little -> bit : 1
little bit annoying -> on : 1
bit annoying on -> the : 1
annoying on the -> one : 1
on the one -> a : 2
the one a -> look : 1
the one a -> string : 1
one a look -> loop : 1
a look loop -> on : 1
look loop on -> the : 1
loop on the -> other : 1
the other very -> rewarding : 1
other very rewarding -> because : 1
very rewarding because -> it : 1
rewarding because it -> looks : 1
because it looks -> so : 1
it looks so -> back : 1
looks so back -> and : 1
so back and -> have : 1
back and have -> a : 1
and have a -> thorough : 1
and have a -> look : 1
have a thorough -> look : 1
a thorough look -> on : 1
thorough look on -> which : 1
look on which -> of : 1
on which of -> the : 1
which of the -> methods : 1
which of the -> types : 1
of the methods -> of : 1
the methods of -> the : 1
methods of the -> iterator : 1
of the iterator -> and : 1
of the iterator -> type : 1
of the iterator -> used : 1
of the iterator -> it : 1
of the iterator -> we : 1
the iterator and -> the : 1
iterator and the -> range : 1
iterator and the -> old : 1
and the range -> class : 1
the range class -> are : 1
range class are -> forgetting : 1
class are forgetting -> to : 1
are forgetting to -> make : 1
forgetting to make -> those : 1
to make those -> functions : 1
make those functions -> can : 1
those functions can -> make : 1
functions can make -> the : 1
can make the -> compiler : 1
can make the -> main : 1
make the compiler -> your : 1
the compiler your -> code : 1
compiler your code -> in : 1
your code in -> a : 1
code in a -> lot : 1
code in a -> way : 1
lot of it -> is : 2
of it is -> a : 1
of it is -> possible : 1
of it is -> awkward : 1
of it is -> often : 1
of it is -> needed : 1
of it is -> crucial : 1
is a common -> thing : 1
is a common -> of : 1
a common thing -> to : 1
common thing to -> iterate : 1
thing to iterate -> over : 1
iterate over your -> own : 1
over your own -> iterators : 1
stl iterator own -> container : 1
iterator own container -> data : 1
own container data -> structure : 1
container data structure -> we : 1
data structure we -> come : 1
structure we come -> up : 1
we come up -> in : 1
come up in -> order : 1
up in order -> to : 1
order to effectively -> it : 1
to effectively it -> with : 1
effectively it with -> all : 1
it with all -> the : 1
with all the -> stl : 1
with all the -> type : 1
with all the -> template : 1
all the stl -> we : 1
all the stl -> include : 1
all the stl -> time : 1
the stl we -> need : 1
the stl we -> will : 2
stl we need -> to : 1
need to make -> them : 1
need to make -> the : 1
make them provide -> iterator : 1
them provide iterator -> in : 1
provide iterator in -> the : 1
iterator in the -> last : 1
iterator in the -> we : 1
iterator in the -> loop : 1
last we learned -> how : 4
last we learned -> some : 1
we learned how -> to : 3
we learned how -> we : 1
we learned how -> useful : 1
learned how to -> do : 1
learned how to -> format : 1
learned how to -> use : 1
to do but -> we : 1
do but we -> do : 1
but we do -> soon : 1
but we do -> not : 5
we do soon -> realize : 1
do soon realize -> that : 1
soon realize that -> stl : 1
realize that stl -> algorithms : 1
that stl algorithms -> not : 1
stl algorithms not -> with : 1
algorithms not with -> our : 1
not with our -> custom : 1
with our custom -> problem : 1
our custom problem -> is : 1
custom problem is -> that : 1
problem is that -> a : 1
problem is that -> hard : 1
problem is that -> it : 1
is that a -> lot : 1
that a lot -> of : 1
of stl algorithms -> try : 1
of stl algorithms -> is : 2
of stl algorithms -> by : 1
of stl algorithms -> up : 1
of stl algorithms -> does : 1
stl algorithms try -> to : 1
algorithms try to -> find : 1
try to find -> out : 1
try to find -> chunks : 1
find out more -> about : 1
out more about -> the : 1
more about the -> iterators : 1
about the iterators -> they : 1
the iterators they -> are : 1
iterators they are -> asked : 1
they are asked -> by : 1
are asked by -> us : 1
asked by us -> to : 1
by us to -> deal : 1
us to deal -> different : 1
to deal different -> iterator : 1
deal different iterator -> have : 1
different iterator have -> different : 1
iterator have different -> and : 1
have different and -> there : 1
different and there -> might : 1
and there might -> be : 1
there might be -> different : 1
there might be -> new : 1
there might be -> a : 1
might be different -> possibilities : 1
be different possibilities -> to : 1
different possibilities to -> implement : 1
different possibilities to -> calculate : 1
possibilities to implement -> the : 1
implement the for -> if : 1
the for if -> we : 1
if we copy -> from : 1
if we copy -> data : 1
we copy from -> one : 1
copy from one -> to : 1
from one to -> be : 1
one to be -> implemented : 1
to be implemented -> with : 1
be implemented with -> a : 2
be implemented with -> modern : 1
implemented with a -> fast : 1
implemented with a -> thanks : 1
with a fast -> if : 1
a fast if -> we : 1
fast if we -> copy : 1
we copy data -> from : 1
copy data from -> or : 1
data from or -> this : 1
from or this -> is : 1
from or this -> we : 1
or this is -> possible : 1
this is possible -> any : 1
this is possible -> because : 1
is possible any -> longer : 1
possible any longer -> and : 1
any longer and -> the : 1
longer and the -> items : 1
and the items -> have : 1
and the items -> themselves : 1
and the items -> at : 1
the items have -> to : 1
items have to -> be : 1
to be copied -> individually : 1
be copied individually -> one : 1
copied individually one -> by : 1
individually one by -> the : 1
one by the -> implementers : 1
by the implementers -> of : 1
the implementers of -> the : 2
implementers of the -> stl : 2
of the stl -> algorithms : 1
of the stl -> also : 3
of the stl -> might : 1
of the stl -> may : 1
of the stl -> that : 2
of the stl -> filesystem : 1
the stl algorithms -> put : 1
the stl algorithms -> is : 1
the stl algorithms -> are : 1
the stl algorithms -> we : 1
stl algorithms put -> a : 1
algorithms put a -> lot : 1
put a lot -> of : 1
lot of thought -> into : 1
of thought into -> this : 1
thought into this -> kind : 1
into this kind -> of : 1
this kind of -> automatic : 1
this kind of -> feature : 1
this kind of -> in : 1
this kind of -> iterator : 1
kind of automatic -> in : 1
of automatic in -> order : 1
automatic in order -> to : 1
to help we -> can : 1
help we can -> equip : 1
we can equip -> our : 1
can equip our -> iterators : 1
equip our iterators -> with : 1
our iterators with -> some : 1
iterators with some -> about : 1
with some about -> this : 1
some about this -> section : 1
about this section -> shows : 1
this section shows -> how : 1
section shows how -> to : 2
how to achieve -> the : 1
to achieve the -> to : 1
achieve the to -> do : 1
we will primitive -> iterator : 1
will primitive iterator -> use : 1
primitive iterator use -> it : 1
iterator use it -> together : 1
use it together -> with : 1
it together with -> an : 1
it together with -> a : 1
together with an -> stl : 1
with an stl -> which : 1
an stl which -> initially : 1
stl which initially -> does : 1
which initially does -> not : 1
initially does not -> compile : 1
does not compile -> with : 1
not compile with -> then : 1
compile with then -> we : 1
with then we -> do : 1
with then we -> have : 1
then we do -> necessary : 1
we do necessary -> to : 1
do necessary to -> make : 1
necessary to make -> it : 1
to make it -> we : 1
to make it -> as : 1
to make it -> a : 1
to make it -> produce : 1
make it we -> need : 1
it we need -> to : 3
include some as -> we : 2
as we implement -> a : 1
implement a primitive -> number : 1
a primitive number -> counting : 1
primitive number counting -> as : 1
number counting as -> in : 1
counting as in -> the : 1
in the previous -> when : 1
in the previous -> we : 1
in the previous -> recipe : 1
in the previous -> and : 1
in the previous -> but : 1
the previous when -> iterating : 1
previous when iterating -> over : 1
when iterating over -> it : 1
iterating over it -> will : 1
over it will -> emit : 1
over it will -> look : 1
will emit plain -> increasing : 1
emit plain increasing -> the : 1
plain increasing the -> acts : 1
increasing the acts -> as : 1
the acts as -> a : 1
as a handy -> and : 1
a handy and -> iterator : 1
handy and iterator -> class : 1
and iterator class -> int : 1
iterator class int -> explicit : 1
class int explicit -> position : 1
explicit position int -> const : 1
position int const -> return : 1
const return return -> bool : 2
return return bool -> const : 2
return bool const -> return : 2
return i bool -> const : 1
i bool const -> return : 1
const return class -> int : 1
return class int -> int : 1
class int int -> int : 1
int int const -> return : 1
int int const -> double : 1
const return order -> to : 1
keep the namespace -> prefix : 1
the namespace prefix -> out : 1
namespace prefix out -> and : 1
prefix out and -> keep : 1
out and keep -> the : 1
and keep the -> code : 1
keep the code -> we : 1
the code we -> declare : 1
the code we -> used : 1
the code we -> need : 1
code we declare -> that : 1
using namespace now -> just : 1
namespace now just -> instantiate : 1
now just instantiate -> a : 1
just instantiate a -> range : 1
instantiate a range -> from : 1
from to note -> that : 1
to note that -> the : 1
to note that -> when : 1
to note that -> in : 1
to note that -> we : 1
that the value -> the : 1
the value the -> position : 1
value the position -> of : 1
of the end -> this : 1
the end this -> means : 1
end this means -> that : 1
means that is -> the : 1
is the number -> that : 1
is the number -> of : 2
the number that -> is : 1
number that is -> the : 1
range is why -> it : 1
why it goes -> from : 1
it goes from -> to : 1
goes from to -> int : 1
goes from to -> then : 1
goes from to -> the : 1
from to int -> r : 1
to int r -> we : 1
int r we -> use : 1
r we use -> it : 1
we use it -> this : 1
we use it -> with : 1
we use it -> the : 1
we use it -> to : 2
we use it -> can : 1
use it this -> algorithm : 1
it this algorithm -> returns : 1
this algorithm returns -> us : 1
algorithm returns us -> with : 1
returns us with -> two : 1
us with two -> an : 1
with two an -> iterator : 1
two an iterator -> pointing : 1
to the lowest -> value : 1
the lowest value -> and : 1
lowest value and -> another : 1
value and another -> iterator : 1
and another iterator -> pointing : 1
and another iterator -> which : 1
another iterator pointing -> to : 1
to the highest -> value : 1
the highest value -> in : 1
highest value in -> the : 1
in the these -> of : 1
in the these -> return : 1
the these of -> and : 1
these of and -> how : 1
of and how -> we : 1
how we constructed -> the : 1
we constructed the -> auto : 1
constructed the auto -> cout : 1
the auto cout -> the : 1
auto cout the -> code : 1
cout the code -> leads : 1
the code leads -> to : 1
code leads to -> the : 1
the following error -> some : 1
following error some -> error : 1
error some error -> related : 1
some error related -> more : 1
error related more -> on : 1
related more on -> that : 1
more on that -> it : 1
on that it -> happen : 1
that it happen -> that : 1
it happen that -> there : 1
happen that there -> are : 1
that there are -> errors : 1
that there are -> no : 2
that there are -> different : 1
that there are -> new : 1
that there are -> pairs : 1
there are errors -> on : 1
are errors on -> other : 1
errors on other -> compilers : 1
on other compilers -> stl : 1
other compilers stl -> library : 1
compilers stl library -> implementations : 1
stl library implementations -> or : 1
library implementations or -> errors : 1
implementations or errors -> at : 1
or errors at -> this : 1
errors at this -> error : 1
at this error -> message : 1
this error message -> occurs : 1
error message occurs -> with : 1
message occurs with -> clang : 1
occurs with clang -> version : 1
with clang version -> order : 1
clang version order -> to : 1
version order to -> fix : 1
fix we need -> to : 2
need to activate -> iterator : 1
to activate iterator -> trait : 1
activate iterator trait -> functionality : 1
iterator trait functionality -> for : 1
trait functionality for -> our : 1
functionality for our -> iterator : 1
for our iterator -> just : 1
our iterator just -> after : 1
iterator just after -> the : 1
just after the -> definition : 1
just after the -> program : 1
after the definition -> of : 1
definition of we -> write : 1
of we write -> the : 1
the following template -> structure : 1
following template structure -> specialization : 1
template structure specialization -> of : 1
structure specialization of -> the : 1
specialization of the -> it : 1
specialization of the -> class : 1
specialization of the -> member : 1
the it tells -> the : 1
it tells the -> stl : 1
tells the stl -> that : 1
the stl that -> our : 1
the stl that -> are : 1
the stl that -> just : 1
stl that our -> is : 1
that our is -> of : 1
our is of -> the : 1
is of the -> category : 1
of the category -> forward : 1
the category forward -> and : 1
category forward and -> it : 1
forward and it -> iterates : 1
forward and it -> returns : 1
and it iterates -> over : 1
it iterates over -> namespace : 1
it iterates over -> to : 1
it iterates over -> it : 1
iterates over namespace -> std : 1
over namespace std -> template : 1
using using compile -> it : 1
using compile it -> we : 1
compile it we -> can : 1
it we can -> see : 1
it we can -> activate : 1
it we can -> just : 1
it we can -> copy : 1
we can see -> that : 6
we can see -> the : 2
we can see -> what : 1
we can see -> our : 1
we can see -> how : 1
we can see -> later : 1
can see that -> it : 1
can see that -> all : 1
can see that -> a : 1
can see that -> my : 1
can see that -> they : 1
can see that -> there : 1
can see that -> the : 2
see that it -> the : 1
see that it -> completely : 1
that it the -> output : 1
it the output -> of : 1
the output of -> the : 5
the output of -> this : 2
the output of -> a : 2
the output of -> stream : 1
output of the -> function : 1
output of the -> whole : 1
output of the -> iterator : 1
output of the -> first : 1
output of the -> second : 1
output of the -> in : 1
function is the -> which : 1
function is the -> is : 1
function is the -> most : 1
function is the -> input : 1
function is the -> current : 1
just what we -> it : 2
just what we -> b : 1
just what we -> as : 1
just what we -> a : 1
just what we -> ctor : 1
what we it -> stl : 1
what we it -> complicated : 1
we it stl -> algorithms : 1
it stl algorithms -> need : 1
stl algorithms need -> to : 1
algorithms need to -> know : 1
algorithms need to -> be : 1
need to know -> the : 3
need to know -> a : 1
to know the -> characteristics : 1
to know the -> type : 1
to know the -> end : 1
to know the -> stl : 1
to know the -> counter : 1
to know the -> different : 1
know the characteristics -> of : 1
the characteristics of -> the : 1
characteristics of the -> iterator : 1
characteristics of the -> random : 1
the iterator type -> they : 1
the iterator type -> is : 1
iterator type they -> are : 1
type they are -> used : 1
they are used -> some : 1
are used some -> others : 1
used some others -> need : 1
some others need -> to : 1
others need to -> know : 1
know the type -> of : 1
type of items -> the : 1
of items the -> iterators : 1
items the iterators -> iterate : 1
the iterators iterate -> this : 1
iterators iterate this -> has : 1
iterate this has -> different : 1
this has different -> implementation : 1
has different implementation -> all : 1
different implementation all -> stl : 1
implementation all stl -> algorithms : 1
all stl algorithms -> will : 1
all stl algorithms -> usually : 1
stl algorithms will -> access : 1
algorithms will access -> this : 1
will access this -> type : 1
access this type -> information : 1
this type information -> via : 1
type information via -> assuming : 1
information via assuming -> that : 1
via assuming that -> the : 1
iterator type is -> this : 1
type is this -> traits : 1
is this traits -> class : 1
this traits class -> contains : 1
traits class contains -> up : 1
class contains up -> to : 1
contains up to -> five : 1
up to five -> different : 1
to five different -> type : 1
five different type -> member : 1
different type member -> what : 1
type member what -> type : 1
member what type -> results : 1
what type results -> from : 1
type results from -> writing : 1
results from writing -> of : 1
from writing of -> what : 1
writing of what -> type : 1
of what type -> is : 1
of what type -> must : 2
type is the -> item : 1
which we access -> with : 1
we access with -> that : 1
access with that -> this : 1
with that this -> is : 1
that this is -> for : 1
that this is -> not : 1
that this is -> we : 1
that this is -> a : 2
this is for -> pure : 1
this is for -> it : 1
is for pure -> output : 1
for pure output -> of : 1
pure output of -> what : 1
output of what -> type : 1
what type must -> a : 2
type must a -> pointer : 1
type must a -> reference : 1
must a pointer -> be : 1
a pointer be -> in : 1
pointer be in -> order : 1
an of what -> type : 1
must a reference -> be : 1
a reference be -> in : 1
reference be in -> order : 1
order to reference -> an : 1
to reference an -> which : 1
reference an which -> category : 1
an which category -> does : 1
which category does -> the : 1
category does the -> iterator : 1
does the iterator -> belong : 1
the iterator belong -> and : 1
iterator belong and -> type : 1
belong and type -> definitions : 1
and type definitions -> do : 1
type definitions do -> not : 1
definitions do not -> make : 1
do not make -> sense : 1
not make sense -> for : 1
not make sense -> to : 1
make sense for -> our : 1
sense for our -> as : 1
for our as -> it : 1
our as it -> iterate : 1
as it iterate -> over : 1
it iterate over -> real : 1
iterate over real -> values : 1
over real values -> just : 1
real values just -> values : 1
values just values -> but : 1
just values but -> they : 1
values but they -> are : 1
are not persistently -> in : 1
not persistently in -> an : 1
persistently in an -> therefore : 1
in an therefore -> better : 1
an therefore better -> to : 1
therefore better to -> not : 1
better to not -> define : 1
to not define -> if : 1
not define if -> an : 1
define if an -> algorithm : 1
an algorithm depends -> on : 1
algorithm depends on -> those : 1
depends on those -> items : 1
on those items -> being : 1
those items being -> referenceable : 1
items being referenceable -> in : 1
being referenceable in -> it : 1
referenceable in it -> might : 1
in it might -> be : 1
might be combined -> with : 1
be combined with -> our : 1
be combined with -> existing : 1
be combined with -> a : 1
be combined with -> an : 1
combined with our -> it : 1
combined with our -> binary : 1
with our it -> was : 1
our it was -> encouraged : 1
it was encouraged -> to : 1
was encouraged to -> let : 1
encouraged to let -> iterator : 1
to let iterator -> types : 1
let iterator types -> just : 1
iterator types just -> inherit : 1
types just inherit -> from : 1
just inherit from -> which : 1
inherit from which -> automatically : 1
from which automatically -> populates : 1
which automatically populates -> our : 1
automatically populates our -> class : 1
populates our class -> with : 1
our class with -> all : 1
class with all -> the : 1
all the type -> this : 1
the type this -> still : 1
type this still -> but : 1
this still but -> it : 1
still but it -> is : 1
but it is -> discouraged : 1
but it is -> still : 1
but it is -> an : 1
but it is -> also : 1
but it is -> the : 1
but it is -> much : 1
but it is -> listed : 1
but it is -> not : 1
but it is -> worth : 1
but it is -> nicely : 1
it is discouraged -> since : 1
is discouraged since -> iterator : 1
discouraged since iterator -> fill : 1
since iterator fill -> generic : 1
generic data a -> lot : 1
lot of we -> want : 1
lot of we -> get : 1
of we want -> to : 2
to fill any -> container : 1
fill any container -> with : 1
any container with -> masses : 1
container with masses -> of : 1
with masses of -> but : 1
masses of but -> the : 1
of but the -> data : 1
of but the -> in : 1
of but the -> whole : 1
but the data -> source : 1
the data source -> and : 1
data source and -> the : 1
source and the -> container : 1
and the container -> have : 1
the container have -> common : 1
container have common -> in : 1
have common in -> such : 1
common in such -> a : 1
such a we -> would : 1
such a we -> then : 1
a we would -> need : 1
a we would -> have : 1
we would need -> to : 3
would need to -> write : 2
would need to -> jump : 1
would need to -> handcraft : 1
need to write -> our : 2
need to write -> because : 1
need to write -> and : 1
need to write -> the : 1
need to write -> a : 1
to write our -> own : 2
write our own -> algorithms : 1
write our own -> concatenation : 1
write our own -> function : 1
our own algorithms -> deal : 1
own algorithms deal -> with : 1
algorithms deal with -> the : 1
with the question -> of : 1
with the question -> back : 1
the question of -> how : 1
question of how -> to : 1
of how to -> shove : 1
how to shove -> data : 1
to shove data -> from : 1
shove data from -> the : 1
data from the -> source : 1
from the source -> to : 1
from the source -> range : 1
from the source -> iterator : 1
from the source -> string : 1
the source to -> the : 1
source to the -> this : 1
the this distracts -> us : 1
this distracts us -> from : 1
distracts us from -> our : 1
us from our -> actual : 1
from our actual -> work : 1
our actual work -> of : 1
actual work of -> a : 1
work of a -> specific : 1
of a specific -> where : 1
of a specific -> and : 1
a specific where -> we : 1
specific where we -> simply : 1
where we simply -> transport : 1
we simply transport -> data : 1
simply transport data -> between : 1
transport data between -> conceptually : 1
data between conceptually -> different : 1
between conceptually different -> data : 1
conceptually different data -> structures : 1
different data structures -> can : 1
different data structures -> the : 1
data structures can -> be : 1
structures can be -> implemented : 1
with a thanks -> to : 1
a thanks to -> another : 1
thanks to another -> abstraction : 1
to another abstraction -> provided : 1
another abstraction provided -> by : 1
abstraction provided by -> the : 1
provided by the -> this : 1
by the this -> section : 1
by the this -> function : 1
by the this -> would : 1
the this section -> demonstrates : 1
this section demonstrates -> the : 1
section demonstrates the -> use : 1
demonstrates the use -> of : 1
the use of -> some : 1
the use of -> handcrafted : 1
use of some -> of : 1
of some of -> them : 1
of them in -> order : 1
of them in -> this : 1
of them in -> our : 1
them in order -> to : 4
order to give -> a : 1
give a feeling -> how : 1
a feeling how -> useful : 1
feeling how useful -> they : 1
how useful they -> to : 1
how useful they -> parsing : 1
useful they to -> do : 1
they to do -> this : 1
they to do -> are : 1
we use some -> iterator : 1
use some iterator -> wrappers : 1
some iterator wrappers -> just : 1
iterator wrappers just -> for : 1
wrappers just for -> the : 1
of showing that -> they : 1
showing that they -> exist : 1
that they exist -> and : 1
they exist and -> how : 1
exist and how -> they : 1
and how they -> can : 1
and how they -> work : 1
how they can -> help : 1
they can help -> us : 1
can help us -> in : 1
can help us -> with : 1
help us in -> everyday : 1
help us in -> building : 1
us in everyday -> programming : 1
in everyday programming -> need : 1
everyday programming need -> to : 1
programming need to -> include : 1
some headers that -> we : 1
headers that we -> use : 1
use namespace spares -> us : 1
namespace spares us -> some : 1
spares us some -> typing : 1
spares us some -> in : 1
spares us some -> code : 1
us some typing -> using : 1
us some typing -> in : 1
some typing using -> namespace : 1
typing using namespace -> start : 1
using namespace start -> we : 1
namespace start we -> specialize : 1
start we specialize -> it : 1
specialize it on -> this : 1
it on this -> it : 1
on this it -> will : 1
it will try -> to : 2
try to parse -> input : 1
try to parse -> the : 1
try to parse -> in : 1
to parse input -> to : 1
parse input to -> for : 1
input to for -> if : 1
to for if -> we : 1
if we iterate -> over : 1
iterate over it -> will : 1
it will look -> as : 1
it will look -> for : 1
will look as -> if : 1
look as if -> it : 1
as if it -> the : 1
as if it -> resulted : 1
as if it -> was : 1
if it the -> end : 1
it the end -> iterator : 1
end iterator is -> instantiated : 1
iterator is instantiated -> of : 1
is instantiated of -> the : 1
instantiated of the -> same : 1
the same without -> any : 1
same without any -> constructor : 1
without any constructor -> int : 1
any constructor int -> we : 1
constructor int we -> just : 1
int we just -> copy : 1
we just copy -> over : 1
just copy over -> all : 1
copy over all -> the : 1
all the integers -> from : 1
all the integers -> it : 1
the integers from -> the : 1
integers from the -> standard : 1
integers from the -> sums : 1
input into the -> the : 1
the the deque -> itself : 1
the deque itself -> is : 1
deque itself is -> not : 1
itself is not -> an : 1
not an so -> we : 1
an so we -> wrap : 1
an so we -> can : 1
so we wrap -> it : 1
we wrap it -> using : 1
wrap it using -> the : 1
it using the -> helper : 1
it using the -> input : 1
using the helper -> this : 1
using the helper -> and : 1
the helper this -> special : 1
helper this special -> iterator : 1
this special iterator -> wrapper : 1
this special iterator -> class : 1
special iterator wrapper -> will : 1
iterator wrapper will -> execute : 1
wrapper will execute -> with : 1
will execute with -> each : 1
execute with each -> of : 1
with each of -> the : 1
with each of -> those : 1
with each of -> only : 1
with each of -> these : 1
each of the -> items : 1
each of the -> numbers : 1
each of the -> values : 1
items we get -> from : 1
we get from -> the : 1
we get from -> a : 1
we get from -> into : 1
get from the -> standard : 1
the standard this -> way : 1
standard this way -> the : 1
way the deque -> is : 1
the deque is -> grown : 1
deque is grown -> the : 1
is grown the -> next : 1
grown the next -> we : 1
the next we -> to : 1
the next we -> will : 1
the next we -> pack : 1
next we to -> copy : 1
we to copy -> items : 1
to copy items -> into : 1
copy items into -> the : 1
items into the -> of : 1
items into the -> such : 1
items into the -> queue : 1
into the of -> the : 1
the first define -> some : 1
first define some -> example : 1
define some example -> numbers : 1
some example numbers -> in : 1
example numbers in -> the : 1
numbers in the -> form : 1
numbers in the -> decimal : 1
numbers in the -> hexadecimal : 1
numbers in the -> last : 1
numbers in the -> range : 1
numbers in the -> and : 1
form of a -> string : 2
form of a -> callable : 1
form of a -> template : 1
of a string -> and : 2
of a string -> it : 1
string and instantiate -> the : 1
and instantiate the -> stream : 1
instantiate the stream -> object : 1
the stream object -> from : 1
the stream object -> is : 1
the stream object -> enters : 1
the stream object -> to : 1
stream object from -> istringstream : 1
stream object from -> which : 1
object from istringstream -> sstr : 1
from istringstream sstr -> we : 1
istringstream sstr we -> need : 1
sstr we need -> a : 1
need a hint -> of : 1
a hint of -> where : 1
hint of where -> to : 1
of where to -> insert : 1
to insert into -> the : 1
insert into the -> it : 1
into the it -> the : 1
into the it -> accepts : 1
the it the -> so : 1
it the so -> we : 1
so we use -> the : 3
so we use -> it : 1
use the begin -> pointer : 1
the begin pointer -> of : 1
begin pointer of -> the : 1
pointer of the -> deque : 1
the deque and -> feed : 1
deque and feed -> it : 1
feed it to -> the : 1
feed it to -> together : 1
argument of this -> function : 1
of this function -> says : 1
of this function -> essentially : 1
of this function -> is : 3
of this function -> object : 1
this function says -> that : 1
function says that -> it : 1
says that it -> will : 1
that it will -> return : 1
that it will -> improve : 1
that it will -> copy : 1
that it will -> trigger : 1
that it will -> never : 1
that it will -> lock : 1
that it will -> not : 1
that it will -> remove : 1
it will return -> an : 1
it will return -> us : 3
it will return -> a : 2
it will return -> from : 1
it will return -> in : 1
an iterator advanced -> by : 1
iterator advanced by -> that : 1
advanced by that -> the : 1
by that the -> cast : 1
that the cast -> to : 1
the cast to -> the : 1
cast to the -> second : 1
second parameter of -> the : 1
parameter of the -> iterator : 1
parameter of the -> binary : 1
parameter of the -> output : 1
the iterator used -> as : 1
iterator used as -> the : 1
used as the -> first : 1
used as the -> key : 1
used as the -> format : 1
as the first -> in : 1
as the first -> this : 1
as the first -> one : 1
as the first -> range : 1
the first in -> this : 1
the first in -> case : 2
first in this -> a : 1
in this a -> signed : 1
in this a -> search : 1
in this a -> trie : 1
this a signed -> integer : 1
a signed integer -> depending : 1
signed integer depending -> on : 1
integer depending on -> the : 1
on the compiler -> the : 1
the compiler the -> compiler : 1
compiler the compiler -> might : 1
the compiler might -> at : 1
compiler might at -> this : 1
might at this -> point : 1
at this point -> if : 1
at this point -> one : 1
at this point -> because : 1
at this point -> when : 1
at this point -> does : 1
this point if -> we : 1
point if we -> cast : 1
point if we -> had : 1
if we cast -> auto : 1
we cast auto -> we : 1
cast auto we -> can : 1
auto we can -> copy : 1
auto we can -> do : 1
we can copy -> parsed : 1
we can copy -> them : 1
we can copy -> data : 1
we can copy -> all : 1
we can copy -> to : 1
we can copy -> instances : 1
can copy parsed -> integers : 1
copy parsed integers -> step : 1
parsed integers step -> by : 1
integers step by -> step : 1
by step from -> the : 1
step from the -> input : 1
the input string -> the : 1
the input string -> and : 2
the input string -> in : 1
input string the -> the : 1
string the the -> end : 1
the the end -> iterator : 1
end iterator of -> a : 2
end iterator of -> bool : 1
end iterator of -> the : 3
end iterator of -> our : 1
end iterator of -> that : 1
iterator of a -> stream : 1
iterator of a -> vector : 1
iterator of a -> data : 1
of a stream -> iterator : 1
a stream iterator -> wrapper : 1
stream iterator wrapper -> is : 1
iterator wrapper is -> just : 1
wrapper is just -> an : 1
just an empty -> without : 1
just an empty -> if : 1
an empty without -> constructor : 1
empty without constructor -> arguments : 1
without constructor arguments -> the : 1
constructor arguments the -> empty : 1
arguments the empty -> braces : 1
the empty braces -> in : 1
empty braces in -> the : 1
braces in the -> code : 1
in the code -> deque : 1
in the code -> in : 1
the code deque -> is : 1
code deque is -> wrapped : 1
deque is wrapped -> into : 1
is wrapped into -> an : 1
is wrapped into -> lambda : 1
is wrapped into -> a : 1
wrapped into an -> inserter : 1
wrapped into an -> and : 1
into an inserter -> which : 1
an inserter which -> is : 1
inserter which is -> an : 1
which is an -> which : 1
which is an -> initializer : 1
which is pointed -> to : 1
is pointed to -> the : 1
pointed to the -> middle : 1
to the middle -> using : 1
to the middle -> appear : 1
to the middle -> of : 2
the middle using -> the : 1
middle using the -> to : 1
using the to -> insert : 1
the to insert -> some : 1
to insert some -> items : 1
insert some items -> at : 1
some items at -> the : 1
items at the -> front : 1
items at the -> same : 1
the the last -> we : 2
the the last -> piece : 1
last we print -> the : 1
print the whole -> content : 1
print the whole -> cout : 1
the whole content -> of : 1
whole content of -> the : 1
content of the -> deque : 1
content of the -> map : 1
content of the -> strings : 1
content of the -> vector : 1
content of the -> text : 2
content of the -> variant : 1
content of the -> deleted : 1
content of the -> we : 1
the deque out -> to : 1
deque out to -> the : 1
user the works -> output : 1
the works output -> iterator : 1
works output iterator -> in : 1
output iterator in -> our : 1
iterator in our -> just : 1
in our just -> forwards : 1
our just forwards -> all : 1
just forwards all -> the : 1
forwards all the -> integers : 1
the integers it -> gets : 1
integers it gets -> copied : 1
it gets copied -> from : 1
gets copied from -> to : 1
copied from to -> then : 1
from to then -> appends : 1
from to then -> the : 2
to then appends -> after : 1
then appends after -> each : 1
appends after each -> cout : 1
after each cout -> and : 1
each cout and -> running : 1
the following can -> you : 1
following can you -> identify : 1
can you identify -> which : 1
you identify which -> number : 1
identify which number -> was : 1
which number was -> inserted : 1
number was inserted -> by : 1
was inserted by -> which : 1
inserted by which -> code : 1
by which code -> echo : 1
which code echo -> it : 1
code echo it -> used : 1
echo it used -> a : 1
it used a -> lot : 1
it used a -> strange : 1
used a lot -> of : 1
lot of different -> iterator : 1
lot of different -> sanitizers : 1
lot of different -> what : 1
lot of different -> other : 1
of different iterator -> this : 1
different iterator this -> they : 1
iterator this they -> all : 1
this they all -> have : 1
they all have -> one : 1
they all have -> in : 1
all have one -> thing : 1
have one thing -> in : 1
one thing in -> which : 1
thing in which -> is : 1
which is they -> wrap : 1
is they wrap -> an : 1
they wrap an -> object : 1
wrap an object -> into : 1
an object into -> an : 1
object into an -> iterator : 1
into an iterator -> that : 1
iterator that is -> not : 1
not an iterator -> can : 1
can be wrapped -> and : 1
be wrapped and -> so : 1
wrapped and so -> it : 1
and so it -> will : 1
it will call -> the : 1
will call the -> which : 1
call the which -> inserts : 1
call the which -> has : 1
the which inserts -> the : 2
which inserts the -> new : 2
inserts the new -> the : 1
inserts the new -> item : 1
new the existing -> if : 1
the existing if -> the : 1
existing if the -> container : 1
if the container -> instance : 1
the container instance -> is : 1
container instance is -> not : 1
instance is not -> large : 1
instance is not -> destroyed : 1
is not large -> it : 1
is not large -> enough : 1
not large it -> will : 1
large it will -> be : 1
will be grown -> does : 1
be grown does -> exactly : 1
grown does exactly -> the : 1
does exactly the -> same : 1
thing as but -> it : 1
as but it -> calls : 1
as but it -> does : 1
as but it -> locks : 1
but it calls -> the : 1
it calls the -> which : 1
it calls the -> reduce : 1
it calls the -> function : 1
it calls the -> whole : 1
calls the which -> inserts : 1
new item all -> the : 1
item all the -> existing : 1
all the existing -> note : 1
all the existing -> items : 1
all the existing -> duration : 1
the existing note -> that : 1
existing note that -> for : 1
note that for -> a : 1
that for a -> container : 1
for a container -> like : 1
a container like -> this : 1
container like this -> means : 1
like this means -> that : 1
means that all -> the : 1
existing items need -> to : 1
items need to -> be : 1
to be moved -> one : 1
be moved one -> slot : 2
moved one slot -> further : 2
one slot further -> in : 1
one slot further -> to : 1
slot further in -> order : 1
further in order -> to : 1
order to leave -> space : 1
to leave space -> for : 1
leave space for -> the : 1
space for the -> new : 1
space for the -> other : 1
for the new -> item : 1
new item at -> the : 1
item at the -> iterator : 1
at the iterator -> similar : 1
the iterator similar -> to : 1
iterator similar to -> the : 1
similar to the -> other : 1
similar to the -> csignal : 1
similar to the -> only : 1
similar to the -> it : 1
similar to the -> program : 1
similar to the -> recipe : 1
similar to the -> diagram : 1
similar to the -> original : 1
similar to the -> behavior : 1
to the other -> but : 1
to the other -> by : 1
to the other -> input : 1
the other but -> is : 1
the other but -> negating : 1
other but is -> able : 1
but is able -> to : 1
able to insert -> new : 1
to insert new -> items : 1
insert new items -> existing : 1
new items existing -> the : 1
items existing the -> helper : 1
existing the helper -> function : 1
helper function which -> constructs : 1
function which constructs -> such : 1
which constructs such -> a : 1
constructs such a -> wrapper : 1
constructs such a -> hash : 1
such a wrapper -> takes : 1
a wrapper takes -> the : 1
wrapper takes the -> first : 1
takes the first -> argument : 1
argument is the -> container : 1
argument is the -> random : 1
argument is the -> we : 1
is the container -> and : 1
the container and -> the : 1
container and the -> second : 1
second argument is -> an : 1
position where new -> items : 1
where new items -> shall : 1
new items shall -> be : 1
shall be is -> another : 1
be is another -> very : 1
is another very -> handy : 1
another very handy -> it : 1
very handy it -> can : 1
handy it can -> be : 1
used with any -> object : 1
with any object -> can : 1
any object can -> be : 1
object can be -> the : 1
object can be -> called : 4
can be the -> standard : 1
can be the -> only : 1
be the standard -> input : 1
standard input or -> files : 1
standard input or -> a : 1
input or files -> for : 1
or files for -> will : 1
files for will -> try : 1
for will try -> to : 1
to parse the -> input : 1
parse the input -> from : 1
the input from -> that : 1
input from that -> stream : 1
from that stream -> object : 1
that stream object -> according : 1
stream object according -> to : 1
object according to -> the : 1
according to the -> template : 1
according to the -> list : 1
to the template -> parameter : 2
template parameter it -> was : 1
parameter it was -> instantiated : 1
it was instantiated -> in : 1
was instantiated in -> this : 1
instantiated in this -> we : 1
we used which -> pulls : 1
used which pulls -> integers : 1
which pulls integers -> out : 1
pulls integers out -> of : 1
integers out of -> the : 1
of the standard -> input : 1
of the standard -> and : 1
of the standard -> output : 1
standard input for -> special : 1
input for special -> thing : 1
for special thing -> about : 1
special thing about -> that : 1
thing about that -> we : 2
thing about that -> it : 1
about that we -> often : 1
about that we -> do : 1
that we often -> cannot : 1
we often cannot -> know : 1
often cannot know -> in : 1
cannot know in -> advance : 1
know in advance -> how : 1
in advance how -> long : 1
advance how long -> the : 1
how long the -> stream : 1
how long the -> execution : 1
long the stream -> that : 1
the stream that -> leaves : 1
stream that leaves -> the : 1
that leaves the -> where : 1
leaves the where -> will : 1
the where will -> the : 1
where will the -> iterator : 1
will the iterator -> point : 1
the iterator point -> we : 1
iterator point we -> do : 1
point we do -> not : 1
not know where -> the : 1
know where the -> end : 1
where the end -> the : 1
the end the -> way : 1
the end the -> number : 1
the end the -> right : 1
end the way -> this : 1
the way this -> that : 1
way this that -> the : 1
this that the -> iterator : 1
this that the -> result : 1
the iterator when -> it : 1
iterator when it -> reaches : 1
when it reaches -> the : 1
it reaches the -> end : 1
reaches the end -> of : 1
of the when -> it : 1
of the when -> the : 1
the when it -> is : 1
is compared to -> the : 2
compared to the -> end : 2
compared to the -> original : 1
the end it -> will : 1
the end it -> by : 1
end it will -> effectively : 1
it will effectively -> compare : 1
will effectively compare -> itself : 1
effectively compare itself -> with : 1
compare itself with -> the : 1
itself with the -> end : 1
with the end -> iterator : 1
end iterator but -> return : 1
iterator but return -> if : 1
but return if -> the : 1
return if the -> stream : 1
if the stream -> has : 1
the stream has -> any : 1
stream has any -> tokens : 1
has any tokens -> why : 1
any tokens why -> the : 1
tokens why the -> end : 1
why the end -> iterator : 1
end iterator constructor -> does : 1
iterator constructor does -> not : 1
constructor does not -> take : 1
does not take -> any : 1
not take any -> is : 1
take any is -> the : 1
any is the -> same : 1
thing as the -> but : 1
as the but -> it : 3
the but it -> works : 1
the but it -> is : 1
the but it -> has : 1
the but it -> leaves : 1
the but it -> does : 1
the but it -> did : 1
but it works -> the : 1
it works the -> other : 1
it works the -> same : 1
works the other -> way : 1
other way it -> take : 1
way it take -> tokens : 1
it take tokens -> an : 1
take tokens an -> pushes : 1
tokens an pushes -> tokens : 1
an pushes tokens -> an : 1
pushes tokens an -> another : 1
tokens an another -> difference : 1
an another difference -> to : 1
another difference to -> is : 1
difference to is -> that : 1
to is that -> its : 1
is that its -> constructor : 1
is that its -> instances : 1
that its constructor -> takes : 1
its constructor takes -> a : 2
constructor takes a -> second : 1
constructor takes a -> list : 1
takes a second -> which : 1
a second which -> is : 1
second which is -> a : 1
is a string -> that : 1
is a string -> stream : 1
is a string -> by : 1
a string that -> shall : 1
a string that -> contains : 2
a string that -> describes : 1
string that shall -> be : 1
that shall be -> pushed : 1
that shall be -> section : 1
that shall be -> called : 1
shall be pushed -> into : 1
into the output -> stream : 2
into the output -> template : 1
into the output -> actually : 1
the output stream -> after : 1
the output stream -> and : 1
the output stream -> object : 2
the output stream -> will : 1
the output stream -> this : 1
the output stream -> iterator : 1
the output stream -> operator : 1
output stream after -> each : 1
stream after each -> that : 1
after each that -> is : 1
each that is -> this : 1
that is this -> way : 1
is this way -> we : 1
we can print -> a : 3
we can print -> how : 1
we can print -> the : 2
we can print -> scientific : 1
we can print -> its : 1
can print a -> a : 1
can print a -> weak : 1
can print a -> path : 1
print a a -> new : 1
a a new -> line : 1
a new line -> after : 1
new line after -> each : 1
line after each -> algorithms : 1
after each algorithms -> in : 1
each algorithms in -> terms : 1
terms of usually -> iterate : 1
of usually iterate -> by : 1
usually iterate by -> their : 1
iterate by their -> from : 1
by their from -> one : 1
their from one -> item : 1
from one item -> of : 1
one item of -> a : 1
item of a -> container : 1
of a container -> to : 1
of a container -> is : 1
a container to -> but : 1
container to but -> they : 1
to but they -> do : 1
but they do -> not : 1
do not necessarily -> need : 1
not necessarily need -> to : 1
necessarily need to -> iterate : 1
need to iterate -> over : 2
iterate over data -> structures : 1
over data structures -> at : 1
data structures at -> iterators : 1
structures at iterators -> can : 1
at iterators can -> also : 1
iterators can also -> be : 1
used to implement -> in : 1
to implement in -> which : 1
to implement in -> the : 1
implement in which -> they : 1
in which they -> would : 1
which they would -> calculate : 1
they would calculate -> the : 1
would calculate the -> next : 1
calculate the next -> value : 1
the next value -> when : 1
the next value -> from : 1
next value when -> they : 1
value when they -> are : 2
when they are -> incremented : 1
when they are -> dereferenced : 1
when they are -> zipped : 1
when they are -> done : 1
when they are -> released : 1
they are incremented -> and : 1
are incremented and -> return : 1
incremented and return -> that : 1
and return that -> value : 1
return that value -> when : 1
that value when -> they : 1
they are dereferenced -> this : 1
are dereferenced this -> we : 1
dereferenced this we -> demonstrate : 1
this we demonstrate -> this : 1
we demonstrate this -> by : 1
demonstrate this by -> implementing : 1
this by implementing -> the : 1
by implementing the -> fibonacci : 1
implementing the fibonacci -> function : 1
the fibonacci function -> in : 1
the fibonacci function -> is : 1
fibonacci function in -> form : 1
function in form -> of : 1
in form of -> an : 1
in form of -> the : 1
in form of -> one : 1
form of an -> the : 1
form of an -> initializer : 1
form of an -> void : 1
of an the -> fibonacci : 1
an the fibonacci -> function : 1
fibonacci function is -> recursively : 1
function is recursively -> defined : 1
is recursively defined -> like : 1
recursively defined like -> it : 1
defined like it -> starts : 1
like it starts -> with : 1
it starts with -> the : 1
starts with the -> beginning : 1
with the beginning -> values : 1
with the beginning -> at : 1
the beginning values -> of : 1
beginning values of -> this : 1
values of this -> leads : 1
values of this -> type : 1
of this leads -> to : 2
this leads to -> the : 3
this leads to -> very : 1
this leads to -> less : 1
this leads to -> a : 4
this leads to -> instances : 1
this leads to -> not : 1
this leads to -> completely : 1
this leads to -> an : 1
the following number -> and : 1
following number and -> so : 1
number and so -> we : 1
so we implement -> this : 1
we implement this -> in : 1
of a callable -> function : 1
a callable function -> the : 1
callable function the -> fibonacci : 1
function the fibonacci -> value : 1
the fibonacci value -> for : 1
fibonacci value for -> any : 1
value for any -> we : 1
for any we -> will : 1
for any we -> tell : 1
any we will -> end : 1
we will end -> up : 2
will end up -> with : 2
up with a -> recursive : 1
up with a -> new : 1
up with a -> formula : 1
with a recursive -> or : 1
a recursive or -> a : 1
recursive or a -> loop : 1
or a loop -> this : 1
a loop this -> is : 1
loop this is -> but : 1
loop this is -> arguably : 1
this is but -> what : 1
this is but -> hard : 1
is but what -> if : 1
we write some -> program : 1
write some program -> where : 1
some program where -> have : 1
program where have -> to : 1
where have to -> consume : 1
have to consume -> fibonacci : 1
to consume fibonacci -> numbers : 1
consume fibonacci numbers -> in : 1
fibonacci numbers in -> some : 1
numbers in some -> one : 1
in some one -> after : 1
some one after -> we : 1
one after we -> would : 1
after we would -> have : 1
would have two -> we : 1
have two we -> recalculate : 1
two we recalculate -> all : 1
we recalculate all -> the : 1
recalculate all the -> recursive : 1
all the recursive -> calls : 1
the recursive calls -> for : 1
recursive calls for -> every : 1
calls for every -> new : 1
for every new -> fibonacci : 1
every new fibonacci -> which : 1
new fibonacci which -> is : 1
fibonacci which is -> a : 1
is a waste -> of : 1
a waste of -> computing : 1
waste of computing -> or : 1
of computing or -> we : 1
computing or we -> save : 1
or we save -> the : 1
save the last -> two : 1
last two fibonacci -> numbers : 1
last two fibonacci -> if : 1
two fibonacci numbers -> as : 1
fibonacci numbers as -> temporary : 1
numbers as temporary -> use : 1
as temporary use -> them : 1
temporary use them -> to : 1
use them to -> calculate : 1
them to calculate -> the : 1
calculate the in -> the : 1
in the latter -> we : 2
the latter we -> reimplemented : 1
the latter we -> can : 1
latter we reimplemented -> the : 1
we reimplemented the -> fibonacci : 1
reimplemented the fibonacci -> algorithm : 1
the fibonacci algorithm -> loop : 1
fibonacci algorithm loop -> it : 1
algorithm loop it -> seems : 1
loop it seems -> that : 1
it seems that -> we : 1
it seems that -> this : 1
seems that we -> would : 1
that we would -> end : 1
that we would -> like : 1
end up fibonacci -> code : 1
up fibonacci code -> with : 1
fibonacci code with -> our : 1
code with our -> actual : 1
with our actual -> which : 1
our actual which -> solves : 1
actual which solves -> a : 1
which solves a -> different : 1
solves a different -> do : 1
a different do -> something : 1
different do something -> with : 1
something with which -> is : 1
with which is -> the : 1
with which is -> a : 1
is the current -> fibonacci : 1
is the current -> value : 2
the current fibonacci -> number : 1
current fibonacci number -> are : 1
fibonacci number are -> an : 1
number are an -> interesting : 1
are an interesting -> way : 1
an interesting way -> out : 1
an interesting way -> to : 1
interesting way out -> of : 1
way out of -> how : 1
out of how -> about : 1
of how about -> wrapping : 1
how about wrapping -> the : 1
about wrapping the -> steps : 1
wrapping the steps -> do : 1
the steps do -> in : 1
steps do in -> the : 1
do in the -> iterative : 1
do in the -> last : 1
do in the -> main : 2
in the iterative -> fibonacci : 1
the iterative fibonacci -> implementation : 1
iterative fibonacci implementation -> in : 1
fibonacci implementation in -> the : 1
implementation in the -> prefix : 1
in the prefix -> increment : 1
prefix increment operator -> implementation : 1
increment operator implementation -> of : 1
operator implementation of -> a : 1
implementation of a -> fibonacci : 1
implementation of a -> iterator : 1
of a fibonacci -> value : 1
a fibonacci value -> this : 1
fibonacci value this -> is : 1
is pretty as -> this : 1
pretty as this -> section : 1
as this section -> to : 1
this section to -> do : 1
section to do -> this : 1
this we concentrate -> on : 3
we concentrate on -> implementing : 1
we concentrate on -> filtering : 1
we concentrate on -> how : 1
concentrate on implementing -> an : 1
on implementing an -> iterator : 1
iterator that generates -> numbers : 1
that generates numbers -> from : 1
generates numbers from -> number : 1
numbers from number -> sequence : 1
from number sequence -> while : 1
number sequence while -> iterating : 1
sequence while iterating -> over : 1
while iterating over -> order : 1
while iterating over -> a : 1
iterating over order -> to : 1
over order to -> be : 1
order to be -> able : 8
order to be -> run : 1
to be able -> to : 16
be able to -> print : 3
be able to -> use : 1
be able to -> transform : 1
be able to -> call : 1
be able to -> the : 1
be able to -> compare : 1
be able to -> normalize : 1
be able to -> parse : 1
be able to -> read : 1
be able to -> make : 1
be able to -> express : 1
be able to -> check : 1
be able to -> distinguish : 1
be able to -> store : 1
be able to -> see : 1
be able to -> tell : 1
be able to -> perform : 1
be able to -> list : 1
able to print -> the : 2
able to print -> it : 1
print the fibonacci -> numbers : 1
the fibonacci numbers -> to : 1
fibonacci numbers to -> the : 1
numbers to the -> we : 1
to include a -> header : 1
to include a -> number : 1
to include a -> few : 1
include a header -> call : 1
a header call -> the : 1
header call the -> fibonacci : 1
call the fibonacci -> it : 1
the fibonacci it -> will : 1
fibonacci it will -> carry : 1
it will carry -> a : 1
will carry a -> member : 1
carry a member -> which : 1
a member which -> saves : 1
a member which -> can : 1
member which saves -> the : 1
which saves the -> index : 1
which saves the -> city : 1
saves the index -> position : 1
the index position -> in : 1
index position in -> the : 1
in the fibonacci -> and : 1
in the fibonacci -> range : 1
the fibonacci and -> and : 1
fibonacci and and -> will : 1
and and will -> be : 1
and and will -> this : 1
and will be -> the : 1
will be the -> variables : 1
will be the -> function : 1
will be the -> end : 1
will be the -> user : 1
will be the -> way : 1
will be the -> symlink : 1
be the variables -> the : 1
the variables the -> last : 1
variables the last -> two : 1
two fibonacci if -> instantiated : 1
fibonacci if instantiated -> with : 1
if instantiated with -> the : 1
instantiated with the -> default : 1
with the default -> a : 1
the default a -> fibonacci : 1
default a fibonacci -> iterator : 1
a fibonacci iterator -> will : 1
fibonacci iterator will -> be : 1
iterator will be -> initialized : 1
iterator will be -> the : 1
will be initialized -> to : 1
be initialized to -> the : 1
be initialized to -> hold : 1
initialized to the -> class : 1
to the class -> fibit : 1
the class fibit -> i : 1
class fibit i -> a : 1
fibit i a -> b : 1
i a b -> we : 1
a b we -> define : 1
b we define -> the : 1
we define the -> standard : 1
we define the -> while : 1
we define the -> needed : 1
we define the -> terminal : 1
define the standard -> another : 1
the standard another -> which : 1
standard another which -> allows : 1
another which allows -> us : 1
which allows us -> to : 1
allows us to -> initialize : 1
allows us to -> treat : 1
allows us to -> apply : 1
allows us to -> sporadically : 1
allows us to -> lock : 1
us to initialize -> the : 1
to initialize the -> iterator : 1
initialize the iterator -> at : 1
the iterator at -> any : 1
the iterator at -> some : 1
iterator at any -> fibonacci : 1
at any fibonacci -> number : 1
any fibonacci number -> explicit : 1
fibonacci number explicit -> dereferencing : 1
number explicit dereferencing -> our : 1
explicit dereferencing our -> iterator : 1
will just emit -> the : 1
just emit the -> fibonacci : 1
emit the fibonacci -> number : 1
the fibonacci number -> of : 1
fibonacci number of -> the : 1
number of the -> current : 1
number of the -> type : 1
the current const -> return : 1
current const return -> incrementing : 1
const return incrementing -> the : 1
return incrementing the -> iterator : 1
incrementing the iterator -> it : 1
incrementing the iterator -> to : 1
the iterator it -> will : 1
the iterator it -> is : 1
will move its -> state : 1
move its state -> to : 1
its state to -> the : 1
state to the -> next : 1
the next fibonacci -> this : 1
next fibonacci this -> function : 1
fibonacci this function -> contains : 1
this function contains -> the : 1
function contains the -> same : 1
the same code -> as : 1
same code as -> the : 1
code as the -> fibonacci : 1
as the fibonacci -> const : 1
the fibonacci const -> b : 1
fibonacci const b -> a : 1
const b a -> return : 1
b a return -> used : 1
a return used -> in : 1
return used in -> a : 1
used in a -> the : 1
a the incremented -> iterator : 1
the incremented iterator -> is : 1
incremented iterator is -> compared : 1
iterator is compared -> against : 1
compared against an -> end : 1
against an end -> for : 1
an end for -> which : 1
end for which -> we : 1
to define we -> are : 1
define we are -> only : 1
we are only -> comparing : 1
we are only -> interested : 1
we are only -> changing : 1
we are only -> doing : 1
are only comparing -> the : 1
only comparing the -> at : 1
comparing the at -> which : 1
which the fibonacci -> iterators : 1
the fibonacci iterators -> currently : 1
fibonacci iterators currently -> which : 1
iterators currently which -> makes : 1
currently which makes -> it : 1
which makes it -> easier : 1
which makes it -> a : 2
which makes it -> an : 1
which makes it -> similar : 1
which makes it -> more : 1
which makes it -> very : 1
easier to define -> the : 1
to define the -> end : 1
to define the -> probability : 1
define the end -> iterator : 1
end iterator for -> step : 1
iterator for step -> for : 1
for step for -> as : 1
step for as -> we : 1
for as we -> do : 1
need to expensively -> calculate : 1
to expensively calculate -> such : 1
expensively calculate such -> a : 1
calculate such a -> high : 1
such a high -> fibonacci : 1
a high fibonacci -> number : 1
high fibonacci number -> bool : 1
fibonacci number bool -> fibit : 1
number bool fibit -> const : 1
bool fibit const -> return : 1
fibit const return -> i : 1
fibit const return -> fibit : 1
fibit const return -> now : 1
return i order -> to : 1
i order to -> be : 1
i order to -> get : 1
able to use -> the : 1
use the fibonacci -> iterator : 1
the fibonacci iterator -> in : 1
the fibonacci iterator -> as : 1
fibonacci iterator in -> the : 1
the we have -> to : 1
the we have -> often : 1
the we have -> some : 1
the we have -> already : 1
the we have -> all : 1
implement a range -> class : 1
a range class -> we : 1
a range class -> around : 1
a range class -> us : 1
range class we -> call : 1
class we call -> it : 1
call it and -> its : 1
call it and -> that : 1
call it and -> for : 1
call it and -> replace : 1
it and its -> constructor : 1
and its constructor -> will : 1
and its constructor -> and : 1
its constructor will -> accept : 1
its constructor will -> also : 1
constructor will accept -> one : 1
will accept one -> parameter : 1
accept one parameter -> how : 1
one parameter how -> far : 1
parameter how far -> in : 1
how far in -> the : 1
far in the -> fibonacci : 1
the fibonacci range -> we : 1
fibonacci range we -> want : 1
range we want -> to : 1
want to class -> and : 1
to class and -> functions : 1
class and functions -> return : 1
and functions return -> iterators : 1
functions return iterators -> which : 1
return iterators which -> point : 1
iterators which point -> to : 1
the and fibit -> const : 1
and fibit const -> return : 1
const return fibit -> const : 1
return fibit const -> return : 1
const return now -> forget : 1
return now forget -> about : 1
now forget about -> all : 1
forget about all -> the : 1
about all the -> boilerplate : 1
all the boilerplate -> we : 1
the boilerplate we -> do : 1
boilerplate we do -> not : 1
need to touch -> it : 1
to touch it -> again : 1
touch it again -> as : 1
it again as -> we : 1
again as we -> have : 1
have a helper -> class : 1
a helper class -> now : 1
a helper class -> the : 1
helper class now -> which : 1
class now which -> nicely : 1
now which nicely -> hides : 1
which nicely hides -> all : 1
nicely hides all -> the : 1
hides all the -> implementation : 1
all the implementation -> details : 1
the implementation details -> from : 1
implementation details from -> print : 1
details from print -> the : 1
from print the -> first : 1
print the first -> fibonacci : 1
print the first -> item : 1
print the first -> thing : 1
the first fibonacci -> int : 1
first fibonacci int -> for : 1
fibonacci int for -> i : 1
the following shell -> order : 1
following shell order -> to : 1
shell order to -> use : 1
to use this -> iterator : 1
to use this -> in : 1
to use this -> to : 1
to use this -> is : 2
to use this -> cool : 1
to use this -> special : 1
use this iterator -> with : 1
this iterator with -> the : 1
iterator with the -> it : 1
iterator with the -> other : 1
the it must -> support : 1
it must support -> the : 1
must support the -> to : 1
support the to -> see : 1
the to see -> how : 1
to do have -> a : 1
do have a -> look : 1
at the which -> deals : 1
deals with exactly -> that : 1
with exactly that -> your : 1
exactly that your -> own : 1
that your own -> iterators : 1
stl iterator to -> think : 1
iterator to think -> in : 1
to think in -> terms : 1
think in terms -> of : 1
terms of this -> leads : 1
leads to very -> elegant : 1
to very elegant -> code : 1
to very elegant -> can : 1
very elegant code -> in : 1
elegant code in -> many : 2
code in many -> worry : 1
code in many -> example : 1
in many worry -> about : 1
many worry about -> compilers : 1
worry about compilers -> find : 1
about compilers find -> it : 1
compilers find it -> to : 1
find it to -> optimize : 1
it to optimize -> away : 1
to optimize away -> the : 1
optimize away the -> order : 1
away the order -> to : 1
the order to -> keep : 1
keep the example -> we : 1
the example we -> did : 1
example we did -> not : 1
did not do -> anything : 1
did not do -> any : 1
not do anything -> about : 1
do anything about -> but : 1
anything about but -> if : 1
about but if -> we : 1
if we the -> fibonacci : 1
we the fibonacci -> iterator : 1
fibonacci iterator as -> a : 1
iterator as a -> it : 1
as a it -> would : 1
a it would -> become : 1
it would become -> apparent : 1
would become apparent -> that : 1
become apparent that -> it : 1
apparent that it -> has : 1
has a usability -> instance : 1
a usability instance -> that : 1
usability instance that -> was : 1
instance that was -> created : 1
that was created -> with : 1
was created with -> a : 1
created with a -> constructor : 1
a constructor parameter -> will : 1
constructor parameter will -> only : 1
parameter will only -> be : 1
will only be -> used : 1
will only be -> called : 1
will only be -> one : 1
only be used -> as : 1
used as an -> end : 1
used as an -> input : 1
used as an -> iterable : 1
as an end -> iterator : 1
an end iterator -> because : 1
end iterator because -> it : 1
iterator because it -> does : 1
iterator because it -> works : 1
because it does -> not : 1
not contain valid -> fibonacci : 1
contain valid fibonacci -> our : 1
valid fibonacci our -> tiny : 1
fibonacci our tiny -> library : 1
our tiny library -> does : 1
tiny library does -> not : 1
library does not -> enforce : 1
does not enforce -> such : 1
not enforce such -> there : 1
enforce such there -> are : 1
such there are -> to : 1
there are to -> fix : 1
there are to -> adapt : 1
are to fix -> the : 1
to fix the -> constructor : 1
fix the constructor -> private : 1
the constructor private -> and : 1
constructor private and -> declare : 1
private and declare -> as : 1
and declare as -> a : 1
declare as a -> friend : 1
as a friend -> of : 1
a friend of -> this : 1
friend of this -> users : 1
of this users -> can : 1
this users can -> only : 1
users can only -> use : 1
can only use -> it : 1
only use it -> the : 1
use it the -> right : 1
use it the -> other : 1
it the right -> iterator : 1
the right iterator -> sentinels : 1
right iterator sentinels -> in : 1
iterator sentinels in -> order : 1
sentinels in order -> to : 1
to prevent users -> to : 1
prevent users to -> dereference : 1
users to dereference -> the : 1
to dereference the -> end : 1
dereference the end -> have : 1
the end have -> a : 1
end have a -> look : 1
at the recipe -> in : 1
at the recipe -> before : 1
the recipe in -> which : 1
the recipe in -> order : 1
the recipe in -> this : 1
recipe in which -> we : 1
which we introduce -> iterations : 1
we introduce iterations -> over : 1
introduce iterations over -> ranges : 1
ranges with the -> other : 1
with the other -> way : 1
with the other -> does : 1
with the other -> old : 1
with the other -> stl : 1
reverse iterator it -> is : 1
it is valuable -> to : 1
is valuable to -> iterate : 1
valuable to iterate -> over : 1
iterate over a -> range : 2
iterate over a -> string : 1
a range the -> other : 1
range the other -> way : 1
other way not -> forward : 1
way not forward -> but : 1
not forward but -> the : 1
forward but the -> as : 1
but the as -> well : 1
the as well -> as : 2
well as all -> stl : 1
as all stl -> algorithms : 1
stl algorithms usually -> iterate : 1
algorithms usually iterate -> over : 1
usually iterate over -> the : 1
iterate over the -> given : 1
iterate over the -> list : 2
iterate over the -> whole : 1
iterate over the -> standard : 2
iterate over the -> groups : 1
iterate over the -> filesystem : 1
iterate over the -> for : 1
iterate over the -> map : 1
over the given -> ranges : 1
the given ranges -> by : 1
given ranges by -> although : 1
ranges by although -> iterating : 1
by although iterating -> of : 1
although iterating of -> it : 1
iterating of it -> is : 1
possible to iterators -> into : 1
to iterators into -> a : 1
iterators into a -> layer : 1
into a layer -> an : 1
a layer an -> call : 1
layer an call -> effectively : 1
an call effectively -> into : 1
call effectively into -> sounds : 1
effectively into sounds -> like : 1
into sounds like -> a : 1
sounds like a -> lot : 2
like a lot -> of : 2
lot of boilerplate -> code : 1
of boilerplate code -> for : 1
of boilerplate code -> we : 1
boilerplate code for -> every : 1
boilerplate code for -> it : 1
code for every -> type : 1
for every type -> on : 1
every type on -> which : 1
type on which -> we : 1
on which we -> would : 1
on which we -> can : 2
which we would -> like : 1
we would like -> to : 2
would like to -> support : 1
would like to -> iterate : 1
like to support -> stl : 1
to support stl -> provides : 1
support stl provides -> a : 1
stl provides a -> which : 1
stl provides a -> specific : 1
provides a which -> helps : 1
a which helps -> us : 1
which helps us -> set : 1
which helps us -> in : 1
which helps us -> see : 1
which helps us -> print : 1
helps us set -> up : 1
us set up -> such : 1
us set up -> function : 1
set up such -> to : 1
up such to -> do : 1
such to do -> this : 1
we will use -> reverse : 1
we will use -> different : 1
we will use -> stl : 1
we will use -> using : 1
we will use -> it : 1
will use reverse -> iterators : 1
use reverse iterators -> in : 1
reverse iterators in -> different : 1
iterators in different -> just : 1
in different just -> to : 1
different just to -> show : 1
just to show -> how : 1
just to show -> that : 1
show how they -> are : 1
how they are -> need : 1
they are need -> to : 1
are need to -> include : 1
some headers as -> we : 1
headers as we -> declare : 1
as we declare -> that : 1
use namespace in -> order : 1
namespace the sake -> of : 1
sake of having -> something : 1
of having something -> to : 1
having something to -> iterate : 1
something to iterate -> instantiate : 1
to iterate instantiate -> a : 1
iterate instantiate a -> list : 1
instantiate a list -> of : 1
list of int -> l : 1
of int l -> print : 1
int l print -> these : 1
l print these -> integers : 1
print these integers -> in : 1
these integers in -> the : 1
integers in the -> reverse : 1
in the reverse -> in : 1
the reverse in -> order : 1
reverse in order -> to : 1
do we iterate -> over : 1
over the list -> by : 1
over the list -> in : 1
the list by -> using : 1
list by using -> the : 1
by using the -> and : 1
by using the -> helper : 1
by using the -> same : 1
by using the -> parallel : 1
using the and -> functions : 1
using the and -> see : 1
functions of and -> shove : 1
of and shove -> those : 1
and shove those -> values : 1
shove those values -> out : 1
those values out -> via : 1
values out via -> the : 1
out via the -> standard : 1
via the standard -> output : 1
the standard output -> using : 1
the standard output -> are : 1
the standard output -> might : 1
standard output using -> the : 1
output using the -> handy : 1
the handy cout -> a : 1
handy cout a -> container : 1
cout a container -> does : 1
a container does -> not : 1
container does not -> provide : 1
does not provide -> handy : 1
does not provide -> such : 1
does not provide -> a : 1
not provide handy -> and : 1
provide handy and -> at : 1
handy and at -> least : 1
and at least -> provides : 1
at least provides -> bidirectional : 1
least provides bidirectional -> the : 1
provides bidirectional the -> function : 1
bidirectional the function -> helps : 1
function helps it -> accepts : 1
helps it accepts -> iterators : 1
it accepts iterators -> and : 1
accepts iterators and -> converts : 1
iterators and converts -> them : 1
and converts them -> to : 1
converts them to -> cout : 1
them to cout -> and : 1
to cout and -> running : 1
and running our -> program : 2
running our program -> yields : 2
running our program -> with : 1
our program yields -> the : 2
following it order -> to : 1
it order to -> be : 1
able to transform -> a : 1
able to transform -> coordinates : 1
to transform a -> normal : 1
transform a normal -> iterator : 1
a normal iterator -> into : 1
a normal iterator -> and : 1
normal iterator into -> a : 1
iterator into a -> reverse : 1
into a reverse -> it : 1
a reverse it -> must : 1
reverse it must -> at : 1
it must at -> least : 1
it must at -> operator : 1
must at least -> have : 1
at least have -> support : 1
least have support -> for : 1
have support for -> bidirectional : 1
support for bidirectional -> is : 1
for bidirectional is -> fulfilled : 1
bidirectional is fulfilled -> by : 1
is fulfilled by -> any : 1
fulfilled by any -> iterator : 1
by any iterator -> of : 1
any iterator of -> category : 1
iterator of category -> or : 1
of category or -> reverse : 1
category or reverse -> iterator : 1
or reverse iterator -> kind : 1
reverse iterator kind -> of : 1
iterator kind of -> a : 1
kind of a -> normal : 1
kind of a -> crazy : 1
kind of a -> translating : 1
of a normal -> iterator : 1
of a normal -> distribution : 1
of a normal -> it : 1
normal iterator and -> its : 1
iterator and its -> interface : 1
and its interface -> but : 1
and its interface -> will : 1
its interface but -> it : 1
interface but it -> the : 1
but it the -> increment : 1
but it the -> whole : 1
it the increment -> operation : 1
the increment operation -> to : 1
increment operation to -> a : 1
operation to a -> decrement : 1
to a decrement -> next : 1
a decrement next -> detail : 1
decrement next detail -> is : 1
next detail is -> begin : 1
detail is begin -> and : 1
is begin and -> end : 1
and end iterator -> have : 1
and end iterator -> pair : 1
end iterator have -> a : 1
iterator have a -> look : 1
following which shows -> a : 1
following which shows -> an : 1
which shows a -> standard : 1
shows a standard -> numeric : 1
a standard numeric -> sequence : 1
standard numeric sequence -> kept : 1
numeric sequence kept -> in : 1
sequence kept in -> an : 1
kept in an -> iterable : 1
in an iterable -> if : 1
an iterable if -> the : 1
iterable if the -> sequence : 1
if the sequence -> goes : 1
the sequence goes -> from : 1
sequence goes from -> to : 1
to then the -> begin : 1
to then the -> stl : 1
to then the -> inconvenience : 1
then the begin -> iterator : 1
begin iterator has -> to : 1
iterator has to -> point : 1
has to point -> to : 1
to the element -> and : 1
to the element -> turn : 1
the element and -> the : 1
element and the -> end : 1
end iterator must -> point : 1
iterator must point -> one : 1
iterator must point -> and : 1
iterator must point -> to : 1
must point one -> element : 1
point one element -> defining : 1
one element defining -> reverse : 1
element defining reverse -> the : 1
defining reverse the -> iterator : 1
reverse the iterator -> must : 1
must point and -> the : 1
point and the -> iterator : 1
must point to -> the : 1
the element turn -> the : 1
element turn the -> book : 1
turn the book -> upside : 1
the book upside -> and : 1
book upside and -> see : 1
upside and see -> that : 1
that it completely -> makes : 1
it completely makes -> we : 1
completely makes we -> want : 1
makes we want -> our : 1
we want our -> own : 1
want our own -> custom : 1
own custom container -> classes : 1
custom container classes -> to : 1
container classes to -> support : 1
classes to support -> reverse : 1
to support reverse -> we : 1
support reverse we -> do : 1
reverse we do -> not : 1
to implement all -> these : 1
implement all these -> details : 1
all these details -> we : 1
these details we -> can : 1
details we can -> just : 1
can just wrap -> the : 1
can just wrap -> it : 1
just wrap the -> normal : 1
wrap the normal -> iterators : 1
the normal iterators -> into : 1
normal iterators into -> reverse : 1
iterators into reverse -> iterators : 1
into reverse iterators -> by : 1
reverse iterators by -> using : 1
iterators by using -> the : 1
the helper and -> it : 1
helper and it -> does : 1
and it does -> all : 1
and it does -> not : 2
it does all -> the : 1
all the operator -> rewiring : 1
the operator rewiring -> and : 1
operator rewiring and -> offset : 1
rewiring and offset -> corrections : 1
and offset corrections -> for : 1
offset corrections for -> iterations : 1
corrections for iterations -> over : 1
for iterations over -> ranges : 1
ranges with stl -> algorithms : 1
with stl algorithms -> loop : 1
stl algorithms loop -> assume : 1
algorithms loop assume -> that : 1
loop assume that -> the : 1
that the begin -> and : 1
and end positions -> of : 1
end positions of -> the : 1
positions of the -> iteration : 1
of the iteration -> are : 1
the iteration are -> known : 1
iteration are known -> in : 1
are known in -> some : 1
known in some -> it : 1
in some it -> is : 1
in some it -> may : 1
some it is -> hardly : 1
it is hardly -> possible : 1
is hardly possible -> to : 1
hardly possible to -> know : 1
possible to know -> the : 1
know the end -> it : 1
know the end -> of : 1
end it by -> very : 1
it by very -> simple : 1
by very simple -> example : 1
very simple example -> for : 1
very simple example -> around : 1
simple example for -> this : 1
this is iterating -> over : 1
is iterating over -> plain : 1
iterating over plain -> the : 1
over plain the -> length : 1
plain the length -> of : 1
length of which -> known : 1
of which known -> the : 1
which known the -> code : 1
known the code -> which : 1
the code which -> iterates : 1
code which iterates -> over : 1
iterates over such -> strings : 1
over such strings -> usually : 1
such strings usually -> looks : 1
strings usually looks -> like : 1
usually looks like -> char : 1
looks like char -> const : 1
like char const -> char : 1
char const char -> c : 1
char const char -> did : 1
const char c -> do : 1
const char c -> const : 1
char c do -> something : 1
c do something -> with : 2
something with c -> only : 1
something with c -> the : 1
with c only -> way : 1
c only way -> to : 1
way to put -> this : 1
to put this -> into : 1
to put this -> rule : 1
put this into -> a : 1
this into a -> loop : 1
into a loop -> seems : 1
a loop seems -> to : 1
loop seems to -> be : 1
seems to be -> wrapping : 1
seems to be -> an : 1
to be wrapping -> it : 1
be wrapping it -> into : 1
wrapping it into -> an : 1
an which has -> and : 1
which has and -> c : 1
has and c -> do : 1
and c do -> something : 1
with c the -> constructor : 1
c the constructor -> of : 1
constructor of will -> iterate : 1
of will iterate -> over : 1
will iterate over -> the : 1
the whole string -> before : 1
the whole string -> as : 1
whole string before -> our : 1
string before our -> loop : 1
before our loop -> can : 1
our loop can -> iterate : 1
loop can iterate -> over : 1
can iterate over -> since : 1
can iterate over -> the : 1
can iterate over -> all : 1
iterate over since -> we : 1
over since we -> also : 1
since we also -> have : 1
we also have -> but : 1
also have but -> its : 1
have but its -> constructor : 1
but its constructor -> will : 1
constructor will also -> iterate : 1
will also iterate -> through : 1
also iterate through -> the : 1
string this is -> not : 1
is not worth -> the : 1
not worth the -> real : 1
worth the real -> hassle : 1
the real hassle -> for : 1
real hassle for -> but : 1
hassle for but -> this : 1
for but this -> is : 1
is also only -> an : 1
also only an -> example : 1
only an example -> for : 1
example for which -> can : 1
for which can -> be : 1
can be worth -> the : 1
be worth the -> hassle : 1
worth the hassle -> in : 1
the hassle in -> also : 1
hassle in also -> has : 1
in also has -> to : 1
also has to -> deal : 1
has to deal -> with : 2
deal with this -> when : 1
deal with this -> type : 1
with this when -> it : 1
this when it -> captures : 1
when it captures -> input : 1
it captures input -> from : 1
captures input from -> as : 1
input from as -> its : 1
from as its -> end : 1
as its end -> iterator : 1
its end iterator -> cannot : 1
end iterator cannot -> realistically : 1
iterator cannot realistically -> point : 1
cannot realistically point -> end : 1
realistically point end -> of : 1
point end of -> the : 1
of the user -> input : 1
of the user -> terminal : 1
user input while -> the : 1
input while the -> user : 1
input while the -> function : 1
while the user -> is : 1
while the user -> code : 1
the user is -> comes : 1
user is comes -> with : 1
is comes with -> the : 1
comes with the -> great : 1
comes with the -> useful : 1
with the great -> news : 1
the great news -> that : 1
great news that -> it : 1
news that it -> does : 1
does not constrain -> begin : 1
not constrain begin -> and : 1
constrain begin and -> end : 1
and end iterators -> to : 1
and end iterators -> of : 2
end iterators to -> be : 1
iterators to be -> of : 1
the same section -> demonstrates : 1
same section demonstrates -> how : 1
section demonstrates how -> to : 1
demonstrates how to -> put : 1
put this rule -> to : 1
this rule to -> to : 1
rule to to -> do : 1
to to do -> this : 1
to to do -> will : 1
to to do -> with : 1
we will build -> an : 1
will build an -> iterator : 1
build an iterator -> together : 1
an iterator together -> with : 1
iterator together with -> a : 1
together with a -> range : 1
together with a -> predicate : 1
together with a -> file : 1
together with a -> default : 1
together with a -> time : 1
with a range -> which : 1
with a range -> as : 1
a range which -> enables : 1
range which enables -> us : 1
us to iterate -> over : 1
over a string -> with : 1
a string with -> unknown : 1
a string with -> note : 1
a string with -> the : 1
string with unknown -> without : 1
with unknown without -> finding : 1
unknown without finding -> the : 1
without finding the -> position : 1
finding the position -> as : 1
the position as -> we : 1
position as we -> need : 1
as we need -> to : 1
to include iterator -> sentinel : 1
include iterator sentinel -> is : 1
iterator sentinel is -> a : 1
sentinel is a -> very : 1
is a very -> central : 1
is a very -> precise : 1
is a very -> interesting : 1
is a very -> generic : 1
is a very -> simple : 2
is a very -> nice : 1
is a very -> important : 1
is a very -> for : 1
a very central -> element : 1
a very central -> role : 1
very central element -> of : 1
central element of -> this : 1
element of this -> its : 1
of this its -> class : 1
this its class -> definition : 1
its class definition -> can : 1
class definition can -> stay : 1
definition can stay -> completely : 1
can stay completely -> class : 1
stay completely class -> we : 1
completely class we -> implement : 1
class we implement -> the : 1
we implement the -> it : 1
we implement the -> helper : 1
we implement the -> which : 1
we implement the -> other : 1
we implement the -> synchronized : 1
we implement the -> function : 1
implement the it -> will : 1
it will contain -> a : 1
will contain a -> string : 1
contain a string -> which : 1
string which is -> the : 1
string which is -> no : 1
string which is -> a : 1
is the iterate -> class : 1
the iterate class -> const : 1
iterate class const -> char : 1
class const char -> constructor : 1
class const char -> only : 1
const char constructor -> just : 1
char constructor just -> initializes : 1
constructor just initializes -> the : 1
just initializes the -> internal : 1
initializes the internal -> string : 1
the internal string -> pointer : 1
the internal string -> stream : 1
internal string pointer -> to : 1
string pointer to -> whatever : 1
pointer to whatever -> string : 1
to whatever string -> the : 1
whatever string the -> user : 1
string the user -> make : 1
the user make -> the : 1
user make the -> constructor : 1
make the constructor -> explicit : 1
the constructor explicit -> in : 1
constructor explicit in -> order : 1
explicit in order -> to : 1
to prevent accidental -> implicit : 1
prevent accidental implicit -> conversions : 1
accidental implicit conversions -> from : 1
implicit conversions from -> strings : 1
conversions from strings -> to : 1
from strings to -> string : 1
strings to string -> explicit : 1
to string explicit -> char : 1
string explicit char -> dereferencing : 1
explicit char dereferencing -> the : 1
char dereferencing the -> iterator : 1
iterator at some -> it : 1
at some it -> will : 1
some it will -> just : 1
some it will -> smallest : 1
will just return -> the : 1
just return the -> character : 1
just return the -> note : 1
just return the -> because : 1
return the character -> value : 1
return the character -> positions : 1
the character value -> at : 1
character value at -> this : 1
value at this -> char : 1
value at this -> we : 2
at this char -> const : 1
this char const -> return : 1
char const return -> the : 1
the iterator just -> increments : 1
iterator just increments -> the : 1
just increments the -> position : 1
increments the position -> in : 1
the return is -> the : 1
return is the -> interesting : 1
the interesting we -> implement : 1
interesting we implement -> operator : 1
we implement operator -> for : 1
implement operator for -> as : 1
operator for as -> it : 1
for as it -> is : 1
as it is -> used : 1
as it is -> possible : 1
as it is -> easy : 1
it is used -> by : 1
it is used -> in : 1
it is used -> as : 1
is used by -> stl : 1
used by stl -> algorithms : 2
by stl algorithms -> and : 1
by stl algorithms -> oit : 1
stl algorithms and -> the : 1
stl algorithms and -> tasks : 1
algorithms and the -> we : 1
and the we -> do : 1
and the we -> let : 1
and the we -> declared : 1
do not implement -> it : 1
not implement it -> for : 1
implement it for -> the : 1
it for the -> comparison : 1
it for the -> since : 1
it for the -> first : 1
for the comparison -> of : 1
the comparison of -> iterators : 1
the comparison of -> the : 1
comparison of iterators -> with : 1
of iterators with -> other : 1
iterators with other -> but : 1
with other but -> for : 1
other but for -> comparing : 1
but for comparing -> iterators : 1
for comparing iterators -> with : 1
comparing iterators with -> when : 1
iterators with when -> an : 1
with when an -> iterator : 1
when an iterator -> with : 1
when an iterator -> is : 1
an iterator with -> another : 1
an iterator with -> the : 1
iterator with another -> iterator : 1
with another iterator -> we : 1
another iterator we -> can : 1
iterator we can -> only : 1
iterator we can -> even : 1
we can only -> check : 1
we can only -> provide : 1
we can only -> find : 1
we can only -> do : 1
can only check -> if : 1
only check if -> their : 1
check if their -> internal : 1
if their internal -> string : 1
their internal string -> pointers : 1
internal string pointers -> both : 1
string pointers both -> point : 1
pointers both point -> to : 1
both point to -> the : 1
to the same -> which : 1
to the same -> control : 1
to the same -> it : 1
to the same -> thing : 1
to the same -> another : 1
which is somewhat -> comparing : 1
is somewhat comparing -> against : 1
somewhat comparing against -> an : 1
comparing against an -> empty : 1
against an empty -> sentinel : 1
an empty sentinel -> we : 1
empty sentinel we -> can : 1
sentinel we can -> completely : 1
we can completely -> different : 1
can completely different -> check : 1
completely different check -> if : 1
different check if -> the : 1
check if the -> character : 1
check if the -> user : 1
check if the -> path : 1
check if the -> directory : 1
if the character -> our : 1
if the character -> in : 1
if the character -> compared : 1
the character our -> iterator : 1
character our iterator -> points : 1
our iterator points -> to : 1
points to is -> a : 1
points to is -> equal : 1
to is a -> terminating : 1
is a terminating -> this : 1
a terminating this -> represents : 1
terminating this represents -> the : 1
this represents the -> of : 1
represents the of -> the : 1
of the bool -> const : 1
the bool const -> return : 2
const return s -> nullptr : 1
return s nullptr -> order : 1
s nullptr order -> to : 1
nullptr order to -> use : 1
use this in -> a : 1
need a range -> class : 1
range class around -> which : 1
class around which -> emits : 1
around which emits -> the : 1
which emits the -> begin : 1
which emits the -> substrings : 1
emits the begin -> and : 1
and end class -> const : 1
end class const -> char : 1
const char only -> thing : 1
char only thing -> the : 1
only thing the -> user : 1
thing the user -> needs : 1
the user needs -> to : 2
user needs to -> provide : 1
user needs to -> type : 1
needs to provide -> during : 1
to provide during -> instantiation : 1
provide during instantiation -> is : 1
during instantiation is -> the : 1
instantiation is the -> string : 1
the string that -> will : 1
string that will -> be : 1
that will be -> iterated : 1
that will be -> shuffled : 1
will be iterated -> char : 1
be iterated char -> return : 1
iterated char return -> a : 1
char return a -> from : 1
char return a -> x : 1
return a from -> the : 1
from the which -> points : 1
the which points -> to : 1
of the from -> the : 1
the from the -> we : 1
the from the -> numeric : 1
from the we -> just : 1
from the we -> defined : 1
from the we -> look : 1
from the we -> print : 1
from the we -> can : 1
from the we -> allowed : 1
we just return -> the : 2
we just return -> which : 1
we just return -> a : 1
return the note -> that : 1
note that without -> the : 1
that without the -> sentinel : 1
without the sentinel -> we : 1
the sentinel we -> would : 1
sentinel we would -> also : 1
we would also -> return : 1
would also return -> an : 1
also return an -> but : 1
return an but -> from : 1
an but from -> where : 1
but from where -> should : 1
from where should -> we : 1
where should we -> know : 1
should we know -> the : 1
we know the -> end : 1
the string if -> we : 1
string if we -> search : 1
if we search -> for : 1
we search for -> it : 1
search for it -> in : 1
for it in -> const : 1
it in const -> return : 1
in const return -> const : 1
we can immediately -> use : 1
can immediately use -> strings : 1
immediately use strings -> that : 1
use strings that -> come : 1
strings that come -> from : 1
that come from -> the : 1
come from the -> user : 1
from the user -> are : 1
from the user -> and : 1
the user are -> one : 1
user are one -> example : 1
are one example -> input : 1
one example input -> we : 1
example input we -> cannot : 1
input we cannot -> know : 1
we cannot know -> the : 1
we cannot know -> what : 1
we cannot know -> for : 1
cannot know the -> length : 1
know the length -> of : 1
length of in -> in : 1
of in in -> order : 1
in in order -> to : 2
order to force -> the : 1
to force the -> user : 1
force the user -> to : 1
the user to -> give : 1
the user to -> store : 1
the user to -> just : 1
the user to -> we : 1
the user to -> enter : 4
the user to -> query : 1
the user to -> type : 1
the user to -> please : 1
user to give -> some : 1
to give some -> we : 1
give some we -> will : 1
some we will -> abort : 1
we will abort -> the : 1
will abort the -> program : 1
abort the program -> if : 1
the program if -> the : 1
program if the -> user : 1
if the user -> did : 1
if the user -> input : 1
if the user -> correctly : 1
if the user -> provided : 3
if the user -> provides : 1
the user did -> not : 1
user did not -> provide : 1
did not provide -> at : 1
not provide at -> least : 1
provide at least -> one : 1
at least one -> parameter : 1
at least one -> pair : 1
least one parameter -> when : 1
one parameter when -> launching : 1
parameter when launching -> the : 1
when launching the -> program : 1
launching the program -> in : 1
launching the program -> with : 1
the program in -> the : 2
the program in -> order : 1
the program in -> my : 1
the program in -> an : 1
program in the -> int : 1
program in the -> shell : 1
in the int -> char : 1
the int char -> if : 1
int char if -> provide : 1
int char if -> cout : 5
int char if -> argc : 1
char if provide -> one : 1
if provide one -> return : 1
provide one return -> the : 1
one return the -> program : 1
return the program -> is : 1
program is still -> being : 1
is still being -> executed : 1
still being executed -> up : 1
being executed up -> to : 1
executed up to -> this : 1
up to this -> then : 1
to this then -> we : 1
this then we -> know : 1
this then we -> should : 1
then we know -> that : 1
know that contains -> some : 1
that contains some -> user : 1
that contains some -> unnecessary : 1
that contains some -> feed : 1
that contains some -> duplicate : 1
contains some user -> for : 1
some user for -> c : 1
user for c -> and : 1
for c and -> running : 1
c and running -> the : 1
following the loop -> prints : 1
the loop prints -> what : 1
loop prints what -> we : 1
prints what we -> just : 1
what we just -> entered : 1
we just entered -> is : 1
just entered is -> not : 1
entered is not -> a : 1
not a as -> this : 1
not a as -> it : 1
a as this -> is : 1
as this is -> just : 1
as this is -> the : 1
is just quite -> a : 1
just quite a -> for : 1
quite a for -> the : 1
a for the -> implementation : 1
for the implementation -> of : 1
of a iterator -> this : 1
a iterator this -> iteration : 1
iterator this iteration -> termination : 1
this iteration termination -> method : 1
iteration termination method -> will : 1
termination method will -> help : 1
method will help -> you : 1
will help you -> in : 1
help you in -> implementing : 1
you in implementing -> your : 1
in implementing your -> own : 1
implementing your own -> iterators : 1
own iterators wherever -> you : 1
iterators wherever you -> run : 1
wherever you run -> into : 1
you run into -> where : 1
run into where -> the : 1
into where the -> with : 1
where the with -> an : 1
the with an -> end : 1
with an end -> is : 1
an end is -> not : 1
end is not -> checking : 1
is not checking -> iterator : 1
not checking iterator -> code : 1
with checked matter -> how : 1
checked matter how -> useful : 1
matter how useful -> iterators : 1
how useful iterators -> and : 1
useful iterators and -> what : 1
iterators and what -> generic : 1
and what generic -> interface : 1
what generic interface -> they : 1
generic interface they -> iterators : 1
interface they iterators -> can : 1
they iterators can -> easily : 1
iterators can easily -> be : 1
easily be just -> as : 1
be just as -> when : 1
be just as -> in : 1
just as when -> dealing : 1
as when dealing -> with : 1
dealing with code -> must : 1
with code must -> be : 1
code must be -> written : 1
must be written -> in : 1
be written in -> a : 1
written in a -> way : 1
way that it -> dereferences : 1
way that it -> lies : 1
way that it -> can : 1
that it dereferences -> them : 1
it dereferences them -> when : 1
dereferences them when -> they : 1
them when they -> point : 1
when they point -> to : 1
they point to -> invalid : 1
point to invalid -> memory : 1
to invalid memory -> same : 1
invalid memory same -> applies : 1
memory same applies -> to : 1
applies to but -> there : 1
to but there -> are : 1
but there are -> lot : 1
but there are -> also : 1
there are lot -> of : 1
are lot of -> state : 1
lot of state -> when : 1
of state when -> an : 1
state when an -> iterator : 1
iterator is valid -> and : 1
is valid and -> when : 1
valid and when -> it : 1
it is those -> can : 1
is those can -> easily : 1
those can easily -> be : 1
easily be learned -> by : 1
be learned by -> studying : 1
learned by studying -> the : 1
by studying the -> stl : 1
studying the stl -> documentation : 1
the stl documentation -> a : 1
the stl documentation -> for : 2
the stl documentation -> if : 1
the stl documentation -> this : 1
stl documentation a -> will : 1
documentation a will -> be : 1
a will be -> possible : 1
will be possible -> to : 1
be possible to -> write : 2
be possible to -> make : 1
be possible to -> match : 1
be possible to -> process : 1
to write buggy -> the : 1
write buggy the -> best : 1
buggy the best -> such : 1
the best such -> buggy : 1
best such buggy -> code : 1
such buggy code -> blows : 1
buggy code blows -> up : 1
code blows up -> in : 1
blows up in -> front : 1
up in front -> of : 1
it is being -> and : 1
is being and -> on : 1
being and on -> the : 1
and on the -> in : 1
on the in -> many : 1
on the in -> addition : 1
on the in -> we : 1
on the in -> order : 1
the in many -> the : 1
in many the -> code : 1
many the code -> just : 1
the code just -> silently : 1
code just silently -> seems : 1
just silently seems -> to : 1
silently seems to -> although : 1
seems to although -> it : 1
to although it -> dereferences : 1
although it dereferences -> dangling : 1
it dereferences dangling -> and : 1
dereferences dangling and -> so : 1
dangling and so -> in : 1
so in such -> we : 1
in such we -> want : 1
in such we -> can : 1
in such we -> just : 2
in such we -> still : 1
such we want -> to : 1
want to be -> if : 1
want to be -> able : 1
if we produce -> undefined : 1
we produce undefined -> the : 1
produce undefined the -> gnu : 1
undefined the gnu -> stl : 1
the gnu stl -> implementation : 1
gnu stl implementation -> has : 1
stl implementation has -> a : 1
implementation has a -> and : 1
a and the -> gnu : 1
a and the -> second : 1
and the gnu -> compiler : 1
the gnu compiler -> as : 1
gnu compiler as -> well : 1
compiler as well -> as : 1
as the llvm -> clang : 1
the llvm clang -> compiler : 1
llvm clang compiler -> both : 1
clang compiler both -> support : 1
compiler both support -> can : 1
both support can -> be : 1
support can be -> used : 1
used to produce -> and : 1
to produce and -> binaries : 1
to produce and -> a : 1
produce and binaries -> for : 1
and binaries for -> which : 1
binaries for which -> immediately : 1
for which immediately -> blow : 1
which immediately blow -> up : 1
immediately blow up -> on : 1
blow up on -> a : 1
up on a -> large : 1
on a large -> variety : 1
a large variety -> of : 1
large variety of -> this : 1
variety of this -> is : 1
this is to -> and : 1
this is to -> break : 1
is to and -> as : 1
to and as -> we : 1
and as we -> will : 1
we will demonstrate -> in : 1
will demonstrate in -> this : 1
demonstrate in this -> the : 1
this the microsoft -> visual : 1
the microsoft visual -> standard : 1
microsoft visual standard -> library : 1
visual standard library -> also : 1
standard library also -> provides : 1
library also provides -> a : 1
also provides a -> possibility : 1
provides a possibility -> to : 1
a possibility to -> activate : 1
possibility to activate -> additional : 1
to activate additional -> to : 1
activate additional to -> do : 1
additional to do -> this : 1
do this write -> a : 1
this write a -> program : 1
write a program -> accesses : 1
write a program -> multiple : 1
write a program -> that : 6
write a program -> something : 1
a program accesses -> an : 1
program accesses an -> invalidated : 1
accesses an invalidated -> we : 1
an invalidated we -> include : 1
invalidated we include -> instantiate : 1
we include instantiate -> a : 1
include instantiate a -> vector : 1
integers and get -> an : 1
and get an -> iterator : 1
get an iterator -> to : 1
first the value -> we : 1
the value we -> apply : 1
the value we -> initialized : 1
the value we -> are : 1
the value we -> initially : 1
value we apply -> on : 1
we apply on -> the : 1
we apply on -> them : 1
apply on the -> vector : 1
on the vector -> in : 1
vector in order -> to : 3
order to ensure -> that : 1
to ensure that -> its : 1
ensure that its -> capacity : 1
that its capacity -> is : 1
its capacity is -> as : 1
capacity is as -> its : 1
is as its -> implementation : 1
as its implementation -> allocate : 1
its implementation allocate -> more : 1
implementation allocate more -> memory : 1
allocate more memory -> than : 1
more memory than -> necessary : 1
memory than necessary -> as : 1
than necessary as -> a : 1
necessary as a -> little : 1
as a little -> reserve : 1
as a little -> piece : 1
a little reserve -> to : 1
little reserve to -> item : 1
reserve to item -> int : 1
to item int -> v : 1
item int v -> const : 1
int v const -> auto : 1
v const auto -> it : 1
const auto it -> we : 1
auto it we -> print : 1
it we print -> the : 1
print the dereferenced -> which : 1
the dereferenced which -> is : 1
dereferenced which is -> completely : 1
which is completely -> append : 1
is completely append -> a : 1
completely append a -> new : 1
append a new -> number : 1
a new number -> to : 1
new number to -> the : 1
number to the -> as : 1
number to the -> path : 1
to the as -> the : 1
to the as -> in : 1
as the vector -> is : 1
not large enough -> to : 1
large enough to -> take : 1
enough to take -> another : 1
to take another -> it : 1
take another it -> will : 1
another it will -> its : 1
another it will -> return : 1
it will its -> it : 1
it will its -> input : 1
will its it -> does : 1
its it does -> this : 1
does this by -> allocating : 1
this by allocating -> a : 1
by allocating a -> new : 2
allocating a new -> and : 1
allocating a new -> vector : 1
new and larger -> the : 1
and larger the -> existing : 1
larger the existing -> items : 1
existing items to -> that : 1
items to that -> new : 1
to that new -> chunk : 1
that new chunk -> and : 1
new chunk and -> then : 1
chunk and then -> deleting : 1
and then deleting -> the : 1
then deleting the -> memory : 1
deleting the memory -> from : 1
the memory from -> the : 1
from the vector -> through : 1
from the vector -> using : 1
from the vector -> to : 1
from the vector -> of : 1
the vector through -> this : 1
vector through this -> iterator : 1
through this iterator -> this : 1
this iterator this -> is : 1
iterator this is -> when : 1
this is when -> the : 1
is when the -> vector : 1
when the vector -> moved : 1
the vector moved -> all : 1
vector moved all -> its : 1
moved all its -> values : 1
all its values -> to : 1
its values to -> the : 1
values to the -> new : 1
values to the -> and : 1
the new chunk -> of : 1
chunk of threw -> away : 1
of threw away -> the : 1
threw away the -> old : 1
away the old -> it : 1
the old it -> did : 1
old it did -> not : 1
it did not -> tell : 1
it did not -> call : 1
did not tell -> the : 1
not tell the -> iterator : 1
tell the iterator -> about : 1
the iterator about -> this : 1
iterator about this -> this : 1
about this this -> means : 1
iterator is still -> pointing : 1
is still pointing -> to : 1
still pointing to -> the : 1
to the old -> and : 1
to the old -> c : 1
to the old -> so : 1
the old and -> we : 1
old and we -> cannot : 1
and we cannot -> know : 1
cannot know what -> really : 1
know what really -> happened : 1
what really happened -> to : 1
really happened to -> it : 1
happened to it -> since : 1
happened to it -> when : 1
to it since -> bad : 1
it since bad -> bad : 1
since bad bad -> and : 1
bad bad and -> running : 1
bad and running -> this : 1
and running this -> program : 1
running this program -> leads : 1
this program leads -> to : 1
to a flawless -> the : 1
a flawless the -> app : 1
flawless the app -> but : 1
the app but -> what : 1
the app but -> this : 1
app but what -> it : 1
but what it -> prints : 1
what it prints -> when : 1
it prints when -> dereferencing : 1
prints when dereferencing -> the : 1
when dereferencing the -> invalidated : 1
dereferencing the invalidated -> pointer : 1
the invalidated pointer -> is : 1
invalidated pointer is -> pretty : 1
pointer is pretty -> much : 1
pretty much leaving -> it : 1
much leaving it -> like : 1
leaving it like -> this : 1
it like this -> is : 1
like this is -> pretty : 1
is pretty but -> at : 1
pretty but at -> this : 1
at this no -> one : 1
this no one -> tells : 1
no one tells -> us : 1
one tells us -> about : 1
us about that -> bug : 1
about that bug -> if : 1
that bug if -> we : 1
bug if we -> see : 1
see it flags -> come : 1
it flags come -> to : 1
flags come to -> the : 1
come to the -> the : 1
the the stl -> implementation : 1
the stl implementation -> supports : 1
the stl implementation -> can : 1
stl implementation supports -> a : 1
implementation supports a -> preprocessor : 1
supports a preprocessor -> macro : 1
a preprocessor macro -> called : 1
preprocessor macro called -> which : 1
macro called which -> activates : 1
called which activates -> a : 1
which activates a -> lot : 1
activates a lot -> of : 1
lot of sanity -> checking : 1
of sanity checking -> code : 1
sanity checking code -> in : 1
checking code in -> the : 1
the program but -> it : 1
the program but -> before : 1
program but it -> we : 1
but it we -> can : 1
we can activate -> it : 1
can activate it -> by : 1
activate it by -> adding : 1
it by adding -> a : 1
by adding a -> flag : 1
adding a flag -> to : 1
a flag to -> our : 1
flag to our -> compiler : 1
to our compiler -> command : 1
our compiler command -> or : 1
compiler command or -> define : 1
command or define -> it : 1
or define it -> in : 1
define it in -> the : 1
in the head -> of : 1
the head of -> the : 2
head of the -> code : 1
head of the -> a : 1
the code file -> before : 1
code file before -> the : 1
file before the -> as : 1
before the as -> it : 1
as it kills -> the : 1
it kills the -> app : 1
kills the app -> in : 1
the app in -> the : 2
app in the -> mactivate : 1
app in the -> folder : 1
in the mactivate -> different : 1
the mactivate different -> compile : 1
mactivate different compile -> the : 1
different compile the -> code : 2
compile the code -> with : 2
code with clan -> useful : 1
with clan useful -> for : 1
clan useful for -> checked : 1
useful for checked -> iterators : 1
for checked iterators -> microsoft : 1
checked iterators microsoft -> visual : 1
iterators microsoft visual -> compiler : 1
microsoft visual compiler -> implementation : 1
visual compiler implementation -> of : 1
compiler implementation of -> the : 1
implementation of the -> stl : 1
implementation of the -> item : 1
the stl also -> has : 2
the stl also -> tries : 1
stl also has -> debug : 1
stl also has -> binary : 1
also has debug -> but : 1
has debug but -> they : 1
debug but they -> serve : 1
but they serve -> the : 1
they serve the -> purpose : 1
serve the purpose -> of : 1
purpose of debugging -> not : 1
of debugging not -> user : 1
debugging not user -> for : 1
not user for -> user : 1
user for user -> you : 1
for user you -> can : 1
user you can -> activate : 1
you can activate -> different : 1
can activate different -> compile : 1
activate different compile -> the : 1
code with clang -> using : 1
with clang using -> the : 1
clang using the -> and : 1
the and see -> what : 1
see what this -> is : 1
see what this -> means : 1
what this is -> a : 1
a very precise -> description : 1
very precise description -> of : 1
precise description of -> what : 1
description of what -> went : 1
of what went -> the : 1
what went the -> screenshot : 1
went the screenshot -> would : 1
the screenshot would -> have : 1
screenshot would have -> of : 1
would have of -> this : 1
have of this -> book : 1
of this book -> if : 1
this book if -> it : 1
book if it -> been : 1
if it been -> note : 1
it been note -> that : 1
been note that -> this : 1
a as it -> also : 1
as it also -> works : 1
it also works -> with : 1
also works with -> you : 1
works with you -> get : 1
with you get -> runtime : 1
you get runtime -> errors : 1
get runtime errors -> because : 1
runtime errors because -> some : 1
errors because some -> library : 1
because some library -> is : 1
some library is -> then : 1
is then your -> compiler : 1
then your compiler -> did : 1
your compiler did -> not : 1
compiler did not -> automatically : 1
did not automatically -> ship : 1
not automatically ship -> with : 1
automatically ship with -> and : 1
ship with and -> try : 1
with and try -> to : 1
try to install -> them : 1
to install them -> via : 1
install them via -> your : 1
them via your -> package : 1
via your package -> manager : 1
your package manager -> or : 1
package manager or -> something : 1
manager or something -> it : 1
or something it -> we : 1
something it we -> have : 1
we have we -> did : 1
have we did -> not : 1
did not need -> to : 1
need to anything -> in : 1
to anything in -> the : 1
anything in the -> code : 1
code in order -> to : 2
to get this -> kind : 1
get this kind -> of : 1
kind of feature -> for : 1
of feature for -> buggy : 1
feature for buggy -> it : 1
for buggy it -> basically : 1
buggy it basically -> came : 1
it basically came -> for : 1
basically came for -> just : 1
came for just -> by : 1
for just by -> appending : 1
just by appending -> some : 1
by appending some -> compiler : 1
appending some compiler -> flags : 1
some compiler flags -> to : 1
compiler flags to -> the : 1
flags to the -> command : 1
to the command -> line : 1
the command line -> when : 1
the command line -> consists : 1
command line when -> compiling : 1
line when compiling -> the : 1
when compiling the -> feature : 1
compiling the feature -> is : 1
the feature is -> implemented : 1
feature is implemented -> by : 1
is implemented by -> a : 1
implemented by a -> sanitizer : 1
by a sanitizer -> usually : 1
a sanitizer usually -> consists : 1
sanitizer usually consists -> of : 1
usually consists of -> an : 1
of an additional -> compiler : 1
an additional compiler -> a : 1
additional compiler a -> runtime : 1
compiler a runtime -> when : 1
a runtime when -> sanitizers : 1
runtime when sanitizers -> are : 1
when sanitizers are -> the : 1
sanitizers are the -> compiler : 1
are the compiler -> will : 2
compiler will add -> and : 1
will add and -> to : 1
add and to -> the : 1
and to the -> which : 1
the which results -> from : 1
which results from -> our : 1
which results from -> connecting : 1
results from our -> at : 1
from our at -> the : 1
our at the -> sanitizer : 1
at the sanitizer -> libraries : 1
the sanitizer libraries -> then : 1
sanitizer libraries then -> linked : 1
libraries then linked -> into : 1
then linked into -> the : 1
linked into the -> program : 1
into the program -> binary : 1
into the program -> echo : 1
the program binary -> for : 1
program binary for -> functions : 1
binary for functions -> in : 1
for functions in -> order : 1
functions in order -> to : 1
to the program -> deals : 1
to the program -> we : 1
to the program -> and : 1
to the program -> in : 1
the program deals -> with : 1
program deals with -> the : 1
with the memory -> it : 1
the memory it -> can : 1
memory it can -> detect : 1
it can detect -> different : 1
can detect different -> kinds : 1
detect different kinds -> of : 1
different kinds of -> just : 1
kinds of just -> to : 1
of just to -> list : 1
just to list -> a : 1
to list a -> triggers : 1
list a triggers -> whenever : 1
a triggers whenever -> we : 1
triggers whenever we -> access : 1
whenever we access -> an : 1
we access an -> or : 1
access an or -> anything : 1
an or anything -> similar : 1
or anything similar -> outside : 1
anything similar outside -> its : 1
similar outside its -> legitimate : 1
outside its legitimate -> memory : 1
its legitimate memory -> this : 1
legitimate memory this -> triggers : 1
memory this triggers -> if : 1
this triggers if -> we : 1
this triggers if -> an : 1
triggers if we -> reference : 1
if we reference -> heap : 1
we reference heap -> memory : 1
reference heap memory -> after : 1
heap memory after -> it : 1
memory after it -> was : 1
after it was -> already : 1
it was already -> freed : 1
was already freed -> we : 1
already freed we -> did : 1
freed we did -> in : 1
this this triggers -> if : 1
triggers if an -> integer : 1
if an integer -> variable : 1
an integer variable -> overflows : 1
integer variable overflows -> by : 1
variable overflows by -> calculating : 1
overflows by calculating -> with : 1
by calculating with -> values : 1
calculating with values -> not : 1
with values not -> fit : 1
values not fit -> into : 1
not fit into -> the : 1
fit into the -> for : 2
into the for -> signed : 1
into the for -> i : 1
the for signed -> the : 1
for signed the -> arithmetic : 1
signed the arithmetic -> wraparound : 1
the arithmetic wraparound -> is : 1
arithmetic wraparound is -> undefined : 1
wraparound is undefined -> some : 1
is undefined some -> architectures : 1
undefined some architectures -> cannot : 1
some architectures cannot -> access : 1
architectures cannot access -> it : 1
cannot access it -> has : 1
access it has -> a : 1
has a weird -> alignment : 1
a weird alignment -> in : 1
weird alignment in -> are : 1
alignment in are -> many : 1
in are many -> more : 1
are many more -> such : 1
many more such -> bugs : 1
more such bugs -> that : 1
such bugs that -> sanitizers : 1
bugs that sanitizers -> can : 1
that sanitizers can -> is : 1
sanitizers can is -> to : 1
can is to -> activate : 1
is to activate -> all : 1
to activate all -> available : 1
activate all available -> sanitizers : 1
all available sanitizers -> because : 1
available sanitizers because -> they : 1
sanitizers because they -> make : 1
because they make -> the : 1
they make the -> program : 1
make the program -> it : 1
make the program -> and : 1
make the program -> a : 1
the program it -> is : 1
the program it -> built : 1
program it is -> good : 1
it is good -> style : 1
style to always -> activate : 1
to always activate -> sanitizers : 1
always activate sanitizers -> in : 1
activate sanitizers in -> your : 1
sanitizers in your -> and : 1
in your and -> are : 1
your and are -> a : 1
and are a -> lot : 1
are a lot -> of : 6
of different sanitizers -> for : 1
different sanitizers for -> different : 1
sanitizers for different -> bug : 1
for different bug -> and : 1
different bug and -> they : 1
bug and they -> are : 1
and they are -> all : 2
and they are -> differing : 1
and they are -> indeed : 1
they are all -> still : 1
they are all -> read : 1
they are all -> moved : 1
they are all -> to : 1
they are all -> documented : 1
they are all -> called : 1
are all still -> under : 1
all still under -> we : 1
still under we -> can : 1
under we can -> and : 1
we can and -> should : 1
we can and -> leads : 1
can and should -> inform : 1
and should inform -> ourselves : 1
should inform ourselves -> on : 1
inform ourselves on -> the : 1
ourselves on the -> internet : 1
on the internet -> about : 1
on the internet -> instead : 1
the internet about -> how : 1
internet about how -> we : 1
about how we -> can : 1
we can improve -> our : 1
can improve our -> test : 1
can improve our -> error : 1
improve our test -> the : 1
our test the -> gcc : 1
test the gcc -> and : 1
the gcc and -> llvm : 1
gcc and llvm -> project : 1
and llvm project -> homepages : 1
llvm project homepages -> list : 1
project homepages list -> their : 1
homepages list their -> sanitizing : 1
list their sanitizing -> capabilities : 1
their sanitizing capabilities -> in : 1
sanitizing capabilities in -> their : 1
capabilities in their -> online : 1
in their online -> documentation : 1
their online documentation -> the : 1
online documentation the -> table : 1
documentation the table -> of : 1
the table of -> testing : 1
table of testing -> with : 1
of testing with -> sanitizers : 1
testing with sanitizers -> is : 1
with sanitizers is -> something : 1
sanitizers is something -> programmer : 1
is something programmer -> should : 1
something programmer should -> be : 1
programmer should be -> aware : 1
should be aware -> of : 1
be aware of -> and : 1
be aware of -> the : 1
aware of and -> this : 1
of and this -> is : 1
of and this -> can : 1
not the case -> in : 1
case in alarmingly -> many : 1
in alarmingly many -> although : 1
alarmingly many although -> buggy : 1
many although buggy -> code : 1
although buggy code -> is : 1
buggy code is -> the : 1
code is the -> point : 1
code is the -> last : 1
is the point -> for : 1
the point for -> all : 1
point for all -> the : 1
for all the -> and : 1
for all the -> input : 1
for all the -> possible : 1
for all the -> distributions : 1
the and out -> you : 1
the and out -> of : 1
and out you -> get : 1
out you get -> a : 1
you get a -> new : 1
you get a -> completely : 1
get a new -> job : 1
a new job -> as : 1
new job as -> a : 1
job as a -> software : 1
as a software -> check : 1
a software check -> if : 1
software check if -> your : 1
check if your -> uses : 1
if your uses -> all : 1
your uses all -> the : 1
uses all the -> sanitizing : 1
all the sanitizing -> possibilities : 1
the sanitizing possibilities -> there : 1
sanitizing possibilities there -> if : 1
possibilities there if -> you : 1
there if you -> have : 1
if you have -> the : 1
if you have -> trouble : 1
if you have -> never : 1
you have the -> unique : 1
have the unique -> chance : 1
the unique chance -> to : 1
unique chance to -> fix : 1
chance to fix -> important : 1
to fix important -> and : 1
fix important and -> sneaky : 1
important and sneaky -> bugs : 1
and sneaky bugs -> on : 1
sneaky bugs on -> your : 1
bugs on your -> first : 1
on your first -> day : 1
your first day -> at : 1
first day at -> your : 1
day at your -> own : 1
at your own -> zip : 1
zip iterator programming -> languages : 1
iterator programming languages -> lead : 1
programming languages lead -> to : 1
languages lead to -> different : 1
lead to different -> programming : 1
to different programming -> this : 1
different programming this -> because : 1
programming this because -> there : 1
this because there -> are : 1
there are different -> ways : 1
there are different -> mutex : 1
there are different -> types : 1
are different ways -> to : 2
ways to express -> and : 1
express and they -> are : 1
they are differing -> in : 1
are differing in -> their : 1
differing in their -> elegance : 1
in their elegance -> for : 1
their elegance for -> each : 1
elegance for each -> use : 1
for each use -> that : 1
each use that -> is : 1
use that is -> no : 1
that is no -> every : 1
is no every -> language : 1
no every language -> was : 1
every language was -> designed : 1
language was designed -> with : 1
was designed with -> specific : 1
designed with specific -> very : 1
with specific very -> special : 1
specific very special -> kind : 1
very special kind -> of : 1
special kind of -> programming : 1
kind of programming -> style : 1
of programming style -> is : 1
programming style is -> it : 1
style is it -> is : 1
is it is -> magically : 1
is it is -> the : 1
is it is -> designed : 1
is it is -> just : 1
it is magically -> different : 1
is magically different -> from : 1
magically different from -> the : 1
different from the -> programming : 1
different from the -> classic : 1
from the programming -> which : 1
the programming which -> programmers : 1
programming which programmers -> are : 1
which programmers are -> used : 1
programmers are used -> while : 1
are used while -> this : 1
used while this -> style : 1
while this style -> is : 1
this style is -> very : 1
style is very -> it : 1
is very it -> enables : 1
very it enables -> extremely : 1
it enables extremely -> elegant : 1
enables extremely elegant -> code : 1
extremely elegant code -> in : 1
in many example -> elegance : 1
many example elegance -> is : 1
example elegance is -> the : 1
elegance is the -> implementation : 1
is the implementation -> of : 1
implementation of such -> mathematical : 1
of such mathematical -> dot : 1
such mathematical dot -> given : 1
mathematical dot given -> two : 1
dot given two -> mathematical : 1
given two mathematical -> applying : 1
two mathematical applying -> the : 1
mathematical applying the -> dot : 1
applying the dot -> product : 1
the dot product -> to : 1
the dot product -> of : 3
the dot product -> cout : 1
dot product to -> them : 1
product to them -> means : 1
to them means -> pairwise : 1
them means pairwise -> multiplying : 1
means pairwise multiplying -> of : 1
pairwise multiplying of -> the : 1
multiplying of the -> numbers : 1
of the numbers -> at : 1
of the numbers -> we : 1
of the numbers -> a : 1
of the numbers -> the : 1
of the numbers -> are : 2
the numbers at -> the : 1
numbers at the -> same : 1
the same positions -> in : 1
same positions in -> the : 1
positions in the -> vector : 1
positions in the -> calculate : 1
vector and then -> summing : 1
and then summing -> up : 1
then summing up -> all : 1
summing up all -> of : 1
summing up all -> the : 1
up all of -> those : 1
all of those -> multiplied : 1
of those multiplied -> the : 1
those multiplied the -> dot : 1
multiplied the dot -> product : 1
dot product of -> two : 3
product of two -> vectors : 3
of two vectors -> is : 2
of two vectors -> with : 1
two vectors is -> e : 1
two vectors is -> solved : 1
vectors is e -> b : 1
is e b -> e : 1
e b e -> c : 1
b e c -> of : 1
e c of -> we : 1
c of we -> can : 1
can do that -> with : 1
can do that -> using : 1
that with c -> and : 1
with c and -> it : 1
c and it -> could : 1
and it could -> look : 1
it could look -> like : 1
like the a -> b : 1
the a b -> double : 1
a b double -> sum : 1
b double sum -> for : 1
double sum for -> i : 1
i sum sum -> does : 1
sum sum does -> it : 1
sum does it -> look : 1
does it look -> like : 1
it look like -> in : 1
look like in -> those : 1
look like in -> a : 1
like in those -> languages : 1
in those languages -> be : 1
those languages be -> considered : 1
languages be considered -> is : 1
be considered is -> a : 1
considered is a -> purely : 1
is a purely -> functional : 1
a purely functional -> and : 1
a purely functional -> but : 1
purely functional and -> this : 1
functional and this -> is : 1
is how you -> can : 1
how you can -> calculate : 1
you can calculate -> the : 1
can calculate the -> dot : 1
calculate the dot -> product : 1
two vectors with -> a : 1
vectors with a -> magical : 1
with a magical -> is : 1
a magical is -> not : 1
magical is not -> a : 1
not a purely -> functional : 1
purely functional but -> it : 1
functional but it -> supports : 1
but it supports -> similar : 1
it supports similar -> patterns : 1
supports similar patterns -> to : 1
similar patterns to -> some : 1
patterns to some -> as : 1
to some as -> seen : 1
some as seen -> in : 1
as seen in -> the : 1
seen in the -> next : 1
the next stl -> provides : 1
next stl provides -> a : 1
a specific algorithm -> called : 1
specific algorithm called -> which : 1
algorithm called which -> solves : 1
called which solves -> this : 1
which solves this -> specific : 1
solves this specific -> problem : 1
this specific problem -> in : 1
specific problem in -> one : 1
problem in one -> but : 1
in one but -> the : 1
one but the -> point : 1
one but the -> mandelbrot : 1
but the point -> is : 1
the point is -> that : 1
point is that -> in : 1
point is that -> it : 1
is that in -> such : 1
that in such -> code : 1
in such code -> can : 1
such code can -> be : 1
code can be -> written : 1
code can be -> without : 1
code can be -> eliminated : 1
can be written -> the : 1
be written the -> in : 1
written the in -> only : 1
the in only -> one : 1
one line specific -> library : 1
line specific library -> functions : 1
specific library functions -> that : 1
library functions that -> support : 1
functions that support -> that : 1
that support that -> exact : 1
support that exact -> delving : 1
that exact delving -> into : 1
exact delving into -> the : 1
delving into the -> explanations : 1
into the explanations -> of : 1
the explanations of -> such : 1
explanations of such -> foreign : 1
of such foreign -> an : 1
such foreign an -> important : 1
foreign an important -> commonality : 1
an important commonality -> examples : 1
important commonality examples -> is : 1
commonality examples is -> the : 1
examples is the -> magical : 1
is the magical -> what : 1
the magical what -> does : 1
magical what does -> it : 1
what does it -> it : 1
what does it -> mean : 1
what does it -> the : 1
does it it -> takes : 1
it it takes -> the : 1
it takes the -> two : 1
takes the two -> vectors : 1
the two vectors -> and : 1
two vectors and -> and : 1
vectors and and -> transforms : 1
vectors and and -> decompressing : 1
and and transforms -> them : 1
and transforms them -> to : 1
and transforms them -> during : 1
transforms them to -> a : 1
transforms them to -> lower : 1
them to a -> and : 1
them to a -> call : 1
to a and -> result : 1
a and result -> in : 1
and result in -> when : 1
result in when -> they : 1
in when they -> are : 1
they are zipped -> have : 1
are zipped have -> a : 1
zipped have a -> close : 1
have a close -> look : 1
a close look -> at : 2
close look at -> really : 1
close look at -> the : 1
look at really -> similar : 1
at really similar -> to : 1
really similar to -> how : 1
really similar to -> the : 1
similar to how -> zip : 1
to how zip -> fasteners : 1
how zip fasteners -> relevant : 1
zip fasteners relevant -> point : 1
fasteners relevant point -> is : 1
relevant point is -> that : 1
is that it -> is : 5
is that it -> does : 1
is that it -> prints : 1
is that it -> can : 1
is that it -> will : 1
is that it -> overloads : 1
is that it -> should : 1
it is now -> possible : 1
is now possible -> to : 1
now possible to -> iterate : 1
iterate over range -> where : 1
over range where -> pairwise : 1
range where pairwise -> multiplications : 1
where pairwise multiplications -> can : 1
pairwise multiplications can -> be : 1
multiplications can be -> done : 1
be done and -> then : 1
done and then -> summed : 1
and then summed -> up : 1
then summed up -> to : 1
summed up to -> an : 1
up to an -> accumulator : 1
to an accumulator -> exactly : 1
to an accumulator -> variable : 1
an accumulator exactly -> the : 1
accumulator exactly the -> same : 1
the same happens -> in : 1
same happens in -> the : 1
happens in the -> haskell : 1
happens in the -> main : 1
happens in the -> the : 1
happens in the -> next : 1
happens in the -> this : 1
happens in the -> hope : 1
happens in the -> hist : 1
in the haskell -> and : 2
the haskell and -> python : 2
haskell and python -> without : 1
haskell and python -> we : 1
and python without -> adding : 1
python without adding -> any : 1
without adding any -> loop : 1
adding any loop -> or : 1
any loop or -> index : 1
any loop or -> manual : 1
loop or index -> variable : 1
or index variable -> will : 1
index variable will -> not : 1
variable will not -> be : 1
possible to make -> the : 1
make the code -> exactly : 1
the code exactly -> as : 1
code exactly as -> elegant : 1
exactly as elegant -> and : 1
as elegant and -> generic : 1
elegant and generic -> as : 1
generic as in -> haskell : 1
as in haskell -> or : 1
in haskell or -> but : 1
haskell or but -> this : 1
but this section -> explains : 1
this section explains -> how : 1
section explains how -> to : 1
to implement similar -> magic : 1
implement similar magic -> using : 1
similar magic using -> by : 1
magic using by -> implementing : 1
using by implementing -> a : 1
implementing a the -> example : 1
a the example -> problem : 1
the example problem -> of : 1
example problem of -> calculating : 1
problem of calculating -> the : 1
of calculating the -> dot : 1
calculating the dot -> product : 1
vectors is solved -> more : 1
is solved more -> elegantly : 1
solved more elegantly -> by : 1
more elegantly by -> specific : 1
elegantly by specific -> which : 1
by specific which -> are : 1
specific which are -> beyond : 1
which are beyond -> the : 1
are beyond the -> scope : 1
beyond the scope -> of : 1
scope of this -> this : 1
scope of this -> chapter : 1
of this this -> section : 1
of this this -> they : 1
of this this -> gets : 1
this this section -> tries : 1
this section tries -> to : 1
section tries to -> show : 1
tries to show -> how : 1
show how much -> libraries : 1
how much libraries -> can : 1
much libraries can -> help : 1
libraries can help -> in : 1
can help in -> writing : 1
help in writing -> expressive : 1
in writing expressive -> code : 1
writing expressive code -> by : 1
expressive code by -> providing : 1
code by providing -> extremely : 1
by providing extremely -> generic : 1
providing extremely generic -> building : 1
extremely generic building -> to : 1
generic building to -> do : 1
building to do -> this : 1
we will recreate -> the : 1
will recreate the -> function : 1
recreate the function -> as : 1
the function as -> known : 1
function as known -> from : 1
as known from -> haskell : 1
known from haskell -> or : 1
from haskell or -> it : 1
haskell or it -> will : 1
or it will -> be : 1
will be hardcoded -> to : 1
be hardcoded to -> vectors : 1
be hardcoded to -> the : 1
hardcoded to vectors -> of : 1
to vectors of -> variables : 1
vectors of variables -> in : 1
variables in order -> to : 1
order to not -> distract : 1
order to not -> but : 1
order to not -> tamper : 1
order to not -> segment : 1
order to not -> block : 1
to not distract -> from : 1
not distract from -> iterator : 1
distract from iterator -> we : 1
from iterator we -> need : 1
iterator we need -> to : 2
include some we -> define : 1
some we define -> the : 1
define the while -> iterating : 1
the while iterating -> over : 1
iterating over a -> we : 1
over a we -> will : 1
a we will -> get : 1
will get a -> pair : 1
will get a -> feeling : 1
get a pair -> of : 2
pair of values -> from : 1
the two containers -> at : 1
the two containers -> that : 1
two containers at -> every : 1
two containers at -> the : 1
containers at every -> iteration : 1
at every iteration -> this : 1
every iteration this -> means : 1
iteration this means -> that : 1
that we iterate -> over : 1
iterate over two -> containers : 1
over two containers -> at : 1
containers at the -> same : 2
the same class -> zip : 1
same class zip -> iterator : 1
class zip iterator -> needs : 1
zip iterator needs -> to : 1
iterator needs to -> save : 1
needs to save -> two : 1
to save two -> one : 1
save two one -> for : 1
two one for -> each : 1
one for each -> using : 1
for each using -> constructor : 1
each using constructor -> simply : 1
using constructor simply -> saves : 1
constructor simply saves -> the : 1
simply saves the -> iterators : 1
saves the iterators -> from : 1
the iterators from -> the : 1
iterators from the -> two : 1
iterators from the -> input : 1
two containers that -> we : 1
containers that we -> would : 1
like to iterate -> the : 1
to iterate the -> zip : 1
iterate the zip -> iterator : 1
the zip iterator -> means : 1
the zip iterator -> gives : 1
zip iterator means -> incrementing : 1
iterator means incrementing -> both : 1
means incrementing both -> the : 1
incrementing both the -> member : 1
both the member -> return : 1
both the member -> iterators : 1
the member return -> zip : 1
member return zip -> iterators : 1
return zip iterators -> are : 1
zip iterators are -> both : 1
iterators are both -> the : 1
are both the -> member : 1
the member iterators -> are : 1
member iterators are -> unequal : 1
iterators are unequal -> to : 1
are unequal to -> their : 1
unequal to their -> counterparts : 1
to their counterparts -> in : 1
their counterparts in -> the : 1
counterparts in the -> other : 1
the other zip -> one : 1
other zip one -> would : 1
zip one would -> use : 1
one would use -> logical : 1
would use logical -> or : 1
use logical or -> instead : 1
logical or instead -> of : 1
or instead of -> and : 1
instead of and -> but : 1
of and but -> imagine : 1
and but imagine -> that : 1
but imagine that -> the : 1
the ranges are -> not : 1
ranges are not -> of : 1
are not of -> equal : 1
not of equal -> in : 1
of equal in -> such : 1
equal in such -> it : 1
in such it -> would : 1
in such it -> came : 1
such it would -> not : 1
to match end -> iterators : 1
match end iterators -> at : 1
end iterators at -> the : 1
iterators at the -> same : 1
same this we -> can : 1
same this we -> have : 1
we can abort -> the : 1
can abort the -> loop : 1
abort the loop -> when : 1
the loop when -> we : 1
loop when we -> reach : 1
when we reach -> the : 1
we reach the -> end : 1
we reach the -> which : 1
iterator of bool -> const : 1
of bool const -> return : 1
const return equality -> comparison : 1
return equality comparison -> operator : 1
equality comparison operator -> is : 1
comparison operator is -> just : 1
operator is just -> implemented : 1
is just implemented -> using : 1
just implemented using -> the : 1
using the other -> but : 1
other but negating -> the : 1
but negating the -> bool : 1
negating the bool -> const : 1
return the zip -> iterator : 1
zip iterator gives -> access : 1
iterator gives access -> to : 1
gives access to -> the : 1
to the elements -> of : 1
the elements of -> both : 1
elements of both -> the : 1
both the containers -> at : 1
the containers at -> the : 1
the same const -> return : 1
same const return -> was : 1
const return was -> the : 1
return was the -> iterator : 1
make the iterator -> compatible : 1
the iterator compatible -> with : 1
iterator compatible with -> stl : 1
with stl so -> we : 1
stl so we -> define : 1
so we define -> the : 1
so we define -> this : 1
define the needed -> type : 1
the needed type -> trait : 1
needed type trait -> boilerplate : 1
type trait boilerplate -> code : 1
trait boilerplate code -> for : 1
code for it -> basically : 1
for it basically -> says : 1
it basically says -> that : 1
basically says that -> this : 1
says that this -> iterator : 1
that this iterator -> is : 1
this iterator is -> just : 1
just a forward -> and : 1
a forward and -> it : 1
and it returns -> pairs : 1
it returns pairs -> of : 1
returns pairs of -> double : 1
pairs of double -> values : 1
of double values -> when : 1
double values when -> although : 1
values when although -> we : 1
when although we -> do : 1
although we do -> not : 1
do not use -> in : 1
do not use -> an : 1
do not use -> the : 1
not use in -> this : 1
use in this -> different : 1
in this different -> implementations : 1
this different implementations -> of : 1
different implementations of -> the : 1
implementations of the -> stl : 1
implementations of the -> same : 1
the stl might -> need : 1
stl might need -> it : 1
might need it -> in : 1
order to namespace -> std : 1
to namespace std -> template : 1
using using using -> long : 1
using using long -> next : 1
using long next -> step : 1
long next step -> is : 1
to define a -> range : 1
to define a -> regular : 2
to define a -> custom : 1
to define a -> structure : 1
define a range -> class : 1
range class us -> zip : 1
class us zip -> iterators : 1
us zip iterators -> from : 1
zip iterators from -> its : 1
zip iterators from -> and : 1
iterators from its -> and : 1
from its and -> class : 1
its and class -> zipper : 1
and class zipper -> using : 1
class zipper using -> needs : 1
zipper using needs -> to : 1
using needs to -> reference : 1
needs to reference -> two : 1
to reference two -> existing : 1
reference two existing -> containers : 1
two existing containers -> in : 1
existing containers in -> order : 1
containers in order -> to : 1
order to form -> zip : 1
to form zip -> iterators : 1
form zip iterators -> from : 1
iterators from and -> functions : 1
iterators from and -> so : 1
from and functions -> just : 1
and functions just -> feed : 1
functions just feed -> pairs : 1
just feed pairs -> of : 1
feed pairs of -> begin : 1
pairs of begin -> and : 1
of begin and -> end : 1
and end pointers -> in : 1
end pointers in -> order : 1
pointers in order -> to : 2
order to construct -> zip : 1
to construct zip -> iterator : 1
construct zip iterator -> instances : 1
zip iterator instances -> from : 1
iterator instances from -> const : 1
instances from const -> return : 1
from const return -> const : 1
const return as -> in : 1
return as in -> the : 1
and python we -> define : 1
python we define -> two : 1
we define two -> vectors : 1
we define two -> function : 1
we define two -> cheap : 1
we define two -> helper : 1
define two vectors -> of : 1
two vectors of -> we : 1
vectors of we -> also : 1
of we also -> define : 1
we also define -> that : 1
also define that -> we : 1
define that we -> use : 3
use namespace within -> the : 1
namespace within the -> main : 1
within the main -> function : 1
main function by -> int : 1
main function by -> instantiating : 1
function by int -> using : 1
by int using -> namespace : 1
int using namespace -> a : 1
using namespace a -> b : 1
using namespace a -> complex : 1
using namespace a -> type : 1
namespace a b -> zipper : 1
a b zipper -> object : 1
b zipper object -> combines : 1
zipper object combines -> them : 1
object combines them -> to : 1
combines them to -> one : 1
them to one -> range : 1
to one range -> where : 1
one range where -> we : 1
range where we -> see : 1
where we see -> pairs : 1
we see pairs -> of : 1
see pairs of -> and : 1
pairs of and -> zipper : 1
of and zipper -> zipped : 1
and zipper zipped -> will : 1
zipper zipped will -> use : 1
zipped will use -> in : 1
will use in -> order : 1
use in order -> to : 8
order to sum -> all : 1
to sum all -> the : 1
sum all the -> items : 1
the range we -> do : 1
range we do -> it : 1
do it that -> would : 1
it that would -> mean : 1
that would mean -> that : 1
would mean that -> we : 3
would mean that -> the : 1
that we sum -> up : 1
we sum up -> the : 1
we sum up -> empty : 1
sum up the -> instances : 1
sum up the -> size : 1
up the instances -> of : 1
instances of for -> which : 1
of for which -> the : 1
of for which -> we : 1
for which the -> concept : 1
for which the -> predicate : 2
which the concept -> of : 1
the concept of -> sum : 1
the concept of -> you : 1
the concept of -> how : 1
the concept of -> linear : 1
concept of sum -> is : 1
of sum is -> not : 1
sum is not -> we : 1
not we will -> define : 1
we will define -> a : 3
will define a -> helper : 1
will define a -> closure : 1
will define a -> type : 1
define a helper -> lambda : 1
define a helper -> function : 1
a helper lambda -> a : 1
helper lambda a -> multiplies : 1
lambda a multiplies -> its : 1
a multiplies its -> and : 1
multiplies its and -> adds : 1
its and adds -> it : 1
and adds it -> to : 1
adds it to -> an : 1
it to an -> works : 1
it to an -> html : 1
to an works -> well : 1
an works well -> with : 1
works well with -> lambdas : 1
well with lambdas -> with : 1
with lambdas with -> such : 1
lambdas with such -> a : 1
with such a -> const : 1
with such a -> reduce : 1
with such a -> just : 1
with such a -> separation : 1
such a const -> auto : 1
auto return sum -> we : 1
return sum we -> feed : 1
sum we feed -> it : 1
we feed it -> to : 1
we feed it -> into : 1
we feed it -> a : 1
it to together -> with : 1
to together with -> the : 1
with the begin -> and : 1
end iterator pair -> of : 1
iterator pair of -> the : 1
pair of the -> zipped : 1
pair of the -> first : 1
of the zipped -> ranges : 1
the zipped ranges -> and : 1
zipped ranges and -> a : 1
ranges and a -> start : 1
and a start -> value : 1
a start value -> of : 1
start value of -> for : 1
of for the -> accumulator : 1
of for the -> top : 1
for the accumulator -> in : 1
the accumulator in -> the : 1
accumulator in the -> contains : 1
in the contains -> the : 1
the contains the -> sum : 1
contains the sum -> of : 1
sum of the -> const : 1
sum of the -> squares : 1
of the const -> auto : 1
the const auto -> print : 1
the const auto -> match : 1
const auto print -> the : 1
auto print the -> dot : 1
print the dot -> product : 1
dot product cout -> and : 1
product cout and -> running : 1
the correct that -> was : 1
correct that was -> a : 1
that was a -> of : 1
was a of -> work : 1
a of work -> for : 1
of work for -> a : 1
of work for -> processing : 1
work for a -> little : 1
for a little -> bit : 1
little bit of -> syntax : 1
bit of syntax -> and : 1
of syntax and -> still : 1
syntax and still -> not : 1
and still not -> as : 1
still not as -> elegant : 1
not as elegant -> as : 1
as elegant as -> haskell : 1
elegant as haskell -> code : 1
as haskell code -> can : 1
haskell code can -> be : 1
can be without -> any : 1
be without any -> a : 1
without any a -> big : 1
any a big -> flaw : 1
a big flaw -> is : 1
big flaw is -> the : 1
flaw is the -> hardcoded : 1
is the hardcoded -> nature : 1
the hardcoded nature -> of : 1
hardcoded nature of -> our : 1
nature of our -> little : 1
of our little -> zip : 1
our little zip -> only : 1
little zip only -> works : 1
zip only works -> on : 1
only works on -> ranges : 1
only works on -> regular : 1
works on ranges -> of : 1
on ranges of -> double : 1
on ranges of -> in : 1
on ranges of -> arbitrary : 1
ranges of double -> with : 1
of double with -> a : 1
double with a -> bit : 1
with a bit -> of : 1
a bit of -> template : 1
bit of template -> code : 1
of template code -> and : 1
template code and -> some : 1
code and some -> type : 1
and some type -> the : 1
some type the -> zipper : 1
type the zipper -> can : 1
the zipper can -> be : 1
zipper can be -> made : 1
can be made -> more : 1
be made more -> this : 1
made more this -> it : 1
more this it -> could : 1
this it could -> combine : 1
it could combine -> lists : 1
could combine lists -> and : 1
combine lists and -> or : 1
lists and or -> deques : 1
and or deques -> and : 1
or deques and -> even : 1
deques and even -> if : 1
and even if -> these : 1
even if these -> are : 1
if these are -> specialized : 1
these are specialized -> on : 1
are specialized on -> completely : 1
are specialized on -> a : 1
specialized on completely -> different : 1
on completely different -> container : 1
completely different container -> item : 1
different container item -> amount : 1
container item amount -> of : 1
item amount of -> work : 1
amount of work -> and : 1
amount of work -> in : 1
amount of work -> for : 1
of work and -> thought : 1
work and thought -> needed : 1
and thought needed -> in : 1
thought needed in -> order : 1
order to really -> and : 1
to really and -> correctly : 1
really and correctly -> make : 1
and correctly make -> such : 1
correctly make such -> classes : 1
make such classes -> generic : 1
such classes generic -> is : 1
classes generic is -> not : 1
generic is not -> to : 1
is not to -> be : 1
not to be -> such : 1
to be such -> libraries : 1
be such libraries -> do : 1
such libraries do -> already : 1
libraries do already -> one : 1
do already one -> popular : 1
already one popular -> library : 1
one popular library -> is : 1
popular library is -> the : 1
library is the -> it : 1
is the it -> is : 1
is the it -> looks : 1
is the it -> accepts : 1
is the it -> provides : 1
to the if -> you : 1
to the if -> return : 1
the if you -> came : 1
if you came -> here : 1
you came here -> to : 1
came here to -> see : 1
here to see -> the : 1
to see the -> most : 1
to see the -> strengths : 1
see the most -> elegant : 1
the most elegant -> way : 1
the most elegant -> we : 1
the most elegant -> the : 1
most elegant way -> to : 1
most elegant way -> is : 1
elegant way to -> do : 1
elegant way to -> set : 1
do a in -> and : 1
a in and -> really : 1
in and really -> care : 1
and really care -> about : 1
really care about -> the : 1
care about the -> concept : 1
care about the -> return : 1
about the concept -> of : 2
concept of you -> should : 1
of you should -> have : 1
you should have -> a : 1
should have a -> look : 2
look at see -> for : 1
at see for -> int : 1
see for int -> a : 1
for int a -> b : 1
int a b -> is : 1
a b is -> a : 1
b is a -> very : 1
a very interesting -> which : 1
very interesting which -> supports : 1
interesting which supports -> zippers : 1
which supports zippers -> and : 1
supports zippers and -> all : 1
zippers and all -> other : 1
and all other -> kinds : 1
all other kinds -> of : 1
other kinds of -> magic : 1
kinds of magic -> iterator : 1
of magic iterator -> and : 1
magic iterator and -> so : 1
iterator and so -> the : 1
so the it -> is : 1
it is inspired -> by : 1
is inspired by -> the : 1
inspired by the -> boost : 1
by the boost -> ranges : 1
the boost ranges -> and : 1
boost ranges and -> for : 1
ranges and for -> some : 1
and for some -> it : 1
for some it -> looked : 1
some it looked -> like : 1
it looked like -> it : 1
looked like it -> would : 1
like it would -> find : 1
it would find -> its : 1
would find its -> way : 1
find its way -> into : 1
its way into -> but : 1
way into but -> we : 1
into but we -> will : 1
will have to -> wait : 1
have to wait -> for : 1
to wait for -> the : 2
wait for the -> the : 1
wait for the -> next : 2
wait for the -> t : 1
wait for the -> same : 1
wait for the -> value : 1
for the the -> reason : 1
for the the -> fourier : 1
for the the -> code : 1
the the reason -> why : 1
the reason why -> this : 1
reason why this -> is : 1
why this is -> so : 1
this is so -> that : 1
is so that -> it : 1
so that it -> will : 1
so that it -> can : 2
so that it -> is : 1
it will improve -> the : 1
will improve the -> possibilities : 1
improve the possibilities -> and : 1
the possibilities and -> code : 1
possibilities and code -> in : 1
and code in -> by : 1
code in by -> composing : 1
in by composing -> functionality : 1
by composing functionality -> from : 1
composing functionality from -> blocks : 1
functionality from blocks -> of : 1
from blocks of -> are : 1
blocks of are -> some : 1
of are some -> very : 1
are some very -> simple : 1
some very simple -> examples : 1
very simple examples -> in : 1
simple examples in -> its : 1
examples in its -> the : 1
in its the -> sum : 1
its the sum -> of : 1
of the squares -> of : 1
the squares of -> all : 1
the squares of -> the : 1
squares of all -> numbers : 1
of all numbers -> from : 1
all numbers from -> to : 1
numbers from to -> const : 1
from to const -> int : 1
to const int -> sum : 1
const int sum -> out : 1
int sum out -> all : 1
sum out all -> uneven : 1
out all uneven -> numbers : 1
all uneven numbers -> from : 1
uneven numbers from -> a : 1
numbers from a -> numeric : 1
numbers from a -> random : 1
numbers from a -> normal : 1
numbers from a -> very : 1
from a numeric -> and : 1
a numeric and -> transforming : 1
numeric and transforming -> the : 1
and transforming the -> rest : 1
transforming the rest -> to : 1
the rest to -> v : 1
rest to v -> auto : 1
to v auto -> rng : 1
v auto rng -> v : 1
auto rng v -> i : 1
rng v i -> rng : 1
v i rng -> you : 1
i rng you -> are : 1
rng you are -> interested : 1
you are interested -> and : 1
are interested and -> wait : 1
interested and wait -> for : 1
and wait for -> the : 2
and wait for -> a : 1
and wait for -> its : 1
for the next -> have : 1
for the next -> this : 2
for the next -> line : 1
for the next -> point : 1
for the next -> match : 1
the next have -> a : 1
next have a -> look : 1
at the ranges -> cover : 1
the ranges cover -> the : 1
ranges cover the -> following : 1
in this functions -> on : 1
this functions on -> the : 1
at compile important -> new : 1
compile important new -> feature : 1
important new feature -> of : 1
new feature of -> in : 1
feature of in -> and : 1
of in and -> the : 1
in and the -> lambda : 1
and the lambda -> some : 1
the lambda some -> new : 1
lambda some new -> which : 1
some new which -> have : 1
new which have -> made : 1
which have made -> them : 1
have made them -> even : 1
made them even -> more : 1
them even more -> but : 1
even more but -> a : 1
more but a -> lambda : 1
but a lambda -> lambda : 1
but a lambda -> expression : 1
a lambda lambda -> functions : 1
lambda functions construct -> a : 1
functions construct a -> closure : 1
construct a closure -> is : 1
a closure is -> a : 1
closure is a -> very : 1
a very generic -> can : 1
a very generic -> function : 1
very generic can -> be : 1
generic can be -> like : 1
can be like -> in : 1
be like in -> order : 1
like in order -> to : 1
to provide such -> a : 1
provide such a -> such : 1
provide such a -> function : 1
such a such -> an : 1
a such an -> object : 1
such an object -> must : 1
such an object -> without : 1
such an object -> together : 1
such an object -> will : 1
an object must -> implement : 1
object must implement -> the : 1
object must implement -> different : 1
must implement the -> function : 1
implement the function -> calling : 1
implement the function -> that : 1
the function calling -> with : 1
function calling with -> or : 1
calling with or -> without : 1
with or without -> constructing : 1
with or without -> we : 1
or without constructing -> such : 1
without constructing such -> an : 1
constructing such an -> object : 1
an object without -> lambda : 1
object without lambda -> expressions : 1
without lambda expressions -> before : 1
lambda expressions before -> could : 1
expressions before could -> still : 1
before could still -> look : 1
could still look -> like : 1
still look like -> the : 1
like the int -> struct : 1
the int struct -> void : 1
int struct void -> name : 1
struct void name -> of : 1
void name of -> obviously : 1
name of obviously -> carry : 1
of obviously carry -> a : 1
obviously carry a -> string : 1
carry a string -> with : 1
string with note -> that : 1
with note that -> both : 1
note that both -> this : 1
note that both -> are : 1
note that both -> functions : 1
that both this -> structure : 1
both this structure -> type : 1
this structure type -> and : 1
structure type and -> instance : 1
type and instance -> are : 1
and instance are -> not : 1
instance are not -> unnamed : 1
are not unnamed -> expressions : 1
not unnamed expressions -> can : 1
unnamed expressions can -> as : 1
expressions can as -> we : 1
can as we -> will : 1
we will in -> terms : 1
will in terms -> of : 1
of we would -> say : 1
of we would -> intuitively : 1
we would say -> they : 1
would say they -> a : 1
say they a -> when : 1
they a when -> the : 1
a when the -> example : 1
when the example -> instance : 1
the example instance -> is : 1
example instance is -> called : 1
instance is called -> like : 1
is called like -> a : 1
called like a -> function : 2
like a function -> without : 2
like a function -> that : 1
a function without -> it : 1
a function without -> parameters : 1
function without it -> prints : 1
without it prints -> john : 1
it prints john -> we : 1
prints john we -> constructed : 1
john we constructed -> it : 1
we constructed it -> with : 1
constructed it with -> this : 1
with this it -> has : 1
this it has -> become : 1
it has become -> easier : 1
has become easier -> to : 1
become easier to -> create : 1
easier to create -> such : 1
to create such -> int : 1
create such int -> auto : 1
such int auto -> john : 1
int auto john -> the : 1
auto john the -> whole : 1
john the whole -> by : 1
the whole by -> a : 1
whole by a -> little : 1
by a little -> do : 1
a little do -> something : 1
little do something -> which : 1
do something which -> might : 1
something which might -> look : 1
which might look -> a : 1
which might look -> weird : 1
might look a -> bit : 1
look a bit -> like : 1
look a bit -> crazy : 1
look a bit -> but : 1
a bit like -> magic : 1
bit like magic -> at : 1
like magic at -> but : 1
magic at but -> the : 1
at but the -> first : 1
but the first -> this : 1
the first this -> chapter : 1
the first this -> just : 1
the first this -> is : 1
first this chapter -> will : 1
chapter will explain -> in : 1
will explain in -> all : 1
explain in all -> the : 1
all the possible -> expressions : 1
all the possible -> we : 1
all the possible -> types : 1
all the possible -> cout : 1
the possible expressions -> are : 1
possible expressions are -> of : 1
expressions are of -> a : 1
are of a -> great : 1
of a great -> help : 2
great help to -> make : 1
help to make -> code : 1
to make code -> and : 1
make code and -> can : 1
code and can -> be : 1
used as parameters -> for : 1
as parameters for -> very : 1
parameters for very -> generic : 1
for very generic -> order : 1
very generic order -> to : 1
generic order to -> specialize : 1
order to specialize -> what : 1
to specialize what -> when : 1
specialize what when -> processing : 1
what when processing -> specific : 1
when processing specific -> they : 1
processing specific they -> can : 1
specific they can -> also : 1
used to wrap -> work : 1
to wrap work -> packages : 1
wrap work packages -> together : 1
work packages together -> with : 1
packages together with -> data : 1
together with data -> in : 1
with data in -> order : 1
to be run -> in : 1
be run in -> just : 1
be run in -> by : 1
run in just -> to : 1
in just to -> save : 1
just to save -> work : 1
to save work -> and : 1
save work and -> postpone : 1
work and postpone -> the : 1
and postpone the -> actual : 1
postpone the actual -> since : 1
the actual since -> came : 1
actual since came -> more : 1
since came more -> and : 1
came more and -> more : 1
more and more -> libraries : 1
more and more -> variables : 1
and more libraries -> work : 1
more libraries work -> with : 1
libraries work with -> lambda : 1
work with lambda -> expressions : 1
with lambda expressions -> because : 1
with lambda expressions -> in : 3
with lambda expressions -> and : 1
lambda expressions because -> they : 1
expressions because they -> became : 1
because they became -> a : 1
they became a -> very : 1
became a very -> natural : 1
a very natural -> thing : 1
very natural thing -> in : 1
natural thing in -> another : 1
thing in another -> use : 1
in another use -> case : 1
another use case -> is : 1
case is expressions -> can : 1
is expressions can -> also : 1
expressions can also -> be : 1
also be evaluated -> at : 1
evaluated at compile -> we : 1
at compile we -> are : 1
compile we are -> not : 1
are not going -> much : 1
are not going -> to : 4
not going much -> into : 1
going much into -> as : 1
much into as -> this : 1
into as this -> would : 1
as this would -> quickly : 1
this would quickly -> blast : 1
would quickly blast -> the : 1
quickly blast the -> scope : 1
blast the scope -> of : 1
this chapter does -> heavily : 1
chapter does heavily -> rely : 1
does heavily rely -> on : 1
heavily rely on -> some : 1
rely on some -> which : 1
on some which -> might : 1
some which might -> look : 1
might look weird -> to : 1
look weird to -> novices : 1
weird to novices -> or : 1
to novices or -> programmers : 1
novices or programmers -> who : 1
or programmers who -> are : 1
programmers who are -> already : 1
who are already -> experienced : 1
are already experienced -> but : 1
already experienced but -> not : 1
experienced but not -> with : 1
but not with -> such : 1
not with such -> if : 1
with such if -> you : 1
such if you -> see : 1
if you see -> lambda : 1
you see lambda -> expressions : 1
see lambda expressions -> in : 1
lambda expressions in -> the : 1
lambda expressions in -> real : 1
lambda expressions in -> order : 3
expressions in the -> coming : 1
expressions in the -> the : 1
in the coming -> recipes : 1
the coming recipes -> that : 1
coming recipes that -> return : 1
recipes that return -> lambda : 1
that return lambda -> return : 1
that return lambda -> we : 1
return lambda return -> lambda : 1
lambda return lambda -> please : 1
return lambda please -> feel : 1
lambda please feel -> frustrated : 1
please feel frustrated -> or : 1
feel frustrated or -> confused : 1
frustrated or confused -> too : 1
or confused too -> we : 1
confused too we -> are : 1
too we are -> pushing : 1
we are pushing -> the : 1
are pushing the -> boundaries : 1
pushing the boundaries -> a : 1
the boundaries a -> bit : 1
boundaries a bit -> in : 1
bit in order -> to : 2
order to prepare -> ourselves : 1
to prepare ourselves -> for : 1
prepare ourselves for -> modern : 1
ourselves for modern -> where : 1
for modern where -> functional : 1
modern where functional -> programming : 1
where functional programming -> patterns : 1
functional programming patterns -> occur : 1
programming patterns occur -> with : 1
patterns occur with -> increasing : 1
occur with increasing -> if : 1
with increasing if -> some : 1
increasing if some -> code : 1
if some code -> in : 1
some code in -> the : 1
following recipes looks -> a : 1
recipes looks a -> bit : 1
a bit too -> take : 1
a bit too -> briefly : 1
bit too take -> your : 1
too take your -> time : 1
take your time -> to : 1
your time to -> understand : 1
your time to -> digest : 1
time to understand -> once : 1
to understand once -> you : 1
understand once you -> got : 1
once you got -> through : 1
you got through -> complex : 1
got through complex -> lambda : 1
through complex lambda -> expressions : 1
complex lambda expressions -> in : 1
expressions in real -> projects : 1
in real projects -> in : 1
real projects in -> the : 1
projects in the -> wild : 1
in the wild -> will : 1
the wild will -> not : 1
wild will not -> confuse : 1
will not confuse -> you : 1
not confuse you -> any : 1
confuse you any -> functions : 1
you any functions -> on : 1
any functions on -> the : 1
using lambda lambda -> we : 1
lambda lambda we -> can : 1
lambda we can -> encapsulate : 1
we can encapsulate -> code : 1
can encapsulate code -> in : 1
encapsulate code in -> order : 1
order to call -> it : 1
order to call -> no : 1
order to call -> some : 1
order to call -> the : 1
to call it -> and : 1
to call it -> multiple : 1
it and that -> also : 1
and that also -> might : 1
that also might -> be : 1
also might be -> somewhere : 1
might be somewhere -> else : 1
be somewhere else -> because : 1
somewhere else because -> we : 1
else because we -> can : 1
because we can -> copy : 1
because we can -> return : 1
because we can -> this : 1
can copy them -> we : 1
copy them we -> can : 1
them we can -> also : 1
can also just -> encapsulate : 1
also just encapsulate -> code : 1
just encapsulate code -> to : 1
encapsulate code to -> call : 1
code to call -> it : 1
call it multiple -> times : 1
it multiple times -> with : 1
multiple times with -> slightly : 1
times with slightly -> different : 1
with slightly different -> parameters : 1
with slightly different -> semantics : 1
slightly different parameters -> without : 1
different parameters without -> having : 1
parameters without having -> to : 1
without having to -> implement : 1
without having to -> worry : 1
having to implement -> a : 1
implement a whole -> new : 1
a whole new -> function : 1
whole new function -> class : 1
new function class -> for : 1
function class for -> that : 1
class for that -> syntax : 1
for that syntax -> of : 1
that syntax of -> lambda : 1
syntax of lambda -> expressions : 1
of lambda expressions -> was : 1
lambda expressions was -> really : 1
expressions was really -> new : 1
was really new -> in : 1
really new in -> and : 1
new in and -> it : 1
in and it -> has : 1
and it has -> slightly : 1
it has slightly -> the : 1
has slightly the -> next : 1
slightly the next -> two : 1
the next two -> standard : 1
the next two -> functions : 1
the next two -> numbers : 1
next two standard -> versions : 1
two standard versions -> until : 1
standard versions until -> in : 1
versions until in -> this : 1
until in this -> we : 1
will see what -> lambda : 1
will see what -> this : 1
see what lambda -> expressions : 1
what lambda expressions -> can : 1
lambda expressions can -> look : 1
expressions can look -> like : 1
can look like -> and : 1
can look like -> great : 1
can look like -> v : 1
can look like -> when : 1
look like and -> what : 1
like and what -> they : 1
and what they -> to : 1
what they to -> do : 1
do are going -> to : 19
going to write -> a : 7
going to write -> messages : 1
going to write -> another : 1
going to write -> code : 1
a little program -> in : 1
little program in -> which : 1
program in which -> we : 1
which we play -> with : 1
we play with -> lambda : 2
play with lambda -> expressions : 3
expressions in order -> to : 3
get a feeling -> for : 2
get a feeling -> they : 1
get a feeling -> typical : 1
get a feeling -> and : 1
get a feeling -> ups : 1
get a feeling -> by : 1
get a feeling -> to : 2
a feeling for -> expressions : 1
a feeling for -> this : 1
feeling for expressions -> do : 1
for expressions do -> not : 1
expressions do not -> need : 1
not need any -> library : 1
not need any -> change : 1
need any library -> but : 1
any library but -> we : 1
library but we -> are : 1
but we are -> going : 2
but we are -> only : 1
to write messages -> to : 1
write messages to -> the : 1
messages to the -> terminal : 1
to the terminal -> and : 3
to the terminal -> should : 1
to the terminal -> getting : 1
to the terminal -> in : 1
to the terminal -> concurrently : 1
to the terminal -> without : 1
the terminal and -> use : 1
the terminal and -> read : 1
the terminal and -> running : 1
terminal and use -> so : 1
and use so -> we : 1
use so we -> need : 1
need the headers -> for : 2
the headers for -> happens : 1
the headers for -> and : 1
headers for happens -> in : 1
for happens in -> the : 1
main function this -> we : 1
function this we -> define : 1
function this we -> which : 1
this we define -> two : 1
this we define -> some : 1
define two function -> objects : 1
two function objects -> that : 1
function objects that -> take : 1
objects that take -> no : 1
that take no -> return : 1
take no return -> integer : 1
no return integer -> constants : 1
return integer constants -> with : 1
integer constants with -> the : 1
constants with the -> and : 1
the and note -> that : 1
that the return -> statement : 1
the return statement -> is : 1
return statement is -> surrounded : 1
statement is surrounded -> by : 1
is surrounded by -> curly : 1
is surrounded by -> whitespace : 1
is surrounded by -> quotation : 2
surrounded by curly -> like : 1
by curly like -> it : 1
curly like it -> is : 1
like it is -> in : 1
is in normal -> and : 1
in normal and -> the : 1
normal and the -> which : 1
the which denote -> a : 1
which denote a -> parameterless : 1
denote a parameterless -> are : 1
a parameterless are -> provide : 1
parameterless are provide -> them : 1
are provide them -> in : 1
provide them in -> the : 1
the second lambda -> but : 1
second lambda but -> the : 1
lambda but the -> brackets : 1
but the brackets -> have : 1
the brackets have -> to : 1
brackets have to -> be : 1
to be int -> auto : 1
be int auto -> return : 1
int auto return -> auto : 1
int auto return -> c : 1
auto return auto -> return : 1
return auto return -> we : 1
return auto return -> implement : 1
return auto return -> code : 1
can call both -> the : 1
call both the -> function : 1
both the function -> objects : 1
both the function -> is : 1
the function objects -> just : 1
the function objects -> are : 1
function objects just -> by : 1
objects just by -> writing : 1
just by writing -> the : 1
by writing the -> names : 1
writing the names -> of : 1
the names of -> the : 2
names of the -> variables : 1
names of the -> algorithms : 1
of the variables -> they : 1
the variables they -> are : 1
variables they are -> saved : 1
they are saved -> to : 1
are saved to -> and : 1
saved to and -> appending : 1
to and appending -> the : 1
and appending the -> in : 1
appending the in -> this : 1
the in this -> single : 1
the in this -> container : 1
the in this -> we : 1
in this single -> they : 1
this single they -> are : 1
single they are -> indistinguishable : 1
they are indistinguishable -> from : 1
are indistinguishable from -> for : 1
indistinguishable from for -> the : 1
from for the -> forget : 1
for the forget -> about : 1
the forget about -> those : 1
forget about those -> and : 1
about those and -> define : 1
those and define -> another : 1
and define another -> function : 1
define another function -> which : 1
another function which -> is : 1
another function which -> in : 1
another function which -> accepts : 1
another function which -> encapsulates : 1
another function which -> does : 1
function which is -> called : 1
function which is -> to : 1
which is called -> it : 1
is called it -> takes : 1
called it takes -> two : 1
it takes two -> parameters : 1
it takes two -> other : 1
it takes two -> additional : 1
takes two parameters -> and : 2
two parameters and -> returns : 1
two parameters and -> simply : 1
and returns auto -> plus : 1
returns auto plus -> auto : 1
auto plus auto -> return : 1
plus auto return -> l : 1
auto return l -> is : 1
auto return l -> we : 1
return l is -> also : 1
l is also -> easy : 1
is also easy -> to : 1
also easy to -> just : 1
also easy to -> another : 1
easy to just -> like : 1
to just like -> any : 1
just like any -> other : 1
like any other -> binary : 1
like any other -> string : 1
any other binary -> defined : 1
other binary defined -> its : 1
binary defined its -> parameters : 1
defined its parameters -> to : 1
its parameters to -> be : 1
its parameters to -> multiple : 1
parameters to be -> of : 1
it will work -> with : 1
will work with -> anything : 1
work with anything -> the : 1
with anything the -> plus : 1
anything the plus -> operator : 1
the plus operator -> just : 1
plus operator just -> as : 1
operator just as -> strings : 1
just as strings -> do : 1
as strings do -> not : 1
strings do not -> need : 1
need to store -> a : 1
to store a -> lambda : 1
to store a -> pointer : 1
store a lambda -> expression : 1
a lambda expression -> in : 1
a lambda expression -> as : 2
a lambda expression -> to : 1
a lambda expression -> actually : 1
a lambda expression -> the : 1
a lambda expression -> helper : 1
a lambda expression -> which : 1
a lambda expression -> that : 2
a lambda expression -> generate : 1
a lambda expression -> helps : 1
lambda expression in -> a : 1
expression in a -> variable : 1
in a variable -> in : 1
variable in order -> to : 2
to use we -> can : 1
to use we -> need : 1
use we can -> also : 1
can also define -> it : 1
can also define -> a : 1
also define it -> and : 1
define it and -> then : 1
it and then -> parameters : 1
it and then -> to : 1
it and then -> destructs : 1
and then parameters -> in : 1
then parameters in -> parentheses : 1
parameters in parentheses -> just : 1
in parentheses just -> behind : 1
parentheses just behind -> it : 1
just behind it -> auto : 1
behind it auto -> return : 1
it auto return -> l : 1
it auto return -> compiling : 1
return l we -> will : 1
l we will -> define : 1
define a closure -> an : 1
a closure an -> integer : 1
closure an integer -> counter : 1
an integer counter -> value : 1
integer counter value -> around : 1
counter value around -> with : 1
value around with -> whenever : 1
around with whenever -> we : 1
with whenever we -> call : 1
whenever we call -> it : 1
whenever we call -> this : 1
call it increments -> its : 1
it increments its -> counter : 1
increments its counter -> returns : 1
its counter returns -> the : 1
counter returns the -> new : 1
returns the new -> in : 1
the new in -> order : 1
new in order -> to : 1
order to tell -> it : 1
to tell it -> that : 2
tell it that -> it : 1
tell it that -> there : 1
it has an -> internal : 1
has an internal -> counter : 1
has an internal -> stream : 1
has an internal -> buffer : 1
an internal counter -> we : 1
internal counter we -> write : 1
counter we write -> within : 1
we write within -> the : 1
write within the -> brackets : 1
within the brackets -> to : 1
the brackets to -> tell : 1
brackets to tell -> it : 1
it that there -> is : 1
is a variable -> to : 1
a variable to -> the : 1
a variable to -> an : 1
variable to the -> integer : 1
variable to the -> this : 1
to the integer -> in : 1
the integer in -> order : 1
integer in order -> to : 1
to allow it -> to : 1
allow it to -> modify : 1
it to modify -> its : 1
to modify its -> own : 1
modify its own -> captured : 1
its own captured -> we : 1
own captured we -> use : 1
captured we use -> the : 1
use the as -> the : 1
as the compiler -> would : 1
as the compiler -> will : 1
the compiler would -> not : 1
compiler would not -> allow : 1
would not allow -> it : 1
not allow it -> auto : 1
allow it auto -> counter : 1
it auto counter -> mutable : 1
auto counter mutable -> return : 1
counter mutable return -> call : 1
mutable return call -> the : 1
return call the -> function : 1
call the function -> object : 1
call the function -> on : 1
call the function -> with : 1
the function object -> five : 1
the function object -> should : 1
the function object -> itself : 1
the function object -> works : 1
the function object -> into : 1
the function object -> will : 1
the function object -> it : 1
the function object -> accepts : 1
the function object -> takes : 1
the function object -> which : 1
the function object -> must : 1
function object five -> times : 1
object five times -> and : 1
five times and -> print : 1
times and print -> the : 1
and print the -> values : 1
and print the -> without : 1
and print the -> resulting : 1
print the values -> it : 1
the values it -> so : 1
values it so -> we : 1
can see the -> increasing : 1
can see the -> result : 1
see the increasing -> number : 1
the increasing number -> values : 1
increasing number values -> for : 1
number values for -> i : 1
values for i -> i : 1
i i can -> also : 1
i can also -> take : 1
can also take -> existing : 1
also take existing -> variables : 1
take existing variables -> and : 1
existing variables and -> capture : 1
variables and capture -> them : 1
and capture them -> by : 1
capture them by -> instead : 1
them by instead -> of : 1
by instead of -> giving : 1
instead of giving -> a : 1
of giving a -> closure : 1
giving a closure -> its : 1
a closure its -> own : 1
closure its own -> value : 1
its own value -> this : 1
own value this -> the : 1
value this the -> captured : 1
this the captured -> be : 1
the captured be -> incremented : 1
captured be incremented -> by : 1
be incremented by -> the : 1
incremented by the -> but : 1
still accessible in -> order : 1
accessible in order -> to : 1
do we the -> where : 1
we the where -> the : 1
the where the -> means : 1
where the means -> that : 1
the means that -> we : 1
that we store -> only : 1
we store only -> a : 1
store only a -> to : 1
only a to -> the : 1
a to the -> not : 1
to the not -> a : 1
the not a -> int : 1
not a int -> a : 1
a int a -> auto : 1
int a auto -> incrementer : 1
a auto incrementer -> this : 1
auto incrementer this -> then : 1
incrementer this then -> we : 1
then we should -> be : 1
we should be -> able : 1
we should be -> free : 1
should be able -> to : 2
able to call -> this : 1
able to call -> which : 1
to call this -> function : 1
to call this -> is : 1
call this function -> object : 1
call this function -> with : 1
this function object -> multiple : 1
this function object -> prepend : 1
this function object -> is : 1
this function object -> does : 1
function object multiple -> and : 1
object multiple and -> then : 1
multiple and then -> observe : 1
and then observe -> that : 1
then observe that -> it : 1
observe that it -> has : 1
it has really -> changed : 1
has really changed -> the : 1
really changed the -> value : 1
changed the value -> of : 1
value of variable -> of : 1
of variable of -> after : 1
variable of after -> a : 1
of after a -> last : 1
after a last -> example : 1
a last example -> is : 1
last example is -> currying : 1
example is currying -> means : 1
is currying means -> that : 1
currying means that -> we : 1
that we take -> a : 1
we take a -> can : 1
we take a -> copy : 1
take a can -> accept : 1
a can accept -> some : 1
can accept some -> parameters : 1
accept some parameters -> and : 1
some parameters and -> store : 1
parameters and store -> it : 1
and store it -> in : 1
store it in -> another : 1
it in another -> function : 1
in another function -> which : 1
function which in -> this : 1
function which in -> turn : 1
which in this -> we : 1
this we store -> the : 1
we store the -> only : 1
store the only -> accept : 1
the only accept -> which : 1
only accept which -> we : 1
accept which we -> forward : 1
which we forward -> to : 1
we forward to -> the : 1
forward to the -> the : 1
the the other -> parameter : 1
the the other -> in : 1
the other parameter -> is : 1
other parameter is -> the : 1
is the value -> which : 1
is the value -> we : 1
the value which -> we : 1
value which we -> save : 1
value which we -> have : 1
which we save -> in : 2
we save in -> the : 1
we save in -> now : 1
save in the -> function : 1
in the function -> this : 1
in the function -> and : 1
in the function -> then : 1
the function this -> we : 1
the function this -> happens : 1
this we which -> because : 1
we which because -> it : 1
which because it -> can : 1
it can value -> to : 1
can value to -> parameter : 1
value to parameter -> it : 1
to parameter it -> auto : 1
parameter it auto -> return : 1
auto return compiling -> and : 1
return compiling and -> running : 1
running the go -> through : 1
the go through -> the : 1
through the code -> again : 1
the code again -> and : 1
code again and -> try : 1
again and try -> to : 1
try to foresee -> what : 1
to foresee what -> it : 1
foresee what it -> will : 1
what it will -> print : 1
will print to -> the : 1
to the then -> run : 1
to the then -> the : 1
the then run -> it : 1
then run it -> and : 1
run it and -> check : 1
it and check -> against : 1
and check against -> the : 1
check against the -> real : 1
against the real -> ab : 1
the real ab -> value : 1
real ab value -> of : 1
ab value of -> a : 1
value of a -> after : 1
of a after -> it : 1
a after it -> we : 1
after it we -> just : 1
did was not -> overly : 1
was not overly -> added : 1
not overly added -> and : 1
overly added and -> incremented : 1
added and incremented -> and : 1
and incremented and -> printed : 1
incremented and printed -> we : 1
and printed we -> even : 1
printed we even -> concatenated : 1
we even concatenated -> strings : 1
even concatenated strings -> with : 1
concatenated strings with -> a : 1
strings with a -> function : 1
with a function -> which : 1
function which was -> implemented : 1
which was implemented -> to : 1
was implemented to -> add : 1
implemented to add -> but : 1
to add but -> for : 1
add but for -> anyone : 1
but for anyone -> who : 1
for anyone who -> know : 1
anyone who know -> lambda : 1
who know lambda -> expression : 1
know lambda expression -> syntax : 1
lambda expression syntax -> it : 1
expression syntax it -> might : 1
syntax it might -> have : 1
it might have -> looked : 1
might have looked -> first : 1
have looked first -> have : 1
looked first have -> a : 1
first have a -> look : 6
first have a -> glance : 1
all the lambda -> expression : 1
the lambda expression -> can : 1
the lambda expression -> explicitly : 1
the lambda expression -> to : 1
the lambda expression -> does : 1
the lambda expression -> represents : 1
the lambda expression -> accepts : 1
the lambda expression -> is : 1
the lambda expression -> argument : 1
lambda expression can -> usually : 1
expression can usually -> omit : 1
can usually omit -> most : 1
usually omit most -> of : 1
omit most of -> which : 1
most of which -> spares : 1
of which spares -> us : 1
which spares us -> some : 1
us some in -> the : 1
some in the -> average : 1
in the average -> the : 1
the average the -> shortest : 1
average the shortest -> lambda : 1
the shortest lambda -> expression : 1
shortest lambda expression -> possible : 1
lambda expression possible -> is : 1
expression possible is -> it : 1
possible is it -> accepts : 1
is it accepts -> no : 1
is it accepts -> a : 3
is it accepts -> two : 1
is it accepts -> which : 1
it accepts no -> captures : 1
accepts no captures -> and : 1
no captures and -> essentially : 1
captures and essentially -> what : 1
and essentially what -> does : 1
essentially what does -> the : 1
does the rest -> if : 1
the rest if -> and : 1
rest if and -> what : 1
if and what -> we : 1
if and what -> it : 1
and what we -> there : 1
what we there -> are : 1
there are several -> forms : 1
are several forms -> to : 1
several forms to -> do : 1
forms to do -> there : 1
to do there -> are : 1
to do there -> was : 1
do there are -> two : 1
are two lazy -> we : 1
two lazy we -> write : 1
lazy we write -> we : 1
we write we -> capture : 1
write we capture -> every : 1
we capture every -> variable : 1
capture every variable -> the : 1
every variable the -> closure : 1
variable the closure -> references : 1
the closure references -> from : 1
the closure references -> outside : 1
closure references from -> outside : 1
references from outside -> by : 1
from outside by -> which : 1
outside by which -> means : 1
by which means -> that : 1
that the values -> are : 1
the values are -> means : 1
the values are -> hit : 1
values are means -> that : 1
are means that -> everything : 1
means that everything -> the : 1
that everything the -> closure : 1
everything the closure -> references : 1
closure references outside -> is : 1
references outside is -> only : 1
outside is only -> captured : 1
is only captured -> by : 1
only captured by -> which : 1
captured by which -> does : 1
by which does -> lead : 1
which does lead -> to : 1
does lead to -> a : 1
does lead to -> better : 1
to a we -> can : 1
a we can -> set : 1
a we can -> easily : 1
a we can -> use : 1
a we can -> provide : 1
a we can -> return : 1
a we can -> cast : 1
a we can -> tell : 1
we can set -> the : 2
we can set -> up : 2
we can set -> it : 1
can set the -> capturing : 1
can set the -> minimum : 1
set the capturing -> settings : 1
the capturing settings -> for : 1
capturing settings for -> every : 1
settings for every -> variable : 1
for every variable -> writing : 1
every variable writing -> that : 1
variable writing that -> we : 1
writing that we -> capture : 1
that we capture -> the : 1
we capture the -> by : 1
capture the by -> and : 1
the by and -> by : 1
by and by -> this : 1
and by this -> is : 1
and by this -> captures : 1
by this is -> more : 1
this is more -> typing : 1
is more typing -> but : 1
more typing but -> generally : 1
typing but generally -> safer : 1
but generally safer -> to : 1
generally safer to -> be : 1
safer to be -> that : 1
be that we -> cannot : 1
that we cannot -> accidentally : 1
that we cannot -> just : 1
that we cannot -> know : 1
that we cannot -> be : 1
that we cannot -> over : 1
we cannot accidentally -> capture : 1
cannot accidentally capture -> something : 1
accidentally capture something -> we : 1
capture something we -> want : 1
something we want -> to : 1
want to capture -> from : 1
to capture from -> the : 1
capture from the -> we : 1
the we defined -> a : 1
we defined a -> lambda : 1
we defined a -> new : 1
defined a lambda -> expression : 1
lambda expression as -> in : 1
lambda expression as -> the : 1
expression as in -> this : 1
as in this -> special : 1
as in this -> it : 1
in this special -> we : 1
this special we -> did : 1
special we did -> not : 1
did not capture -> any : 1
not capture any -> variable : 1
capture any variable -> from : 1
any variable from -> but : 1
variable from but -> we : 1
from but we -> defined : 1
but we defined -> a : 1
defined a new -> one : 1
a new one -> called : 1
a new one -> with : 1
new one called -> its : 1
one called its -> type : 1
called its type -> is : 1
its type is -> deduced : 1
type is deduced -> from : 1
is deduced from -> the : 1
from the value -> we : 1
value we initialized -> it : 1
we initialized it -> namely : 1
initialized it namely -> so : 1
it namely so -> an : 1
namely so an -> is : 1
so an is -> also : 1
an is also -> possible : 1
an is also -> implicitly : 1
is also possible -> to : 3
possible to capture -> some : 1
to capture some -> variables : 1
capture some variables -> by : 1
some variables by -> value : 1
variables by value -> and : 1
by value and -> by : 1
value and by -> as : 1
and by as -> this : 1
and by as -> a : 1
by as this -> captures : 1
as this captures -> by : 1
this captures by -> copy : 2
this captures by -> by : 1
captures by copy -> and : 2
by copy and -> by : 1
by copy and -> any : 1
copy and by -> this : 1
by this captures -> by : 2
copy and any -> other : 1
and any other -> used : 1
any other used -> variable : 2
other used variable -> by : 2
used variable by -> this : 1
used variable by -> you : 1
variable by this -> captures : 1
captures by by -> initializes : 1
by by initializes -> a : 1
by initializes a -> new : 1
initializes a new -> variable : 1
a new variable -> with : 1
new variable with -> value : 1
variable with value -> and : 1
with value and -> captures : 1
value and captures -> any : 1
and captures any -> other : 1
captures any other -> used : 1
variable by you -> try : 1
by you try -> to : 1
you try to -> capture : 1
try to capture -> a : 1
to capture a -> member : 1
capture a member -> variable : 1
a member variable -> of : 2
member variable of -> an : 1
member variable of -> the : 1
variable of an -> you : 1
of an you -> cannot : 1
an you cannot -> do : 1
you cannot do -> this : 1
cannot do this -> directly : 1
do this directly -> using : 1
this directly using -> you : 1
directly using you -> have : 1
using you have -> to : 1
you have to -> capture : 1
have to capture -> either : 1
to capture either -> or : 1
capture either or -> the : 1
either or the -> function : 1
or the function -> object : 1
function object should -> be : 1
object should be -> able : 1
able to the -> variables : 1
to the variables -> it : 1
the variables it -> captures : 1
variables it captures -> by : 1
it captures by -> it : 1
captures by it -> must : 1
by it must -> be : 1
must be defined -> this : 1
be defined this -> includes : 1
defined this includes -> calling : 1
this includes calling -> methods : 1
includes calling methods -> of : 1
calling methods of -> captured : 1
methods of captured -> we : 1
of captured we -> mark : 1
captured we mark -> the : 1
we mark the -> lambda : 1
mark the lambda -> expression : 1
lambda expression explicitly -> as : 1
expression explicitly as -> the : 1
explicitly as the -> compiler : 1
compiler will out -> if : 1
will out if -> it : 1
out if it -> does : 1
does not satisfy -> the : 1
not satisfy the -> criteria : 1
not satisfy the -> predicate : 1
satisfy the criteria -> of : 1
the criteria of -> the : 1
criteria of the -> advantage : 1
of the advantage -> and : 1
the advantage and -> lambda : 1
advantage and lambda -> expressions : 1
and lambda expressions -> is : 1
lambda expressions is -> that : 1
expressions is that -> the : 1
compiler can evaluate -> their : 1
can evaluate their -> result : 1
evaluate their result -> at : 1
their result at -> compile : 1
result at compile -> time : 1
at compile time -> if : 1
at compile time -> and : 1
compile time if -> they : 1
time if they -> are : 1
they are called -> with : 2
are called with -> constant : 1
are called with -> the : 1
called with constant -> this : 1
with constant this -> leads : 1
constant this leads -> to : 1
leads to less -> code : 1
to less code -> in : 1
less code in -> the : 1
in the binary -> we : 1
in the binary -> as : 1
the binary we -> do : 1
the binary we -> it : 1
the binary we -> can : 1
binary we do -> not : 1
not explicitly declare -> the : 1
explicitly declare the -> lambda : 1
declare the lambda -> expression : 1
lambda expression to -> be : 2
expression to be -> it : 2
to be it -> fits : 1
to be it -> helps : 1
be it fits -> the : 1
it fits the -> requirements : 1
fits the requirements -> for : 1
the requirements for -> it : 1
requirements for it -> will : 1
for it will -> be : 1
for it will -> compare : 1
for it will -> read : 1
will be if -> we : 1
if we a -> lambda : 1
we a lambda -> expression : 1
be it helps -> to : 1
helps to be -> explicit : 1
to be explicit -> because : 1
be explicit because -> the : 1
explicit because the -> compiler : 1
compiler will then -> help : 1
will then help -> us : 1
then help us -> by : 1
help us by -> erroring : 1
us by erroring -> out : 1
by erroring out -> if : 1
erroring out if -> we : 1
out if we -> did : 1
if we did -> it : 1
if we did -> the : 1
we did it -> attr : 1
did it attr -> is : 1
it attr is -> the : 1
attr is the -> place : 1
is the place -> to : 1
place to specify -> function : 1
to specify function -> object : 1
specify function object -> can : 1
function object can -> throw : 1
object can throw -> called : 1
can throw called -> and : 1
throw called and -> runs : 1
called and runs -> into : 1
and runs into -> an : 1
runs into an -> error : 1
into an error -> type : 1
an error type -> we : 1
error type we -> want : 1
type we want -> to : 1
want to have -> ultimate : 1
want to have -> the : 1
want to have -> an : 1
want to have -> a : 1
want to have -> all : 1
to have ultimate -> control : 1
have ultimate control -> over : 1
ultimate control over -> the : 1
control over the -> return : 1
control over the -> thread : 1
over the return -> we : 1
the return we -> may : 1
the return we -> chose : 1
return we may -> not : 1
we may not -> want : 1
may not want -> the : 1
not want the -> compiler : 1
not want the -> same : 1
want the compiler -> to : 1
compiler to deduce -> it : 1
to deduce it -> for : 1
deduce it for -> us : 1
it for us -> in : 1
for us in -> such : 1
for us in -> a : 2
us in such -> we : 1
such we can -> just : 1
can just write -> foo : 1
can just write -> in : 1
just write foo -> which : 1
write foo which -> tells : 1
foo which tells -> the : 1
which tells the -> compiler : 1
which tells the -> opposite : 1
compiler that we -> will : 1
we will really -> always : 1
will really always -> return : 1
really always return -> polymorphy : 1
always return polymorphy -> by : 1
return polymorphy by -> wrapping : 1
lambdas into say -> we : 1
into say we -> want : 1
say we want -> to : 1
want to write -> function : 1
to write function -> for : 1
write function for -> some : 1
function for some -> kind : 1
for some kind -> of : 2
some kind of -> which : 1
some kind of -> item : 1
some kind of -> heat : 1
some kind of -> first : 1
some kind of -> us : 1
some kind of -> callable : 1
some kind of -> utility : 1
some kind of -> local : 1
kind of which -> might : 1
of which might -> change : 1
which might change -> which : 1
might change which -> then : 1
change which then -> notifies : 1
which then notifies -> other : 1
then notifies other -> like : 1
notifies other like -> a : 1
other like a -> gas : 1
like a gas -> pressure : 1
a gas pressure -> or : 1
gas pressure or -> a : 1
pressure or a -> stock : 1
or a stock -> or : 1
a stock or -> something : 1
stock or something -> whenever : 1
or something whenever -> the : 1
something whenever the -> value : 1
whenever the value -> a : 1
the value a -> list : 1
value a list -> of : 1
list of observer -> objects : 1
of observer objects -> should : 1
observer objects should -> be : 1
objects should be -> which : 1
should be which -> then : 1
be which then -> react : 1
which then react -> their : 1
then react their -> order : 1
react their order -> to : 1
their order to -> implement : 1
to implement we -> could : 1
implement we could -> store : 1
we could store -> a : 1
could store a -> range : 1
store a range -> of : 1
range of observer -> function : 1
of observer function -> objects : 1
observer function objects -> in : 1
observer function objects -> not : 1
function objects in -> a : 1
a which all -> accept : 1
a which all -> store : 1
which all accept -> an : 1
all accept an -> variable : 1
accept an variable -> as : 1
an variable as -> the : 1
variable as the -> which : 1
as the which -> represents : 1
as the which -> makes : 1
the which represents -> the : 1
which represents the -> observed : 1
which represents the -> type : 1
represents the observed -> we : 1
the observed we -> do : 1
observed we do -> not : 1
not know what -> these : 1
know what these -> function : 1
what these function -> objects : 1
these function objects -> do : 1
these function objects -> each : 1
these function objects -> all : 1
function objects do -> in : 1
objects do in -> they : 1
do in they -> are : 1
in they are -> called : 1
called with the -> new : 1
called with the -> same : 1
the new but -> we : 1
new but we -> also : 1
but we also -> what : 1
but we also -> see : 1
we also what -> type : 1
also what type -> will : 1
what type will -> that : 1
type will that -> vector : 1
will that vector -> of : 1
that vector of -> function : 1
vector of function -> objects : 1
of function objects -> would : 1
function objects would -> be : 1
objects would be -> we : 1
would be we -> were : 1
be we were -> capturing : 1
we were capturing -> pointers : 1
were capturing pointers -> with : 1
capturing pointers with -> signatures : 1
pointers with signatures -> such : 1
with signatures such -> this : 1
signatures such this -> would : 1
such this would -> indeed : 1
this would indeed -> also : 1
would indeed also -> work : 1
indeed also work -> with : 1
work with any -> lambda : 1
with any lambda -> expression : 1
any lambda expression -> capture : 1
any lambda expression -> anytime : 1
lambda expression capture -> any : 1
expression capture any -> such : 1
capture any such -> but : 1
any such but -> a : 1
such but a -> lambda : 1
lambda expression actually -> a : 1
expression actually a -> different : 1
actually a different -> compared : 1
a different compared -> normal : 1
different compared normal -> not : 1
compared normal not -> just : 1
normal not just -> a : 1
not just a -> function : 1
just a function -> it : 1
a function it -> is : 2
a function it -> returns : 1
is an couples -> a : 1
an couples a -> certain : 1
couples a certain -> amount : 1
a certain amount -> of : 3
certain amount of -> data : 1
certain amount of -> so : 1
certain amount of -> or : 1
amount of data -> with : 1
amount of data -> for : 1
of data with -> a : 1
data with a -> think : 1
with a think -> when : 1
a think when -> there : 1
think when there -> were : 1
when there were -> no : 2
there were no -> classes : 1
there were no -> or : 1
were no classes -> and : 1
no classes and -> structs : 1
classes and structs -> are : 1
and structs are -> the : 1
structs are the -> natural : 1
are the natural -> way : 1
the natural way -> of : 1
natural way of -> coupling : 1
way of coupling -> data : 1
of coupling data -> with : 1
coupling data with -> and : 1
data with and -> if : 1
with and if -> you : 1
and if you -> change : 1
if you change -> the : 1
you change the -> data : 1
change the data -> member : 1
the data member -> types : 1
the data member -> functions : 1
data member types -> of : 1
member types of -> a : 1
types of a -> you : 1
of a you -> get : 1
a you get -> a : 1
get a completely -> different : 1
completely different class -> just : 1
different class just -> that : 1
class just that -> a : 1
just that a -> vector : 1
that a vector -> store : 1
a vector store -> completely : 1
vector store completely -> different : 1
store completely different -> types : 1
completely different types -> using : 1
completely different types -> and : 1
different types using -> the : 1
types using the -> same : 1
using the same -> type : 1
using the same -> prints : 1
same type the -> user : 1
type the user -> that : 1
the user that -> only : 1
the user that -> the : 1
the user that -> we : 2
user that only -> possible : 1
that only possible -> to : 1
only possible to -> save : 1
possible to save -> observer : 1
to save observer -> function : 1
save observer function -> objects : 1
function objects not -> capture : 1
objects not capture -> anything : 1
not capture anything -> is : 1
capture anything is -> it : 1
anything is it -> limits : 1
is it limits -> the : 1
it limits the -> number : 1
limits the number -> of : 2
number of use -> cases : 2
of use cases -> very : 1
of use cases -> for : 1
use cases very -> how : 1
cases very how -> can : 1
very how can -> we : 1
how can we -> allow : 1
can we allow -> the : 1
we allow the -> user : 1
allow the user -> to : 2
user to store -> any : 1
to store any -> kind : 1
store any kind -> of : 1
kind of function -> only : 1
kind of function -> object : 1
of function only -> constraining : 1
function only constraining -> to : 1
only constraining to -> the : 1
constraining to the -> call : 1
to the call -> which : 1
the call which -> takes : 1
the call which -> leads : 1
call which takes -> a : 1
which takes a -> specific : 1
which takes a -> binary : 1
which takes a -> string : 1
takes a specific -> set : 1
a specific set -> of : 1
specific set of -> parameters : 1
set of parameters -> that : 1
of parameters that -> represent : 1
parameters that represent -> the : 1
that represent the -> value : 1
represent the value -> that : 1
the value that -> shall : 1
value that shall -> be : 1
shall be section -> shows : 1
be section shows -> how : 1
how to solve -> this : 2
to solve this -> problem : 2
solve this problem -> using : 1
solve this problem -> with : 1
this problem using -> which : 1
problem using which -> can : 1
using which can -> act : 1
which can act -> as : 1
can act as -> a : 1
act as a -> polymorphic : 1
as a polymorphic -> wrapper : 1
a polymorphic wrapper -> around : 1
polymorphic wrapper around -> any : 1
wrapper around any -> lambda : 1
around any lambda -> no : 1
any lambda no -> matter : 1
lambda no matter -> if : 1
no matter if -> and : 1
no matter if -> a : 1
matter if and -> what : 1
and what it -> to : 1
what it to -> do : 1
it to do -> this : 1
it to do -> are : 1
going to create -> several : 1
going to create -> two : 1
going to create -> a : 1
to create several -> lambda : 1
create several lambda -> expressions : 1
several lambda expressions -> completely : 1
lambda expressions completely -> different : 1
expressions completely different -> in : 1
completely different in -> regard : 1
different in regard -> variable : 1
in regard variable -> types : 1
regard variable types -> they : 1
variable types they -> have : 1
types they have -> the : 1
they have the -> same : 1
the same function -> call : 1
the same function -> signature : 1
the same function -> as : 2
the same function -> on : 1
the same function -> the : 1
same function call -> signature : 1
function call signature -> in : 1
call signature in -> these : 1
signature in these -> will : 1
in these will -> be : 1
these will be -> saved : 1
will be saved -> in : 1
be saved in -> one : 1
be saved in -> a : 1
be saved in -> the : 1
saved in one -> vector : 1
in one vector -> using : 1
one vector using -> first : 1
vector using first -> do : 1
using first do -> some : 1
first do some -> necessary : 1
do some necessary -> implement : 1
some necessary implement -> a : 1
necessary implement a -> little : 1
a little function -> that : 1
little function that -> returns : 1
function that returns -> it : 1
function that returns -> us : 1
function that returns -> an : 1
that returns it -> accepts : 1
returns it accepts -> a : 1
it accepts a -> container : 1
it accepts a -> range : 1
it accepts a -> iterator : 1
it accepts a -> pair : 2
it accepts a -> padding : 1
it accepts a -> function : 2
it accepts a -> object : 1
it accepts a -> variable : 1
it accepts a -> file : 1
accepts a container -> and : 1
a container and -> returns : 1
container and returns -> a : 1
returns a function -> object : 3
returns a function -> which : 1
a function object -> that : 4
a function object -> a : 2
a function object -> an : 1
a function object -> and : 4
a function object -> its : 1
function object that -> container : 1
function object that -> captures : 3
function object that -> already : 2
function object that -> accepts : 1
object that container -> by : 1
that container by -> the : 1
container by the -> function : 1
by the function -> object : 1
by the function -> does : 1
by the function -> we : 1
function object itself -> accepts : 1
object itself accepts -> an : 1
itself accepts an -> integer : 1
accepts an integer -> whenever : 1
accepts an integer -> parameter : 1
an integer whenever -> that : 1
integer whenever that -> function : 1
whenever that function -> object : 1
that function object -> is : 1
that function object -> with : 1
function object is -> fed : 1
function object is -> too : 1
function object is -> then : 1
object is fed -> with : 1
is fed with -> an : 1
fed with an -> it : 1
with an it -> will : 1
an it will -> that : 1
it will that -> integer : 1
will that integer -> to : 1
that integer to -> the : 1
integer to the -> container : 1
to the container -> it : 1
container it static -> auto : 1
it static auto -> consumer : 1
static auto consumer -> return : 1
auto consumer return -> little : 1
consumer return little -> helper : 1
return little helper -> function : 1
helper function will -> print : 2
function will print -> whatever : 1
function will print -> our : 1
will print whatever -> container : 1
print whatever container -> instance : 1
whatever container instance -> we : 1
container instance we -> provide : 1
instance we provide -> as : 1
provide as a -> static : 1
as a static -> void : 1
as a static -> array : 1
a static void -> print : 1
static void print -> auto : 1
void print auto -> for : 1
print auto for -> i : 1
auto for i -> i : 1
i i the -> main : 1
i the main -> we : 2
main we a -> a : 1
we a a -> and : 1
a a and -> a : 1
a a and -> when : 1
a a and -> arguments : 1
and a which -> all : 1
and a which -> and : 1
which all store -> int : 1
all store int -> we : 1
store int we -> function : 1
int we function -> with : 1
we function with -> our : 1
function with our -> container : 1
function with our -> shared : 1
with our container -> and : 1
our container and -> we : 1
container and we -> produce : 1
and we produce -> consumer : 1
we produce consumer -> function : 1
produce consumer function -> objects : 1
consumer function objects -> for : 1
function objects for -> those : 1
function objects for -> signal : 1
objects for those -> and : 1
for those and -> store : 1
those and store -> them : 1
and store them -> all : 1
and store them -> in : 1
store them all -> in : 1
all in a -> have : 1
in a have -> a : 1
in a have -> experienced : 1
a have a -> vector : 1
have a vector -> these : 1
have a vector -> of : 1
a vector these -> function : 1
vector these function -> objects : 1
function objects each -> capture : 1
objects each capture -> a : 1
each capture a -> reference : 1
capture a reference -> to : 1
reference to one -> of : 1
to one of -> the : 2
to one of -> them : 1
the container these -> container : 1
container these container -> objects : 1
these container objects -> are : 1
container objects are -> of : 1
are of completely -> different : 1
of completely different -> types : 1
different types and -> so : 1
types and so -> are : 1
and so are -> the : 2
so are the -> function : 1
so are the -> specialization : 1
are the function -> the : 1
function the vector -> holds : 1
the vector holds -> instances : 1
vector holds instances -> of : 1
holds instances of -> all : 1
instances of all -> the : 1
all the function -> objects : 1
all the function -> arguments : 1
all the function -> signatures : 1
all the function -> calls : 1
function objects are -> implicitly : 1
function objects are -> implemented : 1
objects are implicitly -> wrapped : 1
are implicitly wrapped -> which : 1
implicitly wrapped which -> are : 1
wrapped which are -> then : 1
which are then -> stored : 1
which are then -> automatically : 1
which are then -> also : 1
which are then -> in : 1
are then stored -> in : 1
then stored in -> the : 1
in the const -> consumers : 1
the const consumers -> we : 1
const consumers we -> feed : 1
consumers we feed -> integer : 1
we feed integer -> values : 1
feed integer values -> to : 1
integer values to -> all : 1
values to all -> the : 1
all the data -> structures : 1
data structures by -> looping : 1
structures by looping -> over : 1
by looping over -> the : 2
looping over the -> then : 1
looping over the -> consumer : 1
looping over the -> vector : 1
over the then -> looping : 1
the then looping -> over : 1
then looping over -> the : 1
over the consumer -> function : 1
the consumer function -> which : 1
the consumer function -> that : 1
consumer function which -> we : 1
function which we -> call : 1
function which we -> just : 2
which we call -> with : 1
which we call -> the : 1
we call with -> those : 1
we call with -> a : 1
call with those -> for : 1
call with those -> individual : 1
with those for -> i : 1
those for i -> i : 1
i i for -> the : 1
i i for -> we : 1
i i for -> and : 1
i i for -> cout : 1
i i for -> i : 1
i for the -> should : 1
for the should -> now : 1
the should now -> contain : 1
should now contain -> the : 1
now contain the -> same : 1
contain the same -> number : 1
contain the same -> value : 1
contain the same -> we : 1
the same number -> print : 1
the same number -> in : 1
the same number -> it : 1
same number print -> their : 1
number print their -> and : 1
print their and -> running : 1
their and running -> the : 1
following which is -> just : 3
following which is -> what : 1
following which is -> luckily : 1
we it complicated -> part : 1
it complicated part -> of : 1
complicated part of -> this : 1
part of this -> recipe : 1
part of this -> it : 1
of this recipe -> is : 3
recipe is the -> following : 1
is the following -> consumers : 1
is the following -> c : 1
is the following -> it : 1
the following consumers -> objects : 1
following consumers objects -> and : 1
consumers objects and -> are : 1
objects and are -> each : 1
objects and are -> immediately : 1
and are each -> wrapped : 1
are each wrapped -> into : 1
each wrapped into -> a : 1
into a this -> call : 1
into a this -> is : 1
a this call -> returns : 1
this call returns -> function : 1
call returns function -> which : 1
returns function which -> then : 1
function which then -> each : 1
which then each -> capture : 1
then each capture -> references : 1
each capture references -> to : 1
capture references to -> one : 1
references to one -> although : 1
to one although -> these : 1
one although these -> function : 1
although these function -> objects : 1
function objects all -> accept : 1
objects all accept -> values : 1
all accept values -> as : 1
accept values as -> the : 1
values as the -> fact : 1
as the fact -> that : 1
the fact that -> they : 1
the fact that -> drops : 1
the fact that -> we : 2
the fact that -> threads : 1
fact that they -> capture : 1
that they capture -> completely : 1
they capture completely -> variables : 1
capture completely variables -> also : 1
completely variables also -> makes : 1
variables also makes -> them : 1
also makes them -> completely : 1
makes them completely -> different : 1
them completely different -> this : 1
this is like -> trying : 1
is like trying -> to : 1
like trying to -> stuff : 1
trying to stuff -> variables : 1
to stuff variables -> of : 1
stuff variables of -> and : 1
variables of and -> into : 1
variables of and -> if : 1
of and into -> a : 1
and into a -> although : 1
into a although -> these : 1
a although these -> types : 1
although these types -> have : 1
these types have -> in : 1
these types have -> the : 1
types have in -> order : 1
have in order -> to : 1
need to find -> a : 1
find a which -> can : 1
a which can -> store : 1
a which can -> do : 1
a which can -> automatically : 1
which can store -> very : 1
can store very -> function : 1
store very function -> that : 1
very function that -> an : 1
function that an -> object : 1
that an object -> can : 1
an object can -> store : 1
object can store -> any : 1
can store any -> function : 1
store any function -> object : 1
any function object -> or : 1
function object or -> which : 1
object or which -> accepts : 1
or which accepts -> an : 1
which accepts an -> integer : 1
which accepts an -> an : 1
which accepts an -> output : 2
which accepts an -> arbitrary : 1
an integer parameter -> and : 1
integer parameter and -> returns : 1
returns it decouples -> its : 1
it decouples its -> type : 1
decouples its type -> from : 1
its type from -> the : 2
type from the -> underlying : 1
type from the -> type : 1
type from the -> beginning : 1
type from the -> filesystem : 1
from the underlying -> function : 1
from the underlying -> they : 1
the underlying function -> object : 1
underlying function object -> using : 1
function object using -> write : 1
object using write -> something : 1
using write something -> like : 1
write something like -> f : 1
something like f -> function : 1
like f function -> object : 1
f function object -> which : 1
function object which -> is : 2
which is constructed -> from : 1
from the lambda -> wrapped : 1
the lambda wrapped -> into : 1
lambda wrapped into -> an : 1
an and whenever -> we : 1
and whenever we -> call : 1
we call this -> leads : 1
we call this -> results : 1
call this leads -> to : 1
which is to -> the : 1
the actual function -> object : 1
actual function object -> inside : 1
function object inside -> storing : 1
object inside storing -> function : 1
inside storing function -> instances : 1
storing function instances -> apply : 1
function instances apply -> some : 1
instances apply some -> we : 1
apply some we -> capture : 1
some we capture -> more : 1
we capture more -> and : 1
capture more and -> more : 1
and more variables -> in : 1
more variables in -> a : 1
variables in a -> lambda : 1
in a lambda -> it : 1
a lambda it -> must : 1
a lambda it -> it : 1
lambda it must -> grow : 1
it must grow -> if : 1
must grow if -> its : 1
grow if its -> size : 1
if its size -> is : 1
its size is -> not : 1
size is not -> too : 1
not too can -> store : 1
too can store -> it : 1
can store it -> within : 1
store it within -> if : 1
it within if -> the : 1
within if the -> size : 1
if the size -> of : 1
of the stored -> function : 1
the stored function -> object : 1
stored function object -> is : 1
object is too -> will : 1
is too will -> allocate : 1
too will allocate -> a : 1
will allocate a -> chunk : 1
allocate a chunk -> of : 1
a chunk of -> memory : 1
of memory on -> the : 1
memory on the -> heap : 1
the heap and -> then : 1
heap and then -> store : 1
store the large -> function : 1
the large function -> object : 1
large function object -> this : 1
function object this -> does : 1
object this does -> not : 1
does not affect -> the : 1
not affect the -> functionality : 1
affect the functionality -> of : 1
the functionality of -> our : 1
functionality of our -> but : 1
of our but -> we : 1
our but we -> should : 1
but we should -> know : 1
we should know -> about : 1
we should know -> we : 1
should know about -> this : 1
know about this -> can : 1
about this can -> impact : 1
this can impact -> the : 1
can impact the -> of : 1
impact the of -> our : 1
the of our -> lot : 1
of our lot -> of : 1
our lot of -> novice : 1
novice programmers think -> or : 1
programmers think or -> hope : 1
think or hope -> that : 1
or hope that -> actually : 1
hope that actually -> expresses : 1
that actually expresses -> the : 1
actually expresses the -> of : 1
expresses the of -> a : 1
the of a -> lambda : 1
of a lambda -> it : 1
lambda it it -> is : 1
it it is -> a : 1
is a polymorphic -> library : 1
a polymorphic library -> which : 1
polymorphic library which -> is : 1
library which is -> useful : 1
which is useful -> for : 1
which is useful -> if : 2
which is useful -> in : 1
is useful for -> wrapping : 1
useful for wrapping -> lambda : 1
for wrapping lambda -> expressions : 1
wrapping lambda expressions -> and : 1
lambda expressions and -> erasing : 1
lambda expressions and -> a : 1
lambda expressions and -> parameter : 1
expressions and erasing -> their : 1
and erasing their -> type : 1
erasing their type -> functions : 1
their type functions -> by : 1
type functions by -> lot : 1
functions by lot -> of : 1
by lot of -> tasks : 1
of tasks are -> not : 1
tasks are not -> really : 1
are not really -> worthy : 1
not really worthy -> of : 1
really worthy of -> being : 1
worthy of being -> implemented : 1
of being implemented -> in : 1
being implemented in -> completely : 1
implemented in completely -> custom : 1
in completely custom -> for : 1
completely custom for -> have : 1
custom for have -> a : 1
for have a -> look : 2
a look on -> how : 2
look on how -> a : 1
look on how -> to : 1
on how a -> programmer : 1
how a programmer -> might : 1
a programmer might -> solve : 1
programmer might solve -> the : 1
might solve the -> task : 1
solve the task -> of : 1
the task of -> finding : 1
the task of -> looping : 1
task of finding -> out : 1
of finding out -> how : 1
finding out how -> many : 1
out how many -> unique : 1
how many unique -> words : 1
many unique words -> a : 1
unique words a -> text : 1
words a text -> contains : 1
a text contains -> with : 1
text contains with -> the : 1
contains with the -> programming : 1
with the programming -> language : 1
the programming language -> the : 1
programming language the -> first : 1
language the first -> line : 1
first line defines -> a : 1
line defines a -> and : 1
defines a and -> the : 1
the second one -> demonstrates : 1
the second one -> tells : 1
second one demonstrates -> its : 1
one demonstrates its -> use : 1
demonstrates its use -> with : 1
its use with -> an : 1
use with an -> example : 1
with an example -> that : 1
with an example -> vector : 2
an example that -> is : 1
an example that -> profits : 1
example that is -> without : 1
that is without -> explaining : 1
is without explaining -> haskell : 1
without explaining haskell -> syntax : 1
explaining haskell syntax -> too : 1
haskell syntax too -> see : 1
syntax too see -> what : 1
too see what -> the : 1
what the code -> it : 1
the code it -> defines : 1
code it defines -> the : 1
it defines the -> function : 1
it defines the -> behavior : 1
defines the function -> called : 1
the function called -> which : 1
function called which -> applies : 1
called which applies -> a : 1
which applies a -> series : 1
which applies a -> special : 1
applies a series -> of : 1
a series of -> functions : 1
a series of -> calls : 2
a series of -> this : 1
a series of -> function : 1
series of functions -> to : 1
of functions to -> its : 1
functions to its -> it : 1
to its it -> first : 1
its it first -> maps : 1
it first maps -> all : 1
first maps all -> the : 1
maps all the -> characters : 1
all the characters -> from : 2
all the characters -> around : 1
all the characters -> we : 1
the characters from -> the : 2
characters from the -> input : 1
characters from the -> new : 1
characters from the -> source : 1
input to lowercase -> this : 1
to lowercase this -> words : 1
lowercase this words -> can : 1
this words can -> be : 1
words can be -> regarded : 1
can be regarded -> as : 1
regarded as the -> function : 1
as the function -> splits : 1
the function splits -> a : 1
function splits a -> sentence : 1
splits a sentence -> into : 1
a sentence into -> individual : 1
sentence into individual -> bar : 1
into individual bar -> to : 1
individual bar to -> next : 1
bar to next -> step : 1
to next step -> is : 1
step is sorting -> the : 1
is sorting the -> new : 1
sorting the new -> list : 1
the new list -> of : 1
new list of -> this : 2
list of this -> a : 1
list of this -> means : 1
this a word -> sequence : 1
a word sequence -> such : 1
word sequence such -> becomes : 1
sequence such becomes -> function : 1
such becomes function -> takes : 1
becomes function takes -> it : 1
function takes it -> equal : 1
takes it equal -> words : 1
it equal words -> into : 1
equal words into -> so : 1
words into so -> becomes : 1
into so becomes -> the : 1
so becomes the -> job : 1
becomes the job -> is : 1
the job is -> now : 1
job is now -> nearly : 1
is now nearly -> as : 1
now nearly as -> we : 1
nearly as we -> now : 1
as we now -> only : 1
we now only -> need : 1
now only need -> to : 1
need to count -> of : 1
to count of -> equal : 1
count of equal -> words : 1
of equal words -> we : 1
equal words we -> which : 1
words we which -> is : 1
exactly what the -> function : 1
what the function -> is : 1
is a style -> of : 1
a style of -> as : 1
style of as -> we : 1
of as we -> can : 1
as we can -> read : 1
as we can -> copy : 1
as we can -> the : 1
as we can -> pick : 1
we can read -> happens : 1
can read happens -> from : 1
read happens from -> right : 1
happens from right -> to : 1
from right to -> we : 1
from right to -> if : 1
right to we -> are : 1
to we are -> kind : 1
to we are -> not : 1
we are kind -> describing : 1
are kind describing -> a : 1
kind describing a -> transformation : 1
describing a transformation -> we : 1
a transformation we -> need : 1
transformation we need -> to : 1
need to care -> the : 1
need to care -> how : 1
need to care -> which : 1
to care the -> individual : 1
care the individual -> pieces : 1
the individual pieces -> are : 1
individual pieces are -> implemented : 1
pieces are implemented -> it : 1
are implemented it -> turns : 1
implemented it turns -> out : 1
it turns out -> that : 1
turns out that -> they : 1
out that they -> are : 1
they are slow -> or : 1
are slow or -> we : 1
slow or we -> are : 1
or we are -> not : 1
are not here -> to : 1
not here to -> praise : 1
here to praise -> to : 1
to praise to -> improve : 1
praise to improve -> our : 1
to improve our -> it : 1
improve our it -> is : 1
possible to work -> like : 1
to work like -> this : 1
work like this -> in : 1
like this in -> we : 1
this in we -> will : 1
in we will -> not : 1
in we will -> have : 1
in we will -> see : 1
will not completely -> reach : 1
not completely reach -> the : 1
completely reach the -> elegance : 1
reach the elegance -> of : 1
the elegance of -> the : 1
elegance of the -> haskell : 1
of the haskell -> example : 1
the haskell example -> but : 1
haskell example but -> we : 1
example but we -> still : 1
but we still -> have : 1
we still have -> the : 2
we still have -> to : 1
we still have -> an : 1
still have the -> fastest : 1
still have the -> use : 1
still have the -> destructor : 1
have the fastest -> programming : 1
the fastest programming -> language : 1
fastest programming language -> there : 1
programming language there -> this : 1
language there this -> example : 1
there this example -> explains : 1
this example explains -> how : 1
example explains how -> to : 1
how to imitate -> in : 1
to imitate in -> with : 1
imitate in with -> lambda : 1
in with lambda -> to : 1
with lambda to -> do : 1
lambda to do -> this : 1
lambda to do -> are : 1
we define some -> simple : 1
define some simple -> toy : 1
some simple toy -> function : 1
simple toy function -> objects : 1
toy function objects -> and : 1
function objects and -> so : 1
objects and so -> we : 1
get a single -> function : 1
a single function -> the : 1
a single function -> end : 1
single function the -> simple : 1
function the simple -> toy : 1
the simple toy -> functions : 1
simple toy functions -> after : 1
toy functions after -> each : 1
functions after each -> other : 1
after each other -> to : 1
each other to -> the : 1
other to the -> input : 1
input we give -> in : 1
input we give -> it : 1
we give in -> order : 1
give in order -> to : 1
do we write -> our : 1
we write our -> own : 1
our own concatenation -> helper : 1
own concatenation helper -> we : 1
concatenation helper we -> need : 1
helper we need -> some : 1
we need some -> we : 1
we need some -> other : 1
need some we -> implement : 1
some we implement -> the : 1
implement the helper -> which : 1
the helper which -> arbitrarily : 1
helper which arbitrarily -> takes : 1
which arbitrarily takes -> many : 1
arbitrarily takes many -> these : 1
takes many these -> parameters : 1
these parameters will -> be : 1
parameters will be -> such : 1
will be such -> and : 1
be such and -> and : 1
such and and -> the : 1
such and and -> we : 1
and and the -> result : 1
the result will -> be : 1
result will be -> another : 1
will be another -> function : 1
be another function -> object : 1
another function object -> on : 1
another function object -> that : 2
function object on -> any : 1
object on any -> template : 1
on any template -> typename : 1
any template typename -> auto : 1
template typename auto -> ts : 1
auto ts it -> gets : 1
ts it gets -> a : 1
it gets a -> little : 2
gets a little -> when : 1
gets a little -> complicated : 1
gets a little -> we : 1
a little when -> the : 1
little when the -> user : 1
when the user -> provides : 1
user provides functions -> and : 1
provides functions and -> we : 1
functions and we -> will : 1
we will evaluate -> this : 1
will evaluate this -> which : 1
evaluate this which -> again : 1
this which again -> expands : 1
which again expands -> to : 1
again expands to -> where : 1
expands to where -> the : 1
where the recursion -> so : 1
the recursion so -> we : 1
recursion so we -> get : 1
we get this -> chain : 1
get this chain -> of : 1
this chain of -> function : 1
chain of function -> calls : 1
of function calls -> concatenation : 1
function calls concatenation -> of : 1
calls concatenation of -> these : 1
concatenation of these -> user : 1
of these user -> captured : 1
these user captured -> by : 1
user captured by -> a : 1
captured by a -> lambda : 1
by a lambda -> which : 1
a lambda which -> can : 1
a lambda which -> captures : 1
a lambda which -> we : 1
a lambda which -> is : 1
lambda which can -> later : 1
which can later -> take : 1
can later take -> some : 1
later take some -> and : 1
take some and -> then : 1
some and then -> forward : 1
and then forward -> them : 1
then forward them -> this : 1
forward them this -> lambda : 1
them this lambda -> expression : 1
this lambda expression -> is : 1
this lambda expression -> arbitrarily : 1
lambda expression is -> what : 1
lambda expression is -> a : 1
expression is what -> we : 1
what we the -> construct : 1
we the construct -> checks : 1
the construct checks -> are : 1
construct checks are -> in : 1
checks are in -> a : 1
are in a -> recursion : 1
in a recursion -> step : 1
a recursion step -> with : 1
recursion step with -> more : 1
step with more -> than : 1
with more than -> one : 1
with more than -> two : 1
more than one -> function : 1
more than one -> word : 1
more than one -> which : 1
more than one -> thread : 1
than one function -> to : 1
one function to -> concatenate : 1
function to concatenate -> if : 1
to concatenate if -> constexpr : 1
concatenate if constexpr -> return : 1
if constexpr return -> return : 2
constexpr return return -> other : 1
constexpr return return -> else : 1
return return other -> branch : 1
return other branch -> of : 1
other branch of -> the : 1
branch of the -> construct : 1
of the construct -> is : 1
the construct is -> selected : 1
construct is selected -> by : 1
is selected by -> the : 1
selected by the -> we : 1
by the we -> are : 1
we are at -> the : 1
at the of -> the : 1
of the in -> such : 1
of the in -> the : 1
of the in -> order : 1
of the in -> both : 1
the in such -> we : 1
such we just -> return : 2
return the because -> it : 1
the only parameter -> else : 1
only parameter else -> return : 1
parameter else return -> use : 1
else return use -> our : 1
return use our -> cool : 1
use our cool -> new : 1
our cool new -> function : 1
cool new function -> concatenation : 1
new function concatenation -> helper : 1
function concatenation helper -> with : 1
concatenation helper with -> some : 1
helper with some -> functions : 1
with some functions -> we : 1
some functions we -> want : 1
functions we want -> to : 1
want to see -> begin : 1
want to see -> them : 1
want to see -> in : 1
want to see -> a : 1
to see begin -> with : 1
see begin with -> the : 1
begin with the -> where : 1
begin with the -> main : 1
with the where -> we : 1
the where we -> define : 1
the where we -> removed : 1
where we define -> two : 1
where we define -> the : 1
define two cheap -> simple : 1
two cheap simple -> function : 1
cheap simple function -> int : 1
simple function int -> auto : 1
function int auto -> twice : 1
int auto twice -> return : 1
auto twice return -> i : 2
twice return i -> auto : 1
twice return i -> function : 1
return i auto -> thrice : 1
return i auto -> twice : 1
return i auto -> return : 1
i auto thrice -> return : 1
auto thrice return -> i : 1
thrice return i -> concatenate : 1
return i concatenate -> our : 1
i concatenate our -> two : 1
concatenate our two -> multiplier : 1
our two multiplier -> function : 1
two multiplier function -> objects : 1
multiplier function objects -> with : 1
function objects with -> the : 1
objects with the -> stl : 1
with the stl -> which : 1
with the stl -> algorithm : 1
with the stl -> algorithms : 1
with the stl -> way : 1
with the stl -> provides : 1
stl which takes -> two : 1
parameters and simply -> returns : 1
and simply returns -> their : 1
simply returns their -> this : 1
returns their this -> we : 1
their this we -> get : 1
their this we -> will : 1
this we get -> a : 2
get a function -> b : 1
a function b -> auto : 1
function b auto -> combined : 1
b auto combined -> use : 1
auto combined use -> looks : 1
combined use looks -> like : 1
use looks like -> a : 1
looks like a -> single : 1
looks like a -> perfectly : 1
looks like a -> piece : 1
looks like a -> but : 1
like a single -> normal : 1
a single normal -> function : 1
single normal function -> and : 1
normal function and -> the : 1
function and the -> compiler : 1
function and the -> whole : 1
function and the -> and : 1
the compiler is -> also : 1
compiler is also -> able : 1
is also able -> to : 1
also able to -> concatenate : 1
able to concatenate -> those : 1
to concatenate those -> functions : 1
concatenate those functions -> without : 1
those functions without -> any : 1
functions without any -> unnecessary : 1
without any unnecessary -> and : 1
any unnecessary and -> running : 1
unnecessary and running -> our : 1
following which we -> also : 1
which we also -> because : 1
we also because -> is : 1
also because is -> it : 1
because is it -> complicated : 1
is it complicated -> thing : 1
it complicated thing -> in : 1
complicated thing in -> this : 1
thing in this -> section : 1
in this section -> is : 2
in this section -> was : 1
this section is -> the : 1
this section is -> about : 1
this section is -> all : 1
this section is -> admittedly : 1
section is the -> it : 1
the it looks -> horribly : 1
it looks horribly -> complicated : 1
looks horribly complicated -> because : 1
horribly complicated because -> it : 1
complicated because it -> unpacks : 1
because it unpacks -> the : 1
it unpacks the -> parameter : 1
unpacks the parameter -> pack : 1
pack into another -> lambda : 1
into another lambda -> which : 1
another lambda which -> recursively : 1
lambda which recursively -> calls : 1
which recursively calls -> with : 1
recursively calls with -> less : 1
calls with less -> typename : 1
with less typename -> auto : 1
less typename auto -> ts : 1
auto ts if -> constexpr : 1
ts if constexpr -> return : 1
return return else -> return : 1
else return return -> write : 1
return return write -> a : 1
return write a -> simpler : 1
write a simpler -> which : 1
a simpler which -> concatenates : 1
simpler which concatenates -> exactly : 1
which concatenates exactly -> typename : 1
concatenates exactly typename -> typename : 1
exactly typename typename -> auto : 1
typename typename auto -> g : 1
typename typename auto -> a : 1
typename auto g -> h : 1
auto g h -> return : 1
g h return -> return : 1
h return return -> already : 1
return return already -> looks : 1
return already looks -> but : 1
already looks but -> less : 1
looks but less -> we : 1
but less we -> return : 1
less we return -> a : 1
we return a -> lambda : 1
we return a -> reference : 1
we return a -> tuple : 1
we return a -> string : 1
we return a -> default : 1
return a lambda -> which : 1
return a lambda -> expression : 1
lambda which captures -> and : 1
which captures and -> this : 1
captures and this -> lambda : 1
and this lambda -> expression : 1
lambda expression arbitrarily -> accepts : 1
expression arbitrarily accepts -> many : 1
arbitrarily accepts many -> just : 1
arbitrarily accepts many -> whenever : 1
accepts many just -> forwards : 1
many just forwards -> them : 1
just forwards them -> to : 1
forwards them to -> a : 1
forwards them to -> your : 1
to a call -> chain : 1
to a call -> and : 1
to a call -> of : 1
a call chain -> of : 1
a call chain -> from : 1
call chain of -> and : 1
chain of and -> when : 1
of and when -> we : 1
and when we -> write : 1
we write combined -> and : 1
write combined and -> later : 1
combined and later -> call : 1
and later call -> that : 1
later call that -> function : 1
call that function -> object : 1
function object with -> two : 1
object with two -> such : 1
with two such -> then : 1
two such then -> the : 1
such then the -> represented : 1
then the represented -> from : 1
the represented from -> the : 1
represented from the -> at : 1
from the at -> the : 1
from the at -> it : 1
the at the -> much : 1
at the much -> more : 1
the much more -> generic : 1
the much more -> complicated : 1
much more generic -> function : 1
more generic function -> only : 1
generic function only -> thing : 1
function only thing -> we : 1
we do really -> differently : 1
do really differently -> is : 1
really differently is -> the : 1
differently is the -> we : 1
the we write -> which : 1
we write which -> evaluates : 1
write which evaluates -> to : 1
evaluates to in -> the : 1
to in the -> next : 1
to in the -> decimal : 1
the next recursive -> which : 1
next recursive which -> then : 1
recursive which then -> in : 1
which then in -> complex : 1
then in complex -> predicates : 1
in complex predicates -> with : 1
with logical filtering -> data : 1
logical filtering data -> with : 1
filtering data with -> generic : 1
data with generic -> we : 1
with generic we -> end : 1
generic we end -> up : 1
we end up -> defining : 1
we end up -> with : 1
we end up -> calling : 1
end up defining -> which : 1
up defining which -> tell : 1
defining which tell -> what : 1
which tell what -> data : 1
tell what data -> we : 1
what data we -> and : 1
what data we -> do : 1
data we and -> what : 1
we and what -> data : 1
we and what -> the : 1
and what data -> we : 1
data we do -> not : 1
do not sometimes -> predicates : 1
not sometimes predicates -> are : 1
sometimes predicates are -> of : 1
predicates are of -> filtering : 1
are of filtering -> for : 1
of filtering for -> we : 1
filtering for we -> could : 1
for we could -> implement : 1
for we could -> nicely : 1
we could implement -> a : 1
we could implement -> the : 1
we could implement -> our : 1
could implement a -> predicate : 1
implement a predicate -> its : 1
implement a predicate -> for : 1
a predicate its -> input : 1
predicate its input -> string : 1
its input string -> with : 2
input string with -> another : 1
input string with -> of : 1
string with another -> predicate : 1
with another predicate -> could : 1
another predicate could -> return : 1
predicate could return -> its : 1
could return its -> input : 1
return its input -> string : 1
string with of -> writing : 1
with of writing -> custom : 1
of writing custom -> predicates : 1
writing custom predicates -> all : 1
custom predicates all -> the : 1
predicates all the -> we : 1
all the we -> can : 1
all the we -> assume : 1
we can predicates -> by : 1
can predicates by -> combining : 1
predicates by combining -> if : 1
by combining if -> we : 1
combining if we -> want : 1
want to filter -> strings : 1
to filter strings -> with : 1
filter strings with -> end : 1
strings with end -> with : 1
with end with -> we : 1
end with we -> can : 1
just pick our -> predicates : 1
pick our predicates -> and : 1
our predicates and -> them : 1
predicates and them -> with : 1
and them with -> a : 1
them with a -> logical : 1
them with a -> little : 1
with a logical -> in : 1
a logical in -> this : 1
logical in this -> we : 1
this we play -> with : 1
order to find -> a : 1
order to find -> the : 2
order to find -> out : 1
find a comfortable -> way : 1
a comfortable way -> to : 1
comfortable way to -> do : 1
to do to -> do : 4
do to do -> will : 1
do to do -> this : 3
to do will -> implement : 4
to do will -> transform : 1
to do will -> use : 1
to do will -> sample : 1
to do will -> play : 1
to do will -> write : 2
to do will -> start : 1
do will implement -> very : 1
do will implement -> a : 3
will implement very -> simple : 1
implement very simple -> string : 1
very simple string -> filter : 1
simple string filter -> and : 1
string filter and -> then : 1
filter and then -> we : 1
we will combine -> them : 1
will combine them -> with : 1
combine them with -> a : 1
combine them with -> stl : 1
helper function the -> combination : 1
function the combination -> for : 1
the combination for -> us : 1
combination for us -> in : 1
us in a -> generic : 1
us in a -> simple : 1
a generic include -> some : 1
generic include some -> headers : 1
some headers we -> are : 1
headers we are -> going : 1
going to need -> them : 1
going to need -> is : 1
to need them -> we : 1
need them we -> implement : 1
them we implement -> predicate : 1
we implement predicate -> the : 1
implement predicate the -> first : 1
implement predicate the -> function : 1
predicate the first -> one : 1
first one tells -> if : 1
one tells if -> a : 2
tells if a -> string : 2
tells if a -> given : 1
if a string -> the : 1
if a string -> ends : 1
a string the -> character : 1
string the character -> and : 1
the character and -> the : 1
character and the -> second : 1
second one tells -> if : 1
a string ends -> with : 1
string ends with -> the : 1
ends with the -> character : 1
with the character -> static : 1
the character static -> bool : 1
character static bool -> return : 1
static bool return -> static : 1
static bool return -> implement : 1
static bool return -> n : 1
bool return static -> bool : 1
return static bool -> return : 1
bool return implement -> a : 1
return implement a -> helper : 1
return implement a -> function : 1
implement a helper -> it : 1
implement a helper -> for : 1
implement a helper -> class : 1
implement a helper -> which : 1
implement a helper -> function : 3
a helper it -> takes : 1
helper it takes -> a : 1
takes a binary -> function : 2
a binary function -> as : 1
a binary function -> calculate : 1
a binary function -> in : 1
a binary function -> on : 1
a binary function -> to : 1
a binary function -> such : 1
binary function as -> which : 1
function as which -> could : 1
as which could -> be : 1
could be or -> the : 1
be or the -> logical : 1
or the logical -> for : 1
the logical for -> it : 1
logical for it -> takes : 1
for it takes -> two : 1
takes two other -> which : 1
two other which -> shall : 1
other which shall -> be : 1
shall be two -> predicate : 1
be two predicate -> functions : 1
two predicate functions -> then : 1
predicate functions then -> template : 1
functions then template -> typename : 1
then template typename -> typename : 1
template typename typename -> auto : 1
template typename typename -> typename : 1
typename auto a -> b : 1
auto a b -> simply : 1
a b simply -> return : 1
b simply return -> a : 1
simply return a -> lambda : 1
lambda expression the -> new : 1
expression the new -> predicate : 1
the new predicate -> it : 1
new predicate it -> forwards : 1
predicate it forwards -> a : 1
it forwards a -> parameter : 1
forwards a parameter -> to : 1
a parameter to -> both : 1
a parameter to -> auto : 1
parameter to both -> predicates : 1
to both predicates -> puts : 1
both predicates puts -> the : 1
predicates puts the -> results : 1
puts the results -> of : 1
the results of -> both : 1
the results of -> these : 1
the results of -> the : 1
results of both -> into : 1
of both into -> the : 1
both into the -> binary : 1
into the binary -> function : 1
into the binary -> the : 1
the binary function -> and : 1
the binary function -> object : 1
the binary function -> call : 1
the binary function -> is : 1
binary function and -> returns : 1
function and returns -> its : 1
function and returns -> the : 1
function and returns -> a : 1
and returns its -> return : 1
and returns its -> size : 1
returns its return -> return : 1
its return return -> state : 1
return return state -> that : 1
return state that -> we : 1
state that we -> use : 1
we use to -> spare : 1
we use to -> copy : 1
we use to -> find : 1
we use to -> unpack : 1
we use to -> count : 1
we use to -> iterate : 1
we use to -> feed : 1
use to spare -> us : 1
some typing in -> the : 1
typing in the -> using : 1
in the using -> namespace : 1
the using namespace -> combine : 1
the using namespace -> will : 1
the using namespace -> vector : 1
the using namespace -> data : 1
the using namespace -> implement : 1
the using namespace -> are : 1
the using namespace -> whole : 1
the using namespace -> every : 1
using namespace combine -> our : 1
namespace combine our -> functions : 1
combine our functions -> in : 1
our functions in -> another : 1
functions in another -> predicate : 1
in another predicate -> if : 1
another predicate if -> a : 1
predicate if a -> given : 1
if a given -> string : 1
if a given -> character : 1
a given string -> begins : 1
given string begins -> with : 1
string begins with -> ends : 1
begins with ends -> with : 1
with ends with -> as : 1
ends with as -> does : 1
with as does -> or : 1
as does or -> as : 1
does or as -> the : 1
or as the -> binary : 1
as the binary -> we : 1
binary we it -> is : 1
we it is -> a : 1
we it is -> simple : 1
we it is -> not : 1
is a template -> class : 1
template class that -> needs : 1
class that needs -> to : 1
that needs to -> be : 2
that needs to -> manage : 1
that needs to -> share : 1
to be so -> we : 1
be so we -> use : 1
it with curly -> braces : 1
with curly braces -> in : 1
curly braces in -> order : 1
braces in order -> to : 1
order to instantiate -> note : 1
to instantiate note -> that : 1
instantiate note that -> we : 1
that we provide -> a : 1
that we provide -> as : 1
we provide a -> template : 1
we provide a -> version : 1
we provide a -> helper : 1
provide a template -> for : 1
a template for -> this : 1
template for this -> to : 1
for this to -> this : 1
this to this -> specialization : 1
to this specialization -> of : 1
this specialization of -> the : 1
of the class -> deduces : 1
of the class -> and : 1
the class deduces -> all : 1
class deduces all -> parameter : 1
deduces all parameter -> types : 1
all parameter types -> int : 1
parameter types int -> auto : 1
types int auto -> iterate : 1
int auto iterate -> over : 1
auto iterate over -> the : 1
over the standard -> print : 1
over the standard -> provide : 1
the standard print -> all : 1
standard print all -> words : 1
all words back -> to : 1
words back to -> the : 1
the which satisfies -> our : 1
which satisfies our -> cout : 1
satisfies our cout -> and : 1
our cout and -> running : 1
following we feed -> the : 1
we feed the -> program : 2
feed the program -> with : 1
feed the program -> from : 1
the program with -> but : 1
the program with -> its : 1
the program with -> the : 2
the program with -> partitions : 1
the program with -> a : 1
the program with -> samples : 1
program with but -> only : 1
with but only -> the : 1
but only the -> predicate : 1
only the predicate -> echo : 1
the predicate echo -> cb : 1
predicate echo cb -> ab : 1
echo cb ab -> stl : 1
cb ab stl -> already : 1
ab stl already -> provides : 1
stl already provides -> a : 1
stl already provides -> addition : 1
stl already provides -> in : 1
already provides a -> useful : 1
provides a useful -> bunch : 1
a useful bunch -> of : 1
useful bunch of -> functional : 1
bunch of functional -> objects : 1
of functional objects -> such : 1
functional objects such -> as : 1
objects such as -> well : 1
such as well -> as : 1
well as many -> so : 1
as many so -> we : 1
many so we -> do : 1
so we do -> not : 4
need to reimplement -> them : 1
to reimplement them -> in : 1
reimplement them in -> every : 1
them in every -> a : 1
in every a -> good : 1
every a good -> idea : 1
a good idea -> to : 2
good idea to -> have : 1
good idea to -> play : 1
idea to have -> a : 1
at the reference -> and : 1
the reference and -> explore : 1
reference and explore -> there : 1
and explore there -> multiple : 1
explore there multiple -> functions : 1
there multiple functions -> with : 1
the same are -> a : 1
same are a -> lot : 1
lot of which -> lead : 1
of which lead -> to : 1
which lead to -> repetitive : 1
lead to repetitive -> a : 1
to repetitive a -> lot : 1
repetitive a lot -> of : 1
lot of repetitive -> code : 1
of repetitive code -> can : 1
repetitive code can -> be : 1
can be eliminated -> easily : 1
be eliminated easily -> using : 1
eliminated easily using -> lambda : 1
easily using lambda -> expressions : 1
using lambda expressions -> and : 1
expressions and a -> lambda : 1
and a lambda -> expression : 2
lambda expression helper -> such : 1
expression helper such -> repetitive : 1
helper such repetitive -> tasks : 1
such repetitive tasks -> is : 1
repetitive tasks is -> created : 1
tasks is created -> very : 1
is created very -> this : 1
created very this -> we : 1
very this we -> will : 1
we will play -> with : 3
we will play -> a : 1
we will play -> around : 4
we will play -> later : 1
will play with -> lambda : 1
will play with -> both : 1
will play with -> by : 1
will play with -> such : 1
order to forward -> a : 1
to forward a -> single : 1
forward a single -> call : 1
a single call -> with : 1
a single call -> to : 2
single call with -> all : 1
call with all -> its : 1
with all its -> parameters : 1
all its parameters -> to : 1
parameters to multiple -> this : 1
to multiple this -> is : 1
multiple this is -> going : 1
this is going -> to : 1
going to happen -> without : 1
to happen without -> any : 1
happen without any -> data : 1
without any data -> structures : 1
any data structures -> in : 1
data structures in -> so : 1
data structures in -> order : 1
structures in so -> the : 1
in so the -> compiler : 1
so the compiler -> has : 1
the compiler has -> a : 1
compiler has a -> to : 1
has a to -> binary : 1
a to binary -> without : 1
to binary without -> to : 1
binary without to -> do : 1
without to do -> are : 1
write a lambda -> expression : 1
lambda expression which -> forwards : 2
expression which forwards -> a : 2
which forwards a -> single : 2
forwards a single -> call : 2
single call to -> multiple : 2
call to multiple -> and : 1
call to multiple -> calls : 1
to multiple and -> another : 1
multiple and another -> lambda : 1
and another lambda -> expression : 1
another lambda expression -> which : 1
to multiple calls -> of : 1
to multiple calls -> with : 1
multiple calls of -> other : 1
calls of other -> in : 1
of other in -> our : 1
other in our -> we : 1
our we are -> going : 1
going to use -> this : 1
going to use -> in : 2
going to use -> linear : 1
going to use -> the : 2
going to use -> on : 1
going to use -> different : 1
going to use -> which : 1
use this to -> print : 1
this to print -> a : 1
to print a -> single : 1
to print a -> but : 1
to print a -> line : 1
print a single -> message : 1
a single message -> with : 1
single message with -> different : 1
message with different -> printer : 1
with different printer -> include : 1
different printer include -> the : 1
printer include the -> stl : 1
include the stl -> header : 2
the stl header -> we : 1
the stl header -> that : 1
stl header we -> need : 1
header we need -> for : 1
we need for -> printing : 1
we need for -> the : 1
need for printing -> we : 1
for printing we -> implement : 1
for printing we -> just : 1
printing we implement -> the : 1
implement the which -> is : 1
which is central -> to : 1
is central to -> this : 1
central to this -> an : 1
this an arbitrary -> number : 1
number of functions -> as : 1
of functions as -> parameters : 1
functions as parameters -> and : 1
as parameters and -> returns : 1
returns a lambda -> expression : 2
lambda expression that -> accepts : 1
lambda expression that -> arbitrarily : 1
lambda expression that -> does : 1
expression that accepts -> one : 1
that accepts one -> it : 1
accepts one it -> forwards : 1
accepts one it -> surrounded : 1
one it forwards -> this : 1
it forwards this -> parameter : 1
forwards this parameter -> to : 1
this parameter to -> all : 1
parameter to all -> the : 1
all the functions -> provided : 1
all the functions -> we : 1
the functions provided -> this : 1
functions provided this -> we : 1
provided this we -> can : 1
can and leads -> to : 1
and leads to -> a : 1
to a sequence -> of : 1
a sequence of -> function : 1
sequence of function -> looks : 1
of function looks -> really : 1
function looks really -> we : 1
looks really we -> need : 1
looks really we -> are : 1
really we need -> a : 1
need a syntax -> trick : 1
a syntax trick -> in : 1
syntax trick in -> order : 1
trick in order -> to : 1
the parameter into -> a : 1
parameter into a -> series : 1
into a series -> of : 1
series of calls -> by : 1
series of calls -> cannot : 1
series of calls -> on : 1
of calls by -> using : 1
calls by using -> static : 1
by using static -> auto : 1
using static auto -> multicall : 1
static auto multicall -> return : 1
auto multicall return -> next : 1
multicall return next -> helper : 1
return next helper -> accepts : 1
next helper accepts -> a : 1
helper accepts a -> and : 1
and a what -> it : 1
a what it -> does : 1
what it does -> is : 1
it does is -> it : 1
does is it -> with : 1
is it with -> each : 1
it with each -> of : 1
each of those -> this : 1
those this call -> leads : 1
this call leads -> to : 1
call leads to -> a : 1
to a series -> of : 2
series of this -> function : 1
this function essentially -> uses : 1
function essentially uses -> the : 1
essentially uses the -> same : 1
uses the same -> syntax : 1
the same syntax -> trick : 1
same syntax trick -> to : 1
syntax trick to -> expand : 1
trick to expand -> the : 1
the parameter to -> a : 1
parameter to a -> series : 1
series of function -> as : 1
of function as -> the : 1
function as the -> other : 1
as the other -> function : 1
as the other -> the : 1
the other function -> static : 1
the other function -> will : 1
other function static -> auto : 1
function static auto -> auto : 1
function static auto -> return : 1
static auto auto -> function : 1
auto auto function -> accepts : 1
auto function accepts -> two : 1
function accepts two -> characters : 1
function accepts two -> string : 1
accepts two characters -> and : 1
two characters and -> returns : 1
characters and returns -> a : 1
returns a new -> function : 1
returns a new -> end : 1
returns a new -> string : 1
a new function -> which : 1
new function which -> accepts : 1
which accepts one -> it : 1
one it surrounded -> by : 1
it surrounded by -> the : 1
surrounded by the -> two : 1
by the two -> characters : 1
the two characters -> we : 1
two characters we -> just : 1
characters we just -> static : 1
we just static -> auto : 1
just static auto -> char : 1
static auto char -> return : 1
auto char return -> a : 1
return a x -> b : 1
a x b -> we : 1
x b we -> can : 1
can finally put -> everything : 1
finally put everything -> to : 1
put everything to -> use : 1
everything to use -> in : 1
use in the -> at : 1
the at we -> define : 1
the at we -> see : 1
at we define -> and : 1
we define and -> they : 1
define and they -> represent : 1
and they represent -> print : 1
they represent print -> functions : 1
represent print functions -> that : 1
print functions that -> accept : 1
functions that accept -> values : 1
that accept values -> and : 1
accept values and -> print : 1
values and print -> them : 1
and print them -> surrounded : 1
and print them -> they : 1
and print them -> like : 1
print them surrounded -> function : 1
them surrounded function -> takes : 1
surrounded function takes -> any : 1
function takes any -> parameter : 1
takes any parameter -> and : 1
any parameter and -> just : 1
parameter and just -> prints : 1
and just prints -> a : 1
just prints a -> line : 1
just prints a -> single : 1
prints a line -> break : 1
prints a line -> that : 1
a line break -> int : 1
a line break -> auto : 1
a line break -> but : 1
line break int -> auto : 1
break int auto -> f : 1
int auto f -> auto : 1
auto f auto -> g : 2
f auto g -> auto : 2
auto g auto -> h : 2
g auto h -> auto : 1
g auto h -> is : 1
auto h auto -> nl : 1
h auto nl -> combine : 1
auto nl combine -> all : 1
nl combine all -> of : 1
combine all of -> them : 1
all of them -> using : 1
all of them -> in : 1
all of them -> and : 1
all of them -> have : 1
of them using -> our : 1
of them using -> one : 1
them using our -> auto : 1
using our auto -> each : 1
our auto each -> of : 1
auto each of -> the : 1
the numbers we -> we : 1
numbers we we -> want : 1
we we want -> to : 1
to see them -> individually : 1
see them individually -> printed : 1
them individually printed -> three : 1
individually printed three -> times : 1
printed three times -> different : 1
three times different -> pairs : 1
times different pairs -> of : 1
different pairs of -> this : 1
pairs of this -> we : 1
can do a -> single : 1
can do a -> binary : 1
can do a -> through : 1
can do a -> lot : 1
do a single -> function : 1
single function end -> up : 1
function end up -> with : 1
up with to -> our : 1
with to our -> which : 1
to our which -> to : 1
our which to -> and : 1
which to and -> compiling : 1
to and compiling -> and : 1
and compiling and -> think : 1
compiling and think -> about : 1
and think about -> what : 1
think about what -> output : 1
about what output -> to : 1
what output to -> it : 1
output to it -> helpers : 1
to it helpers -> we : 1
it helpers we -> just : 1
helpers we just -> implemented : 1
we just implemented -> look : 1
we just implemented -> returns : 1
we just implemented -> the : 1
just implemented look -> horribly : 1
implemented look horribly -> this : 1
look horribly this -> we : 1
horribly this we -> expand : 1
this we expand -> parameter : 1
we expand parameter -> packs : 1
expand parameter packs -> with : 1
packs with why -> did : 1
with why did -> we : 1
why did we -> even : 1
did we even -> use : 1
we even use -> that : 1
even use that -> data : 1
use that data -> have : 1
that data have -> a : 1
data have a -> look : 2
look at auto -> heart : 1
look at auto -> return : 1
at auto heart -> of : 1
auto heart of -> this : 1
heart of this -> function : 1
is the is -> a : 1
is a parameter -> and : 1
parameter and we -> need : 1
and we need -> to : 4
need to it -> in : 1
get the individual -> values : 1
individual values out -> of : 1
values out of -> it : 1
values out of -> the : 1
values out of -> in : 1
values out of -> this : 1
of it and -> feed : 1
it and feed -> them : 1
and feed them -> to : 1
feed them to -> individual : 1
them to individual -> we : 1
to individual we -> cannot : 1
individual we cannot -> just : 1
cannot just write -> the : 1
just write the -> which : 1
write the which -> we : 1
the which we -> already : 2
the which we -> can : 1
the which we -> created : 1
which we already -> we : 1
which we already -> know : 1
we already we -> can : 1
already we can -> do : 1
already we can -> structure : 1
can do is -> constructing : 1
do is constructing -> a : 1
is constructing a -> list : 1
constructing a list -> of : 1
list of values -> using : 1
of values using -> which : 1
values using which -> has : 1
using which has -> a : 1
which has a -> variadic : 1
which has a -> similar : 1
has a variadic -> an : 1
a variadic an -> expression : 1
variadic an expression -> such : 1
an expression such -> the : 1
an expression such -> t : 1
expression such the -> but : 1
such the but -> it : 1
but it has -> have : 1
but it has -> a : 2
it has have -> a : 1
has have a -> look : 1
at an implementation -> of : 1
an implementation of -> which : 1
implementation of which -> does : 1
of which does -> just : 1
of which does -> not : 1
which does just -> so : 1
does just so -> it : 1
just so it -> looks : 1
it looks simpler -> than : 1
looks simpler than -> what : 1
simpler than what -> we : 1
than what we -> auto : 1
than what we -> returns : 1
than what we -> searched : 1
what we auto -> return : 1
we auto return -> is : 1
auto return is -> easier : 1
auto return is -> already : 1
return is easier -> to : 1
easier to but -> are : 1
to but are -> the : 1
but are the -> constructs : 1
are the constructs -> an : 1
the constructs an -> actual : 1
constructs an actual -> initializer : 1
an actual initializer -> list : 1
actual initializer list -> of : 1
initializer list of -> return : 1
initializer list of -> the : 1
initializer list of -> integer : 1
initializer list of -> student : 1
list of return -> values : 1
of return values -> from : 1
return values from -> all : 2
return values from -> we : 1
values from all -> the : 2
from all the -> at : 1
from all the -> but : 1
from all the -> functions : 1
all the at -> this : 1
the at this -> we : 1
the at this -> other : 1
at this we -> do : 1
at this we -> are : 2
at this we -> did : 1
this we do -> not : 4
not care about -> the : 1
not care about -> their : 1
about the return -> that : 1
the return that -> initializer : 1
return that initializer -> although : 1
that initializer although -> we : 1
initializer although we -> want : 1
although we want -> a : 1
we want a -> and : 1
we want a -> string : 1
we want a -> in : 1
we want a -> unique : 1
we want a -> shared : 1
we want a -> thread : 1
want a and -> which : 1
a and which -> returns : 1
and which returns -> possible : 1
which returns possible -> that : 1
returns possible that -> is : 1
possible that is -> a : 1
that is a -> which : 1
that is a -> nice : 1
that is a -> long : 1
that is a -> it : 1
a which does -> not : 1
not even return -> in : 1
even return in -> which : 1
return in which -> this : 1
in which this -> would : 1
which this would -> not : 1
not even much -> more : 1
even much more -> complicated : 1
much more complicated -> function : 2
more complicated function -> fixes : 1
more complicated function -> static : 1
complicated function fixes -> all : 1
function fixes all -> these : 1
fixes all these -> it : 1
all these it -> does : 1
these it does -> the : 1
it does the -> following : 1
does the following -> things : 1
does the following -> have : 1
the following things -> to : 1
following things to -> achieve : 1
things to achieve -> does : 1
to achieve does -> not : 1
achieve does not -> the : 1
does not the -> initializer : 1
not the initializer -> but : 1
the initializer but -> it : 1
initializer but it -> the : 1
it the whole -> expression : 1
it the whole -> string : 1
the whole expression -> to : 1
whole expression to -> the : 1
expression to the -> initializer : 1
to the initializer -> it : 1
the initializer it -> into : 1
initializer it into -> this : 1
it into this -> leads : 1
it into this -> to : 1
it into this -> int : 1
into this leads -> to : 1
return value being -> while : 1
value being while -> is : 1
being while is -> put : 1
while is put -> into : 1
is put into -> the : 1
into the initializer -> the : 1
the initializer the -> expression : 1
initializer the expression -> is : 1
the expression is -> again : 2
expression is again -> cast : 1
expression is again -> a : 1
is again cast -> to : 1
again cast to -> so : 1
cast to so -> the : 1
to so the -> return : 1
so the return -> value : 1
return value is -> really : 1
return value is -> the : 1
value is really -> not : 1
is really not -> processed : 1
really not processed -> it : 1
not processed it -> has : 1
processed it has -> all : 1
it has all -> this : 1
has all this -> together : 1
all this together -> unluckily : 1
this together unluckily -> leads : 1
together unluckily leads -> to : 1
unluckily leads to -> an : 1
leads to an -> but : 1
leads to an -> abrupt : 1
leads to an -> immediate : 1
to an but -> it : 1
an but it -> does : 2
but it does -> work : 1
but it does -> return : 1
but it does -> not : 4
it does work -> right : 1
does work right -> and : 1
work right and -> compiles : 1
right and compiles -> with : 1
and compiles with -> a : 1
compiles with a -> whole : 1
with a whole -> variety : 1
a whole variety -> of : 1
whole variety of -> function : 1
variety of function -> regardless : 1
of function regardless -> of : 1
function regardless of -> return : 1
regardless of return -> anything : 1
of return anything -> or : 1
return anything or -> what : 1
anything or what -> they : 1
or what they -> nice : 1
what they nice -> detail : 1
they nice detail -> of : 1
nice detail of -> this : 1
detail of this -> technique : 1
of this technique -> is : 1
this technique is -> that : 1
technique is that -> the : 1
that the order -> in : 1
the order in -> which : 2
order in which -> the : 2
order in which -> these : 1
in which the -> function : 1
in which the -> threads : 1
in which the -> directory : 1
which the function -> calls : 1
the function calls -> are : 1
the function calls -> the : 1
the function calls -> have : 1
the function calls -> in : 1
the function calls -> themselves : 1
function calls are -> applied : 1
calls are applied -> is : 1
are applied is -> guaranteed : 1
applied is guaranteed -> to : 1
is guaranteed to -> be : 2
guaranteed to be -> in : 1
guaranteed to be -> executed : 1
to be in -> anything : 1
to be in -> this : 1
be in anything -> using : 1
in anything using -> the : 1
anything using the -> old : 1
using the old -> notation : 1
the old notation -> is : 1
old notation is -> advised : 1
notation is advised -> has : 1
is advised has -> its : 1
advised has its -> own : 1
its own cast -> we : 1
own cast we -> should : 1
cast we should -> have : 1
we should have -> used : 1
should have used -> but : 1
have used but -> this : 1
used but this -> would : 1
but this would -> have : 1
but this would -> imply : 1
would have decreased -> the : 1
have decreased the -> of : 1
decreased the of -> the : 1
the code using -> and : 1
code using and -> have : 1
using and have -> used : 1
and have used -> and : 1
have used and -> have : 1
used and have -> asked : 1
and have asked -> themselves : 1
have asked themselves -> why : 1
asked themselves why -> there : 1
themselves why there -> is : 1
why there is -> no : 1
is no copies -> items : 1
no copies items -> from : 1
copies items from -> a : 1
copies items from -> one : 2
from a source -> range : 2
from a source -> container : 1
a source range -> to : 2
source range to -> a : 2
range to a -> destination : 2
range to a -> normalized : 1
range to a -> that : 1
to a destination -> but : 1
to a destination -> range : 1
a destination but -> items : 1
destination but items -> not : 1
but items not -> selected : 1
items not selected -> by : 1
not selected by -> a : 1
selected by a -> unconditionally : 1
selected by a -> predicate : 1
by a unconditionally -> copies : 1
a unconditionally copies -> all : 1
unconditionally copies all -> items : 1
copies all items -> from : 1
a destination range -> but : 1
destination range but -> transforms : 1
range but transforms -> them : 1
but transforms them -> in : 1
transforms them in -> the : 1
in the transformation -> is : 1
the transformation is -> provided : 1
transformation is provided -> by : 1
is provided by -> a : 1
is provided by -> three : 1
provided by a -> which : 1
by a which -> might : 1
a which might -> do : 1
which might do -> simple : 1
might do simple -> such : 1
do simple such -> as : 1
simple such as -> multiplying : 1
such as multiplying -> numbers : 1
as multiplying numbers -> or : 1
multiplying numbers or -> transforming : 1
numbers or transforming -> completely : 1
or transforming completely -> different : 1
transforming completely different -> have : 1
completely different have -> been : 1
different have been -> there : 1
have been there -> for : 1
been there for -> a : 2
there for a -> long : 2
long time but -> there : 1
time but there -> is : 1
but there is -> no : 1
but there is -> a : 1
but there is -> one : 1
no in this -> we : 1
going to implement -> this : 1
going to implement -> in : 1
going to implement -> it : 1
going to implement -> the : 1
going to implement -> some : 2
going to implement -> our : 1
going to implement -> such : 1
going to implement -> a : 12
going to implement -> two : 1
implement this it -> would : 1
this it would -> be : 1
it would be -> easy : 1
it would be -> rounded : 1
it would be -> unclear : 1
it would be -> useful : 1
it would be -> a : 1
would be easy -> to : 1
be easy to -> do : 1
be easy to -> build : 1
easy to do -> this : 1
do this by -> just : 1
do this by -> calling : 1
do this by -> continuously : 1
do this by -> words : 1
this by just -> implementing : 1
by just implementing -> a : 1
just implementing a -> function : 1
a function over -> the : 1
function over the -> ranges : 1
over the ranges -> while : 1
the ranges while -> copying : 1
ranges while copying -> all : 1
while copying all -> the : 1
copying all the -> items : 1
the items selected -> by : 1
items selected by -> a : 1
by a predicate -> function : 1
predicate function and -> transforming : 1
predicate function and -> input : 1
function and transforming -> them : 1
and transforming them -> in : 1
transforming them in -> use : 1
them in use -> this : 1
in use this -> occasion : 1
use this occasion -> to : 1
this occasion to -> delve : 1
occasion to delve -> deeper : 1
to delve deeper -> into : 1
delve deeper into -> lambda : 1
deeper into lambda -> to : 1
into lambda to -> do : 1
going to build -> our : 1
going to build -> up : 1
to build our -> own : 3
build our own -> function : 1
build our own -> trait : 1
build our own -> mechanisms : 1
our own function -> which : 1
our own function -> that : 1
own function which -> works : 1
function which works -> by : 1
function which works -> well : 1
which works by -> supplying : 1
works by supplying -> with : 1
by supplying with -> the : 1
supplying with the -> right : 1
with the right -> function : 1
with the right -> time : 1
the right function -> need : 1
right function need -> to : 1
function need to -> include : 1
as we a -> function : 1
we a function -> called : 1
a function called -> it : 2
function called it -> accepts : 1
function called it -> works : 1
called it accepts -> an : 1
accepts an function -> as : 1
an function as -> returns : 1
function as returns -> a : 1
as returns a -> function : 1
which works well -> together : 1
works well together -> with : 1
well together with -> template : 1
together with template -> auto : 1
auto we return -> is : 1
we return is -> a : 1
return is a -> function : 1
return is a -> nice : 1
function object a -> when : 1
function object a -> and : 1
object a when -> this : 1
a when this -> object : 1
when this object -> is : 1
this object is -> called : 1
this object is -> kind : 1
object is called -> with : 1
is called with -> such : 1
called with such -> a : 1
such a reduce -> it : 1
a reduce it -> returns : 1
reduce it returns -> another : 1
it returns another -> function : 1
returns another function -> which : 2
returns another function -> object : 2
accepts an an -> it : 1
an an it -> calls : 1
an it calls -> the : 1
calls the reduce -> function : 1
the reduce function -> on : 1
reduce function on -> this : 1
function on this -> the : 1
on this the -> input : 1
on this the -> type : 1
this the input -> worry : 1
the input worry -> if : 1
input worry if -> this : 1
worry if this -> looks : 1
if this looks -> put : 1
if this looks -> strange : 1
this looks put -> it : 1
looks put it -> together : 1
put it together -> later : 1
it together later -> and : 1
together later and -> see : 1
later and see -> how : 1
and see how -> it : 1
and see how -> to : 2
and see how -> our : 1
and see how -> the : 1
how it really -> return : 1
it really return -> return : 1
really return return -> auto : 1
return return auto -> return : 2
return return auto -> if : 2
auto return implement -> a : 1
it works exactly -> the : 1
it works exactly -> like : 3
works exactly the -> same : 1
way as the -> but : 1
but it leaves -> the : 1
it leaves the -> input : 1
leaves the input -> while : 1
the input while -> the : 1
while the function -> using : 1
the function using -> a : 1
the function using -> this : 1
function using a -> transform : 1
using a transform -> we : 1
a transform we -> accept : 1
transform we accept -> a : 1
we accept a -> predicate : 1
we accept a -> pair : 1
accept a predicate -> function : 1
function and input -> variables : 1
and input variables -> without : 1
input variables without -> reducing : 1
variables without reducing -> them : 1
without reducing them -> in : 1
reducing them in -> are : 1
them in are -> not : 1
in are not -> accepted : 1
are not accepted -> by : 1
not accepted by -> the : 1
accepted by the -> predicate : 1
by the predicate -> template : 1
by the predicate -> function : 1
the predicate template -> auto : 1
predicate template auto -> two : 1
template auto two -> lambda : 1
auto two lambda -> expressions : 1
two lambda expressions -> have : 1
lambda expressions have -> exactly : 1
expressions have exactly -> the : 1
have exactly the -> same : 2
same function signature -> as : 1
function signature as -> the : 2
signature as the -> expressions : 1
signature as the -> which : 1
as the expressions -> in : 1
the expressions in -> the : 1
the only difference -> is : 4
only difference is -> that : 5
that the is -> left : 1
the is left -> the : 1
is left the -> predicate : 1
left the predicate -> function : 1
the predicate function -> is : 1
the predicate function -> returns : 1
the predicate function -> it : 1
predicate function is -> used : 1
function is used -> to : 1
is used to -> distinguish : 1
is used to -> find : 1
is used to -> initialize : 1
is used to -> save : 1
used to distinguish -> if : 1
to distinguish if -> we : 2
to distinguish if -> it : 2
distinguish if we -> call : 2
if we call -> the : 1
if we call -> it : 2
if we call -> directly : 1
we call the -> function : 1
we call the -> stands : 1
the function on -> the : 1
function on the -> input : 1
function on the -> first : 1
function on the -> real : 1
on the input -> or : 1
on the input -> combined : 1
the input or -> if : 1
input or if -> we : 1
or if we -> just : 1
or if we -> save : 1
or if we -> do : 1
or if we -> dropped : 1
or if we -> need : 1
if we just -> reach : 1
we just reach -> the : 1
just reach the -> accumulator : 1
reach the accumulator -> forward : 1
the accumulator forward -> without : 1
accumulator forward without -> any : 1
forward without any -> return : 1
without any return -> return : 1
any return return -> auto : 1
return auto if -> return : 2
return auto if -> cout : 1
auto if return -> else : 2
auto if return -> it : 2
if return else -> return : 2
if return else -> if : 8
else return finally -> use : 1
return finally use -> those : 1
finally use those -> we : 1
use those we -> instantiate : 1
those we instantiate -> iterators : 1
we instantiate iterators -> that : 1
instantiate iterators that -> let : 1
iterators that let -> us : 1
that let us -> read : 1
let us read -> integer : 1
us read integer -> values : 1
read integer values -> from : 1
integer values from -> the : 1
the standard int -> it : 1
the standard int -> const : 1
standard int it -> we : 1
int it we -> define : 1
it we define -> a : 1
a predicate which -> just : 1
a predicate which -> is : 1
a predicate which -> tells : 1
predicate which just -> returns : 1
which just returns -> we : 1
which just returns -> the : 1
just returns we -> have : 1
returns we have -> an : 1
have an the -> transformation : 1
an the transformation -> function : 1
the transformation function -> multiplies : 1
the transformation function -> to : 1
transformation function multiplies -> its : 1
function multiplies its -> integer : 1
multiplies its integer -> the : 1
its integer the -> factor : 1
integer the factor -> auto : 1
the factor auto -> even : 1
factor auto even -> return : 1
auto even return -> i : 1
even return i -> auto : 1
i auto twice -> return : 1
return i function -> takes : 1
i function takes -> a : 1
function takes a -> range : 1
function takes a -> by : 1
takes a range -> of : 1
range of values -> and : 1
range of values -> than : 1
of values and -> the : 1
values and the -> values : 1
and the values -> up : 1
and the values -> and : 1
and the values -> in : 1
the values up -> with : 1
values up with -> the : 1
up with the -> operator : 1
up with the -> following : 1
with the operator -> in : 1
with the operator -> like : 1
operator in the -> default : 1
in the default -> we : 1
the default we -> want : 1
default we want -> to : 1
want to provide -> our : 1
to provide our -> own : 1
provide our own -> accumulation : 1
our own accumulation -> this : 1
own accumulation this -> we : 1
accumulation this we -> do : 1
do not maintain -> a : 1
not maintain a -> of : 1
maintain a of -> the : 1
a of the -> what : 1
a of the -> first : 1
a of the -> for : 1
a of the -> internal : 1
of the what -> we : 1
the what we -> do : 1
the what we -> want : 1
what we do -> is : 1
what we do -> in : 1
do is we -> assign : 1
is we assign -> each : 1
we assign each -> value : 1
assign each value -> of : 1
each value of -> the : 1
the range to -> the : 2
range to the -> dereferenced : 1
range to the -> other : 1
range to the -> output : 1
range to the -> range : 1
range to the -> is : 1
to the dereferenced -> and : 1
to the dereferenced -> output : 1
the dereferenced and -> then : 1
dereferenced and then -> return : 1
then return this -> iterator : 1
return this iterator -> after : 1
this iterator after -> it : 1
iterator after it -> auto : 1
after it auto -> auto : 1
it auto auto -> return : 1
auto auto return -> we : 1
auto auto return -> order : 1
auto auto return -> put : 1
return we finally -> put : 1
we finally put -> together : 1
finally put together -> the : 1
put together the -> we : 1
together the we -> iterate : 1
the we iterate -> over : 1
the standard provide -> an : 1
standard provide an -> which : 1
provide an which -> prints : 1
an which prints -> to : 1
which prints to -> the : 1
prints to the -> the : 1
prints to the -> terminal : 2
prints to the -> standard : 1
function object works -> on : 1
object works on -> that : 1
works on that -> output : 1
on that output -> iterator : 1
that output iterator -> by : 1
output iterator by -> assigning : 1
iterator by assigning -> the : 1
by assigning the -> user : 1
assigning the user -> input : 1
user input assigning -> to : 1
input assigning to -> the : 1
assigning to the -> output : 1
to the output -> iterator : 1
to the output -> similar : 1
to the output -> apart : 1
to the output -> cout : 1
to the output -> of : 2
the output iterator -> effectively : 1
the output iterator -> we : 1
output iterator effectively -> the : 1
iterator effectively the -> assigned : 1
effectively the assigned -> but : 1
the assigned but -> we : 1
assigned but we -> only : 1
but we only -> want : 1
we only want -> the : 1
we only want -> a : 1
only want the -> numbers : 1
want the numbers -> from : 1
the numbers from -> the : 1
numbers from the -> user : 1
user and we -> want : 1
and we want -> to : 4
want to to -> achieve : 1
to to achieve -> we : 1
achieve we wrap -> the : 1
wrap the an -> a : 1
the an a -> and : 1
an a and -> running : 1
a and running -> the : 1
following the values -> and : 1
the values and -> are : 2
the values and -> has : 1
the values and -> then : 1
values and are -> dropped : 1
values and are -> printed : 1
and are dropped -> because : 1
are dropped because -> they : 1
dropped because they -> are : 1
are not and -> the : 1
not and the -> values : 1
and are printed -> after : 1
are printed after -> they : 1
printed after they -> have : 1
after they have -> been : 1
they have been -> echo : 1
have been echo -> it : 1
been echo it -> recipe : 1
echo it recipe -> looks : 1
it recipe looks -> really : 1
recipe looks really -> we : 1
really we are -> nesting : 1
we are nesting -> lambda : 1
are nesting lambda -> expressions : 1
nesting lambda expressions -> a : 1
lambda expressions a -> in : 1
expressions a in -> order : 1
a in order -> to : 5
understand how first -> have : 1
how first have -> a : 1
at the inner -> workings : 1
the inner workings -> this : 1
inner workings this -> is : 1
workings this is -> how : 1
how it like -> in : 1
it like in -> a : 1
like in a -> typical : 1
like in a -> text : 1
in a typical -> stl : 2
a typical stl -> typename : 1
a typical stl -> it : 1
typical stl typename -> t : 1
stl typename t -> inputiterator : 1
typename t inputiterator -> t : 1
t inputiterator t -> f : 1
inputiterator t f -> for : 1
t f for -> first : 1
f for first -> init : 1
for first init -> return : 1
first init return -> function : 1
init return function -> does : 1
return function does -> the : 1
return function does -> also : 1
function does the -> main : 1
does the main -> work : 1
the main work -> while : 1
main work while -> the : 1
work while the -> loop : 1
while the loop -> collects : 1
the loop collects -> its : 1
loop collects its -> results : 1
collects its results -> in : 1
its results in -> the : 1
results in the -> user : 1
results in the -> pairs : 1
results in the -> same : 1
results in the -> compressed : 1
results in the -> only : 1
results in the -> object : 1
results in the -> thread : 1
in the user -> provided : 1
user provided in -> a : 1
provided in a -> usual : 1
in a usual -> example : 1
a usual example -> the : 1
usual example the -> iterator : 1
example the iterator -> range : 1
the iterator range -> may : 1
iterator range may -> represent : 1
range may represent -> a : 1
may represent a -> vector : 1
represent a vector -> of : 1
vector of such -> and : 1
vector of such -> struct : 1
vector of such -> which : 1
of such and -> the : 1
such and the -> value : 1
such and the -> stl : 1
value is is -> then : 1
is is then -> just : 1
is then just -> a : 1
then just a -> binary : 1
just a binary -> function : 1
binary function calculate -> the : 1
function calculate the -> of : 1
the of two -> items : 1
of two items -> using : 1
two items using -> the : 1
items using the -> the : 1
items using the -> index : 1
using the the -> loop : 1
using the the -> helps : 1
the the loop -> just : 1
the the loop -> does : 1
the loop just -> sums : 1
loop just sums -> up : 1
just sums up -> all : 1
the items into -> the : 1
the items into -> an : 1
into the such -> writing : 1
the such writing -> it : 1
such writing it -> down : 1
writing it down -> like : 1
it down like -> this : 1
down like this -> makes : 1
like this makes -> obvious : 1
this makes obvious -> that : 1
makes obvious that -> is : 1
obvious that is -> just : 1
that is just -> a : 1
just a general -> folding : 1
a general folding -> a : 1
general folding a -> range : 1
folding a range -> means : 1
a range means -> applying : 1
range means applying -> a : 1
means applying a -> binary : 1
applying a binary -> operation : 1
a binary operation -> to : 1
binary operation to -> an : 1
operation to an -> accumulator : 1
an accumulator variable -> and : 1
an accumulator variable -> called : 1
accumulator variable and -> stepwise : 1
variable and stepwise -> every : 1
and stepwise every -> item : 1
stepwise every item -> contained : 1
every item contained -> in : 1
item contained in -> the : 1
contained in the -> range : 1
contained in the -> search : 1
in the range -> result : 1
in the range -> and : 1
the range result -> of : 1
range result of -> each : 1
result of each -> operation : 1
result of each -> iteration : 1
of each operation -> is : 1
each operation is -> then : 1
operation is then -> the : 1
then the accumulator -> value : 1
the accumulator value -> for : 1
accumulator value for -> the : 1
value for the -> next : 2
value for the -> value : 1
the next this -> function : 2
the next this -> we : 1
next this function -> is : 1
next this function -> accepts : 1
function is so -> we : 1
can do all -> kinds : 1
do all kinds -> of : 2
all kinds of -> things : 1
all kinds of -> the : 1
all kinds of -> in : 2
all kinds of -> failures : 1
all kinds of -> tuples : 1
all kinds of -> bugs : 1
kinds of things -> with : 1
of things with -> just : 1
things with just -> like : 1
with just like -> implementing : 1
just like implementing -> is : 1
like implementing is -> then : 1
implementing is then -> also : 1
is then also -> called : 1
then also called -> the : 1
called the very -> direct : 1
the very direct -> implementation : 1
very direct implementation -> of : 1
direct implementation of -> look : 1
direct implementation of -> we : 1
implementation of look -> as : 1
of look as -> typename : 1
look as typename -> typename : 1
as typename typename -> typename : 1
typename typename typename -> outputiterator : 1
typename typename typename -> init : 2
typename typename outputiterator -> inputiterator : 1
typename outputiterator inputiterator -> outputiterator : 3
outputiterator inputiterator outputiterator -> p : 1
outputiterator inputiterator outputiterator -> for : 1
outputiterator inputiterator outputiterator -> const : 1
inputiterator outputiterator p -> transform : 1
outputiterator p transform -> for : 1
p transform for -> first : 1
transform for first -> if : 1
for first if -> return : 1
first if return -> looks : 1
first if return -> know : 1
if return looks -> quite : 1
return looks quite -> to : 1
looks quite to -> if : 1
quite to if -> we : 1
if we regard -> the : 1
we regard the -> parameter : 1
regard the parameter -> as : 1
the parameter as -> the : 1
parameter as the -> and : 1
as the and -> get : 1
the and get -> function : 1
and get function -> to : 1
get function to -> substitute : 1
function to substitute -> the : 1
to substitute the -> and : 1
substitute the and -> its : 1
the and its -> actually : 1
and its actually -> did : 1
its actually did -> we : 1
actually did we -> constructed : 1
did we constructed -> that : 1
we constructed that -> and : 1
constructed that and -> its : 1
that and its -> body : 1
and its body -> with : 1
its body with -> the : 1
body with the -> binary : 1
with the binary -> function : 1
binary function object -> we : 1
function object we -> provided : 1
function object we -> can : 1
object we provided -> as : 1
provided as a -> parameter : 1
provided as a -> the : 1
as a parameter -> to : 1
parameter to auto -> return : 1
to auto return -> puts : 1
auto return puts -> variable : 1
return puts variable -> into : 1
puts variable into -> the : 1
variable into the -> binary : 1
the binary the -> second : 1
binary the second -> parameter : 1
the current value -> from : 1
the current value -> of : 1
current value from -> the : 1
the source range -> per : 1
the source range -> is : 1
the source range -> and : 1
the source range -> gets : 1
source range per -> loop : 1
range per loop -> iteration : 1
per loop iteration -> provided : 1
loop iteration provided -> as : 1
iteration provided as -> the : 1
provided as the -> parameter : 1
provided as the -> left : 1
as the parameter -> of : 1
the parameter of -> this : 1
the parameter of -> the : 1
parameter of this -> does : 1
parameter of this -> function : 1
of this does -> not : 1
does not calculate -> a : 1
not calculate a -> but : 1
calculate a but -> forwards : 1
a but forwards -> the : 1
but forwards the -> items : 1
forwards the items -> it : 1
the items it -> iterates : 1
items it iterates -> over : 1
iterates over to -> another : 1
over to another -> that : 1
to another that -> we : 1
another that we -> just : 1
that we just -> reimplemented : 1
that we just -> operator : 1
that we just -> found : 1
that we just -> inserted : 1
we just reimplemented -> any : 1
just reimplemented any -> predicate : 1
reimplemented any predicate -> and : 1
any predicate and -> filtering : 1
predicate and filtering -> using : 1
and filtering using -> a : 1
filtering using a -> predicate : 1
using a predicate -> was : 1
a predicate was -> added : 1
predicate was added -> by : 1
was added by -> us : 1
added by us -> by : 1
by us by -> wrapping : 1
us by wrapping -> the : 1
by wrapping the -> function : 1
wrapping the function -> object : 1
function object into -> function : 1
object into function -> which : 1
into function which -> employs : 1
function which employs -> a : 1
which employs a -> predicate : 1
employs a predicate -> auto : 1
a predicate auto -> return : 1
predicate auto return -> return : 1
auto return return -> auto : 2
auto return return -> c : 1
auto return return -> return : 4
auto return return -> last : 1
auto return return -> just : 1
else return construction -> does : 1
return construction does -> not : 1
construction does not -> look : 1
does not look -> too : 1
does not look -> very : 1
not look too -> simple : 1
look too simple -> at : 1
too simple at -> have : 1
simple at have -> a : 1
at have a -> look : 1
at the if -> the : 1
function returns it -> forwards : 1
returns it forwards -> the : 1
it forwards the -> parameters : 1
forwards the parameters -> to : 1
the parameters to -> the : 1
parameters to the -> which : 1
which is in -> our : 1
is in our -> if : 1
is in our -> we : 1
our if the -> predicate : 1
if the predicate -> returns : 1
the predicate returns -> the : 1
the predicate returns -> to : 1
predicate returns the -> which : 1
returns the which -> is : 2
is the variable -> is : 1
variable is just -> returned : 1
variable is just -> an : 1
is just returned -> without : 1
just returned without -> this : 1
returned without this -> implements : 1
without this implements -> the : 1
this implements the -> part : 1
implements the part -> of : 1
part of a -> filter : 1
part of a -> time : 1
part of a -> path : 1
of a filter -> the : 1
a filter the -> is : 1
filter the is -> located : 1
the is located -> within : 1
is located within -> the : 1
located within the -> inner : 1
within the inner -> lambda : 1
the inner lambda -> which : 1
the inner lambda -> expression : 1
the inner lambda -> is : 1
inner lambda which -> has : 2
lambda which has -> the : 2
which has the -> same : 2
the same binary -> function : 1
same binary function -> signature : 1
binary function signature -> as : 1
the which makes -> it : 1
the which makes -> tasks : 1
the which makes -> no : 1
makes it a -> fitting : 1
makes it a -> every : 1
it a fitting -> we : 1
a fitting we -> are : 1
fitting we are -> able : 1
we are able -> to : 3
are able to -> are : 1
are able to -> save : 1
are able to -> call : 1
able to are -> still : 1
to are still -> not : 1
are still not -> this : 1
still not this -> is : 1
not this is -> done : 1
this is done -> with : 2
is done with -> the : 1
is done with -> where : 1
is done with -> an : 1
done with the -> function : 1
done with the -> stl : 1
done with the -> the : 1
done with the -> boolean : 1
the function auto -> return : 1
function auto return -> return : 1
auto return code -> looks : 1
return code looks -> much : 1
code looks much -> it : 1
looks much it -> again : 1
much it again -> contains : 1
it again contains -> an : 1
again contains an -> inner : 1
contains an inner -> lambda : 1
an inner lambda -> which : 1
the same signature -> as : 1
same signature as -> so : 1
signature as so -> it : 1
as so it -> can : 1
it can substitute -> the : 1
can substitute the -> implementation : 1
substitute the implementation -> just : 1
the implementation just -> forwards : 1
the implementation just -> calls : 1
implementation just forwards -> the : 1
just forwards the -> input : 1
forwards the input -> the : 1
input the parameter -> of : 1
of the binary -> function : 1
binary function call -> with : 1
function call with -> when : 1
call with when -> we : 1
with when we -> used : 1
with when we -> query : 1
with when we -> execute : 1
when we used -> those : 1
when we used -> this : 1
we used those -> we : 1
we used those -> magic : 1
used those we -> wrote : 1
those we wrote -> the : 1
we wrote the -> following : 1
we wrote the -> adheres : 1
wrote the following -> call : 1
the following call -> captures : 1
following call captures -> the : 1
call captures the -> gives : 1
captures the gives -> us : 1
the gives us -> a : 1
gives us a -> which : 1
gives us a -> histogram : 1
a which takes -> a : 2
binary function in -> order : 1
order to wrap -> it : 1
to wrap it -> into : 1
wrap it into -> binary : 1
wrap it into -> and : 1
wrap it into -> a : 1
it into binary -> which : 1
into binary which -> does : 1
binary which does -> additional : 1
which does additional -> the : 1
does additional the -> the : 1
additional the the -> same : 1
the the same -> with : 1
the same with -> the : 1
the same with -> larger : 1
the same with -> trailing : 1
the same with -> which : 1
the same with -> changing : 1
same with the -> transformation : 1
with the transformation -> the : 1
with the transformation -> nearly : 1
the transformation the -> binary : 1
transformation the binary -> into : 1
the binary into -> another : 1
binary into another -> binary : 1
into another binary -> which : 1
another binary which -> always : 1
binary which always -> the : 1
which always the -> right : 1
always the right -> any : 1
the right any -> we : 1
right any we -> would : 1
any we would -> get : 1
would get a -> horribly : 1
get a horribly -> complicated : 1
a horribly complicated -> nested : 1
horribly complicated nested -> construction : 1
complicated nested construction -> of : 1
nested construction of -> functions : 1
construction of functions -> functions : 1
of functions functions -> and : 1
functions functions and -> do : 1
functions and do -> only : 1
and do only -> a : 1
do only a -> very : 1
only a very -> little : 1
a very little -> amount : 1
very little amount -> of : 1
little amount of -> work : 1
of work in -> it : 1
work in it -> is : 1
a very simple -> task : 1
a very simple -> and : 1
a very simple -> regular : 1
a very simple -> thing : 1
a very simple -> example : 1
a very simple -> way : 1
very simple task -> for : 1
simple task for -> the : 1
task for the -> compiler : 1
for the compiler -> to : 1
for the compiler -> than : 1
compiler to optimize -> all : 1
to optimize all -> the : 1
optimize all the -> the : 1
the the resulting -> binary : 1
the resulting binary -> is : 1
resulting binary is -> as : 1
binary is as -> simple : 1
is as simple -> as : 1
as simple as -> if : 1
as simple as -> hist : 1
simple as if -> it : 1
if it resulted -> from : 1
it resulted from -> a : 1
resulted from a -> more : 1
from a more -> direct : 1
a more direct -> implementation : 1
more direct implementation -> of : 1
implementation of we -> pay : 1
of we pay -> nothing : 1
we pay nothing -> in : 1
pay nothing in -> terms : 1
nothing in terms -> of : 1
terms of performance -> this : 1
of performance this -> but : 1
performance this but -> what : 1
this but what -> we : 1
but what we -> get : 1
what we get -> is : 1
what we get -> when : 1
we get is -> a : 1
get is a -> very : 1
a very nice -> composability : 1
very nice composability -> of : 1
nice composability of -> functions : 1
composability of functions -> because : 1
of functions because -> we : 1
functions because we -> were : 1
because we were -> able : 1
able to stick -> the : 1
to stick the -> predicate : 1
stick the predicate -> together : 1
the predicate together -> with : 1
predicate together with -> the : 1
the transformation nearly -> as : 1
transformation nearly as -> simply : 1
nearly as simply -> as : 1
as simply as -> if : 1
simply as if -> they : 1
as if they -> were : 2
if they were -> cartesian : 1
if they were -> scheduled : 1
they were cartesian -> product : 1
were cartesian product -> pairs : 1
at compile expressions -> in : 1
compile expressions in -> combination : 1
expressions in combination -> with : 1
in combination with -> parameter : 1
in combination with -> the : 3
in combination with -> to : 1
in combination with -> and : 1
combination with parameter -> packs : 1
with parameter packs -> can : 1
parameter packs can -> be : 1
packs can be -> used : 1
be used for -> complex : 1
be used for -> summarize : 1
be used for -> we : 1
used for complex -> in : 1
for complex in -> this : 1
complex in this -> we : 1
function object an -> arbitrary : 1
object an arbitrary -> number : 1
number of input -> parameters : 1
of input parameters -> and : 1
input parameters and -> generates : 1
parameters and generates -> the : 1
and generates the -> of : 1
generates the of -> this : 1
the of this -> set : 1
the of this -> decision : 1
the of this -> return : 1
of this set -> with : 1
this set with -> cartesian : 1
set with cartesian -> product : 1
with cartesian product -> is : 1
cartesian product is -> a : 1
cartesian product is -> and : 1
product is a -> mathematical : 1
is a mathematical -> it : 1
is a mathematical -> figure : 1
a mathematical it -> is : 1
mathematical it is -> noted : 1
it is noted -> as : 1
is noted as -> x : 1
noted as x -> meaning : 1
as x meaning -> the : 1
x meaning the -> cartesian : 1
meaning the cartesian -> product : 1
the cartesian product -> of : 4
the cartesian product -> is : 1
the cartesian product -> can : 1
the cartesian product -> without : 1
the cartesian product -> pairs : 1
cartesian product of -> set : 1
cartesian product of -> that : 1
cartesian product of -> the : 2
product of set -> and : 1
of set and -> set : 1
set and set -> the : 1
and set the -> result : 1
and set the -> flag : 1
set the result -> is : 1
result is which -> contains : 1
is which contains -> pairs : 1
which contains pairs -> of : 1
contains pairs of -> item : 1
pairs of item -> combinations : 1
of item combinations -> of : 1
item combinations of -> the : 1
combinations of the -> sets : 1
of the sets -> and : 1
the sets and -> the : 1
sets and the -> operation : 1
and the operation -> basically : 1
and the operation -> of : 1
the operation basically -> every : 1
operation basically every -> item : 1
basically every item -> from : 1
every item from -> a : 1
every item from -> the : 2
from a with -> every : 1
a with every -> item : 1
with every item -> from : 2
from the following -> the : 1
from the following -> visits : 1
following the preceding -> if : 1
the preceding if -> and : 1
preceding if and -> then : 1
if and then -> the : 1
then the cartesian -> product : 2
product is and -> so : 1
is and so -> we : 1
so we decide -> that : 1
we decide that -> and : 1
we decide that -> one : 1
decide that and -> are : 1
that and are -> the : 1
and are the -> say : 1
are the say -> then : 1
the say then -> the : 1
say then the -> cartesian : 1
product of that -> is : 1
of that is -> and : 1
that is and -> in : 1
that is and -> the : 1
that is and -> that : 1
is and in -> some : 1
and in some -> this : 1
some this might -> be : 1
this might be -> declared : 1
this might be -> done : 1
this might be -> fine : 1
this might be -> a : 1
might be declared -> because : 1
be declared because -> the : 1
declared because the -> combination : 1
because the combination -> of : 1
the combination of -> items : 1
the combination of -> both : 1
combination of items -> with : 1
items with in -> or : 1
with in or -> redundant : 1
in or redundant -> combinations : 1
or redundant combinations -> of : 1
redundant combinations of -> and : 1
combinations of and -> not : 1
of and not -> be : 1
and not be -> in : 1
not be in -> such : 1
be in such -> the : 1
in such the -> cartesian : 1
in such the -> data : 1
such the cartesian -> product : 1
cartesian product can -> be : 1
product can be -> filtered : 1
can be filtered -> with : 1
be filtered with -> a : 1
filtered with a -> simple : 1
simple this we -> will : 1
will implement the -> cartesian : 1
will implement the -> algorithm : 2
implement the cartesian -> product : 1
cartesian product without -> any : 1
product without any -> loops : 1
without any loops -> but : 1
any loops but -> with : 1
loops but with -> lambda : 1
but with lambda -> expressions : 1
expressions and parameter -> pack : 1
and parameter pack -> to : 1
parameter pack to -> do : 1
pack to do -> implement : 1
object a and -> a : 1
and a set -> of : 1
a set of -> the : 1
set of the -> function : 1
function object will -> the : 1
object will the -> cartesian : 1
will the cartesian -> product : 1
product of the -> parameter : 1
product of the -> numeric : 1
the parameter out -> the : 1
parameter out the -> redundant : 1
out the redundant -> and : 1
the redundant and -> function : 1
redundant and function -> with : 1
and function with -> each : 1
function with each -> of : 1
each of only -> need : 1
of only need -> to : 1
stl header that -> is : 1
header that is -> needed : 1
that is needed -> for : 1
is needed for -> we : 1
is needed for -> the : 1
needed for we -> define : 1
for we define -> a : 1
define a simple -> helper : 1
a simple helper -> function : 1
simple helper function -> that : 1
helper function that -> prints : 2
helper function that -> accepts : 4
helper function that -> identifies : 1
helper function that -> solves : 1
helper function that -> intelligently : 1
helper function that -> we : 2
function that prints -> a : 2
function that prints -> information : 1
function that prints -> in : 1
function that prints -> all : 1
that prints a -> pair : 1
that prints a -> line : 1
that prints a -> message : 1
prints a pair -> of : 1
pair of and -> we : 1
pair of and -> represent : 1
pair of and -> then : 1
of and we -> begin : 1
of and we -> want : 1
of and we -> get : 1
and we begin -> implementing : 1
we begin implementing -> the : 1
begin implementing the -> static : 1
begin implementing the -> actual : 2
implementing the static -> void : 1
the static void -> int : 1
the static void -> return : 1
the static void -> cout : 1
the static void -> while : 1
the static void -> for : 1
static void int -> x : 1
void int x -> y : 1
int x y -> int : 1
x y int -> hard : 1
y int hard -> part : 1
int hard part -> starts : 1
hard part starts -> we : 1
part starts we -> first : 1
starts we first -> implement : 1
we first implement -> a : 1
first implement a -> helper : 1
a helper for -> the : 1
helper for the -> function : 1
for the function -> are : 1
for the function -> that : 1
the function are -> going : 1
function are going -> to : 1
implement in the -> next : 1
this function accepts -> a : 4
function accepts a -> which : 1
function accepts a -> relative : 1
function accepts a -> function : 2
function accepts a -> string : 2
function accepts a -> producer : 1
accepts a which -> will : 1
the function when -> we : 2
function when we -> use : 1
function when we -> call : 1
when we use -> it : 1
it the other -> parameters : 1
the other parameters -> are : 2
other parameters are -> and : 1
other parameters are -> is : 1
parameters are and -> the : 1
are and the -> parameter : 1
are and the -> minimum : 1
are and the -> and : 1
are and the -> mutex : 1
and the parameter -> pack : 1
parameter pack these -> contain : 1
pack these contain -> the : 1
these contain the -> actual : 1
contain the actual -> items : 1
the actual items -> of : 1
actual items of -> which : 1
have the cartesian -> look : 1
the cartesian look -> at : 1
cartesian look at -> the : 1
at the for -> this : 1
the for this -> will : 1
the for this -> is : 1
for this will -> result : 1
this will result -> in : 2
will result in -> calls : 1
will result in -> a : 3
will result in -> the : 1
will result in -> this : 1
result in calls -> such : 1
in calls such -> the : 1
calls such the -> test : 1
such the test -> is : 1
the test is -> for : 1
test is for -> removing : 1
is for removing -> redundancy : 1
for removing redundancy -> in : 1
removing redundancy in -> the : 1
redundancy in the -> generated : 1
in the generated -> we : 1
the generated we -> will : 1
generated we will -> look : 1
we will look -> at : 1
will look at -> this : 1
look at this -> in : 1
look at this -> problem : 1
look at this -> now : 1
at this in -> more : 1
this in more -> constexpr : 1
in more constexpr -> auto : 1
more constexpr auto -> auto : 1
constexpr auto auto -> auto : 1
auto auto constexpr -> function : 1
auto auto constexpr -> always : 1
auto constexpr function -> is : 1
constexpr function is -> the : 1
is the most -> complex : 1
is the most -> intuitive : 1
the most complex -> piece : 1
the most complex -> lines : 1
most complex piece -> of : 1
complex piece of -> code : 1
piece of code -> in : 1
of code in -> this : 1
of code in -> the : 1
in this whole -> it : 1
this whole it -> accepts : 1
whole it accepts -> the : 1
it accepts the -> parameter : 1
it accepts the -> address : 1
it accepts the -> same : 1
accepts the parameter -> pack : 1
parameter pack and -> returns : 1
pack and returns -> a : 1
object that captures -> the : 1
object that captures -> all : 1
object that captures -> those : 1
object that captures -> we : 1
object that captures -> that : 1
that captures the -> returned : 1
captures the returned -> function : 1
the returned function -> object : 1
returned function object -> accepts : 1
function object accepts -> a : 2
object accepts a -> function : 1
object accepts a -> population : 1
accepts a function -> for : 1
accepts a function -> which : 1
accepts a function -> pointer : 2
accepts a function -> object : 2
accepts a function -> and : 2
a function for -> a : 1
a function for -> later : 1
function for a -> parameter : 1
for a parameter -> the : 1
a parameter the -> inner : 1
parameter the inner -> lambda : 1
inner lambda expression -> will : 1
inner lambda expression -> that : 1
lambda expression will -> generate : 1
expression will generate -> the : 1
will generate the -> following : 1
generate the following -> from : 1
the following from -> that : 1
the following from -> the : 1
the following from -> this : 1
following from that -> range : 1
from that range -> of : 1
that range of -> we : 1
range of we -> can : 1
we can generate -> all : 1
can generate all -> the : 1
generate all the -> cartesian : 1
all the cartesian -> product : 1
product pairs we -> note : 1
pairs we note -> that : 1
we note that -> we : 1
we note that -> the : 1
use the notation -> for : 1
the notation for -> expanding : 1
notation for expanding -> parameter : 1
for expanding parameter -> which : 1
expanding parameter which -> looks : 1
parameter which looks -> weird : 1
which looks weird -> at : 1
looks weird at -> the : 1
weird at the -> first : 1
at the first -> occurrence : 1
the first occurrence -> of : 2
first occurrence of -> expands : 1
first occurrence of -> that : 1
occurrence of expands -> the : 1
of expands the -> parameter : 1
expands the parameter -> pack : 1
pack into the -> the : 1
the second occurrence -> leads : 1
second occurrence leads -> to : 1
occurrence leads to -> multiple : 1
leads to multiple -> calls : 1
multiple calls with -> a : 1
calls with a -> constexpr : 1
with a constexpr -> auto : 1
a constexpr auto -> cartesian : 1
constexpr auto cartesian -> constexpr : 2
auto cartesian constexpr -> return : 2
cartesian constexpr return -> constexpr : 2
constexpr return constexpr -> generate : 1
constexpr return constexpr -> inner : 1
return constexpr generate -> the : 1
constexpr generate the -> cartesian : 1
generate the cartesian -> product : 1
the numeric set -> and : 1
numeric set and -> print : 1
set and print -> the : 1
print the without -> the : 1
the without the -> redundant : 1
without the redundant -> this : 1
the redundant this -> should : 1
redundant this should -> result : 1
this should result -> in : 1
result in the -> number : 1
result in the -> there : 1
in the number -> and : 1
in the number -> are : 1
the number and -> more : 1
the number and -> size : 1
number and more -> combinations : 1
and more combinations -> are : 1
more combinations are -> not : 1
combinations are not -> possible : 1
are not possible -> if : 1
not possible if -> we : 1
possible if we -> ignore : 1
if we ignore -> the : 1
we ignore the -> order : 1
we ignore the -> possibility : 1
ignore the order -> and : 1
the order and -> do : 1
order and do -> not : 1
and do not -> want : 1
and do not -> care : 1
do not want -> the : 1
do not want -> to : 3
do not want -> whitespace : 1
do not want -> this : 1
want the same -> number : 1
same number in -> one : 1
number in one -> this : 1
in one this -> means : 1
one this means -> that : 1
that we do -> want : 1
that we do -> not : 7
we do want -> and : 1
do want and -> consider : 1
want and consider -> and : 1
and consider and -> the : 1
consider and the -> we : 1
the we let -> generate : 1
the we let -> him : 1
we let generate -> a : 1
let generate a -> function : 1
generate a function -> object : 1
object that already -> contains : 1
object that already -> existed : 1
object that already -> uses : 1
that already contains -> all : 1
already contains all -> possible : 1
contains all possible -> pairs : 1
all possible pairs -> and : 1
possible pairs and -> accepts : 1
pairs and accepts -> our : 1
and accepts our -> print : 1
accepts our print -> we : 1
our print we -> use : 1
print we use -> it : 1
it to let -> our : 1
to let our -> function : 1
let our function -> being : 1
our function being -> called : 1
function being called -> with : 1
being called with -> all : 1
called with all -> these : 1
with all these -> we : 1
all these we -> declare : 1
these we declare -> so : 1
we declare so -> we : 1
declare so we -> can : 1
we can guarantee -> that : 1
can guarantee that -> the : 1
guarantee that the -> function : 1
guarantee that the -> compiler : 1
that the function -> object : 1
that the function -> is : 1
function object it -> holds : 1
object it holds -> all : 1
it holds all -> the : 1
holds all the -> pairs : 1
holds all the -> future : 1
all the pairs -> it : 1
the pairs it -> is : 1
pairs it is -> compile : 1
it is compile -> constexpr : 1
is compile constexpr -> auto : 1
compile constexpr auto -> and : 1
constexpr auto and -> running : 1
auto and running -> yields : 1
and running yields -> the : 3
running yields the -> following : 3
the following just -> as : 1
following just as -> play : 1
just as play -> around : 1
as play around -> with : 1
with the code -> by : 1
the code by -> removing : 1
code by removing -> the : 1
by removing the -> conditional : 1
removing the conditional -> in : 1
the conditional in -> the : 1
conditional in the -> function : 1
function and see -> that : 1
see that we -> get : 1
see that we -> reached : 1
see that we -> only : 1
that we get -> the : 1
that we get -> independence : 1
that we get -> an : 1
get the full -> cartesian : 1
the full cartesian -> product : 1
full cartesian product -> with : 1
cartesian product with -> redundant : 1
product with redundant -> pairs : 1
with redundant pairs -> and : 1
redundant pairs and -> the : 1
pairs and the -> same : 1
and the same -> number : 1
same number it -> was : 1
number it was -> another : 1
it was another -> really : 1
it was another -> short : 1
was another really -> lambda : 1
another really lambda -> expression : 1
really lambda expression -> but : 1
lambda expression but -> as : 1
expression but as -> soon : 1
but as soon -> as : 2
soon as we -> understand : 1
soon as we -> know : 1
soon as we -> have : 1
as we understand -> this : 1
we understand this -> we : 1
understand this we -> will : 1
not be confused -> by : 1
be confused by -> any : 1
confused by any -> lambda : 1
by any lambda -> expression : 1
lambda expression anytime -> have : 1
expression anytime have -> a : 1
anytime have a -> detailed : 1
have a detailed -> look : 1
a detailed look -> at : 1
detailed look at -> we : 1
detailed look at -> this : 1
look at we -> a : 1
at we a -> mental : 1
we a mental -> picture : 1
a mental picture -> of : 1
mental picture of -> what : 1
picture of what -> needs : 1
of what needs -> to : 1
what needs to -> are : 1
needs to are -> three : 1
to are three -> take : 1
are three take -> our : 1
three take our -> set : 1
take our set -> and : 1
our set and -> compose : 1
set and compose -> sets : 1
and compose sets -> from : 1
compose sets from -> the : 1
sets from the -> first : 1
from the first -> part : 1
from the first -> vector : 2
first part of -> each : 1
part of each -> of : 1
of each of -> these : 1
each of these -> sets : 1
each of these -> to : 1
of these sets -> is : 1
these sets is -> single : 1
sets is single -> the : 1
is single the -> and : 1
single the and -> the : 1
is the whole -> set : 1
is the whole -> structure : 1
the whole set -> combine : 1
the whole set -> ignore : 1
whole set combine -> the : 1
set combine the -> first : 1
combine the first -> item : 1
combine the first -> few : 1
first item with -> every : 1
item with every -> item : 1
from the set -> and : 1
the set and -> get : 1
set and get -> as : 1
and get as -> many : 1
get as many -> out : 1
get as many -> random : 1
as many out -> of : 1
many out of -> these : 1
out of these -> resulting : 1
of these resulting -> we : 1
these resulting we -> only : 1
resulting we only -> pick : 1
we only pick -> the : 2
only pick the -> ones : 1
only pick the -> key : 1
pick the ones -> for : 1
the ones for -> example : 1
ones for example -> and : 1
for example and -> are : 1
example and are -> and : 1
and are and -> not : 1
are and not -> for : 1
and not for -> example : 1
not for example -> back : 1
for example back -> to : 1
example back to -> the : 1
to the constexpr -> auto : 1
the constexpr auto -> cartesian : 1
return constexpr inner -> exactly : 1
constexpr inner exactly -> represents : 1
inner exactly represents -> the : 1
exactly represents the -> separation : 1
represents the separation -> of : 1
the separation of -> into : 1
separation of into -> those : 1
of into those -> new : 1
into those new -> such : 1
those new such -> the : 1
new such the -> with : 1
such the with -> the : 1
the other does -> this : 1
other does this -> separation : 1
other does this -> mean : 1
does this separation -> for : 1
this separation for -> every : 1
separation for every -> value : 1
so we also -> get : 1
so we also -> break : 1
so we also -> want : 1
we also get -> and : 1
also get and -> and : 1
get and and -> step : 1
and and step -> are : 1
and step are -> done : 1
step are done -> by : 1
are done by -> auto : 1
done by auto -> auto : 1
by auto auto -> constexpr : 1
auto constexpr always -> contains : 1
constexpr always contains -> the : 1
always contains the -> single : 1
contains the single -> value : 1
the single value -> picked : 1
single value picked -> from : 1
value picked from -> the : 1
picked from the -> and : 1
from the and -> contains : 1
from the and -> this : 1
from the and -> work : 1
the and contains -> the : 1
and contains the -> whole : 1
and contains the -> output : 1
contains the whole -> set : 1
whole set ignore -> the : 1
set ignore the -> conditional : 1
ignore the conditional -> at : 1
the conditional at -> the : 1
conditional at the -> expression : 1
at the expression -> together : 1
the expression together -> with : 1
expression together with -> the : 1
with the parameter -> pack : 1
parameter pack expansion -> generates : 1
pack expansion generates -> the : 1
expansion generates the -> function : 1
generates the function -> and : 1
function and so -> which : 1
and so which -> results : 1
so which results -> in : 1
which results in -> the : 1
which results in -> use : 1
which results in -> and : 1
which results in -> did : 1
which results in -> values : 1
in the pairs -> being : 1
the pairs being -> this : 1
pairs being this -> was : 1
being this was -> step : 1
this was step -> is : 1
was step is -> achieved : 1
step is achieved -> by : 1
is achieved by -> filtering : 1
achieved by filtering -> out : 1
by filtering out -> only : 1
filtering out only -> the : 1
out only the -> pairs : 1
only the pairs -> where : 1
the pairs where -> made : 1
pairs where made -> expressions : 1
where made expressions -> and : 1
made expressions and -> the : 1
expressions and the -> variables : 1
and the variables -> holding : 1
the variables holding -> by : 1
variables holding by -> doing : 1
holding by doing -> we : 1
by doing we -> can : 1
by doing we -> allow : 1
by doing we -> are : 1
doing we can -> now : 1
can now guarantee -> that : 1
now guarantee that -> the : 1
will evaluate their -> code : 1
evaluate their code -> at : 1
their code at -> compile : 1
code at compile -> time : 1
compile time and -> compile : 1
time and compile -> a : 1
and compile a -> binary : 1
compile a binary -> contains : 1
a binary contains -> all : 1
binary contains all -> the : 1
contains all the -> number : 1
contains all the -> complicated : 1
contains all the -> members : 1
contains all the -> indices : 1
all the number -> pairs : 1
the number pairs -> instead : 1
number pairs instead -> of : 1
pairs instead of -> calculating : 1
instead of calculating -> them : 1
of calculating them -> at : 1
calculating them at -> note : 1
them at note -> that : 1
at note that -> this : 1
that this happens -> if : 1
this happens if -> all : 1
happens if all -> the : 1
the function arguments -> we : 1
function arguments we -> provide : 1
arguments we provide -> to : 1
we provide to -> a : 1
provide to a -> constexpr : 1
to a constexpr -> function : 1
a constexpr function -> at : 1
constexpr function at -> compile : 1
function at compile -> algorithm : 1
at compile algorithm -> will : 1
compile algorithm will -> cover : 1
algorithm will cover -> the : 1
in this items -> from : 1
this items from -> containers : 1
dictionary merging stl -> does : 1
merging stl does -> not : 1
not only contain -> data : 1
only contain data -> structures : 1
contain data structures -> but : 1
data structures but -> also : 1
structures but also -> while : 1
but also while -> data : 1
also while data -> structures : 1
while data structures -> help : 1
data structures help -> in : 1
structures help in -> different : 1
help in different -> ways : 1
in different ways -> with : 1
different ways with -> different : 1
ways with different -> motivations : 1
with different motivations -> and : 1
different motivations and -> algorithms : 1
motivations and algorithms -> apply : 1
and algorithms apply -> specific : 1
algorithms apply specific -> to : 1
apply specific to -> the : 1
specific to the -> data : 1
data in such -> data : 1
in such data -> have : 1
such data have -> a : 1
look at a -> standard : 1
look at a -> possible : 1
look at a -> table : 1
look at a -> basic : 1
at a standard -> such : 1
a standard such -> up : 1
a standard such -> mar : 1
standard such up -> items : 1
such up items -> from : 1
up items from -> a : 1
from a this -> can : 1
a this can -> be : 1
this can be -> done : 3
this can be -> quite : 1
this can be -> saved : 1
this can be -> called : 1
be done easily -> by : 1
done easily by -> looping : 1
easily by looping -> over : 1
over the vector -> and : 1
vector and summing -> up : 1
and summing up -> all : 1
into an accumulator -> variable : 1
accumulator variable called -> v : 1
variable called v -> int : 1
called v int -> sum : 1
v int sum -> for : 1
v int sum -> compiler : 1
i sum cout -> sum : 1
sum cout sum -> because : 1
cout sum because -> this : 1
sum because this -> is : 1
this is quite -> a : 1
is quite a -> standard : 2
is quite a -> bit : 1
is quite a -> jungle : 1
quite a standard -> there : 1
quite a standard -> and : 1
a standard there -> is : 1
standard there is -> also : 1
standard there is -> still : 1
there is also -> an : 1
there is also -> a : 1
there is also -> that : 1
is also an -> stl : 1
also an stl -> algorithm : 1
an stl algorithm -> for : 2
stl algorithm for -> this : 1
stl algorithm for -> my : 1
algorithm for this -> the : 1
for this the -> handcrafted : 1
for this the -> path : 1
this the handcrafted -> loop : 1
the handcrafted loop -> variant : 1
handcrafted loop variant -> is : 1
loop variant is -> not : 1
variant is not -> much : 1
is not much -> and : 1
is not much -> left : 1
is not much -> more : 1
not much and -> it : 1
much and it -> is : 1
also not significantly -> harder : 1
not significantly harder -> to : 1
significantly harder to -> read : 1
harder to read -> than : 1
read than a -> which : 1
than a which -> says : 1
a which says -> what : 1
which says what -> it : 1
says what it -> in : 1
what it in -> a : 1
it is awkward -> to : 1
is awkward to -> code : 1
awkward to code -> loop : 1
to code loop -> just : 1
code loop just -> to : 1
loop just to -> i : 1
just to i -> just : 1
to i just -> have : 1
i just have -> to : 1
just have to -> study : 1
just have to -> specialize : 1
have to study -> the : 1
to study the -> whole : 1
study the whole -> loop : 1
the whole loop -> in : 1
whole loop in -> order : 1
loop in order -> to : 2
to understand that -> it : 1
understand that it -> does : 1
it does a -> standard : 1
does a standard -> rather : 1
a standard rather -> than : 1
standard rather than -> seeing : 1
rather than seeing -> one : 1
than seeing one -> line : 1
seeing one line -> of : 1
line of which -> uses : 1
line of which -> actually : 1
of which uses -> a : 1
uses a standard -> algorithm : 1
a standard algorithm -> whose : 1
a standard algorithm -> could : 1
standard algorithm whose -> name : 1
algorithm whose name -> clearly : 1
whose name clearly -> states : 1
name clearly states -> what : 1
clearly states what -> it : 1
states what it -> such : 1
what it such -> or : 1
it such or -> basic : 1
such or basic -> idea : 1
or basic idea -> is : 1
basic idea is -> to : 1
basic idea is -> a : 1
idea is to -> provide : 1
idea is to -> combine : 1
idea is to -> use : 1
provide a rich -> variety : 1
a rich variety -> of : 1
rich variety of -> algorithms : 1
variety of algorithms -> be : 1
of algorithms be -> used : 1
algorithms be used -> by : 1
be used by -> programmers : 1
be used by -> the : 1
used by programmers -> on : 1
by programmers on -> a : 1
programmers on a -> daily : 1
on a daily -> basis : 1
a daily basis -> in : 1
daily basis in -> order : 1
basis in order -> to : 1
reduce the need -> to : 1
the need to -> repeatedly : 1
the need to -> invoke : 1
need to repeatedly -> reimplement : 1
to repeatedly reimplement -> this : 1
repeatedly reimplement this -> programmers : 1
reimplement this programmers -> can : 1
this programmers can -> just : 1
programmers can just -> use : 1
just use off -> the : 1
use off the -> shelf : 1
off the shelf -> algorithm : 1
the shelf algorithm -> implementations : 1
shelf algorithm implementations -> and : 1
algorithm implementations and -> concentrate : 1
implementations and concentrate -> on : 1
on the instead -> of : 1
the instead of -> wasting : 1
instead of wasting -> time : 1
of wasting time -> on : 1
wasting time on -> problems : 1
time on problems -> have : 1
on problems have -> been : 1
problems have been -> by : 1
have been by -> the : 1
been by the -> another : 1
by the another -> perspective : 1
the another perspective -> is : 1
another perspective is -> a : 1
perspective is a -> programmer : 1
is a programmer -> implements : 1
a programmer implements -> the : 1
programmer implements the -> same : 1
implements the same -> thing : 1
same thing again -> and : 2
thing again and -> again : 1
thing again and -> we : 1
again and again -> for : 1
and again for -> a : 1
again for a -> hundred : 1
for a hundred -> there : 1
a hundred there -> is : 1
hundred there is -> some : 1
there is some -> probability : 1
there is some -> time : 1
is some probability -> that : 1
some probability that -> this : 1
probability that this -> may : 1
that this may -> introduce : 1
this may introduce -> a : 1
may introduce a -> in : 1
introduce a in -> one : 1
a in one -> or : 1
other this would -> be : 1
be completely unnecessary -> and : 1
completely unnecessary and -> also : 1
unnecessary and also -> very : 1
and also very -> for : 1
also very for -> it : 1
very for it -> is : 1
for it is -> pointed : 1
for it is -> or : 1
for it is -> reason : 1
for it is -> also : 1
it is pointed -> out : 1
is pointed out -> by : 1
pointed out by -> a : 1
out by a -> colleague : 1
by a colleague -> during : 1
a colleague during -> code : 1
colleague during code -> whereas : 1
during code whereas -> at : 1
code whereas at -> the : 1
whereas at the -> same : 1
same a standard -> algorithm : 1
standard algorithm could -> have : 1
algorithm could have -> been : 1
have been important -> point : 1
been important point -> of : 1
important point of -> stl : 1
point of stl -> algorithms : 1
stl algorithms is -> many : 1
stl algorithms is -> good : 1
stl algorithms is -> often : 1
stl algorithms is -> sean : 1
algorithms is many -> stl : 1
is many stl -> algorithms : 1
many stl algorithms -> provide : 1
stl algorithms provide -> implementations : 1
algorithms provide implementations -> of : 1
provide implementations of -> the : 1
same which do -> things : 1
which do things -> depending : 1
do things depending -> on : 1
on the they -> are : 1
the they are -> being : 1
the they are -> reset : 1
are being used -> for : 1
being used for -> if : 1
used for if -> all : 1
for if all -> the : 1
elements in a -> vector : 1
in a vector -> of : 3
in a vector -> that : 1
of integers should -> be : 1
integers should be -> this : 1
should be this -> can : 1
be this can -> be : 2
be done with -> the : 2
be done with -> of : 1
be done with -> a : 1
the stl algorithm -> because : 1
the stl algorithm -> cannot : 1
stl algorithm because -> the : 1
algorithm because the -> iterator : 1
because the iterator -> of : 1
because the iterator -> is : 1
because the iterator -> does : 1
of a vector -> can : 1
of a vector -> of : 1
of a vector -> while : 1
of a vector -> from : 1
vector can already -> tell : 1
can already tell -> the : 1
already tell the -> compiler : 1
tell the compiler -> that : 1
that it iterates -> over : 1
iterates over it -> can : 1
over it can -> select : 1
it can select -> of : 1
can select of -> uses : 1
select of uses -> the : 1
of uses the -> c : 1
uses the c -> if : 1
the c if -> the : 1
c if the -> programmer : 1
if the programmer -> changes : 1
the programmer changes -> the : 1
programmer changes the -> container : 1
changes the container -> type : 1
the container type -> from : 1
container type from -> to : 1
type from to -> then : 1
then the stl -> algorithm : 1
stl algorithm cannot -> use : 1
algorithm cannot use -> any : 1
cannot use any -> has : 1
use any has -> to : 1
any has to -> iterate : 1
has to iterate -> over : 1
the list in -> order : 1
list in order -> to : 1
order to zero -> the : 1
to zero the -> items : 1
zero the items -> in : 1
items in case -> the : 1
case the programmer -> the : 1
the programmer the -> implementation : 1
programmer the implementation -> would : 1
the implementation would -> be : 1
implementation would be -> unnecessarily : 1
would be unnecessarily -> hardcoded : 1
be unnecessarily hardcoded -> to : 1
unnecessarily hardcoded to -> using : 1
hardcoded to using -> vectors : 1
to using vectors -> or : 1
using vectors or -> arrays : 1
vectors or arrays -> because : 1
or arrays because -> most : 1
arrays because most -> other : 1
because most other -> data : 1
most other data -> structures : 1
data structures do -> not : 1
structures do not -> save : 1
do not save -> their : 1
not save their -> data : 1
save their data -> in : 1
their data in -> contiguous : 1
data in contiguous -> memory : 1
in contiguous memory -> in : 1
in contiguous memory -> and : 1
contiguous memory in -> most : 1
memory in most -> it : 1
in most it -> makes : 1
most it makes -> little : 1
it makes little -> sense : 1
makes little sense -> to : 1
little sense to -> try : 1
sense to try -> to : 1
to try to -> be : 1
try to be -> as : 1
be as the -> implementers : 1
as the implementers -> of : 1
the stl may -> already : 1
stl may already -> have : 1
may already have -> implemented : 1
already have implemented -> the : 1
have implemented the -> same : 1
implemented the same -> which : 1
same which can -> be : 1
used for summarize -> the : 1
for summarize the -> preceding : 1
summarize the preceding -> using : 1
the preceding using -> stl : 1
preceding using stl -> algorithms : 1
using stl algorithms -> is : 1
using stl algorithms -> for : 1
using stl algorithms -> as : 1
algorithms is good -> the : 1
is good the -> names : 1
good the names -> of : 1
of the algorithms -> already : 1
of the algorithms -> often : 1
the algorithms already -> state : 1
algorithms already state -> in : 1
already state in -> a : 1
state in a -> straightforward : 1
in a straightforward -> manner : 1
a straightforward manner -> what : 1
straightforward manner what -> they : 1
manner what they -> explicit : 1
what they explicit -> loops : 1
they explicit loops -> are : 1
explicit loops are -> rarely : 1
loops are rarely -> both : 1
are rarely both -> better : 1
rarely both better -> to : 1
both better to -> as : 1
better to as -> agnostic : 1
to as agnostic -> as : 1
as agnostic as -> standard : 1
agnostic as standard -> the : 1
as standard the -> stl : 1
standard the stl -> has : 1
the stl has -> been : 1
the stl has -> available : 1
stl has been -> written : 1
has been written -> and : 1
been written and -> reviewed : 1
written and reviewed -> by : 1
and reviewed by -> and : 1
reviewed by and -> used : 1
by and used -> and : 1
and used and -> tested : 1
used and tested -> by : 1
and tested by -> so : 1
tested by so -> many : 1
by so many -> people : 1
so many people -> that : 1
many people that -> you : 1
people that you -> are : 1
that you are -> pretty : 1
you are pretty -> unlikely : 1
are pretty unlikely -> to : 1
pretty unlikely to -> reach : 1
unlikely to reach -> the : 1
to reach the -> same : 1
reach the same -> degree : 1
the same degree -> of : 1
same degree of -> correctness : 1
degree of correctness -> when : 1
of correctness when -> reimplementing : 1
correctness when reimplementing -> the : 1
when reimplementing the -> complex : 1
reimplementing the complex -> parts : 1
the complex parts -> of : 1
complex parts of -> stl : 1
parts of stl -> algorithms : 1
stl algorithms by -> at : 1
algorithms by at -> least : 1
by at least -> as : 1
at least as -> efficient : 1
least as efficient -> as : 1
as efficient as -> most : 1
efficient as most -> handcrafted : 1
as most handcrafted -> algorithms : 1
most handcrafted algorithms -> work : 1
handcrafted algorithms work -> on : 1
algorithms work on -> the : 1
work on the -> concept : 1
work on the -> function : 1
on the concept -> of : 1
concept of how -> iterators : 1
of how iterators -> work : 1
how iterators work -> is : 1
iterators work is -> already : 1
work is already -> explained : 1
is already explained -> in : 1
already explained in -> in : 1
explained in in -> this : 1
in in this -> concentrate : 1
in this concentrate -> on : 1
this concentrate on -> using : 1
this concentrate on -> filtering : 1
concentrate on using -> stl : 1
on using stl -> algorithms : 1
stl algorithms for -> different : 1
algorithms for different -> problems : 1
for different problems -> in : 1
different problems in -> order : 1
problems in order -> to : 1
a feeling they -> can : 1
feeling they can -> be : 1
can be profitably -> put : 1
be profitably put -> to : 1
profitably put to -> showing : 1
put to showing -> stl : 1
to showing stl -> algorithms : 1
showing stl algorithms -> would : 1
stl algorithms would -> blow : 1
algorithms would blow -> up : 1
would blow up -> this : 1
blow up this -> book : 1
up this book -> to : 1
this book to -> a : 1
book to a -> very : 1
a very boring -> although : 1
very boring although -> there : 1
boring although there -> is : 1
although there is -> already : 1
there is already -> a : 1
is already a -> reference : 1
already a reference -> publicly : 1
a reference publicly -> best : 1
reference publicly best -> way : 1
publicly best way -> to : 1
best way to -> become : 1
best way to -> get : 2
way to become -> an : 1
to become an -> stl : 1
become an stl -> ninja : 1
an stl ninja -> is : 1
stl ninja is -> having : 1
ninja is having -> the : 1
is having the -> reference : 1
having the reference -> always : 1
the reference always -> at : 1
reference always at -> hand : 1
always at hand -> at : 1
at hand at -> saved : 1
hand at saved -> in : 1
at saved in -> a : 1
saved in a -> browser : 1
saved in a -> data : 1
saved in a -> vector : 3
in a browser -> when : 1
a browser when -> solving : 1
browser when solving -> a : 1
when solving a -> every : 1
solving a every -> programmer : 1
a every programmer -> should : 1
every programmer should -> have : 1
programmer should have -> a : 1
at it with -> the : 1
the question back -> in : 1
question back in -> his : 1
back in his -> there : 1
in his there -> an : 1
his there an -> stl : 1
there an stl -> algorithm : 1
algorithm for my -> before : 1
for my before -> writing : 1
my before writing -> code : 1
before writing code -> very : 1
writing code very -> good : 1
code very good -> and : 1
very good and -> complete : 1
good and complete -> reference : 1
and complete reference -> is : 1
complete reference is -> available : 1
reference is available -> for : 1
is available for -> online : 1
available for online -> viewing : 1
for online viewing -> can : 1
online viewing can -> also : 1
viewing can also -> be : 1
also be downloaded -> for : 1
be downloaded for -> offline : 1
downloaded for offline -> job : 1
for offline job -> good : 1
offline job good -> fluency : 1
job good fluency -> with : 1
good fluency with -> the : 1
fluency with the -> stl : 1
algorithms is often -> an : 1
is often an -> indicator : 1
often an indicator -> of : 1
an indicator of -> knowledge : 1
indicator of knowledge -> of : 1
of knowledge of -> items : 1
knowledge of items -> from : 1
of items from -> containers : 1
of items from -> one : 1
to other most -> important : 1
other most important -> stl : 1
most important stl -> data : 1
important stl data -> structures : 1
stl data structures -> have : 1
stl data structures -> so : 1
stl data structures -> and : 1
data structures have -> iterator : 1
structures have iterator -> this : 1
have iterator this -> means : 1
iterator this means -> that : 1
it is at -> least : 1
it is at -> first : 1
is at least -> possible : 1
at least possible -> to : 1
least possible to -> get : 1
possible to get -> iterators : 1
possible to get -> at : 1
possible to get -> the : 1
to get iterators -> via : 1
get iterators via -> and : 1
iterators via and -> which : 1
via and which -> point : 1
and which point -> to : 1
the data underlying -> payload : 1
data underlying payload -> data : 1
underlying payload data -> and : 1
payload data and -> allow : 1
data and allow -> to : 1
and allow to -> iterate : 1
allow to iterate -> over : 1
iterate over that -> the : 1
iterate over that -> range : 1
over that the -> iteration : 1
that the iteration -> always : 1
the iteration always -> looks : 1
iteration always looks -> the : 1
always looks the -> no : 1
looks the no -> matter : 1
the no matter -> what : 1
no matter what -> kind : 1
no matter what -> offset : 1
no matter what -> the : 1
no matter what -> we : 1
matter what kind -> of : 1
of data structure -> is : 1
data structure is -> iterated : 1
data structure is -> not : 1
structure is iterated -> can : 1
is iterated can -> get : 1
iterated can get -> iterators : 1
can get iterators -> from : 1
get iterators from -> and : 1
from and so -> using : 1
and so using -> iterator : 1
so using iterator -> we : 1
using iterator we -> can : 1
can even get -> iterators : 1
even get iterators -> as : 1
get iterators as -> an : 1
iterators as an -> interface : 1
as an interface -> to : 1
an interface to -> standard : 1
interface to standard -> and : 1
to standard and -> standard : 1
standard and standard -> we : 1
and standard we -> saw : 1
standard we saw -> in : 1
we saw in -> the : 1
saw in the -> previous : 1
the previous we -> can : 1
previous we can -> even : 1
can even wrap -> iterator : 1
even wrap iterator -> interfaces : 1
wrap iterator interfaces -> around : 1
iterator interfaces around -> where : 1
interfaces around where -> we : 1
around where we -> can : 1
where we can -> access : 1
where we can -> avoid : 1
can access everything -> with : 1
access everything with -> we : 1
everything with we -> can : 1
we can combine -> them : 1
can combine them -> with : 1
them with stl -> which : 1
with stl which -> accept : 1
stl which accept -> iterators : 1
which accept iterators -> as : 1
accept iterators as -> really : 1
iterators as really -> nice : 1
as really nice -> way : 1
really nice way -> to : 2
nice way to -> show : 1
nice way to -> print : 1
way to show -> how : 1
show how iterators -> help : 1
how iterators help -> abstract : 1
iterators help abstract -> the : 1
help abstract the -> nature : 1
abstract the nature -> of : 1
the nature of -> different : 1
the nature of -> the : 2
the nature of -> shared : 1
nature of different -> data : 1
of different data -> structures : 1
data structures the -> which : 1
data structures the -> only : 1
structures the which -> just : 1
the which just -> copies : 1
which just copies -> items : 1
just copies items -> from : 1
items from one -> set : 1
items from one -> iterable : 1
items from one -> range : 1
from one set -> of : 1
one set of -> iterators : 1
set of iterators -> to : 1
of iterators to -> an : 1
of iterators to -> exactly : 1
iterators to an -> output : 1
to an output -> where : 1
to an output -> stream : 2
an output where -> such : 1
output where such -> algorithms : 1
where such algorithms -> are : 1
such algorithms are -> the : 1
algorithms are the -> nature : 1
are the nature -> of : 1
nature of the -> underlying : 1
nature of the -> iterator : 1
the underlying data -> structure : 1
underlying data structure -> is : 1
structure is not -> really : 1
is not really -> relevant : 1
is not really -> the : 1
not really relevant -> any : 1
really relevant any -> in : 1
relevant any in -> order : 1
any in order -> to : 1
order to demonstrate -> we : 1
to demonstrate we -> will : 1
demonstrate we will -> play : 1
will play a -> bit : 1
play a bit -> to : 1
a bit to -> do : 1
a bit to -> correctly : 1
bit to do -> this : 1
will use different -> variants : 1
use different variants -> of : 1
different variants of -> first : 1
variants of first -> include : 1
of first include -> all : 2
all headers we -> need : 1
headers we need -> for : 1
need for the -> data : 1
for the data -> structures : 1
structures we we -> declare : 1
we we declare -> that : 1
we use using -> namespace : 20
will use pairs -> of : 1
use pairs of -> integer : 1
pairs of integer -> and : 1
of integer and -> string : 1
integer and string -> values : 1
and string values -> in : 1
string values in -> the : 1
values in the -> in : 1
values in the -> vector : 1
order to nicely -> print : 1
to nicely print -> we : 1
nicely print we -> should : 1
print we should -> first : 1
we should first -> overload : 1
we should first -> check : 1
should first overload -> the : 1
first overload the -> stream : 1
overload the stream -> operator : 1
overload the stream -> const : 2
overload the stream -> in : 1
overload the stream -> for : 1
overload the stream -> output : 1
the stream operator -> for : 1
stream operator for -> namespace : 1
stream operator for -> are : 1
operator for namespace -> std : 1
for namespace std -> const : 1
namespace std const -> return : 2
std const return -> os : 2
const return os -> the : 1
const return os -> return : 1
return os the -> we : 1
return os the -> main : 1
os the we -> fill : 1
we fill a -> of : 1
fill a of -> pairs : 1
a of pairs -> with : 1
of pairs with -> some : 1
pairs with some -> default : 1
with some default -> and : 1
some default and -> we : 1
default and we -> declare : 1
we declare a -> which : 1
we declare a -> class : 1
declare a which -> associates : 1
which associates integer -> values : 1
associates integer values -> with : 1
integer values with -> string : 1
values with string -> int : 1
with string int -> v : 1
string int v -> we : 1
int v we -> use : 1
int v we -> will : 1
int v we -> copy : 1
int v we -> print : 1
v we use -> to : 1
use to copy -> exactly : 1
to copy exactly -> three : 1
copy exactly three -> pairs : 1
exactly three pairs -> from : 1
three pairs from -> the : 1
pairs from the -> front : 1
from the front -> of : 1
vector to the -> because : 1
vector to the -> and : 1
vector to the -> while : 1
to the because -> vectors : 1
the because vectors -> and : 1
because vectors and -> maps : 1
vectors and maps -> are : 1
and maps are -> completely : 1
maps are completely -> different : 1
are completely different -> data : 1
completely different data -> we : 1
different data we -> need : 1
data we need -> to : 1
need to transform -> the : 2
to transform the -> items : 1
to transform the -> data : 1
to transform the -> normal : 1
transform the items -> from : 1
the items from -> the : 1
the items from -> position : 1
the items from -> tuple : 1
the items from -> and : 1
the function produces -> such : 1
function produces such -> an : 1
produces such an -> adapter : 1
such an adapter -> for : 1
an adapter for -> please : 1
adapter for please -> be : 1
for please be -> always : 1
please be always -> aware : 1
be always aware -> that : 1
always aware that -> using : 1
aware that using -> algorithms : 1
that using algorithms -> like : 1
using algorithms like -> combined : 1
algorithms like combined -> with : 1
like combined with -> insert : 1
combined with insert -> iterators : 1
with insert iterators -> most : 1
insert iterators most -> way : 1
iterators most way -> to : 1
most way to -> items : 1
way to items -> to : 1
to items to -> other : 1
items to other -> data : 1
to other data -> but : 1
other data but -> not : 1
data but not -> the : 1
but not the -> using : 1
not the using -> the : 1
the using the -> data : 1
using the data -> member : 1
data member functions -> for : 1
member functions for -> inserting : 1
member functions for -> an : 1
functions for inserting -> items : 1
for inserting items -> is : 1
inserting items is -> usually : 1
items is usually -> the : 1
is usually the -> most : 1
is usually the -> case : 1
usually the most -> efficient : 1
the most efficient -> print : 1
most efficient print -> in : 1
efficient print in -> the : 1
print in the -> map : 1
the map throughout -> the : 1
map throughout the -> we : 1
throughout the we -> have : 1
we have often -> been : 1
have often been -> printing : 1
often been printing -> a : 1
been printing a -> content : 1
printing a content -> using : 1
a content using -> the : 1
content using the -> the : 1
the the helps -> a : 1
the helps a -> lot : 1
helps a lot -> in : 1
that it allows -> us : 1
it allows us -> to : 2
us to treat -> the : 1
to treat the -> user : 1
treat the user -> standard : 1
the user standard -> output : 1
user standard output -> as : 1
standard output as -> we : 1
output as we -> can : 1
output as we -> expected : 1
can copy data -> auto : 1
copy data auto -> cout : 1
data auto cout -> clear : 1
auto cout clear -> the : 1
cout clear the -> map : 1
clear the map -> again : 1
the map again -> for : 1
map again for -> the : 1
again for the -> next : 1
next this we -> from : 1
this we from -> the : 1
we from the -> vector : 1
and this print -> the : 1
this print the -> new : 1
the new content -> of : 1
new content of -> the : 1
the map an -> algorithm : 1
map an algorithm -> alters : 1
an algorithm alters -> the : 1
algorithm alters the -> data : 1
alters the data -> we : 1
the data we -> will : 1
data we will -> print : 1
we will print -> the : 1
we will print -> numbers : 1
we will print -> a : 1
we will print -> them : 1
will print the -> source : 1
will print the -> state : 1
will print the -> squares : 1
will print the -> full : 1
print the source -> vector : 1
the source vector -> this : 1
source vector this -> we : 1
vector this we -> can : 1
can see what -> happened : 1
see what happened -> to : 1
what happened to -> it : 1
to it when -> it : 1
it when it -> acted : 1
when it acted -> as : 1
it acted as -> a : 1
acted as a -> move : 1
as a move -> cout : 1
a move cout -> cout : 1
move cout cout -> compile : 1
cout cout compile -> and : 1
see what it -> the : 1
what it the -> first : 1
it the first -> two : 1
first two lines -> are : 2
first two lines -> show : 2
two lines are -> they : 1
two lines are -> just : 1
lines are they -> reflect : 1
are they reflect -> what : 1
they reflect what -> the : 1
reflect what the -> map : 1
what the map -> contained : 1
the map contained -> after : 1
map contained after -> applying : 1
contained after applying -> the : 1
after applying the -> and : 1
applying the and -> the : 1
and the third -> line : 1
and the third -> argument : 1
the third line -> is : 1
the third line -> shows : 1
the third line -> of : 1
third line is -> it : 1
line is it -> shows : 1
is it shows -> that : 1
it shows that -> the : 1
that the strings -> in : 1
that the strings -> gives : 1
the vector used -> as : 1
vector used as -> move : 1
used as move -> source : 1
as move source -> are : 1
move source are -> now : 1
source are now -> this : 1
are now this -> is : 1
now this is -> because : 1
because the content -> of : 1
the strings has -> not : 1
strings has not -> been : 1
has not been -> copied : 1
not been copied -> but : 1
been copied but -> efficiently : 1
copied but efficiently -> means : 1
but efficiently means -> that : 1
efficiently means that -> the : 1
that the map -> uses : 1
map uses the -> string : 1
uses the string -> data : 1
string data in -> heap : 1
data in heap -> memory : 1
in heap memory -> that : 1
heap memory that -> was : 1
memory that was -> previously : 1
that was previously -> referenced : 1
was previously referenced -> by : 1
previously referenced by -> the : 1
referenced by the -> string : 1
by the string -> objects : 1
the string objects -> in : 1
string objects in -> the : 1
objects in the -> we : 1
the we should -> usually : 1
the we should -> get : 1
we should usually -> not : 1
should usually not -> access : 1
usually not access -> items : 1
not access items -> a : 1
access items a -> move : 1
items a move -> we : 1
a move we -> reassigned : 1
move we reassigned -> but : 1
we reassigned but -> ignore : 1
reassigned but ignore -> that : 1
but ignore that -> for : 1
ignore that for -> the : 1
that for the -> sake : 2
sake of this -> it : 1
sake of this -> the : 1
of this it -> is : 2
it is one -> of : 1
is one of -> the : 1
of the simplest -> stl : 1
the simplest stl -> its : 1
the simplest stl -> algorithm : 1
simplest stl its -> implementation : 1
stl its implementation -> is : 1
its implementation is -> very : 1
implementation is very -> have : 1
is very have -> a : 1
very have a -> look : 1
at how it -> could : 1
how it could -> be : 1
it could be -> typename : 1
could be typename -> outputiterator : 1
be typename outputiterator -> inputiterator : 2
inputiterator outputiterator for -> it : 1
outputiterator for it -> return : 1
for it return -> looks : 1
it return looks -> exactly : 1
return looks exactly -> as : 1
looks exactly as -> one : 1
exactly as one -> would : 1
as one would -> implement : 1
one would implement -> the : 1
would implement the -> copying : 1
implement the copying -> of : 1
the copying of -> items : 1
the copying of -> an : 1
copying of items -> from : 1
from one iterable -> range : 1
one iterable range -> to : 1
iterable range to -> the : 1
the other by -> at : 1
other by at -> this : 1
by at this -> one : 1
at this one -> could : 1
this one could -> also : 1
could also why -> not : 1
also why not -> implementing : 1
why not implementing -> it : 1
not implementing it -> by : 1
implementing it by -> the : 1
by the loop -> is : 1
loop is simple -> enough : 1
is simple enough -> and : 1
simple enough and -> i : 1
enough and i -> even : 1
and i even -> need : 1
i even need -> the : 1
even need the -> return : 1
need the return -> which : 1
the return which -> of : 1
return which of -> a : 1
which of a -> good : 1
of a good -> is : 1
a good is -> not : 1
good is not -> the : 1
not the best -> example : 1
the best example -> for : 1
best example for -> making : 1
example for making -> code : 1
for making code -> significantly : 1
making code significantly -> a : 1
code significantly a -> lot : 1
significantly a lot -> of : 1
lot of other -> algorithms : 1
lot of other -> values : 1
of other algorithms -> with : 1
other algorithms with -> more : 1
algorithms with more -> complex : 1
with more complex -> implementations : 1
more complex implementations -> what : 1
complex implementations what -> is : 1
implementations what is -> not : 1
what is not -> obvious : 1
is not obvious -> is : 1
not obvious is -> the : 1
obvious is the -> hidden : 1
is the hidden -> automatic : 1
the hidden automatic -> optimization : 1
hidden automatic optimization -> of : 1
automatic optimization of -> such : 1
optimization of such -> stl : 1
of such stl -> if : 1
such stl if -> we : 1
stl if we -> happen : 1
if we happen -> to : 1
we happen to -> use : 1
happen to use -> with : 1
to use with -> data : 1
use with data -> structures : 1
with data structures -> their : 1
data structures their -> items : 1
structures their items -> in : 1
their items in -> contiguous : 1
items in contiguous -> memory : 1
contiguous memory and -> the : 1
memory and the -> items : 1
the items themselves -> are : 1
items themselves are -> copy : 1
themselves are copy -> then : 1
are copy then -> the : 1
copy then the -> compiler : 1
then the compiler -> will : 2
compiler will select -> a : 1
compiler will select -> differently : 1
will select a -> completely : 1
select a completely -> different : 1
completely different implementation -> assumes : 1
different implementation assumes -> the : 1
implementation assumes the -> iterator : 1
assumes the iterator -> types : 1
the iterator types -> to : 1
iterator types to -> be : 1
types to be -> typename : 1
to be typename -> outputiterator : 1
inputiterator outputiterator const -> return : 1
outputiterator const return -> it : 1
const return it -> is : 1
is a simplified -> version : 1
a simplified version -> of : 1
simplified version of -> how : 1
version of how -> the : 1
of how the -> variant : 1
how the variant -> of : 1
the variant of -> the : 1
variant of the -> algorithm : 1
the algorithm can -> look : 1
the algorithm can -> omit : 1
the algorithm can -> lead : 1
algorithm can look -> in : 1
can look in -> a : 1
look in a -> typical : 1
typical stl it -> is : 1
stl it is -> than : 1
it is than -> the : 2
the standard loop -> and : 1
standard loop and -> it : 1
loop and it -> is : 1
also not to -> but : 1
not to but -> users : 1
to but users -> automatically : 1
but users automatically -> profit : 1
users automatically profit -> from : 1
automatically profit from -> it : 1
profit from it -> if : 1
from it if -> their : 1
it if their -> argument : 1
if their argument -> types : 1
their argument types -> comply : 1
argument types comply -> with : 1
types comply with -> the : 1
comply with the -> requirements : 1
comply with the -> locking : 1
with the requirements -> the : 1
the requirements the -> compiler : 1
requirements the compiler -> selects : 1
the compiler selects -> the : 1
compiler selects the -> fastest : 1
selects the fastest -> implementation : 1
the fastest implementation -> possible : 1
fastest implementation possible -> for : 1
implementation possible for -> the : 1
possible for the -> chosen : 1
for the chosen -> while : 1
the chosen while -> the : 1
chosen while the -> user : 1
the user code -> nicely : 1
the user code -> would : 1
user code nicely -> expresses : 1
code nicely expresses -> the : 1
nicely expresses the -> algorithm : 1
expresses the algorithm -> does : 1
the algorithm does -> without : 1
algorithm does without -> tainting : 1
does without tainting -> the : 1
without tainting the -> code : 1
tainting the code -> with : 1
code with too -> many : 1
with too many -> details : 1
too many details -> of : 1
many details of -> the : 1
details of the -> algorithms : 1
the algorithms often -> simply : 1
algorithms often simply -> provide : 1
often simply provide -> the : 1
simply provide the -> best : 1
provide the best -> between : 1
the best between -> and : 1
best between and -> are : 1
between and are -> usually : 1
and are usually -> trivially : 1
are usually trivially -> copy : 1
usually trivially copy -> assignable : 1
trivially copy assignable -> if : 1
copy assignable if -> they : 1
assignable if they -> only : 1
if they only -> consist : 1
they only consist -> of : 1
only consist of -> one : 1
only consist of -> constructor : 1
consist of one -> or : 1
of one or -> multiple : 1
one or multiple -> by : 1
or multiple by -> a : 1
multiple by a -> scalar : 1
by a scalar -> types : 1
a scalar types -> or : 1
scalar types or -> which : 1
types or which -> can : 1
or which can -> safely : 1
which can safely -> be : 1
can safely be -> moved : 1
safely be moved -> using : 1
be moved using -> the : 1
moved using the -> need : 1
using the need -> to : 1
need to invoke -> a : 1
to invoke a -> copy : 1
invoke a copy -> assignment : 1
a copy assignment -> also : 1
copy assignment also -> used : 1
assignment also used -> it : 1
also used it -> works : 1
used it works -> exactly : 1
exactly like but -> it : 2
exactly like but -> while : 1
but it applies -> to : 1
it applies to -> the : 1
to the source -> iterator : 1
to the source -> range : 1
the source iterator -> in : 1
the source iterator -> to : 1
source iterator in -> the : 1
order to cast -> to : 1
to cast to -> this : 1
cast to this -> makes : 1
to this makes -> the : 1
makes the compiler -> select : 1
the compiler select -> the : 1
compiler select the -> move : 1
select the move -> assignment : 1
the move assignment -> operator : 1
move assignment operator -> of : 1
assignment operator of -> the : 1
operator of the -> target : 1
operator of the -> struct : 1
of the target -> object : 1
the target object -> instead : 1
target object instead -> of : 1
object instead of -> the : 1
object instead of -> a : 1
object instead of -> initializing : 1
instead of the -> copy : 1
instead of the -> standard : 1
instead of the -> task : 1
of the copy -> assignment : 1
of the copy -> call : 1
the copy assignment -> for : 1
copy assignment for -> a : 1
assignment for a -> lot : 1
lot of complex -> this : 1
of complex this -> the : 1
complex this the -> source : 1
this the source -> values : 1
the source values -> is : 1
source values is -> quite : 1
values is quite -> a : 1
a standard and -> it : 1
a standard and -> then : 1
standard and it -> can : 1
and it can -> be : 1
done in various -> every : 1
in various every -> computer : 1
various every computer -> science : 1
every computer science -> student : 1
computer science student -> who : 1
science student who -> was : 1
student who was -> tortured : 1
who was tortured -> with : 1
was tortured with -> having : 1
tortured with having -> to : 1
with having to -> learn : 1
having to learn -> a : 1
to learn a -> majority : 1
learn a majority -> of : 1
a majority of -> existing : 1
majority of existing -> sorting : 1
of existing sorting -> algorithms : 1
existing sorting algorithms -> with : 1
sorting algorithms with -> their : 1
algorithms with their -> performance : 1
with their performance -> and : 1
their performance and -> stability : 1
performance and stability -> for : 1
and stability for -> knows : 1
stability for knows -> this : 1
for knows this -> is : 1
knows this is -> a : 1
is a solved -> programmers : 1
a solved programmers -> should : 1
solved programmers should -> not : 1
programmers should not -> waste : 1
should not waste -> their : 1
not waste their -> time : 1
waste their time -> it : 1
their time it -> except : 1
time it except -> if : 1
it except if -> it : 1
except if it -> is : 1
it is for -> learning : 1
is for learning -> to : 1
for learning to -> do : 1
learning to do -> this : 1
going to play -> with : 1
to play with -> and : 1
to play with -> different : 1
to play with -> each : 1
play with and -> we : 1
play with and -> composed : 1
with and we -> include : 1
with and we -> played : 1
with and we -> can : 1
with and we -> mix : 1
and we include -> all : 2
we include all -> declare : 1
we include all -> the : 10
we include all -> necessary : 1
include all declare -> that : 1
all declare that -> we : 1
use the using -> namespace : 7
namespace will print -> the : 1
namespace will print -> substrings : 1
print the state -> of : 1
the state of -> a : 1
state of a -> vector : 1
of integers multiple -> so : 1
integers multiple so -> abbreviate : 1
multiple so abbreviate -> this : 1
so abbreviate this -> task : 1
abbreviate this task -> by : 1
this task by -> writing : 1
task by writing -> a : 1
by writing a -> small : 1
writing a small -> static : 1
a small static -> void : 1
small static void -> cout : 1
static void cout -> begin : 1
static void cout -> string : 1
static void cout -> input : 1
static void cout -> from : 1
static void cout -> acquiring : 2
static void cout -> hello : 1
static void cout -> threads : 1
static void cout -> now : 1
void cout begin -> with : 2
cout begin with -> a : 1
cout begin with -> an : 1
begin with a -> vector : 2
with a vector -> some : 1
with a vector -> of : 1
a vector some -> example : 1
vector some example -> int : 1
v we will -> shuffle : 1
we will shuffle -> the : 1
will shuffle the -> vector : 1
shuffle the vector -> multiple : 1
the vector multiple -> times : 1
vector multiple times -> in : 1
multiple times in -> order : 1
multiple times in -> shared : 1
times in order -> to : 1
order to play -> with : 1
play with different -> sort : 1
with different sort -> we : 1
different sort we -> need : 1
sort we need -> a : 1
need a random -> number : 1
a random number -> g : 1
a random number -> which : 1
a random number -> from : 3
a random number -> does : 1
random number g -> function : 1
number g function -> tells : 1
g function tells -> us : 1
function tells us -> if : 1
tells us if -> the : 3
tells us if -> a : 1
tells us if -> it : 1
us if the -> content : 1
us if the -> last : 1
us if the -> iterator : 1
if the content -> of : 1
content of a -> container : 1
content of a -> but : 1
content of a -> variant : 1
a container is -> this : 1
container is this -> line : 1
is this line -> should : 1
this line should -> print : 1
line should print -> cout : 1
should print cout -> we : 1
print cout we -> shake : 1
cout we shake -> around : 1
we shake around -> the : 1
shake around the -> content : 1
around the content -> of : 1
order to sort -> it : 1
to sort it -> again : 1
sort it again -> the : 1
it again the -> first : 1
again the first -> two : 1
first two arguments -> denote : 1
two arguments denote -> the : 1
arguments denote the -> range : 1
denote the range -> that : 1
the range that -> will : 1
range that will -> be : 1
range that will -> give : 1
will be shuffled -> and : 1
be shuffled and -> the : 1
shuffled and the -> third : 1
the third argument -> is : 1
the third argument -> must : 1
third argument is -> the : 1
is the random -> number : 1
the random number -> should : 1
the random number -> sequences : 1
the random number -> as : 1
the random number -> generator : 1
random number should -> now : 1
number should now -> return : 1
should now return -> so : 1
now return so -> that : 1
return so that -> is : 1
so that is -> and : 1
the values in -> the : 1
the values in -> its : 1
the values in -> this : 1
vector should be -> the : 1
should be the -> same : 2
be the same -> but : 1
be the same -> as : 1
be the same -> on : 1
same but in -> a : 1
in a different -> we : 1
in a different -> the : 1
in a different -> one : 1
a different we -> will : 2
a different we -> use : 1
different we will -> see : 2
different we will -> let : 1
will see after -> we : 1
see after we -> have : 1
after we have -> printed : 1
we have printed -> both : 1
have printed both -> again : 1
printed both again -> to : 1
both again to -> the : 1
again to the -> cout : 1
to the cout -> we : 1
the cout we -> reestablish : 1
cout we reestablish -> the : 1
we reestablish the -> original : 1
reestablish the original -> item : 1
the original item -> ordering : 1
original item ordering -> by : 1
item ordering by -> using : 1
ordering by using -> the : 1
the same prints -> to : 1
same prints to -> the : 1
the terminal should -> now : 1
terminal should now -> again : 1
should now again -> give : 1
now again give -> us : 1
again give us -> the : 1
us the sorted -> ordering : 1
the sorted ordering -> from : 1
sorted ordering from -> the : 1
ordering from the -> cout : 1
from the cout -> interesting : 1
the cout interesting -> function : 1
cout interesting function -> is : 1
interesting function is -> we : 1
function is we -> do : 1
function is we -> can : 1
is we do -> not : 1
not want to -> fully : 1
not want to -> wait : 1
not want to -> look : 1
want to fully -> sort : 1
to fully sort -> the : 1
fully sort the -> it : 1
sort the it -> is : 1
it is sufficient -> to : 1
is sufficient to -> just : 1
sufficient to just -> have : 1
to just have -> the : 1
just have the -> items : 1
have the items -> smaller : 1
the items smaller -> than : 1
items smaller than -> some : 1
smaller than some -> value : 1
than some value -> at : 1
some value at -> the : 1
value at the -> the : 1
value at the -> current : 1
at the the -> vector : 1
at the the -> items : 1
to move all -> the : 1
move all the -> items : 1
the items that -> are : 2
items that are -> smaller : 1
items that are -> less : 1
items that are -> greater : 1
that are smaller -> than : 1
are smaller than -> the : 1
smaller than the -> front : 1
smaller than the -> second : 1
smaller than the -> resulting : 1
than the front -> and : 1
the front and -> print : 1
front and print -> return : 1
and print return -> i : 1
print return i -> next : 1
return i next -> function : 1
return i next -> two : 1
i next function -> is : 1
next function is -> we : 1
is we can -> use : 1
is we can -> provide : 1
is we can -> accidentally : 1
is we can -> there : 1
is we can -> see : 1
it to sort -> the : 1
to sort the -> content : 1
sort the content -> of : 1
of a but -> only : 1
a but only -> to : 1
but only to -> some : 1
only to some -> it : 1
to some it -> will : 1
it will smallest -> of : 1
will smallest of -> all : 1
smallest of all -> vector : 1
of all vector -> elements : 1
all vector elements -> in : 1
vector elements in -> the : 1
in the first -> half : 1
in the first -> we : 1
in the first -> the : 1
the first half -> of : 1
first half of -> the : 1
half of the -> vector : 1
half of the -> question : 1
vector in a -> sorted : 1
vector in a -> assign : 1
sorted the rest -> will : 1
the rest will -> reside : 1
rest will reside -> in : 1
will reside in -> the : 1
reside in the -> second : 1
second which will -> not : 1
which will not -> be : 1
not be auto -> middle : 1
be auto middle -> if : 1
auto middle if -> we : 1
middle if we -> want : 1
want to sort -> a : 1
to sort a -> data : 1
sort a data -> structure : 1
a data structure -> comparison : 1
a data structure -> with : 1
data structure comparison -> define : 1
structure comparison define -> one : 1
comparison define one -> and : 1
define one and -> make : 1
one and make -> a : 1
make a vector -> of : 1
of such struct -> mystruct : 1
such struct mystruct -> int : 1
struct mystruct int -> int : 1
mystruct int int -> mv : 1
int int mv -> optionally : 1
int mv optionally -> accepts : 1
mv optionally accepts -> a : 1
optionally accepts a -> comparison : 1
accepts a comparison -> function : 1
a comparison function -> as : 1
comparison function as -> its : 1
function as its -> third : 1
as its third -> use : 1
its third use -> that : 1
third use that -> and : 1
use that and -> provide : 1
that and provide -> it : 1
and provide it -> with : 1
and provide it -> an : 1
provide it with -> such : 1
it with such -> a : 1
such a just -> to : 1
a just to -> show : 1
to show that -> this : 1
show that this -> is : 1
this is we -> compare : 1
this is we -> just : 1
is we compare -> them : 1
we compare them -> by : 1
compare them by -> their : 1
them by their -> this : 1
their this they -> will : 1
this they will -> appear : 1
they will appear -> in : 1
will appear in -> the : 1
will appear in -> interesting : 1
appear in the -> order : 1
appear in the -> same : 1
in the order -> of : 2
order of not -> mystruct : 1
of not mystruct -> const : 1
not mystruct const -> mystruct : 1
mystruct const mystruct -> return : 1
const mystruct return -> last : 1
mystruct return last -> step : 1
return last step -> is : 2
step is printing -> the : 1
is printing the -> sorted : 1
printing the sorted -> vector : 1
sorted vector of -> for : 1
vector of for -> auto : 1
auto cout a -> b : 1
auto cout a -> cout : 1
cout a b -> cout : 3
a b cout -> compile : 1
a b cout -> c : 1
a b cout -> a : 1
b cout compile -> and : 1
run our the -> first : 1
our the first -> from : 1
the first from -> the : 1
first from the -> call : 1
from the call -> after : 1
the call after -> initializing : 1
the call after -> sorting : 1
call after initializing -> the : 1
after initializing the -> sorted : 1
initializing the sorted -> we : 1
the sorted we -> shuffled : 1
sorted we shuffled -> the : 1
we shuffled the -> vector : 1
we shuffled the -> whole : 1
shuffled the vector -> and : 1
vector and got -> a : 1
and got a -> from : 1
got a from -> the : 1
from the second -> the : 1
second the third -> line : 1
third line shows -> all : 1
line shows all -> the : 1
shows all the -> vector : 1
all the vector -> items : 1
the vector items -> after : 1
vector items after -> the : 1
items after the -> the : 1
after the the -> next : 1
the next is -> the : 1
next is the -> result : 1
is the result -> of : 3
result of the -> call : 1
result of the -> second : 1
result of the -> the : 1
result of the -> expression : 1
result of the -> measurement : 1
result of the -> function : 1
of the call -> after : 1
of the call -> which : 1
call after sorting -> it : 1
after sorting it -> again : 1
sorting it again -> with : 1
it again with -> we : 1
again with we -> shuffled : 1
with we shuffled -> the : 1
shuffled the whole -> vector : 1
the whole vector -> again : 1
whole vector again -> it : 1
vector again it -> using : 1
again it using -> we : 1
it using we -> can : 1
using we can -> see : 1
using we can -> any : 1
using we can -> construct : 1
using we can -> put : 1
see that all -> the : 2
that are less -> than : 1
are less than -> are : 1
less than are -> also : 1
than are also -> to : 1
are also to -> the : 1
to the left -> of : 1
the left of -> in : 1
left of in -> the : 1
of in the -> all : 1
of in the -> sorted : 1
in the all -> items : 2
the all items -> that : 1
the all items -> for : 2
all items that -> are : 1
that are greater -> than : 1
are greater than -> are : 1
greater than are -> to : 1
than are to -> apart : 1
are to apart -> from : 1
to apart from -> they : 1
apart from they -> seem : 1
from they seem -> the : 1
they seem the -> second : 1
seem the second -> shows : 1
the second shows -> the : 1
second shows the -> result : 1
shows the result -> of : 2
result of all -> items : 1
all items up -> to : 1
items up to -> the : 1
up to the -> middle : 1
up to the -> levels : 1
the middle appear -> strictly : 1
middle appear strictly -> sorted : 1
appear strictly sorted -> but : 1
strictly sorted but -> the : 1
sorted but the -> rest : 1
but the rest -> do : 1
the rest do -> in : 1
rest do in -> the : 1
last we can -> see : 2
last we can -> now : 1
can see our -> vector : 1
see our vector -> of : 1
vector of they -> are : 1
of they are -> strictly : 1
they are strictly -> sorted : 1
are strictly sorted -> by : 1
strictly sorted by -> their : 1
by their member -> it : 1
their member it -> have : 1
member it have -> used : 1
it have used -> different : 2
have used different -> which : 2
used different which -> have : 2
different which have -> to : 2
which have to -> do : 2
have to do -> with : 2
have to do -> it : 1
have to do -> anything : 1
have to do -> manual : 1
to do with -> a : 2
to do with -> our : 1
to do with -> math : 1
to do with -> to : 1
to do with -> tuples : 1
to do with -> threads : 1
to do with -> do : 1
do with a -> range : 1
do with a -> a : 1
a range as -> simply : 1
a range as -> tells : 1
a range as -> arguments : 2
range as simply -> sorts : 1
as simply sorts -> a : 1
simply sorts a -> range : 1
sorts a range -> as : 1
range as tells -> range : 1
as tells range -> is : 1
tells range is -> kind : 1
range is kind -> the : 1
is kind the -> operation : 1
kind the operation -> to : 1
operation to it -> accepts : 1
to it accepts -> a : 2
range as arguments -> and : 2
as arguments and -> its : 1
as arguments and -> another : 1
as arguments and -> removes : 1
as arguments and -> replaces : 1
as arguments and -> copies : 1
as arguments and -> tries : 1
as arguments and -> returns : 2
arguments and its -> items : 1
and its items -> a : 1
its items a -> range : 1
items a range -> as : 1
arguments and another -> which : 1
and another which -> tells : 1
another which tells -> until : 1
which tells until -> where : 1
tells until where -> the : 1
until where the -> input : 1
where the input -> range : 1
where the input -> buffer : 1
the input range -> behind : 1
the input range -> using : 1
the input range -> before : 1
the input range -> that : 1
input range behind -> that : 1
range behind that -> the : 1
behind that the -> rest : 1
that the rest -> of : 1
rest of the -> items : 1
rest of the -> code : 1
rest of the -> parallel : 1
the items appear -> a : 1
items appear a -> range : 1
appear a range -> and : 1
and a all -> items : 1
a all items -> for : 1
a all items -> from : 1
all items for -> which : 3
items for which -> the : 2
items for which -> is : 1
items for which -> our : 1
which the predicate -> function : 1
which the predicate -> returns : 1
predicate function returns -> moved : 1
predicate function returns -> are : 1
function returns moved -> to : 1
returns moved to -> the : 1
moved to the -> front : 2
moved to the -> objects : 1
to the front -> of : 2
to the front -> in : 1
the the rest -> is : 1
the the rest -> of : 1
the rest is -> moved : 1
rest is moved -> to : 1
is moved to -> the : 1
to the objects -> not : 1
the objects not -> have : 1
objects not have -> a : 1
have a comparison -> operator : 1
comparison operator it -> is : 1
operator it is -> possible : 1
possible to provide -> custom : 1
possible to provide -> another : 1
to provide custom -> comparison : 1
provide custom comparison -> these : 1
custom comparison these -> should : 1
comparison these should -> always : 1
these should always -> have : 1
should always have -> a : 1
always have a -> signature : 1
have a signature -> such : 1
signature such t -> const : 1
such t const -> t : 1
t const t -> have : 1
const t have -> any : 1
t have any -> side : 1
have any side -> effects : 1
any side effects -> during : 1
side effects during -> are : 1
effects during are -> also : 1
during are also -> other : 1
are also other -> algorithms : 1
also other algorithms -> such : 1
other algorithms such -> which : 1
algorithms such which -> also : 1
such which also -> sort : 1
which also sort -> but : 1
also sort but -> preserve : 1
sort but preserve -> the : 1
but preserve the -> order : 1
order of items -> with : 1
the same sort -> key : 1
same sort key -> and : 1
sort key and -> has : 1
key and has -> different : 1
and has different -> implementations : 1
has different implementations -> for : 1
different implementations for -> depending : 1
implementations for depending -> on : 1
for depending on -> the : 1
on the nature -> of : 1
it is implemented -> as : 1
is implemented as -> selection : 1
implemented as selection -> insertion : 1
as selection insertion -> merge : 1
selection insertion merge -> or : 1
insertion merge or -> completely : 1
merge or completely -> optimized : 1
or completely optimized -> for : 1
completely optimized for -> a : 1
optimized for a -> on : 1
for a on -> the : 1
a on the -> user : 1
a on the -> one : 1
a on the -> and : 1
on the user -> we : 2
user we usually -> do : 1
we usually do -> not : 2
usually do not -> even : 1
usually do not -> care : 1
not even need -> to : 3
even need to -> specific : 1
even need to -> be : 2
even need to -> copy : 1
need to specific -> items : 1
to specific items -> from : 1
items from and -> filtering : 1
items from and -> are : 1
from and filtering -> are : 1
and filtering are -> most : 1
filtering are most -> on : 1
are most on -> ranges : 1
most on ranges -> of : 1
ranges of in -> this : 1
of in this -> we : 3
of in this -> every : 1
concentrate on filtering -> items : 1
concentrate on filtering -> recursively : 1
on filtering items -> out : 1
filtering items out -> of : 1
out of data -> or : 1
data or simply -> removing : 1
or simply removing -> specific : 1
simply removing specific -> works : 1
removing specific works -> completely : 1
specific works completely -> differently : 1
works completely differently -> for : 1
completely differently for -> different : 1
differently for different -> data : 1
for different data -> in : 1
different data in -> linked : 1
data in linked -> lists : 1
in linked lists -> for : 1
linked lists for -> a : 1
lists for a -> node : 1
for a node -> can : 1
a node can -> be : 1
node can be -> removed : 1
can be removed -> by : 1
be removed by -> making : 1
be removed by -> overwriting : 1
removed by making -> its : 1
by making its -> predecessor : 1
making its predecessor -> point : 1
its predecessor point -> to : 1
predecessor point to -> its : 1
point to its -> after : 1
point to its -> name : 1
to its after -> a : 1
its after a -> node : 1
after a node -> is : 1
a node is -> removed : 1
node is removed -> link : 1
is removed link -> chain : 1
removed link chain -> in : 1
link chain in -> this : 1
chain in this -> it : 1
can be given -> back : 1
be given back -> to : 1
given back to -> the : 1
to the contiguously -> storing : 1
the contiguously storing -> data : 1
contiguously storing data -> structures : 1
storing data structures -> to : 1
data structures to -> some : 1
structures to some -> items : 1
to some items -> can : 1
some items can -> only : 1
items can only -> be : 1
only be removed -> by : 1
removed by overwriting -> them : 1
by overwriting them -> with : 1
overwriting them with -> other : 1
them with other -> if : 1
with other if -> an : 1
other if an -> item : 1
an item slot -> is : 1
item slot is -> marked : 1
slot is marked -> to : 1
is marked to -> be : 1
marked to be -> all : 1
to be all -> the : 1
be all the -> items : 1
the items behind -> be : 1
items behind be -> moved : 1
behind be moved -> one : 1
slot further to -> the : 1
further to the -> front : 1
the front in -> order : 1
front in order -> to : 1
order to fill -> the : 1
fill the this -> sounds : 1
the this sounds -> like : 1
this sounds like -> a : 1
lot of but -> if : 1
of but if -> we : 1
want to simply -> remove : 1
to simply remove -> whitespace : 1
simply remove whitespace -> from : 1
remove whitespace from -> a : 1
whitespace from a -> for : 1
whitespace from a -> string : 1
from a for -> this : 1
from a for -> it : 1
a for this -> should : 1
for this should -> be : 1
this should be -> achievable : 1
this should be -> the : 1
should be achievable -> without : 1
be achievable without -> much : 1
achievable without much -> having : 1
without much having -> either : 1
much having either -> data : 1
having either data -> structure : 1
either data structure -> at : 1
data structure at -> we : 1
structure at we -> do : 1
at we do -> not : 1
do not really -> want : 1
not really want -> to : 1
really want to -> care : 1
really want to -> use : 1
really want to -> let : 1
want to care -> to : 1
to care to -> remove : 1
care to remove -> an : 1
to remove an -> it : 1
remove an it -> should : 1
an it should -> just : 1
it should just -> this : 1
should just this -> is : 1
just this is -> what : 1
is what and -> can : 1
what and can -> do : 1
and can do -> for : 1
can do for -> to : 1
do for to -> do : 1
for to do -> will : 1
do will transform -> a : 1
will transform a -> content : 1
transform a content -> by : 1
a content by -> removing : 1
content by removing -> items : 1
by removing items -> in : 1
removing items in -> different : 1
items in different -> import : 1
in different import -> all : 1
different import all -> the : 1
import all the -> needed : 1
the needed headers -> and : 6
needed headers and -> declare : 6
needed headers and -> define : 1
needed headers and -> we : 1
using namespace short -> print : 1
namespace short print -> helper : 1
short print helper -> function : 1
print helper function -> will : 1
print helper function -> around : 1
will print our -> void : 1
print our void -> cout : 1
our void cout -> begin : 1
begin with an -> example : 1
example vector containing -> some : 1
vector containing some -> simple : 1
containing some simple -> integer : 1
some simple integer -> also : 1
simple integer also -> print : 1
integer also print -> so : 1
also print so -> we : 1
print so we -> can : 1
print so we -> overload : 1
can see how -> it : 1
how it changes -> with : 1
it changes with -> the : 1
changes with the -> function : 1
function we apply -> to : 1
we apply to -> it : 1
apply to it -> int : 1
to it int -> v : 1
it int v -> remove : 1
int v remove -> all : 1
v remove all -> the : 1
remove all the -> items : 1
the items with -> the : 1
the value from -> the : 1
from the moves -> the : 1
the moves the -> other : 1
moves the other -> items : 1
the other items -> in : 1
the other items -> from : 1
other items in -> a : 1
that the one -> actually : 1
the one actually -> have : 1
one actually have -> in : 1
actually have in -> the : 1
have in the -> vector : 1
have in the -> first : 1
have in the -> beginning : 1
the vector because -> the : 1
vector because the -> actual : 1
because the actual -> content : 1
the actual content -> is : 1
actual content is -> shorter : 1
content is shorter -> after : 1
is shorter after -> removing : 1
shorter after removing -> returns : 1
after removing returns -> us : 1
removing returns us -> an : 1
the the items -> between : 1
the the items -> from : 1
the items between -> the : 1
items between the -> new : 1
between the new -> end : 1
end iterator and -> the : 1
end iterator and -> then : 1
and the old -> end : 1
and the old -> iterator : 1
the old end -> iterator : 1
the old end -> must : 1
old end iterator -> are : 1
end iterator are -> to : 1
iterator are to -> be : 1
are to be -> considered : 1
are to be -> removed : 1
are to be -> interpreted : 1
to be considered -> so : 1
be considered so -> we : 1
considered so we -> tell : 1
so we tell -> the : 1
we tell the -> vector : 1
we tell the -> user : 2
vector to we -> surround : 1
to we surround -> the : 1
we surround the -> two : 1
we surround the -> printing : 1
surround the two -> removal : 1
the two removal -> lines : 1
two removal lines -> with : 1
removal lines with -> a : 1
lines with a -> new : 1
new scope because -> the : 1
scope because the -> iterator : 1
iterator is invalidated -> so : 1
is invalidated so -> it : 1
invalidated so it -> can : 1
it can go -> out : 1
can go out -> of : 1
go out of -> scope : 1
out of scope -> const : 1
out of scope -> will : 1
of scope const -> auto : 1
scope const auto -> remove : 1
const auto remove -> all : 1
auto remove all -> in : 1
remove all in -> order : 1
do we implement -> a : 1
implement a which -> tells : 1
implement a which -> holds : 1
implement a which -> can : 1
implement a which -> reads : 1
a which tells -> us : 1
a which tells -> if : 2
which tells us -> if : 1
which tells us -> how : 1
us if a -> number : 1
if a number -> is : 2
a number is -> feed : 1
a number is -> auto : 1
a number is -> create : 1
number is feed -> it : 1
is feed it -> into : 1
into the which -> accepts : 1
the which accepts -> such : 1
the which accepts -> another : 1
which accepts such -> auto : 1
accepts such auto -> return : 1
such auto return -> i : 1
auto return i -> const : 1
auto return i -> auto : 1
auto return i -> next : 1
auto return i -> we : 1
return i const -> auto : 1
i const auto -> next : 1
const auto next -> algorithm : 1
auto next algorithm -> we : 1
next algorithm we -> try : 1
algorithm we try -> out : 1
we try out -> is : 1
try out is -> we : 1
out is we -> use : 1
is we use -> it : 1
to overwrite all -> values : 1
overwrite all values -> of : 1
values of with -> the : 1
of with the -> also : 1
with the also -> exists : 1
the also exists -> as : 1
also exists as -> which : 1
exists as which -> also : 1
as which also -> accepts : 1
which also accepts -> predicate : 1
also accepts predicate -> pump : 1
accepts predicate pump -> completely : 1
predicate pump completely -> new : 1
pump completely new -> values : 1
completely new values -> into : 1
new values into -> the : 1
values into the -> vector : 1
values into the -> same : 1
vector and create -> two : 1
and create two -> new : 1
create two new -> empty : 1
create two new -> objects : 1
two new empty -> vectors : 1
new empty vectors -> in : 1
empty vectors in -> order : 1
vectors in order -> to : 1
to do another -> experiment : 1
do another experiment -> with : 1
another experiment with -> v : 1
experiment with v -> we : 1
with v we -> implement : 1
v we implement -> a : 1
a predicate for -> odd : 1
predicate for odd -> numbers : 1
for odd numbers -> again : 1
odd numbers again -> and : 1
numbers again and -> another : 1
again and another -> predicate : 1
and another predicate -> which : 1
another predicate which -> tells : 1
predicate which tells -> the : 1
predicate which tells -> if : 1
tells the opposite -> if : 1
the opposite if -> a : 1
opposite if a -> number : 1
number is auto -> return : 1
i auto return -> i : 1
i next two -> lines : 1
next two lines -> do : 1
two lines do -> exactly : 1
lines do exactly -> the : 1
the same they -> copy : 1
the same they -> still : 1
same they copy -> values : 1
they copy values -> to : 1
copy values to -> the : 1
and the first -> line : 1
and the first -> thing : 1
and the first -> class : 1
and the first -> time : 1
first line does -> this : 1
line does this -> with : 1
does this with -> the : 1
this with the -> which : 1
with the which -> copies : 1
the which copies -> everything : 1
which copies everything -> from : 1
which copies everything -> fulfill : 1
copies everything from -> a : 1
everything from a -> source : 1
a source container -> to : 1
source container to -> another : 1
container to another -> container : 1
to another container -> which : 1
another container which -> does : 1
container which does -> fulfill : 1
which does fulfill -> the : 1
does fulfill the -> predicate : 1
fulfill the predicate -> the : 1
fulfill the predicate -> both : 1
the predicate the -> other : 1
predicate the other -> line : 1
the other line -> uses : 1
other line uses -> which : 1
line uses which -> copies : 1
uses which copies -> everything : 1
copies everything fulfill -> the : 1
everything fulfill the -> predicate : 1
the predicate both -> the : 1
predicate both the -> vectors : 1
both the vectors -> should : 1
the vectors should -> now : 1
vectors should now -> result : 1
should now result -> same : 1
now result same -> compile : 1
result same compile -> and : 1
same compile and -> run : 1
the the first -> output : 1
the the first -> item : 1
the the first -> step : 1
the first output -> line : 1
first output line -> shows : 1
output line shows -> the : 1
line shows the -> vector : 1
line shows the -> result : 1
shows the vector -> after : 1
the vector after -> its : 1
vector after its -> the : 1
after its the -> second : 1
its the second -> line : 1
the second line -> shows : 1
the second line -> of : 1
second line shows -> it : 1
line shows it -> after : 1
shows it after -> removing : 1
it after removing -> all : 1
after removing all -> the : 1
removing all the -> values : 1
removing all the -> odd : 1
of the next -> line : 1
of the next -> point : 1
of the next -> shall : 1
next line shows -> the : 1
result of removing -> all : 1
of removing all -> the : 1
all the odd -> before : 1
all the odd -> numbers : 1
the odd before -> the : 1
odd before the -> fourth : 1
before the fourth -> we : 1
the fourth we -> replaced : 1
fourth we replaced -> all : 1
we replaced all -> the : 1
replaced all the -> values : 1
last two lines -> show : 1
two lines show -> vectors : 1
two lines show -> that : 2
lines show vectors -> and : 1
show vectors and -> it : 1
vectors and it -> have : 1
and it have -> used : 1
with a a -> value : 1
a a value -> as : 1
a value as -> arguments : 2
value as arguments -> and : 2
arguments and removes -> any : 1
and removes any -> occurrence : 1
removes any occurrence -> of : 1
any occurrence of -> the : 1
occurrence of the -> returns : 1
of the returns -> a : 1
a new end -> iterator : 1
of the modified -> a : 1
the modified a -> range : 1
modified a range -> and : 1
range and two -> values : 1
and two values -> as : 1
two values as -> arguments : 1
values as arguments -> and : 1
arguments and replaces -> all : 1
and replaces all -> the : 1
replaces all the -> occurrences : 1
all the occurrences -> of : 1
the occurrences of -> the : 1
occurrences of the -> first : 1
the first value -> second : 1
the first value -> to : 1
first value second -> an : 1
value second an -> output : 1
second an output -> and : 1
an output and -> a : 2
output and a -> value : 1
output and a -> delimiter : 1
and a value -> as : 1
and a value -> this : 1
arguments and copies -> all : 1
and copies all -> the : 1
copies all the -> values : 2
the values that -> are : 1
values that are -> equal : 1
values that are -> calculated : 1
that are equal -> to : 1
are equal to -> the : 1
to the given -> the : 1
the given the -> range : 1
given the range -> to : 1
the output similar -> analogous : 1
output similar analogous -> to : 1
similar analogous to -> the : 1
analogous to the -> source : 1
source range is -> not : 1
range is not -> like : 1
is not like -> additionally : 1
not like additionally -> accepts : 1
like additionally accepts -> a : 1
additionally accepts a -> predicate : 1
additionally accepts a -> transformation : 1
accepts a predicate -> function : 3
predicate function as -> an : 1
function as an -> argument : 1
as an argument -> in : 2
as an argument -> and : 2
an argument in -> order : 1
an argument in -> the : 1
argument in order -> to : 1
order to copy -> only : 1
to copy only -> the : 1
copy only the -> values : 1
only the values -> predicate : 1
only the values -> or : 1
the values predicate -> which : 1
values predicate which -> makes : 1
predicate which makes -> it : 1
it a every -> one : 1
a every one -> of : 1
every one of -> the : 1
of the listed -> there : 1
the listed there -> also : 1
listed there also -> exists : 1
there also exists -> an : 1
also exists an -> which : 1
exists an which -> accepts : 1
an which accepts -> a : 1
predicate function instead -> of : 2
function instead of -> a : 2
instead of a -> which : 1
instead of a -> this : 1
instead of a -> comparison : 1
instead of a -> time : 1
instead of a -> more : 1
of a which -> then : 1
a which then -> decides : 1
which then decides -> which : 1
then decides which -> values : 1
decides which values -> are : 1
which values are -> to : 1
values are to -> be : 1
be removed or -> the : 1
removed or the -> contents : 1
or the contents -> of : 1
contents of is -> the : 1
of is the -> simplest : 1
of is the -> old : 1
simplest stl algorithm -> is : 1
stl algorithm is -> the : 1
algorithm is the -> second : 1
the second simplest -> stl : 1
second simplest stl -> just : 1
simplest stl just -> as : 1
stl just as -> it : 1
as it copies -> items : 1
it copies items -> from : 1
from one range -> to : 2
one range to -> another : 1
one range to -> the : 1
range to another -> but : 1
to another but -> additionally : 1
another but additionally -> accepts : 1
but additionally accepts -> a : 1
accepts a transformation -> this : 1
a transformation this -> transformation : 1
transformation this transformation -> function : 1
this transformation function -> can : 1
transformation function can -> alter : 1
function can alter -> the : 1
can alter the -> value : 1
alter the value -> of : 1
the input type -> before : 1
input type before -> it : 1
type before it -> is : 1
before it is -> assigned : 1
it is assigned -> to : 1
assigned to an -> item : 1
to an item -> in : 1
an item in -> the : 1
in the destination -> it : 1
the destination it -> can : 1
the destination it -> applies : 1
destination it can -> even : 1
can even construct -> a : 2
even construct a -> completely : 1
even construct a -> whole : 1
construct a completely -> different : 1
completely different which -> is : 1
different which is -> useful : 1
is useful if -> the : 1
is useful if -> we : 1
useful if the -> source : 1
if the source -> range : 1
source range and -> destination : 1
range and destination -> range : 1
and destination range -> differ : 1
destination range differ -> in : 1
range differ in -> their : 1
differ in their -> payload : 1
differ in their -> character : 1
in their payload -> item : 1
their payload item -> it : 1
payload item it -> is : 1
item it is -> simple : 1
item it is -> important : 1
it is simple -> to : 2
is simple to -> use : 1
is simple to -> easily : 1
simple to use -> but : 1
simple to use -> and : 2
to use but -> still : 1
to use but -> this : 1
use but still -> very : 1
but still very -> which : 1
still very which -> makes : 1
very which makes -> it : 1
makes it an -> ordinary : 1
it an ordinary -> standard : 1
an ordinary standard -> component : 1
ordinary standard component -> used : 1
standard component used -> in : 1
component used in -> portable : 1
used in portable -> to : 1
in portable to -> do : 1
portable to do -> this : 1
order to items -> of : 1
to items of -> a : 1
items of a -> vector : 1
a vector while -> copying : 1
vector while copying -> we : 1
while copying we -> first : 1
copying we first -> need : 1
all the necessary -> to : 1
all the necessary -> headers : 8
all the necessary -> and : 1
all the necessary -> for : 1
all the necessary -> then : 1
all the necessary -> using : 2
the necessary to -> spare : 1
the necessary to -> instances : 1
necessary to spare -> us : 1
using namespace vector -> with : 1
namespace vector with -> some : 1
with some simple -> integers : 1
some simple integers -> will : 1
simple integers will -> do : 1
integers will do -> the : 1
will do the -> job : 1
do the job -> as : 1
the job as -> an : 1
job as an -> example : 1
as an example -> source : 1
an example source -> data : 1
example source data -> int : 1
source data int -> v : 1
data int v -> we : 1
v we copy -> all : 1
we copy all -> the : 1
copy all the -> items : 1
copy all the -> values : 1
copy all the -> characters : 1
the items to -> an : 1
items to an -> adapter : 1
items to an -> output : 1
to an adapter -> in : 1
an adapter in -> order : 1
adapter in order -> to : 1
to print accepts -> a : 1
print accepts a -> function : 1
which accepts items -> of : 1
accepts items of -> the : 1
the container payload -> type : 1
container payload type -> and : 1
payload type and -> transforms : 1
type and transforms -> them : 1
transforms them during -> each : 1
them during each -> copy : 1
during each copy -> in : 1
each copy in -> this : 1
copy in this -> we : 1
this we calculate -> the : 1
we calculate the -> of : 1
we calculate the -> sum : 2
we calculate the -> error : 1
we calculate the -> size : 1
the of each -> number : 1
of each number -> so : 1
each number so -> the : 1
number so the -> code : 1
so the code -> will : 1
the code will -> print : 1
the code will -> be : 1
code will print -> the : 1
print the squares -> of : 1
squares of the -> items : 1
the vector without -> us : 1
vector without us -> having : 1
having to store -> them : 1
to store them -> return : 1
store them return -> i : 1
them return i -> cout : 1
return i cout -> do : 1
i cout do -> another : 1
cout do another -> from : 1
do another from -> for : 1
another from for -> we : 1
from for we -> could : 1
we could nicely -> readable : 1
could nicely readable -> string : 1
nicely readable string -> such : 1
readable string such -> the : 1
string such the -> following : 1
such the following -> function : 1
the following function -> object : 1
following function object -> does : 1
function object does -> just : 1
function object does -> then : 1
object does just -> that : 1
does just that -> using : 1
just that using -> the : 1
using the auto -> stringstream : 1
the auto stringstream -> ss : 1
auto stringstream ss -> i : 1
stringstream ss i -> i : 1
ss i i -> return : 1
i i return -> function : 1
i i return -> producer : 1
i return function -> we : 1
return function we -> just : 1
function we just -> implemented : 1
function we just -> at : 1
just implemented returns -> us : 1
implemented returns us -> string : 1
returns us string -> values : 1
us string values -> from : 1
string values from -> integer : 1
values from integer -> we : 1
from integer we -> could : 1
integer we could -> also : 1
we could also -> say : 1
we could also -> write : 1
we could also -> have : 1
could also say -> it : 1
also say it -> from : 1
say it from -> integers : 1
it from integers -> to : 1
from integers to -> using : 1
integers to using -> the : 1
to using the -> we : 1
using the we -> can : 1
using the we -> then : 1
can copy all -> such : 1
copy all such -> mappings : 1
all such mappings -> from : 1
such mappings from -> the : 1
mappings from the -> integer : 1
from the integer -> vector : 1
the integer vector -> into : 1
integer vector into -> a : 1
vector into a -> string : 1
into a string -> printing : 1
into a string -> and : 1
a string printing -> compile : 1
string printing compile -> and : 1
printing compile and -> run : 1
run the it -> works : 1
the it works -> exactly : 1
like but while -> the : 1
but while the -> values : 1
while the values -> from : 1
the values from -> the : 5
the values from -> into : 1
source iterator to -> the : 1
to the destination -> it : 1
to the destination -> items : 1
destination it applies -> the : 1
it applies the -> transformation : 1
applies the transformation -> function : 1
transformation function to -> the : 1
transformation function to -> each : 1
transformation function to -> we : 1
function to the -> value : 1
function to the -> with : 1
to the value -> before : 1
to the value -> static : 1
the value before -> result : 1
value before result -> to : 1
before result to -> the : 1
result to the -> destination : 1
the destination items -> in : 1
destination items in -> ordered : 1
and unordered we -> need : 1
unordered we need -> to : 1
need to tell -> some : 1
to tell some -> kind : 1
tell some kind -> of : 1
kind of item -> exists : 1
of item exists -> within : 1
item exists within -> some : 1
exists within some -> and : 1
within some and -> if : 1
some and if -> it : 1
and if it -> we : 3
it we often -> also : 1
we often also -> need : 1
often also need -> to : 1
also need to -> modify : 1
need to modify -> to : 1
to modify to -> access : 1
modify to access -> other : 1
to access other -> data : 1
access other data -> associated : 1
other data associated -> with : 1
data associated with -> are : 1
associated with are -> different : 1
with are different -> strategies : 1
are different strategies -> for : 1
different strategies for -> finding : 1
strategies for finding -> if : 1
for finding if -> the : 1
finding if the -> items : 1
if the items -> are : 1
the items are -> present : 1
items are present -> in : 1
are present in -> a : 1
present in a -> sorted : 1
a sorted then -> we : 1
sorted then we -> can : 1
then we can -> do : 2
then we can -> print : 1
then we can -> safely : 1
then we can -> write : 1
then we can -> use : 1
then we can -> access : 1
then we can -> come : 1
then we can -> quit : 1
do a binary -> which : 1
a binary which -> is : 1
a binary which -> accepts : 1
binary which is -> faster : 1
which is faster -> than : 1
is faster than -> linearly : 1
is faster than -> the : 1
faster than linearly -> going : 1
than linearly going -> through : 1
linearly going through -> the : 1
going through the -> items : 1
through the items -> one : 1
the items one -> by : 1
items one by -> if : 1
one by if -> it : 1
by if it -> is : 1
not we are -> stuck : 1
we are stuck -> with : 1
are stuck with -> linear : 1
stuck with linear -> traversal : 1
with linear traversal -> typical : 1
linear traversal typical -> stl : 1
traversal typical stl -> search : 1
typical stl search -> algorithms : 1
stl search algorithms -> can : 1
search algorithms can -> do : 1
algorithms can do -> both : 1
can do both -> for : 1
do both for -> so : 1
both for so -> good : 1
for so good -> to : 1
so good to -> know : 1
good to know -> them : 1
good to know -> is : 1
to know them -> and : 1
know them and -> their : 1
them and their -> this : 1
and their this -> section : 1
their this section -> is : 1
section is about -> the : 1
is about the -> simple : 1
about the simple -> linear : 1
the simple linear -> search : 1
simple linear search -> the : 1
linear search the -> binary : 1
search the binary -> search : 1
the binary search -> and : 1
binary search and -> their : 1
binary search and -> returns : 1
search and their -> to : 1
and their to -> do : 1
their to do -> this : 1
to use linear -> and : 1
use linear and -> binary : 1
linear and binary -> search : 1
and binary search -> algorithms : 1
binary search algorithms -> on : 1
search algorithms on -> a : 1
algorithms on a -> small : 1
on a small -> example : 1
a small example -> data : 1
small example data -> first : 1
example data first -> include : 1
data first include -> all : 1
using namespace data -> set : 1
using namespace data -> point : 1
namespace data set -> will : 1
data set will -> consist : 1
set will consist -> of : 1
will consist of -> which : 1
will consist of -> six : 1
consist of which -> just : 1
of which just -> save : 1
which just save -> a : 1
just save a -> and : 1
save a and -> its : 1
a and its -> population : 1
and its population -> struct : 1
its population struct -> city : 1
population struct city -> string : 1
struct city string -> unsigned : 1
struct city string -> double : 1
city string unsigned -> algorithms : 1
string unsigned algorithms -> need : 1
unsigned algorithms need -> to : 1
able to compare -> one : 1
to compare one -> the : 1
compare one the -> so : 1
one the so -> we : 1
so we overload -> the : 2
we overload the -> operator : 1
we overload the -> stream : 3
overload the operator -> for : 1
the operator for -> struct : 1
the operator for -> the : 1
operator for struct -> bool : 1
for struct bool -> city : 1
struct bool city -> const : 1
bool city const -> city : 1
city const city -> return : 1
const city return -> also : 1
const city return -> os : 1
city return also -> want : 1
return also want -> to : 1
also want to -> print : 1
also want to -> see : 1
also want to -> present : 1
want to print -> so : 1
want to print -> special : 1
want to print -> a : 1
want to print -> into : 1
to print so -> we : 1
the stream const -> city : 1
the stream const -> return : 1
stream const city -> return : 1
city return os -> functions : 1
return os functions -> typically : 1
os functions typically -> return : 1
functions typically return -> these : 1
typically return these -> iterators : 1
return these iterators -> point : 1
these iterators point -> to : 1
iterators point to -> the : 1
the item if -> they : 1
item if they -> found : 1
if they found -> it : 1
they found it -> to : 1
found it to -> the : 1
the underlying in -> the : 1
the underlying in -> that : 1
underlying in the -> last : 1
last we are -> not : 1
allowed to access -> such : 1
to access such -> an : 1
access such an -> because : 1
such an because -> we : 1
an because we -> are : 1
going to print -> our : 1
going to print -> the : 1
going to print -> absolute : 1
to print our -> search : 1
to print our -> implementation : 1
print our search -> we : 1
our search we -> implement : 1
search we implement -> a : 1
that returns us -> another : 1
returns us another -> function : 1
returns us another -> we : 1
us another function -> which : 1
function which encapsulates -> the : 1
which encapsulates the -> end : 1
encapsulates the end -> iterator : 1
of a data -> when : 1
of a data -> point : 1
a data when -> used : 1
data when used -> for : 1
used for it -> will : 1
it will compare -> its : 1
will compare its -> iterator : 1
compare its iterator -> argument : 1
its iterator argument -> against : 1
iterator argument against -> the : 1
argument against the -> end : 1
iterator and then -> print : 1
and then print -> the : 2
then print the -> item : 1
then print the -> time : 1
then print the -> name : 1
print the item -> just : 1
the item just -> template : 1
item just template -> static : 1
just template static -> auto : 1
template static auto -> c : 1
template static auto -> return : 3
static auto c -> return : 1
auto c return -> auto : 1
auto c return -> already : 1
c return auto -> if : 1
auto if cout -> else : 1
auto if cout -> randval : 1
if cout else -> cout : 1
cout else cout -> start : 1
cout else cout -> suggestions : 1
cout else cout -> instantiate : 1
else cout start -> with : 1
cout start with -> an : 1
start with an -> example : 1
example vector of -> some : 1
vector of some -> german : 1
of some german -> int : 1
some german int -> const : 1
german int const -> c : 1
int const c -> this : 1
const c this -> we : 1
c this we -> build : 1
this we build -> a : 1
we build a -> city : 1
build a city -> printer : 1
a city printer -> which : 1
city printer which -> captures : 1
printer which captures -> the : 1
which captures the -> end : 1
captures the end -> iterator : 1
iterator of our -> city : 1
of our city -> vector : 1
our city vector -> auto : 1
city vector auto -> use : 1
vector auto use -> to : 1
auto use to -> find : 1
use to find -> the : 2
use to find -> out : 1
to find the -> item : 1
to find the -> first : 3
to find the -> right : 1
to find the -> next : 1
find the item -> in : 1
the which saves -> the : 1
saves the city -> item : 1
the city item -> of : 1
city item of -> at : 1
item of at -> this : 1
of at this -> search : 1
of at this -> the : 1
at this search -> looks : 1
this search looks -> we : 1
search looks we -> get : 1
looks we get -> exactly : 1
we get exactly -> the : 1
get exactly the -> item : 1
get exactly the -> same : 1
exactly the item -> we : 1
the item we -> searched : 1
the item we -> but : 1
the item we -> created : 1
item we searched -> but : 1
we searched but -> we : 1
searched but we -> did : 1
did not know -> its : 1
not know its -> position : 1
know its position -> in : 1
its position in -> the : 1
vector and the -> function : 1
vector and the -> number : 1
function returns us -> just : 1
function returns us -> a : 4
returns us just -> we : 1
us just we -> for : 1
just we for -> make : 1
we for make -> the : 1
for make the -> operator : 1
make the operator -> of : 1
the operator of -> the : 1
the operator of -> template : 1
the operator of -> input : 1
of the struct -> overloaded : 1
the struct overloaded -> only : 1
struct overloaded only -> compare : 1
overloaded only compare -> the : 1
only compare the -> city : 1
compare the city -> then : 1
the city then -> we : 1
city then we -> could : 1
then we could -> search : 1
we could search -> just : 1
could search just -> using : 1
search just using -> the : 1
just using the -> city : 1
just using the -> lowest : 1
using the city -> without : 1
the city without -> even : 1
city without even -> knowing : 1
without even knowing -> but : 1
without even knowing -> the : 1
even knowing but -> that : 1
knowing but that -> would : 1
but that would -> not : 1
that would not -> be : 1
that would not -> make : 1
not be a -> good : 1
be a good -> in : 1
a good in -> the : 1
good in the -> next : 1
next we will -> do : 1
we will do -> it : 1
we will do -> an : 1
will do it -> auto : 1
do it auto -> knowing : 1
it auto knowing -> the : 1
auto knowing the -> population : 1
knowing the population -> count : 1
the population count -> of : 1
population count of -> a : 1
count of a -> and : 1
a and also -> without : 1
and also without -> tampering : 1
also without tampering -> with : 1
without tampering with -> we : 1
without tampering with -> at : 1
tampering with we -> can : 1
we can search -> only : 1
we can search -> for : 1
we can search -> foo : 1
can search only -> by : 1
search only by -> comparing : 1
only by comparing -> its : 1
by comparing its -> name : 1
comparing its name -> with : 1
its name with -> the : 1
name with the -> accepts : 1
with the accepts -> a : 1
the accepts a -> predicate : 1
the accepts a -> a : 1
the accepts a -> relative : 1
predicate function object -> instead : 1
function object instead -> of : 1
a this we -> can : 1
can search for -> the : 1
for the cologne -> city : 1
the cologne city -> item : 1
cologne city item -> when : 1
city item when -> we : 1
item when we -> only : 1
when we only -> know : 1
we only know -> its : 1
only know its -> auto : 1
know its auto -> auto : 1
its auto auto -> return : 1
auto return order -> to : 1
to make searching -> a : 1
make searching a -> bit : 1
searching a bit -> prettier : 1
a bit prettier -> and : 1
bit prettier and -> we : 1
prettier and we -> can : 1
and we can -> implement : 1
and we can -> also : 2
and we can -> automatically : 1
and we can -> even : 1
and we can -> shorten : 1
and we can -> use : 1
and we can -> only : 1
we can implement -> predicate : 1
we can implement -> the : 1
can implement predicate -> the : 1
predicate the function -> object : 1
accepts a population -> size : 1
a population size -> and : 1
population size and -> returns : 1
size and returns -> us : 1
us a function -> if : 1
a function if -> a : 1
function if a -> instance : 1
if a instance -> has : 1
a instance has -> a : 1
instance has a -> larger : 1
has a larger -> population : 1
a larger population -> than : 1
larger population than -> the : 1
population than the -> captured : 1
than the captured -> use : 1
the captured use -> it : 1
captured use it -> to : 1
it to search -> for : 1
search for a -> german : 1
search for a -> faster : 1
for a german -> city : 1
a german city -> with : 1
german city with -> more : 1
city with more -> than : 1
more than two -> million : 1
than two million -> inhabitants : 1
two million inhabitants -> in : 1
million inhabitants in -> our : 1
inhabitants in our -> small : 1
in our small -> example : 1
our small example -> within : 1
small example within -> the : 1
example within the -> given : 1
within the given -> that : 1
the given that -> city : 1
given that city -> is : 1
that city is -> only : 1
city is only -> auto : 1
is only auto -> return : 1
only auto return -> city : 1
auto return city -> return : 1
return city return -> auto : 1
city return auto -> search : 1
return auto search -> functions : 1
auto search functions -> we : 1
search functions we -> just : 1
functions we just -> traverse : 1
functions we just -> they : 1
we just traverse -> our : 1
just traverse our -> containers : 1
traverse our containers -> thus : 1
our containers thus -> they : 1
containers thus they -> have : 1
thus they have -> a : 1
they have a -> runtime : 1
they have a -> and : 1
have a runtime -> complexity : 1
runtime complexity of -> the : 1
complexity of the -> stl : 1
complexity of the -> problem : 1
complexity of the -> implementation : 1
also has binary -> search : 1
has binary search -> which : 1
binary search which -> work : 1
binary search which -> just : 1
search which work -> within : 1
which work within -> generate : 1
work within generate -> a : 1
within generate a -> new : 1
generate a new -> example : 1
a new example -> data : 1
new example data -> which : 1
example data which -> just : 1
data which just -> consists : 1
which just consists -> of : 1
just consists of -> some : 1
consists of some -> integer : 1
of some integer -> and : 1
some integer and -> build : 1
integer and build -> another : 1
and build another -> function : 1
build another function -> for : 1
another function for -> const : 1
function for const -> v : 1
for const v -> auto : 1
const v auto -> function : 1
v auto function -> returns : 1
auto function returns -> boolean : 1
function returns boolean -> values : 1
returns boolean values -> and : 1
boolean values and -> just : 1
values and just -> tells : 1
and just tells -> us : 1
just tells us -> it : 1
tells us it -> found : 1
us it found -> an : 1
it found an -> but : 1
found an but -> it : 1
it does return -> the : 1
does return the -> item : 1
return the item -> it : 1
the item it -> is : 1
is important that -> the : 1
important that the -> container : 1
important that the -> text : 1
that the container -> we : 1
the container we -> are : 1
container we are -> searching : 1
we are searching -> in : 2
we are searching -> we : 1
we are searching -> a : 1
we are searching -> for : 1
are searching in -> is : 1
are searching in -> such : 1
searching in is -> binary : 1
in is binary -> search : 1
is binary search -> work : 1
binary search work -> bool : 1
search work bool -> cout : 1
work bool cout -> order : 1
bool cout order -> to : 1
cout order to -> get : 1
get the items -> we : 1
items we are -> searching : 1
are searching we -> need : 1
searching we need -> other : 1
we need other -> stl : 1
need other stl -> one : 1
other stl one -> of : 1
stl one of -> them : 1
them is it -> does : 1
is it does -> not : 1
is it does -> how : 1
not return an -> iterator : 1
an iterator for -> the : 1
iterator for the -> item : 1
for the item -> we : 1
item we but -> a : 1
we but a -> of : 1
but a of -> the : 1
the first iterator -> points : 2
the first iterator -> is : 1
first iterator points -> to : 2
first is than -> the : 1
first is than -> in : 1
than the value -> been : 1
than the value -> of : 1
the value been -> looking : 1
value been looking -> the : 1
been looking the -> second : 1
looking the second -> iterator : 1
the second iterator -> points : 2
the second iterator -> is : 1
second iterator points -> to : 2
is than in -> our : 1
than in our -> which : 1
in our which -> goes : 1
our which goes -> from : 1
which goes from -> to : 1
the actual because -> it : 1
actual because it -> is : 1
the first not -> smaller : 1
first not smaller -> than : 1
not smaller than -> the : 2
not smaller than -> what : 1
not smaller than -> in : 1
not smaller than -> also : 1
not smaller than -> int : 1
than the second -> iterator : 1
first item larger -> than : 2
item larger than -> if : 1
item larger than -> what : 1
larger than if -> we : 1
than if we -> had : 1
if we had -> multiple : 1
if we had -> used : 1
we had multiple -> values : 1
had multiple values -> of : 1
multiple values of -> both : 1
multiple values of -> that : 1
values of both -> the : 1
both the iterators -> in : 1
the iterators in -> a : 1
iterators in a -> of : 1
a of auto -> we : 1
of auto we -> just : 1
auto we just -> need : 1
just need one -> we : 1
need one we -> can : 1
one we can -> use : 1
can use or -> only : 1
use or only -> returns : 1
or only returns -> an : 1
only returns an -> iterator : 1
first item not -> smaller : 2
item not smaller -> than : 2
smaller than what -> we : 1
what we returns -> an : 1
we returns an -> iterator : 1
larger than what -> we : 1
what we searched -> compile : 1
we searched compile -> and : 1
searched compile and -> run : 1
program to see -> if : 1
to see if -> the : 1
see if the -> output : 1
see if the -> input : 1
if the output -> matches : 1
if the output -> would : 1
the output matches -> our : 1
output matches our -> it : 1
matches our it -> are : 1
our it are -> the : 1
it are the -> search : 1
are the search -> algorithms : 1
the search algorithms -> we : 1
search algorithms we -> have : 1
algorithms we have -> used : 1
we have used -> in : 1
have used in -> this : 1
this a search -> range : 1
a search range -> and : 4
search range and -> a : 4
and a comparison -> value : 3
and a comparison -> and : 1
a comparison value -> as : 2
a comparison value -> returns : 1
comparison value as -> returns : 1
comparison value as -> performs : 1
value as returns -> an : 1
value as returns -> us : 1
as returns an -> iterator : 1
first item equal -> to : 1
item equal to -> the : 1
to the comparison -> searches : 1
the comparison searches -> like : 1
comparison searches like -> uses : 1
searches like uses -> a : 1
like uses a -> predicate : 1
uses a predicate -> function : 1
of a comparison -> a : 1
a comparison a -> search : 1
comparison a search -> range : 2
value as performs -> a : 1
as performs a -> binary : 1
performs a binary -> search : 2
search and returns -> the : 1
returns the range -> contains : 1
the range contains -> that : 1
range contains that -> a : 1
contains that a -> search : 1
that a search -> range : 1
a comparison and -> then : 1
and then performs -> a : 1
then performs a -> binary : 1
binary search for -> the : 2
first item than -> the : 2
item than the -> comparison : 2
than the comparison -> returns : 1
than the comparison -> a : 1
the comparison returns -> an : 1
comparison returns an -> iterator : 1
pointing to that -> like : 1
to that like -> returns : 1
that like returns -> an : 1
like returns an -> iterator : 1
the comparison a -> search : 1
comparison value returns -> a : 1
value returns a -> pair : 1
returns a pair -> of : 1
first iterator is -> the : 1
of the second -> iterator : 1
of the second -> this : 1
of the second -> scope : 1
of the second -> sleep : 1
second iterator is -> the : 1
result of these -> functions : 1
of these functions -> accept : 1
of these functions -> are : 1
these functions accept -> custom : 1
functions accept custom -> comparison : 1
accept custom comparison -> functions : 1
custom comparison functions -> as : 1
comparison functions as -> an : 1
functions as an -> optional : 1
as an optional -> additional : 1
as an optional -> second : 1
an optional additional -> this : 1
optional additional this -> the : 1
additional this the -> search : 1
this the search -> can : 1
the search can -> be : 1
search can be -> as : 1
can be as -> we : 1
be as we -> did : 1
did in the -> have : 1
did in the -> does : 1
in the have -> a : 1
the have a -> closer : 1
the have a -> look : 2
at how that -> we : 1
how that we -> have : 1
have a and -> call : 2
have a and -> an : 1
a and call -> in : 1
a and call -> then : 1
and call in -> order : 1
call in order -> to : 2
order to perform -> a : 1
to perform a -> binary : 1
perform a binary -> search : 1
for the value -> as : 1
for the value -> would : 1
for the value -> for : 1
for the value -> and : 1
for the value -> of : 1
for the value -> to : 1
the value as -> returns : 1
as returns us -> a : 1
us a pair -> of : 3
pair of lower -> bound : 1
of lower bound -> and : 1
lower bound and -> upper : 1
bound and upper -> bound : 1
and upper bound -> these : 1
upper bound these -> should : 1
bound these should -> the : 1
these should the -> range : 1
should the range -> as : 1
the range as -> there : 1
range as there -> are : 1
there are so -> many : 1
are so many -> values : 1
so many values -> of : 1
many values of -> in : 1
values of in -> the : 1
the sorted check -> out : 1
sorted check out -> the : 1
the following more -> uses : 1
the following more -> samples : 1
following more uses -> the : 1
more uses the -> typical : 1
uses the typical -> binary : 1
the typical binary -> search : 1
typical binary search -> approach : 1
binary search approach -> until : 1
search approach until -> it : 1
approach until it -> trips : 1
until it trips -> into : 1
it trips into -> the : 1
trips into the -> range : 1
into the range -> of : 1
the range of -> values : 1
of values than -> the : 1
values than the -> search : 1
values than the -> formula : 1
than the search -> it : 1
the search it -> splits : 1
search it splits -> up : 1
it splits up -> to : 1
splits up to -> a : 1
up to a -> call : 1
a call and -> an : 1
call and an -> call : 1
and an call -> in : 1
an call in -> order : 1
order to bundle -> their : 1
to bundle their -> return : 1
bundle their return -> values : 1
their return values -> in : 3
their return values -> to : 1
return values in -> a : 1
return values in -> this : 1
return values in -> variables : 1
a pair as -> order : 1
pair as order -> to : 1
as order to -> get : 1
get a binary -> search : 1
search which just -> returns : 1
just returns the -> first : 1
just returns the -> path : 1
returns the first -> item : 1
first item the -> we : 1
item the we -> could : 1
could implement the -> typename : 1
implement the typename -> iterator : 1
the typename iterator -> iterator : 1
typename iterator iterator -> t : 1
iterator iterator t -> const : 1
iterator t const -> auto : 1
const auto if -> value : 1
const auto if -> we : 1
auto if value -> return : 1
if value return -> return : 1
return return function -> uses : 1
return return function -> does : 1
return function uses -> in : 1
function uses in -> order : 1
uses in order -> to : 1
find the first -> item : 1
find the first -> position : 1
find the first -> character : 2
than the resulting -> can : 1
the resulting can -> then : 1
resulting can then -> have : 1
can then have -> three : 1
then have three -> different : 1
have three different -> cases : 1
three different cases -> it : 1
different cases it -> points : 1
cases it points -> item : 1
it points item -> is : 1
points item is -> not : 1
item is not -> smaller : 1
is not smaller -> than : 2
smaller than in -> this : 1
than in this -> it : 1
it is identical -> to : 1
is identical to -> first : 1
identical to first -> item : 1
to first item -> that : 1
first item that -> is : 1
item that is -> not : 1
smaller than also -> than : 1
than also than -> therefore : 1
also than therefore -> we : 1
than therefore we -> must : 1
therefore we must -> signal : 1
we must signal -> that : 1
must signal that -> we : 1
signal that we -> did : 1
that we did -> find : 1
that we did -> not : 1
we did find -> it : 1
did find it -> by : 1
find it by -> returning : 1
it by returning -> item : 1
by returning item -> points : 1
returning item points -> to : 1
item points to -> is : 1
to is equal -> to : 1
equal to it -> is : 1
to it is -> not : 1
to it is -> really : 1
to it is -> vectorize : 1
is not only -> a : 1
not only a -> but : 1
only a but -> it : 1
a but it -> is : 2
is an therefore -> we : 1
an therefore we -> can : 1
therefore we can -> return : 1
we can return -> our : 1
we can return -> an : 1
we can return -> them : 1
we can return -> the : 1
can return our -> type : 1
return our type -> does : 1
our type does -> not : 1
type does not -> support : 1
not support it -> must : 1
support it must -> at : 1
must at operator -> for : 1
at operator for -> the : 1
operator for the -> binary : 1
operator for the -> trie : 1
for the binary -> we : 1
binary we can -> rewrite : 1
we can rewrite -> the : 1
can rewrite the -> comparison : 1
rewrite the comparison -> to : 1
the comparison to -> if : 1
comparison to if -> it : 1
to if it -> is : 1
to if it -> find : 1
it is neither -> nor : 1
neither nor then -> it : 1
nor then it -> must : 1
then it must -> be : 1
must be potential -> reason : 1
be potential reason -> why : 1
potential reason why -> the : 1
reason why the -> stl : 1
reason why the -> line : 1
why the stl -> does : 1
not provide such -> a : 1
such a function -> out : 1
a function out -> of : 1
function out of -> the : 1
of the box -> is : 1
the box is -> the : 1
box is the -> missing : 1
is the missing -> knowledge : 1
the missing knowledge -> about : 1
missing knowledge about -> the : 1
knowledge about the -> possibility : 1
about the possibility -> that : 1
possibility that there -> the : 1
that there the -> diagram : 1
there the diagram -> where : 1
the diagram where -> we : 1
diagram where we -> have : 1
where we have -> multiple : 1
we have multiple -> values : 1
have multiple values -> of : 1
values of that -> data : 1
of that data -> structures : 1
that data structures -> such : 1
structures such and -> so : 1
and so on -> have : 1
and so on -> for : 1
so on have -> their : 1
on have their -> these : 1
have their these -> of : 1
their these of -> faster : 1
these of faster -> than : 1
of faster than -> the : 1
faster than the -> more : 1
faster than the -> default : 1
than the more -> general : 1
the more general -> algorithms : 1
more general algorithms -> because : 1
general algorithms because -> they : 1
algorithms because they -> are : 1
they are tightly -> coupled : 1
are tightly coupled -> with : 1
tightly coupled with -> the : 1
coupled with the -> data : 1
with the data -> implementation : 1
the data implementation -> and : 1
data implementation and -> data : 1
implementation and data -> a : 1
and data a -> vector : 1
data a vector -> to : 1
range with a -> lot : 1
of we get -> numeric : 1
we get numeric -> data : 1
get numeric data -> from : 1
numeric data from -> before : 1
data from before -> we : 1
from before we -> can : 1
we can plot -> or : 1
can plot or -> otherwise : 1
plot or otherwise -> process : 1
or otherwise process -> it : 1
otherwise process it -> may : 1
process it may -> need : 1
it may need -> to : 1
may need to -> be : 1
to be normalized -> because : 1
be normalized because -> the : 1
normalized because the -> values : 1
because the values -> far : 1
the values far -> from : 1
values far from -> each : 1
far from each -> this : 1
from each this -> would : 1
each this would -> mean : 1
this would mean -> a : 1
this would mean -> that : 3
would mean a -> little : 1
mean a little -> call : 1
a little call -> over : 1
little call over -> the : 1
call over the -> data : 1
over the data -> structure : 2
data structure all -> these : 1
structure all these -> combined : 1
all these combined -> simple : 1
these combined simple -> but : 1
combined simple but -> if : 1
simple but if -> we : 1
if we not -> how : 1
we not how -> large : 1
not how large -> or : 1
how large or -> small : 1
large or small -> the : 1
or small the -> values : 1
small the values -> we : 1
values we need -> to : 1
need to go -> through : 1
to go through -> the : 1
through the data -> first : 1
the data first -> in : 1
the data first -> because : 1
data first in -> order : 1
first in order -> to : 1
find the right -> for : 1
the right for -> the : 1
right for the -> scaling : 1
for the scaling -> stl : 1
the scaling stl -> contains : 1
scaling stl contains -> useful : 1
stl contains useful -> functions : 1
contains useful functions -> for : 1
useful functions for -> this : 1
functions for this -> and : 1
functions for this -> way : 1
for this and -> using : 1
this and using -> these : 1
and using these -> and : 1
using these and -> combining : 1
these and combining -> them : 1
and combining them -> with : 1
combining them with -> some : 1
them with some -> lambda : 1
with some lambda -> expression : 1
some lambda expression -> we : 1
lambda expression we -> can : 1
expression we can -> perform : 1
can perform such -> a : 1
perform such a -> task : 1
such a task -> to : 1
a task to -> do : 1
task to do -> this : 1
we will normalize -> the : 1
will normalize the -> values : 1
normalize the values -> of : 1
a vector from -> an : 1
vector from an -> example : 1
from an example -> numeric : 1
an example numeric -> range : 1
example numeric range -> to : 1
numeric range to -> a : 1
to a normalized -> one : 1
a normalized one -> in : 1
normalized one in -> two : 1
one in two -> different : 1
in two different -> one : 2
in two different -> scenarios : 1
in two different -> at : 1
two different one -> of : 2
different one of -> them : 1
different one of -> the : 1
them using one -> using : 1
using one using -> we : 1
one using we -> first : 1
using we first -> need : 1
include the following -> declare : 1
the following declare -> that : 1
following declare that -> we : 1
using namespace implement -> a : 7
using namespace implement -> three : 1
namespace implement a -> function : 2
namespace implement a -> new : 1
namespace implement a -> transformation : 1
namespace implement a -> which : 1
namespace implement a -> helper : 1
namespace implement a -> short : 1
function for later -> the : 1
for later the -> minimum : 1
later the minimum -> and : 1
the minimum and -> maximum : 4
minimum and maximum -> values : 4
and maximum values -> of : 3
and maximum values -> after : 1
maximum values of -> a : 1
maximum values of -> the : 2
and a new -> maximum : 1
a new maximum -> so : 1
new maximum so -> that : 1
maximum so that -> it : 1
it can project -> values : 1
can project values -> from : 1
project values from -> the : 1
the old range -> to : 1
old range to -> a : 1
old range to -> the : 1
to a that -> we : 1
a that we -> want : 1
want to the -> function : 1
want to the -> item : 1
want to the -> output : 2
to the function -> object : 1
to the function -> we : 1
to the function -> using : 1
to the function -> allows : 1
function object takes -> such : 1
object takes such -> returns : 1
takes such returns -> another : 1
such returns another -> function : 1
function which does -> exactly : 1
which does exactly -> that : 1
does exactly that -> for : 1
exactly that for -> the : 1
exactly that for -> so : 1
sake of the -> new : 1
sake of the -> declare : 1
sake of the -> example : 1
sake of the -> code : 1
of the new -> minimum : 1
of the new -> output : 1
the new minimum -> is : 1
new minimum is -> so : 1
minimum is so -> no : 1
is so no -> matter : 1
so no matter -> what : 1
matter what offset -> the : 1
what offset the -> old : 1
offset the old -> data : 1
the old data -> its : 1
old data its -> normalized : 1
data its normalized -> values : 1
its normalized values -> will : 1
normalized values will -> always : 1
values will always -> be : 1
will always be -> relative : 1
always be relative -> to : 1
be relative to -> for : 1
relative to for -> the : 1
to for the -> sake : 1
sake of we -> ignore : 1
sake of we -> need : 1
sake of we -> just : 1
of we ignore -> the : 1
ignore the possibility -> that : 1
possibility that and -> could : 1
that and could -> be : 1
and could be -> of : 1
could be of -> the : 1
same which would -> lead : 1
which would lead -> to : 1
to a division -> by : 1
a division by -> static : 1
division by static -> auto : 1
by static auto -> norm : 1
static auto norm -> int : 1
auto norm int -> int : 1
norm int int -> const : 1
int const double -> diff : 1
int const double -> const : 2
int const double -> return : 2
const double diff -> return : 1
double diff return -> return : 1
diff return return -> diff : 1
return return diff -> function : 1
return diff function -> object : 1
diff function object -> builder : 1
function object builder -> called : 1
object builder called -> returns : 1
builder called returns -> a : 1
called returns a -> function : 1
function object and -> values : 1
function object and -> a : 3
object and values -> and : 1
and values and -> calls : 1
values and calls -> on : 1
and calls on -> values : 1
and calls on -> all : 1
calls on values -> with : 1
on values with -> those : 1
values with those -> in : 1
with those in -> order : 1
those in order -> to : 1
order to limit -> their : 1
to limit their -> values : 1
limit their values -> to : 1
their values to -> this : 1
values to this -> static : 1
to this static -> auto : 1
this static auto -> clampval : 1
static auto clampval -> int : 1
auto clampval int -> return : 1
clampval int return -> int : 1
int return int -> return : 1
return int return -> data : 1
return int return -> being : 1
return int return -> the : 1
int return data -> we : 1
return data we -> are : 1
data we are -> going : 1
going to normalize -> is : 1
to normalize is -> a : 1
normalize is a -> vector : 1
vector of varying -> this : 1
of varying this -> could : 1
varying this could -> for : 1
this could for -> some : 1
could for some -> kind : 1
kind of heat -> landscape : 1
of heat landscape -> or : 1
heat landscape or -> stock : 1
landscape or stock -> prices : 1
or stock prices -> over : 1
stock prices over -> int : 1
prices over int -> v : 1
over int v -> order : 1
int v order -> to : 1
v order to -> be : 1
able to normalize -> the : 1
to normalize the -> we : 1
normalize the we -> need : 1
need the and -> is : 1
the and is -> of : 1
and is of -> a : 1
is of a -> great : 1
great help it -> returns : 1
help it returns -> us : 1
pair of iterators -> to : 1
pair of iterators -> and : 2
pair of iterators -> of : 3
pair of iterators -> every : 1
pair of iterators -> through : 1
pair of iterators -> that : 1
iterators to exactly -> those : 1
to exactly those -> two : 1
exactly those two -> const : 1
those two const -> auto : 1
two const auto -> will : 1
const auto will -> copy : 1
auto will copy -> all : 1
will copy all -> the : 1
the first vector -> to : 2
first vector to -> a : 1
first vector to -> the : 1
to a second -> instantiate : 1
a second instantiate -> the : 1
second instantiate the -> second : 1
instantiate the second -> vector : 1
the second vector -> and : 1
second vector and -> prepare : 1
vector and prepare -> it : 1
and prepare it -> to : 1
prepare it to -> accept : 1
it to accept -> as : 1
to accept as -> many : 1
accept as many -> new : 1
as many new -> items : 1
many new items -> as : 1
new items as -> we : 1
we have in -> the : 2
first we copy -> the : 1
we copy the -> values : 1
we copy the -> string : 1
copy the values -> from : 1
to the while -> copying : 1
the while copying -> the : 1
while copying the -> they : 1
copying the they -> will : 1
the they will -> be : 1
will be transformed -> with : 1
be transformed with -> our : 1
transformed with our -> normalization : 1
with our normalization -> the : 1
our normalization the -> minimum : 1
normalization the minimum -> and : 1
of the old -> vector : 1
the old vector -> are : 1
old vector are -> and : 1
vector are and -> the : 1
and the minimum -> and : 1
maximum values after -> normalization : 1
values after normalization -> are : 1
after normalization are -> and : 1
normalization are and -> we : 1
are and we -> implement : 1
are and we -> want : 1
and we implement -> the : 1
implement the other -> normalization : 1
the other normalization -> we : 1
other normalization we -> print : 1
normalization we print -> what : 1
we print what -> we : 3
what we have -> by : 1
what we have -> in : 1
we have by -> cout : 1
have by cout -> reuse : 1
by cout reuse -> the : 1
cout reuse the -> same : 1
reuse the same -> normalized : 1
the same normalized -> vector : 1
same normalized vector -> with : 1
normalized vector with -> the : 1
vector with the -> other : 1
vector with the -> size : 1
vector with the -> generated : 1
the other old -> range : 1
other old range -> to : 1
to the range -> with : 1
the range with -> the : 1
range with the -> minimum : 1
with the minimum -> of : 1
the minimum of -> of : 1
minimum of of -> printing : 1
of of printing -> these : 1
of printing these -> values : 1
printing these values -> cout : 1
these values cout -> compile : 1
values cout compile -> and : 1
run the having -> the : 1
the having the -> values : 1
having the values -> reduced : 1
the values reduced -> to : 1
values reduced to -> values : 1
reduced to values -> from : 1
to values from -> to : 1
values from to -> we : 1
to we them -> as : 1
we them as -> brightness : 1
them as brightness -> values : 1
as brightness values -> for : 1
brightness values for -> rgb : 1
values for rgb -> color : 1
for rgb color -> for : 1
rgb color for -> we : 1
color for we -> plot : 1
for we plot -> the : 1
we plot the -> we : 2
plot the we -> get : 2
following as we -> can : 1
following as we -> the : 1
can the approach -> where : 1
the approach where -> we : 1
approach where we -> the : 1
where we the -> values : 1
we the values -> by : 1
the values by -> the : 1
values by the -> difference : 1
by the difference -> between : 1
the difference between -> the : 1
the difference between -> signals : 1
the difference between -> every : 1
the difference between -> that : 1
the difference between -> both : 2
the difference between -> two : 1
the difference between -> parallel : 1
difference between the -> min : 1
between the min -> and : 1
the min and -> max : 1
min and max -> values : 1
and max values -> is : 1
max values is -> a : 1
values is a -> linear : 1
is a linear -> transformation : 1
a linear transformation -> of : 1
linear transformation of -> the : 1
transformation of the -> original : 1
transformation of the -> stl : 1
transformation of the -> input : 1
of the original -> the : 1
of the original -> when : 1
the original the -> graph : 1
the original the -> ideal : 1
original the graph -> loses : 1
the graph loses -> some : 1
graph loses some -> both : 1
loses some both -> variations : 1
some both variations -> can : 1
both variations can -> be : 1
variations can be -> useful : 1
can be useful -> in : 1
be useful in -> different : 1
be useful in -> the : 1
be useful in -> some : 1
useful in different -> it : 1
in different it -> from : 1
different it from -> used : 1
it from used -> two : 1
from used two -> simply : 1
used two simply -> accepts : 1
two simply accepts -> the : 1
simply accepts the -> begin : 1
accepts the begin -> and : 1
end iterators of -> an : 1
end iterators of -> the : 1
iterators of an -> input : 2
of an input -> it : 1
of an input -> range : 1
an input it -> loops : 1
input it loops -> through : 1
it loops through -> the : 1
loops through the -> range : 1
through the range -> and : 1
range and records -> the : 1
and records the -> largest : 1
records the largest -> and : 1
the largest and -> the : 1
largest and the -> smallest : 1
and the smallest -> element : 1
the smallest element -> on : 1
smallest element on -> the : 1
element on the -> way : 1
the way to -> its : 1
the way to -> tell : 1
the way to -> signal : 1
way to its -> these : 1
to its these -> values : 1
its these values -> are : 1
these values are -> returned : 1
these values are -> interpreted : 1
these values are -> this : 1
values are returned -> in : 1
are returned in -> a : 1
returned in a -> which : 1
which we then -> used : 1
which we then -> print : 1
which we then -> return : 1
which we then -> returns : 1
we then used -> for : 1
then used for -> our : 1
used for our -> scaling : 1
for our scaling -> in : 1
our scaling in -> does : 1
scaling in does -> not : 1
in does not -> an : 1
does not an -> iterable : 1
not an iterable -> it : 1
an iterable it -> accepts : 1
iterable it accepts -> three : 1
it accepts three -> an : 1
accepts three an -> input : 1
three an input -> a : 1
an input a -> min : 1
input a min -> and : 1
a min and -> a : 1
min and a -> max : 1
and a max -> the : 1
a max the -> output : 1
max the output -> of : 1
output of this -> function : 1
output of this -> program : 1
is the input -> value : 1
the input value -> in : 1
input value in -> a : 1
that it lies -> between : 1
it lies between -> the : 1
lies between the -> allowed : 1
between the allowed -> minimum : 1
the allowed minimum -> and : 1
allowed minimum and -> we : 1
minimum and we -> could : 1
could also write -> instead : 1
also write instead -> of : 1
write instead of -> patterns : 1
instead of patterns -> in : 1
of patterns in -> strings : 1
the optimal for -> a : 1
optimal for a -> string : 1
for a string -> in : 1
a string in -> a : 2
a string in -> one : 1
a string in -> another : 1
string in a -> string : 2
in a string -> is : 1
in a string -> means : 1
in a string -> with : 1
in a string -> and : 1
a string is -> a : 1
a string is -> shrunk : 1
a string is -> basically : 1
string is a -> slightly : 1
is a slightly -> different : 1
a slightly different -> problem : 1
a slightly different -> additional : 1
slightly different problem -> than : 1
different problem than -> finding : 1
problem than finding -> object : 1
than finding object -> in : 1
finding object in -> a : 1
object in a -> on : 1
object in a -> way : 1
in a on -> the : 1
one a string -> of : 1
a string of -> an : 1
string of an -> iterable : 1
of an iterable -> range : 1
an iterable range -> on : 1
iterable range on -> the : 1
range on the -> other : 1
the other finding -> a : 1
other finding a -> string : 1
finding a string -> in : 1
a string means -> finding : 1
string means finding -> a : 1
means finding a -> range : 1
finding a range -> in : 1
a range in -> and : 1
range in and -> this : 1
in and this -> comes : 1
and this comes -> along : 1
this comes along -> with : 1
comes along with -> multiple : 1
along with multiple -> comparisons : 1
with multiple comparisons -> per : 1
multiple comparisons per -> potential : 1
comparisons per potential -> match : 1
per potential match -> so : 1
potential match so -> we : 1
match so we -> need : 1
need some other -> algorithm : 1
some other algorithm -> for : 1
some other algorithm -> stl : 1
other algorithm for -> already : 1
algorithm for already -> contains : 1
for already contains -> a : 1
contains a which -> can : 1
contains a which -> maps : 1
which can do -> exactly : 1
can do exactly -> what : 1
can do exactly -> that : 1
can do exactly -> are : 1
can do exactly -> this : 1
do exactly what -> we : 1
exactly what we -> are : 1
exactly what we -> implemented : 1
exactly what we -> did : 1
what we are -> talking : 1
what we are -> going : 1
we are talking -> concentrate : 1
are talking concentrate -> on : 1
talking concentrate on -> in : 1
concentrate on in -> this : 1
on in this -> although : 1
in this although -> might : 1
this although might -> be : 1
although might be -> used : 1
might be used -> on : 1
used on strings -> it : 1
strings it works -> on : 1
it works on -> all : 1
works on all -> kinds : 1
on all kinds -> of : 1
kinds of the -> more : 1
of the more -> interesting : 1
the more interesting -> feature : 1
more interesting feature -> of : 1
interesting feature of -> is : 1
feature of is -> that : 1
of is that -> since : 1
of is that -> its : 1
is that since -> it : 1
that since it -> has : 1
since it has -> a : 1
has a slightly -> different : 1
slightly different additional -> interface : 1
different additional interface -> and : 1
additional interface and -> allows : 1
interface and allows -> for : 1
and allows for -> simply : 1
allows for simply -> exchanging : 1
for simply exchanging -> the : 1
simply exchanging the -> search : 1
exchanging the search -> algorithm : 1
search algorithm these -> algorithms : 1
algorithm these algorithms -> are : 1
these algorithms are -> optimized : 1
algorithms are optimized -> and : 1
are optimized and -> can : 1
optimized and can -> be : 1
can be freely -> chosen : 1
be freely chosen -> by : 1
freely chosen by -> the : 1
chosen by the -> depending : 1
chosen by the -> to : 1
by the depending -> on : 1
the depending on -> what : 1
on what is -> better : 1
what is better -> in : 1
is better in -> which : 1
better in which -> use : 1
in which use -> we : 1
which use we -> could : 1
use we could -> implement : 1
could implement our -> own : 1
our own search -> algorithms : 1
own search algorithms -> and : 1
search algorithms and -> plug : 1
algorithms and plug -> them : 1
and plug them -> into : 1
plug them into -> we : 1
them into we -> ever : 1
into we ever -> come : 1
we ever come -> up : 1
ever come up -> with : 1
come up with -> anything : 1
come up with -> a : 1
up with anything -> better : 1
with anything better -> than : 1
anything better than -> what : 1
better than what -> is : 1
than what is -> already : 1
what is already -> to : 1
is already to -> do : 1
already to do -> will : 1
do will use -> the : 1
will use the -> new : 1
will use the -> function : 1
use the new -> function : 1
use the new -> we : 1
use the new -> stl : 1
the new function -> with : 1
the new function -> by : 1
new function with -> strings : 1
function with strings -> and : 1
with strings and -> try : 1
with strings and -> string : 1
strings and try -> its : 1
and try its -> different : 1
try its different -> variations : 1
its different variations -> with : 1
different variations with -> searcher : 1
variations with searcher -> we : 1
with searcher we -> will : 1
searcher we will -> include : 1
we will include -> all : 1
will include all -> the : 2
will print substrings -> from : 1
print substrings from -> the : 1
substrings from the -> positions : 1
from the positions -> the : 1
the positions the -> search : 1
positions the search -> algorithm : 1
search algorithm returns -> to : 1
algorithm returns to -> so : 1
returns to so -> implement : 1
to so implement -> a : 1
little helper for -> template : 1
helper for template -> static : 1
for template static -> void : 1
template static void -> cout : 1
void cout string -> will : 1
cout string will -> work : 1
string will work -> as : 1
will work as -> our : 1
work as our -> example : 1
as our example -> within : 1
as our example -> program : 1
our example within -> which : 1
example within which -> we : 1
within which we -> will : 1
within which we -> are : 1
within which we -> search : 1
we will search -> a : 1
will search a -> in : 1
search a in -> this : 1
a in this -> this : 1
this this is -> int : 1
this this is -> the : 1
this is int -> const : 1
is int const -> string : 1
int const string -> ipsum : 1
int const string -> s : 1
const string ipsum -> dolor : 1
string ipsum dolor -> sit : 1
ipsum dolor sit -> sadipscing : 1
dolor sit sadipscing -> sed : 1
sit sadipscing sed -> diam : 1
sadipscing sed diam -> nonumy : 1
sed diam nonumy -> const : 1
diam nonumy const -> string : 1
nonumy const string -> needle : 1
const string needle -> old : 1
string needle old -> accepts : 1
needle old accepts -> the : 1
old accepts the -> iterators : 1
accepts the iterators -> of : 1
the iterators of -> the : 2
iterators of the -> string : 1
iterators of the -> it : 1
iterators of the -> substring : 1
iterators of the -> vector : 1
the string within -> which : 1
string within which -> we : 2
which we are -> searching : 1
are searching a -> specific : 1
searching a specific -> substring : 1
a specific substring -> and : 1
specific substring and -> the : 1
substring and the -> iterators : 1
and the iterators -> of : 1
the it then -> returns : 1
it then returns -> an : 1
it then returns -> another : 1
then returns an -> iterator : 1
to the substring -> it : 1
the substring it -> was : 1
substring it was -> able : 1
it was able -> to : 1
was able to -> if : 1
able to if -> it : 1
if it find -> the : 1
if it find -> because : 1
it find the -> the : 1
find the the -> returned : 1
the the returned -> iterator : 1
the returned iterator -> will : 1
returned iterator will -> be : 1
be the end -> auto : 1
the end auto -> match : 1
end auto match -> version : 1
auto match version -> of : 1
match version of -> does : 1
version of does -> not : 2
of does not -> pairs : 1
of does not -> provide : 1
of does not -> accept : 1
does not pairs -> of : 1
not pairs of -> iterators : 1
pairs of iterators -> but : 1
of iterators but -> one : 1
iterators but one -> pair : 1
but one pair -> of : 1
one pair of -> iterators : 1
of iterators and -> a : 1
of iterators and -> then : 1
iterators and a -> the : 1
a the takes -> the : 1
the takes the -> pair : 1
takes the pair -> of : 1
the pair of -> iterators : 1
of iterators of -> the : 1
of iterators of -> and : 1
of iterators of -> an : 1
of the substring -> are : 1
of the substring -> range : 1
the substring are -> searching : 1
substring are searching -> for : 1
are searching for -> in : 2
searching for in -> the : 2
for in the -> larger : 1
for in the -> input : 1
in the larger -> auto : 1
the larger auto -> match : 1
larger auto match -> point : 1
auto match point -> of : 1
match point of -> this : 1
of this change -> is : 1
this change is -> that : 1
change is that -> it : 1
it is easy -> to : 6
easy to switch -> the : 1
switch the search -> algorithm : 1
search algorithm this -> search : 1
algorithm this search -> for : 1
this search for -> a : 1
for a faster -> auto : 1
a faster auto -> match : 1
faster auto match -> stl : 1
auto match stl -> comes : 1
match stl comes -> with : 1
stl comes with -> three : 1
stl comes with -> the : 1
comes with three -> different : 1
with three different -> searcher : 1
three different searcher -> object : 1
different searcher object -> the : 1
searcher object the -> third : 1
object the third -> one : 1
the third one -> is : 1
third one is -> the : 1
is the search -> auto : 1
the search auto -> match : 1
search auto match -> compile : 1
auto match compile -> and : 1
match compile and -> run : 1
run our we -> should : 1
our we should -> see : 1
we should see -> the : 1
should see the -> same : 1
see the same -> string : 1
the same string -> everywhere : 1
the same string -> as : 1
the same string -> three : 1
same string everywhere -> if : 1
string everywhere if -> it : 1
everywhere if it -> runs : 1
if it runs -> elitr : 1
it runs elitr -> elitr : 1
runs elitr elitr -> elitr : 1
elitr elitr elitr -> it : 1
elitr elitr it -> utilized : 1
elitr it utilized -> four : 1
it utilized four -> different : 1
utilized four different -> ways : 1
four different ways -> to : 1
ways to use -> in : 1
to get exactly -> the : 1
same which one -> should : 1
which one should -> we : 1
one should we -> prefer : 1
should we prefer -> in : 1
we prefer in -> what : 1
prefer in what -> assume : 1
in what assume -> our : 1
what assume our -> large : 1
assume our large -> string : 1
our large string -> within : 1
large string within -> which : 1
which we search -> the : 1
we search the -> pattern : 1
search the pattern -> is : 1
the pattern is -> called : 2
the pattern is -> not : 1
pattern is called -> and : 2
is called and -> the : 1
is called and -> exactly : 1
called and the -> pattern : 1
and the pattern -> is : 1
called and exactly -> the : 1
and exactly the -> same : 1
the same other -> searcher : 1
same other searcher -> function : 1
other searcher function -> objects : 1
searcher function objects -> are : 1
objects are implemented -> with : 1
are implemented with -> more : 1
implemented with more -> sophisticated : 1
with more sophisticated -> search : 1
more sophisticated search -> this : 1
sophisticated search this -> redirects : 1
search this redirects -> to : 1
this redirects to -> legacy : 1
redirects to legacy -> this : 1
to legacy this -> uses : 1
legacy this uses -> search : 1
this uses search -> this : 1
uses search this -> analogously : 1
search this analogously -> uses : 1
this analogously uses -> makes : 1
analogously uses makes -> the : 1
uses makes the -> other : 1
makes the other -> algorithms : 1
the other algorithms -> so : 1
other algorithms so -> the : 1
algorithms so the -> algorithm : 1
so the algorithm -> was : 1
the algorithm was -> developed : 1
algorithm was developed -> with : 1
was developed with -> a : 1
developed with a -> specific : 1
with a specific -> search : 1
with a specific -> its : 1
a specific search -> pattern : 1
specific search pattern -> is : 1
search pattern is -> compared : 1
pattern is compared -> with : 1
is compared with -> the : 1
compared with the -> beginning : 1
the beginning at -> the : 1
beginning at the -> from : 1
at the from -> right : 1
the from right -> to : 1
right to if -> the : 1
the character in -> the : 2
the character in -> order : 1
character in the -> search : 1
character in the -> pattern : 1
character in the -> which : 2
character in the -> diagram : 1
in the search -> string : 1
in the search -> pattern : 1
in the search -> engine : 1
the search string -> from : 1
the search string -> by : 1
the search string -> is : 1
search string from -> the : 1
string from the -> character : 1
string from the -> output : 1
string from the -> at : 1
string from the -> whole : 1
from the character -> in : 1
from the character -> at : 1
in the pattern -> at : 1
in the pattern -> string : 1
the pattern at -> the : 1
pattern at the -> overlay : 1
at the overlay -> position : 1
the overlay position -> and : 1
overlay position and -> does : 1
position and does -> even : 1
and does even -> in : 1
does even in -> the : 1
even in the -> then : 1
in the then -> it : 2
the then it -> is : 1
the then it -> would : 1
it is clear -> that : 3
is clear that -> the : 1
is clear that -> all : 1
is clear that -> everything : 1
clear that the -> pattern : 1
that the pattern -> can : 1
the pattern can -> be : 1
pattern can be -> shifted : 1
can be shifted -> over : 1
be shifted over -> the : 1
shifted over the -> search : 1
over the search -> string : 1
search string by -> its : 1
string by its -> have : 1
by its have -> a : 1
its have a -> look : 1
at the where -> this : 1
the where this -> happens : 1
where this happens -> in : 1
this happens in -> step : 2
this happens in -> the : 2
happens in step -> if : 1
happens in step -> this : 1
in step if -> the : 1
step if the -> character : 1
the character compared -> differs : 1
character compared differs -> from : 1
compared differs from -> the : 1
differs from the -> character : 1
differs from the -> other : 1
the character at -> this : 1
the character at -> we : 1
character at this -> position : 1
at this position -> but : 1
this position but -> is : 1
position but is -> by : 1
but is by -> the : 1
is by the -> then : 1
by the then -> the : 1
then the algorithm -> knows : 1
then the algorithm -> can : 1
the algorithm knows -> by : 1
algorithm knows by -> how : 1
knows by how -> many : 1
by how many -> characters : 1
by how many -> partitions : 1
how many characters -> the : 1
many characters the -> pattern : 1
characters the pattern -> needs : 1
the pattern needs -> to : 1
pattern needs to -> be : 1
to be shifted -> to : 1
be shifted to -> the : 1
shifted to the -> right : 1
the right in -> order : 1
right in order -> to : 1
order to correctly -> align : 1
to correctly align -> to : 1
correctly align to -> at : 1
align to at -> least : 1
to at least -> that : 1
at least that -> and : 1
least that and -> it : 1
that and it -> starts : 1
and it starts -> over : 1
it starts over -> with : 1
starts over with -> the : 1
over with the -> in : 1
over with the -> mandelbrot : 1
with the in -> the : 1
the this happens -> in : 1
in step this -> the : 1
in step this -> results : 1
step this the -> algorithm : 1
this the algorithm -> can : 1
algorithm can omit -> a : 1
can omit a -> whole : 1
omit a whole -> lot : 1
a whole lot -> of : 1
whole lot of -> compared : 1
lot of compared -> naive : 1
of compared naive -> search : 1
compared naive search -> this : 1
naive search this -> would : 1
search this would -> have : 1
would have become -> the : 1
have become the -> new : 1
become the new -> algorithm : 1
the new algorithm -> if : 1
new algorithm if -> it : 1
algorithm if it -> brought : 1
if it brought -> its : 1
it brought its -> own : 1
brought its own -> it : 1
its own it -> is : 1
own it is -> faster : 1
it is faster -> than : 1
than the default -> but : 1
default but it -> needs : 1
but it needs -> fast : 1
it needs fast -> lookup : 1
needs fast lookup -> data : 1
fast lookup data -> structures : 1
lookup data structures -> in : 1
structures in order -> to : 1
to determine which -> characters : 1
determine which characters -> are : 1
which characters are -> contained : 1
characters are contained -> in : 1
are contained in -> the : 1
the search pattern -> and : 1
search pattern and -> at : 1
pattern and at -> which : 1
and at which -> offset : 1
at which offset -> they : 1
which offset they -> are : 1
offset they are -> the : 1
will select differently -> complex : 1
select differently complex -> implementations : 1
differently complex implementations -> of : 1
complex implementations of -> depending : 1
implementations of depending -> on : 1
of depending on -> the : 1
on the underlying -> types : 1
the underlying types -> of : 1
underlying types of -> which : 1
types of which -> the : 1
of which the -> pattern : 1
which the pattern -> consists : 1
the pattern consists -> between : 1
pattern consists between -> hash : 1
consists between hash -> maps : 1
between hash maps -> for : 1
hash maps for -> complex : 1
maps for complex -> types : 1
for complex types -> and : 1
complex types and -> primitive : 1
types and primitive -> lookup : 1
and primitive lookup -> tables : 1
primitive lookup tables -> for : 1
lookup tables for -> types : 1
tables for types -> such : 1
for types such -> in : 1
types such in -> the : 1
such in the -> this : 1
that the default -> search : 1
the default search -> implementation : 1
default search implementation -> will : 1
search implementation will -> be : 1
implementation will be -> faster : 1
will be faster -> if : 1
be faster if -> the : 1
faster if the -> search : 1
if the search -> string : 1
if the search -> itself : 1
search string is -> not : 1
not too if -> the : 1
too if the -> search : 1
the search itself -> takes : 1
search itself takes -> some : 1
itself takes some -> significant : 1
takes some significant -> then : 1
some significant then -> the : 1
significant then the -> algorithm : 1
algorithm can lead -> to : 1
lead to performance -> gains : 1
to performance gains -> in : 1
performance gains in -> the : 1
gains in the -> dimension : 1
in the dimension -> of : 1
the dimension of -> a : 1
dimension of a -> algorithm : 1
of a algorithm -> is : 1
of a algorithm -> more : 1
a algorithm is -> a : 1
algorithm is a -> simplification : 1
algorithm is a -> bit : 1
algorithm is a -> fitting : 1
algorithm is a -> nice : 2
algorithm is a -> pair : 1
is a simplification -> of : 1
a simplification of -> the : 1
simplification of the -> it : 1
the it drops -> the : 1
it drops the -> which : 1
drops the which -> leads : 1
the which leads -> to : 1
leads to shifts -> of : 1
to shifts of -> the : 1
shifts of the -> whole : 1
of the whole -> pattern : 1
of the whole -> program : 1
the whole pattern -> a : 1
whole pattern a -> search : 1
pattern a search -> string : 1
a search string -> character : 1
search string character -> not : 1
string character not -> occur : 1
character not occur -> in : 1
not occur in -> the : 1
occur in the -> pattern : 1
the pattern string -> is : 1
pattern string is -> the : 1
string is the -> of : 1
is the of -> this : 1
of this decision -> is : 1
this decision is -> that : 1
decision is that -> it : 1
than the unmodified -> version : 1
the unmodified version -> of : 1
unmodified version of -> but : 1
version of but -> it : 1
of but it -> also : 1
but it also -> needs : 1
but it also -> descends : 1
also needs for -> its : 1
needs for its -> not : 1
needs for its -> knows : 1
for its not -> try : 1
its not try -> to : 1
not try to -> about : 1
not try to -> use : 1
try to about -> which : 1
to about which -> algorithm : 1
about which algorithm -> be : 1
which algorithm be -> faster : 1
algorithm be faster -> in : 1
be faster in -> a : 1
faster in a -> specific : 1
a specific always -> the : 1
specific always the -> performance : 1
always the performance -> of : 1
the performance of -> your : 1
performance of your -> code : 1
of your code -> with : 1
your code with -> data : 1
code with data -> samples : 1
with data samples -> that : 1
data samples that -> are : 1
samples that are -> typical : 1
that are typical -> for : 1
are typical for -> your : 1
typical for your -> users : 1
for your users -> and : 1
your users and -> decision : 1
users and decision -> on : 1
and decision on -> the : 1
decision on the -> large : 1
on the large -> there : 1
the large there -> large : 1
large there large -> amounts : 1
there large amounts -> of : 1
large amounts of -> numeric : 1
amounts of numeric -> data : 1
of numeric data -> that : 1
numeric data that -> need : 1
data that need -> to : 1
that need to -> be : 1
to be processed -> in : 1
be processed in -> some : 1
processed in some -> it : 1
some it may -> not : 1
it may not -> be : 1
may not be -> possible : 1
possible to process -> it : 1
to process it -> all : 1
process it all -> in : 1
it all in -> feasible : 1
all in feasible -> in : 1
in feasible in -> such : 1
feasible in such -> the : 1
such the data -> could : 1
the data could -> be : 1
data could be -> order : 1
could be order -> to : 1
reduce the total -> amount : 1
the total amount -> of : 1
total amount of -> data : 1
of data for -> further : 1
data for further -> which : 1
for further which -> then : 1
further which then -> the : 1
which then the -> whole : 1
then the whole -> in : 1
the whole in -> other : 1
whole in other -> this : 1
in other this -> might : 1
other this might -> be : 1
might be done -> not : 1
be done not -> to : 1
done not to -> reduce : 1
not to reduce -> the : 1
work for processing -> but : 1
for processing but -> for : 1
processing but for -> or : 1
but for or -> the : 1
for or the -> naive : 1
or the naive -> idea : 1
the naive idea -> of : 1
naive idea of -> be : 1
idea of be -> to : 1
of be to -> only : 1
be to only -> pick : 1
to only pick -> every : 1
only pick every -> data : 1
pick every data -> this : 1
every data this -> might : 1
data this might -> be : 1
might be fine -> in : 1
be fine in -> a : 1
fine in a -> lot : 1
lot of signal -> for : 1
of signal for -> it : 1
signal for it -> lead : 1
for it lead -> to : 1
it lead to -> a : 1
to a mathematical -> phenomenon : 1
a mathematical phenomenon -> if : 1
mathematical phenomenon if -> the : 1
phenomenon if the -> distance : 1
if the distance -> between : 1
the distance between -> every : 1
distance between every -> sample : 1
between every sample -> is : 1
every sample is -> varied : 1
sample is varied -> by : 1
is varied by -> a : 1
varied by a -> small : 1
by a small -> random : 1
a small random -> aliasing : 1
small random aliasing -> can : 1
random aliasing can -> be : 1
aliasing can be -> have : 1
can be have -> a : 1
be have a -> look : 1
which shows an -> to : 1
shows an to -> illustrate : 1
an to illustrate -> the : 1
to illustrate the -> signal : 1
illustrate the signal -> consists : 1
the signal consists -> of : 1
signal consists of -> a : 1
of a sine -> the : 2
a sine the -> triangle : 1
a sine the -> call : 1
sine the triangle -> points : 1
the triangle points -> on : 1
triangle points on -> the : 1
points on the -> graph : 1
on the graph -> are : 1
the graph are -> sampling : 1
graph are sampling -> points : 1
are sampling points -> sampled : 1
sampling points sampled -> at : 1
points sampled at -> exactly : 1
sampled at exactly -> every : 1
at exactly every -> data : 1
exactly every data -> the : 1
every data the -> signal : 1
data the signal -> has : 1
the signal has -> the : 1
the signal has -> a : 1
signal has the -> at : 1
has the at -> these : 1
the at these -> the : 1
at these the -> graph : 1
these the graph -> which : 1
the graph which -> results : 1
graph which results -> from : 1
results from connecting -> the : 1
from connecting the -> dots : 1
connecting the dots -> looks : 1
the dots looks -> like : 1
dots looks like -> a : 1
like a perfectly -> the : 1
a perfectly the -> square : 1
perfectly the square -> show : 1
the square show -> what : 1
square show what -> we : 1
show what we -> get : 1
when we sample -> every : 1
we sample every -> still : 1
sample every still -> looks : 1
every still looks -> very : 1
still looks very -> different : 1
looks very different -> original : 1
very different original -> but : 1
different original but -> at : 1
original but at -> least : 1
but at least -> not : 1
at least not -> completely : 1
least not completely -> as : 1
not completely as -> in : 1
not completely as -> we : 1
completely as in -> the : 1
in the fixed -> step : 1
the fixed step -> size : 1
fixed step size -> sampling : 1
step size sampling -> does : 1
size sampling does -> not : 1
sampling does not -> add : 1
does not add -> random : 1
not add random -> alterations : 1
add random alterations -> to : 1
random alterations to -> sample : 1
alterations to sample -> points : 1
to sample points -> with : 1
sample points with -> fixed : 1
points with fixed -> offset : 1
with fixed offset -> but : 1
fixed offset but -> chooses : 1
offset but chooses -> completely : 1
but chooses completely -> random : 1
chooses completely random -> it : 1
completely random it -> works : 1
random it works -> a : 1
it works a -> bit : 1
works a bit -> differently : 1
bit differently to -> do : 1
differently to do -> will : 1
do will sample -> a : 1
will sample a -> very : 1
sample a very -> large : 1
a very large -> vector : 1
a very large -> we : 1
a very large -> a : 1
very large vector -> of : 1
large vector of -> random : 1
vector of random -> this : 1
of random this -> random : 1
of random this -> is : 1
random this random -> data : 1
this random data -> shows : 1
random data shows -> a : 1
data shows a -> normal : 1
shows a normal -> after : 1
a normal after -> sampling : 1
normal after sampling -> the : 1
after sampling the -> resulting : 1
sampling the resulting -> points : 1
the resulting points -> should : 1
resulting points should -> a : 1
points should a -> normal : 1
should a normal -> which : 1
a normal which -> we : 1
normal which we -> will : 1
we will we -> need : 1
will we need -> to : 1
to include everything -> we : 1
include everything we -> declare : 1
everything we declare -> that : 1
we use in -> order : 3
using namespace is -> easier : 1
namespace is easier -> to : 1
easier to play -> around : 1
to play around -> with : 1
with the we -> configure : 1
with the we -> open : 1
the we configure -> specific : 1
we configure specific -> characteristics : 1
configure specific characteristics -> of : 1
specific characteristics of -> our : 1
characteristics of our -> algorithm : 1
of our algorithm -> in : 1
our algorithm in -> their : 1
algorithm in their -> own : 1
in their own -> constant : 1
in their own -> const : 1
their own constant -> these : 1
own constant these -> are : 1
constant these are -> the : 1
are the size -> of : 1
of the large -> random : 1
the large random -> vector : 1
large random vector -> and : 1
random vector and -> the : 1
and the number -> of : 4
number of samples -> are : 1
number of samples -> be : 1
of samples are -> going : 1
samples are going -> to : 1
going to take -> from : 1
going to take -> the : 1
to take from -> int : 1
to take from -> each : 1
take from int -> const : 1
from int const -> const : 1
int const const -> randomly : 1
const const randomly -> filled : 1
const randomly filled -> vector : 1
randomly filled vector -> numbers : 1
filled vector numbers -> from : 1
vector numbers from -> a : 1
from a random -> number : 1
random number which -> gives : 1
number which gives -> out : 1
which gives out -> numbers : 1
gives out numbers -> from : 1
out numbers from -> a : 1
from a normal -> any : 1
a normal any -> normal : 1
normal any normal -> distribution : 1
any normal distribution -> can : 1
normal distribution can -> be : 1
distribution can be -> characterized : 1
can be characterized -> by : 1
be characterized by -> the : 1
characterized by the -> mean : 1
by the mean -> value : 1
the mean value -> and : 1
mean value and -> the : 1
mean value and -> a : 1
value and the -> standard : 1
and the standard -> deviation : 1
the standard deviation -> from : 1
standard deviation from -> the : 1
deviation from the -> mean : 1
from the mean -> const : 1
the mean const -> int : 1
mean const int -> mean : 1
const int mean -> const : 1
int mean const -> dev : 1
mean const dev -> we : 1
const dev we -> set : 1
dev we set -> up : 1
we set up -> the : 1
set up the -> random : 1
set up the -> dependency : 1
up the random -> we : 1
the random we -> instantiate : 1
the random we -> will : 1
random we instantiate -> a : 2
instantiate a random -> device : 1
instantiate a random -> engine : 1
a random device -> and : 1
random device and -> call : 1
device and call -> it : 1
and call it -> once : 1
and call it -> the : 1
and call it -> it : 1
call it once -> to : 1
it once to -> get : 1
once to get -> a : 1
get a seed -> for : 1
a seed for -> the : 1
seed for the -> constructor : 1
constructor of a -> random : 1
constructor of a -> new : 1
constructor of a -> shared : 1
of a random -> we : 1
of a random -> number : 1
a random we -> instantiate : 1
instantiate a distribution -> object : 2
a distribution object -> normal : 1
a distribution object -> from : 1
distribution object normal -> distribution : 1
object normal distribution -> to : 1
normal distribution to -> the : 1
normal distribution to -> see : 1
distribution to the -> random : 1
to the random -> gen : 1
the random gen -> d : 1
random gen d -> we : 1
gen d we -> instantiate : 1
d we instantiate -> a : 1
it with a -> lot : 2
it with a -> third : 1
it with a -> static : 1
lot of random -> this : 1
lot of random -> data : 1
random this is -> achieved : 1
this is achieved -> using : 1
is achieved using -> the : 1
achieved using the -> which : 1
the which will -> call : 1
the which will -> lead : 1
which will call -> a : 1
will call a -> generator : 1
call a generator -> function : 1
a generator function -> object : 1
generator function object -> to : 1
generator function object -> just : 1
function object to -> feed : 1
object to feed -> its : 1
to feed its -> return : 1
feed its return -> value : 1
its return value -> into : 1
its return value -> in : 1
return value into -> our : 1
value into our -> vector : 1
into our vector -> using : 1
our vector using -> a : 1
using a the -> generator : 1
a the generator -> function : 1
the generator function -> object : 1
function object just -> wraps : 1
object just wraps -> around : 1
just wraps around -> which : 1
wraps around which -> gets : 1
around which gets -> a : 1
which gets a -> random : 1
gets a random -> number : 2
random number from -> the : 3
random number from -> maybe : 1
number from the -> random : 2
number from the -> generator : 1
from the random -> feeds : 1
from the random -> shapes : 1
from the random -> applies : 1
the random feeds -> it : 1
random feeds it -> into : 1
feeds it into -> the : 1
into the distribution -> return : 1
the distribution return -> we : 1
distribution return we -> instantiate : 1
return we instantiate -> another : 1
we instantiate another -> vector : 1
instantiate another vector -> contain : 1
another vector contain -> the : 1
vector contain the -> much : 1
contain the much -> smaller : 1
the much smaller -> set : 1
much smaller set -> of : 1
smaller set of -> algorithm : 1
set of algorithm -> works : 1
of algorithm works -> similar : 1
algorithm works similar -> but : 1
works similar but -> it : 1
similar but it -> takes : 1
but it takes -> two : 1
takes two additional -> the : 1
two additional the -> of : 1
additional the of -> which : 1
the of which -> it : 1
of which it -> shall : 1
which it shall -> take : 1
it shall take -> from : 1
it shall take -> seconds : 1
shall take from -> the : 1
take from the -> input : 1
the input and -> a : 2
the input and -> and : 1
input and a -> number : 1
input and a -> separating : 1
and a number -> which : 1
a number which -> it : 1
number which it -> will : 1
which it will -> consult : 1
it will consult -> to : 1
will consult to -> sampling : 1
consult to sampling -> already : 1
to sampling already -> done : 1
sampling already done -> with : 1
already done with -> the : 1
the code is -> for : 1
the code is -> nevertheless : 1
the code is -> it : 1
code is for -> displaying : 1
is for displaying -> the : 1
for displaying the -> input : 1
displaying the input -> data : 1
the input data -> has : 1
input data has -> a : 1
data has a -> normal : 1
has a normal -> and : 1
a normal and -> if : 1
normal and if -> the : 1
and if the -> sampling : 1
and if the -> creation : 1
and if the -> computer : 1
if the sampling -> algorithm : 1
the sampling algorithm -> works : 1
sampling algorithm works -> then : 1
algorithm works then -> the : 1
works then the -> sampled : 1
then the sampled -> vector : 1
the sampled vector -> should : 1
the sampled vector -> still : 1
sampled vector should -> show : 1
vector should show -> a : 1
should show a -> normal : 1
show a normal -> distribution : 1
a normal distribution -> to : 1
a normal distribution -> is : 1
distribution to see -> how : 1
see how much -> of : 1
how much of -> a : 1
much of a -> normal : 1
normal distribution is -> we : 1
distribution is we -> a : 1
is we a -> of : 1
we a of -> the : 1
of the for -> i : 1
for i we -> loop : 1
i we loop -> over : 1
we loop over -> all : 1
loop over all -> the : 1
items in order -> to : 2
to print for -> auto : 1
print for auto -> cout : 1
auto cout value -> compiling : 1
cout value compiling -> and : 1
value compiling and -> running : 1
running the we -> see : 1
we see that -> the : 4
we see that -> we : 1
we see that -> and : 1
that the sampled -> vector : 1
sampled vector still -> roughly : 1
vector still roughly -> characteristics : 1
still roughly characteristics -> of : 1
roughly characteristics of -> a : 1
characteristics of a -> normal : 1
normal it is -> a : 1
normal it is -> of : 1
new which came -> with : 1
which came with -> its : 1
which came with -> is : 1
came with its -> signature : 1
with its signature -> looks : 1
its signature looks -> like : 1
signature looks like -> outiterator : 1
looks like outiterator -> initerator : 1
like outiterator initerator -> sampleiterator : 1
outiterator initerator sampleiterator -> distance : 1
initerator sampleiterator distance -> input : 1
sampleiterator distance input -> range : 1
distance input range -> is : 1
input range is -> denoted : 1
range is denoted -> by : 1
is denoted by -> and : 1
denoted by and -> while : 1
by and while -> is : 1
and while is -> the : 1
while is the -> output : 1
the output these -> iterators : 1
output these iterators -> have : 1
these iterators have -> exactly : 1
iterators have exactly -> the : 1
same function as -> in : 2
function as in -> items : 1
function as in -> other : 1
as in items -> are : 1
in items are -> copied : 1
items are copied -> from : 1
are copied from -> one : 1
copied from one -> range : 1
to the is -> special : 1
the is special -> in : 1
is special in -> the : 1
is special in -> that : 1
special in the -> regard : 1
in the regard -> that : 2
the regard that -> it : 1
the regard that -> we : 1
regard that it -> will : 1
it will copy -> only : 1
it will copy -> the : 1
will copy only -> a : 1
copy only a -> part : 1
only a part -> of : 1
a part of -> the : 3
the input it -> samples : 1
input it samples -> only : 1
it samples only -> it : 1
samples only it -> uses : 1
only it uses -> uniform : 1
it uses uniform -> distribution : 1
uses uniform distribution -> so : 1
uniform distribution so -> every : 1
distribution so every -> data : 1
so every data -> point : 1
every data point -> in : 2
every data point -> of : 1
every data point -> represents : 1
data point in -> the : 2
point in the -> source : 1
point in the -> resulting : 1
point in the -> mandelbrot : 1
source range gets -> chosen : 1
range gets chosen -> with : 1
gets chosen with -> the : 1
chosen with the -> same : 1
the same permutations -> of : 1
same permutations of -> input : 1
of input testing -> code : 1
input testing code -> deal : 1
testing code deal -> with : 1
code deal with -> sequences : 1
deal with sequences -> of : 1
with sequences of -> inputs : 1
sequences of inputs -> where : 1
of inputs where -> the : 1
inputs where the -> order : 1
where the order -> of : 1
of the arguments -> is : 1
the arguments is -> not : 1
arguments is not -> it : 1
is not it -> is : 1
is not it -> can : 1
is not it -> will : 1
not it is -> beneficial : 1
it is beneficial -> to : 1
is beneficial to -> test : 1
beneficial to test -> results : 1
to test results -> in : 1
test results in -> the : 1
the same output -> for : 1
the same output -> as : 1
same output for -> possible : 1
output for possible -> permutations : 1
for possible permutations -> of : 1
possible permutations of -> that : 1
permutations of that -> such : 1
of that such -> a : 1
that such a -> test : 1
such a test -> for : 1
a test for -> check : 1
test for check -> algorithm : 1
for check algorithm -> sorts : 1
check algorithm sorts -> matter : 1
algorithm sorts matter -> for : 1
sorts matter for -> what : 1
matter for what -> reason : 1
for what reason -> we : 1
what reason we -> need : 1
reason we need -> all : 1
we need all -> permutations : 1
need all permutations -> of : 1
all permutations of -> some : 1
permutations of some -> value : 1
of some value -> can : 1
some value can -> conveniently : 1
value can conveniently -> do : 1
can conveniently do -> it : 1
conveniently do it -> for : 1
do it for -> we : 1
it for we -> can : 1
for we can -> invoke : 1
for we can -> feed : 1
for we can -> make : 1
for we can -> convert : 1
for we can -> give : 1
we can invoke -> it : 1
can invoke it -> on : 1
invoke it on -> a : 1
it on a -> modifiable : 1
it on a -> whiteboard : 1
it on a -> symbolic : 1
on a modifiable -> and : 1
a modifiable and -> it : 1
modifiable and it -> changes : 1
and it changes -> the : 1
it changes the -> of : 1
changes the of -> its : 1
the of its -> items : 1
of its items -> to : 1
its items to -> the : 1
items to the -> next : 1
items to the -> try : 1
the next to -> do : 1
next to do -> this : 1
we will write -> a : 5
will write a -> program : 3
will write a -> function : 2
will write a -> little : 1
will write a -> short : 1
a program multiple -> word : 1
program multiple word -> a : 1
multiple word a -> standard : 1
word a standard -> and : 1
we will to -> generate : 1
will to generate -> and : 1
to generate and -> print : 1
generate and print -> all : 1
and print all -> the : 1
print all the -> permutations : 1
print all the -> numbers : 1
print all the -> links : 1
all the permutations -> of : 1
the permutations of -> those : 1
permutations of those -> things : 1
of those things -> first : 1
those things first -> we : 1
things first we -> include : 1
first we include -> all : 1
using namespace begin -> with : 1
namespace begin with -> a : 1
vector of which -> we : 1
which we feed -> with : 1
we feed with -> the : 1
feed with the -> whole : 1
with the whole -> standard : 1
the whole standard -> the : 1
the whole standard -> input : 2
whole standard the -> next : 1
standard the next -> step : 1
the next step -> is : 2
the next step -> it : 1
is the int -> v : 1
the int v -> we : 1
v we print -> the : 1
the content on -> the : 1
content on the -> user : 1
user we call -> it : 1
call it systematically -> shuffles : 1
it systematically shuffles -> the : 1
systematically shuffles the -> vector : 1
shuffles the vector -> to : 1
vector to generate -> a : 1
to generate a -> permutation : 1
to generate a -> cosine : 1
to generate a -> third : 1
to generate a -> sine : 1
generate a permutation -> of : 1
a permutation of -> its : 1
permutation of its -> which : 1
of its which -> we : 1
its which we -> then : 1
we then print -> will : 1
then print will -> return : 1
print will return -> as : 1
will return as -> soon : 1
return as soon -> as : 1
as the permutation -> was : 1
the permutation was -> do : 1
permutation was do -> cout : 1
was do cout -> while : 1
do cout while -> compile : 1
cout while compile -> and : 1
while compile and -> run : 1
run the function -> with : 1
the function with -> some : 1
the function with -> the : 1
function with some -> example : 1
some example echo -> b : 1
example echo b -> it : 1
echo b it -> algorithm : 1
b it algorithm -> is : 1
it algorithm is -> a : 1
is a bit -> weird : 2
is a bit -> scary : 1
is a bit -> because : 1
is a bit -> fiddly : 1
is a bit -> more : 1
a bit weird -> to : 1
a bit weird -> at : 1
bit weird to -> this : 1
weird to this -> it : 1
to this it -> accepts : 1
to this it -> is : 1
this it accepts -> only : 1
this it accepts -> a : 1
it accepts only -> a : 1
accepts only a -> pair : 1
only a pair -> of : 1
iterators and then -> returns : 1
and then returns -> if : 1
and then returns -> a : 1
and then returns -> us : 1
and then returns -> or : 1
then returns if -> it : 1
to find it -> returns : 1
find it returns -> does : 1
it returns does -> even : 1
returns does even -> algorithm : 1
does even algorithm -> with : 1
even algorithm with -> which : 1
algorithm with which -> finds : 1
with which finds -> the : 1
which finds the -> next : 1
finds the next -> lexicographical : 1
the next lexicographical -> order : 1
next lexicographical order -> of : 1
lexicographical order of -> the : 1
of the works -> as : 1
the works as -> the : 1
works as the -> largest : 1
works as the -> name : 1
as the largest -> index : 1
the largest index -> such : 2
largest index such -> that : 2
index such that -> if : 1
index such that -> and : 1
such that if -> there : 1
that if there -> is : 2
there is then -> return : 1
is then return -> find : 1
then return find -> the : 1
return find the -> largest : 1
find the largest -> index : 1
such that and -> the : 1
that and the -> items : 1
the items at -> position : 1
items at position -> and : 1
at position and -> position : 1
position and position -> the : 1
and position the -> order : 1
position the order -> of : 1
items from position -> to : 1
from position to -> the : 1
position to the -> end : 1
position to the -> for : 1
of the individually -> we : 1
the individually we -> get : 1
individually we get -> out : 1
we get out -> of : 1
get out of -> this : 1
out of this -> will : 1
out of this -> in : 1
of this will -> always : 1
this will always -> appear : 1
will always appear -> in : 1
always appear in -> the : 1
the same in -> order : 1
the same in -> the : 1
same in order -> to : 1
to see all -> the : 1
to see all -> output : 1
see all the -> possible : 1
the possible we -> sorted : 1
possible we sorted -> the : 1
we sorted the -> array : 1
sorted the array -> because : 1
the array because -> if : 1
array because if -> we : 1
because if we -> entered : 1
because if we -> overload : 1
if we entered -> b : 1
we entered b -> for : 1
entered b for -> the : 1
b for the -> algorithm : 1
for the algorithm -> would : 1
the algorithm would -> terminate : 1
algorithm would terminate -> as : 1
would terminate as -> this : 1
terminate as this -> already : 1
as this already -> the : 1
this already the -> last : 1
already the last -> lexicographic : 1
the last lexicographic -> order : 1
last lexicographic order -> of : 1
lexicographic order of -> the : 1
of the a -> dictionary : 1
of the a -> character : 1
the a dictionary -> merging : 1
dictionary merging that -> a : 1
merging that a -> sorted : 1
that a sorted -> list : 1
a sorted list -> of : 1
sorted list of -> and : 2
list of and -> someone : 1
list of and -> we : 1
list of and -> running : 1
list of and -> if : 1
list of and -> see : 1
of and someone -> else : 1
and someone else -> comes : 1
someone else comes -> up : 1
else comes up -> with : 1
comes up with -> sorted : 1
up with sorted -> list : 1
with sorted list -> of : 1
want to share -> the : 1
to share the -> lists : 1
share the lists -> with : 1
the lists with -> each : 1
lists with each -> the : 1
with each the -> best : 1
each the best -> idea : 1
the best idea -> is : 1
best idea is -> to : 1
is to combine -> both : 1
to combine both -> the : 1
combine both the -> the : 1
both the the -> combination : 1
both the the -> error : 1
the the combination -> of : 1
combination of both -> the : 1
both the lists -> should : 1
the lists should -> be : 1
lists should be -> sorted : 1
should be sorted -> as : 1
be sorted as -> this : 1
sorted as this -> it : 1
as this it -> is : 1
easy to look -> it : 1
to look it -> up : 2
look it up -> for : 1
look it up -> in : 1
it up for -> specific : 1
up for specific -> an : 1
for specific an -> operation : 1
specific an operation -> is : 1
an operation is -> also : 1
operation is also -> called : 1
also called a -> in : 1
called a in -> order : 1
order to merge -> two : 1
to merge two -> sorted : 1
merge two sorted -> ranges : 1
two sorted ranges -> of : 1
sorted ranges of -> we : 1
ranges of we -> would : 1
we would intuitively -> create : 1
would intuitively create -> a : 1
intuitively create a -> new : 1
create a new -> range : 1
create a new -> dictionary : 1
create a new -> which : 1
create a new -> tuple : 1
a new range -> and : 1
new range and -> feed : 1
range and feed -> it : 1
it with items -> from : 1
with items from -> both : 1
items from both -> the : 1
from both the -> for : 1
both the for -> every : 1
the for every -> item : 1
for every item -> we : 1
for every item -> of : 1
every item we -> would : 1
item we would -> have : 1
have to compare -> the : 1
compare the frontmost -> items : 1
the frontmost items -> of : 1
frontmost items of -> our : 1
items of our -> input : 1
of our input -> ranges : 1
our input ranges -> in : 1
input ranges in -> order : 1
ranges in order -> to : 1
order to always -> select : 1
to always select -> the : 1
always select the -> one : 1
select the one -> from : 1
the one from -> what : 1
one from what -> is : 1
from what is -> left : 1
what is left -> from : 1
is left from -> the : 1
left from the -> the : 1
from the the -> output : 2
the the output -> range : 1
the the output -> of : 1
the output range -> would : 1
output range would -> not : 1
range would not -> be : 1
not be sorted -> any : 1
be sorted any -> the : 1
sorted any the -> following : 1
any the following -> diagram : 1
the following diagram -> illustrates : 2
the following diagram -> shows : 1
following diagram illustrates -> it : 1
following diagram illustrates -> the : 1
diagram illustrates it -> algorithm : 1
illustrates it algorithm -> can : 1
it algorithm can -> do : 1
algorithm can do -> exactly : 1
do exactly that -> for : 1
that for so -> we : 1
for so we -> do : 1
for so we -> provide : 1
need to fiddle -> around : 1
to fiddle around -> too : 1
fiddle around too -> in : 1
around too in -> this : 1
too in this -> we : 1
this we how -> to : 1
we how to -> use : 1
use the to -> do : 1
to build up -> a : 1
build up a -> cheap : 1
a cheap dictionary -> of : 1
cheap dictionary of -> mappings : 1
dictionary of mappings -> from : 1
of mappings from -> english : 1
mappings from english -> words : 1
from english words -> to : 1
english words to -> their : 1
words to their -> german : 1
to their german -> and : 1
their german and -> store : 1
german and store -> them : 1
store them in -> the : 1
in the program -> will : 1
in the program -> struct : 1
in the program -> we : 1
the program will -> read : 1
program will read -> such : 1
will read such -> a : 1
read such a -> dictionary : 1
read such a -> city : 1
such a dictionary -> from : 1
a dictionary from -> a : 1
a dictionary from -> it : 1
dictionary from a -> file : 1
from a file -> and : 1
a file and -> one : 1
file and one -> from : 1
and one from -> standard : 1
one from standard -> and : 1
standard and print -> one : 1
and print one -> large : 1
print one large -> merged : 1
one large merged -> dictionary : 1
large merged dictionary -> on : 1
merged dictionary on -> the : 1
dictionary on the -> standard : 1
on the standard -> output : 1
on the standard -> library : 1
standard output are -> a : 1
output are a -> lot : 1
lot of headers -> to : 1
lot of headers -> and : 1
of headers to -> include : 1
headers to include -> this : 1
include this and -> we : 1
this and we -> declare : 2
using namespace dictionary -> entry : 1
namespace dictionary entry -> should : 1
dictionary entry should -> consist : 1
entry should consist -> of : 1
should consist of -> a : 1
consist of a -> symmetric : 1
of a symmetric -> mapping : 1
a symmetric mapping -> from : 1
symmetric mapping from -> a : 1
mapping from a -> string : 1
string in one -> language : 1
in one language -> to : 1
one language to -> a : 1
language to a -> string : 1
to a string -> in : 1
to a string -> via : 1
string in another -> using : 1
in another using -> are : 1
another using are -> going : 1
using are going -> to : 1
going to both -> print : 1
to both print -> such : 1
both print such -> pairs : 1
print such pairs -> to : 1
such pairs to -> the : 1
pairs to the -> terminal : 1
terminal and read -> them : 1
and read them -> from : 1
read them from -> user : 1
them from user -> so : 1
from user so -> we : 1
user so we -> need : 1
need to overload -> and : 1
need to overload -> the : 2
to overload and -> namespace : 1
overload and namespace -> std : 1
and namespace std -> const : 1
return os return -> is : 1
os return is -> helper : 1
return is helper -> function : 1
is helper function -> that : 1
function that accepts -> any : 1
function that accepts -> a : 5
function that accepts -> an : 2
that accepts any -> input : 1
accepts any input -> stream : 1
any input stream -> object : 1
stream object will -> help : 1
object will help -> us : 1
will help us -> in : 1
us in building -> a : 1
in building a -> dictionary : 1
building a dictionary -> from : 1
dictionary from it -> of : 1
from it of -> dictionary : 1
it of dictionary -> entry : 1
of dictionary entry -> and : 1
dictionary entry and -> they : 1
entry and they -> are : 1
are all read -> from : 1
all read from -> the : 1
read from the -> input : 1
input stream until -> it : 1
stream until it -> is : 1
until it is -> before : 1
it is before -> returning : 1
is before returning -> we : 1
before returning we -> sort : 1
returning we sort -> template : 1
we sort template -> d : 1
sort template d -> return : 1
template d return -> create : 1
d return create -> two : 1
return create two -> individual : 1
create two individual -> dictionary : 1
two individual dictionary -> data : 1
individual dictionary data -> structures : 1
dictionary data structures -> from : 1
structures from different -> input : 1
from different input -> one : 1
different input one -> input : 1
input one input -> stream : 1
one input stream -> is : 1
input stream is -> opened : 1
stream is opened -> from : 1
is opened from -> which : 1
opened from which -> we : 1
from which we -> assume : 1
from which we -> want : 1
from which we -> will : 1
from which we -> and : 1
which we assume -> to : 1
we assume to -> it : 1
we assume to -> be : 1
assume to it -> contains : 1
to it contains -> word : 1
it contains word -> line : 1
contains word line -> by : 1
word line by -> the : 1
line by the -> other : 1
by the other -> stream : 1
by the other -> way : 1
the other stream -> is : 1
other stream is -> the : 1
stream is the -> standard : 1
is the standard -> int : 1
standard int const -> auto : 1
int const auto -> const : 1
const auto the -> helper : 1
const auto the -> return : 1
auto the helper -> has : 1
the helper has -> already : 1
helper has already -> sorted : 1
has already sorted -> both : 1
already sorted both -> the : 1
sorted both the -> dictionaries : 1
both the dictionaries -> for : 1
the dictionaries for -> we : 1
dictionaries for we -> can : 1
can feed them -> directly : 1
feed them directly -> into : 1
them directly into -> the : 1
directly into the -> it : 1
the it accepts -> two : 1
the it accepts -> a : 1
it accepts two -> input : 2
it accepts two -> pairs : 1
it accepts two -> the : 1
accepts two input -> ranges : 2
two input ranges -> via : 1
two input ranges -> as : 1
input ranges via -> its : 1
ranges via its -> iterator : 1
via its iterator -> and : 1
its iterator and -> one : 1
and one the -> output : 1
one the output -> will : 1
the output will -> be : 1
the output will -> appear : 1
output will be -> the : 1
output will be -> readable : 1
be the user -> can : 1
the user can -> compile : 1
the user can -> separate : 1
the user can -> always : 1
the user can -> simply : 1
user can compile -> the : 1
can compile the -> program : 1
compile the program -> but : 1
compile the program -> and : 1
program but before -> running : 1
but before running -> we : 1
before running we -> should : 1
running we should -> create : 1
we should create -> file : 1
should create file -> with : 1
create file with -> some : 1
file with some -> example : 1
file with some -> shiba : 1
some example fill -> it : 1
example fill it -> with : 1
with some english -> words : 1
some english words -> and : 1
english words and -> their : 1
words and their -> translations : 1
and their translations -> to : 1
their translations to -> car : 1
translations to car -> auto : 1
to car auto -> cellphone : 1
car auto cellphone -> handy : 2
auto cellphone handy -> house : 1
auto cellphone handy -> dog : 1
cellphone handy house -> we : 1
handy house we -> can : 1
house we can -> launch : 1
we can launch -> the : 1
can launch the -> program : 1
launch the program -> while : 1
launch the program -> and : 1
the program while -> piping : 1
the program while -> entering : 1
program while piping -> some : 1
while piping some -> translations : 1
piping some translations -> into : 1
some translations into -> its : 1
translations into its -> standard : 1
into its standard -> the : 1
its standard the -> output : 1
standard the output -> is : 1
output is a -> merged : 1
output is a -> string : 1
is a merged -> and : 1
a merged and -> still : 1
merged and still -> sorted : 1
and still sorted -> which : 1
still sorted which -> contains : 1
sorted which contains -> the : 1
which contains the -> translations : 1
which contains the -> compressed : 1
which contains the -> link : 1
contains the translations -> of : 1
the translations of -> both : 1
translations of both -> the : 1
we could create -> a : 1
could create a -> new : 1
a new dictionary -> file : 1
new dictionary file -> from : 1
dictionary file from -> echo : 1
file from echo -> tisch : 1
from echo tisch -> fish : 1
echo tisch fish -> fisch : 1
tisch fish fisch -> dog : 1
fish fisch dog -> car : 1
fisch dog car -> auto : 1
dog car auto -> cellphone : 1
cellphone handy dog -> hund : 1
handy dog hund -> fish : 1
dog hund fish -> fisch : 1
hund fish fisch -> house : 1
fish fisch house -> haus : 1
fisch house haus -> table : 1
house haus table -> it : 1
haus table it -> accepts : 1
table it accepts -> two : 1
accepts two pairs -> of : 1
two pairs of -> which : 1
two pairs of -> functions : 1
pairs of which -> denote : 1
of which denote -> the : 1
which denote the -> input : 1
denote the input -> these : 1
the input these -> ranges : 1
input these ranges -> must : 1
these ranges must -> be : 1
ranges must be -> the : 1
must be the -> fifth : 1
must be the -> begin : 1
be the fifth -> parameter : 1
the fifth parameter -> is : 1
fifth parameter is -> an : 1
parameter is an -> output : 1
output iterator the -> incoming : 1
iterator the incoming -> items : 1
the incoming items -> during : 1
incoming items during -> the : 1
items during the -> is : 1
during the is -> also : 1
the is also -> a : 1
is also a -> variant : 1
is also a -> traits : 1
is also a -> third : 1
also a variant -> called : 1
a variant called -> this : 1
variant called this -> algorithm : 1
called this algorithm -> does : 1
called this algorithm -> removes : 1
this algorithm does -> the : 1
algorithm does the -> same : 1
same as the -> but : 1
same as the -> only : 1
same as the -> other : 1
does not need -> an : 1
does not need -> to : 1
does not need -> any : 1
not need an -> output : 1
need an output -> iterator : 1
output iterator because -> it : 1
because it works -> as : 1
it works as -> the : 1
the name already -> it : 1
name already it -> takes : 1
already it takes -> three : 1
it takes three -> a : 1
takes three a -> and : 1
three a and -> an : 1
and an these -> iterators : 1
an these iterators -> must : 1
these iterators must -> all : 1
iterators must all -> reference : 1
must all reference -> data : 1
all reference data -> in : 1
reference data in -> the : 1
data in the -> same : 1
the same data -> the : 1
the same data -> which : 1
same data the -> middle : 1
data the middle -> iterator : 1
the middle iterator -> is : 1
middle iterator is -> at : 1
iterator is at -> the : 1
is at the -> same : 1
same time the -> end : 1
time the end -> iterator : 1
the first and -> the : 1
the first and -> then : 1
and the begin -> iterator : 1
begin iterator of -> the : 2
begin iterator of -> in : 1
the second this -> means : 1
second this means -> that : 1
means that this -> algorithm : 1
means that this -> might : 1
that this algorithm -> handles : 1
that this algorithm -> is : 1
this algorithm handles -> a : 1
algorithm handles a -> single : 1
handles a single -> which : 1
single which actually -> consists : 1
which actually consists -> of : 1
actually consists of -> two : 1
of two consecutive -> such : 1
of two consecutive -> commas : 1
two consecutive such -> the : 1
consecutive such the -> first : 1
such the first -> subrange : 1
the first subrange -> is : 1
first subrange is -> the : 1
subrange is the -> second : 1
the second subrange -> is : 1
second subrange is -> can : 1
subrange is can -> then : 1
is can then -> merge : 1
can then merge -> both : 1
then merge both -> within : 1
merge both within -> the : 1
both within the -> same : 1
within the same -> data : 1
within the same -> thread : 1
same data which -> results : 1
data which results -> in : 1
results in use -> of : 1
in use of -> stl : 2
of stl will -> cover : 1
stl will cover -> the : 1
this a trie -> class : 1
using stl a -> search : 1
stl a search -> generator : 1
a search generator -> with : 1
and decompressing the -> last : 1
decompressing the last -> we : 1
last we visited -> basic : 1
we visited basic -> stl : 1
visited basic stl -> algorithms : 1
basic stl algorithms -> and : 1
algorithms and tasks -> with : 1
and tasks with -> them : 1
tasks with them -> in : 1
with them in -> order : 1
with them in -> this : 1
a feeling typical -> stl : 1
feeling typical stl -> most : 1
typical stl most -> stl : 1
stl most stl -> algorithms : 1
most stl algorithms -> accept : 1
stl algorithms accept -> one : 1
algorithms accept one -> or : 1
accept one or -> more : 1
one or more -> ranges : 1
or more ranges -> in : 1
more ranges in -> the : 1
ranges in the -> form : 1
form of iterator -> pairs : 1
of iterator pairs -> as : 1
iterator pairs as -> they : 1
pairs as they -> often : 1
as they often -> also : 1
they often also -> accept : 1
often also accept -> predicate : 1
also accept predicate -> custom : 1
accept predicate custom -> comparison : 1
predicate custom comparison -> or : 1
custom comparison or -> transformation : 1
comparison or transformation -> in : 1
or transformation in -> the : 1
transformation in the -> they : 1
in the they -> mostly : 1
the they mostly -> return : 1
they mostly return -> iterators : 1
mostly return iterators -> again : 1
return iterators again -> because : 1
iterators again because -> these : 1
again because these -> can : 1
because these can -> often : 1
these can often -> be : 1
often be fed -> into : 1
be fed into -> some : 1
be fed into -> the : 1
fed into some -> other : 1
into some other -> algorithm : 1
other algorithm stl -> algorithms : 1
algorithm stl algorithms -> be : 1
stl algorithms be -> their : 1
algorithms be their -> interfaces : 1
be their interfaces -> also : 1
their interfaces also -> try : 1
interfaces also try -> to : 1
also try to -> general : 1
try to general -> as : 1
to general as -> this : 1
general as this -> enables : 1
as this enables -> maximum : 1
this enables maximum -> code : 1
enables maximum code -> reuse : 1
maximum code reuse -> does : 1
code reuse does -> not : 1
reuse does not -> always : 1
does not always -> look : 1
does not always -> lead : 2
not always look -> too : 1
always look too -> an : 1
look too an -> experienced : 1
too an experienced -> coder : 1
an experienced coder -> who : 1
experienced coder who -> knows : 1
coder who knows -> all : 1
who knows all -> algorithms : 1
knows all algorithms -> has : 1
all algorithms has -> a : 1
algorithms has a -> better : 1
has a better -> time : 1
a better time -> reading : 1
better time reading -> other : 1
time reading other -> code : 1
reading other code -> if : 1
other code if -> it : 1
code if it -> tries : 1
if it tries -> to : 1
it tries to -> express : 1
tries to express -> as : 1
to express as -> many : 1
express as many -> ideas : 1
as many ideas -> using : 1
many ideas using -> stl : 1
ideas using stl -> algorithms : 1
stl algorithms as -> this : 1
algorithms as this -> leads : 1
as this leads -> to : 1
to a maximized -> common : 1
a maximized common -> ground : 1
maximized common ground -> of : 1
common ground of -> comprehension : 1
ground of comprehension -> between : 1
of comprehension between -> coder : 1
comprehension between coder -> and : 1
between coder and -> a : 1
coder and a -> brain : 1
and a brain -> can : 1
a brain can -> simply : 1
brain can simply -> parse : 1
can simply parse -> the : 1
simply parse the -> name : 1
parse the name -> of : 1
name of a -> algorithm : 1
name of a -> city : 1
a algorithm more -> quickly : 1
algorithm more quickly -> than : 1
more quickly than -> it : 1
quickly than it -> can : 1
than it can -> understand : 1
it can understand -> a : 1
can understand a -> complex : 1
understand a complex -> which : 1
a complex which -> does : 1
complex which does -> a : 1
which does a -> mainly : 1
does a mainly -> but : 1
a mainly but -> in : 1
mainly but in -> some : 1
but in some -> detail : 1
in some detail -> a : 1
some detail a -> slightly : 1
detail a slightly -> this : 1
a slightly this -> we : 1
slightly this we -> are : 1
are using stl -> data : 1
using stl data -> structures : 1
using stl data -> structure : 1
data structures so -> intuitively : 1
structures so intuitively -> that : 1
so intuitively that -> we : 1
intuitively that we -> can : 1
we can nicely -> avoid : 1
can nicely avoid -> raw : 1
nicely avoid raw -> and : 1
avoid raw and -> other : 1
raw and other -> crude : 1
and other crude -> legacy : 1
other crude legacy -> the : 1
crude legacy the -> next : 1
legacy the next -> step : 1
step is lifting -> our : 1
is lifting our -> comprehension : 1
lifting our comprehension -> of : 1
our comprehension of -> stl : 1
comprehension of stl -> algorithms : 1
stl algorithms up -> to : 1
algorithms up to -> the : 1
to the levels -> where : 1
the levels where -> we : 1
levels where we -> can : 1
can avoid the -> use : 1
avoid the use -> of : 1
use of handcrafted -> complexes : 1
of handcrafted complexes -> by : 1
handcrafted complexes by -> expressing : 1
complexes by expressing -> them : 1
by expressing them -> in : 1
expressing them in -> terms : 1
them in terms -> of : 2
terms of stl -> this : 1
of stl this -> is : 1
stl this is -> a : 1
is a real -> improvement : 1
is a real -> step : 1
is a real -> help : 1
a real improvement -> because : 1
real improvement because -> code : 1
improvement because code -> becomes : 1
because code becomes -> simply : 1
code becomes simply -> shorter : 1
becomes simply shorter -> and : 1
simply shorter and -> more : 1
shorter and more -> readable : 1
and more readable -> while : 1
more readable while -> at : 1
readable while at -> the : 1
while at the -> same : 2
same time general -> and : 1
time general and -> it : 1
general and it -> is : 1
it is practically -> always : 1
is practically always -> possible : 1
practically always possible -> to : 1
always possible to -> avoid : 1
possible to avoid -> writing : 1
to avoid writing -> handcrafted : 1
avoid writing handcrafted -> loops : 1
writing handcrafted loops -> and : 1
handcrafted loops and -> taking : 1
loops and taking -> an : 1
and taking an -> algorithm : 1
taking an algorithm -> out : 1
an algorithm out -> of : 1
algorithm out of -> the : 1
of the namespace -> but : 1
the namespace but -> it : 1
namespace but it -> admittedly : 1
but it admittedly -> leads : 1
it admittedly leads -> to : 1
admittedly leads to -> we : 1
leads to we -> are : 1
not going to -> differentiate : 1
not going to -> implement : 1
not going to -> change : 1
not going to -> list : 1
going to differentiate -> between : 1
to differentiate between -> what : 1
differentiate between what -> is : 1
between what is -> awkward : 1
what is awkward -> and : 1
is awkward and -> what : 1
awkward and what -> is : 1
and what is -> the : 1
what is the -> this : 1
what is the -> difference : 1
what is the -> we : 1
is the this -> we : 1
the this we -> will : 5
the this we -> jump : 1
the this we -> can : 1
will use stl -> algorithms : 1
use stl algorithms -> in : 1
use stl algorithms -> we : 1
stl algorithms in -> creative : 1
algorithms in creative -> ways : 1
in creative ways -> in : 1
creative ways in -> order : 1
ways in order -> to : 1
order to look -> for : 1
to look for -> new : 1
look for new -> horizons : 1
for new horizons -> and : 1
new horizons and -> to : 1
horizons and to -> see : 1
and to see -> how : 2
see how things -> can : 1
how things can -> be : 1
things can be -> implemented : 1
implemented with modern -> on : 1
with modern on -> the : 1
modern on the -> we : 1
the we our -> own : 1
we our own -> which : 1
our own which -> can : 1
own which can -> easily : 1
which can easily -> be : 1
easily be combined -> with : 1
combined with existing -> data : 1
with existing data -> structures : 1
existing data structures -> and : 1
data structures and -> other : 2
data structures and -> will : 1
structures and other -> algorithms : 1
structures and other -> access : 1
and other algorithms -> designed : 1
other algorithms designed -> in : 1
algorithms designed in -> the : 1
designed in the -> same : 1
the same we -> will : 1
the same we -> avoid : 1
the same we -> would : 1
the same we -> can : 2
the same we -> need : 1
the same we -> have : 1
the same we -> could : 1
the same we -> divide : 1
the same we -> surely : 1
same we will -> also : 1
we will also -> stl : 1
we will also -> see : 4
we will also -> learn : 1
we will also -> have : 1
we will also -> get : 1
will also stl -> algorithms : 1
also stl algorithms -> to : 1
stl algorithms to -> get : 1
algorithms to get -> which : 1
to get which -> were : 1
get which were -> not : 1
which were not -> there : 1
were not there -> such : 1
not there such -> combined : 1
there such combined -> algorithms : 1
such combined algorithms -> allow : 1
combined algorithms allow -> for : 1
algorithms allow for -> more : 1
allow for more -> complex : 1
for more complex -> top : 1
for more complex -> next : 1
more complex top -> of : 1
complex top of -> the : 1
top of the -> existing : 1
top of the -> we : 1
of the existing -> while : 1
the existing while -> they : 1
existing while they -> are : 1
while they are -> themselves : 1
while they are -> being : 1
they are themselves -> extremely : 1
are themselves extremely -> short : 1
themselves extremely short -> and : 1
extremely short and -> readable : 1
short and readable -> this : 1
and readable this -> while : 1
readable this while -> little : 1
this while little -> we : 1
while little we -> will : 1
little we will -> also : 1
will also see -> where : 1
will also see -> how : 2
will also see -> what : 1
also see where -> exactly : 1
see where exactly -> stl : 1
where exactly stl -> algorithms : 1
exactly stl algorithms -> suffer : 1
stl algorithms suffer -> from : 1
algorithms suffer from -> reusability : 1
suffer from reusability -> or : 1
from reusability or -> only : 1
reusability or only -> when : 1
or only when -> we : 1
or only when -> the : 1
only when we -> know : 1
when we know -> ways : 1
we know ways -> well : 1
know ways well -> can : 1
ways well can -> we : 1
well can we -> best : 1
can we best -> decide : 1
we best decide -> which : 1
best decide which -> way : 1
decide which way -> is : 1
which way is -> the : 1
way is the -> right : 2
the right a -> trie : 1
right a trie -> class : 1
stl data structure -> poses : 1
data structure poses -> an : 1
structure poses an -> interesting : 1
poses an interesting -> way : 1
interesting way to -> in : 1
way to in -> an : 1
to in an -> easily : 1
in an easily -> searchable : 1
an easily searchable -> when : 1
easily searchable when -> segmenting : 1
searchable when segmenting -> sentences : 1
when segmenting sentences -> of : 1
segmenting sentences of -> text : 1
sentences of text -> into : 1
of text into -> lists : 1
text into lists -> of : 1
into lists of -> it : 1
lists of it -> is : 1
is often possible -> to : 1
often possible to -> combine : 1
possible to combine -> the : 1
to combine the -> first : 1
the first few -> words : 1
first few words -> sentences : 1
few words sentences -> have : 1
words sentences have -> in : 1
sentences have in -> have : 1
have in have -> a : 1
in have a -> look : 3
the following where -> the : 1
following where the -> sentences : 1
where the sentences -> how : 1
the sentences how -> are : 1
sentences how are -> and : 1
how are and -> how : 1
are and how -> do : 1
and how do -> you : 1
and how do -> we : 1
how do you -> are : 1
do you are -> saved : 1
you are saved -> in : 1
are saved in -> a : 1
are saved in -> pack : 1
in a data -> the : 1
a data the -> first : 1
data the first -> words : 1
the first words -> they : 1
first words they -> have : 1
words they have -> in : 1
they have in -> common : 1
have in common -> are : 1
have in common -> that : 1
in common are -> and : 1
common are and -> then : 1
are and then -> they : 1
are and then -> it : 1
and then they -> differ : 1
then they differ -> and : 1
they differ and -> split : 1
differ and split -> up : 1
and split up -> like : 1
split up like -> a : 1
up like a -> the : 1
like a the -> trie : 1
a the trie -> data : 1
the trie data -> structure : 1
trie data structure -> combines : 1
data structure combines -> common : 1
structure combines common -> it : 1
combines common it -> is : 1
common it is -> also : 1
also called it -> is : 1
called it is -> very : 1
easy to implement -> such : 1
easy to implement -> even : 1
to implement such -> a : 1
to implement such -> an : 1
implement such a -> data : 1
implement such a -> tool : 1
data structure with -> what : 1
structure with what -> the : 1
with what the -> stl : 1
what the stl -> gives : 1
what the stl -> already : 2
what the stl -> has : 1
gives us this -> section : 1
us this section -> concentrates : 1
this section concentrates -> on : 1
section concentrates on -> implementing : 1
concentrates on implementing -> our : 1
on implementing our -> own : 1
implementing our own -> trie : 1
implementing our own -> algorithm : 1
our own trie -> to : 1
own trie to -> do : 1
trie to do -> this : 1
our own prefix -> tree : 1
own prefix tree -> only : 1
prefix tree only -> made : 1
tree only made -> from : 1
only made from -> stl : 1
made from stl -> data : 1
from stl data -> structures : 1
structures and will -> include : 1
and will include -> all : 1
the stl parts -> we : 1
stl parts we -> use : 1
parts we use -> and : 1
we use and -> declare : 1
we use and -> using : 2
we use and -> we : 1
use and declare -> that : 1
using namespace revolves -> around : 1
namespace revolves around -> a : 1
revolves around a -> which : 1
around a which -> we : 1
implement a class -> in : 1
implement a class -> that : 1
a class in -> our : 1
class in our -> a : 1
in our a -> trie : 1
our a trie -> is : 1
a trie is -> basically : 1
trie is basically -> a : 1
basically a recursive -> map : 1
a recursive map -> of : 1
recursive map of -> every : 1
map of every -> trie : 1
of every trie -> node : 1
every trie node -> contains : 1
trie node contains -> a : 1
node contains a -> which : 1
a which maps -> from : 1
which maps from -> an : 1
maps from an -> instance : 1
from an instance -> of : 1
instance of the -> payload : 1
instance of the -> lambda : 1
instance of the -> and : 1
of the payload -> type : 1
the payload type -> to : 1
payload type to -> the : 1
the next trie -> template : 1
next trie template -> class : 1
trie template class -> trie : 2
template class trie -> code : 1
template class trie -> template : 1
class trie code -> for : 1
trie code for -> inserting : 1
code for inserting -> new : 1
inserting new item -> sequences : 1
new item sequences -> is : 1
item sequences is -> the : 1
sequences is the -> user : 1
is the user -> provides : 1
provides a iterator -> pair : 1
a iterator pair -> and : 2
iterator pair and -> we : 1
iterator pair and -> a : 1
pair and we -> loop : 1
and we loop -> through : 1
we loop through -> it : 1
we loop through -> the : 1
loop through it -> if : 1
through it if -> the : 1
user input sequence -> is : 1
input sequence is -> then : 1
sequence is then -> we : 1
then we look -> up : 1
we look up -> in : 1
we look up -> the : 2
look up in -> the : 2
up in the -> subtrie : 1
up in the -> we : 1
up in the -> but : 1
up in the -> stl : 1
up in the -> directory : 1
in the subtrie -> and : 1
the subtrie and -> then : 1
subtrie and then -> look : 1
and then look -> in : 1
then look in -> the : 1
look in the -> next : 1
look in the -> html : 1
the next in -> order : 1
next in order -> to : 1
get the subtrie -> for : 1
the subtrie for -> if : 1
the subtrie for -> all : 1
subtrie for if -> any : 1
for if any -> of : 1
if any of -> those : 1
any of those -> subtries : 1
of those subtries -> did : 1
those subtries did -> not : 1
subtries did not -> exist : 1
did not exist -> they : 1
not exist they -> are : 1
exist they are -> implicitly : 1
they are implicitly -> added : 1
are implicitly added -> by : 1
implicitly added by -> the : 1
added by the -> operator : 1
by the operator -> of : 1
operator of template -> void : 1
of template void -> it : 1
template void it -> if : 2
void it if -> also : 1
void it if -> pair : 1
void it if -> template : 1
it if also -> define : 1
if also define -> convenience : 1
also define convenience -> which : 1
define convenience which -> enable : 1
convenience which enable -> the : 1
which enable the -> user : 1
enable the user -> to : 1
user to just -> provide : 1
to just provide -> a : 1
to just provide -> some : 1
just provide a -> container : 1
provide a container -> of : 1
a container of -> which : 1
container of which -> are : 1
are then automatically -> queried : 1
then automatically queried -> for : 1
automatically queried for -> template : 1
queried for template -> void : 1
template void c -> order : 1
template void c -> void : 1
void c order -> to : 1
c order to -> allow : 1
to allow the -> user : 1
user to we -> must : 1
to we must -> help : 1
to we must -> on : 1
we must help -> the : 1
must help the -> compiler : 1
help the compiler -> a : 1
help the compiler -> by : 1
the compiler a -> bit : 1
compiler a bit -> to : 1
bit to correctly -> deduce : 1
to correctly deduce -> all : 1
correctly deduce all -> the : 1
deduce all the -> types : 1
all the types -> from : 1
the types from -> that : 1
types from that -> so : 1
from that so -> we : 1
so we add -> a : 1
we add a -> which : 1
we add a -> wrapper : 1
add a which -> overloads : 1
a which overloads -> the : 1
which overloads the -> insert : 1
overloads the insert -> interface : 1
the insert interface -> with : 1
insert interface with -> an : 1
interface with an -> void : 1
with an void -> will : 1
an void will -> also : 1
void will also -> want : 1
will also want -> to : 1
to see in -> a : 1
see in a -> so : 1
in a so -> we : 1
need a in -> order : 1
need a in -> addition : 1
order to we -> can : 1
do a through -> the : 1
a through the -> on : 1
through the on -> the : 1
the on the -> way : 1
the on the -> string : 2
the way from -> the : 1
way from the -> root : 1
from the root -> node : 1
the root node -> down : 1
root node down -> to : 1
node down to -> the : 1
first we record -> all : 1
we record all -> payload : 1
record all payload -> items : 1
all payload items -> we : 1
payload items we -> have : 1
items we have -> seen : 1
we have seen -> this : 1
we have seen -> them : 1
we have seen -> that : 1
we have seen -> how : 1
we have seen -> what : 1
we have seen -> its : 1
have seen this -> we : 1
seen this we -> have : 1
this we have -> a : 1
this we have -> absolutely : 1
have a complete -> sequence : 1
a complete sequence -> together : 1
complete sequence together -> once : 1
sequence together once -> we : 1
together once we -> reach : 1
once we reach -> the : 1
reach the which -> is : 1
which is trivially -> we : 1
is trivially we -> see : 1
trivially we see -> that : 1
that we reached -> a : 1
we reached a -> is : 1
reached a is -> after : 1
a is after -> the : 1
is after the -> recursive : 1
is after the -> first : 1
after the recursive -> we : 1
the recursive we -> pop : 1
recursive we pop -> off : 1
we pop off -> the : 1
pop off the -> last : 1
the last added -> payload : 1
last added payload -> item : 1
added payload item -> void : 1
payload item void -> const : 1
item void const -> if : 1
void const if -> cout : 2
const if cout -> for : 2
if cout for -> auto : 2
for auto recursive -> function : 1
auto recursive function -> a : 1
recursive function a -> reference : 1
function a reference -> to : 1
to a printable -> list : 1
a printable list -> of : 1
printable list of -> payload : 1
list of payload -> but : 1
of payload but -> the : 1
payload but the -> user : 1
but the user -> it : 1
the user it -> without : 1
user it without -> any : 1
it without any -> we : 1
without any we -> define : 1
without any we -> assume : 1
any we define -> which : 1
we define which -> constructs : 1
define which constructs -> the : 1
which constructs the -> helper : 1
constructs the helper -> list : 1
the helper list -> void : 1
helper list void -> const : 1
list void const -> that : 1
void const that -> we : 1
const that we -> can : 1
we can construct -> and : 2
can construct and -> print : 2
construct and print -> we : 1
construct and print -> a : 1
and print we -> may : 1
print we may -> want : 1
we may want -> to : 2
may want to -> search : 1
may want to -> have : 1
want to search -> for : 1
for the idea -> is : 1
for the idea -> of : 1
the idea is -> that : 2
the idea is -> to : 1
that if the -> trie : 1
that if the -> user : 1
if the trie -> contains : 1
the trie contains -> sequences : 1
trie contains sequences -> such : 1
contains sequences such -> and : 1
sequences such and -> and : 1
and we give -> it : 2
we give it -> a : 2
we give it -> an : 3
we give it -> for : 1
we give it -> the : 1
we give it -> which : 1
we give it -> wait : 1
we give it -> our : 1
it a for -> it : 1
a for it -> would : 1
a for it -> will : 1
for it would -> return : 1
it would return -> us : 1
would return us -> the : 1
return us the -> subtrie : 1
return us the -> value : 1
return us the -> last : 1
return us the -> because : 1
return us the -> of : 1
return us the -> number : 1
return us the -> existing : 1
return us the -> same : 1
us the subtrie -> the : 1
the subtrie the -> and : 1
subtrie the and -> if : 1
the and if -> we : 1
and if we -> find : 1
and if we -> print : 1
and if we -> need : 1
and if we -> want : 1
if we find -> the : 1
we find the -> we : 1
find the we -> return : 1
the we return -> a : 3
the we return -> the : 1
the we return -> all : 1
return a reference -> to : 1
to the possibility -> exists : 1
the possibility exists -> that : 1
possibility exists that -> there : 1
exists that there -> is : 1
is no such -> subtrie : 2
no such subtrie -> in : 1
no such subtrie -> for : 1
such subtrie in -> case : 1
subtrie in case -> the : 1
case the trie -> does : 1
the trie does -> not : 1
trie does not -> contain : 1
trie does not -> only : 1
not contain the -> sequence : 1
not contain the -> surrounding : 1
not contain the -> same : 1
contain the sequence -> we : 1
the sequence we -> are : 1
sequence we are -> searching : 1
sequence we are -> looking : 1
searching in such -> we : 1
such we still -> need : 1
need to return -> is : 1
need to return -> the : 1
to return is -> a : 1
is a nice -> helper : 1
is a nice -> example : 1
is a nice -> and : 1
is a nice -> but : 1
a nice helper -> because : 1
nice helper because -> we : 1
helper because we -> can : 1
can return an -> optional : 1
return an optional -> object : 1
an optional object -> if : 1
optional object if -> there : 1
object if there -> is : 1
is no template -> it : 1
no template it -> const : 1
template it const -> if : 2
it const if -> return : 3
const if return -> auto : 3
if return auto -> found : 3
return auto found -> if : 3
auto found if -> return : 3
found if return -> return : 3
return return to -> the : 1
return to the -> we : 1
return to the -> return : 2
the we provide -> a : 1
provide a version -> of : 1
a version of -> the : 2
a version of -> a : 1
the which automatically -> takes : 1
which automatically takes -> iterators : 1
automatically takes iterators -> from : 1
takes iterators from -> the : 1
the input template -> auto : 1
input template auto -> c : 1
template auto c -> return : 1
template auto c -> const : 1
c return already -> put : 1
return already put -> the : 1
already put the -> new : 1
the new trie -> class : 1
new trie class -> to : 1
trie class to -> use : 1
class to use -> in : 1
use in our -> main : 1
in our main -> function : 1
in our main -> we : 1
in our main -> then : 1
our main function -> by : 1
our main function -> the : 1
function by instantiating -> a : 1
by instantiating a -> trie : 1
instantiating a trie -> specialized : 1
a trie specialized -> on : 1
trie specialized on -> objects : 1
specialized on objects -> and : 1
on objects and -> fill : 1
objects and fill -> it : 1
example int first -> print : 1
int first print -> the : 1
first print the -> whole : 1
first print the -> as : 1
the whole cout -> we : 1
whole cout we -> obtain : 1
cout we obtain -> the : 1
we obtain the -> subtrie : 1
obtain the subtrie -> for : 1
subtrie for all -> the : 1
all the input -> sentences : 1
the input sentences -> that : 1
input sentences that -> start : 1
sentences that start -> with : 1
that start with -> and : 1
start with and -> print : 1
with and print -> cout : 1
with and print -> them : 1
and print cout -> suggestions : 1
print cout suggestions -> after : 1
cout suggestions after -> if : 1
suggestions after if -> st : 1
after if st -> and : 1
if st and -> running : 1
st and running -> the : 1
the program shows -> that : 3
program shows that -> it : 1
program shows that -> both : 1
program shows that -> all : 1
shows that it -> does : 1
shows that it -> has : 1
shows that it -> ran : 1
it does indeed -> return : 1
does indeed return -> us : 1
indeed return us -> only : 1
return us only -> the : 1
us only the -> two : 1
only the two -> sentences : 1
the two sentences -> with : 1
two sentences with -> when : 1
sentences with when -> we : 1
when we query -> the : 1
we query the -> trie : 2
query the trie -> for : 1
query the trie -> in : 1
the trie for -> exactly : 1
trie for exactly -> that : 1
for exactly that -> recorded : 1
exactly that recorded -> hi : 1
that recorded hi -> how : 1
recorded hi how -> are : 1
hi how are -> you : 2
how are you -> hi : 2
how are you -> i : 1
are you hi -> i : 2
you hi i -> am : 2
hi i am -> great : 2
i am great -> thanks : 3
am great thanks -> i : 1
am great thanks -> it : 1
am great thanks -> do : 1
great thanks i -> am : 1
thanks i am -> watching : 1
i am watching -> a : 1
am watching a -> movie : 1
watching a movie -> what : 1
a movie what -> are : 1
movie what are -> you : 1
what are you -> doing : 1
are you doing -> possible : 1
you doing possible -> suggestions : 1
doing possible suggestions -> after : 1
possible suggestions after -> how : 1
suggestions after how -> are : 1
after how are -> you : 1
are you i -> am : 1
you i am -> great : 1
great thanks it -> the : 1
thanks it the -> code : 1
it the code -> for : 1
code for word -> sequence : 1
for word sequence -> is : 1
word sequence is -> shorter : 1
sequence is shorter -> and : 1
is shorter and -> simpler : 1
shorter and simpler -> than : 1
and simpler than -> the : 1
simpler than the -> code : 1
than the code -> for : 1
a given word -> sequence : 1
given word sequence -> in : 1
word sequence in -> a : 1
sequence in a -> first : 1
in a first -> have : 1
a first have -> a : 1
at the insertion -> void : 1
the insertion void -> it : 1
insertion void it -> if : 1
it if pair -> of : 1
if pair of -> and : 1
of and represent -> the : 1
and represent the -> word : 1
represent the word -> sequence : 1
the word sequence -> to : 1
word sequence to -> be : 1
sequence to be -> looks : 1
to be looks -> up : 1
be looks up -> the : 1
looks up the -> first : 1
up the first -> word : 1
the first word -> in : 1
first word in -> the : 1
word in the -> sequence : 1
in the sequence -> in : 1
the sequence in -> the : 1
sequence in the -> and : 1
sequence in the -> text : 1
in the and -> restarts : 1
in the and -> octal : 1
in the and -> running : 1
in the and -> we : 1
in the and -> there : 1
in the and -> can : 1
the and restarts -> the : 1
and restarts the -> same : 1
restarts the same -> function : 1
same function on -> that : 1
function on that -> lower : 1
on that lower -> with : 1
that lower with -> the : 1
lower with the -> iterator : 1
with the iterator -> one : 1
the iterator one -> word : 1
iterator one word -> the : 1
one word the -> line : 1
word the line -> just : 1
the line just -> aborts : 1
line just aborts -> the : 1
just aborts the -> the : 1
aborts the the -> empty : 1
the the empty -> statement : 1
the empty statement -> does : 1
empty statement does -> which : 1
statement does which -> is : 1
does which is -> a : 1
bit weird at -> all : 1
weird at all -> the : 1
the insertion happens -> in : 1
insertion happens in -> the : 1
the the bracket -> operator : 1
the bracket operator -> of : 1
the bracket operator -> we : 1
bracket operator of -> either : 1
operator of either -> returns : 1
of either returns -> an : 1
either returns an -> existing : 1
returns an existing -> item : 1
an existing item -> for : 1
existing item for -> the : 1
item for the -> given : 1
for the given -> it : 1
the given it -> one : 1
given it one -> with : 1
it one with -> that : 1
one with that -> the : 1
with that the -> associated : 1
that the associated -> value : 1
associated value mapped -> type : 1
value mapped type -> is : 1
mapped type is -> a : 1
type is a -> trie : 1
is a trie -> in : 1
a trie in -> this : 1
trie in this -> is : 1
in this is -> constructed : 1
in this is -> an : 1
this is constructed -> from : 1
constructed from its -> default : 1
from its default -> this : 1
its default this -> we : 1
its default this -> way : 1
default this we -> are : 1
we are a -> new : 1
are a new -> trie : 1
a new trie -> branch : 1
new trie branch -> whenever : 1
trie branch whenever -> we : 1
branch whenever we -> are : 1
whenever we are -> looking : 1
we are looking -> up : 1
we are looking -> if : 1
we are looking -> we : 2
we are looking -> at : 1
we are looking -> for : 1
are looking up -> unknown : 1
looking up unknown -> up : 1
up unknown up -> in : 1
unknown up in -> a : 1
up in a -> subtrie : 1
up in a -> struct : 1
up in a -> then : 1
up in a -> callable : 1
in a subtrie -> looks : 1
a subtrie looks -> more : 1
subtrie looks more -> we : 1
looks more we -> were : 1
more we were -> not : 1
we were not -> able : 1
were not able -> to : 1
not able to -> so : 1
able to so -> much : 1
to so much -> in : 1
so much in -> implicit : 1
much in implicit -> it : 1
in implicit it -> const : 1
implicit it const -> if : 1
return return code -> basically : 1
return code basically -> revolves : 1
code basically revolves -> around : 1
basically revolves around -> found : 1
basically revolves around -> and : 1
revolves around found -> instead : 1
around found instead -> of : 1
found instead of -> looking : 1
instead of looking -> up : 1
of looking up -> the : 1
looking up the -> next : 1
up the next -> deeper : 1
next deeper trie -> node : 1
deeper trie node -> using : 1
trie node using -> the : 1
node using the -> bracket : 1
using the bracket -> operator : 1
bracket operator we -> use : 1
operator we use -> if : 1
we use if -> we : 1
use if we -> use : 1
use the operator -> for : 1
for the trie -> missing : 1
the trie missing -> items : 1
trie missing items -> for : 1
missing items for -> which : 1
for which is -> what : 1
for which is -> set : 1
we want when -> just : 1
want when just -> looking : 1
when just looking -> up : 1
just looking up -> item : 1
looking up item -> the : 1
up item the -> try : 1
item the try -> doing : 1
the try doing -> the : 1
try doing the -> class : 1
doing the class -> method : 1
the class method -> is : 1
class method is -> so : 1
method is so -> this : 1
is so this -> will : 1
so this will -> not : 1
this will not -> even : 1
this will not -> work : 2
this will not -> increment : 1
this will not -> succeed : 1
will not even -> be : 1
not even be -> this : 1
not even be -> and : 1
even be this -> can : 1
can be quite -> a : 1
be quite a -> life : 1
quite a life -> which : 1
a life which -> helps : 1
life which helps -> us : 1
helps us in -> preventing : 1
helps us in -> finding : 1
helps us in -> composing : 1
us in preventing -> scary : 1
in preventing scary -> looking : 1
preventing scary looking -> detail : 1
scary looking detail -> is : 1
looking detail is -> the : 1
detail is the -> return : 1
is the return -> we : 1
return we chose -> as : 1
we chose as -> it : 1
chose as it -> is : 1
possible that there -> is : 1
possible that there -> might : 1
such subtrie for -> the : 1
subtrie for the -> input : 1
for the input -> sequence : 1
the input sequence -> we : 1
input sequence we -> are : 1
are looking if -> we : 1
looking if we -> only : 1
if we only -> inserted : 1
if we only -> want : 1
we only inserted -> my : 1
only inserted my -> there : 1
inserted my there -> will : 1
my there will -> be : 1
there will be -> no : 1
there will be -> some : 1
will be no -> my : 1
be no my -> sequence : 1
no my sequence -> to : 1
my sequence to -> look : 1
sequence to look -> in : 1
to look in -> such : 1
look in such -> we : 1
just return which -> gives : 1
return which gives -> the : 1
which gives the -> caller : 1
gives the caller -> an : 1
the caller an -> empty : 1
caller an empty -> optional : 1
an empty optional -> this : 2
empty optional this -> still : 1
empty optional this -> function : 1
optional this still -> does : 1
this still does -> not : 1
still does not -> explain : 1
does not explain -> why : 1
not explain why -> we : 1
explain why we -> use : 1
why we use -> instead : 1
why we use -> what : 1
instead of just -> writing : 1
instead of just -> holding : 1
of just writing -> trie : 1
just writing trie -> the : 1
writing trie the -> point : 1
trie the point -> here : 1
the point here -> is : 1
point here is -> that : 1
is that an -> optional : 1
that an optional -> instance : 1
an optional instance -> with : 1
optional instance with -> a : 1
instance with a -> member : 1
with a member -> variable : 1
variable of the -> type : 1
the type is -> not : 1
type is not -> reassignable : 1
is not reassignable -> and : 1
not reassignable and -> hence : 1
reassignable and hence -> would : 1
and hence would -> not : 1
hence would not -> implementing : 1
would not implementing -> a : 1
not implementing a -> reference : 1
implementing a reference -> using : 1
a reference using -> leads : 1
reference using leads -> to : 1
using leads to -> reassignable : 1
leads to reassignable -> search : 1
to reassignable search -> generator : 1
reassignable search generator -> with : 1
generator with entering -> something : 1
with entering something -> into : 1
entering something into -> a : 1
a search engine -> on : 1
search engine on -> the : 1
engine on the -> the : 1
the the interface -> often : 1
the interface often -> tries : 1
interface often tries -> to : 1
often tries to -> guess : 1
tries to guess -> how : 1
tries to guess -> what : 1
to guess how -> the : 1
guess how the -> full : 1
how the full -> search : 1
the full search -> this : 1
full search this -> guessing : 1
search this guessing -> is : 1
this guessing is -> usually : 1
guessing is usually -> based : 1
is usually based -> on : 1
usually based on -> popular : 1
based on popular -> search : 1
on popular search -> queries : 1
popular search queries -> from : 1
search queries from -> the : 1
queries from the -> such : 1
from the such -> search : 1
the such search -> engine : 1
such search engine -> guesses : 1
search engine guesses -> are : 1
engine guesses are -> quite : 1
guesses are quite -> it : 1
are quite it -> appears : 1
quite it appears -> that : 1
it appears that -> people : 1
appears that people -> type : 1
that people type -> weird : 1
people type weird -> queries : 1
type weird queries -> into : 1
weird queries into -> search : 1
queries into search -> this : 1
into search this -> we : 1
search this we -> are : 1
use the trie -> class : 1
use the trie -> implementation : 1
the trie class -> implemented : 1
trie class implemented -> in : 1
class implemented in -> the : 1
the previous recipe -> and : 1
previous recipe and -> build : 1
recipe and build -> a : 1
and build a -> little : 1
build a little -> search : 1
a little search -> query : 1
little search query -> suggestion : 1
search query suggestion -> to : 1
query suggestion to -> do : 1
suggestion to do -> this : 1
implement a terminal -> which : 1
a terminal which -> accepts : 1
terminal which accepts -> some : 1
which accepts some -> then : 1
accepts some then -> tries : 1
some then tries -> to : 1
then tries to -> guess : 1
to guess what -> the : 1
guess what the -> user : 1
what the user -> might : 1
the user might -> want : 1
the user might -> not : 1
user might want -> to : 1
might want to -> look : 1
might want to -> have : 1
want to look -> based : 1
want to look -> at : 1
to look based -> on : 1
look based on -> a : 1
based on a -> cheap : 1
on a cheap -> text : 1
a cheap text -> file : 1
cheap text file -> includes : 1
text file includes -> come : 1
file includes come -> and : 1
includes come and -> we : 1
come and we -> define : 1
and we define -> that : 1
we define that -> we : 1
we define that -> one : 1
we define that -> the : 1
using namespace use -> the : 1
namespace use the -> trie : 1
the trie implementation -> from : 1
trie implementation from -> the : 1
implementation from the -> trie : 1
from the trie -> template : 1
the trie template -> class : 1
class trie template -> void : 1
trie template void -> it : 1
it if template -> void : 1
if template void -> c : 1
void c void -> void : 1
c void void -> const : 1
void void const -> if : 1
for auto void -> const : 1
auto void const -> template : 1
void const template -> it : 1
const template it -> const : 1
return return template -> auto : 1
return return template -> typename : 1
return template auto -> c : 1
auto c const -> return : 1
c const return -> add : 1
const return add -> a : 1
return add a -> little : 1
add a little -> helper : 1
a line that -> prompts : 1
line that prompts -> the : 1
that prompts the -> user : 2
prompts the user -> to : 2
user to enter -> some : 2
user to enter -> two : 1
user to enter -> a : 1
to enter some -> static : 1
to enter some -> text : 1
enter some static -> void : 1
some static void -> cout : 1
void cout input -> the : 1
cout input the -> main : 1
input the main -> we : 1
main we open -> a : 1
main we open -> up : 1
we open a -> text : 1
we open a -> new : 1
open a text -> which : 1
a text which -> acts : 1
text which acts -> as : 1
which acts as -> our : 1
which acts as -> a : 1
which acts as -> the : 1
acts as our -> sentence : 1
as our sentence -> we : 1
our sentence we -> read : 1
sentence we read -> that : 1
we read that -> text : 1
read that text -> file : 1
that text file -> line : 1
text file line -> by : 1
file line by -> feed : 1
file line by -> line : 1
line by feed -> those : 1
by feed those -> lines : 1
feed those lines -> into : 1
those lines into -> a : 1
lines into a -> int : 1
into a int -> fstream : 1
a int fstream -> infile : 1
int fstream infile -> for : 1
fstream infile for -> istringstream : 1
infile for istringstream -> iss : 2
for istringstream iss -> that : 2
for istringstream iss -> loop : 1
istringstream iss that -> we : 1
istringstream iss that -> text : 1
iss that we -> have : 1
we have constructed -> the : 1
have constructed the -> trie : 1
constructed the trie -> from : 1
the trie from -> the : 1
trie from the -> content : 1
from the content -> in : 1
the content in -> the : 1
content in the -> text : 1
in the text -> we : 1
in the text -> file : 1
the text we -> need : 1
text we need -> to : 1
implement an interface -> for : 1
an interface for -> the : 1
interface for the -> user : 1
user to query -> prompt : 1
to query prompt -> the : 1
query prompt the -> user : 1
prompt the user -> to : 2
enter some text -> and : 1
some text and -> wait : 1
text and wait -> for : 1
wait for a -> whole : 1
for a whole -> line : 1
a whole line -> of : 2
whole line of -> for : 1
whole line of -> text : 1
line of for -> istringstream : 1
of for istringstream -> iss : 1
iss that text -> we : 1
that text we -> query : 1
text we query -> the : 1
the trie in -> order : 1
trie in order -> to : 1
get a subtrie -> from : 1
a subtrie from -> if : 1
subtrie from if -> we : 1
from if we -> have : 1
we have such -> an : 1
have such an -> input : 1
such an input -> sequence : 1
such an input -> stream : 1
an input sequence -> in : 1
input sequence in -> the : 1
the text file -> then : 1
the text file -> it : 1
text file then -> we : 1
file then we -> can : 1
can print how -> the : 1
print how the -> input : 1
how the input -> can : 1
the input can -> be : 2
input can be -> just : 1
input can be -> really : 1
can be just -> as : 1
the search engine -> suggestion : 1
search engine suggestion -> if : 1
engine suggestion if -> we : 1
suggestion if we -> do : 1
do not find -> a : 1
not find a -> matching : 1
find a matching -> we : 1
a matching we -> just : 1
matching we just -> tell : 1
we just tell -> the : 1
just tell the -> if : 1
tell the if -> st : 1
the if st -> cout : 1
if st cout -> else : 1
st cout else -> cout : 1
else cout suggestions -> we : 1
cout suggestions we -> print : 1
suggestions we print -> the : 1
print the prompt -> text : 1
the prompt text -> again : 1
prompt text again -> and : 1
text again and -> wait : 1
again and wait -> for : 1
next line of -> user : 1
next line of -> while : 1
line of user -> cout : 1
of user cout -> thinking : 1
user cout thinking -> about : 1
cout thinking about -> launching : 1
thinking about launching -> the : 1
about launching the -> we : 1
launching the we -> need : 1
need to fill -> some : 1
to fill some -> content : 1
fill some content -> into : 1
some content into -> the : 1
content into the -> input : 1
into the input -> can : 1
can be really -> and : 1
be really and -> it : 1
really and it -> does : 1
to be each -> line : 1
be each line -> of : 1
each line of -> text : 1
line of text -> will : 2
line of text -> this : 1
line of text -> output : 1
of text will -> be : 1
of text will -> not : 1
text will be -> one : 1
will be one -> trie : 1
be one trie -> do : 1
one trie do -> ghosts : 1
trie do ghosts -> exist : 1
do ghosts exist -> do : 2
ghosts exist do -> goldfish : 2
exist do goldfish -> sleep : 2
do goldfish sleep -> do : 2
goldfish sleep do -> guinea : 2
sleep do guinea -> pigs : 2
do guinea pigs -> bite : 2
guinea pigs bite -> how : 2
pigs bite how -> wrong : 2
bite how wrong -> can : 2
how wrong can -> you : 2
wrong can you -> be : 2
can you be -> how : 2
you be how -> could : 2
be how could -> trump : 2
how could trump -> become : 2
could trump become -> president : 2
trump become president -> how : 2
become president how -> could : 2
president how could -> this : 2
how could this -> happen : 2
could this happen -> to : 2
this happen to -> me : 2
happen to me -> how : 2
to me how -> did : 2
me how did -> bruce : 2
how did bruce -> lee : 2
did bruce lee -> die : 2
bruce lee die -> how : 2
lee die how -> did : 2
die how did -> you : 2
how did you -> learn : 2
did you learn -> what : 2
you learn what -> would : 2
learn what would -> aliens : 2
what would aliens -> look : 3
would aliens look -> like : 3
aliens look like -> what : 2
aliens look like -> bjarne : 1
look like what -> would : 2
like what would -> macgiver : 2
what would macgiver -> do : 2
would macgiver do -> what : 2
macgiver do what -> would : 2
do what would -> bjarne : 2
do what would -> chuck : 1
what would bjarne -> stroustrup : 2
would bjarne stroustrup -> do : 2
bjarne stroustrup do -> need : 1
bjarne stroustrup do -> what : 1
bjarne stroustrup do -> chuck : 1
stroustrup do need -> to : 1
do need to -> create : 1
need to create -> before : 1
to create before -> we : 1
create before we -> can : 1
we can run -> the : 1
can run the -> its : 1
run the its -> content : 1
the its content -> could : 1
its content could -> look : 1
content could look -> like : 1
look like hi -> how : 1
like hi how -> are : 1
great thanks do -> ghosts : 1
thanks do ghosts -> exist : 1
stroustrup do what -> would : 1
what would chuck -> norris : 1
would chuck norris -> do : 1
chuck norris do -> why : 1
chuck norris do -> macgiver : 1
norris do why -> do : 1
do why do -> cats : 1
why do cats -> like : 1
why do cats -> hate : 3
do cats like -> boxes : 1
cats like boxes -> why : 1
cats like boxes -> next : 1
like boxes why -> does : 1
boxes why does -> it : 1
why does it -> rain : 1
why does it -> work : 1
why does it -> all : 1
does it rain -> why : 1
it rain why -> is : 1
rain why is -> the : 1
why is the -> sky : 1
is the sky -> blue : 1
the sky blue -> why : 1
sky blue why -> do : 1
blue why do -> cats : 1
do cats hate -> water : 1
do cats hate -> dogs : 2
cats hate water -> why : 1
cats hate water -> cats : 1
hate water why -> do : 1
water why do -> cats : 1
cats hate dogs -> why : 1
cats hate dogs -> cats : 1
hate dogs why -> is : 1
dogs why is -> so : 1
why is so -> and : 1
is so and -> running : 1
so and running -> the : 1
program and entering -> some : 1
and entering some -> input : 1
entering some input -> looks : 1
some input looks -> like : 1
input looks like -> the : 1
like the next -> input : 1
the next input -> what : 1
next input what -> would : 1
input what would -> aliens : 1
look like bjarne -> stroustrup : 1
like bjarne stroustrup -> do : 1
stroustrup do chuck -> norris : 1
do chuck norris -> do : 1
norris do macgiver -> do : 1
do macgiver do -> next : 1
macgiver do next -> input : 1
do next input -> why : 1
next input why -> do : 1
input why do -> cats : 1
hate dogs cats -> hate : 1
dogs cats hate -> water : 1
hate water cats -> like : 1
water cats like -> boxes : 1
like boxes next -> input : 1
boxes next input -> it : 1
next input it -> a : 1
input it a -> trie : 1
it a trie -> works : 1
a trie works -> was : 1
trie works was -> explained : 1
works was explained -> in : 1
was explained in -> the : 1
explained in the -> last : 1
last but how -> we : 1
but how we -> fill : 1
how we fill -> it : 1
we fill it -> and : 1
we fill it -> using : 1
fill it and -> how : 1
it and how -> we : 1
how we query -> it : 1
we query it -> looks : 1
query it looks -> a : 1
a bit strange -> have : 1
bit strange have -> a : 1
strange have a -> closer : 1
the code snippet -> the : 1
code snippet the -> empty : 1
snippet the empty -> trie : 1
the empty trie -> with : 1
empty trie with -> the : 1
trie with the -> content : 1
with the content -> of : 2
of the text -> database : 1
of the text -> line : 1
the text database -> infile : 1
text database infile -> for : 1
database infile for -> istringstream : 1
istringstream iss loop -> fills : 1
iss loop fills -> the : 1
loop fills the -> string : 1
fills the string -> with : 1
the string with -> the : 1
the string with -> more : 1
the string with -> what : 1
string with the -> content : 1
string with the -> compress : 1
the text line -> by : 1
text line by -> we : 1
line by we -> copy : 1
by we copy -> the : 1
copy the string -> into : 1
into an from -> such : 1
an from such -> an : 1
from such an -> input : 1
an input stream -> we : 1
an input stream -> such : 1
an input stream -> a : 1
an input stream -> and : 1
an input stream -> in : 1
input stream we -> can : 1
stream we can -> create : 1
stream we can -> poll : 1
we can create -> an : 1
we can create -> with : 1
we can create -> all : 1
can create an -> useful : 1
create an useful -> because : 1
an useful because -> our : 1
useful because our -> trie : 1
because our trie -> does : 1
our trie does -> not : 1
not only accept -> a : 1
only accept a -> container : 1
accept a container -> instance : 1
a container instance -> for : 1
container instance for -> looking : 1
instance for looking -> up : 1
for looking up -> also : 1
looking up also -> primarily : 1
up also primarily -> this : 1
also primarily this -> we : 1
primarily this we -> do : 1
need to construct -> a : 1
to construct a -> vector : 1
to construct a -> new : 1
to construct a -> value : 1
construct a vector -> or : 1
or a list -> of : 2
or a list -> from : 1
list of words -> and : 1
of words and -> can : 1
words and can -> directly : 1
and can directly -> consume : 1
can directly consume -> the : 1
directly consume the -> the : 1
consume the the -> last : 1
the last piece -> of : 1
last piece of -> unnecessary : 1
piece of unnecessary -> memory : 1
of unnecessary memory -> allocations : 1
unnecessary memory allocations -> could : 1
memory allocations could -> be : 1
allocations could be -> avoided : 1
could be avoided -> by : 1
be avoided by -> the : 1
avoided by the -> content : 1
by the content -> of : 1
content of does -> not : 1
not provide a -> constructor : 1
not provide a -> transformation : 1
provide a constructor -> be : 1
a constructor be -> it : 1
constructor be it -> will : 1
be it will -> its : 1
will its input -> reading : 1
its input reading -> the : 1
input reading the -> input : 1
reading the input -> to : 1
input to look -> it : 1
it up in -> the : 1
the we use -> exactly : 1
the we use -> accepts : 1
the we use -> for : 1
the we use -> a : 1
we use exactly -> the : 1
use exactly the -> same : 1
the same strategy -> but : 1
same strategy but -> we : 1
strategy but we -> do : 1
not use an -> input : 1
use an input -> we : 1
an input we -> this : 1
input we this -> works : 1
we this works -> completely : 1
this works completely -> identically : 1
works completely identically -> for : 1
completely identically for -> our : 1
identically for our -> use : 1
our use works -> with : 1
use works with -> iterators : 1
works with iterators -> just : 1
with iterators just -> as : 1
iterators just as -> is : 1
just as is -> possible : 1
as is possible -> to : 1
possible to add -> to : 1
to add to -> each : 1
add to each -> node : 1
to each node -> of : 1
each node of -> the : 1
node of the -> this : 1
of the this -> it : 1
of the this -> might : 1
the this it -> is : 2
possible to count -> prefix : 1
possible to count -> the : 1
to count prefix -> occurs : 1
count prefix occurs -> in : 1
prefix occurs in -> some : 1
occurs in some -> from : 1
in some from -> we : 1
some from we -> could : 1
from we could -> our : 1
we could our -> suggestions : 1
could our suggestions -> by : 1
our suggestions by -> their : 1
suggestions by their -> occurrence : 1
by their occurrence -> which : 1
their occurrence which -> is : 1
occurrence which is -> actually : 1
which is actually -> what : 1
is actually what -> search : 1
actually what search -> engines : 1
what search engines -> word : 1
search engines word -> suggestions : 1
engines word suggestions -> for : 1
word suggestions for -> smartphone : 1
suggestions for smartphone -> touchscreen : 1
for smartphone touchscreen -> text : 1
smartphone touchscreen text -> input : 1
touchscreen text input -> could : 1
text input could -> also : 1
input could also -> be : 1
also be implemented -> this : 1
be implemented this -> modification : 1
implemented this modification -> is : 1
this modification is -> left : 1
modification is left -> as : 1
is left as -> an : 2
left as an -> exercise : 2
as an exercise -> for : 2
as an exercise -> stream : 1
an exercise for -> the : 2
exercise for the -> the : 1
exercise for the -> try : 1
the the fourier -> transform : 1
stl numeric is -> a : 1
numeric is a -> very : 1
a very important -> and : 1
very important and -> famous : 1
important and famous -> formula : 1
and famous formula -> in : 1
famous formula in -> signal : 1
formula in signal -> it : 1
in signal it -> was : 1
signal it was -> invented : 1
it was invented -> nearly : 1
was invented nearly -> years : 1
invented nearly years -> but : 1
nearly years but -> with : 1
years but with -> the : 1
but with the -> number : 1
with the number -> of : 1
cases for it -> really : 1
for it really -> it : 1
it really it -> is : 1
used in audio -> medical : 1
in audio medical -> imaging : 1
audio medical imaging -> cell : 1
medical imaging cell -> phone : 1
imaging cell phone -> apps : 1
cell phone apps -> music : 1
phone apps music -> tracks : 1
apps music tracks -> while : 1
music tracks while -> listening : 1
tracks while listening -> to : 1
while listening to -> them : 1
listening to them -> on : 1
to them on -> the : 1
them on the -> and : 1
on the and -> so : 1
on the and -> negating : 1
on the and -> the : 1
on the and -> we : 1
on the and -> manage : 1
and so of -> the : 1
so of the -> vastness : 1
of the vastness -> of : 1
the vastness of -> general : 1
vastness of general -> numeric : 1
of general numeric -> application : 1
general numeric application -> scenarios : 1
numeric application scenarios -> only : 1
application scenarios only -> because : 1
scenarios only because -> of : 1
only because of -> the : 1
because of the -> fourier : 1
because of the -> whitespace : 1
because of the -> it : 1
because of the -> lambda : 1
because of the -> in : 1
of the fourier -> transformation : 1
of the fourier -> transform : 1
of the fourier -> code : 1
the fourier transformation -> of : 2
the fourier transformation -> is : 2
the fourier transformation -> and : 2
the fourier transformation -> the : 1
fourier transformation of -> the : 2
stl also tries -> to : 1
also tries to -> be : 1
tries to be -> useful : 1
tries to be -> able : 1
to be useful -> in : 1
useful in the -> context : 1
in the context -> of : 1
the context of -> numeric : 1
context of numeric -> the : 1
of numeric the -> fourier : 1
numeric the fourier -> transformation : 1
fourier transformation is -> only : 1
fourier transformation is -> not : 1
transformation is only -> one : 1
only one example -> but : 1
one example but -> a : 1
example but a -> tricky : 1
but a tricky -> one : 1
a tricky one -> the : 1
tricky one the -> formula : 1
one the formula -> itself : 1
the formula itself -> looks : 1
formula itself looks -> like : 1
itself looks like -> the : 1
like the transformation -> it : 1
the transformation it -> describes : 1
transformation it describes -> is : 1
it describes is -> basically : 1
describes is basically -> a : 1
basically a each -> element : 1
a each element -> of : 1
each element of -> the : 1
element of the -> sum : 1
element of the -> directory : 1
of the sum -> is : 1
the sum is -> the : 1
sum is the -> multiplication : 1
is the multiplication -> of : 1
the multiplication of -> a : 1
multiplication of a -> data : 1
a data point -> of : 1
data point of -> the : 3
data point of -> a : 1
point of the -> input : 1
point of the -> signal : 1
point of the -> next : 1
point of the -> which : 1
the input signal -> and : 1
input signal and -> the : 1
signal and the -> i : 1
and the i -> the : 1
the i the -> maths : 1
i the maths -> behind : 1
the maths behind -> this : 1
maths behind this -> is : 1
behind this is -> a : 2
a bit scary -> for : 1
bit scary for -> everyone : 1
scary for everyone -> who : 1
everyone who does -> not : 1
who does not -> know : 1
not know about -> complex : 1
know about complex -> numbers : 1
about complex numbers -> who : 1
complex numbers who -> just : 1
numbers who just -> does : 1
who just does -> not : 1
just does not -> like : 1
does not like -> but : 1
not like but -> it : 1
not really necessary -> to : 1
really necessary to -> completely : 1
necessary to completely -> understand : 1
to completely understand -> the : 1
completely understand the -> maths : 1
understand the maths -> in : 1
the maths in -> order : 1
maths in order -> to : 1
order to when -> having : 1
to when having -> a : 1
when having a -> close : 1
having a close -> look : 1
at the it -> says : 1
at the it -> is : 1
the it says -> that : 1
it says that -> the : 1
says that the -> sum : 1
the sum symbol -> loops : 1
sum symbol loops -> over : 1
symbol loops over -> every : 1
loops over every -> data : 1
over every data -> point : 1
of the signal -> is : 1
the signal is -> elements : 1
signal is elements -> using : 1
is elements using -> the : 1
elements using the -> loop : 1
using the loop -> variable : 1
the loop variable -> the : 1
loop variable the -> variable : 1
variable the variable -> is : 1
variable is another -> loop : 1
is another loop -> the : 1
another loop the -> fourier : 1
loop the fourier -> transformation : 1
transformation is not -> for : 1
is not for -> calculating : 1
not for calculating -> a : 1
for calculating a -> single : 1
calculating a single -> but : 1
a single but -> a : 1
single but a -> vector : 1
but a vector -> of : 1
vector of in -> this : 1
in this every -> data : 1
this every data -> point : 1
data point represents -> the : 1
point represents the -> intensity : 1
represents the intensity -> and : 1
the intensity and -> phase : 1
intensity and phase -> of : 1
and phase of -> a : 1
phase of a -> certain : 1
of a certain -> repetitive : 1
a certain repetitive -> wave : 1
certain repetitive wave -> which : 1
repetitive wave which -> is : 1
wave which is -> or : 1
which is or -> is : 1
is or is -> not : 1
or is not -> a : 1
not a part -> of : 1
the original when -> implementing : 1
original when implementing -> this : 1
when implementing this -> with : 1
implementing this with -> manual : 1
this with manual -> we : 1
with manual we -> will : 1
manual we will -> end : 1
up with code -> similar : 1
with code similar -> to : 1
code similar to -> the : 1
to the csignal -> csignal : 1
the csignal csignal -> const : 1
csignal csignal const -> double : 1
csignal const double -> pol : 1
const double pol -> for : 1
const double pol -> const : 1
double pol for -> k : 1
pol for k -> k : 1
for k k -> for : 1
k k for -> j : 2
k for j -> j : 2
for j j -> pol : 2
j j pol -> k : 2
j pol k -> return : 1
j pol k -> j : 1
pol k return -> type : 1
k return type -> may : 1
return type may -> be : 1
type may be -> an : 1
may be an -> of : 1
be an of -> complex : 1
an of complex -> for : 1
of complex for -> complex : 1
complex for complex -> there : 1
for complex there -> is : 1
complex there is -> stl : 1
there is stl -> which : 1
is stl which -> helps : 1
stl which helps -> represent : 1
which helps represent -> the : 1
helps represent the -> function : 1
represent the function -> basically : 1
the function basically -> does : 1
function basically does -> the : 1
basically does the -> works : 1
does the works -> well : 1
the works well -> but : 1
works well but -> we : 1
well but we -> are : 1
to implement it -> using : 1
to implement it -> it : 1
implement it using -> stl : 1
it using stl -> to : 1
using stl to -> do : 1
stl to do -> this : 2
stl to do -> are : 1
implement the fourier -> transformation : 1
fourier transformation and -> its : 1
fourier transformation and -> the : 1
transformation and its -> backward : 1
and its backward -> transformation : 1
its backward transformation -> and : 1
backward transformation and -> then : 1
transformation and then -> play : 1
and then play -> around : 1
then play around -> with : 1
around with it -> to : 1
with it to -> transform : 1
it to transform -> some : 1
to transform some -> we : 1
transform some we -> include : 1
some we include -> all : 1
the headers and -> declare : 2
namespace data point -> of : 1
point of a -> signal : 1
of a signal -> is : 1
a signal is -> a : 1
a signal is -> the : 1
signal is a -> complex : 1
signal is a -> vector : 1
is a complex -> number : 1
a complex number -> and : 1
complex number and -> shall : 1
number and shall -> be : 1
and shall be -> represented : 1
shall be represented -> by : 1
be represented by -> specialized : 1
represented by specialized -> on : 1
by specialized on -> this : 1
specialized on this -> the : 1
this the type -> alias : 1
the type alias -> stands : 2
type alias stands -> for : 2
alias stands for -> two : 1
alias stands for -> allows : 1
stands for two -> coupled : 1
for two coupled -> which : 1
two coupled which -> represent : 1
coupled which represent -> the : 1
represent the and -> the : 1
and the parts -> of : 1
the parts of -> a : 1
the parts of -> the : 1
parts of a -> complex : 1
parts of a -> then : 1
parts of a -> with : 1
of a complex -> a : 1
a complex a -> whole : 1
complex a whole -> signal : 1
a whole signal -> is : 1
whole signal is -> a : 1
of such which -> we : 1
such which we -> alias : 1
such which we -> used : 1
such which we -> want : 1
which we alias -> to : 1
we alias to -> using : 1
alias to using -> cmplx : 1
to using cmplx -> using : 1
using cmplx using -> csignal : 1
cmplx using csignal -> order : 1
using csignal order -> to : 1
csignal order to -> iterate : 1
iterate over an -> numeric : 1
over an numeric -> we : 1
an numeric we -> take : 1
numeric we take -> the : 1
take the from -> the : 1
from the numeric -> iterator : 1
the numeric iterator -> the : 1
numeric iterator the -> variables : 1
iterator the variables -> in : 1
the variables in -> the : 1
in the formula -> shall : 1
the formula shall -> iterate : 1
formula shall iterate -> over : 1
shall iterate over -> such : 1
over such class -> explicit : 1
such class explicit -> const : 1
class explicit const -> return : 1
explicit const return -> return : 1
return i fourier -> transformation : 1
i fourier transformation -> function : 1
fourier transformation function -> shall : 1
transformation function shall -> just : 1
function shall just -> take : 1
shall just take -> a : 1
just take a -> signal : 1
take a signal -> and : 1
a signal and -> return : 1
a signal and -> a : 1
signal and return -> a : 1
and return a -> new : 1
and return a -> future : 1
return a new -> the : 1
return a new -> string : 1
a new the -> returned : 1
new the returned -> signal : 1
the returned signal -> represents : 1
returned signal represents -> the : 1
signal represents the -> fourier : 1
represents the fourier -> transformation : 1
the input as -> the : 1
input as the -> back : 1
as the back -> transformation : 1
the back transformation -> from : 1
back transformation from -> a : 1
transformation from a -> fourier : 1
from a fourier -> transformed : 1
a fourier transformed -> signal : 1
fourier transformed signal -> back : 1
transformed signal back -> to : 1
signal back to -> the : 1
to the original -> signal : 1
to the original -> algorithm : 1
to the original -> the : 1
the original signal -> is : 1
original signal is -> very : 1
signal is very -> we : 1
is very we -> provide : 1
is very we -> can : 1
very we provide -> an : 1
provide an optional -> which : 1
an optional which -> chooses : 1
optional which chooses -> the : 1
which chooses the -> transformation : 1
chooses the transformation -> note : 1
the transformation note -> that : 1
transformation note that -> parameters : 1
note that parameters -> are : 1
that parameters are -> generally : 1
parameters are generally -> bad : 1
are generally bad -> especially : 1
generally bad especially -> if : 1
bad especially if -> we : 1
especially if we -> use : 1
we use multiple -> parameters : 1
use multiple parameters -> in : 1
multiple parameters in -> a : 1
parameters in a -> function : 1
in a function -> here : 1
in a function -> does : 1
a function here -> we : 1
function here we -> just : 1
here we just -> have : 1
we just have -> one : 1
we just have -> to : 1
we just have -> a : 1
just have one -> for : 1
have one for -> the : 1
one for the -> first : 1
the first thing -> we : 4
first thing we -> do : 5
first thing we -> need : 2
do is allocate -> a : 1
is allocate a -> new : 1
a new signal -> vector : 1
new signal vector -> with : 1
signal vector with -> the : 2
signal vector with -> a : 1
with the size -> of : 1
of the initial -> csignal : 1
of the initial -> tuples : 1
the initial csignal -> csignal : 1
initial csignal csignal -> bool : 1
csignal csignal bool -> back : 1
csignal bool back -> csignal : 1
bool back csignal -> t : 1
back csignal t -> are : 1
csignal t are -> two : 1
t are two -> factors : 1
are two factors -> in : 1
two factors in -> the : 1
factors in the -> which : 1
the which always -> look : 1
the which always -> counts : 1
which always look -> the : 1
which always look -> up : 1
always look the -> pack : 1
look the pack -> them : 1
the pack them -> in : 1
pack them in -> their : 1
them in their -> own : 1
their own const -> double : 1
own const double -> pol : 1
double pol const -> double : 1
pol const double -> div : 1
const double div -> algorithm : 1
double div algorithm -> is : 1
div algorithm is -> a : 1
is a fitting -> choice : 1
a fitting choice -> for : 1
fitting choice for -> executing : 1
choice for executing -> formulas : 1
for executing formulas -> that : 1
executing formulas that -> sum : 1
formulas that sum -> up : 1
that sum up -> we : 1
sum up we -> are : 1
up we are -> going : 1
to use on -> a : 1
use on a -> range : 1
use on a -> specific : 1
on a range -> of : 1
range of numeric -> from : 1
of numeric from -> these : 1
numeric from these -> we : 1
from these we -> can : 1
these we can -> form : 1
we can form -> the : 1
can form the -> individual : 1
form the individual -> summands : 1
the individual summands -> of : 1
individual summands of -> each : 1
summands of each -> calls : 1
of each calls -> a : 1
each calls a -> binary : 1
calls a binary -> function : 1
binary function on -> every : 1
function on every -> the : 1
on every the -> first : 1
on every the -> signal : 1
every the first -> parameter : 1
the first parameter -> of : 1
first parameter of -> this : 1
current value of -> the : 1
of the part -> of : 1
part of was -> already : 1
of was already -> calculated : 1
was already calculated -> in : 1
already calculated in -> the : 1
calculated in the -> previous : 1
the previous and -> its : 1
previous and its -> second : 1
and its second -> parameter : 1
its second parameter -> is : 1
is the next -> value : 1
is the next -> complicated : 1
next value from -> the : 1
the we look -> up : 1
look up the -> value : 1
look up the -> stl : 1
look up the -> aggregate : 1
up the value -> at : 1
at the current -> multiply : 1
the current multiply -> it : 1
current multiply it -> with : 1
multiply it with -> the : 1
with the complex -> we : 1
the complex we -> return : 1
complex we return -> the : 1
we return the -> new : 1
we return the -> number : 1
we return the -> const : 1
we return the -> input : 1
we return the -> resulting : 1
we return the -> return : 1
return the new -> partly : 1
the new partly -> the : 1
new partly the -> binary : 1
partly the binary -> function : 1
binary function is -> wrapped : 1
function is wrapped -> into : 1
wrapped into lambda -> we : 1
into lambda we -> are : 1
lambda we are -> going : 1
to use different -> values : 1
use different values -> of : 1
different values of -> for : 1
values of for -> because : 1
of for because -> this : 1
of for because -> there : 1
for because this -> is : 1
is a loop -> the : 1
a loop the -> inner : 1
loop the inner -> lambda : 1
inner lambda is -> for : 1
lambda is for -> the : 2
is for the -> inner : 1
is for the -> outer : 1
for the inner -> loop : 1
the inner loop -> and : 1
inner loop and -> the : 1
loop and the -> outer : 1
and the outer -> lambda : 1
the outer lambda -> is : 1
outer lambda is -> for : 1
for the outer -> auto : 1
the outer auto -> return : 1
outer auto return -> return : 1
return return c -> pol : 1
return c pol -> k : 1
c pol k -> j : 2
pol k j -> inner : 1
pol k j -> stl : 1
pol k j -> result : 1
k j inner -> loop : 1
j inner loop -> part : 1
inner loop part -> of : 1
loop part of -> the : 1
fourier transform is -> now : 1
transform is now -> executed : 1
is now executed -> by : 1
now executed by -> for : 1
executed by for -> every : 1
by for every -> position : 1
for every position -> of : 1
every position of -> the : 1
every position of -> be : 1
the we calculate -> the : 1
calculate the sum -> of : 2
sum of all -> the : 1
sum of all -> files : 1
all the summands -> for : 1
the summands for -> positions : 1
summands for positions -> this : 1
for positions this -> idea : 1
positions this idea -> is : 1
this idea is -> wrapped : 1
idea is wrapped -> into : 1
into a lambda -> which : 1
into a lambda -> static : 1
lambda which we -> will : 1
we will execute -> for : 1
will execute for -> every : 1
execute for every -> data : 1
for every data -> point : 1
in the resulting -> fourier : 1
the resulting fourier -> transformation : 1
resulting fourier transformation -> auto : 1
fourier transformation auto -> return : 1
transformation auto return -> of : 1
auto return of -> the : 1
return of the -> fourier : 1
the fourier code -> has : 1
fourier code has -> until : 1
code has until -> this : 1
has until this -> we : 1
until this we -> only : 1
this we only -> prepared : 1
we only prepared -> a : 1
only prepared a -> lot : 1
prepared a lot -> of : 1
lot of functional -> which : 1
of functional which -> put : 1
functional which put -> to : 1
which put to -> action : 1
put to action -> an : 1
to action an -> call : 1
action an call -> will : 1
an call will -> generate : 1
call will generate -> values : 1
will generate values -> which : 1
generate values which -> is : 1
values which is -> our : 1
which is our -> outer : 1
is our outer -> the : 1
our outer the -> transformed : 1
outer the transformed -> values : 1
the transformed values -> all : 1
transformed values all -> go : 1
values all go -> to : 1
all go to -> the : 1
go to the -> vector : 1
the vector which -> we : 1
the vector which -> reduces : 1
vector which we -> then : 1
we then return -> to : 1
then return to -> the : 1
the return are -> going : 1
return are going -> to : 1
to implement some -> functions : 2
implement some functions -> that : 2
some functions that -> help : 1
some functions that -> know : 1
some functions that -> simulate : 1
functions that help -> us : 1
functions that help -> to : 1
that help us -> set : 1
help us set -> up : 1
set up function -> objects : 1
up function objects -> for : 1
objects for signal -> the : 1
for signal the -> first : 1
signal the first -> one : 1
first one is -> signal : 1
first one is -> an : 1
first one is -> static : 1
one is signal -> it : 1
is signal it -> returns : 1
signal it returns -> a : 1
it returns a -> lambda : 1
it returns a -> negative : 1
it returns a -> pointer : 1
it returns a -> variable : 1
it returns a -> callable : 2
lambda expression generate -> a : 1
expression generate a -> cosine : 1
generate a cosine -> signal : 2
a cosine signal -> with : 1
a cosine signal -> and : 1
cosine signal with -> the : 1
signal with the -> period : 1
with the period -> length : 1
the period length -> provided : 1
period length provided -> as : 1
length provided as -> a : 1
as a the -> signal : 1
a the signal -> itself : 1
the signal itself -> can : 1
the signal itself -> and : 1
signal itself can -> be : 1
itself can be -> of : 1
can be of -> arbitrary : 1
can be of -> the : 1
be of arbitrary -> but : 1
of arbitrary but -> it : 1
arbitrary but it -> has : 1
has a fixed -> period : 1
a fixed period -> a : 1
fixed period a -> period : 1
period a period -> length : 1
a period length -> of : 1
period length of -> means : 1
period length of -> note : 1
length of means -> that : 1
of means that -> the : 2
that the signal -> will : 1
the signal will -> repeat : 1
signal will repeat -> itself : 1
will repeat itself -> after : 1
repeat itself after -> the : 1
itself after the -> lambda : 1
after the lambda -> expression : 1
lambda expression does -> not : 1
expression does not -> accept : 1
does not accept -> any : 2
does not accept -> a : 2
does not accept -> an : 1
not accept any -> we : 1
not accept any -> arguments : 1
accept any we -> can : 1
any we can -> call : 1
it and for -> every : 1
and for every -> it : 2
and for every -> we : 2
for every it -> returns : 1
for every it -> will : 1
every it returns -> us : 1
returns us the -> signal : 1
returns us the -> first : 1
returns us the -> user : 1
returns us the -> same : 1
returns us the -> path : 1
us the signal -> data : 1
the signal data -> point : 1
signal data point -> of : 1
the next point -> in : 2
next point in -> static : 1
next point in -> time : 1
point in static -> auto : 1
in static auto -> return : 1
static auto return -> mutable : 2
static auto return -> return : 6
auto return mutable -> return : 3
return mutable return -> signal : 1
return mutable return -> an : 1
return mutable return -> instance : 1
mutable return signal -> we : 1
return signal we -> are : 1
signal we are -> going : 1
going to the -> square : 1
going to the -> second : 1
to the square -> it : 1
the square it -> oscillates : 1
square it oscillates -> between : 1
it oscillates between -> the : 1
oscillates between the -> values : 1
between the values -> and : 1
values and has -> no : 1
and has no -> other : 1
has no other -> values : 1
no other values -> than : 1
other values than -> the : 1
than the formula -> looks : 1
the formula looks -> but : 1
formula looks but -> it : 1
looks but it -> simply : 1
but it simply -> transforms : 1
it simply transforms -> the : 1
simply transforms the -> linearly : 1
transforms the linearly -> value : 1
the linearly value -> to : 1
linearly value to -> and : 1
value to and -> with : 1
to and with -> an : 1
and with an -> oscillating : 1
with an oscillating -> period : 1
an oscillating period -> length : 1
oscillating period length -> of : 1
length of note -> that : 1
that we initialize -> to : 1
we initialize to -> a : 1
initialize to a -> different : 1
to a different -> value : 1
to a different -> if : 1
a different value -> this : 1
a different value -> at : 1
a different value -> original : 1
different value this -> this : 1
value this this -> our : 1
this this our -> square : 1
this our square -> wave : 1
our square wave -> starts : 1
square wave starts -> at : 1
wave starts at -> the : 1
starts at the -> phase : 1
at the phase -> where : 1
the phase where -> its : 1
phase where its -> output : 1
where its output -> values : 1
its output values -> begin : 1
its output values -> are : 1
output values begin -> at : 1
values begin at -> static : 1
begin at static -> auto : 1
at static auto -> return : 1
mutable return an -> actual : 1
return an actual -> signal : 1
return an actual -> position : 1
an actual signal -> from : 1
an actual signal -> vector : 1
actual signal from -> such : 1
signal from such -> generators : 1
from such generators -> can : 1
such generators can -> be : 1
generators can be -> achieved : 1
can be achieved -> by : 1
be achieved by -> allocating : 1
achieved by allocating -> a : 1
a new vector -> and : 1
new vector and -> filling : 1
vector and filling -> it : 1
and filling it -> with : 1
filling it with -> the : 1
with the values -> generated : 1
with the values -> other : 1
the values generated -> from : 1
values generated from -> repeating : 1
generated from repeating -> signal : 1
from repeating signal -> generator : 1
repeating signal generator -> function : 1
signal generator function -> does : 1
generator function does -> this : 1
function does this -> it : 1
does this it -> accepts : 1
accepts a iterator -> pair : 1
accepts a iterator -> and : 1
pair and a -> generator : 1
and a generator -> for : 1
a generator for -> every : 1
generator for every -> valid : 1
for every valid -> iterator : 1
every valid iterator -> it : 1
valid iterator it -> does : 1
iterator it does -> by : 1
it does by -> wrapping : 1
does by wrapping -> this : 1
by wrapping this -> code : 1
wrapping this code -> into : 1
this code into -> a : 1
code into a -> we : 1
code into a -> but : 1
into a we -> can : 4
we can easily -> generate : 1
can easily generate -> signal : 1
easily generate signal -> template : 1
generate signal template -> static : 1
signal template static -> csignal : 1
template static csignal -> f : 1
static csignal f -> csignal : 1
csignal f csignal -> r : 1
f csignal r -> return : 2
csignal r return -> the : 1
csignal r return -> helper : 1
r return the -> we : 1
return the we -> need : 1
need to print -> the : 1
need to print -> line : 1
print the resulting -> we : 1
print the resulting -> time : 1
the resulting we -> can : 1
resulting we can -> simply : 1
can simply print -> a : 1
can simply print -> it : 1
simply print a -> signal : 1
print a signal -> by : 1
a signal by -> copying : 1
signal by copying -> its : 1
by copying its -> values : 1
copying its values -> into : 1
its values into -> an : 1
values into an -> output : 1
into an output -> stream : 2
into an output -> to : 1
into an output -> const : 1
an output stream -> we : 1
an output stream -> and : 1
an output stream -> reference : 2
an output stream -> iterator : 1
an output stream -> which : 2
an output stream -> iterators : 1
output stream we -> need : 1
stream we need -> to : 1
transform the data -> first : 1
data first because -> the : 1
first because the -> data : 1
because the data -> points : 1
the data points -> of : 1
data points of -> our : 1
points of our -> signals : 1
points of our -> the : 1
of our signals -> are : 1
our signals are -> complex : 1
signals are complex -> value : 1
are complex value -> at : 1
complex value at -> this : 1
are only interested -> in : 1
only interested in -> the : 1
interested in the -> real : 1
in the real -> value : 1
the real value -> part : 1
real value part -> of : 1
value part of -> every : 1
part of every -> data : 1
of every data -> we : 1
every data we -> throw : 1
data we throw -> it : 1
we throw it -> through : 1
throw it through -> which : 1
it through which -> extracts : 1
through which extracts -> only : 1
which extracts only -> this : 1
extracts only this -> static : 1
only this static -> void : 1
this static void -> csignal : 1
this static void -> cout : 1
this static void -> for : 1
static void csignal -> auto : 1
void csignal auto -> return : 1
csignal auto return -> cout : 1
auto return cout -> fourier : 1
return cout fourier -> formula : 1
cout fourier formula -> is : 1
fourier formula is -> now : 1
formula is now -> but : 1
is now but -> we : 1
now but we -> have : 1
but we have -> no : 1
have no signals -> to : 1
no signals to -> transform : 1
signals to transform -> that : 1
to transform that -> is : 1
transform that is -> what : 1
that is what -> we : 1
we do in -> the : 1
we do in -> this : 2
the main first -> define : 1
main first define -> a : 1
first define a -> standard : 1
first define a -> function : 1
first define a -> large : 1
define a standard -> signal : 1
a standard signal -> length : 1
standard signal length -> to : 1
signal length to -> which : 1
length to which -> all : 1
to which all -> the : 1
which all the -> signals : 1
all the signals -> int : 1
the signals int -> const : 1
signals int const -> transform : 1
int const transform -> and : 1
const transform and -> print : 1
transform and print -> which : 1
and print which -> happens : 1
print which happens -> in : 1
which happens in -> the : 1
the next three -> the : 1
next three the -> first : 1
the first step -> is : 2
first step is -> to : 1
first step is -> implementing : 1
is to generate -> a : 1
cosine signal and -> a : 1
signal and a -> square : 1
signal and a -> signal : 1
and a square -> wave : 2
a square wave -> both : 1
a square wave -> signal : 1
a square wave -> has : 1
square wave both -> have : 1
wave both have -> the : 1
both have the -> same : 1
the same total -> signal : 1
same total signal -> length : 1
total signal length -> and : 1
signal length and -> period : 1
length and period -> auto : 1
and period auto -> cosine : 1
period auto cosine -> auto : 1
auto cosine auto -> have : 1
cosine auto have -> a : 1
auto have a -> cosine : 1
have a cosine -> function : 1
a cosine function -> and : 1
cosine function and -> a : 1
function and a -> square : 1
square wave signal -> in : 1
wave signal in -> order : 1
signal in order -> to : 1
order to generate -> a : 2
generate a third -> one : 1
a third one -> in : 1
third one in -> the : 1
one in the -> middle : 2
the middle between -> we : 1
the middle between -> integers : 1
middle between we -> take : 1
between we take -> the : 1
take the square -> wave : 1
the square wave -> calculate : 1
square wave calculate -> its : 1
wave calculate its -> fourier : 1
calculate its fourier -> transform : 1
its fourier transform -> in : 1
fourier transform in -> the : 1
transform in the -> fourier : 1
in the fourier -> transform : 1
fourier transform of -> a : 1
transform of a -> square : 1
of a square -> wave : 1
square wave has -> a : 1
wave has a -> specific : 1
has a specific -> and : 1
a specific and -> we : 1
a specific and -> it : 1
a specific and -> the : 1
specific and we -> are : 1
and we are -> going : 2
and we are -> not : 2
and we are -> safe : 1
and we are -> two : 1
going to manipulate -> it : 1
to manipulate it -> a : 1
manipulate it a -> all : 1
it a all -> items : 1
items from till -> are : 1
from till are -> set : 1
till are set -> to : 1
are set to -> the : 1
set to the -> rest : 1
to the rest -> remains : 1
the rest remains -> transforming : 1
rest remains transforming -> this : 1
remains transforming this -> altered : 1
transforming this altered -> fourier : 1
this altered fourier -> transformation : 1
altered fourier transformation -> back : 1
fourier transformation back -> to : 1
transformation back to -> the : 1
to the signal -> time : 1
the signal time -> representation : 1
signal time representation -> will : 1
time representation will -> give : 1
representation will give -> us : 1
will give us -> a : 1
will give us -> some : 1
give us a -> different : 1
us a different -> we : 1
see how that -> looks : 1
see how that -> tampers : 1
how that looks -> in : 1
that looks in -> the : 1
looks in the -> auto : 1
in the auto -> fill : 1
the auto fill -> auto : 1
auto fill auto -> mid : 1
fill auto mid -> we : 1
auto mid we -> have : 1
mid we have -> three : 1
we have three -> and : 1
have three and -> for : 1
three and for -> every : 1
for every we -> print : 1
for every we -> checked : 1
for every we -> generate : 1
every we print -> the : 1
print the signal -> itself : 1
signal itself and -> its : 1
itself and its -> fourier : 1
and its fourier -> the : 1
its fourier the -> output : 1
fourier the output -> of : 1
the whole program -> will : 1
the whole program -> does : 1
the whole program -> runs : 2
the whole program -> from : 1
the whole program -> first : 1
whole program will -> consist : 1
program will consist -> of : 1
consist of six -> very : 1
of six very -> long : 1
six very long -> lines : 1
very long lines -> of : 1
long lines of -> printed : 1
long lines of -> signal : 1
lines of printed -> double : 1
of printed double -> value : 1
printed double value -> and : 1
double value and -> running : 1
the terminal getting -> filled : 1
terminal getting filled -> with : 1
getting filled with -> lots : 1
filled with lots -> of : 2
with lots of -> numeric : 1
with lots of -> leading : 1
lots of numeric -> if : 1
of numeric if -> we : 1
numeric if we -> plot : 1
if we plot -> the : 1
following it program -> contains : 1
following it program -> basically : 1
it program contains -> two : 1
program contains two -> complicated : 1
contains two complicated -> one : 1
two complicated one -> is : 1
complicated one is -> the : 1
is the fourier -> transformation : 1
transformation and the -> other : 1
and the other -> is : 1
and the other -> call : 1
and the other -> information : 1
and the other -> absolute : 1
and the other -> accepts : 1
and the other -> avoids : 1
and the other -> was : 1
the other is -> the : 1
the other is -> different : 1
other is the -> generation : 1
is the generation -> of : 1
the generation of -> signals : 1
generation of signals -> with : 1
of signals with -> mutable : 1
signals with mutable -> lambda : 1
with mutable lambda -> concentrate : 1
mutable lambda concentrate -> on : 1
lambda concentrate on -> the : 1
on the fourier -> transformation : 1
fourier transformation the -> core : 1
transformation the core -> of : 1
the core of -> the : 1
core of the -> raw : 1
of the raw -> loop : 1
the raw loop -> implementation : 1
raw loop implementation -> we : 1
loop implementation we -> did : 1
implementation we did -> not : 1
did not use -> for : 1
did not use -> them : 1
did not use -> so : 1
not use for -> our : 1
use for our -> implementation : 1
for our implementation -> but : 1
our implementation but -> had : 1
implementation but had -> a : 1
but had a -> look : 1
had a look -> at : 1
had a look -> it : 1
look at in -> the : 1
at in the -> looks : 1
in the looks -> like : 1
the looks like -> the : 1
like the k -> k : 1
the k k -> for : 1
k j stl -> and : 1
j stl and -> we : 1
stl and we -> wrote : 1
and we wrote -> which : 1
we wrote which -> can : 1
wrote which can -> be : 1
can be summarized -> to : 1
be summarized to -> the : 1
summarized to the -> following : 1
the following pseudo -> c : 1
following pseudo c -> pol : 1
pseudo c pol -> k : 1
k j result -> is : 1
j result is -> exactly : 1
result is exactly -> the : 1
the same compared -> loop : 1
same compared loop -> this : 1
compared loop this -> is : 1
this is arguably -> an : 1
is arguably an -> example : 1
arguably an example -> situation : 1
an example situation -> where : 1
example situation where -> the : 1
situation where the -> strict : 1
where the strict -> use : 1
the strict use -> of : 1
strict use of -> stl : 1
stl algorithms does -> lead : 1
algorithms does lead -> to : 1
lead to better -> this : 1
to better this -> algorithm : 1
better this algorithm -> implementation : 1
this algorithm implementation -> is : 1
algorithm implementation is -> agnostic : 1
implementation is agnostic -> over : 1
is agnostic over -> the : 1
agnostic over the -> data : 1
data structure it -> would : 1
structure it would -> also : 1
work on lists -> that : 1
on lists that -> would : 1
lists that would -> not : 1
would not make -> too : 1
would not make -> sense : 1
not make too -> much : 1
make too much -> sense : 1
too much sense -> in : 1
much sense in -> our : 1
sense in our -> another : 1
in our another -> upside : 1
our another upside -> is : 1
another upside is -> that : 1
upside is that -> the : 1
that the stl -> algorithms : 1
that the stl -> to : 1
stl algorithms are -> easy : 1
stl algorithms are -> not : 1
algorithms are easy -> to : 1
are easy to -> we : 1
to we examine -> in : 1
we examine in -> another : 1
examine in another -> chapter : 1
in another chapter -> of : 1
another chapter of -> this : 1
of this whereas -> have : 1
this whereas have -> to : 1
whereas have to -> be : 1
to be restructured -> to : 1
be restructured to -> support : 1
restructured to support -> multiprocessing : 1
to support multiprocessing -> we : 1
support multiprocessing we -> use : 1
multiprocessing we use -> external : 1
we use external -> libraries : 1
use external libraries -> like : 1
external libraries like -> for : 1
libraries like for -> these : 1
like for these -> do : 1
for these do -> actually : 1
these do actually -> restructure : 1
do actually restructure -> the : 1
actually restructure the -> loops : 1
restructure the loops -> for : 1
the loops for -> other : 1
loops for other -> complicated : 1
for other complicated -> part : 1
other complicated part -> was : 1
complicated part was -> the : 1
part was the -> signal : 1
was the signal -> have : 1
the signal have -> another : 1
signal have another -> look : 1
have another look -> at : 3
another look at -> auto : 1
another look at -> our : 1
another look at -> it : 1
at auto return -> mutable : 1
mutable return instance -> of : 1
return instance of -> the : 1
of the lambda -> expression : 1
of the lambda -> expressions : 1
lambda expression represents -> a : 1
expression represents a -> function : 1
represents a function -> object : 1
function object its -> own : 1
object its own -> state : 1
its own state -> on : 1
own state on -> every : 1
state on every -> its : 1
on every its -> state : 1
every its state -> consists : 1
its state consists -> of : 1
state consists of -> the : 1
consists of the -> and : 1
consists of the -> following : 1
and the variable -> is : 1
variable is the -> one : 1
is the one -> which : 1
one which is -> modified : 1
one which is -> usually : 1
which is modified -> on : 1
is modified on -> every : 1
modified on every -> the : 1
every the signal -> has : 1
signal has a -> different : 1
has a different -> value : 1
different value at -> every : 1
value at every -> time : 1
at every time -> and : 1
every time and -> represents : 1
time and represents -> the : 1
and represents the -> increasing : 1
represents the increasing -> time : 1
the increasing time -> in : 1
increasing time in -> order : 1
time in order -> to : 1
to get an -> actual : 1
to get an -> opening : 1
to get an -> member : 1
get an actual -> signal : 1
actual signal vector -> out : 1
signal vector out -> of : 1
out of we -> created : 1
of we created -> the : 1
we created the -> static : 1
created the static -> auto : 1
the static auto -> f : 1
static auto f -> csignal : 1
auto f csignal -> r : 1
r return helper -> allocates : 1
return helper allocates -> a : 1
helper allocates a -> signal : 1
allocates a signal -> vector : 1
a signal vector -> with : 1
vector with a -> length : 1
with a length -> of : 1
a length of -> calls : 1
length of calls -> to : 1
of calls to -> fill : 1
calls to fill -> it : 1
to fill it -> with : 1
to fill it -> into : 1
it with data -> for : 1
with data for -> every : 1
data for every -> item : 1
every item of -> the : 1
the vector it -> calls : 1
vector it calls -> the : 1
calls the function -> object : 1
just the kind -> of : 1
the kind of -> function : 1
of function object -> we : 1
object we can -> create : 1
object we can -> even : 1
can create with -> the : 1
create with the -> stl : 1
the stl way -> does : 1
stl way does -> make : 1
way does make -> this : 1
does make this -> code : 1
make this code -> more : 1
this code more -> as : 1
code more as -> soon : 1
more as soon -> as : 1
as the ranges -> library : 1
the ranges library -> joins : 1
ranges library joins -> the : 1
library joins the -> stl : 1
joins the stl -> club : 1
the stl club -> is : 1
stl club is -> hopefully : 1
club is hopefully -> the : 1
is hopefully the -> case : 1
hopefully the case -> with : 1
the case with -> this : 1
the case with -> modern : 1
case with this -> will : 1
with this will -> most : 1
this will most -> probably : 1
will most probably -> the : 1
will most probably -> see : 1
will most probably -> never : 1
will most probably -> have : 1
most probably the -> error : 1
probably the error -> sum : 1
of two are -> different : 1
two are different -> possibilities : 1
are different possibilities -> to : 1
possibilities to calculate -> the : 1
calculate the a -> target : 1
the a target -> value : 1
a target value -> and : 1
target value and -> an : 1
value and an -> actual : 1
and an actual -> measuring : 1
an actual measuring -> the : 1
actual measuring the -> difference : 1
measuring the difference -> between : 1
difference between signals -> consisting : 1
between signals consisting -> of : 1
signals consisting of -> many : 1
consisting of many -> data : 1
of many data -> points : 1
many data points -> usually : 1
data points usually -> involves : 1
points usually involves -> loops : 1
usually involves loops -> and : 1
involves loops and -> subtraction : 1
loops and subtraction -> of : 1
and subtraction of -> corresponding : 1
subtraction of corresponding -> data : 1
of corresponding data -> and : 1
corresponding data and -> so : 1
data and so -> simple : 1
and so simple -> formula : 1
so simple formula -> to : 1
simple formula to -> calculate : 1
formula to calculate -> this : 1
to calculate this -> error : 1
calculate this error -> between : 1
this error between -> a : 1
error between a -> signal : 1
between a signal -> and : 1
and a signal -> is : 1
signal is the -> every : 1
is the every -> it : 1
the every it -> calculates : 1
every it calculates -> squares : 1
it calculates squares -> that : 1
calculates squares that -> difference : 1
squares that difference -> negative : 1
that difference negative -> and : 1
difference negative and -> positive : 1
negative and positive -> differences : 1
and positive differences -> become : 1
positive differences become -> sums : 1
differences become sums -> those : 1
become sums those -> values : 1
sums those values -> this : 1
those values this -> is : 1
values this is -> again : 1
this is again -> a : 1
is again a -> situation : 1
is again a -> reference : 1
again a situation -> where : 1
a situation where -> one : 1
situation where one -> could : 1
where one could -> use : 1
one could use -> a : 1
could use a -> but : 1
use a but -> for : 1
a but for -> fun : 1
but for fun -> we : 1
for fun we -> will : 1
fun we will -> do : 1
will do an -> stl : 1
do an stl -> the : 1
an stl the -> good : 1
stl the good -> thing : 1
the good thing -> is : 2
good thing is -> that : 2
is that we -> get : 1
is that we -> always : 1
is that we -> cannot : 1
is that we -> can : 3
is that we -> transform : 1
is that we -> do : 2
is that we -> need : 2
is that we -> use : 1
is that we -> must : 1
we get independence -> for : 1
get independence for -> free : 1
independence for free -> this : 1
for free this -> our : 1
free this our -> algorithm : 1
this our algorithm -> will : 1
our algorithm will -> work : 1
algorithm will work -> on : 1
will work on -> vectors : 1
work on vectors -> and : 1
on vectors and -> on : 1
vectors and on -> data : 1
and on data -> where : 1
on data where -> no : 1
data where no -> direct : 1
where no direct -> indexing : 1
no direct indexing -> is : 1
direct indexing is -> to : 1
indexing is to -> do : 1
is to do -> this : 2
to create two -> signals : 1
create two signals -> and : 1
two signals and -> calculate : 1
signals and calculate -> their : 1
and calculate their -> error : 1
and calculate their -> we : 1
calculate their error -> the : 1
their error the -> include : 1
error the include -> statements : 1
the include statements -> come : 1
include statements come -> we : 1
statements come we -> declare : 1
come we declare -> that : 2
using namespace are -> going : 4
namespace are going -> to : 4
going to calculate -> the : 1
calculate the error -> sum : 1
calculate the error -> in : 1
calculate the error -> the : 1
of two the -> two : 1
two the two -> signals : 1
the two signals -> will : 1
two signals will -> be : 1
signals will be -> a : 1
be a copy -> of : 1
copy of but -> with : 1
of but with -> a : 1
but with a -> different : 1
but with a -> let : 1
with a different -> value : 1
different value original -> sine : 1
value original sine -> wave : 1
original sine wave -> is : 1
sine wave is -> saved : 1
wave is saved -> in : 1
vector of variables -> and : 1
vector of variables -> to : 1
vector of variables -> auto : 1
of variables and -> its : 1
variables and its -> copy : 1
and its copy -> is : 1
its copy is -> saved : 1
copy is saved -> in : 1
vector of because -> copying : 1
of because copying -> a : 1
because copying a -> value : 1
copying a value -> from : 1
a value from -> a : 1
a value from -> we : 1
value from a -> variable : 1
from a variable -> to : 1
variable to an -> variable : 1
to an variable -> cuts : 1
an variable cuts -> its : 1
variable cuts its -> decimal : 1
cuts its decimal -> part : 1
its decimal part -> after : 1
decimal part after -> the : 1
part after the -> we : 1
after the we -> have : 1
we have some -> name : 1
have some name -> the : 1
some name the -> vector : 1
name the vector -> of : 1
the vector of -> values : 2
the vector of -> variables : 2
the vector of -> v : 1
vector of values -> which : 2
of values which -> stands : 2
values which stands -> and : 1
values which stands -> the : 1
which stands and -> the : 1
stands and the -> vector : 1
which stands the -> error : 1
stands the error -> sum : 1
error sum will -> then : 1
sum will then -> later : 1
will then later -> tell : 1
then later tell -> us : 1
later tell us -> how : 1
tell us how -> large : 1
us how large -> the : 1
how large the -> loss : 1
large the loss -> actually : 1
the loss actually -> int : 1
loss actually int -> const : 1
actually int const -> as : 1
int const as -> a : 1
const as a -> for : 1
as a for -> analog : 1
a for analog -> ds : 1
for analog ds -> d : 1
analog ds d -> for : 1
ds d for -> order : 1
d for order -> to : 1
for order to -> generate : 1
for order to -> get : 1
generate a sine -> wave : 1
a sine wave -> we : 1
sine wave we -> implement : 1
wave we implement -> a : 1
a little lambda -> expression : 1
little lambda expression -> with : 1
lambda expression with -> a : 1
expression with a -> counter : 1
a counter we -> can : 1
counter we can -> call : 1
call it as -> often : 1
it as often -> as : 1
as we and -> for : 1
we and for -> every : 1
every it will -> return : 1
will return us -> the : 3
will return us -> a : 1
us the value -> for : 1
the value for -> the : 2
the value for -> with : 1
point in time -> of : 1
point in time -> and : 1
point in time -> we : 1
point in time -> where : 1
in time of -> a : 1
time of a -> sine : 1
sine the call -> fills : 1
the call fills -> the : 1
call fills the -> signal : 1
fills the signal -> vector : 1
the signal vector -> with : 1
with the generated -> and : 1
the generated and -> the : 1
generated and the -> call : 1
and the call -> copies : 1
the call copies -> all : 1
call copies all -> the : 1
of variables to -> the : 1
variables to the -> vector : 1
of variables auto -> mutable : 1
variables auto mutable -> return : 1
auto mutable return -> first : 1
auto mutable return -> use : 1
mutable return first -> print : 1
return first print -> the : 1
print the as -> this : 1
the as this -> they : 1
as this they -> can : 1
this they can -> be : 1
can be plotted -> cout : 1
be plotted cout -> cout : 1
plotted cout cout -> to : 1
cout cout to -> the : 1
cout to the -> actual : 1
the actual error -> we : 1
actual error we -> use : 1
error we use -> it : 1
use it can -> easily : 1
easily be adapted -> to : 1
be adapted to -> calculate : 1
adapted to calculate -> the : 1
calculate the difference -> between : 1
calculate the difference -> square : 1
difference between every -> two : 1
between every two -> corresponding : 1
every two corresponding -> elements : 1
two corresponding elements -> of : 1
corresponding elements of -> our : 1
elements of our -> signal : 1
of our signal -> it : 1
our signal it -> will : 1
signal it will -> iterate : 1
it will iterate -> through : 2
iterate through both -> the : 1
through both the -> pick : 1
both the pick -> items : 1
the pick items -> at : 1
pick items at -> the : 1
the same corresponding -> positions : 1
same corresponding positions -> in : 1
corresponding positions in -> the : 1
in the calculate -> the : 1
the calculate the -> difference : 1
the difference square -> and : 1
difference square and -> accumulate : 1
square and accumulate -> the : 1
and accumulate the -> cout : 1
accumulate the cout -> double : 1
the cout double -> return : 1
cout double return -> and : 1
double return and -> running : 1
return and running -> the : 1
return and running -> gives : 1
the program gives -> us : 3
program gives us -> two : 1
program gives us -> the : 2
gives us two -> long : 1
us two long -> lines : 1
two long lines -> of : 1
lines of signal -> a : 1
of signal a -> third : 1
signal a third -> which : 1
a third which -> contains : 1
a third which -> is : 1
third which contains -> a : 1
contains a single -> output : 1
a single output -> which : 1
single output which -> is : 1
output which is -> the : 1
is the error -> between : 1
the error between -> both : 1
error between both -> the : 1
between both the -> the : 1
between both the -> characters : 1
the the error -> is : 1
the error is -> if : 1
error is if -> we : 1
if we calculate -> the : 3
the error in -> a : 1
error in a -> continuous : 1
in a continuous -> first : 1
a continuous first -> for : 1
continuous first for -> the : 1
first for the -> first : 1
the first pair -> of : 1
the first pair -> item : 1
first pair of -> then : 1
pair of then -> for : 1
of then for -> the : 2
then for the -> first : 2
the first of -> then : 1
the first of -> and : 1
first of then -> for : 1
first of and -> so : 1
and so then -> we : 1
so then we -> get : 1
get the accumulated -> error : 1
the accumulated error -> which : 1
accumulated error which -> is : 1
error which is -> visible : 1
which is visible -> on : 1
is visible on -> the : 1
visible on the -> plotted : 1
on the plotted -> graph : 1
the plotted graph -> as : 1
plotted graph as -> it : 1
graph as it -> this : 1
as it this -> we : 1
it this we -> stuffed : 1
it this we -> used : 1
it this we -> first : 1
it this we -> simply : 1
it this we -> iterated : 1
it this we -> a : 1
this we stuffed -> the : 1
we stuffed the -> task : 1
stuffed the task -> of : 1
task of looping -> through : 1
of looping through -> two : 1
looping through two -> getting : 1
through two getting -> the : 1
two getting the -> difference : 1
getting the difference -> corresponding : 1
the difference corresponding -> squaring : 1
difference corresponding squaring -> and : 1
corresponding squaring and -> finally : 1
squaring and finally -> summing : 1
and finally summing -> them : 1
finally summing them -> up : 1
summing them up -> into : 1
them up into -> one : 1
up into one -> on : 1
into one on -> the : 1
one on the -> the : 1
the only code -> we : 1
only code we -> crafted : 1
code we crafted -> ourselves : 1
we crafted ourselves -> lambda : 1
crafted ourselves lambda -> expression : 1
ourselves lambda expression -> double : 1
lambda expression double -> return : 1
expression double return -> which : 1
double return which -> takes : 1
return which takes -> the : 1
which takes the -> difference : 1
which takes the -> current : 1
takes the difference -> of : 1
the difference of -> its : 1
difference of its -> arguments : 1
of its arguments -> and : 1
its arguments and -> squares : 1
arguments and squares -> glance : 1
and squares glance -> at : 1
squares glance at -> a : 1
glance at a -> possible : 1
glance at a -> simple : 1
at a possible -> implementation : 2
a possible implementation -> of : 2
possible implementation of -> shows : 1
possible implementation of -> typename : 1
implementation of shows -> us : 1
of shows us -> why : 1
shows us why -> and : 1
us why and -> how : 1
why and how -> this : 1
and how this -> class : 1
how this class -> class : 1
this class class -> t : 1
class class t -> t : 1
class t t -> f : 1
t t f -> g : 1
t f g -> val : 1
f g val -> algorithm : 1
g val algorithm -> accepts : 1
val algorithm accepts -> a : 1
algorithm accepts a -> pair : 1
algorithm accepts a -> iterator : 1
accepts a pair -> of : 3
of and another -> begin : 1
and another begin -> iterator : 1
another begin iterator -> of : 1
iterator of in -> our : 1
of in our -> they : 1
in our they -> are : 1
our they are -> the : 1
are the vectors -> from : 1
the vectors from -> which : 1
vectors from which -> we : 1
the error the -> next : 1
error the next -> character : 1
the next character -> is : 1
the next character -> and : 1
next character is -> the : 1
character is the -> initial : 1
character is the -> first : 1
character is the -> newline : 1
is the initial -> we : 1
the initial we -> have : 1
initial we have -> initialized : 1
we have initialized -> it : 1
have initialized it -> to : 1
initialized it to -> the : 1
to the algorithm -> accepts : 1
the algorithm accepts -> two : 1
algorithm accepts two -> binary : 1
accepts two binary -> namely : 1
two binary namely -> and : 1
binary namely and -> this : 1
namely and this -> we : 1
and this we -> might : 1
and this we -> redefine : 1
and this we -> will : 1
this we might -> realize : 1
we might realize -> that : 1
might realize that -> this : 1
realize that this -> algorithm : 1
this algorithm is -> really : 1
this algorithm is -> a : 1
algorithm is really -> similar : 1
is really similar -> to : 1
to the only -> difference : 1
is that works -> on : 1
that works on -> only : 1
works on only -> if : 1
on only if -> we : 1
only if we -> exchange : 1
if we exchange -> the : 1
we exchange the -> statement : 1
exchange the statement -> with : 1
the statement with -> then : 1
statement with then -> we : 1
then we have -> basically : 1
then we have -> a : 1
then we have -> to : 1
we have basically -> restored : 1
have basically restored -> the : 1
basically restored the -> we : 1
restored the we -> regard : 1
the we regard -> as : 1
we regard as -> a : 1
regard as a -> version : 1
as a version -> of : 1
version of a -> pair : 1
of a pair -> of : 1
pair of input -> our : 1
pair of input -> and : 1
of input our -> the : 1
input our the -> function : 1
our the function -> is : 1
our the function -> of : 1
function is and -> for : 1
is and for -> we : 1
and for we -> chose : 1
and for we -> declare : 1
for we chose -> because : 1
because we want -> all : 1
because we want -> to : 3
because we want -> the : 1
we want all -> the : 1
want all the -> squares : 1
all the squares -> to : 1
the squares to -> be : 1
squares to be -> summed : 1
to be summed -> an : 1
be summed an -> ascii : 1
summed an ascii -> mandelbrot : 1
ascii mandelbrot the -> mathematician : 1
mandelbrot the mathematician -> mandelbrot : 1
the mathematician mandelbrot -> coined : 1
mathematician mandelbrot coined -> the : 1
mandelbrot coined the -> term : 1
coined the term -> a : 1
the term a -> fractal : 1
term a fractal -> is : 1
a fractal is -> a : 1
fractal is a -> mathematical : 1
a mathematical figure -> or : 1
mathematical figure or -> which : 1
figure or which -> has : 1
or which has -> certain : 1
which has certain -> interesting : 1
has certain interesting -> mathematical : 1
certain interesting mathematical -> but : 1
interesting mathematical but -> in : 1
mathematical but in -> the : 1
but in the -> it : 1
the it just -> looks : 1
it just looks -> like : 1
just looks like -> a : 1
like a piece -> of : 1
a piece of -> fractals : 1
piece of fractals -> also : 1
of fractals also -> look : 1
fractals also look -> when : 1
also look when -> being : 1
look when being -> zoomed : 1
when being zoomed -> one : 1
being zoomed one -> of : 1
zoomed one of -> the : 1
of the most -> popular : 1
the most popular -> fractals : 1
most popular fractals -> is : 1
popular fractals is -> the : 1
fractals is the -> which : 1
the which can -> be : 1
can be seen -> on : 1
be seen on -> the : 1
seen on the -> following : 1
on the following -> of : 1
on the following -> return : 1
on the following -> line : 1
the following of -> the : 1
following of the -> mandelbrot : 1
of the mandelbrot -> set : 1
of the mandelbrot -> for : 1
the mandelbrot set -> can : 1
the mandelbrot set -> consists : 1
the mandelbrot set -> exists : 1
the mandelbrot set -> very : 1
mandelbrot set can -> be : 1
set can be -> generated : 1
can be generated -> by : 1
be generated by -> iterating : 1
be generated by -> a : 1
generated by iterating -> a : 1
by iterating a -> specific : 1
iterating a specific -> the : 1
specific the mandelbrot -> set : 1
mandelbrot set consists -> of : 1
set consists of -> all : 1
consists of all -> such : 1
of all such -> values : 1
all such values -> which : 1
such values which -> the : 1
values which the -> formula : 1
which the formula -> if : 1
the formula if -> it : 1
formula if it -> is : 1
it is applied -> often : 1
is applied often -> this : 1
applied often this -> is : 1
often this is -> the : 1
is the colored -> part : 1
the colored part -> of : 1
colored part of -> the : 1
of the some -> values : 1
the some values -> converge : 1
some values converge -> some : 1
values converge some -> converge : 1
converge some converge -> so : 1
some converge so -> they : 1
converge so they -> can : 1
so they can -> be : 2
can be visualized -> with : 1
be visualized with -> different : 1
visualized with different -> some : 1
with different some -> do : 1
different some do -> not : 1
some do not -> converge : 1
do not converge -> at : 1
not converge at -> are : 1
converge at are -> painted : 1
at are painted -> stl : 1
are painted stl -> comes : 1
painted stl comes -> with : 1
with the useful -> and : 1
the useful and -> we : 1
useful and we -> will : 1
we will try -> to : 1
we will try -> different : 1
try to implement -> the : 1
implement the formula -> without : 1
the formula without -> explicit : 1
formula without explicit -> just : 1
without explicit just -> for : 1
explicit just for -> the : 1
sake of getting -> to : 1
of getting to -> know : 1
getting to know -> the : 1
know the stl -> to : 1
do this are -> going : 1
this are going -> to : 2
print the same -> image : 1
the same image -> from : 1
same image from -> the : 1
image from the -> wall : 1
from the wall -> poster : 1
the wall poster -> as : 1
wall poster as -> a : 1
poster as a -> little : 1
a little piece -> of : 1
little piece of -> ascii : 1
piece of ascii -> art : 1
of ascii art -> in : 1
ascii art in -> the : 1
art in the -> we : 1
the we include -> all : 1
using namespace mandelbrot -> set : 1
namespace mandelbrot set -> and : 1
mandelbrot set and -> formula : 1
set and formula -> operate : 1
and formula operate -> on : 1
formula operate on -> complex : 1
operate on complex -> we : 1
on complex we -> define : 1
complex we define -> a : 1
define a type -> to : 1
define a type -> that : 1
a type to -> be : 1
type to be -> of : 1
be of class -> specializing : 1
of class specializing -> on : 1
class specializing on -> double : 1
specializing on double -> using : 1
on double using -> cmplx : 1
double using cmplx -> is : 1
using cmplx is -> possible : 1
cmplx is possible -> to : 1
possible to hack -> together : 1
to hack together -> all : 1
hack together all -> the : 1
together all the -> code : 1
all the code -> for : 1
code for an -> ascii : 1
for an ascii -> mandelbrot : 1
ascii mandelbrot image -> in : 1
mandelbrot image in -> something : 1
image in something -> around : 1
in something around -> lines : 1
something around lines -> of : 1
around lines of -> but : 1
lines of but -> we : 1
of but we -> will : 1
will implement each -> logical : 1
implement each logical -> step : 1
each logical step -> in : 1
logical step in -> a : 1
step in a -> separate : 1
in a separate -> and : 1
a separate and -> then : 1
separate and then -> assemble : 1
and then assemble -> all : 1
then assemble all -> the : 1
assemble all the -> steps : 1
all the steps -> in : 1
the steps in -> the : 1
steps in the -> the : 1
step is implementing -> a : 1
is implementing a -> function : 1
a function from -> integer : 1
function from integer -> coordinates : 1
from integer coordinates -> to : 1
integer coordinates to -> floating : 1
coordinates to floating -> point : 1
to floating point -> what : 1
floating point what -> we : 1
point what we -> have : 1
the beginning is -> columns : 1
beginning is columns -> and : 1
is columns and -> rows : 1
columns and rows -> of : 1
and rows of -> character : 1
rows of character -> positions : 1
of character positions -> on : 1
character positions on -> the : 1
positions on the -> what : 1
on the what -> we : 1
we want are -> coordinates : 1
want are coordinates -> in : 1
are coordinates in -> the : 1
coordinates in the -> coordinate : 1
in the coordinate -> system : 1
the coordinate system -> of : 1
coordinate system of -> the : 1
system of the -> mandelbrot : 1
the mandelbrot for -> we : 1
mandelbrot for we -> implement : 1
for we implement -> parameters : 1
we implement parameters -> that : 1
implement parameters that -> describe : 1
parameters that describe -> the : 1
that describe the -> geometry : 1
describe the geometry -> of : 1
the geometry of -> the : 1
geometry of the -> user : 1
the user terminal -> coordinate : 1
user terminal coordinate -> and : 1
terminal coordinate and -> the : 1
coordinate and the -> system : 1
and the system -> we : 1
the system we -> want : 1
system we want -> to : 1
want to transform -> those : 1
want to transform -> it : 1
to transform those -> values : 1
transform those values -> are : 1
those values are -> used : 1
values are used -> to : 1
are used to -> build : 1
used to build -> a : 1
to build a -> lambda : 1
build a lambda -> which : 1
lambda which is -> the : 1
is the lambda -> expression : 1
lambda expression accepts -> an : 1
expression accepts an -> coordinate : 1
accepts an coordinate -> and : 1
an coordinate and -> returns : 1
coordinate and returns -> a : 1
returns a static -> auto : 1
a static auto -> int : 1
static auto int -> double : 2
auto int double -> double : 2
int double double -> const : 2
double double const -> int : 2
double const int -> const : 4
const int const -> double : 4
const double const -> int : 2
const double return -> return : 2
double return return -> we : 1
double return return -> template : 1
return return we -> can : 1
return return we -> have : 1
we can transform -> points : 1
we can transform -> it : 1
can transform points -> on : 1
transform points on -> one : 1
points on one -> but : 1
on one but -> the : 1
but the mandelbrot -> set : 1
mandelbrot set exists -> in : 1
set exists in -> a : 1
exists in a -> coordinate : 1
in a coordinate -> in : 1
a coordinate in -> order : 1
coordinate in order -> to : 1
order to translate -> from : 1
to translate from -> one : 1
translate from one -> coordinate : 1
from one coordinate -> system : 1
one coordinate system -> to : 1
coordinate system to -> we : 1
system to we -> combine : 1
to we combine -> an : 1
we combine an -> and : 1
combine an and -> a : 1
and a construct -> a : 1
a construct a -> instance : 1
construct a instance -> from : 1
a instance from -> their : 1
a instance from -> the : 1
instance from their -> template : 1
from their template -> typename : 1
their template typename -> static : 1
template typename static -> auto : 3
typename static auto -> b : 2
typename static auto -> const : 1
static auto b -> return : 2
auto b return -> int : 2
b return int -> return : 2
int return being -> able : 1
return being able -> to : 1
being able to -> transform : 1
to transform coordinates -> to : 1
transform coordinates to -> the : 1
coordinates to the -> right : 1
the right we -> can : 1
the right we -> want : 1
the right we -> see : 1
right we can -> now : 1
can now implement -> the : 1
now implement the -> mandelbrot : 1
implement the mandelbrot -> the : 1
the mandelbrot the -> function : 1
the mandelbrot the -> result : 1
mandelbrot the function -> implementing : 1
the function implementing -> absolutely : 1
function implementing absolutely -> nothing : 1
implementing absolutely nothing -> about : 1
absolutely nothing about -> the : 1
nothing about the -> concept : 1
concept of linear -> plane : 1
of linear plane -> so : 1
linear plane so -> we : 1
plane so we -> can : 1
on the mandelbrot -> we : 1
the mandelbrot we -> square : 1
mandelbrot we square -> and : 1
we square and -> it : 1
square and it -> in : 1
and it in -> a : 1
and it in -> safe : 1
in a its -> value : 1
a its value -> is : 1
its value is -> smaller : 1
value is smaller -> than : 1
smaller than for -> some : 1
than for some -> this : 1
for some this -> never : 1
some this never -> so : 1
this never so -> we : 1
never so we -> also : 1
we also break -> out : 1
also break out -> of : 1
break out of -> the : 1
of the loop -> if : 1
the loop if -> the : 1
loop if the -> number : 1
if the number -> of : 2
number of iterations -> exceeds : 1
number of iterations -> we : 1
number of iterations -> from : 1
number of iterations -> is : 1
number of iterations -> for : 2
number of iterations -> in : 1
number of iterations -> a : 1
of iterations exceeds -> in : 1
iterations exceeds in -> the : 1
exceeds in the -> we : 1
return the number -> of : 2
of iterations we -> had : 1
iterations we had -> to : 1
had to the -> value : 1
the value static -> auto : 1
value static auto -> cmplx : 1
static auto cmplx -> z : 2
auto cmplx z -> iterations : 2
cmplx z iterations -> const : 2
z iterations const -> while : 2
iterations const while -> iterations : 2
const while iterations -> z : 2
while iterations z -> return : 2
iterations z return -> can : 1
iterations z return -> we : 1
z return can -> now : 1
can now begin -> with : 1
now begin with -> the : 1
with the main -> where : 1
with the main -> we : 1
the main where -> we : 1
main where we -> define : 1
define the terminal -> dimensions : 1
the terminal dimensions -> and : 1
terminal dimensions and -> instantiate : 1
dimensions and instantiate -> a : 1
and instantiate a -> function : 1
instantiate a function -> our : 1
a function our -> coordinate : 1
function our coordinate -> values : 1
our coordinate values -> for : 1
coordinate values for -> both : 1
values for both -> int : 1
for both int -> const : 1
both int const -> w : 1
int const w -> const : 2
const w const -> h : 2
w const h -> auto : 2
const h auto -> scale : 2
h auto scale -> order : 1
h auto scale -> auto : 1
auto scale order -> to : 1
scale order to -> have : 1
have a iteration -> over : 1
a iteration over -> the : 1
iteration over the -> whole : 1
whole we write -> another : 1
we write another -> transformation : 1
write another transformation -> function : 1
another transformation function -> a : 1
transformation function a -> it : 1
function a it -> calculates : 1
a it calculates -> coordinates : 1
it calculates coordinates -> from : 1
calculates coordinates from -> based : 1
coordinates from based -> on : 1
from based on -> our : 1
based on our -> assumed : 1
on our assumed -> line : 1
our assumed line -> of : 1
assumed line of -> characters : 1
line of characters -> after : 1
of characters after -> breaking : 1
characters after breaking -> down : 1
after breaking down -> to : 1
breaking down to -> the : 1
to the row -> and : 1
the row and -> column : 1
row and column -> it : 1
and column it -> transforms : 1
column it transforms -> them : 1
it transforms them -> with : 1
transforms them with -> our : 1
them with our -> function : 1
with our function -> and : 2
our function and -> returns : 1
our function and -> also : 1
returns the complex -> auto : 1
the complex auto -> return : 1
complex auto return -> i : 1
i we can -> do : 1
i we can -> iterate : 1
can do now -> is : 1
do now is -> transform : 1
do now is -> to : 1
now is transform -> from : 1
is transform from -> coordinates : 1
transform from coordinates -> via : 1
from coordinates via -> coordinates : 1
coordinates via coordinates -> to : 1
via coordinates to -> mandelbrot : 1
coordinates to mandelbrot -> set : 1
to mandelbrot set -> coordinates : 1
mandelbrot set coordinates -> and : 1
set coordinates and -> then : 1
coordinates and then -> calculate : 1
and then calculate -> the : 1
then calculate the -> number : 1
calculate the number -> of : 1
of iterations from -> there : 1
iterations from there -> combine : 1
from there combine -> all : 1
there combine all -> that : 1
combine all that -> in : 1
all that in -> one : 1
that in one -> which : 1
in one which -> sets : 1
one which sets -> up : 1
which sets up -> this : 1
sets up this -> call : 1
up this call -> chain : 1
this call chain -> for : 1
call chain for -> auto : 1
chain for auto -> return : 1
for auto return -> we : 1
can set up -> all : 1
can set up -> work : 1
set up all -> the : 1
assume that our -> resulting : 1
that our resulting -> ascii : 1
our resulting ascii -> image : 1
resulting ascii image -> is : 1
ascii image is -> characters : 1
image is characters -> wide : 1
is characters wide -> and : 1
characters wide and -> characters : 1
wide and characters -> this : 1
and characters this -> can : 1
characters this can -> be : 1
can be saved -> in : 1
a vector that -> has : 1
a vector that -> holds : 1
vector that has -> we : 1
that has we -> fill : 1
has we fill -> this : 1
we fill this -> vector : 1
fill this vector -> using : 1
this vector using -> with : 1
vector using with -> the : 1
using with the -> value : 1
the value these -> numbers : 1
value these numbers -> can : 1
these numbers can -> be : 1
numbers can be -> used : 1
numbers can be -> the : 1
as an input -> source : 1
as an input -> range : 1
an input source -> for : 1
input source for -> our : 1
source for our -> constructed : 1
for our constructed -> transformation : 1
our constructed transformation -> function : 1
constructed transformation function -> which : 1
transformation function which -> we : 1
which we just -> encapsulated : 1
which we just -> int : 1
we just encapsulated -> in : 1
just encapsulated in -> v : 1
encapsulated in v -> basically : 1
in v basically -> we : 1
v basically we -> now : 1
basically we now -> have : 1
we now have -> which : 1
now have which -> we : 1
have which we -> initialized : 1
which we initialized -> with : 1
we initialized with -> but : 1
initialized with but -> which : 1
with but which -> then : 1
but which then -> got : 1
which then got -> overwritten : 1
then got overwritten -> by : 1
got overwritten by -> mandelbrot : 1
overwritten by mandelbrot -> iteration : 1
by mandelbrot iteration -> from : 1
mandelbrot iteration from -> we : 1
iteration from we -> can : 1
from we can -> now : 1
from we can -> tell : 1
now print a -> pretty : 1
print a pretty -> we : 1
a pretty we -> could : 1
pretty we could -> just : 1
could just make -> the : 1
just make the -> terminal : 1
make the terminal -> window : 1
the terminal window -> characters : 1
terminal window characters -> then : 1
window characters then -> we : 1
characters then we -> would : 1
we would not -> need : 1
we would not -> have : 1
would not need -> to : 1
to print line -> break : 1
print line break -> symbols : 1
line break symbols -> in : 1
break symbols in -> but : 1
symbols in but -> we : 1
in but we -> can : 1
but we can -> also : 2
but we can -> do : 1
but we can -> extend : 1
can also kind -> of : 1
also kind of -> to : 1
kind of to -> do : 1
of to do -> the : 1
of to do -> are : 2
of to do -> will : 1
to do the -> line : 1
to do the -> actual : 1
to do the -> same : 2
do the line -> breaks : 1
the line breaks -> for : 1
line breaks for -> uses : 1
breaks for uses -> a : 1
for uses a -> binary : 1
uses a binary -> function : 1
binary function to -> reduce : 1
function to reduce -> a : 1
to reduce a -> we : 1
reduce a we -> provide : 1
a we provide -> it : 1
provide it a -> binary : 1
it a binary -> which : 1
binary which accepts -> an : 1
accepts an output -> iterator : 1
accepts an output -> stream : 2
output iterator which -> we : 1
we will link -> to : 1
will link to -> the : 1
link to the -> terminal : 1
link to the -> within : 1
the terminal in -> the : 1
terminal in the -> next : 1
the next and -> a : 1
next and a -> single : 1
and a single -> value : 1
a single value -> from : 1
single value from -> the : 1
we print this -> value : 1
print this value -> as : 1
this value as -> a : 1
as a if -> the : 1
a if the -> number : 1
a if the -> producer : 1
a if the -> queue : 1
of iterations is -> higher : 1
iterations is higher -> than : 1
higher than we -> just : 1
than we just -> print : 1
just print a -> space : 1
print a space -> if : 1
a space if -> we : 1
space if we -> are : 1
we are on -> a : 1
are on a -> the : 1
on a the -> counter : 1
a the counter -> variable : 1
the counter variable -> is : 1
counter variable is -> evenly : 1
variable is evenly -> divisible : 1
is evenly divisible -> by : 1
evenly divisible by -> we : 1
divisible by we -> print : 1
by we print -> a : 1
we print a -> line : 1
we print a -> number : 1
print a line -> break : 1
print a line -> but : 1
line break auto -> binfunc : 1
break auto binfunc -> int : 1
auto binfunc int -> mutable : 1
binfunc int mutable -> if : 1
int mutable if -> w : 1
mutable if w -> return : 2
if w return -> calling : 1
if w return -> and : 1
w return calling -> on : 1
return calling on -> the : 1
calling on the -> input : 1
the input combined -> with : 1
input combined with -> our : 1
with our binary -> print : 1
our binary print -> function : 1
binary print function -> and : 1
print function and -> an : 1
function and an -> we : 1
and an we -> can : 1
an we can -> flush : 1
an we can -> decompose : 1
an we can -> just : 1
an we can -> also : 1
an we can -> set : 1
we can flush -> the : 1
can flush the -> calculated : 1
flush the calculated -> mandelbrot : 1
the calculated mandelbrot -> set : 1
calculated mandelbrot set -> out : 1
mandelbrot set out -> to : 1
set out to -> the : 1
terminal and running -> the : 1
following which looks -> like : 1
which looks like -> the : 1
like the initial -> detailed : 1
the initial detailed -> mandelbrot : 1
initial detailed mandelbrot -> but : 1
detailed mandelbrot but -> in : 1
mandelbrot but in -> a : 1
in a simplified -> it : 1
a simplified it -> whole : 1
simplified it whole -> calculation : 1
it whole calculation -> took : 1
whole calculation took -> part : 1
calculation took part -> during : 1
took part during -> an : 1
part during an -> call : 1
during an call -> over : 1
an call over -> a : 1
call over a -> v : 1
over a v -> what : 1
a v what -> exactly : 1
v what exactly -> and : 1
what exactly and -> why : 1
exactly and why -> does : 1
and why does -> it : 1
does it work -> this : 1
it work this -> the : 1
work this the -> function : 1
function is basically -> a : 1
basically a call -> chain : 1
call chain from -> over : 1
chain from over -> to : 1
from over to -> the : 1
over to the -> following : 1
diagram illustrates the -> transformation : 1
illustrates the transformation -> we : 1
the transformation we -> can : 1
transformation we can -> use : 1
use the index -> of : 1
the index of -> a : 1
index of a -> array : 1
of a array -> as : 1
a array as -> and : 1
array as and -> get : 1
as and get -> the : 1
and get the -> number : 1
get the number -> of : 1
number of mandelbrot -> formula : 1
of mandelbrot formula -> iterations : 1
mandelbrot formula iterations -> at : 1
formula iterations at -> the : 1
iterations at the -> point : 1
the point of -> the : 1
the point of -> all : 1
the which this -> array : 1
which this array -> point : 1
this array point -> the : 1
array point the -> good : 1
point the good -> thing : 1
is that these -> are : 1
that these are -> completely : 1
these are completely -> agnostic : 1
are completely agnostic -> about : 1
completely agnostic about -> each : 1
agnostic about each -> code : 1
about each code -> with : 1
each code with -> such : 1
code with such -> a : 1
such a separation -> of : 1
a separation of -> concerns : 1
separation of concerns -> can : 1
of concerns can -> be : 1
concerns can be -> tested : 1
can be tested -> very : 1
can be tested -> the : 1
be tested very -> nicely : 1
tested very nicely -> because : 1
very nicely because -> each : 1
nicely because each -> component : 1
because each component -> can : 1
each component can -> be : 1
component can be -> tested : 1
be tested the -> this : 1
tested the this -> it : 1
easy to find -> and : 1
to find and -> fix : 1
find and fix -> or : 1
and fix or -> just : 1
fix or just -> reason : 1
or just reason -> about : 1
just reason about -> its : 1
reason about its -> our : 1
about its our -> own : 1
its our own -> algorithm : 1
own algorithm some -> the : 1
algorithm some the -> existing : 1
some the existing -> stl : 1
the existing stl -> algorithms : 2
the existing stl -> time : 1
existing stl algorithms -> are : 1
existing stl algorithms -> were : 1
algorithms are not -> but : 1
are not but -> nothing : 1
not but nothing -> hinders : 1
but nothing hinders -> us : 1
nothing hinders us -> from : 1
hinders us from -> implementing : 1
us from implementing -> our : 1
from implementing our -> before : 1
implementing our before -> solving : 1
our before solving -> a : 1
before solving a -> specific : 1
solving a specific -> we : 1
a specific we -> should : 1
specific we should -> think : 1
we should think -> about : 1
should think about -> it : 1
think about it -> firmly : 1
about it firmly -> in : 1
it firmly in -> order : 1
firmly in order -> to : 1
order to realize -> that : 1
to realize that -> many : 1
realize that many -> problems : 1
that many problems -> can : 1
many problems can -> be : 1
problems can be -> solved : 1
can be solved -> in : 1
can be solved -> by : 1
be solved in -> generic : 1
solved in generic -> if : 1
in generic if -> we : 1
generic if we -> regularly : 1
if we regularly -> pile : 1
we regularly pile -> up : 1
regularly pile up -> some : 1
pile up some -> new : 1
up some new -> library : 1
some new library -> code : 1
new library code -> while : 1
library code while -> solving : 1
code while solving -> our : 1
while solving our -> own : 1
solving our own -> then : 1
our own then -> we : 1
own then we -> are : 1
then we are -> also : 1
then we are -> going : 1
we are also -> helping : 1
are also helping -> our : 1
also helping our -> fellow : 1
helping our fellow -> programmers : 1
our fellow programmers -> when : 1
fellow programmers when -> they : 1
programmers when they -> have : 1
when they have -> similar : 1
they have similar -> problems : 1
have similar problems -> to : 1
similar problems to -> is : 1
problems to is -> to : 1
to is to -> know : 1
is to know -> when : 1
to know when -> it : 1
know when it -> is : 1
it is generic -> enough : 1
is generic enough -> and : 1
generic enough and -> when : 1
enough and when -> not : 1
and when not -> to : 1
when not to -> go : 1
not to go -> genericity : 1
to go genericity -> than : 1
go genericity than -> we : 1
genericity than we -> end : 1
than we end -> up : 1
a new general -> purpose : 1
new general purpose -> this : 1
general purpose this -> we : 1
purpose this we -> are : 1
we are implementing -> an : 1
are implementing an -> which : 1
implementing an which -> we : 1
we will call -> it : 1
will call it -> can : 1
call it can -> split : 1
it can split -> any : 1
can split any -> range : 1
split any range -> of : 1
any range of -> items : 1
range of items -> at : 1
range of items -> but : 1
of items at -> each : 1
items at each -> occurrence : 1
at each occurrence -> of : 1
each occurrence of -> a : 1
occurrence of a -> specific : 1
specific and it -> copies : 1
and it copies -> the : 1
it copies the -> chunks : 1
copies the chunks -> from : 1
the chunks from -> that : 1
chunks from that -> into : 1
from that into -> an : 1
that into an -> output : 1
an output to -> do : 1
output to do -> this : 1
to implement our -> own : 1
own algorithm called -> and : 1
algorithm called and -> then : 1
called and then -> we : 1
then we out -> by : 1
we out by -> splitting : 1
out by splitting -> an : 1
by splitting an -> example : 1
splitting an example -> things : 1
an example things -> include : 1
example things include -> some : 1
things include some -> stl : 1
include some stl -> library : 1
include some stl -> libraries : 1
some stl library -> parts : 1
stl library parts -> and : 1
library parts and -> declare : 1
parts and declare -> that : 1
using namespace whole -> algorithm : 1
using namespace whole -> program : 1
namespace whole algorithm -> this : 1
whole algorithm this -> section : 1
algorithm this section -> revolves : 1
this section revolves -> around : 1
section revolves around -> is : 1
revolves around is -> it : 1
around is it -> accepts : 1
of input and -> an : 1
input and an -> output : 1
and an output -> which : 1
and an output -> it : 1
an output which -> makes : 1
output which makes -> it : 1
makes it similar -> to : 1
it similar to -> or : 1
similar to or -> the : 1
to or the -> other : 1
to or the -> call : 1
are is the -> value : 1
value we are -> searching : 1
in the input -> which : 2
in the input -> there : 1
in the input -> range : 1
the input which -> represents : 1
the input which -> equals : 1
the input which -> means : 1
input which represents -> a : 1
which represents a -> splitting : 1
represents a splitting -> point : 1
a splitting point -> at : 1
splitting point at -> which : 1
point at which -> we : 1
at which we -> cut : 1
which we cut -> the : 1
we cut the -> input : 1
cut the input -> is : 1
the input is -> a : 2
the input is -> we : 1
input is a -> function : 1
input is a -> list : 1
a function a -> iterators : 1
a function a -> callable : 1
function a iterators -> the : 1
a iterators the -> beginning : 1
iterators the beginning -> and : 1
end of such -> a : 1
of such a -> split : 1
such a split -> chunk : 1
a split chunk -> we : 1
split chunk we -> iterate : 1
chunk we iterate -> through : 1
through the input -> range : 1
input range using -> so : 1
range using so -> we : 1
using so we -> jump : 1
so we jump -> from : 1
we jump from -> occurrence : 1
we jump from -> one : 1
jump from occurrence -> to : 1
from occurrence to -> occurrence : 1
occurrence to occurrence -> of : 1
to occurrence of -> when : 1
occurrence of when -> splitting : 1
of when splitting -> a : 1
when splitting a -> long : 1
splitting a long -> string : 1
a long string -> into : 1
long string into -> its : 1
string into its -> we : 1
into its we -> would : 1
its we would -> jump : 1
we would jump -> from : 1
would jump from -> space : 1
jump from space -> character : 1
from space character -> to : 1
space character to -> space : 1
character to space -> on : 1
to space on -> every : 1
space on every -> split : 1
on every split -> we : 1
every split we -> stop : 1
split we stop -> by : 1
we stop by -> to : 1
stop by to -> form : 1
by to form -> a : 1
to form a -> chunk : 1
form a chunk -> and : 1
a chunk and -> feed : 1
chunk and feed -> it : 1
the output template -> typename : 1
output template typename -> typename : 1
typename typename init -> init : 2
typename init init -> outit : 2
init init outit -> t : 2
init outit t -> f : 2
outit t f -> while : 2
t f while -> auto : 2
f while auto -> if : 2
while auto if -> return : 2
if return it -> return : 2
if return it -> result : 1
if return it -> is : 1
return it return -> use : 1
return it return -> loop : 1
it return use -> the : 1
return use the -> new : 1
return use the -> algorithm : 1
the new we -> construct : 1
new we construct -> a : 1
construct a string -> want : 1
construct a string -> that : 1
construct a string -> containing : 1
a string want -> to : 1
string want to -> the : 1
item the end -> of : 1
the last and -> of : 1
last and of -> the : 1
the next shall -> be : 1
next shall be -> the : 1
be the dash -> int : 1
the dash int -> const : 1
dash int const -> string : 1
const string s -> the : 1
string s the -> algorithm : 1
s the algorithm -> calls : 1
the algorithm calls -> its : 1
algorithm calls its -> on : 1
calls its on -> a : 1
its on a -> pair : 1
on a pair -> of : 1
pair of we -> want : 1
want to construct -> a : 1
construct a new -> string : 1
construct a new -> managed : 1
a new string -> from : 2
a new string -> object : 1
a new string -> without : 1
a new string -> instance : 1
a new string -> the : 1
new string from -> auto : 1
new string from -> and : 1
string from auto -> binfunc : 1
from auto binfunc -> auto : 1
auto binfunc auto -> return : 2
binfunc auto return -> output : 1
binfunc auto return -> downside : 1
auto return output -> range : 1
return output range -> an : 1
output range an -> of : 1
range an of -> we : 1
an of we -> can : 1
now call the -> which : 1
the which has -> a : 1
has a similar -> design : 1
a similar design -> compared : 1
similar design compared -> to : 1
design compared to -> all : 1
the other stl -> order : 1
the other stl -> useful : 1
other stl order -> to : 1
stl order to -> see : 1
see what we -> print : 1
what we print -> the : 1
the new chunked -> list : 1
new chunked list -> of : 1
chunked list of -> and : 1
of and running -> the : 2
following it contains -> no : 1
it contains no -> dashes : 1
contains no dashes -> shows : 1
no dashes shows -> that : 1
dashes shows that -> it : 1
it has isolated -> the : 1
has isolated the -> individual : 1
isolated the individual -> words : 1
the individual words -> of : 1
individual words of -> only : 1
words of only -> single : 1
of only single -> characters : 1
only single characters -> in : 1
single characters in -> our : 1
characters in our -> example : 1
our example a -> b : 1
example a b -> c : 1
c d e -> f : 1
d e f -> it : 1
e f it -> algorithm : 1
f it algorithm -> works : 1
it algorithm works -> in : 1
algorithm works in -> a : 1
similar manner to -> it : 1
manner to it -> accepts : 1
an input range -> and : 2
input range and -> an : 1
input range and -> the : 2
range and an -> output : 1
an output it -> does : 1
output it does -> something : 1
it does something -> with : 1
does something with -> the : 1
the input in -> the : 1
input in the -> results : 1
input in the -> form : 1
in the results -> in : 1
the results in -> assignments : 1
results in assignments -> to : 1
in assignments to -> the : 1
assignments to the -> output : 1
the output apart -> from : 1
output apart from -> it : 1
apart from it -> accepts : 1
apart from it -> can : 1
from it accepts -> an : 1
accepts an item -> value : 1
an item value -> called : 1
item value called -> a : 1
value called a -> binary : 1
called a binary -> revisit : 1
a binary revisit -> the : 1
binary revisit the -> whole : 1
revisit the whole -> implementation : 1
the whole implementation -> to : 1
whole implementation to -> fully : 1
implementation to fully -> understand : 1
to fully understand -> typename : 1
to fully understand -> this : 1
fully understand typename -> typename : 1
understand typename typename -> typename : 1
it return loop -> demands : 1
return loop demands -> to : 1
loop demands to -> iterate : 1
demands to iterate -> until : 1
to iterate until -> the : 1
iterate until the -> end : 1
until the end -> of : 1
the input during -> each : 1
input during each -> an : 1
during each an -> call : 1
each an call -> is : 1
an call is -> used : 1
call is used -> to : 1
used to find -> the : 1
find the next -> element : 1
the next element -> in : 1
next element in -> the : 1
input which equals -> to : 1
which equals to -> in : 1
equals to in -> our : 1
to in our -> that : 1
in our that -> element : 1
our that element -> is : 1
that element is -> the : 1
element is the -> dash : 1
element is the -> element : 1
is the dash -> character : 1
the dash character -> because : 1
dash character because -> we : 1
character because we -> want : 1
want to split -> our : 1
to split our -> input : 1
split our input -> string : 1
our input string -> at : 1
our input string -> over : 1
input string at -> all : 1
string at all -> the : 1
all the dash -> the : 1
the dash the -> next : 1
dash the next -> dash : 1
the next dash -> position : 1
next dash position -> is : 1
dash position is -> now : 1
position is now -> saved : 1
is now saved -> in : 1
is now saved -> the : 1
now saved in -> after : 1
saved in after -> the : 1
in after the -> loop : 1
after the loop -> iterator : 1
the loop iterator -> is : 1
loop iterator is -> put : 1
is put on -> the : 1
put on the -> next : 1
next item past -> that : 1
item past that -> split : 1
past that split -> this : 1
that split this -> the : 1
split this the -> loop : 1
this the loop -> jumps : 1
the loop jumps -> directly : 1
loop jumps directly -> from : 1
jumps directly from -> dash : 1
directly from dash -> to : 1
from dash to -> instead : 1
dash to instead -> of : 1
to instead of -> over : 1
instead of over -> every : 1
of over every -> individual : 1
over every individual -> this : 1
every individual this -> the : 1
individual this the -> iterator : 1
this the iterator -> points : 1
this the iterator -> is : 1
this the iterator -> can : 1
the last while -> points : 1
the last while -> iterating : 1
last while points -> to : 1
while points to -> the : 1
the last both -> these : 1
last both these -> in : 1
both these in -> mark : 1
these in mark -> the : 1
in mark the -> beginning : 1
mark the beginning -> and : 2
of the subrange -> exactly : 1
of the subrange -> into : 1
the subrange exactly -> one : 1
subrange exactly one -> slice : 1
exactly one slice -> between : 1
one slice between -> two : 1
slice between two -> dash : 1
between two dash -> in : 1
two dash in -> a : 1
dash in a -> this : 1
in a this -> would : 1
a this would -> mean : 1
we have iterations -> and : 1
have iterations and -> we : 1
iterations and we -> get : 1
and we get -> a : 1
and we get -> the : 2
and we get -> to : 2
and we get -> such : 1
of iterators every -> which : 1
iterators every which -> surround : 1
every which surround -> one : 1
which surround one -> but : 1
surround one but -> we : 1
one but we -> do : 1
do not actually -> want : 1
do not actually -> execute : 1
not actually want -> iterators : 1
actually want iterators -> but : 1
want iterators but -> the : 1
iterators but the -> binary : 1
but the binary -> does : 1
the binary does -> for : 1
binary does for -> when : 1
does for when -> we : 1
for when we -> called : 1
when we called -> we : 2
we called we -> gave : 1
we called we -> a : 1
called we gave -> it : 1
gave it the -> following : 1
it the following -> binary : 1
following binary auto -> return : 1
binary auto return -> throws : 1
auto return throws -> every : 1
return throws every -> pair : 1
throws every pair -> of : 1
every pair of -> iterators : 1
of iterators through -> before : 1
iterators through before -> feeding : 1
through before feeding -> it : 1
before feeding it -> into : 1
feeding it into -> the : 1
the output actually -> get : 1
output actually get -> string : 1
actually get string -> instances : 1
get string instances -> out : 1
string instances out -> of : 1
instances out of -> which : 1
out of which -> results : 1
of which results -> in : 1
in and interesting -> alternative : 1
and interesting alternative -> to : 1
interesting alternative to -> implementing : 1
alternative to implementing -> our : 1
to implementing our -> own : 1
own algorithm for -> splitting : 1
algorithm for splitting -> strings : 1
for splitting strings -> would : 1
splitting strings would -> be : 1
strings would be -> implementing : 1
would be implementing -> an : 1
be implementing an -> that : 1
implementing an that -> does : 1
an that does -> the : 1
does the we -> are : 1
implement such an -> iterator : 1
such an iterator -> at : 1
such an iterator -> with : 1
such an iterator -> does : 1
an iterator at -> this : 1
iterator at this -> but : 1
at this but -> have : 1
this but have -> a : 1
have a brief -> look : 1
a brief look -> at : 1
brief look at -> such : 1
brief look at -> all : 1
at such a -> iterator : 1
such a iterator -> would : 1
a iterator would -> need : 1
iterator would need -> to : 1
need to jump -> between : 1
to jump between -> delimiters : 1
to jump between -> points : 1
jump between delimiters -> on : 1
between delimiters on -> every : 1
delimiters on every -> whenever : 1
on every whenever -> it : 1
every whenever it -> is : 1
whenever it is -> it : 2
is it needs -> to : 1
needs to create -> a : 1
to create a -> string : 2
a string object -> from : 2
a string object -> on : 1
string object from -> the : 1
string object from -> which : 1
string object from -> that : 1
object from the -> iterator : 1
object from the -> management : 1
object from the -> input : 1
the iterator positions -> it : 1
iterator positions it -> currently : 1
positions it currently -> points : 1
it currently points -> which : 1
it currently points -> this : 1
currently points which -> it : 1
points which it -> could : 1
which it could -> do : 1
it could do -> using : 1
could do using -> a : 1
do using a -> binary : 1
binary function such -> which : 1
function such which -> we : 1
which we used -> we : 1
we used we -> had : 1
used we had -> an : 1
we had an -> iterator : 1
had an iterator -> class : 1
an iterator class -> called : 1
an iterator class -> but : 1
iterator class called -> instead : 1
class called instead -> of : 1
called instead of -> an : 1
instead of an -> algorithm : 1
of an algorithm -> the : 1
an algorithm the -> user : 1
algorithm the user -> code : 1
user code would -> look : 1
code would look -> as : 1
would look as -> s : 1
look as s -> auto : 1
as s auto -> binfunc : 1
s auto binfunc -> auto : 1
auto return downside -> of : 1
return downside of -> this : 1
is that implementing -> an : 1
that implementing an -> iterator : 1
iterator is usually -> more : 1
is usually more -> than : 1
usually more than -> a : 1
more than a -> single : 1
more than a -> dozen : 1
than a single -> there : 1
a single there -> are : 1
single there are -> many : 1
there are many -> subtle : 1
there are many -> conditions : 1
are many subtle -> iterator : 1
many subtle iterator -> code : 1
subtle iterator code -> that : 1
iterator code that -> can : 1
code that can -> lead : 1
that can lead -> to : 1
lead to so -> an : 1
to so an -> iterator : 1
so an iterator -> solution : 1
an iterator solution -> needs : 1
iterator solution needs -> more : 1
solution needs more -> tedious : 1
needs more tedious -> on : 1
more tedious on -> the : 1
tedious on the -> other : 1
the other it -> is : 1
other it is -> very : 1
is very simple -> to : 1
very simple to -> combine : 1
simple to combine -> such : 1
to combine such -> an : 1
combine such an -> iterator : 1
other stl useful -> algorithms : 1
stl useful algorithms -> from : 1
standard algorithms very -> nice : 1
algorithms very nice -> example : 1
very nice example -> for : 1
nice example for -> the : 1
example for the -> composability : 1
for the composability -> of : 1
the composability of -> stl : 1
composability of stl -> algorithms : 1
algorithms is sean -> principal : 1
is sean principal -> scientist : 1
sean principal scientist -> at : 1
principal scientist at -> adobe : 1
scientist at adobe -> systems : 1
at adobe systems -> at : 1
adobe systems at -> the : 1
systems at the -> popularized : 1
at the popularized -> this : 1
the popularized this -> algorithm : 1
popularized this algorithm -> because : 1
this algorithm because -> it : 1
algorithm because it -> is : 1
it is both -> useful : 1
is both useful -> and : 1
both useful and -> the : 1
useful and the -> way : 1
and the way -> it : 1
the way it -> is : 1
way it is -> it : 1
way it is -> hard : 1
is the ideal -> poster : 1
the ideal poster -> child : 1
ideal poster child -> for : 1
poster child for -> the : 1
child for the -> idea : 1
the idea of -> stl : 1
the idea of -> an : 1
the idea of -> having : 1
idea of stl -> algorithm : 1
of stl algorithm -> algorithm : 1
stl algorithm algorithm -> operates : 1
algorithm algorithm operates -> on : 1
algorithm operates on -> ranges : 1
operates on ranges -> of : 1
ranges of arbitrary -> item : 1
of arbitrary item -> it : 1
arbitrary item it -> modifies : 1
item it modifies -> the : 1
modifies the order -> of : 1
items in such -> a : 1
such a way -> that : 2
way that specific -> items : 1
that specific items -> are : 1
specific items are -> gathered : 1
items are gathered -> around : 1
are gathered around -> a : 1
gathered around a -> specific : 1
around a specific -> chosen : 1
a specific chosen -> by : 1
specific chosen by -> the : 1
by the to -> do : 1
implement the algorithm -> and : 2
the algorithm and -> a : 1
the algorithm and -> check : 1
algorithm and a -> bonus : 1
and a bonus -> variation : 1
a bonus variation -> of : 1
bonus variation of -> we : 1
variation of we -> see : 1
of we see -> how : 1
we see how -> it : 1
we see how -> many : 1
we see how -> we : 2
how it can -> be : 1
how it can -> look : 1
can be put -> to : 1
put to we -> add : 1
to we add -> all : 1
we add all -> the : 1
add all the -> stl : 1
the stl include -> we : 1
stl include we -> declare : 1
include we declare -> that : 1
using namespace algorithm -> is : 1
namespace algorithm is -> a : 1
a nice example -> of : 1
a nice example -> target : 1
nice example of -> standard : 1
example of standard -> algorithm : 1
of standard algorithm -> accepts : 1
standard algorithm accepts -> a : 1
a iterator and -> another : 1
iterator and another -> iterator : 1
another iterator which -> points : 1
iterator which points -> somewhere : 1
which points somewhere -> in : 1
points somewhere in -> the : 1
the last parameter -> is : 1
last parameter is -> a : 1
parameter is a -> predicate : 1
is a predicate -> using : 1
is a predicate -> that : 1
a predicate using -> this : 1
predicate using this -> predicate : 1
using this predicate -> the : 1
this predicate the -> algorithm : 1
predicate the algorithm -> will : 1
algorithm will push -> all : 1
will push all -> that : 1
push all that -> items : 1
all that items -> satisfy : 1
that items satisfy -> the : 1
items satisfy the -> predicate : 1
satisfy the predicate -> near : 1
satisfy the predicate -> at : 1
the predicate near -> the : 1
predicate near the -> the : 1
near the the -> implementation : 1
the the implementation -> of : 2
the item movement -> is : 1
item movement is -> done : 1
movement is done -> by : 1
by the return -> value : 1
the algorithm is -> a : 1
the algorithm is -> hard : 1
is a pair -> of : 1
pair of these -> iterators : 1
of these iterators -> are : 1
these iterators are -> returned : 1
iterators are returned -> from : 1
are returned from -> the : 1
returned from the -> and : 1
and this they -> mark : 1
this they mark -> the : 1
they mark the -> beginning : 1
of the now -> gathered : 1
of the now -> consecutive : 1
the now gathered -> template : 1
now gathered template -> typename : 1
gathered template typename -> it : 1
template typename it -> it : 1
typename it it -> f : 1
typename it it -> p : 1
it it f -> return : 1
it it f -> auto : 1
it f return -> variant : 1
f return variant -> of : 1
return variant of -> gather : 1
variant of gather -> is : 1
of gather is -> it : 1
gather is it -> basically : 1
is it basically -> works : 1
basically works the -> same : 1
works the same -> way : 3
way as but -> it : 1
not accept a -> unary : 2
accept a unary -> predicate : 1
accept a unary -> function : 1
a unary predicate -> accepts : 1
unary predicate accepts -> a : 1
predicate accepts a -> binary : 1
accepts a binary -> comparison : 1
a binary comparison -> function : 1
binary comparison function -> this : 1
binary comparison function -> is : 1
comparison function this -> it : 1
function this it -> is : 1
possible to gather -> the : 1
to gather the -> values : 1
gather the values -> near : 1
the values near -> which : 1
values near which -> appear : 1
near which appear -> or : 1
which appear or -> template : 1
appear or template -> typename : 1
or template typename -> void : 1
template typename void -> it : 1
template typename void -> const : 1
typename void it -> it : 1
void it it -> f : 1
it f auto -> auto : 1
f auto auto -> return : 1
auto return put -> those : 1
return put those -> algorithms : 1
put those algorithms -> to : 1
those algorithms to -> we : 1
algorithms to we -> start : 1
to we start -> with : 1
start with a -> which : 1
start with a -> really : 1
with a which -> tells : 1
with a which -> constructs : 1
which tells if -> a : 1
which tells if -> there : 1
which tells if -> characters : 1
a given character -> argument : 1
given character argument -> is : 1
character argument is -> the : 1
the we construct -> a : 1
construct a which -> consists : 1
a which consists -> of : 1
consists of wildly -> interleaved : 1
of wildly interleaved -> and : 1
wildly interleaved and -> int : 1
interleaved and int -> auto : 1
and int auto -> return : 1
auto return c -> string : 1
return c string -> a : 1
c string a -> construct : 1
string a construct -> which : 1
a construct which -> points : 1
construct which points -> to : 1
middle of our -> new : 1
of our new -> call : 1
our new call -> on : 1
new call on -> it : 1
call on it -> and : 1
call on it -> will : 1
on it and -> see : 1
it and see -> what : 1
what the characters -> should : 1
the characters should -> be : 1
characters should be -> gathered : 1
should be gathered -> around : 1
be gathered around -> the : 1
gathered around the -> middle : 1
around the middle -> auto : 1
around the middle -> this : 1
around the middle -> of : 1
the middle auto -> middle : 1
middle auto middle -> cout : 1
auto middle cout -> a : 1
middle cout a -> call : 1
cout a call -> but : 1
a call but -> this : 1
call but this -> the : 1
but this the -> iterator : 1
iterator is not -> in : 1
is not in -> the : 2
not in the -> middle : 1
not in the -> order : 1
not in the -> following : 1
the middle but -> the : 1
middle but the -> cout : 1
but the cout -> a : 1
the cout a -> a : 1
cout a a -> third : 1
cout a a -> last : 1
a a third -> we : 1
a third we -> gather : 1
third we gather -> items : 1
we gather items -> around : 1
gather items around -> the : 1
items around the -> end : 1
items around the -> middle : 1
around the end -> cout : 1
the end cout -> a : 1
end cout a -> a : 1
a a last -> call : 1
a last call -> we : 1
last call we -> try : 1
call we try -> to : 1
try to gather -> all : 1
to gather all -> the : 1
gather all the -> characters : 1
the characters around -> the : 1
characters around the -> middle : 1
the middle this -> will : 1
middle this will -> not : 1
will not work -> as : 2
not work as -> and : 1
not work as -> naively : 1
work as and -> we : 1
as and we -> will : 1
as and we -> can : 1
we will later -> see : 1
will later see -> this : 1
later see this -> will : 1
see this will -> not : 1
work as naively -> expected : 1
as naively expected -> cout : 1
naively expected cout -> a : 1
expected cout a -> construct : 1
cout a construct -> another : 1
a construct another -> string : 1
construct another string -> with : 1
another string with -> underscore : 1
string with underscore -> some : 1
with underscore some -> number : 1
underscore some number -> on : 1
some number on -> that : 1
number on that -> input : 1
on that input -> we : 1
that input we -> apply : 1
input we apply -> the : 1
we apply the -> iterator : 1
we apply the -> correct : 1
apply the iterator -> is : 1
is the middle -> of : 1
middle of the -> and : 1
middle of the -> then : 1
middle of the -> character : 1
and the binary -> comparison : 1
the binary comparison -> function : 1
comparison function is -> string : 1
function is string -> b : 1
is string b -> cout : 1
string b cout -> b : 1
b cout b -> and : 1
cout b and -> running : 1
b and running -> the : 1
the following interesting -> the : 1
following interesting the -> first : 1
the first three -> lines : 1
first three lines -> look : 1
three lines look -> like : 1
lines look like -> but : 1
look like but -> the : 1
like but the -> fourth : 1
but the fourth -> line : 1
the fourth line -> looks : 1
fourth line looks -> like : 1
line looks like -> did : 1
looks like did -> to : 1
like did to -> the : 1
did to the -> in : 1
see the result -> of : 1
the the numbers -> appear : 1
the numbers appear -> sorted : 1
numbers appear sorted -> towards : 1
appear sorted towards -> either : 1
sorted towards either -> it : 1
towards either it -> the : 1
either it the -> algorithm : 1
it the algorithm -> is : 1
algorithm is hard -> to : 1
is hard to -> grasp : 1
is hard to -> get : 1
hard to grasp -> because : 1
to grasp because -> it : 1
grasp because it -> is : 1
is very short -> but : 1
very short but -> has : 1
short but has -> a : 1
but has a -> seemingly : 1
has a seemingly -> complex : 1
a seemingly complex -> through : 1
seemingly complex through -> initial : 1
complex through initial -> state : 1
through initial state -> is : 1
initial state is -> a : 1
state is a -> range : 1
is a range -> of : 2
range of for -> which : 1
which we present -> a : 1
we present a -> predicate : 1
present a predicate -> in : 1
a predicate in -> the : 1
predicate in the -> all : 1
for which our -> predicate : 1
which our predicate -> function : 1
our predicate function -> returns : 1
function returns are -> painted : 1
returns are painted -> in : 1
are painted in -> the : 1
painted in the -> iterators : 1
in the iterators -> and : 1
iterators and mark -> the : 1
and mark the -> whole : 1
mark the whole -> and : 1
whole and iterator -> points : 1
and iterator points -> to : 1
a the pivot -> element : 1
the pivot element -> is : 1
the pivot element -> pointed : 1
pivot element is -> the : 1
is the element -> around : 1
the element around -> which : 1
element around which -> we : 1
around which we -> want : 1
want to all -> the : 1
all the gray -> algorithm : 1
the gray algorithm -> calls : 1
gray algorithm calls -> the : 1
algorithm calls the -> range : 1
calls the range -> while : 1
the range while -> doing : 1
the range while -> they : 1
range while doing -> it : 1
while doing it -> uses : 1
while doing it -> counts : 1
doing it uses -> a : 1
it uses a -> version : 1
uses a version -> of : 1
the it negates -> the : 1
it negates the -> all : 1
negates the all -> items : 1
predicate returns to -> the : 1
returns to the -> we : 1
the we want -> exactly : 1
we want exactly -> the : 1
want exactly the -> to : 1
exactly the to -> call : 1
the to call -> is : 1
to call is -> done : 1
call is done -> this : 1
is done this -> on : 1
done this on -> the : 1
this on the -> and : 1
the and negating -> the : 1
and negating the -> the : 1
negating the the -> gray : 1
the the gray -> items : 1
the gray items -> are : 1
gray items are -> moved : 1
are moved to -> the : 1
input which means -> they : 1
which means they -> are : 2
means they are -> all : 1
means they are -> random : 1
are all moved -> towards : 1
all moved towards -> the : 1
moved towards the -> pivot : 1
towards the pivot -> element : 1
pivot element pointed -> at : 1
element pointed at -> items : 1
pointed at items -> are : 1
at items are -> now : 1
items are now -> gathered : 1
are now gathered -> around : 1
now gathered around -> and : 1
gathered around and -> the : 1
around and the -> algorithm : 1
and the algorithm -> returns : 1
and the algorithm -> could : 1
the algorithm returns -> iterators : 1
algorithm returns iterators -> to : 1
returns iterators to -> the : 1
the now consecutive -> range : 1
now consecutive range -> of : 1
consecutive range of -> gray : 1
range of gray -> called : 1
of gray called -> multiple : 1
gray called multiple -> times : 1
called multiple times -> on : 1
multiple times on -> the : 2
times on the -> same : 2
on the same -> at : 1
on the same -> we : 1
on the same -> then : 1
on the same -> mutex : 1
on the same -> set : 1
on the same -> only : 1
the same at -> we : 1
same at we -> gathered : 1
at we gathered -> all : 1
we gathered all -> the : 1
gathered all the -> items : 1
the items around -> the : 1
the items around -> and : 1
then we gathered -> the : 1
we gathered the -> items : 1
gathered the items -> around : 1
items around and -> then : 1
around and then -> of : 1
and then of -> the : 1
then of the -> these : 1
the these cases -> are : 1
these cases are -> they : 1
cases are they -> always : 1
are they always -> lead : 1
they always lead -> of : 1
always lead of -> the : 1
lead of the -> to : 1
the to operate -> on : 1
to operate on -> an : 1
operate on an -> which : 1
on an which -> results : 1
an which results -> in : 1
results in did -> the : 1
in did the -> last : 1
did the last -> call : 1
the last call -> to : 1
last call to -> gather : 1
call to gather -> again : 1
to gather again -> with : 1
gather again with -> the : 1
again with the -> parameters : 1
with the parameters -> of : 1
the parameters of -> the : 1
parameters of the -> and : 1
the and that -> did : 1
and that did -> not : 1
that did not -> at : 1
that did not -> go : 2
did not at -> this : 1
not at this -> looks : 1
at this looks -> like : 1
this looks like -> a : 1
this looks like -> the : 1
this looks like -> they : 1
like a but -> it : 1
is the character -> together : 1
the character together -> with : 1
character together with -> a : 1
with a predicate -> which : 1
predicate which is -> only : 1
which is only -> true : 1
is only true -> for : 1
only true for -> the : 1
true for the -> we : 1
the we call -> it : 1
the we call -> then : 1
a third iterator -> pointing : 1
third iterator pointing -> to : 1
of the character -> we : 1
the character we -> would : 1
character we would -> observe : 1
we would observe -> the : 1
would observe the -> same : 1
observe the same -> the : 1
same the reason -> is : 1
the reason is -> that : 2
reason is that -> the : 1
reason is that -> this : 1
that the first -> call : 1
that the first -> digit : 1
that the first -> one : 1
the first call -> would : 1
the first call -> of : 1
first call would -> operate : 1
call would operate -> on : 1
would operate on -> the : 1
operate on the -> and : 1
the other call -> operates : 1
other call operates -> on : 1
call operates on -> the : 1
operates on the -> this : 1
the this series -> of : 1
this series of -> calls : 1
of calls cannot -> result : 1
calls cannot result -> in : 1
cannot result in -> which : 1
result in which -> we : 1
which we initially -> naively : 1
we initially naively -> order : 1
initially naively order -> to : 1
naively order to -> get : 1
to get what -> we : 1
get what we -> want : 1
we want in -> the : 1
want in the -> last : 1
last we could -> use : 1
we could use -> begin : 1
we could use -> the : 1
could use begin -> modification : 1
use begin modification -> is : 1
begin modification is -> basically : 1
modification is basically -> the : 1
is basically the -> same : 3
basically the same -> as : 3
as the only -> difference : 1
as the only -> interesting : 1
a unary function -> but : 1
unary function but -> a : 1
function but a -> binary : 1
but a binary -> just : 1
a binary just -> like : 1
binary just like -> and : 1
just like and -> instead : 1
like and instead -> of : 1
and instead of -> calling : 1
and instead of -> we : 1
instead of calling -> it : 1
of calling it -> calls : 1
calling it calls -> negation : 1
it calls negation -> of : 1
calls negation of -> the : 1
negation of the -> comparison : 1
the comparison function -> cannot : 1
comparison function cannot -> be : 1
function cannot be -> done : 1
cannot be done -> just : 1
be done just -> like : 1
done just like -> we : 1
like we did -> in : 1
in the does -> not : 1
in the does -> it : 1
the does not -> work : 1
does not work -> on : 1
not work on -> binary : 1
work on binary -> consecutive : 1
on binary consecutive -> whitespace : 1
binary consecutive whitespace -> between : 1
whitespace between strings -> are : 1
between strings are -> often : 1
strings are often -> read : 1
are often read -> from : 1
often read from -> user : 1
read from user -> they : 1
read from user -> input : 1
from user they -> may : 1
from user they -> are : 1
user they may -> contain : 1
they may contain -> wild : 1
may contain wild -> formatting : 1
contain wild formatting -> and : 1
wild formatting and -> often : 1
formatting and often -> need : 1
and often need -> to : 1
often need to -> be : 1
to be one -> example : 1
be one example -> of : 1
one example of -> this : 1
example of this -> containing : 1
of this containing -> too : 1
this containing too -> this : 1
containing too this -> we : 1
too this we -> will : 1
implement a slick -> whitespace : 1
a slick whitespace -> filtering : 1
slick whitespace filtering -> which : 1
whitespace filtering which -> removes : 1
filtering which removes -> excess : 1
which removes excess -> whitespace : 1
removes excess whitespace -> from : 1
excess whitespace from -> leaves : 1
whitespace from leaves -> single : 1
from leaves single -> whitespace : 1
leaves single whitespace -> characters : 1
single whitespace characters -> we : 1
whitespace characters we -> call : 1
characters we call -> that : 1
we call that -> algorithm : 1
call that algorithm -> and : 1
that algorithm and -> its : 1
algorithm and its -> interface : 1
its interface will -> look : 1
interface will look -> very : 1
will look very -> to : 1
look very to -> do : 1
very to do -> this : 1
algorithm and check -> out : 1
and check out -> how : 1
check out how -> it : 1
out how it -> we : 1
how it we -> do : 1
it we do -> some : 1
we do some -> includes : 1
do some includes -> then : 1
some includes then -> declare : 1
includes then declare -> that : 1
then declare that -> we : 4
use the namespace -> by : 3
the namespace by -> using : 3
implement a new -> algorithm : 1
a new algorithm -> called : 1
new algorithm called -> this : 1
algorithm called this -> algorithm : 1
this algorithm removes -> clustered : 1
algorithm removes clustered -> occurrences : 1
removes clustered occurrences -> of : 1
clustered occurrences of -> but : 1
occurrences of but -> no : 1
of but no -> single : 1
but no single -> this : 1
no single this -> means : 1
single this means -> that : 1
means that a -> string : 1
means that a -> call : 1
that a string -> line : 1
a string line -> stays : 1
string line stays -> but : 1
line stays but -> a : 1
stays but a -> string : 1
but a string -> is : 1
string is shrunk -> to : 1
is shrunk to -> in : 1
shrunk to in -> order : 1
order to accomplish -> we : 1
to accomplish we -> use : 1
accomplish we use -> with : 1
we use with -> a : 1
with a custom -> binary : 1
with a custom -> and : 1
with a custom -> deleter : 1
a custom binary -> predicate : 1
custom binary predicate -> through : 1
binary predicate through -> range : 1
predicate through range -> and : 1
through range and -> always : 1
range and always -> looks : 1
and always looks -> at : 1
always looks at -> consecutive : 1
looks at consecutive -> pairs : 1
at consecutive pairs -> of : 1
consecutive pairs of -> payload : 1
pairs of payload -> then : 1
of payload then -> it : 1
payload then it -> asks : 1
then it asks -> the : 1
it asks the -> predicate : 1
asks the predicate -> functions : 1
the predicate functions -> items : 1
predicate functions items -> are : 1
functions items are -> if : 1
items are if -> they : 1
are if they -> then : 1
if they then -> removes : 1
they then removes -> one : 1
then removes one -> of : 1
removes one of -> the : 1
the range does -> not : 1
range does not -> contain : 1
not contain subranges -> with : 1
contain subranges with -> equal : 1
subranges with equal -> items : 1
with equal items -> sitting : 1
equal items sitting -> next : 1
items sitting next -> to : 1
sitting next to -> each : 1
to each predicate -> functions : 1
each predicate functions -> usually : 1
predicate functions usually -> applied : 1
functions usually applied -> in : 1
usually applied in -> this : 1
applied in this -> context : 1
in this context -> tell : 1
this context tell -> items : 1
context tell items -> are : 1
tell items are -> what : 1
items are what -> we : 1
are what we -> is : 1
are what we -> see : 1
what we is -> a : 1
we is a -> which : 1
tells if there -> are : 1
are two consecutive -> order : 1
two consecutive order -> to : 1
consecutive order to -> get : 1
to get those -> just : 1
get those just -> we : 1
those just we -> accept : 1
just we accept -> a : 1
accept a pair -> of : 1
of and then -> return : 1
of and then -> the : 1
of and then -> returns : 1
of and then -> it : 1
new end of -> the : 1
of the template -> it : 1
of the template -> this : 1
the template it -> it : 1
template it it -> return : 1
it it return -> auto : 1
it return auto -> const : 1
return auto const -> auto : 1
return is already -> construct : 1
is already construct -> a : 1
already construct a -> string : 1
string that contains -> some : 1
string that contains -> a : 1
contains some unnecessary -> int : 1
some unnecessary int -> string : 1
unnecessary int string -> s : 1
int string s -> bar : 1
int string s -> cout : 1
int string s -> string : 1
string s bar -> cout : 1
s bar cout -> s : 1
bar cout s -> we : 1
cout s we -> use : 1
s we use -> the : 1
use the on -> the : 1
on the string -> in : 1
on the string -> by : 1
the string in -> order : 1
the string in -> quotes : 2
string in order -> to : 1
to get rid -> of : 1
get rid of -> the : 1
rid of the -> excess : 1
of the excess -> whitespace : 1
the excess whitespace -> cout : 1
the excess whitespace -> while : 1
excess whitespace cout -> s : 1
whitespace cout s -> and : 1
cout s and -> running : 2
s and running -> the : 2
the following fooo -> bar : 1
following fooo bar -> baz : 1
fooo bar baz -> fooo : 1
bar baz fooo -> bar : 1
baz fooo bar -> it : 1
fooo bar it -> solved : 1
bar it solved -> the : 1
it solved the -> whole : 1
solved the whole -> complexity : 1
the whole complexity -> of : 1
whole complexity of -> the : 1
of the problem -> without : 1
the problem without -> any : 1
problem without any -> loop : 1
without any loop -> or : 1
loop or manual -> comparison : 1
or manual comparison -> of : 1
manual comparison of -> we : 1
comparison of we -> only : 1
of we only -> provided : 1
we only provided -> a : 1
only provided a -> predicate : 1
provided a predicate -> which : 1
tells if characters -> are : 1
if characters are -> then : 1
characters are then -> we : 1
are then we -> fed : 1
then we fed -> that : 1
we fed that -> predicate : 1
fed that predicate -> into : 1
that predicate into -> and : 1
predicate into and -> all : 1
into and all -> the : 1
all the excess -> whitespace : 1
excess whitespace while -> this : 1
whitespace while this -> chapter : 1
while this chapter -> also : 1
this chapter also -> contains : 1
chapter also contains -> some : 1
also contains some -> recipes : 1
contains some recipes -> where : 1
some recipes where -> we : 1
recipes where we -> had : 1
where we had -> to : 1
had to fight -> a : 1
to fight a -> bit : 1
fight a bit -> more : 1
bit more to -> express : 1
more to express -> our : 1
to express our -> programs : 1
express our programs -> with : 1
our programs with -> stl : 1
programs with stl -> this : 1
with stl this -> algorithm : 1
stl this algorithm -> is : 1
a nice and -> short : 1
nice and short -> does : 1
and short does -> this : 1
short does this -> interesting : 1
does this interesting -> combination : 1
this interesting combination -> work : 1
interesting combination work -> in : 1
combination work in -> have : 1
work in have -> a : 1
implementation of typename -> it : 1
of typename it -> it : 1
it it p -> if : 1
it p if -> return : 1
p if return -> it : 1
return it result -> while : 1
it result while -> if : 1
result while if -> return : 1
while if return -> loop : 1
if return loop -> steps : 1
return loop steps -> over : 1
loop steps over -> the : 1
steps over the -> range : 1
over the range -> while : 1
range while they -> do : 1
while they do -> not : 1
do not satisfy -> the : 1
the predicate at -> the : 1
predicate at the -> point : 1
point where an -> item : 1
where an item -> satisfies : 1
an item satisfies -> the : 1
item satisfies the -> it : 1
satisfies the it -> moves : 1
the it moves -> such : 1
it moves such -> an : 1
moves such an -> item : 1
such an item -> one : 1
an item one -> item : 1
item one item -> past : 1
one item past -> the : 1
item past the -> old : 1
past the old -> where : 1
the old where -> the : 1
old where the -> predicate : 1
where the predicate -> fired : 1
the predicate fired -> the : 1
predicate fired the -> last : 1
fired the last -> the : 1
last the version -> of : 1
the version of -> does : 1
not accept an -> additional : 1
accept an additional -> predicate : 1
an additional predicate -> function : 1
additional predicate function -> checks : 1
predicate function checks -> whether : 1
function checks whether -> two : 1
checks whether two -> neighbor : 1
whether two neighbor -> items : 1
two neighbor items -> are : 1
neighbor items are -> this : 1
items are this -> it : 1
are this it -> wipes : 1
this it wipes -> out : 1
it wipes out -> as : 1
wipes out as -> it : 1
out as it -> can : 1
it can for -> to : 1
can for to -> we : 1
for to we -> want : 1
to we want -> is : 1
want is not -> wiping : 1
is not wiping -> out : 1
not wiping out -> characters : 1
wiping out characters -> which : 1
out characters which -> are : 1
characters which are -> but : 1
which are but -> repetitive : 1
are but repetitive -> our : 1
but repetitive our -> predicate : 1
repetitive our predicate -> does : 1
our predicate does -> not : 1
predicate does not -> say : 1
does not say -> argument : 1
does not say -> of : 1
not say argument -> characters : 1
say argument characters -> are : 1
argument characters are -> but : 1
argument characters are -> whitespace : 1
characters are but -> argument : 1
are but argument -> characters : 1
but argument characters -> are : 1
characters are whitespace -> last : 1
are whitespace last -> thing : 1
whitespace last thing -> to : 1
last thing to -> note : 1
thing to note -> is : 1
to note is -> that : 1
note is that -> neither : 1
is that neither -> nor : 1
that neither nor -> really : 1
neither nor really -> removes : 1
nor really removes -> character : 1
really removes character -> items : 1
removes character items -> from : 1
character items from -> the : 1
the underlying they -> only : 1
underlying they only -> move : 1
they only move -> characters : 1
only move characters -> within : 1
move characters within -> the : 1
characters within the -> string : 1
within the string -> according : 1
within the string -> it : 1
the string according -> to : 1
string according to -> their : 1
according to their -> semantics : 1
to their semantics -> and : 1
their semantics and -> tell : 1
semantics and tell -> where : 1
and tell where -> its : 1
tell where its -> new : 1
where its new -> end : 1
its new end -> the : 1
new end the -> removal : 1
end the removal -> of : 1
the removal of -> all : 1
removal of all -> characters : 1
of all characters -> from : 1
of all characters -> occurring : 1
all characters from -> the : 1
new end till -> the : 1
end till the -> old : 1
till the old -> end : 1
old end must -> still : 1
end must still -> be : 1
must still be -> this : 1
still be this -> is : 1
still be this -> means : 1
be this is -> why : 1
be this is -> the : 1
is why we -> wrote : 1
is why we -> would : 1
is why we -> were : 1
is why we -> reimplemented : 1
is why we -> additionally : 1
is why we -> will : 1
is why we -> need : 1
is why we -> had : 1
is why we -> write : 1
why we wrote -> the : 1
wrote the adheres -> to : 1
the adheres to -> the : 1
adheres to the -> which : 1
we already know -> from : 1
already know from -> vectors : 1
know from vectors -> and : 1
from vectors and -> and : 1
and and decompressing -> section : 1
and decompressing section -> deals : 1
decompressing section deals -> with : 1
section deals with -> a : 1
deals with a -> relatively : 1
with a relatively -> popular : 1
a relatively popular -> task : 1
relatively popular task -> in : 1
popular task in -> coding : 1
task in coding -> the : 1
in coding the -> basic : 1
coding the basic -> idea : 1
the basic idea -> is : 1
idea is a -> which : 1
takes a string -> like : 1
a string like -> and : 1
string like and -> transforms : 1
like and transforms -> it : 1
and transforms it -> to : 1
transforms it to -> a : 1
it to a -> shorter : 1
it to a -> text : 1
it to a -> better : 1
to a shorter -> string : 1
a shorter string -> it : 1
shorter string it -> is : 1
string it is -> there : 1
string it is -> always : 1
it is there -> are : 2
is there are -> and : 1
is there are -> this : 1
there are and -> then : 1
and then it -> is : 1
and then it -> will : 1
there are this -> is : 1
a very for -> normal : 1
very for normal -> it : 1
for normal it -> is : 1
is of reduced -> utility : 1
of reduced utility -> because : 1
reduced utility because -> normal : 1
utility because normal -> language : 1
because normal language -> is : 1
normal language is -> usually : 1
language is usually -> not : 1
is usually not -> so : 1
usually not so -> repetitive : 1
not so repetitive -> that : 1
so repetitive that -> its : 1
repetitive that its -> text : 1
that its text -> representation : 1
its text representation -> would : 1
text representation would -> become : 1
representation would become -> shorter : 1
would become shorter -> with : 1
become shorter with -> this : 1
shorter with this -> compression : 1
with this compression -> it : 1
this compression it -> is : 1
compression it is -> relatively : 1
it is relatively -> easy : 1
is relatively easy -> to : 1
relatively easy to -> implement : 1
to implement even -> if : 1
implement even if -> we : 1
even if we -> have : 1
even if we -> decompress : 1
even if we -> want : 1
to do it -> on : 2
do it on -> a : 1
do it on -> all : 1
on a whiteboard -> without : 1
a whiteboard without -> a : 1
whiteboard without a -> the : 1
without a the -> tricky : 1
a the tricky -> part : 1
the tricky part -> is : 1
tricky part is -> that : 1
part is that -> it : 1
easy to write -> a : 1
write a buggy -> code : 1
a buggy code -> if : 1
buggy code if -> the : 1
code if the -> program : 1
if the program -> is : 1
if the program -> sees : 1
program is not -> structured : 1
is not structured -> very : 1
not structured very -> well : 1
structured very well -> from : 1
very well from -> the : 1
well from the -> dealing : 1
from the dealing -> with : 1
the dealing with -> strings : 1
dealing with strings -> is : 1
dealing with strings -> so : 1
with strings is -> generally : 1
strings is generally -> not : 1
is generally not -> a : 1
generally not a -> hard : 1
not a hard -> but : 1
a hard but -> the : 1
hard but the -> chances : 1
but the chances -> buffer : 1
the chances buffer -> overflow : 1
chances buffer overflow -> bugs : 1
buffer overflow bugs -> lurk : 1
overflow bugs lurk -> around : 1
bugs lurk around -> legacy : 1
lurk around legacy -> formatting : 1
around legacy formatting -> functions : 1
legacy formatting functions -> are : 1
formatting functions are -> try : 1
functions are try -> an : 1
are try an -> stl : 1
try an stl -> approach : 1
an stl approach -> to : 1
stl approach to -> implementing : 1
approach to implementing -> string : 1
to implementing string -> compression : 1
implementing string compression -> and : 1
string compression and -> decompression : 1
compression and decompression -> using : 1
and decompression using -> this : 1
decompression using this -> simple : 1
using this simple -> to : 1
this simple to -> do : 1
simple to do -> this : 1
this we functions -> for : 1
we functions for -> include : 1
functions for include -> some : 1
for include some -> stl : 1
some stl libraries -> then : 1
stl libraries then -> we : 1
libraries then we -> declare : 1
then we declare -> that : 6
using namespace our -> cheap : 1
namespace our cheap -> compression : 1
our cheap compression -> we : 1
cheap compression we -> try : 1
compression we try -> to : 1
to find chunks -> of : 1
find chunks of -> text : 1
chunks of text -> containing : 1
of text containing -> ranges : 1
text containing ranges -> of : 1
containing ranges of -> the : 1
ranges of the -> same : 1
same and we -> compress : 1
and we compress -> those : 1
we compress those -> whenever : 1
compress those whenever -> we : 1
those whenever we -> start : 1
whenever we start -> at : 1
we start at -> one : 1
start at one -> string : 1
at one string -> we : 1
one string we -> want : 1
string we want -> to : 1
the first position -> where : 1
first position where -> it : 1
position where it -> contains : 1
where it contains -> a : 1
it contains a -> different : 1
it contains a -> then : 1
it contains a -> potential : 1
contains a different -> we : 1
different we use -> to : 1
the first character -> in : 2
the first character -> that : 1
the first character -> if : 1
first character in -> the : 2
which is different -> than : 1
is different than -> the : 1
different than the -> character : 1
than the character -> at : 1
character at we -> return : 1
at we return -> a : 1
return a tuple -> containing : 1
return a tuple -> template : 1
a tuple containing -> an : 1
tuple containing an -> iterator : 1
containing an iterator -> to : 1
iterator to that -> first : 1
to that first -> different : 1
that first different -> the : 1
first different the -> character : 1
different the character -> which : 1
the character which -> fills : 1
character which fills -> the : 1
which fills the -> range : 1
fills the range -> at : 1
the range at -> and : 1
range at and -> the : 1
at and the -> number : 1
number of occurrences -> subrange : 1
number of occurrences -> it : 1
of occurrences subrange -> template : 1
occurrences subrange template -> it : 1
subrange template it -> if : 1
template it if -> return : 1
it if return -> const : 1
if return const -> char : 1
return const char -> c : 1
char c const -> auto : 1
c const auto -> diff : 1
const auto diff -> return : 1
auto diff return -> c : 1
diff return c -> return : 1
return c return -> algorithm : 1
return c return -> class : 1
c return algorithm -> continuously : 1
return algorithm continuously -> calls : 1
algorithm continuously calls -> the : 1
continuously calls the -> this : 1
calls the this -> we : 1
this we jump -> from : 1
jump from one -> same : 1
from one same -> character : 1
one same character -> group : 1
same character group -> to : 1
character group to -> the : 1
group to the -> c : 1
to the c -> line : 1
the c line -> pushes : 1
c line pushes -> the : 1
line pushes the -> character : 1
pushes the character -> into : 1
the character into -> the : 1
character into the -> output : 1
output stream and -> then : 1
output stream and -> flushes : 1
stream and then -> the : 1
stream and then -> feeds : 1
stream and then -> fill : 1
then the number -> of : 1
of occurrences it -> has : 1
occurrences it has -> in : 1
it has in -> this : 1
has in this -> part : 1
in this part -> of : 1
this part of -> the : 2
input the output -> is : 1
string stream grows -> with : 1
stream grows with -> our : 1
grows with our -> in : 1
return a string -> object : 1
return a string -> from : 1
object from which -> contains : 1
object from which -> we : 1
from which contains -> the : 1
contains the compressed -> string : 1
the compressed string -> string : 1
the compressed string -> this : 1
compressed string string -> const : 1
const auto stringstream -> for : 1
auto stringstream for -> it : 1
stringstream for it -> it : 1
for it it -> const : 1
it it const -> auto : 2
it const auto -> r : 2
auto r c -> it : 2
r c it -> return : 1
r c it -> step : 1
c it return -> method : 1
it return method -> works : 1
return method works -> but : 1
method works but -> it : 1
works but it -> is : 1
it is much -> it : 1
is much it -> continuously : 1
much it continuously -> tries : 1
it continuously tries -> to : 1
continuously tries to -> get : 1
tries to get -> a : 1
a character value -> out : 1
character value out -> of : 1
input stream from -> those : 1
stream from those -> it : 1
from those it -> can : 1
those it can -> construct : 1
it can construct -> a : 1
can construct a -> string : 1
string containing the -> character : 1
containing the character -> as : 1
the character as -> often : 1
character as often -> as : 1
often as the -> number : 1
as the number -> in : 1
as the number -> of : 1
the number in -> the : 1
number in the -> we : 1
the we again -> return : 1
we again return -> a : 1
again return a -> string : 1
from the output -> by : 1
the output by -> the : 1
output by the -> this : 1
function is it -> can : 1
is it can -> be : 3
can be exploited -> can : 1
be exploited can -> you : 1
exploited can you -> we : 1
can you we -> will : 1
you we will -> have : 1
at this problem -> string : 1
this problem string -> string : 1
problem string string -> stringstream : 1
string string stringstream -> stringstream : 1
string stringstream stringstream -> char : 1
stringstream stringstream char -> while : 1
stringstream char while -> c : 1
char while c -> r : 1
while c r -> return : 1
c r return -> our : 1
r return our -> main : 1
return our main -> we : 3
our main we -> construct : 1
our main we -> play : 1
our main we -> let : 1
our main we -> create : 1
our main we -> will : 1
main we construct -> a : 1
construct a simple -> string : 1
a simple string -> with : 1
simple string with -> a : 1
string with a -> lot : 1
lot of on -> which : 1
of on which -> the : 1
on which the -> algorithm : 1
which the algorithm -> works : 1
the algorithm works -> very : 1
algorithm works very -> print : 1
works very print -> the : 1
very print the -> compressed : 1
print the compressed -> and : 1
the compressed and -> then : 1
the compressed and -> again : 1
compressed and then -> the : 1
then the compressed -> and : 1
compressed and again -> decompressed : 1
and again decompressed -> in : 1
again decompressed in -> the : 1
decompressed in the -> we : 1
we should get -> the : 1
we should get -> different : 1
should get the -> same : 1
get the same -> string : 1
get the same -> value : 1
get the same -> input : 1
get the same -> the : 1
same string as -> we : 1
string as we -> initially : 1
as we initially -> int : 1
we initially int -> string : 1
initially int string -> s : 1
string s cout -> cout : 1
s cout cout -> and : 1
cout cout and -> running : 3
it program basically -> revolves : 1
program basically revolves -> around : 1
revolves around and -> decompress : 1
around and decompress -> function : 1
and decompress function -> is : 1
decompress function is -> really : 1
function is really -> simple : 1
is really simple -> because : 1
really simple because -> it : 1
simple because it -> only : 1
because it only -> consists : 1
it only consists -> of : 1
only consists of -> variable : 1
consists of variable -> a : 1
of variable a -> line : 1
variable a line -> of : 1
a line of -> which : 1
of which actually -> does : 1
which actually does -> and : 1
actually does and -> the : 1
does and the -> following : 1
and the following -> return : 1
the following return -> the : 1
the following return -> got : 1
following return the -> code : 1
return the code -> line : 1
the code line -> which : 1
code line which -> does : 1
line which does -> something : 1
which does something -> is : 1
does something is -> the : 1
something is the -> following : 1
the following c -> r : 1
following c r -> continuously : 1
c r continuously -> reads : 1
r continuously reads -> the : 1
continuously reads the -> and : 1
reads the and -> out : 1
and out of -> the : 1
the string the -> class : 1
string the class -> hides : 1
the class hides -> a : 1
class hides a -> lot : 1
hides a lot -> of : 1
lot of string -> parsing : 1
of string parsing -> magic : 1
string parsing magic -> from : 1
parsing magic from -> us : 1
magic from us -> at : 1
from us at -> this : 1
us at this -> while : 1
us at this -> time : 1
at this while -> that : 1
this while that -> it : 1
while that it -> constructs : 1
that it constructs -> a : 1
it constructs a -> decompressed : 1
constructs a decompressed -> string : 1
a decompressed string -> chunk : 1
decompressed string chunk -> into : 1
string chunk into -> the : 1
chunk into the -> string : 1
into the string -> from : 1
the string from -> which : 1
string from which -> the : 1
from which the -> final : 1
from which the -> other : 1
which the final -> result : 1
final result string -> can : 1
result string can -> be : 1
can be returned -> back : 1
be returned back -> to : 1
returned back to -> the : 1
to the caller -> of : 1
the caller of -> if : 1
caller of if -> and : 1
of if and -> the : 1
if and the -> expression : 1
and the expression -> will : 1
the expression will -> result : 1
expression will result -> in : 1
with the compress -> function : 1
the compress function -> is : 1
compress function is -> more : 1
function is more -> we : 1
is more we -> also : 1
is more we -> can : 1
more we also -> wrote : 1
we also wrote -> a : 1
also wrote a -> little : 1
wrote a little -> helper : 1
function for we -> called : 1
for we called -> that : 1
we called that -> helper : 1
called that helper -> first : 1
that helper first -> have : 1
helper first have -> a : 1
have a glance -> at : 1
a glance at -> the : 1
glance at the -> following : 1
following diagram shows -> how : 1
diagram shows how -> it : 1
shows how it -> accepts : 1
how it accepts -> iterator : 1
it accepts iterator -> pointing : 1
accepts iterator pointing -> to : 1
beginning of a -> character : 1
of a character -> sequence : 1
a character sequence -> within : 1
character sequence within -> a : 1
sequence within a -> range : 1
within a range -> and : 1
range and the -> end : 1
range and the -> output : 1
range and the -> regular : 1
iterator of that -> using : 1
of that using -> it : 1
that using it -> finds : 1
using it finds -> the : 1
it finds the -> first : 1
it finds the -> position : 1
it finds the -> third : 1
first character that -> is : 1
character that is -> different : 1
that is different -> character : 1
is different character -> initially : 1
different character initially -> being : 1
character initially being -> pointed : 1
initially being pointed -> in : 1
being pointed in -> the : 1
pointed in the -> this : 1
the this is -> the : 1
the this is -> important : 1
the this is -> why : 1
the this is -> not : 1
the this is -> mainly : 1
is the the -> difference : 1
the the difference -> between : 1
difference between that -> new : 1
between that new -> position : 1
that new position -> and : 1
new position and -> the : 1
position and the -> old : 1
the old iterator -> position : 1
old iterator position -> is : 1
position is the -> number : 1
number of equal -> items : 1
of equal items -> equals : 1
equal items equals -> in : 1
items equals in -> the : 1
equals in the -> after : 1
in the after -> calculating : 1
the after calculating -> this : 1
after calculating this -> the : 1
calculating this the -> iterator : 1
the iterator can -> be : 1
can be reused -> in : 1
be reused in -> order : 1
reused in order -> to : 1
order to execute -> the : 1
order to execute -> them : 1
order to execute -> it : 1
to execute the -> next : 1
to execute the -> until : 1
to execute the -> function : 2
execute the next -> we : 1
next we pack -> the : 1
we pack the -> character : 1
pack the character -> of : 1
the character of -> the : 1
character of the -> length : 1
of the length -> of : 1
the subrange into -> a : 1
subrange into a -> tuple : 1
into a tuple -> and : 1
a tuple and -> return : 1
tuple and return -> the : 1
return the information -> lined : 1
the information lined -> up : 1
information lined up -> like : 1
lined up like -> we : 1
up like we -> can : 1
like we can -> jump : 1
we can jump -> from : 1
can jump from -> subrange : 1
jump from subrange -> to : 1
from subrange to -> subrange : 1
subrange to subrange -> and : 1
to subrange and -> push : 1
subrange and push -> the : 1
push the intermediate -> results : 1
the intermediate results -> into : 1
intermediate results into -> the : 1
results into the -> compressed : 1
into the compressed -> target : 1
the compressed target -> it : 1
compressed target it -> it : 1
target it it -> const : 1
c it step -> we : 1
it step we -> mentioned : 1
step we mentioned -> that : 1
we mentioned that -> the : 1
mentioned that the -> function : 1
function is not -> it : 1
function is not -> advisable : 1
function is not -> called : 1
not it can -> easily : 1
easily be the -> following : 1
be the following -> input : 1
the following input -> compressing : 1
the following input -> or : 1
following input compressing -> it : 1
input compressing it -> will : 1
compressing it will -> result : 1
it will result -> in : 1
in the there -> is : 1
the there is -> only : 1
the there is -> still : 1
is only that -> is : 1
only that is -> followed : 1
that is followed -> by : 1
is followed by -> which : 1
followed by which -> will : 1
by which will -> result : 1
which will result -> in : 2
result in this -> results : 1
in this results -> in : 1
this results in -> the : 3
this results in -> a : 1
in the compressed -> string : 1
compressed string this -> compressed : 1
string this compressed -> times : 1
this compressed times -> the : 1
compressed times the -> character : 1
times the character -> this : 1
the character this -> has : 1
character this has -> nothing : 1
this has nothing -> to : 1
has nothing to -> do : 2
nothing to do -> with : 4
do with our -> initial : 1
with our initial -> input : 1
our initial input -> even : 1
initial input even -> if : 1
input even if -> we : 1
if we decompress -> we : 1
we decompress we -> get : 1
decompress we get -> from : 1
get from a -> string : 1
a string to -> a : 1
to a imagine -> the : 1
a imagine the -> same : 1
imagine the same -> with : 1
same with larger -> user : 1
with larger user -> can : 1
larger user can -> easily : 1
user can easily -> our : 1
can easily our -> heap : 1
easily our heap -> our : 1
our heap our -> algorithm : 1
heap our algorithm -> is : 1
our algorithm is -> not : 1
algorithm is not -> prepared : 1
is not prepared -> for : 1
not prepared for -> such : 1
prepared for such -> order : 1
for such order -> to : 1
such order to -> prevent : 1
prevent the function -> for : 1
the function for -> reject : 1
function for reject -> input : 1
for reject input -> with : 1
reject input with -> or : 1
input with or -> it : 1
with or it -> could : 1
or it could -> mask : 1
it could mask -> them : 1
could mask them -> in : 1
mask them in -> a : 1
in a special -> and : 1
a special and -> the : 1
special and the -> algorithm : 1
the algorithm could -> take : 1
algorithm could take -> another : 1
could take another -> which : 1
take another which -> puts : 1
another which puts -> an : 1
which puts an -> upper : 1
puts an upper -> bound : 1
an upper bound -> on : 1
an upper bound -> value : 1
upper bound on -> the : 1
bound on the -> resulting : 1
on the resulting -> string : 2
the resulting string -> i : 1
the resulting string -> afterward : 1
resulting string i -> am : 1
string i am -> leaving : 1
i am leaving -> this : 1
am leaving this -> as : 1
leaving this as -> an : 1
this as an -> exercise : 1
an exercise stream -> and : 1
exercise stream and -> regular : 1
and regular will -> cover : 1
regular will cover -> the : 1
in this and -> transforming : 1
in this and -> to : 1
in this and -> not : 1
this and transforming -> whitespace : 1
comfort of without -> the : 1
of without the -> cost : 1
without the cost -> of : 1
on the exceptions -> from : 1
the exceptions from -> errors : 1
exceptions from errors -> chapter : 1
from errors chapter -> is : 1
errors chapter is -> devoted : 1
chapter is devoted -> to : 1
is devoted to -> string : 1
devoted to string -> and : 1
to string and -> printing : 1
string and printing -> of : 1
and printing of -> arbitrary : 1
printing of arbitrary -> for : 1
of arbitrary for -> such : 1
arbitrary for such -> stl : 1
for such stl -> provides : 1
such stl provides -> its : 1
stl provides its -> stream : 1
provides its stream -> the : 1
its stream the -> library : 1
stream the library -> basically : 1
the library basically -> consists : 1
library basically consists -> of : 1
basically consists of -> the : 1
of the following -> which : 1
of the following -> random : 1
following which are -> each : 1
which are each -> depicted : 1
are each depicted -> in : 1
each depicted in -> gray : 1
depicted in gray -> arrows : 1
in gray arrows -> show : 1
gray arrows show -> the : 1
arrows show the -> inheritance : 1
show the inheritance -> scheme : 1
the inheritance scheme -> of : 1
inheritance scheme of -> the : 1
scheme of the -> this : 1
the this might -> look : 1
this might look -> very : 1
might look very -> overwhelming : 1
look very overwhelming -> at : 1
very overwhelming at -> but : 1
overwhelming at but -> we : 1
at but we -> will : 1
will get to -> use : 1
get to use -> most : 1
to use most -> of : 1
use most of -> these : 1
most of these -> classes : 1
of these classes -> in : 1
these classes in -> this : 1
classes in this -> chapter : 1
this chapter and -> get : 1
chapter and get -> familiar : 1
and get familiar -> with : 1
get familiar with -> them : 1
get familiar with -> we : 1
get familiar with -> a : 1
get familiar with -> those : 1
familiar with them -> class : 1
with them class -> by : 1
them class by -> when : 1
class by when -> looking : 1
by when looking -> at : 1
when looking at -> those : 1
looking at those -> classes : 1
at those classes -> in : 1
those classes in -> the : 1
classes in the -> stl : 1
classes in the -> mutex : 1
stl we will -> not : 1
stl we will -> print : 1
will not find -> them : 1
not find them -> directly : 1
find them directly -> with : 1
them directly with -> these : 1
directly with these -> that : 1
with these that -> is : 1
these that is -> because : 1
that is because -> the : 1
because the names -> in : 1
the names in -> the : 1
the names in -> a : 1
names in the -> diagram : 1
in the diagram -> are : 2
the diagram are -> what : 1
the diagram are -> specialized : 1
diagram are what -> we : 1
what we see -> as : 1
we see as -> application : 1
see as application -> but : 1
as application but -> they : 1
application but they -> are : 1
they are really -> mostly : 1
are really mostly -> just : 1
really mostly just -> typedefs : 1
mostly just typedefs -> of : 1
just typedefs of -> classes : 1
typedefs of classes -> with : 1
of classes with -> a : 1
classes with a -> class : 1
with a class -> name : 1
a class name -> prefix : 1
class name prefix -> we : 1
name prefix we -> will : 1
prefix we will -> have : 1
will have an -> easier : 1
have an easier -> job : 1
an easier job -> searching : 1
easier job searching -> the : 1
job searching the -> stl : 1
searching the stl -> documentation : 1
stl documentation for -> rather : 1
stl documentation for -> and : 1
documentation for rather -> than : 1
for rather than -> the : 1
rather than the -> stream : 1
than the stream -> classes : 1
the stream classes -> are : 1
stream classes are -> templates : 1
classes are templates -> that : 1
are templates that -> can : 1
templates that can -> be : 1
that can be -> specialized : 1
that can be -> input : 1
that can be -> set : 1
that can be -> or : 1
that can be -> functions : 1
that can be -> used : 1
that can be -> executed : 1
that can be -> run : 1
be specialized for -> different : 1
specialized for different -> character : 1
for different character -> in : 1
different character in -> the : 1
diagram are specialized -> will : 1
are specialized will -> use : 1
specialized will use -> these : 1
will use these -> the : 1
use these the -> if : 1
these the if -> we : 1
if we prefix -> those : 1
we prefix those -> class : 1
prefix those class -> the : 1
those class the -> we : 1
class the we -> get : 1
we get and -> so : 1
get and so -> are : 1
are the specialization -> typedefs : 1
the specialization typedefs -> for : 1
specialization typedefs for -> instead : 1
typedefs for instead -> of : 1
for instead of -> for : 1
for instead of -> blocking : 1
instead of for -> the : 1
for the top -> of : 1
the top of -> the : 1
we see we -> will : 1
see we will -> basically : 1
we will basically -> never : 1
will basically never -> use : 1
basically never use -> it : 1
never use it -> but : 1
use it but -> it : 1
it but it -> is : 1
it is listed -> for : 1
is listed for -> all : 1
listed for all -> other : 1
for all other -> classes : 1
for all other -> producer : 1
all other classes -> inherit : 1
other classes inherit -> from : 1
classes inherit from -> the : 2
inherit from the -> next : 1
inherit from the -> existing : 1
inherit from the -> same : 1
the next specialization -> is : 1
next specialization is -> which : 1
specialization is which -> embodies : 1
is which embodies -> the : 1
which embodies the -> idea : 1
embodies the idea -> of : 2
idea of an -> object : 1
of an object -> which : 1
an object which -> maintains : 1
object which maintains -> a : 1
which maintains a -> stream : 1
maintains a stream -> of : 1
stream of be -> in : 1
of be in -> run : 1
be in run -> of : 1
in run of -> data : 1
run of data -> state : 1
of data state -> or : 1
data state or -> some : 1
state or some -> kind : 1
or some kind -> of : 1
kind of first -> specializations : 1
of first specializations -> we : 1
first specializations we -> are : 1
specializations we are -> going : 1
going to actually -> use : 1
to actually use -> are : 1
actually use are -> and : 1
use are and -> the : 1
and the prefix -> stand : 1
the prefix stand -> for : 1
prefix stand for -> input : 1
stand for input -> and : 1
for input and -> we : 1
input and we -> have : 1
and we have -> seen : 1
and we have -> can : 1
have seen them -> in : 1
seen them in -> our : 1
them in our -> earliest : 1
them in our -> concrete : 1
in our earliest -> days : 1
our earliest days -> of : 1
earliest days of -> programming : 1
days of programming -> in : 1
of programming in -> the : 1
programming in the -> simplest : 1
in the simplest -> examples : 1
in the simplest -> this : 1
the simplest examples -> in : 1
the simplest examples -> are : 1
simplest examples in -> form : 1
examples in form -> of : 1
form of the -> objects : 1
form of the -> type : 1
form of the -> parameter : 1
form of the -> stl : 1
of the objects -> and : 1
the objects and -> also : 1
objects and also -> these : 1
and also these -> are : 1
also these are -> instances : 1
these are instances -> of : 1
are instances of -> those : 1
instances of those -> which : 1
of those which -> are : 1
those which are -> always : 1
which are always -> globally : 1
are always globally -> we : 1
always globally we -> do : 1
globally we do -> data : 1
we do data -> output : 1
do data output -> via : 1
data output via -> input : 1
output via input -> via : 1
via input via -> class : 1
input via class -> which : 1
via class which -> inherits : 1
class which inherits -> from : 1
which inherits from -> both : 1
inherits from both -> and : 1
from both and -> is : 1
both and is -> it : 1
and is it -> combines : 1
is it combines -> both : 1
it combines both -> input : 1
combines both input -> and : 1
both input and -> output : 1
input and output -> when : 1
and output when -> we : 1
output when we -> understand : 1
when we understand -> how : 1
we understand how -> all : 1
understand how all -> classes : 1
how all classes -> from : 1
all classes from -> the : 1
classes from the -> trio : 1
from the trio -> consisting : 1
the trio consisting -> and : 1
trio consisting and -> be : 1
consisting and be -> we : 1
and be we -> basically : 1
be we basically -> are : 1
we basically are -> ready : 1
basically are ready -> to : 1
are ready to -> immediately : 1
ready to immediately -> put : 1
to immediately put -> all : 1
immediately put all -> following : 1
put all following -> ones : 1
all following ones -> to : 1
following ones to -> and : 1
ones to and -> inherit : 1
to and inherit -> from : 1
and inherit from -> and : 1
inherit from and -> but : 1
from and but -> lift : 1
and but lift -> their : 1
but lift their -> capabilities : 1
lift their capabilities -> to : 1
their capabilities to -> redirect : 1
capabilities to redirect -> the : 1
to redirect the -> from : 1
to redirect the -> output : 1
redirect the from -> and : 1
the from and -> to : 1
from and to -> files : 1
from and to -> character : 1
and to files -> from : 1
to files from -> the : 1
files from the -> and : 1
the and work -> pretty : 1
and work pretty -> they : 1
work pretty they -> help : 1
pretty they help -> build : 1
they help build -> strings : 1
help build strings -> in : 1
build strings in -> consuming : 1
strings in consuming -> data : 1
in consuming data -> from : 1
consuming data from -> and : 1
data from and -> transforming : 1
from and transforming -> programmers : 1
and transforming programmers -> from : 1
transforming programmers from -> the : 1
programmers from the -> very : 1
from the very -> old : 1
the very old -> days : 1
very old days -> will : 1
old days will -> know : 1
days will know -> about : 1
will know about -> while : 1
know about while -> string : 1
about while string -> handling : 1
while string handling -> is : 1
string handling is -> tedious : 1
handling is tedious -> and : 1
is tedious and -> painful : 1
tedious and painful -> in : 1
and painful in -> especially : 1
painful in especially -> when : 1
in especially when -> copying : 1
especially when copying -> and : 1
when copying and -> so : 1
copying and so -> is : 1
so is a -> real : 1
a real step -> forward : 1
real step forward -> regarding : 1
step forward regarding -> simplicity : 1
forward regarding simplicity -> and : 1
regarding simplicity and -> to : 1
simplicity and to -> we : 1
and to we -> even : 1
to we even -> need : 1
we even need -> to : 1
to copy strings -> when : 1
copy strings when -> we : 1
strings when we -> want : 1
when we want -> to : 2
when we want -> a : 2
want to transfer -> ownership : 1
to transfer ownership -> to : 1
transfer ownership to -> some : 1
ownership to some -> other : 1
to some other -> function : 1
some other function -> or : 1
other function or -> data : 1
function or data -> structure : 1
or data structure -> anymore : 1
data structure anymore -> because : 1
structure anymore because -> we : 1
anymore because we -> can : 1
we can this -> not : 1
can this not -> much : 1
this not much -> overhead : 1
not much overhead -> involved : 1
much overhead involved -> in : 1
overhead involved in -> most : 1
involved in most -> got : 1
in most got -> a : 1
most got a -> few : 1
got a few -> new : 1
a few new -> features : 1
few new features -> here : 1
new features here -> and : 1
features here and -> there : 1
here and there -> over : 1
and there over -> the : 1
there over the -> last : 1
over the last -> few : 1
the last few -> standard : 1
last few standard -> what : 1
few standard what -> is : 1
standard what is -> completely : 1
what is completely -> new : 1
is completely new -> in : 1
completely new in -> is : 1
new in is -> we : 1
in is we -> will : 1
play with both -> a : 1
with both a -> bit : 1
both a bit -> there : 1
a bit there -> is : 1
bit there is -> another : 1
there is another -> which : 1
there is another -> thread : 1
is another which -> concentrates : 1
another which concentrates -> more : 1
which concentrates more -> on : 1
concentrates more on -> to : 1
more on to -> get : 1
on to get -> a : 1
a feeling and -> how : 1
feeling and how -> they : 1
how they work -> in : 1
they work in -> the : 1
work in the -> to : 1
in the to -> do : 1
to do strings -> and : 1
do strings and -> string : 1
strings and string -> views : 3
strings and string -> for : 1
strings and string -> we : 1
and string views -> and : 1
and string views -> we : 1
and string views -> in : 1
string views and -> do : 1
views and do -> basic : 1
and do basic -> concatenation : 1
do basic concatenation -> and : 1
basic concatenation and -> transformation : 1
concatenation and transformation -> with : 1
and transformation with -> them : 1
transformation with them -> in : 1
them in this -> we : 1
them in this -> and : 1
them in this -> in : 1
this we first -> include : 1
this we first -> skip : 1
this we first -> instantiated : 1
this we first -> created : 1
we first include -> header : 1
we first include -> the : 1
first include header -> files : 1
include header files -> and : 1
header files and -> declare : 1
files and declare -> that : 1
using namespace first -> create : 1
using namespace first -> prompt : 1
using namespace first -> define : 1
namespace first create -> string : 1
first create string -> the : 1
create string the -> most : 1
string the most -> obvious : 1
the most obvious -> way : 1
most obvious way -> is : 1
obvious way is -> instantiating : 1
way is instantiating -> an : 1
is instantiating an -> object : 1
instantiating an object -> of : 1
an object of -> class : 1
an object of -> this : 1
an object of -> type : 2
object of class -> we : 1
of class we -> control : 1
class we control -> its : 1
we control its -> content : 1
control its content -> by : 1
its content by -> giving : 1
content by giving -> the : 1
by giving the -> constructor : 1
giving the constructor -> a : 1
the constructor a -> string : 1
constructor a string -> will : 1
a string will -> be : 1
string will be -> embedded : 1
will be embedded -> in : 1
be embedded in -> the : 1
embedded in the -> binary : 1
embedded in the -> variable : 1
the binary as -> a : 1
binary as a -> static : 1
a static array -> containing : 1
static array containing -> characters : 1
array containing characters -> after : 1
containing characters after -> the : 1
characters after the -> constructor : 1
after the constructor -> will : 1
the constructor will -> copy : 1
constructor will copy -> it : 1
will copy it -> and : 1
copy it and -> make : 1
it and make -> it : 1
and make it -> the : 1
and make it -> a : 1
make it the -> content : 1
it the content -> of : 1
content of string -> object : 1
content of string -> stream : 1
of string object -> instead : 1
string object instead -> of : 1
instead of initializing -> it : 1
of initializing it -> from : 1
initializing it from -> a : 1
it from a -> we : 1
from a we -> can : 1
from a we -> let : 1
use the string -> literal : 1
the string literal -> operator : 1
string literal operator -> it : 1
literal operator it -> creates : 1
operator it creates -> a : 1
it creates a -> string : 1
creates a string -> object : 1
string object on -> the : 1
object on the -> using : 1
on the using -> that : 1
the using that -> to : 1
using that to -> construct : 1
that to construct -> object : 1
to construct object -> we : 1
construct object we -> can : 1
can even use -> automatic : 1
even use automatic -> type : 1
use automatic type -> int : 1
automatic type int -> string : 1
type int string -> a : 1
int string a -> auto : 1
string a auto -> b : 1
auto b strings -> we : 1
b strings we -> just : 1
strings we just -> created : 1
we just created -> are : 1
just created are -> their : 1
created are their -> input : 1
are their input -> from : 1
their input from -> the : 1
input from the -> constructor : 1
from the constructor -> argument : 1
the constructor argument -> into : 1
constructor argument into -> their : 1
argument into their -> own : 1
into their own -> in : 1
into their own -> the : 1
their own in -> order : 1
own in order -> to : 1
to not but -> the : 1
but the underlying -> we : 1
the underlying we -> can : 1
underlying we can -> use : 1
can use this -> class : 1
use this class -> does : 1
this class does -> also : 1
class does also -> have : 1
does also have -> a : 1
also have a -> literal : 1
also have a -> look : 1
have a literal -> and : 1
a literal and -> it : 1
literal and it -> is : 1
it is called -> c : 1
is called c -> auto : 1
called c auto -> d : 1
c auto d -> now : 1
c auto d -> auto : 1
auto d now -> play : 1
d now play -> with : 1
now play with -> our : 1
play with our -> strings : 1
with our strings -> and : 1
our strings and -> string : 1
and string for -> both : 1
string for both -> there : 1
for both there -> overloads : 1
both there overloads -> for : 1
there overloads for -> the : 1
overloads for the -> so : 1
for the so -> they : 1
can be printed -> cout : 1
can be printed -> in : 1
can be printed -> and : 1
be printed cout -> a : 1
printed cout a -> b : 1
b cout c -> d : 1
cout c d -> string : 1
c d string -> class : 1
d string class -> so : 1
string class so -> we : 1
class so we -> can : 1
we can two -> strings : 1
can two strings -> and : 1
two strings and -> get : 1
strings and get -> their : 1
and get their -> concatenation : 1
get their concatenation -> as : 1
their concatenation as -> a : 1
concatenation as a -> this : 1
as a this -> in : 1
a this in -> concatenating : 1
this in concatenating -> and : 1
in concatenating and -> this : 1
concatenating and this -> way : 1
and this way -> is : 1
this way is -> with : 1
way is with -> and : 1
with and it -> is : 1
is not that -> because : 1
not that because -> c : 1
that because c -> is : 1
because c is -> not : 1
c is not -> a : 1
not a but -> a : 1
a but a -> we : 1
but a we -> have : 1
a we have -> to : 1
get the string -> out : 1
the string out -> of : 1
string out of -> and : 1
out of and -> this : 1
and this can -> be : 1
be done by -> constructing : 1
done by constructing -> a : 1
by constructing a -> new : 1
constructing a new -> string : 1
string from and -> then : 1
from and then -> adding : 1
from and then -> recursively : 1
and then adding -> it : 1
then adding it -> to : 1
adding it to -> at : 1
it to at -> this : 1
to at this -> point : 1
this point one -> could : 1
point one could -> why : 1
one could why -> are : 1
could why are -> you : 1
why are you -> copying : 1
are you copying -> into : 1
you copying into -> an : 1
copying into an -> intermediate : 1
into an intermediate -> string : 1
an intermediate string -> object : 1
intermediate string object -> just : 1
string object just -> in : 1
object just in -> order : 1
just in order -> to : 1
order to add -> it : 1
to add it -> to : 1
add it to -> you : 1
it to you -> avoid : 1
to you avoid -> that : 1
you avoid that -> copy : 1
avoid that copy -> by : 1
that copy by -> using : 1
copy by using -> that : 1
by using that -> is : 1
using that is -> a : 1
a nice but -> it : 1
nice but it -> has : 1
has a instances -> do : 1
a instances do -> not : 1
instances do not -> have : 1
have to carry -> and : 1
to carry and -> this : 1
carry and this -> is : 1
is a problem -> lead : 1
is a problem -> the : 1
a problem lead -> to : 1
problem lead to -> buffer : 1
lead to buffer -> cout : 1
to buffer cout -> a : 1
buffer cout a -> b : 1
b cout a -> create : 1
cout a create -> a : 1
a create a -> new : 1
new which contains -> all : 1
which contains all -> of : 1
contains all of -> the : 1
the strings and -> string : 1
the strings and -> which : 2
string views we -> just : 1
views we just -> by : 1
we just by -> using : 1
just by using -> we : 1
by using we -> can : 2
we can any -> variable : 1
can any variable -> into : 1
any variable into -> a : 1
variable into a -> stream : 1
into a stream -> object : 1
a stream object -> exactly : 1
a stream object -> has : 1
stream object exactly -> like : 1
object exactly like -> but : 1
but it print -> to : 1
it print to -> the : 1
the it prints -> into : 1
it prints into -> a : 1
prints into a -> after : 1
into a after -> we : 1
a after we -> streamed : 1
after we streamed -> all : 1
we streamed all -> the : 1
streamed all the -> variables : 1
the variables with -> some : 1
variables with some -> separating : 1
with some separating -> space : 1
some separating space -> between : 1
separating space between -> them : 1
space between them -> using : 1
between them using -> we : 1
them using we -> can : 1
and print a -> new : 1
and print a -> lot : 1
and print a -> bar : 1
and print a -> composed : 1
print a new -> string : 1
new string object -> from : 1
object from that -> with : 1
from that with -> ostringstream : 1
that with ostringstream -> o : 1
with ostringstream o -> a : 1
ostringstream o a -> b : 1
o a b -> c : 1
b c auto -> concatenated : 1
c auto concatenated -> cout : 1
auto concatenated cout -> concatenated : 1
concatenated cout concatenated -> can : 1
cout concatenated can -> now : 1
concatenated can now -> also : 1
can now also -> transform : 1
now also transform -> that : 1
also transform that -> new : 1
transform that new -> string : 1
that new string -> by : 1
new string by -> converting : 1
string by converting -> all : 1
by converting all -> its : 1
converting all its -> letters : 1
all its letters -> to : 1
its letters to -> upper : 1
letters to upper -> for : 1
to upper for -> the : 1
upper for the -> c : 1
for the c -> library : 1
the c library -> function : 1
the c library -> for : 1
the c library -> before : 1
c library function -> which : 1
library function which -> maps : 1
function which maps -> characters : 1
which maps characters -> to : 1
maps characters to -> characters : 1
maps characters to -> lower : 1
characters to characters -> and : 1
to characters and -> leaves : 1
characters and leaves -> other : 1
and leaves other -> characters : 1
leaves other characters -> is : 1
leaves other characters -> static : 1
other characters is -> already : 1
characters is already -> available : 1
is already available -> and : 1
already available and -> can : 1
available and can -> be : 1
can be combined -> with : 2
combined with a -> string : 1
with a string -> is : 1
with a string -> that : 1
string is basically -> also : 1
is basically also -> an : 1
basically also an -> iterable : 1
also an iterable -> container : 1
an iterable container -> object : 1
iterable container object -> with : 1
container object with -> cout : 1
object with cout -> concatenated : 1
with cout concatenated -> and : 1
cout concatenated and -> running : 1
concatenated and running -> the : 1
what we b -> d : 1
we b d -> ab : 1
b d ab -> ac : 1
d ab ac -> a : 1
ab ac a -> b : 1
ac a b -> c : 1
c d a -> b : 1
d a b -> c : 1
b c it -> strings : 1
c it strings -> can : 1
it strings can -> be : 1
strings can be -> added : 1
can be added -> with : 1
can be added -> to : 1
be added with -> the : 1
added with the -> operator : 1
the operator like -> but : 1
operator like but -> that : 1
like but that -> has : 1
but that has -> nothing : 1
that has nothing -> to : 1
do with math -> but : 1
with math but -> results : 1
math but results -> in : 1
but results in -> in : 1
results in in -> order : 1
order to mix -> this : 1
to mix this -> with : 1
mix this with -> we : 1
this with we -> need : 1
with we need -> to : 1
need to convert -> to : 1
to convert to -> it : 1
convert to it -> is : 1
it is really -> important : 1
it is really -> different : 1
it is really -> easy : 1
really important to -> note : 1
important to note -> that : 1
note that when -> mixing : 1
that when mixing -> strings : 1
when mixing strings -> and : 1
mixing strings and -> string : 1
string views in -> we : 1
views in we -> must : 1
in we must -> never : 1
we must never -> assume : 1
must never assume -> that : 1
never assume that -> the : 1
that the underlying -> string : 1
the underlying string -> behind : 1
the underlying string -> was : 1
underlying string behind -> a : 1
string behind a -> is : 1
behind a is -> this : 1
a is this -> is : 1
why we would -> rather : 1
we would rather -> write : 1
would rather write -> than : 1
rather write than -> aside : 1
write than aside -> from : 1
than aside from -> provides : 1
aside from provides -> a : 1
from provides a -> member : 1
provides a member -> which : 1
member which can -> handle : 1
which can handle -> but : 1
which can handle -> more : 1
can handle but -> it : 1
handle but it -> alters : 1
but it alters -> the : 1
it alters the -> string : 1
alters the string -> instead : 1
the string instead -> of : 1
string instead of -> returning : 1
string instead of -> parsing : 1
string instead of -> spaces : 1
instead of returning -> a : 1
of returning a -> new : 1
returning a new -> one : 1
new one with -> the : 1
one with the -> string : 1
with the string -> view : 1
the string view -> content : 1
the string view -> and : 1
the string view -> automatically : 1
the string view -> data : 1
string view content -> is : 1
view content is -> but : 1
content is but -> be : 1
is but be -> cautious : 1
but be cautious -> when : 1
be cautious when -> mixing : 1
cautious when mixing -> it : 1
when mixing it -> with : 1
mixing it with -> strings : 1
it with strings -> and : 1
and string we -> cannot : 1
string we cannot -> assume : 1
we cannot assume -> that : 1
cannot assume that -> they : 1
cannot assume that -> it : 1
assume that they -> are : 1
they are which -> breaks : 1
are which breaks -> things : 1
which breaks things -> quickly : 1
breaks things quickly -> in : 1
things quickly in -> a : 1
quickly in a -> standard : 1
in a standard -> string : 1
a standard string -> there : 1
standard string there -> are : 1
string there are -> often : 1
string there are -> a : 1
there are often -> proper : 1
are often proper -> function : 1
often proper function -> which : 1
proper function which -> can : 1
function which can -> deal : 1
which can deal -> with : 1
deal with them -> the : 1
with them the -> right : 1
them the right -> we : 1
right we want -> to : 1
want to do -> complex : 1
to do complex -> string : 1
do complex string -> concatenation : 1
complex string concatenation -> with : 1
string concatenation with -> formatting : 1
concatenation with formatting -> and : 1
with formatting and -> so : 1
formatting and so -> we : 1
so we should -> however : 1
we should however -> not : 1
should however not -> do : 1
however not do -> that : 1
not do that -> piece : 1
do that piece -> by : 1
that piece by -> piece : 1
piece by piece -> on : 1
by piece on -> string : 1
piece on string -> the : 1
on string the -> and : 1
string the and -> classes : 1
the and classes -> are : 1
and classes are -> much : 1
classes are much -> better : 1
are much better -> suited : 1
much better suited -> for : 1
better suited for -> as : 1
suited for as -> they : 1
for as they -> enhance : 1
as they enhance -> the : 1
they enhance the -> memory : 1
enhance the memory -> management : 1
the memory management -> while : 1
memory management while -> and : 1
management while and -> provide : 1
while and provide -> all : 1
and provide all -> the : 1
provide all the -> formatting : 1
all the formatting -> features : 1
the formatting features -> we : 1
formatting features we -> know : 1
features we know -> from : 1
we know from -> streams : 1
we know from -> for : 1
know from streams -> in : 1
from streams in -> is : 1
streams in is -> what : 1
in is what -> we : 1
what we chose -> in : 1
we chose in -> this : 1
chose in this -> we : 1
this we were -> going : 1
we were going -> to : 1
were going to -> create : 1
a string instead -> of : 1
instead of parsing -> an : 1
of parsing an -> instance : 1
parsing an instance -> could : 1
an instance could -> have : 1
instance could have -> been : 1
have been instantiated -> from : 1
been instantiated from -> an : 1
instantiated from an -> existing : 1
from an existing -> which : 1
existing which we -> could : 1
which we could -> have : 1
we could have -> then : 1
could have then -> comfortably : 1
have then comfortably -> parsed : 1
then comfortably parsed -> into : 1
comfortably parsed into -> variables : 1
parsed into variables -> of : 1
into variables of -> other : 1
variables of other -> if : 1
of other if -> we : 1
other if we -> want : 1
want to combine -> is : 1
to combine is -> the : 1
combine is the -> perfect : 1
is the perfect -> whitespace : 1
the perfect whitespace -> from : 1
perfect whitespace from -> the : 1
end of when -> obtaining : 1
of when obtaining -> strings : 1
when obtaining strings -> from : 1
obtaining strings from -> user : 1
strings from user -> they : 1
user they are -> often : 1
they are often -> polluted : 1
are often polluted -> with : 1
often polluted with -> unneeded : 1
polluted with unneeded -> white : 1
with unneeded white -> in : 1
unneeded white in -> another : 1
white in another -> we : 1
in another we -> removed : 1
in another we -> also : 1
in another we -> need : 1
in another we -> give : 1
another we removed -> excess : 1
we removed excess -> whitespace : 1
removed excess whitespace -> that : 1
excess whitespace that -> occurred : 1
whitespace that occurred -> between : 1
that occurred between -> now : 1
occurred between now -> have : 1
between now have -> a : 1
look at strings -> surrounded : 1
at strings surrounded -> by : 1
strings surrounded by -> whitespace : 1
surrounded by whitespace -> and : 1
surrounded by whitespace -> but : 1
surrounded by whitespace -> print : 1
by whitespace and -> remove : 1
whitespace and remove -> has : 1
and remove has -> some : 1
remove has some -> nice : 1
has some nice -> helper : 1
some nice helper -> functions : 1
nice helper functions -> for : 1
helper functions for -> getting : 1
functions for getting -> this : 1
for getting this -> job : 1
getting this job -> reading : 1
this job reading -> this : 1
job reading this -> recipe : 1
reading this recipe -> that : 1
this recipe that -> shows : 1
recipe that shows -> how : 1
that shows how -> to : 1
do this with -> plain : 1
do this with -> a : 1
do this with -> activated : 1
do this with -> uses : 1
this with plain -> string : 1
with plain string -> make : 1
plain string make -> sure : 1
string make sure -> to : 1
make sure to -> also : 1
sure to also -> read : 1
to also read -> the : 1
also read the -> following : 1
read the following -> there : 1
the following there -> we : 1
following there we -> will : 1
there we will -> see : 1
how to avoid -> unnecessary : 1
to avoid unnecessary -> copies : 1
avoid unnecessary copies -> or : 2
unnecessary copies or -> data : 1
unnecessary copies or -> and : 1
copies or data -> modifications : 1
or data modifications -> with : 1
data modifications with -> the : 1
modifications with the -> new : 1
the new to -> do : 1
new to do -> this : 1
we a helper -> function : 1
a helper function -> that : 5
a helper function -> a : 1
a helper function -> it : 1
function that identifies -> surrounding : 1
that identifies surrounding -> white : 1
identifies surrounding white -> space : 1
surrounding white space -> in : 1
white space in -> a : 1
space in a -> string : 1
string and returns -> a : 2
returns a copy -> without : 1
a copy without -> and : 1
copy without and -> then : 1
without and then -> we : 1
going to test -> it : 1
to test it -> the : 1
test it the -> header : 1
it the header -> includes : 1
the header includes -> and : 1
header includes and -> using : 2
includes and using -> directive : 2
and using directive -> come : 2
using directive come -> using : 2
directive come using -> namespace : 2
come using namespace -> function : 1
come using namespace -> implement : 1
come using namespace -> we : 1
using namespace function -> to : 1
using namespace function -> accepts : 1
using namespace function -> was : 1
namespace function to -> trim : 1
function to trim -> whitespace : 1
to trim whitespace -> surrounding : 1
trim whitespace surrounding -> a : 1
whitespace surrounding a -> string : 1
surrounding a string -> takes : 1
a string takes -> a : 1
string takes a -> const : 1
takes a const -> reference : 1
a const reference -> to : 1
const reference to -> an : 1
reference to an -> existing : 1
an existing it -> will : 1
existing it will -> return : 1
will return a -> new : 1
will return a -> tuple : 1
new string without -> any : 1
string without any -> surrounding : 1
without any surrounding -> string : 1
any surrounding string -> string : 1
surrounding string string -> provides : 1
string string provides -> two : 1
string provides two -> handy : 1
provides two handy -> which : 1
two handy which -> help : 1
handy which help -> us : 1
which help us -> a : 1
help us a -> the : 1
us a the -> first : 1
a the first -> is : 1
a the first -> type : 1
first is which -> accepts : 1
is which accepts -> a : 1
accepts a string -> containing : 1
accepts a string -> and : 2
the characters we -> want : 1
characters we want -> to : 1
want to skip -> this : 1
to skip this -> of : 1
skip this of -> meaning : 1
this of meaning -> the : 1
of meaning the -> characters : 1
meaning the characters -> space : 1
the characters space -> tab : 1
characters space tab -> and : 1
space tab and -> new : 1
tab and new -> it : 1
and new it -> returns : 1
new it returns -> us : 1
us the first -> character : 1
first character if -> there : 1
character if there -> is : 1
is only whitespace -> in : 1
only whitespace in -> the : 1
whitespace in the -> it : 1
it returns this -> means : 1
returns this means -> that : 1
means that there -> is : 1
is only an -> empty : 1
only an empty -> string : 1
an empty string -> left : 1
empty string left -> if : 1
string left if -> we : 1
left if we -> trim : 1
if we trim -> whitespace : 1
we trim whitespace -> from : 1
trim whitespace from -> in : 1
whitespace from in -> such : 1
from in such -> just : 1
in such just -> return : 1
such just return -> an : 1
just return an -> empty : 1
return an empty -> const : 1
return an empty -> optional : 1
an empty const -> char : 1
empty const char -> const : 1
char const first -> if : 1
const first if -> return : 1
if return know -> now : 1
return know now -> where : 1
know now where -> the : 1
now where the -> new : 1
the new string -> has : 1
new string has -> to : 1
string has to -> but : 1
has to but -> we : 1
to but we -> know : 1
but we know -> where : 1
we know where -> it : 1
know where it -> has : 1
where it has -> to : 1
it has to -> we : 1
has to we -> use : 1
to we use -> the : 1
to we use -> to : 1
use the other -> handy : 1
the other handy -> string : 1
other handy string -> function : 1
handy string function -> it : 1
string function it -> will : 1
function it will -> return : 1
us the last -> character : 1
the last character -> position : 1
the last character -> group : 1
last character position -> in : 1
character position in -> the : 1
the string which -> is : 1
which is no -> const : 1
is no const -> last : 1
no const last -> we : 1
const last we -> can : 1
can now return -> the : 1
now return the -> part : 1
return the part -> of : 1
which is surrounded -> by : 1
by whitespace but -> without : 1
whitespace but without -> the : 1
but without the -> white : 1
without the white -> this : 1
the white this -> function : 1
white this function -> takes : 1
function takes two -> in : 1
takes two in -> the : 1
two in the -> string : 1
two in the -> case : 1
the string to -> begin : 1
string to begin -> with : 1
to begin with -> and : 1
begin with and -> the : 1
with and the -> of : 1
with and the -> operation : 1
and the of -> this : 1
of this return -> first : 1
this return first -> write : 1
return first write -> a : 1
first write a -> main : 1
main function in -> which : 1
function in which -> we : 1
which we create -> a : 1
we create a -> string : 1
we create a -> vector : 1
we create a -> function : 1
we create a -> symbolic : 1
a string a -> text : 1
a string a -> simplified : 1
a string a -> lot : 1
string a text -> sentence : 1
a text sentence -> with : 1
text sentence with -> all : 1
sentence with all -> kinds : 1
with all kinds -> of : 1
kinds of in -> order : 1
kinds of in -> this : 1
of in order -> to : 5
order to trim -> int : 1
to trim int -> string : 1
trim int string -> s : 1
string s string -> surrounded : 1
s string surrounded -> by : 1
string surrounded by -> whitespace : 1
by whitespace print -> the : 1
whitespace print the -> untrimmed : 1
print the untrimmed -> and : 1
the untrimmed and -> trimmed : 1
untrimmed and trimmed -> versions : 1
and trimmed versions -> of : 1
trimmed versions of -> the : 1
versions of the -> by : 1
versions of the -> stl : 1
of the by -> surrounding : 1
the by surrounding -> the : 1
by surrounding the -> string : 1
surrounding the string -> with : 1
string with more -> obvious : 1
with more obvious -> which : 1
more obvious which -> whitespace : 1
obvious which whitespace -> belonged : 1
which whitespace belonged -> to : 1
whitespace belonged to -> it : 1
belonged to it -> prior : 1
to it prior -> to : 1
it prior to -> cout : 1
prior to cout -> s : 1
to cout s -> cout : 1
cout s cout -> and : 1
s cout and -> running : 1
program yields us -> the : 5
program yields us -> three : 1
yields us the -> output : 1
yields us the -> following : 3
yields us the -> expected : 1
yields us the -> right : 1
us the output -> we : 1
output we surrounded -> by : 1
we surrounded by -> ugly : 1
surrounded by ugly -> surrounded : 1
surrounded by ugly -> it : 1
by ugly surrounded -> by : 1
ugly surrounded by -> ugly : 1
by ugly it -> this : 1
ugly it this -> we : 1
we used and -> both : 1
we used and -> an : 1
used and both -> functions : 1
and both functions -> accept : 1
and both functions -> return : 1
both functions accept -> a : 1
accept a which -> acts : 1
a which acts -> as : 1
as a list -> of : 1
list of characters -> that : 1
characters that should -> be : 1
that should be -> skipped : 1
that should be -> of : 1
that should be -> used : 1
that should be -> enough : 1
should be skipped -> while : 1
be skipped while -> searching : 1
skipped while searching -> a : 1
while searching a -> different : 1
searching a different -> if : 1
a different if -> we : 1
a different if -> cout : 1
different if we -> have : 1
have a string -> instance : 1
a string instance -> the : 1
string instance the -> and : 1
instance the and -> we : 1
the and we -> call : 1
the and we -> give : 1
the and we -> can : 1
and we call -> on : 1
we call on -> it : 1
we call on -> the : 1
on it will -> return : 1
us the because -> the : 1
the because the -> character : 1
because the character -> is : 1
the character is -> the : 1
first one that -> is : 1
one that is -> not : 1
one that is -> and : 1
of the characters -> in : 1
the characters in -> the : 1
in the argument -> string : 1
in the argument -> pack : 1
the argument string -> is : 1
the argument string -> to : 1
argument string is -> not : 1
is not same -> functions : 1
not same functions -> exist : 1
same functions exist -> with : 1
functions exist with -> inverted : 1
exist with inverted -> although : 1
with inverted although -> we : 1
inverted although we -> did : 1
although we did -> not : 1
not use them -> in : 1
use them in -> this : 1
use them in -> combination : 1
use them in -> slightly : 1
this and to -> iterator : 1
and to iterator -> based : 1
to iterator based -> we : 1
iterator based we -> need : 1
based we need -> to : 1
to check if -> these : 1
to check if -> nice : 1
to check if -> the : 1
check if these -> functions : 1
if these functions -> return : 1
these functions return -> an : 1
functions return an -> actual : 1
an actual position -> in : 1
actual position in -> the : 1
the a value -> that : 1
a value that -> they : 1
a value that -> represents : 1
value that they -> did : 1
that they did -> find : 1
they did find -> a : 1
did find a -> character : 1
a character position -> fulfilling : 1
character position fulfilling -> the : 1
position fulfilling the -> if : 1
fulfilling the if -> they : 1
the if they -> did : 1
if they did -> not : 1
they did not -> find : 1
did not find -> they : 1
not find they -> return : 1
find they return -> the : 1
they return the -> character : 1
the character positions -> we : 1
character positions we -> retrieved : 1
positions we retrieved -> from : 1
we retrieved from -> these : 1
retrieved from these -> functions : 1
from these functions -> in : 1
these functions in -> our : 1
functions in our -> helper : 1
functions in our -> we : 1
in our helper -> we : 1
our helper we -> built : 1
helper we built -> us : 1
we built us -> a : 1
built us a -> substring : 1
us a substring -> without : 1
a substring without -> surrounding : 1
substring without surrounding -> using : 1
without surrounding using -> this : 1
surrounding using this -> function : 1
using this function -> accepts : 2
using this function -> is : 1
accepts a relative -> offset : 1
accepts a relative -> path : 1
a relative offset -> and : 1
relative offset and -> a : 1
offset and a -> string : 1
a string length -> and : 1
string length and -> then : 1
length and then -> returns : 1
then returns a -> new : 1
new string instance -> with : 1
string instance with -> its : 1
with its own -> only : 1
its own only -> that : 1
own only that -> for : 1
only that for -> will : 1
that for will -> return : 1
for will return -> us : 1
us a new -> string : 1
new string the -> comfort : 1
string the comfort -> of : 1
of constructing is -> a : 1
constructing is a -> really : 1
is a really -> useful : 1
is a really -> comfortable : 1
is a really -> nice : 1
is a really -> good : 1
a really useful -> it : 1
really useful it -> simplifies : 1
useful it simplifies -> dealing : 1
it simplifies dealing -> with : 1
simplifies dealing with -> strings : 1
with strings so -> a : 1
strings so a -> that : 1
so a that -> if : 1
a that if -> we : 1
want to pass -> around : 1
want to pass -> a : 1
to pass around -> a : 1
pass around a -> substring : 1
around a substring -> of : 1
a substring of -> we : 1
substring of we -> need : 1
of we need -> to : 3
of we need -> a : 1
need to pass -> a : 1
to pass a -> pointer : 1
to pass a -> string : 1
pass a pointer -> and : 1
a pointer and -> a : 2
pointer and a -> length : 1
pointer and a -> string : 1
pointer and a -> unique : 1
pointer and a -> pointer : 1
and a length -> two : 1
a length two -> or : 1
length two or -> a : 1
two or a -> copy : 1
or a copy -> of : 1
in the where -> we : 1
where we removed -> the : 1
we removed the -> surrounding : 1
removed the surrounding -> whitespace : 1
the surrounding whitespace -> from : 2
surrounding whitespace from -> a : 1
surrounding whitespace from -> strings : 1
a string by -> taking : 1
a string by -> the : 1
string by taking -> a : 1
by taking a -> copy : 1
taking a copy -> of : 1
the substring range -> that : 1
substring range that -> does : 1
range that does -> not : 1
that does not -> contain : 1
that does not -> this : 1
that does not -> make : 1
that does not -> really : 1
that does not -> need : 1
that does not -> accept : 1
that does not -> come : 1
contain the surrounding -> we : 1
the surrounding we -> want : 1
surrounding we want -> to : 1
pass a string -> or : 1
a string or -> a : 1
string or a -> substring : 1
or a substring -> to : 1
a substring to -> a : 1
substring to a -> library : 1
to a library -> not : 1
a library not -> even : 1
library not even -> support : 1
not even support -> we : 1
even support we -> can : 1
support we can -> only : 1
can only provide -> a : 1
only provide a -> raw : 1
provide a raw -> string : 1
a raw string -> which : 1
raw string which -> is : 1
a bit because -> us : 1
bit because us -> back : 1
because us back -> to : 1
us back to -> the : 1
the old c -> just : 1
old c just -> as : 1
c just as -> with : 1
just as with -> the : 1
as with the -> substring : 1
with the substring -> a : 1
the substring a -> raw : 1
substring a raw -> pointer : 1
a raw pointer -> does : 1
a raw pointer -> to : 1
a raw pointer -> could : 1
a raw pointer -> cannot : 1
raw pointer does -> not : 1
pointer does not -> carry : 1
does not carry -> information : 1
not carry information -> about : 1
carry information about -> the : 1
information about the -> string : 1
about the string -> length : 1
the string length -> with : 1
the string length -> because : 1
string length with -> this : 1
length with this -> one : 1
with this one -> would : 1
this one would -> have : 1
one would have -> to : 1
implement a bundle -> of : 1
a bundle of -> a : 1
bundle of a -> pointer : 1
of a pointer -> and : 1
of a pointer -> that : 1
string a simplified -> this : 1
a simplified this -> is : 1
simplified this is -> exactly : 1
exactly what it -> is : 1
what it is -> available : 1
it is available -> since : 1
is available since -> and : 1
available since and -> provides : 1
since and provides -> a : 1
provides a way -> to : 1
way to pair -> a : 1
to pair a -> pointer : 1
pair a pointer -> to : 1
a pointer to -> some : 2
a pointer to -> the : 6
a pointer to -> a : 4
a pointer to -> its : 1
pointer to some -> string : 1
pointer to some -> there : 1
pointer to some -> and : 1
to some string -> together : 1
some string together -> with : 1
string together with -> that : 1
together with that -> it : 1
that it embodies -> the : 1
it embodies the -> idea : 1
idea of having -> a : 1
of having a -> reference : 1
having a reference -> type : 1
a reference type -> for : 1
reference type for -> arrays : 1
type for arrays -> of : 1
for arrays of -> we : 1
arrays of we -> design : 1
of we design -> functions : 1
we design functions -> which : 1
design functions which -> formerly : 1
functions which formerly -> as : 1
which formerly as -> but : 1
formerly as but -> did : 1
as but did -> not : 1
but did not -> change : 1
but did not -> have : 1
did not change -> them : 1
did not change -> its : 1
did not change -> much : 1
not change them -> in : 1
change them in -> a : 1
way that would -> require : 1
that would require -> the : 1
would require the -> string : 1
require the string -> instances : 1
the string instances -> to : 1
string instances to -> reallocate : 1
instances to reallocate -> the : 1
to reallocate the -> memory : 1
reallocate the memory -> that : 1
the memory that -> holds : 1
memory that holds -> the : 1
that holds the -> actual : 1
holds the actual -> string : 1
the actual string -> we : 1
the actual string -> payload : 1
actual string we -> could : 1
string we could -> now : 1
could now use -> be : 1
now use be -> more : 1
use be more -> compatible : 1
be more compatible -> with : 1
more compatible with -> libraries : 1
compatible with libraries -> that : 1
with libraries that -> are : 1
libraries that are -> we : 1
that are we -> could : 1
are we could -> let : 1
we could let -> other : 1
could let other -> libraries : 1
let other libraries -> provide : 1
other libraries provide -> a : 1
libraries provide a -> view : 1
provide a view -> on : 1
a view on -> the : 1
view on the -> payload : 1
on the payload -> strings : 1
on the payload -> this : 2
the payload strings -> behind : 1
payload strings behind -> their : 1
strings behind their -> complex : 1
behind their complex -> string : 1
their complex string -> implementations : 1
complex string implementations -> and : 1
string implementations and -> then : 1
implementations and then -> use : 1
and then use -> that : 1
and then use -> them : 1
and then use -> the : 1
then use that -> in : 1
use that in -> our : 1
that in our -> stl : 1
in our stl -> this : 1
our stl this -> the : 1
stl this the -> class : 1
this the class -> acts : 1
the class acts -> as : 1
class acts as -> a : 1
as a minimal -> and : 1
a minimal and -> useful : 1
minimal and useful -> be : 1
and useful be -> shared : 1
useful be shared -> among : 1
be shared among -> different : 1
shared among different -> cool : 1
among different cool -> thing : 1
different cool thing -> is : 1
is that be -> used : 1
that be used -> as : 1
used as reference -> to : 1
as reference to -> substrings : 1
reference to substrings -> of : 1
to substrings of -> larger : 1
substrings of larger -> string : 1
of larger string -> there : 1
larger string there -> are : 1
lot of possibilities -> to : 1
of possibilities to -> use : 1
possibilities to use -> it : 1
to use it -> in : 2
to use it -> with : 1
use it in -> this : 1
use it in -> the : 1
will play around -> with : 4
around with in -> order : 1
with in order -> to : 3
a feeling ups -> and : 1
feeling ups and -> we : 1
ups and we -> will : 1
also see how -> we : 1
also see how -> to : 1
we can hide -> the : 1
can hide the -> surrounding : 1
hide the surrounding -> whitespace : 1
whitespace from strings -> by : 1
from strings by -> adapting : 1
strings by adapting -> string : 1
by adapting string -> views : 1
adapting string views -> instead : 1
string views instead -> of : 1
views instead of -> modifying : 1
instead of modifying -> or : 1
of modifying or -> copying : 1
modifying or copying -> the : 1
or copying the -> actual : 1
copying the actual -> this : 1
the actual this -> method : 1
actual this method -> avoids : 1
this method avoids -> unnecessary : 1
method avoids unnecessary -> copying : 1
avoids unnecessary copying -> or : 1
unnecessary copying or -> data : 1
copying or data -> to : 1
or data to -> do : 1
data to do -> are : 1
a function on -> some : 1
function on some -> and : 1
on some and -> we : 1
some and we -> see : 1
and we see -> how : 1
and we see -> that : 1
see how many -> different : 1
how many different -> types : 1
many different types -> we : 1
types we can -> feed : 1
can feed into -> header : 1
feed into header -> includes : 1
into header includes -> and : 1
that accepts a -> as : 2
that accepts a -> argument : 1
that accepts a -> random : 1
that accepts a -> range : 1
that accepts a -> object : 1
accepts a as -> its : 1
accepts a as -> an : 1
a as its -> only : 1
as its only -> void : 1
as its only -> the : 1
as its only -> what : 1
its only void -> doing : 1
only void doing -> anything : 1
void doing anything -> with : 1
doing anything with -> the : 1
anything with the -> input : 1
input we remove -> any : 1
we remove any -> leading : 1
remove any leading -> and : 1
any leading and -> we : 1
leading and we -> are : 1
going to change -> the : 1
going to change -> to : 1
change the but -> the : 1
the but the -> on : 1
the but the -> lower : 1
the but the -> most : 1
the but the -> messages : 1
but the on -> the : 1
the string by -> narrowing : 1
string by narrowing -> it : 1
by narrowing it -> down : 1
narrowing it down -> to : 1
it down to -> the : 1
the actual part -> of : 1
actual part of -> the : 1
function will find -> the : 1
is not space -> not : 1
not space not -> a : 1
space not a -> tab : 1
not a tab -> character : 1
a tab character -> and : 1
tab character and -> not : 1
character and not -> a : 1
and not a -> newline : 1
not a newline -> character : 1
a newline character -> with : 1
newline character with -> we : 1
character with we -> advance : 1
with we advance -> the : 1
we advance the -> internal : 1
advance the internal -> pointer : 1
the internal pointer -> to : 1
internal pointer to -> the : 1
pointer to the -> first : 2
pointer to the -> string : 1
pointer to the -> old : 1
pointer to the -> internal : 1
pointer to the -> object : 1
pointer to the -> payload : 2
pointer to the -> in : 1
pointer to the -> static : 1
pointer to the -> whole : 1
first in case -> the : 1
first in case -> we : 1
case the string -> contains : 1
the string contains -> only : 1
the string contains -> our : 1
string contains only -> returns : 1
contains only returns -> the : 1
only returns the -> which : 1
which is as -> is : 1
is as is -> an : 1
as is an -> unsigned : 1
is an unsigned -> this : 1
an unsigned this -> boils : 1
unsigned this boils -> down : 1
this boils down -> to : 1
boils down to -> a : 1
down to a -> very : 1
very large we -> take : 1
large we take -> the : 1
take the smaller -> one : 1
the smaller one -> of : 1
smaller one of -> the : 1
the string const -> auto : 1
const auto do -> the : 1
auto do the -> same : 1
same with trailing -> shrinks : 1
with trailing shrinks -> down : 1
trailing shrinks down -> the : 1
shrinks down the -> size : 1
down the size -> const : 1
the size const -> auto : 1
the size const -> size : 1
size const auto -> if : 1
auto if we -> can : 1
can print the -> string : 1
can print the -> user : 1
print the string -> view : 1
string view and -> its : 1
view and its -> cout : 1
and its cout -> v : 1
its cout v -> our : 1
cout v our -> main : 1
v our main -> we : 1
main we play -> around : 1
we play around -> with : 2
new function by -> feeding : 1
function by feeding -> it : 1
by feeding it -> with : 1
by feeding it -> through : 1
feeding it with -> completely : 1
it with completely -> different : 1
completely different argument -> we : 1
different argument we -> give : 1
argument we give -> it : 1
it a runtime -> string : 1
a runtime string -> from : 1
runtime string from -> the : 1
the at it -> contains : 1
at it contains -> the : 1
contains the file -> name : 1
the file name -> of : 1
file name of -> our : 1
name of our -> we : 1
of our we -> give : 1
of our we -> can : 1
our we give -> it : 1
give it an -> empty : 1
give it an -> the : 1
give it an -> additional : 1
it an empty -> we : 1
an empty we -> then : 1
empty we then -> feed : 1
we then feed -> it : 1
with a static -> character : 1
a static character -> and : 1
static character and -> with : 1
character and with -> a : 1
and with a -> which : 1
and with a -> policy : 1
a which constructs -> us : 1
which constructs us -> a : 1
constructs us a -> on : 1
us a on -> the : 1
it an the -> nice : 1
an the nice -> thing : 1
the nice thing -> is : 2
the nice thing -> about : 1
nice thing is -> that : 2
is that none -> of : 1
that none of -> these : 1
none of these -> arguments : 1
none of these -> types : 1
of these arguments -> are : 1
these arguments are -> modified : 1
arguments are modified -> or : 1
are modified or -> copied : 1
modified or copied -> in : 1
or copied in -> order : 1
copied in order -> to : 1
to call no -> heap : 1
call no heap -> allocations : 1
no heap allocations -> for : 1
heap allocations for -> many : 1
allocations for many -> large : 1
for many large -> this : 1
many large this -> is : 1
large this is -> very : 1
this is very -> int : 1
this is very -> just : 1
this is very -> easy : 1
this is very -> we : 1
this is very -> similar : 2
is very int -> char : 1
very int char -> const : 1
int char const -> char : 1
const char did -> not : 1
char did not -> test : 1
did not test -> the : 1
not test the -> whitespace : 1
test the whitespace -> removal : 1
the whitespace removal -> give : 1
whitespace removal give -> it : 1
removal give it -> a : 1
it a string -> a : 1
string a lot -> of : 1
lot of leading -> and : 1
of leading and -> trailing : 2
leading and trailing -> foobar : 1
leading and trailing -> whitespace : 1
and trailing foobar -> cool : 1
trailing foobar cool -> feature : 1
foobar cool feature -> is : 1
cool feature is -> that : 1
feature is that -> the : 1
the strings gives -> us : 1
strings gives us -> access : 1
gives us access -> to : 2
us access to -> do : 1
us access to -> the : 1
access to do -> not : 1
to do not -> have : 1
if we construct -> a : 2
construct a such -> without : 1
a such without -> a : 1
such without a -> trailing : 1
without a trailing -> the : 1
a trailing the -> function : 1
trailing the function -> can : 1
the function can -> still : 1
function can still -> safely : 1
can still safely -> handle : 1
still safely handle -> it : 1
safely handle it -> because : 1
handle it because -> also : 1
it because also -> carries : 1
because also carries -> the : 1
also carries the -> size : 1
carries the size -> of : 1
the string it -> points : 1
the string it -> static : 1
string it points -> char : 1
it points char -> and : 1
points char and -> running : 1
char and running -> the : 1
the following all -> the : 1
following all the -> strings : 1
all the strings -> are : 1
the strings are -> correctly : 1
the strings are -> equal : 1
strings are correctly -> the : 1
are correctly the -> string : 1
correctly the string -> we : 1
the string we -> filled : 1
string we filled -> with : 1
lots of leading -> and : 1
and trailing whitespace -> is : 1
trailing whitespace is -> correctly : 1
whitespace is correctly -> and : 1
is correctly and -> the : 1
correctly and the -> string : 1
the string without -> zero : 1
string without zero -> termination : 1
without zero termination -> is : 1
zero termination is -> also : 1
termination is also -> correctly : 1
is also correctly -> printed : 1
also correctly printed -> without : 1
correctly printed without -> any : 1
printed without any -> buffer : 1
without any buffer -> const : 1
any buffer const -> char : 1
buffer const char -> it : 1
const char it -> have : 1
char it have -> just : 1
it have just -> seen : 1
have just seen -> that : 1
just seen that -> we : 1
seen that we -> can : 2
can call a -> function : 1
call a function -> that : 1
accepts a argument -> with : 1
a argument with -> basically : 1
argument with basically -> anything : 1
with basically anything -> that : 1
basically anything that -> is : 1
anything that is -> string : 1
that is string -> like : 1
is string like -> in : 1
string like in -> the : 1
sense that it -> stores : 1
it stores characters -> in : 1
stores characters in -> a : 1
characters in a -> contiguous : 1
in a contiguous -> of : 1
a contiguous of -> the : 1
contiguous of the -> underlying : 1
underlying string was -> made : 1
string was made -> in : 1
was made in -> any : 1
made in any -> of : 1
in any of -> our : 1
any of our -> is : 1
of our is -> interesting : 1
our is interesting -> to : 1
is interesting to -> note : 1
is interesting to -> see : 1
is interesting to -> alter : 1
interesting to note -> that : 1
note that in -> the : 1
string view automatically -> determined : 1
view automatically determined -> the : 1
automatically determined the -> string : 1
determined the string -> length : 1
string length because -> this : 1
length because this -> is : 1
string by the -> other : 1
other way one -> cannot : 1
way one cannot -> assume : 1
one cannot assume -> that : 1
possible to determine -> a : 1
to determine a -> data : 1
determine a data -> length : 1
a data length -> by : 1
data length by -> counting : 1
length by counting -> the : 1
by counting the -> number : 1
counting the number -> of : 1
number of items -> until : 1
number of items -> for : 1
number of items -> to : 1
of items until -> a : 1
items until a -> zero : 1
until a zero -> terminator : 1
a zero terminator -> is : 1
zero terminator is -> because : 1
terminator is because -> of : 1
is because of -> we : 1
because of we -> must : 1
because of we -> need : 1
of we must -> always : 1
we must always -> be : 1
must always be -> careful : 1
always be careful -> about : 1
be careful about -> where : 1
careful about where -> we : 1
about where we -> reach : 1
where we reach -> around : 1
we reach around -> a : 1
reach around a -> pointer : 1
around a pointer -> to : 1
string view data -> using : 1
view data using -> usual : 1
data using usual -> string : 1
using usual string -> functions : 1
usual string functions -> mostly : 1
string functions mostly -> assume : 1
functions mostly assume -> zero : 1
mostly assume zero -> termination : 1
assume zero termination -> can : 1
zero termination can -> buffer : 1
termination can buffer -> overflow : 1
can buffer overflow -> very : 1
buffer overflow very -> badly : 1
overflow very badly -> with : 1
very badly with -> raw : 1
badly with raw -> pointers : 1
with raw pointers -> to : 1
with raw pointers -> problem : 1
raw pointers to -> the : 1
pointers to the -> payload : 1
to the payload -> of : 1
to the payload -> only : 1
to the payload -> object : 1
the payload of -> a : 1
payload of a -> string : 1
a string it -> is : 1
it is always -> better : 1
is always better -> to : 1
always better to -> use : 1
better to use -> interfaces : 1
to use interfaces -> expect : 1
use interfaces expect -> a : 1
interfaces expect a -> string : 1
expect a string -> from : 1
string from we -> get : 1
from we get -> a : 1
get a lot -> of : 2
lot of the -> luxury : 1
of the luxury -> interface : 1
the luxury interface -> we : 1
luxury interface we -> know : 1
interface we know -> from : 1
know from for -> passing : 1
from for passing -> strings : 1
for passing strings -> or : 1
passing strings or -> substrings : 1
strings or substrings -> where : 1
or substrings where -> you : 1
substrings where you -> want : 1
where you want -> to : 1
you want to -> avoid : 1
want to avoid -> copies : 1
to avoid copies -> or : 1
avoid copies or -> heap : 1
copies or heap -> without : 1
or heap without -> losing : 1
heap without losing -> the : 1
without losing the -> comfort : 1
losing the comfort -> of : 1
comfort of string -> but : 1
of string but -> be : 1
string but be -> aware : 1
but be aware -> of : 1
aware of the -> fact : 1
of the fact -> that : 1
fact that drops -> the : 1
that drops the -> assumption : 1
drops the assumption -> that : 1
the assumption that -> strings : 1
assumption that strings -> are : 1
that strings are -> zero : 1
strings are zero -> user : 1
are zero user -> lot : 1
zero user lot -> of : 1
user lot of -> recipes : 1
lot of recipes -> in : 1
of recipes in -> this : 1
in this book -> read : 1
in this book -> are : 1
this book read -> such : 1
book read such -> input : 1
read such input -> or : 1
such input or -> a : 1
input or a -> and : 1
input or a -> text : 1
or a and -> with : 1
a and with -> this : 1
and with this -> time : 1
with this time -> we : 1
this time we -> concentrate : 1
this time we -> are : 1
this time we -> will : 1
time we concentrate -> only : 1
we concentrate only -> on : 1
concentrate only on -> the : 1
only on the -> reading : 1
on the reading -> and : 1
the reading and -> learn : 1
reading and learn -> more : 1
and learn more -> about : 1
learn more about -> error : 1
more about error -> which : 1
about error which -> becomes : 1
error which becomes -> important : 1
which becomes important -> if : 1
becomes important if -> reading : 1
important if reading -> something : 1
if reading something -> from : 1
reading something from -> a : 1
something from a -> stream : 1
from a stream -> did : 1
a stream did -> go : 1
stream did go -> well : 1
did go well -> and : 1
go well and -> we : 1
well and we -> need : 1
need to handle -> it : 1
to handle it -> other : 1
handle it other -> than : 1
it other than -> terminating : 1
other than terminating -> the : 1
than terminating the -> whole : 1
terminating the whole -> will : 1
the whole will -> only : 1
whole will only -> read : 1
will only read -> from : 1
only read from -> user : 1
input in this -> but : 1
input in this -> we : 1
in this but -> as : 1
this but as -> soon : 1
as we know -> how : 1
do we also -> know : 1
we also know -> how : 1
also know how -> to : 1
how to read -> from : 1
to read from -> any : 1
to read from -> an : 1
read from any -> other : 1
from any other -> user : 1
any other user -> input : 1
other user input -> is : 1
user input is -> read : 1
input is read -> via : 1
is read via -> and : 1
read via and -> that : 1
via and that -> is : 1
and that is -> essentially : 1
and that is -> as : 1
that is essentially -> an : 1
is essentially an -> input : 1
essentially an input -> stream : 1
input stream such -> of : 1
stream such of -> and : 1
such of and -> to : 1
of and to -> do : 1
and to do -> this : 1
and to do -> are : 1
going to read -> user : 1
to read user -> input : 1
read user input -> into : 1
user input into -> different : 1
input into different -> and : 1
into different and -> see : 1
different and see -> how : 1
how to handle -> as : 1
to handle as -> well : 1
handle as well -> as : 1
well as how -> to : 1
as how to -> do : 1
do a little -> bit : 1
do a little -> tool : 1
little bit more -> complex : 1
little bit more -> we : 1
little bit more -> complicated : 1
little bit more -> about : 1
bit more complex -> tokenizing : 1
bit more complex -> than : 1
more complex tokenizing -> of : 1
complex tokenizing of -> input : 1
tokenizing of input -> into : 1
of input into -> useful : 1
input into useful -> only : 1
into useful only -> need : 1
useful only need -> this : 1
only need this -> include : 1
need this include -> this : 1
this include this -> single : 1
include this single -> header : 1
this single header -> and : 1
single header and -> declare : 1
header and declare -> that : 1
namespace first prompt -> the : 1
first prompt the -> user : 1
to enter two -> we : 1
enter two we -> will : 1
two we will -> parse : 1
we will parse -> them : 1
will parse them -> into : 1
parse them into -> an : 1
them into an -> and : 1
a the user -> can : 1
a the user -> must : 1
user can separate -> them : 1
can separate them -> with : 1
separate them with -> for : 1
them with for -> is : 1
with for is -> a : 1
a valid int -> cout : 1
valid int cout -> enter : 1
int cout enter -> two : 1
int cout enter -> auto : 1
cout enter two -> int : 1
enter two int -> double : 1
enter two int -> cout : 1
two int double -> and : 1
int double and -> error : 1
double and error -> checking : 1
and error checking -> is : 1
and error checking -> at : 1
error checking is -> done : 1
checking is done -> at : 1
is done at -> the : 1
done at the -> same : 1
same time in -> the : 1
time in the -> condition : 1
time in the -> the : 1
in the condition -> part : 1
the condition part -> of : 1
condition part of -> our : 1
part of our -> only : 1
of our only -> if : 1
our only if -> both : 1
only if both -> the : 1
only if both -> steps : 1
if both the -> numbers : 1
if both the -> strings : 1
both the numbers -> could : 1
the numbers could -> be : 1
numbers could be -> parsed : 1
could be parsed -> are : 1
be parsed are -> they : 1
parsed are they -> meaningful : 1
are they meaningful -> to : 1
they meaningful to -> us : 1
meaningful to us -> and : 1
to us and -> we : 1
us and we -> print : 1
and we print -> if : 1
we print if -> x : 1
print if x -> cout : 1
if x cout -> x : 1
x cout x -> and : 1
cout x and -> y : 1
x and y -> the : 1
and y the -> parsing : 1
y the parsing -> did : 1
the parsing did -> not : 2
parsing did not -> succeed : 1
parsing did not -> go : 1
did not succeed -> for : 1
not succeed for -> any : 1
succeed for any -> we : 1
any we tell -> the : 1
tell the user -> that : 3
tell the user -> what : 1
user that the -> parsing : 1
that the parsing -> did : 1
did not go -> the : 1
did not go -> now : 2
not go the -> stream : 1
go the stream -> object : 1
stream object is -> now : 1
stream object is -> in : 1
object is now -> in : 1
is now in -> a : 1
now in a -> and : 1
in a and -> will : 1
a and will -> not : 1
and will not -> give : 1
will not give -> us : 1
not give us -> other : 1
not give us -> the : 1
give us other -> input : 1
us other input -> until : 1
other input until -> we : 1
input until we -> clear : 1
until we clear -> the : 1
we clear the -> fail : 1
clear the fail -> state : 1
the fail state -> in : 1
fail state in -> order : 1
state in order -> to : 1
able to parse -> a : 1
to parse a -> new : 1
parse a new -> input : 1
a new input -> we : 1
new input we -> call : 1
input we call -> and : 1
we call and -> drop : 1
we call and -> with : 1
we call and -> after : 1
call and drop -> all : 1
and drop all -> input : 1
drop all input -> we : 1
all input we -> received : 1
input we received -> until : 1
we received until -> the : 1
received until the -> dropping : 1
until the dropping -> is : 1
the dropping is -> done : 1
dropping is done -> with : 1
done with where -> we : 1
with where we -> specify : 1
where we specify -> that : 1
we specify that -> we : 1
specify that we -> are : 1
we are dropping -> the : 1
are dropping the -> maximum : 1
dropping the maximum -> number : 1
the maximum number -> of : 2
maximum number of -> characters : 1
maximum number of -> items : 1
number of characters -> until : 1
number of characters -> output : 1
of characters until -> we : 1
characters until we -> finally : 1
until we finally -> see : 1
until we finally -> for : 1
we finally see -> a : 1
finally see a -> newline : 1
see a newline -> which : 1
a newline which -> is : 1
newline which is -> also : 1
which is also -> everything : 1
is also everything -> after : 1
also everything after -> that : 1
everything after that -> is : 1
after that is -> interesting : 1
that is interesting -> input : 1
is interesting input -> else : 1
interesting input else -> cout : 1
input else cout -> that : 1
else cout that -> did : 1
cout that did -> not : 1
not go now -> ask : 1
not go now -> please : 1
go now ask -> for : 1
now ask for -> some : 1
ask for some -> other : 1
for some other -> we : 1
some other we -> let : 1
other we let -> the : 1
we let the -> user : 4
we let the -> first : 1
let the user -> enter : 2
let the user -> choose : 3
let the user -> define : 1
the user enter -> as : 1
the user enter -> two : 1
user enter as -> names : 1
enter as names -> can : 1
as names can -> consist : 1
names can consist -> multiple : 1
can consist multiple -> words : 1
consist multiple words -> separated : 1
multiple words separated -> by : 1
words separated by -> the : 1
separated by the -> space : 1
by the space -> character : 1
the space character -> is : 1
space character is -> not : 1
character is not -> a : 1
not a good -> separator : 1
not a good -> because : 1
a good separator -> any : 1
good separator any -> we : 1
separator any we -> use : 1
any we use -> which : 1
we use which -> accepts : 2
use which accepts -> a : 1
use which accepts -> an : 1
accepts a stream -> such : 1
a stream such -> a : 1
stream such a -> string : 1
such a string -> reference : 1
a string reference -> where : 1
a string reference -> as : 1
string reference where -> it : 1
reference where it -> will : 1
will copy the -> input : 1
copy the input -> and : 1
and a separating -> choose : 1
a separating choose -> comma : 1
separating choose comma -> as : 1
choose comma as -> the : 1
comma as the -> separating : 1
as the separating -> by : 1
the separating by -> not : 1
separating by not -> just : 1
by not just -> using : 1
not just using -> alone : 1
just using alone -> and : 1
using alone and -> by : 1
alone and by -> as : 1
by as a -> stream : 1
as a stream -> parameter : 1
as a stream -> this : 1
as a stream -> object : 1
a stream parameter -> for : 1
stream parameter for -> we : 1
parameter for we -> can : 1
we can make -> drop : 1
we can make -> sure : 1
we can make -> the : 1
can make drop -> any : 1
make drop any -> leading : 1
drop any leading -> whitespace : 1
any leading whitespace -> before : 1
leading whitespace before -> any : 1
whitespace before any -> in : 1
before any in -> every : 1
any in every -> loop : 1
in every loop -> we : 2
every loop we -> print : 1
every loop we -> ask : 1
print the current -> but : 1
the current but -> if : 1
current but if -> a : 1
but if a -> name : 1
but if a -> thread : 1
if a name -> is : 1
a name is -> we : 1
name is we -> drop : 1
is we drop -> out : 1
we drop out -> of : 1
of the cout -> please : 1
of the cout -> cout : 1
the cout please -> enter : 1
cout please enter -> some : 1
please enter some -> for : 1
please enter some -> john : 1
please enter some -> bud : 1
enter some for -> if : 1
some for if -> cout : 1
for if cout -> s : 1
if cout s -> and : 1
following in which -> we : 1
following in which -> the : 1
which we assumingly -> entered : 1
we assumingly entered -> only : 1
assumingly entered only -> valid : 1
entered only valid -> the : 1
only valid the -> numbers : 1
valid the numbers -> are : 1
numbers are which -> and : 1
are which and -> then : 1
which and then -> we : 1
then we enter -> some : 1
we enter some -> names : 1
enter some names -> which : 1
some names which -> are : 1
names which are -> then : 1
are then also -> listed : 1
then also listed -> an : 1
also listed an -> empty : 1
listed an empty -> name : 1
an empty name -> input : 1
empty name input -> in : 1
name input in -> the : 1
form of two -> consecutive : 1
two consecutive commas -> quits : 1
consecutive commas quits -> the : 1
commas quits the -> please : 1
quits the please -> enter : 1
the please enter -> two : 1
please enter two -> you : 1
please enter two -> a : 1
enter two you -> and : 1
two you and -> now : 1
you and now -> please : 1
and now please -> enter : 1
now please enter -> some : 2
enter some john -> running : 1
some john running -> the : 1
john running the -> program : 1
program while entering -> bad : 1
while entering bad -> numbers : 1
entering bad numbers -> we : 1
bad numbers we -> see : 1
numbers we see -> that : 1
the program correctly -> takes : 1
program correctly takes -> the : 1
correctly takes the -> other : 1
takes the other -> drops : 1
the other drops -> the : 1
other drops the -> bad : 1
drops the bad -> input : 1
the bad input -> and : 1
bad input and -> correctly : 1
input and correctly -> continues : 1
and correctly continues -> with : 1
correctly continues with -> the : 1
continues with the -> name : 1
with the name -> play : 1
with the name -> reading : 1
the name play -> around : 1
name play around -> with : 1
how that tampers -> with : 1
that tampers with -> the : 1
tampers with the -> name : 1
the name reading -> please : 1
name reading please -> enter : 1
reading please enter -> two : 1
enter two a -> b : 1
two a b -> oh : 1
a b oh -> that : 1
b oh that -> did : 1
oh that did -> not : 1
go now please -> enter : 1
enter some bud -> terence : 1
some bud terence -> it : 1
bud terence it -> did : 1
terence it did -> some : 1
it did some -> complex : 1
did some complex -> input : 1
some complex input -> retrieval : 1
complex input retrieval -> in : 1
input retrieval in -> this : 1
retrieval in this -> the : 1
this the first -> noticeable : 1
the first noticeable -> thing : 1
first noticeable thing -> is : 1
noticeable thing is -> that : 1
we always did -> the : 1
always did the -> retrieval : 1
did the retrieval -> and : 1
the retrieval and -> error : 1
retrieval and error -> checking : 1
error checking at -> the : 1
checking at the -> same : 1
the same result -> of : 1
same result of -> the : 1
of the expression -> is : 1
again a reference -> to : 1
reference to this -> we : 1
can write x -> y : 1
write x y -> z : 1
x y z -> at : 1
y z at -> the : 1
z at the -> same : 1
possible to convert -> it : 1
to convert it -> into : 1
convert it into -> a : 1
into a boolean -> value : 1
boolean value by -> using : 1
value by using -> it : 1
by using it -> in : 1
using it in -> a : 1
in a boolean -> context : 1
a boolean context -> such : 1
boolean context such -> boolean : 1
context such boolean -> value : 1
such boolean value -> tells : 1
boolean value tells -> us : 1
value tells us -> if : 2
if the last -> read : 1
the last read -> was : 1
last read was -> that : 1
read was that -> is : 1
was that is -> why : 1
that is why -> we : 2
that is why -> it : 1
why we were -> able : 1
able to write -> x : 1
to write x -> for : 1
write x for -> try : 1
x for try -> to : 1
for try to -> read : 1
try to read -> an : 2
to read an -> but : 1
to read an -> integer : 1
read an but -> the : 1
an but the -> input : 1
but the input -> contains : 1
the input contains -> as : 1
input contains as -> the : 1
contains as the -> next : 1
as the next -> then : 1
the next then -> parsing : 1
next then parsing -> this : 1
then parsing this -> into : 1
parsing this into -> the : 1
this into the -> integer : 1
into the integer -> is : 1
integer is not -> possible : 1
not possible and -> the : 1
possible and the -> stream : 1
and the stream -> object : 1
stream object enters -> a : 1
stream object enters -> an : 1
object enters a -> this : 1
enters a this -> is : 1
a this is -> only : 1
a this is -> disastrous : 1
this is only -> critical : 1
this is only -> the : 1
is only critical -> for : 1
only critical for -> the : 1
critical for the -> parsing : 1
for the parsing -> attempt : 1
the parsing attempt -> but : 1
parsing attempt but -> not : 1
attempt but not -> for : 1
but not for -> the : 1
not for the -> whole : 1
for the whole -> it : 1
the whole it -> is : 1
whole it is -> okay : 1
okay to reset -> it : 1
to reset it -> and : 1
reset it and -> then : 1
and then to -> try : 1
then to try -> anything : 1
to try anything -> in : 1
try anything in -> our : 1
anything in our -> recipe : 1
our recipe we -> tried : 1
recipe we tried -> to : 1
we tried to -> read : 1
we tried to -> model : 1
tried to read -> a : 1
to read a -> list : 1
read a list -> of : 1
list of a -> potentially : 1
of a potentially -> failing : 1
a potentially failing -> attempt : 1
potentially failing attempt -> to : 1
failing attempt to -> read : 2
attempt to read -> two : 1
attempt to read -> those : 1
to read two -> in : 1
read two in -> the : 1
in the case -> of : 2
the case of -> a : 1
the case of -> we : 1
the case of -> failure : 1
the case of -> parallelism : 1
case of a -> failing : 1
case of a -> clash : 1
of a failing -> attempt : 1
a failing attempt -> to : 1
to read those -> numbers : 1
read those numbers -> we : 1
those numbers we -> to : 1
numbers we to -> put : 1
we to put -> back : 1
to put back -> into : 1
put back into -> a : 1
back into a -> working : 1
back into a -> linear : 1
into a working -> but : 1
a working but -> its : 1
working but its -> internal : 1
but its internal -> cursor : 1
its internal cursor -> was : 1
internal cursor was -> still : 1
cursor was still -> on : 1
was still on -> what : 1
still on what -> we : 1
what we typed -> instead : 1
we typed instead -> of : 1
typed instead of -> in : 1
instead of in -> order : 1
order to drop -> this : 1
to drop this -> old : 1
drop this old -> input : 1
this old input -> and : 1
old input and -> clear : 1
input and clear -> the : 1
and clear the -> pipe : 1
clear the pipe -> for : 1
the pipe for -> the : 1
pipe for the -> names : 1
for the names -> we : 1
the names we -> used : 1
names we used -> the : 1
used the very -> long : 1
the very long -> this : 1
very long this -> is : 1
long this is -> necessary : 1
this is necessary -> to : 1
necessary to clear -> whatever : 1
to clear whatever -> is : 1
clear whatever is -> in : 1
whatever is in -> the : 2
in the buffer -> at : 1
the buffer at -> this : 1
buffer at this -> because : 1
at this because -> we : 1
this because we -> want : 1
want to start -> with : 1
want to start -> a : 1
to start with -> a : 1
with a really -> fresh : 1
a really fresh -> buffer : 1
really fresh buffer -> when : 1
fresh buffer when -> we : 1
buffer when we -> ask : 1
when we ask -> the : 1
we ask the -> user : 2
ask the user -> for : 1
ask the user -> to : 1
the user for -> a : 1
user for a -> list : 1
for a list -> of : 1
list of following -> loop : 1
of following loop -> might : 1
following loop might -> look : 1
loop might look -> strange : 1
might look strange -> at : 1
look strange at -> the : 1
strange at the -> conditional : 1
at the conditional -> part : 1
the conditional part -> of : 1
conditional part of -> the : 1
we use accepts -> an : 1
use accepts an -> input : 1
accepts an input -> stream : 1
accepts an input -> for : 1
accepts an input -> file : 1
input stream a -> string : 1
stream a string -> reference : 1
string reference as -> an : 1
reference as an -> output : 1
as an output -> and : 1
and a delimiter -> by : 1
a delimiter by -> the : 1
delimiter by the -> delimiter : 1
by the delimiter -> character : 1
the delimiter character -> is : 1
delimiter character is -> the : 1
is the newline -> we : 1
the newline we -> defined : 1
newline we defined -> it : 1
we defined it -> to : 1
we defined it -> will : 1
defined it to -> be : 1
be the comma -> so : 1
the comma so -> all : 1
comma so all -> the : 1
so all the -> names : 1
all the names -> in : 1
names in a -> such : 1
in a such -> are : 1
in a such -> foo : 1
a such are -> read : 1
such are read -> so : 1
are read so -> but : 1
read so but -> what : 1
so but what -> does : 1
but what does -> it : 2
does it mean -> to : 1
mean to provide -> function : 1
to provide function -> as : 1
provide function as -> a : 1
function as a -> stream : 1
a stream this -> first : 1
stream this first -> flush : 1
this first flush -> all : 1
first flush all -> the : 1
flush all the -> which : 1
the which lead -> before : 1
which lead before -> the : 1
lead before the -> next : 1
before the next -> character : 1
next character and -> after : 1
character and after -> the : 1
and after the -> last : 1
after the last -> looking : 1
after the last -> because : 1
after the last -> code : 1
after the last -> print : 1
the last looking -> back : 1
last looking back -> at : 1
looking back at -> we : 1
back at we -> would : 1
at we would -> get : 1
get the substrings -> and : 1
the substrings and -> without : 1
substrings and without -> using : 1
and without using -> notice : 1
without using notice -> the : 1
using notice the -> unnecessary : 1
notice the unnecessary -> leading : 1
the unnecessary leading -> space : 1
unnecessary leading space -> characters : 1
leading space characters -> for : 1
space characters for -> and : 1
characters for and -> these : 1
for and these -> effectively : 1
and these effectively -> vanish : 1
these effectively vanish -> because : 1
effectively vanish because -> of : 1
vanish because of -> our : 1
because of our -> pretreatment : 1
because of our -> we : 1
of our pretreatment -> of : 1
our pretreatment of -> the : 1
pretreatment of the -> input : 1
the input all -> words : 1
input all words -> in : 1
in a say -> we : 1
a say we -> read : 1
say we read -> a : 1
we read a -> text : 1
we read a -> whole : 1
read a text -> file : 1
text file and -> we : 1
file and we -> want : 1
want to count -> the : 1
count the number -> of : 3
number of words -> in : 1
number of words -> we : 1
words in the -> we : 1
define that one -> word : 1
that one word -> is : 1
one word is -> a : 1
word is a -> range : 1
range of characters -> between : 1
of characters between -> whitespace : 1
characters between whitespace -> do : 1
between whitespace do -> we : 1
whitespace do we -> do : 1
do we do -> could : 1
we do could -> count : 1
do could count -> the : 1
could count the -> number : 1
number of for -> because : 1
for because there -> must : 1
because there must -> be : 1
there must be -> spaces : 1
must be spaces -> between : 1
be spaces between -> in : 1
spaces between in -> the : 1
between in the -> has : 1
the has a -> funny : 1
has a funny -> little : 1
a funny little -> we : 1
funny little we -> have : 1
little we have -> five : 1
we have five -> space : 1
have five space -> so : 1
five space so -> we : 1
space so we -> could : 1
so we could -> say : 1
we could say -> there : 1
could say there -> are : 1
say there are -> six : 1
there are six -> if : 1
are six if -> we : 1
six if we -> have : 1
have a sentence -> with : 1
a sentence with -> whitespace : 1
sentence with whitespace -> such : 1
with whitespace such -> john : 1
whitespace such john -> has : 1
such john has -> little : 1
john has little -> dog : 1
has little dog -> there : 1
little dog there -> are : 1
dog there are -> way : 1
there are way -> too : 1
are way too -> many : 1
way too many -> unnecessary : 1
too many unnecessary -> spaces : 1
many unnecessary spaces -> in : 1
unnecessary spaces in -> this : 1
spaces in this -> and : 1
this and not -> even : 1
and not even -> only : 1
not even only -> from : 1
even only from -> the : 1
only from the -> other : 1
only from the -> two : 1
the other recipes -> in : 1
other recipes in -> this : 2
this we already -> learned : 1
we already learned -> how : 1
already learned how -> we : 1
learned how we -> can : 2
can remove such -> excess : 1
remove such excess -> we : 1
such excess we -> could : 1
excess we could -> first : 1
we could first -> preprocess : 1
could first preprocess -> the : 1
first preprocess the -> string : 1
preprocess the string -> into : 1
string into a -> normal : 1
into a normal -> sentence : 1
a normal sentence -> then : 1
normal sentence then -> apply : 1
sentence then apply -> the : 1
then apply the -> strategy : 1
apply the strategy -> of : 1
the strategy of -> counting : 1
strategy of counting -> space : 1
of counting space -> that : 1
counting space that -> is : 1
space that is -> but : 1
that is but -> there : 1
is but there -> is : 1
is a easier -> why : 1
a easier why -> we : 1
easier why we -> use : 1
we use what -> the : 1
use what the -> stl : 1
already provides addition -> to : 1
provides addition to -> finding : 1
addition to finding -> an : 1
to finding an -> elegant : 1
finding an elegant -> solution : 1
an elegant solution -> for : 1
elegant solution for -> this : 1
solution for this -> we : 1
for this we -> will : 2
for this we -> are : 1
for this we -> avoid : 1
for this we -> can : 1
for this we -> cannot : 1
we will let -> the : 1
we will let -> shared : 1
will let the -> user : 1
the user choose -> if : 2
the user choose -> where : 1
user choose if -> we : 1
user choose if -> the : 1
choose if we -> shall : 1
choose if we -> surround : 1
if we shall -> count : 1
we shall count -> the : 1
shall count the -> words : 1
count the words -> from : 1
the words from -> the : 1
the words from -> an : 1
or a text -> to : 1
a text to -> do : 1
text to do -> this : 1
write a function -> that : 5
function that counts -> the : 1
that counts the -> words : 1
counts the words -> from : 1
words from an -> input : 1
from an input -> and : 2
from an input -> stream : 1
an input and -> let : 1
an input and -> if : 1
input and let -> the : 1
user choose where -> the : 1
choose where the -> input : 1
the input buffer -> reads : 1
input buffer reads -> include : 1
buffer reads include -> all : 1
reads include all -> the : 1
necessary headers first -> and : 3
first and declare -> that : 1
namespace function accepts -> an : 1
function accepts an -> input : 1
function accepts an -> output : 1
function accepts an -> which : 1
function accepts an -> integral : 1
an input for -> it : 1
input for it -> creates : 1
for it creates -> an : 1
it creates an -> which : 1
creates an which -> tokenizes : 1
an which tokenizes -> the : 1
which tokenizes the -> strings : 1
tokenizes the strings -> out : 1
the strings out -> of : 1
strings out of -> the : 1
of the stream -> and : 1
of the stream -> buffer : 1
the stream and -> then : 1
the stream and -> do : 1
and then feeds -> them : 1
then feeds them -> to : 1
feeds them to -> accepts : 1
them to accepts -> two : 1
to accepts two -> iterators : 1
accepts two iterators -> as : 1
two iterators as -> arguments : 1
iterators as arguments -> and : 1
arguments and tries -> to : 1
and tries to -> determine : 1
tries to determine -> how : 1
to determine how -> many : 1
how many incrementing -> steps : 1
many incrementing steps -> are : 1
incrementing steps are -> needed : 1
steps are needed -> in : 1
are needed in -> order : 1
to get from -> one : 1
get from one -> iterator : 1
from one iterator -> position : 1
one iterator position -> to : 1
iterator position to -> the : 1
to the for -> this : 1
this is they -> implement : 1
is they implement -> the : 1
they implement the -> mathematical : 1
implement the mathematical -> difference : 1
the mathematical difference -> operation : 1
mathematical difference operation -> such : 1
difference operation such -> be : 1
operation such be -> subtracted : 1
such be subtracted -> from : 1
be subtracted from -> each : 1
subtracted from each -> other : 1
from each other -> like : 1
each other like -> an : 1
other like an -> is : 1
like an is -> a : 1
an is a -> must : 1
is a must -> be : 1
a must be -> advanced : 1
must be advanced -> until : 1
be advanced until -> it : 1
advanced until it -> equals : 1
until it equals -> the : 1
it equals the -> end : 1
equals the end -> the : 1
end the number -> of : 1
number of steps -> needed : 1
of steps needed -> is : 1
steps needed is -> the : 1
needed is the -> number : 1
number of template -> return : 1
of template return -> our : 1
template return our -> main : 1
main we let -> the : 2
choose if the -> input : 1
if the input -> stream : 1
if the input -> is : 2
input stream an -> input : 1
stream an input -> int : 1
an input int -> char : 1
input int char -> the : 1
int char the -> user : 1
char the user -> launches : 1
the user launches -> the : 1
user launches the -> program : 1
launches the program -> in : 1
in the shell -> together : 1
in the shell -> cout : 1
the shell together -> with : 1
shell together with -> a : 1
with a file -> name : 1
with a file -> path : 1
a file name -> then : 1
file name then -> we : 1
name then we -> obtain : 1
then we obtain -> that : 1
we obtain that -> filename : 1
obtain that filename -> from : 1
that filename from -> the : 1
filename from the -> parameter : 1
the parameter array -> and : 1
parameter array and -> open : 1
array and open -> in : 1
and open in -> order : 1
open in order -> to : 1
order to feed -> the : 1
to feed the -> new : 1
feed the new -> input : 1
the new input -> file : 1
new input file -> stream : 1
input file stream -> into : 1
input file stream -> object : 1
file stream into -> if : 1
stream into if -> ifstream : 1
into if ifstream -> ifs : 1
if ifstream ifs -> wc : 1
ifstream ifs wc -> the : 1
ifs wc the -> user : 1
wc the user -> launched : 1
the user launched -> the : 1
user launched the -> program : 1
launched the program -> without : 1
the program without -> any : 1
program without any -> we : 1
program without any -> and : 1
any we assume -> that : 1
the input comes -> from : 1
input comes from -> standard : 1
comes from standard -> else : 1
from standard else -> wc : 1
standard else wc -> already : 1
else wc already -> so : 1
wc already so -> we : 1
already so we -> just : 1
print the number -> of : 1
of words we -> saved : 1
words we saved -> in : 1
we saved in -> the : 1
in the variable -> cout : 1
in the variable -> for : 1
in the variable -> then : 1
the variable cout -> are : 1
variable cout are -> wc : 1
cout are wc -> compile : 1
are wc compile -> and : 1
wc compile and -> run : 1
run the we -> feed : 1
run the we -> get : 1
the we feed -> the : 1
the program from -> standard : 1
program from standard -> input : 1
from standard input -> without : 1
from standard input -> using : 1
from standard input -> and : 1
standard input without -> any : 1
input without any -> file : 1
without any file -> we : 1
any file we -> can : 1
file we can -> either : 1
we can either -> pipe : 1
can either pipe -> an : 1
either pipe an -> echo : 1
pipe an echo -> call : 1
an echo call -> with : 1
echo call with -> some : 1
call with some -> words : 1
with some words -> into : 1
some words into -> it : 1
some words into -> the : 1
words into it -> or : 1
into it or -> launch : 1
it or launch -> the : 1
or launch the -> program : 1
program and enter -> some : 1
and enter some -> words : 1
enter some words -> from : 1
some words from -> the : 1
latter we can -> stop : 1
we can stop -> the : 1
can stop the -> input : 1
stop the input -> by : 1
the input by -> pressing : 1
the input by -> setting : 1
input by pressing -> this : 1
by pressing this -> is : 1
pressing this is -> how : 1
is how echoing -> some : 1
how echoing some -> words : 1
echoing some words -> into : 1
the program echo -> bar : 1
program echo bar -> there : 1
echo bar there -> are : 1
bar there are -> launching : 1
there are launching -> the : 1
are launching the -> program : 1
program with its -> source : 1
with its source -> code : 1
its source code -> file : 1
source code file -> as : 1
code file as -> it : 1
file as it -> will : 1
as it will -> count : 1
it will count -> how : 1
will count how -> many : 1
count how many -> words : 1
words it consists -> there : 1
it consists there -> are : 1
consists there are -> it : 1
there are it -> is : 1
are it is -> not : 1
not much left -> to : 1
much left to -> most : 1
left to most -> of : 1
to most of -> it : 1
most of it -> has : 1
of it has -> been : 1
it has been -> explained : 1
has been explained -> while : 1
been explained while -> implementing : 1
explained while implementing -> it : 1
while implementing it -> as : 1
implementing it as -> this : 1
it as this -> program : 1
as this program -> is : 1
this program is -> very : 1
this program is -> really : 1
program is very -> one : 1
is very one -> thing : 1
very one thing -> we : 1
one thing we -> could : 1
thing we could -> elaborate : 1
we could elaborate -> on : 1
could elaborate on -> a : 1
elaborate on a -> bit : 1
on a bit -> is : 1
a bit is -> the : 1
bit is the -> fact : 1
is the fact -> that : 2
fact that we -> used : 1
fact that we -> make : 1
that we used -> and : 1
that we used -> those : 1
used and an -> instance : 1
and an instance -> in : 1
an instance in -> a : 1
an instance in -> its : 1
instance in a -> completely : 1
in a completely -> interchangeable : 1
a completely interchangeable -> is : 1
completely interchangeable is -> of : 1
interchangeable is of -> and : 1
is of and -> inherits : 1
is of and -> is : 1
of and inherits -> from : 1
and inherits from -> have : 1
inherits from have -> a : 1
from have a -> look : 1
at the class -> inheritance : 1
the class inheritance -> diagram : 1
class inheritance diagram -> at : 1
inheritance diagram at -> the : 1
diagram at the -> beginning : 1
at the beginning -> of : 1
beginning of this -> this : 1
this this they -> are : 1
this they are -> completely : 1
they are completely -> even : 1
are completely even -> at : 1
completely even at -> your : 1
even at your -> code : 1
at your code -> modular : 1
your code modular -> by : 1
code modular by -> using : 1
modular by using -> stream : 1
by using stream -> this : 1
using stream this -> helps : 1
stream this helps -> decouple : 1
this helps decouple -> source : 1
helps decouple source -> code : 1
decouple source code -> parts : 1
source code parts -> and : 1
code parts and -> makes : 1
parts and makes -> your : 1
and makes your -> code : 1
your code easy -> to : 1
code easy to -> test : 1
easy to test -> because : 1
to test because -> you : 1
test because you -> can : 1
because you can -> just : 1
you can just -> inject : 1
can just inject -> any : 1
just inject any -> other : 1
inject any other -> matching : 1
any other matching -> type : 1
other matching type -> of : 1
matching type of -> your : 1
type of your -> output : 1
of your output -> with : 1
with stream many -> just : 1
stream many just -> printing : 1
many just printing -> out : 1
just printing out -> strings : 1
printing out strings -> and : 1
out strings and -> numbers : 1
strings and numbers -> is : 1
and numbers is -> not : 1
numbers is not -> numbers : 1
is not numbers -> need : 1
not numbers need -> to : 1
numbers need to -> be : 1
to be printed -> as : 1
be printed as -> decimal : 1
be printed as -> because : 1
printed as decimal -> sometimes : 1
as decimal sometimes -> as : 1
decimal sometimes as -> and : 1
sometimes as and -> sometimes : 1
as and sometimes -> even : 1
and sometimes even -> as : 1
sometimes even as -> sometimes : 1
even as sometimes -> we : 1
as sometimes we -> want : 1
sometimes we want -> to : 1
to see a -> prefix : 1
see a prefix -> in : 1
a prefix in -> front : 1
prefix in front -> of : 1
front of hexadecimal -> sometimes : 1
of hexadecimal sometimes -> printing : 1
hexadecimal sometimes printing -> there : 1
sometimes printing there -> are : 1
printing there are -> also : 1
also a lot -> of : 1
lot of things -> we : 1
of things we -> may : 1
things we may -> want : 1
to have an -> influence : 1
have an influence -> should : 1
an influence should -> the : 1
influence should the -> decimal : 1
should the decimal -> values : 1
the decimal values -> always : 1
decimal values always -> be : 1
values always be -> printed : 1
always be printed -> with : 1
be printed with -> the : 1
printed with the -> same : 1
the same should -> they : 1
same should they -> be : 1
should they be -> printed : 1
they be printed -> at : 1
be printed at -> or : 1
printed at or -> want : 1
at or want -> a : 1
or want a -> scientific : 1
want a scientific -> from : 1
a scientific from -> scientific : 1
scientific from scientific -> presentation : 1
from scientific presentation -> and : 1
scientific presentation and -> and : 1
presentation and and -> so : 1
and and so -> we : 1
we also want -> to : 1
to present the -> user : 1
present the user -> output : 1
the user output -> in : 1
user output in -> a : 1
output in a -> tidy : 1
output in a -> nicely : 1
output in a -> is : 1
in a tidy -> some : 1
a tidy some -> output : 1
tidy some output -> can : 1
some output can -> be : 1
output can be -> arranged : 1
can be arranged -> in : 1
be arranged in -> for : 1
arranged in for -> in : 1
in for in -> order : 1
make it as -> readable : 1
it as readable -> as : 1
as readable as -> these : 1
readable as these -> things : 1
as these things -> of : 1
these things of -> possible : 1
things of possible -> with : 1
of possible with -> output : 1
possible with output -> some : 1
with output some -> of : 1
output some of -> these : 1
of these settings -> are : 1
these settings are -> also : 1
settings are also -> important : 1
are also important -> when : 1
also important when -> values : 1
important when values -> from : 1
when values from -> input : 1
values from input -> in : 1
from input in -> this : 1
a feeling by -> playing : 1
feeling by playing -> around : 1
by playing around -> with : 3
playing around with -> they : 1
playing around with -> different : 1
playing around with -> absolute : 1
around with they -> appear : 1
with they appear -> will : 1
they appear will -> also : 1
appear will also -> get : 1
will also get -> to : 1
will also get -> an : 1
also get to -> do : 1
get to do -> this : 1
will print numbers -> with : 1
print numbers with -> wildly : 1
numbers with wildly -> varying : 1
with wildly varying -> format : 1
wildly varying format -> order : 1
varying format order -> to : 1
format order to -> get : 1
to get familiar -> with : 3
familiar with we -> include : 1
with we include -> all : 1
we use by -> using : 3
use by using -> namespace : 3
namespace we define -> a : 3
helper function a -> single : 1
function a single -> integer : 1
a single integer -> value : 1
single integer value -> with : 1
integer value with -> different : 1
value with different -> it : 1
with different it -> accepts : 1
different it accepts -> a : 1
accepts a padding -> width : 1
a padding width -> and : 1
padding width and -> a : 1
width and a -> filling : 1
and a filling -> character : 1
a filling character -> for : 1
filling character for -> which : 1
character for which -> is : 1
which is set -> to : 1
set to space -> by : 1
to space by -> void : 1
space by void -> char : 1
by void char -> we : 1
void char we -> can : 1
char we can -> set : 1
set the minimum -> number : 1
the minimum number -> of : 1
minimum number of -> characters : 1
of characters output -> for : 1
characters output for -> printing : 1
output for printing -> a : 1
for printing a -> if : 1
printing a if -> we : 1
a if we -> print : 1
if we print -> with : 1
if we print -> the : 1
if we print -> a : 1
if we print -> some : 1
we print with -> a : 1
print with a -> width : 1
with a width -> for : 1
with a width -> of : 2
a width for -> we : 1
width for we -> get : 1
for we get -> or : 1
we get or -> we : 1
get or we -> can : 1
or we can -> control : 1
or we can -> use : 1
or we can -> find : 1
we can control -> on : 1
can control on -> which : 1
control on which -> side : 1
on which side -> the : 1
which side the -> padding : 1
side the padding -> occurs : 1
the padding occurs -> with : 1
padding occurs with -> and : 1
occurs with and -> when : 1
with and when -> printing : 1
and when printing -> numbers : 1
when printing numbers -> in : 1
printing numbers in -> the : 1
in the decimal -> looks : 1
in the decimal -> format : 1
the decimal looks -> identical : 1
decimal looks identical -> to : 1
looks identical to -> but : 1
identical to but -> if : 1
to but if -> we : 1
print the value -> for : 1
print the value -> with : 1
value for with -> a : 1
for with a -> width : 1
a width of -> and : 1
a width of -> we : 1
width of and -> we : 1
get the defines -> the : 1
the defines the -> character : 1
defines the character -> be : 1
the character be -> used : 1
character be used -> for : 1
used for we -> will : 1
for we will -> try : 1
for we will -> apply : 1
will try different -> cout : 1
try different cout -> cout : 1
different cout cout -> cout : 1
cout cout cout -> left : 1
cout cout cout -> now : 1
cout cout cout -> cout : 15
cout cout cout -> and : 2
cout cout left -> val : 1
cout left val -> cout : 1
left val cout -> right : 1
val cout right -> val : 1
cout right val -> cout : 1
right val cout -> internal : 1
val cout internal -> val : 1
cout internal val -> the : 1
internal val the -> main : 1
val the main -> we : 1
main we start -> using : 1
main we start -> a : 1
we start using -> the : 1
start using the -> function : 1
we just at -> we : 1
just at we -> print : 1
at we print -> the : 1
print the with -> a : 1
width of we -> do : 1
of we do -> this : 1
we do this -> but : 2
we do this -> with : 1
we do this -> using : 1
do this but -> the : 1
do this but -> we : 1
this but the -> second : 1
this but the -> symlink : 1
but the second -> we : 1
second we use -> the : 1
use the character -> for : 1
use the character -> in : 1
the character for -> int : 1
character for int -> we : 1
for int we -> print : 1
int we print -> the : 1
int we print -> what : 1
the value with -> the : 1
value with the -> same : 1
the same width -> as : 1
same width as -> doing : 1
width as doing -> we : 1
as doing we -> to : 1
doing we to -> tell : 1
we to tell -> the : 1
to tell the -> output : 1
to tell the -> consumer : 1
tell the output -> stream : 1
output stream object -> that : 1
output stream object -> to : 1
stream object that -> it : 1
object that it -> should : 1
object that it -> that : 1
that it should -> print : 1
that it should -> prepend : 1
that it should -> really : 1
it should print -> numbers : 1
should print numbers -> in : 1
print numbers in -> the : 1
in the hexadecimal -> that : 1
the hexadecimal that -> it : 1
hexadecimal that it -> should : 1
it should prepend -> to : 1
should prepend to -> them : 1
prepend to them -> so : 1
to them so -> that : 1
them so that -> it : 1
it is obvious -> that : 1
is obvious that -> they : 1
obvious that they -> are : 1
they are to -> be : 1
to be interpreted -> as : 1
be interpreted as -> cout : 1
interpreted as cout -> hex : 1
as cout hex -> can : 1
cout hex can -> do : 1
hex can do -> the : 1
can do the -> same : 1
can do the -> actual : 1
can do the -> auto : 1
same with which -> tells : 1
with which tells -> to : 1
which tells to -> use : 1
tells to use -> the : 1
use the octal -> system : 1
the octal system -> for : 1
octal system for -> printing : 1
system for printing -> is : 1
for printing is -> still : 1
for printing is -> if : 1
printing is still -> be : 1
is still be -> prepended : 1
still be prepended -> to : 1
be prepended to -> every : 1
prepended to every -> printed : 1
to every printed -> cout : 1
every printed cout -> and : 1
printed cout and -> we : 1
cout and we -> get : 1
get the in -> printed : 1
the in printed -> upper : 1
in printed upper -> the : 1
printed upper the -> in : 1
upper the in -> is : 1
the in is -> also : 1
in is also -> upper : 1
is also upper -> cout : 1
also upper cout -> hex : 1
upper cout hex -> number : 1
cout hex number -> with : 1
hex number with -> upper : 2
number with upper -> case : 2
with upper case -> hex : 1
with upper case -> a : 1
upper case hex -> uppercase : 1
case hex uppercase -> we : 1
hex uppercase we -> want : 1
uppercase we want -> to : 1
want to in -> the : 1
the decimal format -> we : 1
decimal format we -> have : 1
format we have -> to : 1
have to remember -> that : 1
to remember that -> we : 1
remember that we -> switched : 1
remember that we -> throw : 1
that we switched -> the : 1
we switched the -> stream : 1
switched the stream -> to : 1
the stream to -> by : 1
stream to by -> using : 1
to by using -> we : 1
we can put -> it : 2
we can put -> our : 1
can put it -> back : 1
can put it -> to : 1
put it back -> to : 1
it back to -> cout : 1
back to cout -> cout : 1
to cout cout -> cout : 1
to cout cout -> are : 1
cout cout now -> in : 1
cout now in -> decimal : 1
now in decimal -> can : 1
now in decimal -> false : 1
in decimal can -> also : 1
decimal can also -> configure : 1
can also configure -> how : 1
also configure how -> boolean : 1
configure how boolean -> values : 1
how boolean values -> are : 1
boolean values are -> by : 1
values are by -> is : 1
are by is -> printed : 1
by is printed -> as : 1
is printed as -> as : 1
is printed as -> of : 1
printed as as -> with : 1
as as with -> we : 1
as with we -> can : 1
can set it -> to : 1
set it to -> a : 1
to a text -> cout : 1
a text cout -> true : 1
text cout true -> false : 1
cout true false -> cout : 1
true false cout -> boolalpha : 1
false cout boolalpha -> true : 1
cout boolalpha true -> false : 1
boolalpha true false -> have : 1
true false have -> a : 1
false have a -> look : 1
look at variables -> of : 1
at variables of -> and : 1
of and if -> we : 1
of and if -> it : 1
print a number -> such : 1
a number such -> it : 1
a number such -> the : 1
number such it -> is : 1
it is printed -> as : 1
it is printed -> in : 1
printed as of -> if : 1
as of if -> we : 1
of if we -> have : 2
of if we -> used : 1
have a number -> such : 1
number such the -> output : 1
such the output -> stream : 1
output stream will -> just : 1
stream will just -> drop : 1
will just drop -> the : 1
just drop the -> decimal : 1
drop the decimal -> which : 1
the decimal which -> we : 1
decimal which we -> can : 1
we can change -> with : 1
we can change -> are : 1
can change with -> using : 1
change with using -> the : 1
with using the -> decimal : 1
with using the -> expansion : 1
using the decimal -> point : 1
the decimal point -> is : 1
the decimal point -> of : 1
decimal point is -> always : 1
point is always -> cout : 1
is always cout -> showpoint : 1
always cout showpoint -> representation : 1
cout showpoint representation -> of : 1
showpoint representation of -> a : 1
representation of a -> number : 1
of a number -> can : 1
a number can -> be : 1
number can be -> scientific : 1
can be scientific -> or : 1
be scientific or -> means : 1
scientific or means -> that : 1
or means that -> the : 1
the number is -> to : 1
number is to -> such : 1
is to such -> a : 1
to such a -> form : 1
such a form -> that : 1
a form that -> the : 1
form that the -> first : 1
the first digit -> is : 1
first digit is -> the : 1
digit is the -> only : 1
the only the -> decimal : 1
the only the -> only : 1
the only the -> or : 1
the only the -> single : 1
only the decimal -> and : 1
the decimal and -> then : 1
the decimal and -> once : 1
decimal and then -> the : 1
then the exponent -> is : 1
the exponent is -> which : 1
exponent is which -> is : 1
is which is -> needed : 1
is which is -> why : 1
is which is -> the : 1
which is needed -> to : 1
is needed to -> multiply : 1
needed to multiply -> the : 1
to multiply the -> its : 1
multiply the its -> actual : 1
the its actual -> for : 1
its actual for -> the : 1
actual for the -> value : 1
the value would -> be : 1
value would be -> printed : 1
would be printed -> as : 1
printed as because -> reverts : 1
as because reverts -> back : 1
because reverts back -> to : 1
reverts back to -> the : 1
to the normal -> decimal : 1
to the normal -> standard : 1
the normal decimal -> point : 1
normal decimal point -> cout : 1
decimal point cout -> scientific : 1
point cout scientific -> cout : 1
cout scientific cout -> fixed : 1
scientific cout fixed -> from : 1
cout fixed from -> the : 1
fixed from the -> we : 1
can also decide -> with : 1
also decide with -> what : 1
decide with what -> precision : 1
with what precision -> a : 1
what precision a -> number : 1
precision a number -> is : 1
number is create -> a : 1
is create a -> very : 1
create a very -> small : 1
a very small -> value : 1
very small value -> and : 1
small value and -> print : 1
value and print -> it : 1
and print it -> with : 1
print it with -> digits : 1
it with digits -> after : 1
with digits after -> the : 1
digits after the -> decimal : 1
after the decimal -> and : 1
after the decimal -> cout : 1
decimal and once -> with : 1
and once with -> just : 1
once with just -> one : 1
with just one -> digit : 1
just one digit -> after : 1
one digit after -> the : 1
digit after the -> decimal : 1
the decimal cout -> precise : 1
decimal cout precise -> cout : 1
cout precise cout -> precise : 1
precise cout precise -> and : 1
cout precise and -> running : 1
precise and running -> the : 1
us the following -> lengthy : 1
us the following -> the : 2
us the following -> i : 1
us the following -> at : 1
the following lengthy -> those : 1
following lengthy those -> blocks : 1
lengthy those blocks -> of : 1
those blocks of -> output : 1
blocks of output -> are : 1
of output are -> from : 1
of output are -> visible : 1
output are from -> the : 1
are from the -> print : 1
from the print -> helper : 1
the print helper -> function : 1
helper function around -> with : 1
function around with -> and : 1
around with and -> we : 1
and we played -> with : 1
we played with -> the : 1
played with the -> casing : 1
with the casing -> of : 1
the casing of -> base : 1
the casing of -> some : 1
casing of base -> boolean : 1
of base boolean -> and : 1
base boolean and -> it : 1
boolean and it -> is : 1
idea to play -> with : 1
play with each -> of : 1
of these to -> get : 1
these to get -> familiar : 1
familiar with a -> hex : 1
with a hex -> number : 1
a hex number -> with : 1
upper case a -> now : 1
case a now -> in : 1
a now in -> decimal : 1
in decimal false -> scientific : 1
decimal false scientific -> very : 1
false scientific very -> precise : 1
scientific very precise -> less : 1
very precise less -> precise : 1
precise less precise -> it : 1
less precise it -> sometimes : 1
precise it sometimes -> pretty : 1
it sometimes pretty -> foo : 1
sometimes pretty foo -> stream : 1
pretty foo stream -> expressions : 1
foo stream expressions -> are : 1
stream expressions are -> really : 1
expressions are really -> confusing : 1
are really confusing -> if : 1
really confusing if -> it : 1
confusing if it -> is : 1
is not clear -> to : 1
not clear to -> the : 1
clear to the -> reader : 1
to the reader -> what : 1
the reader what -> each : 1
reader what each -> of : 1
what each of -> them : 1
each of them -> have : 1
of them have -> a : 1
of them have -> we : 1
them have a -> look : 1
at a table -> of : 1
a table of -> existing : 1
table of existing -> formatting : 1
of existing formatting -> they : 1
existing formatting they -> are : 1
formatting they are -> all : 1
are all to -> be : 1
all to be -> placed : 1
to be placed -> in : 1
be placed in -> a : 1
placed in a -> or : 1
in a or -> expression : 1
a or expression -> and : 1
or expression and -> then : 1
expression and then -> affect : 1
and then affect -> the : 1
then affect the -> following : 1
affect the following -> input : 1
following input or -> the : 1
input or the -> precision : 1
or the precision -> parameter : 1
the precision parameter -> when : 1
precision parameter when -> printing : 1
parameter when printing -> or : 1
when printing or -> parsing : 2
printing or parsing -> or : 1
printing or parsing -> based : 1
printing or parsing -> for : 1
or parsing or -> disables : 1
parsing or disables -> the : 1
or disables the -> printing : 1
or disables the -> feature : 1
disables the printing -> of : 1
the printing of -> the : 1
printing of the -> decimal : 1
of the decimal -> point : 1
decimal point of -> numbers : 1
point of numbers -> even : 1
of numbers even -> if : 1
numbers even if -> they : 1
even if they -> do : 1
if they do -> not : 2
not have any -> decimal : 1
have any decimal -> can : 1
any decimal can -> be : 1
decimal can be -> printed : 1
be printed in -> a : 1
printed in a -> fixed : 1
printed in a -> single : 1
in a fixed -> style : 1
a fixed style -> is : 1
fixed style is -> the : 1
the most intuitive -> or : 1
most intuitive or -> scientific : 1
intuitive or scientific -> and : 1
or scientific and -> stand : 1
scientific and stand -> for : 1
and stand for -> these : 1
stand for these -> activates : 1
for these activates -> both : 1
these activates both -> which : 1
activates both which -> formats : 1
both which formats -> numbers : 1
which formats numbers -> in : 1
formats numbers in -> deactivates : 1
numbers in deactivates -> both : 1
in deactivates both -> or : 1
deactivates both or -> disable : 1
both or disable -> printing : 1
or disable printing -> a : 1
disable printing a -> prefix : 1
printing a prefix -> for : 1
a prefix for -> positive : 1
prefix for positive -> or : 1
for positive or -> write : 1
positive or write -> exactly : 1
or write exactly -> when : 1
write exactly when -> this : 1
exactly when this -> truncates : 1
when this truncates -> the : 1
this truncates the -> when : 1
truncates the when -> padding : 1
the when padding -> is : 1
when padding is -> applied : 1
padding is applied -> if : 1
is applied if -> the : 1
applied if the -> output : 1
the output would -> than : 1
output would than -> applying : 1
would than applying -> padding : 1
than applying padding -> fill : 1
applying padding fill -> the : 1
padding fill the -> output : 1
fill the output -> the : 1
the output the -> default : 1
output the default -> is : 1
the default is -> space : 1
default is space -> and : 1
is space and -> control : 1
space and control -> where : 1
and control where -> the : 1
control where the -> padding : 1
where the padding -> for : 1
the padding for -> prints : 1
padding for prints -> padding : 1
for prints padding -> characters : 1
prints padding characters -> in : 1
padding characters in -> the : 1
middle between integers -> and : 1
between integers and -> their : 1
integers and their -> negative : 1
and their negative -> the : 1
their negative the -> hex : 1
negative the hex -> prefix : 1
the hex prefix -> and : 1
hex prefix and -> a : 1
prefix and a -> hexadecimally : 1
and a hexadecimally -> printed : 1
a hexadecimally printed -> monetary : 1
hexadecimally printed monetary -> units : 1
printed monetary units -> and : 1
monetary units and -> values : 1
units and values -> can : 1
and values can -> be : 1
values can be -> printed : 1
be printed and -> parsed : 1
printed and parsed -> in : 1
and parsed in -> the : 1
parsed in the -> and : 1
the and octal -> base : 1
and octal base -> is : 1
octal base is -> the : 1
base is the -> numeric : 1
is the numeric -> synonymous : 1
the numeric synonymous -> function : 1
numeric synonymous function -> to : 1
synonymous function to -> which : 1
function to which -> are : 1
to which are -> equivalent : 1
which are equivalent -> if : 1
are equivalent if -> used : 1
equivalent if used -> with : 1
if used with -> the : 1
used with the -> values : 1
used with the -> function : 1
the values other -> values : 1
values other values -> reset : 1
other values reset -> the : 1
values reset the -> base : 1
reset the base -> choice : 1
the base choice -> to : 1
base choice to -> which : 1
choice to which -> leads : 1
leads to decimal -> printing : 1
to decimal printing -> or : 1
decimal printing or -> parsing : 1
or parsing based -> on : 1
parsing based on -> the : 1
based on the -> prefix : 1
based on the -> which : 1
on the prefix -> of : 1
the prefix of -> the : 1
prefix of the -> string : 1
string in quotes -> or : 1
string in quotes -> for : 1
in quotes or -> parse : 1
quotes or parse -> from : 1
or parse from -> quoted : 1
parse from quoted -> and : 1
from quoted and -> then : 1
quoted and then -> drops : 1
and then drops -> the : 1
then drops the -> can : 1
drops the can -> be : 1
the can be -> a : 1
a string class -> instance : 1
a string class -> with : 1
a string class -> transforms : 1
a string class -> to : 1
string class instance -> or : 1
class instance or -> a : 1
instance or a -> character : 1
instance or a -> the : 1
or a character -> or : 1
a character or -> parses : 1
character or parses -> boolean : 1
or parses boolean -> values : 1
parses boolean values -> alphabetical : 1
boolean values alphabetical -> representation : 1
values alphabetical representation -> rather : 1
alphabetical representation rather -> than : 1
representation rather than -> or : 1
rather than or -> disables : 1
than or disables -> when : 1
or disables when -> printing : 1
disables when printing -> or : 1
or parsing for -> this : 1
parsing for this -> is : 1
is for it -> is : 1
it is or -> disables : 1
is or disables -> upper : 1
or disables upper -> casing : 1
disables upper casing -> or : 1
upper casing or -> alphabetical : 1
casing or alphabetical -> characters : 1
or alphabetical characters -> when : 1
alphabetical characters when -> and : 1
characters when and -> hexadecimal : 1
when and hexadecimal -> best : 1
and hexadecimal best -> way : 1
hexadecimal best way -> to : 1
way to get -> familiar : 1
way to get -> to : 1
way to get -> an : 1
familiar with those -> is : 1
with those is -> studying : 1
those is studying -> their : 1
is studying their -> variety : 1
studying their variety -> a : 1
their variety a -> bit : 1
variety a bit -> and : 1
a bit and -> playing : 1
bit and playing -> with : 1
and playing with -> playing : 1
playing with playing -> with : 1
with playing with -> we : 1
playing with we -> might : 1
with we might -> have : 1
we might have -> noticed : 1
might have noticed -> already : 1
have noticed already -> that : 1
noticed already that -> these : 1
already that these -> modifiers : 1
that these modifiers -> appear : 1
these modifiers appear -> to : 1
modifiers appear to -> be : 1
appear to be -> a : 1
be a few -> of : 1
a few of -> not : 1
few of not -> sticky : 1
of not sticky -> means : 1
not sticky means -> that : 1
sticky means that -> once : 1
means that once -> they : 1
that once they -> appear : 1
once they appear -> to : 1
they appear to -> influence : 1
appear to influence -> the : 1
to influence the -> they : 1
influence the they -> are : 1
they are reset -> the : 1
are reset the -> only : 1
reset the only -> ones : 1
the only ones -> from : 1
only ones from -> this : 1
ones from this -> table : 1
from this table -> are : 1
this table are -> and : 1
table are and -> they : 1
are and they -> only : 1
and they only -> affect : 1
they only affect -> the : 1
only affect the -> next : 1
affect the next -> item : 1
next item in -> the : 1
this is important -> to : 1
important to if -> we : 1
we print some -> output : 1
print some output -> with : 1
some output with -> certain : 1
output with certain -> we : 1
with certain we -> should : 1
certain we should -> tidy : 1
we should tidy -> up : 1
should tidy up -> our : 1
up our stream -> object : 1
up our stream -> formatting : 1
our stream object -> formatting : 1
stream object formatting -> settings : 1
object formatting settings -> because : 1
formatting settings because -> the : 1
settings because the -> next : 1
because the next -> output : 1
the next output -> from : 1
next output from -> unrelated : 1
output from unrelated -> code : 1
from unrelated code -> may : 1
unrelated code may -> otherwise : 1
code may otherwise -> look : 1
may otherwise look -> same : 1
otherwise look same -> applies : 1
look same applies -> to : 1
applies to input -> where : 1
to input where -> things : 1
input where things -> can : 1
where things can -> break : 1
things can break -> with : 1
can break with -> the : 1
break with the -> wrong : 1
with the wrong -> manipulator : 1
the wrong manipulator -> did : 1
wrong manipulator did -> not : 1
manipulator did not -> really : 1
did not really -> use : 1
not really use -> any : 1
really use any -> of : 1
use any of -> they : 1
any of they -> do : 1
of they do -> not : 1
do anything with -> but : 1
anything with but -> for : 1
with but for -> the : 1
for the reason -> of : 1
the reason of -> we : 1
reason of we -> should : 1
of we should -> also : 1
of we should -> first : 1
we should also -> have : 1
should also have -> a : 1
at some other -> stream : 1
some other stream -> state : 1
other stream state -> or : 1
stream state or -> disables : 1
state or disables -> the : 1
disables the feature -> streams : 1
the feature streams -> skipping : 1
feature streams skipping -> or : 1
streams skipping or -> disables : 1
skipping or disables -> immediate : 1
or disables immediate -> output : 1
disables immediate output -> buffer : 1
immediate output buffer -> flushing : 1
output buffer flushing -> after : 1
buffer flushing after -> any : 1
flushing after any -> output : 1
after any output -> be : 1
any output be -> used : 1
output be used -> on : 1
used on input -> streams : 1
on input streams -> to : 1
input streams to -> skip : 1
streams to skip -> any : 1
to skip any -> whitespace : 1
skip any whitespace -> at : 1
any whitespace at -> the : 1
whitespace at the -> head : 1
at the head -> of : 1
the a character -> into : 1
a character into -> a : 1
a character into -> an : 1
character into a -> flushes : 1
into a flushes -> out : 1
a flushes out -> whatever : 1
flushes out whatever -> is : 1
out whatever is -> in : 1
in the output -> a : 1
in the output -> is : 1
the output a -> character : 1
output a character -> into : 1
character into an -> output : 1
stream and flushes -> the : 1
and flushes the -> only : 1
flushes the only -> and : 1
the only and -> appear : 1
only and appear -> complex : 1
and appear complex -> objects : 1
appear complex objects -> from : 1
from file in -> individual : 1
file in individual -> and : 1
in individual and -> word : 1
individual and word -> strings : 1
and word strings -> is : 1
word strings is -> really : 1
strings is really -> because : 1
is really because -> the : 1
really because the -> operator : 1
because the operator -> of : 1
operator of input -> stream : 1
of input stream -> objects : 1
input stream objects -> is : 1
stream objects is -> overloaded : 1
objects is overloaded -> for : 1
is overloaded for -> all : 1
overloaded for all -> these : 1
for all these -> and : 1
all these and -> input : 1
these and input -> streams : 1
and input streams -> conveniently : 1
input streams conveniently -> drop : 1
streams conveniently drop -> all : 1
conveniently drop all -> whitespace : 1
drop all whitespace -> for : 1
all whitespace for -> what : 1
whitespace for what -> if : 1
for what if -> we : 1
have a more -> complex : 1
a more complex -> structure : 1
a more complex -> container : 1
a more complex -> exception : 1
more complex structure -> that : 1
complex structure that -> we : 1
structure that we -> want : 1
want to read -> from : 1
read from an -> input : 1
input and if -> we : 1
need to read -> strings : 1
to read strings -> that : 1
to read strings -> with : 1
read strings that -> contain : 1
that contain more -> than : 1
contain more than -> one : 1
than one word -> they : 1
one word they -> would : 1
word they would -> normally : 1
they would normally -> be : 1
would normally be -> chunked : 1
normally be chunked -> into : 1
be chunked into -> single : 1
chunked into single -> words : 1
into single words -> because : 1
single words because -> of : 1
words because of -> the : 1
of the whitespace -> any : 1
the whitespace any -> it : 1
whitespace any it -> is : 1
any it is -> possible : 1
to provide another -> input : 1
provide another input -> stream : 1
another input stream -> and : 1
input stream and -> we : 1
input stream and -> then : 1
stream and we -> are : 1
stream and we -> can : 1
going to see -> how : 3
do this a -> custom : 1
this a custom -> data : 1
a custom data -> structure : 1
custom data structure -> and : 1
data structure and -> provide : 1
structure and provide -> facilities : 1
and provide facilities -> to : 1
provide facilities to -> read : 1
facilities to read -> such : 1
to read such -> items : 1
to read such -> a : 1
read such items -> from : 1
such items from -> input : 1
items from input -> streams : 1
from input streams -> as : 1
input streams as -> standard : 1
streams as standard -> need : 1
as standard need -> to : 1
standard need to -> include : 1
first and for -> we : 1
for we declare -> that : 1
namespace a complex -> object : 1
a complex object -> we : 1
complex object we -> define : 1
object we define -> a : 1
define a a -> city : 1
a a city -> shall : 1
a city shall -> have : 1
city shall have -> a : 1
shall have a -> a : 1
have a a -> population : 1
a a population -> and : 1
a population and -> geographic : 1
population and geographic -> struct : 1
and geographic struct -> city : 1
geographic struct city -> string : 1
city string double -> double : 1
string double double -> order : 1
double double order -> to : 1
double order to -> be : 1
able to read -> such : 1
such a city -> from : 1
a city from -> a : 1
city from a -> serial : 1
from a serial -> input : 1
from a serial -> character : 1
a serial input -> we : 1
serial input we -> need : 1
input we need -> to : 1
to overload the -> stream : 2
the stream in -> this : 1
stream in this -> we : 2
we first skip -> all : 1
first skip all -> the : 1
skip all the -> leading : 1
all the leading -> whitespace : 1
the leading whitespace -> with : 1
leading whitespace with -> because : 1
whitespace with because -> we : 1
with because we -> do : 1
not want whitespace -> to : 1
want whitespace to -> pollute : 1
whitespace to pollute -> the : 1
to pollute the -> city : 1
pollute the city -> we : 1
the city we -> read : 1
city we read -> a : 1
read a whole -> line : 1
of text this -> implies : 1
text this implies -> that : 1
this implies that -> in : 1
implies that in -> the : 1
the input there -> is : 1
input there is -> a : 1
is a whole -> text : 1
a whole text -> line : 1
whole text line -> only : 1
text line only -> carrying : 1
line only carrying -> the : 1
only carrying the -> name : 1
carrying the name -> of : 1
of a city -> after : 1
a city after -> a : 1
city after a -> newline : 1
after a newline -> a : 1
a newline a -> list : 1
newline a list -> of : 1
list of numbers -> indicating : 1
of numbers indicating -> the : 1
numbers indicating the -> the : 1
indicating the the -> geographic : 1
the the geographic -> and : 1
the geographic and -> the : 1
geographic and the -> city : 1
and the city -> is : 1
the city is -> is : 1
city is is -> return : 2
is is return -> our : 1
is is return -> are : 1
is return our -> main : 1
main we create -> a : 1
create a vector -> hold : 1
create a vector -> with : 1
a vector hold -> a : 1
vector hold a -> range : 1
hold a range -> of : 1
range of city -> we : 1
of city we -> fill : 1
city we fill -> it : 1
fill it using -> the : 1
using the input -> of : 1
the input of -> the : 1
input of the -> copy : 1
the copy call -> is : 1
copy call is -> an : 1
call is an -> by : 1
is an by -> giving : 1
an by giving -> it : 1
by giving it -> the : 1
giving it the -> struct : 1
it the struct -> type : 1
the struct type -> as : 1
struct type as -> a : 1
type as a -> template : 1
type as a -> member : 1
type as a -> second : 1
as a template -> it : 1
a template it -> will : 1
template it will -> use : 1
template it will -> try : 1
it will use -> the : 1
it will use -> it : 1
the function which -> we : 1
we just int -> order : 1
just int order -> to : 1
int order to -> see : 1
to see whether -> our : 1
see whether our -> city : 1
whether our city -> parsing : 1
our city parsing -> went : 1
city parsing went -> we : 1
parsing went we -> print : 1
went we print -> what : 1
what we got -> in : 1
we got in -> the : 1
got in the -> the : 1
the the leads -> to : 1
the leads to -> the : 1
to the city -> name : 1
the city name -> being : 1
city name being -> filled : 1
name being filled -> with : 1
being filled with -> so : 1
filled with so -> we : 1
with so we -> get : 1
we get our -> output : 1
get our output -> in : 1
our output in -> a : 1
in a nicely -> readable : 1
in a nicely -> prettified : 1
a nicely readable -> for : 1
nicely readable for -> auto : 1
readable for auto -> cout : 1
auto cout left -> name : 1
auto cout left -> desc : 1
auto cout left -> ext : 1
cout left name -> pop : 1
left name pop -> lat : 1
name pop lat -> lon : 1
pop lat lon -> text : 1
lat lon text -> file : 1
lon text file -> from : 1
text file from -> which : 1
file from which -> we : 1
file from which -> that : 1
we will feed -> our : 1
we will feed -> it : 1
will feed our -> program : 1
feed our program -> looks : 1
our program looks -> like : 1
program looks like -> there : 1
looks like there -> are : 1
like there are -> cities : 1
there are cities -> with : 1
are cities with -> their : 1
cities with their -> population : 1
with their population -> count : 1
their population count -> and : 1
population count and -> geographical : 1
count and geographical -> braunschweig : 1
and geographical braunschweig -> berlin : 1
geographical braunschweig berlin -> new : 1
braunschweig berlin new -> york : 1
berlin new york -> city : 1
new york city -> mexico : 2
york city mexico -> city : 2
city mexico city -> and : 1
city mexico city -> it : 1
mexico city and -> running : 1
city and running -> the : 1
what we try -> to : 1
try to tamper -> around : 1
to tamper around -> with : 1
tamper around with -> the : 1
the input file -> by : 1
input file by -> adding : 1
file by adding -> some : 1
by adding some -> unnecessary : 1
adding some unnecessary -> whitespace : 1
some unnecessary whitespace -> before : 1
unnecessary whitespace before -> the : 1
whitespace before the -> city : 1
before the city -> names : 1
the city names -> in : 1
city names in -> order : 1
names in order -> to : 1
how it gets -> filtered : 1
it gets filtered -> cat : 1
gets filtered cat -> new : 1
filtered cat new -> york : 1
cat new york -> city : 1
mexico city it -> was : 1
city it was -> another : 1
was another short -> recipe : 1
another short recipe -> the : 1
short recipe the -> only : 1
recipe the only -> thing : 1
thing we did -> was : 1
thing we did -> in : 1
thing we did -> to : 1
did was creating -> a : 1
was creating a -> new : 1
creating a new -> struct : 1
a new struct -> then : 1
new struct then -> we : 1
struct then we -> overloaded : 1
then we overloaded -> this : 1
we overloaded this -> type : 1
overloaded this type -> and : 1
this type and -> this : 1
type and this -> already : 1
and this already -> enabled : 1
this already enabled -> us : 1
already enabled us -> to : 1
enabled us to -> deserialize : 1
us to deserialize -> city : 1
to deserialize city -> items : 1
deserialize city items -> from : 1
city items from -> standard : 1
items from standard -> input : 2
standard input using -> might : 1
input using might -> be : 1
using might be -> an : 1
might be an -> open : 1
might be an -> explanation : 1
might be an -> case : 1
be an open -> question : 1
an open question -> left : 1
open question left -> regarding : 1
question left regarding -> error : 1
left regarding error -> for : 1
regarding error for -> have : 1
error for have -> a : 1
at the implementation -> city : 1
the implementation city -> is : 1
implementation city is -> is : 1
is return are -> reading : 1
return are reading -> a : 1
are reading a -> lot : 1
reading a lot -> of : 1
of different what -> happens : 1
different what happens -> if : 1
what happens if -> one : 1
what happens if -> the : 1
happens if one -> of : 1
if one of -> them : 1
of them fails -> and : 1
them fails and -> the : 1
fails and the -> next : 1
and the next -> one : 1
and the next -> two : 1
the next one -> does : 1
next one does -> that : 1
one does that -> mean : 1
does that mean -> that : 1
that mean that -> we : 1
we are potentially -> reading : 1
are potentially reading -> all : 1
potentially reading all -> following : 1
reading all following -> items : 1
all following items -> with : 1
following items with -> a : 1
items with a -> bad : 1
with a bad -> in : 1
a bad in -> the : 1
bad in the -> token : 1
in the token -> this : 1
the token this -> cannot : 1
token this cannot -> as : 1
this cannot as -> soon : 1
cannot as soon -> as : 1
soon as one -> of : 1
as one of -> these : 1
one of these -> items : 1
of these items -> cannot : 1
these items cannot -> be : 1
items cannot be -> parsed : 1
cannot be parsed -> from : 1
be parsed from -> the : 1
parsed from the -> input : 1
input the input -> stream : 1
object enters an -> error : 1
enters an error -> state : 1
an error state -> and : 1
error state and -> refuses : 1
state and refuses -> to : 1
and refuses to -> parse : 1
refuses to parse -> anything : 1
to parse anything -> this : 1
parse anything this -> means : 1
anything this means -> that : 1
means that if -> for : 1
means that if -> we : 4
means that if -> the : 1
that if for -> example : 1
if for example -> or : 1
for example or -> cannot : 1
example or cannot -> be : 1
or cannot be -> the : 1
cannot be the -> remaining : 1
be the remaining -> operands : 1
the remaining operands -> just : 1
remaining operands just -> and : 1
operands just and -> we : 1
just and we -> leave : 1
and we leave -> this : 1
we leave this -> operator : 1
leave this operator -> function : 1
this operator function -> scope : 1
operator function scope -> with : 1
function scope with -> a : 1
scope with a -> city : 1
with a city -> the : 1
a city the -> caller : 1
city the caller -> we : 1
the caller we -> are : 1
caller we are -> notified : 1
we are notified -> by : 1
are notified by -> this : 1
notified by this -> when : 1
by this when -> we : 1
this when we -> such : 1
when we such -> a : 1
we such a -> streaming : 1
such a streaming -> expression : 1
a streaming expression -> is : 1
streaming expression is -> implicitly : 1
expression is implicitly -> converted : 1
is implicitly converted -> to : 1
implicitly converted to -> a : 1
converted to a -> bool : 1
to a bool -> value : 1
a bool value -> when : 1
bool value when -> used : 1
value when used -> as : 1
when used as -> it : 1
used as it -> returns : 1
as it returns -> the : 1
returns the input -> stream : 1
object is in -> an : 1
is in an -> error : 1
in an error -> knowing : 1
an error knowing -> that : 1
error knowing that -> we : 1
knowing that we -> can : 1
we can reset -> the : 1
can reset the -> stream : 1
reset the stream -> and : 1
stream and do -> whatever : 1
and do whatever -> is : 1
do whatever is -> this : 1
whatever is this -> we : 1
is this we -> did : 1
is this we -> can : 1
this we did -> not : 2
did not write -> such : 1
not write such -> conditionals : 1
write such conditionals -> ourselves : 1
such conditionals ourselves -> because : 1
conditionals ourselves because -> we : 1
ourselves because we -> do : 1
do the the -> implementation : 1
implementation of this -> iterator : 1
implementation of this -> task : 1
of this iterator -> class : 1
this iterator class -> also : 1
iterator class also -> checks : 1
class also checks -> for : 1
also checks for -> errors : 1
checks for errors -> while : 1
for errors while -> if : 1
errors while if -> any : 1
while if any -> errors : 1
if any errors -> it : 1
any errors it -> will : 1
errors it will -> refuse : 1
it will refuse -> iterating : 1
will refuse iterating -> in : 1
refuse iterating in -> this : 1
iterating in this -> it : 1
this it returns -> when : 1
it returns when -> it : 1
returns when it -> is : 1
the end which -> makes : 1
end which makes -> the : 1
which makes the -> algorithm : 1
which makes the -> same : 1
makes the algorithm -> this : 1
the algorithm this -> we : 1
algorithm this we -> are : 1
algorithm this we -> will : 1
we are containers -> from : 1
are containers from -> the : 1
containers from the -> last : 1
we can assemble -> compound : 1
can assemble compound -> data : 1
assemble compound data -> structures : 1
compound data structures -> from : 1
structures from an -> input : 1
and then fill -> lists : 1
then fill lists -> or : 1
fill lists or -> vectors : 1
lists or vectors -> with : 1
or vectors with -> we : 1
vectors with we -> make : 1
with we make -> it : 1
we make it -> a : 2
make it a -> little : 2
make it a -> bit : 2
it a little -> bit : 2
little bit harder -> by : 1
bit harder by -> filling : 1
harder by filling -> an : 1
by filling an -> from : 1
filling an from -> standard : 1
an from standard -> the : 1
from standard the -> problem : 1
standard the problem -> here : 1
the problem here -> is : 1
problem here is -> that : 1
cannot just fill -> a : 1
just fill a -> single : 1
fill a single -> structure : 1
a single structure -> with : 1
single structure with -> values : 1
structure with values -> and : 1
with values and -> push : 1
values and push -> it : 1
and push it -> back : 1
push it back -> into : 1
it back into -> a : 1
into a linear -> container : 1
a linear container -> like : 1
linear container like -> a : 1
container like a -> list : 1
like a list -> or : 1
a list or -> a : 1
list or a -> vector : 1
or a vector -> is : 1
vector is because -> divides : 1
is because divides -> its : 1
because divides its -> payload : 1
divides its payload -> into : 1
its payload into -> key : 1
payload into key -> and : 1
into key and -> value : 1
key and value -> it : 1
and value it -> not : 1
value it not -> completely : 1
it not completely -> as : 1
completely as we -> will : 1
we will studying -> this : 1
will studying this -> we : 1
studying this we -> will : 1
we will feel -> comfortable : 1
will feel comfortable -> with : 1
feel comfortable with -> serializing : 1
comfortable with serializing -> and : 1
with serializing and -> deserializing : 1
serializing and deserializing -> complex : 1
and deserializing complex -> data : 1
deserializing complex data -> structures : 1
complex data structures -> from : 1
structures from and -> to : 1
and to character -> to : 1
to character to -> do : 1
character to do -> are : 1
going to define -> another : 1
going to define -> a : 2
to define another -> structure : 1
define another structure -> like : 1
another structure like -> in : 1
structure like in -> the : 1
last but this -> time : 1
but this time -> we : 2
but this time -> with : 2
time we are -> going : 1
going to fill -> it : 1
fill it into -> a : 1
a which makes -> it : 1
makes it more -> this : 1
it more this -> container : 1
more this container -> maps : 1
this container maps -> from : 1
container maps from -> keys : 1
to values instead -> of : 1
values instead of -> just : 1
values instead of -> the : 1
of just holding -> all : 1
just holding all -> values : 1
holding all values -> in : 1
all values in -> a : 1
a we include -> all : 1
using namespace want -> to : 1
namespace want to -> maintain : 1
want to maintain -> a : 1
to maintain a -> little : 1
maintain a little -> internet : 1
a little internet -> meme : 1
little internet meme -> say : 1
internet meme say -> a : 1
meme say a -> meme : 1
say a meme -> has : 1
a meme has -> a : 1
meme has a -> a : 1
has a a -> and : 1
a and when -> it : 1
when it was -> born : 1
it was born -> or : 1
was born or -> we : 1
born or we -> will : 1
or we will -> save : 1
we will save -> them : 1
will save them -> in : 1
them in an -> where : 1
in an where -> the : 1
an where the -> name : 1
where the name -> is : 1
the name is -> the : 1
the name is -> allowed : 1
name is the -> and : 1
is the and -> the : 1
the other information -> is : 1
other information is -> bunched : 1
information is bunched -> up : 1
is bunched up -> in : 1
bunched up in -> a : 1
in a struct -> as : 1
a struct as -> the : 1
struct as the -> value : 1
as the value -> associated : 1
the value associated -> with : 1
value associated with -> the : 1
with the struct -> meme : 1
the struct meme -> string : 1
struct meme string -> first : 1
meme string first -> ignore : 1
string first ignore -> the : 1
first ignore the -> key : 1
first ignore the -> complexity : 1
ignore the key -> and : 1
the key and -> just : 1
key and just -> implement : 1
and just implement -> a : 1
just implement a -> function : 1
a function overload -> for : 1
function overload for -> we : 1
overload for we -> assume : 1
for we assume -> that : 1
that the description -> is : 1
description is surrounded -> by : 2
surrounded by quotation -> followed : 1
surrounded by quotation -> it : 1
by quotation followed -> by : 1
quotation followed by -> the : 1
followed by the -> this : 1
the this would -> look : 1
this would look -> like : 1
would look like -> in : 1
would look like -> the : 1
a text as -> the : 1
text as the -> description : 1
as the description -> is : 1
by quotation it -> can : 1
quotation it can -> contain : 1
it can contain -> whitespace : 1
it can contain -> literally : 1
can contain whitespace -> because : 1
contain whitespace because -> we : 1
whitespace because we -> know : 1
because we know -> that : 1
know that everything -> between : 1
that everything between -> the : 1
everything between the -> quotation : 1
between the quotation -> marks : 1
the quotation marks -> belongs : 1
the quotation marks -> are : 1
quotation marks belongs -> to : 1
marks belongs to -> by : 1
belongs to by -> reading : 1
to by reading -> the : 1
by reading the -> quotation : 1
reading the quotation -> marks : 1
quotation marks are -> automatically : 1
marks are automatically -> used : 1
are automatically used -> as : 1
automatically used as -> delimiters : 1
used as delimiters -> and : 1
as delimiters and -> dropped : 1
delimiters and dropped -> this : 1
and dropped this -> is : 1
dropped this is -> very : 1
is very just -> after : 1
very just after -> we : 1
just after we -> read : 1
after we read -> the : 1
we read the -> year : 1
we read the -> whole : 1
read the year -> meme : 1
the year meme -> return : 1
year meme return -> is : 1
meme return is -> now : 1
return is now -> we : 1
is now we -> take : 1
now we take -> the : 1
take the name -> as : 1
the name as -> the : 1
name as the -> key : 1
as the key -> for : 2
the key for -> the : 2
key for the -> map : 1
key for the -> when : 1
the map into -> in : 1
map into in -> order : 1
into in order -> to : 1
to insert a -> meme : 1
insert a meme -> into : 1
a meme into -> the : 1
meme into the -> we : 1
need an is -> of : 1
an is of -> and : 1
of and is -> the : 1
name is allowed -> to : 1
is allowed to -> contain : 1
is allowed to -> execute : 1
allowed to contain -> spaces : 1
to contain spaces -> so : 1
contain spaces so -> we : 1
spaces so we -> use : 1
the same wrapper -> as : 1
same wrapper as -> for : 1
wrapper as for -> the : 1
the name and -> is : 1
the name and -> age : 2
name and is -> the : 1
the whole structure -> associated : 1
whole structure associated -> with : 1
structure associated with -> it : 1
associated with it -> will : 1
with it will -> be : 2
will be fed -> into : 1
fed into the -> other : 1
into the other -> implementation : 1
the other implementation -> that : 1
other implementation that -> we : 1
implementation that we -> just : 1
we just operator -> return : 1
just operator return -> is : 1
operator return is -> write : 1
return is write -> a : 1
is write a -> main : 1
a main which -> instantiates : 1
main which instantiates -> a : 1
which instantiates a -> and : 1
instantiates a and -> fill : 1
a and fill -> that : 1
and fill that -> because : 1
fill that because -> we : 1
that because we -> stream : 1
because we stream -> function : 1
we stream function -> can : 1
stream function can -> deal : 1
function can deal -> with : 1
with this type -> we : 1
this type we -> let : 1
this type we -> can : 1
this type we -> had : 1
type we let -> it : 1
we let it -> deserialize : 1
we let it -> sleep : 1
let it deserialize -> our : 1
it deserialize our -> meme : 1
deserialize our meme -> items : 1
our meme items -> from : 1
meme items from -> standard : 1
meme items from -> the : 1
standard input and -> use : 1
input and use -> an : 1
and use an -> iterator : 1
use an iterator -> in : 1
an iterator in -> order : 1
iterator in order -> to : 2
order to pump -> them : 1
to pump them -> into : 1
pump them into -> the : 1
into the int -> we : 1
the int we -> print : 1
what we first -> find : 1
we first find -> out : 1
first find out -> the : 1
find out the -> meme : 1
out the meme -> name : 1
the meme name -> in : 1
meme name in -> the : 1
meme name in -> order : 1
name in the -> we : 1
we use for -> it : 1
we use for -> cout : 1
use for it -> gets : 1
for it gets -> an : 1
it gets an -> initial : 1
gets an initial -> value : 1
initial value for -> will : 1
value for will -> visit : 1
for will visit -> the : 1
will visit the -> map : 1
visit the map -> in : 1
map in order -> to : 1
to them in -> terms : 1
terms of merging -> usually : 1
of merging usually -> means : 1
merging usually means -> in : 1
usually means in -> our : 1
means in our -> we : 2
we want no -> numeric : 1
want no numeric -> of : 1
no numeric of -> but : 1
numeric of but -> the : 1
but the in -> order : 1
get we provide -> a : 1
provide a helper -> which : 1
helper which takes -> the : 1
takes the current -> maximum : 1
the current maximum -> size : 1
current maximum size -> variable : 1
maximum size variable -> must : 1
size variable must -> be : 1
variable must be -> string : 1
must be string -> lengths : 1
be string lengths -> are : 1
string lengths are -> and : 1
lengths are and -> compares : 1
are and compares -> it : 1
and compares it -> to : 1
compares it to -> the : 1
to the length -> of : 1
the current meme -> name : 1
current meme name -> in : 1
name in order -> to : 1
order to take -> the : 1
to take the -> maximum : 1
to take the -> time : 1
to take the -> wall : 1
to take the -> local : 1
take the maximum -> of : 1
the maximum of -> both : 1
maximum of both -> this : 1
of both this -> will : 1
both this will -> happen : 1
this will happen -> for : 1
will happen for -> each : 1
happen for each -> final : 1
for each final -> return : 1
each final return -> value : 1
final return value -> is : 1
is the maximum -> meme : 1
the maximum meme -> name : 1
maximum meme name -> auto : 1
meme name auto -> const : 1
name auto const -> auto : 1
auto return width -> quickly : 1
auto return width -> accepts : 1
return width quickly -> loop : 1
width quickly loop -> through : 1
quickly loop through -> the : 1
loop through the -> map : 2
through the map -> and : 2
map and print -> each : 1
map and print -> a : 1
and print each -> we : 1
print each we -> use : 1
each we use -> left : 1
we use left -> get : 1
use left get -> a : 1
left get a -> nice : 1
get a nice -> for : 1
get a nice -> auto : 1
get a nice -> while : 1
get a nice -> parallelization : 1
a nice for -> auto : 1
nice for auto -> const : 1
cout left desc -> year : 1
cout left desc -> link : 1
left desc year -> we : 1
desc year we -> need : 1
year we need -> a : 1
need a small -> internet : 1
a small internet -> meme : 1
small internet meme -> database : 1
internet meme database -> so : 1
meme database so -> fill : 1
database so fill -> a : 1
so fill a -> text : 1
fill a text -> file : 1
text file with -> some : 1
with some shiba -> so : 1
some shiba so -> much : 1
shiba so much -> dog : 1
shiba so much -> dramatic : 1
so much dog -> on : 1
much dog on -> maximum : 1
dog on maximum -> nastyass : 1
dog on maximum -> honey : 1
on maximum nastyass -> honey : 1
maximum nastyass honey -> with : 1
nastyass honey with -> a : 1
honey with a -> very : 1
with a very -> dramatic : 2
with a very -> simple : 1
a very dramatic -> and : 1
a very dramatic -> musical : 1
very dramatic and -> running : 1
dramatic and running -> the : 1
with the example -> meme : 1
with the example -> from : 1
the example meme -> database : 1
example meme database -> yields : 1
meme database yields -> following : 1
database yields following -> cat : 1
yields following cat -> very : 1
following cat very -> shiba : 1
cat very shiba -> so : 1
very shiba so -> much : 1
so much dramatic -> chipmunk : 1
much dramatic chipmunk -> chipmunk : 1
dramatic chipmunk chipmunk -> with : 1
chipmunk chipmunk with -> a : 1
chipmunk with a -> very : 1
very dramatic musical -> dog : 1
dramatic musical dog -> on : 1
musical dog on -> maximum : 1
on maximum honey -> crazy : 1
maximum honey crazy -> nastyass : 1
honey crazy nastyass -> honey : 1
crazy nastyass honey -> anthropomorphic : 1
nastyass honey anthropomorphic -> it : 1
honey anthropomorphic it -> were : 1
anthropomorphic it were -> three : 1
it were three -> specialties : 1
were three specialties -> in : 1
three specialties in -> this : 1
specialties in this -> one : 1
in this one -> was : 1
this one was -> that : 1
one was that -> we : 1
was that we -> did : 1
was that we -> used : 1
did not fill -> a : 1
not fill a -> normal : 1
fill a normal -> vector : 1
a normal vector -> or : 1
normal vector or -> a : 1
a list from -> a : 1
list from a -> serial : 1
a serial character -> but : 1
serial character but -> a : 1
character but a -> more : 1
but a more -> complex : 1
more complex container -> like : 1
complex container like -> the : 1
container like the -> other : 1
like the other -> was : 1
the other was -> that : 2
other was that -> we : 1
other was that -> consumer : 1
used those magic -> stream : 1
those magic stream -> and : 1
magic stream and -> the : 1
stream and the -> last : 1
the last was -> the : 1
last was the -> which : 1
was the which -> finds : 1
the which finds -> out : 1
which finds out -> the : 1
finds out the -> string : 1
out the string -> start : 1
the string start -> with : 1
string start with -> the : 1
with the our -> only : 1
the our only -> contains : 1
our only contains -> a : 1
only contains a -> field : 1
contains a field -> the : 1
a field the -> name : 1
field the name -> of : 1
of the internet -> meme : 1
the internet meme -> is : 1
internet meme is -> not : 1
meme is not -> part : 1
is not part -> of : 1
not part of -> this : 1
is used as -> the : 1
for the when -> we : 1
the when we -> insert : 1
when we insert -> something : 1
we insert something -> into : 1
insert something into -> a : 1
we can provide -> an : 1
we can provide -> a : 1
we can provide -> the : 1
can provide an -> with : 1
provide an with -> a : 1
an with a -> key : 1
with a key -> type : 1
a key type -> and : 1
key type and -> a : 1
type and a -> value : 1
a value this -> is : 1
what we we -> first : 1
what we we -> get : 1
what we we -> implemented : 1
we we first -> implemented : 1
we first implemented -> stream : 1
first implemented stream -> for : 1
implemented stream for -> and : 1
stream for and -> then : 1
then we did -> the : 1
we did the -> same : 1
we did the -> matching : 1
did the same -> for : 1
same for then -> we : 1
for then we -> get : 1
we get such -> items : 1
we get such -> a : 1
get such items -> out : 1
such items out -> of : 1
standard and fed -> them : 1
and fed them -> into : 1
fed them into -> the : 1
map we deserialized -> meme : 1
we deserialized meme -> items : 1
deserialized meme items -> from : 1
the we allowed -> the : 1
we allowed the -> names : 1
allowed the names -> and : 1
the names and -> descriptions : 1
names and descriptions -> to : 1
and descriptions to -> contain : 1
descriptions to contain -> this : 1
to contain this -> was : 1
contain this was -> easily : 1
this was easily -> although : 1
was easily although -> we : 1
easily although we -> only : 1
although we only -> used : 1
although we only -> ran : 1
we only used -> one : 1
only used one -> line : 1
used one line -> per : 1
one line per -> we : 1
line per we -> those : 1
per we those -> an : 1
we those an -> example : 1
those an example -> of : 1
an example of -> the : 1
an example of -> how : 1
example of the -> line : 1
of the line -> format : 1
the line format -> is : 1
line format is -> as : 1
format is as -> with : 1
is as with -> with : 1
as with with -> dealing : 1
with with dealing -> with : 1
with dealing with -> quoted : 1
dealing with quoted -> in : 1
with quoted in -> input : 1
quoted in input -> and : 1
in input and -> is : 1
input and is -> a : 1
and is a -> great : 1
is a great -> if : 1
a great if -> we : 1
great if we -> have : 1
have a printing -> it : 1
a printing it -> using : 1
printing it using -> will : 1
it using will -> put : 1
using will put -> it : 1
will put it -> in : 1
put it in -> if : 1
it in if -> we : 1
in if we -> deserialize : 1
in if we -> want : 1
if we deserialize -> a : 1
we deserialize a -> string : 1
deserialize a string -> from : 1
string from a -> for : 1
it will read -> the : 1
will read the -> next : 1
read the next -> quotation : 1
the next quotation -> fill : 1
the next quotation -> no : 1
next quotation fill -> the : 1
quotation fill the -> string : 1
fill the string -> with : 1
string with what -> is : 1
with what is -> and : 1
what is and -> continue : 1
is and continue -> until : 1
and continue until -> it : 1
continue until it -> sees : 1
until it sees -> the : 1
until it sees -> new : 1
it sees the -> next : 1
sees the next -> quotation : 1
next quotation no -> matter : 1
quotation no matter -> how : 1
no matter how -> last : 1
no matter how -> we : 2
no matter how -> much : 1
matter how last -> strange : 1
how last strange -> looking : 1
last strange looking -> thing : 1
strange looking thing -> was : 1
looking thing was -> in : 1
thing was in -> our : 1
was in our -> accumulate : 1
in our accumulate -> const : 1
our accumulate const -> auto : 1
accumulate const auto -> return : 1
return width accepts -> a : 1
width accepts a -> another : 1
accepts a another -> argument : 1
a another argument -> which : 1
another argument which -> turns : 1
argument which turns -> out : 1
which turns out -> to : 1
turns out to -> be : 1
out to be -> a : 1
be a item -> from : 1
a item from -> the : 1
the this looks -> really : 1
this looks really -> weird : 1
looks really weird -> at : 1
really weird at -> first : 1
weird at first -> as : 1
at first as -> most : 1
first as most -> binary : 1
as most binary -> reduction : 1
most binary reduction -> functions : 1
binary reduction functions -> accept : 1
reduction functions accept -> arguments : 1
functions accept arguments -> of : 1
accept arguments of -> identical : 1
arguments of identical -> types : 1
of identical types -> and : 1
identical types and -> then : 1
types and then -> merge : 1
and then merge -> them : 1
then merge them -> together : 1
merge them together -> with : 1
them together with -> some : 1
together with some -> just : 1
with some just -> as : 1
some just as -> in : 1
is really different -> because : 1
really different because -> we : 1
different because we -> are : 1
are not merging -> actual : 1
not merging actual -> we : 1
merging actual we -> only : 1
actual we only -> pick : 1
pick the key -> string : 1
the key string -> length : 1
key string length -> from : 1
string length from -> every : 1
length from every -> the : 1
from every the -> and : 1
every the and -> then : 1
and then reduce -> the : 1
then reduce the -> resulting : 1
reduce the resulting -> values : 1
the resulting values -> with : 1
resulting values with -> the : 1
values with the -> the : 1
the the accumulate -> the : 1
the accumulate the -> first : 1
accumulate the first -> call : 1
call of gets -> the : 1
of gets the -> value : 1
gets the value -> we : 1
value we initially -> provided : 1
we initially provided -> as : 1
initially provided as -> the : 1
as the left -> a : 1
the left a -> reference : 1
left a reference -> to : 1
first pair item -> on : 1
pair item on -> the : 1
item on the -> right : 1
on the right -> this : 1
the right this -> results : 1
right this results -> in : 1
results in a -> return : 1
in a return -> which : 1
a return which -> is : 1
return which is -> the : 1
is the left -> argument : 1
the left argument -> in : 1
left argument in -> the : 1
argument in the -> call : 1
argument in the -> form : 1
in the call -> with : 1
call with the -> next : 1
call with the -> asynchronized : 1
with the next -> pair : 1
with the next -> line : 1
the next pair -> item : 1
next pair item -> as : 1
pair item as -> the : 1
item as the -> right : 1
as the right -> and : 1
the right and -> so : 1
the right and -> which : 1
the right and -> that : 1
right and so -> printing : 1
and so printing -> with : 1
so printing with -> is : 1
printing with is -> pretty : 1
with is pretty -> easy : 1
is pretty easy -> to : 1
pretty easy to -> print : 1
easy to print -> anything : 1
to print anything -> with : 1
print anything with -> output : 1
anything with output -> as : 1
with output as -> the : 1
output as the -> stl : 1
output as the -> only : 1
as the stl -> is : 1
the stl is -> already : 1
the stl is -> it : 1
stl is already -> shipped : 1
is already shipped -> with : 1
already shipped with -> many : 1
shipped with many -> useful : 1
with many useful -> for : 1
many useful for -> the : 1
useful for the -> most : 1
for the most -> this : 1
the most this -> data : 1
most this data -> structures : 1
this data structures -> containing : 1
data structures containing -> items : 1
structures containing items -> of : 1
containing items of -> such : 1
items of such -> types : 1
of such types -> can : 1
such types can -> easily : 1
types can easily -> be : 1
easily be printed -> using : 1
be printed using -> the : 1
printed using the -> which : 1
the which already -> often : 1
which already often -> this : 1
already often this -> we : 1
often this we -> will : 1
we will concentrate -> on : 2
we will concentrate -> more : 1
concentrate on how -> to : 2
on how to -> do : 1
on how to -> parallelize : 1
on how to -> suspend : 1
this with a -> custom : 1
a custom and -> what : 1
custom and what -> else : 1
and what else -> we : 1
what else we -> can : 1
else we can -> do : 1
can do to -> manipulate : 1
do to manipulate -> printing : 1
to manipulate printing -> via : 1
manipulate printing via -> template : 1
printing via template -> type : 1
via template type -> choices : 1
template type choices -> without : 1
type choices without -> much : 1
choices without much -> code : 1
without much code -> at : 1
much code at -> the : 1
code at the -> caller : 1
code at the -> same : 1
at the caller -> to : 1
the caller to -> do : 1
the caller to -> read : 1
the caller to -> choose : 1
caller to do -> will : 1
do will play -> with : 1
play with by -> enabling : 1
with by enabling -> for : 1
by enabling for -> combination : 1
enabling for combination -> with : 1
for combination with -> a : 1
combination with a -> new : 1
a new custom -> class : 1
new custom class -> and : 1
custom class and -> have : 1
class and have -> a : 1
a look into -> its : 1
a look into -> contains : 1
look into its -> implicit : 1
into its implicit -> conversion : 1
its implicit conversion -> which : 1
implicit conversion which -> can : 1
conversion which can -> help : 1
which can help -> us : 1
help us with -> include : 1
us with include -> files : 1
with include files -> come : 1
include files come -> first : 1
files come first -> and : 1
come first and -> then : 1
first and then -> we : 1
first and then -> declare : 2
first and then -> prints : 1
implement a transformation -> which : 1
a transformation which -> maps : 1
transformation which maps -> numbers : 1
which maps numbers -> to : 2
maps numbers to -> it : 1
maps numbers to -> as : 1
numbers to it -> shall : 1
to it shall -> return : 1
it shall return -> for : 1
it shall return -> a : 1
shall return for -> the : 1
return for the -> value : 1
value and so -> string : 1
and so string -> fill : 1
so string fill -> a : 1
string fill a -> hash : 1
fill a hash -> map : 1
a hash map -> with : 1
a hash map -> that : 1
a hash map -> and : 1
hash map with -> the : 1
map with the -> mappings : 1
with the mappings -> we : 1
the mappings we -> need : 1
mappings we need -> in : 1
we need in -> order : 3
need in order -> to : 3
access them m -> we : 1
them m we -> can : 1
m we can -> feed : 1
feed the hash -> function : 1
the hash function -> with : 1
hash function with -> the : 1
function with the -> and : 1
function with the -> tuple : 1
the and return -> what : 1
and return what -> it : 1
return what it -> if : 1
what it if -> it : 1
it if it -> find : 1
it find because -> there : 1
find because there -> is : 1
because there is -> no : 2
is no translation -> for : 1
no translation for -> a : 1
translation for a -> given : 1
a given we -> return : 1
given we return -> the : 1
return the const -> auto : 1
const auto match -> if : 1
auto match if -> return : 1
match if return -> return : 1
return return thing -> with : 1
return thing with -> which : 1
thing with which -> we : 1
with which we -> will : 1
will play later -> with : 1
play later with -> is : 1
later with is -> it : 1
with is it -> only : 1
is it only -> contains : 1
it only contains -> an : 1
only contains an -> is : 1
contains an is -> also : 1
is also implicitly -> constructible : 1
also implicitly constructible -> from : 1
implicitly constructible from -> an : 1
constructible from an -> it : 1
from an it -> has : 1
an it has -> a : 1
has a which -> accepts : 1
has a which -> ought : 1
output stream reference -> and : 1
output stream reference -> be : 1
stream reference and -> prints : 1
reference and prints -> string : 1
and prints string -> depending : 1
prints string depending -> on : 1
string depending on -> the : 1
on the value -> of : 1
value of its -> member : 1
of its member -> integer : 1
its member integer -> struct : 1
member integer struct -> bork : 1
integer struct bork -> int : 1
struct bork int -> void : 1
bork int void -> const : 1
int void const -> order : 1
void const order -> to : 1
const order to -> gain : 1
to gain convenience -> with : 1
gain convenience with -> overload : 1
convenience with overload -> for : 1
with overload for -> stream : 1
overload for stream -> so : 1
for stream so -> they : 1
stream so they -> automatically : 1
so they automatically -> call : 1
they automatically call -> whenever : 1
automatically call whenever -> objects : 1
call whenever objects -> are : 1
whenever objects are -> streamed : 1
objects are streamed -> into : 1
are streamed into -> an : 1
streamed into an -> output : 1
an output const -> bork : 1
output const bork -> return : 1
const bork return -> we : 1
bork return we -> can : 1
can finally begin -> implementing : 2
finally begin implementing -> the : 2
implementing the actual -> main : 1
implementing the actual -> a : 1
the actual main -> we : 1
actual main we -> initially : 1
main we initially -> just : 1
we initially just -> create : 1
initially just create -> a : 1
just create a -> vector : 1
example int const -> v : 1
const v of -> type : 1
v of type -> need : 1
of type need -> a : 1
type need a -> template : 1
need a template -> which : 1
a template which -> denotes : 1
template which denotes -> which : 1
which denotes which -> type : 1
denotes which type -> of : 1
which type of -> variables : 1
type of variables -> they : 1
of variables they -> can : 1
variables they can -> if : 1
they can if -> we : 1
can if we -> write : 1
we write it -> will : 1
write it will -> later : 1
it will later -> use : 1
will later use -> const : 1
later use const -> this : 1
use const this -> is : 1
const this is -> exactly : 1
what we implemented -> before : 1
we implemented before -> for : 1
implemented before for -> for : 1
before for for -> this : 1
for for this -> we : 1
are just printing -> so : 1
just printing so -> it : 1
printing so it -> is : 1
so it is -> it : 1
so it is -> more : 1
so it is -> as : 1
is it shall -> use : 1
it shall use -> for : 1
shall use for -> so : 1
use for so -> we : 1
so we provide -> it : 1
provide it as -> the : 1
provide it as -> a : 1
it as the -> constructor : 1
as the constructor -> we : 1
the constructor we -> go : 1
constructor we go -> through : 1
we go through -> our : 1
go through our -> vector : 1
through our vector -> in : 1
our vector in -> a : 1
in a assign -> each : 1
a assign each -> item : 1
assign each item -> to : 1
each item to -> the : 1
the dereferenced output -> this : 1
dereferenced output this -> is : 1
output this is -> how : 1
is how are -> used : 1
how are used -> by : 1
are used by -> stl : 1
stl algorithms oit -> for : 1
algorithms oit for -> i : 1
oit for i -> cout : 1
i cout output -> of : 1
cout output of -> the : 1
iterator we just -> produced : 1
we just produced -> is : 1
just produced is -> but : 1
produced is but -> it : 1
is but it -> prints : 1
is but it -> is : 1
but it prints -> the : 1
prints the number -> without : 1
the number without -> any : 1
number without any -> if : 1
without any if -> we : 1
any if we -> bit : 1
if we bit -> of : 1
we bit of -> separating : 1
bit of separating -> whitespace : 1
of separating whitespace -> between : 1
separating whitespace between -> all : 1
whitespace between all -> printed : 1
between all printed -> we : 1
all printed we -> can : 1
printed we can -> provide : 1
can provide a -> custom : 1
provide a custom -> spacing : 1
a custom spacing -> string : 1
custom spacing string -> as : 1
spacing string as -> parameter : 1
string as parameter -> of : 1
as parameter of -> the : 1
output stream this -> it : 1
stream this it -> prints : 1
this it prints -> instead : 1
it prints instead -> of : 1
prints instead of -> we : 1
of we cannot -> easily : 1
we cannot easily -> tell : 1
cannot easily tell -> it : 1
easily tell it -> to : 1
tell it to -> drop : 1
it to drop -> the : 1
to drop the -> string : 1
drop the string -> after : 1
the string after -> the : 1
string after the -> last : 1
the last because -> the : 1
last because the -> iterator : 1
the iterator does -> not : 1
iterator does not -> know : 1
not know of -> its : 1
know of its -> it : 1
its it reaches -> for : 1
it reaches for -> i : 1
reaches for i -> cout : 1
i cout items -> to : 1
cout items to -> an : 1
output stream iterator -> in : 1
output stream iterator -> as : 1
stream iterator in -> order : 1
to print them -> is : 1
print them is -> not : 1
them is not -> a : 1
not a wrong -> way : 1
a wrong way -> to : 1
wrong way to -> use : 1
way to use -> but : 1
use but this -> is : 1
is not what -> they : 1
is not what -> we : 1
not what they -> were : 1
what they were -> invented : 1
they were invented -> the : 1
were invented the -> idea : 1
invented the idea -> is : 1
is to use -> them : 1
is to use -> execution : 1
to use them -> in : 1
them in combination -> with : 1
combination with the -> simplest : 1
combination with the -> that : 1
combination with the -> example : 1
with the simplest -> one : 1
simplest one is -> we : 1
simplest one is -> it : 1
one is we -> can : 1
can provide the -> begin : 1
provide the begin -> and : 1
the vector as -> an : 1
vector as an -> input : 1
and the output -> stream : 1
and the output -> is : 1
stream iterator as -> the : 1
iterator as the -> output : 1
the output it -> will : 1
output it will -> print : 1
will print all -> the : 1
the numbers of -> the : 1
numbers of the -> do : 1
the do that -> with : 1
that with both -> the : 1
with both the -> output : 1
both the output -> iterators : 1
the output iterators -> and : 1
output iterators and -> later : 1
iterators and later -> compare : 1
and later compare -> the : 1
later compare the -> output : 1
compare the output -> with : 1
the output with -> the : 1
the output with -> output : 1
output with the -> loops : 1
with the loops -> we : 1
the loops we -> wrote : 1
loops we wrote -> cout : 1
we wrote cout -> cout : 1
wrote cout cout -> the : 1
cout cout the -> which : 1
cout cout the -> instance : 1
cout the which -> maps : 1
the which maps -> numbers : 1
numbers to as -> to : 1
to as to -> to : 1
as to to -> and : 1
to to and -> so : 1
to and so -> we : 1
can use those -> for : 1
use those for -> printing : 1
those for printing -> we : 1
printing we just -> need : 1
need to use -> an : 1
need to use -> this : 1
need to use -> any : 1
to use an -> output : 1
use an output -> stream : 1
output stream which -> is : 2
stream which is -> template : 1
stream which is -> specialized : 1
which is template -> specialized : 1
is template specialized -> on : 1
template specialized on -> we : 1
specialized on we -> are : 1
on we are -> not : 1
are not printing -> integers : 1
not printing integers -> any : 1
printing integers any -> and : 1
integers any and -> instead : 1
any and instead -> of : 1
of we use -> because : 1
of we use -> in : 1
we use because -> it : 1
use because it -> allows : 1
use because it -> is : 1
because it allows -> us : 1
us to apply -> a : 1
to apply a -> transformation : 1
apply a transformation -> function : 1
a transformation function -> to : 2
function to each -> item : 1
to each item -> in : 1
each item in -> the : 1
input range before -> copying : 1
range before copying -> it : 1
before copying it -> to : 1
copying it to -> the : 1
the output cout -> last : 1
output cout last -> output : 1
cout last output -> line : 1
last output line -> in : 1
output line in -> this : 1
line in this -> program : 1
in this program -> finally : 1
this program finally -> puts : 1
program finally puts -> but : 1
finally puts but -> do : 1
puts but do -> not : 1
but do not -> provide : 1
but do not -> have : 1
do not provide -> a : 1
provide a transformation -> function : 1
can just create -> an : 1
just create an -> output : 1
create an output -> stream : 1
which is specialized -> on : 1
is specialized on -> type : 1
specialized on type -> in : 1
on type in -> an : 1
type in an -> this : 1
in an this -> leads : 1
an this leads -> to : 1
leads to instances -> being : 1
to instances being -> created : 1
instances being created -> from : 1
being created from -> the : 1
created from the -> input : 1
input range that -> will : 1
that will give -> us : 1
give us some -> interesting : 1
us some interesting -> and : 1
some interesting and -> running : 1
interesting and running -> the : 1
following the first -> are : 1
following the first -> two : 4
the first are -> completely : 1
first are completely -> identical : 1
are completely identical -> to : 1
completely identical to -> the : 1
identical to the -> next : 1
next which is -> what : 1
we we get -> number : 1
we we get -> as : 1
we get number -> strings : 1
get number strings -> in : 1
number strings in -> a : 1
strings in a -> followed : 1
in a followed -> by : 1
a followed by -> a : 1
followed by a -> lot : 1
by a lot -> of : 1
lot of these -> occur : 1
of these occur -> in : 1
these occur in -> multiple : 1
occur in multiple -> we : 1
in multiple we -> used : 1
multiple we used -> a : 1
we used a -> separator : 1
used a separator -> string : 1
a separator string -> instead : 1
separator string instead -> of : 1
instead of spaces -> for : 1
of spaces for -> one : 1
spaces for one -> two : 1
for one two -> three : 1
one two three -> four : 1
two three four -> five : 1
three four five -> it : 1
four five it -> have : 1
five it have -> seen : 1
it have seen -> that : 2
have seen that -> is : 1
have seen that -> we : 1
have seen that -> different : 1
seen that is -> really : 1
that is really -> just : 1
is really just -> a : 1
really just a -> which : 1
just a which -> kind : 1
a which kind -> of : 1
which kind of -> squeezes : 1
kind of squeezes -> the : 1
of squeezes the -> act : 1
squeezes the act -> of : 1
the act of -> printing : 1
act of printing -> into : 1
of printing into -> the : 1
printing into the -> form : 1
into the form -> and : 1
the form and -> syntax : 1
form and syntax -> of : 1
and syntax of -> an : 1
syntax of an -> incrementing : 1
of an incrementing -> such : 1
an incrementing such -> an : 1
incrementing such an -> iterator : 1
an iterator does -> only : 1
iterator does only -> returns : 1
does only returns -> us : 1
only returns us -> a : 1
us a proxy -> object : 1
a proxy object -> whose : 1
proxy object whose -> assignment : 1
object whose assignment -> operator : 1
whose assignment operator -> forwards : 1
assignment operator forwards -> its : 1
operator forwards its -> argument : 1
forwards its argument -> to : 1
its argument to -> an : 1
argument to an -> output : 1
output stream iterators -> that : 1
stream iterators that -> are : 1
iterators that are -> specialized : 1
that are specialized -> on : 1
specialized on a -> type : 1
on a type -> in : 1
a type in -> work : 1
type in work -> with : 1
in work with -> all : 1
work with all -> types : 1
with all types -> for : 1
all types for -> which : 1
types for which -> an : 1
for which an -> const : 1
which an const -> implementation : 1
an const implementation -> is : 1
const implementation is -> tries : 1
implementation is tries -> to : 1
is tries to -> call : 1
to call for -> the : 1
to call for -> destroying : 1
call for the -> type : 1
for the type -> it : 1
the type it -> was : 1
type it was -> specialized : 1
it was specialized -> via : 1
was specialized via -> its : 1
specialized via its -> template : 1
its template it -> will : 1
try to implicitly -> convert : 1
to implicitly convert -> types : 1
implicitly convert types -> if : 1
convert types if -> the : 1
types if the -> same : 1
if the same -> is : 1
the same is -> when : 1
same is when -> we : 1
is when we -> iterate : 1
is when we -> want : 1
of items but -> we : 1
items but we -> copy : 1
but we copy -> those : 1
we copy those -> items : 1
copy those items -> over : 1
those items over -> to : 1
items over to -> this : 1
over to this -> will : 1
to this will -> work : 1
this will work -> if : 1
will work if -> is : 1
work if is -> implicitly : 1
if is implicitly -> convertible : 1
is implicitly convertible -> to : 1
is implicitly convertible -> from : 1
implicitly convertible to -> we : 1
convertible to we -> did : 1
to we did -> exactly : 1
we did exactly -> the : 1
did exactly the -> same : 1
thing with instance -> is : 1
with instance is -> implicitly : 1
instance is implicitly -> convertible : 1
implicitly convertible from -> an : 1
convertible from an -> integer : 1
from an integer -> that : 1
an integer that -> is : 1
integer that is -> why : 1
why it was -> so : 1
it was so -> easy : 1
it was so -> we : 1
was so easy -> to : 1
easy to throw -> a : 1
to throw a -> lot : 1
throw a lot -> of : 1
lot of strings -> onto : 1
of strings onto -> the : 1
strings onto the -> user : 1
onto the user -> implicit : 1
the user implicit -> conversion : 1
user implicit conversion -> is : 1
implicit conversion is -> not : 1
conversion is not -> we : 1
that using which -> is : 1
did in combination -> with : 1
with the that -> it : 1
the that it -> in : 1
that it in -> to : 1
it in to -> allow : 1
in to allow -> implicit : 1
to allow implicit -> conversions : 1
allow implicit conversions -> for : 1
implicit conversions for -> custom : 1
conversions for custom -> types : 1
for custom types -> because : 1
custom types because -> this : 1
types because this -> is : 1
a common of -> that : 1
common of that -> are : 1
of that are -> really : 1
that are really -> hard : 1
that are really -> expensive : 1
are really hard -> to : 1
really hard to -> find : 1
hard to find -> in : 1
to find in -> our : 1
find in our -> example : 1
our example use -> the : 1
example use the -> implicit : 1
use the implicit -> constructor : 1
the implicit constructor -> is : 1
implicit constructor is -> more : 1
constructor is more -> useful : 1
is more useful -> than : 1
more useful than -> dangerous : 1
useful than dangerous -> because : 1
than dangerous because -> the : 1
dangerous because the -> class : 1
because the class -> is : 1
the class is -> used : 1
the class is -> created : 1
the class is -> that : 1
class is used -> for : 1
used for nothing -> else : 1
for nothing else -> output : 1
nothing else output -> to : 1
else output to -> files : 1
specific code provides -> a : 1
code provides a -> really : 1
provides a really -> nice : 1
a really nice -> way : 1
a really nice -> it : 1
way to print -> whatever : 1
to print whatever -> we : 1
print whatever we -> whenever : 1
whatever we whenever -> we : 1
we whenever we -> it : 1
whenever we it -> is : 1
simple to easily -> and : 1
to easily and -> globally : 1
easily and globally -> even : 1
and globally even -> if : 1
globally even if -> we : 1
globally even if -> the : 1
to print special -> such : 1
print special such -> which : 1
special such which -> we : 1
want to isolate -> from : 1
to isolate from -> normal : 1
isolate from normal -> we : 1
from normal we -> can : 1
normal we can -> just : 1
just use which -> is : 1
use which is -> the : 1
use which is -> why : 1
same as prints -> to : 1
as prints to -> the : 1
to the standard -> error : 1
the standard error -> channel : 1
standard error channel -> instead : 1
error channel instead -> of : 1
channel instead of -> the : 1
standard output might -> have : 1
output might have -> some : 1
might have some -> more : 1
have some more -> complicated : 1
some more complicated -> desires : 1
more complicated desires -> for : 1
complicated desires for -> logging : 1
desires for logging -> for : 1
for logging for -> we : 1
logging for we -> want : 1
for we want -> to : 1
output of a -> function : 1
output of a -> without : 1
of a function -> to : 1
of a function -> that : 1
a function to -> a : 1
function to a -> or : 1
to a or -> we : 1
a or we -> want : 1
or we want -> to : 1
of a without -> changing : 1
a without changing -> the : 1
without changing the -> function : 1
changing the function -> at : 1
the function at -> is : 1
function at is -> a : 1
at is a -> library : 1
is a library -> function : 1
a library function -> we : 1
library function we -> cannot : 1
function we cannot -> access : 1
we cannot access -> the : 1
we cannot access -> which : 1
cannot access the -> source : 1
access the source -> code : 1
the source code -> it : 1
the source code -> from : 1
source code it -> was : 1
code it was -> never : 1
it was never -> designed : 1
was never designed -> to : 1
never designed to -> write : 1
designed to write -> to : 1
to write to -> a : 1
write to a -> file : 1
to a file -> but : 1
a file but -> we : 1
file but we -> want : 1
but we want -> its : 1
but we want -> to : 1
we want its -> output : 1
want its output -> in : 1
its output in -> a : 1
in a is -> indeed : 1
a is indeed -> possible : 1
is indeed possible -> to : 2
indeed possible to -> redirect : 1
indeed possible to -> get : 1
indeed possible to -> create : 1
possible to redirect -> the : 1
redirect the output -> of : 1
output of stream -> in : 1
of stream in -> this : 1
in a very -> simple : 2
in a very -> operating : 1
in a very -> readable : 1
simple and elegant -> to : 1
and elegant to -> do : 1
elegant to do -> are : 1
helper class the -> problem : 1
class the problem -> of : 1
the problem of -> redirecting : 1
problem of redirecting -> a : 1
of redirecting a -> stream : 1
redirecting a stream -> and : 1
a stream and -> reverting : 1
a stream and -> want : 1
stream and reverting -> that : 1
and reverting that -> redirection : 1
reverting that redirection -> again : 1
that redirection again -> with : 1
redirection again with -> and : 1
again with and -> then : 1
with and then -> we : 1
it to only -> need : 1
to only need -> the : 1
headers for and -> file : 1
for and file -> streams : 1
and file streams -> this : 1
file streams this -> and : 1
streams this and -> we : 1
we declare namespace -> as : 1
declare namespace as -> a : 1
namespace as a -> default : 1
as a default -> namespace : 1
a default namespace -> for : 1
default namespace for -> using : 1
namespace for using -> namespace : 1
for using namespace -> implement : 1
a which holds -> a : 1
which holds a -> file : 1
holds a file -> stream : 1
a file stream -> object : 2
a file stream -> buffer : 1
file stream object -> and : 1
file stream object -> to : 1
file stream object -> from : 1
stream object and -> a : 1
object and a -> pointer : 1
object and a -> then : 2
object and a -> variant : 1
object and a -> reference : 1
and a pointer -> to : 2
pointer to a -> stream : 1
pointer to a -> converted : 1
pointer to a -> string : 1
pointer to a -> unique : 1
pointer to a -> instance : 1
pointer to a -> newly : 1
pointer to a -> member : 2
to a stream -> as : 1
a stream as -> a : 1
stream as a -> stream : 1
stream object has -> an : 2
object has an -> internal : 2
an internal stream -> which : 1
internal stream which -> we : 1
stream which we -> can : 1
can simply and -> while : 1
simply and while -> we : 1
and while we -> exchange : 1
while we exchange -> we : 1
we exchange we -> can : 1
exchange we can -> save : 1
we can save -> what : 1
we can save -> it : 1
we can save -> time : 1
can save what -> it : 1
save what it -> was : 1
was so we -> any : 1
so we any -> change : 1
we any change -> we : 1
any change we -> could : 1
change we could -> look : 1
we could look -> its : 1
could look its -> type : 1
look its type -> up : 1
its type up -> in : 1
type up in -> the : 1
the but we -> can : 1
can also use -> to : 1
also use to -> find : 1
find out what -> type : 1
out what type -> this : 1
what type this -> is : 1
type this is -> not : 1
type this is -> we : 1
is not generally -> good : 1
not generally good -> practice : 1
generally good practice -> in : 1
good practice in -> all : 1
practice in all -> but : 1
in all but -> in : 1
all but in -> this : 1
but in this -> just : 1
but in this -> we : 1
in this just -> a : 1
this just a -> pointer : 1
just a pointer -> class : 1
a pointer class -> using : 1
pointer class using -> buftype : 1
class using buftype -> ofstream : 1
using buftype ofstream -> buftype : 2
buftype ofstream buftype -> constructor : 1
buftype ofstream buftype -> explicit : 1
ofstream buftype constructor -> of : 1
buftype constructor of -> our : 1
constructor of our -> class : 1
of our class -> accepts : 1
our class accepts -> a : 1
class accepts a -> filename : 1
accepts a filename -> string : 1
a filename string -> as : 1
filename string as -> its : 1
string as its -> only : 1
its only the -> filename : 1
only the filename -> is : 1
only the filename -> without : 1
the filename is -> used : 1
filename is used -> to : 1
used to initialize -> stream : 1
to initialize stream -> after : 1
initialize stream after -> initializing : 1
stream after initializing -> we : 1
after initializing we -> can : 1
initializing we can -> feed : 1
can feed it -> into : 1
it into as -> a : 1
into as a -> new : 1
as a new -> stream : 1
a new stream -> the : 1
new stream the -> same : 1
stream the same -> function : 1
same function the -> new : 1
function the new -> buffer : 1
the new buffer -> also : 1
new buffer also -> returns : 1
buffer also returns -> a : 1
also returns a -> pointer : 1
returns a pointer -> to : 4
the old so -> we : 1
old so we -> can : 1
can save it -> in : 1
save it in -> order : 1
in order it -> explicit : 1
order it explicit -> string : 1
it explicit string -> default : 1
explicit string default -> constructor : 1
string default constructor -> does : 1
default constructor does -> the : 1
constructor does the -> same : 1
the other the -> difference : 1
other the difference -> that : 1
the difference that -> it : 1
difference that it -> does : 1
does not open -> any : 1
not open any -> feeding : 1
open any feeding -> a : 1
any feeding a -> file : 1
feeding a file -> stream : 1
file stream buffer -> into : 1
stream buffer into -> the : 1
buffer into the -> stream : 1
into the stream -> buffer : 1
the stream buffer -> leads : 1
the stream buffer -> of : 2
stream buffer leads -> to : 1
buffer leads to -> being : 1
leads to being -> kind : 1
to being kind -> of : 1
being kind of -> it : 1
kind of it -> will : 1
of it will -> just : 1
will just its -> input : 1
just its input -> we : 1
its input we -> give : 1
give it for -> this : 1
it for this -> can : 1
for this can -> also : 1
this can also -> be : 1
also be useful -> in : 1
useful in some -> destructor : 1
in some destructor -> just : 1
some destructor just -> restores : 1
destructor just restores -> our : 1
just restores our -> when : 1
restores our when -> an : 1
our when an -> object : 1
when an object -> of : 1
object of this -> class : 1
of this class -> runs : 1
this class runs -> out : 1
class runs out -> of : 1
stream buffer of -> is : 1
stream buffer of -> so : 1
buffer of is -> the : 1
is the old -> one : 1
the old one -> mock : 1
old one mock -> an : 1
one mock an -> so : 1
mock an so -> we : 1
can play with -> it : 1
play with it -> void : 1
with it void -> cout : 1
it void cout -> cout : 1
void cout cout -> function : 1
cout cout function -> does : 1
cout function does -> really : 1
function does really -> heavy : 2
does really heavy -> cout : 1
does really heavy -> work : 1
really heavy cout -> and : 1
heavy cout and -> lots : 1
cout and lots -> of : 1
and lots of -> the : 1
and lots of -> it : 1
lots of the -> main : 1
of the main -> we : 1
of the main -> function : 1
we first produce -> some : 1
first produce some -> completely : 1
produce some completely -> normal : 1
some completely normal -> int : 1
completely normal int -> cout : 1
normal int cout -> from : 1
int cout from -> normal : 1
cout from normal -> opening : 1
cout from normal -> stdout : 1
from normal opening -> another : 1
normal opening another -> and : 1
opening another and -> the : 1
another and the -> first : 1
do in this -> scope : 1
do in this -> function : 1
in this scope -> is : 1
this scope is -> instantiating : 1
scope is instantiating -> our : 1
is instantiating our -> new : 1
instantiating our new -> class : 1
our new class -> with : 1
new class with -> a : 1
class with a -> text : 1
with a text -> file : 1
text file file -> streams : 1
file file streams -> open : 1
file streams open -> files : 1
streams open files -> in : 1
open files in -> read : 1
files in read -> and : 1
in read and -> write : 1
read and write -> mode : 1
and write mode -> by : 1
write mode by -> so : 1
mode by so -> it : 1
by so it -> creates : 1
so it creates -> this : 1
it creates this -> file : 1
creates this file -> for : 1
this file for -> any : 1
file for any -> following : 1
for any following -> output : 1
any following output -> will : 1
following output will -> now : 1
output will now -> be : 1
will now be -> redirected : 1
now be redirected -> to : 1
be redirected to -> this : 1
redirected to this -> although : 1
to this although -> we : 1
this although we -> use : 1
although we use -> for : 1
use for cout -> visible : 1
for cout visible -> in : 1
cout visible in -> leaving : 1
visible in leaving -> the : 1
in leaving the -> the : 1
leaving the the -> file : 1
leaving the the -> shared : 1
leaving the the -> line : 1
the the file -> is : 1
the the file -> belongs : 1
the file is -> closed : 1
the file is -> we : 1
file is closed -> and : 1
is closed and -> the : 1
closed and the -> output : 1
output is redirected -> to : 1
is redirected to -> the : 1
redirected to the -> normal : 1
the normal standard -> output : 1
normal standard output -> now : 1
standard output now -> open : 1
output now open -> another : 1
now open another -> scope : 1
open another scope -> in : 1
open another scope -> and : 1
another scope in -> which : 1
scope in which -> we : 1
which we instantiate -> the : 1
we instantiate the -> same : 1
we instantiate the -> default : 1
instantiate the same -> but : 1
same but via -> its : 1
but via its -> default : 1
via its default -> this : 1
default this way -> the : 1
way the following -> printed : 1
the following printed -> line : 1
following printed line -> of : 1
printed line of -> text : 1
text will not -> be : 1
not be visible -> it : 1
be visible it -> will : 1
visible it will -> just : 1
will just be -> cout : 1
just be cout -> output : 1
be cout output -> will : 1
cout output will -> leaving : 1
output will leaving -> that : 1
will leaving that -> scope : 1
leaving that scope -> our : 1
that scope our -> standard : 1
scope our standard -> output : 1
our standard output -> is : 1
standard output is -> resurrected : 1
output is resurrected -> and : 1
is resurrected and -> the : 1
resurrected and the -> last : 1
the last line -> of : 1
last line of -> text : 1
of text output -> will : 1
text output will -> be : 1
will be readable -> in : 1
be readable in -> the : 1
readable in the -> shell : 1
the shell cout -> from : 1
shell cout from -> normal : 1
from normal stdout -> and : 1
from normal stdout -> readable : 1
from normal stdout -> can : 1
normal stdout and -> running : 1
stdout and running -> the : 1
yields the output -> as : 1
the output as -> we : 1
as we expected -> only : 1
we expected only -> the : 1
expected only the -> very : 1
only the very -> first : 1
the very first -> and : 1
very first and -> the : 1
and the very -> last : 1
the very last -> lines : 1
very last lines -> of : 1
last lines of -> output : 1
last lines of -> the : 1
lines of output -> are : 1
output are visible -> in : 1
are visible in -> the : 1
visible in the -> readable : 1
in the readable -> from : 1
the readable from -> normal : 1
readable from normal -> stdout : 2
normal stdout readable -> from : 1
stdout readable from -> normal : 1
normal stdout can -> see : 1
stdout can see -> that : 1
see that a -> new : 1
that a new -> has : 1
a new has -> and : 1
new has and -> contains : 1
has and contains -> the : 1
contains the output -> of : 1
first the output -> of : 1
the second scope -> vanishes : 1
second scope vanishes -> cat : 1
scope vanishes cat -> only : 1
vanishes cat only -> visible : 1
cat only visible -> in : 1
only visible in -> some : 1
visible in some -> output : 1
in some output -> this : 1
some output this -> function : 1
output this function -> does : 1
this function does -> really : 1
this function does -> not : 1
really heavy work -> and : 1
heavy work and -> lots : 1
work and lots -> of : 1
lots of it -> stream : 1
of it stream -> object : 1
it stream object -> has : 1
an internal buffer -> for : 1
internal buffer for -> which : 1
buffer for which -> it : 1
which it acts -> as : 1
it acts as -> a : 1
as a front -> such : 1
a front such -> buffers : 1
front such buffers -> are : 1
such buffers are -> if : 1
buffers are if -> we : 1
are if we -> have : 2
have a stream -> and : 1
stream and want -> to : 1
want to save -> its : 1
to save its -> buffer : 1
save its buffer -> into : 1
its buffer into -> a : 1
buffer into a -> and : 1
into a and -> install : 1
a and install -> a : 1
and install a -> new : 1
install a new -> this : 1
a new this -> looks : 1
new this looks -> like : 1
like the restoring -> it : 1
the restoring it -> can : 1
restoring it can -> be : 1
can be simply -> done : 1
be simply done -> with : 1
simply done with -> is : 1
done with is -> exactly : 1
with is exactly -> what : 1
in this another -> cool : 1
this another cool -> thing : 1
another cool thing -> is : 1
we can those -> cout : 1
can those cout -> to : 1
those cout to -> standard : 1
cout to standard -> la : 1
cout to standard -> output : 1
to standard la -> cout : 1
standard la cout -> to : 1
la cout to -> lb : 1
cout to lb -> cout : 1
to lb cout -> to : 1
lb cout to -> cout : 1
cout to cout -> to : 1
to cout to -> standard : 1
to standard output -> works : 1
standard output works -> because : 1
output works because -> objects : 1
works because objects -> are : 1
because objects are -> destructed : 1
objects are destructed -> in : 1
objects are destructed -> immediately : 1
are destructed in -> the : 1
destructed in the -> opposite : 1
in the opposite -> order : 2
in the opposite -> by : 1
in the opposite -> static : 1
the opposite order -> of : 2
opposite order of -> their : 2
order of their -> the : 2
order of their -> appearance : 1
order of their -> but : 1
of their the -> concept : 1
of their the -> next : 1
their the concept -> behind : 1
the concept behind -> this : 1
concept behind this -> pattern : 1
behind this pattern -> that : 1
this pattern that -> uses : 1
pattern that uses -> the : 1
that uses the -> tight : 1
that uses the -> hood : 1
uses the tight -> coupling : 1
the tight coupling -> between : 1
tight coupling between -> construction : 1
coupling between construction -> and : 1
between construction and -> destruction : 1
construction and destruction -> of : 1
and destruction of -> objects : 1
and destruction of -> specific : 1
destruction of objects -> is : 1
of objects is -> acquisition : 1
objects is acquisition -> is : 1
is acquisition is -> is : 1
acquisition is is -> one : 1
is is one -> really : 1
is one really -> important : 1
one really important -> thing : 1
really important thing -> that : 1
important thing that -> should : 1
thing that should -> be : 1
should be of -> the : 1
of the member -> variables : 1
of the member -> we : 1
the member variables -> of : 1
member variables of -> using : 1
member variables of -> a : 1
variables of using -> buftype : 1
of using buftype -> ofstream : 1
ofstream buftype explicit -> string : 1
buftype explicit string -> we : 1
explicit string we -> can : 1
string we can -> the : 1
can the is -> constructed : 1
the is constructed -> from : 1
constructed from an -> expression : 1
from an expression -> that : 1
an expression that -> depends : 1
expression that depends -> on : 1
that depends on -> obviously : 1
depends on obviously -> means : 1
on obviously means -> that : 1
obviously means that -> needs : 1
means that needs -> to : 1
be initialized before -> the : 1
initialized before the -> order : 1
before the order -> in : 1
in which these -> members : 1
which these members -> are : 1
these members are -> initialized : 1
members are initialized -> does : 1
are initialized does -> depend : 1
initialized does depend -> on : 1
does depend on -> the : 1
on the order -> of : 2
order of list -> the : 1
of list the -> initialization : 1
list the initialization -> order : 1
the initialization order -> only : 1
initialization order only -> depends : 1
order only depends -> on : 1
only depends on -> the : 1
depends on the -> order : 1
depends on the -> choice : 1
the one class -> member : 1
one class member -> variable : 1
class member variable -> needs : 1
member variable needs -> to : 1
variable needs to -> be : 1
be initialized after -> another : 1
initialized after another -> member : 1
after another member -> they : 1
another member they -> also : 1
member they also -> appear : 1
they also appear -> in : 1
also appear in -> that : 1
appear in that -> order : 1
that order in -> the : 1
order in the -> class : 1
in the class -> member : 1
the class member -> the : 1
class member the -> order : 1
member the order -> of : 1
of their appearance -> in : 1
their appearance in -> the : 1
appearance in the -> initializer : 1
in the initializer -> list : 1
the initializer list -> of : 1
of the constructor -> is : 1
constructor is not -> custom : 1
is not custom -> string : 1
not custom string -> classes : 1
inheriting from is -> extremely : 1
from is extremely -> soon : 1
is extremely soon -> as : 1
extremely soon as -> people : 1
soon as people -> need : 1
as people need -> a : 1
people need a -> string : 1
need a string -> class : 1
string class with -> slightly : 1
class with slightly -> different : 1
slightly different semantics -> for : 1
different semantics for -> string : 1
semantics for string -> some : 1
for string some -> tend : 1
string some tend -> to : 1
some tend to -> write : 1
tend to write -> their : 1
to write their -> string : 1
write their string -> your : 1
their string your -> own : 1
string your own -> string : 1
your own string -> class : 1
own string class -> is : 1
string class is -> rarely : 1
string class is -> for : 1
class is rarely -> a : 1
is rarely a -> good : 1
rarely a good -> safe : 1
a good safe -> is : 1
good safe is -> is : 1
safe is is -> only : 1
is is only -> a : 1
is only a -> specializing : 1
only a specializing -> typedef : 1
a specializing typedef -> of : 1
specializing typedef of -> the : 1
typedef of the -> template : 1
the template this -> class : 1
template this class -> contains : 1
this class contains -> all : 1
class contains all -> the : 1
all the complicated -> memory : 1
the complicated memory -> handling : 1
complicated memory handling -> but : 1
memory handling but -> it : 1
handling but it -> does : 1
does not impose -> any : 1
not impose any -> policy : 1
not impose any -> which : 1
impose any policy -> on : 1
any policy on -> how : 1
policy on how -> strings : 1
on how strings -> are : 1
how strings are -> and : 1
strings are and -> so : 1
are and so -> this : 1
this is something -> imported : 1
this is something -> we : 1
is something imported -> into : 1
something imported into -> by : 1
imported into by -> accepting : 1
into by accepting -> a : 1
by accepting a -> template : 1
accepting a template -> parameter : 1
template parameter that -> contains : 1
parameter that contains -> a : 1
that contains a -> traits : 1
that contains a -> filesystem : 1
contains a traits -> this : 1
a traits this -> we : 1
traits this we -> will : 1
how to build -> our : 1
our own trait -> classes : 1
own trait classes -> this : 1
trait classes this -> how : 1
classes this how -> custom : 1
this how custom -> strings : 1
how custom strings -> without : 1
custom strings without -> reimplementing : 1
strings without reimplementing -> to : 1
without reimplementing to -> do : 1
reimplementing to do -> are : 1
to implement two -> different : 1
implement two different -> custom : 1
two different custom -> string : 1
different custom string -> and : 1
custom string and -> the : 1
string and the -> first : 1
string and the -> difference : 1
the first class -> constructs : 1
the first class -> is : 1
first class constructs -> lower : 1
class constructs lower -> case : 1
constructs lower case -> strings : 1
lower case strings -> from : 1
lower case strings -> should : 1
case strings from -> any : 1
strings from any -> string : 1
from any string -> the : 1
any string the -> other : 1
string the other -> class : 1
the other class -> does : 1
other class does -> not : 1
class does not -> transform : 1
does not transform -> any : 1
not transform any -> but : 1
transform any but -> it : 1
any but it -> can : 1
it can do -> string : 1
it can do -> this : 1
can do string -> include : 1
do string include -> the : 1
string include the -> few : 1
include the few -> necessary : 1
the few necessary -> headers : 1
few necessary headers -> first : 1
and then declare -> that : 2
namespace we reimplement -> which : 1
we reimplement which -> is : 1
reimplement which is -> already : 1
which is already -> defined : 1
is already defined -> in : 1
already defined in -> the : 1
in the already -> existing : 1
the already existing -> function : 1
already existing function -> is : 1
existing function is -> but : 1
function is but -> it : 1
is not some -> functions : 1
not some functions -> are : 1
some functions are -> and : 1
functions are and -> we : 1
able to make -> use : 1
to make use -> of : 1
make use of -> that : 1
use of that -> with : 1
of that with -> our : 1
that with our -> own : 1
own custom string -> trait : 1
custom string trait -> the : 1
string trait the -> function : 1
trait the function -> maps : 1
the function maps -> characters : 1
function maps characters -> to : 1
characters to lower -> leaves : 1
to lower leaves -> other : 1
lower leaves other -> characters : 1
other characters static -> constexpr : 1
characters static constexpr -> char : 1
characters static constexpr -> bool : 1
static constexpr char -> switch : 1
constexpr char switch -> case : 1
char switch case -> return : 1
switch case return -> c : 1
case return c -> return : 1
c return class -> accepts : 1
return class accepts -> the : 1
class accepts the -> underlying : 1
accepts the underlying -> character : 1
the underlying character -> a : 1
underlying character a -> character : 1
character a character -> traits : 1
a character traits -> and : 1
character traits and -> an : 1
traits and an -> allocator : 1
and an allocator -> we : 1
an allocator we -> are : 1
allocator we are -> only : 1
are only changing -> the : 1
only changing the -> character : 1
changing the character -> traits : 1
the character traits -> class : 1
character traits class -> in : 1
character traits class -> and : 1
traits class in -> this : 1
class in this -> it : 1
class in this -> like : 1
this it defines -> the : 1
defines the behavior -> of : 1
behavior of in -> order : 1
order to reimplement -> only : 1
to reimplement only -> what : 1
reimplement only what -> should : 1
only what should -> differ : 1
what should differ -> from : 1
should differ from -> the : 1
differ from the -> ordinary : 1
from the ordinary -> we : 1
the ordinary we -> are : 1
ordinary we are -> publicly : 1
we are publicly -> inheriting : 1
are publicly inheriting -> from : 1
publicly inheriting from -> the : 1
inheriting from the -> standard : 1
the standard traits -> class : 1
standard traits class -> public : 1
traits class public -> class : 1
class public class -> accepts : 1
public class accepts -> input : 1
class accepts input -> transforms : 1
accepts input transforms -> them : 1
input transforms them -> to : 1
them to lower -> there : 1
to lower there -> is : 1
lower there is -> one : 1
there is one -> which : 1
there is one -> weight : 1
there is one -> special : 1
there is one -> thread : 1
there is one -> source : 1
is one which -> does : 1
one which does -> this : 1
which does this -> so : 1
does this so -> we : 1
this so we -> can : 1
can put our -> function : 1
put our function -> this : 1
our function this -> function : 1
function this function -> is : 1
function is which -> is : 1
why we reimplemented -> ourselves : 1
we reimplemented ourselves -> a : 1
reimplemented ourselves a -> static : 1
ourselves a static -> constexpr : 1
a static constexpr -> void : 1
static constexpr void -> const : 1
constexpr void const -> a : 1
void const a -> r : 1
const a r -> other : 1
a r other -> function : 1
r other function -> handles : 1
other function handles -> the : 1
function handles the -> copying : 1
handles the copying -> of : 1
copying of an -> into : 1
of an into -> its : 1
an into its -> own : 1
into its own -> we : 1
its own we -> use : 1
own we use -> an : 1
we use an -> call : 1
use an call -> to : 1
an call to -> copy : 1
call to copy -> all : 1
to copy all -> the : 1
the source string -> to : 1
source string to -> the : 1
string to the -> internal : 1
to the internal -> destination : 1
to the internal -> if : 1
the internal destination -> string : 1
internal destination string -> at : 1
destination string at -> the : 1
string at the -> same : 1
the same map -> every : 1
same map every -> character : 1
map every character -> to : 1
every character to -> its : 1
character to its -> static : 1
to its static -> const : 1
its static const -> src : 1
static const src -> return : 1
const src return -> helps : 1
src return helps -> build : 1
return helps build -> a : 1
helps build a -> string : 1
build a string -> class : 1
string class transforms -> strings : 1
class transforms strings -> to : 1
transforms strings to -> lower : 1
strings to lower -> we : 1
to lower we -> are : 1
lower we are -> going : 1
to write another -> trait : 1
write another trait -> the : 1
another trait the -> actual : 1
trait the actual -> string : 1
actual string payload -> untouched : 1
string payload untouched -> but : 1
payload untouched but -> which : 1
untouched but which -> is : 1
but which is -> case : 1
which is case -> insensitive : 1
is case insensitive -> when : 1
case insensitive when -> it : 1
insensitive when it -> comes : 1
when it comes -> to : 1
it comes to -> comparing : 1
comes to comparing -> we : 1
to comparing we -> inherit : 1
comparing we inherit -> from : 1
we inherit from -> the : 1
from the existing -> standard : 1
the existing standard -> character : 1
the existing standard -> algorithm : 1
existing standard character -> traits : 1
standard character traits -> class : 1
traits class and -> this : 1
class and this -> we : 1
this we redefine -> some : 1
we redefine some -> other : 1
redefine some other -> member : 1
some other member -> class : 1
other member class -> public : 1
member class public -> function : 1
class public function -> tells : 1
public function tells -> characters : 1
function tells characters -> are : 1
tells characters are -> we : 1
characters are we -> do : 1
are we do -> this : 1
this but we -> compare : 1
but we compare -> their : 1
we compare their -> this : 1
compare their this -> way : 1
this way equals -> static : 1
way equals static -> constexpr : 1
equals static constexpr -> bool : 1
static constexpr bool -> return : 2
constexpr bool return -> function : 1
constexpr bool return -> last : 1
bool return function -> tells : 1
return function tells -> value : 1
function tells value -> is : 1
tells value is -> less : 1
value is less -> than : 1
is less than -> the : 1
less than the -> value : 1
value of we -> apply : 1
of we apply -> the : 1
apply the correct -> logical : 1
the correct logical -> operator : 1
correct logical operator -> for : 1
logical operator for -> just : 1
operator for just -> after : 1
for just after -> both : 1
just after both -> the : 1
after both the -> characters : 1
both the characters -> static : 1
both the characters -> at : 1
the characters static -> constexpr : 1
bool return last -> worked : 1
return last worked -> on : 1
last worked on -> input : 1
worked on input -> and : 1
on input and -> the : 1
input and the -> next : 1
next two functions -> work : 1
two functions work -> on : 1
functions work on -> the : 1
on the function -> works : 1
the function works -> similar : 1
function works similar -> to : 1
works similar to -> the : 1
it returns if -> both : 1
returns if both -> the : 1
both the strings -> are : 1
strings are equal -> within : 1
are equal within -> the : 1
equal within the -> length : 1
within the length -> if : 1
the length if -> they : 1
length if they -> it : 1
if they it -> returns : 1
they it returns -> a : 1
returns a negative -> or : 1
a negative or -> positive : 1
negative or positive -> which : 1
or positive which -> tells : 1
positive which tells -> which : 1
which tells which -> input : 1
tells which input -> string : 1
which input string -> is : 1
input string is -> lexicographically : 1
string is lexicographically -> calculating : 1
is lexicographically calculating -> the : 1
lexicographically calculating the -> difference : 1
calculating the difference -> between : 1
difference between both -> the : 1
difference between both -> time : 1
the characters at -> every : 1
characters at every -> position : 1
at every position -> of : 1
position of be -> done : 1
of be done -> on : 1
be done on -> their : 1
done on their -> the : 1
on their the -> nice : 1
their the nice -> thing : 1
that this whole -> loop : 1
this whole loop -> code : 1
whole loop code -> part : 1
loop code part -> of : 1
code part of -> since : 1
part of since -> static : 1
of since static -> constexpr : 1
since static constexpr -> int : 1
static constexpr int -> const : 1
constexpr int const -> for : 1
int const for -> const : 1
const for const -> diff : 1
for const diff -> if : 1
const diff if -> return : 1
diff if return -> else : 1
return else if -> return : 8
else if return -> return : 2
else if return -> else : 6
return return last -> function : 1
return return last -> step : 1
return return last -> helper : 1
return last function -> we : 1
last function we -> need : 1
function we need -> to : 2
to implement for -> our : 1
implement for our -> string : 1
for our string -> class : 1
our string class -> is : 1
class is for -> a : 1
is for a -> given : 1
a given input -> and : 1
given input and -> it : 1
input and it -> finds : 1
and it finds -> the : 1
finds the position -> of : 1
position of a -> it : 1
of a it -> returns : 1
of a it -> will : 1
a it returns -> a : 1
occurrence of that -> or : 1
of that or -> it : 1
that or it -> if : 1
or it if -> there : 1
it if there -> is : 1
is the comparison -> in : 1
the comparison in -> this : 1
comparison in this -> function : 1
in this function -> has : 1
in this function -> is : 1
this function has -> to : 1
function has to -> be : 1
to be done -> using : 1
to be done -> one : 1
be done using -> the : 1
done using the -> in : 1
using the in -> order : 1
make the search -> we : 1
the search we -> cannot : 1
search we cannot -> use : 1
we cannot use -> because : 1
cannot use because -> it : 1
is not and -> must : 1
not and must -> write : 1
and must write -> a : 1
must write a -> loop : 1
write a loop -> static : 1
a loop static -> constexpr : 1
loop static constexpr -> const : 1
static constexpr const -> const : 1
constexpr const const -> const : 1
const const const -> for : 1
const const for -> count : 1
const for count -> if : 1
for count if -> return : 1
count if return -> return : 1
return return it -> for : 1
return it for -> the : 1
for the since -> we : 1
the since we -> have : 1
we have them -> in : 1
have them in -> place : 1
them in place -> we : 1
in place we -> can : 1
place we can -> define : 1
we can define -> string : 1
we can define -> our : 1
we can define -> which : 1
can define string -> class : 1
define string class -> means : 1
string class means -> means : 1
class means means -> both : 1
means means both -> the : 1
means both the -> classes : 1
both the classes -> only : 1
the classes only -> differ : 1
classes only differ -> from : 1
only differ from -> by : 1
differ from by -> their : 1
from by their -> character : 1
by their character -> traits : 1
their character traits -> using : 1
character traits using -> using : 1
traits using using -> order : 1
using using order -> to : 1
using order to -> make : 1
make the output -> streams : 1
the output streams -> new : 1
output streams new -> classes : 1
streams new classes -> for : 1
new classes for -> we : 1
classes for we -> quickly : 1
for we quickly -> need : 1
we quickly need -> to : 1
quickly need to -> overload : 1
stream const return -> const : 1
the actual a -> normal : 1
the actual a -> simple : 1
actual a normal -> a : 1
a normal a -> and : 1
normal a and -> a : 1
a and print -> them : 1
print them they -> should : 1
them they should -> all : 1
they should all -> look : 1
should all look -> normal : 1
all look normal -> on : 1
look normal on -> the : 1
normal on the -> but : 1
on the but -> the : 1
on the but -> then : 1
but the lower -> case : 1
the lower case -> strings : 1
case strings should -> be : 1
strings should be -> all : 1
should be all -> int : 1
be all int -> cout : 1
all int cout -> bar : 1
int cout bar -> bar : 1
cout bar bar -> bar : 1
bar bar bar -> order : 1
bar bar order -> to : 1
bar order to -> test : 1
order to test -> the : 1
order to test -> we : 1
to test the -> we : 1
test the we -> can : 1
we can instantiate -> two : 1
we can instantiate -> objects : 1
can instantiate two -> strings : 1
instantiate two strings -> basically : 1
two strings basically -> equal : 1
strings basically equal -> but : 1
basically equal but -> differ : 1
equal but differ -> in : 1
but differ in -> the : 1
differ in the -> casing : 1
in the casing -> of : 1
casing of some -> when : 1
of some when -> doing : 1
some when doing -> a : 1
when doing a -> really : 1
doing a really -> they : 1
a really they -> should : 1
really they should -> appear : 1
they should appear -> equal : 1
they should appear -> cout : 1
should appear equal -> password : 1
appear equal password -> compare : 1
equal password compare -> them : 1
password compare them -> and : 1
compare them and -> print : 1
them and print -> that : 1
them and print -> this : 1
and print that -> they : 1
print that they -> they : 1
that they they -> if : 1
they they if -> cout : 1
they if cout -> password : 1
if cout password -> and : 1
cout password and -> running : 1
password and running -> the : 1
us the expected -> when : 1
the expected when -> we : 1
expected when we -> first : 1
when we first -> printed : 1
we first printed -> the : 1
first printed the -> same : 1
printed the same -> string : 1
same string three -> times : 1
string three times -> in : 1
three times in -> different : 1
times in different -> we : 1
in different we -> got : 1
different we got -> unchanged : 1
we got unchanged -> but : 1
got unchanged but -> the : 1
unchanged but the -> instance : 1
but the instance -> is : 1
the instance is -> all : 1
the instance is -> destroyed : 1
the instance is -> not : 1
instance is all -> lower : 1
is all lower -> the : 1
all lower the -> comparison : 1
lower the comparison -> of : 1
comparison of the -> two : 1
the two strings -> differ : 1
two strings differ -> in : 1
strings differ in -> their : 1
in their character -> casing : 1
their character casing -> was : 1
character casing was -> indeed : 1
casing was indeed -> successful : 1
was indeed successful -> and : 1
indeed successful and -> yields : 1
successful and yields -> us : 1
and yields us -> the : 1
us the right -> foo : 1
the right foo -> bar : 1
right foo bar -> baz : 1
foo bar baz -> foo : 2
foo bar baz -> passwords : 1
bar baz foo -> bar : 2
baz foo bar -> baz : 2
bar baz passwords -> it : 1
baz passwords it -> the : 1
passwords it the -> and : 1
it the and -> function : 1
the and function -> reimplementing : 1
and function reimplementing -> we : 1
function reimplementing we -> did : 1
reimplementing we did -> will : 1
we did will -> surely : 1
did will surely -> look : 1
will surely look -> a : 1
surely look a -> bit : 1
a bit crazy -> for : 1
bit crazy for -> where : 1
crazy for where -> did : 1
for where did -> all : 1
where did all -> the : 1
did all the -> function : 1
did all the -> printing : 1
the function signatures -> come : 1
function signatures come -> of : 1
signatures come of -> which : 1
come of which -> we : 1
which we knew -> that : 1
knew that we -> need : 1
that we need -> to : 4
that we need -> a : 2
need to first -> have : 1
to first have -> a : 2
a look comes -> class : 1
look comes class -> class : 1
comes class class -> traits : 1
class class traits -> class : 1
class traits class -> allocator : 1
traits class allocator -> class : 1
allocator class is -> really : 1
is really an -> that : 1
really an that -> expands : 1
an that expands -> to : 1
that expands to -> that : 1
expands to that -> is : 1
to that is -> a : 1
is a long -> type : 1
a long type -> but : 1
long type but -> what : 1
type but what -> does : 1
does it the -> point : 1
it the point -> of : 1
point of all -> of : 1
of all of -> this : 1
all of this -> is : 1
this is that -> it : 1
this is that -> when : 1
this is that -> the : 1
possible to string -> not : 1
to string not -> only : 1
string not only -> on : 1
only on also -> on : 1
on also on -> this : 1
also on this -> enables : 1
on this enables -> for : 1
this enables for -> string : 1
enables for string -> which : 1
for string which -> can : 1
string which can -> handle : 1
can handle more -> than : 1
handle more than -> the : 1
more than the -> typical : 1
than the typical -> american : 1
the typical american -> ascii : 1
typical american ascii -> character : 1
american ascii character -> this : 1
ascii character this -> is : 1
character this is -> not : 1
is not something -> we : 1
not something we -> will : 1
something we will -> have : 1
look into contains -> algorithms : 1
into contains algorithms -> needs : 1
contains algorithms needs -> for : 1
algorithms needs for -> its : 1
for its knows -> how : 1
its knows how -> to : 1
how to and -> copy : 1
to and copy -> characters : 1
and copy characters -> and : 1
copy characters and -> is : 1
characters and is -> also : 1
and is also -> a : 1
also a traits -> but : 1
a traits but -> its : 1
traits but its -> special : 1
but its special -> job : 1
its special job -> is : 1
special job is -> handling : 1
job is handling -> string : 1
is handling string -> allocation : 1
handling string allocation -> and : 1
string allocation and -> this : 1
allocation and this -> is : 1
is not important -> for : 1
is not important -> that : 1
not important for -> us : 1
important for us -> at : 1
for us at -> this : 1
at this time -> as : 1
this time as -> the : 1
time as the -> default : 1
as the default -> behavior : 1
the default behavior -> satisfies : 1
default behavior satisfies -> our : 1
behavior satisfies our -> we : 1
satisfies our we -> want : 1
want a string -> class : 1
string class to -> behave : 1
class to behave -> we : 1
to behave we -> can : 1
behave we can -> try : 1
we can try -> to : 3
can try to -> reuse : 1
can try to -> compare : 1
can try to -> get : 1
try to reuse -> as : 1
to reuse as -> much : 1
reuse as much -> as : 1
much as possible -> from : 1
as possible from -> what : 1
possible from what -> and : 1
from what and -> already : 1
what and already -> and : 1
and already and -> this : 1
already and this -> is : 1
we we implemented -> two : 1
we implemented two -> subclasses : 1
implemented two subclasses -> called : 1
two subclasses called -> and : 1
subclasses called and -> and : 1
called and and -> configured : 1
and and configured -> two : 1
and configured two -> completely : 1
configured two completely -> new : 1
two completely new -> string : 1
completely new string -> them : 1
new string them -> by : 1
string them by -> using : 1
them by using -> them : 1
by using them -> as : 1
using them as -> substitutes : 1
them as substitutes -> for : 1
as substitutes for -> the : 1
substitutes for the -> standard : 1
for the standard -> order : 1
the standard order -> to : 1
standard order to -> explore : 1
order to explore -> what : 1
to explore what -> other : 1
explore what other -> possibilities : 1
what other possibilities -> there : 1
other possibilities there -> are : 1
possibilities there are -> to : 1
are to adapt -> to : 1
adapt to your -> own : 1
to your own -> look : 1
your own look -> up : 1
own look up -> the : 1
up the stl -> documentation : 1
documentation for and -> see : 1
for and see -> what : 1
see what other -> functions : 1
what other functions -> it : 1
other functions it -> has : 1
functions it has -> that : 1
it has that -> can : 1
has that can -> be : 1
can be input -> with : 1
be input with -> the : 1
regular expression parsing -> or : 1
expression parsing or -> transforming : 1
parsing or transforming -> strings : 1
or transforming strings -> in : 1
transforming strings in -> complex : 1
strings in complex -> ways : 1
in complex ways -> or : 1
complex ways or -> breaking : 1
ways or breaking -> them : 1
or breaking them -> into : 1
breaking them into -> are : 1
them into are -> a : 1
into are a -> great : 1
a great in -> many : 1
great in many -> programming : 1
in many programming -> they : 1
many programming they -> are : 1
programming they are -> already : 1
they are already -> built : 1
are already built -> in : 1
are already built -> into : 1
already built in -> because : 1
built in because -> they : 1
in because they -> are : 1
they are so -> useful : 1
they are so -> we : 1
are so useful -> and : 1
so useful and -> you : 1
useful and you -> do : 1
and you do -> not : 1
you do not -> know : 1
not know regular -> expressions : 1
know regular expressions -> have : 1
regular expressions have -> a : 1
expressions have a -> look : 1
look at about -> for : 1
at about for -> they : 1
about for they -> will : 1
for they will -> surely : 1
they will surely -> extend : 1
will surely extend -> your : 1
surely extend your -> as : 1
extend your as -> it : 1
your as it -> is : 1
easy to see -> how : 1
easy to see -> what : 1
see how useful -> they : 1
useful they parsing -> any : 1
they parsing any -> kind : 1
parsing any kind -> of : 1
kind of regular -> expressions : 1
of regular expressions -> for : 1
regular expressions for -> test : 1
expressions for test -> address : 1
for test address -> string : 1
test address string -> or : 1
address string or -> an : 1
string or an -> ip : 1
string or an -> because : 1
or an ip -> is : 1
an ip is -> find : 1
ip is find -> and : 1
is find and -> extract : 1
find and extract -> substrings : 1
and extract substrings -> out : 1
extract substrings out -> of : 1
substrings out of -> large : 1
out of large -> which : 1
of large which -> follow : 1
large which follow -> a : 1
which follow a -> complex : 1
follow a complex -> and : 1
a complex and -> so : 1
complex and so -> this : 1
so this we -> will : 1
so this we -> can : 1
we will extract -> all : 1
will extract all -> the : 1
extract all the -> links : 1
all the links -> out : 1
all the links -> in : 1
the links out -> of : 1
links out of -> an : 1
out of an -> html : 1
of an html -> file : 1
an html file -> and : 1
an html file -> in : 1
html file and -> list : 1
file and list -> them : 1
and list them -> for : 1
list them for -> the : 1
them for the -> the : 1
the the code -> will : 1
code will be -> amazingly : 1
will be amazingly -> we : 1
be amazingly we -> have : 1
amazingly we have -> regular : 1
we have regular -> expression : 1
have regular expression -> support : 1
regular expression support -> built : 1
expression support built -> in : 1
support built in -> the : 1
built in the -> stl : 1
the stl since -> to : 1
stl since to -> do : 1
since to do -> are : 1
define a regular -> expression : 2
a regular expression -> that : 1
a regular expression -> how : 1
a regular expression -> object : 2
a regular expression -> in : 1
regular expression that -> detects : 1
expression that detects -> and : 1
that detects and -> we : 1
detects and we -> apply : 1
and we apply -> it : 1
we apply it -> to : 2
to an html -> file : 1
html file in -> order : 1
file in order -> to : 1
order to pretty -> print : 1
to pretty print -> all : 1
pretty print all -> the : 1
the links in -> that : 1
links in that -> first : 1
in that first -> include : 1
that first include -> all : 1
the necessary and -> declare : 1
necessary and declare -> that : 1
namespace will later -> generate : 1
will later generate -> an : 1
later generate an -> iterable : 1
generate an iterable -> which : 1
an iterable which -> consists : 1
iterable which consists -> of : 1
consists of these -> strings : 1
of these strings -> always : 1
these strings always -> occur : 1
strings always occur -> in : 1
always occur in -> pairs : 1
occur in pairs -> of : 1
in pairs of -> a : 1
pairs of a -> link : 1
of a link -> and : 1
a link and -> a : 1
link and a -> link : 1
and a link -> write : 1
a link write -> a : 1
link write a -> little : 1
little helper which -> pretty : 1
little helper which -> helps : 1
helper which pretty -> prints : 1
which pretty prints -> template : 1
pretty prints template -> void : 1
prints template void -> inputit : 1
template void inputit -> while : 1
void inputit while -> each : 1
inputit while each -> loop : 1
while each loop -> we : 1
each loop we -> increment : 1
loop we increment -> the : 1
increment the iterator -> twice : 1
the iterator twice -> and : 1
iterator twice and -> take : 1
twice and take -> copies : 1
and take copies -> of : 1
take copies of -> the : 1
copies of the -> link : 1
of the link -> and : 1
of the link -> we : 1
the link and -> the : 1
link and the -> link : 1
and the link -> description : 1
the link description -> they : 1
link description they -> between : 1
description they between -> the : 1
they between the -> two : 1
between the two -> iterator : 1
the two iterator -> we : 1
two iterator we -> add : 1
iterator we add -> another : 1
we add another -> guarding : 1
add another guarding -> prematurely : 1
another guarding prematurely -> reached : 1
guarding prematurely reached -> the : 1
prematurely reached the -> end : 1
reached the end -> of : 1
of the iterable -> just : 1
the iterable just -> for : 1
iterable just for -> const : 1
just for const -> string : 1
for const string -> link : 1
const string link -> if : 1
string link if -> const : 1
link if const -> string : 1
if const string -> desc : 1
const string desc -> print : 1
string desc print -> the : 1
desc print the -> link : 1
print the link -> with : 1
the link with -> its : 1
link with its -> description : 1
with its description -> in : 1
its description in -> a : 1
description in a -> nicely : 1
description in a -> specific : 1
a nicely prettified -> form : 1
nicely prettified form -> and : 1
prettified form and -> cout : 1
form and cout -> left : 1
and cout left -> desc : 1
left desc link -> the : 1
desc link the -> main : 1
link the main -> we : 1
main we are -> reading : 1
main we are -> going : 1
we are reading -> in : 1
are reading in -> everything : 1
reading in everything -> from : 1
in everything from -> standard : 1
everything from standard -> to : 1
from standard to -> do : 1
standard to do -> we : 1
do we are -> constructing : 1
we are constructing -> a : 1
are constructing a -> string : 1
constructing a string -> from : 1
from the whole -> standard : 1
whole standard input -> via : 1
whole standard input -> into : 1
standard input via -> an : 1
input via an -> input : 1
via an input -> stream : 1
stream in order -> to : 1
to prevent because -> we : 1
prevent because we -> want : 1
want the whole -> user : 1
the whole user -> input : 1
whole user input -> we : 1
user input we -> use : 1
input we use -> this : 1
input we use -> on : 1
use this modifier -> deactivates : 1
this modifier deactivates -> whitespace : 1
modifier deactivates whitespace -> skipping : 1
deactivates whitespace skipping -> and : 1
whitespace skipping and -> int : 1
skipping and int -> cin : 1
and int cin -> const : 1
int cin const -> in : 1
cin const in -> we : 1
const in we -> need : 1
regular expression how -> we : 1
expression how we -> assume : 1
how we assume -> an : 1
we assume an -> html : 1
assume an html -> link : 1
an html link -> to : 1
html link to -> the : 1
to the within -> the : 1
the within the -> regular : 1
within the regular -> expression : 1
regular expression define -> these : 1
regular expression define -> such : 1
expression define these -> are : 1
define these are -> the : 1
are the parts -> of : 1
parts of the -> link : 1
parts of the -> stl : 1
the link we -> want : 1
link we want -> to : 1
want to url -> it : 1
to url it -> links : 1
url it links -> and : 1
it links and -> its : 1
links and its -> const : 1
and its const -> regex : 1
its const regex -> has : 1
const regex has -> the : 1
regex has the -> same : 1
the same look -> and : 1
same look and -> feel : 1
look and feel -> as : 1
and feel as -> we : 1
feel as we -> give : 1
as we give -> it : 1
give it the -> whole : 1
whole string as -> iterable : 1
string as iterable -> input : 1
as iterable input -> range : 1
iterable input range -> and : 1
and the regular -> expression : 1
regular expression we -> just : 1
regular expression we -> used : 1
regular expression we -> implemented : 1
expression we just -> there : 1
we just there -> is : 1
just there is -> also : 1
also a third -> which : 1
third which is -> an : 1
is an initializer -> list : 1
an initializer list -> of : 2
an initializer list -> that : 1
an initializer list -> be : 1
list of integer -> it : 1
of integer it -> defines : 1
integer it defines -> that : 1
it defines that -> we : 1
defines that we -> want : 1
over the groups -> and : 1
the groups and -> from : 1
groups and from -> the : 1
from the expressions -> it : 1
the expressions it -> it : 1
expressions it it -> we : 1
it it we -> have : 1
have an iterator -> emit : 1
an iterator emit -> the : 1
iterator emit the -> links : 1
emit the links -> and : 1
the links and -> link : 1
links and link -> descriptions : 1
and link descriptions -> if : 1
link descriptions if -> it : 1
descriptions if it -> finds : 1
if it finds -> we : 1
if it finds -> such : 1
it finds we -> provide : 1
finds we provide -> it : 1
provide it together -> with : 1
with a default -> constructed : 1
a default constructed -> iterator : 1
a default constructed -> which : 1
default constructed iterator -> of : 1
constructed iterator of -> the : 1
same type to -> the : 1
function we implemented -> and : 1
we implemented and -> running : 1
implemented and running -> the : 1
gives us the -> following : 2
gives us the -> fraction : 1
gives us the -> same : 1
the following i -> ran : 1
the following i -> launched : 2
the following i -> have : 1
the following i -> gave : 1
following i ran -> program : 1
i ran program -> on : 1
ran program on -> the : 1
program on the -> iso : 1
on the iso -> which : 1
the iso which -> simply : 1
iso which simply -> downloads : 1
which simply downloads -> an : 1
simply downloads an -> html : 1
downloads an html -> page : 1
an html page -> from : 1
html page from -> the : 1
page from the -> of : 1
from the of -> it : 1
the of it -> would : 1
of it would -> also : 1
would also be -> possible : 1
also be possible -> to : 1
write the regular -> expression : 1
expression we used -> is : 1
we used is -> pretty : 1
used is pretty -> much : 1
pretty much hardcoded -> to : 1
much hardcoded to -> a : 1
hardcoded to a -> fixed : 1
to a fixed -> assumption : 1
a fixed assumption -> of : 1
fixed assumption of -> how : 1
assumption of how -> links : 1
of how links -> look : 1
how links look -> in : 1
links look in -> the : 1
in the html -> it : 1
the html it -> may : 1
html it may -> be : 1
it may be -> exercised : 1
may be exercised -> by : 1
be exercised by -> make : 1
exercised by make -> it : 1
by make it -> more : 1
make it more -> curl : 1
it more curl -> sign : 1
more curl sign -> in : 1
curl sign in -> suggest : 1
sign in suggest -> an : 1
in suggest an -> article : 1
suggest an article -> register : 1
an article register -> get : 1
article register get -> tour : 1
register get tour -> blog : 1
get tour blog -> forums : 1
tour blog forums -> current : 1
blog forums current -> iso : 1
forums current iso -> status : 1
current iso status -> many : 1
iso status many -> it : 1
status many it -> expressions : 1
many it expressions -> in : 1
it expressions in -> are : 1
expressions in are -> extremely : 1
in are extremely -> they : 1
are extremely they -> can : 1
extremely they can -> look : 1
they can look -> really : 1
can look really -> but : 1
look really but -> it : 1
really but it -> is : 1
it is worth -> learning : 1
is worth learning -> how : 1
worth learning how -> they : 1
learning how they -> a : 1
how they a -> short : 1
they a short -> regex : 1
a short regex -> can : 1
short regex can -> spare : 1
regex can spare -> us : 1
can spare us -> writing : 1
spare us writing -> many : 1
us writing many -> lines : 1
writing many lines -> of : 1
many lines of -> code : 1
lines of code -> if : 1
lines of code -> of : 1
of code if -> we : 1
code if we -> did : 1
did the matching -> this : 1
the matching this -> we : 1
matching this we -> first : 1
we first instantiated -> an : 1
first instantiated an -> object : 1
instantiated an object -> of : 1
object of type -> we : 1
object of type -> the : 1
object of type -> although : 1
of type we -> fed : 1
of type we -> can : 1
of type we -> define : 1
type we fed -> its : 1
we fed its -> constructor : 1
fed its constructor -> with : 1
its constructor with -> a : 1
constructor with a -> string : 1
string that describes -> a : 1
that describes a -> regular : 1
describes a regular -> a : 1
a regular a -> very : 1
regular a very -> simple : 1
very simple regular -> expression : 1
simple regular expression -> is : 1
regular expression is -> which : 1
expression is which -> matches : 1
is which matches -> character : 1
which matches character -> because : 1
matches character because -> a : 1
character because a -> dot : 1
because a dot -> is : 1
a dot is -> the : 1
dot is the -> regex : 1
is the regex -> we : 1
the regex we -> write : 1
regex we write -> then : 1
we write then -> this : 2
write then this -> matches : 1
write then this -> means : 1
then this matches -> only : 1
this matches only -> on : 1
matches only on -> if : 1
only on if -> we : 1
on if we -> write : 1
then this means -> and : 1
then this means -> that : 1
this means and -> zero : 1
means and zero -> or : 1
and zero or -> arbitrarily : 1
zero or arbitrarily -> many : 1
or arbitrarily many -> and : 2
or arbitrarily many -> string : 1
arbitrarily many and -> so : 1
arbitrarily many and -> then : 1
many and so -> regular : 1
and so regular -> expressions : 1
so regular expressions -> are : 1
regular expressions are -> another : 1
expressions are another -> large : 1
are another large -> and : 1
another large and -> there : 1
large and there -> are : 1
and there are -> great : 1
and there are -> ones : 1
there are great -> explanations : 1
are great explanations -> on : 1
great explanations on -> wikipedia : 1
explanations on wikipedia -> and : 1
on wikipedia and -> other : 1
wikipedia and other -> websites : 1
and other websites -> or : 1
other websites or -> have : 1
websites or have -> another : 1
or have another -> look : 1
look at our -> regular : 1
at our regular -> expression : 1
our regular expression -> what : 1
regular expression what -> we : 1
expression what we -> assume : 1
what we assume -> to : 1
assume to be -> html : 1
to be html -> a : 1
be html a -> simple : 1
html a simple -> html : 1
a simple html -> link : 1
simple html link -> can : 1
html link can -> look : 1
link can look -> like : 1
look like great -> we : 1
like great we -> want : 1
great we want -> the : 1
want the as -> well : 1
well as great -> so : 1
as great so -> we : 1
great so we -> came : 1
so we came -> up : 1
we came up -> with : 1
came up with -> the : 1
the following regular -> which : 1
following regular which -> contains : 1
regular which contains -> for : 1
which contains for -> matching : 1
contains for matching -> whole : 1
for matching whole -> match : 1
matching whole match -> itself : 1
whole match itself -> is : 1
match itself is -> always : 1
itself is always -> in : 1
is always in -> this : 1
always in this -> this : 1
is the full -> href : 1
the full href -> the : 1
full href the -> quoted : 1
href the quoted -> the : 1
the quoted the -> url : 1
quoted the url -> being : 1
the url being -> linked : 1
url being linked -> to : 1
being linked to -> is : 1
linked to is -> the : 1
to is the -> parentheses : 1
is the parentheses -> in : 1
the parentheses in -> the : 1
parentheses in the -> regular : 1
in the regular -> expression : 1
expression define such -> a : 1
define such a -> group : 1
such a group -> of : 1
a group of -> which : 1
group of which -> we : 1
have the other -> one : 1
the other one -> is : 1
the other one -> looks : 1
other one is -> the : 1
is the part -> between : 1
the part between -> the : 1
part between the -> and : 1
the and which -> contains : 1
contains the link -> are : 1
the link are -> various : 1
link are various -> stl : 1
are various stl -> functions : 1
various stl functions -> regex : 1
stl functions regex -> but : 1
functions regex but -> we : 1
regex but we -> directly : 1
but we directly -> used : 1
we directly used -> a : 1
directly used a -> regex : 1
used a regex -> token : 1
a regex token -> iterator : 1
regex token iterator -> which : 1
regex token iterator -> shall : 1
token iterator which -> is : 1
iterator which is -> a : 1
is a abstraction -> that : 1
a abstraction that -> uses : 1
abstraction that uses -> the : 1
uses the hood -> in : 1
the hood in -> order : 1
hood in order -> to : 1
order to automate -> recurring : 1
to automate recurring -> matching : 1
automate recurring matching -> we : 1
recurring matching we -> instantiated : 1
matching we instantiated -> it : 1
we instantiated it -> like : 1
instantiated it like -> it : 1
it like it -> begin : 1
like it begin -> and : 1
it begin and -> end : 1
and end part -> denote : 1
end part denote -> our : 1
part denote our -> input : 1
denote our input -> string : 1
input string over -> which : 1
string over which -> the : 1
over which the -> regex : 1
which the regex -> token : 1
the regex token -> iterator : 1
token iterator shall -> iterate : 1
iterator shall iterate -> and : 1
shall iterate and -> match : 1
iterate and match -> all : 1
and match all -> of : 1
match all of -> the : 1
of the complex -> regular : 1
the complex regular -> expression : 1
complex regular expression -> we : 1
expression we implemented -> to : 1
we implemented to -> match : 1
implemented to match -> the : 1
match the part -> is : 1
the next complicated -> looking : 1
next complicated looking -> it : 1
complicated looking it -> instructs : 1
looking it instructs -> the : 1
it instructs the -> token : 1
instructs the token -> iterator : 1
the token iterator -> to : 1
token iterator to -> stop : 1
iterator to stop -> on : 1
to stop on -> each : 1
stop on each -> full : 1
on each full -> match : 1
each full match -> and : 1
full match and -> first : 1
match and first -> yield : 1
and first yield -> group : 1
first yield group -> then : 1
yield group then -> after : 1
group then after -> incrementing : 1
then after incrementing -> the : 1
after incrementing the -> iterator : 1
iterator to yield -> group : 1
to yield group -> and : 1
yield group and -> after : 1
group and after -> incrementing : 1
and after incrementing -> it : 1
after incrementing it -> it : 1
incrementing it it -> would : 1
it it would -> finally : 1
it would finally -> search : 1
would finally search -> for : 1
finally search for -> the : 1
the next match -> in : 1
next match in -> the : 1
match in the -> this : 1
the this somewhat -> intelligent : 1
this somewhat intelligent -> behavior : 1
somewhat intelligent behavior -> really : 1
intelligent behavior really -> spares : 1
behavior really spares -> us : 1
really spares us -> some : 1
us some code -> have : 1
some code have -> a : 1
code have a -> look : 1
look at another -> example : 1
look at another -> minimal : 1
at another example -> to : 1
another example to -> make : 1
example to make -> sure : 1
to make sure -> we : 1
make sure we -> got : 1
sure we got -> the : 1
got the imagine -> the : 1
the imagine the -> regular : 1
imagine the regular -> it : 1
the regular it -> will : 1
regular it will -> match : 1
it will match -> strings : 1
will match strings -> that : 1
match strings that -> contain : 1
that contain then -> none : 1
contain then none -> or : 1
then none or -> arbitrarily : 2
none or arbitrarily -> many : 2
many and then -> none : 1
and then none -> or : 1
arbitrarily many string -> s : 1
many string s -> abc : 1
string s abc -> abbccc : 1
s abc abbccc -> const : 1
abc abbccc const -> regex : 1
abbccc const regex -> re : 1
const regex re -> it : 1
regex re it -> prints : 1
re it prints -> b : 1
it prints b -> prints : 1
prints b prints -> c : 1
b prints c -> prints : 1
prints c prints -> bb : 1
c prints bb -> prints : 1
prints bb prints -> is : 1
bb prints is -> also : 1
prints is also -> which : 1
is also which -> emits : 1
also which emits -> the : 1
emits the substrings -> that : 1
the substrings that -> are : 1
substrings that are -> regex : 1
that are regex -> pretty : 1
are regex pretty -> printing : 1
regex pretty printing -> numbers : 1
how to format -> the : 1
how to format -> types : 1
to format the -> output : 1
format the output -> with : 1
output with output -> and : 1
with output and -> while : 1
output and while -> doing : 1
and while doing -> the : 1
doing the we -> realized : 1
the we realized -> two : 1
we realized two -> manipulators : 1
realized two manipulators -> are : 1
two manipulators are -> so : 1
manipulators are so -> we : 1
are so we -> have : 1
are so we -> will : 1
have to revert -> their : 1
to revert their -> effect : 1
revert their effect -> after : 1
their effect after -> use : 1
effect after use -> in : 1
after use in -> order : 1
to not tamper -> with : 1
not tamper with -> other : 1
tamper with other -> unrelated : 1
with other unrelated -> which : 1
other unrelated which -> also : 1
unrelated which also -> can : 1
which also can -> be : 1
also can be -> very : 1
can be very -> tedious : 1
be very tedious -> and : 1
very tedious and -> does : 1
tedious and does -> not : 1
not look very -> readable : 1
look very readable -> if : 1
very readable if -> we : 1
readable if we -> have : 1
have to set -> up : 1
to set up -> long : 1
to set up -> the : 1
set up long -> chains : 1
up long chains -> of : 1
long chains of -> manipulators : 1
chains of manipulators -> in : 1
of manipulators in -> order : 1
manipulators in order -> to : 1
to get only -> variables : 1
get only variables -> printed : 1
only variables printed -> with : 1
variables printed with -> specific : 1
printed with specific -> lot : 1
printed with specific -> the : 1
with specific lot -> of : 1
specific lot of -> people : 1
of people do -> not : 1
do not like -> streams : 1
not like streams -> for : 1
like streams for -> such : 1
streams for such -> and : 1
for such and -> even : 1
such and even -> in : 1
and even in -> they : 1
even in they -> still : 1
in they still -> use : 1
they still use -> for : 1
still use for -> formatting : 1
use for formatting -> their : 1
for formatting their -> this : 1
formatting their this -> we : 1
to format types -> on : 1
format types on -> the : 1
types on the -> fly : 1
on the fly -> without : 1
on the fly -> with : 1
the fly without -> too : 1
fly without too -> much : 1
without too much -> manipulator : 1
too much manipulator -> noise : 1
much manipulator noise -> in : 1
manipulator noise in -> our : 1
noise in our -> to : 1
in our to -> do : 1
our to do -> are : 1
which can automatically -> revert : 1
can automatically revert -> any : 1
automatically revert any -> format : 1
revert any format -> we : 1
any format we -> add : 1
any format we -> note : 1
format we add -> a : 1
add a wrapper -> which : 1
a wrapper which -> can : 1
wrapper which can -> contain : 1
which can contain -> any : 1
can contain any -> but : 1
contain any but -> when : 1
any but when -> it : 1
but when it -> is : 1
is it gets -> special : 1
it gets special -> formatting : 1
gets special formatting -> without : 1
special formatting without -> burdening : 1
formatting without burdening -> us : 1
without burdening us -> with : 1
burdening us with -> manipulator : 1
us with manipulator -> we : 1
with manipulator we -> include : 1
manipulator we include -> some : 1
we include some -> headers : 2
we include some -> necessary : 1
some headers and -> declare : 4
using namespace helper -> class : 1
using namespace helper -> function : 1
namespace helper class -> up : 1
helper class up -> our : 1
class up our -> stream : 1
our stream formatting -> states : 1
stream formatting states -> for : 1
formatting states for -> us : 1
states for us -> is : 1
for us is -> called : 1
for us is -> the : 1
us is called -> its : 1
is called its -> constructor : 1
called its constructor -> saves : 1
its constructor saves -> the : 1
constructor saves the -> formatting : 1
saves the formatting -> which : 1
the formatting which -> has : 1
formatting which has -> set : 1
which has set -> at : 1
has set at -> the : 1
set at the -> its : 1
at the its -> destructor : 1
the its destructor -> restores : 1
its destructor restores -> them : 1
destructor restores them -> to : 1
restores them to -> the : 1
to the state -> it : 1
the state it -> had : 1
state it had -> when : 1
it had when -> the : 1
had when the -> constructor : 1
when the constructor -> was : 1
the constructor was -> this : 1
constructor was this -> effectively : 1
was this effectively -> revokes : 1
this effectively revokes -> any : 1
effectively revokes any -> formatting : 1
revokes any formatting -> settings : 1
any formatting settings -> that : 1
formatting settings that -> were : 1
settings that were -> class : 1
that were class -> f : 1
were class f -> little : 1
class f little -> helper : 1
f little helper -> class : 1
little helper class -> is : 1
little helper class -> that : 1
helper class is -> because : 1
class is because -> a : 1
is because a -> class : 1
because a class -> it : 1
a class it -> can : 1
class it can -> wrap : 1
it can wrap -> any : 1
can wrap any -> payload : 1
wrap any payload -> type : 1
any payload type -> as : 1
payload type as -> a : 1
a member it -> basically : 1
member it basically -> does : 1
it basically does -> template : 1
basically does template -> struct : 1
does template struct -> t : 1
template struct t -> explicit : 1
struct t explicit -> can : 1
t explicit can -> define : 1
explicit can define -> completely : 1
can define completely -> custom : 1
define completely custom -> formatting : 1
completely custom formatting -> settings : 1
custom formatting settings -> for : 1
formatting settings for -> any : 1
settings for any -> type : 1
for any type -> wrapped : 1
any type wrapped -> into : 1
type wrapped into -> before : 1
wrapped into before -> because : 1
into before because -> if : 1
before because if -> we : 1
if we overload -> the : 1
the stream for -> the : 1
stream for the -> stream : 1
for the stream -> library : 1
the stream library -> executes : 1
the stream library -> already : 1
stream library executes -> completely : 1
library executes completely -> different : 1
executes completely different -> code : 1
different code when -> printing : 1
code when printing -> such : 1
when printing such -> this : 1
printing such this -> we : 1
such this we -> can : 1
can print scientific -> scientific : 1
print scientific scientific -> with : 1
scientific scientific with -> uppercase : 1
scientific with uppercase -> formatting : 1
with uppercase formatting -> and : 1
uppercase formatting and -> explicit : 1
formatting and explicit -> if : 1
and explicit if -> they : 1
explicit if they -> have : 1
if they have -> positive : 1
they have positive -> we : 1
have positive we -> do : 1
positive we do -> also : 1
do also use -> our : 1
also use our -> class : 1
use our class -> in : 1
our class in -> order : 1
class in order -> to : 1
order to tidy -> up : 1
to tidy up -> all : 1
tidy up all -> our : 1
up all our -> settings : 1
all our settings -> when : 1
our settings when -> leaving : 1
settings when leaving -> this : 1
when leaving this -> function : 1
leaving this function -> template : 1
this function template -> const : 1
function template const -> os : 1
template const os -> scientific : 1
const os scientific -> uppercase : 1
os scientific uppercase -> return : 1
scientific uppercase return -> os : 1
uppercase return os -> the : 1
os the main -> we : 1
main we will -> first : 1
main we will -> implement : 1
main we will -> open : 1
main we will -> fill : 1
main we will -> go : 1
will first play -> around : 1
first play around -> with : 1
the we open -> a : 1
a new first -> get : 1
new first get -> an : 1
first get an -> instance : 1
get an instance -> of : 1
then we apply -> some : 1
we apply some -> wild : 1
apply some wild -> formatting : 1
some wild formatting -> flags : 1
wild formatting flags -> to : 1
formatting flags to -> int : 1
flags to int -> cout : 1
to int cout -> hex : 1
int cout hex -> scientific : 1
cout hex scientific -> showbase : 1
hex scientific showbase -> cout : 1
scientific showbase cout -> with : 1
showbase cout with -> special : 1
cout with special -> cout : 1
with special cout -> cout : 1
special cout cout -> we : 1
cout cout we -> printed : 1
cout cout we -> to : 1
cout we printed -> some : 1
we printed some -> numbers : 1
printed some numbers -> with : 1
some numbers with -> many : 1
numbers with many -> formatting : 1
with many formatting -> flags : 1
many formatting flags -> we : 1
formatting flags we -> left : 1
flags we left -> the : 1
we left the -> scope : 1
we left the -> both : 1
left the scope -> while : 1
the scope while -> this : 1
scope while this -> the : 1
while this the -> destructor : 1
this the destructor -> of : 1
the destructor of -> tidied : 1
the destructor of -> the : 4
the destructor of -> will : 1
the destructor of -> cannot : 1
destructor of tidied -> the : 1
of tidied the -> formatting : 1
tidied the formatting -> in : 1
the formatting in -> order : 1
formatting in order -> to : 1
to test we -> are : 1
test we are -> printing : 1
we are printing -> exactly : 1
are printing exactly -> the : 1
printing exactly the -> same : 1
the same numbers -> they : 1
same numbers they -> should : 1
numbers they should -> appear : 1
should appear cout -> but : 1
appear cout but -> normal : 1
cout but normal -> formatting : 1
but normal formatting -> cout : 1
but normal formatting -> mixed : 1
normal formatting cout -> cout : 1
formatting cout cout -> we : 1
cout we to -> print : 1
we to print -> three : 1
to print three -> numbers : 1
print three numbers -> in : 1
three numbers in -> a : 1
three numbers in -> the : 1
numbers in a -> we : 1
a we wrap -> the : 1
wrap the second -> number : 1
the second number -> in : 1
second number in -> this : 1
number in this -> it : 1
is printed in -> our : 1
printed in our -> special : 1
in our special -> scientific : 1
our special scientific -> but : 1
special scientific but -> the : 1
scientific but the -> numbers : 1
but the numbers -> before : 1
the numbers before -> and : 1
numbers before and -> after : 1
and after it -> get : 1
and after it -> produced : 1
after it get -> default : 1
it get default -> at : 1
get default at -> the : 1
default at the -> same : 1
same we avoid -> ugly : 1
we avoid ugly -> formatting : 1
avoid ugly formatting -> line : 1
ugly formatting line -> cout : 1
formatting line cout -> and : 1
line cout and -> running : 1
first two numbers -> are : 1
two numbers are -> printed : 1
numbers are printed -> with : 1
are printed with -> specific : 1
with specific the -> next : 1
specific the next -> two : 1
next two numbers -> appear : 1
two numbers appear -> with : 1
numbers appear with -> default : 1
appear with default -> which : 1
with default which -> shows : 1
default which shows -> us : 1
which shows us -> that : 1
shows us that -> our : 1
us that our -> works : 1
that our works -> just : 1
our works just -> the : 1
works just the -> three : 1
just the three -> numbers : 1
the three numbers -> in : 1
the last lines -> also : 1
the last lines -> of : 1
last lines also -> look : 1
lines also look -> just : 1
also look just -> as : 1
look just as -> only : 1
just as only -> the : 1
as only the -> one : 1
only the one -> in : 1
the one in -> the : 1
the middle has -> the : 1
middle has the -> formatting : 1
has the formatting -> of : 1
the formatting of -> the : 1
formatting of the -> rest : 1
of the rest -> has : 1
the rest has -> default : 1
rest has default -> numbers : 1
has default numbers -> with : 1
default numbers with -> special : 1
numbers with special -> same : 1
with special same -> but : 1
special same but -> normal : 1
same but normal -> formatting : 1
normal formatting mixed -> readable : 1
formatting mixed readable -> exceptions : 1
mixed readable exceptions -> from : 1
exceptions from of -> the : 1
from of the -> recipes : 1
of the recipes -> in : 1
the recipes in -> this : 1
we used to -> catch : 1
used to catch -> while : 1
to catch while -> this : 1
catch while this -> is : 1
while this is -> certainly : 1
this is certainly -> working : 1
is certainly working -> on : 1
certainly working on -> stream : 1
working on stream -> objects : 1
on stream objects -> without : 1
stream objects without -> exceptions : 1
objects without exceptions -> is : 1
without exceptions is -> already : 1
exceptions is already -> very : 1
is already very -> if : 1
already very if -> we : 1
very if we -> try : 1
to parse in -> but : 1
parse in but -> this : 1
in but this -> fails : 1
but this fails -> somewhere : 1
this fails somewhere -> in : 1
fails somewhere in -> the : 1
the the whole -> stream : 1
the the whole -> list : 1
the whole stream -> object : 1
whole stream object -> sets : 1
stream object sets -> itself : 1
object sets itself -> into : 1
sets itself into -> a : 2
itself into a -> fail : 2
into a fail -> state : 1
into a fail -> the : 1
a fail state -> and : 1
fail state and -> stops : 1
state and stops -> further : 1
and stops further -> this : 1
stops further this -> we : 1
further this we -> do : 1
do not run -> into : 1
not run into -> the : 1
run into the -> danger : 1
into the danger -> of : 1
the danger of -> parsing : 1
danger of parsing -> variables : 1
of parsing variables -> from : 1
parsing variables from -> the : 1
variables from the -> wrong : 1
variables from the -> command : 1
from the wrong -> offset : 1
the wrong offset -> in : 1
wrong offset in -> the : 1
offset in the -> we : 1
can just do -> the : 1
do the parsing -> in : 1
the parsing in -> a : 1
parsing in a -> such : 1
parsing in a -> catch : 1
a such foo -> bar : 1
such foo bar -> if : 1
foo bar if -> this : 1
bar if this -> we : 1
if this we -> handle : 1
this we handle -> it : 1
we handle it -> does : 1
handle it does -> not : 1
does not appear -> very : 1
not appear very -> advantageous : 1
appear very advantageous -> to : 1
very advantageous to -> embrace : 1
advantageous to embrace -> parsing : 1
to embrace parsing -> in : 1
embrace parsing in -> a : 1
in a catch -> the : 1
a catch the -> stream : 1
catch the stream -> library : 1
stream library already -> existed : 1
library already existed -> before : 1
already existed before -> there : 1
already existed before -> the : 1
existed before there -> were : 1
before there were -> exceptions : 1
there were exceptions -> in : 1
were exceptions in -> exception : 1
exceptions in exception -> support : 1
in exception support -> was : 1
exception support was -> added : 1
support was added -> which : 1
was added which -> might : 1
added which might -> be : 1
be an explanation -> why : 1
an explanation why -> they : 1
explanation why they -> are : 1
why they are -> not : 1
are not a -> supported : 1
not a supported -> feature : 1
a supported feature -> in : 1
supported feature in -> the : 1
feature in the -> stream : 1
in the stream -> order : 1
in the stream -> we : 1
the stream order -> to : 1
stream order to -> use : 1
to use exceptions -> in : 1
to use exceptions -> with : 1
use exceptions in -> the : 1
exceptions in the -> stream : 1
stream we must -> configure : 1
we must configure -> each : 1
must configure each -> stream : 1
configure each stream -> object : 1
each stream object -> individually : 1
stream object individually -> to : 1
object individually to -> throw : 1
individually to throw -> an : 1
to throw an -> whenever : 1
to throw an -> exception : 1
throw an whenever -> it : 1
an whenever it -> sets : 1
whenever it sets -> itself : 1
it sets itself -> into : 1
a fail the -> error : 1
fail the error -> explanations : 1
the error explanations -> in : 1
error explanations in -> the : 1
explanations in the -> exception : 1
in the exception -> which : 1
can then catch -> are : 1
then catch are -> not : 1
catch are not -> thoroughly : 1
are not thoroughly -> this : 1
not thoroughly this -> leads : 1
thoroughly this leads -> to : 1
leads to not -> really : 1
to not really -> helpful : 1
not really helpful -> error : 1
really helpful error -> as : 1
helpful error as -> we : 1
error as we -> will : 1
will see in -> this : 1
will see in -> what : 1
will see in -> later : 1
see in this -> if : 1
in this if -> we : 1
in this if -> reading : 1
we really want -> to : 2
want to use -> exceptions : 1
want to use -> stream : 1
use exceptions with -> stream : 1
exceptions with stream -> we : 1
with stream we -> can : 1
we can poll -> the : 1
can poll the -> c : 1
poll the c -> library : 1
c library for -> filesystem : 1
library for filesystem -> error : 1
for filesystem error -> states : 1
filesystem error states -> to : 1
error states to -> get : 1
states to get -> some : 1
to get some -> additional : 1
to get some -> elegant : 1
get some additional -> this : 1
some additional this -> we : 1
additional this we -> are : 1
program that can -> fail : 1
program that can -> print : 1
that can fail -> in : 1
can fail in -> different : 1
fail in different -> handle : 1
in different handle -> those : 1
different handle those -> with : 1
handle those with -> and : 1
those with and -> see : 1
with and see -> how : 1
how to squeeze -> more : 1
to squeeze more -> information : 1
squeeze more information -> out : 1
more information out -> of : 1
information out of -> those : 1
out of those -> to : 1
of those to -> do : 1
those to do -> a : 1
do a program -> a : 1
a program a -> file : 1
program a file -> might : 1
a file might -> and : 1
file might and -> then : 1
might and then -> read : 1
then read an -> integer : 1
read an integer -> out : 1
read an integer -> from : 1
an integer out -> of : 1
integer out of -> it : 1
of it might -> we : 1
it might we -> do : 1
might we do -> this : 1
this with activated -> exceptions : 1
with activated exceptions -> and : 1
activated exceptions and -> then : 1
exceptions and then -> we : 1
we can handle -> we : 1
can handle we -> include : 1
handle we include -> some : 1
namespace we want -> to : 1
to use stream -> objects : 1
use stream objects -> with : 1
stream objects with -> we : 1
objects with we -> have : 1
objects with we -> are : 1
with we have -> to : 1
with we have -> specific : 1
have to enable -> them : 1
to enable them -> in : 1
enable them in -> order : 1
get a file -> stream : 1
stream object to -> throw : 1
stream object to -> its : 1
stream object to -> print : 1
object to throw -> an : 1
an exception if -> the : 1
an exception if -> we : 2
exception if the -> file : 1
if the file -> we : 1
if the file -> to : 1
if the file -> exists : 1
the file we -> are : 2
the file we -> will : 1
file we are -> letting : 1
file we are -> looking : 1
we are letting -> it : 1
are letting it -> access : 1
letting it access -> does : 1
it access does -> not : 1
access does not -> or : 1
does not or -> if : 1
not or if -> there : 1
or if there -> are : 2
there are parsing -> we : 1
are parsing we -> need : 1
parsing we need -> to : 1
need to set -> some : 1
to set some -> fail : 1
set some fail -> bits : 1
some fail bits -> in : 1
fail bits in -> an : 1
bits in an -> exception : 1
in an exception -> if : 1
exception if we -> do : 1
exception if we -> call : 1
we do something -> afterward : 1
do something afterward -> that : 1
something afterward that -> it : 1
afterward that it -> will : 1
it will trigger -> an : 1
will trigger an -> by : 1
trigger an by -> activating : 1
an by activating -> and : 1
by activating and -> we : 1
activating and we -> enable : 1
and we enable -> exceptions : 1
we enable exceptions -> for : 1
enable exceptions for -> filesystem : 1
exceptions for filesystem -> errors : 1
for filesystem errors -> and : 1
filesystem errors and -> parsing : 1
errors and parsing -> int : 1
and parsing int -> ifstream : 1
parsing int ifstream -> we : 1
int ifstream we -> can : 1
ifstream we can -> open : 1
we can open -> a : 1
can open a -> block : 1
open a block -> and : 1
block and access -> a : 1
and access a -> if : 1
access a if -> opening : 1
a if opening -> the : 1
if opening the -> file : 1
opening the file -> is : 1
file is we -> try : 1
is we try -> to : 1
an integer from -> only : 1
an integer from -> it : 1
an integer from -> user : 1
integer from only -> if : 1
from only if -> both : 1
if both steps -> we : 1
both steps we -> print : 1
print the try -> int : 1
the try int -> f : 1
try int f -> cout : 1
int f cout -> has : 1
f cout has -> i : 1
cout has i -> both : 1
has i both -> the : 1
i both the -> expected : 1
both the expected -> possibilities : 1
the expected possibilities -> of : 1
expected possibilities of -> an : 1
possibilities of an -> an : 1
of an an -> instance : 1
an an instance -> of : 1
of is this -> object : 1
is this object -> has : 1
this object has -> a : 1
object has a -> which : 1
a which ought -> to : 1
which ought to -> explain : 1
ought to explain -> what : 1
to explain what -> triggered : 1
explain what triggered -> the : 1
what triggered the -> the : 1
triggered the the -> standardization : 1
the the standardization -> of : 1
the standardization of -> this : 1
standardization of this -> left : 1
of this left -> and : 1
this left and -> it : 1
left and it -> does : 1
does not give -> too : 1
does not give -> us : 1
not give too -> much : 1
give too much -> we : 1
too much we -> can : 1
much we can -> at : 1
we can at -> least : 1
can at least -> distinguish : 1
at least distinguish -> if : 1
least distinguish if -> there : 1
distinguish if there -> is : 1
a problem the -> file : 1
problem the file -> does : 1
the file does -> not : 1
file does not -> for : 1
file does not -> int : 1
does not for -> or : 1
not for or -> a : 1
for or a -> format : 1
or a format -> the : 1
a format the -> global : 1
format the global -> has : 1
the global has -> been : 1
global has been -> there : 1
has been there -> even : 1
has been there -> for : 1
been there even -> before : 1
there even before -> was : 1
even before was -> and : 1
before was and -> it : 1
was and it -> is : 1
it is set -> to : 1
set to an -> error : 1
to an error -> which : 1
an error which -> we : 1
error which we -> can : 1
can check function -> translates : 1
check function translates -> from : 1
function translates from -> an : 1
translates from an -> error : 1
from an error -> number : 1
an error number -> to : 1
error number to -> a : 1
number to a -> human : 1
to a human -> readable : 1
a human readable -> if : 1
human readable if -> is : 1
readable if is -> there : 1
if is there -> at : 1
is there at -> no : 1
there at no -> filesystem : 1
at no filesystem -> catch : 1
no filesystem catch -> cerr : 1
filesystem catch cerr -> if : 1
catch cerr if -> cerr : 1
cerr if cerr -> else : 1
if cerr else -> cerr : 1
cerr else cerr -> the : 1
else cerr the -> program : 1
cerr the program -> and : 1
program and running -> it : 1
and running it -> in : 1
running it in -> two : 1
it in two -> different : 1
two different scenarios -> yields : 1
different scenarios yields -> the : 1
scenarios yields the -> following : 1
the following if -> the : 1
following if the -> file : 1
the file to -> be : 1
file to be -> opened : 1
to be opened -> does : 1
be opened does -> exist : 1
opened does exist -> but : 1
does exist but -> parsing : 1
exist but parsing -> an : 1
but parsing an -> integer : 1
parsing an integer -> from : 1
integer from it -> was : 1
from it was -> not : 1
it was not -> we : 1
was not we -> get : 1
not we get -> an : 1
we get an -> caught : 1
we get an -> absolute : 1
get an caught -> unspecified : 1
an caught unspecified -> the : 1
caught unspecified the -> file : 1
unspecified the file -> we : 1
file we will -> be : 1
we will be -> notified : 1
we will be -> dealing : 1
we will be -> ready : 1
we will be -> counting : 1
we will be -> playing : 1
will be notified -> about : 1
be notified about -> a : 1
notified about a -> different : 1
about a different -> message : 1
a different message -> from : 1
different message from -> caught : 1
message from caught -> no : 1
from caught no -> such : 1
caught no such -> file : 1
no such file -> or : 2
such file or -> it : 1
such file or -> directory : 1
file or it -> have : 1
or it have -> seen : 1
we can enable -> exceptions : 1
can enable exceptions -> per : 1
enable exceptions per -> stream : 1
exceptions per stream -> this : 1
per stream this -> that : 1
stream this that -> there : 1
this that there -> is : 1
is no way -> to : 1
no way to -> for : 1
way to for -> constructor : 1
to for constructor -> for : 1
for constructor for -> opening : 1
constructor for opening -> a : 1
for opening a -> file : 1
opening a file -> if : 1
a file if -> we : 1
file if we -> want : 1
want to get -> an : 1
want to get -> some : 1
get an opening -> that : 1
an opening that -> file : 1
opening that file -> is : 1
that file is -> not : 1
file is not -> f : 1
is not f -> too : 1
not f too -> late : 1
f too late -> for : 1
too late for -> an : 1
late for an -> exception : 1
for an exception -> is : 1
exception is a -> pity : 1
is a pity -> because : 1
a pity because -> exceptions : 1
pity because exceptions -> actually : 1
because exceptions actually -> promise : 1
exceptions actually promise -> that : 1
actually promise that -> they : 1
promise that they -> make : 1
that they make -> error : 1
they make error -> handling : 1
make error handling -> less : 1
error handling less -> clumsy : 1
handling less clumsy -> compared : 1
less clumsy compared -> to : 1
clumsy compared to -> which : 1
compared to which -> is : 1
which is riddled -> with : 1
is riddled with -> loads : 1
riddled with loads -> of : 1
with loads of -> which : 1
loads of which -> handle : 1
of which handle -> errors : 1
which handle errors -> after : 1
handle errors after -> every : 1
errors after every -> we : 1
every we played -> around : 1
we played around -> trying : 1
played around trying -> to : 1
around trying to -> provoke : 1
trying to provoke -> various : 1
to provoke various -> reasons : 1
provoke various reasons -> for : 1
various reasons for -> streams : 1
reasons for streams -> to : 1
for streams to -> we : 1
streams to we -> would : 1
to we would -> realize : 1
we would realize -> that : 1
would realize that -> there : 1
realize that there -> are : 1
are no different -> exceptions : 1
no different exceptions -> being : 1
different exceptions being -> this : 1
exceptions being this -> we : 1
being this we -> can : 1
can only find -> out : 1
only find out -> get : 1
find out get -> an : 1
out get an -> specific : 1
get an specific -> error : 1
an specific error -> of : 1
specific error of -> true : 1
error of true -> for : 1
of true for -> exception : 1
true for exception -> handling : 1
for exception handling -> in : 1
exception handling in -> but : 1
handling in but -> for : 1
in but for -> the : 1
for the stl -> stream : 1
the stl stream -> that : 1
stl stream that -> is : 1
stream that is -> why : 1
why we additionally -> consulted : 1
we additionally consulted -> the : 1
additionally consulted the -> value : 1
consulted the value -> of : 1
value of this -> global : 1
value of this -> type : 1
of this global -> variable : 1
this global variable -> is : 1
global variable is -> an : 1
variable is an -> ancient : 1
is an ancient -> which : 1
an ancient which -> has : 1
ancient which has -> already : 1
which has already -> been : 1
has already been -> used : 1
already been used -> in : 1
been used in -> the : 1
in the old -> days : 1
the old days -> when : 1
old days when -> there : 1
days when there -> were : 1
were no or -> exceptions : 1
no or exceptions -> in : 1
or exceptions in -> any : 1
exceptions in any -> function : 1
in any function -> has : 1
any function has -> seen : 1
function has seen -> an : 1
has seen an -> error : 1
seen an error -> it : 1
error it to -> set : 1
it to set -> the : 1
to set the -> variable : 1
to set the -> then : 1
set the variable -> to : 1
the variable to -> something : 1
variable to something -> other : 1
to something other -> than : 1
something other than -> describes : 1
other than describes -> the : 1
than describes the -> absence : 1
describes the absence -> of : 1
the absence of -> and : 1
absence of and -> then : 1
then the caller -> to : 1
caller to read -> that : 1
to read that -> error : 1
read that error -> number : 1
that error number -> and : 1
error number and -> look : 1
number and look -> up : 1
and look up -> what : 1
look up what -> its : 1
up what its -> value : 1
what its value -> the : 1
its value the -> only : 1
value the only -> problem : 1
the only problem -> with : 1
only problem with -> this : 1
problem with this -> is : 1
with this is -> that : 1
when we have -> a : 1
when we have -> the : 1
have a multithreaded -> and : 1
a multithreaded and -> all : 1
multithreaded and all -> the : 1
all the threads -> use : 1
the threads use -> functions : 1
threads use functions -> set : 1
use functions set -> this : 1
functions set this -> error : 1
set this error -> error : 1
this error error -> value : 1
error error value -> is : 1
error value is -> if : 1
value is if -> we : 1
if we read -> it : 1
we read it -> even : 1
read it even -> though : 1
it even though -> there : 1
even though there -> it : 1
though there it -> could : 1
there it could -> carry : 1
it could carry -> an : 1
could carry an -> error : 1
carry an error -> value : 1
an error value -> because : 1
error value because -> some : 1
value because some -> system : 1
because some system -> function : 1
some system function -> running : 1
system function running -> in : 1
function running in -> a : 1
running in a -> have : 1
a have experienced -> an : 1
have experienced an -> this : 1
experienced an this -> flaw : 1
an this flaw -> has : 1
this flaw has -> since : 1
flaw has since -> where : 1
has since where -> every : 1
since where every -> thread : 1
where every thread -> in : 1
where every thread -> is : 1
every thread in -> a : 1
thread in a -> process : 1
in a process -> sees : 1
a process sees -> its : 1
process sees its -> own : 1
sees its own -> elaborating : 1
its own elaborating -> the : 1
own elaborating the -> ups : 1
elaborating the ups -> and : 1
the ups and -> downs : 1
ups and downs -> of : 1
and downs of -> an : 1
downs of an -> ancient : 1
of an ancient -> error : 1
an ancient error -> indication : 1
ancient error indication -> it : 1
error indication it -> can : 1
indication it can -> give : 1
it can give -> us : 1
can give us -> useful : 1
give us useful -> extra : 1
us useful extra -> information : 1
useful extra information -> when : 1
extra information when -> an : 1
information when an -> exception : 1
when an exception -> is : 1
exception is triggered -> on : 1
is triggered on -> things : 1
triggered on things -> such : 1
on things such -> exceptions : 1
things such exceptions -> tell : 1
such exceptions tell -> us : 1
exceptions tell us -> it : 1
tell us it -> and : 1
us it and -> can : 1
it and can -> tell : 1
and can tell -> us : 1
can tell us -> happened : 1
tell us happened -> if : 1
us happened if -> it : 1
happened if it -> happened : 1
if it happened -> at : 1
it happened at -> the : 1
happened at the -> system : 1
at the system -> this : 1
the system this -> we : 1
system this we -> will : 1
the following between -> different : 1
following between different -> time : 1
relative times with -> signalizing : 1
times with signalizing -> failure : 1
with signalizing failure -> with : 1
shape specific distributions -> chapter : 1
specific distributions chapter -> is : 1
distributions chapter is -> dedicated : 1
chapter is dedicated -> to : 1
is dedicated to -> utility : 1
is dedicated to -> demonstrating : 1
dedicated to utility -> classes : 1
to utility classes -> that : 1
utility classes that -> are : 1
classes that are -> very : 1
that are very -> useful : 1
are very useful -> for : 1
very useful for -> solving : 1
useful for solving -> very : 1
for solving very -> specific : 1
solving very specific -> some : 1
very specific some -> of : 1
specific some of -> them : 1
them are indeed -> so : 1
are indeed so -> useful : 1
indeed so useful -> that : 1
so useful that -> we : 1
useful that we -> will : 1
we will most -> probably : 2
most probably see -> them : 1
probably see them -> extremely : 1
see them extremely -> often : 1
them extremely often -> in : 1
extremely often in -> any : 1
often in any -> program : 1
in any program -> snippet : 1
any program snippet -> in : 1
program snippet in -> the : 1
snippet in the -> future : 1
in the future -> or : 1
the future or -> have : 1
future or have -> at : 1
or have at -> least : 1
have at least -> already : 1
have at least -> template : 1
at least already -> seen : 1
least already seen -> them : 1
already seen them -> sprinkled : 1
seen them sprinkled -> over : 1
them sprinkled over -> all : 1
sprinkled over all -> other : 1
over all other -> chapters : 1
all other chapters -> in : 1
other chapters in -> this : 1
chapters in this -> first : 1
in this first -> two : 1
this first two -> recipes : 1
first two recipes -> are : 1
two recipes are -> about : 1
recipes are about -> measuring : 1
are about measuring -> and : 1
about measuring and -> taking : 1
measuring and taking -> we : 1
and taking we -> will : 1
taking we will -> also : 1
how to convert -> between : 1
how to convert -> the : 1
to convert between -> different : 1
to convert between -> if : 1
convert between different -> time : 1
time units and -> how : 1
time units and -> convert : 1
units and how -> to : 1
and how to -> jump : 1
and how to -> convert : 1
and how to -> use : 1
and how to -> an : 1
how to jump -> between : 1
jump between points -> in : 1
between points in -> we : 1
points in we -> will : 1
the and types -> all : 1
and types all -> came : 1
types all came -> with : 1
all came with -> and : 1
came with and -> as : 1
came with and -> works : 1
with and as -> well : 1
well as some -> tricks : 1
as some tricks -> in : 1
some tricks in -> another : 1
tricks in another -> we : 1
another we also -> got : 1
we also got -> sophisticated : 1
also got sophisticated -> smart : 1
got sophisticated smart -> pointer : 1
sophisticated smart pointer -> namely : 1
smart pointer namely -> an : 1
pointer namely an -> enormously : 1
namely an enormously -> effective : 1
an enormously effective -> help : 1
enormously effective help -> regarding : 1
effective help regarding -> which : 1
help regarding which -> is : 1
regarding which is -> why : 1
why we will -> have : 1
have a dedicated -> look : 1
a dedicated look -> at : 1
dedicated look at -> them : 1
look at them -> in : 1
at them in -> five : 1
them in five -> we : 1
in five we -> will : 1
five we will -> have : 1
have a panoramic -> view : 1
a panoramic view -> library : 1
panoramic view library -> parts : 1
view library parts -> of : 1
library parts of -> the : 1
stl that are -> about : 1
that are about -> generating : 1
are about generating -> apart : 1
about generating apart -> from : 1
generating apart from -> learning : 1
apart from learning -> about : 1
from learning about -> the : 1
learning about the -> most : 1
about the most -> important : 1
most important characteristics -> of : 1
important characteristics of -> the : 1
of the random -> we : 1
of the random -> engine : 1
random we will -> also : 1
will also learn -> how : 1
also learn how -> to : 1
learn how to -> apply : 1
learn how to -> do : 2
learn how to -> pack : 1
learn how to -> use : 1
learn how to -> provide : 1
how to apply -> shaping : 1
to apply shaping -> to : 1
apply shaping to -> random : 1
shaping to random -> numbers : 1
to random numbers -> in : 1
random numbers in -> order : 1
numbers in order -> to : 1
to get distributions -> that : 1
get distributions that -> fit : 1
distributions that fit -> our : 1
that fit our -> actual : 1
fit our actual -> between : 1
our actual between -> different : 1
actual between different -> time : 1
units using the -> stl : 1
using the stl -> contains : 1
the stl contains -> some : 1
stl contains some -> new : 1
contains some new -> types : 1
some new types -> and : 1
new types and -> functions : 1
types and functions -> for : 1
and functions for -> and : 1
functions for and -> displaying : 1
for and displaying -> this : 1
and displaying this -> part : 1
displaying this part -> of : 1
of the library -> exists : 1
the library exists -> in : 1
library exists in -> the : 1
exists in the -> namespace : 1
in the namespace -> and : 1
namespace and has -> some : 1
and has some -> sophisticated : 1
has some sophisticated -> this : 1
some sophisticated this -> we : 1
sophisticated this we -> will : 1
concentrate on measuring -> time : 1
on measuring time -> spans : 1
measuring time spans -> and : 1
time spans and -> how : 1
spans and how -> to : 1
to convert the -> result : 1
convert the result -> of : 1
of the measurement -> between : 1
the measurement between -> such : 1
measurement between such -> and : 1
between such and -> the : 1
stl provides which -> enable : 1
provides which enable -> us : 1
which enable us -> to : 1
enable us to -> define : 1
enable us to -> compose : 1
us to define -> our : 1
to define our -> own : 1
our own time -> units : 1
own time units -> and : 1
units and convert -> between : 1
and convert between -> them : 1
convert between them -> to : 1
between them to -> do : 1
a little that -> prompts : 1
little that prompts -> the : 1
to enter a -> specific : 1
enter a specific -> the : 1
specific the time -> that : 1
the time that -> the : 1
time that the -> user : 1
needs to type -> this : 1
to type this -> word : 1
type this word -> into : 1
this word into -> the : 1
word into the -> keyboard : 1
into the keyboard -> is : 1
the keyboard is -> measured : 1
keyboard is measured -> and : 1
is measured and -> displayed : 1
measured and displayed -> in : 1
and displayed in -> multiple : 1
displayed in multiple -> time : 1
in multiple time -> we : 1
multiple time we -> need : 1
time we need -> to : 2
the necessary for -> reasons : 1
necessary for reasons -> of : 1
for reasons of -> we : 1
reasons of we -> declare : 1
of we declare -> that : 1
namespace a type -> for : 1
a type for -> time : 1
type for time -> durations : 1
for time durations -> usually : 1
time durations usually -> refers : 1
durations usually refers -> to : 1
usually refers to -> multiples : 1
refers to multiples -> or : 1
to multiples or -> fractions : 1
multiples or fractions -> of : 1
or fractions of -> all : 1
fractions of all -> the : 1
the stl time -> duration : 1
stl time duration -> units : 1
time duration units -> refer : 1
duration units refer -> to : 1
units refer to -> integer : 1
refer to integer -> typed : 1
to integer typed -> duration : 1
integer typed duration -> in : 1
typed duration in -> this : 1
duration in this -> we : 1
going to specialize -> on : 1
to specialize on -> in : 1
specialize on in -> the : 1
on in the -> recipe : 1
the recipe after -> this : 1
recipe after this -> we : 1
after this we -> will : 1
will concentrate more -> on : 1
concentrate more on -> the : 1
more on the -> existing : 1
on the existing -> time : 1
the existing time -> are : 1
existing time are -> already : 1
time are already -> built : 1
already built into -> the : 1
built into the -> using : 1
into the using -> seconds : 1
the using seconds -> millisecond : 1
using seconds millisecond -> is : 1
seconds millisecond is -> a : 1
millisecond is a -> fraction : 1
millisecond is a -> of : 1
millisecond is a -> thousandth : 1
is a fraction -> of : 1
a fraction of -> a : 1
fraction of a -> so : 1
of a so -> we : 1
we define this -> unit : 1
define this unit -> by : 1
this unit by -> referring : 1
unit by referring -> to : 1
by referring to -> the : 1
by referring to -> multiply : 1
referring to the -> template : 1
template parameter applies -> the : 1
parameter applies the -> factor : 1
applies the factor -> to : 1
the factor to -> which : 1
factor to which -> gives : 1
to which gives -> us : 1
us the fraction -> we : 1
the fraction we -> is : 1
fraction we is -> basically : 1
we is basically -> a : 1
basically a meta -> programming : 1
a meta programming -> function : 1
meta programming function -> for : 1
programming function for -> multiplying : 1
function for multiplying -> using : 1
for multiplying using -> milliseconds : 1
multiplying using milliseconds -> the : 1
using milliseconds the -> same : 1
milliseconds the same -> thing : 1
thing with while -> a : 1
with while a -> millisecond : 1
while a millisecond -> is : 1
a millisecond is -> a : 1
is a of -> a : 2
a of a -> a : 1
a of a -> using : 1
of a a -> microsecond : 1
a a microsecond -> is : 1
a microsecond is -> a : 1
microsecond is a -> of : 1
of a using -> microseconds : 1
a using microseconds -> we : 1
using microseconds we -> are : 1
microseconds we are -> going : 1
a which reads -> a : 1
which reads a -> string : 1
reads a string -> from : 1
string from user -> input : 1
input and measures -> how : 1
and measures how -> long : 1
measures how long -> it : 1
how long it -> took : 2
long it took -> the : 1
long it took -> us : 1
it took the -> user : 1
took the user -> to : 1
user to type -> the : 1
to type the -> it : 1
to type the -> word : 1
type the it -> takes : 1
the it takes -> no : 1
it takes no -> returns : 1
it takes no -> it : 1
takes no returns -> us : 1
no returns us -> the : 1
us the user -> input : 1
user input string -> as : 1
input string as -> well : 1
input string as -> auto : 1
string as well -> as : 1
as the elapsed -> bundled : 1
the elapsed bundled -> in : 1
elapsed bundled in -> a : 1
bundled in a -> static : 1
in a static -> string : 1
a static string -> need : 1
a static string -> string : 1
static string need -> to : 1
string need to -> take : 1
need to take -> the : 1
take the time -> from : 1
the time from -> the : 1
time from the -> beginning : 1
of the period -> during : 1
the period during -> which : 1
period during which -> user : 1
during which user -> input : 1
which user input -> occurs : 1
user input occurs -> and : 1
input occurs and -> after : 1
occurs and after -> taking : 1
and after taking -> a : 1
after taking a -> time : 1
taking a time -> snapshot : 1
a time snapshot -> looks : 1
time snapshot looks -> like : 1
snapshot looks like -> const : 1
looks like const -> auto : 1
like const auto -> tic : 1
const auto tic -> actual : 1
auto tic actual -> capturing : 1
tic actual capturing -> of : 1
actual capturing of -> user : 1
capturing of user -> input : 1
of user input -> takes : 1
user input takes -> place : 1
input takes place -> if : 1
takes place if -> we : 1
place if we -> are : 1
are not we -> just : 1
not we just -> return : 1
just return a -> the : 1
return a the -> caller : 1
a the caller -> will : 1
the caller will -> see : 1
caller will see -> that : 1
will see that -> he : 1
will see that -> is : 1
will see that -> we : 1
see that he -> got : 1
that he got -> an : 1
he got an -> empty : 1
got an empty -> input : 1
an empty input -> if : 1
empty input if -> return : 1
input if return -> the : 1
if return the -> case : 1
if return the -> main : 1
return the case -> of : 1
case of we -> continue : 1
of we continue -> by : 1
we continue by -> taking : 1
continue by taking -> another : 1
by taking another -> time : 1
taking another time -> then : 1
another time then -> we : 1
time then we -> return : 1
then we return -> the : 1
return the input -> string : 1
input string and -> the : 1
input string and -> let : 1
and the difference -> between : 1
between both time -> note : 1
both time note -> that : 1
time note that -> both : 1
that both are -> absolute : 1
both are absolute -> time : 1
are absolute time -> but : 1
absolute time but -> by : 1
time but by -> calculating : 1
but by calculating -> the : 1
by calculating the -> we : 1
calculating the we -> get : 1
get a const -> auto : 1
const auto toc -> return : 1
auto toc return -> toc : 1
toc return toc -> implement : 1
return toc implement -> the : 1
toc implement the -> actual : 1
implement the actual -> program : 1
the actual program -> we : 1
actual program we -> loop : 1
program we loop -> until : 1
we loop until -> the : 1
loop until the -> user : 1
until the user -> enters : 1
the user enters -> the : 1
user enters the -> input : 1
enters the input -> string : 1
input string in -> every : 1
string in every -> loop : 1
loop we ask -> the : 1
user to please -> enter : 1
to please enter -> the : 1
please enter the -> string : 1
please enter the -> program : 1
enter the string -> call : 1
the string call -> our : 1
string call our -> int : 1
call our int -> while : 1
our int while -> cout : 1
int while cout -> type : 1
while cout type -> the : 1
cout type the -> word : 1
type the word -> fast : 1
type the word -> returns : 1
type the word -> as : 2
the word fast -> as : 1
word fast as -> you : 1
fast as you -> const : 1
fast as you -> your : 1
fast as you -> you : 1
as you const -> auto : 1
you const auto -> we : 1
const auto we -> check : 1
auto we check -> the : 1
we check the -> if : 1
check the if -> the : 1
input is we -> interpret : 1
is we interpret -> this : 1
we interpret this -> as : 1
interpret this as -> a : 1
this as a -> request : 1
as a request -> to : 1
a request to -> exit : 1
request to exit -> the : 1
to exit the -> whole : 1
exit the whole -> if : 1
whole if the -> user : 1
the user correctly -> we : 1
user correctly we -> express : 1
correctly we express -> our : 1
we express our -> congratulations : 1
express our congratulations -> and : 1
our congratulations and -> then : 1
congratulations and then -> print : 1
print the time -> the : 1
the time the -> user : 1
time the user -> needed : 1
the user needed -> to : 1
user needed to -> type : 1
needed to type -> the : 1
the word returns -> the : 1
word returns the -> number : 1
number of seconds -> as : 1
of seconds as -> a : 1
seconds as a -> floating : 1
as a floating -> point : 1
a floating point -> if : 1
floating point if -> we : 1
we had used -> the : 1
we had used -> as : 1
had used the -> original : 1
used the original -> stl : 1
the original stl -> duration : 1
original stl duration -> then : 1
stl duration then -> we : 1
duration then we -> would : 1
would have got -> a : 1
have got a -> not : 1
got a not -> a : 1
a not a -> by : 1
not a by -> feeding : 1
a by feeding -> the : 1
by feeding the -> milliseconds : 1
feeding the milliseconds -> or : 1
the milliseconds or -> microseconds : 1
milliseconds or microseconds -> with : 1
or microseconds with -> our : 1
microseconds with our -> variable : 1
with our variable -> before : 1
our variable before -> calling : 1
variable before calling -> we : 1
before calling we -> get : 1
calling we get -> the : 1
the same value -> transformed : 1
the same value -> later : 1
same value transformed -> to : 1
value transformed to -> a : 1
transformed to a -> different : 1
transformed to a -> local : 1
different if cout -> you : 1
if cout you -> did : 1
cout you did -> it : 1
cout you did -> not : 1
you did it -> fixed : 1
you did it -> it : 1
did it fixed -> the : 1
it fixed the -> user : 1
fixed the user -> has : 1
the user has -> a : 1
user has a -> typo : 1
has a typo -> in : 1
a typo in -> the : 1
typo in the -> we : 1
we let him -> try : 1
let him try -> else : 1
him try else -> cout : 1
try else cout -> your : 1
else cout your -> input : 1
cout your input -> does : 1
your input does -> not : 2
input does not -> you : 2
does not you -> may : 2
not you may -> try : 2
you may try -> and : 1
you may try -> please : 1
may try and -> running : 1
try and running -> the : 1
the following at -> with : 1
the following at -> this : 1
following at with -> a : 1
at with a -> the : 1
with a the -> program : 1
a the program -> repeatedly : 1
the program repeatedly -> asks : 1
program repeatedly asks -> for : 1
repeatedly asks for -> the : 1
asks for the -> correct : 1
the correct input -> after : 1
correct input after -> typing : 1
input after typing -> the : 1
after typing the -> word : 1
typing the word -> it : 1
the word it -> displays : 1
word it displays -> how : 1
it displays how -> long : 1
displays how long -> it : 1
it took us -> to : 1
took us to -> type : 1
us to type -> it : 1
to type it -> in : 1
type it in -> three : 1
it in three -> different : 1
in three different -> time : 1
three different time -> please : 1
different time please -> type : 1
time please type -> the : 1
please type the -> word : 2
the word as -> fast : 2
word as fast -> as : 2
as fast as -> you : 2
as fast as -> to : 1
as you your -> input : 1
you your input -> does : 1
may try please -> type : 1
try please type -> the : 1
as you you -> did : 1
you you did -> it : 1
did it it -> this : 1
it it this -> section : 1
it this section -> is : 1
section is all -> about : 1
all about converting -> between : 1
about converting between -> different : 1
converting between different -> time : 1
different time we -> first : 1
time we first -> had : 1
we first had -> to : 1
first had to -> choose : 1
had to choose -> one : 1
of the clock -> there : 1
the clock there -> is : 1
clock there is -> generally : 1
there is generally -> the : 1
is generally the -> and : 1
generally the and -> in : 1
the and in -> the : 1
in the what -> are : 1
the what are -> the : 1
what are the -> differences : 1
are the differences -> between : 1
the differences between -> have : 1
differences between have -> a : 1
between have a -> closer : 1
a closer represents -> the : 1
closer represents the -> it : 1
represents the it -> is : 1
the right choice -> if : 1
right choice if -> we : 1
choice if we -> want : 1
want to obtain -> the : 1
to obtain the -> local : 1
to obtain the -> actual : 1
obtain the local -> clock : 1
the local clock -> is : 1
local clock is -> promised : 1
clock is promised -> to : 1
is promised to -> be : 1
promised to be -> this : 1
to be this -> means : 1
be this means -> that : 2
it will never -> be : 1
will never be -> set : 1
never be set -> back : 1
be set back -> by : 1
set back by -> any : 1
back by any -> amount : 1
by any amount -> of : 1
any amount of -> this : 1
amount of this -> can : 1
of this can -> happen : 1
this can happen -> to : 1
can happen to -> other : 1
happen to other -> clocks : 1
to other clocks -> when : 1
other clocks when -> their : 1
clocks when their -> time : 1
when their time -> is : 1
their time is -> corrected : 1
time is corrected -> by : 1
is corrected by -> minimal : 1
corrected by minimal -> or : 1
by minimal or -> even : 1
minimal or even -> when : 1
or even when -> the : 1
even when the -> time : 1
when the time -> is : 1
the time is -> switched : 1
time is switched -> between : 1
is switched between -> winter : 1
switched between winter -> and : 1
between winter and -> summer : 1
winter and summer -> is : 1
and summer is -> the : 1
summer is the -> clock : 1
is the clock -> with : 1
the clock with -> the : 1
clock with the -> most : 1
with the most -> clock : 1
the most clock -> tick : 1
most clock tick -> period : 1
clock tick period -> the : 1
tick period the -> stl : 1
period the stl -> implementation : 1
stl implementation can -> we : 1
implementation can we -> measured : 1
can we measured -> the : 1
we measured the -> time : 1
measured the time -> or : 1
the time or -> duration : 1
time or duration -> from : 1
or duration from -> one : 1
duration from one -> absolute : 1
from one absolute -> point : 1
one absolute point -> in : 1
absolute point in -> time : 2
in time and -> the : 1
time and the -> other : 1
the other absolute -> point : 1
other absolute point -> in : 1
in time we -> captured : 1
time we captured -> in : 1
we captured in -> the : 1
captured in the -> variables : 1
captured in the -> the : 1
captured in the -> these : 1
in the variables -> and : 1
the variables and -> we : 1
variables and we -> are : 1
are not interested -> if : 1
not interested if -> those : 1
interested if those -> points : 1
if those points -> in : 1
those points in -> time : 1
points in time -> were : 1
points in time -> the : 1
in time were -> globally : 1
time were globally -> even : 1
were globally even -> if : 1
even if the -> clock : 1
if the clock -> was : 1
the clock was -> and : 1
clock was and -> second : 1
was and second -> late : 1
and second late -> or : 1
second late or -> ahead : 1
late or ahead -> of : 1
or ahead of -> then : 1
ahead of then -> this : 1
of then this -> does : 1
then this does -> not : 1
does not make -> a : 1
does not make -> the : 1
not make a -> difference : 1
make a difference -> on : 1
a difference on -> the : 1
difference on the -> the : 1
is that after -> we : 1
is that after -> returning : 1
that after we -> save : 1
after we save -> the : 1
save the time -> point : 2
save the time -> for : 1
save the time -> duration : 1
save the time -> difference : 1
the time point -> before : 1
the time point -> the : 1
time point before -> we : 1
point before we -> save : 1
before we save -> the : 1
time point the -> clock : 1
point the clock -> must : 1
the clock must -> not : 1
clock must not -> be : 1
must not be -> happens : 1
not be happens -> on : 1
be happens on -> many : 1
happens on many -> systems : 1
on many systems -> from : 1
many systems from -> time : 1
systems from time -> to : 1
from time to -> that : 1
from time to -> drawbacks : 1
from time to -> time : 2
from time to -> and : 1
time to that -> would : 1
that would distort -> our : 1
would distort our -> for : 1
distort our for -> these : 1
our for these -> is : 1
for these is -> the : 1
these is the -> optimal : 1
is the optimal -> its : 1
the optimal its -> implementation : 1
optimal its implementation -> can : 1
its implementation can -> be : 1
implementation can be -> based : 1
can be based -> on : 1
be based on -> the : 1
on the which -> always : 1
on the which -> we : 1
which always counts -> up : 1
always counts up -> monotonously : 1
counts up monotonously -> since : 1
up monotonously since -> the : 1
monotonously since the -> system : 1
since the system -> was : 1
the system was -> now : 1
system was now -> with : 1
was now with -> the : 1
now with the -> right : 1
the right time -> object : 1
right time object -> we : 1
time object we -> are : 1
object we are -> able : 1
object we are -> going : 1
able to save -> points : 1
to save points -> in : 1
save points in -> time : 1
in time the -> function : 1
time the function -> returns : 1
us a typed -> the : 1
a typed the -> difference : 1
typed the difference -> between : 1
difference between two -> such : 1
between two such -> values : 1
two such values -> in : 1
such values in -> is : 1
values in is -> a : 1
in is a -> or : 1
in is a -> really : 1
is a or -> of : 1
a or of -> type : 1
or of type -> as : 1
of type as -> this : 1
type as this -> is : 1
is the central -> type : 1
the central type -> of : 1
central type of -> this : 1
type of this -> this : 1
this this gets -> a : 1
this gets a -> little : 1
a little complicated -> have : 1
little complicated have -> a : 1
complicated have a -> closer : 1
at the template -> type : 1
the template type -> interface : 1
template type interface -> of : 1
type interface of -> class : 1
interface of class -> class : 1
class class period -> class : 1
class period class -> parameters : 1
period class parameters -> we : 1
class parameters we -> can : 1
parameters we can -> change : 1
can change are -> called : 1
change are called -> and : 1
are called and -> is : 1
called and is -> easy : 1
and is easy -> to : 1
easy to this -> is : 1
to this is -> just : 2
to this is -> basically : 1
to this is -> why : 1
to this is -> something : 1
just the numeric -> variable : 1
the numeric variable -> type : 1
numeric variable type -> that : 1
variable type that -> is : 1
type that is -> used : 1
that is used -> to : 1
used to save -> the : 1
to save the -> time : 2
to save the -> current : 1
the time for -> the : 1
time for the -> existing : 1
for the existing -> stl : 1
existing stl time -> this : 1
stl time this -> is : 1
time this is -> usually : 1
time this is -> very : 1
time this is -> comfortable : 1
this is usually -> long : 1
is usually long -> in : 1
usually long in -> this : 1
long in this -> we : 1
this we chose -> because : 1
chose because of -> our : 1
our we can -> save : 1
can save time -> values : 1
save time values -> in : 1
time values in -> seconds : 1
values in seconds -> by : 1
in seconds by -> default : 1
seconds by default -> and : 1
by default and -> then : 1
default and then -> convert : 1
and then convert -> them : 1
then convert them -> to : 1
convert them to -> or : 1
them to or -> if : 1
to or if -> we : 1
if we save -> the : 1
the time duration -> of : 1
time duration of -> seconds : 1
time duration of -> type : 1
duration of seconds -> in : 1
of seconds in -> the : 1
seconds in the -> then : 1
would be rounded -> to : 1
be rounded to -> one : 1
rounded to one -> full : 1
to one full -> we : 1
one full we -> would : 1
full we would -> have : 1
have to save -> the : 1
the time difference -> between : 1
time difference between -> and : 1
difference between and -> could : 1
between and could -> then : 1
and could then -> convert : 1
could then convert -> to : 1
then convert to -> with : 1
convert to with -> our : 1
choice for we -> can : 1
we can convert -> up : 1
we can convert -> to : 1
can convert up -> and : 1
convert up and -> down : 1
up and down -> and : 1
and down and -> lose : 1
down and lose -> only : 1
and lose only -> a : 1
lose only a -> minimal : 1
only a minimal -> amount : 1
a minimal amount -> of : 1
minimal amount of -> which : 1
amount of which -> does : 1
does not hurt -> in : 1
not hurt in -> this : 1
hurt in this -> for : 1
this for all -> our : 1
for all our -> time : 1
all our time -> only : 1
our time only -> in : 1
time only in -> our : 1
only in our -> choice : 1
in our choice -> of : 1
our choice of -> seconds : 1
choice of seconds -> using : 1
of seconds using -> milliseconds : 1
seconds using milliseconds -> using : 2
using milliseconds using -> microseconds : 2
milliseconds using microseconds -> is : 1
milliseconds using microseconds -> these : 1
using microseconds is -> the : 1
microseconds is the -> simplest : 1
the simplest unit -> to : 1
simplest unit to -> as : 1
unit to as -> it : 1
to as it -> works : 1
as it works -> with : 1
works with the -> others : 1
with the others -> have : 1
the others have -> to : 1
others have to -> be : 1
be as one -> millisecond : 1
as one millisecond -> is : 1
one millisecond is -> a : 1
is a thousandth -> of : 1
a thousandth of -> a : 1
thousandth of a -> we : 1
of a we -> multiply : 1
of a we -> would : 1
a we multiply -> the : 1
we multiply the -> is : 1
multiply the is -> getter : 1
the is getter -> function : 1
is getter function -> to : 1
getter function to -> the : 1
to the with -> which : 1
to the with -> and : 1
the with which -> is : 1
is a type -> alias : 1
a type alias -> for : 1
a type alias -> to : 1
type alias for -> represents : 1
alias for represents -> the : 1
for represents the -> fractional : 1
represents the fractional -> value : 1
the fractional value -> type : 1
fractional value type -> is : 1
value type is -> basically : 1
type is basically -> a : 1
basically a time -> which : 1
a time which -> represents : 1
a time which -> we : 1
time which represents -> the : 1
represents the type -> that : 1
the type that -> results : 1
type that results -> from : 1
that results from -> multiplying : 1
results from multiplying -> one : 1
from multiplying one -> ratio : 1
multiplying one ratio -> type : 1
one ratio type -> with : 1
ratio type with -> this : 1
type with this -> sounds : 1
with this sounds -> too : 1
this sounds too -> so : 1
sounds too so -> have : 1
too so have -> a : 1
so have a -> look : 1
at an in -> resulting : 1
an in resulting -> type : 1
in resulting type -> definitions : 1
resulting type definitions -> are : 1
type definitions are -> equivalent : 1
definitions are equivalent -> to : 1
are equivalent to -> the : 1
equivalent to the -> following : 2
equivalent to the -> construct : 1
the following seconds -> using : 1
following seconds using -> milliseconds : 1
using microseconds these -> types : 1
microseconds these types -> lined : 1
these types lined -> it : 1
types lined it -> is : 1
lined it is -> easy : 1
easy to convert -> between : 1
convert between if -> we : 1
between if we -> have : 1
have a time -> duration : 1
a time duration -> of : 1
duration of type -> we : 1
type we can -> transform : 1
type we can -> just : 1
type we can -> use : 1
can transform it -> to : 1
transform it to -> just : 1
transform it to -> for : 1
it to just -> by : 1
to just by -> feeding : 1
just by feeding -> it : 1
feeding it through -> the : 1
it through the -> constructor : 1
through the constructor -> of : 1
the other that -> other : 1
other that other -> tutorials : 1
that other tutorials -> or : 1
other tutorials or -> you : 1
tutorials or you -> might : 1
or you might -> run : 1
you might run -> across : 1
might run across -> whenever : 1
run across whenever -> time : 1
across whenever time -> durations : 1
whenever time durations -> are : 1
time durations are -> if : 1
durations are if -> we : 1
have a duration -> value : 1
a duration value -> of : 1
a duration value -> to : 1
duration value of -> type : 1
value of type -> and : 1
type and want -> to : 2
to transform it -> to : 1
it to for -> we : 1
to for we -> do : 1
for we do -> indeed : 1
for we do -> the : 1
we do indeed -> need : 1
do indeed need -> to : 1
indeed need to -> write : 1
to write because -> these : 1
write because these -> units : 1
because these units -> depend : 1
these units depend -> on : 1
units depend on -> transforming : 1
depend on transforming -> from : 1
on transforming from -> units : 1
transforming from units -> to : 1
from units to -> units : 1
units to units -> leads : 1
to units leads -> to : 1
units leads to -> in : 1
leads to in -> that : 1
to in that -> which : 1
in that which -> is : 1
that which is -> why : 1
why we need -> a : 1
need a for -> or : 1
a for or -> duration : 1
for or duration -> this : 1
or duration this -> is : 1
duration this is -> not : 1
is not between -> absolute : 1
not between absolute -> and : 1
relative times it -> was : 1
times it was -> quite : 1
it was quite -> a : 1
was quite a -> hassle : 1
quite a hassle -> to : 1
a hassle to -> take : 1
hassle to take -> the : 1
take the wall -> clock : 1
the wall clock -> time : 1
wall clock time -> and : 1
clock time and -> because : 1
time and because -> did : 1
and because did -> not : 1
because did not -> have : 1
did not have -> its : 1
did not have -> a : 1
not have its -> own : 1
have its own -> time : 1
its own time -> it : 1
own time it -> was : 1
time it was -> always : 1
time it was -> hours : 1
was always necessary -> to : 1
always necessary to -> call : 1
necessary to call -> functions : 1
to call functions -> of : 1
to call functions -> with : 1
to call functions -> that : 1
call functions of -> the : 1
of the c -> which : 1
of the c -> library : 1
the c which -> looks : 1
c which looks -> very : 1
which looks very -> considering : 1
which looks very -> complex : 1
looks very considering -> that : 1
very considering that -> such : 1
considering that such -> calls : 1
that such calls -> could : 1
such calls could -> be : 1
calls could be -> encapsulated : 1
could be encapsulated -> nicely : 1
be encapsulated nicely -> into : 1
encapsulated nicely into -> their : 1
nicely into their -> own : 1
their own the -> stl : 1
own the stl -> provides : 1
stl provides the -> which : 1
stl provides the -> following : 1
provides the which -> makes : 1
which makes tasks -> much : 1
makes tasks much -> easier : 1
tasks much easier -> to : 1
easier to this -> we : 1
take the local -> print : 1
the local print -> and : 1
local print and -> play : 1
print and play -> around : 1
and play around -> by : 1
play around by -> adding : 1
around by adding -> different : 1
by adding different -> time : 1
adding different time -> which : 1
different time which -> is : 1
time which is -> a : 1
a really comfortable -> thing : 1
really comfortable thing -> to : 1
comfortable thing to -> do : 1
do with to -> do : 1
going to save -> the : 1
save the current -> time : 1
the current time -> and : 2
the current time -> in : 1
the current time -> point : 1
current time and -> print : 2
time and print -> our : 1
time and print -> what : 1
and print our -> program : 1
print our program -> will : 1
program will add -> different : 1
will add different -> offsets : 1
add different offsets -> to : 1
different offsets to -> the : 1
offsets to the -> saved : 1
to the saved -> time : 1
the saved time -> point : 1
saved time point -> and : 1
time point and -> print : 1
point and print -> the : 1
the resulting time -> points : 1
resulting time points -> typical : 1
time points typical -> include : 1
points typical include -> lines : 1
typical include lines -> come : 1
include lines come -> we : 1
lines come we -> declare : 1
to print absolute -> time : 1
print absolute time -> these : 1
absolute time these -> will : 1
time these will -> come : 1
these will come -> along : 1
will come along -> in : 1
come along in -> the : 1
along in the -> form : 1
the type so -> we : 1
type so we -> will : 1
so we will -> just : 1
so we will -> add : 1
so we will -> have : 1
so we will -> go : 1
will just overload -> the : 1
just overload the -> output : 1
overload the output -> stream : 1
output stream operator -> for : 1
operator for are -> different : 1
for are different -> ways : 1
ways to print -> the : 1
print the date -> time : 1
the date time -> part : 1
date time part -> of : 1
time part of -> a : 1
of a time -> we : 1
of a time -> this : 1
a time we -> will : 1
time we will -> just : 1
time we will -> have : 1
time we will -> accumulate : 1
will just use -> the : 1
just use the -> standard : 1
use the standard -> we : 1
the standard we -> of : 1
standard we of -> also : 1
we of also -> print : 1
of also print -> only : 1
also print only -> the : 1
print only the -> only : 1
only the only -> the : 2
only the or -> whatever : 1
or whatever comes -> to : 1
whatever comes to -> our : 1
comes to our -> all : 1
to our all -> the : 1
our all the -> conversions : 1
all the conversions -> between : 1
the conversions between -> the : 1
conversions between the -> different : 1
between the different -> types : 1
the different types -> before : 1
different types before -> we : 1
types before we -> can : 1
can finally apply -> look : 1
finally apply look -> a : 1
apply look a -> bit : 1
a bit but -> we : 1
bit but we -> are : 1
are only doing -> this : 1
only doing this -> const : 1
doing this const -> const : 1
this const const -> auto : 1
const const auto -> tt : 2
const auto tt -> const : 2
auto tt const -> auto : 2
tt const auto -> loct : 2
const auto loct -> return : 2
auto loct return -> os : 2
loct return os -> are : 1
loct return os -> happens : 1
return os are -> already : 1
os are already -> stl : 1
are already stl -> type : 1
already stl type -> definitions : 1
stl type definitions -> for : 1
type definitions for -> and : 1
definitions for and -> so : 1
for and so -> we : 1
for and so -> this : 1
for and so -> on : 1
we will add -> type : 1
will add type -> this : 1
add type this -> is : 1
have to specialize -> the : 1
to specialize the -> template : 1
specialize the template -> by : 1
the template by -> referring : 1
template by referring -> to : 1
referring to multiply -> with : 1
to multiply with -> because : 1
multiply with because -> a : 1
with because a -> full : 1
because a full -> day : 1
a full day -> has : 1
full day has -> using : 1
day has using -> days : 1
has using days -> order : 1
using days order -> to : 1
days order to -> be : 1
able to express -> a : 1
to express a -> duration : 1
express a duration -> in : 1
a duration in -> multiples : 1
duration in multiples -> of : 1
in multiples of -> days : 1
multiples of days -> in : 1
of days in -> the : 1
days in the -> most : 1
in the most -> elegant : 1
most elegant we -> can : 1
elegant we can -> define : 1
elegant we can -> use : 2
can define our -> own : 1
our own literal -> we : 1
own literal we -> can : 1
literal we can -> write : 1
write to construct -> a : 1
construct a value -> that : 1
value that represents -> constexpr : 1
that represents constexpr -> days : 1
represents constexpr days -> operator : 1
constexpr days operator -> long : 1
days operator long -> long : 1
operator long long -> return : 1
long long return -> the : 1
long return the -> actual : 1
return the actual -> we : 1
we will take -> a : 1
will take a -> time : 1
take a time -> which : 1
time which we -> simply : 1
time which we -> do : 1
which we simply -> print : 1
we simply print -> this : 1
simply print this -> is : 1
print this is -> very : 1
very easy and -> we : 1
easy and we -> already : 1
and we already -> implemented : 1
we already implemented -> the : 1
already implemented the -> right : 1
implemented the right -> operator : 1
implemented the right -> overload : 1
the right operator -> overload : 1
right operator overload -> for : 1
operator overload for -> int : 1
overload for int -> auto : 1
for int auto -> now : 1
int auto now -> cout : 1
auto now cout -> current : 1
now cout current -> date : 1
cout current date -> and : 1
current date and -> time : 2
date and time -> is : 2
and time is -> now : 1
and time is -> fri : 1
time is now -> saved : 1
now saved the -> current : 1
saved the current -> time : 1
current time in -> we : 1
time in we -> can : 1
in we can -> add : 1
can add arbitrary -> durations : 1
add arbitrary durations -> to : 1
arbitrary durations to -> it : 1
durations to it -> and : 1
to it and -> print : 1
it and print -> those : 1
and print those -> add : 1
print those add -> hours : 1
those add hours -> to : 1
add hours to -> the : 1
hours to the -> current : 1
to the current -> time : 1
and print what -> time : 1
print what time -> we : 1
print what time -> it : 1
what time we -> will : 1
will have in -> cout : 1
have in cout -> it : 1
in cout it -> will : 1
cout it will -> be : 1
will be declaring -> that : 1
be declaring that -> we : 1
declaring that we -> use : 1
namespace by we -> unlock : 1
by we unlock -> all : 1
we unlock all -> the : 1
unlock all the -> existing : 1
the existing duration -> literals : 1
existing duration literals -> for : 1
duration literals for -> and : 1
literals for and -> so : 1
we can elegantly -> print : 1
can elegantly print -> what : 1
elegantly print what -> time : 1
what time it -> was : 1
it was hours -> and : 1
was hours and -> minutes : 1
hours and minutes -> or : 1
hours and minutes -> it : 2
and minutes or -> days : 1
minutes or days -> using : 1
or days using -> namespace : 1
days using namespace -> cout : 1
using namespace cout -> hours : 1
namespace cout hours -> and : 1
cout hours and -> minutes : 1
and minutes it -> was : 2
minutes it was -> week : 1
minutes it was -> fri : 1
it was week -> it : 1
was week it -> was : 1
week it was -> and : 1
week it was -> fri : 1
it was and -> running : 1
was and running -> the : 1
the following because -> we : 1
the following because -> of : 1
following because we -> used : 1
because we used -> as : 1
we used as -> the : 1
as the format -> string : 1
the format string -> for : 1
format string for -> time : 1
string for time -> we : 1
for time we -> get : 1
for time we -> need : 1
time we get -> a : 1
get a pretty -> complete : 1
a pretty complete -> description : 1
pretty complete description -> in : 1
complete description in -> a : 1
a specific by -> playing : 1
specific by playing -> around : 1
around with different -> format : 1
with different format -> we : 1
different format we -> can : 1
format we can -> get : 1
we can get -> it : 1
we can get -> to : 1
can get it -> in : 1
get it in -> any : 1
in any format -> we : 1
format we note -> that : 1
that the time -> format : 1
the time format -> is : 1
time format is -> not : 1
format is not -> hours : 1
is not hours -> but : 1
not hours but -> hours : 1
hours but hours -> because : 1
but hours because -> the : 1
hours because the -> app : 1
because the app -> is : 1
the app is -> run : 1
app is run -> on : 1
is run on -> a : 1
run on a -> european : 1
on a european -> the : 1
a european the -> current : 1
european the current -> date : 1
the current date -> and : 1
time is fri -> may : 1
is fri may -> in : 1
fri may in -> it : 1
may in it -> will : 1
in it will -> be : 1
will be sat -> hours : 1
be sat hours -> and : 1
sat hours and -> minutes : 1
it was fri -> week : 1
it was fri -> apr : 1
was fri week -> it : 1
fri week it -> was : 1
was fri apr -> it : 1
fri apr it -> obtained : 1
apr it obtained -> the : 1
it obtained the -> current : 1
obtained the current -> time : 1
current time point -> from : 1
time point from -> this : 1
point from this -> stl : 1
from this stl -> clock : 1
this stl clock -> class : 1
stl clock class -> is : 1
clock class is -> the : 1
class is the -> only : 1
the only one -> that : 1
only one that -> can : 1
one that can -> transform : 1
that can transform -> its : 1
can transform its -> time : 1
transform its time -> point : 1
its time point -> values : 1
time point values -> to : 1
point values to -> a : 1
values to a -> time : 1
to a time -> structure : 1
to a time -> point : 1
a time structure -> that : 1
time structure that -> can : 1
structure that can -> as : 1
that can as -> a : 1
can as a -> time : 1
as a time -> description : 1
a time description -> order : 1
time description order -> to : 1
description order to -> print : 1
to print such -> time : 1
to print such -> an : 1
print such time -> we : 1
such time we -> implemented : 1
time we implemented -> for : 1
we implemented for -> output : 1
implemented for output -> const : 1
for output const -> const : 1
output const const -> auto : 1
return os happens -> here : 1
os happens here -> is : 1
happens here is -> that : 1
that we transform -> from : 1
we transform from -> to : 1
transform from to -> values : 1
from to values -> of : 1
to values of -> this : 1
of this type -> can : 1
of this type -> express : 1
of this type -> as : 1
this type can -> be : 1
can be transformed -> to : 1
be transformed to -> a : 1
to a local -> wall : 1
a local wall -> clock : 1
local wall clock -> relevant : 1
wall clock relevant -> time : 1
clock relevant time -> which : 1
relevant time which -> we : 1
we do with -> this : 1
do with this -> function : 1
with this function -> returns : 1
this function returns -> us : 2
us a pointer -> to : 1
to a converted -> value : 1
a converted value -> worry : 1
converted value worry -> about : 1
value worry about -> the : 1
worry about the -> maintenance : 1
about the maintenance -> of : 1
the maintenance of -> the : 1
maintenance of the -> memory : 1
of the memory -> behind : 1
the memory behind -> this : 1
memory behind this -> is : 1
is a static -> object : 1
is a static -> string : 1
a static object -> not : 1
static object not -> allocated : 1
object not allocated -> on : 1
not allocated on -> the : 1
can now finally -> function : 1
now finally function -> accepts : 1
finally function accepts -> such : 1
function accepts such -> an : 1
accepts such an -> object : 1
an object together -> with : 1
object together with -> a : 1
with a time -> format : 1
a time format -> displays : 1
time format displays -> a : 1
format displays a -> standard : 1
displays a standard -> such : 1
standard such mar -> could : 1
such mar could -> also : 1
mar could also -> have : 1
also have written -> then : 1
have written then -> the : 1
written then the -> program : 1
then the program -> would : 1
then the program -> aborts : 1
the program would -> have : 1
program would have -> printed : 1
would have printed -> the : 1
have printed the -> time : 1
printed the time -> in : 1
the time in -> the : 1
the whole list -> of : 1
the whole list -> in : 1
whole list of -> existing : 1
list of existing -> format : 1
of existing format -> string : 1
existing format string -> modifiers : 1
format string modifiers -> for : 1
string modifiers for -> time : 1
modifiers for time -> is : 1
for time is -> very : 1
time is very -> but : 1
is very but -> it : 1
very but it -> is : 1
it is nicely -> documented : 1
is nicely documented -> to : 1
nicely documented to -> extent : 1
documented to extent -> in : 1
to extent in -> the : 1
extent in the -> online : 1
in the online -> from : 1
the online from -> we : 1
online from we -> also : 1
from we also -> added : 1
we also added -> time : 1
also added time -> offsets : 1
added time offsets -> to : 1
time offsets to -> our : 1
offsets to our -> time : 1
to our time -> this : 1
our time this -> is : 1
we can express -> time : 1
we can express -> that : 1
we can express -> this : 1
can express time -> such : 1
express time such -> hours : 1
time such hours -> and : 1
such hours and -> as : 1
hours and as -> namespace : 1
and as namespace -> already : 1
as namespace already -> provides : 1
namespace already provides -> handy : 1
already provides handy -> type : 1
provides handy type -> literals : 1
handy type literals -> for : 1
type literals for -> hours : 1
literals for hours -> minutes : 1
for hours minutes -> seconds : 1
hours minutes seconds -> milliseconds : 1
minutes seconds milliseconds -> microseconds : 1
seconds milliseconds microseconds -> and : 1
milliseconds microseconds and -> nanoseconds : 1
microseconds and nanoseconds -> such : 1
and nanoseconds such -> a : 1
nanoseconds such a -> duration : 1
such a duration -> value : 1
duration value to -> a : 1
value to a -> time : 1
a time point -> value : 1
time point value -> creates : 1
time point value -> because : 1
point value creates -> a : 1
value creates a -> new : 1
creates a new -> time : 1
a new time -> point : 1
new time point -> value : 1
point value because -> these : 1
value because these -> types : 1
because these types -> have : 1
types have the -> right : 1
have the right -> and : 1
right and which -> is : 1
it is so -> simple : 2
is so simple -> to : 2
so simple to -> add : 1
so simple to -> just : 1
simple to add -> and : 1
to add and -> display : 1
add and display -> offsets : 1
and display offsets -> in : 1
display offsets in -> signalizing : 1
offsets in signalizing -> failure : 1
in signalizing failure -> with : 1
failure with a -> program : 1
with a program -> communicates : 1
a program communicates -> with : 1
program communicates with -> the : 1
communicates with the -> outside : 1
with the outside -> world : 1
the outside world -> and : 1
outside world and -> relies : 1
world and relies -> on : 1
and relies on -> values : 1
relies on values -> it : 1
on values it -> gets : 1
values it gets -> from : 1
it gets from -> then : 1
gets from then -> all : 1
from then all -> kinds : 1
then all kinds -> of : 1
kinds of failures -> can : 1
of failures can -> means : 1
failures can means -> that : 1
can means that -> whenever : 1
means that whenever -> we : 1
whenever we write -> a : 1
function that ought -> to : 1
that ought to -> return : 1
that ought to -> be : 1
ought to return -> a : 1
to return a -> but : 1
return a but -> that : 1
return a but -> we : 1
a but that -> can : 1
a but that -> could : 1
but that can -> also : 1
that can also -> possibly : 1
can also possibly -> then : 1
can also possibly -> if : 1
also possibly then -> this : 1
possibly then this -> must : 1
then this must -> be : 1
this must be -> reflected : 1
must be reflected -> in : 1
be reflected in -> some : 1
reflected in some -> change : 1
in some change -> of : 1
some change of -> the : 1
change of the -> function : 1
function we have -> several : 1
we have several -> see : 1
have several see -> how : 1
several see how -> we : 1
how we the -> interface : 1
we the interface -> of : 1
interface of a -> function : 1
function that a -> but : 1
that a but -> that : 1
but that could -> also : 1
that could also -> a : 1
could also a -> return : 1
also a return -> value : 1
a return value -> and : 1
a return value -> of : 1
return value and -> output : 1
value and output -> a : 1
output a pointer -> a : 1
a pointer a -> smart : 1
pointer a smart -> that : 1
a smart that -> can : 1
smart that can -> be : 1
can be set -> to : 1
be set to -> if : 1
to if there -> is : 1
is a an -> exception : 1
a an exception -> in : 1
exception in the -> case : 1
case of failure -> and : 1
of failure and -> leave : 1
failure and leave -> the : 1
and leave the -> function : 1
leave the function -> signature : 1
the function signature -> very : 1
the function signature -> deleter : 1
function signature very -> these : 1
signature very these -> approaches : 1
very these approaches -> have : 1
these approaches have -> different : 1
approaches have different -> advantages : 1
have different advantages -> and : 1
different advantages and -> since : 1
advantages and since -> there : 1
and since there -> is : 1
since there is -> a : 1
new type be -> used : 1
type be used -> to : 1
used to solve -> such : 1
to solve such -> a : 1
solve such a -> problem : 1
such a problem -> in : 1
a problem in -> a : 1
problem in a -> different : 1
a different the -> notion : 1
different the notion -> of : 1
of an optional -> value : 1
of an optional -> can : 1
an optional value -> comes : 1
an optional value -> even : 1
optional value comes -> from : 1
value comes from -> purely : 1
comes from purely -> functional : 1
from purely functional -> programming : 1
purely functional programming -> languages : 1
functional programming languages -> they : 1
programming languages they -> are : 1
languages they are -> sometimes : 1
are sometimes called -> can : 1
sometimes called can -> lead : 1
called can lead -> to : 1
lead to very -> elegant : 1
very elegant can -> wrap : 1
elegant can wrap -> around : 1
can wrap around -> our : 1
wrap around our -> own : 1
around our own -> types : 1
own types in -> order : 1
order to signal -> in : 1
to signal in -> this : 1
signal in this -> we : 1
we will learn -> how : 1
will learn how -> to : 1
program that reads -> integers : 1
that reads integers -> from : 1
reads integers from -> the : 1
from the sums -> them : 1
the sums them -> because : 1
sums them because -> the : 1
them because the -> user : 1
because the user -> can : 1
because the user -> might : 1
user can always -> input : 1
can always input -> random : 1
always input random -> things : 1
input random things -> instead : 1
random things instead -> of : 1
things instead of -> we : 1
of we will -> see : 2
of we will -> realize : 1
see how can -> improve : 1
how can improve -> our : 1
improve our error -> we : 1
our error we -> include : 1
error we include -> all : 1
namespace define an -> integer : 1
define an integer -> contains : 1
an integer contains -> a : 1
integer contains a -> does : 1
contains a does -> exactly : 1
a does exactly -> by : 1
does exactly by -> wrapping : 1
exactly by wrapping -> any : 1
by wrapping any -> type : 1
wrapping any type -> into : 1
any type into -> we : 1
type into we -> give : 1
into we give -> it : 1
it an additional -> possible : 1
an additional possible -> that : 1
additional possible that -> it : 1
possible that it -> currently : 1
that it currently -> has : 1
it currently has -> using : 1
currently has using -> oint : 1
has using oint -> having : 1
using oint having -> defined : 1
oint having defined -> an : 1
having defined an -> optional : 1
defined an optional -> integer : 1
an optional integer -> we : 1
an optional integer -> is : 1
an optional integer -> follows : 1
an optional integer -> type : 1
optional integer we -> can : 1
integer we can -> express : 1
can express that -> a : 1
express that a -> function : 1
that a function -> that : 1
function that usually -> returns : 1
that usually returns -> an : 1
usually returns an -> integer : 1
returns an integer -> can : 1
an integer can -> also : 1
integer can also -> possibly : 1
also possibly if -> we : 1
possibly if we -> take : 1
if we take -> an : 1
we take an -> integer : 1
take an integer -> from : 1
integer from user -> this : 1
from user this -> can : 1
user this can -> possibly : 1
this can possibly -> fail : 1
can possibly fail -> because : 1
possibly fail because -> the : 1
fail because the -> user : 1
fail because the -> mutex : 1
user might not -> always : 1
might not always -> enter : 1
not always enter -> an : 1
always enter an -> integer : 1
enter an integer -> even : 1
an integer even -> though : 1
integer even though -> we : 1
even though we -> asked : 1
though we asked -> him : 1
we asked him -> to : 1
asked him to -> do : 1
him to do -> returning : 1
to do returning -> an : 1
do returning an -> optional : 1
returning an optional -> integer : 1
optional integer is -> perfect : 1
integer is perfect -> in : 1
is perfect in -> this : 1
perfect in this -> if : 1
this if reading -> an : 1
if reading an -> integer : 1
reading an integer -> we : 1
an integer we -> feed : 1
integer we feed -> it : 1
return a default -> constructed : 1
default constructed which -> signals : 1
constructed which signals -> failure : 1
which signals failure -> or : 1
signals failure or -> oint : 1
failure or oint -> int : 1
or oint int -> if : 1
oint int if -> return : 2
int if return -> return : 2
return return can -> do : 1
return can do -> more : 1
can do more -> than : 1
do more than -> returning : 1
more than returning -> integers : 1
than returning integers -> from : 1
returning integers from -> functions : 1
integers from functions -> that : 1
from functions that -> can : 1
functions that can -> what : 1
functions that can -> be : 1
that can what -> if : 1
can what if -> we : 1
of two optional -> this : 1
two optional this -> can : 1
optional this can -> only : 1
this can only -> lead : 1
can only lead -> to : 1
only lead to -> a : 1
to a real -> numeric : 1
a real numeric -> both : 1
real numeric both -> the : 1
numeric both the -> operands : 1
both the operands -> contain : 1
the operands contain -> an : 1
operands contain an -> actual : 1
contain an actual -> in : 1
an actual in -> any : 1
actual in any -> other : 1
any other we -> return : 1
other we return -> an : 1
we return an -> empty : 1
optional this function -> needs : 1
this function needs -> a : 1
function needs a -> little : 1
needs a little -> more : 1
a little more -> by : 1
little more by -> implicitly : 1
more by implicitly -> transforming : 1
by implicitly transforming -> the : 1
implicitly transforming the -> and : 1
transforming the and -> to : 1
and to boolean -> expressions : 1
to boolean expressions -> writing : 1
boolean expressions writing -> and : 1
expressions writing and -> we : 1
writing and we -> get : 1
writing and we -> can : 1
we get to -> know : 1
we get to -> execute : 1
we get to -> see : 1
get to know -> contain : 1
get to know -> all : 1
get to know -> the : 1
to know contain -> actual : 1
know contain actual -> if : 1
contain actual if -> they : 1
actual if they -> we : 1
if they we -> can : 1
they we can -> access : 1
can access them -> like : 1
access them like -> pointers : 1
them like pointers -> or : 1
like pointers or -> iterators : 1
pointers or iterators -> by : 1
or iterators by -> simply : 1
iterators by simply -> dereferencing : 1
by simply dereferencing -> them : 1
simply dereferencing them -> with : 1
dereferencing them with -> and : 1
them with and -> oint : 1
with and oint -> oint : 1
and oint oint -> if : 1
oint oint if -> return : 1
oint if return -> return : 1
return return a -> normal : 1
return a normal -> integer : 1
a normal integer -> to : 1
normal integer to -> an : 1
integer to an -> optional : 1
to an optional -> integer : 1
optional integer follows -> the : 1
integer follows the -> same : 1
follows the same -> oint : 1
the same oint -> int : 1
same oint int -> if : 1
return return now -> write : 1
return now write -> a : 1
now write a -> program : 1
a program something -> with : 1
program something with -> optional : 1
something with optional -> we : 1
with optional we -> let : 1
optional we let -> the : 1
user enter two -> int : 1
two int cout -> enter : 1
cout enter auto -> a : 1
enter auto a -> auto : 1
b we add -> those : 1
we add those -> input : 1
add those input -> numbers : 1
those input numbers -> and : 1
input numbers and -> additionally : 1
numbers and additionally -> add : 1
and additionally add -> the : 1
additionally add the -> value : 1
add the value -> to : 1
value to their -> since : 1
to their since -> and : 1
their since and -> are : 1
since and are -> optional : 1
and are optional -> will : 1
are optional will -> also : 1
optional will also -> be : 1
also be an -> optional : 1
be an optional -> integer : 1
optional integer type -> auto : 1
integer type auto -> sum : 1
type auto sum -> b : 1
auto sum b -> contain : 1
sum b contain -> a : 1
b contain a -> then : 1
contain a then -> cannot : 1
a then cannot -> possibly : 1
then cannot possibly -> contain : 1
cannot possibly contain -> a : 1
possibly contain a -> value : 1
contain a value -> the : 1
a value the -> nice : 1
value the nice -> thing : 1
nice thing about -> our : 1
nice thing about -> the : 2
thing about our -> optional : 1
about our optional -> integers : 1
our optional integers -> now : 1
optional integers now -> is : 1
integers now is -> that : 1
now is that -> we : 1
need to explicitly -> check : 1
to explicitly check -> and : 1
explicitly check and -> happens : 1
check and happens -> when : 1
and happens when -> we : 1
happens when we -> sum : 1
when we sum -> up : 1
sum up empty -> optionals : 1
up empty optionals -> is : 1
empty optionals is -> perfectly : 1
optionals is perfectly -> sane : 1
perfectly sane and -> defined : 1
sane and defined -> behavior : 1
and defined behavior -> because : 1
defined behavior because -> we : 1
behavior because we -> defined : 1
because we defined -> in : 1
we defined in -> a : 1
defined in a -> safe : 1
in a safe -> way : 1
a safe way -> for : 1
safe way for -> those : 1
way for those -> this : 1
for those this -> we : 1
those this we -> can : 1
we can arbitrarily -> add : 1
can arbitrarily add -> many : 1
arbitrarily add many -> possibly : 1
add many possibly -> empty : 1
many possibly empty -> optional : 1
possibly empty optional -> and : 1
empty optional and -> only : 1
optional and only -> need : 1
and only need -> to : 1
to check the -> resulting : 1
to check the -> folder : 1
check the resulting -> optional : 1
the resulting optional -> if : 1
resulting optional if -> it : 1
optional if it -> contains : 1
if it contains -> a : 1
contains a then -> we : 1
a then we -> can : 1
a then we -> have : 1
we can safely -> access : 1
can safely access -> and : 1
safely access and -> print : 1
access and print -> if : 1
and print if -> cout : 1
print if cout -> the : 1
print if cout -> it : 1
if cout the -> user : 1
if cout the -> main : 1
cout the user -> we : 1
user we error -> else : 1
we error else -> cout : 1
error else cout -> the : 1
else cout the -> input : 1
cout the input -> was : 1
the input was -> else : 1
the input was -> something : 1
input was else -> than : 1
was else than -> when : 1
else than when -> we : 1
than when we -> compile : 1
the following please -> enter : 1
the following please -> consult : 1
following please enter -> the : 1
enter the program -> again : 1
the program again -> and : 1
program again and -> entering : 1
again and entering -> something : 1
and entering something -> yields : 1
entering something yields -> the : 1
something yields the -> error : 1
yields the error -> message : 1
error message we -> prepared : 1
message we prepared -> for : 1
we prepared for -> this : 1
prepared for this -> please : 1
for this please -> enter : 1
this please enter -> z : 1
please enter z -> the : 1
enter z the -> input : 1
z the input -> was : 1
input was something -> else : 1
was something else -> than : 1
else than it -> with : 1
than it with -> is : 1
it with is -> generally : 1
with is generally -> very : 1
is generally very -> simple : 1
generally very simple -> and : 1
simple and if -> we : 1
want to attach -> the : 1
to attach the -> notion : 1
attach the notion -> failure : 1
the notion failure -> or : 1
notion failure or -> optionality : 1
failure or optionality -> to : 1
or optionality to -> any : 1
optionality to any -> type : 1
to any type -> we : 1
any type we -> can : 1
just wrap it -> into : 1
it into and -> we : 1
into and we -> get : 1
into and we -> are : 1
get such a -> value : 1
such a value -> from : 1
value from we -> have : 1
from we have -> to : 1
from we have -> seen : 1
have to check -> is : 1
have to check -> them : 1
to check is -> in : 1
to check is -> if : 1
check is in -> the : 1
in the or -> contains : 1
the or contains -> a : 1
or contains a -> real : 1
contains a real -> function : 1
a real function -> does : 1
real function does -> that : 1
function does that -> for : 1
does that for -> if : 1
that for if -> it : 1
for if it -> returns : 1
if it returns -> we : 1
returns we may -> access : 1
we may access -> the : 1
may access the -> accessing : 1
access the accessing -> the : 1
the accessing the -> value : 1
accessing the value -> of : 1
value of an -> optional : 1
an optional can -> be : 1
optional can be -> done : 1
done with of -> always : 1
with of always -> writing : 1
of always writing -> and : 1
always writing and -> we : 1
can also write -> and : 1
also write and -> defines : 1
write and defines -> explicit : 1
and defines explicit -> conversion : 1
defines explicit conversion -> to : 1
explicit conversion to -> and : 1
conversion to and -> in : 1
and in such -> a : 1
way that dealing -> with : 1
that dealing with -> an : 1
dealing with an -> optional : 1
with an optional -> type : 1
an optional type -> is : 1
optional type is -> similar : 1
type is similar -> with : 1
is similar with -> a : 1
similar with a -> handy : 1
with a handy -> operator : 1
a handy operator -> helper : 1
handy operator helper -> good : 1
operator helper good -> to : 1
helper good to -> know : 1
to know is -> the : 1
know is the -> overload : 1
is the overload -> of : 1
the overload of -> if : 1
the overload of -> the : 1
the overload of -> for : 1
overload of if -> we : 1
have a foo -> int : 1
a foo int -> string : 1
foo int string -> type : 1
foo int string -> float : 1
int string type -> and : 1
string type and -> want : 1
want to access -> one : 1
want to access -> the : 1
to access one -> of : 1
access one of -> its : 1
one of its -> members : 1
of its members -> through : 1
its members through -> an : 1
members through an -> then : 1
through an then -> we : 1
can write or -> of : 1
write or of -> we : 1
or of we -> should : 1
should first check -> actually : 1
first check actually -> has : 1
check actually has -> a : 1
actually has a -> we : 1
has a we -> try : 1
a we try -> to : 1
try to access -> an : 1
try to access -> their : 1
access an optional -> value : 1
optional value even -> though : 1
value even though -> it : 1
even though it -> does : 1
though it does -> not : 1
have a then -> it : 1
then it will -> throw : 1
then it will -> always : 1
then it will -> capture : 1
it will throw -> this : 1
it will throw -> an : 1
will throw this -> it : 1
throw this it -> is : 1
possible to mess -> around : 1
to mess around -> with : 1
mess around with -> a : 1
around with a -> lot : 1
lot of optional -> values : 1
of optional values -> without : 1
optional values without -> always : 1
values without always -> checking : 1
without always checking -> using : 1
always checking using -> a : 1
checking using a -> we : 1
using a we -> could : 1
a we could -> write : 1
a we could -> surely : 1
we could write -> code : 1
could write code -> in : 1
write code in -> the : 1
the following enter -> try : 1
following enter try -> cout : 1
enter try cout -> catch : 1
try cout catch -> cout : 1
cout catch cout -> you : 1
catch cout you -> did : 1
you did not -> enter : 1
did not enter -> gimmick : 1
not enter gimmick -> of : 1
enter gimmick of -> is : 1
gimmick of is -> if : 1
of is if -> we : 1
want to take -> an : 1
to take an -> value : 1
take an value -> and : 1
an value and -> fall : 1
value and fall -> back : 1
to a default -> value : 1
default value if -> it : 1
value if it -> is : 1
in the empty -> this : 1
the empty this -> is : 1
empty this is -> of : 1
this is of -> does : 1
is of does -> this : 1
of does this -> job : 1
does this job -> in : 1
this job in -> one : 1
job in one -> concise : 1
in one concise -> where : 1
one concise where -> is : 1
concise where is -> the : 1
is the fallback -> default : 1
the fallback default -> functions : 1
fallback default functions -> on : 1
default functions on -> the : 1
stl provides this -> type : 1
provides this type -> allows : 1
this type allows -> us : 1
type allows us -> to : 1
us to sporadically -> multiple : 1
to sporadically multiple -> values : 1
sporadically multiple values -> into : 1
multiple values into -> a : 1
values into a -> single : 1
a single variable -> and : 1
single variable and -> reach : 1
variable and reach -> the : 1
and reach the -> notion : 1
reach the notion -> of : 1
notion of tuples -> has : 1
of tuples has -> been : 1
tuples has been -> there : 1
long time in -> a : 1
time in a -> lot : 1
time in a -> different : 1
lot of programming -> and : 1
of programming and -> some : 1
programming and some -> recipes : 1
and some recipes -> in : 1
some recipes in -> this : 1
this book are -> already : 1
book are already -> devoted : 1
are already devoted -> to : 1
already devoted to -> this : 1
devoted to this -> it : 1
it is extremely -> versatile : 1
is extremely versatile -> to : 1
extremely versatile to -> we : 1
versatile to we -> sometimes : 1
to we sometimes -> end : 1
we sometimes end -> up : 1
sometimes end up -> with : 1
up with values -> bundled : 1
with values bundled -> up : 1
values bundled up -> in : 1
bundled up in -> a : 1
in a then -> need : 1
in a then -> it : 1
a then need -> to : 1
need to call -> functions : 1
need to call -> the : 1
need to call -> this : 1
need to call -> for : 1
need to call -> where : 1
need to call -> both : 1
call functions with -> their : 1
functions with their -> individual : 1
with their individual -> unpacking : 1
their individual unpacking -> the : 1
individual unpacking the -> members : 1
unpacking the members -> individually : 1
the members individually -> for : 1
members individually for -> every : 1
individually for every -> function : 1
for every function -> argument : 1
every function argument -> is : 1
function argument is -> very : 1
argument is very -> tedious : 1
is very tedious -> if : 1
very tedious if -> we : 1
tedious if we -> introduce : 1
tedious if we -> have : 1
if we introduce -> a : 1
we introduce a -> typo : 1
introduce a typo -> the : 1
a typo the -> tedious : 1
typo the tedious -> form : 1
the tedious form -> looks : 1
tedious form looks -> like : 1
form looks like -> this : 1
looks like this -> learn : 1
like this learn -> how : 1
this learn how -> to : 2
how to pack -> and : 1
to pack and -> unpack : 1
pack and unpack -> values : 1
and unpack values -> to : 1
unpack values to -> and : 1
values to and -> from : 2
and from tuples -> in : 1
from tuples in -> an : 1
tuples in an -> elegant : 1
tuples in an -> interleaved : 1
in an elegant -> in : 1
an elegant in -> order : 1
elegant in order -> to : 1
to call some -> functions : 1
call some functions -> that : 1
functions that know -> about : 1
functions that know -> nothing : 1
that know about -> to : 1
know about to -> do : 1
about to do -> are : 1
a program and -> unpacks : 1
program and unpacks -> values : 1
and unpacks values -> to : 1
unpacks values to -> and : 1
and from we -> will : 1
from we will -> see : 1
how to call -> functions : 1
call functions that -> know : 1
that know nothing -> about : 1
know nothing about -> tuples : 1
nothing about tuples -> with : 1
about tuples with -> values : 1
tuples with values -> from : 1
with values from -> we : 1
values from we -> include : 1
values from we -> can : 1
from we include -> a : 1
we include a -> lot : 1
include a lot -> of : 1
of headers and -> declare : 1
namespace first define -> a : 1
that takes multiple -> parameters : 1
takes multiple parameters -> describing : 1
multiple parameters describing -> a : 1
parameters describing a -> student : 1
describing a student -> and : 1
a student and -> prints : 1
student and prints -> of : 1
and prints of -> or : 1
prints of or -> interfaces : 1
of or interfaces -> look : 1
or interfaces look -> static : 1
interfaces look static -> void : 1
look static void -> const : 1
static void const -> string : 1
const string double -> cout : 1
string double cout -> id : 1
double cout id -> gpa : 1
cout id gpa -> the : 1
id gpa the -> actual : 1
gpa the actual -> we : 1
actual we define -> a : 1
define a tuple -> type : 1
a tuple type -> on : 1
tuple type on -> the : 1
type on the -> fill : 1
on the fill -> it : 1
the fill it -> with : 1
it with meaningful -> student : 1
with meaningful student -> int : 1
meaningful student int -> using : 1
student int using -> student : 1
int using student -> student : 1
using student student -> john : 1
student student john -> order : 1
student john order -> to : 1
john order to -> print : 1
print such an -> we : 1
such an we -> can : 1
we can decompose -> it : 1
can decompose it -> to : 1
decompose it to -> its : 1
it to its -> individual : 1
to its individual -> members : 1
its individual members -> and : 1
individual members and -> call : 1
members and call -> with : 1
and call with -> those : 1
with those individual -> const : 1
those individual const -> auto : 1
individual const auto -> cout : 1
auto cout create -> a : 1
cout create a -> whole : 1
create a whole -> students : 1
a whole students -> in : 1
whole students in -> the : 1
students in the -> form : 1
of an initializer -> list : 1
list of student -> auto : 1
of student auto -> can : 1
student auto can -> still : 1
auto can still -> relatively : 1
can still relatively -> comfortably : 1
still relatively comfortably -> print : 1
relatively comfortably print -> them : 1
comfortably print them -> but : 1
print them but -> in : 1
them but in -> order : 1
but in order -> to : 1
order to decompose -> the : 1
to decompose the -> we : 1
decompose the we -> need : 1
to care how -> many : 1
care how many -> elements : 1
how many elements -> such : 1
many elements such -> tuples : 1
elements such tuples -> if : 1
such tuples if -> we : 1
tuples if we -> have : 1
have to write -> such : 1
have to write -> again : 1
have to write -> different : 1
to write such -> then : 1
to write such -> even : 1
write such then -> we : 1
such then we -> will : 1
will also have -> to : 1
also have to -> restructure : 1
have to restructure -> it : 1
to restructure it -> in : 1
restructure it in -> case : 1
it in case -> the : 1
case the function -> call : 1
function call interface -> for : 1
call interface for -> auto : 1
interface for auto -> cout : 1
auto cout can -> do : 1
cout can do -> without : 1
can do without -> even : 1
do without even -> knowing : 1
even knowing the -> argument : 1
knowing the argument -> types : 1
the argument types -> of : 1
argument types of -> or : 1
types of or -> the : 1
of or the -> number : 1
or the number -> of : 1
number of members -> in : 1
of members in -> a : 1
members in a -> student : 1
in a student -> we : 1
a student we -> can : 1
student we can -> directly : 1
we can directly -> forward : 1
we can directly -> use : 1
can directly forward -> the : 1
directly forward the -> content : 1
forward the content -> to : 1
function using this -> function : 1
function pointer or -> a : 2
pointer or a -> function : 1
pointer or a -> callable : 1
or a function -> object : 1
and a then -> the : 1
and a then -> checks : 1
a then the -> tuple : 1
then the tuple -> in : 1
the tuple in -> order : 1
tuple in order -> to : 1
with the tuple -> members : 1
the tuple members -> as : 1
tuple members as -> cout : 1
members as cout -> also : 1
as cout also -> works : 1
cout also works -> nicely : 1
works nicely in -> a : 1
nicely in a -> of : 1
a of for -> auto : 1
auto cout and -> running : 1
shows that both -> ways : 1
that both ways -> as : 1
both ways as -> we : 1
ways as we -> student : 1
as we student -> student : 1
we student student -> student : 1
student student student -> student : 5
student student student -> it : 1
student student it -> is : 1
student it is -> a : 1
is a helper -> that : 1
is a helper -> function : 1
a helper that -> helps : 1
helper that helps -> us : 1
that helps us -> work : 1
that helps us -> because : 1
helps us work -> more : 1
us work more -> agnostic : 1
work more agnostic -> about : 1
more agnostic about -> the : 1
agnostic about the -> types : 1
about the types -> we : 1
types we handle -> in : 1
we handle in -> our : 1
handle in our -> we : 1
our we have -> a : 2
have a tuple -> the : 1
a tuple the -> values : 1
tuple the values -> this : 1
the values this -> tuple : 1
values this tuple -> has : 1
this tuple has -> the : 1
tuple has the -> assume : 1
has the assume -> that : 1
the assume that -> we : 1
assume that we -> have : 1
have a the -> types : 1
a the types -> can : 1
the types can -> also : 1
types can also -> be : 1
also be we -> can : 1
be we can -> write : 1
can write which -> will : 1
write which will -> result : 1
a function does -> even : 1
function does even -> return : 1
does even return -> to : 1
even return to -> us : 1
return to us -> what : 1
to us what -> composing : 1
us what composing -> data : 1
what composing data -> structures : 1
structures with have -> a : 1
with have a -> look : 1
at a basic -> use : 1
a basic use -> case : 1
basic use case -> for : 1
case for tuples -> that : 1
for tuples that -> we : 1
tuples that we -> most : 1
that we most -> probably : 1
we most probably -> already : 1
most probably already -> we : 1
probably already we -> can : 1
we can structure -> as : 1
can structure as -> in : 1
structure as in -> order : 1
structure as in -> the : 1
order to just -> bundle : 1
to just bundle -> some : 1
just bundle some -> foo : 1
bundle some foo -> int : 1
some foo int -> string : 1
int string float -> of : 1
string float of -> defining : 1
float of defining -> a : 1
of defining a -> structure : 1
defining a structure -> as : 1
a structure as -> in : 1
a structure as -> a : 1
the preceding we -> can : 1
preceding we can -> also : 2
also define a -> foo : 1
define a foo -> can : 1
a foo can -> access : 1
foo can access -> its : 1
can access its -> items : 1
access its items -> using : 1
its items using -> the : 1
using the index -> number : 1
the index number -> of : 1
the index number -> is : 1
index number of -> the : 1
from the type -> in : 1
the type in -> order : 1
type in order -> to : 2
access the first -> member : 1
the first member -> of : 1
first member of -> a : 1
of a can -> use : 1
a can use -> access : 1
can use access -> the : 1
use access the -> second : 1
access the second -> member : 1
second member we -> and : 1
member we and -> so : 1
we and so -> if : 1
so if the -> index : 1
so if the -> call : 1
index number is -> too : 1
number is too -> then : 1
is too then -> the : 1
too then the -> compiler : 1
compiler will even -> safely : 1
will even safely -> error : 1
even safely error -> the : 1
safely error the -> we : 1
error the we -> have : 1
we have already -> used : 1
have already used -> the : 1
already used the -> decomposition : 1
used the decomposition -> capabilities : 1
the decomposition capabilities -> of : 1
decomposition capabilities of -> for : 1
capabilities of for -> they : 1
of for they -> allow : 1
for they allow -> us : 1
they allow us -> to : 1
allow us to -> decompose : 1
us to decompose -> a : 1
to decompose a -> tuple : 1
decompose a tuple -> quickly : 1
a tuple quickly -> by : 1
tuple quickly by -> just : 1
quickly by just -> writing : 1
by just writing -> order : 1
just writing order -> to : 1
writing order to -> access : 1
to access its -> individual : 1
access its individual -> and : 1
its individual and -> decomposing : 1
individual and decomposing -> single : 1
and decomposing single -> data : 1
decomposing single data -> structures : 1
single data structures -> the : 1
structures the only -> things : 1
the only things -> we : 1
only things we -> can : 1
things we can -> do : 1
can do with -> we : 1
do with we -> can : 1
can also concatenate -> or : 1
also concatenate or -> split : 1
concatenate or split -> or : 1
or split or -> do : 1
split or do -> all : 1
or do all -> kinds : 1
around with such -> capabilities : 1
with such capabilities -> in : 1
such capabilities in -> order : 1
capabilities in order -> to : 1
order to learn -> how : 1
order to learn -> the : 1
to learn how -> to : 2
that can print -> any : 2
can print any -> tuple : 2
print any tuple -> on : 1
print any tuple -> that : 1
any tuple on -> the : 1
tuple on the -> in : 1
the in addition -> to : 1
addition to we -> will : 1
addition to we -> instantiate : 1
addition to we -> define : 1
to we will -> write : 1
function that can -> tuples : 1
function that can -> print : 1
function that can -> be : 1
that can tuples -> need : 1
can tuples need -> to : 1
tuples need to -> include : 1
include a number -> of : 1
a number of -> headers : 1
a number of -> future : 1
number of headers -> then : 1
of headers then -> we : 1
headers then we -> declare : 1
namespace we will -> be : 1
will be dealing -> with : 1
be dealing with -> it : 1
dealing with it -> will : 1
will be interesting -> to : 1
be interesting to -> display : 1
interesting to display -> their : 1
to display their -> we : 1
display their we -> will : 1
their we will -> now : 1
we will now -> implement : 1
will now implement -> a : 1
implement a very -> generic : 1
very generic function -> that : 1
generic function that -> can : 1
any tuple that -> consists : 1
tuple that consists -> of : 1
that consists of -> printable : 1
that consists of -> minimal : 1
consists of printable -> the : 1
of printable the -> function : 1
printable the function -> accepts : 1
the function accepts -> an : 1
stream reference be -> used : 1
reference be used -> to : 1
used to do -> the : 1
used to do -> this : 1
do the actual -> and : 1
do the actual -> tuple : 1
the actual and -> a : 1
actual and a -> variadic : 1
and a variadic -> argument : 1
a variadic argument -> all : 1
variadic argument all -> the : 1
argument all the -> tuple : 1
all the tuple -> we : 1
the tuple we -> decompose : 1
tuple we decompose -> all : 1
we decompose all -> the : 1
decompose all the -> arguments : 1
all the arguments -> into : 1
all the arguments -> and : 1
the arguments into -> the : 1
arguments into the -> first : 1
into the first -> element : 1
the first element -> and : 1
the first element -> of : 1
first element and -> put : 1
element and put -> it : 1
and put it -> into : 1
into the and -> the : 1
which is stored -> in : 1
is stored in -> the : 1
the argument pack -> template : 1
argument pack template -> typename : 1
pack template typename -> void : 1
t const ts -> os : 2
const ts os -> there : 1
const ts os -> function : 1
ts os there -> are : 1
os there are -> arguments : 1
there are arguments -> left : 1
are arguments left -> in : 1
arguments left in -> the : 1
the parameter these -> are : 1
parameter these are -> printed : 1
these are printed -> interleaved : 1
are printed interleaved -> with : 1
printed interleaved with -> using : 1
interleaved with using -> the : 1
using the expansion -> about : 1
the expansion about -> this : 1
expansion about this -> trick : 1
about this trick -> in : 1
this trick in -> the : 1
trick in the -> can : 1
in the can -> now : 1
the can now -> print : 1
now print arbitrary -> sets : 1
print arbitrary sets -> of : 1
arbitrary sets of -> arguments : 1
sets of arguments -> by : 1
of arguments by -> writing : 1
arguments by writing -> for : 1
by writing for -> but : 1
writing for but -> nothing : 1
for but nothing -> to : 1
but nothing to -> do : 1
do with tuples -> in : 1
with tuples in -> order : 1
tuples in order -> to : 1
to print we -> overload : 1
to print we -> need : 1
print we overload -> the : 1
the stream output -> any : 1
stream output any -> case : 1
output any case -> of : 1
any case of -> tuples : 1
case of tuples -> by : 1
of tuples by -> implementing : 1
tuples by implementing -> a : 1
implementing a template -> function : 1
a template function -> that : 1
template function that -> matches : 1
function that matches -> on : 1
that matches on -> any : 1
matches on any -> tuple : 1
on any tuple -> template : 1
any tuple template -> const : 1
tuple template const -> it : 1
template const it -> gets : 1
const it gets -> a : 1
a little we -> first : 1
little we first -> use : 1
we first use -> a : 1
first use a -> lambda : 1
use a lambda -> expression : 1
expression that arbitrarily -> accepts : 1
that arbitrarily accepts -> many : 1
accepts many whenever -> it : 1
many whenever it -> is : 1
is it prepends -> the : 1
it prepends the -> to : 1
prepends the to -> those : 1
the to those -> then : 1
to those then -> calls : 1
those then calls -> with : 1
then calls with -> the : 1
with the resulting -> new : 1
with the resulting -> program : 1
the resulting new -> list : 1
resulting new list -> of : 1
of this means -> that : 1
that a call -> to : 1
a call to -> leads : 1
call to leads -> to : 1
to leads to -> auto : 1
leads to auto -> auto : 1
to auto auto -> we : 1
auto auto we -> can : 1
the actual tuple -> unpacking : 1
actual tuple unpacking -> we : 1
tuple unpacking we -> use : 1
unpacking we use -> to : 1
use to unpack -> the : 1
unpack the all -> values : 1
the all values -> will : 1
all values will -> be : 1
values will be -> taken : 1
will be taken -> out : 1
be taken out -> of : 1
taken out of -> the : 1
of the tuple -> then : 1
the tuple then -> and : 1
tuple then and -> lined : 1
then and lined -> up : 1
and lined up -> as : 1
lined up as -> function : 1
up as function -> arguments : 1
as function arguments -> for : 1
function arguments for -> the : 1
arguments for the -> function : 1
function that we -> provide : 1
function that we -> are : 1
function that we -> is : 1
provide as the -> first : 1
provide as the -> third : 1
first this just -> means : 1
this just means -> that : 1
just means that -> if : 1
and call then -> this : 1
call then this -> will : 1
then this will -> lead : 1
this will lead -> to : 1
will lead to -> a : 1
which in turn -> leads : 1
in turn leads -> to : 1
turn leads to -> this : 1
leads to this -> is : 1
what we as -> a : 1
we as a -> nice : 1
as a nice -> we : 1
a nice we -> surround : 1
nice we surround -> the : 1
surround the printing -> with : 1
the printing with -> os : 1
printing with os -> return : 1
with os return -> os : 1
os return os -> now : 1
os return os -> first : 1
return os now -> we : 1
os now we -> wrote : 1
now we wrote -> some : 1
we wrote some -> complicated : 1
wrote some complicated -> code : 1
some complicated code -> that : 1
complicated code that -> will : 1
code that will -> make : 1
that will make -> our : 1
will make our -> life : 1
make our life -> much : 1
our life much -> easier : 1
life much easier -> when : 1
much easier when -> we : 1
easier when we -> want : 1
print a but -> we : 1
a but we -> can : 1
a but we -> will : 1
do a lot -> more : 1
do a lot -> of : 1
a lot more -> with : 1
lot more with -> for : 1
more with for -> write : 1
with for write -> a : 1
for write a -> function : 1
that accepts an -> iterable : 1
that accepts an -> input : 1
accepts an iterable -> such : 1
an iterable such -> vector : 1
iterable such vector -> or : 1
such vector or -> a : 1
list of as -> an : 1
of as an -> this : 1
as an this -> function : 1
an this function -> iterate : 1
this function iterate -> over : 1
function iterate over -> that : 1
over that range -> and : 1
that range and -> then : 1
range and then -> return : 1
then return us -> the : 1
us the of -> all : 1
the numbers in -> the : 1
range and bundle -> that : 1
and bundle that -> with : 1
bundle that with -> the : 1
with the of -> all : 1
all the of -> all : 1
of all and -> the : 1
all and the -> numeric : 1
and the numeric -> of : 1
the numeric of -> by : 1
numeric of by -> packing : 1
of by packing -> these : 1
by packing these -> into : 1
packing these into -> a : 1
these into a -> we : 1
can return them -> as : 1
return them as -> a : 1
them as a -> single : 1
as a single -> object : 1
as a single -> consumer : 1
a single object -> without : 1
single object without -> defining : 1
object without defining -> an : 1
without defining an -> additional : 1
defining an additional -> structure : 1
an additional structure -> template : 1
additional structure template -> t : 1
structure template t -> function : 1
template t function -> returns : 1
t function returns -> us : 1
of iterators that -> respectively : 1
iterators that respectively -> point : 1
that respectively point -> to : 1
respectively point to -> the : 1
to the minimum -> and : 1
the input sums -> up : 1
input sums up -> all : 1
values in its -> input : 1
values in its -> own : 1
in its input -> this : 1
its input this -> is : 1
input this is -> all : 1
this is all -> we : 1
is all we -> need : 1
all we need -> to : 1
to return the -> four : 1
return the four -> values : 1
the four values -> in : 1
four values in -> our : 1
values in our -> auto : 1
in our auto -> auto : 1
our auto auto -> sum : 1
auto auto sum -> return : 1
auto sum return -> sum : 1
sum return sum -> implementing : 1
return sum implementing -> the : 1
sum implementing the -> main : 1
implementing the main -> we : 1
will implement one -> last : 1
implement one last -> magic : 1
one last magic -> helper : 1
last magic helper -> i : 1
magic helper i -> call : 1
helper i call -> it : 1
i call it -> it : 1
call it it -> really : 1
call it it -> will : 1
it it really -> looks : 1
it really looks -> complicated : 1
really looks complicated -> at : 1
looks complicated at -> but : 1
complicated at but -> after : 1
at but after -> understanding : 1
but after understanding -> how : 1
after understanding how -> it : 1
understanding how it -> it : 1
how it it -> will : 1
it it will -> turn : 1
it it will -> accept : 1
it will turn -> out : 1
will turn out -> as : 1
turn out as -> a : 1
out as a -> really : 1
as a really -> slick : 1
a really slick -> and : 1
really slick and -> nice : 1
slick and nice -> it : 1
and nice it -> two : 1
nice it two -> this : 1
it two this -> means : 1
two this means -> that : 1
if we feed -> it : 1
feed it a -> and : 1
it a and -> another : 1
a and another -> it : 1
and another it -> will : 1
a tuple template -> typename : 1
tuple template typename -> static : 1
static auto const -> we : 1
auto const we -> arrived : 1
const we arrived -> at : 1
we arrived at -> the : 1
arrived at the -> most : 1
at the most -> complex : 1
at the most -> generally : 1
most complex lines -> of : 1
complex lines of -> code : 1
of code of -> this : 1
code of this -> we : 1
code of this -> section : 1
create a function -> which : 1
function which arbitrary -> number : 1
which arbitrary number -> of : 1
number of it -> then : 1
number of it -> becomes : 1
of it then -> returns : 1
then returns another -> function : 1
that captures all -> these : 1
captures all these -> arguments : 1
all these arguments -> in : 1
these arguments in -> but : 1
arguments in but -> also : 1
in but also -> accepts : 1
but also accepts -> another : 1
also accepts another -> arbitrary : 1
accepts another arbitrary -> number : 1
another arbitrary number -> of : 1
number of sink -> this : 1
of sink this -> in : 1
sink this in -> for : 1
this in for -> a : 1
in for a -> within : 1
for a within -> this : 1
a within this -> inner : 1
within this inner -> function : 1
this inner function -> we : 1
inner function we -> can : 1
we can lists -> of : 1
can lists of -> arguments : 1
lists of arguments -> in : 1
of arguments in -> the : 1
arguments in the -> form : 1
the parameter and -> and : 1
parameter and and -> now : 1
and and now -> have : 1
and now have -> a : 1
a look what -> we : 1
a look what -> this : 1
look what we -> actually : 1
what we actually -> do : 1
we actually do -> with : 1
actually do with -> these : 1
do with these -> parameter : 1
with these parameter -> the : 1
these parameter the -> groups : 1
parameter the groups -> the : 1
the groups the -> parameter : 1
groups the parameter -> packs : 1
the parameter packs -> item : 1
parameter packs item -> this : 1
packs item this -> means : 1
item this means -> that : 1
we have and -> this : 1
we have and -> what : 1
we have and -> those : 1
have and this -> will : 1
and this will -> result : 1
in a new -> parameter : 1
a new parameter -> this : 1
new parameter this -> is : 1
parameter this is -> a : 1
parameter this is -> basically : 1
is a list -> of : 2
list of three -> in : 1
of three in -> order : 1
three in order -> to : 1
to get them -> all : 1
get them all -> grouped : 1
them all grouped -> in : 1
all grouped in -> we : 1
grouped in we -> use : 1
in we use -> which : 1
number of tuples -> and : 1
of tuples and -> repacks : 1
tuples and repacks -> them : 1
and repacks them -> into : 1
repacks them into -> one : 1
them into one -> this : 1
into one this -> way : 1
one this way -> we : 1
a nice auto -> z : 1
nice auto z -> return : 1
auto z return -> return : 2
z return return -> last : 1
z return return -> return : 1
step is unwrapping -> all : 1
is unwrapping all -> the : 1
unwrapping all the -> values : 1
input and and -> pushing : 1
and and pushing -> them : 1
and pushing them -> into : 1
pushing them into -> the : 1
into the puts -> all : 1
the puts all -> the : 1
puts all the -> values : 2
values from into -> the : 1
from into the -> parameter : 1
from into the -> constructor : 1
into the parameter -> pack : 2
into the parameter -> this : 1
parameter pack puts -> all : 1
pack puts all -> the : 1
values of into -> the : 1
of into the -> parameter : 1
parameter pack the -> resulting : 1
pack the resulting -> tuple : 1
the resulting tuple -> is : 1
resulting tuple is -> the : 1
tuple is the -> large : 1
is the large -> zipped : 1
the large zipped -> which : 1
large zipped which -> we : 1
zipped which we -> return : 1
which we return -> to : 1
we return to -> the : 1
the return invested -> a : 1
return invested a -> considerable : 1
invested a considerable -> amount : 1
a considerable amount -> of : 1
considerable amount of -> lines : 1
amount of lines -> into : 1
of lines into -> now : 1
lines into now -> finally : 1
into now finally -> put : 1
now finally put -> it : 1
finally put it -> to : 1
it to we -> construct : 1
it to we -> must : 1
to we construct -> some : 1
we construct some -> arbitrary : 1
construct some arbitrary -> and : 1
some arbitrary and -> gpa : 1
arbitrary and gpa -> score : 1
and gpa score -> of : 1
gpa score of -> a : 1
score of a -> contains : 1
of a contains -> strings : 1
a contains strings -> that : 1
contains strings that -> describe : 1
strings that describe -> what : 1
that describe what -> those : 1
describe what those -> fields : 1
what those fields -> mean : 1
those fields mean -> in : 1
fields mean in -> is : 1
mean in is -> a : 1
really nice it -> automatically : 1
nice it automatically -> deduces : 1
it automatically deduces -> the : 1
automatically deduces the -> type : 1
deduces the type -> of : 1
type of all -> the : 1
the arguments and -> creates : 1
arguments and creates -> a : 1
and creates a -> suitable : 1
and creates a -> histogram : 1
creates a suitable -> tuple : 1
a suitable tuple -> int : 1
suitable tuple int -> auto : 1
tuple int auto -> auto : 1
int auto auto -> student : 1
auto auto student -> just : 1
auto student just -> print : 1
student just print -> what : 1
what we this -> is : 1
we this is -> really : 1
we this is -> the : 1
is really we -> just : 1
really we just -> implemented : 1
just implemented the -> right : 1
the right overload -> for : 1
the right overload -> of : 1
right overload for -> cout : 1
overload for cout -> student : 1
for cout student -> can : 1
cout student can -> also : 1
student can also -> group : 1
can also group -> both : 1
also group both -> the : 1
group both the -> tuples : 1
both the tuples -> on : 1
the tuples on -> the : 1
tuples on the -> fly : 1
the fly with -> and : 1
fly with and -> print : 1
print them like -> cout : 1
them like cout -> can : 1
like cout can -> also : 1
cout can also -> create : 1
can also create -> a : 1
also create a -> new : 1
a new tuple -> with : 1
new tuple with -> our : 1
tuple with our -> function : 1
function and also -> print : 1
and also print -> auto : 1
also print auto -> zipped : 1
print auto zipped -> cout : 1
auto zipped cout -> zipped : 1
zipped cout zipped -> not : 1
cout zipped not -> forget : 1
zipped not forget -> our : 1
not forget our -> we : 1
forget our we -> create : 1
our we create -> an : 1
create an initializer -> list : 1
initializer list that -> contains : 1
list that contains -> some : 1
contains some feed -> it : 1
some feed it -> into : 1
into this to -> make : 1
this to make -> it : 1
bit more we -> create : 1
bit more we -> make : 1
bit more we -> want : 1
more we create -> another : 1
we create another -> tuple : 1
create another tuple -> of : 1
another tuple of -> the : 1
tuple of the -> same : 1
the same some -> describing : 1
same some describing -> by : 1
some describing by -> zipping : 1
describing by zipping -> these : 1
by zipping these -> we : 1
zipping these we -> get : 1
these we get -> a : 1
get a interleaved -> as : 1
a interleaved as -> we : 1
interleaved as we -> will : 1
will see when -> we : 1
see when we -> run : 1
when we run -> the : 2
we run the -> auto : 1
we run the -> same : 1
we run the -> program : 2
run the auto -> numbers : 1
the auto numbers -> cout : 1
auto numbers cout -> and : 1
numbers cout and -> running : 1
lines are just -> the : 1
are just the -> individual : 1
just the individual -> and : 1
the individual and -> line : 1
individual and line -> the : 1
and line the -> tuple : 1
line the tuple -> composition : 1
the tuple composition -> we : 1
tuple composition we -> got : 1
composition we got -> by : 1
we got by -> line : 1
got by line -> contains : 1
by line contains -> the : 1
line contains the -> zipped : 1
contains the zipped -> student : 1
the zipped student -> in : 1
zipped student in -> the : 1
student in the -> last : 1
last we see -> the : 1
see the and -> average : 1
the and average -> value : 1
and average value -> of : 1
average value of -> the : 1
the numeric list -> we : 1
numeric list we -> last : 1
list we last -> because : 1
we last because -> of : 1
last because of -> the : 1
is really easy -> to : 1
really easy to -> see : 1
really easy to -> they : 1
see what each -> value : 1
what each value -> john : 1
each value john -> john : 1
value john john -> john : 1
john john john -> it : 1
john john it -> of : 1
john it of -> the : 1
it of the -> code : 1
section is admittedly -> we : 1
is admittedly we -> wrote : 1
admittedly we wrote -> an : 1
we wrote an -> implementation : 1
wrote an implementation -> for : 1
an implementation for -> which : 1
implementation for which -> looks : 1
for which looks -> very : 1
looks very complex -> but : 1
very complex but -> supports : 1
complex but supports -> all : 1
but supports all -> kinds : 1
supports all kinds -> of : 1
kinds of tuples -> that : 1
of tuples that -> themselves : 1
tuples that themselves -> consist : 1
that themselves consist -> of : 1
themselves consist of -> printable : 1
consist of printable -> then : 1
of printable then -> we : 1
printable then we -> implemented : 1
then we implemented -> returns : 1
we implemented returns -> a : 1
implemented returns a -> another : 1
returns a another -> very : 1
a another very -> complicated : 1
another very complicated -> thing : 1
very complicated thing -> to : 1
complicated thing to -> get : 1
thing to get -> around : 1
to get around -> was : 1
get around was -> the : 1
around was the -> function : 1
the function easiest -> part : 1
function easiest part -> the : 1
easiest part the -> point : 1
part the point -> about : 1
the point about -> it : 1
point about it -> is : 1
about it is -> that : 1
it is that -> when : 1
it is that -> this : 1
when we define -> a : 1
that returns an -> we : 1
returns an we -> can : 1
just write in -> that : 1
write in that -> function : 1
in that function -> to : 1
that function to -> construct : 1
function to construct -> such : 1
to construct such -> a : 1
construct such a -> if : 1
such a if -> you : 1
a if you -> have : 1
you have trouble -> understanding : 1
have trouble understanding -> the : 1
trouble understanding the -> stl : 1
understanding the stl -> algorithms : 1
stl algorithms we -> used : 1
stl algorithms we -> get : 1
algorithms we used -> in : 1
we used in -> then : 1
we used in -> two : 1
used in then -> you : 1
in then you -> might : 1
then you might -> want : 1
you might want -> to : 1
a look algorithm -> of : 1
look algorithm of -> this : 1
algorithm of this -> where : 1
of this where -> we : 1
this where we -> already : 1
where we already -> had : 1
we already had -> a : 1
already had a -> closer : 1
had a closer -> look : 1
look at other -> code : 1
at other code -> was : 1
other code was -> so : 1
code was so -> complicated : 1
was so complicated -> that : 1
so complicated that -> we : 1
complicated that we -> dedicate : 1
that we dedicate -> the : 1
we dedicate the -> specific : 1
dedicate the specific -> helpers : 1
the specific helpers -> their : 1
specific helpers their -> own : 1
helpers their own -> for : 1
their own for -> we : 1
own for we -> even : 1
for we even -> touched : 1
we even touched -> for : 1
even touched for -> output : 1
touched for output -> we : 1
for output we -> implemented : 1
output we implemented -> due : 1
we implemented due -> to : 1
implemented due to -> its : 1
due to its -> variadic : 1
to its variadic -> argument : 1
to its variadic -> list : 1
its variadic argument -> it : 1
variadic argument it -> accepts : 1
argument it accepts -> any : 1
it accepts any -> number : 1
accepts any number -> and : 1
any number and -> type : 1
number and type -> of : 1
and type of -> as : 1
type of as -> long : 1
of as long -> as : 1
long as the -> first : 1
one is an -> typename : 1
is an typename -> void : 1
an typename void -> const : 1
ts os function -> prints : 1
os function prints -> the : 1
function prints the -> first : 1
prints the first -> and : 1
and then prints -> all : 1
and then prints -> the : 1
and then prints -> it : 1
then prints all -> the : 1
other items from -> the : 1
the parameter we -> print : 1
parameter we print -> the : 1
first item individually -> because : 1
item individually because -> we : 1
individually because we -> want : 1
to have all -> items : 1
have all items -> interleaved : 1
all items interleaved -> with : 1
items interleaved with -> but : 1
interleaved with but -> we : 1
with but we -> do : 1
not want this -> string : 1
want this string -> leading : 1
this string leading -> or : 1
string leading or -> trailing : 1
leading or trailing -> the : 1
or trailing the -> whole : 1
trailing the whole -> list : 1
whole list in -> or : 1
list in or -> we : 1
in or we -> learned : 1
or we learned -> about : 1
we learned about -> the : 1
learned about the -> expansion : 1
about the expansion -> trick : 1
the expansion trick -> in : 1
expansion trick in -> in : 1
trick in in -> the : 1
in in the -> recipe : 1
the recipe multiple -> functions : 1
recipe multiple functions -> with : 1
same that function -> lined : 1
that function lined -> we : 1
function lined we -> have : 1
lined we have -> everything : 1
we have everything -> we : 1
have everything we -> need : 1
everything we need -> in : 1
print our implementation -> looks : 1
our implementation looks -> as : 1
implementation looks as -> const : 1
looks as const -> auto : 1
as const auto -> auto : 1
auto auto os -> return : 1
auto os return -> os : 1
return os first -> thing : 1
os first thing -> we : 1
do is defining -> the : 1
is defining the -> function : 1
defining the function -> when : 1
when we call -> this : 1
call this results -> in : 1
in the only -> thing : 1
only thing this -> function : 1
thing this function -> object : 1
function object prepend -> the : 1
object prepend the -> output : 1
prepend the output -> stream : 1
object to its -> variadic : 1
its variadic list -> of : 1
variadic list of -> we : 1
variadic list of -> tuples : 1
list of we -> use : 1
order to unpack -> all : 1
to unpack all -> the : 1
unpack all the -> items : 1
items from tuple -> if : 1
from tuple if -> this : 1
tuple if this -> step : 1
if this step -> looks : 1
this step looks -> too : 1
step looks too -> please : 1
looks too please -> have : 1
too please have -> a : 1
please have a -> look : 1
the recipe before -> this : 1
recipe before this -> which : 1
before this which -> is : 1
this which is -> dedicated : 1
this which is -> most : 1
which is dedicated -> to : 1
dedicated to demonstrating -> zip : 1
to demonstrating zip -> function : 1
demonstrating zip function -> for : 1
zip function for -> function : 1
function for function -> accepts : 1
for function accepts -> but : 1
function accepts but -> looks : 1
accepts but looks -> horribly : 1
but looks horribly -> although : 1
looks horribly although -> it : 1
horribly although it -> has : 1
has a very -> crisp : 1
a very crisp -> typename : 1
very crisp typename -> auto : 1
crisp typename auto -> const : 1
typename auto const -> auto : 1
const auto z -> return : 1
return return return -> order : 1
return return return -> next : 1
return return return -> that : 1
return return return -> we : 1
return return return -> function : 1
return return order -> to : 1
to understand this -> code : 1
understand this code -> imagine : 1
this code imagine -> for : 1
code imagine for -> a : 1
imagine for a -> moment : 1
for a moment -> that : 1
a moment that -> the : 1
moment that the -> tuple : 1
that the tuple -> carries : 1
the tuple carries -> the : 1
tuple carries the -> and : 1
tuple carries the -> such : 1
carries the and -> tuple : 1
the and tuple -> carries : 1
and tuple carries -> the : 1
carries the such -> calling : 1
the such calling -> leads : 1
such calling leads -> to : 1
calling leads to -> a : 1
a function call -> which : 1
call which returns -> another : 1
which returns another -> function : 1
that captures those -> in : 1
captures those in -> the : 1
those in the -> parameter : 1
parameter pack when -> this : 1
pack when this -> function : 1
when this function -> object : 1
object is then -> called : 1
is then called -> with : 1
then called with -> it : 1
called with it -> gets : 1
with it gets -> the : 1
it gets the -> stuffed : 1
it gets the -> then : 1
gets the stuffed -> into : 1
the stuffed into -> the : 1
stuffed into the -> parameter : 1
the parameter this -> is : 1
this is basically -> the : 2
same as if -> we : 1
as if we -> called : 1
if we called -> now : 1
we called now -> that : 1
called now that -> we : 1
now that we -> have : 1
have and what -> happens : 1
and what happens -> the : 1
what happens the -> expression : 1
happens the expression -> does : 1
the expression does -> the : 1
expression does the -> following : 1
the following have -> a : 1
following have a -> look : 1
from and are -> zipped : 1
and are zipped -> together : 1
are zipped together -> by : 1
zipped together by -> interleaving : 1
together by interleaving -> them : 1
by interleaving them -> this : 1
interleaving them this -> happens : 1
them this happens -> in : 1
the this initially -> only : 1
this initially only -> leads : 1
initially only leads -> to : 1
only leads to -> a : 1
to a variadic -> list : 1
a variadic list -> of : 1
list of tuples -> with : 1
of tuples with -> two : 1
tuples with two -> items : 1
with two items -> in : 1
two items in -> order : 1
get we apply -> on : 1
apply on them -> and : 1
on them and -> then : 1
them and then -> we : 1
them and then -> finally : 1
then we finally -> large : 1
then we finally -> get : 1
we finally large -> concatenated : 1
finally large concatenated -> tuple : 1
large concatenated tuple -> that : 1
concatenated tuple that -> contains : 1
tuple that contains -> all : 1
that contains all -> the : 1
that contains all -> functions : 1
all the members -> of : 1
the members of -> the : 2
members of the -> initial : 1
members of the -> same : 1
members of the -> shared : 1
the initial tuples -> in : 1
initial tuples in -> an : 1
in an interleaved -> with : 1
in an interleaved -> way : 1
an interleaved with -> for : 1
interleaved with for -> more : 1
more type can -> happen : 1
type can happen -> that : 1
can happen that -> we : 1
happen that we -> want : 1
want to store -> items : 1
to store items -> of : 1
store items of -> type : 1
items of type -> in : 1
of type in -> a : 1
in a for -> such : 1
a for such -> a : 1
for such a -> we : 1
able to check -> and : 1
able to check -> if : 1
to check and -> if : 1
to check and -> then : 1
check and if -> it : 1
able to distinguish -> all : 1
to distinguish all -> this : 1
distinguish all this -> needs : 1
all this needs -> to : 1
this needs to -> happen : 1
needs to happen -> in : 1
to happen in -> a : 1
happen in a -> the : 1
a the we -> were : 1
the we were -> basically : 1
we were basically -> able : 1
were basically able -> to : 1
basically able to -> store : 1
able to store -> pointers : 1
able to store -> in : 1
to store pointers -> to : 1
store pointers to -> various : 1
pointers to various -> objects : 1
to various objects -> in : 1
various objects in -> a : 1
in a typed -> pointer : 1
a typed pointer -> alone : 1
typed pointer alone -> cannot : 1
pointer alone cannot -> tell : 1
alone cannot tell -> us : 1
cannot tell us -> what : 1
cannot tell us -> they : 1
cannot tell us -> if : 1
tell us what -> kind : 1
us what kind -> of : 1
kind of object -> it : 1
of object it -> points : 1
object it points -> so : 1
object it points -> follows : 1
object it points -> which : 1
object it points -> to : 2
it points so -> we : 1
points so we -> would : 1
so we would -> need : 1
need to handcraft -> of : 1
to handcraft of -> additional : 1
handcraft of additional -> mechanism : 1
of additional mechanism -> us : 1
additional mechanism us -> what : 1
mechanism us what -> to : 1
us what to -> such : 1
what to such -> code : 1
to such code -> quickly : 1
such code quickly -> leads : 1
code quickly leads -> to : 1
quickly leads to -> quirky : 1
leads to quirky -> looking : 1
to quirky looking -> and : 1
quirky looking and -> unsafe : 1
looking and unsafe -> addition : 1
and unsafe addition -> of : 1
unsafe addition of -> to : 1
addition of to -> the : 1
of to the -> stl : 1
of to the -> wrong : 1
to the stl -> is : 1
stl is it -> is : 1
it is designed -> to : 1
is designed to -> hold : 1
designed to hold -> variables : 1
to hold variables -> of : 1
hold variables of -> any : 1
variables of any -> kind : 1
of any kind -> and : 1
any kind and -> provides : 1
kind and provides -> facilities : 1
and provides facilities -> that : 1
provides facilities that -> enable : 1
facilities that enable -> inspection : 1
that enable inspection -> and : 1
enable inspection and -> access : 1
inspection and access -> to : 1
and access to -> this : 1
access to this -> we : 1
around with this -> utility : 1
with this utility -> type : 1
this utility type -> in : 1
utility type in -> order : 1
a feeling to -> do : 1
a feeling to -> use : 1
feeling to do -> will : 1
function that tries -> to : 1
that tries to -> be : 1
to print it -> uses : 1
to print it -> in : 1
print it uses -> as : 1
it uses as -> its : 1
uses as its -> argument : 1
as its argument -> we : 1
as its argument -> and : 1
its argument we -> include : 1
argument we include -> some : 1
include some necessary -> headers : 1
some necessary headers -> and : 1
using namespace order -> to : 3
namespace order to -> reduce : 1
namespace order to -> start : 1
namespace order to -> find : 1
number of angle -> bracket : 1
of angle bracket -> syntax : 1
angle bracket syntax -> in : 1
bracket syntax in -> the : 1
syntax in the -> following : 1
following we define -> an : 1
we define an -> alias : 1
define an alias -> for : 1
define an alias -> type : 1
an alias for -> which : 1
alias for which -> we : 1
will use using -> implement : 1
use using implement -> a : 1
using implement a -> function : 1
function that claims -> to : 1
that claims to -> be : 1
claims to be -> able : 1
print the promise -> is : 1
the promise is -> that : 1
promise is that -> it : 1
that it prints -> anything : 1
it prints anything -> provided : 1
prints anything provided -> as : 1
anything provided as -> an : 1
provided as an -> argument : 1
of an void -> first : 1
an void first -> thing : 1
void first thing -> we : 1
check is if -> the : 1
is if the -> argument : 1
if the argument -> contains : 1
the argument contains -> or : 1
argument contains or -> if : 1
contains or if -> it : 1
or if it -> is : 1
empty if it -> is : 1
then there is -> no : 1
then there is -> another : 1
is no sense -> in : 1
no sense in -> trying : 1
sense in trying -> to : 1
in trying to -> figure : 1
trying to figure -> out : 1
figure out how -> to : 1
how to print -> if : 1
how to print -> else : 1
to print if -> cout : 1
if cout it -> is : 1
cout it is -> not : 1
try to compare -> it : 1
to compare it -> with : 1
compare it with -> different : 1
with different types -> until : 1
different types until -> we : 2
types until we -> see : 1
types until we -> finally : 1
see a the -> first : 1
the first type -> to : 1
first type to -> try : 1
type to try -> if : 1
to try if -> it : 1
try if it -> is : 1
we can cast -> to : 1
can cast to -> a : 1
cast to a -> typed : 1
to a typed -> reference : 1
a typed reference -> using : 1
typed reference using -> and : 1
reference using and -> just : 1
using and just -> print : 1
and just print -> we : 1
just print we -> put : 1
print we put -> the : 1
put the string -> in : 1
in quotes for -> cosmetic : 1
quotes for cosmetic -> else : 1
for cosmetic else -> if : 1
cosmetic else if -> cout : 1
else if cout -> a : 1
else if cout -> an : 1
if cout a -> it : 1
cout a it -> is : 1
a it is -> not : 1
a it is -> similar : 1
a it is -> also : 1
not a it -> might : 1
a it might -> be : 1
be an case -> this : 1
an case this -> type : 1
case this type -> we : 1
use to obtain -> the : 1
obtain the actual -> else : 1
the actual else -> if : 1
actual else if -> cout : 1
if cout an -> not : 1
cout an not -> only : 1
an not only -> work : 1
work with such -> simple : 1
with such simple -> types : 1
such simple types -> as : 1
simple types as -> and : 1
types as and -> we : 1
can also put -> a : 1
also put a -> whole : 1
put a whole -> map : 1
a whole map -> or : 1
whole map or -> list : 1
map or list -> or : 1
or list or -> whatever : 1
list or whatever -> composed : 1
or whatever composed -> complex : 1
whatever composed complex -> data : 1
composed complex data -> structure : 1
complex data structure -> into : 1
data structure into -> an : 1
structure into an -> see : 1
into an see -> if : 1
an see if -> the : 1
can just print -> it : 1
just print it -> like : 1
print it like -> we : 1
it like we -> would : 1
like we would -> print : 1
we would print -> a : 1
would print a -> else : 1
print a else -> if : 1
a else if -> const : 1
else if const -> auto : 1
cout a cout -> none : 1
a cout none -> of : 1
cout none of -> these : 1
of these types -> we : 1
these types we -> run : 1
types we run -> out : 1
we run out -> of : 1
run out of -> type : 1
out of type -> give : 1
of type give -> up : 1
type give up -> in : 1
give up in -> that : 1
up in that -> case : 1
in that case -> and : 1
that case and -> tell : 1
case and tell -> the : 1
and tell the -> user : 1
user that we -> have : 1
user that we -> just : 1
have no idea -> how : 1
no idea how -> to : 1
idea how to -> print : 1
to print else -> cout : 1
print else cout -> handle : 1
else cout handle -> this : 1
cout handle this -> the : 1
handle this the -> main : 1
this the main -> we : 1
main we can -> now : 1
now call this -> function : 1
this function with -> arbitrary : 1
function with arbitrary -> we : 1
with arbitrary we -> can : 1
arbitrary we can -> call : 1
it with an -> empty : 1
with an empty -> variable : 1
an empty variable -> using : 1
empty variable using -> feed : 1
variable using feed -> it : 1
using feed it -> string : 1
feed it string -> or : 1
it string or -> an : 1
or an because -> can : 1
an because can -> be : 1
because can be -> constructed : 1
can be constructed -> from : 1
be constructed from -> such : 1
constructed from such -> types : 1
from such types -> there : 1
such types there -> is : 1
types there is -> no : 1
is no syntax -> we : 1
no syntax we -> can : 1
syntax we can -> even : 1
construct a whole -> list : 1
a whole list -> and : 1
whole list and -> throw : 1
list and throw -> it : 1
and throw it -> into : 1
throw it into -> this : 1
into this int -> we : 1
this int we -> are : 1
int we are -> going : 1
going to put -> objects : 1
to put objects -> that : 1
put objects that -> are : 1
objects that are -> really : 1
objects that are -> shared : 1
are really expensive -> to : 1
really expensive to -> copy : 1
expensive to copy -> into : 1
to copy into -> an : 1
copy into an -> we : 1
into an we -> can : 1
can also perform -> an : 1
also perform an -> try : 1
perform an try -> this : 1
an try this -> with : 1
try this with -> our : 1
this with our -> list : 1
with our list -> is : 1
our list is -> an : 1
list is an -> empty : 1
is an empty -> object : 1
is an empty -> global : 1
an empty object -> that : 1
empty object that -> gives : 1
object that gives -> the : 1
object that gives -> us : 1
that gives the -> constructor : 1
gives the constructor -> of : 1
constructor of enough -> information : 1
of enough information -> to : 1
enough information to -> know : 1
information to know -> what : 1
to know what -> we : 1
know what we -> are : 1
the second is -> just : 1
second is just -> an : 1
just an initializer -> list : 1
initializer list be -> fed : 1
list be fed -> to : 1
be fed to -> the : 1
fed to the -> embedded : 1
to the embedded -> in : 1
the embedded in -> the : 1
the variable for -> this : 1
variable for this -> we : 1
this we avoid -> unnecessary : 1
we avoid unnecessary -> copies : 1
copies or and -> running : 1
or and running -> the : 1
what we a -> an : 1
we a an -> a : 1
a an a -> a : 1
an a a -> it : 1
a a it -> is : 1
it is similar -> in : 1
is similar in -> one : 1
similar in one -> regard : 1
in one regard -> to : 1
one regard to -> has : 1
regard to has -> a : 1
to has a -> method : 1
has a method -> that : 1
a method that -> tells : 1
method that tells -> if : 1
that tells if -> an : 1
that tells if -> the : 1
tells if an -> instance : 1
if an instance -> carries : 1
if an instance -> holds : 1
an instance carries -> a : 1
instance carries a -> value : 1
carries a value -> or : 1
a value or -> but : 1
value or but -> apart : 1
or but apart -> from : 1
but apart from -> it : 1
from it can -> contain : 1
can contain literally -> so : 1
contain literally so -> it : 1
literally so it -> is : 1
it is more -> complex : 1
is more complex -> to : 1
more complex to -> handle : 1
complex to handle -> compared : 1
to handle compared -> accessing : 1
handle compared accessing -> the : 1
compared accessing the -> content : 1
accessing the content -> of : 1
content of an -> to : 1
of an to -> find : 1
an to find -> out : 1
find out type -> it : 1
out type it -> carries : 1
type it carries -> it : 1
it carries it -> to : 1
carries it to -> that : 1
it to that -> out : 1
to that out -> if : 1
that out if -> an : 1
out if an -> instance : 1
out if an -> animal : 1
an instance holds -> a : 1
instance holds a -> type : 1
holds a type -> value : 1
type value can -> be : 1
value can be -> done : 1
done with a -> if : 1
with a if -> this : 1
a if this -> comparison : 1
if this comparison -> results : 1
this comparison results -> in : 1
comparison results in -> then : 1
results in then -> we : 1
in then we -> can : 1
use to get -> at : 1
get at the -> that : 1
get at the -> object : 1
get at the -> content : 1
get at the -> complicated : 1
at the that -> returns : 1
the that returns -> a : 1
that returns a -> of : 1
that returns a -> usual : 1
that returns a -> on : 1
returns a of -> the : 1
of the internal -> value : 1
of the internal -> which : 1
the internal value -> in : 1
internal value in -> if : 1
value in if -> we : 1
want a in -> order : 1
order to avoid -> copying : 1
order to avoid -> this : 1
order to avoid -> we : 1
to avoid copying -> of : 1
avoid copying of -> complex : 1
copying of complex -> we : 1
of complex we -> need : 1
complex we need -> to : 1
we did when -> we : 1
did when we -> accessed : 1
when we accessed -> the : 1
we accessed the -> internal : 1
accessed the internal -> or : 1
the internal or -> in : 1
internal or in -> this : 1
or in this -> we : 1
this we cast -> an : 1
we cast an -> instance : 1
cast an instance -> of : 1
instance of to -> the : 1
to the wrong -> it : 1
the wrong it -> will : 1
wrong it will -> throw : 1
throw an different -> types : 1
an different types -> with : 1
types with are -> not : 1
with are not -> only : 1
are not only -> and : 1
not only and -> in : 1
only and in -> that : 1
and in that -> enable : 1
in that enable -> us : 1
that enable us -> to : 1
us to compose -> if : 1
to compose if -> we : 1
compose if we -> want : 1
want to express -> that : 1
to express that -> some : 1
express that some -> variable : 1
that some variable -> can : 1
some variable can -> hold : 1
variable can hold -> either : 1
can hold either -> some : 1
hold either some -> type : 1
either some type -> or : 1
some type or -> a : 1
type or a -> type : 1
or a type -> or : 1
a type or -> we : 1
type or we -> can : 1
use the problem -> with : 1
the problem with -> unions : 1
the problem with -> our : 2
problem with unions -> is : 2
with unions is -> that : 2
unions is that -> they : 1
unions is that -> we : 1
that they cannot -> tell : 1
they cannot tell -> us : 1
tell us they -> were : 1
us they were -> actually : 1
they were actually -> initialized : 1
were actually initialized -> to : 1
actually initialized to -> which : 1
initialized to which -> of : 1
to which of -> the : 1
of the types -> that : 1
of the types -> in : 1
of the types -> the : 1
the types that -> they : 1
types that they -> can : 1
they can the -> following : 1
can the following -> u : 1
the following u -> int : 1
following u int -> char : 1
u int char -> float : 1
int char float -> void : 1
char float void -> we : 1
float void we -> call : 1
void we call -> with : 1
with a union -> that : 1
a union that -> was : 1
union that was -> initialized : 1
that was initialized -> to : 1
was initialized to -> hold : 2
was initialized to -> store : 1
initialized to hold -> an : 2
initialized to hold -> handling : 1
to hold an -> integer : 1
to hold an -> or : 1
hold an integer -> via : 1
an integer via -> there : 1
integer via there -> is : 1
via there is -> nothing : 1
there is nothing -> that : 1
there is nothing -> to : 1
is nothing that -> prevents : 1
nothing that prevents -> us : 1
that prevents us -> from : 1
prevents us from -> accessing : 1
prevents us from -> using : 1
us from accessing -> as : 1
from accessing as -> if : 1
accessing as if -> it : 1
if it was -> initialized : 3
if it was -> indeed : 1
it was initialized -> to : 2
it was initialized -> in : 1
it was initialized -> with : 1
initialized to store -> a : 1
store a pointer -> to : 1
a string via -> member : 1
string via member -> all : 1
via member all -> kinds : 1
member all kinds -> of : 1
kinds of bugs -> can : 1
of bugs can -> be : 1
bugs can be -> spread : 1
can be spread -> from : 1
be spread from -> such : 1
spread from such -> before : 1
from such before -> we : 1
such before we -> start : 1
before we start -> to : 1
we start to -> pack : 1
start to pack -> our : 1
to pack our -> union : 1
pack our union -> with : 1
our union with -> an : 1
union with an -> auxiliary : 1
with an auxiliary -> variable : 1
an auxiliary variable -> that : 1
auxiliary variable that -> tells : 1
variable that tells -> us : 1
us to what -> it : 1
was initialized in -> order : 1
initialized in order -> to : 1
to gain some -> we : 1
gain some we -> can : 1
some we can -> directly : 1
can directly use -> which : 1
directly use which -> came : 1
use which came -> with : 1
came with is -> kind : 1
came with is -> the : 1
with is kind -> of : 1
the and efficient -> union : 1
and efficient union -> it : 1
efficient union it -> does : 1
union it does -> not : 1
does not use -> the : 1
use the so -> it : 1
it is as -> and : 1
is as and -> as : 1
as and as -> a : 1
and as a -> handcrafted : 1
as a handcrafted -> solution : 1
a handcrafted solution -> could : 1
handcrafted solution could -> so : 1
solution could so -> we : 1
could so we -> do : 1
implement it it -> can : 1
it it can -> store : 1
it it can -> call : 1
it can store -> anything : 1
can store anything -> apart : 1
store anything apart -> from : 1
anything apart from -> or : 1
apart from or -> this : 1
or this we -> will : 1
we will construct -> an : 1
we will construct -> a : 1
will construct an -> example : 1
construct an example -> that : 1
example that profits -> from : 1
that profits from -> in : 1
profits from in -> order : 1
from in order -> to : 1
feeling to use -> this : 1
use this cool -> new : 1
this cool new -> addition : 1
cool new addition -> to : 1
new addition to -> the : 1
addition to the -> to : 1
addition to the -> filesystem : 1
to the to -> do : 1
program that knows -> the : 1
that knows the -> and : 1
knows the and -> and : 1
the and and -> that : 1
and and that -> stores : 1
and that stores -> a : 1
that stores a -> mixed : 1
stores a mixed -> list : 1
a mixed list -> of : 1
mixed list of -> cats : 1
list of cats -> and : 1
of cats and -> dogs : 2
cats and dogs -> without : 1
cats and dogs -> in : 3
and dogs without -> using : 1
dogs without using -> we : 1
without using we -> include : 1
using we include -> all : 1
headers and define -> that : 1
and define that -> we : 1
namespace we implement -> two : 1
namespace we implement -> a : 3
namespace we implement -> our : 1
namespace we implement -> the : 1
we implement two -> classes : 1
we implement two -> helpers : 1
implement two classes -> similar : 1
two classes similar -> are : 1
classes similar are -> not : 1
similar are not -> related : 1
are not related -> to : 1
not related to -> each : 1
related to each -> other : 1
other in any -> other : 1
any other in -> contrast : 1
other in contrast -> to : 1
contrast to classes -> inherit : 1
to classes inherit -> from : 1
the same interface -> or : 1
same interface or -> a : 1
interface or a -> similar : 1
or a similar -> the : 1
a similar the -> first : 1
similar the first -> class : 1
first class is -> a : 1
class is a -> has : 1
class is a -> does : 1
is a has -> a : 1
a has a -> name : 1
has a name -> and : 1
a name and -> can : 1
name and can -> say : 1
and can say -> class : 1
can say class -> cat : 1
say class cat -> string : 1
class cat string -> void : 1
cat string void -> const : 1
string void const -> cout : 2
void const cout -> name : 2
const cout name -> says : 2
cout name says -> other : 1
cout name says -> we : 1
name says other -> class : 1
says other class -> is : 1
other class is -> a : 1
is a does -> not : 1
a does not -> say : 1
not say of -> class : 1
say of class -> dog : 1
of class dog -> string : 1
class dog string -> void : 1
dog string void -> const : 1
name says we -> can : 1
says we can -> define : 1
can define which -> is : 1
define which is -> just : 1
just a type -> alias : 1
type alias to -> this : 1
alias to this -> is : 1
same as an -> union : 1
as an union -> but : 1
an union but -> has : 1
union but has -> all : 1
but has all -> the : 1
has all the -> extra : 1
all the extra -> features : 1
the extra features -> that : 1
extra features that -> using : 1
features that using -> animal : 1
that using animal -> we : 1
using animal we -> write : 1
animal we write -> the : 1
write the main -> we : 1
main we implement -> two : 1
implement two helpers -> one : 1
two helpers one -> helper : 1
helpers one helper -> is : 1
one helper is -> an : 1
helper is an -> animal : 1
is an animal -> by : 1
an animal by -> calling : 1
animal by calling -> or : 1
by calling or -> we : 1
calling or we -> can : 1
we can find -> out : 1
can find out -> if : 1
find out if -> an : 1
if an animal -> variant : 1
an animal variant -> instance : 1
animal variant instance -> or : 1
variant instance or -> a : 1
or a the -> implementation : 1
a the implementation -> just : 1
implementation just calls -> which : 1
just calls which -> is : 1
calls which is -> a : 1
is a generic -> predicate : 1
a generic predicate -> function : 1
generic predicate function -> for : 1
predicate function for -> variant : 1
function for variant -> template : 1
for variant template -> bool : 1
variant template bool -> animal : 1
template bool animal -> return : 1
bool animal return -> second : 1
animal return second -> helper : 1
return second helper -> is : 1
second helper is -> a : 1
helper is a -> structure : 1
is a structure -> as : 1
as a function -> it : 1
is a twofold -> function : 1
a twofold function -> it : 1
twofold function it -> implements : 1
function it implements -> one : 1
it implements one -> implementation : 1
implements one implementation -> is : 1
one implementation is -> an : 1
implementation is an -> overload : 1
is an overload -> that : 1
an overload that -> accepts : 1
overload that accepts -> dogs : 1
that accepts dogs -> and : 1
accepts dogs and -> the : 1
dogs and the -> other : 1
the other accepts -> for : 1
other accepts for -> these : 1
accepts for these -> it : 1
for these it -> just : 1
these it just -> calls : 1
it just calls -> the : 1
just calls the -> or : 1
calls the or -> the : 1
or the struct -> void : 1
the struct void -> dog : 1
struct void dog -> const : 1
void dog const -> void : 2
dog const void -> cat : 2
const void cat -> const : 2
void cat const -> put : 1
void cat const -> of : 1
cat const put -> these : 1
const put these -> types : 1
put these types -> and : 1
these types and -> helpers : 1
types and helpers -> to : 1
and helpers to -> we : 1
helpers to we -> define : 1
to we define -> a : 1
to we define -> that : 1
define a list -> of : 1
list of variant -> instances : 1
of variant instances -> and : 1
variant instances and -> fill : 1
instances and fill -> it : 1
it with cats -> and : 1
with cats and -> int : 1
cats and int -> l : 1
and int l -> we : 1
int l we -> print : 1
l we print -> the : 1
print the contents -> of : 1
contents of three -> and : 1
of three and -> each : 1
three and each -> time : 1
and each time -> in : 1
each time in -> a : 1
a different one -> way : 1
different one way -> is : 1
one way is -> using : 1
way is using -> an : 1
is using an -> alias : 1
using an alias -> a : 1
an alias a -> return : 1
alias a return -> value : 1
value of means -> that : 1
that the variant -> holds : 1
the variant holds -> a : 1
variant holds a -> index : 1
holds a index -> means : 1
a index means -> it : 1
index means it -> is : 1
means it is -> a : 1
is a the -> order : 1
a the order -> of : 1
the types in -> the : 1
types in the -> variant : 1
in the variant -> specialization : 1
in the variant -> the : 1
the variant specialization -> is : 1
variant specialization is -> the : 1
specialization is the -> key : 1
is the key -> in : 1
the key in -> the : 1
in the switch -> case : 1
the switch case -> we : 1
switch case we -> access : 1
case we access -> the : 1
access the variant -> with : 1
access the variant -> is : 1
access the variant -> do : 1
the variant with -> in : 1
variant with in -> order : 1
get the actual -> or : 1
the actual or -> instance : 1
actual or instance -> for : 1
or instance for -> animal : 1
instance for animal -> switch : 1
for animal switch -> case : 1
animal switch case -> case : 1
case case cout -> of : 1
case cout of -> using : 1
cout of using -> the : 1
of using the -> numeric : 1
using the numeric -> index : 1
the numeric index -> of : 1
numeric index of -> the : 1
index of the -> we : 1
can also explicitly -> ask : 1
also explicitly ask -> for : 1
explicitly ask for -> every : 1
ask for every -> returns : 1
for every returns -> a : 1
every returns a -> pointer : 1
the internal if -> there : 1
internal if there -> is : 1
is no instance -> then : 1
no instance then -> the : 1
instance then the -> pointer : 1
then the pointer -> is : 1
the pointer is -> this : 1
pointer is this -> we : 1
get at different -> types : 1
at different types -> until : 1
we finally for -> animal : 1
finally for animal -> if : 1
for animal if -> auto : 1
animal if auto -> d : 1
if auto d -> else : 1
auto d else -> if : 1
d else if -> auto : 1
else if auto -> c : 1
if auto c -> cout : 1
auto c cout -> last : 1
c cout last -> and : 1
cout last and -> most : 1
last and most -> elegant : 1
and most elegant -> way : 1
elegant way is -> this : 1
way is this -> function : 1
is this function -> accepts : 1
and a variant -> the : 1
a variant the -> function : 1
variant the function -> object : 1
function object must -> implement : 1
must implement different -> overloads : 1
implement different overloads -> for : 1
different overloads for -> all : 1
overloads for all -> the : 1
the possible types -> the : 1
possible types the -> variant : 1
types the variant -> can : 2
the variant can -> we : 1
the variant can -> this : 1
variant can we -> implemented : 1
can we implemented -> a : 1
implemented a structure -> with : 1
a structure with -> the : 1
structure with the -> overloads : 1
with the overloads -> so : 1
the overloads so -> we : 1
overloads so we -> can : 1
use it for -> animal : 1
it for animal -> cout : 1
for animal cout -> we : 1
animal cout we -> will : 1
cout we will -> count : 1
we will count -> the : 1
will count the -> number : 1
number of cats -> and : 1
and dogs in -> the : 3
dogs in the -> variant : 1
dogs in the -> and : 1
dogs in the -> it : 1
the variant the -> predicate : 1
variant the predicate -> can : 1
the predicate can -> be : 1
predicate can be -> specialized : 1
specialized on and -> and : 1
on and and -> can : 1
and and can -> then : 1
and can then -> be : 1
can then be -> used : 1
can then be -> called : 1
then be used -> in : 1
used in combination -> with : 2
combination with to -> return : 1
with to return -> us : 1
to return us -> the : 1
number of instances -> of : 1
of instances of -> this : 1
instances of this -> cout : 1
of this cout -> are : 1
this cout are -> cats : 1
cout are cats -> and : 1
are cats and -> dogs : 2
the and running -> the : 1
the program first -> yields : 1
program first yields -> the : 1
first yields the -> same : 1
yields the same -> list : 1
the same list -> printed : 1
same list printed -> after : 1
list printed after -> see : 1
printed after see -> that : 1
after see that -> the : 1
that the predicates -> combined : 1
the predicates combined -> with : 1
predicates combined with -> work : 1
combined with work -> just : 1
with work just -> tuba : 1
work just tuba -> says : 1
just tuba says -> balou : 1
tuba says balou -> says : 3
says balou says -> bobby : 3
balou says bobby -> says : 3
says bobby says -> tuba : 2
says bobby says -> there : 1
bobby says tuba -> says : 2
says tuba says -> balou : 2
bobby says there -> are : 1
says there are -> cats : 1
there are cats -> and : 1
it is kind -> of : 2
kind of similar -> to : 1
of similar to -> because : 1
similar to because -> both : 1
to because both -> can : 1
because both can -> hold : 1
both can hold -> objects : 1
can hold objects -> of : 1
hold objects of -> different : 1
objects of different -> and : 1
of different and -> we : 1
different and we -> need : 1
need to distinguish -> at : 1
to distinguish at -> runtime : 1
distinguish at runtime -> what : 1
at runtime what -> exactly : 1
runtime what exactly -> they : 1
what exactly they -> hold : 1
exactly they hold -> before : 1
they hold before -> we : 1
hold before we -> try : 1
before we try -> to : 1
to access their -> the : 1
access their the -> other : 1
their the other -> is : 1
other is different -> from : 1
is different from -> in : 1
different from in -> the : 1
from in the -> regard : 1
regard that we -> must : 1
we must declare -> what : 1
must declare what -> it : 1
declare what it -> shall : 1
what it shall -> be : 1
it shall be -> able : 1
shall be able -> to : 1
to store in -> the : 1
store in the -> form : 1
a template type -> an : 1
template type an -> instance : 1
type an instance -> of : 1
instance of hold -> one : 1
of hold one -> instance : 1
hold one instance -> of : 1
one instance of -> or : 1
instance of or -> there : 1
of or there -> is : 1
or there is -> no : 1
is no possibility -> to : 1
no possibility to -> hold : 1
possibility to hold -> of : 1
to hold of -> which : 1
hold of which -> means : 1
of which means -> that : 1
means that has -> no : 1
that has no -> notion : 1
has no notion -> of : 1
no notion of -> variant : 1
notion of variant -> of : 1
of variant of -> mimics : 1
variant of mimics -> a : 1
of mimics a -> union : 1
mimics a union -> type : 1
a union type -> that : 1
union type that -> could : 1
type that could -> look : 1
that could look -> like : 1
like the u -> a : 1
the u a -> b : 1
u a b -> c : 1
b c problem -> with : 1
c problem with -> unions : 1
need to build -> our : 1
our own mechanisms -> to : 1
own mechanisms to -> distinguish : 1
mechanisms to distinguish -> if : 1
distinguish if it -> was : 1
distinguish if it -> dangles : 1
was initialized with -> an : 1
initialized with an -> or : 1
with an or -> can : 1
an or can -> do : 1
or can do -> this : 1
can do this -> for : 1
can do this -> with : 1
do this for -> us : 1
this for us -> without : 1
for us without -> much : 1
us without much -> the : 1
without much the -> code : 1
much the code -> we : 1
code we used -> three : 1
we used three -> different : 1
used three different -> ways : 1
three different ways -> to : 1
ways to handle -> the : 1
to handle the -> content : 1
handle the content -> of : 1
of a variant -> first : 1
of a variant -> object : 1
a variant first -> way : 1
variant first way -> was : 1
first way was -> the : 1
way was the -> function : 1
function of for -> a : 1
of for a -> variant : 1
for a variant -> type : 1
a variant type -> it : 1
variant type it -> can : 1
type it can -> return : 1
type it can -> indeed : 1
it can return -> index : 1
can return index -> if : 1
return index if -> it : 1
index if it -> was : 1
hold an or -> for : 1
an or for -> or : 1
or for or -> for : 1
for or for -> and : 1
for or for -> directory : 1
or for and -> so : 1
so on for -> more : 1
on for more -> complex : 1
more complex next -> way : 1
complex next way -> it : 1
next way it -> accepts : 1
way it accepts -> the : 1
accepts the address -> of : 1
the address of -> a : 1
the address of -> the : 1
address of a -> variant : 1
a variant object -> and : 1
variant object and -> returns : 1
object and returns -> a : 1
pointer to its -> if : 1
to its if -> is : 1
its if is -> then : 1
if is then -> this : 1
is then this -> pointer : 1
then this pointer -> will : 1
this pointer will -> be : 1
pointer will be -> a : 1
be a it -> is : 1
possible to call -> on : 1
to call on -> a : 2
call on a -> variant : 1
call on a -> mutex : 1
on a variant -> variable : 1
a variant variable -> in : 1
variant variable in -> order : 1
to its but -> if : 1
its but if -> that : 1
but if that -> does : 1
if that does -> not : 1
does not this -> function : 1
not this function -> throws : 1
this function throws -> an : 1
function throws an -> exception : 1
throws an exception -> doing : 1
throws an exception -> in : 1
throws an exception -> if : 1
an exception doing -> such : 1
exception doing such -> checking : 1
doing such checking -> for : 1
such checking for -> the : 1
checking for the -> right : 1
for the right -> type : 1
the right type -> can : 1
right type can -> be : 1
with the boolean -> predicate : 1
the boolean predicate -> last : 1
boolean predicate last -> way : 1
predicate last way -> to : 1
last way to -> access : 1
way to access -> the : 1
the variant is -> the : 1
the variant is -> and : 1
variant is the -> it : 1
a then checks -> of : 1
then checks of -> which : 1
checks of which -> type : 1
of which type -> the : 1
which type the -> content : 1
type the content -> of : 1
of the variant -> is : 1
variant is and -> then : 1
is and then -> calls : 1
and then calls -> the : 1
then calls the -> right : 1
calls the right -> overload : 1
right overload of -> the : 1
overload of the -> function : 1
overload of the -> operator : 1
the function exactly -> this : 1
function exactly this -> we : 1
exactly this we -> implemented : 1
this we implemented -> the : 1
we implemented the -> type : 1
implemented the type -> because : 1
the type because -> it : 1
type because it -> can : 1
combination with and -> void : 1
with and void -> dog : 1
and void dog -> const : 1
cat const of -> accessing : 1
const of accessing -> variants : 1
of accessing variants -> can : 1
accessing variants can -> be : 1
variants can be -> considered : 1
can be considered -> the : 1
be considered the -> most : 1
considered the most -> elegant : 1
most elegant the -> code : 1
elegant the code -> sections : 1
the code sections -> that : 1
code sections that -> actually : 1
code sections that -> can : 1
sections that actually -> access : 1
that actually access -> the : 1
actually access the -> variant : 1
the variant do -> not : 1
variant do not -> need : 1
to be hardcoded -> to : 1
hardcoded to the -> types : 1
to the types -> the : 1
the types the -> variant : 1
the types the -> functions : 1
variant can this -> makes : 1
can this makes -> our : 1
this makes our -> code : 1
makes our code -> easier : 1
our code easier -> to : 1
code easier to -> claim : 1
easier to claim -> that : 1
to claim that -> a : 1
claim that a -> type : 1
that a type -> cannot : 1
a type cannot -> hold : 1
type cannot hold -> value : 1
cannot hold value -> was : 1
hold value was -> not : 1
value was not -> completely : 1
was not completely -> by : 1
not completely by -> adding : 1
completely by adding -> type : 1
by adding type -> to : 1
adding type to -> its : 1
type to its -> type : 1
to its type -> it : 1
its type it -> can : 1
it can indeed -> be : 1
can indeed be -> initialized : 1
indeed be initialized -> to : 1
to hold handling -> resources : 1
hold handling resources -> with : 1
resources with the -> stl : 1
stl provides smart -> pointers : 1
provides smart pointers -> that : 1
smart pointers that -> really : 1
pointers that really -> help : 1
that really help -> keep : 1
really help keep -> track : 1
help keep track -> of : 1
keep track of -> dynamic : 1
track of dynamic -> memory : 1
of dynamic memory -> and : 1
dynamic memory and -> its : 1
memory and its -> even : 1
and its even -> before : 1
its even before -> there : 1
even before there -> was : 1
before there was -> that : 1
there was that -> was : 1
was that was -> already : 1
that was already -> able : 1
was already able -> to : 1
already able to -> do : 1
already able to -> determine : 1
to do automatic -> memory : 1
do automatic memory -> but : 1
automatic memory but -> easy : 1
memory but easy -> to : 1
but easy to -> use : 1
easy to use -> the : 1
easy to use -> shared : 1
use the wrong -> with : 1
the wrong with -> the : 1
wrong with the -> smart : 1
with the smart -> we : 1
the smart we -> seldom : 1
the smart we -> include : 1
smart we seldom -> need : 1
we seldom need -> to : 1
seldom need to -> write : 1
to write and -> which : 1
write and which -> is : 1
a really good -> smart : 1
really good smart -> pointers : 1
good smart pointers -> shiny : 1
smart pointers shiny -> example : 1
pointers shiny example -> of : 1
shiny example of -> automatic : 1
example of automatic -> memory : 1
of automatic memory -> if : 1
automatic memory if -> we : 1
memory if we -> maintain : 1
if we maintain -> dynamically : 1
we maintain dynamically -> allocated : 1
maintain dynamically allocated -> objects : 1
dynamically allocated objects -> with : 1
dynamically allocated objects -> without : 1
allocated objects with -> we : 1
with we are -> from : 1
we are from -> memory : 1
are from memory -> because : 1
from memory because -> upon : 1
memory because upon -> its : 1
because upon its -> destruction : 1
upon its destruction -> this : 1
its destruction this -> class : 1
destruction this class -> automatically : 1
this class automatically -> calls : 1
class automatically calls -> on : 1
automatically calls on -> the : 1
calls on the -> object : 1
on the object -> it : 1
the object it -> unique : 1
the object it -> points : 4
object it unique -> pointer : 1
it unique pointer -> expresses : 1
unique pointer expresses -> ownership : 1
pointer expresses ownership -> of : 1
expresses ownership of -> the : 1
ownership of the -> object : 1
of the object -> it : 2
of the object -> the : 1
of the object -> is : 1
it points follows -> its : 1
points follows its -> responsibility : 1
follows its responsibility -> of : 1
its responsibility of -> freeing : 1
responsibility of freeing -> its : 1
of freeing its -> memory : 1
freeing its memory -> again : 1
its memory again -> if : 1
memory again if -> it : 1
again if it -> is : 1
it is no -> longer : 1
is no longer -> this : 1
no longer this -> class : 1
longer this class -> has : 1
this class has -> the : 1
class has the -> potential : 1
has the potential -> of : 1
potential of relieving -> us : 1
of relieving us -> memory : 1
relieving us memory -> leaks : 1
us memory leaks -> least : 1
memory leaks least -> together : 1
leaks least together -> with : 1
least together with -> its : 1
together with its -> companions : 1
with its companions -> and : 1
its companions and -> but : 1
companions and but -> in : 1
and but in -> this : 1
this we solely -> concentrate : 1
we solely concentrate -> on : 1
solely concentrate on -> and : 1
concentrate on and -> the : 1
on and the -> best : 1
and the best -> thing : 1
and the best -> speedup : 1
the best thing -> it : 1
the best thing -> about : 2
best thing it -> imposes : 1
thing it imposes -> on : 1
imposes on space -> and : 1
on space and -> runtime : 1
space and runtime -> compared : 1
and runtime compared -> with : 1
runtime compared with -> raw : 1
compared with raw -> manual : 1
with raw manual -> memory : 1
raw manual memory -> it : 1
manual memory it -> still : 1
memory it still -> sets : 1
it still sets -> its : 1
still sets its -> internal : 1
sets its internal -> raw : 1
its internal raw -> pointer : 1
internal raw pointer -> to : 1
raw pointer to -> internally : 1
raw pointer to -> the : 1
raw pointer to -> a : 1
pointer to internally -> after : 1
to internally after -> destruction : 1
internally after destruction -> of : 1
after destruction of -> the : 1
destruction of the -> object : 1
it points which -> cannot : 1
points which cannot -> always : 1
which cannot always -> be : 1
cannot always be -> optimized : 1
always be optimized -> most : 1
be optimized most -> manually : 1
optimized most manually -> written : 1
most manually written -> code : 1
manually written code -> that : 1
written code that -> manages : 1
code that manages -> dynamic : 1
that manages dynamic -> memory : 1
manages dynamic memory -> does : 1
dynamic memory does -> the : 1
memory does the -> this : 1
does the this -> we : 1
we will a -> look : 1
will a look -> at : 1
at how to -> use : 1
to use to -> do : 2
to use to -> automatically : 1
use to do -> will : 2
do will write -> a : 2
program that shows -> us : 1
that shows us -> how : 1
shows us how -> handles : 1
us how handles -> memory : 1
how handles memory -> by : 1
handles memory by -> creating : 1
memory by creating -> a : 1
by creating a -> custom : 1
creating a custom -> type : 1
a custom type -> that : 1
custom type that -> adds : 1
type that adds -> some : 1
that adds some -> debug : 1
adds some debug -> messages : 1
some debug messages -> upon : 1
debug messages upon -> its : 1
messages upon its -> construction : 1
upon its construction -> and : 1
its construction and -> we : 1
construction and we -> will : 1
around with unique -> maintaining : 1
with unique maintaining -> dynamically : 1
unique maintaining dynamically -> allocated : 1
maintaining dynamically allocated -> instances : 1
dynamically allocated instances -> of : 1
allocated instances of -> we : 1
instances of we -> include : 1
of we include -> the : 1
a little class -> for : 1
little class for -> the : 1
class for the -> object : 1
for the object -> we : 1
the object we -> are : 1
going to manage -> using : 1
to manage using -> its : 1
manage using its -> constructor : 1
using its constructor -> and : 1
its constructor and -> destructor : 3
its constructor and -> its : 1
constructor and destructor -> print : 2
constructor and destructor -> calls : 1
constructor and destructor -> declared : 1
and destructor print -> to : 1
and destructor print -> struct : 1
destructor print to -> the : 1
to the so -> we : 1
can see later -> when : 1
see later when -> it : 1
later when it -> is : 1
it is actually -> automatically : 1
is actually automatically -> class : 1
actually automatically class -> foo : 1
automatically class foo -> string : 1
class foo string -> cout : 3
foo string cout -> name : 3
string cout name -> cout : 4
cout name cout -> name : 4
name cout name -> order : 1
name cout name -> we : 1
name cout name -> static : 1
name cout name -> define : 1
cout name order -> to : 1
name order to -> see : 1
see what limitations -> a : 1
what limitations a -> function : 1
limitations a function -> has : 1
a function has -> that : 1
function has that -> accepts : 1
has that accepts -> unique : 1
that accepts unique -> pointers : 1
accepts unique pointers -> as : 1
unique pointers as -> we : 1
pointers as we -> just : 1
as we just -> implement : 1
we just implement -> it : 1
just implement it -> a : 1
implement it a -> foo : 1
it a foo -> item : 1
a foo item -> by : 1
foo item by -> printing : 1
item by printing -> its : 1
by printing its -> note : 1
printing its note -> that : 1
its note that -> while : 1
that while unique -> pointers : 1
while unique pointers -> are : 1
unique pointers are -> and : 1
pointers are and -> comfortably : 1
are and comfortably -> they : 1
and comfortably they -> can : 1
comfortably they can -> still : 1
they can still -> be : 1
that we still -> have : 1
still have to -> check : 1
to check them -> before : 1
check them before -> we : 1
them before we -> dereference : 1
before we dereference -> void : 1
we dereference void -> if : 1
dereference void if -> cout : 1
void if cout -> the : 1
cout the main -> we : 1
we will open -> another : 1
will open another -> create : 1
open another create -> objects : 1
another create objects -> on : 1
create objects on -> the : 1
objects on the -> and : 1
objects on the -> heap : 1
the and manage -> both : 1
and manage both -> with : 1
manage both with -> unique : 1
both with unique -> we : 1
with unique we -> create : 1
unique we create -> the : 1
we create the -> first : 2
we create the -> unique : 1
we create the -> second : 1
we create the -> strings : 2
create the first -> one : 2
first one explicitly -> on : 1
one explicitly on -> the : 1
explicitly on the -> heap : 1
the heap using -> and : 1
heap using and -> then : 1
using and then -> put : 1
using and then -> feed : 1
and then put -> it : 1
then put it -> into : 1
into the constructor -> of : 3
the we create -> the : 1
create the unique -> by : 1
the unique by -> calling : 1
unique by calling -> with : 1
by calling with -> the : 1
calling with the -> arguments : 1
with the arguments -> we : 1
the arguments we -> would : 1
arguments we would -> otherwise : 1
we would otherwise -> directly : 1
would otherwise directly -> give : 1
otherwise directly give -> the : 1
directly give the -> constructor : 1
give the constructor -> of : 1
constructor of this -> is : 1
is the more -> elegant : 2
the more elegant -> we : 2
more elegant we -> can : 2
can use auto -> type : 2
use auto type -> deduction : 2
auto type deduction -> and : 2
type deduction and -> the : 2
deduction and the -> first : 1
deduction and the -> object : 1
the first time -> we : 1
first time we -> can : 1
time we can -> access : 1
can access the -> it : 1
can access the -> object : 1
access the it -> is : 2
it is already -> managed : 1
is already managed -> by : 1
is already managed -> when : 1
already managed by -> int : 1
already managed by -> no : 1
managed by int -> auto : 1
by int auto -> we : 1
int auto we -> left : 1
auto we left -> the : 1
left the both -> objects : 1
the both objects -> are : 1
both objects are -> destructed : 1
are destructed immediately -> and : 1
destructed immediately and -> their : 1
immediately and their -> memory : 1
and their memory -> is : 2
their memory is -> released : 2
memory is released -> to : 2
is released to -> the : 2
released to the -> have : 1
released to the -> with : 1
to the have -> a : 1
at the function -> and : 1
function and how -> to : 1
it with if -> we : 1
with if we -> construct : 1
a new managed -> by : 1
new managed by -> a : 1
managed by a -> in : 1
by a in -> the : 1
function then its -> lifetime : 1
then its lifetime -> is : 1
its lifetime is -> reduced : 1
lifetime is reduced -> to : 1
is reduced to -> the : 1
is reduced to -> just : 1
reduced to the -> scope : 1
to the scope -> of : 1
scope of the -> when : 1
the when the -> object : 1
when the object -> is : 1
the object is -> we : 1
the object is -> already : 1
the object is -> destroyed : 1
the object is -> and : 1
the object is -> shortly : 1
the object is -> more : 1
the object is -> still : 1
the object is -> indeed : 1
the object is -> not : 1
the object is -> by : 1
object is we -> want : 1
is we want -> to : 1
want to call -> with : 1
call with an -> object : 1
with an object -> that : 1
an object that -> already : 1
that already existed -> before : 1
existed before the -> then : 1
before the then -> we : 1
before the then -> the : 1
need to that -> function : 1
to that function -> takes : 1
that function takes -> a : 1
takes a by -> which : 1
a by which -> calling : 1
by which calling -> it : 1
which calling it -> would : 1
calling it would -> lead : 1
it would lead -> to : 1
to a but -> cannot : 1
a but cannot -> be : 1
but cannot be -> it : 1
cannot be it -> can : 1
be it can -> only : 1
only be create -> two : 1
be create two -> new : 1
two new objects -> and : 1
new objects and -> move : 1
objects and move -> one : 1
and move one -> into : 1
move one into -> by : 1
one into by -> looking : 1
into by looking -> at : 1
by looking at -> the : 1
looking at the -> terminal : 1
looking at the -> it : 1
at the terminal -> output : 1
the terminal output -> we : 1
terminal output we -> will : 1
output we will -> see : 1
see that is -> destroyed : 1
that is destroyed -> when : 1
is destroyed when -> we : 1
destroyed when we -> transferred : 1
when we transferred -> ownership : 1
we transferred ownership -> to : 1
transferred ownership to -> will : 1
ownership to will -> continue : 1
to will continue -> living : 1
will continue living -> until : 1
continue living until -> the : 1
continue living until -> it : 1
living until the -> main : 1
until the main -> function : 1
main function auto -> auto : 1
function auto auto -> cout : 1
auto auto cout -> of : 1
auto cout of -> compile : 1
cout of compile -> and : 1
of compile and -> run : 1
run the at -> we : 1
at we see -> the : 1
see the constructor -> and : 1
the constructor and -> destructor : 1
and destructor calls -> of : 1
destructor calls of -> and : 1
calls of and -> they : 1
they are indeed -> destroyed : 1
are indeed destroyed -> just : 1
indeed destroyed just -> after : 1
destroyed just after -> the : 1
after the program -> leaves : 1
the program leaves -> the : 1
program leaves the -> additional : 1
leaves the additional -> note : 1
the additional note -> that : 1
additional note that -> the : 1
that the objects -> are : 1
objects are destroyed -> in : 1
objects are destroyed -> after : 1
are destroyed in -> the : 1
destroyed in the -> opposite : 1
their the next -> constructor : 1
the next constructor -> line : 1
next constructor line -> comes : 1
constructor line comes -> from : 1
line comes from -> which : 1
comes from which -> is : 1
from which is -> the : 1
item we created -> during : 1
we created during -> the : 1
created during the -> it : 1
during the it -> is : 1
it is indeed -> destroyed : 1
it is indeed -> that : 1
it is indeed -> possible : 1
is indeed destroyed -> immediately : 1
indeed destroyed immediately -> after : 1
destroyed immediately after -> the : 2
destroyed immediately after -> leaves : 1
immediately after the -> function : 1
immediately after the -> call : 1
after the function -> then : 1
function then we -> created : 1
function then we -> can : 1
then we created -> and : 1
we created and -> is : 1
created and is -> destroyed : 1
and is destroyed -> immediately : 1
is destroyed immediately -> after : 2
is destroyed immediately -> because : 1
after the call -> where : 1
the call where -> we : 1
call where we -> transferred : 1
call where we -> just : 1
where we transferred -> the : 1
we transferred the -> the : 1
transferred the the -> other : 1
the other in -> is : 1
other in is -> destroyed : 1
in is destroyed -> after : 1
is destroyed after -> the : 1
destroyed after the -> last : 2
the last code -> line : 1
last code line -> in : 1
code line in -> the : 1
line in the -> main : 1
the main ctor -> foo : 1
main ctor foo -> ctor : 1
ctor foo ctor -> bar : 2
foo ctor bar -> dtor : 1
foo ctor bar -> use : 1
ctor bar dtor -> bar : 1
bar dtor bar -> dtor : 1
dtor bar dtor -> foo : 1
bar dtor foo -> ctor : 1
dtor foo ctor -> processing : 1
foo ctor processing -> dtor : 1
ctor processing dtor -> ctor : 1
ctor processing dtor -> end : 1
processing dtor ctor -> ctor : 1
dtor ctor ctor -> processing : 1
ctor ctor processing -> dtor : 1
processing dtor end -> of : 1
dtor end of -> dtor : 1
end of dtor -> it : 1
of dtor it -> heap : 1
dtor it heap -> objects : 1
it heap objects -> with : 1
heap objects with -> is : 1
objects with is -> really : 1
with is really -> after : 1
is really after -> we : 1
really after we -> initialized : 1
after we initialized -> a : 1
we initialized a -> unique : 1
we initialized a -> object : 1
initialized a unique -> pointer : 1
a unique pointer -> to : 2
a unique pointer -> we : 1
a unique pointer -> can : 1
a unique pointer -> in : 1
unique pointer to -> hold : 1
unique pointer to -> use : 1
pointer to hold -> a : 1
to hold a -> pointer : 1
hold a pointer -> to : 1
to some there -> is : 1
some there is -> we : 1
there is we -> can : 1
we can accidentally -> about : 1
can accidentally about -> deleting : 1
accidentally about deleting -> it : 1
about deleting it -> on : 1
deleting it on -> some : 1
it on some -> code : 1
on some code -> we : 1
some code we -> assign : 1
code we assign -> some : 1
we assign some -> new : 1
assign some new -> pointer : 1
some new pointer -> to : 1
new pointer to -> a : 1
to a unique -> then : 1
a unique then -> it : 1
a unique then -> this : 1
unique then it -> will : 1
it will always -> first : 1
will always first -> delete : 1
always first delete -> the : 1
first delete the -> old : 1
the old object -> it : 1
old object it -> pointed : 1
object it pointed -> to : 1
it pointed to -> and : 1
pointed to and -> then : 1
to and then -> store : 1
store the new -> on : 1
the new on -> a : 1
new on a -> unique : 1
on a unique -> pointer : 1
unique pointer we -> can : 1
pointer we can -> also : 1
can also call -> to : 1
also call to -> just : 1
call to just -> delete : 1
to just delete -> the : 1
just delete the -> object : 1
delete the object -> it : 1
points to immediately -> without : 1
to immediately without -> assigning : 1
immediately without assigning -> a : 1
without assigning a -> new : 1
assigning a new -> another : 1
a new another -> equivalent : 1
new another equivalent -> alternative : 1
another equivalent alternative -> to : 1
equivalent alternative to -> reassigning : 1
alternative to reassigning -> is : 1
to reassigning is -> is : 1
reassigning is is -> indeed : 1
is is indeed -> one : 1
is indeed one -> single : 1
is indeed one -> last : 1
indeed one single -> way : 1
one single way -> to : 1
single way to -> release : 1
way to release -> an : 1
to release an -> object : 1
release an object -> from : 1
an object from -> the : 1
an object from -> a : 1
from the management -> of : 1
the management of -> without : 1
the management of -> no : 1
management of without -> deleting : 1
of without deleting -> the : 1
without deleting the -> function : 1
deleting the function -> does : 1
the function does -> but : 1
the function does -> not : 1
function does but -> using : 1
does but using -> this : 1
but using this -> function : 1
is not advisable -> in : 1
not advisable in -> most : 1
advisable in most -> pointers : 1
in most pointers -> need : 1
most pointers need -> to : 1
pointers need to -> be : 1
to be checked -> before : 1
be checked before -> they : 1
checked before they -> are : 1
before they are -> actually : 1
they are actually -> they : 1
are actually they -> overload : 1
actually they overload -> the : 1
they overload the -> right : 1
overload the right -> operators : 1
the right operators -> in : 1
right operators in -> a : 1
operators in a -> way : 1
way that enables -> them : 1
that enables them -> to : 1
enables them to -> mimic : 1
them to mimic -> conditionals : 1
to mimic conditionals -> like : 1
mimic conditionals like -> and : 1
conditionals like and -> perform : 1
like and perform -> the : 1
and perform the -> same : 1
perform the same -> we : 1
same we would -> raw : 1
we would raw -> a : 1
would raw a -> unique : 1
raw a unique -> pointer : 1
unique pointer can -> be : 1
pointer can be -> done : 1
be done via -> the : 1
done via the -> which : 1
via the which -> returns : 1
the which returns -> a : 1
returns a raw -> pointer : 1
to the object -> that : 1
to the object -> is : 1
to the object -> in : 1
to the object -> of : 1
to the object -> while : 1
the object that -> can : 1
object that can -> be : 2
can be or -> directly : 1
be or directly -> via : 1
or directly via -> which : 1
directly via which -> again : 1
via which again -> mimics : 1
which again mimics -> raw : 1
again mimics raw -> important : 1
mimics raw important -> characteristic : 1
raw important characteristic -> of : 1
important characteristic of -> is : 1
characteristic of is -> that : 1
that its instances -> cannot : 1
its instances cannot -> be : 1
instances cannot be -> can : 1
cannot be can -> be : 1
be can be -> from : 1
can be from -> one : 1
be from one -> variable : 1
from one variable -> to : 1
one variable to -> the : 1
why we had -> to : 1
had to move -> an : 1
to move an -> existing : 1
move an existing -> unique : 1
an existing unique -> pointer : 1
existing unique pointer -> into : 1
unique pointer into -> the : 1
pointer into the -> if : 1
pointer into the -> this : 1
if we were -> able : 1
able to copy -> a : 1
to copy a -> unique : 1
copy a unique -> then : 1
unique then this -> would : 1
then this would -> mean : 2
then this would -> lead : 1
then this would -> generally : 1
then this would -> not : 1
mean that the -> object : 1
that the object -> being : 1
that the object -> is : 1
the object being -> pointed : 2
the object being -> but : 1
object being pointed -> to : 1
object being pointed -> not : 1
being pointed to -> is : 1
pointed to is -> owned : 1
to is owned -> by : 1
is owned by -> unique : 1
owned by unique -> although : 1
by unique although -> this : 1
unique although this -> contradicts : 1
although this contradicts -> the : 1
this contradicts the -> design : 1
contradicts the design -> of : 1
the design of -> a : 1
design of a -> pointer : 1
a pointer that -> is : 1
pointer that is -> the : 1
is the later -> the : 1
the later the -> of : 1
later the of -> the : 1
the underlying there -> are : 1
underlying there are -> data : 1
there are data -> such : 1
are data such -> and : 1
data such and -> there : 1
such and there -> is : 1
and there is -> rarely : 1
and there is -> the : 1
there is rarely -> any : 1
is rarely any -> reason : 1
rarely any reason -> to : 1
any reason to -> create : 1
reason to create -> heap : 1
to create heap -> objects : 1
create heap objects -> directly : 1
heap objects directly -> with : 1
objects directly with -> and : 1
directly with and -> them : 1
with and them -> use : 1
and them use -> such : 1
them use such -> classes : 1
use such classes -> wherever : 1
such classes wherever -> you : 1
classes wherever you -> especially : 1
wherever you especially -> imposes : 1
you especially imposes -> overhead : 1
especially imposes overhead -> at : 1
imposes overhead at -> handling : 1
overhead at handling -> shared : 1
at handling shared -> heap : 1
memory with the -> last : 1
with the last -> we : 1
is an enormously -> useful : 1
an enormously useful -> and : 1
enormously useful and -> important : 1
useful and important -> it : 1
and important it -> helps : 1
important it helps -> us : 1
it helps us -> manage : 1
helps us manage -> dynamically : 1
us manage dynamically -> allocated : 1
manage dynamically allocated -> it : 1
manage dynamically allocated -> we : 1
dynamically allocated it -> can : 1
allocated it can -> only : 1
can only handle -> it : 1
only handle it -> is : 1
handle it is -> not : 1
possible to let -> objects : 1
to let objects -> own : 1
let objects own -> the : 1
objects own the -> same : 1
own the same -> dynamically : 1
the same dynamically -> allocated : 1
same dynamically allocated -> object : 1
dynamically allocated object -> it : 1
allocated object it -> would : 1
object it would -> be : 1
would be unclear -> who : 1
be unclear who -> has : 1
unclear who has -> to : 1
who has to -> delete : 1
has to delete -> it : 1
to delete it -> pointer : 1
delete it pointer -> was : 1
it pointer was -> designed : 1
pointer was designed -> for : 1
was designed for -> specifically : 1
designed for specifically -> this : 1
for specifically this -> shared : 1
specifically this shared -> pointers : 1
this shared pointers -> can : 1
shared pointers can -> be : 2
pointers can be -> arbitrarily : 1
pointers can be -> they : 1
can be arbitrarily -> an : 1
be arbitrarily an -> internal : 1
arbitrarily an internal -> reference : 1
an internal reference -> counting : 1
an internal reference -> we : 1
internal reference counting -> mechanism : 1
reference counting mechanism -> tracks : 1
counting mechanism tracks -> how : 1
mechanism tracks how -> many : 1
tracks how many -> objects : 1
how many objects -> are : 1
many objects are -> still : 1
objects are still -> maintaining : 1
are still maintaining -> a : 1
still maintaining a -> pointer : 1
maintaining a pointer -> to : 1
the payload only -> the : 1
payload only the -> last : 1
only the last -> shared : 1
the last shared -> pointer : 3
the last shared -> mode : 1
last shared pointer -> that : 1
last shared pointer -> to : 1
last shared pointer -> is : 1
shared pointer that -> goes : 1
shared pointer that -> manages : 1
shared pointer that -> maintains : 1
pointer that goes -> out : 1
that goes out -> of : 1
goes out of -> scope : 1
goes out of -> then : 1
goes out of -> the : 1
of scope will -> call : 1
scope will call -> on : 1
will call on -> the : 1
will call on -> this : 1
call on the -> payload : 1
call on the -> this : 1
call on the -> same : 1
call on the -> future : 1
the payload this -> we : 2
payload this we -> can : 1
payload this we -> possibly : 1
we can be -> sure : 4
can be sure -> that : 4
be sure that -> we : 1
be sure that -> they : 2
be sure that -> prints : 1
sure that we -> do : 1
sure that we -> have : 1
do not get -> memory : 1
not get memory -> objects : 1
get memory objects -> are : 1
memory objects are -> deleted : 1
objects are deleted -> automatically : 1
are deleted automatically -> after : 1
deleted automatically after -> at : 1
automatically after at -> the : 1
after at the -> same : 1
same we can -> be : 1
same we can -> fix : 1
sure that they -> are : 1
sure that they -> do : 1
are not deleted -> too : 1
not deleted too -> or : 1
deleted too or -> too : 1
too or too -> often : 1
or too often -> created : 1
too often created -> object : 1
often created object -> must : 1
created object must -> only : 1
object must only -> be : 1
must only be -> deleted : 1
only be deleted -> this : 1
be deleted this -> learn : 1
deleted this learn -> how : 1
use to automatically -> manage : 1
to automatically manage -> dynamic : 1
automatically manage dynamic -> objects : 1
manage dynamic objects -> that : 1
dynamic objects that -> are : 1
that are shared -> between : 1
are shared between -> multiple : 1
shared between multiple -> owners : 1
between multiple owners -> and : 1
multiple owners and -> see : 1
owners and see -> different : 1
and see different -> when : 1
see different when -> comparing : 1
different when comparing -> it : 1
when comparing it -> to : 1
comparing it to -> do : 1
program that is -> similar : 1
program that is -> much : 1
that is similar -> to : 1
is similar to -> the : 2
the program we -> wrote : 1
the program we -> will : 1
the program we -> just : 1
program we wrote -> in : 1
we wrote in -> the : 1
wrote in the -> recipe : 1
recipe in order -> to : 1
to get insights -> into : 1
get insights into -> the : 1
insights into the -> principles : 1
into the principles -> of : 1
the principles of -> we : 1
principles of we -> just : 1
of we just -> include : 1
of we just -> define : 1
we just include -> the : 1
just include the -> necessary : 1
define a little -> helper : 1
helper which helps -> us : 2
helps us see -> when : 1
us see when -> instances : 1
see when instances -> of : 1
when instances of -> it : 1
instances of it -> are : 1
instances of it -> with : 1
of it are -> actually : 1
it are actually -> created : 1
are actually created -> and : 1
actually created and -> we : 1
created and we -> will : 1
created and we -> let : 1
we will manage -> instances : 1
will manage instances -> of : 1
manage instances of -> it : 1
of it with -> class : 1
it with class -> foo : 1
with class foo -> string : 1
cout name we -> implement : 1
name we implement -> a : 1
takes a shared -> pointer : 1
a shared pointer -> to : 4
a shared pointer -> and : 2
a shared pointer -> with : 2
a shared pointer -> manage : 1
a shared pointer -> that : 1
shared pointer to -> a : 1
shared pointer to -> it : 1
shared pointer to -> such : 1
shared pointer to -> the : 1
shared pointer to -> use : 1
shared pointer to -> some : 1
to a instance -> accepting : 1
a instance accepting -> shared : 1
instance accepting shared -> pointers : 1
accepting shared pointers -> as : 1
shared pointers as -> arguments : 1
pointers as arguments -> by : 1
as arguments by -> value : 1
arguments by value -> is : 1
by value is -> more : 1
value is more -> interesting : 1
is more interesting -> than : 1
more interesting than -> accepting : 1
interesting than accepting -> them : 1
than accepting them -> by : 1
accepting them by -> in : 1
them by in -> this : 1
by in this -> they : 1
in this they -> need : 1
this they need -> to : 1
they need to -> be : 1
they need to -> track : 1
to be which -> changes : 1
be which changes -> their : 1
which changes their -> internal : 1
changes their internal -> reference : 1
their internal reference -> as : 1
internal reference as -> we : 1
internal reference as -> long : 1
reference as we -> will : 1
we will void -> cout : 1
will void cout -> use : 1
void cout use -> counter : 1
cout use counter -> at : 3
use counter at -> the : 1
use counter at -> fa : 1
use counter at -> leaving : 1
use counter at -> use : 1
use counter at -> dtor : 2
use counter at -> second : 1
counter at the -> main : 1
at the main -> we : 1
main we declare -> shared : 1
we declare shared -> constructing : 1
declare shared constructing -> it : 1
shared constructing it -> a : 1
constructing it a -> int : 1
it a int -> we : 1
a int we -> open : 1
int we open -> another : 1
we open another -> scope : 1
another scope and -> instantiate : 1
scope and instantiate -> two : 1
and instantiate two -> we : 1
instantiate two we -> create : 1
two we create -> the : 1
first one using -> and : 1
one using and -> then : 1
of a new -> then : 1
a new then -> we : 1
new then we -> create : 1
then we create -> the : 2
create the second -> instance : 1
the second instance -> using : 1
second instance using -> which : 1
instance using which -> creates : 1
using which creates -> a : 1
which creates a -> instance : 1
creates a instance -> from : 1
instance from the -> parameters : 1
from the parameters -> we : 1
the parameters we -> this : 1
parameters we this -> is : 1
object is already -> managed : 1
already managed when -> we : 1
managed when we -> have : 1
have the chance -> to : 1
chance to access -> it : 1
to access it -> for : 1
access it for -> the : 1
first this is -> very : 1
is very similar -> to : 2
very similar to -> the : 2
very similar to -> memory : 1
to the recipe -> at : 1
to the recipe -> code : 1
the recipe at -> this : 1
recipe at this -> cout : 1
at this cout -> scope : 1
this cout scope -> auto : 1
cout scope auto -> shared : 1
scope auto shared -> pointers : 1
auto shared pointers -> can : 1
can be they -> need : 1
be they need -> to : 1
need to track -> how : 1
to track how -> many : 1
track how many -> parties : 1
how many parties -> share : 1
many parties share -> this : 1
parties share this -> is : 1
share this is -> done : 1
done with an -> internal : 1
with an internal -> reference : 1
internal reference we -> can : 1
reference we can -> print : 1
can print its -> value : 1
print its value -> using : 1
its value using -> the : 1
value using the -> value : 1
value using the -> we : 1
using the value -> at : 1
did not copy -> it : 1
not copy it -> we : 1
copy it we -> can : 1
can copy to -> which : 1
copy to which -> increases : 1
to which increases -> the : 1
which increases the -> use : 1
increases the use -> counter : 1
the use counter -> to : 3
the use counter -> also : 1
the use counter -> is : 1
the use counter -> being : 1
the use counter -> of : 1
the use counter -> by : 1
use counter to -> cout : 1
use counter to -> during : 1
use counter to -> the : 1
counter to cout -> use : 1
to cout use -> counter : 1
counter at fa -> cout : 1
at fa cout -> use : 1
fa cout use -> counter : 1
counter at leaving -> the : 1
at leaving the -> the : 1
the shared pointers -> and : 1
the shared pointers -> manipulate : 1
shared pointers and -> are : 1
shared pointers and -> a : 1
pointers and are -> reference : 1
pointers and are -> extremely : 1
and are reference -> counter : 1
are reference counter -> is : 1
reference counter is -> decremented : 2
reference counter is -> only : 1
counter is decremented -> to : 2
is decremented to -> making : 1
is decremented to -> in : 1
decremented to making -> the : 1
to making the -> only : 1
making the only -> owner : 1
the only owner -> of : 4
only owner of -> the : 2
only owner of -> we : 1
only owner of -> at : 1
owner of the -> while : 1
owner of the -> cout : 1
owner of the -> the : 1
of the while -> is : 1
the while is -> its : 1
while is its -> reference : 1
is its reference -> counter : 1
its reference counter -> is : 1
its reference counter -> was : 1
decremented to in -> this : 1
to in this -> destructor : 1
in this destructor -> will : 1
this destructor will -> call : 1
destructor will call -> on : 1
call on this -> which : 1
on this which -> disposes : 1
on this which -> is : 1
this which disposes -> of : 1
which disposes of -> cout : 1
disposes of cout -> to : 1
of cout to -> outer : 1
cout to outer -> cout : 1
to outer cout -> call : 1
outer cout call -> function : 1
cout call function -> with : 1
call function with -> our : 1
with our shared -> pointer : 1
our shared pointer -> in : 1
our shared pointer -> the : 1
shared pointer in -> two : 1
pointer in two -> different : 1
two different at -> we : 1
different at we -> call : 1
at we call -> it : 1
call it naively -> by : 1
it naively by -> copying : 1
naively by copying -> will : 1
by copying will -> then : 1
copying will then -> print : 1
will then print -> that : 1
will then print -> the : 1
then print that -> the : 1
print that the -> reference : 1
that the reference -> counter : 1
the reference counter -> has : 1
the reference counter -> is : 1
reference counter has -> the : 1
counter has the -> in : 1
has the in -> the : 1
the second call -> to : 1
second call to -> we : 1
call to we -> move : 1
to we move -> the : 1
we move the -> pointer : 1
move the pointer -> into : 1
the pointer into -> the : 1
makes the only -> owner : 1
the cout cout -> the : 1
cout the instance -> is : 1
instance is destroyed -> immediately : 1
destroyed immediately because -> we : 1
immediately because we -> do : 1
not have ownership -> any : 1
have ownership any -> all : 1
ownership any all -> the : 1
any all the -> objects : 1
all the objects -> are : 1
objects are already -> destroyed : 1
objects are already -> managed : 1
are already destroyed -> when : 1
already destroyed when -> the : 1
destroyed when the -> main : 1
when the main -> function : 1
main function cout -> of : 1
function cout of -> and : 1
cout of and -> running : 1
following in the -> we : 1
we see and -> after : 1
see and after -> we : 1
and after we -> points : 1
after we points -> to : 1
we points to -> its : 1
points to its -> reference : 1
to its reference -> counter : 1
reference counter was -> incremented : 1
counter was incremented -> to : 1
was incremented to -> while : 1
incremented to while -> leaving : 1
to while leaving -> the : 1
while leaving the -> is : 1
leaving the is -> destroyed : 1
the is destroyed -> because : 1
is destroyed because -> the : 1
destroyed because the -> shared : 1
because the shared -> pointer : 1
the shared pointer -> to : 1
the shared pointer -> which : 1
the shared pointer -> we : 1
the shared pointer -> instances : 1
the shared pointer -> it : 1
pointer to it -> being : 1
to it being -> is : 1
it being is -> the : 1
being is the -> only : 1
only the single -> in : 1
the single in -> the : 1
single in the -> output : 1
output is the -> reference : 1
is the reference -> count : 1
the reference count -> of : 2
reference count of -> now : 1
reference count of -> the : 1
count of now -> the : 1
of now the -> only : 1
now the only -> owner : 1
owner of we -> called : 1
of we called -> function : 1
we called function -> on : 1
called function on -> the : 1
on the first -> we : 2
first we copied -> into : 1
we copied into -> which : 1
copied into which -> gave : 1
into which gave -> it : 1
which gave it -> a : 1
gave it a -> reference : 1
gave it a -> folder : 1
it a reference -> counter : 1
a reference counter -> of : 1
a reference counter -> or : 1
reference counter of -> on : 1
counter of on -> the : 1
of on the -> second : 1
on the second -> we : 1
second we moved -> it : 1
we moved it -> into : 1
moved it into -> which : 1
it into which -> did : 1
into which did -> not : 1
which did not -> alter : 1
did not alter -> its : 1
not alter its -> reference : 1
alter its reference -> because : 1
its reference because -> is : 1
reference because is -> the : 1
because is the -> only : 1
owner of at -> this : 1
at this the -> object : 1
this the object -> is : 2
object is destroyed -> immediately : 1
immediately after leaves -> the : 1
after leaves the -> this : 1
leaves the this -> no : 1
the this no -> other : 1
this no other -> heap : 1
no other heap -> objects : 1
other heap objects -> are : 1
heap objects are -> destroyed : 1
are destroyed after -> the : 1
the last print -> inner : 1
last print inner -> scope : 1
print inner scope -> begin : 1
inner scope begin -> ctor : 1
scope begin ctor -> foo : 1
begin ctor foo -> ctor : 1
ctor bar use -> counter : 1
bar use counter -> at : 1
counter at use -> counter : 1
at use counter -> at : 1
counter at dtor -> bar : 1
counter at dtor -> foo : 1
at dtor bar -> back : 1
dtor bar back -> to : 1
bar back to -> outer : 1
back to outer -> scope : 1
to outer scope -> first : 1
outer scope first -> call : 1
scope first call -> use : 1
first call use -> counter : 1
call use counter -> at : 2
counter at second -> call : 1
at second call -> use : 1
second call use -> counter : 1
at dtor foo -> end : 1
dtor foo end -> of : 1
foo end of -> it : 1
end of it -> constructing : 1
of it constructing -> and : 1
it constructing and -> deleting : 1
constructing and deleting -> works : 1
and deleting works -> basically : 1
deleting works basically -> like : 1
works basically like -> constructing : 1
basically like constructing -> shared : 1
like constructing shared -> pointers : 1
constructing shared pointers -> works : 1
shared pointers works -> similarly : 1
pointers works similarly -> as : 1
works similarly as -> creating : 1
similarly as creating -> unique : 1
as creating unique -> pointers : 1
creating unique pointers -> there : 1
unique pointers there -> is : 1
pointers there is -> a : 1
a function creates -> shared : 1
function creates shared -> objects : 1
creates shared objects -> as : 1
shared objects as -> a : 1
objects as a -> pendant : 1
as a pendant -> to : 1
a pendant to -> major : 1
pendant to major -> difference : 1
to major difference -> is : 1
major difference is -> that : 1
can copy instances -> because : 1
copy instances because -> shared : 1
instances because shared -> pointers : 1
because shared pointers -> maintain : 1
shared pointers maintain -> a : 1
pointers maintain a -> together : 1
maintain a together -> with : 1
a together with -> the : 1
with the object -> they : 1
the object they -> the : 1
the object they -> in : 1
object they the -> control : 1
they the control -> block : 1
the control block -> contains : 1
the control block -> and : 1
the control block -> the : 1
the control block -> in : 1
the control block -> is : 2
the control block -> of : 2
control block contains -> a : 1
block contains a -> pointer : 1
contains a pointer -> to : 1
payload object and -> a : 1
and a reference -> counter : 1
reference counter or -> if : 1
counter or if -> there : 1
there are instances -> pointing : 1
are instances pointing -> to : 1
instances pointing to -> the : 1
then the use -> counter : 1
use counter also -> has : 1
counter also has -> the : 1
also has the -> whenever : 1
has the whenever -> a : 1
the whenever a -> instance : 1
whenever a instance -> is : 1
a instance is -> then : 1
a instance is -> its : 1
instance is then -> its : 1
is then its -> destructor : 1
then its destructor -> decrements : 1
then its destructor -> performs : 1
its destructor decrements -> this : 1
destructor decrements this -> internal : 1
decrements this internal -> use : 1
this internal use -> the : 1
internal use the -> last : 1
use the last -> shared : 1
pointer to such -> an : 1
to such an -> object : 1
an object will -> hit : 1
object will hit -> the : 1
will hit the -> condition : 1
hit the condition -> that : 1
the condition that -> it : 1
the condition that -> the : 1
condition that it -> decrements : 1
that it decrements -> the : 1
it decrements the -> use : 1
decrements the use -> counter : 2
counter to during -> its : 1
to during its -> this : 1
during its this -> the : 1
its this the -> shared : 1
this the shared -> pointer : 1
shared pointer which -> calls : 1
pointer which calls -> the : 1
which calls the -> operator : 1
calls the operator -> on : 1
the operator on -> the : 1
operator on the -> payload : 1
this we possibly -> suffer : 1
we possibly suffer -> from : 1
possibly suffer from -> memory : 1
suffer from memory -> leaks : 1
from memory leaks -> because : 1
from memory leaks -> as : 1
memory leaks because -> the : 1
leaks because the -> use : 1
because the use -> count : 1
the use count -> is : 1
the use count -> of : 1
use count is -> automatically : 1
count is automatically -> illustrate : 1
is automatically illustrate -> this : 1
automatically illustrate this -> a : 1
illustrate this a -> bit : 1
a bit have -> a : 1
bit have a -> look : 1
the following step -> we : 1
following step we -> have : 1
step we have -> instances : 1
step we have -> two : 1
we have instances -> managing : 1
we have instances -> and : 1
have instances managing -> an : 1
instances managing an -> object : 1
managing an object -> of : 1
of type the -> use : 1
type the use -> counter : 1
use counter is -> at : 1
counter is at -> value : 1
is at value -> is : 1
at value is -> which : 1
value is which -> decrements : 1
is which decrements -> the : 1
which decrements the -> use : 1
counter to the -> instance : 1
to the instance -> is : 1
to the instance -> we : 1
is not destroyed -> there : 1
is not destroyed -> when : 1
not destroyed there -> is : 1
destroyed there is -> still : 1
there is still -> the : 1
there is still -> no : 1
there is still -> one : 1
is still the -> other : 1
is still the -> mutex : 1
still the other -> shared : 1
the other shared -> in : 1
the other shared -> pointers : 1
other shared in -> step : 1
shared in step -> the : 1
shared in step -> we : 1
in step the -> last : 1
step the last -> shared : 1
shared pointer is -> destroyed : 1
pointer is destroyed -> this : 1
is destroyed this -> leads : 1
destroyed this leads -> to : 1
to the use -> counter : 1
use counter being -> decremented : 1
counter being decremented -> to : 1
being decremented to -> step : 1
decremented to step -> happens : 1
to step happens -> immediately : 1
step happens immediately -> after : 1
happens immediately after -> step : 1
immediately after step -> both : 1
after step both -> the : 1
step both the -> control : 1
both the control -> block : 1
control block and -> the : 1
block and the -> instance : 1
and the instance -> of : 1
the instance of -> are : 1
instance of are -> destroyed : 1
of are destroyed -> and : 1
are destroyed and -> their : 1
destroyed and their -> memory : 1
the with and -> we : 1
we can automatically -> deal : 1
can automatically deal -> with : 1
automatically deal with -> most : 1
deal with most -> dynamically : 1
with most dynamically -> allocated : 1
most dynamically allocated -> objects : 1
allocated objects without -> having : 1
objects without having -> to : 1
having to worry -> about : 1
to worry about -> memory : 1
to worry about -> only : 1
to worry about -> is : 1
worry about memory -> leaks : 1
about memory leaks -> any : 1
memory leaks any -> there : 1
leaks any there -> one : 1
any there one -> important : 1
there one important -> caveat : 1
one important caveat -> to : 1
important caveat to -> we : 1
caveat to we -> have : 1
we have two -> objects : 1
we have two -> shared : 1
have two objects -> on : 1
two objects on -> the : 1
the heap that -> contain : 1
the heap that -> is : 1
heap that contain -> shared : 1
that contain shared -> pointers : 1
contain shared pointers -> to : 1
shared pointers to -> each : 1
pointers to each -> and : 1
to each and -> some : 1
each and some -> other : 1
and some other -> shared : 1
some other shared -> pointer : 1
other shared pointer -> points : 1
shared pointer points -> to : 1
pointer points to -> one : 1
pointer points to -> and : 1
points to one -> of : 1
of them from -> somewhere : 1
them from somewhere -> if : 1
from somewhere if -> that : 1
somewhere if that -> external : 1
if that external -> shared : 1
that external shared -> pointer : 1
external shared pointer -> goes : 1
shared pointer goes -> out : 1
pointer goes out -> of : 1
out of then -> both : 1
of then both -> objects : 1
then both objects -> still : 1
both objects still -> have : 1
objects still have -> the : 1
have the use -> counters : 1
the use counters -> with : 1
use counters with -> values : 1
counters with values -> because : 1
with values because -> they : 1
values because they -> reference : 1
because they reference -> this : 1
they reference this -> leads : 1
reference this leads -> to : 1
to a shared -> pointers : 1
a shared pointers -> should : 1
shared pointers should -> not : 1
pointers should not -> be : 1
should not be -> used : 1
not be used -> in : 1
in this such -> cyclic : 1
this such cyclic -> reference : 1
such cyclic reference -> chains : 1
cyclic reference chains -> prevent : 1
reference chains prevent -> the : 1
chains prevent the -> use : 1
prevent the use -> counter : 1
use counter of -> such : 1
use counter of -> in : 1
counter of such -> objects : 1
of such objects -> to : 1
such objects to -> ever : 1
objects to ever -> reach : 1
to ever reach -> at : 1
ever reach at -> the : 1
reach at the -> following : 1
the following what -> if : 1
following what if -> you : 1
what if you -> are : 1
if you are -> told : 1
if you are -> distribution : 1
you are told -> that : 1
are told that -> it : 1
told that it -> contains : 1
that it contains -> a : 1
contains a potential -> is : 1
a potential is -> defined : 1
potential is defined -> somewhere : 1
is defined somewhere -> else : 1
defined somewhere else -> later : 1
somewhere else later -> in : 1
else later in -> the : 1
later in the -> new : 1
later in the -> program : 1
later in the -> main : 1
in the new -> is : 1
the new is -> the : 1
new is the -> memory : 1
is the memory -> one : 1
the memory one -> might : 1
memory one might -> since : 1
one might since -> the : 1
might since the -> newly : 1
since the newly -> allocated : 1
the newly allocated -> objects : 1
newly allocated objects -> and : 1
allocated objects and -> are : 1
and are immediately -> fed : 1
are immediately fed -> into : 1
immediately fed into -> and : 1
fed into and -> we : 1
we are safe -> from : 2
are safe from -> memory : 2
safe from memory -> it : 1
safe from memory -> leaks : 1
from memory it -> is : 1
memory it is -> true : 1
it is true -> that : 1
is true that -> we : 1
true that we -> are : 1
memory leaks as -> soon : 1
leaks as soon -> as : 1
as the pointers -> are : 1
the pointers are -> captured : 1
pointers are captured -> in : 1
are captured in -> the : 1
the the problem -> is : 1
the problem is -> a : 1
the problem is -> that : 1
problem is a -> bit : 1
a bit fiddly -> to : 1
bit fiddly to -> we : 1
fiddly to we -> call : 1
we call a -> the : 1
call a the -> compiler : 1
a the compiler -> needs : 1
needs to assemble -> code : 1
to assemble code -> that : 1
assemble code that -> calls : 1
code that calls -> and : 1
that calls and -> first : 1
calls and first -> so : 1
and first so -> that : 1
first so that -> it : 1
it can forward -> their : 1
can forward their -> return : 1
forward their return -> values : 1
return values to -> what : 1
values to what -> gets : 1
to what gets -> us : 1
what gets us -> very : 1
gets us very -> bad : 1
us very bad -> in : 1
very bad in -> combination : 1
bad in combination -> with : 1
the example from -> before : 1
the example from -> the : 1
example from before -> is : 1
from before is -> that : 1
before is that -> the : 1
compiler can execute -> these : 1
can execute these -> function : 1
execute these function -> calls : 1
these function calls -> to : 1
function calls to -> and : 1
function calls to -> hide : 1
calls to and -> in : 1
and in back -> at : 1
in back at -> the : 1
back at the -> what : 1
at the what -> happens : 1
the what happens -> if : 1
happens if the -> compiler : 1
if the compiler -> decides : 1
the compiler decides -> to : 1
compiler decides to -> structure : 1
decides to structure -> the : 1
to structure the -> code : 1
structure the code -> in : 1
way where at -> first : 1
where at first -> is : 1
at first is -> then : 1
first is then -> and : 1
is then and -> then : 1
then and then -> is : 1
then and then -> the : 1
and then is -> before : 1
then is before -> the : 1
is before the -> results : 1
before the results -> of : 1
results of these -> functions : 1
these functions are -> finally : 1
functions are finally -> fed : 1
are finally fed -> into : 1
finally fed into -> if : 1
fed into if -> throws : 1
into if throws -> an : 1
if throws an -> we : 1
throws an we -> get : 1
an we get -> a : 1
get a memory -> leak : 1
a memory leak -> because : 1
memory leak because -> we : 1
leak because we -> still : 1
because we still -> have : 1
still have an -> unmanaged : 1
have an unmanaged -> on : 1
an unmanaged on -> the : 1
unmanaged on the -> heap : 1
the heap because -> we : 1
heap because we -> just : 1
because we just -> allocated : 1
we just allocated -> it : 1
just allocated it -> but : 1
allocated it but -> did : 1
it but did -> not : 1
have a chance -> to : 1
a chance to -> to : 1
chance to to -> the : 1
to the management -> of : 1
management of no -> matter : 1
of no matter -> how : 1
matter how we -> catch : 1
matter how we -> return : 1
how we catch -> the : 1
we catch the -> handle : 1
catch the handle -> to : 1
the handle to -> the : 1
handle to the -> object : 1
object is and -> we : 1
is and we -> are : 1
we are two -> easy : 1
are two easy -> ways : 1
two easy ways -> to : 1
easy ways to -> circumvent : 1
ways to circumvent -> this : 1
to circumvent this -> ap : 1
circumvent this ap -> bp : 1
this ap bp -> the : 1
ap bp the -> objects : 1
bp the objects -> are : 1
are already managed -> by : 1
managed by no -> matter : 1
by no matter -> who : 1
no matter who -> throws : 1
matter who throws -> what : 1
who throws what -> exception : 1
throws what exception -> pointers : 1
what exception pointers -> the : 1
exception pointers the -> recipe : 1
pointers the recipe -> about : 1
the recipe about -> we : 1
the recipe about -> shared : 1
recipe about we -> learned : 1
about we learned -> how : 1
learned how useful -> and : 1
how useful and -> easy : 1
useful and easy -> to : 1
and easy to -> use : 1
to use shared -> pointers : 2
use shared pointers -> together : 1
use shared pointers -> that : 1
shared pointers together -> with : 1
pointers together with -> they : 1
together with they -> pose : 1
with they pose -> an : 1
they pose an -> invaluable : 1
pose an invaluable -> improvement : 1
an invaluable improvement -> for : 1
invaluable improvement for -> code : 1
improvement for code -> that : 1
for code that -> needs : 1
code that needs -> to : 2
needs to manage -> dynamically : 1
to manage dynamically -> allocated : 1
dynamically allocated we -> we : 1
dynamically allocated we -> want : 1
allocated we we -> increment : 1
we we increment -> its : 1
we increment its -> internal : 1
its internal reference -> as : 1
reference as long -> as : 1
long as we -> hold : 2
long as we -> comply : 1
as we hold -> our : 1
as we hold -> this : 1
we hold our -> shared : 1
hold our shared -> pointer : 1
shared pointer the -> object : 2
pointer the object -> being : 1
pointer the object -> will : 1
being pointed not -> be : 1
pointed not be -> but : 1
we want some -> kind : 1
we want some -> code : 1
want some kind -> of : 1
kind of us -> to : 1
of us to -> get : 1
us to get -> at : 1
at the object -> as : 1
at the object -> leaving : 1
the object as -> long : 1
the object as -> a : 1
object as long -> as : 1
long as it -> exists : 1
as it exists -> but : 1
it exists but -> does : 1
exists but does -> not : 1
but does not -> prevent : 1
does not prevent -> its : 1
not prevent its -> and : 1
prevent its and -> how : 1
its and how -> do : 1
how do we -> determine : 1
how do we -> model : 2
do we determine -> if : 1
we determine if -> the : 1
determine if the -> object : 1
if the object -> still : 1
if the object -> is : 1
the object still -> such : 1
object still such -> is : 1
still such is -> our : 1
such is our -> it : 1
is our it -> is : 1
is a little -> bit : 1
is a little -> application : 1
more complicated to -> use : 1
complicated to use -> than : 1
to use than -> and : 1
use than and -> but : 1
than and but -> after : 1
and but after -> following : 1
and but after -> starting : 1
but after following -> this : 1
after following this -> we : 1
following this we -> will : 1
will be ready -> to : 1
be ready to -> use : 1
ready to use -> to : 1
program that maintains -> objects : 1
that maintains objects -> with : 1
maintains objects with -> and : 1
objects with and -> we : 1
and we mix -> see : 1
we mix see -> how : 1
mix see how -> this : 1
see how this -> changes : 1
how this changes -> the : 1
this changes the -> smart : 1
this changes the -> type : 2
changes the smart -> we : 1
smart we include -> the : 1
a class that -> prints : 1
a class that -> has : 2
class that prints -> a : 1
prints a message -> in : 1
a message in -> its : 1
message in its -> destructor : 1
in its destructor -> this : 1
its destructor this -> we : 1
destructor this we -> can : 1
can simply check -> when : 1
simply check when -> an : 1
check when an -> item : 1
when an item -> is : 1
an item is -> actually : 1
an item is -> produced : 1
item is actually -> destroyed : 1
is actually destroyed -> later : 1
actually destroyed later -> in : 1
destroyed later in -> the : 1
the program struct -> foo : 1
program struct foo -> int : 1
struct foo int -> cout : 1
foo int cout -> foo : 1
int cout foo -> value : 1
cout foo value -> also : 1
foo value also -> implement : 1
value also implement -> a : 1
also implement a -> function : 1
that prints information -> about : 1
prints information about -> a : 1
information about a -> weak : 1
about a weak -> so : 1
a weak so -> we : 1
weak so we -> can : 1
print a weak -> state : 1
a weak state -> at : 1
weak state at -> different : 1
state at different -> points : 1
at different points -> of : 1
different points of -> our : 1
of our the -> function : 1
function of tells -> the : 1
of tells the -> object : 1
tells the object -> it : 1
tells the object -> to : 1
points to still -> really : 1
to still really -> because : 1
still really because -> holding : 1
really because holding -> a : 1
because holding a -> weak : 1
holding a weak -> pointer : 1
a weak pointer -> to : 1
a weak pointer -> points : 1
a weak pointer -> order : 1
a weak pointer -> pointing : 1
weak pointer to -> an : 1
pointer to an -> object : 1
to an object -> does : 1
an object does -> not : 1
object does not -> prolong : 1
does not prolong -> its : 1
not prolong its -> tells : 1
prolong its tells -> us : 1
its tells us -> how : 1
tells us how -> many : 2
us how many -> instances : 1
us how many -> samples : 1
how many instances -> are : 1
many instances are -> currently : 1
instances are currently -> pointing : 1
are currently pointing -> to : 1
currently pointing to -> the : 1
currently pointing to -> a : 1
the object in -> void : 1
the object in -> any : 1
object in void -> cout : 1
in void cout -> boolalpha : 1
void cout boolalpha -> we : 1
cout boolalpha we -> want : 1
boolalpha we want -> to : 1
access the actual -> we : 1
actual we need -> to : 1
call the it -> returns : 1
us a shared -> pointer : 1
us a shared -> as : 1
case the object -> does : 1
the object does -> any : 1
object does any -> the : 1
does any the -> shared : 1
any the shared -> pointer : 1
shared pointer we -> got : 1
pointer we got -> from : 1
got from it -> is : 1
got from it -> this : 1
from it is -> effectively : 1
it is effectively -> a : 1
is effectively a -> we : 1
is effectively a -> resource : 1
effectively a we -> need : 1
check and then -> we : 1
can access if -> auto : 1
access if auto -> sp : 1
if auto sp -> cout : 1
auto sp cout -> else : 1
sp cout else -> cout : 1
else cout instantiate -> an : 1
cout instantiate an -> empty : 1
instantiate an empty -> weak : 1
an empty weak -> pointer : 1
empty weak pointer -> in : 1
weak pointer in -> the : 1
pointer in the -> main : 1
pointer in the -> program : 1
main function and -> print : 1
main function and -> the : 1
function and print -> its : 1
print its content -> which : 1
its content which -> of : 1
content which of -> empty : 1
which of empty -> at : 1
of empty at -> int : 1
empty at int -> a : 1
at int a -> new : 1
int a new -> we : 1
a new we -> instantiate : 1
new we instantiate -> a : 1
a new shared -> pointer : 1
new shared pointer -> with : 1
new shared pointer -> when : 1
shared pointer with -> a : 3
pointer with a -> fresh : 1
pointer with a -> custom : 1
pointer with a -> type : 1
with a fresh -> instance : 1
a fresh instance -> of : 1
fresh instance of -> then : 1
instance of then -> we : 1
of then we -> copy : 1
of then we -> can : 1
then we copy -> it : 1
we copy it -> to : 1
copy it to -> the : 1
to the weak -> note : 1
the weak note -> that : 1
weak note that -> this : 1
that this will -> not : 1
will not increment -> the : 1
not increment the -> reference : 1
increment the reference -> count : 1
count of the -> shared : 1
count of the -> control : 1
of the shared -> the : 2
of the shared -> this : 1
the shared the -> reference : 1
the shared the -> syntax : 1
the shared the -> second : 1
shared the reference -> counter : 1
counter is only -> pointer : 1
is only pointer -> owns : 1
only pointer owns -> auto : 1
pointer owns auto -> call : 1
owns auto call -> the : 1
auto call the -> weak : 1
call the weak -> pointer : 1
the weak pointer -> function : 1
the weak pointer -> is : 1
the weak pointer -> any : 1
the weak pointer -> correctly : 1
the weak pointer -> only : 1
the weak pointer -> still : 1
the weak pointer -> because : 1
weak pointer function -> before : 1
pointer function before -> we : 1
function before we -> the : 1
before we the -> scope : 1
we the scope -> we : 1
the scope we -> leave : 1
scope we leave -> the : 1
we leave the -> the : 1
we leave the -> inner : 1
leave the the -> instance : 1
the the instance -> should : 1
the instance should -> be : 1
instance should be -> destroyed : 1
should be destroyed -> a : 1
be destroyed a -> weak : 1
destroyed a weak -> pointer : 1
weak pointer points -> to : 1
points to and -> running : 1
to and running -> the : 1
yields us three -> times : 1
us three times -> the : 1
three times the -> output : 1
times the output -> of : 1
first the weak -> pointer : 1
weak pointer is -> in : 1
pointer is in -> the : 1
the second it -> already : 1
second it already -> points : 1
it already points -> to : 1
already points to -> the : 1
the instance we -> is : 1
instance we is -> able : 1
we is able -> to : 1
able to dereference -> it : 1
to dereference it -> after : 1
dereference it after -> before : 1
it after before -> the : 1
after before the -> third : 1
before the third -> we : 1
the third we -> leave : 1
third we leave -> the : 1
leave the inner -> which : 1
the inner which -> triggers : 1
inner which triggers -> the : 1
which triggers the -> destructor : 1
triggers the destructor -> of : 1
destructor of the -> as : 1
destructor of the -> object : 1
destructor of the -> call : 1
destructor of the -> releases : 1
of the as -> we : 1
of the as -> a : 1
the as we -> it : 1
as we it -> is : 1
at the content -> of : 1
of the deleted -> item : 1
the deleted item -> via : 1
deleted item via -> the : 1
item via the -> weak : 1
via the weak -> pointer : 1
weak pointer any -> and : 1
pointer any and -> the : 1
any and the -> weak : 1
and the weak -> pointer : 1
weak pointer correctly -> recognizes : 1
pointer correctly recognizes -> that : 1
correctly recognizes that -> it : 1
recognizes that it -> has : 1
it has true -> false : 1
has true false -> dtor : 1
true false dtor -> foo : 1
false dtor foo -> true : 1
dtor foo true -> it : 1
foo true it -> pointers : 1
true it pointers -> provide : 1
it pointers provide -> us : 1
pointers provide us -> a : 1
provide us a -> way : 1
us a way -> to : 1
way to point -> at : 1
to point at -> an : 1
point at an -> object : 1
at an object -> maintained : 1
an object maintained -> by : 1
object maintained by -> shared : 1
maintained by shared -> pointers : 1
by shared pointers -> without : 1
shared pointers without -> incrementing : 1
pointers without incrementing -> its : 1
without incrementing its -> use : 1
incrementing its use -> a : 1
its use a -> raw : 1
use a raw -> pointer : 1
raw pointer could -> do : 1
pointer could do -> the : 1
could do the -> but : 1
do the but -> a : 1
the but a -> raw : 1
but a raw -> pointer : 1
raw pointer cannot -> tell : 1
pointer cannot tell -> us : 1
tell us if -> it : 1
us if it -> is : 1
us if it -> got : 1
it is dangling -> or : 1
is dangling or -> a : 1
dangling or a -> weak : 1
or a weak -> pointer : 1
weak pointer order -> to : 1
pointer order to -> understand : 1
understand how weak -> pointers : 1
how weak pointers -> as : 1
weak pointers as -> an : 1
pointers as an -> addition : 1
as an addition -> to : 1
an addition to -> shared : 1
addition to shared -> pointers : 1
to shared pointers -> directly : 1
shared pointers directly -> jump : 1
pointers directly jump -> to : 1
directly jump to -> an : 1
jump to an -> illustrating : 1
to an illustrating -> flow : 1
an illustrating flow -> is : 1
illustrating flow is -> similar : 1
flow is similar -> to : 1
to the diagram -> in : 1
the diagram in -> the : 1
diagram in the -> recipe : 1
recipe about shared -> in : 1
about shared in -> step : 1
in step we -> have : 1
have two shared -> pointers : 1
two shared pointers -> and : 1
two shared pointers -> point : 1
pointers and a -> weak : 1
and a weak -> pointer : 1
weak pointer pointing -> to : 1
pointer pointing to -> the : 1
the object of -> type : 1
of type although -> there : 1
type although there -> are : 1
although there are -> three : 1
there are three -> objects : 1
are three objects -> pointing : 1
three objects pointing -> to : 1
objects pointing to -> only : 1
pointing to only -> the : 1
to only the -> shared : 1
only the shared -> pointers : 1
shared pointers manipulate -> its : 1
pointers manipulate its -> use : 1
manipulate its use -> which : 1
its use which -> is : 1
why it has -> the : 1
has the the -> weak : 1
the the weak -> pointer : 1
weak pointer only -> manipulates : 1
pointer only manipulates -> of : 1
only manipulates of -> the : 1
manipulates of the -> control : 1
of the control -> in : 1
of the control -> block : 2
the control in -> steps : 1
control in steps -> and : 1
in steps and -> the : 1
steps and the -> shared : 1
and the shared -> pointer : 1
shared pointer instances -> are : 1
shared pointer instances -> that : 1
pointer instances are -> which : 1
instances are which -> leads : 1
are which leads -> stepwise : 1
which leads stepwise -> to : 1
leads stepwise to -> a : 1
stepwise to a -> use : 1
to a use -> counter : 1
a use counter -> of : 1
counter of in -> step : 1
of in step -> this : 1
step this results -> in : 1
in the object -> being : 1
object being but -> the : 1
being but the -> control : 1
but the control -> block : 1
control block the -> weak : 1
block the weak -> pointer : 1
weak pointer still -> needs : 1
pointer still needs -> the : 1
still needs the -> control : 1
needs the control -> block : 1
control block in -> order : 1
block in order -> to : 1
if it dangles -> or : 1
it dangles or -> only : 1
dangles or only -> when : 1
only when the -> pointer : 1
when the pointer -> that : 1
the pointer that -> still : 1
pointer that still -> points : 1
that still points -> to : 1
still points to -> a : 1
to a control -> block : 1
a control block -> goes : 1
a control block -> of : 1
control block goes -> out : 1
block goes out -> of : 1
control block is -> can : 1
control block is -> this : 1
block is can -> also : 1
is can also -> say : 1
can also say -> that : 1
also say that -> a : 1
say that a -> dangling : 1
say that a -> programmer : 1
that a dangling -> weak : 1
a dangling weak -> pointer : 1
dangling weak pointer -> has : 1
weak pointer has -> in : 1
pointer has in -> order : 1
has in order -> to : 1
order to check -> for : 1
order to check -> if : 1
to check for -> this : 1
check for this -> we : 1
we can ask -> which : 1
can ask which -> returns : 1
ask which returns -> a : 1
returns a boolean -> if : 1
a boolean if -> it : 1
boolean if it -> is : 1
we cannot dereference -> the : 1
cannot dereference the -> weak : 1
dereference the weak -> pointer : 1
weak pointer because -> there : 1
pointer because there -> is : 1
is no object -> to : 1
no object to -> dereference : 1
object to dereference -> any : 1
to dereference any -> order : 1
dereference any order -> to : 1
any order to -> dereference : 1
order to dereference -> a : 1
to dereference a -> weak : 1
dereference a weak -> we : 1
a weak we -> need : 1
weak we need -> to : 1
call this is -> safe : 1
call this is -> where : 1
this is safe -> and : 1
is safe and -> this : 1
safe and this -> function : 1
and this function -> returns : 1
a shared as -> long : 1
shared as long -> as : 2
we hold this -> shared : 1
hold this shared -> the : 1
this shared the -> object : 1
shared the object -> behind : 1
the object behind -> it : 1
object behind it -> cannot : 1
behind it cannot -> vanish : 1
it cannot vanish -> because : 1
cannot vanish because -> we : 1
vanish because we -> incremented : 1
because we incremented -> the : 1
we incremented the -> use : 1
incremented the use -> counter : 1
use counter by -> locking : 1
counter by locking -> if : 1
by locking if -> the : 1
locking if the -> object : 1
object is shortly -> before : 1
is shortly before -> the : 1
shortly before the -> then : 1
then the shared -> pointer : 1
shared pointer it -> returns : 1
pointer it returns -> is : 1
it returns is -> effectively : 1
returns is effectively -> a : 1
effectively a resource -> handling : 1
a resource handling -> of : 1
with smart pointers -> and : 1
with smart pointers -> we : 1
smart pointers and -> are : 1
and are extremely -> and : 1
are extremely and -> it : 1
extremely and it -> in : 1
it in safe -> to : 1
in safe to -> say : 1
safe to say -> that : 1
to say that -> a : 1
that a programmer -> should : 1
a programmer should -> use : 1
programmer should use -> these : 1
should use these -> instead : 1
use these instead -> of : 1
these instead of -> allocating : 1
instead of allocating -> and : 1
of allocating and -> freeing : 1
allocating and freeing -> memory : 1
and freeing memory -> what : 1
freeing memory what -> if : 1
memory what if -> objects : 1
what if objects -> cannot : 1
if objects cannot -> be : 1
objects cannot be -> allocated : 1
cannot be allocated -> using : 1
cannot be allocated -> with : 1
be allocated using -> the : 1
allocated using the -> operator : 1
using the operator -> cannot : 1
the operator cannot -> be : 1
operator cannot be -> freed : 1
cannot be freed -> again : 1
be freed again -> using : 1
freed again using -> many : 1
again using many -> legacy : 1
using many legacy -> libraries : 1
many legacy libraries -> come : 1
legacy libraries come -> with : 1
libraries come with -> their : 1
come with their -> own : 1
with their own -> it : 1
with their own -> signals : 1
their own it -> seems : 1
own it seems -> that : 1
seems that this -> would : 1
that this would -> be : 1
would be a -> we : 1
would be a -> better : 1
be a we -> learned : 1
a we learned -> that : 1
we learned that -> smart : 1
learned that smart -> pointers : 1
that smart pointers -> rely : 1
smart pointers rely -> on : 1
pointers rely on -> and : 1
rely on and -> if : 1
on and if -> the : 1
if the creation -> destruction : 1
the creation destruction -> of : 1
creation destruction of -> specific : 1
destruction of specific -> types : 1
destruction of specific -> to : 1
of specific types -> of : 1
specific types of -> objects : 1
types of objects -> relies : 1
of objects relies -> on : 1
objects relies on -> specific : 1
relies on specific -> factory : 1
on specific factory -> deleter : 1
specific factory deleter -> does : 1
factory deleter does -> this : 1
deleter does this -> prevent : 1
does this prevent -> us : 1
this prevent us -> from : 1
prevent us from -> getting : 1
us from getting -> the : 1
from getting the -> humongous : 1
getting the humongous -> benefits : 1
the humongous benefits -> of : 1
humongous benefits of -> smart : 1
benefits of smart -> at : 1
of smart at -> in : 1
smart at in -> this : 1
at in this -> we : 1
that we only -> need : 1
need to perform -> very : 1
need to perform -> all : 1
to perform very -> minimal : 1
perform very minimal -> customizations : 1
very minimal customizations -> on : 1
minimal customizations on -> smart : 1
customizations on smart -> pointers : 1
on smart pointers -> in : 1
smart pointers in -> order : 1
to let them -> follow : 1
to let them -> run : 1
let them follow -> specific : 1
them follow specific -> procedures : 1
follow specific procedures -> for : 1
specific procedures for -> allocation : 1
procedures for allocation -> and : 1
for allocation and -> destruction : 1
allocation and destruction -> of : 1
of specific to -> do : 1
specific to do -> this : 1
a type that -> cannot : 1
type that cannot -> be : 1
that cannot be -> allocated : 1
be allocated with -> directly : 1
allocated with directly -> cannot : 1
with directly cannot -> be : 1
directly cannot be -> released : 1
cannot be released -> again : 1
be released again -> using : 1
released again using -> as : 1
again using as -> this : 1
using as this -> prevents : 1
as this prevents -> it : 1
this prevents it -> from : 1
prevents it from -> being : 1
it from being -> used : 1
from being used -> with : 1
being used with -> smart : 1
used with smart -> pointers : 1
smart pointers we -> perform : 1
pointers we perform -> the : 1
we perform the -> necessary : 1
perform the necessary -> to : 1
necessary to instances -> and : 1
to instances and -> we : 1
instances and we -> first : 1
and we first -> include : 1
namespace we declare -> a : 1
namespace we declare -> an : 1
declare a class -> that : 1
class that has -> its : 1
class that has -> different : 1
that has its -> constructor : 1
has its constructor -> and : 1
and destructor declared -> this : 1
destructor declared this -> we : 1
declared this we -> simulate : 1
this we simulate -> the : 1
we simulate the -> problem : 1
simulate the problem -> that : 1
the problem that -> we : 1
problem that we -> have : 1
have to access -> specific : 1
to access specific -> functions : 1
access specific functions -> that : 1
specific functions that -> create : 1
functions that create -> and : 1
that create and -> destroy : 1
create and destroy -> instances : 1
create and destroy -> they : 1
and destroy instances -> of : 1
destroy instances of -> class : 1
instances of class -> foo : 1
of class foo -> string : 1
cout name static -> and : 1
name static and -> then : 1
static and then -> create : 1
and then create -> and : 1
then create and -> destroy : 1
and destroy they -> work : 1
destroy they work -> with : 1
they work with -> raw : 1
work with raw -> this : 1
work with raw -> pointers : 1
with raw this -> simulates : 1
raw this simulates -> the : 1
this simulates the -> situation : 1
simulates the situation -> of : 1
the situation of -> a : 1
situation of a -> legacy : 1
of a legacy -> c : 1
a legacy c -> which : 1
legacy c which -> prevents : 1
c which prevents -> us : 1
which prevents us -> from : 1
us from using -> them : 1
from using them -> with : 1
using them with -> normal : 1
them with normal -> static : 1
with normal static -> return : 1
normal static return -> new : 1
static return new -> static : 1
return new static -> void : 1
new static void -> delete : 1
static void delete -> make : 1
void delete make -> such : 1
delete make such -> objects : 1
make such objects -> manageable : 1
such objects manageable -> we : 1
objects manageable we -> of : 1
manageable we of -> put : 1
we of put -> the : 1
of put the -> pointer : 1
put the pointer -> we : 1
the pointer we -> get : 1
pointer we get -> from : 1
get from into -> the : 1
of a shared -> only : 1
of a shared -> pointer : 1
of a shared -> we : 2
a shared only -> the : 1
shared only the -> destruction : 1
only the destruction -> is : 1
the destruction is -> the : 1
destruction is the -> default : 1
the default deleter -> of : 1
default deleter of -> would : 1
deleter of would -> do : 1
of would do -> it : 1
would do it -> the : 1
do it the -> trick : 1
it the trick -> is : 1
the trick is -> that : 2
trick is that -> we : 2
we can give -> a : 1
we can give -> our : 1
we can give -> the : 1
can give a -> the : 1
give a the -> function : 1
a the function -> signature : 1
function signature deleter -> function : 1
signature deleter function -> or : 1
deleter function or -> callable : 1
function or callable -> object : 1
or callable object -> needs : 1
callable object needs -> to : 1
object needs to -> have : 1
needs to have -> is : 1
to have is -> already : 1
have is already -> the : 1
already the same -> as : 1
same as that -> of : 1
as that of -> if : 1
that of if -> the : 1
of if the -> function : 1
of if the -> largest : 1
call for destroying -> the : 1
for destroying the -> object : 1
destroying the object -> is : 1
object is more -> we : 1
more we can -> simply : 1
can simply wrap -> it : 1
simply wrap it -> into : 1
a lambda static -> return : 1
lambda static return -> that : 1
static return that -> returns : 1
return that returns -> a : 1
returns a usual -> giving : 1
a usual giving -> it : 1
usual giving it -> a : 1
giving it a -> custom : 1
it a custom -> deleter : 1
a custom deleter -> did : 1
a custom deleter -> for : 1
a custom deleter -> function : 1
a custom deleter -> is : 1
custom deleter did -> not : 1
deleter did not -> change : 1
not change its -> this : 1
change its this -> uses : 1
its this uses -> virtual : 1
this uses virtual -> function : 1
uses virtual function -> calls : 1
virtual function calls -> to : 1
calls to hide -> such : 1
to hide such -> unique : 1
hide such unique -> pointers : 1
such unique pointers -> do : 1
unique pointers do -> not : 1
pointers do not -> impose : 1
do not impose -> any : 1
impose any which -> makes : 1
any which makes -> the : 1
makes the same -> trick : 1
the same trick -> unfeasible : 1
the same trick -> with : 1
same trick unfeasible -> for : 1
trick unfeasible for -> we : 1
unfeasible for we -> need : 1
for we need -> to : 1
change the type -> of : 1
the as a -> second : 1
as a second -> template : 1
as a second -> constructor : 1
as a second -> the : 2
a second template -> we : 1
second template we -> give : 1
template we give -> it : 1
give it which -> is : 1
it which is -> exactly : 1
exactly the type -> of : 1
type of pointer -> to : 1
of pointer to -> the : 1
to the static -> void : 1
static void return -> the : 1
void return the -> main : 1
return the main -> we : 6
main we just -> instantiate : 1
main we just -> out : 1
we just instantiate -> both : 1
just instantiate both -> a : 1
instantiate both a -> shared : 1
both a shared -> pointer : 1
shared pointer and -> a : 2
and a unique -> pointer : 1
unique pointer in -> the : 1
program we will -> see : 1
will see if -> they : 1
they are and -> automatically : 1
are and automatically -> int : 1
and automatically int -> auto : 1
automatically int auto -> ps : 1
int auto ps -> foo : 1
auto ps foo -> auto : 1
ps foo auto -> pu : 1
foo auto pu -> foo : 1
auto pu foo -> and : 1
pu foo and -> running : 1
foo and running -> the : 1
which is luckily -> just : 1
is luckily just -> what : 1
luckily just what -> we : 1
what we ctor -> shared : 1
we ctor shared -> foo : 1
ctor shared foo -> instance : 1
shared foo instance -> ctor : 1
foo instance ctor -> unique : 1
instance ctor unique -> foo : 1
ctor unique foo -> instance : 1
unique foo instance -> dtor : 2
foo instance dtor -> unique : 1
foo instance dtor -> shared : 1
instance dtor unique -> foo : 1
dtor unique foo -> instance : 1
instance dtor shared -> foo : 1
dtor shared foo -> it : 1
shared foo it -> and : 1
foo it and -> just : 1
it and just -> call : 1
and just call -> on : 1
just call on -> their : 1
call on their -> internal : 1
on their internal -> whenever : 1
their internal whenever -> they : 1
internal whenever they -> ought : 1
whenever they ought -> to : 1
they ought to -> destroy : 1
ought to destroy -> the : 1
to destroy the -> object : 1
destroy the object -> they : 1
object they in -> this : 1
they in this -> we : 1
this we constructed -> a : 1
we constructed a -> class : 1
constructed a class -> which : 1
a class which -> can : 1
class which can -> neither : 1
which can neither -> be : 1
can neither be -> allocated : 1
neither be allocated -> the : 1
be allocated the -> way : 1
allocated the way -> using : 1
the way using -> new : 1
way using new -> can : 1
using new can -> it : 1
new can it -> be : 1
can it be -> destructed : 1
it be destructed -> with : 1
be destructed with -> function : 1
destructed with function -> just : 1
with function just -> returns : 1
function just returns -> a : 1
just returns a -> plain : 1
returns a plain -> raw : 1
a plain raw -> pointer : 1
plain raw pointer -> to : 1
to a newly -> constructed : 1
a newly constructed -> so : 1
newly constructed so -> this : 1
constructed so this -> causes : 1
so this causes -> no : 1
this causes no -> further : 1
causes no further -> smart : 1
no further smart -> pointers : 1
further smart pointers -> work : 1
smart pointers work -> with : 1
pointers work with -> raw : 1
raw pointers problem -> we : 1
pointers problem we -> had : 1
problem we had -> to : 1
had to deal -> with : 1
deal with is -> that : 1
with is that -> we : 1
need to teach -> and : 1
to teach and -> how : 1
teach and how -> to : 1
how to an -> the : 1
to an the -> default : 1
to an the -> function : 1
an the default -> way : 1
the default way -> is : 1
default way is -> the : 1
right that both -> the : 1
both the smart -> pointer : 1
the smart pointer -> types : 1
smart pointer types -> differ : 1
pointer types differ -> a : 1
types differ a -> little : 1
differ a little -> in : 1
a little in -> order : 1
little in order -> to : 1
order to define -> a : 1
define a custom -> deleter : 1
custom deleter for -> we : 1
deleter for we -> have : 1
have to alter -> its : 1
to alter its -> because : 1
alter its because -> the : 1
its because the -> type : 1
because the type -> signature : 1
the type signature -> of : 1
type signature of -> the : 1
signature of the -> deleter : 1
of the deleter -> is : 1
the deleter is -> the : 1
deleter is the -> type : 1
of the maintaining -> a : 1
the maintaining a -> instance : 1
maintaining a instance -> must : 1
a instance must -> void : 1
instance must void -> it : 1
must void it -> can : 1
void it can -> hold : 1
can hold a -> function : 1
hold a function -> pointer : 1
function pointer to -> which : 1
pointer to which -> we : 1
to which we -> provide : 1
which we provide -> it : 1
it as a -> second : 1
a second constructor -> parameter : 1
a second constructor -> and : 1
second constructor parameter -> in : 1
constructor parameter in -> our : 1
parameter in our -> giving : 1
in our giving -> a : 1
our giving a -> custom : 1
giving a custom -> deleter : 1
custom deleter function -> forces : 1
deleter function forces -> us : 1
function forces us -> to : 1
forces us to -> change : 1
us to change -> its : 1
to change its -> why : 1
change its why -> were : 1
its why were -> we : 1
why were we -> able : 1
were we able -> to : 1
we able to -> do : 1
same with changing -> its : 1
with changing its -> the : 1
changing its the -> only : 1
its the only -> thing : 1
thing we had -> to : 1
had to do -> there : 1
do there was -> giving : 1
there was giving -> a : 1
was giving a -> second : 1
giving a second -> constructor : 1
second constructor and -> why : 1
constructor and why -> it : 1
and why it -> be : 1
why it be -> as : 1
it be as -> easy : 1
be as easy -> for : 1
as easy for -> it : 1
easy for it -> is : 1
it is reason -> why : 1
is reason why -> it : 1
reason why it -> is : 1
simple to just -> provide : 1
just provide some -> kind : 1
provide some kind -> of : 1
kind of callable -> deleter : 1
of callable deleter -> object : 1
callable deleter object -> without : 1
deleter object without -> altering : 1
object without altering -> the : 1
without altering the -> shared : 1
altering the shared -> type : 1
the shared type -> lies : 1
shared type lies -> in : 1
type lies in -> the : 1
lies in the -> nature : 1
in the nature -> of : 1
nature of shared -> which : 1
of shared which -> maintain : 1
shared which maintain -> a : 1
which maintain a -> control : 1
maintain a control -> the : 1
a control the -> control : 1
control the control -> block : 1
control block of -> shared : 1
control block of -> a : 2
block of shared -> pointers : 1
of shared pointers -> is : 1
shared pointers is -> an : 1
pointers is an -> object : 1
is an object -> with : 1
an object with -> virtual : 1
object with virtual -> this : 1
with virtual this -> means : 1
virtual this means -> that : 1
that the control -> block : 1
block of a -> standard : 1
block of a -> shared : 1
of a standard -> shared : 1
a standard shared -> pointer : 1
standard shared pointer -> compared : 1
shared pointer compared -> type : 1
pointer compared type -> of : 1
compared type of -> a : 1
type of a -> control : 1
of a control -> block : 1
custom deleter is -> when : 1
deleter is when -> we : 1
want a unique -> pointer : 1
pointer to use -> a : 2
to use a -> custom : 2
to use a -> production : 1
use a custom -> then : 2
a custom then -> this : 2
custom then this -> changes : 2
then this changes -> the : 2
changes the type -> of : 2
of the unique -> when : 1
the unique when -> we : 1
unique when we -> want : 1
want a shared -> pointer : 1
the internal which -> is : 1
internal which is -> invisible : 1
which is invisible -> to : 1
is invisible to -> us : 1
invisible to us -> because : 1
to us because -> this : 1
us because this -> difference : 1
because this difference -> is : 1
this difference is -> hidden : 1
difference is hidden -> behind : 1
is hidden behind -> a : 1
hidden behind a -> virtual : 1
behind a virtual -> function : 1
a virtual function -> would : 1
virtual function would -> be : 1
function would be -> to : 1
be to do -> the : 1
same trick with -> unique : 1
trick with unique -> but : 1
with unique but -> this : 1
unique but this -> would : 1
this would imply -> a : 1
would imply a -> certain : 1
imply a certain -> runtime : 1
a certain runtime -> overhead : 1
certain runtime overhead -> on : 1
runtime overhead on -> this : 1
overhead on this -> is : 1
on this is -> not : 1
not what we -> want : 1
not what we -> why : 1
we want because -> unique : 1
want because unique -> pointers : 1
because unique pointers -> promise : 1
unique pointers promise -> to : 1
pointers promise to -> be : 1
promise to be -> at : 1
to be at -> different : 1
be at different -> member : 1
at different member -> the : 1
the same imagine -> we : 1
same imagine we -> are : 1
imagine we are -> maintaining : 1
we are maintaining -> a : 1
are maintaining a -> shared : 1
maintaining a shared -> pointer : 1
to some and -> dynamically : 1
some and dynamically -> allocated : 1
and dynamically allocated -> we : 1
allocated we want -> to : 1
to start a -> new : 1
to start a -> we : 2
to start a -> thread : 1
start a new -> thread : 2
a new thread -> that : 2
new thread that -> does : 1
new thread that -> executes : 1
thread that does -> some : 1
that does some -> work : 1
does some work -> on : 1
some work on -> a : 1
work on a -> member : 1
on a member -> of : 1
member of this -> complex : 1
of this complex -> if : 1
this complex if -> we : 1
complex if we -> want : 1
want to release -> this : 1
to release this -> shared : 1
release this shared -> pointer : 1
this shared pointer -> the : 1
the object will -> be : 1
object will be -> deleted : 1
will be deleted -> while : 1
be deleted while -> the : 1
deleted while the -> other : 1
while the other -> thread : 1
while the other -> function : 1
the other thread -> is : 1
other thread is -> still : 1
thread is still -> accessing : 1
thread is still -> in : 1
thread is still -> alive : 1
is still accessing -> if : 1
still accessing if -> we : 1
accessing if we -> want : 1
want to give -> the : 1
to give the -> thread : 1
to give the -> producer : 1
give the thread -> object : 1
the thread object -> the : 1
thread object the -> pointer : 1
object the pointer -> to : 1
the pointer to -> the : 1
to the whole -> complex : 1
the whole complex -> object : 1
whole complex object -> because : 1
complex object because -> that : 1
object because that -> would : 1
because that would -> mess : 1
that would mess -> with : 1
would mess with -> our : 1
mess with our -> nice : 1
with our nice -> or : 1
our nice or -> for : 1
nice or for -> other : 1
or for other -> does : 1
for other does -> this : 1
does this mean -> that : 1
this mean that -> we : 1
to do manual -> memory : 1
do manual memory -> management : 1
manual memory management -> it : 1
memory management it -> is : 1
management it is -> possible : 1
shared pointers that -> on : 1
shared pointers that -> do : 1
pointers that on -> one : 1
that on one -> point : 1
on one point -> to : 1
one point to -> a : 1
point to a -> member : 1
to a member -> of : 3
of a large -> shared : 1
a large shared -> while : 1
large shared while -> on : 1
shared while on -> the : 1
while on the -> other : 1
the other perform -> automatic : 1
other perform automatic -> memory : 1
perform automatic memory -> management : 1
automatic memory management -> for : 1
memory management for -> the : 1
management for the -> this : 1
for the this -> we : 1
we will create -> such : 1
will create such -> a : 1
create such a -> scenario : 1
create such a -> person : 1
such a scenario -> threads : 1
a scenario threads -> to : 1
scenario threads to -> keep : 1
threads to keep -> it : 1
to keep it -> in : 1
keep it in -> order : 1
feeling for this -> handy : 1
for this handy -> feature : 1
this handy feature -> of : 1
handy feature of -> to : 1
feature of to -> do : 1
structure that is -> composed : 1
structure that is -> typically : 1
that is composed -> of : 1
is composed of -> multiple : 1
composed of multiple -> we : 1
of multiple we -> allocate : 1
multiple we allocate -> an : 1
we allocate an -> instance : 1
allocate an instance -> of : 1
instance of this -> structure : 1
of this structure -> on : 1
this structure on -> the : 1
structure on the -> heap : 1
heap that is -> maintained : 1
that is maintained -> by : 1
is maintained by -> a : 1
maintained by a -> shared : 1
by a shared -> from : 1
a shared from -> this : 1
shared from this -> shared : 1
from this shared -> we : 1
this shared we -> obtain : 1
shared we obtain -> more : 1
we obtain more -> shared : 1
obtain more shared -> pointers : 1
more shared pointers -> that : 1
pointers that do -> not : 1
do not point -> to : 1
not point to -> the : 2
the actual object -> but : 1
actual object but -> to : 1
object but to -> its : 1
but to its -> include : 1
to its include -> the : 1
its include the -> necessary : 1
define a class -> that : 1
that has different -> we : 1
has different we -> will : 1
will let shared -> pointers : 1
let shared pointers -> point : 1
shared pointers point -> to : 2
shared pointers point -> this : 1
pointers point to -> the : 2
pointers point to -> its : 1
to the individual -> in : 1
the individual in -> order : 1
individual in order -> to : 1
able to see -> when : 1
to see when -> the : 1
see when the -> class : 1
when the class -> is : 1
class is created -> and : 1
is created and -> we : 1
and we let -> its : 1
we let its -> constructor : 1
let its constructor -> and : 1
destructor print struct -> person : 1
print struct person -> string : 1
struct person string -> cout : 1
person string cout -> name : 1
cout name define -> shared : 1
name define shared -> pointers : 1
define shared pointers -> the : 1
shared pointers the -> right : 1
pointers the right -> types : 1
the right types -> to : 1
right types to -> point : 1
types to point -> and : 1
to point and -> member : 1
point and member -> variables : 1
and member variables -> of : 1
variables of a -> class : 1
of a class -> int : 1
a class int -> we : 1
class int we -> enter : 1
int we enter -> a : 1
we enter a -> new : 1
enter a new -> create : 1
a new create -> such : 1
new create such -> a : 1
such a person -> and : 1
a person and -> let : 1
person and let -> a : 1
and let a -> shared : 1
let a shared -> pointer : 1
shared pointer manage -> auto : 1
pointer manage auto -> sperson : 1
manage auto sperson -> we : 1
auto sperson we -> let : 1
sperson we let -> the : 1
let the first -> two : 1
first two shared -> pointers : 1
to its name -> and : 1
its name and -> age : 1
name and age -> the : 1
name and age -> this : 1
name and age -> values : 1
and age the -> trick : 1
age the trick -> is : 1
we use a -> specific : 1
we use a -> short : 1
use a specific -> constructor : 1
a specific constructor -> of : 1
specific constructor of -> which : 1
constructor of which -> accepts : 1
of which accepts -> a : 1
accepts a shared -> pointer : 1
the shared this -> we : 1
shared this we -> can : 1
we can manage -> the : 1
can manage the -> object : 1
manage the object -> while : 1
the object while -> not : 1
the object while -> and : 1
object while not -> pointing : 1
while not pointing -> at : 1
not pointing at -> the : 1
pointing at the -> object : 1
the object leaving -> the : 1
object leaving the -> we : 1
print the name -> and : 1
print the name -> of : 1
and age this -> is : 1
age this is -> only : 1
is only the -> object : 1
only the object -> is : 1
object is still -> cout : 1
is still cout -> and : 1
still cout and -> running : 1
following from the -> destructor : 1
from the destructor -> we : 1
the destructor we -> see : 1
destructor we see -> that : 1
object is indeed -> still : 1
is indeed still -> alive : 1
indeed still alive -> and : 1
still alive and -> we : 1
still alive and -> if : 1
alive and we -> access : 1
and we access -> the : 1
access the name -> and : 1
and age values -> via : 1
age values via -> the : 1
values via the -> member : 1
via the member -> ctor : 1
the member ctor -> john : 1
member ctor john -> doe : 1
ctor john doe -> john : 1
john doe john -> doe : 1
doe john doe -> dtor : 1
john doe dtor -> john : 1
doe dtor john -> it : 1
dtor john it -> this : 1
john it this -> we : 1
we first created -> a : 1
first created a -> shared : 1
created a shared -> pointer : 1
pointer that manages -> a : 1
that manages a -> dynamically : 1
manages a dynamically -> allocated : 1
a dynamically allocated -> then : 1
dynamically allocated then -> we : 1
allocated then we -> made : 1
then we made -> two : 1
we made two -> other : 1
made two other -> smart : 1
two other smart -> pointers : 1
other smart pointers -> point : 1
smart pointers point -> to : 1
to the person -> but : 1
to the person -> object : 1
the person but -> they : 1
person but they -> both : 1
but they both -> did : 1
they both did -> not : 1
both did not -> point : 1
did not point -> to : 1
the person object -> itself : 1
person object itself -> to : 1
object itself to -> its : 1
itself to its -> and : 1
to its and -> summarize : 1
its and summarize -> what : 1
and summarize what -> kind : 1
summarize what kind -> of : 1
kind of scenario -> we : 1
of scenario we -> just : 1
scenario we just -> have : 1
just have a -> look : 1
the following that -> points : 1
following that points -> to : 1
object while and -> point : 1
while and point -> to : 1
and point to -> the : 1
and the members -> of : 1
same they still -> manage : 1
they still manage -> the : 1
still manage the -> entire : 1
manage the entire -> this : 1
the entire this -> is : 1
entire this is -> possible : 1
is possible because -> the : 1
possible because the -> internal : 1
because the internal -> control : 1
the internal control -> block : 1
internal control block -> pointers : 1
control block pointers -> still : 1
block pointers still -> point : 1
pointers still point -> to : 1
still point to -> the : 1
the same control -> no : 1
same control no -> matter : 1
control no matter -> what : 1
matter what the -> individual : 1
what the individual -> shared : 1
the individual shared -> pointers : 1
individual shared pointers -> point : 1
pointers point this -> the : 1
point this the -> use : 1
this the use -> count : 1
use count of -> the : 1
block is this -> the : 1
is this the -> object : 1
object is not -> destroyed : 1
not destroyed when -> is : 1
destroyed when is -> the : 1
when is the -> other : 1
is the other -> shared : 1
is the other -> values : 1
other shared pointers -> still : 1
shared pointers still -> own : 1
pointers still own -> the : 1
still own the -> creating : 1
own the creating -> such : 1
the creating such -> shared : 1
creating such shared -> pointer : 1
such shared pointer -> instances : 1
pointer instances that -> point : 1
instances that point -> to : 1
that point to -> members : 1
that point to -> the : 1
point to members -> of : 1
to members of -> the : 1
shared the syntax -> looks : 1
the syntax looks -> a : 1
syntax looks a -> bit : 1
order to obtain -> a : 1
to obtain a -> that : 1
obtain a that -> points : 1
a that points -> to : 1
to the name -> member : 1
the name member -> of : 1
name member of -> a : 1
a shared we -> need : 1
a shared we -> instantiate : 1
shared we need -> to : 1
write the sperson -> auto : 1
the sperson auto -> sname : 1
sperson auto sname -> order : 1
auto sname order -> to : 1
sname order to -> get : 1
get a specific -> pointer : 1
a specific pointer -> to : 1
specific pointer to -> a : 1
shared we instantiate -> a : 1
instantiate a shared -> pointer : 1
with a type -> specialization : 1
a type specialization -> of : 1
type specialization of -> the : 1
the member we -> want : 1
member we want -> to : 1
want to this -> is : 1
why we write -> in : 1
we write in -> the : 1
write in the -> we : 1
the we first -> provide : 1
we first provide -> the : 1
first provide the -> original : 1
provide the original -> shared : 1
the original shared -> pointer : 1
original shared pointer -> that : 1
pointer that maintains -> the : 1
that maintains the -> object : 1
maintains the object -> as : 1
object as a -> second : 1
a second the -> address : 1
a second the -> default : 1
second the address -> of : 1
address of the -> object : 1
the object the -> new : 1
object the new -> shared : 1
the new shared -> pointer : 1
shared pointer when -> we : 1
pointer when we -> dereference : 1
we dereference random -> numbers : 1
dereference random numbers -> and : 1
random number order -> to : 1
number order to -> get : 1
to get random -> numbers : 1
get random numbers -> for : 1
random numbers for -> whatever : 1
random numbers for -> specific : 1
numbers for whatever -> programmers : 1
for whatever programmers -> usually : 1
whatever programmers usually -> basically : 1
programmers usually basically -> used : 1
usually basically used -> the : 1
basically used the -> function : 1
used the function -> of : 1
function of the -> c : 1
c library before -> since : 1
library before since -> there : 1
before since there -> has : 1
since there has -> whole : 1
there has whole -> of : 1
has whole of -> random : 1
whole of random -> number : 1
of random number -> generators : 1
of random number -> it : 1
random number generators -> different : 1
random number generators -> and : 1
number generators different -> purposes : 1
generators different purposes -> and : 1
different purposes and -> have : 1
purposes and have -> different : 1
and have different -> generators : 1
have different generators -> are : 1
different generators are -> not : 1
generators are not -> completely : 1
are not completely -> so : 1
not completely so -> we : 1
completely so we -> will : 1
at all of -> them : 1
at all of -> and : 1
in this in -> the : 2
in this in -> concurrent : 1
see in what -> ways : 1
in what ways -> they : 1
what ways they -> how : 1
ways they how -> to : 1
they how to -> choose : 1
how to choose -> the : 1
to choose the -> right : 1
choose the right -> and : 1
right and that -> we : 1
and that we -> will : 1
most probably never -> use : 1
probably never use -> all : 1
never use all -> of : 1
use all of -> to : 1
all of to -> do : 1
implement a prints -> a : 1
a prints a -> nice : 1
prints a nice -> illustrating : 1
a nice illustrating -> histogram : 1
nice illustrating histogram -> of : 1
illustrating histogram of -> the : 1
histogram of the -> numbers : 1
the numbers a -> random : 1
numbers a random -> generator : 1
a random generator -> we : 1
random generator we -> will : 1
generator we will -> run : 1
we will run -> all : 1
will run all -> stl : 1
run all stl -> random : 1
all stl random -> number : 1
stl random number -> generator : 1
stl random number -> generating : 1
random number generator -> engines : 1
random number generator -> needs : 1
random number generator -> along : 1
number generator engines -> through : 1
generator engines through -> this : 1
engines through this -> procedure : 1
through this procedure -> and : 1
this procedure and -> learn : 1
procedure and learn -> from : 1
and learn from -> the : 1
learn from the -> this : 1
the this program -> contains : 1
this program contains -> many : 1
program contains many -> repetitive : 1
contains many repetitive -> so : 1
many repetitive so -> it : 1
repetitive so it -> might : 1
so it might -> be : 1
might be advantageous -> to : 1
be advantageous to -> just : 1
advantageous to just -> copy : 1
to just copy -> the : 2
just copy the -> source : 1
just copy the -> whole : 1
copy the source -> code : 1
source code from -> the : 1
code from the -> code : 1
from the code -> repository : 1
the code repository -> accompanying : 1
code repository accompanying -> this : 1
repository accompanying this -> book : 1
accompanying this book -> on : 1
this book on -> the : 1
book on the -> internet : 1
the internet instead -> of : 1
internet instead of -> typing : 1
instead of typing -> all : 1
of typing all -> the : 1
typing all the -> repetitive : 1
all the repetitive -> code : 1
the repetitive code -> we : 1
repetitive code we -> include : 1
code we include -> all : 1
the necessary then -> declare : 1
necessary then declare -> that : 1
helps us print -> some : 1
us print some -> statistics : 1
print some statistics -> for : 1
some statistics for -> each : 1
statistics for each -> type : 1
for each type -> of : 1
each type of -> random : 1
type of random -> number : 1
type of random -> generator : 1
random number it -> accepts : 1
number it accepts -> two : 1
accepts two the -> number : 1
accepts two the -> lower : 1
two the number -> of : 1
number of and -> the : 1
number of and -> stock : 1
number of and -> then : 1
number of we -> will : 1
number of we -> know : 1
will see immediately -> what : 1
see immediately what -> these : 1
immediately what these -> are : 1
what these are -> the : 1
are the type -> of : 1
of random generator -> is : 1
random generator is -> defined : 1
generator is defined -> via : 1
is defined via -> the : 1
defined via the -> template : 1
via the template -> parameter : 1
template parameter the -> first : 1
parameter the first -> thing : 1
function is define -> an : 1
is define an -> alias : 1
an alias type -> for : 1
alias type for -> the : 1
type for the -> resulting : 1
for the resulting -> numeric : 1
the resulting numeric -> type : 1
resulting numeric type -> of : 1
numeric type of -> the : 1
the numbers the -> generator : 1
numbers the generator -> we : 1
the generator we -> also : 1
generator we also -> make : 1
we also make -> sure : 1
also make sure -> that : 1
make sure that -> we : 1
make sure that -> this : 1
make sure that -> was : 1
make sure that -> the : 1
we have at -> least : 1
at least template -> void : 1
least template void -> using : 1
template void using -> typename : 1
void using typename -> partitions : 1
using typename partitions -> we : 1
typename partitions we -> instantiate : 1
partitions we instantiate -> an : 1
we instantiate an -> actual : 1
we instantiate an -> input : 1
instantiate an actual -> generator : 1
an actual generator -> instance : 1
actual generator instance -> of : 1
generator instance of -> type : 1
type we define -> a : 1
define a divisor -> variable : 1
a divisor variable -> called : 1
divisor variable called -> all : 1
variable called all -> random : 1
called all random -> number : 1
all random number -> engines : 1
random number engines -> emit : 1
number engines emit -> random : 1
engines emit random -> numbers : 1
emit random numbers -> within : 1
emit random numbers -> with : 1
random numbers within -> the : 1
numbers within the -> range : 1
the function allows -> the : 1
function allows the -> caller : 1
allows the caller -> to : 1
caller to choose -> by : 1
to choose by -> how : 1
choose by how -> many : 1
how many partitions -> we : 1
how many partitions -> and : 1
many partitions we -> divide : 1
partitions we divide -> every : 1
we divide every -> random : 1
divide every random -> number : 1
every random number -> by : 2
random number by -> dividing : 1
random number by -> we : 1
number by dividing -> the : 1
by dividing the -> largest : 1
dividing the largest -> possible : 1
the largest possible -> value : 1
largest possible value -> by : 1
possible value by -> the : 1
value by the -> number : 1
by the number -> of : 1
of we know -> how : 1
know how large -> every : 1
how large every -> partition : 1
large every partition -> rd : 1
every partition rd -> div : 1
partition rd div -> we : 1
rd div we -> instantiate : 1
div we instantiate -> a : 1
vector of counter -> it : 1
of counter it -> is : 1
counter it is -> exactly : 1
it is exactly -> as : 1
is exactly as -> large : 1
exactly as large -> as : 1
as large as -> the : 1
large as the -> number : 1
number of partitions -> we : 1
of partitions we -> we : 1
partitions we we -> get : 1
we get as -> many : 1
as many random -> values : 1
many random values -> out : 1
random values out -> of : 1
the random engine -> as : 1
random engine as -> the : 1
engine as the -> variable : 1
as the variable -> the : 1
variable the gets -> a : 1
the gets a -> random : 1
from the generator -> and : 1
the generator and -> shifts : 1
generator and shifts -> its : 1
and shifts its -> internal : 1
shifts its internal -> state : 1
its internal state -> to : 1
internal state to -> prepare : 1
state to prepare -> it : 1
to prepare it -> for : 1
prepare it for -> returning : 1
it for returning -> the : 1
for returning the -> next : 1
returning the next -> random : 1
the next random -> by : 1
next random by -> dividing : 1
random by dividing -> every : 1
by dividing every -> random : 1
dividing every random -> number : 1
number by we -> get : 1
by we get -> the : 1
get the partition -> number : 1
the partition number -> it : 1
partition number it -> falls : 1
number it falls -> into : 1
it falls into -> and : 1
falls into and -> can : 1
into and can -> increment : 1
and can increment -> the : 1
can increment the -> right : 1
increment the right -> counter : 1
the right counter -> in : 1
right counter in -> the : 1
counter in the -> vector : 1
vector of v -> for : 1
of v for -> i : 1
v for i -> i : 1
i we have -> a : 1
have a nice -> histogram : 1
have a nice -> example : 1
a nice histogram -> of : 1
nice histogram of -> sample : 1
histogram of sample -> in : 1
of sample in -> order : 1
sample in order -> to : 1
print we need -> to : 1
to know a -> little : 1
know a little -> bit : 1
bit more about -> its : 1
more about its -> actual : 1
about its actual -> counter : 1
its actual counter -> extract : 1
actual counter extract -> its : 1
counter extract its -> largest : 1
extract its largest -> value : 1
its largest value -> using : 1
largest value using -> the : 1
the we then -> divide : 1
we then divide -> this : 1
then divide this -> largest : 1
divide this largest -> counter : 1
this largest counter -> value : 1
largest counter value -> by : 1
counter value by -> this : 1
counter value by -> and : 1
value by this -> we : 1
by this we -> can : 1
we can divide -> all : 1
can divide all -> the : 1
divide all the -> counter : 2
all the counter -> values : 2
the counter values -> by : 1
the counter values -> in : 1
counter values by -> and : 1
values by and -> print : 1
by and print -> a : 1
by and print -> so : 1
print a lot -> of : 1
lot of stars -> on : 1
of stars on -> the : 1
stars on the -> terminal : 1
on the terminal -> without : 1
on the terminal -> later : 1
on the terminal -> must : 1
the terminal without -> exceeding : 1
the terminal without -> this : 1
terminal without exceeding -> of : 1
without exceeding of -> if : 1
exceeding of if -> the : 1
if the largest -> counter : 1
the largest counter -> contains : 1
the largest counter -> knowing : 1
largest counter contains -> a : 1
counter contains a -> number : 1
contains a number -> less : 1
a number less -> than : 1
number less than -> because : 1
less than because -> we : 1
than because we -> did : 1
because we did -> not : 1
not use so -> many : 1
use so many -> we : 1
so many we -> use : 1
many we use -> in : 1
get a minimal -> divisor : 1
a minimal divisor -> of : 1
minimal divisor of -> now : 1
divisor of now -> print : 1
of now print -> the : 1
now print the -> histogram : 1
print the histogram -> to : 1
the histogram to -> the : 1
histogram to the -> every : 1
to the every -> partition : 1
the every partition -> gets : 1
every partition gets -> its : 1
partition gets its -> own : 1
gets its own -> line : 1
its own line -> on : 1
own line on -> the : 1
line on the -> by : 1
on the by -> dividing : 1
the by dividing -> its : 1
by dividing its -> counter : 1
dividing its counter -> value : 1
its counter value -> by : 1
value by and -> print : 1
and print so -> many : 1
print so many -> asterisk : 1
so many asterisk -> symbols : 1
many asterisk symbols -> we : 1
asterisk symbols we -> get : 1
symbols we get -> histogram : 1
we get histogram -> lines : 1
get histogram lines -> that : 1
histogram lines that -> fit : 1
lines that fit -> into : 1
that fit into -> the : 1
i i cout -> i : 1
cout i now -> to : 1
i now to -> the : 1
now to the -> main : 1
to the main -> we : 2
the user define -> how : 1
user define how -> many : 1
define how many -> partitions : 1
many partitions and -> samples : 1
partitions and samples -> should : 1
and samples should -> be : 1
samples should be -> int : 1
should be int -> char : 1
be int char -> if : 1
char if cout -> return : 5
if cout return -> then : 1
if cout return -> convert : 1
if cout return -> const : 1
if cout return -> we : 1
if cout return -> path : 1
cout return then -> read : 1
return then read -> those : 1
then read those -> variables : 1
read those variables -> from : 1
those variables from -> the : 1
from the command -> of : 1
from the command -> the : 1
the command of -> the : 1
command of the -> command : 1
of the command -> line : 1
command line consists -> of : 1
line consists of -> which : 1
consists of which -> we : 1
can convert to -> numbers : 1
convert to numbers -> using : 1
to numbers using -> an : 1
numbers using an -> abbreviation : 1
using an abbreviation -> for : 1
an abbreviation for -> partitions : 1
abbreviation for partitions -> samples : 1
for partitions samples -> we : 1
partitions samples we -> call : 1
samples we call -> our : 1
we call our -> histogram : 1
we call our -> helper : 1
call our histogram -> helper : 1
our histogram helper -> function : 1
histogram helper function -> on : 1
helper function on -> random : 1
function on random -> number : 1
on random number -> engine : 1
random number engine -> the : 1
number engine the -> stl : 1
engine the stl -> this : 1
the stl this -> makes : 1
the stl this -> means : 1
stl this makes -> this : 1
this makes this -> recipe : 1
makes this recipe -> very : 1
this recipe very -> long : 1
recipe very long -> and : 1
very long and -> better : 1
long and better -> copy : 1
and better copy -> the : 1
better copy the -> example : 1
copy the example -> from : 1
example from the -> the : 1
of this program -> is : 1
of this program -> ran : 1
of this program -> without : 1
program is really -> interesting : 1
program is really -> this : 1
really interesting to -> look : 1
interesting to look -> we : 1
to look we -> start : 1
look we start -> with : 1
start with this -> device : 1
with this device -> tries : 1
this device tries -> to : 1
device tries to -> distribute : 1
to distribute the -> randomness : 1
distribute the randomness -> equally : 1
the randomness equally -> over : 1
randomness equally over -> all : 1
equally over all -> the : 1
the possible cout -> next : 1
possible cout next -> random : 1
cout next random -> engine : 1
next random engine -> we : 1
random engine we -> try : 1
engine we try -> is : 1
we try is -> what : 1
try is what -> kind : 1
is what kind -> of : 1
kind of engine -> this : 1
of engine this -> type : 1
engine this type -> refers : 1
this type refers -> to : 1
type refers to -> is : 1
refers to is -> it : 1
to is it -> can : 1
the following random -> cout : 1
following random cout -> we : 1
random cout we -> try : 1
cout we try -> it : 1
we try it -> on : 1
try it on -> all : 1
it on all -> the : 2
on all the -> other : 1
on all the -> mutexes : 1
on all the -> and : 1
on all the -> apply : 1
the other cout -> cout : 1
other cout cout -> cout : 1
program yields interesting -> we : 1
yields interesting we -> will : 1
interesting we will -> see : 1
will see a -> long : 1
see a long -> list : 1
a long list -> of : 1
long list of -> and : 1
of and see -> that : 1
all the random -> engines : 1
the random engines -> have : 1
the random engines -> produce : 1
random engines have -> different : 1
engines have different -> first : 1
have different first -> run : 1
different first run -> the : 1
first run the -> program : 2
program with partitions -> and : 1
with partitions and -> only : 1
partitions and only -> we : 1
and only we -> run : 1
only we run -> the : 1
run the same -> program : 1
the same program -> this : 1
same program this -> time : 1
program this time -> it : 1
this time it -> is : 1
time it is -> still : 1
is still partitions -> but : 1
still partitions but -> it : 1
partitions but it -> becomes : 1
but it becomes -> very : 1
it becomes very -> obvious : 1
becomes very obvious -> that : 1
that the histograms -> look : 1
that the histograms -> appear : 1
the histograms look -> much : 1
histograms look much -> when : 1
look much when -> we : 1
much when we -> take : 1
when we take -> more : 1
we take more -> samples : 1
take more samples -> from : 1
more samples from -> this : 1
samples from this -> is : 1
from this is -> an : 1
from this is -> a : 1
is an important -> it : 1
an important it -> any : 1
important it any -> random : 1
it any random -> number : 1
any random number -> generator : 1
number generator needs -> to : 1
generator needs to -> be : 1
to be instantiated -> as : 1
be instantiated as -> an : 1
instantiated as an -> object : 1
as an object -> before : 1
an object before -> the : 1
object before the -> resulting : 1
before the resulting -> object : 1
the resulting object -> can : 1
resulting object can -> be : 1
be called like -> a : 1
function without parameters -> because : 1
without parameters because -> it : 1
parameters because it -> overloads : 1
because it overloads -> every : 1
it overloads every -> call : 1
overloads every call -> will : 1
every call will -> then : 1
call will then -> lead : 1
will then lead -> to : 1
then lead to -> a : 1
to a new -> random : 1
a new random -> it : 1
new random it -> is : 1
random it is -> that : 1
that this we -> wrote : 1
this we wrote -> a : 1
we wrote a -> program : 1
wrote a program -> that : 1
that is much -> more : 1
is much more -> complex : 1
much more complex -> than : 1
more complex than -> that : 1
more complex than -> instead : 1
more complex than -> just : 1
complex than that -> in : 1
than that in -> order : 1
get a bit -> more : 1
bit more random -> number : 1
more random number -> please : 1
random number please -> play : 1
number please play -> around : 1
please play around -> with : 1
the resulting program -> by : 1
resulting program by -> launching : 1
program by launching -> it : 1
by launching it -> with : 1
launching it with -> different : 1
with different arguments -> and : 1
different arguments and -> realize : 1
arguments and realize -> the : 1
and realize the -> following : 1
realize the following -> more : 1
following more samples -> we : 1
more samples we -> the : 1
samples we the -> more : 1
we the more -> equal : 1
the more equal -> our : 1
more equal our -> partition : 1
equal our partition -> counters : 1
our partition counters -> inequality : 1
partition counters inequality -> of : 1
counters inequality of -> the : 1
inequality of the -> partition : 1
of the partition -> counters : 1
the partition counters -> wildly : 1
partition counters wildly -> differs : 1
counters wildly differs -> between : 1
wildly differs between -> individual : 1
differs between individual -> a : 1
between individual a -> large : 1
individual a large -> number : 1
a large number -> of : 1
large number of -> it : 1
of it becomes -> apparent : 1
it becomes apparent -> that : 1
becomes apparent that -> the : 1
apparent that the -> of : 1
that the of -> the : 1
of the engines -> the : 1
the engines the -> program : 1
engines the program -> with : 1
program with a -> low : 1
with a low -> amount : 1
a low amount -> of : 1
low amount of -> samples : 1
amount of samples -> multiple : 1
of samples multiple -> the : 1
samples multiple the -> distribution : 1
multiple the distribution -> patterns : 1
the distribution patterns -> look : 1
distribution patterns look -> the : 1
patterns look the -> random : 1
look the random -> engines : 1
random engines produce -> the : 1
engines produce the -> random : 1
produce the random -> number : 1
random number sequences -> which : 1
number sequences which -> means : 1
sequences which means -> they : 1
they are random -> at : 1
are random at -> such : 1
random at such -> engines : 1
at such engines -> are : 1
such engines are -> called : 1
engines are called -> their : 1
are called their -> random : 1
called their random -> numbers : 1
their random numbers -> can : 1
random numbers can -> be : 1
be the only -> exception : 1
the only exception -> is : 1
only exception is -> we : 1
we can there -> are : 1
can there are -> a : 1
a few characteristics -> to : 1
few characteristics to -> for : 1
characteristics to for -> most : 1
to for most -> standard : 1
for most standard -> will : 1
most standard will -> be : 1
standard will be -> completely : 1
will be completely -> experts : 1
be completely experts -> of : 1
completely experts of -> cryptography : 1
experts of cryptography -> or : 1
of cryptography or -> similarly : 1
cryptography or similarly -> topics : 1
or similarly topics -> will : 1
similarly topics will -> choose : 1
topics will choose -> wisely : 1
will choose wisely -> between : 1
choose wisely between -> the : 1
wisely between the -> engines : 1
between the engines -> they : 1
the engines they -> but : 1
engines they but -> for : 1
they but for -> us : 1
but for us -> average : 1
for us average -> this : 1
us average this -> is : 1
average this is -> not : 1
not too important -> when : 1
too important when -> we : 1
important when we -> write : 1
we write apps -> with : 1
write apps with -> some : 1
apps with some -> should : 1
with some should -> carry : 1
some should carry -> home : 1
should carry home -> the : 1
carry home the -> following : 1
home the following -> from : 1
following from this -> is : 1
a good default -> choice : 1
good default choice -> for : 1
default choice for -> the : 1
for the average -> we : 1
the average we -> really : 1
average we really -> need : 1
really need random -> provides : 1
need random provides -> us : 1
random provides us -> can : 1
provides us can -> feed : 1
us can feed -> the : 1
feed the constructor -> of : 1
constructor of any -> random : 1
of any random -> engine : 1
any random engine -> with : 1
random engine with -> a : 1
engine with a -> random : 1
with a random -> number : 1
number from maybe -> a : 1
from maybe a -> timestamp : 1
maybe a timestamp -> from : 1
a timestamp from -> the : 1
timestamp from the -> system : 1
from the system -> in : 1
the system in -> order : 1
system in order -> to : 1
make it produce -> different : 1
it produce different -> random : 1
produce different random -> numbers : 1
different random numbers -> each : 1
random numbers each -> this : 1
numbers each this -> is : 1
each this is -> called : 1
each this is -> simple : 1
this is called -> that : 1
is called that -> possibly : 1
called that possibly -> fall : 1
that possibly fall -> back : 1
possibly fall back -> to : 1
back to one -> of : 1
of the deterministic -> the : 1
the deterministic the -> library : 1
deterministic the library -> has : 1
the library has -> no : 1
library has no -> support : 1
has no support -> for : 1
no support for -> nondeterministic : 1
support for nondeterministic -> random : 1
for nondeterministic random -> numbers : 1
nondeterministic random numbers -> and : 1
shape specific the -> last : 1
specific the last -> we : 1
we learned some -> bits : 1
learned some bits -> about : 1
some bits about -> the : 1
bits about the -> stl : 1
about the stl -> random : 1
the stl random -> number : 1
random number generating -> random : 1
number generating random -> numbers : 1
generating random numbers -> this : 1
random numbers this -> or : 1
numbers this or -> the : 1
this or the -> other : 1
other way is -> often : 1
way is often -> only : 1
is often only -> half : 1
often only half -> of : 1
only half of -> the : 1
of the question -> what : 1
question what do -> we : 1
do we need -> those : 1
we need those -> numbers : 1
need those numbers -> are : 1
those numbers are -> we : 1
numbers are we -> programmatically : 1
are we programmatically -> a : 1
we programmatically a -> people : 1
programmatically a people -> used : 1
a people used -> to : 1
people used to -> do : 1
do this using -> which : 1
do this using -> the : 1
this using which -> results : 1
using which results -> in : 1
results in values -> of : 1
in values of -> and : 1
values of and -> that : 1
of and that -> be : 1
and that be -> mapped : 1
that be mapped -> to : 1
be mapped to -> or : 1
mapped to or -> fair : 1
to or fair -> we : 1
or fair we -> do : 1
fair we do -> not : 1
not need a -> library : 1
need a library -> for : 1
a library for -> that : 1
library for that -> randomness : 1
for that randomness -> experts : 1
that randomness experts -> know : 1
randomness experts know -> that : 1
experts know that -> just : 1
know that just -> using : 1
that just using -> the : 1
that just using -> parallel : 1
using the lowest -> few : 1
the lowest few -> bits : 1
lowest few bits -> of : 1
few bits of -> a : 1
bits of a -> random : 1
random number does -> not : 1
number does not -> always : 1
not always lead -> to : 2
always lead to -> random : 1
always lead to -> guaranteed : 1
lead to random -> if : 1
to random if -> we : 1
random if we -> want : 1
want to model -> a : 1
want to model -> something : 1
want to model -> randomly : 1
to model a -> we : 1
model a we -> could : 1
we could surely -> write : 1
could surely write -> in : 1
surely write in -> order : 1
write in order -> to : 1
order to represent -> the : 1
to represent the -> result : 1
represent the result -> after : 1
the result after -> rolling : 1
result after rolling -> the : 1
after rolling the -> there : 1
rolling the there -> is : 1
is still no -> pressing : 1
still no pressing -> library : 1
no pressing library -> needed : 1
pressing library needed -> for : 1
library needed for -> such : 1
needed for such -> simple : 1
for such simple -> if : 1
such simple if -> we : 1
simple if we -> want : 1
to model something -> that : 1
to model something -> specific : 1
model something that -> happens : 1
something that happens -> with : 1
that happens with -> an : 1
happens with an -> exact : 1
with an exact -> probability : 1
an exact probability -> of : 1
exact probability of -> then : 1
probability of then -> we : 1
we can come -> up : 1
can come up -> with : 1
with a formula -> like : 1
a formula like -> yesno : 1
formula like yesno -> should : 1
like yesno should -> it : 1
yesno should it -> be : 1
should it be -> or : 1
it be or -> is : 1
be or is -> from : 1
or is from -> how : 1
is from how -> do : 1
from how do -> we : 1
do we model -> an : 1
do we model -> more : 1
we model an -> die : 1
model an die -> whose : 1
an die whose -> sides : 1
die whose sides -> do : 1
whose sides do -> not : 1
sides do not -> all : 1
do not all -> have : 1
not all have -> the : 1
all have the -> same : 1
same or how -> do : 1
or how do -> we : 1
we model more -> complex : 1
model more complex -> such : 1
more complex such -> problems : 1
complex such problems -> can : 1
such problems can -> quickly : 1
problems can quickly -> evolve : 1
can quickly evolve -> to : 1
quickly evolve to -> scientific : 1
evolve to scientific -> in : 1
to scientific in -> order : 1
scientific in order -> to : 1
order to concentrate -> on : 1
to concentrate on -> our : 1
on our primary -> have : 1
our primary have -> a : 1
primary have a -> look : 1
look at what -> the : 1
at what the -> stl : 1
already provides in -> order : 1
provides in order -> to : 1
to help stl -> contains : 1
help stl contains -> more : 1
stl contains more -> than : 1
contains more than -> a : 1
than a dozen -> distribution : 1
a dozen distribution -> algorithms : 1
dozen distribution algorithms -> that : 1
distribution algorithms that -> can : 1
algorithms that can -> shape : 1
that can shape -> random : 1
can shape random -> numbers : 1
shape random numbers -> for : 1
numbers for specific -> in : 1
for specific in -> this : 1
specific in this -> we : 1
going to have -> a : 2
have a very -> brief : 1
have a very -> detailed : 1
a very brief -> look : 1
very brief look -> at : 1
all of and -> a : 1
of and a -> closer : 1
and a closer -> look : 1
the most generally -> useful : 1
most generally useful -> to : 1
generally useful to -> do : 1
useful to do -> are : 1
going to generate -> random : 1
to generate random -> shape : 1
generate random shape -> and : 1
random shape and -> print : 1
shape and print -> their : 1
and print their -> distribution : 1
and print their -> sizes : 1
print their distribution -> patterns : 1
their distribution patterns -> to : 1
distribution patterns to -> the : 1
patterns to the -> this : 1
can get to -> know : 1
to know all -> of : 1
know all of -> them : 1
of them and -> understand : 1
of them and -> the : 1
of them and -> then : 1
them and understand -> the : 1
and understand the -> most : 1
understand the most -> important : 1
most important which -> is : 1
important which is -> useful : 1
useful if we -> ever : 1
if we ever -> need : 1
we ever need -> to : 1
ever need to -> model : 1
need to model -> something : 1
model something specific -> with : 1
something specific with -> randomness : 1
specific with randomness -> in : 1
with randomness in -> we : 1
randomness in we -> include : 1
in we include -> all : 1
using namespace every -> distribution : 1
namespace every distribution -> the : 1
every distribution the -> stl : 1
distribution the stl -> we : 1
will print a -> histogram : 1
print a histogram -> in : 1
a histogram in -> order : 1
histogram in order -> to : 1
to see its -> every : 1
see its every -> distribution : 1
its every distribution -> looks : 1
every distribution looks -> very : 1
distribution looks very -> it : 1
looks very it -> distribution : 1
very it distribution -> as : 1
it distribution as -> an : 1
distribution as an -> argument : 1
an argument and -> the : 1
an argument and -> returns : 1
argument and the -> number : 1
of samples be -> taken : 1
samples be taken -> from : 1
be taken from -> we : 1
taken from we -> instantiate : 1
from we instantiate -> the : 1
instantiate the default -> random : 1
the default random -> a : 1
default random a -> the : 1
random a the -> map : 1
from the values -> we : 1
values we obtained -> from : 1
we obtained from -> the : 1
obtained from the -> distribution : 1
from the distribution -> to : 1
the distribution to -> counters : 1
distribution to counters -> that : 1
to counters that -> often : 1
counters that often -> which : 1
that often which -> value : 1
often which value -> the : 1
which value the -> reason : 1
value the reason -> for : 1
the reason for -> why : 1
the reason for -> this : 1
reason for why -> we : 1
for why we -> always : 1
why we always -> instantiate : 1
we always instantiate -> a : 1
always instantiate a -> random : 1
a random engine -> is : 1
a random engine -> object : 1
random engine is -> that : 1
engine is that -> all : 1
is that all -> distributions : 1
that all distributions -> are : 1
all distributions are -> just : 1
distributions are just -> used : 1
are just used -> random : 1
just used random -> numbers : 1
used random numbers -> that : 1
random numbers that -> still : 1
random numbers that -> always : 1
numbers that still -> need : 1
that still need -> to : 1
to be generated -> by : 1
generated by a -> random : 1
by a random -> template : 1
a random template -> void : 1
random template void -> take : 1
template void take -> as : 1
void take as -> many : 1
take as many -> samples : 1
as many samples -> as : 1
many samples as -> says : 1
samples as says -> and : 1
as says and -> feed : 1
says and feed -> the : 1
and feed the -> map : 1
feed the map -> counters : 1
the map counters -> with : 1
map counters with -> this : 1
counters with this -> we : 1
with this we -> get : 1
with this we -> are : 1
a nice while -> calling : 1
nice while calling -> alone : 1
while calling alone -> would : 1
calling alone would -> get : 1
alone would get -> us : 1
would get us -> a : 1
get us a -> raw : 1
us a raw -> random : 1
a raw random -> number : 1
raw random number -> from : 1
the random shapes -> the : 1
random shapes the -> random : 1
shapes the random -> numbers : 1
the random numbers -> through : 1
random numbers through -> the : 1
numbers through the -> distribution : 1
through the distribution -> for : 1
the distribution for -> i : 1
distribution for i -> i : 1
i i order -> to : 1
get a terminal -> output : 1
a terminal output -> that : 1
terminal output that -> fits : 1
output that fits -> into : 1
into the terminal -> we : 1
into the terminal -> auto : 1
the terminal we -> need : 1
terminal we need -> to : 1
know the counter -> the : 1
the counter the -> function : 1
counter the function -> helps : 1
function helps us -> in : 1
us in finding -> the : 1
in finding the -> largest : 1
finding the largest -> value : 1
the largest value -> by : 1
largest value by -> comparing : 1
value by comparing -> all : 1
by comparing all -> the : 1
comparing all the -> associated : 1
all the associated -> counters : 1
the associated counters -> in : 1
associated counters in -> the : 1
counters in the -> map : 1
map and returning -> us : 1
and returning us -> an : 1
returning us an -> iterator : 1
to the largest -> counter : 1
largest counter knowing -> this : 1
counter knowing this -> we : 1
knowing this we -> can : 1
we can determine -> by : 1
can determine by -> what : 1
determine by what -> value : 1
by what value -> we : 1
what value we -> need : 1
value we need -> to : 1
need to divide -> all : 1
to divide all -> the : 1
counter values in -> order : 1
values in order -> to : 1
order to fit -> the : 1
to fit the -> output : 1
fit the output -> into : 1
the output into -> the : 1
output into the -> terminal : 1
the terminal auto -> const : 1
terminal auto const -> auto : 1
return we loop -> through : 1
print a bar -> of : 1
a bar of -> asterisk : 1
bar of asterisk -> symbols : 1
of asterisk symbols -> for : 1
asterisk symbols for -> all : 1
symbols for all -> counters : 1
for all counters -> which : 1
all counters which -> have : 1
counters which have -> a : 1
which have a -> significant : 1
have a significant -> we : 1
a significant we -> drop : 1
significant we drop -> the : 1
we drop the -> others : 1
drop the others -> because : 1
the others because -> some : 1
others because some -> distribution : 1
because some distribution -> engines : 1
some distribution engines -> spread : 1
some distribution engines -> because : 1
distribution engines spread -> the : 1
engines spread the -> numbers : 1
spread the numbers -> over : 1
the numbers over -> such : 1
numbers over such -> large : 1
over such large -> domains : 1
such large domains -> that : 1
large domains that -> it : 1
domains that it -> would : 1
that it would -> completely : 1
it would completely -> flood : 1
would completely flood -> our : 1
completely flood our -> terminal : 1
flood our terminal -> for : 1
our terminal for -> auto : 1
terminal for auto -> if : 1
for auto if -> cout : 1
if cout randval -> the : 1
cout randval the -> main : 1
randval the main -> we : 1
main we check -> if : 1
main we check -> user : 1
we check if -> the : 2
user provided us -> exactly : 1
provided us exactly -> one : 1
us exactly one -> which : 1
exactly one which -> tells : 1
one which tells -> us : 1
how many samples -> to : 1
many samples to -> take : 1
samples to take -> from : 1
take from each -> if : 1
from each if -> the : 1
each if the -> user : 1
user provided none -> or : 1
provided none or -> multiple : 1
none or multiple -> we : 1
or multiple we -> error : 1
multiple we error -> int : 1
we error int -> char : 2
error int char -> if : 2
cout return convert -> the : 1
return convert the -> argument : 1
convert the argument -> string : 1
argument string to -> a : 1
to a number -> using : 1
a number using -> samples : 1
number using samples -> we : 1
using samples we -> try : 1
samples we try -> the : 1
we try the -> and : 1
try the and -> these : 1
the and these -> are : 1
and these are -> the : 1
are the most -> typical : 1
the most typical -> distributions : 1
most typical distributions -> used : 1
typical distributions used -> where : 1
distributions used where -> random : 1
used where random -> numbers : 1
where random numbers -> are : 1
random numbers are -> who : 1
numbers are who -> ever : 1
are who ever -> had : 1
who ever had -> stochastic : 1
ever had stochastic -> as : 1
had stochastic as -> a : 1
stochastic as a -> topic : 1
as a topic -> in : 1
a topic in -> maths : 1
topic in maths -> at : 1
in maths at -> school : 1
maths at school -> will : 1
at school will -> most : 1
school will most -> probably : 1
most probably have -> heard : 1
probably have heard -> about : 1
have heard about -> these : 1
heard about these -> the : 1
about these the -> uniform : 1
these the uniform -> distribution : 1
the uniform distribution -> accepts : 1
uniform distribution accepts -> two : 1
distribution accepts two -> the : 1
two the lower -> and : 1
the lower and -> the : 1
lower and the -> upper : 1
and the upper -> bound : 1
the upper bound -> of : 1
upper bound of -> the : 1
bound of the -> range : 1
the range they -> shall : 1
range they shall -> distribute : 1
they shall distribute -> random : 1
shall distribute random -> values : 1
distribute random values -> by : 1
random values by -> choosing : 1
values by choosing -> and : 1
by choosing and -> we : 1
choosing and we -> will : 1
will get equally -> often : 1
get equally often -> occurring : 1
equally often occurring -> values : 1
often occurring values -> between : 1
occurring values between -> the : 1
values between the -> normal : 1
between the normal -> distribution : 1
the normal distribution -> accepts : 1
normal distribution accepts -> a : 1
distribution accepts a -> and : 1
distribution accepts a -> lower : 1
and a cout -> cout : 1
a cout cout -> really : 1
cout cout really -> interesting : 1
cout really interesting -> distribution : 1
really interesting distribution -> is : 1
interesting distribution is -> it : 1
distribution is it -> accepts : 1
input ranges as -> the : 1
ranges as the -> first : 1
the first range -> contains : 1
first range contains -> numbers : 1
range contains numbers -> that : 1
contains numbers that -> denote : 1
numbers that denote -> the : 1
denote the limits -> of : 1
the limits of -> by : 1
limits of by -> defining : 1
of by defining -> it : 1
by defining it -> as : 1
defining it as -> we : 1
it as we -> get : 1
as we get -> one : 1
we get one -> interval : 1
we get one -> large : 1
get one interval -> that : 1
one interval that -> spans : 1
interval that spans -> from : 2
that spans from -> to : 2
spans from to -> an : 1
spans from to -> and : 1
from to an -> interval : 1
to an interval -> that : 1
an interval that -> spans : 1
from to and -> the : 1
the last interval -> spanning : 1
last interval spanning -> from : 1
interval spanning from -> to : 1
spanning from to -> the : 1
the other input -> range : 1
other input range -> defines : 1
input range defines -> the : 1
range defines the -> weights : 1
defines the weights -> of : 1
the weights of -> the : 1
weights of the -> input : 1
input by setting -> those : 1
by setting those -> weights : 1
setting those weights -> to : 1
those weights to -> the : 1
weights to the -> intervals : 1
to the intervals -> are : 1
the intervals are -> hit : 1
intervals are hit -> by : 1
are hit by -> random : 1
hit by random -> numbers : 1
by random numbers -> with : 1
random numbers with -> the : 1
random numbers with -> probabilities : 1
numbers with the -> chances : 1
with the chances -> of : 1
the chances of -> and : 1
chances of and -> within : 1
of and within -> every : 1
and within every -> all : 1
within every all -> the : 1
every all the -> values : 1
values are hit -> with : 1
are hit with -> equal : 1
hit with equal -> intervals : 1
with equal intervals -> weights : 1
equal intervals weights -> cout : 1
intervals weights cout -> constructed : 1
weights cout constructed -> but : 1
cout constructed but -> its : 1
constructed but its -> weight : 1
but its weight -> characteristics : 1
its weight characteristics -> work : 1
weight characteristics work -> completely : 1
characteristics work completely -> for : 1
work completely for -> every : 1
completely for every -> interval : 1
for every interval -> boundary : 1
every interval boundary -> there : 1
interval boundary there -> is : 1
boundary there is -> one : 1
is one weight -> in : 1
one weight in -> the : 1
weight in the -> transition : 1
in the transition -> from : 1
the transition from -> one : 1
transition from one -> boundary : 1
from one boundary -> to : 1
one boundary to -> the : 1
boundary to the -> the : 1
the the probability -> is : 1
the probability is -> linearly : 1
probability is linearly -> we : 1
is linearly we -> use : 1
linearly we use -> the : 1
the same interval -> list : 1
same interval list -> but : 1
interval list but -> a : 1
list but a -> different : 1
but a different -> list : 1
a different list -> of : 1
different list of -> weight : 1
list of weight -> cout : 1
of weight cout -> bernoulli : 1
weight cout bernoulli -> distribution : 1
cout bernoulli distribution -> is : 1
bernoulli distribution is -> another : 1
bernoulli distribution is -> perfect : 1
distribution is another -> important : 1
is another important -> distribution : 1
another important distribution -> because : 1
important distribution because -> it : 1
distribution because it -> distributes : 1
because it distributes -> only : 1
it distributes only -> or : 1
distributes only or -> with : 1
only or with -> a : 1
or with a -> specific : 1
a specific its -> output : 1
specific its output -> values : 1
output values are -> or : 1
values are or -> another : 1
are or another -> interesting : 1
or another interesting -> which : 1
another interesting which -> is : 1
interesting which is -> useful : 1
is useful in -> many : 1
useful in many -> is : 1
in many is -> in : 1
many is in -> our : 1
our we initialize -> it : 1
we initialize it -> to : 1
initialize it to -> the : 1
to the discrete -> values : 1
the discrete values -> these : 1
discrete values these -> values : 1
values these values -> are : 1
values are interpreted -> as : 1
are interpreted as -> weights : 1
interpreted as weights -> for : 1
as weights for -> the : 1
weights for the -> possible : 1
for the possible -> output : 1
the possible output -> values : 1
possible output values -> to : 1
output values to -> cout : 1
values to cout -> cout : 1
cout cout are -> a : 1
cout are a -> lot : 1
of different other -> distribution : 1
different other distribution -> they : 1
other distribution they -> are : 1
distribution they are -> very : 1
they are very -> special : 1
are very special -> and : 1
very special and -> useful : 1
special and useful -> in : 1
and useful in -> very : 1
useful in very -> specific : 1
in very specific -> if : 1
very specific if -> you : 1
specific if you -> have : 1
you have never -> heard : 1
have never heard -> about : 1
never heard about -> they : 1
heard about they -> be : 1
about they be -> for : 1
they be for -> since : 1
be for since -> our : 1
for since our -> program : 1
since our program -> will : 1
program will produce -> nice : 1
will produce nice -> distribution : 1
produce nice distribution -> we : 1
nice distribution we -> will : 1
distribution we will -> print : 1
will print them -> for : 1
print them for -> curiosity : 1
them for curiosity -> cout : 1
for curiosity cout -> cout : 1
curiosity cout cout -> cout : 1
the following first -> run : 1
following first run -> the : 1
program with samples -> per : 1
with samples per -> run : 1
with samples per -> distribution : 1
samples per run -> with : 1
per run with -> samples : 1
run with samples -> per : 1
samples per distribution -> shows : 1
per distribution shows -> that : 1
distribution shows that -> the : 1
the histograms appear -> much : 1
histograms appear much -> cleaner : 1
appear much cleaner -> and : 1
much cleaner and -> more : 1
cleaner and more -> typical : 1
and more typical -> for : 1
more typical for -> each : 1
typical for each -> but : 1
for each but -> we : 1
each but we -> also : 1
we also see -> which : 1
also see which -> ones : 1
see which ones -> are : 1
which ones are -> and : 1
which ones are -> while : 1
ones are and -> which : 1
are and which -> ones : 1
and which ones -> are : 1
ones are while -> they : 1
are while they -> are : 1
are being it -> we : 1
being it we -> usually : 1
it we usually -> do : 1
not care too -> much : 1
care too much -> about : 1
too much about -> the : 1
much about the -> random : 1
about the random -> number : 1
random number as -> long : 1
number as long -> it : 1
as long it -> is : 1
long it is -> fast : 1
it is fast -> and : 1
is fast and -> produces : 1
fast and produces -> numbers : 1
and produces numbers -> that : 1
produces numbers that -> are : 1
numbers that are -> as : 1
that are as -> random : 1
are as random -> as : 1
as random as -> the : 1
random as the -> distribution : 1
as the distribution -> is : 1
the distribution is -> something : 1
distribution is something -> we : 1
is something we -> depending : 1
is something we -> need : 1
something we depending -> on : 1
we depending on -> the : 1
on the problem -> we : 2
the problem we -> like : 1
the problem we -> try : 1
problem we like -> to : 1
we like to -> solve : 1
like to solve -> order : 1
to solve order -> to : 1
solve order to -> use : 1
to use any -> we : 1
to use any -> external : 1
use any we -> first : 1
any we first -> need : 1
need to instantiate -> a : 1
distribution object from -> we : 1
object from we -> have : 1
seen that different -> distributions : 1
that different distributions -> take : 1
different distributions take -> different : 1
distributions take different -> constructor : 1
take different constructor -> in : 1
different constructor in -> the : 1
the recipe we -> went : 1
recipe we went -> a : 1
we went a -> bit : 1
went a bit -> too : 1
bit too briefly -> over : 1
too briefly over -> some : 1
briefly over some -> distribution : 1
over some distribution -> engines : 1
distribution engines because -> most : 1
engines because most -> of : 1
because most of -> them : 1
most of them -> are : 1
most of them -> and : 1
them are too -> special : 1
are too special -> too : 1
too special too -> complex : 1
special too complex -> to : 1
too complex to -> cover : 1
complex to cover -> but : 1
to cover but -> they : 1
cover but they -> are : 1
are all documented -> in : 1
all documented in -> detail : 1
documented in detail -> in : 1
the stl as -> soon : 1
stl as soon -> as : 1
have a distribution -> we : 1
a distribution we -> can : 1
distribution we can -> call : 1
call it like -> a : 1
it like a -> function : 1
accepts a random -> engine : 1
random engine object -> as : 1
engine object as -> its : 1
object as its -> only : 1
object as its -> argument : 1
its only what -> happens : 1
only what happens -> then : 1
what happens then -> is : 1
happens then is -> that : 1
then is that -> the : 1
that the distribution -> engine : 1
the distribution engine -> takes : 1
distribution engine takes -> a : 1
engine takes a -> random : 1
takes a random -> value : 1
a random value -> from : 1
random value from -> the : 1
the random applies -> some : 1
random applies some -> magic : 1
applies some magic -> shaping : 1
some magic shaping -> completely : 1
magic shaping completely -> depends : 1
shaping completely depends -> on : 1
completely depends on -> the : 1
on the choice -> of : 1
of the distribution -> of : 1
the distribution of -> and : 1
distribution of and -> then : 1
then returns us -> a : 1
then returns us -> another : 1
us a random -> this : 1
a random this -> leads : 1
random this leads -> to : 1
leads to completely -> different : 1
to completely different -> as : 1
completely different as -> we : 1
different as we -> executing : 1
as we executing -> the : 1
we executing the -> most : 1
executing the most -> comprehensive : 1
the most comprehensive -> way : 1
most comprehensive way -> to : 1
comprehensive way to -> get : 1
to get to -> know : 1
know the different -> distributions : 1
the different distributions -> is : 1
different distributions is -> around : 1
distributions is around -> with : 1
is around with -> the : 1
with the program -> we : 1
program we just -> in : 1
we just in -> addition : 1
just in addition -> to : 1
addition to summarize -> the : 1
to summarize the -> most : 1
summarize the most -> important : 1
most important for -> all : 1
important for all -> the : 1
all the distributions -> that : 1
the distributions that -> occur : 1
distributions that occur -> in : 1
that occur in -> our : 1
occur in our -> program : 1
in our program -> but : 1
our program but -> not : 1
program but not -> in : 1
but not in -> the : 1
following please consult -> the : 1
please consult the -> stl : 1
consult the stl -> documentation : 1
stl documentation if -> you : 1
documentation if you -> are : 1
you are distribution -> accepts : 1
are distribution accepts -> a : 1
accepts a lower -> and : 1
a lower and -> an : 1
lower and an -> upper : 1
and an upper -> bound : 1
upper bound value -> as : 1
bound value as -> constructor : 1
value as constructor -> it : 1
value as constructor -> parameters : 1
as constructor it -> give : 1
constructor it give -> us : 1
it give us -> random : 1
give us random -> numbers : 1
us random numbers -> that : 1
numbers that always -> fall : 1
that always fall -> into : 1
always fall into -> the : 1
fall into the -> interval : 1
into the interval -> between : 1
the interval between -> those : 1
interval between those -> the : 1
between those the -> probability : 1
those the probability -> for : 1
the probability for -> each : 1
the probability for -> the : 1
the probability for -> every : 1
probability for each -> of : 1
for each of -> the : 1
for each of -> of : 1
values in this -> interval : 1
values in this -> in : 1
in this interval -> is : 1
this interval is -> the : 1
interval is the -> which : 1
us a histogram -> with : 1
a histogram with -> this : 1
histogram with this -> distribution : 1
with this distribution -> is : 1
this distribution is -> representative : 1
distribution is representative -> a : 1
is representative a -> for : 1
representative a for -> because : 1
a for because -> each : 1
for because each -> side : 1
because each side -> of : 1
each side of -> the : 1
side of the -> die : 1
of the die -> has : 1
the die has -> the : 1
die has the -> same : 1
the same probability -> to : 1
same probability to -> normal : 1
probability to normal -> or : 1
to normal or -> gauss : 1
normal or gauss -> occurs : 1
or gauss occurs -> practically : 1
gauss occurs practically -> everywhere : 1
occurs practically everywhere -> in : 1
practically everywhere in -> its : 1
everywhere in its -> stl : 1
in its stl -> version : 1
its stl version -> accepts : 1
stl version accepts -> a : 1
version accepts a -> mean : 1
accepts a mean -> value : 1
a mean value -> and : 1
value and a -> standard : 1
and a standard -> derivation : 1
a standard derivation -> value : 1
standard derivation value -> as : 1
derivation value as -> constructor : 1
as constructor parameters -> and : 1
constructor parameters and -> forms : 1
parameters and forms -> a : 1
and forms a -> shape : 1
forms a shape -> in : 1
a shape in -> the : 1
shape in the -> if : 1
if we compare -> the : 1
we compare the -> body : 1
compare the body -> size : 1
the body size -> or : 1
body size or -> iq : 1
size or iq -> of : 1
or iq of -> humans : 1
iq of humans -> or : 1
of humans or -> other : 1
humans or other -> or : 1
or other or -> the : 1
other or the -> grades : 1
or the grades -> of : 1
the grades of -> we : 1
grades of we -> will : 1
we will realize -> that : 1
will realize that -> these : 1
realize that these -> numbers : 1
that these numbers -> are : 1
these numbers are -> also : 1
numbers are also -> bernoulli : 1
are also bernoulli -> distribution : 1
also bernoulli distribution -> is : 1
distribution is perfect -> if : 1
is perfect if -> we : 1
perfect if we -> want : 1
want to flip -> a : 1
to flip a -> coin : 1
flip a coin -> or : 1
a coin or -> get : 1
coin or get -> a : 1
or get a -> it : 1
get a it -> emits : 1
a it emits -> only : 1
it emits only -> the : 1
emits only the -> values : 1
the values or -> and : 1
values or and -> its : 1
or and its -> only : 1
and its only -> constructor : 1
its only constructor -> parameter : 1
only constructor parameter -> is : 1
constructor parameter is -> the : 1
is the probability -> for : 1
probability for the -> value : 1
value of discrete -> distribution : 1
of discrete distribution -> is : 1
discrete distribution is -> interesting : 1
distribution is interesting -> if : 1
is interesting if -> we : 1
interesting if we -> only : 1
only want a -> very : 1
want a very -> discrete : 1
a very discrete -> set : 1
very discrete set -> of : 1
discrete set of -> values : 1
set of values -> for : 1
of values for -> which : 1
values for which -> we : 1
want to define -> the : 1
define the probability -> for : 1
probability for every -> individual : 1
for every individual -> its : 1
every individual its -> constructor : 1
individual its constructor -> takes : 1
list of weights -> and : 1
of weights and -> will : 1
weights and will -> emit : 1
and will emit -> random : 1
will emit random -> numbers : 1
numbers with probabilities -> depending : 1
with probabilities depending -> on : 1
probabilities depending on -> their : 1
depending on their -> if : 1
on their if -> we : 1
their if we -> want : 1
to model randomly -> distributed : 1
model randomly distributed -> blood : 1
randomly distributed blood -> of : 1
distributed blood of -> which : 1
blood of which -> there : 1
of which there -> are : 1
which there are -> only : 1
there are only -> four : 1
there are only -> and : 1
are only four -> different : 1
only four different -> ones : 1
four different ones -> that : 1
different ones that -> have : 1
ones that have -> specific : 1
that have specific -> then : 1
have specific then -> this : 1
specific then this -> engine : 1
then this engine -> is : 1
this engine is -> a : 1
engine is a -> perfect : 1
is a perfect -> and : 1
a perfect and -> this : 1
perfect and this -> we : 1
the following parallelizing -> code : 1
following parallelizing code -> that : 1
and stopping shared -> locking : 1
stopping shared locking -> with : 1
locking with deadlocks -> with : 1
with deadlocks with -> concurrent : 1
library with have -> much : 1
with have much -> support : 1
have much support -> for : 1
much support for -> this : 1
support for this -> does : 1
for this does -> not : 1
mean that and -> synchronizing : 1
that and synchronizing -> threads : 1
and synchronizing threads -> was : 1
synchronizing threads was -> not : 1
threads was not -> but : 1
was not but -> it : 1
but it was -> necessary : 1
it was necessary -> to : 1
was necessary to -> use : 1
necessary to use -> operating : 1
to use operating -> threads : 1
use operating threads -> are : 1
operating threads are -> inherently : 1
threads are inherently -> operating : 1
are inherently operating -> we : 1
inherently operating we -> got : 1
operating we got -> which : 1
we got which -> enables : 1
got which enables -> basic : 1
which enables basic -> portable : 1
enables basic portable -> thread : 1
basic portable thread -> control : 1
portable thread control -> across : 1
thread control across -> all : 1
control across all -> operating : 1
across all operating -> for : 1
all operating for -> synchronizing : 1
operating for synchronizing -> also : 1
for synchronizing also -> introduced : 1
synchronizing also introduced -> mutex : 1
also introduced mutex -> classes : 1
introduced mutex classes -> and : 1
mutex classes and -> comfortable : 1
mutex classes and -> raii : 2
classes and comfortable -> lock : 1
and comfortable lock -> in : 1
comfortable lock in -> addition : 1
lock in addition -> to : 1
addition to allows -> for : 1
to allows for -> flexible : 1
allows for flexible -> event : 1
for flexible event -> notification : 1
flexible event notification -> between : 1
event notification between -> other : 1
notification between other -> really : 1
between other really -> interesting : 1
other really interesting -> additions : 1
really interesting additions -> are : 1
interesting additions are -> and : 1
additions are and -> can : 1
are and can -> now : 1
and can now -> wrap : 1
can now wrap -> arbitrary : 1
now wrap arbitrary -> normal : 1
wrap arbitrary normal -> functions : 1
arbitrary normal functions -> into : 1
normal functions into -> calls : 1
functions into calls -> in : 1
into calls in -> order : 1
calls in order -> to : 1
to execute them -> asynchronously : 1
execute them asynchronously -> in : 1
them asynchronously in -> the : 1
asynchronously in the -> such : 1
in the such -> wrapped : 1
the such wrapped -> functions : 1
such wrapped functions -> return : 1
wrapped functions return -> objects : 1
functions return objects -> that : 1
return objects that -> promise : 1
objects that promise -> to : 1
that promise to -> contain : 1
promise to contain -> the : 1
to contain the -> result : 1
contain the result -> of : 1
the function so -> we : 1
function so we -> can : 1
can do something -> else : 2
can do something -> if : 1
something else before -> we : 1
else before we -> wait : 1
before we wait -> for : 1
we wait for -> its : 1
wait for its -> actually : 1
wait for its -> return : 1
for its actually -> enormous : 1
its actually enormous -> the : 1
actually enormous the -> stl : 1
enormous the stl -> are : 1
stl are which -> can : 1
are which can -> be : 1
be added to -> of : 1
added to of -> the : 1
of the already -> this : 1
the already this -> addition : 1
already this addition -> means : 1
this addition means -> that : 1
addition means that -> we : 1
can just add -> a : 1
just add a -> single : 1
add a single -> execution : 1
a single execution -> policy : 2
single execution policy -> argument : 2
execution policy argument -> to : 2
policy argument to -> the : 1
policy argument to -> our : 1
argument to the -> existing : 1
to the existing -> standard : 1
existing standard algorithm -> calls : 1
standard algorithm calls -> in : 1
algorithm calls in -> our : 1
calls in our -> old : 1
in our old -> programs : 1
our old programs -> and : 1
our old programs -> utilize : 1
old programs and -> get : 1
programs and get -> parallelization : 1
and get parallelization -> without : 1
get parallelization without -> complex : 1
parallelization without complex -> this : 1
without complex this -> we : 1
complex this we -> will : 1
we will go -> through : 3
will go through -> all : 1
will go through -> these : 1
will go through -> two : 1
go through all -> these : 1
through all these -> additions : 1
all these additions -> in : 1
these additions in -> order : 1
additions in order -> to : 1
to learn the -> most : 1
learn the most -> important : 1
most important things -> about : 1
important things about -> have : 1
things about have -> enough : 1
about have enough -> oversight : 1
have enough oversight -> parallelization : 1
enough oversight parallelization -> support : 1
oversight parallelization support -> in : 1
parallelization support in -> the : 1
do not cover -> all : 1
not cover all -> the : 1
cover all the -> but : 1
all the but -> the : 2
but the most -> important : 1
most important the -> overview : 1
important the overview -> gained : 1
the overview gained -> from : 1
overview gained from -> this : 1
gained from this -> book : 1
from this book -> helps : 1
this book helps -> understanding : 1
book helps understanding -> the : 1
helps understanding the -> rest : 1
understanding the rest -> of : 1
of the parallel -> which : 1
the parallel which -> always : 1
parallel which always -> look : 1
always look up -> in : 1
stl documentation this -> chapter : 1
documentation this chapter -> contains : 1
this chapter contains -> two : 1
chapter contains two -> bonus : 1
contains two bonus -> in : 1
two bonus in -> one : 1
bonus in one -> we : 1
in one we -> will : 1
one we will -> parallelize : 1
we will parallelize -> the : 1
will parallelize the -> mandelbrot : 1
parallelize the mandelbrot -> ascii : 1
the mandelbrot ascii -> renderer : 1
mandelbrot ascii renderer -> from : 1
ascii renderer from -> use : 1
renderer from use -> of : 1
from use of -> stl : 2
of stl with -> only : 1
stl with only -> minimal : 1
with only minimal -> in : 1
only minimal in -> the : 1
minimal in the -> last : 1
last we will -> implement : 1
implement a tiny -> library : 1
a tiny library -> parallelizing : 1
tiny library parallelizing -> complex : 1
library parallelizing complex -> tasks : 1
parallelizing complex tasks -> implicitly : 1
complex tasks implicitly -> and : 1
tasks implicitly and -> parallelizing : 1
implicitly and parallelizing -> code : 1
uses standard came -> with : 1
standard came with -> one : 1
came with one -> really : 1
with one really -> extension : 1
one really extension -> for : 1
really extension for -> for : 1
extension for for -> standard : 1
for for standard -> sixty : 1
for standard sixty -> were : 1
standard sixty were -> extended : 1
sixty were extended -> to : 1
were extended to -> accept : 1
extended to accept -> execution : 1
to accept execution -> policies : 1
accept execution policies -> in : 1
execution policies in -> order : 3
policies in order -> to : 3
order to run -> parallel : 1
order to run -> into : 1
to run parallel -> on : 1
run parallel on -> multiple : 1
parallel on multiple -> and : 1
on multiple and -> even : 1
multiple and even -> with : 1
and even with -> enabled : 1
even with enabled -> the : 1
with enabled the -> this : 1
enabled the this -> means : 1
if we already -> use : 1
we already use -> stl : 1
already use stl -> algorithms : 1
algorithms we get -> a : 1
a nice parallelization -> bonus : 1
nice parallelization bonus -> for : 1
parallelization bonus for -> we : 1
bonus for we -> can : 1
can give our -> applications : 1
give our applications -> subsequent : 1
our applications subsequent -> parallelization : 1
applications subsequent parallelization -> by : 1
subsequent parallelization by -> simply : 1
parallelization by simply -> adding : 1
by simply adding -> a : 1
simply adding a -> single : 1
adding a single -> execution : 1
argument to our -> existing : 1
to our existing -> stl : 1
our existing stl -> algorithm : 1
existing stl algorithm -> this : 1
stl algorithm this -> we : 1
implement a simple -> program : 2
implement a simple -> app : 1
a simple program -> a : 1
a simple program -> that : 1
a simple program -> which : 1
simple program a -> not : 1
program a not -> too : 1
a not too -> serious : 1
not too serious -> use : 1
too serious use -> case : 1
serious use case -> that : 1
use case that -> lines : 1
case that lines -> up : 1
that lines up -> multiple : 1
lines up multiple -> stl : 1
up multiple stl -> algorithm : 1
multiple stl algorithm -> while : 1
stl algorithm while -> using : 1
algorithm while using -> we : 1
while using we -> will : 1
using we will -> see : 1
see how easy -> it : 2
how easy it -> is : 2
easy it is -> to : 2
it is to -> use : 1
it is to -> compose : 1
to use execution -> policies : 1
use execution policies -> in : 1
let them run -> in : 1
let them run -> as : 1
them run in -> the : 1
run in the -> last : 1
the last subsections -> of : 1
last subsections of -> this : 1
subsections of this -> we : 1
at the different -> execution : 1
the different execution -> to : 1
different execution to -> do : 1
execution to do -> this : 1
we a program -> that : 2
program that uses -> some : 1
program that uses -> an : 1
that uses some -> standard : 1
uses some standard -> the : 1
some standard the -> program : 1
standard the program -> itself : 1
the program itself -> is : 1
program itself is -> more : 1
itself is more -> of : 1
is more of -> an : 1
more of an -> example : 1
of an example -> of : 1
example of how -> scenarios : 1
of how scenarios -> can : 1
how scenarios can -> look : 1
scenarios can look -> than : 1
can look than -> doing : 1
look than doing -> actual : 1
than doing actual -> work : 1
doing actual work -> while : 1
actual work while -> using : 1
work while using -> these : 1
while using these -> standard : 1
using these standard -> we : 1
these standard we -> are : 1
standard we are -> embedding : 1
we are embedding -> execution : 1
are embedding execution -> policies : 1
embedding execution policies -> in : 1
order to speed -> the : 2
order to speed -> its : 1
to speed the -> code : 1
to speed the -> execution : 1
speed the code -> we : 1
code we need -> to : 1
use the the -> header : 1
the the header -> is : 1
the header is -> a : 1
header is a -> new : 1
new it came -> with : 1
it came with -> using : 1
it came with -> and : 1
came with using -> namespace : 1
with using namespace -> for : 1
using namespace for -> the : 1
namespace for the -> sake : 1
of the declare -> a : 1
the declare a -> predicate : 1
declare a predicate -> function : 1
predicate function that -> tells : 1
function that tells -> number : 1
that tells number -> is : 1
tells number is -> we : 1
number is we -> will : 1
will use it -> static : 1
will use it -> to : 1
use it static -> bool : 1
it static bool -> return : 1
it static bool -> char : 1
bool return n -> first : 1
return n first -> define : 1
n first define -> a : 1
define a large -> vector : 1
a large vector -> in : 1
large vector in -> our : 1
vector in our -> main : 1
will fill it -> with : 1
lot of that -> it : 1
of that it -> takes : 1
that it takes -> some : 1
it takes some -> time : 1
takes some time -> to : 1
some time to -> do : 1
time to do -> calculations : 1
to do calculations -> on : 1
do calculations on -> the : 1
calculations on the -> execution : 1
on the execution -> speed : 1
the execution speed -> of : 1
the execution speed -> differs : 1
execution speed of -> this : 1
speed of this -> code : 1
of this code -> will : 1
this code will -> vary : 1
code will vary -> depending : 1
will vary depending -> on : 1
vary depending on -> the : 1
on the computer -> this : 1
the computer this -> code : 1
computer this code -> is : 1
this code is -> executed : 1
code is executed -> vector : 1
is executed vector -> sizes : 1
executed vector sizes -> might : 1
vector sizes might -> be : 1
sizes might be -> better : 1
might be better -> on : 1
be better on -> different : 1
better on different -> int : 1
on different int -> d : 1
different int d -> order : 1
int d order -> to : 1
d order to -> get : 1
of random data -> for : 1
random data for -> the : 1
data for the -> random : 1
for the random -> number : 1
number generator along -> with : 1
generator along with -> a : 1
along with a -> distribution : 1
with a distribution -> and : 1
a distribution and -> pack : 1
distribution and pack -> them : 1
and pack them -> up : 1
pack them up -> in : 1
them up in -> a : 1
in a callable -> if : 1
in a callable -> object : 1
a callable if -> this : 1
callable if this -> looks : 1
this looks strange -> to : 1
looks strange to -> please : 1
strange to please -> first : 1
to please first -> have : 1
please first have -> a : 1
at the recipes -> with : 1
the recipes with -> random : 1
recipes with random -> number : 1
with random number -> generators : 1
number generators and -> distributions : 1
generators and distributions -> in : 1
and distributions in -> auto : 1
distributions in auto -> mutable : 1
in auto mutable -> return : 1
mutable return use -> the : 1
use the algorithm -> to : 1
the algorithm to -> fill : 1
algorithm to fill -> the : 1
vector with random -> there : 1
with random there -> is : 1
random there is -> a : 1
a new version -> of : 1
new version of -> this : 1
version of this -> which : 1
version of this -> program : 2
of this which -> can : 1
this which can -> take : 1
which can take -> a : 1
can take a -> new : 1
take a new -> kind : 1
a new kind -> of : 1
new kind of -> an : 1
kind of an -> execution : 1
kind of an -> empty : 1
of an execution -> we : 1
an execution we -> put : 1
execution we put -> in : 1
we put in -> which : 1
put in which -> allows : 1
in which allows -> for : 1
which allows for -> automatic : 1
allows for automatic -> parallelization : 1
for automatic parallelization -> of : 1
automatic parallelization of -> this : 1
automatic parallelization of -> our : 1
parallelization of this -> by : 1
of this by -> doing : 1
this by doing -> we : 1
doing we allow -> for : 1
we allow for -> multiple : 1
we allow for -> the : 1
allow for multiple -> threads : 1
for multiple threads -> filling : 1
multiple threads filling -> the : 1
threads filling the -> vector : 1
filling the vector -> which : 1
vector which reduces -> the : 1
which reduces the -> execution : 1
which reduces the -> folder : 1
reduces the execution -> the : 1
the execution the -> computer : 1
execution the computer -> has : 1
the computer has -> more : 1
the computer has -> only : 1
computer has more -> than : 1
has more than -> one : 1
has more than -> operating : 1
than one which -> is : 1
which is usually -> the : 1
usually the case -> with : 1
case with modern -> should : 1
with modern should -> also : 1
modern should also -> already : 1
should also already -> be : 1
also already be -> the : 1
already be the -> version : 1
be the version -> does : 1
the version does -> also : 1
version does also -> support : 1
does also support -> an : 1
also support an -> additional : 1
support an additional -> argument : 1
an additional argument -> execution : 1
additional argument execution -> same : 1
argument execution same -> applies : 1
execution same applies -> to : 1
applies to we -> use : 1
use to count -> all : 1
to count all -> the : 1
count all the -> odd : 1
the odd numbers -> in : 1
odd numbers in -> the : 1
can even parallelize -> that : 1
even parallelize that -> by : 1
parallelize that by -> just : 1
that by just -> adding : 1
by just adding -> an : 1
just adding an -> execution : 1
adding an execution -> policy : 1
an execution policy -> auto : 1
an execution policy -> compared : 1
an execution policy -> it : 1
an execution policy -> as : 1
execution policy auto -> odds : 1
policy auto odds -> whole : 1
auto odds whole -> program : 1
odds whole program -> did : 1
whole program did -> not : 1
program did not -> do : 1
program did not -> change : 1
not do any -> scientific : 1
do any scientific -> as : 1
any scientific as -> we : 1
scientific as we -> were : 1
as we were -> just : 1
we were just -> going : 1
were just going -> to : 1
just going to -> have : 1
just going to -> increment : 1
how to parallelize -> standard : 1
to parallelize standard -> but : 1
parallelize standard but -> print : 1
standard but print -> something : 1
but print something -> in : 1
print something in -> the : 1
something in the -> cout : 1
in the cout -> odds : 1
in the cout -> nice : 1
the cout odds -> of : 1
cout odds of -> the : 1
odds of the -> numbers : 1
numbers are and -> running : 1
are and running -> the : 1
following at this -> it : 1
it is interesting -> to : 2
interesting to see -> how : 1
see how the -> execution : 1
see how the -> whole : 1
how the execution -> speed : 1
execution speed differs -> when : 1
speed differs when -> using : 1
differs when using -> the : 1
when using the -> algorithms : 1
using the algorithms -> without : 1
the algorithms without -> an : 1
algorithms without an -> execution : 1
without an execution -> policy : 1
without an execution -> the : 1
execution policy compared -> the : 1
policy compared the -> other : 1
compared the other -> execution : 1
the other execution -> doing : 1
other execution doing -> this : 1
execution doing this -> is : 1
doing this is -> left : 1
this is left -> as : 1
for the try -> available : 1
the try available -> execution : 1
try available execution -> policies : 1
available execution policies -> and : 1
execution policies and -> we : 1
policies and we -> should : 1
and we should -> get : 1
should get different -> execution : 1
get different execution -> times : 1
different execution times -> for : 1
execution times for -> each : 1
times for each -> of : 1
each of of -> the : 1
of of the -> numbers : 1
numbers are it -> since : 1
are it since -> this : 1
it since this -> recipe : 1
since this recipe -> did : 1
this recipe did -> not : 1
recipe did not -> distract : 1
did not distract -> us : 1
not distract us -> with : 1
distract us with -> any : 1
us with any -> complicated : 1
with any complicated -> problem : 1
any complicated problem -> we : 1
complicated problem we -> were : 1
problem we were -> able : 1
able to fully -> concentrate : 1
to fully concentrate -> on : 1
fully concentrate on -> the : 1
the standard library -> function : 1
the standard library -> then : 1
standard library function -> it : 1
library function it -> is : 1
is pretty obvious -> that : 1
pretty obvious that -> the : 1
that the their -> parallelized : 1
the their parallelized -> versions : 1
their parallelized versions -> are : 1
parallelized versions are -> hardly : 1
versions are hardly -> different : 1
are hardly different -> from : 1
hardly different from -> the : 1
from the classic -> sequential : 1
the classic sequential -> they : 1
classic sequential they -> only : 1
sequential they only -> differ : 1
they only differ -> by : 1
only differ by -> which : 1
differ by which -> is : 1
by which is -> the : 1
is the have -> a : 1
at the invocations -> and : 1
the invocations and -> answer : 1
invocations and answer -> auto : 1
and answer auto -> odds : 1
answer auto odds -> stl : 1
auto odds stl -> algorithms : 1
odds stl algorithms -> can : 1
stl algorithms can -> we : 1
algorithms can we -> parallelize : 1
can we parallelize -> this : 1
we parallelize this -> the : 1
parallelize this the -> existing : 1
this the existing -> stl : 1
stl algorithms were -> upgraded : 1
algorithms were upgraded -> to : 1
were upgraded to -> support : 1
upgraded to support -> parallelism : 1
to support parallelism -> in : 1
support parallelism in -> the : 1
parallelism in the -> and : 1
the and there -> are : 1
there are ones -> support : 1
are ones support -> while : 1
ones support while -> such : 1
support while such -> an : 1
while such an -> upgrade : 1
such an upgrade -> might : 1
an upgrade might -> be : 1
upgrade might be -> pretty : 1
might be pretty -> invasive : 1
be pretty invasive -> for : 1
pretty invasive for -> the : 1
invasive for the -> not : 1
for the not -> much : 1
the not much -> has : 1
not much has -> changed : 1
much has changed -> in : 1
has changed in -> terms : 1
changed in terms -> of : 1
terms of their -> all : 1
of their all -> got : 1
their all got -> an : 1
all got an -> and : 1
got an and -> this : 1
an and this -> does : 1
and this does -> mean : 1
this does mean -> that : 2
does mean that -> we : 1
does mean that -> such : 1
have to provide -> an : 1
provide an execution -> policy : 1
execution policy it -> is : 1
policy it is -> just : 1
is just that -> they : 1
just that they -> support : 1
that they support -> accepting : 1
they support accepting -> an : 1
support accepting an -> execution : 1
accepting an execution -> policy : 1
execution policy as -> their : 1
policy as their -> first : 1
as their first -> are : 1
their first are -> the : 1
first are the -> upgraded : 1
are the upgraded -> standard : 1
the upgraded standard -> there : 1
upgraded standard there -> are : 1
standard there are -> also : 1
are also the -> seven : 1
also the seven -> new : 1
the seven new -> ones : 1
seven new ones -> execution : 1
new ones execution -> policies : 1
ones execution policies -> from : 1
execution policies from -> the : 1
policies from the -> beginning : 1
the beginning in -> these : 1
beginning in these -> algorithms : 1
in these algorithms -> upgraded : 1
these algorithms upgraded -> is : 1
algorithms upgraded is -> great : 1
upgraded is great -> the : 1
is great the -> more : 1
great the more -> our : 1
the more our -> old : 1
more our old -> programs : 1
old programs utilize -> stl : 1
programs utilize stl -> the : 1
utilize stl the -> easier : 1
stl the easier -> we : 1
the easier we -> can : 1
easier we can -> add : 1
can add parallelism -> to : 1
add parallelism to -> them : 1
parallelism to them -> note : 1
to them note -> that : 1
them note that -> this : 1
that this does -> mean : 1
mean that such -> changes : 1
that such changes -> make : 1
such changes make -> every : 1
changes make every -> program : 1
make every program -> automatically : 1
every program automatically -> times : 1
program automatically times -> faster : 1
automatically times faster -> because : 1
times faster because -> multiprogramming : 1
faster because multiprogramming -> is : 1
because multiprogramming is -> quite : 1
multiprogramming is quite -> a : 1
quite a bit -> more : 1
complex than instead -> of : 1
than instead of -> designing : 1
instead of designing -> our : 1
of designing our -> own : 1
designing our own -> complicated : 1
our own complicated -> parallel : 1
own complicated parallel -> algorithms : 1
complicated parallel algorithms -> using : 1
parallel algorithms using -> or : 1
algorithms using or -> by : 1
using or by -> including : 1
or by including -> external : 1
by including external -> we : 1
including external we -> can : 1
external we can -> now : 1
can now parallelize -> standard : 1
now parallelize standard -> tasks : 1
parallelize standard tasks -> in : 1
standard tasks in -> a : 1
tasks in a -> very : 1
a very operating -> do : 1
very operating do -> those : 1
operating do those -> execution : 1
do those execution -> policies : 1
those execution policies -> execution : 1
execution policies execution -> policy : 1
policies execution policy -> tells : 1
execution policy tells -> which : 1
policy tells which -> strategy : 1
tells which strategy -> we : 1
which strategy we -> allow : 1
strategy we allow -> for : 1
allow for the -> automatic : 1
for the automatic -> parallelization : 1
the automatic parallelization -> of : 1
parallelization of our -> standard : 1
of our standard -> algorithm : 1
our standard algorithm -> following : 1
standard algorithm following -> three : 1
algorithm following three -> policy : 1
following three policy -> types : 1
three policy types -> exist : 1
policy types exist -> in : 1
types exist in -> the : 1
exist in the -> algorithm : 1
in the algorithm -> has : 1
the algorithm has -> to : 1
algorithm has to -> be : 1
to be executed -> in : 3
to be executed -> by : 2
be executed in -> a : 1
be executed in -> case : 1
be executed in -> the : 1
be executed in -> have : 1
executed in a -> sequential : 1
in a sequential -> form : 1
a sequential form -> similar : 1
sequential form similar -> to : 1
form similar to -> the : 1
the original algorithm -> without : 1
original algorithm without -> an : 1
algorithm without an -> execution : 1
an execution the -> globally : 1
execution the globally -> available : 1
globally available instance -> has : 3
available instance has -> the : 3
instance has the -> name : 3
has the name -> algorithm : 2
has the name -> execution : 1
the name algorithm -> may : 2
name algorithm may -> be : 2
algorithm may be -> executed : 2
may be executed -> with : 2
be executed with -> multiple : 2
executed with multiple -> threads : 2
with multiple threads -> that : 1
with multiple threads -> in : 1
multiple threads that -> share : 1
threads that share -> the : 1
that share the -> work : 1
share the work -> in : 1
the work in -> a : 1
work in a -> parallel : 1
in a parallel -> globally : 1
a parallel globally -> available : 1
parallel globally available -> instance : 1
multiple threads in -> addition : 1
threads in addition -> to : 1
it is vectorize -> the : 1
is vectorize the -> in : 1
vectorize the in -> this : 1
in this container -> access : 1
this container access -> can : 1
container access can -> be : 1
access can be -> interleaved : 1
can be interleaved -> between : 1
be interleaved between -> threads : 1
interleaved between threads -> within : 1
between threads within -> the : 1
threads within the -> same : 1
the same thread -> due : 1
same thread due -> to : 1
thread due to -> globally : 1
due to globally -> available : 1
to globally available -> instance : 1
the name execution -> policies : 1
name execution policies -> imply : 1
execution policies imply -> specific : 1
policies imply specific -> constraints : 1
imply specific constraints -> for : 1
specific constraints for -> the : 1
constraints for the -> stricter : 1
for the stricter -> the : 1
the stricter the -> specific : 1
stricter the specific -> the : 1
the specific the -> more : 1
specific the more -> parallelization : 1
the more parallelization -> strategy : 1
more parallelization strategy -> measures : 1
parallelization strategy measures -> we : 1
strategy measures we -> can : 1
measures we can -> element : 1
we can element -> access : 1
can element access -> functions : 1
element access functions -> used : 1
access functions used -> by : 1
functions used by -> the : 1
used by the -> parallelized : 1
used by the -> function : 1
by the parallelized -> algorithm : 1
the parallelized algorithm -> cause : 1
parallelized algorithm cause -> or : 1
algorithm cause or -> the : 1
cause or the -> case : 1
or the case -> of : 1
case of parallelism -> and : 1
of parallelism and -> all : 1
parallelism and all -> the : 1
all the access -> functions : 1
the access functions -> use : 1
access functions use -> any : 1
functions use any -> kind : 1
use any kind -> of : 1
kind of blocking -> long : 1
of blocking long -> as : 1
blocking long as -> we : 1
as we comply -> with : 1
we comply with -> these : 1
comply with these -> we : 1
with these we -> should : 1
these we should -> be : 1
should be free -> from : 1
be free from -> bugs : 1
free from bugs -> introduced : 1
from bugs introduced -> by : 1
bugs introduced by -> using : 1
introduced by using -> the : 1
using the parallel -> versions : 1
the parallel versions -> of : 1
parallel versions of -> the : 1
stl that just -> using : 1
just using parallel -> stl : 1
using parallel stl -> algorithms : 1
parallel stl algorithms -> correctly : 1
stl algorithms correctly -> does : 1
algorithms correctly does -> not : 1
correctly does not -> always : 1
lead to guaranteed -> depending : 1
to guaranteed depending -> on : 1
guaranteed depending on -> the : 1
problem we try -> to : 1
try to the -> problem : 1
to the problem -> and : 1
the problem and -> the : 1
problem and the -> efficiency : 1
and the efficiency -> of : 1
the efficiency of -> our : 1
efficiency of our -> data : 1
of our data -> structures : 1
our data structures -> and : 1
and other access -> measurable : 1
other access measurable -> speedup : 1
access measurable speedup -> will : 1
measurable speedup will -> vary : 1
speedup will vary -> very : 1
speedup will vary -> between : 1
will vary very -> much : 1
vary very much -> or : 1
very much or -> not : 1
much or not -> occur : 1
or not occur -> at : 1
not occur at -> is : 1
occur at is -> still : 1
at is still -> does : 1
is still does -> vectorization : 1
still does vectorization -> is : 1
does vectorization is -> a : 1
vectorization is a -> feature : 1
is a feature -> the : 1
a feature the -> cpu : 1
feature the cpu -> and : 1
the cpu and -> the : 1
cpu and the -> compiler : 1
the compiler need -> to : 1
compiler need to -> have : 1
need to have -> a : 1
have a quick -> glance : 1
a quick glance -> at : 1
quick glance at -> a : 1
at a simple -> example : 1
a simple example -> to : 1
simple example to -> briefly : 1
example to briefly -> understand : 1
to briefly understand -> what : 1
briefly understand what -> vectorization : 1
understand what vectorization -> is : 1
what vectorization is -> and : 1
vectorization is and -> how : 1
is and how -> it : 1
and how it -> imagine : 1
how it imagine -> we : 1
it imagine we -> want : 1
imagine we want -> to : 1
want to sum -> up : 1
to sum up -> numbers : 1
sum up numbers -> from : 1
up numbers from -> a : 1
from a very -> large : 1
very large a -> plain : 1
large a plain -> implementation : 1
a plain implementation -> of : 1
plain implementation of -> this : 1
of this task -> can : 1
this task can -> look : 1
task can look -> like : 1
look like v -> int : 1
like v int -> sum : 1
int sum compiler -> will : 1
sum compiler will -> eventually : 1
compiler will eventually -> generate : 1
will eventually generate -> a : 1
eventually generate a -> loop : 1
generate a loop -> from : 1
a loop from -> the : 1
loop from the -> look : 1
from the look -> like : 1
the look like -> sum : 1
look like sum -> for : 1
like sum for -> i : 1
i sum from -> this : 1
sum from this -> with : 1
from this with -> vectorization : 1
this with vectorization -> allowed : 1
with vectorization allowed -> and : 1
vectorization allowed and -> the : 1
allowed and the -> compiler : 1
the compiler could -> then : 1
compiler could then -> produce : 1
could then produce -> the : 1
then produce the -> the : 1
produce the the -> loop : 1
the loop does -> four : 1
loop does four -> accumulation : 1
does four accumulation -> steps : 1
four accumulation steps -> in : 1
accumulation steps in -> one : 1
steps in one -> loop : 1
in one loop -> step : 1
one loop step -> and : 1
loop step and -> also : 1
step and also -> does : 1
and also does -> four : 1
also does four -> times : 1
does four times -> fewer : 1
four times fewer -> for : 1
times fewer for -> the : 1
fewer for the -> sake : 1
of the example -> does : 1
the example does -> not : 1
example does not -> deal : 1
does not deal -> with : 1
not deal with -> the : 1
with the remainder -> if : 1
the remainder if -> the : 1
remainder if the -> vector : 1
vector does not -> sum : 1
does not sum -> for : 1
not sum for -> i : 1
i i i -> sum : 1
i i i -> we : 1
i sum if -> has : 1
sum if has -> a : 1
if has a -> real : 1
has a real -> code : 1
a real code -> has : 1
real code has -> to : 1
code has to -> deal : 1
deal with that -> should : 1
with that should -> it : 1
that should it -> do : 1
should it do -> many : 1
it do many -> cpus : 1
do many cpus -> provide : 1
many cpus provide -> instructions : 1
cpus provide instructions -> perform : 1
provide instructions perform -> mathematical : 1
instructions perform mathematical -> operations : 1
perform mathematical operations -> such : 1
mathematical operations such -> just : 1
operations such just -> mathematical : 1
such just mathematical -> operations : 1
just mathematical operations -> into : 1
mathematical operations into -> as : 1
operations into as -> instructions : 1
into as instructions -> as : 1
as instructions as -> possible : 1
instructions as possible -> is : 1
as possible is -> the : 1
possible is the -> target : 1
is the target -> because : 1
the target because -> this : 1
target because this -> speeds : 1
because this speeds -> up : 1
this speeds up -> the : 1
speeds up the -> vectorization : 1
up the vectorization -> is : 1
the vectorization is -> the : 1
vectorization is the -> compiler : 1
is the compiler -> needs : 1
needs to understand -> our : 1
to understand our -> program : 1
understand our program -> to : 1
our program to -> some : 1
our program to -> demonstrate : 1
program to some -> degree : 1
to some degree -> in : 1
some degree in -> order : 1
degree in order -> to : 1
to make our -> program : 1
make our program -> faster : 1
our program faster -> but : 1
program faster but -> without : 1
faster but without -> tampering : 1
but without tampering -> with : 1
tampering with at -> we : 1
with at we -> can : 1
at we can -> help : 1
we can help -> the : 1
can help the -> compiler : 1
the compiler by -> using : 1
compiler by using -> standard : 1
by using standard -> algorithms : 1
using standard algorithms -> as : 1
standard algorithms as -> often : 1
algorithms as often -> as : 1
often as possible -> because : 1
as possible because -> those : 1
possible because those -> are : 1
because those are -> easier : 1
those are easier -> to : 1
are easier to -> grasp : 1
easier to grasp -> for : 1
to grasp for -> the : 1
grasp for the -> compiler : 1
the compiler than -> complicated : 1
compiler than complicated -> handcrafted : 1
than complicated handcrafted -> loops : 1
complicated handcrafted loops -> with : 1
handcrafted loops with -> complex : 1
loops with complex -> data : 1
with complex data -> flow : 1
complex data flow -> a : 1
data flow a -> program : 1
flow a program -> to : 1
amounts of nice -> and : 1
of nice and -> simple : 1
nice and simple -> possibility : 1
and simple possibility -> to : 1
simple possibility to -> control : 1
possibility to control -> threads : 1
to control threads -> came : 1
control threads came -> with : 1
threads came with -> it : 1
came with it -> introduced : 1
with it introduced -> the : 1
it introduced the -> which : 1
introduced the which -> includes : 1
the which includes -> functions : 1
which includes functions -> that : 1
includes functions that -> affect : 1
functions that affect -> only : 1
that affect only -> the : 1
affect only the -> caller : 1
only the caller -> it : 1
the caller it -> contains : 1
caller it contains -> functions : 1
it contains functions -> that : 1
contains functions that -> allow : 1
functions that allow -> putting : 1
that allow putting -> a : 1
allow putting a -> thread : 1
putting a thread -> to : 1
a thread to -> sleep : 2
a thread to -> continue : 1
thread to sleep -> for : 4
thread to sleep -> until : 1
sleep for a -> certain : 1
sleep for a -> short : 1
amount of so -> we : 1
use any external -> or : 1
any external or -> operating : 1
external or operating -> libraries : 1
or operating libraries -> for : 1
operating libraries for -> such : 1
libraries for such -> tasks : 1
for such tasks -> any : 1
such tasks any -> this : 1
tasks any this -> we : 1
any this we -> concentrate : 1
any this we -> will : 1
how to suspend -> threads : 1
to suspend threads -> for : 1
suspend threads for -> a : 1
threads for a -> certain : 1
amount of or -> how : 1
of or how -> to : 1
or how to -> put : 1
put them to -> to : 1
them to to -> do : 1
write a short -> program : 1
a short program -> that : 1
short program that -> just : 1
program that just -> puts : 1
program that just -> accepts : 1
that just puts -> the : 1
just puts the -> main : 1
puts the main -> thread : 1
the main thread -> to : 2
the main thread -> executing : 1
the main thread -> we : 1
main thread to -> sleep : 2
sleep for certain -> amounts : 1
for certain amounts -> of : 1
certain amounts of -> first : 1
amounts of first -> include : 1
declare that use -> the : 1
that use the -> contains : 1
use the contains -> handy : 1
the contains handy -> abbreviations : 1
contains handy abbreviations -> for : 1
handy abbreviations for -> creating : 1
abbreviations for creating -> using : 1
for creating using -> namespace : 1
creating using namespace -> using : 1
using namespace immediately -> put : 1
namespace immediately put -> the : 1
immediately put the -> main : 1
put the main -> thread : 1
sleep for seconds -> and : 2
sleep for seconds -> to : 1
for seconds and -> thanks : 1
for seconds and -> milli : 1
seconds and thanks -> to : 1
and thanks to -> we : 1
thanks to we -> can : 1
can express this -> in : 1
express this in -> a : 1
a very readable -> int : 1
very readable int -> cout : 1
readable int cout -> to : 1
int cout to -> sleep : 1
cout to sleep -> for : 2
sleep for and -> milli : 1
for and milli -> last : 1
and milli last -> sleep : 1
milli last sleep -> statement : 1
last sleep statement -> was : 1
sleep statement was -> we : 1
statement was we -> can : 1
was we can -> also : 1
can also express -> sleep : 1
also express sleep -> sleep : 1
express sleep sleep -> until : 1
sleep sleep until -> the : 1
sleep until the -> point : 1
until the point -> in : 1
the point in -> which : 1
point in which -> is : 1
which is plus -> cout : 1
is plus cout -> to : 1
plus cout to -> sleep : 1
sleep for another -> quitting : 1
sleep for another -> sys : 1
for another quitting -> the : 1
another quitting the -> print : 1
quitting the print -> something : 1
the print something -> else : 1
print something else -> to : 1
something else to -> signal : 1
something else to -> resolve : 1
else to signal -> the : 1
to signal the -> end : 1
signal the end -> of : 1
the second sleep -> cout : 1
second sleep cout -> and : 1
sleep cout and -> running : 1
the following and -> operating : 1
following and operating -> systems : 1
and operating systems -> provide : 1
operating systems provide -> the : 1
operating systems provide -> possibilities : 1
operating systems provide -> a : 1
systems provide the -> which : 1
provide the which -> accepts : 1
which accepts another -> command : 1
accepts another command -> in : 1
another command in -> order : 1
command in order -> to : 1
to execute it -> and : 1
execute it and -> stop : 1
it and stop -> the : 1
and stop the -> time : 1
stop the time -> it : 1
the time it -> running : 1
time it running -> our : 1
it running our -> program : 1
program with shows -> that : 1
with shows that -> it : 1
that it ran -> which : 1
it ran which -> is : 1
ran which is -> roughly : 1
which is roughly -> the : 1
is roughly the -> and : 1
roughly the and -> seconds : 1
the and seconds -> we : 1
and seconds we -> let : 1
seconds we let -> our : 1
we let our -> program : 1
let our program -> when : 1
our program when -> running : 1
program when running -> the : 1
when running the -> it : 1
running the it -> is : 1
count the time -> between : 1
the time between -> the : 1
time between the -> arrival : 1
between the arrival -> of : 1
the arrival of -> the : 1
arrival of the -> printed : 1
of the printed -> lines : 1
the printed lines -> on : 1
printed lines on -> the : 1
lines on the -> time : 1
on the time -> going : 1
the time going -> to : 1
time going to -> sleep : 1
going to sleep -> for : 2
seconds and milli -> going : 1
and milli going -> to : 1
milli going to -> sleep : 1
for another sys -> it : 1
another sys it -> and : 1
sys it and -> have : 1
it and have -> been : 1
and have been -> added : 1
have been added -> and : 1
been added and -> reside : 1
added and reside -> in : 1
and reside in -> they : 1
reside in they -> block : 1
in they block -> the : 1
they block the -> current : 1
block the current -> thread : 1
the current thread -> the : 1
current thread the -> whole : 1
thread the whole -> process : 1
the whole process -> or : 1
whole process or -> for : 1
process or for -> a : 1
or for a -> specific : 1
for a specific -> amount : 1
for a specific -> and : 1
for a specific -> condition : 1
a specific amount -> of : 1
specific amount of -> a : 1
amount of a -> thread : 1
of a thread -> does : 1
of a thread -> is : 1
a thread does -> not : 1
thread does not -> consume : 1
does not consume -> cpu : 1
not consume cpu -> time : 1
consume cpu time -> while : 1
cpu time while -> it : 1
time while it -> is : 1
while it is -> it : 1
is just put -> into : 1
just put into -> an : 1
into an inactive -> state : 1
an inactive state -> by : 1
inactive state by -> the : 1
state by the -> operating : 1
by the operating -> the : 1
the operating the -> operating : 1
operating the operating -> system : 1
the operating system -> of : 1
the operating system -> this : 1
the operating system -> in : 1
the operating system -> implements : 1
the operating system -> just : 2
operating system of -> remind : 1
system of remind -> itself : 1
of remind itself -> of : 1
remind itself of -> waking : 1
itself of waking -> the : 1
of waking the -> thread : 1
waking the thread -> up : 1
the thread up -> the : 1
thread up the -> best : 1
up the best -> thing : 1
best thing about -> that : 2
to care which -> operating : 1
care which operating -> system : 1
which operating system -> our : 1
operating system our -> program : 1
system our program -> runs : 1
our program runs -> the : 1
program runs the -> stl : 1
runs the stl -> abstracts : 1
the stl abstracts -> this : 1
stl abstracts this -> detail : 1
abstracts this detail -> away : 1
this detail away -> from : 1
detail away from -> accepts : 1
away from accepts -> a : 1
from accepts a -> in : 1
accepts a in -> the : 1
the simplest this -> is : 1
simplest this is -> just : 1
is just or -> just : 1
just or just -> like : 1
or just like -> in : 1
like in our -> example : 1
our example in -> order : 1
example in order -> to : 1
to get such -> nice : 1
get such nice -> literals : 1
such nice literals -> for : 1
nice literals for -> time : 1
literals for time -> we : 1
need to declare -> namespace : 1
to declare namespace -> accepts : 1
declare namespace accepts -> a : 1
namespace accepts a -> instead : 1
accepts a instead -> of : 1
a instead of -> a : 1
a time this -> is : 1
this is comfortable -> if : 1
is comfortable if -> we : 1
comfortable if we -> wish : 1
if we wish -> to : 1
we wish to -> put : 1
wish to put -> the : 1
put the thread -> to : 1
the thread to -> sleep : 1
to sleep until -> some : 1
to sleep until -> note : 1
sleep until some -> specific : 1
until some specific -> wall : 1
some specific wall -> clock : 1
specific wall clock -> timing : 1
wall clock timing -> for : 1
clock timing for -> waking : 1
timing for waking -> up : 1
for waking up -> is : 1
waking up is -> only : 1
up is only -> as : 1
is only as -> accurate : 1
only as accurate -> as : 1
as accurate as -> the : 1
accurate as the -> operating : 1
as the operating -> system : 1
operating system this -> will : 1
system this will -> be : 1
this will be -> generally : 1
will be generally -> accurate : 1
be generally accurate -> most : 1
generally accurate most -> operating : 1
accurate most operating -> but : 1
most operating but -> it : 1
operating but it -> might : 1
but it might -> become : 1
it might become -> difficult : 1
might become difficult -> if : 1
become difficult if -> some : 1
difficult if some -> application : 1
if some application -> needs : 1
some application needs -> possibility : 1
application needs possibility -> to : 1
needs possibility to -> put : 1
possibility to put -> a : 1
to put a -> thread : 1
put a thread -> to : 1
for a short -> time : 1
a short time -> is : 1
short time is -> it : 1
time is it -> accepts : 1
it accepts which -> means : 1
accepts which means -> that : 1
cannot know for -> how : 1
know for how -> long : 1
for how long -> the : 1
long the execution -> of : 1
execution of a -> thread : 1
a thread is -> placed : 1
a thread is -> the : 1
thread is placed -> the : 1
is placed the -> reason : 1
placed the reason -> is : 1
that this function -> does : 1
function does not -> really : 1
function does not -> need : 1
does not really -> implement : 1
does not really -> make : 1
does not really -> harm : 1
not really implement -> the : 1
really implement the -> notion : 1
implement the notion -> of : 1
notion of sleeping -> or : 1
of sleeping or -> parking : 1
sleeping or parking -> a : 1
or parking a -> it : 1
parking a it -> just : 1
a it just -> tells : 1
it just tells -> the : 1
just tells the -> operating : 1
tells the operating -> system : 1
operating system in -> a : 1
system in a -> cooperative : 1
in a cooperative -> way : 1
a cooperative way -> that : 1
cooperative way that -> it : 1
it can reschedule -> any : 1
can reschedule any -> other : 1
reschedule any other -> thread : 1
any other thread -> of : 1
any other thread -> that : 1
other thread of -> any : 1
thread of any -> other : 1
of any other -> if : 1
any other if -> there : 1
other if there -> are : 1
there are then -> the : 1
are then the -> thread : 1
then the thread -> will : 1
the thread will -> be : 1
the thread will -> go : 1
thread will be -> executed : 1
will be executed -> again : 1
be executed again -> for : 1
executed again for -> this : 1
again for this -> is : 1
this is often -> less : 1
is often less -> useful : 1
often less useful -> than : 1
less useful than -> just : 1
useful than just -> sleeping : 1
than just sleeping -> for : 1
just sleeping for -> a : 1
sleeping for a -> but : 1
for a but -> amount : 1
a but amount -> of : 1
but amount of -> and : 1
amount of and -> stopping : 1
and stopping addition -> that : 1
stopping addition that -> came : 1
addition that came -> with : 1
that came with -> is : 1
that came with -> in : 1
with is the -> it : 1
the it provides -> a : 1
it provides a -> clean : 1
provides a clean -> and : 1
a clean and -> simple : 1
clean and simple -> way : 1
and simple way -> to : 1
simple way to -> start : 1
simple way to -> reduce : 1
way to start -> and : 1
to start and -> stop : 1
start and stop -> without : 1
start and stop -> threads : 2
and stop without -> any : 1
stop without any -> need : 1
without any need -> for : 1
any need for -> external : 1
need for external -> libraries : 1
for external libraries -> or : 1
external libraries or -> to : 1
libraries or to -> know : 1
or to know -> how : 1
to know how -> the : 1
know how the -> operating : 1
how the operating -> system : 1
operating system implements -> all : 1
system implements all -> just : 1
implements all just -> included : 1
all just included -> in : 1
just included in -> the : 1
included in the -> this : 1
included in the -> we : 1
program that starts -> and : 1
program that starts -> a : 1
program that starts -> multiple : 1
that starts and -> stops : 1
starts and stops -> there : 1
and stops there -> are : 1
stops there are -> some : 1
there are some -> minor : 1
there are some -> that : 1
are some minor -> details : 1
some minor details -> to : 1
minor details to -> to : 1
details to to -> do : 1
do with threads -> once : 1
with threads once -> they : 1
threads once they -> are : 1
go through these -> to : 1
through these to -> do : 1
these to do -> will : 1
do will start -> multiple : 1
will start multiple -> threads : 1
start multiple threads -> and : 1
multiple threads and -> see : 1
threads and see -> how : 1
see how our -> program : 1
how our program -> behaves : 1
our program behaves -> when : 1
program behaves when -> we : 1
behaves when we -> unleash : 1
when we unleash -> multiple : 1
we unleash multiple -> processor : 1
unleash multiple processor -> cores : 1
multiple processor cores -> to : 1
processor cores to -> execute : 1
cores to execute -> parts : 1
to execute parts -> of : 1
execute parts of -> its : 1
parts of its -> code : 1
of its code -> at : 1
its code at -> the : 1
same we need -> to : 1
to include only -> two : 1
include only two -> headers : 1
only two headers -> and : 1
two headers and -> then : 1
headers and then -> we : 2
use and using -> namespace : 2
and using namespace -> using : 10
order to start -> a : 2
order to start -> the : 1
start a we -> need : 1
start a we -> first : 1
able to tell -> what : 1
to tell what -> code : 1
tell what code -> executed : 1
what code executed -> by : 1
code executed by -> define : 1
executed by define -> a : 1
by define a -> function : 1
can be functions -> are : 1
be functions are -> natural : 1
functions are natural -> potential : 1
are natural potential -> entry : 1
natural potential entry -> points : 1
potential entry points -> for : 1
entry points for -> the : 1
points for the -> example : 1
for the example -> function : 1
the example function -> accepts : 1
example function accepts -> an : 1
an which acts -> as : 1
acts as the -> thread : 1
as the thread -> this : 1
the thread this -> way : 1
thread this way -> we : 1
we can tell -> which : 1
we can tell -> that : 1
we can tell -> the : 1
can tell which -> print : 1
tell which print -> line : 1
which print line -> came : 1
print line came -> from : 1
line came from -> which : 1
came from which -> thread : 1
from which thread -> we : 1
which thread we -> use : 1
thread we use -> the : 2
use the thread -> id : 1
the thread id -> to : 1
thread id to -> let : 1
id to let -> all : 1
to let all -> threads : 1
let all threads -> wait : 1
all threads wait -> for : 1
threads wait for -> different : 1
wait for different -> amounts : 1
for different amounts -> of : 1
different amounts of -> so : 1
amounts of so -> we : 1
do not try -> to : 1
to use at -> exactly : 1
use at exactly -> the : 1
at exactly the -> same : 1
the same if -> they : 2
the same if -> the : 1
the same if -> it : 1
same if they -> that : 1
same if they -> do : 1
if they that -> would : 1
they that would -> garble : 1
that would garble -> the : 1
would garble the -> recipe : 1
garble the recipe -> in : 1
recipe in this -> chapter : 2
recipe in this -> struct : 1
this chapter deals -> specifically : 1
chapter deals specifically -> with : 1
deals specifically with -> this : 1
specifically with this -> static : 1
with this static -> void : 1
void cout from -> thread : 1
cout from thread -> i : 2
from thread i -> cout : 1
from thread i -> the : 1
thread i cout -> from : 1
i cout from -> thread : 1
thread i the -> main : 1
we just out -> print : 1
just out print -> how : 1
out print how -> many : 1
how many threads -> can : 1
how many threads -> are : 1
many threads can -> be : 1
threads can be -> run : 1
can be run -> at : 1
can be run -> in : 1
can be run -> on : 1
be run at -> the : 1
run at the -> same : 2
same using this -> depends : 1
using this depends -> on : 1
this depends on -> how : 1
depends on how -> many : 1
on how many -> cores : 1
how many cores -> the : 1
how many cores -> are : 1
many cores the -> machine : 1
cores the machine -> really : 1
the machine really -> has : 1
machine really has -> and : 1
really has and -> how : 1
has and how -> many : 1
and how many -> cores : 1
many cores are -> supported : 1
cores are supported -> by : 1
are supported by -> the : 1
supported by the -> stl : 1
stl this means -> that : 1
be a different -> number : 1
a different number -> on : 1
different number on -> every : 1
number on every -> other : 1
on every other -> int : 1
every other int -> cout : 1
other int cout -> concurrent : 1
int cout concurrent -> threads : 1
cout concurrent threads -> are : 1
concurrent threads are -> now : 1
concurrent threads are -> hello : 1
threads are now -> finally : 1
are now finally -> start : 1
now finally start -> with : 1
finally start with -> different : 1
start with different -> ids : 1
with different ids -> for : 1
different ids for -> each : 1
ids for each -> we : 1
for each we -> start : 1
each we start -> three : 1
we start three -> when : 1
start three when -> instantiating : 1
three when instantiating -> a : 1
when instantiating a -> thread : 1
instantiating a thread -> with : 1
a thread with -> an : 1
thread with an -> expression : 1
with an expression -> such : 1
expression such t -> this : 1
such t this -> leads : 1
t this leads -> to : 1
a call of -> by : 1
call of by -> the : 1
of by the -> new : 1
by the new -> this : 1
the new this -> we : 1
can give the -> functions : 1
give the functions -> different : 1
the functions different -> each : 1
functions different each -> thread : 1
different each thread -> thread : 1
each thread thread -> thread : 1
thread thread thread -> these : 1
thread thread these -> threads : 1
thread these threads -> are : 1
these threads are -> freely : 1
threads are freely -> we : 1
are freely we -> need : 1
freely we need -> to : 1
need to stop -> them : 1
to stop them -> again : 1
stop them again -> when : 1
them again when -> they : 1
again when they -> are : 1
they are done -> with : 1
are done with -> their : 1
done with their -> we : 1
with their we -> do : 1
their we do -> this : 1
this using the -> it : 1
using the it -> will : 1
will the until -> the : 1
the until the -> thread : 1
until the thread -> we : 1
until the thread -> that : 1
the thread we -> try : 1
thread we try -> to : 1
try to join -> alternative : 1
to join alternative -> to : 1
join alternative to -> joining : 1
alternative to joining -> is : 1
to joining is -> if : 1
joining is if -> we : 1
do not call -> or : 1
do not call -> the : 1
do not call -> directly : 1
not call or -> the : 1
call or the -> whole : 1
or the whole -> be : 1
the whole be -> a : 1
whole be a -> lot : 1
be a lot -> of : 3
lot of smoke -> and : 1
of smoke and -> noise : 1
smoke and noise -> as : 1
and noise as -> soon : 1
noise as soon -> as : 1
as the destructor -> of : 1
object is by -> calling : 1
is by calling -> we : 1
by calling we -> tell : 1
calling we tell -> that : 1
we tell that -> we : 1
tell that we -> really : 1
that we really -> want : 1
want to let -> to : 1
to let to -> continue : 1
let to continue -> even : 1
to continue even -> after : 1
continue even after -> its : 1
even after its -> instance : 1
after its instance -> is : 1
its instance is -> quitting : 1
instance is quitting -> the : 1
is quitting the -> main : 1
quitting the main -> function : 1
and the whole -> we : 1
whole we print -> another : 1
we print another -> cout : 1
print another cout -> and : 1
another cout and -> running : 1
running the code -> shows : 1
running the code -> yields : 1
running the code -> looks : 1
the code shows -> the : 1
code shows the -> following : 1
shows the following -> we : 1
following we can -> see : 1
see that my -> machine : 1
that my machine -> has : 1
my machine has -> eight : 1
machine has eight -> cpu : 1
has eight cpu -> we : 1
eight cpu we -> see : 1
cpu we see -> the : 1
see the messages -> from : 1
the messages from -> all : 1
messages from all -> the : 1
but the messages -> only : 1
the messages only -> from : 1
messages only from -> the : 1
the two threads -> we : 1
two threads we -> actually : 1
threads we actually -> thread : 1
we actually thread -> is : 1
actually thread is -> still : 1
is still in -> its : 1
is still in -> shared : 1
still in its -> waiting : 1
in its waiting -> period : 1
its waiting period -> of : 1
waiting period of -> but : 1
period of but -> the : 1
but the whole -> program : 1
whole program does -> already : 1
program does already -> terminate : 1
does already terminate -> after : 1
already terminate after -> the : 1
terminate after the -> second : 1
the second thread -> has : 1
second thread has -> finished : 1
thread has finished -> waiting : 1
thread has finished -> executing : 1
has finished waiting -> for : 1
finished waiting for -> this : 1
waiting for this -> we : 1
this we cannot -> see : 1
this we cannot -> print : 1
we cannot see -> the : 1
cannot see the -> bye : 1
see the bye -> message : 1
the bye message -> from : 1
bye message from -> thread : 1
message from thread -> because : 1
from thread because -> it : 1
thread because it -> was : 1
because it was -> simply : 1
it was simply -> killed : 1
was simply killed -> without : 1
simply killed without -> any : 1
killed without any -> chance : 1
without any chance -> for : 1
any chance for -> completion : 1
chance for completion -> without : 1
for completion without -> concurrent : 1
completion without concurrent -> threads : 1
without concurrent threads -> are : 1
threads are hello -> from : 1
are hello from -> thread : 1
hello from thread -> hello : 2
hello from thread -> bye : 1
from thread hello -> from : 2
thread hello from -> thread : 2
from thread bye -> from : 2
thread bye from -> thread : 2
bye from thread -> bye : 1
bye from thread -> threads : 1
from thread threads -> it : 1
thread threads it -> and : 1
threads it and -> stopping : 1
it and stopping -> threads : 1
and stopping threads -> is : 1
stopping threads is -> a : 1
threads is a -> very : 1
threads is a -> heavily : 1
very simple thing -> to : 1
simple thing to -> multiprogramming : 1
thing to multiprogramming -> starts : 1
to multiprogramming starts -> to : 1
multiprogramming starts to -> be : 1
starts to be -> complicated : 1
to be complicated -> where : 1
be complicated where -> threads : 1
complicated where threads -> need : 1
where threads need -> to : 1
threads need to -> work : 1
need to work -> together : 1
to work together -> waiting : 1
work together waiting -> for : 1
together waiting for -> each : 1
waiting for each -> and : 1
for each and -> so : 1
each and so -> order : 1
and so order -> to : 1
so order to -> start : 1
a we first -> need : 1
first need some -> function : 1
need some function -> that : 1
some function that -> executed : 1
function that executed -> by : 1
that executed by -> the : 1
executed by the -> function : 1
executed by the -> main : 1
executed by the -> same : 1
be as a -> thread : 1
as a thread -> could : 1
a thread could -> execute : 1
thread could execute -> practically : 1
could execute practically -> every : 1
execute practically every -> pin : 1
practically every pin -> down : 1
every pin down -> a : 1
pin down a -> minimal : 1
down a minimal -> example : 1
a minimal example -> program : 1
minimal example program -> that : 1
example program that -> starts : 1
that starts a -> thread : 1
starts a thread -> and : 1
a thread and -> waits : 1
thread and waits -> for : 1
and waits for -> its : 1
waits for its -> cout : 1
for its cout -> i : 1
its cout i -> int : 1
cout i int -> thread : 1
i int thread -> t : 1
int thread t -> constructor : 1
thread t constructor -> call : 1
t constructor call -> of : 1
constructor call of -> accepts : 1
call of accepts -> a : 1
of accepts a -> function : 1
or a callable -> followed : 1
a callable followed -> by : 1
callable followed by -> arguments : 1
followed by arguments -> that : 1
by arguments that -> should : 1
arguments that should -> be : 1
should be used -> with : 1
the function it -> of : 1
the function it -> was : 1
function it of -> also : 1
it of also -> possible : 1
of also possible -> to : 1
possible to start -> a : 1
start a thread -> on : 1
a thread on -> a : 1
thread on a -> function : 1
on a function -> that : 1
function that accept -> any : 1
that accept any -> the : 1
accept any the -> system : 1
any the system -> has : 1
the system has -> multiple : 1
system has multiple -> cpu : 1
has multiple cpu -> then : 1
multiple cpu then -> the : 1
cpu then the -> threads : 1
then the threads -> can : 1
the threads can -> run : 1
threads can run -> what : 1
can run what -> is : 1
run what is -> the : 1
is the difference -> between : 1
difference between parallel -> and : 1
between parallel and -> if : 1
parallel and if -> the : 1
if the computer -> has : 1
computer has only -> one : 1
has only one -> cpu : 1
only one cpu -> then : 1
one cpu then -> there : 1
cpu then there -> can : 1
then there can -> be : 1
there can be -> a : 1
lot of threads -> that : 1
of threads that -> run : 1
threads that run -> in : 1
that run in -> parallel : 1
run in parallel -> but : 1
in parallel but -> never : 1
parallel but never -> concurrently : 1
but never concurrently -> because : 1
never concurrently because -> one : 1
concurrently because one -> cpu : 1
because one cpu -> core : 1
one cpu core -> can : 1
cpu core can -> only : 1
core can only -> run : 1
can only run -> one : 1
only run one -> thread : 1
run one thread -> at : 1
one thread at -> a : 2
thread at a -> the : 1
thread at a -> what : 1
at a the -> threads : 1
a the threads -> are : 1
the threads are -> then : 1
the threads are -> interleaved : 1
threads are then -> run : 1
are then run -> in : 1
then run in -> an : 1
run in an -> interleaved : 1
an interleaved way -> where : 1
interleaved way where -> every : 1
way where every -> thread : 1
every thread is -> executed : 1
thread is executed -> for : 1
is executed for -> some : 1
executed for some -> parts : 1
for some parts -> of : 1
some parts of -> a : 1
of a then -> and : 1
a then and -> then : 1
then the next -> thread : 2
the next thread -> gets : 1
the next thread -> is : 1
next thread gets -> a : 1
thread gets a -> time : 1
gets a time -> slice : 1
a time slice -> human : 1
time slice human -> this : 1
slice human this -> looks : 1
human this looks -> like : 1
looks like they -> run : 1
like they run -> at : 1
they run at -> the : 1
need to share -> a : 1
to share a -> cpu : 1
to share a -> common : 1
share a cpu -> then : 1
a cpu then -> they : 1
cpu then they -> can : 1
then they can -> run : 1
they can run -> as : 1
can run as -> in : 1
run as in -> at : 1
as in at -> the : 1
in at the -> same : 1
in at the -> time : 1
we have absolutely -> over : 1
have absolutely over -> the : 1
absolutely over the -> following : 1
over the following -> in : 1
which the threads -> are : 1
threads are interleaved -> when : 1
are interleaved when -> sharing : 1
interleaved when sharing -> a : 1
when sharing a -> cpu : 1
sharing a cpu -> of : 1
a cpu of -> a : 1
cpu of a -> or : 1
of a or -> which : 1
a or which -> one : 1
or which one -> is : 1
one is more -> important : 1
important than the -> fact : 1
than the fact -> that : 1
fact that threads -> are : 1
that threads are -> really : 1
threads are really -> among : 1
are really among -> all : 1
really among all -> the : 1
among all the -> cpu : 1
all the cpu -> cores : 1
the cpu cores -> or : 1
cpu cores or -> if : 1
cores or if -> the : 1
if the operating -> system : 1
operating system just -> pins : 1
operating system just -> terminated : 1
system just pins -> them : 1
just pins them -> to : 1
pins them to -> the : 1
is indeed that -> all : 1
indeed that all -> our : 1
that all our -> threads : 1
all our threads -> run : 1
our threads run -> on : 1
threads run on -> only : 1
run on only -> a : 1
on only a -> single : 1
only a single -> although : 1
only a single -> that : 1
a single although -> the : 1
single although the -> machine : 1
although the machine -> has : 1
the machine has -> more : 1
machine has more -> than : 1
more than operating -> systems : 1
than operating systems -> provide : 1
systems provide possibilities -> to : 1
provide possibilities to -> control : 1
possibilities to control -> also : 1
to control also -> these : 1
control also these -> facets : 1
also these facets -> of : 1
these facets of -> but : 1
facets of but -> such : 1
of but such -> features : 1
but such features -> at : 1
such features at -> this : 1
features at this -> included : 1
at this included -> in : 1
this included in -> the : 1
we can start -> and : 1
can start and -> stop : 1
and stop threads -> and : 1
and stop threads -> without : 1
stop threads and -> tell : 1
threads and tell -> them : 1
and tell them -> when : 1
tell them when -> to : 1
them when to -> work : 1
when to work -> on : 1
to work on -> what : 1
work on what -> and : 1
on what and -> when : 1
what and when -> to : 1
and when to -> that : 1
when to that -> should : 1
to that should -> be : 1
should be enough -> for : 1
be enough for -> a : 1
enough for a -> large : 1
for a large -> class : 1
a large class -> of : 1
large class of -> what : 1
class of what -> we : 1
of what we -> did : 1
this section was -> we : 1
section was we -> started : 1
was we started -> we : 1
we started we -> most : 1
started we most -> of : 1
we most of -> them : 1
them and the -> last : 1
the last summarize -> in : 1
last summarize in -> a : 1
summarize in a -> simple : 1
in a simple -> the : 1
in a simple -> to : 1
in a simple -> it : 1
a simple the -> diagram : 1
simple the diagram -> from : 1
the diagram from -> top : 1
diagram from top -> to : 1
from top to -> the : 1
top to the -> it : 1
the it shows -> one : 1
it shows one -> point : 1
shows one point -> in : 1
one point in -> time : 1
in time where -> we : 1
time where we -> split : 1
where we split -> the : 1
we split the -> program : 1
split the program -> workflow : 1
the program workflow -> to : 1
program workflow to -> four : 1
workflow to four -> threads : 1
to four threads -> in : 1
four threads in -> we : 1
threads in we -> started : 1
in we started -> threads : 1
we started threads -> that : 1
started threads that -> did : 1
threads that did -> something : 1
that did something -> waiting : 1
did something waiting -> and : 1
something waiting and -> but : 1
waiting and but -> after : 1
but after starting -> the : 1
after starting the -> the : 1
starting the the -> main : 1
the the main -> thread : 1
main thread executing -> the : 1
thread executing the -> main : 1
executing the main -> function : 1
main function remained -> without : 1
function remained without -> a : 1
remained without a -> thread : 1
without a thread -> has : 1
a thread has -> finished : 1
has finished executing -> the : 1
finished executing the -> function : 1
executing the function -> it : 1
function it was -> started : 1
it was started -> it : 1
was started it -> will : 1
started it will -> return : 1
will return from -> this : 1
return from this -> the : 1
return from this -> way : 1
from this the -> standard : 1
this the standard -> library : 1
standard library then -> does : 1
library then does -> some : 1
then does some -> tidy : 1
does some tidy -> up : 1
some tidy up -> work : 1
tidy up work -> that : 1
up work that -> results : 1
work that results -> in : 1
that results in -> the : 1
in the thread -> being : 1
the thread being -> removed : 1
thread being removed -> from : 1
being removed from -> the : 1
removed from the -> operating : 1
from the operating -> and : 1
the operating and -> maybe : 1
operating and maybe -> in : 1
and maybe in -> its : 1
maybe in its -> but : 1
in its but -> we : 1
its but we -> do : 1
need to worry -> about : 1
worry about only -> thing : 1
about only thing -> we : 1
thing we to -> worry : 1
we to worry -> about : 1
worry about is -> when : 1
about is when -> a : 1
is when a -> thread : 1
when a thread -> calls : 1
a thread calls -> on : 1
thread calls on -> another : 1
calls on another -> it : 1
on another it -> is : 1
another it is -> put : 1
it is put -> to : 1
is put to -> sleep : 1
put to sleep -> until : 1
sleep until note -> that : 1
until note that -> we : 1
we are out -> of : 1
are out of -> luck : 1
out of luck -> if : 1
of luck if -> the : 1
luck if the -> thread : 1
if the thread -> is : 1
the thread is -> trapped : 1
thread is trapped -> in : 1
is trapped in -> an : 1
trapped in an -> endless : 1
in an endless -> if : 1
an endless if -> we : 1
endless if we -> want : 1
want a thread -> to : 1
thread to continue -> living : 1
to continue living -> until : 1
living until it -> decides : 1
until it decides -> to : 1
it decides to -> terminate : 1
decides to terminate -> we : 1
to terminate we -> can : 1
terminate we can -> call : 1
can call after -> doing : 1
call after doing -> we : 1
after doing we -> have : 1
doing we have -> no : 1
have no external -> control : 1
no external control -> over : 1
external control over -> the : 1
over the thread -> any : 1
the thread any -> no : 1
thread any no -> matter : 1
any no matter -> what : 1
matter what we -> always : 1
what we always -> or : 1
we always or -> if : 1
always or if -> we : 1
we do one -> of : 1
do one of -> the : 1
the the destructor -> of : 1
call which leads -> to : 1
to an abrupt -> application : 1
an abrupt application -> moment : 1
abrupt application moment -> when : 1
application moment when -> our : 1
moment when our -> main : 1
when our main -> function : 1
main function the -> whole : 1
function the whole -> application : 1
the whole application -> of : 1
whole application of -> the : 1
the same our -> detached : 1
the same our -> example : 1
same our detached -> was : 1
our detached was -> still : 1
detached was still -> sleeping : 1
was still sleeping -> before : 1
still sleeping before -> printing : 1
sleeping before printing -> its : 1
before printing its -> message : 1
printing its message -> to : 1
its message to -> the : 1
message to the -> the : 1
the the operating -> system : 1
system just terminated -> our : 1
just terminated our -> whole : 1
terminated our whole -> program : 1
our whole program -> without : 1
whole program without -> waiting : 1
program without waiting -> for : 1
without waiting for -> that : 1
waiting for that -> thread : 1
for that thread -> to : 1
that thread to -> this : 1
thread to this -> is : 1
something we need -> to : 1
need to if -> that : 1
to if that -> additional : 1
if that additional -> thread : 1
that additional thread -> had : 1
additional thread had -> to : 1
thread had to -> complete : 1
had to complete -> something : 1
to complete something -> we : 1
complete something we -> would : 1
something we would -> have : 1
have to make -> the : 1
make the main -> function : 2
main function for -> exception : 1
function for exception -> safe : 1
for exception safe -> shared : 1
the operation of -> threads : 1
operation of threads -> is : 1
of threads is -> a : 1
is a heavily -> operating : 1
a heavily operating -> system : 1
heavily operating system -> thing : 1
operating system thing -> and : 1
system thing and -> the : 1
thing and the -> stl : 1
stl provides good -> operating : 1
provides good operating -> interfaces : 1
good operating interfaces -> for : 1
operating interfaces for -> it : 1
interfaces for it -> is : 1
is also wise -> to : 1
also wise to -> provide : 1
wise to provide -> stl : 1
to provide stl -> support : 1
provide stl support -> for : 1
stl support for -> between : 1
support for between -> this : 1
for between this -> we : 1
between this we -> can : 1
we can not -> only : 1
can not only -> start : 1
not only start -> and : 1
only start and -> stop : 1
stop threads without -> external : 1
threads without external -> also : 1
without external also -> synchronize : 1
external also synchronize -> them : 1
also synchronize them -> with : 1
synchronize them with -> abstractions : 1
them with abstractions -> from : 1
with abstractions from -> a : 1
abstractions from a -> single : 1
from a single -> unified : 1
a single unified -> the : 1
single unified the -> this : 1
unified the this -> we : 1
look at stl -> mutex : 1
at stl mutex -> classes : 1
stl mutex classes -> and : 1
classes and raii -> lock : 1
classes and raii -> before : 1
and raii lock -> while : 1
raii lock while -> we : 1
lock while we -> play : 1
while we play -> around : 1
around with some -> of : 1
with some of -> them : 1
in our concrete -> recipe : 1
our concrete recipe -> we : 1
concrete recipe we -> will : 1
recipe we will -> also : 1
also get an -> overview : 1
get an overview -> of : 1
an overview of -> helpers : 1
overview of helpers -> that : 1
of helpers that -> the : 1
helpers that the -> stl : 1
that uses an -> instance : 1
uses an instance -> in : 1
instance in its -> and : 1
its and modes -> and : 1
and modes and -> what : 1
modes and what -> that : 1
and what that -> we : 1
what that we -> do : 1
not call the -> lock : 1
call the lock -> and : 1
the lock and -> unlock : 1
the lock and -> a : 1
the lock and -> waits : 1
the lock and -> then : 1
lock and unlock -> functions : 1
lock and unlock -> the : 1
and unlock functions -> do : 1
unlock functions do -> the : 1
functions do the -> locking : 1
do the locking -> with : 1
the locking with -> automatic : 1
locking with automatic -> unlocking : 1
with automatic unlocking -> using : 1
automatic unlocking using -> raii : 1
unlocking using raii -> we : 1
using raii we -> need : 1
raii we need -> to : 1
include all necessary -> because : 1
include all necessary -> headers : 1
all necessary because -> we : 1
necessary because we -> use : 1
because we use -> stl : 1
we use stl -> functions : 1
use stl functions -> and : 1
stl functions and -> data : 1
functions and data -> structures : 1
and data structures -> all : 1
data structures all -> the : 1
structures all the -> time : 1
all the time -> together : 1
all the time -> future : 1
the time together -> with : 1
time together with -> time : 1
together with time -> we : 1
with time we -> declare : 1
time we declare -> that : 1
namespace whole program -> revolves : 1
whole program revolves -> around : 2
program revolves around -> one : 1
program revolves around -> using : 1
revolves around one -> shared : 1
around one shared -> so : 1
one shared so -> define : 1
shared so define -> a : 1
so define a -> global : 1
define a global -> instance : 1
a global instance -> for : 1
global instance for -> the : 1
instance for the -> sake : 1
sake of are -> going : 1
of are going -> to : 1
use the and -> raii : 1
use the and -> by : 1
the and raii -> in : 1
and raii in -> order : 1
raii in order -> to : 1
to make their -> names : 1
make their names -> appear : 1
their names appear -> less : 1
names appear less -> we : 1
appear less we -> define : 1
less we define -> short : 1
we define short -> type : 1
define short type -> aliases : 1
short type aliases -> for : 1
type aliases for -> using : 1
aliases for using -> using : 1
for using using -> beginning : 1
using using beginning -> with : 1
using beginning with -> the : 1
beginning with the -> main : 1
main we define -> two : 1
define two helper -> functions : 1
two helper functions -> that : 1
helper functions that -> both : 1
helper functions that -> help : 1
functions that both -> try : 1
that both try -> to : 1
both try to -> lock : 1
try to lock -> the : 2
try to lock -> mutexes : 1
try to lock -> it : 1
to lock the -> mutex : 6
to lock the -> shared : 1
lock the mutex -> this : 1
lock the mutex -> and : 1
lock the mutex -> in : 4
lock the mutex -> at : 1
lock the mutex -> although : 1
lock the mutex -> that : 2
lock the mutex -> again : 1
the mutex this -> function : 1
the mutex this -> way : 1
mutex this function -> here : 1
this function here -> will : 1
function here will -> instantiate : 1
here will instantiate -> instance : 1
will instantiate instance -> on : 1
instantiate instance on -> the : 1
instance on the -> shared : 1
instance on the -> same : 1
on the shared -> the : 1
shared the second -> constructor : 1
the second constructor -> tells : 1
second constructor tells -> the : 1
constructor tells the -> object : 1
the object to -> keep : 1
object to keep -> the : 1
keep the lock -> its : 1
the lock its -> constructor : 1
lock its constructor -> would : 1
its constructor would -> try : 1
constructor would try -> to : 1
would try to -> lock : 1
the mutex and -> then : 1
the mutex and -> finally : 1
mutex and then -> block : 1
mutex and then -> prints : 1
and then block -> until : 1
then block until -> it : 1
block until it -> then : 1
block until it -> obtains : 1
until it then -> we : 1
then we call -> on : 1
then we call -> which : 1
then we call -> lk : 1
the this call -> will : 1
this call will -> return : 1
call will return -> immediately : 1
will return immediately -> and : 1
return immediately and -> its : 1
immediately and its -> boolean : 1
and its boolean -> return : 1
its boolean return -> value : 1
boolean return value -> tells : 1
return value tells -> us : 1
if it got -> the : 1
it got the -> lock : 1
got the lock -> or : 1
the lock or -> if : 1
lock or if -> the : 1
if the mutex -> was : 1
the mutex was -> locked : 1
mutex was locked -> already : 1
was locked already -> somewhere : 1
locked already somewhere -> static : 1
already somewhere static -> void : 1
somewhere static void -> l : 1
static void l -> if : 1
static void l -> throw : 1
static void l -> cout : 2
void l if -> cout : 1
l if cout -> exclusive : 1
if cout exclusive -> else : 1
cout exclusive else -> cout : 1
exclusive else cout -> to : 1
else cout to -> lock : 1
cout to lock -> other : 1
to lock other -> helper : 1
lock other helper -> function : 1
other helper function -> tries : 1
helper function tries -> to : 1
tries to lock -> the : 1
tries to lock -> mutex : 1
mutex in exclusive -> it : 1
mutex in exclusive -> do : 1
mutex in exclusive -> after : 1
mutex in exclusive -> the : 1
mutex in exclusive -> this : 1
in exclusive it -> blocks : 1
in exclusive it -> shows : 1
exclusive it blocks -> until : 1
it blocks until -> it : 1
blocks until it -> gets : 1
until it gets -> the : 1
gets the then -> we : 1
then we simulate -> some : 1
we simulate some -> error : 1
simulate some error -> case : 1
some error case -> by : 1
error case by -> throwing : 1
case by throwing -> an : 1
by throwing an -> exception : 1
throwing an exception -> carries : 1
an exception carries -> just : 1
exception carries just -> a : 1
carries just a -> plain : 1
just a plain -> integer : 1
a plain integer -> number : 1
plain integer number -> instead : 1
integer number instead -> of : 1
number instead of -> a : 1
of a more -> complex : 1
more complex exception -> although : 1
complex exception although -> this : 1
exception although this -> leads : 1
although this leads -> to : 1
to an immediate -> exit : 1
an immediate exit -> of : 1
immediate exit of -> the : 1
exit of the -> context : 1
of the context -> in : 1
the context in -> which : 1
context in which -> we : 1
which we hold -> a : 1
we hold a -> locked : 1
hold a locked -> the : 1
a locked the -> mutex : 1
locked the mutex -> will : 1
the mutex will -> cleanly : 1
the mutex will -> be : 1
mutex will cleanly -> be : 1
will cleanly be -> released : 1
cleanly be released -> that : 1
be released that -> the : 1
released that the -> destructor : 1
that the destructor -> of : 1
destructor of will -> release : 1
of will release -> the : 1
will release the -> lock : 1
release the lock -> in : 1
the lock in -> any : 1
lock in any -> case : 1
in any case -> by : 1
any case by -> static : 1
case by static -> void : 1
by static void -> l : 1
void l throw -> to : 1
l throw to -> the : 1
throw to the -> main : 1
we open up -> another : 1
open up another -> instantiate : 1
up another instantiate -> a : 1
another instantiate a -> its : 1
another instantiate a -> second : 1
instantiate a its -> constructor : 1
a its constructor -> immediately : 1
its constructor immediately -> locks : 1
constructor immediately locks -> the : 1
immediately locks the -> mutex : 1
locks the mutex -> in : 1
locks the mutex -> again : 1
locks the mutex -> that : 1
mutex in we -> will : 1
what this means -> in : 1
this means in -> the : 1
means in the -> next : 1
next int cout -> lock : 1
int cout lock -> we : 1
cout lock we -> open : 1
lock we open -> yet : 1
we open yet -> another : 1
open yet another -> instantiate : 1
yet another instantiate -> a : 1
instantiate a second -> instance : 1
a second instance -> on : 1
second instance on -> the : 1
same we have -> instances : 1
have instances and -> they : 1
instances and they -> both : 1
and they both -> hold : 1
they both hold -> a : 1
both hold a -> shared : 1
hold a shared -> lock : 1
a shared lock -> on : 1
shared lock on -> the : 2
lock on the -> in : 1
lock on the -> the : 1
lock on the -> upon : 1
the in we -> could : 1
in we could -> instantiate : 1
we could instantiate -> arbitrarily : 1
could instantiate arbitrarily -> many : 1
instantiate arbitrarily many -> instances : 1
arbitrarily many instances -> on : 1
many instances on -> the : 1
instances on the -> same : 1
the same then -> we : 1
the same then -> concatenate : 1
the same then -> that : 1
the same then -> this : 1
same then we -> call : 1
we call which -> tries : 1
call which tries -> to : 1
which tries to -> mutex : 1
tries to mutex -> in : 1
to mutex in -> this : 1
mutex in this -> will : 1
in this will -> not : 1
will not succeed -> because : 1
not succeed because -> it : 1
succeed because it -> is : 1
it is locked -> in : 1
it is locked -> or : 1
is locked in -> mode : 1
is locked in -> shared : 1
locked in mode -> cout : 1
locked in mode -> and : 1
in mode cout -> lock : 1
mode cout lock -> leaving : 1
cout lock leaving -> the : 1
lock leaving the -> latest : 1
leaving the latest -> the : 1
the latest the -> destructor : 1
latest the destructor -> of : 1
of the releases -> its : 1
the releases its -> shared : 1
releases its shared -> lock : 1
its shared lock -> on : 1
function will again -> fail : 1
will again fail -> because : 1
again fail because -> the : 1
because the mutex -> is : 1
the mutex is -> still : 1
the mutex is -> in : 1
the mutex is -> locked : 1
mutex is still -> in : 1
mutex is still -> things : 1
still in shared -> lock : 1
in shared lock -> cout : 1
shared lock cout -> lock : 1
lock cout lock -> once : 1
cout lock once -> cout : 1
lock once cout -> is : 1
once cout is -> leaving : 1
cout is leaving -> also : 1
is leaving also -> the : 1
leaving also the -> other : 1
also the other -> all : 1
the other all -> objects : 1
other all objects -> are : 1
objects are and -> the : 1
and the mutex -> is : 1
mutex is in -> unlocked : 1
is in unlocked -> state : 1
in unlocked state -> we : 1
unlocked state we -> can : 1
state we can -> finally : 1
can finally lock -> the : 1
finally lock the -> mutex : 1
in exclusive do -> this : 1
exclusive do this -> by : 1
this by calling -> then : 1
by calling then -> remember : 1
calling then remember -> that : 1
then remember that -> we : 1
that we throw -> an : 1
we throw an -> exception : 1
exception in but -> because : 1
in but because -> is : 1
but because is -> an : 1
because is an -> raii : 1
is an raii -> object : 1
an raii object -> that : 1
raii object that -> gives : 1
that gives us -> exception : 1
gives us exception -> the : 1
us exception the -> mutex : 1
exception the mutex -> will : 1
mutex will be -> unlocked : 1
will be unlocked -> again : 1
be unlocked again -> no : 1
unlocked again no -> matter : 1
again no matter -> how : 1
how we return -> from : 1
we return from -> this : 1
from this way -> will : 1
from this way -> we : 1
this way will -> not : 1
way will not -> block : 1
will not block -> on : 1
not block on -> an : 1
block on an -> erroneously : 1
on an erroneously -> still : 1
an erroneously still -> locked : 1
erroneously still locked -> try : 1
still locked try -> catch : 1
locked try catch -> cout : 1
try catch cout -> exception : 2
catch cout exception -> e : 2
cout exception e -> and : 1
cout exception e -> important : 1
exception e and -> running : 1
e and running -> the : 1
the code yields -> the : 1
code yields the -> following : 1
lines show that -> we : 1
lines show that -> the : 1
show that we -> got : 1
that we got -> the : 1
got the two -> shared : 1
the two shared -> lock : 1
two shared lock -> then : 1
shared lock then -> the : 1
lock then the -> function : 1
the function fails -> to : 1
function fails to -> lock : 1
fails to lock -> the : 1
in exclusive after -> leaving : 1
exclusive after leaving -> the : 1
after leaving the -> inner : 1
after leaving the -> other : 1
leaving the inner -> scope : 1
the inner scope -> and : 1
inner scope and -> unlocking : 1
scope and unlocking -> the : 1
and unlocking the -> second : 1
unlocking the second -> shared : 1
the second shared -> the : 1
second shared the -> function : 1
shared the function -> still : 1
the function still -> after : 1
function still after -> leaving : 1
still after leaving -> the : 1
leaving the other -> scope : 1
the other scope -> which : 1
other scope which -> finally : 1
scope which finally -> released : 1
which finally released -> the : 1
finally released the -> mutex : 1
released the mutex -> and : 1
mutex and finally -> able : 1
and finally able -> to : 1
finally able to -> lock : 1
able to lock -> the : 3
lock the shared -> lock : 1
the shared lock -> shared : 1
shared lock shared -> lock : 1
lock shared lock -> unable : 1
lock shared lock -> once : 1
shared lock unable -> to : 1
lock unable to -> lock : 1
unable to lock -> shared : 1
unable to lock -> lock : 1
to lock shared -> lock : 1
shared lock once -> unable : 1
lock once unable -> to : 1
once unable to -> lock : 1
to lock lock -> is : 1
lock lock is -> got : 1
lock is got -> exception : 1
is got exception -> got : 1
got exception got -> exclusive : 1
exception got exclusive -> it : 1
got exclusive it -> looking : 1
exclusive it looking -> at : 1
it looking at -> the : 1
is at first -> a : 1
at first a -> little : 1
first a little -> confusing : 1
a little confusing -> that : 1
little confusing that -> there : 1
confusing that there -> are : 1
are different mutex -> classes : 1
different mutex classes -> and : 1
different mutex classes -> with : 1
different mutex classes -> in : 1
and raii before -> looking : 1
raii before looking -> at : 1
before looking at -> our : 1
looking at our -> concrete : 1
at our concrete -> code : 1
our concrete code -> let : 1
concrete code let -> us : 1
code let us -> summarize : 1
let us summarize -> what : 1
us summarize what -> the : 1
summarize what the -> stl : 1
stl has available -> for : 1
has available for -> term : 1
available for term -> mutex : 1
for term mutex -> stands : 1
term mutex stands -> for : 1
mutex stands for -> in : 1
stands for in -> order : 1
to prevent that -> concurrently : 1
prevent that concurrently -> running : 1
that concurrently running -> threads : 1
concurrently running threads -> alter : 1
running threads alter -> the : 1
threads alter the -> same : 1
alter the same -> object : 1
the same object -> in : 1
same object in -> a : 1
way that might -> lead : 1
that might lead -> to : 1
might lead to -> data : 1
lead to data -> we : 1
to data we -> can : 1
can use mutex -> the : 1
use mutex the -> stl : 1
mutex the stl -> provides : 1
stl provides different -> mutex : 1
provides different mutex -> classes : 1
mutex classes with -> different : 1
classes with different -> they : 1
with different they -> all : 1
different they all -> have : 1
all have in -> common : 1
in common that -> they : 1
common that they -> have : 1
that they have -> a : 1
and an a -> thread : 1
an a thread -> is : 1
thread is the -> first : 1
first one to -> call : 1
one to call -> on : 1
on a mutex -> that : 1
a mutex that -> was : 1
a mutex that -> protects : 1
mutex that was -> not : 1
was not locked -> it : 1
not locked it -> owns : 1
locked it owns -> the : 1
it owns the -> at : 1
owns the at -> this : 1
at this other -> threads : 1
this other threads -> will : 1
other threads will -> block : 1
threads will block -> on : 1
will block on -> their : 1
block on their -> until : 1
on their until -> the : 1
their until the -> first : 1
until the first -> thread : 1
the first thread -> calls : 1
the first thread -> to : 1
the first thread -> returns : 1
the first thread -> in : 1
first thread calls -> can : 1
thread calls can -> do : 1
calls can do -> exactly : 1
do exactly are -> many : 1
exactly are many -> different : 1
are many different -> mutex : 1
many different mutex -> classes : 1
mutex classes in -> the : 1
in the mutex -> with : 1
in the mutex -> bool : 1
the mutex with -> a : 1
mutex with a -> and : 1
with a and -> an : 1
and an provides -> an : 1
an provides an -> additional : 1
provides an additional -> nonblocking : 1
an additional nonblocking -> as : 1
additional nonblocking as -> but : 1
nonblocking as but -> provides : 1
as but provides -> additional : 1
but provides additional -> and : 1
provides additional and -> methods : 1
additional and methods -> that : 1
and methods that -> allow : 1
and methods that -> they : 1
methods that allow -> for : 1
that allow for -> instead : 1
allow for instead -> of : 1
instead of blocking -> as : 1
instead of blocking -> forever : 1
of blocking as -> but : 1
blocking as but -> if : 1
as but if -> a : 1
if a thread -> locked : 1
if a thread -> locks : 1
a thread locked -> an : 1
thread locked an -> instance : 1
locked an instance -> of : 1
instance of it -> it : 1
instance of it -> is : 1
of it it -> can : 1
it can call -> multiple : 1
can call multiple -> times : 1
call multiple times -> on : 1
the same mutex -> object : 1
same mutex object -> without : 1
mutex object without -> it : 1
object without it -> is : 1
without it is -> released : 1
it is released -> after : 1
is released after -> the : 1
released after the -> owning : 1
after the owning -> thread : 1
the owning thread -> called : 1
owning thread called -> as : 1
thread called as -> often : 1
called as often -> as : 1
often as it -> called : 1
as it called -> the : 1
it called the -> features : 1
called the features -> of : 1
the features of -> both : 1
the features of -> and : 1
features of both -> and : 1
of both and -> mutex : 1
both and mutex -> is : 1
and mutex is -> special : 1
mutex is special -> in : 1
special in that -> that : 1
can be locked -> in : 1
be locked in -> mode : 1
in mode and -> in : 1
mode and in -> in : 1
and in in -> exclusive : 1
in in exclusive -> it : 1
exclusive it shows -> the : 1
it shows the -> same : 1
shows the same -> behavior : 1
the same behavior -> as : 1
same behavior as -> the : 1
behavior as the -> standard : 1
as the standard -> mutex : 1
the standard mutex -> if : 1
standard mutex if -> a : 1
mutex if a -> thread : 1
a thread locks -> it : 1
thread locks it -> in : 1
locks it in -> shared : 1
it in shared -> it : 2
in shared it -> is : 2
in shared it -> will : 1
shared it is -> possible : 1
shared it is -> not : 1
is possible for -> other : 1
possible for other -> threads : 1
for other threads -> to : 1
other threads to -> lock : 1
threads to lock -> it : 1
to lock it -> in : 1
to lock it -> again : 1
lock it in -> shared : 1
shared it will -> then : 1
it will then -> be : 1
it will then -> call : 1
it will then -> print : 1
will then be -> unlocked : 1
then be unlocked -> as : 1
be unlocked as -> soon : 1
unlocked as soon -> as : 1
as the last -> shared : 1
last shared mode -> lock : 1
shared mode lock -> owner : 1
mode lock owner -> releases : 1
lock owner releases -> while : 1
owner releases while -> a : 1
releases while a -> lock : 1
while a lock -> is : 1
a lock is -> locked : 1
lock is locked -> in : 1
locked in shared -> it : 1
possible to obtain -> exclusive : 1
to obtain exclusive -> this : 1
obtain exclusive this -> is : 1
exclusive this is -> very : 1
exclusive this is -> still : 1
to the behavior -> of : 1
behavior of only -> that : 1
of only that -> it : 1
only that it -> does : 1
does not manage -> but : 1
not manage but -> lock : 1
manage but lock -> the : 1
but lock the -> features : 1
lock the features -> of : 1
features of and -> for : 1
of and for -> both : 1
and for both -> exclusive : 1
for both exclusive -> and : 1
both exclusive and -> shared : 1
exclusive and shared -> is : 1
and shared is -> nice : 1
shared is nice -> and : 1
is nice and -> easy : 1
nice and easy -> as : 1
and easy as -> long : 1
easy as long -> as : 1
long as threads -> do : 1
as threads do -> a : 1
threads do a -> access : 1
do a access -> some : 1
a access some -> concurrence : 1
access some concurrence -> protected : 1
some concurrence protected -> object : 1
concurrence protected object -> and : 1
protected object and -> unlock : 1
object and unlock -> the : 1
and unlock the -> mutex : 2
unlock the mutex -> as : 1
unlock the mutex -> during : 1
the mutex as -> soon : 1
mutex as soon -> as : 1
soon as a -> forgetful : 1
soon as a -> instance : 1
as a forgetful -> programmer : 1
a forgetful programmer -> misses : 1
forgetful programmer misses -> to : 1
programmer misses to -> unlock : 1
misses to unlock -> a : 1
to unlock a -> mutex : 1
unlock a mutex -> somewhere : 1
a mutex somewhere -> after : 1
mutex somewhere after -> locking : 1
somewhere after locking -> or : 1
after locking or -> an : 1
locking or an -> exception : 1
or an exception -> is : 1
exception is thrown -> while : 1
is thrown while -> a : 1
thrown while a -> mutex : 1
while a mutex -> is : 1
a mutex is -> still : 1
is still things -> look : 1
still things look -> ugly : 1
things look ugly -> pretty : 1
look ugly pretty -> in : 1
ugly pretty in -> the : 1
pretty in the -> best : 1
in the best -> the : 1
the best the -> program : 1
best the program -> just : 1
program just hangs -> immediately : 1
just hangs immediately -> and : 1
hangs immediately and -> the : 1
immediately and the -> missing : 1
and the missing -> unlock : 1
the missing unlock -> call : 1
missing unlock call -> is : 1
unlock call is -> identified : 1
call is identified -> such : 1
is identified such -> are : 1
identified such are -> very : 1
such are very -> similar : 1
are very similar -> to : 1
similar to memory -> which : 1
to memory which -> also : 1
memory which also -> occur : 1
which also occur -> when : 1
also occur when -> there : 1
occur when there -> are : 1
when there are -> missing : 1
when there are -> items : 1
when there are -> still : 1
there are missing -> regarding : 1
are missing regarding -> memory : 1
missing regarding memory -> we : 1
regarding memory we -> have : 1
memory we have -> and : 1
have and those -> helpers : 1
and those helpers -> provide : 1
those helpers provide -> very : 1
helpers provide very -> convenient : 1
provide very convenient -> ways : 1
very convenient ways -> to : 1
convenient ways to -> avoid : 1
ways to avoid -> memory : 1
to avoid memory -> such : 1
avoid memory such -> helpers : 1
memory such helpers -> exist : 1
such helpers exist -> for : 1
helpers exist for -> the : 1
exist for the -> simplest : 1
for the simplest -> one : 1
one is it -> can : 1
used as l -> critical : 1
as l critical -> section : 1
l critical section -> constructor : 1
critical section constructor -> accepts : 1
section constructor accepts -> a : 1
constructor accepts a -> on : 1
accepts a on -> which : 1
a on which -> it : 1
a on which -> we : 1
on which it -> calls : 1
which it calls -> the : 1
calls the whole -> constructor : 1
the whole constructor -> call : 1
whole constructor call -> will : 1
constructor call will -> block : 1
call will block -> until : 1
will block until -> it : 1
until it obtains -> the : 1
it obtains the -> lock : 1
obtains the lock -> on : 1
the lock on -> the : 1
on the upon -> it : 1
the upon it -> unlocks : 1
upon it unlocks -> the : 1
it unlocks the -> mutex : 1
unlocks the mutex -> this : 1
mutex this way -> it : 1
it is hard -> to : 1
hard to get -> the : 1
get the cycle -> it : 1
the cycle it -> happens : 1
cycle it happens -> stl : 1
it happens stl -> provides : 1
happens stl provides -> the : 1
provides the following -> different : 1
the following different -> raii : 1
following different raii -> they : 1
different raii they -> all : 1
raii they all -> accept : 1
they all accept -> a : 1
all accept a -> template : 1
accept a template -> shall : 1
a template shall -> be : 1
template shall be -> of : 1
shall be of -> the : 1
type as the -> mutex : 1
as the mutex -> since : 1
the mutex since -> the : 1
mutex since the -> compiler : 1
since the compiler -> can : 1
compiler can deduce -> that : 1
can deduce that -> class : 1
deduce that class -> provides : 1
that class provides -> nothing : 1
class provides nothing -> else : 1
provides nothing else -> than : 1
nothing else than -> a : 1
than a constructor -> and : 1
constructor and a -> which : 1
a which and -> a : 1
which and a -> to : 1
and a to -> but : 1
a to but -> supports : 1
to but supports -> arbitrarily : 1
but supports arbitrarily -> many : 1
supports arbitrarily many -> mutexes : 1
arbitrarily many mutexes -> in : 1
many mutexes in -> its : 1
mutexes in its -> will : 1
in its will -> release : 1
its will release -> them : 1
will release them -> in : 1
release them in -> opposite : 1
them in opposite -> order : 1
in opposite order -> in : 1
opposite order in -> its : 1
order in its -> a : 1
in its a -> mutex : 1
its a mutex -> in : 1
a mutex in -> exclusive : 1
in exclusive the -> constructor : 1
exclusive the constructor -> also : 1
the constructor also -> accepts : 1
constructor also accepts -> arguments : 1
also accepts arguments -> that : 1
accepts arguments that -> to : 1
arguments that to -> timeout : 1
that to timeout -> instead : 1
to timeout instead -> of : 1
timeout instead of -> blocking : 1
of blocking forever -> on : 1
blocking forever on -> the : 1
forever on the -> lock : 1
on the lock -> it : 1
the lock it -> is : 1
lock it is -> also : 1
possible to not -> lock : 1
to not lock -> the : 1
not lock the -> mutex : 1
not lock the -> by : 1
the mutex at -> or : 1
mutex at or -> to : 1
at or to -> assume : 1
or to assume -> that : 1
to assume that -> it : 1
is locked or -> to : 1
locked or to -> only : 1
or to only -> locking : 1
to only locking -> the : 1
only locking the -> additional : 1
locking the additional -> methods : 1
the additional methods -> allow : 1
additional methods allow -> to : 1
methods allow to -> lock : 1
allow to lock -> and : 1
to lock and -> unlock : 1
the mutex during -> the : 1
mutex during the -> as : 1
during the as -> but : 1
the as but -> all : 1
as but all -> operations : 1
but all operations -> are : 1
all operations are -> applied : 1
operations are applied -> on : 1
are applied on -> the : 1
applied on the -> mutex : 1
on the mutex -> in : 1
mutex in shared -> and : 1
in shared and -> have : 1
shared and have -> interfaces : 1
and have interfaces -> that : 1
have interfaces that -> only : 1
interfaces that only -> consist : 1
that only consist -> of : 1
consist of constructor -> and : 1
of constructor and -> and : 1
constructor and and -> are : 1
and and are -> more : 1
and are more -> but : 1
are more but -> also : 1
more but also -> more : 1
but also more -> we : 1
also more we -> will : 1
more we will -> see : 1
see in later -> recipes : 1
in later recipes -> of : 1
later recipes of -> this : 1
recipes of this -> how : 1
this how else -> they : 1
how else they -> can : 1
else they can -> be : 1
be used if -> not : 1
used if not -> for : 1
if not for -> plain : 1
not for plain -> simple : 1
for plain simple -> lock : 1
plain simple lock -> get : 1
simple lock get -> back : 1
lock get back -> to : 1
get back to -> the : 1
recipe code although -> we : 1
code although we -> only : 1
we only ran -> the : 1
only ran the -> code : 1
ran the code -> in : 1
code in single -> thread : 1
in single thread -> we : 1
single thread we -> have : 1
thread we have -> seen : 1
have seen how -> it : 1
seen how it -> is : 1
it is meant -> to : 1
is meant to -> use : 1
meant to use -> the : 1
use the lock -> the : 1
the lock the -> type : 1
lock the type -> alias : 1
stands for allows -> us : 1
for allows us -> to : 1
us to lock -> an : 1
to lock an -> instance : 1
lock an instance -> multiple : 1
an instance multiple -> times : 1
instance multiple times -> in : 1
times in shared -> as : 1
in shared as -> long : 1
long as and -> no : 1
as and no -> call : 1
and no call -> is : 1
no call is -> able : 1
call is able -> to : 1
in exclusive this -> is : 1
this is still -> get : 1
is still get -> to : 1
still get to -> the : 1
get to the -> exclusively : 1
to the exclusively -> locking : 1
the exclusively locking -> functions : 1
exclusively locking functions -> that : 1
locking functions that -> came : 1
functions that came -> later : 1
that came later -> in : 1
came later in -> the : 1
the main try -> catch : 1
main try catch -> cout : 1
exception e important -> detail : 1
e important detail -> is : 1
important detail is -> that : 1
detail is that -> after : 1
detail is that -> we : 1
that after returning -> from : 1
after returning from -> the : 1
returning from the -> function : 1
from the function -> is : 1
function is able -> to : 1
the mutex although -> did : 1
mutex although did -> not : 1
although did not -> exit : 1
did not exit -> cleanly : 1
not exit cleanly -> due : 1
exit cleanly due -> to : 1
cleanly due to -> the : 1
to the exception -> it : 1
the exception it -> have : 1
exception it have -> another : 1
it have another -> look : 1
at it used -> a : 1
used a strange -> constructor : 1
a strange constructor -> l : 1
strange constructor l -> if : 1
constructor l if -> did : 1
l if did -> not : 1
if did not -> only : 1
did not only -> provide : 1
did not only -> make : 1
not only provide -> also : 1
only provide also -> as : 1
provide also as -> constructor : 1
also as constructor -> arguments : 1
as constructor arguments -> for : 1
constructor arguments for -> in : 1
arguments for in -> this : 1
for in this -> is : 1
an empty global -> object : 1
empty global object -> that : 1
global object that -> can : 1
used to select -> a : 1
to select a -> different : 1
select a different -> constructor : 1
a different constructor -> of : 1
different constructor of -> that : 1
of that simply -> does : 1
that simply does -> not : 1
simply does not -> lock : 1
does not lock -> the : 1
lock the by -> doing : 1
the by doing -> we : 1
doing we are -> able : 1
to call which -> does : 1
call which does -> not : 1
does not in -> case : 1
does not in -> order : 1
not in case -> the : 1
case the mutex -> is : 1
mutex is locked -> we : 1
is locked we -> can : 1
locked we can -> do : 1
do something if -> it : 1
something if it -> was : 1
it was indeed -> possible : 1
was indeed possible -> to : 1
get the we -> still : 1
the we still -> have : 1
have the destructor -> tidying : 1
the destructor tidying -> up : 1
destructor tidying up -> after : 1
tidying up after -> deadlocks : 1
up after deadlocks -> with : 1
after deadlocks with -> deadlocks : 1
deadlocks with deadlocks -> had : 1
with deadlocks had -> occurred : 1
deadlocks had occurred -> in : 1
had occurred in -> road : 1
occurred in road -> they : 1
in road they -> would : 1
road they would -> like : 1
they would like -> the : 1
would like the -> following : 1
the following order -> to : 1
following order to -> get : 1
get the traffic -> flow : 1
the traffic flow -> going : 1
traffic flow going -> we : 1
flow going we -> either : 1
going we either -> need : 1
we either need -> a : 1
either need a -> large : 1
need a large -> crane : 1
a large crane -> that : 1
large crane that -> randomly : 1
crane that randomly -> picks : 1
that randomly picks -> one : 1
randomly picks one -> car : 1
picks one car -> from : 1
one car from -> the : 1
car from the -> center : 1
from the center -> of : 1
the center of -> the : 1
center of the -> street : 1
of the street -> intersection : 1
the street intersection -> and : 1
street intersection and -> removes : 1
intersection and removes -> if : 1
and removes if -> that : 1
removes if that -> is : 1
is not then -> we : 1
we need enough -> drivers : 1
need enough drivers -> to : 1
enough drivers to -> be : 1
drivers to be -> the : 1
be the deadlock -> can : 1
the deadlock can -> be : 1
deadlock can be -> solved : 1
be solved by -> all : 1
solved by all -> drivers : 1
by all drivers -> in : 1
all drivers in -> one : 1
drivers in one -> direction : 1
in one direction -> driving : 1
one direction driving -> several : 1
direction driving several -> meters : 1
driving several meters -> making : 1
several meters making -> space : 1
meters making space -> for : 1
making space for -> the : 1
for the other -> drivers : 1
for the other -> one : 1
the other drivers -> to : 1
other drivers to -> multithreaded : 1
drivers to multithreaded -> such : 1
to multithreaded such -> of : 1
multithreaded such of -> need : 1
such of need -> to : 1
of need to -> be : 1
to be avoided -> strictly : 1
be avoided strictly -> by : 1
avoided strictly by -> the : 1
strictly by the -> it : 1
by the it -> is : 1
by the it -> this : 1
it is however -> too : 1
is however too -> easy : 1
however too easy -> to : 1
easy to fail -> in : 1
to fail in -> that : 1
fail in that -> regard : 1
that regard when -> the : 1
regard when the -> program : 1
when the program -> is : 2
is really this -> are : 1
really this are -> going : 1
to write code -> which : 1
to write code -> that : 1
write code which -> intentionally : 1
code which intentionally -> provokes : 1
which intentionally provokes -> a : 1
intentionally provokes a -> deadlock : 1
provokes a deadlock -> we : 1
provokes a deadlock -> and : 1
a deadlock we -> will : 1
deadlock we will -> see : 1
how to write -> code : 1
write code that -> acquires : 1
write code that -> needs : 1
code that acquires -> the : 1
that acquires the -> same : 1
acquires the same -> resources : 1
the same resources -> that : 1
same resources that -> led : 1
resources that led -> the : 1
that led the -> other : 1
led the other -> code : 1
the other code -> into : 1
other code into -> a : 1
into a but -> use : 1
a but use -> the : 1
but use the -> new : 1
the new stl -> lock : 1
new stl lock -> that : 1
stl lock that -> came : 1
lock that came -> with : 1
came with in -> order : 1
to avoid this -> to : 1
avoid this to -> do : 1
to do code -> of : 1
do code of -> this : 1
of this section -> contains : 1
this section contains -> two : 1
section contains two -> pairs : 1
contains two pairs -> of : 1
pairs of functions -> that : 1
of functions that -> ought : 1
of functions that -> return : 1
functions that ought -> to : 1
be executed by -> concurrent : 1
be executed by -> additional : 1
be executed by -> another : 1
executed by concurrent -> and : 1
by concurrent and -> that : 1
concurrent and that -> acquire : 1
and that acquire -> two : 1
that acquire two -> resources : 1
acquire two resources -> in : 1
two resources in -> form : 1
resources in form -> of : 1
form of one -> pair : 1
of one pair -> provokes : 1
one pair provokes -> a : 1
pair provokes a -> deadlock : 1
a deadlock and -> the : 1
deadlock and the -> other : 1
the other avoids -> in : 1
other avoids in -> the : 1
avoids in the -> main : 1
going to try -> them : 1
to try them -> first : 1
try them first -> include : 1
them first include -> all : 1
all needed headers -> and : 2
use namespace and -> using : 7
use namespace and -> by : 1
namespace and using -> namespace : 7
namespace we instantiate -> two : 1
we instantiate two -> mutex : 1
instantiate two mutex -> objects : 1
two mutex objects -> which : 1
mutex objects which -> we : 1
objects which we -> need : 1
to run into -> a : 1
run into a -> mutex : 1
run into a -> we : 1
into a mutex -> mutex : 1
a mutex mutex -> order : 1
mutex mutex order -> to : 1
mutex order to -> provoke : 1
order to provoke -> a : 1
to provoke a -> deadlock : 1
provoke a deadlock -> with : 1
a deadlock with -> two : 1
deadlock with two -> we : 1
with two we -> need : 1
two we need -> two : 1
we need two -> one : 1
need two one -> function : 1
two one function -> tries : 1
one function tries -> to : 1
to lock mutex -> a : 1
lock mutex a -> and : 1
mutex a and -> then : 1
mutex a and -> b : 2
and then mutex -> while : 1
then mutex while -> the : 1
mutex while the -> other : 1
other function will -> do : 1
the opposite by -> letting : 1
opposite by letting -> both : 1
by letting both -> functions : 1
letting both functions -> sleep : 1
both functions sleep -> a : 1
functions sleep a -> bit : 1
sleep a bit -> between : 1
a bit between -> the : 1
bit between the -> we : 1
between the we -> can : 1
can make sure -> that : 1
sure that this -> code : 1
this code blocks -> forever : 1
this code blocks -> on : 1
code blocks forever -> on : 1
blocks forever on -> a : 1
forever on a -> is : 1
on a is -> for : 1
a is for -> demonstration : 1
is for demonstration -> a : 1
for demonstration a -> program : 1
demonstration a program -> without : 1
a program without -> some : 1
program without some -> sleep : 1
without some sleep -> lines : 1
some sleep lines -> might : 1
sleep lines might -> run : 1
lines might run -> successfully : 1
might run successfully -> without : 1
run successfully without -> a : 1
successfully without a -> deadlock : 1
without a deadlock -> sometimes : 1
a deadlock sometimes -> if : 1
deadlock sometimes if -> we : 1
sometimes if we -> start : 1
if we start -> it : 1
we start it -> note : 1
start it note -> that : 1
it note that -> we : 1
character in order -> to : 1
a line but -> we : 1
line but we -> use : 1
but we use -> does : 1
we use does -> not : 1
use does not -> only : 1
not only perform -> a : 1
only perform a -> line : 1
perform a line -> break : 1
line break but -> also : 1
break but also -> flushes : 1
but also flushes -> the : 1
also flushes the -> stream : 1
flushes the stream -> buffer : 1
buffer of so -> we : 1
sure that prints -> are : 1
that prints are -> not : 1
prints are not -> bunched : 1
are not bunched -> up : 1
not bunched up -> and : 1
bunched up and -> static : 1
bunched up and -> printed : 1
up and static -> void : 1
and static void -> cout : 1
void cout acquiring -> mutex : 2
cout acquiring mutex -> la : 2
cout acquiring mutex -> lb : 2
acquiring mutex la -> cout : 2
mutex la cout -> acquiring : 1
mutex la cout -> got : 1
la cout acquiring -> mutex : 1
acquiring mutex lb -> cout : 2
mutex lb cout -> got : 1
mutex lb cout -> acquiring : 1
lb cout got -> both : 1
cout got both -> promised : 1
cout got both -> we : 1
cout got both -> static : 1
cout got both -> the : 1
got both promised -> in : 1
both promised in -> the : 1
promised in the -> last : 1
the last looks -> exactly : 1
last looks exactly -> same : 1
looks exactly same -> as : 1
exactly same as -> but : 1
but it locks -> mutex : 1
it locks mutex -> a : 1
locks mutex a -> and : 1
a and b -> in : 2
a and b -> and : 1
and b in -> the : 1
and b in -> opposite : 1
b in the -> opposite : 1
the opposite static -> void : 1
opposite static void -> cout : 1
opposite static void -> l : 1
lb cout acquiring -> mutex : 1
la cout got -> both : 1
got both we -> write : 1
both we write -> a : 1
write a variant -> of : 1
a variant of -> those : 1
variant of those -> two : 1
of those two -> functions : 1
those two functions -> we : 1
two functions we -> just : 1
we just they -> use : 1
just they use -> the : 1
they use the -> class : 1
use the class -> which : 1
the class which -> locks : 1
class which locks -> all : 1
which locks all -> mutexes : 1
locks all mutexes -> we : 1
all mutexes we -> provide : 1
mutexes we provide -> as : 1
provide as constructor -> its : 1
as constructor its -> destructor : 1
constructor its destructor -> unlocks : 1
its destructor unlocks -> them : 1
destructor unlocks them -> while : 1
unlocks them while -> locking : 1
them while locking -> the : 1
while locking the -> it : 1
while locking the -> queue : 1
locking the it -> internally : 1
the it internally -> applies : 1
it internally applies -> a : 1
internally applies a -> deadlock : 1
applies a deadlock -> avoidance : 1
a deadlock avoidance -> strategy : 1
deadlock avoidance strategy -> for : 1
avoidance strategy for -> note : 1
strategy for note -> that : 1
for note that -> both : 1
that both functions -> still : 1
both functions still -> use : 1
functions still use -> mutex : 1
still use mutex -> a : 1
use mutex a -> and : 1
b in opposite -> static : 1
in opposite static -> void : 1
void l cout -> got : 2
l cout got -> both : 2
got both static -> void : 1
both static void -> l : 1
got both the -> main : 1
both the main -> we : 1
go through two -> we : 1
through two we -> use : 1
two we use -> the : 1
use the functions -> in : 1
use the functions -> that : 1
the functions in -> multithreaded : 1
functions in multithreaded -> int : 1
in multithreaded int -> thread : 1
multithreaded int thread -> thread : 1
int thread thread -> we : 1
int thread thread -> cout : 1
thread thread we -> use : 1
the functions that -> do : 1
functions that do -> not : 1
do not utilize -> any : 1
not utilize any -> deadlock : 1
utilize any deadlock -> avoidance : 1
any deadlock avoidance -> thread : 1
deadlock avoidance thread -> thread : 1
avoidance thread thread -> and : 1
thread thread and -> running : 1
thread and running -> the : 1
show that the -> locking : 1
that the locking -> function : 1
the locking function -> scenario : 1
locking function scenario -> works : 1
function scenario works -> and : 1
scenario works and -> both : 1
works and both -> functions : 1
both functions return -> without : 1
functions return without -> blocking : 1
return without blocking -> the : 1
without blocking the -> other : 1
blocking the other -> two : 1
the other two -> functions : 1
other two functions -> run : 1
two functions run -> into : 1
functions run into -> a : 1
can tell that -> this : 1
tell that this -> is : 1
a we see -> the : 1
see the print -> lines : 1
the print lines -> that : 1
print lines that -> tell : 1
lines that tell -> that : 1
that tell that -> the : 1
tell that the -> individual : 1
that the individual -> threads : 1
the individual threads -> try : 1
individual threads try -> to : 1
threads try to -> lock : 1
to lock mutexes -> a : 1
lock mutexes a -> and : 1
mutexes a and -> b : 1
and b and -> then : 1
b and then -> wait : 1
and then wait -> both : 1
and then wait -> for : 1
then wait both -> do : 1
wait both do -> not : 1
both do not -> reach : 1
do not reach -> the : 1
reach the point -> where : 1
point where they -> successfully : 1
where they successfully -> locked : 1
they successfully locked -> both : 1
successfully locked both -> we : 1
locked both we -> can : 1
both we can -> let : 1
we can let -> this : 1
we can let -> the : 1
can let this -> program : 1
let this program -> run : 1
this program run -> for : 1
program run for -> and : 1
run for and -> and : 1
for and and -> will : 1
and will this -> application : 1
will this application -> needs : 1
this application needs -> to : 1
application needs to -> be : 1
to be killed -> from : 1
be killed from -> for : 1
killed from for -> example : 1
from for example -> by : 1
for example by -> pressing : 1
example by pressing -> the : 1
by pressing the -> keys : 1
pressing the keys -> sane : 1
the keys sane -> got : 1
keys sane got -> both : 1
sane got both -> mutexes : 2
got both mutexes -> sane : 1
got both mutexes -> bad : 1
both mutexes sane -> got : 1
mutexes sane got -> both : 1
both mutexes bad -> acquiring : 1
mutexes bad acquiring -> mutex : 1
bad acquiring mutex -> bad : 3
bad acquiring mutex -> it : 1
acquiring mutex bad -> acquiring : 3
mutex bad acquiring -> mutex : 3
acquiring mutex it -> implementing : 1
mutex it implementing -> code : 1
it implementing code -> that : 1
implementing code that -> willfully : 1
code that willfully -> causes : 1
that willfully causes -> a : 1
willfully causes a -> seen : 1
causes a seen -> how : 1
a seen how -> quick : 1
seen how quick -> such : 1
how quick such -> an : 1
quick such an -> unwanted : 1
such an unwanted -> scenario : 1
an unwanted scenario -> can : 1
unwanted scenario can -> in : 1
scenario can in -> a : 1
can in a -> large : 1
in a large -> where : 1
a large where -> multiple : 1
large where multiple -> programmers : 1
where multiple programmers -> write : 1
multiple programmers write -> code : 1
programmers write code -> that : 1
needs to share -> a : 1
share a common -> set : 1
a common set -> of : 1
common set of -> all : 1
set of all -> programmers : 1
of all programmers -> need : 1
all programmers need -> to : 1
programmers need to -> comply : 1
need to comply -> with : 1
to comply with -> the : 1
with the locking -> and : 1
the locking and -> unlocking : 1
locking and unlocking -> while : 1
locking and unlocking -> of : 1
and unlocking while -> such : 1
unlocking while such -> strategies : 1
while such strategies -> or : 1
such strategies or -> rules : 1
strategies or rules -> are : 1
or rules are -> really : 1
rules are really -> easy : 1
are really easy -> to : 1
easy to they -> are : 1
to they are -> also : 1
they are also -> easy : 1
are also easy -> to : 1
easy to another -> term : 1
to another term -> for : 1
another term for -> this : 1
term for this -> problem : 1
for this problem -> is : 1
this problem is -> order : 1
problem is order -> is : 1
is order is -> a : 1
order is a -> real : 1
a real help -> in : 1
real help in -> such : 1
help in such -> it : 1
such it came -> with : 1
with and works -> the : 1
and works the -> same : 1
way as and -> its : 1
as and its -> constructor : 1
constructor and its -> destructor : 1
and its destructor -> the : 1
its destructor the -> unlocking : 1
destructor the unlocking -> of : 1
the unlocking of -> a : 1
unlocking of a -> specialty : 1
of a specialty -> is : 1
a specialty is -> that : 1
specialty is that -> it : 1
this with uses -> the : 1
with uses the -> which : 1
uses the which -> applies : 1
the which applies -> a : 1
applies a special -> algorithm : 1
a special algorithm -> that : 1
special algorithm that -> performs : 1
algorithm that performs -> a : 1
that performs a -> series : 1
performs a series -> of : 1
of calls on -> all : 1
calls on all -> the : 1
calls on all -> its : 1
all the mutexes -> in : 1
the mutexes in -> order : 1
mutexes in order -> to : 1
order to therefore -> it : 1
to therefore it -> is : 1
therefore it is -> perfectly : 1
it is perfectly -> safe : 1
is perfectly safe -> to : 1
perfectly safe to -> use : 1
safe to use -> or : 1
to use or -> call : 1
use or call -> on : 1
or call on -> the : 1
the same set -> of : 1
same set of -> but : 1
set of but -> in : 1
of but in -> different : 1
but in different -> concurrent : 1
in different concurrent -> inconvenience : 1
different concurrent inconvenience -> in : 1
concurrent inconvenience in -> multithreaded : 1
inconvenience in multithreaded -> programs : 1
in multithreaded programs -> is : 1
multithreaded programs is -> that : 1
programs is that -> we : 1
we must practically -> secure : 1
must practically secure -> data : 1
practically secure data -> structure : 1
secure data structure -> they : 1
data structure they -> with : 1
structure they with -> mutexes : 1
they with mutexes -> or : 1
with mutexes or -> other : 1
mutexes or other -> measures : 1
or other measures -> that : 1
other measures that -> protect : 1
measures that protect -> from : 1
that protect from -> data : 1
protect from data -> structure : 1
from data structure -> that : 1
data structure that -> is : 1
that is typically -> used : 1
is typically used -> very : 1
typically used very -> often : 1
used very often -> for : 1
very often for -> printing : 1
often for printing -> is : 1
printing is if -> multiple : 1
is if multiple -> threads : 1
if multiple threads -> access : 1
multiple threads access -> then : 1
threads access then -> the : 1
access then the -> output : 1
then the output -> will : 1
output will appear -> in : 1
appear in interesting -> mixed : 1
in interesting mixed -> patterns : 1
interesting mixed patterns -> on : 1
mixed patterns on -> the : 1
patterns on the -> in : 1
to prevent we -> would : 1
to prevent we -> checked : 1
prevent we would -> need : 1
own function that -> prints : 1
that prints in -> a : 1
prints in a -> are : 1
in a are -> going : 1
a are going -> to : 1
going to learn -> how : 1
how to provide -> a : 1
provide a wrapper -> that : 1
a wrapper that -> consists : 1
wrapper that consists -> of : 1
consists of minimal -> code : 1
of minimal code -> itself : 1
minimal code itself -> and : 1
code itself and -> that : 1
itself and that -> is : 1
that is as -> comfortable : 1
is as comfortable -> to : 1
as comfortable to -> use : 1
comfortable to use -> as : 1
to use as -> to : 1
use as to -> do : 1
as to do -> this : 2
program that prints -> to : 1
that prints to -> the : 1
the terminal concurrently -> from : 1
terminal concurrently from -> many : 1
concurrently from many -> in : 1
from many in -> order : 1
many in order -> to : 1
to prevent garbling -> of : 1
prevent garbling of -> the : 1
garbling of the -> messages : 1
of the messages -> due : 1
the messages due -> to : 1
messages due to -> we : 1
due to we -> implement : 1
to we implement -> a : 1
helper class that -> synchronizes : 1
class that synchronizes -> printing : 1
that synchronizes printing -> between : 1
synchronizes printing between -> the : 1
printing between the -> includes : 1
between the includes -> come : 1
the includes come -> using : 1
includes come using -> namespace : 1
we implement our -> helper : 1
implement our helper -> which : 1
our helper which -> we : 1
call the stands -> for : 1
the stands for -> it : 1
stands for it -> works : 1
for it works -> in : 1
in a synchronized -> way : 1
a synchronized way -> for : 1
synchronized way for -> parallel : 1
way for parallel -> the : 1
for parallel the -> idea : 1
parallel the idea -> is : 1
is that publicly -> inherits : 1
that publicly inherits -> from : 1
publicly inherits from -> this : 1
inherits from this -> way : 1
can use on -> instances : 1
use on instances -> of : 1
instances of as -> soon : 1
of as soon -> as : 1
as a instance -> is : 1
instance is its -> destructor : 1
is its destructor -> locks : 1
its destructor locks -> a : 1
destructor locks a -> mutex : 1
locks a mutex -> and : 1
a mutex and -> then : 1
a mutex and -> print : 1
then prints the -> content : 1
prints the content -> of : 1
the next struct -> pcout : 1
next struct pcout -> public : 1
struct pcout public -> stringstream : 3
pcout public stringstream -> static : 3
pcout public stringstream -> l : 1
public stringstream static -> inline : 3
stringstream static inline -> mutex : 3
static inline mutex -> l : 3
inline mutex l -> cout : 3
mutex l cout -> write : 1
mutex l cout -> producers : 1
mutex l cout -> implement : 1
l cout write -> two : 1
cout write two -> functions : 1
write two functions -> that : 1
two functions that -> can : 1
can be executed -> by : 1
can be executed -> from : 1
can be executed -> on : 1
executed by additional -> both : 1
by additional both -> accept : 1
additional both accept -> a : 1
accept a thread -> id : 1
a thread id -> as : 1
thread id as -> their : 1
id as their -> only : 1
as their only -> difference : 1
their only difference -> is : 1
first one simply -> uses : 1
one simply uses -> for : 1
simply uses for -> the : 1
uses for the -> other : 1
other one looks -> nearly : 1
one looks nearly -> but : 1
looks nearly but -> instead : 1
nearly but instead -> of : 1
but instead of -> using : 1
but instead of -> explicitly : 1
instead of using -> it : 1
of using it -> this : 1
using it this -> instance : 1
it this instance -> is : 1
this instance is -> a : 1
instance is a -> temporary : 1
is a temporary -> object : 1
a temporary object -> that : 1
temporary object that -> lives : 1
object that lives -> only : 1
that lives only -> exactly : 1
lives only exactly -> for : 1
only exactly for -> this : 1
exactly for this -> line : 1
for this line -> of : 1
this line of -> after : 1
line of after -> all : 1
of after all -> calls : 1
after all calls -> have : 1
all calls have -> been : 2
calls have been -> the : 2
have been the -> internal : 1
have been the -> we : 1
been the internal -> string : 1
internal string stream -> is : 1
string stream is -> filled : 1
string stream is -> reduced : 1
stream is filled -> with : 1
is filled with -> what : 1
filled with what -> we : 1
with what we -> want : 1
want to destructor -> is : 1
to destructor is -> we : 1
destructor is we -> have : 1
is we have -> seen : 1
have seen what -> the : 1
seen what the -> destructor : 1
what the destructor -> it : 1
the destructor it -> locks : 1
destructor it locks -> a : 1
it locks a -> specific : 1
it locks a -> globally : 1
locks a specific -> mutex : 1
a specific mutex -> all : 1
specific mutex all -> instances : 1
mutex all instances -> share : 1
all instances share -> static : 1
instances share static -> void : 1
share static void -> cout : 1
void cout hello -> from : 1
cout hello from -> id : 1
hello from id -> static : 1
hello from id -> try : 1
from id static -> void : 1
id static void -> hello : 1
static void hello -> from : 1
void hello from -> id : 1
from id try -> it : 1
id try it -> we : 1
try it we -> are : 1
it we are -> going : 1
to use which -> just : 1
use which just -> uses : 1
which just uses -> for : 1
just uses for -> we : 1
uses for we -> start : 1
for we start -> threads : 1
we start threads -> which : 1
start threads which -> concurrently : 1
start threads which -> all : 1
threads which concurrently -> print : 1
which concurrently print -> their : 1
concurrently print their -> strings : 1
print their strings -> and : 1
their strings and -> wait : 1
strings and wait -> until : 1
and wait until -> they : 1
wait until they -> int : 1
until they int -> for : 1
they int for -> i : 1
i for we -> do : 1
thing with the -> cout : 1
with the cout -> for : 1
the cout for -> i : 1
cout for i -> i : 1
i for and -> running : 1
for and running -> the : 2
we the first -> prints : 1
we the first -> one : 1
the first prints -> are : 1
first prints are -> completely : 1
prints are completely -> this : 1
are completely this -> is : 1
completely this is -> how : 1
it can look -> like : 1
look like when -> is : 1
like when is -> used : 1
when is used -> concurrently : 1
is used concurrently -> without : 1
used concurrently without -> the : 1
concurrently without the -> last : 1
without the last -> lines : 1
lines of the -> program : 1
the program are -> the : 1
program are the -> lines : 1
program are the -> first : 1
are the lines -> which : 1
the lines which -> do : 1
lines which do -> not : 1
which do not -> show : 1
do not show -> any : 1
not show any -> signs : 1
show any signs -> of : 1
any signs of -> we : 1
signs of we -> can : 1
see that they -> are : 1
they are printed -> from : 1
are printed from -> different : 1
printed from different -> their : 1
from different their -> order : 1
different their order -> appears : 1
their order appears -> randomized : 1
order appears randomized -> every : 1
appears randomized every -> time : 1
randomized every time -> when : 1
every time when -> we : 1
time when we -> run : 1
program it built -> this : 1
it built this -> that : 1
built this that -> automatically : 1
this that automatically -> serializes : 1
that automatically serializes -> concurrent : 1
automatically serializes concurrent -> printing : 1
serializes concurrent printing -> how : 1
concurrent printing how -> does : 1
printing how does -> it : 1
does it do -> the : 1
it do the -> same : 1
the same steps -> our : 1
same steps our -> helper : 1
steps our helper -> does : 1
our helper does -> in : 1
helper does in -> manner : 1
does in manner -> without : 1
in manner without -> any : 1
manner without any -> it : 1
without any it -> instantiates : 1
any it instantiates -> a : 1
it instantiates a -> string : 1
instantiates a string -> stream : 2
string stream and -> accepts : 1
string stream and -> we : 1
stream and accepts -> the : 1
and accepts the -> input : 1
accepts the input -> we : 1
input we feed -> into : 1
we feed into -> ss : 1
feed into ss -> is : 1
into ss is -> some : 1
ss is some -> printed : 1
is some printed -> line : 2
some printed line -> it : 1
some printed line -> instantiates : 1
printed line it -> locks : 1
line it locks -> a : 1
locks a globally -> available : 1
globally available l -> this : 1
available l this -> locked : 1
l this locked -> it : 1
this locked it -> accesses : 1
locked it accesses -> the : 1
it accesses the -> content : 1
accesses the content -> of : 1
of string stream -> prints : 1
string stream prints -> and : 1
stream prints and -> releases : 1
prints and releases -> the : 1
and releases the -> mutex : 1
releases the mutex -> again : 1
the mutex again -> by : 1
the mutex again -> because : 1
the mutex again -> and : 1
mutex again by -> leaving : 1
again by leaving -> the : 1
by leaving the -> the : 1
the the line -> tells : 1
the line tells -> the : 1
line tells the -> stream : 1
tells the stream -> object : 1
object to print -> to : 1
terminal without this -> might : 1
without this might -> run : 1
this might run -> faster : 1
might run faster -> because : 1
run faster because -> multiple : 1
faster because multiple -> printed : 1
because multiple printed -> lines : 1
multiple printed lines -> can : 1
printed lines can -> be : 1
lines can be -> bunched : 1
can be bunched -> up : 1
be bunched up -> and : 1
up and printed -> in : 1
and printed in -> a : 1
in a single -> run : 1
a single run -> in : 1
single run in -> our : 1
run in our -> we : 1
our we will -> like : 1
we will like -> to : 1
will like to -> see : 1
like to see -> all : 1
see all output -> lines : 1
all output lines -> so : 1
output lines so -> we : 1
lines so we -> use : 1
use the cout -> this : 1
the cout this -> is : 1
cout this is -> simple : 1
this is simple -> tedious : 1
this is simple -> for : 1
is simple tedious -> to : 1
simple tedious to -> we : 1
tedious to we -> have : 1
have to to -> the : 1
again and we -> can : 1
again and we -> have : 1
we can shorten -> down : 1
can shorten down -> the : 1
shorten down the -> as : 1
down the as -> is : 1
the as is -> some : 1
as is some -> printed : 1
printed line instantiates -> a : 1
line instantiates a -> string : 1
string stream feeds -> everything : 1
stream feeds everything -> we : 1
feeds everything we -> want : 1
everything we want -> to : 1
to print into -> it : 1
print into it -> and : 1
into it and -> then : 1
into it and -> sum : 1
into it and -> summarize : 1
into it and -> calls : 1
and then destructs -> it : 1
then destructs it -> the : 1
destructs it the -> lifetime : 1
it the lifetime -> of : 1
the lifetime of -> the : 2
lifetime of the -> string : 1
lifetime of the -> futures : 1
the string stream -> is : 1
stream is reduced -> to : 1
reduced to just -> this : 1
to just this -> we : 1
we cannot print -> it : 1
cannot print it -> any : 1
print it any -> because : 1
it any because -> we : 1
any because we -> cannot : 1
because we cannot -> access : 1
cannot access which -> code : 1
access which code -> is : 1
which code is -> the : 1
is the last -> that : 1
the last that -> is : 1
last that is -> able : 1
that is able -> to : 1
able to access -> the : 1
is the destructor -> of : 1
destructor of cannot -> modify : 1
of cannot modify -> member : 1
cannot modify member -> but : 1
modify member but -> we : 1
member but we -> can : 1
we can extend -> them : 1
can extend them -> by : 1
extend them by -> wrapping : 1
them by wrapping -> our : 1
by wrapping our -> own : 1
wrapping our own -> type : 1
our own type -> around : 1
own type around -> it : 1
type around it -> via : 1
around it via -> pcout : 1
it via pcout -> public : 1
via pcout public -> stringstream : 1
public stringstream l -> cout : 1
stringstream l cout -> class : 1
l cout class -> a : 1
cout class a -> string : 1
class a string -> stream : 1
it like any -> other : 1
any other string -> the : 1
other string the -> only : 1
string the only -> difference : 1
it will lock -> a : 1
will lock a -> mutex : 1
lock a mutex -> and : 1
mutex and print -> its : 1
print its own -> buffer : 1
its own buffer -> using : 1
own buffer using -> also : 1
buffer using also -> moved : 1
using also moved -> the : 1
also moved the -> object : 1
moved the object -> into : 1
the object into -> struct : 1
object into struct -> a : 1
into struct a -> static : 1
struct a static -> instance : 1
a static instance -> so : 1
static instance so -> we : 1
instance so we -> have : 1
we have both -> bundled : 1
have both bundled -> in : 1
both bundled in -> one : 1
bundled in one -> postponing : 1
in one postponing -> initialization : 1
one postponing initialization -> with : 1
initialization with we -> have : 1
we have specific -> code : 1
have specific code -> sections : 1
specific code sections -> that : 1
sections that can -> be : 1
run in by -> multiple : 1
in by multiple -> threads : 1
by multiple threads -> with : 1
multiple threads with -> the : 1
multiple threads with -> exactly : 1
threads with the -> obligation : 1
with the obligation -> that : 1
the obligation that -> some : 1
obligation that some -> must : 1
that some must -> be : 1
some must be -> executed : 1
must be executed -> exactly : 1
be executed exactly -> once : 1
executed exactly once -> before : 1
exactly once before -> executing : 1
once before executing -> the : 1
before executing the -> actual : 1
executing the actual -> a : 1
actual a simple -> solution : 1
a simple solution -> is : 1
simple solution is -> to : 1
solution is to -> just : 1
is to just -> execute : 1
to just execute -> the : 1
just execute the -> function : 1
execute the function -> before : 1
execute the function -> in : 1
execute the function -> this : 1
the function before -> the : 1
function before the -> program : 1
before the program -> enters : 1
the program enters -> a : 1
program enters a -> state : 1
enters a state -> from : 1
a state from -> which : 1
state from which -> can : 1
from which can -> be : 1
be executed from -> time : 1
executed from time -> to : 1
time to drawbacks -> of : 1
to drawbacks of -> such : 1
drawbacks of such -> an : 1
of such an -> approach : 1
such an approach -> are : 1
an approach are -> the : 1
approach are the -> following : 1
following the parallel -> function : 1
the parallel function -> comes : 1
parallel function comes -> from : 1
function comes from -> a : 1
comes from a -> the : 1
from a the -> user : 1
the user must -> not : 1
user must not -> forget : 1
must not forget -> to : 1
not forget to -> call : 1
forget to call -> the : 1
call the setup -> that : 1
the setup that -> does : 1
setup that does -> not : 1
not make the -> library : 1
make the library -> easier : 1
the library easier -> to : 1
library easier to -> the : 1
easier to the -> setup : 1
to the setup -> function : 1
the setup function -> is : 1
setup function is -> expensive : 1
function is expensive -> in : 1
is expensive in -> some : 1
expensive in some -> and : 1
in some and -> it : 1
some and it -> might : 1
and it might -> not : 1
it might not -> even : 1
might not even -> need : 1
executed in case -> the : 1
case the parallel -> functions : 1
the parallel functions -> that : 1
parallel functions that -> need : 1
functions that need -> this : 1
that need this -> setup : 1
need this setup -> are : 1
this setup are -> not : 1
setup are not -> even : 1
not even always -> then : 1
even always then -> we : 1
always then we -> need : 1
we need code -> that : 1
need code that -> decides : 1
code that decides -> to : 1
that decides to -> run : 1
decides to run -> this : 1
to run this -> we : 1
run this we -> will : 1
look at which -> is : 1
at which is -> a : 1
function that solves -> this : 1
that solves this -> problem : 1
solves this problem -> for : 1
this problem for -> us : 1
problem for us -> in : 1
a simple to -> use : 1
to use and -> to : 1
to use and -> classes : 1
use and to -> do : 1
that starts multiple -> threads : 1
starts multiple threads -> with : 1
threads with exactly -> the : 1
with exactly the -> same : 1
the same although -> they : 1
same although they -> are : 1
although they are -> programmed : 1
they are programmed -> to : 1
are programmed to -> execute : 1
programmed to execute -> exactly : 1
to execute exactly -> the : 1
execute exactly the -> same : 1
same our example -> setup : 1
our example setup -> function : 1
example setup function -> will : 1
setup function will -> only : 1
function will only -> be : 1
only be called -> we : 1
be called we -> need : 1
called we need -> to : 1
the necessary using -> namespace : 2
necessary using namespace -> are : 1
necessary using namespace -> using : 1
use we need -> an : 1
need an instance -> of : 1
it is needed -> for : 1
needed for the -> synchronization : 1
for the synchronization -> of : 1
the synchronization of -> all : 1
synchronization of all -> threads : 1
of all threads -> that : 1
all threads that -> use : 1
threads that use -> on : 1
that use on -> a : 1
on a specific -> function : 1
a specific function -> which : 1
specific function which -> must : 1
function which must -> be : 1
which must be -> only : 1
must be only -> executed : 1
be only executed -> once : 1
only executed once -> is : 1
executed once is -> the : 1
once is the -> following : 1
following it just -> prints : 1
it just prints -> a : 1
prints a single -> exclamation : 1
a single exclamation -> static : 1
single exclamation static -> void : 1
exclamation static void -> cout : 1
void cout threads -> will : 1
cout threads will -> execute : 1
threads will execute -> the : 1
will execute the -> print : 1
execute the print -> the : 1
the print the -> first : 1
do is calling -> the : 1
is calling the -> function : 1
calling the function -> through : 1
the function through -> the : 1
function through the -> function : 1
through the function -> needs : 1
the function needs -> the : 1
function needs the -> variable : 1
needs the variable -> we : 1
the variable we -> defined : 1
variable we defined -> it : 1
defined it will -> use : 1
it to orchestrate -> the : 1
to orchestrate the -> static : 1
orchestrate the static -> void : 1
void cout now -> start : 1
cout now start -> threads : 1
now start threads -> which : 1
threads which all -> use : 1
which all use -> the : 1
all use the -> int : 1
use the int -> for : 1
the int for -> i : 1
i for cout -> and : 1
for cout and -> running : 1
see the exclamation -> mark : 1
the exclamation mark -> from : 1
exclamation mark from -> the : 1
mark from the -> then : 1
we see all -> thread : 1
see all thread -> did : 1
all thread did -> not : 1
thread did not -> only : 1
not only make -> sure : 1
only make sure -> that : 1
sure that was -> only : 1
was only called -> it : 1
only called it -> synchronized : 1
called it synchronized -> all : 1
it synchronized all -> so : 1
synchronized all so -> that : 1
all so that -> no : 1
so that no -> id : 1
that no id -> is : 1
no id is -> printed : 1
id is printed -> was : 1
is printed was -> it : 1
printed was it -> works : 1
was it works -> like : 1
works like a -> it : 1
like a it -> maintains : 1
a it maintains -> access : 1
it maintains access -> to : 1
maintains access to -> a : 1
function a callable -> the : 1
a callable the -> first : 1
callable the first -> thread : 1
first thread to -> reach : 1
thread to reach -> it : 1
to reach it -> gets : 1
reach it gets -> to : 1
it gets to -> execute : 1
gets to execute -> the : 1
execute the until -> it : 1
the until it -> has : 1
until it has -> any : 1
it has any -> other : 1
has any other -> thread : 1
other thread that -> reaches : 1
thread that reaches -> the : 1
that reaches the -> line : 1
reaches the line -> is : 1
the line is -> after : 1
the line is -> not : 1
line is after -> the : 1
after the first -> thread : 1
first thread returns -> from : 1
thread returns from -> the : 1
returns from the -> all : 1
from the all -> other : 1
the all other -> threads : 1
all other threads -> are : 1
other threads are -> order : 1
threads are order -> to : 1
are order to -> organize : 1
order to organize -> this : 1
to organize this -> a : 1
organize this a -> variable : 1
this a variable -> is : 1
a variable is -> needed : 1
a variable is -> just : 1
variable is needed -> from : 1
is needed from -> which : 1
needed from which -> the : 1
which the other -> threads : 1
the other threads -> can : 1
other threads can -> determine : 1
threads can determine -> if : 1
can determine if -> they : 1
determine if they -> must : 1
if they must -> wait : 1
they must wait -> and : 1
must wait and -> when : 1
wait and when -> they : 1
and when they -> are : 1
they are released -> this : 1
are released this -> is : 1
released this is -> what : 1
is what our -> every : 1
what our every -> also : 1
our every also -> needs : 1
every also needs -> a : 1
needs a as -> the : 1
a as the -> argument : 1
as the argument -> prepending : 1
the argument prepending -> the : 1
argument prepending the -> function : 1
prepending the function -> that : 1
function that shall -> be : 1
shall be called -> only : 1
be called only -> nice : 1
called only nice -> detail : 1
only nice detail -> if : 1
nice detail if -> it : 1
detail if it -> that : 1
if it that -> the : 1
it that the -> thread : 1
that the thread -> which : 1
the thread which -> is : 1
thread which is -> selected : 1
which is selected -> to : 1
is selected to -> execute : 1
selected to execute -> the : 1
the function in -> because : 1
function in because -> some : 1
in because some -> is : 1
because some is -> then : 1
some is then -> the : 1
next thread is -> allowed : 1
thread is allowed -> to : 1
allowed to execute -> the : 1
function this happens -> in : 1
in the hope -> that : 1
the hope that -> it : 1
hope that it -> will : 1
will not throw -> an : 1
not throw an -> exception : 1
an exception the -> next : 1
exception the next -> the : 1
the next the -> execution : 1
next the execution -> of : 1
background using we -> want : 1
using we want -> some : 1
want some code -> to : 1
some code to -> be : 1
code to be -> executed : 1
executed in the -> we : 1
can simply start -> a : 1
simply start a -> new : 1
thread that executes -> this : 1
thread that executes -> the : 1
that executes this -> while : 1
executes this while -> this : 1
this while this -> we : 1
while this we -> can : 1
something else and -> then : 1
else and then -> wait : 1
then wait for -> the : 1
for the t -> do : 1
the t do -> something : 1
t do something -> else : 1
something else wait -> for : 1
else wait for -> thread : 1
wait for thread -> to : 1
for thread to -> then : 1
thread to then -> the : 1
then the inconvenience -> does : 1
the inconvenience does -> not : 1
inconvenience does not -> give : 1
us the return -> value : 1
value of in -> order : 1
get at we -> need : 1
at we need -> to : 1
function that calls -> stores : 1
that calls stores -> its : 1
calls stores its -> return : 1
stores its return -> value : 1
return value in -> some : 1
value in some -> variable : 1
in some variable -> that : 1
some variable that -> is : 1
variable that is -> also : 1
that is also -> accessible : 1
is also accessible -> for : 1
also accessible for -> the : 1
accessible for the -> first : 1
first thread in -> which : 1
thread in which -> we : 1
which we started -> the : 1
we started the -> new : 1
started the new -> if : 1
the new if -> such : 1
new if such -> situations : 1
if such situations -> occur : 1
such situations occur -> then : 1
situations occur then -> this : 1
occur then this -> represents : 1
then this represents -> quite : 1
this represents quite -> a : 1
represents quite a -> bunch : 1
quite a bunch -> of : 1
a bunch of -> boilerplate : 1
bunch of boilerplate -> code : 1
boilerplate code we -> have : 1
code we have -> to : 1
to write again -> and : 1
write again and -> we : 1
we have can -> do : 1
have can do -> exactly : 1
do exactly this -> job : 1
exactly this job -> for : 1
this job for -> us : 1
job for us -> and : 1
for us and -> not : 1
us and not -> only : 1
not only in -> this : 1
only in this -> we : 1
write a simple -> program : 1
simple program that -> does : 1
program that does -> multiple : 2
that does multiple -> things : 1
that does multiple -> different : 1
does multiple things -> at : 1
multiple things at -> the : 1
things at the -> same : 2
same time using -> asynchronous : 1
time using asynchronous -> function : 1
using asynchronous function -> is : 1
asynchronous function is -> a : 1
bit more powerful -> than : 1
more powerful than -> that : 1
powerful than that -> we : 1
than that we -> will : 1
look at its -> different : 1
at its different -> to : 1
its different to -> do : 1
different to do -> are : 1
does multiple different -> things : 1
multiple different things -> concurrently : 1
different things concurrently -> but : 1
things concurrently but -> instead : 1
concurrently but instead -> of : 1
instead of explicitly -> starting : 1
of explicitly starting -> we : 1
explicitly starting we -> use : 1
starting we use -> and : 1
use and we -> include : 1
all necessary headers -> and : 1
namespace implement three -> functions : 1
implement three functions -> which : 2
three functions which -> have : 1
three functions which -> transform : 1
functions which have -> nothing : 1
which have nothing -> to : 1
have nothing to -> do : 1
do with do -> interesting : 1
with do interesting -> the : 1
do interesting the -> first : 1
first function accepts -> a : 1
string and creates -> a : 1
creates a histogram -> of : 1
histogram of all -> characters : 1
all characters occurring -> within : 1
characters occurring within -> that : 1
occurring within that -> static : 1
within that static -> string : 1
that static string -> for : 1
static string for -> c : 1
string for c -> return : 1
for c return -> second : 1
c return second -> function : 1
return second function -> does : 1
second function does -> also : 1
function does also -> accept : 2
function does also -> first : 1
does also accept -> a : 2
also accept a -> string : 1
also accept a -> function : 1
accept a string -> and : 1
returns a sorted -> copy : 1
a sorted copy -> of : 1
sorted copy of -> static : 1
copy of static -> string : 1
of static string -> return : 1
static string return -> third : 1
static string return -> the : 1
string return third -> one : 1
return third one -> counts : 1
third one counts -> how : 1
one counts how -> many : 1
counts how many -> vowels : 1
how many vowels -> exist : 1
many vowels exist -> within : 1
vowels exist within -> the : 1
exist within the -> string : 1
string it static -> bool : 1
static bool char -> return : 1
bool char return -> static : 1
char return static -> string : 1
return static string -> return : 1
string return the -> main : 1
main we read -> the : 1
input into a -> in : 1
into a in -> order : 1
to not segment -> the : 1
not segment the -> input : 1
segment the input -> into : 1
the input into -> we : 1
input into we -> deactivate : 1
into we deactivate -> this : 1
we deactivate this -> way : 1
deactivate this way -> we : 1
get one large -> no : 1
one large no -> matter : 1
large no matter -> how : 1
matter how much -> white : 1
how much white -> space : 1
much white space -> the : 1
white space the -> input : 1
space the input -> we : 1
we use on -> the : 1
use on the -> resulting : 1
resulting string afterward -> because : 1
string afterward because -> we : 1
afterward because we -> got : 1
because we got -> one : 1
we got one -> string : 1
got one string -> terminating : 1
one string terminating -> character : 1
string terminating character -> too : 1
terminating character too -> much : 1
character too much -> this : 1
too much this -> int : 1
much this int -> string : 1
this int string -> input : 1
int string input -> get : 1
string input get -> the : 1
input get the -> return : 1
get the return -> values : 1
the return values -> from : 2
the return values -> and : 1
functions we implemented -> in : 1
we implemented in -> order : 1
we implemented in -> use : 1
implemented in order -> to : 1
speed the execution -> up : 1
the execution up -> for : 1
execution up for -> very : 1
up for very -> long : 1
for very long -> we : 1
very long we -> launch : 1
long we launch -> them : 1
we launch them -> the : 1
launch them the -> accepts : 1
them the accepts -> a : 1
accepts a a -> and : 1
a and arguments -> for : 1
and arguments for -> that : 1
arguments for that -> we : 1
that we call -> and : 1
call and with -> a : 1
with a policy -> will : 1
a policy will -> see : 1
policy will see -> later : 1
will see later -> what : 1
will see later -> at : 1
see later what -> that : 1
later what that -> all : 1
what that all -> functions : 1
that all functions -> get : 1
all functions get -> the : 1
functions get the -> same : 1
the same input -> string : 1
same input string -> as : 1
string as auto -> hist : 1
as auto hist -> auto : 1
auto hist auto -> auto : 1
hist auto auto -> calls : 1
hist auto auto -> for : 2
auto auto calls -> return : 1
auto calls return -> they : 1
calls return they -> do : 1
return they do -> not : 1
not actually execute -> our : 1
actually execute our -> they : 1
execute our they -> set : 1
our they set -> up : 1
they set up -> synchronization : 1
set up synchronization -> structures : 1
up synchronization structures -> which : 1
synchronization structures which -> will : 1
structures which will -> obtain : 1
which will obtain -> the : 1
will obtain the -> results : 1
obtain the results -> of : 1
results of the -> function : 1
function calls the -> results : 1
calls the results -> are : 1
the results are -> calculated : 1
results are calculated -> concurrently : 1
are calculated concurrently -> by : 1
calculated concurrently by -> in : 1
concurrently by in -> the : 1
by in the -> we : 1
we are free -> to : 1
are free to -> do : 1
are free to -> consume : 1
free to do -> whatever : 1
to do whatever -> we : 1
do whatever we -> as : 1
whatever we as -> we : 1
we as we -> can : 1
we can pick -> up : 1
can pick up -> those : 1
pick up those -> values : 1
up those values -> the : 1
those values the -> return : 1
values the return -> values : 1
return values and -> of : 1
values and of -> the : 1
types the functions -> and : 1
the functions and -> but : 1
the functions and -> and : 1
the functions and -> classes : 1
functions and but -> they : 1
and but they -> in : 1
but they in -> a : 1
they in a -> type : 1
in a type -> by : 1
a type by -> objects : 1
type by objects -> of : 1
by objects of -> this : 1
objects of this -> type : 1
this type express -> that : 1
type express that -> they : 1
express that they -> will : 1
that they will -> contain : 1
they will contain -> their : 1
will contain their -> values : 1
contain their values -> at : 1
their values at -> some : 1
values at some -> point : 1
at some point -> in : 1
some point in -> by : 1
point in by -> using : 1
in by using -> on : 1
by using on -> all : 1
using on all -> of : 1
on all of -> we : 1
all of we -> can : 1
main function block -> until : 1
function block until -> the : 1
block until the -> values : 1
until the values -> and : 1
values and then -> use : 1
then use them -> for : 1
use them for -> for : 1
them for for -> auto : 1
for for auto -> cout : 1
auto cout c -> count : 3
cout c count -> cout : 3
c count cout -> and : 1
c count cout -> cout : 1
c count cout -> returns : 1
count cout and -> running : 1
the code looks -> like : 1
code looks like -> the : 1
like the we -> use : 1
use a short -> example : 1
a short example -> string : 1
short example string -> that : 1
example string that -> does : 1
string that does -> not : 1
not really make -> it : 1
really make it -> worth : 1
make it worth -> being : 1
it worth being -> but : 1
worth being but -> for : 1
being but for -> the : 1
of this the -> code : 1
this the code -> is : 1
code is nevertheless -> executed : 1
is nevertheless executed -> the : 1
nevertheless executed the -> overall : 1
executed the overall -> structure : 1
the overall structure -> of : 1
overall structure of -> the : 1
structure of the -> program : 1
the program did -> not : 1
not change much -> compared : 1
change much compared -> to : 1
much compared to -> a : 1
compared to a -> naive : 1
to a naive -> sequential : 1
a naive sequential -> version : 1
naive sequential version -> of : 1
sequential version of -> echo : 1
version of echo -> bar : 1
of echo bar -> baz : 1
echo bar baz -> sorted : 1
bar baz sorted -> total : 1
baz sorted total -> it : 1
sorted total it -> we : 1
total it we -> would : 1
it we would -> not : 1
would not have -> used : 1
not have used -> the : 1
have used the -> serial : 1
used the serial -> unparallelized : 1
the serial unparallelized -> code : 1
serial unparallelized code -> could : 1
unparallelized code could -> have : 1
code could have -> looked : 1
could have looked -> as : 1
have looked as -> simple : 1
looked as simple -> as : 1
simple as hist -> auto : 1
as hist auto -> auto : 1
count cout cout -> only : 1
cout cout only -> thing : 1
cout only thing -> we : 1
did in order -> to : 1
order to parallelize -> the : 1
order to parallelize -> order : 1
to parallelize the -> code : 1
parallelize the code -> was : 1
the code was -> the : 1
code was the -> we : 1
was the we -> wrapped : 1
the we wrapped -> the : 1
wrapped the three -> function : 1
the three function -> calls : 1
three function calls -> into : 1
function calls into -> this : 1
calls into this -> way : 1
into this way -> these : 1
into this way -> we : 1
this way these -> three : 1
way these three -> functions : 1
these three functions -> are : 1
three functions are -> not : 1
functions are not -> executed : 1
are not executed -> by : 1
not executed by -> the : 1
by the main -> thread : 1
main thread we -> are : 1
thread we are -> currently : 1
are currently running -> starts : 1
currently running starts -> new : 1
running starts new -> threads : 1
starts new threads -> and : 1
new threads and -> lets : 1
threads and lets -> them : 1
and lets them -> execute : 1
lets them execute -> the : 1
them execute the -> functions : 1
execute the functions -> this : 1
the functions this -> way : 1
functions this way -> we : 1
get to execute -> only : 1
to execute only -> the : 1
execute only the -> overhead : 1
only the overhead -> of : 1
the overhead of -> starting : 1
overhead of starting -> another : 1
of starting another -> can : 1
starting another can -> continue : 1
another can continue -> with : 1
can continue with -> the : 1
continue with the -> next : 1
line of while -> all : 1
of while all -> the : 1
while all the -> work : 1
the work happens -> in : 1
work happens in -> the : 1
in the hist -> auto : 1
the hist auto -> auto : 1
count cout returns -> us : 1
cout returns us -> a : 1
us a map -> does : 1
us a map -> that : 1
a map does -> return : 1
map does return -> us : 1
does return us -> a : 1
map that was -> wrapped : 1
that was wrapped -> in : 1
was wrapped in -> a : 1
wrapped in a -> object : 1
in a object -> this : 1
a object this -> object : 1
object this object -> is : 1
object is kind -> of : 1
of an empty -> until : 1
an empty until -> the : 1
empty until the -> thread : 1
the thread that -> executes : 1
that executes the -> function : 1
executes the function -> the : 1
the resulting map -> is : 1
resulting map is -> then : 1
map is then -> placed : 1
is then placed -> into : 1
then placed into -> the : 1
placed into the -> object : 1
into the object -> so : 1
the object so -> we : 1
object so we -> can : 1
can finally access -> the : 1
finally access the -> function : 1
access the function -> then : 1
function then gives -> us : 1
then gives us -> access : 1
to the encapsulated -> have : 1
the encapsulated have -> a : 1
encapsulated have a -> look : 1
at another minimal -> consider : 1
another minimal consider -> the : 1
minimal consider the -> following : 1
the following code -> x : 1
following code x -> cout : 1
code x cout -> of : 1
x cout of -> preceding : 1
cout of preceding -> we : 1
of preceding we -> can : 1
do the x -> cout : 1
the x cout -> basically : 1
x cout basically -> executing : 1
cout basically executing -> tasks : 1
basically executing tasks -> in : 1
executing tasks in -> the : 1
tasks in the -> background : 1
in the background -> might : 1
the background might -> have : 1
background might have -> never : 1
might have never -> been : 1
have never been -> easier : 1
never been easier -> in : 1
been easier in -> standard : 1
easier in standard -> there : 1
in standard there -> is : 1
is still one -> thing : 1
still one thing -> left : 1
one thing left -> to : 1
thing left to -> what : 1
left to what -> does : 1
what does is -> a : 1
does is a -> flag : 1
is a flag -> that : 1
a flag that -> defines : 1
a flag that -> can : 1
flag that defines -> the : 1
that defines the -> launch : 1
defines the launch -> there : 1
the launch there -> are : 1
launch there are -> two : 1
are two policy -> flags : 1
two policy flags -> which : 1
policy flags which -> allow : 1
flags which allow -> for : 1
which allow for -> function : 1
allow for function -> is : 1
for function is -> guaranteed : 1
function is guaranteed -> to : 1
executed by another -> function : 1
by another function -> is : 1
another function is -> executed : 1
function is executed -> by : 1
is executed by -> the : 1
by the same -> but : 1
same but later -> execution : 1
but later execution -> then : 1
later execution then -> happens : 1
execution then happens -> when : 1
then happens when -> or : 1
happens when or -> is : 1
when or is -> called : 1
or is called -> on : 1
is called on -> the : 1
called on the -> if : 1
the if of -> both : 1
if of both -> the : 1
is not called -> both : 1
not called both -> flags : 1
called both flags -> the : 1
both flags the -> implementation : 1
flags the implementation -> is : 1
the implementation is -> free : 1
implementation is free -> to : 1
is free to -> choose : 1
free to choose -> which : 2
to choose which -> policy : 2
choose which policy -> shall : 1
choose which policy -> to : 1
which policy shall -> be : 1
policy shall be -> this : 1
shall be this -> is : 1
the default no -> policy : 1
default no policy -> is : 1
no policy is -> just : 1
policy is just -> calling : 1
is just calling -> without : 1
just calling without -> a : 1
calling without a -> policy : 1
without a policy -> we : 1
a policy we -> automatically : 1
policy we automatically -> select : 1
we automatically select -> the : 1
automatically select the -> implementation : 1
select the implementation -> of : 1
implementation of is -> then : 1
of is then -> free : 1
is then free -> to : 1
then free to -> choose : 1
which policy to -> this : 1
policy to this -> means : 1
to this means -> that : 1
we cannot be -> that : 1
we cannot be -> sure : 1
cannot be that -> another : 1
be that another -> thread : 1
that another thread -> is : 1
another thread is -> started : 1
thread is started -> at : 1
is started at -> or : 1
started at or -> if : 1
at or if -> the : 1
if the execution -> is : 1
the execution is -> just : 1
execution is just -> deferred : 1
is just deferred -> in : 1
just deferred in -> the : 1
deferred in the -> current : 1
in the current -> is : 1
the current is -> indeed : 1
current is indeed -> one : 1
indeed one last -> thing : 1
one last thing -> we : 1
last thing we -> should : 1
thing we should -> know : 1
should know we -> write : 1
know we write -> might : 1
we write might -> have : 1
write might have -> the : 1
might have the -> motivation : 1
have the motivation -> of : 1
the motivation of -> executing : 1
motivation of executing -> and : 1
of executing and -> do : 1
executing and do -> not : 1
care about their -> return : 1
about their return -> values : 1
this in concurrent -> threads : 1
in concurrent threads -> and : 1
concurrent threads and -> then : 1
threads and then -> doing : 1
and then doing -> different : 1
then doing different -> things : 1
doing different things -> at : 1
different things at -> the : 1
the same while -> running : 1
same while running -> such : 1
while running such -> we : 1
running such we -> will : 1
such we will -> notice : 1
we will notice -> that : 1
will notice that -> the : 1
notice that the -> on : 1
that the on -> this : 1
the on this -> which : 1
which is most -> probably : 1
is most probably -> not : 2
most probably not -> what : 1
most probably not -> designed : 1
probably not what -> we : 1
what we why -> does : 1
we why does -> it : 1
does it all -> about : 1
it all about -> nonblocking : 1
all about nonblocking -> asynchronous : 1
about nonblocking asynchronous -> yes : 1
nonblocking asynchronous yes -> it : 1
asynchronous yes it -> but : 1
yes it but -> there : 1
it but there -> is : 1
is one special -> if : 1
one special if -> a : 1
special if a -> future : 1
if a future -> was : 1
a future was -> obtained : 1
future was obtained -> from : 1
was obtained from -> an : 1
obtained from an -> async : 1
from an async -> call : 1
an async call -> with : 1
async call with -> then : 1
call with then -> its : 1
with then its -> destructor : 1
its destructor performs -> a : 1
destructor performs a -> means : 1
performs a means -> that : 1
a means that -> the : 1
that the async -> calls : 1
the async calls -> from : 1
async calls from -> this : 1
calls from this -> short : 1
from this short -> example : 1
this short example -> are : 1
short example are -> the : 1
example are the -> lifetime : 1
are the lifetime -> of : 1
of the futures -> they : 1
the futures they -> return : 1
futures they return -> ends : 1
they return ends -> in : 1
return ends in -> the : 1
ends in the -> same : 1
we can fix -> this : 1
can fix this -> by : 1
fix this by -> capturing : 1
this by capturing -> their : 1
by capturing their -> return : 1
capturing their return -> values : 1
values in variables -> with : 1
in variables with -> a : 1
variables with a -> longer : 1
with a longer -> the : 1
a longer the -> idiom : 1
longer the idiom -> with : 1
idiom with this -> we : 1
implement a typical -> program : 1
a typical program -> with : 1
typical program with -> multiple : 1
program with multiple -> the : 1
with multiple the -> general : 1
multiple the general -> idea : 1
the general idea -> is : 1
general idea is -> that : 1
is that there -> is : 1
is one thread -> that : 1
one thread that -> produces : 1
thread that produces -> items : 1
that produces items -> and : 1
produces items and -> puts : 1
items and puts -> them : 2
and puts them -> into : 2
puts them into -> a : 2
them into a -> then : 1
them into a -> the : 1
a then there -> is : 1
is another thread -> that : 1
another thread that -> consumes : 1
thread that consumes -> such : 1
that consumes such -> if : 1
consumes such if -> there : 1
such if there -> is : 1
is nothing to -> the : 1
nothing to the -> producer : 1
to the producer -> thread : 1
the producer thread -> if : 1
the producer thread -> is : 2
producer thread if -> there : 1
thread if there -> is : 1
is no item -> in : 2
no item in -> the : 2
in the queue -> to : 1
in the queue -> and : 2
the queue to -> the : 1
queue to the -> consumer : 1
to the consumer -> the : 1
to the consumer -> function : 1
the consumer the -> queue : 1
the consumer the -> one : 1
consumer the queue -> that : 1
the queue that -> both : 1
queue that both -> threads : 1
that both threads -> have : 1
that both threads -> manipulate : 1
both threads have -> access : 1
threads have access -> to : 1
have access to -> is : 1
access to is -> also : 1
to is also -> modified : 1
is also modified -> by : 1
also modified by -> both : 1
modified by both -> whenever : 1
by both whenever -> an : 1
both whenever an -> item : 1
whenever an item -> is : 1
item is produced -> or : 1
is produced or -> it : 1
produced or it -> needs : 1
or it needs -> to : 1
to be protected -> by : 1
be protected by -> a : 1
protected by a -> thing : 1
by a thing -> to : 1
a thing to -> consider : 1
thing to consider -> what : 1
to consider what -> does : 1
consider what does -> the : 1
does the consumer -> there : 1
the consumer there -> is : 1
consumer there is -> no : 1
the does it -> poll : 1
does it poll -> the : 1
it poll the -> queue : 1
poll the queue -> every : 1
the queue every -> second : 1
queue every second -> until : 1
every second until -> it : 1
second until it -> sees : 1
it sees new -> that : 1
sees new that -> is : 1
new that is -> not : 1
can let the -> consumer : 1
let the consumer -> wait : 1
let the consumer -> threads : 1
the consumer wait -> for : 1
consumer wait for -> wakeup : 1
wait for wakeup -> that : 1
for wakeup that -> are : 1
wakeup that are -> the : 1
that are the -> whenever : 1
are the whenever -> there : 1
the whenever there -> are : 1
whenever there are -> new : 1
there are new -> provides : 1
there are new -> items : 2
are new provides -> a : 1
new provides a -> nice : 1
provides a nice -> data : 1
a nice data -> structure : 1
nice data structure -> called : 1
data structure called -> for : 1
structure called for -> this : 1
called for this -> kind : 1
for this kind -> of : 1
kind of in -> this : 1
a simple app -> that : 1
simple app that -> takes : 1
app that takes -> advantage : 1
that takes advantage -> of : 1
takes advantage of -> to : 1
advantage of to -> do : 1
simple program which -> runs : 1
program which runs -> a : 1
which runs a -> single : 1
runs a single -> producer : 1
a single producer -> of : 1
single producer of -> values : 1
producer of values -> in : 1
of values in -> its : 1
in its own -> as : 1
its own as -> well : 1
own as well -> as : 1
well as a -> single : 1
well as a -> object : 1
a single consumer -> thread : 1
single consumer thread -> in : 1
consumer thread in -> another : 1
thread in another -> we : 1
another we need -> to : 1
to perform all -> the : 1
to perform all -> calls : 1
perform all the -> needed : 1
the needed using -> namespace : 1
needed using namespace -> using : 1
using namespace instantiate -> a : 1
namespace instantiate a -> queue : 1
instantiate a queue -> of : 1
a queue of -> simple : 1
queue of simple -> numeric : 1
of simple numeric -> values : 1
simple numeric values -> and : 1
numeric values and -> call : 1
values and call -> it : 1
call it the -> producer : 1
it the producer -> will : 1
the producer will -> push : 1
producer will push -> values : 1
will push values -> into : 1
push values into -> and : 1
values into and -> the : 1
into and the -> consumer : 1
and the consumer -> will : 1
the consumer will -> take : 1
consumer will take -> values : 1
will take values -> out : 1
take values out -> of : 2
out of in -> order : 1
order to synchronize -> we : 1
to synchronize we -> need : 1
synchronize we need -> a : 1
a in addition -> to : 1
to we instantiate -> a : 1
instantiate a the -> variable : 1
a the variable -> will : 1
the variable will -> be : 1
variable will be -> the : 1
be the way -> to : 1
way to tell -> the : 1
tell the consumer -> that : 1
the consumer that -> no : 1
consumer that no -> more : 1
that no more -> values : 1
no more values -> will : 1
more values will -> mutex : 1
values will mutex -> bool : 1
will mutex bool -> finished : 1
mutex bool finished -> first : 1
mutex bool finished -> variable : 1
bool finished first -> implement : 1
finished first implement -> the : 1
first implement the -> producer : 1
implement the producer -> it : 1
the producer it -> accepts : 1
producer it accepts -> an : 1
accepts an argument -> which : 1
an argument which -> limits : 1
argument which limits -> the : 1
which limits the -> maximum : 1
limits the maximum -> number : 1
of items for -> in : 1
items for in -> a : 1
for in a -> simple : 1
a simple it -> will : 1
simple it will -> sleep : 1
it will sleep -> milliseconds : 1
will sleep milliseconds -> for : 1
sleep milliseconds for -> every : 1
milliseconds for every -> which : 1
for every which -> simulates : 1
every which simulates -> some : 1
which simulates some -> computational : 1
simulates some computational -> then : 1
some computational then -> we : 1
computational then we -> lock : 1
then we lock -> the : 1
we lock the -> mutex : 2
the mutex that -> synchronizes : 1
the mutex that -> protects : 2
mutex that synchronizes -> access : 1
that synchronizes access -> to : 1
synchronizes access to -> the : 1
to the after -> successful : 1
the after successful -> production : 1
after successful production -> and : 1
successful production and -> insertion : 1
production and insertion -> to : 1
and insertion to -> the : 1
insertion to the -> we : 1
the we this -> function : 1
we this function -> wakes : 1
this function wakes -> the : 1
function wakes the -> consumer : 1
wakes the consumer -> we : 1
the consumer we -> will : 1
consumer we will -> see : 1
see later at -> the : 1
later at the -> consumer : 1
at the consumer -> side : 1
the consumer side -> how : 1
consumer side how -> this : 1
side how this -> static : 1
how this static -> void : 1
static void for -> i : 2
void for i -> i : 2
i i lk -> having : 1
i lk having -> produced : 1
lk having produced -> all : 1
having produced all -> we : 1
produced all we -> lock : 1
all we lock -> the : 1
mutex again because -> we : 1
again because we -> are : 1
to change to -> set : 1
change to set -> the : 1
set the then -> we : 1
we call lk -> finished : 1
call lk finished -> we : 1
lk finished we -> can : 1
finished we can -> implement : 1
can implement the -> consumer : 1
implement the consumer -> it : 1
the consumer it -> takes : 1
consumer it takes -> no : 1
takes no it -> will : 1
no it will -> blindly : 1
it will blindly -> consume : 1
will blindly consume -> until : 1
blindly consume until -> the : 1
consume until the -> queue : 1
until the queue -> runs : 1
until the queue -> contains : 1
the queue runs -> in : 1
the queue runs -> empty : 1
queue runs in -> a : 1
runs in a -> loop : 1
in a loop -> that : 1
loop that is -> executed : 1
that is executed -> as : 1
is executed as -> long : 1
executed as long -> as : 1
long as is -> not : 1
as is not -> it : 1
not it will -> first : 1
it will first -> lock : 1
will first lock -> the : 1
first lock the -> mutex : 1
mutex that protects -> both : 2
mutex that protects -> the : 1
that protects both -> the : 2
protects both the -> queue : 2
both the queue -> and : 2
the queue and -> the : 2
the queue and -> stops : 1
the queue and -> after : 1
the queue and -> a : 1
the queue and -> then : 1
the queue and -> signal : 1
the queue and -> want : 1
queue and the -> as : 1
queue and the -> we : 1
and the as -> soon : 1
the as soon -> as : 1
soon as it -> has : 1
has the it -> calls : 1
the it calls -> with : 1
it calls with -> the : 1
with the lock -> and : 1
lock and a -> lambda : 1
expression as the -> lambda : 1
as the lambda -> expression : 1
expression is a -> predicate : 1
a predicate that -> tells : 1
predicate that tells -> if : 1
tells if the -> producer : 1
if the producer -> thread : 2
if the producer -> is : 1
producer thread is -> still : 1
producer thread is -> inactive : 1
is still alive -> and : 1
alive and if -> there : 1
and if there -> is : 1
there is anything -> to : 1
is anything to -> consume : 1
anything to consume -> in : 1
to consume in -> the : 1
consume in the -> static : 1
in the static -> void : 1
static void while -> l : 1
static void while -> locking : 1
void while l -> return : 1
while l return -> the : 1
l return the -> lock : 1
return the lock -> and : 1
lock and waits -> until : 1
and waits until -> the : 1
waits until the -> condition : 1
until the condition -> described : 1
the condition described -> by : 1
condition described by -> the : 1
described by the -> predicate : 1
predicate function it -> locks : 1
function it locks -> the : 1
it locks the -> mutex : 1
it locks the -> common : 1
mutex again and -> consumes : 1
again and consumes -> everything : 1
and consumes everything -> from : 1
consumes everything from -> the : 1
everything from the -> queue : 1
from the queue -> until : 1
from the queue -> and : 1
the queue until -> it : 1
queue until it -> appears : 1
until it appears -> if : 1
it appears if -> the : 1
appears if the -> producer : 1
the producer is -> still : 2
producer is still -> it : 1
producer is still -> the : 1
still it will -> iterate : 1
through the loop -> it : 1
loop it will -> terminate : 1
it will terminate -> because : 1
will terminate because -> is : 1
terminate because is -> which : 1
because is which -> is : 1
is the way -> to : 1
way to signal -> that : 1
to signal that -> there : 1
signal that there -> are : 1
are no being -> while : 1
no being while -> cout : 1
being while cout -> from : 1
while cout from -> the : 1
cout from the -> main : 1
from the main -> we : 1
we start a -> producer : 1
start a producer -> thread : 1
a producer thread -> which : 1
producer thread which -> produces : 1
thread which produces -> and : 1
which produces and -> a : 1
produces and a -> consumer : 1
and a consumer -> then : 1
a consumer then -> we : 1
consumer then we -> wait : 1
then we wait -> until : 1
we wait until -> their : 1
wait until their -> completion : 1
until their completion -> and : 1
their completion and -> terminate : 1
completion and terminate -> the : 1
and terminate the -> int : 1
terminate the int -> thread : 1
the int thread -> thread : 1
thread thread cout -> and : 1
thread cout and -> running : 1
the following when -> the : 1
following when the -> program : 1
program is we -> can : 1
see that there -> is : 1
is some time -> between : 1
some time between -> each : 1
time between each -> because : 1
between each because -> the : 1
each because the -> production : 1
because the production -> of : 1
the production of -> items : 1
production of items -> takes : 1
of items takes -> some : 1
items takes some -> got : 1
items takes some -> producer : 1
takes some got -> from : 1
some got from -> got : 1
got from got -> from : 9
from got from -> got : 8
from got from -> it : 1
from it this -> we : 1
this we simply -> started : 1
we simply started -> two : 1
simply started two -> the : 1
started two the -> first : 1
two the first -> items : 1
the first items -> and : 1
first items and -> puts : 1
into a the -> other : 1
a the other -> takes : 1
the other takes -> items : 1
other takes items -> out : 1
takes items out -> of : 1
takes items out -> the : 1
of the whenever -> one : 1
the whenever one -> of : 1
whenever one of -> those : 1
of those threads -> touches : 1
those threads touches -> the : 1
threads touches the -> queue : 1
touches the queue -> in : 1
the queue in -> any : 1
queue in any -> it : 1
in any it -> locks : 1
any it locks -> the : 1
locks the common -> is : 1
the common is -> accessible : 1
common is accessible -> for : 1
is accessible for -> this : 1
accessible for this -> way : 1
for this way -> we : 2
way we made -> sure : 1
we made sure -> that : 1
made sure that -> it : 1
sure that it -> cannot : 1
that it cannot -> happen : 1
it cannot happen -> that : 1
cannot happen that -> both : 1
happen that both -> threads : 1
both threads manipulate -> the : 1
threads manipulate the -> state : 1
manipulate the state -> at : 1
the state at -> the : 1
state at the -> same : 1
the same from -> the : 1
same from the -> queue : 1
the we declared -> generally : 1
we declared generally -> four : 1
declared generally four -> variables : 1
generally four variables -> that : 1
four variables that -> were : 1
variables that were -> involved : 1
that were involved -> in : 1
were involved in -> the : 1
involved in the -> mutex : 1
the mutex bool -> finished : 1
bool finished variable -> is : 1
finished variable is -> easy : 1
variable is easy -> to : 1
easy to it -> was : 1
to it was -> set : 1
it was set -> to : 1
was set to -> when : 1
set to when -> the : 1
to when the -> producer : 1
when the producer -> finished : 1
the producer finished -> producing : 1
producer finished producing -> its : 1
finished producing its -> fixed : 1
producing its fixed -> amount : 1
its fixed amount -> of : 1
fixed amount of -> when : 1
amount of when -> the : 1
of when the -> consumer : 1
when the consumer -> sees : 1
the consumer sees -> that : 1
consumer sees that -> this : 1
sees that this -> variable : 1
that this variable -> is : 1
this variable is -> it : 1
variable is it -> consumes : 1
is it consumes -> the : 1
it consumes the -> last : 1
consumes the last -> items : 1
the last items -> in : 1
last items in -> the : 1
queue and stops -> but : 1
and stops but -> what : 1
stops but what -> is : 1
but what is -> the : 1
the we used -> in : 1
used in two -> different : 1
of the contexts -> was : 1
the contexts was -> for : 1
contexts was for -> a : 1
was for a -> specific : 1
specific and the -> other : 1
was that consumer -> side : 1
that consumer side -> that : 1
consumer side that -> waits : 1
side that waits -> for : 1
that waits for -> a : 1
waits for a -> specific : 1
a specific condition -> looks : 1
specific condition looks -> like : 1
condition looks like -> the : 1
like the consumer -> thread : 1
the consumer thread -> loops : 1
consumer thread loops -> over : 1
thread loops over -> a : 1
loops over a -> block : 1
over a block -> that : 1
a block that -> first : 1
block that first -> locks : 1
that first locks -> mutex : 1
first locks mutex -> in : 1
locks mutex in -> a : 1
mutex in a -> then : 1
then it calls -> l : 1
it calls l -> return : 1
calls l return -> while : 1
l return while -> consume : 1
return while consume -> code : 1
while consume code -> is : 1
consume code is -> equivalent : 1
code is equivalent -> to : 1
is equivalent to -> the : 1
the following alternative -> we : 1
following alternative we -> will : 1
alternative we will -> elaborate : 1
we will elaborate -> soon : 1
will elaborate soon -> why : 1
elaborate soon why -> it : 1
soon why it -> is : 1
not really the -> l : 1
really the l -> while : 1
the l while -> while : 1
l while while -> consume : 1
while while consume -> means : 1
while consume means -> that : 1
consume means that -> we : 1
that we generally -> first : 1
we generally first -> acquire : 1
generally first acquire -> the : 1
first acquire the -> lock : 1
acquire the lock -> and : 1
lock and then -> check : 1
and then check -> what : 1
then check what -> there : 1
check what there -> items : 1
what there items -> to : 1
there items to -> then : 1
items to then -> keep : 1
to then keep -> the : 1
then keep the -> release : 1
keep the release -> the : 1
the release the -> and : 1
release the and -> start : 1
the and start -> if : 1
and start if -> there : 1
start if there -> are : 1
there are consumable -> the : 1
are consumable the -> producer : 1
consumable the producer -> is : 1
still the mutex -> to : 1
the mutex to -> give : 1
mutex to give -> the : 1
give the producer -> a : 1
the producer a -> chance : 1
producer a chance -> of : 1
a chance of -> adding : 1
chance of adding -> items : 1
of adding items -> to : 1
adding items to -> the : 1
to the try -> to : 1
the try to -> lock : 1
lock it again -> in : 1
again in hope -> that : 1
in hope that -> the : 1
hope that the -> situation : 1
that the situation -> changes : 1
the situation changes -> and : 1
situation changes and -> we : 1
changes and we -> get : 1
get to see -> situation : 1
to see situation -> real : 1
see situation real -> reason : 1
situation real reason -> why : 1
real reason why -> the : 1
why the line -> is : 1
is not equivalent -> to : 1
not equivalent to -> the : 1
to the construct -> that : 1
the construct that -> we : 1
construct that we -> cannot : 1
we cannot over -> a : 1
cannot over a -> if : 1
over a if -> the : 1
thread is inactive -> for : 1
is inactive for -> some : 1
inactive for some -> then : 1
for some then -> this : 1
some then this -> would : 1
lead to continuous -> locking : 1
to continuous locking -> and : 1
continuous locking and -> unlocking : 1
and unlocking of -> the : 1
unlocking of the -> which : 1
which makes no -> sense : 1
makes no sense -> because : 1
no sense because -> it : 1
sense because it -> needlessly : 1
because it needlessly -> burns : 1
it needlessly burns -> cpu : 1
needlessly burns cpu -> expression : 1
burns cpu expression -> like : 1
cpu expression like -> will : 1
expression like will -> wait : 1
like will wait -> until : 1
will wait until -> returns : 1
wait until returns -> but : 1
until returns but -> it : 1
returns but it -> does : 1
does not do -> this : 1
not do this -> by : 1
this by continuously -> unlocking : 1
by continuously unlocking -> and : 1
continuously unlocking and -> locking : 1
unlocking and locking -> in : 1
and locking in -> order : 1
locking in order -> to : 1
order to wake -> a : 1
to wake a -> thread : 1
wake a thread -> up : 1
a thread up -> that : 1
thread up that -> blocks : 1
up that blocks -> on : 1
that blocks on -> the : 1
blocks on the -> call : 1
blocks on the -> line : 1
on the call -> of : 1
call of a -> another : 1
of a another -> thread : 1
a another thread -> has : 1
another thread has -> to : 1
thread has to -> call : 1
has to call -> the : 1
call the or -> method : 1
the or method -> on : 1
or method on -> the : 1
method on the -> same : 1
method on the -> canonicalized : 1
the same only -> then : 1
same only then -> the : 1
only then the -> waiting : 1
then the waiting -> kicked : 1
the waiting kicked -> out : 1
waiting kicked out -> of : 1
kicked out of -> their : 1
out of their -> sleep : 1
of their sleep -> in : 1
their sleep in -> order : 1
sleep in order -> to : 1
check if nice -> thing : 1
if nice thing -> about : 1
thing about the -> call : 1
thing about the -> class : 1
about the call -> checking : 1
the call checking -> the : 1
call checking the -> predicate : 1
checking the predicate -> is : 1
the predicate is -> that : 1
predicate is that -> if : 1
is a wakeup -> the : 1
a wakeup the -> thread : 1
wakeup the thread -> will : 1
thread will go -> to : 1
will go to -> sleep : 1
go to sleep -> immediately : 1
go to sleep -> from : 1
go to sleep -> if : 1
go to sleep -> as : 1
to sleep immediately -> this : 1
sleep immediately this -> means : 1
immediately this means -> that : 1
not really harm -> the : 1
really harm the -> program : 1
harm the program -> flow : 1
the program flow -> maybe : 1
program flow maybe -> the : 1
flow maybe the -> if : 1
maybe the if -> we : 1
we have too -> many : 1
have too many -> notify : 1
too many notify -> the : 1
many notify the -> producer : 1
notify the producer -> we : 1
the producer we -> just : 1
the producer we -> also : 1
producer we just -> called : 1
we just called -> after : 1
just called after -> the : 1
called after the -> producer : 1
after the producer -> inserted : 1
the producer inserted -> an : 1
producer inserted an -> item : 1
inserted an item -> to : 1
an item to -> the : 1
to the queue -> and : 1
queue and after -> it : 1
after it produced -> its : 1
it produced its -> last : 1
produced its last -> item : 1
its last item -> and : 1
last item and -> set : 1
item and set -> the : 1
set the flag -> to : 1
the flag to -> this : 1
flag to this -> was : 1
to this was -> enough : 1
this was enough -> to : 1
was enough to -> direct : 1
enough to direct -> the : 1
to direct the -> the : 1
direct the the -> multiple : 1
the the multiple -> idiom : 1
idiom with pick -> up : 1
with pick up -> the : 1
pick up the -> problem : 1
up the problem -> from : 1
the problem from -> the : 1
problem from the -> last : 1
the last recipe -> and : 1
last recipe and -> make : 1
recipe and make -> it : 1
it a bit -> more : 2
more we make -> producers : 1
we make producers -> produce : 1
make producers produce -> items : 1
producers produce items -> and : 1
produce items and -> consumers : 1
items and consumers -> consume : 1
and consumers consume -> in : 1
consumers consume in -> addition : 1
consume in addition -> to : 1
define that the -> queue : 1
that the queue -> shall : 1
that the queue -> size : 1
that the queue -> is : 4
that the queue -> maximum : 1
the queue shall -> not : 1
queue shall not -> exceed : 1
shall not exceed -> a : 1
not exceed a -> maximum : 1
exceed a maximum -> not : 1
a maximum not -> only : 1
maximum not only -> the : 1
not only the -> consumers : 2
only the consumers -> have : 1
only the consumers -> go : 1
the consumers have -> to : 1
consumers have to -> sleep : 1
have to sleep -> from : 2
to sleep from -> time : 3
sleep from time -> to : 3
time to time -> if : 1
time to time -> when : 1
to time if -> there : 1
time if there -> are : 1
are no items -> in : 1
are no items -> for : 1
no items in -> the : 1
also the producers -> have : 1
also the producers -> go : 1
the producers have -> to : 1
producers have to -> sleep : 1
to time when -> there : 1
time when there -> are : 1
there are items -> in : 1
are items in -> the : 1
in the are -> going : 1
the are going -> to : 1
this problem with -> multiple : 1
problem with multiple -> objects : 1
with multiple objects -> and : 1
multiple objects and -> will : 1
objects and will -> also : 1
and will also -> use : 1
will also use -> them : 1
also use them -> in : 1
them in slightly -> different : 1
in slightly different -> ways : 1
slightly different ways -> than : 1
different ways than -> in : 1
ways than in -> the : 1
than in the -> last : 1
the last to -> do : 1
last to do -> this : 1
a program just -> like : 1
program just like -> in : 1
the recipe but -> this : 1
recipe but this -> time : 1
this time with -> multiple : 1
this time with -> the : 1
time with multiple -> producers : 1
with multiple producers -> and : 1
multiple producers and -> multiple : 1
producers and multiple -> we : 1
and multiple we -> need : 1
multiple we need -> to : 1
headers and we -> declare : 2
implement the synchronized -> printing : 1
the synchronized printing -> helper : 1
synchronized printing helper -> from : 1
printing helper from -> the : 1
helper from the -> other : 2
the other recipe -> in : 2
other recipe in -> this : 2
this chapter because -> we : 1
chapter because we -> are : 1
going to do -> a : 1
lot of concurrent -> struct : 1
of concurrent struct -> pcout : 1
concurrent struct pcout -> public : 1
l cout producers -> write : 1
cout producers write -> values : 1
producers write values -> into : 1
write values into -> the : 1
into the same -> queue : 1
the same queue -> and : 1
the same queue -> to : 1
same queue and -> all : 1
queue and all -> consumers : 1
and all consumers -> will : 1
all consumers will -> also : 1
consumers will also -> take : 1
will also take -> values : 1
also take values -> out : 1
of this in -> addition : 1
this in addition -> to : 1
addition to that -> we : 1
to that we -> need : 1
to that we -> concatenate : 1
to that we -> follow : 1
to that we -> could : 1
need a mutex -> that : 1
queue and a -> flag : 1
and a flag -> that : 1
flag that can -> the : 1
that can the -> production : 1
can the production -> was : 1
the production was -> stopped : 1
production was stopped -> at : 1
was stopped at -> some : 1
stopped at some -> mutex : 1
at some mutex -> bool : 1
some mutex bool -> are : 1
mutex bool are -> going : 1
bool are going -> to : 1
going to employ -> two : 1
to employ two -> different : 1
employ two different -> in : 1
two different in -> this : 1
different in this -> in : 1
in the single -> we : 1
the single we -> had : 1
single we had -> a : 1
we had a -> telling : 1
had a telling -> that : 1
a telling that -> there : 1
telling that there -> are : 1
are new items -> in : 2
new items in -> the : 2
this we make -> it : 1
more we want -> the : 1
want the producers -> to : 1
the producers to -> produce : 1
producers to produce -> until : 1
to produce until -> the : 1
produce until the -> queue : 1
the queue contains -> a : 1
the queue contains -> the : 1
queue contains a -> certain : 1
contains a certain -> of : 1
a certain of -> if : 1
certain of if -> that : 1
if that stock -> amount : 1
that stock amount -> is : 1
stock amount is -> they : 1
amount is they -> shall : 1
is they shall -> this : 1
they shall this -> way : 1
shall this way -> the : 1
way the variable -> can : 1
the variable can -> be : 1
variable can be -> used : 1
used to wake -> up : 1
to wake up -> consumers : 1
wake up consumers -> which : 1
up consumers which -> in : 1
consumers which in -> can : 1
which in can -> wake : 1
in can wake -> up : 1
can wake up -> the : 1
can wake up -> sleeping : 1
wake up the -> producers : 1
up the producers -> with : 1
the producers with -> the : 1
producers with the -> variable : 1
the variable producer -> function : 1
variable producer function -> accepts : 1
producer function accepts -> a : 1
accepts a producer -> id : 1
a producer id -> a : 1
producer id a -> total : 1
id a total -> number : 1
a total number -> of : 1
total number of -> items : 1
total number of -> such : 1
of items to -> produce : 1
items to produce -> and : 1
produce and a -> stock : 1
and a stock -> limit : 1
a stock limit -> as : 1
stock limit as -> it : 1
limit as it -> then : 1
as it then -> enters : 1
it then enters -> its : 1
then enters its -> own : 1
enters its own -> production : 1
its own production -> it : 1
own production it -> first : 1
production it first -> locks : 1
it first locks -> the : 1
first locks the -> unlocks : 1
locks the unlocks -> it : 1
the unlocks it -> again : 1
unlocks it again -> in : 1
again in the -> it : 1
the it waits -> for : 1
it waits for -> the : 2
waits for the -> condition : 1
waits for the -> first : 1
for the condition -> that : 1
condition that the -> queue : 1
the queue size -> is : 1
queue size is -> below : 1
size is below -> the : 1
is below the -> static : 1
below the static -> void : 1
i return producer -> it : 1
return producer it -> produces : 1
producer it produces -> an : 1
it produces an -> item : 1
produces an item -> and : 1
an item and -> pushes : 1
item and pushes -> it : 1
the the queue -> value : 1
the queue value -> is : 1
queue value is -> calculated : 1
value is calculated -> from : 1
is calculated from -> the : 1
calculated from the -> expression : 1
from the expression -> this : 1
the expression this -> way : 1
expression this way -> we : 1
we can later -> see : 1
can later see -> which : 1
later see which -> producer : 1
see which producer -> produced : 1
which producer produced -> the : 1
producer produced the -> hundreds : 1
produced the hundreds -> in : 1
the hundreds in -> the : 1
hundreds in the -> number : 1
the number are -> the : 1
number are the -> producer : 1
are the producer -> we : 1
producer we also -> print : 1
print the production -> event : 1
the production event -> to : 1
production event to -> the : 1
event to the -> the : 1
event to the -> if : 1
event to the -> consuming : 1
the the format -> of : 1
the format of -> the : 1
format of the -> printing : 1
of the printing -> may : 1
the printing may -> look : 1
printing may look -> but : 1
may look but -> it : 1
look but it -> will : 1
but it will -> align : 1
it will align -> nicely : 1
will align nicely -> with : 1
align nicely with -> the : 1
nicely with the -> consumer : 1
with the consumer -> output : 1
with the consumer -> the : 1
the consumer output -> in : 1
consumer output in -> the : 1
output in the -> terminal : 1
in the terminal -> producer : 1
the terminal producer -> id : 1
terminal producer id -> item : 1
producer id item -> we : 1
id item we -> can : 1
id item we -> notify : 1
item we can -> wake : 1
we can wake -> up : 1
wake up sleeping -> a : 1
up sleeping a -> sleeping : 1
sleeping a sleeping -> period : 1
a sleeping period -> of : 1
sleeping period of -> milliseconds : 1
period of milliseconds -> simulates : 1
of milliseconds simulates -> that : 1
milliseconds simulates that -> producing : 1
simulates that producing -> items : 1
that producing items -> takes : 1
producing items takes -> some : 1
takes some producer -> id : 1
some producer id -> to : 1
producer id to -> the : 1
id to the -> consumer : 1
consumer function that -> only : 1
function that only -> accepts : 1
that only accepts -> a : 1
only accepts a -> consumer : 1
accepts a consumer -> id : 1
a consumer id -> as : 1
consumer id as -> an : 1
id as an -> it : 1
as an it -> shall : 1
an it shall -> continue : 1
it shall continue -> waiting : 1
shall continue waiting -> for : 1
continue waiting for -> items : 1
waiting for items -> if : 1
for items if -> the : 1
items if the -> production : 1
if the production -> has : 1
the production has -> not : 2
production has not -> or : 1
production has not -> then : 1
has not or -> the : 1
not or the -> queue : 1
or the queue -> is : 1
the queue is -> not : 2
the queue is -> but : 1
the queue is -> never : 1
the queue is -> filled : 2
queue is not -> if : 1
queue is not -> completely : 1
is not if -> the : 1
not if the -> queue : 1
if the queue -> is : 1
if the queue -> for : 1
if the queue -> has : 1
queue is but -> the : 1
is but the -> production : 1
but the production -> has : 1
has not then -> it : 1
not then it -> is : 1
that there might -> be : 1
might be new -> items : 1
be new items -> static : 1
new items static -> void : 1
items static void -> while : 1
void while locking -> the : 1
locking the queue -> we : 1
the queue we -> unlock : 1
queue we unlock -> it : 1
we unlock it -> again : 1
unlock it again -> in : 1
again in order -> to : 2
order to wait -> event : 1
order to wait -> for : 1
to wait event -> the : 1
wait event the -> lambda : 1
event the lambda -> expression : 1
lambda expression argument -> describes : 1
expression argument describes -> that : 1
argument describes that -> we : 1
describes that we -> want : 1
want to return -> from : 1
to return from -> the : 1
return from the -> wait : 1
from the wait -> call : 1
the wait call -> when : 1
wait call when -> the : 1
call when the -> queue : 1
when the queue -> contains : 1
queue contains the -> second : 1
contains the second -> tells : 1
the second tells -> that : 1
second tells that -> we : 1
tells that we -> do : 1
want to wait -> if : 1
to wait if -> it : 1
wait if it -> takes : 1
if it takes -> longer : 1
it takes longer -> than : 1
takes longer than -> we : 1
longer than we -> want : 1
than we want -> to : 1
want to drop -> out : 1
to drop out -> of : 1
of the wait -> we : 1
the wait we -> can : 1
wait we can -> distinguish : 1
we can distinguish -> if : 1
can distinguish if -> the : 1
distinguish if the -> function : 1
the function returned -> because : 1
the function returned -> us : 1
function returned because -> the : 1
returned because the -> predicate : 1
because the predicate -> condition : 1
the predicate condition -> or : 1
predicate condition or -> if : 1
condition or if -> we : 1
if we dropped -> out : 1
we dropped out -> of : 1
of it because -> of : 1
it because of -> a : 1
because of a -> it : 1
a it will -> return : 1
a it will -> yield : 1
will return in -> case : 1
return in case -> of : 1
in case of -> the : 1
in case of -> a : 1
of the if -> there : 1
the if there -> are : 1
the we consume -> them : 1
we consume them -> and : 1
consume them and -> print : 1
and print this -> event : 1
print this event -> to : 1
this event to -> the : 1
the if return -> item : 1
if return item -> consumer : 1
return item consumer -> id : 1
item consumer id -> item : 1
consumer id item -> we : 1
item we notify -> the : 1
we notify the -> producers : 1
notify the producers -> and : 1
the producers and -> sleep : 1
producers and sleep -> for : 1
and sleep for -> milliseconds : 1
sleep for milliseconds -> to : 1
for milliseconds to -> simulate : 1
milliseconds to simulate -> that : 1
to simulate that -> consuming : 1
to simulate that -> string : 1
to simulate that -> this : 1
simulate that consuming -> items : 1
that consuming items -> is : 1
consuming items is -> also : 1
items is also -> producer : 1
is also producer -> id : 1
also producer id -> the : 1
producer id the -> main : 1
id the main -> we : 1
a vector for -> worker : 1
vector for worker -> threads : 1
for worker threads -> and : 1
worker threads and -> another : 1
threads and another -> for : 1
and another for -> consumer : 1
another for consumer -> int : 1
for consumer int -> we : 1
consumer int we -> spawn : 1
int we spawn -> three : 1
we spawn three -> producer : 1
spawn three producer -> threads : 1
three producer threads -> and : 1
producer threads and -> five : 1
threads and five -> consumer : 1
and five consumer -> for : 1
five consumer for -> i : 1
consumer for i -> i : 1
i for i -> i : 1
i i first -> let : 1
i first let -> the : 1
first let the -> producer : 1
let the producer -> threads : 1
the producer threads -> as : 1
the producer threads -> stop : 1
producer threads as -> soon : 1
threads as soon -> as : 1
soon as all -> of : 1
as all of -> them : 1
them have we -> set : 1
have we set -> the : 1
we set the -> which : 1
set the which -> will : 1
which will lead -> the : 1
will lead the -> consumers : 1
lead the consumers -> to : 1
the consumers to -> we : 1
consumers to we -> need : 1
to we need -> to : 1
need to collect -> those : 1
to collect those -> and : 1
collect those and -> then : 1
those and then -> we : 1
we can quit -> the : 1
can quit the -> for : 1
quit the for -> for : 1
the for for -> and : 1
for for and -> running : 1
is very which -> is : 1
very which is -> why : 1
it is truncated -> we : 1
is truncated we -> can : 1
truncated we can -> see : 1
that the producers -> go : 1
the producers go -> to : 2
producers go to -> sleep : 2
time to and -> let : 1
to and let -> the : 1
let the consumers -> eat : 1
the consumers eat -> up : 1
consumers eat up -> some : 1
eat up some -> items : 1
up some items -> until : 1
some items until -> they : 1
items until they -> finally : 1
until they finally -> produce : 1
they finally produce -> it : 1
finally produce it -> is : 1
produce it is -> interesting : 1
interesting to alter -> the : 1
to alter the -> wait : 1
alter the wait -> times : 1
the wait times -> for : 1
wait times for -> as : 1
times for as -> well : 1
for as well -> as : 1
well as manipulating -> the : 1
as manipulating the -> number : 1
manipulating the number -> of : 1
of and stock -> items : 1
and stock items -> because : 1
stock items because -> this : 1
items because this -> completely : 1
because this completely -> changes : 1
this completely changes -> the : 1
completely changes the -> output : 1
changes the output -> item : 1
the output item -> item : 1
output item item -> consumer : 1
item item consumer -> item : 1
item item consumer -> producer : 1
item consumer item -> consumer : 1
consumer item consumer -> consumer : 1
item consumer consumer -> item : 1
consumer consumer item -> item : 1
consumer item item -> consumer : 1
item consumer producer -> item : 1
consumer producer item -> producer : 1
producer item producer -> consumer : 1
item producer consumer -> item : 1
item producer consumer -> consumer : 1
producer consumer item -> producer : 1
consumer item producer -> consumer : 1
producer consumer consumer -> consumer : 1
consumer consumer consumer -> consumer : 4
consumer consumer consumer -> it : 1
consumer consumer it -> recipe : 1
consumer it recipe -> is : 1
it recipe is -> an : 1
recipe is an -> extension : 1
is an extension -> of : 1
an extension of -> the : 1
extension of the -> preceding : 1
of the preceding -> instead : 1
the preceding instead -> of : 1
preceding instead of -> synchronizing : 1
instead of synchronizing -> only : 1
of synchronizing only -> one : 1
synchronizing only one -> producer : 1
only one producer -> with : 1
only one producer -> thread : 1
one producer with -> one : 1
producer with one -> we : 1
with one we -> implemented : 1
one we implemented -> a : 1
implemented a program -> that : 1
program that synchronizes -> producers : 1
that synchronizes producers -> with : 1
synchronizes producers with -> on : 1
producers with on -> top : 1
with on top -> of : 1
on top of -> not : 1
top of not -> only : 1
of not only -> the : 1
the consumers go -> to : 1
consumers go to -> sleep : 1
to sleep if -> there : 1
sleep if there -> are : 1
no items for -> them : 1
items for them -> but : 1
for them but -> also : 1
them but also -> the : 1
to sleep as -> soon : 1
sleep as soon -> as : 1
as the item -> queue : 2
the item queue -> becomes : 1
the item queue -> length : 1
item queue becomes -> multiple : 1
queue becomes multiple -> consumers : 1
becomes multiple consumers -> wait : 1
multiple consumers wait -> for : 1
consumers wait for -> the : 1
for the same -> queue : 1
same queue to -> fill : 1
queue to fill -> then : 1
to fill then -> this : 1
fill then this -> would : 1
this would generally -> also : 1
would generally also -> work : 1
generally also work -> with : 1
work with the -> consumer : 1
consumer the one -> consumer : 1
the one consumer -> as : 1
the one consumer -> example : 1
one consumer as -> long : 1
consumer as long -> as : 1
long as only -> one : 1
as only one -> thread : 1
only one thread -> locks : 1
one thread locks -> the : 1
thread locks the -> mutex : 1
that protects the -> queue : 1
protects the queue -> and : 1
queue and then -> takes : 1
and then takes -> items : 1
then takes items -> out : 1
items out the -> code : 1
out the code -> is : 1
code is it -> does : 1
it does how -> many : 1
does how many -> threads : 1
many threads are -> waiting : 1
threads are waiting -> for : 1
are waiting for -> the : 1
waiting for the -> lock : 1
for the lock -> at : 1
the lock at -> the : 1
lock at the -> same : 1
same the same -> applies : 1
the as in -> both : 1
as in both -> scenarios : 1
in both scenarios -> the : 1
both scenarios the -> only : 1
scenarios the only -> important : 1
queue is never -> accessed : 1
is never accessed -> by : 1
never accessed by -> more : 1
accessed by more -> than : 1
by more than -> one : 1
than one thread -> at : 1
at a what -> makes : 1
a what makes -> this : 1
what makes this -> program : 1
makes this program -> really : 1
this program really -> more : 1
program really more -> complex : 1
really more complex -> than : 1
complex than just -> running : 1
than just running -> the : 1
just running the -> one : 1
running the one -> consumer : 1
one consumer example -> with : 1
consumer example with -> more : 1
example with more -> threads : 1
with more threads -> is : 1
more threads is -> the : 1
threads is the -> fact : 1
that we make -> the : 1
we make the -> producer : 1
make the producer -> threads : 1
producer threads stop -> as : 1
threads stop as -> soon : 1
stop as soon -> as : 1
item queue length -> reached : 1
queue length reached -> a : 1
length reached a -> certain : 1
reached a certain -> in : 1
a certain in -> order : 1
certain in order -> to : 1
order to meet -> that : 1
to meet that -> we : 1
meet that we -> implemented : 1
that we implemented -> signals : 1
that we implemented -> in : 1
we implemented signals -> with : 1
implemented signals with -> their : 1
signals with their -> own : 1
their own signals -> the : 1
own signals the -> event : 1
signals the event -> that : 2
the event that -> the : 2
event that the -> queue : 2
is not completely -> filled : 1
not completely filled -> to : 1
completely filled to -> the : 1
filled to the -> maximum : 1
to the maximum -> and : 1
the maximum and -> the : 1
maximum and the -> producers : 1
and the producers -> may : 1
the producers may -> fill : 1
producers may fill -> it : 1
may fill it -> up : 1
fill it up -> signals : 1
it up signals -> the : 1
up signals the -> event : 1
the queue maximum -> length : 1
queue maximum length -> and : 1
maximum length and -> consumers : 1
length and consumers -> are : 1
and consumers are -> free : 1
consumers are free -> to : 1
free to consume -> items : 1
to consume items -> way : 1
consume items way -> producers : 1
items way producers -> fill : 1
way producers fill -> items : 1
producers fill items -> into : 1
fill items into -> the : 1
into the queue -> and : 1
queue and signal -> the : 1
and signal the -> event : 1
signal the event -> to : 1
the event to -> the : 1
to the consuming -> which : 1
the consuming which -> wait : 1
consuming which wait -> on : 1
which wait on -> the : 1
wait on the -> following : 2
following return got -> the : 1
return got the -> event : 1
got the event -> without : 1
the event without -> timeout : 1
event without timeout -> on : 1
without timeout on -> the : 1
timeout on the -> other : 1
the other wait -> on : 1
other wait on -> the : 1
the following line -> until : 1
following line until -> they : 1
line until they -> are : 1
until they are -> allowed : 1
they are allowed -> to : 1
are allowed to -> produce : 1
allowed to produce -> return : 1
to produce return -> interesting : 1
produce return interesting -> detail : 1
return interesting detail -> is : 1
interesting detail is -> that : 1
do not let -> consumers : 1
not let consumers -> wait : 1
let consumers wait -> in : 1
consumers wait in -> the : 1
wait in the -> we : 1
the we additionally -> added : 1
we additionally added -> a : 1
additionally added a -> timeout : 1
added a timeout -> this : 1
a timeout this -> is : 1
timeout this is -> the : 1
is the exit -> mechanism : 1
the exit mechanism -> for : 1
exit mechanism for -> if : 1
mechanism for if -> the : 1
for if the -> queue : 1
for if the -> steps : 1
the queue for -> a : 1
queue for a -> maybe : 1
for a maybe -> there : 1
a maybe there -> are : 1
maybe there are -> no : 1
are no active -> producers : 1
no active producers -> any : 1
active producers any -> the : 1
producers any the -> sake : 1
any the sake -> of : 1
the code tries -> to : 1
tries to keep -> the : 1
keep the queue -> length : 1
the queue length -> at : 1
queue length at -> the : 1
length at the -> a : 1
at the a -> more : 1
the a more -> sophisticated : 1
a more sophisticated -> program : 1
more sophisticated program -> could : 1
sophisticated program could -> let : 1
program could let -> the : 1
could let the -> consumer : 1
the consumer threads -> push : 1
consumer threads push -> a : 1
threads push a -> if : 1
push a if -> the : 1
the queue has -> only : 1
queue has only -> the : 1
has only the -> size : 1
only the size -> of : 1
size of its -> maximum : 1
of its maximum -> this : 1
its maximum this -> way : 1
maximum this way -> producers : 1
this way producers -> would : 1
way producers would -> be : 1
producers would be -> woken : 1
would be woken -> up : 1
be woken up -> before : 1
woken up before -> the : 1
up before the -> queue : 1
before the queue -> runs : 1
queue runs empty -> but : 1
runs empty but -> not : 1
empty but not -> when : 1
but not when -> there : 1
not when there -> are : 1
are still enough -> items : 1
still enough items -> in : 1
enough items in -> the : 1
in the situation -> that : 1
the situation that -> solves : 1
the situation that -> we : 1
situation that solves -> elegantly : 1
that solves elegantly -> for : 1
solves elegantly for -> us : 1
elegantly for us -> is : 1
us is the -> if : 1
is the if -> a : 1
the if a -> consumer : 1
the if a -> path : 1
if a consumer -> fires : 1
if a consumer -> thread : 1
a consumer fires -> the : 1
consumer fires the -> there : 1
fires the there -> might : 1
the there might -> be : 1
be a horde -> of : 1
a horde of -> producers : 1
horde of producers -> racing : 1
of producers racing -> to : 1
producers racing to -> produce : 1
racing to produce -> the : 1
to produce the -> next : 1
to produce the -> string : 1
produce the next -> if : 1
the next if -> only : 1
next if only -> one : 1
if only one -> item : 1
only one item -> is : 1
one item is -> then : 1
item is then -> there : 1
then there will -> only : 1
there will only -> be : 1
only be one -> producer : 1
be one producer -> producing : 1
one producer producing -> if : 1
producer producing if -> all : 1
producing if all -> producers : 1
if all producers -> would : 1
all producers would -> always : 1
producers would always -> produce : 1
would always produce -> an : 1
always produce an -> item : 1
produce an item -> as : 1
an item as -> soon : 1
item as soon -> as : 1
as the event -> is : 1
the event is -> we : 1
event is we -> would : 1
is we would -> often : 1
we would often -> see : 1
would often see -> the : 1
often see the -> case : 1
see the case -> that : 1
the case that -> the : 1
case that the -> queue : 1
queue is filled -> above : 1
queue is filled -> up : 1
is filled above -> its : 1
filled above its -> allowed : 1
above its allowed -> imagine : 1
its allowed imagine -> the : 1
allowed imagine the -> situation : 1
imagine the situation -> that : 1
situation that we -> have : 1
we have items -> in : 1
have items in -> the : 1
queue and want -> one : 1
and want one -> new : 1
want one new -> item : 1
one new item -> produced : 1
new item produced -> so : 1
item produced so -> that : 1
produced so that -> the : 1
so that the -> queue : 1
is filled up -> no : 1
filled up no -> matter : 1
up no matter -> if : 1
matter if a -> consumer : 1
a consumer thread -> calls : 1
consumer thread calls -> would : 1
thread calls would -> wake : 1
calls would wake -> up : 1
would wake up -> only : 1
wake up only -> one : 1
up only one -> waiting : 1
only one waiting -> or : 1
one waiting or -> wakes : 1
waiting or wakes -> up : 1
or wakes up -> waiting : 1
wakes up waiting -> we : 1
up waiting we -> have : 1
waiting we have -> the : 1
have the guarantee -> that : 1
the guarantee that -> only : 1
guarantee that only -> one : 1
that only one -> producer : 1
one producer thread -> will : 1
producer thread will -> exit : 1
thread will exit -> the : 1
will exit the -> for : 1
exit the for -> all : 1
the for all -> other : 1
all other producer -> condition : 1
other producer condition -> hold : 1
producer condition hold -> any : 1
condition hold any -> longer : 1
hold any longer -> as : 1
any longer as -> soon : 1
longer as soon -> as : 1
soon as they -> get : 1
as they get -> the : 1
they get the -> mutex : 1
get the mutex -> after : 1
the mutex after -> being : 1
mutex after being -> woken : 1
after being woken -> the : 1
being woken the -> ascii : 1
woken the ascii -> mandelbrot : 1
renderer using the -> mandelbrot : 1
using the mandelbrot -> from : 1
the mandelbrot from -> use : 1
mandelbrot from use -> of : 1
of stl in -> this : 1
stl in this -> we : 1
this we it -> use : 1
we it use -> threads : 1
it use threads -> in : 1
use threads in -> order : 1
threads in order -> to : 1
to speed its -> calculation : 1
speed its calculation -> time : 1
its calculation time -> a : 1
calculation time a -> bit : 1
time a bit -> we : 1
a bit we -> will : 1
bit we will -> modify : 1
we will modify -> in : 1
will modify in -> the : 1
modify in the -> original : 1
in the original -> program : 1
the original program -> that : 1
the original program -> are : 1
original program that -> limits : 1
program that limits -> the : 1
that limits the -> number : 1
of iterations for -> every : 1
of iterations for -> the : 1
iterations for every -> selected : 1
for every selected -> this : 1
every selected this -> will : 1
selected this will -> make : 1
this will make -> the : 1
will make the -> program : 1
program and its -> results : 1
and its results -> than : 1
its results than -> we : 1
results than we -> can : 1
than we can -> actually : 1
we can actually -> display : 1
can actually display -> on : 1
actually display on -> the : 1
display on the -> but : 1
the but then -> we : 1
but then we -> have : 1
nice example target -> for : 1
example target for -> we : 1
target for we -> will : 1
we will apply -> to : 1
will apply to -> the : 1
apply to the -> program : 1
how the whole -> program : 1
whole program runs -> after : 1
whole program runs -> for : 1
program runs after -> those : 1
runs after those -> the : 1
after those the -> program : 1
those the program -> runs : 1
the program runs -> with : 1
program runs with -> and : 1
runs with and -> in : 1
with and in -> order : 1
order to fully -> understand : 1
fully understand this -> it : 1
understand this it -> is : 1
it is crucial -> to : 2
is crucial to -> understand : 2
crucial to understand -> the : 2
understand the original -> to : 1
the original to -> do : 1
original to do -> this : 1
this we take -> the : 1
take the ascii -> mandelbrot : 1
ascii mandelbrot fractal -> renderer : 1
mandelbrot fractal renderer -> that : 1
fractal renderer that -> we : 1
renderer that we -> implemented : 1
implemented in use -> of : 1
of stl we -> are : 1
stl we are -> going : 1
going to make -> the : 1
make the calculation -> take : 1
the calculation take -> much : 1
calculation take much -> more : 1
take much more -> time : 1
much more time -> by : 1
more time by -> incrementing : 1
time by incrementing -> the : 1
by incrementing the -> calculation : 1
incrementing the calculation -> then : 1
the calculation then -> we : 1
calculation then we -> get : 1
we get some -> speedup : 1
get some speedup -> by : 1
some speedup by -> doing : 1
speedup by doing -> only : 1
by doing only -> four : 1
doing only four -> little : 1
only four little -> changes : 1
four little changes -> to : 1
little changes to -> the : 1
changes to the -> program : 1
program in order -> to : 1
to parallelize order -> to : 1
parallelize order to -> follow : 1
order to follow -> the : 1
to follow the -> it : 1
follow the it -> is : 1
it is best -> to : 1
is best to -> just : 1
best to just -> copy : 1
copy the whole -> program : 1
whole program from -> the : 1
program from the -> other : 1
the other then -> follow : 1
other then follow -> the : 1
then follow the -> instructions : 1
follow the instructions -> in : 1
the instructions in -> the : 1
instructions in the -> following : 1
the following steps -> in : 1
following steps in -> order : 1
steps in order -> to : 1
to do all -> needed : 1
do all needed -> all : 1
all needed all -> differences : 1
needed all differences -> from : 1
all differences from -> the : 1
differences from the -> original : 1
from the original -> program : 1
original program are -> the : 1
are the first -> change : 1
the first change -> is : 1
first change is -> an : 1
change is an -> additional : 1
is an additional -> using : 1
an additional using -> namespace : 1
additional using namespace -> and : 1
using namespace and -> functions : 1
namespace and functions -> need : 1
and functions need -> any : 1
functions need any -> using : 1
need any using -> cmplx : 1
any using cmplx -> static : 1
using cmplx static -> auto : 1
cmplx static auto -> int : 1
return template typename -> static : 1
int return the -> function : 1
return the function -> we : 1
function we are -> just : 1
are just going -> to : 1
going to increment -> the : 1
increment the number -> of : 1
of iterations in -> order : 1
iterations in order -> to : 1
program a bit -> more : 1
bit more static -> auto : 1
more static auto -> cmplx : 1
z return we -> have : 1
return we have -> a : 2
have a part -> of : 1
main function that -> does : 1
need any change -> int : 1
any change int -> const : 1
change int const -> w : 1
auto scale auto -> return : 1
scale auto return -> x : 1
auto return x -> the : 1
return x the -> we : 1
x the we -> do : 1
not call directly -> any : 1
call directly any -> but : 1
directly any but -> make : 1
any but make -> the : 1
but make the -> call : 1
make the call -> asynchronous : 1
the call asynchronous -> using : 1
call asynchronous using -> auto : 1
asynchronous using auto -> return : 1
using auto return -> the : 1
auto return the -> last : 1
return the last -> the : 1
return the last -> helper : 1
last the function -> returned : 1
function returned us -> the : 1
returned us the -> number : 1
of iterations a -> specific : 1
iterations a specific -> coordinate : 1
a specific coordinate -> the : 1
specific coordinate the -> mandelbrot : 1
coordinate the mandelbrot -> algorithm : 1
the mandelbrot algorithm -> to : 1
mandelbrot algorithm to -> now : 1
algorithm to now -> it : 1
to now it -> returns : 1
now it returns -> a : 1
returns a variable -> that : 1
a variable that -> will : 1
variable that will -> contain : 1
that will contain -> the : 1
will contain the -> same : 1
same value later -> because : 1
value later because -> it : 1
later because it -> is : 1
it is computed -> because : 1
is computed because -> of : 1
computed because of -> we : 1
need a vector -> that : 1
vector that holds -> all : 1
that holds all -> the : 1
all the future -> so : 1
the future so -> just : 1
future so just -> add : 1
so just add -> the : 1
just add the -> output : 1
add the output -> iterator : 1
output iterator we -> provide : 1
iterator we provide -> as : 1
as the third -> argument : 1
third argument must -> be : 1
argument must be -> the : 1
be the begin -> iterator : 1
the new output -> vector : 1
new output vector -> v : 1
output vector v -> r : 1
vector v r -> call : 1
v r call -> which : 1
r call which -> did : 1
call which did -> all : 1
which did all -> the : 1
all the printing -> for : 1
the printing for -> us : 1
printing for us -> get : 1
for us get -> values : 1
us get values -> as : 1
get values as -> its : 1
values as its -> second : 1
as its second -> argument : 1
its second argument -> any : 1
second argument any -> but : 1
argument any but -> we : 1
any but we -> need : 1
but we need -> to : 1
need to adapt -> it : 1
to adapt it -> to : 1
adapt it to -> this : 1
it to this -> type : 1
to this type -> we : 1
type we had -> used : 1
had used as -> its : 1
used as its -> type : 1
as its type -> from : 1
the beginning then -> this : 1
beginning then this -> would : 1
even be and -> then : 1
be and then -> we : 1
to call where -> we : 1
where we just -> accessed : 1
we just accessed -> in : 1
just accessed in -> order : 1
accessed in order -> to : 1
value to auto -> binfunc : 1
to auto binfunc -> mutable : 1
auto binfunc mutable -> if : 1
binfunc mutable if -> w : 1
w return and -> running : 1
and running gives -> us : 1
running gives us -> the : 1
us the same -> output : 1
us the same -> path : 1
us the same -> absolute : 1
same output as -> the : 1
the only interesting -> difference : 1
only interesting difference -> is : 1
interesting difference is -> the : 1
difference is the -> execution : 1
is the execution -> if : 1
the execution if -> we : 1
execution if we -> increase : 1
if we increase -> the : 1
we increase the -> number : 1
increase the number -> of : 1
iterations for the -> original : 1
for the original -> version : 1
the original version -> of : 2
original version of -> the : 2
then the parallelized -> version : 1
the parallelized version -> should : 1
parallelized version should -> compute : 1
version should compute -> on : 1
should compute on -> my : 1
compute on my -> computer : 1
on my computer -> with : 1
my computer with -> four : 1
computer with four -> cpu : 1
with four cpu -> cores : 1
four cpu cores -> with : 1
four cpu cores -> to : 1
four cpu cores -> we : 1
cpu cores with -> hyperthreading : 1
cores with hyperthreading -> results : 1
with hyperthreading results -> in : 1
hyperthreading results in -> virtual : 1
results in virtual -> get : 1
in virtual get -> different : 1
virtual get different -> results : 1
get different results -> with : 1
different results with -> gcc : 1
results with gcc -> and : 1
with gcc and -> the : 1
gcc and the -> best : 1
the best speedup -> is : 1
best speedup is -> and : 1
speedup is and -> the : 1
and the worst -> is : 1
the worst is -> the : 1
worst is the -> results : 1
is the results -> will : 1
the results will -> also : 1
results will also -> vary : 1
will also vary -> across : 1
also vary across -> of : 1
vary across of -> it : 1
across of it -> is : 1
understand the whole -> program : 1
whole program first -> because : 1
program first because -> then : 1
first because then -> it : 1
because then it -> is : 1
clear that all -> the : 1
the work one -> line : 1
work one line -> of : 1
the main vector -> contains : 1
main vector contains -> all : 1
vector contains all -> the : 1
all the indices -> that : 1
the indices that -> are : 1
indices that are -> mapped : 1
that are mapped -> to : 1
are mapped to -> complex : 1
mapped to complex -> which : 1
to complex which -> are : 1
complex which are -> then : 1
are then in -> turn : 1
then in turn -> iterated : 1
in turn iterated -> over : 1
turn iterated over -> with : 1
iterated over with -> the : 1
with the mandelbrot -> the : 1
mandelbrot the result -> of : 1
of each iteration -> is : 1
each iteration is -> saved : 1
iteration is saved -> in : 1
saved in vector -> the : 1
in vector the -> original : 1
vector the original -> this : 1
the original this -> is : 1
original this is -> the : 1
is the single -> line : 1
the single line -> which : 1
single line which -> consumes : 1
line which consumes -> all : 1
which consumes all -> the : 1
consumes all the -> processing : 1
all the processing -> time : 1
the processing time -> for : 1
processing time for -> calculating : 1
time for calculating -> the : 1
for calculating the -> fractal : 1
calculating the fractal -> all : 1
the fractal all -> code : 1
fractal all code -> that : 1
all code that -> precedes : 1
all code that -> follows : 1
code that precedes -> it : 1
that precedes it -> is : 1
precedes it is -> just : 1
is just set -> up : 1
just set up -> work : 1
set up work -> and : 1
set up work -> for : 1
up work and -> all : 1
work and all -> code : 1
and all code -> that : 1
code that follows -> it : 1
that follows it -> is : 1
follows it is -> just : 1
is just for -> this : 1
just for this -> means : 1
means that parallelizing -> this : 1
that parallelizing this -> line : 1
parallelizing this line -> is : 1
this line is -> key : 1
line is key -> to : 1
is key to -> more : 1
key to more -> possible : 1
to more possible -> approach : 1
more possible approach -> to : 1
possible approach to -> parallelizing : 1
approach to parallelizing -> this : 1
to parallelizing this -> is : 1
parallelizing this is -> to : 1
is to break -> up : 1
to break up -> the : 1
break up the -> whole : 1
up the whole -> linear : 1
the whole linear -> range : 1
whole linear range -> from : 1
linear range from -> to : 1
from to into -> chunks : 1
to into chunks -> of : 1
into chunks of -> the : 1
chunks of the -> same : 1
the same size -> and : 1
same size and -> distribute : 1
size and distribute -> them : 1
and distribute them -> evenly : 1
distribute them evenly -> across : 1
them evenly across -> all : 1
evenly across all -> this : 1
across all this -> way : 1
all this way -> all : 1
this way all -> cores : 1
way all cores -> would : 1
all cores would -> share : 1
cores would share -> the : 1
would share the -> amount : 1
share the amount -> of : 1
amount of if -> we : 1
if we used -> the : 1
used the parallel -> version : 1
the parallel version -> of : 2
parallel version of -> with : 1
parallel version of -> this : 1
version of with -> a : 1
of with a -> parallel : 1
with a parallel -> execution : 1
a parallel execution -> this : 1
parallel execution this -> would : 1
execution this would -> exactly : 1
this would exactly -> be : 1
would exactly be -> the : 1
exactly be the -> this : 1
be the this -> is : 1
not the right -> strategy : 1
the right strategy -> for : 1
right strategy for -> because : 1
strategy for because -> every : 1
for because every -> single : 1
because every single -> point : 1
every single point -> in : 1
single point in -> the : 1
in the mandelbrot -> set : 1
mandelbrot set very -> individual : 1
set very individual -> number : 1
very individual number -> of : 1
individual number of -> approach : 1
number of approach -> here : 1
of approach here -> is : 1
approach here is -> to : 1
here is to -> make : 1
to make every -> single : 1
make every single -> vector : 1
every single vector -> represents : 1
single vector represents -> an : 1
vector represents an -> individually : 1
represents an individually -> printed : 1
an individually printed -> character : 1
individually printed character -> cell : 1
printed character cell -> on : 1
character cell on -> the : 1
cell on the -> terminal : 1
the terminal later -> an : 1
terminal later an -> asynchronously : 1
later an asynchronously -> calculated : 1
an asynchronously calculated -> as : 1
asynchronously calculated as -> source : 1
calculated as source -> and : 1
as source and -> target : 1
source and target -> vector : 1
and target vector -> are : 1
target vector are -> items : 1
vector are items -> which : 1
are items which -> means : 1
items which means -> in : 1
which means in -> our : 1
vector of future -> values : 1
of future values -> that : 1
future values that -> are : 1
that are calculated -> if : 1
are calculated if -> our : 1
calculated if our -> system : 1
if our system -> had : 1
our system had -> cpu : 1
system had cpu -> then : 1
had cpu then -> this : 1
cpu then this -> would : 1
that we threads -> that : 1
we threads that -> do : 1
threads that do -> the : 1
that do the -> mandelbrot : 1
do the mandelbrot -> iteration : 1
the mandelbrot iteration -> really : 1
mandelbrot iteration really -> on : 1
iteration really on -> a : 1
really on a -> normal : 1
on a normal -> system : 1
a normal system -> with : 1
normal system with -> fewer : 1
system with fewer -> the : 1
with fewer the -> cpus : 1
fewer the cpus -> will : 1
the cpus will -> just : 1
cpus will just -> process : 1
will just process -> one : 1
just process one -> asynchronous : 1
process one asynchronous -> item : 1
one asynchronous item -> after : 1
asynchronous item after -> the : 1
item after the -> other : 1
after the other -> per : 1
the other per -> the : 1
other per the -> call : 1
per the call -> with : 1
with the asynchronized -> version : 1
the asynchronized version -> itself : 1
asynchronized version itself -> does : 1
version itself does -> but : 1
itself does but -> setting : 1
does but setting -> up : 1
but setting up -> of : 1
setting up of -> threads : 1
up of threads -> and : 1
of threads and -> future : 1
threads and future -> it : 1
and future it -> returns : 1
future it returns -> practically : 1
it returns practically -> the : 1
returns practically the -> original : 1
practically the original -> version : 1
the program blocked -> at : 1
program blocked at -> this : 1
blocked at this -> point : 1
this point because -> the : 1
point because the -> iterations : 1
because the iterations -> took : 1
the iterations took -> so : 1
iterations took so -> parallelized : 1
took so parallelized -> version : 1
so parallelized version -> of : 1
parallelized version of -> the : 1
the program does -> of : 1
program does of -> course : 1
does of course -> block : 1
of course block -> the : 1
course block the -> function : 1
block the function -> that : 1
prints all our -> values : 1
all our values -> on : 1
our values on -> the : 1
values on the -> terminal : 1
the terminal must -> access : 1
terminal must access -> the : 1
must access the -> results : 1
access the results -> from : 1
the results from -> within : 1
results from within -> the : 1
from within the -> in : 1
within the in -> order : 1
is the while -> it : 1
the while it -> waits : 1
while it waits -> for : 1
first value to -> be : 1
value to be -> a : 1
of other values -> are : 1
other values are -> calculated : 1
values are calculated -> at : 1
are calculated at -> the : 1
calculated at the -> same : 1
the same so -> if : 1
same so if -> the : 1
if the call -> of : 1
the first future -> the : 1
first future the -> next : 1
future the next -> future : 1
the next future -> might : 1
next future might -> be : 1
future might be -> ready : 1
might be ready -> for : 1
be ready for -> printing : 1
ready for printing -> already : 1
for printing already -> case : 1
printing already case -> results : 1
already case results -> in : 1
case results in -> much : 1
results in much -> larger : 1
in much larger -> there : 1
much larger there -> will : 1
larger there will -> be : 1
will be some -> measurable : 1
be some measurable -> overhead : 1
some measurable overhead -> in : 1
measurable overhead in -> creating : 1
overhead in creating -> and : 1
in creating and -> synchronizing : 1
creating and synchronizing -> all : 1
and synchronizing all -> these : 1
synchronizing all these -> in : 1
all these in -> this : 1
these in this -> the : 1
this the overhead -> is : 1
the overhead is -> not : 1
overhead is not -> too : 1
not too on -> with : 1
too on with -> an : 1
on with an -> intel : 1
with an intel -> processor : 1
an intel processor -> with : 1
intel processor with -> capable : 1
processor with capable -> cores : 1
with capable cores -> results : 1
capable cores results -> in : 1
cores results in -> eight : 1
results in eight -> virtual : 1
in eight virtual -> the : 1
eight virtual the -> parallel : 1
virtual the parallel -> version : 1
this program ran -> more : 1
program ran more -> than : 1
ran more than -> times : 1
more than times -> faster : 1
than times faster -> compared : 1
times faster compared -> to : 1
faster compared to -> the : 1
original the ideal -> parallelization : 1
the ideal parallelization -> would : 1
ideal parallelization would -> make : 1
parallelization would make -> it : 1
make it indeed -> times : 1
it indeed times -> of : 1
indeed times of -> this : 1
times of this -> speedup : 1
of this speedup -> will : 1
this speedup will -> vary : 1
will vary between -> different : 1
vary between different -> because : 1
between different because -> it : 1
different because it -> depends : 1
because it depends -> on : 1
it depends on -> a : 1
depends on a -> lot : 1
on a lot -> of : 1
lot of a -> tiny : 1
of a tiny -> automatic : 1
library with complex -> tasks : 1
with complex tasks -> can : 1
complex tasks can -> be : 1
tasks can be -> broken : 1
can be broken -> down : 1
be broken down -> into : 1
down into from -> all : 1
into from all -> we : 1
from all we -> can : 1
all we can -> draw : 1
we can draw -> an : 1
we can draw -> the : 1
can draw an -> that : 1
draw an that -> describes : 1
an that describes -> which : 1
that describes which -> subtask : 1
describes which subtask -> depends : 1
which subtask depends -> on : 1
subtask depends on -> what : 1
depends on what -> other : 1
on what other -> subtasks : 1
what other subtasks -> in : 1
other subtasks in -> order : 1
subtasks in order -> to : 1
order to finish -> the : 1
to finish the -> higher : 1
finish the higher -> level : 1
the higher level -> let : 1
higher level let -> for : 1
level let for -> imagine : 1
let for imagine -> that : 1
for imagine that -> we : 1
want to produce -> the : 1
produce the string -> bar : 1
the string bar -> foo : 1
string bar foo -> bar : 1
bar foo bar -> this : 3
bar foo bar -> that : 1
bar foo bar -> bla : 1
foo bar this -> that : 2
foo bar this -> it : 1
bar this that -> and : 1
bar this that -> the : 1
this that and -> we : 1
that and we -> can : 1
can only do -> this : 1
only do this -> by : 1
this by words -> and : 1
by words and -> concatenate : 1
words and concatenate -> those : 1
and concatenate those -> with : 1
concatenate those with -> other : 1
those with other -> or : 1
with other or -> with : 1
other or with -> say : 1
or with say -> this : 1
with say this -> functionality : 1
say this functionality -> is : 1
this functionality is -> provided : 1
functionality is provided -> by : 1
provided by three -> primitive : 1
by three primitive -> functions : 1
three primitive functions -> and : 1
primitive functions and -> this : 1
functions and this -> into : 1
and this into -> we : 1
this into we -> can : 1
into we can -> draw : 1
can draw the -> following : 1
draw the following -> dag : 1
the following dag -> that : 1
following dag that -> visualizes : 1
dag that visualizes -> the : 1
that visualizes the -> dependencies : 1
visualizes the dependencies -> between : 1
the dependencies between -> them : 1
the dependencies between -> the : 2
dependencies between them -> in : 1
between them in -> order : 1
get the final -> implementing : 1
the final implementing -> this : 1
final implementing this -> in : 1
implementing this in -> it : 1
this in it -> is : 1
clear that everything -> can : 1
that everything can -> be : 1
everything can be -> implemented : 1
implemented in a -> serial : 1
in a serial -> manner : 1
a serial manner -> on : 1
serial manner on -> one : 1
manner on one -> cpu : 1
on one cpu -> all : 1
one cpu all -> subtasks : 1
cpu all subtasks -> that : 1
all subtasks that -> depend : 1
subtasks that depend -> on : 1
that depend on -> no : 1
that depend on -> each : 1
depend on no -> other : 1
on no other -> subtasks : 1
no other subtasks -> or : 1
other subtasks or -> other : 1
subtasks or other -> subtasks : 1
or other subtasks -> that : 1
other subtasks that -> already : 1
subtasks that already -> have : 1
that already have -> been : 1
already have been -> can : 1
have been can -> be : 1
been can be -> executed : 1
be executed on -> multiple : 1
executed on multiple -> cpu : 1
on multiple cpu -> might : 1
multiple cpu might -> perhaps : 1
cpu might perhaps -> seem : 1
might perhaps seem -> tedious : 1
perhaps seem tedious -> to : 1
seem tedious to -> write : 1
tedious to write -> such : 1
write such even -> with : 1
such even with -> because : 1
even with because -> the : 1
with because the -> dependencies : 1
because the dependencies -> between : 1
dependencies between the -> subtasks : 1
dependencies between the -> function : 1
between the subtasks -> need : 1
the subtasks need -> to : 1
subtasks need to -> be : 1
be in this -> we : 1
will implement two -> little : 1
implement two little -> library : 1
two little library -> helper : 1
little library helper -> functions : 1
library helper functions -> that : 1
that help to -> transform : 1
help to transform -> the : 1
transform the normal -> functions : 1
the normal functions -> and : 1
normal functions and -> to : 1
functions and to -> functions : 1
and to functions -> that : 1
to functions that -> work : 1
functions that work -> with : 1
that work with -> we : 1
with we will -> find : 1
we will find -> a : 1
will find a -> really : 1
find a really -> elegant : 1
a really elegant -> way : 1
really elegant way -> to : 1
way to set -> up : 1
up the dependency -> during : 1
the dependency during -> the : 1
dependency during the -> graph : 1
during the graph -> will : 1
the graph will -> parallelize : 1
graph will parallelize -> itself : 1
will parallelize itself -> in : 1
parallelize itself in -> a : 1
itself in a -> way : 1
a way in -> order : 1
way in order -> to : 1
calculate the result -> as : 1
the result as -> fast : 1
result as fast -> as : 1
fast as to -> do : 1
functions that simulate -> tasks : 1
that simulate tasks -> that : 1
simulate tasks that -> depend : 1
tasks that depend -> on : 1
depend on each -> and : 1
on each and -> let : 1
each and let -> them : 1
and let them -> run : 1
them run as -> parallel : 1
run as parallel -> as : 1
as parallel as -> first : 1
parallel as first -> include : 1
as first include -> all : 1
using namespace need -> to : 1
namespace need to -> synchronize : 1
need to synchronize -> concurrent : 1
to synchronize concurrent -> access : 1
synchronize concurrent access -> to : 1
concurrent access to -> so : 1
access to so -> use : 1
to so use -> the : 1
so use the -> synchronization : 1
use the synchronization -> helper : 1
the synchronization helper -> from : 1
synchronization helper from -> the : 1
in this struct -> pcout : 1
this struct pcout -> public : 1
l cout implement -> three : 1
cout implement three -> functions : 1
functions which transform -> the : 1
which transform the -> first : 1
transform the first -> function : 1
first function shall -> create : 1
function shall create -> an : 1
shall create an -> object : 1
create an object -> from : 1
object from a -> we : 1
object from a -> string : 1
a we let -> it : 1
let it sleep -> for : 1
it sleep for -> seconds : 1
for seconds to -> simulate : 1
seconds to simulate -> that : 1
simulate that string -> creation : 1
that string creation -> is : 1
string creation is -> static : 1
creation is static -> string : 1
is static string -> char : 1
static string char -> create : 1
string char create -> return : 1
char create return -> next : 1
create return next -> function : 1
return next function -> accepts : 1
return next function -> will : 1
next function accepts -> two : 1
accepts two string -> objects : 1
two string objects -> as : 1
string objects as -> arguments : 1
objects as arguments -> and : 1
arguments and returns -> their : 1
arguments and returns -> if : 1
their we give -> it : 1
give it wait -> time : 1
it wait time -> to : 1
wait time to -> simulate : 1
time to simulate -> that : 1
simulate that this -> is : 1
static string string -> const : 1
static string string -> twice : 1
string const string -> concat : 1
const string concat -> return : 1
string concat return -> a : 1
concat return a -> last : 1
return a last -> function : 1
a last function -> accepts : 1
last function accepts -> a : 1
string and concatenates -> it : 1
and concatenates it -> with : 1
concatenates it with -> it : 1
it with it -> shall : 1
with it shall -> take : 1
shall take seconds -> to : 1
take seconds to -> do : 1
take seconds to -> note : 1
take seconds to -> get : 1
seconds to do -> static : 1
to do static -> string : 1
do static string -> string : 1
string string twice -> return : 1
string twice return -> s : 1
twice return s -> could : 1
return s could -> now : 1
s could now -> already : 1
could now already -> use : 1
now already use -> those : 1
already use those -> a : 1
use those a -> serial : 1
those a serial -> but : 1
a serial but -> we : 1
serial but we -> want : 1
get some elegant -> automatic : 1
some elegant automatic -> so : 1
elegant automatic so -> implement : 1
automatic so implement -> some : 1
so implement some -> helpers : 1
implement some helpers -> for : 1
some helpers for -> the : 1
helpers for the -> following : 1
for the following -> three : 1
following three functions -> look : 1
three functions look -> really : 1
functions look really -> accepts : 1
look really accepts -> a : 1
really accepts a -> function : 1
returns a callable -> object : 3
returns a callable -> which : 1
a callable object -> that : 5
callable object that -> captures : 2
callable object that -> it : 1
callable object that -> returns : 1
callable object that -> again : 1
that captures we -> can : 1
captures we can -> call : 1
can call this -> callable : 1
can call this -> might : 1
can call this -> is : 1
call this callable -> object : 1
this callable object -> with : 1
callable object with -> any : 1
object with any -> number : 1
with any number -> of : 2
any number of -> and : 1
any number of -> callable : 1
it will capture -> those : 1
will capture those -> together : 1
capture those together -> with : 1
those together with -> in : 1
together with in -> another : 2
with in another -> callable : 2
in another callable -> object : 1
in another callable -> that : 1
another callable object -> which : 1
callable object which -> it : 1
object which it -> returns : 1
which it returns -> to : 1
which it returns -> captured : 1
it returns to -> this : 1
returns to this -> last : 1
to this last -> callable : 1
this last callable -> object : 1
last callable object -> can : 1
callable object can -> be : 2
callable object can -> then : 1
be called without -> it : 2
called without it -> does : 2
without it does -> then : 2
it does then -> call : 2
does then call -> asynchronously : 1
does then call -> all : 1
then call asynchronously -> with : 1
call asynchronously with -> all : 1
asynchronously with all -> the : 1
all the template -> static : 1
the template static -> auto : 1
return return next -> function : 1
next function will -> be : 1
function will be -> used : 1
will be used -> by : 1
function we declare -> in : 1
we declare in -> the : 1
declare in the -> next : 1
next step it -> accepts : 1
step it accepts -> a : 1
function and captures -> it : 1
and captures it -> in : 1
captures it in -> a : 1
that it that -> object : 1
it that object -> can : 1
that object can -> be : 1
be called with -> a : 1
be called with -> any : 1
be called with -> the : 1
called with a -> number : 1
with a number -> of : 1
number of future -> it : 1
of future it -> will : 1
future it will -> then : 1
will then call -> on : 1
then call on -> all : 1
call on all -> the : 1
all the apply -> to : 1
the apply to -> them : 1
apply to them -> and : 1
them and return -> its : 1
and return its -> template : 1
return its template -> static : 1
its template static -> auto : 1
return last helper -> function : 1
last helper function -> does : 1
last helper function -> accepts : 1
helper function does -> also : 1
accept a function -> it : 1
function it returns -> a : 1
that captures that -> callable : 1
captures that callable -> object : 1
that callable object -> can : 1
that callable object -> finally : 1
called with any -> number : 1
number of callable -> objects : 1
of callable objects -> as : 1
callable objects as -> which : 1
objects as which -> it : 1
as which it -> returns : 1
it returns captured -> together : 1
returns captured together -> with : 1
captured together with -> in : 1
another callable that -> final : 1
callable that final -> callable : 1
that final callable -> object : 1
final callable object -> can : 1
object can then -> be : 1
then be called -> without : 1
then call all -> the : 1
call all the -> callable : 1
all the callable -> objects : 1
the callable objects -> captured : 1
callable objects captured -> in : 1
objects captured in -> the : 1
the these return -> futures : 1
these return futures -> which : 1
return futures which -> need : 1
futures which need -> to : 1
to be unwrapped -> with : 1
be unwrapped with -> the : 1
unwrapped with the -> and : 1
the and actual -> application : 1
and actual application -> of : 1
actual application of -> the : 1
of the real -> function : 1
the real function -> on : 1
real function on -> the : 1
on the real -> values : 1
the real values -> from : 1
real values from -> the : 1
from the futures -> does : 1
the futures does -> again : 1
futures does again -> happen : 1
does again happen -> asynchronously : 1
again happen asynchronously -> using : 1
happen asynchronously using -> template : 1
asynchronously using template -> static : 1
using template static -> auto : 1
return return that -> was : 1
return that was -> maybe : 1
that was maybe -> kind : 1
was maybe kind -> of : 1
maybe kind of -> a : 1
of a crazy -> ride : 1
a crazy ride -> that : 1
crazy ride that -> was : 1
ride that was -> slightly : 1
that was slightly -> reminiscent : 1
was slightly reminiscent -> of : 1
slightly reminiscent of -> the : 1
reminiscent of the -> movie : 1
of the movie -> because : 1
the movie because -> of : 1
movie because of -> the : 1
the lambda expressions -> that : 1
lambda expressions that -> return : 1
expressions that return -> lambda : 1
return lambda we -> will : 1
lambda we will -> have : 1
a very detailed -> look : 1
very detailed look -> at : 1
at this now -> take : 1
this now take -> the : 1
now take the -> functions : 1
take the functions -> and : 1
functions and and -> make : 1
and and make -> them : 1
and make them -> the : 1
make them the -> function : 1
them the function -> makes : 1
the function makes -> a : 1
function makes a -> completely : 1
makes a completely -> normal : 1
a completely normal -> function : 1
completely normal function -> wait : 1
normal function wait -> for : 1
function wait for -> future : 1
wait for future -> arguments : 1
for future arguments -> and : 1
future arguments and -> return : 1
arguments and return -> a : 1
return a future -> it : 1
a future it -> is : 1
future it is -> kind : 1
of a translating -> wrapper : 1
a translating wrapper -> from : 1
translating wrapper from -> the : 1
wrapper from the -> synchronous : 1
from the synchronous -> to : 1
the synchronous to -> the : 1
synchronous to the -> asynchronous : 1
to the asynchronous -> we : 1
the asynchronous we -> apply : 1
asynchronous we apply -> it : 1
we must on -> because : 1
must on because -> it : 1
on because it -> shall : 1
because it shall -> return : 1
shall return a -> but : 1
will feed it -> with : 1
it with real -> values : 1
with real values -> instead : 1
real values instead -> of : 1
of the task -> dependency : 1
the task dependency -> chain : 1
task dependency chain -> must : 1
dependency chain must -> begin : 1
chain must begin -> with : 1
must begin with -> int : 1
begin with int -> auto : 1
with int auto -> pcreate : 1
int auto pcreate -> auto : 1
auto pcreate auto -> pconcat : 1
pcreate auto pconcat -> auto : 1
auto pconcat auto -> ptwice : 1
pconcat auto ptwice -> we : 1
auto ptwice we -> have : 1
ptwice we have -> automatically : 1
we have automatically -> parallelizing : 1
have automatically parallelizing -> have : 1
automatically parallelizing have -> the : 1
parallelizing have the -> same : 1
the same names -> as : 1
same names as -> the : 1
names as the -> original : 1
as the original -> synchronous : 1
the original synchronous -> but : 1
original synchronous but -> with : 1
synchronous but with -> a : 1
with a let -> us : 1
a let us -> now : 1
let us now -> set : 1
us now set -> up : 1
now set up -> a : 1
set up a -> complex : 1
up a complex -> example : 1
a complex example -> dependency : 1
complex example dependency -> we : 1
example dependency we -> create : 1
dependency we create -> the : 1
create the strings -> and : 2
strings and which -> we : 2
and which we -> immediately : 1
and which we -> concatenate : 1
which we immediately -> concatenate : 1
we immediately concatenate -> to : 1
immediately concatenate to -> bar : 1
concatenate to bar -> this : 1
to bar this -> string : 1
bar this string -> is : 1
this string is -> then : 1
string is then -> concatenated : 1
is then concatenated -> with : 1
then concatenated with -> itself : 1
concatenated with itself -> using : 1
with itself using -> then : 1
itself using then -> we : 1
using then we -> create : 1
which we concatenate -> to : 1
we concatenate to -> that : 1
concatenate to that -> we : 1
that we concatenate -> the : 1
we concatenate the -> results : 1
concatenate the results -> to : 1
the results to -> bar : 1
results to bar -> foo : 1
to bar foo -> bar : 1
that the result -> shall : 1
the result shall -> be : 1
result shall be -> saved : 1
shall be saved -> in : 1
the variable then -> in : 1
variable then in -> order : 1
then in order -> to : 1
to start the -> computation : 1
start the computation -> and : 1
the computation and -> wait : 1
computation and wait -> for : 1
for its return -> in : 1
its return in -> order : 1
return in order -> to : 1
order to also -> print : 1
to also print -> no : 1
also print no -> computation : 1
print no computation -> is : 1
no computation is -> done : 1
computation is done -> before : 1
is done before -> we : 1
before we call -> and : 1
call and after -> this : 1
and after this -> all : 1
after this all -> the : 1
this all the -> magic : 1
all the magic -> auto : 1
the magic auto -> result : 1
magic auto result -> cout : 1
auto result cout -> nothing : 1
result cout nothing -> executed : 1
cout nothing executed -> cout : 1
nothing executed cout -> and : 1
executed cout and -> running : 1
shows that all -> the : 1
all the calls -> are : 1
the calls are -> performed : 1
calls are performed -> at : 1
are performed at -> the : 1
performed at the -> same : 1
same and then -> the : 1
then the other -> calls : 1
the other calls -> are : 1
other calls are -> it : 1
calls are it -> looks : 1
are it looks -> as : 1
it looks as -> if : 1
looks as if -> they : 1
they were scheduled -> the : 1
were scheduled the -> whole : 1
scheduled the whole -> program : 1
program runs for -> if : 1
runs for if -> the : 1
if the steps -> were : 1
the steps were -> not : 1
steps were not -> performed : 1
were not performed -> in : 1
not performed in -> it : 1
performed in it -> would : 1
it would take -> seconds : 1
would take seconds -> to : 1
seconds to note -> that : 1
need a system -> with : 1
a system with -> at : 1
system with at -> least : 1
with at least -> four : 1
at least four -> cpu : 1
least four cpu -> cores : 1
cpu cores to -> be : 1
cores to be -> able : 1
able to perform -> all : 1
perform all calls -> at : 1
all calls at -> the : 1
calls at the -> same : 1
same if the -> system : 1
if the system -> had : 1
if the system -> runs : 1
the system had -> fewer : 1
system had fewer -> cpu : 1
had fewer cpu -> then : 1
fewer cpu then -> some : 1
cpu then some -> calls : 1
then some calls -> would : 1
some calls would -> have : 1
calls would have -> to : 1
have to share -> cpus : 1
to share cpus -> which : 1
share cpus which -> would : 1
cpus which would -> of : 1
which would of -> course : 1
would of course -> then : 1
of course then -> setup : 1
course then setup -> nothing : 1
then setup nothing -> executed : 1
setup nothing executed -> create : 1
nothing executed create -> create : 1
executed create create -> create : 1
create create create -> create : 1
create create create -> concat : 1
create create concat -> concat : 1
create concat concat -> bar : 1
concat concat bar -> concat : 1
concat bar concat -> bar : 1
bar concat bar -> foo : 1
concat bar foo -> bar : 1
foo bar that -> foo : 1
bar that foo -> bar : 1
that foo bar -> foo : 1
foo bar foo -> bar : 1
bar this it -> plain : 1
this it plain -> serial : 1
it plain serial -> version : 1
plain serial version -> of : 1
serial version of -> this : 1
this program without -> any : 1
without any and -> magic : 1
any and magic -> would : 1
and magic would -> look : 1
magic would look -> like : 1
like the string -> result : 1
the string result -> cout : 1
string result cout -> result : 1
result cout result -> this : 1
result cout result -> parallelized : 1
cout result this -> we : 1
result this we -> helper : 1
this we helper -> and : 1
we helper and -> that : 1
helper and that -> helped : 1
and that helped -> us : 1
that helped us -> create : 1
helped us create -> new : 1
us create new -> functions : 1
create new functions -> from : 1
new functions from -> and : 1
functions from and -> we : 1
from and we -> called : 1
and we called -> those : 1
we called those -> new : 1
called those new -> asynchronous : 1
those new asynchronous -> functions : 1
new asynchronous functions -> and : 1
asynchronous functions and -> us : 1
functions and us -> first : 1
and us first -> ignore : 1
us first ignore -> the : 1
ignore the complexity -> of : 1
the complexity of -> the : 1
of the implementation -> of : 1
implementation of and -> in : 1
of and in -> order : 1
order to first -> have : 1
look what this -> got : 1
what this got -> serial : 1
this got serial -> version : 1
got serial version -> looks : 1
serial version looks -> similar : 1
version looks similar -> to : 1
version looks similar -> result : 1
looks similar to -> this : 1
similar to this -> result : 1
to this result -> cout : 1
this result cout -> result : 1
cout result parallelized -> version : 1
result parallelized version -> looks : 1
parallelized version looks -> similar : 1
looks similar result -> cout : 1
similar result cout -> now : 1
result cout now -> we : 1
cout now we -> get : 1
now we get -> at : 1
we get at -> the : 1
at the complicated -> the : 1
the complicated the -> type : 1
complicated the type -> of : 1
of the parallelized -> result : 1
the parallelized result -> is : 1
parallelized result is -> not : 1
result is not -> but : 1
not but a -> callable : 1
but a callable -> object : 1
object that returns -> a : 1
returns a on -> which : 1
call this might -> indeed : 1
this might indeed -> look : 1
might indeed look -> crazy : 1
indeed look crazy -> at : 1
look crazy at -> how : 1
crazy at how -> and : 1
at how and -> did : 1
how and did -> we : 1
and did we -> exactly : 1
did we exactly -> end : 1
we exactly end -> up : 1
exactly end up -> with : 1
up with callable -> objects : 1
with callable objects -> that : 1
callable objects that -> return : 1
callable objects that -> we : 1
objects that return -> the : 1
that return the -> problem : 1
return the problem -> with : 1
problem with our -> and : 1
problem with our -> hash : 1
with our and -> methods : 1
our and methods -> that : 1
methods that they -> are : 1
they are we -> made : 1
are we made -> them : 1
we made them -> artificially : 1
made them artificially -> because : 1
them artificially because -> we : 1
artificially because we -> tried : 1
because we tried -> to : 1
tried to model -> real : 1
to model real -> life : 1
model real life -> tasks : 1
real life tasks -> that : 1
life tasks that -> consume : 1
tasks that consume -> a : 1
that consume a -> lot : 1
consume a lot -> of : 1
lot of cpu -> but : 1
of cpu but -> we : 1
cpu but we -> identified : 1
but we identified -> that : 1
we identified that -> the : 1
identified that the -> dependency : 1
that the dependency -> tree : 1
the dependency tree -> which : 1
dependency tree which -> describes : 1
tree which describes -> the : 1
which describes the -> data : 1
describes the data -> flow : 1
the data flow -> has : 1
data flow has -> independent : 1
flow has independent -> parts : 1
has independent parts -> that : 1
independent parts that -> could : 1
parts that could -> be : 1
could be executed -> in : 1
executed in have -> a : 1
look at two -> example : 1
at two example -> the : 1
two example the -> left : 1
example the left -> we : 1
the left we -> all : 1
left we all -> the : 1
we all the -> function : 1
function calls have -> to : 1
calls have to -> be : 1
be done one -> after : 1
done one after -> because : 1
one after because -> we : 1
after because we -> have : 1
because we have -> only : 1
because we have -> seen : 1
have only a -> single : 1
a single that -> that : 1
single that that -> when : 1
that that when -> costs : 1
that when costs -> costs : 1
when costs costs -> seconds : 1
costs costs seconds -> and : 1
costs seconds and -> costs : 1
seconds and costs -> it : 1
and costs it -> will : 1
costs it will -> take : 1
will take seconds -> to : 1
seconds to get -> the : 1
get the end -> the : 1
end the right -> we : 1
right we see -> a : 1
see a where -> as : 1
a where as -> much : 1
where as much -> is : 1
as much is -> done : 1
much is done -> in : 1
is done in -> parallel : 1
done in parallel -> as : 1
in parallel as -> the : 1
parallel as the -> dependencies : 1
as the dependencies -> between : 1
between the function -> calls : 1
function calls in -> an : 1
calls in an -> ideal : 1
in an ideal -> world : 1
an ideal world -> with : 1
ideal world with -> four : 1
world with four -> we : 1
with four we -> can : 1
four we can -> create : 1
can create all -> substrings : 1
create all substrings -> at : 1
all substrings at -> the : 1
substrings at the -> same : 1
same then concatenate -> them : 1
then concatenate them -> and : 1
concatenate them and -> so : 1
them and so -> the : 1
so the minimal -> time : 1
the minimal time -> to : 1
minimal time to -> get : 1
time to get -> the : 1
get the result -> with : 1
the result with -> an : 1
result with an -> optimal : 1
with an optimal -> parallel : 1
an optimal parallel -> schedule : 1
optimal parallel schedule -> is : 1
parallel schedule is -> we : 1
schedule is we -> cannot : 1
is we cannot -> go : 1
we cannot go -> faster : 1
cannot go faster -> if : 1
go faster if -> we : 1
faster if we -> cannot : 1
if we cannot -> make : 1
we cannot make -> the : 1
cannot make the -> function : 1
make the function -> calls : 1
function calls themselves -> with : 1
calls themselves with -> just : 1
themselves with just -> four : 1
with just four -> cpu : 1
just four cpu -> cores : 1
cpu cores we -> can : 1
cores we can -> execution : 1
we can execution -> we : 1
can execution we -> measurably : 1
execution we measurably -> achieved : 1
we measurably achieved -> the : 1
measurably achieved the -> optimal : 1
achieved the optimal -> how : 1
the optimal how -> did : 1
optimal how did -> it : 1
how did it -> could : 1
did it could -> naively : 1
it could naively -> write : 1
could naively write -> the : 1
naively write the -> following : 1
the following a -> auto : 1
the following a -> path : 1
following a auto -> b : 1
auto b auto -> c : 1
b auto c -> auto : 1
auto c auto -> d : 1
auto d auto -> e : 1
d auto e -> auto : 1
auto e auto -> f : 1
e auto f -> auto : 1
auto h is -> a : 1
h is a -> good : 1
a good start -> for : 1
good start for -> and : 1
start for and -> which : 1
for and which -> represent : 1
and which represent -> the : 1
represent the four -> substrings : 1
the four substrings -> to : 1
four substrings to -> begin : 1
substrings to begin -> these : 1
to begin these -> are : 1
begin these are -> created : 1
these are created -> the : 1
are created the -> this : 1
created the this -> code : 1
the this code -> blocks : 1
code blocks on -> the : 1
on the line -> where : 1
the line where -> we : 1
line where we -> initialize : 1
where we initialize -> in : 1
we initialize in -> order : 1
initialize in order -> to : 1
order to concatenate -> and : 1
to concatenate and -> we : 1
concatenate and we -> need : 1
to call both -> of : 1
call both of -> which : 1
both of which -> until : 1
of which until -> these : 1
which until these -> values : 1
until these values -> are : 1
values are this -> is : 1
a good because -> the : 1
good because the -> parallelization : 1
because the parallelization -> stops : 1
the parallelization stops -> being : 1
parallelization stops being -> parallel : 1
stops being parallel -> on : 1
being parallel on -> the : 1
parallel on the -> first : 1
first we need -> a : 1
need a better -> so : 1
a better so -> let : 1
better so let -> us : 1
so let us -> roll : 1
let us roll -> out : 1
us roll out -> the : 1
roll out the -> complicated : 1
out the complicated -> helper : 1
the complicated helper -> functions : 1
complicated helper functions -> we : 1
helper functions we -> the : 1
helper functions we -> for : 1
functions we the -> first : 1
one is static -> auto : 1
is static auto -> return : 1
a function then -> we : 1
do the auto -> auto : 1
auto auto int -> result : 1
auto int result -> is : 1
int result is -> our : 1
result is our -> asynchronous : 1
is our asynchronous -> version : 1
our asynchronous version -> of : 1
asynchronous version of -> it : 1
version of it -> can : 1
of it can -> be : 1
the same arguments -> like : 1
same arguments like -> because : 1
arguments like because -> it : 1
like because it -> then : 1
because it then -> it : 1
it then it -> returns : 1
a callable which -> we : 1
callable which we -> save : 1
save in now -> captures : 1
in now captures -> and : 1
now captures and -> the : 1
captures and the -> but : 1
and the but -> it : 1
but it did -> not : 1
did not call -> anything : 1
not call anything -> this : 1
call anything this -> is : 1
anything this is -> just : 1
is just about -> the : 1
just about the -> we : 1
about the we -> call : 1
we call then -> we : 1
call then we -> finally : 1
we finally get -> a : 1
finally get a -> because : 1
get a because -> does : 1
a because does -> the : 1
because does the -> in : 1
does the in -> that : 1
in that the -> semantic : 1
that the semantic -> meaning : 1
the semantic meaning -> the : 1
semantic meaning the -> captured : 1
meaning the captured -> function : 1
the captured function -> and : 1
captured function and -> the : 1
the and throw -> them : 1
and throw them -> together : 1
throw them together -> into : 1
them together into -> inner : 1
together into inner -> lambda : 1
into inner lambda -> expression : 1
expression that does -> not : 1
accept any arguments -> gives : 1
any arguments gives -> us : 1
arguments gives us -> an : 1
gives us an -> we : 1
us an we -> can : 1
up work for -> parallel : 1
work for parallel -> dispatch : 1
for parallel dispatch -> but : 1
parallel dispatch but -> do : 1
dispatch but do -> not : 1
have to that -> we : 1
that we follow -> the : 1
we follow the -> same : 1
follow the same -> principle : 1
the same principle -> in : 1
same principle in -> the : 1
principle in the -> much : 1
in the much -> more : 1
complicated function static -> auto : 1
does also first -> return : 1
also first return -> a : 1
first return a -> function : 1
return a function -> because : 1
a function because -> it : 1
function because it -> accepts : 1
because it accepts -> the : 1
accepts the same -> then : 1
same then that -> function : 1
then that function -> returns : 1
that function returns -> a : 1
function returns a -> callable : 1
object that again -> accepts : 1
that again accepts -> no : 1
again accepts no -> and : 1
accepts no and -> then : 1
no and then -> that : 1
and then that -> callable : 1
then that callable -> object : 1
callable object finally -> differs : 1
object finally differs -> from : 1
finally differs from -> the : 1
the other helper -> does : 1
other helper does -> the : 1
helper does the -> line : 1
does the line -> the : 1
the line the -> part : 1
line the part -> that : 1
the part that -> all : 1
part that all -> arguments : 1
that all arguments -> that : 1
all arguments that -> are : 1
arguments that are -> saved : 1
that are saved -> in : 1
saved in pack -> are : 1
in pack are -> assumed : 1
pack are assumed -> to : 1
are assumed to -> be : 1
assumed to be -> callable : 1
to be callable -> objects : 1
be callable objects -> the : 1
callable objects the -> ones : 1
objects the ones -> we : 1
the ones we -> are : 1
ones we are -> creating : 1
we are creating -> all : 1
are creating all -> the : 1
creating all the -> and : 1
and so they -> are : 1
so they are -> all : 1
are all called -> without : 1
all called without -> those : 1
called without those -> callable : 1
without those callable -> objects : 1
those callable objects -> that : 1
objects that we -> are : 1
we are producing -> all : 1
are producing all -> the : 1
producing all the -> time : 1
the time future -> on : 1
time future on -> which : 1
future on which -> we : 1
comes into static -> auto : 1
into static auto -> return : 1
return return just -> transforms : 1
return just transforms -> a : 1
just transforms a -> function : 1
transforms a function -> into : 1
a function into -> a : 1
function into a -> function : 1
object that accepts -> a : 1
range of this -> function : 1
object does then -> on : 1
does then on -> of : 1
then on of -> them : 1
on of them -> and : 1
and then finally -> forwards : 1
then finally forwards -> them : 1
finally forwards them -> to : 1
them to your -> time : 1
to your time -> to : 1
time to digest -> all : 1
to digest all -> of : 1
digest all of -> when : 1
all of when -> we : 1
of when we -> used : 1
we used this -> in : 1
used this in -> our : 1
this in our -> main : 1
our main then -> the : 1
main then the -> result : 1
then the result -> call : 1
the result call -> chain : 1
result call chain -> did : 1
call chain did -> just : 1
chain did just -> construct : 1
did just construct -> a : 1
just construct a -> object : 1
construct a object -> that : 1
a object that -> contains : 1
object that contains -> all : 1
contains all functions -> and : 1
all functions and -> all : 1
functions and all -> no : 1
and all no -> call : 1
all no call -> at : 1
no call at -> this : 1
call at this -> point : 1
this point when -> we : 1
point when we -> called : 1
called we a -> little : 1
we a little -> of : 1
we a little -> tool : 3
a little of -> and : 1
little of and -> calls : 1
of and calls -> that : 1
and calls that -> come : 1
calls that come -> just : 1
that come just -> in : 1
come just in -> the : 1
just in the -> right : 1
the right order -> to : 1
right order to -> not : 1
to not block -> each : 1
not block each -> in : 1
block each in -> no : 1
each in no -> call : 1
in no call -> happens : 1
no call happens -> before : 1
call happens before -> not : 1
happens before not -> all : 1
before not all -> calls : 1
not all calls -> have : 1
been the we -> can : 1
can finally call -> on : 1
finally call on -> the : 1
on the future -> value : 1
the future value -> that : 1
future value that -> and : 1
value that and -> there : 1
that and there -> we : 1
and there we -> have : 1
there we have -> our : 1
we have our -> final : 1
have our final -> this : 1
our final this -> we : 1
final this we -> will : 1
following a path -> paths : 1
reduces folder substituting -> duplicates : 1
folder substituting duplicates -> with : 1
duplicates with with -> filesystem : 1
with with filesystem -> paths : 1
with filesystem paths -> is : 1
filesystem paths is -> always : 1
paths is always -> tedious : 1
is always tedious -> if : 1
always tedious if -> we : 1
have a library -> that : 1
a library that -> helps : 1
library that helps -> us : 1
helps us because -> there : 1
us because there -> are : 1
are many conditions -> that : 1
many conditions that -> we : 1
conditions that we -> need : 1
need to paths -> are : 1
to paths are -> some : 1
paths are some -> are : 1
are some are -> and : 1
some are and -> maybe : 1
are and maybe -> they : 1
and maybe they -> are : 1
maybe they are -> not : 1
not even straightforward -> because : 1
even straightforward because -> contain : 1
straightforward because contain -> and : 1
because contain and -> at : 1
contain and at -> the : 1
and at the -> same : 1
the same different -> operating : 1
same different operating -> systems : 1
different operating systems -> use : 1
operating systems use -> the : 1
systems use the -> slash : 1
use the slash -> to : 1
the slash to -> separate : 1
slash to separate -> directories : 1
to separate directories -> and : 1
separate directories and -> different : 1
directories and different -> unix : 1
and different unix -> or : 1
different unix or -> the : 1
unix or the -> backslash : 1
or the backslash -> and : 1
the backslash and -> of : 1
backslash and of -> course : 1
and of course -> there : 1
and of course -> different : 1
of course there -> are : 1
course there are -> different : 1
are different types -> of : 1
different types of -> every : 1
types of every -> other : 1
of every other -> program : 1
every other program -> that : 1
other program that -> handles : 1
program that handles -> things : 1
that handles things -> needs : 1
handles things needs -> such : 1
things needs such -> it : 1
needs such it -> is : 1
it is great -> to : 1
is great to -> have : 1
great to have -> the : 1
have the new -> filesystem : 1
the new filesystem -> the : 1
new filesystem the -> the : 1
filesystem the the -> best : 1
the the best -> thing : 1
same way for -> different : 1
way for different -> operating : 1
for different operating -> so : 1
different operating so -> we : 1
operating so we -> have : 1
to write different -> code : 1
write different code -> for : 1
different code for -> versions : 1
code for versions -> of : 1
for versions of -> our : 1
versions of our -> programs : 1
of our programs -> that : 1
our programs that -> support : 1
programs that support -> different : 1
that support different -> operating : 1
support different operating -> this : 1
different operating this -> we : 1
operating this we -> will : 1
we will how -> the : 1
will how the -> class : 1
how the class -> because : 1
the class because -> it : 1
class because it -> is : 1
it is most -> central : 1
is most central -> to : 1
most central to -> anything : 1
central to anything -> else : 1
to anything else -> in : 1
anything else in -> this : 1
else in this -> we : 1
see how powerful -> but : 1
how powerful but -> yet : 1
powerful but yet -> simple : 1
but yet simple -> to : 1
yet simple to -> use : 1
use and classes -> while : 1
and classes while -> we : 1
classes while we -> do : 1
while we do -> useful : 1
we do useful -> things : 1
do useful things -> with : 1
useful things with -> in : 1
things with in -> the : 1
with in the -> we : 1
we will simple -> example : 1
will simple example -> tools : 1
simple example tools -> that : 1
example tools that -> do : 1
tools that do -> some : 1
that do some -> tasks : 1
do some tasks -> related : 1
some tasks related -> to : 1
tasks related to -> the : 1
to the from -> this : 1
the from this -> it : 1
from this it -> will : 1
will be easy -> to : 1
easy to build -> more : 1
to build more -> complex : 1
build more complex -> a : 1
more complex a -> path : 1
complex a path -> start : 1
a path start -> this : 1
path start this -> chapter : 1
start this chapter -> with : 1
this chapter with -> a : 1
chapter with a -> very : 1
simple example around -> the : 1
example around the -> class : 1
around the class -> and : 1
the class and -> a : 1
the class and -> the : 1
class and a -> helper : 1
and a helper -> function : 1
function that intelligently -> normalizes : 1
that intelligently normalizes -> filesystem : 1
intelligently normalizes filesystem -> result : 1
normalizes filesystem result -> of : 1
filesystem result of -> this : 1
result of this -> recipe : 1
recipe is a -> little : 1
application that takes -> any : 1
that takes any -> filesystem : 1
takes any filesystem -> path : 1
any filesystem path -> and : 1
filesystem path and -> returns : 1
path and returns -> us : 1
path and returns -> the : 1
the same path -> in : 1
the same path -> after : 1
the same path -> on : 1
same path in -> normalized : 1
path in normalized -> normalized : 1
in normalized normalized -> means : 1
normalized normalized means -> that : 1
normalized means that -> we : 1
get an absolute -> path : 1
an absolute path -> that : 2
absolute path that -> contains : 1
absolute path that -> is : 1
path that contains -> no : 1
that contains no -> or : 1
contains no or -> implementing : 1
no or implementing -> we : 1
or implementing we -> will : 1
implementing we will -> also : 1
also see what -> details : 1
see what details -> we : 1
what details we -> need : 1
details we need -> to : 1
need to pay -> attention : 1
to pay attention -> to : 1
pay attention to -> when : 1
attention to when -> working : 1
to when working -> with : 1
when working with -> this : 1
working with this -> basic : 1
with this basic -> part : 1
this basic part -> of : 1
basic part of -> the : 1
of the filesystem -> to : 1
of the filesystem -> return : 1
the filesystem to -> do : 1
filesystem to do -> this : 1
that just accepts -> a : 1
just accepts a -> filesystem : 1
just accepts a -> instance : 1
accepts a filesystem -> path : 1
a filesystem path -> as : 1
a filesystem path -> the : 1
a filesystem path -> on : 1
filesystem path as -> a : 1
path as a -> argument : 1
as a argument -> and : 1
a argument and -> then : 1
argument and then -> prints : 1
then prints it -> in : 1
prints it in -> normalized : 1
it in normalized -> come : 1
it in normalized -> const : 1
in normalized come -> and : 1
normalized come and -> then : 1
come and then -> we : 1
namespace the main -> we : 1
we check user -> provided : 1
check user provided -> a : 3
user provided a -> if : 1
user provided a -> path : 1
user provided a -> argument : 1
user provided a -> filesystem : 1
user provided a -> directory : 1
provided a if -> that : 1
a if that -> is : 1
not the we -> error : 1
not the we -> just : 1
the we error -> out : 1
we error out -> and : 1
error out and -> print : 1
out and print -> how : 1
out and print -> a : 1
and print how -> to : 1
and print how -> many : 1
print how to -> use : 1
use the if -> a : 1
use the if -> it : 1
if a path -> was : 1
a path was -> we : 1
path was we -> instantiate : 1
was we instantiate -> a : 1
a object from -> int : 1
a object from -> a : 1
object from int -> char : 1
from int char -> if : 1
cout return const -> path : 1
return const path -> dir : 1
const path dir -> we : 1
path dir we -> can : 1
dir we can -> instantiate : 1
can instantiate objects -> from : 1
instantiate objects from -> any : 1
objects from any -> we : 1
from any we -> cannot : 1
any we cannot -> be : 1
cannot be sure -> if : 1
be sure if -> the : 1
sure if the -> path : 1
if the path -> really : 2
the path really -> exists : 1
the path really -> up : 1
path really exists -> on : 1
really exists on -> the : 1
exists on the -> filesystem : 1
on the filesystem -> of : 1
the filesystem of -> the : 1
filesystem of the -> in : 1
do we can -> use : 1
it we simply -> error : 1
we simply error -> out : 1
simply error out -> if : 1
out if cout -> dir : 1
if cout dir -> does : 5
cout dir does -> not : 5
dir does not -> return : 5
not return at -> this : 1
return at this -> we : 1
we are pretty -> sure : 1
are pretty sure -> that : 1
pretty sure that -> the : 1
sure that the -> user : 2
user provided some -> path : 1
provided some path -> knowing : 1
some path knowing -> can : 1
path knowing can -> ask : 1
knowing can ask -> for : 1
can ask for -> a : 1
ask for a -> normalized : 1
for a normalized -> version : 1
a normalized version -> of : 1
normalized version of -> which : 1
version of which -> we : 1
we then returns -> us : 1
us another we -> could : 1
another we could -> print : 1
we could print -> it : 1
could print it -> but : 1
print it but -> the : 1
it but the -> overload : 1
but the overload -> of : 1
of the operator -> surrounds : 1
the operator surrounds -> paths : 1
operator surrounds paths -> with : 1
surrounds paths with -> quotation : 2
paths with quotation -> in : 1
paths with quotation -> which : 1
with quotation in -> order : 1
quotation in order -> to : 1
to avoid we -> can : 1
avoid we can -> print : 1
print a path -> through : 1
a path through -> its : 1
path through its -> or : 1
through its or -> cout : 1
its or cout -> compile : 1
or cout compile -> the : 1
cout compile the -> program : 1
program and play -> with : 1
and play with -> when : 1
play with when -> we : 1
when we execute -> it : 1
we execute it -> in : 1
execute it in -> my : 1
it in my -> home : 1
in my home -> directory : 2
my home directory -> on : 1
my home directory -> but : 1
home directory on -> the : 1
directory on the -> relative : 1
directory on the -> command : 1
on the relative -> path : 1
the relative path -> it : 1
relative path it -> will : 1
path it will -> print : 1
print the full -> absolute : 1
the full absolute -> src : 1
full absolute src -> we : 1
absolute src we -> run : 1
src we run -> the : 1
program in my -> home : 1
home directory but -> give : 1
directory but give -> it : 1
it a quirky -> relative : 1
a quirky relative -> path : 1
quirky relative path -> description : 1
relative path description -> that : 1
path description that -> first : 1
description that first -> enters : 1
that first enters -> my : 1
first enters my -> then : 1
enters my then -> steps : 1
my then steps -> out : 1
then steps out -> of : 1
steps out of -> it : 1
it again using -> then : 1
again using then -> enters : 1
using then enters -> the : 1
then enters the -> folder : 1
enters the folder -> and : 1
the folder and -> steps : 1
folder and steps -> out : 1
and steps out -> again : 1
steps out again -> in : 1
out again in -> order : 1
order to finally -> enter : 1
to finally enter -> the : 1
finally enter the -> the : 1
enter the the -> program : 1
the program prints -> the : 1
program prints the -> path : 1
prints the path -> as : 1
the path as -> it : 1
path as it -> a : 1
as it a -> starter : 1
it a starter -> on : 1
a starter on -> this : 1
starter on this -> recipe : 1
on this recipe -> fairly : 1
this recipe fairly -> short : 1
recipe fairly short -> and : 1
fairly short and -> we : 1
short and we -> initialized : 1
and we initialized -> a : 1
initialized a object -> from : 1
contains a filesystem -> path : 1
filesystem path the -> plays : 1
path the plays -> a : 1
the plays a -> very : 1
plays a very -> central : 1
very central role -> whenever : 1
central role whenever -> we : 1
role whenever we -> use : 1
whenever we use -> the : 1
use the filesystem -> most : 1
the filesystem most -> of : 1
filesystem most of -> the : 1
most of the -> functions : 1
functions and classes -> relate : 1
and classes relate -> to : 1
classes relate to -> we : 1
relate to we -> were : 1
to we were -> able : 1
path really up -> to : 1
really up to -> that : 1
up to that -> we : 1
that we could -> not : 1
we could not -> be : 1
could not be -> sure : 1
not be sure -> about : 1
be sure about -> because : 1
sure about because -> it : 1
about because it -> is : 1
possible to create -> objects : 1
to create objects -> that : 1
create objects that -> do : 1
objects that do -> not : 1
do not relate -> to : 1
not relate to -> an : 1
relate to an -> existing : 1
an existing filesystem -> just : 1
existing filesystem just -> accepts : 1
filesystem just accepts -> a : 1
accepts a instance -> and : 1
a instance and -> returns : 1
instance and returns -> if : 1
if it really -> the : 1
it really the -> function : 1
really the function -> is : 1
function is already -> able : 1
is already able -> to : 1
able to determine -> itself : 1
to determine itself -> if : 1
determine itself if -> we : 1
itself if we -> gave : 1
if we gave -> it : 1
gave it an -> absolute : 1
it an absolute -> or : 1
it an absolute -> path : 1
an absolute or -> a : 1
absolute or a -> relative : 1
or a relative -> which : 1
a relative which -> makes : 1
relative which makes -> it : 1
it very comfortable -> to : 1
very comfortable to -> we : 1
comfortable to we -> used : 1
to we used -> on : 1
we used on -> the : 1
used on the -> directory : 1
on the directory -> in : 1
the directory in -> order : 1
directory in order -> to : 1
print it in -> normalized : 1
in normalized const -> base : 1
normalized const base -> accepts : 1
const base accepts -> a : 1
base accepts a -> path : 1
accepts a path -> and : 1
a path and -> as : 1
path and as -> an : 1
and as an -> optional : 1
an optional second -> it : 1
optional second it -> accepts : 1
second it accepts -> another : 1
it accepts another -> the : 1
accepts another the -> second : 1
another the second -> path : 1
the second path -> is : 1
second path is -> prepended : 1
path is prepended -> to : 1
is prepended to -> path : 1
prepended to path -> relative : 1
to path relative -> after : 1
path relative after -> doing : 1
relative after doing -> tries : 1
after doing tries -> to : 1
doing tries to -> remove : 1
tries to remove -> any : 1
to remove any -> and : 1
remove any and -> path : 1
any and path -> we : 1
and path we -> used : 1
path we used -> the : 1
used the method -> on : 1
the method on -> the : 1
on the canonicalized -> the : 1
the canonicalized the -> reason : 1
canonicalized the reason -> for : 1
reason for this -> is : 1
that the overload -> of : 1
overload of for -> output : 1
of for output -> streams : 1
for output streams -> surrounds : 1
output streams surrounds -> paths : 1
streams surrounds paths -> with : 1
with quotation which -> we : 1
quotation which we -> always : 1
which we always -> throws : 1
we always throws -> a : 1
always throws a -> type : 1
throws a type -> the : 1
a type the -> path : 1
type the path -> we : 1
the path we -> want : 1
path we want -> to : 1
want to canonicalize -> does : 1
to canonicalize does -> not : 1
canonicalize does not -> in : 1
not in order -> to : 1
prevent we checked -> our : 1
we checked our -> filesystem : 1
checked our filesystem -> path : 1
our filesystem path -> with : 1
filesystem path with -> but : 1
path with but -> was : 1
with but was -> that : 1
but was that -> check : 1
was that check -> really : 1
that check really -> sufficient : 1
check really sufficient -> to : 1
really sufficient to -> avoid : 1
sufficient to avoid -> getting : 1
to avoid getting -> unhandled : 1
avoid getting unhandled -> and : 1
getting unhandled and -> can : 1
unhandled and can -> throw : 1
and can throw -> if : 1
can throw if -> those : 1
throw if those -> hit : 1
if those hit -> one : 1
those hit one -> could : 1
hit one could -> argue : 1
one could argue -> that : 1
could argue that -> the : 1
argue that the -> program : 1
program is doomed -> a : 1
is doomed a -> far : 1
doomed a far -> more : 1
a far more -> and : 1
far more and -> also : 1
more and also -> much : 1
and also much -> more : 1
also much more -> probable : 1
much more probable -> problem : 1
more probable problem -> would : 1
probable problem would -> occur : 1
problem would occur -> between : 1
would occur between -> us : 1
occur between us -> checking : 1
between us checking -> if : 1
us checking if -> the : 1
checking if the -> file : 1
checking if the -> variable : 1
checking if the -> user : 1
the file exists -> and : 1
file exists and -> canonicalizing : 1
exists and canonicalizing -> someone : 1
and canonicalizing someone -> else : 1
canonicalizing someone else -> renames : 1
someone else renames -> or : 1
else renames or -> deletes : 1
renames or deletes -> the : 1
or deletes the -> underlying : 1
deletes the underlying -> in : 1
underlying in that -> would : 1
in that would -> throw : 1
that would throw -> a : 1
would throw a -> although : 1
throw a although -> we : 1
a although we -> checked : 1
although we checked -> for : 1
we checked for -> the : 1
checked for the -> existence : 1
for the existence -> filesystem : 1
the existence filesystem -> functions : 1
existence filesystem functions -> have : 1
filesystem functions have -> an : 1
functions have an -> that : 1
have an that -> takes : 1
an that takes -> the : 1
that takes the -> same : 1
takes the same -> but : 1
same but also -> an : 1
but also an -> const : 1
also an const -> base : 1
an const base -> path : 1
const base path -> path : 1
base path path -> const : 1
path path const -> ec : 1
path const ec -> way : 1
const ec way -> we : 1
ec way we -> can : 1
we can choose -> if : 1
can choose if -> we : 1
if we surround -> our : 1
we surround our -> filesystem : 1
surround our filesystem -> function : 1
our filesystem function -> calls : 1
filesystem function calls -> with : 1
function calls with -> constructs : 1
calls with constructs -> or : 1
with constructs or -> check : 1
constructs or check -> the : 1
or check the -> errors : 1
check the errors -> note : 1
the errors note -> that : 1
errors note that -> this : 1
that this only -> changes : 1
this only changes -> the : 1
only changes the -> behavior : 1
changes the behavior -> of : 1
behavior of with -> and : 1
of with and -> without : 1
with and without -> the : 1
and without the -> more : 1
without the more -> fundamental : 1
the more fundamental -> for : 1
more fundamental for -> can : 1
fundamental for can -> still : 1
for can still -> be : 1
still be thrown -> if : 1
be thrown if -> the : 1
thrown if the -> system : 1
the system runs -> out : 1
system runs out -> of : 1
out of paths -> from : 1
of paths from -> relative : 1
from relative the -> last : 1
relative the last -> we : 1
last we already -> the : 1
we already the -> class : 1
already the class -> of : 1
the class of -> capable : 1
class of capable -> of : 1
of capable of -> more : 1
capable of more -> things : 1
of more things -> than : 1
more things than -> just : 1
things than just -> holding : 1
than just holding -> and : 1
just holding and -> checking : 1
holding and checking -> it : 1
and checking it -> also : 1
checking it also -> helps : 1
it also helps -> us : 1
also helps us -> in : 1
us in composing -> paths : 1
in composing paths -> from : 1
composing paths from -> strings : 1
paths from strings -> and : 1
from strings and -> also : 1
strings and also -> to : 1
and also to -> decompose : 1
also to decompose -> them : 1
to decompose them -> this : 1
decompose them this -> does : 1
them this does -> already : 1
this does already -> abstract : 1
does already abstract -> operating : 1
already abstract operating -> system : 1
abstract operating system -> details : 1
operating system details -> away : 1
system details away -> from : 1
details away from -> but : 1
away from but -> there : 1
from but there -> are : 1
are also certain -> we : 1
also certain we -> still : 1
certain we still -> need : 1
need to keep -> such : 1
to keep such -> details : 1
keep such details -> in : 1
such details in -> will : 1
details in will -> see : 1
in will see -> how : 1
deal with paths -> and : 1
with paths and -> their : 1
paths and their -> by : 1
and their by -> playing : 1
their by playing -> around : 1
around with absolute -> and : 2
with absolute and -> relative : 2
and relative to -> do : 1
relative to do -> this : 1
this we around -> with : 1
we around with -> absolute : 1
and relative paths -> in : 1
relative paths in -> order : 1
paths in order -> to : 1
see the strengths -> of : 1
the strengths of -> the : 1
strengths of the -> class : 1
class and the -> helper : 1
and the helper -> functions : 1
the helper functions -> around : 1
the helper functions -> we : 1
helper functions around -> we : 1
functions around we -> include : 1
around we include -> all : 1
we declare an -> example : 1
declare an example -> at : 1
an example at -> this : 1
example at this -> it : 1
not important that -> the : 1
that the text -> file : 1
text file it -> refers : 1
file it refers -> to : 1
it refers to -> really : 1
refers to really -> there : 1
to really there -> are : 1
really there are -> some : 1
are some that -> throw : 1
some that throw -> exceptions : 1
that throw exceptions -> if : 1
throw exceptions if -> the : 1
exceptions if the -> underlying : 1
if the underlying -> file : 1
the underlying file -> does : 1
underlying file does -> not : 1
does not int -> path : 1
not int path -> p : 1
int path p -> will : 1
path p will -> have : 1
p will have -> a : 1
look at filesystem -> library : 1
at filesystem library -> functions : 1
filesystem library functions -> returns : 1
library functions returns -> us : 1
functions returns us -> the : 1
us the path -> the : 1
the path the -> program : 1
path the program -> is : 1
program is currently -> executed : 1
is currently executed -> the : 1
currently executed the -> accepts : 1
executed the accepts -> a : 1
a relative path -> like : 1
a relative path -> such : 1
relative path like -> our : 1
path like our -> path : 1
like our path -> and : 1
our path and -> returns : 1
our path and -> provide : 1
returns the nonambiguous -> path : 1
the nonambiguous path -> in : 1
nonambiguous path in -> the : 1
path in the -> whole : 1
path in the -> command : 1
path in the -> offline : 1
path in the -> form : 1
the whole practically -> the : 1
whole practically the -> same : 1
practically the same -> as : 1
same as on -> or : 1
as on or -> operating : 1
on or operating -> on : 1
or operating on -> we : 1
operating on we -> would : 1
on we would -> get : 1
get the absolute -> path : 1
the absolute path -> additionally : 1
absolute path additionally -> prepended : 1
path additionally prepended -> by : 1
additionally prepended by -> the : 1
prepended by the -> disk : 1
by the disk -> volume : 1
the disk volume -> letter : 1
disk volume letter -> does : 1
volume letter does -> again : 1
letter does again -> the : 1
does again the -> same : 1
again the same -> as : 1
as but then -> additionally : 1
but then additionally -> removes : 1
then additionally removes -> any : 1
additionally removes any -> for : 1
removes any for -> or : 1
any for or -> for : 1
or for directory -> we : 1
for directory we -> will : 1
directory we will -> play : 1
play with such -> indirections : 1
with such indirections -> in : 1
such indirections in -> the : 1
indirections in the -> cout : 1
the cout nice -> thing : 1
cout nice thing -> about : 1
about the class -> is : 1
class is that -> it : 1
that it overloads -> this : 1
it overloads this -> way : 1
overloads this way -> we : 1
we can concatenate -> folder : 1
can concatenate folder -> names : 1
concatenate folder names -> and : 1
folder names and -> filenames : 1
names and filenames -> using : 1
and filenames using -> and : 1
filenames using and -> compose : 1
using and compose -> paths : 1
and compose paths -> from : 1
compose paths from -> try : 1
paths from try -> it : 1
from try it -> out : 1
try it out -> and : 1
it out and -> print : 1
print a composed -> cout : 1
a composed cout -> play : 1
composed cout play -> with : 1
cout play with -> and : 1
with and composed -> by : 1
and composed by -> giving : 1
composed by giving -> a : 1
by giving a -> relative : 1
giving a relative -> path : 1
relative path such -> and : 1
path such and -> a : 1
such and a -> composed : 1
and a composed -> absolute : 1
a composed absolute -> path : 1
composed absolute path -> it : 1
absolute path it -> should : 1
path it should -> return : 1
it should return -> us : 1
should return us -> the : 2
us the existing -> absolute : 1
the existing absolute -> in : 1
existing absolute in -> another : 1
absolute in another -> we : 1
another we give -> it : 1
give it our -> path : 1
it our path -> and : 1
path and provide -> it : 1
provide it an -> absolute : 1
path that is -> us : 1
that is us -> into : 1
is us into -> and : 1
us into and -> up : 1
into and up -> this : 1
and up this -> should : 1
up this should -> be : 1
same as because -> of : 1
as because of -> the : 1
the in both -> should : 1
in both should -> return : 1
both should return -> us : 1
the same absolute -> cout : 1
same absolute cout -> testdir : 1
absolute cout testdir -> testdir : 1
cout testdir testdir -> can : 1
testdir testdir can -> also : 1
testdir can also -> test : 1
can also test -> for : 1
also test for -> the : 1
test for the -> equivalence : 1
for the equivalence -> of : 1
the equivalence of -> two : 1
equivalence of two -> paths : 1
of two paths -> that : 1
two paths that -> are : 1
paths that are -> not : 1
that are not -> canonicalizes : 1
are not canonicalizes -> the : 1
not canonicalizes the -> which : 1
canonicalizes the which -> it : 1
the which it -> accepts : 1
which it accepts -> as : 1
it accepts as -> arguments : 1
accepts as arguments -> and : 1
returns if they -> describe : 1
if they describe -> the : 1
they describe the -> same : 1
describe the same -> path : 1
same path after -> for : 1
path after for -> this : 1
after for this -> the : 1
this the path -> must : 1
the path must -> really : 1
path must really -> throws : 1
must really throws -> an : 1
really throws an -> cout : 1
throws an cout -> and : 1
an cout and -> running : 1
the following returns -> the : 1
following returns the -> home : 1
returns the home -> folder : 1
the home folder -> on : 1
home folder on -> my : 1
folder on my -> i : 1
folder on my -> first : 1
on my i -> executed : 1
my i executed -> the : 1
i executed the -> application : 1
i executed the -> program : 1
executed the application -> from : 1
the application from -> our : 1
application from our -> relative : 1
from our relative -> path : 1
our relative path -> has : 1
relative path has -> been : 1
path has been -> prepended : 1
has been prepended -> with : 1
been prepended with -> this : 1
prepended with this -> directory : 1
with this directory -> by : 1
this directory by -> and : 1
directory by and -> we : 1
by and we -> see : 1
see that and -> yield : 1
that and yield -> exactly : 1
and yield exactly -> the : 1
yield exactly the -> same : 1
same path on -> my : 1
path on my -> it : 1
on my it -> is : 1
my it is -> a : 1
is a mac -> would : 1
a mac would -> be : 1
mac would be -> the : 1
would be the -> same : 1
the same on -> on : 1
same on on -> a : 1
on on a -> windows : 1
on a windows -> would : 1
a windows would -> have : 1
windows would have -> prepended : 1
would have prepended -> or : 1
have prepended or -> whatever : 1
prepended or whatever -> drive : 1
or whatever drive -> the : 1
whatever drive the -> working : 1
drive the working -> directory : 1
the working directory -> is : 1
working directory is -> located : 1
directory is located -> canonical : 1
is located canonical -> testdir : 1
located canonical testdir -> canonical : 1
canonical testdir canonical -> testdir : 1
testdir canonical testdir -> do : 1
canonical testdir do -> not : 1
testdir do not -> handle : 1
do not handle -> any : 1
not handle any -> exceptions : 1
handle any exceptions -> in : 1
any exceptions in -> our : 1
exceptions in our -> short : 1
in our short -> if : 1
our short if -> we : 1
short if we -> remove : 1
if we remove -> in : 1
we remove in -> then : 1
remove in then -> the : 1
in then the -> program : 1
the program aborts -> its : 1
program aborts its -> execution : 1
aborts its execution -> due : 1
its execution due -> to : 1
execution due to -> an : 1
due to an -> the : 1
the function requires -> the : 1
function requires the -> path : 1
requires the path -> to : 1
the path to -> there : 1
path to there -> is : 1
to there is -> also : 1
is also that -> does : 1
also that does -> not : 1
does not come -> with : 1
not come with -> this : 1
come with this -> terminate : 1
with this terminate -> called : 1
this terminate called -> after : 1
instance of cannot -> no : 1
of cannot no -> such : 1
cannot no such -> file : 1
file or directory -> it : 1
or directory it -> goal : 1
directory it goal -> of : 1
it goal of -> this : 1
goal of this -> recipe : 1
recipe is to -> see : 1
is to see -> how : 1
is to compose -> new : 1
to compose new -> paths : 1
compose new paths -> on : 1
new paths on -> the : 1
paths on the -> this : 1
this is mainly -> because : 1
is mainly because -> class : 1
mainly because class -> has : 1
because class has -> a : 1
class has a -> handy : 1
has a handy -> overload : 1
a handy overload -> for : 1
handy overload for -> in : 1
overload for in -> addition : 1
for in addition -> to : 1
to the filesystem -> functions : 1
the filesystem functions -> get : 1
filesystem functions get -> along : 1
functions get along -> relative : 1
get along relative -> and : 1
along relative and -> absolute : 1
relative and absolute -> as : 1
and absolute as -> well : 1
absolute as well -> as : 1
well as with -> paths : 1
as with paths -> that : 1
with paths that -> contain : 1
paths that contain -> and : 1
that contain and -> is : 1
contain and is -> quite : 1
and is quite -> a : 1
quite a jungle -> of : 1
a jungle of -> functions : 1
jungle of functions -> that : 1
functions that return -> parts : 1
that return parts -> of : 1
return parts of -> a : 1
of a with -> or : 1
a with or -> without : 1
or without we -> are : 1
without we are -> not : 1
going to list -> all : 1
to list all -> functions : 1
to list all -> items : 1
list all functions -> there : 1
all functions there -> are : 1
functions there are -> a : 1
are a short -> glance : 1
a short glance -> into : 1
short glance into -> the : 1
glance into the -> reference : 1
into the reference -> is : 1
the reference is -> the : 1
reference is the -> best : 1
the best way -> to : 1
get an member -> functions : 1
an member functions -> of : 1
member functions of -> the : 1
of the might -> be : 1
the might be -> worth : 1
might be worth -> a : 1
be worth a -> closer : 1
worth a closer -> see : 1
a closer see -> which : 1
closer see which -> part : 1
see which part -> of : 1
which part of -> a : 1
of a path -> is : 1
a path is -> returned : 1
path is returned -> by : 1
is returned by -> what : 1
returned by what -> member : 1
by what member -> function : 1
what member function -> of : 1
member function of -> following : 1
function of following -> diagram : 1
of following diagram -> also : 1
following diagram also -> shows : 1
diagram also shows -> how : 1
also shows how -> windows : 1
shows how windows -> paths : 1
how windows paths -> are : 1
windows paths are -> slightly : 1
paths are slightly -> different : 1
are slightly different -> from : 1
slightly different from -> can : 1
different from can -> see : 1
from can see -> that : 1
that the diagram -> shows : 1
the diagram shows -> what : 1
diagram shows what -> the : 1
shows what the -> member : 1
what the member -> functions : 1
the member functions -> for : 1
functions for an -> for : 1
for an for -> and : 1
an for and -> are : 1
for and are -> then : 1
are then just -> returns : 1
then just returns -> the : 1
returns the path -> is : 1
the path is -> relative : 1
path is relative -> all : 1
is relative all -> files : 1
files in every -> operating : 1
in every operating -> system : 1
every operating system -> that : 1
operating system that -> offers : 1
system that offers -> filesystem : 1
that offers filesystem -> comes : 1
offers filesystem comes -> with : 1
filesystem comes with -> some : 1
comes with some -> kind : 1
with some kind -> of : 2
kind of utility -> that : 1
of utility that -> does : 1
utility that does -> just : 1
that does just -> all : 1
that does just -> the : 1
does just all -> files : 1
just all files -> within : 1
all files within -> a : 1
all files within -> that : 1
files within a -> directory : 2
within a directory -> in : 1
within a directory -> and : 1
a directory in -> the : 1
directory in the -> the : 1
the the simplest -> examples : 1
simplest examples are -> the : 1
examples are the -> command : 1
are the command -> on : 1
the command on -> and : 1
command on and -> other : 1
on and other -> operating : 1
and other operating -> in : 1
other operating in -> dos : 1
operating in dos -> and : 1
in dos and -> there : 1
dos and there -> is : 1
is the both -> list : 1
the both list -> all : 1
both list all -> files : 1
list all files -> in : 1
in a directory -> and : 1
in a directory -> by : 1
in a directory -> are : 1
a directory and -> provide : 1
a directory and -> matches : 1
a directory and -> lists : 1
a directory and -> its : 1
directory and provide -> supplemental : 1
and provide supplemental -> information : 1
provide supplemental information -> such : 1
supplemental information such -> and : 1
information such and -> so : 1
and so such -> a : 1
so such a -> also : 1
such a also -> a : 1
a also a -> nice : 1
also a nice -> standard : 1
a nice standard -> task : 1
nice standard task -> to : 1
standard task to -> get : 1
task to get -> going : 1
to get going -> with : 1
get going with -> directory : 1
going with directory -> and : 1
with directory and -> file : 1
directory and file -> just : 1
and file just -> do : 1
file just do -> own : 1
just do own -> utility : 1
do own utility -> will : 1
own utility will -> be : 1
utility will be -> able : 1
will be able -> to : 1
able to list -> all : 1
list all items -> in : 1
a directory by -> indicate : 1
directory by indicate -> what : 1
by indicate what -> kind : 1
indicate what kind -> of : 1
kind of items -> there : 1
of items there -> list : 1
items there list -> their : 1
there list their -> access : 1
list their access -> permission : 1
their access permission -> and : 1
access permission and -> number : 1
permission and number -> of : 1
and number of -> bytes : 1
number of bytes -> they : 1
of bytes they -> occupy : 1
bytes they occupy -> on : 1
they occupy on -> the : 1
occupy on the -> to : 1
on the to -> do : 1
a little tool -> that : 5
little tool that -> lists : 1
little tool that -> searches : 1
little tool that -> recursively : 1
little tool that -> crawls : 1
little tool that -> finds : 1
tool that lists -> all : 1
tool that lists -> the : 1
that lists all -> files : 1
lists all files -> in : 1
files in any -> user : 1
in any user -> provided : 1
any user provided -> it : 1
user provided it -> will : 1
provided it will -> not : 1
will not only -> list : 1
not only list -> the : 1
only list the -> but : 1
list the but -> also : 1
but also their -> and : 1
also their and -> access : 1
their and access -> we : 1
and access we -> need : 1
access we need -> to : 1
the and by -> using : 1
and by using -> namespace : 2
namespace helper function -> that : 1
to need is -> it : 1
need is it -> accepts : 1
accepts a object -> extracts : 1
accepts a object -> as : 1
a object extracts -> the : 1
object extracts the -> path : 1
extracts the path -> from : 1
the path from -> as : 1
path from as -> well : 1
from as well -> as : 1
as a object -> the : 1
a object the -> which : 1
object the which -> contains : 1
the which contains -> file : 1
which contains file -> type : 1
contains file type -> and : 1
file type and -> permission : 1
type and permission -> it : 1
and permission it -> also : 1
permission it also -> extracts : 1
it also extracts -> the : 1
also extracts the -> size : 1
extracts the size -> of : 1
of the entry -> if : 1
the entry if -> it : 1
entry if it -> is : 1
entry if it -> has : 1
is a regular -> for : 1
a regular for -> directories : 1
regular for directories -> or : 1
for directories or -> other : 1
directories or other -> special : 1
or other special -> we : 1
other special we -> plainly : 1
special we plainly -> return : 1
we plainly return -> a : 1
plainly return a -> size : 1
return a size -> of : 1
a size of -> all : 1
size of all -> this : 1
size of all -> files : 2
size of all -> directory : 1
size of all -> the : 1
size of all -> members : 1
size of all -> grouped : 1
of all this -> information : 1
all this information -> is : 1
this information is -> bundled : 1
information is bundled -> into : 1
is bundled into -> a : 1
bundled into a -> const : 1
into a const -> auto : 1
const auto fs -> return : 1
auto fs return -> helper : 1
fs return helper -> function : 1
that we is -> cannot : 1
we is cannot -> only : 1
is cannot only -> represent : 1
cannot only represent -> directories : 1
only represent directories -> and : 1
represent directories and -> simple : 1
directories and simple -> operating : 1
and simple operating -> systems : 1
simple operating systems -> provide : 1
systems provide a -> variety : 1
provide a variety -> of : 1
a variety of -> other : 1
variety of other -> types : 1
of other types -> that : 1
other types that -> abstract : 1
types that abstract -> something : 1
that abstract something -> such : 1
abstract something such -> device : 1
something such device -> interfaces : 1
such device interfaces -> in : 1
device interfaces in -> the : 1
interfaces in the -> form : 1
the stl filesystem -> library : 1
stl filesystem library -> provides : 1
filesystem library provides -> a : 1
library provides a -> lot : 1
provides a lot -> of : 1
lot of predicate -> functions : 1
of predicate functions -> for : 1
predicate functions for -> this : 1
can return the -> letter : 1
return the letter -> for : 1
the letter for -> the : 1
the letter for -> regular : 1
letter for the -> letter : 1
for the letter -> for : 1
letter for regular -> and : 1
for regular and -> so : 1
regular and so -> static : 1
and so static -> char : 1
so static char -> if : 1
static char if -> return : 1
char if return -> else : 1
return return another -> helper : 1
return another helper -> we : 1
another helper we -> is : 1
helper we is -> it : 1
we is it -> accepts : 1
accepts a variable -> is : 1
just an class -> type : 1
an class type -> from : 1
class type from -> the : 1
from the filesystem -> and : 1
the filesystem and -> returns : 1
the filesystem and -> look : 1
filesystem and returns -> a : 1
returns a string -> such : 1
a string such -> that : 1
a string such -> means : 1
string such that -> describes : 1
such that describes -> the : 1
that describes the -> permission : 1
that describes the -> pattern : 1
describes the permission -> the : 1
the permission the -> first : 1
permission the first -> group : 1
the first group -> of : 1
first group of -> characters : 1
group of characters -> describes : 1
of characters describes -> the : 1
characters describes the -> and : 1
describes the and -> permissions : 1
the and permissions -> for : 1
and permissions for -> the : 1
permissions for the -> owner : 1
for the owner -> of : 1
the owner of -> the : 1
the next group -> describes : 1
next group describes -> the : 1
group describes the -> same : 1
describes the same -> rights : 1
the same rights -> for : 1
same rights for -> all : 1
rights for all -> users : 1
for all users -> that : 1
all users that -> are : 1
users that are -> part : 1
that are part -> of : 1
are part of -> the : 1
the file belongs -> the : 1
file belongs the -> last : 1
belongs the last -> character : 1
last character group -> describes : 1
character group describes -> which : 1
group describes which -> rights : 1
describes which rights -> everyone : 1
which rights everyone -> else : 1
rights everyone else -> has : 1
everyone else has -> for : 1
else has for -> accessing : 1
has for accessing -> the : 1
for accessing the -> a : 1
accessing the a -> string : 1
the a string -> such : 1
string such means -> that : 1
such means that -> everyone : 1
means that everyone -> can : 1
that everyone can -> access : 1
everyone can access -> the : 1
access the object -> in : 1
object in any -> means : 1
in any means -> that : 1
any means that -> only : 1
means that only -> the : 1
that only the -> owner : 1
only the owner -> can : 1
the owner can -> read : 1
owner can read -> and : 1
can read and -> modify : 1
read and modify -> the : 1
modify the while -> anyone : 1
the while anyone -> else : 1
while anyone else -> can : 1
anyone else can -> only : 1
else can only -> read : 1
can only read -> we : 1
only read we -> just : 1
read we just -> compose : 1
read we just -> ignore : 1
we just compose -> a : 1
just compose a -> string : 1
compose a string -> from : 1
string from such -> character : 1
from such character -> permission : 1
such character permission -> bit : 1
character permission bit -> by : 1
permission bit by -> permission : 1
bit by permission -> a : 1
by permission a -> lambda : 1
permission a lambda -> expression : 1
lambda expression helps -> us : 1
expression helps us -> with : 1
helps us with -> the : 1
us with the -> repetitive : 1
with the repetitive -> work : 1
the repetitive work -> of : 1
repetitive work of -> checking : 1
work of checking -> if : 1
of checking if -> the : 1
if the variable -> contains : 1
the variable contains -> a : 1
variable contains a -> specific : 1
a specific owner -> bit : 1
specific owner bit -> and : 1
owner bit and -> then : 1
bit and then -> returns : 1
then returns or -> the : 1
returns or the -> right : 1
or the right -> static : 1
the right static -> string : 1
right static string -> auto : 1
static string auto -> check : 1
string auto check -> char : 1
auto check char -> return : 1
check char return -> return : 1
char return return -> the : 1
return return the -> last : 1
the last helper -> function : 1
helper function accepts -> an : 1
accepts an integral -> file : 1
an integral file -> size : 1
integral file size -> and : 1
file size and -> converts : 1
size and converts -> it : 1
and converts it -> to : 1
converts it to -> a : 1
to a better -> to : 1
a better to -> read : 1
better to read -> we : 1
to read we -> just : 1
we just ignore -> the : 1
just ignore the -> period : 1
ignore the period -> while : 1
the period while -> dividing : 1
period while dividing -> numbers : 1
while dividing numbers -> down : 1
dividing numbers down -> and : 1
numbers down and -> floor : 1
down and floor -> them : 1
and floor them -> to : 1
floor them to -> the : 1
to the nearest -> or : 1
the nearest or -> giga : 1
nearest or giga -> static : 1
or giga static -> string : 2
giga static string -> stringstream : 2
static string stringstream -> if : 3
string stringstream if -> ss : 3
stringstream if ss -> else : 3
if ss else -> if : 6
if ss else -> ss : 3
ss else if -> ss : 6
else if ss -> else : 6
ss else ss -> size : 3
else ss size -> return : 3
ss size return -> we : 2
ss size return -> first : 1
size return we -> can : 1
size return we -> implement : 1
can finally implement -> the : 1
finally implement the -> main : 1
implement the main -> we : 1
main we begin -> with : 1
we begin with -> checking : 1
begin with checking -> if : 1
with checking if -> the : 1
provided a path -> in : 1
a path in -> the : 1
a path in -> such : 1
in the command -> if : 1
the command if -> he : 1
the command if -> that : 1
command if he -> we : 1
if he we -> just : 1
he we just -> take : 1
we just take -> the : 2
just take the -> current : 2
the current directory -> we : 1
the current directory -> and : 2
current directory we -> check : 1
directory we check -> if : 1
if the directory -> if : 1
the directory if -> it : 1
directory if it -> we : 1
it we possibly -> list : 1
we possibly list -> any : 1
possibly list any -> int : 1
list any int -> char : 1
any int char -> path : 1
int char path -> dir : 3
char path dir -> if : 3
path dir if -> cout : 4
dir if cout -> dir : 4
not return we -> a : 1
not return we -> can : 1
return we a -> file : 1
we a file -> information : 1
a file information -> tuples : 1
file information tuples -> just : 1
file information tuples -> and : 1
information tuples just -> like : 1
tuples just like -> our : 1
just like our -> first : 1
like our first -> helper : 1
our first helper -> returns : 1
first helper returns -> from : 1
helper returns from -> instantiate : 1
returns from instantiate -> a : 1
from instantiate a -> and : 1
instantiate a and -> give : 1
a and give -> its : 1
and give its -> constructor : 1
give its constructor -> the : 1
its constructor the -> which : 1
constructor the which -> we : 1
which we created -> in : 1
we created in -> the : 1
created in the -> last : 1
last while iterating -> with : 1
while iterating with -> the : 1
iterating with the -> directory : 1
with the directory -> we : 1
the directory we -> transform : 1
the directory we -> are : 1
directory we transform -> the : 1
we transform the -> objects : 1
transform the objects -> to : 1
the objects to -> file : 1
objects to file -> information : 1
to file information -> tuples : 1
information tuples and -> insert : 1
tuples and insert -> them : 1
insert them into -> the : 1
we have all -> information : 1
have all information -> saved : 1
all information saved -> in : 1
information saved in -> the : 1
the and can -> simply : 1
and can simply -> print : 1
simply print it -> using : 1
print it using -> all : 1
it using all -> the : 1
using all the -> helper : 1
all the helper -> functions : 1
functions we for -> auto : 1
auto cout right -> and : 2
cout right and -> running : 2
right and running -> the : 2
running the project -> with : 1
the project with -> a : 1
project with a -> file : 1
a file path -> in : 1
file path in -> the : 2
in the offline -> version : 1
in the offline -> as : 1
the offline version -> of : 1
offline version of -> the : 1
of the documentation -> yields : 1
the documentation yields -> the : 1
documentation yields the -> following : 1
that the folder -> only : 1
the folder only -> contains : 1
folder only contains -> directories : 1
only contains directories -> and : 1
contains directories and -> plain : 1
directories and plain -> there : 1
and plain there -> are : 1
plain there are -> only : 1
are only and -> entries : 1
only and entries -> as : 1
and entries as -> first : 1
entries as first -> characters : 1
as first characters -> of : 1
first characters of -> all : 1
characters of all -> output : 1
of all output -> these : 1
all output these -> files : 1
output these files -> have : 1
these files have -> different : 1
files have different -> access : 1
have different access -> and : 1
different access and -> of : 1
access and of -> course : 1
of course different -> note : 1
course different note -> that : 1
different note that -> the : 1
that the files -> appear : 1
the files appear -> in : 1
files appear in -> alphabetical : 1
appear in alphabetical -> order : 1
alphabetical order of -> their : 1
of their but -> we : 1
their but we -> cannot : 1
but we cannot -> really : 1
we cannot really -> rely : 1
cannot really rely -> on : 1
really rely on -> alphabetic : 1
rely on alphabetic -> ordering : 1
on alphabetic ordering -> is : 1
alphabetic ordering is -> not : 1
ordering is not -> required : 1
is not required -> by : 1
not required by -> the : 1
required by the -> it : 1
the it this -> we : 1
this we iterated -> over : 1
we iterated over -> and : 1
iterated over and -> for : 1
over and for -> every : 1
every we checked -> its : 1
we checked its -> status : 1
checked its status -> and : 1
its status and -> while : 1
status and while -> all : 1
and while all -> our : 1
while all our -> operations : 1
all our operations -> are : 1
our operations are -> fairly : 1
operations are fairly -> straightforward : 1
are fairly straightforward -> and : 1
fairly straightforward and -> our : 1
straightforward and our -> actual : 1
and our actual -> directory : 1
our actual directory -> traversal : 1
actual directory traversal -> looked : 1
directory traversal looked -> a : 1
traversal looked a -> bit : 1
looked a bit -> order : 1
a bit order -> to : 1
bit order to -> traverse : 1
order to traverse -> our : 1
to traverse our -> we : 1
traverse our we -> just : 1
our we just -> instantiated : 1
we just instantiated -> a : 1
just instantiated a -> and : 1
instantiated a and -> then : 1
and then iterated -> over : 1
then iterated over -> traversing : 1
iterated over traversing -> a : 1
over traversing a -> directory : 1
traversing a directory -> is : 1
a directory is -> fantastically : 1
directory is fantastically -> simple : 1
is fantastically simple -> with : 1
fantastically simple with -> the : 1
simple with the -> filesystem : 1
with the filesystem -> do : 1
the filesystem do -> something : 1
filesystem do something -> is : 1
do something is -> not : 1
something is not -> much : 1
not much more -> to : 1
much more to -> say : 1
more to say -> about : 1
to say about -> this : 1
say about this -> class : 1
about this class -> apart : 1
this class apart -> from : 1
class apart from -> the : 1
apart from the -> following : 1
the following visits -> every : 1
following visits every -> element : 1
visits every element -> of : 1
every element of -> the : 1
of the directory -> order : 1
of the directory -> entry : 1
the directory order -> in : 1
directory order in -> which : 1
which the directory -> elements : 1
the directory elements -> are : 1
directory elements are -> iterated : 1
elements are iterated -> is : 1
are iterated is -> elements : 1
iterated is elements -> and : 1
is elements and -> are : 1
elements and are -> already : 1
and are already -> filtered : 1
are already filtered -> it : 1
already filtered it -> might : 1
filtered it might -> be : 1
might be noticeable -> that : 1
be noticeable that -> seems : 1
noticeable that seems -> to : 1
that seems to -> be : 1
be an and -> an : 1
an and an -> at : 1
and an at -> the : 1
an at the -> same : 1
same in the -> minimal : 1
in the minimal -> loop : 1
the minimal loop -> example : 1
minimal loop example -> we : 1
loop example we -> just : 1
example we just -> had : 1
we just had -> a : 1
just had a -> look : 1
a look it -> was : 1
look it was -> used : 1
it was used -> as : 1
was used as -> an : 1
as an iterable -> in : 1
an iterable in -> the : 1
iterable in the -> actual : 1
in the actual -> recipe : 1
the actual recipe -> we : 1
actual recipe we -> used : 1
recipe we used -> it : 1
we used it -> like : 1
used it like -> an : 1
it like an -> truth : 1
like an truth -> it : 1
an truth it -> is : 1
truth it is -> just : 1
just an iterator -> class : 1
iterator class but -> the : 1
class but the -> and : 1
but the and -> functions : 1
and functions provide -> overloads : 1
functions provide overloads -> for : 1
provide overloads for -> this : 1
overloads for this -> this : 1
for this this -> way : 1
this this way -> we : 1
can call and -> on : 1
call and on -> this : 1
and on this -> kind : 1
on this kind -> of : 1
of iterator and -> they : 1
iterator and they -> return : 1
and they return -> us : 1
they return us -> iterators : 1
return us iterators -> that : 1
us iterators that -> might : 1
iterators that might -> at : 1
that might at -> first : 1
might at first -> but : 1
at first but -> it : 1
first but it -> makes : 1
but it makes -> this : 1
makes this class -> more : 1
this class more -> a : 1
class more a -> text : 1
more a text -> search : 1
text search operating -> systems : 1
search operating systems -> come : 1
operating systems come -> equipped : 1
systems come equipped -> with : 1
come equipped with -> some : 1
equipped with some -> kind : 1
kind of local -> search : 1
of local search -> users : 1
local search users -> can : 1
search users can -> fire : 1
users can fire -> it : 1
can fire it -> up : 1
fire it up -> with : 1
it up with -> some : 1
up with some -> keyboard : 1
with some keyboard -> shortcut : 1
some keyboard shortcut -> and : 1
keyboard shortcut and -> then : 1
shortcut and then -> just : 1
and then just -> enter : 1
then just enter -> what : 1
just enter what -> local : 1
enter what local -> file : 1
what local file -> they : 1
local file they -> are : 1
file they are -> looking : 1
they are looking -> such : 1
are looking such -> features : 1
looking such features -> came : 1
such features came -> users : 1
features came users -> already : 1
came users already -> searched : 1
users already searched -> through : 1
already searched through -> files : 1
searched through files -> with : 1
through files with -> tools : 1
files with tools -> such : 1
with tools such -> the : 1
tools such the -> user : 1
such the user -> can : 1
user can simply -> type : 1
can simply type -> foobar : 1
simply type foobar -> and : 1
type foobar and -> the : 1
foobar and the -> tool : 1
and the tool -> will : 1
the tool will -> crawl : 1
tool will crawl -> recursively : 1
will crawl recursively -> through : 1
crawl recursively through -> the : 1
recursively through the -> current : 2
through the current -> directory : 2
current directory and -> find : 1
current directory and -> search : 1
directory and find -> any : 1
and find any -> file : 1
find any file -> that : 1
any file that -> contains : 1
file that contains -> this : 1
that contains this -> we : 1
contains this we -> will : 1
will implement exactly -> such : 1
implement exactly such -> our : 1
exactly such our -> little : 1
such our little -> grep : 1
our little grep -> clone : 1
little grep clone -> will : 1
grep clone will -> just : 1
clone will just -> accept : 1
just accept a -> pattern : 1
accept a pattern -> from : 1
a pattern from -> and : 1
pattern from and -> then : 1
and then recursively -> search : 1
then recursively search -> through : 1
recursively search through -> the : 1
search through the -> directory : 1
through the directory -> we : 1
directory we are -> in : 1
we are in -> at : 1
are in at -> the : 1
at the time -> of : 1
the time of -> the : 1
time of the -> application : 1
of the application -> it : 1
the application it -> will : 1
application it will -> then : 1
name of every -> file : 1
of every file -> that : 1
every file that -> matches : 1
file that matches -> our : 1
that matches our -> the : 1
matches our the -> pattern : 1
our the pattern -> matching : 1
the pattern matching -> will : 1
pattern matching will -> be : 1
matching will be -> applied : 1
will be applied -> so : 1
be applied so -> we : 1
applied so we -> can : 1
can also print -> on : 1
also print on -> which : 1
print on which -> exact : 1
on which exact -> line : 1
which exact line -> numbers : 1
exact line numbers -> a : 1
line numbers a -> file : 1
numbers a file -> is : 1
a file is -> matching : 1
file is matching -> the : 1
is matching the -> to : 1
matching the to -> do : 1
tool that searches -> for : 1
that searches for -> text : 1
searches for text -> patterns : 1
for text patterns -> in : 1
text patterns in -> the : 1
patterns in the -> tool : 1
in the tool -> works : 1
the tool works -> the : 1
tool works the -> unix : 1
works the unix -> tool : 1
the unix tool -> but : 1
unix tool but -> will : 1
tool but will -> not : 1
but will not -> be : 1
not be as -> mature : 1
be as mature -> and : 1
as mature and -> for : 1
mature and for -> the : 1
and for the -> sake : 1
helper function it -> accepts : 1
function it accepts -> a : 1
accepts a file -> a : 1
a file a -> regular : 1
file a regular -> expression : 1
regular expression object -> that : 1
regular expression object -> from : 1
expression object that -> describes : 1
object that describes -> the : 1
describes the pattern -> we : 1
the pattern we -> are : 1
pattern we are -> looking : 1
are looking we -> instantiate : 1
are looking we -> look : 1
looking we instantiate -> a : 1
instantiate a shall -> contain : 1
a shall contain -> pairs : 1
shall contain pairs -> of : 1
pairs of matching -> line : 1
of matching line -> numbers : 1
matching line numbers -> and : 1
line numbers and -> their : 1
numbers and their -> and : 1
and their and -> we : 1
their and we -> instantiate : 1
and we instantiate -> an : 1
instantiate an input -> file : 1
an input file -> stream : 1
an input file -> path : 1
which we and -> the : 1
we and the -> line : 1
and the line -> by : 1
the line by -> static : 1
line by static -> path : 1
by static path -> const : 1
static path const -> regex : 1
path const regex -> ifstream : 1
const regex ifstream -> is : 1
regex ifstream is -> traverse : 1
ifstream is traverse -> the : 1
is traverse the -> file : 1
traverse the file -> line : 1
the file line -> by : 1
line by line -> using : 1
by line using -> the : 1
line using the -> returns : 1
using the returns -> if : 1
the returns if -> the : 1
returns if the -> string : 1
string contains our -> if : 1
contains our if -> this : 1
our if this -> is : 1
is the then -> we : 1
put the line -> number : 1
the line number -> and : 1
line number and -> the : 1
number and the -> string : 1
string into the -> we : 1
we return all -> collected : 1
return all collected -> string : 1
all collected string -> for : 1
collected string for -> line : 1
string for line -> if : 1
for line if -> return : 1
line if return -> the : 1
we first check -> user : 1
first check user -> provided : 1
provided a argument -> that : 1
a argument that -> we : 1
argument that we -> can : 1
can use as -> the : 1
use as the -> if : 1
as the if -> we : 1
if we error -> int : 1
cout return we -> construct : 1
cout return we -> checked : 1
return we construct -> a : 1
construct a regular -> expression : 1
expression object from -> the : 1
the input if -> the : 1
input if the -> pattern : 1
if the pattern -> is : 1
pattern is not -> a : 1
not a valid -> regular : 1
a valid regular -> this : 1
valid regular this -> would : 1
regular this would -> lead : 1
to an if -> such : 1
an if such -> an : 1
if such an -> exception : 1
an exception we -> catch : 1
exception we catch -> it : 1
we catch it -> and : 1
catch it and -> error : 1
it and error -> regex : 1
and error regex -> try : 1
error regex try -> pattern : 1
regex try pattern -> catch : 1
try pattern catch -> cout : 1
pattern catch cout -> regular : 1
catch cout regular -> expression : 1
cout regular expression -> return : 1
regular expression return -> we : 1
expression return we -> can : 1
finally iterate over -> the : 1
over the filesystem -> and : 1
filesystem and look -> for : 1
and look for -> pattern : 1
look for pattern -> we : 1
for pattern we -> use : 1
pattern we use -> to : 1
use to iterate -> over : 1
iterate over all -> the : 1
iterate over all -> its : 1
iterate over all -> directory : 1
the files in -> the : 1
files in the -> working : 1
in the working -> it : 1
the working it -> works : 1
working it works -> exactly : 1
exactly like in -> the : 1
the previous but -> it : 1
previous but it -> also : 1
it also descends -> down : 1
also descends down -> into : 1
descends down into -> this : 1
descends down into -> it : 1
down into this -> way : 1
down into this -> tells : 1
way we have -> to : 1
have to manage -> on : 1
to manage on -> every : 1
manage on every -> we : 1
on every we -> call : 1
every we call -> our : 1
call our helper -> function : 1
our helper function -> for : 1
function for auto -> auto : 1
auto auto ms -> every : 1
auto ms every -> match : 1
ms every match -> we : 1
every match we -> print : 1
match we print -> the : 1
print the file -> its : 1
print the file -> size : 1
the file its -> line : 1
file its line -> and : 1
its line and -> the : 1
line and the -> matching : 1
and the matching -> complete : 1
the matching complete -> for : 1
matching complete for -> auto : 1
complete for auto -> cout : 1
auto cout number -> content : 1
cout number content -> prepare : 1
number content prepare -> a : 1
content prepare a -> file : 1
prepare a file -> called : 1
a file called -> which : 1
file called which -> contains : 1
called which contains -> some : 1
which contains some -> test : 1
contains some test -> lines : 1
some test lines -> we : 1
test lines we -> can : 1
lines we can -> search : 1
can search foo -> bar : 1
search foo bar -> and : 1
foo bar and -> running : 1
bar and running -> yields : 1
following i launched -> the : 1
following i launched -> it : 1
i launched the -> app : 1
launched the app -> in : 1
in the folder -> on : 1
the folder on -> my : 1
on my first -> with : 1
my first with -> the : 1
first with the -> pattern : 1
with the pattern -> within : 1
with the pattern -> it : 1
the pattern within -> that : 1
pattern within that -> it : 1
within that it -> found : 1
that it found -> the : 1
it found the -> second : 1
found the second -> line : 1
second line of -> our : 1
line of our -> another : 1
line of our -> example : 1
of our another -> file : 1
our another file -> that : 1
another file that -> is : 1
file that is -> located : 1
that is located -> in : 1
is located in -> bar : 1
located in bar -> foo : 1
in bar foo -> bar : 1
foo bar bla -> blubb : 1
bar bla blubb -> bar : 1
bla blubb bar -> the : 1
blubb bar the -> app : 1
bar the app -> but : 1
app but this -> time : 1
time with the -> pattern : 1
the pattern it -> finds : 1
pattern it finds -> the : 1
finds the third -> line : 1
third line of -> our : 1
of our example -> text : 1
our example text -> baz : 1
example text baz -> it : 1
text baz it -> up : 1
baz it up -> and : 1
it up and -> using : 1
up and using -> a : 1
and using a -> regular : 1
using a regular -> expression : 1
regular expression in -> order : 1
order to filter -> the : 1
to filter the -> content : 1
filter the content -> of : 1
content of files -> the : 1
of files the -> main : 1
files the main -> task : 1
the main task -> of : 1
main task of -> this : 1
task of this -> concentrate : 1
of this concentrate -> on : 1
on filtering recursively -> iterated : 1
filtering recursively iterated -> files : 1
recursively iterated files -> was : 1
iterated files was -> just : 1
files was just -> our : 1
was just our -> motivation : 1
just our motivation -> to : 1
our motivation to -> use : 1
motivation to use -> this : 1
use this special -> iterator : 1
special iterator class -> in : 1
iterator class in -> this : 1
in this like -> iterates : 1
this like iterates -> over : 1
like iterates over -> elements : 1
iterates over elements -> of : 1
over elements of -> a : 1
elements of a -> its : 1
of a its -> specialty : 1
a its specialty -> is : 1
its specialty is -> to : 1
specialty is to -> do : 1
do this as -> its : 1
this as its -> name : 1
as its name -> whenever : 1
its name whenever -> it : 1
name whenever it -> hits : 1
whenever it hits -> a : 1
it hits a -> filesystem : 1
hits a filesystem -> element : 1
a filesystem element -> that : 1
filesystem element that -> is : 1
element that is -> a : 1
is a it -> will : 1
it will yield -> a : 1
will yield a -> instance : 1
yield a instance -> to : 1
a instance to -> this : 1
instance to this -> but : 1
to this but -> then : 1
this but then -> also : 1
but then also -> descend : 1
then also descend -> down : 1
also descend down -> into : 1
descend down into -> it : 2
down into it -> in : 1
down into it -> and : 2
to iterate its -> has : 1
iterate its has -> some : 1
its has some -> interesting : 1
has some interesting -> member : 1
some interesting member -> this : 1
interesting member this -> tells : 1
member this tells -> many : 1
this tells many -> levels : 1
tells many levels -> the : 1
many levels the -> iterator : 1
levels the iterator -> has : 1
the iterator has -> currently : 1
iterator has currently -> descended : 1
has currently descended -> down : 1
currently descended down -> into : 1
descended down into -> this : 1
into this tells -> us : 1
this tells us -> if : 1
iterator is going -> to : 1
going to descend -> down : 1
to descend down -> after : 1
to descend down -> into : 1
descend down after -> the : 1
down after the -> element : 1
after the element -> it : 1
the element it -> currently : 1
element it currently -> points : 1
currently points this -> can : 1
points this can -> be : 1
be called to -> keep : 1
called to keep -> the : 1
keep the iterator -> from : 1
the iterator from -> descending : 1
iterator from descending -> into : 1
from descending into -> the : 1
descending into the -> next : 1
into the next -> it : 1
the next it -> is : 1
next it is -> currently : 1
it is currently -> pointing : 1
is currently pointing -> to : 1
pointing to a -> directory : 1
to a directory -> into : 1
a directory into -> which : 1
directory into which -> it : 1
into which it -> would : 1
which it would -> this : 1
it would this -> means : 1
would this means -> that : 1
means that calling -> this : 1
that calling this -> method : 1
calling this method -> has : 1
this method has -> no : 1
method has no -> effect : 1
has no effect -> if : 1
no effect if -> we : 1
effect if we -> call : 1
it this aborts -> the : 1
this aborts the -> current : 1
aborts the current -> recursion : 1
the current recursion -> level : 1
current recursion level -> and : 1
recursion level and -> goes : 1
level and goes -> one : 1
and goes one -> level : 1
goes one level -> up : 1
one level up -> in : 1
level up in -> the : 1
in the directory -> hierarchy : 1
the directory hierarchy -> to : 1
directory hierarchy to -> continue : 1
hierarchy to continue -> from : 1
to continue from -> thing : 1
continue from thing -> to : 1
from thing to -> know : 1
thing to know -> about : 1
to know about -> is : 1
know about is -> the : 1
about is the -> enum : 1
is the enum -> the : 1
the enum the -> constructor : 1
enum the constructor -> of : 1
constructor of does -> indeed : 1
of does indeed -> accept : 1
does indeed accept -> a : 1
indeed accept a -> value : 1
accept a value -> of : 1
this type as -> a : 1
second the default -> value : 1
the default value -> which : 1
default value which -> we : 1
we have been -> implicitly : 1
have been implicitly -> using : 1
been implicitly using -> is : 1
implicitly using is -> the : 1
using is the -> other : 1
the other values -> this : 1
other values this -> allows : 1
values this allows -> the : 1
this allows the -> recursive : 1
allows the recursive -> iterator : 1
the recursive iterator -> to : 1
recursive iterator to -> follow : 1
iterator to follow -> symbolic : 1
to follow symbolic -> links : 1
follow symbolic links -> to : 1
symbolic links to -> this : 1
links to this -> tells : 1
to this tells -> the : 1
this tells the -> iterator : 1
tells the iterator -> to : 1
iterator to skip -> directories : 1
to skip directories -> that : 1
skip directories that -> would : 1
directories that would -> otherwise : 1
that would otherwise -> result : 1
would otherwise result -> in : 1
otherwise result in -> permission : 1
result in permission -> to : 1
in permission to -> access : 1
permission to access -> is : 1
to access is -> denied : 1
access is denied -> by : 1
is denied by -> the : 1
denied by the -> options : 1
by the options -> can : 1
the options can -> be : 1
options can be -> combined : 1
combined with an -> automatic : 1
with an automatic -> file : 1
automatic file recipe -> is : 1
file recipe is -> motivated : 1
recipe is motivated -> by : 1
is motivated by -> a : 1
motivated by a -> situation : 1
by a situation -> i : 1
a situation i -> find : 1
situation i find -> myself : 1
i find myself -> in : 1
find myself in -> pretty : 1
myself in pretty -> when : 1
in pretty when -> collecting : 1
pretty when collecting -> picture : 1
when collecting picture -> files : 1
collecting picture files -> from : 1
picture files from -> for : 1
files from for -> from : 1
from for from -> different : 1
for from different -> friends : 1
from different friends -> and : 1
different friends and -> also : 1
friends and also -> different : 1
and also different -> photo : 1
also different photo -> devices : 1
different photo devices -> in : 1
photo devices in -> one : 1
devices in one -> the : 1
in one the -> file : 1
one the file -> endings : 1
the file endings -> often : 1
file endings often -> look : 1
endings often look -> some : 1
often look some -> jpeg : 1
look some jpeg -> files : 1
some jpeg files -> have : 1
jpeg files have -> a : 1
files have a -> some : 1
have a some -> have : 1
a some have -> and : 1
some have and -> some : 1
have and some -> others : 1
and some others -> even : 1
some others even -> have : 1
others even have -> people : 1
even have people -> might : 1
have people might -> prefer : 1
people might prefer -> to : 1
might prefer to -> homogenize : 1
prefer to homogenize -> all : 1
to homogenize all -> it : 1
homogenize all it -> would : 1
all it would -> be : 1
would be useful -> to : 1
be useful to -> rename : 1
useful to rename -> all : 1
to rename all -> files : 1
rename all files -> with : 1
all files with -> a : 1
all files with -> the : 1
files with a -> single : 1
with a single -> at : 1
a single at -> the : 1
single at the -> same : 1
same we could -> remove : 1
we could remove -> spaces : 1
could remove spaces -> and : 1
remove spaces and -> substitute : 1
spaces and substitute -> them : 1
and substitute them -> by : 1
and substitute them -> which : 1
substitute them by -> underscores : 1
them by underscores -> for : 1
by underscores for -> this : 1
underscores for this -> we : 1
will implement such -> a : 1
such a tool -> and : 1
a tool and -> call : 1
tool and call -> it : 1
will accept a -> range : 1
accept a range -> of : 1
range of input -> patterns : 1
of input patterns -> and : 1
input patterns and -> their : 1
patterns and their -> substitutes : 1
and their substitutes -> like : 1
their substitutes like -> renamer : 1
substitutes like renamer -> jpeg : 1
like renamer jpeg -> jpg : 1
renamer jpeg jpg -> jpeg : 1
jpeg jpg jpeg -> that : 1
jpeg jpg jpeg -> jpg : 1
jpg jpeg that -> renamer : 1
jpeg that renamer -> will : 1
that renamer will -> iterate : 1
renamer will iterate -> recursively : 1
will iterate recursively -> through : 1
iterate recursively through -> the : 1
directory and search -> for : 1
and search for -> the : 1
for the patterns -> and : 1
the patterns and -> in : 1
the patterns and -> and : 1
patterns and in -> all : 1
and in all -> it : 1
in all it -> will : 1
all it will -> substitute : 1
it will substitute -> both : 1
will substitute both -> with : 1
substitute both with -> to : 1
both with to -> do : 1
do a tool -> that : 1
tool that recursively -> files : 1
tool that recursively -> iterates : 1
that recursively files -> within : 1
recursively files within -> a : 1
directory and matches -> their : 1
and matches their -> filenames : 1
matches their filenames -> with : 1
their filenames with -> all : 1
filenames with all -> matches : 1
with all matches -> are : 1
all matches are -> replaced : 1
matches are replaced -> with : 1
are replaced with -> user : 1
replaced with user -> provided : 1
with user provided -> tokens : 1
user provided tokens -> and : 1
provided tokens and -> the : 1
tokens and the -> affected : 1
and the affected -> files : 1
the affected files -> are : 1
affected files are -> renamed : 1
files are renamed -> we : 1
are renamed we -> need : 1
renamed we need -> to : 1
include a few -> headers : 1
a few headers -> and : 1
few headers and -> declare : 1
we use namespaces -> and : 1
use namespaces and -> using : 1
namespaces and using -> namespace : 1
implement a short -> helper : 1
a short helper -> function : 1
short helper function -> that : 1
input file path -> in : 1
string and a -> range : 1
range of replacement -> each : 1
of replacement each -> replacement : 1
replacement each replacement -> pair : 1
each replacement pair -> consists : 1
replacement pair consists -> of : 1
of a pattern -> and : 1
a pattern and -> its : 1
pattern and its -> while : 1
and its while -> looping : 1
its while looping -> through : 1
while looping through -> the : 1
looping through the -> replacement : 1
through the replacement -> we : 1
the replacement we -> use : 1
replacement we use -> to : 1
use to feed -> it : 1
string and let -> it : 1
and let it -> return : 1
let it return -> the : 1
it return the -> transformed : 1
return the transformed -> we : 1
the transformed we -> return : 1
transformed we return -> the : 1
return the resulting -> template : 1
resulting template static -> string : 1
template static string -> const : 1
static string const -> t : 1
string const t -> for : 1
const t for -> auto : 1
t for auto -> s : 1
for auto s -> return : 1
auto s return -> the : 1
s return the -> main : 1
we first validate -> the : 1
first validate the -> command : 1
validate the command -> we : 1
the command we -> accept : 1
command we accept -> arguments : 1
we accept arguments -> in : 1
accept arguments in -> we : 1
arguments in we -> want : 1
in we want -> patterns : 1
we want patterns -> together : 1
want patterns together -> with : 1
patterns together with -> their : 1
together with their -> the : 1
with their the -> first : 1
their the first -> element : 1
first element of -> always : 1
element of always -> the : 1
of always the -> executable : 1
always the executable -> this : 1
the executable this -> means : 1
executable this means -> that : 1
user provides at -> least : 1
provides at least -> one : 1
least one pair -> or : 1
one pair or -> then : 1
pair or then -> must : 1
or then must -> be : 1
then must be -> and : 1
be and not -> smaller : 1
and not smaller -> than : 1
smaller than int -> char : 1
than int char -> if : 1
char if argc -> cout : 1
if argc cout -> return : 1
argc cout return -> we : 1
return we checked -> that : 1
we checked that -> there : 1
checked that there -> are : 1
there are pairs -> of : 1
are pairs of -> we : 1
pairs of we -> a : 1
of we a -> for : 1
we a for -> i : 1
a for i -> i : 1
we can iterate -> over : 2
over the for -> the : 1
we just define -> the : 1
just define the -> current : 1
define the current -> path : 1
the current path -> as : 1
current path as -> the : 1
path as the -> directory : 1
as the directory -> to : 1
the directory to -> iterate : 1
directory to iterate -> for : 1
to iterate for -> every : 1
iterate for every -> directory : 1
for every directory -> we : 1
every directory we -> extract : 1
directory we extract -> its : 1
we extract its -> original : 1
extract its original -> path : 1
its original path -> to : 1
original path to -> we : 1
path to we -> take : 1
to we take -> only : 1
we take only -> the : 1
take only the -> filename : 1
the filename without -> the : 1
filename without the -> rest : 1
without the rest -> of : 1
rest of and -> transform : 1
of and transform -> it : 1
and transform it -> according : 1
transform it according -> to : 1
it according to -> the : 1
to the list -> of : 1
list of patterns -> and : 1
of patterns and -> replacements : 1
patterns and replacements -> we : 1
and replacements we -> collected : 1
replacements we collected -> we : 1
we collected we -> take : 1
collected we take -> a : 1
take a copy -> of : 1
copy of call -> it : 1
of call it -> and : 1
it and replace -> for : 1
and replace for -> auto : 1
replace for auto -> path : 1
for auto path -> opath : 1
auto path opath -> string : 1
path opath string -> rname : 1
opath string rname -> path : 1
string rname path -> rpath : 1
rname path rpath -> all : 1
path rpath all -> files : 1
rpath all files -> that : 1
all files that -> are : 1
all files that -> it : 1
all files that -> have : 1
files that are -> affected : 1
files that are -> larger : 1
that are affected -> by : 1
are affected by -> our : 1
affected by our -> we : 1
by our we -> print : 1
our we print -> that : 1
we print that -> we : 1
print that we -> rename : 1
that we rename -> in : 1
we rename in -> case : 1
rename in case -> the : 1
case the resulting -> filename : 1
the resulting filename -> from : 1
resulting filename from -> replacing : 1
filename from replacing -> the : 1
from replacing the -> patterns : 1
replacing the patterns -> does : 1
the patterns does -> already : 1
patterns does already -> we : 1
does already we -> just : 1
already we just -> skip : 1
we just skip -> such : 1
just skip such -> we : 1
skip such we -> could : 1
such we could -> of : 1
we could of -> course : 1
could of course -> alternatively : 1
of course alternatively -> just : 1
course alternatively just -> append : 1
alternatively just append -> some : 1
just append some -> number : 1
append some number -> to : 1
some number to -> the : 1
to the path -> or : 1
to the path -> of : 1
the path or -> something : 1
path or something -> else : 1
or something else -> to : 1
else to resolve -> the : 1
to resolve the -> name : 1
resolve the name -> if : 1
the name if -> cout : 1
name if cout -> if : 1
if cout if -> cout : 1
cout if cout -> destination : 1
if cout destination -> file : 1
cout destination file -> else : 1
destination file else -> and : 1
file else and -> running : 1
else and running -> the : 1
program in an -> example : 1
an example directory -> yields : 1
an example directory -> that : 1
example directory yields -> the : 1
directory yields the -> following : 1
following i have -> put : 1
i have put -> some : 1
have put some -> jpeg : 1
put some jpeg -> pictures : 1
some jpeg pictures -> into : 1
jpeg pictures into -> the : 1
pictures into the -> directory : 1
into the directory -> but : 1
the directory but -> have : 1
directory but have -> given : 1
but have given -> them : 1
have given them -> different : 1
given them different -> name : 1
them different name -> endings : 1
different name endings -> and : 1
name endings and -> i : 1
endings and i -> executed : 1
and i executed -> the : 1
executed the program -> with : 1
with the patterns -> and : 1
patterns and and -> chose : 1
and and chose -> as : 1
and chose as -> for : 1
chose as for -> the : 1
for the result -> is : 1
result is a -> folder : 1
is a folder -> with : 1
a folder with -> homogenous : 1
folder with homogenous -> filename : 1
with homogenous filename -> ls : 1
homogenous filename ls -> jpeg : 1
filename ls jpeg -> jpg : 1
ls jpeg jpg -> jpeg : 1
jpg jpeg jpg -> ls : 1
jpeg jpg ls -> a : 1
jpg ls a -> disk : 1
ls a disk -> usage : 1
disk usage already -> implemented : 1
usage already implemented -> a : 1
already implemented a -> tool : 1
implemented a tool -> that : 2
tool that works -> like : 1
that works like -> on : 1
works like on -> or : 1
like on or -> on : 1
on or on -> but : 1
or on but -> just : 1
on but just -> as : 1
but just as -> these : 1
just as these -> it : 1
as these it -> print : 1
these it print -> the : 1
it print the -> file : 1
the file size -> for : 1
the file size -> of : 1
the file size -> calculated : 1
the file size -> to : 1
file size for -> order : 1
size for order -> to : 1
get the size -> equivalent : 1
the size equivalent -> of : 1
size equivalent of -> a : 1
equivalent of a -> we : 1
have to descend -> down : 1
it and sum -> up : 1
and sum up -> the : 1
up the size -> of : 1
of all files -> that : 2
of all files -> with : 1
files that it -> this : 1
that it this -> we : 1
we a tool -> that : 1
tool that does -> just : 1
does just the -> tool : 1
just the tool -> can : 1
the tool can -> be : 1
tool can be -> run : 1
be run on -> any : 1
run on any -> folder : 1
on any folder -> and : 1
any folder and -> will : 1
folder and will -> summarize : 1
and will summarize -> the : 1
will summarize the -> accumulated : 1
summarize the accumulated -> size : 1
the accumulated size -> of : 1
accumulated size of -> all : 2
of all directory -> to : 1
all directory to -> do : 1
directory to do -> this : 1
we an app -> that : 1
an app that -> iterates : 1
app that iterates -> over : 1
that iterates over -> a : 1
over a directory -> and : 1
directory and lists -> the : 1
and lists the -> file : 1
lists the file -> size : 1
file size of -> each : 1
size of each -> this : 1
size of each -> file : 1
is simple for -> regular : 1
simple for regular -> but : 1
for regular but -> if : 1
regular but if -> we : 1
are looking at -> a : 1
looking at a -> directory : 1
at a directory -> entry : 1
a directory entry -> that : 1
a directory entry -> is : 1
directory entry that -> itself : 1
entry that itself -> is : 1
that itself is -> a : 1
itself is a -> then : 1
is a then -> we : 1
have to look -> into : 1
to look into -> it : 1
look into it -> and : 1
it and summarize -> the : 1
and summarize the -> size : 1
summarize the size -> of : 1
the files it -> we : 1
files it we -> need : 1
a as an -> argument : 1
argument and returns -> its : 1
returns its size -> in : 1
its size in -> the : 1
size in the -> if : 1
a we simply -> return : 1
we simply return -> the : 1
simply return the -> file : 1
return the file -> size : 1
file size calculated -> by : 1
size calculated by -> static : 1
calculated by static -> if : 1
by static if -> return : 1
static if return -> it : 1
over all its -> entries : 1
all its entries -> and : 1
its entries and -> calculate : 1
entries and calculate -> their : 1
calculate their we -> end : 1
their we end -> up : 1
end up calling -> our : 1
up calling our -> own : 1
calling our own -> helper : 1
our own helper -> function : 1
own helper function -> we : 1
function we stumble -> upon : 1
we stumble upon -> subdirectories : 1
stumble upon subdirectories -> return : 1
upon subdirectories return -> const : 1
subdirectories return const -> return : 1
const return accum -> better : 1
return accum better -> we : 1
accum better we -> use : 1
better we use -> the : 1
as in other -> recipes : 1
in other recipes -> in : 1
this it just -> divides : 1
it just divides -> large : 1
just divides large -> file : 1
divides large file -> sizes : 1
large file sizes -> in : 1
file sizes in -> to : 1
sizes in to -> shorter : 1
in to shorter -> and : 1
to shorter and -> nicer : 1
shorter and nicer -> ones : 1
and nicer ones -> to : 1
nicer ones to -> read : 1
ones to read -> strings : 1
read strings with -> or : 1
strings with or -> giga : 1
with or giga -> static : 1
size return first -> thing : 1
return first thing -> we : 1
main function is -> to : 1
function is to -> check : 1
is to check -> user : 1
to check user -> provided : 1
provided a filesystem -> path : 1
filesystem path on -> the : 1
path on the -> command : 1
on the command -> if : 1
on the command -> and : 1
command if that -> is : 1
the current before -> we : 1
current before we -> check : 1
before we check -> int : 1
we check int -> char : 1
check int char -> path : 1
over all directory -> entries : 1
all directory entries -> and : 1
directory entries and -> print : 1
entries and print -> their : 1
print their sizes -> and : 1
their sizes and -> for : 1
sizes and for -> auto : 1
and for auto -> cout : 1
i launched it -> in : 1
launched it in -> a : 1
in a folder -> in : 1
a folder in -> the : 1
folder in the -> offline : 1
the offline as -> it : 1
offline as it -> contains : 1
as it contains -> subfolders : 1
it contains subfolders -> our : 1
contains subfolders our -> recursive : 1
subfolders our recursive -> file : 1
our recursive file -> size : 1
recursive file size -> summary : 1
file size summary -> helper : 1
size summary helper -> is : 1
summary helper is -> immediately : 1
helper is immediately -> c : 1
is immediately c -> cpp : 1
immediately c cpp -> it : 1
c cpp it -> whole : 1
cpp it whole -> program : 1
revolves around using -> on : 1
around using on -> regular : 1
using on regular -> if : 1
on regular if -> the : 1
regular if the -> program : 1
the program sees -> a : 1
program sees a -> it : 1
sees a it -> recursively : 1
a it recursively -> descends : 1
it recursively descends -> down : 1
recursively descends down -> into : 1
it and calls -> on : 1
on all its -> only : 1
all its only -> thing : 1
its only thing -> we : 1
we did to -> distinguish : 1
did to distinguish -> if : 1
we call directly -> or : 1
call directly or -> if : 1
directly or if -> we : 1
need the recursion -> strategy : 1
the recursion strategy -> was : 1
recursion strategy was -> asking : 1
strategy was asking -> the : 1
was asking the -> this : 1
asking the this -> works : 1
the this works -> well : 1
this works well -> for : 1
works well for -> directories : 1
well for directories -> that : 1
for directories that -> only : 1
directories that only -> contain : 1
that only contain -> regular : 1
only contain regular -> files : 1
contain regular files -> and : 1
regular files and -> simple : 1
regular files and -> symbolic : 1
files and simple -> as : 1
and simple as -> our : 1
simple as our -> example : 1
our example program -> it : 1
example program it -> would : 1
program it would -> crash : 1
it would crash -> under : 1
would crash under -> the : 1
crash under the -> following : 1
under the following -> because : 1
following because of -> unhandled : 1
because of unhandled -> only : 1
of unhandled only -> works : 1
unhandled only works -> on : 1
works on regular -> files : 1
on regular files -> and : 1
files and symbolic -> it : 1
and symbolic it -> throws : 1
symbolic it throws -> an : 2
it throws an -> exception : 2
exception in any -> other : 1
any other works -> on : 1
other works on -> symbolic : 1
works on symbolic -> it : 1
on symbolic it -> throws : 1
call it on -> a : 1
on a symbolic -> order : 1
a symbolic order -> to : 1
symbolic order to -> make : 1
make this example -> recipe : 1
this example recipe -> program : 1
example recipe program -> more : 1
recipe program more -> we : 1
program more we -> need : 1
more we need -> more : 1
we need more -> defensive : 1
need more defensive -> programming : 1
more defensive programming -> against : 1
defensive programming against -> the : 1
programming against the -> wrong : 1
against the wrong -> type : 1
the wrong type -> of : 1
wrong type of -> handling : 1
type of handling -> of : 1
of handling of -> statistics : 1
handling of statistics -> about : 1
of statistics about -> file : 1
about file the -> last : 1
file the last -> we : 1
last we implemented -> a : 1
that lists the -> size : 1
lists the size -> of : 1
of all members -> of : 1
all members of -> any : 1
members of any -> this : 1
of any this -> we : 1
will be counting -> sizes : 1
be counting sizes -> but : 1
counting sizes but -> this : 1
sizes but this -> time : 1
we will accumulate -> the : 1
will accumulate the -> size : 1
accumulate the size -> of : 1
of each file -> to : 1
of each file -> type : 1
each file to -> their : 1
file to their -> filename : 1
to their filename -> this : 1
their filename this -> way : 1
filename this way -> we : 1
print the user -> a : 1
the user a -> table : 1
user a table -> that : 1
a table that -> lists : 1
table that lists -> how : 1
that lists how -> many : 1
lists how many -> files : 1
how many files -> of : 1
how many files -> it : 1
many files of -> each : 1
files of each -> file : 1
each file type -> we : 1
file type we -> and : 1
type we and -> what : 1
and what the -> average : 1
what the average -> size : 1
the average size -> of : 1
average size of -> such : 1
size of such -> file : 1
of such file -> types : 1
such file types -> to : 1
file types to -> do : 1
types to do -> this : 1
that recursively iterates -> over : 1
recursively iterates over -> a : 1
over a given -> while : 1
a given while -> doing : 1
given while doing -> it : 1
doing it counts -> the : 1
it counts the -> number : 1
counts the number -> and : 1
number and size -> of : 1
and size of -> all : 1
of all grouped -> by : 1
all grouped by -> their : 1
grouped by their -> it : 1
by their it -> prints : 1
their it prints -> which : 1
it prints which -> filename : 1
prints which filename -> extensions : 1
which filename extensions -> exist : 1
filename extensions exist -> within : 1
extensions exist within -> that : 1
exist within that -> how : 1
within that how -> many : 1
that how many -> there : 1
how many there -> are : 1
many there are -> per : 1
per and their -> average : 1
and their average -> file : 1
their average file -> need : 1
average file need -> to : 1
file need to -> include : 1
to include necessary -> headers : 1
include necessary headers -> and : 1
namespace function was -> already : 1
function was already -> helpful : 1
was already helpful -> in : 1
already helpful in -> other : 1
helpful in other -> it : 1
in other it -> transforms : 1
other it transforms -> file : 1
it transforms file -> sizes : 1
transforms file sizes -> to : 1
file sizes to -> static : 1
sizes to static -> string : 1
to static string -> stringstream : 1
return we implement -> a : 1
return we implement -> the : 1
a object as -> its : 1
its argument and -> iterates : 1
argument and iterates -> over : 1
and iterates over -> all : 1
iterates over all -> files : 1
over all files -> within : 1
files within that -> on : 1
within that on -> its : 1
that on its -> it : 1
on its it -> collects : 1
its it collects -> all : 1
it collects all -> information : 1
collects all information -> in : 1
all information in -> a : 1
information in a -> map : 1
in a map -> that : 1
maps from filename -> extensions : 1
from filename extensions -> to : 1
filename extensions to -> pairs : 1
extensions to pairs -> that : 1
to pairs that -> contain : 1
pairs that contain -> the : 1
contain the total -> number : 1
the total number -> and : 1
the total number -> of : 1
total number and -> accumulated : 1
number and accumulated -> size : 1
and accumulated size -> of : 1
files that have -> the : 2
that have the -> same : 2
the same static -> path : 1
same static path -> for : 1
static path for -> auto : 1
path for auto -> a : 1
for auto a -> directory : 1
auto a directory -> entry : 1
directory entry is -> a : 1
entry is a -> directory : 1
is a directory -> we : 1
is a directory -> all : 1
a directory we -> skip : 1
directory we skip -> skipping : 1
we skip skipping -> it : 1
skip skipping it -> at : 1
skipping it at -> this : 1
it at this -> point : 1
this point does -> not : 1
point does not -> mean : 1
are not recursively -> descending : 1
not recursively descending -> into : 1
recursively descending into -> still : 1
descending into still -> does : 1
into still does -> but : 1
still does but -> we : 1
does but we -> do : 1
to look at -> the : 1
at the directory -> entries : 1
the directory entries -> const : 1
directory entries const -> path : 1
entries const path -> p : 1
const path p -> const : 1
const path p -> if : 1
path p const -> fs : 1
p const fs -> if : 1
const fs if -> we : 1
fs if we -> extract : 1
if we extract -> the : 1
we extract the -> extension : 1
extract the extension -> part : 1
the extension part -> of : 1
extension part of -> the : 1
the directory entry -> if : 1
directory entry if -> it : 1
if it has -> no : 1
it has no -> we : 1
has no we -> simply : 1
no we simply -> skip : 1
we simply skip -> const : 1
simply skip const -> string : 1
skip const string -> ext : 1
const string ext -> if : 1
string ext if -> we : 1
ext if we -> calculate : 1
calculate the size -> of : 1
of the file -> we : 1
looking we look -> up : 1
up the aggregate -> object : 1
the aggregate object -> in : 1
aggregate object in -> the : 1
object in the -> map : 1
map for this -> if : 1
this if there -> are : 1
there are at -> this : 1
are at this -> it : 1
it is created -> we : 1
is created we -> simply : 1
created we simply -> increment : 1
we simply increment -> the : 1
simply increment the -> file : 1
increment the file -> count : 1
the file count -> and : 1
file count and -> add : 1
count and add -> the : 1
and add the -> file : 1
add the file -> size : 1
file size to -> the : 1
size to the -> size : 1
to the size -> const : 1
size const size -> auto : 1
const size auto -> count : 1
size auto count -> we : 1
auto count we -> return : 1
count we return -> the : 1
return the return -> the : 1
the return the -> main : 1
main we take -> either : 1
we take either -> a : 1
take either a -> path : 1
either a path -> from : 1
a path from -> the : 1
path from the -> command : 1
the command the -> current : 1
command the current -> of : 1
the current of -> we : 1
current of we -> need : 1
to check it -> would : 1
check it would -> not : 1
make sense to -> continue : 1
sense to continue -> int : 1
to continue int -> char : 1
continue int char -> path : 1
not return can -> immediately : 1
return can immediately -> iterate : 1
can immediately iterate -> over : 1
immediately iterate over -> the : 1
over the map -> that : 1
the map that -> gives : 1
map that gives -> because : 1
that gives because -> the : 1
gives because the -> items : 1
because the items -> in : 1
the map contain -> the : 1
map contain the -> sum : 1
contain the sum -> of : 1
files with the -> same : 1
same we divide -> this : 1
we divide this -> sum : 1
divide this sum -> by : 1
this sum by -> the : 1
sum by the -> total : 1
by the total -> number : 1
number of such -> files : 1
of such files -> before : 1
such files before -> printing : 1
files before printing -> for : 1
before printing for -> auto : 1
printing for auto -> const : 1
cout left ext -> right : 1
left ext right -> count : 1
ext right count -> avg : 1
right count avg -> size : 1
count avg size -> and : 1
avg size and -> running : 1
size and running -> the : 1
following i gave -> it : 1
i gave it -> a : 1
it a folder -> from : 1
a folder from -> the : 1
folder from the -> offline : 1
from the offline -> reference : 1
the offline reference -> as : 1
offline reference as -> a : 1
reference as a -> avg : 1
as a avg -> avg : 1
a avg avg -> size : 1
avg avg size -> avg : 2
avg size avg -> avg : 1
avg size avg -> size : 4
size avg avg -> size : 1
size avg size -> avg : 3
size avg size -> a : 1
avg size a -> tool : 1
size a tool -> that : 1
duplicates with are -> a : 1
with are a -> lot : 1
lot of tools -> that : 1
of tools that -> compress : 1
tools that compress -> data : 1
that compress data -> in : 1
compress data in -> various : 1
data in various -> the : 1
in various the -> most : 1
various the most -> famous : 1
the most famous -> examples : 1
most famous examples -> for : 1
famous examples for -> file : 1
examples for file -> packing : 1
for file packing -> are : 1
file packing are -> zip : 1
packing are zip -> and : 1
are zip and -> such : 1
zip and such -> tools : 1
and such tools -> try : 1
such tools try -> to : 1
tools try to -> reduce : 1
try to reduce -> the : 1
reduce the size -> of : 1
size of files -> by : 1
of files by -> reducing : 1
files by reducing -> internal : 1
by reducing internal -> compressing : 1
reducing internal compressing -> files : 1
internal compressing files -> in : 1
compressing files in -> a : 1
very simple way -> to : 1
way to reduce -> disk : 1
to reduce disk -> usage : 1
reduce disk usage -> is : 1
disk usage is -> just : 1
usage is just -> in : 1
is just in -> this : 1
just in this -> we : 1
tool that crawls -> a : 1
that crawls a -> directory : 1
crawls a directory -> while : 1
a directory while -> it : 1
directory while it -> will : 1
while it will -> look : 1
will look for -> files : 1
look for files -> that : 1
for files that -> have : 1
for files that -> are : 1
same if it -> finds : 1
it finds such -> it : 1
finds such it -> will : 1
such it will -> duplicates : 1
it will duplicates -> but : 1
will duplicates but -> all : 1
duplicates but all -> removed : 1
but all removed -> files : 1
all removed files -> will : 1
removed files will -> be : 1
files will be -> substituted : 1
will be substituted -> links : 1
be substituted links -> that : 1
substituted links that -> point : 1
links that point -> to : 1
to the now -> unique : 1
the now unique -> this : 1
now unique this -> saves : 1
unique this saves -> spaces : 1
this saves spaces -> without : 1
saves spaces without -> any : 1
spaces without any -> while : 1
without any while -> at : 1
any while at -> the : 1
same time preserving -> all : 1
time preserving all -> to : 1
preserving all to -> do : 1
all to do -> this : 1
tool that finds -> out : 1
that finds out -> which : 1
finds out which -> files : 1
out which files -> in : 1
out which files -> are : 1
which files in -> a : 1
a directory are -> duplicates : 1
directory are duplicates -> of : 1
are duplicates of -> each : 2
duplicates of each -> with : 1
duplicates of each -> we : 1
of each with -> that : 1
each with that -> it : 1
it will remove -> all : 1
will remove all -> but : 1
remove all but -> one : 1
all but one -> of : 1
but one of -> all : 1
one of all -> duplicated : 1
of all duplicated -> and : 1
all duplicated and -> substitute : 1
duplicated and substitute -> them : 1
substitute them which -> reduces : 1
them which reduces -> the : 1
reduces the folder -> sure : 1
the folder sure -> to : 1
folder sure to -> have : 1
sure to have -> a : 1
have a of -> your : 1
a of your -> we : 1
of your we -> will : 1
your we will -> be : 1
will be playing -> with : 1
be playing with -> stl : 1
playing with stl -> functions : 1
with stl functions -> that : 1
stl functions that -> remove : 1
functions that remove -> a : 1
that remove a -> path : 1
remove a path -> in : 1
path in such -> a : 1
a program can -> lead : 1
program can lead -> to : 1
to a program -> that : 1
program that greedily -> removes : 1
that greedily removes -> too : 1
greedily removes too -> many : 1
removes too many -> files : 1
too many files -> in : 1
many files in -> unwanted : 1
files in unwanted -> we : 1
in unwanted we -> need : 1
unwanted we need -> to : 1
namespace and by -> using : 1
which files are -> duplicates : 1
files are duplicates -> of : 1
of each we -> will : 1
each we will -> construct : 1
will construct a -> hash : 1
construct a hash -> map : 1
hash map that -> maps : 1
maps from hashes -> of : 1
from hashes of -> file : 1
hashes of file -> content : 1
of file content -> to : 1
file content to -> the : 1
the path of -> the : 1
path of the -> first : 1
the first file -> from : 1
first file from -> which : 1
from which that -> hash : 1
which that hash -> was : 1
that hash was -> it : 1
hash was it -> would : 1
was it would -> be : 1
be a better -> idea : 1
a better idea -> to : 1
better idea to -> use : 1
idea to use -> a : 1
use a production -> hash : 1
a production hash -> algorithm : 1
production hash algorithm -> for : 1
hash algorithm for -> files : 1
algorithm for files -> such : 1
for files such -> or : 1
files such or -> an : 1
such or an -> sha : 1
or an sha -> in : 1
an sha in -> order : 1
sha in order -> to : 2
keep the recipe -> clean : 1
the recipe clean -> and : 1
recipe clean and -> we : 1
clean and we -> just : 1
and we just -> read : 1
we just read -> the : 1
just read the -> whole : 1
file into a -> string : 1
file into a -> this : 1
then use the -> same : 1
the same hash -> function : 1
same hash function -> object : 1
hash function object -> that : 1
that already uses -> for : 1
already uses for -> strings : 1
uses for strings -> to : 1
for strings to -> calculate : 1
strings to calculate -> static : 1
to calculate static -> path : 1
calculate static path -> ifstream : 1
static path ifstream -> is : 1
path ifstream is -> if : 1
ifstream is if -> throw : 1
is if throw -> string : 1
if throw string -> return : 1
throw string return -> we : 1
string return we -> implement : 1
function that constructs -> such : 1
that constructs such -> a : 1
such a hash -> map : 1
hash map and -> deletes : 1
map and deletes -> it : 1
and deletes it -> iterates : 1
deletes it iterates -> recursively : 1
it iterates recursively -> through : 1
iterates recursively through -> a : 1
recursively through a -> directory : 1
through a directory -> and : 1
directory and its -> static : 1
and its static -> path : 1
its static path -> count : 1
static path count -> for : 1
path count for -> auto : 1
count for auto -> every : 1
for auto every -> directory : 1
auto every directory -> it : 1
every directory it -> checks : 1
directory it checks -> is : 1
it checks is -> a : 1
checks is a -> directory : 1
a directory all -> directory : 1
directory all directory -> items : 1
all directory items -> are : 1
directory items are -> for : 1
items are for -> every : 1
are for every -> we : 1
every we generate -> its : 1
we generate its -> hash : 1
generate its hash -> value : 1
its hash value -> and : 1
hash value and -> try : 1
value and try -> to : 1
to insert it -> into : 1
into the hash -> if : 1
the hash if -> the : 1
hash if the -> hash : 1
if the hash -> contains : 1
the hash contains -> the : 1
hash contains the -> same : 1
same then this -> means : 1
that we already -> inserted : 1
we already inserted -> a : 1
already inserted a -> file : 1
inserted a file -> with : 1
inserted a file -> because : 1
a file with -> the : 1
file with the -> same : 1
same this means -> that : 1
we just found -> a : 1
just found a -> in : 1
found a in -> case : 1
a in case -> of : 1
of a clash -> during : 1
a clash during -> the : 1
clash during the -> second : 1
during the second -> value : 1
the second value -> in : 1
second value in -> the : 1
the pair that -> returns : 1
pair that returns -> is : 1
that returns is -> const : 1
returns is const -> path : 1
is const path -> p : 1
path p if -> const : 1
p if const -> auto : 1
auto the return -> values : 1
can tell the -> user : 1
we just inserted -> a : 1
just inserted a -> file : 1
a file because -> we : 1
file because we -> have : 1
have seen its -> hash : 1
seen its hash -> for : 1
its hash for -> the : 1
hash for the -> first : 1
in case we -> found : 1
case we found -> a : 1
we found a -> we : 1
found a we -> tell : 1
a we tell -> the : 1
the user what -> other : 1
user what other -> file : 1
what other file -> it : 1
other file it -> is : 1
file it is -> a : 1
is a duplicate -> of : 9
a duplicate of -> and : 1
a duplicate of -> the : 2
a duplicate of -> removed : 6
duplicate of and -> delete : 1
of and delete -> after : 1
and delete after -> we : 1
delete after we -> create : 1
after we create -> a : 1
create a symbolic -> link : 1
a symbolic link -> that : 1
symbolic link that -> replaces : 1
link that replaces -> the : 1
that replaces the -> if : 1
replaces the if -> cout : 1
the if cout -> because : 1
if cout because -> it : 1
cout because it -> is : 1
duplicate of the -> filesystem : 1
duplicate of the -> other : 1
the filesystem return -> the : 1
filesystem return the -> number : 1
number of files -> we : 1
of files we -> deleted : 1
files we deleted -> and : 1
we deleted and -> replaced : 1
deleted and replaced -> with : 1
and replaced with -> return : 1
replaced with return -> the : 1
with return the -> main : 1
main we make -> sure : 1
we make sure -> that : 1
provided a directory -> on : 1
a directory on -> the : 1
the command and -> that : 1
command and that -> this : 1
that this directory -> int : 1
this directory int -> char : 1
directory int char -> if : 1
cout return path -> dir : 1
return path dir -> if : 1
not return only -> thing : 1
return only thing -> we : 1
to do now -> is : 1
now is to -> on : 1
is to on -> this : 1
to on this -> directory : 1
on this directory -> and : 1
this directory and -> print : 1
directory and print -> how : 1
many files it -> const : 1
files it const -> dupes : 1
it const dupes -> cout : 1
const dupes cout -> dupes : 1
dupes cout dupes -> and : 1
cout dupes and -> running : 1
dupes and running -> the : 1
the program on -> an : 1
program on an -> example : 1
on an example -> directory : 1
example directory that -> contains : 1
directory that contains -> some : 1
contains some duplicate -> files : 1
some duplicate files -> looks : 1
duplicate files looks -> like : 1
files looks like -> the : 1
like the i -> used : 1
the i used -> the : 1
i used the -> tool : 1
used the tool -> to : 1
the tool to -> check : 1
tool to check -> the : 1
check the folder -> size : 1
the folder size -> before : 1
folder size before -> and : 1
size before and -> after : 1
and after launching -> our : 1
after launching our -> program : 1
launching our program -> to : 1
program to demonstrate -> that : 1
to demonstrate that -> the : 1
demonstrate that the -> approach : 1
that the approach -> du : 1
the approach du -> removed : 1
approach du removed -> because : 1
du removed because -> it : 1
removed because it -> is : 6
duplicate of removed -> because : 5
duplicate of removed -> du : 1
of removed because -> it : 5
of removed du -> it : 1
removed du it -> used : 1
du it used -> the : 1
it used the -> in : 1
used the in -> order : 1
to make a -> filesystem : 1
make a filesystem -> entry : 1
a filesystem entry -> point : 1
filesystem entry point -> to : 1
entry point to -> another : 1
point to another -> file : 1
to another file -> in : 1
another file in -> the : 1
can avoid we -> could : 1
avoid we could -> also : 1
also have set -> a : 1
have set a -> hard : 1
set a hard -> link : 1
a hard link -> using : 1
hard link using -> this : 1
link using this -> is : 1
using this is -> but : 1
is but hard -> links : 1
but hard links -> have : 1
hard links have -> other : 1
links have other -> technical : 1
have other technical -> implications : 1
other technical implications -> than : 1
technical implications than -> soft : 1
implications than soft -> different : 1
than soft different -> filesystem : 1
soft different filesystem -> formats : 1
different filesystem formats -> might : 1
filesystem formats might -> not : 1
formats might not -> support : 1
might not support -> hard : 1
not support hard -> links : 1
support hard links -> at : 1
hard links at -> or : 1
links at or -> only : 1
at or only -> a : 1
or only a -> certain : 1
only a certain -> number : 1
a certain number -> of : 1
certain number of -> hard : 1
number of hard -> links : 1
of hard links -> that : 1
hard links that -> refer : 1
links that refer -> to : 1
that refer to -> the : 1
refer to the -> same : 1
the same another -> problem : 1
same another problem -> is : 1
another problem is -> that : 1
is that hard -> links : 1
that hard links -> cannot : 1
hard links cannot -> link : 1
links cannot link -> from : 1
cannot link from -> one : 1
link from one -> filesystem : 1
from one filesystem -> to : 1
one filesystem to -> the : 1
filesystem to the -> apart : 1
to the apart -> from : 1
the apart from -> implementation : 1
apart from implementation -> there : 1
from implementation there -> is : 1
implementation there is -> one : 1
is one source -> when : 1
one source when -> using : 1
source when using -> or : 1
when using or -> the : 1
using or the -> following : 1
or the following -> lines : 1
the following lines -> contain : 1
following lines contain -> a : 1
lines contain a -> can : 1
contain a can -> you : 1
a can you -> spot : 1
can you spot -> it : 1
you spot it -> a : 1
spot it a -> path : 1
it a path -> b : 1
a path b -> bad : 1
path b bad -> happens : 1
b bad happens -> when : 1
bad happens when -> executing : 1
happens when executing -> this : 1
when executing this -> but : 1
executing this but -> the : 1
but the symlink -> will : 1
the symlink will -> be : 1
symlink will be -> the : 1
be the symlink -> points : 1
the symlink points -> to : 1
symlink points to -> which : 1
points to which -> is : 1
is the problem -> is : 1
is the problem -> with : 1
it should really -> either : 1
should really either -> point : 1
really either point -> to : 1
either point to -> or : 1
point to or -> the : 1
or the call -> uses : 1
the call uses -> a : 1
call uses a -> correct : 1
uses a correct -> absolute : 1
a correct absolute -> path : 1
correct absolute path -> if : 1
absolute path if -> we : 1
path if we -> write : 1
we write does -> not : 1
write does not -> check : 1
does not check -> path : 1
not check path -> we : 1
check path we -> are : 1
path we are -> linking : 1
we are linking -> to : 1
are linking to -> is : 1
linking to is -> already : 1
to is already -> noticed : 1
is already noticed -> that : 1
already noticed that -> our : 1
noticed that our -> hash : 1
that our hash -> function : 1
our hash function -> is : 1
hash function is -> a : 1
is a too -> simple : 1
a too simple -> for : 1
too simple for -> the : 1
simple for the -> sake : 1
sake of keeping -> this : 1
of keeping this -> recipe : 1
keeping this recipe -> simple : 1
this recipe simple -> and : 1
recipe simple and -> without : 1
simple and without -> external : 1
and without external -> we : 1
without external we -> chose : 1
external we chose -> this : 1
we chose this -> is : 1
chose this is -> the : 1
with our hash -> there : 1
our hash there -> are : 1
hash there are -> actually : 1
there are actually -> read : 1
are actually read -> the : 1
actually read the -> whole : 1
this is disastrous -> for : 1
is disastrous for -> files : 1
disastrous for files -> that : 1
that are larger -> than : 1
are larger than -> our : 1
larger than our -> system : 1
than our system -> hash : 1
our system hash -> function : 1
system hash function -> trait : 1
hash function trait -> is : 1
function trait is -> most : 1
trait is most -> probably : 1
probably not designed -> for : 1
not designed for -> such : 1
designed for such -> we : 1
for such we -> are : 1
such we are -> looking : 1
are looking for -> a : 1
looking for a -> better : 1
for a better -> hash : 1
a better hash -> we : 1
better hash we -> should : 1
hash we should -> take : 1
we should take -> one : 1
should take one -> that : 1
take one that -> is : 1
is and that -> makes : 1
and that makes -> sure : 1
that makes sure -> that : 1
makes sure that -> no : 1
sure that no -> large : 1
that no large -> but : 1
no large but -> different : 1
large but different -> files : 1
but different files -> get : 1
different files get -> the : 1
files get the -> same : 1
same the latter -> requirement : 1
the latter requirement -> is : 1
latter requirement is -> maybe : 1
requirement is maybe -> the : 1
is maybe the -> most : 1
maybe the most -> important : 1
most important if -> we : 1
important if we -> decide : 1
if we decide -> that : 1
decide that one -> file : 1
that one file -> is : 1
one file is -> a : 1
file is a -> duplicate : 1
the other although -> they : 1
other although they -> do : 1
although they do -> not : 1
do not contain -> the : 1
same we surely -> have : 1
we surely have -> some : 1
surely have some -> after : 1
have some after -> deleting : 1
some after deleting -> hash : 1
after deleting hash -> algorithms : 1
deleting hash algorithms -> for : 1
hash algorithms for -> or : 1
algorithms for or -> one : 1
for or one -> of : 1
or one of -> the : 1
of the sha -> in : 1
the sha in -> order : 1
to get access -> to : 1
get access to -> such : 1
access to such -> functions : 1
to such functions -> in : 1
such functions in -> our : 1
our we could -> use : 1
could use the -> openssl : 1
use the openssl -> cryptography : 1
the openssl cryptography -> for : 1
