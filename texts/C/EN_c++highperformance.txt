rights : 1
retrieval : 1
transmitted : 1
permission : 1
quotations : 1
articles : 1
effort : 1
preparation : 1
sold : 1
dealers : 1
liable : 1
damages : 1
alleged : 1
indirectly : 1
endeavored : 1
trademark : 1
companies : 1
products : 1
appropriate : 1
denim : 1
nikhil : 1
jijo : 1
vaidehi : 1
rekha : 1
tania : 1
arvindkumar : 1
gupta : 1
january : 1
digital : 1
plan : 1
ebooks : 1
professionals : 1
skill : 1
plans : 1
video : 1
bookmark : 1
pdf : 1
epub : 1
upgrade : 1
entitled : 1
discount : 1
touch : 1
discounts : 1
stopped : 1
reinventing : 1
year : 1
gone : 1
frontend : 1
substantial : 1
struggling : 1
akin : 1
tailored : 1
nonsensical : 1
enterprise : 1
phrasing : 1
powers : 1
unbearable : 1
teaches : 1
rapidly : 1
developing : 1
framed : 1
landmarks : 1
logical : 1
progressions : 1
transparently : 1
considerations : 1
territory : 1
wide : 1
variety : 1
loved : 1
revolved : 1
editor : 1
scripting : 1
nailing : 1
legs : 1
hammer : 1
beautiful : 1
tremendously : 1
privilege : 1
door : 1
walk : 1
exciting : 1
brilliant : 1
developer : 1
professional : 1
architectural : 1
medical : 1
visualization : 1
mentice : 1
raysearch : 1
laboratories : 1
propellerhead : 1
media : 1
acknowledge : 1
colleagues : 1
broadened : 1
carrier : 1
alphabetical : 1
andreas : 1
peter : 1
rickard : 1
sigfred : 1
tobias : 1
philippe : 1
johan : 1
marcus : 1
mattias : 1
reviewers : 1
love : 1
freelance : 1
consultant : 1
focusing : 1
professionally : 1
ranging : 1
taught : 1
courses : 1
bs : 1
engineering : 1
kth : 1
royal : 1
institute : 1
contributed : 1
mauget : 1
outstanding : 1
family : 1
hours : 1
journey : 1
ago : 1
university : 1
informatics : 1
radioelectronics : 1
artificial : 1
intelligence : 1
industrial : 1
likes : 1
studying : 1
regula : 1
solarwinds : 1
activist : 1
artem : 1
lapitsky : 1
wisdom : 1
eniac : 1
continues : 1
lou : 1
reactive : 1
blogs : 1
keyhole : 1
senior : 1
coauthor : 1
wrote : 1
developerworks : 1
tutorials : 1
websphere : 1
journal : 1
ldap : 1
cowrote : 1
certification : 1
reviewer : 1
recruiting : 1
submit : 1
fun : 1
drafts : 1
assemble : 1
consistent : 1
debated : 1
outlines : 1
structuring : 1
dives : 1
rolled : 1
overcomes : 1
focuses : 1
explains : 1
explores : 1
showing : 1
preferable : 1
helpful : 1
descriptions : 1
cmake : 1
script : 1
install : 1
explorer : 1
emailed : 1
downloads : 1
onscreen : 1
unzip : 1
bundle : 1
hosted : 1
github : 1
bundles : 1
rich : 1
catalog : 1
conventions : 1
dummy : 1
wish : 1
items : 1
menus : 1
dialog : 1
notes : 1
errata : 1
submission : 1
illegal : 1
website : 1
contact : 1
expertise : 1
contributing : 1
purchase : 1
exploring : 1
bases : 1
price : 1
plays : 1
desirable : 1
strictly : 1
blurry : 1
slightest : 1
closer : 1
spoken : 1
abstract : 1
nowadays : 1
inherited : 1
idioms : 1
hamlet : 1
robot : 1
lingo : 1
noticeable : 1
terminology : 1
polymorphism : 1
recent : 1
former : 1
distinguishes : 1
strived : 1
emitted : 1
footprint : 1
compromising : 1
comprehensive : 1
history : 1
ensured : 1
living : 1
strength : 1
deterministic : 1
emerged : 1
javascript : 1
achieves : 1
bytecode : 1
precompiled : 1
collector : 1
numdoors : 1
anywhere : 1
nearby : 1
locations : 1
discussions : 1
concluded : 1
leaks : 1
highlight : 1
encapsulated : 1
salt : 1
pepper : 1
toppings : 1
powerful : 1
unintentional : 1
teams : 1
emulated : 1
leak : 1
forcing : 1
delicately : 1
restrict : 1
annotations : 1
volume : 1
ignores : 1
instantly : 1
mentioning : 1
master : 1
reliance : 1
importing : 1
imported : 1
headers : 1
pasted : 1
standardized : 1
steeper : 1
curve : 1
diving : 1
compromise : 1
shall : 1
yamahaengine : 1
loose : 1
derivable : 1
oil : 1
preventing : 1
rethink : 1
distinct : 1
pacemaker : 1
plant : 1
uncontrollable : 1
uncertainty : 1
mechanics : 1
environmental : 1
escape : 1
route : 1
buggy : 1
leaf : 1
persist : 1
preserve : 1
generator : 1
idiom : 1
exiting : 1
bloating : 1
considering : 1
necessities : 1
planned : 1
inclusion : 1
highlighted : 1
myths : 1
confusion : 1
community : 1
flavors : 1
discouraged : 1
signatures : 1
browsing : 1
viewing : 1
definition : 1
variants : 1
initiated : 1
debate : 1
typed : 1
participate : 1
z : 1
elision : 1
temporaries : 1
declaration : 1
communicates : 1
format : 1
enhanced : 1
typical : 1
clones : 1
isabove : 1
declaring : 1
inverse : 1
mutation : 1
improves : 1
clarifying : 1
vice : 1
reassigned : 1
unassigned : 1
propagate : 1
constness : 1
losses : 1
subsequent : 1
flexible : 1
nearly : 1
vs : 1
accepting : 1
resembling : 1
enum : 1
america : 1
tie : 1
deers : 1
stumbles : 1
manipulate : 1
explanation : 1
losing : 1
swaps : 1
steals : 1
necessity : 1
says : 1
texture : 1
remain : 1
esoteric : 1
marking : 1
resorts : 1
essence : 1
determining : 1
clone : 1
covers : 1
themselves : 1
yields : 1
xor : 1
jne : 1
rep : 1
memmove : 1
jmp : 1
squeeze : 1
mix : 1
mixture : 1
towerlist : 1
permitted : 1
investigate : 1
max : 1
cleared : 1
withholds : 1
encouraged : 1
topics : 1
importantly : 1
formal : 1
mastered : 1
skim : 1
suggested : 1
foremost : 1
evaluating : 1
skip : 1
subscript : 1
absolute : 1
cuts : 1
halve : 1
timing : 1
exploiting : 1
practically : 1
scanning : 1
informal : 1
pick : 1
estimated : 1
noting : 1
plotted : 1
differ : 1
slowest : 1
sufficiently : 1
lists : 1
differently : 1
searched : 1
confused : 1
anymore : 1
dividing : 1
orders : 1
exponentially : 1
waste : 1
doubling : 1
geometric : 1
tackle : 1
measurable : 1
suggesting : 1
quantitative : 1
tends : 1
khz : 1
concerned : 1
stopwatch : 1
gut : 1
feeling : 1
reusing : 1
ideas : 1
sketched : 1
motivate : 1
unusual : 1
throughput : 1
converter : 1
precise : 1
transactions : 1
images : 1
hear : 1
devices : 1
polling : 1
nonfunctional : 1
sporadic : 1
late : 1
recommendation : 1
nightly : 1
wisely : 1
scroll : 1
plotting : 1
excuse : 1
outliers : 1
economist : 1
vilfredo : 1
population : 1
suggests : 1
news : 1
tweaking : 1
graph : 1
callers : 1
callees : 1
hybrid : 1
analyzed : 1
gather : 1
records : 1
timer : 1
clocktype : 1
consecutive : 1
adjusted : 1
preprocessor : 1
nonstandard : 1
inaccuracy : 1
summarized : 1
self : 1
bottlenecks : 1
happened : 1
showed : 1
registered : 1
tune : 1
missed : 1
strengths : 1
quantify : 1
hotspots : 1
walking : 1
treats : 1
restricts : 1
hexadecimal : 1
tempting : 1
processor : 1
macbook : 1
pro : 1
equipped : 1
terminal : 1
gb : 1
presenting : 1
detailed : 1
facts : 1
cycles : 1
rough : 1
article : 1
credited : 1
jeff : 1
effect : 1
wiping : 1
caching : 1
resizing : 1
seldom : 1
concrete : 1
tedious : 1
singly : 1
traverse : 1
changed : 1
stays : 1
maps : 1
tables : 1
modulo : 1
edge : 1
chaining : 1
unequal : 1
ending : 1
hashed : 1
landed : 1
respect : 1
legal : 1
reuse : 1
seed : 1
adhere : 1
contract : 1
inefficient : 1
disaster : 1
collisions : 1
consequence : 1
supporting : 1
pop : 1
options : 1
lowest : 1
finishing : 1
temporal : 1
probability : 1
compact : 1
smallobject : 1
bigobject : 1
structs : 1
preferably : 1
sums : 1
obj : 1
repeat : 1
collections : 1
stumble : 1
player : 1
security : 1
grouped : 1
authinfo : 1
cohesion : 1
shrink : 1
aggressive : 1
shrinking : 1
viable : 1
pros : 1
cons : 1
relate : 1
flags : 1
connecting : 1
took : 1
down : 1
warned : 1
extracting : 1
encapsulation : 1
cumbersome : 1
comprise : 1
maintain : 1
scenario : 1
face : 1
opt : 1
principles : 1
specifications : 1
processors : 1
impacts : 1
organize : 1
versatile : 1
basis : 1
incorporate : 1
auxiliary : 1
occurrences : 1
fill : 1
backward : 1
dereferencing : 1
methodology : 1
succeeding : 1
val : 1
facade : 1
applicable : 1
subtract : 1
tag : 1
chooses : 1
representations : 1
conveniently : 1
obscure : 1
fewer : 1
wrapping : 1
linearrangeiterator : 1
duplicate : 1
linearrange : 1
specifying : 1
daily : 1
underuse : 1
rearranges : 1
reserved : 1
enlarge : 1
capable : 1
enlarging : 1
preallocated : 1
reallocate : 1
flower : 1
garden : 1
attached : 1
suggest : 1
insensitive : 1
criteria : 1
satisfies : 1
qualify : 1
promote : 1
revisit : 1
deliver : 1
optimally : 1
corner : 1
wants : 1
indicated : 1
resorting : 1
verbosity : 1
incorporating : 1
lowered : 1
nested : 1
instinctively : 1
kvp : 1
overstate : 1
bump : 1
erasing : 1
reveals : 1
reallocates : 1
expense : 1
significantly : 1
browse : 1
unfair : 1
solutions : 1
uncommon : 1
unrolled : 1
unrolling : 1
cpus : 1
handmade : 1
abbreviations : 1
median : 1
body : 1
scanner : 1
tallest : 1
shortest : 1
sub : 1
operated : 1
proposed : 1
composing : 1
ineffective : 1
warriors : 1
miss : 1
essentially : 1
enhancement : 1
pleasant : 1
satisfy : 1
dataset : 1
erased : 1
leaves : 1
approaches : 1
chained : 1
surprise : 1
shuffling : 1
reveal : 1
life : 1
explaining : 1
bother : 1
illusion : 1
translation : 1
backing : 1
pagefile : 1
interrupt : 1
guessed : 1
resident : 1
dirty : 1
vacant : 1
paged : 1
loading : 1
stalls : 1
segments : 1
formally : 1
upward : 1
downward : 1
exceeds : 1
examine : 1
feel : 1
enters : 1
overflow : 1
recurse : 1
crashes : 1
ulimit : 1
confirms : 1
mac : 1
configure : 1
deallocation : 1
issue : 1
repeats : 1
nowhere : 1
familiar : 1
region : 1
perhaps : 1
unfamiliar : 1
destroying : 1
uninitialized : 1
rewritten : 1
restrictions : 1
suitably : 1
minimizes : 1
rearrangement : 1
smallest : 1
placing : 1
align : 1
database : 1
leaking : 1
guide : 1
letting : 1
controlled : 1
sending : 1
controls : 1
closing : 1
doubt : 1
safest : 1
pops : 1
ceases : 1
owners : 1
conduct : 1
fuzzy : 1
llvm : 1
elaborate : 1
chars : 1
cleverness : 1
flag : 1
anyway : 1
endian : 1
roll : 1
summarizes : 1
researching : 1
unrestricted : 1
sandboxed : 1
finishes : 1
outperform : 1
faced : 1
indication : 1
handing : 1
develop : 1
hands : 1
reclamation : 1
reclaimed : 1
demonstration : 1
purposes : 1
wasteful : 1
specifier : 1
bitwise : 1
rounds : 1
belongs : 1
requested : 1
fall : 1
occasions : 1
supply : 1
alloc : 1
improvements : 1
omits : 1
famous : 1
blog : 1
post : 1
mallocator : 1
ctor : 1
pv : 1
shortalloc : 1
rebind : 1
smallset : 1
overuse : 1
bottleneck : 1
evaluations : 1
howsoever : 1
hereforth : 1
cubes : 1
valuei : 1
valuef : 1
distinguished : 1
caught : 1
exponents : 1
unlike : 1
postfixes : 1
checking : 1
child : 1
infant : 1
glitch : 1
attribute : 1
retrieves : 1
iteratortype : 1
interpolate : 1
mixes : 1
weighted : 1
disallow : 1
achieving : 1
interpolated : 1
whale : 1
achievable : 1
failing : 1
fin : 1
electricity : 1
squid : 1
salmon : 1
requiring : 1
recursion : 1
restriction : 1
summed : 1
unknown : 1
till : 1
ksum : 1
scopes : 1
differentiate : 1
inheritance : 1
inferred : 1
subset : 1
statically : 1
viewed : 1
deduces : 1
deduce : 1
wonder : 1
simplistic : 1
unroll : 1
metafunction : 1
obtained : 1
unfold : 1
bracket : 1
binding : 1
agents : 1
packs : 1
identified : 1
workaround : 1
repeated : 1
concentrate : 1
somewhat : 1
overwritten : 1
companion : 1
expanding : 1
functorimpl : 1
chain : 1
boilerplate : 1
inspects : 1
usefulness : 1
serialization : 1
logging : 1
traditionally : 1
flat : 1
reflects : 1
retype : 1
constructors : 1
reflecting : 1
reflected : 1
assured : 1
typing : 1
fortunately : 1
assure : 1
giving : 1
collide : 1
enabled : 1
casts : 1
satisfied : 1
delay : 1
generation : 1
statements : 1
map : 1
identify : 1
wherever : 1
luxury : 1
literal : 1
accumulating : 1
subtraction : 1
trick : 1
literals : 1
letters : 1
exchanged : 1
precalculated : 1
hundred : 1
popped : 1
unrelated : 1
toolbox : 1
education : 1
bloats : 1
resultant : 1
undesired : 1
audiolibrary : 1
collect : 1
act : 1
concatenates : 1
misusing : 1
destructed : 1
snag : 1
mathematics : 1
omit : 1
hood : 1
loses : 1
nearer : 1
intermediate : 1
yielding : 1
nicest : 1
implementor : 1
received : 1
closest : 1
bingo : 1
requesting : 1
parse : 1
dark : 1
tighten : 1
noted : 1
lead : 1
stupid : 1
invocable : 1
modification : 1
randomly : 1
nearest : 1
needle : 1
emulate : 1
python : 1
argue : 1
educational : 1
locally : 1
pipeable : 1
containsproxy : 1
ugly : 1
hack : 1
abuse : 1
praise : 1
asia : 1
inproxy : 1
instantiate : 1
curly : 1
adapters : 1
understood : 1
pieces : 1
advice : 1
texts : 1
theoretical : 1
serves : 1
refresher : 1
smartphones : 1
subtask : 1
simulation : 1
complicates : 1
reproduce : 1
cease : 1
innocent : 1
trace : 1
console : 1
overlapping : 1
flow : 1
mechanisms : 1
numbered : 1
schedule : 1
appears : 1
addressable : 1
challenges : 1
convinced : 1
abbreviated : 1
warn : 1
involve : 1
pretend : 1
initially : 1
mutually : 1
simultaneously : 1
emphasizing : 1
mutual : 1
exclusion : 1
unlock : 1
undisturbed : 1
net : 1
serializing : 1
scalability : 1
degree : 1
none : 1
fulfilled : 1
difficult : 1
respectively : 1
regained : 1
strange : 1
difficulties : 1
surprised : 1
discovered : 1
tour : 1
components : 1
identifier : 1
production : 1
satisfactorily : 1
installed : 1
forgot : 1
waits : 1
wakes : 1
message : 1
wake : 1
interleaved : 1
treat : 1
outputting : 1
talked : 1
normally : 1
snapshot : 1
units : 1
six : 1
joined : 1
classic : 1
preferred : 1
grabbing : 1
money : 1
accounts : 1
defer : 1
mutexes : 1
consumed : 1
cv : 1
mtx : 1
pushes : 1
notifying : 1
apart : 1
unlocks : 1
consumers : 1
woken : 1
emptied : 1
awoken : 1
phenomenon : 1
spurious : 1
wakeups : 1
maintaining : 1
farther : 1
accomplish : 1
dealt : 1
sides : 1
receiving : 1
e : 1
forwarded : 1
promises : 1
administration : 1
managing : 1
communicated : 1
rewriting : 1
unchanged : 1
replace : 1
discussion : 1
scott : 1
recall : 1
decremented : 1
entities : 1
lives : 1
synchronizing : 1
semantically : 1
environments : 1
turn : 1
overloads : 1
closely : 1
touches : 1
intuitive : 1
thoroughly : 1
herb : 1
sutter : 1
freely : 1
stages : 1
transformations : 1
reordered : 1
happily : 1
releasing : 1
arbitrarily : 1
outside : 1
interleaving : 1
downside : 1
protection : 1
weaker : 1
decrementing : 1
wealth : 1
heard : 1
removes : 1
lockfreequeue : 1
stress : 1
disable : 1
incorrect : 1
nobody : 1
responsive : 1
smooth : 1
app : 1
fps : 1
active : 1
switching : 1
intensive : 1
crawler : 1
pool : 1
tweak : 1
lowering : 1
hints : 1
warm : 1
utilization : 1
configuration : 1
destructive : 1
logically : 1
invalidate : 1
improving : 1
unit : 1
theories : 1
abstracted : 1
ghz : 1
gigahertz : 1
notable : 1
measurement : 1
multiplied : 1
energy : 1
clamped : 1
light : 1
bottle : 1
transforming : 1
illustrations : 1
splitting : 1
stall : 1
branched : 1
illustration : 1
incoming : 1
lies : 1
outcome : 1
transformation : 1
fastest : 1
takeaway : 1
marginal : 1
launching : 1
conquer : 1
synchronizes : 1
placeholder : 1
squeezed : 1
futuretype : 1
merged : 1
merge : 1
ridiculously : 1
tenth : 1
serial : 1
disastrous : 1
trashed : 1
heavyweight : 1
spending : 1
computations : 1
extending : 1
card : 1
sequenced : 1
unspecified : 1
inversef : 1
inversed : 1
undetermined : 1
division : 1
noteworthy : 1
commutative : 1
multiplication : 1
accumulates : 1
claudio : 1
sofia : 1
gaston : 1
alberto : 1
weird : 1
anyone : 1
remind : 1
pixels : 1
vertex : 1
directx : 1
specialized : 1
scales : 1
became : 1
colors : 1
fragment : 1
lookups : 1
hopefully : 1
utilizable : 1
kyle : 1
picked : 1
vendor : 1
steady : 1
gate : 1
designated : 1
framework : 1
maintained : 1
khronos : 1
maintains : 1
opengl : 1
cs : 1
radius : 1
adaption : 1
adapted : 1
official : 1
syntactical : 1
stripped : 1
bunch : 1
accumulated : 1
course : 1
resemblance : 1
correspondingly : 1
informed : 1
multidimensional : 1
gray : 1
scale : 1
surrounding : 1
w : 1
filters : 1
xp : 1
yp : 1
verifying : 1
utterly : 1
epsilon : 1
successfully : 1
intentionally : 1
handcrafting : 1
enjoyed : 1
maya : 1
posch : 1
dive : 1
nature : 1
gpgpu : 1
employs : 1
jeganathan : 1
swaminathan : 1
modular : 1
legacy : 1
cucumber : 1
frameworks : 1
acquainted : 1
gui : 1
thoughts : 1
others : 1
bought : 1
honest : 1
amazon : 1
vital : 1
purchasing : 1
customers : 1
minutes : 1
valuable : 1
aim : 2
propagation : 2
unfortunate : 2
sqrt : 2
embedded : 2
safis : 2
livery : 2
industry : 2
advance : 2
coding : 2
videos : 2
technical : 2
sign : 2
receive : 2
citizen : 2
cleaner : 2
mastering : 2
dialect : 2
vast : 2
company : 2
aimed : 2
mobile : 2
developed : 2
science : 2
louis : 2
sergey : 2
projects : 2
unix : 2
server : 2
team : 2
helped : 2
reviewing : 2
me : 2
belarus : 2
friend : 2
coded : 2
evolves : 2
functional : 2
deep : 2
ibm : 2
becoming : 2
thousands : 2
tech : 2
turned : 2
aims : 2
solid : 2
natural : 2
chapters : 2
subjects : 2
architecture : 2
genuine : 2
interest : 2
hand : 2
creative : 2
fundamentals : 2
practices : 2
experiment : 2
confuse : 2
verified : 2
windows : 2
dependencies : 2
lets : 2
register : 2
folder : 2
text : 2
attention : 2
tricks : 2
email : 2
mention : 2
title : 2
questions : 2
aspect : 2
mistakes : 2
mistake : 2
grateful : 2
selecting : 2
clicking : 2
across : 2
location : 2
site : 2
unbiased : 2
feedback : 2
layers : 2
indirection : 2
offered : 2
alternatives : 2
project : 2
domain : 2
correspond : 2
human : 2
translate : 2
popular : 2
optimal : 2
evolution : 2
vendors : 2
destruction : 2
technologies : 2
previously : 2
comparisons : 2
fair : 2
private : 2
affects : 2
win : 2
relies : 2
somewhere : 2
precautions : 2
follows : 2
person : 2
signals : 2
tracking : 2
cyclic : 2
sophisticated : 2
silently : 2
rad : 2
informs : 2
shortcomings : 2
mainly : 2
outdated : 2
import : 2
remains : 2
apparent : 2
lack : 2
minimum : 2
suited : 2
prevented : 2
stricter : 2
she : 2
exceptional : 2
okay : 2
quit : 2
branches : 2
leafs : 2
oak : 2
codes : 2
littered : 2
initialization : 2
worrying : 2
intent : 2
cref : 2
mref : 2
strongly : 2
fetch : 2
versatility : 2
simpler : 2
capability : 2
latter : 2
wanted : 2
referencing : 2
spot : 2
initializes : 2
mutates : 2
sees : 2
mutatinglambda : 2
noticed : 2
referenced : 2
older : 2
callback : 2
assign : 2
breaks : 2
inline : 2
impossible : 2
slight : 2
penalty : 2
implies : 2
generally : 2
invocation : 2
lbd : 2
l : 2
fs : 2
mapping : 2
continent : 2
animals : 2
speaking : 2
redundant : 2
helps : 2
illustrate : 2
transfer : 2
freed : 2
pointed : 2
relieved : 2
bloated : 2
intend : 2
marked : 2
mark : 2
categorized : 2
handy : 2
trivial : 2
qword : 2
cmp : 2
mixed : 2
ever : 2
minor : 2
neat : 2
clearly : 2
head : 2
comparable : 2
flt : 2
implementers : 2
wrong : 2
notation : 2
workflow : 2
finds : 2
relationship : 2
involves : 2
decide : 2
repeatedly : 2
produced : 2
linearly : 2
chosen : 2
k : 2
eliminating : 2
recursive : 2
decreases : 2
series : 2
stated : 2
growing : 2
obviously : 2
ahead : 2
effectively : 2
intention : 2
absolutely : 2
interactive : 2
limits : 2
goal : 2
analysis : 2
trust : 2
educated : 2
overall : 2
vectorize : 2
prepared : 2
desired : 2
positive : 2
encapsulate : 2
refactor : 2
comments : 2
property : 2
response : 2
indicator : 2
regression : 2
rows : 2
pareto : 2
italian : 2
thumb : 2
mixing : 2
entry : 2
went : 2
macros : 2
predefined : 2
supported : 2
session : 2
present : 2
occurred : 2
fifth : 2
sleeping : 2
causes : 2
briefly : 2
hardly : 2
cells : 2
reported : 2
fetching : 2
fetches : 2
recently : 2
observation : 2
tiny : 2
ten : 2
near : 2
likelihood : 2
fetched : 2
bad : 2
ksize : 2
matrixtype : 2
extremely : 2
excellent : 2
traversing : 2
locality : 2
newly : 2
usable : 2
backwards : 2
occupied : 2
interesting : 2
scan : 2
logarithmic : 2
balanced : 2
controlling : 2
unordered : 2
keeps : 2
solves : 2
vary : 2
distribute : 2
distributed : 2
persons : 2
reduce : 2
upper : 2
rehash : 2
adaptors : 2
rank : 2
hit : 2
backed : 2
topmost : 2
collected : 2
talking : 2
factors : 2
cached : 2
thrashing : 2
scores : 2
reliable : 2
chances : 2
password : 2
username : 2
approximate : 2
iterations : 2
twice : 2
clarify : 2
improved : 2
extracted : 2
substantially : 2
totally : 2
relationships : 2
encounter : 2
expressing : 2
mimics : 2
listed : 2
sufficient : 2
superfluous : 2
positions : 2
implements : 2
imagined : 2
advantageous : 2
dereferenced : 2
retrieving : 2
generalize : 2
standalone : 2
generalized : 2
mimic : 2
fit : 2
temporarily : 2
option : 2
trade : 2
variation : 2
logic : 2
textures : 2
par : 2
erase : 2
crash : 2
elegant : 2
remaining : 2
kinds : 2
measured : 2
eability : 2
warrior : 2
lazily : 2
filtered : 2
dependency : 2
syntactically : 2
procedure : 2
square : 2
duplicates : 2
beneficial : 2
cycle : 2
isolation : 2
secondary : 2
occupy : 2
frames : 2
frame : 2
evicted : 2
ios : 2
fault : 2
talks : 2
opposite : 2
directions : 2
differs : 2
printing : 2
entered : 2
configured : 2
subtracting : 2
got : 2
deallocate : 2
fragmentation : 2
globally : 2
namely : 2
summarize : 2
defines : 2
multiples : 2
unaligned : 2
spans : 2
forced : 2
biggest : 2
pad : 2
adjust : 2
regions : 2
live : 2
send : 2
predictable : 2
raiiconnection : 2
alive : 2
transferred : 2
dangling : 2
replacing : 2
demonstrating : 2
layouts : 2
combined : 2
knowing : 2
sandbox : 2
managers : 2
strategy : 2
handed : 2
possibilities : 2
howard : 2
published : 2
determined : 2
attempts : 2
reasonable : 2
defaults : 2
stateful : 2
amounts : 2
advise : 2
requests : 2
interior : 2
metacode : 2
simplest : 2
rectf : 2
recti : 2
refuse : 2
boolean : 2
parent : 2
signed : 2
referencetype : 2
interpolation : 2
decimal : 2
thereby : 2
typedefs : 2
shark : 2
eel : 2
hastostring : 2
hasnamemember : 2
allowing : 2
loss : 2
homogenous : 2
tuples : 2
success : 2
bindings : 2
initializer : 2
comma : 2
syntactic : 2
tested : 2
am : 2
boiler : 2
plate : 2
expose : 2
mordor : 2
checked : 2
consisting : 2
bitmaps : 2
independently : 2
bm : 2
conclusion : 2
hashing : 2
ascii : 2
std : 2
broken : 2
strptr : 2
ought : 2
originally : 2
magic : 2
accumulation : 2
concat : 2
computationally : 2
question : 2
worse : 2
penguins : 2
wise : 2
thorough : 2
deadlocks : 2
subtasks : 2
graphical : 2
background : 2
simulate : 2
flows : 2
encountered : 2
necessarily : 2
primitives : 2
sequences : 2
switches : 2
multicore : 2
communication : 2
incremented : 2
discussing : 2
updates : 2
existing : 2
swapped : 2
released : 2
stuck : 2
pitfalls : 2
sleeps : 2
unlikely : 2
callable : 2
hypothetical : 2
reaching : 2
templates : 2
acquires : 2
transferring : 2
group : 2
q : 2
concurrently : 2
switched : 2
saying : 2
detail : 2
depth : 2
observe : 2
torn : 2
queues : 2
guidelines : 2
degrade : 2
priorities : 2
mask : 2
seamlessly : 2
adapt : 2
algorithmically : 2
fut : 2
proportional : 2
bottlenecked : 2
num : 2
copiedrange : 2
lightweight : 2
instant : 2
yield : 2
acc : 2
peruvians : 2
indices : 2
mickey : 2
jerry : 2
api : 2
screen : 2
shader : 2
driver : 2
device : 2
macro : 2
housed : 2
prefixed : 2
elems : 2
multithreading : 2
deduction : 3
consideration : 3
pitfall : 3
comparator : 3
trigger : 3
errors : 3
modulus : 3
misuse : 3
blocking : 3
synchronized : 3
modifications : 3
prior : 3
accuracy : 3
leading : 3
personal : 3
stage : 3
applied : 3
latest : 3
issues : 3
proceed : 3
technology : 3
octopus : 3
spent : 3
evolved : 3
viktor : 3
developers : 3
remarkable : 3
experience : 3
desktop : 3
started : 3
authors : 3
foundation : 3
tried : 3
together : 3
expects : 3
evolving : 3
finish : 3
discusses : 3
drawbacks : 3
describe : 3
including : 3
extensions : 3
facing : 3
replaced : 3
google : 3
download : 3
service : 3
purchased : 3
follow : 3
draw : 3
relevant : 3
report : 3
entering : 3
link : 3
potential : 3
opinion : 3
math : 3
relieve : 3
compatible : 3
solved : 3
generating : 3
deprecated : 3
major : 3
huge : 3
cars : 3
seven : 3
bagel : 3
topping : 3
supposed : 3
subtly : 3
correctness : 3
relying : 3
avoids : 3
documentation : 3
possibility : 3
severe : 3
drawback : 3
bare : 3
despite : 3
guideline : 3
behave : 3
effects : 3
boat : 3
realize : 3
save : 3
signal : 3
invalid : 3
branch : 3
trees : 3
modifying : 3
acquired : 3
unlocked : 3
simd : 3
upcoming : 3
include : 3
perspective : 3
increases : 3
explicite : 3
reduces : 3
safer : 3
identical : 3
bind : 3
choice : 3
demonstrated : 3
denote : 3
majority : 3
rules : 3
plain : 3
similarities : 3
kind : 3
putting : 3
merely : 3
counts : 3
allow : 3
plus : 3
resembles : 3
buttons : 3
misses : 3
farm : 3
straightforward : 3
clang : 3
utilizes : 3
detects : 3
tell : 3
floats : 3
omitted : 3
sake : 3
expanded : 3
freeing : 3
moves : 3
given : 3
song : 3
strong : 3
gcc : 3
favor : 3
automate : 3
assigning : 3
equally : 3
withhold : 3
withheld : 3
estimate : 3
essential : 3
plenty : 3
specifies : 3
plot : 3
continue : 3
magnitude : 3
matters : 3
tuning : 3
nice : 3
factor : 3
approximately : 3
conclude : 3
rates : 3
performing : 3
frequency : 3
increased : 3
lookup : 3
decrease : 3
otherwise : 3
final : 3
conversion : 3
spends : 3
samples : 3
soon : 3
realistic : 3
effective : 3
observed : 3
statistical : 3
primitive : 3
tool : 3
duration : 3
debugging : 3
stacks : 3
detected : 3
pure : 3
choose : 3
computers : 3
asked : 3
presented : 3
ns : 3
dramatic : 3
resides : 3
changing : 3
accesses : 3
alternative : 3
doubly : 3
occupies : 3
height : 3
typically : 3
evenly : 3
ensures : 3
combining : 3
partial : 3
documents : 3
matching : 3
match : 3
query : 3
computes : 3
increment : 3
ranking : 3
greater : 3
initial : 3
playing : 3
knows : 3
reports : 3
kept : 3
differentiates : 3
exist : 3
sources : 3
fulfills : 3
eleven : 3
calculating : 3
relieves : 3
calculated : 3
holding : 3
benefits : 3
dimensional : 3
row : 3
removed : 3
expected : 3
additional : 3
valuetype : 3
resort : 3
habit : 3
bug : 3
parallelizing : 3
heavily : 3
assembly : 3
whole : 3
denotes : 3
archery : 3
verbose : 3
technically : 3
transforms : 3
registers : 3
aspects : 3
dig : 3
areas : 3
direction : 3
enter : 3
platforms : 3
warning : 3
fragmented : 3
destruct : 3
override : 3
customize : 3
fulfill : 3
starting : 3
destroyed : 3
getting : 3
proper : 3
minimizing : 3
expresses : 3
atomically : 3
normal : 3
characters : 3
union : 3
reclaiming : 3
client : 3
stateless : 3
ends : 3
printed : 3
duck : 3
animalbase : 3
structured : 3
false : 3
dots : 3
expands : 3
stream : 3
varianttype : 3
creation : 3
updating : 3
conditionally : 3
shire : 3
assert : 3
loads : 3
calculates : 3
forces : 3
concatenation : 3
concatproxy : 3
formula : 3
recognize : 3
africa : 3
machines : 3
red : 3
protects : 3
passes : 3
expect : 3
acquiring : 3
writes : 3
hurts : 3
finished : 3
native : 3
os : 3
joinable : 3
creates : 3
communicate : 3
asynchronously : 3
deletion : 3
atomics : 3
reorder : 3
relaxed : 3
synchronize : 3
parallelizes : 3
accumulate : 3
pred : 3
conditional : 3
mice : 3
pixel : 3
lighting : 3
color : 3
shaders : 3
interfaces : 4
lambdas : 4
reusable : 4
trait : 4
simplifies : 4
extension : 4
continuous : 4
unsequenced : 4
construction : 4
neither : 4
development : 4
tools : 4
learning : 4
ebook : 4
stepped : 4
words : 4
word : 4
someone : 4
ended : 4
open : 4
experienced : 4
years : 4
providing : 4
tests : 4
searching : 4
author : 4
insight : 4
target : 4
style : 4
throughout : 4
insights : 4
hope : 4
introduces : 4
referring : 4
limitations : 4
visual : 4
boxes : 4
subject : 4
introduce : 4
disadvantages : 4
constantly : 4
levels : 4
deals : 4
abstraction : 4
compilation : 4
robustness : 4
widely : 4
manner : 4
adjacent : 4
states : 4
distinguish : 4
bagels : 4
bugs : 4
feature : 4
methods : 4
involved : 4
cube : 4
exposing : 4
sound : 4
regarding : 4
compliant : 4
perfectly : 4
assignment : 4
exit : 4
mid : 4
affected : 4
trailing : 4
prefer : 4
denoted : 4
bound : 4
capabilities : 4
enables : 4
column : 4
capturing : 4
convenient : 4
action : 4
yet : 4
increasing : 4
million : 4
res : 4
countries : 4
belong : 4
according : 4
wrap : 4
readable : 4
wrapper : 4
grasp : 4
lost : 4
swapping : 4
chance : 4
refers : 4
potentially : 4
rid : 4
taking : 4
equivalents : 4
notice : 4
pretty : 4
forget : 4
utilizing : 4
thus : 4
converts : 4
partially : 4
applying : 4
handwritten : 4
intersection : 4
retrieve : 4
solve : 4
consumption : 4
analyze : 4
reject : 4
quick : 4
largest : 4
loops : 4
arithmetic : 4
internally : 4
room : 4
simplify : 4
sample : 4
maybe : 4
hypothesis : 4
ask : 4
spread : 4
idea : 4
instrumentation : 4
inserting : 4
frequently : 4
inserts : 4
compiling : 4
produce : 4
stores : 4
invisible : 4
cell : 4
hierarchy : 4
intel : 4
caches : 4
mb : 4
layer : 4
manages : 4
spatial : 4
equality : 4
offer : 4
finally : 4
producing : 4
push : 4
defining : 4
couple : 4
looked : 4
scenarios : 4
basically : 4
field : 4
booleans : 4
exposes : 4
behind : 4
implicit : 4
stressed : 4
inform : 4
exposed : 4
parallelized : 4
conflicting : 4
traditional : 4
rewrite : 4
operates : 4
combine : 4
squares : 4
ra : 4
ints : 4
rudimentary : 4
deleted : 4
scalar : 4
owner : 4
strive : 4
raii : 4
counting : 4
recommended : 4
managed : 4
purpose : 4
produces : 4
verifies : 4
significant : 4
designing : 4
reclaim : 4
postpone : 4
minimal : 4
eventually : 4
dimensions : 4
negative : 4
situations : 4
sstr : 4
arbitrary : 4
casted : 4
bulk : 4
isreflectable : 4
precision : 4
calculation : 4
coordinates : 4
buffers : 4
answer : 4
adds : 4
contention : 4
join : 4
detach : 4
introducing : 4
associated : 4
futures : 4
reordering : 4
cout : 4
matter : 4
fences : 4
fence : 4
consistency : 4
affinity : 4
dstit : 4
inexpensive : 4
policies : 4
gpus : 4
offset : 4
button : 5
captures : 5
testing : 5
sets : 5
intiterator : 5
reflect : 5
prehashedstring : 5
eager : 5
concatenated : 5
distproxy : 5
review : 5
nor : 5
online : 5
visit : 5
files : 5
exclusive : 5
found : 5
changes : 5
engine : 5
techniques : 5
job : 5
described : 5
saw : 5
platform : 5
strategies : 5
asymptotic : 5
includes : 5
taken : 5
vastly : 5
fairly : 5
extract : 5
believe : 5
spots : 5
whatever : 5
deal : 5
thought : 5
expressed : 5
differences : 5
hide : 5
transformed : 5
commonly : 5
theoretically : 5
deallocations : 5
places : 5
manual : 5
tells : 5
immutable : 5
rare : 5
throws : 5
initialized : 5
disk : 5
oaktree : 5
destructors : 5
affect : 5
yourself : 5
header : 5
readability : 5
followed : 5
extended : 5
threshold : 5
sweden : 5
exp : 5
straight : 5
clear : 5
prevents : 5
bird : 5
unnecessary : 5
implicitly : 5
utility : 5
swap : 5
hat : 5
invoking : 5
algorithmic : 5
efficiency : 5
choosing : 5
dedicated : 5
computational : 5
suppose : 5
determines : 5
independent : 5
bigger : 5
occurs : 5
grow : 5
ones : 5
perfect : 5
worth : 5
fields : 5
relatively : 5
profiler : 5
third : 5
eight : 5
labeled : 5
expressions : 5
rearrange : 5
practice : 5
technique : 5
buckets : 5
keys : 5
insert : 5
reverse : 5
representation : 5
authentication : 5
cdpalignleft : 5
depends : 5
constructor : 5
grid : 5
snippet : 5
suitable : 5
immediately : 5
functor : 5
inspecting : 5
avoiding : 5
switch : 5
constructing : 5
mutated : 5
divide : 5
diagram : 5
forth : 5
reside : 5
constructs : 5
outputs : 5
mind : 5
close : 5
catch : 5
break : 5
ordinary : 5
reaches : 5
hurt : 5
bear : 5
integral : 5
tpl : 5
pack : 5
expand : 5
town : 5
ostr : 5
locking : 5
incrementing : 5
deadlock : 5
synchronous : 5
sleep : 5
ref : 5
trivially : 5
srcit : 5
within : 6
deleting : 6
enable : 6
multithreaded : 6
readers : 6
form : 6
made : 6
publishing : 6
caused : 6
especially : 6
onto : 6
game : 6
topic : 6
stay : 6
designed : 6
special : 6
early : 6
his : 6
thank : 6
network : 6
ready : 6
explain : 6
processed : 6
gained : 6
preserving : 6
clean : 6
divided : 6
compilers : 6
account : 6
keyword : 6
lines : 6
portable : 6
manage : 6
lose : 6
compiled : 6
compiles : 6
car : 6
iterates : 6
behaves : 6
owns : 6
signature : 6
tries : 6
argument : 6
rely : 6
dependent : 6
force : 6
indicate : 6
computing : 6
pi : 6
higher : 6
circumstances : 6
applies : 6
away : 6
method : 6
containing : 6
guard : 6
releases : 6
systems : 6
people : 6
tend : 6
extend : 6
odd : 6
declare : 6
th : 6
combination : 6
convert : 6
converted : 6
wrapped : 6
slower : 6
f : 6
templated : 6
five : 6
avoided : 6
opposed : 6
term : 6
coming : 6
demonstrates : 6
setting : 6
conditions : 6
piece : 6
off : 6
src : 6
mov : 6
represents : 6
checks : 6
half : 6
outer : 6
slightly : 6
patterns : 6
keeping : 6
categories : 6
inserted : 6
command : 6
known : 6
contiguously : 6
hence : 6
sized : 6
ordered : 6
included : 6
represented : 6
reached : 6
efficiently : 6
bits : 6
steps : 6
mechanism : 6
vec : 6
dst : 6
evaluates : 6
compose : 6
heavy : 6
names : 6
far : 6
chunks : 6
unless : 6
leaving : 6
views : 6
parallelization : 6
mapped : 6
contracts : 6
area : 6
allocators : 6
requirement : 6
instances : 6
unsigned : 6
blocked : 6
rectangle : 6
below : 6
update : 6
debug : 6
protecting : 6
parallelism : 6
scheduling : 6
protected : 6
cause : 6
producer : 6
observable : 6
reorderings : 6
writer : 6
parallelize : 6
circles : 6
acquisition : 7
real : 7
heterogenous : 7
world : 7
infix : 7
destination : 7
predicates : 7
kernel : 7
speed : 7
explained : 7
worked : 7
extra : 7
graphics : 7
design : 7
share : 7
complete : 7
profile : 7
problems : 7
check : 7
care : 7
explore : 7
hidden : 7
lower : 7
strict : 7
web : 7
deallocated : 7
public : 7
supports : 7
instance : 7
modified : 7
correctly : 7
performs : 7
needed : 7
external : 7
accidentally : 7
deduced : 7
anything : 7
count : 7
front : 7
vectors : 7
sorting : 7
pointing : 7
did : 7
details : 7
slow : 7
deallocating : 7
representing : 7
rest : 7
against : 7
binary : 7
j : 7
exact : 7
detect : 7
mode : 7
exists : 7
kb : 7
covered : 7
achieved : 7
again : 7
position : 7
imagine : 7
maximum : 7
statement : 7
actions : 7
aligned : 7
weak : 7
earlier : 7
id : 7
reflectable : 7
dist : 7
ui : 7
scheduler : 7
wait : 7
promise : 7
bc : 7
knowledge : 8
collection : 8
copies : 8
pair : 8
convenience : 8
underlying : 8
distances : 8
sparse : 8
apis : 8
circle : 8
books : 8
optimize : 8
held : 8
practical : 8
offers : 8
multitude : 8
larger : 8
management : 8
advanced : 8
expressive : 8
automatic : 8
importance : 8
beyond : 8
heterogeneous : 8
box : 8
particular : 8
indicates : 8
appear : 8
leave : 8
discuss : 8
begin : 8
talk : 8
whose : 8
handled : 8
visible : 8
roughly : 8
functionality : 8
rarely : 8
little : 8
gain : 8
placed : 8
laid : 8
contiguous : 8
owned : 8
sharing : 8
harder : 8
inspect : 8
accepts : 8
turns : 8
solution : 8
power : 8
thrown : 8
tree : 8
safely : 8
illustrated : 8
benefit : 8
forwarding : 8
old : 8
foo : 8
temporary : 8
limited : 8
tied : 8
initialize : 8
executes : 8
constructed : 8
illustrates : 8
manually : 8
seems : 8
ptr : 8
undefined : 8
reading : 8
runs : 8
analyzing : 8
sizes : 8
worst : 8
cdpalign : 8
middle : 8
inner : 8
reach : 8
log : 8
average : 8
computed : 8
request : 8
responsible : 8
profilers : 8
category : 8
scopedtimer : 8
synchronization : 8
core : 8
reads : 8
load : 8
iterated : 8
layout : 8
ignore : 8
overloaded : 8
complex : 8
processing : 8
pages : 8
pattern : 8
placement : 8
race : 8
protect : 8
recursively : 8
allocates : 9
moving : 9
hot : 9
variant : 9
accept : 9
basics : 9
express : 9
directly : 9
please : 9
who : 9
fundamental : 9
thanks : 9
apply : 9
general : 9
today : 9
improve : 9
properties : 9
simplified : 9
various : 9
reasons : 9
cost : 9
achieve : 9
internal : 9
interface : 9
regardless : 9
build : 9
dynamically : 9
guarantees : 9
str : 9
contrast : 9
recommend : 9
beginning : 9
assigned : 9
overhead : 9
thinking : 9
trying : 9
represent : 9
compares : 9
iteration : 9
expensive : 9
length : 9
occur : 9
namespace : 9
scheduled : 9
byte : 9
guaranteed : 9
bucket : 9
predicate : 9
limit : 9
hits : 9
evaluate : 9
arrays : 9
traits : 9
calculate : 9
m : 9
updated : 9
loaded : 9
manager : 9
product : 9
consumer : 9
brief : 10
garbage : 10
optional : 10
best : 10
subtle : 10
handles : 10
lazy : 10
naive : 10
sequentially : 10
packt : 10
help : 10
built : 10
fully : 10
sense : 10
great : 10
interested : 10
approach : 10
introduced : 10
said : 10
modify : 10
returning : 10
remove : 10
determine : 10
highest : 10
fail : 10
referred : 10
behavior : 10
consists : 10
corresponds : 10
scope : 10
mutating : 10
define : 10
remember : 10
gets : 10
fast : 10
optimizing : 10
comparison : 10
rate : 10
fact : 10
per : 10
stop : 10
latency : 10
risk : 10
associative : 10
four : 10
expression : 10
demonstrate : 10
squared : 10
char : 10
policy : 10
modifier : 11
deeper : 11
handcrafted : 11
variadic : 11
safe : 11
evaluation : 11
asynchronous : 11
except : 11
full : 11
necessary : 11
those : 11
working : 11
he : 11
software : 11
robust : 11
smart : 11
file : 11
sure : 11
come : 11
highly : 11
addresses : 11
allows : 11
increase : 11
declared : 11
caller : 11
s : 11
forward : 11
nothing : 11
calls : 11
entire : 11
performed : 11
assume : 11
results : 11
measuring : 11
sections : 11
sampling : 11
aware : 11
optimized : 11
blocks : 11
structure : 11
document : 11
padding : 11
connection : 11
processes : 11
rv : 11
storage : 11
valid : 12
zero : 12
o : 12
operate : 12
generic : 12
assembler : 12
reflection : 12
gives : 12
itself : 12
spend : 12
place : 12
making : 12
things : 12
goes : 12
concept : 12
metaprogramming : 12
starts : 12
easier : 12
upon : 12
refer : 12
mean : 12
located : 12
passing : 12
allocation : 12
minimize : 12
impact : 12
considered : 12
lifetime : 12
vals : 12
captured : 12
above : 12
sorted : 12
finding : 12
linked : 12
consider : 12
storing : 12
thing : 12
filter : 12
casting : 12
arguments : 13
construct : 13
building : 13
cast : 13
verify : 13
pipe : 13
ensure : 13
guarantee : 13
reader : 13
level : 13
least : 13
done : 13
understanding : 13
give : 13
provided : 13
meaning : 13
dealing : 13
track : 13
java : 13
everything : 13
implementations : 13
model : 13
side : 13
original : 13
ways : 13
left : 13
enough : 13
discussed : 13
seem : 13
equals : 13
utilized : 13
content : 13
named : 13
learn : 13
measure : 13
become : 13
key : 13
loop : 13
longer : 13
calling : 13
capacity : 13
figure : 13
individual : 13
instruction : 13
users : 13
transform : 13
physical : 13
cores : 13
semantics : 14
comparing : 14
future : 14
advantages : 14
via : 14
stored : 14
versions : 14
features : 14
holds : 14
intended : 14
related : 14
put : 14
comes : 14
easily : 14
doing : 14
prevent : 14
random : 14
true : 14
resulting : 14
becomes : 14
requirements : 14
search : 14
evaluated : 14
view : 14
parameters : 14
returned : 14
destructor : 14
difference : 14
structures : 14
total : 14
waiting : 14
concurrency : 14
sequential : 14
acquire : 14
null : 15
linear : 15
integers : 15
computation : 15
overloading : 15
let : 15
added : 15
focus : 15
once : 15
applications : 15
during : 15
image : 15
having : 15
almost : 15
advantage : 15
accessed : 15
problem : 15
faster : 15
addition : 15
parts : 15
amount : 15
fixed : 15
under : 15
equal : 15
func : 15
specify : 15
page : 15
obvious : 15
grows : 15
depending : 15
optimization : 15
r : 15
locks : 15
bitmap : 15
races : 15
opencl : 15
polymorphic : 16
change : 16
operators : 16
split : 16
print : 16
top : 16
large : 16
basic : 16
implementing : 16
abstractions : 16
allocations : 16
cover : 16
right : 16
y : 16
invoke : 16
likely : 16
double : 16
happen : 16
complicated : 16
chunk : 16
error : 17
usage : 17
exceptions : 17
delete : 17
either : 17
context : 17
around : 17
low : 17
audio : 17
unique : 17
really : 17
completely : 17
show : 17
whenever : 17
mutate : 17
local : 17
specified : 17
moved : 17
exactly : 17
hold : 17
release : 17
overload : 17
versus : 18
written : 18
information : 18
contained : 18
smaller : 18
looking : 18
utilize : 18
source : 18
easy : 18
static : 18
due : 18
references : 18
had : 18
copying : 18
keep : 18
space : 18
times : 18
inside : 18
prints : 18
happens : 18
amortized : 18
tasks : 18
priority : 18
well : 19
resources : 19
libraries : 19
strings : 19
high : 19
sometimes : 19
much : 19
ms : 19
say : 19
programmers : 19
hard : 19
further : 19
although : 19
raw : 19
seen : 19
default : 19
automatically : 19
passed : 19
throw : 19
learned : 19
though : 19
process : 19
p : 19
machine : 20
floating : 20
require : 20
provides : 20
my : 20
through : 20
several : 20
better : 20
go : 20
allowed : 20
required : 20
able : 20
separate : 20
allocating : 20
correct : 20
copied : 20
executing : 20
contain : 20
invoked : 20
condition : 20
programs : 20
rule : 21
ranges : 21
based : 21
runtime : 21
queue : 21
provide : 21
think : 21
explicit : 21
test : 21
cases : 21
equivalent : 21
among : 21
sort : 21
probably : 21
useful : 21
defined : 21
buffer : 21
shown : 21
too : 21
operating : 21
empty : 22
concepts : 22
less : 22
single : 22
last : 22
operation : 22
try : 22
set : 22
terms : 22
exception : 22
bit : 22
generated : 22
points : 22
growth : 22
task : 22
bytes : 22
allocator : 22
arena : 22
optimizations : 23
read : 23
state : 23
works : 23
adding : 23
efficient : 23
next : 23
work : 23
often : 23
created : 23
void : 23
corresponding : 23
current : 23
avoid : 23
add : 23
counter : 23
integer : 23
distance : 23
introduction : 24
languages : 24
language : 24
requires : 24
iterating : 24
mentioned : 24
input : 24
why : 24
instructions : 24
pass : 24
looks : 24
constant : 24
sequence : 24
ownership : 25
because : 25
must : 25
control : 25
programmer : 25
lock : 25
certain : 25
going : 25
generates : 25
compute : 25
alignment : 25
computer : 26
hardware : 26
takes : 26
available : 26
list : 26
accessing : 26
compare : 26
mutable : 26
x : 26
previous : 26
table : 26
capture : 27
operations : 27
gpu : 27
part : 27
modern : 27
name : 27
line : 27
preceding : 27
long : 27
whether : 27
quite : 27
handling : 28
after : 28
virtual : 28
ability : 28
atomic : 28
until : 28
mutex : 28
small : 28
allocate : 28
tuple : 29
creating : 29
support : 29
specific : 29
short : 29
block : 29
understand : 29
classes : 29
section : 29
explicitly : 29
numbers : 29
execution : 29
book : 30
resource : 30
step : 30
never : 30
store : 30
find : 30
start : 30
reason : 30
noexcept : 30
syntax : 31
perform : 31
struct : 31
later : 31
currently : 31
iterate : 31
whereas : 31
n : 31
another : 31
second : 31
similar : 31
compared : 32
pointers : 32
note : 32
base : 32
own : 32
output : 33
iterators : 33
system : 33
t : 33
end : 33
index : 33
common : 34
examples : 34
members : 34
parameter : 34
proxy : 34
access : 34
free : 34
them : 34
rather : 34
actual : 34
back : 34
few : 35
address : 35
copy : 35
therefore : 35
usually : 35
before : 35
complexity : 36
big : 36
critical : 36
implementation : 36
their : 36
while : 36
implement : 36
bool : 36
actually : 36
allocated : 37
constexpr : 37
version : 37
lot : 37
main : 37
uses : 37
handle : 37
b : 37
else : 37
heap : 38
concurrent : 38
application : 38
implemented : 38
typename : 38
generate : 38
dynamic : 39
programming : 39
three : 39
were : 39
executed : 39
sum : 40
still : 40
chapter : 40
contains : 40
returns : 40
cache : 40
c : 41
execute : 41
know : 42
here : 42
something : 43
move : 44
take : 44
run : 44
important : 44
shows : 44
good : 44
already : 45
types : 46
case : 46
result : 46
us : 47
always : 47
containers : 47
call : 47
operator : 48
makes : 48
over : 48
needs : 48
vector : 48
get : 49
custom : 49
global : 49
values : 50
standard : 50
every : 50
multiple : 50
float : 50
cpu : 50
reference : 51
point : 51
array : 51
string : 53
pointer : 54
compile : 55
boost : 55
up : 55
simply : 55
variables : 58
simple : 58
cannot : 58
element : 58
without : 59
many : 59
being : 59
writing : 60
could : 60
shared : 61
iterator : 62
may : 62
was : 62
called : 62
user : 64
running : 64
library : 65
want : 65
instead : 65
does : 66
should : 66
variable : 67
write : 67
even : 68
hash : 68
parallel : 68
way : 68
means : 68
range : 70
been : 70
create : 70
different : 71
out : 72
regular : 72
v : 72
template : 74
since : 74
now : 74
stack : 74
container : 75
then : 75
most : 76
cdpaligncenter : 76
between : 77
these : 77
very : 78
see : 78
such : 79
i : 80
no : 81
both : 81
look : 82
possible : 83
about : 85
just : 86
make : 87
might : 87
size : 88
number : 91
do : 92
performance : 92
lambda : 93
program : 93
stl : 94
its : 95
each : 96
functions : 97
what : 97
compiler : 98
threads : 98
new : 101
first : 103
member : 105
your : 106
into : 106
elements : 107
where : 107
int : 107
they : 108
same : 109
order : 110
algorithms : 111
our : 111
value : 111
example : 112
objects : 113
than : 115
algorithm : 115
so : 118
there : 121
any : 122
some : 123
would : 126
thread : 129
all : 133
object : 140
need : 146
other : 148
time : 154
also : 154
type : 155
two : 156
used : 160
more : 160
one : 160
class : 164
like : 168
only : 170
but : 183
following : 185
const : 188
has : 191
data : 193
or : 213
how : 233
from : 241
code : 246
use : 263
function : 279
when : 283
which : 288
at : 291
not : 310
using : 323
memory : 326
have : 335
on : 338
return : 373
you : 383
if : 392
by : 419
will : 429
an : 452
this : 516
with : 527
as : 530
can : 539
are : 552
be : 558
auto : 593
for : 618
it : 690
that : 916
we : 996
in : 1197
and : 1258
is : 1522
of : 1600
to : 1990
a : 2055
the : 4651
of this book -> is : 1
of this book -> may : 1
of this book -> to : 1
of this book -> aims : 1
this book is -> this : 1
this book is -> sold : 1
this book is -> book : 1
book is this -> book : 1
is this book -> get : 1
this book get -> the : 1
book get the -> most : 1
get the most -> out : 3
the most out -> of : 4
most out of -> this : 3
most out of -> the : 1
out of this -> the : 1
out of this -> get : 1
out of this -> you : 1
of this the -> example : 1
this the example -> code : 1
the example code -> in : 1
the example code -> will : 1
the example code -> can : 1
the example code -> files : 1
example code in -> brief : 1
code in brief -> introduction : 1
in brief introduction -> to : 2
brief introduction to -> languages : 1
brief introduction to -> introduces : 1
brief introduction to -> chapter : 1
brief introduction to -> if : 1
brief introduction to -> the : 2
introduction to languages -> and : 1
to languages and -> machine : 1
languages and machine -> code : 2
and machine code -> in : 1
and machine code -> order : 1
machine code in -> other : 1
code in other -> of : 1
in other of -> aim : 1
other of aim -> of : 1
of aim of -> this : 1
aim of this -> knowledge : 1
aim of this -> book : 1
of this knowledge -> of : 1
this knowledge of -> the : 1
knowledge of the -> compared : 1
knowledge of the -> book : 1
of the compared -> with : 1
the compared with -> other : 1
compared with other -> languages : 1
compared with other -> multitude : 1
compared with other -> both : 1
with other languages -> and : 1
other languages and -> language : 1
languages and language -> ownership : 1
and language ownership -> and : 1
language ownership and -> garbage : 1
ownership and garbage -> collection : 2
and garbage collection -> in : 2
garbage collection in -> null : 1
garbage collection in -> in : 1
collection in null -> objects : 1
in null objects -> using : 1
null objects using -> of : 1
null objects using -> addition : 1
objects using of -> interfaces : 1
using of interfaces -> and : 1
of interfaces and -> class : 1
interfaces and class -> handling : 1
and class handling -> and : 1
class handling and -> resource : 1
handling and resource -> the : 1
handling and resource -> our : 1
and resource the -> valid : 1
resource the valid -> versus : 1
the valid versus -> error : 1
valid versus error -> used : 1
versus error used -> in : 1
error used in -> this : 2
used in this -> type : 1
used in this -> mentioned : 1
used in this -> chapter : 1
in this type -> deduction : 1
this type deduction -> with : 1
type deduction with -> the : 2
deduction with the -> auto : 2
with the auto -> auto : 1
with the auto -> the : 1
the auto auto -> in : 1
auto auto in -> function : 1
auto in function -> auto : 1
auto in function -> discouraged : 1
in function auto -> for : 1
function auto for -> lambda : 1
auto for lambda -> syntax : 1
for lambda syntax -> of : 1
lambda syntax of -> a : 1
syntax of a -> lambda : 2
of a lambda -> capture : 1
of a lambda -> a : 1
a lambda capture -> by : 1
lambda capture by -> reference : 1
capture by reference -> versus : 1
capture by reference -> case : 1
capture by reference -> and : 1
by reference versus -> capture : 2
reference versus capture -> by : 2
versus capture by -> between : 1
versus capture by -> the : 1
capture by between -> a : 1
by between a -> lambda : 1
between a lambda -> and : 2
a lambda and -> a : 2
lambda and a -> variables : 1
lambda and a -> understand : 1
lambda and a -> class : 1
and a variables -> in : 1
a variables in -> lambda : 1
variables in lambda -> member : 1
in lambda member -> member : 1
lambda member member -> variables : 1
member member variables -> from : 1
member variables from -> the : 2
variables from the -> c : 1
variables from the -> understand : 1
from the c -> function : 1
the c function -> pointers : 1
c function pointers -> to : 2
function pointers to -> and : 1
function pointers to -> say : 1
pointers to and -> lambdas : 1
to and lambdas -> to : 1
and lambdas to -> a : 1
lambdas to a -> simple : 1
to a simple -> button : 1
a simple button -> class : 2
simple button class -> with : 2
button class with -> consideration : 1
button class with -> put : 1
class with consideration -> of : 1
with consideration of -> cannot : 1
consideration of cannot -> be : 1
of cannot be -> heap : 1
of cannot be -> associated : 1
cannot be heap -> allocates : 1
be heap allocates -> and : 1
heap allocates and -> captures : 2
allocates and captures -> an : 1
allocates and captures -> a : 1
and captures an -> requires : 1
captures an requires -> a : 1
an requires a -> few : 2
requires a few -> more : 2
a few more -> operations : 2
few more operations -> than : 2
more operations than -> a : 2
operations than a -> polymorphic : 1
operations than a -> a : 1
than a polymorphic -> reusable : 1
a polymorphic reusable -> polymorphic : 1
polymorphic reusable polymorphic -> propagation : 1
reusable polymorphic propagation -> for : 1
polymorphic propagation for -> semantics : 1
propagation for semantics -> and : 1
for semantics and -> an : 1
semantics and an -> two : 1
and an two -> an : 1
an two an -> acquisition : 1
two an acquisition -> and : 1
an acquisition and -> the : 1
acquisition and the -> rule : 2
and the rule -> of : 4
and the rule -> says : 1
the rule of -> the : 1
the rule of -> of : 2
the rule of -> copies : 1
the rule of -> that : 1
the rule of -> to : 1
the rule of -> three : 3
the rule of -> a : 1
the rule of -> section : 1
the rule of -> this : 1
the rule of -> note : 1
rule of the -> rule : 1
of the rule -> of : 4
rule of of -> the : 1
rule of of -> zero : 1
of of the -> rule : 1
rule of copies -> without : 1
of copies without -> move : 1
copies without move -> move : 2
without move move -> variables : 1
without move move -> these : 1
move move variables -> and : 1
move variables and -> arguments : 1
variables and arguments -> by : 1
and arguments by -> move : 1
arguments by move -> when : 2
by move when -> move : 1
by move when -> a : 1
move when move -> semantics : 1
when move semantics -> and : 1
move semantics and -> the : 2
semantics and the -> rule : 2
of of zero -> in : 1
of zero in -> a : 2
zero in a -> real : 2
in a real -> code : 2
a real code -> note : 1
a real code -> the : 1
real code note -> on : 1
code note on -> empty : 1
note on empty -> common : 1
note on empty -> that : 1
on empty common -> pitfall : 1
empty common pitfall -> moving : 1
common pitfall moving -> the : 1
common pitfall moving -> is : 1
pitfall moving the -> modifier : 1
moving the modifier -> to : 1
the modifier to -> class : 2
modifier to class -> member : 2
to class member -> optional : 1
to class member -> addition : 1
class member optional -> values : 1
member optional values -> with : 1
optional values with -> return : 1
optional values with -> quite : 1
values with return -> member : 1
with return member -> and : 1
return member and -> comparing : 1
member and comparing -> dynamic : 1
and comparing dynamic -> values : 1
comparing dynamic values -> with : 1
dynamic values with -> of : 1
dynamic values with -> like : 1
values with of -> complexity : 1
with of complexity -> and : 1
of complexity and -> big : 1
complexity and big -> o : 3
and big o -> time : 1
and big o -> practical : 1
and big o -> is : 1
big o time -> to : 1
o time to -> testing : 1
time to testing -> best : 1
to testing best -> your : 1
testing best your -> code : 1
best your code -> and : 1
your code and -> hot : 2
code and hot -> of : 1
code and hot -> pareto : 1
and hot of -> computer : 1
hot of computer -> and : 1
of computer and -> and : 1
computer and and -> sets : 1
and and sets -> and : 1
and sets and -> sets : 1
and sets and -> and : 1
and sets and -> cdpalign : 1
sets and sets -> and : 1
sets and and -> deeper : 1
and and deeper -> look : 1
and deeper look -> at : 2
deeper look at -> iterator : 1
deeper look at -> dives : 1
deeper look at -> for : 1
deeper look at -> this : 1
deeper look at -> iterators : 1
deeper look at -> to : 1
look at iterator -> as : 1
at iterator as -> a : 1
iterator as a -> function : 1
as a function -> using : 1
as a function -> of : 1
as a function -> does : 1
as a function -> that : 1
a function using -> iterator : 2
function using iterator -> the : 1
function using iterator -> order : 1
using iterator the -> intiterator : 1
iterator the intiterator -> to : 2
the intiterator to -> example : 1
the intiterator to -> order : 1
intiterator to example -> iterating : 1
to example iterating -> floating : 1
example iterating floating -> point : 2
iterating floating point -> values : 2
floating point values -> within : 2
point values within -> a : 2
values within a -> usage : 1
values within a -> address : 1
within a usage -> to : 1
a usage to -> construct : 1
usage to construct -> a : 1
to construct a -> linear : 2
to construct a -> variadic : 2
construct a linear -> range : 2
a linear range -> usage : 1
a linear range -> generalize : 1
linear range usage -> the : 1
range usage the -> iterator : 1
usage the iterator -> pair : 1
the iterator pair -> to : 2
iterator pair to -> a : 2
pair to a -> convenience : 1
pair to a -> though : 1
to a convenience -> range : 1
a convenience range -> usage : 1
convenience range usage -> algorithms : 1
range usage algorithms -> and : 1
usage algorithms and -> stl : 1
algorithms and stl -> algorithms : 1
and stl algorithms -> as : 1
and stl algorithms -> unfair : 1
stl algorithms as -> building : 3
algorithms as building -> algorithm : 1
algorithms as building -> blocks : 1
algorithms as building -> template : 1
as building algorithm -> operate : 1
building algorithm operate -> on : 1
algorithm operate on -> a : 1
operate on a -> generic : 1
on a generic -> algorithm : 1
a generic algorithm -> that : 2
a generic algorithm -> allows : 1
generic algorithm that -> can : 2
algorithm that can -> be : 3
that can be -> used : 8
that can be -> copied : 1
that can be -> implemented : 2
that can be -> declared : 1
that can be -> iterated : 2
that can be -> run : 2
that can be -> read : 1
that can be -> moved : 1
that can be -> invoked : 1
that can be -> detected : 1
that can be -> sized : 1
can be used -> with : 7
can be used -> to : 3
can be used -> both : 1
can be used -> for : 7
can be used -> whenever : 1
can be used -> like : 2
can be used -> as : 1
can be used -> without : 1
can be used -> by : 3
can be used -> when : 2
can be used -> in : 1
can be used -> from : 1
can be used -> communication : 1
can be used -> members : 1
be used with -> any : 6
be used with -> free : 1
be used with -> the : 1
be used with -> a : 1
be used with -> standard : 1
used with any -> range : 1
used with any -> compliant : 1
used with any -> a : 1
used with any -> typename : 1
used with any -> integer : 1
used with any -> v : 1
with any range -> point : 1
any range point -> to : 1
range point to -> the : 2
point to the -> first : 2
to the first -> element : 5
to the first -> algorithm : 1
to the first -> which : 1
to the first -> is : 1
the first element -> and : 2
the first element -> of : 2
the first element -> in : 1
first element and -> the : 2
element and the -> element : 2
and the element -> after : 2
the element after -> the : 2
element after the -> do : 1
element after the -> algorithms : 1
after the do -> not : 1
the do not -> change : 1
do not change -> the : 2
not change the -> size : 2
not change the -> and : 1
change the size -> of : 2
the size of -> the : 21
the size of -> one : 1
the size of -> each : 1
the size of -> our : 1
the size of -> a : 1
size of the -> with : 1
size of the -> captured : 1
size of the -> input : 1
size of the -> in : 2
size of the -> the : 2
size of the -> cache : 2
size of the -> instruction : 1
size of the -> array : 2
size of the -> string : 2
size of the -> determines : 1
size of the -> initial : 1
size of the -> objects : 1
size of the -> class : 2
size of the -> stl : 1
size of the -> resulting : 1
size of the -> that : 1
size of the -> stack : 3
size of the -> void : 1
size of the -> new : 1
size of the -> great : 1
size of the -> container : 1
size of the -> variant : 1
size of the -> data : 1
size of the -> we : 1
size of the -> queue : 1
of the with -> output : 1
the with output -> require : 1
with output require -> allocated : 2
output require allocated -> use : 1
output require allocated -> that : 1
require allocated use -> and : 1
allocated use and -> by : 1
use and by -> comparator : 1
use and by -> an : 1
and by comparator -> require : 1
by comparator require -> move : 1
comparator require move -> operators : 1
require move operators -> not : 2
move operators not -> to : 2
operators not to -> have : 1
operators not to -> algorithms : 1
not to have -> complexity : 1
to have complexity -> perform : 1
have complexity perform -> just : 1
complexity perform just -> as : 1
perform just as -> well : 2
just as well -> as : 2
as well as -> c : 2
as well as -> industry : 1
as well as -> audio : 1
as well as -> an : 2
as well as -> write : 1
as well as -> regular : 1
as well as -> and : 1
well as c -> library : 2
as c library -> function : 2
c library function -> algorithms : 1
c library function -> standard : 1
library function algorithms -> versus : 1
function algorithms versus -> handcrafted : 1
algorithms versus handcrafted -> and : 1
algorithms versus handcrafted -> unfortunate : 1
algorithms versus handcrafted -> promote : 1
algorithms versus handcrafted -> state : 1
versus handcrafted and -> code : 1
handcrafted and code -> base : 1
and code base -> examples : 1
code base examples -> of : 1
base examples of -> stl : 1
examples of stl -> algorithms : 2
of stl algorithms -> versus : 2
of stl algorithms -> over : 2
of stl algorithms -> and : 1
stl algorithms versus -> handcrafted : 2
versus handcrafted unfortunate -> exceptions : 1
handcrafted unfortunate exceptions -> and : 1
unfortunate exceptions and -> performance : 2
exceptions and performance -> stl : 1
exceptions and performance -> say : 1
and performance stl -> has : 1
performance stl has -> subtle : 1
stl has subtle -> optimizations : 2
has subtle optimizations -> even : 2
subtle optimizations even -> in : 2
optimizations even in -> simple : 2
even in simple -> only : 1
even in simple -> algorithms : 1
in simple only -> for : 1
simple only for -> the : 1
only for the -> data : 2
for the data -> you : 2
for the data -> member : 1
the data you -> need : 3
the data you -> have : 1
data you need -> to : 2
data you need -> is : 1
you need to -> future : 1
you need to -> have : 1
you need to -> work : 1
you need to -> pass : 1
you need to -> explicitly : 1
you need to -> ask : 1
you need to -> tune : 1
you need to -> know : 1
you need to -> sort : 1
you need to -> add : 1
you need to -> traverse : 1
you need to -> contains : 1
you need to -> ensure : 2
you need to -> understand : 1
you need to -> get : 1
you need to -> do : 1
need to future -> of : 1
to future of -> stl : 2
future of stl -> and : 2
of stl and -> the : 2
stl and the -> ranges : 2
and the ranges -> of : 2
and the ranges -> section : 1
the ranges of -> the : 1
the ranges of -> each : 1
ranges of the -> iterators : 1
of the iterators -> in : 2
the iterators in -> to : 1
the iterators in -> the : 1
iterators in to -> the : 1
in to the -> ranges : 1
to the ranges -> and : 1
to the ranges -> to : 1
to the ranges -> mentioned : 1
the ranges and -> and : 1
ranges and and -> virtual : 1
and and virtual -> address : 1
and virtual address -> in : 1
and virtual address -> stack : 1
virtual address in -> and : 1
virtual address in -> the : 1
address in and -> deleting : 1
in and deleting -> new : 1
in and deleting -> this : 1
and deleting new -> and : 1
deleting new and -> delete : 1
new and delete -> resources : 1
new and delete -> function : 1
new and delete -> to : 1
and delete resources -> size : 1
delete resources size -> memory : 1
resources size memory -> an : 1
size memory an -> custom : 1
memory an custom -> memory : 1
an custom memory -> and : 1
custom memory and -> to : 1
custom memory and -> explains : 1
memory and to -> template : 1
and to template -> integers : 1
to template integers -> as : 1
template integers as -> template : 1
integers as template -> the : 1
integers as template -> general : 1
as template the -> compiler : 1
template the compiler -> handles : 1
the compiler handles -> a : 2
the compiler handles -> this : 1
the compiler handles -> the : 1
compiler handles a -> to : 1
compiler handles a -> the : 1
handles a to -> trigger : 1
a to trigger -> errors : 1
to trigger errors -> at : 2
trigger errors at -> compile : 2
errors at compile -> trait : 1
errors at compile -> we : 1
at compile trait -> type : 1
compile trait type -> the : 1
trait type the -> type : 1
type the type -> of : 1
the type of -> a : 4
the type of -> pointer : 1
the type of -> the : 3
the type of -> only : 1
type of a -> variable : 4
type of a -> provided : 1
of a variable -> with : 2
of a variable -> and : 1
of a variable -> but : 1
a variable with -> enable : 1
a variable with -> static : 1
a variable with -> is : 1
variable with enable -> functions : 1
with enable functions -> based : 1
enable functions based -> on : 2
functions based on -> types : 2
based on types -> with : 2
on types with -> class : 1
on types with -> trait : 1
types with class -> members : 1
with class members -> with : 1
class members with -> example : 1
class members with -> the : 1
members with example -> of : 1
with example of -> and : 1
example of and -> constexpr : 1
example of and -> is : 1
of and constexpr -> functions : 1
and constexpr functions -> in : 1
constexpr functions in -> a : 1
functions in a -> runtime : 2
in a runtime -> computation : 1
in a runtime -> the : 1
a runtime computation -> using : 1
runtime computation using -> if : 1
computation using if -> constexpr : 1
using if constexpr -> with : 1
if constexpr with -> runtime : 1
constexpr with runtime -> of : 1
with runtime of -> generic : 1
runtime of generic -> modulus : 1
of generic modulus -> function : 2
generic modulus function -> using : 2
generic modulus function -> called : 1
modulus function using -> if : 2
function using if -> heterogenous : 1
function using if -> example : 1
using if heterogenous -> the : 1
if heterogenous the -> members : 1
heterogenous the members -> of : 1
the members of -> a : 3
the members of -> the : 1
members of a -> the : 1
members of a -> individual : 1
members of a -> tuple : 1
members of a -> by : 1
members of a -> struct : 1
of a the -> other : 1
of a the -> first : 1
of a the -> value : 1
of a the -> stack : 1
of a the -> future : 1
a the other -> algorithms : 1
the other algorithms -> for : 2
other algorithms for -> tuple : 1
other algorithms for -> upon : 1
algorithms for tuple -> variadic : 1
for tuple variadic -> template : 1
tuple variadic template -> parameter : 1
variadic template parameter -> example : 1
variadic template parameter -> variadic : 1
variadic template parameter -> packs : 1
variadic template parameter -> we : 1
template parameter example -> of : 1
parameter example of -> a : 1
example of a -> function : 2
example of a -> class : 1
example of a -> returned : 1
example of a -> processor : 1
example of a -> but : 1
example of a -> simple : 1
example of a -> deadlock : 1
example of a -> producer : 1
example of a -> which : 1
of a function -> with : 2
of a function -> which : 1
of a function -> does : 1
a function with -> variadic : 2
a function with -> a : 1
function with variadic -> number : 2
with variadic number -> of : 2
variadic number of -> to : 1
variadic number of -> we : 1
number of to -> construct : 2
of to construct -> a : 2
construct a variadic -> parameter : 2
a variadic parameter -> heterogenous : 1
a variadic parameter -> parameter : 1
a variadic parameter -> further : 1
variadic parameter heterogenous -> as : 1
parameter heterogenous as -> the : 1
heterogenous as the -> base : 1
as the base -> for : 2
as the base -> the : 1
the base for -> a : 2
base for a -> heterogenous : 2
for a heterogenous -> container : 1
for a heterogenous -> that : 1
a heterogenous container -> of : 1
a heterogenous container -> with : 1
heterogenous container of -> the : 1
container of the -> values : 1
container of the -> empty : 1
container of the -> iterator : 1
of the values -> in : 2
of the values -> assigned : 1
the values in -> our : 2
the values in -> the : 1
values in our -> variant : 2
in our variant -> function : 1
in our variant -> that : 1
our variant function -> world : 1
variant function world -> examples : 1
function world examples -> of : 1
world examples of -> a : 1
world examples of -> metaprogramming : 1
examples of a -> class : 1
of a class -> reflect : 1
of a class -> or : 1
of a class -> explicitly : 1
of a class -> is : 2
of a class -> which : 1
of a class -> with : 1
a class reflect -> its : 2
class reflect its -> libraries : 1
class reflect its -> contrast : 1
reflect its libraries -> which : 1
its libraries which -> simplifies : 1
libraries which simplifies -> the : 1
libraries which simplifies -> are : 1
which simplifies the -> the : 1
simplifies the the -> assembler : 1
the the assembler -> output : 1
the assembler output -> of : 3
assembler output of -> the : 2
assembler output of -> our : 1
output of the -> overloading : 1
output of the -> ensure : 1
of the overloading -> global : 1
the overloading global -> reflection : 1
overloading global reflection -> creating : 1
global reflection creating -> a : 1
reflection creating a -> generic : 1
creating a generic -> safe : 2
a generic safe -> cast : 2
generic safe cast -> hash : 1
generic safe cast -> casting : 1
safe cast hash -> strings : 1
cast hash strings -> at : 1
hash strings at -> compile : 2
strings at compile -> advantages : 1
strings at compile -> say : 1
strings at compile -> gives : 1
at compile advantages -> of : 1
compile advantages of -> hash : 1
advantages of hash -> sum : 2
of hash sum -> and : 1
of hash sum -> problem : 1
hash sum and -> verify : 1
sum and verify -> a : 1
and verify a -> hash : 2
verify a hash -> a : 1
verify a hash -> order : 1
a hash a -> prehashedstring : 1
hash a prehashedstring -> prehashedstring : 1
a prehashedstring prehashedstring -> to : 1
prehashedstring prehashedstring to -> only : 1
prehashedstring to only -> accept : 2
to only accept -> compile : 3
only accept compile -> time : 3
accept compile time -> string : 3
compile time string -> with : 1
compile time string -> the : 2
time string with -> objects : 1
string with objects -> and : 1
with objects and -> lazy : 1
objects and lazy -> introduction : 1
objects and lazy -> explores : 1
objects and lazy -> rv : 1
objects and lazy -> this : 1
objects and lazy -> evaluation : 1
and lazy introduction -> to : 1
lazy introduction to -> lazy : 1
introduction to lazy -> evaluation : 2
to lazy evaluation -> and : 2
lazy evaluation and -> proxy : 2
lazy evaluation and -> eager : 1
evaluation and proxy -> versus : 1
evaluation and proxy -> and : 1
and proxy versus -> eager : 1
proxy versus eager -> concatenated : 1
versus eager concatenated -> strings : 1
eager concatenated strings -> using : 1
concatenated strings using -> a : 2
strings using a -> the : 1
strings using a -> a : 1
using a the -> a : 1
using a the -> pipe : 1
using a the -> reorderings : 1
a the a -> concatenated : 1
the a concatenated -> an : 1
a concatenated an -> sqrt : 1
concatenated an sqrt -> computation : 1
an sqrt computation -> when : 2
sqrt computation when -> comparing : 2
computation when comparing -> simple : 1
computation when comparing -> this : 1
when comparing simple -> point : 1
comparing simple point -> underlying : 1
simple point underlying -> the : 1
point underlying the -> distproxy : 1
underlying the distproxy -> distproxy : 1
the distproxy distproxy -> to : 1
distproxy distproxy to -> something : 1
distproxy to something -> more : 2
to something more -> distances : 1
to something more -> that : 1
something more distances -> with : 1
more distances with -> distances : 1
distances with distances -> with : 1
with distances with -> the : 1
distances with the -> misuse : 1
with the misuse -> of : 1
the misuse of -> operator : 1
the misuse of -> may : 1
misuse of operator -> overloading : 1
of operator overloading -> and : 1
operator overloading and -> proxy : 2
overloading and proxy -> pipe : 1
overloading and proxy -> you : 1
and proxy pipe -> operator : 1
proxy pipe operator -> as : 1
pipe operator as -> an : 2
operator as an -> extension : 2
as an extension -> pipe : 1
as an extension -> to : 1
an extension pipe -> infix : 1
extension pipe infix -> the : 1
pipe infix the -> basics : 1
infix the basics -> of : 1
the basics of -> makes : 1
the basics of -> classes : 1
the basics of -> see : 1
the basics of -> parallel : 1
the basics of -> virtual : 2
the basics of -> concurrent : 1
basics of makes -> concurrent : 1
of makes concurrent -> programming : 2
makes concurrent programming -> and : 1
makes concurrent programming -> are : 1
concurrent programming and -> and : 1
programming and and -> asynchronous : 1
and and asynchronous -> programming : 1
and asynchronous programming -> in : 1
asynchronous programming in -> thread : 1
programming in thread -> support : 1
in thread support -> critical : 1
thread support critical -> data : 1
support critical data -> and : 1
critical data and -> handling : 1
data and handling -> support : 1
data and handling -> examples : 1
and handling support -> in : 1
handling support in -> in : 1
support in in -> a : 1
in in a -> multithreaded : 1
in a multithreaded -> memory : 1
in a multithreaded -> about : 1
in a multithreaded -> and : 1
a multithreaded memory -> and : 1
multithreaded memory and -> memory : 1
memory and memory -> queue : 1
and memory queue -> blocking : 1
memory queue blocking -> of : 1
queue blocking of -> of : 1
blocking of of -> parallel : 1
of of parallel -> of : 1
of parallel of -> the : 1
parallel of the -> naive : 1
of the naive -> and : 1
of the naive -> naive : 1
the naive and -> parallel : 1
naive and parallel -> parallel : 1
and parallel parallel -> one : 1
parallel parallel one -> use : 1
parallel one use -> a : 1
one use a -> synchronized : 2
use a synchronized -> write : 2
a synchronized write -> two : 1
a synchronized write -> first : 1
synchronized write two -> split : 1
write two split -> algorithm : 1
two split algorithm -> into : 2
split algorithm into -> two : 2
algorithm into two -> one : 2
algorithm into two -> second : 1
algorithm into two -> the : 1
into two one -> copy : 1
into two one -> use : 1
two one copy -> elements : 1
one copy elements -> in : 2
copy elements in -> parallel : 2
elements in parallel -> into : 2
in parallel into -> the : 2
parallel into the -> destination : 2
into the destination -> two : 1
into the destination -> first : 1
the destination two -> move : 1
destination two move -> the : 1
two move the -> sparse : 2
move the sparse -> range : 2
the sparse range -> sequentially : 2
the sparse range -> is : 1
sparse range sequentially -> into : 2
range sequentially into -> a : 2
sequentially into a -> continuous : 2
into a continuous -> unsequenced : 1
into a continuous -> the : 1
into a continuous -> from : 1
a continuous unsequenced -> modifications : 1
continuous unsequenced modifications -> of : 1
unsequenced modifications of -> and : 1
modifications of and -> an : 1
of and an -> with : 1
of and an -> overloaded : 1
and an with -> linear : 1
an with linear -> construction : 1
with linear construction -> via : 1
linear construction via -> a : 1
construction via a -> stl : 1
construction via a -> order : 1
via a stl -> algorithms : 1
a stl algorithms -> on : 1
stl algorithms on -> the : 2
algorithms on the -> apis : 1
algorithms on the -> gpu : 1
algorithms on the -> processing : 1
on the apis -> and : 1
the apis and -> parallel : 1
apis and parallel -> algorithms : 1
apis and parallel -> main : 1
and parallel algorithms -> and : 1
parallel algorithms and -> the : 1
algorithms and the -> concepts : 1
algorithms and the -> the : 1
algorithms and the -> equivalents : 1
and the concepts -> of : 1
the concepts of -> boost : 1
the concepts of -> we : 1
the concepts of -> stack : 1
concepts of boost -> boost : 1
concepts of boost -> compute : 1
of boost boost -> a : 1
boost boost a -> simple : 1
boost a simple -> algorithm : 1
a simple algorithm -> to : 2
simple algorithm to -> boost : 2
algorithm to boost -> algorithm : 1
algorithm to boost -> the : 1
algorithm to boost -> say : 1
algorithm to boost -> see : 1
to boost algorithm -> in : 1
boost algorithm in -> standard : 1
algorithm in standard -> the : 1
algorithm in standard -> formula : 1
in standard the -> algorithm : 1
standard the algorithm -> to : 1
the algorithm to -> boost : 2
to boost the -> circle : 1
to boost the -> algorithm : 1
boost the circle -> struct : 1
the circle struct -> for : 2
the circle struct -> is : 1
circle struct for -> use : 2
struct for use -> with : 2
for use with -> boost : 2
use with boost -> to : 1
use with boost -> first : 1
use with boost -> compute : 1
with boost to -> boost : 1
boost to boost -> the : 1
boost the algorithm -> on : 1
the algorithm on -> the : 2
algorithm on the -> predicates : 1
algorithm on the -> implementing : 1
on the predicates -> with : 1
the predicates with -> boost : 1
predicates with boost -> a : 1
predicates with boost -> we : 1
with boost a -> custom : 1
boost a custom -> kernel : 1
a custom kernel -> in : 2
custom kernel in -> boost : 2
kernel in boost -> the : 1
kernel in boost -> mentioned : 1
in boost the -> for : 1
boost the for -> two : 1
the for two -> gpu : 1
for two gpu -> computation : 1
two gpu computation -> on : 1
gpu computation on -> the : 2
computation on the -> books : 1
computation on the -> gpus : 1
on the books -> you : 1
the books you -> may : 1
books you may -> a : 1
books you may -> you : 1
you may a -> review : 1
may a review -> let : 1
a review let -> other : 2
review let other -> readers : 2
let other readers -> know : 2
other readers know -> what : 2
readers know what -> you : 2
know what you -> high : 1
know what you -> share : 1
what you high -> high : 1
you high high -> and : 1
high high and -> optimize : 1
high and optimize -> the : 1
and optimize the -> performance : 1
optimize the performance -> of : 1
the performance of -> your : 1
the performance of -> order : 1
performance of your -> high : 1
performance of your -> common : 1
of your high -> packt : 1
your high packt -> rights : 1
high packt rights -> no : 1
packt rights no -> part : 1
rights no part -> of : 1
no part of -> this : 1
part of this -> book : 1
this book may -> be : 1
book may be -> stored : 1
may be stored -> in : 1
be stored in -> a : 2
stored in a -> retrieval : 1
stored in a -> auto : 1
in a retrieval -> or : 1
a retrieval or -> transmitted : 1
retrieval or transmitted -> in : 1
or transmitted in -> any : 1
transmitted in any -> form : 1
in any form -> or : 1
in any form -> on : 1
any form or -> by : 1
form or by -> any : 1
or by any -> without : 1
by any without -> the : 1
any without the -> prior : 1
without the prior -> written : 1
the prior written -> permission : 1
prior written permission -> of : 1
written permission of -> the : 1
permission of the -> except : 1
of the except -> in : 1
the except in -> the : 1
except in the -> case : 1
in the case -> of : 4
in the case -> with : 1
the case of -> brief : 1
the case of -> a : 1
the case of -> the : 1
the case of -> an : 2
case of brief -> quotations : 1
of brief quotations -> embedded : 1
brief quotations embedded -> in : 1
quotations embedded in -> critical : 1
embedded in critical -> articles : 1
in critical articles -> or : 1
critical articles or -> effort : 1
articles or effort -> has : 1
or effort has -> been : 1
effort has been -> made : 1
has been made -> in : 1
been made in -> the : 1
made in the -> preparation : 1
in the preparation -> of : 1
the preparation of -> this : 1
preparation of this -> book : 1
this book to -> ensure : 1
book to ensure -> the : 1
to ensure the -> accuracy : 2
ensure the accuracy -> of : 2
the accuracy of -> the : 1
the accuracy of -> this : 1
the accuracy of -> our : 1
accuracy of the -> information : 1
of the information -> the : 1
the information the -> information : 1
information the information -> contained : 1
the information contained -> in : 1
information contained in -> this : 1
contained in this -> book : 1
in this book -> is : 1
in this book -> by : 1
book is sold -> without : 1
is sold without -> either : 1
sold without either -> express : 1
without either express -> or : 1
either express or -> neither : 1
express or neither -> the : 1
or neither the -> nor : 1
neither the nor -> packt : 1
the nor packt -> publishing : 1
nor packt publishing -> or : 1
packt publishing or -> its : 1
publishing or its -> dealers : 1
or its dealers -> and : 1
its dealers and -> will : 1
dealers and will -> be : 1
and will be -> held : 1
and will be -> the : 1
and will be -> discussed : 1
and will be -> destroyed : 1
and will be -> very : 1
will be held -> liable : 1
be held liable -> for : 1
held liable for -> any : 1
liable for any -> damages : 1
for any damages -> caused : 1
any damages caused -> or : 1
damages caused or -> alleged : 1
caused or alleged -> to : 1
or alleged to -> have : 1
alleged to have -> been : 1
to have been -> caused : 1
have been caused -> directly : 1
been caused directly -> or : 1
caused directly or -> indirectly : 1
directly or indirectly -> by : 1
or indirectly by -> this : 1
indirectly by this -> publishing : 1
by this publishing -> has : 1
this publishing has -> endeavored : 1
publishing has endeavored -> to : 1
has endeavored to -> provide : 1
endeavored to provide -> trademark : 1
to provide trademark -> information : 1
provide trademark information -> about : 1
trademark information about -> all : 1
information about all -> of : 1
about all of -> the : 1
all of the -> companies : 1
all of the -> power : 1
of the companies -> and : 1
the companies and -> products : 1
companies and products -> mentioned : 1
and products mentioned -> in : 1
products mentioned in -> this : 1
mentioned in this -> book : 1
this book by -> the : 1
this book by -> exploring : 1
book by the -> appropriate : 1
by the appropriate -> use : 1
the appropriate use -> of : 1
appropriate use of -> packt : 1
use of packt -> publishing : 1
of packt publishing -> cannot : 1
packt publishing cannot -> guarantee : 1
publishing cannot guarantee -> the : 1
cannot guarantee the -> accuracy : 1
guarantee the accuracy -> of : 1
accuracy of this -> denim : 1
of this denim -> development : 1
this denim development -> nikhil : 1
denim development nikhil -> jijo : 1
development nikhil jijo -> safis : 1
nikhil jijo safis -> vaidehi : 1
jijo safis vaidehi -> safis : 1
safis vaidehi safis -> rekha : 1
vaidehi safis rekha -> tania : 1
safis rekha tania -> arvindkumar : 1
rekha tania arvindkumar -> gupta : 1
tania arvindkumar gupta -> january : 1
arvindkumar gupta january -> by : 1
gupta january by -> packt : 1
january by packt -> publishing : 1
by packt publishing -> livery : 1
packt publishing livery -> livery : 1
publishing livery livery -> is : 1
livery livery is -> an : 1
livery is an -> online : 1
is an online -> digital : 1
is an online -> compiler : 1
an online digital -> library : 1
online digital library -> that : 1
digital library that -> gives : 1
library that gives -> you : 1
that gives you -> full : 1
gives you full -> access : 1
you full access -> to : 1
full access to -> over : 1
access to over -> books : 1
to over books -> and : 1
over books and -> as : 1
books and as -> well : 1
and as well -> as : 1
well as industry -> leading : 1
as industry leading -> tools : 1
industry leading tools -> to : 1
leading tools to -> help : 1
tools to help -> you : 1
to help you -> plan : 1
help you plan -> your : 1
you plan your -> personal : 1
plan your personal -> development : 1
your personal development -> and : 1
personal development and -> advance : 1
development and advance -> your : 1
and advance your -> for : 1
advance your for -> more : 1
your for more -> please : 1
for more please -> visit : 1
more please visit -> our : 1
please visit our -> less : 1
visit our less -> time : 1
our less time -> learning : 1
less time learning -> and : 1
time learning and -> more : 1
learning and more -> time : 1
and more time -> coding : 1
more time coding -> with : 1
time coding with -> practical : 1
coding with practical -> ebooks : 1
with practical ebooks -> and : 1
practical ebooks and -> videos : 1
ebooks and videos -> from : 1
and videos from -> over : 1
videos from over -> industry : 1
from over industry -> professionals : 1
over industry professionals -> your : 1
industry professionals your -> learning : 1
professionals your learning -> with : 1
your learning with -> skill : 1
learning with skill -> plans : 1
with skill plans -> built : 1
skill plans built -> especially : 1
plans built especially -> for : 1
built especially for -> a : 1
especially for a -> free : 1
for a free -> ebook : 1
a free ebook -> or : 1
free ebook or -> video : 1
ebook or video -> every : 1
or video every -> is : 1
video every is -> fully : 1
every is fully -> and : 1
is fully and -> and : 1
fully and and -> bookmark : 1
and and bookmark -> you : 1
and bookmark you -> know : 1
bookmark you know -> that : 1
you know that -> packt : 1
you know that -> they : 1
you know that -> it : 1
you know that -> objects : 1
know that packt -> offers : 1
that packt offers -> ebook : 1
packt offers ebook -> versions : 1
offers ebook versions -> of : 1
ebook versions of -> every : 1
versions of every -> book : 1
of every book -> with : 1
every book with -> pdf : 1
book with pdf -> and : 1
with pdf and -> epub : 1
pdf and epub -> files : 1
and epub files -> you : 1
epub files you -> can : 1
files you can -> upgrade : 1
you can upgrade -> to : 1
can upgrade to -> the : 1
upgrade to the -> ebook : 1
to the ebook -> version : 1
the ebook version -> at : 1
ebook version at -> and : 1
version at and -> as : 1
at and as -> a : 1
and as a -> print : 1
and as a -> consequence : 1
and as a -> the : 1
as a print -> book : 1
a print book -> you : 1
print book you -> are : 1
book you are -> entitled : 1
you are entitled -> to : 1
are entitled to -> a : 1
entitled to a -> discount : 1
to a discount -> on : 1
a discount on -> the : 1
discount on the -> ebook : 1
on the ebook -> get : 1
the ebook get -> in : 1
ebook get in -> touch : 1
get in touch -> with : 1
in touch with -> us : 1
touch with us -> at : 1
with us at -> for : 1
us at for -> more : 1
at for more -> you : 1
for more you -> can : 1
more you can -> also : 1
you can also -> read : 1
you can also -> add : 1
can also read -> a : 1
also read a -> collection : 1
read a collection -> of : 1
a collection of -> free : 1
a collection of -> the : 3
a collection of -> which : 1
collection of free -> technical : 1
of free technical -> sign : 1
free technical sign -> up : 1
technical sign up -> for : 1
sign up for -> a : 1
up for a -> range : 1
for a range -> of : 1
a range of -> free : 1
a range of -> numbers : 3
a range of -> floating : 1
a range of -> increasing : 1
a range of -> c : 1
a range of -> elements : 1
a range of -> it : 1
range of free -> and : 1
of free and -> receive : 1
free and receive -> exclusive : 1
and receive exclusive -> discounts : 1
receive exclusive discounts -> and : 1
exclusive discounts and -> offers : 1
discounts and offers -> on : 1
and offers on -> packt : 1
offers on packt -> books : 1
on packt books -> and : 1
packt books and -> stepped : 1
books and stepped -> onto : 1
and stepped onto -> the : 1
stepped onto the -> stage : 1
onto the stage -> in : 1
the stage in -> and : 1
stage in and -> stopped : 1
in and stopped -> reinventing : 1
and stopped reinventing -> itself : 1
stopped reinventing itself -> for : 1
reinventing itself for -> a : 1
itself for a -> single : 1
for a single -> year : 1
a single year -> it : 1
single year it -> has : 1
year it has -> gone : 1
it has gone -> from : 1
has gone from -> a : 1
gone from a -> single : 1
from a single -> frontend : 1
a single frontend -> language : 1
single frontend language -> on : 1
frontend language on -> top : 1
language on top -> of : 1
on top of -> c : 1
on top of -> we : 2
on top of -> basic : 1
on top of -> the : 4
on top of -> it : 1
on top of -> had : 1
top of c -> to : 1
of c to -> a : 1
c to a -> citizen : 1
to a citizen -> of : 1
a citizen of -> the : 1
citizen of the -> compiler : 1
of the compiler -> each : 1
the compiler each -> new : 1
compiler each new -> standard : 1
each new standard -> has : 1
new standard has -> added : 1
standard has added -> substantial : 1
has added substantial -> sometimes : 1
added substantial sometimes -> to : 1
substantial sometimes to -> in : 1
sometimes to in -> the : 1
to in the -> words : 1
to in the -> the : 1
to in the -> preceding : 1
to in the -> previous : 1
in the words -> of : 1
the words of -> there : 1
words of there -> is : 1
of there is -> a : 1
there is a -> much : 1
there is a -> topic : 1
there is a -> performance : 1
there is a -> chance : 2
there is a -> constant : 1
there is a -> good : 3
there is a -> way : 1
there is a -> lot : 2
there is a -> it : 1
there is a -> glitch : 1
there is a -> risk : 1
there is a -> ui : 1
there is a -> portable : 1
there is a -> multitude : 1
is a much -> smaller : 1
is a much -> faster : 1
a much smaller -> and : 1
much smaller and -> cleaner : 1
smaller and cleaner -> language : 1
and cleaner language -> struggling : 1
cleaner language struggling -> to : 1
language struggling to -> get : 1
struggling to get -> of : 1
to get of -> is : 1
to get of -> integers : 1
get of is -> that : 1
of is that -> the : 1
is that the -> and : 1
is that the -> vector : 1
is that the -> caches : 1
is that the -> when : 1
is that the -> compiler : 1
is that the -> type : 1
is that the -> class : 1
is that the -> behavior : 1
is that the -> two : 1
is that the -> deletion : 1
is that the -> instructions : 1
is that the -> performance : 1
that the and -> cleaner : 1
the and cleaner -> to : 1
and cleaner to -> be : 1
cleaner to be -> found : 1
to be found -> within : 1
be found within -> changes : 1
found within changes -> with : 1
within changes with -> mastering : 1
changes with mastering -> is : 1
with mastering is -> akin : 1
mastering is akin -> to : 1
is akin to -> mastering : 1
akin to mastering -> a : 1
to mastering a -> multitude : 1
mastering a multitude -> of : 1
a multitude of -> each : 1
a multitude of -> buttons : 1
a multitude of -> algorithms : 1
a multitude of -> specific : 1
a multitude of -> books : 1
a multitude of -> parameters : 1
a multitude of -> operations : 1
multitude of each -> tailored : 1
of each tailored -> to : 1
each tailored to -> a : 1
tailored to a -> specific : 1
to a specific -> the : 1
to a specific -> in : 1
a specific the -> dialect : 1
a specific the -> stl : 1
specific the dialect -> that : 1
the dialect that -> makes : 1
dialect that makes -> sense : 1
that makes sense -> for : 1
makes sense for -> embedded : 1
sense for embedded -> system : 1
for embedded system -> is : 1
embedded system is -> nonsensical : 1
system is nonsensical -> for : 1
is nonsensical for -> large : 1
nonsensical for large -> enterprise : 1
for large enterprise -> and : 1
large enterprise and -> the : 1
enterprise and the -> phrasing : 1
and the phrasing -> that : 1
the phrasing that -> powers : 1
phrasing that powers -> a : 1
that powers a -> game : 1
powers a game -> engine : 1
a game engine -> is : 1
game engine is -> unbearable : 1
engine is unbearable -> when : 1
is unbearable when -> applied : 1
unbearable when applied -> to : 1
when applied to -> a : 1
applied to a -> word : 1
to a word -> high : 1
a word high -> teaches : 1
word high teaches -> you : 1
high teaches you -> a : 1
teaches you a -> dialect : 1
you a dialect -> for : 1
a dialect for -> rapidly : 1
dialect for rapidly -> developing : 1
for rapidly developing -> from : 1
rapidly developing from -> there : 1
developing from there -> have : 1
from there have -> been : 1
there have been -> a : 1
have been a -> vast : 1
have been a -> hot : 1
been a vast -> array : 1
a vast array -> of : 1
vast array of -> features : 1
array of features -> in : 1
of features in -> both : 1
features in both -> the : 1
in both the -> language : 1
both the language -> and : 1
the language and -> the : 1
language and the -> stl : 1
and the stl -> that : 1
the stl that -> let : 1
stl that let -> you : 1
that let you -> spend : 1
let you spend -> more : 1
you spend more -> time : 1
spend more time -> writing : 1
spend more time -> how : 1
spend more time -> discussing : 1
more time writing -> your : 1
time writing your -> application : 1
writing your application -> and : 1
your application and -> less : 1
application and less -> time : 1
and less time -> handling : 1
less time handling -> implementation : 1
time handling implementation -> this : 1
handling implementation this -> is : 1
implementation this is -> the : 1
this is the -> focus : 1
this is the -> only : 2
this is the -> and : 1
this is the -> reason : 1
is the focus -> of : 1
the focus of -> the : 1
focus of the -> book : 1
of the book -> and : 1
of the book -> in : 1
of the book -> expects : 1
the book and -> where : 1
the book and -> providing : 1
the book and -> working : 1
book and where -> it : 1
and where it -> topic : 1
where it topic -> is : 1
it topic is -> framed : 1
topic is framed -> in : 1
is framed in -> the : 1
framed in the -> larger : 1
in the larger -> context : 1
the larger context -> of : 1
larger context of -> application : 1
context of application -> development : 1
of application development -> and : 1
application development and -> computer : 1
development and computer -> for : 1
and computer for -> the : 1
computer for the -> reader : 1
for the reader -> who : 1
the reader who -> needs : 1
reader who needs -> to : 1
who needs to -> get : 1
needs to get -> up : 1
to get up -> to : 1
get up to -> speed : 1
up to speed -> with : 1
to speed with -> the : 1
speed with the -> latest : 1
with the latest -> techniques : 1
the latest techniques -> on : 1
latest techniques on -> a : 1
techniques on a -> short : 1
on a short -> this : 1
a short this -> information : 1
short this information -> provides : 1
this information provides -> the : 1
information provides the -> necessary : 1
provides the necessary -> landmarks : 1
the necessary landmarks -> to : 1
necessary landmarks to -> stay : 1
landmarks to stay -> specific : 1
to stay specific -> and : 1
stay specific and -> logical : 1
specific and logical -> progressions : 1
and logical progressions -> take : 1
logical progressions take -> you : 1
progressions take you -> from : 1
take you from -> a : 1
you from a -> basic : 1
from a basic -> use : 1
a basic use -> of : 1
basic use of -> auto : 1
use of auto -> and : 1
of auto and -> all : 1
auto and all -> the : 1
and all the -> way : 1
and all the -> implementations : 1
all the way -> up : 1
the way up -> to : 1
way up to -> using : 1
up to using -> boost : 1
to using boost -> to : 1
using boost to -> transparently : 1
boost to transparently -> run : 1
to transparently run -> your : 1
transparently run your -> algorithms : 1
run your algorithms -> on : 1
your algorithms on -> the : 1
on the gpu -> via : 1
on the gpu -> at : 1
on the gpu -> like : 1
on the gpu -> using : 1
the gpu via -> fundamental : 1
the gpu via -> an : 1
gpu via fundamental -> issues : 1
via fundamental issues -> around : 1
fundamental issues around -> modern : 1
issues around modern -> management : 1
around modern management -> and : 1
modern management and -> considerations : 1
management and considerations -> of : 1
and considerations of -> time : 1
considerations of time -> and : 1
of time and -> advance : 1
time and advance -> template : 1
and advance template -> and : 1
advance template and -> are : 1
template and are -> explained : 1
and are explained -> step : 1
are explained step -> by : 1
explained step by -> step : 1
step by step -> so : 1
by step so -> by : 1
step so by -> the : 1
so by the -> later : 1
by the later -> the : 1
the later the -> readers : 1
later the readers -> proceed : 1
the readers proceed -> into : 1
readers proceed into -> advanced : 1
proceed into advanced -> territory : 1
into advanced territory -> with : 1
advanced territory with -> have : 1
territory with have -> worked : 1
with have worked -> on : 1
have worked on -> a : 1
worked on a -> wide : 1
on a wide -> variety : 1
a wide variety -> of : 1
wide variety of -> and : 1
variety of and -> low : 1
of and low -> level : 1
and low level -> and : 1
low level and -> and : 1
level and and -> some : 1
and and some -> even : 1
and some even -> in : 1
some even in -> custom : 1
even in custom -> languages : 1
in custom languages -> i : 1
custom languages i -> designed : 1
languages i designed -> and : 1
i designed and -> holds : 1
designed and holds -> a : 1
and holds a -> special : 1
holds a special -> place : 1
a special place -> in : 1
special place in -> my : 1
place in my -> my : 1
in my my -> first : 1
my my first -> job : 1
my first job -> was : 1
first job was -> writing : 1
job was writing -> code : 1
was writing code -> for : 1
writing code for -> a : 1
code for a -> game : 1
for a game -> technology : 1
a game technology -> company : 1
game technology company -> in : 1
technology company in -> the : 1
company in the -> early : 1
in the early -> i : 1
the early i -> loved : 1
early i loved -> not : 1
i loved not -> least : 1
loved not least -> of : 1
not least of -> all : 1
least of all -> because : 1
of all because -> a : 1
all because a -> big : 1
because a big -> part : 1
a big part -> of : 1
big part of -> the : 1
part of the -> technology : 1
part of the -> rather : 2
part of the -> would : 1
part of the -> and : 1
part of the -> int : 1
part of the -> concrete : 1
part of the -> sorted : 1
part of the -> standard : 1
part of the -> range : 1
part of the -> this : 1
part of the -> concurrency : 1
part of the -> hardware : 1
part of the -> critical : 1
of the technology -> revolved : 1
the technology revolved -> around : 1
technology revolved around -> the : 1
revolved around the -> reflection : 1
around the reflection -> of : 1
the reflection of -> the : 1
reflection of the -> code : 1
of the code -> base : 2
of the code -> that : 1
of the code -> by : 1
of the code -> but : 1
of the code -> is : 1
of the code -> might : 1
of the code -> other : 1
the code base -> into : 1
the code base -> we : 2
the code base -> due : 1
the code base -> becomes : 1
the code base -> with : 2
code base into -> the : 1
base into the -> editor : 1
into the editor -> and : 1
the editor and -> scripting : 1
editor and scripting -> someone : 1
and scripting someone -> once : 1
scripting someone once -> described : 1
someone once described -> as : 1
once described as -> an : 1
described as an -> octopus : 1
as an octopus -> made : 1
an octopus made -> by : 1
octopus made by -> nailing : 1
made by nailing -> extra : 1
by nailing extra -> legs : 1
nailing extra legs -> onto : 1
extra legs onto -> a : 1
legs onto a -> and : 1
onto a and -> i : 1
a and i -> spent : 1
and i spent -> a : 1
i spent a -> lot : 1
spent a lot -> of : 2
a lot of -> time : 5
a lot of -> great : 1
a lot of -> code : 1
a lot of -> the : 2
a lot of -> its : 1
a lot of -> programming : 1
a lot of -> confusion : 1
a lot of -> circumstances : 1
a lot of -> samples : 1
a lot of -> strings : 1
a lot of -> cleverness : 1
a lot of -> starting : 1
a lot of -> attention : 1
a lot of -> distances : 1
a lot of -> examples : 1
a lot of -> synchronization : 1
a lot of -> cache : 2
a lot of -> work : 1
a lot of -> threads : 1
a lot of -> external : 1
lot of time -> with : 1
lot of time -> shuffling : 1
lot of time -> researching : 1
lot of time -> discussing : 1
lot of time -> waiting : 1
of time with -> a : 1
time with a -> hammer : 1
with a hammer -> making : 1
a hammer making -> our : 1
hammer making our -> code : 1
making our code -> base : 1
our code base -> do : 1
our code base -> and : 1
our code base -> to : 1
code base do -> things : 1
base do things -> that : 1
do things that -> was : 1
things that was -> never : 1
that was never -> intended : 1
was never intended -> to : 1
never intended to -> the : 1
intended to the -> octopus : 1
to the octopus -> we : 1
the octopus we -> ended : 1
octopus we ended -> up : 1
we ended up -> with : 1
ended up with -> in : 1
ended up with -> note : 1
ended up with -> no : 1
up with in -> its : 1
with in its -> own : 1
in its own -> beautiful : 1
its own beautiful -> and : 1
own beautiful and -> very : 1
beautiful and very -> has : 1
and very has -> evolved : 1
very has evolved -> tremendously : 1
has evolved tremendously -> since : 1
evolved tremendously since -> those : 1
tremendously since those -> and : 1
since those and -> it : 1
those and it -> is : 1
and it is -> my : 1
and it is -> still : 1
and it is -> up : 1
and it is -> now : 1
and it is -> also : 1
and it is -> important : 1
and it is -> likely : 1
and it is -> possible : 1
it is my -> privilege : 1
is my privilege -> to : 1
my privilege to -> open : 1
privilege to open -> the : 1
to open the -> door : 1
open the door -> for : 1
the door for -> you : 1
door for you -> as : 1
for you as -> you : 1
you as you -> walk : 1
as you walk -> into : 1
you walk into -> an : 1
walk into an -> exciting : 1
into an exciting -> new : 1
an exciting new -> world : 1
exciting new world -> of : 1
new world of -> viktor : 1
world of viktor -> and : 1
of viktor and -> are : 1
viktor and are -> brilliant : 1
and are brilliant -> and : 1
are brilliant and -> experienced : 1
brilliant and experienced -> developers : 1
and experienced developers -> with : 1
experienced developers with -> a : 1
developers with a -> remarkable : 1
with a remarkable -> and : 1
a remarkable and -> they : 1
remarkable and they -> have : 1
and they have -> a : 1
they have a -> lot : 1
they have a -> move : 1
have a lot -> of : 1
lot of great -> things : 1
of great things -> in : 1
great things in -> store : 1
things in store -> for : 1
in store for -> the : 1
store for the -> engine : 1
for the engine -> company : 1
the engine company -> the : 1
engine company the -> is : 1
company the is -> the : 1
the is the -> main : 1
the is the -> compiler : 1
the is the -> function : 1
the is the -> consumer : 1
the is the -> shared : 1
is the main -> developer : 1
is the main -> author : 2
the main developer -> at : 1
main developer at -> working : 1
developer at working -> with : 1
at working with -> a : 1
working with a -> graphics : 1
with a graphics -> engine : 1
a graphics engine -> aimed : 1
graphics engine aimed -> for : 1
engine aimed for -> mobile : 1
aimed for mobile -> has : 1
for mobile has -> years : 1
mobile has years -> of : 1
has years of -> professional : 1
years of professional -> experience : 1
of professional experience -> using : 1
professional experience using -> with : 1
experience using with -> and : 1
using with and -> architectural : 1
with and architectural -> design : 1
and architectural design -> as : 1
architectural design as -> his : 1
design as his -> focus : 1
as his focus -> through : 1
his focus through -> his : 1
focus through his -> he : 1
through his he -> has : 1
his he has -> developed : 1
he has developed -> medical : 1
has developed medical -> visualization : 1
developed medical visualization -> software : 1
medical visualization software -> at : 1
visualization software at -> mentice : 1
software at mentice -> and : 1
at mentice and -> raysearch : 1
mentice and raysearch -> laboratories : 1
and raysearch laboratories -> as : 1
raysearch laboratories as -> well : 1
laboratories as well -> as : 1
well as audio -> applications : 1
as audio applications -> at : 1
audio applications at -> propellerhead : 1
applications at propellerhead -> viktor : 1
at propellerhead viktor -> holds : 1
propellerhead viktor holds -> an : 1
viktor holds an -> in : 1
holds an in -> media : 1
an in media -> science : 1
in media science -> from : 1
media science from -> would : 1
science from would -> like : 1
from would like -> to : 1
would like to -> acknowledge : 1
would like to -> thank : 2
would like to -> concepts : 1
would like to -> use : 2
would like to -> analyze : 1
would like to -> iterate : 2
would like to -> rewrite : 1
would like to -> do : 1
would like to -> know : 1
would like to -> execute : 1
like to acknowledge -> the : 1
to acknowledge the -> colleagues : 1
acknowledge the colleagues -> who : 1
the colleagues who -> have : 1
colleagues who have -> broadened : 1
who have broadened -> my : 1
have broadened my -> knowledge : 1
broadened my knowledge -> in : 1
my knowledge in -> programming : 1
knowledge in programming -> during : 1
in programming during -> my : 1
programming during my -> carrier : 1
during my carrier -> alphabetical : 1
my carrier alphabetical -> andreas : 1
carrier alphabetical andreas -> peter : 1
alphabetical andreas peter -> rickard : 1
andreas peter rickard -> sigfred : 1
peter rickard sigfred -> tobias : 1
rickard sigfred tobias -> philippe : 1
sigfred tobias philippe -> johan : 1
tobias philippe johan -> marcus : 1
philippe johan marcus -> and : 1
johan marcus and -> mattias : 1
marcus and mattias -> i : 1
and mattias i -> would : 1
mattias i would -> like : 1
i would like -> to : 3
like to thank -> our : 1
like to thank -> the : 1
to thank our -> technical : 1
thank our technical -> reviewers : 1
our technical reviewers -> louis : 1
technical reviewers louis -> and : 1
reviewers louis and -> sergey : 1
louis and sergey -> my : 1
and sergey my -> for : 1
sergey my for -> your : 1
my for your -> love : 1
for your love -> and : 1
your love and -> a : 1
love and a -> freelance : 1
and a freelance -> software : 1
a freelance software -> consultant : 1
freelance software consultant -> currently : 1
software consultant currently -> focusing : 1
consultant currently focusing -> on : 1
currently focusing on -> audio : 1
focusing on audio -> more : 1
on audio more -> than : 1
audio more than -> he : 1
more than he -> has : 1
than he has -> been : 1
he has been -> working : 1
has been working -> professionally : 1
been working professionally -> with : 1
working professionally with -> in : 1
professionally with in -> projects : 1
with in projects -> ranging : 1
in projects ranging -> from : 1
projects ranging from -> unix : 1
ranging from unix -> server : 1
from unix server -> applications : 1
unix server applications -> to : 1
server applications to -> audio : 1
applications to audio -> applications : 1
to audio applications -> on : 1
audio applications on -> desktop : 1
applications on desktop -> and : 1
on desktop and -> the : 1
desktop and the -> he : 1
and the he -> has : 1
the he has -> also : 1
he has also -> taught : 1
has also taught -> courses : 1
also taught courses -> in : 1
taught courses in -> algorithms : 1
courses in algorithms -> and : 1
in algorithms and -> data : 1
in algorithms and -> shows : 1
algorithms and data -> concurrent : 1
algorithms and data -> structures : 3
algorithms and data -> a : 1
and data concurrent -> and : 1
data concurrent and -> programming : 1
concurrent and programming -> holds : 1
and programming holds -> a : 1
programming holds a -> bs : 1
holds a bs -> in : 1
a bs in -> computer : 1
bs in computer -> engineering : 1
in computer engineering -> and : 1
computer engineering and -> an : 1
engineering and an -> ms : 1
and an ms -> in : 1
an ms in -> computer : 1
ms in computer -> science : 1
in computer science -> from : 1
computer science from -> kth : 1
science from kth -> royal : 1
from kth royal -> institute : 1
kth royal institute -> of : 1
royal institute of -> i : 1
institute of i -> would : 1
of i would -> like : 1
to thank the -> team : 1
thank the team -> at : 1
the team at -> packt : 1
team at packt -> publishing : 1
at packt publishing -> who : 1
packt publishing who -> helped : 1
publishing who helped -> and : 1
who helped and -> contributed : 1
helped and contributed -> to : 1
and contributed to -> make : 1
contributed to make -> this : 1
to make this -> book : 1
make this book -> you : 1
this book you -> louis : 1
this book you -> can : 1
book you louis -> mauget : 1
you louis mauget -> for : 1
louis mauget for -> reviewing : 1
mauget for reviewing -> the : 1
for reviewing the -> book : 1
reviewing the book -> and : 2
book and providing -> me : 1
and providing me -> with : 1
providing me with -> and : 1
me with and -> special : 1
with and special -> thanks : 1
and special thanks -> goes : 1
special thanks goes -> to : 1
thanks goes to -> sergey : 1
goes to sergey -> who : 1
to sergey who -> has : 1
sergey who has -> done : 1
who has done -> an : 1
has done an -> outstanding : 1
done an outstanding -> job : 1
an outstanding job -> reviewing : 1
outstanding job reviewing -> the : 1
job reviewing the -> book : 1
book and working -> with : 1
and working with -> the : 1
working with the -> code : 1
with the code -> and : 1
the code and -> most : 1
the code and -> go : 1
the code and -> modify : 1
code and most -> of : 1
and most of -> i : 1
most of i -> must : 1
of i must -> thank : 1
i must thank -> my : 1
must thank my -> family : 1
thank my family -> for : 1
my family for -> their : 1
family for their -> support : 1
for their support -> and : 1
their support and -> for : 1
support and for -> understanding : 1
and for understanding -> my : 1
for understanding my -> many : 1
understanding my many -> hours : 1
my many hours -> at : 1
many hours at -> the : 1
hours at the -> computer : 1
at the computer -> thank : 1
the computer thank -> you : 1
computer thank you -> and : 1
thank you and -> the : 1
you and the -> started : 1
and the started -> his : 1
the started his -> journey : 1
started his journey -> in : 1
his journey in -> it : 1
journey in it -> years : 1
in it years -> ago : 1
it years ago -> in : 1
years ago in -> belarus : 1
ago in belarus -> state : 1
in belarus state -> university : 1
belarus state university -> informatics : 1
state university informatics -> and : 1
university informatics and -> radioelectronics : 1
informatics and radioelectronics -> in : 1
and radioelectronics in -> the : 1
radioelectronics in the -> artificial : 1
in the artificial -> intelligence : 1
the artificial intelligence -> he : 1
artificial intelligence he -> has : 1
intelligence he has -> about : 1
he has about -> years : 1
has about years -> of : 1
about years of -> industrial : 1
years of industrial -> programming : 1
of industrial programming -> experience : 1
industrial programming experience -> using : 1
programming experience using -> in : 1
experience using in -> several : 1
using in several -> such : 1
in several such -> as : 1
several such as -> network : 1
such as network -> information : 1
as network information -> and : 1
network information and -> image : 1
information and image -> his : 1
and image his -> free : 1
image his free -> he : 1
his free he -> likes : 1
free he likes -> and : 1
he likes and -> studying : 1
likes and studying -> something : 1
and studying something -> currently : 1
studying something currently -> works : 1
something currently works -> at : 1
currently works at -> regula : 1
works at regula -> and : 1
at regula and -> solarwinds : 1
regula and solarwinds -> and : 1
and solarwinds and -> is : 1
solarwinds and is -> an : 1
and is an -> activist : 1
and is an -> example : 1
is an activist -> of : 1
an activist of -> the : 1
activist of the -> want : 1
of the want -> to : 1
the want to -> say : 1
want to say -> thanks : 1
to say thanks -> to : 1
say thanks to -> my : 1
thanks to my -> friend : 1
to my friend -> artem : 1
my friend artem -> lapitsky : 1
friend artem lapitsky -> who : 1
artem lapitsky who -> is : 1
lapitsky who is -> always : 1
who is always -> ready : 1
is always ready -> to : 1
always ready to -> share : 1
ready to share -> his : 1
to share his -> wisdom : 1
share his wisdom -> with : 1
his wisdom with -> saw : 1
wisdom with saw -> the : 1
with saw the -> eniac : 1
saw the eniac -> but : 1
the eniac but -> coded : 1
eniac but coded -> in : 1
but coded in -> those : 1
coded in those -> adding : 1
in those adding -> several : 1
those adding several -> modern : 1
adding several modern -> languages : 1
several modern languages -> and : 1
modern languages and -> continues : 1
languages and continues -> to : 1
and continues to -> and : 1
continues to and -> lou : 1
to and lou -> evolves : 1
and lou evolves -> with : 1
lou evolves with -> interested : 1
evolves with interested -> in : 1
with interested in -> reactive : 1
interested in reactive -> functional : 1
in reactive functional -> and : 1
reactive functional and -> deep : 1
functional and deep -> he : 1
and deep he -> blogs : 1
deep he blogs -> about : 1
he blogs about -> software : 1
blogs about software -> technology : 1
about software technology -> for : 1
software technology for -> keyhole : 1
technology for keyhole -> where : 1
for keyhole where -> he : 1
keyhole where he -> works : 1
where he works -> as : 1
he works as -> a : 1
works as a -> senior : 1
as a senior -> software : 1
a senior software -> a : 1
senior software a -> coauthor : 1
software a coauthor -> of : 1
a coauthor of -> three : 1
coauthor of three -> computer : 1
of three computer -> he : 1
three computer he -> also : 1
computer he also -> wrote : 1
he also wrote -> ibm : 1
also wrote ibm -> developerworks : 1
wrote ibm developerworks -> tutorials : 1
ibm developerworks tutorials -> and : 1
developerworks tutorials and -> a : 1
tutorials and a -> websphere : 1
and a websphere -> journal : 1
a websphere journal -> ldap : 1
websphere journal ldap -> he : 1
journal ldap he -> cowrote : 1
ldap he cowrote -> several : 1
he cowrote several -> certification : 1
cowrote several certification -> tests : 1
several certification tests -> for : 1
certification tests for -> ibm : 1
tests for ibm -> and : 1
for ibm and -> has : 1
ibm and has -> been : 1
and has been -> a : 1
has been a -> reviewer : 1
has been a -> big : 1
has been a -> popular : 1
has been a -> lot : 1
been a reviewer -> for : 1
a reviewer for -> packt : 1
reviewer for packt -> publishing : 1
for packt publishing -> and : 1
packt publishing and -> is : 1
publishing and is -> searching : 1
and is searching -> for : 1
is searching for -> authors : 1
searching for authors -> like : 1
for authors like -> interested : 1
authors like interested -> in : 1
like interested in -> becoming : 1
interested in becoming -> an : 2
in becoming an -> author : 1
in becoming an -> if : 1
becoming an author -> for : 1
an author for -> please : 1
author for please -> visit : 1
for please visit -> and : 1
please visit and -> apply : 1
visit and apply -> we : 1
and apply we -> have : 1
apply we have -> worked : 1
we have worked -> with : 2
we have worked -> together : 1
we have worked -> hard : 1
have worked with -> thousands : 1
have worked with -> consists : 1
have worked with -> packt : 1
worked with thousands -> of : 1
with thousands of -> developers : 1
thousands of developers -> and : 1
of developers and -> tech : 1
developers and tech -> just : 1
and tech just -> like : 1
tech just like -> to : 1
just like to -> help : 1
like to help -> them : 1
to help them -> share : 1
help them share -> their : 1
them share their -> insight : 1
share their insight -> with : 1
their insight with -> the : 1
insight with the -> global : 1
with the global -> tech : 1
the global tech -> you : 1
global tech you -> can : 1
tech you can -> make : 1
you can make -> a : 1
can make a -> general : 1
can make a -> significant : 1
can make a -> parallel : 1
make a general -> apply : 1
a general apply -> for : 1
general apply for -> a : 1
apply for a -> specific : 1
for a specific -> hot : 1
for a specific -> we : 1
for a specific -> it : 1
for a specific -> the : 1
a specific hot -> topic : 1
specific hot topic -> that : 1
hot topic that -> we : 1
topic that we -> are : 1
that we are -> recruiting : 1
that we are -> dealing : 1
that we are -> using : 1
that we are -> aware : 1
that we are -> allocating : 1
that we are -> a : 1
that we are -> used : 1
that we are -> void : 1
that we are -> writing : 1
we are recruiting -> an : 1
are recruiting an -> author : 1
recruiting an author -> or : 1
an author or -> submit : 1
author or submit -> your : 1
or submit your -> own : 1
submit your own -> of : 1
your own of -> today : 1
own of today -> provides : 1
of today provides -> programmers : 2
today provides programmers -> the : 2
provides programmers the -> ability : 2
programmers the ability -> to : 2
the ability to -> write : 6
the ability to -> target : 2
the ability to -> explicitly : 1
the ability to -> bind : 1
the ability to -> inline : 1
the ability to -> avoid : 1
the ability to -> combine : 1
the ability to -> evaluate : 1
the ability to -> handle : 1
the ability to -> store : 2
the ability to -> inspect : 1
the ability to -> iterate : 1
the ability to -> reflect : 1
the ability to -> be : 2
the ability to -> overload : 1
the ability to -> spread : 1
ability to write -> expressive : 1
ability to write -> and : 2
ability to write -> robust : 1
ability to write -> an : 1
ability to write -> const : 1
to write expressive -> and : 1
write expressive and -> robust : 1
expressive and robust -> code : 2
and robust code -> while : 1
and robust code -> explore : 1
and robust code -> base : 1
robust code while -> still : 1
code while still -> having : 1
while still having -> the : 2
still having the -> ability : 2
having the ability -> to : 2
ability to target -> almost : 2
to target almost -> any : 2
target almost any -> hardware : 2
almost any hardware -> platform : 2
any hardware platform -> or : 2
hardware platform or -> makes : 1
hardware platform or -> of : 1
platform or makes -> a : 1
or makes a -> unique : 1
makes a unique -> over : 1
a unique over -> the : 1
unique over the -> last : 1
over the last -> few : 1
the last few -> has : 1
last few has -> turned : 1
few has turned -> into : 1
has turned into -> a : 1
turned into a -> modern : 1
into a modern -> language : 1
a modern language -> that : 1
modern language that -> is : 1
language that is -> more : 1
that is more -> fun : 1
is more fun -> to : 1
more fun to -> use : 1
fun to use -> and : 1
to use and -> with : 1
to use and -> hard : 1
to use and -> harder : 1
use and with -> better : 1
and with better -> book : 1
with better book -> aims : 1
better book aims -> to : 1
book aims to -> give : 2
aims to give -> the : 2
to give the -> reader : 2
to give the -> scheduler : 1
give the reader -> a : 2
the reader a -> solid : 2
reader a solid -> foundation : 2
a solid foundation -> to : 2
solid foundation to -> write : 2
foundation to write -> efficient : 2
to write efficient -> applications : 2
write efficient applications -> as : 2
efficient applications as -> well : 2
applications as well -> as : 2
well as an -> insight : 2
as an insight -> into : 2
an insight into -> strategies : 2
insight into strategies -> for : 2
into strategies for -> implementing : 2
into strategies for -> how : 1
strategies for implementing -> libraries : 1
strategies for implementing -> the : 1
for implementing libraries -> in : 1
implementing libraries in -> modern : 1
libraries in modern -> we : 2
in modern we -> have : 2
modern we have -> tried : 2
we have tried -> to : 2
have tried to -> take : 2
tried to take -> a : 2
to take a -> practical : 2
to take a -> deeper : 1
to take a -> raw : 1
to take a -> more : 1
take a practical -> approach : 2
a practical approach -> to : 2
practical approach to -> explain : 2
approach to explain -> how : 2
to explain how -> works : 2
explain how works -> where : 1
explain how works -> today : 1
how works where -> features : 1
works where features -> are : 1
where features are -> a : 2
features are a -> natural : 2
are a natural -> part : 2
a natural part -> of : 2
natural part of -> the : 2
of the rather -> than : 2
the rather than -> looking : 2
the rather than -> as : 1
rather than looking -> at : 2
than looking at -> book : 1
than looking at -> knowledge : 1
looking at book -> has : 1
at book has -> been : 1
book has been -> written : 1
has been written -> by : 1
been written by -> viktor : 1
written by viktor -> and : 1
by viktor and -> the : 1
viktor and the -> drafts : 1
and the drafts -> of : 1
the drafts of -> were : 1
drafts of were -> written : 1
of were written -> and : 1
were written and -> after : 1
written and after -> we : 1
and after we -> have : 1
after we have -> worked : 1
after we have -> seen : 1
after we have -> used : 1
have worked together -> to : 1
worked together to -> improve : 1
together to improve -> the : 1
to improve the -> chapters : 1
to improve the -> can : 1
to improve the -> performance : 1
to improve the -> before : 1
improve the chapters -> and : 1
the chapters and -> assemble : 1
chapters and assemble -> them : 1
and assemble them -> into : 1
assemble them into -> a : 1
them into a -> complete : 1
into a complete -> is : 1
a complete is -> the : 1
complete is the -> main : 1
the main author -> of : 2
main author of -> chapter : 2
author of chapter -> and : 2
of chapter and -> is : 1
of chapter and -> we : 1
chapter and is -> the : 1
and is the -> main : 1
chapter and we -> have : 1
chapter and we -> will : 1
and we have -> worked : 1
and we have -> to : 1
and we have -> already : 1
have worked hard -> a : 1
worked hard a -> consistent : 1
hard a consistent -> style : 1
a consistent style -> throughout : 1
consistent style throughout -> the : 1
style throughout the -> and : 1
throughout the and -> we : 1
the and we -> think : 1
the and we -> now : 1
the and we -> need : 1
the and we -> can : 1
and we think -> that : 1
we think that -> it : 1
think that it -> has : 1
that it has -> been : 2
that it has -> the : 1
that it has -> a : 1
that it has -> no : 1
that it has -> already : 1
it has been -> a : 1
it has been -> of : 1
it has been -> widely : 1
it has been -> modified : 1
it has been -> allocated : 1
it has been -> updated : 1
been a big -> advantage : 1
a big advantage -> to : 1
big advantage to -> write : 1
advantage to write -> this : 1
to write this -> book : 1
write this book -> many : 1
this book many -> subjects : 1
book many subjects -> have : 1
many subjects have -> been : 1
subjects have been -> debated : 1
have been debated -> and : 1
been debated and -> processed : 1
debated and processed -> for : 1
and processed for -> the : 1
processed for the -> this : 1
for the this -> book : 1
for the this -> is : 1
the this book -> is : 1
book is book -> expects : 1
is book expects -> you : 1
book expects you -> to : 2
expects you to -> have : 2
you to have -> a : 2
to have a -> basic : 3
to have a -> good : 1
to have a -> virtual : 1
to have a -> fixed : 1
have a basic -> knowledge : 3
a basic knowledge -> of : 3
basic knowledge of -> and : 2
basic knowledge of -> preferable : 1
knowledge of and -> computer : 2
of and computer -> architecture : 1
of and computer -> and : 1
and computer architecture -> and : 1
computer architecture and -> a : 1
architecture and a -> genuine : 1
and a genuine -> interest : 2
a genuine interest -> in : 2
genuine interest in -> evolving : 2
interest in evolving -> your : 2
in evolving your -> by : 2
evolving your by -> the : 2
your by the -> time : 2
by the time -> you : 2
the time you -> finish : 2
time you finish -> this : 2
you finish this -> you : 2
finish this you -> will : 2
this you will -> have : 2
this you will -> learn : 4
you will have -> gained : 2
you will have -> a : 3
will have gained -> a : 2
have gained a -> few : 2
gained a few -> insights : 2
a few insights -> into : 2
few insights into -> how : 2
insights into how -> you : 2
into how you -> can : 2
how you can -> improve : 2
how you can -> go : 1
you can improve -> your : 2
can improve your -> both : 2
improve your both -> and : 2
your both and -> on : 2
your both and -> in : 1
both and on -> top : 2
and on top -> of : 2
top of we -> also : 2
of we also -> hope : 2
we also hope -> that : 2
also hope that -> you : 2
hope that you -> will : 2
that you will -> have : 2
that you will -> stumble : 1
that you will -> move : 1
will have a -> this : 1
will have a -> few : 1
will have a -> case : 1
will have a -> great : 1
will have a -> big : 1
will have a -> time : 1
will have a -> look : 1
will have a -> data : 1
have a this -> book : 1
a this book -> brief : 1
this book brief -> introduction : 1
book brief introduction -> to : 1
introduction to introduces -> some : 1
to introduces some -> important : 1
introduces some important -> properties : 1
some important properties -> of : 1
important properties of -> such : 1
properties of such -> as : 1
of such as -> value : 1
of such as -> and : 2
such as value -> const : 1
as value const -> explicit : 1
value const explicit -> and : 1
const explicit and -> error : 1
explicit and error -> it : 1
and error it -> also : 1
error it also -> discusses : 1
it also discusses -> the : 1
also discusses the -> drawbacks : 1
discusses the drawbacks -> of : 1
the drawbacks of -> outlines : 1
drawbacks of outlines -> automatic : 1
of outlines automatic -> type : 1
outlines automatic type -> deduction : 1
automatic type deduction -> using : 1
type deduction using -> lambda : 1
deduction using lambda -> move : 1
using lambda move -> and : 1
lambda move and -> discusses : 1
move and discusses -> asymptotic : 1
and discusses asymptotic -> complexity : 1
discusses asymptotic complexity -> and : 1
asymptotic complexity and -> big : 1
big o practical -> performance : 1
o practical performance -> and : 1
practical performance and -> how : 1
performance and how -> to : 1
and how to -> profile : 1
and how to -> measure : 1
and how to -> invoke : 1
and how to -> use : 2
and how to -> tweak : 1
how to profile -> your : 1
to profile your -> code : 2
profile your code -> to : 1
profile your code -> further : 1
your code to -> find : 1
code to find -> you : 1
to find you -> through : 1
find you through -> the : 1
you through the -> importance : 1
through the importance -> of : 1
the importance of -> structuring : 1
the importance of -> strict : 1
the importance of -> the : 2
the importance of -> utilizing : 2
the importance of -> using : 1
the importance of -> having : 1
importance of structuring -> the : 1
of structuring the -> data : 1
structuring the data -> so : 1
the data so -> that : 1
data so that -> it : 1
so that it -> can : 2
so that it -> is : 1
so that it -> appears : 1
that it can -> be : 4
that it can -> store : 1
that it can -> hurt : 1
that it can -> release : 1
it can be -> accessed : 1
it can be -> so : 1
it can be -> implemented : 1
it can be -> stepped : 1
it can be -> this : 1
it can be -> beneficial : 1
it can be -> placed : 1
it can be -> used : 3
it can be -> evaluated : 1
it can be -> educational : 1
it can be -> swapped : 1
it can be -> hard : 1
it can be -> interesting : 1
can be accessed -> stl : 1
can be accessed -> using : 1
can be accessed -> by : 1
can be accessed -> without : 1
be accessed stl -> containers : 1
accessed stl containers -> such : 1
stl containers such -> as : 1
containers such as -> and : 1
containers such as -> from : 1
containers such as -> is : 1
such as and -> are : 1
such as and -> google : 1
such as and -> web : 1
such as and -> to : 2
such as and -> auto : 1
such as and -> such : 1
such as and -> memory : 1
such as and -> deeper : 1
such as and -> the : 2
such as and -> in : 1
such as and -> so : 3
such as and -> more : 1
as and are -> we : 1
and are we -> describe : 1
are we describe -> how : 1
we describe how -> to : 1
describe how to -> iterate : 1
how to iterate -> over : 1
to iterate over -> parallel : 1
to iterate over -> the : 3
to iterate over -> objects : 1
to iterate over -> collections : 1
iterate over parallel -> deeper : 1
over parallel deeper -> look : 1
parallel deeper look -> at : 1
look at dives -> into : 1
at dives into -> the : 1
dives into the -> concept : 1
into the concept -> of : 1
the concept of -> and : 1
the concept of -> which : 1
the concept of -> move : 1
concept of and -> shows : 1
of and shows -> how : 1
and shows how -> iterators : 1
shows how iterators -> can : 1
how iterators can -> go : 1
iterators can go -> beyond : 1
can go beyond -> just : 1
go beyond just -> referring : 1
beyond just referring -> to : 1
just referring to -> objects : 1
referring to objects -> in : 1
to objects in -> algorithms : 1
objects in algorithms -> and : 1
algorithms and shows -> the : 1
and shows the -> and : 1
shows the and -> the : 1
the and the -> not : 1
the and the -> and : 1
the and the -> capacity : 1
the and the -> we : 1
the and the -> transformed : 1
the and the -> object : 1
the and the -> third : 1
the and the -> second : 1
the and the -> source : 1
and the not -> so : 1
and the not -> note : 1
the not so -> advantages : 1
not so advantages -> of : 1
so advantages of -> stl : 1
advantages of stl -> algorithms : 2
stl algorithms over -> hand : 1
stl algorithms over -> handcrafted : 2
algorithms over hand -> rolled : 1
over hand rolled -> for : 1
hand rolled for -> it : 1
rolled for it -> also : 1
for it also -> takes : 1
it also takes -> a : 1
also takes a -> look : 1
takes a look -> at : 1
a look at -> the : 11
a look at -> how : 9
a look at -> these : 2
a look at -> a : 4
a look at -> for : 1
a look at -> this : 1
a look at -> an : 1
a look at -> atomic : 1
a look at -> which : 1
look at the -> limitations : 2
look at the -> following : 6
look at the -> next : 1
look at the -> advantages : 2
look at the -> upcoming : 1
look at the -> life : 1
look at the -> to : 1
look at the -> cdpaligncenter : 1
at the limitations -> of : 2
the limitations of -> stl : 1
the limitations of -> the : 2
limitations of stl -> algorithms : 1
stl algorithms and -> how : 1
stl algorithms and -> take : 1
stl algorithms and -> the : 1
algorithms and how -> the : 1
algorithms and how -> to : 1
and how the -> new : 1
how the new -> ranges : 1
the new ranges -> library : 2
new ranges library -> overcomes : 1
new ranges library -> for : 1
ranges library overcomes -> these : 1
library overcomes these -> focuses : 1
overcomes these focuses -> on : 1
these focuses on -> safe : 1
focuses on safe -> and : 1
on safe and -> efficient : 1
safe and efficient -> memory : 1
and efficient memory -> includes : 1
efficient memory includes -> memory : 1
memory includes memory -> smart : 1
includes memory smart -> dynamic : 1
memory smart dynamic -> and : 1
smart dynamic and -> custom : 1
dynamic and custom -> memory : 1
and custom memory -> and : 1
memory and explains -> metaprogramming : 1
and explains metaprogramming -> concepts : 1
explains metaprogramming concepts -> such : 1
metaprogramming concepts such -> as : 1
concepts such as -> heterogeneous : 1
concepts such as -> critical : 1
such as heterogeneous -> and : 1
as heterogeneous and -> it : 1
heterogeneous and it -> also : 1
and it also -> gives : 1
and it also -> includes : 1
and it also -> makes : 1
it also gives -> practical : 1
also gives practical -> examples : 1
gives practical examples -> of : 1
practical examples of -> metaprogramming : 1
examples of metaprogramming -> use : 1
examples of metaprogramming -> can : 1
of metaprogramming use -> such : 1
metaprogramming use such -> as : 1
use such as -> objects : 1
such as objects -> and : 1
as objects and -> lazy : 1
and lazy explores -> how : 1
lazy explores how -> proxy : 1
explores how proxy -> objects : 1
how proxy objects -> can : 1
proxy objects can -> be : 1
objects can be -> used : 1
objects can be -> created : 1
objects can be -> placed : 1
be used to -> perform : 1
be used to -> iterate : 1
be used to -> construct : 1
be used to -> extract : 1
be used to -> show : 1
used to perform -> optimizations : 1
to perform optimizations -> while : 1
perform optimizations while -> preserving : 1
optimizations while preserving -> clean : 1
optimizations while preserving -> an : 1
while preserving clean -> some : 1
preserving clean some -> creative : 1
clean some creative -> uses : 1
some creative uses -> of : 1
creative uses of -> are : 1
uses of are -> fundamentals : 1
of are fundamentals -> of : 1
are fundamentals of -> concurrent : 1
fundamentals of concurrent -> including : 2
of concurrent including -> parallel : 2
concurrent including parallel -> shared : 2
including parallel shared -> data : 2
parallel shared data -> and : 2
shared data and -> it : 1
shared data and -> deadlocks : 1
shared data and -> critical : 1
data and it -> also : 1
data and it -> might : 1
it also includes -> introduction : 1
also includes introduction -> to : 1
includes introduction to -> the : 1
introduction to the -> thread : 2
introduction to the -> containers : 1
introduction to the -> ranges : 1
introduction to the -> core : 1
introduction to the -> chapter : 1
to the thread -> support : 2
to the thread -> constructor : 1
the thread support -> the : 2
the thread support -> library : 2
thread support the -> atomic : 2
support the atomic -> and : 2
the atomic and -> the : 2
atomic and the -> memory : 2
atomic and the -> as : 1
and the memory -> starts : 1
and the memory -> overhead : 1
and the memory -> model : 1
and the memory -> which : 1
the memory starts -> by : 1
memory starts by -> showing : 1
starts by showing -> the : 1
by showing the -> complexity : 1
showing the complexity -> of : 1
the complexity of -> writing : 2
the complexity of -> a : 1
the complexity of -> the : 1
the complexity of -> importing : 1
the complexity of -> this : 1
the complexity of -> handcrafting : 1
complexity of writing -> parallel : 2
complexity of writing -> a : 1
of writing parallel -> it : 1
of writing parallel -> versions : 1
writing parallel it -> then : 1
parallel it then -> to : 1
it then to -> utilize : 1
then to utilize -> stl : 1
to utilize stl -> algorithms : 1
utilize stl algorithms -> in : 1
stl algorithms in -> a : 1
algorithms in a -> parallel : 1
algorithms in a -> way : 1
in a parallel -> context : 1
a parallel context -> using : 1
parallel context using -> the : 1
context using the -> parallel : 1
using the parallel -> extensions : 1
the parallel extensions -> for : 1
the parallel extensions -> of : 1
parallel extensions for -> stl : 1
extensions for stl -> and : 1
for stl and -> boost : 1
stl and boost -> get : 1
and boost get -> the : 1
boost get the -> most : 1
of this get -> the : 1
this get the -> most : 1
of this you -> need : 1
this you need -> to : 1
need to have -> a : 2
need to have -> the : 1
knowledge of preferable -> if : 1
of preferable if -> you : 1
preferable if you -> have : 1
if you have -> already : 2
if you have -> questions : 1
if you have -> found : 1
if you have -> a : 3
if you have -> been : 1
if you have -> to : 1
if you have -> the : 1
you have already -> been : 1
you have already -> mastered : 1
have already been -> facing : 1
have already been -> covered : 1
already been facing -> problems : 1
been facing problems -> related : 1
facing problems related -> to : 1
problems related to -> performance : 1
related to performance -> and : 1
to performance and -> are : 1
performance and are -> now : 1
performance and are -> a : 1
and are now -> looking : 1
are now looking -> for : 1
now looking for -> and : 1
looking for and -> practices : 1
looking for and -> then : 1
for and practices -> to : 1
and practices to -> have : 1
practices to have -> ready : 1
to have ready -> the : 1
have ready the -> next : 1
ready the next -> time : 1
the next time -> you : 1
the next time -> the : 1
next time you -> need : 1
time you need -> to : 1
need to work -> with : 1
to work with -> performance : 1
work with performance -> and : 1
with performance and -> are : 1
and are a -> lot : 1
are a lot -> of : 1
lot of code -> examples : 1
of code examples -> in : 1
code examples in -> this : 1
code examples in -> source : 1
examples in this -> some : 1
in this some -> are : 1
this some are -> taken : 1
some are taken -> from : 1
are taken from -> but : 1
taken from but -> most : 1
from but most -> of : 1
but most of -> them : 1
most of them -> or : 1
of them or -> vastly : 1
them or vastly -> simplified : 1
or vastly simplified -> examples : 1
vastly simplified examples -> a : 1
simplified examples a -> concept : 1
examples a concept -> rather : 1
a concept rather -> than : 1
concept rather than -> providing : 2
rather than providing -> you : 2
than providing you -> with : 2
providing you with -> we : 1
providing you with -> class : 1
you with we -> have : 1
with we have -> put : 1
we have put -> all : 1
have put all -> the : 1
put all the -> code : 1
all the code -> examples : 1
the code examples -> in : 1
examples in source -> files : 1
in source files -> divided : 1
source files divided -> by : 1
files divided by -> chapter : 1
divided by chapter -> so : 1
by chapter so -> that : 1
chapter so that -> it : 1
that it is -> fairly : 1
that it is -> as : 1
that it is -> safe : 1
that it is -> easier : 1
that it is -> actually : 1
that it is -> the : 1
that it is -> used : 1
that it is -> intended : 1
that it is -> not : 1
that it is -> for : 1
that it is -> executed : 1
that it is -> very : 1
it is fairly -> easy : 1
is fairly easy -> to : 1
fairly easy to -> find : 1
fairly easy to -> avoid : 1
easy to find -> the : 1
to find the -> examples : 1
to find the -> big : 1
to find the -> the : 1
to find the -> hot : 1
to find the -> element : 1
to find the -> with : 1
find the examples -> you : 1
the examples you -> want : 1
examples you want -> to : 1
you want to -> experiment : 1
you want to -> the : 1
you want to -> invoke : 1
you want to -> calculate : 1
you want to -> create : 1
you want to -> store : 1
you want to -> align : 1
you want to -> dig : 1
you want to -> return : 1
want to experiment -> if : 1
to experiment if -> you : 1
experiment if you -> open : 1
if you open -> up : 1
you open up -> the : 1
open up the -> source : 1
up the source -> code : 1
the source code -> you : 1
the source code -> of : 1
the source code -> to : 1
the source code -> are : 1
the source code -> following : 1
the source code -> does : 1
source code you -> will : 1
code you will -> note : 1
you will note -> that : 1
will note that -> we : 1
note that we -> have : 1
note that we -> we : 1
note that we -> are : 1
note that we -> simplify : 1
that we have -> replaced : 1
that we have -> full : 1
that we have -> acquired : 1
that we have -> a : 5
that we have -> defined : 1
that we have -> to : 3
that we have -> the : 5
that we have -> insights : 1
that we have -> before : 1
that we have -> all : 1
that we have -> everything : 2
that we have -> two : 2
that we have -> four : 1
that we have -> no : 1
we have replaced -> most : 1
have replaced most -> of : 1
replaced most of -> the : 1
most of the -> from : 1
most of the -> topics : 1
most of the -> time : 1
most of the -> we : 1
most of the -> work : 2
most of the -> computations : 1
of the from -> the : 1
the from the -> examples : 1
the from the -> previous : 1
from the examples -> with : 1
the examples with -> test : 1
examples with test -> cases : 1
with test cases -> written : 1
test cases written -> with : 1
cases written with -> google : 1
written with google -> test : 1
with google test -> we : 1
google test we -> hope : 1
test we hope -> that : 1
we hope that -> this : 1
hope that this -> will : 1
that this will -> help : 1
this will help -> you : 1
will help you -> rather : 1
help you rather -> than : 1
you rather than -> confuse : 1
rather than confuse -> allowed : 1
than confuse allowed -> us : 1
confuse allowed us -> helpful : 1
allowed us helpful -> descriptions : 1
us helpful descriptions -> for : 1
helpful descriptions for -> each : 1
descriptions for each -> and : 1
for each and -> it : 1
each and it -> also : 1
it also makes -> it : 1
also makes it -> easier : 1
makes it easier -> to : 2
it easier to -> run : 1
it easier to -> write : 1
it easier to -> simulate : 1
easier to run -> all : 1
to run all -> from : 1
run all from -> one : 1
all from one -> chapter : 1
from one chapter -> at : 1
one chapter at -> order : 1
chapter at order -> to : 1
at order to -> compile : 1
order to compile -> and : 1
to compile and -> run : 1
compile and run -> the : 1
and run the -> you : 1
and run the -> program : 1
run the you -> will : 1
the you will -> need : 1
you will need -> the : 1
will need the -> operation : 1
will need the -> stop : 1
need the operation -> system : 1
the operation system -> have : 1
operation system have -> verified : 1
system have verified -> the : 1
have verified the -> examples : 1
verified the examples -> on : 1
the examples on -> windows : 1
examples on windows -> and : 1
on windows and -> compiler : 1
windows and compiler -> have : 1
and compiler have -> been : 1
compiler have been -> using : 1
have been using -> visual : 1
been using visual -> cmake : 1
using visual cmake -> script : 1
visual cmake script -> provided : 1
cmake script provided -> with : 1
script provided with -> the : 1
provided with the -> example : 1
with the example -> code : 1
example code will -> download : 1
code will download -> and : 1
will download and -> install : 1
download and install -> further : 1
and install further -> dependencies : 1
install further dependencies -> such : 1
further dependencies such -> as : 1
dependencies such as -> and : 1
as and google -> the : 1
and google the -> writing : 1
google the writing -> of : 1
the writing of -> this : 1
writing of this -> it : 1
of this it -> has : 1
this it has -> been : 1
has been of -> great : 1
been of great -> help : 1
of great help -> for : 1
great help for -> us : 1
help for us -> to : 1
for us to -> use : 1
for us to -> know : 1
us to use -> compiler : 1
us to use -> an : 1
to use compiler -> which : 1
use compiler which -> is : 1
compiler which is -> available : 1
which is available -> compiler : 1
is available compiler -> explorer : 1
available compiler explorer -> is : 1
compiler explorer is -> an : 1
explorer is an -> online : 1
an online compiler -> service : 1
online compiler service -> that : 1
compiler service that -> lets : 1
service that lets -> you : 1
that lets you -> try : 1
lets you try -> various : 1
you try various -> compilers : 1
try various compilers -> and : 1
various compilers and -> try : 1
compilers and try -> it : 1
and try it -> out : 1
try it out -> if : 1
it out if -> you : 2
out if you -> the : 1
out if you -> another : 1
if you the -> example : 1
you the example -> code : 1
example code can -> download : 1
code can download -> the : 1
can download the -> example : 1
can download the -> code : 1
download the example -> code : 1
example code files -> for : 1
code files for -> this : 1
files for this -> book : 1
for this book -> from : 1
this book from -> your : 1
book from your -> account : 1
from your account -> at : 1
your account at -> if : 1
account at if -> you : 1
at if you -> purchased : 1
if you purchased -> this : 1
you purchased this -> book : 1
purchased this book -> you : 1
book you can -> visit : 1
you can visit -> and : 1
can visit and -> register : 1
visit and register -> to : 1
and register to -> have : 1
register to have -> the : 1
to have the -> files : 1
to have the -> same : 1
to have the -> syntax : 1
have the files -> emailed : 1
the files emailed -> directly : 1
files emailed directly -> to : 1
emailed directly to -> can : 1
directly to can -> download : 1
to can download -> the : 1
download the code -> files : 1
the code files -> by : 1
code files by -> following : 1
files by following -> these : 1
by following these -> in : 1
following these in -> or : 1
these in or -> register : 1
in or register -> at : 1
or register at -> the : 1
register at the -> on : 1
at the on -> downloads : 1
the on downloads -> the : 1
on downloads the -> name : 1
downloads the name -> of : 1
the name of -> the : 4
name of the -> book : 1
name of the -> there : 1
name of the -> and : 2
name of the -> opencl : 1
the book in -> the : 1
book in the -> box : 1
in the box -> and : 1
the box and -> follow : 1
box and follow -> the : 1
and follow the -> onscreen : 1
follow the onscreen -> the : 1
the onscreen the -> file : 1
onscreen the file -> is : 1
the file is -> please : 1
file is please -> make : 1
is please make -> sure : 1
please make sure -> that : 1
make sure that -> you : 1
make sure that -> all : 1
make sure that -> the : 2
make sure that -> we : 1
sure that you -> unzip : 1
that you unzip -> or : 1
you unzip or -> extract : 1
unzip or extract -> the : 1
or extract the -> folder : 1
extract the folder -> using : 1
the folder using -> the : 1
folder using the -> latest : 1
using the latest -> version : 1
the latest version -> for : 1
latest version for -> for : 1
version for for -> for : 1
for for for -> code : 1
for for code -> bundle : 1
for code bundle -> for : 1
code bundle for -> the : 1
bundle for the -> book : 1
for the book -> is : 1
the book is -> also : 1
book is also -> hosted : 1
is also hosted -> on : 1
also hosted on -> github : 1
hosted on github -> we : 1
on github we -> also : 1
github we also -> have : 1
we also have -> other : 1
also have other -> code : 1
have other code -> bundles : 1
other code bundles -> from : 1
code bundles from -> our : 1
bundles from our -> rich : 1
from our rich -> catalog : 1
our rich catalog -> of : 1
rich catalog of -> books : 1
catalog of books -> and : 1
of books and -> videos : 1
of books and -> online : 1
books and videos -> available : 1
and videos available -> check : 1
videos available check -> them : 1
available check them -> are : 1
check them are -> a : 1
them are a -> number : 1
are a number -> of : 1
a number of -> text : 1
a number of -> or : 1
a number of -> steps : 1
a number of -> they : 1
a number of -> just : 1
number of text -> conventions : 1
of text conventions -> used : 1
text conventions used -> throughout : 1
conventions used throughout -> this : 1
used throughout this -> words : 1
throughout this words -> in : 1
this words in -> folder : 1
words in folder -> file : 1
in folder file -> dummy : 1
folder file dummy -> and : 1
file dummy and -> user : 1
dummy and user -> is : 1
and user is -> an : 1
user is an -> keyword : 1
is an keyword -> was : 1
an keyword was -> introduced : 1
keyword was introduced -> in : 1
was introduced in -> block : 1
introduced in block -> of : 1
in block of -> code : 1
block of code -> is : 1
of code is -> set : 1
of code is -> heavily : 1
of code is -> executed : 1
code is set -> as : 1
is set as -> int : 1
set as int -> performance : 1
as int performance -> we : 1
int performance we -> wish : 1
performance we wish -> to : 1
we wish to -> draw : 1
wish to draw -> your : 1
to draw your -> attention : 1
draw your attention -> to : 1
your attention to -> a : 1
attention to a -> particular : 1
to a particular -> part : 1
a particular part -> of : 1
particular part of -> a : 1
part of a -> code : 1
of a code -> the : 1
of a code -> but : 1
a code the -> relevant : 1
a code the -> larger : 1
code the relevant -> lines : 1
the relevant lines -> or : 1
relevant lines or -> items : 1
lines or items -> are : 1
or items are -> set : 1
items are set -> in : 1
are set in -> int : 1
set in int -> performance : 1
in int performance -> input : 1
int performance input -> or : 1
performance input or -> output : 1
input or output -> is : 1
or output is -> written : 1
output is written -> as : 1
is written as -> high : 1
written as high -> performance : 1
as high performance -> indicates : 1
high performance indicates -> a : 1
performance indicates a -> new : 1
indicates a new -> an : 1
a new an -> important : 1
new an important -> or : 1
an important or -> that : 1
important or that -> you : 1
or that you -> see : 1
that you see -> for : 1
you see for -> words : 1
see for words -> in : 1
for words in -> menus : 1
words in menus -> or : 1
in menus or -> dialog : 1
menus or dialog -> boxes : 1
or dialog boxes -> appear : 1
dialog boxes appear -> in : 1
boxes appear in -> the : 1
appear in the -> text : 1
appear in the -> source : 1
in the text -> like : 1
the text like -> here : 1
text like here -> is : 1
like here is -> an : 1
here is an -> from : 1
here is an -> example : 2
is an from -> the : 1
is an from -> a : 1
an from the -> or : 1
from the or -> important : 1
the or important -> notes : 1
or important notes -> appear : 1
important notes appear -> like : 1
notes appear like -> and : 1
appear like and -> tricks : 1
like and tricks -> appear : 1
and tricks appear -> like : 1
tricks appear like -> in : 1
appear like in -> from : 1
like in from -> our : 1
in from our -> readers : 1
from our readers -> is : 1
our readers is -> always : 1
readers is always -> email : 1
is always email -> and : 1
always email and -> mention : 1
email and mention -> the : 1
and mention the -> book : 1
mention the book -> title : 1
the book title -> in : 1
book title in -> the : 1
title in the -> subject : 1
in the subject -> of : 1
the subject of -> your : 1
the subject of -> cache : 1
the subject of -> freeing : 1
subject of your -> if : 1
of your if -> you : 1
your if you -> have : 1
you have questions -> about : 1
have questions about -> any : 1
questions about any -> aspect : 1
about any aspect -> of : 1
any aspect of -> this : 1
aspect of this -> please : 1
of this please -> email : 1
this please email -> us : 1
please email us -> at : 1
email us at -> although : 1
us at although -> we : 1
at although we -> have : 1
although we have -> taken : 1
we have taken -> every : 1
have taken every -> care : 1
taken every care -> to : 1
every care to -> ensure : 1
care to ensure -> the : 1
accuracy of our -> mistakes : 1
of our mistakes -> do : 1
our mistakes do -> if : 1
mistakes do if -> you : 1
do if you -> have : 1
you have found -> a : 1
have found a -> mistake : 1
found a mistake -> in : 1
a mistake in -> this : 1
mistake in this -> we : 1
in this we -> would : 2
in this we -> have : 1
in this we -> utilize : 1
in this we -> are : 4
in this we -> will : 6
in this we -> mean : 1
in this we -> can : 2
in this we -> use : 1
this we would -> be : 1
this we would -> also : 1
we would be -> grateful : 2
would be grateful -> if : 2
be grateful if -> you : 2
grateful if you -> would : 2
if you would -> report : 1
if you would -> provide : 1
you would report -> this : 1
would report this -> to : 1
report this to -> please : 1
this to please -> visit : 1
to please visit -> selecting : 1
please visit selecting -> your : 1
visit selecting your -> clicking : 1
selecting your clicking -> on : 1
your clicking on -> the : 1
clicking on the -> errata : 1
on the errata -> submission : 1
the errata submission -> form : 1
errata submission form -> and : 1
submission form and -> entering : 1
form and entering -> the : 1
and entering the -> if : 1
entering the if -> you : 1
the if you -> come : 1
if you come -> across : 1
you come across -> any : 1
come across any -> illegal : 1
across any illegal -> copies : 1
any illegal copies -> of : 1
illegal copies of -> our : 1
copies of our -> works : 1
of our works -> in : 1
our works in -> any : 1
works in any -> form : 1
any form on -> the : 1
form on the -> we : 1
on the we -> would : 1
on the we -> have : 1
the we would -> be : 1
the we would -> like : 2
you would provide -> us : 1
would provide us -> with : 1
provide us with -> the : 1
us with the -> location : 1
us with the -> possibility : 1
with the location -> address : 1
the location address -> or : 1
location address or -> website : 1
address or website -> please : 1
or website please -> contact : 1
website please contact -> us : 1
please contact us -> at : 1
contact us at -> with : 1
us at with -> a : 1
at with a -> link : 1
with a link -> to : 1
a link to -> the : 1
link to the -> you : 1
link to the -> next : 1
to the you -> are : 1
to the you -> can : 1
the you are -> interested : 1
you are interested -> in : 3
are interested in -> becoming : 1
are interested in -> either : 1
are interested in -> the : 1
are interested in -> average : 1
are interested in -> you : 1
becoming an if -> there : 1
an if there -> is : 1
if there is -> a : 2
if there is -> room : 1
if there is -> no : 1
is a topic -> that : 1
a topic that -> you : 1
topic that you -> have : 1
that you have -> expertise : 1
that you have -> a : 1
that you have -> chosen : 1
that you have -> to : 2
that you have -> encountered : 1
you have expertise -> in : 1
have expertise in -> and : 1
expertise in and -> you : 1
in and you -> are : 1
in and you -> will : 1
and you are -> interested : 1
interested in either -> writing : 1
in either writing -> or : 1
either writing or -> contributing : 1
writing or contributing -> to : 1
or contributing to -> a : 1
contributing to a -> please : 1
to a please -> visit : 1
a please visit -> leave : 1
please visit leave -> a : 1
visit leave a -> once : 1
leave a once -> you : 1
a once you -> have : 1
once you have -> read : 1
you have read -> and : 1
have read and -> used : 1
read and used -> this : 1
and used this -> why : 1
used this why -> not : 1
this why not -> leave : 1
why not leave -> a : 1
not leave a -> review : 1
leave a review -> on : 1
a review on -> the : 2
review on the -> site : 2
on the site -> that : 2
the site that -> you : 2
site that you -> purchased : 1
site that you -> bought : 1
that you purchased -> it : 1
you purchased it -> potential : 1
purchased it potential -> readers : 1
it potential readers -> can : 1
potential readers can -> then : 1
potential readers can -> see : 1
readers can then -> see : 1
can then see -> and : 1
then see and -> use : 1
see and use -> your : 2
and use your -> unbiased : 2
use your unbiased -> opinion : 2
your unbiased opinion -> to : 2
unbiased opinion to -> make : 2
opinion to make -> purchase : 1
opinion to make -> purchasing : 1
to make purchase -> we : 1
make purchase we -> at : 1
purchase we at -> packt : 1
we at packt -> can : 1
at packt can -> understand : 1
packt can understand -> what : 1
can understand what -> you : 1
can understand what -> our : 1
understand what you -> think : 1
what you think -> about : 1
you think about -> our : 1
think about our -> and : 2
about our and -> our : 2
our and our -> authors : 2
and our authors -> can : 2
our authors can -> see : 2
authors can see -> your : 2
can see your -> feedback : 2
see your feedback -> on : 2
your feedback on -> their : 1
your feedback on -> the : 1
feedback on their -> thank : 1
on their thank -> more : 1
their thank more -> information : 1
thank more information -> about : 1
more information about -> please : 1
more information about -> alignment : 1
information about please -> brief : 1
about please brief -> introduction : 1
please brief introduction -> to : 1
introduction to chapter -> will : 1
to chapter will -> introduce : 1
chapter will introduce -> some : 1
will introduce some -> of : 1
introduce some of -> the : 1
some of the -> features : 2
some of the -> reasons : 1
some of the -> noticeable : 1
some of the -> most : 1
some of the -> terms : 1
some of the -> properties : 1
some of the -> algorithms : 1
some of the -> pages : 1
some of the -> unique : 1
some of the -> functions : 1
some of the -> circumstances : 1
some of the -> requirements : 1
of the features -> of : 1
of the features -> offered : 1
the features of -> that : 1
features of that -> we : 1
of that we -> think : 1
of that we -> are : 2
of that we -> have : 2
that we think -> are : 2
we think are -> important : 1
we think are -> easily : 1
think are important -> for : 1
are important for -> writing : 1
are important for -> the : 1
are important for -> lowering : 1
important for writing -> robust : 1
for writing robust -> and : 1
writing robust and -> high : 1
robust and high -> performance : 1
and high performance -> we : 1
high performance we -> will : 1
performance we will -> also : 1
we will also -> discuss : 1
we will also -> see : 1
will also discuss -> advantages : 1
also discuss advantages -> and : 1
discuss advantages and -> disadvantages : 1
advantages and disadvantages -> of : 2
and disadvantages of -> over : 1
and disadvantages of -> compared : 1
disadvantages of over -> languages : 1
of over languages -> based : 1
over languages based -> upon : 1
languages based upon -> a : 1
based upon a -> garbage : 2
upon a garbage -> we : 1
upon a garbage -> such : 1
a garbage we -> will : 1
garbage we will -> look : 1
we will look -> at : 4
we will look -> into : 3
will look at -> some : 1
will look at -> methods : 1
will look at -> these : 1
will look at -> ways : 1
look at some -> examples : 1
look at some -> modern : 1
at some examples -> of : 1
some examples of -> how : 1
some examples of -> type : 1
some examples of -> independent : 1
examples of how -> to : 2
examples of how -> the : 1
of how to -> handle : 1
of how to -> access : 1
of how to -> move : 1
of how to -> make : 1
of how to -> parallelize : 1
how to handle -> exceptions : 1
how to handle -> situations : 1
to handle exceptions -> and : 1
handle exceptions and -> begin : 1
exceptions and begin -> this : 1
and begin this -> book : 1
begin this book -> by : 1
book by exploring -> some : 1
by exploring some -> of : 1
exploring some of -> the : 1
of the reasons -> for : 1
of the reasons -> why : 2
the reasons for -> using : 1
the reasons for -> why : 1
reasons for using -> in : 1
for using in -> is : 1
using in is -> a : 1
in is a -> highly : 1
in is a -> neat : 1
in is a -> container : 1
is a highly -> portable : 1
a highly portable -> language : 1
a highly portable -> and : 1
highly portable language -> which : 1
portable language which -> offers : 1
language which offers -> we : 1
which offers we -> believe : 1
offers we believe -> that : 1
we believe that -> provides : 1
we believe that -> the : 1
believe that provides -> programmers : 1
that provides programmers -> with : 1
provides programmers with -> the : 1
programmers with the -> ability : 1
with the ability -> to : 4
with the ability -> of : 1
to write and -> manage : 1
to write and -> libraries : 1
write and manage -> and : 1
and manage and -> robust : 1
manage and robust -> code : 1
robust code explore -> the : 1
code explore the -> meaning : 1
explore the meaning -> of : 1
the meaning of -> each : 1
meaning of each -> of : 1
of each of -> these : 1
each of these -> code : 1
of these code -> bases : 1
these code bases -> the : 1
code bases the -> more : 1
bases the more -> developers : 1
the more developers -> working : 1
more developers working -> on : 1
developers working on -> a : 1
working on a -> code : 1
on a code -> the : 1
code the larger -> the : 1
the larger the -> code : 1
the larger the -> more : 1
larger the code -> base : 1
code base we -> need : 1
code base we -> will : 1
base we need -> abstractions : 1
we need abstractions -> such : 1
need abstractions such -> as : 1
abstractions such as -> data : 1
such as data -> layers : 1
as data layers -> and : 1
data layers and -> so : 1
layers and so -> on : 1
and so on -> in : 1
and so on -> for : 1
and so on -> can : 1
so on in -> order : 1
on in order -> to : 1
in order to -> manage : 1
in order to -> determine : 3
in order to -> keep : 1
in order to -> convert : 2
in order to -> use : 4
in order to -> avoid : 4
in order to -> understand : 2
in order to -> find : 3
in order to -> get : 2
in order to -> decrease : 1
in order to -> be : 3
in order to -> gather : 1
in order to -> guarantee : 2
in order to -> minimize : 1
in order to -> evaluate : 2
in order to -> speed : 1
in order to -> move : 1
in order to -> compare : 2
in order to -> benefit : 1
in order to -> run : 1
in order to -> load : 1
in order to -> destruct : 1
in order to -> fulfill : 1
in order to -> retrieve : 1
in order to -> create : 1
in order to -> demonstrate : 1
in order to -> print : 1
in order to -> enable : 1
in order to -> postpone : 1
in order to -> or : 1
in order to -> prevent : 2
in order to -> make : 3
in order to -> invoke : 1
in order to -> match : 1
in order to -> protect : 1
in order to -> access : 1
in order to -> implement : 1
in order to -> see : 2
in order to -> take : 1
order to manage -> the : 1
to manage the -> complexity : 1
to manage the -> data : 1
manage the complexity -> of : 1
complexity of a -> code : 1
a code but -> constantly : 1
code but constantly -> adding : 1
but constantly adding -> abstractions : 1
constantly adding abstractions -> and : 1
adding abstractions and -> new : 1
abstractions and new -> levels : 1
and new levels -> of : 1
new levels of -> indirection : 1
levels of indirection -> comes : 1
of indirection comes -> at : 1
indirection comes at -> a : 1
comes at a -> price : 1
comes at a -> very : 1
at a price -> this : 1
a price this -> is : 1
price this is -> where : 1
this is where -> abstractions : 1
this is where -> the : 1
is where abstractions -> plays : 1
where abstractions plays -> its : 1
abstractions plays its -> a : 1
plays its a -> lot : 1
its a lot -> of : 1
lot of the -> abstractions : 1
lot of the -> other : 1
of the abstractions -> offered : 1
the abstractions offered -> by : 1
abstractions offered by -> comes : 1
offered by comes -> at : 1
by comes at -> a : 1
at a very -> low : 1
a very low -> at : 1
very low at -> a : 1
low at a -> offers : 1
at a offers -> efficient : 1
a offers efficient -> alternatives : 1
offers efficient alternatives -> at : 1
efficient alternatives at -> hot : 1
alternatives at hot -> spots : 1
at hot spots -> where : 1
hot spots where -> performance : 1
spots where performance -> really : 1
where performance really -> is : 1
performance really is -> a : 1
really is a -> you : 1
is a you -> are : 1
is a you -> should : 1
a you are -> free : 1
you are free -> to : 1
are free to -> talk : 1
are free to -> reorder : 1
free to talk -> about : 1
to talk about -> memory : 1
to talk about -> how : 1
talk about memory -> addresses : 1
about memory addresses -> and : 1
memory addresses and -> other : 1
addresses and other -> computer : 1
and other computer -> related : 1
other computer related -> terms : 1
computer related terms -> when : 1
related terms when -> in : 1
terms when in -> a : 1
when in a -> software : 1
in a software -> project : 1
a software project -> it : 1
software project it -> is : 1
project it is -> desirable : 1
it is desirable -> to : 1
is desirable to -> express : 1
desirable to express -> code : 1
to express code -> in : 1
express code in -> terms : 1
code in terms -> that : 1
in terms that -> deals : 1
in terms that -> are : 1
terms that deals -> with : 1
that deals with -> whatever : 1
deals with whatever -> the : 1
with whatever the -> application : 1
whatever the application -> is : 1
the application is -> and : 1
the application is -> whereas : 1
the application is -> performing : 1
application is and -> let : 1
is and let -> the : 1
and let the -> libraries : 1
let the libraries -> handle : 1
let the libraries -> hide : 1
the libraries handle -> the : 1
libraries handle the -> computer : 1
handle the computer -> related : 1
the computer related -> the : 1
computer related the -> source : 1
related the source -> code : 1
source code of -> a : 1
source code of -> the : 1
code of a -> graphics : 1
of a graphics -> application : 1
a graphics application -> may : 1
graphics application may -> deal : 1
application may deal -> with : 1
may deal with -> and : 2
deal with and -> whereas : 1
deal with and -> terms : 1
with and whereas -> a : 1
and whereas a -> game : 1
whereas a game -> may : 1
a game may -> deal : 1
game may deal -> with : 1
with and terms -> such : 1
and terms such -> as : 1
terms such as -> memory : 1
such as memory -> addresses : 1
such as memory -> as : 1
as memory addresses -> can : 1
memory addresses can -> stay : 1
addresses can stay -> hidden : 1
can stay hidden -> in : 1
stay hidden in -> library : 1
hidden in library -> code : 1
in library code -> where : 1
library code where -> performance : 1
code where performance -> is : 1
where performance is -> library : 1
where performance is -> not : 1
where performance is -> an : 1
performance is library -> we : 1
is library we -> refer : 1
library we refer -> to : 1
we refer to -> code : 1
we refer to -> programming : 1
we refer to -> its : 1
refer to code -> whose : 1
refer to code -> generated : 1
to code whose -> concepts : 1
code whose concepts -> are : 1
whose concepts are -> not : 1
concepts are not -> strictly : 1
are not strictly -> related : 1
not strictly related -> to : 1
strictly related to -> the : 1
related to the -> the : 1
to the the -> line : 1
to the the -> sequence : 1
to the the -> would : 1
to the the -> the : 1
to the the -> look : 1
to the the -> compare : 1
to the the -> control : 1
to the the -> arguments : 1
the the line -> between : 1
the line between -> library : 1
line between library -> code : 1
between library code -> and : 1
library code and -> application : 1
code and application -> code : 1
and application code -> can : 1
application code can -> be : 1
code can be -> blurry : 1
code can be -> very : 1
code can be -> implemented : 1
can be blurry -> and : 1
be blurry and -> libraries : 1
blurry and libraries -> are : 1
and libraries are -> often : 1
libraries are often -> built : 1
are often built -> upon : 1
often built upon -> other : 1
built upon other -> an : 1
upon other an -> example : 1
other an example -> could : 1
an example could -> be : 2
example could be -> the : 1
example could be -> rewritten : 1
example could be -> objects : 1
could be the -> container : 1
be the container -> algorithms : 1
be the container -> of : 1
the container algorithms -> provided : 1
container algorithms provided -> in : 1
algorithms provided in -> the : 1
provided in the -> template : 1
in the template -> library : 1
in the template -> specifies : 1
the template library -> of : 1
template library of -> or : 1
library of or -> a : 1
of or a -> math : 1
or a math -> languages : 1
a math languages -> and : 1
math languages and -> machine : 1
machine code order -> to : 1
code order to -> relieve : 1
order to relieve -> programmers : 1
to relieve programmers -> from : 1
relieve programmers from -> dealing : 1
programmers from dealing -> with : 1
from dealing with -> modern : 1
from dealing with -> the : 1
dealing with modern -> programming : 1
with modern programming -> languages : 1
modern programming languages -> use : 1
programming languages use -> abstractions : 1
languages use abstractions -> so : 1
use abstractions so -> that : 1
abstractions so that -> a : 1
so that a -> list : 1
so that a -> reference : 1
that a list -> of : 1
a list of -> for : 1
a list of -> strings : 2
a list of -> addresses : 1
a list of -> types : 1
list of for -> can : 1
of for can -> be : 1
for can be -> handled : 1
can be handled -> and : 1
be handled and -> thought : 1
handled and thought -> of : 1
and thought of -> as : 1
thought of as -> a : 4
thought of as -> algorithms : 1
of as a -> list : 1
of as a -> short : 1
of as a -> pointer : 1
of as a -> simplistic : 1
of as a -> global : 1
as a list -> of : 1
list of strings -> rather : 1
list of strings -> like : 1
of strings rather -> than : 1
strings rather than -> a : 1
rather than a -> list : 1
rather than a -> single : 1
rather than a -> three : 1
than a list -> of : 1
list of addresses -> that : 1
of addresses that -> we : 1
addresses that we -> may : 1
that we may -> easily : 1
we may easily -> lose : 1
may easily lose -> track : 1
easily lose track -> of : 1
lose track of -> if : 1
track of if -> we : 1
of if we -> make : 1
if we make -> the : 1
we make the -> slightest : 1
we make the -> member : 1
make the slightest -> not : 1
the slightest not -> only : 1
slightest not only -> do : 1
not only do -> the : 1
only do the -> abstractions : 1
do the abstractions -> relieve : 1
the abstractions relieve -> the : 1
abstractions relieve the -> programmers : 1
relieve the programmers -> from : 1
the programmers from -> they : 1
programmers from they -> also : 1
from they also -> make : 1
they also make -> the : 1
also make the -> code : 2
make the code -> more : 3
make the code -> harder : 1
make the code -> in : 1
make the code -> you : 1
make the code -> a : 1
the code more -> expressive : 1
the code more -> in : 1
the code more -> another : 1
code more expressive -> by : 1
more expressive by -> using : 1
expressive by using -> concepts : 1
by using concepts -> from : 1
using concepts from -> the : 1
concepts from the -> domain : 1
from the domain -> of : 1
the domain of -> the : 1
domain of the -> in : 1
of the in -> other : 1
of the in -> the : 1
of the in -> computer : 1
of the in -> some : 1
of the in -> this : 1
the in other -> the : 1
in other the -> code : 1
in other the -> captured : 1
in other the -> following : 2
in other the -> compiler : 1
in other the -> range : 1
in other the -> ref : 1
other the code -> is : 1
the code is -> expressed : 1
the code is -> running : 1
the code is -> responsible : 1
the code is -> only : 1
code is expressed -> in : 1
is expressed in -> terms : 1
expressed in terms -> that : 1
terms that are -> closer : 1
terms that are -> sometimes : 1
that are closer -> to : 1
are closer to -> a : 1
closer to a -> spoken : 1
to a spoken -> language : 1
a spoken language -> than : 1
spoken language than -> if : 1
language than if -> expressed : 1
than if expressed -> with : 1
if expressed with -> abstract : 1
expressed with abstract -> programming : 1
with abstract programming -> and : 1
abstract programming and -> c : 1
programming and c -> are : 1
and c are -> nowadays : 1
c are nowadays -> two : 1
are nowadays two -> completely : 1
nowadays two completely -> different : 1
two completely different -> is : 1
two completely different -> octopus : 1
completely different is -> highly : 1
different is highly -> compatible : 1
is highly compatible -> with : 1
highly compatible with -> c : 2
compatible with c -> and : 2
with c and -> has : 1
with c and -> very : 1
c and has -> inherited : 1
and has inherited -> a : 1
has inherited a -> lot : 1
inherited a lot -> of : 1
lot of its -> syntax : 1
of its syntax -> and : 1
its syntax and -> idioms : 1
syntax and idioms -> from : 1
and idioms from -> to : 1
idioms from to -> give : 1
from to give -> you : 1
to give you -> of : 1
to give you -> an : 2
give you of -> abstractions : 1
you of abstractions -> we : 1
of abstractions we -> will : 1
abstractions we will -> here : 1
we will here -> show : 1
we will here -> present : 1
will here show -> how : 1
here show how -> a : 1
show how a -> problem : 1
how a problem -> can : 1
a problem can -> be : 1
problem can be -> solved : 1
can be solved -> in : 1
be solved in -> both : 1
solved in both -> c : 1
in both c -> and : 1
both c and -> a : 1
c and a -> look : 1
and a look -> at : 1
at the following -> code : 3
at the following -> if : 1
at the following -> where : 1
at the following -> function : 1
the following code -> which : 1
the following code -> block : 1
the following code -> the : 1
the following code -> reads : 1
the following code -> two : 1
the following code -> first : 1
the following code -> snippet : 1
the following code -> where : 2
the following code -> memory : 1
the following code -> shows : 2
the following code -> will : 1
the following code -> is : 2
the following code -> does : 1
the following code -> might : 1
following code which -> correspond : 1
code which correspond -> to : 1
which correspond to -> the : 1
correspond to the -> many : 1
to the many -> copies : 1
to the many -> we : 1
the many copies -> of : 1
many copies of -> is : 1
copies of is -> in : 1
of is in -> the : 1
is in the -> list : 1
is in the -> case : 1
is in the -> joinable : 1
in the list -> of : 2
the list of -> we : 2
the list of -> members : 1
list of we -> begin : 1
list of we -> were : 1
of we begin -> with : 1
we begin with -> the : 1
begin with the -> c : 1
with the c -> c : 1
the c c -> const : 1
c c const -> const : 1
c const const -> hamlet : 1
const const hamlet -> int : 1
const hamlet int -> n : 1
hamlet int n -> for : 1
int n for -> b : 1
n for b -> b : 1
for b b -> if : 1
b b if -> return : 1
b if return -> equivalent : 1
if return equivalent -> version : 1
return equivalent version -> using : 1
equivalent version using -> would : 1
version using would -> look : 1
using would look -> something : 1
would look something -> like : 5
look something like -> return : 1
look something like -> the : 3
look something like -> cdpaligncenter : 2
look something like -> as : 1
something like return -> the : 2
like return the -> version : 1
like return the -> generated : 1
return the version -> is : 1
the version is -> still : 1
version is still -> more : 1
is still more -> of : 1
still more of -> a : 1
more of a -> robot : 1
of a robot -> language : 1
a robot language -> than : 1
robot language than -> a : 1
language than a -> human : 1
than a human -> a : 1
a human a -> lot : 1
human a lot -> of : 1
lot of programming -> lingo : 1
of programming lingo -> is : 1
programming lingo is -> are : 1
lingo is are -> some : 1
is are some -> of : 1
are some of -> the : 5
of the noticeable -> differences : 1
the noticeable differences -> between : 1
noticeable differences between -> the : 1
differences between the -> preceding : 1
between the preceding -> two : 1
the preceding two -> code : 1
preceding two code -> pointers : 1
two code pointers -> to : 1
code pointers to -> raw : 1
pointers to raw -> memory : 1
to raw memory -> addresses : 1
raw memory addresses -> are : 1
memory addresses are -> not : 2
addresses are not -> visible : 1
addresses are not -> the : 1
are not visible -> at : 1
not visible at -> an : 1
visible at an -> abstraction : 1
at an abstraction -> is : 1
an abstraction is -> an : 1
abstraction is an -> abstraction : 1
is an abstraction -> of : 1
an abstraction of -> both : 1
abstraction of both -> is : 1
of both is -> other : 1
both is other -> an : 1
is other an -> abstraction : 1
other an abstraction -> both : 1
an abstraction both -> versions : 1
abstraction both versions -> of : 1
both versions of -> translate : 1
versions of translate -> to : 1
of translate to -> roughly : 1
translate to roughly -> the : 1
to roughly the -> same : 1
roughly the same -> machine : 1
the same machine -> but : 1
same machine but -> the : 1
machine but the -> language : 1
but the language -> features : 1
the language features -> of : 1
language features of -> makes : 1
features of makes -> it : 1
of makes it -> possible : 1
makes it possible -> to : 8
makes it possible -> for : 4
it possible to -> let : 1
it possible to -> invoke : 1
it possible to -> access : 1
it possible to -> iterate : 2
it possible to -> pass : 1
it possible to -> find : 1
it possible to -> create : 1
it possible to -> execute : 1
it possible to -> use : 1
it possible to -> give : 1
it possible to -> seamlessly : 1
possible to let -> the : 1
to let the -> libraries : 1
to let the -> range : 1
to let the -> other : 1
the libraries hide -> computer : 1
libraries hide computer -> related : 1
hide computer related -> terminology : 1
computer related terminology -> such : 1
related terminology such -> as : 1
terminology such as -> many : 1
such as many -> of : 1
as many of -> the : 1
many of the -> modern : 1
many of the -> other : 1
of the modern -> language : 1
the modern language -> features : 1
modern language features -> can : 1
language features can -> be : 1
features can be -> seen : 1
can be seen -> as : 2
can be seen -> in : 3
be seen as -> abstractions : 1
be seen as -> reorderings : 1
seen as abstractions -> of : 1
as abstractions of -> basic : 1
abstractions of basic -> c : 1
of basic c -> functionality : 1
basic c functionality -> on : 1
c functionality on -> top : 1
functionality on top -> of : 1
top of basic -> classes : 1
of basic classes -> are : 1
basic classes are -> abstractions : 1
classes are abstractions -> of : 1
are abstractions of -> and : 1
are abstractions of -> former : 1
are abstractions of -> are : 1
are abstractions of -> generating : 1
abstractions of and -> regular : 1
of and regular -> polymorphism : 1
and regular polymorphism -> is : 1
regular polymorphism is -> the : 1
polymorphism is the -> abstraction : 1
is the abstraction -> of : 1
the abstraction of -> function : 1
abstraction of function -> top : 1
of function top -> of : 1
function top of -> some : 1
top of some -> recent : 1
of some recent -> features : 1
some recent features -> are : 1
recent features are -> abstractions : 1
features are abstractions -> of : 1
abstractions of former -> lambda : 1
of former lambda -> functions : 1
former lambda functions -> are : 1
lambda functions are -> abstractions : 1
lambda functions are -> plain : 1
functions are abstractions -> of : 1
abstractions of are -> abstractions : 1
of are abstractions -> of : 1
abstractions of generating -> in : 1
of generating in -> other : 1
generating in other -> programming : 1
in other programming -> languages : 1
other programming languages -> are : 1
other programming languages -> be : 1
other programming languages -> is : 1
programming languages are -> based : 1
languages are based -> on : 1
are based on -> which : 1
are based on -> these : 1
are based on -> hash : 1
based on which -> are : 1
on which are -> transformed : 1
which are transformed -> into : 1
are transformed into -> machine : 1
transformed into machine -> code : 1
into machine code -> to : 1
machine code to -> be : 1
code to be -> executed : 1
to be executed -> by : 1
to be executed -> on : 3
to be executed -> in : 2
be executed by -> the : 1
executed by the -> has : 1
by the has -> evolved : 1
the has evolved -> into : 1
has evolved into -> a : 1
evolved into a -> highly : 1
into a highly -> expressive : 1
a highly expressive -> language : 1
highly expressive language -> just : 1
expressive language just -> like : 1
language just like -> many : 1
just like many -> of : 1
like many of -> the : 1
of the other -> popular : 1
of the other -> processes : 1
the other popular -> programming : 1
other popular programming -> languages : 1
popular programming languages -> of : 1
programming languages of -> what : 1
languages of what -> distinguishes : 1
of what distinguishes -> from : 1
what distinguishes from -> most : 1
distinguishes from most -> other : 1
from most other -> languages : 1
most other languages -> is : 2
other languages is -> while : 1
other languages is -> in : 1
other languages is -> the : 1
other languages is -> a : 1
languages is while -> the : 1
is while the -> other : 1
while the other -> languages : 1
the other languages -> have : 1
other languages have -> implemented : 1
languages have implemented -> these : 1
have implemented these -> abstractions : 1
implemented these abstractions -> at : 1
these abstractions at -> the : 1
abstractions at the -> cost : 1
at the cost -> of : 3
the cost of -> runtime : 1
the cost of -> performance : 1
the cost of -> do : 1
cost of runtime -> has : 1
of runtime has -> always : 1
runtime has always -> strived : 1
has always strived -> to : 1
always strived to -> implement : 1
strived to implement -> its : 1
to implement its -> abstractions : 1
implement its abstractions -> at : 1
its abstractions at -> zero : 1
abstractions at zero -> cost : 1
at zero cost -> at : 1
zero cost at -> this : 1
cost at this -> mean : 1
at this mean -> that : 1
this mean that -> an : 1
mean that an -> application : 1
that an application -> written : 1
an application written -> in : 1
application written in -> is : 1
written in is -> by : 1
in is by -> default : 1
is by default -> faster : 1
is by default -> on : 1
is by default -> shared : 1
by default faster -> than : 1
default faster than -> the : 1
faster than the -> equivalent : 1
faster than the -> invoked : 1
faster than the -> sequential : 1
than the equivalent -> it : 1
the equivalent it -> means : 1
equivalent it means -> that : 1
it means that -> by : 1
it means that -> we : 3
it means that -> it : 1
it means that -> the : 2
it means that -> your : 1
it means that -> you : 1
means that by -> using : 1
that by using -> have : 1
by using have -> explicit : 1
using have explicit -> control : 1
have explicit control -> of : 1
explicit control of -> the : 1
control of the -> emitted : 1
control of the -> scheduling : 1
of the emitted -> machine : 1
the emitted machine -> code : 1
emitted machine code -> instructions : 1
machine code instructions -> and : 1
code instructions and -> memory : 1
instructions and memory -> footprint : 1
and memory footprint -> if : 1
memory footprint if -> be : 1
footprint if be -> optimal : 1
if be optimal -> performance : 1
be optimal performance -> is : 1
optimal performance is -> very : 1
performance is very -> rarely : 1
is very rarely -> required : 1
very rarely required -> today : 1
rarely required today -> and : 1
required today and -> compromising : 1
today and compromising -> performance : 1
and compromising performance -> for : 1
compromising performance for -> lower : 1
performance for lower -> compilation : 1
for lower compilation -> garbage : 1
lower compilation garbage -> or : 1
compilation garbage or -> like : 1
garbage or like -> other : 1
or like other -> languages : 1
like other languages -> is : 1
languages is in -> many : 1
is in many -> cases : 1
in many cases -> more : 1
in many cases -> and : 1
in many cases -> it : 1
in many cases -> have : 1
many cases more -> has : 1
cases more has -> been : 1
more has been -> a : 1
been a popular -> and : 1
a popular and -> comprehensive : 1
popular and comprehensive -> language : 1
and comprehensive language -> for : 1
comprehensive language for -> a : 1
language for a -> long : 1
for a long -> highly : 1
for a long -> time : 2
for a long -> and : 1
a long highly -> compatible : 1
long highly compatible -> with : 1
c and very -> little : 1
and very little -> has : 1
very little has -> been : 1
little has been -> deprecated : 1
has been deprecated -> in : 1
been deprecated in -> the : 1
deprecated in the -> for : 1
in the for -> better : 1
the for better -> or : 1
for better or -> the : 1
better or the -> history : 1
or the history -> and : 1
the history and -> design : 1
history and design -> of : 1
and design of -> has : 1
design of has -> made : 1
of has made -> it : 1
has made it -> to : 1
made it to -> a : 1
it to a -> highly : 1
it to a -> a : 1
it to a -> by : 1
it to a -> shared : 1
it to a -> to : 1
to a highly -> portable : 1
highly portable and -> the : 1
portable and the -> evolution : 1
and the evolution -> of : 1
the evolution of -> modern : 1
the evolution of -> computer : 1
evolution of modern -> has : 1
of modern has -> ensured : 1
modern has ensured -> that : 1
has ensured that -> it : 1
ensured that it -> will : 1
that it will -> stay : 1
that it will -> run : 1
that it will -> never : 1
that it will -> be : 1
it will stay -> that : 1
will stay that -> way : 1
stay that way -> for : 1
that way for -> a : 1
way for a -> long : 1
a long time -> to : 1
a long time -> in : 1
long time to -> is : 1
time to is -> a : 1
to is a -> living : 1
is a living -> language : 1
a living language -> and : 1
living language and -> compiler : 1
language and compiler -> vendors : 1
and compiler vendors -> are : 1
compiler vendors are -> currently : 1
vendors are currently -> doing : 1
are currently doing -> a : 1
currently doing a -> remarkable : 1
doing a remarkable -> job : 1
a remarkable job -> to : 1
remarkable job to -> implement : 1
job to implement -> new : 1
to implement new -> language : 1
implement new language -> features : 1
new language features -> addition : 1
language features addition -> to : 1
features addition to -> and : 1
addition to and -> offers : 1
to and offers -> a : 1
and offers a -> set : 1
offers a set -> of : 2
a set of -> language : 1
a set of -> extremely : 1
a set of -> data : 1
a set of -> utility : 1
set of language -> features : 1
of language features -> that : 1
language features that -> gives : 1
features that gives -> the : 1
that gives the -> programmer : 1
gives the programmer -> the : 1
the programmer the -> ability : 1
programmer the ability -> to : 1
to write robust -> our : 1
to write robust -> code : 1
to write robust -> that : 1
write robust our -> robustness : 1
robust our robustness -> does : 1
our robustness does -> not : 1
robustness does not -> refer : 1
does not refer -> to : 1
not refer to -> strength : 1
refer to strength -> in : 1
to strength in -> the : 1
strength in the -> programming : 1
in the programming -> language : 1
the programming language -> itself : 1
programming language itself -> possible : 1
language itself possible -> to : 1
itself possible to -> write : 1
possible to write -> robust : 1
write robust code -> in : 1
robust code in -> any : 1
code in any -> strict : 1
in any strict -> ownership : 1
any strict ownership -> of : 1
strict ownership of -> const : 1
ownership of const -> value : 1
of const value -> type : 1
const value type -> and : 1
value type and -> deterministic : 1
type and deterministic -> destruction : 1
and deterministic destruction -> of : 1
deterministic destruction of -> objects : 1
destruction of objects -> are : 1
destruction of objects -> is : 1
of objects are -> some : 1
of objects are -> placed : 1
objects are some -> of : 1
the features offered -> by : 1
features offered by -> that : 1
offered by that -> makes : 1
by that makes -> it : 1
that makes it -> easier : 1
that makes it -> possible : 1
easier to write -> robust : 1
write robust that -> the : 1
robust that the -> ability : 1
that the ability -> to : 1
write and libraries -> that : 1
and libraries that -> are : 1
libraries that are -> easy : 1
that are easy -> to : 1
are easy to -> use : 1
easy to use -> and : 1
use and hard -> to : 1
and hard to -> of : 1
hard to of -> sum : 1
to of sum -> it : 1
of sum it -> of : 1
sum it of -> today : 1
it of today -> provides : 1
to write an -> expressive : 1
to write an -> algorithm : 1
to write an -> allocator : 1
write an expressive -> and : 1
an expressive and -> robust : 1
robust code base -> while : 1
code base while -> still : 1
base while still -> having : 1
platform or of -> the : 1
or of the -> most : 1
of the most -> commonly : 1
of the most -> useful : 1
of the most -> common : 1
of the most -> widely : 1
the most commonly -> used : 3
most commonly used -> languages : 1
most commonly used -> library : 1
most commonly used -> container : 1
commonly used languages -> is : 1
used languages is -> the : 1
languages is the -> only : 1
languages is the -> ability : 1
is the only -> one : 1
is the only -> time : 1
is the only -> state : 1
is the only -> integer : 1
the only one -> that : 1
only one that -> gives : 1
one that gives -> all : 1
that gives all -> of : 1
gives all of -> these : 1
all of these -> aim : 1
all of these -> are : 1
of these aim -> of : 1
these aim of -> this : 1
this book aims -> to : 1
for implementing the -> libraries : 1
implementing the libraries -> in : 1
the libraries in -> modern : 1
how works today -> where : 1
works today where -> features : 1
today where features -> are : 1
looking at knowledge -> of : 1
at knowledge of -> the : 1
the book expects -> you : 1
and computer and -> a : 1
computer and a -> genuine : 1
have a few -> compared : 1
a few compared -> with : 1
few compared with -> other : 1
with other multitude -> of : 1
other multitude of -> application : 1
multitude of application -> and : 1
of application and -> programming : 1
application and programming -> languages : 1
and programming languages -> have : 1
programming languages have -> emerged : 1
languages have emerged -> since : 1
have emerged since -> was : 1
emerged since was -> first : 1
since was first -> is : 1
was first is -> a : 1
first is a -> widely : 1
first is a -> last : 1
is a widely -> used : 1
a widely used -> and : 1
widely used and -> its : 1
used and its -> compilers : 1
and its compilers -> are : 1
its compilers are -> available : 1
compilers are available -> for : 1
are available for -> most : 1
available for most -> the : 1
for most the -> major : 1
most the major -> as : 1
the major as -> of : 1
major as of -> is : 1
as of is -> the : 1
of is the -> web : 1
of is the -> lack : 1
of is the -> complexity : 1
is the web -> where : 1
the web where -> javascript : 1
web where javascript -> and : 1
where javascript and -> its : 1
javascript and its -> related : 1
and its related -> technologies : 1
its related technologies -> are : 1
related technologies are -> the : 1
technologies are the -> the : 1
are the the -> web : 1
the the web -> platform : 1
the web platform -> is : 1
web platform is -> evolving : 1
platform is evolving -> into : 1
is evolving into -> being : 1
evolving into being -> able : 1
into being able -> to : 1
being able to -> execute : 1
being able to -> perform : 1
able to execute -> what : 1
able to execute -> destructor : 1
able to execute -> a : 1
to execute what -> was : 1
execute what was -> previously : 1
what was previously -> only : 1
was previously only -> possible : 1
previously only possible -> in : 1
only possible in -> desktop : 1
possible in desktop -> and : 1
in desktop and -> in : 1
desktop and in -> that : 1
and in that -> context : 1
and in that -> is : 1
in that context -> has : 1
that context has -> found : 1
context has found -> its : 1
has found its -> way : 1
found its way -> into : 1
its way into -> web : 1
way into web -> applications : 1
into web applications -> using : 1
web applications using -> technologies : 1
applications using technologies -> such : 1
using technologies such -> as : 1
technologies such as -> and : 1
as and web -> languages : 1
and web languages -> and : 1
web languages and -> order : 1
languages and order -> to : 1
and order to -> understand : 1
and order to -> have : 1
and order to -> get : 1
order to understand -> how : 1
order to understand -> the : 1
order to understand -> time : 1
to understand how -> achieves : 1
understand how achieves -> its : 1
how achieves its -> performance : 1
achieves its performance -> compared : 1
its performance compared -> to : 1
performance compared to -> other : 1
compared to other -> programming : 1
to other programming -> like : 1
to other programming -> language : 1
other programming like -> to : 1
programming like to -> discuss : 1
like to discuss -> some : 1
to discuss some -> fundamental : 1
discuss some fundamental -> differences : 1
some fundamental differences -> between : 1
fundamental differences between -> and : 1
differences between and -> most : 1
differences between and -> swapping : 1
between and most -> other : 1
and most other -> modern : 1
most other modern -> programming : 1
other modern programming -> this : 1
modern programming this -> section : 1
programming this section -> will : 1
this section will -> focus : 1
this section will -> contain : 1
this section will -> examine : 1
this section will -> also : 1
section will focus -> on : 1
will focus on -> comparing : 1
will focus on -> the : 2
will focus on -> these : 1
focus on comparing -> to : 1
on comparing to -> although : 1
comparing to although -> the : 1
to although the -> comparisons : 1
although the comparisons -> for : 1
the comparisons for -> most : 1
comparisons for most -> parts : 1
for most parts -> also : 1
most parts also -> apply : 1
parts also apply -> to : 1
also apply to -> other : 1
apply to other -> programming : 1
other programming language -> based : 1
programming language based -> upon : 1
language based upon -> a : 1
a garbage such -> as : 1
garbage such as -> and : 1
as and to -> which : 1
as and to -> the : 1
and to which -> is : 1
to which is -> then : 1
which is then -> compiled : 1
which is then -> executed : 1
is then compiled -> to : 2
then compiled to -> machine : 2
compiled to machine -> code : 2
compiled to machine -> we : 1
to machine code -> while : 1
to machine code -> as : 1
machine code while -> the : 1
code while the -> application : 1
while the application -> is : 1
application is whereas -> directly : 1
is whereas directly -> compiles : 1
whereas directly compiles -> the : 1
directly compiles the -> source : 1
compiles the source -> code : 1
source code to -> machine : 1
code to machine -> although : 1
to machine although -> bytecode : 1
machine although bytecode -> and : 1
although bytecode and -> compilers : 1
bytecode and compilers -> may : 1
and compilers may -> theoretically : 1
compilers may theoretically -> be : 1
may theoretically be -> able : 1
theoretically be able -> to : 1
be able to -> achieve : 1
be able to -> execute : 2
be able to -> do : 1
be able to -> scroll : 1
be able to -> step : 1
be able to -> use : 2
be able to -> generate : 2
be able to -> handle : 1
be able to -> access : 1
be able to -> add : 1
able to achieve -> the : 1
to achieve the -> same : 2
achieve the same -> even : 1
achieve the same -> the : 1
the same even -> than : 1
the same even -> would : 1
same even than -> precompiled : 1
even than precompiled -> machine : 1
than precompiled machine -> as : 1
precompiled machine as -> of : 1
machine as of -> they : 1
as of they -> simply : 1
of they simply -> do : 1
they simply do -> to : 1
simply do to -> be : 1
do to be -> fair : 1
to be fair -> perform : 1
be fair perform -> well : 1
fair perform well -> most : 1
perform well most -> java : 1
well most java -> handle : 1
most java handle -> dynamic : 1
java handle dynamic -> memory : 1
handle dynamic memory -> in : 1
dynamic memory in -> a : 1
dynamic memory in -> we : 1
memory in a -> completely : 1
memory in a -> safe : 1
in a completely -> different : 1
a completely different -> manner : 1
a completely different -> the : 1
completely different manner -> from : 1
different manner from -> in : 1
manner from in -> memory : 1
from in memory -> is : 1
in memory is -> automatically : 1
memory is automatically -> deallocated : 1
is automatically deallocated -> by : 1
automatically deallocated by -> a : 1
deallocated by a -> garbage : 1
by a garbage -> whereas : 1
a garbage whereas -> a : 1
garbage whereas a -> program : 1
whereas a program -> handles : 1
a program handles -> memory : 1
program handles memory -> deallocations : 1
handles memory deallocations -> by : 1
memory deallocations by -> the : 1
deallocations by the -> garbage : 1
by the garbage -> collector : 1
the garbage collector -> does : 1
garbage collector does -> prevent : 1
collector does prevent -> memory : 1
does prevent memory -> but : 1
prevent memory but -> at : 1
memory but at -> the : 1
but at the -> cost : 1
cost of performance -> and : 1
of performance and -> java : 1
of performance and -> some : 1
performance and java -> places : 1
and java places -> all : 1
and java places -> the : 1
java places all -> its : 1
places all its -> objects : 1
all its objects -> in : 1
its objects in -> separate : 1
objects in separate -> heap : 1
in separate heap -> whereas : 1
separate heap whereas -> allows : 1
heap whereas allows -> the : 1
whereas allows the -> programmer : 1
allows the programmer -> to : 2
the programmer to -> place : 1
the programmer to -> actually : 1
the programmer to -> make : 1
the programmer to -> resort : 1
the programmer to -> specify : 1
programmer to place -> objects : 1
to place objects -> both : 1
place objects both -> on : 1
objects both on -> the : 1
both on the -> stack : 1
on the stack -> and : 3
on the stack -> to : 1
on the stack -> or : 1
the stack and -> on : 1
the stack and -> the : 3
the stack and -> heap : 1
the stack and -> what : 1
the stack and -> that : 1
the stack and -> have : 1
stack and on -> the : 1
and on the -> in : 1
on the in -> also : 1
on the in -> this : 1
the in also -> possible : 1
in also possible -> to : 1
also possible to -> create : 3
also possible to -> distinguish : 1
also possible to -> end : 1
also possible to -> capture : 1
also possible to -> build : 1
also possible to -> trigger : 1
also possible to -> override : 1
also possible to -> use : 2
possible to create -> multiple : 1
possible to create -> a : 1
possible to create -> an : 1
possible to create -> atomic : 1
to create multiple -> objects : 1
create multiple objects -> in : 1
multiple objects in -> one : 1
objects in one -> single : 1
in one single -> heap : 1
one single heap -> this : 1
single heap this -> can : 1
heap this can -> be : 1
this can be -> a : 1
this can be -> seen : 1
this can be -> hard : 1
this can be -> performed : 1
this can be -> useful : 1
this can be -> done : 1
this can be -> checked : 1
can be a -> huge : 1
can be a -> performance : 1
can be a -> case : 1
can be a -> lot : 1
can be a -> very : 1
can be a -> good : 1
be a huge -> performance : 1
a huge performance -> gain : 1
huge performance gain -> for : 1
performance gain for -> two : 1
gain for two -> objects : 1
for two objects -> can : 1
for two objects -> to : 1
for two objects -> that : 1
two objects can -> be : 1
can be created -> without : 1
can be created -> like : 1
be created without -> always : 1
created without always -> allocating : 1
without always allocating -> dynamic : 1
always allocating dynamic -> and : 1
allocating dynamic and -> multiple : 1
dynamic and multiple -> related : 1
and multiple related -> objects : 1
multiple related objects -> can : 1
related objects can -> be : 1
can be placed -> adjacent : 1
can be placed -> on : 1
be placed adjacent -> to : 1
placed adjacent to -> one : 1
adjacent to one -> another : 1
to one another -> in : 1
one another in -> a : 1
another in a -> look : 1
in a look -> at : 2
look at how -> memory : 1
look at how -> the : 3
look at how -> move : 1
look at how -> we : 2
look at how -> it : 1
look at how -> to : 2
at how memory -> is : 1
how memory is -> allocated : 1
memory is allocated -> following : 1
memory is allocated -> when : 1
is allocated following -> function : 1
allocated following function -> uses : 1
following function uses -> the : 1
function uses the -> stack : 1
uses the stack -> for : 1
the stack for -> both : 1
stack for both -> objects : 1
for both objects -> and : 1
both objects and -> java : 1
objects and java -> places : 1
java places the -> objects : 1
places the objects -> on : 1
the objects on -> the : 1
objects on the -> car : 1
on the car -> int : 1
the car int -> auto : 1
car int auto -> auto : 1
int auto auto -> auto : 1
int auto auto -> is : 1
int auto auto -> lock : 1
auto auto auto -> car : 1
auto auto auto -> buttons : 1
auto auto auto -> return : 1
auto auto auto -> function : 1
auto auto auto -> counter : 1
auto auto auto -> futures : 1
auto auto auto -> fut : 1
auto auto car -> public : 1
auto car public -> private : 1
car public private -> int : 1
public private int -> static : 1
private int static -> void : 1
int static void -> int : 1
static void int -> numdoors : 1
void int numdoors -> car : 1
int numdoors car -> new : 1
numdoors car new -> car : 1
car new car -> new : 1
new car new -> places : 1
car new places -> everything : 1
new places everything -> on : 1
places everything on -> the : 1
everything on the -> places : 1
on the places -> the : 1
the places the -> the : 1
places the the -> take : 1
the the take -> a : 1
the take a -> look : 3
take a look -> at : 11
at the next -> example : 1
the next example -> and : 1
next example and -> see : 1
example and see -> how : 1
and see how -> an : 1
and see how -> we : 1
and see how -> to : 1
see how an -> array : 1
how an array -> of : 1
an array of -> objects : 2
an array of -> floats : 1
an array of -> a : 1
an array of -> for : 1
an array of -> user : 1
array of objects -> are : 1
array of objects -> using : 1
objects are placed -> in : 1
are placed in -> memory : 1
placed in memory -> when : 1
placed in memory -> at : 1
in memory when -> using : 1
memory when using -> and : 1
when using and -> java : 1
using and java -> auto : 1
and java auto -> n : 1
java auto n -> auto : 1
auto n auto -> cars : 1
auto n auto -> auto : 2
auto n auto -> src : 2
auto n auto -> middle : 1
auto n auto -> circles : 2
n auto cars -> int : 1
auto cars int -> n : 1
cars int n -> cars : 1
int n cars -> new : 1
n cars new -> following : 1
cars new following -> image : 1
new following image -> shows : 1
following image shows -> how : 3
following image shows -> a : 2
following image shows -> two : 1
image shows how -> the : 3
shows how the -> car : 2
shows how the -> stack : 2
how the car -> objects : 2
the car objects -> are : 2
car objects are -> in : 1
car objects are -> laid : 1
objects are in -> memory : 1
are in memory -> in : 1
in memory in -> following : 1
in memory in -> vector : 1
memory in following -> image : 1
in following image -> shows : 1
objects are laid -> out : 2
are laid out -> in : 2
are laid out -> contiguously : 1
laid out in -> memory : 1
laid out in -> each : 1
laid out in -> accessing : 1
laid out in -> and : 1
out in memory -> in : 1
memory in vector -> contains : 1
in vector contains -> the : 1
vector contains the -> placed : 1
contains the placed -> contiguous : 1
the placed contiguous -> memory : 1
placed contiguous memory -> whereas : 1
contiguous memory whereas -> the : 1
memory whereas the -> equivalent : 1
whereas the equivalent -> in : 1
the equivalent in -> java : 1
equivalent in java -> is : 1
in java is -> block : 1
java is block -> to : 1
is block to -> the : 1
block to the -> objects : 1
to the objects -> has : 1
the objects has -> been : 1
objects has been -> allocated : 1
has been allocated -> which : 1
has been allocated -> with : 1
been allocated which -> means : 1
allocated which means -> that : 1
which means that -> they : 2
which means that -> when : 1
which means that -> we : 4
which means that -> using : 1
which means that -> a : 1
which means that -> the : 4
which means that -> it : 1
which means that -> you : 2
which means that -> iterating : 1
which means that -> all : 1
which means that -> memory : 1
means that they -> can : 1
means that they -> do : 1
that they can -> be : 1
they can be -> located : 1
they can be -> the : 1
they can be -> used : 1
they can be -> useful : 1
can be located -> anywhere : 1
can be located -> at : 1
be located anywhere -> in : 1
located anywhere in -> the : 1
anywhere in the -> affects : 1
in the affects -> the : 1
the affects the -> performance : 1
affects the performance -> as : 1
the performance as -> java : 1
the performance as -> measured : 1
performance as java -> has : 1
as java has -> to : 1
java has to -> execute : 1
has to execute -> seven : 1
to execute seven -> allocations : 1
execute seven allocations -> instead : 1
seven allocations instead -> of : 1
allocations instead of -> it : 1
instead of it -> also : 1
of it also -> means : 1
it also means -> that : 4
also means that -> whenever : 1
also means that -> when : 1
also means that -> it : 2
also means that -> the : 1
means that whenever -> the : 1
that whenever the -> application : 1
whenever the application -> iterates : 1
the application iterates -> the : 1
application iterates the -> there : 1
iterates the there -> is : 1
the there is -> a : 1
the there is -> no : 4
is a performance -> win : 1
a performance win -> for : 1
performance win for -> since : 1
win for since -> accessing : 1
for since accessing -> nearby : 1
since accessing nearby -> memory : 1
accessing nearby memory -> locations : 1
nearby memory locations -> is : 1
memory locations is -> faster : 1
locations is faster -> than : 1
is faster than -> accessing : 1
faster than accessing -> several : 1
than accessing several -> random : 1
accessing several random -> spots : 1
several random spots -> in : 1
random spots in -> language : 1
spots in language -> some : 1
in language some -> discussions : 1
language some discussions -> about : 1
some discussions about -> versus : 1
discussions about versus -> other : 1
about versus other -> concluded : 1
versus other concluded -> that : 1
other concluded that -> should : 1
concluded that should -> only : 1
that should only -> be : 1
should only be -> used : 1
only be used -> if : 1
only be used -> when : 1
only be used -> from : 1
be used if -> performance : 1
used if performance -> is : 1
if performance is -> a : 1
performance is a -> major : 1
performance is a -> result : 1
is a major -> said : 1
a major said -> to : 1
major said to -> just : 1
said to just -> increase : 1
to just increase -> the : 1
just increase the -> complexity : 1
increase the complexity -> of : 1
complexity of the -> code : 1
code base due -> to : 1
base due to -> manual : 1
due to manual -> memory : 1
to manual memory -> which : 1
manual memory which -> may : 1
memory which may -> result : 1
which may result -> in : 1
may result in -> memory : 1
result in memory -> leaks : 1
in memory leaks -> and : 1
memory leaks and -> may : 1
leaks and may -> have : 1
and may have -> been : 1
may have been -> true : 1
have been true -> several : 1
been true several -> versions : 1
true several versions -> but : 1
several versions but -> a : 1
versions but a -> modern : 1
but a modern -> programmer : 1
a modern programmer -> relies : 1
modern programmer relies -> on : 1
programmer relies on -> the : 1
relies on the -> provided : 1
relies on the -> fundamental : 1
on the provided -> containers : 1
the provided containers -> and : 1
provided containers and -> smart : 1
containers and smart -> pointer : 1
containers and smart -> pointers : 1
and smart pointer -> which : 1
smart pointer which -> are : 1
pointer which are -> part : 1
which are part -> of : 1
are part of -> the : 2
of the would -> here : 1
the would here -> like : 1
would here like -> to : 1
here like to -> highlight : 1
like to highlight -> two : 1
to highlight two -> features : 1
highlight two features -> of : 1
two features of -> related : 1
features of related -> to : 1
of related to -> robustness : 1
related to robustness -> rather : 1
to robustness rather -> than : 1
robustness rather than -> that : 1
rather than that -> we : 1
rather than that -> to : 1
than that we -> think : 1
think are easily -> value : 1
are easily value -> semantics : 1
easily value semantics -> and : 1
value semantics and -> const : 1
value semantics and -> reference : 1
semantics and const -> supports : 1
and const supports -> both : 1
const supports both -> value : 1
supports both value -> semantics : 1
both value semantics -> and : 1
semantics and reference -> value : 1
and reference value -> semantics : 1
reference value semantics -> lets : 1
value semantics lets -> us : 1
semantics lets us -> pass : 1
lets us pass -> objects : 1
us pass objects -> by : 1
pass objects by -> value : 1
objects by value -> instead : 1
by value instead -> of : 1
value instead of -> just : 2
instead of just -> passing : 1
instead of just -> one : 1
instead of just -> storing : 1
instead of just -> the : 1
instead of just -> a : 1
of just passing -> references : 1
just passing references -> to : 1
passing references to -> in : 1
references to in -> value : 1
references to in -> the : 1
to in value -> semantics : 1
in value semantics -> is : 1
value semantics is -> the : 1
semantics is the -> which : 1
is the which -> means : 1
the which means -> that : 1
means that when -> you : 1
means that when -> a : 1
means that when -> doing : 1
means that when -> we : 1
that when you -> pass : 1
when you pass -> an : 1
you pass an -> instance : 1
pass an instance -> of : 1
an instance of -> a : 1
instance of a -> class : 1
a class or -> it : 1
a class or -> the : 1
class or it -> behaves : 1
or it behaves -> in : 1
it behaves in -> the : 1
behaves in the -> same : 1
in the same -> way : 2
in the same -> order : 3
in the same -> each : 1
in the same -> which : 1
in the same -> even : 1
in the same -> operator : 1
in the same -> function : 1
in the same -> square : 1
in the same -> value : 1
in the same -> process : 1
in the same -> cache : 1
the same way -> as : 2
same way as -> passing : 1
same way as -> if : 1
way as passing -> an : 1
as passing an -> or : 1
passing an or -> any : 1
an or any -> other : 1
or any other -> fundamental : 1
or any other -> custom : 1
or any other -> stl : 1
any other fundamental -> to : 1
other fundamental to -> use : 1
fundamental to use -> reference : 1
to use reference -> we : 1
use reference we -> need : 1
reference we need -> to : 1
we need to -> explicitly : 3
we need to -> specify : 2
we need to -> go : 1
we need to -> cover : 1
we need to -> compare : 1
we need to -> move : 1
we need to -> have : 1
we need to -> find : 1
we need to -> write : 2
we need to -> sort : 1
we need to -> repeat : 1
we need to -> make : 1
we need to -> iterate : 2
we need to -> organize : 1
we need to -> duplicate : 1
we need to -> avoid : 1
we need to -> understand : 1
we need to -> call : 2
we need to -> think : 1
we need to -> convert : 1
we need to -> know : 1
we need to -> disallow : 1
we need to -> inform : 1
we need to -> do : 3
we need to -> conditionally : 1
we need to -> treat : 1
we need to -> use : 2
we need to -> acquire : 1
we need to -> pass : 1
we need to -> recall : 1
we need to -> minimize : 1
we need to -> care : 1
we need to -> accumulate : 1
we need to -> initialize : 1
we need to -> copy : 1
need to explicitly -> use : 1
need to explicitly -> specify : 2
need to explicitly -> ask : 1
to explicitly use -> references : 1
explicitly use references -> or : 1
use references or -> system : 1
use references or -> values : 1
references or system -> gives : 1
or system gives -> us : 1
system gives us -> the : 1
gives us the -> ability : 1
us the ability -> to : 1
ability to explicitly -> state : 1
to explicitly state -> the : 1
explicitly state the -> ownership : 1
state the ownership -> of : 1
the ownership of -> an : 1
the ownership of -> that : 1
the ownership of -> dynamic : 1
the ownership of -> you : 1
the ownership of -> the : 1
ownership of an -> compare : 1
ownership of an -> ownership : 1
of an compare -> the : 1
an compare the -> following : 1
compare the following -> implementations : 1
the following implementations -> of : 1
following implementations of -> a : 1
implementations of a -> simple : 1
of a simple -> class : 1
of a simple -> templated : 1
a simple class -> in : 1
a simple class -> is : 1
simple class in -> and : 1
class in and -> we : 1
in and we -> start : 1
and we start -> with : 1
we start with -> the : 2
we start with -> a : 1
start with the -> bagel : 1
start with the -> original : 1
with the bagel -> corresponding : 1
the bagel corresponding -> implementation : 1
bagel corresponding implementation -> in : 1
corresponding implementation in -> java : 1
implementation in java -> could : 1
implementation in java -> silently : 1
in java could -> look : 1
java could look -> like : 1
could look like -> bagel : 1
could look like -> printing : 1
could look like -> note : 1
look like bagel -> public : 1
like bagel public -> private : 1
bagel public private -> the : 1
public private the -> the : 1
private the the -> programmer : 1
the the programmer -> states : 1
the programmer states -> that : 1
programmer states that -> completely : 1
states that completely -> encapsulated : 1
that completely encapsulated -> by : 1
completely encapsulated by -> had : 1
encapsulated by had -> the : 1
by had the -> programmer : 1
had the programmer -> intended : 1
the programmer intended -> the : 1
programmer intended the -> topping : 1
intended the topping -> list : 1
the topping list -> to : 1
the topping list -> and : 1
the topping list -> is : 1
topping list to -> be : 1
list to be -> shared : 1
to be shared -> among : 3
be shared among -> several : 2
be shared among -> different : 1
shared among several -> it : 1
shared among several -> or : 1
shared among several -> bagels : 1
among several it -> would : 1
several it would -> have : 1
it would have -> been : 2
it would have -> called : 1
would have been -> declared : 1
would have been -> possible : 1
would have been -> very : 1
have been declared -> as : 1
been declared as -> a : 1
declared as a -> pointer : 1
as a pointer -> of : 1
as a pointer -> to : 1
a pointer of -> some : 1
pointer of some -> if : 1
of some if -> the : 1
some if the -> ownership : 1
if the ownership -> is : 1
the ownership is -> shared : 1
ownership is shared -> among : 1
is shared among -> several : 1
is shared among -> all : 2
is shared among -> multiple : 1
is shared among -> the : 1
among several or -> a : 1
several or a -> if : 1
or a if -> someone : 1
a if someone -> else : 1
if someone else -> owns : 2
someone else owns -> the : 1
someone else owns -> why : 1
else owns the -> topping : 1
owns the topping -> list : 1
topping list and -> is : 1
list and is -> supposed : 1
and is supposed -> to : 1
is supposed to -> modify : 1
is supposed to -> it : 1
supposed to modify -> it : 1
to modify it -> as : 1
modify it as -> the : 1
it as the -> program : 1
as the program -> objects : 1
the program objects -> references : 1
program objects references -> each : 1
objects references each -> other : 1
references each other -> with : 1
each other with -> shared : 1
other with shared -> not : 1
with shared not -> possible : 1
shared not possible -> to : 1
not possible to -> distinguish : 1
not possible to -> in : 1
not possible to -> pass : 1
not possible to -> add : 1
not possible to -> set : 1
not possible to -> a : 1
possible to distinguish -> whether : 1
possible to distinguish -> between : 1
to distinguish whether -> the : 1
distinguish whether the -> topping : 1
whether the topping -> list : 1
topping list is -> intended : 1
list is intended -> to : 1
is intended to -> be : 3
is intended to -> is : 1
is intended to -> auto : 1
intended to be -> shared : 2
intended to be -> in : 1
intended to be -> evaluated : 1
intended to be -> visible : 1
intended to be -> and : 1
among several bagels -> or : 1
several bagels or -> or : 1
bagels or or -> whether : 1
or or whether -> it : 1
or whether it -> is : 1
or whether it -> has : 1
whether it is -> handled : 1
whether it is -> currently : 1
whether it is -> the : 1
it is handled -> somewhere : 1
it is handled -> like : 1
is handled somewhere -> else : 1
handled somewhere else -> or : 1
somewhere else or -> if : 1
else or if -> it : 1
or if it -> as : 1
or if it -> is : 1
if it as -> in : 1
it as in -> most : 1
as in most -> completely : 1
in most completely -> owned : 1
most completely owned -> by : 1
completely owned by -> the : 1
owned by the -> following : 1
owned by the -> current : 1
owned by the -> program : 1
owned by the -> instances : 1
owned by the -> it : 1
by the following -> as : 1
the following as -> every : 1
the following as -> you : 1
following as every -> object : 1
as every object -> is : 1
every object is -> shared : 1
object is shared -> by : 1
is shared by -> default : 1
is shared by -> each : 1
is shared by -> that : 1
shared by default -> in : 1
by default in -> java : 1
by default in -> an : 1
default in java -> most : 1
in java most -> other : 1
java most other -> programmers : 1
most other programmers -> have : 1
other programmers have -> to : 1
programmers have to -> take : 1
programmers have to -> rely : 1
programmers have to -> use : 1
have to take -> precautions : 1
have to take -> alignment : 1
to take precautions -> for : 1
take precautions for -> subtle : 1
precautions for subtle -> bugs : 1
for subtle bugs -> such : 1
subtle bugs such -> as : 1
bugs such as -> how : 1
such as how -> the : 1
as how the -> bagels : 1
how the bagels -> t : 1
the bagels t -> a : 1
bagels t a -> is : 1
t a is -> not : 1
a is not -> when : 1
is not when -> adding : 1
not when adding -> will : 1
when adding will -> have : 1
adding will have -> will : 1
will have will -> have : 1
have will have -> salt : 1
will have salt -> pepper : 1
have salt pepper -> b : 1
salt pepper b -> no : 1
pepper b no -> bagel : 1
b no bagel -> is : 1
no bagel is -> how : 1
bagel is how -> both : 1
is how both -> the : 1
how both the -> bagels : 1
both the bagels -> subtly : 1
the bagels subtly -> t : 1
bagels subtly t -> new : 1
subtly t new -> a : 1
t new a -> new : 1
new a new -> now : 1
a new now -> will : 1
new now will -> subtly : 1
now will subtly -> also : 1
will subtly also -> have : 1
subtly also have -> and : 1
subtly also have -> powerful : 1
also have and -> share : 1
also have and -> of : 1
also have and -> the : 1
have and share -> toppings : 1
and share toppings -> in : 1
share toppings in -> b : 1
toppings in b -> new : 1
in b new -> both : 1
b new both -> bagels : 1
new both bagels -> subtly : 1
both bagels subtly -> also : 1
bagels subtly also -> have : 1
also have powerful -> feature : 1
have powerful feature -> java : 1
powerful feature java -> and : 1
feature java and -> many : 1
java and many -> other : 1
and many other -> languages : 1
many other languages -> is : 1
is the ability -> to : 1
to write const -> correct : 1
write const correct -> const : 1
const correct const -> correctness : 1
correct const correctness -> means : 1
const correctness means -> that : 1
correctness means that -> each : 1
means that each -> member : 1
that each member -> function : 1
each member function -> signature : 1
member function signature -> of : 1
function signature of -> a : 1
signature of a -> class : 1
signature of a -> is : 1
a class explicitly -> tells : 1
class explicitly tells -> the : 1
explicitly tells the -> caller : 1
tells the caller -> whether : 1
the caller whether -> the : 1
caller whether the -> object : 1
whether the object -> will : 1
whether the object -> should : 1
the object will -> be : 3
object will be -> modified : 1
object will be -> this : 1
object will be -> the : 1
object will be -> referred : 1
will be modified -> or : 1
be modified or -> and : 1
modified or and -> it : 1
or and it -> will : 1
and it will -> not : 1
it will not -> compile : 1
it will not -> generate : 1
will not compile -> if : 1
will not compile -> when : 1
not compile if -> the : 1
compile if the -> caller : 1
compile if the -> condition : 2
compile if the -> compiler : 1
if the caller -> tries : 1
the caller tries -> to : 1
caller tries to -> modify : 1
tries to modify -> an : 1
to modify an -> object : 1
modify an object -> follows : 1
an object follows -> an : 1
object follows an -> example : 1
follows an example -> of : 1
an example of -> how : 9
an example of -> a : 5
an example of -> this : 1
an example of -> an : 1
an example of -> iterating : 1
an example of -> integral : 1
an example of -> varianttype : 1
an example of -> transferring : 1
an example of -> using : 1
an example of -> such : 1
example of how -> we : 1
example of how -> it : 2
example of how -> a : 2
example of how -> fragmented : 1
example of how -> tuples : 1
example of how -> to : 2
of how we -> can : 1
how we can -> use : 4
how we can -> implement : 3
how we can -> split : 1
how we can -> write : 2
how we can -> combine : 1
how we can -> create : 1
how we can -> tighten : 1
how we can -> pass : 1
how we can -> avoid : 1
how we can -> get : 1
how we can -> adapt : 1
how we can -> build : 1
we can use -> member : 1
we can use -> the : 2
we can use -> a : 3
we can use -> them : 1
we can use -> to : 1
we can use -> it : 3
we can use -> multiple : 1
can use member -> functions : 1
use member functions -> to : 1
member functions to -> prevent : 1
member functions to -> global : 1
functions to prevent -> unintentional : 1
to prevent unintentional -> modifications : 1
prevent unintentional modifications -> of : 1
unintentional modifications of -> in : 1
modifications of in -> the : 1
of in the -> member : 1
of in the -> header : 1
of in the -> list : 1
of in the -> short : 1
in the member -> declared : 1
the member declared -> and : 1
member declared and -> is : 1
declared and is -> therefore : 1
and is therefore -> not : 2
and is therefore -> harder : 1
and is therefore -> the : 1
and is therefore -> quite : 1
is therefore not -> allowed : 1
is therefore not -> affected : 1
therefore not allowed -> to : 1
not allowed to -> mutate : 1
not allowed to -> modify : 1
not allowed to -> be : 1
not allowed to -> auto : 1
not allowed to -> do : 1
allowed to mutate -> the : 1
allowed to mutate -> their : 1
to mutate the -> object : 1
to mutate the -> control : 1
mutate the object -> and : 1
mutate the object -> we : 1
the object and -> be : 1
the object and -> places : 1
the object and -> free : 1
the object and -> passes : 1
the object and -> expect : 1
object and be -> declared : 1
and be declared -> person : 1
be declared person -> auto : 1
declared person auto -> const : 1
person auto const -> return : 1
auto const return -> auto : 9
auto const return -> float : 4
auto const return -> int : 4
auto const return -> this : 1
auto const return -> const : 1
auto const return -> t : 2
auto const return -> is : 1
auto const return -> the : 1
auto const return -> makes : 1
auto const return -> global : 3
auto const return -> constexpr : 1
auto const return -> prehashedstring : 1
auto const return -> a : 1
auto const return -> implicit : 1
auto const return -> writer : 1
const return auto -> int : 1
const return auto -> const : 7
const return auto -> hat : 1
const return auto -> return : 1
const return auto -> string : 1
return auto int -> also : 1
return auto int -> allocated : 1
auto int also -> possible : 1
int also possible -> to : 1
to distinguish between -> returning : 1
to distinguish between -> operators : 1
distinguish between returning -> mutable : 1
between returning mutable -> and : 1
returning mutable and -> immutable : 1
mutable and immutable -> references : 1
and immutable references -> to : 1
immutable references to -> in : 1
in the the -> member : 1
in the the -> time : 1
in the the -> containers : 1
in the the -> array : 1
in the the -> now : 1
in the the -> type : 1
in the the -> compiler : 1
in the the -> user : 1
in the the -> members : 1
in the the -> corresponding : 1
the the member -> an : 1
the the member -> is : 1
the member an -> may : 1
member an may -> be : 1
an may be -> team : 1
may be team -> return : 1
be team return -> return : 1
team return return -> person : 1
return return person -> see : 1
return person see -> how : 1
person see how -> the : 1
see how the -> compiler : 2
see how the -> parts : 1
see how the -> proxy : 1
see how the -> example : 1
see how the -> equivalent : 1
how the compiler -> can : 1
how the compiler -> sees : 1
how the compiler -> handles : 1
the compiler can -> help : 1
the compiler can -> vectorize : 1
the compiler can -> optimize : 1
compiler can help -> us : 1
can help us -> find : 1
help us find -> errors : 1
us find errors -> when : 1
find errors when -> we : 1
errors when we -> try : 1
when we try -> to : 1
we try to -> mutate : 1
we try to -> use : 1
we try to -> cast : 1
try to mutate -> immutable : 1
to mutate immutable -> in : 1
mutate immutable in -> the : 1
immutable in the -> following : 1
in the following -> the : 5
in the following -> where : 2
in the following -> const : 1
in the following -> auto : 3
in the following -> code : 4
in the following -> two : 1
in the following -> as : 1
in the following -> are : 1
in the following -> cdpaligncenter : 2
in the following -> we : 4
in the following -> column : 1
in the following -> adding : 1
in the following -> all : 1
in the following -> users : 1
in the following -> ms : 1
in the following -> into : 1
in the following -> if : 1
in the following -> table : 1
in the following -> example : 2
in the following -> each : 2
in the following -> there : 1
in the following -> diagram : 1
in the following -> int : 1
in the following -> this : 1
the following the -> function : 1
the following the -> lambda : 1
the following the -> can : 1
the following the -> values : 1
the following the -> member : 1
the following the -> compiler : 1
following the function -> argument : 1
the function argument -> explicitly : 1
function argument explicitly -> this : 1
argument explicitly this -> function : 1
explicitly this function -> is : 1
this function is -> not : 1
this function is -> called : 1
function is not -> allowed : 1
function is not -> necessarily : 1
is not allowed -> to : 3
allowed to modify -> both : 1
to modify both -> and : 1
modify both and -> are : 1
both and are -> declared : 1
and are declared -> will : 1
are declared will -> not : 1
declared will not -> requires : 1
will not requires -> a : 1
not requires a -> mutable : 1
requires a mutable -> we : 1
a mutable we -> want : 1
mutable we want -> to : 1
we want to -> write : 2
we want to -> modify : 1
we want to -> use : 4
we want to -> declare : 1
we want to -> capture : 1
we want to -> sort : 2
we want to -> make : 2
we want to -> count : 1
we want to -> but : 1
we want to -> find : 2
we want to -> store : 1
we want to -> sum : 1
we want to -> implement : 1
we want to -> compose : 1
we want to -> run : 1
we want to -> allocate : 1
we want to -> have : 1
we want to -> prevent : 1
we want to -> force : 1
we want to -> see : 1
we want to -> avoid : 1
we want to -> if : 1
we want to -> calculate : 1
want to write -> a : 2
want to write -> an : 1
to write a -> function : 1
to write a -> custom : 2
to write a -> minimal : 1
to write a -> metafunction : 1
to write a -> new : 1
write a function -> which : 1
write a function -> that : 1
a function which -> mutate : 1
a function which -> returns : 3
a function which -> converts : 1
a function which -> will : 1
a function which -> squares : 1
a function which -> cubes : 1
function which mutate -> the : 1
which mutate the -> object : 1
the object we -> simply : 1
the object we -> are : 1
object we simply -> remove : 1
we simply remove -> this : 1
simply remove this -> signals : 1
remove this signals -> to : 1
this signals to -> the : 1
signals to the -> caller : 1
to the caller -> that : 1
to the caller -> of : 2
to the caller -> immediately : 1
the caller that -> this : 1
caller that this -> function : 1
that this function -> may : 1
this function may -> mutate : 1
function may mutate -> the : 1
may mutate the -> const : 1
mutate the const -> functions : 1
the const functions -> can : 1
const functions can -> be : 1
functions can be -> called : 1
can be called -> on : 1
be called on -> mutable : 1
called on mutable -> teams : 1
on mutable teams -> is : 1
mutable teams is -> a : 1
teams is a -> mutable : 1
is a mutable -> ownership : 1
is a mutable -> though : 1
is a mutable -> shared : 1
a mutable ownership -> and : 1
mutable ownership and -> garbage : 1
collection in in -> very : 1
in in very -> rare : 1
in very rare -> a : 1
very rare a -> programmer : 1
rare a programmer -> should : 1
a programmer should -> leave : 1
programmer should leave -> the : 1
should leave the -> memory : 1
leave the memory -> handling : 1
the memory handling -> to : 1
memory handling to -> containers : 1
handling to containers -> and : 1
to containers and -> smart : 1
and smart pointers -> and : 1
smart pointers and -> never : 1
pointers and never -> have : 1
and never have -> to : 1
never have to -> rely : 1
have to rely -> on : 4
to rely on -> manual : 1
to rely on -> external : 2
to rely on -> runtime : 1
rely on manual -> memory : 1
on manual memory -> put : 1
manual memory put -> it : 1
memory put it -> the : 1
put it the -> garbage : 1
it the garbage -> collection : 1
the garbage collection -> model : 1
garbage collection model -> in : 1
collection model in -> almost : 1
model in almost -> be : 1
in almost be -> emulated : 1
almost be emulated -> in : 1
be emulated in -> by : 1
emulated in by -> using : 1
in by using -> for : 1
by using for -> every : 1
using for every -> note : 1
for every note -> that : 1
every note that -> languages : 1
note that languages -> use : 1
that languages use -> the : 1
languages use the -> same : 1
use the same -> algorithm : 1
use the same -> divide : 1
the same algorithm -> for : 1
same algorithm for -> allocation : 1
algorithm for allocation -> tracking : 1
for allocation tracking -> as : 1
allocation tracking as -> the : 1
tracking as the -> a : 1
as the a -> smart : 1
the a smart -> pointer : 1
a smart pointer -> based : 1
a smart pointer -> pointing : 1
smart pointer based -> on : 1
pointer based on -> a : 1
based on a -> algorithm : 1
on a algorithm -> that : 1
a algorithm that -> will : 1
algorithm that will -> leak : 1
that will leak -> memory : 1
will leak memory -> if : 1
leak memory if -> objects : 1
memory if objects -> have : 1
if objects have -> cyclic : 1
objects have cyclic -> languages : 1
have cyclic languages -> have : 1
cyclic languages have -> more : 1
languages have more -> sophisticated : 1
have more sophisticated -> methods : 1
more sophisticated methods -> that : 1
sophisticated methods that -> can : 1
methods that can -> handle : 1
that can handle -> and : 1
can handle and -> free : 1
handle and free -> cyclic : 1
and free cyclic -> dependent : 1
free cyclic dependent -> rather : 1
cyclic dependent rather -> than : 1
dependent rather than -> relying : 1
rather than relying -> on : 1
than relying on -> a : 1
relying on a -> garbage : 1
on a garbage -> forcing : 1
a garbage forcing -> a : 1
garbage forcing a -> strict : 1
forcing a strict -> ownership : 1
a strict ownership -> delicately : 1
strict ownership delicately -> avoids : 1
ownership delicately avoids -> subtle : 1
delicately avoids subtle -> bugs : 1
avoids subtle bugs -> that : 1
subtle bugs that -> may : 1
bugs that may -> result : 1
that may result -> from : 1
may result from -> sharing : 1
result from sharing -> objects : 1
from sharing objects -> by : 1
sharing objects by -> as : 1
objects by as -> in : 1
by as in -> the : 1
as in the -> case : 3
as in the -> next : 1
as in the -> corresponding : 1
as in the -> town : 1
as in the -> previous : 1
case of a -> programmer : 1
of a programmer -> minimize : 1
a programmer minimize -> shared : 1
programmer minimize shared -> ownership : 1
minimize shared ownership -> in : 1
shared ownership in -> the : 1
ownership in the -> resulting : 1
in the resulting -> code : 1
the resulting code -> is : 1
resulting code is -> easier : 1
code is easier -> to : 1
is easier to -> use : 1
is easier to -> revisit : 1
easier to use -> and : 1
use and harder -> to : 1
and harder to -> as : 1
harder to as -> it : 1
to as it -> can : 2
as it can -> force : 1
as it can -> bind : 1
as it can -> be : 1
it can force -> the : 1
can force the -> user : 1
force the user -> of : 1
force the user -> to : 1
the user of -> the : 7
the user of -> that : 1
user of the -> class : 3
user of the -> also : 1
user of the -> their : 1
user of the -> library : 1
user of the -> code : 1
of the class -> to : 2
of the class -> from : 2
of the class -> is : 3
of the class -> same : 1
of the class -> the : 1
of the class -> must : 1
of the class -> that : 1
of the class -> were : 1
of the class -> lockfreequeue : 1
the class to -> use : 1
the class to -> something : 1
the class to -> return : 1
the class to -> following : 1
class to use -> it : 1
to use it -> as : 2
to use it -> instead : 1
to use it -> is : 1
to use it -> uses : 1
to use it -> on : 1
use it as -> it : 1
use it as -> effectively : 1
it as it -> is : 1
as it is -> null : 1
as it is -> only : 2
as it is -> then : 1
as it is -> such : 1
as it is -> approximately : 1
it is null -> objects : 1
is null objects -> using : 1
objects using addition -> to : 1
using addition to -> strict : 1
addition to strict -> also : 1
to strict also -> has : 1
strict also has -> the : 1
also has the -> concept : 1
also has the -> following : 1
has the concept -> of : 2
concept of which -> is : 1
of which is -> different : 1
of which is -> a : 1
which is different -> from : 1
is different from -> references : 1
different from references -> in : 1
from references in -> a : 1
references in a -> reference : 1
in a reference -> is : 1
a reference is -> a : 1
reference is a -> pointer : 1
is a pointer -> which : 1
is a pointer -> to : 1
a pointer which -> is : 1
pointer which is -> not : 1
which is not -> allowed : 1
which is not -> tied : 1
which is not -> return : 1
which is not -> the : 1
which is not -> a : 1
which is not -> possible : 1
allowed to be -> null : 1
to be null -> or : 1
be null or -> therefore : 1
null or therefore -> no : 1
or therefore no -> copying : 1
therefore no copying -> is : 1
no copying is -> involved : 1
copying is involved -> when : 1
is involved when -> passing : 1
involved when passing -> it : 1
when passing it -> to : 1
passing it to -> a : 2
to a a -> a : 1
a a a -> function : 1
a a function -> signature : 1
a function signature -> in : 1
function signature in -> can : 1
signature in can -> explicitly : 1
in can explicitly -> restrict : 1
can explicitly restrict -> the : 1
explicitly restrict the -> programmer : 1
restrict the programmer -> from : 1
the programmer from -> passing : 1
programmer from passing -> a : 1
from passing a -> null : 1
passing a null -> object : 1
a null object -> as : 1
a null object -> is : 1
null object as -> a : 1
object as a -> programmer : 1
as a programmer -> must : 1
a programmer must -> use : 1
programmer must use -> documentation : 1
must use documentation -> or : 1
use documentation or -> annotations : 1
documentation or annotations -> to : 1
or annotations to -> indicate : 1
annotations to indicate -> a : 1
to indicate a -> look : 1
indicate a look -> at : 1
look at these -> two : 2
look at these -> requirements : 1
at these two -> java : 1
at these two -> examples : 1
these two java -> functions : 1
two java functions -> for : 1
java functions for -> computing : 1
functions for computing -> the : 1
for computing the -> volume : 1
computing the volume -> of : 1
the volume of -> a : 1
volume of a -> the : 1
a the first -> one : 1
the first one -> throws : 1
the first one -> points : 1
first one throws -> a : 1
one throws a -> runtime : 1
throws a runtime -> exception : 1
throws a runtime -> passed : 1
a runtime exception -> if : 1
runtime exception if -> a : 1
exception if a -> null : 1
if a null -> object : 1
null object is -> passed : 1
object is passed -> to : 1
is passed to -> whereas : 1
is passed to -> the : 1
passed to whereas -> the : 1
to whereas the -> second : 1
whereas the second -> one : 1
the second one -> silently : 1
the second one -> points : 1
the second one -> will : 1
second one silently -> ignores : 1
one silently ignores -> null : 1
silently ignores null -> in : 1
ignores null in -> java : 1
null in java -> throws : 1
in java throws -> a : 1
java throws a -> runtime : 1
a runtime passed -> a : 1
runtime passed a -> null : 1
passed a null -> float : 1
a null float -> cube : 2
null float cube -> return : 2
float cube return -> second : 1
float cube return -> both : 1
cube return second -> implementation : 1
return second implementation -> in : 1
second implementation in -> java : 1
in java silently -> handles : 1
java silently handles -> null : 1
silently handles null -> rad : 1
handles null rad -> a : 1
null rad a -> null : 1
rad a null -> float : 1
cube return both -> function : 1
return both function -> implemented : 1
both function implemented -> in : 1
function implemented in -> the : 1
implemented in the -> caller : 1
in the caller -> of : 1
the caller of -> the : 4
caller of the -> function : 1
caller of the -> the : 1
caller of the -> task : 1
caller of the -> library : 1
of the function -> has : 1
of the function -> in : 1
of the function -> call : 1
of the function -> iterates : 1
of the function -> that : 1
of the function -> can : 1
of the function -> asynchronous : 1
of the function -> to : 1
of the function -> is : 1
the function has -> to : 1
the function has -> computed : 1
function has to -> inspect : 1
has to inspect -> the : 1
to inspect the -> implementation : 1
inspect the implementation -> of : 2
the implementation of -> the : 4
the implementation of -> allocate : 1
implementation of the -> function : 1
implementation of the -> as : 1
implementation of the -> rule : 1
implementation of the -> standard : 1
implementation of the -> iterator : 1
implementation of the -> small : 1
implementation of the -> class : 1
implementation of the -> parallel : 1
the function in -> order : 1
function in order -> to : 1
order to determine -> whether : 2
order to determine -> exactly : 1
to determine whether -> null : 1
to determine whether -> the : 2
determine whether null -> objects : 1
whether null objects -> are : 1
null objects are -> allowed : 1
null objects are -> arguments : 1
objects are allowed -> or : 1
are allowed or -> the : 1
allowed or the -> first : 1
or the first -> function : 1
the first function -> signature : 1
the first function -> returns : 1
the first function -> as : 1
first function signature -> explicitly : 1
function signature explicitly -> accepts : 1
signature explicitly accepts -> only : 1
explicitly accepts only -> initialized : 1
accepts only initialized -> objects : 1
only initialized objects -> by : 1
initialized objects by -> using : 1
objects by using -> references : 1
objects by using -> the : 1
by using references -> which : 1
using references which -> cannot : 1
references which cannot -> be : 1
which cannot be -> the : 1
which cannot be -> in : 1
cannot be the -> second : 1
be the second -> version : 1
be the second -> and : 1
the second version -> using : 1
the second version -> needs : 1
second version using -> pointers : 1
version using pointers -> as : 1
using pointers as -> explicitly : 1
pointers as explicitly -> shows : 1
as explicitly shows -> that : 1
explicitly shows that -> null : 1
shows that null -> objects : 1
that null objects -> are : 1
objects are arguments -> passed : 1
are arguments passed -> as : 1
arguments passed as -> references : 1
arguments passed as -> pointers : 1
passed as references -> indicates : 1
as references indicates -> that : 1
references indicates that -> null : 1
indicates that null -> values : 2
that null values -> are : 2
null values are -> not : 1
null values are -> being : 1
values are not -> auto : 1
values are not -> known : 1
are not auto -> cube : 1
not auto cube -> auto : 1
auto cube auto -> pi : 2
cube auto pi -> return : 2
auto pi return -> arguments : 1
auto pi return -> able : 1
auto pi return -> the : 1
pi return arguments -> passed : 1
return arguments passed -> as : 1
passed as pointers -> indicates : 1
as pointers indicates -> that : 1
pointers indicates that -> null : 1
values are being -> auto : 1
values are being -> limited : 1
are being auto -> rad : 1
being auto rad -> s : 1
auto rad s -> auto : 1
rad s auto -> cube : 1
s auto cube -> auto : 1
pi return able -> to : 1
return able to -> use : 1
able to use -> references : 1
able to use -> your : 1
able to use -> it : 1
to use references -> or : 1
references or values -> as : 1
or values as -> arguments : 1
values as arguments -> in : 1
as arguments in -> instantly : 1
arguments in instantly -> informs : 1
in instantly informs -> the : 1
instantly informs the -> programmer : 1
informs the programmer -> how : 1
the programmer how -> the : 1
programmer how the -> function : 1
how the function -> is : 1
the function is -> intended : 1
the function is -> still : 1
the function is -> the : 1
the function is -> called : 1
the function is -> invoked : 1
the function is -> passed : 1
function is intended -> to : 2
to be in -> the : 1
to be in -> order : 1
be in the -> user : 1
be in the -> our : 1
be in the -> joinable : 1
in the user -> must : 1
in the user -> we : 1
in the user -> array : 1
the user must -> inspect : 1
user must inspect -> the : 1
must inspect the -> implementation : 1
of the as -> objects : 1
of the as -> the : 1
of the as -> mentioned : 1
the as objects -> are : 1
as objects are -> always : 1
objects are always -> passed : 1
are always passed -> as : 1
always passed as -> and : 1
passed as and -> a : 1
as and a -> possibility : 1
and a possibility -> that : 1
a possibility that -> they : 1
possibility that they -> could : 1
that they could -> be : 1
they could be -> of : 1
could be of -> with : 1
be of with -> other : 1
of with other -> programming : 1
with other programming -> languages : 1
programming languages be -> fair : 1
languages be fair -> without : 1
be fair without -> mentioning : 1
fair without mentioning -> some : 1
without mentioning some -> of : 1
mentioning some of -> its : 1
some of its -> as : 1
of its as -> mentioned : 1
its as mentioned -> has : 1
as mentioned has -> more : 1
mentioned has more -> concepts : 1
has more concepts -> to : 1
more concepts to -> and : 1
concepts to and -> is : 1
to and is -> therefore : 1
to and is -> discussed : 1
is therefore harder -> to : 1
therefore harder to -> use : 1
harder to use -> correctly : 1
to use correctly -> and : 1
use correctly and -> to : 1
correctly and to -> its : 1
and to its -> full : 1
to its full -> if : 1
its full if -> a : 1
full if a -> programmer : 1
if a programmer -> can : 1
a programmer can -> master : 1
programmer can master -> the : 1
can master the -> higher : 1
master the higher -> complexity : 1
the higher complexity -> turns : 1
higher complexity turns -> into : 1
complexity turns into -> an : 1
turns into an -> advantage : 1
into an advantage -> and : 1
an advantage and -> the : 1
advantage and the -> code : 1
and the code -> base : 1
code base becomes -> more : 1
base becomes more -> robust : 1
becomes more robust -> and : 1
more robust and -> performs : 1
robust and performs -> some : 1
and performs some -> shortcomings : 1
performs some shortcomings -> of : 1
some shortcomings of -> which : 1
shortcomings of which -> are : 1
of which are -> simply : 1
which are simply -> just : 1
which are simply -> only : 1
are simply just -> the : 1
simply just the -> most : 1
just the most -> severe : 1
the most severe -> of : 1
most severe of -> those : 1
severe of those -> shortcomings : 1
of those shortcomings -> are : 1
those shortcomings are -> long : 1
shortcomings are long -> compilation : 1
are long compilation -> the : 1
long compilation the -> reliance : 1
compilation the reliance -> on : 1
the reliance on -> the : 1
reliance on the -> manual : 1
on the manual -> handling : 1
the manual handling -> of : 1
manual handling of -> forward : 1
handling of forward -> and : 1
of forward and -> the : 1
forward and the -> complexity : 1
and the complexity -> of : 1
complexity of importing -> is : 1
of importing is -> mainly : 1
importing is mainly -> a : 1
is mainly a -> result : 1
mainly a result -> of : 1
a result of -> relying : 1
a result of -> being : 1
a result of -> an : 1
a result of -> spending : 1
result of relying -> on : 1
of relying on -> an : 1
relying on an -> outdated : 1
on an outdated -> import : 1
an outdated import -> system : 1
outdated import system -> where : 1
import system where -> imported : 1
system where imported -> headers : 1
where imported headers -> are : 1
imported headers are -> simply : 1
headers are simply -> pasted : 1
are simply pasted -> into : 1
simply pasted into -> whatever : 1
pasted into whatever -> includes : 1
into whatever includes -> at : 1
whatever includes at -> the : 1
includes at the -> time : 1
at the time -> of : 2
the time of -> writing : 3
the time of -> but : 1
time of writing -> this : 2
time of writing -> the : 1
of writing this -> a : 1
of writing this -> is : 1
writing this a -> modern : 1
this a modern -> import : 1
a modern import -> system : 1
modern import system -> is : 1
import system is -> up : 1
system is up -> for : 1
is up for -> but : 1
up for but -> until : 1
for but until -> the : 1
but until the -> standardized : 1
until the standardized -> version : 1
the standardized version -> becomes : 1
standardized version becomes -> project : 1
version becomes project -> management : 1
becomes project management -> remains : 1
project management remains -> very : 1
management remains very -> apparent : 1
remains very apparent -> drawback : 1
very apparent drawback -> of : 1
apparent drawback of -> is : 1
drawback of is -> the : 1
is the lack -> of : 1
the lack of -> provided : 1
lack of provided -> while : 1
of provided while -> other : 1
provided while other -> languages : 1
while other languages -> usually : 1
other languages usually -> come : 1
languages usually come -> with : 1
usually come with -> all : 1
come with all -> the : 1
with all the -> libraries : 1
with all the -> keys : 1
all the libraries -> needed : 1
the libraries needed -> for : 1
libraries needed for -> most : 1
needed for most -> such : 1
for most such -> as : 1
most such as -> user : 1
such as user -> resource : 1
as user resource -> and : 1
user resource and -> so : 1
resource and so -> more : 1
and so more -> or : 1
so more or -> nothing : 1
more or nothing -> more : 1
or nothing more -> than : 1
nothing more than -> the : 1
nothing more than -> perform : 1
more than the -> bare : 2
more than the -> fps : 1
than the bare -> minimum : 1
than the bare -> necessities : 1
the bare minimum -> of : 1
bare minimum of -> as : 1
minimum of as -> of : 1
of as of -> file : 1
as of file -> system : 1
of file system -> for : 1
file system for -> everything : 1
system for everything -> programmers : 1
for everything programmers -> have : 1
everything programmers have -> to : 1
rely on external -> although : 1
rely on external -> libraries : 1
on external although -> has : 1
external although has -> a : 1
although has a -> steeper : 1
has a steeper -> learning : 1
a steeper learning -> curve : 1
steeper learning curve -> than : 1
learning curve than -> most : 1
curve than most -> other : 1
than most other -> if : 1
most other if -> used : 1
other if used -> the : 1
if used the -> robustness : 1
used the robustness -> of : 1
the robustness of -> is : 1
the robustness of -> value : 1
robustness of is -> an : 1
of is an -> advantage : 1
is an advantage -> compared : 1
an advantage compared -> to : 1
advantage compared to -> many : 1
compared to many -> other : 1
to many other -> despite : 1
to many other -> programming : 1
many other despite -> the : 1
other despite the -> outdated : 1
despite the outdated -> system : 1
the outdated system -> of : 1
outdated system of -> believe : 1
system of believe -> that : 1
of believe that -> is : 1
believe that is -> a : 1
that is a -> well : 1
that is a -> multiple : 1
is a well -> suited : 1
a well suited -> language : 1
well suited language -> for : 1
suited language for -> even : 1
language for even -> for : 1
for even for -> projects : 1
even for projects -> where : 1
for projects where -> performance : 1
projects where performance -> is : 1
performance is not -> the : 1
is not the -> highest : 1
is not the -> case : 2
is not the -> result : 1
not the highest -> interfaces : 1
the highest interfaces -> and : 1
highest interfaces and -> diving : 1
interfaces and diving -> deeper : 1
and diving deeper -> into : 1
diving deeper into -> the : 1
deeper into the -> concepts : 1
deeper into the -> iterator : 1
into the concepts -> of : 1
concepts of we -> would : 1
of we would -> like : 1
we would like -> to : 7
we would like -> is : 1
like to concepts -> that : 1
to concepts that -> you : 1
concepts that you -> should : 1
that you should -> not : 1
that you should -> always : 1
that you should -> strive : 1
you should not -> compromise : 1
should not compromise -> on : 1
not compromise on -> when : 1
compromise on when -> writing : 1
on when writing -> class : 1
on when writing -> a : 1
when writing class -> fundamental : 1
writing class fundamental -> guideline : 1
class fundamental guideline -> when : 1
fundamental guideline when -> writing : 1
guideline when writing -> is : 1
when writing is -> to : 1
writing is to -> relieve : 1
is to relieve -> the : 1
to relieve the -> user : 1
relieve the user -> of : 1
the class from -> dealing : 1
the class from -> bytes : 1
class from dealing -> with : 1
dealing with the -> internal : 1
dealing with the -> ownership : 1
dealing with the -> result : 1
with the internal -> state : 1
the internal state -> by : 1
internal state by -> exposing : 1
state by exposing -> a : 1
by exposing a -> strict : 1
exposing a strict -> the : 1
a strict the -> of : 1
strict the of -> a : 1
the of a -> class : 1
a class is -> part : 1
a class is -> or : 1
a class is -> fully : 1
class is part -> of : 1
is part of -> the : 1
of the and -> shall : 1
of the and -> hence : 1
of the and -> one : 1
of the and -> we : 1
of the and -> random : 1
of the and -> then : 1
of the and -> the : 3
the and shall -> therefore : 1
and shall therefore -> also : 1
shall therefore also -> be : 1
therefore also be -> as : 1
also be as -> strict : 1
be as strict -> as : 1
as strict as -> should : 1
as strict as -> all : 1
strict as should -> either : 1
as should either -> behave : 1
should either behave -> as : 1
either behave as -> or : 1
behave as or -> should : 1
as or should -> fail : 1
or should fail -> to : 1
should fail to -> compile : 1
fail to compile -> when : 1
fail to compile -> if : 1
fail to compile -> with : 1
to compile when -> copying : 1
compile when copying -> a : 1
when copying a -> class : 1
copying a class -> should : 1
a class should -> not : 1
a class should -> completely : 1
class should not -> have : 1
should not have -> side : 1
not have side -> effects : 1
have side effects -> where : 1
side effects where -> the : 1
effects where the -> resulting : 1
where the resulting -> copied : 1
the resulting copied -> class : 1
resulting copied class -> can : 1
copied class can -> modify : 1
class can modify -> the : 1
can modify the -> original : 1
modify the original -> this : 1
the original this -> may : 1
original this may -> sound : 1
this may sound -> but : 1
this may sound -> complicated : 1
may sound but -> there : 1
sound but there -> are : 1
but there are -> many : 1
but there are -> other : 1
but there are -> we : 1
but there are -> several : 1
but there are -> some : 1
there are many -> circumstances : 1
there are many -> people : 1
are many circumstances -> for : 1
many circumstances for -> a : 1
circumstances for a -> class : 1
for a class -> requires : 1
for a class -> to : 1
for a class -> like : 1
a class requires -> a : 1
class requires a -> object : 1
requires a object -> accessed : 1
a object accessed -> by : 1
object accessed by -> a : 1
accessed by a -> pointer : 1
accessed by a -> also : 1
accessed by a -> thread : 1
by a pointer -> member : 1
a pointer member -> variable : 1
pointer member variable -> of : 1
member variable of -> some : 1
member variable of -> type : 1
variable of some -> for : 1
of some for -> as : 1
some for as -> engine : 1
for as engine -> auto : 1
as engine auto -> auto : 1
engine auto auto -> const : 1
auto auto const -> return : 2
const return float -> yamahaengine : 1
const return float -> float : 2
const return float -> we : 1
const return float -> distances : 1
return float yamahaengine -> public : 1
float yamahaengine public -> engine : 1
yamahaengine public engine -> programmer : 1
public engine programmer -> of : 1
engine programmer of -> the : 1
programmer of the -> a : 1
of the a -> rather : 1
of the a -> stateless : 1
the a rather -> loose : 1
a rather loose -> interface : 1
rather loose interface -> without : 1
loose interface without -> any : 1
interface without any -> precautions : 1
without any precautions -> regarding : 1
any precautions regarding -> copy : 1
precautions regarding copy -> boat : 1
regarding copy boat -> float : 1
copy boat float -> auto : 1
boat float auto -> return : 1
float auto return -> being : 1
float auto return -> float : 1
auto return being -> a : 1
return being a -> derivable : 1
being a derivable -> has : 1
a derivable has -> to : 1
derivable has to -> be : 1
has to be -> heap : 1
has to be -> the : 1
has to be -> if : 1
to be heap -> allocated : 1
be heap allocated -> float : 1
heap allocated float -> another : 1
allocated float another -> programmer : 1
float another programmer -> uses : 1
another programmer uses -> the : 1
programmer uses the -> class : 1
uses the class -> and : 1
the class and -> expects : 1
class and expects -> correct : 1
and expects correct -> copy : 1
expects correct copy -> and : 1
correct copy and -> does : 1
copy and does -> not : 1
and does not -> realize : 1
and does not -> have : 1
and does not -> support : 1
does not realize -> that : 1
not realize that -> the : 1
realize that the -> oil : 1
that the oil -> amount : 1
the oil amount -> applies : 1
oil amount applies -> to : 1
amount applies to -> both : 1
applies to both -> could : 1
to both could -> have : 1
both could have -> been : 1
could have been -> prevented : 1
could have been -> hidden : 1
have been prevented -> if : 1
been prevented if -> the : 1
prevented if the -> interface : 1
if the interface -> were : 1
the interface were -> made : 1
interface were made -> stricter : 1
were made stricter -> by : 1
made stricter by -> preventing : 1
stricter by preventing -> the : 1
by preventing the -> second : 1
preventing the second -> programmer : 1
the second programmer -> will : 2
second programmer will -> have : 2
programmer will have -> to : 2
will have to -> rethink : 1
will have to -> another : 1
have to rethink -> the : 1
to rethink the -> design : 1
rethink the design -> of : 1
the design of -> the : 1
design of the -> algorithm : 1
of the algorithm -> handling : 1
the algorithm handling -> but : 1
algorithm handling but -> she : 1
handling but she -> accidentally : 1
but she accidentally -> introduce : 1
she accidentally introduce -> any : 1
accidentally introduce any -> subtle : 1
introduce any subtle -> boat : 1
any subtle boat -> auto : 1
subtle boat auto -> float : 1
boat auto float -> auto : 1
auto float auto -> return : 1
auto float auto -> epsilon : 1
auto return float -> when : 1
auto return float -> float : 1
return float when -> the : 1
float when the -> other : 1
when the other -> programmer : 1
the other programmer -> tries : 1
other programmer tries -> to : 1
programmer tries to -> copy : 1
tries to copy -> a : 1
to copy a -> boat : 1
copy a boat -> the : 1
a boat the -> second : 1
boat the second -> programmer : 1
have to another -> solution : 1
to another solution -> compliant : 1
another solution compliant -> with : 1
solution compliant with -> the : 1
compliant with the -> limitations : 1
compliant with the -> functions : 1
compliant with the -> compiler : 1
with the limitations -> of : 1
limitations of the -> handling : 1
limitations of the -> stl : 1
of the handling -> and : 1
the handling and -> resource : 1
and resource our -> exceptions : 1
resource our exceptions -> are : 1
our exceptions are -> being : 1
exceptions are being -> used : 1
are being used -> in : 2
being used in -> many : 1
being used in -> the : 3
being used in -> a : 1
used in many -> different : 1
in many different -> ways : 1
many different ways -> in : 1
different ways in -> different : 1
ways in different -> code : 1
in different code -> be : 1
different code be -> this : 1
code be this -> also : 1
be this also -> applies : 1
this also applies -> to : 1
also applies to -> other : 1
applies to other -> languages : 1
to other languages -> which : 1
other languages which -> supports : 1
languages which supports -> one : 1
which supports one -> reason : 1
supports one reason -> is : 1
one reason is -> that : 1
reason is that -> distinct : 1
reason is that -> people : 1
reason is that -> a : 1
is that distinct -> applications : 1
that distinct applications -> can : 1
distinct applications can -> have : 1
applications can have -> vastly : 1
can have vastly -> different : 1
have vastly different -> requirements : 1
vastly different requirements -> when : 1
different requirements when -> dealing : 1
requirements when dealing -> with : 1
when dealing with -> runtime : 1
when dealing with -> a : 1
when dealing with -> heterogeneous : 1
when dealing with -> concurrency : 1
dealing with runtime -> with : 1
with runtime with -> some : 1
runtime with some -> such : 1
with some such -> as : 1
some such as -> a : 1
such as a -> pacemaker : 1
as a pacemaker -> or : 1
a pacemaker or -> a : 1
pacemaker or a -> power : 1
or a power -> plant : 1
a power plant -> control : 1
power plant control -> which : 1
plant control which -> may : 1
control which may -> have : 1
which may have -> a : 1
may have a -> severe : 1
have a severe -> impact : 1
a severe impact -> if : 1
severe impact if -> they : 1
impact if they -> we : 1
if they we -> may : 1
they we may -> have : 1
we may have -> to : 2
may have to -> deal : 1
may have to -> write : 1
have to deal -> with : 1
to deal with -> every : 1
deal with every -> possible : 1
with every possible -> exceptional : 1
every possible exceptional -> such : 1
possible exceptional such -> as : 1
exceptional such as -> running : 1
such as running -> out : 2
as running out -> of : 2
running out of -> and : 1
running out of -> memory : 1
running out of -> following : 1
out of and -> keep : 1
out of and -> global : 1
of and keep -> the : 1
and keep the -> application : 1
keep the application -> in : 1
the application in -> a : 1
application in a -> running : 1
application in a -> distributed : 1
in a running -> some : 1
in a running -> since : 1
in a running -> the : 1
a running some -> applications : 1
running some applications -> even : 1
some applications even -> completely : 1
applications even completely -> stay : 1
even completely stay -> away : 1
completely stay away -> from : 1
stay away from -> using : 1
away from using -> the : 1
from using the -> heap : 1
using the heap -> memory : 1
the heap memory -> as : 1
the heap memory -> is : 1
heap memory as -> the : 1
memory as the -> heap : 1
memory as the -> vector : 1
as the heap -> introduces : 1
the heap introduces -> an : 1
heap introduces an -> uncontrollable : 1
introduces an uncontrollable -> uncertainty : 1
an uncontrollable uncertainty -> as : 1
uncontrollable uncertainty as -> mechanics : 1
uncertainty as mechanics -> of : 1
as mechanics of -> allocating : 1
mechanics of allocating -> new : 1
of allocating new -> memory : 1
allocating new memory -> is : 1
new memory is -> out : 1
memory is out -> of : 1
is out of -> the : 1
out of the -> applications : 1
out of the -> as : 1
out of the -> range : 1
out of the -> mentioned : 1
out of the -> source : 1
out of the -> and : 1
of the applications -> most : 1
the applications most -> these : 1
applications most these -> circumstances : 1
most these circumstances -> could : 1
these circumstances could -> be : 1
circumstances could be -> considered : 1
could be considered -> so : 1
could be considered -> an : 1
could be considered -> the : 1
be considered so -> exceptional : 1
considered so exceptional -> that : 1
so exceptional that -> perfectly : 1
exceptional that perfectly -> okay : 1
that perfectly okay -> to : 1
perfectly okay to -> save : 1
okay to save -> the : 1
to save the -> current : 1
save the current -> state : 1
the current state -> and : 1
the current state -> of : 1
current state and -> quit : 1
state and quit -> by : 1
and quit by -> we : 1
quit by we -> mean : 1
by we mean -> that : 1
by we mean -> a : 1
we mean that -> they : 1
mean that they -> are : 1
that they are -> thrown : 1
that they are -> we : 1
that they are -> just : 1
that they are -> very : 1
they are thrown -> due : 1
are thrown due -> to : 1
thrown due to -> environmental : 1
due to environmental -> such : 1
to environmental such -> as : 1
environmental such as -> running : 1
out of memory -> or : 1
out of memory -> might : 1
of memory or -> disk : 1
memory or disk -> exceptions : 1
or disk exceptions -> should : 1
disk exceptions should -> not : 1
exceptions should not -> be : 1
should not be -> an : 1
not be an -> escape : 1
be an escape -> route : 1
an escape route -> for : 1
escape route for -> buggy : 1
route for buggy -> code : 1
for buggy code -> or : 1
buggy code or -> as : 1
code or as -> some : 1
or as some -> sort : 1
as some sort -> of : 1
some sort of -> signal : 1
some sort of -> smart : 1
some sort of -> when : 1
some sort of -> the : 1
some sort of -> a : 1
some sort of -> connection : 1
sort of signal -> the : 1
of signal the -> valid : 1
signal the valid -> a : 1
the valid a -> look : 1
valid a look -> at : 1
the following if -> the : 2
following if the -> operation : 1
following if the -> template : 1
if the operation -> throws : 1
if the operation -> is : 1
the operation throws -> an : 1
operation throws an -> exception : 1
throws an exception -> due : 1
throws an exception -> if : 1
an exception due -> to : 1
exception due to -> being : 1
due to being -> out : 1
to being out -> of : 1
being out of -> memory : 1
of memory might -> be : 1
memory might be -> a : 1
might be a -> very : 1
might be a -> a : 1
might be a -> more : 1
might be a -> case : 1
be a very -> big : 1
be a very -> efficient : 1
a very big -> member : 1
very big member -> the : 1
big member the -> method : 1
member the method -> will : 1
the method will -> be : 1
method will be -> left : 1
will be left -> in : 1
be left in -> an : 1
left in an -> invalid : 2
in an invalid -> state : 1
in an invalid -> persist : 1
an invalid state -> containing : 1
invalid state containing -> a : 1
state containing a -> copy : 1
containing a copy -> of : 1
a copy of -> from : 1
a copy of -> the : 3
a copy of -> all : 1
copy of from -> and : 1
of from and -> that : 1
from and that -> it : 1
from and that -> call : 1
and that it -> had : 1
and that it -> has : 1
that it had -> leaf : 1
it had leaf -> branch : 1
had leaf branch -> oaktree : 1
leaf branch oaktree -> if : 1
branch oaktree if -> copying : 1
oaktree if copying -> the : 1
if copying the -> branches : 1
copying the branches -> only : 1
the branches only -> the : 1
branches only the -> leafs : 1
only the leafs -> has : 1
the leafs has -> copied : 1
leafs has copied -> and : 1
has copied and -> the : 1
copied and the -> oaktree : 1
and the oaktree -> is : 1
the oaktree is -> left : 1
oaktree is left -> in : 1
is left in -> an : 1
an invalid persist -> all : 1
invalid persist all -> trees : 1
persist all trees -> auto : 1
all trees auto -> auto : 1
trees auto auto -> try : 1
auto auto try -> might : 1
auto try might -> be : 1
try might be -> want : 1
might be want -> the : 1
be want the -> operation : 1
want the operation -> to : 1
the operation to -> preserve : 1
operation to preserve -> the : 1
to preserve the -> valid : 1
preserve the valid -> state : 1
the valid state -> of : 1
valid state of -> it : 1
state of it -> had : 1
of it had -> before : 1
it had before -> the : 1
had before the -> assignment : 1
before the assignment -> operation : 1
the assignment operation -> so : 1
assignment operation so -> that : 1
operation so that -> we : 1
so that we -> can : 5
so that we -> spend : 1
so that we -> have : 2
so that we -> know : 1
that we can -> save : 1
that we can -> now : 1
that we can -> also : 1
that we can -> say : 1
that we can -> write : 2
that we can -> avoid : 1
that we can -> simply : 1
that we can -> allocate : 1
that we can -> rearrange : 1
that we can -> actually : 1
that we can -> perform : 1
that we can -> emulate : 1
that we can -> minimize : 1
that we can -> use : 1
we can save -> all : 1
can save all -> our : 1
save all our -> oak : 1
all our oak -> trees : 1
our oak trees -> we : 1
oak trees we -> are : 1
trees we are -> creating : 1
we are creating -> an : 2
are creating an -> oak : 1
are creating an -> acquire : 1
creating an oak -> tree : 1
an oak tree -> generator : 1
oak tree generator -> and : 1
tree generator and -> can : 1
generator and can -> be : 1
and can be -> fixed : 1
and can be -> generated : 1
and can be -> used : 2
and can be -> really : 1
and can be -> a : 1
can be fixed -> by : 1
be fixed by -> using : 1
fixed by using -> an : 1
by using an -> idiom : 1
by using an -> atomic : 1
using an idiom -> called : 1
an idiom called -> which : 1
idiom called which -> means : 1
called which means -> that : 2
means that we -> perform : 1
means that we -> keep : 1
means that we -> can : 4
means that we -> only : 1
means that we -> could : 1
means that we -> in : 1
means that we -> have : 2
means that we -> cannot : 1
means that we -> never : 1
that we perform -> the : 1
that we perform -> what : 1
we perform the -> operations : 1
perform the operations -> that : 1
the operations that -> might : 1
the operations that -> a : 1
operations that might -> throw : 1
that might throw -> exceptions : 1
might throw exceptions -> before : 1
might throw exceptions -> works : 1
throw exceptions before -> we : 1
exceptions before we -> let : 1
before we let -> the : 1
we let the -> state : 1
let the state -> be : 1
the state be -> modified : 1
state be modified -> by : 1
be modified by -> oaktree : 1
modified by oaktree -> first : 1
by oaktree first -> create : 1
oaktree first create -> local : 1
first create local -> copies : 1
create local copies -> without : 1
local copies without -> modifying : 1
copies without modifying -> the : 1
without modifying the -> oaktree : 1
modifying the oaktree -> copying : 1
the oaktree copying -> may : 1
oaktree copying may -> but : 1
copying may but -> this : 1
may but this -> oaktree : 1
but this oaktree -> will : 1
this oaktree will -> still : 1
oaktree will still -> be : 1
will still be -> in : 1
will still be -> created : 1
still be in -> a : 1
be in a -> valid : 1
in a valid -> auto : 1
in a valid -> the : 1
a valid auto -> leafs : 1
valid auto leafs -> auto : 1
auto leafs auto -> branches : 1
leafs auto branches -> no : 1
auto branches no -> exceptions : 1
branches no exceptions -> we : 1
no exceptions we -> can : 1
exceptions we can -> now : 1
we can now -> safely : 1
we can now -> use : 3
we can now -> find : 1
we can now -> estimate : 1
we can now -> define : 1
we can now -> let : 1
we can now -> start : 1
we can now -> overload : 1
we can now -> write : 1
can now safely -> the : 1
now safely the -> state : 1
safely the state -> of : 1
the state of -> this : 1
the state of -> the : 1
state of this -> object : 1
of this object -> by : 1
this object by -> return : 1
object by return -> that : 1
by return that -> the : 1
return that the -> destructors : 1
return that the -> function : 1
that the destructors -> of : 1
the destructors of -> all : 1
destructors of all -> the : 1
of all the -> local : 1
of all the -> data : 1
of all the -> we : 1
of all the -> with : 1
of all the -> is : 1
of all the -> difficulties : 1
all the local -> variables : 2
the local variables -> are : 1
the local variables -> this : 1
local variables are -> still : 1
local variables are -> owned : 1
variables are still -> meaning : 1
are still meaning -> that : 1
still meaning that -> any : 1
meaning that any -> resources : 1
that any resources -> this : 1
any resources this -> allocated : 1
resources this allocated -> by : 1
this allocated by -> and : 1
allocated by and -> will : 1
by and will -> be : 1
will be the -> destruction : 1
will be the -> topmost : 1
will be the -> counter : 1
will be the -> same : 1
will be the -> context : 1
be the destruction -> of : 1
the destruction of -> objects : 1
of objects is -> meaning : 1
objects is meaning -> that : 1
is meaning that -> we : 1
meaning that we -> have : 2
we have full -> control : 1
have full control -> over : 1
full control over -> and : 1
control over and -> in : 1
over and in -> what : 1
over and in -> each : 1
and in what -> that : 1
and in what -> states : 1
in what that -> we : 1
what that we -> have : 1
we have acquired -> are : 1
have acquired are -> being : 1
acquired are being -> is : 1
are being is -> further : 1
being is further -> illustrated : 1
is further illustrated -> in : 1
further illustrated in -> the : 1
illustrated in the -> following : 4
the following where -> the : 1
the following where -> is : 1
the following where -> a : 1
the following where -> it : 1
following where the -> mutex : 1
where the mutex -> variable : 1
the mutex variable -> always : 1
mutex variable always -> unlocked : 1
variable always unlocked -> when : 1
always unlocked when -> exiting : 1
unlocked when exiting -> the : 1
when exiting the -> function : 1
exiting the function -> as : 1
the function as -> the : 1
function as the -> lock : 1
as the lock -> guard : 1
the lock guard -> releases : 1
lock guard releases -> it : 1
guard releases it -> when : 1
releases it when -> we : 1
it when we -> exit : 1
when we exit -> the : 1
we exit the -> regardless : 1
exit the regardless -> of : 1
the regardless of -> how : 1
regardless of how -> and : 1
regardless of how -> the : 1
of how and -> where : 1
how and where -> we : 1
and where we -> int : 1
where we int -> bool : 1
we int bool -> auto : 1
int bool auto -> guard : 1
int bool auto -> bool : 1
bool auto guard -> the : 1
auto guard the -> mutex : 1
guard the mutex -> is : 1
the mutex is -> if : 1
the mutex is -> sometimes : 1
the mutex is -> already : 1
the mutex is -> also : 1
mutex is if -> the : 1
is if the -> guard : 1
is if the -> class : 1
if the guard -> automatically : 2
the guard automatically -> releases : 3
guard automatically releases -> the : 2
guard automatically releases -> if : 1
automatically releases the -> mutex : 2
releases the mutex -> at : 2
the mutex at -> early : 1
the mutex at -> function : 1
mutex at early -> if : 1
at early if -> the : 1
early if the -> guard : 1
automatically releases if -> an : 1
releases if an -> exception : 1
if an exception -> is : 3
an exception is -> throw : 1
an exception is -> thrown : 3
an exception is -> is : 1
exception is throw -> the : 1
is throw the -> guard : 1
throw the guard -> automatically : 1
mutex at function -> lifetime : 1
at function lifetime -> of : 1
function lifetime of -> and : 1
lifetime of and -> resource : 1
of and resource -> acquisition : 1
and resource acquisition -> are : 1
and resource acquisition -> in : 2
resource acquisition are -> fundamental : 1
acquisition are fundamental -> concepts : 1
are fundamental concepts -> in : 1
fundamental concepts in -> which : 1
concepts in which -> we : 1
in which we -> will : 1
in which we -> use : 1
in which we -> pass : 2
which we will -> cover : 3
which we will -> try : 2
which we will -> explore : 1
which we will -> describe : 1
which we will -> not : 1
we will cover -> later : 3
we will cover -> is : 1
we will cover -> some : 1
we will cover -> in : 1
will cover later -> on : 1
will cover later -> in : 2
cover later on -> in : 1
later on in -> this : 3
on in this -> versus : 1
on in this -> chapter : 2
on in this -> we : 1
in this versus -> error : 1
this versus error -> the : 1
versus error the -> mid : 1
error the mid -> using : 1
the mid using -> exceptions : 1
mid using exceptions -> in : 1
using exceptions in -> affected : 1
exceptions in affected -> performance : 1
in affected performance -> even : 1
affected performance even -> if : 1
performance even if -> they : 1
even if they -> code : 1
even if they -> have : 1
even if they -> are : 2
even if they -> look : 1
if they code -> was : 1
they code was -> often : 1
code was often -> written : 1
was often written -> using : 1
often written using -> error : 1
written using error -> code : 1
using error code -> return : 1
error code return -> values : 1
code return values -> to : 1
return values to -> indicate : 1
values to indicate -> bloating : 1
to indicate bloating -> the : 1
indicate bloating the -> code : 1
bloating the code -> base : 1
code base with -> returning : 1
code base with -> a : 1
base with returning -> error : 1
with returning error -> codes : 1
returning error codes -> and : 1
error codes and -> error : 1
codes and error -> code : 1
and error code -> handling : 1
error code handling -> was : 1
code handling was -> simply : 1
handling was simply -> the : 1
was simply the -> only : 1
simply the only -> way : 1
the only way -> of : 1
only way of -> writing : 1
way of writing -> and : 1
of writing and -> modern : 1
writing and modern -> exceptions : 1
and modern exceptions -> only : 1
modern exceptions only -> affect : 1
exceptions only affect -> the : 1
only affect the -> performance : 1
affect the performance -> when : 1
the performance when -> considering : 1
the performance when -> iterating : 1
performance when considering -> all : 1
when considering all -> the : 1
considering all the -> thrown : 1
all the thrown -> exceptions : 1
the thrown exceptions -> are : 1
thrown exceptions are -> rare : 1
exceptions are rare -> enough : 1
are rare enough -> to : 1
rare enough to -> quit : 1
enough to quit -> the : 1
to quit the -> current : 1
quit the current -> we : 1
the current we -> can : 1
current we can -> safely : 1
we can safely -> use : 1
can safely use -> exceptions : 1
safely use exceptions -> even : 1
use exceptions even -> in : 1
exceptions even in -> systems : 1
even in systems -> and : 1
in systems and -> benefit : 1
systems and benefit -> from : 1
and benefit from -> all : 1
benefit from all -> the : 1
from all the -> advantages : 1
all the advantages -> of : 1
the advantages of -> using : 3
the advantages of -> semantics : 1
the advantages of -> stl : 1
the advantages of -> the : 1
advantages of using -> exceptions : 1
advantages of using -> algorithm : 1
advantages of using -> them : 1
advantages of using -> will : 1
of using exceptions -> instead : 1
using exceptions instead -> of : 1
exceptions instead of -> error : 1
instead of error -> used : 1
of error used -> in : 1
in this mentioned -> does : 1
this mentioned does -> not : 1
mentioned does not -> provide : 1
does not provide -> more : 1
does not provide -> postfixes : 1
does not provide -> a : 1
does not provide -> any : 1
not provide more -> than : 1
provide more than -> the : 1
the bare necessities -> in : 1
bare necessities in -> terms : 1
necessities in terms -> of : 1
in terms of -> in : 1
in terms of -> by : 1
in terms of -> do : 1
in terms of -> which : 1
in terms of -> standard : 1
in terms of -> algorithms : 1
in terms of -> using : 1
in terms of -> computer : 1
in terms of -> reading : 1
in terms of -> the : 1
terms of in -> this : 1
of in this -> we : 1
of in this -> example : 1
this we have -> to : 1
this we have -> introduced : 1
this we have -> seen : 1
this we have -> chosen : 1
we have to -> rely : 2
we have to -> do : 2
we have to -> explicitly : 3
we have to -> manually : 1
we have to -> measure : 1
we have to -> use : 2
we have to -> calculate : 1
we have to -> the : 1
we have to -> take : 1
we have to -> think : 1
we have to -> remember : 1
we have to -> go : 1
we have to -> get : 1
we have to -> create : 2
we have to -> declare : 1
we have to -> specify : 1
we have to -> write : 1
we have to -> perform : 1
on external libraries -> where : 1
external libraries where -> the : 1
libraries where the -> most : 1
where the most -> commonly : 1
commonly used library -> in : 1
used library in -> the : 1
library in the -> world : 1
in the world -> of : 1
the world of -> is : 1
world of is -> probably : 1
of is probably -> the : 1
is probably the -> boost : 1
is probably the -> most : 3
is probably the -> way : 1
probably the boost -> library : 1
the boost library -> in : 2
the boost library -> for : 1
the boost library -> where : 1
the boost library -> simplest : 1
boost library in -> order : 1
boost library in -> which : 1
library in order -> to : 1
order to keep -> the : 1
to keep the -> number : 1
to keep the -> size : 1
to keep the -> elements : 1
keep the number -> of : 1
the number of -> used : 1
the number of -> values : 4
the number of -> and : 2
the number of -> animals : 1
the number of -> countries : 1
the number of -> which : 1
the number of -> allocations : 1
the number of -> images : 1
the number of -> elements : 5
the number of -> collisions : 1
the number of -> hits : 1
the number of -> returned : 1
the number of -> users : 3
the number of -> times : 1
the number of -> playing : 1
the number of -> occurrences : 1
the number of -> steps : 2
the number of -> cache : 1
the number of -> owners : 1
the number of -> contained : 1
the number of -> booleans : 1
the number of -> cpu : 3
the number of -> shared : 1
the number of -> hardware : 1
the number of -> threads : 2
the number of -> cores : 3
the number of -> supported : 1
the number of -> chunks : 1
the number of -> dimensions : 1
number of used -> libraries : 1
of used libraries -> we : 1
used libraries we -> will : 1
libraries we will -> use : 1
we will use -> the : 4
we will use -> that : 1
we will use -> a : 1
we will use -> to : 1
we will use -> boost : 1
we will use -> is : 1
we will use -> traditional : 1
will use the -> boost : 2
will use the -> default : 1
will use the -> from : 1
will use the -> excellent : 1
use the boost -> library : 4
use the boost -> computes : 1
boost library for -> optimizations : 1
library for optimizations -> such : 1
for optimizations such -> as : 1
optimizations such as -> simd : 1
such as simd -> and : 1
as simd and -> this : 1
simd and this -> we : 1
and this we -> will : 3
this we will -> use : 3
this we will -> take : 2
this we will -> explain : 1
this we will -> look : 1
this we will -> focus : 1
this we will -> see : 3
this we will -> dig : 1
this we will -> show : 1
boost library where -> the : 1
library where the -> standard : 1
where the standard -> library : 1
the standard library -> is : 2
the standard library -> help : 1
the standard library -> wrap : 1
the standard library -> before : 1
the standard library -> as : 1
the standard library -> but : 1
standard library is -> not : 1
standard library is -> overloaded : 1
library is not -> many : 1
is not many -> upcoming : 1
not many upcoming -> parts : 1
many upcoming parts -> of : 1
upcoming parts of -> the : 1
parts of the -> standard : 1
parts of the -> boost : 1
parts of the -> program : 1
of the standard -> are : 1
of the standard -> the : 2
of the standard -> containers : 1
the standard are -> available : 1
standard are available -> today : 1
are available today -> in : 1
available today in -> boost : 1
today in boost -> and : 1
in boost and -> we : 1
boost and we -> will : 1
and we will -> not : 2
and we will -> talk : 1
and we will -> then : 1
and we will -> see : 1
we will not -> avoid : 1
we will not -> distinguish : 1
we will not -> focus : 1
we will not -> discuss : 1
we will not -> spend : 1
we will not -> cover : 1
will not avoid -> any : 1
not avoid any -> libraries : 1
avoid any libraries -> planned : 1
any libraries planned -> for : 1
libraries planned for -> inclusion : 1
planned for inclusion -> in : 1
for inclusion in -> the : 1
inclusion in the -> will : 1
in the will -> only : 2
the will only -> use : 1
the will only -> evaluate : 1
will only use -> the : 1
will only use -> our : 1
only use the -> parts : 1
only use the -> name : 1
use the parts -> of : 1
the parts of -> the : 2
the parts of -> a : 1
of the boost -> which : 1
the boost which -> means : 1
boost which means -> that : 1
means that using -> them : 1
that using them -> yourself : 1
using them yourself -> does : 1
them yourself does -> not : 1
yourself does not -> require : 1
does not require -> any : 1
not require any -> specific : 1
not require any -> explicitly : 1
require any specific -> build : 1
any specific build -> you : 1
specific build you -> just : 1
build you just -> have : 1
you just have -> to : 1
just have to -> include : 1
have to include -> the : 1
to include the -> specified : 1
include the specified -> header : 1
the specified header -> this : 1
specified header this -> chapter : 1
header this chapter -> we : 1
this chapter we -> have : 2
this chapter we -> will : 2
chapter we have -> highlighted : 1
chapter we have -> covered : 1
we have highlighted -> some : 1
have highlighted some -> features : 1
highlighted some features -> and : 1
some features and -> drawbacks : 1
features and drawbacks -> of : 1
and drawbacks of -> how : 1
drawbacks of how -> it : 1
of how it -> evolved : 1
of how it -> when : 1
of how it -> initialize : 1
of how it -> looks : 1
how it evolved -> to : 1
it evolved to -> the : 1
evolved to the -> state : 1
to the state -> it : 1
the state it -> is : 1
state it is -> in : 1
state it is -> by : 1
it is in -> we : 1
it is in -> const : 1
is in we -> discussed : 1
in we discussed -> the : 1
we discussed the -> advantages : 1
discussed the advantages -> and : 1
the advantages and -> disadvantages : 1
disadvantages of compared -> with : 1
of compared with -> other : 1
with other both -> from : 1
other both from -> the : 1
both from the -> perspective : 1
from the perspective -> of : 1
the perspective of -> performance : 1
perspective of performance -> and : 1
performance and some -> myths : 1
and some myths -> about : 1
some myths about -> and : 1
myths about and -> exceptions : 1
about and exceptions -> were : 1
and exceptions were -> also : 1
exceptions were also -> learned : 1
were also learned -> the : 1
also learned the -> importance : 1
learned the importance -> of : 1
importance of strict -> resource : 1
of strict resource -> and : 1
strict resource and -> correct : 1
resource and correct -> exception : 1
and correct exception -> this : 1
correct exception this -> we : 1
exception this we -> will : 1
we will take -> an : 1
we will take -> a : 3
will take an -> look : 1
take an look -> at : 1
an look at -> some : 1
at some modern -> concepts : 1
some modern concepts -> such : 1
modern concepts such -> forwarding : 1
concepts such forwarding -> and : 1
such forwarding and -> lambda : 1
forwarding and lambda -> of : 1
and lambda of -> these : 1
lambda of these -> concepts : 1
of these concepts -> still : 1
these concepts still -> confuse : 1
concepts still confuse -> even : 1
still confuse even -> experienced : 1
confuse even experienced -> programmers : 1
even experienced programmers -> and : 1
experienced programmers and -> therefore : 1
programmers and therefore -> we : 1
and therefore we -> will : 1
and therefore we -> need : 2
and therefore we -> may : 1
therefore we will -> look : 1
will look into -> both : 1
will look into -> strategies : 1
will look into -> the : 1
look into both -> their : 1
into both their -> use : 1
both their use -> cases : 1
their use cases -> and : 1
use cases and -> how : 1
cases and how -> they : 1
and how they -> work : 2
and how they -> can : 1
how they work -> under : 1
how they work -> is : 1
they work under -> the : 1
work under the -> type : 1
under the type -> deduction : 1
the type deduction -> with : 1
the auto the -> introduction : 1
auto the introduction -> of : 1
the introduction of -> the : 1
the introduction of -> there : 1
the introduction of -> lambda : 1
the introduction of -> metaprogramming : 1
introduction of the -> keyword : 1
of the keyword -> in : 1
the keyword in -> there : 1
the keyword in -> you : 1
keyword in there -> has : 1
in there has -> been : 1
there has been -> a : 1
been a lot -> of : 1
lot of confusion -> in : 1
of confusion in -> the : 1
confusion in the -> community : 1
in the community -> about : 1
the community about -> how : 1
community about how -> to : 1
about how to -> use : 1
about how to -> choose : 1
how to use -> the : 5
how to use -> modern : 1
how to use -> inform : 1
how to use -> preallocated : 1
how to use -> a : 3
how to use -> metaprogramming : 1
how to use -> compile : 1
how to use -> proxy : 2
how to use -> hidden : 1
how to use -> in : 1
to use the -> different : 1
to use the -> where : 1
to use the -> hardware : 1
to use the -> user : 1
to use the -> boost : 1
to use the -> new : 1
to use the -> algorithm : 1
to use the -> basic : 1
to use the -> weak : 1
to use the -> heap : 1
to use the -> efficient : 1
to use the -> index : 1
to use the -> class : 1
to use the -> stack : 1
to use the -> mutex : 1
to use the -> graphical : 1
to use the -> parallel : 2
to use the -> system : 1
use the different -> flavors : 1
the different flavors -> of : 1
different flavors of -> such : 1
flavors of such -> as : 1
as and auto -> in : 1
and auto in -> function : 1
in function discouraged -> by : 1
function discouraged by -> some : 1
discouraged by some -> in : 1
by some in -> our : 1
some in our -> experience : 1
in our experience -> the : 1
our experience the -> use : 1
experience the use -> of : 1
the use of -> in : 1
the use of -> preprocessor : 1
the use of -> algorithms : 1
the use of -> dynamic : 1
the use of -> heap : 1
the use of -> mutable : 1
the use of -> shared : 1
the use of -> and : 1
use of in -> function : 1
of in function -> signatures : 1
in function signatures -> vastly : 1
function signatures vastly -> increases : 1
signatures vastly increases -> readability : 1
vastly increases readability -> when : 1
increases readability when -> browsing : 1
readability when browsing -> and : 1
when browsing and -> viewing : 1
browsing and viewing -> header : 1
and viewing header -> is : 1
viewing header is -> how : 1
header is how -> the : 1
is how the -> looks : 1
is how the -> class : 1
is how the -> code : 1
how the looks -> compared : 1
the looks compared -> to : 1
looks compared to -> the : 1
compared to the -> old : 1
compared to the -> second : 1
compared to the -> first : 2
compared to the -> speed : 1
compared to the -> amount : 1
compared to the -> a : 1
compared to the -> number : 1
compared to the -> big : 1
compared to the -> here : 1
compared to the -> thanks : 1
compared to the -> worse : 1
compared to the -> as : 1
to the old -> syntax : 1
the old syntax -> with : 1
old syntax with -> explicit : 1
syntax with explicit -> syntax : 2
with explicit syntax -> with : 2
explicit syntax with -> explicit : 1
explicit syntax with -> foo : 1
syntax with foo -> const : 1
with foo const -> return : 1
foo const return -> const : 2
const return const -> return : 3
return const return -> return : 3
return const return -> auto : 1
const return return -> int : 3
const return return -> return : 1
return return int -> foo : 1
return return int -> syntax : 1
return return int -> can : 1
return int foo -> const : 1
int foo const -> return : 1
return int syntax -> can : 1
int syntax can -> be : 1
syntax can be -> used : 1
be used both -> with : 1
used both with -> and : 1
both with and -> without : 1
with and without -> trailing : 1
with and without -> captures : 1
and without trailing -> return : 1
without trailing return -> the : 1
trailing return the -> trailing : 1
return the trailing -> return : 1
the trailing return -> is : 1
trailing return is -> necessary : 1
return is necessary -> if : 1
is necessary if -> you : 1
necessary if you -> put : 1
if you put -> the : 1
you put the -> function : 1
put the function -> definition : 1
the function definition -> in : 1
function definition in -> the : 1
definition in the -> file : 1
in the file -> instead : 1
the file instead -> of : 1
file instead of -> in : 1
instead of in -> the : 1
instead of in -> like : 1
instead of in -> this : 1
in the header -> that : 1
in the header -> and : 1
the header that -> the : 1
header that the -> can : 1
that the can -> also : 1
that the can -> only : 1
the can also -> be : 1
can also be -> used : 5
can also be -> reassigned : 1
can also be -> stored : 1
can also be -> expressed : 1
can also be -> configured : 1
can also be -> cases : 1
can also be -> of : 1
also be used -> with : 1
also be used -> in : 1
also be used -> for : 1
also be used -> on : 1
also be used -> to : 1
used with free -> variants : 1
with free variants -> of : 1
free variants of -> and : 1
variants of and -> c : 1
of and c -> the : 1
and c the -> same : 1
c the same -> const : 1
the same const -> deduced : 1
same const deduced -> const : 1
const deduced const -> int : 1
const deduced const -> const : 1
deduced const int -> auto : 1
const int auto -> with : 1
int auto with -> const : 1
auto with const -> explicite : 1
with const explicite -> const : 1
const explicite const -> deduced : 1
explicite const deduced -> const : 1
deduced const const -> trailing : 1
const const trailing -> const : 1
const trailing const -> explicite : 1
trailing const explicite -> deduced : 1
const explicite deduced -> trailing : 1
explicite deduced trailing -> explicite : 1
deduced trailing explicite -> auto : 1
trailing explicite auto -> for : 1
explicite auto for -> introduction : 1
auto for introduction -> of : 1
for introduction of -> in : 1
introduction of in -> has : 1
of in has -> initiated : 1
in has initiated -> quite : 1
has initiated quite -> a : 1
initiated quite a -> debate : 1
quite a debate -> among : 1
a debate among -> many : 1
debate among many -> people : 1
among many people -> think : 1
many people think -> it : 1
people think it -> reduces : 1
think it reduces -> or : 1
it reduces or -> even : 1
reduces or even -> that : 1
or even that -> it : 1
even that it -> makes : 1
that it makes -> similar : 1
it makes similar -> to : 1
makes similar to -> a : 1
similar to a -> dynamically : 1
to a dynamically -> typed : 1
a dynamically typed -> even : 1
dynamically typed even -> if : 1
typed even if -> we : 1
even if we -> tend : 1
even if we -> use : 1
even if we -> are : 1
even if we -> have : 1
even if we -> only : 1
if we tend -> to : 1
we tend to -> not : 1
we tend to -> use : 1
tend to not -> participate : 1
to not participate -> in : 1
not participate in -> those : 1
participate in those -> our : 1
in those our -> personal : 1
those our personal -> opinion : 1
our personal opinion -> is : 1
personal opinion is -> that : 1
opinion is that -> you : 1
is that you -> should : 1
you should always -> use : 1
you should always -> strive : 1
should always use -> in : 1
always use in -> our : 1
use in our -> it : 1
in our it -> makes : 1
in our it -> gives : 1
our it makes -> the : 1
it makes the -> code : 1
it makes the -> caller : 1
makes the code -> safer : 1
makes the code -> much : 1
the code safer -> and : 1
code safer and -> less : 1
safer and less -> littered : 1
and less littered -> with : 1
less littered with -> prefer : 1
littered with prefer -> to : 1
with prefer to -> use : 1
prefer to use -> auto : 1
to use auto -> for : 1
use auto for -> local : 1
auto for local -> variables : 1
for local variables -> using : 1
for local variables -> are : 1
local variables using -> the : 1
variables using the -> initialization : 1
using the initialization -> this : 1
the initialization this -> means : 1
initialization this means -> that : 1
this means that -> we : 5
this means that -> if : 3
this means that -> any : 1
this means that -> the : 1
this means that -> it : 1
this means that -> a : 1
this means that -> no : 1
this means that -> an : 1
this means that -> you : 1
this means that -> for : 1
that we keep -> the : 1
we keep the -> variable : 1
keep the variable -> on : 1
the variable on -> the : 1
variable on the -> followed : 1
variable on the -> control : 1
variable on the -> other : 1
on the followed -> by : 1
the followed by -> an : 1
followed by an -> equal : 1
followed by an -> object : 1
by an equal -> and : 1
an equal and -> then : 1
equal and then -> the : 1
and then the -> type : 1
then the type -> on : 1
the type on -> the : 1
type on the -> right : 1
type on the -> heap : 1
on the right -> like : 1
on the right -> we : 1
the right like -> i : 1
right like i -> x : 1
like i x -> y : 1
i x y -> z : 1
x y z -> copy : 1
y z copy -> elision : 1
z copy elision -> guarantees : 1
copy elision guarantees -> introduced : 1
elision guarantees introduced -> in : 1
guarantees introduced in -> the : 1
introduced in the -> x : 1
introduced in the -> as : 1
in the x -> identical : 1
the x identical -> that : 1
x identical that -> the : 1
identical that the -> language : 1
that the language -> guarantees : 1
the language guarantees -> that : 1
language guarantees that -> there : 1
guarantees that there -> is : 1
that there is -> no : 1
that there is -> a : 3
that there is -> hardly : 1
that there is -> now : 1
there is no -> temporary : 1
there is no -> room : 1
there is no -> need : 3
there is no -> function : 1
there is no -> longer : 1
there is no -> doubt : 1
there is no -> risk : 3
there is no -> guarantee : 3
there is no -> available : 1
there is no -> way : 5
there is no -> undefined : 1
there is no -> dependency : 1
there is no -> more : 1
there is no -> true : 1
there is no -> equivalent : 1
there is no -> stl : 1
is no temporary -> object : 1
no temporary object -> that : 1
temporary object that -> needs : 1
object that needs -> to : 1
that needs to -> be : 3
that needs to -> enter : 1
that needs to -> send : 1
needs to be -> moved : 1
needs to be -> and : 1
needs to be -> copied : 2
needs to be -> following : 1
needs to be -> written : 1
needs to be -> stored : 1
needs to be -> updated : 1
needs to be -> placed : 1
needs to be -> big : 1
needs to be -> this : 1
needs to be -> executed : 1
needs to be -> protected : 2
needs to be -> fulfilled : 1
needs to be -> unlocked : 1
needs to be -> implemented : 1
needs to be -> informed : 1
to be moved -> or : 1
to be moved -> from : 1
be moved or -> copied : 1
moved or copied -> in : 1
moved or copied -> is : 1
or copied in -> this : 1
copied in this -> means : 1
in this means -> that : 1
can now use -> the : 1
can now use -> our : 1
can now use -> destruct : 1
can now use -> it : 1
now use the -> initialization : 1
now use the -> included : 1
use the initialization -> style : 1
the initialization style -> without : 1
initialization style without -> worrying : 1
style without worrying -> about : 1
without worrying about -> performance : 1
without worrying about -> synchronizing : 1
worrying about performance -> and : 1
about performance and -> we : 1
performance and we -> can : 1
and we can -> also : 1
and we can -> see : 1
and we can -> overload : 1
and we can -> therefore : 1
and we can -> focus : 1
we can also -> use : 1
we can also -> initialize : 1
we can also -> conclude : 1
we can also -> or : 1
can also use -> it : 1
can also use -> all : 1
can also use -> the : 1
also use it -> for : 1
use it for -> help : 1
use it for -> the : 1
use it for -> any : 1
it for help -> us : 1
for help us -> using : 1
help us using -> the : 1
us using the -> correct : 1
using the correct -> type : 1
the correct type -> for : 1
correct type for -> our : 1
type for our -> we : 1
for our we -> still : 1
our we still -> need : 1
we still need -> to : 2
still need to -> do : 1
still need to -> type : 1
need to do -> is : 3
need to do -> it : 1
need to do -> that : 1
need to do -> in : 1
need to do -> some : 1
to do is -> to : 6
do is to -> express : 1
do is to -> wrap : 1
do is to -> implement : 1
do is to -> to : 1
do is to -> perform : 1
do is to -> make : 1
is to express -> how : 1
to express how -> we : 1
express how we -> intent : 1
how we intent -> to : 1
we intent to -> use : 1
intent to use -> a : 1
to use a -> variable : 2
to use a -> simple : 1
to use a -> lambda : 1
to use a -> plus : 1
to use a -> class : 1
to use a -> owner : 1
to use a -> which : 1
to use a -> smaller : 1
to use a -> container : 1
to use a -> custom : 2
to use a -> proxy : 1
to use a -> mutex : 1
to use a -> thread : 1
to use a -> large : 1
to use a -> regular : 1
use a variable -> by : 1
use a variable -> for : 1
a variable by -> we : 1
variable by we -> need : 1
by we need -> a : 1
we need a -> reference : 1
we need a -> function : 1
we need a -> custom : 1
need a reference -> or : 1
a reference or -> a : 1
reference or a -> and : 1
or a and -> if : 1
a and if -> we : 1
and if we -> want : 1
and if we -> plot : 1
and if we -> run : 1
if we want -> to : 5
want to modify -> the : 1
to modify the -> variable : 1
modify the variable -> or : 1
the variable or -> just : 1
variable or just -> read : 1
or just read -> from : 1
just read from -> const : 1
read from const -> denoted : 1
from const denoted -> has : 1
const denoted has -> the : 1
denoted has the -> ability : 1
has the ability -> to : 5
ability to bind -> to : 1
to bind to -> the : 1
bind to the -> created : 1
to the created -> variable : 1
the created variable -> is : 1
created variable is -> always : 1
variable is always -> we : 1
variable is always -> updated : 1
is always we -> believe : 1
is always we -> always : 1
always we believe -> that : 1
believe that the -> const : 1
believe that the -> c : 1
that the const -> reference : 1
the const reference -> should : 1
the const reference -> is : 1
const reference should -> be : 1
reference should be -> the : 1
should be the -> default : 1
should be the -> case : 1
should be the -> first : 1
be the default -> choice : 1
the default choice -> for : 1
default choice for -> variables : 1
choice for variables -> you : 1
for variables you -> want : 1
variables you want -> to : 1
want to the -> const : 1
to the const -> reference : 1
to the const -> allows : 1
to the const -> auto : 1
const reference is -> bound : 1
reference is bound -> to : 1
is bound to -> a : 1
bound to a -> temporary : 1
to a temporary -> the : 1
a temporary the -> lifetime : 1
temporary the lifetime -> of : 1
the lifetime of -> the : 5
the lifetime of -> a : 2
the lifetime of -> an : 1
the lifetime of -> automatic : 1
lifetime of the -> temporary : 1
lifetime of the -> this : 1
lifetime of the -> user : 1
lifetime of the -> connection : 1
lifetime of the -> the : 1
of the temporary -> will : 1
of the temporary -> string : 1
the temporary will -> be : 1
temporary will be -> extended : 1
temporary will be -> also : 1
will be extended -> to : 1
be extended to -> the : 1
be extended to -> support : 1
extended to the -> lifetime : 1
to the lifetime -> of : 1
of the this -> is : 1
of the this -> algorithm : 1
of the this -> mapping : 1
of the this -> will : 1
of the this -> may : 1
the this is -> demonstrated : 1
the this is -> usually : 1
the this is -> where : 1
the this is -> the : 3
the this is -> a : 2
the this is -> achieved : 2
the this is -> identical : 1
the this is -> necessary : 1
the this is -> just : 1
the this is -> expected : 1
this is demonstrated -> in : 1
is demonstrated in -> the : 1
demonstrated in the -> following : 2
the following const -> const : 1
the following const -> int : 1
the following const -> return : 1
following const const -> str : 1
const const str -> a : 1
const const str -> return : 1
const str a -> a : 1
str a a -> b : 1
a a b -> returns : 1
a a b -> c : 1
a b returns -> a : 1
b returns a -> str : 1
returns a str -> goes : 1
a str goes -> out : 1
str goes out -> of : 1
goes out of -> temporary : 1
goes out of -> and : 1
goes out of -> its : 1
goes out of -> scope : 1
out of temporary -> will : 1
of temporary will -> be : 1
will be also -> possible : 1
be also possible -> to : 1
possible to end -> up : 1
to end up -> with : 1
end up with -> a : 2
end up with -> which : 1
end up with -> the : 1
end up with -> three : 1
end up with -> different : 1
up with a -> const : 1
up with a -> straight : 1
up with a -> hypothesis : 1
up with a -> proxy : 1
with a const -> reference : 1
with a const -> references : 1
a const reference -> by : 1
a const reference -> as : 1
const reference by -> using : 1
reference by using -> this : 1
by using this -> can : 1
using this can -> be : 1
be seen in -> the : 3
seen in the -> following : 4
seen in the -> previous : 1
seen in the -> the : 1
seen in the -> preceding : 1
the following auto -> foo : 1
the following auto -> auto : 1
the following auto -> int : 1
the following auto -> return : 1
following auto foo -> cref : 1
auto foo cref -> cref : 1
foo cref cref -> is : 1
cref cref is -> a : 1
cref is a -> const : 1
is a const -> mref : 1
is a const -> or : 1
is a const -> yet : 1
is a const -> auto : 1
a const mref -> mref : 1
const mref mref -> is : 1
mref mref is -> a : 1
mref is a -> mutable : 1
a mutable though -> this : 1
mutable though this -> is : 1
though this is -> perfectly : 1
though this is -> probably : 1
this is perfectly -> we : 1
is perfectly we -> prefer : 1
perfectly we prefer -> to : 1
we prefer to -> always : 1
prefer to always -> explicitly : 1
to always explicitly -> express : 1
always explicitly express -> that : 1
explicitly express that -> we : 1
express that we -> are : 1
we are dealing -> with : 3
are dealing with -> a : 1
are dealing with -> very : 1
are dealing with -> at : 1
are dealing with -> the : 1
dealing with a -> const : 1
dealing with a -> template : 1
a const references -> by : 1
const references by -> and : 1
references by and -> more : 1
by and more -> we : 1
and more we -> leave : 1
more we leave -> to : 1
we leave to -> denote : 1
leave to denote -> mutable : 1
to denote mutable -> contrast : 1
to denote mutable -> use : 1
denote mutable contrast -> to : 1
mutable contrast to -> a : 1
contrast to a -> const : 1
contrast to a -> class : 1
to a const -> a : 1
a const a -> mutable : 1
const a mutable -> reference : 1
a mutable reference -> cannot : 1
a mutable reference -> or : 1
mutable reference cannot -> bind : 1
reference cannot bind -> to : 1
cannot bind to -> a : 1
bind to a -> we : 1
to a we -> use : 1
to a we -> will : 1
to a we -> are : 1
a we use -> to : 1
we use to -> denote : 1
use to denote -> mutable : 1
denote mutable use -> mutable : 1
mutable use mutable -> references : 1
use mutable references -> only : 1
mutable references only -> when : 1
references only when -> you : 1
only when you -> intent : 1
when you intent -> to : 1
you intent to -> change : 1
intent to change -> the : 1
to change the -> object : 1
change the object -> it : 1
the object it -> called : 1
the object it -> points : 2
the object it -> will : 1
the object it -> should : 1
object it called -> a : 1
it called a -> forwarding : 1
called a forwarding -> reference : 1
a forwarding reference -> referred : 1
a forwarding reference -> and : 1
forwarding reference referred -> to : 1
reference referred to -> as : 1
referred to as -> it : 1
referred to as -> rule : 1
referred to as -> the : 3
referred to as -> numbers : 1
referred to as -> hash : 1
referred to as -> examples : 1
referred to as -> small : 1
referred to as -> and : 1
it can bind -> to : 1
can bind to -> anything : 1
bind to anything -> which : 1
to anything which -> makes : 1
anything which makes -> it : 1
which makes it -> useful : 1
which makes it -> possible : 2
which makes it -> a : 1
makes it useful -> for : 1
it useful for -> certain : 1
useful for certain -> forwarding : 1
for certain forwarding -> references : 1
certain forwarding references -> just : 1
forwarding references just -> like : 1
references just like -> const : 1
just like const -> extend : 1
like const extend -> the : 1
const extend the -> lifetime : 1
extend the lifetime -> of : 1
lifetime of a -> but : 1
lifetime of a -> resource : 1
of a but -> in : 1
of a but -> perfectly : 1
of a but -> a : 1
of a but -> there : 1
a but in -> contrast : 1
a but in -> this : 1
but in contrast -> to : 1
in contrast to -> the : 2
in contrast to -> a : 1
in contrast to -> using : 1
in contrast to -> for : 1
contrast to the -> const : 1
contrast to the -> simple : 1
the const allows -> you : 1
const allows you -> to : 1
allows you to -> mutate : 1
you to mutate -> objects : 1
to mutate objects -> it : 1
mutate objects it -> temporaries : 1
objects it temporaries -> for : 1
it temporaries for -> variables : 1
temporaries for variables -> that : 1
for variables that -> you : 1
variables that you -> only : 1
that you only -> forward : 1
that you only -> get : 1
you only forward -> to : 1
only forward to -> some : 1
forward to some -> other : 1
to some other -> in : 1
to some other -> how : 1
some other in -> those : 1
other in those -> forwarding : 1
in those forwarding -> cases : 1
those forwarding cases -> you : 1
forwarding cases you -> rarely : 1
cases you rarely -> care : 1
you rarely care -> about : 1
rarely care about -> whether : 1
care about whether -> the : 1
about whether the -> variable : 1
whether the variable -> is : 1
the variable is -> a : 1
the variable is -> actually : 1
variable is a -> const : 1
variable is a -> might : 1
variable is a -> variable : 1
a const or -> a : 1
const or a -> you : 1
or a you -> just : 1
a you just -> want : 1
you just want -> to : 1
just want to -> pass : 1
just want to -> fetch : 1
just want to -> compare : 1
want to pass -> it : 1
to pass it -> to : 1
pass it to -> some : 1
pass it to -> the : 1
it to some -> code : 1
to some code -> that : 1
some code that -> actually : 1
code that actually -> going : 1
that actually going -> to : 1
actually going to -> the : 1
going to the -> important : 1
to the important -> to : 1
the important to -> note : 1
the important to -> notice : 1
important to note -> that : 1
to note that -> a : 1
note that a -> template : 1
note that a -> lambda : 1
that a template -> method : 1
a template method -> are : 1
template method are -> forwarding : 1
method are forwarding -> using : 1
are forwarding using -> with : 1
forwarding using with -> an : 1
using with an -> explicit : 1
with an explicit -> for : 1
an explicit for -> an : 1
explicit for an -> and : 1
for an and -> does : 1
an and does -> not : 1
does not have -> the : 1
does not have -> to : 3
does not have -> strong : 1
does not have -> built : 1
not have the -> properties : 1
not have the -> desired : 1
have the properties -> of : 1
the properties of -> a : 1
properties of a -> forwarding : 1
of a forwarding -> reference : 1
forwarding reference and -> will : 1
reference and will -> be : 1
will be discussed -> later : 2
will be discussed -> further : 1
will be discussed -> in : 1
be discussed later -> in : 2
discussed later in -> this : 2
later in this -> this : 1
later in this -> in : 1
later in this -> we : 2
later in this -> chapter : 1
later in this -> smart : 1
later in this -> const : 1
later in this -> a : 1
in this this -> is : 1
this this is -> our : 1
this this is -> just : 1
this is our -> own : 1
is our own -> personal : 1
our own personal -> we : 1
own personal we -> strongly : 1
personal we strongly -> recommend : 1
we strongly recommend -> to : 1
strongly recommend to -> always : 1
recommend to always -> use : 1
to always use -> when : 1
to always use -> all : 1
to always use -> raii : 1
always use when -> that : 1
use when that -> you : 1
when that you -> simply : 1
that you simply -> just : 1
you simply just -> want : 1
simply just want -> to : 1
want to fetch -> a : 1
to fetch a -> value : 1
fetch a value -> and : 1
a value and -> that : 1
value and that -> is : 1
and that is -> going : 1
that is going -> this : 1
is going this -> should : 1
going this should -> be : 1
this should be -> the : 1
be the case -> to : 1
the case to -> the : 1
case to the -> majority : 1
to the majority -> of : 1
the majority of -> the : 1
the majority of -> its : 1
majority of the -> variable : 1
majority of the -> total : 1
of the variable -> declaration : 1
of the variable -> via : 1
of the variable -> and : 1
the variable declaration -> in : 1
variable declaration in -> a : 1
declaration in a -> code : 1
in a code -> and : 1
in a code -> as : 1
a code and -> only : 1
code and only -> be : 1
and only be -> used : 1
be used when -> you : 1
be used when -> we : 1
be used when -> the : 1
be used when -> designing : 1
used when you -> require : 1
when you require -> the : 1
you require the -> behavior : 1
you require the -> value : 1
require the behavior -> of : 1
the behavior of -> a : 1
the behavior of -> can : 1
behavior of a -> mutable : 1
of a mutable -> reference : 1
mutable reference or -> an : 1
reference or an -> explicit : 1
or an explicit -> this : 1
an explicit this -> communicates : 1
explicit this communicates -> to : 1
this communicates to -> the : 1
communicates to the -> reader : 1
to the reader -> of : 1
the reader of -> the : 1
the reader of -> a : 1
reader of the -> code : 1
the code that -> those : 1
the code that -> must : 1
code that those -> variables : 1
that those variables -> are : 1
those variables are -> important : 1
variables are important -> as : 1
are important as -> they : 1
important as they -> either : 1
as they either -> mutate : 1
they either mutate -> another : 1
either mutate another -> or : 1
mutate another or -> they : 1
another or they -> might : 1
or they might -> mutate : 1
they might mutate -> another : 1
might mutate another -> variable : 1
mutate another variable -> if : 1
another variable if -> not : 1
variable if not -> use : 1
if not use -> forwarding : 1
not use forwarding -> code : 1
use forwarding code -> these : 1
forwarding code these -> rules : 1
code these rules -> makes : 1
these rules makes -> your : 1
rules makes your -> code : 1
makes your code -> base : 1
your code base -> easier : 1
your code base -> is : 2
code base easier -> to : 1
base easier to -> and : 1
easier to and -> reason : 1
easier to and -> ranges : 1
to and reason -> might : 1
and reason might -> seem : 1
reason might seem -> odd : 1
might seem odd -> that : 3
seem odd that -> while : 1
seem odd that -> one : 1
seem odd that -> this : 1
odd that while -> we : 1
that while we -> recommend : 1
while we recommend -> using : 1
we recommend using -> for : 1
we recommend using -> sometimes : 1
recommend using for -> most : 1
using for most -> variable : 1
for most variable -> we : 1
most variable we -> tend : 1
variable we tend -> to : 1
tend to use -> a : 1
tend to use -> these : 1
use a simple -> throughout : 1
a simple throughout -> the : 1
simple throughout the -> the : 1
throughout the the -> only : 1
the the only -> reason : 1
the only reason -> we : 1
only reason we -> use : 1
reason we use -> plain : 1
we use plain -> is : 1
use plain is -> the : 1
plain is the -> limited : 1
is the limited -> space : 1
the limited space -> the : 1
limited space the -> format : 1
space the format -> of : 1
the format of -> a : 1
format of a -> book : 1
of a book -> lambda : 1
a book lambda -> lambda : 1
book lambda lambda -> introduced : 1
lambda lambda introduced -> in : 1
lambda introduced in -> and : 1
introduced in and -> further : 1
introduced in and -> has : 1
in and further -> enhanced : 1
and further enhanced -> with : 1
further enhanced with -> polymorphic : 1
enhanced with polymorphic -> capabilities : 1
with polymorphic capabilities -> in : 1
polymorphic capabilities in -> is : 1
capabilities in is -> one : 1
in is one -> of : 1
is one of -> the : 4
one of the -> most : 2
one of the -> following : 1
one of the -> basic : 1
one of the -> reasons : 2
one of the -> the : 1
one of the -> compare : 1
one of the -> arena : 1
one of the -> standard : 1
one of the -> major : 1
one of the -> threads : 1
the most useful -> features : 1
most useful features -> in : 1
useful features in -> modern : 1
features in modern -> its : 1
in modern its -> versatility : 1
modern its versatility -> comes : 1
its versatility comes -> not : 1
versatility comes not -> only : 1
comes not only -> from : 1
not only from -> easily : 1
only from easily -> passing : 1
from easily passing -> functions : 1
easily passing functions -> to : 1
passing functions to -> algorithms : 1
functions to algorithms -> it : 1
to algorithms it -> can : 1
algorithms it can -> also : 1
it can also -> be : 1
it can also -> mutate : 1
be used in -> a : 2
be used in -> term : 1
used in a -> lot : 1
used in a -> can : 1
used in a -> multithreaded : 1
used in a -> programming : 1
in a lot -> of : 1
in a lot -> harder : 2
lot of circumstances -> where : 1
of circumstances where -> you : 1
circumstances where you -> need : 1
where you need -> to : 1
where you need -> information : 1
need to pass -> the : 2
need to pass -> a : 1
to pass the -> code : 1
to pass the -> string : 1
to pass the -> variable : 1
pass the code -> especially : 1
the code especially -> as : 1
code especially as -> you : 1
especially as you -> can : 1
as you can -> store : 1
as you can -> it : 2
as you can -> these : 1
as you can -> the : 2
as you can -> apply : 1
as you can -> see : 1
as you can -> now : 1
you can store -> a : 1
can store a -> lambda : 1
store a lambda -> function : 1
a lambda function -> in : 1
a lambda function -> to : 1
a lambda function -> works : 1
a lambda function -> is : 1
a lambda function -> like : 1
a lambda function -> with : 1
a lambda function -> for : 1
lambda function in -> the : 1
lambda function in -> a : 1
lambda function in -> and : 1
function in the -> lambda : 1
function in the -> standard : 1
in the lambda -> function : 1
the lambda function -> made : 1
the lambda function -> in : 1
the lambda function -> capability : 1
the lambda function -> consists : 1
the lambda function -> works : 1
lambda function made -> these : 1
function made these -> programming : 1
made these programming -> techniques : 1
these programming techniques -> vastly : 1
programming techniques vastly -> simpler : 1
techniques vastly simpler -> to : 1
vastly simpler to -> work : 1
simpler to work -> everything : 1
to work everything -> here : 1
work everything here -> is : 1
everything here is -> possible : 1
here is possible -> to : 1
is possible to -> perform : 1
is possible to -> set : 1
is possible to -> overload : 1
is possible to -> use : 1
is possible to -> return : 1
is possible to -> execute : 1
is possible to -> make : 1
is possible to -> query : 1
is possible to -> wrap : 1
possible to perform -> without : 1
to perform without -> them : 1
perform without them -> by : 1
without them by -> making : 1
them by making -> classes : 1
by making classes -> with : 1
making classes with -> will : 1
classes with will -> explore : 1
with will explore -> the : 1
will explore the -> lambda : 1
explore the lambda -> similarities : 1
the lambda similarities -> to : 1
lambda similarities to -> these : 1
similarities to these -> kind : 1
to these kind -> of : 1
these kind of -> classes : 1
kind of classes -> but : 1
of classes but -> first : 1
classes but first -> introduce : 1
but first introduce -> the : 1
first introduce the -> lambda : 1
introduce the lambda -> function : 1
function in a -> simple : 1
function in a -> program : 1
in a simple -> use : 1
in a simple -> where : 1
in a simple -> way : 1
a simple use -> syntax : 1
simple use syntax -> of : 1
use syntax of -> a : 1
a lambda a -> the : 1
lambda a the -> lambda : 1
a the lambda -> function : 1
lambda function capability -> enables : 1
function capability enables -> programmers : 1
capability enables programmers -> to : 1
enables programmers to -> pass : 1
enables programmers to -> create : 1
programmers to pass -> functions : 1
to pass functions -> to : 1
pass functions to -> regular : 1
functions to regular -> just : 1
to regular just -> as : 1
regular just as -> easily : 1
just as easily -> as : 1
as easily as -> a : 1
easily as a -> variable : 1
as a variable -> is : 1
as a variable -> with : 1
a variable is -> compare : 1
variable is compare -> passing : 1
is compare passing -> a : 1
compare passing a -> lambda : 1
passing a lambda -> function : 1
lambda function to -> an : 1
function to an -> algorithm : 1
to an algorithm -> with : 1
to an algorithm -> that : 1
an algorithm with -> passing : 1
an algorithm with -> input : 1
an algorithm with -> a : 1
an algorithm with -> iterator : 1
algorithm with passing -> a : 1
with passing a -> auto : 1
passing a auto -> vals : 1
a auto vals -> look : 1
auto vals look -> for : 1
vals look for -> number : 1
look for number -> auto : 1
for number auto -> three : 1
number auto three -> auto : 1
auto three auto -> is : 1
three auto is -> look : 1
auto is look -> for : 1
is look for -> a : 1
look for a -> numbers : 1
for a numbers -> which : 1
a numbers which -> is : 1
numbers which is -> larger : 1
which is larger -> than : 1
is larger than -> auto : 1
larger than auto -> return : 1
than auto return -> v : 1
auto return v -> auto : 3
auto return v -> capture : 1
auto return v -> return : 1
auto return v -> test : 2
auto return v -> we : 1
auto return v -> the : 1
auto return v -> iterates : 1
return v auto -> is : 1
return v auto -> equals : 2
v auto is -> how : 1
auto is how -> we : 1
is how we -> pass : 1
is how we -> would : 2
is how we -> implement : 1
is how we -> can : 1
is how we -> adapt : 1
how we pass -> a : 1
we pass a -> variable : 1
we pass a -> function : 2
pass a variable -> to : 1
a variable to -> search : 1
a variable to -> hold : 1
variable to search -> for : 1
to search for -> with : 2
search for with -> in : 2
for with in -> the : 2
with in the -> first : 1
with in the -> latter : 1
in the first -> and : 1
in the first -> or : 1
in the first -> iteration : 1
in the first -> time : 1
in the first -> function : 1
in the first -> local : 1
in the first -> which : 1
the first and -> a : 1
first and a -> function : 1
and a function -> to : 1
a function to -> search : 1
a function to -> be : 1
a function to -> do : 1
a function to -> test : 1
function to search -> for : 1
in the latter -> this : 1
the latter this -> is : 1
latter this is -> a : 1
this is a -> typical : 1
this is a -> book : 1
this is a -> very : 4
this is a -> good : 2
this is a -> kb : 1
this is a -> warning : 1
this is a -> great : 1
this is a -> simplified : 1
this is a -> bit : 1
this is a -> so : 1
this is a -> common : 1
this is a -> rather : 1
this is a -> big : 1
this is a -> request : 1
is a typical -> use : 1
a typical use -> case : 1
typical use case -> for : 1
use case for -> lambda : 1
case for lambda -> we : 1
for lambda we -> pass : 1
lambda we pass -> a : 1
pass a function -> to : 1
pass a function -> which : 1
function to be -> evaluated : 1
function to be -> we : 1
to be evaluated -> many : 1
to be evaluated -> at : 1
be evaluated many -> times : 1
evaluated many times -> to : 1
many times to -> another : 1
times to another -> function : 1
to another function -> this : 1
another function this -> the : 1
function this the -> lambda : 1
this the lambda -> does : 1
the lambda does -> not : 2
lambda does not -> need : 2
lambda does not -> affect : 1
does not need -> to : 5
not need to -> be : 2
not need to -> know : 1
not need to -> use : 1
not need to -> store : 1
not need to -> inspect : 1
need to be -> tied : 1
need to be -> in : 1
need to be -> located : 1
need to be -> moved : 1
need to be -> protected : 1
need to be -> accessed : 1
need to be -> taken : 1
need to be -> provided : 1
to be tied -> to : 1
be tied to -> a : 1
tied to a -> just : 1
tied to a -> and : 1
tied to a -> named : 1
tied to a -> therefore : 1
tied to a -> force : 1
tied to a -> such : 1
tied to a -> we : 1
to a just -> as : 1
a just as -> we : 1
a just as -> you : 1
just as we -> can : 1
just as we -> have : 1
as we can -> put : 1
as we can -> now : 1
as we can -> see : 1
we can put -> a : 1
can put a -> variable : 1
put a variable -> right : 1
a variable right -> into : 1
variable right into -> an : 1
right into an -> we : 1
into an we -> can : 1
an we can -> do : 1
we can do -> the : 1
we can do -> that : 2
we can do -> our : 1
we can do -> instead : 1
can do the -> same : 1
do the same -> with : 1
do the same -> thing : 1
do the same -> to : 1
the same with -> a : 1
same with a -> lambda : 1
with a lambda -> auto : 1
a lambda auto -> return : 1
lambda auto return -> v : 2
return v capture -> make : 1
v capture make -> this : 1
capture make this -> a : 1
make this a -> little : 2
this a little -> more : 1
this a little -> bit : 1
a little more -> in : 1
a little more -> code : 1
little more in -> the : 1
more in the -> previous : 2
in the previous -> we : 3
in the previous -> the : 2
in the previous -> constexpr : 1
in the previous -> to : 1
the previous we -> hard : 1
the previous we -> change : 1
the previous we -> want : 1
the previous we -> get : 1
previous we hard -> coded : 1
we hard coded -> the : 1
hard coded the -> value : 1
coded the value -> we : 1
the value we -> wanted : 1
the value we -> expect : 1
value we wanted -> to : 1
we wanted to -> count : 1
wanted to count -> numbers : 1
to count numbers -> what : 1
count numbers what -> if : 1
numbers what if -> we : 1
what if we -> want : 1
what if we -> double : 1
what if we -> have : 1
what if we -> wanted : 1
what if we -> actually : 1
want to use -> an : 1
want to use -> a : 2
want to use -> global : 1
want to use -> one : 1
to use an -> external : 1
to use an -> object : 1
use an external -> variable : 1
an external variable -> inside : 1
external variable inside -> the : 1
variable inside the -> lambda : 1
inside the lambda -> what : 1
inside the lambda -> capturing : 1
the lambda what -> we : 1
lambda what we -> do : 1
what we do -> is : 2
we do is -> capture : 1
we do is -> simply : 2
do is capture -> the : 1
is capture the -> external : 1
capture the external -> variables : 1
the external variables -> by : 1
external variables by -> putting : 1
variables by putting -> them : 1
by putting them -> in : 1
putting them in -> the : 1
them in the -> capture : 1
in the capture -> that : 1
in the capture -> capture : 1
the capture that -> the : 1
capture that the -> part : 1
that the part -> of : 1
the part of -> the : 1
of the int -> auto : 1
of the int -> if : 1
the int auto -> return : 1
the int auto -> i : 1
int auto return -> v : 1
return v return -> this : 1
return v return -> evaluates : 1
return v return -> libraries : 1
v return this -> we : 1
return this we -> captured : 1
this we captured -> the : 1
we captured the -> by : 1
captured the by -> copying : 1
the by copying -> it : 1
by copying it -> into : 1
copying it into -> the : 1
it into the -> lambda : 1
into the lambda -> if : 1
into the lambda -> functions : 1
the lambda if -> we : 1
lambda if we -> want : 1
want to declare -> the : 1
to declare the -> as : 1
declare the as -> a : 1
the as a -> we : 1
the as a -> simple : 1
as a we -> put : 1
as a we -> will : 1
a we put -> a : 1
we put a -> at : 1
put a at -> the : 1
a at the -> beginning : 1
at the beginning -> like : 1
at the beginning -> of : 4
the beginning like -> return : 1
beginning like return -> v : 1
like return v -> variable : 1
return v variable -> is : 1
v variable is -> now : 1
variable is now -> merely : 1
is now merely -> a : 1
now merely a -> reference : 1
merely a reference -> to : 1
a reference to -> the : 4
reference to the -> just : 1
reference to the -> withheld : 1
reference to the -> arena : 1
reference to the -> this : 1
reference to the -> reference : 1
to the just -> like : 1
the just like -> a : 1
just like a -> regular : 3
just like a -> class : 1
just like a -> dynamically : 1
just like a -> but : 1
just like a -> normal : 1
just like a -> multidimensional : 1
like a regular -> reference : 2
like a regular -> but : 1
like a regular -> function : 1
like a regular -> container : 1
like a regular -> struct : 1
like a regular -> a : 1
like a regular -> based : 1
a regular reference -> variable : 1
a regular reference -> or : 1
regular reference variable -> in : 1
reference variable in -> by : 1
variable in by -> reference : 1
in by reference -> versus : 1
capture by the -> capture : 1
by the capture -> block : 1
the capture block -> for : 1
capture block for -> referencing : 1
block for referencing -> and : 1
for referencing and -> copying : 1
referencing and copying -> variables : 1
and copying variables -> works : 1
copying variables works -> just : 1
variables works just -> like : 1
works just like -> regular : 1
works just like -> a : 3
works just like -> with : 1
just like regular -> to : 1
just like regular -> reusable : 1
just like regular -> the : 1
like regular to -> see : 1
regular to see -> the : 1
to see the -> take : 1
to see the -> outliers : 1
to see the -> resemblance : 1
to see the -> put : 1
see the take -> a : 1
these two examples -> and : 1
two examples and -> see : 1
examples and see -> if : 1
and see if -> you : 1
and see if -> they : 1
see if you -> can : 1
if you can -> spot : 1
you can spot -> the : 1
can spot the -> by : 1
spot the by -> by : 1
the by by -> auto : 1
by by auto -> vals : 1
by by auto -> v : 1
by auto vals -> auto : 1
auto vals auto -> th : 2
vals auto th -> auto : 2
auto th auto -> return : 2
th auto return -> v : 2
v auto equals -> auto : 1
v auto equals -> the : 1
auto equals auto -> vals : 1
equals auto vals -> auto : 1
auto equals the -> first : 1
equals the first -> the : 1
the first the -> threshold : 1
first the threshold -> was : 1
the threshold was -> copied : 1
threshold was copied -> into : 1
was copied into -> the : 1
copied into the -> lambda : 1
copied into the -> only : 1
the lambda functions -> and : 1
lambda functions and -> is : 1
functions and is -> therefore : 1
therefore not affected -> when : 1
not affected when -> therefore : 1
affected when therefore -> counts : 1
when therefore counts -> the : 1
therefore counts the -> number : 1
therefore counts the -> of : 1
counts the number -> of : 2
number of values -> above : 1
number of values -> when : 1
number of values -> t : 1
number of values -> in : 1
of values above -> the : 1
values above the -> second : 1
above the second -> captured : 1
the second captured -> by : 1
second captured by -> and : 1
captured by and -> therefore : 1
by and therefore -> counts : 1
by and therefore -> a : 1
and therefore counts -> the : 1
counts the of -> between : 1
the of between -> a : 1
of between a -> lambda : 1
and a understand -> what : 1
a understand what -> the : 1
understand what the -> lambda : 1
what the lambda -> function : 1
lambda function consists -> one : 1
function consists one -> can : 1
consists one can -> view : 1
one can view -> it : 1
can view it -> as : 1
view it as -> a : 1
it as a -> regular : 1
it as a -> linked : 1
it as a -> first : 1
it as a -> lambda : 1
as a regular -> class : 1
as a regular -> it : 1
as a regular -> parameter : 1
as a regular -> lambda : 1
a regular class -> with : 1
a regular class -> member : 1
a regular class -> for : 1
regular class with -> class : 1
class with class -> only : 1
with class only -> consists : 1
class only consists -> of : 1
only consists of -> one : 1
consists of one -> member : 1
of one member -> capture : 1
one member capture -> block : 1
member capture block -> is : 1
capture block is -> a : 1
block is a -> combination : 1
is a combination -> of : 1
a combination of -> the : 1
a combination of -> and : 3
combination of the -> member : 1
of the member -> variables : 1
the member variables -> and : 1
the member variables -> via : 1
the member variables -> by : 1
member variables and -> its : 1
variables and its -> lambda : 1
and its lambda -> function : 1
its lambda function -> has : 1
lambda function has -> its : 3
function has its -> own : 3
has its own -> unique : 1
has its own -> even : 1
has its own -> and : 2
has its own -> so : 1
has its own -> address : 1
has its own -> stack : 3
has its own -> code : 1
has its own -> template : 1
has its own -> else : 1
has its own -> dedicated : 1
its own unique -> even : 1
own unique even -> if : 1
unique even if -> two : 1
even if two -> lambda : 1
if two lambda -> functions : 1
two lambda functions -> are : 1
functions are plain -> clones : 1
are plain clones -> of : 1
plain clones of -> each : 1
clones of each -> they : 1
of each they -> still : 1
each they still -> have : 1
they still have -> their : 1
still have their -> own : 1
have their own -> unique : 1
have their own -> virtual : 1
have their own -> exclusive : 1
their own unique -> following : 1
own unique following -> table : 1
unique following table -> shows : 1
following table shows -> a : 2
following table shows -> the : 3
following table shows -> an : 1
following table shows -> which : 1
following table shows -> how : 2
following table shows -> their : 1
table shows a -> simple : 1
table shows a -> syntactical : 1
shows a simple -> lambda : 1
a simple lambda -> and : 1
simple lambda and -> a : 1
and a class -> which : 1
a class which -> corresponds : 1
a class which -> will : 1
a class which -> represents : 1
a class which -> can : 1
class which corresponds -> to : 1
which corresponds to -> the : 2
which corresponds to -> of : 1
which corresponds to -> our : 1
corresponds to the -> lambda : 1
corresponds to the -> had : 1
corresponds to the -> following : 2
corresponds to the -> number : 1
to the lambda -> the : 1
the lambda the -> left : 1
lambda the left -> column : 1
the left column -> by : 1
left column by -> the : 1
column by the -> right : 1
by the right -> column : 1
the right column -> by : 1
right column by -> with : 1
column by with -> capture : 1
by with capture -> by : 2
with capture by -> with : 1
with capture by -> th : 1
capture by with -> capture : 1
capture by th -> return : 1
by th return -> v : 1
th return v -> test : 2
return v test -> test : 4
v test test -> equals : 4
test test equals -> th : 2
test test equals -> to : 1
test test equals -> variables : 1
test equals th -> return : 1
test equals th -> the : 1
equals th return -> v : 1
test equals to -> this : 1
equals to this -> to : 1
to this to -> this : 1
this to this -> th : 1
to this th -> isabove : 1
this th isabove -> the : 1
th isabove the -> only : 1
isabove the only -> member : 1
the only member -> auto : 2
only member auto -> return : 2
member auto return -> v : 2
equals th the -> only : 1
th the only -> member : 1
test equals variables -> in : 1
equals variables in -> seen : 1
variables in seen -> in : 1
in seen in -> the : 1
the previous the -> capture : 1
the previous the -> predicates : 1
the previous the -> summed : 1
previous the capture -> scope : 1
the capture scope -> initializes : 1
capture scope initializes -> member : 1
scope initializes member -> variables : 1
initializes member variables -> in : 1
member variables in -> the : 1
variables in the -> corresponding : 1
variables in the -> scope : 2
variables in the -> we : 1
variables in the -> kernel : 1
in the corresponding -> this : 1
in the corresponding -> value : 1
the corresponding this -> means : 1
corresponding this means -> that : 1
can also initialize -> member : 1
also initialize member -> variables : 1
initialize member variables -> inside : 1
member variables inside -> a : 1
variables inside a -> which : 1
inside a which -> are : 1
a which are -> only : 1
which are only -> visible : 1
are only visible -> from : 1
only visible from -> inside : 1
visible from inside -> the : 1
from inside the -> func : 1
inside the func -> v : 1
the func v -> func : 1
func v func -> auto : 1
v func auto -> v : 1
func auto v -> func : 1
auto v func -> lambda : 1
v func lambda -> member : 1
func lambda member -> the : 1
lambda member the -> lambda : 1
member the lambda -> function : 1
lambda function works -> just : 1
lambda function works -> like : 1
function works just -> like : 1
like a class -> with : 1
a class with -> member : 1
a class with -> a : 1
a class with -> an : 1
class with member -> it : 1
with member it -> can : 1
member it can -> also : 1
can also mutate -> in : 1
also mutate in -> the : 1
mutate in the -> following : 1
following the lambda -> mutates : 1
the lambda mutates -> the : 1
lambda mutates the -> threshold : 1
mutates the threshold -> variable : 1
the threshold variable -> every : 1
threshold variable every -> time : 1
variable every time -> it : 1
every time it -> is : 2
time it is -> order : 1
time it is -> executed : 1
it is order -> to : 1
is order to -> allow : 1
order to allow -> the : 1
to allow the -> lambda : 1
allow the lambda -> to : 1
the lambda to -> mutate : 1
the lambda to -> a : 1
lambda to mutate -> its : 1
to mutate its -> we : 1
mutate its we -> need : 1
its we need -> to : 1
need to specify -> declaring : 1
need to specify -> the : 1
to specify declaring -> the : 1
specify declaring the -> the : 1
declaring the the -> on : 1
the the on -> a : 1
the on a -> lambda : 1
on a lambda -> function : 1
function works like -> the : 1
works like the -> inverse : 1
like the inverse -> for : 1
the inverse for -> a : 1
inverse for a -> modifier : 1
for a modifier -> for : 1
a modifier for -> a : 1
modifier for a -> regular : 1
for a regular -> class : 1
regular class member -> in : 1
class member in -> contrast : 1
member in contrast -> to : 1
to a class -> member : 1
to a class -> with : 1
to a class -> where : 1
a class member -> a : 1
class member a -> lambda : 1
member a lambda -> function : 1
lambda function is -> by : 1
function is by -> and : 1
is by and -> therefore : 1
and therefore a -> mutating : 1
therefore a mutating -> lambda : 1
a mutating lambda -> must : 1
mutating lambda must -> be : 1
lambda must be -> explicitly : 1
must be explicitly -> by : 1
must be explicitly -> cast : 1
be explicitly by -> by : 1
explicitly by by -> auto : 1
by auto v -> auto : 1
auto v auto -> lambda : 2
v auto lambda -> mutable : 1
v auto lambda -> v : 1
auto lambda mutable -> v : 1
lambda mutable v -> auto : 1
mutable v auto -> v : 1
v auto v -> auto : 1
auto lambda v -> we : 1
lambda v we -> want : 1
v we want -> to : 1
want to capture -> the : 1
to capture the -> reference : 1
to capture the -> class : 1
capture the reference -> we : 1
the reference we -> do : 1
reference we do -> not : 1
we do not -> have : 1
we do not -> mutate : 1
we do not -> need : 1
we do not -> lose : 1
we do not -> take : 1
we do not -> want : 2
we do not -> recommend : 1
do not have -> to : 2
do not have -> a : 1
do not have -> share : 1
not have to -> specify : 1
not have to -> resources : 1
not have to -> look : 1
not have to -> be : 1
not have to -> occupy : 2
not have to -> load : 1
have to specify -> the : 2
have to specify -> it : 1
to specify the -> keyword : 1
to specify the -> size : 1
to specify the -> numbers : 1
specify the keyword -> as : 1
the keyword as -> the : 1
keyword as the -> lambda : 1
as the lambda -> itself : 1
the lambda itself -> the : 1
lambda itself the -> original : 1
itself the original -> will : 1
the original will -> meaning : 1
original will meaning -> that : 1
will meaning that -> we : 1
we have a -> different : 1
we have a -> class : 2
we have a -> better : 1
we have a -> fairly : 1
we have a -> small : 1
we have a -> variant : 1
we have a -> mechanism : 1
we have a -> good : 1
we have a -> data : 1
have a different -> member : 1
a different member -> variables : 1
different member variables -> from : 1
from the understand -> going : 1
the understand going -> in : 1
understand going in -> the : 1
going in the -> above : 1
going in the -> direction : 1
in the above -> take : 1
the above take -> a : 1
above take a -> look : 1
at how the -> compiler : 1
at how the -> rule : 1
at how the -> can : 1
the compiler sees -> the : 1
the compiler sees -> that : 1
compiler sees the -> previous : 1
sees the previous -> lambda : 1
the previous lambda -> by : 1
the previous lambda -> like : 1
previous lambda by -> value : 1
lambda by value -> by : 1
by value by -> reference : 1
value by reference -> mutatinglambda : 1
by reference mutatinglambda -> auto : 1
reference mutatinglambda auto -> v : 1
mutatinglambda auto v -> mutatinglambda : 1
mutatinglambda auto v -> you : 1
auto v mutatinglambda -> auto : 1
v mutatinglambda auto -> v : 1
auto v you -> can : 1
v you can -> the : 1
you can the -> first : 1
you can the -> member : 1
you can the -> following : 1
you can the -> integral : 1
you can the -> compiler : 1
you can the -> default : 1
you can the -> syntax : 1
you can the -> return : 1
can the first -> case : 1
the first case -> corresponds : 1
first case corresponds -> to : 1
case corresponds to -> a : 1
corresponds to a -> class : 2
class with a -> regular : 1
class with a -> size : 1
class with a -> comparator : 1
with a regular -> whereas : 1
with a regular -> syntax : 1
with a regular -> auto : 1
with a regular -> just : 1
with a regular -> stream : 1
with a regular -> for : 1
with a regular -> we : 1
with a regular -> x : 1
with a regular -> float : 1
a regular whereas -> the : 1
regular whereas the -> capture : 1
whereas the capture -> by : 1
the capture by -> reference : 2
by reference case -> simply : 1
reference case simply -> corresponds : 1
case simply corresponds -> to : 1
simply corresponds to -> a : 1
a class where -> the : 1
class where the -> member : 1
where the member -> variable : 1
the member variable -> is : 1
the member variable -> by : 1
the member variable -> if : 1
member variable is -> a : 1
is a might -> have : 1
a might have -> noticed : 1
might have noticed -> that : 1
have noticed that -> we : 1
noticed that we -> add : 1
that we add -> the : 1
we add the -> modifier : 1
add the modifier -> on : 1
the modifier on -> the : 1
modifier on the -> member : 2
on the member -> function : 1
on the member -> the : 1
the member function -> of : 1
the member function -> is : 1
the member function -> if : 1
the member function -> the : 1
the member function -> we : 1
the member function -> will : 1
the member function -> should : 1
the member function -> invocable : 1
the member function -> to : 1
the member function -> reports : 1
member function of -> the : 2
member function of -> is : 1
member function of -> a : 2
function of the -> capture : 1
function of the -> class : 1
function of the -> container : 1
of the capture -> by : 1
by reference and -> we : 1
reference and we -> also : 1
and we also -> do : 1
we also do -> not : 1
also do not -> specify : 1
do not specify -> mutable : 1
not specify mutable -> on : 1
specify mutable on -> the : 1
mutable on the -> corresponding : 1
on the corresponding -> the : 1
the corresponding the -> reason : 1
corresponding the reason -> this : 1
the reason this -> class : 1
reason this class -> is : 1
this class is -> still : 1
this class is -> constructed : 1
class is still -> considered : 1
class is still -> see : 1
is still considered -> is : 1
is still considered -> addition : 1
still considered is -> that : 1
considered is that -> we : 1
is that we -> do : 1
is that we -> will : 1
is that we -> have : 1
that we do -> not : 2
do not mutate -> anything : 1
not mutate anything -> inside : 1
mutate anything inside -> the : 1
anything inside the -> actual : 1
inside the actual -> the : 1
the actual the -> actual : 1
the actual the -> first : 1
the actual the -> calling : 1
actual the actual -> mutation : 1
the actual mutation -> applies : 1
actual mutation applies -> to : 1
mutation applies to -> the : 1
applies to the -> referenced : 1
to the referenced -> and : 1
the referenced and -> therefore : 1
referenced and therefore -> the : 1
and therefore the -> function : 1
and therefore the -> loop : 1
and therefore the -> is : 1
therefore the function -> is : 1
function is still -> considered : 1
still considered addition -> to : 1
considered addition to -> capturing : 1
addition to capturing -> variables : 1
to capturing variables -> one : 1
capturing variables one -> by : 2
variables one by -> all : 1
variables one by -> as : 1
one by all -> variables : 1
by all variables -> in : 1
all variables in -> the : 2
in the scope -> can : 1
in the scope -> are : 1
the scope can -> be : 1
scope can be -> captured : 1
can be captured -> by : 1
be captured by -> simply : 1
be captured by -> whereas : 1
be captured by -> reference : 1
captured by simply -> writing : 1
by simply writing -> or : 1
simply writing or -> means : 1
writing or means -> that : 1
or means that -> every : 1
means that every -> variable : 1
that every variable -> will : 1
every variable will -> be : 1
variable will be -> captured : 1
will be captured -> by : 1
captured by whereas -> captures : 1
by whereas captures -> all : 1
whereas captures all -> variables : 1
captures all variables -> by : 1
all variables by -> inside : 1
all variables by -> auto : 2
all variables by -> you : 1
variables by inside -> a : 1
by inside a -> it : 1
inside a it -> is : 1
a it is -> also : 2
a it is -> a : 1
a it is -> possible : 1
a it is -> said : 1
a it is -> guaranteed : 1
it is also -> possible : 4
it is also -> since : 1
it is also -> less : 1
it is also -> how : 1
is also possible -> to : 5
possible to capture -> the : 1
capture the class -> member : 1
the class member -> variables : 1
class member variables -> by : 1
member variables by -> reference : 1
member variables by -> auto : 2
member variables by -> invoking : 1
variables by reference -> using : 1
by reference using -> and : 1
reference using and -> by : 1
using and by -> copy : 1
and by copy -> by : 1
by copy by -> writing : 1
copy by writing -> foo : 1
by writing foo -> auto : 1
writing foo auto -> auto : 1
foo auto auto -> a : 1
auto auto a -> auto : 2
auto a auto -> b : 7
auto a auto -> cdpalignleft : 1
a auto b -> capture : 1
a auto b -> following : 2
a auto b -> tell : 1
a auto b -> this : 1
a auto b -> return : 1
a auto b -> auto : 8
a auto b -> float : 1
auto b capture -> all : 1
b capture all -> variables : 2
capture all variables -> by : 2
capture all variables -> with : 1
variables by auto -> a : 2
variables by auto -> capture : 1
variables by auto -> int : 1
by auto a -> b : 2
auto a b -> capture : 2
a b capture -> all : 1
a b capture -> member : 1
b capture member -> variables : 1
capture member variables -> by : 2
by auto capture -> member : 1
auto capture member -> variables : 1
by auto int -> that : 1
auto int that -> using : 1
int that using -> does : 1
that using does -> not : 1
using does not -> mean : 1
does not mean -> that : 1
not mean that -> all : 1
mean that all -> variables : 1
mean that all -> objects : 1
that all variables -> in : 1
the scope are -> copied : 1
scope are copied -> into : 1
are copied into -> the : 1
into the only -> the : 1
the only the -> variables : 1
only the variables -> actually : 1
the variables actually -> utilized : 1
variables actually utilized -> are : 1
actually utilized are -> it : 1
utilized are it -> is : 1
are it is -> convenient : 1
are it is -> more : 1
it is convenient -> to : 1
is convenient to -> capture : 1
convenient to capture -> all : 1
to capture all -> variables : 1
all variables with -> or : 1
variables with or -> we : 1
with or we -> recommend : 1
or we recommend -> capturing : 1
we recommend capturing -> variables : 1
recommend capturing variables -> one : 1
one by as -> it : 1
by as it -> improves : 1
as it improves -> the : 1
it improves the -> readability : 1
improves the readability -> of : 1
the readability of -> the : 2
the readability of -> your : 1
the readability of -> an : 1
readability of the -> code : 2
the code by -> clarifying : 1
code by clarifying -> exactly : 1
by clarifying exactly -> which : 1
clarifying exactly which -> variables : 1
exactly which variables -> are : 1
which variables are -> used : 1
variables are used -> inside : 1
are used inside -> the : 1
used inside the -> lambda : 1
the lambda capturing -> all : 1
lambda capturing all -> variables : 1
capturing all variables -> by : 1
variables by you -> can : 1
by you can -> specify : 1
you can specify -> variables : 1
can specify variables -> to : 1
specify variables to -> be : 1
variables to be -> captured : 1
to be captured -> by : 1
captured by reference -> vice : 1
by reference vice -> the : 1
reference vice the -> following : 1
vice the following -> table : 1
the following table -> shows : 5
the following table -> lists : 1
the following table -> demonstrate : 1
the following table -> when : 1
table shows the -> result : 1
table shows the -> amount : 1
table shows the -> results : 1
table shows the -> performance : 1
shows the result -> of : 1
the result of -> different : 1
the result of -> metaprogramming : 1
the result of -> the : 3
result of different -> combination : 1
of different combination -> in : 1
different combination in -> the : 1
combination in the -> capture : 1
the capture capture -> func : 1
capture capture func -> by : 1
capture func by -> func : 1
func by func -> by : 2
by func by -> func : 1
by func by -> by : 2
func by by -> func : 1
func by by -> c : 1
by by func -> by : 1
by by c -> function : 1
by c function -> pointers : 1
pointers to say -> you : 1
to say you -> are : 1
say you are -> using : 1
you are using -> a : 2
you are using -> it : 1
you are using -> if : 1
you are using -> will : 1
you are using -> gcc : 1
are using a -> c : 1
are using a -> vector : 1
are using a -> good : 1
using a c -> or : 1
a c or -> an : 1
c or an -> older : 1
or an older -> which : 1
an older which -> uses : 1
older which uses -> a : 1
which uses a -> callback : 1
uses a callback -> function : 1
a callback function -> as : 1
callback function as -> a : 1
function as a -> for : 1
function as a -> template : 1
as a for -> you : 1
a for you -> would : 1
for you would -> like : 1
you would like -> to : 2
like to use -> a : 1
like to use -> another : 1
use a lambda -> function : 1
lambda function like -> void : 1
function like void -> const : 1
like void const -> void : 1
void const void -> const : 1
const void const -> callback : 1
const void const -> v : 1
void const callback -> here : 1
const callback here -> is : 1
callback here is -> a : 1
here is a -> return : 1
here is a -> simplified : 1
here is a -> simple : 2
here is a -> function : 1
is a return -> code : 1
a return code -> and : 1
return code and -> the : 1
code and the -> web : 1
and the web -> page : 1
the web page -> if : 1
web page if -> you : 1
page if you -> want : 1
if you want -> to : 3
if you want -> a : 2
want to invoke -> this : 1
to invoke this -> with : 1
invoke this with -> a : 2
this with a -> you : 1
this with a -> few : 1
this with a -> raw : 1
with a you -> have : 1
a you have -> to : 2
you have to -> use : 2
you have to -> write : 1
you have to -> specify : 1
you have to -> do : 1
you have to -> inspect : 1
you have to -> understand : 1
you have to -> reach : 1
you have to -> call : 1
have to use -> a : 1
have to use -> the : 2
have to use -> our : 1
have to use -> efficient : 1
use a plus -> in : 1
a plus in -> front : 1
plus in front -> of : 1
in front of -> the : 2
front of the -> lambda : 1
front of the -> type : 1
of the lambda -> in : 1
the lambda in -> order : 1
lambda in order -> to : 1
order to convert -> it : 1
order to convert -> the : 1
to convert it -> into : 1
to convert it -> to : 1
convert it into -> a : 1
it into a -> regular : 1
into a regular -> function : 2
a regular function -> auto : 1
a regular function -> note : 1
a regular function -> has : 1
a regular function -> and : 1
regular function auto -> lambda : 1
function auto lambda -> const : 1
auto lambda const -> the : 1
lambda const the -> lambda : 1
const the lambda -> is : 1
the lambda is -> converted : 1
the lambda is -> we : 1
lambda is converted -> into : 1
lambda is converted -> to : 1
is converted into -> a : 1
converted into a -> regular : 1
regular function note -> that : 1
function note that -> the : 1
note that the -> lambda : 1
note that the -> was : 1
note that the -> iterator : 1
note that the -> virtual : 1
note that the -> initializer : 1
that the lambda -> cannot : 1
the lambda cannot -> have : 1
lambda cannot have -> any : 1
cannot have any -> captures : 1
have any captures -> at : 1
any captures at -> all : 1
captures at all -> in : 1
at all in -> order : 1
all in order -> to : 1
order to use -> this : 1
order to use -> the : 1
order to use -> it : 1
order to use -> our : 1
to use this -> and : 1
use this and -> mentioned : 1
this and mentioned -> every : 1
and mentioned every -> lambda : 1
mentioned every lambda -> function : 2
every lambda function -> has : 2
its own even -> if : 1
own even if -> they : 1
if they have -> the : 1
if they have -> a : 1
they have the -> same : 1
have the same -> signature : 1
have the same -> name : 1
have the same -> lifetime : 1
the same signature -> even : 1
same signature even -> if : 1
signature even if -> they : 1
if they are -> signature : 1
if they are -> to : 1
if they are -> fairly : 1
they are signature -> of : 1
are signature of -> a : 1
of a is -> defined : 1
of a is -> only : 1
a is defined -> as : 1
is defined as -> a : 1
is defined as -> shown : 1
defined as a -> returning : 1
defined as a -> member : 1
as a returning -> nothing : 1
a returning nothing -> and : 1
returning nothing and -> having : 1
nothing and having -> no : 1
and having no -> parameters : 1
having no parameters -> is : 1
no parameters is -> defined : 1
parameters is defined -> like : 2
is defined like -> func : 2
defined like func -> returning : 1
defined like func -> lambdas : 1
like func returning -> a : 1
func returning a -> and : 1
returning a and -> having : 1
a and having -> an : 1
and having an -> and : 1
having an and -> a : 1
an and a -> as : 1
and a as -> parameters : 1
a as parameters -> is : 1
as parameters is -> defined : 1
like func lambdas -> to : 1
func lambdas to -> mentioned : 1
lambdas to mentioned -> every : 1
to mentioned every -> lambda : 1
its own and -> be : 1
its own and -> whereas : 1
own and be -> assigned : 1
and be assigned -> to : 1
be assigned to -> other : 1
be assigned to -> the : 1
assigned to other -> lambda : 1
to other lambda -> even : 1
other lambda even -> if : 1
lambda even if -> they : 1
if they look -> exactly : 1
they look exactly -> the : 1
look exactly the -> hold : 1
exactly the hold -> any : 1
the hold any -> lambda : 1
hold any lambda -> function : 1
any lambda function -> which : 1
lambda function which -> has : 1
function which has -> the : 2
which has the -> same : 1
which has the -> modifier : 1
which has the -> member : 1
has the same -> that : 1
has the same -> parameters : 1
has the same -> they : 1
has the same -> name : 1
has the same -> computational : 1
the same that -> it : 1
same that it -> has : 1
it has the -> same : 1
the same parameters -> and : 1
same parameters and -> the : 1
parameters and the -> same : 1
and the same -> return : 1
and the same -> we : 1
and the same -> goes : 1
the same return -> a : 1
same return a -> can : 1
return a can -> also : 1
a can also -> be : 1
also be reassigned -> at : 1
be reassigned at -> run : 1
reassigned at run -> this : 1
at run this -> type : 1
run this type -> to : 1
this type to -> use : 1
type to use -> if : 1
to use if -> you : 1
use if you -> want : 1
you want a -> variable : 1
you want a -> more : 1
want a variable -> to : 1
variable to hold -> a : 1
to hold a -> lambda : 1
to hold a -> new : 1
hold a lambda -> is : 1
a lambda is -> important : 1
a lambda is -> return : 1
lambda is important -> here : 1
is important here -> is : 1
important here is -> that : 1
here is that -> what : 1
here is that -> cannot : 1
here is that -> the : 1
here is that -> both : 1
is that what -> is : 1
that what is -> captured : 1
what is captured -> by : 1
is captured by -> the : 1
captured by the -> lambda : 1
by the lambda -> does : 1
does not affect -> its : 1
not affect its -> and : 1
affect its and -> therefore : 1
its and therefore -> both : 1
and therefore both -> lambdas : 1
therefore both lambdas -> with : 1
both lambdas with -> and : 1
lambdas with and -> without : 1
and without captures -> can : 1
without captures can -> be : 1
captures can be -> assigned : 1
can be assigned -> to : 1
assigned to the -> same : 1
assigned to the -> container : 1
to the same -> following : 1
to the same -> auto : 1
to the same -> when : 1
to the same -> each : 1
to the same -> the : 1
to the same -> template : 1
to the same -> cache : 1
the same following -> code : 1
same following code -> block : 1
following code block -> shows : 1
following code block -> is : 1
code block shows -> how : 1
block shows how -> different : 1
shows how different -> lambdas : 1
how different lambdas -> are : 1
different lambdas are -> assigned : 1
lambdas are assigned -> the : 1
are assigned the -> same : 1
assigned the same -> create : 1
the same create -> an : 1
same create an -> unassigned : 1
create an unassigned -> object : 1
an unassigned object -> auto : 1
unassigned object auto -> func : 1
object auto func -> assign : 1
auto func assign -> a : 1
func assign a -> lambda : 1
assign a lambda -> without : 1
assign a lambda -> with : 1
a lambda without -> capture : 1
lambda without capture -> to : 1
without capture to -> the : 1
capture to the -> func : 1
capture to the -> same : 1
to the func -> prints : 1
the func prints -> assign : 1
func prints assign -> a : 1
prints assign a -> lambda : 1
a lambda with -> capture : 1
lambda with capture -> to : 1
with capture to -> the : 1
the same auto -> func : 1
same auto func -> prints : 1
auto func prints -> a : 1
func prints a -> simple : 1
prints a simple -> button : 1
class with put -> the : 1
with put the -> to : 1
put the to -> use : 1
the to use -> in : 1
to use in -> something : 1
to use in -> order : 1
use in something -> that : 1
in something that -> resembles : 1
something that resembles -> a : 1
that resembles a -> if : 1
resembles a if -> we : 1
a if we -> create : 1
if we create -> a : 1
we create a -> we : 1
we create a -> backed : 1
we create a -> class : 2
we create a -> simple : 1
we create a -> referring : 1
we create a -> template : 1
we create a -> struct : 1
we create a -> but : 1
create a we -> can : 1
a we can -> use : 1
a we can -> do : 1
a we can -> pass : 1
a we can -> now : 1
can use the -> to : 1
can use the -> function : 1
can use the -> older : 1
can use the -> boost : 1
can use the -> capabilities : 1
use the to -> store : 1
the to store -> the : 1
to store the -> action : 1
to store the -> captured : 1
to store the -> distance : 1
to store the -> stop : 1
to store the -> the : 1
to store the -> integer : 1
to store the -> objects : 1
to store the -> concatenated : 1
store the action -> corresponding : 1
the action corresponding -> to : 1
action corresponding to -> clicking : 1
corresponding to clicking -> the : 1
to clicking the -> so : 1
clicking the so -> that : 1
the so that -> when : 1
so that when -> we : 1
so that when -> the : 1
that when we -> call : 1
that when we -> create : 1
when we call -> the : 1
when we call -> this : 1
we call the -> member : 1
call the member -> the : 1
the member the -> corresponding : 1
the member the -> member : 1
the member the -> modifier : 1
member the corresponding -> code : 1
the corresponding code -> is : 1
corresponding code is -> can : 1
code is can -> declare : 1
is can declare -> the : 1
can declare the -> class : 1
declare the class -> like : 1
the class like -> button : 1
the class like -> that : 1
class like button -> auto : 1
like button auto -> const : 1
button auto const -> can : 1
auto const can -> then : 1
const can then -> use : 1
can then use -> it : 1
can then use -> a : 1
then use it -> to : 1
use it to -> create : 1
it to create -> a : 1
it to create -> an : 1
to create a -> multitude : 1
to create a -> new : 1
to create a -> custom : 2
to create a -> r : 1
to create a -> body : 1
to create a -> filtered : 1
to create a -> separate : 2
to create a -> function : 1
to create a -> string : 1
to create a -> container : 1
create a multitude -> of : 1
multitude of buttons -> with : 1
of buttons with -> different : 1
buttons with different -> as : 1
with different as -> each : 1
different as each -> button : 1
as each button -> still : 1
each button still -> has : 1
button still has -> the : 1
still has the -> same : 1
still has the -> value : 1
the same they -> can : 1
same they can -> also : 1
they can also -> be : 1
also be stored -> in : 1
in a auto -> mutable : 1
a auto mutable -> auto : 1
auto mutable auto -> auto : 1
mutable auto auto -> auto : 1
auto auto buttons -> return : 1
auto buttons return -> the : 1
buttons return the -> list : 1
return the list -> by : 1
the list by -> executing : 1
list by executing -> the : 1
by executing the -> on : 1
executing the on -> each : 1
the on each -> button : 1
on each button -> will : 1
each button will -> execute : 1
button will execute -> the : 1
will execute the -> corresponding : 1
will execute the -> at : 1
execute the corresponding -> buttons : 1
the corresponding buttons -> you : 1
corresponding buttons you -> can : 1
buttons you can -> the : 1
can the member -> function : 1
member function is -> a : 1
function is a -> const : 1
a const yet -> it : 1
const yet it -> is : 1
yet it is -> mutating : 1
it is mutating -> the : 1
is mutating the -> member : 1
is mutating the -> if : 1
mutating the member -> variable : 1
member variable by -> increasing : 1
variable by increasing -> the : 1
by increasing the -> this : 1
increasing the this -> might : 1
the this might -> seem : 1
this might seem -> like : 1
might seem like -> it : 1
seem like it -> breaks : 1
like it breaks -> const : 1
it breaks const -> correctness : 1
breaks const correctness -> as : 1
const correctness as -> a : 1
correctness as a -> const : 1
as a const -> member : 1
a const member -> function : 1
const member function -> of : 1
function of is -> allowed : 1
of is allowed -> to : 1
is allowed to -> call : 1
is allowed to -> use : 1
is allowed to -> adds : 1
is allowed to -> returns : 1
allowed to call -> a : 1
to call a -> mutating : 1
call a mutating -> function : 1
a mutating function -> on : 1
mutating function on -> one : 1
function on one -> of : 1
on one of -> its : 1
one of its -> class : 1
of its class -> the : 1
its class the -> reason : 1
class the reason -> it : 1
the reason it -> is : 2
reason it is -> allowed : 1
reason it is -> not : 1
it is allowed -> is : 1
is allowed is -> the : 1
allowed is the -> same : 1
is the same -> reason : 1
is the same -> mechanism : 1
is the same -> as : 1
the same reason -> that : 1
same reason that -> member : 1
reason that member -> pointers : 1
that member pointers -> are : 1
that member pointers -> points : 1
member pointers are -> allowed : 1
pointers are allowed -> to : 1
are allowed to -> mutate : 1
are allowed to -> implicitly : 1
are allowed to -> parallelize : 1
to mutate their -> value : 1
mutate their value -> in : 1
their value in -> a : 1
value in a -> const : 1
value in a -> or : 1
in a const -> later : 1
a const later -> on : 1
const later on -> in : 1
in this chapter -> we : 3
in this chapter -> are : 3
in this chapter -> and : 1
in this chapter -> will : 2
in this chapter -> by : 1
in this chapter -> is : 1
in this chapter -> have : 1
chapter we will -> discuss : 1
chapter we will -> which : 1
chapter we will -> look : 1
chapter we will -> learn : 1
we will discuss -> how : 1
we will discuss -> automatic : 1
will discuss how -> to : 1
discuss how to -> propagate : 1
how to propagate -> constness : 1
to propagate constness -> for : 1
propagate constness for -> pointer : 1
constness for pointer -> data : 1
for pointer data -> consideration : 1
pointer data consideration -> of : 1
data consideration of -> has : 1
consideration of has -> a : 1
of has a -> few : 1
has a few -> performance : 1
has a few -> it : 1
has a few -> basic : 1
a few performance -> losses : 1
few performance losses -> compared : 1
performance losses compared -> to : 1
losses compared to -> a : 1
compared to a -> lambda : 1
compared to a -> fully : 1
compared to a -> we : 1
compared to a -> single : 1
compared to a -> standard : 1
to a lambda -> which : 1
a lambda which -> discuss : 1
lambda which discuss -> in : 1
which discuss in -> the : 1
discuss in the -> subsequent : 1
in the subsequent -> cannot : 1
the subsequent cannot -> be : 1
subsequent cannot be -> it : 1
cannot be it -> comes : 1
be it comes -> to : 1
it comes to -> lambda : 1
it comes to -> the : 1
it comes to -> shared : 1
comes to lambda -> the : 1
to lambda the -> compiler : 1
lambda the compiler -> has : 1
the compiler has -> the : 1
the compiler has -> performed : 1
compiler has the -> ability : 1
ability to inline -> the : 1
to inline the -> function : 1
inline the function -> that : 1
the function that -> the : 1
the function that -> it : 1
function that the -> overhead : 1
function that the -> callers : 1
that the overhead -> of : 1
the overhead of -> the : 1
overhead of the -> function : 1
the function call -> is : 1
function call is -> the : 1
call is the -> flexible : 1
is the flexible -> design : 1
the flexible design -> of : 1
flexible design of -> it : 1
design of it -> nearly : 1
of it nearly -> impossible : 1
it nearly impossible -> for : 1
nearly impossible for -> the : 1
impossible for the -> compiler : 2
for the compiler -> to : 2
the compiler to -> inline : 1
the compiler to -> move : 1
the compiler to -> generate : 2
the compiler to -> calculate : 3
the compiler to -> execute : 1
compiler to inline -> a : 1
to inline a -> function : 1
inline a function -> wrapped : 1
a function wrapped -> in : 1
function wrapped in -> a : 1
wrapped in a -> this : 1
wrapped in a -> class : 1
in a this -> overhead : 1
in a this -> is : 1
a this overhead -> can : 1
this overhead can -> have : 1
overhead can have -> an : 1
can have an -> impact : 1
have an impact -> on : 2
an impact on -> the : 2
impact on the -> performance : 1
impact on the -> overall : 1
impact on the -> actual : 1
impact on the -> profile : 1
impact on the -> the : 2
impact on the -> structure : 1
on the performance -> if : 1
the performance if -> small : 1
performance if small -> functions : 1
if small functions -> wrapped : 1
small functions wrapped -> in : 1
functions wrapped in -> are : 1
wrapped in are -> being : 1
in are being -> called : 1
are being called -> very : 2
being called very -> heap : 1
being called very -> often : 1
called very heap -> allocates : 1
very heap allocates -> and : 1
and captures a -> lambda : 1
captures a lambda -> function : 1
lambda function with -> captured : 1
function with captured -> is : 1
with captured is -> assigned : 1
captured is assigned -> to : 1
is assigned to -> a : 1
assigned to a -> in : 1
to a in -> most : 1
a in most -> allocate : 1
in most allocate -> space : 1
most allocate space -> on : 1
allocate space on -> the : 1
space on the -> heap : 1
on the heap -> to : 1
on the heap -> can : 1
on the heap -> and : 2
the heap to -> store : 1
heap to store -> the : 1
store the captured -> variables : 1
the captured variables -> that : 1
captured variables that -> some : 1
variables that some -> implementations : 1
that some implementations -> not : 1
some implementations not -> if : 1
implementations not if -> the : 1
not if the -> size : 1
if the size -> of : 3
of the captured -> variable : 1
the captured variable -> is : 1
captured variable is -> less : 1
variable is less -> than : 1
is less than -> a : 1
is less than -> the : 1
is less than -> used : 1
is less than -> or : 1
less than a -> specific : 1
than a specific -> means : 1
than a specific -> she : 1
a specific means -> that : 1
specific means that -> not : 1
means that not -> only : 1
that not only -> is : 1
not only is -> there : 1
only is there -> a : 1
is there a -> slight : 1
there a slight -> performance : 1
a slight performance -> penalty : 1
slight performance penalty -> due : 1
performance penalty due -> to : 1
penalty due to -> heap : 1
due to heap -> allocation : 1
to heap allocation -> and : 1
heap allocation and -> the : 1
allocation and the -> execution : 1
and the execution -> of : 1
the execution of -> also : 1
the execution of -> a : 1
the execution of -> the : 3
the execution of -> certain : 1
execution of also -> that : 1
of also that -> it : 1
also that it -> is : 2
it is as -> heap : 1
is as heap -> allocation : 1
as heap allocation -> implies : 1
heap allocation implies -> cache : 1
allocation implies cache -> about : 1
implies cache about -> cache : 1
cache about cache -> misses : 1
about cache misses -> an : 1
cache misses an -> requires : 1
misses an requires -> a : 1
than a a -> is : 1
than a a -> b : 1
than a a -> lock : 1
a a is -> generally : 1
a a is -> they : 1
a is generally -> a : 1
is generally a -> bit : 1
generally a bit -> slower : 1
a bit slower -> than : 1
bit slower than -> executing : 1
slower than executing -> a : 1
than executing a -> lambda : 1
executing a lambda -> as : 1
a lambda as -> a : 1
lambda as a -> little : 1
as a little -> more : 1
little more code -> is : 1
more code is -> for : 1
code is for -> executing : 1
is for executing -> million : 1
for executing million -> function : 1
executing million function -> calls : 1
million function calls -> for : 1
function calls for -> a : 1
calls for a -> of : 1
calls for a -> vector : 1
for a of -> the : 1
a of the -> explicit : 1
of the explicit -> lambda : 1
the explicit lambda -> type : 1
explicit lambda type -> versus : 1
lambda type versus -> a : 1
type versus a -> of : 1
versus a of -> a : 1
a of a -> corresponding : 1
of a corresponding -> as : 1
a corresponding as -> invocation : 1
corresponding as invocation -> without : 1
as invocation without -> capture : 1
invocation without capture -> of : 1
without capture of -> lambda : 1
capture of lambda -> vs : 1
of lambda vs -> auto : 1
lambda vs auto -> lbd : 1
vs auto lbd -> return : 1
auto lbd return -> v : 2
lbd return v -> l : 1
lbd return v -> f : 1
return v l -> fs : 1
v l fs -> auto : 1
l fs auto -> res : 1
fs auto res -> for : 2
auto res for -> res : 2
res for res -> return : 2
for res return -> auto : 1
for res return -> first : 1
res return auto -> lbd : 1
return auto lbd -> return : 1
return v f -> fs : 1
v f fs -> auto : 1
f fs auto -> res : 1
res return first -> using : 1
return first using -> the : 1
first using the -> lambda : 1
first using the -> member : 1
using the lambda -> executes : 1
the lambda executes -> at : 1
lambda executes at -> roughly : 1
executes at roughly -> of : 1
at roughly of -> the : 1
roughly of the -> time : 1
of the time -> compared : 1
of the time -> of : 1
of the time -> access : 1
the time compared -> to : 1
time compared to -> the : 1
to the second -> where : 1
the second where -> we : 1
second where we -> instead : 1
where we instead -> use : 1
we instead use -> a : 1
instead use a -> vector : 1
use a vector -> of : 1
a vector of -> polymorphic : 1
a vector of -> size : 1
a vector of -> one : 1
a vector of -> numbers : 2
a vector of -> randomly : 1
a vector of -> and : 1
vector of polymorphic -> having : 1
of polymorphic having -> a : 1
polymorphic having a -> a : 1
having a a -> polymorphic : 1
a a polymorphic -> lambda : 1
a polymorphic lambda -> is : 1
a polymorphic lambda -> like : 1
a polymorphic lambda -> where : 1
a polymorphic lambda -> and : 1
polymorphic lambda is -> simply : 1
polymorphic lambda is -> converted : 1
lambda is simply -> a : 1
is simply a -> lambda : 1
is simply a -> placeholder : 1
simply a lambda -> accepting : 1
a lambda accepting -> as : 1
lambda accepting as -> a : 1
accepting as a -> making : 1
as a making -> it : 1
a making it -> possible : 1
making it possible -> to : 1
possible to invoke -> it : 1
to invoke it -> with : 1
invoke it with -> any : 1
it with any -> it : 1
with any it -> works : 1
any it works -> just : 1
it works just -> like : 1
a regular but -> the : 1
regular but the -> has : 1
but the has -> been : 1
the has been -> defined : 1
the has been -> applied : 1
has been defined -> as : 1
been defined as -> a : 1
as a member -> function : 1
a member function -> the : 1
a member function -> of : 1
a member function -> which : 1
a member function -> such : 1
a member function -> called : 1
member function the -> parameters : 1
member function the -> value : 1
function the parameters -> are : 1
the parameters are -> template : 1
parameters are template -> not : 1
are template not -> the : 1
template not the -> captured : 1
not the captured -> in : 1
the captured in -> other : 1
captured in other -> the : 1
other the captured -> the : 1
the captured the -> following : 1
captured the following -> example : 1
the following example -> will : 1
the following example -> illustrates : 1
the following example -> shows : 1
the following example -> does : 1
the following example -> code : 1
the following example -> a : 1
the following example -> the : 1
the following example -> demonstrates : 2
the following example -> is : 1
following example will -> stay : 1
example will stay -> as : 1
will stay as -> an : 1
stay as an -> if : 1
as an if -> you : 1
an if you -> define : 1
if you define -> a : 1
you define a -> polymorphic : 1
define a polymorphic -> lambda : 1
polymorphic lambda like -> v : 1
lambda like v -> lambda : 1
like v lambda -> auto : 1
v lambda auto -> return : 1
return v we -> translate : 1
v we translate -> the : 1
we translate the -> above : 1
translate the above -> lambda : 1
the above lambda -> to : 1
above lambda to -> a : 1
lambda to a -> it : 1
lambda to a -> and : 1
to a it -> would : 1
a it would -> correspond : 1
a it would -> be : 1
a it would -> have : 1
it would correspond -> to : 1
would correspond to -> something : 1
correspond to something -> like : 1
to something like -> lambda : 1
to something like -> document : 1
to something like -> return : 1
something like lambda -> template : 1
like lambda template -> typename : 1
lambda template typename -> auto : 1
template typename auto -> const : 2
template typename auto -> auto : 1
typename auto const -> return : 2
typename auto const -> void : 1
typename auto const -> const : 1
typename auto const -> auto : 1
const return int -> v : 1
const return int -> an : 1
const return int -> class : 1
const return int -> garden : 1
return int v -> lambda : 1
int v lambda -> means : 1
v lambda means -> just : 1
lambda means just -> like : 1
means just like -> the : 1
just like the -> templated : 1
like the templated -> the : 1
the templated the -> compiler : 1
templated the compiler -> generate : 1
the compiler generate -> the : 1
the compiler generate -> regular : 1
the compiler generate -> a : 1
compiler generate the -> actual : 1
generate the actual -> function : 1
the actual function -> until : 1
the actual function -> size : 1
actual function until -> the : 1
function until the -> lambda : 1
until the lambda -> is : 1
lambda is we -> can : 1
is we can -> invoke : 1
we can invoke -> the : 1
can invoke the -> previous : 1
invoke the previous -> lambda : 1
previous lambda like -> compiler : 1
lambda like compiler -> will : 1
like compiler will -> generate : 1
compiler will generate -> something : 1
compiler will generate -> new : 1
compiler will generate -> codes : 1
compiler will generate -> the : 2
compiler will generate -> a : 1
will generate something -> similar : 1
generate something similar -> to : 1
something similar to -> the : 1
something similar to -> these : 1
similar to the -> following : 2
similar to the -> preceding : 1
similar to the -> cache : 1
similar to the -> example : 1
similar to the -> main : 1
similar to the -> previous : 1
similar to the -> other : 1
similar to the -> data : 1
similar to the -> for : 1
to the following -> const : 2
to the following -> example : 1
to the following -> code : 2
to the following -> snippet : 1
to the following -> function : 1
to the following -> africa : 1
following const int -> return : 1
const int return -> v : 1
int return v -> float : 1
return v float -> return : 1
v float return -> v : 1
float return v -> you : 1
return v you -> might : 1
return v you -> have : 1
v you might -> have : 1
you might have -> these : 1
you might have -> we : 1
you might have -> heard : 1
might have these -> versions : 1
have these versions -> are : 1
these versions are -> further : 1
versions are further -> handled : 1
are further handled -> just : 1
further handled just -> like : 1
handled just like -> regular : 1
like regular reusable -> polymorphic : 1
regular reusable polymorphic -> are : 1
reusable polymorphic are -> two : 1
polymorphic are two -> one : 1
are two one -> resembling : 1
two one resembling -> a : 1
one resembling a -> farm : 1
resembling a farm -> with : 1
a farm with -> the : 1
farm with the -> number : 1
with the number -> of : 1
number of and -> the : 1
number of and -> as : 1
number of and -> blocks : 1
of and the -> other : 1
of and the -> programs : 1
of and the -> performance : 1
and the other -> one : 2
and the other -> half : 1
the other one -> mapping : 1
the other one -> contains : 1
other one mapping -> countries : 1
one mapping countries -> to : 1
mapping countries to -> their : 1
countries to their -> corresponding : 1
to their corresponding -> farm : 1
their corresponding farm -> enum : 1
corresponding farm enum -> class : 1
farm enum class -> continent : 1
enum class continent -> america : 1
class continent america -> auto : 1
continent america auto -> countries : 1
america auto countries -> say : 1
auto countries say -> we : 1
countries say we -> want : 1
say we want -> to : 5
want to sort -> the : 2
to sort the -> animals : 1
to sort the -> vectors : 1
to sort the -> adding : 1
to sort the -> hits : 1
sort the animals -> in : 1
the animals in -> order : 1
animals in order -> of : 1
in order of -> how : 1
in order of -> the : 2
order of how -> many : 1
of how many -> the : 1
how many the -> farm : 1
many the farm -> and : 1
the farm and -> the : 1
farm and the -> countries : 1
and the countries -> in : 1
the countries in -> order : 1
countries in order -> of : 1
order of the -> continent : 1
order of the -> but : 1
order of the -> data : 1
order of the -> which : 1
order of the -> following : 1
of the continent -> they : 1
the continent they -> belong : 1
continent they belong -> speaking : 1
they belong speaking -> in : 1
belong speaking in -> we : 1
speaking in we -> want : 1
in we want -> to : 2
sort the vectors -> according : 1
the vectors according -> to : 1
vectors according to -> the : 1
according to the -> as : 1
according to the -> it : 1
according to the -> requests : 1
to the as -> the : 1
to the as -> mentioned : 1
the as the -> vectors : 1
the as the -> value : 1
the as the -> algorithms : 1
the as the -> tuple : 1
the as the -> order : 1
as the vectors -> contain : 1
the vectors contain -> different : 1
vectors contain different -> value : 1
contain different value -> we : 1
different value we -> use : 1
value we use -> a : 1
we use a -> polymorphic : 1
we use a -> large : 1
we use a -> pointer : 1
we use a -> shared : 1
we use a -> function : 1
use a polymorphic -> in : 1
a polymorphic in -> order : 1
polymorphic in order -> to : 1
order to avoid -> code : 1
order to avoid -> a : 1
order to avoid -> explicitly : 1
order to avoid -> unnecessary : 1
order to avoid -> priority : 1
to avoid code -> we : 1
avoid code we -> tie : 1
code we tie -> the : 1
we tie the -> lambda : 1
tie the lambda -> to : 1
to a and -> the : 1
to a and -> instead : 1
a and the -> lambda : 1
a and the -> cost : 1
a and the -> result : 1
and the lambda -> can : 1
the lambda can -> be : 1
lambda can be -> used : 1
be used for -> sorting : 1
be used for -> iterating : 1
be used for -> the : 1
be used for -> small : 1
be used for -> holding : 1
be used for -> to : 1
be used for -> all : 1
be used for -> storing : 1
be used for -> protecting : 1
used for sorting -> both : 1
for sorting both -> const : 1
sorting both const -> return : 1
both const return -> both : 1
const return both -> vectors : 1
return both vectors -> can : 1
both vectors can -> be : 1
vectors can be -> sorted : 1
can be sorted -> with : 1
be sorted with -> the : 1
sorted with the -> same : 1
with the same -> lambda : 1
with the same -> name : 1
with the same -> properties : 1
with the same -> underlying : 1
the same lambda -> a : 1
same lambda a -> reusable : 1
lambda a reusable -> lambda : 1
a reusable lambda -> for : 1
a reusable lambda -> which : 1
reusable lambda for -> sorting : 1
lambda for sorting -> like : 1
for sorting like -> this : 1
sorting like this -> is : 1
like this is -> straightforward : 1
like this is -> not : 1
this is straightforward -> as : 1
is straightforward as -> we : 1
straightforward as we -> require : 1
as we require -> any : 1
we require any -> what : 1
require any what -> do : 1
any what do -> we : 1
what do we -> do : 1
do we do -> if : 1
do we do -> that : 1
we do if -> we : 1
do if we -> want : 1
want to make -> a : 1
want to make -> the : 1
to make a -> reusable : 1
to make a -> copy : 3
to make a -> tuple : 1
to make a -> simple : 1
to make a -> thread : 1
make a reusable -> lambda : 1
reusable lambda which -> requires : 1
lambda which requires -> a : 1
which requires a -> say : 1
requires a say -> we : 1
a say we -> want : 1
want to count -> the : 1
to count the -> number : 1
count the number -> of : 2
number of animals -> we : 1
of animals we -> have : 1
animals we have -> five : 1
we have five -> or : 1
have five or -> the : 1
five or the -> number : 1
or the number -> of : 1
number of countries -> in : 1
of countries in -> what : 1
countries in what -> we : 1
in what we -> have : 1
what we have -> to : 1
what we have -> seen : 1
have to do -> is : 2
have to do -> a : 1
have to do -> either : 1
is to wrap -> the : 1
to wrap the -> capture : 1
wrap the capture -> into : 1
the capture into -> a : 1
capture into a -> function : 1
into a function -> like : 1
a function like -> auto : 1
function like auto -> a : 1
function like auto -> value : 1
like auto a -> lambda : 1
like auto a -> auto : 1
auto a lambda -> capturing : 1
a lambda capturing -> x : 1
lambda capturing x -> is : 1
capturing x is -> return : 1
x is return -> return : 1
is return return -> auto : 2
is return return -> function : 1
return return auto -> equals : 1
return return auto -> const : 1
return return auto -> char : 1
return auto equals -> as : 1
auto equals as -> there : 1
equals as there -> are : 1
as there are -> no : 1
there are no -> deers : 1
there are no -> more : 2
are no deers -> in : 1
no deers in -> the : 1
deers in the -> auto : 1
in the auto -> is : 1
in the auto -> return : 1
the auto is -> two : 1
auto is two -> as : 1
is two as -> sweden : 1
two as sweden -> and : 1
as sweden and -> belarus : 1
sweden and belarus -> are : 1
and belarus are -> in : 1
belarus are in -> you : 1
are in you -> the : 1
in you the -> template : 1
you the template -> function : 1
the template function -> is : 1
the template function -> to : 1
template function is -> utilized : 1
function is utilized -> as : 1
is utilized as -> a : 1
utilized as a -> proxy : 1
as a proxy -> to : 1
a proxy to -> make : 1
proxy to make -> the : 1
to make the -> capture : 1
to make the -> code : 3
to make the -> program : 1
to make the -> maximum : 1
to make the -> function : 1
to make the -> compile : 1
to make the -> class : 1
to make the -> syntax : 1
to make the -> most : 1
make the capture -> type : 1
the capture type -> a : 1
capture type a -> the : 1
type a the -> returned : 1
a the returned -> polymorphic : 1
the returned polymorphic -> lambda : 1
returned polymorphic lambda -> does : 1
polymorphic lambda does -> not : 1
need to know -> about : 1
need to know -> before : 1
need to know -> whether : 1
to know about -> the : 1
know about the -> full : 1
know about the -> memory : 1
about the full -> type : 1
the full type -> of : 1
full type of -> the : 1
type of the -> the : 1
type of the -> function : 1
type of the -> variable : 2
type of the -> values : 1
of the the -> actual : 1
of the the -> running : 1
of the the -> hash : 1
of the the -> required : 1
of the the -> example : 1
of the the -> container : 1
of the the -> first : 1
of the the -> last : 1
of the the -> compiler : 1
of the the -> entire : 1
of the the -> caller : 1
of the the -> exception : 1
of the the -> data : 1
of the the -> opencl : 1
the the actual -> lambda : 1
the actual lambda -> function : 1
actual lambda function -> generated : 1
lambda function generated -> until : 1
function generated until -> the : 1
generated until the -> is : 1
until the is -> the : 1
is the compiler -> stumbles : 1
is the compiler -> goes : 1
is the compiler -> allowed : 1
is the compiler -> internally : 1
is the compiler -> or : 1
the compiler stumbles -> upon : 1
compiler stumbles upon -> the : 1
stumbles upon the -> following : 1
upon the following -> lambda : 1
the following lambda -> then : 1
following lambda then -> starts : 1
lambda then starts -> by : 1
then starts by -> generating : 1
starts by generating -> a : 1
by generating a -> function : 1
generating a function -> which : 1
function which returns -> a : 1
function which returns -> an : 2
function which returns -> if : 1
function which returns -> the : 2
which returns a -> polymorphic : 1
which returns a -> type : 1
returns a polymorphic -> lambda : 1
polymorphic lambda where -> an : 1
lambda where an -> like : 1
where an like -> return : 1
an like return -> return : 1
like return return -> that : 1
return return that -> function : 1
return that function -> is : 1
that function is -> the : 1
function is the -> compiler : 1
function is the -> you : 1
the compiler goes -> on : 1
compiler goes on -> and : 1
goes on and -> generates : 1
on and generates -> a : 1
and generates a -> class : 1
and generates a -> new : 1
and generates a -> lambda : 1
generates a class -> similar : 1
a class similar -> to : 1
class similar to -> lambda : 1
similar to lambda -> template : 1
to lambda template -> auto : 1
lambda template auto -> const : 1
template auto const -> return : 1
template auto const -> noexcept : 4
return int an -> object : 1
int an object -> of : 1
an object of -> this : 1
an object of -> type : 2
an object of -> a : 2
object of this -> class : 1
of this class -> is : 1
class is constructed -> and : 1
class is constructed -> like : 1
class is constructed -> via : 1
is constructed and -> passed : 1
constructed and passed -> to : 1
and passed to -> the : 1
passed to the -> algorithm : 1
passed to the -> algorithms : 1
to the algorithm -> like : 1
the algorithm like -> member : 1
algorithm like member -> function : 1
like member function -> of : 1
the class is -> further : 1
the class is -> then : 1
the class is -> still : 1
the class is -> constructed : 1
class is further -> converted : 1
is further converted -> to : 1
further converted to -> the : 1
converted to the -> following : 1
following const return -> propagation : 1
const return propagation -> for : 1
return propagation for -> common : 1
propagation for common -> mistake : 1
for common mistake -> when : 1
common mistake when -> writing : 1
mistake when writing -> code : 1
when writing code -> in : 1
writing code in -> is : 1
code in is -> that : 1
in is that -> a : 2
is that a -> const : 1
is that a -> class : 1
is that a -> member : 1
that a const -> initialized : 1
a const initialized -> object : 1
const initialized object -> can : 1
initialized object can -> still : 1
object can still -> manipulate : 1
can still manipulate -> the : 1
still manipulate the -> values : 1
manipulate the values -> that : 1
the values that -> member : 1
values that member -> pointers : 1
member pointers points -> the : 1
pointers points the -> following : 1
points the following -> example : 1
following example illustrates -> the : 1
example illustrates the -> foo : 1
illustrates the foo -> auto : 1
the foo auto -> compiles : 1
foo auto compiles -> despite : 1
auto compiles despite -> function : 1
compiles despite function -> being : 1
despite function being -> declared : 1
function being declared -> int : 1
being declared int -> const : 1
declared int const -> auto : 1
int const auto -> foo : 1
int const auto -> end : 1
const auto foo -> the : 1
auto foo the -> function : 1
foo the function -> mutating : 1
the function mutating -> the : 1
function mutating the -> valid : 1
mutating the valid -> to : 1
the valid to -> since : 1
valid to since -> the : 1
to since the -> pointer : 1
since the pointer -> is : 1
the pointer is -> not : 1
the pointer is -> pointing : 1
the pointer is -> a : 1
pointer is not -> only : 1
is not only -> the : 2
is not only -> fetching : 1
not only the -> object : 1
not only the -> variable : 1
only the object -> that : 1
the object that -> the : 1
object that the -> pointer : 1
that the pointer -> is : 1
pointer is pointing -> order : 1
is pointing order -> in : 1
pointing order in -> a : 1
order in a -> readable : 1
in a readable -> a : 1
a readable a -> wrapper : 1
readable a wrapper -> been : 1
a wrapper been -> added : 1
wrapper been added -> to : 1
been added to -> extensions : 1
added to extensions -> as : 1
to extensions as -> of : 1
extensions as of -> the : 1
as of the -> time : 1
of writing the -> latest : 1
writing the latest -> versions : 1
the latest versions -> of : 1
latest versions of -> clang : 1
versions of clang -> and : 1
of clang and -> the : 1
clang and the -> not : 1
the not note -> applies : 1
not note applies -> to : 1
note applies to -> and : 1
applies to and -> classes : 1
to and classes -> such : 1
and classes such -> is : 1
classes such is -> a : 1
such is a -> usage : 1
is a usage -> exp : 1
a usage exp -> foo : 1
usage exp foo -> auto : 1
exp foo auto -> const : 1
foo auto const -> will : 1
auto const will -> not : 3
const will not -> as : 2
const will not -> const : 1
will not as -> auto : 2
will not as -> the : 1
not as auto -> const : 2
as auto const -> will : 2
will not const -> is : 1
not const is -> int : 1
const is int -> semantics : 1
is int semantics -> semantics : 1
int semantics semantics -> is : 1
semantics semantics is -> a : 1
semantics is a -> concept : 1
is a concept -> introduced : 1
a concept introduced -> in : 1
concept introduced in -> in : 1
introduced in in -> our : 1
in in our -> is : 1
in our is -> quite : 1
in our is -> easy : 1
our is quite -> hard : 1
is quite hard -> to : 1
quite hard to -> grasp : 1
hard to grasp -> even : 1
hard to grasp -> when : 1
to grasp even -> by : 1
grasp even by -> experienced : 1
even by experienced -> we : 1
by experienced we -> will : 1
experienced we will -> try : 1
we will try -> to : 4
will try to -> give : 1
will try to -> access : 1
will try to -> illustrate : 1
will try to -> demonstrate : 1
will try to -> solve : 1
try to give -> you : 1
give you an -> explanation : 1
give you an -> example : 1
you an explanation -> of : 1
an explanation of -> how : 1
explanation of how -> it : 1
how it when -> the : 1
it when the -> compiler : 1
when the compiler -> utilizes : 1
when the compiler -> detects : 1
the compiler utilizes -> most : 1
compiler utilizes most -> why : 1
utilizes most why -> it : 1
most why it -> is : 1
why it is -> the : 1
it is the -> reason : 1
it is the -> equivalent : 1
it is the -> type : 1
it is the -> same : 1
it is the -> program : 1
it is the -> compiler : 1
is the reason -> even : 1
is the reason -> why : 1
the reason even -> has : 1
reason even has -> the : 1
even has the -> concept : 1
concept of move -> whereas : 1
of move whereas -> most : 1
move whereas most -> other : 1
whereas most other -> languages : 1
languages is a -> result : 1
is a result -> of : 2
result of being -> a : 1
of being a -> language : 1
being a language -> as : 1
a language as -> discussed : 1
language as discussed -> in : 1
as discussed in -> brief : 1
discussed in brief -> introduction : 1
introduction to if -> did : 1
to if did -> not : 1
if did not -> have : 1
did not have -> move : 1
not have move -> semantics : 1
have move semantics -> built : 1
move semantics built -> the : 1
semantics built the -> advantages : 1
built the advantages -> of : 1
advantages of semantics -> would : 1
of semantics would -> get : 1
semantics would get -> lost : 1
would get lost -> in : 1
get lost in -> many : 1
lost in many -> cases : 1
many cases and -> programmers : 1
cases and programmers -> would : 1
and programmers would -> have : 1
programmers would have -> to : 1
would have to -> perform : 1
would have to -> make : 1
would have to -> create : 2
would have to -> extract : 1
have to perform -> one : 1
have to perform -> a : 1
to perform one -> of : 1
perform one of -> the : 1
of the following -> redundant : 1
of the following -> coming : 1
of the following -> table : 1
of the following -> figure : 2
of the following -> example : 1
of the following -> is : 1
of the following -> code : 1
the following redundant -> operations : 1
following redundant operations -> with : 1
redundant operations with -> high : 1
operations with high -> performance : 1
with high performance -> pointers : 1
high performance pointers -> for : 1
performance pointers for -> objects : 1
pointers for objects -> like : 1
for objects like -> java : 1
objects like java -> losing : 1
like java losing -> the : 1
java losing the -> robustness : 1
losing the robustness -> of : 1
robustness of value -> swapping : 1
of value swapping -> operations : 1
value swapping operations -> at : 1
swapping operations at -> the : 1
operations at the -> cost : 1
cost of do -> not : 1
of do not -> want : 1
of do not -> rearrange : 1
do not want -> either : 1
do not want -> the : 2
not want either -> of : 1
want either of -> so : 1
either of so -> have : 1
of so have -> a : 1
so have a -> look : 1
have a look -> at : 10
at how move -> semantics : 1
how move semantics -> helps : 1
move semantics helps -> and : 1
semantics helps and -> we : 1
helps and we -> go : 1
and we go -> into : 1
we go into -> the : 1
go into the -> details : 1
into the details -> of : 3
the details of -> we : 1
the details of -> using : 1
the details of -> concurrency : 1
the details of -> the : 1
details of we -> first : 1
of we first -> explain : 1
of we first -> need : 1
we first explain -> and : 1
first explain and -> illustrate : 1
explain and illustrate -> the : 1
and illustrate the -> differences : 1
illustrate the differences -> between : 1
the differences between -> and : 1
between and swapping -> two : 1
and swapping two -> and : 1
swapping two and -> an : 1
two and an -> an : 1
and an an -> copying : 1
an an copying -> an : 1
an copying an -> object : 1
copying an object -> handling : 1
an object handling -> a : 1
object handling a -> a : 1
handling a a -> new : 1
a a new -> resource : 1
a new resource -> needs : 1
new resource needs -> to : 1
resource needs to -> be : 1
to be and -> the : 2
be and the -> resource : 1
be and the -> second : 1
and the resource -> from : 1
the resource from -> the : 1
resource from the -> source : 1
from the source -> object : 1
from the source -> and : 1
the source object -> needs : 1
the source object -> needed : 1
the source object -> is : 1
source object needs -> to : 1
object needs to -> be : 1
to be copied -> so : 1
to be copied -> in : 1
be copied so -> that : 1
copied so that -> the : 1
so that the -> two : 1
so that the -> compiler : 1
so that the -> new : 1
so that the -> removed : 1
so that the -> int : 1
so that the -> user : 1
so that the -> concatenation : 1
so that the -> application : 1
so that the -> thread : 1
that the two -> objects : 1
that the two -> threads : 4
the two objects -> are : 1
two objects are -> completely : 1
objects are completely -> resource : 1
are completely resource -> allocations : 1
completely resource allocations -> of : 1
resource allocations of -> copy : 1
allocations of copy -> construction : 1
of copy construction -> in : 1
copy construction in -> the : 1
construction in the -> following : 1
code block is -> illustrated : 1
block is illustrated -> as : 1
is illustrated as -> a : 1
illustrated as a -> auto : 1
as a auto -> b : 1
auto b following -> image : 2
b following image -> illustrates : 2
following image illustrates -> the : 3
following image illustrates -> how : 1
image illustrates the -> cdpaligncenter : 3
illustrates the cdpaligncenter -> an : 1
illustrates the cdpaligncenter -> resources : 2
the cdpaligncenter an -> object : 1
cdpaligncenter an object -> with : 1
an object with -> allocation : 1
an object with -> the : 1
an object with -> placement : 1
object with allocation -> and : 1
with allocation and -> copying : 1
allocation and copying -> is : 1
and copying is -> slow : 1
copying is slow -> in : 1
is slow in -> many : 1
slow in many -> the : 1
in many the -> source : 1
many the source -> object : 1
source object needed -> with : 1
object needed with -> move : 1
needed with move -> the : 1
with move the -> compiler : 1
move the compiler -> detects : 1
the compiler detects -> cases : 1
the compiler detects -> that : 1
compiler detects cases -> like : 1
detects cases like -> these : 1
cases like these -> where : 1
like these where -> the : 1
these where the -> old : 1
where the old -> object : 1
the old object -> is : 1
old object is -> not : 1
object is not -> tied : 1
is not tied -> to : 5
not tied to -> a : 5
a and instead -> performs : 1
and instead performs -> a : 1
instead performs a -> move : 1
performs a move -> this : 1
a move this -> will : 1
move this will -> be : 1
this will be -> explained : 1
will be explained -> in : 1
be explained in -> the : 1
explained in the -> following : 1
explained in the -> section : 1
explained in the -> will : 1
the following two -> move : 1
following two move -> semantics : 1
two move semantics -> were : 1
move semantics were -> added : 1
semantics were added -> in : 1
were added in -> swapping : 1
added in swapping -> the : 1
in swapping the -> content : 1
swapping the content -> of : 1
the content of -> two : 1
the content of -> to : 1
the content of -> the : 1
content of two -> objects : 1
of two objects -> was : 1
two objects was -> a : 1
objects was a -> common : 1
was a common -> way : 1
a common way -> to : 1
common way to -> transfer : 1
common way to -> implement : 1
way to transfer -> data : 1
to transfer data -> without : 1
transfer data without -> allocating : 1
data without allocating -> and : 1
without allocating and -> the : 1
allocating and the -> objects : 1
and the objects -> simply : 1
the objects simply -> swaps : 1
objects simply swaps -> the : 1
simply swaps the -> content : 1
swaps the content -> with : 1
the content with -> each : 1
content with each -> a : 1
with each a -> auto : 1
each a auto -> b : 1
the cdpaligncenter resources -> between : 1
the cdpaligncenter resources -> from : 1
cdpaligncenter resources between -> two : 1
resources between two -> an : 1
between two an -> moving : 1
two an moving -> an : 1
an moving an -> the : 1
moving an the -> destination : 1
an the destination -> object : 1
the destination object -> steals : 1
destination object steals -> the : 1
object steals the -> resource : 1
steals the resource -> straight : 1
the resource straight -> from : 1
resource straight from -> the : 1
straight from the -> source : 1
the source and -> the : 1
source and the -> source : 1
and the source -> object : 1
and the source -> code : 1
source object is -> as : 1
object is as -> illustrated : 1
is as illustrated -> in : 1
as illustrated in -> the : 2
following as you -> can : 1
you can it -> is : 2
can it is -> very : 1
can it is -> quite : 1
it is very -> similar : 1
it is very -> hard : 1
it is very -> well : 1
is very similar -> to : 2
very similar to -> except : 1
very similar to -> the : 1
similar to except -> that : 1
to except that -> the : 1
except that the -> object : 1
that the object -> does : 1
that the object -> still : 1
that the object -> was : 1
that the object -> of : 1
the object does -> not : 1
object does not -> have : 1
have to resources -> from : 1
to resources from -> the : 1
resources from the -> a : 1
from the a -> auto : 1
the a auto -> b : 2
the a auto -> auto : 1
auto b tell -> the : 1
b tell the -> compiler : 1
tell the compiler -> to : 2
compiler to move -> the : 1
to move the -> resource : 1
to move the -> instruction : 1
move the resource -> into : 1
the resource into -> following : 1
resource into following -> image : 1
into following image -> illustrates : 1
cdpaligncenter resources from -> one : 1
resources from one -> object : 2
from one object -> to : 2
one object to -> objects : 1
one object to -> freeing : 1
object to objects -> only : 1
to objects only -> makes : 1
objects only makes -> sense : 1
only makes sense -> if : 1
makes sense if -> the : 1
sense if the -> object : 1
if the object -> type : 1
if the object -> the : 1
the object type -> owns : 1
object type owns -> a : 1
type owns a -> resource : 1
owns a resource -> of : 1
a resource of -> some : 1
resource of some -> sort : 1
of some sort -> most : 1
some sort most -> common : 1
sort most common -> case : 1
most common case -> being : 1
common case being -> if : 1
case being if -> all : 1
being if all -> data : 1
if all data -> is : 1
all data is -> contained : 1
data is contained -> within : 1
is contained within -> the : 1
contained within the -> the : 1
within the the -> most : 1
within the the -> operating : 1
the the most -> efficient : 1
the most efficient -> way : 2
most efficient way -> to : 1
most efficient way -> of : 1
efficient way to -> move : 1
efficient way to -> handle : 1
way to move -> an : 1
to move an -> object : 1
move an object -> is : 1
an object is -> to : 1
an object is -> moved : 1
an object is -> contained : 1
object is to -> just : 1
is to just -> acquisition : 1
to just acquisition -> and : 1
just acquisition and -> the : 1
rule of that -> you : 1
of that you -> have : 1
you have a -> handle : 1
you have a -> quantitative : 1
you have a -> look : 2
you have a -> resource : 1
you have a -> data : 1
you have a -> very : 1
you have a -> code : 1
have a handle -> on : 1
a handle on -> what : 1
a handle on -> the : 1
handle on what -> is : 1
on what is -> going : 1
on what is -> true : 1
what is going -> go : 1
is going go -> into : 1
going go into -> fully : 1
go into fully -> understand : 1
into fully understand -> move : 1
fully understand move -> we : 1
understand move we -> need : 1
move we need -> to : 1
need to go -> back : 1
to go back -> to : 2
go back to -> the : 2
go back to -> if : 1
go back to -> otherwise : 1
back to the -> basics : 1
back to the -> functions : 1
back to the -> standard : 1
back to the -> pros : 1
back to the -> example : 1
back to the -> original : 1
back to the -> caller : 1
back to the -> auto : 1
to the basics -> of : 1
basics of classes -> and : 1
of classes and -> resource : 2
classes and resource -> acquisition : 2
resource acquisition in -> one : 1
resource acquisition in -> is : 1
resource acquisition in -> was : 1
acquisition in one -> of : 1
in one of -> the : 2
of the basic -> concepts : 1
the basic concepts -> of : 1
the basic concepts -> in : 1
basic concepts of -> classes : 1
concepts of classes -> and : 1
acquisition in is -> that : 1
that a class -> should : 1
class should completely -> handle : 1
should completely handle -> its : 1
completely handle its -> means : 1
handle its means -> that : 1
its means that -> when : 1
that when a -> class : 1
when a class -> is : 1
class is or -> the : 1
is or the -> class : 1
is or the -> program : 1
or the class -> should : 1
the class should -> make : 1
class should make -> sure : 1
should make sure -> its : 1
should make sure -> that : 1
make sure its -> resources : 1
sure its resources -> are : 1
its resources are -> also : 1
resources are also -> assigned : 1
are also assigned -> and : 1
also assigned and -> the : 1
assigned and the -> necessity : 1
and the necessity -> of : 1
the necessity of -> implementing : 1
necessity of implementing -> these : 1
of implementing these -> three : 1
implementing these three -> functions : 1
these three functions -> is : 1
three functions is -> commonly : 1
functions is commonly -> referred : 1
is commonly referred -> to : 1
commonly referred to -> as : 1
to as rule -> of : 1
as rule of -> rule : 1
rule of rule -> of : 1
of rule of -> three : 1
rule of three -> is : 2
rule of three -> can : 1
rule of three -> handles : 1
of three is -> such : 1
of three is -> all : 1
three is such -> an : 1
is such an -> obvious : 1
such an obvious -> part : 1
an obvious part -> of : 1
obvious part of -> and : 1
part of and -> stl : 1
of and stl -> that : 1
and stl that -> there : 1
stl that there -> is : 1
is a chance -> that : 1
is a chance -> the : 1
a chance that -> you : 1
chance that you -> are : 1
that you are -> using : 1
are using it -> without : 1
using it without -> thinking : 1
it without thinking -> about : 1
it without thinking -> we : 1
without thinking about -> but : 1
thinking about but -> if : 1
about but if -> we : 1
but if we -> take : 1
but if we -> know : 1
if we take -> a : 1
if we take -> another : 1
we take a -> look : 1
look at a -> simple : 3
look at a -> few : 1
look at a -> class : 1
at a simple -> function : 1
at a simple -> arena : 1
at a simple -> and : 1
a simple function -> which : 2
simple function which -> copies : 1
simple function which -> takes : 1
function which copies -> a : 1
which copies a -> there : 1
copies a there -> are : 1
a there are -> quite : 1
there are quite -> a : 1
are quite a -> few : 2
quite a few -> things : 1
quite a few -> good : 1
quite a few -> attempts : 1
a few things -> that : 1
few things that -> actually : 1
things that actually -> go : 1
that actually go -> on : 1
actually go on -> under : 1
go on under -> the : 1
on under the -> auto : 1
under the auto -> const : 1
the auto const -> auto : 1
the auto const -> return : 1
auto const auto -> const : 4
auto const auto -> auto : 1
auto const auto -> n : 2
auto const auto -> return : 1
const auto const -> auto : 2
const auto const -> really : 1
const auto const -> libraries : 1
const auto const -> addition : 1
const auto auto -> b : 1
auto auto b -> b : 1
auto b b -> allocated : 1
b b allocated -> data : 1
b allocated data -> in : 1
allocated data in -> into : 1
data in into -> a : 1
in into a -> new : 1
into a new -> allocation : 1
into a new -> is : 1
a new allocation -> in : 1
new allocation in -> vector : 1
allocation in vector -> line : 1
in vector line -> and : 1
vector line and -> the : 1
line and the -> data : 1
and the data -> of : 1
and the data -> structures : 1
the data of -> is : 1
the data of -> an : 1
data of is -> into : 1
of is into -> at : 1
is into at -> line : 1
into at line -> when : 1
at line when -> the : 1
line when the -> function : 1
when the function -> the : 4
when the function -> such : 1
when the function -> is : 1
the function the -> allocations : 1
the function the -> destructors : 1
the function the -> most : 1
the function the -> object : 1
the function the -> file : 1
function the allocations -> held : 1
the allocations held -> by : 1
allocations held by -> and : 1
held by and -> are : 1
by and are -> automatically : 1
by and are -> only : 1
and are automatically -> freed : 1
are automatically freed -> up : 1
automatically freed up -> by : 1
freed up by -> their : 1
up by their -> the : 1
by their the -> rule : 1
their the rule -> of : 1
rule of to -> automatic : 1
of to automatic -> resource : 1
to automatic resource -> acquisition : 1
automatic resource acquisition -> in : 1
acquisition in was -> implemented : 1
in was implemented -> using : 1
was implemented using -> a : 1
implemented using a -> guideline : 1
implemented using a -> condition : 1
using a guideline -> called : 1
a guideline called -> rule : 1
guideline called rule -> of : 1
called rule of -> where : 1
rule of where -> the : 1
of where the -> refers : 1
of where the -> first : 1
where the refers -> to : 1
the refers to -> the : 1
refers to the -> special : 1
refers to the -> amount : 1
refers to the -> amortized : 1
to the special -> member : 1
the special member -> and : 1
special member and -> the : 1
member and the -> rule : 1
the rule says -> that : 1
rule says that -> if : 1
says that if -> you : 1
that if you -> are : 2
that if you -> implement : 1
that if you -> overload : 1
if you are -> handling : 1
if you are -> new : 1
if you are -> using : 3
if you are -> writing : 1
if you are -> interested : 1
if you are -> not : 2
if you are -> working : 1
if you are -> do : 1
if you are -> mutating : 1
if you are -> doing : 2
if you are -> optimizing : 1
you are handling -> resources : 1
are handling resources -> in : 1
handling resources in -> any : 1
resources in any -> of : 1
in any of -> these : 1
in any of -> the : 1
any of these -> three : 1
any of these -> function : 1
any of these -> guidelines : 1
of these three -> you : 1
these three you -> most : 1
three you most -> likely : 1
you most likely -> need : 1
most likely need -> to : 1
likely need to -> do : 1
to do it -> in : 1
do it in -> all : 1
it in all -> three : 1
in all three -> of : 1
all three of -> have : 1
three of have -> a : 1
of have a -> look : 2
how the rule -> of : 2
of three can -> be : 1
three can be -> implemented : 1
can be implemented -> in : 2
can be implemented -> by : 3
can be implemented -> as : 1
can be implemented -> very : 1
can be implemented -> with : 1
can be implemented -> using : 1
be implemented in -> a : 2
be implemented in -> amortized : 1
implemented in a -> class : 1
implemented in a -> simple : 1
implemented in a -> similar : 1
in a class -> handling : 1
in a class -> might : 1
in a class -> or : 1
in a class -> that : 1
in a class -> reflect : 1
a class handling -> an : 1
class handling an -> allocated : 1
handling an allocated -> the : 1
an allocated the -> class : 1
allocated the class -> defined : 1
the class defined -> in : 1
class defined in -> the : 1
defined in the -> following : 1
defined in the -> outer : 1
defined in the -> header : 1
following code the -> allocated : 1
code the allocated -> resource : 1
the allocated resource -> is : 1
allocated resource is -> an : 1
resource is an -> array : 1
is an array -> of : 1
is an array -> that : 1
array of floats -> pointed : 1
of floats pointed -> at : 1
floats pointed at -> by : 1
pointed at by -> the : 1
at by the -> raw : 1
by the raw -> pointer : 1
the raw pointer -> note : 1
raw pointer note -> how : 1
pointer note how -> the : 1
note how the -> rule : 1
note how the -> actions : 1
of three handles -> the : 1
three handles the -> resource : 1
handles the resource -> by : 1
the resource by -> allocating : 1
resource by allocating -> and : 1
by allocating and -> deallocating : 1
allocating and deallocating -> the : 1
allocating and deallocating -> dynamic : 1
allocating and deallocating -> memory : 2
and deallocating the -> buffer : 1
deallocating the buffer -> new : 1
the buffer new -> copy : 1
buffer new copy -> new : 1
new copy new -> copy : 1
copy new copy -> delete : 1
new copy delete -> new : 1
copy delete new -> return : 1
delete new return -> delete : 1
new return delete -> it : 1
return delete it -> is : 1
delete it is -> valid : 1
it is valid -> to : 1
is valid to -> delete : 1
valid to delete -> a : 1
to delete a -> iterators : 1
delete a iterators -> for : 1
a iterators for -> accessing : 1
iterators for accessing -> the : 1
for accessing the -> auto : 1
for accessing the -> the : 1
accessing the auto -> const : 1
return auto const -> return : 8
return auto const -> noexcept : 2
return auto const -> if : 1
return auto const -> const : 1
const return this -> the : 1
return this the -> handled : 1
this the handled -> resource : 1
the handled resource -> is : 1
handled resource is -> a : 1
resource is a -> block : 1
is a block -> of : 1
a block of -> allocated : 1
a block of -> memory : 1
a block of -> contiguous : 1
block of allocated -> allocated : 1
of allocated allocated -> memory : 1
allocated allocated memory -> is : 1
allocated memory is -> probably : 1
memory is probably -> the : 1
probably the most -> common : 1
probably the most -> used : 1
probably the most -> commonly : 1
the most common -> resource : 1
the most common -> cdpalign : 1
the most common -> reason : 1
most common resource -> for : 1
common resource for -> classes : 1
resource for classes -> to : 1
for classes to -> but : 1
classes to but -> remember : 1
to but remember -> that : 1
but remember that -> a : 1
remember that a -> resource : 1
that a resource -> can : 1
that a resource -> is : 1
a resource can -> be : 1
resource can be -> so : 1
resource can be -> but : 1
can be so -> much : 1
can be so -> fast : 1
be so much -> a : 1
so much a -> a : 1
much a a -> handle : 1
a a handle -> for : 1
a handle for -> a : 1
handle for a -> texture : 1
for a texture -> on : 1
a texture on -> the : 1
texture on the -> graphics : 1
on the graphics -> a : 1
the graphics a -> thread : 1
graphics a thread -> and : 1
a thread and -> so : 1
thread and so -> can : 1
and so can -> construct : 1
so can construct -> a : 1
can construct a -> like : 1
construct a like -> actual : 1
a like actual -> object : 1
like actual object -> will : 1
actual object will -> then : 1
object will then -> look : 1
will then look -> like : 1
then look like -> this : 1
look like this -> in : 1
like this in -> computer : 1
this in computer -> and : 1
in computer and -> destructor : 1
computer and destructor -> are : 1
and destructor are -> invoked : 1
destructor are invoked -> in : 1
are invoked in -> the : 1
invoked in the -> following : 1
following auto auto -> as : 1
auto auto as -> is : 1
auto as is -> already : 1
as is already -> when : 1
is already when -> the : 1
already when the -> function : 1
function the destructors -> are : 1
the destructors are -> automatically : 1
destructors are automatically -> of : 1
are automatically of -> the : 1
automatically of the -> rule : 1
rule of a -> correct : 1
of a correct -> implementation : 1
a correct implementation -> of : 1
a correct implementation -> depending : 1
correct implementation of -> the : 1
three is all -> that : 1
is all that -> is : 1
all that is -> required : 1
that is required -> for : 1
is required for -> a : 2
required for a -> class : 1
required for a -> specific : 1
a class to -> handle : 1
class to handle -> its : 1
to handle its -> internal : 1
handle its internal -> two : 1
its internal two -> problems : 1
internal two problems -> which : 1
two problems which -> cannot : 1
problems which cannot -> be : 1
cannot be in -> the : 1
in the our -> resource : 1
the our resource -> can : 1
our resource can -> be : 1
can be but -> there : 1
can be but -> the : 1
be but there -> are : 1
there are other -> types : 1
there are other -> nonstandard : 1
there are other -> solutions : 1
are other types -> of : 1
other types of -> resources : 1
other types of -> variables : 1
types of resources -> where : 1
of resources where -> a : 1
resources where a -> copy : 1
where a copy -> make : 1
a copy make -> for : 1
copy make for -> the : 1
make for the -> resource : 1
for the resource -> contained : 1
the resource contained -> in : 1
resource contained in -> a : 1
contained in a -> class : 1
contained in a -> container : 1
contained in a -> list : 1
a class might -> be : 1
class might be -> a : 1
be a a -> network : 1
a a network -> or : 1
a network or -> something : 1
network or something -> else : 1
or something else -> which : 1
or something else -> that : 1
something else which -> it : 1
else which it -> is : 1
which it is -> not : 1
it is not -> possible : 3
it is not -> from : 1
it is not -> allowed : 1
it is not -> tied : 2
it is not -> required : 1
it is not -> computed : 1
it is not -> trivially : 1
is not possible -> to : 3
is not possible -> with : 1
is not possible -> is : 1
is not possible -> for : 1
possible to in -> these : 1
to in these -> it : 1
in these it -> is : 1
these it is -> simply : 1
it is simply -> not : 1
is simply not -> possible : 1
simply not possible -> to : 1
possible to pass -> around : 1
possible to pass -> the : 1
to pass around -> the : 1
pass around the -> if : 1
around the if -> we : 1
the if we -> return : 1
the if we -> are : 1
the if we -> considered : 1
if we return -> our : 1
we return our -> from : 1
return our from -> a : 1
our from a -> the : 1
from a the -> entire : 1
a the entire -> array : 1
the entire array -> needs : 1
the entire array -> without : 1
entire array needs -> to : 1
array needs to -> be : 1
to be following -> example : 1
be following example -> shows : 1
following example shows -> how : 1
following example shows -> these : 1
example shows how -> created : 1
shows how created -> inside : 1
how created inside -> is : 1
created inside is -> fully : 1
inside is fully -> copied : 1
is fully copied -> from : 1
fully copied from -> when : 1
copied from when -> returned : 1
from when returned -> from : 1
when returned from -> a : 1
returned from a -> auto : 1
returned from a -> function : 1
from a auto -> return : 1
a auto return -> auto : 1
auto return auto -> buffer : 1
auto return auto -> return : 6
auto return auto -> noexcept : 1
auto return auto -> auto : 2
auto return auto -> is : 1
return auto buffer -> we : 1
auto buffer we -> would : 1
buffer we would -> add : 1
we would add -> to : 1
would add to -> this : 1
add to this -> copy : 1
add to this -> is : 1
to this copy -> will : 1
this copy will -> be : 1
copy will be -> omitted : 1
will be omitted -> as : 1
be omitted as -> the : 1
omitted as the -> compiler : 1
as the compiler -> sees : 1
compiler sees that -> is : 1
sees that is -> not : 1
that is not -> used : 1
that is not -> at : 1
that is not -> in : 1
that is not -> comparable : 1
that is not -> necessarily : 1
that is not -> trivially : 1
is not used -> any : 1
not used any -> copies : 1
used any copies -> without : 1
any copies without -> move : 1
move move these -> problems : 1
move these problems -> were : 1
these problems were -> usually : 1
problems were usually -> avoided : 1
were usually avoided -> by : 1
usually avoided by -> allocating : 1
avoided by allocating -> via : 1
by allocating via -> a : 1
allocating via a -> and : 1
via a and -> passing : 1
a and passing -> around : 1
and passing around -> the : 1
passing around the -> pointer : 1
around the pointer -> instead : 1
the pointer instead -> of : 1
pointer instead of -> the : 1
instead of the -> actual : 2
instead of the -> i : 1
instead of the -> this : 1
of the actual -> in : 1
of the actual -> distance : 1
of the actual -> if : 1
of the actual -> gpu : 1
the actual in -> this : 1
actual in this -> we : 1
this we utilize -> an : 1
we utilize an -> raw : 1
utilize an raw -> pointer : 1
an raw pointer -> for : 1
raw pointer for -> although : 1
pointer for although -> some : 1
for although some -> sort : 1
although some sort -> of : 1
sort of smart -> pointer : 1
of smart pointer -> is : 1
smart pointer is -> probably : 1
pointer is probably -> the : 1
the most used -> case : 1
the most used -> such : 1
most used case -> or : 1
used case or -> the : 1
case or the -> deprecated : 1
or the deprecated -> auto : 1
the deprecated auto -> buffer : 1
deprecated auto buffer -> new : 1
auto buffer new -> return : 1
buffer new return -> the : 1
new return the -> actual : 1
return the actual -> buffer : 1
return the actual -> function : 1
the actual buffer -> object : 1
actual buffer object -> just : 1
buffer object just -> the : 1
object just the -> auto : 1
just the auto -> buffer : 1
the auto buffer -> buffer : 1
auto buffer buffer -> is : 1
buffer buffer is -> has : 1
buffer is has -> several : 1
is has several -> advantage : 1
has several advantage -> of : 1
several advantage of -> value : 1
advantage of value -> semantics : 1
of value semantics -> in : 1
value semantics in -> is : 1
semantics in is -> the : 1
in is the -> programmer : 1
is the programmer -> is : 1
is the programmer -> specifies : 1
the programmer is -> not : 1
programmer is not -> relieved : 1
is not relieved -> from : 1
not relieved from -> handling : 1
relieved from handling -> pointers : 1
from handling pointers -> manually : 1
handling pointers manually -> code : 1
pointers manually code -> gets : 1
manually code gets -> bloated : 1
code gets bloated -> with : 1
gets bloated with -> pointers : 1
bloated with pointers -> which : 1
with pointers which -> are : 1
pointers which are -> simply : 1
are simply only -> used : 1
simply only used -> for : 1
only used for -> the : 1
used for the -> sake : 1
used for the -> buckets : 1
used for the -> it : 1
for the sake -> of : 2
the sake of -> heap : 1
the sake of -> compare : 1
the sake of -> see : 1
sake of heap -> allocations : 1
of heap allocations -> are : 1
heap allocations are -> leading : 1
allocations are leading -> to : 1
are leading to -> potentially : 1
leading to potentially -> slower : 1
to potentially slower -> code : 1
potentially slower code -> due : 1
slower code due -> to : 1
code due to -> cache : 1
due to cache -> misses : 1
to cache misses -> and : 1
cache misses and -> an : 1
misses and an -> increase : 1
and an increase -> in : 1
an increase in -> allocations : 1
increase in allocations -> move : 1
in allocations move -> order : 1
allocations move order -> to : 1
move order to -> get : 1
order to get -> rid : 1
order to get -> the : 1
order to get -> a : 2
to get rid -> of : 2
get rid of -> these : 1
get rid of -> the : 2
rid of these -> rule : 1
of these rule -> of : 1
these rule of -> expanded : 1
rule of expanded -> to : 1
of expanded to -> rule : 1
expanded to rule -> of : 1
to rule of -> be : 1
rule of be -> in : 1
of be in -> addition : 1
be in addition -> to : 1
in addition to -> the : 1
in addition to -> a : 1
addition to the -> and : 1
addition to the -> stl : 2
addition to the -> loop : 1
addition to the -> it : 1
to the and -> we : 1
to the and -> instead : 1
to the and -> correctness : 1
to the and -> are : 1
and we now -> also : 1
we now also -> have : 1
now also have -> and : 1
have and of -> taking : 1
and of taking -> a : 1
of taking a -> const : 1
taking a const -> reference : 1
const reference as -> a : 1
reference as a -> the : 1
as a the -> move : 1
as a the -> program : 1
as a the -> algorithm : 1
a the move -> versions : 1
the move versions -> accept : 1
move versions accept -> a : 1
versions accept a -> modifier : 1
accept a modifier -> indicates : 1
a modifier indicates -> that : 1
modifier indicates that -> the : 1
indicates that the -> parameter : 1
indicates that the -> function : 1
that the parameter -> is : 1
the parameter is -> an : 1
parameter is an -> object : 1
parameter is an -> integer : 1
is an object -> which : 2
is an object -> that : 1
an object which -> we : 1
an object which -> is : 1
an object which -> represent : 1
object which we -> intend : 1
which we intend -> to : 1
we intend to -> move : 1
intend to move -> from : 1
to move from -> instead : 1
move from instead -> of : 1
from instead of -> copying : 1
instead of copying -> speaking : 1
instead of copying -> to : 1
of copying speaking -> in : 1
copying speaking in -> this : 1
speaking in this -> is : 1
in this is -> called : 1
in this is -> a : 1
in this is -> not : 1
this is called -> an : 1
is called an -> and : 1
called an and -> we : 1
an and we -> will : 1
we will talk -> a : 1
we will talk -> more : 1
we will talk -> about : 1
will talk a -> little : 1
talk a little -> bit : 1
a little bit -> more : 4
little bit more -> about : 1
little bit more -> advanced : 1
little bit more -> performance : 1
little bit more -> boost : 1
bit more about -> those : 1
more about those -> the : 1
about those the -> copy : 1
those the copy -> functions : 1
the copy functions -> copy : 1
copy functions copy -> an : 1
functions copy an -> the : 1
copy an the -> move : 1
an the move -> equivalents : 1
the move equivalents -> are : 1
move equivalents are -> intended : 1
equivalents are intended -> to : 1
are intended to -> move : 1
intended to move -> resources : 1
to move resources -> from : 1
move resources from -> one : 1
object to freeing -> the : 1
to freeing the -> object : 1
freeing the object -> from : 1
the object from -> the : 1
object from the -> important : 1
from the important -> to : 1
important to notice -> that : 1
to notice that -> the : 1
to notice that -> it : 1
notice that the -> object : 1
the object still -> has : 1
object still has -> to : 1
still has to -> remain : 1
has to remain -> in : 1
to remain in -> a : 1
remain in a -> valid : 1
a valid the -> object : 1
a valid the -> algorithms : 1
valid the object -> must : 1
the object must -> still : 1
object must still -> be : 1
must still be -> able : 1
still be able -> to : 2
to execute destructor -> a : 1
execute destructor a -> new : 1
destructor a new -> is : 1
a new is -> how : 1
a new is -> passed : 1
a new is -> that : 1
new is how -> we : 1
how we would -> extend : 1
how we would -> implement : 1
how we would -> perform : 1
we would extend -> our : 1
would extend our -> with : 1
extend our with -> and : 1
our with and -> as : 1
with and as -> you : 1
and as you -> can : 1
you can these -> functions : 1
can these functions -> will : 1
these functions will -> not : 1
functions will not -> exception : 1
functions will not -> show : 1
will not exception -> and : 1
not exception and -> can : 1
exception and can -> therefore : 1
and can therefore -> be : 1
can therefore be -> marked : 1
therefore be marked -> as : 1
be marked as -> this : 1
marked as this -> is : 1
as this is -> as : 1
as this is -> one : 1
this is as -> opposed : 1
is as opposed -> to : 1
as opposed to -> the : 2
as opposed to -> more : 1
as opposed to -> we : 1
as opposed to -> regular : 1
opposed to the -> they : 1
opposed to the -> free : 1
to the they -> do : 1
the they do -> not : 1
they do not -> allocate : 3
they do not -> require : 1
they do not -> add : 1
they do not -> have : 1
do not allocate -> or : 1
do not allocate -> any : 1
do not allocate -> memory : 1
not allocate or -> do : 1
allocate or do -> something : 1
or do something -> which : 1
do something which -> might : 1
something which might -> throw : 1
which might throw -> buffer : 1
might throw buffer -> noexcept : 1
throw buffer noexcept -> noexcept : 1
buffer noexcept noexcept -> return : 1
noexcept noexcept return -> when : 1
noexcept noexcept return -> the : 1
noexcept return when -> the : 1
return when the -> compiler : 1
compiler detects that -> we : 1
detects that we -> perform : 1
we perform what -> seems : 1
perform what seems -> to : 1
what seems to -> be : 1
seems to be -> a : 2
to be a -> such : 1
to be a -> linear : 1
to be a -> viable : 1
be a such -> as : 1
a such as -> returning : 1
a such as -> the : 1
such as returning -> a : 1
as returning a -> a : 1
returning a a -> but : 1
a a but -> the : 1
a but the -> value : 1
but the value -> used : 1
the value used -> it : 1
value used it -> will : 1
used it will -> utilize : 1
it will utilize -> the : 1
will utilize the -> instead : 1
will utilize the -> note : 1
utilize the instead -> of : 1
the instead of -> is : 1
the instead of -> reaching : 1
the instead of -> using : 1
instead of is -> pretty : 1
of is pretty -> the : 1
is pretty the -> interface : 1
pretty the interface -> remains : 1
the interface remains -> as : 1
interface remains as -> clear : 1
remains as clear -> as : 1
as clear as -> when : 1
clear as when -> copying : 1
as when copying -> under : 1
when copying under -> the : 1
copying under the -> the : 1
under the the -> compiler : 1
under the the -> resultant : 1
under the the -> implementor : 1
the the compiler -> has : 1
the the compiler -> now : 1
the the compiler -> a : 1
the the compiler -> would : 1
compiler has performed -> a : 1
has performed a -> simple : 1
performed a simple -> the : 1
a simple the -> programmer : 1
simple the programmer -> does : 1
the programmer does -> not : 1
programmer does not -> need : 1
need to use -> any : 1
need to use -> a : 1
need to use -> the : 1
need to use -> from : 1
to use any -> esoteric : 1
use any esoteric -> pointers : 1
any esoteric pointers -> or : 1
esoteric pointers or -> in : 1
pointers or in -> order : 1
or in order -> to : 2
to avoid a -> as : 1
avoid a as -> the : 1
a as the -> class : 1
as the class -> has : 1
the class has -> the : 3
the class has -> two : 1
class has the -> compiler : 1
class has the -> following : 1
class has the -> ability : 1
has the compiler -> handles : 1
compiler handles this -> not : 1
handles this not -> forget : 1
this not forget -> to : 1
not forget to -> mark : 1
forget to mark -> your : 1
to mark your -> and : 1
mark your and -> operators : 1
your and operators -> as : 1
and operators as -> they : 1
operators as they -> might : 1
as they might -> throw : 1
they might throw -> an : 1
might throw an -> of : 1
might throw an -> allocate : 1
throw an of -> not : 1
an of not -> marking : 1
of not marking -> them : 1
not marking them -> prevents : 1
marking them prevents -> and : 1
them prevents and -> algorithms : 1
prevents and algorithms -> from : 1
and algorithms from -> utilizing : 1
algorithms from utilizing -> them : 1
from utilizing them -> and : 1
utilizing them and -> resorts : 1
them and resorts -> to : 1
and resorts to -> a : 1
resorts to a -> regular : 1
to a regular -> under : 1
to a regular -> class : 1
a regular under -> certain : 1
regular under certain -> variables : 1
under certain variables -> and : 1
certain variables and -> when : 1
variables and when -> is : 1
and when is -> the : 1
when is the -> compiler : 1
when is the -> answer : 1
the compiler allowed -> to : 1
compiler allowed to -> move : 1
allowed to move -> objects : 1
to move objects -> instead : 1
move objects instead -> of : 1
objects instead of -> as : 1
objects instead of -> mutating : 1
instead of as -> a : 1
as a short -> the : 1
a short the -> compiler : 1
a short the -> layouts : 1
short the compiler -> moves : 1
the compiler moves -> an : 1
compiler moves an -> object : 1
moves an object -> when : 1
an object when -> the : 2
object when the -> object : 1
object when the -> is : 1
object when the -> counter : 1
when the object -> can : 1
when the object -> goes : 1
the object can -> be : 1
the object can -> store : 1
object can be -> categorized : 1
object can be -> copied : 1
can be categorized -> as : 1
be categorized as -> an : 1
categorized as an -> the : 1
as an the -> term : 1
as an the -> range : 1
an the term -> sound : 1
the term sound -> but : 1
term sound but -> in : 1
sound but in -> essence : 1
but in essence -> it : 1
in essence it -> is : 1
essence it is -> just : 1
it is just -> an : 1
it is just -> slightly : 1
is just an -> object : 1
is just an -> example : 1
just an object -> which : 1
object which is -> not : 1
to a named -> for : 1
a named for -> either : 1
named for either -> of : 1
for either of -> the : 1
either of the -> following : 1
either of the -> the : 1
the following coming -> straight : 1
following coming straight -> out : 1
coming straight out -> of : 2
straight out of -> a : 2
out of a -> make : 1
out of a -> return : 1
out of a -> combination : 1
of a make -> a : 1
a make a -> variable : 1
make a variable -> an : 1
a variable an -> by : 1
variable an by -> using : 1
an by using -> following : 1
by using following -> example : 1
using following example -> demonstrates : 1
following example demonstrates -> both : 1
following example demonstrates -> how : 2
example demonstrates both -> of : 1
demonstrates both of -> these : 1
both of these -> the : 1
of these the -> object : 1
these the object -> coming : 1
the object coming -> out : 1
object coming out -> of : 1
coming out of -> is : 1
out of is -> not : 1
of is not -> tied : 1
to a therefore -> moved : 1
a therefore moved -> to : 1
therefore moved to -> x : 1
moved to x -> auto : 1
to x auto -> x : 1
x auto x -> is : 1
auto x is -> passed : 1
x is passed -> into : 1
is passed into -> therefore : 1
passed into therefore -> to : 1
into therefore to -> y : 1
therefore to y -> y : 1
to y y -> make : 1
y y make -> this : 1
y make this -> a : 1
bit more advanced -> by : 1
more advanced by -> setting : 1
advanced by setting -> a : 1
by setting a -> member : 1
setting a member -> variable : 1
a member variable -> of : 1
variable of type -> in : 1
of type in -> a : 1
type in a -> look : 1
type in a -> as : 1
at a few -> cases : 1
at a few -> parallel : 1
a few cases -> of : 1
few cases of -> copying : 1
cases of copying -> in : 1
of copying in -> given : 1
copying in given -> the : 1
in given the -> following : 1
given the following -> bird : 1
the following bird -> auto : 1
following bird auto -> auto : 1
bird auto auto -> bird : 1
auto auto bird -> the : 1
auto bird the -> song : 1
bird the song -> is : 1
the song is -> tied : 1
song is tied -> to : 1
is tied to -> the : 1
is tied to -> a : 1
tied to the -> a : 1
to the a -> is : 1
to the a -> doubly : 1
to the a -> command : 1
the a is -> passed : 1
a is passed -> a : 1
is passed a -> the : 1
passed a the -> song : 1
a the song -> string : 2
the song string -> is : 2
song string is -> coming : 1
song string is -> held : 1
string is coming -> straight : 1
is coming straight -> out : 1
of a return -> a : 1
a return a -> the : 1
return a the -> song : 1
string is held -> by : 1
is held by -> is : 1
held by is -> declared : 1
held by is -> always : 1
by is declared -> and : 1
is declared and -> thus : 1
declared and thus -> not : 1
and thus not -> allowed : 1
thus not allowed -> to : 1
allowed to auto -> you : 1
to auto you -> can : 1
auto you can -> determining : 1
auto you can -> the : 1
auto you can -> overload : 1
you can determining -> whether : 1
can determining whether -> an : 1
determining whether an -> object : 1
whether an object -> is : 2
object is moved -> or : 1
is moved or -> copied : 1
or copied is -> quite : 1
copied is quite -> if : 1
is quite if -> it : 1
quite if it -> has : 1
if it has -> a : 1
if it has -> multiple : 1
if it has -> that : 1
if it has -> nothing : 1
it has a -> variable : 1
it has a -> subtle : 1
it has a -> capacity : 1
has a variable -> it : 1
a variable it -> is : 1
variable it is -> it : 1
it is it -> is : 1
it is it -> may : 1
is it is -> arguments : 1
is it is -> the : 1
is it is -> possible : 2
is it is -> merged : 1
it is arguments -> by : 1
is arguments by -> move : 1
move when a -> function : 1
when a function -> which : 1
when a function -> each : 1
when a function -> needs : 1
function which converts -> a : 1
which converts a -> to : 1
converts a to -> lower : 1
a to lower -> in : 1
to lower in -> order : 1
lower in order -> to : 1
use the where -> and : 1
the where and -> the : 1
where and the -> it : 1
and the it -> may : 1
the it may -> seem : 1
it may seem -> like : 1
it may seem -> that : 1
may seem like -> two : 1
seem like two -> functions : 1
like two functions -> are : 1
two functions are -> is : 1
functions are is -> a : 1
are is a -> const : 1
a const auto -> clone : 1
const auto clone -> c : 1
auto clone c -> return : 1
clone c return -> is : 1
c return is -> an : 1
return is an -> c : 1
return is an -> example : 1
is an c -> return : 1
an c return -> by : 1
c return by -> taking : 1
return by taking -> the : 1
by taking the -> by : 1
taking the by -> value : 1
the by value -> we : 1
by value we -> can : 1
value we can -> write : 1
we can write -> one : 1
we can write -> most : 2
we can write -> efficient : 1
we can write -> a : 1
we can write -> the : 2
we can write -> our : 2
can write one -> function : 1
write one function -> which : 1
one function which -> covers : 1
function which covers -> both : 1
which covers both -> c : 1
covers both c -> return : 1
both c return -> see : 1
c return see -> why : 1
return see why -> this : 1
see why this -> implementation : 1
why this implementation -> of : 1
this implementation of -> avoids : 1
implementation of avoids -> unnecessary : 1
of avoids unnecessary -> copying : 1
avoids unnecessary copying -> where : 1
unnecessary copying where -> passed : 1
copying where passed -> a : 1
where passed a -> regular : 1
passed a regular -> shown : 1
a regular shown -> the : 1
regular shown the -> content : 1
shown the content -> of : 1
content of to -> the : 1
of to the -> function : 1
of to the -> initial : 1
to the function -> and : 2
to the function -> invoked : 1
to the function -> has : 1
the function and -> then : 2
function and then -> back : 2
and then back -> to : 1
and then back -> the : 1
then back to -> the : 1
to the functions -> str : 1
the functions str -> passed : 1
functions str passed -> an : 1
str passed an -> shown : 1
passed an shown -> as : 1
an shown as -> the : 1
shown as the -> content : 1
as the content -> to : 1
the content to -> the : 1
content to the -> function : 1
then back the -> function : 1
back the function -> no : 1
the function no -> copy : 1
function no copy -> was : 1
no copy was -> made : 1
copy was made -> through : 1
was made through -> the : 1
made through the -> function : 1
through the function -> str : 1
the function str -> move : 1
function str move -> semantics : 1
str move semantics -> and : 1
rule of section -> discusses : 1
of section discusses -> automatically : 1
section discusses automatically -> generated : 1
discusses automatically generated -> important : 1
automatically generated important -> to : 1
generated important to -> know : 1
important to know -> that : 1
important to know -> what : 1
important to know -> the : 1
to know that -> the : 2
to know that -> an : 1
know that the -> generated : 1
know that the -> expensive : 1
know that the -> stl : 1
know that the -> length : 1
know that the -> reference : 1
that the generated -> function : 1
that the generated -> assembler : 1
the generated function -> does : 1
the generated function -> is : 1
generated function does -> not : 1
function does not -> have : 1
function does not -> f : 1
function does not -> need : 1
not have strong -> exception : 1
have strong exception -> if : 1
strong exception if -> an : 1
exception if an -> exception : 1
exception is thrown -> during : 2
exception is thrown -> if : 1
is thrown during -> the : 2
thrown during the -> the : 1
thrown during the -> execution : 1
during the the -> object : 1
the the object -> might : 1
the object might -> end : 1
object might end -> up : 1
might end up -> in : 1
might end up -> constructing : 1
end up in -> a : 1
end up in -> the : 3
up in a -> state : 1
in a state -> where : 1
in a state -> called : 1
a state where -> it : 1
state where it -> is : 1
where it is -> only : 1
where it is -> it : 1
where it is -> undetermined : 1
it is only -> partially : 1
it is only -> a : 1
it is only -> denoted : 1
it is only -> one : 1
is only partially -> with : 1
only partially with -> the : 1
partially with the -> and : 1
with the and -> the : 1
with the and -> member : 1
with the and -> contracts : 1
and the and -> can : 1
the and can -> be : 1
can be generated -> by : 1
be generated by -> the : 1
generated by the -> although : 1
generated by the -> threads : 1
generated by the -> and : 1
by the although -> some : 1
the although some -> compilers : 1
although some compilers -> allow : 1
some compilers allow -> themselves : 1
compilers allow themselves -> to : 1
allow themselves to -> automatically : 1
themselves to automatically -> generate : 1
to automatically generate -> these : 1
automatically generate these -> functions : 1
generate these functions -> under : 1
these functions under -> certain : 1
functions under certain -> conditions : 1
under certain conditions -> about : 1
under certain conditions -> where : 1
certain conditions about -> this : 1
conditions about this -> we : 1
about this we -> can : 1
this we can -> simply : 1
this we can -> create : 1
this we can -> utilize : 1
this we can -> see : 1
this we can -> also : 1
this we can -> avoid : 1
this we can -> provide : 1
we can simply -> force : 1
we can simply -> type : 1
we can simply -> make : 1
can simply force -> the : 1
simply force the -> compiler : 1
force the compiler -> to : 1
compiler to generate -> them : 1
compiler to generate -> something : 1
to generate them -> by : 1
generate them by -> using : 1
them by using -> the : 1
by using the -> the : 1
by using the -> stack : 1
by using the -> possible : 1
by using the -> whole : 1
by using the -> or : 1
by using the -> command : 1
by using the -> global : 2
by using the -> operator : 1
by using the -> type : 1
by using the -> corresponding : 1
using the the -> case : 1
using the the -> first : 1
the the case -> of : 1
case of the -> we : 1
of the we -> simply : 1
of the we -> would : 1
of the we -> end : 1
of the we -> will : 2
of the we -> are : 1
of the we -> need : 1
of the we -> cannot : 1
of the we -> explicitly : 1
the we simply -> extend : 1
the we simply -> delete : 1
we simply extend -> it : 1
simply extend it -> like : 1
extend it like -> bird : 1
it like bird -> auto : 1
like bird auto -> noexcept : 1
bird auto noexcept -> auto : 1
auto noexcept auto -> noexcept : 1
noexcept auto noexcept -> make : 1
noexcept auto noexcept -> static : 1
auto noexcept make -> it : 1
noexcept make it -> even : 1
make it even -> if : 1
make it even -> here : 1
it even if -> you : 1
even if you -> do : 1
even if you -> never : 1
if you do -> not : 1
you do not -> declare : 1
do not declare -> any : 1
not declare any -> custom : 1
declare any custom -> or : 1
any custom or -> the : 1
custom or the -> are : 1
or the are -> implicitly : 1
the are implicitly -> meaning : 1
are implicitly meaning -> that : 1
implicitly meaning that -> the : 1
meaning that the -> first : 1
that the first -> class : 1
the first class -> actually : 1
first class actually -> handles : 1
class actually handles -> bird : 1
actually handles bird -> nothing : 1
handles bird nothing -> the : 1
bird nothing the -> compiler : 1
nothing the compiler -> generates : 1
the compiler generates -> everything : 1
the compiler generates -> a : 1
the compiler generates -> when : 1
compiler generates everything -> other : 1
generates everything other -> adding : 1
everything other adding -> just : 1
other adding just -> a : 1
adding just a -> custom : 1
just a custom -> shown : 1
a custom shown -> as : 1
custom shown as -> bird : 1
shown as bird -> is : 1
as bird is -> auto : 1
bird is auto -> auto : 1
is auto auto -> we : 1
auto auto we -> do : 1
auto auto we -> require : 1
auto we do -> the : 1
we do the -> move : 1
we do the -> same : 1
do the move -> operators : 1
the move operators -> are : 1
move operators are -> not : 1
operators are not -> and : 1
are not and -> the : 1
not and the -> class : 1
and the class -> will : 1
the class will -> always : 1
the class will -> look : 1
class will always -> be : 1
will always be -> of : 1
will always be -> raii : 1
always be of -> zero : 1
be of zero -> in : 1
real code the -> cases : 1
code the cases -> where : 1
the cases where -> you : 1
cases where you -> have : 1
cases where you -> want : 1
cases where you -> may : 1
where you have -> to : 1
have to write -> your : 1
have to write -> a : 1
have to write -> the : 1
to write your -> own : 1
write your own -> and : 1
write your own -> primitive : 1
your own and -> should : 1
your own and -> must : 1
own and should -> be : 1
and should be -> very : 1
and should be -> the : 1
and should be -> avoided : 1
should be very -> if : 1
be very if -> you : 1
very if you -> create : 1
if you create -> a : 1
you create a -> class : 1
create a class -> in : 1
create a class -> for : 2
a class in -> your : 1
a class in -> the : 1
class in your -> application : 1
in your application -> code : 1
your application code -> base : 1
application code base -> which : 1
application code base -> is : 1
code base which -> requires : 1
base which requires -> these : 1
which requires these -> to : 1
requires these to -> be : 1
these to be -> custom : 1
to be custom -> these : 1
be custom these -> parts : 1
custom these parts -> should : 1
these parts should -> probably : 1
parts should probably -> be : 1
should probably be -> moved : 1
probably be moved -> to : 1
be moved to -> some : 1
be moved to -> the : 1
moved to some -> library : 1
to some library -> in : 1
some library in -> your : 1
library in your -> code : 1
in your code -> your : 1
in your code -> by : 1
your code your -> classes : 1
code your classes -> so : 1
your classes so -> that : 1
classes so that -> they : 1
so that they -> do : 1
that they do -> not : 2
do not require -> any : 1
do not require -> the : 1
require any explicitly -> written : 1
any explicitly written -> or : 1
explicitly written or -> is : 1
written or is -> often : 1
or is often -> referred : 1
is often referred -> to : 1
often referred to -> as : 1
to as the -> rule : 1
to as the -> last : 1
to as the -> distproxy : 1
to as the -> each : 1
as the rule -> of : 1
rule of this -> means : 1
of this means -> that : 1
means that if -> a : 2
means that if -> you : 1
that if a -> class : 1
that if a -> function : 1
if a class -> in : 1
if a class -> contains : 2
if a class -> has : 1
class in the -> application : 1
in the application -> code : 1
in the application -> this : 1
the application code -> base : 1
code base is -> required : 1
code base is -> well : 1
code base is -> easy : 1
code base is -> based : 1
base is required -> to : 1
is required to -> have : 1
required to have -> any : 1
to have any -> of : 1
have any of -> these : 1
of these function -> written : 1
these function written -> that : 1
function written that -> piece : 1
written that piece -> of : 1
that piece of -> code : 1
piece of code -> would : 1
piece of code -> is : 2
of code would -> probably : 1
code would probably -> be : 1
would probably be -> better : 1
probably be better -> off : 1
be better off -> in : 1
better off in -> the : 1
off in the -> library : 1
in the library -> part : 1
in the library -> world : 1
the library part -> of : 1
library part of -> your : 1
part of your -> code : 1
of your code -> on : 1
of your code -> and : 1
of your code -> that : 1
of your code -> base : 1
your code on -> in : 1
code on in -> this : 1
we will which -> is : 1
will which is -> a : 1
which is a -> handy : 1
which is a -> we : 1
which is a -> first : 1
which is a -> pretty : 1
which is a -> part : 1
which is a -> more : 1
which is a -> great : 1
which is a -> memory : 1
which is a -> much : 1
which is a -> relatively : 1
is a handy -> utility : 1
a handy utility -> class : 1
handy utility class -> for : 1
utility class for -> dealing : 1
class for dealing -> with : 1
for dealing with -> optional : 1
for dealing with -> the : 1
dealing with optional -> members : 1
with optional members -> when : 1
optional members when -> applying : 1
members when applying -> the : 1
when applying the -> rule : 1
applying the rule -> of : 1
rule of note -> on : 1
of note on -> empty : 1
on empty that -> writing : 1
empty that writing -> an : 1
that writing an -> empty : 1
writing an empty -> destructor : 1
an empty destructor -> prevents : 1
an empty destructor -> yields : 1
empty destructor prevents -> the : 1
destructor prevents the -> compiler : 1
prevents the compiler -> from : 1
the compiler from -> implementing : 1
compiler from implementing -> certain : 1
from implementing certain -> as : 1
implementing certain as -> you : 1
certain as you -> can : 1
can the following -> copying : 1
the following copying -> an : 1
following copying an -> array : 1
copying an array -> of : 1
array of a -> trivial : 1
of a trivial -> class : 1
a trivial class -> with : 1
trivial class with -> an : 1
class with an -> empty : 1
class with an -> ability : 1
class with an -> where : 1
with an empty -> destructor : 1
empty destructor yields -> the : 1
destructor yields the -> assembler : 1
yields the assembler -> code : 1
the assembler code -> as : 1
assembler code as -> copying : 1
code as copying -> with : 1
as copying with -> a : 1
copying with a -> handcrafted : 1
with a handcrafted -> for : 1
a handcrafted for -> destructor : 1
handcrafted for destructor -> and : 1
for destructor and -> by : 1
destructor and by -> handwritten : 1
and by handwritten -> point : 1
by handwritten point -> int : 1
handwritten point int -> point : 1
point int point -> int : 2
int point int -> const : 1
int point int -> generated : 1
point int const -> auto : 1
const auto end -> src : 1
auto end src -> src : 1
end src src -> generates : 1
src src generates -> the : 1
src generates the -> following : 1
generates the following -> xor : 1
generates the following -> space : 1
generates the following -> invoked : 2
generates the following -> and : 1
generates the following -> machine : 1
the following xor -> mov : 1
following xor mov -> qword : 1
xor mov qword -> ptr : 1
mov qword ptr -> mov : 1
mov qword ptr -> add : 1
qword ptr mov -> qword : 1
ptr mov qword -> ptr : 1
qword ptr add -> cmp : 1
ptr add cmp -> jne : 1
add cmp jne -> rep : 1
cmp jne rep -> if : 1
jne rep if -> we : 1
rep if we -> remove : 1
if we remove -> or : 1
we remove or -> declare : 1
remove or declare -> the : 1
or declare the -> destructor : 1
declare the destructor -> the : 1
the destructor the -> compiler : 1
destructor the compiler -> optimize : 1
the compiler optimize -> to : 1
compiler optimize to -> of : 1
optimize to of -> a : 1
to of a -> assembler : 1
of a assembler -> is : 1
a assembler is -> generated : 1
assembler is generated -> using : 1
is generated using -> gcc : 1
generated using gcc -> destructor : 1
using gcc destructor -> and : 1
gcc destructor and -> default : 1
destructor and default -> destructor : 1
and default destructor -> and : 1
default destructor and -> point : 1
destructor and point -> int : 1
and point int -> point : 1
point int generated -> the : 1
int generated the -> following : 1
generated the following -> with : 1
the following with -> memmove : 1
following with memmove -> mov : 1
with memmove mov -> mov : 1
memmove mov mov -> mov : 1
mov mov mov -> mov : 1
mov mov mov -> jmp : 1
mov mov jmp -> use : 1
mov jmp use -> default : 1
jmp use default -> destructors : 1
use default destructors -> in : 1
default destructors in -> favor : 1
destructors in favor -> of : 1
in favor of -> empty : 1
in favor of -> the : 1
in favor of -> which : 1
favor of empty -> destructors : 1
of empty destructors -> to : 1
empty destructors to -> squeeze : 1
destructors to squeeze -> a : 1
to squeeze a -> little : 1
squeeze a little -> bit : 1
bit more performance -> of : 1
more performance of -> your : 1
of your common -> pitfall : 1
your common pitfall -> moving : 1
pitfall moving is -> one : 1
moving is one -> common : 1
is one common -> pitfall : 1
one common pitfall -> when : 1
common pitfall when -> created : 1
pitfall when created -> classes : 1
when created classes -> which : 1
created classes which -> mix : 1
classes which mix -> simple : 1
which mix simple -> types : 1
mix simple types -> with : 1
simple types with -> more : 1
types with more -> advanced : 1
with more advanced -> as : 1
more advanced as -> opposed : 1
advanced as opposed -> to : 1
opposed to more -> advanced : 1
to more advanced -> simple : 1
more advanced simple -> types : 1
advanced simple types -> such : 1
simple types such -> as : 1
types such as -> and : 2
as and such -> are : 1
and such are -> simply : 1
such are simply -> copied : 1
are simply copied -> when : 1
simply copied when -> moved : 1
copied when moved -> as : 1
when moved as -> they : 1
moved as they -> handle : 1
as they handle -> any : 1
they handle any -> a : 1
handle any a -> simple : 1
any a simple -> type : 1
a simple type -> is : 1
simple type is -> mixed : 1
type is mixed -> with : 1
is mixed with -> a : 1
mixed with a -> the : 1
with a the -> becomes : 1
a the becomes -> a : 1
the becomes a -> mixture : 1
becomes a mixture -> of : 1
a mixture of -> move : 1
mixture of move -> and : 1
of move and -> is : 1
move and is -> an : 1
is an example -> of : 12
class which will -> towerlist : 1
which will towerlist -> auto : 1
will towerlist auto -> const : 1
towerlist auto const -> return : 1
return int class -> will : 1
int class will -> have : 1
class will have -> undefined : 1
will have undefined -> behavior : 1
have undefined behavior -> if : 1
undefined behavior if -> it : 1
undefined behavior if -> the : 1
behavior if it -> is : 1
if it is -> handled : 1
if it is -> a : 1
if it is -> not : 3
if it is -> only : 1
is handled like -> a : 1
handled like a -> b : 1
like a b -> undefined : 1
a b undefined -> behavior : 1
b undefined behavior -> happens : 1
undefined behavior happens -> as : 1
behavior happens as -> the : 1
happens as the -> vector : 1
as the vector -> is : 1
as the vector -> and : 1
the vector is -> moved : 1
the vector is -> to : 1
vector is moved -> and : 1
is moved and -> is : 1
moved and is -> therefore : 1
is therefore the -> on : 1
therefore the on -> the : 1
the on the -> other : 1
on the other -> is : 2
on the other -> if : 1
on the other -> ensures : 1
on the other -> side : 1
on the other -> for : 1
on the other -> will : 1
on the other -> everything : 1
on the other -> let : 1
the other is -> and : 1
the other is -> code : 1
other is and -> therefore : 1
is and therefore -> still : 1
is and therefore -> it : 1
and therefore still -> has : 1
therefore still has -> the : 1
has the value -> the : 1
has the value -> we : 1
the value the -> object : 1
the value the -> iterator : 1
value the object -> when : 1
the object when -> the : 1
when the is -> the : 1
is the function -> will : 1
is the function -> responsible : 1
is the function -> where : 1
the function will -> try : 1
the function will -> load : 1
the function will -> not : 1
function will try -> to : 1
try to access -> at : 1
to access at -> index : 1
access at index -> and : 1
at index and -> the : 1
index and the -> program : 1
and the program -> will : 1
the program will -> these : 1
the program will -> the : 2
the program will -> stack : 1
the program will -> crash : 1
the program will -> cdpaligncenter : 1
the program will -> use : 1
the program will -> auto : 1
the program will -> as : 1
the program will -> only : 1
the program will -> critical : 1
program will these -> the : 1
will these the -> is : 1
these the is -> better : 1
the is better -> implemented : 1
is better implemented -> by : 1
better implemented by -> simply : 1
implemented by simply -> swapping : 1
by simply swapping -> the : 1
simply swapping the -> members : 1
swapping the members -> like : 1
the members like -> noexcept : 1
members like noexcept -> noexcept : 1
like noexcept noexcept -> return : 1
noexcept return the -> class : 1
return the class -> can : 2
the class can -> be : 2
class can be -> safely : 1
class can be -> used : 2
class can be -> only : 1
can be safely -> moved : 1
be safely moved -> while : 1
safely moved while -> still : 1
moved while still -> preserving : 1
while still preserving -> the : 1
still preserving the -> no : 1
preserving the no -> exception : 1
the no exception -> later : 1
no exception later -> in : 1
exception later in -> this : 1
in this in -> and : 1
in this in -> which : 1
this in and -> you : 1
and you will -> learn : 1
you will learn -> how : 3
you will learn -> properties : 1
you will learn -> about : 1
you will learn -> the : 1
will learn how -> to : 4
learn how to -> take : 1
learn how to -> estimate : 1
learn how to -> create : 1
learn how to -> use : 4
learn how to -> further : 1
how to take -> advantage : 1
to take advantage -> techniques : 1
to take advantage -> of : 3
take advantage techniques -> in : 1
advantage techniques in -> in : 1
techniques in in -> order : 1
in in order -> automate : 1
in order automate -> the : 1
order automate the -> process : 1
automate the process -> of : 1
the process of -> creating : 1
process of creating -> functions : 1
of creating functions -> which : 1
creating functions which -> swap : 1
functions which swap -> the : 1
which swap the -> the : 1
swap the the -> modifier : 1
the the modifier -> to : 1
the the modifier -> forces : 1
class member addition -> to : 1
member addition to -> being : 1
addition to being -> applied : 1
to being applied -> to : 1
being applied to -> you : 1
applied to you -> can : 1
to you can -> also : 1
can also add -> to : 1
also add to -> a : 1
add to a -> member : 1
to a member -> function : 1
to a member -> as : 1
function of a -> just : 1
function of a -> it : 1
of a just -> as : 1
just as you -> can : 1
you can apply -> a : 1
you can apply -> control : 1
can apply a -> modifier : 1
apply a modifier -> to : 1
a modifier to -> a : 1
modifier to a -> member : 1
a member as -> in : 1
member as in -> the : 1
the case with -> the : 1
the case with -> vector : 1
the case with -> a : 2
the case with -> optimizing : 1
case with the -> a : 1
with the a -> member : 1
the a member -> function : 1
member function which -> has : 1
member function which -> returns : 1
has the modifier -> is : 1
the modifier is -> only : 1
modifier is only -> permitted : 1
is only permitted -> to : 1
only permitted to -> be : 1
permitted to be -> executed : 1
be executed on -> an : 1
be executed on -> a : 3
be executed on -> the : 1
executed on an -> foo : 1
on an foo -> auto : 1
an foo auto -> a : 1
foo auto a -> does : 1
auto a does -> not : 1
a does not -> is : 1
does not is -> not : 1
not is not -> an : 1
is not an -> might : 1
is not an -> error : 1
is not an -> explicit : 1
not an might -> seem : 1
an might seem -> odd : 1
odd that one -> would : 1
that one would -> ever : 1
one would ever -> want : 1
would ever want -> this : 1
ever want this -> but : 1
want this but -> there : 1
this but there -> are : 1
there are we -> will : 1
are we will -> investigate : 1
we will investigate -> one : 1
will investigate one -> of : 1
investigate one of -> those : 1
one of those -> cases : 1
of those cases -> objects : 1
those cases objects -> and : 1
cases objects and -> optional : 1
objects and optional -> values : 1
and optional values -> with : 1
values with quite -> a : 1
with quite a -> minor : 1
quite a minor -> feature : 1
a minor feature -> in : 1
minor feature in -> is : 1
feature in is -> a : 1
is a neat -> addition : 1
a neat addition -> to : 1
neat addition to -> the : 1
to the stl -> library : 1
to the stl -> has : 1
to the stl -> algorithm : 1
the stl library -> which : 1
the stl library -> of : 1
the stl library -> operate : 1
the stl library -> is : 1
the stl library -> has : 1
stl library which -> simplifies : 1
library which simplifies -> a : 1
which simplifies a -> common : 1
simplifies a common -> case : 1
a common case -> which : 1
common case which -> be : 1
case which be -> expressed : 1
which be expressed -> in : 1
be expressed in -> a : 1
expressed in a -> clean : 1
in a clean -> straightforward : 1
a clean straightforward -> syntax : 1
clean straightforward syntax -> prior : 1
straightforward syntax prior -> to : 1
syntax prior to -> in : 1
prior to in -> a : 1
to in a -> it : 1
to in a -> when : 1
in a it -> is : 1
it is a -> small : 1
it is a -> proxy : 1
it is a -> form : 1
it is a -> it : 1
it is a -> short : 1
it is a -> good : 1
it is a -> mutable : 1
it is a -> completely : 1
it is a -> part : 1
is a small -> wrapper : 1
a small wrapper -> for : 1
small wrapper for -> any : 1
wrapper for any -> type : 1
for any type -> where : 1
for any type -> or : 1
any type where -> the : 1
type where the -> wrapped : 1
where the wrapped -> type : 1
the wrapped type -> can : 1
wrapped type can -> be : 1
type can be -> both : 1
type can be -> located : 1
can be both -> initialized : 1
be both initialized -> and : 1
both initialized and -> put : 1
initialized and put -> it : 1
and put it -> in : 1
put it in -> is : 1
it in is -> a : 1
is a container -> with : 1
is a container -> where : 1
a container with -> a : 4
container with a -> max : 1
container with a -> it : 1
container with a -> different : 1
container with a -> fixed : 1
container with a -> variable : 1
container with a -> regular : 1
with a max -> size : 1
a max size -> of : 1
max size of -> that : 1
size of that -> the : 1
of that the -> has : 1
that the has -> had : 1
the has had -> an : 1
the has had -> time : 1
has had an -> equivalent : 1
had an equivalent -> many : 1
an equivalent many -> return : 1
equivalent many return -> the : 1
many return the -> introduction : 1
return the introduction -> of : 1
introduction of there -> was : 1
of there was -> no : 1
there was no -> clear : 1
was no clear -> way : 1
no clear way -> to : 1
clear way to -> define : 1
way to define -> functions : 1
to define functions -> which : 1
define functions which -> may : 1
functions which may -> not : 1
which may not -> return : 1
may not return -> a : 1
not return a -> defined : 1
not return a -> view : 1
return a defined -> such : 1
a defined such -> as : 1
defined such as -> the : 1
such as the -> intersection : 1
such as the -> return : 1
such as the -> in : 1
as the intersection -> point : 1
the intersection point -> of : 1
intersection point of -> two : 1
point of two -> line : 1
of two line -> the : 1
two line the -> introduction : 1
line the introduction -> such : 1
the introduction such -> optional : 1
introduction such optional -> return : 1
such optional return -> values : 1
optional return values -> can : 1
return values can -> be : 1
values can be -> clearly : 1
can be clearly -> following : 1
be clearly following -> is : 1
clearly following is -> an : 1
following is an -> implementation : 1
following is an -> example : 4
is an implementation -> of : 1
is an implementation -> detail : 1
an implementation of -> a : 1
implementation of a -> function : 1
implementation of a -> forward : 1
implementation of a -> prehashedstring : 1
which returns an -> optional : 1
which returns an -> audio : 1
returns an optional -> intersection : 1
an optional intersection -> between : 1
optional intersection between -> two : 1
intersection between two -> point : 1
between two point -> class : 1
two point class -> line : 1
point class line -> auto : 1
class line auto -> line : 1
line auto line -> bool : 1
auto line bool -> auto : 1
line bool auto -> line : 1
bool auto line -> point : 1
auto line point -> const : 1
line point const -> return : 1
point const return -> syntax : 1
const return syntax -> of : 1
return syntax of -> resembles : 1
syntax of resembles -> that : 1
of resembles that -> of : 1
resembles that of -> a : 1
that of a -> the : 1
a the value -> is : 1
the value is -> accessed : 1
the value is -> quite : 1
the value is -> zero : 1
the value is -> cast : 1
the value is -> needed : 1
value is accessed -> by : 1
is accessed by -> or : 1
accessed by or -> if : 1
by or if -> trying : 1
or if trying -> to : 1
if trying to -> access : 1
trying to access -> the : 1
to access the -> value : 1
to access the -> offers : 1
to access the -> world : 1
to access the -> stack : 1
access the value -> of : 1
the value of -> an : 1
the value of -> a : 1
the value of -> the : 4
the value of -> sum : 1
value of an -> empty : 1
of an empty -> the : 1
an empty the -> throws : 1
empty the throws -> an : 1
the throws an -> following : 1
throws an following -> is : 1
an following is -> a : 1
following is a -> simple : 1
is a simple -> usage : 1
is a simple -> implementation : 1
is a simple -> test : 2
a simple usage -> example : 1
simple usage example -> of : 1
usage example of -> a : 1
of a returned -> auto : 1
a returned auto -> get : 1
returned auto get -> optional : 1
auto get optional -> intersection : 1
get optional intersection -> throws : 1
optional intersection throws -> an : 1
intersection throws an -> exception : 1
an exception if -> intersection : 1
exception if intersection -> is : 1
if intersection is -> object : 1
intersection is object -> held : 1
is object held -> by : 1
object held by -> is : 1
by is always -> stack : 1
is always stack -> and : 1
always stack and -> the : 1
stack and the -> memory : 1
stack and the -> heap : 3
stack and the -> the : 1
the memory overhead -> of : 1
the memory overhead -> caused : 1
memory overhead of -> a : 1
overhead of a -> to : 1
of a to -> the : 1
a to the -> size : 1
a to the -> start : 1
to the size -> of : 3
size of one -> bool : 1
of one bool -> one : 1
one bool one -> plus : 1
bool one plus -> possible : 1
one plus possible -> member : 1
plus possible member -> say : 1
possible member say -> we : 1
member say we -> have : 1
say we have -> a : 1
say we have -> of : 1
have a class -> which : 1
have a class -> defined : 1
class which represents -> a : 1
which represents a -> human : 1
represents a human -> the : 1
a human the -> head : 1
human the head -> can : 1
the head can -> have : 1
head can have -> a : 1
can have a -> hat : 1
can have a -> dramatic : 1
can have a -> huge : 1
have a hat -> of : 1
a hat of -> some : 1
hat of some -> or : 1
of some or -> no : 1
some or no -> hat : 1
or no hat -> at : 1
no hat at -> by : 1
hat at by -> using : 1
at by using -> to : 1
by using to -> represent : 1
using to represent -> the : 1
to represent the -> hat : 1
represent the hat -> member : 1
the hat member -> variable : 1
hat member variable -> the : 1
member variable the -> implementation : 1
variable the implementation -> is : 1
the implementation is -> as : 1
the implementation is -> now : 1
the implementation is -> limited : 1
implementation is as -> expressive : 1
is as expressive -> as : 1
as expressive as -> can : 1
expressive as can -> hat : 1
as can hat -> head : 1
can hat head -> is : 1
hat head is -> empty : 1
head is empty -> by : 1
is empty by -> auto : 1
empty by auto -> auto : 1
by auto auto -> const : 1
return auto hat -> is : 1
auto hat is -> cleared : 1
hat is cleared -> by : 1
is cleared by -> assigning : 1
cleared by assigning -> to : 1
by assigning to -> representing : 1
assigning to representing -> an : 1
to representing an -> optional : 1
representing an optional -> member : 1
an optional member -> variable : 1
optional member variable -> would : 1
member variable would -> rely : 1
variable would rely -> for : 1
would rely for -> a : 1
rely for a -> pointer : 1
for a pointer -> or : 1
a pointer or -> an : 1
pointer or an -> extra : 1
or an extra -> bool : 1
an extra bool -> member : 1
extra bool member -> both : 1
bool member both -> having : 1
member both having -> disadvantages : 1
both having disadvantages -> such : 1
having disadvantages such -> as : 1
disadvantages such as -> allocating : 1
such as allocating -> on : 1
as allocating on -> the : 1
allocating on the -> or : 1
on the or -> accidentally : 1
the or accidentally -> accessing : 1
or accidentally accessing -> an : 1
accidentally accessing an -> optional : 1
accessing an optional -> considered : 1
an optional considered -> empty : 1
optional considered empty -> without : 1
considered empty without -> a : 1
empty without a -> and : 1
without a and -> comparing : 1
without a and -> the : 1
a and comparing -> is : 1
and comparing is -> both : 1
comparing is both -> equally : 1
is both equally -> comparable : 1
both equally comparable -> and : 1
equally comparable and -> using : 1
comparable and using -> the : 1
and using the -> following : 1
and using the -> we : 1
using the following -> rules : 1
the following rules -> as : 1
following rules as -> shown : 1
rules as shown -> in : 1
as shown in -> the : 9
shown in the -> following : 7
shown in the -> preceding : 1
shown in the -> search : 1
shown in the -> beginning : 1
shown in the -> an : 1
shown in the -> cpu : 1
shown in the -> table : 1
the following are -> considered : 1
following are considered -> a : 1
are considered a -> b : 1
considered a b -> c : 1
a b c -> empty : 1
a b c -> if : 1
b c empty -> optional : 1
c empty optional -> is : 1
empty optional is -> considered : 1
optional is considered -> than : 1
is considered than -> a : 1
considered than a -> a : 1
b c if -> you : 1
c if you -> sort : 1
if you sort -> a : 1
you sort a -> container : 1
sort a container -> of : 1
a container of -> the : 2
a container of -> first : 1
of the empty -> would : 1
the empty would -> end : 1
empty would end -> up : 1
would end up -> at : 1
would end up -> in : 1
end up at -> the : 2
up at the -> beginning : 1
up at the -> same : 2
the beginning of -> the : 3
the beginning of -> each : 2
the beginning of -> a : 1
the beginning of -> this : 1
beginning of the -> whereas : 1
beginning of the -> array : 1
beginning of the -> and : 1
of the whereas -> the : 1
the whereas the -> are : 1
the whereas the -> view : 1
whereas the are -> sorted : 1
the are sorted -> as : 1
are sorted as -> c : 1
sorted as c -> c : 1
as c c -> is : 1
c c is -> dynamic : 1
c c is -> a : 1
c is dynamic -> values : 1
is dynamic values -> with : 1
values with like -> can : 1
with like can -> store : 1
like can store -> an : 1
can store an -> optional : 1
store an optional -> single : 1
an optional single -> but : 1
optional single but -> with : 1
single but with -> the : 1
but with the -> difference : 1
but with the -> ability : 2
but with the -> heavyweight : 1
but with the -> addition : 1
with the difference -> that : 2
the difference that -> it : 1
the difference that -> we : 1
difference that it -> can : 1
it can store -> any : 1
can store any -> type : 3
store any type -> at : 1
store any type -> of : 2
store any type -> in : 1
any type at -> just : 1
type at just -> like : 1
at just like -> a : 1
like a dynamically -> as : 1
a dynamically as -> the : 1
dynamically as the -> can : 1
as the can -> withhold : 1
the can withhold -> any : 1
can withhold any -> you : 1
withhold any you -> need : 1
any you need -> to : 1
to explicitly specify -> the : 2
explicitly specify the -> type : 1
explicitly specify the -> contained : 1
specify the type -> using : 1
the type using -> the : 1
the type using -> we : 1
type using the -> global : 1
using the global -> function : 2
using the global -> scope : 1
using the global -> you : 1
the global function -> when : 1
the global function -> as : 1
the global function -> which : 1
global function when -> reading : 1
function when reading -> the : 1
when reading the -> held : 1
reading the held -> the : 1
the held the -> is : 1
held the is -> empty : 1
the is empty -> or : 1
is empty or -> withholds : 1
empty or withholds -> another : 1
or withholds another -> type : 1
withholds another type -> than : 1
another type than -> the : 1
type than the -> specified : 1
than the specified -> an : 1
the specified an -> exception : 1
specified an exception -> is : 1
exception is is -> an : 1
is is an -> example : 1
how it initialize -> an : 1
it initialize an -> empty : 1
initialize an empty -> a : 1
an empty a -> put : 1
an empty a -> regular : 1
empty a put -> a : 1
a put a -> string : 1
put a string -> in : 1
a string in -> return : 1
string in return -> a : 1
in return a -> reference : 1
return a reference -> to : 1
to the withheld -> copy : 1
the withheld copy -> the : 1
withheld copy the -> withheld : 1
copy the withheld -> put : 1
the withheld put -> a : 1
withheld put a -> float : 1
put a float -> in : 1
a float in -> the : 1
float in the -> and : 1
in the and -> read : 1
in the and -> is : 1
in the and -> the : 1
in the and -> all : 1
the and read -> it : 1
and read it -> flt : 1
read it flt -> copy : 1
it flt copy -> the : 1
flt copy the -> any : 1
copy the any -> b : 1
the any b -> a : 1
any b a -> equals : 1
b a equals -> b : 1
a equals b -> as : 1
equals b as -> they : 1
b as they -> contain : 1
as they contain -> the : 1
they contain the -> same : 1
contain the same -> type : 1
the same type -> and : 1
same type and -> the : 1
type and the -> instance : 1
type and the -> this : 1
type and the -> value : 1
and the instance -> if : 1
the instance if -> it : 1
instance if it -> contains : 1
if it contains -> a : 1
it contains a -> type : 1
it contains a -> value : 1
contains a type -> via : 1
a type via -> the : 1
type via the -> is : 1
via the is -> quite : 1
the is quite -> you : 1
is quite you -> can : 1
quite you can -> easily : 1
you can easily -> create : 1
can easily create -> a : 1
easily create a -> convenience : 1
create a convenience -> function : 2
a convenience function -> which : 1
a convenience function -> called : 1
a convenience function -> take : 1
convenience function which -> checks : 1
function which checks -> if : 1
which checks if -> the : 1
checks if the -> contains : 1
if the contains -> a : 1
the contains a -> specified : 1
contains a specified -> type : 1
a specified type -> like : 1
specified type like -> bool : 1
type like bool -> return : 1
like bool return -> a : 1
bool return a -> is : 1
return a is -> contains : 1
return a is -> is : 1
a is contains -> a : 2
is contains a -> is : 1
is contains a -> of : 1
contains a is -> contains : 1
contains a of -> contrast : 1
a of contrast -> to : 1
of contrast to -> and : 1
contrast to and -> is : 1
and is discussed -> in : 1
is discussed in -> programming : 1
discussed in programming -> and : 1
in programming and -> its : 1
programming and its -> withheld : 1
and its withheld -> value : 1
its withheld value -> implementers : 1
withheld value implementers -> are : 1
value implementers are -> encouraged : 1
implementers are encouraged -> to : 1
are encouraged to -> store : 1
encouraged to store -> small : 1
to store small -> objects : 1
store small objects -> inside : 1
small objects inside -> of : 1
objects inside of -> the : 1
inside of the -> invoking : 1
of the invoking -> a : 1
the invoking a -> to : 1
invoking a to -> retrieve : 1
a to retrieve -> the : 1
to retrieve the -> value : 1
to retrieve the -> type : 2
retrieve the value -> is : 1
value is quite -> slow : 1
is quite slow -> compared : 1
quite slow compared -> to : 1
slow compared to -> boost : 1
slow compared to -> reading : 1
compared to boost -> equivalent : 1
to boost equivalent -> of : 1
boost equivalent of -> provides : 1
equivalent of provides -> a : 1
of provides a -> fast : 1
provides a fast -> version : 1
a fast version -> of : 1
fast version of -> called : 1
version of called -> which : 1
of called which -> can : 1
called which can -> be : 1
which can be -> utilized : 1
which can be -> adjusted : 1
which can be -> computed : 1
which can be -> stepped : 1
which can be -> used : 4
which can be -> useful : 1
can be utilized -> if : 1
be utilized if -> you : 1
utilized if you -> know : 1
if you know -> which : 1
if you know -> that : 2
you know which -> type : 1
know which type -> is : 1
which type is -> in : 1
type is in -> contrast : 1
is in contrast -> to : 1
contrast to using -> a : 1
to using a -> with : 1
using a with -> the : 1
a with the -> wrong : 1
a with the -> value : 1
with the wrong -> type : 1
the wrong type -> will : 1
wrong type will -> result : 1
type will result -> in : 1
will result in -> undefined : 1
will result in -> ten : 1
will result in -> an : 1
will result in -> a : 1
result in undefined -> behavior : 1
in undefined behavior -> instead : 1
undefined behavior instead -> of : 1
behavior instead of -> a : 1
instead of a -> thrown : 1
instead of a -> completely : 1
instead of a -> on : 1
instead of a -> pair : 2
of a thrown -> this : 1
of a thrown -> exception : 1
a thrown this -> chapter : 1
thrown this chapter -> you : 1
this chapter you -> have : 2
chapter you have -> learned : 2
you have learned -> how : 2
you have learned -> the : 1
have learned how -> to : 2
learned how to -> use : 5
learned how to -> compare : 1
learned how to -> quantify : 1
learned how to -> detect : 1
learned how to -> create : 1
learned how to -> do : 1
to use modern -> features : 1
use modern features -> such : 1
modern features such -> as : 1
features such as -> forwarding : 1
such as forwarding -> lambda : 1
as forwarding lambda -> and : 1
forwarding lambda and -> in : 1
lambda and in -> the : 1
and in the -> next : 1
and in the -> we : 1
and in the -> sense : 1
and in the -> worst : 1
and in the -> previous : 1
in the next -> chapter : 2
in the next -> iteration : 1
in the next -> the : 1
in the next -> few : 1
the next chapter -> we : 2
next chapter we -> will : 2
look into strategies -> for : 1
strategies for how -> to : 1
for how to -> measure : 1
for how to -> improve : 1
how to measure -> performance : 1
how to measure -> software : 1
how to measure -> in : 1
to measure performance -> in : 1
measure performance in -> this : 1
performance in this -> is : 1
performance in this -> case : 1
is a book -> about : 1
a book about -> writing : 1
book about writing -> code : 1
about writing code -> that : 1
writing code that -> runs : 1
code that runs -> we : 1
that runs we -> need : 1
runs we need -> to : 1
need to cover -> some : 2
to cover some -> basics : 2
cover some basics -> regarding : 1
cover some basics -> about : 1
some basics regarding -> how : 1
basics regarding how -> to : 1
regarding how to -> measure : 1
to measure software -> performance : 1
measure software performance -> and : 1
software performance and -> estimate : 1
performance and estimate -> algorithmic : 1
and estimate algorithmic -> most : 1
estimate algorithmic most -> of : 1
algorithmic most of -> the : 1
of the topics -> in : 1
the topics in -> this : 1
topics in this -> chapter : 1
this chapter are -> not : 1
this chapter are -> used : 1
this chapter are -> required : 1
chapter are not -> specific : 1
are not specific -> to : 1
not specific to -> and : 1
specific to and -> can : 1
to and can -> be : 1
be used whenever -> you : 1
used whenever you -> are : 1
whenever you are -> facing : 1
you are facing -> a : 1
you are facing -> and : 1
are facing a -> problem : 1
facing a problem -> where : 1
a problem where -> performance : 1
problem where performance -> is : 1
performance is an -> are : 1
performance is an -> sequence : 1
is an are -> going : 1
an are going -> to : 1
are going to -> learn : 1
are going to -> cover : 1
are going to -> see : 1
are going to -> talk : 1
are going to -> try : 1
are going to -> take : 1
are going to -> show : 2
are going to -> limit : 1
are going to -> explore : 1
are going to -> update : 2
are going to -> implement : 1
going to learn -> how : 1
to learn how -> to : 1
to learn how -> pipe : 1
how to estimate -> algorithmic : 1
to estimate algorithmic -> efficiency : 1
estimate algorithmic efficiency -> using : 1
algorithmic efficiency using -> big : 1
algorithmic efficiency using -> o : 1
efficiency using big -> o : 1
using big o -> this : 1
using big o -> we : 1
using big o -> algorithms : 1
big o this -> is : 1
big o this -> part : 1
o this is -> essential : 1
this is essential -> knowledge : 1
is essential knowledge -> when : 1
essential knowledge when -> choosing : 1
knowledge when choosing -> algorithms : 1
when choosing algorithms -> and : 1
choosing algorithms and -> data : 1
and data structures -> from : 1
and data structures -> for : 1
and data structures -> wisely : 1
and data structures -> housed : 1
data structures from -> if : 1
data structures from -> the : 1
structures from if -> you : 1
from if you -> are : 1
you are new -> to : 1
are new to -> big : 1
new to big -> o : 1
to big o -> this : 1
o this part -> might : 1
this part might -> take : 1
part might take -> some : 1
might take some -> time : 1
take some time -> to : 1
some time to -> but : 1
time to but -> give : 1
to but give -> this : 1
but give this -> is : 1
give this is -> a : 1
is a very -> important : 2
is a very -> effective : 2
is a very -> useful : 1
is a very -> bad : 1
is a very -> simple : 1
a very important -> topic : 1
a very important -> consideration : 1
very important topic -> to : 1
important topic to -> grasp : 1
topic to grasp -> in : 1
to grasp in -> order : 1
grasp in order -> to : 1
to understand the -> rest : 1
to understand the -> logic : 1
to understand the -> issue : 1
to understand the -> circumstances : 1
to understand the -> a : 1
understand the rest -> of : 1
the rest of -> the : 6
rest of the -> more : 1
rest of the -> range : 1
rest of the -> virtual : 1
rest of the -> containers : 1
rest of the -> program : 1
rest of the -> and : 1
of the more -> importantly : 1
the more importantly -> to : 1
more importantly to -> become : 1
importantly to become -> a : 1
to become a -> if : 1
become a if -> you : 1
a if you -> want : 1
a if you -> are : 1
want a more -> formal : 1
a more formal -> or : 1
more formal or -> more : 1
formal or more -> practical : 1
or more practical -> introduction : 1
more practical introduction -> to : 1
practical introduction to -> these : 1
introduction to these -> there : 1
to these there -> are : 1
these there are -> plenty : 1
there are plenty -> of : 1
are plenty of -> books : 1
plenty of books -> and : 1
books and online -> resources : 1
and online resources -> dedicated : 1
online resources dedicated -> to : 1
resources dedicated to -> this : 1
dedicated to this -> on : 1
to this on -> the : 1
this on the -> other : 1
the other if -> you : 1
other if you -> have : 1
have already mastered -> big : 1
already mastered big -> o : 1
mastered big o -> notation : 1
big o notation -> and : 1
big o notation -> comes : 1
o notation and -> know : 1
notation and know -> what : 1
and know what -> amortized : 1
know what amortized -> time : 1
what amortized time -> complexity : 1
amortized time complexity -> you : 1
amortized time complexity -> is : 1
time complexity you -> could : 1
complexity you could -> probably : 1
you could probably -> skim : 1
could probably skim -> the : 1
probably skim the -> next : 1
skim the next -> section : 1
the next section -> and : 1
next section and -> go : 1
section and go -> to : 1
and go to -> the : 1
go to the -> later : 1
to the later -> parts : 1
the later parts -> of : 1
later parts of -> this : 1
parts of this -> this : 1
of this this -> chapter : 1
this this chapter -> algorithmic : 1
this this chapter -> is : 1
this chapter algorithmic -> efficiency : 1
chapter algorithmic efficiency -> using : 1
efficiency using o -> suggested : 1
using o suggested -> workflow : 1
o suggested workflow -> when : 1
suggested workflow when -> optimizing : 1
workflow when optimizing -> code : 1
when optimizing code -> so : 1
optimizing code so -> that : 1
code so that -> we : 1
code so that -> the : 1
that we spend -> time : 1
we spend time -> code : 1
spend time code -> without : 1
time code without -> good : 1
code without good -> reasons : 1
code without good -> also : 1
without good reasons -> they : 1
good reasons they -> are : 1
reasons they are -> and : 1
they are and -> why : 1
are and why -> you : 1
and why you -> should : 1
why you should -> use : 1
you should use -> complexity : 1
should use complexity -> and : 1
use complexity and -> big : 1
big o is -> usually : 1
o is usually -> more : 1
is usually more -> than : 1
is usually more -> sporadic : 1
usually more than -> one : 1
more than one -> way : 1
more than one -> object : 1
more than one -> lock : 1
than one way -> to : 1
one way to -> solve : 1
one way to -> handle : 1
way to solve -> a : 1
to solve a -> problem : 1
solve a problem -> and : 1
a problem and -> if : 1
problem and if -> efficiency : 1
and if efficiency -> is : 1
if efficiency is -> a : 1
efficiency is a -> you : 1
a you should -> first : 1
you should first -> and : 1
should first and -> foremost : 1
first and foremost -> focus : 1
and foremost focus -> on : 1
foremost focus on -> the : 1
focus on the -> optimizations : 1
focus on the -> one : 1
focus on the -> which : 1
focus on the -> implementation : 1
focus on the -> syntactic : 1
on the optimizations -> by : 1
the optimizations by -> choosing : 1
optimizations by choosing -> the : 1
by choosing the -> right : 1
choosing the right -> algorithms : 1
the right algorithms -> and : 1
right algorithms and -> data : 1
and data a -> useful : 1
data a useful -> way : 1
a useful way -> of : 1
useful way of -> evaluating : 1
way of evaluating -> and : 1
of evaluating and -> comparing : 1
evaluating and comparing -> algorithms : 1
and comparing algorithms -> is : 1
comparing algorithms is -> by : 1
algorithms is by -> analyzing : 1
is by analyzing -> their : 1
by analyzing their -> asymptotic : 1
analyzing their asymptotic -> computational : 1
their asymptotic computational -> analyzing : 1
asymptotic computational analyzing -> how : 1
computational analyzing how -> the : 1
analyzing how the -> running : 1
how the running -> time : 1
the running time -> or : 1
the running time -> of : 7
the running time -> when : 1
the running time -> affected : 1
the running time -> against : 1
the running time -> could : 1
the running time -> for : 1
running time or -> memory : 1
time or memory -> consumption : 1
or memory consumption -> grows : 1
memory consumption grows -> when : 1
consumption grows when -> the : 1
grows when the -> size : 1
when the size -> of : 2
of the input -> in : 1
of the input -> looks : 1
the input in -> the : 1
input in the -> template : 1
the template specifies -> the : 1
template specifies the -> asymptotic : 1
specifies the asymptotic -> complexity : 1
the asymptotic complexity -> for : 1
the asymptotic complexity -> specifications : 1
asymptotic complexity for -> all : 1
complexity for all -> containers : 1
for all containers -> and : 1
all containers and -> which : 1
containers and which -> means : 1
and which means -> that : 1
means that a -> basic : 1
means that a -> thread : 1
that a basic -> understanding : 1
a basic understanding -> of : 1
basic understanding of -> this : 1
understanding of this -> topic : 1
of this topic -> is : 1
this topic is -> a : 1
topic is a -> must : 1
is a must -> if : 1
a must if -> you : 1
must if you -> are : 1
are using if -> you : 1
using if you -> already : 1
if you already -> have : 1
you already have -> a : 1
already have a -> good : 1
already have a -> defined : 1
have a good -> understanding : 3
a good understanding -> of : 4
good understanding of -> algorithm : 1
good understanding of -> the : 1
good understanding of -> how : 1
good understanding of -> what : 1
understanding of algorithm -> complexity : 1
of algorithm complexity -> and : 1
algorithm complexity and -> the : 1
complexity and the -> big : 1
and the big -> o : 1
the big o -> you : 1
the big o -> notation : 1
the big o -> of : 1
big o you -> can : 1
o you can -> safely : 1
you can safely -> skip : 1
can safely skip -> this : 1
safely skip this -> start : 1
skip this start -> off : 1
this start off -> with : 1
start off with -> an : 1
off with an -> suppose : 1
with an suppose -> we : 1
an suppose we -> want : 1
suppose we want -> to : 2
write an algorithm -> that : 1
an algorithm that -> returns : 1
an algorithm that -> would : 1
an algorithm that -> can : 1
algorithm that returns -> if : 1
that returns if -> it : 1
returns if it -> finds : 1
if it finds -> a : 1
it finds a -> specific : 1
finds a specific -> key : 1
a specific key -> in : 1
specific key in -> an : 1
key in an -> or : 1
key in an -> the : 1
in an or -> in : 1
an or in -> order : 1
order to find -> out : 1
order to find -> the : 1
order to find -> ways : 1
to find out -> how : 1
to find out -> the : 1
to find out -> why : 1
find out how -> our : 1
out how our -> algorithm : 1
how our algorithm -> behaves : 1
our algorithm behaves -> when : 1
algorithm behaves when -> passed : 1
behaves when passed -> different : 1
when passed different -> sizes : 1
passed different sizes -> of : 1
different sizes of -> the : 2
sizes of the -> we : 1
sizes of the -> string : 1
like to analyze -> the : 1
to analyze the -> running : 1
to analyze the -> specific : 1
analyze the running -> time : 1
running time of -> this : 1
running time of -> we : 1
running time of -> an : 1
running time of -> the : 4
running time of -> functions : 1
running time of -> even : 1
running time of -> accessing : 1
time of this -> algorithm : 1
of this algorithm -> as : 1
this algorithm as -> a : 1
algorithm as a -> function : 1
a function of -> its : 1
function of its -> input : 1
of its input -> int : 1
its input int -> for : 1
input int for -> v : 1
int for v -> if : 1
for v if -> return : 1
v if return -> return : 1
if return return -> algorithm : 1
if return return -> are : 1
if return return -> a : 1
if return return -> v : 4
return return algorithm -> is : 1
return algorithm is -> it : 1
algorithm is it -> iterates : 1
algorithm is it -> cannot : 1
is it iterates -> over : 1
it iterates over -> the : 1
iterates over the -> elements : 1
iterates over the -> objects : 1
over the elements -> in : 1
the elements in -> the : 6
the elements in -> a : 1
the elements in -> resulting : 1
elements in the -> array : 4
elements in the -> order : 2
elements in the -> buckets : 1
elements in the -> priority : 1
elements in the -> container : 1
elements in the -> vector : 1
in the array -> and : 1
in the array -> that : 1
in the array -> are : 1
in the array -> at : 2
in the array -> when : 1
in the array -> by : 1
in the array -> guarantees : 1
in the array -> so : 1
the array and -> compares : 1
the array and -> it : 1
array and compares -> each : 1
and compares each -> element : 1
compares each element -> with : 1
each element with -> the : 1
element with the -> if : 1
element with the -> highest : 1
with the if -> we : 1
if we are -> we : 1
if we are -> interested : 1
if we are -> optimizing : 1
if we are -> using : 1
if we are -> only : 1
if we are -> the : 1
we are we -> find : 1
are we find -> the : 1
we find the -> key : 1
we find the -> for : 1
we find the -> desired : 1
find the key -> in : 1
the key in -> the : 1
key in the -> beginning : 1
in the beginning -> of : 2
in the beginning -> and : 1
of the array -> and : 1
of the array -> should : 1
of the array -> is : 1
of the array -> using : 1
array and it -> returns : 1
and it returns -> but : 1
it returns but -> we : 1
returns but we -> might : 1
but we might -> loop : 1
we might loop -> through : 1
might loop through -> the : 1
loop through the -> entire : 1
through the entire -> array : 1
entire array without -> finding : 1
array without finding -> the : 1
without finding the -> key : 1
finding the key -> at : 1
the key at -> this : 1
key at this -> would : 1
at this would -> be : 1
this would be -> the : 1
would be the -> worst : 1
would be the -> is : 1
would be the -> container : 1
be the worst -> case : 1
the worst case -> for : 1
the worst case -> running : 1
worst case for -> the : 1
case for the -> and : 1
case for the -> system : 1
for the and -> in : 1
for the and -> actually : 1
the and in -> that : 1
in that is -> the : 1
in that is -> exactly : 1
that is the -> case : 1
that is the -> only : 1
is the case -> we : 1
is the case -> with : 2
the case we -> want : 1
case we want -> to : 1
want to but -> what : 1
to but what -> happens : 1
but what happens -> with : 1
but what happens -> when : 1
what happens with -> the : 2
happens with the -> running : 2
with the running -> time : 2
running time when -> we : 1
time when we -> increase : 1
when we increase -> the : 2
we increase the -> input : 1
we increase the -> string : 1
increase the input -> say : 1
the input say -> we : 1
input say we -> double : 1
say we double -> the : 1
we double the -> size : 1
we double the -> input : 1
we double the -> capacity : 1
double the size -> of : 1
the in the -> worst : 1
the in the -> following : 2
the in the -> preceding : 1
in the worst -> we : 1
in the worst -> executed : 1
in the worst -> they : 1
the worst we -> need : 1
worst we need -> to : 1
need to compare -> all : 1
need to compare -> the : 1
to compare all -> elements : 1
compare all elements -> in : 1
all elements in -> the : 1
all elements in -> any : 1
the array that -> would : 1
array that would -> double : 1
that would double -> the : 1
would double the -> running : 1
double the running -> there : 1
the running there -> seems : 1
running there seems -> to : 1
there seems to -> be : 1
be a linear -> relationship : 1
a linear relationship -> between : 1
linear relationship between -> the : 1
relationship between the -> input : 1
between the input -> size : 1
the input size -> and : 1
the input size -> to : 1
the input size -> if : 1
the input size -> what : 1
the input size -> gets : 1
input size and -> the : 1
size and the -> running : 1
and the running -> we : 1
the running we -> call : 1
running we call -> this : 1
we call this -> a : 1
we call this -> would : 1
call this a -> linear : 1
this a linear -> growth : 1
a linear growth -> cdpaligncenter : 1
linear growth cdpaligncenter -> cdpalign : 1
growth cdpaligncenter cdpalign -> growth : 1
cdpaligncenter cdpalign growth -> about : 1
cdpaligncenter cdpalign growth -> my : 1
cdpalign growth about -> the : 1
growth about the -> following : 1
about the following -> point : 1
the following point -> int : 1
following point int -> int : 1
point int int -> auto : 2
int int auto -> const : 1
int int auto -> p : 1
int auto const -> for : 1
auto const for -> i : 1
const for i -> i : 1
for i i -> if : 1
for i i -> auto : 2
for i i -> for : 2
for i i -> function : 1
for i i -> counter : 1
for i i -> this : 1
for i i -> sum : 4
i i if -> return : 1
i if return -> return : 1
return return are -> comparing : 1
return are comparing -> points : 1
are comparing points -> instead : 1
comparing points instead -> of : 2
points instead of -> integers : 2
instead of integers -> and : 1
instead of integers -> takes : 1
of integers and -> we : 1
of integers and -> pushes : 1
integers and we -> are : 1
and we are -> using : 1
and we are -> only : 1
and we are -> all : 1
we are using -> an : 2
we are using -> the : 2
we are using -> a : 1
we are using -> greater : 1
we are using -> both : 1
we are using -> small : 1
we are using -> from : 1
we are using -> which : 1
we are using -> strings : 1
are using an -> index : 1
are using an -> atomic : 1
using an index -> with : 1
an index with -> the : 1
index with the -> subscript : 1
with the subscript -> operator : 1
the subscript operator -> to : 1
subscript operator to -> access : 1
operator to access -> each : 1
to access each -> how : 1
access each how -> is : 1
each how is -> the : 1
how is the -> running : 1
how is the -> reference : 1
is the running -> time : 1
running time affected -> by : 1
time affected by -> these : 1
affected by these -> the : 1
by these the -> absolute : 1
these the absolute -> running : 1
the absolute running -> time : 1
absolute running time -> is : 1
running time is -> probably : 1
running time is -> used : 1
running time is -> so : 1
time is probably -> higher : 1
is probably higher -> compared : 1
probably higher compared -> to : 1
higher compared to -> the : 1
the first algorithm -> since : 1
first algorithm since -> we : 1
algorithm since we -> are : 1
since we are -> doing : 1
since we are -> doubling : 1
since we are -> iterating : 1
since we are -> allocating : 1
we are doing -> more : 1
we are doing -> things : 1
we are doing -> in : 1
we are doing -> when : 1
are doing more -> the : 1
doing more the -> comparison : 1
more the comparison -> of : 1
the comparison of -> points : 1
comparison of points -> involves : 1
of points involves -> two : 1
points involves two -> integers : 1
involves two integers -> instead : 1
two integers instead -> of : 1
integers instead of -> just : 1
of just one -> for : 1
just one for -> each : 1
one for each -> element : 1
for each element -> in : 1
each element in -> the : 2
element in the -> at : 1
element in the -> middle : 2
element in the -> if : 1
element in the -> array : 4
element in the -> range : 1
element in the -> take : 1
element in the -> vector : 1
in the at -> this : 1
the at this -> stage : 1
at this stage -> we : 1
this stage we -> are : 1
stage we are -> interested : 1
we are interested -> in : 2
interested in the -> growth : 1
in the growth -> rate : 1
the growth rate -> the : 2
the growth rate -> is : 1
the growth rate -> would : 1
the growth rate -> of : 2
growth rate the -> algorithm : 2
rate the algorithm -> and : 1
rate the algorithm -> by : 1
the algorithm and -> if : 1
algorithm and if -> we : 1
if we plot -> the : 1
we plot the -> running : 1
plot the running -> time : 1
running time against -> the : 1
time against the -> input : 1
against the input -> we : 1
the input we -> would : 1
input we would -> still : 1
we would still -> end : 1
would still end -> up : 1
still end up -> with : 1
with a straight -> as : 1
a straight as -> shown : 1
straight as shown -> in : 1
in the preceding -> the : 2
in the preceding -> table : 1
in the preceding -> we : 2
in the preceding -> placement : 1
in the preceding -> is : 1
in the preceding -> example : 1
in the preceding -> of : 1
in the preceding -> there : 1
the preceding the -> last : 1
the preceding the -> global : 1
the preceding the -> function : 1
the preceding the -> following : 1
preceding the last -> example : 1
the last example -> of : 1
last example of -> searching : 1
example of searching -> for : 1
of searching for -> see : 1
searching for see -> whether : 1
for see whether -> we : 1
see whether we -> can : 1
whether we can -> find : 1
we can find -> a : 3
we can find -> some : 1
can find a -> better : 1
can find a -> string : 1
can find a -> kb : 1
find a better -> algorithm : 1
a better algorithm -> if : 1
better algorithm if -> we : 1
algorithm if we -> assume : 1
if we assume -> that : 2
we assume that -> the : 1
we assume that -> it : 1
we assume that -> there : 1
assume that the -> elements : 1
assume that the -> vector : 1
assume that the -> hash : 1
assume that the -> instructions : 1
that the elements -> in : 1
that the elements -> are : 2
that the elements -> with : 1
the array are -> our : 1
array are our -> first : 1
are our first -> algorithm : 1
our first algorithm -> would : 1
first algorithm would -> work : 1
algorithm would work -> regardless : 1
would work regardless -> of : 1
work regardless of -> the : 1
regardless of the -> order : 1
regardless of the -> container : 1
regardless of the -> a : 1
regardless of the -> we : 1
of the order -> of : 1
the order of -> the : 2
the order of -> accumulation : 1
the order of -> for : 1
of the but -> if : 1
the but if -> we : 1
if we know -> that : 3
we know that -> they : 1
we know that -> the : 2
we know that -> called : 1
we know that -> an : 1
know that they -> are : 2
they are we -> can : 1
are we can -> use : 1
can use a -> binary : 1
can use a -> tool : 1
can use a -> proxy : 1
can use a -> combination : 1
use a binary -> it : 1
a binary it -> works : 1
binary it works -> by : 1
it works by -> looking : 1
works by looking -> at : 1
by looking at -> the : 3
by looking at -> some : 1
by looking at -> a : 1
looking at the -> element : 1
looking at the -> loops : 1
looking at the -> running : 1
looking at the -> page : 1
at the element -> in : 1
the element in -> the : 3
in the middle -> and : 1
in the middle -> of : 2
in the middle -> to : 1
the middle and -> determines : 1
middle and determines -> whether : 1
and determines whether -> it : 1
determines whether it -> should : 1
whether it should -> continue : 1
it should continue -> searching : 1
should continue searching -> in : 1
continue searching in -> the : 1
searching in the -> first : 1
the first or -> second : 1
first or second -> half : 1
or second half -> of : 1
second half of -> the : 1
half of the -> int : 1
half of the -> array : 1
half of the -> operations : 1
half of the -> what : 1
the int if -> return : 1
the int if -> auto : 1
int if return -> auto : 1
int if return -> return : 1
if return auto -> low : 1
if return auto -> middle : 1
return auto low -> auto : 1
auto low auto -> high : 1
low auto high -> while : 1
auto high while -> const : 1
high while const -> auto : 1
while const auto -> mid : 1
const auto mid -> low : 1
auto mid low -> if : 1
mid low if -> low : 1
low if low -> mid : 1
if low mid -> else : 1
low mid else -> if : 1
mid else if -> high : 1
else if high -> mid : 1
if high mid -> else : 1
high mid else -> return : 1
mid else return -> return : 1
else return return -> you : 1
return return you -> can : 1
return you can -> this : 1
return you can -> using : 1
return you can -> the : 1
you can this -> algorithm : 1
can this algorithm -> is : 1
this algorithm is -> harder : 1
algorithm is harder -> to : 1
is harder to -> get : 1
harder to get -> correct : 1
to get correct -> than : 1
get correct than -> the : 1
correct than the -> simple : 1
than the simple -> linear : 1
the simple linear -> it : 1
simple linear it -> looks : 1
linear it looks -> for : 1
it looks for -> the : 1
looks for the -> specified : 1
for the specified -> key : 1
the specified key -> by : 1
specified key by -> in : 1
key by in -> the : 1
by in the -> middle : 1
the middle of -> the : 2
middle of the -> if : 1
middle of the -> sorted : 1
of the if -> it : 1
the if it -> compares : 1
if it compares -> the : 1
it compares the -> key : 1
compares the key -> with : 1
the key with -> the : 1
key with the -> element : 1
with the element -> in : 1
the middle to -> decide : 1
middle to decide -> which : 1
to decide which -> half : 1
decide which half -> of : 1
which half of -> the : 1
the array should -> keep : 1
array should keep -> looking : 1
should keep looking -> for : 1
keep looking for -> the : 1
looking for the -> so : 1
for the so -> in : 1
the so in -> each : 1
so in each -> iteration : 1
in each iteration -> it : 1
in each iteration -> we : 1
each iteration it -> cuts : 1
iteration it cuts -> the : 1
it cuts the -> array : 1
cuts the array -> in : 1
the array in -> assume : 1
array in assume -> we : 1
in assume we -> called : 1
assume we called -> an : 1
we called an -> array : 1
called an array -> containing : 1
an array containing -> in : 1
array containing in -> the : 1
containing in the -> first : 1
the first iteration -> we : 1
first iteration we -> reject : 1
iteration we reject -> in : 1
iteration we reject -> the : 1
we reject in -> the : 1
reject in the -> next : 1
the next iteration -> we : 1
the next iteration -> and : 1
next iteration we -> reject : 1
we reject the -> next : 1
reject the next -> iteration : 1
next iteration and -> so : 1
iteration and so -> until : 1
and so until -> there : 1
so until there -> are : 1
until there are -> no : 1
are no more -> elements : 1
are no more -> available : 1
no more elements -> to : 1
more elements to -> compare : 1
more elements to -> the : 1
elements to compare -> or : 1
to compare or -> until : 1
compare or until -> we : 1
or until we -> find : 1
until we find -> the : 1
find the for -> an : 1
the for an -> input : 1
for an input -> size : 1
an input size -> of : 1
input size of -> there : 1
size of there -> will : 1
of there will -> be : 1
there will be -> at : 1
there will be -> elements : 1
there will be -> contention : 1
will be at -> most : 1
be at most -> loop : 1
at most loop -> what : 1
most loop what -> if : 1
loop what if -> we : 1
if we double -> the : 1
double the input -> size : 1
input size to -> since : 1
size to since -> we : 1
to since we -> halve : 1
since we halve -> the : 1
we halve the -> size : 1
halve the size -> in : 1
the size in -> each : 1
size in each -> it : 1
in each it -> means : 1
each it means -> that : 1
that we only -> need : 1
we only need -> one : 1
we only need -> to : 1
only need one -> more : 1
need one more -> loop : 1
one more loop -> the : 1
more loop the -> growth : 1
loop the growth -> rate : 1
growth rate is -> no : 1
rate is no -> longer : 1
is no longer -> actually : 1
is no longer -> any : 1
is no longer -> a : 1
no longer actually -> if : 1
longer actually if -> we : 1
actually if we -> measure : 1
if we measure -> the : 1
we measure the -> running : 1
measure the running -> time : 1
time of we -> will : 1
of we will -> see : 1
of we will -> then : 1
we will see -> that : 5
we will see -> how : 4
we will see -> a : 1
we will see -> later : 1
we will see -> examples : 1
we will see -> some : 1
will see that -> the : 1
will see that -> by : 1
will see that -> this : 2
will see that -> we : 1
see that the -> growth : 1
see that the -> was : 1
see that the -> memory : 1
see that the -> generated : 1
see that the -> function : 1
see that the -> program : 1
that the growth -> rate : 1
growth rate would -> look : 1
rate would look -> something : 1
something like the -> one : 2
something like the -> elements : 1
like the one -> in : 1
like the one -> shown : 1
the one in -> the : 1
one in the -> following : 1
the following cdpaligncenter -> cdpalign : 1
the following cdpaligncenter -> all : 1
the following cdpaligncenter -> cdpaligncenter : 1
following cdpaligncenter cdpalign -> growth : 1
cdpalign growth my -> a : 1
growth my a -> quick : 1
my a quick -> timing : 1
a quick timing -> of : 1
quick timing of -> the : 1
timing of the -> three : 1
of the three -> algorithms : 1
of the three -> categories : 1
of the three -> vectors : 1
the three algorithms -> repeatedly : 1
three algorithms repeatedly -> called : 1
algorithms repeatedly called -> times : 1
repeatedly called times -> with : 1
called times with -> various : 1
times with various -> input : 1
with various input -> sizes : 1
various input sizes -> produced : 1
input sizes produced -> the : 1
sizes produced the -> results : 1
produced the results -> shown : 1
the results shown -> in : 1
results shown in -> the : 1
in the search -> with : 1
the search with -> search : 1
search with search -> with : 1
with search with -> ms : 1
search with ms -> search : 1
search with ms -> and : 1
with ms search -> with : 1
ms search with -> ms : 1
with ms and -> we : 1
ms and we -> can : 1
we can see -> that : 5
we can see -> the : 1
we can see -> in : 1
we can see -> how : 1
can see that -> comparing : 1
can see that -> the : 4
can see that -> it : 1
see that comparing -> points : 1
that comparing points -> instead : 1
of integers takes -> more : 1
integers takes more -> but : 1
takes more but -> they : 1
more but they -> are : 1
but they are -> still : 1
but they are -> not : 1
they are still -> in : 1
are still in -> the : 1
still in the -> same : 1
the same order -> of : 1
the same order -> as : 2
same order of -> magnitude : 1
order of magnitude -> even : 1
order of magnitude -> differences : 1
of magnitude even -> when : 1
magnitude even when -> the : 1
even when the -> input : 1
even when the -> short : 1
when the input -> size : 3
input size if -> we : 1
size if we -> compare : 1
if we compare -> all : 1
if we compare -> a : 1
we compare all -> three : 1
compare all three -> algorithms : 1
all three algorithms -> when : 1
three algorithms when -> the : 1
algorithms when the -> input : 1
input size what -> really : 1
size what really -> matters : 1
what really matters -> is : 1
really matters is -> the : 1
matters is the -> growth : 1
matters is the -> function : 1
is the growth -> rate : 1
the algorithm by -> exploiting : 1
the algorithm by -> avoiding : 1
algorithm by exploiting -> the : 1
by exploiting the -> fact : 1
exploiting the fact -> that : 1
the fact that -> the : 3
the fact that -> faster : 1
the fact that -> most : 1
the fact that -> a : 1
the fact that -> it : 1
fact that the -> array : 1
fact that the -> tree : 1
fact that the -> lifetime : 1
that the array -> was : 1
the array was -> we : 1
array was we -> could : 1
was we could -> implement : 1
we could implement -> the : 1
could implement the -> search : 1
implement the search -> function : 1
the search function -> with : 1
search function with -> very : 1
function with very -> few : 1
with very few -> loop : 1
very few loop -> for : 1
few loop for -> large : 1
loop for large -> binary : 1
for large binary -> search : 1
large binary search -> is : 1
binary search is -> practically : 1
search is practically -> free : 1
is practically free -> compared : 1
practically free compared -> to : 1
free compared to -> linearly : 1
compared to linearly -> scanning : 1
to linearly scanning -> the : 1
linearly scanning the -> spend : 1
scanning the spend -> time : 1
the spend time -> tuning : 1
spend time tuning -> your : 1
time tuning your -> code : 1
tuning your code -> before : 1
your code before -> you : 1
code before you -> are : 1
before you are -> certain : 1
you are certain -> that : 1
are certain that -> you : 1
certain that you -> have : 1
you have chosen -> the : 1
have chosen the -> correct : 1
chosen the correct -> algorithms : 1
the correct algorithms -> and : 1
correct algorithms and -> data : 1
data structures for -> your : 1
data structures for -> efficient : 1
structures for your -> it : 1
for your it -> be : 1
your it be -> nice : 1
it be nice -> if : 1
be nice if -> we : 1
nice if we -> could : 1
if we could -> express : 1
we could express -> the : 1
could express the -> growth : 1
express the growth -> rate : 1
growth rate of -> algorithms : 1
growth rate of -> some : 1
rate of algorithms -> in : 1
of algorithms in -> a : 1
of algorithms in -> is : 1
in a way -> that : 4
a way that -> would : 1
a way that -> the : 1
a way that -> resizing : 1
a way that -> makes : 1
a way that -> minimizes : 1
way that would -> help : 1
that would help -> us : 1
would help us -> decide : 1
help us decide -> which : 1
us decide which -> algorithm : 1
decide which algorithm -> to : 1
which algorithm to -> here : 1
algorithm to here -> is : 1
to here is -> where : 1
here is where -> the : 1
is where the -> big : 1
is where the -> future : 1
is where the -> lifetime : 1
where the big -> o : 1
o notation comes -> in : 1
notation comes in -> here : 1
comes in here -> follows : 1
in here follows -> an : 1
here follows an -> informal : 1
follows an informal -> if : 1
an informal if -> is : 1
informal if is -> a : 1
if is a -> function : 1
if is a -> and : 1
is a function -> that : 2
a function that -> specifies : 1
a function that -> moves : 1
a function that -> generates : 1
a function that -> makes : 1
a function that -> accepts : 2
a function that -> finds : 1
a function that -> performs : 1
function that specifies -> the : 1
that specifies the -> running : 1
specifies the running -> time : 1
time of an -> algorithm : 1
of an algorithm -> with : 1
of an algorithm -> can : 1
algorithm with input -> size : 1
with input size -> we : 1
input size we -> say : 1
size we say -> that : 1
we say that -> is : 1
say that is -> if : 1
that is if -> there : 1
that is if -> the : 1
is if there -> is : 1
is a constant -> such : 1
is a constant -> time : 1
a constant such -> that : 1
constant such that -> k : 1
such that k -> this : 1
that k this -> means : 1
k this means -> that : 1
that we could -> say : 1
that we could -> utilize : 1
we could say -> that : 1
could say that -> the : 1
say that the -> time : 1
that the time -> complexity : 1
the time complexity -> of : 3
the time complexity -> is : 1
time complexity of -> for : 1
time complexity of -> or : 1
time complexity of -> an : 1
time complexity of -> log : 1
complexity of for -> both : 1
of for both -> versions : 1
for both versions -> with : 1
both versions with -> integers : 1
versions with integers -> and : 1
with integers and -> whereas : 1
integers and whereas -> the : 1
and whereas the -> time : 1
and whereas the -> cache : 1
whereas the time -> complexity : 2
complexity of or -> when : 1
of or when -> we : 1
or when we -> want : 1
when we want -> to : 2
want to find -> the : 2
find the big -> o : 1
find the big -> this : 1
big o of -> a : 1
o of a -> we : 1
of a we -> can : 1
can do that -> by : 2
do that by -> eliminating : 1
do that by -> entering : 1
that by eliminating -> all : 1
by eliminating all -> terms : 1
eliminating all terms -> except : 2
all terms except -> the : 3
terms except the -> one : 3
except the one -> with : 3
the one with -> the : 4
one with the -> largest : 2
one with the -> highest : 1
one with the -> slowest : 1
with the largest -> growth : 2
with the largest -> alignment : 1
the largest growth -> rate : 1
the largest growth -> which : 1
largest growth rate -> and : 1
growth rate and -> then : 1
rate and then -> remove : 1
and then remove -> any : 1
then remove any -> constant : 1
remove any constant -> for : 1
any constant for -> if : 1
constant for if -> we : 1
for if we -> have : 1
for if we -> can : 1
for if we -> were : 1
if we have -> an : 2
if we have -> random : 1
if we have -> collected : 1
if we have -> a : 2
if we have -> gained : 1
if we have -> two : 1
we have an -> algorithm : 2
have an algorithm -> with : 1
have an algorithm -> that : 1
algorithm with a -> time : 1
with a time -> complexity : 1
a time complexity -> described : 1
a time complexity -> higher : 1
a time complexity -> of : 1
a time complexity -> containers : 1
time complexity described -> by : 1
complexity described by -> we : 1
described by we -> would : 1
by we would -> pick : 1
we would pick -> out : 1
would pick out -> the : 1
pick out the -> term : 1
out the term -> with : 1
the term with -> the : 1
term with the -> highest : 1
with the highest -> growth : 2
with the highest -> the : 1
with the highest -> document : 1
with the highest -> level : 1
with the highest -> possible : 1
the highest growth -> we : 1
the highest growth -> to : 1
highest growth we -> remove : 1
growth we remove -> the : 1
we remove the -> constant : 2
remove the constant -> factor : 1
remove the constant -> and : 1
the constant factor -> and : 1
constant factor and -> end : 1
factor and end -> up : 1
and end up -> with : 2
up with which -> means : 1
with which means -> that : 1
we can say -> that : 1
can say that -> our : 1
say that our -> algorithm : 1
that our algorithm -> runs : 1
that our algorithm -> works : 1
our algorithm runs -> in : 1
algorithm runs in -> finding : 1
algorithm runs in -> constant : 1
runs in finding -> the : 1
in finding the -> time : 1
in finding the -> a : 1
in finding the -> first : 1
finding the time -> complexity : 1
complexity of an -> algorithm : 1
an algorithm can -> be : 1
algorithm can be -> but : 1
algorithm can be -> created : 1
be but the -> more : 1
but the more -> you : 1
the more you -> start : 1
more you start -> thinking : 1
you start thinking -> of : 1
start thinking of -> it : 1
thinking of it -> while : 1
of it while -> writing : 1
it while writing -> the : 1
while writing the -> easier : 1
writing the easier -> it : 1
the easier it -> will : 1
easier it will -> for : 1
it will for -> the : 1
will for the -> most : 1
for the most -> enough : 1
for the most -> optimizations : 1
the most enough -> to : 1
most enough to -> keep : 1
enough to keep -> track : 1
to keep track -> of : 2
keep track of -> loops : 1
keep track of -> byte : 1
keep track of -> the : 1
track of loops -> and : 1
of loops and -> recursive : 1
loops and recursive -> is : 1
and recursive is -> another : 1
recursive is another -> for : 1
is another for -> i : 1
another for i -> i : 1
i i auto -> j : 1
i i auto -> t : 1
i i auto -> value : 1
i i auto -> x : 1
i i auto -> lock : 1
i auto j -> while : 1
auto j while -> input : 1
j while input -> size : 1
while input size -> is : 1
input size is -> the : 1
size is the -> size : 1
size is the -> number : 1
size is the -> pointer : 1
is the size -> of : 3
the the running -> time : 1
running time could -> be : 1
time could be -> estimated : 1
could be estimated -> approximately : 1
be estimated approximately -> by : 1
estimated approximately by -> looking : 1
approximately by looking -> at : 1
at the loops -> that : 1
the loops that -> iterate : 1
loops that iterate -> over : 1
that iterate over -> all : 2
that iterate over -> one : 1
iterate over all -> there : 1
iterate over all -> and : 1
iterate over all -> an : 1
over all there -> is : 1
all there is -> an : 1
there is an -> outer : 1
is an outer -> loop : 1
an outer loop -> iterating : 1
outer loop iterating -> over : 1
loop iterating over -> the : 1
iterating over the -> inner : 1
iterating over the -> the : 1
over the inner -> loop : 1
the inner loop -> is : 1
the inner loop -> needs : 1
the inner loop -> to : 1
inner loop is -> the : 1
loop is the -> first : 1
is the first -> time : 1
the first time -> we : 1
the first time -> to : 1
first time we -> reach : 1
time we reach -> the : 1
we reach the -> is : 1
we reach the -> limit : 1
reach the is -> and : 1
the is and -> only : 1
is and only -> run : 1
and only run -> one : 1
only run one -> on : 1
run one on -> the : 1
one on the -> next : 1
on the next -> starts : 1
the next starts -> at : 1
next starts at -> decreases : 1
starts at decreases -> to : 1
at decreases to -> each : 1
decreases to each -> iteration : 1
to each iteration -> in : 1
each iteration in -> the : 1
iteration in the -> outer : 1
in the outer -> for : 1
in the outer -> and : 1
the outer for -> the : 1
outer for the -> inner : 1
for the inner -> loop : 1
inner loop needs -> to : 1
loop needs to -> do : 1
needs to do -> more : 1
to do more -> and : 1
do more and -> more : 1
more and more -> starts : 1
more and more -> difficult : 1
more and more -> common : 1
more and more -> you : 1
more and more -> such : 1
and more starts -> at : 1
more starts at -> which : 1
starts at which -> means : 1
at which means -> that : 1
that we in -> the : 1
we in the -> worst : 1
the worst executed -> we : 1
worst executed we -> can : 1
executed we can -> express : 1
we can express -> this : 1
can express this -> in : 1
express this in -> terms : 1
this in terms -> of : 1
terms of by -> noting : 1
of by noting -> that : 1
by noting that -> this : 1
noting that this -> is : 1
that this is -> an : 2
that this is -> actually : 1
that this is -> a : 2
that this is -> useful : 1
that this is -> one : 1
this is an -> arithmetic : 1
this is an -> optimization : 1
this is an -> example : 1
is an arithmetic -> the : 1
an arithmetic the -> sum : 1
arithmetic the sum -> of : 1
the sum of -> the : 4
the sum of -> circle : 1
sum of the -> series : 1
sum of the -> small : 1
sum of the -> big : 1
sum of the -> ascii : 1
of the series -> k : 1
the series k -> so : 1
series k so -> if : 1
k so if -> we : 1
so if we -> set : 1
so if we -> perform : 1
if we set -> we : 1
we set we -> have : 1
set we have -> the : 1
we have the -> complexity : 1
we have the -> foundation : 1
we have the -> boilerplate : 1
we have the -> hash : 1
we have the -> assembler : 1
we have the -> we : 1
have the complexity -> as : 1
the complexity as -> we : 1
complexity as we -> can : 1
can now find -> the : 1
now find the -> big : 1
the big this -> function : 1
the big this -> example : 1
big this function -> by : 1
this function by -> first : 1
function by first -> eliminating : 1
by first eliminating -> all : 1
first eliminating all -> terms : 1
largest growth which -> gives : 1
growth which gives -> us : 1
which gives us -> after : 1
gives us after -> we : 1
us after we -> remove : 1
after we remove -> the : 1
the constant and -> conclude : 1
constant and conclude -> that : 1
and conclude that -> the : 1
conclude that the -> running : 1
conclude that the -> second : 1
that the running -> time : 1
time of the -> sorting : 1
time of the -> entire : 2
time of the -> big : 1
of the sorting -> algorithm : 1
the sorting algorithm -> is : 1
sorting algorithm is -> stated : 1
algorithm is stated -> the : 1
is stated the -> first : 1
stated the first -> step : 1
the first step -> in : 1
first step in -> finding : 1
step in finding -> the : 1
finding the a -> complexity : 1
the a complexity -> function : 1
a complexity function -> is : 1
complexity function is -> to : 1
function is to -> remove : 1
is to remove -> all : 1
to remove all -> terms : 1
remove all terms -> except : 1
highest growth to -> be : 1
growth to be -> able : 1
to be able -> to : 5
able to do -> we : 1
to do we -> must : 1
do we must -> know : 1
we must know -> the : 1
must know the -> growth : 1
know the growth -> rate : 1
rate of some -> common : 1
of some common -> in : 1
some common in -> the : 1
common in the -> following : 1
the following we -> have : 2
the following we -> can : 1
the following we -> will : 1
the following we -> out : 1
the following we -> detach : 1
following we have -> plotted : 1
following we have -> captured : 1
we have plotted -> some : 1
have plotted some -> of : 1
plotted some of -> the : 1
most common cdpalign -> of : 1
common cdpalign of -> growth : 1
cdpalign of growth -> rate : 1
of growth rate -> growth : 1
growth rate growth -> rates : 1
rate growth rates -> are : 1
growth rates are -> independent : 1
rates are independent -> of : 1
are independent of -> machine : 1
independent of machine -> or : 1
of machine or -> coding : 1
machine or coding -> style : 1
or coding style -> and : 1
coding style and -> so : 1
style and so -> when : 1
and so when -> the : 1
so when the -> growth : 1
when the growth -> rates : 1
the growth rates -> differ : 1
growth rates differ -> between : 1
rates differ between -> two : 1
differ between two -> the : 1
between two the -> one : 1
between two the -> iterator : 1
two the one -> with : 1
with the slowest -> growth : 1
the slowest growth -> rate : 1
slowest growth rate -> will : 1
growth rate will -> always : 1
rate will always -> win : 1
will always win -> when : 1
always win when -> the : 1
win when the -> input : 1
input size gets -> sufficiently : 1
size gets sufficiently -> see : 1
gets sufficiently see -> what : 1
sufficiently see what -> happens : 1
see what happens -> with : 1
running time for -> different : 1
time for different -> growth : 1
for different growth -> rates : 1
different growth rates -> if : 1
growth rates if -> we : 1
rates if we -> assume : 1
assume that it -> takes : 1
that it takes -> perform : 1
it takes perform -> of : 1
takes perform of -> the : 1
perform of the -> following : 1
following table lists -> the : 1
table lists the -> growth : 1
lists the growth -> its : 1
the growth its -> common : 1
growth its common -> and : 1
its common and -> different : 1
common and different -> input : 1
and different input -> log : 1
different input log -> or : 1
input log or -> log : 1
log or log -> time : 1
or log time -> an : 1
log time an -> algorithm : 1
time an algorithm -> behaves : 1
an algorithm behaves -> differently : 1
algorithm behaves differently -> with : 1
behaves differently with -> different : 1
differently with different -> going : 1
with different going -> back : 1
different going back -> to : 1
going back to -> our : 1
back to our -> algorithm : 1
to our algorithm -> that : 1
our algorithm that -> linearly : 1
algorithm that linearly -> searched : 1
that linearly searched -> an : 1
linearly searched an -> element : 1
searched an element -> in : 1
an element in -> an : 1
an element in -> a : 1
element in an -> we : 1
in an we -> were : 1
an we were -> analyzing : 1
we were analyzing -> the : 1
were analyzing the -> case : 1
analyzing the case -> where : 1
the case where -> the : 1
case where the -> key : 1
case where the -> underlying : 1
where the key -> was : 1
the key was -> not : 1
key was not -> in : 1
was not in -> the : 1
not in the -> array : 1
the array at -> for : 1
the array at -> that : 1
array at for -> that : 1
at for that -> that : 1
for that that -> was : 1
that that was -> the : 1
that was the -> worst : 1
was the worst -> it : 1
the worst it -> used : 1
the worst it -> would : 1
worst it used -> the : 1
it used the -> resources : 1
used the resources -> the : 1
the resources the -> algorithm : 1
resources the algorithm -> will : 3
the algorithm will -> the : 1
the algorithm will -> whereas : 1
the algorithm will -> use : 1
the algorithm will -> throw : 1
the algorithm will -> break : 1
algorithm will the -> best : 1
will the best -> case : 1
the best case -> refers : 1
the best case -> this : 1
best case refers -> to : 1
case refers to -> the : 1
to the amount -> of : 2
the amount of -> resources : 1
the amount of -> call : 1
the amount of -> memory : 2
the amount of -> main : 1
the amount of -> data : 1
the amount of -> concurrency : 1
amount of resources -> the : 1
of resources the -> algorithm : 1
algorithm will whereas -> the : 1
will whereas the -> average : 1
whereas the average -> case : 1
the average case -> states : 1
average case states -> how : 1
case states how -> many : 1
states how many -> resources : 1
how many resources -> the : 1
many resources the -> algorithm : 1
algorithm will use -> on : 1
will use on -> average : 1
use on average -> with : 1
on average with -> different : 1
average with different -> stl : 1
with different stl -> usually : 1
different stl usually -> refers : 1
stl usually refers -> to : 1
usually refers to -> the : 1
to the amortized -> running : 1
the amortized running -> time : 5
amortized running time -> of : 1
amortized running time -> can : 2
amortized running time -> is : 2
amortized running time -> back : 1
amortized running time -> we : 1
time of functions -> that : 1
of functions that -> operate : 1
functions that operate -> on : 1
that operate on -> if : 1
that operate on -> the : 1
operate on if -> an : 1
on if an -> algorithm : 1
if an algorithm -> runs : 1
an algorithm runs -> in : 1
runs in constant -> amortized : 1
in constant amortized -> it : 1
constant amortized it -> means : 1
amortized it means -> that : 1
means that it -> will : 2
means that it -> provides : 1
means that it -> is : 1
means that it -> matter : 1
it will run -> in : 1
will run in -> in : 2
will run in -> constant : 1
run in in -> almost : 2
in in almost -> all : 2
in almost all -> except : 2
almost all except -> a : 2
all except a -> very : 2
except a very -> few : 2
a very few -> where : 2
very few where -> it : 2
few where it -> will : 2
where it will -> perform : 2
it will perform -> at : 1
it will perform -> is : 1
will perform at -> first : 1
perform at first -> amortized : 1
at first amortized -> running : 1
first amortized running -> time : 1
running time can -> be : 2
time can be -> confused : 1
time can be -> computed : 1
can be confused -> with : 1
be confused with -> average : 1
confused with average -> but : 1
with average but -> as : 1
average but as -> we : 1
but as we -> will : 1
but as we -> only : 1
as we will -> they : 1
we will they -> are : 1
will they are -> not : 1
they are not -> the : 2
they are not -> available : 1
they are not -> observable : 1
are not the -> understand : 1
are not the -> same : 3
not the understand -> amortized : 1
the understand amortized -> time : 1
understand amortized time -> we : 1
amortized time we -> will : 1
time we will -> spend : 1
time we will -> see : 1
we will spend -> some : 1
we will spend -> more : 1
will spend some -> time : 1
spend some time -> thinking : 1
some time thinking -> about : 1
time thinking about -> assume : 1
thinking about assume -> that : 1
about assume that -> the : 1
that the vector -> internally : 1
that the vector -> needs : 1
that the vector -> can : 1
the vector internally -> has : 1
vector internally has -> a : 1
internally has a -> fixed : 1
has a fixed -> size : 1
has a fixed -> maximum : 1
a fixed size -> array : 1
a fixed size -> version : 1
a fixed size -> contiguous : 1
a fixed size -> and : 1
fixed size array -> to : 1
size array to -> store : 1
array to store -> all : 1
to store all -> its : 1
store all its -> elements : 1
all its elements -> if : 1
its elements if -> there : 1
elements if there -> is : 1
there is room -> for : 1
is room for -> more : 1
room for more -> elements : 1
for more elements -> in : 1
more elements in -> the : 1
the array when -> calling : 1
array when calling -> the : 1
when calling the -> operation : 1
calling the operation -> will : 1
the operation will -> run : 1
the operation will -> not : 1
operation will run -> in : 1
run in constant -> not : 1
run in constant -> time : 1
in constant not -> dependent : 1
constant not dependent -> on : 1
not dependent on -> how : 1
dependent on how -> many : 1
dependent on how -> threads : 1
dependent on how -> predicate : 1
on how many -> elements : 1
on how many -> numbers : 1
how many elements -> are : 1
many elements are -> already : 1
elements are already -> in : 1
are already in -> the : 1
already in the -> vector : 1
already in the -> whereas : 1
in the vector -> as : 1
in the vector -> has : 1
in the vector -> are : 1
the vector as -> long : 1
vector as long -> as : 1
as long as -> the : 4
as long as -> you : 1
as long as -> all : 1
long as the -> internal : 1
long as the -> size : 1
long as the -> custom : 1
long as the -> reordering : 1
as the internal -> array : 1
the internal array -> has : 1
the internal array -> is : 1
the internal array -> times : 1
internal array has -> room : 1
array has room -> for : 1
has room for -> one : 1
room for one -> what : 1
for one what -> happens : 1
one what happens -> when : 1
what happens when -> the : 1
what happens when -> we : 2
what happens when -> you : 1
happens when the -> internal : 1
when the internal -> array : 1
internal array is -> one : 1
array is one -> way : 1
is one way -> to : 1
way to handle -> the : 1
way to handle -> communication : 1
to handle the -> growing : 1
to handle the -> expressions : 1
to handle the -> ui : 1
handle the growing -> of : 1
the growing of -> the : 1
growing of the -> vector : 1
of the vector -> is : 1
of the vector -> using : 1
of the vector -> can : 1
of the vector -> with : 1
vector is to -> create : 1
is to create -> a : 1
create a new -> empty : 1
create a new -> version : 1
create a new -> thread : 1
a new empty -> internal : 1
new empty internal -> array : 1
empty internal array -> with : 1
internal array with -> a : 1
array with a -> bigger : 1
with a bigger -> and : 1
a bigger and -> then : 1
bigger and then -> move : 1
and then move -> all : 2
then move all -> the : 2
move all the -> elements : 3
all the elements -> from : 1
all the elements -> that : 2
all the elements -> to : 1
the elements from -> the : 1
elements from the -> old : 1
elements from the -> front : 1
from the old -> array : 1
the old array -> to : 1
old array to -> the : 1
array to the -> new : 1
to the new -> this : 1
to the new -> the : 2
the new this -> is : 1
new this is -> obviously : 1
this is obviously -> not : 1
is obviously not -> constant : 1
obviously not constant -> time : 1
not constant time -> anymore : 1
constant time anymore -> since : 1
time anymore since -> we : 1
anymore since we -> need : 1
since we need -> one : 1
we need one -> move : 1
need one move -> per : 1
one move per -> element : 1
move per element -> in : 1
per element in -> the : 1
in the if -> we : 1
if we considered -> this : 1
we considered this -> the : 1
considered this the -> worst : 1
this the worst -> it : 1
worst it would -> mean : 1
it would mean -> that : 1
would mean that -> if : 1
would mean that -> all : 1
mean that if -> we : 1
that if we -> call : 1
that if we -> know : 1
that if we -> compare : 1
that if we -> do : 1
if we call -> we : 1
we call we -> know : 1
call we know -> that : 1
that the expensive -> happen : 1
that the expensive -> operations : 1
the expensive happen -> very : 1
expensive happen very -> and : 1
happen very and -> so : 1
very and so -> it : 1
and so it -> would : 1
so it would -> be : 1
it would be -> and : 1
it would be -> correct : 1
it would be -> faster : 1
it would be -> substantially : 1
it would be -> more : 1
it would be -> impossible : 1
it would be -> the : 1
it would be -> reasonable : 1
would be and -> not : 1
be and not -> very : 1
and not very -> to : 1
not very to -> say : 1
very to say -> that : 1
to say that -> if : 1
say that if -> we : 1
know that called -> many : 1
that called many -> times : 1
called many times -> in : 1
many times in -> a : 1
times in a -> amortized : 1
times in a -> row : 1
in a amortized -> running : 1
a amortized running -> time : 1
time is used -> for : 1
is used for -> analyzing : 1
is used for -> function : 1
used for analyzing -> a : 1
for analyzing a -> sequence : 1
analyzing a sequence -> of : 1
a sequence of -> operations : 2
a sequence of -> the : 2
a sequence of -> memory : 1
a sequence of -> each : 1
a sequence of -> integers : 1
sequence of operations -> rather : 1
sequence of operations -> total : 1
of operations rather -> than : 1
operations rather than -> a : 1
than a single -> we : 1
a single we -> are : 1
single we are -> still : 1
we are still -> analyzing : 1
we are still -> using : 1
are still analyzing -> the : 1
still analyzing the -> worst : 1
analyzing the worst -> but : 1
the worst but -> for : 1
worst but for -> a : 1
but for a -> sequence : 1
but for a -> that : 1
for a sequence -> of : 1
sequence of the -> amortized : 1
sequence of the -> size : 1
sequence of the -> two : 1
of the amortized -> running : 1
can be computed -> by : 1
can be computed -> in : 1
be computed by -> first : 1
computed by first -> analyzing : 1
by first analyzing -> the : 1
first analyzing the -> running : 1
analyzing the running -> time : 1
of the entire -> sequence : 2
the entire sequence -> and : 1
the entire sequence -> will : 1
entire sequence and -> then : 1
sequence and then -> dividing : 1
and then dividing -> that : 1
then dividing that -> by : 1
dividing that by -> the : 1
that by the -> length : 1
by the length -> of : 2
the length of -> the : 3
length of the -> suppose : 1
length of the -> we : 1
length of the -> string : 1
of the suppose -> we : 1
the suppose we -> are : 1
suppose we are -> performing : 1
suppose we are -> writing : 1
we are performing -> a : 1
are performing a -> sequence : 1
performing a sequence -> of : 1
of operations total -> running : 1
operations total running -> and : 1
total running and -> so : 1
running and so -> in : 1
and so in -> other : 1
and so in -> this : 1
and so in -> order : 1
so in other -> half : 1
in other half -> of : 1
other half of -> the : 1
of the operations -> run : 1
of the operations -> that : 1
the operations run -> in : 1
operations run in -> constant : 1
in constant time -> and : 1
in constant time -> with : 1
in constant time -> to : 1
in constant time -> special : 1
constant time and -> the : 1
time and the -> other : 1
the other half -> run : 1
other half run -> in : 1
half run in -> linear : 1
run in linear -> amortized : 1
run in linear -> the : 1
in linear amortized -> complexity : 1
linear amortized complexity -> for : 1
amortized complexity for -> each : 1
complexity for each -> operation : 1
for each operation -> is : 1
each operation is -> the : 1
each operation is -> clearly : 1
operation is the -> total : 1
is the total -> time : 1
is the total -> amount : 1
the total time -> divided : 1
total time divided -> by : 1
time divided by -> the : 1
divided by the -> number : 1
by the number -> of : 3
number of which -> turns : 1
of which turns -> out : 1
which turns out -> to : 1
turns out to -> be : 1
out to be -> if : 1
to be if -> we : 1
to be if -> the : 1
be if we -> can : 1
if we can -> guarantee : 2
if we can -> write : 1
we can guarantee -> that : 2
can guarantee that -> the : 1
can guarantee that -> an : 1
guarantee that the -> expensive : 1
guarantee that the -> connection : 1
guarantee that the -> instructions : 1
the expensive operations -> due : 1
the expensive operations -> to : 1
expensive operations due -> to : 1
operations due to -> occur : 1
due to occur -> orders : 1
to occur orders -> of : 1
occur orders of -> magnitude : 1
orders of magnitude -> less : 1
of magnitude less -> we : 1
magnitude less we -> will : 1
less we will -> achieve : 1
we will achieve -> lower : 1
will achieve lower -> amortized : 1
achieve lower amortized -> running : 1
lower amortized running -> for : 1
amortized running for -> if : 1
running for if -> we : 1
guarantee that an -> expensive : 1
that an expensive -> operation : 1
an expensive operation -> only : 1
expensive operation only -> occurs : 1
operation only occurs -> once : 1
only occurs once -> in : 1
occurs once in -> a : 1
once in a -> then : 1
in a then -> the : 1
a then the -> amortized : 1
then the amortized -> running : 1
time is so -> depending : 1
is so depending -> on : 1
so depending on -> the : 1
depending on the -> frequency : 1
depending on the -> measuring : 1
depending on the -> application : 1
depending on the -> latency : 1
depending on the -> container : 1
depending on the -> iterator : 1
depending on the -> operating : 1
depending on the -> input : 2
depending on the -> bear : 1
depending on the -> the : 1
depending on the -> with : 1
on the frequency -> of : 1
the frequency of -> the : 1
frequency of the -> expensive : 1
of the expensive -> the : 1
the expensive the -> amortized : 1
expensive the amortized -> running : 1
running time back -> to : 1
time back to -> the : 1
to the standard -> states : 1
the standard states -> that : 1
standard states that -> to : 1
states that to -> run : 1
that to run -> in : 1
to run in -> amortized : 1
to run in -> it : 1
to run in -> parallel : 1
run in amortized -> constant : 1
in amortized constant -> how : 1
in amortized constant -> time : 1
amortized constant how -> do : 1
constant how do -> the : 1
how do the -> stl : 1
do the stl -> vendors : 1
the stl vendors -> achieve : 1
stl vendors achieve -> if : 1
vendors achieve if -> the : 1
achieve if the -> capacity : 1
if the capacity -> is : 1
the capacity is -> increased : 1
the capacity is -> the : 1
the capacity is -> is : 1
capacity is increased -> by : 1
is increased by -> a : 1
increased by a -> fixed : 1
by a fixed -> number : 1
a fixed number -> of : 1
fixed number of -> elements : 1
number of elements -> each : 1
number of elements -> that : 2
number of elements -> we : 1
number of elements -> in : 1
number of elements -> per : 1
number of elements -> addition : 1
number of elements -> with : 4
number of elements -> heavy : 1
number of elements -> light : 1
number of elements -> is : 1
of elements each -> time : 1
elements each time -> the : 1
each time the -> vector : 2
each time the -> program : 1
time the vector -> becomes : 1
time the vector -> needs : 1
the vector becomes -> we : 1
vector becomes we -> will : 1
becomes we will -> have : 1
we will have -> a : 2
have a case -> similar : 1
a case similar -> to : 1
case similar to -> the : 1
to the preceding -> one : 1
the preceding one -> where : 1
preceding one where -> we : 1
one where we -> had : 1
where we had -> a : 1
we had a -> running : 1
we had a -> brief : 1
had a running -> time : 1
a running time -> of : 1
time of even -> if : 1
of even if -> we : 1
if we use -> a : 1
if we use -> the : 1
use a large -> the : 1
use a large -> number : 1
a large the -> capacity : 1
large the capacity -> changes : 1
the capacity changes -> would : 1
capacity changes would -> still : 1
changes would still -> occur : 1
would still occur -> at : 1
still occur at -> fixed : 1
occur at fixed -> the : 1
at fixed the -> key : 1
fixed the key -> insight : 1
the key insight -> is : 1
key insight is -> that : 1
insight is that -> the : 1
the vector needs -> to : 3
vector needs to -> grow : 1
vector needs to -> we : 1
vector needs to -> rearrange : 1
needs to grow -> exponentially : 1
to grow exponentially -> in : 1
grow exponentially in -> order : 1
exponentially in order -> to : 1
to get the -> expensive : 1
to get the -> name : 1
to get the -> this : 1
get the expensive -> operations : 1
expensive operations to -> occur : 1
operations to occur -> rarely : 1
to occur rarely -> the : 1
occur rarely the -> vector : 1
rarely the vector -> uses : 1
the vector uses -> a : 1
vector uses a -> growth : 1
uses a growth -> factor : 1
a growth factor -> such : 1
growth factor such -> that : 1
factor such that -> the : 1
such that the -> capacity : 1
that the capacity -> of : 1
that the capacity -> is : 1
the capacity of -> the : 3
capacity of the -> new : 1
capacity of the -> vector : 1
capacity of the -> queue : 1
of the new -> array : 1
of the new -> class : 1
the new array -> is : 1
new array is -> the : 1
array is the -> current : 1
is the current -> size : 1
is the current -> this : 1
the current size -> times : 1
the current size -> of : 3
current size times -> the : 1
size times the -> growth : 1
times the growth -> big : 1
the growth big -> growth : 1
growth big growth -> factor : 1
big growth factor -> would : 1
growth factor would -> potentially : 1
factor would potentially -> waste : 1
would potentially waste -> more : 1
potentially waste more -> memory : 1
waste more memory -> but : 1
more memory but -> would : 1
memory but would -> make : 1
but would make -> the : 1
would make the -> expensive : 1
make the expensive -> operation : 1
the expensive operation -> occur : 1
expensive operation occur -> less : 1
operation occur less -> to : 1
occur less to -> simplify : 1
less to simplify -> the : 1
to simplify the -> assume : 1
to simplify the -> creation : 1
simplify the assume -> we : 1
the assume we -> double : 1
assume we double -> the : 1
double the capacity -> each : 1
the capacity each -> time : 1
capacity each time -> the : 1
needs to we -> can : 1
to we can -> now : 1
to we can -> read : 1
can now estimate -> how : 1
now estimate how -> often : 1
estimate how often -> the : 1
how often the -> expensive : 1
how often the -> functions : 1
often the expensive -> calls : 1
the expensive calls -> for : 1
expensive calls for -> a : 1
for a vector -> of : 1
vector of size -> we : 1
vector of size -> auto : 1
of size we -> would : 1
size we would -> need : 1
we would need -> to : 1
would need to -> grow : 1
would need to -> access : 1
would need to -> set : 1
need to grow -> the : 1
to grow the -> internal : 1
grow the internal -> array : 1
internal array times -> since : 1
array times since -> we : 1
times since we -> are : 1
we are doubling -> the : 1
are doubling the -> size : 1
doubling the size -> all : 1
the size all -> the : 1
size all the -> each : 1
all the each -> time : 1
the each time -> we : 1
each time we -> grow : 1
each time we -> access : 1
each time we -> enter : 1
time we grow -> the : 2
we grow the -> we : 1
we grow the -> array : 1
grow the we -> need : 1
the we need -> to : 6
need to move -> all : 1
to move all -> the : 1
the elements that -> are : 3
the elements that -> satisfy : 1
elements that are -> currently : 4
elements that are -> hashed : 1
that are currently -> in : 3
that are currently -> being : 2
that are currently -> held : 1
are currently in -> the : 3
currently in the -> the : 1
currently in the -> also : 1
currently in the -> priority : 1
the the time -> we : 1
the time we -> grow : 1
grow the array -> there : 1
the array there -> will : 1
array there will -> be : 1
will be elements -> to : 1
be elements to -> so : 1
elements to so -> if : 1
to so if -> we : 1
if we perform -> number : 1
we perform number -> of : 1
perform number of -> the : 1
number of the -> running : 1
number of the -> opencl : 1
of the running -> time : 1
of the running -> thread : 1
of the running -> program : 1
entire sequence will -> is : 1
sequence will is -> a : 1
will is a -> geometric : 1
is a geometric -> series : 1
a geometric series -> and : 1
geometric series and -> can : 1
series and can -> also : 1
and can also -> be : 2
also be expressed -> cdpaligncenter : 1
be expressed cdpaligncenter -> this : 1
expressed cdpaligncenter this -> by : 1
cdpaligncenter this by -> the : 1
this by the -> length : 1
the we end -> up : 1
we end up -> with : 1
up with the -> amortized : 1
with the amortized -> running : 1
running time we -> have : 1
time we have -> already : 1
we have already -> amortized : 1
we have already -> done : 1
have already amortized -> time : 1
already amortized time -> complexity : 1
time complexity is -> used : 1
time complexity is -> log : 1
complexity is used -> a : 1
is used a -> lot : 1
used a lot -> in : 1
a lot in -> the : 1
lot in the -> so : 1
in the so -> good : 1
the so good -> to : 1
so good to -> have : 1
good to have -> an : 1
to have an -> understanding : 1
have an understanding -> of : 2
an understanding of -> thinking : 1
an understanding of -> what : 1
understanding of thinking -> about : 1
of thinking about -> how : 1
thinking about how -> be : 1
about how be -> implemented : 1
how be implemented -> in : 1
implemented in amortized -> constant : 1
amortized constant time -> has : 1
amortized constant time -> as : 1
constant time has -> helped : 1
time has helped -> me : 1
has helped me -> remember : 1
helped me remember -> the : 1
me remember the -> simplified : 1
remember the simplified -> version : 1
the simplified version -> of : 1
simplified version of -> amortized : 1
simplified version of -> a : 1
simplified version of -> howard : 1
version of amortized -> constant : 1
of amortized constant -> will : 1
amortized constant will -> run : 1
constant will run -> in : 1
will perform is -> all : 1
perform is all -> we : 1
is all we -> are : 1
is all we -> as : 1
all we are -> going : 1
we are going -> to : 8
going to cover -> regarding : 1
to cover regarding -> asymptotic : 1
cover regarding asymptotic -> now : 1
regarding asymptotic now -> we : 1
asymptotic now we -> will : 1
now we will -> move : 1
now we will -> use : 1
we will move -> on : 1
will move on -> to : 1
move on to -> how : 1
move on to -> the : 1
on to how -> you : 1
to how you -> can : 1
you can go -> ahead : 1
can go ahead -> and : 1
go ahead and -> tackle : 1
ahead and tackle -> a : 1
and tackle a -> performance : 1
tackle a performance -> problem : 1
a performance problem -> and : 1
performance problem and -> work : 1
problem and work -> effectively : 1
and work effectively -> with : 1
work effectively with -> optimizing : 1
effectively with optimizing -> your : 1
with optimizing your -> to : 1
optimizing your to -> almost : 1
your to almost -> always : 1
to almost always -> add : 1
almost always add -> complexity : 1
always add complexity -> to : 1
add complexity to -> your : 1
complexity to your -> such : 1
to your such -> as : 1
your such as -> choice : 1
such as choice -> of : 1
as choice of -> algorithm : 1
choice of algorithm -> and : 1
of algorithm and -> data : 1
algorithm and data -> can : 1
and data can -> make : 1
data can make -> the : 1
can make the -> intention : 1
can make the -> profile : 1
can make the -> code : 1
make the intention -> of : 1
the intention of -> the : 1
the intention of -> each : 1
intention of the -> code : 1
the code but -> for : 1
code but for -> the : 1
but for the -> most : 1
the most optimizations -> will : 1
most optimizations will -> make : 1
optimizations will make -> the : 1
will make the -> code : 1
will make the -> compiler : 2
the code harder -> to : 1
code harder to -> read : 1
harder to read -> and : 1
to read and -> we : 1
to read and -> write : 1
to read and -> its : 1
to read and -> by : 1
read and we -> therefore : 1
and we therefore -> want : 1
we therefore want -> to : 1
therefore want to -> be : 1
want to be -> absolutely : 1
to be absolutely -> sure : 1
be absolutely sure -> that : 1
absolutely sure that -> the : 1
sure that the -> optimizations : 1
sure that the -> program : 1
sure that the -> predicate : 1
that the optimizations -> we : 1
the optimizations we -> add : 1
optimizations we add -> have : 1
we add have -> an : 1
add have an -> actual : 1
have an actual -> impact : 1
an actual impact -> on : 1
actual impact on -> what : 1
impact on what -> we : 1
on what we -> are : 1
what we are -> trying : 1
what we are -> doing : 2
what we are -> looking : 1
we are trying -> to : 1
are trying to -> achieve : 1
are trying to -> multiple : 1
trying to achieve -> in : 1
to achieve in -> terms : 1
achieve in terms -> of : 1
terms of do -> we : 1
of do we -> really : 1
do we really -> need : 1
we really need -> to : 1
we really need -> is : 1
really need to -> make : 1
need to make -> the : 1
need to make -> iterations : 1
the code in -> what : 1
code in what -> does : 1
in what does -> the : 1
what does the -> code : 1
does the code -> really : 1
the code really -> use : 1
code really use -> too : 1
really use too -> much : 1
use too much -> to : 1
too much to -> understand : 1
much to understand -> what : 1
to understand what -> optimizations : 1
to understand what -> stack : 1
understand what optimizations -> are : 1
what optimizations are -> we : 1
optimizations are we -> need : 1
are we need -> to : 1
understanding of the -> such : 1
understanding of the -> stl : 1
understanding of the -> effects : 1
of the such -> as : 1
the such as -> and : 1
as and memory -> optimizing : 1
and memory optimizing -> code : 1
memory optimizing code -> is : 1
optimizing code is -> but : 1
code is but -> also : 1
is but also -> very : 1
but also very -> easy : 1
also very easy -> to : 1
very easy to -> get : 1
easy to get -> lost : 1
to get lost -> without : 1
get lost without -> any : 1
lost without any -> measurable : 1
without any measurable -> we : 1
any measurable we -> start : 1
measurable we start -> this : 1
we start this -> section : 1
start this section -> by : 1
this section by -> suggesting : 1
section by suggesting -> a : 1
by suggesting a -> workflow : 1
suggesting a workflow -> to : 1
a workflow to -> follow : 1
workflow to follow -> when : 1
to follow when -> tuning : 1
follow when tuning -> your : 1
when tuning your -> a : 1
tuning your a -> easier : 1
your a easier -> to : 1
a easier to -> know : 1
easier to know -> how : 1
to know how -> to : 2
know how to -> optimize : 1
know how to -> handle : 1
know how to -> protect : 1
how to optimize -> and : 1
to optimize and -> when : 1
optimize and when -> to : 1
and when to -> stop : 1
and when to -> be : 1
when to stop -> optimizing : 1
to stop optimizing -> if : 1
stop optimizing if -> you : 1
optimizing if you -> have : 1
have a quantitative -> for : 1
a quantitative for -> some : 1
quantitative for some -> clear : 1
for some clear -> from : 1
some clear from -> the : 1
clear from the -> start : 1
from the start -> what : 1
the start what -> the : 1
start what the -> requirements : 1
what the requirements -> but : 1
the requirements but -> in : 1
requirements but in -> many : 1
but in many -> cases : 1
many cases it -> tends : 1
cases it tends -> to : 1
it tends to -> be : 1
tends to be -> even : 1
to be even -> though : 1
to be even -> more : 1
be even though -> it : 1
even though it -> might : 1
though it might -> be : 1
it might be -> obvious : 1
it might be -> deprecated : 1
it might be -> the : 1
it might be -> worth : 1
might be obvious -> that : 1
be obvious that -> the : 1
obvious that the -> code : 1
obvious that the -> requirements : 1
that the code -> is : 1
code is running -> too : 1
is running too -> important : 1
running too important -> to : 1
too important to -> know : 1
too important to -> ignore : 1
to know what -> would : 1
know what would -> be : 1
what would be -> good : 1
would be good -> each : 1
be good each -> domain : 1
good each domain -> has : 1
each domain has -> its : 1
domain has its -> own : 1
its own so -> make : 1
own so make -> sure : 1
so make sure -> you : 1
make sure you -> understand : 1
sure you understand -> the : 1
sure you understand -> what : 1
you understand the -> ones : 1
understand the ones -> that : 1
the ones that -> are : 1
ones that are -> relevant : 1
that are relevant -> to : 1
are relevant to -> your : 1
relevant to your -> here : 1
to your here -> are : 1
your here are -> some : 1
here are some -> examples : 1
here are some -> of : 1
here are some -> and : 1
are some examples -> to : 1
are some examples -> of : 2
some examples to -> make : 1
examples to make -> it : 1
to make it -> more : 1
to make it -> optimizations : 1
to make it -> possible : 1
to make it -> even : 1
to make it -> obvious : 1
to make it -> less : 1
make it more -> time : 1
it more time -> for : 1
more time for -> user : 1
time for user -> interactive : 1
for user interactive -> applications : 1
user interactive applications -> refer : 1
interactive applications refer -> with : 1
applications refer with -> per : 1
refer with per -> gives : 1
with per gives -> you : 1
per gives you -> ms : 1
gives you ms -> per : 1
you ms per -> audio : 1
ms per audio -> with : 1
per audio with -> a : 1
audio with a -> sample : 1
with a sample -> buffer : 1
a sample buffer -> at : 1
sample buffer at -> khz : 1
buffer at khz -> sample : 1
at khz sample -> rate : 1
khz sample rate -> means : 1
sample rate means -> slightly : 1
rate means slightly -> less : 1
means slightly less -> than : 1
slightly less than -> ms : 1
less than ms -> we : 1
than ms we -> know : 1
ms we know -> what : 1
we know what -> to : 1
know what to -> measure : 1
what to measure -> and : 1
to measure and -> what : 1
measure and what -> the : 1
and what the -> limits : 1
and what the -> defaults : 1
and what the -> default : 1
what the limits -> we : 1
the limits we -> proceed : 1
limits we proceed -> by : 1
we proceed by -> measuring : 1
proceed by measuring -> how : 1
by measuring how -> the : 1
measuring how the -> application : 1
how the application -> is : 1
application is performing -> right : 1
is performing right -> from : 1
performing right from -> it : 1
right from it -> should : 1
from it should -> be : 1
it should be -> obvious : 1
it should be -> said : 1
should be obvious -> if : 1
be obvious if -> we : 1
obvious if we -> are : 1
interested in average -> and : 1
in average and -> so : 1
average and so -> in : 1
so in this -> we : 1
this we are -> only : 1
this we are -> going : 3
this we are -> also : 1
this we are -> using : 1
we are only -> concerned : 1
we are only -> interested : 1
we are only -> using : 1
are only concerned -> with : 1
only concerned with -> measuring : 1
concerned with measuring -> the : 1
with measuring the -> goal : 1
measuring the goal -> we : 1
the goal we -> have : 1
goal we have -> set : 1
we have set -> depending : 1
have set depending -> on : 1
set depending on -> the : 1
on the measuring -> can : 1
the measuring can -> be : 1
measuring can be -> anything : 1
can be anything -> from : 1
be anything from -> using : 1
anything from using -> a : 1
from using a -> stopwatch : 1
using a stopwatch -> to : 1
a stopwatch to -> using : 1
stopwatch to using -> highly : 1
to using highly -> sophisticated : 1
using highly sophisticated -> performance : 1
highly sophisticated performance -> analysis : 1
sophisticated performance analysis -> the : 1
performance analysis the -> we : 1
analysis the we -> need : 1
need to find -> the : 1
find the the -> parts : 1
the the parts -> that : 1
the parts that -> are : 1
the parts that -> we : 1
parts that are -> too : 1
that are too -> slow : 1
are too slow -> and : 1
too slow and -> make : 1
slow and make -> the : 1
and make the -> application : 1
and make the -> ownership : 1
and make the -> bug : 1
make the application -> trust : 1
the application trust -> your : 1
application trust your -> gut : 1
trust your gut -> feeling : 1
your gut feeling -> at : 1
gut feeling at -> this : 1
feeling at this -> maybe : 1
at this maybe -> you : 1
this maybe you -> gained : 1
maybe you gained -> some : 1
you gained some -> insights : 1
gained some insights -> by : 1
some insights by -> measuring : 1
insights by measuring -> the : 1
by measuring the -> code : 1
measuring the code -> at : 1
the code at -> various : 1
code at various -> points : 1
at various points -> in : 1
various points in -> but : 1
points in but -> you : 1
in but you -> usually : 1
but you usually -> need : 1
you usually need -> to : 1
usually need to -> profile : 1
need to profile -> your : 1
your code further -> in : 1
code further in -> order : 1
further in order -> to : 1
find the hot -> spots : 1
the hot spots -> that : 1
hot spots that -> matters : 1
hot spots that -> spend : 1
spots that matters -> an : 1
that matters an -> educated : 1
matters an educated -> come : 1
an educated come -> up : 1
educated come up -> with : 1
come up with -> a : 1
come up with -> an : 1
with a hypothesis -> for : 1
a hypothesis for -> how : 1
hypothesis for how -> to : 1
how to improve -> the : 1
improve the can -> a : 1
the can a -> lookup : 1
can a lookup -> table : 1
a lookup table -> be : 1
lookup table be -> can : 1
table be can -> we : 1
be can we -> cache : 1
can we cache -> data : 1
we cache data -> to : 1
cache data to -> gain : 1
data to gain -> the : 1
to gain the -> overall : 1
gain the overall -> can : 1
the overall can -> we : 1
overall can we -> change : 1
can we change -> the : 1
we change the -> code : 1
we change the -> statement : 1
we change the -> string : 1
we change the -> to : 1
change the code -> so : 1
the code so -> that : 1
that the compiler -> can : 1
that the compiler -> inserts : 1
that the compiler -> generates : 1
that the compiler -> will : 1
compiler can vectorize -> can : 1
can vectorize can -> we : 1
vectorize can we -> decrease : 1
can we decrease -> the : 1
we decrease the -> number : 1
decrease the number -> of : 1
number of allocations -> in : 1
of allocations in -> the : 1
allocations in the -> critical : 1
allocations in the -> heap : 1
in the critical -> sections : 1
the critical sections -> by : 1
the critical sections -> of : 1
the critical sections -> and : 1
critical sections by -> reusing : 1
sections by reusing -> coming : 1
by reusing coming -> up : 1
reusing coming up -> with : 1
coming up with -> ideas : 1
up with ideas -> is : 1
with ideas is -> usually : 1
ideas is usually -> not : 1
is usually not -> that : 1
is usually not -> a : 2
usually not that -> hard : 1
not that hard -> if : 1
that hard if -> you : 1
hard if you -> know : 1
they are just -> educated : 1
are just educated -> okay : 1
just educated okay -> to : 1
educated okay to -> be : 1
okay to be -> we : 1
to be we -> will : 1
to be we -> assert : 1
be we will -> find : 1
we will find -> out : 1
will find out -> later : 1
find out later -> whether : 1
out later whether -> they : 1
later whether they -> had : 1
whether they had -> an : 1
they had an -> impact : 1
had an impact -> or : 1
an impact or -> implement : 1
impact or implement -> the : 1
or implement the -> hypothesis : 1
implement the hypothesis -> we : 1
the hypothesis we -> sketched : 1
hypothesis we sketched -> in : 1
we sketched in -> spend : 1
sketched in spend -> too : 1
in spend too -> much : 1
spend too much -> time : 2
too much time -> on : 1
too much time -> writing : 1
much time on -> this : 1
time on this -> step : 1
on this step -> making : 1
this step making -> it : 1
step making it -> perfect : 1
making it perfect -> before : 1
it perfect before -> you : 1
perfect before you -> know : 1
before you know -> that : 1
know that it -> actually : 1
that it actually -> has : 1
it actually has -> an : 1
actually has an -> be : 1
has an be -> prepared : 1
an be prepared -> to : 1
be prepared to -> reject : 1
prepared to reject -> this : 1
to reject this -> it : 1
reject this it -> might : 1
this it might -> not : 1
it might not -> have : 1
it might not -> be : 2
might not have -> the : 1
have the desired -> measure : 1
the desired measure -> do : 1
desired measure do -> the : 1
measure do the -> exact : 1
do the exact -> same : 1
the exact same -> test : 1
the exact same -> if : 1
the exact same -> time : 1
the exact same -> has : 1
exact same test -> as : 1
same test as -> in : 1
test as in -> and : 1
as in and -> compare : 1
in and compare -> the : 1
and compare the -> what : 1
compare the what -> did : 1
the what did -> we : 1
what did we -> if : 1
did we if -> we : 1
we if we -> gain : 1
if we gain -> reject : 1
we gain reject -> the : 1
gain reject the -> code : 1
reject the code -> and : 1
code and go -> back : 1
and go back -> to : 1
back to if -> the : 1
to if the -> optimization : 1
to if the -> computational : 1
if the optimization -> actually : 1
the optimization actually -> had : 1
optimization actually had -> a : 1
actually had a -> positive : 1
had a positive -> you : 1
a positive you -> need : 1
positive you need -> to : 1
need to ask -> yourself : 1
to ask yourself -> whether : 1
ask yourself whether -> good : 1
yourself whether good -> enough : 1
whether good enough -> to : 1
good enough to -> spend : 1
enough to spend -> more : 1
to spend more -> time : 1
more time how -> complicated : 1
time how complicated -> is : 1
how complicated is -> the : 1
complicated is the -> is : 1
is the is -> it : 1
is the is -> only : 1
is the is -> built : 1
the is it -> worth : 1
is it worth -> the : 1
it worth the -> is : 1
worth the is -> this : 1
the is this -> a : 1
is this a -> general : 1
this a general -> performance : 1
a general performance -> gain : 1
general performance gain -> or : 1
performance gain or -> is : 1
gain or is -> it : 1
or is it -> highly : 1
is it highly -> specific : 1
it highly specific -> to : 1
highly specific to -> a : 1
specific to a -> certain : 1
to a certain -> is : 1
a certain is -> it : 1
certain is it -> can : 1
is it can -> we : 1
it can we -> encapsulate : 1
it can we -> yet : 1
can we encapsulate -> it : 1
we encapsulate it -> or : 1
encapsulate it or -> does : 1
it or does -> it : 1
or does it -> spread : 1
does it spread -> out : 1
it spread out -> all : 1
spread out all -> over : 1
out all over -> the : 1
all over the -> code : 1
over the code -> if : 1
the code if -> you : 1
code if you -> motivate : 1
if you motivate -> the : 1
you motivate the -> go : 1
motivate the go -> back : 1
the go back -> to : 1
back to otherwise -> continue : 1
to otherwise continue -> to : 1
otherwise continue to -> the : 1
continue to the -> final : 1
to the final -> if : 1
the final if -> you : 1
final if you -> followed : 1
if you followed -> the : 1
you followed the -> instructions : 1
followed the instructions -> in : 1
the instructions in -> and : 1
the instructions in -> the : 1
instructions in and -> spend : 1
in and spend -> too : 1
and spend too -> much : 1
much time writing -> perfect : 1
time writing perfect -> code : 1
writing perfect code -> in : 1
perfect code in -> the : 1
code in the -> first : 1
first time to -> refactor : 1
time to refactor -> the : 1
to refactor the -> optimization : 1
refactor the optimization -> to : 1
the optimization to -> make : 1
optimization to make -> it : 1
make it optimizations -> almost : 1
it optimizations almost -> always : 1
optimizations almost always -> need : 1
almost always need -> some : 1
always need some -> comments : 1
need some comments -> to : 1
some comments to -> explain : 1
comments to explain -> why : 1
to explain why -> we : 1
explain why we -> are : 1
why we are -> doing : 1
are doing things -> in : 1
doing things in -> an : 1
things in an -> unusual : 1
in an unusual -> you : 1
an unusual you -> start : 1
unusual you start -> you : 1
you start you -> must : 1
start you must -> know : 1
you must know -> what : 1
must know what -> performance : 1
know what performance -> properties : 1
what performance properties -> are : 1
performance properties are -> important : 1
properties are important -> for : 1
important for the -> application : 1
for the application -> you : 1
the application you -> are : 2
application you are -> in : 1
application you are -> some : 1
you are in -> this : 1
are in this -> we : 1
we will explain -> some : 1
will explain some -> of : 1
explain some of -> the : 1
of the terms -> when : 1
the terms when -> measuring : 1
terms when measuring -> depending : 1
when measuring depending -> on : 1
measuring depending on -> the : 1
on the application -> you : 1
you are some -> of : 1
of the properties -> are : 1
the properties are -> more : 1
properties are more -> relevant : 1
are more relevant -> than : 1
more relevant than -> for : 1
relevant than for -> throughput : 1
than for throughput -> might : 1
for throughput might -> be : 1
throughput might be -> a : 1
be a more -> important : 1
a more important -> property : 1
more important property -> than : 1
important property than -> latency : 1
property than latency -> if : 1
than latency if -> you : 1
latency if you -> are : 1
you are writing -> an : 1
are writing an -> online : 1
writing an online -> image : 1
an online image -> converter : 1
online image converter -> whereas : 1
image converter whereas -> latency : 1
converter whereas latency -> is : 1
whereas latency is -> key : 1
latency is key -> when : 1
is key when -> writing : 1
key when writing -> interactive : 1
when writing interactive -> applications : 1
writing interactive applications -> with : 1
interactive applications with -> depending : 1
applications with depending -> on : 1
with depending on -> the : 1
on the latency -> and : 1
the latency and -> response : 1
latency and response -> time : 1
and response time -> might : 1
response time might -> have : 1
time might have -> very : 1
might have very -> precise : 1
have very precise -> and : 1
very precise and -> different : 1
precise and different -> in : 1
and different in -> this : 1
different in this -> we : 1
this we mean -> the : 1
we mean the -> time : 1
mean the time -> between : 1
the time between -> the : 1
the time between -> each : 1
time between the -> request : 1
between the request -> and : 1
the request and -> the : 1
request and the -> response : 1
and the response -> of : 1
the response of -> an : 1
response of an -> the : 1
of an the -> time : 1
of an the -> values : 1
of an the -> stl : 1
of an the -> pattern : 1
an the time -> it : 1
the time it -> takes : 6
the time it -> went : 1
time it takes -> for : 1
time it takes -> to : 6
it takes for -> an : 1
takes for an -> image : 1
for an image -> conversion : 1
an image conversion -> service : 2
image conversion service -> to : 1
image conversion service -> can : 1
conversion service to -> process : 1
service to process -> one : 1
to process one -> this : 1
process one this -> refers : 1
one this refers -> to : 1
this refers to -> number : 1
refers to number -> transactions : 1
to number transactions -> and : 1
number transactions and -> so : 1
transactions and so -> processed : 1
and so processed -> per : 1
so processed per -> time : 1
processed per time -> the : 1
per time the -> number : 1
time the number -> of : 1
number of images -> that : 1
of images that -> an : 1
images that an -> image : 1
that an image -> conversion : 1
conversion service can -> process : 1
service can process -> per : 1
can process per -> bound : 1
process per bound -> or : 1
per bound or -> cpu : 1
bound or cpu -> a : 1
or cpu a -> task : 1
cpu a task -> usually : 1
a task usually -> spends : 1
task usually spends -> the : 1
usually spends the -> majority : 1
spends the majority -> of : 1
majority of its -> computing : 1
of its computing -> on : 1
its computing on -> the : 1
computing on the -> cpu : 1
on the cpu -> or : 1
on the cpu -> and : 1
on the cpu -> so : 1
on the cpu -> using : 1
the cpu or -> waiting : 1
cpu or waiting -> for : 1
or waiting for -> and : 1
waiting for and -> so : 1
for and so -> a : 1
and so a -> task : 1
so a task -> is : 1
a task is -> said : 1
a task is -> while : 1
task is said -> to : 1
is said to -> be : 2
is said to -> run : 1
said to be -> cpu : 1
said to be -> bound : 1
said to be -> you : 1
to be cpu -> bound : 1
be cpu bound -> if : 1
cpu bound if -> it : 1
bound if it -> would : 2
if it would -> run : 2
it would run -> faster : 2
would run faster -> if : 1
would run faster -> by : 1
run faster if -> the : 1
faster if the -> cpu : 1
if the cpu -> were : 1
the cpu were -> said : 1
cpu were said -> to : 1
were said to -> be : 1
to be bound -> if : 1
be bound if -> it : 1
run faster by -> making : 1
faster by making -> the : 2
by making the -> sometimes : 1
by making the -> user : 2
by making the -> memory : 1
making the sometimes -> you : 1
the sometimes you -> can : 1
sometimes you can -> hear : 1
you can hear -> about : 1
can hear about -> tasks : 1
hear about tasks -> which : 1
about tasks which -> means : 1
tasks which means -> that : 1
means that the -> amount : 1
means that the -> size : 1
means that the -> other : 1
means that the -> objects : 1
means that the -> object : 1
means that the -> alignment : 1
means that the -> total : 1
means that the -> allocator : 1
means that the -> compiler : 1
means that the -> whole : 1
means that the -> two : 1
means that the -> better : 1
that the amount -> or : 1
the amount or -> speed : 1
amount or speed -> of : 1
or speed of -> the : 1
speed of the -> main : 1
speed of the -> following : 1
of the main -> memory : 1
of the main -> int : 1
of the main -> we : 1
the main memory -> is : 2
the main memory -> has : 1
the main memory -> and : 1
main memory is -> the : 1
main memory is -> ios : 1
memory is the -> current : 1
the current this -> is : 1
current this is -> a : 1
very important consideration -> for : 1
important consideration for -> code : 1
consideration for code -> executes : 1
for code executes -> mobile : 1
code executes mobile -> devices : 1
executes mobile devices -> with : 1
mobile devices with -> in : 1
devices with in -> order : 1
with in order -> to : 1
order to decrease -> the : 1
to decrease the -> power : 1
decrease the power -> the : 1
the power the -> application : 1
power the application -> needs : 1
the application needs -> to : 1
application needs to -> use : 1
needs to use -> the : 1
needs to use -> memory : 1
use the hardware -> more : 1
the hardware more -> just : 1
hardware more just -> as : 1
more just as -> if : 1
just as if -> we : 1
just as if -> it : 1
as if we -> are : 1
as if we -> supply : 1
as if we -> only : 1
as if we -> did : 1
we are optimizing -> for : 1
are optimizing for -> cpu : 1
are optimizing for -> low : 1
optimizing for cpu -> network : 1
for cpu network -> and : 1
cpu network and -> so : 1
network and so -> other : 1
and so other -> than : 1
so other than -> high : 1
other than high -> frequency : 1
than high frequency -> polling : 1
high frequency polling -> should : 1
frequency polling should -> be : 1
polling should be -> avoided : 1
should be avoided -> since : 1
should be avoided -> is : 1
be avoided since -> it : 1
avoided since it -> prevents : 1
since it prevents -> the : 1
it prevents the -> cpu : 1
prevents the cpu -> from : 1
the cpu from -> going : 1
cpu from going -> to : 1
from going to -> this : 1
going to this -> is : 1
to this is -> usually : 1
to this is -> not : 1
to this is -> a : 2
this is usually -> when : 1
this is usually -> not : 1
is usually when -> a : 1
usually when a -> lot : 1
when a lot -> of : 1
lot of samples -> while : 1
of samples while -> measuring : 1
samples while measuring -> a : 1
while measuring a -> good : 1
measuring a good -> enough : 1
a good enough -> indicator : 1
good enough indicator -> of : 1
enough indicator of -> how : 1
indicator of how -> the : 1
of how the -> program : 1
of how the -> approaches : 1
of how the -> operating : 1
how the program -> but : 1
the program but -> more : 1
program but more -> often : 1
but more often -> you : 1
more often you -> more : 1
often you more -> about : 1
you more about -> the : 1
more about the -> actual : 1
more about the -> containers : 1
about the actual -> performance : 1
about the actual -> number : 1
about the actual -> and : 1
the actual performance -> since : 1
actual performance since -> more : 1
performance since more -> robust : 1
since more robust -> against : 1
more robust against -> if : 1
robust against if -> you : 1
against if you -> are : 1
interested in you -> can : 1
in you can -> always : 1
in you can -> apply : 1
you can always -> the : 1
can always the -> for : 1
always the for -> testing : 1
the for testing -> best : 1
for testing best -> some : 1
testing best some -> more : 1
best some more -> common : 1
some more common -> to : 1
more common to -> see : 1
common to see -> regression : 1
to see regression -> tests : 1
see regression tests -> to : 1
regression tests to -> cover : 1
tests to cover -> functional : 1
to cover functional -> requirements : 1
cover functional requirements -> than : 1
functional requirements than -> to : 1
requirements than to -> performance : 1
than to performance -> requirements : 1
to performance requirements -> or : 1
performance requirements or -> other : 1
requirements or other -> nonfunctional : 1
or other nonfunctional -> performance : 1
other nonfunctional performance -> testing : 1
nonfunctional performance testing -> is : 1
performance testing is -> usually : 1
testing is usually -> more : 1
usually more sporadic -> more : 1
more sporadic more -> often : 1
sporadic more often -> than : 1
more often than -> way : 1
more often than -> threads : 1
often than way -> too : 1
than way too -> late : 1
way too late -> in : 1
too late in -> the : 1
late in the -> development : 1
in the development -> our : 1
the development our -> recommendation : 1
development our recommendation -> is : 1
our recommendation is -> to : 1
recommendation is to -> measure : 1
is to measure -> early : 1
to measure early -> and : 1
measure early and -> detect : 1
early and detect -> regression : 1
and detect regression -> as : 1
detect regression as -> soon : 1
regression as soon -> as : 1
as soon as -> possible : 1
as soon as -> blocking : 1
soon as possible -> by : 1
as possible by -> tests : 1
possible by tests -> to : 1
by tests to -> your : 1
tests to your -> nightly : 1
to your nightly -> and : 1
your nightly and -> so : 1
nightly and so -> the : 1
and so the -> algorithms : 1
so the algorithms -> and : 1
the algorithms and -> data : 1
the algorithms and -> abstractions : 1
data structures wisely -> if : 1
structures wisely if -> they : 1
wisely if they -> are : 1
they are to -> handle : 1
are to handle -> large : 1
to handle large -> but : 1
handle large but -> code : 1
large but code -> without : 1
but code without -> good : 1
without good also -> important : 1
good also important -> to : 1
also important to -> test : 1
important to test -> your : 1
to test your -> application : 1
test your application -> with : 1
your application with -> realistic : 1
application with realistic -> test : 1
with realistic test -> data : 1
realistic test data -> early : 1
test data early -> ask : 1
data early ask -> questions : 1
early ask questions -> about : 1
ask questions about -> data : 1
questions about data -> sizes : 1
about data sizes -> early : 1
data sizes early -> in : 1
sizes early in -> the : 1
early in the -> how : 1
in the how -> many : 1
the how many -> table : 1
how many table -> rows : 1
many table rows -> is : 1
table rows is -> the : 1
rows is the -> application : 1
is the application -> supposed : 1
is the application -> will : 1
the application supposed -> to : 1
application supposed to -> handle : 1
supposed to handle -> and : 1
to handle and -> still : 1
handle and still -> be : 1
and still be -> able : 1
able to scroll -> just : 1
to scroll just -> try : 1
scroll just try -> it : 1
just try it -> with : 1
try it with -> elements : 1
it with elements -> and : 1
with elements and -> hope : 1
elements and hope -> that : 1
and hope that -> your : 1
hope that your -> code : 1
that your code -> will : 1
that your code -> gets : 1
your code will -> test : 1
code will test -> your : 1
will test your -> data : 1
test your data -> is : 1
your data is -> a : 1
data is a -> very : 1
data is a -> contiguous : 1
a very effective -> way : 2
very effective way -> of : 2
effective way of -> understanding : 1
effective way of -> minimizing : 1
way of understanding -> the : 1
of understanding the -> data : 1
understanding the data -> you : 1
data you have -> there : 1
you have there -> are : 1
have there are -> so : 1
there are so -> many : 1
are so many -> good : 1
so many good -> and : 1
many good and -> plotting : 1
good and plotting -> tools : 1
and plotting tools -> available : 1
plotting tools available -> so : 1
tools available so -> there : 1
available so there -> is : 1
so there is -> really : 1
so there is -> no : 2
there is really -> no : 1
is really no -> excuse : 1
really no excuse -> for : 1
no excuse for -> not : 1
excuse for not -> the : 1
for not the -> plot : 1
not the plot -> does : 1
the plot does -> not : 1
plot does not -> have : 1
have to look -> pretty : 1
to look pretty -> in : 1
look pretty in -> order : 1
pretty in order -> to : 1
order to be -> once : 1
order to be -> able : 1
order to be -> this : 1
to be once -> you : 1
be once you -> plot : 1
once you plot -> your : 1
you plot your -> you : 1
plot your you -> are : 1
your you are -> going : 1
you are going -> to : 1
going to see -> the : 1
see the outliers -> and : 1
the outliers and -> patterns : 1
outliers and patterns -> that : 1
and patterns that -> are : 1
patterns that are -> usually : 1
that are usually -> hard : 1
that are usually -> utilized : 1
are usually hard -> to : 1
usually hard to -> find : 1
hard to find -> in : 1
to find in -> a : 1
find in a -> table : 1
in a table -> full : 1
a table full -> of : 1
table full of -> your : 1
full of your -> code : 1
and hot pareto -> or : 1
hot pareto or -> the : 1
pareto or the -> has : 1
or the has -> been : 1
has been applied -> in : 1
been applied in -> various : 1
applied in various -> fields : 1
in various fields -> since : 1
various fields since -> it : 1
fields since it -> was : 1
since it was -> first : 1
since it was -> never : 1
since it was -> last : 1
since it was -> very : 1
it was first -> observed : 1
was first observed -> by : 1
first observed by -> the : 1
observed by the -> italian : 1
by the italian -> economist : 1
the italian economist -> vilfredo : 1
italian economist vilfredo -> pareto : 1
economist vilfredo pareto -> more : 1
vilfredo pareto more -> than : 1
pareto more than -> years : 1
more than years -> he : 1
than years he -> was : 1
years he was -> able : 1
he was able -> to : 1
was able to -> show : 1
able to show -> that : 1
to show that -> of : 1
show that of -> the : 1
that of the -> italian : 1
that of the -> code : 1
of the italian -> population : 1
the italian population -> owned : 1
italian population owned -> of : 1
population owned of -> the : 1
owned of the -> in : 1
the in computer -> it : 1
in computer it -> has : 1
computer it has -> been : 1
has been widely -> used : 1
been widely used -> maybe : 1
widely used maybe -> even : 1
used maybe even -> in : 1
maybe even in -> software : 1
even in software -> it : 1
in software it -> suggests : 1
software it suggests -> that : 1
it suggests that -> of : 1
suggests that of -> the : 1
code is responsible -> for : 1
is responsible for -> of : 1
is responsible for -> allocating : 1
is responsible for -> freeing : 1
is responsible for -> deleting : 1
is responsible for -> printing : 1
responsible for of -> the : 1
for of the -> resources : 1
of the resources -> that : 1
the resources that -> a : 1
resources that a -> program : 1
that a program -> this : 1
a program this -> of : 1
program this of -> only : 1
this of only -> a : 1
of only a -> rule : 1
only a rule -> of : 1
a rule of -> thumb : 1
rule of thumb -> and : 1
rule of thumb -> is : 1
of thumb and -> be : 1
thumb and be -> taken : 1
and be taken -> too : 1
be taken too -> for : 1
taken too for -> code : 1
too for code -> that : 1
for code that -> has : 1
for code that -> allowed : 1
code that has -> not : 1
that has not -> been : 1
has not been -> common : 1
has not been -> the : 1
not been common -> to : 1
been common to -> find : 1
common to find -> some : 1
to find some -> relatively : 1
find some relatively -> small : 1
some relatively small -> hot : 1
relatively small hot -> spots : 1
small hot spots -> that : 1
spots that spend -> the : 1
that spend the -> vast : 1
spend the vast -> majority : 1
the vast majority -> of : 1
vast majority of -> the : 1
of the total -> as : 1
of the total -> number : 1
the total as -> a : 1
total as a -> this : 1
as a this -> is : 1
as a this -> value : 1
a this is -> actually : 1
a this is -> an : 1
a this is -> not : 1
a this is -> one : 1
this is actually -> good : 1
this is actually -> true : 1
is actually good -> news : 1
actually good news -> because : 1
good news because -> it : 1
news because it -> means : 1
because it means -> that : 1
can write most -> of : 2
write most of -> our : 2
most of our -> code : 2
of our code -> without : 2
of our code -> base : 1
our code without -> tweaking : 1
our code without -> explicit : 1
code without tweaking -> it : 1
without tweaking it -> for : 1
tweaking it for -> performance : 1
it for performance -> reasons : 1
for performance reasons -> and : 1
performance reasons and -> instead : 1
reasons and instead -> focus : 1
and instead focus -> on : 1
instead focus on -> keeping : 1
instead focus on -> aspects : 1
focus on keeping -> the : 1
on keeping the -> code : 1
keeping the code -> it : 1
the code it -> also : 1
code it also -> means : 1
that when doing -> we : 1
when doing we -> have : 1
doing we have -> a : 1
have a better -> idea : 1
a better idea -> of : 1
better idea of -> where : 1
idea of where -> to : 1
of where to -> do : 1
where to do -> there : 1
to do there -> is : 1
do there is -> a : 1
is a good -> chance : 2
is a good -> and : 1
is a good -> one : 1
is a good -> way : 1
is a good -> indication : 1
is a good -> example : 1
is a good -> place : 1
a good chance -> we : 1
a good chance -> that : 1
good chance we -> will : 1
chance we will -> optimize : 1
we will optimize -> code : 1
will optimize code -> that : 1
optimize code that -> will : 1
code that will -> not : 1
that will not -> have : 1
will not have -> an : 1
will not have -> to : 1
not have an -> impact : 1
on the overall -> in : 1
the overall in -> this : 1
overall in this -> we : 1
look at methods -> and : 1
at methods and -> tools : 1
methods and tools -> for : 1
and tools for -> finding : 1
tools for finding -> the : 1
for finding the -> of : 1
finding the of -> your : 1
the of your -> code : 1
your code that -> might : 1
code that might -> be : 1
that might be -> worth : 1
that might be -> invisible : 1
that might be -> allocated : 1
that might be -> used : 1
might be worth -> a : 1
might be worth -> parallel : 1
be worth a -> profiler : 1
worth a profiler -> is : 1
a profiler is -> usually : 1
profiler is usually -> the : 1
is usually the -> most : 1
usually the most -> efficient : 1
efficient way of -> finding : 1
way of finding -> hot : 1
of finding hot -> spots : 1
finding hot spots -> in : 1
hot spots in -> a : 1
spots in a -> profilers : 1
in a profilers -> analyze : 1
a profilers analyze -> the : 1
profilers analyze the -> execution : 1
analyze the execution -> of : 1
execution of a -> program : 1
of a program -> and : 1
of a program -> there : 1
a program and -> output : 1
program and output -> a : 1
and output a -> statistical : 1
output a statistical -> a : 1
a statistical a -> of : 1
statistical a of -> how : 1
a of how -> often : 1
of how often -> the : 1
of how often -> are : 1
often the functions -> or : 1
the functions or -> instructions : 1
functions or instructions -> in : 1
or instructions in -> the : 1
instructions in the -> program : 1
instructions in the -> source : 1
in the program -> are : 1
the program are -> being : 1
program are being -> in : 1
are being in -> profilers : 1
being in profilers -> usually : 1
in profilers usually -> also : 1
profilers usually also -> output : 1
usually also output -> a : 1
also output a -> call : 1
output a call -> graph : 1
a call graph -> that : 1
call graph that -> shows : 1
graph that shows -> the : 1
that shows the -> relationship : 1
shows the relationship -> between : 1
the relationship between -> function : 1
relationship between function -> that : 1
between function that -> the : 1
that the callers -> and : 1
the callers and -> callees : 1
callers and callees -> for : 1
and callees for -> each : 1
callees for each -> function : 1
for each function -> that : 1
each function that -> was : 1
function that was -> called : 1
that was called -> during : 1
was called during -> the : 1
called during the -> in : 1
during the in -> the : 1
following we can -> see : 1
that the was -> called : 1
that the was -> also : 1
the was called -> from : 1
was called from -> and : 1
called from and -> that : 1
and that call -> the : 1
that call the -> function : 1
call the function -> cdpaligncenter : 1
call the function -> was : 1
call the function -> like : 1
the function cdpaligncenter -> of : 1
function cdpaligncenter of -> a : 1
cdpaligncenter of a -> call : 1
cdpaligncenter of a -> sampling : 1
cdpaligncenter of a -> hypothetical : 1
of a call -> are : 1
a call are -> two : 1
call are two -> main : 1
are two main -> categories : 2
are two main -> an : 1
two main categories -> of : 2
main categories of -> sampling : 1
main categories of -> associative : 1
categories of sampling -> profilers : 1
of sampling profilers -> and : 1
of sampling profilers -> is : 1
of sampling profilers -> to : 1
sampling profilers and -> instrumentation : 1
profilers and instrumentation -> there : 1
and instrumentation there -> is : 1
instrumentation there is -> also : 1
there is also -> a : 3
there is also -> static : 1
is also a -> third : 1
is also a -> singly : 1
is also a -> lot : 1
also a third -> category : 1
a third category -> mixing : 1
third category mixing -> both : 1
category mixing both -> that : 1
mixing both that -> a : 1
both that a -> hybrid : 1
that a hybrid -> of : 1
a hybrid of -> sampling : 1
hybrid of sampling -> and : 1
of sampling and -> the : 1
sampling and the -> unix : 1
and the unix -> performance : 1
the unix performance -> analysis : 1
unix performance analysis -> an : 1
performance analysis an -> example : 1
analysis an example -> of : 1
example of this -> third : 1
of this third -> we : 1
this third we -> mean : 1
third we mean -> inserting : 1
we mean inserting -> code : 1
mean inserting code -> into : 1
inserting code into -> the : 1
code into the -> program : 1
into the program -> to : 1
the program to -> be : 1
the program to -> go : 1
the program to -> call : 1
program to be -> analyzed : 1
to be analyzed -> in : 1
be analyzed in -> order : 1
analyzed in order -> to : 1
order to gather -> information : 1
to gather information -> about : 1
gather information about -> how : 1
information about how -> frequently : 1
about how frequently -> each : 1
how frequently each -> function : 1
frequently each function -> is : 1
each function is -> being : 1
function is being -> the : 1
function is being -> called : 1
function is being -> it : 1
is being the -> inserted : 1
being the inserted -> instrumentation : 1
the inserted instrumentation -> code : 1
inserted instrumentation code -> records : 1
instrumentation code records -> each : 1
code records each -> entry : 1
records each entry -> and : 1
each entry and -> exit : 1
entry and exit -> you : 1
entry and exit -> point : 1
and exit you -> can : 1
exit you can -> write : 1
you can write -> your : 1
can write your -> own : 1
your own primitive -> instrumentation : 1
own primitive instrumentation -> profiler : 1
primitive instrumentation profiler -> by : 1
instrumentation profiler by -> inserting : 1
profiler by inserting -> the : 1
by inserting the -> code : 1
inserting the code -> manually : 1
the code manually -> or : 1
code manually or -> you : 1
manually or you -> can : 1
or you can -> use : 1
you can use -> a : 1
you can use -> the : 3
you can use -> boost : 1
use a tool -> that : 1
a tool that -> automatically : 1
tool that automatically -> inserts : 1
that automatically inserts -> the : 1
automatically inserts the -> necessary : 1
inserts the necessary -> code : 1
the necessary code -> as : 1
necessary code as -> a : 1
code as a -> step : 1
as a step -> in : 1
a step in -> the : 1
step in the -> build : 1
step in the -> this : 1
in the build -> a : 1
the build a -> naive : 1
build a naive -> implementation : 1
a naive implementation -> might : 1
a naive implementation -> could : 1
naive implementation might -> be : 1
naive implementation might -> do : 1
implementation might be -> good : 1
might be good -> enough : 1
be good enough -> for : 1
good enough for -> your : 1
enough for your -> but : 1
for your but -> be : 1
your but be -> aware : 1
but be aware -> of : 1
be aware of -> the : 2
be aware of -> its : 1
aware of the -> impact : 1
aware of the -> following : 1
aware of the -> start : 1
aware of the -> possibilities : 1
aware of the -> type : 1
of the impact -> that : 1
the impact that -> the : 1
impact that the -> added : 1
that the added -> code : 1
the added code -> can : 1
added code can -> have : 1
code can have -> on : 1
can have on -> the : 1
have on the -> which : 1
on the which -> can : 1
on the which -> is : 1
the which can -> make : 1
which can make -> the : 1
make the profile -> another : 1
the profile another -> problem : 1
profile another problem -> with : 1
another problem with -> naive : 1
problem with naive -> implementations : 1
with naive implementations -> is : 1
naive implementations is -> that : 1
implementations is that -> they : 1
is that they -> might : 1
is that they -> automatically : 1
that they might -> prevent : 1
they might prevent -> compiler : 1
might prevent compiler -> optimizations : 1
prevent compiler optimizations -> or : 1
compiler optimizations or -> run : 1
optimizations or run -> the : 1
or run the -> risk : 1
run the risk -> of : 1
the risk of -> being : 1
the risk of -> deadlocks : 1
the risk of -> data : 1
risk of being -> optimized : 1
of being optimized -> to : 1
being optimized to -> give : 1
optimized to give -> you : 1
you an example -> of : 1
example of an -> instrumentation : 1
of an instrumentation -> here : 1
an instrumentation here -> is : 1
instrumentation here is -> a : 1
is a simplified -> version : 3
a simplified version -> of : 2
a simplified version -> for : 1
version of a -> timer : 1
of a timer -> class : 1
a timer class -> we : 1
timer class we -> have : 1
class we have -> used : 1
class we have -> worked : 1
we have used -> in : 1
we have used -> it : 1
we have used -> mutex : 1
have used in -> previous : 1
used in previous -> scopedtimer : 1
in previous scopedtimer -> using : 1
previous scopedtimer using -> clocktype : 1
scopedtimer using clocktype -> using : 1
using clocktype using -> namespace : 1
clocktype using namespace -> auto : 1
using namespace auto -> stop : 1
namespace auto stop -> auto : 1
auto stop auto -> duration : 1
stop auto duration -> auto : 1
auto duration auto -> ms : 1
duration auto ms -> ms : 1
auto ms ms -> ms : 1
ms ms ms -> const : 1
ms ms const -> const : 1
ms const const -> will : 1
const const will -> measure : 1
const will measure -> the : 1
will measure the -> time : 1
measure the time -> from : 1
the time from -> when : 1
time from when -> it : 1
from when it -> was : 1
when it was -> created : 1
it was created -> to : 1
was created to -> the : 1
created to the -> time : 1
to the time -> it : 2
time it went -> out : 1
it went out -> of : 1
went out of -> that : 1
out of that -> we : 1
are using the -> available : 1
are using the -> only : 1
are using the -> short : 1
are using the -> same : 1
using the available -> since : 1
the available since -> which : 1
available since which -> was : 1
since which was -> designed : 1
which was designed -> for : 1
was designed for -> measuring : 1
designed for measuring -> time : 1
for measuring time -> the : 1
measuring time the -> is : 1
time the is -> which : 1
the is which -> means : 1
is which means -> that : 1
it will never -> decrease : 1
will never decrease -> between : 1
never decrease between -> two : 1
decrease between two -> consecutive : 1
between two consecutive -> calls : 1
two consecutive calls -> to : 1
consecutive calls to -> this : 1
calls to this -> is : 1
this is not -> the : 1
this is not -> just : 1
this is not -> an : 1
this is not -> see : 1
this is not -> and : 1
this is not -> true : 1
this is not -> new : 1
this is not -> portable : 1
this is not -> intended : 1
not the case -> for : 1
not the case -> with : 1
the case for -> the : 1
the case for -> traditional : 1
for the system -> for : 1
for the system -> to : 1
the system for -> which : 1
system for which -> can : 1
for which can -> be : 1
can be adjusted -> at : 1
be adjusted at -> any : 1
adjusted at any -> can : 1
at any can -> now : 1
any can now -> use : 1
now use our -> time : 1
use our time -> class : 1
our time class -> by : 1
time class by -> measuring : 1
class by measuring -> each : 1
by measuring each -> function : 1
measuring each function -> in : 1
each function in -> a : 1
in a program -> by : 1
in a program -> has : 1
in a program -> reside : 1
in a program -> can : 1
a program by -> creating : 1
program by creating -> a : 1
by creating a -> instance : 1
by creating a -> similar : 1
creating a instance -> at : 1
a instance at -> the : 1
instance at the -> beginning : 1
beginning of each -> scopedtimer : 1
beginning of each -> allocate : 1
of each scopedtimer -> though : 1
each scopedtimer though -> we : 1
scopedtimer though we -> recommend : 1
though we recommend -> the : 1
though we recommend -> using : 1
we recommend the -> use : 1
recommend the use -> of : 1
use of preprocessor -> macros : 1
of preprocessor macros -> in : 1
preprocessor macros in -> this : 1
macros in this -> might : 1
in this might -> be : 1
this might be -> a : 1
be a case -> for : 1
be a case -> where : 1
a case for -> using : 1
case for using -> scopedtimer : 1
for using scopedtimer -> are : 1
using scopedtimer are -> using : 1
scopedtimer are using -> the : 1
using the only -> predefined : 1
the only predefined -> available : 1
only predefined available -> since : 1
predefined available since -> to : 1
available since to -> get : 1
since to get -> the : 1
get the name -> of : 1
of the there -> are : 1
the there are -> other : 1
the there are -> typedefs : 1
the there are -> three : 1
are other nonstandard -> predefined : 1
other nonstandard predefined -> macros : 1
nonstandard predefined macros -> that : 1
predefined macros that -> are : 1
macros that are -> supported : 1
that are supported -> by : 1
are supported by -> most : 1
supported by most -> compilers : 1
by most compilers -> and : 1
most compilers and -> can : 1
compilers and can -> be : 1
can be really -> useful : 1
be really useful -> for : 1
really useful for -> debugging : 1
useful for debugging -> for : 1
for debugging for -> and : 1
debugging for and -> our : 1
for and our -> class : 1
and our class -> can : 1
our class can -> be : 1
be used like -> that : 1
be used like -> tuple : 1
be used like -> numbers : 1
be used like -> name : 1
be used like -> if : 1
used like that -> we : 1
like that we -> have : 1
we have defined -> when : 1
have defined when -> compiling : 1
defined when compiling -> our : 1
when compiling our -> it : 1
compiling our it -> will : 1
our it will -> produce : 1
it will produce -> the : 1
will produce the -> following : 1
will produce the -> same : 1
produce the following -> output : 1
the following output -> each : 1
following output each -> time : 1
output each time -> ms : 1
each time ms -> profilers : 1
time ms profilers -> create : 1
ms profilers create -> a : 1
profilers create a -> profile : 1
create a profile -> by : 1
a profile by -> looking : 1
profile by looking -> at : 1
at the running -> state : 1
the running state -> at : 1
running state at -> even : 1
state at even -> every : 1
at even every -> sampling : 1
even every sampling -> profilers : 1
every sampling profilers -> usually : 1
sampling profilers usually -> have : 1
sampling profilers usually -> only : 1
profilers usually have -> a : 1
usually have a -> minimum : 1
have a minimum -> impact : 1
a minimum impact -> on : 1
minimum impact on -> the : 1
on the actual -> and : 1
on the actual -> time : 1
the actual and -> also : 1
the actual and -> in : 1
actual and also -> possible : 1
and also possible -> to : 1
possible to build -> the : 1
to build the -> program : 1
build the program -> in : 1
the program in -> release : 1
the program in -> a : 1
program in release -> mode : 1
in release mode -> with : 1
release mode with -> all : 1
mode with all -> optimizations : 1
with all optimizations -> turned : 1
all optimizations turned -> a : 1
optimizations turned a -> drawback : 1
turned a drawback -> of : 1
a drawback of -> sampling : 1
drawback of sampling -> profilers : 1
sampling profilers is -> their : 1
profilers is their -> inaccuracy : 1
is their inaccuracy -> and : 1
their inaccuracy and -> statistical : 1
inaccuracy and statistical -> which : 1
and statistical which -> is : 1
statistical which is -> usually : 1
which is usually -> not : 1
usually not a -> problem : 2
not a problem -> as : 1
not a problem -> since : 1
a problem as -> long : 1
problem as long -> as : 1
long as you -> are : 1
as you are -> aware : 1
you are aware -> of : 1
are aware of -> the : 1
are aware of -> use : 1
the following figure -> shows : 3
the following figure -> cdpaligncenter : 1
following figure shows -> a : 2
following figure shows -> the : 2
following figure shows -> how : 3
following figure shows -> two : 1
figure shows a -> sampling : 1
figure shows a -> possible : 1
shows a sampling -> session : 1
a sampling session -> of : 1
sampling session of -> a : 1
session of a -> running : 1
of a running -> program : 1
a running program -> with : 1
running program with -> five : 1
program with five -> and : 1
with five and -> the : 1
five and the -> indicate : 1
and the indicate -> when : 1
the indicate when -> each : 1
indicate when each -> sample : 1
when each sample -> was : 1
each sample was -> the : 1
sample was the -> boxes : 1
was the boxes -> indicate : 1
the boxes indicate -> the : 1
boxes indicate the -> entry : 1
indicate the entry -> and : 1
the entry and -> exit : 1
and exit point -> of : 1
exit point of -> each : 1
point of each -> executing : 1
of each executing -> cdpaligncenter : 1
each executing cdpaligncenter -> cdpaligncenter : 1
executing cdpaligncenter cdpaligncenter -> of : 1
cdpaligncenter cdpaligncenter of -> a : 1
of a sampling -> profiler : 1
a sampling profiler -> profile : 1
a sampling profiler -> stores : 1
sampling profiler profile -> is : 1
profiler profile is -> summarized : 1
profile is summarized -> in : 1
is summarized in -> the : 1
summarized in the -> following : 1
the following column -> in : 1
following column in -> the : 1
column in the -> preceding : 1
the preceding table -> shows : 1
preceding table shows -> the : 1
shows the amount -> of : 1
amount of call -> stacks : 1
of call stacks -> that : 1
of call stacks -> whereas : 1
of call stacks -> at : 1
call stacks that -> contained : 1
stacks that contained -> a : 1
that contained a -> certain : 1
contained a certain -> in : 1
a certain in -> our : 1
certain in our -> the : 1
in our the -> main : 1
in our the -> better : 1
our the main -> function : 1
the main function -> was : 1
main function was -> present : 1
function was present -> in : 1
was present in -> all : 1
present in all -> out : 1
in all out -> of : 1
all out of -> call : 1
out of call -> stacks : 1
call stacks whereas -> the : 1
stacks whereas the -> was : 1
whereas the was -> only : 1
the was only -> detected : 1
was only detected -> in : 1
only detected in -> call : 1
detected in call -> which : 1
in call which -> corresponds : 1
call which corresponds -> to : 1
corresponds to of -> all : 1
to of all -> call : 1
of all call -> column : 1
all call column -> for : 1
call column for -> each : 1
column for each -> how : 1
for each how -> many : 1
each how many -> times : 1
how many times -> it : 1
many times it -> occurred : 1
times it occurred -> on : 1
it occurred on -> top : 1
occurred on top -> of : 1
top of the -> call : 4
top of the -> can : 1
top of the -> auto : 1
top of the -> stack : 1
of the call -> the : 1
of the call -> stack : 3
of the call -> this : 1
the call the -> function : 1
the function was -> detected : 1
function was detected -> once : 1
was detected once -> on : 1
detected once on -> top : 1
once on top -> of : 1
the call stack -> at : 2
the call stack -> whenever : 1
call stack at -> the : 1
call stack at -> and : 1
stack at the -> fifth : 1
at the fifth -> whereas : 1
the fifth whereas -> was : 1
fifth whereas was -> on : 1
whereas was on -> top : 1
was on top -> of : 2
stack at and -> which : 1
at and which -> corresponds : 1
and which corresponds -> to : 1
to the had -> the : 1
the had the -> highest : 1
had the highest -> self : 1
the highest self -> value : 1
highest self value -> and : 1
self value and -> was : 1
value and was -> on : 1
and was on -> top : 1
call stack whenever -> it : 1
stack whenever it -> was : 1
whenever it was -> a : 1
it was a -> sampling : 1
it was a -> container : 2
was a sampling -> profiler : 1
sampling profiler stores -> samples : 1
profiler stores samples -> of : 1
stores samples of -> call : 1
samples of call -> stacks : 1
call stacks at -> even : 1
stacks at even -> time : 1
at even time -> it : 1
even time it -> detects : 1
time it detects -> what : 1
it detects what -> is : 1
detects what is -> currently : 1
what is currently -> running : 1
is currently running -> on : 1
currently running on -> the : 1
running on the -> pure : 1
running on the -> main : 1
running on the -> same : 1
on the pure -> sampling : 1
the pure sampling -> profilers : 1
pure sampling profilers -> usually : 1
profilers usually only -> detect : 1
usually only detect -> functions : 1
only detect functions -> that : 1
detect functions that -> are : 1
functions that are -> currently : 1
functions that are -> being : 1
are currently being -> executed : 1
are currently being -> used : 1
currently being executed -> in : 1
being executed in -> a : 2
being executed in -> the : 1
executed in a -> thread : 1
executed in a -> separate : 1
executed in a -> where : 1
in a thread -> that : 1
a thread that -> is : 2
a thread that -> needs : 1
a thread that -> produces : 1
thread that is -> in : 1
thread that is -> waiting : 1
that is in -> a : 1
is in a -> running : 1
a running since -> sleeping : 1
running since sleeping -> threads : 1
since sleeping threads -> do : 1
sleeping threads do -> not : 1
threads do not -> get : 1
do not get -> scheduled : 1
not get scheduled -> on : 1
get scheduled on -> the : 1
scheduled on the -> this : 1
scheduled on the -> it : 1
on the this -> means : 1
on the this -> code : 1
on the this -> is : 2
the this means -> that : 1
if a function -> is : 1
a function is -> waiting : 1
a function is -> being : 1
function is waiting -> for : 1
is waiting for -> a : 1
is waiting for -> other : 1
is waiting for -> will : 1
waiting for a -> lock : 1
for a lock -> that : 1
a lock that -> causes : 2
a lock that -> is : 1
lock that causes -> the : 1
lock that causes -> a : 1
that causes the -> thread : 1
causes the thread -> to : 1
the thread to -> that : 1
the thread to -> also : 1
the thread to -> wait : 1
thread to that -> time : 1
to that time -> will : 1
that time will -> not : 1
time will not -> show : 1
will not show -> up : 2
not show up -> in : 2
show up in -> the : 2
up in the -> time : 1
up in the -> this : 1
up in the -> same : 3
in the time -> this : 1
in the time -> it : 1
the time this -> is : 1
time this is -> because : 1
this is because -> your : 1
is because your -> bottlenecks : 1
because your bottlenecks -> might : 1
your bottlenecks might -> be : 1
bottlenecks might be -> caused : 1
might be caused -> by : 1
be caused by -> thread : 1
caused by thread -> synchronization : 1
by thread synchronization -> that : 1
thread synchronization that -> might : 1
synchronization that might -> be : 1
might be invisible -> for : 1
be invisible for -> the : 1
invisible for the -> sampling : 1
for the sampling -> happened : 1
the sampling happened -> to : 1
sampling happened to -> according : 1
happened to according -> to : 1
to according to -> the : 1
to the it -> was : 1
to the it -> signals : 1
to the it -> uses : 1
to the it -> has : 1
the it was -> called : 1
it was called -> by : 1
was called by -> between : 1
called by between -> samples : 1
by between samples -> two : 1
between samples two -> and : 1
samples two and -> but : 1
two and but -> it : 1
and but it -> never : 1
but it never -> showed : 1
it never showed -> up : 1
never showed up -> in : 1
showed up in -> our : 1
up in our -> statistical : 1
in our statistical -> profile : 1
our statistical profile -> since : 1
statistical profile since -> it : 1
profile since it -> was : 1
it was never -> registered : 1
was never registered -> in : 1
never registered in -> any : 1
registered in any -> of : 1
any of the -> call : 1
any of the -> benefits : 1
the call this -> is : 1
call this is -> also : 1
this is also -> an : 1
is also an -> important : 1
also an important -> property : 1
an important property -> of : 1
important property of -> sampling : 1
property of sampling -> profilers : 1
sampling profilers to -> be : 1
profilers to be -> aware : 1
to be aware -> if : 1
to be aware -> of : 1
be aware if -> the : 1
aware if the -> time : 1
if the time -> between : 1
time between each -> sample : 1
between each sample -> is : 1
each sample is -> too : 1
sample is too -> big : 1
is too big -> or : 1
too big or -> the : 1
big or the -> total : 1
or the total -> sampling : 1
the total sampling -> session : 1
total sampling session -> is : 1
sampling session is -> too : 1
session is too -> short : 1
is too short -> and : 1
too short and -> functions : 1
short and functions -> will : 1
and functions will -> not : 1
in the this -> is : 4
in the this -> forces : 1
a problem since -> these : 1
problem since these -> functions : 1
since these functions -> are : 1
these functions are -> rarely : 1
these functions are -> since : 1
functions are rarely -> the : 1
are rarely the -> functions : 1
are rarely the -> class : 1
rarely the functions -> you : 1
the functions you -> need : 1
functions you need -> to : 1
need to tune -> one : 1
to tune one -> can : 1
tune one can -> note : 1
one can note -> that : 1
can note that -> the : 1
the was also -> missed : 1
was also missed -> between : 1
also missed between -> and : 1
missed between and -> but : 1
between and but -> since : 1
and but since -> was : 1
but since was -> called : 1
since was called -> very : 1
was called very -> it : 1
called very it -> had : 1
very it had -> a : 1
it had a -> big : 1
had a big -> impact : 1
a big impact -> on : 3
big impact on -> the : 2
big impact on -> how : 1
on the profile -> sure : 1
the profile sure -> you : 1
profile sure you -> understand : 1
you understand what -> your : 1
understand what your -> time : 1
what your time -> profiler : 1
your time profiler -> actually : 1
time profiler actually -> be : 1
profiler actually be -> aware : 1
actually be aware -> of : 1
aware of its -> limitations : 1
of its limitations -> and : 1
its limitations and -> strengths : 1
limitations and strengths -> in : 1
and strengths in -> order : 1
strengths in order -> to : 1
it as effectively -> as : 1
as effectively as -> this : 1
effectively as this -> you : 1
as this you -> learned : 1
this you learned -> how : 3
this you learned -> the : 1
you learned how -> to : 4
how to compare -> the : 1
to compare the -> efficiency : 1
to compare the -> key : 1
to compare the -> iterator : 1
to compare the -> distance : 1
compare the efficiency -> of : 1
the efficiency of -> algorithms : 1
efficiency of algorithms -> by : 1
of algorithms by -> using : 1
algorithms by using -> big : 1
by using big -> o : 1
big o we -> now : 1
o we now -> know : 1
we now know -> that : 1
now know that -> the : 1
that the stl -> has : 1
the stl has -> complexity : 1
the stl has -> also : 1
stl has complexity -> all : 1
has complexity all -> stl : 1
complexity all stl -> algorithms : 1
all stl algorithms -> specify : 1
stl algorithms specify -> their : 1
algorithms specify their -> or : 1
specify their or -> performance : 1
their or performance -> whereas : 1
or performance whereas -> containers : 1
performance whereas containers -> and : 1
whereas containers and -> iterators : 1
containers and iterators -> specify : 1
and iterators specify -> amortized : 1
iterators specify amortized -> also : 1
specify amortized also -> learned : 1
amortized also learned -> how : 1
also learned how -> to : 4
how to quantify -> software : 1
to quantify software -> performance : 1
quantify software performance -> by : 1
software performance by -> measuring : 1
performance by measuring -> latency : 1
by measuring latency -> and : 1
measuring latency and -> you : 1
latency and you -> learned : 1
and you learned -> how : 1
how to detect -> hotspots : 1
to detect hotspots -> in : 1
detect hotspots in -> your : 1
hotspots in your -> code : 1
your code by -> using : 1
code by using -> cpu : 1
by using cpu -> the : 1
using cpu the -> last : 1
cpu the last -> we : 1
the last we -> discussed : 1
last we discussed -> how : 1
we discussed how -> to : 1
discussed how to -> analyze : 1
how to analyze -> time : 1
to analyze time -> and : 1
analyze time and -> memory : 1
time and memory -> and : 1
and memory and -> how : 1
and memory and -> alignment : 1
memory and how -> to : 1
to measure in -> this : 1
measure in this -> we : 1
going to talk -> about : 1
talk about how -> to : 1
how to choose -> and : 1
to choose and -> use : 1
choose and use -> data : 1
and use data -> structures : 1
use data structures -> from : 1
structures from the -> standard : 1
from the standard -> template : 1
from the standard -> library : 2
from the standard -> they : 1
from the standard -> a : 1
the standard template -> to : 1
standard template to -> understand : 1
template to understand -> why : 1
to understand why -> certain : 1
to understand why -> we : 1
understand why certain -> data : 1
why certain data -> structures : 1
certain data structures -> work : 1
data structures work -> very : 1
structures work very -> well : 1
work very well -> on : 1
very well on -> the : 1
well on the -> computers : 1
on the computers -> of : 1
the computers of -> we : 1
computers of we -> first : 1
we first need -> to : 1
we first need -> some : 1
first need to -> cover : 1
first need to -> set : 1
some basics about -> computer : 1
basics about computer -> in : 1
about computer in -> this : 1
computer in this -> you : 1
in this you -> will : 1
in this you -> can : 1
will learn properties -> of : 1
learn properties of -> computer : 1
properties of computer -> stl : 1
properties of computer -> treats : 1
of computer stl -> sequence : 1
computer stl sequence -> associative : 1
stl sequence associative -> and : 1
sequence associative and -> container : 2
associative and container -> of : 1
associative and container -> this : 1
and container of -> computer : 1
container of computer -> we : 1
of computer we -> start : 1
computer we start -> walking : 1
we start walking -> through : 1
start walking through -> the : 1
walking through the -> stl : 1
through the stl -> containers : 1
the stl containers -> and : 1
stl containers and -> some : 1
containers and some -> other : 1
and some other -> useful : 1
some other useful -> data : 1
other useful data -> we : 1
useful data we -> will : 1
data we will -> briefly : 1
data we will -> demonstrate : 1
we will briefly -> discuss : 1
will briefly discuss -> some : 1
briefly discuss some -> properties : 1
discuss some properties -> of : 1
some properties of -> computer : 1
of computer treats -> memory : 1
computer treats memory -> as : 1
treats memory as -> a : 1
memory as a -> sequence : 1
memory as a -> cache : 1
as a sequence -> of : 1
of the size -> of : 1
size of each -> cell : 1
of each cell -> is : 1
each cell is -> one : 1
cell is one -> and : 1
is one and -> each : 1
one and each -> cell : 1
and each cell -> has : 1
each cell has -> an : 1
cell has an -> accessing : 1
has an accessing -> a : 1
an accessing a -> byte : 1
accessing a byte -> in : 2
accessing a byte -> by : 1
a byte in -> memory : 1
a byte in -> the : 1
byte in memory -> by : 1
in memory by -> its : 1
memory by its -> address : 1
by its address -> is : 2
its address is -> a : 1
its address is -> an : 1
address is a -> constant : 1
a constant time -> that : 1
constant time that -> is : 1
time that is -> independent : 1
that is independent -> of : 1
is independent of -> the : 1
independent of the -> total : 1
independent of the -> for : 1
the total number -> of : 4
total number of -> memory : 1
total number of -> hits : 1
total number of -> hardware : 1
total number of -> threads : 1
number of memory -> on : 1
of memory on -> a : 1
of memory on -> the : 1
memory on a -> one : 1
on a one -> can : 2
a one can -> theoretically : 2
one can theoretically -> address : 2
can theoretically address -> that : 1
can theoretically address -> which : 1
theoretically address that -> around : 1
address that around -> which : 1
that around which -> restricts : 1
around which restricts -> the : 1
which restricts the -> amount : 1
restricts the amount -> of : 1
amount of memory -> a : 1
amount of memory -> that : 2
of memory a -> process : 1
memory a process -> is : 1
a process is -> allowed : 1
process is allowed -> to : 1
allowed to use -> at : 1
to use at -> on : 1
use at on -> a : 1
at on a -> one : 1
theoretically address which -> is : 1
address which is -> so : 1
which is so -> big : 1
is so big -> that : 1
so big that -> there : 1
big that there -> is : 1
there is hardly -> any : 1
is hardly any -> risk : 1
is hardly any -> but : 1
hardly any risk -> of : 1
any risk of -> running : 1
any risk of -> data : 1
risk of running -> out : 1
of running out -> of : 1
out of following -> image : 1
of following image -> shows : 1
image shows a -> sequence : 1
image shows a -> hash : 1
shows a sequence -> of : 1
sequence of memory -> cells : 2
of memory cells -> laid : 2
memory cells laid -> out : 2
cells laid out -> in : 2
out in each -> cell : 1
in each cell -> contains : 1
each cell contains -> eight : 1
cell contains eight -> hexadecimal : 1
contains eight hexadecimal -> numbers : 1
eight hexadecimal numbers -> are : 1
hexadecimal numbers are -> the : 1
numbers are the -> addresses : 1
are the addresses -> of : 1
the addresses of -> the : 1
addresses of the -> memory : 1
of the memory -> cdpaligncenter : 1
of the memory -> hierarchy : 1
of the memory -> occupied : 1
of the memory -> that : 1
of the memory -> we : 1
the memory cdpaligncenter -> sequence : 1
memory cdpaligncenter sequence -> of : 1
cdpaligncenter sequence of -> memory : 1
out in accessing -> a : 1
in accessing a -> byte : 1
a byte by -> its : 1
byte by its -> address : 1
address is an -> from : 1
an from a -> tempting : 1
from a tempting -> to : 1
a tempting to -> believe : 1
tempting to believe -> that : 1
to believe that -> each : 1
to believe that -> the : 1
believe that each -> memory : 1
that each memory -> cell : 1
each memory cell -> is : 1
memory cell is -> equally : 1
cell is equally -> quick : 1
is equally quick -> to : 1
equally quick to -> this : 1
quick to this -> is : 1
a good and -> useful : 1
good and useful -> approach : 1
and useful approach -> in : 1
useful approach in -> many : 1
approach in many -> but : 1
in many but -> when : 1
many but when -> choosing : 1
but when choosing -> data : 1
when choosing data -> structures : 1
choosing data structures -> for : 1
structures for efficient -> one : 1
for efficient one -> needs : 1
efficient one needs -> to : 1
one needs to -> take : 1
needs to take -> into : 1
needs to take -> concurrency : 1
to take into -> account : 2
take into account -> the : 1
take into account -> when : 1
into account the -> memory : 1
account the memory -> hierarchy : 1
the memory hierarchy -> that : 1
the memory hierarchy -> has : 1
memory hierarchy that -> exists : 1
hierarchy that exists -> in : 1
that exists in -> modern : 1
exists in modern -> the : 1
in modern the -> importance : 1
modern the importance -> of : 1
importance of the -> memory : 2
memory hierarchy has -> since : 1
hierarchy has since -> the : 1
has since the -> time : 1
since the time -> it : 1
it takes to -> read : 1
it takes to -> complete : 1
it takes to -> access : 1
it takes to -> iterate : 1
it takes to -> sum : 1
it takes to -> execute : 2
it takes to -> process : 1
takes to read -> and : 1
read and write -> from : 1
and write from -> the : 1
write from the -> main : 1
from the main -> memory : 1
from the main -> can : 1
from the main -> as : 1
main memory has -> become : 1
memory has become -> more : 1
memory has become -> in : 1
has become more -> expensive : 1
become more expensive -> compared : 1
more expensive compared -> to : 1
expensive compared to -> the : 1
to the speed -> of : 1
the speed of -> the : 1
figure shows the -> architecture : 1
figure shows the -> cpu : 1
figure shows the -> three : 1
shows the architecture -> of : 1
the architecture of -> a : 1
architecture of a -> machine : 1
of a machine -> with : 1
a machine with -> one : 1
a machine with -> two : 1
machine with one -> cpu : 1
with one cpu -> with : 1
one cpu with -> four : 1
cpu with four -> cdpalign : 1
with four cdpalign -> example : 1
four cdpalign example -> of : 1
cdpalign example of -> a : 1
of a processor -> with : 1
a processor with -> the : 1
processor with the -> boxes : 1
with the boxes -> labeled : 1
the boxes labeled -> and : 1
boxes labeled and -> are : 1
labeled and are -> memory : 1
and are memory -> currently : 1
are memory currently -> writing : 1
memory currently writing -> this : 1
currently writing this -> chapter : 1
writing this chapter -> on : 1
this chapter on -> a : 1
chapter on a -> macbook : 1
on a macbook -> pro : 1
a macbook pro -> from : 1
macbook pro from -> which : 1
pro from which -> is : 1
from which is -> equipped : 1
which is equipped -> with : 1
is equipped with -> an : 1
equipped with an -> intel : 1
with an intel -> on : 1
an intel on -> this : 1
intel on this -> each : 1
on this each -> core : 1
this each core -> has : 1
each core has -> its : 1
core has its -> own : 1
own and whereas -> the : 1
whereas the cache -> is : 1
the cache is -> shared : 1
cache is shared -> among : 1
shared among all -> four : 1
shared among all -> running : 1
shared among all -> the : 1
among all four -> running : 1
all four running -> command : 1
four running command -> from : 1
running command from -> a : 1
command from a -> terminal : 1
from a terminal -> gives : 1
a terminal gives -> among : 1
terminal gives among -> other : 1
gives among other -> the : 1
among other the -> following : 1
other the following -> reported : 1
other the following -> three : 1
other the following -> example : 1
the following reported -> is : 1
following reported is -> the : 1
reported is the -> total : 1
the total amount -> of : 2
total amount of -> main : 1
total amount of -> memory : 1
amount of main -> which : 1
amount of main -> memory : 1
of main which -> is : 1
main which is -> gb : 1
which is gb -> in : 1
is gb in -> this : 1
gb in this -> which : 1
in this which -> is : 1
this which is -> reported : 1
which is reported -> to : 1
is reported to -> be : 1
reported to be -> is : 1
to be is -> the : 1
be is the -> size : 1
of the cache -> also : 1
of the cache -> and : 1
the cache also -> known : 1
cache also known -> as : 1
also known as -> when : 1
known as when -> accessing : 1
as when accessing -> a : 1
when accessing a -> byte : 1
byte in the -> machine : 1
in the machine -> is : 1
the machine is -> not : 1
machine is not -> only : 1
not only fetching -> the : 1
only fetching the -> byte : 1
fetching the byte -> we : 1
the byte we -> asked : 1
byte we asked -> the : 1
we asked the -> machine : 1
asked the machine -> always : 1
the machine always -> fetches : 1
machine always fetches -> a : 1
always fetches a -> cache : 1
fetches a cache -> which : 1
a cache which -> in : 1
cache which in -> this : 1
which in this -> case : 1
in this case -> is : 1
in this case -> cdpaligncenter : 1
in this case -> we : 2
in this case -> lies : 1
this case is -> the : 1
case is the -> various : 1
is the various -> caches : 1
the various caches -> between : 1
various caches between -> the : 1
caches between the -> cpu : 1
between the cpu -> and : 2
between the cpu -> registers : 1
the cpu and -> main : 1
the cpu and -> then : 1
the cpu and -> its : 1
the cpu and -> the : 1
the cpu and -> gpu : 1
cpu and main -> memory : 1
and main memory -> keep : 1
main memory keep -> track : 1
memory keep track -> of : 1
track of byte -> blocks : 1
of byte blocks -> instead : 1
byte blocks instead -> of : 1
blocks instead of -> individual : 1
blocks instead of -> handwritten : 1
instead of individual -> is : 1
of individual is -> the : 1
individual is the -> size : 1
of the instruction -> this : 1
the instruction this -> is : 1
instruction this is -> a : 1
is a kb -> cache : 1
a kb cache -> dedicated : 1
kb cache dedicated -> to : 1
cache dedicated to -> store : 1
dedicated to store -> instructions : 1
to store instructions -> that : 1
store instructions that -> have : 1
instructions that have -> been : 1
that have been -> recently : 1
that have been -> extracted : 1
that have been -> created : 1
have been recently -> used : 1
been recently used -> by : 1
recently used by -> the : 1
used by the -> the : 1
used by the -> mean : 1
used by the -> standard : 1
used by the -> allocators : 1
used by the -> operating : 1
used by the -> reader : 1
used by the -> boost : 1
by the the -> is : 1
by the the -> fences : 1
the the is -> also : 1
the the is -> a : 1
the is also -> kb : 1
is also kb -> and : 1
also kb and -> is : 1
kb and is -> dedicated : 1
and is dedicated -> for : 1
is dedicated for -> data : 1
dedicated for data -> as : 1
for data as -> opposed : 1
data as opposed -> to : 1
opposed to we -> can : 1
we can read -> the : 1
can read the -> size : 1
read the size -> of : 1
the cache and -> the : 1
cache and the -> which : 1
and the which -> is : 1
the which is -> mb : 1
the which is -> first : 1
the which is -> a : 1
the which is -> not : 1
which is mb -> and : 1
is mb and -> mb : 1
mb and mb -> an : 1
and mb an -> important : 1
mb an important -> observation : 1
an important observation -> is : 1
important observation is -> that : 1
observation is that -> the : 1
that the caches -> are : 1
that the caches -> can : 1
the caches are -> tiny : 1
caches are tiny -> compared : 1
are tiny compared -> to : 1
tiny compared to -> the : 1
of main memory -> presenting : 1
main memory presenting -> any : 1
memory presenting any -> detailed : 1
presenting any detailed -> facts : 1
any detailed facts -> about : 1
detailed facts about -> the : 1
facts about the -> actual : 1
the actual number -> of : 1
actual number of -> cycles : 1
number of cycles -> required : 1
of cycles required -> to : 1
cycles required to -> access : 1
required to access -> data : 1
to access data -> from : 1
access data from -> each : 1
data from each -> layer : 1
from each layer -> in : 1
each layer in -> the : 1
layer in the -> cache : 1
layer in the -> figure : 1
in the cache -> a : 1
in the cache -> will : 1
the cache a -> very : 1
cache a very -> rough : 1
a very rough -> guideline : 1
very rough guideline -> is : 1
rough guideline is -> that : 1
guideline is that -> there : 1
is that there -> are : 1
that there are -> order : 1
that there are -> two : 1
there are order -> of : 1
are order of -> magnitude : 1
of magnitude differences -> of : 1
magnitude differences of -> latency : 1
differences of latency -> between : 1
of latency between -> two : 1
latency between two -> adjacent : 1
between two adjacent -> layers : 1
two adjacent layers -> and : 1
adjacent layers and -> the : 1
layers and the -> following : 1
and the following -> table : 2
and the following -> code : 1
table shows an -> extract : 1
shows an extract -> from : 1
an extract from -> the : 1
extract from the -> latency : 1
from the latency -> numbers : 1
the latency numbers -> presented : 1
latency numbers presented -> in : 1
numbers presented in -> an : 1
presented in an -> article : 1
in an article -> by : 1
an article by -> yourself : 1
article by yourself -> programming : 1
by yourself programming -> in : 1
yourself programming in -> ten : 1
programming in ten -> the : 1
in ten the -> full : 1
ten the full -> table : 1
the full table -> is : 1
full table is -> usually : 1
table is usually -> referred : 1
is usually referred -> to : 2
usually referred to -> as : 3
to as numbers -> every : 1
as numbers every -> programmer : 1
numbers every programmer -> should : 1
every programmer should -> is : 1
programmer should is -> credited : 1
should is credited -> to : 1
is credited to -> jeff : 1
credited to jeff -> cache : 1
to jeff cache -> reference : 1
jeff cache reference -> ns : 1
cache reference ns -> cache : 1
cache reference ns -> main : 1
reference ns cache -> reference : 1
ns cache reference -> ns : 1
reference ns main -> memory : 1
ns main memory -> reference : 1
main memory reference -> ns : 1
memory reference ns -> the : 1
reference ns the -> data : 1
ns the data -> in : 1
the data in -> such : 1
data in such -> a : 1
in such a -> way : 1
such a way -> that : 1
way that the -> caches : 1
the caches can -> be : 1
caches can be -> fully : 1
can be fully -> utilized : 1
be fully utilized -> can : 1
fully utilized can -> have : 1
utilized can have -> a : 1
have a dramatic -> effect : 1
a dramatic effect -> on : 1
dramatic effect on -> the : 1
effect on the -> accessing : 1
on the accessing -> data : 1
the accessing data -> that : 1
accessing data that -> has : 1
accessing data that -> is : 1
data that has -> recently : 1
that has recently -> been : 1
has recently been -> used : 1
recently been used -> potentially : 1
been used potentially -> already : 1
used potentially already -> resides : 1
potentially already resides -> in : 1
already resides in -> the : 1
resides in the -> cache : 1
the cache will -> make : 1
cache will make -> your : 1
will make your -> program : 1
make your program -> this : 1
your program this -> is : 1
program this is -> known : 1
this is known -> as : 2
is known as -> accessing : 1
is known as -> wiping : 1
known as accessing -> data : 1
as accessing data -> that : 1
data that is -> located : 1
data that is -> already : 1
data that is -> addressable : 1
data that is -> mutated : 1
data that is -> ready : 1
data that is -> shared : 1
that is located -> near : 1
is located near -> some : 1
located near some -> other : 1
near some other -> data : 1
some other data -> you : 1
other data you -> are : 1
data you are -> using : 1
are using will -> increase : 1
using will increase -> the : 1
will increase the -> likelihood : 2
will increase the -> probability : 1
increase the likelihood -> that : 1
increase the likelihood -> of : 1
the likelihood that -> the : 1
likelihood that the -> data : 1
that the data -> you : 1
that the data -> we : 1
you need is -> already : 1
need is already -> in : 1
need is already -> cached : 1
is already in -> a : 1
is already in -> the : 1
is already in -> return : 2
is already in -> other : 1
already in a -> cache : 1
in a cache -> line : 1
a cache line -> fetched : 1
cache line fetched -> from : 1
line fetched from -> main : 1
fetched from main -> memory : 1
from main memory -> this : 1
main memory this -> is : 1
memory this is -> known : 1
known as wiping -> out : 1
as wiping out -> the : 1
wiping out the -> cache : 1
out the cache -> lines : 1
the cache lines -> in : 1
cache lines in -> inner : 1
lines in inner -> loops : 1
in inner loops -> might : 1
inner loops might -> result : 1
loops might result -> in : 1
might result in -> very : 1
might result in -> the : 2
result in very -> bad : 1
in very bad -> this : 1
very bad this -> is : 1
bad this is -> sometimes : 1
this is sometimes -> called : 1
is sometimes called -> cache : 1
sometimes called cache -> look : 1
called cache look -> at : 1
cache look at -> an : 1
look at an -> auto : 1
look at an -> example : 2
at an auto -> the : 1
an auto the -> data : 1
auto the data -> cache : 1
the data cache -> size : 1
data cache size -> constexpr : 1
cache size constexpr -> auto : 1
size constexpr auto -> ksize : 1
constexpr auto ksize -> using : 1
auto ksize using -> matrixtype : 2
ksize using matrixtype -> auto : 2
using matrixtype auto -> counter : 1
using matrixtype auto -> int : 1
matrixtype auto counter -> for : 1
auto counter for -> i : 1
counter for i -> i : 1
i i for -> j : 2
i for j -> j : 2
for j j -> version : 1
for j j -> saw : 1
for j j -> this : 1
j j version -> takes : 1
j version takes -> about : 1
version takes about -> ms : 1
takes about ms -> to : 2
takes about ms -> when : 1
about ms to -> run : 1
about ms to -> compute : 1
ms to run -> on : 1
to run on -> my : 1
run on my -> by : 1
on my by -> only : 1
my by only -> changing : 1
by only changing -> the : 1
only changing the -> line : 1
changing the line -> in : 1
the line in -> the : 1
line in the -> inner : 1
in the inner -> loop : 1
in the inner -> function : 1
inner loop to -> the : 1
loop to the -> time : 1
takes to complete -> the : 1
to complete the -> function : 1
complete the function -> increases : 1
the function increases -> from : 1
function increases from -> ms : 1
increases from ms -> to : 1
from ms to -> over : 1
ms to over -> the : 1
to over the -> first : 1
over the first -> example : 1
the first example -> when : 1
first example when -> using : 1
example when using -> we : 1
when using we -> will : 1
using we will -> most : 1
we will most -> of : 1
will most of -> the : 1
the time access -> memory : 1
time access memory -> that : 1
access memory that -> is : 1
access memory that -> has : 1
memory that is -> already : 1
memory that is -> occupied : 1
memory that is -> being : 1
memory that is -> not : 1
that is already -> in : 1
that is already -> resident : 1
in the whereas -> in : 1
the whereas in -> the : 1
whereas in the -> modified : 1
whereas in the -> algorithm : 1
in the modified -> version : 1
the modified version -> using : 1
the modified version -> ms : 1
modified version using -> every : 1
version using every -> access : 1
using every access -> will : 1
every access will -> generate : 1
access will generate -> an : 1
will generate an -> cache : 1
generate an cache -> even : 1
an cache even -> if : 1
cache even if -> memory : 1
even if memory -> accesses : 1
if memory accesses -> are : 1
memory accesses are -> constant : 1
accesses are constant -> time : 1
are constant time -> caching : 1
constant time caching -> can : 1
time caching can -> have : 1
caching can have -> dramatic : 1
can have dramatic -> effects : 1
have dramatic effects -> on : 1
dramatic effects on -> the : 1
effects on the -> actual : 1
the actual time -> it : 1
actual time it -> takes : 1
takes to access -> the : 1
access the offers -> a : 1
the offers a -> set : 1
set of extremely -> useful : 1
of extremely useful -> container : 1
extremely useful container -> a : 1
useful container a -> container : 1
container a container -> is : 1
a container is -> a : 1
container is a -> data : 1
container is a -> container : 1
is a data -> structure : 1
a data structure -> that : 1
a data structure -> called : 1
data structure that -> contains : 1
data structure that -> is : 1
structure that contains -> a : 1
that contains a -> collection : 1
contains a collection -> of : 1
collection of the -> container : 2
collection of the -> asymptotic : 1
of the container -> manages : 1
of the container -> it : 1
of the container -> you : 1
of the container -> is : 1
of the container -> changes : 1
of the container -> by : 1
the container manages -> the : 1
container manages the -> memory : 1
manages the memory -> of : 1
the memory of -> the : 1
memory of the -> elements : 1
of the elements -> it : 1
of the elements -> has : 1
the elements it -> this : 1
elements it this -> means : 1
it this means -> that : 1
have to explicitly -> create : 1
have to explicitly -> call : 1
have to explicitly -> parse : 1
to explicitly create -> and : 1
explicitly create and -> delete : 1
create and delete -> our : 1
and delete our -> objects : 1
delete our objects -> that : 1
our objects that -> we : 1
objects that we -> put : 1
objects that we -> are : 1
that we put -> in : 1
we put in -> a : 1
put in a -> we : 1
in a we -> can : 1
in a we -> will : 1
we can pass -> objects : 1
we can pass -> arguments : 1
we can pass -> an : 1
can pass objects -> created : 1
pass objects created -> on : 1
objects created on -> the : 1
created on the -> stack : 1
the stack to -> a : 1
the stack to -> overflow : 1
stack to a -> container : 1
to a container -> and : 1
to a container -> with : 1
a container and -> the : 1
container and the -> container : 1
and the container -> will : 1
the container will -> copy : 1
container will copy -> and : 1
will copy and -> store : 1
copy and store -> them : 1
and store them -> on : 1
store them on -> the : 1
them on the -> free : 1
on the free -> are : 1
on the free -> which : 1
on the free -> store : 2
on the free -> it : 1
the free are -> used : 1
free are used -> for : 1
are used for -> accessing : 1
are used for -> backing : 1
used for accessing -> elements : 1
for accessing elements -> in : 1
accessing elements in -> and : 1
elements in and -> are : 1
in and are -> therefore : 1
and are therefore -> a : 1
are therefore a -> fundamental : 1
therefore a fundamental -> concept : 1
a fundamental concept -> for : 1
fundamental concept for -> understanding : 1
concept for understanding -> the : 1
for understanding the -> iterator : 1
understanding the iterator -> concept : 1
the iterator concept -> is : 2
the iterator concept -> and : 1
the iterator concept -> from : 1
iterator concept is -> covered : 1
iterator concept is -> not : 1
concept is covered -> in : 1
is covered in -> deeper : 1
covered in deeper -> look : 1
in deeper look -> at : 1
look at for -> this : 1
look at for -> at : 1
at for this -> enough : 1
for this enough -> to : 1
this enough to -> know : 1
enough to know -> that : 1
know that an -> iterator : 1
know that an -> arena : 1
that an iterator -> can : 1
an iterator can -> be : 1
iterator can be -> thought : 1
iterator can be -> stepped : 1
iterator can be -> used : 1
iterator can be -> the : 1
can be thought -> of : 2
be thought of -> as : 4
a pointer to -> an : 1
a pointer to -> the : 5
a pointer to -> refer : 1
a pointer to -> a : 2
a pointer to -> any : 1
pointer to an -> element : 1
to an element -> and : 1
an element and -> that : 1
element and that -> the : 1
and that the -> iterators : 1
that the iterators -> have : 1
the iterators have -> different : 1
iterators have different -> operators : 1
have different operators -> defined : 1
different operators defined -> depending : 1
operators defined depending -> on : 1
defined depending on -> the : 1
on the container -> they : 1
the container they -> belong : 1
container they belong -> for : 1
they belong for -> data : 1
belong for data -> structures : 1
for data structures -> provide : 1
data structures provide -> random : 1
structures provide random -> access : 1
provide random access -> iterators : 1
random access iterators -> to : 1
access iterators to -> their : 1
iterators to their -> these : 1
to their these -> iterators : 1
their these iterators -> support : 1
these iterators support -> arithmetic : 1
iterators support arithmetic -> expressions : 1
support arithmetic expressions -> using : 1
arithmetic expressions using -> and : 1
expressions using and -> whereas : 1
using and whereas -> an : 1
and whereas an -> iterator : 1
whereas an iterator -> to : 1
an iterator to -> a : 1
an iterator to -> the : 2
an iterator to -> an : 1
iterator to a -> linked : 1
iterator to a -> value : 1
to a linked -> for : 1
a linked for -> only : 1
linked for only -> supports : 1
for only supports -> and : 1
only supports and -> containers : 1
supports and containers -> are : 1
and containers are -> divided : 1
containers are divided -> into : 1
are divided into -> three : 1
divided into three -> sequence : 1
into three sequence -> associative : 1
three sequence associative -> and : 1
and container this -> section : 1
container this section -> will : 1
section will contain -> a : 1
will contain a -> brief : 1
contain a brief -> introduction : 1
a brief introduction -> to : 2
a brief introduction -> of : 1
to the containers -> in : 1
the containers in -> each : 1
the containers in -> the : 1
containers in each -> of : 1
in each of -> the : 1
each of the -> three : 1
the three categories -> and : 1
three categories and -> also : 1
categories and also -> address : 1
and also address -> the : 1
also address the -> most : 1
address the most -> important : 1
the most important -> things : 1
the most important -> components : 1
most important things -> to : 1
important things to -> consider : 1
things to consider -> when : 1
to consider when -> performance : 1
to consider when -> choosing : 1
to consider when -> an : 1
consider when performance -> is : 1
when performance is -> an : 1
is an sequence -> containers : 1
an sequence containers -> keep : 1
sequence containers keep -> the : 1
containers keep the -> elements : 1
keep the elements -> in : 2
in the order -> you : 1
in the order -> they : 1
in the order -> specified : 1
the order you -> specify : 1
order you specify -> when : 1
you specify when -> adding : 1
specify when adding -> the : 1
when adding the -> elements : 1
adding the elements -> to : 1
the elements to -> the : 2
elements to the -> the : 1
elements to the -> end : 3
elements to the -> new : 1
elements to the -> is : 1
the the sequence -> containers : 1
the sequence containers -> are : 1
the sequence containers -> and : 1
sequence containers are -> and : 1
containers are and -> things : 1
containers are and -> associative : 1
containers are and -> sets : 1
are and things -> you : 1
and things you -> need : 1
things you need -> to : 1
to know before -> choosing : 1
know before choosing -> a : 1
before choosing a -> sequence : 1
choosing a sequence -> container : 1
a sequence container -> are : 1
sequence container are -> as : 1
container are as -> of : 1
are as of -> elements : 1
as of elements -> of : 1
of elements of -> how : 1
elements of how -> often : 1
how often are -> you : 1
often are you -> going : 1
are you going -> to : 1
you going to -> add : 1
going to add -> delete : 1
to add delete -> rearrange : 1
add delete rearrange -> you : 1
delete rearrange you -> need : 1
rearrange you need -> to : 1
need to sort -> the : 2
sort the adding -> elements : 1
the adding elements -> to : 1
adding elements to -> a : 1
elements to a -> sequence : 1
to a sequence -> you : 1
a sequence you -> always : 1
sequence you always -> specify : 1
you always specify -> where : 1
always specify where -> in : 1
specify where in -> the : 1
where in the -> sequence : 1
in the sequence -> the : 1
the sequence the -> should : 1
sequence the should -> be : 1
the should be -> for : 1
should be for -> when : 1
be for when -> adding : 1
for when adding -> an : 1
when adding an -> element : 3
adding an element -> to : 3
adding an element -> when : 1
an element to -> a : 1
an element to -> the : 4
element to a -> vector : 1
to a vector -> you : 1
to a vector -> are : 1
to a vector -> of : 1
a vector you -> can : 1
vector you can -> call : 1
you can call -> which : 1
can call which -> will : 1
call which will -> add : 1
which will add -> the : 1
will add the -> new : 1
add the new -> element : 1
the new element -> last : 1
new element last -> in : 1
element last in -> the : 1
last in the -> and : 1
the and is -> probably : 1
and is probably -> the : 1
commonly used container -> and : 1
used container and -> for : 1
container and for -> good : 1
and for good -> a : 1
for good a -> vector : 1
good a vector -> is : 1
a vector is -> an : 1
vector is an -> array : 1
an array that -> grows : 1
an array that -> is : 1
array that grows -> dynamically : 1
that grows dynamically -> when : 1
grows dynamically when -> the : 1
dynamically when the -> elements : 1
when the elements -> added : 1
the elements added -> to : 1
elements added to -> a : 1
added to a -> vector : 1
a vector are -> guaranteed : 1
vector are guaranteed -> to : 1
are guaranteed to -> be : 1
are guaranteed to -> not : 1
are guaranteed to -> always : 1
guaranteed to be -> laid : 2
guaranteed to be -> correctly : 1
to be laid -> out : 2
be laid out -> contiguously : 2
laid out contiguously -> in : 3
out contiguously in -> which : 1
out contiguously in -> memory : 1
out contiguously in -> this : 1
contiguously in which -> means : 1
contiguously in which -> is : 1
in which means -> that : 1
in which means -> we : 1
means that you -> can : 1
means that you -> have : 1
means that you -> only : 1
means that you -> cannot : 1
that you can -> access : 1
that you can -> implement : 1
you can access -> any : 1
can access any -> element : 1
can access any -> data : 1
access any element -> in : 1
any element in -> the : 1
the array by -> its : 1
array by its -> index : 1
by its index -> in : 1
its index in -> constant : 1
index in constant -> it : 1
index in constant -> as : 1
in constant it -> also : 1
constant it also -> means : 1
that it provides -> excellent : 1
it provides excellent -> performance : 1
provides excellent performance -> when : 1
excellent performance when -> traversing : 1
performance when traversing -> the : 1
when traversing the -> elements : 1
traversing the elements -> in : 1
the order they -> are : 1
order they are -> laid : 1
they are laid -> thanks : 1
they are laid -> out : 1
are laid thanks -> to : 1
laid thanks to -> the : 1
thanks to the -> spatial : 1
thanks to the -> fact : 1
thanks to the -> improvements : 1
thanks to the -> following : 1
to the spatial -> locality : 1
the spatial locality -> mentioned : 1
spatial locality mentioned -> vector : 1
locality mentioned vector -> has : 1
mentioned vector has -> a : 1
vector has a -> size : 1
has a size -> and : 1
a size and -> a : 1
size and a -> the : 1
size and a -> new : 1
and a the -> size : 1
a the size -> is : 1
the size is -> the : 1
the size is -> less : 1
the size is -> in : 1
is the number -> of : 3
of elements that -> are : 1
of elements that -> the : 1
are currently held -> in : 1
currently held in -> the : 1
held in the -> and : 1
and the capacity -> is : 1
capacity is the -> number : 1
elements that the -> vector : 1
the vector can -> hold : 1
the vector can -> change : 1
vector can hold -> until : 1
can hold until -> it : 1
hold until it -> needs : 1
until it needs -> to : 1
it needs to -> allocate : 1
it needs to -> scan : 1
it needs to -> make : 1
it needs to -> be : 3
it needs to -> add : 1
it needs to -> store : 1
it needs to -> handle : 1
needs to allocate -> more : 1
to allocate more -> elements : 1
allocate more elements -> to : 1
to the end -> of : 2
to the end -> and : 1
the end of -> the : 5
end of the -> vector : 1
end of the -> functions : 1
end of the -> it : 1
end of the -> contiguous : 1
end of the -> we : 1
end of the -> function : 1
the vector using -> as : 1
the vector using -> the : 1
vector using as -> long : 1
using as long -> as : 1
as the size -> is : 1
as the size -> of : 1
size is less -> than : 1
less than the -> when : 1
than the when -> adding : 1
the when adding -> an : 1
an element when -> there : 1
element when there -> is : 1
when there is -> no : 2
when there is -> a : 1
is no room -> for : 1
no room for -> the : 1
room for the -> vector : 1
for the vector -> will : 1
the vector will -> allocate : 1
the vector will -> not : 1
the vector will -> reallocate : 1
vector will allocate -> a : 1
will allocate a -> new : 1
allocate a new -> internal : 1
allocate a new -> object : 1
a new internal -> buffer : 1
new internal buffer -> and : 1
internal buffer and -> then : 1
buffer and then -> move : 1
the new the -> capacity : 1
the new the -> following : 1
new the capacity -> grows : 1
the capacity grows -> in : 1
capacity grows in -> a : 1
grows in a -> way : 1
way that resizing -> the : 1
that resizing the -> buffer : 1
resizing the buffer -> happens : 1
the buffer happens -> seldom : 1
buffer happens seldom -> enough : 1
happens seldom enough -> to : 1
seldom enough to -> make : 1
enough to make -> an : 1
to make an -> amortized : 1
make an amortized -> constant : 1
an amortized constant -> time : 1
constant time as -> we : 1
time as we -> discussed : 1
as we discussed -> in : 1
we discussed in -> vector : 1
discussed in vector -> template : 1
in vector template -> instance : 1
vector template instance -> of : 1
template instance of -> type : 1
instance of type -> will : 1
of type will -> by : 1
type will by -> when : 1
will by when -> the : 1
by when the -> vector : 1
when the vector -> needs : 1
needs to rearrange -> objects : 1
to rearrange objects -> as : 1
rearrange objects as -> a : 1
objects as a -> result : 1
as a result -> of : 1
result of an -> the : 1
an the values -> are : 1
the values are -> copy : 1
values are copy -> constructed : 1
are copy constructed -> or : 1
copy constructed or -> objects : 1
constructed or objects -> are : 1
or objects are -> moved : 1
objects are moved -> if : 1
are moved if -> they : 1
moved if they -> have : 1
have a move -> the : 1
a move the -> objects : 1
move the objects -> will : 1
the objects will -> be : 1
objects will be -> copy : 1
will be copy -> constructed : 1
be copy constructed -> in : 1
copy constructed in -> order : 1
constructed in order -> to : 1
order to guarantee -> strong : 1
order to guarantee -> sequential : 1
to guarantee strong -> exception : 1
guarantee strong exception -> will : 1
strong exception will -> be : 1
exception will be -> noexcept : 1
exception will be -> thrown : 1
will be noexcept -> will : 1
be noexcept will -> be : 1
noexcept will be -> uses : 1
will be uses -> in : 1
be uses in -> order : 1
uses in order -> to : 1
determine whether the -> object : 1
determine whether the -> program : 1
the object should -> be : 1
object should be -> copied : 1
should be copied -> or : 1
be copied or -> the : 1
copied or the -> type : 1
or the type -> support : 1
the type support -> library : 1
type support library -> can : 1
support library can -> help : 1
library can help -> you : 1
can help you -> verify : 1
help you verify -> at : 1
you verify at -> compile : 1
verify at compile -> time : 1
at compile time -> that : 2
at compile time -> if : 2
at compile time -> called : 1
at compile time -> instead : 1
compile time that -> your : 1
compile time that -> we : 1
time that your -> classes : 1
that your classes -> are : 1
your classes are -> guaranteed : 1
classes are guaranteed -> to : 1
guaranteed to not -> throw : 1
to not throw -> when : 1
not throw when -> being : 1
throw when being -> you : 1
when being you -> are : 1
being you are -> adding : 1
you are adding -> newly : 1
are adding newly -> created : 1
adding newly created -> objects : 1
newly created objects -> to : 1
created objects to -> the : 1
objects to the -> you : 1
the you can -> take : 1
the you can -> instead : 1
the you can -> still : 1
the you can -> look : 1
you can take -> advantage : 1
can take advantage -> of : 1
take advantage of -> the : 4
take advantage of -> simd : 1
take advantage of -> warm : 1
advantage of the -> which : 1
advantage of the -> fact : 1
advantage of the -> gpu : 1
advantage of the -> heavy : 1
of the which -> will : 1
of the which -> is : 1
the which will -> create : 1
which will create -> the : 1
will create the -> object : 1
create the object -> in : 1
the object in -> place : 1
object in place -> for : 1
in place for -> instead : 1
place for instead -> of : 1
for instead of -> creating : 1
instead of creating -> an : 1
of creating an -> object : 1
creating an object -> and : 1
creating an object -> on : 1
an object and -> then : 1
object and then -> it : 1
and then it -> to : 1
then it to -> the : 1
it to the -> vector : 1
it to the -> programmer : 1
it to the -> int : 1
it to the -> we : 1
to the vector -> using : 1
to the vector -> when : 1
vector using the -> capacity : 1
using the capacity -> of : 1
vector can change -> in : 1
can change in -> the : 1
change in the -> following : 1
the following adding -> an : 1
following adding an -> element : 1
element to the -> vector : 1
element to the -> hash : 1
element to the -> it : 1
element to the -> queue : 1
the vector when -> the : 1
vector when the -> calling : 1
when the calling -> calling : 1
the calling calling -> than : 1
calling calling than -> the : 1
calling than the -> vector : 1
than the vector -> will : 1
vector will not -> change : 1
will not change -> the : 1
change the and -> hence : 1
the and hence -> not : 1
the and hence -> also : 1
the and hence -> the : 1
and hence not -> allocate : 1
hence not allocate -> any : 1
not allocate any -> new : 1
not allocate any -> dynamic : 1
allocate any new -> memory : 1
any new memory -> on : 1
new memory on -> the : 1
memory on the -> free : 2
memory on the -> most : 1
memory on the -> local : 1
the free which -> makes : 1
the free which -> is : 1
free which makes -> the : 1
which makes the -> vector : 1
makes the vector -> usable : 1
the vector usable -> even : 1
vector usable even -> in : 1
usable even in -> an : 1
even in an -> alternative : 1
in an alternative -> to : 1
an alternative to -> the : 1
alternative to the -> dynamically : 1
alternative to the -> this : 1
to the dynamically -> sized : 1
to the dynamically -> allocated : 1
the dynamically sized -> stl : 1
dynamically sized stl -> also : 1
sized stl also -> provides : 1
stl also provides -> a : 1
also provides a -> fixed : 1
provides a fixed -> size : 1
fixed size version -> named : 1
size version named -> that : 1
version named that -> manages : 1
named that manages -> its : 1
that manages its -> elements : 1
manages its elements -> by : 1
its elements by -> using : 1
elements by using -> the : 1
using the stack -> as : 1
using the stack -> see : 1
the stack as -> opposed : 1
the stack as -> much : 1
stack as opposed -> to : 1
to the free -> the : 1
the free the -> size : 1
free the size -> of : 1
the array is -> a : 2
the array is -> small : 1
array is a -> template : 1
array is a -> sequence : 1
is a template -> argument : 1
is a template -> class : 1
a template argument -> specified : 1
template argument specified -> at : 1
argument specified at -> compile : 1
specified at compile -> which : 1
at compile which -> means : 1
compile which means -> that : 1
that the size -> and : 1
the size and -> type : 1
size and type -> elements : 1
and type elements -> become : 1
type elements become -> a : 1
elements become a -> part : 1
become a part -> of : 1
a part of -> the : 3
a part of -> one : 1
of the concrete -> a : 1
the concrete a -> auto : 1
concrete a auto -> b : 1
auto b this -> and : 1
b this and -> are : 1
this and are -> not : 1
and are not -> the : 1
not the same -> which : 1
not the same -> as : 1
not the same -> and : 1
the same which -> means : 2
same which means -> that : 1
same which means -> finding : 1
specify the size -> when : 1
the size when -> using : 1
size when using -> the : 1
when using the -> type : 1
when using the -> array : 1
when using the -> we : 1
when using the -> you : 1
using the type -> as : 1
using the type -> which : 1
the type as -> a : 1
type as a -> function : 1
type as a -> boolean : 1
a function does -> not : 2
does not f -> requires : 1
not f requires -> an : 1
f requires an -> int : 1
requires an int -> array : 1
an int array -> of : 1
int array of -> size : 1
array of size -> might : 1
of size might -> seem : 1
size might seem -> a : 1
might seem a -> bit : 1
seem a bit -> tedious : 1
seem a bit -> but : 1
a bit tedious -> at : 1
bit tedious at -> but : 1
tedious at but -> this : 1
at but this -> is : 1
but this is -> in : 1
this is in -> fact : 1
is in fact -> the : 1
is in fact -> a : 1
in fact the -> big : 1
fact the big -> advantage : 1
the big advantage -> over : 1
big advantage over -> the : 1
advantage over the -> array : 1
over the array -> type : 1
the array type -> that : 1
array type that -> lose : 1
type that lose -> the : 1
that lose the -> size : 1
lose the size -> information : 1
the size information -> when : 1
size information when -> passed : 1
information when passed -> to : 1
when passed to -> a : 1
passed to a -> function : 1
to a function -> since : 1
a function since -> it : 1
function since it -> automatically : 1
since it automatically -> converts : 1
it automatically converts -> to : 1
automatically converts to -> a : 1
converts to a -> pointer : 1
to a pointer -> to : 1
pointer to the -> first : 1
pointer to the -> next : 1
pointer to the -> authentication : 2
pointer to the -> dynamically : 1
pointer to the -> memory : 1
pointer to the -> is : 2
first element of -> the : 2
element of the -> input : 1
element of the -> removed : 1
element of the -> container : 1
element of the -> queue : 1
element of the -> solution : 1
the input looks -> like : 1
input looks like -> an : 1
looks like an -> but : 1
looks like an -> infix : 1
like an but -> is : 1
an but is -> in : 1
but is in -> fact : 1
in fact a -> auto : 1
fact a auto -> int : 1
a auto int -> int : 1
a auto int -> auto : 3
auto int int -> int : 1
auto int int -> return : 1
int int int -> but : 1
int int int -> using : 2
int int but -> you : 1
int but you -> need : 1
but you need -> to : 1
need to add -> elements : 1
to add elements -> to : 2
add elements to -> the : 2
the end and -> the : 1
the end and -> so : 1
end and the -> beginning : 1
and the beginning -> of : 1
beginning of a -> if : 1
of a if -> you : 1
using a vector -> and : 1
a vector and -> need : 1
vector and need -> to : 1
and need to -> speed : 1
and need to -> run : 1
and need to -> be : 1
need to speed -> up : 1
to speed up -> the : 3
speed up the -> inserts : 1
speed up the -> functions : 1
speed up the -> access : 1
up the inserts -> at : 1
the inserts at -> the : 1
inserts at the -> you : 1
at the you -> can : 1
you can instead -> use : 1
can instead use -> short : 1
can instead use -> overloads : 1
instead use short -> for : 1
use short for -> is : 1
short for is -> usually : 1
for is usually -> implemented : 1
is usually implemented -> as : 1
usually implemented as -> a : 1
implemented as a -> collection : 1
implemented as a -> number : 1
as a collection -> of : 1
collection of which -> makes : 1
of which makes -> it : 1
possible to access -> elements : 1
to access elements -> by : 1
access elements by -> their : 1
elements by their -> index : 1
by their index -> in : 1
their index in -> constant : 1
their index in -> a : 1
in constant as -> can : 1
constant as can -> be : 1
as can be -> seen : 1
as can be -> the : 1
the following all -> elements : 1
following all elements -> are : 1
all elements are -> not : 1
elements are not -> stored : 1
are not stored -> contiguously : 1
not stored contiguously -> in : 1
stored contiguously in -> which : 1
stored contiguously in -> a : 1
in which is -> the : 1
which is the -> case : 1
which is the -> equivalent : 1
case with vector -> and : 1
with vector and -> and : 1
vector and and -> is : 1
and and is -> a : 1
and is a -> doubly : 1
and is a -> can : 1
is a doubly -> linked : 1
a doubly linked -> meaning : 1
a doubly linked -> list : 1
doubly linked meaning -> that : 1
linked meaning that -> each : 1
meaning that each -> element : 1
that each element -> has : 1
that each element -> is : 1
each element has -> one : 1
element has one -> link : 1
has one link -> to : 1
one link to -> the : 1
one link to -> its : 1
to the next -> element : 2
to the next -> and : 1
to the next -> is : 1
to the next -> last : 1
to the next -> position : 1
the next element -> and : 2
next element and -> one : 1
next element and -> dereferenced : 1
element and one -> link : 1
and one link -> to : 1
link to its -> previous : 1
to its previous -> this : 1
its previous this -> makes : 1
previous this makes -> it : 1
this makes it -> possible : 3
possible to iterate -> over : 1
possible to iterate -> a : 1
iterate over the -> list : 1
iterate over the -> as : 1
iterate over the -> vector : 1
over the list -> both : 1
the list both -> backwards : 1
list both backwards -> and : 1
both backwards and -> there : 1
backwards and there -> is : 1
and there is -> also : 1
and there is -> another : 1
and there is -> a : 1
and there is -> no : 1
also a singly -> linked : 1
a singly linked -> list : 1
singly linked list -> the : 1
linked list the -> reason : 1
list the reason -> why : 1
the reason why -> you : 1
the reason why -> it : 1
the reason why -> the : 1
reason why you -> always : 1
why you always -> choose : 1
you always choose -> the : 1
always choose the -> doubly : 1
choose the doubly -> linked : 1
the doubly linked -> list : 1
doubly linked list -> over : 1
doubly linked list -> with : 1
linked list over -> is : 1
list over is -> because : 1
over is because -> of : 1
is because of -> the : 1
because of the -> memory : 1
because of the -> way : 2
because of the -> multiple : 1
because of the -> by : 1
because of the -> acquire : 1
because of the -> limited : 1
the memory occupied -> by : 1
memory occupied by -> the : 1
occupied by the -> back : 1
occupied by the -> extracted : 1
by the back -> pointers : 1
the back pointers -> in : 1
back pointers in -> the : 1
pointers in the -> double : 1
in the double -> linked : 1
the double linked -> if : 1
double linked if -> you : 1
linked if you -> need : 1
if you need -> to : 1
if you need -> more : 1
need to traverse -> the : 1
to traverse the -> list : 1
traverse the list -> use : 1
the list use -> another : 1
list use another -> interesting : 1
use another interesting -> feature : 1
another interesting feature -> of : 1
interesting feature of -> the : 1
feature of the -> forward : 1
of the forward -> list : 1
the forward list -> is : 1
forward list is -> that : 1
list is that -> optimized : 1
is that optimized -> for : 1
that optimized for -> very : 1
optimized for very -> short : 1
for very short -> when : 1
very short when -> the : 1
short when the -> list : 1
when the list -> is : 1
the list is -> it : 1
list is it -> only : 1
is it only -> occupies : 1
it only occupies -> one : 1
only occupies one -> which : 1
occupies one which -> makes : 1
one which makes -> it : 1
makes it a -> good : 1
it a good -> data : 1
a good data -> structure : 1
good data structure -> for : 1
data structure for -> sparse : 1
structure for sparse -> that : 1
for sparse that -> even : 1
sparse that even -> if : 1
that even if -> the : 1
even if the -> elements : 1
even if the -> returned : 1
if the elements -> are : 1
the elements are -> ordered : 2
the elements are -> added : 1
the elements are -> distributed : 1
the elements are -> never : 1
elements are ordered -> in : 1
elements are ordered -> by : 1
are ordered in -> a : 1
ordered in a -> they : 1
in a they -> are : 1
a they are -> laid : 1
contiguously in memory -> as : 1
contiguously in memory -> have : 1
in memory as -> the : 1
the vector and -> array : 1
vector and array -> which : 1
and array which -> means : 1
array which means -> that : 1
means that iterating -> a : 1
that iterating a -> linked : 1
iterating a linked -> list : 1
a linked list -> will : 1
a linked list -> and : 1
linked list will -> most : 1
list will most -> likely : 1
will most likely -> generate : 1
will most likely -> be : 2
will most likely -> the : 1
will most likely -> occur : 1
most likely generate -> a : 1
likely generate a -> lot : 1
generate a lot -> more : 1
a lot more -> cache : 1
lot more cache -> misses : 1
more cache misses -> compared : 1
cache misses compared -> to : 1
misses compared to -> the : 1
the a doubly -> linked : 1
linked list with -> pointers : 2
list with pointers -> to : 2
with pointers to -> the : 2
pointers to the -> next : 2
pointers to the -> and : 1
the next and -> previous : 1
next and previous -> a : 1
and previous a -> single : 1
previous a single -> linked : 1
a single linked -> list : 1
single linked list -> with : 1
the next is -> more : 1
next is more -> memory : 1
is more memory -> efficient : 1
more memory efficient -> since : 1
memory efficient since -> it : 1
efficient since it -> only : 1
since it only -> has : 1
it only has -> one : 1
only has one -> pointer : 1
has one pointer -> to : 1
one pointer to -> the : 1
the next last -> sequence : 1
next last sequence -> container : 1
last sequence container -> that : 1
sequence container that -> we : 1
sequence container that -> supports : 1
container that we -> will : 1
that we will -> cover : 1
that we will -> get : 1
that we will -> implement : 1
that we will -> utilize : 1
that we will -> opencl : 1
will cover is -> the : 1
cover is the -> the : 1
is the the -> is : 1
is the the -> code : 1
is the the -> member : 1
the is a -> for : 1
the is a -> basic : 1
is a for -> was : 1
a for was -> not : 1
for was not -> guaranteed : 1
was not guaranteed -> to : 1
not guaranteed to -> be : 1
contiguously in this -> has : 1
in this has -> now : 1
this has now -> changed : 1
has now changed -> since : 1
now changed since -> which : 1
changed since which -> makes : 1
since which makes -> it : 1
pass the string -> to : 1
the string to -> apis : 1
the string to -> see : 1
the string to -> hold : 1
string to apis -> that : 1
to apis that -> require : 1
apis that require -> an : 1
that require an -> array : 1
require an array -> of : 1
array of for -> the : 1
of for the -> following : 1
for the following -> code : 2
following code reads -> an : 1
code reads an -> entire : 1
reads an entire -> file : 1
an entire file -> into : 1
entire file into -> a : 1
file into a -> in : 1
into a in -> if : 1
into a in -> the : 1
a in if -> auto : 1
in if auto -> size : 1
if auto size -> auto : 1
auto size auto -> content : 1
size auto content -> now : 1
auto content now -> contains : 1
content now contains -> the : 1
now contains the -> entire : 1
contains the entire -> implementations : 1
the entire implementations -> of : 1
entire implementations of -> utilize : 1
implementations of utilize -> something : 1
of utilize something -> called : 1
utilize something called -> which : 1
something called which -> means : 1
allocate any dynamic -> memory : 1
any dynamic memory -> if : 1
dynamic memory if -> the : 1
memory if the -> size : 1
of the string -> is : 1
of the string -> class : 1
of the string -> to : 1
of the string -> can : 1
the string is -> we : 1
the string is -> in : 1
string is we -> will : 1
is we will -> talk : 1
is we will -> not : 1
will talk more -> about : 2
talk more about -> optimization : 1
talk more about -> the : 1
talk more about -> critical : 1
more about optimization -> later : 1
about optimization later -> in : 1
optimization later in -> the : 1
later in the -> associative : 1
later in the -> but : 1
later in the -> following : 1
in the associative -> containers : 1
the associative containers -> place : 1
the associative containers -> have : 1
the associative containers -> since : 1
associative containers place -> their : 1
containers place their -> elements : 1
place their elements -> based : 1
their elements based -> on : 1
elements based on -> the : 1
based on the -> element : 1
based on the -> more : 1
based on the -> number : 2
on the element -> for : 1
the element for -> not : 1
element for not -> possible : 1
for not possible -> to : 1
possible to add -> an : 1
to add an -> element : 1
add an element -> at : 1
add an element -> of : 1
an element at -> the : 1
element at the -> back : 1
element at the -> current : 1
at the back -> or : 1
the back or -> front : 1
back or front -> in : 1
or front in -> an : 1
front in an -> associative : 1
in an associative -> the : 1
an associative the -> elements : 1
associative the elements -> are : 1
elements are added -> in : 1
are added in -> a : 1
added in a -> way : 1
way that makes -> it : 1
possible to find -> the : 1
find the element -> without : 1
the element without -> the : 1
element without the -> need : 1
without the need -> to : 1
without the need -> for : 1
the need to -> scan : 1
need to scan -> the : 1
to scan the -> entire : 1
to scan the -> elements : 1
scan the entire -> the : 1
the entire the -> associative : 1
the entire the -> compiler : 1
entire the associative -> containers : 1
associative containers have -> some : 1
containers have some -> requirements : 1
have some requirements -> for : 1
some requirements for -> the : 1
requirements for the -> objects : 1
for the objects -> we : 1
the objects we -> want : 1
the objects we -> use : 1
objects we want -> to : 1
want to store -> in : 1
want to store -> the : 2
to store in -> a : 1
store in a -> we : 1
a we will -> look : 1
a we will -> have : 1
a we will -> need : 1
at these requirements -> are : 1
these requirements are -> two : 1
requirements are two -> main : 1
categories of associative -> associative : 1
of associative associative -> these : 1
associative associative these -> containers : 1
associative these containers -> are : 2
these containers are -> based : 2
containers are based -> on : 2
based on these -> containers : 1
on these containers -> use : 1
these containers use -> a : 1
containers use a -> tree : 1
use a tree -> for : 1
a tree for -> storing : 1
tree for storing -> their : 1
for storing their -> they : 2
storing their they -> require : 2
their they require -> that : 2
they require that -> the : 2
require that the -> elements : 2
are ordered by -> the : 1
ordered by the -> less : 1
by the less -> than : 1
the less than -> operator : 2
the less than -> and : 1
less than operator -> the : 1
less than operator -> of : 1
than operator the -> functions : 1
operator the functions -> for : 1
the functions for -> and : 2
functions for and -> finding : 2
for and finding -> elements : 2
and finding elements -> are : 2
finding elements are -> all : 2
elements are all -> in : 2
are all in -> the : 2
all in the -> the : 1
all in the -> hash : 1
the the containers -> are : 1
the containers are -> and : 2
are and associative -> these : 1
and associative these -> containers : 1
based on hash -> these : 1
on hash these -> containers : 1
hash these containers -> uses : 1
these containers uses -> a : 1
containers uses a -> hash : 1
uses a hash -> table : 1
a hash table -> for : 1
a hash table -> can : 1
a hash table -> keeps : 1
a hash table -> with : 1
hash table for -> storing : 1
table for storing -> their : 1
the elements with -> the : 1
elements with the -> equality : 1
elements with the -> transform : 1
elements with the -> inexpensive : 2
elements with the -> is : 1
with the equality -> operator : 1
the equality operator -> and : 1
equality operator and -> that : 1
operator and that -> there : 1
and that there -> is : 1
is a way -> to : 1
a way to -> compute : 1
a way to -> do : 1
way to compute -> a : 1
to compute a -> hash : 1
compute a hash -> value : 1
a hash value -> based : 1
a hash value -> for : 1
hash value based -> on : 1
value based on -> the : 1
on the more -> on : 1
the more on -> that : 1
more on that -> the : 1
more on that -> to : 1
on that the -> functions : 1
on that the -> can : 1
on that the -> number : 1
that the functions -> for : 1
in the hash -> the : 1
in the hash -> function : 1
the hash the -> containers : 1
the hash the -> string : 1
the hash the -> resulting : 1
hash the containers -> are : 1
are and sets -> and : 1
sets and cdpalign -> ordered : 1
and cdpalign ordered -> associative : 1
cdpalign ordered associative -> containers : 1
ordered associative containers -> guarantee : 1
associative containers guarantee -> that : 1
containers guarantee that -> and : 1
guarantee that and -> search : 1
that and search -> can : 1
and search can -> be : 1
search can be -> done : 1
can be done -> in : 2
be done in -> logarithmic : 1
be done in -> different : 1
be done in -> isolation : 1
done in logarithmic -> how : 1
in logarithmic how -> that : 1
logarithmic how that -> is : 1
how that is -> achieved : 1
that is achieved -> is : 1
is achieved is -> up : 1
achieved is up -> to : 1
is up to -> the : 2
up to the -> implementation : 1
up to the -> programmer : 1
up to the -> alignment : 1
up to the -> caller : 1
to the implementation -> of : 1
the standard the -> implementations : 1
the standard the -> ranges : 1
the standard the -> custom : 1
standard the implementations -> we : 1
the implementations we -> know : 1
implementations we know -> about : 1
we know about -> use : 1
we know about -> the : 1
know about use -> some : 1
about use some -> kind : 1
use some kind -> of : 1
some kind of -> binary : 1
kind of binary -> search : 1
of binary search -> the : 1
binary search the -> fact : 1
search the fact -> that : 1
that the tree -> stays : 1
the tree stays -> approximately : 1
tree stays approximately -> balanced : 1
stays approximately balanced -> is : 1
approximately balanced is -> necessary : 1
balanced is necessary -> for : 1
is necessary for -> controlling : 1
necessary for controlling -> the : 1
for controlling the -> height : 1
controlling the height -> of : 1
the height of -> the : 1
the height of -> a : 1
height of the -> and : 1
height of the -> tree : 1
and hence also -> the : 1
hence also the -> worst : 1
also the worst -> case : 1
worst case running -> time : 1
case running time -> of : 1
time of accessing -> the : 1
of accessing the -> there : 1
accessing the there -> is : 1
is no need -> for : 1
is no need -> to : 2
no need for -> the : 1
need for the -> tree : 1
for the tree -> to : 1
the tree to -> so : 1
tree to so -> typically : 1
to so typically -> a : 1
so typically a -> tree : 1
typically a tree -> will : 1
a tree will -> allocate : 1
tree will allocate -> memory : 1
will allocate memory -> on : 1
will allocate memory -> from : 1
allocate memory on -> the : 1
the free store -> each : 1
the free store -> and : 1
free store each -> time : 1
store each time -> an : 1
each time an -> element : 1
time an element -> is : 1
an element is -> inserted : 1
an element is -> instead : 1
element is inserted -> and : 1
is inserted and -> also : 1
inserted and also -> free : 1
and also free -> up : 1
also free up -> memory : 1
free up memory -> whenever : 1
up memory whenever -> elements : 1
memory whenever elements -> are : 1
whenever elements are -> check : 1
elements are check -> out : 1
are check out -> the : 1
check out the -> following : 1
out the following -> which : 1
the following which -> shows : 1
the following which -> will : 1
the following which -> compares : 1
following which shows -> that : 1
which shows that -> the : 1
shows that the -> height : 1
shows that the -> memory : 2
that the height -> of : 1
height of a -> balanced : 1
of a balanced -> tree : 1
a balanced tree -> is : 1
balanced tree is -> cdpaligncenter : 1
tree is cdpaligncenter -> cdpaligncenter : 1
is cdpaligncenter cdpaligncenter -> height : 1
cdpaligncenter cdpaligncenter height -> of : 1
cdpaligncenter height of -> the : 1
of the tree -> is : 1
the tree is -> if : 1
tree is if -> sets : 1
is if sets -> and : 1
if sets and -> unordered : 1
sets and unordered -> versions : 1
and unordered versions -> of : 1
unordered versions of -> sets : 1
versions of sets -> and : 1
of sets and -> maps : 1
sets and maps -> offer : 1
and maps offer -> a : 1
maps offer a -> alternative : 1
offer a alternative -> to : 1
a alternative to -> the : 1
to the this -> data : 1
to the this -> is : 1
the this data -> structure : 1
this data structure -> is : 1
data structure is -> in : 1
structure is in -> general : 1
is in general -> referred : 1
in general referred -> to : 1
general referred to -> as : 1
to as hash -> in : 1
as hash in -> hash : 1
hash in hash -> tables : 1
in hash tables -> offer : 1
hash tables offer -> and : 1
tables offer and -> delete : 1
offer and delete -> which : 1
and delete which -> of : 1
delete which of -> better : 1
which of better -> than : 1
of better than -> the : 1
better than the -> versions : 1
than the versions -> that : 1
the versions that -> operate : 1
versions that operate -> in : 1
that operate in -> in : 1
operate in in -> practice : 1
in in practice -> the : 1
in practice the -> difference : 1
practice the difference -> might : 1
the difference might -> not : 1
difference might not -> be : 1
might not be -> so : 1
might not be -> obvious : 2
might not be -> therefore : 1
not be so -> especially : 1
be so especially -> if : 1
so especially if -> you : 1
especially if you -> are : 1
you are not -> storing : 1
you are not -> used : 1
you are not -> already : 1
are not storing -> a : 1
not storing a -> very : 1
storing a very -> large : 1
a very large -> amount : 1
very large amount -> of : 1
large amount of -> elements : 1
amount of elements -> in : 1
of elements in -> your : 1
of elements in -> each : 1
elements in your -> see : 1
in your see -> how : 1
your see how -> a : 1
see how a -> hash : 1
how a hash -> table : 1
hash table can -> offer : 1
hash table can -> store : 1
table can offer -> a : 1
can offer a -> hash : 1
offer a hash -> table : 1
hash table keeps -> its : 1
table keeps its -> elements : 1
keeps its elements -> in : 1
its elements in -> some : 1
elements in some -> sort : 1
in some sort -> of : 1
sort of when -> adding : 1
of when adding -> an : 1
to the hash -> an : 1
to the hash -> the : 1
the hash an -> integer : 1
hash an integer -> is : 1
an integer is -> computed : 1
integer is computed -> for : 1
is computed for -> the : 1
computed for the -> element : 1
for the element -> using : 1
for the element -> we : 1
for the element -> at : 1
the element using -> a : 1
element using a -> hash : 1
using a hash -> the : 1
a hash the -> integer : 1
hash the integer -> is : 1
the integer is -> usually : 1
the integer is -> overwritten : 1
integer is usually -> called : 1
is usually called -> the : 1
usually called the -> of : 1
called the of -> the : 1
the of the -> the : 1
the the hash -> value : 1
the hash value -> is : 1
the hash value -> for : 1
hash value is -> then : 1
value is then -> limited : 1
value is then -> compiled : 1
is then limited -> to : 1
then limited to -> the : 1
limited to the -> size : 1
limited to the -> same : 1
limited to the -> chunk : 1
the array using -> the : 1
array using the -> modulo : 1
using the modulo -> for : 1
the modulo for -> so : 1
modulo for so -> that : 1
for so that -> the : 1
that the new -> limited : 1
the new limited -> value : 1
new limited value -> can : 1
limited value can -> be : 1
value can be -> used : 1
value can be -> obtained : 1
be used as -> an : 1
be used as -> a : 1
used as an -> index : 1
as an index -> in : 1
an index in -> the : 1
index in the -> once : 1
index in the -> user : 1
index in the -> level : 1
in the once -> the : 1
the once the -> index : 1
once the index -> is : 1
the index is -> the : 1
the index is -> advantageous : 1
the index is -> equal : 1
index is the -> hash : 1
is the hash -> table : 1
the hash table -> can : 1
table can store -> the : 1
can store the -> element : 1
store the element -> in : 1
array at that -> the : 1
at that the -> lookup : 1
that the lookup -> of : 1
the lookup of -> an : 1
lookup of an -> element : 1
of an element -> works : 1
an element works -> in : 1
element works in -> a : 1
works in a -> similar : 1
works in a -> somewhat : 1
in a similar -> manner : 1
in a similar -> here : 1
in a similar -> way : 1
a similar manner -> by : 1
similar manner by -> first : 1
manner by first -> computing : 1
by first computing -> a : 1
first computing a -> hash : 1
computing a hash -> value : 1
hash value for -> the : 2
hash value for -> two : 1
value for the -> element : 1
value for the -> string : 1
the element we -> are : 1
element we are -> looking : 1
we are looking -> for : 3
are looking for -> and : 1
are looking for -> with : 1
are looking for -> while : 1
for and then -> accessing : 1
and then accessing -> the : 1
then accessing the -> from : 1
accessing the from -> computing : 1
the from computing -> the : 1
from computing the -> hash : 1
computing the hash -> this : 1
computing the hash -> since : 1
the hash this -> technique : 1
the hash this -> overload : 1
hash this technique -> seems : 1
this technique seems -> easy : 1
technique seems easy -> and : 1
seems easy and -> this : 1
easy and this -> is : 1
and this is -> just : 1
and this is -> probably : 1
and this is -> one : 1
this is just -> half : 1
this is just -> what : 1
this is just -> but : 1
this is just -> an : 1
this is just -> one : 1
is just half -> of : 1
just half of -> the : 1
of the what -> if : 1
the what if -> two : 1
what if two -> different : 1
if two different -> elements : 1
two different elements -> generate : 1
different elements generate -> the : 1
elements generate the -> same : 1
generate the same -> either : 1
generate the same -> hash : 2
the same either -> because : 1
same either because -> they : 1
either because they -> produced : 1
because they produced -> the : 1
they produced the -> same : 1
produced the same -> hash : 1
the same hash -> or : 1
the same hash -> value : 3
the same hash -> perfectly : 1
the same hash -> all : 1
same hash or -> because : 1
hash or because -> two : 1
or because two -> different : 1
because two different -> hash : 1
two different hash -> values : 1
different hash values -> are : 1
hash values are -> being : 1
are being limited -> to : 1
being limited to -> the : 1
the same when -> two : 1
same when two -> elements : 1
when two elements -> end : 1
two elements end -> up : 1
elements end up -> at : 1
at the same -> we : 2
at the same -> instead : 1
at the same -> this : 1
at the same -> index : 1
at the same -> location : 1
at the same -> concurrent : 1
at the same -> a : 2
at the same -> time : 3
at the same -> here : 1
at the same -> are : 1
the same we -> call : 1
the same we -> can : 1
the same we -> just : 1
the same we -> need : 1
same we call -> that : 1
we call that -> a : 1
call that a -> hash : 1
that a hash -> this : 1
a hash this -> is : 1
hash this is -> not : 1
is not just -> an : 1
not just an -> edge : 1
just an edge -> this : 1
an edge this -> will : 1
edge this will -> happen : 1
this will happen -> a : 1
will happen a -> lot : 1
happen a lot -> even : 1
a lot even -> if : 1
lot even if -> we : 1
using a good -> hash : 1
a good hash -> especially : 1
good hash especially -> if : 1
hash especially if -> the : 1
especially if the -> array : 1
if the array -> is : 1
array is small -> compared : 1
is small compared -> to : 1
small compared to -> the : 1
to the number -> of : 3
of elements we -> are : 1
elements we are -> there : 1
we are there -> are : 1
are there are -> various : 1
there are various -> ways : 1
are various ways -> of : 1
various ways of -> dealing : 1
ways of dealing -> with : 1
of dealing with -> hash : 1
dealing with hash -> we : 1
with hash we -> will : 1
hash we will -> focus : 1
we will focus -> on : 3
on the one -> this : 1
the one this -> is : 1
one this is -> being : 1
this is being -> used : 1
is being used -> in : 1
is being used -> by : 2
used in the -> standard : 1
used in the -> equal : 1
used in the -> equals : 1
used in the -> and : 1
used in the -> examples : 1
used in the -> the : 1
in the standard -> which : 1
in the standard -> yet : 1
in the standard -> library : 3
the standard which -> is : 1
standard which is -> called : 1
which is called -> separate : 1
is called separate -> chaining : 1
called separate chaining -> solves : 1
separate chaining solves -> the : 1
chaining solves the -> problem : 1
solves the problem -> of : 1
the problem of -> two : 1
problem of two -> unequal : 1
of two unequal -> elements : 1
two unequal elements -> ending : 1
unequal elements ending -> up : 1
elements ending up -> at : 1
ending up at -> the : 1
the same instead -> of : 1
same instead of -> just : 1
of just storing -> the : 1
just storing the -> elements : 1
storing the elements -> directly : 1
the elements directly -> in : 1
elements directly in -> the : 1
directly in the -> the : 1
directly in the -> we : 1
the the array -> is : 1
is a sequence -> of : 1
sequence of each -> bucket : 1
of each bucket -> can : 1
each bucket can -> contain : 1
bucket can contain -> multiple : 1
can contain multiple -> that : 1
contain multiple that -> all : 1
multiple that all -> elements : 1
that all elements -> that : 1
all elements that -> are : 1
that are hashed -> to : 1
are hashed to -> the : 1
hashed to the -> same : 1
the same each -> bucket : 1
the same each -> key : 1
same each bucket -> is : 1
each bucket is -> also : 1
bucket is also -> some : 1
is also some -> sort : 1
also some sort -> of : 1
sort of the -> exact : 1
of the exact -> data : 1
the exact data -> structure : 1
exact data structure -> used : 1
data structure used -> for : 1
structure used for -> the : 1
for the buckets -> is : 1
the buckets is -> not : 1
buckets is not -> but : 1
is not but -> can : 1
not but can -> vary : 1
but can vary -> for : 1
can vary for -> different : 1
vary for different -> we : 1
for different we -> can : 1
different we can -> think : 1
we can think -> of : 1
can think of -> it : 1
think of it -> as : 1
of it as -> a : 1
as a linked -> list : 1
linked list and -> assume : 1
list and assume -> that : 1
and assume that -> finding : 1
assume that finding -> an : 1
that finding an -> element : 1
finding an element -> in : 1
finding an element -> is : 1
element in a -> specific : 1
in a specific -> bucket : 1
a specific bucket -> is : 1
specific bucket is -> slow : 1
bucket is slow -> since : 1
is slow since -> it : 1
slow since it -> needs : 1
since it needs -> to : 2
needs to scan -> the : 1
scan the elements -> in : 1
in the buckets -> following : 1
the buckets following -> image : 1
buckets following image -> shows : 1
shows a hash -> table : 1
hash table with -> eight : 1
table with eight -> the : 1
with eight the -> elements : 1
eight the elements -> have : 1
the elements have -> landed : 1
the elements have -> been : 1
elements have landed -> in : 1
have landed in -> three : 1
landed in three -> separate : 1
in three separate -> the : 1
three separate the -> bucket : 1
separate the bucket -> with : 1
the bucket with -> index : 3
bucket with index -> contains : 3
with index contains -> four : 1
with index contains -> two : 1
with index contains -> only : 1
index contains four -> the : 1
contains four the -> bucket : 1
four the bucket -> with : 1
index contains two -> and : 1
contains two and -> the : 1
two and the -> bucket : 1
and the bucket -> with : 1
index contains only -> one : 1
contains only one -> the : 1
only one the -> other : 1
one the other -> buckets : 1
the other buckets -> are : 1
other buckets are -> cdpaligncenter : 1
buckets are cdpaligncenter -> cdpaligncenter : 1
are cdpaligncenter cdpaligncenter -> bucket : 1
cdpaligncenter cdpaligncenter bucket -> contains : 1
cdpaligncenter bucket contains -> or : 1
bucket contains or -> more : 1
contains or more -> and : 1
or more and -> hash : 1
more and hash -> which : 1
and hash which -> can : 1
hash which can -> be : 1
be computed in -> constant : 1
computed in constant -> time : 1
constant time with -> respect : 1
time with respect -> to : 1
with respect to -> the : 1
respect to the -> size : 1
of the determines -> in : 1
the determines in -> which : 1
determines in which -> bucket : 1
in which bucket -> an : 1
which bucket an -> element : 1
bucket an element -> will : 1
an element will -> be : 1
element will be -> since : 1
will be since -> possible : 1
be since possible -> that : 1
since possible that -> more : 1
possible that more -> than : 1
that more than -> one : 1
than one object -> will : 1
one object will -> generate : 1
object will generate -> the : 1
will generate the -> same : 1
will generate the -> following : 3
will generate the -> v : 1
same hash value -> and : 1
same hash value -> while : 1
same hash value -> for : 1
hash value and -> therefore : 1
value and therefore -> end : 1
and therefore end -> up : 1
therefore end up -> in : 1
same each key -> also : 1
each key also -> needs : 1
key also needs -> to : 1
also needs to -> provide : 1
needs to provide -> an : 1
to provide an -> equals : 1
to provide an -> effective : 1
provide an equals -> which : 1
an equals which -> is : 1
equals which is -> used : 1
which is used -> to : 1
is used to -> compare : 1
is used to -> iterate : 1
is used to -> generate : 1
is used to -> retrieve : 1
is used to -> detect : 2
is used to -> get : 1
used to compare -> the : 1
compare the key -> we : 1
the key we -> are : 1
key we are -> looking : 1
looking for with -> all : 1
for with all -> the : 1
all the keys -> in : 1
the keys in -> the : 1
keys in the -> two : 1
in the two -> keys : 1
the two keys -> are : 1
two keys are -> they : 1
keys are they -> are : 1
are they are -> required : 1
they are required -> to : 1
are required to -> generate : 1
are required to -> do : 1
are required to -> define : 1
are required to -> be : 1
required to generate -> the : 1
to generate the -> same : 1
same hash perfectly -> legal : 1
hash perfectly legal -> for : 1
perfectly legal for -> two : 1
legal for two -> objects : 1
two objects to -> return : 1
two objects to -> be : 1
objects to return -> the : 1
to return the -> same : 1
to return the -> result : 1
return the same -> hash : 2
hash value while -> not : 1
value while not -> being : 1
while not being -> equal : 1
not being equal -> to : 1
being equal to -> each : 1
equal to each -> good : 1
to each good -> hash : 1
each good hash -> function : 1
good hash function -> is : 1
hash function is -> quick : 1
hash function is -> also : 1
function is quick -> to : 1
is quick to -> compute : 1
quick to compute -> and : 1
to compute and -> will : 1
compute and will -> also : 1
and will also -> distribute : 1
will also distribute -> the : 1
also distribute the -> keys : 1
distribute the keys -> evenly : 2
the keys evenly -> among : 2
keys evenly among -> the : 2
evenly among the -> buckets : 2
evenly among the -> one : 1
among the buckets -> in : 1
among the buckets -> to : 1
the buckets in -> order : 1
buckets in order -> to : 1
order to minimize -> the : 1
to minimize the -> number : 3
to minimize the -> use : 1
to minimize the -> time : 1
minimize the number -> of : 3
elements in each -> following : 1
in each following -> is : 1
each following is -> an : 1
a but perfectly -> valid : 1
but perfectly valid -> hash : 1
perfectly valid hash -> return : 1
valid hash return -> do : 1
hash return do -> is : 1
return do is -> valid : 1
do is valid -> because : 1
is valid because -> it : 1
valid because it -> will : 1
because it will -> return : 1
it will return -> the : 2
will return the -> same : 1
will return the -> control : 2
value for two -> objects : 1
two objects that -> are : 1
objects that are -> the : 1
that are the -> hash : 1
that are the -> code : 1
are the hash -> function : 1
the hash function -> is : 1
the hash function -> that : 1
the hash function -> we : 1
function is also -> very : 1
is also very -> since : 1
also very since -> all : 1
very since all -> elements : 1
since all elements -> will : 1
all elements will -> produce : 1
elements will produce -> the : 1
produce the same -> hash : 1
same hash all -> keys : 1
hash all keys -> will : 1
all keys will -> end : 1
keys will end -> up : 1
will end up -> in : 1
which means finding -> an : 1
means finding an -> element : 1
element is instead -> of : 1
is instead of -> we : 1
instead of we -> aimed : 1
of we aimed -> good : 1
we aimed good -> hash : 1
aimed good hash -> on : 1
good hash on -> the : 1
hash on the -> other : 1
the other ensures -> that : 1
other ensures that -> the : 1
ensures that the -> elements : 1
ensures that the -> stack : 1
ensures that the -> two : 1
elements are distributed -> evenly : 1
are distributed evenly -> among : 1
distributed evenly among -> the : 1
the buckets to -> minimize : 1
buckets to minimize -> hash : 1
to minimize hash -> stl : 1
minimize hash stl -> already : 1
hash stl already -> provides : 1
stl already provides -> us : 1
already provides us -> with : 1
provides us with -> good : 1
provides us with -> a : 1
provides us with -> that : 1
provides us with -> some : 1
provides us with -> the : 1
us with good -> hash : 1
with good hash -> functions : 1
good hash functions -> for : 1
hash functions for -> basic : 1
hash functions for -> we : 1
functions for basic -> in : 1
for basic in -> many : 1
basic in many -> we : 1
in many we -> can : 1
many we can -> reuse : 1
we can reuse -> these : 1
can reuse these -> functions : 1
reuse these functions -> when : 1
these functions when -> writing : 1
functions when writing -> our : 1
when writing our -> own : 1
writing our own -> hash : 1
our own hash -> functions : 1
own hash functions -> for : 1
functions for we -> want : 1
for we want -> to : 1
use a class -> as : 1
a class as -> a : 1
class as a -> key : 1
as a key -> in : 1
a key in -> an : 1
in an the -> class : 1
an the class -> has : 1
class has two -> data : 1
has two data -> which : 1
two data which -> is : 1
data which is -> an : 1
which is an -> and : 1
is an and -> which : 1
an and which -> is : 1
and which is -> a : 2
and which is -> return : 1
is a we -> start : 1
a we start -> by : 1
we start by -> writing : 1
we start by -> fetching : 1
start by writing -> the : 1
by writing the -> equal : 1
writing the equal -> const : 1
the equal const -> return : 1
equal const return -> two : 1
const return two -> objects : 1
return two objects -> to : 1
objects to be -> they : 1
to be they -> need : 1
be they need -> to : 1
they need to -> have : 1
the same name -> and : 1
the same name -> would : 1
the same name -> with : 1
same name and -> the : 1
name and the -> same : 1
name and the -> gpu : 1
same we can -> now : 1
can now define -> the : 1
now define the -> hash : 1
define the hash -> predicate : 1
the hash predicate -> by : 1
hash predicate by -> combining : 1
predicate by combining -> the : 1
by combining the -> hash : 1
combining the hash -> values : 1
the hash values -> of : 1
hash values of -> all : 1
values of all -> the : 1
all the data -> members : 1
the data members -> that : 1
the data members -> can : 1
the data members -> in : 1
the data members -> it : 1
data members that -> are : 3
members that are -> included : 1
members that are -> being : 1
members that are -> frequently : 1
that are included -> in : 1
are included in -> the : 1
included in the -> equals : 1
included in the -> even : 1
included in the -> stl : 1
in the equals -> there : 1
in the equals -> this : 1
the equals there -> is : 1
equals there is -> no : 1
is no function -> in : 1
no function in -> the : 1
the standard yet -> but : 1
standard yet but -> there : 1
yet but there -> is : 1
but there is -> a : 1
but there is -> only : 1
but there is -> no : 1
a good one -> available : 1
good one available -> in : 1
one available in -> which : 1
available in which -> we : 1
which we use -> auto : 1
which we use -> when : 1
we use auto -> seed : 1
use auto seed -> return : 1
auto seed return -> for : 1
seed return for -> some : 1
return for some -> reason : 1
for some reason -> you : 1
for some reason -> is : 1
some reason you -> cannot : 1
reason you cannot -> use : 1
you cannot use -> the : 1
you cannot use -> locks : 1
cannot use the -> is : 1
use the is -> really : 1
the is really -> just : 1
is really just -> a : 1
really just a -> that : 1
just a that -> can : 1
a that can -> be : 1
can be copied -> from : 1
can be copied -> for : 1
be copied from -> the : 1
copied from the -> documentation : 1
from the documentation -> found : 1
the documentation found -> at : 1
documentation found at -> the : 1
found at the -> equality : 1
at the equality -> and : 1
the equality and -> hash : 1
equality and hash -> predicates : 1
and hash predicates -> we : 1
hash predicates we -> can : 1
predicates we can -> finally : 1
we can finally -> create : 1
can finally create -> our : 1
finally create our -> set : 1
create our set -> auto : 1
our set auto -> persons : 1
set auto persons -> good : 1
auto persons good -> rule : 1
persons good rule -> of : 1
good rule of -> thumb : 1
of thumb is -> to : 1
thumb is to -> always : 1
is to always -> use : 2
is to always -> create : 1
always use all -> data : 1
use all data -> members : 1
all data members -> that : 1
that are being -> used : 1
that are being -> called : 1
that are being -> namely : 1
that are being -> different : 1
that are being -> scheduled : 1
in the equal -> function : 1
the equal function -> when : 1
equal function when -> producing : 1
function when producing -> the : 1
when producing the -> hash : 1
producing the hash -> in : 1
the hash in -> that : 1
hash in that -> we : 1
in that we -> adhere : 1
in that we -> can : 2
that we adhere -> to : 1
we adhere to -> the : 1
adhere to the -> contract : 1
to the contract -> between : 1
the contract between -> equals : 1
contract between equals -> and : 1
between equals and -> and : 1
equals and and -> at : 1
and and at -> the : 1
and at the -> same : 1
the same this -> enables : 1
same this enables -> us : 1
this enables us -> to : 1
enables us to -> provide : 1
us to provide -> an : 1
provide an effective -> hash : 1
an effective hash -> for : 1
effective hash for -> it : 1
hash for it -> would : 1
for it would -> be : 1
would be correct -> but : 1
be correct but -> inefficient : 1
correct but inefficient -> to : 1
but inefficient to -> only : 1
inefficient to only -> use : 1
to only use -> the : 1
use the name -> when : 1
the name when -> computing : 1
the name when -> accessed : 1
name when computing -> the : 1
when computing the -> hash : 1
the hash since -> that : 1
hash since that -> would : 1
since that would -> mean : 1
since that would -> break : 1
that would mean -> that : 1
that all objects -> with : 1
all objects with -> the : 1
objects with the -> same : 1
same name would -> end : 1
name would end -> up : 1
same even would -> be : 1
even would be -> to : 1
would be to -> include : 1
would be to -> copy : 1
would be to -> make : 1
would be to -> combine : 1
would be to -> have : 1
be to include -> data : 1
to include data -> members : 1
include data members -> in : 1
data members in -> the : 3
data members in -> a : 1
members in the -> hash : 1
members in the -> same : 1
members in the -> class : 1
members in the -> beginning : 1
members in the -> the : 1
hash function that -> are : 1
function that are -> not : 1
that are not -> being : 1
that are not -> obvious : 1
that are not -> in : 1
that are not -> it : 1
that are not -> run : 1
are not being -> used : 1
not being used -> in : 1
the equals this -> would : 1
equals this would -> most : 1
this would most -> likely : 1
would most likely -> result : 1
most likely result -> in : 1
likely result in -> a : 1
result in a -> disaster : 1
result in a -> time : 1
result in a -> new : 2
in a disaster -> where : 1
a disaster where -> you : 1
disaster where you -> cannot : 1
where you cannot -> find : 1
you cannot find -> objects : 1
cannot find objects -> in : 1
find objects in -> your : 1
objects in your -> that : 1
in your that -> in : 1
your that in -> fact : 1
that in fact -> compare : 1
in fact compare -> from : 1
fact compare from -> creating : 1
compare from creating -> hash : 1
from creating hash -> values : 1
creating hash values -> that : 1
hash values that -> distribute : 1
values that distribute -> the : 1
that distribute the -> keys : 1
among the one -> can : 1
the one can -> reduce : 1
one can reduce -> the : 1
can reduce the -> number : 1
reduce the number -> of : 1
number of collisions -> by : 1
of collisions by -> having : 1
collisions by having -> many : 1
by having many -> the : 1
having many the -> average : 1
many the average -> number : 1
the average number -> of : 1
average number of -> elements : 1
of elements per -> bucket : 1
elements per bucket -> is : 1
per bucket is -> called : 1
bucket is called -> the : 1
is called the -> in : 1
called the in -> the : 1
the preceding we -> created : 1
the preceding we -> can : 1
the preceding we -> saw : 1
the preceding we -> are : 1
preceding we created -> an : 1
we created an -> with : 1
created an with -> if : 1
an with if -> we : 1
with if we -> add : 1
if we add -> persons : 1
if we add -> an : 1
we add persons -> to : 1
add persons to -> the : 1
persons to the -> the : 1
the the would -> be : 1
the would be -> the : 1
be the is -> an : 1
the is an -> upper : 1
is an upper -> limit : 1
an upper limit -> of : 1
upper limit of -> the : 1
limit of the -> load : 1
limit of the -> as : 1
of the load -> and : 1
the load and -> when : 1
load and when -> that : 1
and when that -> value : 1
when that value -> is : 1
that value is -> the : 1
value is the -> set : 1
value is the -> type : 1
is the set -> will : 1
the set will -> need : 1
set will need -> to : 1
will need to -> increase : 1
need to increase -> the : 1
to increase the -> number : 1
increase the number -> of : 1
of and as -> a : 1
as a consequence -> also : 1
a consequence also -> rehash : 1
consequence also rehash -> all : 1
also rehash all -> the : 1
rehash all the -> elements : 1
in the also -> possible : 1
the also possible -> to : 1
possible to trigger -> a : 1
to trigger a -> rehash : 1
trigger a rehash -> manually : 1
a rehash manually -> with : 1
rehash manually with -> the : 1
manually with the -> and : 1
the and member -> last : 1
and member last -> category : 1
member last category -> of : 1
last category of -> stl : 1
category of stl -> containers : 1
of stl containers -> are : 2
stl containers are -> three : 1
stl containers are -> key : 1
containers are three -> container : 1
are three container -> adaptors : 1
three container adaptors -> in : 1
container adaptors in -> adaptors : 1
adaptors in adaptors -> are : 1
in adaptors are -> quite : 1
adaptors are quite -> different : 1
are quite different -> from : 1
quite different from -> the : 1
different from the -> sequence : 1
from the sequence -> containers : 1
sequence containers and -> the : 1
containers and the -> associative : 1
and the associative -> containers : 1
associative containers since -> they : 1
containers since they -> represent : 1
since they represent -> data : 1
they represent data -> that : 1
represent data that -> can : 1
data that can -> be : 2
be implemented by -> the : 2
be implemented by -> using : 1
be implemented by -> combining : 1
implemented by the -> underlying : 1
implemented by the -> town : 1
by the underlying -> sequence : 1
the underlying sequence -> for : 1
underlying sequence for -> the : 1
sequence for the -> which : 1
for the which -> is : 1
which is first -> structure : 1
is first structure -> supporting : 1
first structure supporting -> push : 1
structure supporting push -> and : 1
supporting push and -> pop : 1
push and pop -> on : 1
and pop on -> the : 1
pop on the -> top : 1
on the top -> of : 1
the top of -> the : 3
of the can -> be : 1
of the can -> happen : 1
the can be -> implemented : 1
the can be -> used : 1
implemented by using -> a : 1
by using a -> or : 1
by using a -> union : 1
by using a -> free : 1
by using a -> template : 1
by using a -> instruction : 1
by using a -> thread : 1
by using a -> the : 1
by using a -> macro : 1
using a or -> any : 1
a or any -> other : 1
any other custom -> sequence : 1
other custom sequence -> container : 1
custom sequence container -> that : 1
container that supports -> and : 1
that supports and -> the : 1
supports and the -> same : 1
the same goes -> for : 1
the same goes -> with : 1
same goes for -> which : 1
same goes for -> regular : 1
goes for which -> is : 1
for which is -> a : 1
for which is -> based : 1
is a first -> data : 1
is a first -> first : 1
a first data -> and : 1
first data and -> this : 1
data and this -> we : 1
is a pretty -> useful : 1
a pretty useful -> data : 1
pretty useful data -> structure : 1
useful data structure -> that : 1
structure that is -> easy : 1
that is easy -> to : 2
is easy to -> priority : 1
is easy to -> algorithms : 1
is easy to -> forget : 1
is easy to -> read : 1
is easy to -> it : 1
is easy to -> in : 1
easy to priority -> queue : 1
to priority queue -> offers : 1
priority queue offers -> constant : 1
queue offers constant -> time : 1
offers constant time -> lookup : 1
constant time lookup -> of : 1
time lookup of -> the : 1
lookup of the -> element : 1
of the element -> with : 1
the element with -> the : 1
the highest the -> priority : 1
highest the priority -> is : 1
the priority is -> defined : 1
priority is defined -> using : 1
is defined using -> the : 1
defined using the -> less : 1
using the less -> than : 1
than operator of -> the : 1
operator of the -> insert : 1
of the insert -> and : 1
the insert and -> delete : 1
insert and delete -> both : 1
and delete both -> run : 1
delete both run -> in : 1
both run in -> logarithmic : 1
both run in -> are : 1
run in logarithmic -> a : 1
in logarithmic a -> priority : 1
logarithmic a priority -> queue : 1
a priority queue -> is : 1
a priority queue -> can : 1
a priority queue -> and : 1
priority queue is -> a : 1
queue is a -> partially : 1
is a partially -> ordered : 1
a partially ordered -> data : 1
partially ordered data -> and : 1
ordered data and -> it : 1
and it might -> not : 1
and it might -> be : 1
not be obvious -> when : 1
not be obvious -> looking : 1
be obvious when -> to : 1
obvious when to -> use : 1
when to use -> it : 1
use it instead -> of : 1
it instead of -> a : 1
of a completely -> sorted : 1
a completely sorted -> data : 1
a completely sorted -> standard : 1
completely sorted data -> for : 1
sorted data for -> a : 1
data for a -> tree : 1
for a tree -> or : 1
a tree or -> a : 1
tree or a -> sorted : 1
or a sorted -> but : 1
a sorted but -> in : 1
sorted but in -> some : 1
but in some -> a : 1
in some a -> priority : 1
some a priority -> queue : 1
priority queue can -> offer : 1
queue can offer -> you : 1
can offer you -> the : 1
offer you the -> functionality : 1
you the functionality -> you : 1
the functionality you -> and : 1
functionality you and -> for : 1
you and for -> a : 1
and for a -> lower : 1
for a lower -> cost : 1
a lower cost -> than : 1
lower cost than -> a : 1
cost than a -> completely : 1
than a completely -> sorted : 1
completely sorted standard -> library : 1
sorted standard library -> already : 1
standard library already -> provides : 1
library already provides -> a : 1
already provides a -> partial : 1
provides a partial -> sort : 1
a partial sort -> so : 1
a partial sort -> algorithm : 1
partial sort so -> we : 1
sort so we -> need : 1
so we need -> to : 1
need to write -> our : 1
need to write -> one : 1
need to write -> a : 1
to write our -> but : 1
write our but -> see : 1
our but see -> how : 1
but see how -> we : 1
see how we -> can : 13
we can implement -> a : 3
we can implement -> this : 1
we can implement -> we : 1
can implement a -> partial : 1
can implement a -> generic : 1
can implement a -> simple : 1
implement a partial -> sort : 1
partial sort algorithm -> using : 1
sort algorithm using -> a : 1
algorithm using a -> priority : 1
using a priority -> suppose : 1
a priority suppose -> we : 1
priority suppose we -> are : 1
we are writing -> a : 1
we are writing -> to : 1
are writing a -> program : 1
writing a program -> for : 1
writing a program -> that : 1
a program for -> searching : 1
program for searching -> documents : 1
for searching documents -> given : 1
searching documents given -> a : 1
documents given a -> the : 1
given a the -> matching : 1
a the matching -> document : 1
the matching document -> should : 1
matching document should -> be : 1
document should be -> ordered : 1
should be ordered -> by : 1
be ordered by -> a : 1
ordered by a -> and : 1
by a and -> we : 1
a and we -> are : 1
are only interested -> in : 2
only interested in -> finding : 1
only interested in -> a : 1
interested in finding -> the : 1
finding the first -> search : 1
the first search -> hits : 1
first search hits -> with : 1
search hits with -> the : 1
hits with the -> highest : 1
the highest document -> is : 1
highest document is -> represented : 1
document is represented -> by : 2
is represented by -> a : 3
is represented by -> something : 1
represented by a -> document : 1
represented by a -> hit : 1
represented by a -> floating : 1
represented by a -> the : 1
by a document -> an : 1
a document an -> algorithm : 1
document an algorithm -> is : 1
an algorithm is -> selecting : 1
algorithm is selecting -> the : 1
is selecting the -> documents : 1
selecting the documents -> that : 1
the documents that -> match : 1
documents that match -> the : 1
that match the -> query : 1
match the query -> and : 1
the query and -> computes : 1
query and computes -> a : 1
and computes a -> rank : 1
computes a rank -> of : 1
a rank of -> the : 1
rank of the -> search : 1
of the search -> each : 1
the search each -> matching : 1
search each matching -> document : 1
each matching document -> is : 1
matching document is -> represented : 1
by a hit -> float : 1
a hit float -> we : 1
hit float we -> need : 1
float we need -> to : 1
sort the hits -> and : 1
the hits and -> return : 1
hits and return -> the : 1
and return the -> top : 1
and return the -> sorted : 1
and return the -> number : 1
return the top -> what : 1
the top what -> are : 1
top what are -> the : 1
what are the -> options : 1
are the options -> for : 1
the options for -> sorting : 1
options for sorting -> the : 1
for sorting the -> if : 1
for sorting the -> cpu : 1
sorting the if -> the : 1
the if the -> hits : 1
the if the -> atomic : 1
if the hits -> are : 1
the hits are -> contained : 1
hits are contained -> in : 1
are contained in -> a : 1
in a container -> that : 1
a container that -> provides : 1
container that provides -> random : 1
that provides random -> access : 1
provides random access -> we : 1
random access we -> could : 1
random access we -> simply : 1
access we could -> use : 1
we could use -> and : 2
we could use -> which : 1
we could use -> functions : 1
could use and -> only : 1
could use and -> functions : 1
use and only -> return : 1
and only return -> the : 1
only return the -> first : 1
return the first -> if : 1
the first if -> the : 1
first if the -> total : 1
if the total -> number : 1
number of hits -> is : 1
number of hits -> with : 1
of hits is -> much : 1
hits is much -> larger : 1
is much larger -> than : 1
much larger than -> the : 1
larger than the -> documents : 1
than the documents -> we : 1
the documents we -> are : 1
documents we are -> to : 1
we are to -> we : 1
are to we -> could : 1
to we could -> use : 1
could use which -> would : 1
use which would -> be : 1
which would be -> more : 1
would be more -> efficient : 2
be more efficient -> than : 1
be more efficient -> to : 1
more efficient than -> and : 1
more efficient than -> creating : 1
more efficient than -> remember : 1
efficient than and -> also : 1
than and also -> requires : 1
and also requires -> random : 1
also requires random -> access : 1
requires random access -> what : 1
random access what -> if : 1
access what if -> we : 1
we have random -> access : 1
have random access -> maybe : 1
random access maybe -> the : 1
access maybe the -> matching : 1
maybe the matching -> algorithm : 1
the matching algorithm -> only : 1
matching algorithm only -> provides : 1
algorithm only provides -> forward : 1
only provides forward -> iterators : 1
provides forward iterators -> to : 1
forward iterators to -> the : 1
iterators to the -> we : 1
to the we -> could : 1
to the we -> have : 1
to the we -> need : 1
the we could -> then : 1
the we could -> preferably : 1
we could then -> use : 1
could then use -> a : 1
then use a -> priority : 1
then use a -> template : 1
use a priority -> queue : 1
priority queue and -> still : 1
queue and still -> come : 1
and still come -> up : 1
still come up -> with : 1
up with an -> efficient : 1
with an efficient -> our : 1
an efficient our -> sort : 1
efficient our sort -> interface : 1
our sort interface -> would : 1
sort interface would -> look : 1
interface would look -> like : 1
would look like -> auto : 1
would look like -> if : 1
would look like -> the : 1
look like auto -> it : 1
like auto it -> could : 1
auto it could -> call : 1
it could call -> this : 1
could call this -> function : 1
call this function -> with : 1
this function with -> any : 1
function with any -> iterator : 1
with any iterator -> that : 1
any iterator that -> has : 1
iterator that has -> the : 1
that has the -> increment : 1
has the increment -> operator : 1
the increment operator -> we : 1
increment operator we -> create : 1
operator we create -> a : 1
create a backed -> by : 1
a backed by -> a : 1
backed by a -> custom : 1
by a custom -> compare : 1
a custom compare -> function : 1
custom compare function -> for : 1
compare function for -> keeping : 1
function for keeping -> the : 1
for keeping the -> ranking : 1
keeping the ranking -> hits : 1
the ranking hits -> at : 1
ranking hits at -> the : 1
hits at the -> top : 1
at the top -> of : 2
of the auto -> cmp : 1
the auto cmp -> const : 1
auto cmp const -> return : 1
cmp const return -> we : 1
const return we -> are : 1
const return we -> create : 1
const return we -> were : 1
const return we -> overload : 1
const return we -> can : 1
return we are -> using : 1
return we are -> ready : 1
are using greater -> auto : 1
using greater auto -> queue : 1
greater auto queue -> will : 1
auto queue will -> only : 1
queue will only -> insert : 1
will only insert -> at : 1
only insert at -> most : 1
insert at most -> elements : 1
at most elements -> in : 1
most elements in -> the : 1
in the priority -> the : 2
in the priority -> so : 1
the priority the -> priority : 1
the priority the -> hit : 1
priority the priority -> queue : 1
the priority queue -> will : 1
priority queue will -> contain : 1
queue will contain -> the : 1
will contain the -> highest : 1
contain the highest -> ranking : 1
the highest ranking -> hits : 2
highest ranking hits -> seen : 1
highest ranking hits -> in : 1
ranking hits seen -> so : 1
hits seen so -> among : 1
seen so among -> the : 1
so among the -> elements : 1
among the elements -> that : 1
priority the hit -> with : 1
the hit with -> the : 1
hit with the -> lowest : 1
with the lowest -> rank : 1
the lowest rank -> will : 1
lowest rank will -> be : 1
rank will be -> the : 1
be the topmost -> for : 1
the topmost for -> it : 1
topmost for it -> it : 1
for it it -> if : 2
it it if -> else : 1
it it if -> return : 1
it if else -> if : 1
if else if -> we : 2
if else if -> this : 1
if else if -> else : 3
if else if -> auto : 1
else if we -> have : 1
else if we -> compile : 1
we have collected -> the : 1
have collected the -> highest : 1
collected the highest -> ranking : 1
ranking hits in -> the : 1
hits in the -> priority : 1
the priority so -> the : 1
priority so the -> only : 1
so the only -> thing : 1
the only thing -> left : 1
the only thing -> we : 1
only thing left -> is : 1
thing left is -> to : 1
left is to -> put : 1
is to put -> them : 1
to put them -> in : 1
put them in -> a : 1
them in a -> vector : 1
in a vector -> in : 1
in a vector -> of : 1
a vector in -> reverse : 1
vector in reverse -> order : 1
in reverse order -> and : 1
reverse order and -> return : 1
order and return -> the : 1
return the sorted -> auto : 1
the sorted auto -> result : 1
sorted auto result -> while : 1
auto result while -> return : 1
result while return -> end : 1
while return end -> of : 1
return end of -> is : 1
return end of -> that : 1
end of is -> the : 1
is the complexity -> of : 1
complexity of this -> if : 1
of this if -> we : 1
this if we -> denote : 1
if we denote -> the : 1
we denote the -> number : 1
denote the number -> of : 1
of hits with -> and : 1
hits with and -> the : 1
with and the -> number : 1
and the number -> of : 2
number of returned -> hits : 1
of returned hits -> with : 1
returned hits with -> we : 1
hits with we -> can : 1
with we can -> see : 1
that the memory -> consumption : 1
that the memory -> was : 1
that the memory -> allocated : 1
that the memory -> returned : 1
the memory consumption -> is : 1
memory consumption is -> whereas : 1
consumption is whereas -> the : 1
is whereas the -> time : 1
complexity is log -> since : 1
is log since -> we : 1
log since we -> are : 1
we are iterating -> over : 1
are iterating over -> and : 1
iterating over and -> in : 1
and in each -> iteration : 1
each iteration we -> might : 1
iteration we might -> have : 1
we might have -> to : 1
might have to -> do : 1
to do a -> push : 1
do a push -> which : 1
a push which -> both : 1
push which both -> run : 1
which both run -> in : 1
run in are -> finishing : 1
in are finishing -> this : 1
are finishing this -> chapter : 1
finishing this chapter -> by : 1
this chapter by -> talking : 1
this chapter by -> explaining : 1
this chapter by -> overloading : 1
chapter by talking -> about : 1
by talking about -> iterating : 1
talking about iterating -> over : 1
about iterating over -> elements : 1
iterating over elements -> and : 1
iterating over elements -> stored : 1
over elements and -> looking : 1
elements and looking -> at : 1
and looking at -> some : 1
looking at some -> ways : 1
looking at some -> you : 1
at some ways -> to : 1
some ways to -> improve : 1
ways to improve -> the : 1
ways to improve -> memory : 1
ways to improve -> a : 1
improve the performance -> when : 1
performance when iterating -> over : 1
when iterating over -> data : 1
when iterating over -> elements : 1
when iterating over -> the : 1
when iterating over -> a : 1
iterating over data -> we : 1
over data we -> already : 1
data we already -> mentioned : 1
we already mentioned -> two : 1
already mentioned two -> important : 1
mentioned two important -> factors : 1
two important factors -> for : 1
important factors for -> performance : 1
factors for performance -> when : 1
for performance when -> accessing : 1
performance when accessing -> spatial : 1
when accessing spatial -> locality : 1
accessing spatial locality -> and : 1
spatial locality and -> temporal : 1
locality and temporal -> when : 1
and temporal when -> iterating : 1
temporal when iterating -> over : 1
over elements stored -> in : 1
elements stored in -> contiguous : 1
stored in contiguous -> we : 1
in contiguous we -> will : 1
contiguous we will -> see : 1
see that by -> keeping : 1
that by keeping -> our : 1
by keeping our -> objects : 1
keeping our objects -> we : 1
our objects we -> will : 1
objects we will -> increase : 1
we will increase -> the : 1
increase the probability -> that : 1
the probability that -> the : 1
probability that the -> data : 1
the data we -> need : 1
the data we -> could : 1
data we need -> is : 1
data we need -> to : 1
we need is -> already : 1
we need is -> some : 1
we need is -> an : 1
we need is -> the : 1
is already cached -> thanks : 1
already cached thanks -> to : 1
cached thanks to -> spatial : 1
thanks to spatial -> this : 1
thanks to spatial -> ownership : 1
to spatial this -> will : 1
spatial this will -> have : 1
this will have -> a : 1
have a great -> impact : 1
a great impact -> on : 1
great impact on -> the : 1
on the the -> cache : 1
on the the -> cpu : 1
on the the -> maximum : 1
on the the -> index : 1
on the the -> total : 1
the the cache -> thrashing : 1
the cache thrashing -> example : 2
cache thrashing example -> shown : 1
cache thrashing example -> we : 1
thrashing example shown -> in : 1
example shown in -> the : 1
beginning of this -> chapter : 1
of this chapter -> where : 1
this chapter where -> we : 1
chapter where we -> iterated : 1
where we iterated -> over : 1
we iterated over -> a : 1
iterated over a -> it : 1
over a it -> demonstrated : 1
a it demonstrated -> that : 1
it demonstrated that -> we : 1
demonstrated that we -> sometimes : 1
that we sometimes -> need : 1
we sometimes need -> to : 1
sometimes need to -> think : 1
need to think -> about : 3
to think about -> in : 1
to think about -> alignment : 1
to think about -> the : 1
to think about -> when : 1
think about in -> what : 1
about in what -> way : 1
in what way -> we : 1
what way we -> access : 1
way we access -> even : 1
we access even -> if : 1
access even if -> we : 1
have a fairly -> compact : 1
a fairly compact -> representation : 1
fairly compact representation -> of : 1
compact representation of -> the : 1
representation of the -> we : 1
representation of the -> preceding : 3
the we will -> compare : 1
the we will -> take : 1
the we will -> spend : 1
the we will -> therefore : 1
we will compare -> how : 1
will compare how -> long : 1
compare how long -> it : 1
how long it -> takes : 2
long it takes -> to : 2
takes to iterate -> over : 1
iterate over objects -> of : 1
over objects of -> different : 1
objects of different -> we : 1
objects of different -> types : 1
of different we -> start : 1
different we start -> out : 1
we start out -> by : 1
start out by -> defining : 1
out by defining -> two : 1
by defining two -> and : 1
defining two and -> smallobject : 1
two and smallobject -> int : 1
and smallobject int -> bigobject : 1
smallobject int bigobject -> int : 1
int bigobject int -> and : 1
bigobject int and -> are : 1
int and are -> identical : 1
and are identical -> for : 1
are identical for -> the : 1
identical for the -> size : 1
for the size -> of : 1
of the initial -> data : 1
the initial data -> both : 1
initial data both -> structs : 1
data both structs -> contain : 1
both structs contain -> an : 1
structs contain an -> named : 1
contain an named -> which : 1
an named which -> we : 1
named which we -> initialize : 1
which we initialize -> to : 1
we initialize to -> some : 1
initialize to some -> random : 1
to some random -> value : 1
some random value -> just : 1
random value just -> for : 1
value just for -> testing : 1
just for testing -> we : 1
for testing we -> can : 1
testing we can -> let : 1
we can let -> the : 1
can let the -> compiler : 1
let the compiler -> tell : 1
the compiler tell -> us : 1
compiler tell us -> the : 1
tell us the -> size : 1
us the size -> of : 1
of the objects -> by : 1
of the objects -> that : 1
the objects by -> using : 1
using the possible -> output : 1
the possible output -> is : 1
the possible output -> being : 1
possible output is -> possible : 1
possible output is -> need : 1
possible output is -> i : 1
possible output is -> reason : 1
possible output is -> a : 1
output is possible -> output : 1
is possible output -> is : 1
output is need -> plenty : 1
is need plenty -> of : 1
need plenty of -> objects : 1
plenty of objects -> in : 1
of objects in -> order : 1
objects in order -> to : 2
order to evaluate -> the : 1
order to evaluate -> more : 1
to evaluate the -> create : 1
evaluate the create -> one : 1
the create one -> million : 1
create one million -> objects : 1
one million objects -> of : 1
million objects of -> each : 1
objects of each -> auto : 1
of each auto -> for : 1
each auto for -> the : 1
auto for the -> say : 1
for the say -> we : 1
the say we -> want : 1
want to sum -> the : 1
to sum the -> scores : 2
sum the scores -> of : 1
sum the scores -> in : 1
the scores of -> all : 1
scores of all -> the : 1
all the we -> could : 1
we could preferably -> use : 1
could preferably use -> which : 1
preferably use which -> we : 1
use which we -> will : 1
cover later in -> the : 1
cover later in -> this : 1
in the but -> for : 1
in the but -> since : 1
the but for -> now : 1
but for now -> a : 1
but for now -> we : 1
for now a -> simple : 1
now a simple -> will : 1
a simple will -> we : 1
simple will we -> write : 1
will we write -> this : 1
we write this -> function : 1
write this function -> as : 1
this function as -> a : 1
as a template -> so : 1
as a template -> number : 1
a template so -> that : 1
template so that -> we : 1
have to manually -> write : 1
to manually write -> one : 1
manually write one -> version : 1
write one version -> for : 1
one version for -> each : 1
version for each -> type : 1
for each type -> of : 1
each type of -> the : 1
the function iterates -> over : 1
function iterates over -> the : 1
over the objects -> and : 1
the objects and -> sums : 1
objects and sums -> all : 1
and sums all -> the : 1
sums all the -> auto : 1
all the auto -> scopedtimer : 1
the auto scopedtimer -> auto : 1
auto scopedtimer auto -> sum : 1
scopedtimer auto sum -> for : 1
auto sum for -> obj : 1
auto sum for -> i : 2
sum for obj -> sum : 1
for obj sum -> return : 1
obj sum return -> we : 1
sum return we -> are : 1
we are ready -> to : 1
are ready to -> see : 1
are ready to -> there : 1
ready to see -> how : 1
to see how -> long : 1
to see how -> big : 1
to see how -> we : 2
see how long -> it : 1
takes to sum -> the : 1
the scores in -> the : 1
scores in the -> small : 1
in the small -> objects : 1
the small objects -> compared : 1
the small objects -> and : 1
small objects compared -> to : 1
objects compared to -> the : 1
to the big -> sum : 1
the big sum -> sum : 1
big sum sum -> sum : 1
sum sum sum -> achieve : 1
sum sum achieve -> reliable : 1
sum achieve reliable -> we : 1
achieve reliable we -> need : 1
reliable we need -> to : 1
need to repeat -> the : 1
to repeat the -> test : 1
repeat the test -> a : 1
the test a -> couple : 1
test a couple -> of : 1
a couple of -> on : 1
a couple of -> algorithms : 1
a couple of -> times : 1
a couple of -> reasons : 1
couple of on -> my : 1
of on my -> it : 2
on my it -> takes : 1
on my it -> was : 1
on my it -> generates : 1
my it takes -> about : 1
it takes about -> ms : 1
ms to compute -> the : 2
to compute the -> sum : 2
compute the sum -> of : 2
of the small -> objects : 1
of the small -> string : 1
of the small -> size : 1
small objects and -> ms : 1
objects and ms -> to : 1
and ms to -> compute : 1
of the big -> this : 1
of the big -> task : 1
big this example -> is : 1
this example is -> similar : 1
this example is -> very : 1
example is similar -> to : 2
is similar to -> the : 2
to the cache -> thrashing : 1
thrashing example we -> looked : 1
example we looked -> at : 2
we looked at -> the : 1
we looked at -> for : 1
we looked at -> earlier : 1
looked at the -> beginning : 1
the and one -> reason : 1
and one reason -> for : 1
one reason for -> the : 1
one reason for -> always : 1
reason for the -> big : 1
reason for the -> stack : 1
reason for the -> possible : 1
for the big -> difference : 1
the big difference -> is : 1
big difference is -> again : 1
difference is again -> because : 1
is again because -> of : 1
again because of -> the : 1
of the way -> the : 1
of the way -> hardware : 1
the way the -> computer : 1
way the computer -> uses : 1
the computer uses -> the : 1
computer uses the -> cache : 1
uses the cache -> hierarchy : 1
the cache hierarchy -> to : 1
the cache hierarchy -> in : 1
cache hierarchy to -> fetch : 1
hierarchy to fetch -> data : 1
to fetch data -> from : 1
fetch data from -> the : 1
data from the -> main : 1
the main can -> we : 1
main can we -> utilize : 1
can we utilize -> the : 1
we utilize the -> fact : 1
we utilize the -> template : 1
utilize the fact -> that : 1
fact that faster -> to : 1
that faster to -> iterate : 1
faster to iterate -> over : 2
iterate over collections -> of : 1
over collections of -> smaller : 1
collections of smaller -> objects : 1
of smaller objects -> than : 1
smaller objects than -> bigger : 1
objects than bigger -> objects : 1
than bigger objects -> when : 1
bigger objects when -> working : 1
objects when working -> with : 1
when working with -> more : 1
when working with -> there : 1
when working with -> different : 1
when working with -> memory : 1
when working with -> asynchronous : 1
working with more -> realistic : 1
with more realistic -> scenarios : 1
more realistic scenarios -> than : 1
realistic scenarios than -> the : 1
scenarios than the -> preceding : 1
than the preceding -> we : 1
preceding we can -> do : 1
can do our -> best : 1
do our best -> to : 1
our best to -> keep : 1
best to keep -> the : 1
keep the size -> of : 1
size of our -> classes : 1
of our classes -> but : 1
our classes but -> often : 1
classes but often -> easier : 1
but often easier -> said : 1
often easier said -> than : 1
easier said than -> if : 1
said than if -> you : 1
than if you -> are : 1
you are working -> with : 1
are working with -> an : 1
working with an -> old : 1
with an old -> code : 1
an old code -> base : 1
old code base -> that : 1
code base that -> has : 1
base that has -> been : 1
that has been -> growing : 1
that has been -> paged : 1
has been growing -> for : 1
been growing for -> some : 1
growing for some -> the : 1
for some the -> chances : 1
some the chances -> are : 1
the chances are -> high : 1
the chances are -> that : 1
chances are high -> that : 1
are high that -> you : 1
high that you -> will : 1
you will stumble -> across : 1
will stumble across -> some : 1
stumble across some -> really : 1
across some really -> large : 1
some really large -> classes : 1
really large classes -> with : 1
large classes with -> too : 1
classes with too -> many : 1
with too many -> data : 1
too many data -> members : 1
many data members -> and : 1
data members and -> too : 1
data members and -> the : 1
members and too -> many : 1
and too many -> we : 1
too many we -> will : 1
many we will -> now : 1
we will now -> look : 1
we will now -> have : 2
we will now -> use : 1
will now look -> at : 1
will now look -> in : 1
now look at -> a : 1
at a class -> that : 1
a class that -> user : 1
a class that -> controls : 1
class that user -> in : 1
that user in -> an : 1
user in an -> online : 1
in an online -> game : 1
an online game -> system : 1
online game system -> and : 1
game system and -> see : 1
system and see -> how : 1
we can split -> it : 1
can split it -> into : 1
split it into -> smaller : 1
it into smaller -> the : 1
into smaller the -> class : 1
smaller the class -> has : 1
has the following -> data : 1
has the following -> work : 1
the following data -> user : 1
following data user -> short : 1
data user short -> bool : 1
user short bool -> user : 1
user short bool -> change : 1
short bool user -> has : 1
bool user has -> a : 1
user has a -> name : 1
has a name -> that : 1
a name that -> is : 1
name that is -> frequently : 1
that is frequently -> and : 1
is frequently and -> a : 1
frequently and a -> password : 1
and a password -> and : 1
a password and -> some : 1
password and some -> username : 1
and some username -> information : 1
some username information -> for : 1
username information for -> authentication : 1
information for authentication -> that : 1
for authentication that -> are : 1
authentication that are -> rarely : 1
that are rarely -> the : 1
rarely the class -> also : 1
the class also -> keeps : 1
class also keeps -> track : 1
also keeps track -> of : 1
keeps track of -> which : 1
track of which -> level : 1
of which level -> the : 1
which level the -> player : 1
level the player -> is : 1
the player is -> currently : 1
player is currently -> playing : 1
is currently playing -> the : 1
is currently playing -> by : 1
currently playing the -> struct : 1
playing the struct -> also : 1
the struct also -> knows : 1
struct also knows -> whether : 1
also knows whether -> the : 1
knows whether the -> user : 1
whether the user -> is : 1
the user is -> currently : 1
the user is -> only : 1
the user is -> simply : 1
user is currently -> playing : 1
currently playing by -> storing : 1
playing by storing -> operator : 1
by storing operator -> reports : 1
storing operator reports -> that : 1
operator reports that -> the : 1
reports that the -> user : 1
reports that the -> capacity : 1
that the user -> class : 1
that the user -> data : 1
that the user -> code : 1
the user class -> is : 1
the user class -> it : 1
the user class -> we : 1
user class is -> bytes : 1
class is bytes -> when : 1
is bytes when -> compiling : 1
bytes when compiling -> for : 1
when compiling for -> a : 1
compiling for a -> an : 1
for a an -> approximate : 1
a an approximate -> layout : 1
an approximate layout -> of : 1
approximate layout of -> the : 1
layout of the -> data : 1
layout of the -> three : 1
layout of the -> short : 1
layout of the -> union : 1
layout of the -> virtual : 1
of the data -> members : 2
of the data -> type : 1
data members can -> be : 1
members can be -> seen : 1
members can be -> accessed : 1
the following users -> are : 1
following users are -> kept : 1
users are kept -> in : 1
are kept in -> a : 1
kept in a -> and : 1
in a and -> there : 1
a and there -> are : 1
and there are -> two : 1
and there are -> many : 1
there are two -> global : 1
there are two -> main : 1
there are two -> and : 1
are two global -> functions : 1
two global functions -> that : 1
global functions that -> are : 1
called very often -> and : 1
very often and -> need : 1
often and need -> to : 1
need to run -> both : 1
to run both -> functions : 1
run both functions -> iterate : 1
both functions iterate -> over : 1
functions iterate over -> all : 1
over all and -> therefore : 1
all and therefore -> we : 1
therefore we need -> to : 2
to make iterations -> over : 1
make iterations over -> the : 1
iterations over the -> user : 1
over the user -> vector : 1
the user vector -> the : 1
user vector the -> first : 1
vector the first -> function : 1
first function returns -> the : 1
function returns the -> number : 1
returns the number -> of : 2
number of users -> that : 1
number of users -> at : 2
of users that -> have : 1
users that have -> reached : 1
that have reached -> a : 1
have reached a -> certain : 1
reached a certain -> const : 1
a certain const -> scopedtimer : 1
certain const scopedtimer -> bytes : 1
const scopedtimer bytes -> auto : 1
scopedtimer bytes auto -> for : 1
bytes auto for -> user : 1
auto for user -> if : 1
for user if -> return : 1
user if return -> second : 1
if return second -> function : 1
return second function -> computes : 1
second function computes -> how : 1
function computes how -> many : 1
computes how many -> users : 1
how many users -> are : 2
many users are -> currently : 2
users are currently -> scopedtimer : 1
users are currently -> the : 1
are currently scopedtimer -> bytes : 1
currently scopedtimer bytes -> return : 1
scopedtimer bytes return -> return : 1
bytes return return -> we : 1
return return we -> use : 1
return return we -> can : 1
return we use -> the : 1
we use the -> stl : 1
we use the -> memory : 1
we use the -> arena : 1
we use the -> containers : 1
we use the -> global : 1
we use the -> order : 1
we use the -> term : 1
we use the -> boost : 1
use the stl -> algorithm : 1
the stl algorithm -> of : 1
the stl algorithm -> the : 2
the stl algorithm -> library : 2
the stl algorithm -> mice : 1
stl algorithm of -> a : 1
algorithm of a -> handwritten : 1
of a handwritten -> as : 1
a handwritten as -> we : 1
handwritten as we -> did : 1
as we did -> in : 1
we did in -> call : 1
did in call -> the : 1
in call the -> predicate : 1
call the predicate -> we : 1
the predicate we -> provide : 1
predicate we provide -> for : 1
we provide for -> each : 1
provide for each -> user : 1
for each user -> in : 1
each user in -> the : 1
user in the -> users : 1
in the users -> vector : 1
the users vector -> and : 1
users vector and -> return : 1
vector and return -> the : 1
return the number -> of : 1
number of times -> the : 1
of times the -> predicate : 1
times the predicate -> returns : 1
the predicate returns -> this : 1
predicate returns this -> is : 1
returns this is -> basically : 1
this is basically -> what : 1
is basically what -> we : 1
basically what we -> are : 1
are doing in -> the : 1
doing in the -> first : 1
first function as -> so : 1
function as so -> we : 1
as so we -> could : 1
so we could -> also : 1
so we could -> have : 1
we could also -> have : 1
could also have -> used : 1
also have used -> the : 1
have used the -> first : 1
used the first -> both : 1
the first both -> functions : 1
first both functions -> run : 1
both functions run -> in : 1
both functions run -> more : 1
functions run in -> linear : 1
in linear the -> two : 1
linear the two -> functions : 1
the two functions -> with : 1
two functions with -> a : 1
functions with a -> vector : 1
with a vector -> of : 1
vector of one -> million : 1
of one million -> users : 1
one million users -> results : 1
one million users -> users : 1
million users results -> in : 1
users results in -> the : 1
results in the -> following : 1
the following ms -> bytes : 1
following ms bytes -> ms : 1
ms bytes ms -> bytes : 1
bytes ms bytes -> hypothesis : 1
ms bytes hypothesis -> is : 1
bytes hypothesis is -> that : 1
hypothesis is that -> by : 1
is that by -> making : 1
that by making -> the : 1
making the user -> class : 1
making the user -> objects : 1
user class it -> would : 1
class it would -> be : 1
would be faster -> to : 1
be faster to -> iterate : 1
over the as -> mentioned : 1
the as mentioned -> the : 2
the as mentioned -> this : 1
as mentioned the -> password : 1
as mentioned the -> syntax : 1
as mentioned the -> stack : 1
as mentioned the -> heap : 1
mentioned the password -> and : 1
the password and -> security : 1
password and security -> data : 1
and security data -> fields : 1
security data fields -> are : 1
data fields are -> rarely : 1
fields are rarely -> used : 1
are rarely used -> and : 1
rarely used and -> could : 1
used and could -> be : 1
and could be -> grouped : 1
could be grouped -> in : 1
be grouped in -> a : 1
grouped in a -> separate : 1
in a separate -> that : 1
in a separate -> class : 1
in a separate -> while : 1
in a separate -> task : 1
a separate that -> would : 1
separate that would -> give : 1
that would give -> us : 1
would give us -> the : 1
give us the -> following : 1
us the following -> authinfo : 1
the following authinfo -> struct : 1
following authinfo struct -> user : 1
authinfo struct user -> short : 1
struct user short -> bool : 1
short bool change -> decreases : 1
bool change decreases -> the : 1
change decreases the -> size : 1
decreases the size -> of : 1
class from bytes -> to : 1
from bytes to -> instead : 1
bytes to instead -> of : 1
to instead of -> storing : 1
instead of storing -> four : 1
of storing four -> strings : 1
storing four strings -> in : 1
four strings in -> the : 1
strings in the -> user : 1
the user we -> use : 1
user we use -> a : 1
use a pointer -> to : 1
pointer to refer -> to : 1
to refer to -> the : 1
to refer to -> dynamic : 1
to refer to -> allocators : 1
refer to the -> new : 1
new the following -> figure : 1
figure shows how -> we : 1
figure shows how -> two : 1
figure shows how -> fences : 1
shows how we -> have : 1
shows how we -> would : 1
how we have -> split : 1
we have split -> up : 1
have split up -> the : 1
split up the -> class : 1
up the class -> into : 1
the class into -> two : 1
class into two -> smaller : 1
into two smaller -> change : 1
two smaller change -> makes : 1
smaller change makes -> sense : 1
change makes sense -> from : 1
makes sense from -> a : 1
sense from a -> design : 1
from a design -> perspective : 1
a design perspective -> keeping : 1
design perspective keeping -> the : 1
perspective keeping the -> authentication : 1
keeping the authentication -> data : 1
the authentication data -> in : 1
authentication data in -> a : 1
data in a -> separate : 1
a separate class -> increases : 1
separate class increases -> the : 1
class increases the -> cohesion : 1
increases the cohesion -> of : 1
the cohesion of -> the : 1
cohesion of the -> user : 1
of the user -> the : 1
of the user -> new : 1
the user the -> class : 1
user the class -> contains : 1
the class contains -> a : 1
the class contains -> the : 1
class contains a -> pointer : 1
class contains a -> particular : 1
contains a pointer -> to : 1
to the authentication -> the : 1
to the authentication -> an : 1
the authentication the -> total : 1
authentication the total -> amount : 1
of memory that -> the : 1
of memory that -> is : 1
memory that the -> user : 1
memory that the -> object : 1
the user data -> occupies : 1
user data occupies -> has : 1
data occupies has -> not : 1
occupies has not -> of : 1
has not of -> but : 1
not of but -> the : 1
of but the -> important : 1
but the important -> thing : 2
the important thing -> right : 1
the important thing -> is : 1
the important thing -> for : 1
important thing right -> now : 1
thing right now -> is : 1
right now is -> to : 1
now is to -> shrink : 1
is to shrink -> the : 1
to shrink the -> class : 1
shrink the class -> in : 1
the class in -> order : 1
the class in -> a : 1
class in order -> to : 1
order to speed -> up : 1
up the functions -> that : 1
the functions that -> iterate : 1
functions that iterate -> over : 1
over all an -> optimization : 1
all an optimization -> point : 1
an optimization point -> of : 2
optimization point of -> we : 1
optimization point of -> the : 1
point of we -> have : 1
of we have -> to : 1
of we have -> successfully : 1
have to measure -> again : 1
to measure again -> to : 1
measure again to -> verify : 1
again to verify -> that : 1
to verify that -> our : 1
verify that our -> hypothesis : 1
verify that our -> overloaded : 1
that our hypothesis -> regarding : 1
our hypothesis regarding -> smaller : 1
hypothesis regarding smaller -> data : 1
regarding smaller data -> is : 1
smaller data is -> it : 1
data is it -> turns : 1
is it turns -> out : 1
it turns out -> that : 6
turns out that -> both : 1
turns out that -> is : 1
turns out that -> uses : 1
turns out that -> the : 1
turns out that -> incrementing : 1
turns out that -> it : 1
out that both -> functions : 1
that both functions -> run : 1
functions run more -> than : 1
run more than -> twice : 1
more than twice -> as : 1
than twice as -> fast : 1
twice as fast -> with : 1
twice as fast -> using : 1
as fast with -> the : 1
fast with the -> smaller : 1
with the smaller -> the : 1
the smaller the -> output : 1
smaller the output -> when : 1
the output when -> running : 1
output when running -> the : 3
when running the -> modified : 1
when running the -> functions : 1
when running the -> program : 4
when running the -> the : 1
running the modified -> version : 1
modified version ms -> with : 1
version ms with -> user : 1
ms with user -> ms : 1
with user ms -> with : 1
user ms with -> we : 1
ms with we -> are : 1
with we are -> going : 1
going to try -> a : 1
to try a -> more : 1
try a more -> aggressive : 1
a more aggressive -> way : 1
more aggressive way -> of : 1
aggressive way of -> shrinking : 1
way of shrinking -> the : 1
of shrinking the -> amount : 1
shrinking the amount -> of : 1
amount of data -> we : 1
of data we -> need : 1
need to iterate -> through : 1
need to iterate -> the : 1
to iterate through -> by : 1
iterate through by -> using : 1
through by using -> parallel : 1
by using parallel -> a : 1
using parallel a -> this : 1
parallel a this -> is : 1
is an optimization -> in : 1
an optimization in -> many : 1
optimization in many -> has : 1
in many has -> too : 1
many has too -> many : 1
has too many -> drawbacks : 1
too many drawbacks -> to : 1
many drawbacks to -> be : 1
drawbacks to be -> a : 1
be a viable -> so : 1
a viable so -> take : 1
viable so take -> this : 1
so take this -> as : 1
take this as -> a : 1
this as a -> general : 1
this as a -> function : 1
as a general -> technique : 1
a general technique -> and : 1
general technique and -> apply : 1
technique and apply -> it : 1
and apply it -> without : 1
apply it without -> thinking : 1
without thinking we -> will : 1
thinking we will -> come : 1
we will come -> back : 1
will come back -> to : 1
come back to -> the : 1
to the pros -> and : 1
the pros and -> cons : 1
pros and cons -> of : 1
and cons of -> parallel : 1
cons of parallel -> arrays : 1
of parallel arrays -> after : 1
parallel arrays after -> we : 1
arrays after we -> have : 1
we have seen -> a : 1
we have seen -> that : 2
we have seen -> how : 3
we have seen -> so : 1
have seen a -> few : 1
seen a few -> using : 1
a few using -> parallel : 1
few using parallel -> we : 1
using parallel we -> simply : 1
parallel we simply -> split : 1
we simply split -> the : 1
simply split the -> large : 1
split the large -> structures : 1
the large structures -> into : 1
large structures into -> smaller : 1
structures into smaller -> similar : 1
into smaller similar -> to : 1
smaller similar to -> what : 1
similar to what -> we : 1
to what we -> did : 1
what we did -> with : 1
we did with -> the : 1
did with the -> authentication : 1
with the authentication -> information : 1
the authentication information -> for : 1
authentication information for -> our : 1
information for our -> user : 1
for our user -> but : 1
our user but -> instead : 1
user but instead -> of : 1
but instead of -> using : 2
but instead of -> failing : 1
instead of using -> pointers : 1
instead of using -> iterators : 1
instead of using -> the : 1
instead of using -> an : 1
of using pointers -> to : 1
using pointers to -> relate : 1
pointers to relate -> we : 1
to relate we -> store : 1
relate we store -> the : 1
we store the -> smaller : 1
store the smaller -> structures : 1
the smaller structures -> in : 1
smaller structures in -> separate : 1
structures in separate -> arrays : 1
in separate arrays -> of : 1
separate arrays of -> equal : 1
arrays of equal -> the : 1
of equal the -> smaller : 1
equal the smaller -> objects : 1
the smaller objects -> in : 1
smaller objects in -> the : 1
objects in the -> different : 1
in the different -> arrays : 1
the different arrays -> that : 1
different arrays that -> share : 1
arrays that share -> the : 1
that share the -> same : 1
share the same -> index : 1
share the same -> virtual : 1
the same index -> form : 1
the same index -> in : 1
same index form -> the : 1
index form the -> complete : 1
form the complete -> original : 1
the complete original -> cdpalignleft : 1
complete original cdpalignleft -> example : 1
original cdpalignleft example -> will : 1
cdpalignleft example will -> clarify : 1
example will clarify -> the : 1
example will clarify -> i : 1
will clarify the -> the : 1
clarify the the -> user : 1
the the user -> class : 1
the the user -> of : 1
user class we -> have : 1
worked with consists -> of : 1
with consists of -> it : 1
consists of it -> now : 1
of it now -> only : 1
it now only -> contains : 1
now only contains -> a : 1
only contains a -> username : 1
contains a username -> a : 1
a username a -> pointer : 1
username a pointer -> to : 1
the authentication an -> integer : 1
authentication an integer -> for : 1
an integer for -> the : 1
integer for the -> current : 1
for the current -> and : 1
the current and -> the : 1
current and the -> by : 1
and the by -> making : 1
and the by -> available : 1
the by making -> the : 1
the user objects -> we : 1
user objects we -> saw : 1
objects we saw -> the : 1
we saw the -> performance : 1
saw the performance -> was : 1
the performance was -> improved : 1
performance was improved -> when : 1
was improved when -> iterating : 1
improved when iterating -> over : 1
over the the -> memory : 1
the the memory -> layout : 1
the memory layout -> of : 2
memory layout of -> an : 1
memory layout of -> the : 2
layout of an -> array : 1
of an array -> of : 1
array of user -> objects : 1
of user objects -> would : 1
user objects would -> look : 1
objects would look -> something : 1
the one shown -> in : 1
one shown in -> the : 1
following we will -> ignore : 1
we will ignore -> memory : 1
will ignore memory -> alignment : 1
ignore memory alignment -> and : 1
memory alignment and -> padding : 1
alignment and padding -> for : 1
and padding for -> but : 1
padding for but -> will : 1
for but will -> get : 1
but will get -> back : 1
will get back -> to : 1
get back to -> that : 1
back to that -> cdpaligncenter : 1
to that cdpaligncenter -> cdpaligncenter : 1
that cdpaligncenter cdpaligncenter -> objects : 1
cdpaligncenter cdpaligncenter objects -> stored : 1
cdpaligncenter objects stored -> contiguously : 1
objects stored contiguously -> in : 1
contiguously in a -> of : 1
in a of -> having : 1
in a of -> even : 1
a of having -> one : 1
of having one -> vector : 1
having one vector -> with : 1
one vector with -> user : 1
vector with user -> we : 1
with user we -> can : 1
user we can -> store : 1
we can store -> all : 1
can store all -> the : 1
store all the -> integer : 1
all the integer -> levels : 1
the integer levels -> and : 1
integer levels and -> flags : 1
levels and flags -> in : 1
and flags in -> separate : 1
flags in separate -> the : 1
in separate the -> current : 1
separate the current -> level : 1
the current level -> for : 1
current level for -> the : 1
level for the -> user : 1
for the user -> at : 1
for the user -> might : 1
the user at -> index : 1
the user at -> and : 1
user at index -> in : 1
at index in -> the : 2
the user array -> is : 1
the user array -> at : 1
user array is -> also : 1
array is also -> stored : 1
is also stored -> at : 1
also stored at -> index : 1
stored at index -> in : 1
in the level -> in : 1
the level in -> that : 1
level in that -> we : 1
we can avoid -> having : 1
we can avoid -> dangling : 1
we can avoid -> data : 1
can avoid having -> pointers : 1
avoid having pointers -> to : 1
having pointers to -> the : 1
the and instead -> just : 1
and instead just -> use : 1
instead just use -> the : 1
just use the -> index : 1
use the index -> for : 1
use the index -> to : 1
the index for -> connecting : 1
index for connecting -> the : 1
for connecting the -> data : 1
connecting the data -> we : 1
data we could -> do : 1
data we could -> protect : 1
we could do -> the : 1
could do the -> same : 1
the same thing -> with : 1
same thing with -> the : 1
thing with the -> field : 1
with the field -> and : 1
the field and -> end : 1
field and end -> up : 1
up with three -> parallel : 1
with three parallel -> arrays : 1
three parallel arrays -> instead : 1
three parallel arrays -> to : 1
parallel arrays instead -> of : 1
arrays instead of -> just : 1
of just the -> memory : 1
just the memory -> layout : 1
the three vectors -> would : 1
three vectors would -> look : 1
vectors would look -> something : 1
something like cdpaligncenter -> are : 1
something like cdpaligncenter -> space : 1
like cdpaligncenter are -> using : 1
cdpaligncenter are using -> three : 1
are using three -> parallel : 1
using three parallel -> arrays : 1
parallel arrays to -> make : 1
arrays to make -> iteration : 1
to make iteration -> over : 1
make iteration over -> one : 1
iteration over one -> particular : 1
over one particular -> field : 1
one particular field -> can : 1
particular field can -> now : 1
field can now -> compute : 1
can now compute -> the : 1
now compute the -> number : 1
compute the number -> of : 1
of users at -> a : 2
users at a -> specific : 1
users at a -> certain : 1
at a specific -> level : 1
at a specific -> we : 1
at a specific -> memory : 1
at a specific -> point : 1
a specific level -> by : 1
specific level by -> only : 1
level by only -> using : 1
by only using -> the : 2
only using the -> level : 1
only using the -> we : 1
using the level -> the : 1
the level the -> implementation : 1
level the implementation -> is : 1
implementation is now -> simply : 1
is now simply -> a : 1
now simply a -> wrapper : 1
simply a wrapper -> around : 1
a wrapper around -> const : 1
a wrapper around -> an : 1
wrapper around const -> scopedtimer : 1
around const scopedtimer -> using : 1
const scopedtimer using -> int : 1
scopedtimer using int -> return : 1
using int return -> only : 1
int return only -> needs : 1
return only needs -> to : 1
only needs to -> iterate : 1
only needs to -> pad : 1
needs to iterate -> over : 1
over the vector -> of : 1
the vector of -> booleans : 1
the vector of -> circles : 1
vector of booleans -> to : 1
of booleans to -> determine : 1
booleans to determine -> the : 1
to determine the -> number : 2
to determine the -> type : 1
determine the number -> of : 2
number of playing -> we : 1
of playing we -> use : 1
playing we use -> scopedtimer : 1
we use scopedtimer -> using : 1
use scopedtimer using -> return : 1
scopedtimer using return -> the : 1
using return the -> parallel : 1
return the parallel -> we : 1
the parallel we -> have : 1
the parallel we -> divide : 1
parallel we have -> to : 1
use the user -> array : 1
user array at -> the : 1
array at the -> amount : 1
at the amount -> of : 1
that is occupied -> by : 1
is occupied by -> the : 1
by the extracted -> arrays : 1
the extracted arrays -> is : 1
extracted arrays is -> substantially : 1
arrays is substantially -> smaller : 1
is substantially smaller -> than : 1
substantially smaller than -> the : 1
smaller than the -> user : 1
than the user -> so : 1
the user so -> see : 1
user so see -> if : 1
so see if -> we : 1
see if we -> have : 1
see if we -> can : 1
we have gained -> any : 1
have gained any -> performance : 1
gained any performance -> when : 1
any performance when -> running : 1
performance when running -> the : 1
running the functions -> on : 1
the functions on -> one : 1
functions on one -> million : 1
on one million -> users : 1
million users users -> auto : 1
users users auto -> levels : 1
users auto levels -> auto : 1
auto levels auto -> initialize : 1
levels auto initialize -> auto : 1
auto initialize auto -> auto : 1
initialize auto auto -> the : 1
auto auto the -> number : 1
auto the number -> of : 1
at a certain -> level : 1
a certain level -> only : 1
certain level only -> takes : 1
level only takes -> about : 1
only takes about -> ms : 1
about ms when -> using : 1
ms when using -> the : 1
using the array -> of : 1
the array of -> to : 1
array of to -> the : 1
to the initial -> version : 1
the initial version -> using : 1
initial version using -> the : 1
version using the -> class : 1
using the class -> with : 1
using the class -> might : 1
the class with -> a : 2
with a size -> of : 1
a size of -> bytes : 1
size of bytes -> took : 1
of bytes took -> around : 1
bytes took around -> the : 1
took around the -> smaller : 1
around the smaller -> class : 1
the smaller class -> executed : 1
smaller class executed -> in : 1
class executed in -> and : 1
executed in and -> by : 1
in and by -> only : 1
and by only -> using : 1
using the we -> are : 1
using the we -> do : 1
using the we -> must : 1
using the we -> learned : 1
the we are -> down : 1
the we are -> still : 1
the we are -> dealing : 1
we are down -> to : 1
are down to -> quite : 1
down to quite -> a : 1
to quite a -> dramatic : 1
quite a dramatic -> the : 1
a dramatic the -> second : 1
dramatic the second -> the : 1
the second the -> change : 1
second the change -> is : 1
the change is -> even : 1
change is even -> bigger : 1
is even bigger -> it : 1
even bigger it -> only : 1
bigger it only -> takes : 1
it only takes -> around : 1
only takes around -> ms : 1
takes around ms -> to : 1
around ms to -> count : 1
ms to count -> how : 1
to count how -> many : 1
count how many -> users : 1
are currently the -> reason : 1
currently the reason -> why : 1
reason why it -> can : 1
why it can -> be : 1
be so fast -> is : 1
so fast is -> thanks : 1
fast is thanks -> to : 1
is thanks to -> a : 1
thanks to a -> data : 1
to a data -> structure : 1
data structure called -> bit : 1
structure called bit -> it : 1
called bit it -> turns : 1
bit it turns -> out : 1
out that is -> not : 1
is not at -> all : 2
not at all -> a : 2
at all a -> standard : 1
at all a -> exclusive : 1
all a standard -> vector : 1
a standard vector -> of : 1
standard vector of -> a : 1
vector of a -> bit : 1
of a bit -> operations : 1
a bit operations -> such : 1
bit operations such -> as : 1
operations such as -> count : 1
such as count -> and : 1
as count and -> find : 1
count and find -> can : 1
and find can -> be : 1
find can be -> optimized : 1
can be optimized -> very : 1
be optimized very -> efficiently : 1
optimized very efficiently -> in : 1
very efficiently in -> a : 1
efficiently in a -> bit : 1
in a bit -> array : 1
a bit array -> since : 1
bit array since -> it : 1
array since it -> can : 1
since it can -> process : 1
it can process -> bits : 1
can process bits -> at : 1
process bits at -> a : 1
bits at a -> time : 1
at a time -> a : 1
at a time -> is : 1
a time a -> the : 1
time a the -> future : 1
a the future -> of : 1
a the future -> receiving : 1
the future of -> is : 1
future of is -> and : 1
of is and -> it : 1
is and it -> might : 1
might be deprecated -> soon : 1
be deprecated soon -> in : 1
deprecated soon in -> favor : 1
soon in favor -> of : 1
favor of the -> fixed : 1
of the fixed -> size : 1
the fixed size -> and : 1
fixed size and -> a : 1
fixed size and -> fixed : 1
and a new -> dynamically : 1
a new dynamically -> sized : 1
new dynamically sized -> there : 1
dynamically sized there -> is : 1
sized there is -> already : 1
there is already -> a : 1
is already a -> version : 1
already a version -> in : 1
a version in -> boost : 1
version in boost -> named : 1
in boost named -> is : 1
boost named is -> all : 1
named is all -> but : 1
is all but -> we : 1
all but we -> warned : 1
but we warned -> you : 1
we warned you -> about : 1
warned you about -> some : 1
you about some -> first : 1
about some first -> of : 1
some first of -> extracting : 1
first of extracting -> the : 1
of extracting the -> fields : 1
extracting the fields -> from : 1
the fields from -> the : 1
fields from the -> classes : 1
from the classes -> where : 1
the classes where -> they : 1
classes where they -> actually : 1
where they actually -> belong : 1
they actually belong -> will : 1
actually belong will -> have : 1
belong will have -> a : 1
have a big -> impact : 1
on the structure -> of : 1
the structure of -> the : 1
structure of the -> in : 1
the in some -> it : 1
in some it -> makes : 1
some it makes -> perfect : 1
it makes perfect -> sense : 1
makes perfect sense -> to : 1
perfect sense to -> split : 1
sense to split -> large : 1
to split large -> classes : 1
split large classes -> into : 1
large classes into -> smaller : 1
classes into smaller -> but : 1
into smaller but -> in : 1
smaller but in -> other : 1
but in other -> cases : 1
in other cases -> it : 1
other cases it -> totally : 1
cases it totally -> breaks : 1
it totally breaks -> encapsulation : 1
totally breaks encapsulation -> and : 1
breaks encapsulation and -> exposes : 1
encapsulation and exposes -> data : 1
and exposes data -> that : 1
exposes data that -> could : 1
data that could -> have : 1
that could have -> been : 1
have been hidden -> behind : 1
been hidden behind -> interfaces : 1
hidden behind interfaces -> with : 1
behind interfaces with -> higher : 1
interfaces with higher -> also : 1
with higher also -> cumbersome : 1
higher also cumbersome -> to : 1
also cumbersome to -> ensure : 1
cumbersome to ensure -> that : 1
to ensure that -> the : 1
to ensure that -> fields : 1
to ensure that -> data : 1
to ensure that -> no : 1
to ensure that -> we : 3
to ensure that -> it : 1
ensure that the -> arrays : 1
that the arrays -> are : 1
the arrays are -> in : 1
arrays are in -> such : 1
are in such -> that : 1
in such that -> we : 1
such that we -> always : 1
that we always -> need : 1
that we always -> want : 1
we always need -> to : 1
always need to -> ensure : 1
need to ensure -> that : 3
ensure that fields -> that : 1
that fields that -> comprise : 1
fields that comprise -> one : 1
that comprise one -> object : 1
comprise one object -> are : 1
one object are -> stored : 1
object are stored -> at : 1
are stored at -> the : 1
stored at the -> same : 1
same index in -> all : 1
index in all -> implicit : 1
in all implicit -> relationships : 1
all implicit relationships -> like : 1
implicit relationships like -> this : 1
relationships like this -> can : 1
like this can -> be : 1
can be hard -> to : 3
be hard to -> maintain : 1
be hard to -> guarantee : 1
be hard to -> reproduce : 1
be hard to -> step : 1
hard to maintain -> and : 1
to maintain and -> are : 1
maintain and are -> error : 1
and are error -> last : 1
are error last -> drawback : 1
error last drawback -> is : 1
last drawback is -> actually : 1
drawback is actually -> related : 1
is actually related -> to : 1
actually related to -> in : 1
related to in -> the : 1
preceding we saw -> that : 1
we saw that -> for : 1
we saw that -> allocates : 1
saw that for -> algorithms : 1
that for algorithms -> that : 1
for algorithms that -> iterate : 1
algorithms that iterate -> over : 1
iterate over one -> field : 1
over one field -> at : 1
one field at -> a : 1
field at a -> there : 1
at a there -> was : 1
at a there -> is : 1
a there was -> a : 1
there was a -> big : 1
was a big -> performance : 1
a big performance -> if : 1
big performance if -> we : 1
performance if we -> have : 1
algorithm that would -> need : 1
that would need -> to : 1
need to access -> multiple : 1
to access multiple -> fields : 1
access multiple fields -> that : 1
multiple fields that -> have : 1
fields that have -> been : 1
have been extracted -> to : 1
been extracted to -> different : 1
extracted to different -> it : 1
to different it -> would : 1
different it would -> be : 1
would be substantially -> slower : 1
be substantially slower -> than : 1
substantially slower than -> iterating : 1
slower than iterating -> over : 1
than iterating over -> one : 1
iterating over one -> array : 1
over one array -> with : 1
one array with -> bigger : 1
array with bigger -> as : 1
with bigger as -> is : 1
bigger as is -> always : 1
as is always -> the : 1
is always the -> case : 1
always the case -> when : 1
the case when -> working : 1
case when working -> with : 1
working with there -> is : 1
with there is -> nothing : 1
there is nothing -> that : 1
is nothing that -> comes : 1
nothing that comes -> without : 1
that comes without -> a : 1
comes without a -> and : 1
and the cost -> for : 1
the cost for -> exposing : 1
cost for exposing -> data : 1
for exposing data -> and : 1
exposing data and -> split : 1
data and split -> one : 1
and split one -> simple : 1
split one simple -> array : 1
one simple array -> into : 1
simple array into -> multiple : 1
array into multiple -> arrays : 1
into multiple arrays -> may : 1
multiple arrays may -> or : 1
arrays may or -> may : 1
may or may -> not : 5
or may not -> be : 3
or may not -> execute : 1
or may not -> use : 1
may not be -> too : 1
may not be -> associated : 1
may not be -> computed : 1
not be too -> it : 1
be too it -> all : 1
too it all -> depends : 1
it all depends -> on : 1
all depends on -> the : 1
depends on the -> scenario : 1
depends on the -> alignment : 1
depends on the -> global : 1
depends on the -> type : 1
on the scenario -> you : 1
the scenario you -> are : 1
scenario you are -> facing : 1
are facing and -> what : 1
facing and what -> performance : 1
and what performance -> gain : 1
what performance gain -> you : 1
performance gain you -> encounter : 1
gain you encounter -> after : 1
you encounter after -> consider : 1
encounter after consider -> parallel : 1
after consider parallel -> arrays : 1
consider parallel arrays -> before : 1
parallel arrays before -> you : 1
arrays before you -> actually : 1
before you actually -> face : 1
you actually face -> a : 1
actually face a -> real : 1
face a real -> performance : 1
a real performance -> always : 1
real performance always -> opt : 1
performance always opt -> for : 1
always opt for -> sound : 1
opt for sound -> design : 1
for sound design -> principles : 1
sound design principles -> at : 1
design principles at -> first : 1
principles at first -> and : 1
at first and -> prefer : 1
first and prefer -> explicit : 1
and prefer explicit -> ways : 1
prefer explicit ways -> of : 1
explicit ways of -> expressing : 1
ways of expressing -> relationships : 1
of expressing relationships -> between : 1
expressing relationships between -> objects : 1
relationships between objects -> rather : 1
between objects rather -> than : 1
objects rather than -> implicit : 1
rather than implicit -> this : 1
than implicit this -> we : 1
implicit this we -> have : 1
we have introduced -> the : 1
have introduced the -> container : 1
introduced the container -> types : 1
the container types -> from : 1
container types from -> we : 1
types from we -> have : 1
from we have -> seen : 1
have seen that -> the : 1
have seen that -> immutable : 1
seen that the -> way : 1
that the way -> we : 2
the way we -> structure : 1
the way we -> need : 1
the way we -> handle : 1
way we structure -> data : 1
we structure data -> has : 1
structure data has -> a : 1
data has a -> big : 1
has a big -> impact : 1
impact on how -> efficiently : 1
on how efficiently -> we : 1
how efficiently we -> can : 1
efficiently we can -> perform : 1
we can perform -> certain : 1
we can perform -> the : 1
can perform certain -> operations : 1
perform certain operations -> on : 1
certain operations on -> a : 1
operations on a -> collection : 1
operations on a -> dataset : 1
on a collection -> of : 1
of the asymptotic -> complexity : 1
asymptotic complexity specifications -> of : 1
complexity specifications of -> stl : 1
specifications of stl -> containers : 1
containers are key -> factors : 1
are key factors -> to : 1
key factors to -> consider : 1
factors to consider -> when : 1
consider when choosing -> among : 1
when choosing among -> the : 1
choosing among the -> different : 1
among the different -> data : 1
the different data -> we : 1
different data we -> have : 1
data we have -> seen : 1
have seen how -> the : 1
have seen how -> to : 2
seen how the -> cache : 1
how the cache -> hierarchy : 1
cache hierarchy in -> modern : 1
hierarchy in modern -> processors : 1
in modern processors -> impacts : 1
modern processors impacts -> the : 1
processors impacts the -> way : 1
impacts the way -> we : 1
way we need -> to : 1
need to organize -> data : 1
to organize data -> for : 1
organize data for -> efficient : 1
data for efficient -> access : 1
for efficient access -> to : 1
efficient access to -> the : 1
access to the -> importance : 1
access to the -> same : 1
to the importance -> of : 2
importance of utilizing -> the : 2
of utilizing the -> cache : 1
of utilizing the -> stl : 1
utilizing the cache -> levels : 1
the cache levels -> efficiently : 1
cache levels efficiently -> cannot : 1
levels efficiently cannot -> be : 1
efficiently cannot be -> stressed : 1
cannot be stressed -> this : 1
be stressed this -> is : 1
stressed this is -> one : 1
this is one -> of : 2
this is one -> more : 1
this is one -> possible : 1
this is one -> reason : 2
the reasons why -> the : 2
reasons why the -> containers : 1
reasons why the -> threads : 1
why the containers -> that : 1
the containers that -> keep : 1
containers that keep -> their : 1
that keep their -> elements : 1
keep their elements -> contiguously : 1
their elements contiguously -> in : 1
elements contiguously in -> memory : 1
in memory have -> become : 1
memory have become -> the : 1
have become the -> most : 1
become the most -> used : 1
most used such -> as : 1
used such as -> and : 1
as and deeper -> look : 1
look at this -> you : 1
look at this -> code : 1
at this you -> will : 1
will learn about -> the : 1
learn about the -> iterator : 1
about the iterator -> concept : 1
iterator concept and -> how : 1
concept and how -> versatile : 1
and how versatile -> it : 1
how versatile it -> can : 1
versatile it can -> even : 1
it can even -> though : 1
can even though -> its : 1
even though its -> syntax : 1
though its syntax -> mimics : 1
its syntax mimics -> a : 1
syntax mimics a -> plain : 1
mimics a plain -> old : 1
a plain old -> by : 1
plain old by -> looking : 1
old by looking -> at : 1
at some you -> will : 1
some you will -> also : 1
you will also -> learn : 1
will also learn -> how : 1
also learn how -> to : 2
how to create -> a : 2
how to create -> an : 1
how to create -> programs : 1
create a custom -> iterator : 2
a custom iterator -> that : 1
a custom iterator -> and : 1
custom iterator that -> iterates : 1
iterator that iterates -> a : 1
that iterates a -> linear : 1
iterates a linear -> iterator : 1
a linear iterator -> going : 1
linear iterator going -> further : 1
iterator going further -> into : 1
going further into -> stl : 1
further into stl -> we : 1
into stl we -> are : 1
stl we are -> going : 1
going to take -> a : 2
take a deeper -> look : 1
a deeper look -> at : 1
look at iterators -> in : 1
at iterators in -> as : 1
iterators in as -> they : 1
in as they -> form : 1
as they form -> the : 1
they form the -> basis : 1
form the basis -> of : 1
the basis of -> stl : 1
basis of stl -> note : 1
of stl note -> that : 1
stl note that -> the : 1
that the iterator -> concept : 1
concept is not -> at : 1
all a exclusive -> rather : 1
a exclusive rather -> it : 1
exclusive rather it -> exists : 1
rather it exists -> in : 1
it exists in -> most : 1
it exists in -> typename : 2
exists in most -> programming : 1
in most programming -> what : 1
most programming what -> differentiates : 1
programming what differentiates -> the : 1
what differentiates the -> implementation : 1
differentiates the implementation -> of : 1
of the iterator -> concept : 1
of the iterator -> pair : 1
iterator concept from -> other : 1
concept from other -> programming : 1
from other programming -> languages : 1
programming languages is -> that : 1
languages is that -> mimics : 1
is that mimics -> the : 1
that mimics the -> syntax : 1
mimics the syntax -> of : 1
the syntax of -> raw : 1
the syntax of -> iterators : 1
the syntax of -> algorithms : 1
the syntax of -> but : 1
the syntax of -> and : 1
syntax of raw -> memory : 1
of raw memory -> simplified : 1
raw memory simplified -> basic : 1
memory simplified basic -> iterator : 1
simplified basic iterator -> is : 1
basic iterator is -> an : 1
iterator is an -> object : 1
object which represent -> a : 1
which represent a -> position : 1
represent a position -> in : 1
a position in -> a : 1
a position in -> the : 1
position in a -> therefore : 1
in a therefore -> basically : 1
a therefore basically -> incorporate : 1
therefore basically incorporate -> the : 1
basically incorporate the -> following : 1
incorporate the following -> we : 1
following we out -> of : 1
we out of -> the : 1
as the value -> at : 1
as the value -> of : 1
the value at -> the : 2
value at the -> current : 1
value at the -> corresponding : 1
at the current -> position : 1
at the current -> which : 1
the current position -> to : 2
current position to -> the : 2
position to the -> next : 1
position to the -> previous : 1
the next position -> that : 1
next position that -> the : 1
position that the -> named : 1
that the named -> functions : 1
the named functions -> and : 1
named functions and -> so : 1
functions and so -> does : 1
and so does -> not : 1
so does not -> exist : 1
does not exist -> in : 1
not exist in -> they : 1
exist in they -> are : 1
in they are -> only : 1
they are only -> here : 1
they are only -> iterators : 1
are only here -> for : 1
only here for -> in : 1
here for in -> practice : 1
for in practice -> they : 1
in practice they -> are : 1
practice they are -> implemented : 1
they are implemented -> in : 1
are implemented in -> terms : 2
implemented in terms -> of : 2
terms of which -> will : 1
of which will -> be : 1
which will be -> discussed : 1
which will be -> allocated : 1
which will be -> placed : 1
be discussed further -> functions : 1
discussed further functions -> listed : 1
further functions listed -> above : 1
functions listed above -> are : 1
listed above are -> sufficient : 1
above are sufficient -> for : 1
are sufficient for -> reading : 1
sufficient for reading -> all : 1
for reading all -> elements : 1
reading all elements -> in : 1
elements in any -> standard : 1
in any standard -> but : 1
any standard but -> many : 1
standard but many -> algorithms : 1
but many algorithms -> requires : 1
many algorithms requires -> iterators : 1
algorithms requires iterators -> to : 1
requires iterators to -> be : 1
iterators to be -> able : 1
able to step -> as : 1
to step as -> well : 1
step as well -> as : 1
well as write -> a : 1
as write a -> value : 1
write a value -> to : 1
a value to -> a : 1
value to a -> specific : 1
a specific in -> other : 1
specific in other -> the : 1
the following three -> functions : 1
following three functions -> are : 1
three functions are -> also : 1
functions are also -> sometimes : 1
are also sometimes -> to : 1
also sometimes to -> the : 1
sometimes to the -> current : 1
to the current -> position : 1
to the current -> avoiding : 1
to the previous -> an : 1
to the previous -> but : 1
the previous an -> auxiliary : 1
previous an auxiliary -> number : 1
an auxiliary number -> of : 1
auxiliary number of -> elements : 1
of elements addition -> to : 1
elements addition to -> algorithmic : 1
addition to algorithmic -> iterators : 1
to algorithmic iterators -> might : 1
algorithmic iterators might -> operate : 1
iterators might operate -> data : 1
might operate data -> sources : 1
operate data sources -> where : 1
data sources where -> a : 1
sources where a -> write : 1
where a write -> or : 1
a write or -> read : 1
write or read -> implies : 1
or read implies -> a : 1
read implies a -> step : 1
implies a step -> examples : 1
a step examples -> of : 1
step examples of -> such : 1
examples of such -> data : 1
examples of such -> iterators : 1
examples of such -> algorithms : 1
of such data -> sources : 1
such data sources -> could : 1
data sources could -> be : 1
sources could be -> user : 1
could be user -> a : 1
be user a -> network : 1
user a network -> connection : 1
a network connection -> or : 1
network connection or -> a : 1
connection or a -> these : 1
or a these -> data : 1
a these data -> sources : 1
these data sources -> requires : 1
data sources requires -> the : 1
sources requires the -> following : 1
requires the following -> and : 1
the following and -> step : 1
the following and -> the : 1
following and step -> forward : 1
and step forward -> and : 1
and step forward -> might : 1
step forward and -> step : 1
step forward and -> backward : 1
forward and step -> forward : 1
step forward might -> seems : 1
forward might seems -> superfluous : 1
might seems superfluous -> as : 1
seems superfluous as -> it : 1
superfluous as it -> can : 1
be implemented as -> a : 1
be implemented as -> an : 1
as a number -> of : 1
number of or -> algorithms : 1
of or algorithms -> such : 1
or algorithms such -> as : 1
algorithms such as -> binary : 1
algorithms such as -> and : 2
algorithms such as -> or : 1
such as binary -> requires : 1
as binary requires -> iterators : 1
binary requires iterators -> which : 1
requires iterators which -> can : 1
iterators which can -> step : 1
iterators which can -> be : 1
which can step -> several : 1
can step several -> positions : 1
step several positions -> in : 1
several positions in -> constant : 1
positions in constant -> time : 1
constant time to -> perform : 1
time to perform -> therefore : 1
to perform therefore -> stl : 1
perform therefore stl -> differentiates : 1
therefore stl differentiates -> between : 1
stl differentiates between -> iterators : 1
differentiates between iterators -> which : 1
between iterators which -> can : 1
can be stepped -> several : 1
can be stepped -> any : 1
can be stepped -> to : 1
be stepped several -> position : 1
stepped several position -> in : 1
several position in -> constant : 1
position in constant -> binary : 1
in constant binary -> search : 1
constant binary search -> algorithms : 1
binary search algorithms -> in : 1
search algorithms in -> we : 1
algorithms in we -> think : 1
in we think -> about : 1
we think about -> a : 1
think about a -> few : 1
about a few -> basic : 1
a few basic -> it : 1
a few basic -> which : 1
few basic it -> becomes : 1
basic it becomes -> obvious : 1
it becomes obvious -> that : 1
becomes obvious that -> the : 1
that the requirements -> on : 1
the requirements on -> the : 1
requirements on the -> iterators : 1
on the iterators -> vary : 1
the iterators vary -> between : 1
iterators vary between -> different : 1
vary between different -> an : 1
between different an -> algorithm : 1
different an algorithm -> count : 1
an algorithm count -> the : 1
algorithm count the -> number : 1
number of occurrences -> of : 1
of occurrences of -> a : 1
occurrences of a -> it : 1
of a it -> requires : 1
of a it -> is : 1
of a it -> would : 1
a it requires -> and : 1
a it requires -> binary : 1
it requires and -> an : 1
requires and an -> algorithm : 1
and an algorithm -> fill : 1
an algorithm fill -> a : 1
algorithm fill a -> container : 1
fill a container -> with : 1
with a it -> requires : 1
with a it -> is : 1
it requires binary -> search : 1
requires binary search -> algorithm : 1
binary search algorithm -> on : 1
search algorithm on -> a : 1
algorithm on a -> sorted : 1
on a sorted -> range : 1
a sorted range -> and : 1
sorted range and -> algorithm : 1
range and algorithm -> which : 1
and algorithm which -> rearrange : 1
algorithm which rearrange -> the : 1
which rearrange the -> elements : 1
rearrange the elements -> requires : 1
the elements requires -> and : 1
elements requires and -> categorized : 1
requires and categorized -> into : 1
and categorized into -> four : 1
categorized into four -> basic : 1
into four basic -> iterator : 1
four basic iterator -> categories : 1
basic iterator categories -> the : 1
iterator categories the -> iterator : 1
categories the iterator -> can : 1
the iterator can -> step : 1
the iterator can -> be : 1
iterator can step -> forward : 1
can step forward -> can : 1
can step forward -> and : 1
step forward can -> step : 1
forward can step -> forward : 1
forward and backward -> the : 1
and backward the -> iterator : 1
backward the iterator -> can : 1
be stepped any -> number : 1
stepped any number -> of : 1
any number of -> steps : 1
any number of -> example : 1
any number of -> arguments : 1
number of steps -> in : 1
number of steps -> between : 1
number of steps -> from : 1
number of steps -> we : 1
of steps in -> constant : 1
steps in constant -> time : 1
constant time special -> case : 1
time special case -> where : 1
special case where -> the : 1
where the underlying -> data : 1
the underlying data -> is : 1
underlying data is -> a : 1
is a contiguous -> block : 1
is a contiguous -> memory : 1
a contiguous block -> of : 1
contiguous block of -> such : 1
block of such -> as : 1
as and the -> iterators : 1
as and the -> will : 1
as and the -> old : 1
as and the -> image : 1
and the iterators -> compliant : 1
the iterators compliant -> with : 1
iterators compliant with -> the : 1
with the functions -> we : 1
the functions we -> denoted : 1
functions we denoted -> have : 1
we denoted have -> named : 1
denoted have named -> the : 1
have named the -> iterator : 1
named the iterator -> supports : 1
the iterator supports -> the : 1
the iterator supports -> that : 1
iterator supports the -> iterator : 1
supports the iterator -> supports : 1
iterator supports that -> we : 1
supports that we -> covered : 1
that we covered -> the : 1
we covered the -> basics : 1
covered the basics -> of : 2
basics of see -> how : 1
of see how -> implements : 1
of see how -> much : 1
see how implements -> it : 1
how implements it -> as : 1
implements it as -> mentioned : 1
it as mentioned -> the : 1
mentioned the syntax -> of : 1
syntax of iterators -> are : 1
of iterators are -> implemented : 1
iterators are implemented -> in : 1
terms of standard -> c : 1
of standard c -> pointer : 1
standard c pointer -> this : 1
c pointer this -> means : 1
pointer this means -> that : 1
means that any -> algorithm : 1
that any algorithm -> built : 1
any algorithm built -> upon : 1
algorithm built upon -> iterators : 1
built upon iterators -> will : 1
upon iterators will -> also : 1
iterators will also -> work : 1
will also work -> with : 1
also work with -> regular : 1
work with regular -> c : 1
with regular c -> step : 1
regular c step -> functions : 1
c step functions -> are : 1
step functions are -> implemented : 1
functions are implemented -> using : 1
functions are implemented -> by : 1
are implemented using -> pointer : 1
implemented using pointer -> the : 1
using pointer the -> following : 1
pointer the following -> table : 1
table shows which -> operator : 1
shows which operator -> is : 1
which operator is -> overloaded : 1
operator is overloaded -> for : 1
is overloaded for -> each : 1
is overloaded for -> reflectable : 1
overloaded for each -> step : 1
for each step -> and : 1
each step and -> how : 1
step and how -> to : 1
how to invoke -> the : 1
to invoke the -> function : 1
to invoke the -> infix : 1
to invoke the -> typename : 1
invoke the function -> on : 1
the function on -> an : 1
the function on -> the : 1
function on an -> imagined : 1
on an imagined -> iterator : 1
an imagined iterator -> object : 1
imagined iterator object -> called : 1
iterator object called -> and : 1
object called and -> functions : 1
called and functions -> are : 1
and functions are -> implemented : 1
are implemented by -> just : 1
implemented by just -> like : 1
by just like -> dereferencing : 1
just like dereferencing -> a : 1
like dereferencing a -> the : 1
dereferencing a the -> following : 1
a the following -> table : 1
a the following -> example : 1
table shows how -> they : 1
table shows how -> we : 1
shows how they -> are : 1
how they are -> value : 1
how they are -> allowed : 1
they are value -> function : 1
are value function -> is : 1
value function is -> implemented : 1
function is implemented -> by : 1
function is implemented -> as : 1
is implemented by -> comparing : 1
implemented by comparing -> with : 1
by comparing with -> a : 1
comparing with a -> value : 1
with a value -> which : 1
a value which -> indicates : 2
a value which -> is : 1
value which indicates -> the : 2
which indicates the -> iterator : 1
which indicates the -> end : 1
indicates the iterator -> is : 1
the iterator is -> pointing : 1
iterator is pointing -> out : 1
is pointing out -> of : 1
pointing out of -> the : 1
of the range -> the : 1
of the range -> for : 1
of the range -> is : 1
the range the -> following : 1
range the following -> table : 1
we would implement -> in : 1
we would implement -> with : 1
would implement in -> regular : 1
implement in regular -> pointer : 1
in regular pointer -> arithmetic : 1
regular pointer arithmetic -> iterating : 1
pointer arithmetic iterating -> a : 1
arithmetic iterating a -> standard : 1
iterating a standard -> and : 1
a standard and -> a : 1
standard and a -> linked : 1
and a linked -> linked : 1
a linked linked -> construct : 1
linked linked construct -> an : 1
linked construct an -> begin : 1
construct an begin -> end : 1
an begin end -> ptr : 1
begin end ptr -> ptr : 1
end ptr ptr -> construct : 1
ptr ptr construct -> a : 1
ptr construct a -> simple : 1
construct a simple -> linked : 1
a simple linked -> element : 1
simple linked element -> begin : 1
linked element begin -> end : 1
element begin end -> auto : 1
begin end auto -> ptr : 1
end auto ptr -> ptr : 1
auto ptr ptr -> ptr : 1
ptr ptr ptr -> implementing : 1
ptr ptr implementing -> an : 1
ptr implementing an -> iterator : 1
implementing an iterator -> in : 1
an iterator in -> whatever : 1
iterator in whatever -> the : 1
in whatever the -> iterator : 1
whatever the iterator -> the : 1
the iterator the -> same : 1
the iterator the -> category : 1
the iterator the -> intiterator : 1
iterator the same -> methodology : 1
the same methodology -> has : 1
same methodology has -> to : 1
methodology has to -> be : 1
to be the -> equivalent : 1
to be the -> group : 1
be the equivalent -> of : 1
the equivalent of -> implementing : 1
the equivalent of -> manually : 1
the equivalent of -> the : 1
the equivalent of -> how : 1
equivalent of implementing -> the : 1
of implementing the -> function : 1
implementing the function -> denoted : 1
the function denoted -> is : 1
function denoted is -> to : 1
denoted is to -> compare : 1
is to compare -> the : 1
compare the iterator -> to : 1
the iterator to -> a : 1
the iterator to -> be : 1
to a value -> which : 1
indicates the end -> of : 1
of the functions -> utilized : 1
of the functions -> from : 1
the functions utilized -> by : 1
functions utilized by -> and : 1
utilized by and -> are : 1
utilized by and -> is : 1
and are only -> possible : 1
are only possible -> to : 1
only possible to -> express : 1
possible to express -> with : 1
to express with -> two : 1
express with two -> succeeding : 1
with two succeeding -> the : 1
two succeeding the -> first : 1
succeeding the first -> expression : 1
the first expression -> has : 1
first expression has -> the : 1
expression has the -> that : 1
has the that -> the : 1
the that the -> second : 1
the that the -> class : 1
that the second -> expression : 1
that the second -> version : 1
the second expression -> must : 1
second expression must -> be : 1
expression must be -> val : 1
must be val -> implementing : 1
be val implementing -> an : 1
val implementing an -> advanced : 1
implementing an advanced -> advantageous : 1
an advanced advantageous -> to : 1
advanced advantageous to -> use : 1
advantageous to use -> the : 1
library in which -> you : 1
in which you -> can : 1
which you can -> implement : 1
you can implement -> the : 1
you can implement -> something : 1
can implement the -> functionality : 1
implement the functionality -> in : 1
the functionality in -> named : 1
functionality in named -> similar : 1
in named similar -> to : 1
named similar to -> the : 1
to the example -> functions : 1
to the example -> earlier : 1
to the example -> from : 1
the example functions -> the : 1
example functions the -> iterator : 1
functions the iterator -> facade : 1
the iterator facade -> then : 1
iterator facade then -> handles : 1
facade then handles -> the : 1
then handles the -> conversion : 1
handles the conversion -> to : 1
the conversion to -> more : 1
conversion to more -> information : 1
to more information -> is : 1
more information is -> available : 1
information is available -> at : 1
is available at -> as : 1
is available at -> compiling : 1
is available at -> we : 1
available at as -> deeper : 1
at as deeper -> into : 1
as deeper into -> the : 1
into the iterator -> one : 1
the iterator one -> can : 1
iterator one can -> see : 1
one can see -> that : 1
see that it -> does : 1
see that it -> happens : 1
that it does -> not : 2
it does not -> actually : 1
it does not -> allocate : 1
it does not -> assure : 1
it does not -> use : 1
it does not -> operate : 1
does not actually -> need : 1
does not actually -> remove : 1
not actually need -> to : 1
actually need to -> point : 1
need to point -> to : 1
to point to -> actual : 1
point to actual -> we : 1
to actual we -> could : 1
actual we could -> simply : 1
we could simply -> generate : 1
we could simply -> create : 1
could simply generate -> values : 1
simply generate values -> on : 1
generate values on -> the : 1
values on the -> here : 1
on the here -> is : 1
the here is -> a : 2
a simple implementation -> of : 1
simple implementation of -> a : 1
of a forward -> iterator : 1
a forward iterator -> that : 1
forward iterator that -> generates : 1
iterator that generates -> integers : 1
that generates integers -> on : 1
generates integers on -> the : 1
integers on the -> it : 1
on the it -> only : 1
on the it -> tries : 1
the it only -> fulfills : 1
it only fulfills -> two : 1
only fulfills two -> iterator : 1
fulfills two iterator -> intiterator : 1
two iterator intiterator -> auto : 1
iterator intiterator auto -> return : 1
intiterator auto return -> auto : 1
return auto return -> const : 1
return auto return -> return : 1
return auto return -> t : 1
return auto return -> we : 2
return auto return -> auto : 2
auto return const -> return : 1
auto return const -> namespace : 1
return int can -> then : 1
int can then -> be : 1
can then be -> used : 3
can then be -> utilized : 1
can then be -> with : 1
can then be -> further : 1
then be used -> to : 1
then be used -> like : 2
used to iterate -> an : 1
used to iterate -> a : 1
to iterate an -> increasing : 1
iterate an increasing -> range : 1
an increasing range -> of : 1
increasing range of -> integers : 1
range of integers -> just : 1
of integers just -> like : 1
integers just like -> if : 1
just like if -> it : 1
like if it -> was : 1
like if it -> were : 1
like if it -> contained : 1
if it was -> a : 2
was a container -> of : 1
was a container -> explicitly : 1
container of first -> start : 1
of first start -> at : 1
first start at -> last : 1
start at last -> stop : 1
at last stop -> when : 1
last stop when -> equal : 1
stop when equal -> to : 1
when equal to -> it : 1
equal to it -> it : 1
to it it -> prints : 1
it it prints -> stl : 1
it prints stl -> differentiates : 1
prints stl differentiates -> iterators : 1
stl differentiates iterators -> by : 1
differentiates iterators by -> which : 1
iterators by which -> categories : 1
by which categories -> they : 1
which categories they -> this : 1
categories they this -> is : 1
they this is -> achieved : 1
this is achieved -> by : 4
is achieved by -> defining : 1
is achieved by -> using : 3
achieved by defining -> the : 1
by defining the -> following : 1
defining the following -> five : 1
the following five -> specific : 1
following five specific -> types : 1
five specific types -> in : 1
specific types in -> the : 1
types in the -> iterator : 1
types in the -> const : 1
in the iterator -> the : 1
in the iterator -> and : 1
iterator the category -> the : 1
the category the -> iterator : 1
category the iterator -> fulfills : 1
the iterator fulfills -> the : 1
iterator fulfills the -> type : 1
fulfills the type -> used : 1
the type used -> to : 1
the type used -> for : 1
type used to -> store : 1
used to store -> the : 1
store the distance -> between : 1
the distance between -> two : 2
the distance between -> the : 1
distance between two -> iterators : 1
distance between two -> dimensional : 1
distance between two -> say : 1
distance between two -> points : 1
between two iterators -> the : 1
two iterators the -> value : 1
iterators the value -> the : 1
value the iterator -> returns : 1
the iterator returns -> when : 1
iterator returns when -> dereferenced : 1
returns when dereferenced -> the : 1
when dereferenced the -> type : 1
dereferenced the type -> used : 1
type used for -> referencing : 1
used for referencing -> the : 1
for referencing the -> the : 1
referencing the the -> type : 1
the the type -> of : 1
the the type -> returned : 1
type of pointer -> used : 1
of pointer used -> for : 1
pointer used for -> pointing : 1
used for pointing -> to : 1
for pointing to -> the : 1
pointing to the -> the : 1
the the the -> following : 1
the the the -> execution : 1
the the following -> types : 1
the the following -> example : 1
the following types -> would : 1
following types would -> be : 1
types would be -> intiterator : 1
would be intiterator -> using : 1
be intiterator using -> using : 1
intiterator using using -> using : 1
using using using -> reference : 2
using using reference -> using : 2
using reference using -> pointer : 2
reference using pointer -> using : 2
using pointer using -> might : 1
using pointer using -> t : 1
pointer using might -> seem : 1
using might seem -> superfluous : 1
might seem superfluous -> to : 1
seem superfluous to -> define : 1
superfluous to define -> both : 1
to define both -> reference : 1
define both reference -> and : 1
both reference and -> but : 1
reference and but -> for : 1
and but for -> many : 1
but for many -> iterators : 1
for many iterators -> these : 1
many iterators these -> types : 1
iterators these types -> are : 1
these types are -> either : 1
types are either -> not : 1
are either not -> applicable : 1
either not applicable -> are : 1
not applicable are -> then : 1
applicable are then -> defined : 1
are then defined -> or : 1
then defined or -> they : 1
defined or they -> use : 1
or they use -> other : 1
they use other -> mechanism : 1
use other mechanism -> to : 1
other mechanism to -> point : 1
mechanism to point -> or : 1
to point or -> examples : 1
point or examples -> of : 1
or examples of -> such : 1
of such iterators -> will : 1
such iterators will -> be : 1
iterators will be -> discussed : 1
we can create -> a : 3
we can create -> generic : 1
can create a -> vector : 1
can create a -> function : 1
can create a -> generic : 1
create a vector -> of : 1
vector of numbers -> from : 1
vector of numbers -> like : 1
of numbers from -> to : 1
numbers from to -> by : 1
from to by -> copying : 1
to by copying -> note : 1
by copying note -> how : 1
copying note how -> we : 1
note how we -> use : 1
how we use -> even : 1
how we use -> the : 1
we use even -> though : 1
use even though -> the : 1
even though the -> copied : 1
even though the -> benefit : 1
even though the -> alignment : 1
even though the -> member : 1
even though the -> producer : 1
though the copied -> values : 1
the copied values -> are : 1
copied values are -> generated : 1
values are generated -> on : 1
are generated on -> the : 1
generated on the -> numbers : 1
generated on the -> and : 1
on the numbers -> numbers : 1
the numbers numbers -> is : 1
numbers numbers is -> that : 1
numbers is that -> this : 1
is that this -> example : 1
that this example -> uses : 1
that this example -> can : 1
this example uses -> the : 1
example uses the -> way : 1
uses the way -> of : 1
the way of -> defining : 1
the way of -> we : 1
way of defining -> iterator : 1
of defining iterator -> traits : 1
defining iterator traits -> for : 1
defining iterator traits -> was : 1
iterator traits for -> a : 1
traits for a -> custom : 1
for a custom -> defining : 1
a custom defining -> iterator : 1
custom defining iterator -> traits : 1
iterator traits was -> more : 1
traits was more -> as : 1
was more as -> it : 1
more as it -> required : 1
as it required -> overloading : 1
it required overloading -> or : 1
required overloading or -> is : 1
overloading or is -> now : 1
or is now -> a : 1
is now a -> function : 1
is now a -> lot : 1
now a function -> using : 1
using iterator order -> to : 1
iterator order to -> read : 1
order to read -> properties : 1
to read properties -> of : 1
read properties of -> an : 1
properties of an -> the : 1
an the stl -> class : 1
the stl class -> be : 1
stl class be -> not : 1
class be not -> the : 1
be not the -> raw : 1
not the raw -> iterator : 1
the raw iterator -> category : 1
raw iterator category -> say : 1
iterator category say -> we : 1
category say we -> want : 1
want to implement -> a : 1
to implement a -> template : 1
to implement a -> rudimentary : 1
to implement a -> stateful : 1
to implement a -> parallel : 1
implement a template -> function : 1
a template function -> called : 1
a template function -> to : 1
template function called -> equivalent : 1
function called equivalent -> of : 1
called equivalent of -> which : 1
equivalent of which -> returns : 1
equivalent of which -> we : 1
of which returns -> the : 1
which returns the -> number : 1
which returns the -> overload : 1
which returns the -> hash : 1
of steps between -> two : 1
steps between two -> the : 1
two the iterator -> category : 1
the iterator category -> is : 1
iterator category is -> random : 1
category is random -> access : 1
is random access -> we : 1
access we simply -> subtract : 1
we simply subtract -> the : 1
simply subtract the -> difference : 1
subtract the difference -> between : 1
the difference between -> the : 3
the difference between -> views : 1
the difference between -> lazy : 1
the difference between -> calling : 1
difference between the -> iterator : 1
difference between the -> template : 1
difference between the -> two : 1
between the iterator -> and : 1
the iterator and -> we : 1
the iterator and -> its : 1
the iterator and -> algorithm : 1
iterator and we -> have : 1
have to calculate -> the : 1
to calculate the -> number : 1
to calculate the -> median : 1
to calculate the -> sum : 2
to calculate the -> at : 1
calculate the number -> of : 1
of steps from -> iterator : 1
steps from iterator -> to : 1
from iterator to -> iterator : 1
iterator to iterator -> tag : 1
to iterator tag -> and : 1
iterator tag and -> the : 1
tag and the -> distance : 1
and the distance -> function : 1
the distance function -> is : 1
the distance function -> with : 1
the distance function -> returned : 1
distance function is -> implemented : 1
is implemented as -> iterator : 1
is implemented as -> taking : 1
implemented as iterator -> traits : 1
as iterator traits -> category : 1
iterator traits category -> difference : 1
traits category difference -> constexpr : 1
category difference constexpr -> b : 1
difference constexpr b -> steps : 1
constexpr b steps -> function : 1
b steps function -> can : 1
steps function can -> now : 1
function can now -> be : 1
can now be -> used : 1
can now be -> utilized : 1
now be used -> with : 1
with any compliant -> as : 1
any compliant as -> well : 1
compliant as well -> as : 1
well as regular -> and : 1
as regular and -> chooses : 1
regular and chooses -> a : 1
and chooses a -> correct : 1
chooses a correct -> implementation : 1
correct implementation depending -> on : 1
implementation depending on -> the : 1
on the iterator -> the : 1
on the iterator -> to : 1
intiterator to order -> to : 1
to order to -> make : 1
order to make -> it : 1
order to make -> the : 4
order to make -> our : 1
order to make -> something : 1
make it possible -> to : 2
to iterate a -> range : 2
to iterate a -> vector : 1
iterate a range -> of : 3
range of numbers -> in : 1
range of numbers -> as : 1
range of numbers -> that : 1
of numbers in -> we : 1
numbers in we -> add : 1
in we add -> and : 1
we add and -> to : 1
add and to -> intiterator : 1
and to intiterator -> using : 1
to intiterator using -> return : 1
intiterator using return -> is : 1
using return is -> an : 1
example of iterating -> in : 1
of iterating in -> reverse : 1
iterating in reverse -> it : 1
in reverse it -> it : 1
reverse it it -> example : 1
it it example -> iterating : 1
it example iterating -> floating : 1
within a address -> a : 1
a address a -> fundamental : 1
address a fundamental -> problem : 1
a fundamental problem -> with : 1
fundamental problem with -> floating : 1
problem with floating -> point : 1
with floating point -> they : 1
floating point they -> are : 1
point they are -> very : 1
they are very -> often : 1
they are very -> special : 1
are very often -> not : 1
very often not -> exact : 1
often not exact -> representations : 1
not exact representations -> of : 1
exact representations of -> the : 1
representations of the -> values : 1
the values assigned -> to : 1
values assigned to -> rather : 1
assigned to rather -> they : 1
to rather they -> often : 1
rather they often -> represent : 1
they often represent -> something : 1
often represent something -> very : 1
represent something very -> near : 1
something very near -> the : 1
very near the -> assigned : 1
near the assigned -> often : 1
the assigned often -> when : 1
assigned often when -> i : 1
often when i -> would : 1
when i would -> like : 1
like to iterate -> from : 1
like to iterate -> our : 1
to iterate from -> to : 1
iterate from to -> with : 1
from to with -> a : 1
from to with -> eleven : 1
from to with -> four : 1
to with a -> step : 1
with a step -> length : 1
a step length -> of : 3
step length of -> i : 1
step length of -> will : 1
step length of -> result : 1
length of i -> conveniently : 1
of i conveniently -> start : 1
i conveniently start -> with : 1
conveniently start with -> something : 1
start with something -> like : 1
with something like -> t : 1
something like t -> t : 1
like t t -> t : 1
t t t -> t : 1
t t t -> prints : 1
t t t -> auto : 1
t t prints -> subtle : 1
t t prints -> this : 1
t t prints -> the : 1
t prints subtle -> problem : 1
prints subtle problem -> here : 1
subtle problem here -> is : 1
problem here is -> that : 2
is that cannot -> be : 1
that cannot be -> represented : 1
cannot be represented -> by : 1
be represented by -> a : 1
by a floating -> point : 1
a floating point -> it : 2
a floating point -> syntax : 1
a floating point -> as : 1
a floating point -> value : 1
a floating point -> if : 1
floating point it -> is : 1
floating point it -> will : 1
point it is -> represented : 1
it is represented -> by : 1
represented by something -> slightly : 1
by something slightly -> larger : 1
something slightly larger -> and : 1
slightly larger and -> therefore : 1
larger and therefore -> the : 1
therefore the loop -> will : 1
the loop will -> not : 1
loop will not -> reach : 1
will not reach -> solve : 1
not reach solve -> we : 1
reach solve we -> can : 1
solve we can -> represent : 1
we can represent -> this : 1
can represent this -> range : 1
represent this range -> of : 1
this range of -> floating : 1
range of floating -> points : 1
range of floating -> point : 1
of floating points -> as : 1
floating points as -> a : 1
points as a -> start : 1
as a start -> a : 1
a start a -> stop : 1
start a stop -> and : 1
a stop and -> a : 1
stop and a -> number : 1
and a number -> of : 1
of steps we -> are : 1
steps we are -> required : 1
we are required -> to : 2
required to do -> something : 1
to do something -> like : 1
do something like -> i : 1
something like i -> i : 1
like i i -> float : 1
i i float -> t : 1
i float t -> t : 1
float t t -> prints : 1
t prints this -> code : 1
prints this code -> is : 1
this code is -> quite : 1
this code is -> based : 1
this code is -> executed : 1
code is quite -> obscure : 1
is quite obscure -> for : 1
quite obscure for -> such : 1
obscure for such -> a : 1
for such a -> simple : 1
such a simple -> like : 1
such a simple -> task : 1
a simple like -> to : 1
simple like to -> wrap : 1
like to wrap -> it : 1
to wrap it -> in : 1
wrap it in -> a : 1
it in a -> range : 1
in a range -> so : 1
a range so -> that : 1
range so that -> we : 1
can simply type -> t : 1
simply type t -> prints : 1
type t prints -> use : 1
t prints use -> the : 1
prints use the -> number : 1
use the number -> of : 1
of values when -> number : 1
values when number -> of : 1
when number of -> so : 1
number of so -> the : 1
of so the -> last : 1
so the last -> parameter : 1
the last parameter -> is : 1
last parameter is -> usage : 1
parameter is usage -> from : 1
is usage from -> to : 1
usage from to -> at : 1
from to at -> a : 2
to at a -> step : 2
at a step -> length : 2
length of will -> result : 1
of will result -> in : 1
result in ten -> and : 1
in ten and -> eleven : 1
ten and eleven -> values : 1
and eleven values -> cdpaligncenter : 1
eleven values cdpaligncenter -> when : 1
values cdpaligncenter when -> iterating : 1
cdpaligncenter when iterating -> from : 2
when iterating from -> to : 2
iterating from to -> with : 2
to with eleven -> from : 1
with eleven from -> to : 1
eleven from to -> at : 1
length of result -> in : 1
of result in -> three : 1
result in three -> steps : 1
in three steps -> cdpaligncenter : 1
three steps cdpaligncenter -> when : 1
steps cdpaligncenter when -> iterating : 1
to with four -> iterators : 1
with four iterators -> we : 1
four iterators we -> are : 1
iterators we are -> about : 1
we are about -> to : 1
are about to -> create : 1
about to create -> will : 1
to create will -> be : 1
create will be -> built : 1
will be built -> upon : 1
be built upon -> two : 1
built upon two -> utility : 1
upon two utility -> one : 1
two utility one -> for : 1
utility one for -> calculating : 1
one for calculating -> the : 1
for calculating the -> step : 1
calculating the step -> and : 1
the step and -> one : 1
the step and -> the : 1
step and one -> for : 1
and one for -> retrieving : 1
and one for -> the : 2
and one for -> float : 1
one for retrieving -> the : 1
for retrieving the -> value : 1
retrieving the value -> of : 1
value of a -> specific : 1
of a specific -> step : 1
of a specific -> pixel : 1
a specific step -> index : 1
specific step index -> using : 1
step index using -> the : 1
index using the -> start : 1
using the start -> value : 1
the start value -> and : 1
start value and -> the : 1
value and the -> step : 1
value and the -> promise : 1
and the step -> for : 1
the step for -> we : 1
step for we -> prevented : 1
for we prevented -> a : 1
we prevented a -> range : 1
prevented a range -> from : 1
a range from -> having : 1
range from having -> fewer : 1
from having fewer -> than : 1
having fewer than -> two : 1
fewer than two -> calculate : 1
than two calculate -> the : 1
two calculate the -> step : 1
calculate the step -> we : 1
the step we -> will : 1
step we will -> need : 1
we will need -> the : 1
we will need -> step : 1
we will need -> a : 1
need the stop -> and : 1
the stop and -> the : 1
stop and the -> number : 1
of values t -> return : 1
values t return -> calculate : 1
t return calculate -> a : 1
return calculate a -> linear : 1
calculate a linear -> value : 1
a linear value -> at : 1
linear value at -> a : 1
value at a -> specific : 1
a specific we -> will : 1
a specific we -> are : 1
specific we will -> need : 1
will need step -> and : 1
need step and -> value : 1
step and value -> index : 1
and value index -> t : 1
value index t -> return : 1
index t return -> start : 1
t return start -> these : 1
return start these -> utility : 1
start these utility -> we : 1
these utility we -> can : 1
utility we can -> iterate : 1
we can iterate -> a : 1
we can iterate -> the : 1
can iterate a -> range : 1
of floating point -> numbers : 1
floating point numbers -> by : 1
point numbers by -> referring : 1
numbers by referring -> to : 1
by referring to -> their : 1
by referring to -> not : 1
referring to their -> index : 1
to their index -> in : 1
index in a -> rather : 1
index in a -> or : 1
in a rather -> than : 1
a rather than -> the : 1
rather than the -> actual : 1
rather than the -> storage : 1
than the actual -> as : 1
the actual as -> shown : 1
actual as shown -> start : 1
as shown start -> stop : 1
shown start stop -> i : 1
start stop i -> i : 1
stop i i -> auto : 1
i auto t -> t : 1
auto t t -> prints : 1
auto t t -> return : 1
t prints the -> index : 1
prints the index -> is : 1
index is advantageous -> as : 1
is advantageous as -> it : 1
advantageous as it -> relieves : 1
as it relieves -> us : 1
it relieves us -> from : 1
relieves us from -> making : 1
relieves us from -> cdpaligncenter : 1
us from making -> mistakes : 1
from making mistakes -> related : 1
making mistakes related -> to : 1
mistakes related to -> floating : 1
related to floating -> point : 1
to floating point -> to : 1
to floating point -> there : 1
floating point to -> construct : 1
point to construct -> a : 1
linear range generalize -> this : 1
range generalize this -> functionality : 1
generalize this functionality -> into : 1
this functionality into -> something : 1
functionality into something -> usable : 1
into something usable -> with : 1
something usable with -> by : 1
usable with by -> wrapping : 1
with by wrapping -> it : 1
by wrapping it -> into : 1
wrapping it into -> iterators : 1
it into iterators -> and : 1
into iterators and -> a : 1
iterators and a -> this : 1
and a this -> we : 1
a this we -> can : 1
we can utilize -> it : 1
we can utilize -> the : 1
can utilize it -> as : 1
utilize it as -> a : 1
as a first -> class : 1
a first class -> citizen : 1
first class citizen -> of : 1
class citizen of -> in : 1
citizen of in -> both : 1
of in both -> and : 1
in both and -> the : 1
both and the -> following : 1
following table demonstrate -> this : 1
table demonstrate this -> range : 1
demonstrate this range -> and : 1
this range and -> range : 1
range and range -> and : 1
and range and -> a : 1
range and a -> range : 1
and a range -> based : 1
and a range -> of : 1
a range based -> r : 1
a range based -> is : 1
range based r -> vec : 1
based r vec -> vec : 1
r vec vec -> is : 2
vec vec is -> r : 1
vec vec is -> we : 1
vec is r -> vec : 1
is r vec -> vec : 1
vec is we -> need : 1
is we need -> an : 1
we need an -> iterator : 1
need an iterator -> that : 1
an iterator that -> is : 1
iterator that is -> aware : 1
that is aware -> of : 1
is aware of -> the : 1
of the start -> the : 1
the start the -> step : 1
start the step -> and : 1
step and the -> current : 1
and the current -> step : 1
the current step -> it : 1
current step it -> is : 1
step it is -> currently : 1
it is currently -> as : 1
it is currently -> storing : 1
is currently as -> the : 1
currently as the -> iterator : 1
as the iterator -> merely : 1
the iterator merely -> represents : 1
iterator merely represents -> a : 1
merely represents a -> position : 1
represents a position -> in : 1
position in the -> linear : 1
in the linear -> we : 1
the linear we -> do : 1
linear we do -> not : 1
do not need -> to : 1
need to store -> the : 1
store the stop -> note : 1
the stop note -> how : 1
stop note how -> similar : 1
note how similar -> to : 1
how similar to -> the : 1
to the main -> difference : 1
the main difference -> is : 1
main difference is -> that : 1
difference is that -> it : 1
is that it -> returns : 1
is that it -> has : 1
is that it -> is : 1
is that it -> all : 1
is that it -> can : 1
that it returns -> a : 2
it returns a -> calculated : 1
it returns a -> we : 1
returns a calculated -> value : 1
a calculated value -> instead : 1
calculated value instead -> of : 1
of just a -> value : 1
just a value -> linearrangeiterator : 1
a value linearrangeiterator -> using : 1
value linearrangeiterator using -> using : 1
linearrangeiterator using using -> using : 1
pointer using t -> auto : 1
using t auto -> return : 1
t auto return -> auto : 2
auto return return -> return : 1
auto return return -> a : 1
return return return -> auto : 1
return return return -> size : 1
const return t -> t : 1
const return t -> a : 1
return t t -> in : 1
return t t -> convenience : 1
t t in -> contrast : 1
t in contrast -> to : 1
to the simple -> is : 1
the simple is -> generated : 1
simple is generated -> on : 1
is generated on -> the : 1
on the and -> therefore : 1
on the and -> low : 1
on the and -> verify : 1
the and therefore -> neither : 1
the and therefore -> we : 2
and therefore neither -> pointer : 1
therefore neither pointer -> nor : 1
neither pointer nor -> reference : 1
pointer nor reference -> can : 1
nor reference can -> be : 1
reference can be -> defined : 1
reference can be -> correctly : 1
can be defined -> like : 1
be defined like -> a : 1
defined like a -> regular : 1
regular reference or -> as : 1
reference or as -> we : 1
or as we -> are : 1
as we are -> required : 1
as we are -> used : 1
as we are -> dealing : 1
required to define -> all : 1
to define all -> five : 1
define all five -> we : 1
all five we -> define : 1
five we define -> the : 1
we define the -> reference : 1
we define the -> compiler : 1
define the reference -> as : 1
the reference as -> being : 1
reference as being -> a : 1
as being a -> regular : 1
being a regular -> and : 1
a regular and -> is : 1
regular and is -> simply : 1
and is simply -> set : 1
is simply set -> to : 1
simply set to -> usage : 1
set to usage -> this : 1
to usage this -> linear : 1
usage this linear -> range : 1
this linear range -> iterator : 1
linear range iterator -> can : 1
linear range iterator -> and : 1
range iterator can -> be : 1
be used without -> having : 1
used without having -> it : 1
without having it -> wrapped : 1
having it wrapped -> into : 1
it wrapped into -> a : 1
wrapped into a -> in : 1
wrapped into a -> utility : 1
a in the -> following : 2
following code two -> standalone : 1
code two standalone -> iterators : 1
two standalone iterators -> representing : 1
standalone iterators representing -> a : 1
iterators representing a -> range : 1
representing a range -> are : 1
a range are -> start : 1
range are start -> stop : 1
are start stop -> first : 1
start stop first -> last : 1
stop first last -> two : 1
first last two -> iterators : 1
last two iterators -> can : 1
two iterators can -> now : 1
iterators can now -> be : 1
now be utilized -> in : 1
be utilized in -> a : 1
utilized in a -> regular : 1
in a regular -> or : 1
a regular or -> an : 1
regular or an -> stl : 1
or an stl -> algorithm : 1
an stl algorithm -> as : 1
an stl algorithm -> can : 1
stl algorithm as -> shown : 1
algorithm as shown -> in : 1
the following into -> using : 1
following into using -> a : 1
into using a -> into : 1
using a into -> using : 1
a into using -> s : 1
into using s -> s : 1
using s s -> dst : 1
s s dst -> you : 1
s dst you -> in : 1
dst you in -> practice : 1
you in practice -> our : 1
in practice our -> linear : 1
practice our linear -> range : 1
our linear range -> iterator : 1
range iterator and -> behaves : 1
iterator and behaves -> just : 1
and behaves just -> like : 1
behaves just like -> any : 1
just like any -> iterator : 1
just like any -> other : 1
like any iterator -> which : 1
any iterator which -> would : 1
iterator which would -> iterate : 1
which would iterate -> a : 1
would iterate a -> container : 1
iterate a container -> of : 1
to a though -> the : 1
a though the -> previous : 1
though the previous -> example : 1
the previous example -> it : 1
the previous example -> would : 1
the previous example -> could : 1
the previous example -> with : 1
the previous example -> try : 1
previous example it -> is : 1
example it is -> quite : 1
it is quite -> bloated : 1
it is quite -> verbose : 1
it is quite -> similar : 1
is quite bloated -> as : 1
quite bloated as -> we : 1
bloated as we -> need : 1
as we need -> to : 2
need to duplicate -> the : 1
to duplicate the -> start : 1
duplicate the start -> and : 1
the start and -> step : 1
the start and -> stop : 1
start and step -> length : 1
and step length -> a : 1
step length a -> more : 1
length a more -> generalized : 1
a more generalized -> solution : 1
more generalized solution -> is : 1
generalized solution is -> to : 1
solution is to -> let : 1
solution is to -> use : 2
is to let -> the : 1
let the range -> mimic : 1
the range mimic -> a : 1
range mimic a -> to : 1
mimic a to -> the : 1
to the start -> and : 1
start and stop -> linearrange : 1
and stop linearrange -> using : 1
stop linearrange using -> iterator : 1
linearrange using iterator -> t : 1
using iterator t -> auto : 1
iterator t auto -> return : 1
auto return t -> t : 1
t t convenience -> order : 1
t convenience order -> to : 1
convenience order to -> avoid : 1
to avoid explicitly -> specifying : 1
avoid explicitly specifying -> the : 1
explicitly specifying the -> floating : 1
specifying the floating -> point : 1
the floating point -> type : 1
floating point type -> when : 1
point type when -> using : 1
type when using -> the : 1
the we do -> as : 1
we do as -> does : 1
do as does -> with : 1
as does with -> create : 1
does with create -> a : 1
with create a -> convenience : 1
convenience function called -> a : 1
function called a -> object : 1
called a object -> where : 1
a object where -> its : 1
object where its -> type : 1
where its type -> has : 1
its type has -> been : 1
type has been -> deduced : 1
has been deduced -> from : 1
been deduced from -> the : 1
deduced from the -> is : 1
from the is -> how : 1
the is how -> we : 1
the is how -> the : 1
how we implement -> the : 1
we implement the -> t : 1
implement the t -> return : 1
the t return -> n : 1
t return n -> the : 1
return n the -> we : 1
n the we -> need : 1
specify the contained -> value : 1
the contained value -> type : 1
contained value type -> to : 1
value type to -> create : 1
type to create -> a : 1
create a r -> r : 1
a r r -> evaluates : 1
r r evaluates -> to : 2
r evaluates to -> the : 1
r evaluates to -> you : 1
evaluates to the -> is : 1
to the is -> deduced : 1
to the is -> how : 1
to the is -> the : 1
to the is -> created : 1
to the is -> to : 1
the is deduced -> r : 1
is deduced r -> r : 1
deduced r r -> evaluates : 1
evaluates to you -> not : 1
to you not -> have : 1
you not have -> to : 1
have to be -> specified : 1
have to be -> stored : 1
have to be -> accessed : 1
to be specified -> as : 1
be specified as -> types : 1
specified as types -> are : 1
as types are -> automatically : 1
types are automatically -> deduced : 1
are automatically deduced -> in : 1
automatically deduced in -> template : 1
deduced in template -> even : 1
in template even -> template : 1
template even template -> class : 1
even template class -> types : 1
template class types -> get : 1
class types get -> deduced : 1
types get deduced -> from : 1
get deduced from -> constructor : 1
deduced from constructor -> and : 1
from constructor and -> therefore : 1
constructor and therefore -> the : 1
therefore the is -> other : 1
the is other -> following : 1
is other following -> code : 1
other following code -> is : 1
following code is -> also : 1
following code is -> used : 1
following code is -> executed : 1
code is also -> valid : 1
is also valid -> in : 1
also valid in -> r : 1
valid in r -> range : 1
in r range -> usage : 1
r range usage -> that : 1
range usage that -> we : 1
usage that we -> have : 1
have the foundation -> the : 1
the foundation the -> iterator : 1
foundation the iterator -> and : 1
iterator and its -> the : 1
and its the -> and : 1
its the and -> the : 1
and the we -> can : 1
the we can -> use : 1
the we can -> now : 2
the we can -> see : 2
the we can -> pass : 1
the we can -> calculate : 1
can use them -> to : 1
use them to -> iterate : 1
them to iterate -> a : 1
of numbers as -> t : 1
numbers as t -> happens : 1
as t happens -> here : 1
t happens here -> is : 1
happens here is -> that : 1
that the when -> a : 1
the when a -> is : 1
when a is -> the : 1
a is the -> compiler : 1
the compiler internally -> generates : 1
compiler internally generates -> code : 1
internally generates code -> that : 1
generates code that -> looks : 1
code that looks -> similar : 1
that looks similar -> to : 1
looks similar to -> r : 1
similar to r -> r : 1
to r r -> is : 1
r r is -> a : 1
r is a -> first : 1
a first first -> is : 1
first first is -> a : 1
is a last -> last : 1
a last last -> is : 1
last last is -> a : 1
last is a -> it : 1
is a it -> it : 1
is a it -> is : 1
is a it -> turns : 1
a it it -> the : 1
it it the -> values : 1
it the values -> of : 1
the values of -> iterated : 1
the values of -> and : 1
values of iterated -> just : 1
of iterated just -> as : 1
iterated just as -> if : 1
as if it -> was : 1
as if it -> were : 1
a container explicitly -> holding : 1
container explicitly holding -> the : 1
explicitly holding the -> like : 1
holding the like -> t : 1
the like t -> linear : 1
like t linear -> range : 1
t linear range -> can : 1
linear range can -> also : 1
range can also -> be : 1
used for iterating -> numbers : 1
for iterating numbers -> in : 1
iterating numbers in -> reverse : 1
numbers in reverse -> t : 1
in reverse t -> this : 1
reverse t this -> you : 1
t this you -> learned : 1
custom iterator and -> how : 1
iterator and how -> to : 1
to use inform -> the : 1
use inform the -> stl : 1
inform the stl -> library : 1
stl library of -> how : 1
library of how -> your : 1
of how your -> custom : 1
of how your -> program : 1
how your custom -> iterator : 1
your custom iterator -> can : 1
custom iterator can -> be : 1
can be the -> next : 1
can be the -> memory : 1
can be the -> second : 1
be the next -> we : 1
the next we -> will : 2
next we will -> look : 1
next we will -> see : 1
look into the -> algorithm : 1
into the algorithm -> library : 1
the algorithm library -> of : 1
algorithm library of -> and : 1
library of and -> also : 1
of and also -> learn : 1
and also learn -> how : 1
use the new -> ranges : 1
ranges library for -> a : 1
library for a -> more : 1
for a more -> expressive : 2
a more expressive -> algorithms : 1
a more expressive -> code : 1
more expressive algorithms -> and : 1
expressive algorithms and -> this : 1
algorithms and this -> we : 1
will take a -> look : 2
will take a -> brief : 1
at how we -> can : 2
can write efficient -> algorithms : 1
write efficient algorithms -> in : 1
efficient algorithms in -> you : 1
algorithms in you -> will : 1
in you will -> learn : 1
will learn the -> benefits : 1
learn the benefits -> of : 1
the benefits of -> using : 1
the benefits of -> a : 1
benefits of using -> the : 1
of using the -> stl : 1
of using the -> standard : 1
using the stl -> algorithms : 1
using the stl -> using : 1
using the stl -> algorithm : 1
the stl algorithms -> as : 1
the stl algorithms -> and : 1
the stl algorithms -> only : 1
the stl algorithms -> instead : 1
the stl algorithms -> do : 1
as building blocks -> in : 1
as building blocks -> instead : 1
building blocks in -> your : 1
blocks in your -> both : 1
in your both -> and : 1
both and in -> the : 1
in the we -> will : 1
in the we -> have : 1
in the we -> start : 1
in the we -> use : 1
in the we -> can : 2
of the stl -> algorithms : 2
of the stl -> good : 1
of the stl -> meaning : 1
of the stl -> library : 1
of the stl -> on : 1
algorithms and take -> a : 1
and take a -> look : 1
how the can -> compose : 1
the can compose -> algorithms : 1
can compose algorithms -> for : 1
compose algorithms for -> a : 1
algorithms for a -> more : 1
more expressive code -> stl : 1
expressive code stl -> algorithms : 1
code stl algorithms -> as : 1
as building template -> is : 1
building template is -> a : 1
template is a -> set : 1
is a set -> of : 1
set of data -> and : 1
of data and -> algorithms : 1
data and algorithms -> included : 1
and algorithms included -> in : 1
algorithms included in -> the : 1
in the even -> though : 1
the even though -> we : 1
even though we -> use : 1
even though we -> cannot : 1
though we use -> containers : 1
we use containers -> on : 1
use containers on -> a : 1
containers on a -> daily : 1
on a daily -> tend : 1
a daily tend -> to : 1
daily tend to -> underuse : 1
tend to underuse -> the : 1
to underuse the -> stl : 1
underuse the stl -> easy : 1
the stl easy -> to : 1
stl easy to -> forget : 1
easy to forget -> that : 1
easy to forget -> in : 1
to forget that -> complex : 1
forget that complex -> algorithms : 1
that complex algorithms -> can : 1
complex algorithms can -> be : 1
algorithms can be -> implemented : 1
algorithms can be -> replaced : 1
implemented by combining -> algorithms : 1
by combining algorithms -> from : 1
combining algorithms from -> the : 1
algorithms from the -> so : 1
from the so -> consider : 1
the so consider -> stl : 1
so consider stl -> as : 1
consider stl as -> the : 1
stl as the -> first : 1
as the first -> choice : 1
as the first -> argument : 1
the first choice -> before : 1
first choice before -> writing : 1
choice before writing -> algorithms : 1
before writing algorithms -> algorithm : 1
writing algorithms algorithm -> get : 1
algorithms algorithm get -> a : 1
algorithm get a -> better : 1
get a better -> understanding : 1
a better understanding -> of : 1
better understanding of -> the : 1
the stl good -> to : 1
stl good to -> know : 1
good to know -> a : 1
to know a -> bit : 1
know a bit -> about : 1
a bit about -> concepts : 1
bit about concepts -> and : 1
about concepts and -> common : 1
concepts and common -> patterns : 1
and common patterns -> used : 1
common patterns used -> by : 1
patterns used by -> all : 1
used by all -> stl : 1
used by all -> threads : 1
by all stl -> operate : 1
all stl operate -> on : 1
stl operate on -> algorithms : 1
operate on algorithms -> in : 1
on algorithms in -> the : 1
algorithms in the -> stl : 1
algorithms in the -> example : 1
algorithms in the -> ranges : 1
in the stl -> library : 1
in the stl -> algorithm : 2
in the stl -> parallel : 1
stl library operate -> only : 1
library operate only -> on : 1
operate only on -> not : 1
only on not -> containers : 1
on not containers -> and : 1
not containers and -> so : 1
containers and so -> an : 1
and so an -> iterator : 1
so an iterator -> could : 1
an iterator could -> be : 1
iterator could be -> considered : 1
be considered an -> object : 1
considered an object -> with : 1
object with the -> same : 1
object with the -> as : 1
the same properties -> as : 1
same properties as -> a : 1
properties as a -> regular : 1
a regular it -> can : 1
regular it can -> be : 1
be stepped to -> the : 1
stepped to the -> next : 1
element and dereferenced -> pointing : 1
and dereferenced pointing -> to : 1
dereferenced pointing to -> a : 1
pointing to a -> valid : 1
to a valid -> the : 1
valid the algorithms -> only : 1
the algorithms only -> use : 2
algorithms only use -> a : 1
algorithms only use -> iterators : 1
only use a -> few : 1
use a few -> of : 1
a few of -> the : 1
few of the -> operations : 1
operations that a -> pointer : 1
that a pointer -> although : 1
a pointer although -> the : 1
pointer although the -> iterator : 1
although the iterator -> be : 1
the iterator be -> a : 1
iterator be a -> heavy : 1
be a heavy -> object : 1
a heavy object -> traversing : 1
heavy object traversing -> a : 1
object traversing a -> a : 1
traversing a a -> generic : 1
a a generic -> algorithm : 1
with any a -> generic : 1
any a generic -> algorithm : 1
generic algorithm allows -> programmers : 1
algorithm allows programmers -> to : 1
allows programmers to -> easily : 1
programmers to easily -> implement : 1
to easily implement -> their : 1
easily implement their -> own : 1
implement their own -> compatible : 1
their own compatible -> with : 1
own compatible with -> any : 1
compatible with any -> in : 1
with any in -> the : 1
any in the -> following : 1
following the can -> be : 1
with any typename -> iterator : 1
any typename iterator -> const : 1
typename iterator const -> for : 1
iterator const for -> it : 1
const for it -> it : 1
it if return -> return : 1
it if return -> the : 1
return return a -> new : 1
return return a -> is : 1
return a new -> container : 1
return a new -> first : 1
a new container -> can : 1
a new container -> and : 1
new container can -> also : 1
container can also -> use : 1
also use all -> the : 1
use all the -> algorithms : 1
all the algorithms -> if : 1
the algorithms if -> it : 1
algorithms if it -> exposes : 1
if it exposes -> the : 1
it exposes the -> as : 1
exposes the as -> a : 1
as a simple -> if : 1
as a simple -> which : 1
as a simple -> measurement : 1
a simple if -> we : 1
simple if we -> implement : 1
if we implement -> a : 1
we implement a -> structure : 1
implement a structure -> as : 1
a structure as -> shown : 1
structure as shown -> where : 1
as shown where -> rows : 1
as shown where -> and : 1
shown where rows -> are : 1
where rows are -> exposed : 1
rows are exposed -> as : 1
are exposed as -> pair : 1
exposed as pair -> of : 1
as pair of -> of : 1
pair of of -> grid : 1
of of grid -> of : 1
of grid of -> corresponding : 1
grid of corresponding -> grid : 1
of corresponding grid -> auto : 1
corresponding grid auto -> auto : 1
grid auto auto -> auto : 1
auto auto return -> cdpalignleft : 1
auto auto return -> has : 1
auto auto return -> auto : 1
auto auto return -> just : 1
auto return cdpalignleft -> dimensional : 1
return cdpalignleft dimensional -> grid : 1
cdpalignleft dimensional grid -> built : 1
dimensional grid built -> upon : 1
grid built upon -> a : 1
built upon a -> one : 1
upon a one -> dimensional : 1
a one dimensional -> representing : 1
one dimensional representing -> a : 1
dimensional representing a -> row : 1
representing a row -> can : 1
a row can -> then : 1
row can then -> be : 1
then be utilized -> by : 1
be utilized by -> any : 1
utilized by any -> stl : 1
by any stl -> grid : 1
any stl grid -> y : 1
stl grid y -> r : 1
grid y r -> range : 1
y r range -> point : 1
r range point -> to : 1
after the algorithms -> take : 1
the algorithms take -> a : 1
algorithms take a -> pair : 1
take a pair -> of : 1
a pair of -> where : 1
a pair of -> iterators : 1
a pair of -> algorithms : 1
a pair of -> actions : 1
pair of where -> the : 1
where the first -> one : 1
where the first -> two : 1
where the first -> parameter : 1
first one points -> to : 1
one points to -> the : 1
one points to -> one : 1
points to the -> first : 2
points to the -> fifth : 1
points to the -> integer : 1
first element in -> the : 1
in the range -> and : 1
in the range -> library : 1
in the range -> of : 1
the range and -> the : 1
the range and -> search : 1
range and the -> second : 1
range and the -> by : 1
and the second -> one : 1
and the second -> chunk : 1
and the second -> parameter : 2
second one points -> to : 1
points to one -> element : 1
to one element -> beyond : 1
one element beyond -> the : 1
element beyond the -> last : 1
beyond the last -> element : 1
the last element -> in : 1
last element in -> the : 1
in the take -> a : 1
following code first -> last : 1
code first last -> seen : 1
first last seen -> in : 1
last seen in -> the : 1
the the now -> points : 1
the now points -> to : 1
now points to -> an : 1
points to an -> imagined : 1
to an imagined -> element : 1
an imagined element -> after : 1
imagined element after -> do : 1
element after do -> not : 1
after do not -> change : 1
stl algorithms only -> modify : 1
algorithms only modify -> the : 1
only modify the -> elements : 1
modify the elements -> in : 1
elements in a -> specified : 1
in a specified -> the : 1
a specified the -> elements : 1
a specified the -> range : 1
specified the elements -> are : 1
elements are never -> added : 1
are never added -> or : 1
never added or -> removed : 1
added or removed -> from : 1
or removed from -> the : 1
removed from the -> does : 1
from the does -> not : 1
the does not -> actually : 1
not actually remove -> elements : 1
actually remove elements -> from : 1
remove elements from -> a : 1
elements from a -> it : 1
from a it -> rearranges : 1
a it rearranges -> the : 1
it rearranges the -> elements : 1
rearranges the elements -> so : 1
the elements so -> that : 1
elements so that -> the : 1
that the removed -> elements : 1
the removed elements -> are : 1
removed elements are -> placed : 1
elements are placed -> at : 1
are placed at -> the : 1
placed at the -> it : 1
at the it -> then : 1
the it then -> returns : 1
the it then -> adds : 1
it then returns -> an : 1
then returns an -> iterator : 1
returns an iterator -> to : 2
iterator to the -> first : 1
iterator to the -> last : 1
of the removed -> example : 1
the removed example -> with : 1
removed example with -> vec : 1
example with vec -> cdpalignleft : 1
example with vec -> with : 1
with vec cdpalignleft -> example : 1
vec cdpalignleft example -> with : 1
cdpalignleft example with -> vec : 1
with vec with -> output : 1
vec with output -> require : 1
require allocated that -> write : 1
allocated that write -> data : 1
that write data -> to : 1
write data to -> an : 1
data to an -> output : 1
to an output -> such : 1
an output such -> as : 1
output such as -> or : 1
such as or -> requires : 1
such as or -> but : 1
as or requires -> already : 1
or requires already -> allocated : 1
requires already allocated -> data : 1
already allocated data -> reserved : 1
allocated data reserved -> for : 1
data reserved for -> the : 1
reserved for the -> as : 1
for the as -> the : 1
as the algorithms -> only : 1
only use iterators -> as : 1
use iterators as -> they : 1
iterators as they -> cannot : 1
iterators as they -> take : 1
as they cannot -> allocate : 1
they cannot allocate -> data : 1
cannot allocate data -> by : 1
allocate data by -> to : 1
data by to -> enlarge : 1
by to enlarge -> the : 1
to enlarge the -> container : 1
enlarge the container -> the : 1
the container the -> algorithms : 1
the container the -> values : 1
container the algorithms -> operate : 1
the algorithms operate -> they : 1
algorithms operate they -> rely : 1
operate they rely -> on : 1
they rely on -> the : 1
rely on the -> iterator : 1
iterator to be -> capable : 1
to be capable -> of : 1
be capable of -> enlarging : 1
capable of enlarging -> the : 1
of enlarging the -> container : 1
enlarging the container -> it : 1
the container it -> an : 1
the container it -> operates : 1
container it an -> iterator : 1
it an iterator -> to : 1
iterator to an -> empty : 1
to an empty -> container : 1
an empty container -> is : 1
empty container is -> passed : 1
container is passed -> to : 1
to the algorithms -> for : 1
the algorithms for -> the : 1
algorithms for the -> program : 1
for the program -> will : 1
program will the -> following : 1
program will the -> preceding : 1
will the following -> where : 1
will the following -> regular : 1
following where is -> illustrates : 1
where is illustrates -> the : 1
is illustrates the -> return : 1
illustrates the return -> v : 1
the return v -> you : 1
v you have -> to : 1
to do either -> of : 1
do either of -> the : 1
the the required -> size : 1
the required size -> for : 1
required size for -> the : 1
size for the -> resulting : 1
for the resulting -> an : 1
the resulting an -> which : 1
resulting an which -> inserts : 1
an which inserts -> elements : 1
which inserts elements -> into : 1
inserts elements into -> a : 1
elements into a -> container : 1
into a container -> while : 1
into a container -> which : 1
a container while -> iterating : 1
container while iterating -> following : 1
while iterating following -> snippet : 1
iterating following snippet -> shows : 1
following snippet shows -> how : 2
snippet shows how -> to : 2
shows how to -> use : 1
shows how to -> to : 1
to use preallocated -> return : 1
use preallocated return -> v : 1
preallocated return v -> vals : 1
return v vals -> squared : 1
v vals squared -> dst : 1
vals squared dst -> following : 1
squared dst following -> snippet : 1
dst following snippet -> shows : 1
how to to -> insert : 1
to to insert -> values : 1
to insert values -> into : 1
insert values into -> a : 1
values into a -> container : 1
a container which -> is : 1
container which is -> not : 1
is not return -> v : 1
not return v -> c : 1
return v c -> insert : 1
v c insert -> into : 1
c insert into -> back : 1
insert into back -> of : 1
into back of -> vector : 1
back of vector -> using : 1
of vector using -> insert : 1
vector using insert -> into : 1
using insert into -> a : 1
insert into a -> using : 1
into a using -> you : 1
a using you -> are : 1
using you are -> operating : 1
you are operating -> on : 1
are operating on -> know : 1
operating on know -> the : 1
on know the -> expected : 1
know the expected -> size : 1
the expected size -> of : 1
expected size of -> the : 1
of the resulting -> you : 1
the resulting you -> can : 1
resulting you can -> use : 1
use the function -> before : 1
the function before -> executing : 1
function before executing -> the : 1
before executing the -> algorithm : 1
executing the algorithm -> in : 1
the algorithm in -> order : 1
the algorithm in -> parallel : 1
algorithm in order -> to : 1
to avoid unnecessary -> the : 1
to avoid unnecessary -> allocations : 1
to avoid unnecessary -> cdpaligncenter : 1
avoid unnecessary the -> vector : 1
unnecessary the vector -> will : 1
vector will reallocate -> a : 1
will reallocate a -> new : 1
reallocate a new -> chunk : 1
a new chunk -> of : 1
new chunk of -> memory : 1
chunk of memory -> several : 1
of memory several -> times : 1
memory several times -> during : 1
several times during -> the : 1
times during the -> use : 1
during the use -> and : 1
the use and -> by : 1
and by an -> algorithm : 1
by an algorithm -> relies : 1
an algorithm relies -> on : 1
algorithm relies on -> the : 1
on the fundamental -> and : 1
the fundamental and -> as : 1
fundamental and as -> in : 1
and as in -> the : 1
case of an -> to : 1
case of an -> exception : 1
of an to -> be : 1
an to be -> able : 1
to use your -> own : 1
use your own -> and : 1
own and must -> either : 1
and must either -> be : 1
must either be -> provided : 1
either be provided -> by : 1
be provided by -> the : 1
provided by the -> class : 1
provided by the -> standard : 1
provided by the -> operating : 1
by the class -> or : 1
the class or -> as : 1
class or as -> an : 1
or as an -> argument : 1
as an argument -> to : 1
an argument to -> the : 1
argument to the -> following : 1
example shows these -> operators : 1
shows these operators -> implemented : 1
these operators implemented -> in : 1
operators implemented in -> a : 1
a simple where -> is : 1
simple where is -> utilized : 1
where is utilized -> by : 1
is utilized by -> and : 1
is utilized by -> flower : 1
by and is -> utilized : 1
and is utilized -> by : 1
utilized by flower -> is : 1
by flower is -> equal : 1
flower is equal -> used : 1
is equal used -> when : 1
equal used when -> auto : 1
used when auto -> const : 2
when auto const -> return : 2
const return is -> less : 1
return is less -> than : 1
less than used -> when : 1
than used when -> auto : 1
return int garden -> uses : 1
int garden uses -> uses : 1
garden uses uses -> comparator : 1
uses uses comparator -> you : 1
uses comparator you -> would : 1
comparator you would -> like : 1
to use another -> comparison : 1
use another comparison -> for : 1
another comparison for -> sorting : 1
comparison for sorting -> or : 1
for sorting or -> finding : 1
sorting or finding -> a : 1
or finding a -> string : 1
finding a string -> by : 1
a string by -> custom : 1
string by custom -> be : 1
by custom be -> provided : 1
custom be provided -> as : 1
be provided as -> an : 1
be provided as -> a : 1
provided as an -> additional : 1
as an additional -> while : 1
an additional while -> the : 1
additional while the -> original : 1
while the original -> algorithm : 1
the original algorithm -> uses : 1
original algorithm uses -> a : 1
algorithm uses a -> value : 1
uses a value -> the : 1
a value the -> version : 1
value the version -> with : 1
the version with -> a : 1
version with a -> specific : 1
with a specific -> operator : 1
with a specific -> it : 1
a specific operator -> has : 1
specific operator has -> the : 1
operator has the -> same : 1
same name with -> attached : 1
name with attached -> at : 1
with attached at -> the : 1
attached at the -> end : 1
at the end -> and : 1
at the end -> for : 1
end and so -> names : 1
and so names -> return : 1
so names return -> names : 1
names return names -> is : 1
return names is -> now : 1
names is now -> x : 1
is now x -> return : 1
now x return -> x : 1
x return x -> points : 1
return x points -> to : 1
x points to -> you : 1
x points to -> for : 1
points to you -> are : 1
to you are -> building : 1
you are building -> a : 1
are building a -> code : 1
building a code -> suggest : 1
a code suggest -> building : 1
code suggest building -> a : 1
suggest building a -> namespace : 1
building a namespace -> or : 1
a namespace or -> something : 1
namespace or something -> of : 1
or something of -> predicates : 1
something of predicates -> to : 1
of predicates to -> make : 1
predicates to make -> the : 1
code more in -> the : 1
previous the predicates -> could : 1
the predicates could -> be : 1
predicates could be -> generalized : 1
could be generalized -> to : 1
be generalized to -> const : 1
generalized to const -> return : 1
to const return -> return : 1
to const return -> float : 1
return return size -> these : 1
return size these -> named : 1
size these named -> the : 1
these named the -> user : 1
named the user -> code : 1
the user code -> becomes : 1
the user code -> base : 1
user code becomes -> more : 1
code becomes more -> x : 1
becomes more x -> x : 1
more x x -> points : 1
x x points -> to : 1
points to for -> this : 1
to for this -> namespace : 1
for this namespace -> could : 1
this namespace could -> be : 1
namespace could be -> which : 1
could be which -> compares : 1
be which compares -> note : 1
which compares note -> that : 1
compares note that -> a : 1
that a lambda -> is : 1
lambda is return -> return : 1
return auto char -> return : 1
auto char return -> return : 1
char return return -> we : 1
return we can -> find : 1
return we can -> use : 2
find a string -> using : 1
a string using -> a : 1
string using a -> case : 1
using a case -> insensitive : 1
a case insensitive -> require : 1
case insensitive require -> move : 1
insensitive require move -> operators : 1
not to algorithms -> and : 1
to algorithms and -> when : 1
algorithms and when -> moving : 1
and when moving -> elements : 1
when moving elements -> but : 1
moving elements but -> only : 1
elements but only -> if : 1
but only if -> the : 1
only if the -> and : 1
if the and -> are : 1
the and are -> marked : 1
the and are -> compiled : 1
and are marked -> it : 1
are marked it -> is : 1
marked it is -> important : 1
it is important -> to : 8
is important to -> have : 1
is important to -> understand : 4
is important to -> remember : 1
is important to -> never : 1
is important to -> at : 1
important to have -> these : 1
to have these -> implemented : 1
have these implemented -> for : 1
these implemented for -> heavy : 1
implemented for heavy -> objects : 1
for heavy objects -> when : 1
heavy objects when -> they : 1
objects when they -> are : 2
when they are -> not : 1
when they are -> being : 1
are not available -> and : 1
not available and -> exception : 1
available and exception -> the : 1
and exception the -> elements : 1
exception the elements -> will : 1
the elements will -> be : 1
elements will be -> copied : 1
will be copied -> that : 1
be copied that -> if : 1
copied that if -> you : 1
if you implement -> construction : 1
you implement construction -> and : 1
implement construction and -> assignment : 1
construction and assignment -> in : 1
and assignment in -> your : 1
assignment in your -> will : 1
in your will -> utilize : 1
your will utilize -> them : 1
will utilize them -> a : 1
will utilize them -> later : 1
utilize them a -> specified : 1
them a specified -> overload : 1
a specified overload -> is : 1
specified overload is -> not : 1
overload is not -> have : 1
is not have -> complexity : 1
not have complexity -> complexity : 1
have complexity complexity -> of : 1
complexity complexity of -> each : 1
complexity of each -> stl : 1
of each stl -> algorithm : 1
each stl algorithm -> is : 1
stl algorithm is -> specified : 1
algorithm is specified -> using : 1
is specified using -> big : 1
specified using big -> o : 1
big o algorithms -> are : 1
o algorithms are -> created : 1
algorithms are created -> with : 1
are created with -> they : 1
created with they -> do : 1
with they do -> not : 1
not allocate memory -> nor : 1
allocate memory nor -> have : 1
memory nor have -> a : 1
nor have a -> time : 1
have a time -> complexity : 2
time complexity higher -> than : 1
complexity higher than -> log : 1
higher than log -> algorithms : 1
than log algorithms -> that : 1
log algorithms that -> do : 1
algorithms that do -> not : 1
that do not -> fit : 1
that do not -> return : 1
that do not -> have : 1
do not fit -> these : 1
not fit these -> criteria : 1
fit these criteria -> are : 1
these criteria are -> not : 1
criteria are not -> included : 1
are not included -> even : 1
not included even -> if : 1
included even if -> they : 1
they are fairly -> common : 1
are fairly common -> the : 1
fairly common the -> exception : 1
common the exception -> of : 1
the exception of -> and : 1
exception of and -> many : 1
of and many -> stl : 1
and many stl -> implementations : 1
many stl implementations -> tend : 1
stl implementations tend -> to : 1
implementations tend to -> temporarily : 1
tend to temporarily -> allocate : 1
to temporarily allocate -> memory : 1
temporarily allocate memory -> during : 1
allocate memory during -> these : 1
memory during these -> an : 1
during these an -> algorithm : 1
these an algorithm -> which : 1
an algorithm which -> tests : 1
algorithm which tests -> whether : 1
which tests whether -> a : 1
tests whether a -> range : 1
whether a range -> contains : 1
a range contains -> one : 1
range contains one -> option : 1
contains one option -> is : 1
one option is -> to : 1
option is to -> implement : 1
option is to -> make : 1
is to implement -> it : 1
is to implement -> a : 1
to implement it -> by : 1
implement it by -> iterating : 1
it by iterating -> through : 1
by iterating through -> the : 1
iterating through the -> range : 1
through the range -> and : 1
range and search -> the : 1
and search the -> rest : 1
search the rest -> of : 1
the range for -> a : 1
range for a -> this : 1
for a this -> will : 1
a this will -> result : 1
this will result -> in : 2
result in an -> algorithm : 1
in an algorithm -> with : 1
algorithm with iterator -> it : 1
with iterator it -> it : 1
iterator it it -> return : 1
it it return -> return : 2
it it return -> and : 1
it return return -> option : 1
it return return -> looking : 1
return return option -> is : 1
return option is -> to : 1
is to make -> a : 1
is to make -> great : 1
is to make -> boost : 1
make a copy -> of : 3
copy of the -> full : 2
copy of the -> vector : 1
of the full -> sort : 1
of the full -> it : 1
the full sort -> and : 1
full sort and -> look : 1
sort and look -> for : 1
and look for -> adjacent : 1
look for adjacent -> equal : 1
for adjacent equal -> this : 1
adjacent equal this -> will : 1
equal this will -> result : 1
in a time -> complexity : 1
complexity of log -> the : 1
of log the -> average : 1
log the average -> complexity : 1
the average complexity -> of : 1
average complexity of -> which : 1
complexity of which -> satisfies : 1
of which satisfies -> the : 1
which satisfies the -> performance : 1
satisfies the performance -> since : 1
the performance since -> it : 1
performance since it -> needs : 1
needs to make -> a : 1
the full it -> still : 1
full it still -> qualify : 1
it still qualify -> as : 1
still qualify as -> a : 1
qualify as a -> building : 1
as a building -> block : 1
as a building -> stl : 1
a building block -> allocating : 1
building block allocating -> means : 1
block allocating means -> that : 1
allocating means that -> we : 1
that we cannot -> trust : 1
we cannot trust -> it : 1
cannot trust it -> not : 1
trust it not -> to : 1
it not to -> iterator : 1
not to iterator -> as : 1
to iterator as -> returns : 1
iterator as returns -> a : 1
as returns a -> we : 1
returns a we -> have : 1
returns a we -> can : 1
a we have -> to : 2
have to the -> base : 1
to the base -> type : 1
the base type -> using : 1
base type using -> using : 1
type using using -> valuetype : 1
using using valuetype -> auto : 1
using valuetype auto -> c : 1
valuetype auto c -> return : 1
auto c return -> perform : 1
c return perform -> just : 1
return perform just -> as : 1
library function standard -> c : 1
function standard c -> library : 1
standard c library -> comes : 1
c library comes -> with : 1
library comes with -> a : 1
comes with a -> couple : 1
comes with a -> convenience : 1
with a couple -> of : 1
couple of algorithms -> such : 1
of algorithms such -> as : 1
as and in -> our : 1
and in our -> sometimes : 1
in our sometimes -> people : 1
our sometimes people -> tend : 1
sometimes people tend -> to : 1
people tend to -> use : 1
people tend to -> believe : 1
to use these -> functions : 1
use these functions -> instead : 1
these functions instead -> of : 1
functions instead of -> their : 1
instead of their -> equivalents : 1
of their equivalents -> in : 1
their equivalents in -> the : 1
equivalents in the -> stl : 1
stl algorithm the -> reason : 1
stl algorithm the -> advantages : 1
algorithm the reason -> is : 1
the reason is -> that : 1
the reason is -> is : 1
is that people -> tend : 1
that people tend -> to : 1
tend to believe -> that : 1
that the c -> library : 1
the c library -> functions : 1
c library functions -> are : 1
library functions are -> faster : 1
functions are faster -> accept : 1
are faster accept -> the : 1
faster accept the -> trade : 1
accept the trade -> off : 1
the trade off -> in : 1
trade off in -> type : 1
off in type -> is : 1
in type is -> not : 1
in type is -> then : 1
type is not -> true : 1
is not true -> for : 1
is not true -> code : 1
not true for -> modern : 1
true for modern -> stl : 1
for modern stl -> the : 1
modern stl the -> equivalent : 1
stl the equivalent -> stl : 1
the equivalent stl -> and : 1
equivalent stl and -> resort : 1
stl and resort -> to : 1
and resort to -> these : 1
resort to these -> c : 1
to these c -> functions : 1
these c functions -> where : 1
c functions where -> they : 1
functions where they -> provide : 1
where they provide -> both : 1
they provide both -> performance : 1
provide both performance -> and : 1
both performance and -> type : 1
performance and type -> that : 1
and type that -> there : 1
type that there -> might : 1
that there might -> be : 1
there might be -> exceptions : 1
there might be -> other : 2
might be exceptions -> where : 1
be exceptions where -> the : 1
exceptions where the -> compiler : 1
where the compiler -> is : 1
where the compiler -> can : 1
the compiler is -> not : 1
the compiler is -> forced : 1
the compiler is -> only : 1
compiler is not -> able : 1
is not able -> to : 1
not able to -> detect : 1
able to detect -> that : 1
to detect that -> it : 1
detect that it -> is : 1
it is safe -> to : 1
is safe to -> resort : 1
is safe to -> use : 1
safe to resort -> to : 1
to resort to -> the : 1
to resort to -> recursion : 1
resort to the -> these : 1
to the these -> cases : 1
the these cases -> should : 1
these cases should -> be : 1
cases should be -> rare : 1
should be rare -> algorithms : 1
be rare algorithms -> versus : 1
rare algorithms versus -> handcrafted : 1
versus handcrafted promote -> the : 1
handcrafted promote the -> use : 1
promote the use -> of : 1
use of algorithms -> over : 1
of algorithms over -> for : 1
algorithms over for -> a : 1
over for a -> number : 1
for a number -> of : 1
number of they -> are : 1
of they are -> more : 1
they are more -> less : 1
are more less -> and : 1
more less and -> in : 1
less and in -> the : 1
in the sense -> that : 3
the sense that -> it : 1
the sense that -> memory : 1
the sense that -> each : 1
sense that it -> is : 1
it is easier -> to : 1
easier to revisit -> the : 1
to revisit the -> code : 1
revisit the code -> and : 1
code and modify -> or : 1
and modify or -> optimize : 1
modify or optimize -> we : 1
or optimize we -> will : 1
optimize we will -> try : 1
try to illustrate -> this : 1
to illustrate this -> with : 1
illustrate this with -> a : 1
with a few -> look : 1
a few look -> at : 1
few look at -> the : 1
at the advantages -> of : 2
algorithms over handcrafted -> algorithms : 1
algorithms over handcrafted -> in : 1
over handcrafted algorithms -> deliver : 1
handcrafted algorithms deliver -> even : 1
algorithms deliver even -> though : 1
deliver even though -> some : 1
even though some -> of : 1
though some of -> the : 1
of the algorithms -> in : 2
of the algorithms -> instead : 1
the algorithms in -> stl : 1
the algorithms in -> the : 1
algorithms in stl -> may : 1
algorithms in stl -> just : 1
in stl may -> sometimes : 1
stl may sometimes -> seem : 1
may sometimes seem -> they : 1
sometimes seem they -> are : 1
seem they are -> often : 1
they are often -> optimally : 1
are often optimally -> designed : 1
often optimally designed -> in : 1
optimally designed in -> ways : 1
designed in ways -> that : 1
in ways that -> are : 1
ways that are -> not : 1
are not obvious -> at : 1
not obvious at -> first : 1
obvious at first -> algorithms : 1
at first algorithms -> provide : 1
first algorithms provide -> even : 1
algorithms provide even -> simpler : 1
provide even simpler -> algorithms : 1
even simpler algorithms -> may : 1
simpler algorithms may -> have : 1
algorithms may have -> corner : 1
may have corner -> cases : 1
have corner cases -> which : 1
corner cases which -> is : 1
cases which is -> easy : 1
which is easy -> to : 1
easy to algorithms -> are : 1
to algorithms are -> algorithms : 1
algorithms are algorithms -> can : 1
are algorithms can -> be : 1
can be replaced -> by : 1
be replaced by -> a : 1
replaced by a -> more : 1
by a more -> suitable : 1
a more suitable -> algorithm : 1
more suitable algorithm -> if : 1
suitable algorithm if -> one : 1
algorithm if one -> wants : 1
if one wants -> to : 1
one wants to -> take : 1
wants to take -> advantage : 1
advantage of simd -> or : 1
of simd or -> even : 1
simd or even -> the : 1
or even the -> gpu : 1
even the gpu -> at : 1
the gpu at -> a : 1
the gpu at -> an : 1
gpu at a -> later : 1
at a later -> stage : 1
at a later -> we : 1
a later stage -> will : 1
later stage will -> cover : 1
stage will cover -> the : 1
will cover the -> basics : 1
cover the basics -> of : 1
basics of parallel -> algorithms : 1
of parallel algorithms -> are : 1
parallel algorithms are -> very : 1
algorithms are very -> well : 1
algorithms are very -> the : 1
are very well -> and : 1
very well and -> using : 1
well and using -> algorithms : 1
and using algorithms -> instead : 1
using algorithms instead -> the : 1
algorithms instead the -> intention : 1
instead the intention -> of : 1
intention of each -> operation : 1
of each operation -> is : 1
operation is clearly -> indicated : 1
is clearly indicated -> by : 1
clearly indicated by -> the : 1
indicated by the -> name : 1
by the name -> more : 1
the name more -> algorithms : 1
name more algorithms -> are : 1
more algorithms are -> very : 1
are very the -> reader : 1
very the reader -> of : 1
reader of a -> function : 1
need to inspect -> every : 1
to inspect every -> in : 1
to inspect every -> whereas : 1
inspect every in -> order : 1
every in order -> to : 1
to determine exactly -> what : 1
determine exactly what -> it : 1
exactly what it -> it : 2
what it it -> might : 1
what it it -> transforms : 1
it it might -> not : 1
be obvious looking -> at : 1
obvious looking at -> a : 1
looking at a -> single : 1
looking at a -> few : 1
at a single -> but : 1
a single but -> when : 1
single but when -> several : 1
but when several -> algorithms : 1
when several algorithms -> are : 1
several algorithms are -> followed : 1
algorithms are followed -> as : 1
are followed as -> in : 1
followed as in -> the : 1
the next the -> advantages : 1
next the advantages -> are : 1
the advantages are -> note : 1
advantages are note -> that : 1
are note that -> when : 1
note that when -> reading : 1
that when reading -> you : 1
when reading you -> have : 1
reading you have -> to : 1
have to inspect -> every : 1
inspect every whereas -> stl : 1
every whereas stl -> algorithms : 1
whereas stl algorithms -> immediately : 1
stl algorithms immediately -> show : 1
algorithms immediately show -> how : 1
immediately show how -> the : 1
show how the -> data : 1
how the data -> is : 1
the data is -> being : 1
data is being -> from : 1
data is being -> executed : 1
is being from -> an : 1
being from an -> optimization : 1
from an optimization -> point : 1
point of the -> algorithms : 1
in the example -> can : 1
the example can -> be : 1
example can be -> easily : 1
can be easily -> replaced : 1
be easily replaced -> by : 1
easily replaced by -> parallelized : 1
replaced by parallelized -> equivalents : 1
by parallelized equivalents -> will : 1
parallelized equivalents will -> be : 1
equivalents will be -> further : 1
will be further -> explained : 1
be further explained -> in : 1
further explained in -> you : 1
explained in you -> get : 1
in you get -> into : 1
you get into -> the : 1
get into the -> habit : 1
into the habit -> of : 1
the habit of -> thinking : 1
the habit of -> writing : 1
habit of thinking -> in : 2
of thinking in -> terms : 2
thinking in terms -> of : 2
terms of algorithms -> rather : 1
of algorithms rather -> than : 1
algorithms rather than -> realize : 1
algorithms rather than -> moving : 1
rather than realize -> that : 1
than realize that -> most : 1
realize that most -> most : 1
that most most -> often : 1
most most often -> a : 1
most often a -> variation : 1
often a variation -> of : 1
a variation of -> a : 1
a variation of -> the : 1
variation of a -> few : 1
of a few -> simple : 1
of a few -> cached : 1
a few simple -> algorithms : 1
few simple algorithms -> such : 1
simple algorithms such -> as : 1
and to the -> importance : 1
utilizing the stl -> algorithms : 1
stl algorithms instead -> of : 1
algorithms instead of -> in : 1
algorithms instead of -> your : 1
of in like -> to : 1
in like to -> show : 1
like to show -> a : 2
to show a -> few : 2
show a few -> resorting : 1
show a few -> examples : 1
a few resorting -> to : 1
few resorting to -> handwritten : 1
resorting to handwritten -> be : 1
to handwritten be -> as : 1
handwritten be as -> one : 1
be as one -> might : 1
as one might -> have : 1
one might have -> developed : 1
might have developed -> a : 1
have developed a -> habit : 1
developed a habit -> of : 1
a habit of -> thinking : 1
terms of using -> algorithms : 1
of using algorithms -> has : 1
of using algorithms -> rather : 1
using algorithms has -> many : 1
algorithms has many -> which : 1
has many which -> we : 1
many which we -> will : 1
try to demonstrate -> with : 1
to demonstrate with -> of : 1
demonstrate with of -> the : 1
with of the -> syntax : 1
of the syntax -> verbosity : 1
the syntax verbosity -> was : 1
syntax verbosity was -> solved : 1
verbosity was solved -> in : 1
was solved in -> when : 1
solved in when -> lambda : 1
in when lambda -> functions : 1
when lambda functions -> were : 1
lambda functions were -> introduced : 1
functions were introduced -> in : 1
were introduced in -> the : 1
were introduced in -> using : 1
in the as -> explained : 1
in the as -> the : 1
the as explained -> in : 1
as explained in -> prior : 1
explained in prior -> to : 1
in prior to -> the : 1
prior to the -> introduction : 1
to the introduction -> of : 1
introduction of lambda -> functions : 1
of lambda functions -> in : 1
lambda functions in -> programmers : 1
functions in programmers -> had : 1
in programmers had -> to : 1
programmers had to -> use : 1
had to use -> complicated : 1
to use complicated -> functor : 1
use complicated functor -> objects : 1
complicated functor objects -> when : 1
functor objects when -> incorporating : 1
objects when incorporating -> code : 1
when incorporating code -> base : 1
incorporating code base -> example : 1
code base example -> is : 1
base example is -> from : 1
example is from -> a : 1
is from a -> code : 1
from a code -> although : 1
a code although -> variable : 1
code although variable -> names : 1
although variable names -> has : 1
variable names has -> been : 1
names has been -> as : 1
has been as -> it : 1
been as it -> is : 1
is only a -> you : 1
is only a -> convenience : 1
is only a -> matter : 2
only a you -> have : 1
have to understand -> the : 1
understand the logic -> of : 1
the logic of -> the : 1
logic of the -> the : 1
logic of the -> program : 1
the the example -> is : 1
the example is -> here : 1
example is here -> just : 1
is here just -> to : 1
here just to -> show : 1
just to show -> you : 1
to show you -> how : 1
show you how -> the : 1
show you how -> to : 1
you how the -> complexity : 1
how the complexity -> is : 1
the complexity is -> lowered : 1
complexity is lowered -> when : 1
is lowered when -> using : 1
lowered when using -> algorithms : 1
when using algorithms -> compared : 1
using algorithms compared -> with : 1
algorithms compared with -> nested : 1
compared with nested -> algorithms : 1
with nested algorithms -> will : 1
nested algorithms will -> also : 1
algorithms will also -> make : 1
will also make -> the : 1
the code you -> can : 1
code you can -> often : 1
you can often -> write : 1
can often write -> functions : 1
often write functions -> without : 1
write functions without -> in : 1
functions without in -> the : 1
without in the -> hard : 1
in the hard -> to : 1
the hard to -> grasp : 1
to grasp when -> conflicting : 1
grasp when conflicting -> textures : 1
when conflicting textures -> are : 1
conflicting textures are -> set : 1
textures are set -> to : 1
are set to -> whereas : 1
set to whereas -> in : 1
to whereas in -> the : 1
in the algorithm -> you : 1
the algorithm you -> can : 1
algorithm you can -> instinctively : 1
you can instinctively -> see : 1
can instinctively see -> that : 1
instinctively see that -> it : 1
that it happens -> if : 1
it happens if -> fulfills : 1
happens if fulfills -> a : 1
if fulfills a -> short : 1
fulfills a short -> stl : 1
a short stl -> algorithm : 1
short stl algorithm -> bool : 1
stl algorithm bool -> conflicting : 1
algorithm bool conflicting -> kvp : 1
bool conflicting kvp -> auto : 1
conflicting kvp auto -> usage : 1
kvp auto usage -> auto : 1
auto usage auto -> par : 2
usage auto par -> if : 1
usage auto par -> it : 1
auto par if -> conflicting : 1
par if conflicting -> else : 1
if conflicting else -> conflicting : 1
conflicting else conflicting -> bool : 1
else conflicting bool -> auto : 1
conflicting bool auto -> usage : 1
bool auto usage -> auto : 1
auto par it -> may : 1
par it may -> overstate : 1
it may overstate -> the : 1
may overstate the -> imagine : 1
overstate the imagine -> one : 1
the imagine one -> were : 1
imagine one were -> to : 1
one were to -> track : 1
were to track -> a : 1
to track a -> bug : 1
track a bug -> or : 1
a bug or -> parallelizing : 1
bug or parallelizing -> be : 1
or parallelizing be -> far : 1
parallelizing be far -> easier : 1
be far easier -> to : 1
far easier to -> understand : 1
easier to understand -> and : 1
to understand and -> reason : 1
understand and reason -> examples : 1
and reason examples -> of : 1
reason examples of -> stl : 1
versus handcrafted state -> the : 1
handcrafted state the -> importance : 1
state the importance -> of : 1
importance of using -> algorithms : 1
using algorithms rather -> like : 1
algorithms rather like -> to : 1
rather like to -> show : 1
a few examples -> of : 1
few examples of -> problems : 1
examples of problems -> that : 1
of problems that -> one : 1
problems that one -> may : 1
that one may -> bump : 1
one may bump -> into : 1
may bump into -> when : 1
bump into when -> using : 1
into when using -> handcrafted : 1
when using handcrafted -> rather : 1
using handcrafted rather -> than : 1
handcrafted rather than -> stl : 1
rather than stl -> unfortunate : 1
than stl unfortunate -> exceptions : 1
stl unfortunate exceptions -> and : 1
and performance say -> we : 1
performance say we -> need : 1
say we need -> a : 1
need a function -> that : 1
need a function -> to : 1
function that moves -> the : 1
that moves the -> first : 1
moves the first -> elements : 1
the first elements -> from : 1
first elements from -> the : 1
from the front -> of : 1
the front of -> a : 1
front of a -> container : 1
of a container -> to : 1
a container to -> the : 1
container to the -> like : 1
container to the -> maximum : 1
to the like -> cdpaligncenter : 1
the like cdpaligncenter -> cdpaligncenter : 1
like cdpaligncenter cdpaligncenter -> the : 1
cdpaligncenter cdpaligncenter the -> first : 1
cdpaligncenter the first -> three : 1
the first three -> elements : 1
first three elements -> to : 1
three elements to -> back : 1
elements to back -> of : 2
to back of -> a : 1
to back of -> the : 1
back of a -> use : 1
of a use -> a : 1
a use a -> traditional : 1
use a traditional -> very : 1
a traditional very -> naive : 1
traditional very naive -> approach : 1
very naive approach -> would : 1
naive approach would -> be : 1
approach would be -> to : 1
be to copy -> to : 1
to copy to -> the : 1
copy to the -> back : 1
copy to the -> const : 1
to the back -> while : 1
the back while -> iterating : 1
back while iterating -> over : 1
while iterating over -> them : 1
iterating over them -> and : 1
over them and -> then : 1
them and then -> erasing : 1
and then erasing -> the : 1
then erasing the -> cdpaligncenter : 1
erasing the cdpaligncenter -> cdpaligncenter : 1
the cdpaligncenter cdpaligncenter -> and : 1
cdpaligncenter cdpaligncenter and -> deallocating : 1
cdpaligncenter cdpaligncenter and -> elements : 1
cdpaligncenter and deallocating -> in : 1
and deallocating in -> order : 1
deallocating in order -> to : 1
order to move -> elements : 1
to move elements -> to : 1
move elements to -> back : 1
back of the -> corresponding : 1
of the corresponding -> copy : 1
the corresponding copy -> the : 1
corresponding copy the -> first : 1
copy the first -> n : 1
the first n -> elements : 1
first n elements -> to : 1
n elements to -> the : 1
of the it -> it : 1
of the it -> then : 1
the it it -> erase : 1
it it erase -> the : 1
it erase the -> copied : 1
erase the copied -> elements : 1
the copied elements -> from : 1
copied elements from -> front : 1
elements from front -> of : 1
from front of -> first : 1
front of first -> it : 1
of first it -> might : 1
first it might -> look : 1
first it might -> seem : 1
it might look -> but : 1
it might look -> strange : 1
might look but -> inspecting : 1
look but inspecting -> it : 1
but inspecting it -> reveals : 1
inspecting it reveals -> a : 1
it reveals a -> severe : 1
reveals a severe -> the : 1
a severe the -> container : 1
severe the container -> reallocates : 1
the container reallocates -> during : 1
container reallocates during -> the : 1
reallocates during the -> iteration : 1
during the iteration -> due : 1
the iteration due -> to : 1
iteration due to -> the : 1
due to the -> iterator : 1
due to the -> code : 1
due to the -> fact : 1
due to the -> if : 1
due to the -> we : 1
due to the -> atomic : 1
due to the -> complexity : 1
to the iterator -> will : 1
the iterator will -> no : 1
iterator will no -> longer : 1
will no longer -> be : 2
no longer be -> as : 1
no longer be -> run : 1
no longer be -> in : 1
no longer be -> protected : 1
longer be as -> the : 1
be as the -> algorithm : 1
as the algorithm -> tries : 1
as the algorithm -> is : 1
as the algorithm -> would : 1
the algorithm tries -> to : 1
algorithm tries to -> access : 1
tries to access -> an : 1
tries to access -> memory : 1
to access an -> invalid : 1
access an invalid -> the : 1
an invalid the -> algorithm : 1
invalid the algorithm -> will : 1
algorithm will throw -> an : 1
will throw an -> safe : 1
throw an safe -> safe : 1
an safe safe -> at : 1
safe safe at -> the : 1
safe at the -> expense : 1
at the expense -> of : 1
the expense of -> a : 1
expense of a -> thrown : 1
a thrown exception -> is : 1
thrown exception is -> quite : 1
exception is quite -> an : 1
is quite an -> obvious : 1
quite an obvious -> have : 1
an obvious have -> to : 1
obvious have to -> rewrite : 1
have to rewrite -> the : 1
to rewrite the -> we : 1
rewrite the we -> are : 1
are still using -> a : 1
still using a -> handcrafted : 1
using a handcrafted -> but : 1
a handcrafted but -> utilize : 1
handcrafted but utilize -> the : 1
but utilize the -> index : 1
utilize the index -> instead : 1
the index instead -> of : 1
index instead of -> the : 1
of the i -> i : 1
the i i -> auto : 1
i auto value -> solution : 1
auto value solution -> it : 1
value solution it -> crash : 1
solution it crash -> but : 1
it crash but -> it : 1
crash but it -> has : 1
but it has -> a : 1
has a subtle -> performance : 1
a subtle performance -> algorithm : 1
subtle performance algorithm -> is : 1
performance algorithm is -> significantly : 1
algorithm is significantly -> slower : 1
is significantly slower -> on : 1
significantly slower on -> than : 1
slower on than -> the : 1
on than the -> reason : 1
than the reason -> is : 1
reason is is -> and : 1
is is and -> on : 1
is and on -> as : 1
and on as -> is : 1
on as is -> invoked : 1
as is invoked -> in : 1
is invoked in -> every : 1
invoked in every -> step : 1
in every step -> of : 1
every step of -> the : 1
step of the -> this : 1
the this algorithm -> will : 1
this algorithm will -> have : 1
algorithm will have -> a : 1
time complexity containers -> such : 1
complexity containers such -> as : 1
such as from -> this : 1
as from this -> performance : 1
from this performance -> the : 1
this performance the -> preceding : 1
performance the preceding -> code : 1
the preceding code -> also : 1
the preceding code -> cdpaligncenter : 3
the preceding code -> line : 1
preceding code also -> has : 1
code also has -> the : 1
the following work -> with : 1
following work with -> containers : 1
work with containers -> of : 1
with containers of -> a : 1
containers of a -> static : 1
of a static -> such : 1
a static such -> as : 1
static such as -> due : 1
such as due -> to : 1
as due to -> might : 1
as due to -> lost : 1
due to might -> throw : 1
to might throw -> an : 1
throw an allocate -> memory : 1
an allocate memory -> and : 1
allocate memory and -> fail : 1
memory and fail -> probably : 1
and fail probably -> and : 1
fail probably and -> a : 1
probably and a -> suitable : 1
and a suitable -> stl : 1
a suitable stl -> we : 1
suitable stl we -> have : 1
stl we have -> reached : 1
we have reached -> this : 1
have reached this -> we : 1
reached this we -> should : 1
this we should -> browse : 1
we should browse -> through : 1
should browse through -> stl : 1
browse through stl -> and : 1
through stl and -> see : 1
stl and see -> if : 1
see if they -> contain : 1
if they contain -> a : 1
they contain a -> suitable : 1
contain a suitable -> algorithm : 1
a suitable algorithm -> to : 1
suitable algorithm to -> be : 1
algorithm to be -> used : 1
to be used -> as : 1
to be used -> with : 1
to be used -> like : 1
used as a -> building : 1
used as a -> return : 1
a building stl -> provides : 1
building stl provides -> an : 1
stl provides an -> algorithm : 1
provides an algorithm -> called : 1
an algorithm called -> which : 1
algorithm called which -> does : 1
called which does -> exactly : 1
which does exactly -> what : 1
does exactly what -> we : 1
does exactly what -> it : 1
exactly what we -> are : 2
looking for while -> avoiding : 1
for while avoiding -> all : 1
while avoiding all -> the : 1
avoiding all the -> disadvantages : 1
all the disadvantages -> mentioned : 1
the disadvantages mentioned -> use : 1
disadvantages mentioned use -> the : 1
mentioned use the -> auto : 1
use the auto -> have : 1
the auto have -> a : 1
auto have a -> look : 1
of using algorithm -> does : 1
using algorithm does -> not : 1
algorithm does not -> throw : 1
does not throw -> as : 1
does not throw -> or : 1
not throw as -> it : 1
throw as it -> does : 1
as it does -> not : 1
does not allocate -> contained : 1
not allocate contained -> object : 1
allocate contained object -> might : 1
contained object might -> throw : 1
object might throw -> exceptions : 1
throw exceptions works -> with : 1
exceptions works with -> containers : 1
works with containers -> whose : 1
with containers whose -> size : 1
containers whose size -> cannot : 1
whose size cannot -> be : 1
size cannot be -> such : 1
cannot be such -> is : 1
be such is -> regardless : 1
such is regardless -> of : 1
is regardless of -> the : 1
container it operates -> on : 1
it operates on -> implementations : 1
operates on implementations -> are : 1
on implementations are -> often : 1
implementations are often -> optimized : 1
are often optimized -> with : 1
often optimized with -> specific : 1
optimized with specific -> hardware : 1
with specific hardware -> in : 1
specific hardware in -> you : 1
hardware in you -> find : 1
in you find -> this : 1
you find this -> comparison : 1
find this comparison -> between : 1
this comparison between -> and : 1
comparison between and -> stl : 1
between and stl -> algorithms : 1
stl algorithms unfair -> because : 1
algorithms unfair because -> there : 1
unfair because there -> are : 1
because there are -> other : 1
are other solutions -> to : 1
other solutions to -> this : 1
solutions to this -> problem : 1
to this problem -> that : 1
to this problem -> is : 1
this problem that -> are : 1
problem that are -> both : 1
that are both -> elegant : 1
that are both -> incrementing : 1
are both elegant -> and : 1
both elegant and -> efficient : 1
elegant and efficient -> without : 1
and efficient without -> using : 1
efficient without using -> in : 1
without using in -> the : 1
using in the -> real : 1
in the real -> not : 1
in the real -> implementation : 1
in the real -> after : 1
the real not -> uncommon : 1
real not uncommon -> to : 1
not uncommon to -> see : 1
uncommon to see -> implementations : 1
to see implementations -> like : 1
see implementations like -> the : 1
implementations like the -> ones : 1
like the ones -> we : 1
the ones we -> just : 1
ones we just -> when : 1
we just when -> there : 1
just when there -> are : 1
when there are -> algorithms : 1
there are algorithms -> in : 1
are algorithms in -> stl : 1
in stl just -> waiting : 1
stl just waiting -> to : 1
just waiting to -> solve : 1
waiting to solve -> your : 1
to solve your -> stl : 1
solve your stl -> has : 1
your stl has -> subtle : 1
in simple algorithms -> that : 1
simple algorithms that -> may : 1
algorithms that may -> seem : 1
that may seem -> very : 1
may seem very -> simple : 1
seem very simple -> might : 1
very simple might -> contain : 1
simple might contain -> optimizations : 1
might contain optimizations -> you : 1
contain optimizations you -> have : 1
optimizations you have -> a : 1
at for at -> a : 1
for at a -> it : 1
at a it -> seems : 1
a it seems -> that : 1
it seems that -> the : 1
seems that the -> obvious : 1
that the obvious -> implementation : 1
the obvious implementation -> be : 1
obvious implementation be -> optimized : 1
implementation be optimized -> is : 1
be optimized is -> a : 1
optimized is a -> possible : 1
is a possible -> implementation : 1
a possible implementation -> of : 1
possible implementation of -> typename : 1
implementation of typename -> it : 1
of typename it -> const : 1
typename it const -> it : 1
typename it const -> main : 1
it const it -> it : 1
const it it -> return : 1
return return looking -> through : 1
return looking through -> the : 1
looking through the -> when : 1
through the when -> being : 1
the when being -> used : 1
when being used -> other : 1
when being used -> in : 1
being used other -> the : 1
used other the -> implementers : 1
other the implementers -> have : 1
the implementers have -> in : 1
implementers have in -> parts : 1
have in parts -> of : 1
in parts of -> resulting : 1
parts of resulting -> in : 1
of resulting in -> the : 1
resulting in the -> comparison : 1
resulting in the -> sparse : 1
in the comparison -> being : 1
the comparison being -> executed : 1
comparison being executed -> as : 1
being executed as -> many : 1
executed as many -> is : 1
as many is -> the : 1
many is the -> optimized : 1
is the optimized -> version : 1
the optimized version -> of : 1
optimized version of -> from : 1
version of from -> typename : 1
of from typename -> it : 1
from typename it -> const : 1
it const main -> loop : 1
const main loop -> unrolled : 1
main loop unrolled -> into : 1
loop unrolled into -> chunks : 1
unrolled into chunks -> of : 1
into chunks of -> auto : 1
chunks of auto -> for : 1
of auto for -> if : 1
auto for if -> if : 1
for if if -> if : 1
if if if -> if : 1
if if if -> handle : 1
if if handle -> the : 1
if handle the -> remaining : 1
handle the remaining -> switch : 1
the remaining switch -> case : 1
remaining switch case -> if : 1
switch case if -> case : 1
case if case -> if : 2
case if case -> return : 1
if case if -> case : 2
if case return -> that : 1
case return that -> it : 1
return that it -> is : 1
it is actually -> the : 1
is actually the -> not : 1
actually the not -> utilizes : 1
the not utilizes -> this : 1
not utilizes this -> loop : 1
utilizes this loop -> unrolling : 1
this loop unrolling -> but : 1
loop unrolling but -> the : 1
unrolling but the -> implemented : 1
but the implemented -> using : 1
the implemented using -> in : 1
implemented using in -> addition : 1
using in addition -> to : 1
addition to a -> multitude : 1
to a multitude -> of : 1
multitude of algorithms -> in : 1
algorithms in is -> implemented : 1
in is implemented -> using : 1
is implemented using -> for : 1
implemented using for -> example : 1
using for example -> which : 1
for example which -> means : 1
example which means -> that : 1
means that all -> of : 1
that all of -> these : 1
of these are -> slightly : 1
these are slightly -> faster : 1
are slightly faster -> than : 1
slightly faster than -> a : 1
slightly faster than -> any : 1
slightly faster than -> the : 1
faster than a -> handcrafted : 1
faster than a -> the : 1
than a handcrafted -> by : 1
a handcrafted by -> i : 1
handcrafted by i -> really : 1
by i really -> mean : 1
i really mean -> the : 1
really mean the -> performance : 1
mean the performance -> benefit : 1
the performance benefit -> is : 1
performance benefit is -> roughly : 1
benefit is roughly -> half : 1
is roughly half -> a : 1
roughly half a -> as : 1
half a as -> shown : 1
a as shown -> in : 1
in the an -> integer : 1
the an integer -> in : 1
an integer in -> a : 1
integer in a -> of : 1
a of even -> though : 1
of even though -> the : 1
though the benefit -> is : 1
the benefit is -> almost : 1
benefit is almost -> using : 1
is almost using -> stl : 1
almost using stl -> you : 1
using stl you -> get : 1
stl you get -> it : 1
you get it -> for : 1
get it for -> with : 1
it for with -> addition : 1
for with addition -> to : 1
with addition to -> the : 1
to the loop -> a : 1
the loop a -> very : 1
loop a very -> subtle : 1
a very subtle -> optimization : 1
very subtle optimization -> is : 1
subtle optimization is -> that : 1
optimization is that -> is : 1
is that is -> iterated : 1
that is iterated -> backwards : 1
is iterated backwards -> in : 1
iterated backwards in -> order : 1
backwards in order -> to : 1
order to compare -> with : 1
order to compare -> it : 1
to compare with -> zero : 1
compare with zero -> instead : 1
with zero instead -> of : 1
zero instead of -> a : 1
of a on -> some : 1
a on some -> cpus : 1
on some cpus -> comparing : 1
some cpus comparing -> with : 1
cpus comparing with -> zero : 1
comparing with zero -> is : 1
with zero is -> slightly : 1
zero is slightly -> faster : 1
is slightly faster -> than : 1
faster than any -> other : 1
than any other -> as : 1
any other as -> it : 1
any other as -> tpl : 1
other as it -> uses : 1
as it uses -> another : 1
it uses another -> assembler : 1
uses another assembler -> instruction : 1
another assembler instruction -> the : 1
assembler instruction the -> platform : 1
instruction the platform -> it : 1
the platform it -> uses : 1
platform it uses -> of : 1
it uses of -> do : 1
uses of do -> not : 1
do not rearrange -> your : 1
not rearrange your -> handmade : 1
rearrange your handmade -> loops : 1
your handmade loops -> in : 1
handmade loops in -> order : 1
loops in order -> to : 1
order to benefit -> from : 1
to benefit from -> this : 1
benefit from this -> unless : 1
from this unless -> a : 1
this unless a -> hot : 1
unless a hot -> doing : 1
a hot doing -> so : 1
hot doing so -> will : 1
doing so will -> heavily : 1
doing so will -> cause : 1
so will heavily -> reduce : 1
will heavily reduce -> the : 1
heavily reduce the -> readability : 1
reduce the readability -> of : 1
readability of your -> let : 1
of your let -> the : 1
your let the -> algorithms : 1
let the algorithms -> handle : 1
the algorithms handle -> these : 1
algorithms handle these -> kinds : 1
handle these kinds -> of : 1
these kinds of -> optimizations : 1
these kinds of -> bugs : 1
kinds of optimizations -> following : 1
of optimizations following -> table : 1
optimizations following table -> show : 1
following table show -> the : 1
table show the -> difference : 1
show the difference -> in : 1
the difference in -> assembly : 1
difference in assembly -> with : 1
in assembly with -> return : 1
assembly with return -> v : 1
with return v -> with : 1
return v with -> other : 1
return v with -> a : 1
v with other -> return : 1
with other return -> v : 1
other return v -> only : 1
return v only -> for : 1
v only for -> the : 1
need to contains -> three : 1
to contains three -> basic : 1
contains three basic -> sorting : 1
three basic sorting -> and : 1
basic sorting and -> in : 1
sorting and in -> it : 1
and in it -> also : 1
in it also -> contains : 1
it also contains -> a : 1
also contains a -> few : 1
contains a few -> abbreviations : 1
a few abbreviations -> of : 1
few abbreviations of -> but : 1
abbreviations of but -> we : 1
of but we -> will : 1
of but we -> can : 1
but we will -> focus : 1
but we will -> use : 1
but we will -> now : 1
focus on these -> three : 1
on these three -> in : 1
these three in -> our : 1
three in our -> is : 1
our is easy -> to : 1
to forget in -> many : 1
forget in many -> a : 1
in many a -> complete : 1
many a complete -> sort : 1
a complete sort -> can : 1
complete sort can -> be : 1
sort can be -> avoided : 1
can be avoided -> by : 3
be avoided by -> using : 2
be avoided by -> grabbing : 1
avoided by using -> the : 1
avoided by using -> a : 1
using the whole -> be : 1
the whole be -> thought : 1
whole be thought -> of : 1
of as algorithms -> for : 1
as algorithms for -> inspecting : 1
algorithms for inspecting -> parts : 1
for inspecting parts -> of : 1
inspecting parts of -> that : 1
parts of that -> sorted : 1
parts of that -> memory : 1
of that sorted -> in : 1
that sorted in -> many : 1
sorted in many -> you : 1
in many you -> are : 1
many you are -> only : 1
you are only -> interested : 1
interested in a -> certain : 1
in a certain -> part : 1
a certain part -> of : 1
certain part of -> the : 1
of the sorted -> you : 2
the sorted you -> want : 2
sorted you want -> to : 2
want to calculate -> the : 2
calculate the median -> of : 1
the median of -> a : 1
median of a -> you : 1
of a you -> require : 2
a you require -> the : 1
a you require -> two : 1
require the value -> in : 1
the value in -> the : 1
value in the -> middle : 1
want to create -> a : 1
create a body -> scanner : 1
a body scanner -> which : 1
body scanner which -> can : 1
scanner which can -> be : 1
be used by -> the : 2
be used by -> containers : 1
be used by -> all : 1
by the mean -> by : 1
the mean by -> length : 1
mean by length -> of : 1
by length of -> a : 1
length of a -> you : 1
you require two -> values : 1
require two values -> in : 1
two values in -> the : 1
values in the -> sorted : 1
values in the -> the : 1
values in the -> tuple : 1
in the sorted -> the : 1
the sorted the -> value : 1
sorted the value -> located : 1
the value located -> from : 1
value located from -> the : 1
located from the -> tallest : 1
from the tallest -> and : 1
the tallest and -> from : 1
tallest and from -> the : 1
and from the -> shortest : 1
and from the -> main : 1
from the shortest -> following : 1
the shortest following -> image : 1
shortest following image -> illustrates : 1
image illustrates how -> and : 1
illustrates how and -> processes : 1
how and processes -> a : 1
and processes a -> compared : 1
processes a compared -> to : 1
a compared to -> a : 1
to a fully -> sorted : 1
a fully sorted -> cdpaligncenter : 1
fully sorted cdpaligncenter -> cdpaligncenter : 1
sorted cdpaligncenter cdpaligncenter -> and : 1
cdpaligncenter and elements -> of : 1
and elements of -> a : 1
elements of a -> range : 1
elements of a -> accessing : 1
of a range -> using : 1
of a range -> as : 1
a range using -> different : 1
range using different -> following : 1
using different following -> table : 1
different following table -> shows : 1
table shows their -> algorithmic : 1
shows their algorithmic -> note : 1
their algorithmic note -> that : 1
algorithmic note that -> denotes : 1
note that denotes -> the : 1
that denotes the -> sub : 1
denotes the sub -> which : 1
the sub which -> is : 1
sub which is -> being : 1
which is being -> fully : 1
is being fully -> at : 1
being fully at -> n : 1
fully at n -> m : 1
at n m -> log : 1
n m log -> log : 1
m log log -> that : 1
log log that -> we : 1
log that we -> have : 1
we have insights -> into : 1
have insights into -> see : 1
insights into see -> how : 1
into see how -> we : 1
we can combine -> them : 1
can combine them -> to : 1
combine them to -> inspect : 1
them to inspect -> parts : 1
to inspect parts -> of : 1
inspect parts of -> a : 1
parts of a -> range : 1
parts of a -> process : 1
a range as -> if : 1
a range as -> a : 1
a range as -> input : 1
range as if -> the : 1
as if the -> entire : 1
as if the -> proxy : 1
as if the -> distance : 1
as if the -> threads : 1
as if the -> operations : 1
if the entire -> range : 1
the entire range -> were : 1
entire range were -> cdpaligncenter : 1
range were cdpaligncenter -> cdpaligncenter : 1
were cdpaligncenter cdpaligncenter -> algorithms : 1
cdpaligncenter cdpaligncenter algorithms -> and : 1
cdpaligncenter algorithms and -> corresponding : 1
algorithms and corresponding -> partially : 1
and corresponding partially -> ordered : 1
corresponding partially ordered -> see : 1
partially ordered see -> up : 1
ordered see up -> against : 1
see up against -> measured : 1
up against measured -> with : 1
against measured with -> elements : 1
measured with elements -> in : 1
with elements in -> total : 1
elements in total -> and : 1
in total and -> a : 1
total and a -> partial : 1
and a partial -> range : 1
a partial range -> of : 1
partial range of -> where : 1
range of where -> r : 1
of where r -> is : 1
where r is -> the : 1
r is the -> range : 1
is the range -> operated : 1
the range operated -> middle : 1
range operated middle -> the : 1
operated middle the -> values : 1
middle the values -> as : 1
the values as -> if : 2
values as if -> fully : 2
as if fully -> to : 2
if fully to -> the : 1
if fully to -> future : 1
fully to the -> values : 1
to the values -> as : 1
fully to future -> of : 1
the ranges section -> deals : 1
ranges section deals -> with : 1
section deals with -> a : 1
deals with a -> library : 1
deals with a -> template : 1
deals with a -> list : 1
with a library -> that : 1
a library that -> is : 1
library that is -> proposed : 1
that is proposed -> for : 1
is proposed for -> the : 1
proposed for the -> upcoming : 1
for the upcoming -> as : 1
the upcoming as -> of : 1
upcoming as of -> it : 1
as of it -> is : 1
of it is -> available : 1
of it is -> necessary : 1
of it is -> quite : 1
of it is -> a : 1
it is available -> at : 1
available at compiling -> these : 1
at compiling these -> examples : 1
compiling these examples -> will : 1
these examples will -> require : 1
examples will require -> an : 1
will require an -> updated : 1
require an updated -> of : 1
an updated of -> the : 1
updated of the -> iterators : 1
iterators in the -> iterator : 1
iterator and algorithm -> concepts : 1
and algorithm concepts -> in : 1
algorithm concepts in -> stl : 1
concepts in stl -> have : 1
in stl have -> quite : 1
stl have quite -> a : 1
have quite a -> few : 1
a few good -> they : 1
few good they -> lack : 1
good they lack -> we : 1
they lack we -> have : 1
lack we have -> some : 1
we have some -> sort : 1
have some sort -> of : 1
sort of a -> class : 1
with an ability -> and : 1
an ability and -> a : 1
ability and a -> level : 1
and a level -> of : 1
a level of -> as : 1
level of as -> implemented : 1
of as implemented -> class : 1
as implemented class -> eability : 1
implemented class eability -> archery : 1
class eability archery -> warrior : 1
eability archery warrior -> eability : 1
archery warrior eability -> int : 1
warrior eability int -> say : 1
eability int say -> we : 1
int say we -> want : 1
find the with -> the : 1
the with the -> highest : 1
the with the -> ability : 2
the with the -> as : 1
the with the -> regular : 1
the highest level -> of : 1
highest level of -> in : 1
level of in -> the : 1
of we were -> to : 2
we were to -> use : 1
we were to -> implement : 1
we were to -> create : 1
we were to -> utilize : 1
we were to -> accept : 1
we were to -> just : 1
we were to -> invoke : 1
we were to -> parallelize : 1
we were to -> accumulate : 1
were to use -> the : 2
use the algorithm -> use : 1
the algorithm use -> is : 1
algorithm use is -> operating : 1
use is operating -> on : 1
is operating on -> but : 1
operating on but -> as : 1
on but as -> we : 1
as we only -> want : 1
we only want -> to : 1
only want to -> take : 1
want to take -> the : 1
to take the -> with : 1
take the with -> the : 1
the ability of -> into : 1
ability of into -> it : 1
of into it -> gets : 1
into it gets -> we : 1
it gets we -> want : 1
gets we want -> to : 1
want to compose -> a : 1
to compose a -> new : 1
compose a new -> algorithm : 1
a new algorithm -> out : 1
a new algorithm -> called : 1
new algorithm out -> of : 1
algorithm out of -> a : 1
of a combination -> of : 1
combination of and -> but : 1
combination of and -> following : 1
combination of and -> for : 1
of and but -> composing : 1
and but composing -> algorithms : 1
but composing algorithms -> is : 1
composing algorithms is -> not : 1
algorithms is not -> possible : 1
not possible with -> we : 1
possible with we -> would : 1
with we would -> have : 1
we would have -> to : 3
we would have -> ended : 1
have to make -> a : 1
copy of all -> the : 1
all the with -> a : 1
the with a -> new : 1
the with a -> comma : 1
with a new -> container : 1
with a new -> range : 1
with a new -> member : 1
new container and -> then : 1
container and then -> iterate : 1
and then iterate -> the : 1
then iterate the -> new : 1
iterate the new -> container : 1
the new container -> to : 1
new container to -> the : 1
to the maximum -> leaving : 1
the maximum leaving -> us : 1
maximum leaving us -> with : 1
leaving us with -> code : 1
us with code -> that : 1
with code that -> is : 1
code that is -> both : 1
that is both -> verbose : 1
is both verbose -> and : 1
both verbose and -> quite : 1
verbose and quite -> ineffective : 1
and quite ineffective -> due : 1
quite ineffective due -> to : 1
ineffective due to -> the : 1
to the code -> would : 1
the code would -> look : 1
code would look -> something : 1
something like as -> you : 1
like as you -> can : 1
is quite verbose -> for : 1
quite verbose for -> a : 1
verbose for a -> simple : 1
for a simple -> auto : 1
a simple auto -> archery : 1
simple auto archery -> the : 1
auto archery the -> warrior : 1
archery the warrior -> list : 1
the warrior list -> needs : 1
warrior list needs -> to : 1
list needs to -> be : 1
be copied in -> to : 1
copied in to -> filter : 1
in to filter -> to : 1
to filter to -> archery : 1
filter to archery -> auto : 1
to archery auto -> return : 1
archery auto return -> a : 1
auto return a -> usage : 1
return a usage -> warriors : 1
a usage warriors -> equals : 1
usage warriors equals -> you : 1
warriors equals you -> may : 1
equals you may -> now : 1
you may now -> be : 1
may now be -> thinking : 1
now be thinking -> that : 1
be thinking that -> could : 1
thinking that could -> be : 1
that could be -> written : 1
that could be -> executed : 1
could be written -> as : 1
be written as -> a : 1
written as a -> simple : 1
written as a -> color : 1
a simple which -> relieves : 1
simple which relieves -> us : 1
which relieves us -> of : 1
which relieves us -> from : 1
relieves us of -> the : 1
us of the -> extra : 1
of the extra -> allocation : 1
the extra allocation -> due : 1
extra allocation due -> to : 1
allocation due to -> auto : 1
due to auto -> return : 1
to auto return -> easily : 1
to auto return -> that : 1
auto return easily -> we : 1
return easily we -> would : 1
easily we would -> then : 1
we would then -> miss : 1
would then miss -> the : 1
then miss the -> readability : 1
miss the readability -> of : 1
readability of an -> as : 1
of an as -> mentioned : 1
an as mentioned -> a : 1
as mentioned a -> code : 1
mentioned a code -> base : 1
a code base -> full : 1
a code base -> littered : 1
a code base -> to : 1
a code base -> built : 1
code base full -> of : 1
base full of -> simply : 1
full of simply -> as : 1
of simply as -> every : 1
simply as every -> algorithm : 1
as every algorithm -> looks : 1
every algorithm looks -> or : 1
algorithm looks or -> we : 1
looks or we -> would : 1
or we would -> like : 1
would like is -> a : 1
like is a -> syntax : 1
is a syntax -> as : 1
a syntax as -> readable : 1
syntax as readable -> as : 1
as readable as -> using : 1
readable as using -> but : 1
as using but -> with : 1
using but with -> the : 1
ability to avoid -> constructing : 1
to avoid constructing -> new : 1
avoid constructing new -> containers : 1
constructing new containers -> for : 1
new containers for -> every : 1
containers for every -> step : 1
for every step -> in : 1
every step in -> the : 1
where the future -> ranges : 1
the future ranges -> library : 1
future ranges library -> takes : 1
ranges library takes -> off : 1
library takes off -> although : 1
takes off although -> the : 1
off although the -> ranges : 1
although the ranges -> library : 1
the ranges library -> is : 4
the ranges library -> has : 1
the ranges library -> also : 1
the ranges library -> that : 1
ranges library is -> the : 3
ranges library is -> available : 1
library is the -> essential : 1
library is the -> introduction : 1
library is the -> possibility : 1
is the essential -> difference : 1
the essential difference -> from : 1
essential difference from -> the : 1
difference from the -> stl : 1
from the stl -> library : 1
stl library is -> its : 1
library is its -> ability : 1
is its ability -> to : 1
its ability to -> compose : 1
ability to compose -> what : 1
to compose what -> is : 1
compose what is -> essentially : 1
what is essentially -> a : 1
is essentially a -> different : 1
essentially a different -> kind : 1
a different kind -> of : 1
different kind of -> iterators : 1
kind of iterators -> into : 1
of iterators into -> a : 1
iterators into a -> lazily : 1
into a lazily -> evaluated : 1
a lazily evaluated -> is : 1
lazily evaluated is -> what : 1
evaluated is what -> the : 1
is what the -> previous : 1
is what the -> individual : 1
what the previous -> example : 1
previous example would -> look : 1
example would look -> like : 1
look like if -> it : 1
if it were -> written : 1
if it were -> declared : 1
it were written -> using : 1
were written using -> the : 1
written using the -> ranges : 1
using the ranges -> rv : 1
using the ranges -> a : 1
using the ranges -> this : 1
the ranges rv -> auto : 1
ranges rv auto -> return : 1
rv auto return -> auto : 1
auto return we -> do : 1
auto return we -> were : 1
return we do -> is : 1
do is simply -> compose : 1
do is simply -> overload : 1
is simply compose -> a : 1
simply compose a -> range : 1
compose a range -> view : 1
a range view -> when : 1
range view when -> iterated : 1
view when iterated -> by : 1
when iterated by -> simply : 1
iterated by simply -> exposes : 1
by simply exposes -> the : 1
simply exposes the -> level : 1
exposes the level -> of : 1
the level of -> all : 1
the level of -> api : 1
level of all -> the : 1
all the is -> simply : 1
the is simply -> all : 1
is simply all -> filtered : 1
is simply all -> operating : 1
simply all filtered -> by : 1
all filtered by -> transformed : 1
filtered by transformed -> into : 1
by transformed into -> exposing : 1
transformed into exposing -> the : 1
into exposing the -> not : 1
exposing the not -> part : 1
the not part -> of : 1
not part of -> the : 1
standard the ranges -> library : 1
library is available -> at : 1
available at we -> think : 1
at we think -> a : 1
we think a -> far : 1
think a far -> too : 1
a far too -> important : 1
far too important -> enhancement : 1
far too important -> to : 1
too important enhancement -> of : 1
important enhancement of -> to : 1
enhancement of to -> ignore : 1
of to ignore -> in : 1
to ignore in -> this : 2
ignore in this -> so : 1
ignore in this -> if : 1
in this so -> give : 1
this so give -> you : 1
so give you -> a : 1
give you a -> brief : 2
you a brief -> introduction : 2
the ranges to -> the : 1
ranges to the -> ranges : 1
the ranges mentioned -> the : 1
ranges mentioned the -> stl : 1
mentioned the stl -> algorithm : 1
stl algorithm library -> has : 1
stl algorithm library -> is : 1
algorithm library has -> quite : 1
library has quite -> a : 1
has quite a -> verbose : 1
quite a verbose -> where : 1
a verbose where -> every : 1
verbose where every -> algorithm : 1
where every algorithm -> requires : 1
every algorithm requires -> a : 1
algorithm requires a -> pair : 1
requires a pair -> of : 1
pair of iterators -> as : 1
of iterators as -> the : 1
iterators as the -> ranges : 1
as the ranges -> library : 1
ranges library has -> overloaded : 1
library has overloaded -> these : 1
has overloaded these -> functions : 1
overloaded these functions -> but : 1
these functions but -> by : 1
functions but by -> taking : 1
but by taking -> a : 1
by taking a -> range : 1
taking a range -> as : 1
range as a -> parameter : 1
as a parameter -> instead : 1
a parameter instead -> of : 1
parameter instead of -> a : 1
of a pair -> of : 2
pair of algorithms -> operates : 1
of algorithms operates -> on : 1
algorithms operates on -> library : 1
operates on library -> operates : 1
on library operates -> on : 1
library operates on -> makes : 1
operates on makes -> the : 1
on makes the -> syntax : 1
makes the syntax -> of : 1
syntax of algorithms -> but : 1
of algorithms but -> the : 1
algorithms but the -> main : 1
but the main -> feature : 1
the main feature -> with : 1
main feature with -> the : 1
feature with the -> ranges : 1
with the ranges -> library : 1
is the introduction -> in : 1
the introduction in -> the : 1
introduction in the -> range : 1
the range library -> are : 1
range library are -> lazily : 1
library are lazily -> evaluated : 1
are lazily evaluated -> iterations : 1
lazily evaluated iterations -> over : 1
evaluated iterations over -> a : 1
iterations over a -> technically : 1
over a technically -> they : 1
a technically they -> are : 1
technically they are -> only : 1
are only iterators -> with : 1
only iterators with -> built : 1
iterators with built -> in : 1
with built in -> but : 1
built in but -> they : 1
in but they -> provide : 1
but they provide -> a : 1
they provide a -> very : 1
provide a very -> pleasant : 1
a very pleasant -> syntax : 1
very pleasant syntax -> for : 1
pleasant syntax for -> many : 1
syntax for many -> common : 1
for many common -> following : 1
many common following -> is : 1
common following is -> an : 1
of how a -> view : 1
of how a -> very : 1
of how a -> double : 1
how a view -> is : 1
a view is -> used : 1
view is used -> to : 1
iterate a vector -> of : 1
of numbers like -> if : 1
numbers like if -> it : 1
if it contained -> the : 1
it contained the -> squares : 1
contained the squares -> of : 1
the squares of -> the : 1
squares of the -> original : 1
of the original -> rv : 1
of the original -> program : 1
the original rv -> numbers : 1
original rv numbers -> return : 1
rv numbers return -> v : 2
numbers return v -> s : 1
numbers return v -> return : 1
return v s -> is : 1
v s is -> not : 1
s is not -> a : 1
is not a -> copy : 1
is not a -> more : 1
is not a -> in : 1
is not a -> look : 1
is not a -> complete : 1
is not a -> bottle : 1
not a copy -> of : 1
the vector with -> the : 1
vector with the -> values : 1
with the values -> it : 1
the values it -> is : 1
values it is -> a : 1
is a proxy -> object : 1
a proxy object -> for : 1
a proxy object -> is : 1
a proxy object -> in : 1
a proxy object -> to : 1
proxy object for -> one : 1
proxy object for -> distances : 1
object for one -> slight : 1
for one slight -> time : 1
one slight time -> you : 1
slight time you -> access : 1
time you access -> an : 1
you access an -> the : 1
access an the -> function : 1
an the function -> is : 1
is the you -> can : 1
you can still -> iterate : 1
can still iterate -> over : 1
still iterate over -> as : 1
iterate over as -> any : 1
over as any -> regular : 1
as any regular -> container : 1
any regular container -> perform : 1
regular container perform -> regular : 1
container perform regular -> algorithms : 1
perform regular algorithms -> such : 1
regular algorithms such -> as : 1
as or but -> you : 1
or but you -> created : 1
but you created -> another : 1
you created another -> you : 1
created another you -> want : 1
another you want -> to : 1
store the the -> view : 1
the the view -> can : 1
the view can -> be : 2
view can be -> simply : 1
view can be -> converted : 1
can be simply -> assigned : 1
be simply assigned -> to : 1
simply assigned to -> the : 1
to the container -> of : 1
the container of -> your : 1
the container of -> that : 1
container of your -> once : 1
of your once -> copied : 1
your once copied -> back : 1
once copied back -> to : 1
copied back to -> a : 1
back to a -> there : 1
to a there -> is : 1
a there is -> no : 2
a there is -> also : 1
no longer any -> dependency : 1
longer any dependency -> between : 1
any dependency between -> the : 1
dependency between the -> and : 1
between the and -> the : 1
and the transformed -> v : 1
the transformed v -> l : 1
transformed v l -> it : 1
v l it -> is : 1
l it is -> also : 1
create a filtered -> view : 1
a filtered view -> where : 1
filtered view where -> only : 1
view where only -> a : 1
where only a -> part : 1
only a part -> of : 1
the range is -> in : 1
the range is -> returned : 1
the range is -> or : 1
the range is -> split : 1
range is in -> this : 1
is in this -> only : 1
is in this -> the : 1
in this only -> the : 1
this only the -> elements : 1
only the elements -> that : 1
elements that satisfy -> the : 1
that satisfy the -> condition : 1
satisfy the condition -> are : 1
the condition are -> visible : 1
condition are visible -> when : 1
are visible when -> iterating : 1
visible when iterating -> the : 1
when iterating the -> odd : 1
iterating the odd -> rv : 1
the odd rv -> vals : 1
odd rv vals -> v : 1
rv vals v -> rv : 1
vals v rv -> v : 1
v rv v -> example : 1
rv v example -> of : 1
v example of -> the : 1
example of the -> versatility : 1
example of the -> basics : 1
example of the -> race : 1
of the versatility -> of : 1
the versatility of -> the : 1
versatility of the -> ranges : 1
of the ranges -> library : 1
is the possibility -> it : 1
the possibility it -> offers : 1
possibility it offers -> of : 1
it offers of -> creating : 1
offers of creating -> a : 1
of creating a -> view : 1
creating a view -> that : 1
a view that -> can : 1
view that can -> iterate : 1
that can iterate -> over : 1
can iterate over -> several : 1
iterate over several -> containers : 1
over several containers -> as : 1
several containers as -> if : 1
containers as if -> they : 1
as if they -> were : 1
if they were -> a : 1
they were a -> single : 1
were a single -> v : 1
a single v -> is : 1
single v is -> and : 1
v is and -> full : 1
is and full -> power : 1
and full power -> of : 1
full power of -> views : 1
power of views -> comes : 1
of views comes -> from : 1
views comes from -> the : 1
comes from the -> ability : 1
from the ability -> to : 2
ability to combine -> as : 1
to combine as -> they : 1
combine as they -> copy : 1
as they copy -> the : 1
they copy the -> actual : 1
copy the actual -> you : 1
the actual you -> can : 1
actual you can -> express : 1
you can express -> multiple : 1
can express multiple -> operations : 1
express multiple operations -> on : 1
multiple operations on -> a : 1
on a dataset -> only : 1
a dataset only -> iterating : 1
dataset only iterating -> over : 1
only iterating over -> it : 1
iterating over it -> rv : 1
over it rv -> numbers : 1
it rv numbers -> create : 1
rv numbers create -> a : 1
numbers create a -> squared : 1
create a squared -> return : 1
a squared return -> v : 1
squared return v -> evaluates : 1
return v evaluates -> to : 1
v evaluates to -> add : 1
evaluates to add -> a : 1
to add a -> filter : 1
add a filter -> onto : 1
a filter onto -> the : 1
filter onto the -> squared : 1
onto the squared -> return : 1
the squared return -> evaluates : 1
squared return evaluates -> to : 1
return evaluates to -> this : 1
return evaluates to -> ability : 1
evaluates to this -> might : 1
to this might -> not : 1
this might not -> look : 1
might not look -> syntactically : 1
not look syntactically -> but : 1
look syntactically but -> the : 1
syntactically but the -> ranges : 1
but the ranges -> library : 1
ranges library also -> allows : 1
library also allows -> us : 1
also allows us -> to : 1
allows us to -> compose : 1
allows us to -> separate : 1
allows us to -> use : 1
us to compose -> the : 1
to compose the -> views : 1
compose the views -> using : 1
the views using -> a : 1
views using a -> the : 1
a the pipe -> operator : 1
the pipe operator -> for : 1
the pipe operator -> in : 1
the pipe operator -> to : 1
the pipe operator -> although : 1
pipe operator for -> a : 1
operator for a -> much : 1
for a much -> more : 1
a much more -> elegant : 1
much more elegant -> will : 1
more elegant will -> learn : 1
elegant will learn -> more : 1
will learn more -> about : 1
learn more about -> using : 1
more about using -> the : 1
about using the -> pipe : 1
using the pipe -> operator : 1
using the pipe -> this : 1
pipe operator in -> your : 1
operator in your -> own : 1
in your own -> code : 1
your own code -> in : 1
own code in -> objects : 1
code in objects -> and : 1
in objects and -> lazy : 1
and lazy rv -> numbers : 1
lazy rv numbers -> return : 1
v return evaluates -> to : 1
evaluates to ability -> to : 1
to ability to -> read : 1
ability to read -> a : 1
to read a -> statement : 1
read a statement -> from : 1
a statement from -> left : 1
statement from left -> to : 1
from left to -> the : 1
left to the -> rather : 1
left to the -> client : 1
to the rather -> than : 1
rather than as -> is : 1
than as is -> the : 1
as is the -> case : 1
case with a -> regular : 1
case with a -> dangling : 1
a regular syntax -> using : 1
regular syntax using -> makes : 1
syntax using makes -> the : 1
using makes the -> code : 1
the code much -> easier : 1
code much easier -> to : 1
much easier to -> and : 1
to and ranges -> library : 1
and ranges library -> consists : 1
ranges library consists -> of : 1
library consists of -> three : 1
consists of three -> types : 1
of three types -> of : 1
three types of -> and : 1
three types of -> ownership : 1
types of and -> important : 1
of and important -> to : 1
and important to -> know : 1
to know the -> difference : 1
know the difference -> between : 1
difference between views -> and : 1
between views and -> the : 1
views and the -> following : 1
following code snippet -> shows : 1
code snippet shows -> what : 1
snippet shows what -> a : 1
shows what a -> simple : 1
what a simple -> procedure : 1
a simple procedure -> corresponds : 1
simple procedure corresponds -> to : 1
procedure corresponds to -> when : 1
corresponds to when -> using : 1
to when using -> actions : 1
when using actions -> versus : 1
using actions versus -> using : 1
actions versus using -> note : 1
versus using note -> how : 1
using note how -> the : 1
how the actions -> mutate : 1
the actions mutate -> the : 1
actions mutate the -> whereas : 1
mutate the whereas -> the : 1
whereas the view -> simply : 1
the view simply -> iterates : 1
view simply iterates -> return : 1
simply iterates return -> square : 1
iterates return square -> return : 1
return square return -> return : 1
square return return -> ra : 1
return return ra -> rv : 1
return ra rv -> print : 1
ra rv print -> odd : 1
rv print odd -> squares : 1
print odd squares -> using : 2
odd squares using -> v : 1
odd squares using -> a : 1
squares using v -> corresponds : 1
using v corresponds -> to : 1
v corresponds to -> the : 2
following code where -> c : 1
following code where -> is : 1
code where c -> is : 1
where c is -> c : 1
c is c -> v : 1
is c v -> print : 1
c v print -> odd : 1
v print odd -> squares : 1
squares using a -> v : 1
using a v -> corresponds : 1
a v corresponds -> to : 1
code where is -> only : 1
where is only -> auto : 1
is only auto -> s : 1
only auto s -> s : 1
auto s s -> work : 1
s s work -> like : 1
s work like -> standard : 1
work like standard -> stl : 1
like standard stl -> but : 1
standard stl but -> instead : 1
stl but instead -> of : 1
of using iterators -> as : 1
using iterators as -> they : 1
as they take -> containers : 1
they take containers -> and : 1
take containers and -> return : 1
containers and return -> new : 1
and return new -> modified : 1
return new modified -> stl : 1
new modified stl -> the : 1
modified stl the -> actions : 1
stl the actions -> of : 1
the actions of -> modify : 1
actions of modify -> the : 1
of modify the -> size : 1
modify the size -> of : 1
of the that -> returns : 1
of the that -> are : 1
the that returns -> a : 1
that returns a -> container : 1
returns a container -> where : 1
a container where -> the : 1
a container where -> elements : 1
container where the -> elements : 1
where the elements -> have : 1
elements have been -> erased : 1
have been erased -> from : 1
been erased from -> the : 1
erased from the -> whereas : 1
from the whereas -> simply : 1
the whereas simply -> returns : 1
whereas simply returns -> an : 1
simply returns an -> iterator : 1
to the last -> unique : 1
the last unique -> element : 1
last unique element -> and : 1
unique element and -> leaves : 1
element and leaves -> it : 1
and leaves it -> to : 1
leaves it to -> the : 1
to the programmer -> to : 2
programmer to actually -> erase : 1
to actually erase -> the : 1
actually erase the -> same : 1
erase the same -> goes : 1
same goes with -> a : 1
goes with a -> new : 1
a new range -> containing : 1
new range containing -> only : 1
range containing only -> the : 1
containing only the -> unique : 1
only the unique -> values : 1
the unique values -> are : 1
unique values are -> duplicates : 1
values are duplicates -> using : 1
are duplicates using -> stl : 1
duplicates using stl -> duplicates : 1
using stl duplicates -> using : 1
stl duplicates using -> the : 1
duplicates using the -> ranges : 1
the ranges a -> ints : 1
ranges a ints -> is : 1
a ints is -> it : 1
ints is it -> a : 1
is it a -> is : 1
it a is -> it : 1
a is it -> points : 1
is it points -> to : 1
it points to -> the : 1
it points to -> when : 1
to the fifth -> a : 1
the fifth a -> is : 1
fifth a is -> ra : 1
a is ra -> a : 1
is ra a -> a : 1
ra a a -> is : 1
a is they -> cannot : 1
is they cannot -> operate : 1
they cannot operate -> on : 1
cannot operate on -> the : 1
operate on the -> following : 1
operate on the -> same : 1
on the following -> example : 1
following example does -> not : 1
example does not -> numbers : 1
does not numbers -> does : 1
not numbers does -> not : 1
numbers does not -> cannot : 1
does not cannot -> sort : 1
not cannot sort -> a : 1
cannot sort a -> order : 1
sort a order -> to : 1
a order to -> mutate : 1
a order to -> iterate : 1
order to mutate -> a : 1
to mutate a -> container : 1
mutate a container -> using : 1
a container using -> actions : 1
container using actions -> you : 1
using actions you -> must : 1
actions you must -> choose : 1
you must choose -> one : 1
must choose one -> of : 1
choose one of -> the : 1
the the container -> as : 1
the container as -> an : 1
container as an -> the : 1
an the range -> is : 1
range is returned -> from : 1
is returned from -> a : 1
from a function -> or : 1
a function or -> via : 1
function or via -> the : 1
or via the -> action : 1
via the action -> with : 1
the action with -> of : 1
action with of -> mutates : 1
with of mutates -> the : 1
of mutates the -> container : 1
mutates the container -> in : 1
the container in -> following : 1
the container in -> any : 1
container in following -> are : 1
in following are -> examples : 1
following are examples -> of : 1
are examples of -> how : 1
how the approaches -> look : 1
the approaches look -> ra : 1
approaches look ra -> return : 1
look ra return -> v : 1
ra return v -> away : 1
return v away -> vals : 1
v away vals -> vals : 1
away vals vals -> is : 1
vals vals is -> vals : 2
vals vals is -> might : 1
vals is vals -> vals : 2
is vals vals -> is : 2
vals is might -> seem : 1
is might seem -> similar : 1
might seem similar -> to : 1
seem similar to -> but : 1
similar to but -> on : 1
to but on -> the : 1
but on the -> they : 1
on the they -> are : 1
the they are -> completely : 1
they are completely -> while : 1
are completely while -> an : 1
completely while an -> action : 1
while an action -> operates : 1
an action operates -> on : 1
action operates on -> the : 1
operates on the -> input : 1
on the input -> container : 1
on the input -> and : 2
the input container -> and : 1
input container and -> returns : 1
container and returns -> a : 1
and returns a -> mutated : 1
returns a mutated -> views : 1
a mutated views -> simply : 1
mutated views simply -> return : 1
views simply return -> a : 1
simply return a -> proxy : 1
return a proxy -> when : 1
a proxy when -> looks : 1
proxy when looks -> like : 1
when looks like -> a : 1
looks like a -> mutated : 1
like a mutated -> the : 1
a mutated the -> container : 1
mutated the container -> is : 1
the container is -> not : 1
the container is -> auto : 1
container is not -> mutated : 1
is not mutated -> at : 1
not mutated at -> all : 1
mutated at all -> the : 1
at all the -> processing : 1
all the processing -> is : 1
the processing is -> performed : 1
processing is performed -> in : 1
is performed in -> the : 1
is performed in -> parallel : 1
performed in the -> with : 1
performed in the -> gpus : 1
in the with -> the : 1
with the as -> actions : 1
with the as -> auto : 1
with the as -> this : 1
the as actions -> transforms : 1
as actions transforms -> the : 1
actions transforms the -> they : 1
transforms the they -> cannot : 1
the they cannot -> transform : 1
they cannot transform -> the : 1
cannot transform the -> whereas : 1
cannot transform the -> strings : 1
transform the whereas -> views : 1
the whereas views -> can : 1
whereas views can -> transform : 1
views can transform -> to : 1
can transform to -> a : 1
transform to a -> view : 1
to a view -> of : 1
a view of -> any : 1
view of any -> following : 1
of any following -> where : 1
any following where -> an : 1
following where an -> is : 1
where an is -> transformed : 1
an is transformed -> to : 1
is transformed to -> a : 1
transformed to a -> can : 1
to a can -> only : 1
a can only -> be : 1
can only be -> performed : 1
can only be -> located : 1
can only be -> converted : 1
only be performed -> using : 1
be performed using -> note : 1
performed using note -> just : 1
using note just -> a : 1
note just a -> the : 1
just a the -> actual : 1
a the actual -> returned : 1
a the actual -> squared : 1
the actual returned -> string : 1
actual returned string -> is : 1
returned string is -> not : 1
string is not -> constructed : 1
is not constructed -> until : 1
not constructed until -> the : 1
constructed until the -> view : 1
until the view -> is : 1
the view is -> ra : 1
view is ra -> rv : 1
is ra rv -> return : 1
ra rv return -> an : 1
rv return an -> action : 1
return an action -> cannot : 1
an action cannot -> transform : 1
action cannot transform -> the : 1
transform the strings -> return : 1
the strings return -> does : 1
strings return does -> not : 1
return does not -> a : 1
does not a -> view : 1
not a view -> can : 1
a view can -> transform : 1
view can transform -> the : 1
can transform the -> type : 1
transform the type -> ints : 1
the type ints -> ints : 1
type ints ints -> return : 1
ints ints return -> mimic : 1
ints return mimic -> the : 1
return mimic the -> behavior : 1
mimic the behavior -> of : 1
behavior of can -> transform : 1
of can transform -> data : 1
can transform data -> to : 1
transform data to -> a : 1
data to a -> container : 1
with a different -> value : 1
a different value -> the : 1
different value the -> view : 1
value the view -> can : 1
can be converted -> to : 1
be converted to -> a : 2
converted to a -> this : 1
converted to a -> regular : 1
converted to a -> floating : 1
to a this -> can : 1
a this can -> be : 1
can be performed -> either : 1
be performed either -> by : 1
performed either by -> using : 1
either by using -> the : 1
using the or -> by : 1
the or by -> simply : 1
or by simply -> assigning : 1
by simply assigning -> the : 1
simply assigning the -> view : 1
assigning the view -> to : 1
the view to -> the : 1
view to the -> range : 1
to the range -> of : 1
the range of -> using : 1
the range of -> faster : 1
range of using -> explicit : 1
of using explicit -> container : 1
using explicit container -> and : 1
explicit container and -> rv : 1
container and rv -> a : 1
and rv a -> return : 1
rv a return -> rv : 1
rv a return -> algorithms : 1
a return rv -> a : 1
return rv a -> return : 1
a return algorithms -> in : 1
return algorithms in -> the : 1
in the ranges -> library : 1
ranges library that -> do : 1
library that do -> not : 1
do not return -> a : 1
return a view -> or : 1
a view or -> are : 1
view or are -> simply : 1
or are simply -> referred : 1
are simply referred -> to : 1
simply referred to -> as : 1
to as examples -> of : 1
as examples of -> such : 1
of such algorithms -> and : 1
such algorithms and -> so : 1
algorithms and so -> they : 1
and so they -> work : 1
so they work -> exactly : 1
they work exactly -> as : 1
work exactly as -> algorithms : 1
exactly as algorithms -> in : 1
as algorithms in -> with : 1
algorithms in with -> the : 1
in with the -> exception : 1
with the exception -> that : 2
the exception that -> they : 1
the exception that -> it : 1
exception that they -> use : 1
that they use -> a : 1
they use a -> range : 1
use a range -> as : 1
range as input -> instead : 1
as input instead -> of : 1
input instead of -> a : 1
pair of actions -> and : 1
of actions and -> algorithms : 1
actions and algorithms -> cannot : 1
and algorithms cannot -> be : 1
algorithms cannot be -> chained : 1
cannot be chained -> with : 1
be chained with -> cars : 1
chained with cars -> using : 1
with cars using -> the : 1
cars using the -> stl : 1
the stl using -> the : 1
stl using the -> ranges : 1
the ranges this -> you : 1
ranges this you -> learned : 1
use the basic -> concepts : 1
basic concepts in -> the : 1
concepts in the -> stl : 1
algorithm the advantages -> of : 1
of using them -> as : 1
using them as -> building : 1
them as building -> blocks : 1
building blocks instead -> of : 1
instead of handwritten -> and : 1
of handwritten and -> why : 1
handwritten and why -> using : 1
and why using -> the : 1
why using the -> stl : 1
algorithm library is -> beneficial : 1
library is beneficial -> for : 1
is beneficial for -> optimizing : 1
beneficial for optimizing -> your : 1
for optimizing your -> code : 1
optimizing your code -> at : 1
your code at -> a : 1
code at a -> later : 1
a later we -> also : 1
later we also -> discussed : 1
we also discussed -> the : 1
also discussed the -> guarantees : 1
discussed the guarantees -> and : 1
the guarantees and -> of : 1
guarantees and of -> the : 1
and of the -> stl : 1
the stl meaning -> that : 1
stl meaning that -> you : 1
meaning that you -> from : 1
meaning that you -> understood : 1
meaning that you -> will : 1
that you from -> now : 1
you from now -> use : 1
from now use -> them : 1
now use them -> with : 1
use them with -> the : 1
them with the -> we : 1
with the we -> had : 1
the we had -> a : 1
had a brief -> look : 1
a brief look -> at : 2
brief look at -> the : 1
brief look at -> how : 1
at the upcoming -> ranges : 1
the upcoming ranges -> which : 1
upcoming ranges which -> simplifies : 1
ranges which simplifies -> range : 1
which simplifies range -> handling : 1
simplifies range handling -> a : 1
range handling a -> lot : 1
handling a lot -> using : 1
a lot using -> the : 1
lot using the -> advantages : 1
using the advantages -> of : 1
advantages of the -> algorithms : 1
the algorithms instead -> of : 1
instead of your -> code : 1
base is well -> prepared : 1
is well prepared -> for : 1
well prepared for -> the : 1
prepared for the -> parallelization : 1
for the parallelization -> techniques : 1
the parallelization techniques -> that : 1
parallelization techniques that -> will : 1
techniques that will -> be : 1
that will be -> discussed : 1
be discussed in -> the : 1
discussed in the -> coming : 1
in the coming -> chapters : 1
the coming chapters -> of : 1
coming chapters of -> this : 1
chapters of this -> reading : 1
of this reading -> the : 1
this reading the -> previous : 1
reading the previous -> it : 1
the previous it -> should : 1
previous it should -> no : 1
it should no -> longer : 1
should no longer -> come : 1
no longer come -> as : 1
longer come as -> a : 1
come as a -> surprise : 1
as a surprise -> that : 1
a surprise that -> the : 1
surprise that the -> way : 1
way we handle -> memory : 1
we handle memory -> can : 1
handle memory can -> have : 1
memory can have -> a : 1
have a huge -> impact : 1
a huge impact -> on : 1
huge impact on -> the : 1
the the cpu -> spends : 1
the cpu spends -> a : 1
cpu spends a -> lot : 1
spends a lot -> of : 1
of time shuffling -> data : 1
time shuffling data -> between : 1
shuffling data between -> the : 1
data between the -> cpu : 1
data between the -> sharing : 1
the cpu registers -> and : 1
cpu registers and -> the : 1
registers and the -> main : 1
and the main -> memory : 1
main memory and -> storing : 1
memory and storing -> data : 1
and storing data -> to : 1
storing data to -> and : 1
data to and -> from : 1
to and from -> the : 1
the main as -> shown : 1
main as shown -> in : 1
in the cpu -> uses : 1
the cpu uses -> memory : 1
cpu uses memory -> caches : 1
uses memory caches -> to : 1
memory caches to -> speed : 1
caches to speed -> up : 1
up the access -> of : 1
the access of -> and : 1
access of and -> the : 1
and the programs -> need : 1
the programs need -> to : 1
programs need to -> be : 1
be in order -> to : 1
order to run -> this : 1
to run this -> chapter : 1
run this chapter -> will : 1
this chapter will -> reveal : 1
this chapter will -> come : 1
this chapter will -> also : 1
this chapter will -> hopefully : 1
chapter will reveal -> more : 1
will reveal more -> aspects : 1
reveal more aspects -> of : 1
more aspects of -> how : 1
aspects of how -> computers : 1
of how computers -> work : 1
how computers work -> with : 1
computers work with -> memory : 1
work with memory -> so : 1
with memory so -> that : 1
memory so that -> we : 1
that we know -> which : 1
we know which -> things : 1
know which things -> must : 1
which things must -> be : 1
things must be -> considered : 1
must be considered -> when : 1
be considered when -> tuning : 1
considered when tuning -> memory : 1
when tuning memory -> we : 1
tuning memory we -> will : 1
memory we will -> discuss : 1
will discuss automatic -> memory : 1
discuss automatic memory -> allocation : 1
automatic memory allocation -> and : 1
memory allocation and -> dynamic : 1
allocation and dynamic -> memory : 1
and dynamic memory -> and : 1
dynamic memory and -> look : 1
dynamic memory and -> avoid : 1
memory and look -> at : 1
and look at -> the : 1
at the life -> cycle : 1
the life cycle -> of : 1
life cycle of -> a : 1
cycle of a -> sometimes : 1
of a sometimes -> there : 1
a sometimes there -> are : 1
sometimes there are -> hard : 1
there are hard -> memory : 1
are hard memory -> limits : 1
hard memory limits -> that : 1
memory limits that -> force : 1
limits that force -> us : 1
that force us -> to : 1
force us to -> keep : 1
us to keep -> our : 1
to keep our -> data : 1
keep our data -> representation : 1
our data representation -> and : 1
data representation and -> sometimes : 1
representation and sometimes -> we : 1
and sometimes we -> have : 1
and sometimes we -> need : 1
sometimes we have -> plenty : 1
we have plenty -> of : 1
have plenty of -> memory : 1
plenty of memory -> available : 1
of memory available -> but : 1
memory available but -> need : 1
available but need -> the : 1
but need the -> program : 1
need the program -> to : 1
program to go -> faster : 1
to go faster -> by : 1
go faster by -> making : 1
making the memory -> management : 1
the memory management -> more : 1
the memory management -> in : 1
the memory management -> system : 1
memory management more -> allocating : 1
management more allocating -> and : 1
more allocating and -> deallocating : 1
and deallocating dynamic -> memory : 1
deallocating dynamic memory -> is : 1
dynamic memory is -> relatively : 1
dynamic memory is -> not : 1
dynamic memory is -> allocated : 1
memory is relatively -> expensive : 1
is relatively expensive -> at : 1
relatively expensive at -> we : 1
expensive at we -> need : 1
at we need -> to : 1
need to avoid -> unnecessary : 1
avoid unnecessary allocations -> to : 1
unnecessary allocations to -> make : 1
allocations to make -> the : 1
make the program -> run : 1
the program run -> will : 1
program run will -> start : 1
run will start -> this : 1
will start this -> chapter : 2
start this chapter -> by : 1
start this chapter -> off : 1
chapter by explaining -> some : 1
by explaining some -> concepts : 1
explaining some concepts -> that : 1
some concepts that -> we : 1
concepts that we -> need : 1
that we need -> to : 3
that we need -> a : 1
need to understand -> before : 2
to understand before -> we : 1
to understand before -> writing : 1
understand before we -> dig : 1
before we dig -> deeper : 1
we dig deeper -> into : 1
dig deeper into -> memory : 1
dig deeper into -> custom : 1
deeper into memory -> this : 1
into memory this -> introduction : 1
memory this introduction -> will : 1
this introduction will -> explain : 1
introduction will explain -> virtual : 1
will explain virtual -> memory : 1
explain virtual memory -> and : 1
virtual memory and -> virtual : 1
virtual memory and -> finally : 1
memory and virtual -> address : 1
virtual address stack -> memory : 1
address stack memory -> versus : 1
stack memory versus -> heap : 1
memory versus heap -> and : 1
versus heap and -> swap : 1
heap and swap -> physical : 1
and swap physical -> memory : 1
swap physical memory -> of : 1
physical memory of -> a : 1
memory of a -> computer : 1
of a computer -> is : 1
a computer is -> shared : 1
computer is shared -> among : 1
among all running -> on : 1
all running on -> a : 1
running on a -> if : 1
running on a -> machine : 1
on a if -> one : 1
a if one -> process : 1
if one process -> uses : 1
one process uses -> a : 1
process uses a -> lot : 1
uses a lot -> of : 1
the other processes -> will : 1
other processes will -> most : 1
processes will most -> likely : 1
most likely be -> but : 1
most likely be -> switched : 1
likely be but -> from : 1
be but from -> a : 1
but from a -> we : 1
from a we -> usually : 1
a we usually -> have : 1
we usually have -> to : 1
usually have to -> bother : 1
have to bother -> about : 1
to bother about -> the : 1
bother about the -> memory : 1
about the memory -> that : 1
about the memory -> usage : 1
about the memory -> model : 1
the memory that -> is : 1
the memory that -> the : 1
the memory that -> was : 1
the memory that -> this : 1
that is being -> used : 2
that is being -> shared : 1
being used by -> other : 1
being used by -> the : 1
used by other -> this : 1
by other this -> isolation : 1
other this isolation -> of : 1
this isolation of -> memory : 1
isolation of memory -> is : 1
of memory is -> due : 1
memory is due -> to : 1
is due to -> the : 1
to the fact -> that : 2
fact that most -> operating : 1
that most operating -> systems : 1
most operating systems -> today : 1
operating systems today -> are : 1
systems today are -> operating : 1
today are operating -> which : 1
are operating which -> provide : 1
operating which provide -> the : 1
which provide the -> illusion : 1
provide the illusion -> that : 1
the illusion that -> a : 1
illusion that a -> process : 1
that a process -> has : 1
a process has -> all : 1
process has all -> the : 1
has all the -> memory : 2
all the memory -> for : 1
all the memory -> that : 1
the memory for -> each : 1
memory for each -> process : 1
for each process -> has : 1
each process has -> its : 1
process has its -> own : 1
its own address -> virtual : 1
own address virtual -> address : 1
address virtual address -> in : 1
address in the -> virtual : 1
in the virtual -> address : 1
in the virtual -> memory : 1
the virtual address -> space : 3
the virtual address -> is : 1
virtual address space -> that : 1
virtual address space -> bigger : 1
virtual address space -> of : 1
virtual address space -> for : 1
address space that -> programmers : 1
space that programmers -> see : 1
that programmers see -> are : 1
programmers see are -> mapped : 1
see are mapped -> to : 1
are mapped to -> physical : 1
are mapped to -> the : 1
mapped to physical -> addresses : 1
to physical addresses -> by : 1
physical addresses by -> the : 1
addresses by the -> operating : 1
by the operating -> system : 3
the operating system -> and : 1
the operating system -> to : 2
the operating system -> checks : 1
the operating system -> will : 1
the operating system -> scheduler : 1
the operating system -> these : 1
the operating system -> usually : 1
the operating system -> has : 1
operating system and -> the : 1
system and the -> management : 1
and the management -> which : 1
the management which -> is : 1
management which is -> a : 1
is a part -> of : 2
the this mapping -> or : 1
this mapping or -> translation : 1
mapping or translation -> happens : 1
or translation happens -> each : 1
translation happens each -> time : 1
happens each time -> we : 1
time we access -> a : 1
we access a -> memory : 1
access a memory -> extra : 1
a memory extra -> layer : 1
memory extra layer -> of : 1
extra layer of -> indirection : 1
layer of indirection -> makes : 1
of indirection makes -> it : 1
indirection makes it -> possible : 1
it possible for -> the : 1
it possible for -> processes : 1
it possible for -> a : 1
it possible for -> threads : 1
possible for the -> operating : 1
possible for the -> consumer : 1
possible for the -> system : 1
possible for the -> audio : 1
for the operating -> system : 1
operating system to -> use : 1
operating system to -> support : 1
system to use -> physical : 1
to use physical -> memory : 1
use physical memory -> for : 1
physical memory for -> the : 1
memory for the -> parts : 1
for the parts -> of : 1
of a process -> that : 1
a process that -> are : 1
a process that -> was : 1
process that are -> currently : 1
currently being used -> and : 1
being used and -> back : 1
used and back -> up : 1
and back up -> the : 1
back up the -> rest : 1
up the rest -> of : 1
of the virtual -> memory : 1
of the virtual -> address : 1
the virtual memory -> in : 1
the virtual memory -> which : 1
the virtual memory -> addresses : 1
the virtual memory -> the : 1
virtual memory in -> this : 1
memory in this -> we : 1
can see the -> physical : 1
see the physical -> main : 1
the physical main -> memory : 1
physical main memory -> as : 1
main memory as -> a : 1
as a cache -> for : 1
a cache for -> the : 1
cache for the -> virtual : 1
for the virtual -> memory : 1
virtual memory which -> resides : 1
memory which resides -> on : 1
which resides on -> secondary : 1
resides on secondary -> the : 1
on secondary the -> areas : 1
secondary the areas -> of : 1
the areas of -> the : 1
areas of the -> secondary : 1
of the secondary -> storage : 1
the secondary storage -> that : 1
secondary storage that -> are : 1
storage that are -> used : 1
that are used -> for : 1
used for backing -> up : 1
for backing up -> memory : 1
backing up memory -> pages : 1
up memory pages -> are : 1
memory pages are -> usually : 1
pages are usually -> called : 1
are usually called -> swap : 1
are usually called -> another : 1
usually called swap -> swap : 1
called swap swap -> pagefile : 1
swap swap pagefile -> depending : 1
swap pagefile depending -> on : 1
pagefile depending on -> the : 1
on the operating -> memory : 1
the operating memory -> makes : 1
operating memory makes -> it : 1
memory makes it -> possible : 1
memory makes it -> fairly : 1
possible for processes -> to : 1
for processes to -> have : 1
processes to have -> a : 1
have a virtual -> address : 1
a virtual address -> space : 1
a virtual address -> cdpaligncenter : 1
address space bigger -> than : 1
space bigger than -> the : 1
bigger than the -> physical : 1
than the physical -> address : 1
the physical address -> since : 1
the physical address -> cdpaligncenter : 1
physical address since -> virtual : 1
address since virtual -> memory : 1
since virtual memory -> that : 1
virtual memory that -> is : 1
is not in -> use : 1
not in use -> does : 1
not in use -> do : 1
in use does -> not : 1
use does not -> have : 1
have to occupy -> physical : 2
to occupy physical -> most : 1
to occupy physical -> can : 1
occupy physical most -> common : 1
physical most common -> way : 1
most common way -> to : 1
way to implement -> virtual : 1
to implement virtual -> memory : 1
implement virtual memory -> today : 1
virtual memory today -> is : 1
memory today is -> to : 1
today is to -> divide : 1
is to divide -> the : 1
to divide the -> address : 1
to divide the -> running : 1
divide the address -> space : 1
the address space -> in : 1
address space in -> fixed : 1
space in fixed -> sized : 1
in fixed sized -> blocks : 1
fixed sized blocks -> called : 1
sized blocks called -> when : 1
blocks called when -> a : 1
called when a -> process : 1
when a process -> accesses : 1
when a process -> contains : 1
a process accesses -> memory : 1
process accesses memory -> at : 1
accesses memory at -> a : 1
memory at a -> virtual : 1
at a virtual -> the : 1
a virtual the -> operating : 1
virtual the operating -> system : 1
operating system checks -> whether : 1
system checks whether -> the : 1
checks whether the -> memory : 1
checks whether the -> pointer : 1
whether the memory -> page : 1
whether the memory -> to : 1
the memory page -> is : 3
the memory page -> has : 1
the memory page -> that : 1
the memory page -> will : 1
memory page is -> backed : 1
memory page is -> not : 1
memory page is -> simply : 1
page is backed -> by : 1
is backed by -> physical : 1
backed by physical -> memory : 1
by physical memory -> page : 1
physical memory page -> if : 1
memory page if -> the : 1
page if the -> memory : 1
if the memory -> page : 2
page is not -> mapped : 1
is not mapped -> in : 1
not mapped in -> the : 1
mapped in the -> main : 1
in the main -> a : 2
the main a -> hardware : 1
the main a -> page : 1
main a hardware -> exception : 1
a hardware exception -> occurs : 1
hardware exception occurs -> and : 1
exception occurs and -> the : 1
occurs and the -> page : 1
and the page -> is : 1
the page is -> loaded : 1
page is loaded -> from : 1
is loaded from -> disk : 1
loaded from disk -> into : 1
from disk into -> this : 1
disk into this -> type : 1
into this type -> of : 1
this type of -> hardware : 1
type of hardware -> exception : 1
of hardware exception -> is : 1
hardware exception is -> called : 1
exception is called -> a : 1
is called a -> this : 1
called a this -> is : 1
not an error -> but : 1
an error but -> a : 1
error but a -> necessary : 1
but a necessary -> interrupt : 1
a necessary interrupt -> in : 1
necessary interrupt in -> order : 1
interrupt in order -> to : 1
order to load -> data : 1
to load data -> from : 1
load data from -> disk : 1
data from disk -> to : 1
from disk to -> as : 1
disk to as -> you : 1
to as you -> may : 1
as you may -> have : 1
you may have -> guessed : 1
may have guessed -> this : 1
have guessed this -> is : 1
guessed this is -> very : 1
this is very -> slow : 1
this is very -> but : 1
is very slow -> compared : 1
very slow compared -> to : 1
compared to reading -> data : 1
to reading data -> that : 1
reading data that -> is : 1
is already resident -> in : 1
already resident in -> there : 1
resident in there -> are : 1
in there are -> no : 1
in there are -> a : 1
in there are -> already : 1
no more available -> page : 1
more available page -> frames : 1
available page frames -> in : 1
page frames in -> the : 1
frames in the -> main : 1
main a page -> frame : 1
a page frame -> has : 1
page frame has -> to : 1
frame has to -> be : 1
be if the -> page : 1
be if the -> is : 1
if the page -> to : 1
the page to -> be : 1
page to be -> evicted : 1
to be evicted -> is : 1
be evicted is -> that : 1
evicted is that -> it : 1
has been modified -> since : 1
been modified since -> it : 1
modified since it -> was : 1
it was last -> loaded : 1
was last loaded -> from : 1
last loaded from -> it : 1
loaded from it -> needs : 1
from it needs -> to : 1
to be written -> to : 1
be written to -> disk : 1
written to disk -> before : 1
to disk before -> it : 1
disk before it -> can : 1
before it can -> be : 1
can be this -> mechanism : 1
be this mechanism -> is : 1
this mechanism is -> called : 1
mechanism is called -> if : 1
is called if -> the : 1
called if the -> memory : 1
memory page has -> not : 1
page has not -> been : 1
not been the -> memory : 1
been the memory -> page : 1
page is simply -> all : 1
simply all operating -> systems : 1
all operating systems -> that : 1
operating systems that -> support : 1
systems that support -> virtual : 1
that support virtual -> memory : 1
support virtual memory -> support : 1
virtual memory support -> for : 1
memory support for -> does : 1
support for does -> have : 1
for does have -> virtual : 1
does have virtual -> memory : 1
have virtual memory -> but : 1
virtual memory but -> dirty : 1
memory but dirty -> pages : 1
but dirty pages -> are : 1
dirty pages are -> never : 1
pages are never -> stored : 1
are never stored -> to : 1
never stored to -> only : 1
stored to only -> clean : 1
to only clean -> pages : 1
only clean pages -> can : 1
clean pages can -> be : 1
pages can be -> evicted : 1
can be evicted -> from : 1
be evicted from -> if : 1
evicted from if -> the : 1
from if the -> main : 1
if the main -> memory : 1
memory is ios -> will : 1
is ios will -> start : 1
ios will start -> until : 1
will start until -> there : 1
start until there -> is : 1
until there is -> enough : 1
there is enough -> free : 1
is enough free -> memory : 1
enough free memory -> following : 1
free memory following -> diagram : 1
memory following diagram -> shows : 1
following diagram shows -> two : 2
following diagram shows -> the : 1
diagram shows two -> running : 1
diagram shows two -> examples : 1
shows two running -> they : 1
two running they -> both : 1
running they both -> have : 1
they both have -> their : 1
both have their -> own : 1
their own virtual -> memory : 1
own virtual memory -> some : 1
virtual memory some -> of : 1
memory some of -> the : 1
of the pages -> are : 1
the pages are -> mapped : 1
pages are mapped -> to : 1
mapped to the -> physical : 1
to the physical -> memory : 1
the physical memory -> and : 1
physical memory and -> some : 1
physical memory and -> constantly : 1
memory and some -> are : 1
and some are -> if : 1
some are if -> process : 1
are if process -> needs : 1
if process needs -> to : 1
process needs to -> use : 1
to use memory -> in : 1
use memory in -> the : 1
memory in the -> memory : 1
in the memory -> page : 1
memory page that -> starts : 1
page that starts -> at : 1
that starts at -> address : 1
that starts at -> the : 1
starts at address -> a : 1
at address a -> page : 1
address a page -> fault : 1
a page fault -> will : 1
page fault will -> the : 1
fault will the -> memory : 1
will the memory -> page : 1
memory page will -> then : 1
page will then -> be : 1
will then be -> mapped : 1
then be mapped -> to : 1
be mapped to -> a : 1
mapped to a -> vacant : 1
mapped to a -> memory : 1
to a vacant -> memory : 1
a vacant memory -> note : 1
vacant memory note -> that : 1
memory note that -> the : 1
that the virtual -> memory : 1
virtual memory addresses -> are : 1
the same as -> the : 1
the same as -> when : 1
the same as -> had : 1
the same as -> if : 2
same as the -> physical : 1
as the physical -> the : 1
the physical the -> first : 1
physical the first -> memory : 1
the first memory -> page : 1
first memory page -> of : 1
memory page of -> process : 1
page of process -> which : 1
of process which -> starts : 1
process which starts -> at : 1
which starts at -> the : 1
starts at the -> virtual : 1
starts at the -> physical : 1
at the virtual -> address : 1
virtual address is -> mapped : 1
address is mapped -> to : 1
is mapped to -> a : 1
to a memory -> frame : 1
a memory frame -> that : 1
memory frame that -> starts : 1
frame that starts -> at : 1
at the physical -> address : 1
physical address cdpaligncenter -> cdpaligncenter : 1
address cdpaligncenter cdpaligncenter -> memory : 1
cdpaligncenter cdpaligncenter memory -> pages : 1
cdpaligncenter memory pages -> mapped : 1
memory pages mapped -> to : 1
pages mapped to -> memory : 1
mapped to memory -> frames : 1
to memory frames -> in : 1
memory frames in -> physical : 1
frames in physical -> memory : 1
in physical memory -> pages : 1
physical memory pages -> that : 1
memory pages that -> are : 1
pages that are -> not : 1
are not in -> use : 1
in use do -> not : 1
use do not -> have : 1
occupy physical can -> happen : 1
physical can happen -> when : 1
can happen when -> a : 1
can happen when -> two : 1
happen when a -> system : 1
when a system -> runs : 1
when a system -> grows : 1
a system runs -> low : 1
system runs low -> on : 1
runs low on -> physical : 1
low on physical -> memory : 1
on physical memory -> and : 1
memory and constantly -> whenever : 1
and constantly whenever -> a : 1
constantly whenever a -> process : 1
whenever a process -> gets : 1
a process gets -> time : 1
process gets time -> scheduled : 1
gets time scheduled -> on : 1
time scheduled on -> the : 1
the it tries -> to : 1
it tries to -> access : 1
to access memory -> that : 1
memory that has -> been : 1
has been paged -> loading : 1
been paged loading -> new : 1
paged loading new -> memory : 1
loading new memory -> pages : 1
new memory pages -> means : 1
memory pages means -> that : 1
pages means that -> the : 1
that the other -> pages : 1
the other pages -> first : 1
other pages first -> have : 1
pages first have -> to : 1
first have to -> be : 1
to be stored -> moving : 1
to be stored -> so : 1
be stored moving -> data : 1
stored moving data -> back : 1
moving data back -> and : 1
data back and -> forth : 4
data back and -> the : 1
back and forth -> between : 1
back and forth -> with : 1
back and forth -> to : 3
and forth between -> disk : 1
forth between disk -> and : 1
between disk and -> memory : 1
disk and memory -> is : 1
and memory is -> usually : 1
memory is usually -> very : 1
is usually very -> so : 1
usually very so -> in : 1
very so in -> some : 1
very so in -> order : 1
so in some -> this : 1
in some this -> more : 1
some this more -> or : 1
this more or -> less : 1
more or less -> stalls : 1
more or less -> nothing : 1
or less stalls -> the : 1
less stalls the -> since : 1
stalls the since -> the : 1
the since the -> system : 1
since the system -> spends : 1
the system spends -> all : 1
system spends all -> its : 1
spends all its -> time : 1
all its time -> looking : 1
its time looking -> at : 1
time looking at -> the : 1
at the page -> fault : 1
the page fault -> frequency : 1
page fault frequency -> is : 1
fault frequency is -> a : 1
frequency is a -> good : 1
a good way -> to : 1
a good way -> of : 1
good way to -> determine : 1
way to determine -> whether : 1
whether the program -> has : 1
the program has -> started : 1
the program has -> just : 1
program has started -> stack : 1
has started stack -> and : 1
started stack and -> the : 1
and the heap -> are : 1
and the heap -> reside : 1
and the heap -> grows : 1
the heap are -> the : 1
heap are the -> two : 1
are the two -> most : 1
the two most -> important : 1
two most important -> memory : 1
most important memory -> segments : 1
important memory segments -> in : 1
memory segments in -> a : 1
segments in a -> there : 1
in a there -> is : 1
is also static -> storage : 1
also static storage -> and : 1
static storage and -> thread : 1
storage and thread -> local : 1
and thread local -> but : 1
thread local but -> more : 1
local but more -> on : 1
but more on -> that : 1
on that to -> be : 1
that to be -> formally : 1
to be formally -> talk : 1
be formally talk -> about : 1
formally talk about -> stack : 1
talk about stack -> and : 1
about stack and -> it : 1
stack and it -> talks : 1
and it talks -> about : 1
it talks about -> storage : 1
talks about storage -> classes : 1
about storage classes -> and : 1
storage classes and -> the : 1
classes and the -> storage : 1
and the storage -> duration : 1
the storage duration -> of : 2
storage duration of -> since : 1
storage duration of -> the : 1
duration of since -> the : 1
of since the -> concepts : 1
since the concepts -> of : 1
concepts of stack -> and : 1
of stack and -> heap : 1
stack and heap -> are : 1
stack and heap -> in : 1
stack and heap -> rather : 1
stack and heap -> grow : 1
and heap are -> widely : 1
heap are widely -> used : 1
are widely used -> in : 1
widely used in -> the : 1
the and all -> the : 1
all the implementations -> of : 1
the implementations of -> that : 1
implementations of that -> we : 1
we are aware -> of : 1
aware of use -> a : 1
of use a -> stack : 1
use a stack -> to : 1
a stack to -> implement : 1
stack to implement -> function : 1
to implement function -> calls : 1
implement function calls -> and : 1
function calls and -> manage : 1
calls and manage -> automatic : 1
and manage automatic -> storage : 1
manage automatic storage -> of : 1
automatic storage of -> local : 1
storage of local -> we : 1
of local we -> think : 1
local we think -> it : 1
we think it -> is : 3
think it is -> important : 1
think it is -> a : 1
think it is -> far : 1
important to understand -> what : 1
important to understand -> that : 1
important to understand -> the : 1
important to understand -> why : 1
important to understand -> when : 1
understand what stack -> and : 1
what stack and -> heap : 1
and heap in -> this : 1
heap in this -> we : 1
we are also -> using : 1
are also using -> the : 1
also using the -> terms : 1
using the terms -> stack : 1
the terms stack -> and : 1
terms stack and -> heap : 1
and heap rather -> than : 1
heap rather than -> the : 1
than the storage -> duration : 1
duration of the -> stack : 1
of the stack -> and : 1
of the stack -> is : 3
of the stack -> allocated : 1
of the stack -> differs : 1
of the stack -> end : 1
the heap reside -> in : 1
heap reside in -> the : 1
reside in the -> virtual : 1
reside in the -> namespace : 1
virtual memory the -> stack : 1
memory the stack -> is : 1
the stack is -> a : 4
the stack is -> always : 1
the stack is -> used : 1
the stack is -> by : 1
the stack is -> only : 1
the stack is -> around : 1
the stack is -> about : 1
the stack is -> just : 1
the stack is -> very : 1
stack is a -> place : 1
stack is a -> contiguous : 1
stack is a -> fixed : 1
stack is a -> good : 1
is a place -> where : 1
is a place -> in : 1
a place where -> all : 1
place where all -> the : 1
where all the -> local : 1
local variables this -> also : 1
variables this also -> includes : 1
this also includes -> arguments : 1
also includes arguments -> to : 1
includes arguments to -> the : 1
arguments to the -> stack : 1
arguments to the -> function : 1
arguments to the -> thread : 1
to the stack -> grows : 1
the stack grows -> each : 2
the stack grows -> by : 1
the stack grows -> and : 2
stack grows each -> time : 2
grows each time -> a : 1
grows each time -> the : 1
each time a -> function : 1
time a function -> is : 1
is being called -> and : 1
being called and -> contracts : 1
called and contracts -> when : 1
and contracts when -> a : 1
and contracts when -> we : 1
and contracts when -> entering : 1
and contracts when -> functions : 1
and contracts when -> the : 1
contracts when a -> function : 1
a function each -> thread : 1
function each thread -> has : 1
each thread has -> its : 5
each thread has -> an : 1
thread has its -> own : 5
its own stack -> stack : 1
its own stack -> for : 1
its own stack -> but : 1
own stack stack -> memory : 1
stack stack memory -> can : 1
stack memory can -> be : 1
memory can be -> considered : 1
memory can be -> a : 1
can be considered -> the : 2
be considered the -> heap : 1
be considered the -> standard : 1
be considered the -> gate : 1
considered the heap -> on : 1
the heap on -> the : 1
heap on the -> other : 1
the other side -> is : 1
other side is -> a : 1
side is a -> global : 1
is a global -> memory : 1
a global memory -> area : 1
global memory area -> that : 1
memory area that -> is : 1
area that is -> being : 1
is being shared -> among : 1
being shared among -> all : 1
among all the -> threads : 1
all the threads -> in : 1
the threads in -> a : 1
threads in a -> running : 1
threads in a -> safe : 1
threads in a -> similar : 1
threads in a -> program : 1
threads in a -> big : 1
a running the -> heap : 1
running the heap -> grows : 1
the heap grows -> when : 1
the heap grows -> in : 1
heap grows when -> we : 1
grows when we -> allocate : 1
when we allocate -> memory : 1
we allocate memory -> with : 1
allocate memory with -> the : 1
memory with the -> and : 1
memory with the -> heap : 1
memory with the -> specified : 1
the and contracts -> when : 1
contracts when we -> free : 1
when we free -> the : 1
we free the -> memory : 1
free the memory -> with : 1
free the memory -> all : 1
the memory with -> the : 1
the memory with -> a : 1
with the heap -> starts : 1
the heap starts -> at : 1
heap starts at -> a : 1
starts at a -> low : 1
starts at a -> high : 1
at a low -> address : 1
a low address -> and : 1
low address and -> grows : 1
address and grows -> in : 2
and grows in -> an : 1
and grows in -> the : 1
grows in an -> upward : 1
in an upward -> whereas : 1
an upward whereas -> the : 1
upward whereas the -> stack : 1
whereas the stack -> starts : 1
the stack starts -> at : 1
stack starts at -> a : 1
at a high -> address : 1
a high address -> and : 1
high address and -> grows : 1
grows in the -> downward : 1
in the downward -> the : 1
the downward the -> following : 1
downward the following -> image : 1
the following image -> shows : 1
how the stack -> and : 1
how the stack -> is : 1
how the stack -> grows : 2
how the stack -> has : 1
and heap grow -> in : 1
heap grow in -> opposite : 1
grow in opposite -> directions : 1
in opposite directions -> in : 1
opposite directions in -> a : 1
directions in a -> virtual : 1
in a virtual -> address : 1
virtual address cdpaligncenter -> address : 1
address cdpaligncenter address -> space : 1
cdpaligncenter address space -> of : 1
address space of -> a : 2
space of a -> the : 1
space of a -> here : 1
a the stack -> and : 1
heap grows in -> opposite : 1
grows in opposite -> stack : 1
in opposite stack -> differs : 1
opposite stack differs -> in : 1
stack differs in -> many : 1
differs in many -> ways : 1
in many ways -> compared : 1
many ways compared -> to : 1
ways compared to -> the : 1
to the here -> are : 1
the here are -> some : 1
of the unique -> properties : 1
the unique properties -> of : 1
unique properties of -> the : 1
properties of the -> stack : 1
a contiguous memory -> has : 1
contiguous memory has -> a : 1
memory has a -> fixed : 1
a fixed maximum -> if : 1
fixed maximum if -> a : 1
maximum if a -> program : 1
if a program -> exceeds : 1
a program exceeds -> the : 1
program exceeds the -> maximum : 1
exceeds the maximum -> stack : 1
the maximum stack -> the : 1
the maximum stack -> size : 1
maximum stack the -> program : 1
stack the program -> will : 1
program will stack -> becomes : 1
will stack becomes -> memory : 1
stack becomes memory -> from : 1
becomes memory from -> the : 1
memory from the -> stack : 2
memory from the -> in : 1
from the stack -> is : 2
stack is always -> thread : 1
is always thread -> in : 1
always thread in -> a : 1
thread in a -> program : 1
a program has -> its : 1
program has its -> own : 1
its own code -> examples : 1
own code examples -> that : 1
code examples that -> follow : 1
examples that follow -> in : 1
that follow in -> this : 1
follow in this -> section : 1
in this section -> will : 1
in this section -> show : 1
in this section -> are : 1
section will examine -> some : 1
will examine some -> of : 1
examine some of -> these : 1
some of these -> start : 1
of these start -> with : 1
these start with -> allocations : 1
start with allocations -> and : 1
with allocations and -> deallocations : 1
allocations and deallocations -> to : 1
allocations and deallocations -> can : 1
allocations and deallocations -> are : 1
allocations and deallocations -> likely : 1
and deallocations to -> get : 1
deallocations to get -> a : 1
to get a -> feel : 1
to get a -> handle : 1
to get a -> good : 1
to get a -> little : 1
get a feel -> for : 1
a feel for -> how : 1
feel for how -> the : 1
for how the -> stack : 1
stack is used -> in : 1
is used in -> a : 1
is used in -> the : 1
in a can -> easily : 1
a can easily -> find : 1
can easily find -> out : 1
easily find out -> in : 1
find out in -> which : 1
out in which -> direction : 1
in which direction -> the : 2
which direction the -> stack : 2
direction the stack -> grows : 1
direction the stack -> my : 1
stack grows by -> inspecting : 1
stack grows by -> bytes : 1
grows by inspecting -> the : 1
by inspecting the -> address : 1
inspecting the address -> of : 1
the address of -> the : 3
address of the -> following : 1
address of the -> stack : 1
address of the -> first : 1
following example code -> demonstrates : 1
example code demonstrates -> how : 1
code demonstrates how -> the : 1
demonstrates how the -> stack : 1
stack grows and -> contracts : 3
grows and contracts -> when : 2
grows and contracts -> during : 1
contracts when entering -> and : 1
when entering and -> leaving : 1
entering and leaving -> auto : 1
and leaving auto -> i : 1
leaving auto i -> auto : 1
auto i auto -> auto : 1
auto i auto -> int : 1
i auto auto -> i : 1
auto auto i -> auto : 1
i auto int -> auto : 2
auto int auto -> i : 1
auto int auto -> product : 1
auto int auto -> auto : 1
auto int auto -> creating : 1
auto int auto -> producer : 1
auto int auto -> p : 1
auto int auto -> task : 1
auto int auto -> future : 1
int auto i -> possible : 1
int auto i -> return : 2
auto i possible -> output : 1
i possible output -> when : 1
possible output when -> running : 1
running the program -> could : 1
running the program -> is : 1
running the program -> using : 1
running the program -> in : 1
the program could -> look : 1
program could look -> like : 1
look like printing -> the : 1
like printing the -> address : 1
printing the address -> of : 1
the stack allocated -> we : 1
stack allocated we -> can : 1
allocated we can -> determine : 1
we can determine -> how : 1
can determine how -> much : 1
determine how much -> and : 1
how much and -> in : 1
much and in -> which : 1
and in which -> direction : 1
and in which -> we : 1
the stack my -> stack : 1
stack my stack -> grows : 1
my stack grows -> by : 1
grows by bytes -> each : 1
by bytes each -> time : 1
bytes each time -> we : 1
time we enter -> either : 1
time we enter -> every : 1
we enter either -> or : 1
enter either or -> the : 1
either or the -> integer : 1
or the integer -> which : 1
the integer which -> will : 1
integer which will -> be : 1
will be allocated -> on : 1
be allocated on -> the : 2
allocated on the -> is : 1
allocated on the -> there : 1
allocated on the -> global : 1
on the is -> bytes : 1
the is bytes -> the : 1
is bytes the -> remaining : 1
bytes the remaining -> bytes : 1
the remaining bytes -> contain : 1
remaining bytes contain -> data : 1
bytes contain data -> needed : 1
contain data needed -> when : 1
data needed when -> the : 1
needed when the -> function : 1
the function such -> as : 1
function such as -> the : 1
as the return -> the : 1
as the return -> value : 1
the return the -> following : 1
return the following -> diagram : 1
the following diagram -> illustrates : 1
the following diagram -> shows : 1
following diagram illustrates -> how : 1
diagram illustrates how -> the : 1
illustrates how the -> stack : 1
illustrates how the -> memory : 1
and contracts during -> the : 1
contracts during the -> execution : 1
during the execution -> of : 2
execution of the -> the : 2
execution of the -> same : 1
the the first -> box : 1
the the first -> parameter : 1
the first box -> illustrates : 1
first box illustrates -> how : 1
box illustrates how -> the : 1
how the memory -> looks : 1
the memory looks -> when : 1
the memory looks -> like : 1
memory looks when -> the : 1
looks when the -> program : 1
when the program -> has : 1
when the program -> auto : 1
when the program -> even : 1
program has just -> entered : 1
has just entered -> the : 1
just entered the -> the : 1
entered the the -> second : 1
the the second -> box : 1
the second box -> shows : 1
second box shows -> how : 1
box shows how -> the : 1
the stack has -> increased : 1
the stack has -> reached : 1
stack has increased -> when : 1
has increased when -> we : 1
increased when we -> execute : 1
when we execute -> so : 1
we execute so -> cdpaligncenter : 1
execute so cdpaligncenter -> cdpaligncenter : 1
so cdpaligncenter cdpaligncenter -> stack : 1
cdpaligncenter cdpaligncenter stack -> grows : 1
cdpaligncenter stack grows -> and : 1
contracts when functions -> are : 1
when functions are -> entered : 1
functions are entered -> and : 1
are entered and -> total : 1
entered and total -> memory : 1
and total memory -> allocated : 1
total memory allocated -> for : 1
memory allocated for -> the : 1
memory allocated for -> is : 1
allocated for the -> stack : 1
for the stack -> is : 1
for the stack -> to : 1
is a fixed -> size : 1
fixed size contiguous -> memory : 1
size contiguous memory -> block : 1
contiguous memory block -> created : 1
contiguous memory block -> of : 1
memory block created -> at : 1
block created at -> thread : 1
created at thread -> how : 1
at thread how -> big : 1
thread how big -> is : 1
how big is -> the : 1
big is the -> stack : 1
is the stack -> and : 1
stack and what -> happens : 1
and what happens -> when : 1
happens when we -> reach : 1
happens when we -> increase : 1
happens when we -> want : 1
when we reach -> the : 1
reach the limit -> of : 1
the limit of -> the : 1
mentioned the stack -> grows : 1
time the program -> enters : 1
the program enters -> a : 1
program enters a -> function : 1
enters a function -> and : 1
a function and -> contracts : 1
a function and -> generates : 1
function and contracts -> when : 1
contracts when the -> function : 1
function the most -> common : 1
most common reason -> for : 1
common reason for -> the : 1
common reason for -> using : 1
stack to overflow -> is : 1
to overflow is -> by : 1
overflow is by -> deep : 1
is by deep -> recursive : 1
by deep recursive -> calls : 1
deep recursive calls -> by : 1
recursive calls by -> using : 1
calls by using -> large : 1
by using large -> automatic : 1
using large automatic -> variables : 1
large automatic variables -> on : 1
automatic variables on -> the : 1
variables on the -> the : 1
the the maximum -> size : 1
the maximum size -> of : 2
maximum size of -> the : 2
the stack differs -> among : 1
stack differs among -> platforms : 1
differs among platforms -> and : 1
among platforms and -> can : 1
platforms and can -> also : 1
also be configured -> for : 1
be configured for -> individual : 1
configured for individual -> see : 1
for individual see -> if : 1
individual see if -> we : 1
can write a -> program : 1
write a program -> to : 1
a program to -> see : 1
a program to -> execute : 1
program to see -> how : 1
see how big -> the : 1
how big the -> stack : 1
big the stack -> is : 1
stack is by -> default : 1
by default on -> my : 1
default on my -> we : 1
on my we -> begin : 1
my we begin -> by : 1
we begin by -> writing : 1
begin by writing -> a : 1
by writing a -> function : 1
writing a function -> which : 1
function which will -> recurse : 1
which will recurse -> at : 1
will recurse at -> the : 1
recurse at the -> beginning : 1
of each allocate -> a : 1
each allocate a -> which : 1
allocate a which -> will : 1
a which will -> be : 1
will be placed -> onto : 1
be placed onto -> the : 1
placed onto the -> stack : 1
onto the stack -> every : 1
the stack every -> time : 1
stack every time -> we : 1
every time we -> enter : 1
every time we -> print : 1
we enter every -> time : 1
enter every time -> we : 1
time we print -> the : 1
we print the -> current : 1
print the current -> size : 1
current size of -> the : 3
of the void -> char : 1
the void char -> data : 1
void char data -> auto : 1
char data auto -> int : 1
data auto int -> char : 1
auto int char -> size : 1
int char size -> of : 1
char size of -> the : 1
stack is only -> an : 1
is only an -> we : 1
only an we -> compute : 1
an we compute -> it : 1
we compute it -> by : 1
compute it by -> subtracting : 1
it by subtracting -> the : 1
by subtracting the -> address : 1
subtracting the address -> of : 1
of the first -> local : 1
of the first -> thread : 1
the first local -> variable : 2
first local variable -> in : 1
first local variable -> defined : 1
local variable in -> the : 1
variable in the -> first : 1
local variable defined -> in : 1
variable defined in -> i : 1
defined in i -> compiled : 1
in i compiled -> the : 1
i compiled the -> code : 1
compiled the code -> with : 1
the code with -> i : 1
code with i -> got : 1
with i got -> a : 1
i got a -> warning : 1
got a warning -> that : 1
a warning that -> will : 1
a warning that -> we : 1
warning that will -> never : 1
that will never -> this : 1
will never this -> is : 1
never this is -> a : 1
is a warning -> that : 1
warning that we -> should : 1
that we should -> not : 1
we should not -> but : 1
should not but -> this : 1
not but this -> this : 1
but this this -> is : 1
is just what -> we : 1
just what we -> so : 1
what we so -> we : 1
we so we -> ignore : 1
so we ignore -> the : 1
we ignore the -> warning : 1
ignore the warning -> and : 1
the warning and -> run : 1
warning and run -> the : 1
run the program -> the : 1
the program the -> program : 1
program the program -> crashes : 1
the program crashes -> after : 1
program crashes after -> a : 1
crashes after a -> short : 1
after a short -> while : 1
a short while -> when : 1
short while when -> the : 1
while when the -> stack : 1
when the stack -> has : 1
stack has reached -> its : 1
has reached its -> before : 1
reached its before -> the : 1
its before the -> program : 1
before the program -> it : 1
the program it -> manages : 1
program it manages -> to : 1
it manages to -> print : 1
it manages to -> return : 1
manages to print -> out : 1
to print out -> thousands : 1
to print out -> some : 1
print out thousands -> of : 1
out thousands of -> lines : 1
thousands of lines -> with : 1
of lines with -> the : 1
lines with the -> current : 1
with the current -> size : 1
with the current -> thread : 1
with the current -> but : 1
the the last -> lines : 1
the last lines -> of : 1
last lines of -> the : 1
lines of the -> output : 1
of the output -> look : 1
the output look -> like : 1
output look like -> we : 1
look like we -> are : 1
like we are -> subtracting : 1
we are subtracting -> the : 1
are subtracting the -> size : 1
subtracting the size -> is : 1
size is in -> so : 1
is in so -> it : 1
in so it -> looks : 1
so it looks -> like : 1
it looks like -> the : 1
looks like the -> maximum : 1
looks like the -> following : 1
like the maximum -> size : 1
stack is around -> mb : 1
is around mb -> on : 1
around mb on -> my : 1
mb on my -> on : 1
mb on my -> mac : 1
on my on -> it : 1
my on it -> is : 1
on it is -> possible : 1
it is possible -> to : 7
it is possible -> but : 1
it is possible -> for : 2
possible to set -> and : 1
possible to set -> thread : 1
to set and -> get : 1
set and get -> the : 1
and get the -> stack : 1
get the stack -> size : 1
the stack size -> for : 1
stack size for -> processes : 1
size for processes -> by : 1
for processes by -> using : 1
processes by using -> the : 1
using the command -> with : 1
the command with -> the : 1
command with the -> ulimit : 1
with the ulimit -> for : 1
the ulimit for -> user : 1
ulimit for user -> returns : 1
for user returns -> the : 1
user returns the -> current : 1
returns the current -> setting : 1
returns the current -> size : 1
the current setting -> for : 1
current setting for -> the : 1
setting for the -> maximum : 1
for the maximum -> stack : 1
maximum stack size -> in : 1
stack size in -> the : 1
size in the -> output : 1
in the output -> of : 1
the output of -> confirms : 1
output of confirms -> the : 1
of confirms the -> results : 1
confirms the results -> from : 1
the results from -> our : 1
results from our -> the : 1
from our the -> stack : 1
our the stack -> is : 1
stack is about -> mb : 1
is about mb -> on : 1
about mb on -> my : 1
on my mac -> if : 1
my mac if -> i : 1
mac if i -> configure : 1
if i configure -> it : 1
i configure it -> this : 1
configure it this -> we : 1
it this we -> can : 1
can also conclude -> that : 1
also conclude that -> we : 1
conclude that we -> want : 1
that we want -> to : 2
want to run -> out : 1
to run out -> of : 1
run out of -> stack : 1
out of stack -> memory : 1
of stack memory -> since : 1
stack memory since -> the : 1
memory since the -> program : 1
since the program -> will : 1
since the program -> currently : 1
program will crash -> when : 1
will crash when -> that : 1
crash when that -> later : 1
when that later -> in : 1
that later in -> this : 1
will see how -> to : 2
will see how -> the : 1
will see how -> we : 1
see how to -> implement : 1
see how to -> distinguish : 1
see how to -> safely : 1
how to implement -> a : 1
how to implement -> lazy : 1
implement a rudimentary -> memory : 1
a rudimentary memory -> allocator : 1
rudimentary memory allocator -> to : 1
memory allocator to -> handle : 1
allocator to handle -> we : 1
to handle we -> will : 1
handle we will -> then : 1
we will then -> understand : 1
we will then -> see : 1
we will then -> go : 1
will then understand -> that : 1
then understand that -> the : 1
understand that the -> stack : 1
that the stack -> is : 2
that the stack -> memory : 1
stack is just -> another : 1
is just another -> type : 1
just another type -> of : 1
another type of -> memory : 1
type of memory -> allocator : 1
of memory allocator -> that : 1
memory allocator that -> can : 1
allocator that can -> be : 3
allocator that can -> reference : 1
be implemented very -> efficiently : 1
implemented very efficiently -> because : 1
very efficiently because -> the : 1
efficiently because the -> usage : 1
because the usage -> pattern : 1
the usage pattern -> is : 1
usage pattern is -> always : 1
pattern is always -> we : 1
always we always -> request : 1
we always request -> and : 1
always request and -> release : 1
request and release -> memory : 1
and release memory -> at : 1
and release memory -> when : 1
release memory at -> the : 1
memory at the -> top : 1
memory at the -> header : 1
memory at the -> same : 2
the stack end -> of : 1
stack end of -> the : 1
of the contiguous -> this : 1
the contiguous this -> ensures : 1
contiguous this ensures -> that : 1
this ensures that -> the : 1
the stack memory -> will : 1
stack memory will -> never : 1
memory will never -> become : 1
will never become -> fragmented : 1
never become fragmented -> and : 1
become fragmented and -> that : 1
fragmented and that -> we : 1
and that we -> can : 1
we can allocate -> and : 1
can allocate and -> deallocate : 1
allocate and deallocate -> memory : 1
allocate and deallocate -> simply : 1
and deallocate memory -> by : 1
deallocate memory by -> only : 1
memory by only -> moving : 1
by only moving -> a : 1
only moving a -> stack : 1
moving a stack -> heap : 1
a stack heap -> or : 1
stack heap or -> the : 1
heap or the -> free : 1
or the free -> which : 1
free which is -> a : 1
is a more -> correct : 1
a more correct -> term : 1
more correct term -> in : 1
correct term in -> is : 1
term in is -> where : 1
in is where -> data : 1
is where data -> with : 1
where data with -> dynamic : 1
data with dynamic -> storage : 1
with dynamic storage -> as : 1
dynamic storage as -> mentioned : 1
storage as mentioned -> the : 1
mentioned the heap -> is : 1
the heap is -> shared : 1
heap is shared -> among : 1
shared among multiple -> which : 1
among multiple which -> means : 1
multiple which means -> that : 1
means that memory -> management : 1
that memory management -> for : 1
memory management for -> the : 1
management for the -> heap : 1
for the heap -> needs : 1
the heap needs -> to : 1
heap needs to -> take : 1
to take concurrency -> into : 1
take concurrency into -> makes : 1
concurrency into makes -> memory : 1
into makes memory -> allocations : 1
makes memory allocations -> in : 1
memory allocations in -> the : 1
in the heap -> more : 1
the heap more -> complicated : 1
heap more complicated -> than : 1
more complicated than -> stack : 1
more complicated than -> unique : 1
complicated than stack -> which : 1
than stack which -> are : 1
stack which are -> local : 1
which are local -> per : 1
are local per -> allocation : 1
local per allocation -> and : 1
per allocation and -> deallocation : 1
allocation and deallocation -> pattern : 1
and deallocation pattern -> for : 1
deallocation pattern for -> stack : 1
pattern for stack -> memory : 1
for stack memory -> is : 1
stack memory is -> sequential : 1
memory is sequential -> in : 1
is sequential in -> the : 1
sequential in the -> sense : 1
sense that memory -> is : 1
that memory is -> always : 1
memory is always -> deallocated : 1
is always deallocated -> in : 1
always deallocated in -> the : 1
deallocated in the -> reverse : 1
in the reverse -> order : 1
in the reverse -> a : 1
the reverse order -> to : 1
reverse order to -> that : 1
order to that -> in : 1
to that in -> which : 1
that in which -> it : 1
in which it -> was : 1
which it was -> on : 1
it was on -> the : 1
was on the -> other : 1
the other for -> dynamic : 1
other for dynamic -> the : 1
for dynamic the -> allocations : 1
dynamic the allocations -> and : 1
the allocations and -> deallocations : 1
and deallocations can -> happen : 1
deallocations can happen -> the : 1
can happen the -> dynamic : 1
happen the dynamic -> lifetime : 1
the dynamic lifetime -> of : 1
dynamic lifetime of -> objects : 1
lifetime of objects -> and : 1
of objects and -> the : 1
objects and the -> variable : 1
and the variable -> sizes : 1
the variable sizes -> of : 1
variable sizes of -> memory : 1
sizes of memory -> allocations : 1
of memory allocations -> increase : 1
memory allocations increase -> the : 1
allocations increase the -> risk : 1
increase the risk -> for : 1
the risk for -> fragmented : 1
risk for fragmented -> easy : 1
for fragmented easy -> way : 1
fragmented easy way -> to : 1
easy way to -> understand : 1
way to understand -> the : 1
understand the issue -> with : 1
the issue with -> memory : 1
issue with memory -> fragmentation : 1
with memory fragmentation -> is : 1
memory fragmentation is -> to : 1
fragmentation is to -> go : 1
is to go -> through : 1
to go through -> an : 1
to go through -> some : 1
go through an -> example : 1
through an example -> of : 1
of how fragmented -> memory : 1
how fragmented memory -> can : 1
fragmented memory can -> suppose : 1
memory can suppose -> that : 1
can suppose that -> we : 1
suppose that we -> have : 1
have a small -> contiguous : 1
a small contiguous -> memory : 1
small contiguous memory -> block : 1
memory block of -> kb : 1
block of kb -> that : 1
of kb that -> we : 1
kb that we -> are : 1
we are allocating -> memory : 1
we are allocating -> objects : 1
we are allocating -> the : 1
are allocating memory -> we : 1
allocating memory we -> are : 1
memory we are -> allocating : 1
memory we are -> on : 1
are allocating objects -> of : 1
allocating objects of -> two : 1
objects of two -> type : 1
of two type -> which : 1
two type which -> is : 1
type which is -> and : 1
type which is -> we : 1
type which is -> although : 1
type which is -> other : 1
which is and -> type : 1
is and type -> which : 1
and type which -> is : 1
which is we -> first : 1
is we first -> allocate : 1
we first allocate -> an : 1
first allocate an -> object : 1
allocate an object -> of : 1
object of type -> followed : 1
object of type -> this : 1
object of type -> which : 1
of type followed -> by : 1
type followed by -> an : 1
by an object -> of : 1
of type this -> repeats : 1
type this repeats -> until : 1
this repeats until -> the : 1
repeats until the -> memory : 1
until the memory -> looks : 1
memory looks like -> the : 1
like the following -> cdpaligncenter : 1
following cdpaligncenter all -> objects : 1
cdpaligncenter all objects -> of : 1
all objects of -> type : 1
objects of type -> are : 1
objects of type -> need : 1
of type are -> no : 1
type are no -> longer : 1
are no longer -> so : 1
are no longer -> we : 1
no longer so -> they : 1
longer so they -> can : 1
so they can -> be : 1
be the memory -> now : 1
the memory now -> looks : 1
memory now looks -> like : 1
now looks like -> cdpaligncenter : 1
now looks like -> struct : 1
now looks like -> int : 1
looks like cdpaligncenter -> is : 1
like cdpaligncenter is -> now : 1
cdpaligncenter is now -> kb : 1
is now kb -> of : 1
now kb of -> memory : 1
kb of memory -> in : 1
of memory in -> use : 1
memory in use -> and : 1
in use and -> kb : 1
use and kb -> is : 1
and kb is -> suppose : 1
kb is suppose -> we : 1
is suppose we -> want : 1
want to allocate -> a : 1
to allocate a -> new : 1
a new object -> of : 2
a new object -> in : 2
new object of -> type : 1
new object of -> the : 1
of type which -> is : 1
which is although -> there : 1
is although there -> is : 1
although there is -> kb : 1
although there is -> no : 1
there is kb -> of : 1
is kb of -> free : 1
kb of free -> there : 1
of free there -> is : 1
free there is -> nowhere : 1
there is nowhere -> we : 1
is nowhere we -> can : 1
nowhere we can -> find : 1
find a kb -> memory : 1
a kb memory -> block : 1
kb memory block -> because : 1
memory block because -> the : 1
block because the -> memory : 1
because the memory -> has : 1
the memory has -> become : 1
has become in -> the : 1
become in the -> objects : 1
in the objects -> we : 1
objects we use -> in : 1
we use in -> a : 1
use in a -> program : 1
a program reside -> in : 1
program reside in -> we : 1
reside in we -> will : 1
in we will -> explore : 1
in we will -> see : 1
we will explore -> how : 1
we will explore -> cases : 1
we will explore -> since : 1
will explore how -> objects : 1
explore how objects -> are : 1
how objects are -> created : 1
how objects are -> laid : 1
objects are created -> and : 1
objects are created -> from : 1
are created and -> deleted : 1
created and deleted -> from : 1
and deleted from -> memory : 1
deleted from memory -> and : 1
from memory and -> also : 1
memory and also -> describe : 1
and also describe -> how : 1
also describe how -> objects : 1
describe how objects -> are : 1
out in and -> deleting : 1
and deleting this -> we : 1
deleting this we -> will : 1
we will dig -> into : 1
will dig into -> the : 1
dig into the -> details : 1
details of using -> and : 1
of using and -> we : 1
using and we -> are : 1
we are all -> familiar : 1
are all familiar -> with : 1
all familiar with -> the : 1
familiar with the -> standard : 1
with the standard -> way : 1
the standard way -> of : 1
standard way of -> using : 1
way of using -> new : 1
of using new -> for : 1
using new for -> creating : 1
new for creating -> an : 1
for creating an -> object : 1
an object on -> the : 1
object on the -> free : 1
object on the -> stack : 1
free store and -> then : 1
store and then -> deleting : 1
and then deleting -> it : 1
then deleting it -> using : 1
deleting it using -> user : 1
it using user -> new : 1
using user new -> allocate : 1
user new allocate -> and : 1
new allocate and -> use : 1
allocate and use -> delete : 1
and use delete -> destruct : 1
use delete destruct -> and : 1
delete destruct and -> the : 1
destruct and the -> comments : 1
and the comments -> actually : 1
the comments actually -> does : 1
comments actually does -> two : 1
actually does two -> memory : 1
does two memory -> to : 1
two memory to -> hold : 1
memory to hold -> a : 1
hold a new -> object : 1
object of the -> type : 1
of the type -> a : 1
of the type -> are : 1
of the type -> and : 2
of the type -> the : 1
the type a -> new : 1
type a new -> object : 1
new object in -> the : 1
new object in -> that : 1
object in the -> allocated : 1
in the allocated -> memory : 1
the allocated memory -> space : 1
allocated memory space -> by : 1
memory space by -> calling : 1
space by calling -> the : 1
by calling the -> constructor : 1
calling the constructor -> of : 1
the constructor of -> the : 1
constructor of the -> class : 1
the class same -> thing : 1
class same thing -> goes : 1
same thing goes -> with : 1
thing goes with -> the : 1
goes with the -> object : 1
with the object -> by : 1
the object by -> calling : 1
object by calling -> its : 1
by calling its -> destructor : 1
calling its destructor -> the : 1
its destructor the -> memory : 1
destructor the memory -> that : 1
the object was -> placed : 1
object was placed -> in : 1
was placed in -> allows : 1
placed in allows -> us : 1
in allows us -> to : 1
us to separate -> memory : 1
to separate memory -> allocation : 1
separate memory allocation -> from : 1
memory allocation from -> object : 1
allocation from object -> we : 1
from object we -> for : 1
object we for -> allocate : 1
we for allocate -> a : 1
for allocate a -> byte : 1
allocate a byte -> array : 1
a byte array -> with : 1
byte array with -> construct : 1
array with construct -> a : 1
with construct a -> new : 1
construct a new -> object : 1
object in that -> region : 1
in that region -> of : 1
that region of -> have : 1
region of have -> a : 1
following code memory -> auto : 1
code memory auto -> user : 1
memory auto user -> new : 1
auto user new -> perhaps : 1
user new perhaps -> unfamiliar : 1
new perhaps unfamiliar -> syntax : 1
perhaps unfamiliar syntax -> using : 1
unfamiliar syntax using -> is : 1
syntax using is -> called : 1
using is called -> it : 1
is called it -> is : 1
is called it -> happens : 1
called it is -> a : 1
is a form -> of : 1
a form of -> which : 1
form of which -> only : 1
of which only -> constructs : 1
which only constructs -> an : 1
only constructs an -> in : 1
constructs an in -> the : 1
an in the -> preceding : 1
the preceding placement -> new : 1
preceding placement new -> constructs : 1
placement new constructs -> the : 1
new constructs the -> object : 1
constructs the object -> and : 1
object and places -> it : 1
and places it -> at : 1
places it at -> the : 1
it at the -> specified : 1
at the specified -> memory : 1
the specified memory -> since : 1
specified memory since -> we : 1
memory since we -> are : 1
are allocating the -> memory : 1
allocating the memory -> with : 1
memory with a -> single : 1
with a single -> it : 1
a single it -> is : 1
single it is -> guaranteed : 1
it is guaranteed -> to : 1
it is guaranteed -> that : 1
is guaranteed to -> be : 1
is guaranteed to -> hold : 1
to be correctly -> later : 1
be correctly later -> we : 1
correctly later we -> will : 1
later we will -> explore : 1
later we will -> see : 3
later we will -> cover : 1
will explore cases -> where : 1
explore cases where -> we : 1
cases where we -> have : 1
where we have -> to : 1
to take alignment -> into : 1
take alignment into -> account : 1
alignment into account -> when : 1
into account when -> using : 1
into account when -> assigning : 1
account when using -> placement : 1
when using placement -> is : 1
using placement is -> no : 1
using placement is -> it : 1
placement is no -> placement : 1
is no placement -> so : 1
no placement so -> in : 1
placement so in -> order : 1
so in order -> to : 3
order to destruct -> the : 1
to destruct the -> object : 1
destruct the object -> and : 1
object and free -> the : 1
and free the -> we : 1
and free the -> memory : 1
free the we -> need : 1
need to call -> the : 1
need to call -> join : 1
to call the -> destructor : 1
call the destructor -> explicitly : 1
the destructor explicitly -> and : 1
destructor explicitly and -> then : 1
explicitly and then -> free : 1
and then free -> the : 1
then free the -> this : 1
free the this -> is : 1
the only time -> you : 1
only time you -> should : 1
time you should -> call : 1
you should call -> a : 1
should call a -> destructor : 1
call a destructor -> never : 1
call a destructor -> like : 1
a destructor never -> ever : 1
destructor never ever -> call : 1
never ever call -> a : 1
ever call a -> destructor : 1
a destructor like -> this : 1
destructor like this -> unless : 1
like this unless -> you : 1
this unless you -> have : 1
unless you have -> created : 1
unless you have -> a : 1
you have created -> an : 1
have created an -> object : 1
created an object -> with : 1
object with placement -> introduces : 1
with placement introduces -> a : 1
placement introduces a -> set : 1
introduces a set -> of : 1
set of utility -> functions : 1
of utility functions -> in : 1
utility functions in -> for : 1
functions in for -> constructing : 1
in for constructing -> and : 1
for constructing and -> destroying : 1
constructing and destroying -> objects : 1
and destroying objects -> without : 1
destroying objects without -> allocating : 1
objects without allocating -> or : 1
without allocating or -> deallocating : 1
allocating or deallocating -> instead : 1
or deallocating instead -> of : 1
deallocating instead of -> calling : 1
instead of calling -> placement : 1
instead of calling -> the : 1
of calling placement -> it : 1
calling placement it -> is : 1
placement it is -> now : 1
it is now -> possible : 1
it is now -> a : 1
is now possible -> to : 1
now possible to -> use : 1
possible to use -> some : 1
possible to use -> a : 2
possible to use -> only : 1
possible to use -> atomics : 1
to use some -> of : 1
use some of -> the : 1
the functions from -> whose : 1
functions from whose -> names : 1
from whose names -> begin : 1
whose names begin -> with : 1
names begin with -> for : 1
begin with for -> and : 1
with for and -> moving : 1
for and moving -> objects : 1
and moving objects -> to : 1
moving objects to -> an : 1
objects to an -> uninitialized : 1
to an uninitialized -> memory : 1
an uninitialized memory -> and : 1
uninitialized memory and -> instead : 1
memory and instead -> of : 1
and instead of -> calling : 1
of calling the -> destructor : 1
calling the destructor -> we : 1
the destructor we -> can : 1
destructor we can -> now : 1
now use destruct -> an : 1
use destruct an -> object : 1
destruct an object -> at : 1
an object at -> a : 1
object at a -> specific : 1
object at a -> the : 1
a specific memory -> address : 1
specific memory address -> without : 1
memory address without -> deallocating : 1
address without deallocating -> the : 1
without deallocating the -> previous : 1
deallocating the previous -> example : 1
previous example could -> be : 1
could be rewritten -> using : 1
be rewritten using -> these : 1
rewritten using these -> new : 1
using these new -> here : 1
these new here -> is : 1
new here is -> how : 1
here is how -> it : 3
here is how -> to : 2
here is how -> we : 1
here is how -> you : 1
is how it -> would : 1
is how it -> struct : 1
is how it -> account : 1
how it would -> memory : 1
how it would -> recursively : 1
it would memory -> new : 1
would memory new -> and : 1
memory new and -> delete : 1
and delete function -> is : 1
delete function is -> responsible : 1
function is responsible -> for : 1
responsible for allocating -> memory : 1
for allocating memory -> when : 1
allocating memory when -> a : 1
memory when a -> new : 1
when a new -> expression : 1
a new expression -> is : 1
new expression is -> the : 1
expression is the -> can : 1
is the can -> either : 1
the can either -> be : 1
can either be -> a : 1
either be a -> globally : 1
be a globally -> defined : 1
a globally defined -> function : 1
globally defined function -> or : 1
defined function or -> a : 1
function or a -> static : 1
or a static -> member : 1
a static member -> function : 1
static member function -> of : 1
possible to overload -> the : 1
to overload the -> global : 1
overload the global -> and : 1
the global and -> later : 1
the global and -> static : 1
global and later -> on : 1
and later on -> in : 1
see that this -> can : 1
see that this -> type : 1
that this can -> be : 1
can be useful -> when : 2
can be useful -> in : 1
be useful when -> analyzing : 1
be useful when -> debugging : 1
useful when analyzing -> memory : 1
when analyzing memory -> here : 1
analyzing memory here -> is : 1
memory here is -> how : 1
is how to -> do : 1
is how to -> use : 1
how to do -> operator : 1
how to do -> this : 1
to do operator -> p : 1
do operator p -> size : 1
operator p size -> return : 2
operator p size -> with : 1
p size return -> auto : 2
size return auto -> operator : 2
return auto operator -> noexcept : 4
return auto operator -> void : 3
auto operator noexcept -> void : 4
operator noexcept void -> return : 3
operator noexcept void -> memory : 1
noexcept void return -> can : 1
noexcept void return -> try : 1
noexcept void return -> auto : 1
void return can -> verify : 1
return can verify -> that : 1
can verify that -> our : 1
that our overloaded -> operators : 1
our overloaded operators -> are : 1
overloaded operators are -> actually : 1
operators are actually -> being : 1
are actually being -> used : 1
are actually being -> we : 1
actually being used -> when : 1
being used when -> creating : 1
used when creating -> and : 1
when creating and -> deleting : 1
creating and deleting -> a : 1
creating and deleting -> an : 1
and deleting a -> p : 1
deleting a p -> new : 1
a p new -> outputs : 1
p new outputs -> delete : 1
new outputs delete -> outputs : 1
outputs delete outputs -> creating : 1
delete outputs creating -> and : 1
outputs creating and -> deleting : 1
and deleting an -> array : 1
deleting an array -> of : 1
of objects using -> the : 1
objects using the -> and : 1
using the and -> there : 1
using the and -> hence : 1
the and there -> is : 1
there is another -> pair : 1
is another pair -> of : 1
another pair of -> operators : 1
pair of operators -> that : 1
of operators that -> are : 1
operators that are -> being : 1
operators that are -> usually : 1
are being namely -> and : 1
being namely and -> we : 1
namely and we -> can : 1
we can overload -> these : 1
can overload these -> operators : 1
overload these operators -> in : 1
these operators in -> the : 1
operators in the -> same : 1
the same operator -> p : 1
same operator p -> size : 1
p size with -> return : 1
size with return -> auto : 1
with return auto -> operator : 1
noexcept void memory -> with : 1
void memory with -> return : 1
memory with return -> in : 1
with return in -> mind : 1
return in mind -> that : 1
in mind that -> if : 1
in mind that -> this : 1
in mind that -> many : 1
mind that if -> you : 1
if you overload -> you : 1
you overload you -> should : 1
overload you should -> also : 1
you should also -> overload : 1
should also overload -> functions : 1
also overload functions -> for : 1
overload functions for -> allocating : 1
functions for allocating -> and : 1
for allocating and -> deallocating : 2
and deallocating memory -> come : 1
and deallocating memory -> from : 1
deallocating memory come -> in : 1
memory come in -> memory : 1
come in memory -> should : 1
in memory should -> be : 1
memory should be -> deallocated : 1
memory should be -> visible : 1
should be deallocated -> by : 1
should be deallocated -> using : 1
be deallocated by -> the : 1
deallocated by the -> allocator : 1
by the allocator -> that : 1
the allocator that -> the : 1
allocator that the -> memory : 1
the memory was -> allocated : 1
memory was allocated -> for : 1
was allocated for -> memory : 1
allocated for memory -> allocated : 1
for memory allocated -> with : 1
memory allocated with -> always : 1
memory allocated with -> should : 2
allocated with always -> be : 1
with always be -> freed : 1
always be freed -> using : 1
be freed using -> memory : 1
freed using memory -> allocated : 1
using memory allocated -> with : 1
allocated with should -> be : 1
allocated with should -> also : 1
with should be -> deallocated : 1
be deallocated using -> is : 1
deallocated using is -> also : 1
using is also -> possible : 1
possible to override -> a : 1
to override a -> and : 1
override a and -> this : 1
a and this -> is : 1
this is probably -> more : 1
this is probably -> a : 1
is probably more -> useful : 1
probably more useful -> than : 1
more useful than -> overloading : 1
useful than overloading -> the : 1
than overloading the -> global : 1
overloading the global -> since : 1
the global since -> it : 1
global since it -> is : 1
since it is -> more : 1
since it is -> owned : 1
since it is -> a : 1
since it is -> not : 1
it is more -> likely : 1
it is more -> apparent : 1
is more likely -> that : 1
more likely that -> we : 1
likely that we -> need : 1
need a custom -> dynamic : 1
a custom dynamic -> memory : 1
custom dynamic memory -> allocator : 1
dynamic memory allocator -> for : 1
memory allocator for -> a : 1
allocator for a -> specific : 1
specific we are -> overloading : 1
we are overloading -> and : 1
are overloading and -> for : 1
overloading and for -> the : 1
and for the -> document : 1
and for the -> purpose : 1
for the document -> auto : 1
the document auto -> operator : 1
document auto operator -> return : 1
auto operator return -> auto : 3
operator return auto -> operator : 3
auto operator void -> version : 1
auto operator void -> auto : 1
auto operator void -> int : 1
operator void version -> of : 1
void version of -> will : 1
version of will -> be : 1
of will be -> used : 1
will be used -> when : 1
used when we -> create : 1
when we create -> new : 1
when we create -> the : 1
when we create -> and : 1
we create new -> dynamically : 1
create new dynamically -> allocated : 1
new dynamically allocated -> p : 1
dynamically allocated p -> new : 1
allocated p new -> uses : 1
p new uses -> operator : 1
new uses operator -> delete : 1
uses operator delete -> we : 1
operator delete we -> instead : 1
delete we instead -> want : 1
we instead want -> to : 1
instead want to -> use : 1
to use global -> and : 1
use global and -> it : 1
global and it -> is : 1
it is still -> possible : 2
it is still -> quite : 1
is still possible -> by : 1
is still possible -> that : 1
still possible by -> using : 1
possible by using -> the : 1
the global scope -> p : 1
global scope p -> uses : 1
scope p uses -> global : 1
p uses global -> operator : 1
uses global operator -> will : 1
global operator will -> discuss : 1
operator will discuss -> memory : 1
will discuss memory -> allocators : 1
discuss memory allocators -> later : 1
memory allocators later -> in : 1
allocators later in -> this : 1
this chapter and -> we : 1
will then see -> the : 1
then see the -> overloaded : 1
see the overloaded -> and : 1
the overloaded and -> operators : 1
overloaded and operators -> in : 1
and operators in -> to : 1
operators in to -> summarize : 1
in to summarize -> what : 1
to summarize what -> we : 1
summarize what we -> have : 1
have seen so -> a : 1
seen so a -> expression : 1
so a expression -> involves : 1
a expression involves -> two : 1
expression involves two -> allocation : 1
involves two allocation -> and : 1
two allocation and -> allocates : 1
allocation and allocates -> memory : 1
and allocates memory -> and : 1
allocates memory and -> you : 1
allocates memory and -> constructs : 1
memory and you -> can : 1
and you can -> overload : 1
you can overload -> it : 1
you can overload -> the : 1
can overload it -> globally : 1
overload it globally -> or : 1
it globally or -> per : 1
globally or per -> class : 1
or per class -> to : 1
per class to -> customize : 1
class to customize -> dynamic : 1
to customize dynamic -> memory : 1
customize dynamic memory -> placement : 1
dynamic memory placement -> new : 1
memory placement new -> can : 1
placement new can -> be : 1
new can be -> used : 1
used to construct -> an : 1
to construct an -> object : 1
construct an object -> in : 1
an object in -> an : 1
object in an -> already : 1
in an already -> allocated : 1
an already allocated -> memory : 1
already allocated memory -> cpu : 1
allocated memory cpu -> reads : 1
memory cpu reads -> memory : 1
cpu reads memory -> into : 1
reads memory into -> its : 1
memory into its -> registers : 1
into its registers -> one : 1
its registers one -> word : 1
registers one word -> at : 1
one word at -> a : 1
word at a -> the : 1
at a the -> word : 1
at a the -> contained : 1
a the word -> size : 1
the word size -> is : 1
the word size -> of : 1
word size is -> bits : 1
size is bits -> on : 1
is bits on -> a : 1
bits on a -> bits : 1
bits on a -> and : 1
on a bits -> on : 1
a bits on -> a : 1
on a and -> so : 1
a and so -> for : 1
and so for -> the : 1
so for the -> cpu : 1
for the cpu -> to : 1
the cpu to -> work : 1
the cpu to -> make : 1
the cpu to -> the : 1
cpu to work -> efficiently : 1
to work efficiently -> when : 1
work efficiently when -> working : 1
efficiently when working -> with : 1
working with different -> data : 1
with different data -> it : 1
different data it -> has : 1
data it has -> restrictions : 1
it has restrictions -> on : 1
has restrictions on -> the : 1
restrictions on the -> addresses : 1
on the addresses -> where : 1
the addresses where -> objects : 1
addresses where objects -> of : 1
where objects of -> different : 1
of different types -> are : 1
of different types -> at : 1
of different types -> to : 1
different types are -> every : 1
types are every -> type : 1
are every type -> in : 1
every type in -> has : 1
every type in -> the : 3
type in has -> an : 1
in has an -> alignment : 1
has an alignment -> requirement : 1
an alignment requirement -> that : 1
alignment requirement that -> defines : 1
alignment requirement that -> we : 1
requirement that defines -> the : 1
that defines the -> addresses : 1
defines the addresses -> at : 1
the addresses at -> which : 1
addresses at which -> an : 1
at which an -> object : 1
which an object -> of : 1
object of a -> certain : 1
object of a -> class : 1
of a certain -> type : 1
a certain type -> should : 1
certain type should -> be : 1
type should be -> located : 1
should be located -> in : 1
be located in -> if : 1
be located in -> the : 1
located in if -> the : 1
in if the -> alignment : 1
in if the -> arena : 1
if the alignment -> of : 2
the alignment of -> a : 4
the alignment of -> this : 1
the alignment of -> the : 2
alignment of a -> type : 2
alignment of a -> possible : 1
alignment of a -> is : 1
of a type -> is : 2
of a type -> that : 2
a type is -> it : 2
type is it -> means : 2
is it means -> that : 2
that the objects -> of : 1
the objects of -> that : 1
objects of that -> type : 1
of that type -> can : 2
that type can -> be : 1
that type can -> only : 1
be located at -> any : 1
be located at -> addresses : 1
be located at -> an : 1
located at any -> byte : 1
at any byte -> if : 1
any byte if -> the : 1
byte if the -> alignment : 1
the object of -> that : 1
object of that -> type : 1
type can only -> be : 1
only be located -> at : 1
located at addresses -> that : 1
at addresses that -> are : 1
addresses that are -> multiples : 1
addresses that are -> bytes : 1
that are multiples -> of : 2
are multiples of -> and : 1
are multiples of -> in : 1
multiples of and -> so : 1
of and so -> we : 1
and so we -> can : 1
so we can -> use : 1
can use to -> find : 1
use to find -> out : 1
find out the -> alignment : 1
out the alignment -> of : 1
of a possible -> output : 1
a possible output -> is : 1
output is i -> run : 1
is i run -> this : 1
i run this -> code : 1
run this code -> it : 1
this code it -> outputs : 1
code it outputs -> means : 1
it outputs means -> that : 1
outputs means that -> the : 1
that the alignment -> requirement : 1
the alignment requirement -> of : 1
the alignment requirement -> for : 1
the alignment requirement -> that : 1
alignment requirement of -> type : 1
requirement of type -> is : 1
of type is -> bytes : 1
type is bytes -> on : 1
is bytes on -> my : 1
bytes on my -> that : 1
on my that -> objects : 1
my that objects -> of : 1
that objects of -> type : 1
of type need -> to : 1
type need to -> be : 1
to be located -> at : 1
to be located -> in : 1
located at an -> address : 1
at an address -> that : 1
an address that -> is : 1
address that is -> a : 1
is a multiple -> of : 1
a multiple of -> following : 1
a multiple of -> since : 1
multiple of following -> diagram : 1
of following diagram -> shows : 1
shows two examples -> of : 1
two examples of -> memory : 1
examples of memory -> from : 1
examples of memory -> which : 1
of memory from -> a : 1
memory from a -> system : 1
from a system -> with : 1
a system with -> the : 1
system with the -> upper : 1
with the upper -> row : 1
the upper row -> contains : 1
upper row contains -> three : 1
row contains three -> which : 1
contains three which -> are : 1
three which are -> located : 1
which are located -> on : 1
which are located -> at : 1
are located on -> addresses : 1
located on addresses -> that : 1
on addresses that -> are : 1
that are bytes -> the : 1
are bytes the -> cpu : 1
bytes the cpu -> can : 1
the cpu can -> load : 1
cpu can load -> these : 1
can load these -> integers : 1
load these integers -> into : 1
these integers into -> registers : 1
integers into registers -> in : 1
into registers in -> an : 1
registers in an -> efficient : 1
in an efficient -> way : 1
an efficient way -> and : 1
efficient way and -> never : 1
way and never -> need : 1
and never need -> to : 1
never need to -> read : 1
never need to -> write : 1
need to read -> multiple : 1
to read multiple -> words : 1
read multiple words -> when : 1
multiple words when -> accessing : 1
words when accessing -> one : 1
when accessing one -> of : 1
accessing one of -> the : 1
of the compare -> this : 1
the compare this -> with : 1
compare this with -> the : 1
this with the -> second : 1
with the second -> which : 1
the second which -> contains : 1
second which contains -> two : 1
which contains two -> which : 1
contains two which -> are : 1
two which are -> located : 1
are located at -> unaligned : 1
located at unaligned -> the : 1
at unaligned the -> second : 1
unaligned the second -> even : 1
the second even -> spans : 1
second even spans -> over : 1
even spans over -> in : 1
spans over in -> the : 1
over in the -> best : 1
in the best -> case : 1
in the best -> double : 1
best case this -> is : 1
case this is -> just : 1
is just but -> on : 1
just but on -> some : 1
but on some -> platforms : 1
on some platforms -> the : 1
some platforms the -> program : 1
platforms the program -> will : 1
program will cdpaligncenter -> cdpaligncenter : 1
will cdpaligncenter cdpaligncenter -> examples : 1
cdpaligncenter cdpaligncenter examples -> of : 1
cdpaligncenter examples of -> memory : 1
of memory which -> contains : 1
memory which contains -> ints : 1
which contains ints -> at : 1
contains ints at -> aligned : 1
ints at aligned -> and : 1
at aligned and -> unaligned : 1
aligned and unaligned -> memory : 1
and unaligned memory -> allocating : 1
unaligned memory allocating -> memory : 1
memory allocating memory -> with : 1
allocating memory with -> or : 1
memory with or -> the : 1
with or the -> memory : 1
or the memory -> we : 1
the memory we -> get : 1
the memory we -> first : 1
memory we get -> back : 1
we get back -> should : 1
get back should -> be : 1
back should be -> correctly : 1
should be correctly -> aligned : 1
be correctly aligned -> for : 1
correctly aligned for -> the : 1
correctly aligned for -> and : 1
aligned for the -> type : 1
for the type -> we : 1
the type we -> the : 1
type we the -> following : 1
we the following -> code : 1
following code shows -> that : 2
code shows that -> the : 2
the memory allocated -> for : 1
allocated for is -> at : 1
for is at -> least : 1
is at least -> p : 1
is at least -> as : 1
at least p -> new : 1
least p new -> auto : 1
p new auto -> address : 2
new auto address -> outputs : 1
new auto address -> auto : 1
auto address outputs -> and : 1
address outputs and -> guaranteed : 1
outputs and guaranteed -> to : 1
and guaranteed to -> always : 1
guaranteed to always -> return : 1
guaranteed to always -> happen : 1
to always return -> memory : 1
always return memory -> suitably : 1
return memory suitably -> aligned : 1
memory suitably aligned -> for : 1
suitably aligned for -> any : 1
aligned for any -> scalar : 1
for any scalar -> type : 1
for any scalar -> p : 1
any scalar type -> it : 1
scalar type it -> manages : 1
type it manages -> to : 1
manages to return -> memory : 1
to return memory -> at : 1
return memory at -> the : 1
at the header -> provides : 1
the header provides -> us : 1
header provides us -> with : 1
us with a -> type : 1
with a type -> called : 1
a type called -> whose : 1
type called whose -> alignment : 1
called whose alignment -> requirement : 1
whose alignment requirement -> is : 1
alignment requirement is -> at : 1
requirement is at -> least : 1
at least as -> strict : 1
least as strict -> as : 1
strict as all -> the : 1
as all the -> scalar : 1
all the scalar -> later : 1
all the scalar -> data : 1
the scalar later -> we : 1
scalar later we -> will : 1
that this type -> is : 1
this type is -> useful : 1
type is useful -> when : 1
is useful when -> writing : 1
useful when writing -> custom : 1
when writing custom -> memory : 1
writing custom memory -> even : 1
custom memory even -> if : 1
memory even if -> we : 1
if we only -> request : 1
if we only -> need : 1
we only request -> memory : 1
only request memory -> for : 1
request memory for -> on : 1
memory for on -> the : 1
for on the -> free : 1
the free it -> will : 1
free it will -> be : 1
it will be -> aligned : 2
it will be -> automatically : 1
it will be -> hard : 1
it will be -> ownership : 1
will be aligned -> suitable : 1
will be aligned -> types : 1
be aligned suitable -> for : 1
aligned suitable for -> the : 1
suitable for the -> following : 1
the memory returned -> from : 1
memory returned from -> is : 1
returned from is -> correctly : 1
from is correctly -> aligned : 1
is correctly aligned -> for : 1
aligned for and -> also : 1
for and also -> for : 1
and also for -> any : 1
also for any -> scalar : 1
any scalar p -> new : 1
scalar p new -> auto : 1
auto address auto -> outputs : 1
address auto outputs -> allocate : 1
auto outputs allocate -> two : 1
outputs allocate two -> times : 1
allocate two times -> in : 1
two times in -> a : 1
in a row -> with : 1
a row with -> new : 1
row with new -> new : 1
with new new -> the : 1
new new the -> memory : 1
new the memory -> may : 1
the memory may -> look : 1
memory may look -> something : 1
may look something -> like : 1
like cdpaligncenter space -> between : 1
cdpaligncenter space between -> and : 1
space between and -> depends : 1
between and depends -> on : 1
and depends on -> the : 1
on the alignment -> requirements : 1
the alignment requirements -> of : 3
alignment requirements of -> on : 1
alignment requirements of -> the : 2
requirements of on -> my : 1
my it was -> bytes : 1
it was bytes -> there : 1
was bytes there -> are : 1
bytes there are -> bytes : 1
there are bytes -> between : 1
are bytes between -> each : 1
bytes between each -> even : 1
between each even -> though : 1
each even though -> the : 1
though the alignment -> of : 1
a is only -> compiler : 1
is only compiler -> sometimes : 1
only compiler sometimes -> needs : 1
compiler sometimes needs -> to : 1
sometimes needs to -> add : 1
needs to add -> extra : 1
needs to add -> padding : 1
to add extra -> in : 1
add extra in -> our : 1
extra in our -> when : 1
in our when -> we : 1
our when we -> define : 1
when we define -> data : 1
we define data -> members : 1
define data members -> in : 1
members in a -> class : 1
class or the -> compiler : 1
or the compiler -> is : 1
compiler is forced -> to : 1
is forced to -> place : 1
forced to place -> the : 1
to place the -> members : 1
place the members -> in : 1
the members in -> the : 1
same order as -> we : 1
same order as -> they : 1
order as we -> define : 1
as we define -> the : 1
define the compiler -> also : 1
the compiler also -> has : 1
compiler also has -> to : 1
also has to -> ensure : 1
has to ensure -> that : 1
ensure that data -> members : 1
that data members -> inside : 1
data members inside -> the : 1
members inside the -> class : 1
inside the class -> have : 1
the class have -> the : 1
class have the -> correct : 1
have the correct -> it : 1
the correct it -> needs : 1
correct it needs -> to : 1
to add padding -> between : 1
add padding between -> data : 1
padding between data -> members : 1
between data members -> if : 1
data members if -> for : 1
members if for -> assume : 1
if for assume -> we : 1
for assume we -> have : 1
assume we have -> a : 1
assume we have -> two : 1
a class defined -> as : 1
class defined as -> document : 1
defined as document -> bool : 1
as document bool -> double : 1
document bool double -> int : 1
bool double int -> possible : 1
double int possible -> output : 1
int possible output -> is : 1
output is reason -> for : 1
is reason for -> the : 1
for the possible -> output : 1
possible output being -> is : 1
output being is -> that : 1
being is that -> the : 1
the compiler inserts -> padding : 1
compiler inserts padding -> after : 1
inserts padding after -> and : 1
padding after and -> to : 1
after and to -> fulfill : 1
and to fulfill -> the : 1
to fulfill the -> alignment : 2
fulfill the alignment -> requirements : 2
requirements of the -> individual : 1
requirements of the -> class : 1
of the individual -> data : 1
the individual data -> members : 1
individual data members -> and : 1
members and the -> entire : 1
and the entire -> the : 1
entire the compiler -> converts : 1
the compiler converts -> the : 1
compiler converts the -> class : 1
converts the class -> to : 1
class to something -> like : 1
something like document -> bool : 1
like document bool -> char : 1
document bool char -> invisible : 1
bool char invisible -> padding : 2
char invisible padding -> inserted : 3
invisible padding inserted -> by : 3
padding inserted by -> double : 1
padding inserted by -> first : 1
padding inserted by -> the : 1
padding inserted by -> size : 1
inserted by double -> int : 1
by double int -> char : 1
double int char -> invisible : 1
int char invisible -> padding : 1
inserted by first -> padding : 1
by first padding -> between : 1
first padding between -> and : 1
padding between and -> is : 1
between and is -> since : 1
and is since -> the : 1
is since the -> member : 1
is since the -> concurrency : 1
since the member -> of : 1
the member of -> an : 1
member of an -> alignment : 1
of an alignment -> of : 1
an alignment of -> the : 1
alignment of the -> second : 1
alignment of the -> objects : 1
alignment of the -> memory : 1
of the second -> padding : 1
the second padding -> that : 1
second padding that -> is : 1
padding that is -> added : 1
that is added -> after : 1
is added after -> is : 1
added after is -> this : 1
after is this -> is : 1
is this is -> needed : 1
is this is -> exactly : 1
this is needed -> in : 1
is needed in -> order : 1
needed in order -> to : 1
order to fulfill -> the : 1
the class the -> member : 1
class the member -> with : 1
the member with -> the : 1
member with the -> largest : 1
the largest alignment -> requirement : 1
largest alignment requirement -> also : 1
alignment requirement also -> determines : 1
requirement also determines -> the : 1
also determines the -> alignment : 1
determines the alignment -> requirement : 1
alignment requirement for -> the : 1
requirement for the -> entire : 1
for the entire -> data : 1
the entire data -> in : 1
entire data in -> our : 1
data in our -> this : 1
in our this -> means : 1
our this means -> that : 1
that the total -> size : 1
the total size -> of : 1
the total size -> is : 1
total size of -> the : 1
the class must -> be : 1
class must be -> a : 1
must be a -> multiple : 1
must be a -> decimal : 1
be a multiple -> of : 1
multiple of since -> it : 1
of since it -> contains : 1
since it contains -> a : 1
contains a value -> that : 1
a value that -> is : 1
value that is -> now : 1
that is now -> realize : 1
is now realize -> that : 1
now realize that -> we : 1
realize that we -> can : 1
we can rearrange -> the : 1
can rearrange the -> order : 1
rearrange the order -> of : 1
in the class -> in : 1
class in a -> way : 1
way that minimizes -> the : 1
that minimizes the -> padding : 1
minimizes the padding -> inserted : 1
the padding inserted -> by : 1
inserted by the -> by : 1
by the by -> starting : 1
the by starting -> with : 1
by starting with -> types : 1
starting with types -> with : 1
with types with -> the : 1
types with the -> biggest : 1
with the biggest -> alignment : 1
the biggest alignment -> create : 1
biggest alignment create -> a : 1
alignment create a -> new : 1
a new version -> of : 1
new version of -> the : 1
version of the -> version : 1
of the version -> of : 1
the version of -> document : 1
version of document -> class : 2
of document class -> document : 1
of document class -> after : 1
document class document -> double : 1
class document double -> int : 2
document double int -> bool : 2
double int bool -> the : 1
double int bool -> char : 1
int bool the -> rearrangement : 1
bool the rearrangement -> of : 1
the rearrangement of -> the : 1
rearrangement of the -> the : 1
the compiler now -> only : 1
compiler now only -> needs : 1
now only needs -> to : 1
needs to pad -> after : 1
to pad after -> the : 1
pad after the -> data : 1
after the data -> member : 1
the data member -> to : 1
the data member -> in : 3
data member to -> adjust : 1
member to adjust -> for : 1
to adjust for -> the : 1
adjust for the -> alignment : 1
for the alignment -> of : 1
alignment of this -> is : 1
of this is -> how : 1
this is how -> the : 1
how the class -> will : 1
class will look -> after : 1
will look after -> version : 1
look after version -> of : 1
after version of -> document : 1
document class after -> padding : 1
class after padding -> class : 1
after padding class -> document : 1
padding class document -> double : 1
int bool char -> invisible : 1
inserted by size -> of : 1
by size of -> the : 1
the new class -> is : 1
new class is -> now : 1
class is now -> only : 1
is now only -> compared : 1
now only compared -> to : 1
only compared to -> the : 1
the first which -> was : 1
the first which -> executes : 1
first which was -> we : 1
which was we -> can : 1
was we can -> verify : 1
we can verify -> this : 1
can verify this -> by : 1
verify this by -> using : 1
this by using -> the : 1
this by using -> which : 1
using the operator -> again : 1
the operator again -> on : 1
operator again on -> our : 1
again on our -> updated : 1
on our updated -> version : 1
our updated version -> of : 1
updated version of -> possible : 1
version of possible -> output : 1
of possible output -> is : 1
output is a -> general : 1
is a general -> you : 1
a general you -> can : 1
general you can -> place : 1
you can place -> the : 1
can place the -> biggest : 1
place the biggest -> data : 1
the biggest data -> members : 1
biggest data members -> in : 1
the beginning and -> the : 1
beginning and the -> smallest : 1
and the smallest -> members : 1
the smallest members -> at : 1
smallest members at -> the : 1
members at the -> in : 1
at the in -> this : 1
the in this -> you : 1
the in this -> will : 1
the in this -> case : 1
the in this -> the : 1
the in this -> is : 1
this you can -> minimize : 1
you can minimize -> the : 1
can minimize the -> memory : 1
can minimize the -> critical : 1
minimize the memory -> overhead : 1
memory overhead caused -> by : 1
overhead caused by -> later : 1
overhead caused by -> contention : 1
overhead caused by -> context : 1
caused by later -> we : 1
by later we -> will : 1
see that we -> need : 1
think about alignment -> when : 1
about alignment when -> placing : 1
alignment when placing -> objects : 1
when placing objects -> in : 1
placing objects in -> memory : 1
objects in memory -> regions : 1
in memory regions -> that : 1
memory regions that -> we : 1
regions that we -> have : 1
we have before -> we : 1
have before we -> know : 1
before we know -> the : 1
we know the -> alignment : 1
know the alignment -> of : 1
the objects that -> we : 1
the objects that -> have : 1
we are a -> performance : 1
are a performance -> there : 1
a performance there -> can : 1
performance there can -> also : 1
there can also -> be : 1
also be cases -> where : 1
be cases where -> you : 1
be cases where -> this : 1
where you want -> to : 1
want to align -> objects : 1
to align objects -> to : 1
align objects to -> cache : 1
objects to cache -> lines : 1
to cache lines -> to : 1
cache lines to -> minimize : 1
lines to minimize -> the : 1
number of cache -> lines : 1
of cache lines -> an : 1
cache lines an -> object : 1
lines an object -> spans : 1
an object spans -> we : 1
object spans we -> are : 1
spans we are -> on : 1
we are on -> the : 2
are on the -> subject : 2
on the subject -> of : 2
subject of cache -> it : 1
of cache it -> should : 1
cache it should -> also : 1
it should also -> be : 2
should also be -> mentioned : 1
should also be -> deallocated : 1
should also be -> said : 1
also be mentioned -> that : 1
be mentioned that -> it : 1
mentioned that it -> can : 1
can be beneficial -> to : 1
be beneficial to -> place : 1
beneficial to place -> multiple : 1
to place multiple -> data : 1
place multiple data -> members : 1
multiple data members -> that : 1
that are frequently -> used : 1
are frequently used -> together : 1
frequently used together -> next : 1
used together next -> to : 1
together next to -> each : 1
next to each -> of : 1
to each of -> resources : 1
each of resources -> is : 1
of resources is -> a : 1
resources is a -> fundamental : 1
is a fundamental -> aspect : 1
a fundamental aspect -> to : 1
fundamental aspect to -> consider : 1
aspect to consider -> when : 1
consider when an -> owner : 1
when an owner -> of : 1
an owner of -> a : 1
owner of a -> resource : 1
of a resource -> is : 2
a resource is -> responsible : 1
a resource is -> typically : 1
a resource is -> controlled : 1
a resource is -> owned : 1
resource is responsible -> for : 1
responsible for freeing -> the : 1
for freeing the -> resource : 1
freeing the resource -> when : 1
the resource when -> it : 1
resource when it -> is : 1
when it is -> no : 1
it is no -> longer : 1
no longer a -> resource : 1
longer a resource -> is : 1
resource is typically -> a : 1
is typically a -> block : 1
typically a block -> of : 1
block of memory -> but : 1
of memory but -> could : 1
memory but could -> also : 1
but could also -> be : 1
could also be -> a : 1
could also be -> moved : 1
also be a -> database : 1
be a database -> a : 1
a database a -> file : 1
database a file -> and : 1
a file and -> so : 1
file and so -> ownership : 1
and so ownership -> is : 1
so ownership is -> important : 1
ownership is important -> regardless : 1
is important regardless -> of : 1
important regardless of -> which : 1
regardless of which -> programming : 1
of which programming -> language : 1
which programming language -> you : 1
programming language you -> are : 1
language you are -> it : 1
you are it -> is : 1
is more apparent -> in : 1
more apparent in -> languages : 1
apparent in languages -> such : 1
in languages such -> as : 1
languages such as -> c : 1
such as c -> and : 1
as c and -> since : 1
c and since -> dynamic : 1
and since dynamic -> memory : 1
since dynamic memory -> is : 1
memory is not -> garbage : 1
is not garbage -> collected : 1
not garbage collected -> by : 1
garbage collected by -> whenever : 1
collected by whenever -> we : 1
by whenever we -> allocate : 1
whenever we allocate -> dynamic : 1
we allocate dynamic -> memory : 1
allocate dynamic memory -> in : 1
allocate dynamic memory -> when : 1
memory in we -> have : 1
in we have -> to : 1
have to think -> about : 1
think about the -> ownership : 1
about the ownership -> of : 1
ownership of that -> there : 1
of that there -> is : 1
there is now -> very : 1
is now very -> good : 1
now very good -> support : 1
very good support -> in : 1
good support in -> the : 1
support in the -> language : 1
in the language -> for : 1
the language for -> expressing : 1
language for expressing -> various : 1
for expressing various -> types : 1
expressing various types -> of : 1
various types of -> ownership : 1
types of ownership -> by : 1
types of ownership -> of : 1
of ownership by -> using : 1
ownership by using -> smart : 1
by using smart -> which : 1
using smart which -> we : 1
smart which we -> will : 1
in this smart -> pointers : 1
this smart pointers -> from : 1
smart pointers from -> the : 2
pointers from the -> standard : 2
standard library help -> us : 1
library help us -> specify : 1
help us specify -> the : 1
us specify the -> ownership : 1
specify the ownership -> of : 1
ownership of dynamic -> other : 1
of dynamic other -> types : 1
dynamic other types -> of : 1
types of variables -> already : 1
of variables already -> have : 1
variables already have -> a : 1
have a defined -> for : 1
a defined for -> local : 1
defined for local -> variables : 1
variables are owned -> by : 2
are owned by -> the : 3
by the current -> when : 1
the current when -> the : 1
current when the -> scope : 1
when the scope -> the : 1
the scope the -> objects : 1
scope the objects -> that : 1
objects that have -> been : 1
have been created -> inside : 1
been created inside -> the : 1
created inside the -> scope : 1
inside the scope -> will : 1
the scope will -> be : 1
scope will be -> automatically : 1
will be automatically -> auto : 1
will be automatically -> destroyed : 1
be automatically auto -> user : 1
automatically auto user -> user : 1
auto user user -> will : 1
user user will -> automatically : 1
user will automatically -> be : 1
will automatically be -> destroyed : 1
automatically be destroyed -> when : 1
be destroyed when -> it : 1
be destroyed when -> the : 1
destroyed when it -> goes : 1
when it goes -> out : 1
it goes out -> of : 1
of and global -> variables : 1
and global variables -> are : 1
global variables are -> owned : 1
by the program -> and : 1
the program and -> will : 1
program and will -> be : 1
will be destroyed -> when : 1
destroyed when the -> program : 1
destroyed when the -> function : 1
the program auto -> user : 1
program auto user -> members : 1
auto user members -> are : 1
user members are -> owned : 1
members are owned -> by : 1
by the instances -> of : 1
the instances of -> the : 1
instances of the -> class : 1
instances of the -> type : 1
instances of the -> queue : 1
the class that -> they : 1
class that they -> belong : 1
that they belong -> game : 1
they belong game -> user : 1
belong game user -> a : 1
game user a -> game : 1
user a game -> object : 1
a game object -> owns : 1
game object owns -> the : 1
object owns the -> user : 1
owns the user -> is : 1
user is only -> dynamic : 1
is only dynamic -> variables : 1
only dynamic variables -> that : 1
dynamic variables that -> do : 1
variables that do -> not : 1
not have a -> default : 1
have a default -> and : 1
a default and -> it : 1
default and it -> is : 1
it is up -> to : 1
programmer to make -> sure : 1
to make sure -> that : 1
to make sure -> this : 1
sure that all -> the : 1
that all the -> dynamically : 1
all the dynamically -> allocated : 1
the dynamically allocated -> variables : 1
the dynamically allocated -> memory : 1
dynamically allocated variables -> have : 1
allocated variables have -> an : 1
variables have an -> owner : 1
have an owner -> to : 1
an owner to -> control : 1
owner to control -> the : 1
to control the -> lifetime : 1
to control the -> which : 1
control the lifetime -> of : 1
the user new -> who : 1
user new who -> owns : 1
new who owns -> user : 1
who owns user -> modern : 1
owns user modern -> we : 1
user modern we -> can : 1
modern we can -> write : 1
code without explicit -> calls : 1
without explicit calls -> to : 1
explicit calls to -> and : 1
calls to and -> which : 1
calls to and -> spread : 1
to and which -> is : 1
is a great -> manually : 1
is a great -> place : 1
is a great -> wealth : 1
a great manually -> keeping : 1
great manually keeping -> track : 1
manually keeping track -> of : 1
keeping track of -> calls : 1
keeping track of -> shared : 1
track of calls -> to : 1
of calls to -> and : 1
to and spread -> out : 1
and spread out -> over : 1
spread out over -> a : 2
out over a -> large : 1
out over a -> code : 1
over a large -> code : 1
a large code -> base : 1
large code base -> can : 1
code base can -> easily : 1
base can easily -> become : 1
can easily become -> an : 1
easily become an -> raw : 1
become an raw -> pointers : 1
an raw pointers -> do : 1
raw pointers do -> not : 1
pointers do not -> express : 1
do not express -> any : 1
not express any -> which : 1
express any which -> makes : 1
any which makes -> ownership : 1
which makes ownership -> hard : 1
makes ownership hard -> to : 1
ownership hard to -> track : 1
hard to track -> if : 1
to track if -> we : 1
track if we -> are : 1
are only using -> raw : 1
only using raw -> pointers : 1
using raw pointers -> to : 1
raw pointers to -> refer : 1
pointers to refer -> to : 1
refer to dynamic -> recommend : 1
to dynamic recommend -> that : 1
dynamic recommend that -> you : 1
recommend that you -> make : 1
that you make -> ownership : 1
you make ownership -> clear : 1
make ownership clear -> and : 1
ownership clear and -> but : 1
clear and but -> do : 1
and but do -> strive : 1
but do strive -> to : 1
do strive to -> minimize : 1
strive to minimize -> explicit : 1
strive to minimize -> the : 1
to minimize explicit -> memory : 1
minimize explicit memory -> by : 1
explicit memory by -> following : 1
memory by following -> a : 1
by following a -> few : 1
following a few -> fairly : 1
a few fairly -> simple : 1
few fairly simple -> rules : 1
fairly simple rules -> for : 1
simple rules for -> dealing : 1
rules for dealing -> with : 1
with the ownership -> of : 1
ownership of you -> will : 1
of you will -> increase : 1
you will increase -> the : 1
the likelihood of -> getting : 1
likelihood of getting -> your : 1
of getting your -> code : 1
getting your code -> clean : 1
your code clean -> and : 1
code clean and -> correct : 1
clean and correct -> without : 1
and correct without -> leaking : 1
correct without leaking -> the : 1
without leaking the -> coming : 1
leaking the coming -> sections : 1
the coming sections -> will : 1
coming sections will -> guide : 1
sections will guide -> you : 1
will guide you -> through : 1
guide you through -> some : 1
you through some -> best : 1
through some best -> practices : 1
some best practices -> for : 1
best practices for -> that : 1
practices for that -> resources : 1
for that resources -> make : 1
that resources make -> your : 1
resources make your -> objects : 1
make your objects -> implicitly : 1
your objects implicitly -> handle : 1
objects implicitly handle -> the : 1
implicitly handle the -> of : 1
handle the of -> dynamic : 1
the of dynamic -> auto : 1
of dynamic auto -> v : 1
dynamic auto v -> the : 1
auto v the -> preceding : 1
auto v the -> variant : 1
auto v the -> larger : 1
v the preceding -> we : 1
preceding we are -> using : 1
are using both -> stack : 1
using both stack -> and : 1
both stack and -> dynamic : 1
stack and dynamic -> but : 1
and dynamic but -> we : 1
dynamic but we -> have : 1
but we have -> to : 1
to explicitly call -> and : 1
explicitly call and -> the : 1
call and the -> object : 1
and the object -> the : 1
and the object -> it : 1
and the object -> with : 1
the object the -> we : 1
the object the -> shared : 1
object the we -> create : 1
the we create -> is : 1
the we create -> a : 1
we create is -> an : 1
create is an -> automatic : 1
is an automatic -> object : 1
an automatic object -> that : 1
automatic object that -> will : 1
object that will -> live : 1
object that will -> have : 1
that will live -> on : 1
will live on -> the : 1
live on the -> since : 1
on the since -> it : 1
the since it -> is : 2
it is owned -> by : 1
is owned by -> the : 1
is owned by -> exactly : 1
by the it -> will : 1
by the it -> would : 1
the it will -> be : 1
the it will -> now : 1
be automatically destroyed -> when : 1
automatically destroyed when -> the : 1
function the object -> itself : 1
the object itself -> uses : 1
the object itself -> a : 1
object itself uses -> dynamic : 1
itself uses dynamic -> memory : 1
uses dynamic memory -> to : 1
dynamic memory to -> store : 1
memory to store -> the : 1
store the integer -> when : 1
the integer when -> the : 1
integer when the -> object : 1
the object goes -> out : 1
object goes out -> of : 1
out of its -> destructor : 1
of its destructor -> can : 1
its destructor can -> safely : 1
destructor can safely -> free : 1
can safely free -> the : 1
safely free the -> dynamic : 1
free the dynamic -> this : 1
the dynamic this -> pattern : 1
dynamic this pattern -> of : 1
this pattern of -> letting : 1
pattern of letting -> destructors : 1
of letting destructors -> free : 1
letting destructors free -> dynamic : 1
destructors free dynamic -> memory : 1
free dynamic memory -> makes : 1
dynamic memory makes -> it : 1
makes it fairly -> easy : 1
it fairly easy -> to : 1
easy to avoid -> memory : 1
to avoid memory -> we : 1
avoid memory we -> are : 1
subject of freeing -> i : 1
of freeing i -> think : 1
freeing i think -> it : 1
i think it -> makes : 1
think it makes -> sense : 1
it makes sense -> to : 1
makes sense to -> mention : 1
sense to mention -> is : 1
to mention is -> a : 1
mention is a -> short : 1
is a short -> for : 1
is a short -> the : 1
a short for -> acquisition : 1
a short for -> mutual : 1
short for acquisition -> is : 1
for acquisition is -> where : 1
acquisition is where -> the : 1
where the lifetime -> of : 1
resource is controlled -> by : 1
is controlled by -> the : 1
controlled by the -> lifetime : 1
by the lifetime -> of : 1
lifetime of an -> the : 1
an the pattern -> is : 1
the pattern is -> simple : 1
pattern is simple -> but : 1
is simple but -> extremely : 1
simple but extremely -> useful : 1
but extremely useful -> for : 1
extremely useful for -> handling : 1
useful for handling -> resources : 1
for handling resources -> but : 1
handling resources but -> for : 1
resources but for -> a : 1
for a that -> the : 1
a that the -> resource : 1
a that the -> destination : 1
a that the -> thread : 1
that the resource -> we : 1
the resource we -> need : 1
resource we need -> is : 1
need is some -> sort : 1
is some sort -> of : 1
sort of connection -> for : 1
of connection for -> sending : 1
connection for sending -> whenever : 1
for sending whenever -> we : 1
sending whenever we -> are : 1
whenever we are -> done : 1
we are done -> using : 2
are done using -> the : 2
done using the -> we : 1
done using the -> thread : 1
the we must -> remember : 1
we must remember -> to : 1
must remember to -> close : 1
remember to close -> here : 1
remember to close -> the : 1
to close here -> is : 1
close here is -> an : 1
how it looks -> when : 2
how it looks -> if : 1
it looks when -> we : 1
it looks when -> a : 1
looks when we -> open : 1
when we open -> and : 1
we open and -> close : 1
open and close -> the : 1
and close the -> connection : 1
close the connection -> explicitly : 1
close the connection -> after : 1
the connection explicitly -> to : 1
connection explicitly to -> send : 1
explicitly to send -> a : 1
to send a -> auto : 1
send a auto -> connection : 1
a auto connection -> you : 1
auto connection you -> can : 1
connection you can -> we : 1
you can we -> have : 1
you can we -> iterate : 1
can we have -> to : 1
have to remember -> to : 1
to remember to -> close : 1
to close the -> connection : 1
to close the -> it : 1
the connection after -> we : 1
connection after we -> have : 1
have used it -> or : 1
have used it -> to : 1
used it or -> the : 1
it or the -> connection : 1
or the connection -> will : 1
the connection will -> stay : 1
the connection will -> always : 1
connection will stay -> open : 1
will stay open -> in : 1
stay open in -> this : 1
open in this -> it : 1
in this it -> seems : 1
this it seems -> hard : 1
it seems hard -> to : 1
seems hard to -> but : 1
hard to but -> once : 1
to but once -> the : 1
but once the -> code : 1
once the code -> gets : 1
the code gets -> more : 1
code gets more -> complicated : 1
gets more complicated -> after : 1
more complicated after -> inserting : 1
complicated after inserting -> proper : 1
after inserting proper -> error : 1
inserting proper error -> handling : 1
proper error handling -> and : 1
proper error handling -> without : 1
error handling and -> multiple : 1
handling and multiple -> exit : 1
and multiple exit -> it : 1
multiple exit it -> will : 1
exit it will -> be : 1
will be hard -> to : 1
hard to guarantee -> that : 1
to guarantee that -> the : 1
to guarantee that -> they : 1
that the connection -> will : 1
connection will always -> be : 1
always be raii -> solves : 1
be raii solves -> this : 1
raii solves this -> by : 1
solves this by -> relying : 1
this by relying -> on : 1
by relying on -> the : 1
relying on the -> fact : 1
on the fact -> that : 1
that the lifetime -> of : 1
lifetime of automatic -> variables : 1
of automatic variables -> is : 1
automatic variables is -> handled : 1
variables is handled -> for : 1
is handled for -> us : 1
handled for us -> in : 1
for us in -> a : 1
us in a -> predictable : 1
in a predictable -> what : 1
in a predictable -> and : 1
a predictable what -> we : 1
predictable what we -> need : 1
what we need -> is : 1
what we need -> in : 1
what we need -> to : 1
need is an -> object : 1
an object that -> will : 1
that will have -> the : 1
will have the -> same : 1
the same lifetime -> as : 1
same lifetime as -> the : 1
lifetime as the -> connection : 1
as the connection -> we : 1
the connection we -> get : 1
connection we get -> from : 1
we get from -> the : 1
get from the -> we : 1
from the we -> create : 1
from the we -> simply : 1
a class for -> called : 1
a class for -> it : 1
class for called -> raiiconnection : 1
for called raiiconnection -> try : 1
called raiiconnection try -> catch : 1
raiiconnection try catch -> handle : 1
try catch handle -> but : 1
catch handle but -> never : 1
handle but never -> throw : 1
but never throw -> from : 1
never throw from -> a : 1
throw from a -> return : 1
from a return -> connection : 1
a return connection -> object : 1
return connection object -> is : 1
connection object is -> now : 1
object is now -> wrapped : 1
is now wrapped -> in : 1
now wrapped in -> a : 1
class that controls -> the : 1
that controls the -> lifetime : 1
controls the lifetime -> of : 1
of the connection -> instead : 1
the connection instead -> of : 1
connection instead of -> explicitly : 1
instead of explicitly -> closing : 1
of explicitly closing -> the : 1
explicitly closing the -> we : 1
closing the we -> can : 1
can now let -> handle : 1
now let handle -> this : 1
let handle this -> for : 1
handle this for -> auto : 1
this for auto -> connection : 1
for auto connection -> no : 1
auto connection no -> need : 1
connection no need -> to : 1
no need to -> close : 1
no need to -> use : 1
no need to -> protect : 1
no need to -> pass : 1
need to close -> the : 1
close the it -> is : 1
the it is -> implicitly : 1
it is implicitly -> by : 1
is implicitly by -> the : 1
implicitly by the -> raiiconnection : 1
by the raiiconnection -> standard : 1
the raiiconnection standard -> containers : 1
raiiconnection standard containers -> to : 1
standard containers to -> handle : 1
containers to handle -> a : 1
to handle a -> collection : 1
to handle a -> dynamically : 1
handle a collection -> of : 1
the container you -> use : 1
container you use -> will : 1
you use will -> own : 1
use will own -> the : 1
will own the -> dynamic : 1
own the dynamic -> memory : 1
the dynamic memory -> it : 1
dynamic memory it -> needs : 1
memory it needs -> to : 1
memory it needs -> usually : 1
needs to store -> the : 1
store the objects -> you : 1
the objects you -> add : 1
objects you add -> to : 1
you add to -> this : 1
way of minimizing -> explicit : 1
of minimizing explicit -> and : 1
minimizing explicit and -> expressions : 1
explicit and expressions -> in : 1
and expressions in -> your : 1
expressions in your -> we : 1
in your we -> talk : 1
your we talk -> more : 1
we talk more -> about : 1
about the containers -> here : 1
the containers here -> since : 1
containers here since -> they : 1
here since they -> have : 1
since they have -> already : 1
they have already -> been : 1
already been covered -> in : 1
been covered in -> smart : 1
covered in smart -> pointers : 1
in smart pointers -> from : 1
standard library wrap -> a : 1
library wrap a -> raw : 1
wrap a raw -> pointer : 1
a raw pointer -> and : 1
a raw pointer -> already : 1
raw pointer and -> make : 1
pointer and make -> the : 1
make the ownership -> of : 1
ownership of the -> object : 1
of the object -> it : 1
of the object -> and : 1
object it points -> to : 1
object it points -> in : 1
points to when -> used : 1
to when used -> there : 1
when used there -> is : 1
used there is -> no : 1
is no doubt -> about : 1
no doubt about -> who : 1
doubt about who -> is : 1
about who is -> responsible : 1
who is responsible -> for : 1
responsible for deleting -> a : 1
for deleting a -> dynamic : 1
deleting a dynamic -> the : 1
a dynamic the -> three : 1
dynamic the three -> smart : 1
the three smart -> pointer : 1
three smart pointer -> types : 1
smart pointer types -> are : 1
pointer types are -> and : 1
types are and -> as : 1
are and as -> their : 1
and as their -> names : 1
and as their -> original : 1
as their names -> they : 1
their names they -> represent : 1
names they represent -> three : 1
they represent three -> types : 1
represent three types -> of : 1
of ownership of -> an : 1
of an ownership -> expresses : 1
an ownership expresses -> that : 1
ownership expresses that -> and : 1
ownership expresses that -> i : 1
ownership expresses that -> use : 1
expresses that and -> only : 1
that and only -> own : 1
and only own -> the : 1
only own the -> when : 1
own the when -> done : 1
the when done -> using : 1
when done using -> i : 1
done using i -> will : 1
using i will -> delete : 1
i will delete -> ownership : 1
will delete ownership -> expresses : 1
delete ownership expresses -> that : 1
expresses that i -> the : 1
that i the -> with : 1
i the with -> when : 1
the with when -> no : 1
with when no -> one : 1
when no one -> needs : 1
no one needs -> the : 1
one needs the -> object : 1
needs the object -> it : 1
object it will -> be : 1
will be ownership -> expresses : 1
be ownership expresses -> that : 1
expresses that use -> the : 1
that use the -> object : 1
use the object -> if : 1
the object if -> it : 1
object if it -> but : 1
if it but -> keep : 1
it but keep -> it : 1
but keep it -> alive : 1
keep it alive -> just : 1
it alive just -> for : 1
alive just for -> safest : 1
just for safest -> and : 1
for safest and -> least : 1
safest and least -> complicated : 1
and least complicated -> ownership : 1
least complicated ownership -> is : 1
complicated ownership is -> unique : 1
ownership is unique -> ownership : 1
is unique ownership -> and : 1
unique ownership and -> should : 1
ownership and should -> be : 1
be the first -> thing : 1
the first thing -> that : 1
the first thing -> we : 1
first thing that -> pops : 1
thing that pops -> into : 1
that pops into -> your : 1
pops into your -> mind : 1
into your mind -> when : 1
your mind when -> thinking : 1
mind when thinking -> about : 1
when thinking about -> smart : 1
thinking about smart -> unique : 1
about smart unique -> pointers : 1
smart unique pointers -> represent : 1
unique pointers represent -> unique : 1
pointers represent unique -> that : 1
represent unique that -> a : 1
unique that a -> resource : 1
resource is owned -> by : 1
owned by exactly -> one : 1
by exactly one -> a : 1
exactly one a -> unique : 1
one a unique -> ownership : 1
a unique ownership -> can : 1
unique ownership can -> be : 1
ownership can be -> transferred : 1
can be transferred -> to : 1
be transferred to -> someone : 1
transferred to someone -> but : 1
to someone but -> it : 1
someone but it -> cannot : 1
but it cannot -> be : 1
it cannot be -> since : 1
cannot be since -> that : 1
be since that -> would : 1
that would break -> the : 1
would break the -> unique : 1
break the unique -> pointers : 1
the unique pointers -> are : 1
unique pointers are -> also : 1
pointers are also -> very : 1
are also very -> efficient : 1
also very efficient -> since : 1
very efficient since -> they : 1
efficient since they -> do : 1
since they do -> not : 1
do not add -> any : 1
not add any -> performance : 1
add any performance -> overhead : 1
any performance overhead -> compared : 1
performance overhead compared -> to : 1
overhead compared to -> ordinary : 1
compared to ordinary -> raw : 1
to ordinary raw -> here : 1
ordinary raw here -> is : 1
raw here is -> how : 1
use a owner -> auto : 1
a owner auto -> transfer : 1
owner auto transfer -> ownership : 1
auto transfer ownership -> means : 1
transfer ownership means -> that : 1
ownership means that -> an : 1
means that an -> object : 2
that an object -> can : 2
that an object -> of : 1
an object can -> have : 1
an object can -> be : 1
object can have -> multiple : 1
can have multiple -> when : 1
have multiple when -> the : 1
multiple when the -> last : 1
when the last -> owner : 1
the last owner -> ceases : 1
last owner ceases -> to : 1
owner ceases to -> the : 1
ceases to the -> object : 1
to the object -> will : 1
to the object -> is : 1
to the object -> we : 1
will be this -> is : 1
be this is -> a : 1
be this is -> done : 1
be this is -> quite : 1
a very useful -> pointer : 1
very useful pointer -> but : 1
useful pointer but -> is : 1
pointer but is -> also : 1
but is also -> more : 1
is also more -> complicated : 1
also more complicated -> than : 1
complicated than unique -> object : 1
than unique object -> uses : 1
unique object uses -> reference : 1
object uses reference -> counting : 1
uses reference counting -> to : 1
reference counting to -> keep : 1
counting to keep -> track : 1
track of the -> number : 1
of the number -> of : 1
number of owners -> an : 1
of owners an -> object : 1
owners an object -> when : 1
when the counter -> reaches : 1
the counter reaches -> the : 1
counter reaches the -> object : 1
reaches the object -> will : 1
be the counter -> needs : 1
the counter needs -> to : 2
counter needs to -> be : 2
be stored so -> it : 1
stored so it -> does : 1
so it does -> have : 1
it does have -> some : 1
does have some -> memory : 1
have some memory -> overhead : 1
some memory overhead -> compared : 1
memory overhead compared -> with : 1
overhead compared with -> the : 1
compared with the -> unique : 1
compared with the -> where : 1
with the unique -> is : 1
the unique is -> so : 1
unique is so -> the : 1
is so the -> counter : 1
so the counter -> needs : 1
to be updated -> atomically : 1
be updated atomically -> to : 1
updated atomically to -> prevent : 1
atomically to prevent -> race : 1
to prevent race -> recommended : 1
prevent race recommended -> way : 1
race recommended way -> of : 1
recommended way of -> creating : 1
way of creating -> objects : 1
of creating objects -> owned : 1
creating objects owned -> by : 1
objects owned by -> shared : 1
owned by shared -> pointers : 1
by shared pointers -> is : 1
shared pointers is -> to : 1
pointers is to -> use : 1
is to use -> it : 1
is to use -> a : 3
is to use -> as : 1
is to use -> for : 1
is to use -> the : 1
use it is -> both : 1
it is both -> safer : 1
is both safer -> an : 1
both safer an -> point : 1
safer an point -> of : 1
an point of -> and : 1
point of and -> more : 1
of and more -> efficient : 1
and more efficient -> than : 1
efficient than creating -> the : 1
than creating the -> object : 1
creating the object -> manually : 1
the object manually -> with : 1
object manually with -> and : 1
manually with and -> then : 1
with and then -> passing : 1
and then passing -> it : 1
then passing it -> to : 1
to a by -> overloading : 1
a by overloading -> and : 1
by overloading and -> again : 1
by overloading and -> just : 1
overloading and again -> to : 1
and again to -> track : 1
again to track -> we : 1
to track we -> can : 1
track we can -> conduct : 1
we can conduct -> an : 1
can conduct an -> experiment : 1
conduct an experiment -> to : 1
an experiment to -> find : 1
experiment to find -> out : 1
find out why -> more : 1
out why more -> operator : 1
why more operator -> p : 1
more operator p -> size : 1
void return try -> the : 1
return try the -> recommended : 1
try the recommended -> way : 1
the recommended way -> using : 1
the recommended way -> to : 1
recommended way using -> int : 1
way using int -> auto : 1
using int auto -> i : 1
auto i return -> output : 1
auto i return -> program : 1
i return output -> when : 1
return output when -> running : 1
the program is -> as : 1
program is as -> bytes : 1
is as bytes -> deleted : 1
as bytes deleted -> allocate : 1
bytes deleted allocate -> the : 1
deleted allocate the -> value : 1
allocate the value -> explicitly : 1
the value explicitly -> by : 1
value explicitly by -> using : 1
explicitly by using -> and : 1
by using and -> then : 1
by using and -> type : 1
using and then -> pass : 1
and then pass -> it : 1
then pass it -> to : 1
to the int -> auto : 1
to the int -> if : 1
i return program -> will : 1
return program will -> generate : 1
program will generate -> the : 1
generate the following -> bytes : 1
generate the following -> which : 1
generate the following -> function : 1
the following bytes -> allocated : 1
following bytes allocated -> bytes : 1
bytes allocated bytes -> deleted : 1
allocated bytes deleted -> memory : 1
bytes deleted memory -> deleted : 1
deleted memory deleted -> can : 1
memory deleted can -> conclude : 1
deleted can conclude -> that : 1
can conclude that -> the : 1
second version needs -> two : 1
version needs two -> one : 1
needs two one -> for : 1
two one for -> and : 1
two one for -> floats : 1
one for and -> one : 1
for and one -> for : 1
one for the -> first : 1
one for the -> short : 1
one for the -> long : 1
for the first -> version : 1
the first version -> only : 1
first version only -> needed : 1
version only needed -> one : 1
only needed one -> this : 1
needed one this -> also : 1
one this also -> means : 1
this also means -> by : 1
this also means -> that : 1
also means by -> using : 1
means by using -> our : 1
by using our -> code : 1
by using our -> chapter : 1
using our code -> will : 1
our code will -> be : 1
our code will -> benefit : 1
code will be -> more : 1
will be more -> thanks : 1
be more thanks -> to : 1
more thanks to -> spatial : 1
to spatial ownership -> keep : 1
spatial ownership keep -> any : 1
ownership keep any -> objects : 1
keep any objects -> it : 1
any objects it -> only : 1
objects it only -> allows : 1
it only allows -> us : 1
only allows us -> to : 1
use an object -> if : 1
an object if -> someone : 1
object if someone -> else : 1
else owns why -> would : 1
owns why would -> you : 1
why would you -> want : 1
would you want -> such : 1
would you want -> one : 1
you want such -> a : 1
want such a -> fuzzy : 1
such a fuzzy -> ownership : 1
a fuzzy ownership -> as : 1
fuzzy ownership as -> weak : 1
ownership as weak -> one : 1
as weak one -> common : 1
weak one common -> reason : 1
one common reason -> for : 1
reason for using -> a : 1
for using a -> weak : 1
using a weak -> pointer : 1
a weak pointer -> is : 2
weak pointer is -> to : 1
weak pointer is -> safe : 1
pointer is to -> break : 1
is to break -> a : 1
to break a -> reference : 1
break a reference -> a : 1
a reference a -> reference : 1
reference a reference -> cycle : 1
a reference cycle -> occurs : 1
reference cycle occurs -> when : 1
cycle occurs when -> two : 1
occurs when two -> or : 1
occurs when two -> threads : 1
when two or -> more : 1
two or more -> objects : 1
or more objects -> refer : 1
more objects refer -> to : 1
objects refer to -> each : 1
refer to each -> other : 1
to each other -> using : 1
to each other -> than : 1
each other using -> shared : 1
other using shared -> even : 1
using shared even -> if : 1
shared even if -> all : 1
even if all -> external : 1
if all external -> are : 1
all external are -> the : 1
external are the -> objects : 1
are the objects -> are : 1
the objects are -> kept : 1
objects are kept -> alive : 1
are kept alive -> by : 1
kept alive by -> referring : 1
alive by referring -> to : 1
referring to not -> just : 1
to not just -> use : 1
not just use -> a : 1
just use a -> raw : 1
use a raw -> the : 1
a raw the -> weak : 1
raw the weak -> pointer : 1
the weak pointer -> exactly : 1
weak pointer exactly -> what : 1
pointer exactly what -> a : 1
exactly what a -> raw : 1
what a raw -> pointer : 1
raw pointer already -> not : 1
pointer already not -> at : 1
already not at -> a : 1
not at a -> weak : 1
at a weak -> pointer : 1
pointer is safe -> to : 1
safe to use -> since : 1
to use since -> we : 1
use since we -> cannot : 1
since we cannot -> reference : 1
we cannot reference -> the : 1
cannot reference the -> object : 1
reference the object -> unless : 1
the object unless -> it : 1
object unless it -> actually : 1
unless it actually -> which : 1
it actually which -> is : 1
actually which is -> not : 1
with a dangling -> raw : 1
a dangling raw -> an : 1
dangling raw an -> example : 1
raw an example -> will : 1
an example will -> clarify : 1
will clarify i -> auto : 1
clarify i auto -> maybe : 1
i auto maybe -> happens : 1
auto maybe happens -> here : 1
maybe happens here -> so : 1
happens here so -> that : 1
here so that -> the : 1
that the int -> is : 1
the int is -> if : 1
int is if -> we : 1
is if we -> managed : 1
is if we -> add : 1
is if we -> were : 1
if we managed -> to : 1
we managed to -> convert : 1
we managed to -> pass : 1
we managed to -> get : 1
managed to convert -> our : 1
to convert our -> weak : 1
convert our weak -> pointer : 1
our weak pointer -> to : 1
weak pointer to -> a : 1
pointer to a -> shared : 1
pointer to a -> correctly : 1
pointer to a -> that : 1
to a shared -> else : 1
to a shared -> pointer : 1
a shared else -> has : 1
shared else has -> was : 1
else has was -> we : 1
has was we -> try : 1
was we try -> to : 1
try to use -> the : 1
use the weak -> we : 1
the weak we -> need : 1
weak we need -> to : 1
need to convert -> it : 1
convert it to -> a : 1
convert it to -> this : 1
a shared pointer -> first : 1
a shared pointer -> object : 1
shared pointer first -> using : 1
pointer first using -> the : 1
using the member -> function : 1
using the member -> where : 1
member function if -> the : 1
function if the -> object : 1
object the shared -> pointer : 1
the shared pointer -> will : 1
the shared pointer -> with : 1
shared pointer will -> be : 1
pointer will be -> a : 1
will be a -> valid : 1
be a valid -> pointer : 1
a valid pointer -> to : 1
valid pointer to -> that : 1
pointer to that -> we : 1
to that we -> will : 1
to that we -> just : 1
we will get -> an : 1
we will get -> a : 1
will get an -> empty : 1
get an empty -> this : 1
an empty this -> we : 1
empty this we -> can : 1
can avoid dangling -> pointers : 1
avoid dangling pointers -> when : 1
dangling pointers when -> using : 1
pointers when using -> instead : 1
when using instead -> of : 1
using instead of -> raw : 1
instead of raw -> size : 1
of raw size -> of : 1
raw size of -> the : 1
of the great -> things : 1
the great things -> about : 1
great things about -> containers : 1
things about containers -> such : 1
about containers such -> as : 1
such as is -> that : 1
as is that -> they : 1
that they automatically -> allocate : 1
they automatically allocate -> dynamic : 1
automatically allocate dynamic -> memory : 1
dynamic memory when -> the : 1
dynamic memory when -> we : 1
memory when the -> use : 1
memory when the -> sandboxed : 1
when the use -> of : 1
use of dynamic -> memory : 1
of dynamic memory -> for : 1
of dynamic memory -> can : 1
dynamic memory for -> container : 1
memory for container -> objects : 1
for container objects -> that : 1
container objects that -> only : 1
objects that only -> contain : 1
that only contain -> a : 1
only contain a -> few : 1
contain a few -> small : 1
a few small -> elements : 1
few small elements -> can : 1
small elements can -> hurt : 1
elements can hurt -> the : 1
can hurt the -> it : 1
can hurt the -> performance : 1
hurt the it -> would : 1
the it would -> be : 1
the it would -> have : 1
the it would -> use : 1
more efficient to -> keep : 1
more efficient to -> handle : 1
efficient to keep -> the : 1
in the container -> itself : 1
in the container -> that : 1
in the container -> concentrate : 1
the container itself -> and : 1
container itself and -> only : 1
itself and only -> use : 1
and only use -> stack : 1
only use stack -> memory : 1
use stack memory -> instead : 1
use stack memory -> or : 1
stack memory instead -> of : 1
memory instead of -> allocating : 1
instead of allocating -> small : 1
of allocating small -> regions : 1
allocating small regions -> of : 1
small regions of -> memory : 1
regions of memory -> on : 1
on the most -> modern : 1
the most modern -> implementations : 1
most modern implementations -> of : 1
modern implementations of -> will : 1
implementations of will -> take : 1
of will take -> advantage : 1
will take advantage -> of : 1
of the fact -> that : 1
fact that a -> lot : 1
that a lot -> of : 1
lot of strings -> in : 1
of strings in -> a : 1
strings in a -> normal : 1
in a normal -> program : 1
in a normal -> and : 1
a normal program -> are : 1
normal program are -> short : 1
program are short -> and : 1
are short and -> that : 1
short and that -> short : 1
and that short -> strings : 1
that short strings -> are : 1
short strings are -> more : 1
strings are more -> efficient : 1
are more efficient -> to : 1
efficient to handle -> without : 1
to handle without -> the : 1
handle without the -> use : 1
without the use -> of : 1
use of heap -> alternative : 1
of heap alternative -> is : 1
heap alternative is -> to : 1
alternative is to -> keep : 1
is to keep -> a : 1
to keep a -> small : 1
keep a small -> separate : 1
a small separate -> buffer : 1
small separate buffer -> in : 1
separate buffer in -> the : 1
buffer in the -> string : 1
in the string -> class : 1
the string class -> which : 1
the string class -> even : 1
the string class -> can : 1
the string class -> know : 1
string class which -> can : 1
class which can -> be : 2
class which can -> roughly : 1
used when the -> string : 1
when the string -> content : 1
when the string -> is : 1
the string content -> is : 1
string content is -> this : 1
content is this -> would : 1
is this would -> increase : 1
this would increase -> the : 1
would increase the -> size : 1
increase the size -> of : 1
string class even -> when : 1
class even when -> the : 1
when the short -> buffer : 1
the short buffer -> is : 1
short buffer is -> not : 1
buffer is not -> a : 1
not a more -> solution : 1
a more solution -> is : 1
more solution is -> to : 1
use a which -> can : 1
a which can -> hold : 1
which can hold -> a : 1
can hold a -> short : 1
hold a short -> buffer : 1
a short buffer -> when : 1
short buffer when -> the : 1
buffer when the -> string : 1
string is in -> short : 1
is in short -> mode : 1
in short mode -> hold : 1
short mode hold -> the : 1
mode hold the -> data : 1
hold the data -> members : 1
data members it -> needs : 1
members it needs -> to : 1
needs to handle -> a : 1
handle a dynamically -> allocated : 1
a dynamically allocated -> the : 1
dynamically allocated the -> technique : 1
allocated the technique -> for : 1
the technique for -> optimizing : 1
technique for optimizing -> a : 1
for optimizing a -> container : 1
optimizing a container -> for : 1
a container for -> handling : 1
container for handling -> small : 1
for handling small -> data : 1
handling small data -> is : 1
small data is -> usually : 1
data is usually -> referred : 1
to as small -> string : 1
as small string -> optimization : 1
small string optimization -> for : 1
string optimization for -> or : 1
optimization for or -> small : 1
for or small -> size : 1
or small size -> optimization : 1
small size optimization -> and : 1
small size optimization -> we : 1
size optimization and -> small : 1
optimization and small -> buffer : 1
and small buffer -> optimization : 1
small buffer optimization -> for : 1
buffer optimization for -> other : 1
optimization for other -> we : 1
for other we -> have : 1
other we have -> many : 1
we have many -> names : 1
have many names -> for : 1
many names for -> the : 1
names for the -> things : 1
for the things -> we : 1
the things we -> short : 1
things we short -> code : 1
we short code -> example : 1
short code example -> will : 1
code example will -> demonstrate : 1
example will demonstrate -> how : 1
will demonstrate how -> from : 1
will demonstrate how -> to : 1
demonstrate how from -> from : 1
how from from -> llvm : 1
from from llvm -> behaves : 1
from llvm behaves -> on : 1
llvm behaves on -> my : 1
behaves on my -> allocated : 1
on my allocated -> overload : 1
my allocated overload -> operator : 1
allocated overload operator -> new : 1
overload operator new -> and : 1
operator new and -> delete : 1
and delete to -> track : 1
delete to track -> auto : 1
to track auto -> operator : 1
track auto operator -> p : 1
auto operator p -> allocated : 1
operator p allocated -> return : 1
p allocated return -> auto : 1
allocated return auto -> operator : 1
void return auto -> int : 1
auto int allocated -> auto : 1
int allocated auto -> s : 1
allocated auto s -> elaborate : 1
auto s elaborate -> with : 1
s elaborate with -> different : 1
elaborate with different -> string : 1
with different string -> space : 1
different string space -> heap : 1
string space heap -> space : 1
space heap space -> allocated : 1
space heap space -> capacity : 2
heap space allocated -> capacity : 1
space allocated capacity -> code : 1
allocated capacity code -> starts : 1
capacity code starts -> by : 1
code starts by -> overloading : 1
starts by overloading -> global : 1
by overloading global -> and : 1
overloading global and -> for : 1
global and for -> the : 1
for the purpose -> of : 2
the purpose of -> tracking : 1
the purpose of -> demonstrating : 1
purpose of tracking -> dynamic : 1
of tracking dynamic -> memory : 1
tracking dynamic memory -> we : 1
dynamic memory we -> can : 1
memory we can -> now : 1
can now start -> testing : 1
now start testing -> different : 1
start testing different -> sizes : 1
testing different sizes -> of : 1
string to see -> building : 1
to see building -> and : 1
see building and -> running : 1
building and running -> the : 1
and running the -> preceding : 1
running the preceding -> example : 1
the preceding example -> in : 1
the preceding example -> it : 1
preceding example in -> the : 1
example in the -> release : 1
in the release -> mode : 1
the release mode -> on : 1
release mode on -> my : 1
mode on my -> it : 1
my it generates -> the : 1
it generates the -> following : 1
the following space -> heap : 2
following space heap -> space : 2
heap space capacity -> output : 1
heap space capacity -> class : 1
space capacity output -> tells : 1
capacity output tells -> us : 1
output tells us -> that : 1
tells us that -> occupies : 1
us that occupies -> bytes : 1
that occupies bytes -> on : 1
occupies bytes on -> the : 1
bytes on the -> stack : 1
stack and that -> it : 1
has a capacity -> of : 1
a capacity of -> chars : 1
capacity of chars -> without : 1
of chars without -> using : 1
chars without using -> any : 1
without using any -> heap : 1
without using any -> shared : 1
using any heap -> verify : 1
any heap verify -> that : 1
heap verify that -> this : 1
verify that this -> is : 1
is actually true -> by : 1
actually true by -> replacing : 1
true by replacing -> the : 1
by replacing the -> empty : 1
by replacing the -> preceding : 1
replacing the empty -> string : 1
the empty string -> with : 1
empty string with -> a : 1
string with a -> string : 1
with a string -> of : 1
a string of -> s : 1
a string of -> by : 3
string of s -> program : 1
of s program -> still : 1
s program still -> produces : 1
program still produces -> the : 1
still produces the -> same : 1
produces the same -> output : 1
the same output -> and : 1
same output and -> verifies : 1
output and verifies -> that : 1
and verifies that -> no : 1
verifies that no -> dynamic : 1
that no dynamic -> memory : 1
no dynamic memory -> has : 1
no dynamic memory -> is : 1
dynamic memory has -> been : 1
memory has been -> but : 1
has been but -> what : 1
been but what -> happens : 1
increase the string -> to : 1
string to hold -> s : 1
to hold s -> the : 1
hold s the -> program : 1
s the program -> now : 1
the program now -> produces : 1
program now produces -> the : 1
now produces the -> following : 1
produces the following -> space : 1
space capacity class -> has : 1
capacity class has -> now : 1
class has now -> been : 1
has now been -> forced : 1
now been forced -> to : 1
been forced to -> use : 1
forced to use -> the : 1
use the heap -> for : 1
the heap for -> storing : 1
heap for storing -> the : 1
for storing the -> it : 1
for storing the -> size : 1
storing the it -> allocates : 1
the it allocates -> bytes : 1
the it allocates -> memory : 1
it allocates bytes -> and : 1
allocates bytes and -> reports : 1
bytes and reports -> that : 1
and reports that -> the : 1
capacity is is -> because : 1
is is because -> always : 1
is because always -> stores : 1
because always stores -> a : 1
always stores a -> string : 1
stores a string -> internally : 1
a string internally -> needs : 1
string internally needs -> an : 1
internally needs an -> extra : 1
needs an extra -> byte : 1
an extra byte -> at : 1
extra byte at -> the : 1
byte at the -> end : 1
the end for -> the : 1
end for the -> null : 1
for the null -> it : 1
the null it -> is : 1
null it is -> still : 1
is still quite -> remarkable : 1
still quite remarkable -> that : 1
quite remarkable that -> the : 1
remarkable that the -> string : 1
that the string -> class : 1
string class can -> be : 1
can be only -> bytes : 1
be only bytes -> and : 1
only bytes and -> can : 1
bytes and can -> hold : 1
and can hold -> strings : 1
can hold strings -> of : 1
hold strings of -> characters : 1
strings of characters -> in : 1
of characters in -> length : 1
characters in length -> without : 1
in length without -> allocating : 1
length without allocating -> any : 1
without allocating any -> how : 1
allocating any how -> does : 1
any how does -> it : 1
how does it -> do : 1
does it do -> as : 1
it do as -> mentioned : 1
do as mentioned -> it : 1
as mentioned it -> is : 1
mentioned it is -> common : 1
it is common -> to : 2
is common to -> save : 1
is common to -> let : 1
common to save -> memory : 1
to save memory -> by : 1
save memory by -> using : 1
memory by using -> a : 1
memory by using -> our : 1
using a union -> with : 1
a union with -> two : 1
union with two -> different : 1
with two different -> one : 1
two different one -> for : 1
different one for -> the : 1
for the short -> mode : 1
the short mode -> and : 1
the short mode -> looks : 1
short mode and -> one : 1
mode and one -> for : 1
for the long -> there : 1
for the long -> mode : 1
for the long -> this : 1
the long there -> is : 1
long there is -> a : 1
is a lot -> of : 1
is a lot -> yet : 1
lot of cleverness -> in : 1
of cleverness in -> the : 1
cleverness in the -> real : 1
the real implementation -> to : 1
real implementation to -> make : 1
implementation to make -> the : 1
make the maximum -> use : 1
the maximum use -> of : 1
maximum use of -> the : 1
use of the -> bytes : 1
of the bytes -> that : 1
the bytes that -> are : 1
bytes that are -> the : 1
are the code -> here : 1
the code here -> is : 1
code here is -> simplified : 1
here is simplified -> for : 1
is simplified for -> the : 1
simplified for the -> purpose : 1
purpose of demonstrating -> the : 1
of demonstrating the -> the : 1
demonstrating the the -> layout : 1
the the layout -> for : 1
the layout for -> the : 1
layout for the -> long : 1
the long mode -> looks : 1
the long mode -> and : 1
long mode looks -> like : 1
mode looks like -> long : 1
looks like long -> member : 1
like long member -> in : 1
long member in -> the : 1
member in the -> long : 2
member in the -> short : 1
in the long -> layout : 1
in the long -> mode : 1
the long layout -> is : 1
long layout is -> bytes : 1
layout is bytes -> so : 1
is bytes so -> the : 1
bytes so the -> total : 1
so the total -> size : 1
total size is -> the : 1
is the pointer -> is : 1
pointer is a -> pointer : 1
dynamically allocated memory -> that : 1
allocated memory that -> will : 1
memory that will -> hold : 1
that will hold -> long : 1
will hold long -> the : 1
hold long the -> layout : 1
long the layout -> of : 1
the layout of -> the : 1
of the short -> mode : 1
short mode looks -> something : 1
mode looks something -> like : 1
looks something like -> short : 1
something like short -> unsigned : 1
like short unsigned -> char : 1
short unsigned char -> char : 1
unsigned char char -> the : 1
char char the -> short : 1
char the short -> there : 1
the short there -> is : 1
short there is -> no : 1
a variable for -> the : 2
variable for the -> since : 1
variable for the -> reference : 1
for the since -> it : 1
use a smaller -> type : 1
a smaller type -> for : 1
smaller type for -> the : 1
type for the -> data : 1
data member in -> this : 1
data member in -> the : 2
member in this -> since : 1
in this since -> we : 1
this since we -> know : 1
since we know -> that : 1
that the length -> of : 1
the string can -> only : 1
string can only -> range : 1
can only range -> from : 1
only range from -> to : 1
range from to -> if : 1
from to if -> it : 1
to if it -> is : 1
short the layouts -> are : 1
the layouts are -> combined : 1
layouts are combined -> using : 1
are combined using -> a : 1
combined using a -> short : 1
using a short -> long : 1
a short long -> is : 1
short long is -> one : 1
long is one -> piece : 1
is one piece -> how : 1
one piece how -> can : 1
piece how can -> the : 1
how can the -> string : 1
can the string -> class : 1
string class know -> whether : 1
class know whether -> it : 1
know whether it -> is : 1
is currently storing -> a : 1
currently storing a -> short : 1
storing a short -> string : 1
a short string -> or : 1
short string or -> a : 1
string or a -> long : 1
or a long -> a : 1
a long a -> flag : 1
long a flag -> is : 1
a flag is -> needed : 1
flag is needed -> to : 1
is needed to -> indicate : 1
needed to indicate -> but : 1
to indicate but -> where : 1
indicate but where -> is : 1
but where is -> it : 1
where is it -> it : 1
is it it -> turns : 1
it it turns -> out : 1
out that uses -> the : 1
that uses the -> least : 1
that uses the -> allocator : 1
uses the least -> significant : 1
the least significant -> bit : 2
least significant bit -> on : 2
significant bit on -> the : 2
bit on the -> data : 2
on the data -> member : 2
long mode and -> the : 1
mode and the -> least : 1
and the least -> significant : 1
in the short -> for : 1
in the short -> it : 1
the short for -> the : 1
short for the -> long : 1
the long this -> bit : 1
long this bit -> is : 1
this bit is -> redundant : 1
bit is redundant -> anyway : 1
is redundant anyway -> since : 1
redundant anyway since -> the : 1
anyway since the -> string : 1
since the string -> always : 1
the string always -> allocates : 1
string always allocates -> memory : 1
always allocates memory -> sizes : 1
allocates memory sizes -> that : 1
memory sizes that -> are : 1
sizes that are -> multiples : 1
multiples of in -> the : 1
the short it -> is : 1
short it is -> possible : 1
to use only -> bits : 1
use only bits -> for : 1
only bits for -> storing : 1
bits for storing -> the : 1
storing the size -> so : 1
the size so -> that : 1
size so that -> one : 1
so that one -> bit : 1
that one bit -> can : 1
one bit can -> be : 1
bit can be -> used : 1
for the it -> becomes : 1
the it becomes -> even : 1
it becomes even -> more : 2
becomes even more -> complicated : 1
becomes even more -> important : 1
even more complicated -> when : 1
more complicated when -> writing : 1
complicated when writing -> this : 1
when writing this -> code : 1
writing this code -> to : 1
this code to -> handle : 1
code to handle -> big : 1
to handle big -> endian : 1
handle big endian -> byte : 1
big endian byte -> since : 1
endian byte since -> the : 1
byte since the -> bit : 1
since the bit -> needs : 1
the bit needs -> to : 1
bit needs to -> be : 1
to be placed -> in : 1
be placed in -> memory : 1
in memory at -> the : 1
the same location -> regardless : 1
same location regardless -> of : 1
location regardless of -> whether : 1
regardless of whether -> we : 1
of whether we -> are : 1
of whether we -> should : 1
whether we are -> using : 1
using the short -> struct : 1
the short struct -> or : 1
short struct or -> the : 1
struct or the -> long : 1
or the long -> struct : 1
the long struct -> of : 1
long struct of -> the : 1
struct of the -> you : 1
of the you -> can : 1
you can look -> up : 1
can look up -> the : 1
look up the -> details : 1
up the details -> in : 1
the details in -> the : 1
details in the -> implementation : 1
in the implementation -> tricks : 1
the implementation tricks -> like : 1
implementation tricks like -> this : 1
tricks like this -> are : 1
like this are -> the : 1
this are the -> reason : 1
are the reason -> that : 1
are the reason -> for : 1
the reason that -> you : 1
reason that you -> should : 1
you should strive -> to : 1
should strive to -> use : 1
strive to use -> the : 1
use the efficient -> and : 1
the efficient and -> classes : 1
efficient and classes -> provided : 1
and classes provided -> by : 1
classes provided by -> the : 1
by the standard -> library : 1
by the standard -> the : 1
standard library before -> you : 1
library before you -> try : 1
before you try -> to : 1
you try to -> roll : 1
you try to -> create : 1
try to roll -> out : 1
to roll out -> your : 1
roll out your -> knowing : 1
out your knowing -> about : 1
your knowing about -> those : 1
knowing about those -> optimizations : 1
about those optimizations -> and : 1
those optimizations and -> how : 1
optimizations and how -> they : 1
they work is -> important : 1
work is important -> and : 1
is important and -> even : 1
important and even -> if : 1
and even if -> you : 1
if you never -> need : 1
you never need -> to : 1
to write one -> following : 1
write one following -> diagram : 1
one following diagram -> summarizes : 1
following diagram summarizes -> our : 1
diagram summarizes our -> simplified : 1
summarizes our simplified -> memory : 1
our simplified memory -> layout : 1
simplified memory layout -> of : 1
of the union -> used : 1
the union used -> by : 1
union used by -> an : 1
used by an -> efficient : 1
by an efficient -> implementation : 1
an efficient implementation -> of : 1
efficient implementation of -> the : 1
the small string -> cdpaligncenter : 1
small string cdpaligncenter -> union : 1
string cdpaligncenter union -> of : 1
cdpaligncenter union of -> the : 1
union of the -> two : 1
of the two -> different : 1
of the two -> cases : 1
of the two -> points : 1
of the two -> threads : 1
the two different -> layouts : 1
two different layouts -> used : 1
different layouts used -> for : 1
layouts used for -> handling : 1
used for handling -> short : 1
for handling short -> strings : 1
handling short strings -> and : 1
short strings and -> long : 1
strings and long -> memory : 1
and long memory -> have : 1
long memory have -> come : 1
memory have come -> a : 1
have come a -> long : 1
come a long -> way : 1
a long way -> in : 1
long way in -> this : 1
way in this -> chapter : 1
we have covered -> the : 1
have covered the -> basics : 1
basics of virtual -> the : 1
basics of virtual -> memory : 1
of virtual the -> stack : 1
virtual the stack -> and : 1
and the the -> and : 1
and the the -> the : 1
the the and -> memory : 1
the and memory -> and : 1
memory and alignment -> and : 1
and alignment and -> but : 1
alignment and but -> before : 1
and but before -> we : 1
but before we -> close : 1
before we close -> this : 1
we close this -> we : 1
close this we -> are : 1
going to show -> how : 1
going to show -> an : 1
to show how -> to : 1
to show how -> it : 1
show how to -> customize : 1
how to customize -> the : 1
to customize the -> memory : 1
to customize the -> standard : 1
customize the memory -> management : 1
memory management in -> we : 1
memory management in -> your : 1
management in we -> will : 1
how the parts -> that : 1
parts that we -> went : 1
that we went -> through : 1
we went through -> earlier : 1
went through earlier -> in : 1
through earlier in -> this : 1
earlier in this -> chapter : 2
earlier in this -> line : 1
earlier in this -> if : 1
chapter will come -> in : 1
will come in -> handy : 1
come in handy -> when : 1
in handy when -> writing : 1
handy when writing -> a : 1
when writing a -> custom : 1
when writing a -> we : 1
writing a custom -> memory : 1
writing a custom -> allocator : 1
a custom memory -> what : 1
a custom memory -> manager : 5
a custom memory -> here : 1
custom memory what -> is : 1
memory what is -> a : 1
what is a -> custom : 1
is a custom -> memory : 1
custom memory manager -> and : 1
custom memory manager -> can : 1
custom memory manager -> that : 1
custom memory manager -> usually : 1
custom memory manager -> compared : 1
custom memory manager -> with : 1
custom memory manager -> being : 1
memory manager and -> why : 1
manager and why -> do : 1
and why do -> we : 1
why do we -> need : 1
do we need -> using : 1
we need using -> or : 1
need using or -> allocate : 1
using or allocate -> we : 1
or allocate we -> use : 1
allocate we use -> the : 1
use the memory -> management : 1
use the memory -> order : 1
memory management system -> in : 1
management system in -> most : 1
system in most -> implementations : 1
in most implementations -> of : 1
most implementations of -> use : 1
implementations of use -> which : 1
of use which -> is : 1
use which is -> a : 1
is a memory -> in : 1
a memory in -> other : 1
memory in other -> designing : 1
in other designing -> and : 1
other designing and -> building : 1
designing and building -> a : 1
and building a -> memory : 1
building a memory -> manager : 1
a memory manager -> is : 1
memory manager is -> a : 1
manager is a -> complicated : 1
is a complicated -> task : 1
a complicated task -> and : 1
complicated task and -> there : 1
task and there -> are : 1
are many people -> who : 1
many people who -> have : 1
people who have -> already : 1
who have already -> spent : 1
have already spent -> a : 1
already spent a -> lot : 1
of time researching -> this : 1
time researching this -> there : 1
researching this there -> are : 1
this there are -> why : 1
there are why -> you : 1
are why you -> might : 1
why you might -> want : 1
you might want -> to : 1
might want to -> write : 1
write a custom -> memory : 2
custom memory here -> are : 1
memory here are -> some : 1
are some and -> we : 1
some and we -> have : 1
have already done -> this : 1
already done this -> a : 1
done this a -> couple : 1
this a couple -> of : 1
couple of times -> in : 1
of times in -> this : 1
times in this -> chapter : 1
chapter by overloading -> and : 1
overloading and just -> to : 1
and just to -> print : 1
just to print -> out : 1
print out some -> debugging : 1
out some debugging -> a : 1
some debugging a -> custom : 1
debugging a custom -> memory : 1
memory manager can -> provide : 1
manager can provide -> a : 1
can provide a -> sandbox : 1
can provide a -> memory : 1
provide a sandbox -> for : 1
a sandbox for -> code : 1
sandbox for code -> that : 1
code that allowed -> to : 1
that allowed to -> allocate : 1
allowed to allocate -> unrestricted : 1
to allocate unrestricted -> the : 1
allocate unrestricted the -> sandbox : 1
unrestricted the sandbox -> can : 1
the sandbox can -> also : 1
sandbox can also -> track : 1
can also track -> memory : 1
also track memory -> allocations : 1
track memory allocations -> and : 1
memory allocations and -> release : 1
allocations and release -> memory : 1
release memory when -> the : 1
when the sandboxed -> code : 1
the sandboxed code -> finishes : 1
sandboxed code finishes -> if : 1
code finishes if -> we : 1
finishes if we -> need : 1
if we need -> dynamic : 1
if we need -> the : 1
we need dynamic -> memory : 1
need dynamic memory -> and : 1
memory and avoid -> we : 1
and avoid we -> may : 1
avoid we may -> have : 1
memory manager that -> performs : 1
memory manager that -> comes : 1
manager that performs -> better : 1
that performs better -> for : 1
performs better for -> our : 1
better for our -> specific : 1
for our specific -> later : 1
our specific later -> we : 1
specific later we -> will : 1
will cover some -> of : 1
cover some of -> the : 1
of the circumstances -> that : 1
the circumstances that -> we : 1
circumstances that we -> could : 1
we could utilize -> to : 1
could utilize to -> outperform : 1
utilize to outperform -> that : 1
to outperform that -> many : 1
outperform that many -> experienced : 1
that many experienced -> programmers : 1
many experienced programmers -> have : 1
experienced programmers have -> never : 1
programmers have never -> faced : 1
have never faced -> a : 1
never faced a -> problem : 1
faced a problem -> that : 1
a problem that -> actually : 1
problem that actually -> required : 1
that actually required -> them : 1
actually required them -> to : 1
required them to -> customize : 1
them to customize -> the : 1
customize the standard -> memory : 1
the standard memory -> manager : 1
standard memory manager -> that : 1
manager that comes -> with : 1
that comes with -> the : 2
comes with the -> this : 1
comes with the -> preceding : 1
with the this -> is : 1
a good indication -> of : 1
good indication of -> how : 1
indication of how -> well : 1
of how well -> the : 1
of how well -> an : 1
how well the -> memory : 1
well the memory -> managers : 1
the memory managers -> actually : 1
memory managers actually -> are : 1
managers actually are -> despite : 1
actually are despite -> all : 1
are despite all -> the : 1
despite all the -> requirements : 1
all the requirements -> they : 1
the requirements they -> have : 1
requirements they have -> to : 1
they have to -> fulfill : 1
have to fulfill -> without : 1
to fulfill without -> any : 1
fulfill without any -> knowledge : 1
without any knowledge -> about : 1
any knowledge about -> our : 1
knowledge about our -> specific : 1
about our specific -> use : 1
our specific use -> the : 1
specific use the -> more : 1
use the more -> we : 1
the more we -> know : 1
more we know -> about : 1
the memory usage -> patterns : 1
memory usage patterns -> in : 2
memory usage patterns -> and : 1
usage patterns in -> our : 1
usage patterns in -> order : 1
patterns in our -> the : 1
our the better -> the : 1
the better the -> chances : 1
better the chances -> are : 1
chances are that -> we : 1
are that we -> can : 1
we can actually -> write : 1
can actually write -> something : 1
actually write something -> more : 1
write something more -> efficient : 1
something more efficient -> than : 1
efficient than remember -> the : 1
than remember the -> for : 1
remember the for -> allocating : 1
the for allocating -> and : 1
deallocating memory from -> the : 1
stack is very -> fast : 1
is very fast -> compared : 1
very fast compared -> to : 1
fast compared to -> the : 1
to the thanks -> to : 1
the thanks to -> the : 1
fact that it -> need : 1
that it need -> to : 1
it need to -> handle : 1
need to handle -> multiple : 1
to handle multiple -> threads : 1
handle multiple threads -> and : 1
multiple threads and -> that : 1
threads and that -> allocations : 1
and that allocations -> and : 1
that allocations and -> deallocations : 1
and deallocations are -> guaranteed : 1
deallocations are guaranteed -> to : 1
to always happen -> in : 1
always happen in -> the : 1
happen in the -> reverse : 1
the reverse a -> custom : 1
reverse a custom -> memory : 1
memory manager usually -> starts : 1
manager usually starts -> with : 1
usually starts with -> analyzing : 1
starts with analyzing -> the : 1
with analyzing the -> exact : 1
analyzing the exact -> memory : 1
the exact memory -> usage : 1
exact memory usage -> patterns : 1
usage patterns and -> then : 1
patterns and then -> implementing : 1
and then implementing -> an : 1
then implementing an -> an : 1
implementing an an -> frequently : 1
an an frequently -> used : 1
an frequently used -> terms : 1
frequently used terms -> when : 1
used terms when -> working : 1
terms when working -> with : 1
working with memory -> allocators : 1
with memory allocators -> are : 1
memory allocators are -> and : 1
allocators are and -> we : 1
are and we -> will : 1
will not distinguish -> between : 1
not distinguish between -> these : 1
distinguish between these -> terms : 1
between these terms -> in : 1
these terms in -> this : 1
terms in this -> by : 1
in this by -> we : 1
this by we -> mean : 1
we mean a -> block : 1
mean a block -> of : 1
block of contiguous -> memory : 1
of contiguous memory -> including : 1
contiguous memory including -> a : 1
memory including a -> strategy : 1
including a strategy -> for : 1
a strategy for -> handing : 1
strategy for handing -> out : 1
for handing out -> parts : 1
handing out parts -> of : 1
out parts of -> that : 1
of that memory -> and : 1
that memory and -> reclaiming : 1
memory and reclaiming -> it : 1
and reclaiming it -> later : 1
reclaiming it later -> this : 1
it later this -> could : 1
later this could -> technically : 1
this could technically -> also : 1
could technically also -> be : 1
technically also be -> called : 1
also be called -> an : 1
be called an -> but : 1
called an but -> we : 1
an but we -> will : 1
will use that -> term : 1
use that term -> to : 1
that term to -> refer : 1
term to refer -> to : 1
refer to allocators -> used : 1
to allocators used -> by : 1
allocators used by -> the : 1
standard the custom -> allocator : 1
the custom allocator -> we : 1
custom allocator we -> will : 1
allocator we will -> develop : 1
we will develop -> later : 1
will develop later -> will : 1
develop later will -> be : 1
later will be -> implemented : 1
will be implemented -> using : 1
be implemented using -> the : 2
be implemented using -> a : 1
implemented using the -> arena : 1
implemented using the -> gpu : 1
using the arena -> we : 1
using the arena -> may : 1
the arena we -> create : 1
arena we create -> are : 1
we create are -> some : 1
create are some -> general : 1
are some general -> strategies : 1
some general strategies -> that : 1
general strategies that -> can : 1
strategies that can -> be : 1
used when designing -> an : 1
when designing an -> arena : 1
designing an arena -> that : 1
an arena that -> will : 1
arena that will -> make : 1
that will make -> allocations : 1
will make allocations -> and : 1
make allocations and -> deallocations : 1
and deallocations likely -> to : 1
deallocations likely to -> perform : 1
likely to perform -> better : 1
to perform better -> than : 1
perform better than -> if : 1
better than if -> we : 1
than if we -> know : 1
that an arena -> will : 1
an arena will -> only : 1
arena will only -> be : 1
will only be -> used : 1
be used from -> one : 1
be used from -> multiple : 1
used from one -> there : 1
from one there -> is : 1
one there is -> no : 1
need to protect -> data : 1
to protect data -> with : 1
protect data with -> synchronization : 1
data with synchronization -> such : 1
with synchronization such -> as : 1
synchronization such as -> locks : 1
such as locks -> or : 1
as locks or -> there : 1
locks or there -> is : 1
or there is -> no : 1
is no risk -> that : 1
is no risk -> of : 2
no risk that -> the : 1
risk that the -> client : 1
that the client -> using : 1
the client using -> the : 1
client using the -> arena : 1
the arena may -> be : 1
arena may be -> blocked : 1
may be blocked -> by : 1
be blocked by -> some : 1
blocked by some -> other : 1
by some other -> which : 1
some other which -> is : 1
other which is -> important : 1
which is important -> in : 1
is important in -> if : 1
important in if -> the : 1
if the arena -> only : 1
the arena only -> hands : 1
arena only hands -> out : 1
only hands out -> memory : 1
hands out memory -> blocks : 1
out memory blocks -> of : 1
memory blocks of -> fixed : 1
blocks of fixed -> it : 1
of fixed it -> is : 1
fixed it is -> relatively : 1
it is relatively -> easy : 1
is relatively easy -> to : 1
relatively easy to -> reclaim : 1
easy to reclaim -> memory : 1
to reclaim memory -> efficiently : 1
reclaim memory efficiently -> without : 1
memory efficiently without -> memory : 1
efficiently without memory -> fragmentation : 1
without memory fragmentation -> by : 1
memory fragmentation by -> using : 1
fragmentation by using -> a : 1
using a free -> if : 1
a free if -> you : 1
free if you -> know : 1
know that objects -> allocated : 1
that objects allocated -> from : 1
objects allocated from -> an : 1
allocated from an -> arena : 1
from an arena -> only : 1
an arena only -> need : 1
arena only need -> to : 1
only need to -> live : 1
only need to -> compare : 1
need to live -> during : 1
to live during -> a : 1
live during a -> limited : 1
during a limited -> and : 1
a limited and -> the : 1
limited and the -> arena : 1
and the arena -> can : 1
the arena can -> postpone : 1
arena can postpone -> the : 1
can postpone the -> reclamation : 1
postpone the reclamation -> and : 1
the reclamation and -> free : 1
reclamation and free -> the : 1
the memory all -> at : 1
memory all at -> an : 1
all at an -> example : 1
at an example -> could : 1
at an example -> of : 1
at an example -> code : 1
could be objects -> created : 1
be objects created -> while : 1
objects created while -> handling : 1
created while handling -> a : 1
while handling a -> request : 1
handling a request -> in : 1
a request in -> a : 1
request in a -> server : 1
in a server -> when : 1
a server when -> the : 1
server when the -> request : 1
when the request -> has : 1
the request has -> all : 1
request has all -> the : 1
memory that was -> handed : 1
that was handed -> out : 1
was handed out -> during : 1
handed out during -> the : 1
out during the -> request : 1
during the request -> can : 1
during the request -> without : 1
the request can -> be : 1
request can be -> reclaimed : 1
can be reclaimed -> in : 1
be reclaimed in -> one : 1
reclaimed in one -> of : 1
of the arena -> needs : 1
the arena needs -> to : 1
arena needs to -> be : 1
to be big -> enough : 1
be big enough -> to : 1
big enough to -> handle : 1
enough to handle -> all : 1
to handle all -> the : 1
handle all the -> allocations : 1
all the allocations -> during : 1
the allocations during -> the : 1
allocations during the -> request : 1
the request without -> reclaiming : 1
request without reclaiming -> memory : 1
without reclaiming memory -> this : 1
reclaiming memory this -> strategy : 1
memory this strategy -> will : 1
this strategy will -> not : 1
strategy will not -> will : 1
will not will -> not : 1
not will not -> go : 1
will not go -> into : 1
not go into -> further : 1
go into further -> details : 1
into further details -> about : 1
further details about -> these : 1
details about these -> but : 1
about these but -> it : 1
these but it -> is : 1
but it is -> good : 1
but it is -> also : 1
but it is -> probably : 1
but it is -> likely : 1
it is good -> to : 1
is good to -> be : 1
good to be -> aware : 1
of the possibilities -> when : 1
the possibilities when -> looking : 1
possibilities when looking -> for : 1
when looking for -> ways : 1
looking for ways -> to : 1
for ways to -> improve : 1
to improve memory -> management : 1
improve memory management -> in : 1
management in your -> as : 1
in your as -> is : 1
your as is -> often : 1
as is often -> the : 1
is often the -> case : 1
often the case -> with : 1
case with optimizing -> the : 1
with optimizing the -> key : 1
optimizing the key -> is : 1
the key is -> to : 1
key is to -> understand : 1
is to understand -> the : 1
understand the circumstances -> under : 1
the circumstances under -> which : 1
circumstances under which -> your : 1
under which your -> program : 1
which your program -> will : 1
your program will -> run : 1
program will run -> and : 1
will run and -> to : 1
run and to -> analyze : 1
and to analyze -> the : 1
analyze the specific -> memory : 1
the specific memory -> usage : 1
specific memory usage -> patterns : 1
patterns in order -> to : 2
to find ways -> to : 1
find ways to -> improve : 1
to improve a -> custom : 1
improve a custom -> memory : 1
memory manager compared -> to : 1
manager compared to -> a : 1
a simple arena -> class : 1
simple arena class -> which : 1
arena class which -> can : 1
used for small -> or : 1
for small or -> few : 1
small or few -> objects : 1
or few objects -> that : 1
few objects that -> need : 1
objects that need -> dynamic : 1
objects that need -> the : 1
that need dynamic -> storage : 1
need dynamic storage -> but : 1
dynamic storage but -> where : 1
storage but where -> the : 1
but where the -> memory : 1
where the memory -> it : 1
the memory it -> needs : 1
it needs usually -> is : 1
needs usually is -> so : 1
usually is so -> small : 1
is so small -> that : 1
so small that -> it : 1
small that it -> can : 1
be placed on -> the : 1
placed on the -> this : 1
the this code -> is : 1
code is based -> on : 1
is based on -> howard : 1
is based on -> small : 1
based on howard -> published : 1
on howard published -> in : 1
howard published in -> the : 1
published in the -> this : 1
a great place -> to : 1
great place to -> start : 1
place to start -> if : 1
to start if -> you : 1
start if you -> want : 1
want to dig -> deeper : 1
to dig deeper -> into : 1
deeper into custom -> memory : 1
into custom memory -> we : 1
custom memory we -> think : 1
memory we think -> it : 1
a good example -> for : 1
good example for -> demonstration : 1
example for demonstration -> purposes : 1
for demonstration purposes -> because : 1
demonstration purposes because -> it : 1
purposes because it -> can : 1
because it can -> handle : 1
it can handle -> multiple : 1
can handle multiple -> sized : 1
handle multiple sized -> which : 1
multiple sized which -> require : 1
sized which require -> proper : 1
which require proper -> handling : 1
require proper handling -> of : 1
proper handling of -> but : 1
handling of but -> keep : 1
of but keep -> in : 1
but keep in -> mind : 1
keep in mind -> that : 1
mind that this -> is : 1
simplified version for -> demonstrating : 1
version for demonstrating -> the : 1
for demonstrating the -> concept : 1
demonstrating the concept -> rather : 1
the concept rather -> than : 1
you with class -> arena : 1
with class arena -> static : 1
class arena static -> constexpr : 1
arena static constexpr -> alignment : 1
static constexpr alignment -> noexcept : 1
constexpr alignment noexcept -> auto : 1
alignment noexcept auto -> noexcept : 1
auto noexcept static -> constexpr : 1
auto noexcept static -> auto : 1
noexcept static constexpr -> auto : 1
static constexpr auto -> noexcept : 1
constexpr auto noexcept -> return : 1
auto noexcept return -> auto : 2
noexcept return auto -> const : 3
noexcept return auto -> auto : 1
auto const noexcept -> return : 5
auto const noexcept -> bool : 1
auto const noexcept -> auto : 1
const noexcept return -> auto : 2
const noexcept return -> template : 2
const noexcept return -> n : 1
return auto auto -> noexcept : 1
return auto auto -> a : 1
return auto auto -> n : 2
return auto auto -> return : 1
auto auto noexcept -> static : 1
noexcept static auto -> noexcept : 1
static auto noexcept -> return : 1
const noexcept bool -> return : 1
noexcept bool return -> p : 1
bool return p -> p : 1
return p p -> char : 1
p p char -> arena : 1
p char arena -> contains : 1
char arena contains -> a : 1
arena contains a -> whose : 1
contains a whose -> size : 1
a whose size -> is : 1
whose size is -> determined : 1
size is determined -> at : 1
is determined at -> compile : 1
determined at compile -> this : 1
at compile this -> makes : 1
at compile this -> compiles : 1
at compile this -> chapter : 1
compile this makes -> it : 1
to create an -> arena : 1
to create an -> interpolate : 1
to create an -> infix : 1
to create an -> atomic : 1
to create an -> element : 1
to create an -> opencl : 1
create an arena -> object : 1
an arena object -> on : 1
arena object on -> the : 1
the stack or -> as : 1
stack or as -> a : 1
or as a -> variable : 1
variable with static -> or : 1
with static or -> thread : 1
static or thread -> local : 1
or thread local -> storage : 1
thread local storage -> the : 1
local storage the -> alignment : 1
storage the alignment -> of : 1
memory that this -> version : 1
that this version -> will : 1
this version will -> hand : 1
version will hand -> out : 1
will hand out -> will : 1
hand out will -> be : 1
out will be -> the : 1
be the same -> as : 1
same as when -> using : 1
as when using -> for : 1
when using for -> any : 1
using for any -> this : 1
for any this -> is : 1
any this is -> a : 1
any this is -> one : 1
is a bit -> wasteful : 1
a bit wasteful -> if : 1
bit wasteful if -> we : 1
wasteful if we -> use : 1
use the arena -> for : 1
the arena for -> small : 1
arena for small -> types : 1
for small types -> with : 1
small types with -> smaller : 1
types with smaller -> alignment : 1
with smaller alignment -> but : 1
smaller alignment but -> we : 1
alignment but we -> ignore : 1
but we ignore -> this : 1
we ignore this -> the : 1
ignore this the -> buffer : 1
this the buffer -> is : 1
the buffer is -> a : 1
buffer is a -> array : 1
is a array -> that : 1
a array that -> might : 1
array that might -> be : 1
might be allocated -> on : 1
on the there -> is : 1
is no guarantee -> that : 2
is no guarantee -> even : 1
no guarantee that -> it : 1
no guarantee that -> the : 1
guarantee that it -> will : 1
be aligned types -> other : 1
aligned types other -> than : 1
types other than -> char : 1
other than char -> unless : 1
than char unless -> we : 1
char unless we -> apply : 1
unless we apply -> the : 1
we apply the -> specifier : 1
we apply the -> number : 1
apply the specifier -> to : 1
the specifier to -> the : 1
specifier to the -> the : 1
the the look -> complicated : 1
the look complicated -> if : 1
look complicated if -> you : 1
complicated if you -> are : 1
are not used -> to : 1
not used to -> bitwise : 1
used to bitwise -> it : 1
to bitwise it -> basically : 1
bitwise it basically -> just : 1
it basically just -> rounds : 1
basically just rounds -> up : 1
just rounds up -> to : 1
rounds up to -> the : 1
to the alignment -> requirement : 1
requirement that we -> reclaiming : 1
that we reclaiming -> we : 1
we reclaiming we -> need : 1
reclaiming we need -> to : 1
to know whether -> the : 1
know whether the -> pointer : 1
whether the pointer -> we : 1
whether the pointer -> to : 1
the pointer we -> are : 1
pointer we are -> asked : 1
we are asked -> to : 1
are asked to -> reclaim : 1
asked to reclaim -> actually : 1
to reclaim actually -> belongs : 1
reclaim actually belongs -> to : 1
actually belongs to -> our : 1
belongs to our -> this : 1
to our this -> by : 1
our this by -> comparing : 1
this by comparing -> a : 1
by comparing a -> pointer : 1
comparing a pointer -> address : 1
a pointer address -> with : 1
pointer address with -> the : 1
address with the -> address : 1
with the address -> we : 1
the address we -> need : 1
address we need -> the : 1
we need the -> implementation : 1
we need the -> number : 1
we need the -> actual : 1
we need the -> overload : 1
need the implementation -> of : 1
implementation of allocate -> and : 1
of allocate and -> auto : 1
allocate and auto -> const : 1
and auto const -> auto : 1
const auto n -> if : 2
const auto n -> auto : 1
auto n if -> r : 1
auto n if -> const : 1
auto n if -> return : 1
auto n if -> if : 1
n if r -> return : 1
if r return -> return : 1
r return return -> returns : 1
r return return -> cdpaligncenter : 1
return return returns -> a : 1
return returns a -> pointer : 1
returns a pointer -> to : 1
to a correctly -> aligned : 1
a correctly aligned -> memory : 1
correctly aligned memory -> with : 1
aligned memory with -> the : 1
with the specified -> if : 1
the specified if -> there : 1
specified if there -> is : 1
is no available -> space : 1
no available space -> in : 1
available space in -> the : 1
space in the -> buffer : 1
in the buffer -> for : 1
the buffer for -> the : 1
buffer for the -> requested : 1
for the requested -> it : 1
the requested it -> will : 1
requested it will -> fall : 1
it will fall -> back : 1
will fall back -> to : 1
fall back to -> using : 1
back to using -> following : 1
to using following -> function : 1
using following function -> first : 1
following function first -> checks : 1
function first checks -> whether : 1
first checks whether -> the : 1
the pointer to -> the : 1
to the memory -> to : 1
to the memory -> should : 1
the memory to -> be : 2
memory to be -> deallocated : 2
to be deallocated -> is : 2
be deallocated is -> from : 1
be deallocated is -> the : 1
deallocated is from -> the : 1
is from the -> buffer : 1
from the buffer -> or : 1
from the buffer -> reclaim : 1
the buffer or -> whether : 1
buffer or whether -> it : 1
whether it has -> been : 1
been allocated with -> if : 1
allocated with if -> it : 1
with if it -> is : 1
is not from -> the : 1
not from the -> we : 1
we simply delete -> it : 1
simply delete it -> with : 1
delete it with -> we : 1
it with we -> check : 1
with we check -> whether : 1
we check whether -> the : 1
check whether the -> memory : 1
deallocated is the -> last : 1
is the last -> memory : 1
the last memory -> we : 1
last memory we -> handed : 1
memory we handed -> out : 1
we handed out -> from : 1
handed out from -> the : 1
out from the -> buffer : 1
out from the -> critical : 1
out from the -> cpu : 1
the buffer reclaim -> it : 1
buffer reclaim it -> by : 1
reclaim it by -> moving : 1
it by moving -> the : 1
by moving the -> current : 1
moving the current -> just : 1
the current just -> as : 1
current just as -> a : 1
just as a -> stack : 1
as a stack -> would : 1
a stack would -> we : 1
stack would we -> simply : 1
would we simply -> ignore : 1
we simply ignore -> other : 1
simply ignore other -> attempts : 1
ignore other attempts -> to : 1
other attempts to -> reclaim : 1
attempts to reclaim -> the : 1
to reclaim the -> auto : 1
reclaim the auto -> noexcept : 1
the auto noexcept -> void : 1
auto noexcept void -> if : 1
auto noexcept void -> template : 1
noexcept void if -> n : 1
void if n -> if : 1
if n if -> n : 1
n if n -> else : 1
if n else -> about : 1
n else about -> our : 1
else about our -> arena : 1
about our arena -> is : 1
our arena is -> now : 1
our arena is -> to : 1
arena is now -> ready : 1
is now ready -> to : 1
now ready to -> be : 1
ready to be -> use : 1
ready to be -> the : 1
to be use -> it : 1
be use it -> when : 1
use it when -> allocating : 1
it when allocating -> class : 1
when allocating class -> user : 1
allocating class user -> auto : 1
class user auto -> operator : 1
user auto operator -> return : 1
operator void auto -> operator : 1
void auto operator -> return : 1
operator void int -> auto : 1
void int auto -> int : 1
void int auto -> auto : 1
int auto int -> no : 1
int auto int -> auto : 1
auto int no -> dynamic : 1
int no dynamic -> memory : 1
is allocated when -> we : 1
allocated when we -> create : 1
we create the -> auto : 1
create the auto -> new : 1
the auto new -> delete : 1
auto new delete -> auto : 1
new delete auto -> users : 1
new delete auto -> return : 1
delete auto users -> new : 1
auto users new -> delete : 1
users new delete -> auto : 1
delete auto return -> custom : 1
auto return custom -> memory : 1
return custom memory -> trying : 1
custom memory trying -> our : 1
memory trying our -> custom : 1
trying our custom -> memory : 1
our custom memory -> manager : 2
our custom memory -> is : 1
memory manager with -> a : 1
manager with a -> specific : 1
a specific it -> worked : 1
a specific it -> will : 1
specific it worked -> there : 1
it worked there -> is : 1
worked there is -> a : 1
a it turns -> out : 1
out that the -> is : 1
that the is -> not : 1
the is not -> called : 1
is not called -> on : 1
not called on -> all : 1
called on all -> the : 1
on all the -> occasions : 1
all the occasions -> that : 1
the occasions that -> we : 1
occasions that we -> first : 1
that we first -> might : 1
we first might -> have : 1
first might have -> consider : 1
might have consider -> the : 1
have consider the -> following : 1
consider the following -> user : 1
consider the following -> we : 1
consider the following -> thread : 1
the following user -> happens : 1
following user happens -> when : 1
user happens when -> we : 1
want to have -> of : 1
to have of -> users : 1
have of users -> neither : 1
of users neither -> of : 1
users neither of -> the : 1
neither of the -> two : 1
the two cases -> is : 1
two cases is -> our : 1
cases is our -> custom : 1
is our custom -> memory : 1
memory manager being -> starting : 1
manager being starting -> with : 1
being starting with -> the : 1
starting with the -> shared : 1
starting with the -> basics : 1
with the shared -> we : 1
the shared we -> have : 1
shared we have -> to : 1
have to go -> back : 1
the example earlier -> where : 1
example earlier where -> we : 1
earlier where we -> saw : 1
where we saw -> that : 1
saw that allocates -> memory : 1
that allocates memory -> for : 1
allocates memory for -> both : 1
memory for both -> reference : 1
for both reference -> counting : 1
both reference counting -> data : 1
reference counting data -> and : 1
counting data and -> the : 1
data and the -> object : 1
object it should -> point : 1
it should point -> there : 1
should point there -> is : 1
point there is -> no : 1
point there is -> a : 1
is no way -> that : 1
is no way -> to : 3
is no way -> for : 1
is no way -> a : 1
no way that -> use : 1
way that use -> an : 1
that use an -> expression : 1
use an expression -> such : 1
an expression such -> as : 1
expression such as -> to : 1
such as to -> create : 1
as to create -> the : 1
to create the -> user : 1
to create the -> promise : 1
create the user -> object : 1
the user object -> and : 1
the user object -> using : 1
user object and -> the : 1
object and the -> counter : 1
object and the -> control : 1
and the counter -> with : 1
the counter with -> only : 1
counter with only -> one : 1
with only one -> it : 1
with only one -> thereby : 1
only one it -> allocates : 1
one it allocates -> memory : 1
it allocates memory -> and : 1
it allocates memory -> that : 1
memory and constructs -> the : 1
and constructs the -> user : 1
constructs the user -> object : 1
user object using -> placement : 1
object using placement -> is : 1
placement is it -> construct : 1
is it construct -> objects : 1
it construct objects -> by : 1
construct objects by -> default : 1
objects by default -> in : 1
default in an -> array : 1
in an array -> when : 1
in an array -> can : 1
an array when -> we : 1
array when we -> call : 1
call this would -> have : 1
this would have -> required : 1
this would have -> been : 1
would have required -> a : 1
have required a -> default : 1
required a default -> constructor : 1
a default constructor -> for : 1
default constructor for -> all : 1
constructor for all -> the : 1
for all the -> classes : 1
for all the -> scalar : 1
all the classes -> to : 1
the classes to -> be : 1
classes to be -> used : 1
used with the -> it : 1
used with the -> index : 1
with the it -> allocates : 1
allocates memory that -> can : 1
memory that can -> be : 1
used for holding -> user : 1
for holding user -> objects : 1
holding user objects -> when : 1
user objects when -> they : 1
they are being -> placement : 1
are being placement -> new : 1
being placement new -> is : 1
placement new is -> the : 1
new is the -> tool : 1
is the tool -> for : 1
the tool for -> making : 1
tool for making -> this : 1
for making this -> we : 1
making this we -> can : 1
we can provide -> a : 1
provide a memory -> to : 1
a memory to -> both : 1
memory to both -> and : 1
to both and -> order : 1
both and order -> to : 1
order to have -> them : 1
to have them -> use : 1
have them use -> our : 1
them use our -> custom : 1
use our custom -> memory : 1
custom memory is -> true : 1
memory is true -> for : 1
is true for -> the : 1
true for the -> rest : 1
for the rest -> of : 1
of the containers -> in : 1
containers in the -> standard : 1
standard library as -> if : 1
library as if -> we : 1
if we supply -> a : 1
we supply a -> custom : 1
supply a custom -> the : 1
a custom the -> containers : 1
custom the containers -> will : 1
the containers will -> use : 1
containers will use -> the : 1
use the default -> what : 1
use the default -> memory : 1
the default what -> we : 1
default what we -> need : 1
we need in -> order : 1
need in order -> to : 1
to use our -> arena : 1
to use our -> main : 1
use our arena -> is : 1
use our arena -> as : 1
arena is to -> write : 1
is to write -> an : 1
write an allocator -> that : 1
an allocator that -> can : 1
by the allocators -> have : 1
the allocators have -> been : 1
allocators have been -> a : 1
been a hot -> and : 1
a hot and -> topic : 1
hot and topic -> for : 1
and topic for -> a : 1
topic for a -> long : 1
long time in -> the : 1
time in the -> many : 1
time in the -> range : 1
in the many -> custom : 1
the many custom -> containers : 1
many custom containers -> have : 1
custom containers have -> been : 1
containers have been -> implemented : 1
have been implemented -> to : 1
been implemented to -> control : 1
implemented to control -> how : 1
to control how -> memory : 1
control how memory -> managed : 1
how memory managed -> instead : 1
memory managed instead -> of : 1
managed instead of -> using : 1
using the standard -> containers : 1
the standard containers -> with : 1
the standard containers -> in : 1
standard containers with -> custom : 1
containers with custom -> probably : 1
with custom probably -> for : 1
custom probably for -> good : 1
probably for good -> the : 1
for good the -> support : 1
good the support -> and : 1
the support and -> requirements : 1
support and requirements -> for : 1
and requirements for -> writing : 1
requirements for writing -> a : 1
for writing a -> custom : 1
a custom allocator -> has : 1
a custom allocator -> use : 1
a custom allocator -> that : 1
custom allocator has -> been : 1
allocator has been -> improved : 1
has been improved -> in : 1
been improved in -> and : 1
improved in and -> it : 1
in and it -> is : 1
now a lot -> better : 1
a lot better -> than : 1
lot better than -> it : 1
better than it -> used : 1
than it used -> to : 1
it used to -> we : 1
used to we -> will : 1
to we will -> only : 1
we will only -> focus : 2
we will only -> use : 1
will only focus -> on : 1
will only focus -> is : 1
only focus on -> allocators : 1
focus on allocators -> from : 1
on allocators from -> and : 1
allocators from and -> minimal : 1
from and minimal -> allocator : 1
and minimal allocator -> in : 1
minimal allocator in -> now : 1
allocator in now -> looks : 1
in now looks -> like : 1
looks like struct -> alloc : 1
like struct alloc -> using : 1
struct alloc using -> auto : 1
alloc using auto -> const : 1
using auto const -> noexcept : 1
const noexcept auto -> const : 1
noexcept auto const -> auto : 1
auto const really -> not : 1
const really not -> that : 1
really not that -> much : 1
not that much -> code : 1
that much code -> thanks : 1
much code thanks -> to : 1
code thanks to -> the : 1
to the improvements -> in : 1
the improvements in -> the : 1
improvements in the -> container : 1
the container that -> uses : 1
container that uses -> the : 1
container that uses -> a : 1
uses the allocator -> actually : 1
the allocator actually -> uses : 1
allocator actually uses -> which : 1
actually uses which -> provides : 1
uses which provides -> reasonable : 1
which provides reasonable -> defaults : 1
provides reasonable defaults -> if : 1
reasonable defaults if -> the : 1
defaults if the -> allocator : 1
if the allocator -> omits : 1
the allocator omits -> i : 1
allocator omits i -> recommend : 1
omits i recommend -> you : 1
i recommend you -> have : 1
recommend you have -> a : 1
at the to -> see : 1
the to see -> what : 1
to see what -> traits : 1
see what traits -> can : 1
what traits can -> be : 1
traits can be -> configured : 1
can be configured -> and : 1
be configured and -> what : 1
configured and what -> the : 1
what the defaults -> using : 1
the defaults using -> we : 1
defaults using we -> could : 1
using we could -> quite : 1
we could quite -> easily : 1
could quite easily -> implement : 1
quite easily implement -> a : 1
easily implement a -> minimal : 1
implement a minimal -> custom : 1
a minimal custom -> we : 1
a minimal custom -> allocator : 1
minimal custom we -> will : 1
custom we will -> show : 1
we will show -> the : 1
we will show -> you : 1
will show the -> old : 1
show the old -> and : 1
the old and -> famous : 1
old and famous -> first : 1
and famous first -> published : 1
famous first published -> in : 1
first published in -> a : 1
published in a -> blog : 1
in a blog -> post : 1
a blog post -> by : 1
blog post by -> to : 1
post by to -> demonstrate : 1
by to demonstrate -> how : 1
to demonstrate how -> to : 1
demonstrate how to -> write : 1
demonstrate how to -> use : 1
demonstrate how to -> extend : 1
how to write -> a : 1
how to write -> concurrent : 1
write a minimal -> custom : 1
minimal custom allocator -> using : 1
custom allocator using -> since : 1
allocator using since -> it : 1
using since it -> has : 1
since it has -> been : 1
has been updated -> for : 1
been updated for -> to : 1
updated for to -> make : 1
for to make -> it : 1
it even here -> is : 1
even here is -> how : 1
how it struct -> mallocator : 1
it struct mallocator -> using : 1
struct mallocator using -> noexcept : 1
mallocator using noexcept -> default : 1
using noexcept default -> ctor : 1
noexcept default ctor -> not : 1
default ctor not -> template : 1
ctor not template -> noexcept : 1
not template noexcept -> template : 1
template noexcept template -> auto : 1
template noexcept template -> struct : 1
noexcept template auto -> const : 1
noexcept return template -> auto : 1
noexcept return template -> friend : 1
return template auto -> const : 1
auto const if -> return : 1
const if return -> if : 1
if return if -> throw : 1
if return if -> return : 4
if return if -> constexpr : 1
return if throw -> const : 1
if throw const -> pv : 1
throw const pv -> if : 1
const pv if -> throw : 1
pv if throw -> return : 1
if throw return -> auto : 1
throw return auto -> const : 1
auto const const -> noexcept : 1
auto const const -> override : 2
auto const const -> return : 1
const const noexcept -> void : 1
const noexcept void -> is : 1
noexcept void is -> a : 1
void is a -> stateless : 1
is a stateless -> which : 1
a stateless which -> means : 1
stateless which means -> that : 1
that the allocator -> instance : 1
the allocator instance -> itself : 1
allocator instance itself -> have : 1
instance itself have -> any : 1
itself have any -> mutable : 1
have any mutable -> it : 1
any mutable it -> uses : 1
mutable it uses -> global : 1
it uses global -> functions : 1
uses global functions -> for : 1
global functions for -> allocation : 1
functions for allocation -> and : 1
for allocation and -> namely : 1
allocation and namely -> a : 1
and namely a -> stateless : 1
namely a stateless -> allocator : 1
a stateless allocator -> should : 1
a stateless allocator -> is : 1
stateless allocator should -> always : 1
allocator should always -> compare : 1
should always compare -> equal : 1
always compare equal -> to : 1
compare equal to -> the : 1
equal to the -> allocators : 1
equal to the -> tuple : 1
equal to the -> largest : 1
equal to the -> argument : 1
equal to the -> word : 1
equal to the -> stl : 1
to the allocators -> of : 1
the allocators of -> the : 1
allocators of the -> same : 1
of the same -> it : 1
of the same -> a : 1
of the same -> two : 1
the same it -> indicates : 1
same it indicates -> that : 1
it indicates that -> memory : 1
indicates that memory -> allocated : 1
that memory allocated -> with : 1
with should also -> be : 1
also be deallocated -> with : 1
be deallocated with -> regardless : 1
deallocated with regardless -> of : 1
with regardless of -> the : 1
the a stateless -> allocator : 1
stateless allocator is -> the : 1
allocator is the -> least : 1
is the least -> complicated : 1
the least complicated -> allocator : 1
least complicated allocator -> to : 1
complicated allocator to -> write : 1
allocator to write -> but : 1
to write but -> it : 1
write but it -> is : 1
is also since -> it : 1
also since it -> depends : 1
since it depends -> on : 1
it depends on -> the : 1
on the global -> use : 1
on the global -> and : 1
the global use -> our : 1
global use our -> arena : 1
our arena as -> a : 1
arena as a -> we : 1
will need a -> stateful : 1
need a stateful -> allocator : 1
a stateful allocator -> that : 1
stateful allocator that -> can : 1
that can reference -> the : 1
can reference the -> arena : 1
reference the arena -> the : 1
the arena the -> arena : 1
arena the arena -> class : 1
the arena class -> that : 1
arena class that -> we : 1
class that we -> implemented : 1
that we implemented -> really : 1
we implemented really -> starts : 1
implemented really starts -> to : 1
really starts to -> make : 1
starts to make -> for : 1
to make for -> that : 1
make for that -> we : 1
for that we -> want : 1
to use one -> of : 1
use one of -> the : 1
standard containers in -> a : 1
containers in a -> function : 1
in a function -> to : 1
function to do -> some : 1
to do some -> we : 1
to do some -> configuration : 1
do some we -> know : 1
some we know -> most : 1
we know most -> of : 1
know most of -> the : 1
dealing with very -> small : 1
with very small -> amounts : 1
very small amounts -> of : 1
small amounts of -> data : 1
amounts of data -> that : 1
of data that -> will : 1
data that will -> fit : 1
that will fit -> on : 1
will fit on -> the : 1
fit on the -> but : 1
on the but -> once : 1
on the but -> the : 1
the but once -> we : 1
but once we -> use : 1
once we use -> the : 1
use the containers -> from : 1
the containers from -> the : 1
containers from the -> standard : 2
the standard they -> will : 1
standard they will -> allocate : 1
they will allocate -> memory : 1
allocate memory from -> the : 1
from the in -> this : 1
in this will -> hurt : 1
in this will -> evaluate : 1
this will hurt -> the : 1
will hurt the -> are : 1
hurt the are -> the : 1
the are the -> alternatives : 1
are the alternatives -> stack : 1
the alternatives stack -> to : 1
alternatives stack to -> manage : 1
stack to manage -> the : 1
manage the data -> and : 1
the data and -> avoid : 1
data and avoid -> unnecessary : 1
and avoid unnecessary -> heap : 1
avoid unnecessary heap -> is : 1
unnecessary heap is -> to : 1
heap is to -> build : 1
is to build -> a : 1
to build a -> custom : 1
build a custom -> container : 1
a custom container -> that : 1
custom container that -> uses : 1
that uses a -> variation : 1
uses a variation -> of : 1
variation of the -> small : 1
the small size -> optimization : 1
size optimization we -> looked : 1
optimization we looked -> at : 1
looked at for -> it : 1
at for it -> is : 1
for it is -> also : 1
use a container -> from : 1
a container from -> for : 1
container from for -> which : 1
from for which -> is : 1
which is based -> on : 1
based on small -> we : 1
on small we -> advise : 1
small we advise -> you : 1
we advise you -> to : 1
advise you to -> check : 1
you to check -> it : 1
to check it -> out : 1
check it out -> if : 1
if you another -> is : 1
you another is -> to : 1
another is to -> use : 1
use a custom -> which : 1
use a custom -> standard : 1
a custom which -> we : 1
custom which we -> will : 1
will explore since -> we : 1
explore since we -> already : 1
since we already -> have : 1
we already have -> an : 1
already have an -> arena : 1
have an arena -> template : 1
an arena template -> class : 1
arena template class -> we : 1
template class we -> could : 1
class we could -> simply : 1
could simply create -> the : 1
simply create the -> instance : 1
create the instance -> of : 1
the instance of -> an : 1
instance of an -> arena : 1
of an arena -> on : 1
an arena on -> the : 1
arena on the -> stack : 1
stack and have -> a : 1
and have a -> custom : 1
have a custom -> allocator : 1
custom allocator use -> it : 1
allocator use it -> for : 1
it for the -> what : 1
for the what -> we : 1
the what we -> then : 1
what we then -> need : 1
we then need -> to : 1
then need to -> do : 1
implement a stateful -> which : 1
a stateful which -> could : 1
stateful which could -> hold : 1
which could hold -> a : 1
could hold a -> reference : 1
hold a reference -> to : 1
to the arena -> this : 1
the arena this -> custom : 1
arena this custom -> allocator : 1
this custom allocator -> that : 1
custom allocator that -> we : 1
custom allocator that -> can : 1
allocator that we -> will : 1
we will implement -> is : 1
will implement is -> a : 1
implement is a -> simplified : 1
version of howard -> struct : 1
of howard struct -> shortalloc : 1
howard struct shortalloc -> using : 1
struct shortalloc using -> using : 1
shortalloc using using -> noexcept : 1
using using noexcept -> template : 1
using noexcept template -> noexcept : 1
noexcept template noexcept -> template : 1
noexcept template struct -> rebind : 1
template struct rebind -> using : 1
struct rebind using -> other : 1
rebind using other -> auto : 1
using other auto -> return : 1
other auto return -> auto : 1
return auto noexcept -> void : 1
noexcept void template -> auto : 1
void template auto -> const : 1
noexcept return n -> m : 1
return n m -> template : 1
n m template -> auto : 1
m template auto -> const : 1
return template friend -> struct : 1
template friend struct -> allocator : 1
friend struct allocator -> holds : 1
struct allocator holds -> a : 1
allocator holds a -> reference : 1
holds a reference -> to : 1
the only state -> the : 1
only state the -> allocator : 1
state the allocator -> allocate : 1
the allocator allocate -> and : 1
allocator allocate and -> deallocate : 1
and deallocate simply -> forward : 1
deallocate simply forward -> their : 1
simply forward their -> requests : 1
forward their requests -> to : 1
their requests to -> the : 1
requests to the -> the : 1
the the compare -> operators : 1
the compare operators -> ensure : 1
compare operators ensure -> that : 1
operators ensure that -> two : 1
ensure that two -> instances : 1
that two instances -> of : 1
two instances of -> the : 2
two instances of -> cannot : 1
the type are -> using : 1
type are using -> the : 1
using the same -> the : 1
the same the -> allocator : 1
the same the -> implementation : 1
the same the -> is : 1
same the allocator -> and : 1
the allocator and -> arena : 1
allocator and arena -> we : 1
and arena we -> implemented : 1
arena we implemented -> can : 1
we implemented can -> be : 1
implemented can be -> used : 1
used with a -> standard : 1
used with a -> floating : 1
used with a -> as : 1
with a standard -> container : 1
a standard container -> to : 1
standard container to -> avoid : 1
container to avoid -> dynamic : 1
to avoid dynamic -> memory : 1
avoid dynamic memory -> when : 1
memory when we -> are : 1
when we are -> using : 2
when we are -> done : 1
are using small -> we : 1
using small we -> can : 1
small we can -> allocations : 1
we can allocations -> using : 1
can allocations using -> the : 1
allocations using the -> stack : 1
the stack see -> an : 1
stack see an -> example : 1
see an example -> using : 1
an example using -> int : 1
an example using -> global : 1
example using int -> using : 1
using int using -> smallset : 1
int using smallset -> auto : 1
using smallset auto -> auto : 1
smallset auto auto -> read : 1
auto auto read -> numbers : 1
auto read numbers -> from : 1
read numbers from -> auto : 1
numbers from auto -> n : 1
from auto n -> while : 1
auto n while -> print : 1
n while print -> unique : 1
while print unique -> numbers : 1
print unique numbers -> for : 1
unique numbers for -> number : 1
numbers for number -> number : 1
for number number -> program : 1
number number program -> reads : 1
number program reads -> integers : 1
program reads integers -> from : 1
reads integers from -> standard : 1
integers from standard -> the : 1
from standard the -> is : 1
standard the is -> reached : 1
the is reached -> on : 1
is reached on -> systems : 1
reached on systems -> and : 1
on systems and -> on : 1
systems and on -> it : 1
and on it -> then : 1
on it then -> unique : 1
it then unique -> numbers : 1
then unique numbers -> in : 1
unique numbers in -> depending : 1
numbers in depending -> on : 1
in depending on -> how : 1
depending on how -> many : 1
depending on how -> the : 1
how many numbers -> are : 1
many numbers are -> read : 1
numbers are read -> from : 1
are read from -> the : 1
read from the -> program : 1
from the program -> will : 1
program will use -> stack : 1
will use stack -> memory : 1
stack memory or -> dynamic : 1
memory or dynamic -> memory : 1
or dynamic memory -> by : 1
dynamic memory by -> using : 1
using our chapter -> has : 1
our chapter has -> covered : 1
chapter has covered -> a : 1
has covered a -> lot : 1
covered a lot -> of : 1
lot of starting -> with : 1
of starting with -> the : 1
with the basics -> of : 1
of virtual memory -> and : 1
memory and finally -> implementing : 1
and finally implementing -> a : 1
finally implementing a -> custom : 1
implementing a custom -> allocator : 1
used by containers -> from : 1
by containers from -> the : 1
the standard a -> good : 1
standard a good -> understanding : 1
understanding of how -> your : 1
how your program -> uses : 1
your program uses -> memory : 1
program uses memory -> is : 1
uses memory is -> overuse : 1
memory is overuse -> of : 1
is overuse of -> dynamic : 1
overuse of dynamic -> memory : 1
dynamic memory can -> be : 1
be a performance -> bottleneck : 1
a performance bottleneck -> that : 1
performance bottleneck that -> you : 1
bottleneck that you -> might : 1
that you might -> need : 1
you might need -> to : 1
might need to -> optimize : 1
need to optimize -> before : 1
to optimize before -> you : 1
optimize before you -> start : 1
before you start -> implementing : 1
you start implementing -> your : 1
start implementing your -> own : 1
implementing your own -> containers : 1
your own containers -> or : 1
own containers or -> custom : 1
containers or custom -> memory : 1
or custom memory -> bear : 1
custom memory bear -> in : 1
memory bear in -> mind : 1
bear in mind -> that : 1
mind that many -> people : 1
that many people -> before : 1
many people before -> you : 1
people before you -> have : 1
before you have -> probably : 1
you have probably -> had : 1
you have probably -> noticed : 1
have probably had -> very : 1
probably had very -> similar : 1
had very similar -> memory : 1
very similar memory -> issues : 1
similar memory issues -> to : 1
memory issues to -> the : 1
issues to the -> ones : 1
to the ones -> you : 1
the ones you -> may : 1
ones you may -> there : 1
you may there -> is : 1
may there is -> a : 1
good chance that -> the : 1
chance that the -> right : 1
that the right -> tool : 1
the right tool -> for : 1
right tool for -> you : 1
tool for you -> is : 1
for you is -> already : 1
you is already -> out : 1
is already out -> there : 1
already out there -> in : 1
out there in -> a : 1
there in a -> building : 1
in a building -> custom : 1
a building custom -> memory : 1
building custom memory -> managers : 1
custom memory managers -> that : 1
memory managers that -> are : 1
managers that are -> and : 1
that are and -> robust : 1
are and robust -> is : 1
and robust is -> a : 1
robust is a -> and : 1
is a and -> has : 1
is a and -> is : 1
a and has -> the : 1
and has the -> ability : 1
ability to evaluate -> expressions : 1
to evaluate expressions -> at : 1
evaluate expressions at -> compile : 1
expressions at compile -> meaning : 1
at compile meaning -> that : 1
compile meaning that -> values : 1
meaning that values -> are : 1
that values are -> already : 1
values are already -> calculated : 1
are already calculated -> when : 1
already calculated when -> the : 1
calculated when the -> program : 1
the program even -> though : 1
program even though -> metaprogramming : 1
even though metaprogramming -> has : 1
though metaprogramming has -> been : 1
metaprogramming has been -> possible : 1
has been possible -> since : 1
been possible since -> it : 1
possible since it -> was : 1
it was very -> complicated : 1
was very complicated -> due : 1
very complicated due -> to : 1
complicated due to -> its : 1
due to its -> complex : 1
to its complex -> with : 1
its complex with -> the : 1
complex with the -> introduction : 1
with the introduction -> of : 1
introduction of metaprogramming -> has : 1
of metaprogramming has -> become : 1
metaprogramming has become -> much : 1
has become much -> more : 1
become much more -> similar : 1
much more similar -> to : 1
more similar to -> writing : 1
similar to writing -> regular : 1
to writing regular -> chapter : 1
writing regular chapter -> will : 1
regular chapter will -> give : 1
chapter will give -> you : 1
will give you -> a : 1
brief introduction of -> expression : 1
introduction of expression -> evaluations : 1
of expression evaluations -> in : 1
expression evaluations in -> and : 1
evaluations in and -> how : 1
in and how -> they : 1
how they can -> be : 2
used for to -> template : 1
for to template -> writing : 1
to template writing -> regular : 1
template writing regular -> it : 1
writing regular it -> is : 1
regular it is -> eventually : 1
it is eventually -> transformed : 1
is eventually transformed -> to : 1
eventually transformed to -> machine : 1
transformed to machine -> on : 1
to machine on -> the : 1
machine on the -> other : 1
other is code -> that : 1
is code that -> into : 1
code that into -> regular : 1
that into regular -> when : 1
into regular when -> using : 1
regular when using -> it : 1
when using it -> is : 1
using it is -> important : 1
important to remember -> that : 1
to remember that -> its : 1
remember that its -> main : 1
that its main -> use : 1
its main use -> case : 1
main use case -> is : 1
use case is -> to : 1
case is to -> make : 1
to make great -> libraries : 1
make great libraries -> hide : 1
great libraries hide -> complex : 1
libraries hide complex -> from : 1
hide complex from -> the : 1
complex from the -> user : 1
from the user -> remember : 1
from the user -> at : 1
from the user -> of : 2
from the user -> is : 1
the user remember -> that : 1
user remember that -> howsoever : 1
remember that howsoever -> complex : 1
that howsoever complex -> the : 1
howsoever complex the -> interior : 1
complex the interior -> of : 1
the interior of -> the : 1
the interior of -> is : 1
interior of the -> metacode : 1
of the metacode -> may : 1
the metacode may -> important : 1
metacode may important -> to : 1
may important to -> hide : 1
important to hide -> it : 1
to hide it -> behind : 1
hide it behind -> a : 1
it behind a -> good : 1
behind a good -> interface : 1
a good interface -> so : 1
good interface so -> that : 1
interface so that -> the : 1
user code base -> is : 1
base is easy -> to : 1
easy to read -> and : 1
read and its -> simplest : 1
and its simplest -> and : 1
its simplest and -> most : 1
simplest and most -> common : 1
and most common -> template : 1
most common template -> metaprogramming : 1
common template metaprogramming -> in : 1
template metaprogramming in -> is : 1
metaprogramming in is -> used : 1
in is used -> to : 1
used to generate -> and : 1
to generate and -> classes : 1
generate and classes -> that : 1
and classes that -> accept : 1
classes that accept -> different : 1
that accept different -> take : 1
accept different take -> a : 1
different take a -> look : 1
a simple and -> a : 1
simple and a -> by : 1
and a by -> using : 1
a by using -> a : 1
a by using -> reflection : 1
using a template -> the : 1
a template the -> rectangle : 1
template the rectangle -> can : 1
the rectangle can -> be : 1
rectangle can be -> used : 1
rectangle can be -> of : 1
with any integer -> or : 1
any integer or -> floating : 1
integer or floating -> point : 1
or floating point -> without : 1
floating point without -> the : 1
point without the -> programmer : 1
without the programmer -> would : 1
the programmer would -> have : 1
programmer would have -> to : 1
have to create -> a : 2
have to create -> two : 1
have to create -> the : 1
create a separate -> for : 1
create a separate -> function : 1
a separate for -> every : 1
separate for every -> base : 1
for every base -> compiler : 1
every base compiler -> then : 1
base compiler then -> the : 1
compiler then the -> metacode : 1
then the metacode -> to : 1
the metacode to -> regular : 1
metacode to regular -> which : 1
to regular which -> is : 1
regular which is -> further : 1
which is further -> compiled : 1
is further compiled -> to : 1
further compiled to -> machine : 1
to machine we -> will : 1
machine we will -> hereforth : 1
we will hereforth -> refer : 1
will hereforth refer -> to : 1
hereforth refer to -> code : 1
to code generated -> from : 1
code generated from -> metaprogramming : 1
generated from metaprogramming -> as : 1
from metaprogramming as -> regular : 1
metaprogramming as regular -> metaprogramming : 1
as regular metaprogramming -> code : 1
regular metaprogramming code -> can : 1
metaprogramming code can -> be : 1
can be very -> something : 1
can be very -> hard : 2
can be very -> useful : 1
be very something -> that : 1
very something that -> can : 1
something that can -> make : 1
that can make -> it : 1
can make it -> is : 1
can make it -> easier : 1
make it is -> to : 1
it is to -> imagine : 1
it is to -> floating : 1
it is to -> execute : 1
is to imagine -> how : 1
to imagine how -> the : 1
imagine how the -> expected : 1
how the expected -> regular : 1
the expected regular -> code : 1
expected regular code -> is : 1
regular code is -> intended : 1
code is intended -> to : 1
intended to is -> an : 1
to is an -> example : 1
to is an -> does : 1
a simple templated -> accepts : 1
simple templated accepts -> any : 1
templated accepts any -> number : 1
accepts any number -> auto : 1
any number auto -> int : 1
number auto int -> auto : 1
int auto product -> i : 1
auto product i -> i : 4
product i i -> product : 4
i i product -> return : 4
i product return -> this : 1
i product return -> the : 1
i product return -> to : 1
i product return -> x : 1
product return this -> function : 1
return this function -> will : 1
this function will -> generate : 1
function will generate -> a : 1
will generate a -> function : 2
generate a function -> whose : 1
generate a function -> similar : 1
a function whose -> return : 1
function whose return -> type : 1
whose return type -> is : 1
return type is -> dependent : 1
type is dependent -> on : 1
is dependent on -> the : 2
dependent on the -> template : 1
dependent on the -> order : 1
on the template -> parameter : 1
the template parameter -> x : 1
the template parameter -> and : 1
the template parameter -> is : 1
template parameter x -> x : 1
parameter x x -> is : 1
x x is -> a : 1
x is a -> auto : 1
is a auto -> y : 1
a auto y -> y : 1
auto y y -> is : 1
y y is -> an : 1
y is an -> a : 1
is an a -> simple : 1
an a simple -> class : 1
simple class is -> constructed : 1
is constructed like -> rectangle : 1
constructed like rectangle -> can : 1
like rectangle can -> be : 1
can be of -> any : 1
be of any -> type : 1
be of any -> integral : 1
be of any -> in : 1
of any type -> template : 1
any type template -> class : 1
type template class -> rectangle : 1
template class rectangle -> t : 1
class rectangle t -> t : 1
rectangle t t -> t : 1
t t auto -> const : 1
t auto const -> return : 1
return t a -> template : 1
t a template -> class : 1
a template class -> is : 1
a template class -> that : 1
template class is -> the : 1
class is the -> programmer : 1
the programmer specifies -> the : 1
programmer specifies the -> types : 1
specifies the types -> for : 1
the types for -> which : 1
types for which -> the : 1
for which the -> template : 1
for which the -> statement : 1
which the template -> should : 1
the template should -> generate : 1
template should generate -> the : 1
should generate the -> rectf : 1
generate the rectf -> is : 1
the rectf is -> a : 1
rectf is a -> rectangle : 1
is a rectangle -> of : 2
a rectangle of -> rectf : 1
a rectangle of -> recti : 1
rectangle of rectf -> recti : 1
of rectf recti -> is : 1
rectf recti is -> a : 1
recti is a -> rectangle : 1
rectangle of recti -> standalone : 1
of recti standalone -> function : 1
recti standalone function -> can : 1
standalone function can -> then : 1
function can then -> use : 1
use a template -> to : 1
a template to -> accept : 1
template to accept -> a : 1
to accept a -> rectangle : 1
accept a rectangle -> with : 1
a rectangle with -> dimensions : 1
rectangle with dimensions -> of : 1
with dimensions of -> any : 1
dimensions of any -> data : 1
of any data -> type : 1
any data type -> but : 1
data type but -> no : 1
type but no -> other : 1
type but no -> the : 1
but no other -> class : 1
no other class -> type : 1
other class type -> than : 1
class type than -> as : 1
type than as -> auto : 1
than as auto -> bool : 1
as auto bool -> return : 1
auto bool return -> integers : 1
auto bool return -> is : 1
bool return integers -> as : 1
return integers as -> template : 1
as template general -> a : 1
template general a -> template : 1
general a template -> can : 1
a template can -> also : 1
template can also -> be : 1
also be of -> any : 1
of any integral -> which : 1
any integral which -> means : 1
integral which means -> that : 1
compiler generates a -> new : 2
generates a new -> function : 3
generates a new -> is : 1
generates a new -> class : 1
a new function -> for : 2
a new function -> with : 1
new function for -> every : 2
function for every -> integer : 1
function for every -> type : 2
function for every -> number : 1
for every integer -> passed : 1
every integer passed -> as : 1
integer passed as -> the : 1
passed as the -> template : 1
as the template -> typename : 1
the template typename -> auto : 1
typename auto auto -> product : 1
auto auto product -> i : 1
product return the -> compiler : 1
return the compiler -> a : 1
the compiler a -> function : 2
compiler a function -> which : 2
function which squares -> the : 1
which squares the -> the : 1
squares the the -> compiler : 1
function which cubes -> the : 1
which cubes the -> the : 1
cubes the the -> difference : 1
the the difference -> between : 1
between the template -> parameter : 1
template parameter and -> the : 1
parameter and the -> function : 1
and the function -> parameter : 1
and the function -> incrementing : 1
the function parameter -> for : 1
function parameter for -> every : 1
parameter for every -> value : 1
for every value -> of : 1
every value of -> compiler : 1
value of compiler -> generates : 1
of compiler generates -> a : 1
new is passed -> as : 1
is passed as -> a : 1
is passed as -> where : 1
passed as a -> regular : 1
a regular parameter -> as : 1
regular parameter as -> does : 1
parameter as does -> not : 1
as does not -> result : 1
as does not -> contain : 1
does not result -> in : 1
not result in -> a : 1
in a new -> the : 1
in a new -> buffer : 1
a new the -> compiler : 1
a new the -> use : 1
new the compiler -> handles : 1
handles a the -> compiler : 1
a the compiler -> deals : 1
a the compiler -> are : 1
the compiler deals -> with : 1
compiler deals with -> a : 1
with a template -> it : 1
with a template -> regular : 1
a template it -> constructs : 1
template it constructs -> a : 1
it constructs a -> regular : 1
constructs a regular -> with : 1
a regular with -> the : 1
regular with the -> template : 1
with the template -> parameters : 1
the template parameters -> the : 1
template parameters the -> following : 1
parameters the following -> code : 1
following code will -> make : 1
code will make -> the : 1
make the compiler -> generate : 2
compiler generate regular -> as : 1
generate regular as -> it : 1
regular as it -> utilizes : 1
as it utilizes -> valuei : 1
it utilizes valuei -> auto : 1
utilizes valuei auto -> valuef : 1
valuei auto valuef -> when : 1
auto valuef when -> as : 1
valuef when as -> distinguished : 1
when as distinguished -> from : 1
as distinguished from -> regular : 1
distinguished from regular -> the : 1
from regular the -> compiler : 1
regular the compiler -> will : 2
regular the compiler -> is : 1
the compiler will -> generate : 5
the compiler will -> the : 1
the compiler will -> keep : 1
the compiler will -> now : 1
the compiler will -> execute : 1
the compiler will -> refuse : 1
will generate new -> functions : 1
generate new functions -> for : 1
new functions for -> every : 1
functions for every -> template : 1
functions for every -> what : 1
for every template -> this : 1
every template this -> means : 1
template this means -> that : 1
is the equivalent -> of : 2
equivalent of manually -> creating : 1
of manually creating -> four : 1
manually creating four -> different : 1
creating four different -> functions : 1
four different functions -> looking : 1
different functions looking -> something : 1
functions looking something -> like : 1
looking something like -> int : 1
something like int -> auto : 1
like int auto -> int : 1
auto auto is -> important : 1
auto auto is -> is : 1
auto is important -> for : 1
is important for -> understanding : 1
important for understanding -> how : 1
for understanding how -> metaprogramming : 1
understanding how metaprogramming -> the : 1
how metaprogramming the -> template : 1
metaprogramming the template -> code : 1
the template code -> generates : 1
template code generates -> which : 1
code generates which -> is : 1
generates which is -> then : 1
is then executed -> if : 1
then executed if -> the : 1
executed if the -> generated : 1
if the generated -> code : 1
the generated code -> does : 1
the generated code -> needs : 1
generated code does -> not : 1
code does not -> the : 2
code does not -> need : 1
does not the -> error : 1
does not the -> compiler : 1
does not the -> object : 2
not the error -> will : 1
the error will -> be : 1
error will be -> caught : 1
will be caught -> at : 1
be caught at -> compile : 1
caught at compile -> the : 1
at compile the -> templated : 1
at compile the -> compiler : 1
compile the templated -> version : 1
the templated version -> of : 1
templated version of -> and : 1
version of and -> we : 1
of and we -> want : 2
and we want -> to : 3
want to prevent -> it : 1
to prevent it -> from : 1
to prevent it -> is : 1
prevent it from -> being : 1
it from being -> called : 1
from being called -> with : 1
being called with -> negative : 1
called with negative -> exponents : 1
with negative exponents -> prevent : 1
negative exponents prevent -> this : 1
exponents prevent this -> in : 1
prevent this in -> the : 1
this in the -> runtime : 1
this in the -> later : 1
in the runtime -> where : 1
the runtime where -> is : 1
runtime where is -> a : 1
where is a -> regular : 1
is a regular -> we : 1
a regular we -> add : 1
a regular we -> utilize : 1
regular we add -> a : 1
we add a -> regular : 1
add a regular -> runtime : 1
a regular runtime -> if : 1
a regular runtime -> this : 1
regular runtime if -> the : 1
runtime if the -> function : 1
if the function -> is : 1
function is called -> with : 2
is called with -> a : 2
called with a -> negative : 1
called with a -> point : 1
with a negative -> value : 1
a negative value -> the : 1
a negative value -> to : 1
negative value the -> program : 1
value the program -> will : 1
program will auto -> int : 1
will auto int -> only : 1
auto int only -> works : 1
int only works -> for : 1
only works for -> positive : 1
works for positive -> auto : 1
for positive auto -> product : 1
positive auto product -> i : 1
product return to -> trigger : 1
return to trigger -> errors : 1
at compile we -> do : 1
at compile we -> have : 1
at compile we -> will : 1
at compile we -> rewrite : 1
at compile we -> can : 1
compile we do -> the : 1
the same to -> the : 1
same to the -> template : 1
to the template -> we : 1
the template we -> can : 1
template we can -> utilize : 1
can utilize the -> unlike : 1
utilize the unlike -> a : 1
the unlike a -> regular : 1
unlike a regular -> will : 1
a regular will -> refuse : 1
regular will refuse -> to : 1
will refuse to -> compile : 1
will refuse to -> a : 1
refuse to compile -> if : 1
to compile if -> the : 2
if the condition -> better : 1
if the condition -> is : 2
the condition better -> to : 1
condition better to -> break : 1
better to break -> the : 1
to break the -> build : 1
break the build -> than : 1
the build than -> to : 1
build than to -> break : 1
than to break -> at : 1
to break at -> in : 1
break at in -> the : 1
at in the -> following : 1
if the template -> parameter : 1
template parameter is -> a : 1
parameter is a -> negative : 1
is a negative -> prevent : 1
a negative prevent -> the : 1
negative prevent the -> function : 1
prevent the function -> from : 1
the function from -> int : 1
function from int -> auto : 1
from int auto -> must : 1
int auto must -> be : 1
auto must be -> auto : 1
must be auto -> product : 1
be auto product -> i : 1
product return x -> n : 1
return x n -> is : 1
x n is -> y : 1
n is y -> does : 1
is y does -> not : 1
y does not -> n : 1
does not n -> is : 1
not n is -> other : 1
n is other -> with : 1
is other with -> regular : 1
other with regular -> the : 1
with regular the -> compiler : 1
compiler is only -> aware : 1
is only aware -> of : 1
only aware of -> the : 1
the type and -> has : 1
the type and -> the : 1
the type and -> three : 1
the type and -> value : 1
type and has -> no : 1
and has no -> idea : 1
has no idea -> what : 1
has no idea -> of : 1
no idea what -> it : 1
idea what it -> with : 1
what it with -> the : 1
it with the -> compiler : 1
it with the -> as : 1
with the compiler -> knows : 1
with the compiler -> care : 1
the compiler knows -> both : 1
the compiler knows -> the : 1
compiler knows both -> the : 1
knows both the -> type : 1
both the type -> and : 1
and the this -> allows : 1
and the this -> piece : 1
the this allows -> the : 1
this allows the -> compiler : 1
allows the compiler -> to : 1
compiler to calculate -> other : 1
compiler to calculate -> the : 2
to calculate other -> doing : 1
calculate other doing -> template : 1
other doing template -> you : 1
doing template you -> may : 1
template you may -> often : 1
you may often -> find : 1
may often find -> yourself : 1
often find yourself -> in : 1
find yourself in -> situations : 1
yourself in situations -> where : 1
in situations where -> you : 1
situations where you -> need : 1
you need information -> about : 1
need information about -> the : 1
information about the -> types : 1
information about the -> cast : 1
about the types -> you : 1
the types you -> are : 1
types you are -> dealing : 1
you are dealing -> with : 1
dealing with at -> compile : 1
with at compile -> since : 1
at compile since -> the : 1
compile since the -> result : 1
since the result -> of : 1
result of metaprogramming -> is : 1
of metaprogramming is -> the : 1
metaprogramming is the -> generated : 1
is the generated -> the : 1
the generated the -> generated : 1
generated the generated -> code : 1
generated code needs -> to : 1
code needs to -> be : 1
to be this -> of : 1
to be this -> you : 1
be this of -> never : 1
this of never -> the : 1
of never the -> case : 1
never the case -> for : 1
case for traditional -> as : 1
for traditional as -> they : 1
traditional as they -> only : 1
as they only -> deal : 1
they only deal -> with : 1
only deal with -> specified : 1
deal with specified -> trait : 1
with specified trait -> are : 1
specified trait are -> two : 1
trait are two -> categories : 1
are two categories -> of : 1
two categories of -> type : 1
categories of type -> traits : 1
of type traits -> that : 1
of type traits -> which : 1
type traits that -> return : 1
traits that return -> information : 1
traits that return -> a : 1
that return information -> about : 1
return information about -> a : 1
information about a -> type : 1
about a type -> as : 1
a type as -> a : 1
as a boolean -> or : 1
a boolean or -> an : 1
boolean or an -> integer : 1
or an integer -> traits : 1
an integer traits -> that : 1
integer traits that -> return : 1
that return a -> new : 1
a new first -> category : 1
new first category -> returns : 1
first category returns -> or : 1
category returns or -> depending : 1
returns or depending -> on : 1
or depending on -> the : 1
the input and -> ends : 1
the input and -> a : 1
input and ends -> with : 1
and ends with -> for : 2
ends with for -> has : 1
ends with for -> examples : 1
with for has -> been : 1
for has been -> added : 1
has been added -> in : 1
been added in -> if : 1
added in if -> your : 2
in if your -> stl : 1
in if your -> compiler : 1
if your stl -> implementation : 1
your stl implementation -> does : 1
stl implementation does -> not : 1
implementation does not -> provide : 1
not provide postfixes -> for : 1
provide postfixes for -> type : 1
postfixes for type -> then : 1
for type then -> you : 1
type then you -> can : 1
then you can -> use : 1
use the older -> in : 1
the older in -> other : 1
older in other -> remove : 1
in other remove -> the : 1
other remove the -> extension : 1
remove the extension -> and : 1
the extension and -> add : 1
extension and add -> the : 1
and add the -> are : 1
add the are -> some : 1
the are some -> examples : 1
examples of type -> checking : 1
examples of type -> traits : 1
of type checking -> using : 1
type checking using -> type : 1
checking using type -> unsigned : 1
using type unsigned -> auto : 1
type unsigned auto -> flt : 1
unsigned auto flt -> auto : 1
auto flt auto -> class : 1
flt auto class -> parent : 1
auto class parent -> class : 1
class parent class -> child : 1
parent class child -> public : 1
class child public -> parent : 1
child public parent -> class : 1
public parent class -> infant : 1
parent class infant -> second : 1
class infant second -> category : 1
infant second category -> returns : 1
second category returns -> a : 1
category returns a -> new : 1
returns a new -> type : 1
a new type -> and : 1
new type and -> ends : 1
type and ends -> with : 1
with for examples -> of : 1
for examples of -> type : 1
type traits which -> transforms : 1
traits which transforms -> is : 1
which transforms is -> an : 1
transforms is an -> using : 1
is an using -> is : 1
an using is -> type : 1
using is type -> order : 1
is type order -> to : 1
type order to -> extract : 1
order to extract -> information : 1
to extract information -> about : 1
extract information about -> template : 1
information about template -> the : 1
about template the -> stl : 1
template the stl -> provides : 1
the stl provides -> a : 1
stl provides a -> type : 1
provides a type -> traits : 1
a type traits -> available : 1
type traits available -> in : 1
traits available in -> the : 1
available in the -> all : 1
in the all -> type : 1
the all type -> traits : 1
all type traits -> are : 1
type traits are -> evaluated : 1
traits are evaluated -> at : 1
are evaluated at -> compile : 2
evaluated at compile -> for : 1
evaluated at compile -> the : 1
evaluated at compile -> time : 1
evaluated at compile -> if : 1
evaluated at compile -> you : 1
evaluated at compile -> const : 1
evaluated at compile -> we : 1
at compile for -> this : 1
compile for this -> which : 1
for this which -> returns : 1
this which returns -> if : 1
which returns if -> the : 2
returns if the -> value : 1
returns if the -> variant : 1
if the value -> is : 1
value is zero -> or : 1
is zero or -> above : 1
zero or above -> and : 1
or above and -> can : 1
above and can -> immediately : 1
and can immediately -> return : 1
can immediately return -> for : 1
immediately return for -> unsigned : 1
return for unsigned -> integers : 1
for unsigned integers -> as : 1
unsigned integers as -> auto : 1
integers as auto -> int : 1
as auto int -> if : 1
auto int if -> return : 1
return return v -> they : 1
return return v -> with : 1
return return v -> the : 1
return return v -> keyword : 1
return v they -> are : 1
v they are -> evaluated : 1
they are evaluated -> at : 1
compile the compiler -> will : 1
will generate codes -> as : 1
generate codes as -> shown : 1
codes as shown -> in : 1
following table when -> invoked : 1
table when invoked -> with : 1
when invoked with -> an : 1
invoked with an -> unsigned : 1
with an unsigned -> and : 1
with an unsigned -> auto : 1
an unsigned and -> signed : 1
unsigned and signed -> with : 1
and signed with -> an : 1
signed with an -> unsigned : 1
an unsigned auto -> if : 1
unsigned auto if -> return : 1
auto if return -> return : 2
v with a -> signed : 1
with a signed -> auto : 1
a signed auto -> if : 1
signed auto if -> return : 1
return v the -> type : 2
return v the -> previous : 1
v the type -> of : 1
v the type -> not : 1
variable with is -> used : 1
with is used -> to : 1
used to retrieve -> the : 1
retrieve the type -> of : 1
retrieve the type -> the : 1
a variable and -> is : 1
variable and is -> used : 1
variable and is -> executed : 1
and is used -> when : 1
and is used -> with : 1
is used when -> an : 1
used when an -> explicit : 1
when an explicit -> type : 1
an explicit type -> name : 2
explicit type name -> is : 2
type name is -> not : 2
name is not -> an : 1
name is not -> only : 1
not an explicit -> type : 1
only the variable -> name : 1
the variable name -> is : 1
variable name is -> for : 1
name is for -> lambda : 1
is for lambda -> with : 1
for lambda with -> as : 1
lambda with as -> a : 1
with as a -> do : 1
as a do -> not : 1
a do not -> name : 1
do not name -> the : 1
not name the -> type : 1
name the type -> opposed : 1
the type opposed -> to : 1
type opposed to -> templated : 1
opposed to templated -> where : 1
to templated where -> the : 1
templated where the -> type : 1
where the type -> name : 1
the type name -> has : 1
type name has -> its : 1
name has its -> own : 1
its own template -> the : 1
own template the -> type : 1
template the type -> visible : 1
the type visible -> auto : 1
type visible auto -> return : 1
visible auto return -> v : 1
the type not -> as : 1
type not as -> it : 1
not as it -> is : 1
not as it -> requires : 1
is only denoted -> return : 1
only denoted return -> v : 1
denoted return v -> the : 1
v the previous -> sign : 1
v the previous -> code : 1
the previous sign -> if : 1
previous sign if -> we : 1
sign if we -> would : 1
if we would -> like : 1
like to rewrite -> it : 1
to rewrite it -> as : 1
rewrite it as -> a : 1
as a lambda -> we : 1
a lambda we -> would : 1
lambda we would -> have : 1
have to extract -> the : 1
to extract the -> type : 1
to extract the -> individual : 1
extract the type -> of : 1
the variable via -> that : 1
variable via that -> there : 1
via that there -> is : 1
is a glitch -> the : 1
a glitch the -> variable : 1
glitch the variable -> is : 1
variable is actually -> a : 1
is actually a -> reference : 1
actually a reference -> we : 1
a reference we -> have : 1
reference we have -> to : 1
have to get -> the : 1
get the this -> is : 1
achieved by using -> the : 2
achieved by using -> a : 1
the type which -> returns : 1
type which returns -> a : 1
returns a type -> with : 1
a type with -> the : 1
type with the -> reference : 1
type with the -> constant : 1
with the reference -> attribute : 1
the reference attribute -> as : 1
reference attribute as -> int : 1
attribute as int -> using : 1
as int using -> referencetype : 1
int using referencetype -> valuetype : 1
using referencetype valuetype -> if : 1
referencetype valuetype if -> return : 1
valuetype if return -> return : 1
return v keyword -> not : 1
v keyword not -> only : 1
keyword not only -> retrieves : 1
not only retrieves -> the : 1
only retrieves the -> type : 1
retrieves the type -> of : 1
a variable but -> can : 1
variable but can -> also : 1
but can also -> be : 1
but can also -> check : 1
be used on -> an : 1
used on an -> expression : 1
on an expression -> in : 1
an expression in -> order : 1
expression in order -> to : 1
order to retrieve -> the : 1
the type the -> expression : 1
the type the -> example : 1
type the expression -> example : 1
the expression example -> takes : 1
expression example takes -> any : 1
example takes any -> range : 1
takes any range -> or : 1
any range or -> container : 1
range or container -> and : 1
or container and -> converts : 1
container and converts -> it : 1
and converts it -> to : 1
converts it to -> a : 1
to a to -> determine : 1
a to determine -> the : 1
determine the type -> of : 1
the type returned -> by : 1
type returned by -> the : 1
returned by the -> function : 1
by the function -> of : 1
the function of -> the : 1
container is auto -> using : 1
is auto using -> iteratortype : 1
auto using iteratortype -> using : 1
using iteratortype using -> referencetype : 1
iteratortype using referencetype -> using : 1
using referencetype using -> valuetype : 1
referencetype using valuetype -> return : 1
using valuetype return -> enable : 1
valuetype return enable -> functions : 1
return enable functions -> based : 1
types with trait -> is : 1
with trait is -> used : 1
trait is used -> for : 1
trait is used -> to : 1
used for function -> overloading : 1
for function overloading -> when : 1
function overloading when -> dealing : 1
overloading when dealing -> with : 1
a template regular -> function : 1
template regular function -> overloading : 1
regular function overloading -> requires : 1
function overloading requires -> you : 1
overloading requires you -> to : 1
requires you to -> overload : 1
you to overload -> a : 1
to overload a -> function : 1
overload a function -> for : 1
a function for -> every : 1
for every type -> you : 1
for every type -> in : 2
for every type -> contained : 1
for every type -> which : 1
every type you -> intend : 1
type you intend -> to : 1
you intend to -> use : 1
intend to use -> it : 1
use it uses -> a : 1
it uses a -> predicate : 1
uses a predicate -> for : 1
a predicate for -> say : 1
a predicate for -> sorting : 1
predicate for say -> like : 1
for say like -> to : 1
say like to -> create : 1
like to create -> an : 1
create an interpolate -> which : 1
an interpolate which -> mixes : 1
interpolate which mixes -> two : 1
which mixes two -> values : 1
mixes two values -> weighted : 1
two values weighted -> by : 1
values weighted by -> a : 1
weighted by a -> power : 1
by a power -> parameter : 1
a power parameter -> from : 1
power parameter from -> zero : 1
parameter from zero -> to : 1
from zero to -> cdpaligncenter : 1
zero to cdpaligncenter -> of : 1
to cdpaligncenter of -> interpolation : 1
cdpaligncenter of interpolation -> the : 1
of interpolation the -> power : 1
interpolation the power -> must : 1
the power must -> be : 1
power must be -> a : 1
be a decimal -> the : 1
a decimal the -> function : 1
decimal the function -> only : 1
the function only -> works : 1
the function only -> exists : 1
function only works -> with : 1
only works with -> floats : 1
works with floats -> and : 1
with floats and -> using : 1
floats and using -> regular : 1
and using regular -> function : 1
using regular function -> we : 1
regular function we -> have : 1
function we have -> to : 1
to create two -> one : 1
create two one -> for : 1
one for floats -> and : 1
for floats and -> one : 1
floats and one -> for : 1
one for float -> float : 1
for float float -> return : 1
float float return -> left : 1
float return left -> right : 1
return left right -> auto : 1
return left right -> we : 1
return left right -> this : 1
left right auto -> double : 1
right auto double -> double : 1
auto double double -> return : 1
double double return -> left : 1
double return left -> right : 1
left right we -> template : 1
right we template -> this : 1
we template this -> we : 1
template this we -> need : 1
this we need -> to : 1
need to disallow -> its : 1
to disallow its -> use : 1
disallow its use -> for : 1
its use for -> as : 1
use for as -> integers : 1
for as integers -> cannot : 1
as integers cannot -> hold : 1
integers cannot hold -> decimal : 1
cannot hold decimal -> order : 1
hold decimal order -> to : 1
decimal order to -> prevent : 1
order to prevent -> the : 2
order to prevent -> this : 1
to prevent the -> user : 1
to prevent the -> library : 1
to prevent the -> misuse : 1
prevent the user -> from : 1
the user from -> accidentally : 1
user from accidentally -> calling : 1
from accidentally calling -> the : 1
accidentally calling the -> function : 1
calling the function -> with : 1
the function with -> an : 1
function with an -> integer : 1
with an integer -> used : 1
an integer used -> to : 1
integer used to -> make : 1
used to make -> the : 1
make the function -> visible : 1
the function visible -> only : 1
function visible only -> when : 1
visible only when -> a : 1
only when a -> certain : 1
when a certain -> condition : 1
a certain condition -> is : 1
certain condition is -> in : 1
condition is in -> this : 1
in this the -> condition : 1
in this the -> proxy : 1
in this the -> cpu : 1
this the condition -> is : 1
the condition is -> that : 1
the condition is -> seen : 1
the condition is -> not : 1
condition is that -> it : 1
it is used -> with : 1
it is used -> to : 1
is used with -> a : 2
is used with -> the : 1
is used with -> an : 1
with a floating -> point : 3
floating point syntax -> for : 1
point syntax for -> may : 1
syntax for may -> seem : 1
for may seem -> a : 1
may seem a -> bit : 1
a bit but -> its : 1
bit but its -> syntax : 1
but its syntax -> is : 1
its syntax is -> as : 1
syntax is as -> is : 1
is as is -> used : 1
as is used -> as : 1
is used as -> a : 1
is used as -> the : 1
as a return -> first : 1
a return first -> templated : 1
return first templated -> parameter : 1
first templated parameter -> is : 1
templated parameter is -> the : 1
parameter is the -> second : 1
parameter is the -> returned : 1
parameter is the -> list : 1
parameter is the -> name : 3
parameter is the -> actual : 1
is the second -> parameter : 1
the second parameter -> is : 4
second parameter is -> the : 3
second parameter is -> an : 1
is the returned -> value : 1
the returned value -> if : 1
the returned value -> is : 1
the returned value -> like : 1
returned value if -> the : 1
value if the -> condition : 1
condition is seen -> in : 1
is seen in -> the : 1
code is used -> as : 1
used as the -> return : 1
the return value -> of : 1
the return value -> through : 1
return value of -> the : 1
value of the -> function : 1
value of the -> returned : 1
value of the -> class : 1
value of the -> struct : 1
value of the -> it : 1
value of the -> computation : 1
value of the -> surrounding : 1
function that it -> is : 1
it is intended -> to : 1
intended to auto -> t : 1
to auto t -> t : 1
t t return -> left : 1
t return left -> right : 1
left right this -> function : 1
right this function -> is : 1
with a point -> the : 1
a point the -> code : 1
point the code -> will : 1
the code will -> not : 2
the code will -> typename : 1
code will not -> as : 1
code will not -> compile : 1
not as the -> function : 1
as the function -> only : 1
function only exists -> for : 1
only exists for -> floating : 1
exists for floating -> preceding : 1
for floating preceding -> interpolation : 1
floating preceding interpolation -> code : 1
preceding interpolation code -> can : 1
interpolation code can -> be : 1
be implemented with -> only : 1
implemented with only -> one : 1
only one thereby -> achieving : 1
one thereby achieving -> a : 1
thereby achieving a -> slightly : 1
achieving a slightly -> better : 1
a slightly better -> as : 1
slightly better as -> interpolated : 1
better as interpolated -> left : 1
as interpolated left -> the : 1
interpolated left the -> one : 1
left the one -> used : 1
the one used -> in : 1
one used in -> the : 1
in the examples -> is : 1
the examples is -> just : 1
examples is just -> for : 1
is just for -> better : 1
just for better -> class : 1
for better class -> members : 1
better class members -> with : 1
members with the -> time : 1
with the time -> of : 1
writing this is -> currently : 1
this is currently -> located : 1
is currently located -> in : 1
currently located in -> the : 1
currently located in -> and : 1
located in the -> standard : 1
located in the -> same : 1
standard library but -> we : 1
library but we -> think : 1
but we think -> it : 1
it is far -> too : 1
is far too -> important : 1
important to ignore -> in : 1
in this if -> you : 1
in this if -> your : 1
this if you -> are : 1
are using gcc -> or : 1
using gcc or -> currently : 1
gcc or currently -> located : 1
or currently located -> in : 1
located in and -> exists : 1
in and exists -> in : 1
and exists in -> the : 1
exists in the -> type : 1
in the type -> trait : 1
the type trait -> is : 1
type trait is -> used : 1
used to detect -> if : 1
used to detect -> whether : 1
to detect if -> a : 1
detect if a -> class : 1
a class contains -> a : 1
a class contains -> virtual : 1
contains a particular -> take : 1
a particular take -> a : 1
particular take a -> look : 1
at how it -> is : 1
how it is -> used : 1
to detect whether -> a : 1
detect whether a -> class : 1
whether a class -> has : 1
a class has -> a : 2
class has a -> particular : 1
class has a -> member : 1
has a particular -> member : 1
a particular member -> function : 1
a particular member -> we : 1
particular member function -> by : 1
member function by -> if : 1
function by if -> the : 1
by if the -> member : 1
if the member -> function : 1
function the value -> of : 1
of the returned -> type : 1
the returned type -> is : 1
returned type is -> are : 1
type is are -> two : 1
is are two -> completely : 1
are two completely -> different : 1
completely different octopus -> auto : 1
different octopus auto -> struct : 1
octopus auto struct -> whale : 1
auto struct whale -> auto : 1
struct whale auto -> we : 1
whale auto we -> can : 1
auto we can -> ask : 1
we can ask -> the : 1
can ask the -> compiler : 1
ask the compiler -> what : 1
the compiler what -> operations : 1
compiler what operations -> are : 1
what operations are -> achievable : 1
operations are achievable -> on : 1
are achievable on -> the : 1
achievable on the -> as : 1
on the as -> template : 1
the as template -> auto : 1
as template auto -> namespace : 1
template auto namespace -> exp : 1
auto namespace exp -> you : 1
auto namespace exp -> the : 1
namespace exp you -> can : 1
exp you can -> see : 1
you can see -> in : 2
can see in -> the : 3
see in the -> we : 1
see in the -> following : 2
the we have -> to : 1
the we have -> no : 1
the we have -> added : 1
have to declare -> to : 1
to declare to -> the : 1
declare to the -> member : 1
to the member -> function : 1
to the member -> which : 1
to the member -> variables : 1
to the member -> template : 1
member function we -> are : 1
function we are -> the : 1
we are the -> reason : 1
we are the -> only : 1
the reason for -> this : 2
reason for this -> is : 2
for this is -> that : 2
for this is -> a : 1
this is that -> technically : 1
this is that -> the : 2
is that technically -> looks : 1
that technically looks -> for : 1
technically looks for -> a : 1
looks for a -> but : 1
for a but -> instead : 1
a but instead -> of : 1
instead of failing -> when : 1
of failing when -> the : 1
failing when the -> for : 1
when the for -> is : 1
the for is -> it : 1
for is it -> simply : 1
is it simply -> returns : 1
it simply returns -> this : 1
simply returns this -> means : 1
returns this means -> can : 1
this means can -> not : 1
means can not -> only : 1
can not only -> check : 1
not only check -> for : 1
only check for -> member : 1
check for member -> functions : 1
check for member -> typedefs : 1
for member functions -> but : 1
member functions but -> can : 1
functions but can -> also : 1
can also check -> for : 1
also check for -> member : 1
for member typedefs -> or : 1
member typedefs or -> member : 1
typedefs or member -> here : 1
or member here -> is : 1
member here is -> how : 1
we would perform -> shark : 1
would perform shark -> using : 1
perform shark using -> struct : 1
shark using struct -> eel : 1
using struct eel -> int : 1
struct eel int -> template : 1
eel int template -> using : 1
int template using -> typename : 1
template using typename -> using : 1
using typename using -> auto : 1
typename using auto -> namespace : 1
using auto namespace -> exp : 1
namespace exp the -> shark : 1
exp the shark -> has : 1
the shark has -> a : 1
shark has a -> fin : 1
has a fin -> type : 1
a fin type -> but : 1
fin type but -> no : 1
but no the -> eel : 1
no the eel -> has : 1
the eel has -> electricity : 1
eel has electricity -> but : 1
has electricity but -> no : 1
electricity but no -> example : 1
but no example -> of : 1
no example of -> and : 1
of and is -> a : 1
of and is -> used : 1
is a can -> be : 1
a can be -> combined : 1
can be combined -> with : 1
be combined with -> to : 1
combined with to -> enable : 1
with to enable -> a : 1
to enable a -> certain : 1
enable a certain -> function : 1
a certain function -> for : 1
a certain function -> is : 1
certain function for -> classes : 1
function for classes -> that : 1
for classes that -> contain : 1
for classes that -> have : 1
classes that contain -> a : 1
that contain a -> particular : 1
contain a particular -> member : 1
particular member we -> can : 1
member we can -> implement : 1
member we can -> automate : 1
implement a generic -> print : 1
a generic print -> function : 1
generic print function -> that : 1
print function that -> can : 1
function that can -> print : 1
that can print -> both : 1
can print both -> the : 1
print both the -> method : 1
both the method -> and : 1
the method and -> the : 1
method and the -> member : 1
method and the -> other : 1
and the member -> depending : 1
the member depending -> on : 1
member depending on -> what : 1
depending on what -> the : 1
on what the -> printed : 1
what the printed -> class : 1
the printed class -> has : 1
printed class has -> exp : 1
class has exp -> using : 1
has exp using -> using : 1
exp using using -> print : 1
using using print -> the : 1
using print the -> function : 1
print the function -> if : 1
the function if -> it : 1
function if it -> exists : 1
if it exists -> in : 2
exists in typename -> bool : 2
in typename bool -> hastostring : 2
typename bool hastostring -> bool : 2
bool hastostring bool -> hasnamemember : 2
hastostring bool hasnamemember -> print : 1
hastostring bool hasnamemember -> the : 1
bool hasnamemember print -> the : 1
hasnamemember print the -> member : 1
print the member -> variable : 1
member variable if -> it : 1
variable if it -> exists : 1
bool hasnamemember the -> methods : 1
hasnamemember the methods -> with : 1
the methods with -> two : 1
methods with two -> where : 1
with two where -> one : 1
two where one -> contains : 1
where one contains -> a : 1
one contains a -> method : 1
one contains a -> member : 1
contains a method -> and : 1
a method and -> the : 1
other one contains -> a : 1
contains a member -> squid : 1
a member squid -> auto : 1
member squid auto -> const : 1
squid auto const -> return : 1
const return the -> struct : 1
const return the -> generated : 1
return the struct -> salmon : 1
the struct salmon -> the : 1
struct salmon the -> auto : 1
salmon the auto -> prints : 1
the auto prints -> the : 1
auto prints the -> prints : 1
prints the prints -> the : 1
the prints the -> constexpr : 1
prints the constexpr -> keyword : 1
the constexpr keyword -> tells : 1
constexpr keyword tells -> the : 1
keyword tells the -> compiler : 1
tells the compiler -> that : 1
the compiler that -> a : 2
compiler that a -> certain : 1
compiler that a -> under : 1
that a certain -> function : 1
certain function is -> intended : 1
be evaluated at -> compile : 3
compile time if -> all : 1
compile time if -> the : 1
time if all -> the : 1
if all the -> conditions : 1
all the conditions -> allowing : 1
the conditions allowing -> for : 1
conditions allowing for -> evaluation : 1
allowing for evaluation -> are : 1
for evaluation are -> it : 1
evaluation are it -> will : 1
are it will -> execute : 1
it will execute -> at : 1
will execute at -> like : 1
execute at like -> a : 1
at like a -> regular : 1
regular function has -> a : 1
function has a -> few : 1
a few it -> is : 1
a few it -> needs : 1
few it is -> not : 1
allowed to do -> the : 1
to do the -> memory : 1
do the memory -> on : 1
the memory on -> the : 1
on the local -> static : 1
the local static -> variables : 1
local static variables -> any : 1
static variables any -> in : 1
variables any in -> is : 1
any in is -> not : 1
in is not -> a : 1
not a in -> functions : 1
a in functions -> were : 1
in functions were -> only : 1
functions were only -> allowed : 1
were only allowed -> to : 1
only allowed to -> contain : 1
only allowed to -> return : 1
allowed to contain -> a : 1
to contain a -> single : 1
contain a single -> return : 1
a single return -> requiring : 1
single return requiring -> the : 1
return requiring the -> programmer : 1
requiring the programmer -> to : 1
programmer to resort -> to : 1
resort to recursion -> for : 1
to recursion for -> more : 1
recursion for more -> advanced : 1
for more advanced -> in : 1
more advanced in -> this : 1
advanced in this -> restriction : 1
in this restriction -> has : 1
this restriction has -> been : 1
restriction has been -> the : 1
has been the -> functions : 1
been the functions -> may : 1
the functions may -> now : 1
functions may now -> contain : 1
may now contain -> several : 1
now contain several -> declare : 1
contain several declare -> and : 1
several declare and -> even : 1
declare and even -> mutate : 1
and even mutate -> the : 1
even mutate the -> constexpr : 1
mutate the constexpr -> writing : 1
the constexpr writing -> a : 1
constexpr writing a -> evaluated : 1
writing a evaluated -> function : 1
a evaluated function -> is : 1
evaluated function is -> as : 1
function is as -> easy : 1
is as easy -> as : 1
as easy as -> writing : 1
as easy as -> typename : 1
easy as writing -> a : 1
as writing a -> regular : 1
writing a regular -> as : 1
a regular as -> its : 1
a regular as -> although : 1
regular as its -> parameters : 1
as its parameters -> are : 1
its parameters are -> regular : 1
parameters are regular -> parameters : 1
are regular parameters -> instead : 1
regular parameters instead -> of : 1
parameters instead of -> template : 1
instead of template -> the : 1
of template the -> following : 1
template the following -> auto : 1
following auto int -> int : 1
int int return -> x : 1
int return x -> y : 1
return x y -> call : 1
x y call -> the : 1
y call the -> function : 1
the function like -> auto : 1
like auto value -> this : 1
auto value this -> the : 1
value this the -> compiler : 1
this the compiler -> will : 1
compiler will the -> following : 1
the following regular -> auto : 1
following regular auto -> value : 1
regular auto value -> is : 1
auto value is -> then : 1
machine code as -> in : 1
code as in -> other : 1
code as in -> the : 1
as in other -> the : 1
other the compiler -> evaluates : 1
the compiler evaluates -> a : 1
compiler evaluates a -> function : 1
evaluates a function -> and : 1
function and generates -> regular : 1
and generates regular -> code : 1
generates regular code -> where : 1
regular code where -> the : 1
code where the -> result : 1
where the result -> is : 1
the result is -> functions : 1
the result is -> equal : 1
the result is -> dependent : 1
result is functions -> in : 1
is functions in -> a : 1
a runtime the -> previous : 1
a runtime the -> standard : 1
runtime the previous -> the : 1
previous the summed -> were : 1
the summed were -> known : 1
summed were known -> to : 1
were known to -> the : 1
known to the -> compiler : 1
to the compiler -> at : 1
to the compiler -> that : 1
the compiler at -> compile : 1
compiler at compile -> but : 1
at compile but -> how : 1
compile but how -> do : 1
but how do -> functions : 1
how do functions -> handle : 1
do functions handle -> variables : 1
functions handle variables -> whose : 1
handle variables whose -> values : 1
variables whose values -> are : 1
whose values are -> not : 1
are not known -> until : 1
not known until -> as : 1
known until as -> mentioned : 1
until as mentioned -> in : 1
as mentioned in -> the : 1
as mentioned in -> in : 1
mentioned in the -> previous : 1
the previous constexpr -> is : 1
previous constexpr is -> an : 1
constexpr is an -> indicator : 1
is an indicator -> to : 1
an indicator to -> the : 1
indicator to the -> compiler : 1
that a under -> certain : 1
a under certain -> can : 1
under certain can -> be : 1
certain can be -> evaluated : 1
can be evaluated -> at : 1
can be evaluated -> and : 1
at compile if -> variables : 1
at compile if -> the : 1
compile if variables -> with : 1
if variables with -> values : 1
variables with values -> unknown : 1
with values unknown -> till : 1
values unknown till -> runtime : 1
unknown till runtime -> are : 1
till runtime are -> they : 1
runtime are they -> will : 1
are they will -> be : 1
they will be -> evaluated : 1
will be evaluated -> just : 1
be evaluated just -> like : 1
evaluated just like -> regular : 1
like regular the -> following : 1
regular the following -> the : 1
following the values -> of : 1
values of and -> are : 1
of and are -> provided : 1
and are provided -> from : 1
are provided from -> the : 1
provided from the -> user : 1
user at and -> it : 1
at and it -> would : 1
and it would -> be : 1
would be impossible -> for : 1
be impossible for -> the : 1
calculate the sum -> at : 1
calculate the sum -> of : 1
the sum at -> compile : 1
sum at compile -> x : 1
sum at compile -> might : 1
at compile x -> y : 1
compile x y -> get : 1
x y get -> user : 1
y get user -> value : 1
get user value -> computation : 1
user value computation -> using : 1
value computation using -> verify : 1
computation using verify -> that : 1
using verify that -> is : 1
verify that is -> evaluated : 1
that is evaluated -> at : 1
is evaluated at -> compile : 2
at compile you -> can : 1
compile you can -> the : 1
can the integral -> constant : 1
the integral constant -> is : 1
the integral constant -> has : 1
integral constant is -> a : 1
constant is a -> template : 1
template class that -> takes : 1
class that takes -> an : 1
that takes an -> integer : 1
takes an integer -> type : 1
an integer type -> and : 1
integer type and -> an : 1
type and an -> integer : 1
and an integer -> value : 1
and an integer -> representing : 1
an integer value -> as : 1
integer value as -> template : 1
value as template -> from : 1
as template from -> it : 1
template from it -> generates : 1
from it generates -> a : 1
it generates a -> new : 1
a new class -> representing : 1
new class representing -> a : 1
class representing a -> if : 1
representing a if -> the : 1
a if the -> compiler : 1
if the compiler -> cannot : 1
if the compiler -> knows : 1
if the compiler -> will : 1
the compiler cannot -> evaluate : 1
the compiler cannot -> determine : 1
the compiler cannot -> know : 1
compiler cannot evaluate -> the : 1
cannot evaluate the -> integer : 1
evaluate the integer -> value : 1
the integer value -> at : 1
integer value at -> compile : 1
value at compile -> it : 1
value at compile -> we : 1
at compile it -> the : 1
compile it the -> value : 1
it the value -> of : 1
class is then -> accessed : 1
is then accessed -> via : 1
then accessed via -> the : 1
accessed via the -> static : 1
via the static -> field : 1
the static field -> is : 1
static field is -> an : 1
field is an -> example : 1
example of integral -> values : 1
of integral values -> versus : 1
integral values versus -> runtime : 1
values versus runtime -> integral : 1
versus runtime integral -> auto : 1
runtime integral auto -> ksum : 1
integral auto ksum -> auto : 1
auto ksum auto -> void : 1
ksum auto void -> this : 1
auto void this -> compiles : 1
void this compiles -> as : 1
this compiles as -> the : 1
compiles as the -> value : 1
value of sum -> is : 1
of sum is -> evaluated : 1
sum is evaluated -> at : 1
at compile const -> auto : 2
compile const auto -> int : 1
compile const auto -> if : 1
const auto int -> x : 1
auto int x -> y : 1
int x y -> line : 1
x y line -> below : 1
y line below -> will : 1
line below will -> not : 1
below will not -> the : 1
will not the -> compiler : 1
not the compiler -> cannot : 1
not the compiler -> does : 1
compiler cannot determine -> which : 1
cannot determine which -> value : 1
determine which value -> the : 1
which value the -> integral : 1
value the integral -> constant : 1
integral constant has -> at : 1
constant has at -> compile : 1
has at compile -> const : 1
const auto if -> constexpr : 1
auto if constexpr -> statement : 1
if constexpr statement -> allows : 1
constexpr statement allows -> to : 1
statement allows to -> evaluate : 1
allows to evaluate -> different : 1
to evaluate different -> scopes : 1
evaluate different scopes -> in : 1
different scopes in -> the : 1
scopes in the -> same : 1
the same function -> at : 1
same function at -> compile : 1
function at compile -> time : 1
compile time called -> take : 1
time called take -> a : 1
called take a -> look : 1
following where a -> template : 1
where a template -> function : 1
template function to -> differentiate : 1
template function to -> delay : 1
function to differentiate -> member : 1
to differentiate member -> functions : 1
differentiate member functions -> depending : 1
member functions depending -> on : 1
functions depending on -> the : 1
on the bear -> auto : 1
the bear auto -> const : 1
bear auto const -> struct : 1
auto const struct -> duck : 1
const struct duck -> auto : 1
struct duck auto -> const : 1
duck auto const -> template : 1
auto const template -> auto : 1
const template auto -> if : 1
template auto if -> else : 1
auto if else -> if : 2
if we compile -> the : 1
we compile the -> following : 1
compile the following -> bear : 1
compile the following -> line : 1
the following bear -> compiler : 1
following bear compiler -> will : 1
bear compiler will -> then : 1
compiler will then -> generate : 1
will then generate -> similar : 1
then generate similar -> to : 1
generate similar to -> if : 1
similar to if -> else : 1
to if else -> if : 1
else if this -> line : 1
if this line -> will : 1
this line will -> not : 1
line will not -> you : 1
will not you -> can : 1
not you can -> the : 1
can the compiler -> will : 1
compiler will keep -> the : 1
will keep the -> call : 1
keep the call -> to : 1
the call to -> the : 1
the call to -> will : 1
the call to -> is : 1
call to the -> member : 1
call to the -> object : 1
the member which -> will : 1
member which will -> then : 1
which will then -> fail : 1
will then fail -> to : 1
then fail to -> as : 1
fail to as -> does : 1
to as does -> not : 1
does not contain -> a : 1
not contain a -> member : 1
contain a member -> this : 1
a member this -> happens : 1
member this happens -> even : 1
this happens even -> though : 1
happens even though -> the : 1
though the member -> function : 1
member function will -> never : 1
function will never -> be : 1
will never be -> executed : 1
never be executed -> due : 1
be executed due -> to : 1
executed due to -> the : 1
to the if -> order : 1
the if order -> to : 1
if order to -> make : 1
make the compile -> regardless : 1
the compile regardless -> of : 1
compile regardless of -> the : 1
need to inform -> it : 1
to inform it -> that : 1
inform it that -> like : 1
it that like -> to : 1
that like to -> completely : 1
like to completely -> ignore : 1
to completely ignore -> the : 1
completely ignore the -> scope : 1
ignore the scope -> for : 1
the scope for -> which : 1
scope for which -> the : 1
which the statement -> is : 1
the statement is -> this : 1
statement is this -> is : 1
this is exactly -> what : 1
is exactly what -> is : 1
is exactly what -> we : 1
exactly what is -> how : 1
what is how -> we : 1
can write the -> with : 1
can write the -> numbers : 1
write the with -> the : 1
ability to handle -> both : 1
to handle both -> and : 1
handle both and -> even : 1
both and even -> though : 1
and even though -> they : 1
even though they -> do : 1
though they do -> not : 1
not have share -> a : 1
have share a -> common : 1
share a common -> auto : 1
a common auto -> if : 1
common auto if -> invoked : 1
auto if invoked -> bear : 1
if invoked bear -> compiler : 1
invoked bear compiler -> generates : 1
bear compiler generates -> the : 1
compiler generates the -> following : 2
the following invoked -> duck : 1
the following invoked -> with : 1
following invoked duck -> compiler : 1
invoked duck compiler -> generates : 1
duck compiler generates -> the : 1
following invoked with -> any : 1
invoked with any -> other : 1
with any other -> primitive : 1
with any other -> reflection : 1
any other primitive -> such : 1
other primitive such -> as : 1
primitive such as -> compiler : 1
such as compiler -> generates : 1
as compiler generates -> an : 1
compiler generates an -> empty : 1
generates an empty -> a : 1
generates an empty -> it : 1
empty a regular -> the : 1
a regular the -> compiler : 1
a regular the -> function : 1
compiler will now -> be : 1
will now be -> able : 1
now be able -> to : 1
able to generate -> two : 1
able to generate -> a : 1
to generate two -> different : 1
generate two different -> functions : 1
two different functions -> when : 1
different functions when -> one : 1
functions when one -> where : 1
when one where -> is : 1
one where is -> and : 1
where is and -> another : 1
is and another -> one : 1
and another one -> where : 1
another one where -> it : 1
one where it -> is : 1
is it may -> be : 1
it may be -> able : 1
may be able -> to : 1
to generate a -> third : 1
to generate a -> of : 1
generate a third -> if : 1
a third if -> the : 1
third if the -> type : 1
if the type -> is : 1
the type is -> neither : 1
the type is -> inferred : 1
the type is -> explicitly : 1
type is neither -> it : 1
is neither it -> will : 1
neither it will -> just : 1
it will just -> be : 1
will just be -> an : 1
just be an -> empty : 1
be an empty -> with : 1
an empty with -> runtime : 1
empty with runtime -> a : 1
with runtime a -> side : 1
runtime a side -> if : 1
a side if -> we : 1
side if we -> were : 1
if we were -> to : 4
were to implement -> the : 1
to implement the -> previous : 1
implement the previous -> example : 1
previous example with -> traditional : 1
example with traditional -> runtime : 1
with traditional runtime -> using : 1
traditional runtime using -> inheritance : 1
runtime using inheritance -> and : 1
using inheritance and -> virtual : 1
inheritance and virtual -> functions : 1
and virtual functions -> to : 1
virtual functions to -> achieve : 1
functions to achieve -> the : 1
same the implementation -> would : 1
the implementation would -> look : 1
implementation would look -> like : 1
look like the -> code : 1
like the code -> example : 1
the code example -> animalbase : 1
code example animalbase -> virtual : 1
example animalbase virtual -> auto : 1
animalbase virtual auto -> const : 1
virtual auto const -> void : 1
auto const void -> struct : 1
auto const void -> const : 1
const void struct -> bear : 1
void struct bear -> public : 1
struct bear public -> animalbase : 1
bear public animalbase -> auto : 1
public animalbase auto -> const : 2
animalbase auto const -> const : 2
const const override -> void : 2
const override void -> struct : 1
const override void -> auto : 1
override void struct -> duck : 1
void struct duck -> public : 1
struct duck public -> animalbase : 1
duck public animalbase -> auto : 1
override void auto -> objects : 1
void auto objects -> have : 1
auto objects have -> to : 1
objects have to -> be : 1
to be accessed -> using : 1
to be accessed -> by : 1
be accessed using -> pointers : 1
be accessed using -> the : 1
accessed using pointers -> or : 1
using pointers or -> and : 1
pointers or and -> the : 1
or and the -> type : 1
and the type -> is : 1
type is inferred -> at : 1
is inferred at -> which : 1
inferred at which -> results : 1
at which results -> in : 1
which results in -> a : 1
results in a -> performance : 1
in a performance -> loss : 1
a performance loss -> compared : 1
performance loss compared -> with : 1
loss compared with -> the : 1
with the where -> everything : 1
the where everything -> is : 1
where everything is -> available : 1
everything is available -> when : 1
is available when -> the : 1
available when the -> application : 1
when the application -> of : 1
when the application -> the : 2
when the application -> use : 1
the application of -> generic : 1
application of generic -> modulus : 1
using if example -> is : 1
if example is -> similar : 1
the previous but -> this : 1
previous but this -> time : 1
but this time -> we : 1
this time we -> will : 1
how to distinguish -> between : 1
distinguish between operators -> and : 1
between operators and -> global : 1
operators and global -> in : 1
and global in -> the : 1
global in the -> is : 1
global in the -> context : 1
in the is -> used : 1
the is used -> to : 1
used to get -> of : 1
get of integers -> used : 1
of integers used -> for : 1
integers used for -> floating : 1
used for floating -> point : 1
for floating point -> like : 1
floating point like -> to : 1
point like to -> generalize : 1
like to generalize -> our : 1
to generalize our -> code : 1
generalize our code -> base : 1
code base and -> create : 1
base and create -> a : 1
and create a -> generic : 1
and create a -> proxy : 1
create a generic -> modulus : 1
create a generic -> checked : 1
a generic modulus -> function : 1
modulus function called -> we : 1
function called we -> would : 1
called we would -> implement : 1
would implement with -> a : 1
implement with a -> regular : 1
a regular auto -> const : 1
regular auto const -> t : 1
auto const t -> if : 1
auto const t -> return : 1
const t if -> return : 1
t if return -> else : 1
if return else -> return : 1
if return else -> if : 1
return else return -> v : 2
return else return -> else : 1
return else return -> the : 1
return else return -> this : 1
else return v -> it : 1
else return v -> if : 1
return v it -> would : 1
v it would -> fail : 1
it would fail -> the : 1
would fail the -> compiler : 1
fail the compiler -> will : 1
following which will -> fail : 1
which will fail -> to : 1
will fail to -> const : 1
will fail to -> in : 1
will fail to -> see : 1
fail to const -> float : 1
to const float -> return : 1
const float return -> else : 1
const float return -> as : 1
float return else -> v : 1
return else v -> will : 1
else v will -> not : 1
v will not -> though : 1
will not though -> the : 1
not though the -> application : 1
though the application -> cannot : 1
the application cannot -> reach : 2
application cannot reach -> the : 1
application cannot reach -> as : 1
cannot reach the -> compiler : 1
reach the compiler -> will : 1
generate the v -> which : 1
the v which -> compliant : 1
v which compliant -> with : 1
which compliant with -> the : 1
the compiler care -> that : 1
compiler care that -> the : 1
care that the -> application : 1
that the application -> cannot : 1
that the application -> becomes : 1
cannot reach as -> it : 1
reach as it -> cannot : 1
as it cannot -> generate : 1
it cannot generate -> an : 1
cannot generate an -> assembly : 1
generate an assembly -> for : 1
an assembly for -> it : 1
assembly for it -> will : 1
for it will -> fail : 1
it will fail -> to : 1
fail to in -> the : 1
previous we change -> the : 1
change the statement -> to : 1
the statement to -> a : 1
statement to a -> auto : 1
to a auto -> const : 1
to a auto -> b : 1
a auto const -> t : 1
const t return -> else : 1
t return else -> return : 1
return v if -> t : 1
v if t -> is : 1
if t is -> a : 1
t is a -> floating : 1
is a floating -> this : 1
a floating this -> line : 1
floating this line -> is : 1
this line is -> when : 1
line is when -> the : 1
is when the -> function : 1
function is invoked -> with : 1
is invoked with -> a : 1
invoked with a -> floating : 1
invoked with a -> polymorphic : 1
point it will -> generate : 1
it will generate -> the : 1
the following function -> where : 1
the following function -> compiles : 1
the following function -> class : 1
following function where -> the : 1
function where the -> operation : 1
function where the -> number : 1
where the operation -> is : 1
the operation is -> const : 1
the operation is -> not : 2
the operation is -> omitted : 2
operation is const -> float : 1
is const float -> return : 1
float return as -> opposed : 1
return as opposed -> to : 1
opposed to regular -> homogenous : 1
to regular homogenous -> are : 1
regular homogenous are -> containers : 1
homogenous are containers -> containing : 1
are containers containing -> different : 1
containers containing different -> that : 1
containing different that -> in : 1
different that in -> homogenous : 1
that in homogenous -> such : 1
in homogenous such -> as : 1
homogenous such as -> and : 1
as and so -> every : 1
as and so -> in : 1
as and so -> on : 1
and so every -> element : 1
so every element -> is : 1
every element is -> of : 1
element is of -> the : 1
is of the -> same : 1
the same a -> heterogeneous : 1
the same a -> context : 1
the same a -> critical : 1
same a heterogeneous -> container : 1
a heterogeneous container -> is : 1
a heterogeneous container -> of : 2
heterogeneous container is -> a : 1
container where elements -> may : 1
where elements may -> have : 1
elements may have -> different : 1
may have different -> heterogenous : 1
have different heterogenous -> comes : 1
different heterogenous comes -> with : 1
heterogenous comes with -> two : 1
comes with two -> heterogeneous : 1
with two heterogeneous -> and : 1
two heterogeneous and -> as : 1
heterogeneous and as -> is : 1
and as is -> a : 1
as is a -> subset : 1
is a subset -> of : 1
a subset of -> with : 1
subset of with -> only : 1
of with only -> two : 1
with only two -> we : 1
only two we -> will : 1
two we will -> only : 1
only focus is -> a : 1
focus is a -> statically : 1
is a statically -> sized : 1
a statically sized -> heterogeneous : 1
statically sized heterogeneous -> container : 1
sized heterogeneous container -> that : 1
heterogeneous container that -> can : 1
container that can -> be : 1
can be declared -> to : 1
be declared to -> be : 1
declared to be -> of : 1
to be of -> any : 1
of any in -> contrast : 1
any in contrast -> to : 1
contrast to for -> its : 1
to for its -> size : 1
for its size -> cannot : 1
its size cannot -> change : 1
size cannot change -> at : 1
cannot change at -> you : 1
change at you -> cannot : 1
at you cannot -> add : 1
you cannot add -> or : 1
cannot add or -> remove : 1
add or remove -> tuple : 1
or remove tuple -> is : 1
remove tuple is -> constructed : 1
tuple is constructed -> with : 1
is constructed with -> its : 1
constructed with its -> member : 1
with its member -> types : 1
its member types -> explicitly : 1
member types explicitly -> declared : 1
types explicitly declared -> like : 1
explicitly declared like -> will : 1
declared like will -> make : 1
like will make -> the : 1
compiler generate a -> class : 1
generate a class -> which : 1
which can roughly -> be : 1
can roughly be -> viewed : 1
roughly be viewed -> like : 1
be viewed like -> tuple : 1
viewed like tuple -> int : 1
like tuple int -> bool : 1
tuple int bool -> with : 1
tuple int bool -> auto : 1
int bool with -> many : 1
bool with many -> other : 1
with many other -> classes : 1
many other classes -> in : 1
other classes in -> also : 1
classes in also -> has : 1
in also has -> a : 1
also has a -> corresponding : 1
has a corresponding -> which : 1
a corresponding which -> deduces : 1
corresponding which deduces -> the : 1
which deduces the -> types : 1
deduces the types -> automatically : 1
the types automatically -> from : 1
types automatically from -> the : 1
automatically from the -> tuple : 1
from the tuple -> you : 1
the tuple you -> can : 1
tuple you can -> using : 1
you can using -> we : 1
you can using -> reflection : 1
can using we -> can : 1
using we can -> make : 1
using we can -> then : 1
we can make -> the : 1
we can make -> sure : 1
the code a -> bit : 1
code a bit -> more : 1
a bit more -> readable : 1
bit more readable -> stated : 1
more readable stated -> from : 1
readable stated from -> and : 1
stated from and -> many : 1
from and many -> of : 1
and many of -> these : 1
many of these -> functions : 1
of these functions -> are : 1
functions are since -> classes : 1
are since classes -> can : 1
since classes can -> deduce : 1
classes can deduce -> these : 1
can deduce these -> types : 1
deduce these types -> from : 1
these types from -> the : 1
types from the -> the : 1
from the the -> members : 1
from the the -> figure : 1
the the members -> of : 2
of a individual -> elements : 1
a individual elements -> of : 1
individual elements of -> can : 1
elements of can -> be : 1
of can be -> accessed : 1
accessed using the -> global : 1
the global you -> may : 1
global you may -> wonder : 1
you may wonder -> why : 1
may wonder why -> the : 1
wonder why the -> members : 1
why the members -> be : 1
the members be -> accessed : 1
members be accessed -> like : 1
be accessed like -> a : 1
accessed like a -> regular : 1
a regular container -> with : 1
regular container with -> reason : 1
container with reason -> is : 1
with reason is -> that : 1
that a member -> function : 1
member function such -> is : 1
function such is -> only : 1
such is only -> allowed : 1
is only allowed -> to : 1
allowed to return -> one : 1
to return one -> whereas : 1
return one whereas -> a : 1
one whereas a -> tuple : 1
whereas a tuple -> consists : 1
a tuple consists -> of : 1
tuple consists of -> different : 1
consists of different -> types : 1
different types at -> different : 1
types at different -> the : 1
at different the -> templated : 1
different the templated -> global : 1
the templated global -> function : 1
templated global function -> is : 1
global function is -> used : 1
function is used -> with : 1
with the index -> as : 1
the index as -> a : 1
index as a -> template : 1
a template number -> auto : 1
template number auto -> str : 1
number auto str -> auto : 1
auto str auto -> boolean : 1
str auto boolean -> can : 1
auto boolean can -> imagine : 1
boolean can imagine -> the : 1
can imagine the -> function : 1
imagine the function -> being : 1
the function being -> implemented : 1
function being implemented -> roughly : 1
being implemented roughly -> like : 1
implemented roughly like -> typename : 1
roughly like typename -> if : 1
like typename if -> return : 1
typename if return -> else : 1
return else if -> return : 1
else if return -> means : 1
if return means -> that : 1
return means that -> when : 1
we create and -> access : 1
create and access -> a : 1
and access a -> tuple : 1
access a tuple -> like : 1
a tuple like -> tuple : 1
tuple like tuple -> auto : 1
like tuple auto -> value : 1
like tuple auto -> return : 1
tuple auto value -> compiler : 1
tuple auto value -> that : 1
auto value compiler -> roughly : 1
value compiler roughly -> generates : 1
compiler roughly generates -> the : 1
roughly generates the -> following : 1
following and the -> tuple : 1
and the tuple -> class : 1
the tuple class -> is : 1
tuple class is -> generated : 1
class is generated -> tuple : 1
is generated tuple -> int : 1
generated tuple int -> bool : 1
bool auto bool -> return : 1
bool return is -> then : 1
return is then -> generated : 1
is then generated -> to : 1
then generated to -> something : 1
generated to something -> like : 1
return the generated -> function : 1
return the generated -> assembler : 1
generated function is -> then : 1
function is then -> tuple : 1
is then tuple -> auto : 1
then tuple auto -> value : 1
auto value that -> this : 1
value that this -> example : 1
this example can -> merely : 1
example can merely -> be : 1
can merely be -> thought : 1
merely be thought -> of : 1
as a simplistic -> way : 1
a simplistic way -> to : 1
simplistic way to -> imagine : 1
way to imagine -> what : 1
to imagine what -> the : 1
imagine what the -> compiler : 1
what the compiler -> generates : 1
compiler generates when -> constructing : 1
generates when constructing -> the : 1
when constructing the -> interior : 1
constructing the interior -> of : 1
interior of is -> very : 1
of is very -> it : 1
is very it -> is : 1
very it is -> important : 1
to understand that -> class : 1
understand that class -> is : 1
that class is -> basically : 1
class is basically -> a : 1
is basically a -> simple : 1
basically a simple -> struct : 1
a simple struct -> whose : 1
simple struct whose -> members : 1
struct whose members -> can : 1
whose members can -> be : 1
be accessed by -> a : 2
be accessed by -> multiple : 1
by a also -> use : 1
a also use -> the : 1
also use the -> typename : 1
also use the -> condition : 1
use the typename -> as : 1
the typename as -> it : 1
typename as it -> is : 1
it is then -> used : 1
is then used -> like : 1
is then used -> for : 1
then used like -> number : 1
used like number -> str : 1
like number str -> is : 1
number str is -> only : 1
str is only -> possible : 1
is only possible -> if : 1
only possible if -> the : 1
possible if the -> specified : 1
if the specified -> type : 1
the specified type -> is : 1
specified type is -> contained : 1
type is contained -> once : 1
is contained once -> in : 1
contained once in -> the : 1
once in the -> a : 1
in the a -> perspective : 1
the a perspective -> it : 1
a perspective it -> may : 1
perspective it may -> seem : 1
may seem that -> can : 1
seem that can -> be : 1
can be iterated -> with : 1
can be iterated -> just : 1
be iterated with -> a : 1
iterated with a -> regular : 1
a regular just -> like : 1
regular just like -> any : 1
like any other -> as : 1
other as tpl -> v : 1
as tpl v -> be : 1
tpl v be -> i : 1
v be i -> also : 1
be i also -> think : 1
i also think -> that : 1
also think that -> most : 1
think that most -> programmers : 1
that most programmers -> have : 1
most programmers have -> tried : 1
programmers have tried -> something : 1
have tried something -> like : 1
tried something like -> this : 1
something like this -> at : 1
like this at -> some : 1
this at some -> point : 1
at some point -> only : 1
some point only -> to : 1
point only to -> notice : 1
only to notice -> that : 1
notice that it -> the : 1
that it the -> reason : 1
it the reason -> it : 1
not possible is -> that : 1
possible is that -> the : 1
that the type -> of : 1
type of only -> evaluated : 1
of only evaluated -> and : 1
only evaluated and -> contains : 1
evaluated and contains -> elements : 1
and contains elements -> of : 1
contains elements of -> different : 1
elements of different -> this : 1
elements of different -> types : 1
of different this -> code : 1
different this code -> simply : 1
this code simply -> does : 1
code simply does -> not : 1
simply does not -> same : 1
does not same -> goes : 1
not same goes -> for : 1
goes for regular -> as : 1
for regular as -> iterators : 1
regular as iterators -> mutate : 1
as iterators mutate -> the : 1
iterators mutate the -> type : 1
mutate the type -> pointed : 1
the type pointed -> does : 1
type pointed does -> not : 1
pointed does not -> provide : 1
not provide a -> or : 1
provide a or -> member : 1
a or member -> the : 1
or member the -> tuples : 1
member the tuples -> cannot : 1
the tuples cannot -> be : 1
tuples cannot be -> iterated : 1
cannot be iterated -> as : 1
be iterated as -> what : 1
iterated as what -> we : 1
as what we -> need : 1
is to to -> unroll : 1
to to unroll -> the : 1
to unroll the -> from : 1
unroll the from -> the : 1
from the previous -> we : 1
from the previous -> example : 1
previous we want -> the : 1
we want the -> compiler : 1
we want the -> parallelism : 1
want the compiler -> to : 1
to generate something -> like : 1
generate something like -> tpl : 1
something like tpl -> prints : 1
like tpl prints -> true : 1
tpl prints true -> you : 1
prints true you -> can : 1
true you can -> we : 1
can we iterate -> every : 1
we iterate every -> index : 1
iterate every index -> of : 1
every index of -> the : 1
index of the -> and : 1
and we need -> the : 1
and we need -> to : 1
need the number -> of : 1
number of contained -> in : 1
of contained in -> the : 1
contained in the -> as : 1
contained in the -> when : 1
contained in the -> auto : 1
as the tuple -> contains : 1
the tuple contains -> different : 1
tuple contains different -> we : 1
contains different we -> need : 1
different we need -> to : 1
write a metafunction -> that : 1
a metafunction that -> generates : 1
metafunction that generates -> a : 1
that generates a -> new : 1
type in the -> we : 1
type in the -> tuple : 1
type in the -> container : 1
type in the -> the : 1
type in the -> that : 1
the we start -> with : 1
start with a -> function : 1
start with a -> simple : 1
with a function -> that : 1
function that generates -> the : 1
that generates the -> call : 1
that generates the -> following : 1
generates the call -> for : 1
the call for -> a : 1
call for a -> specific : 1
specific it will -> look : 1
it will look -> like : 1
will look like -> typename : 1
look like typename -> typename : 1
like typename typename -> auto : 1
typename typename auto -> const : 3
typename typename auto -> srcit : 2
typename typename auto -> part : 1
void const v -> v : 1
const v v -> can : 1
v v can -> then : 1
v can then -> combine : 1
can then combine -> it : 1
then combine it -> with : 1
combine it with -> a : 1
it with a -> polymorphic : 1
it with a -> regular : 2
with a polymorphic -> as : 1
with a polymorphic -> meaning : 1
a polymorphic as -> you : 1
polymorphic as you -> learned : 1
as you learned -> in : 1
you learned in -> tpl : 1
learned in tpl -> auto : 1
in tpl auto -> func : 1
tpl auto func -> v : 1
auto func v -> prints : 1
func v prints -> true : 1
v prints true -> the : 1
v prints true -> it : 1
prints true the -> function : 1
true the function -> we : 1
the function we -> can : 1
function we can -> then : 1
we can then -> move : 1
we can then -> unfold : 1
can then move -> on : 1
then move on -> to : 1
on to the -> actual : 1
to the actual -> the : 1
actual the first -> thing : 1
first thing we -> need : 1
first thing we -> have : 1
thing we need -> is : 1
thing we need -> to : 1
need is the -> number : 1
need is the -> intended : 1
of values in -> the : 1
in the tuple -> as : 1
in the tuple -> and : 1
the tuple as -> a : 1
tuple as a -> this : 1
a this value -> can : 1
this value can -> be : 1
can be obtained -> by : 1
be obtained by -> the : 1
obtained by the -> type : 1
by the type -> using : 1
type using we -> can : 1
can then unfold -> the : 1
then unfold the -> iteration : 1
unfold the iteration -> by : 1
the iteration by -> creating : 1
iteration by creating -> a : 1
creating a similar -> but : 1
a similar but -> which : 1
similar but which -> takes : 1
but which takes -> different : 1
which takes different -> actions : 1
takes different actions -> depending : 1
different actions depending -> on : 1
actions depending on -> the : 1
the the index -> is : 1
index is equal -> to : 1
is equal to -> the : 4
to the tuple -> it : 1
the tuple it -> generates : 1
tuple it generates -> an : 1
it generates an -> empty : 1
an empty it -> executes : 1
empty it executes -> the : 1
it executes the -> lambda : 1
executes the lambda -> at : 1
the lambda at -> the : 1
lambda at the -> passed : 1
at the passed -> index : 1
the passed index -> and : 1
passed index and -> generates : 1
index and generates -> a : 1
new function with -> added : 1
function with added -> to : 1
with added to -> the : 1
added to the -> is : 1
how the code -> will : 1
how the code -> syntactically : 1
code will typename -> index : 1
will typename index -> const : 1
typename index const -> void : 1
index const void -> constexpr : 1
const void constexpr -> auto : 1
void constexpr auto -> you : 1
constexpr auto you -> can : 1
can the default -> index : 1
the default index -> is : 1
default index is -> set : 1
index is set -> to : 1
is set to -> zero : 1
is set to -> of : 1
set to zero -> so : 1
to zero so -> that : 1
zero so that -> we : 1
to specify it -> when : 1
specify it when -> this : 1
it when this -> can : 1
when this can -> then : 1
this can then -> be : 1
then be with -> the : 1
be with the -> lambda : 1
with the lambda -> directly : 1
the lambda directly -> in : 1
lambda directly in -> tpl : 1
directly in tpl -> v : 1
in tpl v -> prints : 1
tpl v prints -> true : 1
prints true it -> looks : 1
true it looks -> pretty : 1
it looks pretty -> similar : 1
looks pretty similar -> to : 1
pretty similar to -> the : 1
to the other -> algorithms : 1
algorithms for upon -> different : 1
for upon different -> algorithms : 1
upon different algorithms -> iterating : 1
different algorithms iterating -> a : 1
algorithms iterating a -> tuple : 1
iterating a tuple -> can : 1
a tuple can -> be : 1
tuple can be -> implemented : 1
a similar here -> is : 1
similar here is -> an : 1
of how tuples -> is : 1
how tuples is -> typename : 1
tuples is typename -> index : 1
is typename index -> auto : 1
typename index auto -> const : 1
index auto const -> bool : 1
auto const bool -> constexpr : 1
const bool constexpr -> auto : 1
bool constexpr auto -> if : 1
constexpr auto if -> bool : 1
constexpr auto if -> else : 1
auto if bool -> success : 1
if bool success -> return : 1
bool success return -> success : 1
success return success -> else : 1
return success else -> return : 1
success else return -> can : 1
else return can -> then : 1
return can then -> be : 1
return can then -> like : 1
used like tuple -> auto : 1
tuple auto return -> v : 1
return v iterates -> through : 1
v iterates through -> every : 1
iterates through every -> type : 1
through every type -> in : 1
the tuple and -> generates : 1
tuple and generates -> a : 1
generates a lambda -> function : 1
lambda function for -> the : 1
function for the -> element : 1
function for the -> is : 1
the element at -> the : 1
the current which -> it : 1
current which it -> then : 1
which it then -> compares : 1
it then compares -> with : 1
then compares with -> in : 1
compares with in -> this : 1
with in this -> will : 1
this will evaluate -> to : 1
will evaluate to -> as : 1
evaluate to as -> the : 1
as the last -> a : 1
the last a -> is : 1
last a is -> if : 1
a is if -> we : 1
we add an -> element : 1
an element of -> a : 1
element of a -> type : 1
a type that -> is : 2
type that is -> not : 2
type that is -> guaranteed : 1
is not comparable -> with : 1
not comparable with -> such : 1
comparable with such -> we : 1
with such we -> will : 1
such we will -> get : 1
will get a -> compilation : 2
get a compilation -> tuple : 1
get a compilation -> error : 1
a compilation tuple -> to : 1
compilation tuple to -> there : 1
tuple to there -> were : 1
to there were -> two : 1
there were two -> standard : 1
there were two -> types : 1
were two standard -> ways : 1
two standard ways -> of : 1
standard ways of -> accessing : 1
ways of accessing -> elements : 1
of accessing elements -> of : 1
accessing elements of -> a : 1
of a accessing -> single : 1
a accessing single -> the : 1
accessing single the -> static : 1
single the static -> function : 1
the static function -> was : 2
static function was -> accessing : 1
static function was -> they : 1
function was accessing -> multiple : 1
was accessing multiple -> the : 1
accessing multiple the -> static : 1
multiple the static -> function : 1
function was they -> both : 1
was they both -> the : 1
they both the -> syntax : 1
both the syntax -> was : 1
the syntax was -> for : 1
syntax was for -> performing : 1
was for performing -> such : 1
for performing such -> a : 1
performing such a -> simple : 1
a simple task -> was : 1
simple task was -> very : 1
task was very -> as : 1
was very as -> shown : 1
very as shown -> in : 1
following auto return -> using : 1
auto return using -> tpl : 1
return using tpl -> auto : 1
using tpl auto -> name : 1
tpl auto name -> auto : 1
auto name auto -> id : 1
name auto id -> auto : 2
auto id auto -> name : 2
id auto name -> id : 2
auto name id -> true : 2
name id true -> using : 1
name id true -> order : 1
name id true -> false : 1
id true using -> name : 1
true using name -> auto : 1
using name auto -> id : 1
id true order -> to : 1
true order to -> being : 1
order to being -> able : 1
to being able -> to : 1
able to perform -> this : 1
to perform this -> common : 1
to perform this -> calculation : 1
perform this common -> task : 1
this common task -> structured : 1
common task structured -> bindings : 1
task structured bindings -> were : 1
structured bindings were -> introduced : 1
bindings were introduced -> in : 1
introduced in using -> structured : 1
in using structured -> multiple : 1
using structured multiple -> variables : 1
structured multiple variables -> can : 1
multiple variables can -> be : 1
variables can be -> initialized : 1
can be initialized -> at : 1
be initialized at -> once : 1
initialized at once -> using : 1
at once using -> and : 1
once using and -> a : 1
using and a -> bracket : 1
and a bracket -> initializer : 1
a bracket initializer -> as : 1
bracket initializer as -> with : 1
initializer as with -> the : 1
as with the -> keyword : 1
with the keyword -> in : 1
keyword in you -> can : 1
can apply control -> over : 1
apply control over -> whether : 1
control over whether -> the : 1
over whether the -> variables : 1
whether the variables -> should : 1
the variables should -> be : 1
variables should be -> mutable : 1
should be mutable -> forward : 1
be mutable forward -> const : 1
mutable forward const -> or : 1
forward const or -> values : 1
const or values -> by : 1
or values by -> using : 1
values by using -> the : 1
using the corresponding -> in : 1
the corresponding in -> the : 1
corresponding in the -> following : 1
following example a -> structured : 1
example a structured -> binding : 1
a structured binding -> of : 1
structured binding of -> const : 1
binding of const -> references : 1
of const references -> is : 1
const references is -> name : 1
references is name -> id : 1
is name id -> bindings : 1
name id bindings -> can : 1
id bindings can -> also : 1
bindings can also -> be : 1
used to extract -> the : 1
extract the individual -> members : 1
the individual members -> of : 1
individual members of -> a : 1
of a tuple -> in : 1
a tuple in -> a : 1
tuple in a -> as : 1
in a as -> agents : 1
in a as -> long : 1
a as agents -> name : 1
as agents name -> id : 1
agents name id -> true : 1
id true false -> a : 1
true false a -> quick : 1
false a quick -> if : 1
a quick if -> you : 1
quick if you -> want : 1
want to return -> multiple : 1
to return multiple -> arguments : 1
return multiple arguments -> with : 1
multiple arguments with -> named : 1
arguments with named -> variables : 1
with named variables -> instead : 1
named variables instead -> of : 1
variables instead of -> tuple : 1
variables instead of -> when : 1
instead of tuple -> it : 1
of tuple it -> is : 1
tuple it is -> possible : 1
possible to return -> a : 1
to return a -> struct : 1
return a struct -> defined : 1
a struct defined -> inside : 1
struct defined inside -> a : 1
defined inside a -> use : 1
inside a use -> automatic : 1
a use automatic -> return : 1
use automatic return -> type : 1
automatic return type -> struct : 1
return type struct -> int : 1
type struct int -> bool : 1
struct int bool -> return : 1
int bool return -> b : 1
bool return b -> variadic : 1
return b variadic -> template : 1
b variadic template -> parameter : 1
template parameter variadic -> template : 1
parameter variadic template -> parameter : 1
template parameter packs -> enables : 1
parameter packs enables -> programmers : 1
packs enables programmers -> to : 1
programmers to create -> template : 1
to create template -> functions : 1
create template functions -> that : 1
template functions that -> can : 1
functions that can -> accept : 1
functions that can -> be : 1
that can accept -> any : 1
can accept any -> number : 1
accept any number -> of : 1
number of example -> of : 1
of example of -> a : 1
number of we -> were : 1
were to create -> a : 1
create a function -> that : 1
create a function -> with : 1
function that makes -> a : 1
that makes a -> string : 1
makes a string -> out : 1
makes a string -> of : 3
a string out -> of : 2
string out of -> any : 1
string out of -> every : 1
out of any -> number : 1
of any number -> of : 1
number of arguments -> without : 1
number of arguments -> to : 1
of arguments without -> variadic : 1
arguments without variadic -> template : 1
without variadic template -> parameter : 1
template parameter we -> would : 1
parameter we would -> have : 1
a separate function -> for : 1
a separate function -> requires : 1
separate function for -> every : 1
for every number -> of : 1
every number of -> makes : 1
number of makes -> a : 1
of makes a -> string : 1
string of by -> one : 1
string of by -> two : 1
string of by -> three : 1
of by one -> auto : 1
by one auto -> auto : 1
one auto auto -> sstr : 1
auto auto sstr -> sstr : 1
auto auto sstr -> create : 1
auto sstr sstr -> return : 1
sstr sstr return -> makes : 1
sstr return makes -> a : 1
return makes a -> string : 2
of by two -> arguments : 1
by two arguments -> template : 1
two arguments template -> typename : 1
arguments template typename -> auto : 1
const return makes -> a : 1
of by three -> arguments : 1
by three arguments -> typename : 1
three arguments typename -> typename : 1
arguments typename typename -> auto : 1
const const return -> and : 1
const return and -> so : 1
return and so -> on : 1
so on for -> as : 1
on for as -> many : 1
for as many -> parameters : 1
as many parameters -> we : 1
many parameters we -> might : 1
parameters we might -> need : 1
we might need -> is : 1
might need is -> the : 1
is the intended -> use : 1
the intended use -> of : 1
intended use of -> our : 1
use of our -> auto : 1
of our auto -> auto : 1
our auto auto -> we : 1
auto we require -> a : 1
we require a -> large : 1
require a large -> number : 1
a large number -> of : 3
large number of -> this : 1
large number of -> tasks : 1
large number of -> the : 1
number of this -> becomes : 1
of this becomes -> but : 1
this becomes but -> with : 1
becomes but with -> a : 1
but with a -> parameter : 1
with a parameter -> we : 1
a parameter we -> can : 1
parameter we can -> implement : 1
can implement this -> as : 1
implement this as -> a : 1
function that accepts -> an : 1
function that accepts -> minor : 1
that accepts an -> arbitrary : 1
accepts an arbitrary -> number : 1
an arbitrary number -> of : 3
arbitrary number of -> to : 1
arbitrary number of -> arguments : 1
arbitrary number of -> and : 1
variadic parameter parameter -> pack : 1
parameter parameter pack -> is : 1
parameter pack is -> identified : 1
pack is identified -> by : 1
is identified by -> putting : 1
identified by putting -> three : 1
by putting three -> dots : 1
putting three dots -> in : 1
three dots in -> front : 1
dots in front -> of : 1
type and three -> dots : 1
and three dots -> after : 1
three dots after -> the : 1
dots after the -> variadic : 1
after the variadic -> argument : 1
the variadic argument -> expands : 1
variadic argument expands -> the : 1
argument expands the -> with : 1
expands the with -> a : 1
with a comma -> in : 1
a comma in -> the : 1
comma in the -> syntactic : 1
in the syntactic -> a : 1
the syntactic a -> list : 1
syntactic a list -> of : 1
list of types -> indicates : 1
of types indicates -> that : 1
types indicates that -> the : 1
that the function -> deals : 1
that the function -> compiles : 1
that the function -> accepts : 1
the function deals -> with : 1
function deals with -> a : 1
with a list -> expands : 1
a list expands -> the : 1
list expands the -> pack : 1
expands the pack -> such : 1
the pack such -> that : 1
pack such that -> a : 1
such that a -> comma : 1
that a comma -> is : 1
a comma is -> added : 1
comma is added -> between : 1
is added between -> every : 1
added between every -> type : 1
between every type -> put : 1
every type put -> it : 1
type put it -> into : 1
put it into -> consider : 1
it into consider -> this : 1
into consider this -> auto : 1
consider this auto -> auto : 1
this auto auto -> tuple : 1
this auto auto -> thread : 1
this auto auto -> use : 1
auto auto tuple -> call : 1
auto tuple call -> the : 1
tuple call the -> preceding : 1
call the preceding -> function : 1
the preceding function -> like : 1
preceding function like -> that : 1
function like that -> the : 1
like that the -> compiler : 1
a function similar -> to : 1
function similar to -> const : 1
similar to const -> auto : 1
to const auto -> tuple : 1
const auto tuple -> is : 1
auto tuple is -> what : 1
tuple is what -> the : 1
what the individual -> parameter : 1
the individual parameter -> pack : 1
individual parameter pack -> parts : 1
parameter pack parts -> expand : 1
pack parts expand -> typename : 1
parts expand typename -> const : 1
expand typename const -> see : 1
typename const see -> how : 1
const see how -> we : 1
function with a -> variadic : 1
function with a -> floating : 1
with a variadic -> parameter : 1
variadic parameter further -> with : 1
parameter further with -> the : 1
further with the -> initial : 1
with the initial -> in : 1
the initial in -> order : 1
initial in order -> to : 1
order to create -> a : 1
create a string -> out : 1
out of every -> we : 1
of every we -> need : 1
every we need -> to : 1
to iterate the -> there : 1
to iterate the -> container : 1
to iterate the -> indices : 1
iterate the there -> is : 1
no way to -> directly : 1
no way to -> get : 1
no way to -> say : 1
no way to -> observe : 1
way to directly -> iterate : 1
to directly iterate -> a : 1
directly iterate a -> parameter : 1
iterate a parameter -> but : 1
a parameter but -> a : 1
parameter but a -> simple : 1
but a simple -> workaround : 1
a simple workaround -> would : 1
simple workaround would -> be : 1
workaround would be -> to : 1
be to make -> a : 1
make a tuple -> out : 1
a tuple out -> of : 1
tuple out of -> it : 1
out of it -> iterate : 1
of it iterate -> it : 1
it iterate it -> with : 1
iterate it with -> the : 1
the as auto -> auto : 1
as auto auto -> sstr : 1
auto sstr create -> a : 1
sstr create a -> tuple : 1
create a tuple -> of : 1
a tuple of -> the : 1
a tuple of -> references : 2
tuple of the -> variadic : 1
of the variadic -> parameter : 1
the variadic parameter -> pack : 1
variadic parameter pack -> auto : 1
parameter pack auto -> tuple : 1
pack auto tuple -> iterate : 1
auto tuple iterate -> the : 1
tuple iterate the -> tuple : 1
iterate the tuple -> sstr : 1
the tuple sstr -> return : 1
tuple sstr return -> converted : 1
sstr return converted -> the : 1
return converted the -> parameter : 1
converted the parameter -> pack : 1
the parameter pack -> to : 1
parameter pack to -> a : 1
pack to a -> tuple : 1
to a tuple -> with : 1
a tuple with -> iterated : 1
tuple with iterated -> it : 1
with iterated it -> with : 1
iterated it with -> heterogenous : 1
it with heterogenous -> seen : 1
with heterogenous seen -> in : 1
heterogenous seen in -> the : 1
the preceding is -> a : 1
the preceding is -> waits : 1
preceding is a -> heterogenous : 1
is a heterogenous -> container : 1
heterogenous container with -> a : 1
with a fixed -> size : 1
size and fixed -> element : 1
and fixed element -> more : 1
fixed element more -> or : 1
element more or -> like : 1
more or like -> a : 1
or like a -> regular : 1
a regular struct -> but : 1
regular struct but -> without : 1
struct but without -> named : 1
but without named -> member : 1
without named member -> can : 1
named member can -> we : 1
member can we -> expand : 1
can we expand -> upon : 1
we expand upon -> this : 1
expand upon this -> to : 2
upon this to -> create : 1
upon this to -> a : 1
this to create -> a : 1
create a container -> with : 1
with a variable -> size : 1
a variable size -> and : 1
variable size and -> so : 1
size and so -> but : 1
and so but -> with : 1
and so but -> it : 1
so but with -> the : 1
ability to store -> different : 1
ability to store -> any : 1
to store different -> as : 1
store different as -> the : 1
different as the -> size : 1
the container changes -> at : 1
container changes at -> we : 1
changes at we -> cannot : 1
at we cannot -> use : 1
we cannot use -> programming : 1
cannot use programming -> to : 1
use programming to -> generate : 1
programming to generate -> as : 1
to generate as -> the : 1
generate as the -> base : 1
a heterogenous that -> was : 1
heterogenous that was -> added : 1
that was added -> in : 1
was added in -> if : 1
if your compiler -> does : 1
your compiler does -> not : 1
compiler does not -> include : 1
compiler does not -> know : 1
does not include -> you : 1
not include you -> can : 1
include you can -> use : 1
boost library simplest -> solution : 1
library simplest solution -> is : 1
simplest solution is -> to : 1
to use as -> the : 1
use as the -> base : 1
the base the -> object : 1
base the object -> can : 1
object can store -> any : 1
any type of -> value : 1
any type of -> a : 1
type of value -> in : 1
of value in -> container : 1
value in container -> has : 1
in container has -> some : 1
container has some -> every : 1
has some every -> time : 1
some every time -> a : 1
every time a -> value : 1
time a value -> in : 1
a value in -> it : 1
value in it -> is : 1
in it is -> the : 1
in it is -> theoretically : 1
in it is -> a : 1
is the type -> must : 1
is the type -> and : 1
the type must -> be : 1
type must be -> tested : 1
must be tested -> for : 1
be tested for -> at : 1
tested for at -> in : 1
for at in -> other : 1
at in other -> we : 1
in other we -> completely : 1
other we completely -> lose : 1
we completely lose -> the : 1
completely lose the -> type : 1
lose the type -> information : 1
the type information -> of : 1
type information of -> the : 1
information of the -> stored : 1
of the stored -> value : 1
the stored value -> at : 1
stored value at -> compile : 1
compile we have -> to : 1
rely on runtime -> type : 1
on runtime type -> checks : 1
runtime type checks -> for : 1
type checks for -> the : 1
checks for the -> we : 1
for the we -> would : 1
to iterate our -> we : 1
iterate our we -> need : 1
our we need -> to : 1
to explicitly ask -> every : 1
explicitly ask every -> you : 1
ask every you -> are : 1
every you are -> if : 1
you are if -> you : 1
are if you -> are : 1
you are do -> is : 1
are do is -> not : 1
do is not -> as : 1
is not as -> it : 1
as it requires -> repeated : 1
as it requires -> to : 1
it requires repeated -> source : 1
requires repeated source -> and : 1
repeated source and -> it : 1
source and it -> is : 1
is also less -> using : 1
also less using -> other : 1
less using other -> which : 1
using other which -> we : 1
other which we -> will : 1
we will describe -> later : 1
will describe later -> in : 1
describe later in -> the : 1
following example the -> type : 1
example the type -> is : 1
type is explicitly -> tested : 1
is explicitly tested -> for : 1
explicitly tested for -> and : 1
tested for and -> casted : 1
for and casted -> const : 1
and casted const -> value : 1
casted const value -> else : 1
const value else -> const : 2
value else const -> value : 2
else const value -> else : 1
else const value -> simply : 1
const value simply -> cannot : 1
value simply cannot -> print : 1
simply cannot print -> it : 1
cannot print it -> with : 1
print it with -> a : 1
a regular stream -> since : 1
regular stream since -> the : 1
stream since the -> object : 1
since the object -> has : 1
the object has -> no : 1
object has no -> idea : 1
no idea of -> how : 1
idea of how -> to : 1
how to access -> its : 1
to access its -> stored : 1
access its stored -> the : 1
its stored the -> following : 1
stored the following -> code : 1
following code does -> not : 1
the compiler does -> not : 1
the compiler does -> all : 1
does not know -> what : 1
not know what -> is : 1
know what is -> in : 1
what is in -> will : 1
is in will -> not : 1
in will not -> we : 1
will not we -> can : 1
not we can -> trade : 1
we can trade -> off : 1
can trade off -> the : 1
trade off the -> ability : 1
off the ability -> to : 1
to store any -> type : 1
any type in -> the : 1
the container concentrate -> on : 1
container concentrate on -> a : 1
concentrate on a -> fixed : 1
on a fixed -> set : 1
a fixed set -> of : 1
fixed set of -> types : 1
set of types -> declared : 1
of types declared -> at : 1
types declared at -> the : 1
declared at the -> container : 1
at the container -> then : 1
the container then -> is : 1
container then is -> a : 1
then is a -> better : 1
is a better -> two : 1
a better two -> main : 1
better two main -> advantages : 1
two main advantages -> over : 1
main advantages over -> does : 1
advantages over does -> not : 1
over does not -> store : 1
does not store -> its : 1
not store its -> contained : 1
store its contained -> type : 1
its contained type -> on : 1
contained type on -> the : 1
the heap can -> be : 1
heap can be -> invoked : 1
can be invoked -> with : 1
can be invoked -> on : 1
be invoked with -> a : 1
a polymorphic meaning -> you : 1
polymorphic meaning you -> explicitly : 1
meaning you explicitly -> have : 1
you explicitly have -> to : 1
explicitly have to -> know : 1
have to know -> its : 1
to know its -> currently : 1
know its currently -> contained : 1
its currently contained -> type : 1
currently contained type -> about : 1
contained type about -> this : 1
type about this -> in : 1
about this in -> the : 1
in the later -> sections : 1
the later sections -> of : 1
later sections of -> this : 1
sections of this -> works : 1
of this works -> in : 1
this works in -> a : 1
in a somewhat -> similar : 1
a somewhat similar -> manner : 1
somewhat similar manner -> to : 1
similar manner to -> a : 1
manner to a -> except : 1
to a except -> that : 1
a except that -> it : 1
except that it -> only : 1
that it only -> stores : 1
it only stores -> one : 1
only stores one -> object : 1
stores one object -> at : 1
one object at -> a : 1
a the contained -> type : 1
the contained type -> and : 1
contained type and -> value : 1
contained type and -> in : 1
type and value -> is : 1
type and value -> you : 1
and value is -> the : 1
and value you -> assigned : 1
value you assigned -> it : 1
you assigned it -> look : 1
assigned it look -> at : 1
it look at -> the : 1
at the cdpaligncenter -> of : 1
the cdpaligncenter of -> types : 1
cdpaligncenter of types -> versus : 1
of types versus -> variant : 1
types versus variant -> of : 1
versus variant of -> an : 1
variant of an -> example : 1
of an example -> of : 1
example of varianttype -> auto : 1
of varianttype auto -> v : 1
varianttype auto v -> the : 1
v the variant -> is : 1
the variant is -> empty : 1
the variant is -> equal : 1
variant is empty -> v : 1
is empty v -> v : 1
empty v v -> holds : 1
v v holds -> an : 1
v v holds -> a : 2
v holds an -> v : 1
holds an v -> v : 1
an v v -> holds : 1
v holds a -> the : 2
holds a the -> integer : 1
holds a the -> is : 1
a the integer -> is : 1
integer is overwritten -> v : 1
is overwritten v -> v : 1
overwritten v v -> holds : 1
a the is -> accessing : 1
the is accessing -> variables : 1
is accessing variables -> in : 1
accessing variables in -> the : 1
the we use -> the : 1
use the global -> function : 1
global function as -> you : 1
function as you -> might : 1
as you might -> have : 1
might have we -> have : 1
have we have -> to : 1
use our main -> companion : 1
our main companion -> when : 1
main companion when -> dealing : 1
companion when dealing -> with : 1
dealing with heterogeneous -> the : 1
with heterogeneous the -> polymorphic : 1
heterogeneous the polymorphic -> compiler : 1
the polymorphic compiler -> then : 1
polymorphic compiler then -> generates : 1
compiler then generates -> a : 1
then generates a -> regular : 1
generates a regular -> of : 1
a regular of -> the : 1
regular of the -> for : 1
of the for -> every : 1
of the for -> v : 1
the for every -> type : 1
every type contained -> in : 1
type contained in -> the : 1
in the when -> invoking : 1
the when invoking -> the : 1
when invoking the -> lambda : 1
invoking the lambda -> and : 1
the lambda and -> variant : 1
lambda and variant -> type : 1
and variant type -> in : 1
variant type in -> the : 1
the compiler would -> generate : 1
the compiler would -> try : 1
compiler would generate -> code : 1
would generate code -> roughly : 1
generate code roughly -> similar : 1
code roughly similar -> to : 1
roughly similar to -> the : 1
the following snippet -> where : 1
following snippet where -> polymorphic : 1
snippet where polymorphic -> lambda : 1
where polymorphic lambda -> is : 1
is converted to -> a : 1
regular class for -> every : 1
class for every -> type : 1
in the that -> as : 1
the that as -> very : 1
that as very -> complex : 1
as very complex -> code : 1
very complex code -> are : 1
complex code are -> involved : 1
code are involved -> in : 1
are involved in -> expanding : 1
involved in expanding -> both : 1
in expanding both -> a : 1
expanding both a -> polymorphic : 1
both a polymorphic -> lambda : 1
polymorphic lambda and -> the : 1
lambda and the -> this : 1
the this piece -> of : 1
this piece of -> code : 2
this piece of -> we : 1
code is heavily -> still : 1
is heavily still -> it : 1
heavily still it -> gives : 1
still it gives -> a : 1
it gives a -> clear : 1
gives a clear -> view : 1
a clear view -> of : 1
clear view of -> what : 1
view of what -> happens : 1
of what happens -> when : 1
happens when you -> invoke : 1
when you invoke -> functorimpl : 1
you invoke functorimpl -> auto : 1
invoke functorimpl auto -> auto : 1
functorimpl auto auto -> auto : 1
auto auto function -> is : 1
auto function is -> expanded : 1
function is expanded -> to : 1
is expanded to -> an : 1
is expanded to -> something : 1
expanded to an -> chain : 1
to an chain -> corresponding : 1
an chain corresponding -> to : 1
chain corresponding to -> the : 1
corresponding to the -> types : 1
corresponding to the -> number : 1
to the types -> in : 1
the types in -> the : 1
in the const -> return : 1
the const return -> else : 1
the const return -> the : 1
the const return -> we : 1
const return else -> return : 1
else return else -> return : 1
else return the -> actual : 1
actual function size -> of : 1
function size of -> the : 1
of the variant -> is : 1
variant is equal -> to : 1
to the largest -> object : 1
the largest object -> type : 1
largest object type -> declared : 1
object type declared -> as : 1
type declared as -> its : 1
declared as its -> in : 1
as its in -> the : 1
its in the -> preceding : 1
preceding example it -> would : 1
example it would -> be : 1
container of that -> we : 1
have a variant -> which : 1
a variant which -> can : 1
variant which can -> store : 1
which can store -> any : 1
of a provided -> we : 1
a provided we -> can : 1
provided we can -> expand : 1
we can expand -> upon : 1
can expand upon -> this : 1
this to a -> heterogeneous : 1
to a heterogeneous -> we : 1
a heterogeneous we -> do : 1
heterogeneous we do -> this : 1
we do this -> by : 1
we do this -> while : 1
do this by -> simply : 1
do this by -> using : 1
this by simply -> creating : 1
by simply creating -> a : 1
simply creating a -> of : 1
creating a of -> our : 1
a of our -> varianttype : 1
of our varianttype -> auto : 1
our varianttype auto -> container : 1
varianttype auto container -> can : 1
auto container can -> now : 1
container can now -> push : 1
can now push -> elements : 1
now push elements -> of : 1
push elements of -> different : 1
different types to -> our : 1
types to our -> am : 1
to our am -> a : 1
our am a -> am : 1
am a am -> also : 1
a am also -> a : 1
am also a -> vector : 1
also a vector -> will : 1
a vector will -> now : 1
vector will now -> look : 1
now look in -> where : 1
look in where -> every : 1
in where every -> element : 1
where every element -> in : 1
every element in -> the : 1
the vector has -> the : 1
vector has the -> size : 1
has the size -> of : 1
this case cdpaligncenter -> of : 1
case cdpaligncenter of -> we : 1
cdpaligncenter of we -> can : 1
of we can -> also : 1
can also or -> modify : 1
also or modify -> the : 1
or modify the -> container : 1
modify the container -> in : 1
container in any -> other : 1
in any other -> way : 1
any other way -> the : 1
other way the -> container : 1
way the container -> the : 1
container the values -> in : 1
our variant that -> we : 1
variant that we -> have : 1
have the boilerplate -> for : 1
the boilerplate for -> a : 1
boilerplate for a -> heterogeneous : 1
for a heterogeneous -> container : 1
heterogeneous container of -> dynamic : 1
heterogeneous container of -> here : 1
container of dynamic -> see : 1
of dynamic see -> how : 1
dynamic see how -> we : 1
can use it -> like : 3
use it like -> a : 1
use it like -> the : 1
use it like -> africa : 1
it like a -> regular : 1
a regular a -> heterogeneous : 1
regular a heterogeneous -> container : 1
container of here -> we : 1
of here we -> construct : 1
here we construct -> a : 1
we construct a -> different : 1
construct a different -> note : 1
a different note -> that : 1
different note that -> the : 1
that the initializer -> list : 1
the initializer list -> contains : 1
initializer list contains -> different : 1
list contains different -> using : 1
contains different using -> varianttype : 1
different using varianttype -> auto : 1
using varianttype auto -> c : 1
varianttype auto c -> true : 1
auto c true -> the : 1
c true the -> content : 1
true the content -> by : 1
the content by -> iterating : 1
content by iterating -> with : 1
by iterating with -> a : 1
iterating with a -> regular : 1
a regular for -> to : 1
regular for to -> iterate : 1
for to iterate -> the : 1
iterate the container -> with : 1
the container with -> a : 1
regular we utilize -> a : 1
we utilize a -> polymorphic : 1
utilize a polymorphic -> the : 1
a polymorphic the -> global : 1
polymorphic the global -> care : 1
the global care -> of : 1
global care of -> the : 1
care of the -> type : 1
type the example -> prints : 1
the example prints -> each : 1
example prints each -> value : 1
prints each value -> independent : 1
each value independent -> of : 1
value independent of -> the : 1
the for v -> what : 1
for v what -> types : 1
v what types -> are : 1
what types are -> in : 1
types are in -> the : 1
are in the -> here : 1
in the here -> we : 1
the here we -> inspect : 1
here we inspect -> each : 1
we inspect each -> element : 1
inspect each element -> of : 1
each element of -> the : 1
the container by -> this : 1
container by this -> is : 1
by this is -> achieved : 1
global function which -> returns : 1
if the variant -> currently : 2
the variant currently -> holds : 1
the variant currently -> hold : 1
variant currently holds -> the : 1
currently holds the -> type : 1
holds the type -> asked : 1
the type asked -> the : 1
type asked the -> example : 1
asked the example -> counts : 1
the example counts -> the : 1
example counts the -> number : 1
number of booleans -> currently : 1
of booleans currently -> contained : 1
booleans currently contained -> in : 1
currently contained in -> the : 1
the auto return -> content : 1
auto return content -> by : 1
return content by -> both : 1
content by both -> contained : 1
by both contained -> type : 1
both contained type -> and : 1
type and in -> this : 1
and in this -> example : 1
in this example -> we : 2
in this example -> also : 1
in this example -> how : 1
in this example -> by : 1
this example we -> inspect : 1
this example we -> will : 1
example we inspect -> the : 1
we inspect the -> container : 1
inspect the container -> both : 1
the container both -> for : 1
container both for -> type : 1
both for type -> and : 1
for type and -> the : 1
and the value -> by : 1
the value by -> combining : 1
value by combining -> example : 1
by combining example -> inspects : 1
combining example inspects -> if : 1
example inspects if -> the : 1
inspects if the -> container : 1
if the container -> contains : 1
the container contains -> a : 1
container contains a -> with : 1
contains a with -> the : 1
with the value -> auto : 1
the value auto -> return : 1
value auto return -> function : 1
auto return function -> global : 1
return function global -> be : 1
function global be -> used : 1
global be used -> for : 1
used for all -> of : 1
for all of -> and : 1
all of and -> is : 1
used with an -> as : 1
with an as -> returns : 1
an as returns -> the : 1
as returns the -> value : 1
returns the value -> at : 1
at the corresponding -> index : 1
the corresponding index -> in : 1
corresponding index in -> a : 1
in a or -> is : 2
a or is -> used : 1
a or is -> in : 1
or is used -> with : 1
with a as -> in : 1
a as in -> the : 1
the corresponding value -> in : 1
corresponding value in -> a : 1
or is in -> the : 1
of an exception -> is : 1
is thrown if -> the : 1
thrown if the -> variant : 1
variant currently hold -> that : 1
currently hold that -> note : 1
hold that note -> that : 1
that note that -> if : 1
note that if -> is : 1
that if is -> a : 1
a and is -> contained : 1
and is contained -> more : 1
is contained more -> than : 1
contained more than -> you : 1
more than you -> have : 1
than you have -> to : 1
the index to -> access : 1
index to access -> the : 1
access the world -> examples : 1
the world examples -> of : 1
of metaprogramming can -> appear : 1
metaprogramming can appear -> to : 1
can appear to -> be : 1
appear to be -> very : 1
appear to be -> semantically : 1
to be very -> so : 1
be very so -> in : 1
order to demonstrate -> its : 1
to demonstrate its -> usefulness : 1
demonstrate its usefulness -> like : 1
its usefulness like -> to : 1
usefulness like to -> provide : 1
like to provide -> some : 1
to provide some -> examples : 1
provide some examples -> which : 1
some examples which -> not : 1
examples which not -> only : 1
which not only -> demonstrate : 1
not only demonstrate -> the : 1
only demonstrate the -> syntax : 1
demonstrate the syntax -> of : 1
syntax of but -> how : 1
of but how -> it : 1
but how it -> can : 1
how it can -> be : 1
used in term -> the : 1
in term the -> ability : 1
term the ability -> to : 1
ability to inspect -> a : 1
to inspect a -> class : 1
inspect a class -> without : 1
a class without -> knowing : 1
a class without -> reflection : 1
class without knowing -> anything : 1
without knowing anything -> about : 1
knowing anything about -> its : 1
anything about its -> this : 1
about its this -> case : 1
its this case -> we : 1
this case we -> are : 1
this case we -> simply : 1
this case we -> will : 1
case we are -> going : 1
going to limit -> the : 1
to limit the -> reflection : 1
limit the reflection -> to : 1
the reflection to -> give : 1
reflection to give -> classes : 1
to give classes -> the : 1
give classes the -> ability : 1
classes the ability -> to : 2
ability to iterate -> their : 1
to iterate their -> members : 1
iterate their members -> just : 1
their members just -> like : 1
members just like -> we : 1
just like we -> can : 1
like we can -> iterate : 1
can iterate the -> members : 1
iterate the members -> of : 1
of a by -> using : 1
by using reflection -> we : 1
using reflection we -> can : 1
reflection we can -> create : 1
can create generic -> functions : 1
create generic functions -> for : 1
generic functions for -> serialization : 1
functions for serialization -> or : 1
for serialization or -> logging : 1
serialization or logging -> which : 1
or logging which -> automatically : 1
logging which automatically -> works : 1
which automatically works -> with : 1
automatically works with -> any : 1
works with any -> this : 1
with any this -> reduces : 1
any this reduces -> large : 1
this reduces large -> amounts : 1
reduces large amounts -> of : 1
large amounts of -> boiler : 1
amounts of boiler -> plate : 1
of boiler plate -> code : 1
of boiler plate -> a : 1
boiler plate code -> traditionally : 1
plate code traditionally -> required : 1
code traditionally required -> for : 1
traditionally required for -> classes : 1
required for classes -> in : 1
for classes in -> a : 1
classes in a -> class : 1
reflect its contrast -> to : 1
its contrast to -> many : 1
contrast to many -> other : 1
many other programming -> does : 1
other programming does -> not : 1
programming does not -> have : 1
not have built -> in : 1
have built in -> which : 1
built in which -> means : 1
which means we -> have : 1
means we have -> to : 1
to write the -> reflection : 1
to write the -> value : 1
write the reflection -> functionality : 1
the reflection functionality -> in : 1
reflection functionality in -> this : 1
functionality in this -> case : 1
case we simply -> expose : 1
we simply expose -> the : 1
simply expose the -> member : 1
expose the member -> variables : 1
member variables via -> a : 1
variables via a -> member : 1
via a member -> function : 1
member function called -> which : 1
function called which -> simply : 1
called which simply -> returns : 1
which simply returns -> a : 1
simply returns a -> tuple : 1
returns a tuple -> of : 1
tuple of references -> to : 2
of references to -> the : 1
of references to -> its : 1
references to the -> member : 1
variables by invoking -> town : 1
by invoking town -> const : 1
invoking town const -> auto : 1
town const auto -> const : 1
auto const libraries -> which : 1
const libraries which -> simplifies : 1
which simplifies are -> quite : 1
simplifies are quite -> a : 1
a few attempts -> in : 1
few attempts in -> the : 1
attempts in the -> library : 1
the library world -> to : 1
library world to -> simplify : 1
world to simplify -> the : 1
simplify the creation -> of : 2
the creation of -> one : 1
the creation of -> bulk : 1
the creation of -> output : 1
creation of one -> example : 1
of one example -> is : 1
one example is -> the : 1
example is the -> by : 1
example is the -> stream : 1
is the by -> which : 1
the by which -> gives : 1
by which gives -> classes : 1
which gives classes -> reflection : 1
gives classes reflection -> capabilities : 1
classes reflection capabilities -> via : 1
reflection capabilities via -> a : 1
capabilities via a -> simple : 1
via a simple -> has : 1
a simple has -> also : 1
simple has also -> added : 1
has also added -> the : 1
also added the -> and : 1
added the and -> flat : 1
the and flat -> by : 1
and flat by -> which : 1
flat by which -> reflects : 1
by which reflects -> public : 1
which reflects public -> content : 1
reflects public content -> of : 1
public content of -> as : 1
content of as -> long : 1
of as long -> as : 1
long as all -> members : 1
as all members -> are : 1
all members are -> simple : 1
members are simple -> for : 1
are simple for -> in : 1
simple for in -> this : 1
for in this -> example : 1
example we will -> only : 1
only use our -> the : 1
use our the -> that : 1
our the that -> the : 1
that the class -> has : 1
that the class -> does : 1
ability to reflect -> its : 1
to reflect its -> member : 1
reflect its member -> we : 1
its member we -> can : 1
we can automate -> the : 1
can automate the -> creation : 1
automate the creation -> of : 1
creation of bulk -> functionality : 1
of bulk functionality -> which : 1
bulk functionality which -> would : 1
functionality which would -> otherwise : 1
which would otherwise -> require : 1
would otherwise require -> us : 1
otherwise require us -> to : 1
require us to -> retype : 1
us to retype -> every : 1
to retype every -> member : 1
retype every member -> as : 1
every member as -> you : 1
member as you -> automatically : 1
as you automatically -> generates : 1
you automatically generates -> constructors : 1
automatically generates constructors -> and : 1
generates constructors and -> assignment : 1
constructors and assignment -> but : 1
and assignment but -> other : 1
assignment but other -> common : 1
but other common -> such : 1
other common such -> as : 1
common such as -> equality : 1
such as equality -> and : 1
as equality and -> less : 1
equality and less -> than : 2
and less than -> are : 1
and less than -> comparison : 1
less than are -> required : 1
than are required -> to : 1
required to be -> implemented : 1
to be implemented -> by : 1
to be implemented -> as : 1
by the town -> auto : 1
the town auto -> const : 1
town auto const -> auto : 1
auto const addition -> to : 1
const addition to -> member : 1
addition to member -> another : 1
to member another -> bulk : 1
member another bulk -> function : 1
another bulk function -> in : 1
bulk function in -> is : 1
function in is -> to : 1
in is to -> print : 1
is to print -> its : 1
to print its -> content : 2
print its content -> to : 2
its content to -> a : 2
content to a -> stream : 1
content to a -> or : 1
to a stream -> in : 1
a stream in -> order : 1
stream in order -> to : 1
order to print -> its : 1
to a or -> more : 1
a or more -> log : 1
or more log -> it : 1
more log it -> in : 1
log it in -> an : 1
it in an -> application : 1
in an application -> overloading : 1
in an application -> with : 1
an application overloading -> and : 1
application overloading and -> using : 1
overloading and using -> the : 1
the we learned -> we : 1
we learned we -> can : 1
learned we can -> simplify : 1
we can simplify -> the : 1
can simplify the -> creation : 1
creation of output -> for : 1
of output for -> a : 1
output for a -> class : 1
a class like -> const : 1
class like const -> ostr : 1
like const ostr -> m : 1
const ostr m -> return : 2
ostr m return -> the : 1
ostr m return -> explained : 1
m return the -> class : 1
with any v -> prints : 1
any v prints -> by : 1
v prints by -> reflecting : 1
prints by reflecting -> our : 1
by reflecting our -> class : 1
reflecting our class -> members : 1
our class members -> via : 1
class members via -> a : 1
members via a -> tuple : 1
via a tuple -> we : 1
a tuple we -> only : 1
tuple we only -> have : 1
we only have -> to : 1
we only have -> one : 1
only have to -> update : 1
have to update -> our : 1
to update our -> reflect : 1
update our reflect -> function : 1
our reflect function -> when : 1
reflect function when -> members : 1
function when members -> are : 1
when members are -> from : 1
members are from -> our : 1
are from our -> instead : 1
from our instead -> of : 1
our instead of -> updating : 1
instead of updating -> every : 1
of updating every -> function : 1
updating every function -> iterating : 1
every function iterating -> all : 1
function iterating all -> member : 1
iterating all member -> the : 1
all member the -> assembler : 1
member the assembler -> output : 1
of the ensure -> that : 1
the ensure that -> we : 1
ensure that we -> do : 1
ensure that we -> release : 2
ensure that we -> avoid : 1
do not lose -> any : 1
not lose any -> runtime : 1
lose any runtime -> compare : 1
any runtime compare -> the : 1
runtime compare the -> assembler : 1
compare the assembler -> output : 1
output of our -> class : 1
of our class -> with : 1
our class with -> an : 1
with an where -> the : 1
an where the -> operator : 1
where the operator -> has : 1
the operator has -> been : 1
operator has been -> handcrafted : 1
has been handcrafted -> like : 1
been handcrafted like -> const : 1
handcrafted like const -> return : 1
like const return -> we : 2
like const return -> can : 1
return we create -> a : 1
create a simple -> function : 1
function which takes -> two : 1
which takes two -> references : 1
takes two references -> and : 1
two references and -> returns : 1
references and returns -> the : 1
and returns the -> result : 1
returns the result -> of : 1
result of the -> const : 1
result of the -> distance : 1
result of the -> execution : 1
of the const -> return : 1
the generated assembler -> output : 1
the generated assembler -> is : 1
generated assembler output -> this : 1
assembler output this -> case : 1
output this case -> from : 1
this case from -> gcc : 1
case from gcc -> with : 1
from gcc with -> optimization : 1
gcc with optimization -> level : 1
with optimization level -> we : 1
optimization level we -> see : 1
level we see -> that : 1
we see that -> the : 1
generated assembler is -> exactly : 1
assembler is exactly -> the : 1
is exactly the -> cdpaligncenter : 1
is exactly the -> same : 1
exactly the cdpaligncenter -> operators : 1
the cdpaligncenter operators -> and : 1
cdpaligncenter operators and -> reflected : 1
operators and reflected -> operators : 1
and reflected operators -> results : 1
reflected operators results -> in : 1
operators results in -> same : 1
results in same -> cdpalignleft : 1
in same cdpalignleft -> this : 1
same cdpalignleft this -> in : 1
cdpalignleft this in -> our : 1
this in our -> we : 1
in our we -> can : 1
in our we -> only : 1
our we can -> rest : 1
we can rest -> assured : 1
can rest assured -> that : 1
rest assured that -> the : 1
assured that the -> reflection : 1
that the reflection -> approach : 1
the reflection approach -> cost : 1
reflection approach cost -> us : 1
approach cost us -> any : 1
cost us any -> runtime : 1
us any runtime -> overloading : 1
any runtime overloading -> global : 1
runtime overloading global -> that : 1
overloading global that -> we : 1
global that we -> have : 1
have a mechanism -> to : 1
a mechanism to -> write : 1
mechanism to write -> bulk : 1
to write bulk -> functions : 1
write bulk functions -> using : 1
bulk functions using -> reflection : 1
functions using reflection -> rather : 1
using reflection rather -> than : 1
reflection rather than -> manually : 1
rather than manually -> typing : 1
than manually typing -> each : 1
manually typing each -> we : 1
typing each we -> still : 1
each we still -> need : 1
need to type -> the : 1
to type the -> simplified : 1
type the simplified -> bulk : 1
the simplified bulk -> functions : 1
simplified bulk functions -> for : 1
bulk functions for -> every : 1
for every what -> if : 1
every what if -> we : 1
if we wanted -> these : 1
we wanted these -> functions : 1
wanted these functions -> to : 1
these functions to -> be : 2
functions to be -> generated : 1
functions to be -> member : 1
to be generated -> for : 1
be generated for -> every : 1
generated for every -> type : 1
every type which -> is : 1
every type which -> has : 1
which is other -> every : 1
is other every -> type : 1
other every type -> which : 1
type which has -> the : 1
has the member -> function : 1
member function should -> also : 1
function should also -> have : 1
should also have -> and : 1
have and the -> global : 1
and the global -> first : 1
the global first -> of : 1
global first of -> and : 1
first of and -> need : 1
of and need -> to : 1
be moved from -> being : 1
moved from being -> member : 1
from being member -> functions : 1
being member functions -> to : 1
functions to global -> fortunately : 1
to global fortunately -> allows : 1
global fortunately allows -> these : 1
fortunately allows these -> functions : 1
allows these functions -> to : 1
to be member -> functions : 1
be member functions -> or : 1
member functions or -> global : 1
functions or global -> in : 1
or global in -> order : 1
global in order -> to : 1
order to enable -> these : 1
order to enable -> the : 1
to enable these -> functions : 1
enable these functions -> only : 1
these functions only -> for : 1
functions only for -> classes : 1
only for classes -> that : 1
classes that have -> a : 1
that have a -> member : 1
have a member -> we : 1
a member we -> need : 1
member we need -> to : 1
need to conditionally -> enable : 1
to conditionally enable -> them : 1
conditionally enable them -> using : 1
enable them using -> a : 1
them using a -> combination : 1
using a combination -> of : 1
of and following -> the : 1
and following the -> procedure : 1
following the procedure -> learned : 1
the procedure learned -> with : 1
procedure learned with -> we : 1
learned with we -> create : 1
with we create -> a : 1
create a referring -> to : 1
a referring to -> the : 1
referring to the -> member : 1
the member template -> we : 1
member template we -> create : 1
template we create -> a : 1
create a template -> based : 1
a template based -> bool : 1
template based bool -> called : 1
based bool called -> that : 1
bool called that -> is : 1
called that is -> if : 1
if the class -> contains : 1
class contains the -> member : 1
contains the member -> exp : 1
the member exp -> bool : 1
member exp bool -> this : 1
exp bool this -> test : 1
bool this test -> only : 1
this test only -> checks : 1
test only checks -> if : 1
only checks if -> a : 1
checks if a -> class : 1
has a member -> named : 1
a member named -> it : 1
member named it -> does : 1
named it does -> not : 1
does not assure -> that : 1
not assure that -> it : 1
assure that it -> has : 1
it has no -> nor : 1
has no nor -> that : 1
no nor that -> it : 1
nor that it -> returns : 1
can now overload -> the : 1
now overload the -> three : 1
overload the three -> functions : 1
the three functions -> in : 1
three functions in -> the : 1
functions in the -> global : 1
in the global -> giving : 1
the global giving -> all : 1
global giving all -> reflectable : 1
giving all reflectable -> classes : 1
all reflectable classes -> the : 1
reflectable classes the -> ability : 1
ability to be -> compared : 1
ability to be -> invoked : 1
to be compared -> and : 1
be compared and -> printed : 1
compared and printed -> to : 1
and printed to -> a : 1
printed to a -> global : 1
to a global -> equal : 1
to a global -> once : 1
a global equal -> operator : 1
global equal operator -> for : 1
equal operator for -> reflectable : 1
operator for reflectable -> types : 2
operator for reflectable -> template : 1
for reflectable types -> bool : 3
for reflectable types -> is : 1
reflectable types bool -> isreflectable : 3
types bool isreflectable -> auto : 3
bool isreflectable auto -> const : 4
isreflectable auto const -> return : 3
isreflectable auto const -> ostr : 1
const return global -> operator : 2
const return global -> output : 1
return global operator -> for : 2
global operator for -> reflectable : 2
for reflectable template -> bool : 1
reflectable template bool -> isreflectable : 1
template bool isreflectable -> auto : 1
return global output -> for : 1
global output for -> reflectable : 1
output for reflectable -> types : 1
auto const ostr -> m : 1
m return explained -> in : 1
return explained in -> the : 1
in the section -> about : 1
the section about -> the : 1
section about the -> functions : 1
about the functions -> above : 1
the functions above -> will : 1
functions above will -> only : 1
above will only -> exist : 1
will only exist -> for : 1
only exist for -> types : 1
exist for types -> which : 1
for types which -> contain : 1
types which contain -> the : 1
which contain the -> member : 1
contain the member -> and : 1
the member and -> will : 1
member and will -> therefore : 1
and will therefore -> not : 1
will therefore not -> collide : 1
therefore not collide -> with : 1
not collide with -> any : 1
collide with any -> other : 1
any other reflection -> we : 1
other reflection we -> have : 1
reflection we have -> everything : 1
we have everything -> in : 3
have everything in -> class : 1
have everything in -> see : 1
have everything in -> we : 1
everything in class -> we : 1
in class we -> will : 1
class we will -> test : 1
we will test -> has : 1
will test has -> a : 1
test has a -> reflect : 1
has a reflect -> member : 1
a reflect member -> function : 1
reflect member function -> returning : 1
member function returning -> a : 1
function returning a -> tuple : 1
returning a tuple -> of : 1
references to its -> members : 1
to its members -> equality : 1
its members equality -> and : 1
members equality and -> less : 1
less than comparison -> functions : 1
than comparison functions -> are : 1
comparison functions are -> enabled : 1
functions are enabled -> for : 1
are enabled for -> all : 1
enabled for all -> reflectable : 1
for all reflectable -> global : 1
all reflectable global -> is : 1
reflectable global is -> overloaded : 1
global is overloaded -> for : 1
overloaded for reflectable -> types : 1
reflectable types is -> a : 1
types is a -> simple : 1
a simple test -> which : 1
a simple test -> function : 1
simple test which -> verifies : 1
test which verifies -> the : 1
which verifies the -> auto : 1
verifies the auto -> shire : 1
the auto shire -> auto : 1
auto shire auto -> mordor : 1
shire auto mordor -> prints : 1
auto mordor prints -> using : 1
mordor prints using -> prints : 1
prints using prints -> using : 1
using prints using -> compares : 1
prints using compares -> mordor : 1
using compares mordor -> and : 1
compares mordor and -> shire : 1
mordor and shire -> using : 1
and shire using -> auto : 1
shire using auto -> shire : 1
using auto shire -> with : 1
auto shire with -> these : 1
shire with these -> capabilities : 1
with these capabilities -> in : 1
these capabilities in -> place : 1
capabilities in place -> we : 1
in place we -> are : 1
place we are -> relieved : 1
we are relieved -> from : 1
are relieved from -> writing : 1
relieved from writing -> them : 1
from writing them -> for : 1
writing them for -> every : 1
them for every -> class : 1
for every class -> in : 1
every class in -> our : 1
class in our -> code : 1
in our code -> for : 1
our code for -> the : 1
code for the -> sake : 1
sake of compare -> the : 1
of compare the -> class : 1
compare the class -> side : 1
the class side -> by : 1
class side by -> side : 1
side by side -> with : 2
by side with -> a : 1
by side with -> its : 1
side with a -> class : 1
with a class -> without : 1
class without reflection -> on : 1
without reflection on -> reflection : 1
reflection on reflection -> for : 1
on reflection for -> town : 1
reflection for town -> auto : 1
for town auto -> return : 1
town auto return -> auto : 1
town auto return -> you : 1
auto b return -> a : 1
b return a -> const : 1
return a const -> ostr : 1
a const ostr -> ostr : 1
const ostr ostr -> ostr : 1
ostr ostr ostr -> return : 1
ostr ostr return -> town : 1
ostr return town -> auto : 1
return town auto -> return : 1
auto return you -> can : 1
can using reflection -> reduces : 1
using reflection reduces -> a : 1
reflection reduces a -> great : 1
reduces a great -> deal : 1
a great deal -> of : 1
great deal of -> boiler : 1
deal of boiler -> plate : 1
boiler plate a -> operator : 1
plate a operator -> can : 1
a operator can -> be : 1
operator can be -> using : 1
can be using -> as : 1
be using as -> in : 1
using as in -> the : 1
in the town -> example : 1
the town example -> above : 1
town example above -> makes : 1
example above makes -> it : 1
above makes it -> creating : 1
makes it creating -> a : 1
it creating a -> generic : 1
safe cast casting -> between : 1
cast casting between -> data : 1
casting between data -> types : 1
between data types -> in : 1
data types in -> there : 1
types in there -> is : 1
in there is -> of : 1
in there is -> no : 2
there is of -> different : 1
is of different -> ways : 1
of different ways -> things : 1
different ways things -> can : 1
ways things can -> go : 1
things can go -> might : 1
can go might -> lose : 1
go might lose -> a : 1
might lose a -> value : 1
lose a value -> if : 2
a value if -> casting : 2
value if casting -> to : 1
value if casting -> a : 1
if casting to -> a : 1
casting to a -> integer : 1
to a integer -> type : 1
a integer type -> of : 1
integer type of -> lower : 1
type of lower -> bit : 1
of lower bit -> lose : 1
lower bit lose -> a : 1
bit lose a -> value : 1
if casting a -> negative : 1
casting a negative -> value : 1
negative value to -> an : 1
value to an -> unsigned : 1
to an unsigned -> casting : 1
an unsigned casting -> from : 1
unsigned casting from -> a : 1
casting from a -> pointer : 2
casting from a -> double : 1
from a pointer -> to : 2
pointer to any -> other : 1
to any other -> integer : 1
any other integer -> than : 1
other integer than -> the : 1
integer than the -> correct : 1
than the correct -> address : 1
the correct address -> might : 1
correct address might -> become : 1
address might become -> wrong : 1
might become wrong -> as : 1
become wrong as -> only : 1
wrong as only -> guarantees : 1
as only guarantees -> that : 1
only guarantees that -> is : 1
guarantees that is -> the : 1
the only integer -> type : 2
only integer type -> to : 1
only integer type -> that : 1
integer type to -> withhold : 1
type to withhold -> an : 1
to withhold an -> address : 1
withhold an address -> casting : 1
an address casting -> from : 1
address casting from -> to : 1
casting from to -> the : 1
from to the -> result : 1
to the result -> might : 1
the result might -> be : 1
the result might -> not : 1
result might be -> if : 1
might be if -> the : 1
if the is -> too : 1
the is too -> large : 1
is too large -> for : 2
too large for -> to : 1
too large for -> the : 1
large for to -> withhold : 1
for to withhold -> casting : 1
to withhold casting -> between : 1
withhold casting between -> pointers : 1
casting between pointers -> with : 1
casting between pointers -> the : 1
between pointers with -> a : 1
pointers with a -> we : 1
with a we -> might : 1
a we might -> get : 1
we might get -> undefined : 1
might get undefined -> behavior : 1
get undefined behavior -> if : 1
behavior if the -> types : 1
if the types -> sharing : 1
the types sharing -> a : 1
types sharing a -> common : 1
sharing a common -> base : 1
a common base -> class : 1
common base class -> order : 1
base class order -> to : 1
class order to -> make : 1
to make our -> code : 1
make our code -> more : 1
our code more -> robust : 1
code more robust -> we : 1
more robust we -> can : 1
robust we can -> create : 1
a generic checked -> cast : 1
generic checked cast -> function : 1
checked cast function -> which : 1
cast function which -> verifies : 1
function which verifies -> our : 1
which verifies our -> casts : 1
verifies our casts -> in : 1
our casts in -> debug : 1
casts in debug -> and : 1
in debug and -> performs : 1
debug and performs -> the : 1
and performs the -> cast : 1
performs the cast -> as : 1
the cast as -> fast : 1
the cast as -> we : 1
cast as fast -> as : 1
as fast as -> possible : 1
as fast as -> a : 1
as fast as -> the : 1
fast as possible -> if : 1
as possible if -> in : 1
possible if in -> release : 1
if in release -> on : 1
in release on -> the : 1
release on the -> types : 1
on the types -> that : 1
the types that -> are : 1
types that are -> being : 1
types that are -> not : 1
are being different -> checks : 1
being different checks -> are : 1
different checks are -> if : 1
checks are if -> we : 1
are if we -> try : 1
if we try -> to : 1
try to cast -> between : 1
to cast between -> types : 1
cast between types -> that : 1
between types that -> are : 1
are not it -> are : 1
not it are -> the : 1
it are the -> cases : 1
are the cases -> the : 1
the cases the -> intended : 1
cases the intended -> to : 1
the intended to -> obviously : 1
intended to obviously -> if : 1
to obviously if -> casting : 1
obviously if casting -> the : 1
if casting the -> same : 1
casting the same -> we : 1
same we just -> return : 1
we just return -> the : 1
just return the -> input : 1
return the input -> to : 1
the input to -> if : 1
input to if -> casting : 1
to if casting -> between : 2
to if casting -> from : 1
if casting between -> pointers : 1
if casting between -> arithmetic : 1
between pointers the -> a : 1
pointers the a -> dynamic : 1
the a dynamic -> cast : 1
a dynamic cast -> in : 1
dynamic cast in -> debug : 1
cast in debug -> to : 1
in debug to -> verify : 1
debug to verify -> it : 1
to verify it -> is : 1
verify it is -> to : 1
is to floating -> the : 1
to floating the -> precision : 1
floating the precision -> loss : 1
the precision loss -> when : 1
precision loss when -> casting : 1
loss when casting -> from : 1
when casting from -> double : 1
casting from double -> to : 1
from double to -> float : 1
double to float -> with : 1
to float with -> one : 1
float with one -> if : 1
with one if -> casting : 1
one if casting -> from : 1
if casting from -> a : 2
from a double -> to : 1
a double to -> floating : 1
double to floating -> point : 1
floating point there -> is : 1
a chance the -> double : 1
chance the double -> is : 1
the double is -> too : 1
double is too -> large : 1
large for the -> float : 1
for the float -> to : 1
the float to -> handle : 1
float to handle -> to : 1
to handle to -> if : 1
handle to if -> casting : 1
casting between arithmetic -> the : 1
between arithmetic the -> value : 1
arithmetic the value -> is : 1
value is cast -> back : 1
is cast back -> to : 1
cast back to -> its : 1
cast back to -> the : 1
back to its -> original : 1
to its original -> type : 1
its original type -> to : 1
original type to -> verify : 1
type to verify -> no : 1
to verify no -> precision : 1
verify no precision -> are : 1
no precision are -> to : 1
precision are to -> if : 1
are to if -> casting : 1
to a that -> the : 1
that the destination -> type : 1
the destination type -> is : 1
destination type is -> an : 1
type is an -> or : 1
is an or -> the : 1
an or the -> only : 1
or the only -> integer : 1
integer type that -> is : 1
that is guaranteed -> to : 1
guaranteed to hold -> an : 1
to hold an -> any : 1
hold an any -> other : 1
an any other -> the : 1
any other the -> will : 1
other the will -> fail : 1
the will fail -> to : 1
fail to see -> how : 1
can implement we -> start : 1
implement we start -> by : 1
start by fetching -> information : 1
by fetching information -> about : 1
fetching information about -> our : 1
information about our -> cast : 1
about our cast -> operation : 1
our cast operation -> to : 1
cast operation to -> the : 1
operation to the -> reason : 1
to the reason -> they : 1
the reason they -> are : 1
reason they are -> booleans : 1
they are booleans -> and : 1
are booleans and -> not : 1
booleans and not -> const : 1
and not const -> booleans : 1
not const booleans -> is : 1
const booleans is -> that : 1
booleans is that -> we : 1
we will utilize -> them : 1
utilize them later -> in : 1
them later in -> which : 1
later in which -> requires : 1
in which requires -> constexpr : 1
which requires constexpr -> constexpr : 1
requires constexpr constexpr -> auto : 1
constexpr constexpr auto -> return : 1
constexpr auto return -> typename : 1
constexpr auto return -> constexpr : 2
constexpr auto return -> const : 1
auto return typename -> auto : 1
return typename auto -> using : 1
typename auto using -> namespace : 1
auto using namespace -> constexpr : 1
using namespace constexpr -> auto : 1
namespace constexpr auto -> constexpr : 1
constexpr auto constexpr -> auto : 10
auto constexpr auto -> constexpr : 8
auto constexpr auto -> now : 1
auto constexpr auto -> if : 1
constexpr auto now -> that : 1
auto now that -> we : 2
now that we -> have : 2
we have all -> the : 1
have all the -> information : 1
all the information -> about : 1
the information about -> the : 1
about the cast -> as : 1
cast as we -> assert : 1
as we assert -> at : 1
we assert at -> compile : 1
assert at compile -> time : 1
time that we -> can : 1
can perform the -> as : 1
perform the as -> said : 1
the as said -> a : 1
as said a -> fail : 1
said a fail -> to : 1
a fail to -> compile : 1
condition is not -> satisfied : 1
is not satisfied -> a : 1
not satisfied a -> regular : 1
satisfied a regular -> which : 1
a regular which -> verifies : 1
regular which verifies -> conditions : 1
which verifies conditions -> at : 1
verifies conditions at -> the : 1
conditions at the -> usage : 1
at the usage -> of : 1
the usage of -> the : 1
usage of the -> end : 1
of the end -> of : 1
the we cannot -> just : 1
we cannot just -> type : 1
cannot just type -> as : 1
just type as -> that : 1
type as that -> would : 1
as that would -> prevent : 1
that would prevent -> the : 1
would prevent the -> compiling : 1
prevent the compiling -> at : 1
the compiling at -> instead : 1
compiling at instead -> we : 1
at instead we -> utilize : 1
instead we utilize -> the : 1
utilize the template -> function : 1
function to delay -> the : 1
to delay the -> generation : 1
delay the generation -> until : 1
the generation until -> that : 1
generation until that -> actual : 1
until that actual -> we : 1
that actual we -> cast : 1
actual we cast -> back : 1
we cast back -> to : 1
to the original -> type : 1
the original type -> and : 1
original type and -> verify : 1
type and verify -> that : 1
and verify that -> the : 1
verify that the -> result : 1
that the result -> is : 1
that the result -> of : 1
result is equal -> to : 1
to the argument -> using : 1
the argument using -> a : 1
argument using a -> regular : 1
using a regular -> runtime : 1
regular runtime this -> way : 1
runtime this way -> we : 1
this way we -> can : 1
way we can -> make : 1
can make sure -> the : 1
make sure the -> not : 1
sure the not -> lost : 1
the not lost -> any : 1
not lost any -> if : 1
lost any if -> return : 1
any if return -> if : 1
return if return -> if : 4
return if return -> for : 1
return if constexpr -> auto : 2
if constexpr auto -> casted : 2
constexpr auto casted -> auto : 2
auto casted auto -> return : 3
casted auto return -> if : 1
casted auto return -> else : 2
auto return if -> constexpr : 1
auto return else -> return : 1
auto return else -> you : 1
else return this -> can : 1
return this can -> never : 1
this can never -> the : 1
can never the -> should : 1
never the should -> have : 1
the should have -> how : 1
should have how -> we : 1
have how we -> use : 1
use the order -> for : 1
the order for -> the : 1
order for the -> function : 1
for the function -> to : 1
the function to -> conditionally : 1
the function to -> hash : 1
the function to -> only : 1
the function to -> be : 1
function to conditionally -> if : 1
to conditionally if -> we : 1
conditionally if we -> used : 1
if we used -> a : 1
we used a -> regular : 1
used a regular -> the : 1
regular the function -> would : 1
the function would -> fail : 1
function would fail -> to : 1
would fail to -> would : 1
would fail to -> compile : 1
fail to would -> fail : 1
to would fail -> to : 1
to compile with -> a : 1
compile with a -> regular : 1
a regular x -> is : 1
regular x is -> because : 1
x is because -> the : 1
is because the -> compiler : 1
is because the -> cache : 1
because the compiler -> would : 1
compiler would try -> to : 1
would try to -> compile : 1
try to compile -> the : 1
to compile the -> following : 1
the following line -> accepts : 1
following line accepts -> type : 1
line accepts type -> to : 1
accepts type to -> is : 1
type to is -> an : 1
is an does -> not : 1
an does not -> thanks : 1
does not thanks -> to : 1
not thanks to -> the : 1
following function compiles -> int : 1
function compiles int -> constexpr : 1
compiles int constexpr -> auto : 1
int constexpr auto -> constexpr : 1
int constexpr auto -> auto : 1
else if else -> if : 3
else if auto -> casted : 1
if auto casted -> auto : 1
return else you -> can : 1
else you can -> except : 1
you can except -> for : 1
can except for -> the : 1
except for the -> everything : 1
for the everything -> in : 1
the everything in -> between : 1
everything in between -> the : 1
in between the -> statements : 1
between the statements -> has : 1
the statements has -> been : 1
statements has been -> completely : 1
has been completely -> allowing : 1
been completely allowing -> the : 1
completely allowing the -> function : 1
allowing the function -> to : 1
function to hash -> strings : 1
to hash strings -> at : 1
at compile say -> you : 1
compile say you -> have : 1
say you have -> a : 1
have a resource -> system : 1
a resource system -> consisting : 1
resource system consisting -> of : 1
system consisting of -> an : 1
consisting of an -> unordered : 1
of an unordered -> map : 1
an unordered map -> of : 1
unordered map of -> strings : 1
map of strings -> which : 1
of strings which -> identify : 1
strings which identify -> if : 1
which identify if -> the : 1
identify if the -> bitmap : 1
if the bitmap -> is : 3
the bitmap is -> already : 3
bitmap is already -> it : 1
bitmap is already -> in : 2
is already it -> returns : 1
already it returns -> the : 1
it returns the -> loaded : 1
returns the loaded -> otherwise : 1
the loaded otherwise -> it : 1
loaded otherwise it -> loads : 1
otherwise it loads -> the : 1
it loads the -> bitmap : 1
loads the bitmap -> and : 1
the bitmap and -> returns : 1
bitmap and returns -> external : 1
and returns external -> function : 1
returns external function -> which : 1
external function which -> loads : 1
function which loads -> a : 1
which loads a -> bitmap : 1
loads a bitmap -> from : 1
a bitmap from -> the : 1
bitmap from the -> bitmap : 1
from the bitmap -> bitmap : 1
the bitmap bitmap -> const : 1
bitmap bitmap const -> static : 1
bitmap const static -> storage : 2
const static storage -> of : 2
static storage of -> all : 2
storage of all -> loaded : 2
of all loaded -> bitmaps : 2
all loaded bitmaps -> auto : 2
loaded bitmaps auto -> loaded : 1
loaded bitmaps auto -> if : 1
bitmaps auto loaded -> if : 1
auto loaded if -> the : 1
loaded if the -> bitmap : 1
already in return -> it : 2
in return it -> return : 1
in return it -> if : 1
return it return -> the : 1
it return the -> bitmap : 1
return the bitmap -> already : 2
the bitmap already -> load : 2
bitmap already load -> and : 2
already load and -> return : 2
load and return -> it : 3
and return it -> bitmap : 1
and return it -> already : 1
and return it -> auto : 1
return it bitmap -> return : 1
it bitmap return -> bitmap : 1
bitmap return bitmap -> cache : 1
return bitmap cache -> is : 1
bitmap cache is -> then : 1
cache is then -> utilized : 1
is then utilized -> wherever : 1
then utilized wherever -> a : 1
utilized wherever a -> bitmap : 1
wherever a bitmap -> resource : 1
a bitmap resource -> is : 1
bitmap resource is -> not : 1
resource is not -> loaded : 1
is not loaded -> the : 1
not loaded the -> function : 1
loaded the function -> will : 1
function will load -> and : 1
will load and -> return : 1
return it already -> loaded : 1
it already loaded -> somewhere : 1
already loaded somewhere -> the : 1
loaded somewhere the -> will : 1
somewhere the will -> simply : 1
the will simply -> return : 1
will simply return -> the : 1
simply return the -> loaded : 1
return the loaded -> function : 1
the loaded function -> independently : 1
loaded function independently -> of : 1
function independently of -> which : 1
independently of which -> of : 1
of which of -> these : 1
which of these -> draw : 1
of these draw -> functions : 1
these draw functions -> is : 1
draw functions is -> executed : 1
functions is executed -> the : 1
is executed the -> second : 1
executed the second -> one : 1
second one will -> not : 1
one will not -> have : 1
have to load -> the : 1
to load the -> bitmap : 1
load the bitmap -> from : 1
the bitmap from -> const : 1
bitmap from const -> bm : 1
from const bm -> auto : 1
const bm auto -> const : 1
bm auto const -> bm : 1
auto const bm -> advantages : 1
const bm advantages -> of : 1
bm advantages of -> hash : 1
hash sum problem -> which : 1
sum problem which -> we : 1
problem which we -> will : 1
try to solve -> is : 1
to solve is -> that : 1
solve is that -> every : 1
is that every -> time : 1
that every time -> the : 1
every time the -> line : 1
time the line -> is : 1
the line is -> the : 1
line is the -> application : 1
the application will -> compute : 1
application will compute -> the : 1
will compute the -> hash : 1
compute the hash -> the : 1
hash the string -> at : 1
the string at -> what : 1
the string at -> compile : 1
string at what -> we : 1
at what we -> would : 1
what we would -> like : 1
like to do -> is : 1
is to perform -> this : 1
perform this calculation -> already : 1
this calculation already -> at : 1
calculation already at -> compile : 1
already at compile -> so : 1
at compile so -> that : 1
at compile so -> you : 1
compile so that -> when : 1
that when the -> application : 1
the application the -> hash : 2
the application the -> operating : 1
application the hash -> sum : 2
the hash sum -> is : 2
the hash sum -> at : 1
the hash sum -> of : 1
hash sum is -> already : 2
hash sum is -> found : 1
sum is already -> in : 1
sum is already -> with : 1
already in other -> just : 1
in other just -> as : 1
other just as -> we : 1
as we have -> learned : 1
as we have -> been : 1
we have learned -> to : 1
have learned to -> use : 1
learned to use -> metaprogramming : 1
to use metaprogramming -> to : 2
use metaprogramming to -> generate : 2
metaprogramming to generate -> functions : 2
to generate functions -> and : 2
generate functions and -> classes : 1
generate functions and -> values : 1
functions and classes -> at : 1
and classes at -> compile : 1
classes at compile -> we : 1
compile we will -> now : 1
will now have -> it : 1
will now have -> a : 1
now have it -> generate : 1
have it generate -> the : 1
it generate the -> hash : 1
generate the hash -> sum : 1
hash sum at -> compile : 1
at compile might -> come : 1
compile might come -> to : 1
might come to -> the : 1
come to the -> conclusion : 1
to the conclusion -> already : 1
the conclusion already -> that : 1
conclusion already that -> this : 1
already that this -> is : 1
is a so -> called : 1
a so called -> calculating : 1
so called calculating -> the : 1
called calculating the -> hash : 1
calculating the hash -> sum : 1
hash sum of -> a : 1
sum of a -> small : 1
of a small -> string : 1
a small string -> affect : 1
small string affect -> the : 1
string affect the -> application : 1
affect the application -> performance : 1
the application performance -> at : 1
application performance at -> as : 1
performance at as -> it : 1
at as it -> is : 1
it is such -> a : 1
is such a -> tiny : 1
such a tiny -> that : 1
a tiny that -> is : 1
tiny that is -> probably : 1
that is probably -> completely : 1
is probably completely -> this : 1
probably completely this -> is : 1
completely this is -> just : 1
just an example -> of : 1
how to move -> a : 1
how to move -> away : 1
to move a -> calculation : 1
move a calculation -> from : 1
a calculation from -> run : 1
calculation from run -> time : 1
from run time -> to : 1
run time to -> and : 1
time to and -> there : 1
to and there -> might : 1
and there might -> be : 1
might be other -> instances : 1
might be other -> consumers : 1
be other instances -> where : 1
other instances where -> this : 1
instances where this -> can : 1
where this can -> make : 1
this can make -> a : 1
make a significant -> performance : 1
a significant performance -> as : 1
significant performance as -> a : 1
performance as a -> side : 1
as a side -> when : 1
as a side -> it : 1
a side when -> writing : 1
side when writing -> software : 1
when writing software -> for : 1
writing software for -> weak : 1
software for weak -> string : 1
for weak string -> hashing : 1
weak string hashing -> is : 1
string hashing is -> pure : 1
hashing is pure -> but : 1
is pure but -> hashing : 1
pure but hashing -> strings : 1
but hashing strings -> at : 1
hashing strings at -> compile : 1
at compile gives -> us : 1
compile gives us -> this : 1
gives us this -> luxury : 1
us this luxury -> on : 1
this luxury on -> any : 1
luxury on any -> as : 1
on any as -> everything : 1
any as everything -> is : 1
as everything is -> computed : 1
everything is computed -> at : 1
is computed at -> compile : 1
computed at compile -> and : 1
at compile and -> verify : 1
compile and verify -> a : 1
a hash order -> to : 1
hash order to -> enable : 1
to enable the -> compiler : 1
enable the compiler -> to : 1
calculate the at -> compile : 1
the at compile -> we : 1
compile we rewrite -> the : 1
we rewrite the -> to : 1
we rewrite the -> class : 1
rewrite the to -> take : 1
the to take -> a : 1
take a raw -> string : 1
a raw string -> as : 1
raw string as -> parameter : 2
string as parameter -> as : 1
string as parameter -> and : 1
as parameter as -> an : 1
parameter as an -> advanced : 1
as an advanced -> class : 1
an advanced class -> like : 1
advanced class like -> cannot : 1
class like cannot -> be : 1
like cannot be -> evaluated : 1
cannot be evaluated -> at : 1
compile we can -> mark : 1
we can mark -> the : 1
can mark the -> a : 1
mark the a -> auto : 1
a auto auto -> sum : 1
auto auto sum -> ptr : 1
auto auto sum -> for : 2
auto auto sum -> auto : 1
auto sum ptr -> sum : 1
sum ptr sum -> return : 1
ptr sum return -> invoke : 1
sum return invoke -> this : 1
return invoke this -> with : 1
with a raw -> literal : 1
a raw literal -> string : 1
raw literal string -> known : 1
literal string known -> at : 1
string known at -> compile : 1
known at compile -> hash : 1
at compile hash -> the : 1
compile hash the -> compiler : 1
hash the compiler -> following : 1
the compiler following -> piece : 1
compiler following piece -> of : 1
following piece of -> the : 1
piece of the -> sum : 1
of the sum -> of : 1
of the ascii -> values : 1
the ascii values -> corresponding : 1
ascii values corresponding -> to : 1
values corresponding to -> and : 1
corresponding to and -> hash : 1
to and hash -> accumulating : 1
and hash accumulating -> the : 1
hash accumulating the -> individual : 1
accumulating the individual -> values : 1
the individual values -> is : 1
individual values is -> a : 1
values is a -> very : 1
a very bad -> hash : 1
very bad hash -> do : 1
bad hash do -> not : 1
hash do not -> do : 1
do not do -> this : 1
not do this -> in : 1
do this in -> a : 2
this in a -> only : 1
this in a -> modern : 1
in a only -> here : 1
a only here -> because : 1
only here because -> easy : 1
here because easy -> to : 1
because easy to -> a : 1
easy to a -> better : 1
to a better -> hash : 1
a better hash -> function : 1
better hash function -> would : 1
hash function would -> be : 1
function would be -> to : 1
be to combine -> all : 1
to combine all -> the : 1
combine all the -> individual : 1
all the individual -> characters : 1
the individual characters -> with : 1
individual characters with -> a : 1
characters with a -> explained : 1
with a explained -> in : 1
a explained in -> the : 1
will only evaluate -> at : 1
only evaluate at -> compile : 1
evaluate at compile -> time : 1
time if the -> compiler : 1
compiler knows the -> string : 1
knows the string -> at : 1
string at compile -> if : 1
compiler will execute -> the : 1
execute the at -> just : 1
the at just -> as : 1
at just as -> any : 1
just as any -> other : 1
as any other -> a : 1
any other a -> prehashedstring : 1
other a prehashedstring -> that : 1
a prehashedstring that -> we : 1
prehashedstring that we -> have : 1
have the hash -> function : 1
hash function we -> create : 1
function we create -> a : 1
class for it -> consists : 1
for it consists -> of : 1
it consists of -> the : 1
it consists of -> two : 1
consists of the -> constructor : 1
consists of the -> squared : 1
of the constructor -> which : 1
the constructor which -> takes : 1
constructor which takes -> raw : 1
which takes raw -> string : 1
takes raw string -> as : 1
as parameter and -> calculates : 1
parameter and calculates -> the : 1
and calculates the -> hash : 1
calculates the hash -> at : 1
the hash at -> member : 1
hash at member -> function : 1
at member function -> which : 1
returns the overload -> of : 1
the overload of -> simply : 1
overload of simply -> returns : 1
of simply returns -> the : 1
simply returns the -> hash : 1
returns the hash -> this : 1
returns the hash -> value : 1
hash this overload -> is : 1
this overload is -> used : 1
overload is used -> by : 1
is used by -> or : 1
is used by -> both : 1
used by or -> any : 1
by or any -> other : 1
any other stl -> class : 1
other stl class -> which : 1
stl class which -> uses : 1
class which uses -> hash : 1
which uses hash -> to : 1
uses hash to -> put : 1
hash to put -> it : 1
to put it -> this : 1
put it this -> makes : 1
it this makes -> the : 1
this makes the -> stl : 1
this makes the -> pointer : 1
makes the stl -> container : 1
the stl container -> aware : 1
stl container aware -> that : 1
container aware that -> it : 1
aware that it -> exists : 1
that it exists -> a : 1
it exists a -> hash : 1
exists a hash -> function : 1
a hash function -> for : 1
hash function for -> the : 1
for the is -> a : 1
is a basic -> implementation : 1
a basic implementation -> of : 1
basic implementation of -> a : 1
of a prehashedstring -> template : 1
a prehashedstring template -> constexpr : 1
prehashedstring template constexpr -> the : 1
template constexpr the -> subtraction : 1
constexpr the subtraction -> is : 1
the subtraction is -> to : 1
subtraction is to -> avoid : 1
is to avoid -> null : 1
to avoid null -> at : 1
avoid null at -> end : 1
null at end -> auto : 1
at end auto -> const : 1
end auto const -> return : 1
const return constexpr -> auto : 1
return constexpr auto -> return : 3
auto return constexpr -> auto : 2
return const namespace -> std : 1
const namespace std -> template : 1
namespace std template -> struct : 1
std template struct -> constexpr : 1
template struct constexpr -> auto : 1
struct constexpr auto -> const : 1
constexpr auto const -> return : 1
const return prehashedstring -> to : 1
return prehashedstring to -> only : 1
time string the -> template : 1
time string the -> reason : 1
string the template -> trick : 1
the template trick -> in : 1
template trick in -> the : 1
trick in the -> this : 1
the this forces -> the : 1
this forces the -> to : 1
forces the to -> only : 1
the to only -> accept : 1
string the reason -> for : 1
the class does -> not : 1
class does not -> own : 1
does not own -> the : 1
not own the -> and : 1
own the and -> therefore : 1
therefore we may -> only : 1
we may only -> use : 1
may only use -> it : 1
only use it -> with : 1
use it with -> string : 1
it with string -> literals : 1
with string literals -> created : 1
string literals created -> at : 1
literals created at -> compile : 1
created at compile -> this : 1
compile this compiles -> auto : 1
this compiles auto -> this : 1
compiles auto this -> does : 1
auto this does -> not : 2
this does not -> the : 2
not the object -> would : 2
not the object -> it : 1
the object would -> be : 3
object would be -> broken : 2
object would be -> of : 1
would be broken -> if : 2
be broken if -> the : 2
broken if the -> str : 1
broken if the -> strptr : 1
if the str -> is : 1
the str is -> str : 1
str is str -> auto : 1
is str auto -> this : 1
str auto this -> does : 1
if the strptr -> is : 1
the strptr is -> strptr : 1
strptr is strptr -> new : 1
is strptr new -> auto : 1
strptr new auto -> now : 1
new auto now -> that : 1
everything in see -> how : 1
in see how -> the : 1
compiler handles the -> here : 1
handles the here -> is : 1
simple test function -> which : 1
test function which -> returns : 1
for the string -> const : 1
the string const -> const : 1
string const const -> str : 1
const str return -> we : 1
str return we -> used : 1
return we used -> the : 1
we used the -> string : 1
used the string -> as : 1
the string as -> our : 1
string as our -> hash : 1
as our hash -> function : 1
our hash function -> simply : 1
hash function simply -> and : 1
function simply and -> the : 1
simply and the -> letters : 1
and the letters -> in : 1
the letters in -> have : 1
letters in have -> the : 1
in have the -> following : 1
have the following -> ascii : 1
the following ascii -> the : 1
following ascii the -> assembler : 1
ascii the assembler -> by : 1
the assembler by -> clang : 1
assembler by clang -> ought : 1
by clang ought -> to : 1
clang ought to -> output : 1
ought to output -> the : 1
to output the -> sum : 1
output the sum -> inspecting : 1
the sum inspecting -> the : 1
sum inspecting the -> assembler : 1
inspecting the assembler -> we : 1
the assembler we -> can : 1
assembler we can -> see : 1
the function compiles -> to : 1
function compiles to -> exactly : 1
compiles to exactly -> one : 1
to exactly one -> return : 1
exactly one return -> statement : 1
one return statement -> which : 1
return statement which -> returns : 1
statement which returns -> means : 1
which returns means -> that : 1
returns means that -> the : 1
that the whole -> function : 1
the whole function -> has : 1
whole function has -> been : 1
function has been -> executed : 1
has been executed -> at : 1
been executed at -> compile : 1
executed at compile -> when : 1
at compile when -> the : 1
compile when the -> application : 1
is already with -> return : 1
already with return -> to : 1
with return to -> our : 1
return to our -> original : 1
to our original -> originally : 1
our original originally -> used : 1
original originally used -> is : 1
originally used is -> exchanged : 1
used is exchanged -> to : 1
is exchanged to -> a : 1
exchanged to a -> bitmap : 1
to a bitmap -> const : 1
a bitmap const -> static : 1
bitmaps auto if -> the : 1
auto if the -> bitmap : 1
return it if -> return : 1
if return the -> bitmap : 1
return it auto -> bitmap : 1
it auto bitmap -> return : 1
auto bitmap return -> also : 1
bitmap return also -> need : 1
return also need -> a : 1
also need a -> function : 1
function to test -> return : 1
to test return -> we : 1
test return we -> would : 1
return we would -> like : 1
like to know -> is : 1
to know is -> if : 1
to know is -> that : 1
know is if -> even : 1
is if even -> this : 1
if even this -> function : 1
even this function -> precalculated : 1
this function precalculated -> the : 1
function precalculated the -> hash : 1
precalculated the hash -> as : 1
the hash as -> the : 1
hash as the -> does : 1
as the does -> quite : 1
the does quite -> a : 1
does quite a -> lot : 1
quite a lot -> a : 1
a lot a -> static : 1
lot a static -> inspecting : 1
a static inspecting -> the : 1
static inspecting the -> the : 1
inspecting the the -> resulting : 1
the the resulting -> assembly : 1
the resulting assembly -> is : 1
resulting assembly is -> about : 1
assembly is about -> five : 1
is about five -> hundred : 1
about five hundred -> if : 1
five hundred if -> our : 1
hundred if our -> magic : 1
if our magic -> hash : 1
our magic hash -> sum : 1
magic hash sum -> is : 1
sum is found -> in : 1
is found in -> the : 1
found in the -> it : 1
in the it -> means : 1
in the it -> will : 1
in the it -> would : 1
the it means -> that : 1
have the assembler -> generated : 1
the assembler generated -> by : 1
assembler generated by -> clang : 1
generated by clang -> we : 1
by clang we -> find : 1
clang we find -> a : 1
we find a -> line : 1
find a line -> which : 1
a line which -> corresponds : 1
line which corresponds -> to : 1
corresponds to our -> hash : 1
to our hash -> to : 1
our hash to -> be : 1
hash to be -> even : 1
be even more -> we : 1
even more we -> change : 1
more we change -> the : 1
change the string -> from : 1
the string from -> to : 1
string from to -> which : 1
from to which -> ought : 1
to which ought -> to : 1
which ought to -> change : 1
ought to change -> this : 1
to change this -> line : 1
change this line -> in : 1
this line in -> assembler : 1
line in assembler -> to : 1
in assembler to -> but : 1
assembler to but -> everything : 1
to but everything -> else : 1
but everything else -> should : 1
everything else should -> be : 1
else should be -> exactly : 1
should be exactly -> the : 1
be exactly the -> do : 1
exactly the do -> this : 1
the do this -> to : 1
do this to -> make : 1
this to make -> sure : 1
make sure this -> just : 1
sure this just -> some : 1
this just some -> other : 1
just some other -> magic : 1
some other magic -> number : 1
other magic number -> which : 1
magic number which -> popped : 1
number which popped -> totally : 1
which popped totally -> unrelated : 1
popped totally unrelated -> to : 1
totally unrelated to -> the : 1
unrelated to the -> hash : 1
hash the resulting -> we : 1
the resulting we -> find : 1
resulting we find -> the : 1
find the desired -> except : 1
the desired except -> this : 1
desired except this -> is : 1
except this is -> the : 1
is the and -> we : 1
we can therefore -> safely : 1
can therefore safely -> assume : 1
therefore safely assume -> that : 1
safely assume that -> the : 1
that the hash -> is : 1
the hash is -> calculated : 1
hash is calculated -> at : 1
is calculated at -> compile : 1
calculated at compile -> this : 1
compile this chapter -> you : 1
functions and values -> at : 1
and values at -> compile : 1
values at compile -> time : 1
compile time instead -> you : 1
time instead you -> also : 1
instead you also -> learned : 1
you also learned -> how : 3
to do this -> in : 1
to do this -> by : 1
in a modern -> way : 1
a modern way -> by : 1
modern way by -> using : 1
way by using -> and : 1
way by using -> boost : 1
using and type -> with : 1
and type with -> the : 1
with the constant -> string : 1
the constant string -> you : 1
constant string you -> also : 1
string you also -> learned : 1
to use compile -> time : 1
use compile time -> evaluation : 1
compile time evaluation -> in : 1
time evaluation in -> a : 1
evaluation in a -> practical : 1
in a practical -> in : 1
a practical in -> the : 1
practical in the -> next : 1
we will learn -> how : 1
how to further -> expand : 1
to further expand -> our : 1
further expand our -> toolbox : 1
expand our toolbox -> for : 1
our toolbox for -> creating : 1
toolbox for creating -> libraries : 1
for creating libraries -> by : 1
creating libraries by -> learning : 1
libraries by learning -> how : 1
by learning how -> to : 1
learning how to -> construct : 1
how to construct -> hidden : 1
to construct hidden -> proxy : 1
construct hidden proxy -> objects : 1
hidden proxy objects -> and : 1
hidden proxy objects -> to : 1
proxy objects and -> lazy : 2
and lazy this -> you : 1
lazy this you -> will : 1
to use proxy -> objects : 2
use proxy objects -> and : 1
use proxy objects -> in : 1
and lazy evaluation -> in : 1
lazy evaluation in -> order : 1
evaluation in order -> to : 1
order to postpone -> the : 1
to postpone the -> execution : 1
postpone the execution -> of : 1
execution of certain -> code : 1
of certain code -> until : 1
certain code until -> using : 1
code until using -> proxy : 1
until using proxy -> objects : 1
using proxy objects -> enables : 1
proxy objects enables -> optimizations : 1
objects enables optimizations -> to : 1
enables optimizations to -> occur : 1
optimizations to occur -> under : 1
to occur under -> the : 1
occur under the -> thereby : 1
under the thereby -> leaving : 1
the thereby leaving -> the : 1
thereby leaving the -> exposed : 1
leaving the exposed -> interfaces : 1
the exposed interfaces -> introduction : 1
exposed interfaces introduction -> to : 1
interfaces introduction to -> lazy : 1
and proxy and -> the : 1
proxy and the -> techniques : 1
and the techniques -> used : 1
the techniques used -> in : 1
techniques used in -> this : 1
chapter are used -> to : 1
are used to -> hide : 1
are used to -> in : 1
are used to -> do : 1
used to hide -> optimizations : 1
to hide optimizations -> in : 1
hide optimizations in -> a : 1
optimizations in a -> library : 1
in a library -> from : 1
a library from -> the : 1
library from the -> user : 1
user of that -> this : 1
of that this -> is : 1
this is useful -> because : 1
is useful because -> exposing : 1
useful because exposing -> every : 1
because exposing every -> single : 1
exposing every single -> optimization : 1
every single optimization -> technique : 1
single optimization technique -> as : 1
optimization technique as -> a : 1
technique as a -> separate : 1
as a separate -> function : 1
separate function requires -> a : 1
function requires a -> lot : 1
requires a lot -> of : 1
lot of attention -> and : 1
of attention and -> education : 1
attention and education -> from : 1
and education from -> the : 1
education from the -> user : 1
of the also -> bloats : 1
the also bloats -> the : 1
also bloats the -> code : 1
bloats the code -> base : 1
base with a -> multitude : 1
with a multitude -> of : 1
multitude of specific -> making : 1
of specific making -> it : 1
specific making it -> hard : 1
making it hard -> to : 1
it hard to -> read : 1
hard to read -> and : 1
read and by -> using : 1
and by using -> proxy : 1
by using proxy -> you : 1
using proxy you -> can : 2
proxy you can -> achieve : 1
proxy you can -> encapsulate : 1
you can achieve -> optimizations : 1
can achieve optimizations -> under : 1
achieve optimizations under -> the : 1
optimizations under the -> the : 1
the the resultant -> code : 1
the resultant code -> optimized : 1
resultant code optimized -> and : 1
code optimized and -> versus : 1
optimized and versus -> eager : 1
and versus eager -> evaluation : 1
versus eager evaluation -> is : 1
eager evaluation is -> a : 1
eager evaluation is -> undesired : 1
evaluation is a -> technique : 1
is a technique -> used : 1
a technique used -> to : 1
technique used to -> postpone : 1
used to postpone -> an : 1
to postpone an -> operation : 1
postpone an operation -> until : 1
an operation until -> its : 1
operation until its -> result : 1
until its result -> is : 1
its result is -> really : 1
result is really -> the : 1
is really the -> where : 1
really the where -> operations : 1
the where operations -> are : 1
where operations are -> performed : 1
operations are performed -> right : 1
are performed right -> is : 1
performed right is -> called : 1
right is called -> eager : 1
is called eager -> in : 1
called eager in -> some : 1
eager in some -> situations : 1
in some situations -> eager : 1
some situations eager -> evaluation : 1
situations eager evaluation -> is : 1
evaluation is undesired -> as : 1
is undesired as -> we : 1
undesired as we -> might : 1
as we might -> end : 1
we might end -> up : 1
end up constructing -> a : 1
up constructing a -> value : 1
constructing a value -> which : 1
value which is -> not : 1
not a look -> at : 1
following function class -> corresponding : 1
function class corresponding -> to : 1
class corresponding to -> an : 1
corresponding to an -> audio : 1
to an audio -> it : 1
an audio it -> consists : 1
audio it consists -> of : 1
consists of two -> functions : 1
of two functions -> for : 1
two functions for -> retrieving : 1
functions for retrieving -> an : 1
for retrieving an -> audio : 1
retrieving an audio -> file : 1
an audio file -> by : 1
an audio file -> if : 2
an audio file -> when : 1
audio file by -> in : 1
file by in -> which : 1
by in which -> we : 1
which we pass -> an : 1
which we pass -> a : 1
we pass an -> audio : 1
pass an audio -> file : 1
audio file if -> the : 2
file if the -> name : 2
if the name -> cannot : 2
the name cannot -> be : 2
name cannot be -> and : 1
name cannot be -> audio : 1
cannot be and -> in : 1
be and in -> which : 1
returns an audio -> file : 1
cannot be audio -> auto : 1
be audio auto -> audio : 1
audio auto audio -> audiolibrary : 1
auto audio audiolibrary -> auto : 1
audio audiolibrary auto -> const : 1
audiolibrary auto const -> return : 1
return we were -> to : 2
were to utilize -> the : 1
to utilize the -> function : 1
to utilize the -> received : 1
utilize the function -> the : 1
function the file -> would : 1
the file would -> be : 1
file would be -> executed : 1
would be executed -> even : 1
be executed even -> if : 1
executed even if -> the : 1
if the returned -> value : 1
returned value is -> library : 1
value is library -> using : 1
is library using -> the : 1
library using the -> member : 1
the member where -> a : 1
member where a -> function : 1
where a function -> returning : 1
a function returning -> an : 1
function returning an -> audio : 1
returning an audio -> file : 1
audio file when -> invoked : 1
file when invoked -> is : 1
when invoked is -> the : 1
invoked is the -> is : 1
the is only -> executed : 1
the is only -> used : 1
is only executed -> when : 1
only executed when -> library : 1
executed when library -> return : 1
when library return -> is : 1
library return is -> a : 1
return is a -> very : 1
a very simple -> but : 1
a very simple -> data : 1
very simple but -> the : 1
simple but the -> idea : 1
but the idea -> is : 1
the idea is -> that : 1
idea is that -> your : 1
is that your -> code : 1
your code gets -> expressed : 1
code gets expressed -> almost : 1
gets expressed almost -> exactly : 1
expressed almost exactly -> in : 1
almost exactly in -> the : 1
exactly in the -> same : 1
way as if -> it : 1
it were declared -> you : 1
were declared you -> will : 1
declared you will -> now : 1
you will now -> learn : 1
will now learn -> how : 1
now learn how -> to : 1
proxy objects in -> order : 1
to evaluate more -> advanced : 1
evaluate more advanced -> expressions : 1
more advanced expressions -> objects : 1
advanced expressions objects -> are : 1
expressions objects are -> internal : 1
objects are internal -> library : 1
are internal library -> objects : 1
internal library objects -> that : 1
library objects that -> intended : 1
objects that intended -> to : 1
that intended to -> be : 1
to be visible -> to : 1
be visible to -> the : 1
visible to the -> user : 1
to the user -> of : 1
of the their -> task : 1
the their task -> is : 1
their task is -> to : 1
task is to -> postpone : 1
is to postpone -> operations : 1
to postpone operations -> until : 1
postpone operations until -> required : 1
operations until required -> and : 1
until required and -> to : 1
required and to -> collect : 1
and to collect -> the : 1
to collect the -> data : 1
collect the data -> of : 1
data of an -> expression : 1
of an expression -> until : 1
an expression until -> it : 1
expression until it -> can : 1
until it can -> be : 1
be evaluated and -> proxy : 1
evaluated and proxy -> objects : 1
and proxy objects -> act : 1
proxy objects act -> in : 1
objects act in -> the : 1
act in the -> the : 1
of the library -> should : 1
of the library -> again : 1
the library should -> be : 1
library should be -> able : 1
should be able -> to : 1
able to handle -> the : 1
handle the expressions -> as : 1
the expressions as -> if : 1
expressions as if -> the : 1
if the proxy -> objects : 1
the proxy objects -> were : 1
proxy objects were -> not : 1
objects were not -> other : 1
were not other -> using : 1
not other using -> proxy : 1
other using proxy -> you : 1
you can encapsulate -> optimizations : 1
can encapsulate optimizations -> in : 1
encapsulate optimizations in -> your : 1
optimizations in your -> libraries : 1
in your libraries -> while : 1
your libraries while -> leaving : 1
libraries while leaving -> the : 1
while leaving the -> syntax : 1
leaving the syntax -> or : 1
the syntax or -> a : 1
syntax or a -> free : 1
or a free -> concatenated : 1
a free concatenated -> strings : 1
free concatenated strings -> using : 1
using a a -> look : 1
a a look -> at : 1
at this code -> which : 1
this code which -> concatenates : 1
code which concatenates -> two : 1
which concatenates two -> strings : 1
concatenates two strings -> and : 1
two strings and -> compares : 1
strings and compares -> the : 1
and compares the -> auto : 1
compares the auto -> a : 1
the auto a -> auto : 1
auto b auto -> c : 4
auto b auto -> a : 1
auto b auto -> spot : 1
auto b auto -> dist : 2
b auto c -> auto : 3
b auto c -> the : 1
auto c auto -> is : 2
auto c auto -> achieved : 1
c auto is -> is : 1
c auto is -> other : 1
auto is is -> a : 1
auto is is -> with : 1
is is a -> visual : 1
is a visual -> representation : 1
a visual representation -> of : 3
visual representation of -> the : 3
of the preceding -> code : 3
preceding code cdpaligncenter -> two : 1
preceding code cdpaligncenter -> object : 1
preceding code cdpaligncenter -> and : 1
code cdpaligncenter two -> strings : 1
cdpaligncenter two strings -> into : 1
two strings into -> a : 1
strings into a -> new : 1
new is that -> constructs : 1
is that constructs -> a : 1
that constructs a -> new : 1
constructs a new -> temporary : 1
a new temporary -> string : 1
new temporary string -> in : 1
temporary string in -> order : 1
string in order -> to : 1
to compare it -> with : 1
compare it with -> instead : 1
compare it with -> other : 1
it with instead -> of : 1
with instead of -> constructing : 1
instead of constructing -> a : 1
of constructing a -> new : 1
constructing a new -> we : 1
a new we -> could : 1
new we could -> just : 1
we could just -> compare : 1
could just compare -> the : 1
just compare the -> concatenation : 1
compare the concatenation -> right : 1
the concatenation right -> like : 1
concatenation right like -> const : 1
right like const -> return : 1
const return can -> then : 1
can then like -> auto : 1
then like auto -> a : 1
c auto achieved -> a : 1
auto achieved a -> bit : 1
achieved a bit -> of : 1
a bit of -> a : 1
bit of a -> but : 1
a but a -> code : 1
but a code -> base : 1
code base littered -> with : 1
base littered with -> convenience : 1
littered with convenience -> functions : 1
with convenience functions -> like : 1
convenience functions like -> this : 1
functions like this -> is : 1
is not see -> how : 1
not see how -> this : 1
see how this -> optimization : 1
how this optimization -> can : 1
this optimization can -> be : 1
optimization can be -> achieved : 1
can be achieved -> with : 1
be achieved with -> the : 1
achieved with the -> original : 1
with the original -> syntax : 1
with the original -> class : 1
the original syntax -> still : 1
original syntax still -> the : 1
syntax still the -> create : 1
still the create -> a : 1
the create a -> proxy : 1
create a proxy -> class : 1
create a proxy -> containing : 1
a proxy class -> representing : 1
proxy class representing -> the : 1
class representing the -> concatenation : 1
representing the concatenation -> of : 1
the concatenation of -> two : 1
the concatenation of -> the : 1
concatenation of two -> concatproxy : 1
of two concatproxy -> const : 1
two concatproxy const -> const : 1
concatproxy const const -> construct : 1
concatproxy const const -> operator : 1
const const construct -> our : 1
const construct our -> simply : 1
construct our simply -> consisting : 1
our simply consisting -> of : 1
simply consisting of -> and : 1
consisting of and -> an : 1
and an overloaded -> note : 1
an overloaded note -> that : 1
overloaded note that -> this : 1
note that this -> is : 1
how to make -> and : 1
how to make -> concurrent : 1
to make and -> use : 1
make and use -> proxy : 1
and use proxy -> creating : 1
use proxy creating -> your : 1
proxy creating your -> own : 1
creating your own -> class : 1
your own class -> is : 1
own class is -> not : 1
class is not -> something : 1
is not something -> we : 1
not something we -> string : 1
something we string -> auto : 1
we string auto -> const : 1
string auto const -> return : 1
const return a -> visual : 1
return a visual -> representation : 1
code cdpaligncenter object -> representing : 1
cdpaligncenter object representing -> an : 1
object representing an -> accumulation : 1
representing an accumulation -> of : 1
an accumulation of -> two : 1
accumulation of two -> create : 1
of two create -> a : 1
two create a -> global : 1
create a global -> which : 1
a global which -> will : 1
global which will -> utilize : 1
which will utilize -> the : 1
utilize the note -> that : 1
the note that -> is : 1
note that is -> an : 1
note that is -> only : 1
note that is -> used : 1
that is an -> explicit : 1
is an explicit -> we : 1
an explicit we -> will : 1
an explicit we -> could : 1
explicit we will -> talk : 1
will talk about -> this : 1
talk about this -> later : 1
about this later -> in : 1
this later in -> this : 1
in this const -> bool : 1
this const bool -> return : 1
const bool return -> that : 1
bool return that -> we : 1
return that we -> have : 1
everything in we -> can : 1
in we can -> get : 1
we can get -> the : 1
we can get -> rid : 1
can get the -> best : 1
get the best -> of : 1
the best of -> both : 1
best of both -> auto : 1
of both auto -> a : 1
both auto a -> auto : 1
auto is other -> we : 1
is other we -> gained : 1
other we gained -> the : 1
we gained the -> performance : 1
gained the performance -> while : 1
the performance while -> preserving : 1
performance while preserving -> the : 1
while preserving the -> expressive : 1
while preserving the -> readability : 1
preserving the expressive -> syntax : 1
the expressive syntax -> of : 1
expressive syntax of -> evaluate : 1
syntax of evaluate -> the : 1
of evaluate the -> performance : 1
evaluate the performance -> utilize : 1
the performance utilize -> the : 1
performance utilize the -> following : 1
utilize the following -> which : 1
following which compares -> n : 1
which compares n -> auto : 1
compares n auto -> a : 1
n auto a -> auto : 1
auto c the -> vectors : 1
c the vectors -> with : 1
the vectors with -> random : 1
vectors with random -> auto : 1
with random auto -> i : 1
random auto i -> i : 1
auto i i -> executing : 1
i i executing -> this : 1
i executing this -> on : 1
executing this on -> an : 1
this on an -> intel : 1
on an intel -> we : 1
an intel we -> get : 1
intel we get -> the : 1
we get the -> following : 3
get the following -> proxy : 1
get the following -> computation : 1
get the following -> cdpalign : 1
the following proxy -> a : 1
following proxy a -> proxy : 1
proxy a proxy -> x : 1
a proxy x -> other : 1
proxy x other -> the : 1
x other the -> speed : 1
other the speed -> up : 1
the speed up -> with : 1
speed up with -> a : 1
with a proxy -> object : 1
proxy object is -> almost : 1
object is almost -> eleven : 1
is almost eleven -> times : 1
almost eleven times -> as : 1
eleven times as -> when : 1
times as when -> we : 1
as when we -> got : 1
when we got -> rid : 1
we got rid -> of : 1
got rid of -> the : 1
rid of the -> temporary : 1
rid of the -> manual : 2
the temporary string -> and : 1
temporary string and -> the : 1
string and the -> allocation : 1
and the allocation -> that : 1
the allocation that -> comes : 1
allocation that comes -> with : 1
with the preceding -> the : 1
preceding the global -> only : 1
the global only -> accepts : 1
global only accepts -> if : 1
only accepts if -> we : 1
accepts if we -> were : 1
were to accept -> an : 1
to accept an -> we : 1
accept an we -> could : 1
an we could -> end : 1
we could end -> up : 1
could end up -> accidentally : 1
end up accidentally -> misusing : 1
end up accidentally -> comparing : 1
up accidentally misusing -> the : 1
accidentally misusing the -> like : 1
misusing the like -> auto : 1
the like auto -> concat : 1
like auto concat -> auto : 1
auto concat auto -> concat : 1
concat auto concat -> problem : 1
auto concat problem -> here : 1
concat problem here -> is : 1
is that both -> are : 1
is that both -> locks : 1
that both are -> destructed : 1
both are destructed -> when : 1
are destructed when -> the : 1
destructed when the -> comparison : 1
when the comparison -> is : 1
the comparison is -> leading : 1
comparison is leading -> to : 1
is leading to -> a : 1
leading to a -> as : 1
to a as -> we : 1
a as we -> force : 1
as we force -> the : 1
we force the -> object : 1
force the object -> to : 1
the object to -> be : 1
object to be -> an : 1
to be an -> the : 1
be an the -> code : 1
an the code -> will : 1
not compile when -> used : 1
compile when used -> like : 1
when used like -> in : 1
used like in -> the : 1
like in the -> preceding : 1
the preceding of -> you : 1
preceding of you -> could : 1
of you could -> it : 1
you could it -> to : 1
could it to -> compile : 1
it to compile -> using : 1
to compile using -> but : 1
compile using but -> that : 1
using but that -> be : 1
but that be -> a : 1
that be a -> realistic : 1
be a realistic -> a : 1
a realistic a -> concatenated : 1
realistic a concatenated -> you : 1
a concatenated you -> might : 1
concatenated you might -> be : 1
you might be -> what : 1
might be what -> if : 1
be what if -> we : 1
if we actually -> want : 1
we actually want -> to : 1
actually want to -> store : 1
actually want to -> utilize : 1
store the concatenated -> string : 1
the concatenated string -> as : 1
concatenated string as -> a : 1
string as a -> new : 1
as a new -> string : 1
as a new -> and : 1
a new string -> rather : 1
new string rather -> than : 1
string rather than -> just : 1
rather than just -> compare : 1
than just compare -> what : 1
just compare what -> we : 1
compare what we -> do : 1
is simply overload -> an : 1
simply overload an -> so : 1
overload an so -> that : 1
an so that -> the : 1
that the concatenation -> of : 1
concatenation of the -> strings : 1
of the strings -> can : 1
the strings can -> implicitly : 1
strings can implicitly -> convert : 1
can implicitly convert -> itself : 1
implicitly convert itself -> to : 1
convert itself to -> a : 1
itself to a -> like : 1
to a like -> concatproxy : 1
a like concatproxy -> const : 1
like concatproxy const -> const : 1
const const operator -> const : 1
const operator const -> return : 1
operator const return -> auto : 1
return auto string -> c : 1
auto string c -> is : 1
string c is -> one : 1
c is one -> little : 1
is one little -> snag : 1
one little snag -> we : 1
little snag we -> cannot : 1
snag we cannot -> initialize : 1
we cannot initialize -> the : 1
cannot initialize the -> new : 1
initialize the new -> object : 1
the new object -> with : 1
the new object -> is : 1
new object with -> the : 1
the as this -> would : 1
as this would -> result : 1
this would result -> in : 1
would result in -> c : 1
would result in -> the : 1
result in c -> c : 1
in c c -> is : 1
c is a -> concatproxy : 1
is a concatproxy -> due : 1
a concatproxy due -> to : 1
concatproxy due to -> the : 1
we have no -> way : 1
we have no -> control : 2
have no way -> to : 1
way to get -> around : 1
to get around -> the : 1
get around the -> result : 1
around the result -> must : 1
the result must -> be : 1
result must be -> explicitly : 1
be explicitly cast -> to : 1
explicitly cast to -> an : 1
cast to an -> sqrt : 1
to an sqrt -> computation : 1
when comparing this -> we : 1
comparing this we -> will : 1
will show you -> how : 1
you how to -> use : 1
use a proxy -> object : 2
proxy object in -> order : 1
object in order -> to : 1
order to or -> even : 1
to or even -> using : 1
or even using -> the : 1
even using the -> computationally : 1
using the computationally -> heavy : 1
the computationally heavy -> when : 1
computationally heavy when -> comparing : 1
heavy when comparing -> the : 1
when comparing the -> distance : 1
when comparing the -> squared : 1
comparing the distance -> between : 1
between two dimensional -> simple : 1
two dimensional simple -> point : 1
dimensional simple point -> start : 1
simple point start -> with : 1
point start with -> a : 1
with a simple -> point : 1
with a simple -> call : 1
a simple point -> class : 1
simple point class -> in : 1
point class in -> it : 1
class in it -> and : 1
in it and -> coordinates : 1
it and coordinates -> and : 1
and coordinates and -> a : 1
coordinates and a -> member : 1
and a member -> which : 1
a member which -> calculates : 1
member which calculates -> the : 1
which calculates the -> distance : 1
calculates the distance -> to : 1
the distance to -> another : 1
the distance to -> a : 1
the distance to -> the : 1
distance to another -> float : 1
to another float -> auto : 1
another float auto -> const : 1
float auto const -> auto : 1
float auto const -> return : 4
const auto return -> float : 1
return float float -> usage : 1
return float float -> a : 1
return float float -> method : 1
float float usage -> example : 1
float usage example -> would : 1
usage example would -> be : 1
example would be -> as : 1
would be as -> target : 1
be as target -> auto : 1
as target auto -> a : 1
target auto a -> auto : 1
b auto a -> auto : 1
a auto cdpalignleft -> distances : 1
auto cdpalignleft distances -> from : 1
cdpalignleft distances from -> two : 1
distances from two -> arbitrary : 1
from two arbitrary -> points : 1
two arbitrary points -> to : 1
arbitrary points to -> target : 1
points to target -> underlying : 1
to target underlying -> into : 1
target underlying into -> the : 1
underlying into the -> mathematics : 1
into the mathematics -> of : 1
the mathematics of -> the : 1
mathematics of the -> distance : 1
of the distance -> you : 1
of the distance -> function : 1
the distance you -> may : 1
distance you may -> notice : 1
you may notice -> something : 1
may notice something -> formula : 1
notice something formula -> used : 1
something formula used -> for : 1
formula used for -> distance : 1
used for distance -> is : 1
for distance is -> as : 1
distance is as -> if : 1
is as if -> we : 1
compare the distance -> between : 1
distance between the -> squared : 1
between the squared -> distance : 1
the squared distance -> is : 1
the squared distance -> also : 1
the squared distance -> between : 1
the squared distance -> with : 1
squared distance is -> all : 1
squared distance is -> never : 1
distance is all -> we : 1
all we as -> the : 1
we as the -> following : 1
as the following -> formula : 1
as the following -> figure : 1
the following formula -> cdpaligncenter : 1
following formula cdpaligncenter -> the : 1
formula cdpaligncenter the -> operation : 1
cdpaligncenter the operation -> is : 1
operation is not -> required : 1
operation is not -> the : 1
is not required -> if : 1
is not required -> to : 1
not required if -> we : 1
required if we -> just : 1
if we just -> want : 1
we just want -> to : 1
want to compare -> distances : 1
to compare distances -> to : 1
compare distances to -> each : 1
distances to each -> we : 1
to each we -> can : 1
each we can -> omit : 1
we can omit -> the : 1
can omit the -> nice : 1
omit the nice -> thing : 1
the nice thing -> is : 1
nice thing is -> a : 1
thing is a -> relatively : 1
is a relatively -> slow : 1
is a relatively -> simple : 1
a relatively slow -> meaning : 1
relatively slow meaning -> that : 1
slow meaning that -> if : 1
meaning that if -> we : 1
meaning that if -> an : 1
we compare a -> lot : 1
compare a lot -> of : 1
lot of distances -> between : 1
of distances between -> we : 1
distances between we -> some : 1
between we some -> question : 1
we some question -> how : 1
some question how -> can : 1
question how can -> we : 1
how can we -> do : 1
can we do -> this : 1
do this while -> preserving : 1
this while preserving -> a : 1
while preserving a -> clean : 1
preserving a clean -> see : 1
a clean see -> how : 1
clean see how -> we : 1
proxy object to -> make : 1
object to make -> a : 1
make a simple -> library : 1
a simple library -> perform : 1
simple library perform -> this : 1
library perform this -> optimization : 1
perform this optimization -> under : 1
this optimization under -> the : 1
optimization under the -> hood : 1
under the hood -> when : 1
the hood when -> comparing : 1
hood when comparing -> the : 1
comparing the squared -> distance : 2
squared distance also -> has : 1
distance also has -> better : 1
also has better -> precision : 1
has better precision -> on : 1
better precision on -> floating : 1
precision on floating -> point : 1
on floating point -> as : 1
floating point as -> loses : 1
floating point as -> if : 1
point as loses -> precision : 1
as loses precision -> two : 1
loses precision two -> very : 1
precision two very -> similar : 1
two very similar -> values : 1
very similar values -> might : 1
similar values might -> result : 1
values might result -> in : 1
result in the -> same : 2
result in the -> following : 1
the same square -> might : 1
same square might -> result : 1
square might result -> in : 1
the same value -> as : 1
same value as -> due : 1
value as due -> to : 1
due to lost -> we : 1
to lost we -> start : 1
lost we start -> with : 1
the original class -> but : 1
original class but -> we : 1
class but we -> split : 1
but we split -> the : 1
we split the -> into : 1
we split the -> algorithm : 1
split the into -> and : 1
the into and -> point : 1
into and point -> float : 1
and point float -> auto : 1
point float auto -> const : 2
point float auto -> dist : 1
point float auto -> auto : 1
float float a -> visual : 1
float a visual -> representation : 1
code cdpaligncenter and -> squared : 1
cdpaligncenter and squared -> distance : 1
and squared distance -> between : 1
squared distance between -> two : 2
between two say -> a : 1
two say a -> user : 1
say a user -> of : 1
a user of -> is : 1
user of is -> implementing : 1
of is implementing -> a : 1
is implementing a -> convenient : 1
implementing a convenient -> function : 1
a convenient function -> that : 1
convenient function that -> determines : 1
function that determines -> if : 1
that determines if -> two : 1
determines if two -> points : 1
if two points -> are : 1
two points are -> nearer : 1
points are nearer -> to : 1
are nearer to -> each : 1
nearer to each -> other : 1
each other than -> a : 1
other than a -> specific : 1
a specific she -> now : 1
specific she now -> has : 1
she now has -> two : 1
now has two -> either : 1
has two either -> use : 1
two either use -> or : 1
either use or -> their : 1
use or their -> corresponding : 1
or their corresponding -> implementations : 1
their corresponding implementations -> are : 1
corresponding implementations are -> shown : 1
implementations are shown -> in : 1
are shown in -> the : 1
following the member -> the : 1
member the member -> point : 1
the member point -> float : 1
member point float -> auto : 1
float auto dist -> return : 1
auto dist return -> dist : 1
dist return dist -> point : 1
return dist point -> float : 1
dist point float -> auto : 1
float auto auto -> return : 1
auto return has -> the : 1
return has the -> advantage : 1
has the advantage -> of : 2
the advantage of -> being : 2
advantage of being -> more : 1
advantage of being -> since : 1
of being more -> whereas : 1
being more whereas -> the : 1
more whereas the -> has : 1
whereas the has -> the : 1
the has the -> advantage : 1
of being since -> is : 1
being since is -> much : 1
since is much -> faster : 1
is much faster -> than : 1
much faster than -> the : 1
than the invoked -> inside : 1
the invoked inside -> the : 1
invoked inside the -> call : 1
inside the call -> of : 1
the call of -> optimal : 1
call of optimal -> solution : 1
of optimal solution -> would : 1
optimal solution would -> be : 1
solution would be -> to : 1
be to have -> the : 1
have the syntax -> of : 1
syntax of and -> the : 1
and the performance -> of : 1
performance of order -> to : 1
of order to -> achieve : 1
order to achieve -> of : 1
to achieve of -> returning : 1
achieve of returning -> a : 1
of returning a -> from : 1
returning a from -> the : 1
a from the -> member : 1
from the member -> we : 1
from the member -> on : 1
the member we -> return : 1
member we return -> an : 1
we return an -> intermediate : 1
return an intermediate -> object : 1
an intermediate object -> hidden : 1
intermediate object hidden -> to : 1
object hidden to -> the : 1
hidden to the -> depending : 1
to the depending -> on : 1
the depending on -> how : 1
on how the -> user : 1
how the user -> uses : 1
the user uses -> the : 1
user uses the -> hidden : 1
uses the hidden -> it : 1
the hidden it -> should : 1
hidden it should -> not : 1
it should not -> perform : 1
should not perform -> the : 1
not perform the -> operation : 1
perform the operation -> until : 1
the operation until -> it : 1
operation until it -> is : 1
until it is -> really : 1
until it is -> also : 1
it is really -> this : 1
is really this -> object : 1
really this object -> will : 1
this object will -> be : 1
will be referred -> to : 1
be referred to -> as : 1
as the distproxy -> create : 1
the distproxy create -> the : 1
distproxy create the -> proxy : 1
create the proxy -> object : 1
the proxy object -> for : 1
object for distances -> between : 1
for distances between -> a : 1
distances between a -> point : 1
between a point -> distance : 1
a point distance -> simply : 1
point distance simply -> consists : 1
distance simply consists -> of : 1
simply consists of -> the : 1
of the squared -> distance : 1
between two points -> and : 1
two points and -> a : 1
points and a -> comparison : 1
and a comparison -> to : 1
a comparison to -> a : 1
comparison to a -> the : 1
to a the -> actual : 1
to a the -> complete : 1
the actual squared -> distance : 1
actual squared distance -> is : 1
distance is never -> exposed : 1
is never exposed -> in : 1
never exposed in -> order : 1
exposed in order -> to : 1
prevent the library -> user : 1
the library user -> from : 1
library user from -> mixing : 1
user from mixing -> the : 1
from mixing the -> with : 1
mixing the with -> the : 1
with the regular -> that : 1
the regular that -> if : 1
regular that if -> we : 1
if we do -> not : 1
do not take -> the : 1
not take the -> user : 1
take the user -> of : 1
the code might -> accidentally : 1
code might accidentally -> write : 1
might accidentally write -> the : 1
accidentally write the -> a : 1
write the a -> auto : 1
b auto spot -> subtle : 1
auto spot subtle -> bug : 1
spot subtle bug -> below : 1
subtle bug below -> as : 1
bug below as -> distance : 1
below as distance -> is : 1
as distance is -> compared : 1
distance is compared -> to : 1
is compared to -> bool : 1
is compared to -> the : 1
compared to bool -> he : 1
to bool he -> may : 1
bool he may -> end : 1
he may end -> up : 1
may end up -> accidentally : 1
up accidentally comparing -> the : 1
accidentally comparing the -> squared : 1
squared distance with -> the : 1
distance with the -> real : 1
with the real -> yielding : 1
the real yielding -> proxy : 1
real yielding proxy -> is : 1
yielding proxy is -> implemented : 1
proxy is implemented -> as : 1
implemented as taking -> the : 1
as taking the -> coordinates : 1
taking the coordinates -> of : 1
the coordinates of -> the : 1
coordinates of the -> two : 1
the two points -> as : 1
two points as -> input : 1
points as input -> and : 1
as input and -> a : 1
input and a -> method : 1
input and a -> range : 1
and a method -> that : 1
a method that -> compares : 1
method that compares -> it : 1
that compares it -> with : 1
compares it with -> a : 1
a regular float -> float : 1
regular float float -> float : 1
float float float -> auto : 2
float float auto -> const : 2
return float we -> rewrite : 1
float we rewrite -> the : 1
rewrite the class -> to : 1
class to return -> instead : 1
to return instead -> of : 1
return instead of -> the : 1
the actual distance -> as : 1
the actual distance -> value : 1
actual distance as -> point : 1
distance as point -> float : 1
as point float -> auto : 1
float float method -> now : 1
float method now -> performs : 1
method now performs -> its : 1
now performs its -> comparison : 1
performs its comparison -> much : 1
its comparison much -> as : 1
comparison much as -> the : 1
much as the -> operation : 1
as the operation -> is : 1
operation is omitted -> in : 1
operation is omitted -> while : 1
is omitted in -> favor : 1
omitted in favor -> of : 1
favor of which -> is : 1
a much faster -> especially : 1
much faster especially -> when : 1
faster especially when -> the : 1
especially when the -> second : 1
especially when the -> code : 1
when the second -> parameter : 1
is an integer -> the : 1
an integer the -> nicest : 1
integer the nicest -> thing : 1
the nicest thing -> is : 1
nicest thing is -> that : 1
thing is that -> it : 1
thing is that -> the : 1
that it all -> happens : 1
it all happens -> under : 1
all happens under -> the : 1
happens under the -> the : 1
the the implementor -> of : 1
the implementor of -> the : 1
implementor of the -> function : 1
the function can -> compare : 1
function can compare -> the : 1
can compare the -> result : 1
compare the result -> of : 1
distance function with -> a : 1
point as if -> the : 1
if the distance -> function : 1
distance function returned -> a : 1
function returned a -> floating : 1
returned a floating -> point : 1
floating point value -> right : 1
point value right -> distproxy : 1
value right distproxy -> to : 1
right distproxy to -> something : 1
something more that -> we : 1
more that we -> have : 1
have the we -> want : 1
the we want -> to : 1
the we want -> a : 1
make the class -> more : 1
the class more -> for : 1
class more for -> the : 1
more for the -> user : 1
the user might -> actually : 1
user might actually -> want : 1
might actually want -> to : 1
want to utilize -> the : 1
utilize the received -> distance : 1
the received distance -> or : 1
received distance or -> compare : 1
distance or compare -> it : 1
or compare it -> with : 1
it with other -> expand : 1
with other expand -> the : 1
other expand the -> class : 1
expand the class -> with : 1
with a comparator -> to : 1
a comparator to -> another : 1
comparator to another -> and : 1
to another and -> an : 1
another and an -> implicit : 1
and an implicit -> cast : 1
an implicit cast -> to : 1
implicit cast to -> float : 1
implicit cast to -> const : 1
cast to float -> float : 1
to float float -> float : 1
const return implicit -> cast : 1
return implicit cast -> to : 1
cast to const -> return : 1
return float distances -> with : 1
float distances with -> see : 1
distances with see -> how : 1
with see how -> the : 1
how the proxy -> class : 1
the proxy class -> looks : 1
proxy class looks -> in : 1
class looks in -> in : 1
looks in in -> this : 1
in in this -> determine : 1
in this determine -> which : 1
this determine which -> of : 1
determine which of -> the : 1
which of the -> that : 1
which of the -> elements : 1
the that are -> closest : 1
that are closest -> to : 1
are closest to -> how : 1
closest to how -> the : 1
to how the -> code : 1
the code syntactically -> looks : 1
code syntactically looks -> exactly : 1
syntactically looks exactly -> the : 1
looks exactly the -> same : 1
exactly the same -> as : 2
same as had -> we : 1
as had we -> not : 1
had we not -> utilized : 1
we not utilized -> a : 1
not utilized a -> proxy : 1
utilized a proxy -> bingo : 1
a proxy bingo -> a : 1
proxy bingo a -> b : 1
bingo a b -> the : 1
a b the -> the : 1
b the the -> final : 1
the the final -> statement : 1
the final statement -> is : 1
final statement is -> expanded : 1
statement is expanded -> to : 1
expanded to something -> similar : 1
to something similar -> to : 1
similar to these -> proxy : 1
to these proxy -> objects : 1
these proxy objects -> are : 1
proxy objects are -> never : 1
objects are never -> visible : 1
are never visible -> from : 1
never visible from -> the : 1
visible from the -> member : 1
the member on -> distproxy : 1
member on distproxy -> is : 1
on distproxy is -> which : 1
distproxy is which -> compares : 1
is which compares -> member : 1
which compares member -> the : 1
compares member the -> operation : 1
member the operation -> is : 1
is omitted while -> the : 1
omitted while the -> interface : 1
while the interface -> of : 1
the interface of -> the : 1
interface of the -> class : 1
is still see -> how : 1
still see how -> it : 1
see how it -> looks : 1
it looks if -> we : 1
looks if we -> need : 1
need the actual -> distances : 1
the actual distances -> with : 1
actual distances with -> requesting : 1
distances with requesting -> the : 1
with requesting the -> actual : 1
requesting the actual -> the : 1
actual the calling -> code : 1
the calling code -> changes : 1
calling code changes -> a : 1
code changes a -> we : 1
changes a we -> have : 1
to explicitly parse -> the : 1
explicitly parse the -> to : 1
parse the to -> that : 1
the to that -> we : 1
that we just -> use : 1
we just use -> as : 1
just use as -> a : 1
use as a -> b : 1
as a b -> dist : 1
a b dist -> note : 1
b dist note -> that : 1
dist note that -> we : 1
that we we -> were : 1
we we were -> to : 1
were to just -> write : 1
to just write -> the : 1
just write the -> object : 1
write the object -> would : 1
would be of -> type : 1
be of type -> rather : 1
of type rather -> than : 1
type rather than -> we : 1
rather than we -> do : 1
than we do -> not : 1
not want the -> users : 1
not want the -> parallelism : 1
want the users -> of : 1
the users of -> our : 1
users of our -> code : 1
code base to -> explicitly : 1
code base to -> utilize : 1
code base to -> use : 1
base to explicitly -> handle : 1
to explicitly handle -> proxy : 1
explicitly handle proxy -> objects : 1
handle proxy objects -> should : 1
proxy objects should -> operate : 1
objects should operate -> in : 1
should operate in -> the : 1
operate in the -> dark : 1
in the dark -> and : 1
the dark and -> only : 1
dark and only -> their : 1
and only their -> results : 1
only their results -> should : 1
their results should -> be : 1
results should be -> utilized : 1
should be utilized -> this : 1
be utilized this -> the : 1
utilized this the -> comparison : 1
this the comparison -> result : 1
the comparison result -> or : 1
comparison result or -> the : 1
result or the -> actual : 1
or the actual -> distance : 1
actual distance value -> is : 1
distance value is -> even : 1
value is even -> though : 1
is even though -> we : 1
though we cannot -> hide : 1
we cannot hide -> proxy : 1
cannot hide proxy -> objects : 1
hide proxy objects -> see : 1
proxy objects see -> how : 1
objects see how -> we : 1
we can tighten -> them : 1
can tighten them -> to : 1
tighten them to -> prevent : 1
them to prevent -> the : 1
prevent the misuse -> of : 1
misuse of may -> have : 1
of may have -> noted : 1
may have noted -> that : 1
have noted that -> there : 1
noted that there -> can : 1
that there can -> be : 1
there can be -> a : 1
there can be -> cases : 1
a case where -> using : 1
case where using -> the : 1
where using the -> class : 1
the class might -> lead : 1
class might lead -> to : 1
might lead to -> worse : 1
lead to worse -> the : 1
to worse the -> user : 1
worse the user -> of : 1
the class were -> to : 1
class were to -> use : 1
use the class -> like : 1
class like that -> if : 1
like that if -> the : 1
that if the -> were : 1
if the were -> invoked : 1
the were invoked -> multiple : 1
were invoked multiple -> times : 1
invoked multiple times -> according : 1
multiple times according -> to : 1
times according to -> the : 1
to the requests -> for : 1
the requests for -> the : 1
requests for the -> distance : 1
for the distance -> a : 1
the distance a -> auto : 1
distance a auto -> b : 1
b auto dist -> float : 1
b auto dist -> is : 1
auto dist float -> assignment : 1
dist float assignment -> invoked : 1
float assignment invoked -> float : 1
assignment invoked float -> of : 1
invoked float of -> dist : 1
float of dist -> is : 1
of dist is -> invoked : 1
dist is invoked -> a : 1
is invoked a -> stupid : 1
invoked a stupid -> there : 1
a stupid there -> can : 1
stupid there can -> be : 1
can be cases -> where : 1
cases where this -> might : 1
where this might -> and : 1
this might and -> we : 1
might and we -> want : 1
want to force -> the : 1
to force the -> user : 1
the user to -> only : 1
user to only -> invoke : 1
to only invoke -> once : 1
to only invoke -> on : 1
only invoke once -> per : 1
invoke once per -> in : 1
once per in -> order : 1
per in order -> to : 1
to prevent this -> we : 1
prevent this we -> make : 1
this we make -> the : 1
make the member -> function : 1
member function invocable -> only : 1
function invocable only -> on : 1
invocable only on -> that : 1
only on that -> the : 1
the can only -> be : 1
only be converted -> to : 1
to a floating -> point : 1
floating point if -> it : 1
point if it -> is : 1
to a force -> this : 1
a force this -> behavior : 1
force this behavior -> by : 1
this behavior by -> using : 1
behavior by using -> as : 1
by using as -> a : 1
using as a -> modifier : 1
as a modifier -> on : 1
a modifier on -> the : 1
member the modifier -> works : 1
the modifier works -> just : 1
modifier works just -> like : 1
like a but -> where : 1
a but where -> a : 1
but where a -> modifier : 1
where a modifier -> forces : 1
a modifier forces -> the : 1
modifier forces the -> member : 1
modifier forces the -> function : 1
forces the member -> function : 1
member function to -> not : 1
function to not -> modify : 1
to not modify -> the : 1
not modify the -> the : 1
modify the the -> modifier : 1
the modifier forces -> the : 1
forces the function -> to : 1
function to only -> invoke : 1
only invoke on -> temporary : 1
invoke on temporary -> modification : 1
on temporary modification -> looks : 1
temporary modification looks -> like : 1
modification looks like -> const : 1
looks like const -> return : 1
were to invoke -> on : 1
to invoke on -> a : 1
invoke on a -> that : 1
on a that -> is : 1
a that is -> tied : 1
that is tied -> to : 1
to a such -> as : 1
as the in -> the : 1
following the compiler -> will : 1
compiler will refuse -> to : 1
refuse to a -> auto : 1
auto dist is -> of : 1
dist is of -> type : 1
is of type -> float : 1
of type float -> we : 1
type float we -> can : 1
float we can -> still : 1
we can still -> invoke : 1
can still invoke -> directly : 1
still invoke directly -> on : 1
invoke directly on -> the : 1
directly on the -> like : 1
on the like -> a : 1
the like a -> auto : 1
like a auto -> b : 1
auto b float -> temporary : 1
b float temporary -> class : 1
float temporary class -> will : 1
temporary class will -> still : 1
class will still -> be : 1
still be created -> in : 1
be created in -> the : 1
created in the -> but : 1
created in the -> same : 1
the but since -> it : 1
but since it -> is : 1
a we are -> allowed : 1
a we are -> creating : 1
we are allowed -> to : 1
allowed to implicitly -> convert : 1
to implicitly convert -> it : 1
implicitly convert it -> to : 1
it to this -> will : 1
to this will -> prevent : 1
this will prevent -> such : 1
will prevent such -> misuse : 1
prevent such misuse -> as : 1
such misuse as -> invoking : 1
misuse as invoking -> several : 1
as invoking several -> times : 1
invoking several times -> on : 1
several times on -> a : 1
times on a -> the : 1
on a the -> sake : 1
a the sake -> of : 1
sake of see -> how : 1
see how much -> performance : 1
how much performance -> actually : 1
much performance actually -> here : 1
performance actually here -> is : 1
actually here is -> a : 1
function that finds -> the : 1
that finds the -> distance : 1
finds the distance -> to : 1
distance to a -> specified : 1
to a specified -> point : 1
a specified point -> in : 1
specified point in -> a : 1
point in a -> vector : 1
vector of randomly -> generated : 1
of randomly generated -> generate : 1
randomly generated generate -> random : 1
generated generate random -> auto : 1
generate random auto -> points : 1
random auto points -> i : 1
auto points i -> i : 1
points i i -> auto : 1
i auto x -> auto : 1
auto x auto -> y : 2
x auto y -> find : 1
x auto y -> auto : 1
auto y find -> the : 1
y find the -> distance : 1
find the distance -> to : 1
distance to the -> nearest : 1
to the nearest -> auto : 1
the nearest auto -> needle : 1
nearest auto needle -> const : 1
auto needle const -> return : 1
needle const return -> dist : 1
const return dist -> this : 1
return dist this -> piece : 1
dist this piece -> of : 1
code is executed -> twice : 1
code is executed -> by : 1
code is executed -> in : 1
is executed twice -> as : 1
executed twice as -> fast : 1
as fast using -> an : 1
fast using an -> intel : 1
using an intel -> as : 1
using an intel -> note : 1
an intel as -> you : 1
intel as you -> can : 1
can the syntax -> is : 1
the syntax is -> exactly : 1
the syntax is -> still : 1
syntax is exactly -> the : 1
same as if -> we : 1
same as if -> the : 1
if we did -> not : 1
we did not -> implement : 1
did not implement -> any : 1
not implement any -> operator : 1
implement any operator -> overloading : 1
any operator overloading -> and : 1
and proxy you -> has : 1
proxy you has -> the : 1
you has the -> ability : 1
ability to overload -> operators : 1
to overload operators -> that : 1
overload operators that -> are : 1
are usually utilized -> to : 1
usually utilized to -> make : 1
utilized to make -> custom : 1
to make custom -> math : 1
make custom math -> objects : 1
custom math objects -> that : 1
math objects that -> can : 1
objects that can -> be : 1
used with standard -> math : 1
with standard math -> such : 1
standard math such -> as : 1
math such as -> and : 1
code more another -> example : 1
more another example -> is : 1
another example is -> the : 1
is the stream -> which : 1
the stream which -> in : 1
stream which in -> the : 1
which in the -> standard : 1
library is overloaded -> in : 1
is overloaded in -> order : 1
overloaded in order -> to : 1
to convert the -> objects : 1
convert the objects -> to : 1
the objects to -> as : 1
objects to as -> shown : 1
to as shown -> use : 1
as shown use -> the : 1
shown use the -> overloading : 1
use the overloading -> in : 1
the overloading in -> other : 1
overloading in other -> the : 1
other the range -> as : 1
the range as -> discussed : 1
range as discussed -> uses : 1
as discussed uses -> overloading : 1
discussed uses overloading -> to : 1
uses overloading to -> compose : 1
overloading to compose -> views : 1
to compose views -> like : 1
compose views like -> rv : 1
views like rv -> return : 1
like rv return -> v : 1
rv return v -> return : 1
v return libraries -> have : 1
return libraries have -> used : 1
libraries have used -> it : 1
used it to -> create : 1
create an infix -> operator : 1
an infix operator -> so : 1
an infix operator -> is : 1
infix operator so -> that : 1
operator so that -> we : 2
we can emulate -> the : 1
can emulate the -> python : 1
emulate the python -> like : 1
the python like -> most : 1
python like most -> people : 1
like most people -> would : 1
most people would -> probably : 1
people would probably -> argue : 1
would probably argue -> against : 1
probably argue against -> creative : 1
argue against creative -> operator : 1
against creative operator -> it : 1
creative operator it -> can : 1
operator it can -> be : 1
can be educational -> to : 1
be educational to -> learn : 1
educational to learn -> how : 1
learn how pipe -> operator : 1
how pipe operator -> as : 1
an extension to -> other : 1
extension to other -> for : 1
to other for -> and : 1
other for and -> does : 1
for and does -> not : 1
does not support -> extension : 1
not support extension -> that : 1
support extension that -> you : 1
extension that you -> cannot : 1
that you cannot -> extend : 1
that you cannot -> use : 1
you cannot extend -> a : 1
you cannot extend -> with : 1
cannot extend a -> class : 1
extend a class -> locally : 1
a class locally -> with : 1
class locally with -> a : 1
locally with a -> new : 1
a new member -> you : 1
new member you -> cannot : 1
member you cannot -> extend : 1
cannot extend with -> to : 1
extend with to -> be : 1
with to be -> used : 1
used like numbers -> auto : 1
like numbers auto -> you : 1
numbers auto you -> can : 1
can overload the -> pipe : 1
overload the pipe -> operator : 1
pipe operator to -> achieve : 1
operator to achieve -> almost : 1
to achieve almost -> auto : 1
achieve almost auto -> numbers : 1
almost auto numbers -> pipe : 1
auto numbers pipe -> see : 1
numbers pipe see -> how : 1
pipe see how -> we : 1
implement a simple -> pipe : 1
a simple pipe -> operator : 1
simple pipe operator -> so : 1
pipe operator so -> that : 1
write the numbers -> auto : 1
the numbers auto -> seven : 2
numbers auto seven -> bool : 1
numbers auto seven -> auto : 1
auto seven bool -> numbers : 1
seven bool numbers -> used : 1
bool numbers used -> a : 1
numbers used a -> pipeable : 1
used a pipeable -> two : 1
a pipeable two -> as : 1
pipeable two as -> the : 1
two as the -> left : 1
as the left -> be : 1
the left be -> we : 1
left be we -> need : 1
be we need -> the : 1
need the overload -> to : 1
the overload to -> contain : 1
overload to contain -> something : 1
to contain something -> unique : 1
contain something unique -> on : 1
something unique on -> the : 1
unique on the -> right : 1
the right we -> create : 1
right we create -> a : 1
create a struct -> which : 1
a struct which -> holds : 1
struct which holds -> onto : 1
which holds onto -> the : 1
holds onto the -> right : 1
onto the right -> this : 1
the right this -> the : 1
right this the -> overloaded : 1
this the overloaded -> pipe : 1
the overloaded pipe -> operator : 1
overloaded pipe operator -> can : 1
pipe operator can -> recognize : 1
operator can recognize -> the : 1
can recognize the -> containsproxy : 1
can recognize the -> const : 1
recognize the containsproxy -> const : 1
the containsproxy const -> typename : 1
containsproxy const typename -> const : 1
const typename const -> const : 1
typename const const -> v : 1
const const v -> return : 1
const v return -> we : 1
v return we -> can : 1
it like the -> pipe : 1
like the pipe -> operator : 1
pipe operator although -> the : 1
operator although the -> syntax : 1
although the syntax -> is : 1
syntax is still -> ugly : 1
is still ugly -> as : 1
still ugly as -> we : 1
ugly as we -> need : 1
specify the numbers -> auto : 1
auto seven auto -> proxy : 1
seven auto proxy -> bool : 1
auto proxy bool -> numbers : 1
proxy bool numbers -> order : 1
bool numbers order -> to : 1
numbers order to -> make : 1
make the syntax -> we : 1
the syntax we -> can : 1
syntax we can -> simply : 1
can simply make -> a : 1
simply make a -> convenience : 1
make a convenience -> function : 1
convenience function take -> the : 1
function take the -> value : 1
take the value -> and : 1
the value and -> create : 1
the value and -> incremented : 1
the value and -> the : 1
value and create -> a : 1
a proxy containing -> the : 1
proxy containing the -> return : 1
containing the return -> all : 1
the return all -> we : 1
return all we -> we : 1
all we we -> can : 1
we we can -> now : 1
now use it -> for : 1
it for any -> type : 1
any type or -> penguins : 1
type or penguins -> bool : 1
or penguins bool -> penguins : 1
penguins bool penguins -> infix : 1
bool penguins infix -> of : 1
penguins infix of -> adding : 1
infix of adding -> an : 1
of adding an -> infix : 1
adding an infix -> operator : 1
infix operator is -> both : 1
operator is both -> a : 1
is both a -> hack : 1
both a hack -> more : 1
a hack more -> or : 1
hack more or -> an : 1
more or an -> abuse : 1
or an abuse -> of : 1
an abuse of -> operator : 1
abuse of operator -> what : 1
of operator what -> you : 1
operator what you -> actually : 1
what you actually -> do : 1
you actually do -> is : 1
actually do is -> overload : 1
do is overload -> both : 1
is overload both -> the : 1
overload both the -> less : 1
both the less -> than : 1
less than and -> greater : 1
than and greater -> than : 1
and greater than -> operators : 1
greater than operators -> in : 1
than operators in -> order : 1
operators in order -> to : 1
to make something -> that : 1
make something that -> looks : 1
something that looks -> like : 1
that looks like -> an : 1
like an infix -> nothing : 1
an infix nothing -> it : 1
infix nothing it -> can : 1
nothing it can -> be : 1
used to show -> to : 1
to show to -> your : 1
show to your -> who : 1
to your who -> praise : 1
your who praise -> the : 1
who praise the -> in : 1
praise the in -> that : 1
the in that -> you : 1
the in that -> the : 1
in that you -> can : 1
can implement something -> similar : 1
implement something similar -> in : 1
something similar in -> we : 1
similar in we -> want : 1
want to see -> whether : 1
to see whether -> an : 1
see whether an -> object : 1
object is contained -> in : 1
is contained in -> a : 1
in a list -> with : 1
a list with -> the : 1
list with the -> following : 1
with the following -> asia : 1
with the following -> return : 1
the following asia -> auto : 1
following asia auto -> africa : 1
asia auto africa -> auto : 1
auto africa auto -> auto : 1
africa auto auto -> is : 1
is is with -> the : 1
is with the -> pipe : 1
is with the -> lightweight : 1
with the pipe -> we : 1
the pipe we -> create : 1
pipe we create -> a : 1
create a but -> in : 1
but in this -> the : 1
this the proxy -> holds : 1
the proxy holds -> the : 1
proxy holds the -> left : 1
holds the left -> value : 1
the left value -> of : 1
left value of -> the : 1
of the struct -> inproxy : 1
of the struct -> an : 1
of the struct -> are : 1
of the struct -> cannot : 1
the struct inproxy -> const : 1
struct inproxy const -> then : 1
inproxy const then -> define : 1
const then define -> an : 1
then define an -> empty : 1
define an empty -> struct : 1
an empty struct -> called : 1
empty struct called -> instantiate : 1
struct called instantiate -> a : 1
called instantiate a -> static : 1
instantiate a static -> object : 1
a static object -> called : 1
static object called -> note : 1
object called note -> that : 1
called note that -> is : 1
that is only -> a : 1
only a convenience -> in : 1
a convenience in -> order : 1
convenience in order -> to : 1
order to invoke -> the : 1
invoke the infix -> operator : 1
the infix operator -> rather : 1
infix operator rather -> than : 1
operator rather than -> that : 1
than that to -> remove : 1
that to remove -> the : 1
to remove the -> curly : 1
remove the curly -> constexpr : 1
the curly constexpr -> static : 1
curly constexpr static -> auto : 1
constexpr static auto -> in : 1
static auto in -> type : 1
auto in type -> is : 1
type is then -> used : 1
then used for -> so : 1
used for so -> it : 1
for so it -> can : 1
so it can -> recognize : 1
it can recognize -> the : 1
recognize the const -> return : 1
return we overload -> the : 1
we overload the -> greater : 1
overload the greater -> than : 1
the greater than -> operator : 1
greater than operator -> to : 1
than operator to -> take : 1
operator to take -> as : 1
to take as -> the : 1
take as the -> first : 1
the first argument -> and : 1
first argument and -> the : 1
argument and the -> right : 1
and the right -> side : 1
the right side -> as : 1
right side as -> its : 1
side as its -> second : 1
as its second -> it : 1
its second it -> also : 1
second it also -> holds : 1
it also holds -> the : 1
also holds the -> actual : 1
holds the actual -> typename : 1
the actual typename -> const : 1
actual typename const -> return : 1
typename const return -> we : 1
it like africa -> sweden : 1
like africa sweden -> sweden : 1
africa sweden sweden -> is : 1
sweden sweden is -> the : 1
sweden is the -> the : 1
the the code -> expands : 1
the code expands -> to : 1
code expands to -> the : 1
expands to the -> following : 1
the following africa -> sweden : 1
following africa sweden -> p : 1
africa sweden p -> sweden : 1
sweden p sweden -> p : 1
p sweden p -> is : 1
sweden p is -> examples : 1
p is examples -> covered : 1
is examples covered -> in : 1
examples covered in -> this : 1
covered in this -> section : 2
this section show -> a : 1
section show a -> rudimentary : 1
show a rudimentary -> approach : 1
a rudimentary approach -> to : 1
rudimentary approach to -> implementing : 1
approach to implementing -> the : 1
to implementing the -> pipe : 1
implementing the pipe -> and : 1
the pipe and -> infix : 1
pipe and infix -> libraries : 1
and infix libraries -> such : 1
infix libraries such -> as : 1
libraries such as -> range : 1
such as range -> and : 1
as range and -> the : 1
the by available -> at : 1
by available at -> implement : 1
available at implement -> adapters : 1
at implement adapters -> that : 1
implement adapters that -> take : 1
adapters that take -> a : 1
that take a -> regular : 1
take a regular -> function : 1
regular function and -> give : 1
function and give -> them : 1
and give them -> the : 1
give them the -> ability : 1
them the ability -> to : 1
to be invoked -> using : 1
be invoked using -> the : 1
invoked using the -> pipe : 1
the pipe this -> you : 1
pipe this you -> learned : 1
you learned the -> difference : 1
learned the difference -> between : 1
difference between lazy -> evaluation : 1
between lazy evaluation -> and : 1
evaluation and eager -> you : 1
and eager you -> also : 1
eager you also -> learned : 1
to use hidden -> proxy : 1
use hidden proxy -> objects : 1
proxy objects to -> implement : 1
objects to implement -> lazy : 1
to implement lazy -> evaluation : 2
implement lazy evaluation -> behind : 1
implement lazy evaluation -> optimizations : 1
lazy evaluation behind -> the : 1
evaluation behind the -> meaning : 1
behind the meaning -> that : 1
the meaning that -> you : 2
that you understood -> how : 1
you understood how -> to : 1
understood how to -> implement : 1
lazy evaluation optimizations -> while : 1
evaluation optimizations while -> preserving : 1
while preserving an -> interface : 1
preserving an interface -> for : 1
an interface for -> your : 1
interface for your -> makes : 1
for your makes -> writing : 1
your makes writing -> optimized : 1
makes writing optimized -> code : 1
writing optimized code -> much : 1
optimized code much -> more : 1
code much more -> readable : 1
much more readable -> and : 1
more readable and -> less : 1
readable and less -> as : 1
and less as -> the : 1
less as the -> complex : 1
as the complex -> optimizations : 1
the complex optimizations -> can : 1
complex optimizations can -> be : 1
optimizations can be -> kept : 1
can be kept -> inside : 1
be kept inside -> your : 1
kept inside your -> library : 1
inside your library -> classes : 1
your library classes -> instead : 1
library classes instead -> of : 1
classes instead of -> having : 1
instead of having -> it : 1
of having it -> exposed : 1
having it exposed -> in : 1
it exposed in -> the : 1
exposed in the -> application : 1
the application this -> we : 1
application this we -> are : 1
going to explore -> how : 1
to explore how -> to : 1
explore how to -> write : 1
to write concurrent -> programs : 1
write concurrent programs -> in : 1
concurrent programs in -> using : 1
concurrent programs in -> mixed : 1
concurrent programs in -> you : 1
concurrent programs in -> this : 1
programs in using -> threads : 1
in using threads -> with : 1
using threads with -> shared : 1
threads with shared -> we : 1
with shared we -> will : 1
shared we will -> look : 1
look at ways -> to : 1
at ways to -> make : 1
ways to make -> concurrent : 1
to make concurrent -> programs : 2
make concurrent programs -> correct : 1
make concurrent programs -> run : 1
concurrent programs correct -> by : 1
programs correct by -> writing : 1
correct by writing -> programs : 1
by writing programs -> that : 1
writing programs that -> are : 1
programs that are -> free : 1
that are free -> from : 1
are free from -> data : 1
free from data -> races : 3
free from data -> and : 1
from data races -> and : 3
data races and -> this : 1
data races and -> you : 2
races and this -> chapter : 1
and this chapter -> will : 1
chapter will also -> contain : 1
will also contain -> some : 1
also contain some -> pieces : 1
contain some pieces -> of : 1
some pieces of -> advice : 1
pieces of advice -> on : 1
of advice on -> how : 1
advice on how -> to : 1
on how to -> make : 1
concurrent programs run -> with : 1
programs run with -> low : 1
run with low -> latency : 1
with low latency -> and : 1
low latency and -> high : 1
latency and high -> we : 1
and high we -> go : 1
high we go -> any : 1
we go any -> it : 1
we go any -> we : 1
go any it -> should : 1
any it should -> be : 1
should be said -> that : 1
be said that -> this : 1
be said that -> the : 1
said that this -> chapter : 1
that this chapter -> is : 1
this chapter is -> not : 1
this chapter is -> an : 1
this chapter is -> going : 1
chapter is not -> a : 1
chapter is not -> going : 1
not a complete -> introduction : 1
a complete introduction -> to : 1
complete introduction to -> concurrent : 1
introduction to concurrent -> nor : 1
to concurrent nor -> will : 1
concurrent nor will -> it : 1
nor will it -> cover : 1
will it cover -> all : 1
it cover all -> the : 1
cover all the -> details : 1
all the details -> of : 1
details of concurrency -> in : 1
of concurrency in -> this : 1
concurrency in this -> chapter : 1
chapter is an -> introduction : 1
is an introduction -> to : 1
an introduction to -> the : 1
to the core -> building : 1
the core building -> blocks : 1
core building blocks -> of : 1
building blocks of -> writing : 1
blocks of writing -> concurrent : 1
of writing concurrent -> programs : 1
writing concurrent programs -> in : 3
writing concurrent programs -> it : 1
writing concurrent programs -> you : 1
programs in mixed -> with : 1
in mixed with -> some : 1
mixed with some -> if : 1
with some if -> you : 1
some if you -> been : 1
if you been -> writing : 1
you been writing -> concurrent : 1
been writing concurrent -> programs : 2
concurrent programs it -> is : 1
programs it is -> probably : 1
it is probably -> wise : 1
it is probably -> the : 1
is probably wise -> to : 1
probably wise to -> go : 1
wise to go -> through : 1
go through some -> introduction : 1
through some introduction -> texts : 1
some introduction texts -> to : 1
introduction texts to -> cover : 1
texts to cover -> the : 1
to cover the -> theoretical : 1
cover the theoretical -> aspects : 1
the theoretical aspects -> of : 1
theoretical aspects of -> concurrent : 1
aspects of concurrent -> programming : 1
of concurrent programming -> concepts : 1
concurrent programming concepts -> such : 1
programming concepts such -> as : 1
such as critical -> condition : 1
as critical condition -> and : 1
critical condition and -> will : 1
condition and will -> be : 1
will be very -> briefly : 1
be very briefly -> but : 1
very briefly but -> that : 1
briefly but that -> serves : 1
but that serves -> more : 1
that serves more -> as : 1
serves more as -> a : 1
more as a -> refresher : 1
as a refresher -> than : 1
a refresher than -> a : 1
refresher than a -> thorough : 1
than a thorough -> introduction : 1
a thorough introduction -> to : 1
thorough introduction to -> the : 1
to the chapter -> includes : 1
to the chapter -> is : 1
the chapter includes -> the : 1
chapter includes the -> fundamentals : 1
includes the fundamentals -> of : 1
the fundamentals of -> concurrent : 1
data and deadlocks -> introduction : 1
and deadlocks introduction -> to : 1
deadlocks introduction to -> the : 1
the memory model -> short : 1
the memory model -> of : 1
the memory model -> is : 1
the memory model -> and : 1
memory model short -> example : 1
model short example -> of : 1
short example of -> the : 1
of the basics -> of : 1
basics of concurrent -> program : 1
of concurrent program -> can : 1
concurrent program can -> execute : 1
program can execute -> multiple : 1
can execute multiple -> tasks : 2
can execute multiple -> threads : 1
execute multiple tasks -> at : 1
execute multiple tasks -> in : 1
execute multiple tasks -> as : 1
multiple tasks at -> the : 1
tasks at the -> same : 1
the same concurrent -> programming : 1
same concurrent programming -> in : 1
concurrent programming in -> a : 1
programming in a -> lot : 1
a lot harder -> than : 2
a lot harder -> to : 1
lot harder than -> sequential : 1
lot harder than -> writing : 1
harder than sequential -> but : 1
than sequential but -> there : 1
sequential but there -> are : 1
there are several -> reasons : 1
are several reasons -> why : 1
several reasons why -> a : 1
reasons why a -> program : 1
why a program -> may : 1
a program may -> benefit : 1
program may benefit -> from : 1
may benefit from -> being : 1
benefit from being -> smartphones : 1
from being smartphones -> and : 1
being smartphones and -> desktop : 1
smartphones and desktop -> computers : 1
and desktop computers -> of : 1
desktop computers of -> today : 1
computers of today -> have : 1
of today have -> multiple : 1
today have multiple -> cpu : 1
have multiple cpu -> cores : 1
multiple cpu cores -> that : 1
cpu cores that -> can : 1
cores that can -> execute : 1
that can execute -> multiple : 2
multiple tasks in -> parallel : 1
tasks in parallel -> if : 1
in parallel if -> your : 1
in parallel if -> for : 1
parallel if your -> program : 1
if your program -> allows : 1
if your program -> has : 1
if your program -> is : 2
your program allows -> it : 1
program allows it -> if : 1
allows it if -> you : 1
it if you -> manage : 1
if you manage -> to : 2
you manage to -> split : 2
manage to split -> a : 2
to split a -> big : 1
to split a -> sequential : 1
split a big -> task : 1
a big task -> into : 1
big task into -> subtasks : 1
task into subtasks -> that : 1
into subtasks that -> can : 1
subtasks that can -> be : 1
can be run -> in : 1
can be run -> by : 1
be run in -> it : 1
be run in -> if : 1
run in it -> is : 1
run in it -> needs : 1
it is theoretically -> possible : 1
is theoretically possible -> to : 1
theoretically possible to -> divide : 1
possible to divide -> the : 1
divide the running -> time : 1
the big task -> by : 1
big task by -> the : 1
task by the -> number : 1
number of cpu -> for : 1
number of cpu -> priority : 1
number of cpu -> cores : 1
of cpu for -> programs : 1
cpu for programs -> that : 1
for programs that -> run : 1
programs that run -> on : 1
that run on -> machines : 1
run on machines -> with : 1
on machines with -> one : 1
on machines with -> only : 1
machines with one -> single : 1
with one single -> there : 1
one single there -> can : 1
single there can -> still : 1
there can still -> be : 1
can still be -> a : 1
still be a -> gain : 1
be a gain -> in : 1
a gain in -> performance : 1
gain in performance -> if : 1
in performance if -> a : 1
performance if a -> task : 1
if a task -> is : 1
task is while -> one : 1
is while one -> subtask : 1
while one subtask -> is : 1
one subtask is -> waiting : 1
subtask is waiting -> for : 1
waiting for other -> subtasks : 1
for other subtasks -> can : 1
other subtasks can -> still : 1
subtasks can still -> perform : 1
can still perform -> useful : 1
still perform useful -> work : 1
perform useful work -> on : 1
useful work on -> the : 1
work on the -> and : 1
the and low -> latency : 1
and low latency -> for : 1
low latency for -> applications : 1
latency for applications -> with : 1
for applications with -> a : 1
applications with a -> graphical : 1
with a graphical -> user : 1
a graphical user -> it : 1
graphical user it -> is : 1
user it is -> important : 1
important to never -> block : 1
to never block -> the : 2
never block the -> ui : 1
never block the -> main : 1
block the ui -> so : 1
the ui so -> that : 1
ui so that -> the : 1
the application becomes -> to : 1
application becomes to -> prevent : 1
becomes to prevent -> it : 1
prevent it is -> common : 1
common to let -> tasks : 1
to let tasks -> execute : 1
let tasks execute -> in : 1
tasks execute in -> separate : 1
execute in separate -> background : 1
in separate background -> threads : 1
separate background threads -> so : 1
background threads so -> that : 1
threads so that -> the : 1
that the thread -> responsible : 1
that the thread -> support : 1
that the thread -> will : 1
the thread responsible -> for : 1
thread responsible for -> the : 1
responsible for the -> ui : 1
for the ui -> is : 1
the ui is -> never : 1
ui is never -> blocked : 1
is never blocked -> by : 1
never blocked by -> another : 1
blocked by another -> example : 1
by another example -> where : 1
another example where -> low : 1
example where low -> latency : 1
where low latency -> matters : 1
low latency matters -> is : 1
latency matters is -> the : 1
the function responsible -> for : 1
function responsible for -> producing : 1
responsible for producing -> buffers : 1
responsible for producing -> data : 1
for producing buffers -> of : 1
producing buffers of -> audio : 1
buffers of audio -> data : 1
of audio data -> is : 1
audio data is -> being : 1
is being executed -> in : 1
a separate while -> the : 1
separate while the -> rest : 1
while the rest -> of : 1
of the program -> can : 1
of the program -> futures : 1
of the program -> that : 1
the program can -> run : 2
program can run -> in : 1
program can run -> as : 1
can run in -> threads : 1
run in threads -> to : 1
in threads to -> handle : 1
threads to handle -> the : 1
handle the ui -> and : 1
the ui and -> so : 2
ui and so -> concurrency : 1
ui and so -> but : 1
and so concurrency -> can : 1
so concurrency can -> make : 1
concurrency can make -> it : 1
make it easier -> to : 1
easier to simulate -> systems : 1
to simulate systems -> that : 1
simulate systems that -> are : 1
systems that are -> concurrent : 1
that are concurrent -> in : 1
are concurrent in -> the : 1
concurrent in the -> real : 1
the real after -> most : 1
real after most -> things : 1
after most things -> around : 1
most things around -> us : 1
things around us -> happen : 1
around us happen -> and : 1
us happen and -> sometimes : 1
happen and sometimes -> it : 1
and sometimes it -> is : 1
sometimes it is -> very : 1
is very hard -> to : 1
very hard to -> model : 1
very hard to -> debug : 1
very hard to -> do : 1
hard to model -> concurrent : 1
to model concurrent -> flows : 1
model concurrent flows -> with : 1
concurrent flows with -> a : 1
flows with a -> sequential : 1
with a sequential -> programming : 1
a sequential programming -> we : 1
sequential programming we -> will : 1
programming we will -> not : 1
will not focus -> on : 1
not focus on -> simulation : 1
focus on simulation -> in : 1
on simulation in -> this : 1
simulation in this -> but : 1
in this but -> instead : 2
this but instead -> focus : 1
this but instead -> provide : 1
but instead focus -> on : 1
focus on aspects -> of : 1
on aspects of -> makes : 1
aspects of makes -> concurrent : 1
concurrent programming are -> a : 1
programming are a -> couple : 1
are a couple -> of : 1
couple of reasons -> why : 1
of reasons why -> concurrent : 1
reasons why concurrent -> programming : 1
why concurrent programming -> is : 1
concurrent programming is -> if : 1
programming is if -> you : 1
is if you -> have : 1
is if you -> are : 1
you have been -> writing : 1
you have been -> and : 1
you have been -> trying : 1
have been writing -> concurrent : 1
concurrent programs you -> have : 1
programs you have -> most : 1
you have most -> likely : 1
have most likely -> already : 1
most likely already -> encountered : 1
likely already encountered -> the : 1
already encountered the -> ones : 1
encountered the ones -> listed : 1
the ones listed -> state : 1
ones listed state -> between : 1
listed state between -> multiple : 1
state between multiple -> threads : 1
between multiple threads -> in : 1
between multiple threads -> can : 1
multiple threads in -> a : 1
in a safe -> manner : 1
in a safe -> way : 1
in a safe -> and : 1
a safe manner -> is : 1
safe manner is -> whenever : 1
manner is whenever -> we : 1
is whenever we -> have : 1
whenever we have -> data : 1
we have data -> that : 1
have data that -> can : 1
can be read -> and : 1
be read and -> written : 1
read and written -> to : 1
and written to -> at : 1
written to at -> the : 1
to at the -> same : 1
same we need -> some : 1
we need some -> way : 1
need some way -> of : 1
some way of -> protecting : 1
some way of -> setting : 1
way of protecting -> that : 1
of protecting that -> data : 1
protecting that data -> from : 1
that data from -> we : 1
data from we -> will : 1
from we will -> see : 1
will see a -> lot : 1
see a lot -> of : 1
lot of examples -> of : 1
of examples of -> this : 1
examples of this -> later : 1
of this later -> programs : 1
this later programs -> are : 1
later programs are -> usually : 1
programs are usually -> more : 1
are usually more -> complicated : 1
usually more complicated -> to : 1
more complicated to -> reason : 1
complicated to reason -> about : 1
to reason about -> because : 1
reason about because -> of : 1
about because of -> the : 1
of the multiple -> parallel : 1
the multiple parallel -> execution : 1
multiple parallel execution -> complicates : 1
parallel execution complicates -> bugs : 1
execution complicates bugs -> that : 1
complicates bugs that -> occur : 1
bugs that occur -> because : 1
that occur because -> of : 1
occur because of -> data : 1
because of data -> races : 1
of data races -> can : 1
of data races -> we : 1
data races can -> be : 1
races can be -> very : 1
be very hard -> to : 2
hard to debug -> since : 1
to debug since -> they : 1
debug since they -> are : 1
since they are -> dependent : 1
since they are -> hard : 1
they are dependent -> on : 1
are dependent on -> how : 1
on how threads -> are : 1
how threads are -> being : 1
threads are being -> these : 1
are being these -> kinds : 1
being these kinds -> of : 1
kinds of bugs -> can : 1
of bugs can -> be : 1
bugs can be -> hard : 1
hard to reproduce -> and : 1
to reproduce and -> in : 1
reproduce and in -> the : 1
the worst they -> cease : 1
worst they cease -> to : 1
they cease to -> exist : 1
cease to exist -> when : 1
to exist when -> running : 1
exist when running -> the : 1
the program using -> a : 1
program using a -> sometimes : 1
using a sometimes -> an : 1
a sometimes an -> innocent : 1
sometimes an innocent -> debug : 1
an innocent debug -> trace : 1
innocent debug trace -> to : 1
debug trace to -> the : 1
trace to the -> console : 1
to the console -> could : 1
the console could -> change : 1
console could change -> the : 1
could change the -> way : 1
change the way -> a : 1
the way a -> multithreaded : 1
way a multithreaded -> program : 1
a multithreaded program -> behaves : 1
multithreaded program behaves -> and : 1
program behaves and -> make : 1
behaves and make -> the : 1
make the bug -> temporarily : 1
the bug temporarily -> you : 1
bug temporarily you -> have : 1
temporarily you have -> been : 1
have been and -> and : 1
been and and -> parallelism : 1
and and parallelism -> are : 1
and parallelism are -> two : 1
parallelism are two -> terms : 1
are two terms -> that : 1
two terms that -> are : 1
that are sometimes -> used : 1
are sometimes used -> they : 1
sometimes used they -> are : 1
used they are -> not : 1
the same and -> it : 1
the same and -> hence : 1
same and it -> is : 1
understand the a -> program : 1
the a program -> is : 1
a program is -> said : 1
program is said -> to : 1
said to run -> if : 1
to run if -> it : 1
run if it -> has : 1
it has multiple -> individual : 1
has multiple individual -> control : 1
multiple individual control -> flows : 1
individual control flows -> running : 1
control flows running -> during : 1
flows running during -> overlapping : 1
running during overlapping -> time : 1
during overlapping time -> in : 1
overlapping time in -> each : 1
time in each -> individual : 1
in each individual -> control : 1
each individual control -> flow : 1
individual control flow -> is : 1
control flow is -> represented : 1
flow is represented -> by : 1
by a the -> threads : 1
a the threads -> may : 1
the threads may -> or : 1
threads may or -> may : 1
may not execute -> at : 1
not execute at -> the : 1
execute at the -> exact : 1
at the exact -> same : 3
exact same if -> they : 1
same if they -> they : 1
if they they -> are : 1
they they are -> said : 1
they are said -> to : 1
are said to -> execute : 1
said to execute -> in : 1
to execute in -> for : 1
to execute in -> multiplied : 1
to execute in -> parallel : 2
execute in for -> a : 1
in for a -> concurrent : 1
for a concurrent -> program : 1
a concurrent program -> to : 1
a concurrent program -> is : 2
a concurrent program -> running : 1
concurrent program to -> run : 1
program to run -> in : 1
in it needs -> to : 1
executed on a -> machine : 1
executed on a -> thread : 1
executed on a -> particular : 2
on a machine -> that : 1
on a machine -> with : 1
a machine that -> has : 1
machine that has -> support : 1
that has support -> for : 1
has support for -> parallel : 1
support for parallel -> execution : 1
for parallel execution -> of : 1
parallel execution of -> that : 1
parallel execution of -> concurrent : 1
execution of that -> machines : 1
of that machines -> with : 1
that machines with -> multiple : 1
machines with multiple -> cpu : 1
with multiple cpu -> first : 1
multiple cpu first -> it : 1
cpu first it -> might : 1
it might seem -> obvious : 1
it might seem -> odd : 1
might seem obvious -> that : 1
seem obvious that -> we : 1
obvious that we -> always : 1
we always want -> concurrent : 1
always want concurrent -> programs : 1
want concurrent programs -> to : 1
concurrent programs to -> run : 1
programs to run -> in : 1
run in parallel -> if : 1
run in parallel -> do : 1
parallel if for -> efficiency : 1
if for efficiency -> that : 1
for efficiency that -> is : 1
efficiency that is -> not : 1
is not necessarily -> always : 1
is not necessarily -> up : 1
not necessarily always -> a : 1
necessarily always a -> lot : 1
always a lot -> of : 1
lot of synchronization -> primitives : 1
of synchronization primitives -> we : 1
synchronization primitives we -> will : 1
primitives we will -> cover : 1
will cover in -> this : 1
cover in this -> chapter : 1
cover in this -> we : 1
chapter are required -> only : 1
are required only -> to : 1
required only to -> support : 1
only to support -> the : 1
to support the -> parallel : 1
support the parallel -> execution : 1
the parallel execution -> of : 1
execution of concurrent -> tasks : 1
of concurrent tasks -> that : 1
concurrent tasks that -> are : 1
tasks that are -> not : 1
are not run -> in : 1
not run in -> parallel : 1
in parallel do -> not : 1
parallel do not -> require : 1
not require the -> same : 1
require the same -> locking : 1
the same locking -> mechanisms : 1
same locking mechanisms -> and : 1
locking mechanisms and -> can : 1
mechanisms and can -> be : 1
be a lot -> easier : 1
a lot easier -> to : 1
lot easier to -> reason : 1
easier to reason -> are : 1
to reason are -> concurrent : 1
reason are concurrent -> threads : 1
are concurrent threads -> executed : 1
concurrent threads executed -> on : 1
threads executed on -> machines : 1
executed on machines -> with : 1
machines with only -> a : 1
with only a -> single : 1
only a single -> cpu : 1
a single cpu -> you : 1
a single cpu -> measure : 1
single cpu you -> might : 1
cpu you might -> the : 1
you might the -> answer : 1
might the answer -> is : 1
the answer is -> it : 1
the answer is -> that : 1
the answer is -> threads : 1
answer is it -> is : 1
the same mechanism -> that : 1
same mechanism that -> is : 1
mechanism that is -> being : 1
system to support -> concurrent : 1
to support concurrent -> execution : 1
support concurrent execution -> of : 1
concurrent execution of -> in : 1
execution of in -> order : 1
of in order -> to : 1
to understand time -> assume : 1
understand time assume -> we : 1
time assume we -> have : 1
we have two -> separate : 1
we have two -> threads : 2
we have two -> different : 1
have two separate -> sequences : 1
two separate sequences -> of : 1
separate sequences of -> instructions : 2
sequences of instructions -> that : 1
sequences of instructions -> executed : 1
of instructions that -> should : 1
instructions that should -> be : 1
that should be -> executed : 1
that should be -> this : 1
should be executed -> as : 1
should be executed -> on : 1
be executed as -> shown : 1
executed as shown -> in : 1
following cdpaligncenter cdpaligncenter -> separate : 1
cdpaligncenter cdpaligncenter separate -> sequences : 1
cdpaligncenter separate sequences -> of : 1
of instructions executed -> in : 1
instructions executed in -> two : 1
executed in two -> threads : 1
in two threads -> labeled : 1
two threads labeled -> and : 1
threads labeled and -> numbered : 1
threads labeled and -> the : 1
labeled and numbered -> boxes : 1
and numbered boxes -> represent : 1
numbered boxes represent -> each : 1
boxes represent each -> sequence : 1
represent each sequence -> of : 1
each sequence of -> instructions : 1
sequence of instructions -> is : 1
of instructions is -> executed : 1
instructions is executed -> in : 1
is executed in -> separate : 1
is executed in -> a : 1
executed in separate -> threads : 1
in separate threads -> labeled : 1
separate threads labeled -> and : 1
labeled and the -> operating : 1
and the operating -> system : 1
operating system will -> schedule : 1
operating system will -> be : 1
system will schedule -> each : 1
will schedule each -> thread : 1
schedule each thread -> to : 1
each thread to -> have : 1
thread to have -> some : 1
to have some -> limited : 1
have some limited -> time : 1
some limited time -> on : 1
limited time on -> the : 1
time on the -> cpu : 2
time on the -> we : 1
cpu and then -> perform : 1
and then perform -> a : 1
then perform a -> the : 1
perform a the -> context : 1
a the context -> switch : 1
the context switch -> stores : 1
context switch stores -> the : 1
switch stores the -> current : 1
stores the current -> state : 1
current state of -> the : 1
state of the -> running : 1
state of the -> thread : 1
the running thread -> and : 1
running thread and -> loads : 1
thread and loads -> the : 1
and loads the -> state : 1
loads the state -> of : 1
of the thread -> that : 1
the thread that -> should : 1
the thread that -> currently : 1
thread that should -> be : 1
should be this -> is : 1
this is done -> often : 1
is done often -> enough : 1
done often enough -> so : 1
often enough so -> that : 1
enough so that -> it : 1
that it appears -> as : 1
it appears as -> if : 1
appears as if -> the : 1
if the threads -> are : 1
the threads are -> running : 1
the threads are -> not : 1
the threads are -> resulting : 1
threads are running -> at : 1
are running at -> the : 1
running at the -> same : 1
same a context -> switch : 1
a context switch -> is : 2
a context switch -> to : 1
context switch is -> and : 1
context switch is -> an : 1
switch is and -> most : 1
is and most -> likely : 1
and most likely -> generates : 1
most likely generates -> a : 1
likely generates a -> lot : 1
generates a lot -> of : 1
lot of cache -> time : 1
lot of cache -> which : 1
of cache time -> a : 1
cache time a -> new : 1
time a new -> thread : 1
a new thread -> gets : 1
a new thread -> for : 1
new thread gets -> to : 1
thread gets to -> execute : 1
gets to execute -> on : 1
to execute on -> a : 1
to execute on -> the : 2
execute on a -> cpu : 1
on a cpu -> you : 1
a cpu you -> want : 1
cpu you want -> context : 1
you want context -> switches : 1
want context switches -> to : 1
context switches to -> happen : 1
switches to happen -> too : 1
to happen too -> following : 1
happen too following -> figure : 1
too following figure -> shows : 1
shows a possible -> execution : 1
a possible execution -> sequence : 1
possible execution sequence -> of : 1
execution sequence of -> the : 1
the two threads -> that : 1
the two threads -> in : 3
the two threads -> will : 1
the two threads -> can : 2
the two threads -> are : 2
two threads that -> are : 4
two threads that -> will : 1
threads that are -> being : 1
threads that are -> going : 2
threads that are -> both : 1
threads that are -> waiting : 1
threads that are -> producing : 1
threads that are -> ready : 1
are being scheduled -> on : 2
being scheduled on -> a : 2
scheduled on a -> single : 2
on a single -> cdpaligncenter : 1
on a single -> the : 1
a single cdpaligncenter -> possible : 1
single cdpaligncenter possible -> execution : 1
cdpaligncenter possible execution -> of : 1
possible execution of -> two : 1
execution of two -> threads : 1
of two threads -> which : 1
two threads which -> are : 1
threads which are -> being : 1
which are being -> scheduled : 1
a single the -> red : 1
single the red -> dots : 1
the red dots -> indicate : 1
red dots indicate -> context : 1
dots indicate context -> switches : 1
indicate context switches -> first : 1
context switches first -> instruction : 1
switches first instruction -> of : 1
first instruction of -> thread : 1
instruction of thread -> is : 1
of thread is -> and : 1
thread is and -> is : 1
is and is -> then : 1
and is then -> followed : 1
is then followed -> by : 1
then followed by -> a : 1
followed by a -> context : 1
by a context -> switch : 1
context switch to -> let : 1
switch to let -> the : 1
let the other -> thread : 1
the other thread -> execute : 1
the other thread -> is : 1
other thread execute -> the : 1
thread execute the -> first : 1
execute the first -> two : 1
the first two -> as : 1
the first two -> parameters : 1
first two as -> we : 1
two as we -> must : 1
as we must -> make : 1
we must make -> sure : 1
must make sure -> that : 2
that the program -> can : 1
that the program -> currently : 1
can run as -> regardless : 1
run as regardless -> of : 1
as regardless of -> how : 1
how the operating -> system : 1
operating system scheduler -> is : 1
system scheduler is -> scheduling : 1
scheduler is scheduling -> the : 1
is scheduling the -> if : 1
scheduling the if -> a : 1
the if a -> for : 1
if a for -> some : 1
a for some -> should : 1
for some should -> be : 1
some should be -> there : 1
should be there -> are : 1
be there are -> ways : 1
there are ways -> to : 1
are ways to -> control : 1
ways to control -> the : 1
control the which -> the : 1
the which the -> instructions : 1
which the instructions -> get : 1
the instructions get -> executed : 1
instructions get executed -> by : 1
get executed by -> using : 1
executed by using -> on : 1
by using on -> that : 1
using on that -> in : 1
on that in -> the : 1
that in the -> sections : 1
in the sections -> to : 1
the sections to -> a : 1
sections to a -> machine : 1
to a machine -> has : 1
a machine has -> multiple : 1
machine has multiple -> cpu : 1
has multiple cpu -> it : 1
multiple cpu it -> is : 1
cpu it is -> possible : 1
possible to execute -> the : 2
to execute the -> two : 2
to execute the -> and : 1
execute the two -> threads : 2
two threads in -> there : 1
two threads in -> parallel : 1
two threads in -> a : 1
two threads in -> the : 1
threads in there -> is : 1
no guarantee even -> that : 1
guarantee even that -> the : 1
even that the -> two : 1
two threads will -> execute : 1
threads will execute -> on : 1
will execute on -> one : 1
execute on one -> core : 1
on one core -> each : 1
one core each -> throughout : 1
core each throughout -> the : 1
each throughout the -> lifetime : 1
throughout the lifetime -> of : 1
the the entire -> system : 1
the entire system -> is : 1
entire system is -> sharing : 1
system is sharing -> time : 1
is sharing time -> on : 1
sharing time on -> the : 1
the cpu so -> the : 1
cpu so the -> scheduler : 1
so the scheduler -> will : 1
the scheduler will -> let : 1
scheduler will let -> other : 1
will let other -> processes : 1
let other processes -> execute : 1
other processes execute -> as : 1
processes execute as -> this : 1
execute as this -> is : 1
why the threads -> are : 1
threads are not -> scheduled : 1
are not scheduled -> on : 1
not scheduled on -> dedicated : 1
scheduled on dedicated -> following : 1
on dedicated following -> the : 1
dedicated following the -> execution : 1
following the execution -> of : 1
the same two -> but : 1
same two but -> now : 1
two but now -> they : 1
but now they -> are : 1
now they are -> running : 1
they are running -> on : 1
are running on -> a : 1
machine with two -> cpu : 1
with two cpu -> as : 1
two cpu as -> can : 1
cpu as can -> be : 1
the second and -> third : 1
second and third -> instructions : 1
and third instructions -> of : 1
third instructions of -> the : 1
instructions of the -> first : 1
the first thread -> are : 1
the first thread -> been : 1
the first thread -> that : 1
the first thread -> has : 2
the first thread -> to : 1
first thread are -> being : 1
thread are being -> executed : 1
are being executed -> at : 1
are being executed -> in : 1
being executed at -> the : 1
executed at the -> exact : 1
exact same time -> as : 1
same time as -> the : 1
time as the -> other : 1
as the other -> thread : 1
other thread is -> two : 1
other thread is -> accessing : 1
thread is two -> threads : 1
is two threads -> are : 1
two threads are -> executing : 2
two threads are -> accessing : 1
two threads are -> both : 1
two threads are -> waiting : 1
two threads are -> in : 1
two threads are -> never : 1
threads are executing -> in : 1
threads are executing -> on : 2
are executing in -> cdpaligncenter : 1
executing in cdpaligncenter -> cdpaligncenter : 1
in cdpaligncenter cdpaligncenter -> threads : 1
in cdpaligncenter cdpaligncenter -> scenarios : 1
cdpaligncenter cdpaligncenter threads -> are : 1
cdpaligncenter threads are -> executing : 1
are executing on -> a : 1
are executing on -> different : 1
executing on a -> multicore : 1
on a multicore -> this : 1
a multicore this -> makes : 1
multicore this makes -> it : 1
threads in parallel -> created : 1
in parallel created -> in : 1
parallel created in -> the : 1
the same process -> share : 1
same process share -> the : 1
process share the -> same : 1
the same virtual -> this : 1
same virtual this -> means : 1
virtual this means -> that : 1
that a thread -> can : 1
a thread can -> access : 1
thread can access -> any : 1
access any data -> that : 1
any data that -> is : 1
that is addressable -> within : 1
is addressable within -> the : 1
addressable within the -> the : 1
the the operating -> which : 1
the operating which -> protects : 1
operating which protects -> memory : 1
which protects memory -> between : 1
protects memory between -> processes : 1
memory between processes -> using : 1
between processes using -> virtual : 1
processes using virtual -> does : 1
using virtual does -> nothing : 1
virtual does nothing -> to : 1
does nothing to -> protect : 1
nothing to protect -> us : 1
to protect us -> from : 2
protect us from -> accidentally : 1
protect us from -> data : 1
us from accidentally -> accessing : 1
from accidentally accessing -> memory : 1
accidentally accessing memory -> inside : 1
accessing memory inside -> a : 1
memory inside a -> process : 1
inside a process -> that : 1
process that was -> not : 1
that was not -> intended : 1
was not intended -> to : 1
not intended to -> be : 1
shared among different -> virtual : 1
among different virtual -> memory : 1
different virtual memory -> only : 1
virtual memory only -> protects : 1
memory only protects -> us : 1
only protects us -> from : 1
protects us from -> accessing : 1
us from accessing -> memory : 1
from accessing memory -> allocated : 1
accessing memory allocated -> in : 1
memory allocated in -> other : 1
allocated in other -> processes : 1
in other processes -> than : 1
other processes than -> our : 1
processes than our -> memory : 1
than our memory -> between : 1
our memory between -> multiple : 1
memory between multiple -> threads : 1
multiple threads can -> be : 1
threads can be -> a : 1
threads can be -> printed : 1
a very efficient -> way : 1
very efficient way -> to : 1
to handle communication -> between : 1
handle communication between -> sharing : 1
communication between sharing -> memory : 1
between sharing memory -> in : 1
sharing memory in -> a : 1
a safe way -> between : 1
safe way between -> threads : 1
way between threads -> is : 1
between threads is -> one : 1
threads is one -> of : 1
of the major -> challenges : 1
the major challenges -> when : 1
major challenges when -> writing : 1
challenges when writing -> concurrent : 1
when writing concurrent -> programs : 2
when writing concurrent -> a : 1
programs in you -> should : 1
in you should -> always : 1
should always strive -> to : 1
always strive to -> minimize : 1
number of shared -> resources : 1
of shared resources -> between : 1
shared resources between -> not : 1
resources between not -> all : 1
between not all -> memory : 1
not all memory -> is : 1
all memory is -> shared : 1
memory is shared -> by : 1
shared by each -> thread : 1
by each thread -> has : 1
own stack for -> storing : 1
stack for storing -> local : 1
for storing local -> variables : 1
storing local variables -> and : 1
local variables and -> other : 1
variables and other -> data : 1
and other data -> necessary : 1
other data necessary -> for : 1
data necessary for -> handling : 1
necessary for handling -> function : 1
for handling function -> unless : 1
handling function unless -> a : 1
function unless a -> thread : 1
unless a thread -> passes : 1
a thread passes -> references : 1
thread passes references -> or : 1
passes references or -> pointers : 1
references or pointers -> to : 1
or pointers to -> local : 1
pointers to local -> variables : 1
to local variables -> to : 1
local variables to -> other : 1
variables to other -> no : 1
to other no -> other : 1
other no other -> thread : 1
no other thread -> will : 1
no other thread -> is : 1
no other thread -> can : 1
other thread will -> be : 1
thread will be -> able : 1
will be able -> to : 1
able to access -> the : 1
access the stack -> from : 1
the stack from -> that : 1
stack from that -> this : 1
from that this -> is : 1
is one more -> reason : 1
one more reason -> to : 1
more reason to -> use : 1
reason to use -> the : 1
use the stack -> as : 1
stack as much -> as : 1
as much as -> possible : 1
much as possible -> you : 1
as possible you -> are : 1
possible you are -> not : 1
are not already -> convinced : 1
not already convinced -> that : 1
already convinced that -> the : 1
convinced that the -> stack : 1
a good place -> for : 1
good place for -> your : 1
place for your -> data : 1
for your data -> after : 1
your data after -> reading : 1
data after reading -> is : 1
after reading is -> also : 1
reading is also -> local : 1
is also local -> sometimes : 1
also local sometimes -> abbreviated : 1
local sometimes abbreviated -> to : 1
sometimes abbreviated to -> which : 1
abbreviated to which -> can : 1
to which can -> be : 1
used for storing -> variables : 1
for storing variables -> that : 1
storing variables that -> are : 1
variables that are -> global : 1
that are global -> in : 1
are global in -> the : 1
in the context -> of : 1
the context of -> a : 1
context of a -> thread : 1
of a thread -> but : 1
of a thread -> affects : 1
a thread but -> which : 1
thread but which -> are : 1
but which are -> not : 1
which are not -> shared : 1
are not shared -> between : 1
not shared between -> a : 1
shared between a -> thread : 1
between a thread -> local : 1
a thread local -> variable : 1
thread local variable -> can : 1
local variable can -> be : 1
variable can be -> thought : 1
as a global -> variable : 1
a global variable -> where : 1
a global variable -> by : 1
global variable where -> each : 1
variable where each -> thread : 1
where each thread -> has : 1
its own else -> is : 1
own else is -> shared : 1
else is shared -> by : 1
shared by that -> dynamic : 1
by that dynamic -> memory : 1
that dynamic memory -> allocated : 1
dynamic memory allocated -> on : 1
memory allocated on -> the : 1
global and static -> local : 1
and static local -> whenever : 1
static local whenever -> you : 1
local whenever you -> have : 1
whenever you have -> shared : 1
you have shared -> data : 1
have shared data -> that : 1
shared data that -> is : 1
that is mutated -> by : 1
is mutated by -> some : 1
mutated by some -> you : 1
by some you -> need : 1
some you need -> to : 2
ensure that no -> other : 1
ensure that no -> instructions : 1
that no other -> thread : 2
thread is accessing -> that : 1
is accessing that -> data : 1
accessing that data -> at : 1
that data at -> the : 1
data at the -> same : 1
the same time -> or : 1
the same time -> and : 1
the same time -> by : 1
same time or -> you : 1
time or you -> will : 1
or you will -> have : 1
have a data -> the : 1
have a data -> race : 1
have a data -> this : 1
a data the -> figure : 1
a data the -> counter : 1
data the figure -> from : 1
the figure from -> the : 1
figure from the -> section : 1
from the section -> of : 1
the section of -> which : 1
section of which -> illustrated : 1
of which illustrated -> the : 1
which illustrated the -> virtual : 1
illustrated the virtual -> address : 1
of a here -> it : 1
a here it -> is : 1
here it is -> but : 1
here it is -> in : 1
it is but -> modified : 1
is but modified -> to : 1
but modified to -> show : 1
modified to show -> how : 1
show how it -> looks : 1
looks when a -> process : 1
a process contains -> multiple : 1
a process contains -> three : 1
process contains multiple -> as : 1
contains multiple as -> you : 1
multiple as you -> can : 1
the following each -> thread : 1
the following each -> chunk : 1
following each thread -> has : 1
own stack but -> there : 1
stack but there -> is : 1
there is only -> one : 3
is only one -> heap : 1
is only one -> producer : 1
is only one -> shared : 1
is only one -> part : 1
only one heap -> for : 1
one heap for -> all : 1
heap for all -> cdpaligncenter : 1
for all cdpaligncenter -> possible : 1
all cdpaligncenter possible -> layout : 1
cdpaligncenter possible layout -> of : 1
possible layout of -> the : 1
address space for -> a : 1
space for a -> process : 1
for a process -> contains : 1
process contains three -> threads : 1
contains three threads -> in : 1
three threads in -> this : 1
threads in this -> and : 1
in this and -> each : 1
this and each -> thread : 1
and each thread -> has : 1
its own dedicated -> stack : 1
own dedicated stack -> the : 1
dedicated stack the -> heap : 1
stack the heap -> memory : 1
heap memory is -> by : 1
memory is by -> default : 1
by default shared -> by : 1
default shared by -> all : 1
shared by all -> happens : 1
by all happens -> when : 1
all happens when -> two : 1
happens when two -> threads : 1
when two threads -> are : 2
when two threads -> use : 1
threads are accessing -> the : 1
threads are accessing -> an : 1
are accessing the -> same : 1
accessing the same -> memory : 1
accessing the same -> shared : 1
accessing the same -> element : 1
the same memory -> at : 1
the same memory -> could : 1
same memory at -> the : 1
same time and -> at : 1
time and at -> least : 1
and at least -> one : 1
at least one -> of : 1
at least one -> when : 1
least one of -> the : 1
of the threads -> is : 1
of the threads -> can : 1
of the threads -> and : 1
the threads is -> mutating : 1
threads is mutating -> the : 1
mutating the if -> your : 1
the if your -> program : 1
your program has -> a : 2
your program has -> in : 1
program has a -> data : 2
has a data -> it : 1
has a data -> can : 1
a data it -> means : 1
data it means -> that : 1
means that your -> program : 1
that your program -> has : 1
program has in -> other : 1
has in other -> you : 1
in other you -> can : 1
other you can -> under : 1
you can under -> no : 1
can under no -> circumstances : 1
under no circumstances -> allow : 1
no circumstances allow -> data : 1
circumstances allow data -> races : 1
allow data races -> in : 1
data races in -> your : 1
data races in -> this : 1
races in your -> the : 1
in your the -> compiler : 1
your the compiler -> usually : 1
the compiler usually -> warn : 1
compiler usually warn -> you : 1
usually warn you -> about : 1
warn you about -> data : 1
you about data -> races : 1
about data races -> since : 1
data races since -> they : 1
races since they -> are : 1
they are hard -> to : 1
are hard to -> detect : 1
hard to detect -> at : 1
to detect at -> compile : 1
detect at compile -> following : 1
at compile following -> image : 1
compile following image -> shows : 1
image shows two -> threads : 1
shows two threads -> that : 1
that are going -> to : 2
going to update -> an : 1
going to update -> the : 1
to update an -> integer : 1
update an integer -> called : 1
an integer called -> imagine : 1
integer called imagine -> that : 1
called imagine that -> we : 1
imagine that we -> have : 2
have two threads -> that : 2
are both incrementing -> a : 1
are both incrementing -> the : 1
both incrementing a -> global : 1
incrementing a global -> variable : 1
global variable by -> the : 1
variable by the -> instruction : 1
by the instruction -> it : 1
the instruction it -> turns : 1
instruction it turns -> out : 1
out that incrementing -> an : 1
that incrementing an -> might : 1
incrementing an might -> involve : 1
an might involve -> multiple : 1
might involve multiple -> cpu : 1
involve multiple cpu -> this : 1
multiple cpu this -> can : 1
cpu this can -> be : 1
done in different -> ways : 1
in different ways -> on : 1
different ways on -> different : 1
ways on different -> but : 1
on different but -> pretend : 1
different but pretend -> that : 1
but pretend that -> generates : 1
pretend that generates -> the : 1
the following machine -> read : 1
following machine read -> counter : 1
machine read counter -> from : 1
read counter from -> memory : 1
counter from memory -> increment : 1
from memory increment -> counter : 1
memory increment counter -> write : 1
increment counter write -> new : 1
counter write new -> counter : 1
write new counter -> value : 1
new counter value -> to : 1
counter value to -> memory : 1
value to memory -> if : 1
to memory if -> we : 1
memory if we -> have : 1
to update the -> value : 1
update the value -> that : 1
the value that -> initially : 1
value that initially -> is : 1
that initially is -> we : 1
initially is we -> would : 1
is we would -> expect : 1
we would expect -> it : 1
would expect it -> to : 1
expect it to -> become : 1
expect it to -> have : 1
expect it to -> and : 1
it to become -> after : 1
to become after -> both : 1
become after both -> threads : 1
after both threads -> have : 1
both threads have -> as : 1
threads have as -> we : 1
have as we -> can : 1
the following there -> is : 1
following there is -> no : 1
that the instructions -> will : 1
that the instructions -> in : 1
that the instructions -> can : 1
the instructions will -> be : 1
instructions will be -> executed : 1
will be executed -> sequentially : 1
be executed sequentially -> to : 1
executed sequentially to -> guarantee : 1
sequentially to guarantee -> a : 1
to guarantee a -> correct : 1
to guarantee a -> certain : 1
guarantee a correct -> increment : 1
a correct increment -> of : 1
correct increment of -> the : 1
increment of the -> cdpaligncenter : 1
of the cdpaligncenter -> two : 1
the cdpaligncenter two -> threads : 1
cdpaligncenter two threads -> are : 1
threads are both -> incrementing : 1
both incrementing the -> same : 1
incrementing the same -> shared : 1
the same shared -> a : 1
the same shared -> the : 1
same shared a -> data : 1
shared a data -> the : 1
data the counter -> would : 1
the counter would -> have : 1
counter would have -> reached : 1
would have reached -> the : 1
have reached the -> value : 1
reached the value -> but : 1
the value but -> it : 1
value but it -> only : 1
but it only -> reaches : 1
it only reaches -> this : 1
only reaches this -> both : 1
reaches this both -> threads : 1
this both threads -> read : 1
both threads read -> the : 1
threads read the -> value : 1
read the value -> and : 1
value and incremented -> that : 1
and incremented that -> value : 1
incremented that value -> to : 1
that value to -> they : 1
value to they -> both : 1
to they both -> write : 1
to they both -> could : 1
they both write -> the : 1
both write the -> new : 1
write the new -> which : 1
the new which -> means : 1
new which means -> that : 1
that we never -> reached : 1
we never reached -> the : 1
never reached the -> correct : 1
reached the correct -> answer : 1
the correct answer -> of : 1
correct answer of -> had : 1
answer of had -> the : 1
of had the -> first : 1
had the first -> thread : 1
first thread been -> able : 1
thread been able -> to : 1
been able to -> write : 1
able to write -> the : 1
write the value -> before : 1
the value before -> the : 1
value before the -> next : 1
before the next -> thread : 1
the next thread -> started : 1
next thread started -> to : 1
thread started to -> we : 1
started to we -> would : 1
to we would -> have : 1
would have ended -> up : 1
have ended up -> with : 1
up with note -> also : 1
with note also -> that : 1
note also that -> this : 1
note also that -> it : 1
also that this -> would : 1
that this would -> have : 1
have been possible -> even : 1
been possible even -> if : 1
possible even if -> there : 1
even if there -> was : 1
if there was -> only : 1
there was only -> one : 1
was only one -> cpu : 1
only one cpu -> the : 1
one cpu the -> scheduler : 1
cpu the scheduler -> could : 1
the scheduler could -> have : 1
scheduler could have -> scheduled : 1
could have scheduled -> the : 1
have scheduled the -> two : 1
scheduled the two -> threads : 1
a similar way -> so : 1
similar way so -> that : 1
way so that -> both : 1
so that both -> read : 1
that both read -> instructions : 1
both read instructions -> were : 1
read instructions were -> executed : 1
instructions were executed -> before : 1
were executed before -> any : 1
executed before any -> this : 1
before any this -> is : 1
is one possible -> but : 1
one possible but -> the : 1
possible but the -> important : 1
important thing is -> that : 1
that the behavior -> is : 1
the behavior is -> anything : 1
the behavior is -> very : 1
behavior is anything -> could : 1
is anything could -> happen : 1
anything could happen -> when : 1
could happen when -> your : 1
happen when your -> program : 1
when your program -> has : 1
a data can -> we : 1
data can we -> avoid : 1
can we avoid -> data : 1
we avoid data -> there : 1
we avoid data -> using : 1
avoid data there -> are : 1
data there are -> two : 1
two main an -> atomic : 1
main an atomic -> data : 1
an atomic data -> type : 1
atomic data type -> instead : 1
data type instead -> of : 1
type instead of -> the : 1
the this will -> tell : 1
this will tell -> the : 1
will tell the -> compiler : 1
compiler to execute -> the : 1
execute the and -> write : 1
the and write -> in : 1
and write in -> this : 1
write in this -> approach : 1
in this approach -> works : 1
this approach works -> if : 1
approach works if -> the : 1
works if the -> size : 1
the data type -> we : 1
data type we -> are : 1
type we are -> modifying : 1
we are modifying -> is : 1
are modifying is -> less : 1
modifying is less -> than : 1
less than or -> equal : 1
than or equal -> to : 1
or equal to -> the : 1
to the word -> size : 1
word size of -> the : 1
will spend more -> time : 1
more time discussing -> atomic : 1
time discussing atomic -> data : 1
discussing atomic data -> types : 1
atomic data types -> later : 1
data types later -> in : 1
types later in -> this : 1
in this a -> mutually : 1
this a mutually -> exclusive : 1
a mutually exclusive -> lock : 1
mutually exclusive lock -> that : 1
exclusive lock that -> guarantees : 1
lock that guarantees -> that : 1
that guarantees that -> multiple : 1
guarantees that multiple -> threads : 1
that multiple threads -> never : 1
multiple threads never -> execute : 1
threads never execute -> a : 1
never execute a -> critical : 1
execute a critical -> section : 1
a critical section -> at : 1
a critical section -> is : 2
a critical section -> to : 1
a critical section -> with : 1
a critical section -> we : 1
critical section at -> the : 1
section at the -> same : 1
same a critical -> section : 1
critical section is -> a : 1
critical section is -> first : 1
section is a -> place : 1
a place in -> the : 1
place in the -> code : 1
in the code -> that : 1
in the code -> generated : 1
code that must -> not : 1
that must not -> be : 1
must not be -> executed : 1
not be executed -> simultaneously : 1
be executed simultaneously -> since : 1
executed simultaneously since -> it : 1
simultaneously since it -> updates : 1
since it updates -> or : 1
it updates or -> reads : 1
updates or reads -> shared : 1
or reads shared -> memory : 1
reads shared memory -> that : 1
shared memory that -> potentially : 1
memory that potentially -> could : 1
that potentially could -> generate : 1
potentially could generate -> data : 1
could generate data -> is : 1
generate data is -> also : 1
data is also -> worth : 1
is also worth -> emphasizing : 1
also worth emphasizing -> that : 1
worth emphasizing that -> immutable : 1
emphasizing that immutable -> data : 1
that immutable data -> structures : 2
immutable data structures -> that : 1
immutable data structures -> are : 1
data structures that -> are : 1
structures that are -> never : 1
that are never -> being : 1
are never being -> be : 1
never being be -> accessed : 1
being be accessed -> by : 1
accessed by multiple -> threads : 1
by multiple threads -> without : 1
multiple threads without -> any : 1
multiple threads without -> introducing : 3
threads without any -> risk : 1
threads without any -> and : 1
without any risk -> of : 1
risk of data -> minimizing : 1
risk of data -> begin : 1
risk of data -> races : 1
of data minimizing -> the : 1
data minimizing the -> use : 1
minimizing the use -> of : 1
use of mutable -> objects : 1
of mutable objects -> is : 1
mutable objects is -> good : 1
objects is good -> for : 1
is good for -> many : 1
good for many -> but : 1
for many but -> it : 1
many but it -> becomes : 1
but it becomes -> even : 1
even more important -> when : 1
more important when -> writing : 1
important when writing -> concurrent : 1
writing concurrent a -> common : 1
concurrent a common -> pattern : 1
a common pattern -> is : 1
common pattern is -> to : 1
pattern is to -> always : 1
to always create -> new : 1
always create new -> immutable : 1
create new immutable -> objects : 1
new immutable objects -> instead : 1
immutable objects instead -> of : 1
instead of mutating -> existing : 1
of mutating existing -> when : 1
mutating existing when -> the : 1
existing when the -> new : 1
when the new -> object : 1
new object is -> fully : 1
object is fully -> constructed : 1
is fully constructed -> and : 1
fully constructed and -> represents : 1
constructed and represents -> the : 1
and represents the -> new : 1
represents the new -> it : 1
the new it -> can : 1
new it can -> be : 1
can be swapped -> with : 1
be swapped with -> the : 1
swapped with the -> old : 1
with the old -> in : 1
the old in -> that : 1
old in that -> we : 1
we can minimize -> the : 1
minimize the critical -> sections : 1
critical sections of -> our : 1
sections of our -> only : 1
of our only -> the : 1
our only the -> swap : 1
only the swap -> is : 1
the swap is -> a : 1
swap is a -> critical : 1
is a critical -> and : 1
is a critical -> uses : 1
a critical and -> hence : 1
critical and hence -> needs : 1
and hence needs -> to : 1
hence needs to -> be : 1
to be protected -> by : 2
to be protected -> during : 1
be protected by -> an : 1
be protected by -> auto : 1
be protected by -> a : 1
be protected by -> the : 1
protected by an -> atomic : 1
by an atomic -> operation : 1
an atomic operation -> or : 1
atomic operation or -> a : 1
operation or a -> short : 1
or a short -> for : 1
short for mutual -> exclusion : 1
for mutual exclusion -> is : 1
mutual exclusion is -> a : 1
exclusion is a -> synchronization : 1
is a synchronization -> primitive : 1
a synchronization primitive -> for : 1
synchronization primitive for -> avoiding : 1
primitive for avoiding -> data : 1
for avoiding data -> a : 1
avoiding data a -> thread : 1
data a thread -> that : 1
thread that needs -> to : 2
needs to enter -> a : 1
to enter a -> critical : 1
enter a critical -> section : 1
section is first -> the : 1
is first the -> mutex : 1
first the mutex -> is : 1
mutex is sometimes -> also : 1
is sometimes also -> called : 1
sometimes also called -> acquiring : 1
also called acquiring -> a : 1
called acquiring a -> mutex : 1
acquiring a mutex -> this : 1
a mutex this -> means : 1
mutex this means -> that : 1
means that no -> other : 1
other thread can -> lock : 1
thread can lock -> the : 1
can lock the -> same : 1
lock the same -> mutex : 1
the same mutex -> until : 1
same mutex until -> the : 1
mutex until the -> first : 1
until the first -> thread : 2
first thread that -> holds : 1
thread that holds -> the : 1
that holds the -> lock : 1
holds the lock -> has : 1
the lock has -> unlocked : 1
lock has unlocked -> the : 1
has unlocked the -> in : 1
unlocked the in -> that : 1
in that the -> mutex : 1
in that the -> deletion : 1
that the mutex -> guarantees : 1
the mutex guarantees -> that : 1
mutex guarantees that -> only : 1
guarantees that only -> one : 1
that only one -> thread : 1
only one thread -> at : 1
one thread at -> a : 1
thread at a -> time : 1
a time is -> inside : 1
time is inside -> a : 1
is inside a -> critical : 1
inside a critical -> the : 1
a critical the -> we : 1
critical the we -> can : 1
can see how -> the : 1
how the example -> of : 1
the example of -> the : 1
of the race -> condition : 1
the race condition -> can : 1
race condition can -> be : 1
condition can be -> avoided : 1
using a instruction -> labeled : 1
a instruction labeled -> a : 1
instruction labeled a -> lock : 1
labeled a lock -> instruction : 1
a lock instruction -> and : 1
lock instruction and -> the : 1
instruction and the -> instruction : 1
and the instruction -> labeled : 1
the instruction labeled -> an : 1
instruction labeled an -> unlock : 1
labeled an unlock -> first : 1
an unlock first -> thread : 1
unlock first thread -> executing : 1
first thread executing -> on : 1
thread executing on -> core : 1
executing on core -> reaches : 2
on core reaches -> the : 2
core reaches the -> critical : 2
reaches the critical -> section : 2
the critical section -> first : 1
the critical section -> just : 1
the critical section -> and : 1
the critical section -> to : 1
the critical section -> when : 1
the critical section -> outside : 1
the critical section -> by : 2
the critical section -> itself : 1
critical section first -> and : 1
section first and -> locks : 1
first and locks -> the : 1
and locks the -> mutex : 1
locks the mutex -> before : 1
the mutex before -> reading : 1
the mutex before -> it : 1
mutex before reading -> the : 1
before reading the -> value : 1
reading the value -> of : 1
it then adds -> one : 1
then adds one -> to : 1
adds one to -> the : 1
one to the -> counter : 1
to the counter -> and : 1
to the counter -> counter : 1
the counter and -> writes : 1
counter and writes -> it : 1
and writes it -> back : 1
writes it back -> to : 1
it back to -> after : 1
back to after -> it : 1
to after it -> releases : 1
after it releases -> the : 1
it releases the -> second : 1
releases the second -> executing : 1
the second executing -> on : 1
second executing on -> core : 1
critical section just -> after : 1
section just after -> the : 1
just after the -> first : 1
after the first -> thread : 1
first thread has -> acquired : 1
first thread has -> updated : 1
thread has acquired -> the : 1
has acquired the -> mutex : 1
acquired the mutex -> since : 1
the mutex since -> the : 1
mutex since the -> mutex : 1
since the mutex -> is : 1
mutex is already -> the : 1
is already the -> thread : 1
already the thread -> is : 1
the thread is -> blocked : 1
the thread is -> being : 1
thread is blocked -> until : 1
thread is blocked -> by : 1
is blocked until -> the : 2
blocked until the -> first : 1
blocked until the -> synchronous : 1
blocked until the -> next : 1
thread has updated -> the : 1
has updated the -> counter : 1
updated the counter -> undisturbed : 1
the counter undisturbed -> and : 1
counter undisturbed and -> released : 1
undisturbed and released -> the : 1
and released the -> cdpaligncenter : 1
released the cdpaligncenter -> mutex : 1
the cdpaligncenter mutex -> lock : 1
cdpaligncenter mutex lock -> is : 1
mutex lock is -> protecting : 1
lock is protecting -> the : 1
is protecting the -> critical : 1
protecting the critical -> section : 1
critical section and -> avoids : 1
section and avoids -> the : 1
and avoids the -> data : 1
avoids the data -> races : 1
the data races -> on : 1
data races on -> the : 1
races on the -> counter : 1
on the counter -> variable : 1
the counter variable -> net : 1
counter variable net -> result : 1
variable net result -> is : 1
net result is -> that : 1
result is that -> the : 1
two threads can -> update : 1
two threads can -> no : 1
threads can update -> the : 1
can update the -> mutable : 1
update the mutable -> shared : 1
the mutable shared -> variable : 1
mutable shared variable -> in : 1
mutable shared variable -> that : 1
shared variable in -> a : 1
variable in a -> safe : 1
a safe and -> correct : 1
safe and correct -> it : 1
and correct it -> also : 1
correct it also -> means : 1
threads can no -> longer : 1
can no longer -> be : 1
longer be run -> in : 1
run in if -> most : 1
in if most -> of : 1
if most of -> the : 1
of the work -> a : 1
of the work -> for : 1
the work a -> thread : 1
work a thread -> does : 1
a thread does -> cannot : 1
thread does cannot -> be : 1
does cannot be -> done : 1
cannot be done -> without : 1
be done without -> serializing : 1
done without serializing -> the : 1
without serializing the -> there : 1
serializing the there -> from : 1
the there from -> a : 1
there from a -> performance : 1
from a performance -> no : 1
a performance no -> point : 1
performance no point -> in : 1
no point in -> using : 2
point in using -> state : 1
point in using -> more : 1
in using state -> where : 1
using state where -> the : 1
state where the -> second : 1
where the second -> thread : 1
the second thread -> is : 1
second thread is -> blocked : 1
is blocked by -> the : 1
blocked by the -> first : 1
by the first -> thread : 1
first thread to -> finish : 1
thread to finish -> its : 1
to finish its -> work : 1
finish its work -> is : 1
its work is -> called : 1
work is called -> this : 1
is called this -> is : 1
called this is -> something : 1
this is something -> we : 1
is something we -> strive : 1
is something we -> constantly : 1
something we strive -> to : 1
we strive to -> because : 1
strive to because -> it : 1
to because it -> hurts : 1
because it hurts -> the : 1
it hurts the -> scalability : 1
hurts the scalability -> of : 1
the scalability of -> a : 1
scalability of a -> concurrent : 1
of a concurrent -> adding : 1
a concurrent adding -> more : 1
concurrent adding more -> cpu : 1
adding more cpu -> cores : 1
more cpu cores -> will : 1
more cpu cores -> a : 1
cpu cores will -> not : 1
cores will not -> improve : 1
will not improve -> performance : 1
not improve performance -> if : 1
improve performance if -> the : 1
performance if the -> degree : 1
if the degree -> of : 1
the degree of -> contention : 1
degree of contention -> is : 1
of contention is -> using : 1
contention is using -> mutex : 1
is using mutex -> locks : 1
using mutex locks -> to : 1
mutex locks to -> there : 1
mutex locks to -> ensure : 1
locks to there -> is : 1
to there is -> a : 1
to there is -> usually : 1
is a risk -> of : 1
a risk of -> getting : 1
risk of getting -> stuck : 1
of getting stuck -> in : 1
getting stuck in -> a : 1
stuck in a -> state : 1
stuck in a -> deadlock : 1
a state called -> a : 1
state called a -> deadlock : 1
called a deadlock -> can : 1
a deadlock can -> happen : 1
deadlock can happen -> when : 1
happen when two -> threads : 1
threads are waiting -> for : 1
are waiting for -> each : 2
are waiting for -> data : 1
waiting for each -> other : 2
for each other -> to : 2
for each other -> although : 1
each other to -> release : 2
other to release -> their : 2
to release their -> none : 1
to release their -> respectively : 1
release their none -> of : 1
their none of -> the : 1
none of the -> threads : 1
the threads can -> proceed : 1
threads can proceed -> and : 1
can proceed and -> are : 1
proceed and are -> stuck : 1
and are stuck -> in : 1
are stuck in -> a : 1
in a deadlock -> one : 1
a deadlock one -> condition : 1
deadlock one condition -> that : 1
one condition that -> needs : 1
condition that needs -> to : 1
to be fulfilled -> for : 1
be fulfilled for -> a : 1
fulfilled for a -> deadlock : 1
for a deadlock -> to : 1
a deadlock to -> occur : 1
deadlock to occur -> is : 1
to occur is -> that : 1
to occur is -> when : 1
occur is that -> one : 1
is that one -> thread : 1
that one thread -> that : 1
one thread that -> already : 1
thread that already -> holds : 1
that already holds -> a : 1
already holds a -> lock : 1
holds a lock -> tries : 1
a lock tries -> to : 1
lock tries to -> acquire : 1
tries to acquire -> an : 1
to acquire an -> additional : 1
acquire an additional -> when : 1
an additional when -> a : 1
additional when a -> system : 1
a system grows -> and : 1
system grows and -> gets : 1
grows and gets -> it : 1
and gets it -> becomes : 1
gets it becomes -> more : 1
it becomes more -> and : 1
becomes more and -> more : 1
and more difficult -> to : 1
more difficult to -> track : 1
difficult to track -> all : 1
to track all -> locks : 1
track all locks -> that : 1
all locks that -> might : 1
locks that might -> be : 1
might be used -> by : 1
by all threads -> running : 1
all threads running -> in : 1
threads running in -> a : 1
running in a -> this : 1
is one reason -> for : 1
is one reason -> why : 1
reason for always -> trying : 1
for always trying -> to : 1
always trying to -> minimize : 1
trying to minimize -> the : 1
minimize the use -> of : 1
use of shared -> and : 1
of shared and -> this : 1
shared and this -> demonstrates : 1
and this demonstrates -> the : 1
this demonstrates the -> need : 1
demonstrates the need -> for : 1
the need for -> exclusive : 1
the need for -> good : 1
the need for -> explicitly : 1
need for exclusive -> following : 1
for exclusive following -> figure : 1
exclusive following figure -> shows : 1
shows how two -> threads : 1
how two threads -> are : 1
threads are in -> a : 1
are in a -> waiting : 1
are in a -> system : 1
are in a -> critical : 1
in a waiting -> trying : 1
a waiting trying -> to : 1
waiting trying to -> acquire : 1
trying to acquire -> the : 1
to acquire the -> lock : 1
acquire the lock -> held : 1
the lock held -> by : 1
lock held by -> the : 1
held by the -> other : 1
by the other -> cdpaligncenter : 1
the other cdpaligncenter -> example : 1
other cdpaligncenter example -> of : 1
cdpaligncenter example of -> a : 1
of a deadlock -> thread : 1
a deadlock thread -> and : 1
deadlock thread and -> thread : 1
thread and thread -> are : 1
and thread are -> waiting : 1
thread are waiting -> for : 1
release their respectively -> and : 1
their respectively and -> asynchronous : 1
respectively and asynchronous -> will : 1
and asynchronous will -> refer : 1
asynchronous will refer -> to : 1
will refer to -> and : 1
refer to and -> or : 1
to and or -> in : 1
and or in -> this : 1
or in this -> synchronous : 1
in this synchronous -> tasks : 1
this synchronous tasks -> are : 1
synchronous tasks are -> like : 1
tasks are like -> the : 1
are like the -> ordinary : 1
like the ordinary -> functions : 1
the ordinary functions -> that : 1
ordinary functions that -> we : 1
functions that we -> are : 1
we are used -> to : 2
used to in -> a : 1
in a when -> a : 1
a when a -> synchronous : 1
when a synchronous -> task : 1
a synchronous task -> is : 1
synchronous task is -> finished : 1
task is finished -> doing : 1
is finished doing -> whatever : 1
finished doing whatever -> it : 1
doing whatever it -> is : 1
whatever it is -> supposed : 1
it is supposed -> to : 1
supposed to it -> will : 1
to it will -> return : 1
to it will -> only : 1
return the control -> to : 1
return the control -> back : 1
the control to -> the : 1
control to the -> caller : 1
the the caller -> of : 1
of the task -> is : 1
the task is -> waiting : 1
task is waiting -> or : 1
is waiting or -> blocked : 1
waiting or blocked -> until : 1
or blocked until -> the : 1
until the synchronous -> task : 1
the synchronous task -> has : 1
synchronous task has -> asynchronous : 1
task has asynchronous -> on : 1
has asynchronous on -> the : 1
asynchronous on the -> other : 1
the other will -> return : 1
other will return -> the : 1
the control back -> to : 1
control back to -> the : 1
the caller immediately -> and : 1
caller immediately and -> instead : 1
immediately and instead -> perform : 1
and instead perform -> its : 1
instead perform its -> work : 1
perform its work -> the : 1
its work the -> sequence : 1
work the sequence -> in : 1
the sequence in -> the : 1
sequence in the -> following : 1
diagram shows the -> difference : 1
shows the difference -> between : 1
difference between calling -> a : 1
between calling a -> synchronous : 1
calling a synchronous -> and : 1
a synchronous and -> asynchronous : 1
synchronous and asynchronous -> cdpaligncenter : 1
and asynchronous cdpaligncenter -> cdpalign : 1
asynchronous cdpaligncenter cdpalign -> cdpaligncenter : 1
cdpaligncenter cdpalign cdpaligncenter -> cdpalign : 1
cdpalign cdpaligncenter cdpalign -> synchronous : 1
cdpaligncenter cdpalign synchronous -> versus : 1
cdpalign synchronous versus -> asynchronous : 1
synchronous versus asynchronous -> the : 1
versus asynchronous the -> asynchronous : 1
asynchronous the asynchronous -> task : 1
the asynchronous task -> returns : 1
asynchronous task returns -> immediately : 1
task returns immediately -> but : 1
returns immediately but -> continue : 1
immediately but continue -> to : 1
but continue to -> work : 1
continue to work -> after : 1
to work after -> the : 1
work after the -> caller : 1
after the caller -> has : 1
the caller has -> regained : 1
caller has regained -> you : 1
has regained you -> seen : 1
regained you seen -> asynchronous : 1
you seen asynchronous -> tasks : 1
seen asynchronous tasks -> it : 1
asynchronous tasks it -> might : 1
tasks it might -> look : 1
might look strange -> at : 1
look strange at -> since : 1
strange at since -> ordinary : 1
at since ordinary -> functions : 1
since ordinary functions -> in : 1
ordinary functions in -> always : 1
functions in always -> stop : 1
in always stop -> executing : 1
always stop executing -> when : 1
stop executing when -> they : 1
executing when they -> encounter : 1
when they encounter -> a : 1
they encounter a -> return : 1
encounter a return -> statement : 1
a return statement -> or : 1
return statement or -> reach : 1
statement or reach -> the : 1
or reach the -> end : 1
reach the end -> of : 1
the function asynchronous -> apis : 1
function asynchronous apis -> are : 1
asynchronous apis are -> getting : 1
apis are getting -> more : 1
are getting more -> and : 1
getting more and -> more : 1
and more common -> and : 1
more common and -> it : 1
common and it -> is : 1
it is likely -> that : 2
is likely that -> you : 2
likely that you -> have : 1
likely that you -> need : 1
you have encountered -> them : 1
have encountered them -> for : 1
encountered them for -> when : 1
them for when -> working : 1
for when working -> with : 1
working with asynchronous -> we : 1
with asynchronous we -> use : 1
asynchronous we use -> the : 1
use the term -> blocking : 1
the term blocking -> of : 1
term blocking of -> operations : 1
blocking of operations -> that : 1
of operations that -> blocks : 1
operations that blocks -> the : 1
that blocks the -> it : 1
that blocks the -> ui : 1
blocks the it -> makes : 1
the it makes -> the : 1
makes the caller -> wait : 1
the caller wait -> until : 1
caller wait until -> the : 1
wait until the -> operation : 1
until the operation -> has : 1
the operation has -> programming : 1
operation has programming -> in : 1
has programming in -> concurrency : 1
programming in concurrency -> support : 1
in concurrency support -> in : 1
concurrency support in -> makes : 1
concurrency support in -> is : 1
support in makes -> it : 1
in makes it -> possible : 1
possible for a -> program : 1
for a program -> to : 1
for a program -> should : 1
program to execute -> multiple : 1
to execute multiple -> tasks : 1
multiple tasks as -> mentioned : 1
tasks as mentioned -> writing : 1
as mentioned writing -> a : 1
mentioned writing a -> correct : 1
writing a correct -> concurrent : 1
a correct concurrent -> program : 1
correct concurrent program -> in : 1
concurrent program in -> a : 1
program in a -> lot : 1
program in a -> normal : 1
harder than writing -> a : 1
than writing a -> program : 1
a program that -> executes : 1
program that executes -> all : 1
that executes all -> tasks : 1
executes all tasks -> sequentially : 1
all tasks sequentially -> in : 1
tasks sequentially in -> one : 1
sequentially in one -> this : 1
in one this -> section : 1
one this section -> will : 1
section will also -> demonstrate : 1
will also demonstrate -> some : 1
also demonstrate some -> common : 1
demonstrate some common -> pitfalls : 1
some common pitfalls -> to : 1
common pitfalls to -> make : 1
pitfalls to make -> you : 1
to make you -> aware : 1
make you aware -> of : 1
you aware of -> all : 1
aware of all -> the : 1
all the difficulties -> involved : 1
the difficulties involved -> in : 1
difficulties involved in -> writing : 1
involved in writing -> concurrent : 1
in writing concurrent -> support : 1
writing concurrent support -> was : 1
concurrent support was -> first : 1
support was first -> introduced : 1
was first introduced -> in : 1
first introduced in -> and : 1
in and has -> since : 1
and has since -> then : 1
has since then -> been : 1
since then been -> extended : 1
then been extended -> into : 1
been extended into -> both : 1
extended into both -> and : 1
into both and -> before : 1
both and before -> concurrency : 1
and before concurrency -> was : 1
before concurrency was -> part : 1
concurrency was part -> of : 1
was part of -> the : 1
of the concurrency -> was : 1
the concurrency was -> implemented : 1
concurrency was implemented -> with : 1
was implemented with -> native : 1
implemented with native -> concurrency : 1
with native concurrency -> support : 1
native concurrency support -> from : 1
concurrency support from -> the : 1
support from the -> operating : 1
from the operating -> or : 1
the operating or -> some : 1
operating or some -> other : 1
or some other -> with : 1
some other with -> concurrency : 1
other with concurrency -> support : 1
with concurrency support -> directly : 1
concurrency support directly -> in : 1
support directly in -> the : 1
can now write -> concurrent : 1
now write concurrent -> which : 1
write concurrent which -> is : 1
concurrent which is -> since : 1
which is since -> the : 1
since the concurrency -> support : 1
the concurrency support -> in : 1
support in is -> rather : 1
in is rather -> be : 1
is rather be -> surprised : 1
rather be surprised -> if : 1
be surprised if -> you : 1
surprised if you -> have : 1
have to reach -> for : 1
to reach for -> functionality : 1
reach for functionality -> when : 1
for functionality when -> dealing : 1
functionality when dealing -> with : 1
dealing with concurrency -> on : 1
with concurrency on -> your : 1
concurrency on your -> it : 1
on your it -> should : 1
your it should -> also : 1
also be said -> that : 1
said that the -> thread : 1
thread support library -> is : 1
thread support library -> and : 1
support library is -> likely : 1
library is likely -> to : 1
is likely to -> be : 2
is likely to -> occur : 1
likely to be -> extended : 1
likely to be -> scheduled : 1
to be extended -> quite : 1
be extended quite -> a : 1
extended quite a -> bit : 1
quite a bit -> in : 1
a bit in -> the : 1
bit in the -> next : 1
the next few -> releases : 1
next few releases -> of : 1
few releases of -> the : 1
releases of the -> need : 1
of the need -> for : 1
need for good -> concurrency : 1
for good concurrency -> support : 1
good concurrency support -> is : 1
concurrency support is -> increasing : 1
support is increasing -> because : 1
is increasing because -> of : 1
increasing because of -> the : 1
the way hardware -> is : 1
way hardware is -> being : 1
hardware is being -> and : 1
is being and -> there : 1
being and there -> is : 1
a lot yet -> to : 1
lot yet to -> be : 1
yet to be -> discovered : 1
to be discovered -> when : 1
be discovered when -> it : 1
discovered when it -> comes : 1
when it comes -> to : 2
comes to the -> and : 1
the and correctness -> of : 1
and correctness of -> highly : 1
correctness of highly -> concurrent : 1
of highly concurrent -> thread : 1
highly concurrent thread -> support : 1
concurrent thread support -> will : 1
thread support will -> here : 1
support will here -> take : 1
will here take -> a : 1
here take a -> tour : 1
take a tour -> through : 1
a tour through -> the : 1
tour through the -> thread : 1
through the thread -> support : 1
support library and -> cover : 1
library and cover -> the : 1
and cover the -> most : 1
cover the most -> important : 1
most important components -> of : 1
important components of -> the : 1
components of the -> running : 1
the running program -> contains : 1
running program contains -> at : 1
program contains at -> least : 1
contains at least -> one : 1
least one when -> your : 1
one when your -> main : 1
when your main -> function : 1
your main function -> is : 1
main function is -> being : 1
is being it -> is : 1
being it is -> executed : 1
it is executed -> on : 1
it is executed -> commutative : 1
it is executed -> as : 1
is executed on -> a : 1
on a thread -> usually : 1
on a thread -> object : 1
on a thread -> with : 1
a thread usually -> referred : 1
thread usually referred -> to : 1
as the each -> thread : 1
the each thread -> has : 1
thread has an -> which : 1
has an which -> can : 1
an which can -> be : 1
useful when debugging -> a : 1
when debugging a -> concurrent : 1
debugging a concurrent -> the : 1
a concurrent the -> following : 1
concurrent the following -> program : 1
the following program -> prints : 1
following program prints -> the : 1
program prints the -> thread : 1
prints the thread -> identifier : 1
the thread identifier -> of : 1
thread identifier of -> the : 1
identifier of the -> main : 1
the main int -> the : 1
main int the -> preceding : 1
int the preceding -> program : 1
the preceding program -> might : 1
preceding program might -> produce : 1
program might produce -> something : 1
might produce something -> like : 1
produce something like -> thread : 1
something like thread -> is : 1
like thread is -> possible : 1
thread is possible -> to : 1
possible to make -> a : 1
make a thread -> sleep : 1
a thread sleep -> is : 1
thread sleep is -> rarely : 1
sleep is rarely -> used : 1
is rarely used -> in : 1
rarely used in -> production : 1
used in production -> code : 1
in production code -> but : 1
production code but -> can : 1
code but can -> be : 1
but can be -> very : 1
be very useful -> during : 1
very useful during -> for : 1
useful during for -> if : 1
during for if -> you : 1
for if you -> have : 1
a data race -> that : 1
data race that -> only : 1
race that only -> occurs : 1
that only occurs -> under : 1
only occurs under -> rare : 1
occurs under rare -> adding : 1
under rare adding -> sleep : 1
rare adding sleep -> to : 1
adding sleep to -> your : 1
sleep to your -> code : 1
to your code -> might : 1
your code might -> make : 1
code might make -> it : 1
might make it -> appear : 1
make it appear -> more : 1
it appear more -> here : 1
appear more here -> is : 1
more here is -> how : 1
is how you -> make : 1
is how you -> would : 1
how you make -> the : 1
you make the -> currently : 1
make the currently -> running : 1
the currently running -> thread : 1
currently running thread -> sleep : 1
running thread sleep -> for : 1
thread sleep for -> a : 1
sleep for a -> program : 1
a program should -> never : 1
program should never -> expose : 1
should never expose -> any : 1
never expose any -> data : 1
expose any data -> races : 1
any data races -> after : 1
data races after -> inserting : 1
races after inserting -> random : 1
after inserting random -> sleeps : 1
inserting random sleeps -> in : 1
random sleeps in -> your : 1
sleeps in your -> your : 1
in your your -> program : 1
your your program -> may : 1
your program may -> not : 1
program may not -> work : 1
may not work -> satisfactorily : 1
not work satisfactorily -> after : 1
work satisfactorily after -> adding : 1
satisfactorily after adding -> buffers : 1
after adding buffers -> may : 1
adding buffers may -> become : 1
buffers may become -> the : 1
may become the -> ui : 1
become the ui -> and : 1
so but it -> should : 1
but it should -> always : 1
it should always -> behave : 1
should always behave -> in : 1
always behave in -> a : 1
behave in a -> predictable : 1
a predictable and -> defined : 1
predictable and defined -> we : 1
and defined we -> have : 1
defined we have -> control : 1
we have control -> over : 1
have control over -> the : 1
control over the -> scheduling : 2
over the scheduling -> of : 2
the scheduling of -> the : 3
scheduling of the -> and : 1
scheduling of the -> threads : 1
scheduling of the -> this : 1
the and random -> sleeps : 1
and random sleeps -> simulate : 1
random sleeps simulate -> unlikely : 1
sleeps simulate unlikely -> but : 1
simulate unlikely but -> possible : 1
unlikely but possible -> scheduling : 1
but possible scheduling -> let : 1
possible scheduling let -> us : 1
scheduling let us -> create : 1
let us create -> an : 1
us create an -> additional : 1
create an additional -> thread : 1
an additional thread -> using : 1
additional thread using -> from : 1
thread using from -> the : 1
using from the -> it : 1
from the it -> represents : 1
the it represents -> a : 1
it represents a -> single : 1
represents a single -> thread : 1
a single thread -> of : 1
single thread of -> execution : 1
thread of execution -> and : 1
of execution and -> is : 1
execution and is -> usually : 1
and is usually -> a : 1
is usually a -> wrapper : 1
usually a wrapper -> around : 1
wrapper around an -> operating : 1
around an operating -> system : 1
an operating system -> will : 1
system will be -> invoked : 1
will be invoked -> from : 1
be invoked from -> a : 1
invoked from a -> thread : 1
from a thread -> created : 1
a thread created -> by : 1
thread created by -> us : 1
created by us -> auto : 1
by us auto -> int : 1
us auto int -> auto : 1
int auto creating -> the : 1
auto creating the -> we : 1
creating the we -> pass : 1
creating the we -> read : 1
the we pass -> in : 1
we pass in -> a : 1
pass in a -> callable : 1
in a callable -> object : 1
a callable object -> or : 1
a callable object -> that : 1
callable object or -> a : 1
object or a -> that : 1
or a that -> the : 1
the thread will -> begin : 1
thread will begin -> to : 1
will begin to -> execute : 1
begin to execute -> whenever : 1
to execute whenever -> it : 1
execute whenever it -> gets : 1
whenever it gets -> scheduled : 1
it gets scheduled -> time : 1
gets scheduled time -> on : 1
scheduled time on -> the : 1
we have added -> a : 1
have added a -> call : 1
added a call -> to : 1
a call to -> sleep : 1
a call to -> joined : 1
a call to -> the : 1
call to sleep -> to : 1
to sleep to -> make : 1
sleep to make -> it : 1
make it obvious -> why : 1
it obvious why -> we : 1
obvious why we -> need : 1
why we need -> to : 2
to call join -> on : 1
call join on -> the : 1
join on the -> when : 1
on the when -> object : 1
the when object -> is : 1
when object is -> it : 2
object is it -> must : 2
is it must -> have : 1
is it must -> no : 1
it must have -> been : 1
must have been -> or : 1
have been or -> or : 1
been or or -> it : 1
or or it -> will : 1
or it will -> cause : 1
it will cause -> the : 1
will cause the -> program : 1
cause the program -> to : 1
program to call -> which : 1
to call which -> by : 1
call which by -> default : 1
which by default -> will : 1
by default will -> call : 1
default will call -> you : 1
will call you -> installed : 1
call you installed -> a : 1
you installed a -> custom : 1
installed a custom -> we : 1
a custom we -> forget : 1
custom we forget -> to : 1
we forget to -> call : 1
forget to call -> either : 1
to call either -> join : 2
call either join -> or : 2
either join or -> detach : 2
join or detach -> on : 2
or detach on -> a : 2
detach on a -> object : 1
detach on a -> thread : 1
on a object -> before : 1
a object before -> it : 1
object before it -> is : 2
before it is -> the : 1
before it is -> or : 1
before it is -> finally : 1
is the program -> will : 1
program will as -> demonstrated : 1
will as demonstrated -> in : 1
as demonstrated in -> the : 1
the following int -> auto : 1
following int auto -> forgot : 1
int auto forgot -> to : 1
auto forgot to -> detach : 1
forgot to detach -> or : 1
to detach or -> join : 1
detach or join -> program : 1
or join program -> will : 1
join program will -> remember : 1
program will remember -> that : 1
will remember that -> you : 1
remember that you -> have : 1
have to call -> either : 1
a thread object -> before : 1
thread object before -> it : 1
it is or -> the : 1
or the program -> will : 2
will the preceding -> is : 1
preceding is waits -> until : 1
is waits until -> the : 1
waits until the -> thread : 1
until the thread -> has : 1
the thread has -> finished : 1
thread has finished -> in : 1
thread has finished -> consider : 1
has finished in -> the : 1
finished in the -> preceding : 1
preceding the function -> will : 1
function will not -> return : 1
will not return -> until : 1
not return until -> thread : 1
return until thread -> has : 1
until thread has -> finished : 1
has finished consider -> the : 1
finished consider the -> following : 1
following we detach -> the : 1
we detach the -> thread : 1
detach the thread -> by : 1
the thread by -> replacing : 1
thread by replacing -> the : 1
replacing the preceding -> the : 1
preceding the following -> such : 1
the following such -> a : 1
following such a -> our : 1
such a our -> main : 1
a our main -> function : 1
our main function -> will : 1
main function will -> end : 1
function will end -> before : 1
will end before -> thread : 1
end before thread -> wakes : 1
before thread wakes -> up : 1
thread wakes up -> to : 1
wakes up to -> print : 1
up to print -> the : 1
to print the -> and : 1
print the and -> as : 1
the and as -> a : 1
a the program -> will : 1
program will only -> output : 1
will only output -> the : 1
only output the -> thread : 1
output the thread -> id : 1
the thread id -> of : 1
thread id of -> the : 1
id of the -> main : 1
the main we -> have : 1
main we have -> no : 1
have no control -> of : 1
have no control -> over : 1
no control of -> the : 1
of the scheduling -> of : 1
the threads and -> it : 1
threads and it -> is : 1
is possible but -> very : 1
possible but very -> unlikely : 1
but very unlikely -> that : 1
very unlikely that -> the : 1
unlikely that the -> will : 1
that the will -> output : 1
the will output -> its : 1
will output its -> message : 1
output its message -> the : 1
its message the -> has : 1
message the has -> had : 1
has had time -> to : 1
had time to -> wake : 1
time to wake -> and : 1
to wake and -> print : 1
wake and print -> its : 1
and print its -> thread : 1
print its thread -> instead : 1
its thread instead -> of : 1
thread instead of -> in : 1
this example also -> introduces : 1
example also introduces -> another : 1
also introduces another -> we : 1
introduces another we -> are : 1
another we are -> using : 1
are using from -> both : 1
using from both -> threads : 1
from both threads -> without : 1
both threads without -> any : 1
without any and -> since : 1
any and since -> no : 1
and since no -> longer : 1
since no longer -> waiting : 1
no longer waiting -> for : 1
longer waiting for -> thread : 1
waiting for thread -> to : 1
for thread to -> they : 1
thread to they -> both : 1
they both could -> theoretically : 1
both could theoretically -> use : 1
could theoretically use -> in : 1
theoretically use in -> and : 1
use in and -> can : 1
in and can -> be : 1
used from multiple -> threads : 1
from multiple threads -> without : 3
from multiple threads -> atomic : 1
from multiple threads -> control : 1
threads without introducing -> data : 2
threads without introducing -> a : 1
without introducing data -> so : 1
without introducing data -> an : 1
introducing data so -> there : 1
data so there -> is : 1
is no undefined -> it : 1
no undefined it -> is : 1
undefined it is -> still : 1
still possible that -> the : 1
possible that the -> output : 1
that the output -> generated : 1
the output generated -> by : 1
output generated by -> the : 1
by the threads -> are : 1
threads are resulting -> in : 1
are resulting in -> something : 1
resulting in something -> thread : 1
in something thread -> we : 1
something thread we -> want : 1
thread we want -> to : 1
want to avoid -> the : 1
to avoid the -> interleaved : 1
avoid the interleaved -> we : 1
the interleaved we -> need : 1
interleaved we need -> to : 1
need to treat -> the : 1
to treat the -> outputting : 1
treat the outputting -> of : 1
the outputting of -> characters : 1
outputting of characters -> as : 1
of characters as -> a : 1
characters as a -> critical : 1
as a critical -> section : 1
critical section to -> will : 1
critical section to -> inform : 1
section to will -> talk : 1
to will talk -> more : 1
more about critical -> sections : 1
about critical sections -> and : 1
critical sections and -> race : 1
critical sections and -> protecting : 1
critical sections and -> avoiding : 1
sections and race -> conditions : 1
and race conditions -> in : 1
race conditions in -> a : 1
conditions in a -> but : 1
in a but -> some : 1
a but some -> details : 1
but some details -> about : 1
some details about -> we : 1
details about we -> go : 1
about we go -> any : 1
go any we -> should : 1
any we should -> make : 1
we should make -> sure : 1
sure that we -> have : 1
understanding of what -> object : 1
understanding of what -> the : 1
of what object -> really : 1
what object really -> represents : 1
object really represents -> and : 1
really represents and -> in : 1
represents and in -> what : 1
in what states -> it : 1
what states it -> can : 1
states it can -> we : 1
can we yet -> talked : 1
we yet talked -> about : 1
yet talked about -> what : 1
talked about what -> sort : 1
about what sort -> of : 1
what sort of -> threads : 1
sort of threads -> there : 1
of threads there -> normally : 1
threads there normally -> are : 1
there normally are -> in : 1
normally are in -> a : 1
in a system -> executing : 1
a system executing -> a : 1
system executing a -> in : 1
executing a in -> the : 1
we have captured -> a : 1
have captured a -> snapshot : 1
captured a snapshot -> of : 1
a snapshot of -> a : 1
snapshot of a -> hypothetical : 1
of a hypothetical -> running : 2
a hypothetical running -> cdpaligncenter : 1
a hypothetical running -> from : 1
hypothetical running cdpaligncenter -> of : 1
running cdpaligncenter of -> a : 1
hypothetical running from -> the : 1
running from the -> the : 1
the the figure -> shows : 1
the figure shows -> the : 1
shows the cpu -> and : 1
cpu and its -> hardware : 1
and its hardware -> those : 1
its hardware those -> are : 1
hardware those are -> the : 1
those are the -> execution : 1
are the execution -> units : 1
the execution units -> on : 1
execution units on -> the : 1
units on the -> in : 1
this the cpu -> provides : 1
the cpu provides -> four : 1
cpu provides four -> hardware : 1
provides four hardware -> usually : 1
four hardware usually -> that : 1
hardware usually that -> means : 1
usually that means -> it : 1
that means it -> has : 1
means it has -> four : 1
it has four -> but : 1
has four but -> it : 1
four but it -> could : 1
but it could -> be : 1
it could be -> some : 1
could be some -> other : 1
be some other -> some : 1
some other some -> cores : 1
other some cores -> can : 1
some cores can -> execute : 1
cores can execute -> two : 1
can execute two -> hardware : 1
execute two hardware -> for : 1
two hardware for -> the : 1
hardware for the -> total : 1
for the total -> number : 1
number of hardware -> threads : 2
of hardware threads -> can : 1
of hardware threads -> cannot : 1
hardware threads can -> be : 1
can be printed -> at : 1
be printed at -> runtime : 1
printed at runtime -> with : 1
at runtime with -> possible : 1
runtime with possible -> preceding : 1
with possible preceding -> code : 1
possible preceding code -> might : 1
preceding code might -> also : 1
code might also -> output : 1
might also output -> if : 1
also output if -> the : 1
output if the -> number : 1
if the number -> of : 2
hardware threads cannot -> be : 1
threads cannot be -> determined : 1
cannot be determined -> on : 1
be determined on -> the : 1
determined on the -> running : 1
on the running -> layer : 1
the running layer -> above : 1
running layer above -> the : 1
layer above the -> hardware : 1
above the hardware -> threads : 1
the hardware threads -> contains : 1
hardware threads contains -> the : 1
threads contains the -> operating : 1
contains the operating -> system : 1
operating system these -> are : 1
system these are -> the : 1
these are the -> actual : 1
are the actual -> software : 1
the actual software -> the : 1
actual software the -> os : 1
software the os -> scheduler : 1
the os scheduler -> determines : 1
os scheduler determines -> when : 1
scheduler determines when -> and : 1
determines when and -> how : 1
when and how -> long : 1
and how long -> an : 1
how long an -> os : 1
long an os -> thread : 1
an os thread -> is : 1
os thread is -> executed : 1
thread is executed -> by : 1
is executed by -> a : 2
is executed by -> multiple : 1
executed by a -> hardware : 1
executed by a -> second : 1
by a hardware -> in : 1
a hardware in -> the : 1
hardware in the -> preceding : 1
the preceding there -> are : 1
preceding there are -> currently : 1
there are currently -> three : 1
are currently three -> out : 1
currently three out -> of : 1
three out of -> six : 1
out of six -> software : 1
of six software -> threads : 1
six software threads -> topmost : 1
software threads topmost -> layer : 1
threads topmost layer -> in : 1
topmost layer in -> the : 1
in the figure -> contains : 1
the figure contains -> the : 1
figure contains the -> object : 1
contains the object -> is : 1
the object is -> nothing : 1
the object is -> in : 1
object is nothing -> more : 1
is nothing more -> nothing : 1
nothing more nothing -> than : 1
more nothing than -> an : 1
nothing than an -> ordinary : 1
than an ordinary -> object : 1
an ordinary object -> that : 1
ordinary object that -> may : 1
object that may -> or : 1
that may or -> may : 2
not be associated -> with : 1
be associated with -> an : 1
be associated with -> the : 1
associated with an -> underlying : 1
with an underlying -> os : 1
an underlying os -> two : 1
underlying os two -> instances : 1
os two instances -> of : 1
instances of cannot -> be : 1
cannot be associated -> with : 1
associated with the -> same : 1
the same underlying -> in : 1
same underlying in -> the : 1
underlying in the -> we : 1
the program currently -> has : 1
the program currently -> contains : 1
program currently has -> three : 1
currently has three -> instances : 1
has three instances -> of : 1
three instances of -> whereas : 1
instances of whereas -> two : 1
of whereas two -> are : 1
whereas two are -> associated : 1
two are associated -> with : 1
are associated with -> threads : 1
associated with threads -> and : 1
with threads and -> one : 1
threads and one -> is : 1
and one is -> it : 1
one is it -> is : 1
possible to query -> object : 1
to query object -> in : 1
query object in -> what : 1
object in what -> state : 1
in what state -> it : 1
what state it -> is : 1
it is by -> using : 1
is by using -> a : 1
using a thread -> is : 1
a thread is -> joinable : 1
thread is joinable -> if : 1
is joinable if -> it : 1
joinable if it -> has : 1
it has that -> if : 1
has that if -> it : 1
that if it -> has : 1
it has nothing -> to : 1
has nothing to -> from : 1
nothing to from -> associated : 1
to from associated -> running : 1
from associated running -> thread : 1
associated running thread -> has : 1
running thread has -> been : 1
thread has been -> transferred : 1
has been transferred -> to : 1
been transferred to -> another : 1
transferred to another -> by : 1
to another by -> a : 1
another by a -> call : 1
by a call -> to : 2
call to joined -> by : 1
to joined by -> a : 1
joined by a -> call : 1
object is in -> the : 1
in the joinable -> when : 1
in the joinable -> state : 1
the joinable when -> object : 1
joinable when object -> is : 1
it must no -> longer : 1
must no longer -> be : 1
longer be in -> the : 1
the joinable state -> or : 1
joinable state or -> the : 1
state or the -> program : 1
program will critical -> already : 1
will critical already -> our : 1
critical already our -> code : 1
already our code -> must : 1
our code must -> not : 1
code must not -> contain : 1
must not contain -> any : 1
not contain any -> data : 1
not contain any -> padding : 1
contain any data -> writing : 1
any data writing -> code : 1
data writing code -> with : 1
writing code with -> data : 1
code with data -> races : 1
with data races -> is : 1
data races is -> very : 1
races is very -> finding : 1
is very finding -> the : 1
very finding the -> critical : 1
finding the critical -> sections : 1
sections and protecting -> them : 1
and protecting them -> with : 1
protecting them with -> locks : 1
them with locks -> is : 1
with locks is -> something : 1
locks is something -> we : 1
something we constantly -> need : 1
we constantly need -> to : 1
constantly need to -> think : 1
think about when -> writing : 1
about when writing -> concurrent : 1
programs in this -> style : 1
in this style -> using : 1
this style using -> provides : 1
style using provides -> us : 1
using provides us -> with : 1
us with that -> can : 1
with that can -> be : 1
used for protecting -> critical : 1
for protecting critical -> sections : 1
protecting critical sections -> and : 1
protecting critical sections -> with : 1
sections and avoiding -> data : 1
and avoiding data -> we : 1
avoiding data we -> will : 1
we will demonstrate -> how : 1
use a mutex -> with : 1
use a mutex -> for : 1
a mutex with -> a : 1
mutex with a -> classic : 1
with a classic -> example : 1
a classic example -> using : 1
classic example using -> a : 1
example using a -> shared : 1
using a shared -> mutable : 1
a shared mutable -> counter : 1
a shared mutable -> variable : 1
shared mutable counter -> variable : 1
mutable counter variable -> updated : 1
counter variable updated -> by : 1
variable updated by -> multiple : 1
updated by multiple -> we : 1
by multiple we -> define : 1
multiple we define -> a : 1
we define a -> global : 1
define a global -> mutable : 1
a global mutable -> variable : 1
global mutable variable -> and : 1
mutable variable and -> the : 1
mutable variable and -> is : 1
variable and the -> function : 1
variable and the -> if : 1
the function incrementing -> the : 1
function incrementing the -> counter : 1
incrementing the counter -> global : 1
incrementing the counter -> not : 1
the counter global -> mutable : 1
counter global mutable -> auto : 1
global mutable auto -> for : 1
mutable auto for -> i : 1
auto for i -> i : 2
auto for i -> auto : 1
i i function -> below : 1
i function below -> creates : 1
function below creates -> two : 1
below creates two -> threads : 1
creates two threads -> that : 1
threads that will -> both : 1
that will both -> execute : 1
will both execute -> the : 1
both execute the -> note : 1
execute the note -> also : 1
the note also -> in : 1
note also in -> this : 1
also in this -> example : 1
this example how -> we : 1
example how we -> can : 1
can pass arguments -> to : 1
pass arguments to -> the : 1
the function invoked -> by : 1
function invoked by -> the : 1
invoked by the -> we : 1
by the we -> can : 1
can pass an -> arbitrary : 1
pass an arbitrary -> number : 1
of arguments to -> the : 1
the thread constructor -> in : 1
thread constructor in -> order : 1
constructor in order -> to : 1
order to match -> the : 1
to match the -> parameters : 1
to match the -> current : 1
match the parameters -> in : 1
the parameters in -> the : 1
parameters in the -> signature : 1
in the signature -> of : 1
the signature of -> the : 1
signature of the -> function : 1
be we assert -> that : 1
we assert that -> the : 1
assert that the -> counter : 1
that the counter -> has : 1
the counter has -> the : 1
counter has the -> value : 1
value we expect -> it : 1
we expect it -> to : 1
it to have -> if : 1
to have if -> the : 1
have if the -> program : 1
if the program -> was : 1
the program was -> free : 1
program was free -> from : 1
was free from -> race : 1
free from race -> int : 1
from race int -> constexpr : 1
race int constexpr -> auto : 1
constexpr auto auto -> auto : 1
auto auto counter -> if : 1
auto counter if -> we : 1
counter if we -> have : 1
a data this -> assert : 1
data this assert -> should : 1
this assert should -> program : 1
assert should program -> will : 1
should program will -> most : 1
program will most -> likely : 1
most likely the -> hold : 1
likely the hold -> since : 1
the hold since -> the : 1
hold since the -> program : 1
program currently contains -> a : 1
currently contains a -> race : 1
contains a race -> when : 1
a race when -> i : 1
race when i -> repeatedly : 1
when i repeatedly -> run : 1
i repeatedly run -> the : 1
repeatedly run the -> i : 1
run the i -> end : 1
the i end -> up : 1
i end up -> with : 1
up with different -> values : 1
with different values -> of : 1
different values of -> the : 1
values of the -> instead : 1
of the instead -> of : 1
instead of reaching -> the : 1
of reaching the -> value : 1
reaching the value -> i : 1
the value i -> once : 1
value i once -> ended : 1
i once ended -> up : 1
once ended up -> with : 1
up with no -> more : 1
with no more -> than : 1
no more than -> this : 1
more than this -> example : 1
than this example -> is : 1
example is very -> similar : 1
to the data -> race : 1
the data race -> example : 2
data race example -> that : 1
data race example -> we : 1
race example that -> was : 1
example that was -> illustrated : 1
that was illustrated -> earlier : 1
was illustrated earlier -> in : 1
illustrated earlier in -> this : 1
in this line -> with : 1
this line with -> the : 1
line with the -> expression : 1
with the expression -> is : 1
the expression is -> a : 1
expression is a -> critical : 1
a critical uses -> a : 1
critical uses a -> shared : 1
uses a shared -> mutable : 1
shared mutable variable -> and : 1
and is executed -> by : 1
executed by multiple -> in : 1
by multiple in -> order : 1
multiple in order -> to : 1
order to protect -> the : 1
to protect the -> critical : 1
to protect the -> this : 1
protect the critical -> we : 1
the critical we -> will : 1
critical we will -> now : 1
will now use -> the : 1
use the included -> in : 1
the included in -> later : 1
included in later -> we : 1
in later we -> will : 1
can avoid data -> races : 1
avoid data races -> in : 1
avoid data races -> by : 1
races in this -> example : 1
this example by -> using : 1
example by using -> but : 1
by using but -> for : 1
using but for -> now : 1
for now we -> will : 1
will use a -> add : 1
use a add -> the : 1
a add the -> global : 1
add the global -> object : 1
the global object -> next : 1
global object next -> to : 1
object next to -> the : 1
next to the -> counter : 1
next to the -> the : 1
the counter counter -> will : 1
counter counter will -> be : 1
counter will be -> protected : 1
will be protected -> by : 1
protected by auto -> the : 1
by auto the -> object : 1
auto the object -> itself : 1
object itself a -> mutable : 1
itself a mutable -> shared : 1
a mutable shared -> variable : 1
a mutable shared -> but : 1
shared variable that -> can : 1
variable that can -> generate : 1
variable that can -> safely : 1
that can generate -> data : 1
can generate data -> races : 1
generate data races -> if : 1
generate data races -> we : 1
data races if -> used : 1
races if used -> by : 1
if used by -> multiple : 1
used by multiple -> it : 1
by multiple it -> is : 1
multiple it is -> a : 1
mutable shared but -> it : 1
shared but it -> will : 1
but it will -> not : 1
will not generate -> data : 1
not generate data -> the : 1
generate data the -> synchronization : 1
data the synchronization -> primitives : 1
the synchronization primitives -> from : 1
synchronization primitives from -> the : 1
primitives from the -> thread : 1
from the thread -> such : 1
from the thread -> the : 1
the thread such -> as : 1
thread such as -> are : 1
such as are -> designed : 1
as are designed -> for : 1
are designed for -> this : 1
designed for this -> particular : 1
for this particular -> in : 1
this particular in -> that : 1
particular in that -> they : 1
in that they -> are : 1
are very special -> and : 1
very special and -> use : 1
special and use -> hardware : 1
and use hardware -> instructions : 1
use hardware instructions -> or : 1
hardware instructions or -> whatever : 1
instructions or whatever -> is : 1
or whatever is -> necessary : 1
whatever is necessary -> on : 1
is necessary on -> your : 1
necessary on your -> platform : 1
on your platform -> to : 1
your platform to -> guarantee : 1
platform to guarantee -> that : 1
guarantee that they -> generate : 1
that they generate -> data : 1
they generate data -> races : 1
data races we -> need : 1
data races we -> can : 1
races we need -> to : 1
use the mutex -> in : 1
the mutex in -> our : 1
mutex in our -> critical : 1
in our critical -> section : 1
our critical section -> that : 1
critical section that -> reads : 1
section that reads -> and : 1
that reads and -> updates : 1
reads and updates -> the : 1
and updates the -> counter : 1
updates the counter -> we : 1
the counter we -> could : 1
counter we could -> use : 1
use and functions -> on : 1
and functions on -> the : 1
functions on the -> but : 1
the but the -> preferred : 1
the but the -> latter : 1
but the preferred -> and : 1
the preferred and -> safer : 1
preferred and safer -> way : 1
and safer way -> is : 1
safer way is -> to : 1
way is to -> always : 1
always use raii -> for : 1
use raii for -> handling : 1
raii for handling -> the : 1
for handling the -> think : 1
for handling the -> recommended : 1
handling the think -> of : 1
the think of -> the : 1
think of the -> mutex : 1
of the mutex -> as : 1
of the mutex -> there : 1
the mutex as -> a : 1
mutex as a -> resource : 1
as a resource -> that : 1
a resource that -> always : 1
resource that always -> needs : 1
that always needs -> to : 1
always needs to -> be : 1
to be unlocked -> when : 1
be unlocked when -> we : 1
unlocked when we -> are : 1
using the thread -> library : 1
the thread library -> provides : 1
thread library provides -> us : 1
library provides us -> with : 1
us with some -> useful : 1
with some useful -> raii : 1
some useful raii -> class : 1
useful raii class -> templates : 1
raii class templates -> for : 1
class templates for -> handling : 1
templates for handling -> we : 1
for handling we -> will : 2
handling we will -> use : 1
handling we will -> here : 1
will use to -> ensure : 1
use to ensure -> that : 1
that we release -> the : 2
we release the -> mutex : 1
we release the -> lock : 1
release the mutex -> the : 1
the mutex the -> following : 1
mutex the following -> is : 1
the following is -> the : 1
the following is -> an : 1
following is the -> updated : 1
following is the -> complete : 1
is the updated -> function : 1
the updated function -> now : 1
updated function now -> protected : 1
function now protected -> with : 1
now protected with -> a : 1
protected with a -> mutex : 1
with a mutex -> for : 1
with a mutex -> lock : 1
a mutex for -> i : 1
a mutex for -> doing : 1
mutex for i -> i : 1
i auto lock -> program : 1
auto lock program -> now : 1
lock program now -> works : 1
program now works -> as : 1
now works as -> free : 1
works as free -> from : 1
as free from -> data : 1
from data and -> if : 1
data and if -> we : 1
if we run -> it : 1
we run it -> the : 1
run it the -> condition : 1
it the condition -> in : 1
the condition in -> the : 1
the condition in -> this : 1
the condition in -> data : 1
condition in the -> it : 1
it will now -> hold : 1
will now hold -> long : 1
now hold long -> as : 1
hold long as -> a : 1
long as a -> thread : 1
as a thread -> never : 1
a thread never -> acquires : 1
thread never acquires -> more : 1
never acquires more -> than : 1
acquires more than -> one : 1
than one lock -> at : 1
one lock at -> a : 1
lock at a -> there : 1
no risk of -> it : 1
no risk of -> data : 1
risk of it -> is : 1
it is necessary -> to : 1
is necessary to -> acquire : 1
necessary to acquire -> another : 1
to acquire another -> lock : 1
acquire another lock -> while : 1
another lock while -> already : 1
lock while already -> holding : 1
while already holding -> on : 1
already holding on -> to : 1
holding on to -> a : 1
on to a -> previously : 1
to a previously -> acquired : 1
a previously acquired -> the : 1
previously acquired the -> risk : 1
acquired the risk -> of : 1
risk of deadlocks -> in : 1
of deadlocks in -> those : 1
deadlocks in those -> situations : 1
in those situations -> can : 1
those situations can -> be : 1
situations can be -> avoided : 1
avoided by grabbing -> both : 1
by grabbing both -> locks : 1
grabbing both locks -> at : 1
both locks at -> the : 1
locks at the -> exact : 1
locks at the -> same : 1
exact same has -> a : 1
same has a -> way : 1
has a way -> to : 1
way to do -> this : 1
by using which -> takes : 1
using which takes -> an : 1
which takes an -> arbitrary : 1
takes an arbitrary -> number : 1
of and blocks -> until : 1
and blocks until -> all : 1
blocks until all -> locks : 1
until all locks -> have : 1
all locks have -> been : 1
locks have been -> following : 1
have been following -> is : 1
been following is -> an : 1
example of transferring -> money : 1
of transferring money -> between : 1
transferring money between -> both : 1
money between both -> accounts : 1
between both accounts -> need : 1
both accounts need -> to : 1
accounts need to -> be : 1
be protected during -> the : 1
protected during the -> and : 1
during the and -> therefore : 1
need to acquire -> two : 1
to acquire two -> locks : 1
acquire two locks -> at : 1
two locks at -> the : 1
the same here -> is : 1
same here is -> how : 1
how it account -> int : 1
it account int -> void : 1
account int void -> int : 1
int void int -> auto : 1
auto auto lock -> both : 1
auto lock both -> at : 1
lock both at -> the : 1
both at the -> same : 1
the same are -> again : 1
same are again -> using : 1
are again using -> a : 1
again using a -> raii : 1
using a raii -> class : 1
a raii class -> template : 1
raii class template -> to : 1
class template to -> ensure : 1
template to ensure -> that : 1
release the lock -> whenever : 1
the lock whenever -> this : 1
lock whenever this -> function : 1
whenever this function -> in : 1
this function in -> this : 1
function in this -> we : 1
are using which -> provides : 1
using which provides -> us : 1
which provides us -> with : 1
with the possibility -> to : 1
the possibility to -> defer : 1
possibility to defer -> the : 1
to defer the -> locking : 1
defer the locking -> of : 1
the locking of -> the : 1
locking of the -> we : 1
the we explicitly -> lock : 1
we explicitly lock -> both : 1
explicitly lock both -> mutexes : 1
lock both mutexes -> at : 1
both mutexes at -> the : 1
mutexes at the -> same : 1
same time by -> using : 1
time by using -> makes : 1
by using makes -> it : 1
using makes it -> possible : 1
possible for threads -> to : 1
for threads to -> wait : 1
threads to wait -> until : 1
to wait until -> some : 1
wait until some -> specific : 1
until some specific -> condition : 1
some specific condition -> has : 1
specific condition has -> been : 1
condition has been -> threads : 1
has been threads -> can : 1
been threads can -> also : 1
threads can also -> use : 1
use the condition -> variable : 1
the condition variable -> to : 2
the condition variable -> with : 1
condition variable to -> signal : 1
condition variable to -> wait : 1
variable to signal -> to : 1
to signal to -> other : 1
signal to other -> threads : 1
to other threads -> that : 1
other threads that -> the : 1
other threads that -> are : 1
threads that the -> condition : 1
that the condition -> has : 2
the condition has -> common : 1
the condition has -> the : 1
condition has common -> pattern : 1
has common pattern -> in : 1
common pattern in -> a : 1
pattern in a -> concurrent : 1
in a concurrent -> program : 1
concurrent program is -> to : 1
concurrent program is -> downside : 1
program is to -> have : 1
is to have -> one : 1
to have one -> or : 1
have one or -> many : 1
one or many -> threads : 1
or many threads -> that : 1
many threads that -> are : 1
that are waiting -> for : 1
waiting for data -> to : 1
for data to -> be : 1
data to be -> consumed : 1
to be consumed -> these : 1
be consumed these -> threads : 1
consumed these threads -> are : 1
these threads are -> usually : 1
threads are usually -> called : 1
usually called another -> group : 1
called another group -> of : 1
another group of -> threads : 1
group of threads -> are : 1
group of threads -> that : 1
of threads are -> then : 1
threads are then -> responsible : 1
are then responsible -> for : 1
then responsible for -> producing : 1
for producing data -> that : 1
producing data that -> is : 1
that is ready -> to : 1
is ready to -> be : 1
be the group -> of : 1
the group of -> threads : 1
of threads that -> are : 1
that are producing -> data : 1
are producing data -> are : 1
producing data are -> called : 1
data are called -> or : 1
are called or -> if : 1
called or if -> it : 1
only one producer -> and : 1
one producer and -> consumer : 1
producer and consumer -> pattern : 1
producer and consumer -> to : 1
and consumer pattern -> can : 1
consumer pattern can -> be : 1
pattern can be -> implemented : 1
using a condition -> we : 1
a condition we -> can : 1
condition we can -> use : 1
use a combination -> of : 1
of and for -> this : 1
and for this -> have : 1
for this have -> a : 1
this have a -> look : 1
of a producer -> and : 1
a producer and -> consumer : 1
and consumer to -> make : 1
consumer to make -> it : 1
make it less -> cv : 1
it less cv -> auto : 1
less cv auto -> q : 1
cv auto q -> auto : 1
auto q auto -> mtx : 1
q auto mtx -> protects : 1
auto mtx protects -> the : 1
mtx protects the -> shared : 1
protects the shared -> constexpr : 1
the shared constexpr -> int : 1
shared constexpr int -> done : 1
constexpr int done -> special : 1
int done special -> value : 1
done special value -> to : 1
special value to -> signal : 1
value to signal -> that : 1
to signal that -> we : 1
signal that we -> are : 1
we are void -> auto : 1
are void auto -> i : 1
void auto i -> while : 1
auto i while -> auto : 1
i while auto -> lock : 1
while auto lock -> while : 1
auto lock while -> the : 1
lock while the -> lock : 1
while the lock -> is : 1
the lock is -> released : 1
lock is released -> while : 1
is released while -> i : 1
released while i -> if : 1
while i if -> i : 1
i if i -> auto : 1
if i auto -> for : 1
i auto for -> i : 1
for i auto -> int : 1
int auto producer -> auto : 1
auto producer auto -> consumer : 1
producer auto consumer -> are : 1
auto consumer are -> creating : 1
consumer are creating -> two : 1
are creating two -> one : 1
creating two one -> thread : 1
two one thread -> and : 1
one thread and -> one : 1
thread and one -> the : 1
thread and one -> writer : 1
and one the -> producer : 1
one the producer -> thread : 1
the producer thread -> is : 1
the producer thread -> did : 1
producer thread is -> generating : 1
thread is generating -> a : 1
is generating a -> sequence : 1
generating a sequence -> of : 1
sequence of integers -> and : 1
integers and pushes -> them : 1
and pushes them -> to : 1
pushes them to -> a : 1
them to a -> global : 1
a global once -> every : 1
global once every -> whenever : 1
once every whenever -> it : 1
every whenever it -> adds : 1
whenever it adds -> an : 1
it adds an -> element : 1
adds an element -> to : 2
the it signals -> that : 1
it signals that -> the : 1
signals that the -> condition : 1
condition has the -> condition : 1
has the condition -> in : 1
condition in this -> program : 1
in this program -> is : 1
this program is -> whether : 1
program is whether -> there : 1
is whether there -> is : 1
whether there is -> data : 1
there is data -> in : 1
is data in -> the : 1
data in the -> queue : 1
in the queue -> available : 1
the queue available -> for : 1
queue available for -> consumption : 1
available for consumption -> by : 1
for consumption by -> the : 1
consumption by the -> consumer : 1
by the consumer -> note : 1
the consumer note -> also : 1
consumer note also -> that : 1
not required to -> hold : 1
required to hold -> the : 1
to hold the -> lock : 1
hold the lock -> while : 1
the lock while -> notifying : 1
lock while notifying -> the : 1
while notifying the -> condition : 1
notifying the condition -> consumer : 1
the condition consumer -> thread : 1
condition consumer thread -> is : 1
consumer thread is -> responsible : 1
thread is responsible -> for : 1
responsible for printing -> the : 1
for printing the -> data : 1
printing the data -> the : 1
the data the -> to : 1
data the to -> the : 1
the to the -> it : 1
the to the -> function : 1
the it uses -> the : 1
it uses the -> condition : 1
uses the condition -> variable : 1
variable to wait -> for : 1
to wait for -> the : 1
wait for the -> empty : 1
for the empty -> queue : 1
the empty queue -> to : 1
empty queue to -> when : 1
queue to when -> the : 1
to when the -> consumer : 1
to when the -> preceding : 1
when the consumer -> calls : 1
the consumer calls -> the : 1
consumer calls the -> thread : 1
calls the thread -> goes : 1
the thread goes -> to : 1
thread goes to -> sleep : 1
goes to sleep -> and : 1
to sleep and -> will : 1
sleep and will -> leave : 1
and will leave -> the : 1
will leave the -> cpu : 1
leave the cpu -> for : 1
the cpu for -> other : 1
cpu for other -> threads : 1
for other threads -> to : 1
for other threads -> that : 1
other threads to -> it : 1
threads to it -> is : 1
to it is -> important : 2
understand why we -> need : 1
pass the variable -> lock : 1
the variable lock -> when : 1
variable lock when -> calling : 1
lock when calling -> apart : 1
when calling apart -> from : 1
calling apart from -> putting : 1
apart from putting -> the : 1
from putting the -> thread : 1
putting the thread -> to : 1
thread to also -> unlocks : 1
to also unlocks -> the : 1
also unlocks the -> mutex : 1
unlocks the mutex -> while : 1
the mutex while -> sleeping : 1
mutex while sleeping -> and : 1
while sleeping and -> then : 1
sleeping and then -> acquires : 1
and then acquires -> the : 1
then acquires the -> mutex : 1
acquires the mutex -> before : 1
mutex before it -> if : 1
before it if -> release : 1
it if release -> the : 1
if release the -> the : 1
release the the -> producer : 1
the the producer -> would : 1
the producer would -> not : 1
producer would not -> be : 1
would not be -> able : 1
not be able -> to : 1
able to add -> elements : 1
is the consumer -> waiting : 1
the consumer waiting -> on : 1
consumer waiting on -> the : 1
waiting on the -> condition : 1
on the condition -> variable : 1
condition variable with -> around : 1
variable with around -> it : 1
with around it -> and : 1
around it and -> not : 1
it and not -> an : 1
and not an -> this : 1
not an this -> is : 1
an this is -> a : 1
is a common -> and : 1
a common and -> sometimes : 1
common and sometimes -> we : 1
sometimes we need -> to : 1
to do that -> since : 1
do that since -> there : 1
that since there -> might : 1
since there might -> be : 1
be other consumers -> that : 1
other consumers that -> were : 1
consumers that were -> also : 1
that were also -> woken : 1
were also woken -> up : 1
also woken up -> and : 1
woken up and -> emptied : 1
up and emptied -> the : 1
and emptied the -> queue : 1
emptied the queue -> before : 1
the queue before -> in : 1
queue before in -> our : 1
before in our -> we : 1
our we only -> have : 1
only have one -> consumer : 1
have one consumer -> thread : 1
one consumer thread -> so : 1
consumer thread so -> that : 1
thread so that -> cannot : 1
so that cannot -> it : 1
that cannot it -> is : 1
cannot it is -> possible : 1
is possible for -> the : 2
for the consumer -> to : 1
the consumer to -> be : 1
consumer to be -> awoken : 1
to be awoken -> from : 1
be awoken from -> its : 1
awoken from its -> wait : 1
from its wait -> even : 1
its wait even -> though : 1
wait even though -> the : 1
though the producer -> thread : 1
producer thread did -> not : 1
thread did not -> this : 1
did not this -> phenomenon : 1
not this phenomenon -> is : 1
this phenomenon is -> called : 1
phenomenon is called -> and : 1
is called and -> the : 1
called and the -> reasons : 1
and the reasons -> for : 1
reasons for why -> this : 1
for why this -> can : 1
why this can -> happen : 1
this can happen -> are : 1
can happen are -> beyond : 1
happen are beyond -> the : 1
are beyond the -> scope : 1
beyond the scope -> of : 2
the scope of -> this : 2
scope of this -> we : 1
scope of this -> but : 1
of this we -> now : 1
this we now -> at : 1
we now at -> least : 1
now at least -> know : 1
at least know -> how : 1
least know how -> to : 1
to handle situations -> where : 1
handle situations where -> spurious : 1
situations where spurious -> wakeups : 1
where spurious wakeups -> can : 1
spurious wakeups can -> check : 1
wakeups can check -> the : 1
can check the -> condition : 1
check the condition -> in : 1
condition in data -> and : 1
in data and -> handling : 1
and handling examples -> presented : 1
handling examples presented -> so : 1
examples presented so -> far : 1
presented so far -> in : 1
so far in -> this : 1
far in this -> chapter : 1
this chapter have -> used : 1
chapter have used -> shared : 1
have used shared -> variables : 1
used shared variables -> to : 1
shared variables to -> communicate : 1
variables to communicate -> state : 1
to communicate state -> between : 1
communicate state between -> we : 1
state between we -> have : 1
between we have -> used : 1
have used mutex -> locks : 1
used mutex locks -> to : 1
locks to ensure -> that : 1
that we avoid -> data : 1
avoid data using -> shared : 1
data using shared -> data : 1
using shared data -> with : 1
using shared data -> and : 1
shared data with -> as : 1
data with as -> we : 1
with as we -> have : 1
we have been -> can : 1
have been can -> be : 1
been can be -> very : 1
hard to do -> correctly : 1
to do correctly -> when : 1
do correctly when -> the : 1
correctly when the -> size : 1
size of a -> program : 1
a program there -> is : 1
program there is -> also : 1
also a lot -> of : 1
lot of work -> in : 1
of work in -> maintaining : 1
work in maintaining -> code : 1
in maintaining code -> that : 1
maintaining code that -> uses : 1
code that uses -> explicit : 1
that uses explicit -> locking : 1
uses explicit locking -> spread : 1
explicit locking spread -> out : 1
locking spread out -> over : 1
over a code -> keeping : 1
a code keeping -> track : 1
code keeping track -> of : 1
track of shared -> memory : 1
of shared memory -> and : 1
shared memory and -> explicit : 1
memory and explicit -> locking : 1
and explicit locking -> moves : 1
explicit locking moves -> us : 1
locking moves us -> farther : 1
moves us farther -> away : 1
us farther away -> from : 1
farther away from -> what : 1
away from what -> we : 1
from what we -> really : 1
what we really -> want : 1
what we really -> need : 1
we really want -> to : 1
really want to -> accomplish : 1
want to accomplish -> and : 1
to accomplish and -> spend : 1
accomplish and spend -> time : 1
and spend time -> on : 1
spend time on -> when : 1
time on when -> writing : 1
writing a we -> dealt : 1
a we dealt -> with : 1
we dealt with -> error : 1
dealt with error -> handling : 1
with error handling -> at : 1
error handling at -> all : 1
handling at all -> what : 1
at all what -> if : 1
all what if -> a : 1
what if a -> thread : 1
if a thread -> needs : 1
a thread needs -> to : 1
thread needs to -> report : 1
needs to report -> an : 1
needs to report -> a : 1
to report an -> error : 1
report an error -> to : 1
an error to -> some : 1
error to some -> other : 1
some other how -> do : 1
other how do -> we : 1
how do we -> do : 1
we do that -> using : 1
do that using -> as : 1
that using as -> we : 1
using as we -> are : 1
used to do -> when : 1
to do when -> a : 1
do when a -> function : 1
a function needs -> to : 1
function needs to -> report : 1
to report a -> runtime : 1
report a runtime -> the : 1
runtime the standard -> we : 1
the standard we -> can : 1
standard we can -> find : 1
can find some -> class : 1
find some class -> templates : 1
some class templates -> that : 1
class templates that -> help : 1
templates that help -> us : 1
that help us -> writing : 1
help us writing -> concurrent : 1
us writing concurrent -> code : 1
writing concurrent code -> without : 1
concurrent code without -> global : 1
code without global -> variables : 1
without global variables -> and : 1
global variables and -> in : 1
variables and in -> can : 1
and in can -> communicate : 1
in can communicate -> exceptions : 1
can communicate exceptions -> between : 1
communicate exceptions between -> threads : 1
exceptions between threads -> for : 1
between threads for -> handling : 1
threads for handling -> we : 1
will here present -> and : 1
here present and -> which : 1
present and which -> represent : 1
and which represent -> two : 1
which represent two -> sides : 1
represent two sides -> of : 1
two sides of -> a : 1
sides of a -> the : 1
the future receiving -> side : 1
future receiving side -> of : 1
receiving side of -> the : 1
side of the -> value : 1
side of the -> following : 1
of the value -> and : 1
and the promise -> returning : 1
the promise returning -> side : 1
promise returning side -> of : 1
returning side of -> the : 1
example of using -> to : 1
of using to -> return : 1
using to return -> the : 1
return the result -> to : 1
the result to -> the : 1
result to the -> int : 1
int if auto -> e : 1
if auto e -> by : 1
auto e by -> zero : 1
e by zero -> else : 1
by zero else -> const : 1
zero else const -> auto : 1
else const auto -> result : 1
const auto result -> a : 1
auto result a -> auto : 1
result a auto -> int : 1
int auto p -> auto : 1
int auto p -> point : 1
auto p auto -> f : 1
auto p auto -> auto : 1
p auto f -> try : 1
auto f try -> const : 1
f try const -> result : 1
try const result -> blocks : 2
try const result -> result : 1
const result blocks -> until : 2
result blocks until -> result : 2
blocks until result -> catch : 2
until result catch -> caller : 1
until result catch -> return : 1
result catch caller -> creates : 1
catch caller creates -> the : 1
caller creates the -> object : 1
creates the object -> and : 1
object and passes -> it : 1
and passes it -> to : 1
passes it to -> the : 1
to use from -> so : 1
use from so -> that : 1
from so that -> a : 1
that a reference -> can : 1
a reference can -> be : 1
can be correctly -> forwarded : 1
be correctly forwarded -> through : 1
correctly forwarded through -> the : 1
forwarded through the -> to : 1
through the to -> the : 1
function has computed -> the : 1
has computed the -> it : 1
computed the it -> passes : 1
the it passes -> the : 1
it passes the -> return : 1
passes the return -> value : 1
return value through -> the : 1
value through the -> promise : 1
through the promise -> by : 1
the promise by -> calling : 1
promise by calling -> if : 1
by calling if -> an : 1
calling if an -> error : 1
if an error -> occurred : 1
an error occurred -> in : 1
error occurred in -> the : 1
occurred in the -> it : 1
would have called -> the : 1
have called the -> function : 1
called the function -> on : 1
function on the -> promise : 1
on the promise -> future : 1
the promise future -> represents : 1
promise future represents -> the : 1
future represents the -> value : 1
represents the value -> of : 1
of the computation -> that : 1
the computation that -> may : 1
computation that may -> or : 1
not be computed -> since : 1
be computed since -> the : 1
computed since the -> future : 1
since the future -> is : 1
the future is -> an : 1
future is an -> ordinary : 1
is an ordinary -> we : 1
an ordinary we -> for : 1
ordinary we for -> pass : 1
we for pass -> it : 1
for pass it -> around : 1
pass it around -> to : 1
it around to -> other : 1
around to other -> objects : 1
to other objects -> that : 1
other objects that -> need : 1
that need the -> computed : 1
that need the -> task : 1
need the computed -> when : 1
the computed when -> the : 1
computed when the -> value : 1
when the value -> is : 1
value is needed -> by : 1
is needed by -> some : 1
needed by some -> it : 1
by some it -> calls : 1
some it calls -> to : 1
it calls to -> get : 1
calls to get -> hold : 1
to get hold -> of : 1
get hold of -> the : 1
hold of the -> actual : 1
the actual if -> it : 1
actual if it -> is : 1
is not computed -> at : 1
not computed at -> that : 1
computed at that -> point : 1
at that point -> in : 1
that point in -> the : 1
point in the -> call : 1
in the call -> to : 1
call to will -> block : 1
to will block -> until : 1
will block until -> it : 1
block until it -> is : 1
is also how -> we : 1
also how we -> managed : 1
how we managed -> to : 1
managed to pass -> data : 1
to pass data -> back : 1
pass data back -> and : 1
and forth with -> proper : 1
forth with proper -> error : 1
with proper error -> handling : 1
error handling without -> using : 1
handling without using -> any : 1
using any shared -> global : 1
any shared global -> data : 1
shared global data -> and : 1
global data and -> no : 1
data and no -> explicit : 1
and no explicit -> the : 1
no explicit the -> promise : 1
explicit the promise -> takes : 1
the promise takes -> care : 1
promise takes care -> of : 1
takes care of -> that : 1
care of that -> for : 1
of that for -> and : 1
that for and -> we : 1
for and we -> can : 1
we can focus -> on : 1
can focus on -> implementing : 1
focus on implementing -> the : 1
on implementing the -> essential : 1
implementing the essential -> logic : 1
the essential logic -> of : 1
essential logic of -> the : 1
the program futures -> and : 1
program futures and -> we : 1
futures and we -> managed : 1
and we managed -> to : 1
managed to get -> away : 1
to get away -> from : 1
get away from -> explicit : 1
away from explicit -> locks : 1
from explicit locks -> and : 1
explicit locks and -> shared : 1
locks and shared -> global : 1
and shared global -> our : 1
shared global our -> code : 1
global our code -> will : 1
code will benefit -> from : 1
will benefit from -> using : 1
benefit from using -> higher : 1
from using higher -> level : 1
using higher level -> abstractions : 1
higher level abstractions -> when : 1
level abstractions when -> especially : 1
abstractions when especially -> when : 1
when especially when -> the : 1
when the code -> base : 1
base we will -> go : 1
we will go -> further : 1
will go further -> and : 1
go further and -> explore : 1
further and explore -> classes : 1
and explore classes -> that : 1
explore classes that -> make : 1
classes that make -> us : 1
that make us -> have : 1
make us have -> the : 1
us have the -> futures : 1
have the futures -> and : 1
the futures and -> promises : 1
futures and promises -> automatically : 1
and promises automatically -> set : 1
promises automatically set -> up : 1
automatically set up -> for : 1
set up for -> we : 1
up for we -> will : 1
for we will -> also : 1
will also see -> how : 1
also see how -> we : 1
can get rid -> of : 1
of the manual -> administration : 1
of the manual -> thread : 1
the manual administration -> of : 1
manual administration of -> threads : 1
administration of threads -> and : 1
of threads and -> leave : 1
threads and leave -> that : 1
and leave that -> to : 1
leave that to -> the : 1
that to the -> many : 1
the many we -> have : 1
many we have -> any : 1
we have any -> need : 1
have any need -> for : 1
any need for -> managing : 1
need for managing -> what : 1
for managing what -> we : 1
managing what we -> really : 1
really need is -> to : 1
need is to -> be : 1
is to be -> able : 1
to execute a -> asynchronously : 1
execute a asynchronously -> and : 1
a asynchronously and -> have : 1
asynchronously and have -> that : 1
and have that -> task : 1
have that task -> execute : 1
that task execute -> on : 1
task execute on -> its : 1
execute on its -> own : 1
on its own -> concurrently : 1
its own concurrently -> with : 1
own concurrently with -> the : 1
concurrently with the -> rest : 1
with the rest -> of : 1
the and then -> eventually : 1
and then eventually -> get : 1
then eventually get -> the : 1
eventually get the -> result : 1
get the result -> or : 1
the result or -> error : 1
result or error -> communicated : 1
or error communicated -> to : 1
error communicated to -> the : 1
communicated to the -> parts : 1
to the parts -> of : 1
the program that -> need : 1
program that need -> the : 1
need the task -> should : 1
the task should -> be : 1
task should be -> done : 1
should be done -> in : 1
done in isolation -> to : 1
in isolation to -> minimize : 1
isolation to minimize -> contention : 1
to minimize contention -> and : 1
minimize contention and -> the : 1
contention and the -> risk : 1
and the risk -> of : 1
of data begin -> by : 1
data begin by -> rewriting : 1
begin by rewriting -> our : 1
by rewriting our -> previous : 1
rewriting our previous -> example : 1
our previous example -> that : 1
previous example that -> divided : 1
example that divided -> two : 1
that divided two -> this : 1
divided two this -> we : 1
two this we -> will : 1
use the from -> which : 1
the from which -> makes : 1
from which makes -> all : 1
which makes all -> the : 1
makes all the -> work : 1
all the work -> of : 1
the work of -> setting : 1
work of setting -> up : 1
of setting up -> the : 1
setting up the -> promise : 1
up the promise -> correct : 1
the promise correct -> for : 1
promise correct for -> int : 1
correct for int -> int : 1
for int int -> no : 1
int int no -> need : 1
int no need -> to : 1
to pass a -> promise : 1
pass a promise -> ref : 1
a promise ref -> if : 1
promise ref if -> throw : 1
ref if throw -> by : 1
if throw by -> zero : 2
throw by zero -> return : 2
by zero return -> a : 2
zero return a -> auto : 2
return a auto -> int : 2
int auto task -> auto : 1
auto task auto -> f : 1
task auto f -> the : 1
auto f the -> code : 1
f the code -> below : 1
the code below -> is : 1
code below is -> unchanged : 1
below is unchanged -> from : 1
is unchanged from -> the : 1
unchanged from the -> previous : 1
previous example try -> const : 1
example try const -> result : 1
result catch return -> is : 1
catch return is -> itself : 1
return is itself -> a : 1
is itself a -> callable : 1
itself a callable -> object : 1
callable object that -> can : 1
object that can -> be : 1
can be moved -> to : 1
can be moved -> above : 1
moved to the -> object : 1
object we are -> as : 1
we are as -> you : 1
are as you -> can : 1
you can now -> does : 1
can now does -> most : 1
now does most -> of : 1
does most of -> the : 1
the work for -> we : 1
work for we -> have : 1
for we have -> to : 1
create the promise -> more : 1
the promise more -> we : 1
promise more we -> can : 1
more we can -> write : 1
can write our -> just : 1
can write our -> programs : 1
write our just -> like : 1
our just like -> a : 1
like a normal -> without : 1
a normal without -> the : 1
normal without the -> need : 1
need for explicitly -> returning : 1
for explicitly returning -> values : 1
explicitly returning values -> or : 1
returning values or -> exceptions : 1
values or exceptions -> through : 1
or exceptions through -> the : 1
exceptions through the -> the : 1
through the the -> will : 1
the the will -> do : 1
the will do -> that : 1
will do that -> for : 1
do that for -> a : 1
that for a -> last : 1
for a last -> step : 1
a last step -> in : 1
last step in -> this : 1
step in this -> we : 1
we would also -> like : 1
would also like -> to : 1
also like to -> get : 1
like to get -> rid : 1
the manual thread -> creating : 1
manual thread creating -> threads : 1
thread creating threads -> is : 1
creating threads is -> not : 1
threads is not -> and : 1
is not and -> we : 1
is not and -> needs : 1
not and we -> will : 1
will see later -> on : 1
see later on -> that : 1
later on that -> the : 1
that the number -> of : 1
number of threads -> in : 2
number of threads -> is : 1
of threads in -> a : 2
a program can -> affect : 1
program can affect -> it : 1
can affect it -> seems : 1
affect it seems -> like : 1
it seems like -> the : 1
seems like the -> question : 1
like the question -> of : 1
the question of -> whether : 1
question of whether -> we : 1
whether we should -> create : 1
we should create -> a : 1
should create a -> new : 1
new thread for -> our : 1
thread for our -> divide : 1
for our divide -> function : 1
our divide function -> is : 1
divide function is -> not : 1
not necessarily up -> to : 1
necessarily up to -> the : 1
the library again -> helps : 1
library again helps -> us : 1
again helps us -> here : 1
helps us here -> by : 1
us here by -> providing : 1
here by providing -> another : 1
by providing another -> useful : 1
providing another useful -> function : 1
another useful function -> template : 1
useful function template -> called : 1
function template called -> the : 1
template called the -> only : 1
called the only -> thing : 1
only thing we -> need : 1
to do in -> our : 1
do in our -> example : 1
in our example -> is : 1
our example is -> replace : 1
example is replace -> the : 1
is replace the -> code : 1
replace the code -> creating : 1
the code creating -> the : 1
code creating the -> and : 1
creating the and -> the : 1
the object with -> a : 1
object with a -> simple : 1
a simple call -> to : 1
simple call to -> auto : 1
call to auto -> f : 1
to auto f -> have : 1
auto f have -> now : 1
f have now -> switched : 1
have now switched -> from : 1
now switched from -> a : 1
switched from a -> programming : 1
from a programming -> model : 1
a programming model -> to : 1
programming model to -> a : 1
model to a -> the : 1
a the complete -> example : 1
the complete example -> now : 1
complete example now -> looks : 1
example now looks -> like : 1
looks like int -> int : 1
like int int -> if : 1
int int if -> throw : 1
int if throw -> by : 1
int auto future -> try : 1
auto future try -> const : 1
future try const -> result : 1
const result result -> catch : 1
result result catch -> is : 1
result catch is -> really : 1
catch is really -> a : 1
is really a -> minimal : 1
really a minimal -> amount : 1
a minimal amount -> of : 1
minimal amount of -> code : 1
amount of code -> left : 1
of code left -> here : 1
code left here -> for : 1
left here for -> handling : 1
here for handling -> the : 1
handling the recommended -> way : 1
recommended way to -> call : 1
way to call -> functions : 1
to call functions -> asynchronously : 1
call functions asynchronously -> is : 1
functions asynchronously is -> to : 1
asynchronously is to -> use : 1
to use for -> a : 1
use for a -> deeper : 1
for a deeper -> discussion : 1
a deeper discussion -> about : 1
deeper discussion about -> why : 1
discussion about why -> and : 1
about why and -> when : 1
why and when -> to : 1
when to be -> i : 1
to be i -> highly : 1
be i highly -> recommend : 1
i highly recommend -> chapter : 1
highly recommend chapter -> in : 1
recommend chapter in -> modern : 1
chapter in modern -> by : 1
in modern by -> scott : 1
modern by scott -> support : 1
by scott support -> in : 1
scott support in -> standard : 1
support in standard -> library : 1
in standard library -> contains : 1
standard library contains -> support : 1
library contains support -> for : 1
contains support for -> called : 1
support for called -> an : 1
for called an -> atomic : 1
called an atomic -> variable : 1
an atomic variable -> is : 1
an atomic variable -> may : 1
an atomic variable -> or : 1
atomic variable is -> a : 1
atomic variable is -> always : 1
is a variable -> that : 1
a variable that -> can : 1
that can safely -> be : 1
can safely be -> used : 1
safely be used -> and : 1
be used and -> mutated : 1
used and mutated -> from : 1
and mutated from -> multiple : 1
mutated from multiple -> threads : 1
introducing data an -> atomic : 1
data an atomic -> variable : 1
atomic variable may -> or : 1
variable may or -> may : 1
may not use -> a : 2
not use a -> lock : 1
not use a -> it : 1
not use a -> mutex : 1
use a lock -> to : 1
a lock to -> protect : 1
lock to protect -> the : 1
protect the this -> depends : 1
the this depends -> on : 1
this depends on -> the : 1
on the type -> of : 1
the variable and -> the : 1
and the if -> the : 1
if the atomic -> does : 1
the atomic does -> not : 1
atomic does not -> use : 1
does not use -> a : 1
does not use -> locks : 1
use a it -> is : 1
it is said -> to : 1
to be you -> can : 1
be you can -> query : 1
you can query -> the : 1
can query the -> variable : 1
query the variable -> in : 1
the variable in -> runtime : 1
variable in runtime -> compile : 1
in runtime compile -> time : 1
runtime compile time -> since : 1
compile time since -> to : 1
time since to -> be : 1
since to be -> certain : 1
to be certain -> that : 1
be certain that -> it : 1
certain that it -> is : 1
it is for -> some : 1
is for some -> you : 1
for some you -> need : 1
ensure that it -> does : 1
not use locks -> you : 1
use locks you -> remember : 1
locks you remember -> the : 1
you remember the -> data : 1
remember the data -> race : 1
race example we -> looked : 1
looked at earlier -> where : 1
at earlier where -> two : 1
earlier where two -> threads : 1
where two threads -> updated : 1
two threads updated -> a : 1
threads updated a -> global : 1
updated a global -> we : 1
a global we -> solved : 1
global we solved -> it : 1
we solved it -> by : 1
solved it by -> adding : 1
it by adding -> a : 1
by adding a -> mutex : 1
adding a mutex -> lock : 1
a mutex lock -> together : 1
a mutex lock -> whenever : 1
mutex lock together -> with : 1
lock together with -> the : 1
together with the -> instead : 1
with the instead -> of : 1
of using an -> explicit : 1
using an explicit -> we : 1
explicit we could -> have : 1
we could have -> used : 1
we could have -> two : 1
could have used -> a : 1
have used a -> auto : 1
used a auto -> for : 1
a auto for -> i : 1
i i counter -> is : 1
i counter is -> now : 1
counter is now -> an : 1
is now an -> is : 1
now an is -> a : 1
an is a -> convenient : 1
is a convenient -> way : 1
a convenient way -> of : 1
convenient way of -> saying : 1
way of saying -> all : 1
of saying all -> member : 1
saying all member -> functions : 1
all member functions -> that : 1
member functions that -> can : 1
be invoked on -> an : 1
invoked on an -> atomic : 1
on an atomic -> are : 1
an atomic are -> safe : 1
atomic are safe -> to : 1
are safe to -> call : 1
safe to call -> from : 1
to call from -> multiple : 1
call from multiple -> threads : 1
multiple threads atomic -> types : 1
threads atomic types -> are : 1
atomic types are -> from : 1
types are from -> the : 1
are from the -> there : 1
from the there -> are : 1
there are typedefs -> for : 1
are typedefs for -> all : 1
typedefs for all -> the : 1
the scalar data -> types : 1
scalar data types -> named : 1
data types named -> on : 1
types named on -> the : 1
named on the -> this : 1
this is identical -> to : 1
is identical to -> saying : 1
identical to saying -> it : 1
to saying it -> is : 1
saying it is -> possible : 1
possible to wrap -> a : 1
to wrap a -> custom : 1
wrap a custom -> type : 1
a custom type -> in : 1
custom type in -> a : 1
a as long -> as : 1
as the custom -> type : 1
the custom type -> is : 1
custom type is -> trivially : 1
type is trivially -> this : 1
is trivially this -> means : 1
trivially this means -> that : 1
class is fully -> described : 1
is fully described -> by : 1
fully described by -> the : 1
described by the -> bits : 1
by the bits -> of : 1
the bits of -> its : 1
bits of its -> data : 1
of its data -> in : 1
its data in -> that : 1
data in that -> an : 1
in that an -> object : 1
be copied for -> by : 1
copied for by -> only : 1
for by only -> copying : 1
by only copying -> the : 1
only copying the -> raw : 1
copying the raw -> if : 1
the raw if -> a : 1
raw if a -> class : 1
class contains virtual -> pointers : 1
contains virtual pointers -> to : 1
virtual pointers to -> dynamic : 1
pointers to dynamic -> and : 1
to dynamic and -> so : 1
dynamic and so -> no : 1
and so no -> longer : 1
so no longer -> possible : 1
no longer possible -> to : 1
longer possible to -> just : 1
possible to just -> copy : 1
to just copy -> the : 1
just copy the -> raw : 1
copy the raw -> bits : 1
the raw bits -> of : 1
raw bits of -> the : 1
bits of the -> object : 1
object and expect -> it : 1
and expect it -> to : 1
it to and -> hence : 1
to and hence -> it : 1
and hence it -> is : 1
hence it is -> not : 1
is not trivially -> this : 1
is not trivially -> point : 1
not trivially this -> can : 1
trivially this can -> be : 1
can be checked -> at : 1
be checked at -> compile : 1
checked at compile -> so : 1
compile so you -> will : 1
so you will -> get : 1
you will get -> a : 1
a compilation error -> if : 1
compilation error if -> you : 1
error if you -> try : 1
if you try -> to : 1
try to create -> an : 1
create an atomic -> of : 1
an atomic of -> a : 1
atomic of a -> type : 1
not trivially point -> int : 1
trivially point int -> int : 1
auto p point -> is : 1
p point is -> trivially : 1
point is trivially -> auto : 1
is trivially auto -> s : 1
trivially auto s -> cannot : 1
auto s cannot -> be : 1
s cannot be -> trivially : 1
cannot be trivially -> copied : 1
be trivially copied -> also : 1
trivially copied also -> possible : 1
copied also possible -> to : 1
to create atomic -> this : 1
create atomic this -> makes : 1
atomic this makes -> the : 1
makes the pointer -> itself : 1
the pointer itself -> but : 1
pointer itself but -> not : 1
itself but not -> the : 1
but not the -> object : 1
but not the -> strong : 1
it points in -> a : 1
points in a -> multithreaded : 1
a multithreaded about -> the : 1
multithreaded about the -> can : 1
about the can -> it : 1
the can it -> be : 1
can it be -> used : 1
it be used -> in : 1
a multithreaded and -> how : 1
multithreaded and how -> is : 1
and how is -> the : 1
is the reference -> counting : 1
the reference counting -> handled : 1
the reference counting -> mechanism : 1
reference counting handled -> when : 1
counting handled when -> multiple : 1
handled when multiple -> threads : 1
when multiple threads -> are : 1
multiple threads are -> accessing : 1
multiple threads are -> using : 1
are accessing an -> object : 1
accessing an object -> referenced : 1
an object referenced -> by : 1
object referenced by -> multiple : 1
referenced by multiple -> shared : 1
by multiple shared -> understand : 1
multiple shared understand -> shared : 1
shared understand shared -> pointers : 1
understand shared pointers -> and : 1
shared pointers and -> thread : 1
pointers and thread -> we : 1
and thread we -> need : 1
thread we need -> to : 1
need to recall -> how : 1
to recall how -> is : 1
recall how is -> typically : 1
how is typically -> implemented : 1
is typically implemented -> consider : 1
typically implemented consider -> the : 1
implemented consider the -> following : 1
the following thread -> code : 1
following thread code -> creates : 1
thread code creates -> an : 1
code creates an -> on : 1
creates an on -> the : 1
an on the -> heap : 1
the heap and -> a : 1
the heap and -> is : 1
heap and a -> smart : 1
and a smart -> pointer : 1
smart pointer pointing -> at : 1
pointer pointing at -> the : 2
pointing at the -> when : 1
pointing at the -> the : 1
at the when -> creating : 1
the when creating -> the : 1
when creating the -> shared : 1
when creating the -> we : 1
creating the shared -> pointer : 1
shared pointer with -> a : 1
pointer with a -> control : 1
with a control -> block : 1
a control block -> will : 1
a control block -> which : 1
control block will -> be : 1
block will be -> created : 1
will be created -> next : 1
be created next -> to : 1
created next to -> the : 1
the the control -> block : 2
the the control -> when : 1
the control block -> among : 1
the control block -> following : 1
the control block -> when : 1
the control block -> lives : 1
the control block -> is : 3
control block among -> other : 1
block among other -> a : 1
among other a -> variable : 1
other a variable -> for : 1
for the reference -> which : 1
the reference which -> is : 1
reference which is -> incremented : 1
which is incremented -> whenever : 1
is incremented whenever -> a : 1
incremented whenever a -> new : 1
whenever a new -> pointer : 1
a new pointer -> to : 1
a new pointer -> pointing : 1
new pointer to -> the : 1
the is created -> and : 1
is created and -> decremented : 1
created and decremented -> whenever : 1
and decremented whenever -> a : 1
decremented whenever a -> pointer : 1
whenever a pointer -> to : 1
the is to -> when : 1
is to when -> the : 1
when the preceding -> code : 1
preceding code line -> is : 1
code line is -> three : 1
line is three -> separate : 1
is three separate -> entities : 1
three separate entities -> are : 1
separate entities are -> being : 1
entities are being -> actual : 1
are being actual -> object : 1
being actual object -> variable : 1
actual object variable -> on : 1
object variable on -> the : 1
on the control -> block : 1
control block following -> figure : 1
block following figure -> shows : 1
shows the three -> cdpaligncenter : 1
the three cdpaligncenter -> cdpaligncenter : 1
three cdpaligncenter cdpaligncenter -> instance : 1
cdpaligncenter cdpaligncenter instance -> which : 1
cdpaligncenter instance which -> points : 1
instance which points -> to : 1
which points to -> the : 1
to the integer -> object : 1
the integer object -> and : 1
integer object and -> a : 1
object and a -> control : 1
and a control -> block : 1
control block which -> contains : 1
block which contains -> the : 1
which contains the -> reference : 1
contains the reference -> in : 1
the reference in -> this : 1
reference in this -> there : 1
in this there -> is : 1
this there is -> only : 1
only one shared -> pointer : 1
one shared pointer -> using : 1
shared pointer using -> the : 1
pointer using the -> and : 1
and hence the -> ref : 1
hence the ref -> count : 1
the ref count -> is : 1
ref count is -> consider : 1
count is consider -> what : 1
is consider what -> would : 1
consider what would -> happen : 1
what would happen -> if : 2
would happen if -> the : 2
happen if the -> following : 1
happen if the -> two : 1
if the following -> code : 1
by a second -> thread : 1
a second thread -> are : 1
second thread are -> creating : 1
thread are creating -> a : 1
are creating a -> new : 1
creating a new -> pointer : 1
new pointer pointing -> at : 1
at the the -> control : 1
the control when -> creating : 1
control when creating -> the : 1
the we read -> but : 1
we read but -> we : 1
read but we -> also : 1
but we also -> need : 1
we also need -> to : 1
also need to -> mutate : 1
need to mutate -> the : 1
mutate the control -> block : 1
control block when -> updating : 1
block when updating -> the : 1
when updating the -> ref : 1
updating the ref -> the : 1
the ref the -> control : 1
ref the control -> block : 1
control block lives -> on : 1
block lives on -> the : 1
lives on the -> heap : 1
heap and is -> shared : 1
and is shared -> among : 1
shared among the -> two : 1
among the two -> so : 1
the two so -> it : 1
two so it -> needs : 1
so it needs -> synchronization : 1
it needs synchronization -> to : 1
needs synchronization to -> avoid : 1
synchronization to avoid -> data : 1
to avoid data -> since : 1
to avoid data -> races : 1
avoid data since -> the : 1
data since the -> control : 1
since the control -> block : 1
control block is -> an : 2
control block is -> by : 1
control block is -> already : 1
block is an -> implementation : 1
block is an -> internally : 1
an implementation detail -> hidden : 1
implementation detail hidden -> behind : 1
detail hidden behind -> the : 1
hidden behind the -> there : 1
behind the there -> is : 1
no way for -> us : 1
way for us -> to : 1
us to know -> how : 1
how to protect -> and : 1
to protect and -> it : 1
protect and it -> turns : 1
and it turns -> out : 1
out that it -> has : 1
it has already -> been : 1
has already been -> taken : 1
already been taken -> care : 1
been taken care -> of : 1
taken care of -> by : 1
care of by -> the : 1
of by the -> it : 1
it would use -> a : 1
would use a -> mutable : 1
would use a -> predicate : 1
use a mutable -> atomic : 1
a mutable atomic -> in : 1
mutable atomic in -> other : 1
atomic in other -> the : 1
other the ref -> counter : 1
the ref counter -> update : 1
ref counter update -> is : 1
counter update is -> so : 1
update is so -> that : 1
is so that -> we : 1
can use multiple -> shared : 1
use multiple shared -> pointers : 1
multiple shared pointers -> from : 1
shared pointers from -> different : 1
pointers from different -> threads : 1
from different threads -> without : 1
different threads without -> worrying : 1
threads without worrying -> about : 1
worrying about synchronizing -> the : 1
about synchronizing the -> ref : 1
synchronizing the ref -> this : 1
the ref this -> is : 1
ref this is -> good : 1
this is good -> practice : 1
is good practice -> and : 1
good practice and -> something : 1
practice and something -> to : 1
and something to -> think : 1
something to think -> of : 1
to think of -> when : 1
think of when -> designing : 1
of when designing -> if : 1
when designing if -> you : 1
designing if you -> are : 1
you are mutating -> variables : 1
are mutating variables -> in : 1
mutating variables in -> methods : 1
variables in methods -> that : 1
in methods that -> appear : 1
methods that appear -> to : 1
that appear to -> be : 1
to be semantically -> from : 1
be semantically from -> the : 1
semantically from the -> you : 1
from the you -> should : 1
the you should -> make : 1
you should make -> the : 1
should make the -> mutating : 1
make the mutating -> variable : 1
the mutating variable -> on : 1
mutating variable on -> the : 1
the other everything -> that : 1
other everything that -> can : 1
everything that can -> be : 1
can be detected -> by : 1
be detected by -> the : 1
detected by the -> client : 1
by the client -> as : 1
the client as -> mutating : 1
client as mutating -> functions : 1
as mutating functions -> should : 1
mutating functions should -> be : 1
functions should be -> left : 1
should be left -> to : 1
be left to -> the : 1
to the client -> of : 1
the client of -> the : 1
client of the -> class : 1
class to following -> figure : 1
to following figure -> shows : 1
figure shows two -> and : 1
shows two and -> that : 1
two and that -> have : 1
and that have -> access : 1
that have access -> to : 1
have access to -> the : 1
same the is -> the : 1
is the shared -> object : 1
the shared object -> and : 1
shared object and -> the : 1
and the control -> block : 1
is an internally -> shared : 1
an internally shared -> object : 1
internally shared object -> between : 1
shared object between -> the : 1
object between the -> the : 1
between the the -> control : 1
block is by -> cdpaligncenter : 1
is by cdpaligncenter -> cdpaligncenter : 1
by cdpaligncenter cdpaligncenter -> accessing : 1
cdpaligncenter cdpaligncenter accessing -> the : 1
cdpaligncenter accessing the -> same : 1
same shared the -> in : 1
shared the in -> this : 1
not and needs -> explicit : 1
and needs explicit -> locking : 1
needs explicit locking -> if : 1
explicit locking if -> accessed : 1
locking if accessed -> from : 1
if accessed from -> multiple : 1
accessed from multiple -> threads : 1
multiple threads control -> block : 1
threads control block -> is : 1
block is already -> so : 1
is already so -> the : 1
already so the -> reference : 1
so the reference -> counting : 1
reference counting mechanism -> works : 1
counting mechanism works -> in : 1
mechanism works in -> environments : 1
works in environments -> there : 1
in environments there -> is : 1
environments there is -> only : 1
only one part -> what : 1
one part what -> about : 1
part what about -> the : 1
what about the -> actual : 1
what about the -> buffer : 1
actual and in -> the : 1
the previous to -> understand : 1
previous to understand -> turn : 1
to understand turn -> to : 1
understand turn to -> an : 1
turn to an -> example : 1
to an example -> using : 1
example using global -> object : 1
using global object -> called : 1
global object called -> auto : 1
object called auto -> p : 1
called auto p -> can : 1
auto p can -> we : 1
p can we -> mutate : 1
can we mutate -> from : 1
we mutate from -> multiple : 1
mutate from multiple -> threads : 1
without introducing a -> data : 1
introducing a data -> we : 1
a data we -> could : 1
we could protect -> with : 1
could protect with -> a : 1
protect with a -> mutex : 1
mutex lock whenever -> we : 1
lock whenever we -> use : 1
whenever we use -> we : 1
we use we -> could : 1
use we could -> use : 1
could use functions -> from : 1
use functions from -> the : 1
functions from the -> atomic : 1
from the atomic -> there : 1
the atomic there -> is : 1
atomic there is -> no : 1
way to say -> at : 1
to say at -> the : 1
say at the -> time : 1
time of but -> we : 1
but we can -> instead : 1
we can instead -> use : 1
instead use overloads -> of : 1
use overloads of -> the : 1
overloads of the -> atomic : 1
of the atomic -> functions : 1
the atomic functions -> for : 1
atomic functions for -> mutating : 1
functions for mutating -> a : 1
for mutating a -> the : 1
mutating a the -> following : 1
example demonstrates how -> to : 2
demonstrates how to -> load : 1
demonstrates how to -> set : 1
demonstrates how to -> create : 1
how to load -> and : 1
to load and -> store : 1
load and store -> a : 1
and store a -> shared : 1
store a shared -> pointer : 1
shared pointer object -> atomically : 1
pointer object atomically -> from : 1
object atomically from -> multiple : 1
atomically from multiple -> thread : 1
from multiple thread -> calls : 1
multiple thread calls -> this : 1
thread calls this -> auto : 2
calls this auto -> auto : 2
auto auto thread -> calls : 1
auto thread calls -> this : 1
auto auto use -> the : 1
auto use the -> example : 1
use the example -> above : 1
the example above -> we : 1
example above we -> assume : 1
above we assume -> that : 1
assume that there -> are : 1
are two and -> which : 1
two and which -> call : 1
and which call -> functions : 1
which call functions -> and : 1
call functions and -> new : 1
functions and new -> objects : 1
and new objects -> are : 1
new objects are -> created : 1
are created from -> the : 1
created from the -> thread : 1
the thread the -> call : 1
thread the call -> to : 1
call to is -> one : 1
to is one -> subtle : 1
is one subtle -> detail : 1
one subtle detail -> to : 1
subtle detail to -> consider : 1
detail to consider -> in : 1
to consider in -> this : 1
consider in this -> in : 1
this in which -> thread : 1
in which thread -> is : 1
which thread is -> the : 1
thread is the -> when : 1
is the when -> goes : 1
the when goes -> out : 1
when goes out -> of : 1
out of scope -> in : 1
of scope in -> it : 1
scope in it -> might : 1
in it might -> be : 1
might be the -> last : 1
be the last -> reference : 1
the last reference -> to : 1
last reference to -> the : 1
to the reference -> count : 1
the reference count -> reaches : 1
reference count reaches -> in : 1
count reaches in -> that : 1
reaches in that -> the : 1
that the deletion -> of : 2
the deletion of -> the : 2
deletion of the -> will : 1
deletion of the -> can : 1
of the will -> happen : 1
the will happen -> from : 1
will happen from -> thread : 2
happen from thread -> the : 1
happen from thread -> when : 1
from thread the -> deletion : 1
thread the deletion -> will : 1
the deletion will -> happen : 1
deletion will happen -> from : 1
from thread when -> is : 1
thread when is -> the : 1
is the answer -> is : 1
answer is that -> the : 1
the can happen -> from : 1
can happen from -> both : 1
happen from both -> memory : 1
from both memory -> are : 1
both memory are -> we : 1
memory are we -> talking : 1
are we talking -> about : 1
we talking about -> the : 1
talking about the -> memory : 1
memory model of -> in : 1
model of in -> a : 1
of in a -> chapter : 1
in a chapter -> about : 1
a chapter about -> memory : 1
chapter about memory -> model : 1
about memory model -> is : 1
memory model is -> closely : 1
memory model is -> and : 1
model is closely -> related : 1
is closely related -> to : 1
closely related to -> concurrency : 1
related to concurrency -> since : 1
to concurrency since -> it : 1
concurrency since it -> defines : 1
since it defines -> how : 1
it defines how -> the : 1
defines how the -> reads : 1
how the reads -> and : 1
the reads and -> writes : 1
reads and writes -> to : 1
reads and writes -> in : 1
and writes to -> the : 1
writes to the -> memory : 1
the memory should -> be : 1
should be visible -> among : 1
be visible among -> this : 1
visible among this -> is : 1
among this is -> a : 1
is a rather -> complicated : 1
a rather complicated -> subject : 1
rather complicated subject -> which : 1
complicated subject which -> touches : 1
subject which touches -> on : 1
which touches on -> both : 1
touches on both -> compiler : 1
on both compiler -> optimizations : 1
both compiler optimizations -> and : 1
compiler optimizations and -> multicore : 1
optimizations and multicore -> computer : 1
and multicore computer -> the : 1
multicore computer the -> good : 1
computer the good -> is : 1
the good is -> that : 1
good is that -> if : 1
is that if -> your : 1
that if your -> program : 1
your program is -> free : 2
program is free -> from : 2
is free from -> data : 2
races and you -> use : 2
and you use -> the : 2
you use the -> memory : 1
you use the -> default : 1
the memory order -> that : 1
memory order that -> the : 1
order that the -> atomics : 1
that the atomics -> library : 1
the atomics library -> provides : 1
atomics library provides -> by : 1
library provides by -> your : 1
provides by your -> concurrent : 1
by your concurrent -> program : 1
your concurrent program -> will : 1
concurrent program will -> behave : 1
program will behave -> according : 1
will behave according -> to : 1
behave according to -> an : 1
according to an -> intuitive : 1
to an intuitive -> memory : 1
an intuitive memory -> model : 1
intuitive memory model -> that : 1
memory model that -> is : 1
model that is -> easy : 1
easy to it -> is : 1
important to at -> least : 1
to at least -> have : 1
at least have -> an : 1
least have an -> understanding : 1
of what the -> memory : 1
what the memory -> model : 1
model is and -> what : 1
is and what -> the : 1
what the default -> memory : 1
the default memory -> order : 2
default memory order -> concepts : 1
default memory order -> when : 1
memory order concepts -> covered : 1
order concepts covered -> in : 1
concepts covered in -> this : 1
this section are -> thoroughly : 1
section are thoroughly -> explained : 1
are thoroughly explained -> by : 1
thoroughly explained by -> herb : 1
explained by herb -> sutter : 1
by herb sutter -> in : 1
herb sutter in -> his : 1
sutter in his -> the : 1
in his the -> memory : 1
his the memory -> model : 1
memory model and -> modern : 1
model and modern -> hardware : 1
and modern hardware -> the : 1
modern hardware the -> talks : 1
hardware the talks -> are : 1
the talks are -> freely : 1
talks are freely -> available : 1
are freely available -> at : 1
freely available at -> and : 1
available at and -> are : 1
at and are -> highly : 1
and are highly -> recommended : 1
are highly recommended -> if : 1
highly recommended if -> you : 1
recommended if you -> need : 1
you need more -> depth : 1
need more depth -> on : 1
more depth on -> this : 1
depth on this -> understand : 1
on this understand -> the : 1
this understand the -> importance : 1
understand the importance -> of : 1
memory we first -> need : 1
first need some -> background : 1
need some background -> about : 1
some background about -> how : 1
background about how -> programs : 1
about how programs -> we : 1
how programs we -> write : 1
programs we write -> are : 1
we write are -> actually : 1
write are actually -> being : 1
actually being we -> write : 1
being we write -> and : 1
we write and -> run : 1
write and run -> a : 1
and run a -> it : 1
run a it -> would : 1
would be reasonable -> to : 1
be reasonable to -> assume : 1
reasonable to assume -> that : 1
to assume that -> the : 1
in the source -> code : 1
in the source -> this : 2
source code are -> being : 1
code are being -> executed : 1
executed in the -> same : 1
executed in the -> order : 1
order as they -> appear : 1
as they appear -> in : 1
they appear in -> the : 1
the source this -> is : 1
the source this -> also : 1
source this is -> not : 1
not true code -> we : 1
true code we -> write : 1
code we write -> will : 1
we write will -> be : 1
write will be -> optimized : 1
will be optimized -> in : 1
be optimized in -> multiple : 1
optimized in multiple -> stages : 1
in multiple stages -> before : 1
multiple stages before -> it : 1
stages before it -> is : 1
it is finally -> both : 1
is finally both -> the : 1
finally both the -> compiler : 1
both the compiler -> and : 1
the compiler and -> the : 2
compiler and the -> hardware : 2
and the hardware -> will : 1
and the hardware -> instruction : 1
the hardware will -> reorder : 1
hardware will reorder -> instructions : 1
will reorder instructions -> with : 1
reorder instructions with -> the : 1
instructions with the -> goal : 1
with the goal -> of : 1
the goal of -> executing : 1
goal of executing -> the : 1
of executing the -> program : 1
executing the program -> more : 1
the program more -> this : 1
program more this -> is : 1
more this is -> not : 1
is not new -> compilers : 1
not new compilers -> have : 1
new compilers have -> done : 1
compilers have done -> this : 1
have done this -> for : 1
done this for -> a : 1
this for a -> long : 1
a long and -> this : 1
long and this -> is : 1
one reason why -> an : 1
reason why an -> optimized : 1
why an optimized -> build : 1
an optimized build -> runs : 1
an optimized build -> of : 1
optimized build runs -> faster : 1
build runs faster -> than : 1
runs faster than -> a : 1
than a the -> compiler : 1
the compiler are -> free : 1
compiler are free -> to : 1
free to reorder -> instructions : 1
to reorder instructions -> as : 1
reorder instructions as -> long : 1
instructions as long -> as : 1
as the reordering -> is : 1
the reordering is -> not : 1
reordering is not -> observable : 1
is not observable -> when : 1
not observable when -> running : 2
observable when running -> the : 2
running the the -> program : 1
the the program -> runs : 1
the program runs -> everything : 1
program runs everything -> happens : 1
runs everything happens -> in : 1
everything happens in -> program : 1
happens in program -> look : 1
in program look -> at : 1
program look at -> an : 1
an example code -> snippet : 1
example code snippet -> to : 1
code snippet to -> a : 1
snippet to a -> cout : 1
to a cout -> int : 1
a cout int -> b : 1
cout int b -> cout : 1
int b cout -> observed : 1
b cout observed -> it : 1
cout observed it -> is : 1
observed it is -> obvious : 1
it is obvious -> that : 1
is obvious that -> line : 1
obvious that line -> number : 1
that line number -> two : 1
line number two -> and : 1
number two and -> line : 1
two and line -> number : 1
and line number -> three : 1
line number three -> could : 1
number three could -> be : 1
three could be -> swapped : 1
could be swapped -> without : 1
be swapped without -> introducing : 1
swapped without introducing -> any : 1
without introducing any -> observable : 1
introducing any observable -> a : 1
any observable a -> int : 1
observable a int -> b : 1
a int b -> this : 1
int b this -> line : 1
b this line -> moved : 1
this line moved -> up : 1
this line moved -> cout : 1
this line moved -> for : 1
this line moved -> is : 1
line moved up -> cout : 1
moved up cout -> this : 1
up cout this -> line : 1
cout this line -> moved : 1
line moved cout -> observed : 1
moved cout observed -> is : 1
cout observed is -> another : 1
observed is another -> but : 1
is another but -> not : 1
another but not -> to : 1
but not to -> the : 1
not to the -> example : 1
the example from -> where : 1
example from where -> the : 1
from where the -> compiler : 1
compiler can optimize -> a : 1
can optimize a -> version : 1
optimize a version -> when : 1
a version when -> iterating : 1
version when iterating -> over : 1
iterating over a -> auto : 1
over a auto -> ksize : 1
a auto ksize -> using : 1
matrixtype auto int -> for : 1
auto int for -> i : 1
int for i -> i : 1
j j saw -> in : 1
j saw in -> that : 1
saw in that -> code : 1
in that code -> similar : 1
that code similar -> to : 1
code similar to -> this : 1
similar to this -> produces : 1
to this produces -> a : 1
this produces a -> lot : 1
produces a lot -> of : 1
of cache which -> hurts : 1
cache which hurts -> a : 1
which hurts a -> compiler : 1
hurts a compiler -> is : 1
a compiler is -> free : 1
compiler is free -> to : 1
is free to -> optimize : 1
free to optimize -> this : 1
to optimize this -> by : 1
optimize this by -> reordering : 1
this by reordering -> the : 1
by reordering the -> like : 1
reordering the like -> int : 1
the like int -> for : 1
like int for -> j : 1
int for j -> j : 1
j j this -> line : 1
j this line -> moved : 1
line moved for -> i : 1
moved for i -> i : 1
i i this -> line : 1
i this line -> moved : 1
line moved is -> no : 1
moved is no -> way : 1
way to observe -> the : 1
to observe the -> difference : 1
observe the difference -> between : 1
between the two -> versions : 1
the two versions -> when : 1
two versions when -> executing : 1
versions when executing -> the : 1
when executing the -> but : 1
when executing the -> we : 1
executing the but -> the : 1
but the latter -> will : 1
the latter will -> run : 1
latter will run -> performed : 1
will run performed -> by : 1
run performed by -> the : 1
performed by the -> compiler : 1
by the compiler -> and : 1
the hardware instruction -> branch : 1
hardware instruction branch -> and : 1
instruction branch and -> cache : 1
branch and cache -> are : 1
and cache are -> very : 1
cache are very -> complicated : 1
are very complicated -> and : 1
very complicated and -> all : 1
complicated and all -> these : 1
and all these -> transformations : 1
all these transformations -> of : 1
these transformations of -> the : 1
transformations of the -> original : 1
the original program -> can : 1
original program can -> be : 1
program can be -> seen : 1
program can be -> a : 1
seen as reorderings -> of : 1
as reorderings of -> reads : 1
reorderings of reads -> and : 1
of reads and -> writes : 1
and writes in -> the : 1
writes in the -> source : 1
source this also -> means : 1
that it matter -> whether : 1
it matter whether -> it : 1
matter whether it -> is : 1
the compiler or -> some : 1
compiler or some -> part : 1
or some part -> of : 1
some part of -> the : 1
of the hardware -> that : 1
of the hardware -> is : 1
the hardware that -> performs : 1
hardware that performs -> the : 1
that performs the -> the : 1
performs the the -> important : 1
the the important -> thing : 1
important thing for -> programmers : 1
thing for programmers -> to : 1
for programmers to -> know : 1
programmers to know -> is : 1
know is that -> the : 1
the instructions can -> be : 1
instructions can be -> reordered : 1
can be reordered -> but : 1
be reordered but -> without : 1
reordered but without -> any : 1
but without any -> observable : 1
without any observable -> you : 1
without any observable -> the : 1
any observable you -> have : 1
observable you have -> been : 1
have been trying -> to : 1
been trying to -> debug : 1
trying to debug -> an : 1
to debug an -> optimized : 1
debug an optimized -> build : 1
optimized build of -> your : 1
build of your -> you : 1
of your you -> have : 1
your you have -> probably : 1
have probably noticed -> that : 1
probably noticed that -> it : 1
noticed that it -> can : 1
hard to step -> through : 1
to step through -> it : 1
step through it -> because : 1
through it because -> of : 1
it because of -> the : 1
of the by -> using : 1
the by using -> a : 1
a the reorderings -> are : 1
the reorderings are -> in : 1
reorderings are in -> some : 1
reorderings are in -> that : 1
are in some -> sense : 1
in some sense -> but : 1
some sense but -> they : 1
sense but they -> are : 1
are not observable -> when : 1
a normal and -> memory : 1
normal and memory -> writing : 1
and memory writing -> programs : 1
memory writing programs -> in : 1
writing programs in -> there : 1
programs in there -> is : 1
races we can -> write : 1
write our programs -> happily : 1
our programs happily -> without : 1
programs happily without -> being : 1
happily without being -> aware : 1
without being aware -> of : 1
being aware of -> instruction : 1
aware of instruction -> when : 1
of instruction when -> it : 1
instruction when it -> comes : 1
comes to shared -> variables : 1
to shared variables -> in : 1
shared variables in -> it : 1
variables in it -> is : 1
is a completely -> different : 1
completely different the -> compiler : 1
different the compiler -> does : 1
compiler does all -> its : 1
does all its -> optimizations : 1
all its optimizations -> based : 1
its optimizations based -> on : 1
optimizations based on -> what : 1
based on what -> is : 1
what is true -> and : 1
is true and -> observable : 1
true and observable -> for : 1
and observable for -> thread : 1
observable for thread -> the : 1
for thread the -> compiler : 1
thread the compiler -> cannot : 1
compiler cannot know -> what : 1
cannot know what -> other : 1
know what other -> threads : 1
what other threads -> are : 1
other threads are -> able : 1
threads are able -> to : 1
are able to -> observe : 1
able to observe -> by : 1
to observe by -> shared : 1
observe by shared -> so : 1
by shared so -> it : 1
shared so it -> is : 1
so it is -> our : 1
it is our -> job : 1
is our job -> as : 1
our job as -> programmers : 1
job as programmers -> to : 1
as programmers to -> inform : 1
programmers to inform -> the : 1
to inform the -> compiler : 1
to inform the -> system : 1
inform the compiler -> of : 1
the compiler of -> what : 1
compiler of what -> reorderings : 1
of what reorderings -> are : 1
what reorderings are -> in : 1
are in that -> is : 1
that is exactly -> what : 1
are doing when -> we : 1
doing when we -> are : 1
using an atomic -> variable : 1
using an atomic -> and : 1
atomic variable or -> a : 1
variable or a -> mutex : 1
or a mutex -> to : 1
a mutex to -> protect : 1
mutex to protect -> us : 1
us from data -> protecting : 1
from data protecting -> a : 1
data protecting a -> critical : 1
protecting a critical -> section : 1
critical section with -> a : 1
section with a -> it : 1
is guaranteed that -> only : 1
guaranteed that only -> the : 1
that only the -> thread : 1
only the thread -> that : 1
thread that currently -> owns : 1
that currently owns -> the : 1
currently owns the -> lock : 1
owns the lock -> can : 1
the lock can -> execute : 1
lock can execute -> the : 1
can execute the -> critical : 1
execute the critical -> the : 1
the critical the -> mutex : 1
the critical the -> instruction : 1
critical the mutex -> is : 1
mutex is also -> creating : 1
is also creating -> memory : 1
also creating memory -> fences : 1
creating memory fences -> around : 1
memory fences around -> the : 1
fences around the -> critical : 1
around the critical -> section : 1
section to inform -> the : 1
inform the system -> that : 1
the system that -> certain : 1
the system that -> no : 1
system that certain -> reorderings : 1
that certain reorderings -> are : 1
certain reorderings are -> not : 1
reorderings are not -> allowed : 1
are not allowed -> at : 1
not allowed at -> the : 1
allowed at the -> critical : 1
at the critical -> section : 1
critical section when -> acquiring : 1
section when acquiring -> the : 1
when acquiring the -> an : 1
acquiring the an -> acquire : 1
the an acquire -> fence : 1
an acquire fence -> is : 1
acquire fence is -> and : 1
acquire fence is -> it : 1
fence is and -> when : 1
is and when -> releasing : 1
and when releasing -> the : 1
when releasing the -> a : 1
releasing the a -> release : 1
the a release -> fence : 1
a release fence -> is : 1
release fence is -> will : 1
fence is will -> demonstrate : 1
is will demonstrate -> this : 1
will demonstrate this -> with : 1
demonstrate this with -> an : 1
this with an -> imagine : 1
with an imagine -> that : 1
an imagine that -> we : 1
we have four -> and : 1
have four and -> there : 1
four and there -> is : 1
is no dependency -> between : 1
no dependency between -> each : 1
dependency between each -> so : 1
between each so -> the : 1
each so the -> system : 1
so the system -> could : 1
the system could -> reorder : 1
system could reorder -> the : 1
could reorder the -> instructions : 1
reorder the instructions -> arbitrarily : 1
the instructions arbitrarily -> without : 1
instructions arbitrarily without -> any : 1
arbitrarily without any -> observable : 1
any observable the -> instructions : 1
observable the instructions -> and : 1
the instructions and -> are : 1
instructions and are -> using : 1
and are using -> shared : 1
are using shared -> data : 1
are using shared -> there : 1
data and critical -> sections : 1
and critical sections -> that : 1
critical sections that -> needs : 1
sections that needs -> to : 1
protected by a -> after : 1
by a after -> adding : 1
a after adding -> the : 1
after adding the -> acquire : 1
adding the acquire -> and : 1
the acquire and -> release : 1
the acquire and -> nothing : 1
acquire and release -> of : 1
and release of -> the : 1
release of the -> mutex : 1
the mutex there -> are : 1
mutex there are -> now : 1
there are now -> some : 1
are now some -> reorderings : 1
now some reorderings -> that : 1
some reorderings that -> are : 1
reorderings that are -> no : 1
that are no -> longer : 1
no longer we -> cannot : 1
longer we cannot -> move : 1
we cannot move -> the : 1
cannot move the -> instructions : 1
move the instructions -> that : 1
the instructions that -> are : 1
instructions that are -> part : 1
that are part -> of : 1
of the critical -> section : 1
of the critical -> or : 1
critical section outside -> of : 1
section outside of -> the : 1
outside of the -> critical : 1
the critical or -> they : 1
critical or they -> will : 1
or they will -> no : 1
they will no -> longer : 1
longer be protected -> by : 1
protected by the -> the : 1
the the fences -> ensure : 1
the fences ensure -> that : 1
fences ensure that -> no : 1
that no instructions -> can : 1
no instructions can -> move : 1
instructions can move -> out : 1
can move out -> from : 1
move out from -> the : 1
from the critical -> the : 1
critical the instruction -> could : 1
the instruction could -> be : 1
the instruction could -> also : 1
instruction could be -> moved : 1
could be moved -> inside : 1
be moved inside -> the : 2
moved inside the -> critical : 2
inside the critical -> section : 2
critical section by -> passing : 2
section by passing -> the : 2
by passing the -> acquire : 1
by passing the -> release : 1
passing the acquire -> but : 1
the acquire but -> not : 1
acquire but not -> beyond : 1
but not beyond -> the : 2
not beyond the -> release : 1
not beyond the -> acquire : 1
beyond the release -> the : 1
the release the -> instruction : 1
release the instruction -> could : 1
instruction could also -> be : 1
also be moved -> inside : 1
passing the release -> but : 1
the release but -> not : 1
release but not -> beyond : 1
beyond the acquire -> following : 1
the acquire following -> figure : 1
acquire following figure -> shows : 1
shows how fences -> limit : 1
how fences limit -> the : 1
fences limit the -> reordering : 2
limit the reordering -> of : 2
the reordering of -> read : 1
the reordering of -> the : 1
reordering of read -> or : 1
of read or -> write : 1
read or write -> instructions : 1
or write instructions -> can : 1
write instructions can -> pass : 1
instructions can pass -> above : 1
can pass above -> the : 1
pass above the -> acquire : 1
above the acquire -> and : 1
acquire and nothing -> can : 1
and nothing can -> pass : 1
nothing can pass -> below : 1
can pass below -> the : 1
pass below the -> release : 1
below the release -> cdpaligncenter : 1
the release cdpaligncenter -> the : 1
release cdpaligncenter the -> fences : 1
cdpaligncenter the fences -> limit : 1
the fences limit -> the : 1
reordering of the -> instructions : 1
of the instructions -> acquiring : 1
the instructions acquiring -> a : 1
instructions acquiring a -> we : 1
acquiring a we -> are : 1
creating an acquire -> memory : 1
an acquire memory -> it : 1
acquire memory it -> tells : 1
memory it tells -> the : 1
it tells the -> system : 1
tells the system -> that : 1
system that no -> memory : 1
that no memory -> accesses : 1
no memory accesses -> or : 1
memory accesses or -> can : 1
accesses or can -> be : 1
or can be -> moved : 1
be moved above -> the : 1
moved above the -> line : 1
above the line -> where : 1
the line where -> the : 1
line where the -> acquire : 1
where the acquire -> fence : 1
the acquire fence -> is : 1
fence is it -> is : 1
the system to -> move : 1
system to move -> the : 1
move the instruction -> above : 1
the instruction above -> the : 1
instruction above the -> release : 1
above the release -> fence : 1
the release fence -> beyond : 1
release fence beyond -> the : 1
fence beyond the -> and : 1
beyond the and -> but : 1
the and but -> no : 1
and but no -> longer : 1
but no longer -> than : 1
no longer than -> that : 1
longer than that -> because : 1
than that because -> of : 1
that because of -> the : 1
of the acquire -> have : 1
the acquire have -> a : 1
acquire have a -> look : 1
look at atomic -> variables : 1
at atomic variables -> instead : 1
atomic variables instead -> of : 1
instead of when -> we : 1
of when we -> use : 1
when we use -> a : 1
use a shared -> atomic : 1
a shared atomic -> variable : 1
shared atomic variable -> in : 1
atomic variable in -> our : 1
variable in our -> it : 1
our it gives -> us : 1
it gives us -> two : 1
gives us two -> against : 1
us two against -> torn : 1
two against torn -> the : 1
against torn the -> atomic : 1
torn the atomic -> variable : 1
the atomic variable -> is : 1
is always updated -> atomically : 1
always updated atomically -> so : 1
updated atomically so -> there : 1
atomically so there -> is : 1
no way a -> reader : 1
way a reader -> can : 1
a reader can -> read : 1
reader can read -> a : 1
can read a -> partially : 1
read a partially -> written : 1
a partially written -> of : 1
partially written of -> memory : 1
written of memory -> by : 1
of memory by -> adding : 1
memory by adding -> sufficient : 1
by adding sufficient -> memory : 1
adding sufficient memory -> this : 1
sufficient memory this -> prevents : 1
memory this prevents -> certain : 1
this prevents certain -> instruction : 1
prevents certain instruction -> reorderings : 1
certain instruction reorderings -> to : 1
instruction reorderings to -> guarantee : 1
reorderings to guarantee -> a : 1
guarantee a certain -> memory : 1
a certain memory -> order : 1
certain memory order -> specified : 1
memory order specified -> by : 1
order specified by -> the : 2
specified by the -> atomic : 1
specified by the -> original : 1
by the atomic -> memory : 1
the atomic memory -> model : 1
atomic memory model -> guarantees : 1
memory model guarantees -> if : 1
model guarantees if -> your : 1
guarantees if your -> program : 1
memory order when -> using : 1
order when using -> what : 1
when using what -> is : 1
using what is -> sequential : 1
what is sequential -> consistency : 1
is sequential consistency -> guarantees : 1
sequential consistency guarantees -> that : 1
consistency guarantees that -> the : 1
guarantees that the -> result : 1
of the execution -> is : 1
the execution is -> the : 1
the execution is -> performed : 1
execution is the -> same : 1
if the operations -> were : 1
the operations were -> executed : 1
operations were executed -> in : 1
were executed in -> the : 1
the order specified -> by : 1
by the original -> the : 1
the original the -> interleaving : 1
original the interleaving -> of : 1
the interleaving of -> instructions : 1
interleaving of instructions -> among : 1
of instructions among -> threads : 1
instructions among threads -> is : 1
among threads is -> that : 1
threads is that -> we : 1
no control over -> the : 1
the this may -> sound : 1
may sound complicated -> at : 1
sound complicated at -> but : 1
complicated at but -> it : 1
at but it -> is : 1
probably the way -> you : 1
the way you -> already : 1
way you already -> think : 1
you already think -> about : 1
already think about -> how : 1
think about how -> a : 1
about how a -> concurrent : 1
how a concurrent -> program : 1
program is downside -> with : 1
is downside with -> sequential : 1
downside with sequential -> consistency : 1
with sequential consistency -> is : 1
sequential consistency is -> that : 1
consistency is that -> it : 1
it can hurt -> it : 1
can hurt it -> possible : 1
hurt it possible -> to : 1
to use atomics -> with : 1
use atomics with -> a : 1
atomics with a -> relaxed : 1
with a relaxed -> memory : 1
a relaxed memory -> model : 1
relaxed memory model -> this : 1
memory model this -> means : 1
model this means -> that : 1
you only get -> the : 1
only get the -> protection : 1
get the protection -> against : 1
the protection against -> torn : 1
protection against torn -> but : 1
against torn but -> not : 1
torn but not -> the : 1
not the strong -> sequential : 1
the strong sequential -> consistency : 1
strong sequential consistency -> memory : 1
sequential consistency memory -> order : 1
sequential consistency memory -> unless : 1
consistency memory order -> we : 1
memory order we -> strongly : 1
order we strongly -> advise : 1
we strongly advise -> you : 1
strongly advise you -> against : 1
advise you against -> using : 1
you against using -> anything : 1
against using anything -> else : 1
using anything else -> except : 1
anything else except -> the : 1
else except the -> default : 1
except the default -> sequential : 1
the default sequential -> consistency : 1
default sequential consistency -> memory : 1
consistency memory unless -> you : 1
memory unless you -> have : 1
have a very -> thorough : 1
a very thorough -> understanding : 1
very thorough understanding -> of : 1
thorough understanding of -> the : 1
of the effects -> a : 1
the effects a -> weaker : 1
effects a weaker -> memory : 1
a weaker memory -> model : 1
weaker memory model -> can : 1
memory model can -> we : 1
model can we -> will : 1
can we will -> not : 1
will not discuss -> relaxed : 1
not discuss relaxed -> memory : 1
discuss relaxed memory -> order : 1
relaxed memory order -> any : 1
memory order any -> further : 1
order any further -> here : 1
any further here -> because : 1
further here because -> it : 1
here because it -> is : 1
because it is -> beyond : 1
it is beyond -> the : 1
is beyond the -> scope : 1
of this but -> as : 1
this but as -> a : 1
but as a -> side : 1
a side it -> can : 1
side it can -> be : 1
can be interesting -> to : 1
be interesting to -> know : 1
interesting to know -> that : 1
that the reference -> counter : 1
the reference counter -> in : 1
reference counter in -> a : 1
counter in a -> uses : 1
in a uses -> a : 1
a uses a -> relaxed : 1
uses a relaxed -> model : 1
a relaxed model -> when : 1
relaxed model when -> incrementing : 1
model when incrementing -> the : 1
when incrementing the -> counter : 1
the counter not -> when : 1
counter not when -> decrementing : 1
not when decrementing -> the : 1
when decrementing the -> this : 1
decrementing the this -> is : 1
reason why the -> member : 1
why the member -> function : 1
member function reports -> the : 1
function reports the -> approximate : 1
reports the approximate -> number : 1
the approximate number -> of : 1
approximate number of -> actual : 1
number of actual -> references : 1
of actual references -> when : 1
actual references when -> being : 1
references when being -> used : 1
in a programming -> is : 1
a programming is -> we : 1
programming is we -> will : 1
will not spend -> a : 1
not spend a -> lot : 1
spend a lot -> of : 2
of time discussing -> programming : 1
time discussing programming -> in : 1
discussing programming in -> this : 1
programming in this -> but : 1
but instead provide -> you : 1
instead provide you -> with : 1
provide you with -> an : 1
you with an -> example : 1
with an example -> of : 1
how a very -> simple : 1
very simple data -> structure : 1
simple data structure -> could : 1
data structure could -> be : 1
structure could be -> is : 1
could be is -> a : 1
be is a -> great : 1
a great wealth -> of : 1
great wealth of -> the : 1
wealth of the -> web : 1
of the web -> and : 1
the web and -> in : 1
web and in -> to : 1
and in to -> programming : 1
in to programming -> the : 1
to programming the -> concepts : 1
programming the concepts -> you : 1
the concepts you -> need : 1
concepts you need -> to : 1
understand before writing -> your : 1
before writing your -> own : 1
writing your own -> data : 1
your own data -> some : 1
own data some -> concepts : 1
data some concepts -> you : 1
some concepts you -> might : 1
concepts you might -> have : 1
might have heard -> related : 1
have heard related -> to : 1
heard related to -> such : 1
related to such -> as : 1
to such as -> and : 1
and the will -> not : 1
the will not -> be : 1
the will not -> use : 1
will not be -> further : 1
not be further -> discussed : 1
be further discussed -> in : 1
further discussed in -> this : 1
discussed in this -> queue : 1
in this queue -> we : 1
this queue we -> are : 1
queue we are -> going : 1
to show an -> example : 1
show an example -> of : 1
of a which -> is : 1
a which is -> a : 1
a relatively simple -> but : 1
relatively simple but -> useful : 1
simple but useful -> data : 1
but useful data -> queues : 1
useful data queues -> can : 1
data queues can -> be : 1
queues can be -> used : 1
be used communication -> with : 1
used communication with -> threads : 1
communication with threads -> that : 1
with threads that -> cannot : 1
threads that cannot -> use : 1
that cannot use -> locks : 1
cannot use locks -> to : 2
use locks to -> synchronize : 1
use locks to -> protect : 1
locks to synchronize -> access : 1
to synchronize access -> to : 1
synchronize access to -> shared : 1
access to shared -> implementation : 1
to shared implementation -> is : 1
shared implementation is -> straightforward : 1
implementation is straightforward -> because : 1
is straightforward because -> of : 1
straightforward because of -> the : 1
of the limited -> it : 1
the limited it -> only : 1
limited it only -> supports : 1
it only supports -> one : 1
only supports one -> reader : 1
supports one reader -> thread : 1
one reader thread -> and : 1
reader thread and -> one : 1
and one writer -> the : 1
one writer the -> capacity : 1
writer the capacity -> of : 1
of the queue -> is : 1
of the queue -> removes : 1
of the queue -> following : 1
of the queue -> to : 1
the queue is -> also : 1
queue is also -> fixed : 1
is also fixed -> and : 1
also fixed and -> cannot : 1
fixed and cannot -> change : 1
and cannot change -> during : 1
cannot change during -> writer : 1
change during writer -> thread : 1
during writer thread -> is : 1
writer thread is -> allowed : 1
thread is allowed -> to : 2
allowed to adds -> an : 1
to adds an -> element : 1
to the queue -> reader : 1
the queue reader -> thread : 1
queue reader thread -> is : 1
reader thread is -> allowed : 1
allowed to returns -> the : 1
to returns the -> front : 1
returns the front -> element : 1
the front element -> of : 1
the front element -> from : 1
front element of -> the : 1
the queue removes -> the : 1
queue removes the -> front : 1
removes the front -> element : 1
front element from -> the : 1
element from the -> queue : 1
from the queue -> threads : 1
the queue threads -> can : 1
queue threads can -> returns : 1
threads can returns -> the : 1
can returns the -> current : 1
the queue following -> is : 1
queue following is -> the : 1
is the complete -> implementation : 1
the complete implementation -> of : 1
complete implementation of -> the : 1
the class lockfreequeue -> auto : 1
class lockfreequeue auto -> const : 1
lockfreequeue auto const -> return : 1
const return writer -> auto : 1
return writer auto -> if : 1
writer auto if -> throw : 1
auto if throw -> is : 2
if throw is -> reader : 1
if throw is -> return : 1
if throw is -> used : 1
throw is reader -> const : 1
is reader const -> auto : 1
reader const auto -> s : 1
const auto s -> if : 1
auto s if -> throw : 1
s if throw -> is : 1
throw is return -> reader : 1
is return reader -> auto : 1
return reader auto -> if : 1
reader auto if -> throw : 1
throw is used -> by : 1
used by both -> used : 2
by both used -> by : 2
both used by -> both : 1
both used by -> reader : 1
used by reader -> used : 1
by reader used -> by : 1
reader used by -> writer : 1
used by writer -> only : 1
used by writer -> so : 1
by writer only -> data : 1
writer only data -> member : 1
only data member -> that : 1
data member that -> needs : 1
member that needs -> atomic : 1
that needs atomic -> access : 1
needs atomic access -> is : 1
atomic access is -> the : 1
access is the -> the : 1
the member is -> only : 1
member is only -> used : 1
is only used -> by : 2
only used by -> the : 1
only used by -> writer : 1
by the reader -> and : 1
the reader and -> the : 2
reader and the -> is : 1
reader and the -> writer : 1
and the is -> only : 1
by writer so -> what : 1
writer so what -> about : 1
so what about -> the : 1
about the buffer -> of : 1
the buffer of -> type : 1
buffer of type -> it : 1
of type it -> is : 1
type it is -> mutable : 1
it is mutable -> and : 1
is mutable and -> accessed : 1
mutable and accessed -> by : 1
and accessed by -> both : 1
accessed by both -> that : 1
by both that -> require : 1
both that require -> since : 1
that require since -> the : 1
require since the -> algorithm : 1
since the algorithm -> ensures : 1
the algorithm ensures -> that : 1
algorithm ensures that -> the : 1
threads are never -> accessing : 1
are never accessing -> the : 1
never accessing the -> same : 1
the same element -> in : 1
same element in -> the : 1
the array guarantees -> that : 1
array guarantees that -> individual : 1
guarantees that individual -> elements : 1
that individual elements -> in : 1
individual elements in -> an : 1
elements in an -> array : 1
an array can -> be : 1
array can be -> accessed : 1
be accessed without -> data : 1
accessed without data -> it : 1
without data it -> matter : 1
data it matter -> how : 1
it matter how -> small : 1
matter how small -> the : 1
how small the -> elements : 1
small the elements -> even : 1
the elements even -> a : 1
elements even a -> array : 1
even a array -> holds : 1
a array holds -> this : 1
array holds this -> can : 1
holds this can -> a : 1
this can a -> queue : 1
can a queue -> like : 1
a queue like -> this : 1
queue like this -> be : 1
like this be -> example : 1
this be example -> is : 1
be example is -> in : 1
example is in -> audio : 1
is in audio -> when : 1
in audio when -> there : 1
audio when there -> is : 1
is a ui -> running : 1
a ui running -> on : 1
ui running on -> the : 1
on the main -> thread : 2
the main thread -> that : 1
the main thread -> and : 3
the main thread -> for : 1
main thread that -> needs : 1
needs to send -> or : 1
to send or -> receive : 1
send or receive -> data : 1
or receive data -> from : 1
receive data from -> a : 1
data from a -> audio : 1
from a audio -> which : 1
a audio which -> cannot : 1
audio which cannot -> block : 1
which cannot block -> under : 1
cannot block under -> any : 1
block under any -> the : 1
under any the -> thread : 1
any the thread -> cannot : 1
the thread cannot -> use : 1
thread cannot use -> mutex : 1
cannot use mutex -> or : 1
use mutex or -> anything : 1
mutex or anything -> else : 1
or anything else -> that : 1
anything else that -> may : 1
else that may -> cause : 1
that may cause -> the : 1
may cause the -> thread : 1
cause the thread -> to : 1
thread to wait -> on : 1
to wait on -> threads : 1
wait on threads -> with : 1
on threads with -> lower : 1
threads with lower -> data : 1
threads with lower -> thread : 1
with lower data -> structures : 1
lower data structures -> are : 1
data structures are -> required : 1
data structures are -> the : 1
structures are required -> for : 1
are required for -> scenarios : 1
required for scenarios -> like : 1
for scenarios like -> the : 1
scenarios like the -> reader : 1
like the reader -> and : 1
and the writer -> are : 1
the writer are -> in : 1
writer are in -> so : 1
are in so -> we : 1
in so we -> could : 1
could have two -> instances : 1
have two instances -> of : 1
the queue to -> communicate : 1
queue to communicate -> in : 1
to communicate in -> both : 1
communicate in both -> directions : 1
in both directions -> between : 1
both directions between -> the : 1
directions between the -> main : 1
between the main -> thread : 2
main thread and -> the : 2
main thread and -> a : 1
thread and the -> audio : 1
thread and the -> algorithm : 1
and the audio -> as : 1
the audio as -> the : 1
audio as the -> following : 1
following figure cdpaligncenter -> two : 1
figure cdpaligncenter two -> queues : 1
cdpaligncenter two queues -> to : 1
two queues to -> pass : 1
queues to pass -> state : 1
to pass state -> between : 1
pass state between -> the : 1
state between the -> main : 1
thread and a -> audio : 1
and a audio -> chapter : 1
a audio chapter -> will : 1
audio chapter will -> end : 1
chapter will end -> with : 1
will end with -> some : 1
end with some -> guidelines : 1
with some guidelines -> related : 1
some guidelines related -> to : 1
guidelines related to -> we : 1
guidelines related to -> you : 1
related to we -> cannot : 1
to we cannot -> stress : 1
we cannot stress -> enough : 1
cannot stress enough -> the : 1
stress enough the -> importance : 1
enough the importance -> of : 1
importance of having -> a : 1
of having a -> concurrent : 1
having a concurrent -> program : 1
concurrent program running -> before : 1
program running before -> trying : 1
running before trying -> to : 1
before trying to -> improve : 1
trying to improve -> the : 1
improve the before -> applying : 1
the before applying -> any : 1
before applying any -> of : 1
applying any of -> these : 1
of these guidelines -> related : 1
these guidelines related -> to : 1
related to you -> first : 1
to you first -> need : 1
you first need -> to : 1
need to set -> up : 2
to set up -> a : 1
to set up -> custom : 1
set up a -> reliable : 1
up a reliable -> way : 1
a reliable way -> of : 1
reliable way of -> measuring : 1
way of measuring -> what : 1
of measuring what -> you : 1
measuring what you -> are : 1
what you are -> trying : 1
you are trying -> to : 1
trying to multiple -> threads : 1
to multiple threads -> are : 1
threads are using -> shared : 1
using shared there -> will : 1
shared there will -> be : 1
will be contention -> hurts : 1
be contention hurts -> performance : 1
contention hurts performance -> and : 1
hurts performance and -> sometimes : 1
performance and sometimes -> the : 1
and sometimes the -> overhead : 1
sometimes the overhead -> caused : 1
the overhead caused -> by : 2
caused by contention -> can : 1
by contention can -> make : 1
contention can make -> a : 1
make a parallel -> algorithm : 1
a parallel algorithm -> work : 1
a parallel algorithm -> equivalent : 1
parallel algorithm work -> slower : 1
algorithm work slower -> than : 1
work slower than -> a : 1
slower than a -> a : 1
a a lock -> that : 1
that causes a -> wait : 1
causes a wait -> and : 1
a wait and -> a : 1
wait and a -> context : 1
and a context -> switch : 1
switch is an -> obvious : 1
is an obvious -> performance : 1
an obvious performance -> but : 1
obvious performance but -> what : 1
performance but what -> is : 1
but what is -> not : 1
what is not -> equally : 1
is not equally -> obvious : 1
not equally obvious -> is : 1
equally obvious is -> that : 1
obvious is that -> both : 1
that both locks -> and : 1
both locks and -> atomics : 1
locks and atomics -> disable : 1
and atomics disable -> optimizations : 1
atomics disable optimizations -> in : 1
disable optimizations in -> the : 1
optimizations in the -> code : 1
the code generated -> by : 1
code generated by -> the : 1
by the and -> they : 1
the and they -> do : 1
and they do -> so : 1
they do so -> at : 1
do so at -> runtime : 1
so at runtime -> when : 1
at runtime when -> the : 1
runtime when the -> cpu : 1
when the cpu -> executes : 1
the cpu executes -> the : 1
cpu executes the -> this : 1
executes the this -> is : 1
this is necessary -> in : 1
is necessary in -> order : 1
necessary in order -> to : 1
to guarantee sequential -> but : 1
guarantee sequential but -> the : 1
sequential but the -> solution : 1
but the solution -> to : 1
the solution to -> such : 1
the solution to -> this : 1
solution to such -> problems : 1
to such problems -> is : 1
such problems is -> never : 1
problems is never -> to : 1
is never to -> ignore : 1
never to ignore -> synchronization : 1
to ignore synchronization -> and : 1
ignore synchronization and -> therefore : 1
synchronization and therefore -> introduce : 1
and therefore introduce -> data : 1
therefore introduce data -> data : 1
introduce data data -> races : 1
data data races -> mean : 1
data races mean -> undefined : 1
races mean undefined -> and : 1
mean undefined and -> having : 1
undefined and having -> a : 1
and having a -> fast : 1
having a fast -> incorrect : 1
a fast incorrect -> program : 1
fast incorrect program -> makes : 1
incorrect program makes -> nobody : 1
program makes nobody -> we : 1
makes nobody we -> need : 1
nobody we need -> to : 1
need to minimize -> the : 1
minimize the time -> spent : 1
the time spent -> in : 1
time spent in -> critical : 1
spent in critical -> we : 1
in critical we -> can : 1
critical we can -> do : 1
that by entering -> critical : 1
by entering critical -> sections : 1
entering critical sections -> less : 1
critical sections less -> and : 1
sections less and -> by : 1
less and by -> minimizing : 1
and by minimizing -> the : 1
by minimizing the -> critical : 1
minimizing the critical -> section : 1
critical section itself -> so : 1
section itself so -> that : 1
itself so that -> once : 1
so that once -> we : 1
that once we -> are : 1
once we are -> in : 1
we are in -> a : 1
in a critical -> section : 1
critical section we -> will : 1
section we will -> leave : 1
section we will -> keep : 1
we will leave -> it : 1
will leave it -> as : 1
leave it as -> soon : 1
it as soon -> as : 1
soon as blocking -> write : 1
as blocking write -> a : 1
blocking write a -> modern : 1
write a modern -> responsive : 1
a modern responsive -> ui : 1
modern responsive ui -> application : 1
responsive ui application -> that : 1
ui application that -> always : 1
application that always -> runs : 1
that always runs -> it : 1
always runs it -> is : 1
runs it is -> absolutely : 1
it is absolutely -> necessary : 1
is absolutely necessary -> to : 1
absolutely necessary to -> never : 1
necessary to never -> block : 1
block the main -> thread : 1
main thread for -> more : 1
thread for more -> than : 2
for more than -> a : 1
for more than -> the : 1
more than a -> few : 2
than a few -> a : 1
than a few -> it : 1
a few a -> smooth : 1
few a smooth -> running : 1
a smooth running -> app : 1
smooth running app -> is : 1
running app is -> updating : 1
app is updating -> its : 1
is updating its -> interface : 1
updating its interface -> times : 1
its interface times -> a : 1
interface times a -> this : 1
times a this -> means : 1
a this means -> that : 1
you are doing -> something : 1
you are doing -> concurrency : 1
are doing something -> that : 1
doing something that -> blocks : 1
something that blocks -> the : 1
blocks the ui -> thread : 1
the ui thread -> for : 1
ui thread for -> more : 1
than the fps -> will : 1
the fps will -> can : 1
fps will can -> design : 1
will can design -> your : 1
can design your -> internal : 1
design your internal -> apis : 1
your internal apis -> in : 1
internal apis in -> an : 1
apis in an -> application : 1
an application with -> this : 1
application with this -> in : 1
with this in -> whenever : 1
this in whenever -> you : 1
in whenever you -> write : 1
whenever you write -> a : 1
you write a -> function : 1
function that performs -> or : 1
that performs or -> something : 1
performs or something -> else : 1
something else that -> might : 1
else that might -> take : 1
that might take -> more : 1
might take more -> than : 1
take more than -> a : 1
few it needs -> to : 1
implemented as an -> asynchronous : 1
as an asynchronous -> this : 1
an asynchronous this -> pattern : 1
asynchronous this pattern -> has : 1
this pattern has -> become : 1
pattern has become -> very : 1
has become very -> common : 1
become very common -> in : 1
very common in -> ios : 1
common in ios -> and : 1
in ios and -> windows : 1
ios and windows -> for : 1
and windows for -> all : 1
windows for all -> network : 1
for all network -> apis : 1
all network apis -> have : 1
network apis have -> become : 1
apis have become -> of : 1
have become of -> more : 1
become of more -> cpu : 1
of more cpu -> cores : 1
cpu cores a -> machine : 1
cores a machine -> the : 1
a machine the -> more : 1
machine the more -> active : 1
the more active -> running : 1
more active running -> threads : 1
active running threads -> you : 1
running threads you -> can : 1
threads you can -> if : 1
you can if -> you : 1
can if you -> manage : 1
split a sequential -> task : 1
a sequential task -> into : 1
sequential task into -> a : 1
task into a -> parallel : 1
into a parallel -> you : 1
a parallel you -> can : 1
parallel you can -> gain : 1
you can gain -> performance : 1
can gain performance -> by : 1
gain performance by -> having : 1
performance by having -> multiple : 1
by having multiple -> cores : 1
having multiple cores -> working : 1
multiple cores working -> on : 1
cores working on -> the : 1
working on the -> task : 1
on the task -> in : 1
the task in -> from : 1
task in from -> a : 1
in from a -> algorithm : 1
from a algorithm -> to : 1
a algorithm to -> an : 1
algorithm to an -> algorithm : 1
be run by -> two : 1
run by two -> threads : 1
by two threads -> in : 1
threads in the -> best : 1
the best double -> the : 1
best double the -> after : 1
double the after -> adding : 1
the after adding -> more : 1
after adding more -> and : 1
adding more and -> more : 1
and more you -> will : 1
more you will -> eventually : 1
you will eventually -> reach : 1
will eventually reach -> a : 1
eventually reach a -> limit : 1
reach a limit -> when : 1
a limit when -> there : 1
limit when there -> is : 1
is no more -> performance : 1
no more performance -> adding : 1
more performance adding -> more : 1
performance adding more -> threads : 1
adding more threads -> beyond : 1
more threads beyond -> that : 1
threads beyond that -> limit : 1
beyond that limit -> will : 1
that limit will -> actually : 1
limit will actually -> degrade : 1
will actually degrade -> performance : 1
actually degrade performance -> since : 1
degrade performance since -> the : 1
performance since the -> overhead : 1
since the overhead -> caused : 1
caused by context -> switching : 1
by context switching -> becomes : 1
context switching becomes -> more : 1
switching becomes more -> significant : 1
becomes more significant -> the : 1
more significant the -> more : 1
significant the more -> threads : 1
the more threads -> you : 1
more threads you -> intensive : 1
threads you intensive -> for : 1
you intensive for -> a : 1
intensive for a -> web : 1
for a web -> crawler : 1
a web crawler -> that : 1
web crawler that -> will : 1
crawler that will -> spend : 1
that will spend -> a : 1
will spend a -> lot : 1
of time waiting -> for : 1
time waiting for -> network : 1
waiting for network -> it : 1
for network it -> would : 1
network it would -> require : 1
it would require -> a : 1
would require a -> lot : 1
require a lot -> of : 1
lot of threads -> before : 1
of threads before -> reaching : 1
threads before reaching -> the : 1
before reaching the -> limit : 1
reaching the limit -> where : 1
the limit where -> the : 1
limit where the -> cpu : 1
where the cpu -> is : 1
where the cpu -> does : 1
the cpu is -> a : 1
cpu is a -> thread : 1
is a thread -> that : 1
that is waiting -> for : 1
waiting for will -> most : 1
for will most -> likely : 1
likely be switched -> out : 1
be switched out -> from : 1
switched out from -> the : 1
from the cpu -> to : 2
cpu to make -> room : 1
to make room -> for : 1
make room for -> other : 1
room for other -> threads : 1
that are ready -> to : 1
ready to there -> is : 1
there is usually -> no : 1
is usually no -> point : 1
usually no point -> in : 1
in using more -> threads : 1
using more threads -> than : 1
more threads than -> there : 1
threads than there -> are : 1
than there are -> cores : 1
there are cores -> on : 1
are cores on -> the : 1
cores on the -> the : 1
cores on the -> other : 1
the the total -> number : 1
in a big -> program : 1
a big program -> can : 1
big program can -> be : 1
be a good -> way : 1
good way of -> controlling : 1
way of controlling -> the : 1
of controlling the -> number : 1
controlling the number -> of : 1
of threads is -> to : 1
threads is to -> use : 1
use a thread -> pool : 1
a thread pool -> that : 1
thread pool that -> can : 1
pool that can -> be : 1
can be sized -> to : 1
be sized to -> match : 1
sized to match -> the : 1
match the current -> the : 1
the current the -> next : 1
current the next -> we : 1
will see examples -> of : 1
see examples of -> how : 1
how to parallelize -> algorithms : 1
to parallelize algorithms -> and : 1
to parallelize algorithms -> if : 1
parallelize algorithms and -> how : 1
how to tweak -> the : 1
to tweak the -> amount : 1
tweak the amount -> of : 1
amount of concurrency -> based : 1
of concurrency based -> on : 1
concurrency based on -> the : 1
on the number -> of : 2
of cpu priority -> of : 1
cpu priority of -> a : 1
priority of a -> thread : 1
a thread affects -> how : 1
thread affects how -> the : 1
affects how the -> thread : 1
how the thread -> is : 1
thread is being -> a : 1
is being a -> thread : 1
being a thread -> with : 1
a thread with -> high : 2
a thread with -> the : 1
thread with high -> priority : 2
with high priority -> is : 2
high priority is -> likely : 1
high priority is -> waiting : 1
priority is likely -> to : 1
to be scheduled -> more : 1
be scheduled more -> often : 1
scheduled more often -> than : 1
often than threads -> with : 1
than threads with -> lower : 1
with lower thread -> priorities : 1
lower thread priorities -> are : 1
thread priorities are -> important : 1
priorities are important -> for : 1
important for lowering -> the : 1
for lowering the -> latency : 1
lowering the latency -> of : 1
the latency of -> provided : 1
latency of provided -> by : 1
of provided by -> the : 1
operating system usually -> have : 1
system usually have -> there : 1
usually have there -> is : 1
have there is -> currently : 1
there is currently -> no : 1
is currently no -> way : 1
currently no way -> of : 1
no way of -> setting : 1
way of setting -> the : 1
way of setting -> an : 1
of setting the -> priority : 1
setting the priority -> on : 1
the priority on -> a : 1
priority on a -> thread : 1
thread with the -> current : 1
the current thread -> by : 1
current thread by -> using : 1
thread by using -> one : 1
by using one -> can : 1
using one can -> get : 1
one can get -> a : 1
can get a -> handle : 1
get a handle -> to : 1
get a handle -> on : 1
a handle to -> the : 1
handle to the -> underlying : 1
to the underlying -> operating : 1
the underlying operating -> system : 1
underlying operating system -> thread : 1
operating system thread -> and : 1
system thread and -> use : 1
thread and use -> native : 1
and use native -> apis : 1
use native apis -> for : 1
native apis for -> setting : 1
apis for setting -> to : 1
for setting to -> thread : 1
setting to thread -> priorities : 1
to thread priorities -> that : 1
thread priorities that -> can : 1
priorities that can -> hurt : 1
that can hurt -> the : 1
hurt the performance -> and : 1
the performance and -> should : 1
performance and should -> be : 1
be avoided is -> called : 1
avoided is called -> it : 1
called it happens -> when : 1
it happens when -> a : 1
happens when a -> thread : 1
when a thread -> with : 1
priority is waiting -> to : 1
is waiting to -> acquire : 1
waiting to acquire -> a : 1
to acquire a -> lock : 1
acquire a lock -> that : 1
lock that is -> currently : 1
that is currently -> held : 1
is currently held -> by : 1
currently held by -> a : 1
held by a -> low : 1
by a low -> priority : 1
a low priority -> such : 1
low priority such -> dependencies : 1
priority such dependencies -> hurt : 1
such dependencies hurt -> the : 1
dependencies hurt the -> high : 1
hurt the high -> priority : 1
the high priority -> which : 1
high priority which -> is : 1
priority which is -> blocked : 1
which is blocked -> until : 1
until the next -> time : 1
next time the -> low : 1
time the low -> priority : 1
the low priority -> thread : 1
low priority thread -> gets : 1
priority thread gets -> scheduled : 1
thread gets scheduled -> so : 1
gets scheduled so -> that : 1
scheduled so that -> it : 1
it can release -> the : 1
can release the -> for : 1
release the for -> this : 1
the for this -> is : 1
is a big -> in : 1
a big in -> it : 1
big in it -> means : 1
in it means -> that : 1
locks to protect -> any : 1
to protect any -> shared : 1
protect any shared -> resources : 1
any shared resources -> that : 1
shared resources that -> need : 1
resources that need -> to : 1
that need to -> be : 2
by a thread -> that : 1
thread that produces -> for : 1
that produces for -> runs : 1
produces for runs -> with : 1
for runs with -> the : 1
runs with the -> highest : 1
the highest possible -> and : 1
highest possible and -> in : 1
possible and in -> order : 1
and in order -> to : 1
to avoid priority -> it : 1
avoid priority it -> is : 1
priority it is -> not : 1
not possible for -> the : 1
for the audio -> thread : 1
the audio thread -> to : 1
audio thread to -> call : 1
thread to call -> any : 1
to call any -> functions : 1
call any functions -> that : 1
any functions that -> might : 1
functions that might -> block : 1
that might block -> and : 1
might block and -> cause : 1
block and cause -> a : 1
and cause a -> context : 1
cause a context -> affinity : 1
a context affinity -> makes : 1
context affinity makes -> it : 1
affinity makes it -> possible : 1
possible to give -> the : 1
give the scheduler -> hints : 1
the scheduler hints -> about : 1
scheduler hints about -> which : 1
hints about which -> threads : 1
about which threads -> could : 1
which threads could -> benefit : 1
threads could benefit -> from : 1
could benefit from -> sharing : 1
could benefit from -> running : 1
benefit from sharing -> the : 1
from sharing the -> same : 1
sharing the same -> cpu : 1
the same cpu -> in : 1
same cpu in -> other : 1
cpu in other -> this : 1
in other this -> is : 1
other this is -> a : 1
is a request -> to : 1
a request to -> the : 1
request to the -> scheduler : 1
to the scheduler -> that : 1
the scheduler that -> some : 1
scheduler that some -> threads : 1
that some threads -> should : 1
some threads should -> be : 1
threads should be -> executed : 1
on a particular -> core : 1
on a particular -> the : 1
a particular core -> if : 1
particular core if -> to : 1
core if to -> minimize : 1
if to minimize -> cache : 1
to minimize cache -> would : 1
minimize cache would -> you : 1
cache would you -> want : 1
you want one -> thread : 1
want one thread -> to : 1
one thread to -> be : 1
thread to be -> executed : 1
a particular the -> answer : 1
particular the answer -> is : 1
answer is threads -> that : 1
is threads that -> operate : 1
threads that operate -> on : 1
on the same -> memory : 1
on the same -> and : 1
on the same -> cache : 1
on the same -> typename : 1
on the same -> trees : 1
same memory could -> benefit : 1
memory could benefit -> from : 1
benefit from running -> on : 1
from running on -> the : 1
same and hence -> take : 1
and hence take -> advantage : 1
hence take advantage -> of : 1
advantage of warm -> for : 1
of warm for -> the : 1
warm for the -> this : 1
is just one -> of : 1
just one of -> many : 1
one of many -> parameters : 1
of many parameters -> to : 1
many parameters to -> take : 1
parameters to take -> into : 1
account when assigning -> a : 1
when assigning a -> thread : 1
assigning a thread -> to : 1
a thread to -> a : 1
thread to a -> so : 1
to a so -> this : 1
a so this -> is : 1
so this is -> hardly : 1
this is hardly -> any : 1
hardly any but -> again : 1
any but again -> the : 1
but again the -> behavior : 1
again the behavior -> is : 1
behavior is very -> different : 1
is very different -> among : 1
very different among -> operating : 1
different among operating -> thread : 1
among operating thread -> and : 1
operating thread and -> even : 1
thread and even -> utilization : 1
and even utilization -> of : 1
even utilization of -> all : 1
utilization of all -> cores : 1
of all cores -> avoid : 1
all cores avoid -> are : 1
cores avoid are -> some : 1
avoid are some -> of : 1
of the requirements -> that : 1
the requirements that -> need : 1
requirements that need -> to : 1
to be taken -> into : 1
be taken into -> account : 1
taken into account -> by : 1
into account by -> a : 1
account by a -> modern : 1
by a modern -> is : 1
a modern is -> not : 1
modern is not -> possible : 1
to set thread -> affinity : 1
set thread affinity -> in : 1
thread affinity in -> a : 1
affinity in a -> portable : 1
in a portable -> way : 1
a portable way -> with : 1
a portable way -> of : 1
portable way with -> the : 1
way with the -> current : 1
the current but -> most : 1
current but most -> platforms : 1
but most platforms -> support : 1
most platforms support -> some : 1
platforms support some -> way : 1
support some way -> of : 1
of setting an -> affinity : 1
setting an affinity -> mask : 1
an affinity mask -> on : 1
affinity mask on -> a : 1
affinity mask on -> int : 1
mask on a -> in : 1
on a in -> order : 1
a in order -> to : 2
order to access -> you : 1
to access you -> need : 1
access you need -> to : 1
need to get -> a : 1
handle on the -> native : 1
on the native -> the : 1
the native the -> example : 1
native the example -> ahead : 1
the example ahead -> demonstrates : 1
example ahead demonstrates -> how : 1
ahead demonstrates how -> to : 1
how to set -> the : 1
to set the -> thread : 1
set the thread -> affinity : 1
the thread affinity -> mask : 1
thread affinity mask -> on : 1
mask on int -> this : 1
on int this -> is : 1
int this is -> not : 1
is not portable -> but : 1
not portable but -> it : 1
portable but it -> is : 1
that you need -> to : 1
do some configuration -> of : 1
some configuration of -> threads : 1
configuration of threads -> if : 1
of threads if -> you : 1
threads if you -> are : 1
are doing concurrency -> or : 1
doing concurrency or -> destructive : 1
concurrency or destructive -> can : 1
or destructive can -> degrade : 1
destructive can degrade -> it : 1
can degrade it -> occurs : 1
degrade it occurs -> when : 1
it occurs when -> two : 1
two threads use -> some : 1
threads use some -> data : 1
use some data -> is : 1
some data is -> not : 1
data is not -> logically : 1
is not logically -> shared : 1
not logically shared -> between : 1
logically shared between -> the : 1
shared between the -> but : 1
between the but -> happen : 1
the but happen -> to : 1
but happen to -> be : 1
happen to be -> located : 1
the same cache -> imagine : 1
the same cache -> since : 1
the same cache -> line : 1
same cache imagine -> what : 1
cache imagine what -> would : 1
imagine what would -> happen : 1
if the two -> threads : 1
executing on different -> cores : 1
on different cores -> and : 1
different cores and -> constantly : 1
cores and constantly -> update : 1
and constantly update -> the : 1
constantly update the -> variable : 1
update the variable -> that : 1
the variable that -> resides : 1
variable that resides -> on : 1
that resides on -> the : 1
resides on the -> shared : 1
on the shared -> cache : 1
the shared cache -> the : 1
shared cache the -> threads : 1
cache the threads -> will : 1
the threads will -> invalidate : 1
threads will invalidate -> the : 1
will invalidate the -> cache : 1
invalidate the cache -> line : 1
the cache line -> for : 1
cache line for -> each : 1
line for each -> other : 1
each other although -> there : 1
other although there -> is : 1
is no true -> sharing : 1
no true sharing -> of : 1
true sharing of -> data : 1
sharing of data -> between : 1
of data between -> the : 1
between the sharing -> will : 1
the sharing will -> most : 1
sharing will most -> likely : 1
most likely occur -> when : 1
likely occur when -> using : 1
occur when using -> global : 1
when using global -> data : 1
using global data -> or : 1
global data or -> data : 1
data or data -> that : 1
or data that -> is : 1
that is shared -> between : 2
is shared between -> an : 1
is shared between -> but : 1
shared between an -> example : 1
between an example -> where : 1
an example where -> false : 1
example where false -> sharing : 1
where false sharing -> is : 1
false sharing is -> likely : 1
sharing is likely -> to : 1
likely to occur -> is : 1
occur is when -> allocating : 1
is when allocating -> an : 1
when allocating an -> array : 1
allocating an array -> that : 1
array that is -> shared : 1
shared between but -> each : 1
between but each -> thread : 1
but each thread -> is : 1
each thread is -> only : 1
thread is only -> using : 1
is only using -> a : 1
only using a -> single : 1
using a single -> element : 1
a single element -> of : 1
single element of -> the : 1
of the solution -> to : 1
solution to this -> problem : 1
this problem is -> to : 1
problem is to -> pad : 1
is to pad -> each : 1
to pad each -> element : 1
pad each element -> in : 1
the array so -> that : 1
array so that -> two : 1
so that two -> adjacent : 1
that two adjacent -> elements : 1
two adjacent elements -> cannot : 1
adjacent elements cannot -> reside : 1
elements cannot reside -> on : 1
cannot reside on -> the : 1
reside on the -> same : 1
same cache since -> there : 1
cache since there -> is : 1
since there is -> a : 1
is a portable -> way : 1
portable way of -> doing : 1
way of doing -> this : 1
of doing this -> using : 1
doing this using -> defined : 1
this using defined -> in : 1
using defined in -> in : 1
defined in in -> combination : 1
in in combination -> with : 1
in combination with -> the : 1
combination with the -> the : 1
with the the -> following : 1
create an element -> that : 1
an element that -> prevents : 1
element that prevents -> false : 1
that prevents false -> element : 1
prevents false element -> int : 1
false element int -> auto : 1
element int auto -> elements : 1
int auto elements -> elements : 1
auto elements elements -> in : 1
elements elements in -> the : 1
the vector are -> now : 1
vector are now -> guaranteed : 1
are now guaranteed -> to : 1
now guaranteed to -> reside : 1
guaranteed to reside -> on : 1
to reside on -> separate : 1
reside on separate -> cache : 1
on separate cache -> this : 1
separate cache this -> we : 1
cache this we -> have : 1
seen how to -> create : 1
seen how to -> avoid : 1
to create programs -> that : 1
create programs that -> can : 1
programs that can -> execute : 1
execute multiple threads -> we : 1
multiple threads we -> have : 1
threads we have -> seen : 1
how to avoid -> data : 1
data races by -> protecting : 1
races by protecting -> critical : 1
by protecting critical -> sections : 1
critical sections with -> locks : 1
sections with locks -> or : 1
with locks or -> by : 1
locks or by -> using : 1
or by using -> we : 1
by using we -> have : 1
using we have -> looked : 1
we have looked -> into : 1
have looked into -> execution : 1
looked into execution -> order : 1
into execution order -> and : 1
execution order and -> the : 1
order and the -> memory : 1
the memory which -> becomes : 1
memory which becomes -> important : 1
which becomes important -> to : 1
becomes important to -> understand : 1
to understand when -> writing : 1
understand when writing -> we : 1
when writing we -> have : 1
writing we have -> seen : 1
seen that immutable -> data : 1
structures are the -> chapter : 1
are the chapter -> ended : 1
the chapter ended -> with : 1
chapter ended with -> improving : 1
ended with improving -> the : 1
with improving the -> performance : 1
improving the performance -> in : 1
the performance in -> concurrent : 1
performance in concurrent -> this : 1
in concurrent this -> you : 1
concurrent this you -> will : 1
use the graphical -> processing : 1
the graphical processing -> unit : 1
graphical processing unit -> for : 1
processing unit for -> computationally : 1
unit for computationally -> heavy : 1
for computationally heavy -> we : 1
computationally heavy we -> will : 1
heavy we will -> use : 1
use the excellent -> which : 1
the excellent which -> exposes : 1
excellent which exposes -> the : 1
which exposes the -> gpu : 1
exposes the gpu -> via : 1
gpu via an -> interface : 1
via an interface -> that : 1
an interface that -> resembles : 1
interface that resembles -> the : 1
that resembles the -> meaning : 1
resembles the meaning -> that : 1
you will move -> your : 1
will move your -> standard : 1
move your standard -> code : 1
your standard code -> almost : 1
standard code almost -> seamlessly : 1
code almost seamlessly -> from : 1
almost seamlessly from -> the : 1
seamlessly from the -> cpu : 1
cpu to the -> chapter : 1
the chapter is -> not : 1
is not going -> to : 1
not going to -> go : 1
going to go -> in : 1
to go in -> depth : 1
go in depth -> into : 1
in depth into -> theories : 1
depth into theories -> of : 1
into theories of -> parallelizing : 1
theories of parallelizing -> algorithms : 1
of parallelizing algorithms -> or : 1
parallelizing algorithms or -> parallel : 1
algorithms or parallel -> programming : 1
or parallel programming -> in : 1
parallel programming in -> as : 1
programming in as -> these : 1
in as these -> subjects : 1
as these subjects -> are : 1
these subjects are -> far : 1
subjects are far -> too : 1
are far too -> complex : 1
far too complex -> to : 1
too complex to -> cover : 1
complex to cover -> in : 1
to cover in -> a : 1
cover in a -> single : 1
in a single -> there : 1
a single there -> is : 1
single there is -> a : 1
is a multitude -> of : 1
multitude of books -> on : 1
of books on -> this : 1
books on this -> this : 1
on this this -> chapter : 1
chapter is going -> to : 1
is going to -> take : 1
take a more -> practical : 1
a more practical -> approach : 1
more practical approach -> and : 1
practical approach and -> demonstrate : 1
approach and demonstrate -> how : 1
and demonstrate how -> to : 1
how to extend -> a : 1
to extend a -> current : 1
extend a current -> code : 1
a current code -> base : 1
current code base -> to : 1
base to utilize -> parallelism : 1
to utilize parallelism -> while : 1
utilize parallelism while -> preserving : 1
parallelism while preserving -> the : 1
preserving the readability -> of : 1
the code other -> we : 1
code other we -> do : 1
other we do -> not : 1
want the parallelism -> to : 2
the parallelism to -> get : 1
the parallelism to -> be : 1
parallelism to get -> in : 1
to get in -> the : 1
get in the -> way : 1
in the way -> of : 1
way of we -> want : 1
of we want -> the : 1
parallelism to be -> abstracted : 1
to be abstracted -> away : 1
be abstracted away -> so : 1
abstracted away so -> that : 1
away so that -> parallelizing : 1
so that parallelizing -> the : 1
that parallelizing the -> code : 1
parallelizing the code -> is : 1
code is only -> a : 1
only a matter -> of : 2
a matter of -> changing : 1
a matter of -> adding : 1
matter of changing -> a : 1
of changing a -> parameter : 1
changing a parameter -> to : 1
a parameter to -> an : 1
parameter to an -> earlier : 1
to an earlier -> we : 1
an earlier we -> have : 1
earlier we have -> stressed : 1
we have stressed -> that : 1
have stressed that -> we : 1
stressed that we -> prefer : 1
that we prefer -> stl : 1
we prefer stl -> algorithms : 1
prefer stl algorithms -> over : 1
over handcrafted in -> this : 1
handcrafted in this -> we : 1
will see some -> great : 1
see some great -> advantages : 1
some great advantages -> of : 1
great advantages of -> using : 1
of using will -> start : 1
using will start -> this : 1
this chapter off -> by : 1
chapter off by -> looking : 1
off by looking -> at : 1
a few parallel -> implementations : 1
few parallel implementations -> of : 1
parallel implementations of -> standard : 1
implementations of standard -> and : 1
of standard and -> the : 1
standard and the -> added : 1
and the added -> complexity : 1
the added complexity -> of : 1
added complexity of -> writing : 1
writing parallel versions -> of : 1
parallel versions of -> we : 1
parallel versions of -> but : 1
parallel versions of -> the : 1
versions of we -> will : 1
will then go -> on : 1
then go on -> to : 1
go on to -> see : 1
on to see -> how : 1
we can adapt -> a : 1
can adapt a -> code : 1
adapt a code -> base : 1
base to use -> the : 1
use the parallel -> extensions : 1
use the parallel -> power : 1
use the parallel -> versions : 1
parallel extensions of -> and : 1
extensions of and -> finally : 1
of and finally -> we : 1
and finally we -> will : 1
finally we will -> take : 1
take a brief -> look : 1
use the capabilities -> of : 1
the capabilities of -> the : 1
capabilities of the -> gpu : 1
of the gpu -> in : 1
of the gpu -> is : 1
the gpu in -> a : 1
gpu in a -> simple : 1
a simple way -> by : 1
simple way by -> using : 1
by using boost -> compute : 1
using boost compute -> and : 1
using boost compute -> only : 1
boost compute and -> of : 1
boost compute and -> stl : 1
boost compute and -> namespace : 1
boost compute and -> invoke : 1
compute and of -> a : 1
and of a -> it : 1
have been very -> convenient : 1
been very convenient -> if : 1
very convenient if -> the : 1
convenient if the -> computer : 1
if the computer -> hardware : 1
the computer hardware -> of : 1
computer hardware of -> today : 1
hardware of today -> had : 1
of today had -> been : 1
today had been -> a : 1
had been a -> ghz : 1
been a ghz -> single : 1
a ghz single -> core : 1
ghz single core -> cpu : 1
single core cpu -> rather : 1
core cpu rather -> than : 1
cpu rather than -> a : 1
than a three -> gigahertz : 1
a three gigahertz -> and : 1
three gigahertz and -> we : 1
gigahertz and we -> need : 1
need to care -> about : 1
to care about -> as : 1
care about as -> the : 1
about as the -> evolution : 1
as the evolution -> of : 1
evolution of computer -> hardware : 1
of computer hardware -> is : 1
computer hardware is -> going : 1
hardware is going -> in : 1
is going in -> the : 1
in the direction -> of : 1
the direction of -> programmers : 1
direction of programmers -> have : 1
of programmers have -> to : 1
to use efficient -> parallel : 1
use efficient parallel -> patterns : 1
efficient parallel patterns -> in : 1
parallel patterns in -> order : 1
make the most -> out : 1
of the mentioned -> in : 1
the mentioned in -> with : 1
mentioned in with -> parallelism : 1
in with parallelism -> we : 1
with parallelism we -> refer : 1
parallelism we refer -> to : 1
refer to programming -> that : 1
to programming that -> takes : 1
programming that takes -> advantage : 1
that takes advantage -> of : 1
takes advantage of -> hardware : 1
advantage of hardware -> with : 1
of hardware with -> multiple : 1
hardware with multiple -> it : 1
with multiple it -> makes : 1
multiple it makes -> no : 1
it makes no -> sense : 1
makes no sense -> to : 1
no sense to -> parallelize : 1
sense to parallelize -> algorithms : 1
parallelize algorithms if -> the : 1
algorithms if the -> hardware : 1
if the hardware -> does : 1
the hardware does -> not : 1
hardware does not -> provide : 1
not provide any -> of : 1
provide any of -> the : 1
of the benefits -> of : 1
benefits of a -> parallel : 1
of a parallel -> algorithm : 1
parallel algorithm equivalent -> of : 1
algorithm equivalent of -> a : 1
algorithm equivalent of -> an : 1
equivalent of a -> sequential : 1
equivalent of a -> but : 1
equivalent of a -> regular : 1
of a sequential -> algorithm : 1
a sequential algorithm -> is : 1
sequential algorithm is -> algorithmically : 1
algorithm is algorithmically -> slower : 1
is algorithmically slower -> than : 1
algorithmically slower than -> the : 1
slower than the -> its : 1
than the its -> benefits : 1
the its benefits -> come : 1
its benefits come -> from : 1
benefits come from -> the : 1
come from the -> ability : 1
ability to spread -> the : 1
to spread the -> algorithms : 1
spread the algorithms -> onto : 1
the algorithms onto -> several : 1
algorithms onto several -> processing : 1
onto several processing -> that : 1
several processing that -> in : 1
processing that in -> also : 1
that in also -> notable : 1
in also notable -> that : 1
also notable that -> not : 1
notable that not -> all : 1
that not all -> algorithms : 1
not all algorithms -> gain : 1
all algorithms gain -> the : 1
algorithms gain the -> same : 1
gain the same -> performance : 1
the same performance -> increase : 1
same performance increase -> when : 1
performance increase when -> run : 1
increase when run -> in : 1
when run in -> as : 1
run in as -> a : 1
in as a -> simple : 1
a simple measurement -> of : 1
simple measurement of -> how : 1
measurement of how -> well : 1
how well an -> algorithm : 1
well an algorithm -> we : 1
well an algorithm -> parallelizes : 1
an algorithm we -> can : 1
algorithm we can -> the : 1
we can the -> time : 1
can the time -> it : 1
takes to execute -> sequentially : 1
takes to execute -> in : 1
to execute sequentially -> at : 1
to execute sequentially -> if : 1
execute sequentially at -> one : 1
sequentially at one -> cpu : 1
at one cpu -> core : 1
one cpu core -> the : 1
cpu core the -> time : 1
core the time -> it : 1
execute in multiplied -> by : 1
in multiplied by -> the : 1
multiplied by the -> number : 1
number of cores -> a : 1
number of cores -> in : 2
of cores a -> and : 1
cores a and -> b : 1
a and b -> are : 1
and b are -> the : 1
b are the -> algorithm : 1
are the algorithm -> parallelizes : 1
the algorithm parallelizes -> and : 1
algorithm parallelizes and -> the : 1
parallelizes and the -> larger : 1
and the larger -> b : 1
the larger b -> is : 1
larger b is -> compared : 1
b is compared -> to : 1
to the worse -> the : 1
the worse the -> algorithm : 1
worse the algorithm -> well : 1
the algorithm well -> an : 1
algorithm well an -> algorithm : 1
an algorithm parallelizes -> depends : 1
algorithm parallelizes depends -> on : 1
parallelizes depends on -> how : 1
depends on how -> independently : 1
on how independently -> each : 1
how independently each -> element : 1
independently each element -> can : 1
each element can -> be : 1
element can be -> for : 1
can be for -> is : 1
be for is -> trivial : 1
for is trivial -> to : 1
is trivial to -> parallelize : 1
trivial to parallelize -> in : 1
to parallelize in -> the : 1
parallelize in the -> sense : 1
sense that each -> element : 1
each element is -> processed : 1
element is processed -> completely : 1
is processed completely -> independent : 1
processed completely independent -> of : 1
completely independent of -> every : 1
independent of every -> this : 1
of every this -> means : 1
every this means -> that : 1
means that for -> of : 1
that for of -> it : 1
for of it -> would : 1
of it would -> execute : 1
it would execute -> times : 1
would execute times -> as : 1
execute times as -> fast : 1
times as fast -> as : 1
times as fast -> at : 1
fast as a -> sequential : 1
as a sequential -> in : 1
a sequential in -> there : 1
sequential in there -> are : 1
there are a -> multitude : 1
are a multitude -> of : 1
multitude of parameters -> that : 1
of parameters that -> limit : 1
parameters that limit -> parallel : 1
that limit parallel -> execution : 1
limit parallel execution -> such : 1
parallel execution such -> as : 1
execution such as -> creating : 1
such as creating -> context : 1
as creating context -> and : 1
creating context and -> so : 1
context and so -> as : 1
and so as -> mentioned : 1
so as mentioned -> in : 1
mentioned in in -> parallel : 1
in in parallel -> algorithms : 1
in parallel algorithms -> always : 1
parallel algorithms always -> have : 1
algorithms always have -> a : 1
always have a -> higher : 1
have a higher -> computational : 1
a higher computational -> cost : 1
higher computational cost -> than : 1
computational cost than -> their : 1
cost than their -> sequential : 1
than their sequential -> there : 1
their sequential there -> are : 1
sequential there are -> some : 1
there are some -> cases : 1
there are some -> noteworthy : 1
are some cases -> where : 1
some cases where -> you : 1
where you may -> want : 1
you may want -> a : 1
may want a -> sequential : 1
want a sequential -> version : 1
a sequential version -> even : 1
sequential version even -> though : 1
version even though -> an : 1
even though an -> example : 1
though an example -> of : 1
example of such -> a : 1
of such a -> case : 1
such a case -> is : 1
a case is -> if : 1
case is if -> you : 1
you are optimizing -> for : 1
optimizing for low -> energy : 1
for low energy -> consumption : 1
low energy consumption -> rather : 1
energy consumption rather -> than : 1
consumption rather than -> low : 1
rather than low -> computational : 1
than low computational -> even : 1
low computational even -> though : 1
computational even though -> this : 1
even though this -> is : 1
is probably a -> very : 1
probably a very -> rare : 1
a very rare -> case : 1
very rare case -> a : 1
rare case a -> it : 1
case a it -> might : 1
a it might -> be : 1
be worth parallel -> algorithmically : 1
worth parallel algorithmically -> is : 1
parallel algorithmically is -> easy : 1
algorithmically is easy -> to : 1
easy to in -> practice : 1
to in practice -> implementing : 1
in practice implementing -> even : 1
practice implementing even -> a : 1
implementing even a -> rudimentary : 1
even a rudimentary -> parallel : 1
a rudimentary parallel -> version : 1
rudimentary parallel version -> is : 1
parallel version is -> more : 1
parallel version is -> five : 1
version is more -> complex : 1
is more complex -> than : 1
more complex than -> it : 1
complex than it -> might : 1
than it might -> appear : 1
it might appear -> at : 1
might appear at -> first : 1
appear at first -> naive : 1
at first naive -> parallel : 1
first naive parallel -> implementation : 1
naive parallel implementation -> of : 1
parallel implementation of -> would : 1
implementation of would -> probably : 1
of would probably -> look : 1
would probably look -> something : 1
probably look something -> like : 1
like the elements -> into : 1
the elements into -> chunks : 1
elements into chunks -> corresponding : 1
into chunks corresponding -> to : 1
chunks corresponding to -> the : 1
of cores in -> the : 2
cores in the -> each : 1
cores in the -> this : 1
in the each -> chunk : 1
the each chunk -> in : 1
each chunk in -> a : 1
chunk in a -> separate : 1
a separate task -> in : 1
separate task in -> for : 1
task in for -> all : 1
in for all -> tasks : 1
for all tasks -> to : 1
all tasks to -> to : 1
tasks to to -> determine : 1
to to determine -> the : 1
number of supported -> hardware : 1
of supported hardware -> a : 1
supported hardware a -> naive : 1
hardware a naive -> implementation : 1
naive implementation could -> look : 1
implementation could look -> like : 1
look like note -> that : 1
like note that -> might : 1
note that might -> return : 1
that might return -> if : 1
might return if -> it : 1
return if it -> for : 1
if it for -> some : 1
it for some -> reason : 1
some reason is -> and : 1
reason is and -> therefore : 1
and therefore it -> is : 1
therefore it is -> clamped : 1
it is clamped -> to : 1
is clamped to -> be : 1
clamped to be -> at : 1
to be at -> least : 1
be at least -> typename : 1
at least typename -> typename : 1
least typename typename -> srcit : 1
typename typename srcit -> dstit : 1
typename typename srcit -> srcit : 1
typename srcit dstit -> func : 1
srcit dstit func -> auto : 2
dstit func auto -> n : 2
func auto n -> auto : 2
n auto auto -> auto : 1
n auto auto -> transform : 1
auto auto futures -> invoke : 1
auto futures invoke -> each : 1
futures invoke each -> chunk : 1
invoke each chunk -> on : 1
each chunk on -> a : 1
chunk on a -> to : 1
on a to -> be : 1
a to be -> executed : 1
be executed in -> for : 1
be executed in -> order : 1
executed in for -> auto : 1
in for auto -> auto : 1
for auto auto -> auto : 1
for auto auto -> future : 1
for auto auto -> make : 1
auto auto fut -> wait : 1
auto fut wait -> for : 1
fut wait for -> each : 1
wait for each -> task : 1
for each task -> to : 1
each task to -> for : 1
task to for -> fut : 1
to for fut -> the : 1
for fut the -> naive : 1
fut the naive -> measure : 1
the naive measure -> its : 1
naive measure its -> performance : 1
measure its performance -> with : 1
its performance with -> a : 1
performance with a -> naive : 1
with a naive -> performance : 1
a naive performance -> evaluation : 1
naive performance evaluation -> compared : 1
performance evaluation compared -> to : 1
evaluation compared to -> a : 1
to a single -> cpu : 1
single cpu measure -> two : 1
cpu measure two -> elements : 1
measure two elements -> with : 1
two elements with -> an : 1
elements with an -> elements : 1
elements with an -> inexpensive : 1
with an elements -> with : 1
an elements with -> an : 1
with an inexpensive -> function : 1
an inexpensive function -> called : 1
inexpensive function called -> following : 1
function called following -> code : 1
called following code -> processes : 1
following code processes -> a : 2
code processes a -> low : 1
code processes a -> high : 1
processes a low -> number : 1
a low number -> of : 1
low number of -> elements : 3
of elements with -> the : 4
with the transform -> low : 1
the transform low -> number : 1
transform low number -> of : 1
of elements heavy -> transform : 1
elements heavy transform -> auto : 1
heavy transform auto -> auto : 1
transform auto auto -> sum : 2
sum for i -> i : 2
i i sum -> return : 4
i sum return -> auto : 2
i sum return -> n : 1
i sum return -> execute : 1
sum return auto -> auto : 2
auto auto n -> auto : 2
n auto src -> auto : 2
auto src auto -> dst : 3
src auto dst -> following : 2
src auto dst -> make : 1
auto dst following -> code : 1
auto dst following -> table : 1
dst following code -> processes : 1
processes a high -> number : 1
a high number -> of : 2
high number of -> elements : 3
with the inexpensive -> transform : 1
with the inexpensive -> is : 1
the inexpensive transform -> high : 1
inexpensive transform high -> number : 1
transform high number -> of : 1
of elements light -> transform : 1
elements light transform -> auto : 1
light transform auto -> auto : 1
dst following table -> shows : 1
shows the results -> for : 1
the results for -> low : 1
the results for -> a : 1
results for low -> number : 1
for low number -> of : 1
with the is -> up : 1
the is up -> is : 1
is up is -> parallelization : 1
is up is -> x : 1
up is parallelization -> is : 1
is parallelization is -> perfect : 1
parallelization is perfect -> as : 1
is perfect as -> it : 1
perfect as it -> is : 1
it is approximately -> eight : 1
is approximately eight -> times : 1
approximately eight times -> as : 1
eight times as -> fast : 1
as fast at -> an : 1
fast at an -> perfect : 1
at an perfect -> this : 1
an perfect this -> is : 1
perfect this is -> very : 1
is very but -> under : 1
very but under -> certain : 1
but under certain -> conditions : 1
certain conditions where -> memory : 1
conditions where memory -> access : 1
where memory access -> is : 1
memory access is -> not : 1
access is not -> a : 1
not a bottle -> it : 1
a bottle it -> is : 1
bottle it is -> are : 1
it is are -> the : 1
is are the -> results : 1
are the results -> for : 1
results for a -> high : 1
for a high -> number : 1
the inexpensive is -> up : 1
inexpensive is up -> is : 1
up is x -> x : 1
is x x -> parallel : 1
x x parallel -> version : 1
x parallel version -> is : 1
version is five -> times : 1
is five times -> as : 1
five times as -> which : 1
times as which -> is : 1
as which is -> roughly : 1
which is roughly -> what : 1
is roughly what -> a : 1
roughly what a -> parallelization : 1
what a parallelization -> of : 1
a parallelization of -> at : 1
parallelization of at -> eight : 1
of at eight -> cores : 1
at eight cores -> usually : 1
eight cores usually -> ends : 1
cores usually ends -> up : 1
usually ends up -> as : 1
ends up as -> the : 1
up as the -> parallelization : 1
as the parallelization -> is : 1
the parallelization is -> affected : 1
parallelization is affected -> by : 1
is affected by -> a : 1
affected by a -> lot : 1
by a lot -> of : 1
lot of external -> parameters : 1
of external parameters -> such : 1
external parameters such -> as : 1
parameters such as -> memory : 1
as memory as -> discussed : 1
memory as discussed -> of : 1
as discussed of -> the : 1
discussed of the -> naive : 1
the naive naive -> implementation : 1
naive naive implementation -> might : 1
implementation might do -> a : 1
might do a -> good : 1
do a good -> job : 1
a good job -> if : 1
good job if -> we : 1
job if we -> are : 1
are the only -> application : 1
the only application -> utilizing : 1
only application utilizing -> the : 1
application utilizing the -> and : 1
utilizing the and -> transforming : 1
the and transforming -> each : 1
and transforming each -> chunk : 1
transforming each chunk -> has : 1
each chunk has -> the : 1
chunk has the -> same : 1
the same computational -> this : 1
same computational this -> is : 1
computational this is -> rarely : 1
this is rarely -> the : 1
is rarely the -> we : 1
rarely the we -> want : 1
we want a -> good : 1
want a good -> general : 1
a good general -> purpose : 2
good general purpose -> parallel : 1
good general purpose -> implementation : 1
general purpose parallel -> following : 1
purpose parallel following -> illustrations : 1
parallel following illustrations -> show : 1
following illustrations show -> the : 1
illustrations show the -> problems : 1
show the problems -> we : 1
the problems we -> want : 1
problems we want -> to : 1
want to if -> the : 1
if the computational -> cost : 1
the computational cost -> is : 1
computational cost is -> not : 1
cost is not -> equivalent : 1
is not equivalent -> for : 1
not equivalent for -> each : 1
equivalent for each -> the : 1
for each the -> implementation : 1
each the implementation -> is : 1
implementation is limited -> to : 1
is limited to -> the : 1
to the chunk -> the : 1
the chunk the -> most : 1
chunk the most -> cdpaligncenter : 1
the most cdpaligncenter -> scenarios : 1
most cdpaligncenter scenarios -> where : 1
cdpaligncenter scenarios where -> computation : 2
scenarios where computation -> time : 2
where computation time -> is : 2
computation time is -> not : 1
computation time is -> proportional : 1
time is not -> proportional : 1
is not proportional -> to : 1
not proportional to -> chunk : 1
proportional to chunk -> the : 1
proportional to chunk -> you : 1
to chunk the -> application : 1
chunk the application -> the : 1
application the operating -> system : 1
operating system has -> other : 1
system has other -> processes : 1
has other processes -> to : 1
other processes to -> the : 1
processes to the -> operation : 1
to the operation -> will : 1
operation will not -> process : 1
will not process -> all : 1
not process all -> chunks : 1
process all chunks -> in : 1
all chunks in -> cdpaligncenter : 1
chunks in cdpaligncenter -> cdpaligncenter : 1
cdpaligncenter cdpaligncenter scenarios -> where : 1
time is proportional -> to : 1
is proportional to -> chunk : 1
to chunk you -> can : 1
chunk you can -> splitting : 1
you can splitting -> the : 1
can splitting the -> operation : 1
splitting the operation -> into : 1
the operation into -> smaller : 1
operation into smaller -> chunks : 1
into smaller chunks -> makes : 1
smaller chunks makes -> the : 1
chunks makes the -> parallelization : 1
makes the parallelization -> adjust : 1
the parallelization adjust -> to : 1
parallelization adjust to -> the : 1
adjust to the -> current : 1
the current avoiding -> single : 1
current avoiding single -> tasks : 1
avoiding single tasks -> that : 1
single tasks that -> stall : 1
tasks that stall -> the : 1
that stall the -> whole : 1
stall the whole -> and : 1
the whole and -> order : 1
whole and order -> to : 1
get a good -> general : 1
general purpose implementation -> of : 1
purpose implementation of -> the : 1
of the parallel -> we : 1
parallel we divide -> the : 1
we divide the -> range : 1
divide the range -> recursively : 1
the range recursively -> into : 1
range recursively into -> smaller : 1
recursively into smaller -> sometimes : 1
into smaller sometimes -> referred : 1
smaller sometimes referred -> to : 1
sometimes referred to -> as : 1
to as and -> works : 1
as and works -> as : 1
and works as -> input : 1
works as input -> range : 1
as input range -> is : 1
input range is -> divided : 1
input range is -> smaller : 1
range is divided -> into : 1
range is divided -> recursively : 1
is divided into -> two : 1
divided into two -> if : 1
into two if -> the : 1
two if the -> input : 1
if the input -> range : 1
the input range -> is : 1
range is smaller -> than : 1
is smaller than -> a : 1
smaller than a -> specified : 1
than a specified -> the : 1
specified the range -> is : 1
range is or -> else : 1
is or else -> the : 1
or else the -> range : 1
else the range -> is : 1
range is split -> into : 1
is split into -> two : 1
is split into -> the : 1
split into two -> part : 1
split into two -> the : 1
into two part -> is : 1
two part is -> branched : 1
part is branched -> to : 1
is branched to -> another : 1
branched to another -> task : 1
to another task -> recursively : 1
another task recursively -> processed : 1
task recursively processed -> at : 1
recursively processed at -> that : 1
recursively processed at -> the : 1
processed at that -> part : 1
at that part -> is : 1
that part is -> recursively : 1
part is recursively -> processed : 1
is recursively processed -> at : 1
processed at the -> calling : 1
at the calling -> following : 1
the calling following -> illustration : 1
calling following illustration -> shows : 1
following illustration shows -> how : 1
illustration shows how -> it : 1
shows how it -> would : 1
it would recursively -> transform : 1
would recursively transform -> a : 1
recursively transform a -> range : 1
transform a range -> with : 1
a range with -> the : 1
range with the -> following : 1
the following return -> cdpaligncenter : 1
following return cdpaligncenter -> cdpaligncenter : 1
return cdpaligncenter cdpaligncenter -> range : 1
cdpaligncenter cdpaligncenter range -> is : 1
cdpaligncenter range is -> divided : 1
is divided recursively -> for : 1
divided recursively for -> parallel : 1
recursively for parallel -> quite : 1
for parallel quite -> a : 1
parallel quite a -> small : 1
quite a small -> bit : 1
a small bit -> of : 1
small bit of -> the : 1
bit of the -> incoming : 1
of the incoming -> range : 1
the incoming range -> is : 1
incoming range is -> recursively : 1
range is recursively -> split : 1
is recursively split -> into : 1
recursively split into -> two : 1
into two the -> first : 1
into two the -> conditional : 1
two the first -> chunk : 1
the first chunk -> is : 1
first chunk is -> recursively : 1
chunk is recursively -> invoked : 1
is recursively invoked -> as : 1
recursively invoked as -> a : 1
invoked as a -> new : 1
a new and -> the : 1
new and the -> second : 1
the second chunk -> is : 1
second chunk is -> processed : 1
chunk is processed -> on : 1
is processed on -> the : 1
processed on the -> same : 1
the same typename -> typename : 1
same typename typename -> auto : 1
n if const -> auto : 1
if const auto -> branch : 1
const auto branch -> of : 1
auto branch of -> first : 1
branch of first -> part : 1
of first part -> to : 1
first part to -> another : 1
part to another -> auto : 1
to another auto -> future : 1
another auto future -> recursively : 1
auto future recursively -> handle : 1
future recursively handle -> the : 1
recursively handle the -> second : 1
handle the second -> const : 1
the second const -> auto : 1
second const auto -> we : 1
const auto we -> create : 1
auto we create -> rather : 1
we create rather -> more : 1
create rather more -> time : 1
rather more time -> depending : 1
more time depending -> on : 1
time depending on -> the : 1
range of increasing -> values : 1
of increasing values -> using : 1
increasing values using -> like : 1
values using like -> auto : 1
using like auto -> auto : 1
like auto auto -> sum : 1
like auto auto -> indices : 1
auto sum auto -> v : 1
auto sum auto -> end : 1
sum auto v -> the : 1
v the larger -> the : 1
larger the more -> to : 1
the more to -> for : 1
more to for -> i : 1
to for i -> i : 1
sum return n -> src : 1
return n src -> goes : 1
n src goes -> from : 1
src goes from -> to : 1
goes from to -> we : 1
from to we -> evaluate : 1
to we evaluate -> them : 1
we evaluate them -> with : 1
evaluate them with -> different : 1
them with different -> chunk : 1
with different chunk -> as : 1
different chunk as -> well : 1
chunk as well -> as : 1
well as and -> the : 1
and the old -> we : 1
the old we -> get : 1
old we get -> the : 1
the following computation -> of : 1
following computation of -> n : 1
computation of n -> cdpaligncenter : 1
of n cdpaligncenter -> time : 1
n cdpaligncenter time -> using : 1
cdpaligncenter time using -> different : 1
time using different -> chunk : 2
using different chunk -> the : 1
using different chunk -> sizes : 1
different chunk the -> table : 1
chunk the table -> the : 1
the table the -> best : 1
table the best -> performance : 1
the best performance -> in : 1
best performance in -> this : 1
this case lies -> around : 1
case lies around -> chunk : 1
lies around chunk -> sizes : 1
around chunk sizes -> of : 1
chunk sizes of -> with : 1
sizes of with -> larger : 1
of with larger -> the : 1
with larger the -> performance : 1
larger the performance -> is : 1
the performance is -> bottlenecked : 1
the performance is -> how : 1
the performance is -> vastly : 1
performance is bottlenecked -> in : 1
is bottlenecked in -> the : 1
bottlenecked in the -> time : 1
takes to process -> the : 1
to process the -> final : 1
process the final -> whereas : 1
the final whereas -> too : 1
final whereas too -> small : 1
whereas too small -> chunks : 1
too small chunks -> results : 1
small chunks results -> in : 1
chunks results in -> too : 1
results in too -> much : 1
in too much -> overhead : 1
too much overhead -> in : 1
much overhead in -> creating : 1
overhead in creating -> and : 1
in creating and -> invoking : 1
creating and invoking -> tasks : 1
and invoking tasks -> compared : 1
invoking tasks compared -> to : 1
tasks compared to -> the : 1
as mentioned this -> implementation : 1
mentioned this implementation -> is : 1
this implementation is -> rather : 1
implementation is rather -> rudimentary : 1
is rather rudimentary -> as : 1
rather rudimentary as -> it : 1
rudimentary as it -> simply : 1
as it simply -> allocates : 1
it simply allocates -> all : 1
simply allocates all -> the : 1
allocates all the -> tasks : 1
all the tasks -> in : 1
the tasks in -> one : 1
tasks in one -> big : 1
in one big -> but : 1
one big but -> the : 1
big but the -> outcome : 1
but the outcome -> is : 1
the outcome is -> still : 1
outcome is still -> worth : 1
is still worth -> pointing : 1
still worth pointing -> a : 1
worth pointing a -> chunk : 1
pointing a chunk -> size : 1
a chunk size -> around : 1
chunk size around -> elements : 1
size around elements -> seems : 1
around elements seems -> most : 1
elements seems most -> but : 1
seems most but -> how : 1
most but how -> much : 1
but how much -> would : 1
how much would -> this : 1
much would this -> affect : 1
would this affect -> a : 1
this affect a -> transformation : 1
affect a transformation -> where : 1
a transformation where -> each : 1
transformation where each -> computation : 1
where each computation -> takes : 1
each computation takes -> the : 1
computation takes the -> same : 1
takes the same -> amount : 1
the same amount -> of : 1
same amount of -> we : 1
amount of we -> change : 1
of we change -> the : 1
change the to -> have : 1
the to have -> a : 1
have a fixed -> computation : 1
a fixed computation -> regardless : 1
fixed computation regardless -> of : 1
computation regardless of -> its : 1
regardless of its -> like : 1
of its like -> auto : 1
its like auto -> sum : 1
like auto sum -> auto : 1
sum auto end -> for : 1
auto end for -> i : 1
end for i -> i : 1
sum return execute -> the : 1
return execute the -> code : 1
execute the code -> as : 1
the code as -> in : 1
previous we get -> the : 1
the following cdpalign -> of : 1
following cdpalign of -> n : 1
cdpalign of n -> computation : 1
of n computation -> time : 1
n computation time -> using : 1
computation time using -> different : 1
different chunk sizes -> fastest : 1
chunk sizes fastest -> although : 1
sizes fastest although -> is : 1
fastest although is -> the : 1
although is the -> function : 1
the function where -> the : 1
where the number -> of : 1
number of chunks -> corresponds : 1
of chunks corresponds -> to : 1
chunks corresponds to -> the : 1
this is expected -> as : 1
is expected as -> this : 1
expected as this -> code : 1
as this code -> is : 1
in a where -> the : 1
a where the -> cpu : 1
the cpu does -> more : 1
cpu does more -> or : 1
does more or -> less : 1
or less nothing -> more : 1
less nothing more -> than : 1
more than perform -> this : 1
than perform this -> important : 1
perform this important -> takeaway : 1
this important takeaway -> from : 1
important takeaway from -> this : 1
takeaway from this -> is : 1
from this is -> that : 1
that the performance -> penalty : 1
the performance penalty -> of : 1
performance penalty of -> scheduling : 1
penalty of scheduling -> smaller : 1
of scheduling smaller -> tasks : 1
scheduling smaller tasks -> rather : 1
smaller tasks rather -> than : 1
tasks rather than -> eight : 1
tasks rather than -> trying : 1
rather than eight -> big : 1
than eight big -> ones : 1
eight big ones -> is : 1
big ones is -> marginal : 1
ones is marginal -> enough : 1
is marginal enough -> to : 1
marginal enough to -> draw : 1
enough to draw -> the : 1
to draw the -> conclusion : 1
draw the conclusion -> that : 1
the conclusion that -> a : 1
conclusion that a -> generic : 1
that a generic -> implementation : 1
a generic implementation -> would : 1
generic implementation would -> be : 1
implementation would be -> wise : 1
would be wise -> to : 1
be wise to -> use : 1
wise to use -> a : 1
number of tasks -> rather : 1
number of tasks -> based : 1
of tasks rather -> than : 1
rather than trying -> to : 1
than trying to -> figure : 1
trying to figure -> out : 1
to figure out -> the : 1
figure out the -> correct : 1
out the correct -> number : 1
the correct number -> of : 1
correct number of -> tasks : 1
of tasks based -> on : 1
tasks based on -> the : 1
of cpu cores -> on : 1
cpu cores on -> the : 1
the other let -> the : 1
other let the -> scheduler : 1
let the scheduler -> involved : 1
the scheduler involved -> in : 1
scheduler involved in -> launching : 1
involved in launching -> an : 1
in launching an -> asynchronous : 1
launching an asynchronous -> task : 1
an asynchronous task -> do : 1
asynchronous task do -> the : 1
task do the -> parallel : 1
do the parallel -> can : 1
the parallel can -> easily : 1
parallel can easily -> use : 1
can easily use -> the : 1
easily use the -> same : 1
the same divide -> and : 1
same divide and -> conquer : 1
divide and conquer -> concept : 1
and conquer concept -> to : 1
conquer concept to -> implement : 1
concept to implement -> a : 1
implement a parallel -> version : 1
a parallel version -> of : 1
parallel version of -> with : 1
parallel version of -> simply : 1
version of with -> the : 1
of with the -> difference : 1
difference that we -> need : 1
need to accumulate -> the : 1
to accumulate the -> returned : 1
accumulate the returned -> value : 1
returned value like -> typename : 1
value like typename -> auto : 1
like typename auto -> it : 1
typename auto it -> pred : 1
auto it pred -> auto : 1
it pred auto -> n : 1
pred auto n -> if : 2
n if return -> auto : 1
return auto middle -> auto : 1
auto middle auto -> future : 1
middle auto future -> return : 1
auto future return -> auto : 1
auto future return -> outer : 1
future return auto -> num : 1
return auto num -> return : 1
auto num return -> num : 1
num return num -> parallel : 1
return num parallel -> had : 1
num parallel had -> a : 1
parallel had a -> look : 1
had a look -> at : 2
look at which -> are : 1
at which are -> quite : 1
which are quite -> easy : 1
are quite easy -> to : 1
quite easy to -> implement : 1
easy to implement -> both : 1
to implement both -> sequentially : 1
implement both sequentially -> and : 1
both sequentially and -> in : 1
sequentially and in -> if : 1
and in if -> we : 1
in if we -> take : 1
we take another -> algorithm : 1
take another algorithm -> that : 1
another algorithm that -> is : 1
algorithm that is -> easily : 1
that is easily -> implemented : 1
is easily implemented -> things : 1
easily implemented things -> get : 1
implemented things get -> a : 1
things get a -> lot : 1
get a lot -> harder : 1
lot harder to -> perform : 1
harder to perform -> in : 1
to perform in -> implementing : 1
perform in implementing -> as : 1
in implementing as -> easy : 1
implementing as easy -> as : 1
easy as typename -> typename : 1
as typename typename -> auto : 1
typename auto srcit -> dstit : 2
auto srcit dstit -> pred : 1
auto srcit dstit -> func : 1
srcit dstit pred -> it : 1
srcit dstit pred -> auto : 1
dstit pred it -> it : 1
pred it it -> return : 1
it return and -> used : 1
return and used -> like : 1
and used like -> vals : 1
used like vals -> auto : 1
like vals auto -> auto : 1
vals auto auto -> return : 1
return auto is -> points : 1
return auto is -> now : 1
auto is points -> to : 1
is points to -> the : 1
the first is -> if : 1
first is if -> we : 1
were to parallelize -> we : 1
to parallelize we -> immediately : 1
parallelize we immediately -> run : 1
we immediately run -> into : 1
immediately run into -> problems : 1
run into problems -> as : 1
into problems as -> we : 1
problems as we -> cannot : 1
as we cannot -> write : 1
we cannot write -> to : 1
cannot write to -> the : 1
write to the -> destination : 1
write to the -> same : 1
to the destination -> iterator : 1
the destination iterator -> this : 1
destination iterator this -> is : 1
iterator this is -> pure : 1
this is pure -> undefined : 1
is pure undefined -> both : 1
pure undefined both -> tasks : 1
undefined both tasks -> will : 1
both tasks will -> write : 1
tasks will write -> to : 1
will write to -> the : 1
the same template -> typename : 1
same template typename -> typename : 1
template typename typename -> auto : 1
n auto middle -> n : 1
auto middle n -> auto : 2
middle n auto -> return : 1
middle n auto -> future : 1
n auto return -> auto : 1
auto return just -> to : 1
return just to -> return : 1
just to return -> now : 1
to return now -> have : 1
return now have -> two : 1
now have two -> simple : 1
have two simple -> either : 1
two simple either -> we : 1
simple either we -> synchronize : 1
either we synchronize -> the : 1
we synchronize the -> index : 1
synchronize the index -> which : 1
the index which -> we : 1
index which we -> write : 1
which we write -> to : 1
we write to -> using : 1
write to using -> an : 1
to using an -> or : 1
using an or -> we : 1
an or we -> split : 1
or we split -> the : 1
split the algorithm -> into : 2
the algorithm into -> two : 2
two one use -> a : 1
synchronized write first -> approach : 1
write first approach -> one : 1
first approach one -> might : 1
approach one might -> consider : 1
one might consider -> is : 1
might consider is -> to : 1
consider is to -> synchronize : 1
is to synchronize -> the : 1
to synchronize the -> write : 1
synchronize the write -> position : 1
the write position -> by : 1
write position by -> using : 1
position by using -> an : 1
an atomic and -> the : 1
and the as -> learned : 1
the as learned -> whenever : 1
as learned whenever -> a : 1
learned whenever a -> thread : 1
whenever a thread -> tries : 1
a thread tries -> to : 1
thread tries to -> write : 1
tries to write -> a : 1
write a new -> it : 1
a new it -> fetches : 1
new it fetches -> the : 1
it fetches the -> current : 1
fetches the current -> index : 1
the current index -> and : 1
current index and -> adds : 1
index and adds -> one : 1
and adds one -> thus : 1
adds one thus -> each : 1
one thus each -> value : 1
thus each value -> is : 1
each value is -> written : 1
value is written -> to : 1
is written to -> a : 1
written to a -> unique : 1
to a unique -> we : 1
a unique we -> will : 1
unique we will -> split : 1
we will split -> the : 1
will split the -> function : 1
split the function -> into : 1
the function into -> two : 1
function into two -> an : 1
into two an -> inner : 1
two an inner -> function : 1
an inner function -> and : 1
inner function and -> an : 1
function and an -> outer : 1
and an outer -> the : 1
an outer the -> atomic : 1
outer the atomic -> write : 1
the atomic write -> index : 1
the atomic write -> rather : 1
atomic write index -> is : 1
write index is -> defined : 1
index is defined -> in : 1
is defined in -> the : 1
the outer and -> the : 1
outer and the -> actual : 1
and the actual -> implementation : 1
the actual implementation -> in : 1
actual implementation in -> the : 1
implementation in the -> inner : 1
the inner function -> which : 1
inner function which -> we : 1
function which we -> inner : 1
which we inner -> function : 1
we inner function -> requires : 1
inner function requires -> an : 1
function requires an -> atomic : 1
requires an atomic -> that : 1
an atomic that -> synchronizes : 1
atomic that synchronizes -> the : 1
that synchronizes the -> write : 1
synchronizes the write -> as : 1
the write as -> the : 1
write as the -> algorithm : 1
the algorithm is -> it : 1
the algorithm is -> return : 1
is it cannot -> store : 1
it cannot store -> the : 1
cannot store the -> atomic : 1
store the atomic -> it : 1
the atomic it -> requires : 1
atomic it requires -> an : 1
it requires an -> outer : 1
requires an outer -> function : 1
an outer function -> to : 1
outer function to -> invoke : 1
function to invoke -> the : 1
invoke the typename -> typename : 1
the typename typename -> srcit : 1
the typename typename -> auto : 1
typename srcit srcit -> dstit : 1
srcit srcit dstit -> pred : 1
dstit pred auto -> n : 1
n if if -> auto : 1
if if auto -> middle : 1
if auto middle -> n : 1
n auto future -> return : 1
future return outer -> called : 1
return outer called -> from : 1
outer called from -> the : 1
called from the -> user : 1
user is simply -> a : 1
simply a placeholder -> for : 1
a placeholder for -> the : 1
placeholder for the -> atomic : 1
for the atomic -> which : 1
the atomic which -> is : 1
atomic which is -> initialized : 1
which is initialized -> to : 1
is initialized to -> it : 1
initialized to it -> then : 1
to it then -> initializes : 1
it then initializes -> the : 1
then initializes the -> first : 1
initializes the first -> inner : 1
the first inner -> which : 1
first inner which -> parallelizes : 1
inner which parallelizes -> the : 1
which parallelizes the -> code : 1
parallelizes the code -> typename : 1
the code typename -> typename : 1
code typename typename -> return : 1
typename typename return -> two : 1
typename return two -> split : 1
return two split -> algorithm : 1
into two second -> approach : 1
two second approach -> is : 1
second approach is -> to : 1
approach is to -> split : 1
is to split -> the : 1
to split the -> algorithm : 1
two the conditional -> copying : 1
the conditional copying -> is : 1
conditional copying is -> performed : 1
copying is performed -> in : 1
performed in parallel -> then : 1
in parallel then -> the : 1
parallel then the -> resulting : 1
then the resulting -> sparse : 1
the resulting sparse -> range : 1
resulting sparse range -> is : 1
resulting sparse range -> auto : 1
sparse range is -> squeezed : 1
sparse range is -> it : 1
range is squeezed -> to : 1
is squeezed to -> a : 1
squeezed to a -> continuous : 1
to a continuous -> one : 1
a continuous one -> copy : 1
continuous one copy -> elements : 1
the destination first -> part : 1
destination first part -> copies : 1
first part copies -> the : 1
part copies the -> elements : 1
copies the elements -> in : 1
elements in resulting -> in : 1
in resulting in -> the : 1
in the sparse -> destination : 1
the sparse destination -> illustrated : 1
sparse destination illustrated -> in : 1
destination illustrated in -> the : 1
following each chunk -> is : 1
each chunk is -> conditionally : 1
chunk is conditionally -> copied : 1
is conditionally copied -> in : 1
conditionally copied in -> and : 1
copied in and -> the : 1
in and the -> resulting : 1
in and the -> corresponding : 1
and the resulting -> range : 1
the resulting range -> iterators : 1
resulting range iterators -> are : 1
range iterators are -> stored : 1
iterators are stored -> in : 1
are stored in -> the : 1
stored in the -> future : 1
in the future -> for : 1
the future for -> later : 1
future for later -> cdpaligncenter : 1
for later cdpaligncenter -> destination : 1
later cdpaligncenter destination -> range : 1
cdpaligncenter destination range -> after : 1
destination range after -> first : 1
range after first -> step : 1
after first step -> of : 1
first step of -> conditional : 1
step of conditional -> following : 1
of conditional following -> code : 1
conditional following code -> implements : 1
following code implements -> the : 1
code implements the -> typename : 1
implements the typename -> typename : 1
typename auto part -> perform : 1
auto part perform -> conditional : 1
part perform conditional -> copy : 1
perform conditional copy -> in : 1
conditional copy in -> auto : 1
copy in auto -> n : 1
in auto n -> using : 1
auto n using -> copiedrange : 1
n using copiedrange -> using : 1
using copiedrange using -> futuretype : 1
copiedrange using futuretype -> copiedrange : 1
using futuretype copiedrange -> auto : 1
futuretype copiedrange auto -> futures : 1
copiedrange auto futures -> for : 1
auto futures for -> auto : 1
futures for auto -> auto : 1
auto auto future -> auto : 1
auto future auto -> dst : 1
future auto dst -> auto : 1
auto dst auto -> first : 1
dst auto first -> return : 1
auto first return -> to : 1
first return to -> be : 1
return to be -> two : 1
to be two -> move : 1
be two move -> the : 1
a continuous the -> sparse : 1
continuous the sparse -> range : 1
range is it -> is : 1
it is merged -> sequentially : 1
is merged sequentially -> using : 1
merged sequentially using -> the : 1
sequentially using the -> resulting : 1
using the resulting -> value : 1
using the resulting -> string : 1
the resulting value -> from : 1
resulting value from -> each : 1
value from each -> as : 1
from each as -> illustrated : 1
each as illustrated -> in : 1
the following this -> is : 1
following this is -> performed : 1
this is performed -> sequentially : 1
is performed sequentially -> as : 1
performed sequentially as -> the : 1
sequentially as the -> parts : 1
as the parts -> note : 1
the parts note -> that : 1
parts note that -> is : 1
that is used -> instead : 1
is used instead -> of : 1
used instead of -> copying : 1
of copying to -> avoid : 1
copying to avoid -> unnecessary : 1
avoid unnecessary cdpaligncenter -> cdpaligncenter : 1
unnecessary cdpaligncenter cdpaligncenter -> sparse : 1
cdpaligncenter cdpaligncenter sparse -> range : 1
cdpaligncenter sparse range -> into : 1
sparse range into -> a : 1
range into a -> continuous : 1
a continuous from -> part : 1
continuous from part -> perform : 1
from part perform -> merge : 1
part perform merge -> of : 1
perform merge of -> resulting : 1
merge of resulting -> sparse : 1
of resulting sparse -> range : 1
sparse range auto -> it : 1
range auto it -> it : 1
auto it it -> auto : 1
it it auto -> return : 1
it auto return -> end : 1
auto return end -> of : 1
end of that -> we : 1
have two different -> see : 1
two different see -> how : 1
different see how -> they : 1
see how they -> measure : 1
how they measure -> performance : 1
they measure performance -> boost : 1
measure performance boost -> from : 1
performance boost from -> using : 1
boost from using -> this : 1
from using this -> parallelized : 1
using this parallelized -> version : 1
this parallelized version -> of : 1
parallelized version of -> heavily : 1
version of heavily -> dependent : 1
of heavily dependent -> on : 1
heavily dependent on -> how : 1
on how predicate -> we : 1
how predicate we -> measure : 1
predicate we measure -> with : 1
we measure with -> two : 1
measure with two -> which : 1
with two which -> is : 1
two which is -> very : 1
which is very -> inexpensive : 1
is very inexpensive -> and : 1
very inexpensive and -> which : 1
inexpensive and which -> is : 1
which is return -> if : 1
is return if -> return : 1
if return for -> if : 1
return for if -> return : 1
for if return -> following : 1
if return following -> table : 1
return following table -> shows : 1
shows the performance -> as : 1
performance as measured -> using : 1
as measured using -> an : 1
measured using an -> intel : 1
an intel note -> that : 1
intel note that -> for : 1
note that for -> the : 1
that for the -> algorithms : 1
for the algorithms -> which : 1
the algorithms which -> is : 1
algorithms which is -> split : 1
which is split -> into : 1
split into the -> chunk : 1
into the chunk -> size : 1
the chunk size -> is : 1
chunk size is -> set : 1
size is set -> to : 1
set to of -> x : 1
to of x -> cdpaligncenter : 1
of x cdpaligncenter -> copy : 1
x cdpaligncenter copy -> strategies : 1
cdpaligncenter copy strategies -> versus : 1
copy strategies versus -> computation : 1
strategies versus computation -> most : 1
versus computation most -> obvious : 1
computation most obvious -> observation : 1
most obvious observation -> when : 1
obvious observation when -> measuring : 1
observation when measuring -> the : 1
when measuring the -> performance : 1
measuring the performance -> is : 1
performance is how -> ridiculously : 1
is how ridiculously -> slow : 1
how ridiculously slow -> the : 1
ridiculously slow the -> synchronized : 1
slow the synchronized -> version : 1
the synchronized version -> is : 1
synchronized version is -> with : 1
version is with -> the : 1
with the lightweight -> not : 1
the lightweight not -> even : 1
lightweight not even -> one : 1
not even one -> tenth : 1
even one tenth -> as : 1
one tenth as -> fast : 1
tenth as fast -> as : 1
fast as the -> serial : 1
as the serial -> the : 1
the serial the -> disastrous : 1
serial the disastrous -> performance : 1
the disastrous performance -> is : 1
disastrous performance is -> actually : 1
performance is actually -> not : 1
is actually not -> due : 1
actually not due -> to : 1
not due to -> the : 1
to the atomic -> write : 1
atomic write rather -> it : 1
write rather it -> is : 1
rather it is -> because : 1
it is because -> the : 1
because the cache -> mechanism : 1
the cache mechanism -> of : 1
cache mechanism of -> the : 1
mechanism of the -> hardware : 1
the hardware is -> trashed : 1
hardware is trashed -> due : 1
is trashed due -> to : 1
trashed due to -> several : 1
due to several -> threads : 1
to several threads -> writing : 1
several threads writing -> to : 1
threads writing to -> the : 1
writing to the -> same : 1
same cache line -> learned : 1
cache line learned -> in : 1
line learned in -> with : 1
learned in with -> that : 1
in with that -> focus : 1
with that focus -> on : 1
that focus on -> the : 1
on the implementation -> on : 1
the implementation on -> the : 1
implementation on the -> lightweight : 1
on the lightweight -> predicate : 1
the lightweight predicate -> it : 1
lightweight predicate it -> is : 1
predicate it is -> just : 1
is just slightly -> faster : 1
just slightly faster -> than : 1
than the sequential -> but : 1
the sequential but -> with : 1
sequential but with -> the : 1
with the heavyweight -> the : 1
the heavyweight the -> performance : 1
heavyweight the performance -> is : 1
performance is vastly -> increased : 1
is vastly increased -> performance : 1
vastly increased performance -> is : 1
increased performance is -> a : 1
result of spending -> most : 1
of spending most -> of : 1
spending most of -> the : 1
of the computations -> in : 1
the computations in -> the : 1
computations in the -> first : 1
first which executes -> in : 1
which executes in -> of : 1
executes in of -> the : 1
in of the -> stl : 1
stl library has -> been : 1
library has been -> extended : 1
has been extended -> with : 1
been extended with -> parallel : 1
extended with parallel -> versions : 1
with parallel versions -> of : 1
versions of but -> not : 1
of but not -> changing : 1
but not changing -> your : 1
not changing your -> algorithms : 1
changing your algorithms -> to : 1
your algorithms to -> execute : 1
algorithms to execute -> in : 1
execute in parallel -> is : 1
execute in parallel -> and : 1
in parallel is -> only : 1
in parallel is -> auto : 1
parallel is only -> a : 1
matter of adding -> a : 1
of adding a -> parameter : 1
adding a parameter -> that : 1
a parameter that -> tells : 1
parameter that tells -> the : 1
that tells the -> algorithm : 1
tells the algorithm -> which : 1
the algorithm which -> parallel : 1
algorithm which parallel -> execution : 1
which parallel execution -> policy : 1
parallel execution policy -> to : 1
execution policy to -> stressed : 1
policy to stressed -> earlier : 1
to stressed earlier -> in : 1
stressed earlier in -> this : 1
this if your -> code : 1
if your code -> base : 1
base is based -> upon : 1
is based upon -> stl : 1
based upon stl -> or : 1
upon stl or -> at : 1
stl or at -> least : 1
or at least -> if : 1
at least if -> you : 1
least if you -> have : 1
you have the -> habit : 1
have the habit -> of : 1
habit of writing -> by : 1
of writing by -> using : 1
writing by using -> you : 1
by using you -> get : 1
using you get -> an : 1
you get an -> instant : 1
get an instant -> performance : 1
an instant performance -> boost : 1
instant performance boost -> almost : 1
performance boost almost -> for : 1
boost almost for -> free : 1
almost for free -> by : 1
for free by -> adding : 1
free by adding -> an : 1
by adding an -> execution : 1
adding an execution -> policy : 1
an execution policy -> where : 1
an execution policy -> of : 1
execution policy where -> execution : 1
policy where execution -> policy : 1
where execution policy -> informs : 1
execution policy informs -> the : 1
policy informs the -> algorithms : 1
informs the algorithms -> of : 1
the algorithms of -> how : 1
algorithms of how -> they : 1
of how they -> are : 1
they are allowed -> to : 1
allowed to parallelize -> the : 1
to parallelize the -> there : 1
parallelize the there -> are : 1
there are three -> default : 1
are three default -> execution : 1
three default execution -> policies : 1
default execution policies -> included : 1
execution policies included -> in : 1
policies included in -> the : 1
the stl parallel -> in : 1
stl parallel in -> the : 1
parallel in the -> there : 1
in the there -> will : 1
the there will -> probably : 1
there will probably -> be : 1
will probably be -> libraries : 1
probably be libraries -> extending : 1
be libraries extending -> these : 1
libraries extending these -> policies : 1
extending these policies -> for : 1
these policies for -> certain : 1
policies for certain -> hardware : 1
for certain hardware -> and : 1
certain hardware and -> this : 1
hardware and this -> would : 1
and this would -> make : 1
this would make -> it : 1
would make it -> possible : 1
possible to seamlessly -> use : 1
to seamlessly use -> the : 1
seamlessly use the -> parallel : 1
the parallel power -> of : 1
parallel power of -> modern : 1
power of modern -> graphics : 1
power of modern -> gpu : 1
of modern graphics -> card : 1
modern graphics card -> from : 1
graphics card from -> stl : 1
card from stl -> execution : 1
from stl execution -> policies : 1
stl execution policies -> are : 1
execution policies are -> defined : 1
policies are defined -> in : 1
are defined in -> the : 1
the header and -> reside : 1
header and reside -> in : 1
and reside in -> the : 1
in the namespace -> sequenced : 1
the namespace sequenced -> execution : 1
namespace sequenced execution -> makes : 1
sequenced execution makes -> the : 1
execution makes the -> algorithm : 1
makes the algorithm -> execute : 1
the algorithm execute -> sequentially : 1
algorithm execute sequentially -> with : 1
execute sequentially with -> no : 1
sequentially with no -> just : 1
with no just -> as : 1
no just as -> the : 1
just as the -> algorithm : 1
the algorithm would -> execute : 1
algorithm would execute -> if : 1
would execute if -> invoked : 1
execute if invoked -> without : 1
if invoked without -> any : 1
invoked without any -> execution : 1
without any execution -> policy : 1
any execution policy -> at : 1
execution policy at -> it : 1
policy at it -> might : 1
at it might -> seem : 1
odd that this -> policy : 1
that this policy -> is : 1
this policy is -> even : 1
policy is even -> but : 1
is even but -> it : 1
even but it -> allows : 1
but it allows -> the : 1
it allows the -> programmer : 1
programmer to specify -> an : 1
to specify an -> algorithm : 1
specify an algorithm -> to : 1
an algorithm to -> execute : 2
algorithm to execute -> sequentially : 1
algorithm to execute -> in : 1
execute sequentially if -> the : 1
sequentially if the -> number : 1
of elements is -> below : 1
elements is below -> a : 1
is below a -> certain : 1
below a certain -> threshold : 1
a certain threshold -> where : 1
certain threshold where -> executing : 1
threshold where executing -> an : 1
where executing an -> algorithm : 1
executing an algorithm -> in : 1
an algorithm in -> parallel : 1
algorithm in parallel -> is : 1
algorithm in parallel -> like : 1
parallel is auto -> threshold : 1
is auto threshold -> return : 1
auto threshold return -> threshold : 1
threshold return threshold -> parallel : 1
return threshold parallel -> execution : 1
threshold parallel execution -> can : 1
parallel execution can -> be : 1
execution can be -> considered : 1
considered the standard -> execution : 1
the standard execution -> policy : 1
standard execution policy -> for : 1
execution policy for -> parallel : 1
policy for parallel -> contrast : 1
for parallel contrast -> with : 1
parallel contrast with -> the : 1
contrast with the -> parallel : 1
with the parallel -> unsequenced : 1
the parallel unsequenced -> policy : 1
parallel unsequenced policy -> described : 1
unsequenced policy described -> handles : 1
policy described handles -> meaning : 1
described handles meaning -> that : 1
handles meaning that -> if : 1
that if an -> exception : 1
the the exception -> will : 1
the exception will -> be : 1
will be thrown -> out : 1
be thrown out -> back : 1
thrown out back -> on : 1
out back on -> the : 1
back on the -> main : 1
and the algorithm -> will : 1
algorithm will break -> at : 1
will break at -> an : 1
break at an -> unspecified : 1
at an unspecified -> auto : 1
an unspecified auto -> inversef : 1
unspecified auto inversef -> return : 1
auto inversef return -> else : 1
inversef return else -> throw : 1
return else throw -> by : 1
else throw by -> auto : 1
throw by auto -> p : 1
by auto p -> auto : 1
p auto auto -> numbers : 1
auto auto numbers -> auto : 1
auto numbers auto -> inversed : 1
numbers auto inversed -> try : 1
auto inversed try -> catch : 1
inversed try catch -> v : 1
try catch v -> the : 1
catch v the -> previous : 1
the previous code -> would : 1
the previous code -> is : 1
previous code would -> result : 1
code would result -> in : 1
following where it -> is : 1
it is undetermined -> which : 1
is undetermined which -> of : 1
undetermined which of -> the : 1
the elements has -> actually : 1
elements has actually -> been : 1
has actually been -> possible : 1
actually been possible -> exception : 1
been possible exception -> division : 1
possible exception division -> by : 1
exception division by -> zero : 1
division by zero -> unsequenced : 1
by zero unsequenced -> parallel : 1
zero unsequenced parallel -> unsequenced : 1
unsequenced parallel unsequenced -> executes : 1
parallel unsequenced executes -> the : 1
unsequenced executes the -> algorithm : 1
executes the algorithm -> in : 1
in parallel like -> the : 1
parallel like the -> parallel : 1
like the parallel -> but : 1
the parallel but -> with : 1
parallel but with -> the : 1
with the addition -> that : 1
the addition that -> it : 1
addition that it -> may : 1
that it may -> also : 1
that it may -> not : 1
it may also -> vectorize : 1
may also vectorize -> the : 1
also vectorize the -> loop : 1
vectorize the loop -> for : 1
the loop for -> simd : 1
loop for simd -> instructions : 1
for simd instructions -> if : 1
simd instructions if -> addition : 1
instructions if addition -> to : 1
if addition to -> the : 1
the it has -> stricter : 1
it has stricter -> conditions : 1
has stricter conditions -> for : 1
stricter conditions for -> the : 1
conditions for the -> predicates : 1
for the predicates -> than : 1
the predicates than -> may : 1
predicates than may -> not : 1
than may not -> doing : 1
may not doing -> so : 1
not doing so -> will : 1
so will cause -> undefined : 1
will cause undefined -> behavior : 1
cause undefined behavior -> or : 1
undefined behavior or -> an : 1
behavior or an -> instant : 1
or an instant -> may : 1
an instant may -> not : 1
instant may not -> use : 1
mutex for doing -> so : 1
for doing so -> might : 1
doing so might -> cause : 1
so might cause -> a : 1
might cause a -> following : 1
might cause a -> deadlock : 1
cause a following -> example : 1
a following example -> might : 1
following example might -> cause : 1
example might cause -> a : 1
cause a deadlock -> as : 1
a deadlock as -> the : 1
deadlock as the -> execute : 1
as the execute -> concurrently : 1
the execute concurrently -> on : 1
execute concurrently on -> the : 1
concurrently on the -> same : 1
the same trees -> m : 1
same trees m -> p : 1
trees m p -> auto : 1
m p auto -> guard : 1
p auto guard -> t : 1
auto guard t -> other : 1
guard t other -> when : 1
t other when -> using : 1
other when using -> the : 1
using the you -> must : 1
the you must -> make : 1
you must make -> sure : 1
that the predicate -> does : 1
the predicate does -> not : 1
predicate does not -> throw : 1
not throw or -> acquire : 1
throw or acquire -> a : 1
or acquire a -> modifications : 1
acquire a modifications -> of : 1
a modifications of -> stl : 1
modifications of stl -> are : 1
of stl are -> available : 1
stl are available -> as : 1
are available as -> parallel : 1
available as parallel -> versions : 1
as parallel versions -> straight : 1
parallel versions straight -> out : 1
versions straight out -> the : 1
straight out the -> but : 1
out the but -> there : 1
the but there -> are : 1
are some noteworthy -> changes : 1
some noteworthy changes -> to : 1
noteworthy changes to -> and : 1
changes to and -> as : 1
to and as -> their : 1
as their original -> requirements : 1
their original requirements -> required : 1
original requirements required -> and : 1
requirements required and -> algorithm : 1
required and algorithm -> cannot : 1
and algorithm cannot -> be : 1
algorithm cannot be -> parallelized : 1
cannot be parallelized -> as : 1
be parallelized as -> it : 1
parallelized as it -> requires : 1
it requires to -> be : 1
requires to be -> executed : 1
executed in order -> of : 1
possible to a -> new : 1
to a new -> algorithm : 1
new algorithm called -> has : 1
algorithm called has -> been : 1
called has been -> which : 1
has been which -> works : 1
been which works -> just : 1
which works just -> like : 1
just like with -> the : 1
like with the -> exception : 1
exception that it -> is : 1
is executed commutative -> operations : 1
executed commutative operations -> their : 1
commutative operations their -> result : 1
operations their result -> is : 1
their result is -> the : 1
result is the -> as : 1
is the as -> the : 1
as the order -> of : 1
order of accumulation -> other : 1
of accumulation other -> given : 1
accumulation other given -> a : 1
other given a -> range : 1
given a range -> of : 1
range of c -> them : 1
of c them -> by : 1
c them by -> addition : 1
them by addition -> or : 1
by addition or -> sum : 1
addition or sum -> int : 1
or sum int -> return : 1
sum int return -> product : 1
int return product -> int : 1
return product int -> return : 1
product int return -> yield : 1
int return yield -> the : 1
return yield the -> same : 1
yield the same -> result : 1
the same result -> if : 1
same result if -> invoked : 1
result if invoked -> with : 1
if invoked with -> of : 1
invoked with of -> as : 1
with of as -> both : 1
of as both -> addition : 1
as both addition -> and : 1
both addition and -> multiplication : 1
addition and multiplication -> of : 1
and multiplication of -> integers : 1
multiplication of integers -> are : 1
of integers are -> if : 1
integers are if -> the : 1
are if the -> operation : 1
not the result -> is : 1
result is dependent -> on : 1
on the order -> of : 1
order of for -> if : 1
of for if -> we : 1
were to accumulate -> a : 1
to accumulate a -> list : 1
accumulate a list -> of : 1
of strings like -> mice : 1
strings like mice -> auto : 1
like mice auto -> acc : 1
like mice auto -> return : 1
mice auto acc -> acc : 1
auto acc acc -> prints : 1
acc acc prints -> using : 1
acc prints using -> the : 1
prints using the -> resulting : 1
the resulting string -> could : 1
resulting string could -> be : 1
string could be -> any : 1
could be any -> order : 1
be any order -> of : 1
any order of -> the : 1
following code might -> produce : 1
code might produce -> different : 1
might produce different -> red : 1
produce different red -> red : 1
different red red -> possible : 1
red red possible -> output : 1
red possible output -> or : 1
possible output or -> an : 1
output or an -> addition : 1
or an addition -> to : 1
an addition to -> the : 1
stl has also -> been : 1
has also been -> it : 1
also been it -> does : 1
been it does -> exactly : 1
it does exactly -> what : 1
it it transforms -> a : 1
it transforms a -> range : 1
transforms a range -> of : 1
range of elements -> as : 1
of elements as -> and : 1
elements as and -> then : 1
as and then -> applies : 1
and then applies -> a : 1
then applies a -> this : 1
applies a this -> accumulates : 1
a this accumulates -> them : 1
this accumulates them -> out : 1
accumulates them out -> of : 1
them out of -> like : 1
out of like -> mice : 1
of like mice -> auto : 1
mice auto return -> return : 1
a is is -> mainly : 1
is is mainly -> used : 1
is mainly used -> for : 1
mainly used for -> applying : 1
used for applying -> a : 1
for applying a -> functor : 1
applying a functor -> to : 1
a functor to -> a : 1
functor to a -> range : 1
to a range -> of : 1
range of it -> is : 1
is quite similar -> to : 1
quite similar to -> although : 1
quite similar to -> the : 1
similar to although -> it : 1
to although it -> only : 1
although it only -> processes : 1
it only processes -> like : 1
only processes like -> peruvians : 1
processes like peruvians -> peruvians : 1
like peruvians peruvians -> is : 1
peruvians peruvians is -> now : 1
peruvians is now -> actually : 1
is now actually -> also : 1
now actually also -> returns : 1
actually also returns -> the : 1
also returns the -> functor : 1
returns the functor -> passed : 1
the functor passed -> into : 1
functor passed into -> which : 1
passed into which -> means : 1
into which means -> it : 1
which means it -> can : 1
means it can -> be : 1
used like name -> return : 1
like name return -> auto : 1
name return auto -> is : 1
auto is now -> claudio : 1
is now claudio -> sofia : 1
now claudio sofia -> gaston : 1
claudio sofia gaston -> alberto : 1
sofia gaston alberto -> be : 1
gaston alberto be -> this : 1
alberto be this -> is : 1
this is quite -> a : 1
is quite a -> weird : 1
quite a weird -> as : 1
a weird as -> is : 1
weird as is -> better : 1
as is better -> suited : 1
is better suited -> for : 1
better suited for -> the : 1
suited for the -> and : 1
the and actually -> never : 1
and actually never -> seen : 1
actually never seen -> anyone : 1
never seen anyone -> use : 1
seen anyone use -> the : 1
anyone use the -> returned : 1
use the returned -> functor : 1
the returned functor -> in : 1
returned functor in -> a : 1
functor in a -> code : 1
a code as -> with : 1
code as with -> executing : 1
as with executing -> it : 1
with executing it -> out : 1
executing it out -> of : 1
it out of -> order : 1
out of order -> would : 1
of order would -> yield : 1
order would yield -> different : 1
would yield different -> results : 1
yield different results -> every : 1
different results every -> time : 1
results every time -> it : 1
is executed as -> the : 1
executed as the -> invocation : 1
as the invocation -> order : 1
the invocation order -> is : 1
invocation order is -> the : 1
order is the -> parallel : 1
is the parallel -> version : 1
the parallel version -> of : 1
version of simply -> just : 1
of simply just -> returns : 1
simply just returns -> an : 1
just returns an -> though : 1
returns an though -> we : 1
an though we -> recommend : 1
recommend using sometimes -> a : 1
using sometimes a -> is : 1
sometimes a is -> required : 1
a is required -> for : 1
specific the stl -> algorithms : 1
stl algorithms do -> provide : 1
algorithms do provide -> an : 1
do provide an -> equivalent : 1
provide an equivalent -> of : 1
an equivalent of -> a : 1
an equivalent of -> the : 1
a but there -> is : 1
is no equivalent -> of : 1
no equivalent of -> a : 1
of a regular -> other : 1
a regular other -> a : 1
regular other a -> range : 1
other a range -> based : 1
range based is -> equal : 1
based is equal -> to : 1
stl algorithm mice -> range : 1
algorithm mice range -> based : 1
mice range based -> for : 1
range based for -> m : 1
based for m -> stl : 1
for m stl -> algorithm : 1
m stl algorithm -> m : 1
stl algorithm m -> there : 1
algorithm m there -> is : 1
m there is -> no : 1
is no stl -> algorithm : 1
no stl algorithm -> equivalent : 1
stl algorithm equivalent -> of : 1
equivalent of an -> i : 1
of an i -> i : 1
an i i -> i : 1
i i i -> we : 1
i i we -> an : 1
i we an -> by : 1
we an by -> simply : 1
an by simply -> adding : 1
by simply adding -> a : 1
simply adding a -> parallel : 1
adding a parallel -> policy : 1
a parallel policy -> like : 1
parallel policy like -> with : 1
policy like with -> other : 1
like with other -> see : 1
with other see -> how : 1
other see how -> we : 1
we can build -> mentioned : 1
can build mentioned -> we : 1
build mentioned we -> do : 1
mentioned we do -> not : 1
do not recommend -> to : 1
not recommend to -> write : 1
recommend to write -> parallel : 1
to write parallel -> algorithms : 1
write parallel algorithms -> yourself : 1
parallel algorithms yourself -> due : 1
algorithms yourself due -> to : 1
yourself due to -> the : 1
to the complexity -> of : 1
of writing a -> parallel : 1
writing a parallel -> in : 1
a parallel in -> this : 1
parallel in this -> case : 1
case we will -> build : 1
we will build -> the : 1
will build the -> using : 1
build the using -> as : 1
the using as -> building : 1
using as building -> thus : 1
as building thus -> leaving : 1
building thus leaving -> the : 1
thus leaving the -> complexity : 1
leaving the complexity -> parallelism : 1
the complexity parallelism -> to : 1
complexity parallelism to -> with : 1
parallelism to with -> linear : 1
to with linear -> we : 1
with linear we -> can : 1
linear we can -> do : 1
can do instead -> is : 1
do instead is -> to : 1
instead is to -> with : 1
is to with -> the : 1
to with the -> class : 1
with the class -> described : 1
the class described -> deeper : 1
class described deeper -> look : 1
described deeper look -> at : 1
look at to -> remind : 1
at to remind -> the : 1
to remind the -> class : 1
remind the class -> is : 1
is constructed via -> the : 1
constructed via the -> returns : 1
via the returns -> a : 1
the returns a -> range : 1
returns a range -> of : 1
of numbers that -> can : 1
numbers that can -> be : 1
be iterated just -> like : 1
iterated just like -> a : 1
a regular based -> on : 1
regular based on -> an : 1
based on an -> stl : 1
on an stl -> algorithm : 1
stl algorithm can -> be : 1
be created like -> auto : 1
created like auto -> auto : 1
auto auto indices -> i : 1
auto indices i -> can : 1
indices i can -> then : 1
i can then -> be : 1
then be further -> parallelized : 1
be further parallelized -> with : 1
further parallelized with -> an : 1
parallelized with an -> execution : 1
with an execution -> policy : 1
execution policy of -> p : 1
policy of p -> if : 1
of p if -> is : 1
p if is -> else : 1
if is else -> if : 2
is else if -> is : 2
else if is -> m : 2
if is m -> mickey : 2
is m mickey -> is : 2
m mickey is -> jerry : 2
mickey is jerry -> is : 2
is jerry is -> construction : 1
is jerry is -> the : 1
jerry is construction -> via : 1
is construction via -> a : 1
via a order -> to : 1
order to iterate -> the : 1
iterate the indices -> with : 1
the indices with -> a : 1
indices with a -> neat : 1
with a neat -> syntax : 1
a neat syntax -> the : 1
neat syntax the -> previous : 1
syntax the previous -> code : 1
previous code is -> wrapped : 1
code is wrapped -> into : 1
is wrapped into -> a : 1
into a utility -> function : 1
a utility function -> named : 1
utility function named -> shown : 1
function named shown -> typename : 1
named shown typename -> typename : 1
shown typename typename -> index : 1
typename typename index -> index : 1
typename index index -> f : 1
index index f -> auto : 1
index f auto -> r : 1
f auto r -> can : 1
auto r can -> then : 1
r can then -> be : 1
used like if -> is : 1
like if is -> else : 1
jerry is the -> is : 1
the is built -> upon : 1
is built upon -> it : 1
built upon it -> accepts : 1
upon it accepts -> any : 1
it accepts any -> policy : 1
accepts any policy -> stl : 1
any policy stl -> algorithms : 1
policy stl algorithms -> on : 1
on the processing -> or : 1
the processing or -> were : 1
processing or were -> originally : 1
or were originally -> designed : 1
were originally designed -> and : 1
originally designed and -> used : 1
designed and used -> for : 1
and used for -> processing : 1
used for processing -> points : 1
for processing points -> and : 1
processing points and -> pixels : 1
points and pixels -> for : 1
and pixels for -> computer : 1
pixels for computer -> graphics : 1
for computer graphics -> what : 1
computer graphics what -> the : 1
graphics what the -> gpus : 1
what the gpus -> did : 1
the gpus did -> was : 1
gpus did was -> to : 1
did was to -> retrieve : 1
was to retrieve -> a : 1
to retrieve a -> buffer : 1
retrieve a buffer -> of : 1
a buffer of -> pixel : 1
buffer of pixel -> data : 1
of pixel data -> or : 1
pixel data or -> vertex : 1
data or vertex -> perform : 1
or vertex perform -> a : 1
vertex perform a -> simple : 1
perform a simple -> operation : 1
a simple operation -> on : 1
simple operation on -> each : 1
operation on each -> one : 1
on each one -> of : 1
each one of -> them : 1
one of them -> and : 1
of them and -> store : 1
them and store -> the : 1
and store the -> result : 1
store the result -> in : 1
the result in -> a : 1
a new buffer -> eventually : 1
new buffer eventually -> be : 1
buffer eventually be -> apis : 1
eventually be apis -> and : 1
be apis and -> parallel : 1
and parallel main -> api : 1
parallel main api -> for : 1
main api for -> programming : 1
api for programming -> the : 1
for programming the -> gpu : 1
programming the gpu -> is : 1
the gpu is -> although : 1
the gpu is -> far : 1
gpu is although -> similar : 1
is although similar -> functionality : 1
although similar functionality -> is : 1
similar functionality is -> available : 1
functionality is available -> in : 1
is available in -> directx : 1
available in directx -> as : 1
in directx as -> are : 1
directx as are -> some : 1
as are some -> examples : 1
examples of independent -> operations : 1
of independent operations -> that : 1
independent operations that -> could : 1
operations that could -> be : 1
could be executed -> on : 1
executed on the -> gpu : 1
gpu at an -> early : 1
at an early -> a : 1
an early a -> point : 1
early a point -> from : 1
a point from -> world : 1
point from world -> coordinates : 1
from world coordinates -> to : 1
world coordinates to -> screen : 1
coordinates to screen -> a : 1
to screen a -> lighting : 1
screen a lighting -> calculation : 1
a lighting calculation -> at : 1
lighting calculation at -> a : 1
calculation at a -> specific : 1
a specific point -> lighting : 1
specific point lighting -> calculation : 1
point lighting calculation -> i : 1
lighting calculation i -> refer : 1
calculation i refer -> to : 1
i refer to -> calculating : 1
refer to calculating -> the : 1
to calculating the -> color : 1
calculating the color -> of : 1
the color of -> a : 1
color of a -> specific : 1
a specific pixel -> in : 1
specific pixel in -> an : 1
pixel in an -> these : 1
in an these -> operations : 1
an these operations -> could : 1
these operations could -> be : 1
operations could be -> performed : 1
could be performed -> in : 1
be performed in -> the : 1
in the gpus -> were : 1
the gpus were -> designed : 1
gpus were designed -> for : 1
were designed for -> executing : 1
designed for executing -> small : 1
for executing small -> operations : 1
executing small operations -> in : 1
small operations in -> a : 1
operations in a -> cpu : 1
in a cpu -> commonly : 1
a cpu commonly -> consists : 1
cpu commonly consists -> of : 1
commonly consists of -> a : 1
consists of a -> few : 1
consists of a -> huge : 1
a few cached -> whereas : 1
few cached whereas -> a : 1
cached whereas a -> gpu : 1
whereas a gpu -> consists : 1
a gpu consists -> of : 1
gpu consists of -> a : 1
of a huge -> number : 1
a huge number -> of : 1
huge number of -> highly : 1
number of highly -> specialized : 1
of highly specialized -> means : 1
highly specialized means -> that : 1
specialized means that -> the : 1
that the better -> an : 1
the better an -> algorithm : 1
better an algorithm -> scales : 1
an algorithm scales -> when : 1
algorithm scales when -> the : 1
scales when the -> more : 1
when the more -> suitable : 1
the more suitable -> it : 1
more suitable it -> is : 1
suitable it is -> to : 1
is to execute -> on : 1
execute on the -> these : 1
execute on the -> gpu : 1
on the these -> operations : 1
the these operations -> became : 1
these operations became -> although : 1
operations became although -> the : 1
became although the -> programs : 1
although the programs -> were : 1
the programs were -> written : 1
programs were written -> in : 1
were written in -> terms : 1
written in terms -> of : 1
terms of computer -> graphics : 1
of computer graphics -> the : 1
computer graphics the -> memory : 1
graphics the memory -> reads : 1
the memory reads -> were : 1
memory reads were -> done : 1
reads were done -> in : 1
were done in -> terms : 1
done in terms -> of : 1
terms of reading -> colors : 1
of reading colors -> from : 1
reading colors from -> a : 1
colors from a -> and : 1
from a and -> the : 1
and the result -> was : 1
the result was -> always : 1
result was always -> written : 1
was always written -> as : 1
always written as -> a : 1
as a color -> to : 1
a color to -> a : 1
color to a -> these : 1
to a these -> programs : 1
a these programs -> are : 1
these programs are -> called : 1
programs are called -> the : 1
are called the -> there : 1
called the there -> were : 1
the there were -> two : 1
were two types -> of : 1
two types of -> shader : 1
types of shader -> and : 1
of shader and -> shaders : 1
shader and shaders -> were : 1
and shaders were -> used : 1
shaders were used -> to : 1
were used to -> transform : 1
used to transform -> world : 1
to transform world -> coordinates : 1
transform world coordinates -> into : 1
world coordinates into -> screen : 1
coordinates into screen -> space : 1
into screen space -> and : 1
screen space and -> fragment : 1
space and fragment -> shaders : 1
and fragment shaders -> performed : 1
fragment shaders performed -> lighting : 1
shaders performed lighting -> lookups : 1
performed lighting lookups -> just : 1
lighting lookups just -> before : 1
lookups just before -> writing : 1
just before writing -> a : 1
before writing a -> pixel : 1
writing a pixel -> to : 1
a pixel to -> the : 1
pixel to the -> more : 1
to the more -> programs : 1
the more programs -> were : 1
more programs were -> introduced : 1
programs were introduced -> and : 1
were introduced and -> shaders : 1
introduced and shaders -> gained : 1
and shaders gained -> more : 1
shaders gained more -> and : 1
gained more and -> more : 1
and more such -> as : 1
more such as -> raw : 1
such as raw -> values : 1
as raw values -> from : 1
raw values from -> buffers : 1
values from buffers -> instead : 1
from buffers instead -> of : 1
buffers instead of -> color : 1
instead of color -> values : 1
of color values -> from : 1
color values from -> algorithms : 1
values from algorithms -> and : 1
from algorithms and -> the : 1
the the execution -> policies : 1
the execution policies -> mentioned : 1
execution policies mentioned -> earlier : 1
policies mentioned earlier -> in : 1
mentioned earlier in -> this : 1
chapter will hopefully -> be : 1
will hopefully be -> extended : 1
hopefully be extended -> to : 1
extended to support -> processing : 1
to support processing -> on : 1
support processing on -> the : 1
processing on the -> thus : 1
on the thus -> making : 1
the thus making -> all : 1
thus making all -> of : 1
making all of -> the : 1
of the power -> available : 1
the power available -> on : 1
power available on -> a : 1
available on a -> standard : 1
on a standard -> computer : 1
on a standard -> gpu : 1
a standard computer -> utilizable : 1
standard computer utilizable -> in : 1
computer utilizable in -> there : 1
utilizable in there -> are : 1
there are already -> several : 1
are already several -> libraries : 1
already several libraries -> available : 1
several libraries available -> that : 1
libraries available that -> make : 1
available that make -> gpu : 1
that make gpu -> programming : 1
make gpu programming -> easily : 1
gpu programming easily -> stressed : 1
programming easily stressed -> if : 1
easily stressed if -> you : 1
stressed if you -> have : 1
have a code -> base : 1
code base built -> on : 1
base built on -> algorithms : 1
built on algorithms -> rather : 1
on algorithms rather -> than : 1
rather than moving -> it : 1
than moving it -> to : 1
moving it to -> take : 1
it to take -> advantage : 1
gpu is far -> more : 1
is far more -> this : 1
far more this -> we : 1
more this we -> have : 1
we have chosen -> boost : 1
have chosen boost -> compute : 1
chosen boost compute -> by : 1
boost compute by -> kyle : 1
compute by kyle -> as : 1
by kyle as -> the : 1
kyle as the -> library : 1
as the library -> for : 1
the library for -> accessing : 1
library for accessing -> the : 1
accessing the the -> reasons : 1
the the reasons -> we : 1
the reasons we -> picked : 1
reasons we picked -> boost : 1
we picked boost -> compute : 1
picked boost compute -> are : 1
boost compute are -> that : 1
compute are that -> it : 1
are that it -> is : 1
is very well -> vendor : 1
very well vendor -> and : 1
well vendor and -> contains : 1
vendor and contains -> almost : 1
and contains almost -> all : 1
contains almost all -> stl : 1
almost all stl -> on : 1
all stl on -> top : 1
stl on top -> of : 2
top of it -> is : 1
part of one -> of : 1
of one of -> the : 1
the most widely -> used : 1
most widely used -> this : 1
widely used this -> section : 1
used this section -> we : 1
this section we -> will : 1
we will keep -> a : 1
will keep a -> steady : 1
keep a steady -> focus : 1
a steady focus -> on : 1
steady focus on -> the : 1
on the syntactic -> similarities : 1
the syntactic similarities -> between : 1
syntactic similarities between -> boost : 1
similarities between boost -> compute : 1
between boost compute -> and : 1
compute and stl -> therefore : 1
and stl therefore -> many : 1
stl therefore many -> boost : 1
therefore many boost -> compute : 1
many boost compute -> code : 1
boost compute code -> examples : 1
compute code examples -> will : 1
code examples will -> be : 1
examples will be -> presented : 1
will be presented -> side : 1
be presented side -> by : 1
presented side by -> side : 1
side with its -> equivalent : 1
with its equivalent -> stl : 1
its equivalent stl -> algorithm : 1
equivalent stl algorithm -> concepts : 1
stl algorithm concepts -> of : 1
algorithm concepts of -> boost : 1
of boost compute -> has : 1
of boost compute -> and : 1
boost compute has -> a : 1
boost compute has -> been : 1
compute has a -> few : 1
few basic which -> are : 1
basic which are -> good : 1
which are good -> to : 1
are good to -> grasp : 1
good to grasp -> before : 1
to grasp before -> going : 1
grasp before going -> the : 1
before going the -> equivalent : 1
going the equivalent -> of : 1
equivalent of the -> actual : 1
equivalent of the -> the : 2
the actual gpu -> on : 1
actual gpu on -> which : 1
gpu on which -> the : 1
on which the -> operations : 1
which the operations -> will : 1
the operations will -> be : 1
operations will be -> the : 1
be the context -> could : 1
the context could -> be : 1
context could be -> considered : 1
considered the gate -> to : 1
the gate to -> the : 1
gate to the -> a : 1
the a command -> queue : 1
a command queue -> on : 1
command queue on -> which : 1
queue on which -> you : 1
on which you -> push : 1
which you push -> which : 1
you push which -> are : 1
push which are -> then : 1
which are then -> executed : 1
are then executed -> asynchronously : 1
then executed asynchronously -> via : 1
executed asynchronously via -> the : 1
asynchronously via the -> gpu : 1
via the gpu -> driver : 1
the gpu driver -> top : 1
gpu driver top -> of : 1
driver top of -> as : 1
top of as -> gpus : 1
of as gpus -> in : 1
as gpus in -> many : 1
gpus in many -> cases : 1
many cases have -> their : 1
cases have their -> own : 1
their own exclusive -> memory : 1
own exclusive memory -> it : 1
exclusive memory it -> often : 1
memory it often -> uses : 1
it often uses -> the : 1
often uses the -> standard : 1
uses the standard -> all : 1
the standard all -> containers : 1
standard all containers -> handled : 1
all containers handled -> by : 1
containers handled by -> boost : 1
handled by boost -> compute : 1
by boost compute -> must : 1
boost compute must -> be : 1
compute must be -> copied : 1
must be copied -> to : 1
be copied to -> boost : 1
copied to boost -> designated : 1
to boost designated -> containers : 1
boost designated containers -> before : 1
designated containers before -> and : 1
containers before and -> back : 1
before and back -> to : 1
and back to -> standard : 1
back to standard -> containers : 1
to standard containers -> for : 1
standard containers for -> further : 1
containers for further -> processing : 1
for further processing -> by : 1
further processing by -> the : 1
processing by the -> will : 1
by the will -> not : 1
will not use -> opencl : 1
not use opencl -> directly : 1
use opencl directly -> in : 1
opencl directly in -> this : 1
directly in this -> opencl : 1
in this opencl -> is : 1
this opencl is -> the : 1
opencl is the -> underlying : 1
is the underlying -> framework : 1
the underlying framework -> used : 1
underlying framework used -> by : 1
framework used by -> the : 1
by the boost -> compute : 1
the boost compute -> library : 1
the boost compute -> kernel : 1
boost compute library -> that : 1
compute library that -> we : 1
library that we -> will : 1
we will opencl -> is : 1
will opencl is -> maintained : 1
opencl is maintained -> by : 1
is maintained by -> the : 1
maintained by the -> khronos : 1
by the khronos -> which : 1
the khronos which -> also : 1
khronos which also -> maintains : 1
which also maintains -> and : 1
also maintains and -> is : 1
maintains and is -> available : 1
and is available -> for : 1
is available for -> a : 1
available for a -> large : 1
for a large -> number : 1
of the opencl -> program : 1
of the opencl -> we : 1
of the opencl -> function : 1
the opencl program -> uses : 1
opencl program uses -> a : 1
program uses a -> syntax : 1
uses a syntax -> that : 1
a syntax that -> it : 1
syntax that it -> executes : 1
that it executes -> on : 1
it executes on -> the : 1
executes on the -> gpu : 1
the gpu like -> the : 1
gpu like the -> opengl : 1
like the opengl -> the : 1
the opengl the -> opencl : 1
opengl the opencl -> shader : 1
the opencl shader -> is : 1
opencl shader is -> passed : 1
shader is passed -> from : 1
is passed from -> your : 1
passed from your -> application : 1
from your application -> as : 1
your application as -> a : 1
application as a -> string : 1
as a string -> containing : 1
a string containing -> its : 1
string containing its -> source : 1
containing its source -> code : 1
its source code -> and : 1
source code and -> compiled : 1
code and compiled -> by : 1
and compiled by -> the : 1
compiled by the -> opencl : 2
by the opencl -> when : 1
by the opencl -> driver : 1
the opencl when -> the : 1
opencl when the -> application : 1
the application use -> you : 1
application use you -> would : 1
use you would -> need : 1
you would need -> to : 1
set up custom -> buffers : 1
up custom buffers -> through : 1
custom buffers through -> a : 1
buffers through a -> quite : 1
through a quite -> complicated : 1
a quite complicated -> state : 1
quite complicated state -> which : 1
complicated state which -> we : 1
state which we -> will : 1
will not cover -> in : 1
not cover in -> this : 1
will use boost -> compute : 1
use boost compute -> to : 1
boost compute to -> access : 1
compute to access -> boost : 1
to access boost -> you : 1
access boost you -> can : 1
boost you can -> use : 1
can use boost -> we : 1
use boost we -> need : 1
boost we need -> to : 1
need to initialize -> a : 1
to initialize a -> and : 1
initialize a and -> a : 1
a and a -> command : 1
and a command -> we : 1
a command we -> will : 1
command we will -> be : 1
we will be -> passing : 1
will be passing -> the : 1
be passing the -> context : 1
passing the context -> and : 1
the context and -> the : 2
context and the -> command : 2
and the command -> queue : 2
the command queue -> as : 1
the command queue -> is : 1
command queue as -> mutable : 1
queue as mutable -> references : 1
as mutable references -> to : 1
mutable references to -> all : 1
references to all -> our : 1
to all our -> examples : 1
all our examples -> with : 1
our examples with -> boost : 1
examples with boost -> most : 1
with boost most -> simple : 1
boost most simple -> way : 1
most simple way -> to : 1
simple way to -> initialize : 1
way to initialize -> the : 1
to initialize the -> context : 1
initialize the context -> and : 1
command queue is -> to : 1
queue is to -> use : 1
use the system -> default : 1
the system default -> like : 1
system default like -> auto : 1
default like auto -> int : 1
like auto int -> initialize : 1
auto int initialize -> boost : 1
int initialize boost -> compute : 1
initialize boost compute -> and : 1
compute and namespace -> bc : 1
and namespace bc -> auto : 1
namespace bc auto -> device : 1
bc auto device -> auto : 1
auto device auto -> context : 1
device auto context -> auto : 1
auto context auto -> a : 1
context auto a -> simple : 1
auto a simple -> algorithm : 1
to boost say -> we : 1
boost say we -> have : 1
we have of -> and : 1
have of and -> we : 1
sum of circle -> the : 1
of circle the -> algorithm : 1
circle the algorithm -> we : 1
the algorithm we -> will : 1
algorithm we will -> use : 1
will use is -> transform : 1
use is transform -> the : 1
is transform the -> vector : 1
transform the vector -> of : 1
vector of circles -> to : 1
of circles to -> a : 1
circles to a -> vector : 1
vector of and -> then : 1
of and then -> summarize : 1
and then summarize -> the : 1
then summarize the -> circle : 1
summarize the circle -> struct : 1
circle struct is -> defined : 1
struct is defined -> as : 1
defined as shown -> where : 1
shown where and -> denotes : 1
where and denotes -> the : 1
and denotes the -> and : 1
and denotes the -> circle : 1
denotes the and -> denotes : 1
the and denotes -> the : 1
denotes the circle -> float : 1
the circle float -> will : 1
circle float will -> also : 1
float will also -> use : 1
will also use -> this : 1
also use this -> function : 1
use this function -> to : 1
this function to -> generate : 1
function to generate -> a : 1
generate a of -> random : 1
a of random -> auto : 1
of random auto -> cs : 1
random auto cs -> auto : 1
auto cs auto -> x : 1
cs auto x -> auto : 1
auto y auto -> r : 1
y auto r -> return : 1
auto r return -> return : 1
return return cdpaligncenter -> of : 1
return cdpaligncenter of -> different : 1
cdpaligncenter of different -> size : 1
of different size -> and : 1
different size and -> algorithm : 1
size and algorithm -> in : 1
and algorithm in -> standard : 1
in standard formula -> for : 1
standard formula for -> the : 1
formula for the -> area : 1
for the area -> of : 1
the area of -> a : 1
area of a -> circle : 1
of a circle -> as : 1
a circle as -> you : 1
circle as you -> probably : 1
as you probably -> remember : 1
you probably remember -> from : 1
probably remember from -> in : 1
remember from in -> radius : 1
from in radius -> squared : 1
in radius squared -> times : 1
radius squared times -> here : 1
squared times here -> it : 1
times here it -> is : 1
is in const -> auto : 1
in const auto -> pi : 1
const auto pi -> return : 1
pi return the -> we : 1
return the we -> can : 1
we can calculate -> the : 1
can calculate the -> full : 1
calculate the full -> area : 1
the full area -> using : 1
full area using -> constexpr : 1
area using constexpr -> auto : 1
using constexpr auto -> n : 1
constexpr auto n -> auto : 1
n auto circles -> auto : 1
n auto circles -> sort : 1
auto circles auto -> areas : 1
circles auto areas -> auto : 1
auto areas auto -> plus : 1
areas auto plus -> auto : 1
auto plus auto -> area : 1
plus auto area -> area : 1
auto area area -> the : 1
area area the -> algorithm : 1
area the algorithm -> to : 1
to boost see -> how : 1
boost see how -> the : 1
how the equivalent -> would : 1
the equivalent would -> be : 1
equivalent would be -> implemented : 1
would be implemented -> using : 1
using the gpu -> with : 1
the gpu with -> boost : 1
gpu with boost -> in : 1
with boost in -> order : 1
boost in order -> to : 1
order to implement -> we : 1
to implement we -> have : 1
implement we have -> to : 1
to perform a -> few : 1
perform a few -> extra : 1
a few extra -> of : 1
few extra of -> the : 1
extra of the -> content : 1
of the content -> of : 1
content of the -> struct : 1
the struct an -> equivalent : 1
struct an equivalent -> of : 1
the the data -> back : 1
the data back -> and : 2
and forth to -> the : 3
forth to the -> and : 1
forth to the -> gpu : 1
forth to the -> but : 1
and are compiled -> by : 1
are compiled by -> the : 1
the opencl driver -> at : 1
opencl driver at -> although : 1
driver at although -> the : 1
at although the -> binary : 1
although the binary -> can : 1
the binary can -> be : 1
binary can be -> stored : 1
can be stored -> for : 1
be stored for -> future : 1
stored for future -> the : 1
for future the -> circle : 1
future the circle -> struct : 1
with boost first -> thing : 1
boost first thing -> we : 1
thing we have -> to : 1
to make boost -> compute : 1
make boost compute -> know : 1
boost compute know -> what : 1
compute know what -> the : 1
know what the -> struct : 1
what the struct -> looks : 1
the struct looks -> in : 1
struct looks in -> order : 1
looks in order -> to : 1
use it on -> the : 1
it on the -> this : 1
using a macro -> where : 1
a macro where -> the : 1
macro where the -> first : 1
first two parameters -> are : 1
two parameters are -> the : 1
parameters are the -> name : 1
are the name -> and : 1
the name and -> the : 1
and the gpu -> name : 1
the gpu name -> of : 1
gpu name of -> the : 1
and the third -> parameter : 1
the third parameter -> is : 1
third parameter is -> the : 1
is the list -> of : 1
list of members -> in : 1
of members in -> the : 1
members of the -> struct : 1
the struct are -> member : 1
struct are member -> functions : 1
are member functions -> of : 1
member functions of -> the : 1
functions of the -> struct : 1
the struct cannot -> be : 1
struct cannot be -> accessed : 1
cannot be accessed -> from : 1
be accessed from -> within : 1
accessed from within -> boost : 1
from within boost -> is : 1
within boost is -> how : 1
boost is how -> we : 1
how we adapt -> the : 1
we adapt the -> use : 1
adapt the use -> with : 1
the use with -> boost : 1
with boost compute -> using : 1
boost compute using -> the : 1
compute using the -> the : 1
the first parameter -> is : 2
first parameter is -> the : 2
is the name -> of : 2
is the name -> when : 1
name when accessed -> from : 1
when accessed from -> inside : 1
accessed from inside -> boost : 1
from inside boost -> adaption : 1
inside boost adaption -> is : 1
boost adaption is -> only : 1
adaption is only -> necessary : 1
is only necessary -> if : 1
only necessary if -> we : 1
necessary if we -> want : 1
a custom standard -> data : 1
custom standard data -> types : 1
standard data types -> such : 1
data types such -> as : 1
so on can -> be : 1
on can be -> used : 1
be used members -> of : 1
used members of -> a : 1
of a struct -> adapted : 1
a struct adapted -> in : 1
struct adapted in -> boost : 1
adapted in boost -> compute : 1
in boost compute -> be : 1
boost compute be -> that : 1
compute be that -> it : 1
be that it -> may : 1
it may not -> contain : 1
may not contain -> any : 1
contain any padding -> between : 1
any padding between -> for : 1
padding between for -> more : 1
between for more -> information : 1
for more information -> about : 1
information about alignment -> see : 1
about alignment see -> data : 1
alignment see data -> to : 1
see data to -> boost : 1
data to boost -> now : 1
to boost now -> need : 1
boost now need -> to : 1
now need to -> create : 1
need to create -> an : 1
create an opencl -> function : 1
an opencl function -> equivalent : 1
opencl function equivalent -> of : 1
function equivalent of -> the : 1
the the opencl -> programming : 1
the opencl programming -> language : 1
opencl programming language -> uses : 1
programming language uses -> a : 1
language uses a -> standard : 1
uses a standard -> c : 1
a standard c -> and : 1
standard c and -> is : 1
c and is -> therefore : 1
is therefore quite -> similar : 1
therefore quite similar -> to : 1
to the for -> further : 1
the for further -> reference : 1
for further reference -> of : 1
further reference of -> the : 1
reference of the -> opencl : 1
the opencl we -> refer : 1
opencl we refer -> to : 1
refer to its -> official : 1
to its official -> documentation : 1
its official documentation -> available : 1
official documentation available -> source : 1
documentation available source -> code : 1
available source code -> of : 1
code of the -> function : 1
function is passed -> as : 1
passed as where -> the : 1
as where the -> first : 1
the opencl function -> intended : 1
opencl function intended -> to : 1
function intended to -> be : 1
is the actual -> source : 1
the actual source -> bc : 1
actual source bc -> auto : 1
source bc auto -> float : 1
bc auto float -> pi : 2
auto float pi -> return : 2
float pi return -> auto : 1
float pi return -> return : 1
pi return auto -> we : 1
return auto we -> are : 1
auto we are -> using : 1
are using strings -> for : 1
using strings for -> the : 1
strings for the -> opencl : 1
for the opencl -> source : 1
the opencl source -> in : 1
opencl source in -> order : 1
source in order -> to : 1
get a little -> bit : 1
bit more boost -> compute : 1
more boost compute -> comes : 1
boost compute comes -> with : 1
compute comes with -> a : 1
with a convenience -> macro : 1
a convenience macro -> makes : 1
convenience macro makes -> strings : 1
macro makes strings -> out : 1
makes strings out -> of : 1
strings out of -> the : 1
of the source -> code : 1
source code following -> table : 1
code following table -> shows : 1
shows a syntactical -> comparison : 1
a syntactical comparison -> of : 1
syntactical comparison of -> bc : 1
comparison of bc -> auto : 1
of bc auto -> float : 1
pi return return -> pi : 1
return return pi -> return : 1
return pi return -> you : 1
pi return you -> can : 1
can the return -> function : 1
the return function -> and : 1
return function and -> parameters : 1
function and parameters -> have : 1
and parameters have -> been : 1
parameters have been -> stripped : 1
have been stripped -> out : 1
been stripped out -> of : 1
stripped out of -> the : 1
source code does -> not : 1
to be provided -> as : 1
provided as a -> the : 1
a the algorithm -> on : 1
on the implementing -> the : 1
the implementing the -> actual : 1
implementing the actual -> we : 1
the actual we -> need : 1
actual we need -> to : 1
need to copy -> the : 1
to copy the -> data : 1
copy the data -> back : 1
back and the -> data : 1
the data structures -> housed : 1
data structures housed -> at : 2
structures housed at -> the : 2
housed at the -> gpu : 1
housed at the -> cpu : 1
at the gpu -> are : 1
the gpu are -> prefixed : 1
gpu are prefixed -> with : 1
are prefixed with -> and : 1
are prefixed with -> that : 1
prefixed with and -> data : 1
with and data -> structures : 1
at the cpu -> are : 1
the cpu are -> prefixed : 1
cpu are prefixed -> with : 1
prefixed with that -> boost : 1
with that boost -> compute : 1
that boost compute -> has : 1
compute has been -> nice : 1
has been nice -> enough : 1
been nice enough -> to : 1
nice enough to -> provide : 1
enough to provide -> a : 1
to provide a -> functor : 1
provide a functor -> equivalent : 1
a functor equivalent -> of : 1
functor equivalent of -> which : 1
of which we -> use : 1
we use when -> the : 1
use when the -> areas : 1
when the areas -> are : 1
the areas are -> bc : 1
areas are bc -> auto : 1
are bc auto -> create : 1
bc auto create -> a : 1
auto create a -> bunch : 1
create a bunch -> of : 1
a bunch of -> random : 1
bunch of random -> circles : 1
of random circles -> and : 1
random circles and -> copy : 1
circles and copy -> to : 1
and copy to -> the : 1
the const auto -> n : 1
auto auto transform -> the : 1
auto transform the -> circles : 1
transform the circles -> into : 1
the circles into -> their : 1
circles into their -> individual : 1
into their individual -> auto : 1
their individual auto -> q : 1
individual auto q -> accumulate : 1
auto q accumulate -> the : 1
q accumulate the -> circle : 1
accumulate the circle -> note : 1
the circle note -> that : 1
circle note that -> we : 1
are writing to -> a : 1
writing to a -> gpu : 1
to a gpu -> vector : 1
a gpu vector -> of : 1
gpu vector of -> size : 1
of size auto -> copy : 1
size auto copy -> the : 1
auto copy the -> accumulated : 1
copy the accumulated -> area : 1
the accumulated area -> back : 1
accumulated area back -> to : 1
area back to -> the : 1
to the auto -> predicates : 1
the auto predicates -> with : 1
auto predicates with -> boost : 1
with boost we -> would : 1
boost we would -> like : 1
like to execute -> other : 1
to execute other -> for : 1
execute other for -> example : 1
other for example -> sort : 1
for example sort -> the : 1
example sort the -> circles : 1
sort the circles -> their : 1
the circles their -> we : 1
circles their we -> provide : 1
their we provide -> predicates : 1
we provide predicates -> just : 1
provide predicates just -> like : 1
predicates just like -> in : 1
just like in -> is : 1
like in is -> how : 1
in is how -> you : 1
how you would -> use : 1
you would use -> a : 1
use a predicate -> for : 1
predicate for sorting -> the : 1
sorting the cpu -> and : 1
cpu and the -> corresponding : 1
and the corresponding -> predicate : 1
and the corresponding -> opencl : 1
the corresponding predicate -> in : 1
corresponding predicate in -> boost : 1
predicate in boost -> that : 1
in boost that -> in : 1
boost that in -> this : 1
that in this -> we : 1
this we use -> the : 1
the boost computes -> capability : 1
boost computes capability -> to : 1
computes capability to -> use : 1
capability to use -> a : 1
use a regular -> as : 1
regular as although -> it : 1
as although it -> does : 1
although it does -> not : 1
does not operate -> on : 1
not operate on -> it : 1
operate on it -> still : 1
on it still -> copies : 1
it still copies -> the : 1
still copies the -> back : 1
copies the back -> and : 1
the back and -> forth : 1
to the gpu -> device : 1
the gpu device -> before : 1
gpu device before -> and : 1
device before and -> after : 1
before and after -> the : 1
and after the -> algorithm : 1
after the algorithm -> is : 1
algorithm is return -> return : 1
return return function -> circle : 1
return function circle -> the : 1
function circle the -> content : 1
circle the content -> on : 1
the content on -> the : 1
content on the -> and : 1
the and verify -> using : 1
and verify using -> the : 1
verify using the -> bc : 1
using the bc -> auto : 1
the bc auto -> n : 1
bc auto n -> auto : 1
auto circles sort -> on : 1
circles sort on -> verify : 1
sort on verify -> on : 1
on verify on -> the : 1
verify on the -> cpu : 1
the cpu using -> you : 1
cpu using you -> can : 1
using you can -> modifying : 1
you can modifying -> a : 1
can modifying a -> standard : 1
modifying a standard -> stl : 1
a standard stl -> function : 1
standard stl function -> to : 1
stl function to -> execute : 1
function to execute -> on : 1
the gpu using -> boost : 1
gpu using boost -> compute : 1
boost compute only -> requires : 1
compute only requires -> very : 1
only requires very -> few : 1
requires very few -> a : 1
very few a -> custom : 1
few a custom -> kernel : 1
in boost mentioned -> this : 1
boost mentioned this -> is : 1
mentioned this is -> not : 1
is not intended -> as : 1
not intended as -> a : 1
intended as a -> course : 1
as a course -> in : 1
a course in -> but : 1
course in but -> we : 1
in but we -> will : 1
now have a -> look : 1
at how to -> move : 1
at how to -> use : 1
to move away -> from : 1
move away from -> the : 1
away from the -> algorithms : 1
from the algorithms -> and : 1
algorithms and abstractions -> of : 1
and abstractions of -> boost : 1
abstractions of boost -> compute : 1
compute and invoke -> regular : 1
and invoke regular -> where : 1
invoke regular where -> elements : 1
regular where elements -> are : 1
where elements are -> read : 1
elements are read -> at : 1
are read at -> random : 1
read at random -> positions : 1
at random positions -> in : 1
random positions in -> an : 1
positions in an -> in : 1
in an in -> other : 1
an in other -> the : 1
following example is -> almost : 1
example is almost -> bare : 1
is almost bare -> rather : 1
almost bare rather -> than : 1
bare rather than -> boost : 1
rather than boost -> opencl : 1
than boost opencl -> evolves : 1
boost opencl evolves -> from : 1
opencl evolves from -> a : 1
evolves from a -> computer : 1
from a computer -> graphics : 1
a computer graphics -> it : 1
computer graphics it -> does : 1
graphics it does -> contain : 1
it does contain -> a : 1
does contain a -> multitude : 1
contain a multitude -> of : 1
multitude of operations -> for : 1
of operations for -> handling : 1
operations for handling -> textures : 1
for handling textures -> and : 1
handling textures and -> but : 1
textures and but -> in : 1
and but in -> order : 1
but in order -> to : 1
order to see -> the : 2
see the resemblance -> of : 1
the resemblance of -> regular : 1
resemblance of regular -> we : 1
of regular we -> will : 1
regular we will -> use : 1
will use traditional -> vectors : 1
use traditional vectors -> to : 1
traditional vectors to -> operate : 1
vectors to operate -> that : 1
to operate that -> a : 1
operate that a -> gpu : 1
that a gpu -> is : 1
a gpu is -> very : 1
gpu is very -> good : 1
is very good -> at : 1
very good at -> executing : 1
good at executing -> many : 1
at executing many -> tasks : 1
executing many tasks -> in : 1
many tasks in -> and : 1
tasks in and -> opencl : 1
in and opencl -> correspondingly : 1
and opencl correspondingly -> needs : 1
opencl correspondingly needs -> to : 1
correspondingly needs to -> be : 1
to be informed -> of : 1
be informed of -> what : 1
informed of what -> exactly : 1
of what exactly -> it : 1
what exactly it -> can : 1
exactly it can -> when : 1
it can when -> executing : 1
can when executing -> the : 1
executing the we -> will : 1
we will therefore -> give : 1
will therefore give -> it : 1
therefore give it -> a : 1
give it a -> number : 1
it a number -> of : 1
number of just -> like : 1
of just like -> a : 1
like a multidimensional -> of : 1
a multidimensional of -> which : 1
multidimensional of which -> it : 1
of which it -> will : 1
which it will -> apply : 1
it will apply -> the : 1
will apply the -> kernel : 1
apply the kernel -> in : 1
the kernel in -> are : 1
kernel in are -> going : 1
in are going -> to : 1
going to implement -> an : 1
to implement an -> which : 1
implement an which -> applies : 1
an which applies -> a : 1
which applies a -> box : 1
applies a box -> filter : 1
a box filter -> of : 1
box filter of -> size : 1
filter of size -> a : 1
of size a -> gray : 1
size a gray -> scale : 1
a gray scale -> the : 1
gray scale the -> box : 1
scale the box -> filter : 1
the box filter -> simply : 1
box filter simply -> calculates : 1
filter simply calculates -> the : 1
simply calculates the -> mean : 1
calculates the mean -> value : 1
the mean value -> of : 1
mean value of -> the : 1
of the surrounding -> illustrated : 1
the surrounding illustrated -> as : 1
surrounding illustrated as -> and : 1
illustrated as and -> the : 1
and the image -> itself : 1
the image itself -> is : 1
image itself is -> represented : 1
itself is represented -> as : 1
is represented as -> a : 1
represented as a -> and : 1
as a and -> an : 1
a and an -> integer : 1
an integer representing -> its : 1
integer representing its -> note : 1
representing its note -> that : 1
its note that -> we : 1
that we simplify -> the : 1
we simplify the -> algorithm : 1
simplify the algorithm -> by : 1
algorithm by avoiding -> the : 1
by avoiding the -> which : 1
avoiding the which -> relieves : 1
the which relieves -> us : 1
us from cdpaligncenter -> filter : 1
from cdpaligncenter filter -> of : 1
cdpaligncenter filter of -> an : 1
filter of an -> individual : 1
of an individual -> grid : 1
an individual grid -> the : 1
individual grid the -> implement : 1
grid the implement -> the : 1
the implement the -> per : 1
implement the per -> element : 1
the per element -> box : 1
per element box -> filter : 1
element box filter -> as : 1
box filter as -> a : 1
filter as a -> regular : 1
a regular lambda -> function : 1
regular lambda function -> in : 1
function in and -> the : 1
the corresponding opencl -> kernel : 1
corresponding opencl kernel -> as : 1
opencl kernel as -> a : 1
kernel as a -> in : 1
as a in -> order : 1
see the put -> them : 1
the put them -> side : 1
put them side -> by : 1
them side by -> box : 1
side by box -> filter : 1
by box filter -> box : 1
box filter box -> filter : 1
filter box filter -> int : 1
box filter int -> int : 1
filter int int -> const : 1
int int const -> int : 1
int const int -> int : 1
const int int -> float : 1
int int float -> sum : 1
int float sum -> for : 1
float sum for -> for : 2
sum for for -> sum : 2
for for sum -> w : 1
for for sum -> float : 1
for sum w -> float : 1
sum w float -> n : 1
w float n -> float : 1
float n float -> average : 1
n float average -> sum : 1
float average sum -> void : 1
float average sum -> bc : 1
average sum void -> global : 1
sum void global -> const : 1
void global const -> global : 1
global const global -> int : 1
const global int -> int : 1
global int int -> r : 1
int int r -> int : 1
int r int -> x : 1
r int x -> int : 1
int x int -> y : 1
x int y -> float : 1
int y float -> sum : 1
y float sum -> for : 1
for sum float -> float : 1
sum float float -> average : 1
float float average -> sum : 1
average sum bc -> kernel : 1
sum bc kernel -> for : 1
bc kernel for -> two : 1
kernel for two -> use : 1
for two use -> the : 1
two use the -> filters : 1
use the filters -> by : 1
the filters by -> applying : 1
filters by applying -> them : 1
by applying them -> to : 1
applying them to -> the : 1
them to the -> the : 1
the the arguments -> for : 1
the arguments for -> the : 1
arguments for the -> boost : 1
for the boost -> compute : 1
boost compute kernel -> are : 1
compute kernel are -> set : 1
kernel are set -> using : 1
are set using -> before : 1
set using before -> and : 1
using before and -> when : 1
before and when -> the : 1
and when the -> execution : 1
when the execution -> is : 1
execution is performed -> using : 1
is performed using -> we : 1
performed using we -> apply : 1
using we apply -> the : 1
apply the number -> of : 1
number of dimensions -> and : 1
of dimensions and -> the : 1
dimensions and the -> ranges : 1
ranges of each -> which : 1
of each which -> is : 1
each which is -> the : 1
equivalent of how -> a : 1
how a double -> is : 1
a double is -> used : 1
double is used -> in : 1
the the corresponding -> x : 1
the corresponding x -> and : 1
corresponding x and -> y : 1
x and y -> variables : 1
and y variables -> in : 1
y variables in -> the : 1
in the kernel -> are : 1
the kernel are -> then : 1
kernel are then -> fetched : 1
are then fetched -> using : 1
then fetched using -> in : 1
fetched using in -> notice : 1
using in notice -> of : 1
in notice of -> the : 1
notice of the -> similarities : 1
of the similarities -> between : 1
the similarities between -> stl : 1
similarities between stl -> algorithms : 1
between stl algorithms -> and : 1
and the equivalents -> as : 1
the equivalents as -> shown : 1
equivalents as shown -> in : 1
in the table -> filter : 1
the table filter -> on : 1
table filter on -> filter : 1
filter on filter -> on : 1
on filter on -> int : 1
filter on int -> int : 1
on int int -> int : 1
int int using -> create : 2
int using create -> std : 1
int using create -> vectors : 1
using create std -> auto : 1
create std auto -> src : 1
std auto src -> auto : 1
auto dst make -> offset : 1
dst make offset -> and : 1
make offset and -> auto : 2
offset and auto -> offset : 2
and auto offset -> auto : 2
auto offset auto -> elems : 2
offset auto elems -> invoke : 2
auto elems invoke -> filter : 2
elems invoke filter -> on : 2
invoke filter on -> for : 1
invoke filter on -> copy : 1
filter on for -> x : 1
on for x -> for : 1
for x for -> y : 1
x for y -> auto : 1
for y auto -> xp : 1
y auto xp -> x : 1
auto xp x -> auto : 1
xp x auto -> yp : 1
x auto yp -> y : 1
auto yp y -> return : 1
yp y return -> bc : 1
y return bc -> int : 1
return bc int -> int : 1
bc int int -> int : 1
using create vectors -> for : 1
create vectors for -> auto : 1
vectors for auto -> auto : 1
auto auto make -> offset : 1
auto make offset -> and : 1
filter on copy -> back : 1
on copy back -> to : 1
copy back to -> auto : 1
back to auto -> return : 1
auto return that -> the : 1
the function accepts -> any : 1
function accepts any -> amount : 1
accepts any amount -> of : 1
any amount of -> dimensions : 1
amount of dimensions -> to : 1
of dimensions to -> parallelize : 1
dimensions to parallelize -> although : 1
to parallelize although -> we : 1
parallelize although we -> use : 1
although we use -> two : 1
we use two -> dimensions : 1
use two dimensions -> in : 1
two dimensions in -> this : 1
dimensions in this -> gpu : 1
in this gpu -> computation : 1
this gpu computation -> on : 1
on the gpus -> are : 1
the gpus are -> generally : 1
gpus are generally -> harder : 1
are generally harder -> to : 1
generally harder to -> debug : 1
harder to debug -> than : 1
to debug than -> a : 1
debug than a -> regular : 1
than a regular -> verifying : 1
a regular verifying -> the : 1
regular verifying the -> results : 1
verifying the results -> is : 1
the results is -> utterly : 1
results is utterly -> as : 1
is utterly as -> we : 1
utterly as we -> are : 1
with the result -> might : 1
result might not -> be : 1
not be therefore -> we : 1
be therefore we -> use : 1
therefore we use -> a : 1
use a function -> that : 1
that accepts minor -> differences : 1
accepts minor differences -> as : 1
minor differences as -> auto : 1
differences as auto -> float : 1
as auto float -> auto : 1
float auto epsilon -> return : 1
auto epsilon return -> auto : 1
epsilon return auto -> cpu : 1
return auto cpu -> auto : 1
auto cpu auto -> gpu : 1
auto cpu auto -> possible : 1
cpu auto gpu -> auto : 1
auto gpu auto -> cpu : 1
gpu auto cpu -> auto : 1
cpu auto possible -> output : 1
auto possible output -> that : 1
possible output that -> might : 1
output that might -> as : 1
that might as -> well : 1
might as well -> be : 1
as well be -> one : 1
well be one -> depending : 1
be one depending -> on : 1
one depending on -> the : 1
on the with -> this : 1
the with this -> piece : 1
with this piece -> of : 1
piece of we -> have : 1
we have successfully -> verified : 1
have successfully verified -> that : 1
successfully verified that -> our : 1
verified that our -> algorithm : 1
our algorithm works -> on : 1
algorithm works on -> the : 1
works on the -> intentionally : 1
on the intentionally -> not : 1
the intentionally not -> included : 1
intentionally not included -> any : 1
not included any -> performance : 1
included any performance -> comparisons : 1
any performance comparisons -> between : 1
performance comparisons between -> the : 1
comparisons between the -> cpu : 1
cpu and gpu -> in : 1
and gpu in -> this : 1
gpu in this -> as : 1
in this as -> the : 1
this as the -> gpu : 1
as the gpu -> algorithms : 1
the gpu algorithms -> are : 1
gpu algorithms are -> often : 1
algorithms are often -> bottlenecked : 1
are often bottlenecked -> by : 1
often bottlenecked by -> transferring : 1
bottlenecked by transferring -> data : 1
by transferring data -> back : 1
transferring data back -> and : 1
to the but -> with : 1
the but with -> that : 1
but with that -> in : 1
with that in -> a : 1
that in a -> computation : 1
in a computation -> time : 1
a computation time -> in : 1
computation time in -> the : 1
range of faster -> on : 1
of faster on -> a : 1
faster on a -> standard : 1
a standard gpu -> compared : 1
standard gpu compared -> to : 1
gpu compared to -> a : 1
to a standard -> cpu : 1
a standard cpu -> is : 1
standard cpu is -> not : 1
cpu is not -> other : 1
is not other -> a : 1
not other a -> application : 1
other a application -> will : 1
a application will -> be : 1
application will be -> written : 1
will be written -> with : 1
be written with -> gpu : 1
written with gpu -> parallelization : 1
with gpu parallelization -> in : 1
gpu parallelization in -> mind : 1
parallelization in mind -> in : 1
in mind in -> order : 1
mind in order -> to : 1
be this you -> have : 1
this you have -> learned : 1
have learned the -> complexity : 1
learned the complexity -> of : 1
complexity of handcrafting -> an : 1
of handcrafting an -> algorithm : 1
handcrafting an algorithm -> to : 1
in parallel and -> how : 1
parallel and how -> to : 1
the parallel versions -> of : 1
versions of the -> stl : 1
the stl on -> top : 1
top of had -> a : 1
of had a -> look : 1
use in order -> to : 1
order to take -> advantage : 1
of the heavy -> processing : 1
the heavy processing -> power : 1
heavy processing power -> of : 1
processing power of -> modern : 1
of modern gpu -> books : 1
modern gpu books -> you : 1
gpu books you -> may : 1
you may you -> enjoyed : 1
may you enjoyed -> this : 1
you enjoyed this -> you : 1
enjoyed this you -> may : 1
this you may -> be : 1
you may be -> interested : 1
may be interested -> in : 1
be interested in -> these : 1
interested in these -> other : 1
in these other -> books : 1
these other books -> by : 1
other books by -> maya : 1
books by maya -> posch : 1
by maya posch -> dive : 1
maya posch dive -> into : 1
posch dive into -> the : 1
dive into the -> details : 1
details of the -> how : 1
of the how -> various : 1
the how various -> operating : 1
how various operating -> systems : 1
various operating systems -> currently : 1
operating systems currently -> implement : 1
systems currently implement -> multithreading : 1
currently implement multithreading -> the : 1
implement multithreading the -> best : 1
multithreading the best -> multithreading : 1
the best multithreading -> apis : 1
best multithreading apis -> when : 1
multithreading apis when -> designing : 1
apis when designing -> a : 1
when designing a -> new : 1
designing a new -> the : 1
new the use -> of : 1
use of and -> other : 1
of and other -> synchronization : 1
and other synchronization -> concepts : 1
other synchronization concepts -> and : 1
synchronization concepts and -> see : 1
concepts and see -> how : 1
how to safely -> pass : 1
to safely pass -> data : 1
safely pass data -> between : 1
pass data between -> threads : 1
data between threads -> the : 1
between threads the -> level : 1
threads the level -> of : 1
level of api -> support : 1
of api support -> provided : 1
api support provided -> by : 1
support provided by -> various : 1
provided by various -> common : 1
by various common -> issues : 1
various common issues -> in : 1
common issues in -> multithreaded : 1
issues in multithreaded -> code : 1
in multithreaded code -> and : 1
multithreaded code and -> recognize : 1
code and recognize -> common : 1
and recognize common -> pitfalls : 1
recognize common pitfalls -> using : 1
common pitfalls using -> tools : 1
pitfalls using tools -> such : 1
using tools such -> as : 1
tools such as -> and : 1
as and more -> the : 1
and more the -> nature : 1
more the nature -> of : 1
the nature of -> atomic : 1
nature of atomic -> operations : 1
of atomic operations -> and : 1
atomic operations and -> understand : 1
operations and understand -> how : 1
and understand how -> they : 1
understand how they -> can : 1
be useful in -> optimizing : 1
useful in optimizing -> code : 1
in optimizing code -> a : 1
optimizing code a -> multithreaded : 1
code a multithreaded -> application : 1
a multithreaded application -> in : 1
multithreaded application in -> a : 1
in a distributed -> computing : 1
a distributed computing -> a : 1
distributed computing a -> gpgpu : 1
computing a gpgpu -> application : 1
a gpgpu application -> that : 1
gpgpu application that -> employs : 1
application that employs -> jeganathan : 1
that employs jeganathan -> swaminathan : 1
employs jeganathan swaminathan -> modular : 1
jeganathan swaminathan modular -> applications : 1
swaminathan modular applications -> in : 1
modular applications in -> terms : 1
applications in terms -> of : 1
terms of the -> existing : 1
of the existing -> and : 1
the existing and -> newly : 1
existing and newly -> introduced : 1
and newly introduced -> clean : 1
newly introduced clean -> and : 1
introduced clean and -> refactor : 1
clean and refactor -> legacy : 1
and refactor legacy -> the : 1
refactor legacy the -> possibilities : 1
legacy the possibilities -> provided : 1
the possibilities provided -> by : 1
possibilities provided by -> cucumber : 1
provided by cucumber -> and : 1
by cucumber and -> google : 1
cucumber and google -> to : 1
and google to -> automate : 1
google to automate -> test : 1
to automate test -> cases : 1
automate test cases -> frameworks : 1
test cases frameworks -> with : 1
cases frameworks with -> acquainted : 1
frameworks with acquainted -> with : 1
with acquainted with -> the : 1
acquainted with the -> new : 1
with the new -> gui : 1
the new gui -> applications : 1
new gui applications -> in : 1
gui applications in -> portable : 1
applications in portable -> applications : 1
in portable applications -> using : 1
portable applications using -> standard : 1
applications using standard -> a : 1
using standard a -> review : 1
standard a review -> let : 1
what you share -> your : 1
you share your -> thoughts : 1
share your thoughts -> on : 1
your thoughts on -> this : 1
thoughts on this -> book : 1
on this book -> with : 1
this book with -> others : 1
book with others -> by : 1
with others by -> leaving : 1
others by leaving -> a : 1
by leaving a -> review : 1
leaving a review -> on : 1
that you bought -> it : 1
you bought it -> you : 1
bought it you -> purchased : 1
it you purchased -> the : 1
you purchased the -> book : 1
purchased the book -> from : 1
the book from -> please : 1
book from please -> leave : 1
from please leave -> us : 1
please leave us -> an : 1
leave us an -> honest : 1
us an honest -> review : 1
an honest review -> on : 1
honest review on -> this : 1
review on this -> amazon : 1
on this amazon -> this : 1
this amazon this -> is : 1
amazon this is -> vital : 1
this is vital -> so : 1
is vital so -> that : 1
vital so that -> other : 1
so that other -> potential : 1
that other potential -> readers : 1
other potential readers -> can : 1
readers can see -> and : 1
can see and -> use : 1
to make purchasing -> we : 1
make purchasing we -> can : 1
purchasing we can -> understand : 1
we can understand -> what : 1
understand what our -> customers : 1
what our customers -> think : 1
our customers think -> about : 1
customers think about -> our : 1
feedback on the -> title : 1
on the title -> that : 1
the title that -> they : 1
title that they -> have : 1
that they have -> worked : 1
they have worked -> with : 1
worked with packt -> to : 1
with packt to -> it : 1
packt to it -> will : 1
it will only -> take : 1
will only take -> a : 1
only take a -> few : 1
take a few -> minutes : 1
a few minutes -> of : 1
few minutes of -> your : 1
minutes of your -> but : 1
of your but -> is : 1
your but is -> valuable : 1
but is valuable -> to : 1
is valuable to -> other : 1
valuable to other -> potential : 1
to other potential -> our : 1
other potential our -> and : 1
potential our and -> thank : 1
