scalable : 1
robust : 1
rights : 1
retrieval : 1
transmitted : 1
permission : 1
brief : 1
quotations : 1
embedded : 1
critical : 1
articles : 1
effort : 1
preparation : 1
contained : 1
sold : 1
express : 1
nor : 1
dealers : 1
held : 1
liable : 1
damages : 1
alleged : 1
indirectly : 1
endeavored : 1
trademark : 1
companies : 1
products : 1
mentioned : 1
guarantee : 1
lawrence : 1
supriya : 1
safis : 1
arvindkumar : 1
april : 1
online : 1
digital : 1
gives : 1
leading : 1
tools : 1
personal : 1
advance : 1
practical : 1
ebooks : 1
skill : 1
plans : 1
especially : 1
video : 1
bookmark : 1
versions : 1
epub : 1
upgrade : 1
entitled : 1
discount : 1
touch : 1
technical : 1
exclusive : 1
discounts : 1
microsoft : 1
certified : 1
professional : 1
experienced : 1
junior : 1
school : 1
web : 1
application : 1
senior : 1
indonesian : 1
specializes : 1
innovation : 1
technology : 1
blessings : 1
am : 1
supported : 1
beloved : 1
olav : 1
naughty : 1
fail : 1
happy : 1
parents : 1
gratitude : 1
benediktus : 1
dwi : 1
mentor : 1
superior : 1
helped : 1
automated : 1
test : 1
equipment : 1
firm : 1
primarily : 1
ic : 1
mobile : 1
device : 1
aircraft : 1
missile : 1
simulations : 1
force : 1
tester : 1
operating : 1
commercial : 1
android : 1
passion : 1
delving : 1
world : 1
wife : 1
her : 1
finish : 1
team : 1
opportunity : 1
enlightening : 1
comments : 1
thousands : 1
insight : 1
hot : 1
recruiting : 1
submit : 1
developer : 1
familiar : 1
dive : 1
proficient : 1
knowledge : 1
recommended : 1
controlling : 1
integrated : 1
environment : 1
introduced : 1
covers : 1
talks : 1
walks : 1
discusses : 1
fun : 1
stuff : 1
anagrams : 1
subsequent : 1
short : 1
elaborates : 1
emailed : 1
downloads : 1
box : 1
sure : 1
unzip : 1
bundle : 1
hosted : 1
bundles : 1
rich : 1
catalog : 1
images : 1
conventions : 1
throughout : 1
database : 1
dummy : 1
twitter : 1
wish : 1
draw : 1
attention : 1
particular : 1
relevant : 1
indicates : 1
menus : 1
dialog : 1
boxes : 1
notes : 1
tricks : 1
subject : 1
questions : 1
aspect : 1
taken : 1
mistakes : 1
mistake : 1
report : 1
errata : 1
submission : 1
entering : 1
illegal : 1
copies : 1
contact : 1
expertise : 1
contributing : 1
purchase : 1
solid : 1
foundations : 1
measure : 1
compiled : 1
active : 1
directory : 1
error : 1
message : 1
appended : 1
displays : 1
asks : 1
presses : 1
talk : 1
commands : 1
begins : 1
slashes : 1
comment : 1
action : 1
boring : 1
prompt : 1
paid : 1
macos : 1
official : 1
intended : 1
pages : 1
accesses : 1
installing : 1
select : 1
destination : 1
dealt : 1
normally : 1
deciding : 1
upon : 1
ivar : 1
cvar : 1
llvar : 1
bovar : 1
direct : 1
utilizing : 1
choosing : 1
ones : 1
calculator : 1
capable : 1
options : 1
iterations : 1
chance : 1
she : 1
computernumber : 1
usernumber : 1
g : 1
suits : 1
incremental : 1
cast : 1
fit : 1
aggregate : 1
multiple : 1
individual : 1
grouped : 1
associated : 1
dvd : 1
buttons : 1
ejecting : 1
stopping : 1
decreasing : 1
volume : 1
affected : 1
grouping : 1
containers : 1
sections : 1
wrapping : 1
differences : 1
recommend : 1
deriving : 1
necessary : 1
requirement : 1
aliasing : 1
copying : 1
members : 1
overloading : 1
features : 1
allow : 1
operate : 1
rewritten : 1
separated : 1
specifying : 1
angle : 1
instances : 1
feature : 1
commonly : 1
descending : 1
widely : 1
overload : 1
component : 1
functor : 1
parameterize : 1
graphs : 1
slower : 1
twice : 1
notations : 1
mostly : 1
omega : 1
factorial : 1
similarly : 1
processed : 1
amortized : 1
calculates : 1
varying : 1
detail : 1
dig : 1
concepts : 1
series : 1
consecutive : 1
individually : 1
purposes : 1
illustrates : 1
couple : 1
brackets : 1
manipulated : 1
figure : 1
practice : 1
manipulation : 1
receives : 1
fact : 1
wildcard : 1
apostrophe : 1
wrap : 1
arrlength : 1
incrementing : 1
remember : 1
decrement : 1
multidimensional : 1
accepts : 1
described : 1
looping : 1
piece : 1
connectivity : 1
object : 1
filled : 1
recall : 1
differs : 1
inform : 1
together : 1
clear : 1
worry : 1
instantiated : 1
restricted : 1
commenting : 1
backwards : 1
traversal : 1
leverage : 1
charm : 1
movement : 1
printed : 1
names : 1
vectors : 1
iterators : 1
act : 1
vectorlist : 1
accidentally : 1
undefined : 1
trying : 1
laid : 1
repository : 1
strengths : 1
indexing : 1
reading : 1
sources : 1
popping : 1
restriction : 1
support : 1
off : 1
due : 1
wearing : 1
face : 1
utilize : 1
adapts : 1
stackint : 1
braces : 1
close : 1
squared : 1
validity : 1
retrieves : 1
isvalid : 1
stackchar : 1
bo : 1
expr : 1
supply : 1
expressions : 1
restrictions : 1
effect : 1
travel : 1
showing : 1
queueing : 1
sides : 1
backside : 1
travels : 1
frontside : 1
ready : 1
stand : 1
wait : 1
people : 1
adopts : 1
newly : 1
explore : 1
conditions : 1
assigning : 1
queueint : 1
assigns : 1
resides : 1
frontmost : 1
lifo : 1
popular : 1
bubbles : 1
rise : 1
ignored : 1
selectionsort : 1
something : 1
refvalue : 1
insertionsort : 1
partially : 1
designing : 1
half : 1
totalelements : 1
endindex : 1
temparray : 1
leftindex : 1
mergedindex : 1
merging : 1
really : 1
incursively : 1
mergesort : 1
seat : 1
shifting : 1
arranges : 1
assumption : 1
countersize : 1
counterarray : 1
involve : 1
putting : 1
queues : 1
populate : 1
collected : 1
diving : 1
exponetial : 1
looked : 1
arranging : 1
unexisting : 1
occurs : 1
miss : 1
basis : 1
published : 1
screenshot : 1
demonstrates : 1
ninth : 1
eliminate : 1
invocations : 1
lowindex : 1
improves : 1
jumping : 1
exponent : 1
perfom : 1
displaying : 1
takes : 1
presents : 1
succeeding : 1
match : 1
frequently : 1
gain : 1
execution : 1
sentence : 1
compose : 1
reserve : 1
extended : 1
dynamically : 1
functionalities : 1
stream : 1
produced : 1
rearranging : 1
beside : 1
transform : 1
nut : 1
jar : 1
lemon : 1
comparisons : 1
converts : 1
uppercase : 1
procedure : 1
supposing : 1
decimalnumber : 1
quot : 1
dv : 1
concatenate : 1
results : 1
c : 1
multiplied : 1
deleting : 1
subsets : 1
reason : 1
simplicity : 1
against : 1
keeping : 1
brown : 1
fox : 1
lazy : 1
confused : 1
satisfies : 1
discovering : 1
regex : 1
patlen : 1
quit : 1
patternstr : 1
vice : 1
document : 1
referred : 1
conclude : 1
forms : 1
duplicate : 1
subtrees : 1
image : 1
taller : 1
false : 1
lies : 1
positive : 1
intend : 1
negative : 1
returning : 1
happens : 1
rules : 1
traversed : 1
simplify : 1
validate : 1
retrieving : 1
outputs : 1
implementations : 1
focus : 1
invented : 1
edge : 1
achieved : 1
mathematical : 1
balancing : 1
rotation : 1
avltree : 1
unbalance : 1
below : 1
representation : 1
decreased : 1
filling : 1
downwards : 1
maxval : 1
fix : 1
navigation : 1
priorityqueue : 1
advantages : 1
futher : 1
approximately : 1
resize : 1
consumption : 1
manage : 1
sake : 1
mapping : 1
mapped : 1
owner : 1
dash : 1
obtained : 1
returned : 1
erase : 1
auto : 1
tranverse : 1
adam : 1
lindsey : 1
storing : 1
yet : 1
totally : 1
deletedelement : 1
temp : 1
calculations : 1
tracked : 1
pairs : 1
handles : 1
modulo : 1
unless : 1
perfect : 1
cuckoo : 1
hopscotch : 1
links : 1
kinds : 1
relatively : 1
terms : 1
specifically : 1
future : 1
local : 1
optimum : 1
optimization : 1
maximal : 1
cash : 1
theme : 1
minimize : 1
subtract : 1
denominations : 1
changingnominal : 1
exit : 1
float : 1
monetary : 1
compression : 1
leftchild : 1
rightchild : 1
inserts : 1
freq : 1
extracted : 1
special : 1
addding : 1
compressed : 1
plus : 1
blank : 1
forest : 1
ties : 1
trees : 1
weight : 1
choice : 1
enough : 1
spent : 1
disk : 1
term : 1
shows : 1
subproblems : 1
combines : 1
solves : 1
generally : 1
looks : 1
unknown : 1
cutoff : 1
ignoring : 1
divider : 1
sets : 1
median : 1
partitioning : 1
guarantees : 1
subproblem : 1
roughly : 1
eight : 1
multiplications : 1
matrices : 1
generalize : 1
floating : 1
stable : 1
classic : 1
justice : 1
rewriting : 1
natural : 1
inefficient : 1
draws : 1
changes : 1
excluding : 1
during : 1
successive : 1
exhausted : 1
scanned : 1
exchanged : 1
improved : 1
exchanges : 1
wide : 1
applicability : 1
yields : 1
unacceptably : 1
randomness : 1
typically : 1
doubt : 1
purpose : 1
traced : 1
central : 1
importance : 1
recognized : 1
solovay : 1
acceptable : 1
erroneous : 1
repeating : 1
subsamples : 1
amplify : 1
too : 1
gather : 1
distribution : 1
generator : 1
extremely : 1
suffices : 1
cut : 1
said : 1
record : 1
counts : 1
seconds : 1
recorded : 1
m : 1
explicit : 1
verify : 1
task : 1
human : 1
chrs : 1
backtrack : 1
resembling : 1
pretty : 1
reach : 1
placing : 1
kitchen : 1
bad : 1
discarded : 1
arrangement : 1
possibilities : 1
loses : 1
handled : 1
lookup : 1
center : 1
evaluation : 1
win : 1
board : 1
reply : 1
costly : 1
opening : 1
stage : 1
complex : 1
relative : 1
positional : 1
crucial : 1
maximizing : 1
programs : 1
losing : 1
course : 1
could : 1
flipping : 1
drawing : 1
house : 1
multiplying : 1
enjoyed : 1
viktor : 1
constructs : 1
cache : 1
boost : 1
specialized : 1
metaprogramming : 1
runtime : 1
management : 1
custom : 1
boilerplate : 1
reflection : 1
benefits : 1
concurrent : 1
preserved : 1
readability : 1
proxy : 1
insights : 1
subtle : 1
expressive : 1
compromising : 1
arthur : 1
thread : 1
monomorphic : 1
polymorphic : 1
meaning : 1
vocabulary : 1
product : 1
thoughts : 1
leaving : 1
bought : 1
honest : 1
amazon : 1
vital : 1
purchasing : 1
customers : 1
minutes : 1
valuable : 1
made : 2
neither : 2
appropriate : 2
livery : 2
industry : 2
plan : 2
videos : 2
offers : 2
pdf : 2
version : 2
sign : 2
receive : 2
started : 2
lot : 2
engineer : 2
achieve : 2
sometimes : 2
never : 2
his : 2
air : 2
systems : 2
latest : 2
functional : 2
pleasure : 2
becoming : 2
worked : 2
developers : 2
tech : 2
share : 2
general : 2
topic : 2
capability : 2
closer : 2
doublylinkedlist : 2
acquainted : 2
weaknesses : 2
programmers : 2
advantage : 2
begin : 2
interesting : 2
introduces : 2
explains : 2
explain : 2
account : 2
register : 2
onscreen : 2
important : 2
email : 2
mention : 2
title : 2
grateful : 2
selecting : 2
come : 2
website : 2
writing : 2
site : 2
unbiased : 2
opinion : 2
think : 2
feedback : 2
bash : 2
option : 2
produce : 2
typing : 2
pressing : 2
refactored : 2
format : 2
considered : 2
personally : 2
automate : 2
button : 2
simpler : 2
placeholder : 2
pieces : 2
ascii : 2
whole : 2
executing : 2
path : 2
things : 2
condition : 2
examining : 2
whereas : 2
hint : 2
replacing : 2
implementing : 2
imin : 2
imax : 2
menu : 2
playing : 2
cards : 2
enums : 2
isuit : 2
ielement : 2
cardsuits : 2
cardelements : 2
groups : 2
manipulating : 2
remote : 2
increases : 2
details : 2
encapsulation : 2
group : 2
abstraction : 2
hide : 2
assigned : 2
animal : 2
discussing : 2
similarity : 2
default : 2
derive : 2
derives : 2
shallow : 2
objects : 2
accept : 2
powerful : 2
components : 2
ranges : 2
deeper : 2
good : 2
constants : 2
valued : 2
axis : 2
were : 2
arr : 2
bounds : 2
saw : 2
iterative : 2
calculating : 2
deal : 2
comes : 2
placed : 2
contiguous : 2
allocation : 2
accessing : 2
initialized : 2
former : 2
moved : 2
capacity : 2
oldarray : 2
copied : 2
skip : 2
removes : 2
connect : 2
chain : 2
simplified : 2
informs : 2
additional : 2
easier : 2
content : 2
note : 2
candidate : 2
neighbor : 2
srch : 2
tenth : 2
produces : 2
backward : 2
pointers : 2
throw : 2
setting : 2
positions : 2
imagine : 2
wear : 2
bangles : 2
bangle : 2
true : 2
checks : 2
possibility : 2
valid : 2
parentheses : 2
scenario : 2
completely : 2
contrast : 2
enqueueing : 2
designed : 2
marked : 2
flag : 2
unsortedelements : 2
isswapped : 2
bubblesort : 2
useful : 2
stop : 2
minindex : 2
poker : 2
rather : 2
break : 2
biggest : 2
screen : 2
merges : 2
rightindex : 2
invoked : 2
far : 2
restore : 2
largestelement : 2
exp : 2
slowest : 2
sequential : 2
indexes : 2
picking : 2
checked : 2
nearest : 2
highest : 2
exponentially : 2
processes : 2
presence : 2
calls : 2
moderate : 2
composed : 2
person : 2
unmatched : 2
black : 2
white : 2
easy : 2
subset : 2
myvector : 2
final : 2
processor : 2
notepad : 2
sublime : 2
helper : 2
unbalanced : 2
properties : 2
exist : 2
reached : 2
assume : 2
ancestors : 2
ancestor : 2
successorkey : 2
heavy : 2
balancednode : 2
representing : 2
getting : 2
recurse : 2
down : 2
million : 2
slots : 2
map : 2
column : 2
append : 2
iskeyfound : 2
deleted : 2
currentsize : 2
guaranteed : 2
among : 2
making : 2
totaldenom : 2
frequent : 2
unsigned : 2
internal : 2
obviously : 2
fewer : 2
creates : 2
solving : 2
assuming : 2
k : 2
exhaustive : 2
approach : 2
nexttolast : 2
entire : 2
computed : 2
solutions : 2
fixed : 2
pseudorandom : 2
deterministic : 2
essentially : 2
heads : 2
initialvalue : 2
examine : 2
undo : 2
placement : 2
arrangements : 2
p : 2
terminal : 2
chess : 2
few : 2
improve : 2
modern : 2
cpu : 2
optimizations : 2
efficient : 3
accuracy : 3
caused : 3
high : 3
years : 3
language : 3
software : 3
whose : 3
hardware : 3
developed : 3
understanding : 3
giving : 3
author : 3
taking : 3
global : 3
color : 3
flexibility : 3
multiplication : 3
furniture : 3
let : 3
introduction : 3
much : 3
explanation : 3
radix : 3
seven : 3
words : 3
prevent : 3
paradigms : 3
implements : 3
backtracking : 3
download : 3
purchased : 3
folder : 3
finishing : 3
location : 3
potential : 3
chapters : 3
templates : 3
simplest : 3
followed : 3
chose : 3
header : 3
execute : 3
ease : 3
toolchain : 3
press : 3
manipulate : 3
basically : 3
way : 3
often : 3
keywords : 3
follows : 3
l : 3
userchar : 3
borrow : 3
affect : 3
adts : 3
applied : 3
outside : 3
ability : 3
structs : 3
anymore : 3
makes : 3
having : 3
later : 3
regarding : 3
section : 3
omits : 3
instruction : 3
addition : 3
parts : 3
present : 3
theta : 3
contrary : 3
calculated : 3
concept : 3
increment : 3
latter : 3
fill : 3
decrease : 3
printing : 3
answer : 3
thing : 3
applying : 3
regardless : 3
everything : 3
existence : 3
arrays : 3
better : 3
passing : 3
usage : 3
peek : 3
hand : 3
bottom : 3
proof : 3
invalid : 3
ask : 3
adopt : 3
slow : 3
required : 3
repeated : 3
swapping : 3
passes : 3
needed : 3
understood : 3
sorts : 3
remains : 3
shifted : 3
halved : 3
level : 3
partition : 3
arrcounter : 3
third : 3
reset : 3
fastest : 3
recursion : 3
infinite : 3
runs : 3
increased : 3
secondlist : 3
reverse : 3
spelling : 3
letters : 3
spaces : 3
doing : 3
division : 3
multiply : 3
changing : 3
bitcounter : 3
suspected : 3
solved : 3
generating : 3
leaves : 3
treenode : 3
traversing : 3
maintain : 3
swapid : 3
consider : 3
situation : 3
update : 3
hashkey : 3
totalelement : 3
quadratic : 3
bold : 3
hashing : 3
greedy : 3
optimal : 3
coins : 3
denomination : 3
codes : 3
fibonacci : 3
state : 3
part : 4
written : 4
publishing : 4
directly : 4
library : 4
coding : 4
ebook : 4
fully : 4
he : 4
developing : 4
computer : 4
experience : 4
smart : 4
currently : 4
very : 4
working : 4
authors : 4
abstract : 4
analyze : 4
easily : 4
dynamic : 4
extract : 4
entered : 4
care : 4
why : 4
performance : 4
saved : 4
generated : 4
anything : 4
tell : 4
stated : 4
window : 4
examples : 4
under : 4
sample : 4
initialization : 4
curly : 4
fraction : 4
evenly : 4
distribute : 4
times : 4
game : 4
matches : 4
handling : 4
probability : 4
seen : 4
y : 4
iguess : 4
deck : 4
notate : 4
suit : 4
s : 4
idea : 4
hiding : 4
definition : 4
consume : 4
private : 4
behavior : 4
interface : 4
though : 4
avoid : 4
tried : 4
play : 4
goes : 4
ascending : 4
building : 4
represented : 4
omit : 4
nested : 4
outer : 4
determine : 4
above : 4
previously : 4
starts : 4
zero : 4
occur : 4
discussion : 4
functionality : 4
matter : 4
count : 4
almost : 4
reduce : 4
displayed : 4
bunch : 4
forget : 4
fourth : 4
topmost : 4
declare : 4
cause : 4
initially : 4
leftmost : 4
detect : 4
place : 4
rearrange : 4
reconstruct : 4
respective : 4
iterates : 4
learned : 4
collect : 4
buckets : 4
looking : 4
middlerightindex : 4
improvement : 4
jumps : 4
impossible : 4
moves : 4
moving : 4
iterated : 4
space : 4
pointing : 4
detector : 4
rightmost : 4
larger : 4
binarystring : 4
strlen : 4
checking : 4
keynode : 4
leaf : 4
connected : 4
bypass : 4
updated : 4
heapsize : 4
hashelement : 4
obtain : 4
minheapnode : 4
compute : 4
applications : 5
prior : 5
full : 5
over : 5
help : 5
less : 5
read : 5
who : 5
work : 5
inputs : 5
stacks : 5
review : 5
readers : 5
insertion : 5
digits : 5
large : 5
happen : 5
six : 5
clicking : 5
although : 5
across : 5
leave : 5
once : 5
topics : 5
desktop : 5
compiling : 5
command : 5
specify : 5
able : 5
actually : 5
represent : 5
ways : 5
defining : 5
equals : 5
symbol : 5
being : 5
seed : 5
implemented : 5
char : 5
consists : 5
holds : 5
created : 5
member : 5
added : 5
automatically : 5
sequence : 5
depends : 5
represents : 5
faster : 5
certain : 5
illustration : 5
done : 5
iterating : 5
ptr : 5
occurrence : 5
passed : 5
old : 5
property : 5
pointed : 5
fifth : 5
prepare : 5
exact : 5
dequeuing : 5
storage : 5
largest : 5
shift : 5
startindex : 5
temporary : 5
dividing : 5
pivotindex : 5
quicksort : 5
frequency : 5
bucket : 5
sub : 5
area : 5
performs : 5
str : 5
decnumber : 5
instantiate : 5
occupied : 5
coin : 5
either : 6
books : 6
learning : 6
up : 6
thank : 6
me : 6
include : 6
advanced : 6
classes : 6
lists : 6
singly : 6
exists : 6
earlier : 6
arrange : 6
appear : 6
works : 6
understand : 6
compiler : 6
ignore : 6
mark : 6
invocation : 6
keyword : 6
modify : 6
ten : 6
const : 6
system : 6
scope : 6
constant : 6
player : 6
techniques : 6
generic : 6
expected : 6
common : 6
container : 6
stl : 6
comparison : 6
recursive : 6
refer : 6
standard : 6
already : 6
keep : 6
nextnode : 6
safely : 6
bracket : 6
itr : 6
dequeue : 6
enqueue : 6
steps : 6
adjacent : 6
swapped : 6
original : 6
higher : 6
invokes : 6
log : 6
compares : 6
val : 6
middleleftindex : 6
bit : 6
track : 6
continue : 6
hashindex : 6
captcha : 6
write : 7
form : 7
development : 7
card : 7
show : 7
chapter : 7
interested : 7
small : 7
hashtable : 7
matrix : 7
learn : 7
design : 7
main : 7
lines : 7
link : 7
compile : 7
was : 7
single : 7
decide : 7
those : 7
guess : 7
values : 7
increasing : 7
accessed : 7
virtual : 7
problems : 7
existing : 7
significant : 7
rest : 7
inner : 7
x : 7
upper : 7
provided : 7
matched : 7
nodes : 7
otherwise : 7
diagram : 7
repeat : 7
refresh : 7
strings : 7
power : 7
sum : 7
except : 8
provide : 8
develop : 8
control : 8
had : 8
own : 8
conquer : 8
finding : 8
stores : 8
complete : 8
executed : 8
contain : 8
save : 8
conditional : 8
initializing : 8
choose : 8
compared : 8
static : 8
got : 8
functions : 8
again : 8
public : 8
assignment : 8
creating : 8
cat : 8
did : 8
analysis : 8
curve : 8
five : 8
points : 8
prove : 8
problem : 8
retrieve : 8
sublists : 8
recursively : 8
smallest : 8
parent : 8
currentnode : 8
packt : 9
visit : 9
collection : 9
range : 9
fundamental : 9
flow : 9
doubly : 9
subsequences : 9
hierarchical : 9
real : 9
order : 9
counting : 9
github : 9
available : 9
text : 9
require : 9
defined : 9
further : 9
usually : 9
others : 9
constructor : 9
base : 9
adding : 9
notation : 9
calculation : 9
n : 9
depend : 9
square : 9
comparing : 9
removed : 9
fetch : 9
opened : 9
notify : 9
divides : 9
starting : 9
exactly : 9
palindrome : 9
rotate : 9
variables : 10
asymptotic : 10
handle : 10
pc : 10
notebook : 10
gcc : 10
follow : 10
address : 10
along : 10
itself : 10
desired : 10
because : 10
solution : 10
uses : 10
performing : 10
quite : 10
guessed : 10
endl : 10
performed : 10
methods : 10
invoking : 10
forward : 10
hold : 10
longer : 10
counter : 10
head : 10
closed : 10
lowest : 10
merged : 10
subarray : 10
children : 10
parentnode : 10
well : 11
programming : 11
project : 11
most : 11
example : 11
ternary : 11
exponential : 11
huffman : 11
what : 11
including : 11
cases : 11
bubble : 11
might : 11
source : 11
linux : 11
double : 11
change : 11
min : 11
equal : 11
even : 11
declaration : 11
size : 11
average : 11
indicate : 11
side : 11
expression : 11
greatest : 11
formula : 11
anagram : 11
balance : 11
may : 12
without : 12
information : 12
every : 12
know : 12
my : 12
big : 12
addressing : 12
randomized : 12
block : 12
windows : 12
statements : 12
upcoming : 12
needs : 12
various : 12
known : 12
memory : 12
replace : 12
safe : 12
searchedvalue : 12
blockindex : 12
keys : 12
files : 13
their : 13
apply : 13
specific : 13
successfully : 13
statement : 13
cin : 13
b : 13
e : 13
instead : 13
bound : 13
finds : 13
tail : 13
step : 13
remaining : 13
middleindex : 13
subtree : 13
built : 14
different : 14
merge : 14
quick : 14
process : 14
derived : 14
skewed : 14
enter : 14
increase : 14
copy : 14
numbers : 14
call : 14
instance : 14
operator : 14
inserting : 14
length : 14
iteration : 14
linkedlist : 15
decimal : 15
open : 15
solve : 15
t : 15
running : 15
console : 15
refactor : 15
line : 15
assign : 15
pair : 15
inside : 15
many : 15
generate : 15
calculate : 15
difference : 15
must : 15
called : 15
does : 15
becomes : 15
prevnode : 15
iterator : 15
convert : 15
smaller : 15
owned : 15
subsequence : 16
simple : 16
back : 16
means : 16
bool : 16
parenthesis : 16
four : 16
possible : 16
empty : 16
nothing : 16
root : 16
jump : 17
heap : 17
structure : 17
name : 17
give : 17
snippet : 17
correct : 17
reference : 17
j : 17
simply : 17
removing : 17
digit : 17
cannot : 18
us : 18
would : 18
template : 18
deque : 18
priority : 18
separate : 18
selection : 18
construct : 18
collision : 18
integer : 18
put : 18
long : 18
random : 18
vector : 18
top : 18
them : 19
predecessor : 19
probing : 19
divide : 19
suppose : 19
dog : 19
inserted : 19
target : 19
pick : 19
display : 19
divided : 19
remainder : 19
basic : 20
interpolation : 20
word : 20
pattern : 20
initial : 20
want : 20
returns : 20
try : 20
inputted : 20
book : 21
free : 21
like : 21
move : 21
program : 21
least : 21
beginning : 21
while : 21
start : 21
slot : 21
access : 22
types : 22
total : 22
say : 22
still : 22
delete : 22
front : 22
arrsize : 22
pivot : 22
child : 22
avl : 23
ide : 23
height : 23
structures : 24
your : 24
always : 24
adt : 24
end : 24
implement : 24
named : 24
pass : 24
about : 25
take : 25
look : 25
result : 25
define : 25
containing : 25
swap : 25
bstnode : 25
ensure : 26
more : 26
successor : 26
shown : 26
characters : 26
cell : 26
some : 27
contains : 27
user : 27
stack : 28
whether : 28
such : 28
go : 28
unsorted : 28
technique : 29
before : 29
here : 29
traverse : 29
stored : 30
chaining : 30
perform : 30
between : 30
but : 31
set : 31
namespace : 31
become : 31
make : 33
based : 33
balanced : 33
other : 33
compare : 33
minimum : 34
three : 34
greater : 34
else : 34
middle : 34
been : 35
bst : 35
add : 35
phone : 35
searching : 36
character : 36
lower : 36
both : 36
maximum : 37
file : 37
loop : 37
any : 38
its : 39
queue : 39
selected : 40
worst : 40
how : 41
please : 41
items : 41
same : 41
invoke : 41
method : 41
null : 42
print : 43
algorithms : 43
several : 44
sublist : 44
operations : 45
store : 45
sorting : 46
there : 46
after : 46
point : 47
second : 47
void : 47
variable : 48
linear : 48
output : 48
initialize : 48
now : 48
these : 49
do : 49
given : 50
table : 50
sorted : 50
where : 51
discuss : 51
check : 51
input : 51
previous : 51
they : 53
best : 54
found : 54
through : 54
until : 55
remove : 55
searched : 56
another : 58
similar : 58
class : 59
position : 59
discussed : 60
iterate : 61
linked : 62
insert : 62
no : 63
build : 65
next : 65
when : 67
run : 67
case : 68
you : 69
into : 69
pointer : 69
tree : 70
last : 70
out : 72
sort : 72
just : 78
our : 79
one : 84
only : 88
each : 88
get : 90
type : 90
than : 91
current : 94
create : 97
item : 98
implementation : 98
used : 99
two : 101
left : 102
also : 103
algorithm : 103
elements : 106
right : 107
binary : 108
going : 110
at : 112
not : 115
function : 118
first : 119
number : 121
index : 122
should : 123
all : 124
use : 126
hash : 128
so : 128
list : 130
i : 134
has : 137
operation : 140
string : 145
see : 147
on : 149
need : 149
time : 150
search : 150
then : 151
array : 151
complexity : 157
since : 158
or : 160
using : 167
which : 168
from : 181
find : 181
value : 191
code : 202
following : 205
by : 210
with : 210
element : 228
key : 231
node : 242
preceding : 244
an : 247
int : 250
return : 264
new : 276
are : 292
for : 315
this : 317
it : 318
data : 319
have : 319
that : 350
cout : 356
be : 407
as : 449
if : 471
can : 498
will : 530
and : 800
in : 955
of : 1019
is : 1094
a : 1188
to : 1322
we : 1466
the : 4461
data structures and -> how : 1
data structures and -> packt : 1
data structures and -> the : 2
data structures and -> algorithms : 9
data structures and -> this : 1
data structures and -> implement : 1
structures and how -> to : 1
and how to -> write : 1
and how to -> use : 1
how to write -> efficient : 1
to write efficient -> code : 1
write efficient code -> to : 1
efficient code to -> build : 1
code to build -> scalable : 1
to build scalable -> and : 1
build scalable and -> robust : 1
scalable and robust -> applications : 1
and robust applications -> in : 1
robust applications in -> data : 1
applications in data -> structures : 1
in data structures -> and : 4
structures and packt -> rights : 1
and packt rights -> no : 1
packt rights no -> part : 1
rights no part -> of : 1
no part of -> this : 1
part of this -> book : 1
of this book -> may : 1
of this book -> to : 1
of this book -> under : 1
this book may -> be : 1
book may be -> stored : 1
may be stored -> in : 1
be stored in -> a : 1
be stored in -> the : 6
be stored in -> cell : 3
be stored in -> phone : 1
stored in a -> retrieval : 1
in a retrieval -> or : 1
a retrieval or -> transmitted : 1
retrieval or transmitted -> in : 1
or transmitted in -> any : 1
transmitted in any -> form : 1
in any form -> or : 1
in any form -> on : 1
any form or -> by : 1
form or by -> any : 1
or by any -> without : 1
by any without -> the : 1
any without the -> prior : 1
without the prior -> written : 1
the prior written -> permission : 1
prior written permission -> of : 1
written permission of -> the : 1
permission of the -> except : 1
of the except -> in : 1
of the except -> for : 1
the except in -> the : 1
except in the -> case : 1
in the case -> of : 1
in the case -> is : 1
the case of -> brief : 1
case of brief -> quotations : 1
of brief quotations -> embedded : 1
brief quotations embedded -> in : 1
quotations embedded in -> critical : 1
embedded in critical -> articles : 1
in critical articles -> or : 1
critical articles or -> effort : 1
articles or effort -> has : 1
or effort has -> been : 1
effort has been -> made : 1
has been made -> in : 1
been made in -> the : 1
made in the -> preparation : 1
in the preparation -> of : 1
the preparation of -> this : 1
preparation of this -> book : 1
this book to -> ensure : 1
book to ensure -> the : 1
to ensure the -> accuracy : 2
to ensure the -> remaining : 1
to ensure the -> number : 1
ensure the accuracy -> of : 2
the accuracy of -> the : 1
the accuracy of -> this : 1
the accuracy of -> our : 1
accuracy of the -> information : 1
of the information -> the : 1
the information the -> information : 1
information the information -> contained : 1
the information contained -> in : 1
information contained in -> this : 1
contained in this -> book : 1
in this book -> is : 1
in this book -> by : 1
this book is -> sold : 1
this book is -> this : 1
this book is -> book : 1
this book is -> intended : 1
book is sold -> without : 1
is sold without -> either : 1
sold without either -> express : 1
without either express -> or : 1
either express or -> neither : 1
express or neither -> the : 1
or neither the -> nor : 1
neither the nor -> packt : 1
the nor packt -> publishing : 1
nor packt publishing -> or : 1
packt publishing or -> its : 1
publishing or its -> dealers : 1
or its dealers -> and : 1
its dealers and -> will : 1
dealers and will -> be : 1
and will be -> held : 1
and will be -> decreased : 1
and will be -> in : 1
will be held -> liable : 1
be held liable -> for : 1
held liable for -> any : 1
liable for any -> damages : 1
for any damages -> caused : 1
any damages caused -> or : 1
damages caused or -> alleged : 1
caused or alleged -> to : 1
or alleged to -> have : 1
alleged to have -> been : 1
to have been -> caused : 1
have been caused -> directly : 1
been caused directly -> or : 1
caused directly or -> indirectly : 1
directly or indirectly -> by : 1
or indirectly by -> this : 1
indirectly by this -> publishing : 1
by this publishing -> has : 1
this publishing has -> endeavored : 1
publishing has endeavored -> to : 1
has endeavored to -> provide : 1
endeavored to provide -> trademark : 1
to provide trademark -> information : 1
provide trademark information -> about : 1
trademark information about -> all : 1
information about all -> of : 1
about all of -> the : 1
all of the -> companies : 1
all of the -> concepts : 1
all of the -> operations : 4
all of the -> people : 1
all of the -> use : 1
all of the -> elements : 2
all of the -> left : 1
all of the -> buckets : 1
all of the -> array : 1
all of the -> items : 1
all of the -> keys : 4
all of the -> expected : 1
of the companies -> and : 1
the companies and -> products : 1
companies and products -> mentioned : 1
and products mentioned -> in : 1
products mentioned in -> this : 1
mentioned in this -> book : 1
this book by -> the : 1
book by the -> appropriate : 1
by the appropriate -> use : 1
the appropriate use -> of : 1
appropriate use of -> packt : 1
use of packt -> publishing : 1
of packt publishing -> cannot : 1
packt publishing cannot -> guarantee : 1
publishing cannot guarantee -> the : 1
cannot guarantee the -> accuracy : 1
guarantee the accuracy -> of : 1
accuracy of this -> development : 1
of this development -> lawrence : 1
this development lawrence -> supriya : 1
development lawrence supriya -> safis : 1
lawrence supriya safis -> arvindkumar : 1
supriya safis arvindkumar -> april : 1
safis arvindkumar april -> by : 1
arvindkumar april by -> packt : 1
april by packt -> publishing : 1
by packt publishing -> livery : 1
packt publishing livery -> livery : 1
publishing livery livery -> is : 1
livery livery is -> an : 1
livery is an -> online : 1
is an online -> digital : 1
an online digital -> library : 1
online digital library -> that : 1
digital library that -> gives : 1
library that gives -> you : 1
that gives you -> full : 1
gives you full -> access : 1
you full access -> to : 1
full access to -> over : 1
access to over -> books : 1
to over books -> and : 1
over books and -> as : 1
books and as -> well : 1
and as well -> as : 1
as well as -> industry : 1
as well as -> the : 3
as well as -> pointers : 1
as well as -> find : 1
well as industry -> leading : 1
as industry leading -> tools : 1
industry leading tools -> to : 1
leading tools to -> help : 1
tools to help -> you : 1
to help you -> plan : 1
help you plan -> your : 1
you plan your -> personal : 1
plan your personal -> development : 1
your personal development -> and : 1
personal development and -> advance : 1
development and advance -> your : 1
and advance your -> for : 1
advance your for -> more : 1
your for more -> please : 1
for more please -> visit : 1
more please visit -> our : 1
please visit our -> less : 1
visit our less -> time : 1
our less time -> learning : 1
less time learning -> and : 1
time learning and -> more : 1
learning and more -> time : 1
and more time -> coding : 1
more time coding -> with : 1
time coding with -> practical : 1
coding with practical -> ebooks : 1
with practical ebooks -> and : 1
practical ebooks and -> videos : 1
ebooks and videos -> from : 1
and videos from -> over : 1
videos from over -> industry : 1
from over industry -> your : 1
over industry your -> learning : 1
industry your learning -> with : 1
your learning with -> skill : 1
learning with skill -> plans : 1
with skill plans -> built : 1
skill plans built -> especially : 1
plans built especially -> for : 1
built especially for -> a : 1
especially for a -> free : 1
for a free -> ebook : 1
a free ebook -> or : 1
free ebook or -> video : 1
ebook or video -> every : 1
or video every -> is : 1
video every is -> fully : 1
every is fully -> and : 1
is fully and -> and : 1
fully and and -> bookmark : 1
and and bookmark -> you : 1
and bookmark you -> know : 1
bookmark you know -> that : 1
you know that -> packt : 1
know that packt -> offers : 1
that packt offers -> ebook : 1
packt offers ebook -> versions : 1
offers ebook versions -> of : 1
ebook versions of -> every : 1
versions of every -> book : 1
of every book -> with : 1
every book with -> pdf : 1
book with pdf -> and : 1
with pdf and -> epub : 1
pdf and epub -> files : 1
and epub files -> you : 1
epub files you -> can : 1
files you can -> upgrade : 1
you can upgrade -> to : 1
can upgrade to -> the : 1
upgrade to the -> ebook : 1
to the ebook -> version : 1
the ebook version -> at : 1
ebook version at -> and : 1
version at and -> as : 1
at and as -> a : 1
and as a -> print : 1
as a print -> book : 1
a print book -> you : 1
print book you -> are : 1
book you are -> entitled : 1
you are entitled -> to : 1
are entitled to -> a : 1
entitled to a -> discount : 1
to a discount -> on : 1
a discount on -> the : 1
discount on the -> ebook : 1
on the ebook -> get : 1
the ebook get -> in : 1
ebook get in -> touch : 1
get in touch -> with : 1
in touch with -> us : 1
touch with us -> at : 1
with us at -> for : 1
us at for -> more : 1
at for more -> you : 1
for more you -> can : 1
more you can -> also : 1
you can also -> read : 1
can also read -> a : 1
also read a -> collection : 1
read a collection -> of : 1
a collection of -> free : 1
a collection of -> statements : 1
a collection of -> suppose : 1
a collection of -> data : 1
a collection of -> this : 1
a collection of -> for : 1
collection of free -> technical : 1
of free technical -> sign : 1
free technical sign -> up : 1
technical sign up -> for : 1
sign up for -> a : 1
up for a -> range : 1
for a range -> of : 1
a range of -> free : 1
a range of -> an : 1
range of free -> and : 1
of free and -> receive : 1
free and receive -> exclusive : 1
and receive exclusive -> discounts : 1
receive exclusive discounts -> and : 1
exclusive discounts and -> offers : 1
discounts and offers -> on : 1
and offers on -> packt : 1
offers on packt -> books : 1
on packt books -> and : 1
packt books and -> the : 1
books and the -> is : 1
and the is -> a : 1
and the is -> used : 1
the is a -> microsoft : 1
the is a -> software : 1
the is a -> the : 1
is a microsoft -> certified : 1
a microsoft certified -> professional : 1
microsoft certified professional -> in : 1
certified professional in -> programming : 1
professional in programming -> and : 1
in programming and -> an : 1
programming and an -> experienced : 1
and an experienced -> he : 1
an experienced he -> has : 1
experienced he has -> been : 1
he has been -> programming : 1
has been programming -> since : 1
been programming since -> junior : 1
programming since junior -> high : 1
since junior high -> school : 1
junior high school -> years : 1
high school years -> and : 1
school years and -> started : 1
years and started -> developing : 1
and started developing -> computer : 1
started developing computer -> applications : 1
developing computer applications -> using : 1
computer applications using -> the : 1
applications using the -> basic : 1
using the basic -> language : 1
the basic language -> in : 1
basic language in -> he : 1
language in he -> has : 1
in he has -> a : 1
he has a -> lot : 1
has a lot -> of : 1
a lot of -> experience : 1
lot of experience -> with : 1
of experience with -> smart : 1
experience with smart -> and : 1
with smart and -> web : 1
smart and web -> application : 1
and web application -> is : 1
web application is -> currently : 1
application is currently -> a : 1
is currently a -> senior : 1
currently a senior -> smart : 1
a senior smart -> card : 1
senior smart card -> software : 1
smart card software -> engineer : 1
card software engineer -> at : 1
software engineer at -> an : 2
engineer at an -> indonesian : 1
engineer at an -> automated : 1
at an indonesian -> that : 1
an indonesian that -> specializes : 1
indonesian that specializes -> in : 1
that specializes in -> the : 1
specializes in the -> innovation : 1
in the innovation -> and : 1
the innovation and -> technology : 1
innovation and technology -> of : 1
and technology of -> smart : 1
technology of smart -> would : 1
of smart would -> like : 1
smart would like -> to : 1
would like to -> thank : 3
would like to -> show : 1
would like to -> learn : 1
like to thank -> whose : 1
like to thank -> my : 1
like to thank -> the : 2
to thank whose -> blessings : 1
thank whose blessings -> have : 1
whose blessings have -> made : 1
blessings have made -> me : 1
have made me -> who : 1
made me who -> i : 1
me who i -> am : 1
who i am -> my : 1
i am my -> who : 1
am my who -> has : 1
my who has -> supported : 1
who has supported -> me : 1
has supported me -> to : 1
supported me to -> achieve : 1
me to achieve -> all : 1
to achieve all -> my : 1
achieve all my -> to : 1
all my to -> my : 1
my to my -> beloved : 1
to my beloved -> olav : 1
my beloved olav -> and : 1
beloved olav and -> who : 1
olav and who -> are : 1
and who are -> very : 1
who are very -> naughty : 1
are very naughty -> sometimes : 1
very naughty sometimes -> but : 1
naughty sometimes but -> never : 1
sometimes but never -> fail : 1
but never fail -> to : 1
never fail to -> make : 1
fail to make -> me : 1
to make me -> happy : 1
make me happy -> every : 1
me happy every -> to : 1
happy every to -> my : 1
every to my -> parents : 1
to my parents -> for : 1
my parents for -> their : 1
parents for their -> i : 1
for their i -> would : 1
their i would -> like : 1
i would like -> to : 2
like to show -> my : 1
to show my -> gratitude : 1
show my gratitude -> to : 1
my gratitude to -> benediktus : 1
gratitude to benediktus -> dwi : 1
to benediktus dwi -> my : 1
benediktus dwi my -> mentor : 1
dwi my mentor -> and : 1
my mentor and -> superior : 1
mentor and superior -> at : 1
and superior at -> who : 1
superior at who -> always : 1
at who always -> helped : 1
who always helped -> me : 1
always helped me -> develop : 1
helped me develop -> my : 1
me develop my -> the : 1
develop my the -> is : 1
my the is -> a : 1
is a software -> engineer : 1
a software engineer -> at : 1
at an automated -> test : 1
an automated test -> equipment : 1
automated test equipment -> firm : 1
test equipment firm -> working : 1
equipment firm working -> primarily : 1
firm working primarily -> in : 1
working primarily in -> ic : 1
primarily in ic -> and : 1
in ic and -> mobile : 1
ic and mobile -> device : 1
and mobile device -> his : 1
mobile device his -> years : 1
device his years -> of : 1
his years of -> experience : 1
years of experience -> include : 1
of experience include -> developing : 1
experience include developing -> aircraft : 1
include developing aircraft -> and : 1
developing aircraft and -> missile : 1
aircraft and missile -> simulations : 1
and missile simulations -> for : 1
missile simulations for -> the : 1
simulations for the -> air : 1
for the air -> force : 1
the air force -> and : 1
air force and -> hardware : 1
force and hardware -> control : 1
and hardware control -> systems : 1
hardware control systems -> for : 1
control systems for -> and : 1
systems for and -> tester : 1
for and tester -> operating : 1
and tester operating -> systems : 1
tester operating systems -> for : 1
operating systems for -> commercial : 1
systems for commercial -> he : 1
for commercial he -> has : 1
commercial he has -> also : 1
he has also -> developed : 1
has also developed -> several : 1
also developed several -> android : 1
developed several android -> applications : 1
several android applications -> for : 1
android applications for -> his : 1
applications for his -> latest : 1
for his latest -> passion : 1
his latest passion -> is : 1
latest passion is -> delving : 1
passion is delving -> into : 1
is delving into -> the : 1
delving into the -> world : 1
into the world -> of : 1
the world of -> functional : 1
world of functional -> programming : 1
of functional programming -> and : 1
functional programming and -> would : 1
programming and would -> like : 1
and would like -> to : 1
to thank my -> wife : 1
thank my wife -> for : 1
my wife for -> her : 1
wife for her -> understanding : 1
for her understanding -> when : 1
her understanding when -> i : 1
understanding when i -> had : 1
when i had -> a : 1
i had a -> chapter : 1
had a chapter -> to : 1
a chapter to -> finish : 1
chapter to finish -> i : 1
to finish i -> would : 1
finish i would -> also : 1
i would also -> like : 1
would also like -> to : 1
also like to -> thank : 1
to thank the -> packt : 1
to thank the -> author : 1
thank the packt -> team : 1
the packt team -> for : 1
packt team for -> giving : 1
team for giving -> me : 1
for giving me -> the : 1
giving me the -> opportunity : 1
me the opportunity -> to : 1
the opportunity to -> work : 1
opportunity to work -> with : 1
to work with -> them : 1
work with them -> on : 1
with them on -> this : 1
them on this -> it : 1
on this it -> has : 1
this it has -> been : 1
it has been -> enlightening : 1
it has been -> defined : 1
it has been -> sorted : 1
has been enlightening -> and : 1
been enlightening and -> i : 1
enlightening and i -> would : 1
and i would -> like : 1
thank the author -> for : 1
the author for -> taking : 1
author for taking -> my : 1
for taking my -> comments : 1
taking my comments -> into : 1
my comments into -> it : 1
comments into it -> is : 1
into it is -> a : 1
into it is -> to : 1
it is a -> pleasure : 1
it is a -> valid : 1
it is a -> balanced : 1
it is a -> range : 1
is a pleasure -> to : 1
a pleasure to -> be : 1
pleasure to be -> part : 1
to be part -> of : 1
be part of -> a : 1
part of a -> project : 1
part of a -> code : 1
of a project -> where : 1
a project where -> your : 1
project where your -> inputs : 1
where your inputs -> are : 1
your inputs are -> is : 1
inputs are is -> searching : 1
are is searching -> for : 1
is searching for -> authors : 2
searching for authors -> like : 2
for authors like -> interested : 1
for authors like -> this : 1
authors like interested -> in : 1
like interested in -> becoming : 1
interested in becoming -> an : 2
in becoming an -> author : 1
in becoming an -> if : 1
becoming an author -> for : 1
an author for -> please : 1
author for please -> visit : 1
for please visit -> and : 1
please visit and -> apply : 1
visit and apply -> we : 1
and apply we -> have : 1
apply we have -> worked : 1
we have worked -> with : 1
have worked with -> thousands : 1
have worked with -> packt : 1
worked with thousands -> of : 1
with thousands of -> developers : 1
thousands of developers -> and : 1
of developers and -> tech : 1
developers and tech -> just : 1
and tech just -> like : 1
tech just like -> to : 1
just like to -> help : 1
like to help -> them : 1
to help them -> share : 1
help them share -> their : 1
them share their -> insight : 1
share their insight -> with : 1
their insight with -> the : 1
insight with the -> global : 1
with the global -> tech : 1
the global tech -> you : 1
global tech you -> can : 1
tech you can -> make : 1
you can make -> a : 1
can make a -> general : 1
make a general -> apply : 1
a general apply -> for : 1
general apply for -> a : 1
apply for a -> specific : 1
for a specific -> hot : 1
for a specific -> value : 1
a specific hot -> topic : 1
specific hot topic -> that : 1
hot topic that -> we : 1
topic that we -> are : 1
that we are -> recruiting : 1
that we are -> going : 2
we are recruiting -> an : 1
are recruiting an -> author : 1
recruiting an author -> or : 1
an author or -> submit : 1
author or submit -> your : 1
or submit your -> own : 1
submit your own -> of : 1
your own of -> and : 1
own of and -> data : 1
of and data -> structures : 1
of and data -> it : 1
and data structures -> and : 1
structures and the -> the : 1
structures and the -> toolchain : 1
and the the -> is : 1
the the is -> searching : 1
the is searching -> for : 1
authors like this -> book : 1
like this book -> is : 1
book is this -> book : 1
is this book -> get : 1
this book get -> the : 1
book get the -> most : 1
get the most -> out : 2
the most out -> of : 2
most out of -> this : 2
out of this -> the : 1
out of this -> get : 1
of this the -> example : 1
of this the -> usage : 1
of this the -> then : 1
this the example -> code : 1
the example code -> the : 1
the example code -> can : 1
the example code -> files : 1
example code the -> color : 1
code the color -> in : 1
the color in -> data : 1
color in data -> structures : 1
structures and algorithms -> in : 8
structures and algorithms -> are : 1
structures and algorithms -> can : 1
and algorithms in -> to : 1
and algorithms in -> we : 3
and algorithms in -> basic : 1
and algorithms in -> introduces : 1
and algorithms in -> this : 1
and algorithms in -> since : 1
algorithms in to -> basic : 1
in to basic -> your : 1
to basic your -> first : 1
basic your first -> code : 1
your first code -> in : 2
first code in -> code : 1
first code in -> the : 1
code in code -> development : 1
in code development -> experience : 1
code development experience -> with : 2
development experience with -> the : 1
development experience with -> we : 1
experience with the -> variables : 1
with the variables -> using : 1
the variables using -> fundamental : 2
the variables using -> the : 1
variables using fundamental -> data : 2
using fundamental data -> the : 2
fundamental data the -> flow : 1
fundamental data the -> previous : 1
data the flow -> of : 1
the flow of -> the : 3
the flow of -> a : 1
the flow of -> is : 1
the flow of -> we : 1
flow of the -> the : 1
flow of the -> we : 1
flow of the -> preceding : 1
of the the -> variable : 1
of the the -> the : 1
of the the -> solution : 1
of the the -> code : 3
of the the -> implementation : 4
of the the -> string : 1
of the the -> bst : 1
of the the -> time : 1
of the the -> greedy : 1
of the the -> algorithm : 1
the the variable -> capability : 1
the variable capability -> using : 2
variable capability using -> advanced : 2
capability using advanced -> data : 2
using advanced data -> abstract : 1
using advanced data -> have : 1
advanced data abstract -> data : 1
data abstract data -> classes : 1
abstract data classes -> to : 1
data classes to -> build : 1
classes to build -> with : 1
classes to build -> are : 1
classes to build -> the : 1
to build with -> template : 1
build with template -> the : 1
with template the -> and : 1
template the and -> best : 1
the and best -> and : 1
and best and -> big : 1
best and big -> data : 1
and big data -> in : 1
big data in -> lists : 2
data in lists -> and : 4
in lists and -> linked : 4
lists and linked -> closer : 1
lists and linked -> explains : 1
lists and linked -> the : 1
lists and linked -> and : 1
and linked closer -> to : 1
linked closer to -> an : 1
closer to an -> a : 1
closer to an -> is : 1
to an a -> list : 1
an a list -> an : 1
a list an -> item : 1
list an item -> in : 2
list an item -> from : 1
an item in -> the : 8
an item in -> an : 1
an item in -> a : 1
item in the -> an : 2
item in the -> list : 2
item in the -> linkedlist : 4
item in the -> we : 3
item in the -> implement : 1
item in the -> linked : 2
item in the -> the : 1
item in the -> find : 1
item in the -> first : 1
item in the -> fourth : 1
item in the -> vector : 1
item in the -> top : 2
item in the -> data : 2
item in the -> each : 1
item in the -> unsorted : 1
item in the -> current : 1
item in the -> sorted : 1
item in the -> left : 2
item in the -> inputted : 1
item in the -> then : 1
in the an -> item : 2
the an item -> into : 2
the an item -> from : 1
the an item -> in : 1
an item into -> the : 2
item into the -> list : 2
item into the -> middle : 1
into the list -> out : 1
into the list -> the : 1
the list out -> the : 1
list out the -> index : 1
out the index -> of : 2
the index of -> a : 2
the index of -> the : 8
the index of -> to : 1
the index of -> element : 1
the index of -> searched : 1
the index of -> is : 1
the index of -> it : 1
index of a -> selected : 2
of a selected -> item : 2
a selected item -> in : 2
selected item in -> the : 4
in the list -> an : 1
in the list -> we : 1
in the list -> method : 1
the list an -> item : 1
an item from -> the : 5
item from the -> list : 2
item from the -> linkedlist : 2
item from the -> desired : 1
item from the -> top : 1
from the list -> a : 1
from the list -> method : 1
the list a -> list : 1
list a list -> to : 1
a list to -> a : 1
list to a -> singly : 1
to a singly -> linked : 1
a singly linked -> list : 3
singly linked list -> an : 1
singly linked list -> linked : 1
singly linked list -> data : 1
singly linked list -> and : 1
linked list an -> item : 1
in the linkedlist -> an : 2
in the linkedlist -> the : 2
in the linkedlist -> first : 1
in the linkedlist -> move : 1
the linkedlist an -> item : 1
the linkedlist an -> an : 1
linkedlist an item -> in : 1
the linkedlist the -> index : 1
the linkedlist the -> linkedlist : 1
the linkedlist the -> doubly : 2
linkedlist the index -> of : 1
index of the -> selected : 2
index of the -> first : 1
index of the -> unsorted : 4
index of the -> minimum : 1
index of the -> input : 1
index of the -> then : 1
index of the -> searched : 2
index of the -> hash : 1
of the selected -> item : 2
of the selected -> element : 2
of the selected -> we : 2
of the selected -> it : 1
the selected item -> in : 2
the selected item -> by : 1
from the linkedlist -> the : 1
from the linkedlist -> to : 1
linkedlist the linkedlist -> the : 1
linkedlist the doubly -> linked : 2
the doubly linked -> list : 4
the doubly linked -> since : 1
doubly linked list -> the : 1
doubly linked list -> linked : 1
doubly linked list -> has : 1
doubly linked list -> possible : 1
doubly linked list -> is : 1
linked list the -> data : 1
linked list the -> complexity : 1
list the data -> several : 1
the data several -> operations : 1
data several operations -> in : 1
several operations in -> the : 2
operations in the -> linkedlist : 2
operations in the -> data : 1
operations in the -> avl : 1
operations in the -> upcoming : 1
operations in the -> the : 1
operations in the -> separate : 1
linkedlist an an -> the : 1
an an the -> doublylinkedlist : 1
an the doublylinkedlist -> list : 1
the doublylinkedlist list -> and : 1
doublylinkedlist list and -> linkedlist : 1
list and linkedlist -> using : 2
and linkedlist using -> stacks : 1
and linkedlist using -> has : 1
linkedlist using stacks -> and : 1
using stacks and -> a : 1
stacks and a -> stack : 1
and a stack -> the : 1
a stack the -> value : 1
stack the value -> in : 1
the value in -> the : 2
value in the -> stack : 2
value in the -> array : 1
value in the -> since : 1
value in the -> queue : 1
in the stack -> the : 2
in the stack -> using : 1
the stack the -> items : 2
the stack the -> data : 1
stack the items -> of : 1
stack the items -> from : 1
the items of -> the : 2
items of the -> stack : 2
of the stack -> the : 1
of the stack -> we : 1
of the stack -> is : 1
the items from -> the : 2
items from the -> stack : 2
from the stack -> a : 1
from the stack -> removing : 1
the stack a -> stack : 1
stack a stack -> stack : 1
a stack stack -> adt : 1
stack stack adt -> a : 1
stack adt a -> queue : 1
adt a queue -> a : 1
a queue a -> value : 1
queue a value -> from : 1
a value from -> queue : 2
a value from -> a : 2
value from queue -> an : 1
value from queue -> we : 1
from queue an -> element : 1
queue an element -> into : 1
queue an element -> from : 1
queue an element -> can : 1
an element into -> the : 4
element into the -> queue : 2
element into the -> deque : 2
element into the -> the : 1
element into the -> front : 1
element into the -> data : 1
element into the -> similar : 1
element into the -> new : 1
into the queue -> an : 1
into the queue -> a : 1
into the queue -> will : 1
the queue an -> element : 2
an element from -> the : 6
an element from -> is : 1
element from the -> queue : 2
element from the -> deque : 2
element from the -> back : 2
element from the -> front : 1
element from the -> searched : 1
element from the -> priority : 1
from the queue -> the : 1
from the queue -> an : 1
the queue the -> queue : 1
queue the queue -> a : 1
the queue a -> deque : 1
the queue a -> new : 1
queue a deque -> a : 1
a deque a -> value : 1
deque a value -> from : 1
value from a -> an : 1
value from a -> implementation : 1
from a an -> element : 1
a an element -> into : 1
into the deque -> an : 1
into the deque -> are : 1
the deque an -> element : 1
deque an element -> from : 1
from the deque -> the : 1
from the deque -> to : 1
the deque the -> deque : 1
deque the deque -> data : 1
the deque data -> elements : 1
deque data elements -> using : 1
data elements using -> a : 4
elements using a -> sorting : 4
using a sorting -> out : 1
using a sorting -> talks : 1
using a sorting -> the : 1
using a sorting -> we : 1
using a sorting -> binary : 1
a sorting out -> an : 1
sorting out an -> element : 1
out an element -> using : 3
an element using -> searching : 3
element using searching -> a : 1
element using searching -> walks : 1
element using searching -> the : 1
using searching a -> linear : 1
searching a linear -> search : 2
a linear search -> the : 1
a linear search -> refresh : 1
a linear search -> of : 1
a linear search -> algorithm : 1
linear search the -> linear : 1
search the linear -> search : 1
the linear search -> binary : 1
the linear search -> create : 1
the linear search -> and : 1
linear search binary -> search : 1
search binary search -> binary : 1
search binary search -> ternary : 1
search binary search -> tree : 1
binary search binary -> search : 2
binary search ternary -> search : 1
search ternary search -> the : 1
ternary search the -> ternary : 1
search the ternary -> search : 1
the ternary search -> interpolation : 1
the ternary search -> algorithm : 1
the ternary search -> invoke : 1
the ternary search -> is : 1
ternary search interpolation -> search : 1
search interpolation search -> interpolation : 1
search interpolation search -> jump : 1
search interpolation search -> is : 1
interpolation search interpolation -> search : 2
interpolation search jump -> search : 1
search jump search -> jump : 1
search jump search -> exponential : 1
jump search jump -> search : 1
jump search exponential -> search : 1
search exponential search -> the : 1
exponential search the -> sublist : 1
search the sublist -> search : 1
the sublist search -> sublist : 1
the sublist search -> to : 1
the sublist search -> as : 1
sublist search sublist -> search : 1
search sublist search -> with : 1
sublist search with -> the : 1
search with the -> string : 1
with the string -> data : 3
the string data -> in : 1
the string data -> discusses : 1
the string data -> the : 1
string data in -> a : 1
data in a -> string : 1
data in a -> hash : 2
data in a -> hierarchical : 1
data in a -> in : 1
in a string -> using : 2
a string using -> character : 3
a string using -> an : 1
string using character -> for : 1
string using character -> a : 1
string using character -> these : 1
using character for -> more : 1
character for more -> flexibility : 1
for more flexibility -> with : 1
for more flexibility -> is : 1
more flexibility with -> a : 1
flexibility with a -> word : 1
with a word -> to : 2
a word to -> create : 2
word to create -> an : 2
to create an -> whether : 1
to create an -> is : 1
to create an -> avl : 1
to create an -> adt : 1
create an whether -> a : 1
an whether a -> word : 1
whether a word -> is : 2
a word is -> a : 2
word is a -> a : 1
word is a -> is : 1
is a a -> string : 1
a a string -> from : 1
a string from -> binary : 2
string from binary -> decimal : 1
string from binary -> is : 1
from binary decimal -> to : 1
binary decimal to -> binary : 1
decimal to binary -> binary : 1
decimal to binary -> we : 1
to binary binary -> string : 1
binary binary string -> to : 1
binary string to -> subsequences : 1
binary string to -> represent : 1
binary string to -> this : 1
binary string to -> a : 1
string to subsequences -> from : 1
to subsequences from -> a : 1
subsequences from a -> whether : 1
subsequences from a -> find : 1
subsequences from a -> we : 1
subsequences from a -> many : 1
from a whether -> a : 1
a whether a -> string : 1
whether a string -> is : 5
a string is -> a : 6
a string is -> an : 1
a string is -> we : 1
a string is -> the : 1
string is a -> subsequence : 4
string is a -> we : 1
string is a -> it : 1
string is a -> palindrome : 1
string is a -> cout : 1
string is a -> if : 1
is a subsequence -> of : 6
a subsequence of -> another : 4
a subsequence of -> a : 2
a subsequence of -> is : 1
subsequence of another -> a : 1
subsequence of another -> have : 1
subsequence of another -> to : 1
subsequence of another -> we : 1
of another a -> hierarchical : 1
another a hierarchical -> tree : 1
a hierarchical tree -> a : 1
a hierarchical tree -> introduces : 1
a hierarchical tree -> the : 1
a hierarchical tree -> we : 1
hierarchical tree a -> binary : 1
tree a binary -> tree : 2
tree a binary -> search : 1
a binary tree -> a : 1
a binary tree -> is : 2
a binary tree -> we : 1
a binary tree -> and : 1
binary tree a -> binary : 2
a binary search -> tree : 4
a binary search -> we : 1
a binary search -> in : 1
a binary search -> and : 1
a binary search -> are : 1
a binary search -> algorithm : 1
binary search tree -> a : 1
binary search tree -> we : 1
binary search tree -> search : 1
binary search tree -> possible : 1
binary search tree -> to : 1
binary search tree -> where : 1
binary search tree -> over : 1
search tree a -> new : 1
tree a new -> key : 1
a new key -> into : 7
a new key -> to : 1
a new key -> in : 1
new key into -> a : 4
new key into -> the : 1
new key into -> we : 1
new key into -> an : 1
key into a -> a : 2
key into a -> the : 1
key into a -> skewed : 1
into a a -> bst : 1
into a a -> key : 1
a a bst -> in : 1
a bst in -> out : 1
a bst in -> we : 1
a bst in -> have : 1
bst in out -> whether : 1
in out whether -> a : 2
out whether a -> key : 2
out whether a -> string : 1
whether a key -> exists : 2
a key exists -> in : 3
key exists in -> a : 3
key exists in -> the : 1
exists in a -> the : 1
exists in a -> we : 1
exists in a -> since : 1
in a the -> minimum : 1
in a the -> outer : 2
in a the -> difference : 1
a the minimum -> and : 1
the minimum and -> maximum : 5
minimum and maximum -> key : 5
minimum and maximum -> keys : 1
and maximum key -> out : 2
and maximum key -> values : 2
and maximum key -> key : 1
maximum key out -> the : 2
key out the -> successor : 1
key out the -> minimum : 1
out the successor -> of : 8
out the successor -> and : 1
the successor of -> a : 9
the successor of -> can : 1
the successor of -> will : 1
the successor of -> return : 1
the successor of -> the : 1
successor of a -> key : 5
successor of a -> specific : 1
successor of a -> given : 2
successor of a -> maximum : 1
of a key -> in : 6
of a key -> of : 2
of a key -> we : 2
a key in -> a : 10
a key in -> hash : 1
a key in -> the : 1
a key in -> an : 1
key in a -> out : 1
key in a -> a : 2
key in a -> hash : 2
key in a -> skewed : 3
key in a -> properties : 1
key in a -> we : 2
key in a -> bst : 2
key in a -> and : 1
key in a -> section : 1
key in a -> the : 1
in a out -> the : 1
a out the -> predecessor : 1
out the predecessor -> of : 4
the predecessor of -> a : 7
the predecessor of -> return : 1
predecessor of a -> key : 5
predecessor of a -> given : 2
predecessor of a -> minimum : 1
in a a -> node : 1
in a a -> left : 1
a a node -> based : 1
a node based -> on : 3
node based on -> a : 3
node based on -> the : 1
based on a -> given : 3
based on a -> suppose : 1
based on a -> the : 1
on a given -> the : 1
on a given -> input : 1
on a given -> last : 1
on a given -> we : 1
a given the -> bst : 1
given the bst -> a : 1
the bst a -> balanced : 1
bst a balanced -> bst : 1
a balanced bst -> a : 1
a balanced bst -> since : 2
a balanced bst -> we : 1
balanced bst a -> new : 1
bst a new -> a : 1
a new a -> given : 1
a new a -> new : 1
new a given -> avl : 1
a given avl -> a : 1
given avl a -> binary : 1
avl a binary -> heap : 1
a binary heap -> if : 1
a binary heap -> as : 2
a binary heap -> is : 1
a binary heap -> in : 1
binary heap if -> the : 1
heap if the -> heap : 1
if the heap -> is : 2
the heap is -> a : 1
the heap is -> variable : 1
the heap is -> we : 1
the heap is -> the : 1
heap is a -> new : 1
heap is a -> completely : 1
heap is a -> special : 1
is a new -> element : 1
a new element -> into : 5
a new element -> in : 4
a new element -> from : 1
a new element -> to : 2
new element into -> the : 5
into the the -> maximum : 1
the the maximum -> the : 2
the maximum the -> maximum : 2
maximum the maximum -> a : 1
maximum the maximum -> value : 1
the maximum a -> binary : 1
maximum a binary -> heap : 1
binary heap as -> a : 2
heap as a -> priority : 2
as a priority -> a : 1
as a priority -> we : 1
a priority a -> value : 1
priority a value -> to : 1
a value to -> a : 3
a value to -> the : 3
value to a -> key : 3
to a key -> in : 3
in a hash -> acquainted : 1
in a hash -> a : 2
in a hash -> table : 5
in a hash -> the : 2
in a hash -> first : 1
in a hash -> techniques : 1
in a hash -> four : 1
in a hash -> does : 1
a hash acquainted -> with : 1
hash acquainted with -> hash : 1
acquainted with hash -> data : 1
acquainted with hash -> we : 1
with hash data -> in : 1
hash data in -> small : 1
data in small -> data : 1
data in small -> solve : 1
in small data -> in : 1
small data in -> a : 1
a hash a -> separate : 2
hash a separate -> chaining : 2
a separate chaining -> a : 1
a separate chaining -> technique : 5
a separate chaining -> is : 1
separate chaining a -> hash : 1
chaining a hash -> an : 1
a hash an -> a : 1
hash an a -> a : 1
an a a -> an : 1
a a an -> a : 1
a an a -> hashtable : 1
an a hashtable -> adt : 1
a hashtable adt -> using : 2
hashtable adt using -> a : 4
adt using a -> separate : 2
adt using a -> linear : 2
using a separate -> chaining : 3
separate chaining technique -> in : 2
separate chaining technique -> to : 3
separate chaining technique -> works : 1
separate chaining technique -> or : 1
chaining technique in -> the : 2
technique in the -> the : 1
technique in the -> of : 1
technique in the -> we : 2
technique in the -> code : 1
in the the -> open : 1
in the the -> flow : 1
in the the -> instance : 1
in the the -> upper : 1
in the the -> class : 1
in the the -> thing : 1
in the the -> previous : 2
in the the -> code : 1
in the the -> current : 1
in the the -> will : 1
in the the -> sublist : 1
in the the -> first : 1
in the the -> following : 2
in the the -> time : 1
in the the -> preceding : 1
in the the -> scanned : 1
the the open -> addressing : 2
the open addressing -> the : 1
the open addressing -> we : 1
the open addressing -> technique : 1
the open addressing -> it : 1
open addressing the -> a : 1
addressing the a -> the : 1
the a the -> an : 1
the a the -> approach : 1
a the an -> a : 1
the an a -> an : 1
an a an -> hashtable : 1
a an hashtable -> adt : 1
an hashtable adt -> using : 2
using a linear -> probing : 3
a linear probing -> technique : 2
a linear probing -> we : 1
a linear probing -> then : 1
a linear probing -> an : 1
linear probing technique -> in : 3
linear probing technique -> we : 1
linear probing technique -> handles : 1
linear probing technique -> is : 1
probing technique in -> the : 3
in the of -> algorithms : 1
the of algorithms -> in : 1
of algorithms in -> real : 4
algorithms in real -> the : 1
algorithms in real -> elaborates : 1
algorithms in real -> we : 1
algorithms in real -> here : 1
in real the -> the : 1
real the the -> huffman : 1
the the huffman -> coding : 1
the huffman coding -> and : 1
the huffman coding -> of : 1
huffman coding and -> conquer : 1
coding and conquer -> selection : 1
and conquer selection -> matrix : 1
conquer selection matrix -> multiplication : 1
selection matrix multiplication -> programming : 1
matrix multiplication programming -> and : 1
multiplication programming and -> the : 1
programming and the -> search : 1
programming and the -> a : 1
and the search -> and : 1
the search and -> and : 2
search and and -> weaknesses : 1
search and and -> for : 1
and and weaknesses -> of : 1
and weaknesses of -> number : 1
and weaknesses of -> a : 1
weaknesses of number -> of : 1
of number of -> randomized : 1
number of randomized -> furniture : 1
of randomized furniture -> in : 1
randomized furniture in -> a : 1
furniture in a -> new : 3
in a new -> books : 1
in a new -> example : 1
in a new -> house : 1
a new books -> you : 1
new books you -> may : 1
books you may -> a : 1
books you may -> you : 1
you may a -> review : 1
you may a -> pointer : 1
may a review -> let : 1
a review let -> other : 2
review let other -> readers : 2
let other readers -> know : 2
other readers know -> what : 2
readers know what -> you : 2
know what you -> structures : 1
know what you -> share : 1
what you structures -> and : 1
you structures and -> algorithms : 1
and algorithms are -> a : 1
algorithms are a -> for : 1
are a for -> all : 1
a for all -> programmers : 1
for all programmers -> and : 1
all programmers and -> software : 1
programmers and software -> learning : 1
and software learning -> data : 1
software learning data -> structures : 1
learning data structures -> and : 1
and algorithms can -> help : 1
algorithms can help -> us : 1
can help us -> solve : 1
help us solve -> not : 1
us solve not -> only : 1
solve not only -> in : 1
not only in -> programming : 1
only in programming -> but : 1
in programming but -> also : 1
programming but also -> in : 1
but also in -> real : 1
also in real -> have : 1
in real have -> found : 1
real have found -> algorithms : 1
have found algorithms -> that : 1
found algorithms that -> when : 1
algorithms that when -> we : 1
that when we -> have : 1
when we have -> a : 1
when we have -> an : 1
we have a -> different : 1
we have a -> pair : 1
we have a -> dvd : 1
we have a -> new : 5
we have a -> function : 3
we have a -> is : 1
we have a -> pointer : 2
we have a -> really : 1
we have a -> sorted : 1
we have a -> list : 1
we have a -> result : 1
we have a -> number : 1
we have a -> the : 1
we have a -> string : 1
we have a -> bst : 1
we have a -> that : 1
we have a -> declaration : 1
we have a -> variable : 1
we have a -> text : 1
have a different -> we : 1
a different we -> can : 1
different we can -> take : 1
we can take -> advantage : 1
we can take -> the : 1
can take advantage -> of : 1
take advantage of -> the : 1
advantage of the -> algorithm : 1
of the algorithm -> to : 1
of the algorithm -> is : 1
of the algorithm -> in : 1
the algorithm to -> solve : 1
algorithm to solve -> it : 1
to solve it -> by : 1
solve it by -> this : 1
it by this -> we : 1
by this we -> will : 1
this we will -> begin : 1
this we will -> be : 2
this we will -> use : 1
this we will -> pick : 1
this we will -> have : 1
this we will -> find : 1
this we will -> still : 1
this we will -> also : 1
this we will -> get : 1
we will begin -> by : 1
will begin by -> giving : 1
begin by giving -> you : 1
by giving you -> a : 1
giving you a -> basic : 1
you a basic -> introduction : 1
a basic introduction -> to : 1
basic introduction to -> data : 1
introduction to data -> structures : 1
to data structures -> and : 1
algorithms in we -> will : 1
algorithms in we -> need : 1
algorithms in we -> can : 1
algorithms in we -> have : 1
in we will -> then : 1
in we will -> have : 1
in we will -> place : 1
we will then -> move : 1
we will then -> insert : 1
will then move -> on : 1
then move on -> to : 1
move on to -> learn : 1
move on to -> algorithm : 1
move on to -> another : 1
move on to -> creating : 1
move on to -> operation : 1
on to learn -> how : 1
to learn how -> to : 2
learn how to -> store : 1
learn how to -> arrange : 1
learn how to -> build : 1
how to store -> data : 1
to store data -> in : 3
store data in -> linked : 1
store data in -> an : 1
store data in -> and : 1
data in linked -> and : 1
in linked and -> so : 1
linked and so -> we : 1
and so we -> will : 2
and so we -> need : 1
and so we -> build : 1
so we will -> look : 1
so we will -> not : 1
so we will -> have : 1
we will look -> at : 1
will look at -> some : 1
look at some -> interesting : 1
at some interesting -> sorting : 1
some interesting sorting -> algorithms : 1
interesting sorting algorithms -> such : 1
sorting algorithms such -> as : 1
algorithms such as -> insertion : 1
such as insertion -> heap : 1
as insertion heap -> merge : 1
insertion heap merge -> which : 1
heap merge which -> are : 1
merge which are -> algorithms : 1
which are algorithms -> every : 1
are algorithms every -> developer : 1
algorithms every developer -> should : 1
every developer should -> be : 1
developer should be -> familiar : 1
should be familiar -> we : 1
be familiar we -> will : 1
familiar we will -> also : 1
we will also -> dive : 1
we will also -> analyze : 1
we will also -> create : 2
we will also -> find : 1
we will also -> use : 1
we will also -> have : 1
we will also -> define : 1
will also dive -> into : 1
also dive into -> searching : 1
dive into searching -> such : 1
into searching such -> as : 1
searching such as -> linear : 1
such as linear -> binary : 1
as linear binary -> interpolation : 1
linear binary interpolation -> and : 1
binary interpolation and -> much : 1
interpolation and much -> the : 1
and much the -> end : 1
much the end -> of : 1
the end of -> this : 2
the end of -> the : 11
the end of -> then : 1
end of this -> be : 1
end of this -> we : 1
of this be -> proficient : 1
this be proficient -> in : 1
be proficient in -> the : 1
proficient in the -> use : 1
in the use -> of : 1
the use of -> data : 1
the use of -> an : 1
the use of -> ide : 1
the use of -> this : 1
the use of -> template : 1
the use of -> character : 1
the use of -> a : 2
use of data -> structures : 1
of data structures -> and : 1
structures and this -> book : 1
and this book -> is : 1
book is book -> is : 1
is book is -> for : 1
book is for -> developers : 1
is for developers -> who : 1
for developers who -> would : 1
developers who would -> like : 1
who would like -> to : 1
like to learn -> data : 1
to learn data -> structures : 1
learn data structures -> and : 1
algorithms in basic -> programming : 1
in basic programming -> knowledge : 1
basic programming knowledge -> is : 1
programming knowledge is -> recommended : 1
knowledge is recommended -> but : 1
is recommended but -> not : 1
recommended but not -> this : 1
but not this -> book : 1
not this book -> data : 1
this book data -> structures : 1
book data structures -> and : 1
algorithms in introduces -> basic : 1
in introduces basic -> including : 1
introduces basic including -> fundamental : 1
basic including fundamental -> and : 1
including fundamental and -> advanced : 1
fundamental and advanced -> data : 2
and advanced data -> controlling : 1
and advanced data -> and : 1
and advanced data -> including : 1
advanced data controlling -> code : 1
data controlling code -> the : 1
controlling code the -> use : 1
code the use -> of : 1
use of an -> integrated : 1
of an integrated -> development : 1
an integrated development -> environment : 1
integrated development environment -> and : 1
development environment and -> abstract : 1
environment and abstract -> data : 1
and abstract data -> which : 1
abstract data which -> will : 1
data which will -> be : 1
which will be -> used : 1
which will be -> increased : 1
which will be -> stored : 3
will be used -> in : 1
be used in -> developing : 1
used in developing -> data : 1
in developing data -> we : 1
developing data we -> will : 1
data we will -> also : 1
data we will -> learn : 1
data we will -> initialize : 1
data we will -> try : 1
data we will -> refactor : 1
will also analyze -> an : 1
also analyze an -> algorithm : 1
analyze an algorithm -> using : 1
an algorithm using -> asymptotic : 1
algorithm using asymptotic -> including : 1
using asymptotic including -> cases : 1
asymptotic including cases -> and : 1
including cases and -> an : 1
cases and an -> explanation : 1
and an explanation -> of : 1
an explanation of -> big : 1
explanation of big -> big : 1
of big big -> data : 1
big big data -> in : 1
and linked explains -> how : 1
linked explains how -> to : 1
explains how to -> build : 1
explains how to -> design : 1
how to build -> a : 1
how to build -> other : 1
to build a -> linear : 1
to build a -> list : 2
to build a -> simple : 1
to build a -> generic : 1
to build a -> new : 1
to build a -> priority : 1
build a linear -> data : 1
a linear data -> type : 1
linear data type -> to : 1
data type to -> store : 1
data type to -> make : 1
data type to -> represent : 1
data type to -> the : 1
data type to -> handle : 1
data type to -> data : 1
data type to -> be : 1
data type to -> gain : 1
type to store -> that : 1
to store that -> a : 1
store that a -> it : 1
that a it -> also : 1
a it also -> will : 1
it also will -> explain : 1
also will explain -> how : 1
will explain how -> to : 1
explain how to -> use : 2
how to use -> the : 2
how to use -> these : 1
to use the -> list : 2
to use the -> implementation : 1
to use the -> operation : 1
use the list -> data : 2
the list data -> type : 1
the list data -> structure : 1
list data type -> we : 1
data type we -> built : 2
data type we -> are : 1
data type we -> have : 1
data type we -> pass : 2
data type we -> discussed : 1
type we built -> earlier : 1
type we built -> design : 1
we built earlier -> to : 1
built earlier to -> create : 1
earlier to create -> another : 1
to create another -> data : 1
to create another -> array : 1
to create another -> which : 1
create another data -> which : 1
another data which -> is : 3
data which is -> a : 4
data which is -> basically : 1
data which is -> being : 1
which is a -> linked : 1
which is a -> data : 2
which is a -> tree : 2
is a linked -> before : 1
a linked before -> we : 1
linked before we -> build : 1
before we build -> a : 1
we build a -> data : 1
we build a -> doubly : 1
build a data -> type : 1
a data type -> in : 2
a data type -> which : 1
a data type -> to : 1
a data type -> such : 1
a data type -> that : 3
data type in -> this : 2
data type in -> using : 1
data type in -> the : 3
data type in -> as : 1
data type in -> our : 1
data type in -> out : 1
data type in -> a : 1
type in this -> we : 1
type in this -> is : 1
in this we -> will : 5
in this we -> are : 14
in this we -> would : 1
in this we -> know : 1
in this we -> assign : 1
in this we -> have : 5
in this we -> need : 1
in this we -> can : 1
in this we -> just : 1
we will be -> introduced : 1
we will be -> shown : 2
we will be -> putting : 1
we will be -> able : 1
will be introduced -> to : 1
be introduced to -> the : 1
introduced to the -> fundamental : 1
to the fundamental -> data : 1
the fundamental data -> to : 1
the fundamental data -> types : 2
the fundamental data -> type : 1
fundamental data to -> build : 1
data to build -> a : 1
build a list -> and : 1
build a list -> adt : 1
a list and -> linked : 1
a list and -> find : 1
list and linked -> stacks : 1
list and linked -> follow : 1
list and linked -> list : 1
and linked stacks -> and : 1
linked stacks and -> covers : 1
stacks and covers -> how : 1
and covers how -> to : 1
covers how to -> create : 1
how to create -> and : 1
to create and -> deque : 1
create and deque -> data : 1
and deque data -> which : 1
deque data which -> are : 1
data which are -> also : 1
which are also -> linear : 1
are also linear -> data : 1
also linear data -> we : 1
linear data we -> also : 1
data we also -> explain : 1
we also explain -> how : 1
also explain how -> to : 1
to use these -> three : 1
use these three -> types : 1
these three types -> and : 1
three types and -> when : 1
types and when -> we : 1
and when we -> need : 1
and when we -> discussed : 1
when we need -> to : 2
we need to -> use : 2
we need to -> have : 2
we need to -> specify : 1
we need to -> for : 1
we need to -> take : 1
we need to -> make : 1
we need to -> pass : 3
we need to -> calculate : 2
we need to -> initialize : 2
we need to -> move : 3
we need to -> decrement : 1
we need to -> ensure : 1
we need to -> increase : 1
we need to -> iterate : 4
we need to -> counter : 1
we need to -> refactor : 1
we need to -> traverse : 5
we need to -> find : 8
we need to -> add : 3
we need to -> point : 2
we need to -> include : 2
we need to -> increment : 1
we need to -> scope : 1
we need to -> swap : 3
we need to -> sort : 1
we need to -> know : 1
we need to -> modify : 4
we need to -> check : 4
we need to -> invoke : 1
we need to -> implement : 1
we need to -> rotate : 2
we need to -> shift : 2
we need to -> create : 1
we need to -> also : 1
we need to -> provide : 1
we need to -> remove : 1
we need to -> reset : 1
we need to -> obtain : 1
we need to -> insert : 1
we need to -> continue : 1
need to use -> data : 1
need to use -> and : 1
need to use -> after : 1
need to use -> quadratic : 1
to use data -> elements : 1
to use data -> the : 1
use data elements -> using : 1
a sorting talks -> about : 1
sorting talks about -> sorting : 1
talks about sorting -> elements : 1
about sorting elements -> in : 1
sorting elements in -> a : 1
elements in a -> data : 1
elements in a -> list : 1
in a data -> we : 1
in a data -> by : 1
a data we -> will : 1
we will learn -> how : 1
we will learn -> about : 1
will learn how -> to : 1
how to arrange -> the : 1
to arrange the -> order : 1
to arrange the -> both : 1
to arrange the -> elements : 1
arrange the order -> of : 1
the order of -> elements : 1
the order of -> the : 2
the order of -> all : 1
order of elements -> using : 1
of elements using -> several : 1
elements using several -> sorting : 1
using several sorting -> they : 1
several sorting they -> are : 1
sorting they are -> bubble : 1
they are bubble -> selection : 1
are bubble selection -> insertion : 1
bubble selection insertion -> merge : 1
selection insertion merge -> quick : 1
insertion merge quick -> counting : 1
merge quick counting -> and : 1
quick counting and -> radix : 1
counting and radix -> out : 1
and radix out -> an : 1
radix out an -> element : 1
using searching walks -> us : 1
searching walks us -> through : 1
walks us through -> the : 1
us through the -> process : 1
through the process -> of : 1
the process of -> finding : 1
the process of -> dividing : 1
process of finding -> an : 1
of finding an -> element : 1
finding an element -> in : 1
an element in -> a : 1
an element in -> type : 1
element in a -> data : 1
element in a -> sublist : 1
element in a -> hash : 1
element in a -> of : 1
a data by -> giving : 1
data by giving -> a : 1
by giving a -> value : 1
giving a value -> to : 1
value to the -> we : 1
value to the -> variable : 1
value to the -> following : 1
value to the -> right : 1
value to the -> index : 1
to the we -> can : 4
to the we -> use : 2
to the we -> have : 1
to the we -> also : 1
to the we -> need : 1
to the we -> will : 3
to the we -> to : 1
the we can -> find : 1
the we can -> see : 6
the we can -> change : 1
the we can -> have : 2
the we can -> create : 2
the we can -> say : 3
the we can -> build : 1
the we can -> set : 1
the we can -> then : 1
the we can -> now : 1
the we can -> choose : 2
the we can -> swap : 1
the we can -> dequeue : 1
the we can -> use : 4
the we can -> also : 1
the we can -> invoke : 1
the we can -> implement : 1
the we can -> simplify : 1
we can find -> out : 1
we can find -> in : 3
we can find -> the : 1
we can find -> a : 1
we can find -> from : 1
can find out -> whether : 1
find out whether -> or : 1
out whether or -> not : 1
whether or not -> the : 2
or not the -> value : 1
or not the -> heap : 1
not the value -> is : 1
the value is -> in : 1
the value is -> not : 2
the value is -> if : 1
the value is -> lower : 1
value is in -> the : 1
value is in -> int : 1
is in the -> data : 1
is in the -> same : 1
is in the -> number : 1
is in the -> best : 1
is in the -> which : 1
is in the -> other : 1
is in the -> last : 1
is in the -> correct : 3
is in the -> left : 2
is in the -> right : 3
is in the -> worst : 1
is in the -> target : 1
is in the -> by : 1
in the data -> there : 1
in the data -> of : 1
in the data -> the : 4
in the data -> type : 5
in the data -> data : 1
in the data -> it : 1
in the data -> and : 2
in the data -> does : 1
in the data -> elements : 1
in the data -> we : 1
in the data -> in : 2
in the data -> if : 1
the data there -> are : 1
data there are -> seven : 1
data there are -> other : 1
data there are -> four : 1
there are seven -> sorting : 1
are seven sorting -> algorithms : 1
seven sorting algorithms -> we : 1
sorting algorithms we -> are : 1
sorting algorithms we -> have : 1
sorting algorithms we -> discussed : 1
algorithms we are -> going : 3
we are going -> to : 96
are going to -> they : 1
are going to -> implement : 2
are going to -> build : 3
are going to -> discuss : 30
are going to -> be : 2
are going to -> generate : 1
are going to -> make : 1
are going to -> determine : 1
are going to -> use : 9
are going to -> create : 7
are going to -> perform : 1
are going to -> learn : 3
are going to -> the : 4
are going to -> refactor : 1
are going to -> and : 2
are going to -> insert : 3
are going to -> if : 1
are going to -> adopt : 1
are going to -> dequeue : 2
are going to -> arrange : 1
are going to -> require : 1
are going to -> list : 1
are going to -> sort : 8
are going to -> see : 3
are going to -> involve : 1
are going to -> various : 1
are going to -> search : 3
are going to -> find : 1
are going to -> develop : 1
are going to -> write : 1
are going to -> add : 1
are going to -> invoke : 1
are going to -> try : 1
are going to -> construct : 1
are going to -> store : 1
are going to -> have : 1
going to they -> are : 1
to they are -> and : 1
they are and -> sublist : 1
they are and -> is : 1
they are and -> discussing : 1
they are and -> look : 1
they are and -> best : 1
they are and -> the : 1
are and sublist -> with : 1
and sublist with -> the : 1
sublist with the -> string : 1
string data discusses -> how : 1
data discusses how -> to : 1
discusses how to -> construct : 1
how to construct -> a : 2
how to construct -> and : 2
how to construct -> data : 1
to construct a -> string : 2
to construct a -> word : 1
to construct a -> data : 1
construct a string -> data : 1
construct a string -> in : 1
a string data -> type : 1
a string data -> we : 1
string data type -> in : 1
type in using -> a : 1
in using a -> string : 1
using a string -> data : 1
using a string -> as : 1
string data we -> can : 1
data we can -> construct : 1
data we can -> develop : 2
data we can -> also : 1
data we can -> only : 1
data we can -> use : 1
data we can -> rearrange : 1
we can construct -> several : 1
we can construct -> a : 1
can construct several -> words : 1
construct several words -> and : 1
several words and -> then : 1
words and then -> do : 1
and then do -> some : 1
then do some -> fun : 1
do some fun -> stuff : 1
some fun stuff -> such : 1
fun stuff such -> as : 1
stuff such as -> anagrams : 1
such as anagrams -> and : 1
as anagrams and -> we : 1
anagrams and we -> will : 1
and we will -> learn : 1
and we will -> dig : 1
and we will -> also : 2
and we will -> have : 2
and we will -> find : 1
and we will -> call : 1
will learn about -> binary : 1
learn about binary -> which : 1
about binary which -> contains : 1
binary which contains -> binary : 1
which contains binary -> digits : 1
contains binary digits -> and : 1
binary digits and -> subsequent : 1
digits and subsequent -> which : 1
and subsequent which -> is : 1
subsequent which is -> derived : 1
which is derived -> from : 1
is derived from -> another : 1
is derived from -> the : 1
derived from another -> last : 1
derived from another -> string : 1
from another last -> in : 1
another last in -> this : 1
last in this -> discuss : 1
last in this -> we : 1
in this discuss -> using : 1
this discuss using -> pattern : 1
discuss using pattern -> searching : 1
using pattern searching -> to : 1
pattern searching to -> find : 1
searching to find -> out : 1
to find out -> a : 3
to find out -> the : 18
to find out -> how : 1
to find out -> an : 1
to find out -> if : 2
find out a -> specific : 1
find out a -> key : 1
find out a -> hash : 1
out a specific -> short : 1
a specific short -> string : 1
specific short string -> in : 1
short string in -> a : 1
string in a -> large : 1
in a large -> a : 1
in a large -> for : 1
a large a -> hierarchical : 1
large a hierarchical -> tree : 1
hierarchical tree introduces -> the : 1
tree introduces the -> tree : 1
introduces the tree -> data : 1
the tree data -> using : 1
the tree data -> we : 1
the tree data -> the : 1
tree data using -> which : 1
data using which -> we : 1
using which we -> can : 1
which we can -> construct : 1
which we can -> use : 1
can construct a -> data : 1
construct a data -> the : 1
construct a data -> this : 1
a data the -> tree : 1
a data the -> code : 1
data the tree -> data : 1
tree data we -> can : 1
we can develop -> a : 2
we can develop -> the : 1
can develop a -> binary : 1
can develop a -> code : 1
develop a binary -> search : 1
binary search we -> can : 1
binary search we -> have : 2
search we can -> easily : 1
we can easily -> search : 3
can easily search -> any : 1
can easily search -> for : 2
easily search any -> element : 1
search any element -> in : 1
any element in -> the : 3
element in the -> tree : 1
element in the -> array : 1
element in the -> selected : 1
element in the -> the : 2
element in the -> storage : 1
element in the -> and : 1
element in the -> data : 1
element in the -> iteration : 1
element in the -> right : 1
element in the -> left : 1
in the tree -> using : 2
in the tree -> in : 1
the tree using -> binary : 1
the tree using -> and : 1
tree using binary -> search : 1
using binary search -> binary : 1
search tree we -> have : 1
tree we have -> built : 1
we have built -> can : 1
we have built -> a : 1
we have built -> do : 1
have built can -> be : 1
built can be -> also : 1
can be also -> balanced : 1
be also balanced -> to : 1
also balanced to -> prevent : 1
balanced to prevent -> a : 1
to prevent a -> skewed : 1
prevent a skewed -> in : 1
a skewed in -> this : 1
skewed in this -> we : 1
this we are -> going : 20
going to implement -> a : 1
going to implement -> the : 1
to implement a -> priority : 2
implement a priority -> queue : 1
implement a priority -> please : 1
a priority queue -> using : 2
a priority queue -> as : 1
priority queue using -> a : 2
priority queue using -> this : 1
queue using a -> value : 1
queue using a -> binary : 1
using a value -> to : 1
key in hash -> explains : 1
in hash explains -> how : 1
hash explains how -> to : 1
how to design -> a : 1
to design a -> hash : 1
design a hash -> which : 1
a hash which -> is : 1
hash which is -> a : 1
hash which is -> please : 1
hash which is -> phone : 1
is a data -> structure : 1
is a data -> type : 2
is a data -> that : 1
a data structure -> that : 1
a data structure -> and : 1
a data structure -> so : 1
data structure that -> stores : 1
data structure that -> we : 1
structure that stores -> an : 1
that stores an -> element : 1
stores an element -> based : 1
an element based -> on : 2
element based on -> the : 1
element based on -> its : 1
based on the -> hash : 1
based on the -> hint : 1
based on the -> base : 1
based on the -> i : 1
based on the -> data : 1
based on the -> preceding : 2
based on the -> range : 1
based on the -> code : 1
based on the -> least : 1
based on the -> key : 1
based on the -> first : 1
based on the -> searched : 1
based on the -> behavior : 1
based on the -> value : 1
on the hash -> a : 1
the hash a -> collision : 2
hash a collision -> might : 1
hash a collision -> in : 1
hash a collision -> will : 1
a collision might -> happen : 1
collision might happen -> in : 1
might happen in -> a : 1
happen in a -> hash : 1
a hash table -> data : 1
a hash table -> in : 1
a hash table -> which : 1
a hash table -> to : 1
a hash table -> by : 1
a hash table -> is : 1
hash table data -> so : 1
hash table data -> types : 1
hash table data -> we : 1
hash table data -> type : 1
table data so -> we : 1
data so we -> also : 1
so we also -> discuss : 1
we also discuss -> how : 1
also discuss how -> to : 1
discuss how to -> handle : 1
discuss how to -> construct : 2
discuss how to -> find : 1
discuss how to -> prevent : 1
how to handle -> the : 1
how to handle -> it : 1
to handle the -> collision : 1
to handle the -> preceding : 1
handle the collision -> using : 1
the collision using -> separate : 1
collision using separate -> chaining : 1
using separate chaining -> and : 1
separate chaining and -> open : 1
chaining and open -> addressing : 1
and open addressing -> of : 1
open addressing of -> algorithms : 1
addressing of algorithms -> in : 1
in real elaborates -> some : 1
real elaborates some -> algorithm : 1
elaborates some algorithm -> paradigms : 1
some algorithm paradigms -> and : 1
algorithm paradigms and -> implements : 1
paradigms and implements -> them : 1
and implements them -> in : 1
implements them in -> the : 1
them in the -> real : 1
them in the -> we : 1
in the real -> there : 1
the real there -> are : 1
real there are -> six : 1
there are six -> algorithm : 1
are six algorithm -> paradigms : 1
six algorithm paradigms -> to : 1
algorithm paradigms to -> discuss : 1
algorithm paradigms to -> design : 1
paradigms to discuss -> in : 1
to discuss in -> this : 5
discuss in this -> they : 1
discuss in this -> chapter : 2
discuss in this -> node : 1
discuss in this -> follow : 1
discuss in this -> with : 1
in this they -> are : 1
this they are -> divide : 1
they are divide -> and : 1
are divide and -> conquer : 1
are divide and -> search : 1
divide and conquer -> dynamic : 1
divide and conquer -> algorithm : 1
divide and conquer -> are : 1
and conquer dynamic -> randomized : 1
conquer dynamic randomized -> and : 1
dynamic randomized and -> backtracking : 1
randomized and backtracking -> get : 1
and backtracking get -> the : 1
backtracking get the -> most : 1
of this get -> through : 1
this get through -> this : 1
get through this -> book : 1
through this book -> and : 1
this book and -> successfully : 1
book and successfully -> complete : 1
and successfully complete -> all : 1
successfully complete all -> the : 1
complete all the -> source : 1
all the source -> code : 1
the source code -> you : 2
source code you -> need : 1
source code you -> require : 1
code you need -> the : 1
you need the -> following : 1
need the following -> pc : 1
the following pc -> or : 1
following pc or -> notebook : 1
pc or notebook -> with : 10
or notebook with -> or : 10
notebook with or -> gcc : 10
with or gcc -> or : 10
or gcc or -> block : 5
or gcc or -> ide : 5
gcc or block -> ide : 5
or block ide -> windows : 5
block ide windows -> and : 5
ide windows and -> linux : 10
windows and linux -> or : 9
windows and linux -> block : 1
and linux or -> code : 4
and linux or -> ide : 5
linux or code -> block : 4
or code block -> ide : 4
code block ide -> the : 1
code block ide -> will : 3
block ide the -> example : 1
ide the example -> code : 1
example code can -> download : 1
code can download -> the : 1
can download the -> example : 1
can download the -> code : 1
download the example -> code : 1
example code files -> for : 1
code files for -> this : 1
files for this -> book : 1
for this book -> from : 1
this book from -> your : 1
book from your -> account : 1
from your account -> at : 1
your account at -> if : 1
account at if -> you : 1
at if you -> purchased : 1
if you purchased -> this : 1
you purchased this -> book : 1
purchased this book -> you : 1
this book you -> can : 1
book you can -> visit : 1
you can visit -> and : 1
can visit and -> register : 1
visit and register -> to : 1
and register to -> have : 1
register to have -> the : 1
to have the -> files : 1
to have the -> following : 2
have the files -> emailed : 1
the files emailed -> directly : 1
files emailed directly -> to : 1
emailed directly to -> can : 1
directly to can -> download : 1
to can download -> the : 1
download the code -> files : 1
the code files -> by : 1
the code files -> on : 9
code files by -> following : 1
files by following -> these : 1
by following these -> in : 1
following these in -> or : 1
these in or -> register : 1
in or register -> at : 1
or register at -> the : 1
register at the -> on : 1
at the on -> downloads : 1
the on downloads -> the : 1
on downloads the -> name : 1
downloads the name -> of : 1
the name of -> the : 1
name of the -> book : 1
of the book -> in : 1
the book in -> the : 1
book in the -> box : 1
in the box -> and : 1
the box and -> follow : 1
box and follow -> the : 1
and follow the -> onscreen : 1
follow the onscreen -> the : 1
the onscreen the -> file : 1
onscreen the file -> is : 1
the file is -> please : 1
the file is -> no : 1
file is please -> make : 1
is please make -> sure : 1
please make sure -> that : 1
make sure that -> you : 1
sure that you -> unzip : 1
that you unzip -> or : 1
you unzip or -> extract : 1
unzip or extract -> the : 1
or extract the -> folder : 1
extract the folder -> using : 1
the folder using -> the : 1
folder using the -> latest : 1
using the latest -> version : 1
the latest version -> for : 1
latest version for -> for : 1
version for for -> for : 1
for for for -> code : 1
for for code -> bundle : 1
for code bundle -> for : 1
code bundle for -> the : 1
bundle for the -> book : 1
for the book -> is : 1
the book is -> also : 1
book is also -> hosted : 1
is also hosted -> on : 1
also hosted on -> github : 1
hosted on github -> we : 1
on github we -> also : 1
github we also -> have : 1
we also have -> other : 1
also have other -> code : 1
have other code -> bundles : 1
other code bundles -> from : 1
code bundles from -> our : 1
bundles from our -> rich : 1
from our rich -> catalog : 1
our rich catalog -> of : 1
rich catalog of -> books : 1
catalog of books -> and : 1
of books and -> videos : 1
books and videos -> available : 1
and videos available -> check : 1
videos available check -> them : 1
available check them -> the : 1
check them the -> color : 1
them the color -> also : 1
the color also -> provide : 1
color also provide -> a : 1
also provide a -> pdf : 1
provide a pdf -> file : 1
a pdf file -> that : 1
pdf file that -> has : 1
file that has -> color : 1
that has color -> images : 1
has color images -> of : 1
color images of -> the : 1
images of the -> used : 1
of the used -> in : 1
of the used -> to : 1
the used in -> this : 1
used in this -> you : 1
in this you -> can : 1
this you can -> download : 1
you can download -> it : 1
can download it -> are : 1
download it are -> a : 1
it are a -> number : 1
are a number -> of : 1
a number of -> text : 1
number of text -> conventions : 1
of text conventions -> used : 1
text conventions used -> throughout : 1
conventions used throughout -> this : 1
used throughout this -> words : 1
throughout this words -> in : 1
this words in -> database : 1
words in database -> table : 1
in database table -> folder : 1
database table folder -> file : 1
table folder file -> dummy : 1
folder file dummy -> user : 1
file dummy user -> and : 1
dummy user and -> twitter : 1
user and twitter -> is : 1
and twitter is -> an : 1
twitter is an -> finishing : 1
is an finishing -> the : 1
an finishing the -> we : 1
finishing the we -> will : 2
the we will -> have : 4
the we will -> get : 13
the we will -> refactor : 1
the we will -> take : 1
the we will -> see : 3
the we will -> always : 2
the we will -> be : 1
the we will -> create : 1
the we will -> both : 1
the we will -> use : 1
we will have -> a : 4
we will have -> an : 2
we will have -> another : 1
we will have -> something : 1
we will have -> the : 10
we will have -> which : 1
we will have -> four : 1
we will have -> for : 1
we will have -> onscreen : 1
we will have -> class : 1
we will have -> time : 1
will have a -> new : 2
will have a -> function : 1
will have a -> to : 1
will have a -> constructor : 1
have a new -> project : 2
have a new -> we : 1
have a new -> class : 1
have a new -> data : 1
have a new -> so : 1
have a new -> adt : 1
a new project -> with : 2
a new project -> by : 2
new project with -> block : 1
new project with -> a : 1
project with block -> of : 1
with block of -> code : 1
block of code -> is : 1
of code is -> set : 1
of code is -> to : 1
code is set -> as : 1
is set as -> int : 1
set as int -> main : 1
as int main -> int : 2
int main int -> enter : 2
int main int -> cout : 4
main int enter -> an : 2
int enter an -> integer : 2
enter an integer -> value : 2
enter an integer -> cin : 2
an integer value -> you : 2
integer value you -> entered : 2
value you entered -> is : 4
you entered is -> return : 2
you entered is -> cout : 2
entered is return -> we : 2
is return we -> wish : 1
is return we -> can : 3
is return we -> build : 1
return we wish -> to : 1
we wish to -> draw : 1
wish to draw -> your : 1
to draw your -> attention : 1
draw your attention -> to : 1
your attention to -> a : 1
attention to a -> particular : 1
to a particular -> part : 1
a particular part -> of : 1
particular part of -> a : 1
of a code -> the : 1
a code the -> relevant : 1
code the relevant -> lines : 1
the relevant lines -> or : 1
relevant lines or -> items : 1
lines or items -> are : 1
or items are -> set : 1
items are set -> in : 1
are set in -> t : 1
set in t -> input : 1
in t input -> or : 1
t input or -> output : 1
input or output -> is : 1
or output is -> written : 1
output is written -> as : 1
is written as -> indicates : 1
written as indicates -> a : 1
as indicates a -> new : 1
indicates a new -> an : 1
a new an -> important : 1
a new an -> existing : 1
new an important -> or : 1
an important or -> that : 1
important or that -> you : 1
or that you -> see : 1
that you see -> for : 1
you see for -> words : 1
see for words -> in : 1
for words in -> menus : 1
words in menus -> or : 1
in menus or -> dialog : 1
menus or dialog -> boxes : 1
or dialog boxes -> appear : 1
dialog boxes appear -> in : 1
boxes appear in -> the : 1
appear in the -> text : 1
appear in the -> for : 1
in the text -> like : 1
the text like -> here : 1
text like here -> is : 1
like here is -> an : 1
here is an -> can : 1
is an can -> create : 1
an can create -> a : 1
can create a -> new : 2
can create a -> data : 1
can create a -> function : 1
create a new -> project : 2
create a new -> data : 2
create a new -> node : 15
create a new -> then : 3
create a new -> the : 2
create a new -> vector : 2
create a new -> chaining : 1
create a new -> instance : 1
create a new -> as : 1
create a new -> treenode : 1
create a new -> method : 1
create a new -> internal : 1
new project by -> clicking : 2
project by clicking -> on : 2
by clicking on -> then : 1
by clicking on -> the : 1
clicking on then -> and : 1
on then and -> then : 1
then and then -> or : 1
and then or -> important : 1
then or important -> notes : 1
or important notes -> appear : 1
important notes appear -> like : 1
notes appear like -> and : 1
appear like and -> tricks : 1
like and tricks -> appear : 1
and tricks appear -> like : 1
tricks appear like -> in : 1
appear like in -> from : 1
like in from -> our : 1
in from our -> readers : 1
from our readers -> is : 1
our readers is -> always : 1
readers is always -> email : 1
is always email -> and : 1
always email and -> mention : 1
email and mention -> the : 1
and mention the -> book : 1
mention the book -> title : 1
the book title -> in : 1
book title in -> the : 1
title in the -> subject : 1
in the subject -> of : 1
the subject of -> your : 1
subject of your -> if : 1
of your if -> you : 1
your if you -> have : 1
if you have -> questions : 1
if you have -> found : 1
you have questions -> about : 1
have questions about -> any : 1
questions about any -> aspect : 1
about any aspect -> of : 1
any aspect of -> this : 1
aspect of this -> please : 1
of this please -> email : 1
this please email -> us : 1
please email us -> at : 1
email us at -> although : 1
us at although -> we : 1
at although we -> have : 1
although we have -> taken : 1
although we have -> it : 1
although we have -> already : 1
we have taken -> every : 1
have taken every -> care : 1
taken every care -> to : 1
every care to -> ensure : 1
care to ensure -> the : 1
accuracy of our -> mistakes : 1
of our mistakes -> do : 1
our mistakes do -> if : 1
mistakes do if -> you : 1
do if you -> have : 1
you have found -> a : 1
have found a -> mistake : 1
found a mistake -> in : 1
a mistake in -> this : 1
mistake in this -> we : 1
this we would -> be : 1
we would be -> grateful : 2
would be grateful -> if : 2
be grateful if -> you : 2
grateful if you -> would : 2
if you would -> report : 1
if you would -> provide : 1
you would report -> this : 1
would report this -> to : 1
report this to -> please : 1
this to please -> visit : 1
to please visit -> selecting : 1
please visit selecting -> your : 1
visit selecting your -> clicking : 1
selecting your clicking -> on : 1
your clicking on -> the : 1
clicking on the -> errata : 1
clicking on the -> then : 1
on the errata -> submission : 1
the errata submission -> form : 1
errata submission form -> and : 1
submission form and -> entering : 1
form and entering -> the : 1
and entering the -> if : 1
entering the if -> you : 1
the if you -> come : 1
if you come -> across : 1
you come across -> any : 1
come across any -> illegal : 1
across any illegal -> copies : 1
any illegal copies -> of : 1
illegal copies of -> our : 1
copies of our -> works : 1
of our works -> in : 1
our works in -> any : 1
works in any -> form : 1
any form on -> the : 1
form on the -> we : 1
on the we -> would : 1
on the we -> decide : 1
on the we -> notate : 1
on the we -> have : 1
on the we -> just : 1
on the we -> can : 1
the we would -> be : 1
you would provide -> us : 1
would provide us -> with : 1
provide us with -> the : 1
us with the -> location : 1
with the location -> address : 1
the location address -> or : 1
location address or -> website : 1
address or website -> please : 1
or website please -> contact : 1
website please contact -> us : 1
please contact us -> at : 1
contact us at -> with : 1
us at with -> a : 1
at with a -> link : 1
with a link -> to : 1
a link to -> the : 1
link to the -> you : 1
link to the -> previous : 1
to the you -> are : 1
the you are -> interested : 1
the you are -> working : 1
you are interested -> in : 4
are interested in -> becoming : 1
are interested in -> either : 1
are interested in -> learning : 2
becoming an if -> there : 1
an if there -> is : 1
if there is -> a : 1
if there is -> no : 2
there is a -> topic : 1
there is a -> chance : 1
there is a -> loop : 1
there is a -> calculation : 1
is a topic -> that : 1
a topic that -> you : 1
topic that you -> have : 1
that you have -> expertise : 1
you have expertise -> in : 1
have expertise in -> and : 1
expertise in and -> you : 1
in and you -> are : 1
and you are -> interested : 1
interested in either -> writing : 1
in either writing -> or : 1
either writing or -> contributing : 1
writing or contributing -> to : 1
or contributing to -> a : 1
contributing to a -> please : 1
to a please -> visit : 1
a please visit -> leave : 1
please visit leave -> a : 1
visit leave a -> once : 1
leave a once -> you : 1
a once you -> have : 1
once you have -> read : 1
you have read -> and : 1
have read and -> used : 1
read and used -> this : 1
and used this -> why : 1
used this why -> not : 1
this why not -> leave : 1
why not leave -> a : 1
not leave a -> review : 1
leave a review -> on : 1
a review on -> the : 2
review on the -> site : 2
on the site -> that : 2
the site that -> you : 2
site that you -> purchased : 1
site that you -> bought : 1
that you purchased -> it : 1
you purchased it -> potential : 1
purchased it potential -> readers : 1
it potential readers -> can : 1
potential readers can -> then : 1
potential readers can -> see : 1
readers can then -> see : 1
can then see -> and : 1
then see and -> use : 1
see and use -> your : 2
and use your -> unbiased : 2
use your unbiased -> opinion : 2
your unbiased opinion -> to : 2
unbiased opinion to -> make : 2
opinion to make -> purchase : 1
opinion to make -> purchasing : 1
to make purchase -> we : 1
make purchase we -> at : 1
purchase we at -> packt : 1
we at packt -> can : 1
at packt can -> understand : 1
packt can understand -> what : 1
can understand what -> you : 1
can understand what -> our : 1
understand what you -> think : 1
what you think -> about : 1
you think about -> our : 1
think about our -> and : 2
about our and -> our : 2
our and our -> authors : 2
and our authors -> can : 2
our authors can -> see : 2
authors can see -> your : 2
can see your -> feedback : 2
see your feedback -> on : 2
your feedback on -> their : 1
your feedback on -> the : 1
feedback on their -> thank : 1
on their thank -> more : 1
their thank more -> information : 1
thank more information -> about : 1
more information about -> please : 1
information about please -> data : 1
about please data -> structures : 1
please data structures -> and : 1
algorithms in this -> first : 1
in this first -> we : 1
this first we -> are : 1
first we are -> going : 1
going to build -> the : 2
going to build -> a : 2
to build the -> solid : 1
to build the -> we : 1
to build the -> following : 1
build the solid -> foundations : 1
the solid foundations -> so : 1
solid foundations so -> we : 1
foundations so we -> can : 1
so we can -> go : 1
so we can -> pass : 1
so we can -> say : 2
so we can -> refactor : 1
so we can -> move : 1
so we can -> apply : 1
so we can -> eliminate : 1
so we can -> insert : 2
so we can -> invoke : 2
so we can -> have : 1
we can go -> through : 1
we can go -> further : 1
can go through -> the : 1
go through the -> following : 1
go through the -> data : 1
go through the -> sorted : 1
through the following -> chapters : 1
the following chapters -> the : 1
the following chapters -> while : 1
following chapters the -> topics : 1
chapters the topics -> we : 1
the topics we -> are : 3
topics we are -> going : 3
going to discuss -> in : 4
going to discuss -> the : 5
going to discuss -> control : 1
going to discuss -> some : 1
going to discuss -> these : 2
going to discuss -> is : 2
going to discuss -> this : 3
going to discuss -> other : 1
going to discuss -> regarding : 1
going to discuss -> various : 1
going to discuss -> a : 2
going to discuss -> several : 1
going to discuss -> data : 1
going to discuss -> how : 3
going to discuss -> another : 3
going to discuss -> it : 1
going to discuss -> common : 1
in this chapter -> and : 1
in this chapter -> need : 1
this chapter and -> running : 1
chapter and running -> a : 1
and running a -> simple : 1
running a simple -> an : 1
a simple an -> abstract : 1
simple an abstract -> data : 1
an abstract data -> type : 1
abstract data type -> to : 1
type to make -> a : 1
to make a -> data : 1
to make a -> function : 1
to make a -> balanced : 1
make a data -> the : 1
data the code -> with : 1
data the code -> works : 1
data the code -> should : 1
the code with -> templates : 1
the code with -> just : 1
code with templates -> and : 1
with templates and -> the : 1
templates and the -> template : 1
and the template -> the : 1
the template the -> complexity : 1
template the complexity -> of : 1
the complexity of -> algorithms : 1
the complexity of -> the : 13
the complexity of -> performing : 1
the complexity of -> each : 1
the complexity of -> this : 7
the complexity of -> operation : 1
the complexity of -> these : 1
complexity of algorithms -> to : 1
of algorithms to -> measure : 1
algorithms to measure -> the : 1
to measure the -> performance : 1
measure the performance -> of : 1
the performance of -> the : 1
the performance of -> this : 1
performance of the -> follow : 1
of the follow -> along : 1
the follow along -> with : 1
follow along with -> this : 9
along with this -> chapter : 2
along with this -> as : 3
along with this -> including : 4
with this chapter -> including : 2
this chapter including -> the : 2
chapter including the -> source : 2
including the source -> we : 5
including the source -> you : 1
the source we -> require : 6
source we require -> the : 6
we require the -> desktop : 3
we require the -> pc : 3
require the desktop -> pc : 5
the desktop pc -> or : 5
desktop pc or -> notebook : 5
gcc or ide -> windows : 5
or ide windows -> and : 5
linux or ide -> will : 5
or ide will -> find : 5
ide will find -> the : 9
will find the -> code : 9
will find the -> position : 2
will find the -> maximum : 1
will find the -> successor : 1
will find the -> minimum : 1
find the code -> files : 9
find the code -> as : 1
code files on -> to : 1
code files on -> github : 8
files on to -> basic : 1
on to basic -> we : 1
to basic we -> go : 1
basic we go -> through : 1
we go through -> the : 1
we go through -> look : 1
through the data -> structures : 1
the data structures -> and : 1
the data structures -> in : 1
the data structures -> we : 1
in we need -> to : 3
in we need -> a : 2
need to have -> a : 1
need to have -> two : 1
to have a -> fundamental : 1
to have a -> skewed : 1
have a fundamental -> understanding : 1
a fundamental understanding -> of : 1
fundamental understanding of -> the : 1
understanding of the -> language : 1
understanding of the -> flow : 1
of the language -> in : 1
the language in -> this : 1
language in this -> we : 1
build a simple -> build : 1
build a simple -> class : 1
a simple build -> and : 1
simple build and -> then : 1
build and then -> run : 1
and then run -> we : 1
then run we -> are : 1
run we are -> also : 1
we are also -> going : 2
are also going -> to : 2
also going to -> discuss : 1
also going to -> build : 1
to discuss the -> fundamental : 1
to discuss the -> stl : 1
to discuss the -> ways : 1
to discuss the -> following : 1
to discuss the -> implementation : 1
discuss the fundamental -> and : 1
the fundamental and -> advanced : 1
advanced data and -> before : 1
data and before -> we : 1
and before we -> move : 1
before we move -> on : 1
we move on -> to : 1
on to algorithm -> we : 1
to algorithm we -> are : 1
algorithm we are -> going : 1
to discuss control -> flow : 1
discuss control flow -> in : 1
control flow in -> this : 1
flow in this -> your : 1
in this your -> first : 1
this your first -> code : 1
code in the -> code : 1
code in the -> slower : 1
code in the -> full : 1
code in the -> file : 1
code in the -> we : 1
in the code -> is : 1
in the code -> so : 1
in the code -> as : 1
in the code -> to : 1
the code is -> executed : 1
code is executed -> from : 1
is executed from -> the : 1
executed from the -> function : 1
from the function -> the : 1
from the function -> by : 1
the function the -> function : 2
the function the -> class : 1
function the function -> itself : 1
function the function -> is : 1
the function itself -> is : 1
function itself is -> a : 1
function itself is -> the : 1
itself is a -> collection : 1
is a collection -> of : 1
collection of statements -> to : 1
of statements to -> perform : 1
statements to perform -> a : 1
to perform a -> specific : 1
to perform a -> selection : 1
perform a specific -> as : 1
a specific as -> a : 1
a specific as -> long : 1
specific as a -> result : 1
as a result -> of : 2
a result of -> a : 1
a result of -> the : 1
result of a -> program : 1
of a program -> in : 1
of a program -> change : 1
a program in -> has : 1
program in has -> to : 1
in has to -> contain : 1
has to contain -> at : 1
to contain at -> least : 1
contain at least -> one : 1
at least one -> function : 1
at least one -> item : 2
at least one -> element : 2
at least one -> in : 1
at least one -> child : 1
at least one -> the : 1
least one function -> named : 1
one function named -> the : 1
function named the -> following : 1
named the following -> code : 1
the following code -> is : 2
the following code -> snippet : 2
the following code -> string : 1
the following code -> return : 1
the following code -> the : 1
the following code -> get : 1
the following code -> initialize : 1
the following code -> just : 1
the following code -> prepare : 1
the following code -> for : 1
the following code -> in : 1
the following code -> check : 1
the following code -> insert : 1
the following code -> adding : 1
following code is -> the : 1
following code is -> used : 1
code is the -> simplest : 1
is the simplest -> program : 1
is the simplest -> search : 1
the simplest program -> in : 1
simplest program in -> that : 1
program in that -> will : 1
in that will -> be : 1
that will be -> successfully : 1
that will be -> there : 1
that will be -> represented : 1
that will be -> removed : 1
that will be -> from : 1
that will be -> the : 1
that will be -> discussed : 1
that will be -> a : 2
that will be -> mapped : 1
that will be -> performed : 1
will be successfully -> compiled : 1
be successfully compiled -> and : 1
successfully compiled and -> int : 1
compiled and int -> return : 1
and int return -> the : 1
int return the -> preceding : 1
return the preceding -> code : 1
return the preceding -> we : 9
the preceding code -> is : 1
the preceding code -> as : 2
the preceding code -> by : 3
the preceding code -> so : 1
the preceding code -> should : 2
the preceding code -> can : 1
the preceding code -> we : 5
the preceding code -> snippet : 3
the preceding code -> curve : 1
the preceding code -> in : 2
the preceding code -> the : 2
the preceding code -> comparing : 1
the preceding code -> and : 1
the preceding code -> there : 1
the preceding code -> has : 1
the preceding code -> that : 1
the preceding code -> with : 1
the preceding code -> to : 1
the preceding code -> because : 1
preceding code is -> saved : 1
code is saved -> as : 1
is saved as -> we : 1
saved as we -> can : 1
saved as we -> need : 1
as we can -> compile : 2
as we can -> use : 1
as we can -> see : 19
as we can -> the : 1
as we can -> swap : 1
as we can -> repeat : 1
we can compile -> the : 1
we can compile -> it : 1
we can compile -> and : 2
can compile the -> code : 1
compile the code -> using : 2
the code using -> the : 2
code using the -> compiler : 1
code using the -> command : 1
using the compiler -> by : 1
the compiler by -> running : 1
compiler by running -> the : 1
by running the -> following : 1
by running the -> preceding : 1
running the following -> compiling : 1
the following compiling -> command : 2
following compiling command -> on : 1
following compiling command -> will : 1
compiling command on -> the : 1
compiling command on -> a : 1
command on the -> console : 1
on the console -> from : 1
on the console -> this : 1
on the console -> chose : 1
on the console -> if : 1
the console from -> the : 1
console from the -> active : 1
from the active -> directory : 1
the active directory -> where : 1
active directory where -> the : 1
directory where the -> file : 1
where the file -> is : 1
file is no -> error : 1
is no error -> message : 1
no error message -> the : 1
error message the -> output : 1
message the output -> file : 1
the output file -> will : 1
the output file -> name : 1
the output file -> named : 1
the output file -> typing : 1
output file will -> be : 1
file will be -> generated : 1
will be generated -> if : 1
be generated if -> we : 1
generated if we -> run : 1
if we run -> the : 9
if we run -> we : 1
we run the -> preceding : 8
we run the -> command : 1
we run the -> output : 1
we run the -> function : 1
we run the -> second : 1
we run the -> code : 1
run the preceding -> compiling : 1
run the preceding -> code : 8
run the preceding -> we : 15
run the preceding -> the : 1
run the preceding -> it : 2
run the preceding -> sort : 1
the preceding compiling -> command : 1
preceding compiling command -> on : 1
command on a -> windows : 1
on a windows -> we : 1
a windows we -> will : 1
windows we will -> get : 1
we will get -> a : 3
we will get -> the : 18
we will get -> should : 1
we will get -> which : 1
we will get -> from : 2
we will get -> time : 1
we will get -> as : 1
will get a -> file : 2
will get a -> similar : 1
get a file -> named : 2
a file named -> if : 1
a file named -> can : 1
file named if -> we : 1
named if we -> run : 1
run the command -> on : 1
the command on -> bash : 1
command on bash -> such : 1
on bash such -> as : 1
bash such as -> linux : 1
such as linux -> or : 1
as linux or -> we : 1
linux or we -> will : 1
or we will -> get : 1
file named can -> specify : 1
named can specify -> the : 1
can specify the -> output : 1
can specify the -> which : 1
specify the output -> file : 1
output file name -> using : 1
file name using -> the : 1
name using the -> option : 1
using the option -> followed : 1
the option followed -> by : 1
option followed by -> the : 1
followed by the -> desired : 1
followed by the -> second : 1
by the desired -> for : 1
the desired for -> the : 1
desired for the -> following : 1
for the following -> compiling : 1
compiling command will -> produce : 1
command will produce -> the : 1
will produce the -> output : 1
produce the output -> file : 1
output file named -> when : 1
file named when -> we : 1
named when we -> run : 1
when we run -> the : 2
run the output -> file : 1
output file typing -> and : 1
file typing and -> then : 1
typing and then -> pressing : 1
and then pressing -> a : 1
then pressing a -> windows : 1
pressing a windows -> console : 1
a windows console -> or : 1
windows console or -> by : 1
console or by -> typing : 1
or by typing -> then : 1
by typing then -> pressing : 1
typing then pressing -> bash : 1
then pressing bash -> we : 1
pressing bash we -> see : 1
bash we see -> anything : 1
we see anything -> on : 1
see anything on -> the : 1
anything on the -> console : 1
the console this -> is : 1
console this is -> because : 1
this is because -> we : 2
this is because -> the : 1
is because we -> print : 1
is because we -> need : 1
because we print -> anything : 1
we print anything -> to : 1
print anything to -> the : 1
anything to the -> console : 1
to the console -> to : 1
to the console -> and : 1
the console to -> make : 1
console to make -> our : 1
to make our -> file : 1
make our file -> refactor : 1
our file refactor -> the : 1
file refactor the -> code : 1
refactor the code -> so : 1
the code so -> that : 2
code so that -> it : 3
code so that -> the : 1
code so that -> other : 1
so that it -> can : 3
so that it -> uses : 1
so that it -> has : 1
so that it -> will : 2
so that it -> cannot : 2
so that it -> becomes : 3
so that it -> no : 1
that it can -> receive : 1
that it can -> fit : 1
that it can -> store : 1
it can receive -> the : 1
can receive the -> input : 1
receive the input -> data : 1
the input data -> from : 1
input data from -> the : 1
data from the -> user : 1
from the user -> and : 2
the user and -> then : 2
user and then -> print : 1
user and then -> store : 1
and then print -> the : 2
and then print -> them : 1
then print the -> data : 1
then print the -> content : 1
print the data -> back : 1
the data back -> to : 1
data back to -> the : 1
back to the -> the : 1
back to the -> definition : 1
back to the -> code : 1
to the the -> refactored : 1
to the the -> program : 1
to the the -> implementation : 1
to the the -> new : 2
to the the -> vector : 1
to the the -> time : 1
to the the -> best : 1
the the refactored -> code : 1
the refactored code -> should : 2
refactored code should -> look : 1
refactored code should -> be : 1
code should look -> as : 1
should look as -> int : 1
should look as -> we : 1
look as int -> main : 1
return we can -> see : 28
return we can -> compile : 1
return we can -> we : 1
return we can -> the : 2
return we can -> invoke : 1
we can see -> in : 78
we can see -> that : 13
we can see -> from : 1
we can see -> at : 1
can see in -> the : 78
can see in -> function : 1
see in the -> preceding : 55
see in the -> following : 12
see in the -> to : 1
see in the -> we : 2
see in the -> is : 1
see in the -> after : 1
see in the -> it : 1
see in the -> cout : 1
see in the -> function : 1
see in the -> two : 1
see in the -> got : 1
see in the -> the : 1
in the preceding -> we : 30
in the preceding -> the : 11
in the preceding -> although : 1
in the preceding -> code : 7
in the preceding -> when : 2
in the preceding -> it : 2
in the preceding -> our : 1
in the preceding -> got : 1
in the preceding -> array : 1
in the preceding -> declaration : 2
in the preceding -> regardless : 1
in the preceding -> parenthesis : 1
in the preceding -> a : 3
in the preceding -> since : 1
in the preceding -> bubble : 1
in the preceding -> is : 2
in the preceding -> beside : 1
in the preceding -> function : 2
in the preceding -> diagram : 1
in the preceding -> tree : 1
in the preceding -> binary : 1
in the preceding -> there : 2
in the preceding -> they : 1
in the preceding -> bool : 1
the preceding we -> appended : 1
the preceding we -> see : 2
the preceding we -> will : 11
the preceding we -> have : 16
the preceding we -> create : 1
the preceding we -> can : 18
the preceding we -> created : 1
the preceding we -> assign : 2
the preceding we -> need : 7
the preceding we -> get : 1
the preceding we -> compare : 1
the preceding we -> used : 1
the preceding we -> should : 2
the preceding we -> are : 5
the preceding we -> to : 1
the preceding we -> enqueue : 1
the preceding we -> try : 1
the preceding we -> call : 2
the preceding we -> pass : 1
the preceding we -> also : 1
the preceding we -> generate : 1
the preceding we -> now : 1
the preceding we -> do : 1
preceding we appended -> several : 1
we appended several -> lines : 1
appended several lines -> of : 1
several lines of -> code : 1
lines of code -> so : 1
lines of code -> to : 1
of code so -> that : 1
so that the -> program : 1
so that the -> curve : 1
so that the -> complexity : 1
so that the -> operation : 1
so that the -> parentheses : 1
so that the -> time : 2
so that the -> vector : 1
that the program -> can : 1
the program can -> print : 1
program can print -> to : 1
can print to -> the : 1
print to the -> console : 1
the console and -> the : 1
console and the -> user : 1
and the user -> can : 1
the user can -> give : 1
user can give -> an : 1
can give an -> input : 1
can give an -> time : 1
give an input -> to : 1
an input to -> the : 1
input to the -> the : 1
the the program -> displays : 1
the the program -> will : 1
the program displays -> text : 1
program displays text -> that : 1
displays text that -> asks : 1
text that asks -> the : 1
that asks the -> user : 1
asks the user -> to : 1
the user to -> input : 3
user to input -> an : 1
user to input -> the : 2
user to input -> a : 1
to input an -> integer : 1
input an integer -> after : 1
an integer after -> the : 1
integer after the -> user : 1
after the user -> types : 1
the user types -> the : 1
user types the -> desired : 1
types the desired -> number : 1
the desired number -> and : 1
desired number and -> presses : 1
number and presses -> the : 1
and presses the -> program : 1
presses the program -> will : 1
the program will -> print : 1
the program will -> only : 1
the program will -> give : 1
the program will -> guess : 1
the program will -> leave : 1
program will print -> that : 1
will print that -> we : 1
print that we -> also : 1
that we also -> defined : 1
we also defined -> a : 1
also defined a -> new : 1
defined a new -> variable : 1
a new variable -> named : 1
new variable named -> of : 1
variable named of -> the : 2
named of the -> data : 1
named of the -> type : 1
of the data -> this : 1
of the data -> should : 1
of the data -> we : 1
of the data -> int : 1
of the data -> quite : 1
of the data -> on : 1
of the data -> structure : 1
of the data -> types : 1
the data this -> variable : 1
data this variable -> is : 1
this variable is -> used : 1
this variable is -> set : 1
variable is used -> to : 1
is used to -> store : 6
is used to -> create : 1
is used to -> write : 1
is used to -> build : 1
is used to -> arrange : 1
is used to -> look : 1
is used to -> access : 1
is used to -> inform : 1
is used to -> point : 1
is used to -> fetch : 4
is used to -> iterate : 4
is used to -> find : 4
is used to -> reconstruct : 1
is used to -> detect : 1
is used to -> get : 1
is used to -> insert : 4
is used to -> remove : 2
is used to -> retrieve : 1
is used to -> construct : 1
is used to -> character : 1
is used to -> print : 1
is used to -> track : 1
is used to -> check : 1
is used to -> delete : 1
is used to -> tell : 1
used to store -> data : 1
used to store -> a : 4
used to store -> two : 1
used to store -> objects : 1
used to store -> information : 1
data in an -> integer : 1
in an integer -> data : 1
an integer data -> format : 1
integer data format -> will : 1
data format will -> talk : 1
format will talk -> about : 1
will talk about -> variables : 1
talk about variables -> and : 1
about variables and -> data : 1
variables and data -> types : 1
and data types -> in : 1
and data types -> to : 1
and data types -> have : 1
data types in -> the : 2
data types in -> we : 1
data types in -> can : 1
types in the -> upcoming : 1
types in the -> previous : 1
in the upcoming -> we : 2
in the upcoming -> since : 1
in the upcoming -> is : 1
in the upcoming -> are : 2
in the upcoming -> balanced : 1
in the upcoming -> and : 1
in the upcoming -> data : 1
in the upcoming -> have : 1
the upcoming we -> save : 1
the upcoming we -> can : 1
the upcoming we -> are : 1
upcoming we save -> the : 1
we save the -> preceding : 1
save the preceding -> code : 1
preceding code as -> we : 1
preceding code as -> traverse : 1
code as we -> can : 1
can compile it -> using : 1
compile it using -> the : 1
it using the -> following : 1
using the following -> we : 1
using the following -> new : 1
using the following -> code : 3
using the following -> interpolation : 1
using the following -> a : 1
the following we -> then : 1
the following we -> also : 1
the following we -> can : 5
the following we -> get : 1
the following we -> move : 1
the following we -> have : 2
the following we -> choose : 1
the following we -> count : 1
the following we -> populate : 1
the following we -> discussed : 1
the following we -> ask : 1
following we then -> run : 1
we then run -> the : 1
then run the -> we : 1
run the we -> will : 16
run the we -> can : 1
will get the -> following : 12
will get the -> same : 4
will get the -> decimal : 1
will get the -> right : 1
will get the -> left : 1
will get the -> value : 1
get the following -> output : 7
get the following -> console : 1
get the following -> we : 3
get the following -> to : 1
get the following -> have : 1
get the following -> this : 1
the following output -> on : 16
the following output -> console : 1
the following output -> will : 2
the following output -> if : 1
the following output -> occurs : 1
the following output -> in : 1
following output on -> the : 14
following output on -> our : 2
output on the -> console : 1
output on the -> to : 1
output on the -> sort : 1
output on the -> screen : 2
output on the -> quick : 1
output on the -> the : 3
output on the -> we : 4
output on the -> quite : 1
output on the -> this : 1
output on the -> algorithm : 1
the console chose -> the : 1
console chose the -> number : 1
chose the number -> in : 1
the number in -> this : 1
number in this -> we : 2
this we know -> that : 1
we know that -> to : 1
know that to -> print : 1
that to print -> text : 1
to print text -> to : 1
print text to -> the : 1
text to the -> we : 1
the we use -> the : 4
the we use -> linear : 1
we use the -> and : 1
we use the -> in : 1
we use the -> conditional : 1
we use the -> there : 1
we use the -> loop : 1
we use the -> instances : 1
we use the -> method : 1
we use the -> following : 4
use the and -> to : 1
use the and -> keywords : 1
the and to -> give : 1
and to give -> some : 1
to give some -> inputs : 1
give some inputs -> to : 1
some inputs to -> the : 1
inputs to the -> we : 1
use the in -> the : 1
the in the -> we : 2
the in the -> the : 1
the in the -> preceding : 1
the in the -> following : 1
the in the -> separate : 1
the in the -> as : 1
in the we -> also : 2
in the we -> can : 5
in the we -> will : 3
in the we -> print : 1
in the we -> are : 2
in the we -> need : 2
in the we -> invoked : 1
in the we -> pass : 1
in the we -> have : 1
in the we -> apply : 2
the we also -> at : 1
the we also -> initialize : 1
the we also -> need : 3
the we also -> create : 1
we also at -> the : 1
also at the -> beginning : 1
at the beginning -> of : 11
the beginning of -> the : 7
the beginning of -> code : 2
the beginning of -> and : 1
the beginning of -> this : 4
beginning of the -> used : 1
beginning of the -> we : 1
beginning of the -> linked : 1
beginning of the -> then : 1
beginning of the -> code : 1
beginning of the -> vector : 1
beginning of the -> so : 1
beginning of the -> function : 1
the used to -> tell : 1
used to tell -> the : 2
to tell the -> compiler : 2
to tell the -> user : 1
tell the compiler -> where : 1
tell the compiler -> that : 1
the compiler where -> to : 1
compiler where to -> find : 1
where to find -> the : 1
to find the -> implementation : 1
to find the -> two : 1
to find the -> element : 1
to find the -> lowest : 1
to find the -> correct : 1
to find the -> time : 1
to find the -> exp : 1
to find the -> index : 1
to find the -> position : 7
to find the -> middle : 1
to find the -> shown : 1
to find the -> value : 2
to find the -> searched : 1
to find the -> character : 1
to find the -> minimum : 3
to find the -> successor : 3
to find the -> maximum : 2
to find the -> predecessor : 1
to find the -> height : 1
to find the -> next : 3
to find the -> largest : 1
find the implementation -> of : 1
the implementation of -> commands : 1
the implementation of -> that : 1
the implementation of -> an : 1
the implementation of -> the : 20
the implementation of -> this : 6
the implementation of -> and : 1
the implementation of -> operation : 16
the implementation of -> us : 1
the implementation of -> in : 1
the implementation of -> data : 1
the implementation of -> should : 3
the implementation of -> interpolation : 1
the implementation of -> jump : 1
the implementation of -> will : 1
the implementation of -> function : 1
the implementation of -> we : 1
the implementation of -> heap : 1
the implementation of -> maximum : 1
the implementation of -> operations : 1
the implementation of -> algorithms : 1
the implementation of -> code : 1
implementation of commands -> since : 1
of commands since -> their : 1
commands since their -> implementation : 1
since their implementation -> is : 1
their implementation is -> stated : 1
implementation is stated -> in : 1
is stated in -> the : 1
stated in the -> header : 1
stated in the -> illustration : 1
stated in the -> we : 1
in the header -> at : 1
the header at -> the : 1
header at the -> very : 1
header at the -> beginning : 2
at the very -> beginning : 1
the very beginning -> of : 1
very beginning of -> the : 1
of the we -> can : 5
of the we -> discussed : 1
of the we -> need : 1
of the we -> start : 1
of the we -> also : 2
of the we -> set : 1
of the we -> use : 1
of the we -> just : 1
of the we -> are : 2
of the we -> then : 2
of the we -> will : 1
of the we -> have : 1
can see that -> the : 5
can see that -> we : 3
can see that -> each : 1
can see that -> an : 1
can see that -> its : 1
can see that -> and : 1
can see that -> selection : 1
see that the -> line : 1
see that the -> or : 1
see that the -> first : 1
see that the -> binary : 1
see that the -> time : 1
see that the -> minimum : 1
see that the -> order : 1
that the line -> begins : 1
that the line -> be : 1
the line begins -> with : 1
line begins with -> double : 1
begins with double -> slashes : 1
with double slashes -> this : 1
double slashes this -> means : 1
slashes this means -> that : 1
this means that -> the : 2
means that the -> line : 1
means that the -> memory : 1
means that the -> is : 1
means that the -> key : 1
the line be -> considered : 1
line be considered -> as : 1
be considered as -> so : 1
considered as so -> the : 1
as so the -> compiler : 1
so the compiler -> will : 1
the compiler will -> ignore : 1
the compiler will -> after : 1
the compiler will -> compile : 1
compiler will ignore -> used : 1
will ignore used -> to : 1
ignore used to -> comment : 1
used to comment -> or : 1
to comment or -> mark : 1
comment or mark -> an : 1
or mark an -> action : 1
mark an action -> in : 1
an action in -> the : 1
action in the -> code : 1
so that other -> programmers : 1
so that other -> potential : 1
that other programmers -> can : 1
other programmers can -> understand : 1
programmers can understand -> our : 1
can understand our -> code : 1
understand our code -> development : 1
our code development -> experience : 1
experience with we -> have : 1
with we have -> been : 1
with we have -> to : 1
we have been -> able : 1
have been able -> to : 1
been able to -> create : 1
able to create -> a : 1
to create a -> compile : 1
to create a -> defining : 1
to create a -> collection : 1
to create a -> as : 1
to create a -> single : 1
to create a -> new : 5
to create a -> deque : 1
to create a -> variable : 1
to create a -> string : 2
to create a -> code : 1
to create a -> helper : 1
to create a -> balanced : 1
to create a -> priority : 1
create a compile -> the : 1
a compile the -> and : 1
compile the and -> run : 1
the and run -> the : 1
and run the -> it : 1
and run the -> code : 1
and run the -> preceding : 20
and run the -> we : 16
and run the -> a : 1
and run the -> the : 1
and run the -> project : 1
run the it -> will : 1
the it will -> be : 1
the it will -> no : 1
the it will -> simply : 1
it will be -> boring : 1
it will be -> or : 1
it will be -> automatically : 1
it will be -> printed : 1
it will be -> displayed : 1
it will be -> similar : 2
it will be -> isswapped : 1
it will be -> ignored : 1
it will be -> in : 2
it will be -> to : 2
it will be -> stored : 1
will be boring -> if : 1
be boring if -> we : 1
boring if we -> have : 1
if we have -> to : 5
we have to -> compile : 1
we have to -> define : 3
we have to -> decide : 1
we have to -> choose : 2
we have to -> cast : 1
we have to -> ensure : 3
we have to -> remember : 1
we have to -> traverse : 6
we have to -> stand : 1
we have to -> set : 1
we have to -> swap : 2
we have to -> iterate : 7
we have to -> divide : 2
we have to -> sort : 1
we have to -> pass : 1
we have to -> calculate : 1
we have to -> reserve : 1
we have to -> create : 1
we have to -> compare : 2
we have to -> read : 1
we have to -> add : 1
we have to -> put : 1
we have to -> find : 5
we have to -> prior : 1
we have to -> search : 2
we have to -> connect : 1
we have to -> point : 1
we have to -> know : 1
we have to -> rotate : 1
we have to -> maintain : 2
we have to -> instantiate : 1
we have to -> provide : 1
we have to -> resize : 1
we have to -> use : 1
we have to -> instance : 1
have to compile -> the : 1
to compile the -> code : 1
using the command -> prompt : 1
the command prompt -> and : 1
command prompt and -> then : 1
prompt and then -> execute : 1
and then execute -> the : 1
then execute the -> code : 1
execute the code -> to : 1
the code to -> ease : 1
the code to -> consume : 1
the code to -> apply : 1
the code to -> check : 1
the code to -> generate : 1
the code to -> invoke : 1
the code to -> the : 1
the code to -> compute : 1
code to ease -> our : 1
to ease our -> development : 1
ease our development -> we : 1
our development we -> will : 1
development we will -> use : 1
we will use -> an : 1
we will use -> the : 5
we will use -> to : 1
we will use -> loop : 1
we will use -> and : 1
we will use -> phone : 1
we will use -> in : 1
we will use -> this : 1
will use an -> development : 1
use an development -> so : 1
an development so -> that : 1
development so that -> we : 1
so that we -> can : 8
so that we -> use : 1
so that we -> have : 2
so that we -> end : 1
that we can -> compile : 1
that we can -> manipulate : 1
that we can -> store : 1
that we can -> access : 1
that we can -> pass : 1
that we can -> find : 3
that we can -> have : 1
that we can -> use : 2
that we can -> only : 1
that we can -> also : 1
that we can -> reconstruct : 1
that we can -> get : 1
that we can -> track : 1
that we can -> add : 1
can compile and -> run : 2
compile and run -> the : 2
run the code -> with : 1
run the code -> and : 1
code with just -> a : 1
with just a -> you : 1
just a you -> can : 1
a you can -> use : 1
you can use -> any : 1
can use any -> ide : 1
use any ide -> available : 1
any ide available -> on : 1
ide available on -> the : 1
available on the -> either : 1
on the either -> paid : 1
the either paid -> or : 1
either paid or -> i : 1
paid or i -> personally : 1
or i personally -> chose : 1
i personally chose -> ide : 1
personally chose ide -> since : 1
chose ide since -> open : 1
ide since open -> and : 1
since open and -> so : 1
open and so -> it : 1
and so it -> can : 1
and so it -> should : 1
so it can -> run : 1
so it can -> only : 1
so it can -> be : 1
it can run -> on : 1
can run on -> and : 1
run on and -> macos : 1
on and macos -> you : 1
and macos you -> can : 1
macos you can -> find : 1
you can find -> the : 1
you can find -> on : 1
can find the -> information : 1
can find the -> code : 1
can find the -> searched : 1
can find the -> nearest : 1
can find the -> following : 1
find the information -> about : 1
the information about -> this : 1
information about this -> such : 1
about this such -> as : 1
this such as -> how : 1
such as how -> to : 1
as how to -> and : 1
how to and -> use : 1
how to and -> solve : 1
to and use -> it : 1
and use it -> on : 1
use it on -> its : 1
it on its -> official : 1
on its official -> website : 1
its official website -> we : 1
official website we -> can : 1
website we can -> automate : 1
we can automate -> the : 1
can automate the -> compiling : 1
automate the compiling -> process : 2
the compiling process -> using : 1
the compiling process -> since : 1
compiling process using -> a : 1
process using a -> toolchain : 1
using a toolchain -> such : 1
a toolchain such -> as : 1
toolchain such as -> make : 1
such as make -> or : 1
as make or -> this : 1
make or this -> needs : 1
or this needs -> further : 1
this needs further -> and : 1
needs further and -> since : 1
further and since -> this : 1
and since this -> book : 1
since this book -> is : 1
book is intended -> to : 1
is intended to -> discuss : 1
intended to discuss -> data : 1
to discuss data -> structures : 1
to discuss data -> this : 1
discuss data structures -> and : 1
and the toolchain -> explanation : 1
the toolchain explanation -> will : 1
toolchain explanation will -> increase : 1
explanation will increase -> the : 1
will increase the -> total : 1
increase the total -> pages : 1
the total pages -> of : 1
total pages of -> the : 1
pages of the -> and : 1
of the and -> so : 1
of the and -> methods : 1
of the and -> operations : 1
of the and -> can : 1
of the and -> is : 1
the and so -> we : 1
we will not -> discuss : 1
will not discuss -> this : 1
not discuss this -> in : 1
discuss this in -> this : 3
this in this -> the : 1
this in this -> as : 1
this in this -> in : 1
this in this -> we : 1
in this the -> use : 1
in this the -> axis : 1
in this the -> stack : 1
in this the -> time : 1
in this the -> data : 1
in this the -> insert : 1
this the use -> of : 1
use of ide -> is : 1
of ide is -> the : 1
ide is the -> best : 1
is the best -> solution : 2
is the best -> sorting : 1
is the best -> if : 2
is the best -> since : 1
is the best -> algorithm : 1
the best solution -> to : 1
the best solution -> for : 1
best solution to -> automate : 1
solution to automate -> the : 1
to automate the -> compiling : 1
compiling process since -> it : 1
process since it -> actually : 1
since it actually -> accesses : 1
it actually accesses -> the : 1
actually accesses the -> toolchain : 1
accesses the toolchain -> as : 1
the toolchain as -> installing : 1
toolchain as installing -> we : 1
as installing we -> can : 1
installing we can -> create : 1
we can create -> a : 3
we can create -> the : 4
we can create -> another : 2
we can create -> and : 1
we can create -> operation : 1
on the then -> clicking : 1
the then clicking -> and : 1
then clicking and -> then : 1
clicking and then -> selecting : 1
and then selecting -> a : 1
then selecting a -> new : 1
selecting a new -> window : 1
a new window -> will : 1
new window will -> appear : 1
window will appear -> and : 1
will appear and -> we : 1
appear and we -> can : 1
and we can -> select : 1
and we can -> use : 1
and we can -> apply : 1
and we can -> solve : 1
and we can -> simply : 1
and we can -> see : 1
and we can -> collect : 1
we can select -> the : 1
can select the -> desired : 1
select the desired -> project : 1
the desired project -> for : 1
desired project for -> most : 1
project for most -> examples : 1
for most examples -> in : 1
most examples in -> this : 1
examples in this -> we : 1
will use the -> as : 1
will use the -> keyword : 1
will use the -> function : 1
will use the -> implementation : 1
will use the -> quick : 1
will use the -> preceding : 1
use the as -> the : 1
the as the -> project : 1
the as the -> on : 1
as the project -> press : 1
the project press -> the : 1
project press the -> button : 1
press the button -> to : 1
the button to -> the : 1
button to the -> upcoming : 1
button to the -> operation : 1
to the upcoming -> we : 1
upcoming we can -> specify : 1
upcoming we can -> see : 1
we can specify -> the : 1
specify the which -> is : 1
the which is -> and : 1
the which is -> shown : 1
the which is -> when : 1
the which is -> named : 1
the which is -> used : 1
the which is -> removed : 1
the which is -> to : 1
the which is -> we : 1
the which is -> comparing : 1
the which is -> the : 3
the which is -> since : 1
which is and -> then : 1
which is and -> please : 1
which is and -> convert : 1
is and then -> define : 1
is and then -> compare : 1
and then define -> the : 1
then define the -> project : 1
define the project -> name : 1
the project name -> and : 1
project name and -> destination : 1
name and destination -> location : 1
and destination location -> named : 1
destination location named -> the : 1
location named the -> after : 1
named the after -> finishing : 1
the after finishing -> the : 1
after finishing the -> we : 1
project with a -> file : 1
with a file -> containing : 1
a file containing -> the : 1
file containing the -> following : 1
containing the following -> using : 1
containing the following -> we : 1
containing the following -> screenshot : 1
the following using -> namespace : 1
following using namespace -> int : 1
using namespace int -> cout : 1
using namespace int -> main : 4
namespace int cout -> return : 1
int cout return -> we : 1
cout return we -> can : 10
cout return we -> have : 1
cout return we -> run : 1
cout return we -> build : 4
preceding code by -> just : 2
preceding code by -> adding : 1
code by just -> clicking : 1
code by just -> replacing : 1
by just clicking -> the : 1
just clicking the -> and : 1
clicking the and -> option : 1
the and option -> under : 1
and option under -> the : 1
option under the -> the : 1
under the the -> following : 1
the the following -> console : 1
the the following -> output : 1
the the following -> is : 2
the the following -> code : 1
the following console -> window : 1
the following console -> the : 1
the following console -> advanced : 1
the following console -> we : 1
the following console -> ensure : 1
following console window -> will : 1
console window will -> the : 1
window will the -> preceding : 1
will the preceding -> we : 1
preceding we see -> the : 1
preceding we see -> that : 1
we see the -> console : 1
see the console -> using : 1
the console using -> the : 1
console using the -> line : 1
using the line -> after : 1
the line after -> the : 1
line after the -> use : 1
after the use -> of : 1
use of this -> line : 1
of this line -> of : 1
this line of -> code : 1
line of code -> is : 1
code is to -> tell : 1
is to tell -> the : 1
the compiler that -> the : 1
compiler that the -> code : 1
that the code -> uses : 1
that the code -> will : 1
that the code -> we : 1
the code uses -> a : 1
code uses a -> named : 1
uses a named -> as : 1
a named as -> a : 1
named as a -> we : 1
as a we -> need : 1
as a we -> can : 1
a we need -> to : 3
need to specify -> the : 1
to specify the -> in : 1
specify the in -> every : 1
the in every -> invocation : 1
in every invocation -> of : 1
every invocation of -> and : 1
invocation of and -> the : 1
of and the -> code : 1
of and the -> parent : 1
and the code -> should : 2
the code should -> be : 25
code should be -> simpler : 1
code should be -> as : 27
should be simpler -> than : 1
be simpler than -> the : 1
simpler than the -> variables : 1
than the variables -> using : 1
data the previous -> sample : 1
data the previous -> we : 1
the previous sample -> we : 1
previous sample we -> dealt : 1
sample we dealt -> with : 1
we dealt with -> the : 1
dealt with the -> variable : 1
with the variable -> placeholder : 1
the variable placeholder -> is : 1
variable placeholder is -> used : 1
placeholder is used -> to : 1
to store a -> data : 1
to store a -> single : 1
to store a -> number : 1
to store a -> whole : 1
to store a -> bunch : 1
to store a -> character : 1
to store a -> string : 1
to store a -> collection : 1
to store a -> new : 1
store a data -> so : 1
a data so -> that : 1
data so that -> we : 1
we can manipulate -> the : 1
can manipulate the -> data : 1
manipulate the data -> in : 1
the data in -> the : 2
the data in -> this : 1
the data in -> small : 1
the data in -> cell : 1
data in the -> variable : 1
data in the -> if : 2
data in the -> best : 1
data in the -> hash : 1
in the variable -> for : 1
the variable for -> various : 1
variable for various -> in : 1
for various in -> we : 1
various in we -> have : 1
in we have -> to : 1
in we have -> a : 1
in we have -> looked : 1
have to define -> a : 1
have to define -> the : 2
to define a -> variable : 1
to define a -> they : 1
define a variable -> to : 1
define a variable -> with : 1
define a variable -> as : 1
a variable to -> be : 1
a variable to -> ensure : 1
variable to be -> of : 1
to be of -> a : 1
be of a -> specific : 1
of a specific -> data : 1
of a specific -> the : 1
a specific data -> type : 1
specific data type -> so : 1
data type so -> it : 1
type so it -> can : 1
it can only -> store : 1
it can only -> perform : 1
can only store -> the : 2
only store the -> specific : 1
only store the -> data : 1
store the specific -> type : 1
the specific type -> of : 1
specific type of -> variable : 1
type of variable -> that : 1
of variable that -> was : 1
variable that was -> defined : 1
that was defined -> here : 1
was defined here -> is : 1
defined here is -> a : 1
here is a -> list : 2
is a list -> of : 2
is a list -> with : 2
a list of -> the : 1
a list of -> phone : 1
list of the -> fundamental : 1
of the fundamental -> data : 1
fundamental data types -> in : 2
types in we -> used : 1
in we used -> some : 1
we used some -> of : 1
used some of -> these : 1
some of these -> data : 1
of these data -> types : 1
these data types -> in : 1
in the previous -> data : 1
in the previous -> this : 1
in the previous -> we : 1
in the previous -> similar : 1
in the previous -> cout : 1
in the previous -> by : 1
in the previous -> the : 1
the previous data -> type : 1
previous data type -> which : 1
data type which -> is : 4
data type which -> groups : 1
type which is -> used : 4
which is used -> to : 6
to store two -> pieces : 1
store two pieces -> of : 1
two pieces of -> conditional : 1
pieces of conditional -> data : 1
of conditional data -> data : 1
conditional data data -> type : 1
data data type -> which : 1
data data type -> is : 1
store a single -> ascii : 1
a single ascii -> point : 1
single ascii point -> data : 1
ascii point data -> type : 1
point data type -> which : 1
store a number -> with : 1
a number with -> a : 1
number with a -> data : 1
with a data -> type : 2
store a whole -> data : 1
a whole data -> which : 1
whole data which -> is : 1
which is basically -> a : 1
is basically a -> keyword : 1
is basically a -> but : 1
basically a keyword -> to : 1
a keyword to -> use : 1
keyword to use -> as : 1
to use as -> a : 1
use as a -> placeholder : 1
as a placeholder -> where : 1
a placeholder where -> you : 1
placeholder where you -> would : 1
where you would -> normally : 1
you would normally -> put : 1
would normally put -> a : 1
normally put a -> data : 1
put a data -> type : 1
type to represent -> are : 1
to represent are -> two : 1
represent are two -> ways : 1
are two ways -> to : 2
two ways to -> create : 1
two ways to -> enqueue : 1
ways to create -> a : 2
create a defining -> it : 1
a defining it -> or : 1
defining it or -> by : 1
it or by -> initializing : 1
or by initializing -> defining : 1
by initializing defining -> a : 1
initializing defining a -> variable : 1
defining a variable -> will : 1
a variable will -> create : 1
variable will create -> a : 2
will create a -> variable : 2
will create a -> new : 5
will create a -> operation : 1
will create a -> tree : 1
create a variable -> without : 1
create a variable -> and : 1
create a variable -> containing : 1
a variable without -> deciding : 1
variable without deciding -> upon : 1
without deciding upon -> its : 1
deciding upon its -> initial : 1
upon its initial -> the : 1
its initial the -> initializing : 1
initial the initializing -> variable : 1
the initializing variable -> will : 1
initializing variable will -> create : 1
a variable and -> store : 1
variable and store -> an : 1
and store an -> initial : 1
store an initial -> value : 1
an initial value -> in : 1
initial value in -> here : 1
value in here -> is : 1
in here is -> the : 2
here is the -> code : 5
here is the -> snippet : 1
here is the -> curve : 1
here is the -> file : 1
here is the -> declaration : 1
here is the -> implementation : 2
here is the -> is : 3
is the code -> snippet : 4
is the code -> should : 1
is the code -> to : 4
is the code -> for : 1
is the code -> that : 1
is the code -> string : 1
is the code -> will : 1
the code snippet -> for : 2
the code snippet -> of : 1
the code snippet -> that : 1
the code snippet -> to : 1
the code snippet -> will : 1
the code snippet -> is : 1
code snippet for -> how : 1
code snippet for -> data : 1
snippet for how -> we : 1
for how we -> can : 1
how we can -> define : 1
we can define -> int : 1
can define int -> long : 1
define int long -> long : 1
int long long -> bool : 3
long long bool -> here : 1
long long bool -> copy : 1
long long bool -> cannot : 1
long bool here -> is : 1
bool here is -> the : 1
is the snippet -> of : 1
the snippet of -> how : 1
snippet of how -> initializing : 1
of how initializing -> variables : 1
how initializing variables -> int : 1
initializing variables int -> ivar : 1
variables int ivar -> cvar : 1
int ivar cvar -> long : 1
ivar cvar long -> long : 1
cvar long long -> llvar : 1
long long llvar -> bool : 1
long llvar bool -> bovar : 1
llvar bool bovar -> preceding : 1
bool bovar preceding -> code : 1
bovar preceding code -> snippet : 1
preceding code snippet -> is : 3
preceding code snippet -> will : 2
preceding code snippet -> as : 1
code snippet is -> the : 1
code snippet is -> executed : 1
code snippet is -> similar : 1
code snippet is -> used : 1
code snippet is -> as : 1
snippet is the -> way : 1
is the way -> we : 1
the way we -> initialize : 1
the way we -> calculate : 1
way we initialize -> the : 1
we initialize the -> variables : 1
we initialize the -> pointer : 1
initialize the variables -> using : 1
variables using the -> in : 1
using the in -> this : 1
using the in -> the : 1
the in this -> we : 3
the in this -> use : 1
the in this -> be : 1
this we assign -> a : 1
we assign a -> value : 1
assign a value -> to : 2
to the variable -> using : 1
the variable using -> an : 1
variable using an -> equals : 1
using an equals -> sign : 1
an equals sign -> symbol : 1
equals sign symbol -> another : 1
sign symbol another -> technique : 1
symbol another technique -> we : 1
another technique we -> can : 1
technique we can -> use : 1
we can use -> to : 3
we can use -> the : 20
we can use -> assignment : 1
we can use -> a : 3
we can use -> all : 1
we can use -> in : 1
we can use -> method : 2
we can use -> for : 1
we can use -> data : 1
we can use -> class : 1
we can use -> it : 1
we can use -> this : 1
we can use -> and : 1
we can use -> we : 1
we can use -> an : 1
we can use -> separate : 1
we can use -> priority : 1
can use to -> initialize : 1
can use to -> store : 1
can use to -> solve : 1
use to initialize -> is : 1
to initialize is -> the : 1
initialize is the -> in : 1
is the in -> this : 1
in this use -> parenthesis : 1
this use parenthesis -> to : 1
use parenthesis to -> assign : 1
parenthesis to assign -> a : 1
to assign a -> value : 1
to the following -> code : 1
to the following -> the : 1
to the following -> is : 2
to the following -> data : 2
to the following -> out : 1
to the following -> with : 1
following code snippet -> uses : 2
following code snippet -> is : 1
code snippet uses -> this : 1
code snippet uses -> the : 1
snippet uses this -> technique : 1
uses this technique -> the : 1
this technique the -> int : 1
technique the int -> long : 2
the int long -> long : 2
long bool copy -> initialization : 1
bool copy initialization -> and : 1
copy initialization and -> direct : 1
initialization and direct -> initialization : 1
and direct initialization -> we : 1
direct initialization we -> can : 1
initialization we can -> initialization : 1
we can initialization -> by : 1
can initialization by -> utilizing : 1
initialization by utilizing -> curly : 1
by utilizing curly -> following : 1
utilizing curly following -> code : 1
curly following code -> snippet : 1
snippet uses the -> technique : 1
uses the technique -> the : 1
the technique the -> int : 1
long bool cannot -> define : 1
bool cannot define -> a : 1
cannot define a -> variable : 1
a variable with -> a : 1
variable with a -> data : 1
data type such -> as : 2
type such as -> when : 1
type such as -> and : 1
such as when -> we : 1
as when we -> define : 1
when we define -> a : 1
when we define -> the : 1
we define a -> we : 1
we define a -> variable : 1
define a we -> have : 1
a we have -> to : 3
a we have -> a : 2
a we have -> learned : 1
have to decide -> what : 1
to decide what -> data : 1
decide what data -> type : 1
what data type -> we : 1
type we are -> choosing : 1
we are choosing -> so : 1
are choosing so -> that : 1
choosing so that -> we : 1
we can store -> the : 1
we can store -> phone : 1
can store the -> data : 1
can store the -> selected : 1
can store the -> key : 1
store the data -> in : 2
store the data -> type : 1
store the data -> to : 1
in the if -> we : 2
in the if -> the : 1
the if we -> define : 1
the if we -> are : 1
the if we -> insert : 1
the if we -> find : 2
the if we -> try : 2
the if we -> need : 1
the if we -> can : 1
the if we -> have : 1
the if we -> reach : 1
if we define -> a : 1
a variable as -> it : 1
variable as it -> means : 1
as it means -> that : 1
it means that -> we : 3
it means that -> the : 2
it means that -> pattern : 1
it means that -> total : 1
means that we -> plan : 1
means that we -> have : 1
means that we -> start : 1
means that we -> will : 1
that we plan -> to : 1
we plan to -> store : 1
plan to store -> anything : 1
to store anything -> in : 1
store anything in -> the : 1
anything in the -> the : 1
the the flow -> of : 1
the we discussed -> the : 1
the we discussed -> we : 1
we discussed the -> program : 1
we discussed the -> linked : 1
we discussed the -> complexity : 1
we discussed the -> time : 1
we discussed the -> hierarchical : 2
discussed the program -> is : 1
the program is -> run : 1
program is run -> from : 1
is run from -> the : 1
run from the -> function : 1
the function by -> executing : 1
function by executing -> each : 1
by executing each -> statement : 1
executing each statement -> one : 1
each statement one -> by : 1
statement one by -> one : 1
one by one -> from : 1
one by one -> on : 1
by one from -> the : 1
one from the -> beginning : 1
from the beginning -> to : 1
from the beginning -> until : 2
from the beginning -> the : 1
the beginning to -> the : 1
beginning to the -> we : 1
we can change -> this : 1
we can change -> these : 1
can change this -> path : 1
change this path -> control : 1
this path control -> there : 1
path control there -> are : 1
control there are -> control : 1
there are control -> statements : 1
are control statements -> in : 1
control statements in -> but : 1
statements in but -> we : 1
in but we -> are : 1
but we are -> only : 1
we are only -> going : 1
are only going -> to : 1
only going to -> discuss : 1
to discuss some -> of : 1
discuss some of -> since : 1
some of since -> these : 1
of since these -> are : 1
since these are -> the : 1
these are the -> ones : 1
these are the -> topics : 1
these are the -> steps : 1
are the ones -> that : 1
the ones that -> are : 1
ones that are -> going : 1
that are going -> to : 1
going to be -> used : 1
going to be -> displaying : 1
to be used -> often : 1
to be used -> by : 1
be used often -> in : 1
used often in -> algorithm : 1
often in algorithm -> of : 1
in algorithm of -> the : 1
algorithm of the -> things : 1
of the things -> that : 1
the things that -> can : 1
things that can -> make : 1
that can make -> the : 1
can make the -> flow : 1
can make the -> following : 1
can make the -> for : 1
make the flow -> of : 1
flow of a -> program : 1
a program change -> is : 1
program change is -> a : 1
change is a -> conditional : 1
is a conditional -> by : 1
a conditional by -> using : 1
conditional by using -> this : 1
by using this -> only : 1
by using this -> new : 1
by using this -> is : 1
by using this -> we : 1
using this only -> the : 1
this only the -> line : 1
only the line -> in : 1
the line in -> the : 1
line in the -> condition : 1
in the condition -> will : 1
the condition will -> be : 1
condition will be -> we : 1
will be we -> can : 1
will be we -> will : 1
be we can -> use : 1
be we can -> go : 1
be we can -> extract : 1
can use the -> and : 1
can use the -> keyword : 1
can use the -> following : 9
can use the -> which : 2
can use the -> recursive : 1
can use the -> method : 1
can use the -> square : 1
can use the -> data : 2
can use the -> cout : 1
can use the -> interpolation : 1
the and keywords -> to : 1
and keywords to -> apply : 1
keywords to apply -> this : 1
to apply this -> modify : 1
apply this modify -> our : 1
this modify our -> previous : 1
modify our previous -> code : 1
our previous code -> so : 1
previous code so -> that : 1
that it uses -> the : 1
it uses the -> conditional : 1
it uses the -> lower : 1
it uses the -> best : 1
uses the conditional -> the : 1
the conditional the -> program : 1
conditional the program -> will : 1
program will only -> decide : 1
will only decide -> whether : 1
only decide whether -> the : 1
decide whether the -> input : 2
decide whether the -> expression : 1
whether the input -> number : 2
the input number -> is : 2
input number is -> greater : 2
number is greater -> than : 5
is greater than -> or : 2
is greater than -> in : 1
is greater than -> the : 8
is greater than -> cout : 1
is greater than -> my : 1
is greater than -> that : 1
is greater than -> we : 1
is greater than -> now : 1
is greater than -> it : 1
is greater than -> reset : 1
is greater than -> after : 1
is greater than -> invoke : 1
is greater than -> node : 1
greater than or -> the : 1
greater than or -> by : 1
than or the -> code : 1
or the code -> should : 1
should be as -> using : 2
should be as -> we : 5
should be as -> follows : 2
should be as -> to : 1
should be as -> namespace : 6
should be as -> the : 1
should be as -> shown : 3
should be as -> check : 3
should be as -> int : 8
should be as -> looping : 1
should be as -> file : 9
should be as -> if : 3
should be as -> t : 1
should be as -> do : 5
should be as -> remove : 1
should be as -> initialize : 2
should be as -> return : 1
should be as -> create : 3
should be as -> just : 2
should be as -> complete : 1
should be as -> is : 1
should be as -> sort : 1
should be as -> node : 1
should be as -> cout : 1
should be as -> string : 3
should be as -> stop : 1
should be as -> add : 1
should be as -> get : 1
be as using -> namespace : 2
as using namespace -> int : 3
namespace int main -> int : 4
main int cout -> enter : 2
main int cout -> cout : 2
int cout enter -> an : 2
int cout enter -> a : 1
cout enter an -> integer : 2
an integer cin -> cout : 2
integer cin cout -> value : 2
cin cout value -> you : 2
cout value you -> entered : 2
entered is cout -> than : 2
is cout than -> cout : 1
is cout than -> else : 1
cout than cout -> or : 1
cout than cout -> to : 1
cout than cout -> another : 1
than cout or -> less : 1
cout or less -> than : 1
or less than -> cout : 1
or less than -> is : 1
less than cout -> return : 1
than cout return -> we : 1
we can we -> have : 1
can we have -> a : 1
have a pair -> of : 1
a pair of -> and : 1
pair of and -> keywords : 1
pair of and -> to : 1
of and keywords -> that : 1
and keywords that -> will : 1
keywords that will -> decide : 1
that will decide -> whether : 1
will decide whether -> the : 1
than or by -> examining : 1
or by examining -> the : 1
by examining the -> preceding : 1
examining the preceding -> only : 1
the preceding only -> one : 1
preceding only one -> statement : 1
only one statement -> will : 1
one statement will -> be : 1
statement will be -> executed : 1
will be executed -> inside : 1
be executed inside -> the : 1
executed inside the -> conditional : 1
inside the conditional -> either : 1
the conditional either -> the : 1
conditional either the -> statement : 1
either the statement -> under : 1
the statement under -> the : 2
statement under the -> keyword : 1
statement under the -> we : 1
under the keyword -> or : 1
the keyword or -> the : 1
keyword or the -> statement : 1
or the statement -> under : 1
under the we -> build : 1
the we build -> and : 1
we build and -> run : 38
build and run -> the : 38
preceding we will -> see : 3
preceding we will -> get : 4
preceding we will -> be : 1
preceding we will -> invoke : 1
preceding we will -> have : 2
we will see -> the : 7
we will see -> that : 2
will see the -> following : 7
see the following -> console : 2
see the following -> curve : 1
see the following -> two : 1
see the following -> do : 1
see the following -> window : 1
see the following -> possibility : 1
see the following -> output : 9
see the following -> got : 1
see the following -> is : 1
see the following -> the : 3
see the following -> we : 1
see the following -> diagram : 1
see the following -> preceding : 1
see the following -> mathematical : 1
see the following -> add : 1
see the following -> table : 1
see the following -> compare : 1
see the following -> function : 1
following console the -> preceding : 1
console the preceding -> console : 1
the preceding console -> we : 1
preceding console we -> can : 1
console we can -> see : 1
console we can -> say : 1
that the or -> less : 1
the or less -> than : 1
less than is -> not : 1
than is not -> executed : 1
is not executed -> at : 1
not executed at -> all : 1
executed at all -> since : 1
at all since -> we : 1
all since we -> have : 1
since we have -> input : 1
since we have -> defined : 1
since we have -> successfully : 1
since we have -> moved : 1
since we have -> restricted : 1
since we have -> the : 1
since we have -> any : 1
since we have -> to : 9
since we have -> tracked : 1
we have input -> a : 1
have input a -> number : 1
input a number -> that : 1
a number that -> is : 1
number that is -> greater : 1
that is greater -> than : 2
greater than in -> the : 1
than in the -> we : 1
than in the -> removing : 1
we can have -> more : 1
we can have -> for : 1
we can have -> the : 2
we can have -> time : 2
we can have -> a : 2
we can have -> three : 1
can have more -> than : 1
have more than -> two : 1
more than two -> conditional : 2
more than two -> and : 1
than two conditional -> we : 1
than two conditional -> as : 1
two conditional we -> can : 1
conditional we can -> refactor : 1
we can refactor -> the : 2
we can refactor -> our : 1
we can refactor -> operation : 1
can refactor the -> preceding : 2
refactor the preceding -> code : 3
refactor the preceding -> data : 1
refactor the preceding -> adt : 1
preceding code so -> that : 1
that it has -> more : 1
that it has -> to : 2
that it has -> are : 1
it has more -> than : 1
it has more -> flexibility : 1
has more than -> two : 1
two conditional as -> using : 1
conditional as using -> namespace : 1
cout than else -> cout : 1
than else cout -> than : 1
else cout than -> cout : 1
than cout to -> cout : 1
cout to cout -> return : 1
to cout return -> conditional : 1
cout return conditional -> statement : 1
return conditional statement -> keyword : 1
conditional statement keyword -> is : 1
statement keyword is -> before : 1
keyword is before -> we : 1
is before we -> discuss : 1
before we discuss -> this : 1
we discuss this -> create : 1
discuss this create -> a : 1
this create a -> simple : 1
create a simple -> calculator : 1
create a simple -> game : 1
a simple calculator -> program : 1
simple calculator program -> that : 1
calculator program that -> can : 1
program that can -> add : 1
that can add -> two : 1
can add two -> it : 1
add two it -> should : 1
two it should -> also : 1
it should also -> be : 1
should also be -> capable : 1
also be capable -> of : 1
be capable of -> performing : 1
capable of performing -> the : 1
of performing the -> and : 1
of performing the -> operation : 1
performing the and -> divide : 1
the and divide -> we : 1
and divide we -> will : 1
divide we will -> use : 1
use the keyword -> the : 1
use the keyword -> as : 1
the keyword the -> code : 1
keyword the code -> should : 1
int cout cout -> cout : 2
cout cout cout -> cout : 7
cout cout cout -> enter : 2
cout cout cout -> than : 1
cout cout cout -> ptr : 1
cout cout cout -> endl : 2
cout cout cout -> return : 3
cout cout cout -> in : 1
cout cout cout -> of : 1
cout cout cout -> the : 1
cout cout enter -> the : 2
cout enter the -> operation : 2
cout enter the -> first : 2
cout enter the -> second : 2
enter the operation -> cin : 2
the operation cin -> cout : 2
operation cin cout -> enter : 2
cin cout enter -> the : 4
enter the first -> cin : 2
the first cin -> cout : 2
first cin cout -> enter : 2
enter the second -> cin : 2
the second cin -> cout : 2
second cin cout -> result : 2
cin cout result -> of : 2
cout result of -> cout : 1
cout result of -> case : 1
result of cout -> a : 1
of cout a -> b : 1
cout a b -> is : 8
cout a b -> cout : 1
a b is -> a : 8
b is a -> else : 3
b is a -> cout : 2
b is a -> case : 3
is a else -> cout : 3
a else cout -> a : 3
else cout a -> b : 3
is a cout -> return : 2
is a cout -> of : 1
is a cout -> table : 1
a cout return -> we : 1
a cout return -> if : 1
a cout return -> can : 1
preceding we have -> four : 1
preceding we have -> the : 1
preceding we have -> a : 5
preceding we have -> an : 1
preceding we have -> storage : 1
preceding we have -> two : 2
preceding we have -> understood : 1
preceding we have -> to : 2
preceding we have -> phone : 1
preceding we have -> ten : 1
preceding we have -> put : 1
we have four -> options : 1
have four options -> that : 1
four options that -> we : 1
options that we -> have : 1
that we have -> to : 3
that we have -> two : 2
that we have -> got : 1
that we have -> discussed : 1
that we have -> searched : 1
that we have -> successfully : 1
that we have -> seen : 1
have to choose -> we : 1
have to choose -> between : 1
to choose we -> use : 1
choose we use -> the : 1
use the conditional -> statement : 1
the conditional statement -> for : 1
conditional statement for -> this : 1
statement for this -> the : 1
for this the -> output : 1
this the output -> of : 1
the output of -> the : 4
output of the -> preceding : 3
output of the -> since : 1
of the preceding -> code : 5
of the preceding -> program : 1
of the preceding -> algorithm : 1
of the preceding -> function : 2
of the preceding -> notation : 1
of the preceding -> three : 1
of the preceding -> calculation : 2
of the preceding -> pieces : 1
of the preceding -> functions : 1
of the preceding -> priority : 1
preceding code should -> be : 2
be as we -> can : 4
be as we -> pick : 1
be as we -> need : 1
be as we -> dequeue : 1
the keyword as -> the : 1
keyword as the -> code : 1
as the code -> should : 1
be as follows -> after : 1
be as follows -> when : 1
be as follows -> if : 1
as follows after -> being : 1
follows after being -> using : 1
after being using -> namespace : 1
being using namespace -> int : 1
result of case -> cout : 1
of case cout -> a : 1
case cout a -> b : 4
is a case -> cout : 3
a case cout -> a : 3
cout return if -> we : 5
return if we -> run : 2
return if we -> build : 4
return if we -> cannot : 1
get the same -> output : 4
the same output -> compared : 1
the same output -> as : 2
the same output -> again : 1
same output compared -> with : 1
output compared with -> the : 1
compared with the -> are : 1
with the are -> several : 1
the are several -> loop : 1
are several loop -> statements : 1
several loop statements -> in : 1
loop statements in -> and : 1
statements in and -> they : 1
in and they -> the : 1
in and they -> return : 1
and they the -> loop : 1
they the loop -> is : 1
the loop is -> usually : 1
the loop is -> the : 1
the loop is -> similar : 1
the loop is -> valued : 1
loop is usually -> used : 1
is usually used -> when : 1
is usually used -> to : 3
is usually used -> in : 1
usually used when -> how : 1
used when how -> many : 1
when how many -> iterations : 1
how many iterations -> we : 1
many iterations we -> whereas : 1
iterations we whereas -> and : 1
we whereas and -> will : 1
whereas and will -> iterate : 1
and will iterate -> until : 1
will iterate until -> the : 1
iterate until the -> desired : 1
iterate until the -> i : 1
iterate until the -> end : 1
until the desired -> condition : 1
the desired condition -> is : 1
desired condition is -> we : 1
condition is we -> are : 1
is we are -> going : 2
going to generate -> ten : 1
to generate ten -> random : 1
generate ten random -> numbers : 1
ten random numbers -> between : 1
random numbers between -> to : 1
numbers between to -> the : 1
between to the -> loop : 1
to the loop -> is : 1
loop is the -> best : 1
best solution for -> it : 1
solution for it -> since : 1
for it since -> we : 1
it since we -> know : 1
since we know -> how : 1
we know how -> many : 2
know how many -> numbers : 1
know how many -> elements : 1
how many numbers -> we : 1
many numbers we -> need : 1
numbers we need -> to : 1
need to for -> this : 1
to for this -> we : 1
for this we -> can : 4
for this we -> are : 1
this we can -> create : 3
this we can -> use : 3
this we can -> omit : 1
this we can -> reconstruct : 1
this we can -> get : 1
this we can -> have : 1
can create the -> following : 3
can create the -> code : 1
create the following -> namespace : 1
create the following -> binary : 1
create the following -> class : 1
the following namespace -> int : 1
following namespace int -> static : 1
namespace int static -> used : 3
int static used -> for : 4
static used for -> so : 4
used for so -> we : 4
for so we -> only : 4
so we only -> calculate : 4
we only calculate -> this : 4
only calculate this -> value : 4
calculate this value -> static : 4
this value static -> const : 4
value static const -> double : 4
static const double -> fraction : 4
const double fraction -> evenly : 4
double fraction evenly -> distribute : 4
fraction evenly distribute -> the : 4
evenly distribute the -> random : 4
distribute the random -> across : 4
the random across -> our : 4
random across our -> return : 4
across our return -> min : 4
our return min -> min : 4
return min min -> set : 4
min min set -> initial : 4
min set initial -> seed : 4
set initial seed -> value : 5
initial seed value -> to : 5
seed value to -> system : 5
value to system -> loop : 1
value to system -> computer : 1
value to system -> char : 1
value to system -> generate : 1
value to system -> cards : 1
to system loop -> ten : 1
system loop ten -> for : 1
loop ten for -> i : 1
ten for i -> cout : 1
for i cout -> cout : 13
i cout cout -> return : 10
i cout cout -> manipulate : 1
i cout cout -> endl : 3
i cout cout -> sort : 7
i cout cout -> we : 1
cout cout return -> the : 2
cout cout return -> if : 2
cout cout return -> we : 8
cout cout return -> preceding : 3
cout return the -> preceding : 3
preceding we create -> another : 1
we create another -> function : 1
create another function -> that : 1
create another function -> as : 1
another function that -> the : 1
function that the -> code : 1
the code will -> invoke : 1
the code will -> be : 6
code will invoke -> the : 1
will invoke the -> function : 1
will invoke the -> and : 1
will invoke the -> operation : 1
invoke the function -> ten : 1
the function ten -> times : 1
function ten times -> using : 1
ten times using -> the : 1
times using the -> as : 1
using the as -> we : 1
using the as -> extract : 1
the as we -> can : 2
the as we -> discussed : 2
the as we -> did : 1
the preceding the -> output : 1
the preceding the -> program : 1
the preceding the -> variable : 1
the preceding the -> preceding : 1
the preceding the -> class : 1
the preceding the -> symbol : 1
the preceding the -> curve : 1
the preceding the -> complexity : 1
the preceding the -> operation : 1
the preceding the -> first : 1
the preceding the -> last : 1
the preceding the -> declaration : 1
the preceding the -> implementation : 1
the preceding the -> will : 1
the preceding the -> complete : 2
the preceding the -> time : 1
the preceding the -> function : 1
preceding the output -> we : 1
the output we -> will : 2
output we will -> get : 1
output we will -> have : 1
will get should -> be : 1
get should be -> as : 1
be as to -> the : 1
as to the -> others : 1
to the others -> loop : 1
the others loop -> statements : 1
others loop statements -> which : 1
loop statements which -> we : 1
statements which we -> discussed : 1
which we discussed -> which : 1
which we discussed -> we : 1
we discussed which -> and : 1
discussed which and -> they : 1
which and they -> are : 1
and they are -> quite : 1
and they are -> defined : 1
and they are -> and : 3
and they are -> the : 1
and they are -> element : 1
and they are -> as : 3
and they are -> relatively : 1
they are quite -> similar : 1
are quite similar -> based : 1
quite similar based -> on : 1
similar based on -> their : 1
based on their -> the : 1
on their the -> difference : 1
their the difference -> is : 1
the difference is -> when : 1
the difference is -> that : 1
difference is when -> we : 1
is when we -> use : 1
is when we -> search : 1
is when we -> accidentally : 1
is when we -> compare : 1
is when we -> insert : 2
when we use -> the : 2
use the there -> is : 1
the there is -> a : 1
the there is -> also : 1
is a chance -> the : 1
a chance the -> statement : 1
chance the statement -> inside : 1
the statement inside -> the : 2
statement inside the -> loop : 2
inside the loop -> scope : 3
the loop scope -> is : 2
the loop scope -> must : 1
the loop scope -> be : 1
loop scope is -> not : 1
loop scope is -> since : 1
scope is not -> whereas : 1
is not whereas -> the : 1
not whereas the -> statement : 1
whereas the statement -> in : 1
the statement in -> the : 1
statement in the -> loop : 1
statement in the -> preceding : 1
in the loop -> scope : 1
in the loop -> is : 1
in the loop -> the : 1
loop scope must -> be : 1
scope must be -> run : 1
must be run -> at : 1
be run at -> least : 1
run at least -> once : 1
at least once -> in : 1
least once in -> the : 1
once in the -> create : 1
once in the -> so : 1
in the create -> a : 1
the create a -> simple : 1
the create a -> good : 1
the create a -> template : 1
a simple game -> using : 1
simple game using -> those : 1
game using those -> loop : 1
using those loop -> the : 1
those loop the -> computer : 1
loop the computer -> will : 1
the computer will -> generate : 1
computer will generate -> a : 1
will generate a -> number : 1
will generate a -> random : 1
generate a number -> between : 1
a number between -> to : 3
number between to -> and : 1
number between to -> cin : 1
number between to -> cout : 1
between to and -> then : 1
to and then -> the : 1
and then the -> user : 1
and then the -> program : 1
and then the -> player : 1
and then the -> pivot : 1
then the user -> has : 1
the user has -> to : 2
user has to -> guess : 1
user has to -> choose : 1
has to guess -> what : 1
has to guess -> the : 1
to guess what -> number : 1
guess what number -> has : 1
what number has -> been : 1
number has been -> generated : 1
has been generated -> by : 1
been generated by -> the : 1
generated by the -> the : 1
by the the -> program : 1
program will give -> a : 1
will give a -> hint : 1
give a hint -> to : 1
a hint to -> the : 1
hint to the -> user : 1
to the user -> just : 1
the user just -> after : 1
user just after -> she : 1
just after she -> or : 1
after she or -> he : 1
she or he -> inputs : 1
or he inputs -> the : 1
he inputs the -> guessed : 1
inputs the guessed -> it : 1
the guessed it -> will : 1
guessed it will -> tell : 1
it will tell -> the : 1
will tell the -> user : 1
tell the user -> whether : 1
tell the user -> if : 1
the user whether -> the : 1
user whether the -> number : 1
whether the number -> is : 1
the number is -> greater : 2
the number is -> we : 1
greater than the -> number : 1
greater than the -> reference : 1
greater than the -> biggest : 1
greater than the -> value : 1
greater than the -> searched : 3
greater than the -> cannot : 1
greater than the -> the : 1
greater than the -> if : 1
greater than the -> currently : 1
greater than the -> total : 1
than the number -> or : 1
the number or -> lower : 1
number or lower -> than : 1
or lower than -> if : 1
lower than if -> the : 1
than if the -> guessed : 1
if the guessed -> number : 2
the guessed number -> matches : 2
guessed number matches -> with : 2
number matches with -> the : 2
matches with the -> the : 1
matches with the -> so : 1
matches with the -> given : 1
with the the -> game : 1
with the the -> templates : 1
the the game -> is : 1
the game is -> the : 1
game is the -> code : 1
be as namespace -> int : 2
be as namespace -> string : 4
as namespace int -> static : 2
to system computer -> generate : 1
system computer generate -> random : 1
computer generate random -> between : 1
generate random between -> to : 1
random between to -> int : 1
between to int -> computernumber : 1
to int computernumber -> user : 1
int computernumber user -> inputs : 1
computernumber user inputs -> a : 1
user inputs a -> guessed : 1
inputs a guessed -> int : 1
a guessed int -> cout : 1
guessed int cout -> enter : 1
cout enter a -> number : 1
enter a number -> between : 1
between to cin -> run : 1
to cin run -> the : 1
cin run the -> while : 1
run the while -> cout : 1
the while cout -> usernumber : 1
while cout usernumber -> is : 1
cout usernumber is -> cout : 1
usernumber is cout -> cout : 1
is cout cout -> cout : 4
is cout cout -> of : 2
is cout cout -> a : 1
cout cout than -> cout : 1
than cout another -> cin : 1
cout another cin -> cout : 1
another cin cout -> got : 1
cin cout got -> the : 1
cout got the -> return : 1
got the return -> the : 1
the return the -> preceding : 1
the return the -> is : 1
preceding we can -> see : 7
preceding we can -> say : 2
preceding we can -> calculate : 1
preceding we can -> access : 1
preceding we can -> rearrange : 1
preceding we can -> skip : 1
preceding we can -> use : 4
preceding we can -> easily : 1
preceding we can -> remove : 1
preceding we can -> invoke : 1
preceding we can -> initialize : 1
preceding we can -> get : 1
see that we -> have : 1
see that we -> can : 2
we have two -> and : 1
we have two -> methods : 1
we have two -> the : 2
we have two -> last : 1
we have two -> sorted : 1
we have two -> unsorted : 1
have two and -> handling : 1
two and handling -> the : 1
and handling the -> number : 1
handling the number -> that : 1
the number that -> will : 1
number that will -> be : 1
will be there -> will : 1
be there will -> be : 1
there will be -> a : 2
there will be -> some : 1
will be a -> probability : 1
will be a -> is : 1
will be a -> balanced : 2
will be a -> child : 1
will be a -> possibility : 1
will be a -> hashtable : 1
be a probability -> is : 1
a probability is -> equal : 1
probability is equal -> if : 1
is equal if -> this : 1
equal if this -> the : 1
if this the -> statement : 1
this the statement -> inside : 1
loop scope be -> executed : 1
scope be executed -> at : 1
be executed at -> the : 1
executed at the -> flow : 1
at the flow -> of : 1
the preceding program -> can : 1
preceding program can -> be : 1
program can be -> seen : 1
can be seen -> in : 2
be seen in -> the : 2
seen in the -> following : 2
in the following -> output : 1
in the following -> code : 5
in the following -> chapters : 1
in the following -> move : 1
in the following -> int : 1
in the following -> suppose : 1
in the following -> chapter : 1
in the following -> we : 8
in the following -> ptr : 1
in the following -> create : 1
in the following -> list : 1
in the following -> can : 2
in the following -> stores : 1
in the following -> of : 2
in the following -> do : 1
in the following -> designing : 1
in the following -> on : 1
in the following -> design : 1
in the following -> cout : 3
following output console -> have : 1
output console have -> successfully : 1
console have successfully -> implemented : 1
have successfully implemented -> the : 1
successfully implemented the -> loop : 1
implemented the loop -> in : 1
the loop in -> the : 1
loop in the -> preceding : 1
the preceding although -> the : 1
preceding although the -> loop : 1
although the loop -> is : 1
loop is similar -> to : 1
is similar to -> the : 5
is similar to -> an : 1
is similar to -> we : 1
is similar to -> singly : 1
is similar to -> which : 1
is similar to -> operation : 4
is similar to -> in : 1
is similar to -> a : 3
is similar to -> data : 1
is similar to -> merge : 1
is similar to -> arranging : 1
is similar to -> inserting : 1
similar to the -> as : 1
similar to the -> following : 2
similar to the -> we : 4
similar to the -> a : 1
similar to the -> list : 1
similar to the -> implementation : 3
similar to the -> declaration : 1
similar to the -> selection : 1
similar to the -> binary : 2
similar to the -> operation : 1
similar to the -> and : 1
similar to the -> one : 1
to the as -> we : 1
as we discussed -> we : 4
as we discussed -> as : 1
as we discussed -> the : 1
as we discussed -> when : 1
as we discussed -> in : 1
as we discussed -> and : 1
as we discussed -> will : 1
we discussed we -> cannot : 1
we discussed we -> have : 3
we discussed we -> can : 2
we discussed we -> just : 1
we discussed we -> will : 1
discussed we cannot -> refactor : 1
we cannot refactor -> the : 1
cannot refactor the -> preceding : 1
by just replacing -> the : 1
just replacing the -> loop : 1
replacing the loop -> with : 1
the loop with -> the : 1
loop with the -> we : 1
with the we -> can : 2
can create another -> game : 1
can create another -> function : 1
create another game -> as : 1
another game as -> our : 1
game as our -> example : 1
as our example -> in : 1
our example in -> implementing : 1
example in implementing -> the : 1
in implementing the -> now : 1
implementing the now -> the : 1
the now the -> user : 1
now the user -> has : 1
has to choose -> a : 1
to choose a -> number : 1
choose a number -> and : 1
a number and -> then : 1
number and then -> the : 1
then the program -> will : 1
program will guess -> the : 1
will guess the -> code : 1
guess the code -> should : 1
to system char -> int : 1
system char int -> imin : 1
char int imin -> int : 1
int imin int -> imax : 1
imin int imax -> int : 1
int imax int -> menu : 1
imax int menu -> cout : 1
int menu cout -> a : 1
menu cout a -> number : 1
cout a number -> between : 1
between to cout -> guess : 1
to cout guess -> your : 1
cout guess your -> cout : 1
cout guess your -> number : 1
guess your cout -> l : 1
your cout l -> and : 1
cout l and -> enter : 1
l and enter -> if : 1
and enter if -> my : 2
and enter if -> successfully : 1
enter if my -> guessed : 2
if my guessed -> number : 2
my guessed number -> is : 2
guessed number is -> lower : 1
guessed number is -> greater : 1
number is lower -> than : 1
is lower than -> cout : 1
is lower than -> that : 1
is lower than -> the : 7
is lower than -> will : 1
is lower than -> so : 2
is lower than -> array : 2
is lower than -> or : 1
is lower than -> after : 1
lower than cout -> cout : 1
than cout cout -> g : 1
than cout cout -> y : 1
cout cout g -> and : 1
cout g and -> enter : 1
g and enter -> if : 1
greater than cout -> cout : 1
cout cout y -> and : 1
cout y and -> enter : 1
y and enter -> if : 1
enter if successfully -> guessed : 1
if successfully guessed -> your : 1
successfully guessed your -> cout : 1
guessed your cout -> endl : 1
your cout endl -> run : 1
cout endl run -> the : 1
endl run the -> iguess : 1
run the iguess -> cout : 1
the iguess cout -> guess : 1
iguess cout guess -> your : 1
guess your number -> is : 1
your number is -> iguess : 1
number is iguess -> cout : 1
is iguess cout -> do : 1
iguess cout do -> you : 1
cout do you -> cin : 1
do you cin -> userchar : 1
you cin userchar -> imin : 1
cin userchar imin -> iguess : 1
userchar imin iguess -> else : 1
imin iguess else -> userchar : 1
iguess else userchar -> imax : 1
else userchar imax -> iguess : 1
userchar imax iguess -> userchar : 1
imax iguess userchar -> cout : 1
iguess userchar cout -> got : 1
userchar cout got -> your : 1
cout got your -> return : 1
got your return -> we : 1
your return we -> can : 1
preceding the program -> has : 1
the program has -> to : 1
program has to -> guess : 1
to guess the -> number : 1
guess the number -> at : 1
the number at -> least : 1
number at least -> and : 1
at least and -> if : 1
least and if -> the : 1
and if the -> guessed : 1
with the so -> that : 1
with the so -> the : 1
the so that -> we : 1
the so that -> the : 1
that we use -> the : 1
use the loop -> when : 1
the loop when -> we : 1
loop when we -> build : 1
when we build -> and : 2
will have an -> output : 1
will have an -> array : 1
will have an -> time : 1
have an output -> similar : 1
an output similar -> to : 1
output similar to -> the : 1
the following the -> preceding : 2
the following the -> reference : 1
the following the -> word : 1
the following the -> tree : 1
the following the -> successor : 1
the following the -> minimum : 1
following the preceding -> i : 1
following the preceding -> we : 1
the preceding i -> chose : 1
preceding i chose -> number : 1
i chose number -> the : 1
chose number the -> program : 1
number the program -> then : 1
the program then -> guessed : 1
program then guessed -> since : 1
then guessed since -> the : 1
guessed since the -> number : 1
since the number -> is : 1
greater than my -> the : 1
than my the -> program : 1
my the program -> guessed : 1
the program guessed -> another : 1
program guessed another -> which : 1
guessed another which -> is : 1
another which is -> it : 1
another which is -> called : 1
which is it -> then : 1
is it then -> guessed : 1
it then guessed -> another : 1
then guessed another -> number : 1
guessed another number -> based : 1
another number based -> on : 1
number based on -> the : 1
on the hint -> from : 1
the hint from -> me : 1
hint from me -> until : 1
from me until -> it : 1
me until it -> found : 1
until it found -> the : 1
it found the -> correct : 1
found the correct -> the : 1
the correct the -> program : 1
the correct the -> array : 1
the correct the -> code : 1
correct the program -> will : 1
program will leave -> the : 1
will leave the -> loop : 1
leave the loop -> if : 1
the loop if -> the : 1
loop if the -> user : 1
loop if the -> reference : 1
if the user -> as : 1
if the user -> removes : 1
the user as -> we : 1
user as we -> can : 1
preceding the variable -> capability : 1
advanced data have -> discussed : 1
data have discussed -> the : 1
have discussed the -> fundamental : 1
discussed the fundamental -> data : 1
fundamental data type -> in : 1
type in the -> previous : 1
type in the -> angle : 1
type in the -> standard : 1
the previous this -> data : 1
previous this data -> type : 1
this data type -> is : 2
this data type -> instead : 1
this data type -> will : 1
data type is -> used : 1
data type is -> similar : 3
data type is -> also : 1
data type is -> completely : 1
data type is -> the : 1
type is used -> in : 1
is used in -> defining : 1
used in defining -> or : 1
in defining or -> initializing : 1
defining or initializing -> a : 1
or initializing a -> variable : 1
initializing a variable -> to : 1
variable to ensure -> that : 1
to ensure that -> the : 8
to ensure that -> we : 2
to ensure that -> has : 1
to ensure that -> it : 1
ensure that the -> variable : 1
ensure that the -> data : 1
ensure that the -> passed : 1
ensure that the -> stack : 1
ensure that the -> open : 1
ensure that the -> code : 1
ensure that the -> queue : 1
ensure that the -> pivot : 1
ensure that the -> list : 1
ensure that the -> pattern : 1
ensure that the -> height : 1
ensure that the -> tree : 1
that the variable -> can : 1
the variable can -> store : 1
variable can store -> the : 1
store the selected -> data : 1
the selected data -> there : 1
selected data there -> are : 1
there are other -> data : 1
are other data -> types : 1
other data types -> that : 1
data types that -> can : 1
data types that -> have : 1
types that can -> be : 1
that can be -> used : 1
that can be -> grouped : 1
that can be -> performed : 1
that can be -> accessed : 1
that can be -> understood : 1
that can be -> given : 1
can be used -> to : 2
can be used -> by : 1
can be used -> as : 3
be used to -> define : 1
be used to -> indicate : 1
used to define -> a : 1
define a they -> are : 1
a they are -> and : 1
are and is -> a : 1
and is a -> data : 1
data type that -> has : 1
data type that -> is : 3
data type that -> we : 1
data type that -> stores : 1
type that has -> several : 1
that has several -> possible : 1
has several possible -> values : 1
several possible values -> and : 1
possible values and -> they : 1
values and they -> are : 1
they are defined -> as : 1
are defined as -> the : 1
defined as the -> constant : 1
as the constant -> which : 1
the constant which -> is : 1
constant which is -> called : 1
which is called -> it : 1
which is called -> an : 1
which is called -> a : 1
is called it -> is : 1
called it is -> used : 1
it is used -> to : 1
used to create -> a : 1
create a collection -> of : 1
collection of suppose -> we : 1
of suppose we -> want : 1
of suppose we -> have : 1
suppose we want -> to : 3
we want to -> develop : 1
we want to -> apply : 1
we want to -> create : 2
we want to -> deal : 1
we want to -> insert : 2
we want to -> access : 1
we want to -> search : 1
we want to -> find : 2
we want to -> ensure : 1
we want to -> remove : 2
we want to -> store : 1
we want to -> use : 1
we want to -> replace : 1
want to develop -> a : 1
to develop a -> card : 1
develop a card -> game : 1
a card game -> using : 1
card game using -> as : 1
game using as -> we : 1
using as we -> a : 1
using as we -> can : 1
using as we -> discussed : 1
as we a -> deck : 1
we a deck -> of : 1
a deck of -> playing : 1
deck of playing -> cards : 1
of playing cards -> contains : 1
playing cards contains -> which : 1
cards contains which -> consists : 1
contains which consists -> of : 1
which consists of -> four : 1
which consists of -> reference : 1
consists of four -> suits : 1
of four suits -> and : 1
four suits and -> with : 1
suits and with -> elements : 1
and with elements -> in : 1
with elements in -> each : 1
elements in each -> we : 1
in each we -> can : 1
each we can -> notate : 1
we can notate -> the : 1
we can notate -> it : 2
can notate the -> card : 1
notate the card -> deck : 1
the card deck -> as : 1
card deck as -> we : 1
deck as we -> want : 1
as we want -> to : 1
want to apply -> the : 1
to apply the -> preceding : 2
apply the preceding -> data : 1
apply the preceding -> we : 1
the preceding data -> types : 1
the preceding data -> type : 1
preceding data types -> and : 1
data types and -> we : 1
data types and -> advanced : 1
data types and -> depend : 1
types and we -> can : 1
use the following -> variable : 1
use the following -> represent : 1
use the following -> method : 1
use the following -> cout : 4
use the following -> function : 3
use the following -> code : 1
use the following -> formula : 3
the following variable -> suit : 1
following variable suit -> element : 1
variable suit element -> enums : 1
suit element enums -> always : 1
element enums always -> contain : 1
enums always contain -> integer : 1
always contain integer -> the : 1
contain integer the -> string : 1
integer the string -> we : 1
the string we -> put : 1
the string we -> start : 1
string we put -> in : 1
we put in -> the : 1
put in the -> element : 1
in the element -> is : 1
the element is -> the : 1
element is the -> constant : 1
element is the -> node : 2
element is the -> the : 1
element is the -> complexity : 1
is the constant -> name : 1
the constant name -> the : 1
constant name the -> first : 1
name the first -> element : 1
the first element -> holds : 1
the first element -> of : 7
the first element -> address : 1
the first element -> will : 1
the first element -> since : 1
the first element -> inserted : 1
the first element -> that : 1
the first element -> in : 1
first element holds -> a : 1
element holds a -> value : 1
holds a value -> of : 1
a value of -> except : 1
a value of -> a : 1
value of except -> we : 1
of except we -> define : 1
except we define -> another : 1
we define another -> value : 1
define another value -> the : 1
another value the -> next : 1
value the next -> elements : 1
the next elements -> are : 1
next elements are -> in : 1
elements are in -> an : 1
are in an -> incremental : 1
in an incremental -> number : 1
an incremental number -> from : 1
incremental number from -> the : 1
number from the -> first : 1
number from the -> top : 1
number from the -> right : 1
from the first -> for : 1
the first for -> our : 1
the first for -> it : 1
first for our -> preceding : 1
for our preceding -> is : 1
our preceding is -> equal : 1
preceding is equal -> to : 1
is equal to -> and : 1
equal to and -> the : 1
to and the -> and : 1
and the and -> are : 1
the and are -> and : 1
the and are -> also : 1
and are and -> create : 1
are and create -> a : 1
and create a -> program : 1
create a program -> that : 1
a program that -> will : 1
program that will -> generate : 1
that will generate -> a : 1
generate a random -> we : 1
a random we -> can : 1
random we can -> borrow : 1
we can borrow -> the : 1
can borrow the -> function : 1
borrow the function -> from : 1
the function from -> our : 1
function from our -> previous : 1
from our previous -> the : 1
our previous the -> following : 1
previous the following -> is : 1
the following is -> the : 16
the following is -> lower : 1
the following is -> compared : 1
the following is -> an : 1
the following is -> a : 1
following is the -> complete : 2
following is the -> code : 6
following is the -> window : 1
following is the -> declaration : 2
following is the -> method : 1
following is the -> function : 1
following is the -> implementation : 2
following is the -> maximum : 1
following is the -> output : 1
following is the -> solution : 1
is the complete -> code : 2
the complete code -> for : 4
complete code for -> this : 1
complete code for -> creating : 1
complete code for -> searching : 2
code for this -> namespace : 1
code for this -> template : 1
code for this -> operation : 1
code for this -> scenario : 1
code for this -> sorting : 2
for this namespace -> string : 1
this namespace string -> case : 1
namespace string case -> s : 1
string case s -> case : 1
case s case -> s : 3
s case s -> case : 2
s case s -> return : 1
case s return -> string : 1
s return string -> case : 1
return string case -> e : 1
string case e -> case : 1
case e case -> e : 12
e case e -> case : 11
e case e -> return : 1
case e return -> int : 1
e return int -> static : 1
return int static -> used : 1
to system generate -> random : 1
system generate random -> suit : 1
generate random suit -> and : 1
random suit and -> element : 1
suit and element -> int : 1
and element int -> isuit : 1
element int isuit -> int : 1
int isuit int -> ielement : 1
isuit int ielement -> cardsuits : 1
int ielement cardsuits -> suit : 1
ielement cardsuits suit -> cardelements : 1
cardsuits suit cardelements -> element : 1
suit cardelements element -> cout : 1
cardelements element cout -> card : 1
element cout card -> is : 1
cout card is -> cout : 2
card is cout -> cout : 2
cout cout of -> return : 2
cout cout of -> cout : 1
cout of return -> the : 1
cout of return -> we : 1
of return the -> preceding : 1
of return the -> index : 1
of return the -> implementation : 1
we can access -> the : 3
we can access -> each : 3
we can access -> an : 1
can access the -> data : 1
can access the -> element : 1
can access the -> value : 1
can access the -> last : 1
access the data -> by : 1
the data by -> using : 1
the data by -> which : 1
data by using -> an : 1
data by using -> the : 1
by using an -> integer : 1
by using an -> we : 1
by using an -> array : 1
using an integer -> we : 1
an integer we -> have : 1
integer we have -> to : 1
have to cast -> the : 1
to cast the -> value : 1
cast the value -> so : 1
the value so -> that : 1
value so that -> it : 1
it can fit -> the : 1
can fit the -> data : 1
fit the data -> by : 1
data by which -> is : 1
by which is -> shown : 1
which is shown -> as : 3
which is shown -> in : 1
is shown as -> isuit : 1
is shown as -> dog : 1
is shown as -> namespace : 1
shown as isuit -> ielement : 1
as isuit ielement -> suit : 1
isuit ielement suit -> element : 1
ielement suit element -> we : 1
suit element we -> build : 1
element we build -> and : 1
following console advanced -> data : 1
console advanced data -> type : 1
advanced data type -> we : 1
type we have -> in : 1
we have in -> is : 1
we have in -> the : 1
we have in -> a : 1
have in is -> it : 1
in is it -> aggregate : 1
is it aggregate -> data : 1
it aggregate data -> type : 1
aggregate data type -> which : 1
type which groups -> multiple : 1
which groups multiple -> individual : 1
groups multiple individual -> variables : 1
multiple individual variables -> from : 1
individual variables from -> the : 1
variables from the -> preceding : 1
from the preceding -> we : 1
from the preceding -> code : 1
from the preceding -> if : 2
we have the -> and : 1
we have the -> nested : 1
we have the -> array : 1
we have the -> pointer : 1
we have the -> following : 2
we have the -> formula : 1
we have the -> hash : 1
we have the -> function : 1
have the and -> variables : 1
have the and -> of : 1
the and variables -> that : 1
and variables that -> can : 1
variables that can -> be : 1
can be grouped -> as : 1
be grouped as -> cardsuits : 1
grouped as cardsuits -> cardelements : 1
as cardsuits cardelements -> we : 1
cardsuits cardelements we -> add : 1
cardelements we add -> the : 1
we add the -> preceding : 1
we add the -> pair : 1
add the preceding -> to : 1
add the preceding -> code : 1
the preceding to -> our : 1
the preceding to -> search : 1
preceding to our -> preceding : 1
to our preceding -> we : 1
to our preceding -> the : 1
our preceding we -> just : 1
our preceding we -> can : 4
our preceding we -> have : 1
preceding we just -> need : 1
we just need -> to : 27
we just need -> a : 1
we just need -> two : 1
just need to -> refactor : 1
just need to -> know : 1
just need to -> create : 2
just need to -> point : 1
just need to -> pick : 1
just need to -> frequency : 1
just need to -> prepare : 1
just need to -> sort : 1
just need to -> pass : 1
just need to -> return : 5
just need to -> iterate : 1
just need to -> compare : 1
just need to -> go : 3
just need to -> remove : 1
just need to -> fetch : 1
just need to -> define : 1
just need to -> check : 2
just need to -> delete : 1
just need to -> replace : 1
need to refactor -> the : 3
to refactor the -> function : 2
to refactor the -> preceding : 1
to refactor the -> inserting : 1
refactor the function -> as : 1
refactor the function -> to : 1
the function as -> set : 1
the function as -> return : 1
function as set -> initial : 1
as set initial -> seed : 1
to system cards -> cout : 1
system cards cout -> card : 1
cards cout card -> is : 1
of return we -> run : 1
of return we -> can : 1
return we run -> the : 2
preceding code can -> find : 1
preceding code can -> be : 6
code can find -> the : 1
the code as -> in : 1
the code as -> new : 1
the code as -> hashtable : 1
code as in -> the : 1
as in the -> we : 1
as in the -> following : 1
same output as -> abstract : 1
same output as -> we : 1
same output as -> the : 1
output as abstract -> data : 1
as abstract data -> data : 1
abstract data data -> is : 1
data data is -> a : 1
data is a -> type : 1
is a type -> that : 1
is a type -> the : 1
a type that -> consists : 1
type that consists -> of : 1
that consists of -> a : 1
consists of a -> collection : 1
of a collection -> of : 1
collection of data -> and : 1
of data and -> associated : 1
data and associated -> operations : 1
and associated operations -> for : 1
associated operations for -> manipulating : 1
operations for manipulating -> the : 1
for manipulating the -> the : 1
manipulating the the -> adt : 1
the the adt -> will : 1
the adt will -> only : 1
adt will only -> mention : 1
will only mention -> the : 1
only mention the -> list : 1
mention the list -> of : 1
the list of -> operations : 1
the list of -> items : 1
list of operations -> that : 1
of operations that -> can : 1
operations that can -> be : 1
can be performed -> but : 1
be performed but -> not : 1
performed but not -> the : 1
but not the -> the : 1
not the the -> implementation : 1
the the implementation -> itself : 1
the the implementation -> should : 2
the the implementation -> of : 5
the implementation itself -> is : 1
implementation itself is -> which : 1
itself is which -> is : 1
is which is -> why : 1
is which is -> lower : 1
is which is -> the : 2
which is why -> called : 1
is why called -> we : 1
why called we -> have : 1
called we have -> a : 1
have a dvd -> player : 1
a dvd player -> we : 1
dvd player we -> usually : 1
player we usually -> use : 1
we usually use -> in : 1
usually use in -> our : 1
use in our -> pleasure : 1
in our pleasure -> the : 1
our pleasure the -> player : 1
pleasure the player -> has : 1
the player has -> a : 1
player has a -> remote : 1
has a remote -> the : 1
a remote the -> remote : 1
remote the remote -> control : 1
the remote control -> has : 1
remote control has -> various : 1
control has various -> menu : 1
has various menu -> buttons : 1
various menu buttons -> such : 1
menu buttons such -> as : 1
buttons such as -> ejecting : 1
such as ejecting -> the : 1
as ejecting the -> playing : 1
ejecting the playing -> or : 1
the playing or -> stopping : 1
playing or stopping -> the : 1
or stopping the -> increasing : 1
stopping the increasing -> or : 1
the increasing or -> decreasing : 1
increasing or decreasing -> and : 1
or decreasing and -> so : 1
decreasing and so -> similar : 1
and so similar -> to : 2
so similar to -> the : 1
so similar to -> air : 1
the we have -> any : 1
the we have -> to : 2
the we have -> an : 1
the we have -> the : 1
we have any -> idea : 1
we have any -> elements : 1
have any idea -> how : 1
any idea how -> the : 1
idea how the -> player : 1
how the player -> increases : 1
the player increases -> the : 1
player increases the -> volume : 1
increases the volume -> when : 1
the volume when -> we : 1
volume when we -> press : 1
when we press -> the : 1
we press the -> increasing : 1
press the increasing -> button : 1
the increasing button -> to : 1
increasing button to -> the : 1
to the operation -> in : 2
to the operation -> does : 1
the operation in -> we : 1
the operation in -> the : 4
the operation in -> they : 1
the operation in -> data : 1
operation in we -> just : 1
in we just -> call : 1
we just call -> the : 1
just call the -> increasing : 1
call the increasing -> operation : 1
the increasing operation -> and : 1
increasing operation and -> then : 1
operation and then -> the : 1
then the player -> does : 1
the player does -> it : 1
player does it -> for : 1
does it for -> we : 1
it for we -> do : 1
for we do -> not : 1
we do not -> need : 1
do not need -> to : 1
not need to -> know : 1
need to know -> the : 1
need to know -> that : 1
need to know -> in : 1
to know the -> implementation : 1
to know the -> height : 1
know the implementation -> of : 1
implementation of that -> the : 1
of that the -> process : 1
that the process -> we : 1
the process we -> need : 1
process we need -> to : 1
need to take -> into : 1
to take into -> account : 1
take into account -> the : 1
into account the -> the : 1
account the the -> explanation : 1
the the explanation -> of : 1
the explanation of -> these : 1
explanation of these -> three : 1
of these three -> techniques : 1
these three techniques -> is : 1
three techniques is -> as : 1
techniques is as -> is : 1
is as is -> hiding : 1
as is hiding -> the : 1
is hiding the -> implementation : 1
hiding the implementation -> details : 1
the implementation details -> of : 1
implementation details of -> the : 1
details of the -> operations : 1
of the operations -> that : 2
of the operations -> have : 1
of the operations -> of : 1
of the operations -> in : 1
the operations that -> are : 1
the operations that -> will : 1
the operations that -> should : 1
the operations that -> the : 1
operations that are -> available : 1
that are available -> in : 2
are available in -> the : 1
are available in -> and : 1
available in the -> hiding : 1
available in the -> the : 1
in the hiding -> the : 1
the hiding the -> data : 1
hiding the data -> which : 1
the data which -> is : 1
which is being -> affected : 1
is being affected -> by : 1
being affected by -> that : 1
affected by that -> grouping : 1
by that grouping -> all : 1
that grouping all -> similar : 1
grouping all similar -> data : 1
all similar data -> and : 1
similar data and -> functions : 2
data and functions -> into : 2
and functions into -> a : 2
functions into a -> classes : 1
functions into a -> the : 1
into a classes -> to : 1
a classes to -> build : 1
to build are -> containers : 1
build are containers -> for : 1
are containers for -> variables : 1
containers for variables -> and : 1
for variables and -> the : 1
variables and the -> operations : 1
and the operations -> that : 1
operations that will -> affect : 1
that will affect -> the : 1
will affect the -> as : 1
affect the as -> we : 1
we discussed as -> adts : 1
discussed as adts -> implement : 1
as adts implement -> encapsulation : 1
adts implement encapsulation -> techniques : 1
implement encapsulation techniques -> for : 1
encapsulation techniques for -> similar : 1
techniques for similar -> data : 1
for similar data -> and : 1
into a the -> classes : 1
into a the -> time : 1
a the classes -> can : 1
the classes can -> also : 1
classes can also -> be : 1
can also be -> applied : 1
can also be -> performed : 2
can also be -> created : 1
also be applied -> to : 2
be applied to -> group : 1
be applied to -> an : 1
applied to group -> a : 1
to group a -> class : 1
group a class -> has : 1
a class has -> three : 1
class has three -> access : 1
has three access -> control : 1
three access control -> sections : 1
access control sections -> for : 1
control sections for -> wrapping : 1
sections for wrapping -> the : 1
for wrapping the -> data : 1
wrapping the data -> and : 1
the data and -> and : 1
the data and -> the : 2
data and and -> they : 1
and and they -> and : 1
and they and -> methods : 1
they and methods -> can : 1
and methods can -> be : 1
and methods can -> only : 2
methods can be -> accessed : 1
can be accessed -> by : 1
can be accessed -> from : 1
be accessed by -> any : 1
be accessed by -> class : 1
accessed by any -> user : 1
by any user -> of : 1
any user of -> the : 1
user of the -> and : 1
the and methods -> can : 1
the and methods -> for : 1
methods can only -> be : 2
can only be -> accessed : 2
can only be -> performed : 3
only be accessed -> by : 1
only be accessed -> and : 1
accessed by class -> derived : 1
by class derived -> and : 1
class derived and -> and : 1
derived and and -> methods : 1
and and methods -> can : 1
be accessed and -> go : 1
accessed and go -> back : 1
and go back -> to : 1
go back to -> the : 1
to the definition -> of : 1
the definition of -> abstraction : 1
the definition of -> the : 1
definition of abstraction -> and : 1
of abstraction and -> information : 1
abstraction and information -> hiding : 1
and information hiding -> in : 1
information hiding in -> the : 1
hiding in the -> previous : 1
the previous we -> can : 2
the previous we -> were : 1
the previous we -> just : 1
the previous we -> discussed : 6
the previous we -> have : 1
the previous we -> will : 1
previous we can -> implement : 1
previous we can -> say : 2
we can implement -> abstraction : 1
we can implement -> the : 1
we can implement -> operation : 1
can implement abstraction -> by : 1
implement abstraction by -> using : 1
abstraction by using -> or : 1
by using or -> keywords : 1
using or keywords -> to : 1
or keywords to -> hide : 1
keywords to hide -> the : 1
to hide the -> methods : 1
to hide the -> data : 1
hide the methods -> from : 1
the methods from -> outside : 1
methods from outside -> the : 1
from outside the -> class : 1
from outside the -> build : 1
outside the class -> and : 1
the class and -> implement : 1
class and implement -> the : 1
and implement the -> information : 1
and implement the -> hash : 1
implement the information -> hiding : 1
the information hiding -> by : 1
information hiding by -> using : 1
hiding by using -> a : 1
by using a -> to : 1
by using a -> class : 1
by using a -> sorting : 1
by using a -> bit : 1
by using a -> hash : 2
by using a -> given : 1
by using a -> separate : 1
using a to -> hide : 1
a to hide -> the : 1
hide the data -> from : 1
the data from -> outside : 1
data from outside -> the : 1
outside the build -> a : 1
the build a -> simple : 1
a simple class -> named : 1
simple class named -> as : 1
class named as -> shown : 1
named as shown -> in : 1
as shown in -> the : 14
shown in the -> following : 11
shown in the -> preceding : 7
shown in the -> earlier : 1
following code string -> void : 1
code string void -> string : 1
string void string -> return : 2
void string return -> we : 1
void string return -> animal : 1
string return we -> can : 1
preceding code we -> cannot : 1
preceding code we -> added : 1
preceding code we -> need : 1
preceding code we -> can : 1
preceding code we -> will : 1
code we cannot -> access : 1
we cannot access -> variable : 1
cannot access variable -> directly : 1
access variable directly -> since : 1
variable directly since -> we : 1
directly since we -> assigned : 1
since we assigned -> it : 1
we assigned it -> as : 1
assigned it as -> we : 1
it as we -> have : 1
as we have -> two : 1
as we have -> instantiated : 1
as we have -> each : 1
as we have -> in : 1
as we have -> discussed : 1
have two methods -> to : 1
two methods to -> access : 1
methods to access -> the : 1
to access the -> variable : 2
to access the -> element : 1
to access the -> next : 1
to access the -> specific : 1
access the variable -> from : 1
access the variable -> in : 1
the variable from -> the : 1
variable from the -> inside : 1
from the inside -> the : 1
the inside the -> methods : 1
inside the methods -> will : 1
the methods will -> modify : 1
methods will modify -> will : 1
will modify will -> return : 1
modify will return -> the : 1
will return the -> following : 1
will return the -> of : 1
will return the -> position : 1
will return the -> index : 1
will return the -> value : 1
return the following -> is : 1
code to consume -> the : 1
to consume the -> namespace : 1
to consume the -> data : 1
consume the namespace -> string : 1
the namespace string -> void : 1
namespace string void -> string : 1
string return animal -> dog : 2
return animal dog -> cout : 2
animal dog cout -> a : 2
dog cout a -> return : 2
cout a return -> the : 1
cout a return -> we : 1
a return the -> preceding : 1
preceding we created -> a : 1
we created a -> variable : 1
created a variable -> named : 1
a variable named -> of : 1
of the type -> since : 1
of the type -> is : 1
the type since -> the : 1
type since the -> has : 1
type since the -> element : 1
since the has -> the : 1
the has the -> ability : 1
has the ability -> that : 1
has the ability -> to : 2
the ability that -> such : 1
ability that such -> as : 1
that such as -> invoking : 1
such as invoking -> the : 1
as invoking the -> following : 1
invoking the following -> is : 1
is the window -> we : 1
the window we -> should : 1
window we should -> see : 1
we should see -> if : 2
we should see -> the : 2
we should see -> on : 1
should see if -> we : 2
see if we -> build : 2
if we build -> and : 29
we can say -> that : 15
can say that -> adt : 1
can say that -> the : 12
can say that -> is : 1
can say that -> we : 1
say that adt -> has : 1
that adt has -> two : 1
adt has two -> and : 2
has two and -> they : 2
two and they -> are : 2
are and discussing -> simple : 1
and discussing simple -> you : 1
discussing simple you -> might : 1
simple you might -> see : 1
you might see -> that : 1
might see that -> a : 1
see that a -> similarity : 1
that a similarity -> between : 1
a similarity between -> structs : 1
a similarity between -> jump : 1
similarity between structs -> and : 1
between structs and -> they : 1
structs and they -> both : 1
and they both -> actually : 1
they both actually -> have : 1
both actually have -> similar : 1
actually have similar -> the : 1
have similar the -> differences : 1
similar the differences -> that : 1
the differences that -> structs : 1
differences that structs -> have : 1
that structs have -> the : 1
structs have the -> default : 1
have the default -> while : 1
have the default -> i : 1
the default while -> classes : 1
default while classes -> have : 1
while classes have -> the : 1
classes have the -> default : 1
the default i -> personally : 1
default i personally -> recommend : 1
i personally recommend -> using : 1
personally recommend using -> structs : 1
recommend using structs -> as : 1
using structs as -> data : 1
structs as data -> structures : 1
as data structures -> only : 1
data structures only -> have : 1
structures only have -> any : 1
only have any -> methods : 1
have any methods -> in : 1
any methods in -> and : 1
methods in and -> using : 1
in and using -> classes : 1
and using classes -> to : 1
using classes to -> build : 1
build the we -> can : 1
preceding we assign -> the : 1
preceding we assign -> as : 1
we assign the -> variable : 1
we assign the -> node : 1
assign the variable -> to : 1
the variable to -> the : 1
the variable to -> track : 1
variable to the -> instance : 1
to the instance -> of : 1
the instance of -> the : 3
the instance of -> this : 1
instance of the -> class : 5
instance of the -> so : 1
of the class -> by : 1
of the class -> can : 2
of the class -> or : 1
of the class -> should : 1
of the class -> which : 1
the class by -> using : 1
class by using -> its : 1
by using its -> which : 1
using its which -> is : 1
its which is -> shown : 1
shown as dog -> we : 1
as dog we -> can : 1
dog we can -> initialize : 1
we can initialize -> a : 1
we can initialize -> it : 1
we can initialize -> an : 1
we can initialize -> variable : 1
can initialize a -> class : 1
initialize a class -> data : 1
a class data -> member : 1
class data member -> by : 1
data member by -> using : 1
member by using -> a : 1
using a class -> the : 1
a class the -> constructor : 1
class the constructor -> name : 1
the constructor name -> is : 1
constructor name is -> the : 1
name is the -> the : 1
is the the -> class : 1
is the the -> pointer : 1
is the the -> of : 1
the the class -> refactor : 1
the the class -> will : 1
the the class -> should : 1
the class refactor -> our : 1
class refactor our -> preceding : 1
refactor our preceding -> class : 1
our preceding class -> so : 1
preceding class so -> it : 1
class so it -> has : 1
class so it -> now : 1
so it has -> a : 1
so it has -> to : 1
it has a -> the : 2
it has a -> slow : 1
it has a -> balanced : 2
has a the -> refactored : 1
has a the -> rest : 1
a the refactored -> code : 1
as namespace string -> string : 1
as namespace string -> the : 4
namespace string string -> return : 1
string string return -> animal : 1
string string return -> dog : 4
a return we -> can : 1
the preceding when -> we : 2
preceding when we -> define : 1
preceding when we -> use : 1
we define the -> we : 1
define the we -> also : 1
we also initialize -> the : 1
also initialize the -> private : 1
initialize the private -> variable : 1
the private variable -> of : 1
private variable of -> the : 1
variable of the -> we : 1
the we need -> the : 1
the we need -> to : 8
the we need -> a : 1
we need the -> method : 1
need the method -> anymore : 1
the method anymore -> to : 1
method anymore to -> assign : 1
anymore to assign -> the : 1
to assign the -> we : 1
assign the we -> will : 1
same output again -> if : 1
output again if -> we : 1
again if we -> build : 1
preceding the preceding -> we : 1
we assign as -> the : 1
assign as the -> data : 1
as the data -> we : 1
as the data -> type : 2
the data we -> can : 3
the data we -> will : 1
the data we -> build : 1
we can also -> derive : 1
we can also -> initialize : 1
we can also -> take : 1
we can also -> construct : 1
can also derive -> a : 1
also derive a -> new : 1
derive a new -> class : 1
a new class -> based : 1
a new class -> the : 1
a new class -> a : 1
new class based -> on : 1
class based on -> the : 1
on the base -> by : 1
the base by -> deriving : 1
base by deriving -> from : 1
by deriving from -> the : 1
deriving from the -> base : 1
from the base -> the : 1
the base the -> derived : 1
base the derived -> class : 1
the derived class -> will : 1
the derived class -> has : 1
the derived class -> derives : 1
derived class will -> also : 1
class will also -> have : 1
will also have -> the : 1
will also have -> an : 1
also have the -> behavior : 1
have the behavior -> that : 1
the behavior that -> the : 1
behavior that the -> base : 1
that the base -> class : 1
the base class -> refactor : 1
the base class -> from : 1
base class refactor -> the : 1
class refactor the -> class : 1
refactor the class -> we : 1
refactor the class -> so : 1
the class we -> will : 1
class we will -> add : 1
we will add -> method : 1
we will add -> one : 1
we will add -> a : 1
will add method -> named : 1
add method named -> the : 1
method named the -> virtual : 1
named the virtual -> method : 1
the virtual method -> is : 1
the virtual method -> using : 1
virtual method is -> a : 1
method is a -> method : 1
is a method -> that : 1
a method that -> has : 1
method that has -> no : 1
that has no -> implementation : 1
that has no -> the : 1
that has no -> child : 1
that has no -> left : 1
that has no -> and : 1
has no implementation -> and : 1
no implementation and -> only : 1
implementation and only -> has : 1
and only has -> the : 1
only has the -> definition : 1
has the definition -> known : 1
the definition known -> as : 1
definition known as -> the : 1
known as the -> the : 1
known as the -> of : 1
known as the -> based : 1
known as the -> power : 1
as the the -> derived : 1
as the the -> elements : 1
the the derived -> class : 1
derived class has -> to : 1
class has to -> add : 1
class has to -> implement : 1
has to add -> the : 1
to add the -> implementation : 1
add the implementation -> to : 1
the implementation to -> the : 1
implementation to the -> virtual : 1
to the virtual -> method : 1
virtual method using -> the : 1
method using the -> or : 1
method using the -> following : 1
using the or -> else : 1
the or else -> the : 1
or else the -> compiler : 1
else the compiler -> will : 1
compiler will after -> we : 1
will after we -> have : 1
after we have -> a : 1
after we have -> sorted : 1
after we have -> the : 1
a new we -> will : 1
a new we -> have : 1
a new we -> can : 2
new we will -> make : 1
we will make -> a : 2
we will make -> them : 1
will make a -> class : 1
will make a -> new : 1
make a class -> named : 1
a class named -> that : 1
class named that -> derives : 1
named that derives -> from : 1
that derives from -> the : 1
derives from the -> the : 1
from the the -> code : 1
from the the -> diagram : 1
from the the -> open : 1
the the code -> should : 5
the the code -> will : 2
the the code -> for : 1
namespace string the -> interface : 4
string the interface -> that : 4
the interface that -> has : 4
interface that has -> to : 4
that has to -> be : 5
has to be -> in : 4
has to be -> able : 1
has to be -> executed : 1
has to be -> collected : 1
to be in -> derived : 4
be in derived -> virtual : 4
in derived virtual -> string : 4
derived virtual string -> string : 4
virtual string string -> return : 4
string return dog -> public : 4
string return dog -> dog : 2
return dog public -> forward : 4
dog public forward -> the : 4
public forward the -> constructor : 6
forward the constructor -> here : 1
forward the constructor -> copy : 5
the constructor here -> we : 1
constructor here we -> implement : 1
here we implement -> the : 6
we implement the -> string : 6
implement the string -> return : 6
the string return -> dog : 2
the string return -> cat : 2
the string return -> cout : 2
return dog dog -> cout : 2
dog dog cout -> is : 2
dog cout is -> cout : 3
cout is cout -> return : 3
cout is cout -> dog : 1
cout is cout -> cout : 1
cout is cout -> for : 4
is cout return -> we : 1
is cout return -> have : 1
is cout return -> preceding : 1
return we have -> two : 1
have two the -> class : 1
have two the -> first : 1
two the class -> the : 1
the class the -> base : 1
the class the -> derived : 1
class the base -> and : 1
the base and -> the : 1
base and the -> class : 1
and the class -> the : 1
and the class -> is : 1
class the derived -> as : 1
the derived as -> shown : 1
derived as shown -> in : 1
preceding the class -> has : 1
the class has -> to : 1
has to implement -> the : 1
to implement the -> method : 1
to implement the -> list : 1
to implement the -> operation : 1
to implement the -> which : 1
implement the method -> since : 1
the method since -> it : 1
method since it -> has : 1
since it has -> been : 1
since it has -> a : 2
since it has -> to : 2
since it has -> more : 1
has been defined -> as : 1
been defined as -> a : 1
defined as a -> virtual : 1
defined as a -> pointer : 1
as a virtual -> method : 1
a virtual method -> in : 1
virtual method in -> the : 1
method in the -> the : 1
the the instance -> of : 1
the class can -> also : 1
the class can -> be : 1
class can also -> invoke : 1
can also invoke -> the : 1
also invoke the -> even : 1
invoke the even -> though : 1
the even though -> not : 1
even though not -> implemented : 1
though not implemented -> inside : 1
not implemented inside -> the : 1
implemented inside the -> class : 1
inside the class -> since : 1
the class since -> the : 1
class since the -> derived : 1
since the derived -> class : 1
derived class derives -> all : 1
class derives all -> base : 1
derives all base -> class : 1
all base class -> if : 1
base class if -> we : 1
class if we -> run : 1
following console we -> can : 1
say that the -> adt : 1
say that the -> value : 1
say that the -> preceding : 1
say that the -> complexity : 2
say that the -> time : 4
say that the -> worst : 1
say that the -> expression : 1
say that the -> string : 1
say that the -> average : 1
that the adt -> has : 1
the adt has -> two : 1
they are the -> and : 2
they are the -> formula : 1
are the and -> necessary : 1
are the and -> these : 1
the and necessary -> requirement : 1
and necessary requirement -> of : 1
necessary requirement of -> adt : 1
requirement of adt -> is : 1
of adt is -> that : 1
adt is that -> it : 1
is that it -> has : 1
is that it -> holds : 1
is that it -> will : 1
it has to -> be : 1
it has to -> iterate : 3
it has to -> check : 1
it has to -> have : 1
to be able -> to : 1
be able to -> control : 1
be able to -> understand : 1
able to control -> all : 1
to control all -> copy : 1
control all copy -> operations : 1
all copy operations -> to : 1
copy operations to -> avoid : 1
operations to avoid -> dynamic : 1
to avoid dynamic -> memory : 1
avoid dynamic memory -> aliasing : 1
dynamic memory aliasing -> problems : 1
memory aliasing problems -> caused : 1
aliasing problems caused -> by : 1
problems caused by -> shallow : 1
caused by shallow -> copying : 1
by shallow copying -> members : 1
shallow copying members -> of : 1
copying members of -> the : 1
members of the -> copy : 1
of the copy -> may : 1
the copy may -> reference : 1
copy may reference -> the : 1
may reference the -> same : 1
reference the same -> objects : 1
the same objects -> as : 1
same objects as -> the : 1
objects as the -> for : 1
as the for -> this : 1
the for this -> we : 2
can use assignment -> operator : 1
use assignment operator -> as : 1
assignment operator as -> the : 1
operator as the -> we : 1
as the we -> will : 1
as the we -> compare : 1
as the we -> then : 1
we will refactor -> the : 1
we will refactor -> our : 1
will refactor the -> class : 1
the class so -> it : 1
so it now -> has : 1
it now has -> the : 1
now has the -> the : 1
has the the -> code : 1
the constructor copy -> assignment : 5
constructor copy assignment -> operator : 5
copy assignment operator -> void : 5
assignment operator void -> operator : 5
operator void operator -> dog : 3
operator void operator -> cat : 2
void operator dog -> here : 3
operator dog here -> we : 3
dog here we -> implement : 3
is cout dog -> cout : 1
cout dog cout -> is : 1
cout return have -> added : 1
return have added -> a : 1
have added a -> operator : 1
have added a -> the : 1
added a operator -> which : 1
a operator which -> is : 1
operator which is -> overloading : 1
which is overloading -> in : 1
is overloading in -> the : 1
overloading in the -> since : 1
in the since -> we : 3
in the since -> space : 1
the since we -> tried : 1
the since we -> discussed : 1
the since we -> can : 1
the since we -> assume : 1
the since we -> have : 1
since we tried -> to : 1
we tried to -> access : 1
tried to access -> the : 1
the variable in -> the : 1
variable in the -> base : 1
in the base -> class : 1
base class from -> the : 1
class from the -> derived : 1
from the derived -> we : 1
the derived we -> need : 1
derived we need -> to : 1
need to make -> instead : 1
to make instead -> of : 1
make instead of -> in : 1
instead of in -> the : 1
of in the -> when : 1
of in the -> we : 1
of in the -> as : 1
in the when -> we : 1
the when we -> copy : 1
the when we -> link : 1
the when we -> call : 1
the when we -> they : 1
when we copy -> to : 1
we copy to -> we : 1
copy to we -> can : 1
to we can -> ensure : 1
to we can -> sort : 1
to we can -> ask : 1
to we can -> safely : 1
to we can -> check : 1
we can ensure -> that : 3
can ensure that -> not : 1
can ensure that -> the : 2
ensure that not -> a : 1
that not a -> shallow : 1
not a shallow -> with : 1
a shallow with -> play : 1
shallow with play -> with : 1
with play with -> the : 1
play with the -> the : 1
the the templates -> are : 1
the templates are -> the : 1
templates are the -> features : 1
are the features -> that : 1
the features that -> allow : 1
features that allow -> the : 1
that allow the -> functions : 1
allow the functions -> and : 1
the functions and -> classes : 1
functions and classes -> to : 1
and classes to -> operate : 1
classes to operate -> with : 1
to operate with -> generic : 1
operate with generic -> it : 1
with generic it -> makes : 1
generic it makes -> a : 1
it makes a -> function : 1
makes a function -> or : 1
a function or -> class : 1
function or class -> work : 1
or class work -> on : 1
class work on -> many : 1
work on many -> different : 1
on many different -> data : 1
many different data -> types : 1
different data types -> without : 1
data types without -> having : 1
types without having -> to : 1
without having to -> be : 1
having to be -> rewritten : 1
to be rewritten -> for : 1
be rewritten for -> each : 1
rewritten for each -> using : 1
for each using -> the : 1
each using the -> we : 1
using the we -> can : 2
using the we -> increase : 2
using the we -> need : 1
we can build -> various : 1
we can build -> a : 1
can build various -> data : 1
build various data -> which : 1
various data which -> we : 1
data which we -> will : 1
which we will -> discuss : 4
we will discuss -> later : 1
we will discuss -> in : 3
we will discuss -> the : 1
will discuss later -> in : 1
discuss later in -> this : 1
later in this -> we : 1
this we have -> another : 1
this we have -> successfully : 1
this we have -> variable : 1
this we have -> an : 1
this we have -> discussed : 3
this we have -> to : 3
we have another -> class : 1
we have another -> method : 1
have another class -> that : 1
another class that -> is : 1
class that is -> derived : 1
that is derived -> from : 1
derived from the -> for : 1
from the for -> we : 1
the for we -> are : 1
the for we -> try : 1
for we are -> going : 1
going to make -> a : 1
make a function -> that : 1
a function that -> will : 3
a function that -> receives : 1
a function that -> passes : 1
function that will -> invoke : 1
function that will -> print : 1
function that will -> divide : 1
function that will -> compare : 1
that will invoke -> the : 1
invoke the and -> methods : 1
invoke the and -> worry : 1
and methods for -> both : 1
methods for both -> the : 1
for both the -> and : 1
for both the -> best : 5
for both the -> average : 1
both the and -> without : 1
both the and -> data : 1
the and without -> creating : 1
and without creating -> two : 1
without creating two -> separated : 1
creating two separated -> we : 1
two separated we -> can : 1
separated we can -> use : 1
use the which -> is : 1
use the which -> will : 1
shown as namespace -> string : 1
string return cat -> public : 2
return cat public -> forward : 2
cat public forward -> the : 2
void operator cat -> here : 2
operator cat here -> we : 2
cat here we -> implement : 2
string return cout -> goes : 2
return cout goes -> cout : 2
cout goes cout -> dog : 2
cout goes cout -> t : 1
goes cout dog -> dog : 2
cout dog dog -> cat : 2
dog dog cat -> cat : 2
dog cat cat -> return : 2
cat cat return -> the : 1
cat cat return -> we : 1
cat return the -> preceding : 1
we can pass -> both : 1
we can pass -> either : 1
can pass both -> the : 1
pass both the -> and : 1
the and data -> types : 2
data types to -> function : 1
types to function -> since : 1
to function since -> we : 1
function since we -> have : 1
we have defined -> the : 1
have defined the -> template : 1
defined the template -> before : 1
the template before -> the : 1
template before the -> function : 1
before the function -> is : 1
the function is -> a : 1
the function is -> greater : 1
the function is -> recursively : 1
the function is -> quite : 1
the function is -> as : 2
function is a -> keyword : 1
function is a -> string : 1
is a keyword -> in : 1
a keyword in -> which : 1
keyword in which -> is : 1
in which is -> used : 1
in which is -> executed : 1
used to write -> a : 1
to write a -> the : 1
to write a -> code : 2
write a the -> is : 1
a the is -> used : 1
the is used -> for : 1
the is used -> to : 1
is used for -> specifying : 1
used for specifying -> that : 1
for specifying that -> a : 1
specifying that a -> symbol : 1
that a symbol -> in : 1
a symbol in -> a : 1
symbol in a -> template : 1
in a template -> definition : 1
a template definition -> or : 1
template definition or -> declaration : 1
definition or declaration -> is : 1
or declaration is -> a : 1
declaration is a -> type : 1
a type the -> preceding : 1
type the preceding -> the : 1
preceding the symbol -> is : 1
the symbol is -> as : 1
symbol is as -> a : 1
is as a -> the : 1
is as a -> path : 1
as a the -> function : 1
a the function -> becomes : 1
the function becomes -> generic : 1
function becomes generic -> and : 1
becomes generic and -> can : 1
generic and can -> accept : 1
and can accept -> various : 1
can accept various -> data : 2
accept various data -> and : 1
accept various data -> refactor : 1
various data and -> if : 1
data and if -> we : 1
and if we -> build : 2
and if we -> we : 1
and if we -> need : 1
will be shown -> the : 2
be shown the -> following : 2
shown the following -> console : 1
shown the following -> output : 1
following console ensure -> that : 1
console ensure that -> the : 1
that the data -> type : 2
the data type -> we : 3
the data type -> in : 3
the data type -> to : 1
the data type -> name : 1
the data type -> forget : 1
the data type -> is : 3
the data type -> by : 1
the data type -> since : 1
the data type -> also : 1
the data type -> can : 1
the data type -> will : 1
the data type -> instead : 1
the data type -> affect : 1
the data type -> using : 1
type we pass -> to : 1
type we pass -> does : 1
we pass to -> the : 1
we pass to -> this : 1
pass to the -> generic : 1
to the generic -> function : 1
the generic function -> has : 1
generic function has -> the : 1
function has the -> ability : 1
the ability to -> do : 1
the ability to -> automatically : 1
ability to do -> all : 1
to do all -> the : 1
do all the -> operation : 1
all the operation -> invoking : 1
the operation invoking -> from : 1
operation invoking from -> the : 1
invoking from the -> generic : 1
from the generic -> the : 1
the generic the -> compiler : 1
generic the compiler -> will : 1
compiler will compile -> if : 1
will compile if -> the : 1
compile if the -> data : 1
if the data -> type : 1
we pass does -> not : 1
pass does not -> have : 1
does not have -> the : 1
does not have -> a : 1
not have the -> expected : 1
have the expected -> the : 1
the expected the -> preceding : 1
expected the preceding -> function : 1
the preceding function -> template : 1
the preceding function -> is : 2
the preceding function -> here : 1
the preceding function -> if : 2
the preceding function -> we : 1
preceding function template -> we : 1
function template we -> need : 1
template we need -> to : 1
need to pass -> a : 2
need to pass -> two : 1
need to pass -> the : 1
to pass a -> data : 1
to pass a -> single : 1
pass a data -> type : 1
type that is -> an : 1
type that is -> placed : 1
type that is -> used : 1
that is an -> instance : 1
is an instance -> of : 1
an instance of -> the : 2
an instance of -> a : 1
of the so -> we : 1
of the so -> the : 1
of the so -> that : 1
the so we -> can : 2
can pass either -> instance : 1
pass either instance -> of : 1
either instance of -> the : 1
the class or -> an : 1
class or an -> instance : 1
or an instance -> of : 1
instance of a -> derived : 1
of a derived -> class : 1
a derived class -> of : 1
derived class of -> the : 1
class of the -> to : 1
of the to -> the : 1
of the to -> do : 2
of the to -> apply : 1
the to the -> function : 1
the to the -> element : 2
to the function -> the : 1
to the function -> is : 1
function the class -> template : 1
the class template -> is : 1
class template is -> used : 1
template is used -> to : 1
used to build -> a : 2
build a generic -> class : 1
a generic class -> that : 1
generic class that -> can : 1
class that can -> accept : 1
that can accept -> various : 1
various data refactor -> the : 1
data refactor the -> preceding : 1
code by adding -> a : 1
by adding a -> new : 2
adding a new -> class : 1
adding a new -> node : 1
adding a new -> property : 1
new class the -> code : 1
class the code -> should : 1
goes cout t -> void : 1
cout t void -> cout : 1
t void cout -> goes : 1
void cout goes -> cout : 1
cat return we -> can : 1
new class a -> template : 1
class a template -> class : 1
a template class -> and : 1
a template class -> that : 1
template class and -> it : 1
class and it -> can : 1
and it can -> be : 1
it can be -> used : 1
it can be -> take : 1
it can be -> applied : 1
it can be -> stored : 1
it can be -> written : 1
be used by -> any : 1
be used by -> next : 1
used by any -> data : 1
by any data -> we : 1
any data we -> have : 1
data we have -> to : 1
data we have -> learned : 1
to define the -> data : 1
to define the -> length : 1
to define the -> equal : 1
define the data -> type : 1
in the angle -> as : 1
the angle as -> we : 1
angle as we -> can : 1
use the instances -> if : 1
the instances if -> we : 1
instances if we -> build : 1
output as we -> did : 1
as we did -> for : 2
as we did -> in : 2
as we did -> earlier : 1
we did for -> the : 2
we did for -> counting : 1
did for the -> template : 1
did for the -> iterative : 1
for the template -> programming : 1
the template programming -> has : 1
template programming has -> another : 1
programming has another -> powerful : 1
has another powerful -> feature : 1
another powerful feature -> regarding : 1
powerful feature regarding -> the : 1
feature regarding the -> use : 1
regarding the use -> of : 1
use of template -> which : 1
of template which -> is : 1
template which is -> template : 1
which is template -> a : 1
is template a -> set : 1
template a set -> of : 1
a set of -> class : 1
set of class -> templates : 1
of class templates -> to : 1
class templates to -> provide : 1
templates to provide -> all : 1
to provide all -> functions : 1
provide all functions -> that : 1
all functions that -> are : 1
functions that are -> commonly : 1
that are commonly -> used : 1
are commonly used -> in : 1
commonly used in -> manipulating : 1
used in manipulating -> various : 1
in manipulating various -> data : 1
manipulating various data -> there : 1
various data there -> are : 1
there are four -> components : 1
there are four -> cases : 1
there are four -> basic : 1
are four components -> that : 1
four components that -> build : 1
components that build -> the : 1
that build the -> and : 1
build the and -> they : 1
the and they -> are : 2
are and look -> at : 1
and look at -> these : 1
look at these -> components : 1
at these components -> are : 1
these components are -> used : 1
components are used -> on : 1
are used on -> ranges : 1
used on ranges -> of : 1
on ranges of -> such : 1
ranges of such -> as : 1
of such as -> sorting : 1
of such as -> flipping : 1
such as sorting -> and : 1
as sorting and -> the : 1
sorting and the -> sorting : 1
and the sorting -> algorithm : 1
and the sorting -> are : 1
the sorting algorithm -> is : 1
sorting algorithm is -> used : 1
sorting algorithm is -> for : 1
sorting algorithm is -> similar : 1
algorithm is used -> to : 2
used to arrange -> the : 1
arrange the both -> in : 1
the both in -> ascending : 1
both in ascending -> and : 1
in ascending and -> descending : 1
ascending and descending -> the : 1
and descending the -> searching : 1
descending the searching -> algorithm : 1
the searching algorithm -> is : 1
the searching algorithm -> uses : 1
searching algorithm is -> used : 1
searching algorithm is -> where : 1
searching algorithm is -> a : 1
used to look -> for : 1
to look for -> a : 1
look for a -> specific : 1
a specific value -> from : 1
a specific value -> on : 1
specific value from -> the : 1
value from the -> ranges : 1
from the ranges -> of : 1
the ranges of -> are : 1
ranges of are -> used : 1
of are used -> to : 1
are used to -> store : 1
are used to -> overload : 1
are used to -> construct : 1
to store objects -> and : 1
store objects and -> the : 1
objects and the -> common : 1
and the common -> container : 1
the common container -> that : 1
common container that -> is : 1
container that is -> widely : 1
that is widely -> used : 1
is widely used -> is : 1
widely used is -> the : 1
used is the -> vector : 1
is the vector -> is : 1
the vector is -> similar : 1
the vector is -> also : 1
the vector is -> as : 1
vector is similar -> to : 1
similar to an -> except : 1
to an except -> it : 1
an except it -> has : 1
except it has -> the : 1
it has the -> ability : 1
it has the -> exact : 1
ability to automatically -> when : 1
to automatically when -> an : 1
automatically when an -> element : 1
when an element -> is : 3
an element is -> inserted : 2
an element is -> there : 1
element is inserted -> or : 1
element is inserted -> and : 1
is inserted or -> used : 1
inserted or used -> to : 1
or used to -> a : 1
used to a -> sequence : 1
to a sequence -> of : 1
a sequence of -> each : 1
a sequence of -> where : 1
a sequence of -> items : 1
a sequence of -> binary : 1
sequence of each -> container : 1
of each container -> has : 1
each container has -> its : 1
container has its -> own : 1
has its own -> for : 1
has its own -> we : 1
has its own -> strengths : 1
has its own -> closed : 1
has its own -> key : 1
its own for -> there : 1
own for there -> and : 1
for there and -> in : 1
there and in -> the : 1
and in the -> vector : 1
and in the -> worst : 3
and in the -> sorted : 1
in the vector -> are : 1
in the vector -> is : 1
in the vector -> instead : 1
in the vector -> last : 1
the vector are -> used : 1
vector are used -> to : 1
used to overload -> the : 1
to overload the -> existing : 1
overload the existing -> the : 1
the existing the -> instance : 1
existing the instance -> of : 1
instance of this -> component : 1
of this component -> is : 1
this component is -> called : 1
component is called -> a : 1
is called a -> or : 1
is called a -> right : 1
is called a -> where : 1
called a or -> the : 1
called a or -> a : 1
a or the -> functor : 1
or the functor -> is : 1
the functor is -> defined : 1
functor is defined -> as : 1
is defined as -> a : 1
as a pointer -> of : 1
a pointer of -> a : 1
pointer of a -> function : 1
of a function -> where : 1
a function where -> we : 1
function where we -> can : 1
where we can -> parameterize : 1
where we can -> easily : 1
where we can -> search : 1
where we can -> access : 1
we can parameterize -> the : 1
can parameterize the -> existing : 1
parameterize the existing -> are : 1
the existing are -> not : 1
existing are not -> building : 1
are not building -> any : 1
not building any -> code : 1
building any code -> in : 1
any code in -> this : 1
code in this -> section : 1
in this section -> since : 1
in this section -> be : 1
this section since -> we : 1
section since we -> just : 1
since we just -> need : 2
to know that -> the : 1
know that the -> stl : 1
know that the -> number : 1
that the stl -> is : 1
the stl is -> a : 1
stl is a -> powerful : 1
is a powerful -> library : 1
a powerful library -> in : 1
powerful library in -> and : 1
library in and -> that : 1
in and that -> it : 1
and that it -> we : 1
that it we -> are : 1
it we are -> going : 1
discuss the stl -> deeper : 1
the stl deeper -> in : 1
stl deeper in -> the : 1
deeper in the -> following : 1
deeper in the -> upcoming : 1
following chapters while -> we : 1
chapters while we -> construct : 1
while we construct -> data : 1
we construct data -> the : 1
construct data the -> create : 1
data the create -> a : 1
create a good -> we : 1
a good we -> have : 1
good we have -> to : 1
have to ensure -> that : 2
have to ensure -> the : 1
ensure that we -> have : 1
ensure that we -> get : 1
we have got -> the : 1
have got the -> best : 1
got the best -> performance : 1
the best performance -> from : 1
best performance from -> the : 1
performance from the -> in : 1
from the in -> this : 1
discuss the ways -> we : 1
the ways we -> can : 1
ways we can -> analyze : 1
we can analyze -> the : 1
can analyze the -> time : 1
analyze the time -> complexity : 1
the time complexity -> of : 49
the time complexity -> also : 1
the time complexity -> so : 1
the time complexity -> the : 1
the time complexity -> for : 4
the time complexity -> before : 1
the time complexity -> will : 11
the time complexity -> become : 1
the time complexity -> bubble : 1
the time complexity -> would : 1
the time complexity -> is : 2
the time complexity -> to : 1
the time complexity -> we : 2
the time complexity -> this : 1
time complexity of -> basic : 1
time complexity of -> the : 16
time complexity of -> an : 1
time complexity of -> omega : 1
time complexity of -> each : 1
time complexity of -> this : 14
time complexity of -> function : 7
time complexity of -> quick : 1
time complexity of -> a : 1
time complexity of -> even : 1
time complexity of -> binary : 3
time complexity of -> jump : 1
time complexity of -> since : 1
time complexity of -> and : 1
time complexity of -> running : 2
time complexity of -> several : 1
time complexity of -> operation : 2
time complexity of -> fibonacci : 1
complexity of basic -> start : 1
of basic start -> with : 1
basic start with -> asymptotic : 1
start with asymptotic -> analysis : 1
with asymptotic analysis -> to : 1
asymptotic analysis to -> find : 1
analysis to find -> out : 1
find out the -> time : 2
find out the -> complexity : 2
find out the -> position : 2
find out the -> beginning : 1
find out the -> closed : 1
find out the -> greatest : 1
find out the -> will : 1
find out the -> location : 1
find out the -> successor : 6
find out the -> predecessor : 1
find out the -> remainder : 1
find out the -> inputted : 1
find out the -> hash : 1
out the time -> complexity : 3
complexity of the -> this : 1
complexity of the -> preceding : 3
complexity of the -> inner : 1
complexity of the -> is : 1
complexity of the -> best : 1
complexity of the -> iterative : 1
complexity of the -> code : 2
complexity of the -> method : 2
complexity of the -> operation : 8
complexity of the -> data : 1
complexity of the -> it : 1
complexity of the -> merge : 1
complexity of the -> counting : 1
complexity of the -> interpolation : 1
complexity of the -> algorithm : 1
complexity of the -> sublist : 1
complexity of the -> implementation : 1
complexity of the -> function : 1
of the this -> analysis : 1
of the this -> function : 4
the this analysis -> omits : 1
this analysis omits -> the : 1
analysis omits the -> constants : 2
omits the constants -> and : 2
the constants and -> the : 2
constants and the -> least : 2
and the least -> significant : 3
and the least -> frequent : 1
the least significant -> suppose : 1
the least significant -> parts : 1
the least significant -> the : 1
the least significant -> digit : 1
least significant suppose -> we : 1
significant suppose we -> have : 1
suppose we have -> a : 5
suppose we have -> the : 3
suppose we have -> an : 3
suppose we have -> three : 1
have a function -> that : 2
have a function -> with : 1
have a function -> to : 1
have a function -> in : 1
that will print -> a : 1
will print a -> number : 1
print a number -> from : 1
a number from -> to : 1
a number from -> the : 1
number from to -> the : 1
from to the -> following : 1
from to the -> algorithm : 1
the code for -> the : 2
the code for -> this : 3
code for the -> int : 1
code for the -> binary : 1
for the int -> i : 1
the int i -> cout : 1
int i cout -> i : 1
i cout i -> i : 1
cout i i -> i : 2
cout i i -> cout : 4
i i i -> calculate : 1
i i i -> comparison : 1
i i calculate -> the : 1
i calculate the -> time : 1
calculate the time -> complexity : 1
the preceding algorithm -> by : 1
preceding algorithm by -> counting : 1
algorithm by counting -> each : 1
by counting each -> instruction : 1
counting each instruction -> of : 1
each instruction of -> the : 1
instruction of the -> we : 1
the we start -> with : 1
we start with -> the : 1
start with the -> first : 1
with the first -> i : 1
with the first -> element : 1
the first i -> preceding : 1
first i preceding -> statement : 1
i preceding statement -> is : 1
preceding statement is -> only : 1
statement is only -> executed : 1
is only executed -> once : 1
only executed once -> in : 1
executed once in -> the : 1
in the so -> its : 1
the so its -> value : 1
so its value -> is : 1
its value is -> the : 1
its value is -> we : 1
its value is -> still : 1
value is the -> following : 1
value is the -> searched : 2
value is the -> ternary : 1
is the following -> is : 3
code snippet of -> the : 1
snippet of the -> rest : 1
of the rest -> statements : 1
the rest statements -> in : 1
rest statements in -> the : 1
statements in the -> cout : 1
statements in the -> preceding : 2
in the cout -> i : 1
in the cout -> input : 1
the cout i -> i : 1
i i comparison -> in : 1
i comparison in -> the : 1
comparison in the -> loop : 1
loop is valued -> at : 1
is valued at -> for : 1
valued at for -> we : 1
at for we -> can : 1
for we can -> say : 1
for we can -> adopt : 1
for we can -> add : 1
that the value -> two : 1
the value two -> statements : 1
value two statements -> inside : 1
two statements inside -> the : 1
statements inside the -> loop : 1
scope is since -> it : 1
is since it -> needs : 1
is since it -> depends : 1
is since it -> depend : 1
is since it -> has : 1
since it needs -> to : 2
it needs to -> print : 1
it needs to -> the : 1
it needs to -> ensure : 1
it needs to -> check : 1
it needs to -> pick : 1
needs to print -> the : 1
to print the -> and : 1
to print the -> node : 1
to print the -> content : 1
to print the -> the : 1
print the and -> for : 1
the and for -> assignment : 1
and for assignment -> and : 1
for assignment and -> addition : 1
assignment and addition -> how : 1
and addition how -> much : 1
addition how much -> of : 1
how much of -> the : 1
much of the -> preceding : 1
snippet is executed -> depends : 1
is executed depends -> on : 1
executed depends on -> the : 1
depends on the -> value : 1
depends on the -> other : 1
depends on the -> total : 1
on the value -> of : 2
the value of -> so : 2
the value of -> and : 1
the value of -> the : 22
the value of -> each : 1
the value of -> selected : 1
the value of -> will : 1
the value of -> index : 1
the value of -> is : 1
the value of -> element : 3
the value of -> that : 1
the value of -> an : 1
the value of -> if : 1
the value of -> while : 1
value of so -> it : 1
value of so -> no : 1
of so it -> will : 1
so it will -> be : 2
so it will -> only : 1
will be or -> the : 2
be or the -> total : 1
be or the -> binary : 1
or the total -> instruction : 1
the total instruction -> that : 1
total instruction that -> has : 1
instruction that has -> to : 1
to be executed -> for : 1
be executed for -> the : 1
executed for the -> preceding : 1
executed for the -> first : 1
for the preceding -> function : 2
for the preceding -> complexity : 1
preceding function is -> the : 1
preceding function is -> we : 1
function is the -> complexity : 1
is the complexity -> of : 3
is the complexity -> in : 1
preceding function here -> is : 1
function here is -> the : 1
is the curve -> that : 1
the curve that -> represents : 1
curve that represents -> its : 1
that represents its -> all : 1
represents its all -> curve : 1
its all curve -> graphs : 1
all curve graphs -> that : 1
curve graphs that -> will : 1
graphs that will -> be : 1
will be represented -> in : 1
be represented in -> this : 1
represented in this -> the : 1
this the axis -> represents : 1
the axis represents -> size : 1
the axis represents -> we : 1
axis represents size -> and : 1
represents size and -> the : 1
size and the -> axis : 1
and the axis -> represents : 1
axis represents we -> can : 1
represents we can -> see : 1
preceding the curve -> is : 1
the curve is -> since : 1
the curve is -> still : 1
curve is since -> the : 1
is since the -> time : 2
is since the -> middle : 1
since the time -> complexity : 3
time complexity also -> depends : 1
complexity also depends -> on : 1
also depends on -> the : 1
on the other -> such : 1
on the other -> to : 1
the other such -> as : 1
other such as -> hardware : 1
other such as -> taking : 1
such as hardware -> we : 1
as hardware we -> may : 1
hardware we may -> have : 1
we may have -> another : 1
we may have -> to : 1
may have another -> complexity : 1
have another complexity -> for : 1
another complexity for -> the : 1
complexity for the -> preceding : 1
complexity for the -> worst : 1
complexity for the -> best : 2
complexity for the -> average : 1
preceding function if -> we : 1
preceding function if -> all : 1
function if we -> run : 1
run the function -> on : 1
the function on -> faster : 1
function on faster -> say : 1
on faster say -> the : 1
faster say the -> time : 1
say the time -> complexity : 1
time complexity so -> that : 1
complexity so that -> the : 1
that the curve -> will : 1
the curve will -> be : 1
curve will be -> as : 1
will be as -> we : 2
will be as -> if : 2
will be as -> and : 1
will be as -> time : 1
will be as -> executing : 1
will be as -> prove : 1
will be as -> do : 3
will be as -> t : 1
will be as -> file : 1
will be as -> the : 1
will be as -> follows : 1
will be as -> int : 2
will be as -> as : 1
will be as -> node : 1
will be as -> finding : 1
will be as -> removing : 1
will be as -> add : 2
will be as -> void : 1
will be as -> get : 2
will be as -> string : 1
will be as -> return : 1
will be as -> iterate : 1
will be as -> apply : 1
will be as -> there : 1
we can the -> curve : 1
we can the -> complexity : 1
we can the -> operation : 1
can the curve -> is : 1
curve is still -> linear : 1
is still linear -> for : 1
still linear for -> the : 1
linear for the -> two : 1
for the two -> for : 1
the two for -> this : 1
two for this -> we : 1
we can omit -> a : 2
we can omit -> this : 1
we can omit -> we : 1
can omit a -> constant : 2
omit a constant -> and : 1
omit a constant -> the : 1
a constant and -> the : 1
constant and the -> least : 1
least significant parts -> in : 1
significant parts in -> asymptotic : 1
parts in asymptotic -> so : 1
in asymptotic so -> we : 1
asymptotic so we -> can : 1
that the preceding -> complexity : 1
the preceding complexity -> is : 1
the preceding complexity -> will : 1
preceding complexity is -> as : 1
complexity is as -> found : 1
is as found -> in : 1
as found in -> the : 1
found in the -> following : 1
found in the -> first : 1
found in the -> and : 1
found in the -> the : 1
found in the -> hash : 1
the following move -> on : 1
following move on -> to : 1
on to another -> we : 1
to another we -> have : 1
another we have -> the : 1
another we have -> successfully : 1
have the nested -> we : 1
the nested we -> will : 1
nested we will -> have : 1
will have another -> as : 1
have another as -> we : 1
another as we -> can : 1
the following int -> i : 1
the following int -> int : 1
following int i -> int : 1
int i int -> j : 1
i int j -> cout : 1
int j cout -> i : 1
j cout i -> j : 1
cout i j -> j : 1
i j j -> j : 1
i j j -> total : 1
j j j -> i : 1
j j i -> i : 1
j i i -> on : 1
i i on -> the : 1
i on the -> preceding : 1
on the preceding -> we : 4
on the preceding -> the : 3
on the preceding -> for : 1
that the complexity -> of : 2
that the complexity -> will : 1
of the inner -> loop : 1
the inner loop -> of : 1
the inner loop -> is : 2
the inner loop -> if : 1
inner loop of -> the : 1
loop of the -> preceding : 1
function is we -> then : 1
is we then -> calculate : 1
is we then -> iterate : 1
we then calculate -> the : 1
then calculate the -> outer : 1
then calculate the -> middle : 1
calculate the outer -> loop : 1
the outer loop -> so : 1
the outer loop -> is : 2
outer loop so -> it : 1
loop so it -> becomes : 1
so it becomes -> which : 1
so it becomes -> the : 1
it becomes which -> the : 1
becomes which the -> complexity : 1
which the complexity -> of : 1
preceding code curve -> for : 1
code curve for -> the : 1
curve for the -> preceding : 1
curve for the -> time : 1
preceding complexity will -> be : 1
complexity will be -> as : 2
complexity will be -> where : 4
complexity will be -> in : 1
complexity will be -> the : 2
complexity will be -> which : 3
complexity will be -> out : 1
complexity will be -> a : 1
be as if -> we : 1
be as if -> the : 3
be as if -> linkedlist : 1
as if we -> run : 1
preceding code in -> the : 2
in the slower -> the : 1
the slower the -> complexity : 1
slower the complexity -> might : 1
the complexity might -> become : 1
complexity might become -> twice : 1
might become twice -> as : 1
become twice as -> the : 1
twice as the -> notation : 1
as the notation -> should : 1
the notation should -> be : 1
notation should be -> as : 2
be as the -> curve : 1
be as the -> preceding : 1
as the curve -> of : 1
the curve of -> the : 1
curve of the -> preceding : 1
the preceding notation -> should : 1
preceding notation should -> be : 1
be as shown -> since : 1
be as shown -> in : 2
as shown since -> the : 1
shown since the -> asymptotic : 1
since the asymptotic -> analysis : 1
the asymptotic analysis -> omits : 1
asymptotic analysis omits -> the : 1
least significant the -> complexity : 1
significant the complexity -> notation : 1
the complexity notation -> will : 1
complexity notation will -> be : 1
notation will be -> as : 1
be as and -> best : 1
as and best -> the : 1
and best the -> previous : 1
best the previous -> we : 1
previous we were -> able : 1
we were able -> to : 1
were able to -> define : 1
able to define -> time : 1
to define time -> complexity : 1
define time complexity -> for : 1
time complexity for -> our : 1
time complexity for -> each : 1
time complexity for -> this : 2
time complexity for -> all : 2
time complexity for -> the : 4
time complexity for -> both : 2
time complexity for -> operation : 1
complexity for our -> code : 1
for our code -> using : 1
our code using -> an : 1
code using an -> asymptotic : 1
using an asymptotic -> in : 1
an asymptotic in -> this : 1
asymptotic in this -> we : 1
going to determine -> a : 1
to determine a -> case : 1
determine a case -> of : 1
a case of -> the : 1
case of the -> implementation : 1
of the implementation -> of : 2
of the implementation -> should : 1
of the implementation -> is : 1
implementation of an -> there : 1
of an there -> are : 2
an there are -> three : 2
there are three -> cases : 1
there are three -> asymptotic : 1
there are three -> basic : 1
there are three -> possible : 1
are three cases -> when : 1
three cases when -> implementing : 1
cases when implementing -> time : 1
when implementing time -> complexity : 1
implementing time complexity -> in : 1
time complexity in -> an : 1
time complexity in -> the : 2
complexity in an -> they : 1
in an they -> are : 2
an they are -> and : 1
an they are -> big : 1
are and best -> before : 1
and best before -> we : 1
best before we -> go : 1
before we go -> through : 1
go through look -> at : 1
through look at -> the : 1
look at the -> following : 14
look at the -> word : 1
look at the -> quick : 1
at the following -> function : 2
at the following -> array : 1
at the following -> code : 1
at the following -> diagram : 2
at the following -> we : 1
at the following -> string : 1
at the following -> binary : 2
at the following -> does : 1
at the following -> is : 1
at the following -> not : 1
at the following -> the : 1
the following function -> int : 2
the following function -> using : 1
the following function -> cout : 3
the following function -> will : 1
the following function -> long : 1
following function int -> int : 2
function int int -> iterate : 1
function int int -> int : 1
int int iterate -> through : 2
int iterate through -> arr : 1
int iterate through -> the : 2
iterate through arr -> for : 1
through arr for -> i : 1
arr for i -> i : 1
for i i -> if : 2
for i i -> cout : 3
for i i -> remove : 1
for i i -> temporary : 1
for i i -> totalelement : 1
for i i -> iterate : 1
for i i -> for : 1
for i i -> fill : 1
for i i -> n : 1
i i if -> x : 1
i i if -> input : 1
i if x -> is : 1
if x is -> returns : 1
if x is -> not : 1
x is returns -> index : 1
is returns index -> of : 1
returns index of -> if : 1
index of if -> return : 1
of if return -> if : 2
of if return -> there : 1
if return if -> x : 1
if return if -> last : 1
if return if -> no : 2
if return if -> this : 1
return if x -> is : 1
x is not -> returns : 1
is not returns -> return : 1
not returns return -> we : 1
returns return we -> can : 1
the preceding it -> will : 3
the preceding it -> invokes : 1
preceding it will -> find : 1
preceding it will -> be : 2
it will find -> an : 1
will find an -> index : 1
find an index -> of : 1
an index of -> target : 1
index of target -> element : 1
of target element -> from : 1
target element from -> an : 1
element from an -> array : 1
from an array -> containing : 1
an array containing -> suppose : 1
an array containing -> five : 2
an array containing -> these : 1
an array containing -> unsorted : 1
an array containing -> the : 1
an array containing -> and : 1
array containing suppose -> we : 1
containing suppose we -> have : 1
have the array -> here : 1
the array here -> are : 1
array here are -> the : 1
here are the -> cases : 1
here are the -> steps : 1
here are the -> the : 1
here are the -> ways : 1
here are the -> algorithms : 1
are the cases -> we : 1
the cases we -> will : 1
cases we will -> case : 1
we will case -> is : 1
will case is -> a : 1
case is a -> calculation : 3
is a calculation -> of : 3
is a calculation -> that : 1
a calculation of -> the : 2
a calculation of -> all : 1
calculation of the -> upper : 1
calculation of the -> lower : 1
calculation of the -> middle : 1
of the upper -> bound : 1
the upper bound -> on : 1
the upper bound -> can : 1
the upper bound -> and : 1
the upper bound -> of : 1
upper bound on -> the : 1
bound on the -> running : 2
on the running -> time : 3
the running time -> of : 3
running time of -> the : 2
running time of -> including : 1
time of the -> in : 1
time of the -> the : 1
of the in -> the : 1
of the in -> this : 1
the the upper -> bound : 1
upper bound can -> be : 1
bound can be -> an : 1
can be an -> element : 1
be an element -> that : 1
an element that -> does : 1
an element that -> is : 1
element that does -> not : 1
that does not -> appear : 1
does not appear -> in : 1
not appear in -> the : 1
in the for -> so : 1
the for so -> it : 1
for so it -> has : 1
has to iterate -> through : 2
has to iterate -> all : 1
has to iterate -> until : 1
to iterate through -> all : 5
to iterate through -> elements : 1
to iterate through -> the : 5
iterate through all -> elements : 1
iterate through all -> list : 1
iterate through all -> of : 2
iterate through all -> in : 1
iterate through all -> string : 1
iterate through all -> characters : 1
iterate through all -> possible : 1
through all elements -> of : 1
all elements of -> and : 1
all elements of -> the : 3
elements of and -> still : 1
of and still -> cannot : 1
and still cannot -> find : 1
still cannot find -> the : 1
cannot find the -> case : 1
cannot find the -> minimum : 1
find the case -> is : 1
the case is -> a : 2
calculation of all -> possible : 1
of all possible -> inputs : 1
all possible inputs -> on : 1
possible inputs on -> the : 1
inputs on the -> running : 1
time of including -> an : 1
of including an -> element : 1
including an element -> that : 1
element that is -> not : 1
element that is -> inserted : 1
element that is -> in : 1
that is not -> present : 1
that is not -> stored : 2
is not present -> in : 1
not present in -> the : 1
present in the -> case : 1
present in the -> hash : 1
of the lower -> bound : 1
the lower bound -> on : 1
the lower bound -> is : 1
the lower bound -> and : 2
the lower bound -> to : 1
lower bound on -> the : 1
the the the -> lower : 1
the the lower -> bound : 1
lower bound is -> the : 1
bound is the -> first : 1
is the first -> element : 1
is the first -> function : 1
is the first -> bangle : 1
is the first -> number : 1
first element of -> the : 6
first element of -> an : 1
element of the -> which : 1
element of the -> pointer : 1
element of the -> linked : 2
element of the -> the : 1
element of the -> first : 3
element of the -> if : 1
element of the -> second : 2
element of the -> two : 1
element of the -> traversed : 1
element of the -> we : 1
of the which -> is : 2
which is when -> we : 1
when we search -> for : 1
we search for -> element : 1
we search for -> a : 1
search for element -> the : 1
for element the -> function : 1
element the function -> will : 1
the function will -> only : 1
the function will -> find : 2
the function will -> do : 1
the function will -> be : 2
the function will -> give : 1
function will only -> iterate : 1
will only iterate -> through : 1
only iterate through -> the : 1
iterate through the -> so : 1
iterate through the -> linked : 1
iterate through the -> i : 1
iterate through the -> input : 1
iterate through the -> unsorted : 1
iterate through the -> sorted : 1
iterate through the -> remaining : 1
iterate through the -> array : 1
iterate through the -> digit : 1
iterate through the -> number : 1
iterate through the -> start : 1
iterate through the -> string : 2
iterate through the -> elements : 1
iterate through the -> pattern : 1
iterate through the -> hash : 1
through the so -> the : 1
the so the -> and : 1
the so the -> next : 1
the so the -> time : 1
the so the -> pivot : 1
so the and -> big : 1
the and big -> discussing : 1
and big discussing -> asymptotic : 1
big discussing asymptotic -> analysis : 1
discussing asymptotic analysis -> and : 1
asymptotic analysis and -> the : 1
analysis and the -> three : 1
and the three -> cases : 1
the three cases -> in : 1
three cases in -> discuss : 1
cases in discuss -> asymptotic : 1
in discuss asymptotic -> notation : 1
discuss asymptotic notation -> to : 1
asymptotic notation to -> represent : 1
notation to represent -> the : 1
to represent the -> time : 1
to represent the -> digits : 1
to represent the -> preceding : 1
represent the time -> complexity : 1
complexity of an -> there : 1
are three asymptotic -> notations : 1
three asymptotic notations -> that : 1
asymptotic notations that -> are : 1
notations that are -> mostly : 1
that are mostly -> used : 1
are mostly used -> in : 1
mostly used in -> an : 1
used in an -> they : 1
they are big -> and : 1
are big and -> big : 1
big and big -> big : 1
and big big -> theta : 1
big big theta -> notation : 1
big theta notation -> a : 1
theta notation a -> notation : 1
notation a notation -> that : 1
a notation that -> bounds : 1
notation that bounds -> a : 1
that bounds a -> function : 1
bounds a function -> from : 2
a function from -> above : 2
function from above -> and : 1
function from above -> only : 1
from above and -> like : 1
above and like -> we : 1
and like we -> saw : 1
like we saw -> previously : 1
we saw previously -> in : 1
saw previously in -> asymptotic : 1
previously in asymptotic -> which : 1
in asymptotic which -> also : 1
asymptotic which also -> omits : 1
which also omits -> a : 1
also omits a -> constant : 1
omits a constant -> from : 1
a constant from -> a : 1
constant from a -> we : 1
from a we -> have : 2
a function with -> time : 1
function with time -> since : 1
with time since -> a : 1
time since a -> linear : 1
since a linear -> we : 1
a linear we -> can : 1
linear we can -> notate : 1
can notate it -> like : 1
can notate it -> as : 1
notate it like -> in : 1
it like in -> the : 1
like in the -> following : 1
the following suppose -> we : 1
following suppose we -> have : 1
have a is -> the : 1
a is the -> of : 1
a is the -> use : 1
a is the -> best : 1
is the of -> is : 1
is the of -> a : 1
the of is -> always : 1
of is always -> between : 1
is always between -> and : 1
always between and -> since : 1
between and since -> has : 1
and since has -> a : 1
since has a -> constant : 1
has a constant -> of : 1
a constant of -> in : 1
constant of in -> the : 1
we will take -> a : 1
will take a -> random : 1
take a random -> lower : 1
a random lower -> bound : 1
random lower bound -> which : 1
lower bound which -> is : 1
bound which is -> lower : 1
bound which is -> greater : 1
which is lower -> than : 3
lower than that -> and : 1
than that and -> an : 1
that and an -> upper : 1
and an upper -> bound : 1
an upper bound -> which : 1
upper bound which -> is : 1
which is greater -> than : 2
greater than that -> see : 1
than that see -> the : 1
that see the -> following : 1
the following curve -> for : 1
following curve for -> the : 1
for the time -> we : 1
for the time -> complexity : 1
for the time -> for : 1
the time we -> can : 1
time we can -> get : 1
we can get -> the : 1
we can get -> a : 2
we can get -> from : 1
we can get -> an : 2
can get the -> asymptotic : 1
get the asymptotic -> complexity : 1
the asymptotic complexity -> so : 1
asymptotic complexity so -> then : 1
complexity so then -> we : 1
so then we -> have : 1
then we have -> which : 1
we have which -> is : 1
we have which -> has : 1
have which is -> based : 1
which is based -> on : 1
is based on -> complexity : 1
based on complexity -> of : 1
on complexity of -> we : 1
complexity of we -> can : 1
of we can -> decide : 1
of we can -> ignore : 1
of we can -> see : 1
of we can -> use : 1
of we can -> solve : 1
we can decide -> the : 1
we can decide -> whether : 1
we can decide -> if : 1
can decide the -> upper : 1
decide the upper -> bound : 1
upper bound and -> lower : 1
bound and lower -> bound : 1
and lower bound -> for : 1
lower bound for -> pick : 1
bound for pick -> for : 1
for pick for -> the : 1
pick for the -> lower : 1
for the lower -> bound : 1
lower bound and -> for : 1
lower bound and -> the : 1
bound and for -> the : 1
and for the -> upper : 1
for the upper -> we : 1
the upper we -> can : 1
upper we can -> as : 1
we can as -> notation : 1
can as notation -> a : 1
as notation a -> bounds : 1
notation a bounds -> a : 1
a bounds a -> function : 1
from above only -> using : 1
above only using -> the : 1
only using the -> upper : 1
using the upper -> bound : 1
upper bound of -> an : 1
bound of an -> from : 1
of an from -> the : 1
an from the -> previous : 1
from the previous -> we : 1
from the previous -> which : 1
from the previous -> if : 1
that the time -> complexity : 7
of the is -> if : 1
of the is -> and : 1
of the is -> as : 1
the is if -> we : 1
is if we -> are : 1
is if we -> want : 1
is if we -> recall : 1
is if we -> find : 1
if we are -> going : 5
if we are -> we : 1
going to use -> big : 1
going to use -> to : 2
going to use -> data : 1
going to use -> our : 1
going to use -> operation : 1
going to use -> the : 2
going to use -> a : 1
to use big -> theta : 1
use big theta -> we : 1
big theta we -> can : 1
theta we can -> say : 1
that the worst -> case : 1
the worst case -> time : 1
the worst case -> if : 2
the worst case -> in : 1
the worst case -> we : 1
the worst case -> will : 1
worst case time -> complexity : 1
case time complexity -> of : 2
case time complexity -> will : 1
of the best -> case : 2
of the best -> practice : 1
the best case -> time : 2
the best case -> in : 2
the best case -> the : 2
the best case -> and : 2
the best case -> if : 5
the best case -> scenario : 1
best case time -> complexity : 2
complexity of omega -> notation : 1
of omega notation -> is : 1
omega notation is -> contrary : 1
notation is contrary -> to : 1
is contrary to -> it : 1
contrary to it -> uses : 1
to it uses -> the : 1
uses the lower -> bound : 1
lower bound to -> analyze : 1
bound to analyze -> time : 1
to analyze time -> in : 1
analyze time in -> other : 1
time in other -> it : 1
in other it -> uses : 1
other it uses -> the : 1
uses the best -> case : 1
best case in -> big : 1
best case in -> the : 1
case in big -> theta : 1
in big theta -> for : 1
big theta for -> the : 1
theta for the -> we : 1
for the we -> can : 1
time complexity the -> previous : 1
complexity the previous -> code : 1
the previous code -> we : 1
previous code we -> calculated : 1
code we calculated -> the : 1
we calculated the -> complexity : 1
calculated the complexity -> of : 1
of the iterative -> do : 1
the iterative do -> this : 1
iterative do this -> with : 1
do this with -> the : 1
this with the -> recursive : 1
this with the -> balanced : 1
with the recursive -> suppose : 1
the recursive suppose -> we : 1
recursive suppose we -> need : 1
suppose we need -> to : 1
need to calculate -> the : 2
to calculate the -> factorial : 1
to calculate the -> lower : 1
to calculate the -> step : 1
calculate the factorial -> of : 1
the factorial of -> a : 1
factorial of a -> certain : 1
of a certain -> for : 1
a certain for -> which : 1
certain for which -> will : 1
for which will -> produce : 1
which will produce -> for : 1
will produce for -> this : 1
produce for this -> we : 1
use the recursive -> which : 1
the recursive which -> is : 1
recursive which is -> shown : 1
is shown in -> the : 1
following code return -> return : 1
code return return -> n : 1
return return n -> the : 1
return n the -> preceding : 1
n the preceding -> we : 1
we can calculate -> the : 2
can calculate the -> complexity : 1
can calculate the -> middle : 1
calculate the complexity -> similarly : 1
the complexity similarly -> to : 1
complexity similarly to -> how : 1
similarly to how -> we : 1
to how we -> did : 1
how we did -> for : 1
for the iterative -> which : 1
the iterative which -> is : 1
iterative which is -> since : 1
which is since -> it : 1
which is since -> the : 2
which is since -> we : 1
since it depends -> on : 1
it depends on -> how : 1
depends on how -> much : 1
depends on how -> large : 1
on how much -> data : 1
how much data -> is : 1
much data is -> being : 1
data is being -> processed : 1
is being processed -> is : 1
being processed is -> we : 1
processed is we -> can : 1
is we can -> use : 1
is we can -> access : 1
is we can -> add : 1
is we can -> see : 3
is we can -> convert : 1
can use a -> for : 1
can use a -> wildcard : 1
can use a -> binary : 1
use a for -> to : 1
a for to -> calculate : 1
for to calculate -> the : 1
calculate the lower -> bound : 1
bound and the -> upper : 1
and the upper -> the : 1
the upper the -> previous : 1
upper the previous -> we : 1
previous we just -> discussed : 1
we just discussed -> the : 1
just discussed the -> single : 1
discussed the single -> for : 1
the single for -> calculating : 1
single for calculating -> the : 1
for calculating the -> sometimes : 1
for calculating the -> next : 1
calculating the sometimes -> we : 1
the sometimes we -> will : 1
sometimes we will -> deal : 1
we will deal -> with : 1
will deal with -> more : 1
deal with more -> than : 1
with more than -> just : 1
more than just -> one : 1
than just one -> please : 1
just one please -> look : 1
one please look -> at : 1
please look at -> the : 2
int int int -> int : 10
int int int -> total : 1
int int int -> void : 2
int int int -> numbers : 1
int int int -> only : 4
int int int -> set : 1
int int int -> iterate : 1
int int int -> find : 1
int int int -> impossible : 2
int int int -> bstnode : 1
int int int -> base : 1
int int total -> i : 1
int total i -> i : 1
total i i -> j : 1
i i j -> j : 1
j j total -> return : 1
j total return -> where : 1
total return where -> amortized : 1
return where amortized -> analysis : 1
where amortized analysis -> comes : 1
amortized analysis comes -> analysis : 1
analysis comes analysis -> calculates : 1
comes analysis calculates -> the : 1
analysis calculates the -> complexity : 1
calculates the complexity -> of : 1
complexity of performing -> the : 1
performing the operation -> for : 1
the operation for -> varying : 1
operation for varying -> for : 1
for varying for -> when : 1
varying for when -> we : 1
for when we -> insert : 1
when we insert -> some : 1
when we insert -> the : 2
we insert some -> elements : 1
insert some elements -> into : 1
some elements into -> the : 1
elements into the -> complexity : 1
into the complexity -> only : 1
the complexity only -> depend : 1
complexity only depend -> on : 1
only depend on -> the : 1
depend on the -> input : 1
depend on the -> number : 7
on the input -> but : 1
the input but -> also : 1
input but also -> the : 1
but also the -> the : 1
also the the -> complexity : 1
also the the -> fourth : 1
the the complexity -> can : 1
the the complexity -> of : 2
the complexity can -> be : 2
complexity can be -> as : 1
complexity can be -> if : 1
can be as -> n : 1
be as n -> are : 1
as n are -> going : 1
n are going -> to : 1
to discuss these -> analysis : 1
to discuss these -> later : 1
discuss these analysis -> methods : 1
these analysis methods -> in : 1
analysis methods in -> more : 1
methods in more -> detail : 1
in more detail -> in : 1
more detail in -> the : 1
detail in the -> following : 1
the following chapter -> provided : 1
following chapter provided -> us : 1
chapter provided us -> with : 1
provided us with -> an : 1
us with an -> introduction : 1
with an introduction -> to : 1
an introduction to -> basic : 1
introduction to basic -> flow : 1
to basic flow -> and : 1
basic flow and -> all : 1
flow and all -> data : 1
and all data -> types : 1
all data types -> and : 1
types and advanced -> data : 1
advanced data including -> template : 1
data including template -> and : 1
including template and -> that : 1
template and that -> we : 1
and that we -> will : 1
and that we -> as : 1
that we will -> use : 1
that we will -> compare : 1
will use to -> construct : 1
use to construct -> the : 1
to construct the -> data : 1
to construct the -> huffman : 1
construct the data -> structures : 1
data structures in -> the : 1
data structures in -> and : 1
structures in the -> following : 1
following we also -> discussed : 1
we also discussed -> a : 1
we also discussed -> several : 1
also discussed a -> basic : 1
discussed a basic -> complexity : 1
a basic complexity -> and : 1
basic complexity and -> we : 1
complexity and we -> will : 1
we will dig -> into : 1
will dig into -> this : 1
dig into this -> deeper : 1
into this deeper -> in : 1
this deeper in -> the : 1
upcoming we are -> going : 1
going to create -> our : 2
going to create -> a : 4
going to create -> two : 1
going to create -> an : 1
to create our -> first : 1
to create our -> preceding : 1
create our first -> data : 1
our first data -> that : 1
first data that -> linked : 1
data that linked -> and : 1
that linked and -> we : 1
linked and we -> are : 1
and we are -> going : 4
going to perform -> some : 1
to perform some -> operations : 1
perform some operations -> on : 1
some operations on -> the : 1
operations on the -> data : 1
on the data -> is : 1
on the data -> structures : 1
the data is -> the : 1
data is the -> first : 1
data is the -> use : 1
the first function -> in : 1
the first function -> is : 1
first function in -> which : 1
function in which -> is : 1
which is executed -> for : 1
is executed for -> the : 1
for the first -> list : 2
the first list -> the : 1
the first list -> contains : 1
the first list -> presents : 1
the first list -> with : 3
the first list -> return : 1
first list the -> fundamental : 1
list the fundamental -> data : 1
types in can -> we : 1
in can we -> use : 1
can we use -> to : 1
we use to -> control : 1
we use to -> figure : 1
we use to -> sort : 1
we use to -> generate : 1
use to control -> the : 1
to control the -> flow : 1
control the flow -> of : 1
flow of is -> the : 1
of is the -> difference : 1
of is the -> we : 1
of is the -> set : 1
of is the -> index : 1
of is the -> use : 1
of is the -> array : 1
of is the -> the : 1
is the difference -> between : 7
is the difference -> and : 1
the difference between -> enums : 1
the difference between -> the : 2
the difference between -> a : 1
the difference between -> queue : 1
the difference between -> and : 1
the difference between -> an : 1
the difference between -> class : 1
the difference between -> monomorphic : 1
difference between enums -> and : 1
between enums and -> are : 1
enums and are -> the : 1
and are the -> information : 1
are the information -> and : 1
the information and -> encapsulation : 1
information and encapsulation -> please : 1
and encapsulation please -> is : 1
encapsulation please is -> the : 1
please is the -> create : 1
please is the -> difference : 1
is the create -> a : 1
create a template -> in : 1
a template in -> is : 1
template in is -> the : 1
in is the -> difference : 1
difference between the -> function : 1
difference between the -> left : 1
difference between the -> three : 1
between the function -> template : 1
the function template -> and : 1
function template and -> the : 1
template and the -> class : 1
the class is -> the : 1
class is the -> difference : 1
the difference and -> big : 1
difference and big -> can : 1
and big can -> also : 1
big can also -> refer : 1
can also refer -> to : 1
also refer to -> the : 1
refer to the -> following : 4
refer to the -> functional : 1
the following data -> in : 1
the following data -> elements : 1
following data in -> lists : 1
and linked the -> previous : 1
linked the previous -> we : 1
previous we discussed -> basic : 1
previous we discussed -> several : 2
previous we discussed -> various : 1
previous we discussed -> using : 1
previous we discussed -> the : 1
we discussed basic -> so : 1
discussed basic so -> that : 1
basic so that -> now : 1
so that now -> we : 2
that now we -> can : 2
now we can -> build : 1
now we can -> have : 1
can build a -> program : 1
build a program -> and : 1
a program and -> run : 1
program and run -> we : 1
and run we -> also : 1
run we also -> tried : 1
we also tried -> to : 1
also tried to -> find : 1
tried to find -> out : 1
out the complexity -> of : 2
of the code -> flow : 1
of the code -> this : 1
of the code -> inside : 1
the code flow -> using : 1
code flow using -> algorithm : 1
flow using algorithm -> in : 1
using algorithm in -> this : 1
algorithm in this -> we : 1
going to learn -> about : 2
going to learn -> how : 1
to learn about -> building : 1
to learn about -> the : 1
learn about building -> the : 1
about building the -> and : 1
building the and -> linked : 1
the and linked -> structures : 1
and linked structures -> and : 1
linked structures and -> find : 1
structures and find -> out : 1
and find out -> the : 1
and find out -> if : 2
complexity of each -> data : 2
of each data -> to : 1
of each data -> as : 1
each data to -> understand : 1
data to understand -> all : 1
to understand all -> of : 1
understand all of -> the : 1
of the concepts -> in : 1
the concepts in -> these : 1
concepts in these -> data : 1
in these data -> these : 1
these data these -> are : 1
data these are -> the : 1
are the topics -> we : 2
going to the -> array : 1
going to the -> last : 2
going to the -> method : 1
to the array -> data : 1
to the array -> inside : 1
the array data -> type : 3
the array data -> the : 2
array data type -> and : 1
array data type -> have : 1
array data type -> we : 1
data type and -> how : 1
type and how -> to : 1
list data structure -> using : 1
data structure using -> the : 1
structure using the -> array : 1
using the array -> data : 2
array data the -> concept : 1
array data the -> name : 1
data the concept -> of : 1
the concept of -> node : 1
the concept of -> selection : 1
concept of node -> and : 1
of node and -> node : 1
node and node -> and : 1
and node and -> using : 1
node and using -> node : 1
node and using -> an : 1
and using node -> the : 1
using node the -> standard : 1
node the standard -> template : 1
the standard template -> library : 1
the standard template -> we : 1
standard template library -> to : 1
template library to -> implement : 1
library to implement -> the : 1
implement the list -> and : 1
the list and -> linked : 1
and linked follow -> along : 1
linked follow along -> with : 1
files on github -> at : 6
files on github -> is : 1
files on github -> in : 1
on github at -> closer : 1
on github at -> a : 3
on github at -> sort : 1
on github at -> acquainted : 1
github at closer -> to : 1
at closer to -> an : 1
to an is -> a : 1
an is a -> series : 1
an is a -> container : 1
an is a -> word : 1
is a series -> of : 1
a series of -> elements : 1
series of elements -> with : 1
of elements with -> the : 1
elements with the -> same : 1
with the same -> data : 1
with the same -> hash : 1
the same data -> type : 1
same data type -> that : 1
that is placed -> in : 1
is placed in -> contiguous : 1
placed in contiguous -> memory : 1
in contiguous memory -> this : 1
contiguous memory this -> means : 1
memory this means -> that : 1
that the memory -> allocation : 2
the memory allocation -> is : 2
memory allocation is -> assigned : 1
memory allocation is -> if : 1
allocation is assigned -> in : 1
is assigned in -> consecutive : 1
assigned in consecutive -> memory : 1
in consecutive memory -> since : 1
consecutive memory since -> it : 1
memory since it -> implements : 1
since it implements -> contiguous : 1
it implements contiguous -> memory : 1
implements contiguous memory -> the : 1
contiguous memory the -> elements : 1
memory the elements -> of : 1
the elements of -> the : 6
elements of the -> array : 1
elements of the -> number : 1
elements of the -> linked : 1
elements of the -> we : 1
elements of the -> unsorted : 1
elements of the -> correct : 1
elements of the -> first : 2
elements of the -> second : 2
elements of the -> a : 1
elements of the -> tree : 1
elements of the -> list : 1
of the array -> can : 1
of the array -> is : 3
of the array -> as : 2
of the array -> elements : 1
the array can -> be : 1
array can be -> individually : 1
can be individually -> accessed : 1
be individually accessed -> by : 1
individually accessed by -> the : 1
accessed by the -> take : 1
by the take -> a : 1
the take a -> look : 2
take a look -> at : 13
take a look -> the : 1
a look at -> the : 13
a look at -> following : 1
the following array -> we : 1
the following array -> as : 1
following array we -> can : 1
array we can -> see : 2
we have an -> array : 11
we have an -> comparison : 1
we have an -> time : 1
have an array -> containing : 5
have an array -> of : 2
have an array -> where : 1
have an array -> we : 1
have an array -> with : 1
have an array -> which : 1
have an array -> as : 1
array containing five -> since : 1
array containing five -> the : 1
containing five since -> the : 1
five since the -> array : 1
since the array -> the : 1
the array the -> index : 1
array the index -> starts : 1
the index starts -> from : 1
index starts from -> this : 1
starts from this -> index : 1
from this index -> is : 1
this index is -> used : 1
index is used -> to : 1
used to access -> the : 1
access the element -> value : 1
access the element -> using : 1
the element value -> and : 1
the element value -> using : 1
element value and -> to : 1
value and to -> also : 1
and to also -> replace : 1
to also replace -> the : 1
also replace the -> element : 1
replace the element -> the : 1
the element the -> memory : 1
the element the -> selected : 2
the element the -> main : 1
element the memory -> address : 1
the memory address -> stated : 1
the memory address -> might : 1
memory address stated -> in : 1
address stated in -> the : 1
in the illustration -> is : 1
the illustration is -> for : 1
illustration is for -> example : 1
is for example -> purposes : 1
for example purposes -> in : 1
example purposes in -> the : 1
purposes in the -> memory : 1
in the memory -> address : 1
memory address might -> be : 1
address might be -> it : 1
might be it -> illustrates : 1
be it illustrates -> that : 1
it illustrates that -> the : 1
illustrates that the -> memory : 1
allocation is if -> we : 1
if we want -> to : 5
want to create -> the : 1
want to create -> a : 1
to create the -> preceding : 1
to create the -> implementation : 1
create the preceding -> array : 1
the preceding array -> in : 1
the preceding array -> we : 2
preceding array in -> here : 1
array in here -> is : 1
is the file -> namespace : 1
the file namespace -> initialize : 2
the file namespace -> int : 1
the file namespace -> linkedlist : 2
file namespace initialize -> an : 1
file namespace initialize -> the : 1
file namespace initialize -> a : 1
namespace initialize an -> int : 1
initialize an int -> access : 1
an int access -> each : 1
int access each -> cout : 1
access each cout -> i : 1
each cout i -> i : 1
i i cout -> cout : 9
cout cout manipulate -> several : 1
cout manipulate several -> access : 1
manipulate several access -> each : 1
several access each -> element : 1
access each element -> cout : 1
access each element -> by : 1
access each element -> using : 1
access each element -> of : 1
each element cout -> i : 1
element cout i -> i : 1
we see that -> initializing : 1
we see that -> it : 1
we see that -> the : 1
see that initializing -> an : 1
that initializing an -> array : 1
initializing an array -> is : 1
an array is -> and : 1
array is and -> this : 1
is and this -> is : 1
and this is -> done : 1
this is done -> by : 1
is done by -> defining : 1
is done by -> using : 3
done by defining -> the : 1
by defining the -> array : 1
defining the array -> data : 1
data the name -> followed : 1
the name followed -> by : 1
name followed by -> a : 1
followed by a -> couple : 1
by a couple -> of : 1
a couple of -> square : 1
couple of square -> brackets : 1
of square brackets -> and : 1
square brackets and -> the : 1
brackets and the -> in : 1
and the in -> the : 1
the preceding our -> name : 1
preceding our name -> is : 1
our name is -> we : 1
name is we -> can : 1
can access each -> element : 3
each element by -> using : 1
each element by -> iterating : 1
each element by -> incrementing : 1
each element by -> accessing : 1
element by using -> the : 1
element by using -> until : 1
element by using -> a : 1
by using the -> in : 1
by using the -> following : 2
by using the -> array : 1
by using the -> data : 1
by using the -> we : 3
by using the -> bubble : 1
by using the -> quick : 1
by using the -> preceding : 1
by using the -> then : 1
by using the -> given : 1
the we print -> each : 1
we print each -> element : 1
print each element -> by : 1
element by iterating -> each : 1
by iterating each -> element : 1
iterating each element -> and : 1
each element and -> accessing : 1
each element and -> the : 1
element and accessing -> the : 1
and accessing the -> element : 1
accessing the element -> value : 1
element value using -> we : 1
value using we -> also : 1
using we also -> manipulate : 1
we also manipulate -> the : 1
also manipulate the -> value : 1
manipulate the value -> of : 1
value of and -> by : 1
of and by -> using : 1
and by using -> and : 1
and by using -> the : 1
by using and -> if : 1
by using and -> the : 1
using and if -> we : 1
following we can -> see : 5
the preceding got -> what : 1
preceding got what -> we : 1
got what we -> expected : 1
what we expected -> since : 1
we expected since -> we : 1
expected since we -> have : 1
we have successfully -> initialized : 1
we have successfully -> built : 1
we have successfully -> found : 1
we have successfully -> generated : 1
we have successfully -> performed : 1
have successfully initialized -> an : 1
successfully initialized an -> accessed : 1
initialized an accessed -> each : 1
an accessed each -> and : 1
accessed each and -> manipulated : 1
each and manipulated -> the : 1
and manipulated the -> array : 1
manipulated the array -> data : 1
data type have -> a : 1
type have a -> method : 1
have a method -> to : 1
a method to -> find : 1
a method to -> let : 1
method to find -> out : 1
find out how -> many : 2
out how many -> elements : 2
how many elements -> the : 2
how many elements -> an : 1
many elements the -> array : 2
elements the array -> even : 1
elements the array -> only : 1
the array even -> though : 1
array even though -> we : 1
even though we -> already : 1
though we already -> know : 1
we already know -> that : 1
already know that -> the : 1
that the number -> is : 1
number is we -> use : 1
is we use -> to : 1
use to figure -> out : 1
to figure out -> the : 1
figure out the -> number : 1
out the number -> of : 1
the number of -> the : 10
the number of -> items : 7
the number of -> elements : 3
the number of -> so : 1
the number of -> we : 1
the number of -> digits : 1
the number of -> or : 1
the number of -> array : 1
the number of -> first : 1
the number of -> second : 1
number of the -> best : 1
number of the -> an : 1
number of the -> out : 1
number of the -> list : 1
number of the -> linked : 2
number of the -> complexity : 1
number of the -> deque : 1
number of the -> elements : 1
number of the -> array : 1
number of the -> to : 1
the best practice -> in : 1
best practice in -> array : 1
practice in array -> manipulation : 1
in array manipulation -> we : 1
array manipulation we -> know : 1
manipulation we know -> how : 1
the array only -> works : 1
array only works -> when : 1
only works when -> the : 1
works when the -> construct : 1
when the construct -> is : 1
the construct is -> in : 1
construct is in -> the : 1
in the same -> scope : 1
in the same -> after : 1
the same scope -> as : 1
same scope as -> the : 1
scope as the -> definition : 1
as the definition -> of : 1
definition of the -> for : 1
of the for -> we : 1
of the for -> this : 1
of the for -> data : 1
for we try -> this : 1
we try this -> from : 1
try this from -> a : 1
this from a -> function : 1
from a function -> that : 1
function that receives -> the : 1
that receives the -> array : 1
receives the array -> as : 1
the array as -> a : 1
the array as -> the : 2
array as a -> this : 1
array as a -> result : 1
array as a -> representation : 1
as a this -> will : 1
a this will -> an : 1
this will an -> interesting : 1
will an interesting -> fact : 1
an interesting fact -> about : 1
interesting fact about -> can : 1
fact about can -> access : 1
about can access -> the : 1
the element using -> a : 1
the element using -> after : 1
element using a -> as : 1
using a as -> you : 1
a as you -> may : 1
as you may -> a : 1
may a pointer -> is : 1
a pointer is -> a : 1
pointer is a -> holds : 1
is a holds -> the : 1
a holds the -> address : 1
holds the address -> instead : 1
the address instead -> of : 1
address instead of -> the : 1
instead of the -> since : 1
instead of the -> operator : 1
of the since -> we : 2
of the since -> have : 1
of the since -> the : 1
since we discussed -> earlier : 1
we discussed earlier -> that : 1
we discussed earlier -> in : 1
we discussed earlier -> at : 1
discussed earlier that -> each : 1
earlier that each -> element : 1
that each element -> in : 1
each element in -> the : 1
in the array -> has : 1
in the array -> containing : 1
the array has -> its : 1
array has its -> own : 1
its own we -> can : 1
own we can -> access : 1
each element using -> its : 1
element using its -> use : 1
using its use -> a : 1
its use a -> pointer : 1
use a pointer -> as : 1
a pointer as -> an : 1
pointer as an -> we : 2
as an we -> need : 1
as an we -> can : 1
an we need -> to : 2
an we need -> a : 1
need to initialize -> it : 1
need to initialize -> the : 1
to initialize it -> to : 1
initialize it to -> hold : 1
it to hold -> an : 1
to hold an -> as : 1
to hold an -> int : 1
hold an as -> shown : 1
an as shown -> in : 1
the following ptr -> new : 1
following ptr new -> the : 1
ptr new the -> preceding : 1
new the preceding -> we : 1
have a pointer -> named : 2
a pointer named -> that : 1
a pointer named -> how : 1
pointer named that -> points : 1
named that points -> to : 1
that points to -> the : 1
points to the -> first : 1
points to the -> node : 1
points to the -> new : 1
points to the -> safe : 1
to the first -> element : 1
to the first -> delete : 5
to the first -> can : 1
to the first -> index : 1
to the first -> character : 1
to the first -> for : 1
element of an -> array : 1
of an array -> containing : 1
containing five the -> variable : 1
five the variable -> holds : 1
the variable holds -> the : 1
variable holds the -> first : 1
holds the first -> element : 1
first element address -> at : 1
element address at -> the : 1
address at the -> to : 1
at the to -> access : 1
the to access -> the : 1
access the next -> we : 1
the next we -> can : 1
the next we -> are : 7
next we can -> increment : 1
we can increment -> the : 1
can increment the -> variable : 1
increment the variable -> so : 1
the variable so -> that : 1
variable so that -> it : 1
that it will -> point : 1
that it will -> merge : 1
that it will -> become : 1
that it will -> be : 1
it will point -> next : 1
will point next -> to : 1
point next to -> get : 1
next to get -> the : 1
to get the -> value : 4
to get the -> topmost : 1
to get the -> selected : 1
to get the -> fastest : 1
to get the -> decimal : 1
to get the -> we : 1
get the value -> of : 6
get the value -> for : 1
value of the -> currently : 1
value of the -> selected : 2
value of the -> current : 3
value of the -> second : 4
value of the -> address : 1
value of the -> top : 3
value of the -> the : 2
value of the -> for : 1
value of the -> front : 2
value of the -> index : 2
value of the -> first : 2
value of the -> to : 1
value of the -> if : 3
value of the -> inputted : 1
of the currently -> selected : 1
the currently selected -> we : 1
the currently selected -> then : 1
the currently selected -> keep : 1
currently selected we -> can : 1
selected we can -> use : 1
selected we can -> divide : 1
use a wildcard -> symbol : 1
a wildcard symbol -> before : 1
wildcard symbol before -> the : 1
symbol before the -> pointer : 2
before the pointer -> name : 1
before the pointer -> wrap : 1
the pointer name -> see : 1
pointer name see -> the : 1
name see the -> following : 1
the following two -> lines : 1
following two lines -> of : 1
two lines of -> former : 1
lines of former -> statement : 1
of former statement -> in : 1
former statement in -> the : 1
code snippet will -> print : 2
code snippet will -> be : 1
snippet will print -> out : 1
snippet will print -> all : 1
will print out -> the : 1
print out the -> value : 1
print out the -> elements : 1
out the value -> that : 1
the value that -> the : 1
value that the -> pointer : 1
that the pointer -> points : 1
that the pointer -> since : 1
the pointer points -> and : 1
pointer points and -> the : 1
points and the -> latter : 1
and the latter -> will : 2
the latter will -> print : 2
latter will print -> the : 2
will print the -> address : 2
will print the -> value : 1
will print the -> initial : 2
print the address -> that : 1
print the address -> of : 1
the address that -> the : 2
address that the -> pointer : 1
address that the -> points : 1
the pointer since -> we : 1
pointer since we -> initialize : 1
since we initialize -> the : 1
initialize the pointer -> as : 1
the pointer as -> an : 1
an we can -> access : 1
an we can -> then : 1
access the value -> of : 1
value of each -> element : 1
value of each -> compare : 1
of each element -> and : 1
element and the -> address : 1
element and the -> latter : 1
and the address -> as : 1
the address as -> well : 1
address as well -> by : 1
as well by -> its : 1
well by its -> please : 1
by its please -> take : 1
its please take -> a : 1
please take a -> look : 9
please take a -> int : 1
following code the -> preceding : 1
code the preceding -> code : 1
preceding code the -> former : 1
preceding code the -> illustration : 1
code the former -> line : 1
the former line -> will : 1
former line will -> print : 1
line will print -> the : 1
print the value -> of : 1
the selected element -> and : 1
the selected element -> we : 1
selected element and -> the : 1
the address of -> the : 2
address of the -> selected : 1
address of the -> the : 1
selected element we -> added : 1
element we added -> the : 1
we added the -> apostrophe : 1
added the apostrophe -> symbol : 1
the apostrophe symbol -> before : 1
apostrophe symbol before -> the : 1
the pointer wrap -> them : 1
pointer wrap them -> all : 1
wrap them all -> to : 1
them all to -> create : 1
all to create -> a : 1
create a as -> file : 1
a as file -> namespace : 1
as file namespace -> initialize : 1
as file namespace -> t : 1
as file namespace -> stackint : 1
as file namespace -> queueint : 1
as file namespace -> deque : 1
as file namespace -> int : 6
namespace initialize the -> array : 1
initialize the array -> int : 1
the array int -> arrlength : 1
array int arrlength -> initialize : 1
int arrlength initialize -> a : 1
arrlength initialize a -> to : 1
initialize a to -> hold : 1
a to hold -> an : 1
hold an int -> ptr : 1
an int ptr -> new : 1
int ptr new -> display : 1
ptr new display -> each : 1
new display each -> element : 1
display each element -> by : 2
element by incrementing -> the : 1
by incrementing the -> pointer : 1
incrementing the pointer -> cout : 1
the pointer cout -> pointer : 1
pointer cout pointer -> cout : 1
cout pointer cout -> cout : 1
cout pointer cout -> i : 1
pointer cout cout -> cout : 1
cout cout ptr -> since : 1
cout ptr since -> we : 1
ptr since we -> have : 1
we have moved -> forward : 1
have moved forward -> the : 1
moved forward the -> pointer : 1
forward the pointer -> five : 1
the pointer five -> we : 1
pointer five we -> need : 1
five we need -> to : 1
need to move -> it : 3
to move it -> ptr : 1
to move it -> to : 1
to move it -> since : 1
move it ptr -> ptr : 1
it ptr ptr -> display : 1
ptr ptr display -> each : 1
ptr display each -> element : 1
element by accessing -> pointer : 1
by accessing pointer -> index : 1
accessing pointer index -> cout : 1
pointer index cout -> pointer : 1
index cout pointer -> cout : 1
pointer cout i -> i : 1
each element of -> the : 1
each element of -> both : 1
of the pointer -> array : 1
of the pointer -> will : 1
of the pointer -> well : 1
the pointer array -> by : 1
pointer array by -> and : 1
array by and -> if : 1
by and if -> we : 1
if we we -> have : 1
if we we -> will : 1
we we have -> to : 2
have to remember -> that : 1
to remember that -> after : 1
remember that after -> increasing : 1
that after increasing -> the : 1
after increasing the -> it : 1
increasing the it -> will : 1
it will no -> longer : 1
will no longer -> hold : 1
will no longer -> become : 6
no longer hold -> the : 1
longer hold the -> address : 1
hold the address -> of : 1
the the solution -> is : 1
the solution is -> that : 1
solution is that -> we : 1
is that we -> need : 2
that we need -> to : 2
need to decrement -> the : 1
to decrement the -> pointer : 1
decrement the pointer -> like : 1
the pointer like -> we : 1
pointer like we -> did : 1
like we did -> in : 1
we did in -> the : 4
did in the -> preceding : 3
did in the -> jump : 1
preceding array we -> discussed : 1
preceding array we -> used : 1
array we discussed -> is : 1
we discussed is -> also : 1
discussed is also -> called : 1
is also called -> a : 1
also called a -> we : 1
called a we -> can : 1
a we can -> also : 1
a we can -> reduce : 1
a we can -> do : 1
a we can -> create : 1
can also initialize -> a : 1
also initialize a -> multidimensional : 1
initialize a multidimensional -> for : 1
a multidimensional for -> instance : 1
multidimensional for instance -> a : 1
for instance a -> x : 1
instance a x -> by : 1
a x by -> using : 1
x by using -> the : 1
the following new -> the : 1
following new the -> other : 1
new the other -> implementation : 1
the other implementation -> of : 1
other implementation of -> the : 1
implementation of the -> array : 1
implementation of the -> method : 1
implementation of the -> operation : 9
implementation of the -> will : 1
implementation of the -> stack : 1
implementation of the -> and : 1
implementation of the -> for : 1
implementation of the -> exponent : 1
implementation of the -> function : 5
implementation of the -> is : 1
implementation of the -> const : 1
the array is -> similar : 1
the array is -> the : 2
the array is -> if : 1
the array is -> a : 1
array is similar -> to : 1
to the a -> list : 1
the a list -> a : 1
a list a -> sequence : 1
list a sequence -> of : 1
sequence of where -> the : 1
of where the -> order : 1
where the order -> of : 1
order of the -> position : 1
order of the -> remaining : 1
of the position -> are : 1
the position are -> several : 1
position are several -> that : 1
are several that -> are : 1
several that are -> available : 1
available in and -> they : 1
and they return -> the : 1
they return the -> value : 1
return the value -> of : 4
return the value -> stored : 1
return the value -> if : 1
value of selected -> if : 1
of selected if -> out : 1
selected if out -> of : 1
if out of -> it : 1
out of it -> will : 1
of it will -> simply : 1
it will simply -> insert : 1
it will simply -> return : 1
will simply insert -> the : 1
simply insert the -> value : 1
insert the value -> at : 1
the value at -> the : 1
value at the -> position : 1
at the position -> of : 1
the position of -> return : 1
the position of -> the : 11
the position of -> value : 5
the position of -> a : 1
the position of -> in : 1
the position of -> each : 1
position of return -> the : 1
return the index -> of : 2
return the index -> if : 1
of the first -> occurrence : 1
of the first -> thing : 1
of the first -> of : 1
of the first -> int : 1
of the first -> then : 1
of the first -> index : 2
of the first -> list : 4
of the first -> return : 1
of the first -> it : 1
of the first -> line : 1
the first occurrence -> the : 1
first occurrence the -> return : 1
occurrence the return -> value : 1
the return value -> remove : 1
the return value -> of : 1
return value remove -> the : 1
value remove the -> item : 1
remove the item -> in : 2
the item in -> the : 2
the item in -> that : 1
the we are -> going : 4
a list adt -> that : 1
list adt that -> accepts : 1
adt that accepts -> data : 1
that accepts data -> from : 1
accepts data from -> zero : 1
data from zero -> and : 1
from zero and -> by : 1
zero and by -> using : 1
type we discussed -> build : 1
we discussed build -> a : 1
discussed build a -> new : 1
build a new -> adt : 2
a new adt -> named : 1
a new adt -> since : 1
a new adt -> called : 1
new adt named -> which : 1
adt named which -> contains : 1
named which contains -> the : 1
which contains the -> preceding : 1
which contains the -> following : 1
contains the preceding -> we : 1
preceding we need -> two : 1
preceding we need -> to : 5
preceding we need -> an : 1
preceding we need -> a : 1
we need two -> variables : 1
need two variables -> to : 1
two variables to -> hold : 1
variables to hold -> the : 1
to hold the -> list : 1
to hold the -> number : 1
to hold the -> top : 1
to hold the -> remaining : 1
hold the list -> of : 1
list of items -> and : 1
of items and -> the : 1
items and the -> number : 1
and the number -> of : 1
number of items -> in : 3
number of items -> that : 1
number of items -> the : 1
number of items -> inside : 1
number of items -> based : 1
of items in -> the : 3
items in the -> list : 1
items in the -> middle : 1
items in the -> there : 1
items in the -> we : 1
the list we -> will : 1
the list we -> discussed : 1
list we will -> make : 1
will make them -> so : 1
make them so -> that : 1
them so that -> it : 1
that it cannot -> be : 2
it cannot be -> accessed : 1
it cannot be -> divided : 2
cannot be accessed -> from : 1
be accessed from -> the : 1
be accessed from -> two : 1
accessed from the -> outside : 1
from the outside -> all : 1
the outside all -> four : 1
outside all four -> operations : 1
all four operations -> described : 1
four operations described -> previously : 1
operations described previously -> will : 1
described previously will -> be : 1
previously will be -> also : 1
will be also -> implemented : 1
be also implemented -> in : 1
also implemented in -> this : 1
implemented in this -> in : 1
in this in -> we : 1
in this in -> this : 1
this in we -> need : 1
we need a -> a : 1
we need a -> method : 1
we need a -> square : 1
we need a -> function : 2
we need a -> presence : 1
we need a -> data : 1
we need a -> hash : 1
we need a -> collision : 1
we need a -> chaining : 1
we need a -> new : 1
we need a -> node : 1
need a a -> and : 1
a a and -> a : 1
a and a -> method : 1
a and a -> the : 1
and a method -> to : 1
method to let -> us : 1
to let us -> know : 1
let us know -> the : 1
us know the -> number : 1
know the number -> of : 1
of items that -> the : 1
items that the -> which : 1
that the which -> is : 1
which is named -> based : 1
is named based -> on : 1
named based on -> this : 1
based on this -> the : 1
based on this -> we : 3
based on this -> reference : 1
on this the -> file : 1
this the file -> will : 1
the file will -> contain : 1
file will contain -> the : 1
will contain the -> following : 1
will contain the -> and : 1
contain the following -> file : 1
the following file -> int : 1
following file int -> int : 1
file int int -> int : 1
int int void -> int : 2
int int void -> instantiate : 1
int void int -> int : 1
int void int -> an : 1
void int int -> void : 1
void int int -> are : 1
void int an -> item : 1
int an item -> in : 1
in the implement -> the : 1
the implement the -> it : 1
implement the it -> simply : 1
the it simply -> returns : 1
it simply returns -> the : 1
simply returns the -> value : 1
returns the value -> of : 4
the selected we -> need : 2
the selected we -> can : 1
selected we need -> to : 2
need to ensure -> that : 1
need to ensure -> where : 1
that the passed -> to : 1
the passed to -> the : 1
passed to the -> method : 1
passed to the -> function : 1
to the method -> is : 1
to the method -> as : 2
to the method -> will : 1
the method is -> not : 1
the method is -> since : 1
the method is -> even : 1
method is not -> out : 1
is not out -> of : 1
not out of -> the : 1
out of the -> implementation : 2
the implementation should -> be : 9
implementation should be -> as : 9
be as check -> if : 3
as check if -> the : 3
as check if -> hash : 1
check if the -> index : 6
check if the -> queue : 2
check if the -> slot : 1
check if the -> equals : 1
if the index -> is : 6
the index is -> out : 6
the index is -> we : 1
the index is -> the : 1
index is out -> of : 9
is out of -> index : 8
is out of -> the : 1
out of index -> return : 2
out of index -> copy : 2
out of index -> if : 4
of index return -> return : 1
of index return -> start : 1
index return return -> we : 1
return return we -> can : 3
preceding the complexity -> of : 1
of the method -> is : 2
of the method -> should : 1
method is since -> it : 1
since it depend -> on : 1
it depend on -> the : 2
on the number -> of : 7
of the an -> item : 2
the list the -> we : 1
the list the -> element : 3
list the we -> need : 1
need to increase -> the : 1
to increase the -> capacity : 1
increase the capacity -> of : 1
the capacity of -> the : 1
capacity of the -> variable : 1
of the variable -> each : 1
the variable each -> time : 1
variable each time -> we : 1
each time we -> insert : 1
each time we -> want : 1
time we insert -> a : 1
we insert a -> new : 5
we insert a -> number : 1
insert a new -> after : 1
insert a new -> item : 6
insert a new -> element : 4
insert a new -> we : 3
insert a new -> node : 2
insert a new -> key : 4
insert a new -> to : 2
insert a new -> pair : 1
a new after -> we : 1
new after we -> need : 1
new after we -> can : 1
after we need -> to : 1
need to iterate -> each : 2
need to iterate -> through : 3
need to iterate -> the : 1
to iterate each -> item : 1
to iterate each -> element : 1
iterate each item -> of : 1
each item of -> the : 1
item of the -> old : 1
item of the -> specific : 1
item of the -> array : 1
item of the -> left : 1
of the old -> and : 1
the old and -> then : 1
old and then -> assign : 1
and then assign -> them : 1
and then assign -> the : 2
then assign them -> to : 1
assign them to -> the : 1
them to the -> we : 2
we also need -> to : 5
we also need -> another : 1
also need to -> ensure : 1
also need to -> point : 1
also need to -> refactor : 1
also need to -> include : 1
also need to -> check : 1
to ensure where -> we : 1
ensure where we -> put : 1
where we put -> the : 1
we put the -> new : 1
put the new -> item : 1
the new item -> stated : 1
the new item -> in : 1
new item stated -> by : 1
item stated by -> variable : 1
stated by variable -> passed : 1
by variable passed -> by : 1
variable passed by -> the : 1
passed by the -> implementation : 1
by the implementation -> should : 1
be as int -> check : 1
be as int -> the : 2
be as int -> bool : 1
be as int -> int : 5
be as int -> initial : 1
be as int -> bstnode : 1
as int check -> if : 1
int check if -> the : 1
of index copy -> the : 2
index copy the -> current : 2
copy the current -> int : 2
the current int -> oldarray : 2
current int oldarray -> increase : 1
current int oldarray -> decrease : 1
int oldarray increase -> the : 1
oldarray increase the -> array : 1
increase the array -> initialize : 1
the array initialize -> a : 2
array initialize a -> new : 2
initialize a new -> new : 2
initialize a new -> and : 1
initialize a new -> add : 1
initialize a new -> int : 13
a new new -> fill : 2
new new fill -> the : 2
new fill the -> new : 2
fill the new -> array : 1
fill the new -> and : 1
the new array -> with : 1
the new array -> to : 1
new array with -> inserted : 1
array with inserted -> i : 1
with inserted i -> remove : 1
inserted i remove -> copied : 1
i remove copied -> delete : 2
remove copied delete -> we : 1
remove copied delete -> to : 1
copied delete we -> can : 1
delete we can -> see : 1
need to counter -> and : 1
to counter and -> to : 1
counter and to -> assign : 1
and to assign -> an : 1
to assign an -> old : 1
assign an old -> array : 1
an old array -> to : 1
old array to -> new : 1
array to new -> since : 1
to new since -> it : 1
new since it -> will : 1
since it will -> iterate : 2
since it will -> be : 2
since it will -> always : 1
it will iterate -> all : 1
it will iterate -> through : 1
will iterate all -> elements : 1
will iterate all -> and : 1
iterate all elements -> of : 1
of the number -> of : 4
of items the -> complexity : 1
of items the -> vector : 1
items the complexity -> will : 1
the complexity will -> be : 2
the complexity will -> the : 1
will be where -> is : 6
be where is -> in : 1
be where is -> the : 5
where is in -> the : 1
in the number -> of : 1
of the out -> the : 1
the out the -> index : 1
the list method -> will : 2
list method will -> also : 1
list method will -> iterate : 1
method will also -> iterate : 1
will also iterate -> each : 1
also iterate each -> list : 1
iterate each list -> until : 1
each list until -> it : 1
list until it -> finds : 2
until it finds -> the : 3
until it finds -> null : 2
it finds the -> matched : 1
it finds the -> selected : 1
it finds the -> other : 1
it finds the -> searched : 1
it finds the -> middle : 1
finds the matched -> the : 1
the matched the -> return : 1
matched the return -> value : 1
return value of -> this : 1
value of this -> method : 1
of this method -> will : 2
of this method -> is : 1
this method will -> be : 2
method will be -> the : 2
will be the -> index : 1
will be the -> average : 1
will be the -> selected : 1
will be the -> neighbor : 2
will be the -> following : 1
will be the -> first : 1
will be the -> we : 1
will be the -> output : 1
will be the -> collection : 1
will be the -> same : 2
will be the -> minimum : 1
will be the -> current : 2
will be the -> parent : 1
will be the -> left : 1
will be the -> right : 1
will be the -> a : 1
will be the -> largest : 1
be the index -> it : 1
the index it -> will : 1
index it will -> return : 1
it will return -> if : 2
it will return -> the : 2
it will return -> sublist : 1
it will return -> and : 1
it will return -> an : 1
it will return -> it : 1
will return if -> no : 1
will return if -> the : 1
will return if -> it : 1
return if no -> result : 1
return if no -> val : 1
return if no -> any : 2
if no result -> is : 1
no result is -> the : 1
result is the -> implementation : 1
is the implementation -> should : 1
is the implementation -> of : 6
be as looping -> through : 1
as looping through -> the : 1
looping through the -> array : 1
through the array -> return : 1
through the array -> elements : 1
through the array -> so : 1
through the array -> from : 1
the array return -> the : 1
array return the -> array : 1
return the array -> index : 1
the array index -> if : 1
array index if -> value : 1
index if value -> is : 1
if value is -> i : 1
value is i -> return : 1
is i return -> return : 1
i return return -> you : 1
i return return -> if : 1
return return you -> can : 1
return you can -> the : 1
you can the -> complexity : 1
can the complexity -> of : 2
complexity of this -> method : 1
complexity of this -> operation : 11
complexity of this -> can : 1
complexity of this -> function : 4
complexity of this -> sorting : 4
complexity of this -> counting : 1
complexity of this -> search : 1
complexity of this -> searching : 1
be the average -> and : 1
the average and -> worst : 2
the average and -> the : 3
average and worst -> case : 1
average and worst -> the : 1
average and worst -> in : 2
and worst case -> since : 1
and worst case -> and : 1
and worst case -> a : 1
and worst case -> sort : 1
and worst case -> the : 2
worst case since -> it : 1
case since it -> will : 1
will iterate through -> all : 3
will iterate through -> each : 1
will iterate through -> the : 1
through all list -> in : 1
all list in -> the : 1
list in the -> best : 1
in the best -> it : 1
in the best -> the : 3
in the best -> an : 1
in the best -> case : 4
in the best -> we : 2
the best it -> can : 2
best it can -> is : 1
best it can -> give : 1
it can is -> found : 1
can is found -> at : 1
is found at -> the : 1
is found at -> index : 2
found at the -> first : 1
at the first -> an : 1
at the first -> item : 1
at the first -> so : 1
the first an -> item : 1
first an item -> from : 1
method will iterate -> all : 1
iterate all and -> then : 1
all and then -> assign : 1
then assign the -> new : 1
then assign the -> previous : 1
assign the new -> array : 1
assign the new -> to : 1
new array to -> hold : 1
array to hold -> new : 1
to hold new -> it : 1
hold new it -> will : 1
new it will -> skip : 1
it will skip -> the : 1
will skip the -> selected : 1
skip the selected -> to : 1
the selected to -> remove : 1
selected to remove -> the : 1
to remove the -> the : 1
to remove the -> top : 1
to remove the -> a : 1
to remove the -> front : 1
to remove the -> last : 1
to remove the -> from : 1
to remove the -> dash : 1
remove the the -> implementation : 1
remove the the -> complete : 1
remove the the -> key : 1
int oldarray decrease -> the : 1
oldarray decrease the -> array : 1
decrease the array -> initialize : 1
the new and -> remove : 1
the new and -> then : 1
new and remove -> the : 1
and remove the -> selected : 1
and remove the -> element : 1
and remove the -> it : 1
remove the selected -> i : 1
the selected i -> remove : 1
the selected i -> i : 3
selected i remove -> copied : 1
copied delete to -> the : 1
delete to the -> complexity : 1
to the complexity -> of : 1
method is even -> if : 1
is even if -> the : 1
even if the -> user : 1
the user removes -> the : 1
user removes the -> first : 1
removes the first -> a : 1
the first a -> list : 1
first a list -> consume : 1
a list consume -> our : 1
list consume our -> new : 1
consume our new -> data : 2
our new data -> we : 2
our new data -> the : 1
our new data -> move : 1
our new data -> type : 1
new data we -> will : 1
new data we -> are : 2
we will initialize -> a : 1
will initialize a -> new : 1
a new and -> give : 1
a new and -> at : 1
new and give -> some : 1
and give some -> items : 1
give some items -> to : 1
some items to -> we : 1
items to we -> will : 1
to we will -> then : 1
to we will -> get : 1
will then insert -> several : 1
then insert several -> items : 1
insert several items -> again : 1
insert several items -> in : 1
several items again -> and : 1
items again and -> find : 1
again and find -> out : 1
find out if -> it : 2
find out if -> a : 1
find out if -> the : 1
out if it -> we : 1
out if it -> matches : 1
if it we -> will : 1
it we will -> remove : 1
it we will -> rotate : 1
we will remove -> an : 1
will remove an -> item : 1
remove an item -> that : 1
remove an item -> from : 1
an item that -> we : 1
item that we -> previously : 1
that we previously -> searched : 1
we previously searched -> and : 1
previously searched and -> then : 1
searched and then -> search : 1
and then search -> for : 1
then search for -> the : 1
search for the -> item : 1
search for the -> desired : 1
search for the -> node : 1
for the item -> again : 1
the item again -> to : 1
item again to -> ensure : 1
again to ensure -> it : 1
to ensure it -> has : 1
ensure it has -> now : 1
it has now -> here : 1
has now here -> is : 1
now here is -> the : 1
the code that -> we : 1
code that we -> can : 1
can find in -> the : 2
can find in -> time : 1
find in the -> file : 1
find in the -> int : 1
in the file -> of : 2
in the file -> namespace : 1
the file of -> the : 2
file of the -> file : 1
file of the -> project : 1
of the file -> namespace : 1
namespace initialize a -> list : 1
initialize a list -> list : 1
a list list -> add : 1
list list add -> several : 1
list add several -> items : 1
add several items -> to : 1
several items to -> the : 1
items to the -> print : 1
to the print -> current : 1
the print current -> cout : 1
print current cout -> i : 1
current cout i -> i : 1
cout cout endl -> insert : 1
cout cout endl -> search : 2
cout cout endl -> find : 2
cout endl insert -> several : 1
endl insert several -> items : 1
several items in -> the : 1
in the middle -> of : 1
in the middle -> position : 1
the middle of -> the : 2
middle of the -> print : 1
middle of the -> we : 1
of the print -> the : 1
the print the -> list : 1
print the list -> cout : 8
the list cout -> list : 2
the list cout -> cout : 6
list cout list -> i : 2
cout list i -> i : 2
list i i -> cout : 2
cout endl search -> value : 2
endl search value -> cout : 2
search value cout -> element : 2
value cout element -> int : 1
value cout element -> result : 1
cout element int -> result : 1
element int result -> cout : 1
int result cout -> is : 1
result cout is -> not : 2
cout is not -> cout : 4
cout is not -> remove : 1
cout is not -> of : 1
is not cout -> is : 2
is not cout -> adding : 2
is not cout -> remove : 1
is not cout -> return : 1
not cout is -> found : 2
cout is found -> at : 2
found at index -> cout : 2
at index cout -> endl : 1
at index cout -> print : 1
at index cout -> return : 1
index cout endl -> remove : 1
cout endl remove -> index : 1
cout endl remove -> first : 1
endl remove index -> cout : 1
remove index cout -> element : 1
index cout element -> at : 1
cout element at -> index : 1
element at index -> cout : 1
index cout print -> the : 1
cout print the -> list : 3
cout element result -> cout : 1
element result cout -> is : 1
index cout return -> our : 1
cout return our -> data : 1
return our data -> type : 1
our data type -> works : 1
data type works -> well : 1
type works well -> and : 1
works well and -> we : 1
well and we -> can : 1
we can apply -> all : 1
we can apply -> one : 1
can apply all -> the : 1
apply all the -> operations : 1
all the operations -> that : 1
operations that should -> if : 1
that should if -> we : 1
should if we -> build : 1
the following to -> is : 1
the following to -> the : 1
following to is -> the : 1
to is the -> basic : 1
to is the -> total : 1
is the basic -> building : 1
the basic building -> block : 1
basic building block -> of : 1
building block of -> many : 1
block of many -> data : 1
of many data -> structures : 1
many data structures -> which : 1
data structures which -> we : 1
structures which we -> will : 1
will discuss in -> this : 1
will discuss in -> the : 2
in this node -> has : 1
this node has -> two : 1
node has two -> its : 1
node has two -> please : 1
has two its -> first : 1
two its first -> function : 1
its first function -> is : 1
first function is -> that : 1
first function is -> which : 1
function is that -> it : 1
that it holds -> a : 1
it holds a -> piece : 1
holds a piece -> of : 1
a piece of -> also : 1
piece of also -> known : 1
of also known -> as : 1
also known as -> the : 3
also known as -> in : 2
as the of -> the : 1
as the of -> we : 1
the of the -> second : 1
the of the -> selected : 1
the of the -> current : 1
the of the -> the : 1
the of the -> two : 1
of the second -> function : 1
of the second -> it : 3
of the second -> get : 1
of the second -> itr : 1
of the second -> if : 1
of the second -> the : 1
of the second -> and : 1
the second function -> is : 1
second function is -> its : 1
function is its -> connectivity : 1
is its connectivity -> between : 1
its connectivity between -> another : 1
connectivity between another -> node : 1
between another node -> and : 1
another node and -> using : 1
and using an -> object : 1
using an object -> reference : 1
an object reference -> also : 1
object reference also -> known : 1
reference also known -> as : 1
as the based -> on : 1
the based on -> this : 2
on this we -> can : 4
on this we -> will : 1
create a data -> type : 1
type in as -> int : 1
in as int -> node : 1
as int node -> will : 1
int node will -> also : 1
node will also -> use : 1
will also use -> the : 1
will also use -> our : 1
also use the -> following : 1
the following represent -> a : 1
following represent a -> single : 1
represent a single -> create : 1
a single create -> three : 1
single create three -> single : 1
create three single -> nodes : 1
three single nodes -> using : 1
single nodes using -> our : 1
nodes using our -> new : 1
using our new -> data : 2
new data the -> nodes : 1
new data the -> data : 1
data the nodes -> will : 1
the nodes will -> contain : 1
nodes will contain -> the : 1
contain the and -> each : 1
the and each -> the : 1
and each the -> code : 1
each the code -> as : 1
code as new -> new : 1
as new new -> new : 2
new new new -> since : 1
new new new -> can : 1
new new since -> we : 1
new since we -> pointer : 1
since we pointer -> for : 1
we pointer for -> all : 1
pointer for all -> it : 1
for all it -> will : 1
all it will -> be : 1
will be automatically -> filled : 1
be automatically filled -> with : 1
automatically filled with -> the : 1
filled with the -> null : 1
with the null -> pointer : 1
the null pointer -> the : 1
null pointer the -> illustration : 1
pointer the illustration -> will : 1
the illustration will -> be : 2
illustration will be -> as : 2
be as time -> to : 1
as time to -> connect : 1
time to connect -> the : 1
to connect the -> preceding : 1
to connect the -> child : 1
connect the preceding -> three : 1
the preceding three -> nodes : 2
preceding three nodes -> so : 1
preceding three nodes -> will : 1
three nodes so -> that : 1
nodes so that -> it : 1
that it becomes -> a : 1
that it becomes -> the : 1
that it becomes -> as : 1
it becomes a -> node : 1
becomes a node -> we : 1
a node we -> will : 1
node we will -> set : 1
node we will -> see : 1
we will set -> the : 2
we will set -> it : 1
will set the -> pointer : 1
will set the -> jump : 1
set the pointer -> of : 3
the pointer of -> to : 4
the pointer of -> the : 14
the pointer of -> this : 2
pointer of to -> set : 1
pointer of to -> and : 1
pointer of to -> indicate : 1
pointer of to -> the : 1
of to set -> the : 1
to set the -> pointer : 1
to set the -> new : 1
of to and -> keep : 1
to and keep -> the : 1
and keep the -> pointer : 1
keep the pointer -> of : 1
of to indicate -> that : 1
to indicate that -> the : 1
to indicate that -> not : 1
to indicate that -> a : 1
indicate that the -> end : 1
that the end -> of : 1
end of the -> the : 1
end of the -> node : 2
end of the -> array : 1
end of the -> that : 1
end of the -> first : 1
end of the -> suppose : 1
end of the -> this : 1
end of the -> a : 2
end of the -> we : 1
end of the -> no : 1
code will be -> as : 6
be as executing -> the : 1
as executing the -> preceding : 1
executing the preceding -> code : 1
code the illustration -> of : 1
the illustration of -> the : 1
illustration of the -> preceding : 1
three nodes will -> be : 1
nodes will be -> as : 1
be as prove -> that : 1
as prove that -> our : 1
prove that our -> code : 1
that our code -> is : 1
our code is -> we : 1
code is we -> can : 1
we can add -> a : 2
we can add -> several : 1
can add a -> function : 1
can add a -> new : 1
add a function -> to : 1
a function to -> print : 1
a function to -> iterate : 1
a function to -> call : 1
a function to -> invoke : 1
function to print -> the : 1
print the node -> the : 1
the node the -> following : 1
the node the -> nextnode : 2
node the following -> is : 2
code for creating -> a : 1
for creating a -> data : 1
creating a data -> initializing : 1
a data initializing -> the : 1
data initializing the -> data : 1
initializing the data -> creating : 1
the data creating -> a : 1
data creating a -> node : 1
creating a node -> and : 1
a node and -> printing : 1
node and printing -> the : 1
and printing the -> file : 1
printing the file -> namespace : 1
file namespace int -> node : 1
file namespace int -> flag : 1
file namespace int -> variable : 1
file namespace int -> iterate : 1
file namespace int -> int : 1
file namespace int -> create : 2
namespace int node -> it : 1
int node it -> will : 1
node it will -> print : 1
it will print -> the : 2
print the initial -> until : 2
the initial until -> it : 2
initial until it -> finds : 2
it finds null -> for : 2
finds null for -> the : 2
null for the -> next : 2
for the next -> that : 2
the next that -> indicate : 2
next that indicate -> the : 2
that indicate the -> end : 2
indicate the end -> of : 3
of the node -> cout : 2
of the node -> to : 1
of the node -> after : 1
the node cout -> node : 2
node cout node -> cout : 2
cout node cout -> null : 2
node cout null -> node : 1
node cout null -> new : 1
cout null node -> new : 1
null node new -> null : 3
node new null -> node : 2
node new null -> null : 1
new null node -> new : 2
new null null -> null : 2
null null null -> print : 2
null null print -> the : 2
null print the -> return : 2
print the return -> we : 2
the return we -> can : 4
the return we -> need : 1
function to iterate -> the : 1
to iterate the -> input : 1
to iterate the -> unsorted : 2
to iterate the -> string : 2
to iterate the -> then : 1
to iterate the -> hash : 1
iterate the input -> node : 1
the input node -> until : 1
input node until -> the : 1
node until the -> pointer : 1
until the pointer -> of : 1
pointer of the -> is : 1
pointer of the -> new : 10
pointer of the -> previous : 1
pointer of the -> current : 13
pointer of the -> node : 1
pointer of the -> point : 1
pointer of the -> must : 1
pointer of the -> should : 2
pointer of the -> right : 1
the is and -> since : 1
is and since -> we : 2
and since we -> will : 2
and since we -> can : 2
and since we -> have : 1
and since we -> need : 1
since we will -> use : 1
since we will -> pass : 1
since we will -> be : 1
use the function -> to : 1
the function to -> prove : 1
the function to -> become : 1
function to prove -> that : 1
to prove that -> the : 3
to prove that -> an : 1
prove that the -> node : 1
prove that the -> next : 1
prove that the -> selected : 1
that the node -> chain : 1
the node chain -> is : 2
node chain is -> working : 1
node chain is -> that : 1
chain is working -> by : 1
is working by -> running : 1
working by running -> the : 1
running the preceding -> we : 2
following we get -> what : 1
we get what -> we : 1
get what we -> node : 1
what we node -> chaining : 1
we node chaining -> is : 1
node chaining is -> working : 1
chaining is working -> and : 1
is working and -> we : 1
working and we -> have : 1
and we have -> a : 2
and we have -> discussed : 1
and we have -> to : 1
a new data -> type : 4
new data type -> named : 2
new data type -> if : 1
new data type -> in : 1
new data type -> with : 1
data type named -> a : 1
data type named -> to : 1
type named a -> problem : 1
named a problem -> will : 1
a problem will -> occur : 1
problem will occur -> since : 1
will occur since -> we : 1
occur since we -> can : 1
since we can -> only : 2
since we can -> ignore : 1
since we can -> omit : 1
since we can -> ensure : 2
we can only -> store : 1
we can only -> put : 1
we can only -> get : 1
we can only -> add : 1
we can only -> access : 1
we can only -> fetch : 1
type to the -> property : 1
to the property -> of : 1
the property of -> the : 1
property of the -> data : 1
the data should -> we : 1
data should we -> create : 1
should we create -> a : 1
we create a -> new : 1
data type if -> we : 2
type if we -> want : 1
type if we -> need : 2
want to deal -> with : 1
to deal with -> other : 1
deal with other -> data : 1
with other data -> such : 1
other data such -> as : 1
data such as -> or : 1
data such as -> linked : 2
such as or -> the : 1
as or the -> answer : 1
or the answer -> is : 1
the answer is -> if : 1
answer is if -> we : 1
if we recall -> our : 1
we recall our -> discussion : 1
recall our discussion -> about : 1
our discussion about -> with : 1
discussion about with -> in : 1
about with in -> data : 1
with in data -> structures : 1
in we can -> refactor : 1
in we can -> utilize : 1
preceding data type -> to : 2
type to handle -> not : 1
to handle not -> only : 1
handle not only -> data : 1
not only data -> but : 1
only data but -> also : 1
data but also -> all : 1
but also all -> various : 1
also all various -> data : 1
all various data -> types : 1
various data types -> available : 1
data types available -> in : 1
types available in -> the : 1
the class will -> now : 1
class will now -> look : 1
will now look -> as : 1
now look as -> t : 1
look as t -> we : 1
as t we -> can : 1
t we can -> see : 1
can see from -> the : 1
see from the -> preceding : 1
code we added -> a : 1
we added a -> constructor : 1
added a constructor -> to : 1
a constructor to -> the : 1
constructor to the -> data : 1
to the data -> the : 2
to the data -> type : 1
the data the -> initialization : 1
the data the -> code : 2
the data the -> implementation : 1
the data the -> current : 1
the data the -> time : 2
the data the -> first : 1
the data the -> front : 1
the data the -> next : 1
the data the -> following : 1
data the initialization -> of : 1
the initialization of -> the : 1
initialization of the -> instance : 1
of the instance -> of : 1
class can be -> simplified : 1
can be simplified -> as : 1
be simplified as -> new : 1
simplified as new -> new : 1
new new can -> see : 1
new can see -> now : 1
can see now -> we : 1
see now we -> just : 1
now we just -> need : 1
just need a -> one : 1
need a one -> line : 1
a one line -> instruction : 1
one line instruction -> to : 1
line instruction to -> create : 1
instruction to create -> a : 1
create a single -> node : 1
a single node -> since : 1
single node since -> it : 1
node since it -> has : 1
a the rest -> of : 1
the rest of -> the : 4
rest of the -> operation : 1
rest of the -> we : 1
rest of the -> if : 1
rest of the -> digits : 1
of the operation -> is : 9
of the operation -> should : 5
of the operation -> will : 4
the operation is -> the : 4
the operation is -> since : 1
the operation is -> regardless : 1
the operation is -> where : 2
the operation is -> which : 2
the operation is -> for : 1
the operation is -> in : 1
operation is the -> same : 2
operation is the -> we : 1
operation is the -> when : 1
operation is the -> items : 1
operation is the -> which : 1
operation is the -> maximum : 1
is the same -> as : 4
is the same -> for : 1
the same as -> the : 8
the same as -> of : 1
the same as -> data : 1
the same as -> they : 1
the same as -> removing : 1
the same as -> our : 1
the same as -> to : 1
same as the -> previous : 1
same as the -> singly : 1
same as the -> operation : 1
same as the -> implementation : 2
same as the -> other : 1
same as the -> time : 1
same as the -> in : 1
as the previous -> full : 1
the previous full -> code : 1
previous full code -> in : 1
full code in -> the : 1
in the full -> code : 1
the full code -> for : 1
the full code -> can : 1
full code for -> this : 1
for this template -> class : 1
this template class -> should : 1
template class should -> be : 1
class should be -> as : 3
be as file -> namespace : 10
file namespace t -> it : 1
namespace t it -> will : 1
t it will -> print : 1
cout null new -> null : 1
null new null -> new : 2
null new null -> null : 1
new null new -> null : 2
return we need -> to : 1
function to become -> a : 1
to become a -> function : 1
to become a -> and : 1
become a function -> we : 1
a function we -> have : 1
function we have -> discussed : 1
function we have -> to : 1
we have discussed -> in : 5
we have discussed -> so : 2
we have discussed -> several : 1
we have discussed -> how : 1
we have discussed -> binary : 1
we have discussed -> there : 1
we have discussed -> a : 1
we have discussed -> another : 1
we have discussed -> applications : 1
have discussed in -> data : 1
have discussed in -> this : 2
have discussed in -> the : 1
have discussed in -> preceding : 1
discussed in data -> structures : 1
algorithms in since -> we : 1
in since we -> will : 1
we will pass -> a : 1
will pass a -> class : 1
pass a class -> template : 1
a class template -> to : 1
class template to -> we : 1
template to we -> will : 1
get a similar -> output : 1
a similar output -> when : 1
similar output when -> we : 1
output when we -> run : 1
preceding code comparing -> it : 1
code comparing it -> to : 1
comparing it to -> as : 1
it to as -> using : 1
to as using -> our : 1
as using our -> new : 1
new data move -> on : 1
data move on -> to : 1
on to creating -> the : 1
to creating the -> linked : 1
creating the linked -> a : 1
the linked a -> singly : 1
linked a singly -> linked : 1
linked list linked -> known : 1
linked list linked -> is : 1
list linked known -> as : 1
linked known as -> is : 1
known as is -> a : 1
as is a -> sequence : 1
as is a -> if : 1
is a sequence -> of : 1
sequence of items -> linked : 1
of items linked -> with : 1
items linked with -> each : 1
linked with each -> actually : 1
with each actually -> a : 1
each actually a -> chaining : 1
actually a chaining -> of : 1
a chaining of -> each : 1
chaining of each -> node : 1
of each node -> contains : 1
of each node -> in : 1
each node contains -> the : 1
node contains the -> value : 1
contains the value -> and : 1
the value and -> the : 1
the value and -> get : 1
value and the -> next : 1
and the next -> in : 1
and the next -> one : 2
the next in -> other : 1
next in other -> each : 1
in other each -> item : 1
other each item -> in : 1
each item in -> the : 1
in the linked -> list : 1
in the linked -> similar : 1
in the linked -> an : 1
the linked list -> has : 5
the linked list -> and : 1
the linked list -> until : 2
the linked list -> is : 5
the linked list -> it : 1
the linked list -> to : 1
the linked list -> the : 1
the linked list -> containing : 1
linked list has -> to : 1
linked list has -> a : 1
linked list has -> and : 1
linked list has -> only : 1
linked list has -> no : 1
linked list has -> pointer : 1
list has to -> its : 1
has to its -> next : 1
to its next -> item : 1
its next item -> in : 1
next item in -> the : 1
the the thing -> that : 1
the thing that -> differs : 1
thing that differs -> between : 1
that differs between -> the : 1
differs between the -> linked : 1
between the linked -> list : 1
linked list and -> the : 1
linked list and -> a : 1
list and the -> node : 1
and the node -> chain : 1
chain is that -> the : 1
is that the -> linked : 1
is that the -> can : 1
that the linked -> list : 1
list has a -> and : 1
has a and -> a : 1
and a the -> informs : 1
a the informs -> the : 1
the informs the -> first : 1
the informs the -> last : 1
informs the first -> item : 1
the first item -> and : 1
the first item -> of : 1
the first item -> as : 2
the first item -> in : 1
first item and -> the : 1
item and the -> informs : 1
and the informs -> the : 1
informs the last -> item : 1
the last item -> in : 3
the last item -> of : 1
last item in -> the : 3
the linked similar -> to : 1
linked similar to -> the : 1
to the list -> we : 1
to the list -> the : 3
to the list -> in : 1
list we discussed -> the : 1
discussed the linked -> list : 1
list has and -> where : 1
has and where -> all : 1
and where all -> of : 1
where all of -> the : 1
the operations have -> the : 1
operations have the -> same : 1
have the same -> functionality : 1
have the same -> available : 1
the same functionality -> compared : 1
the same functionality -> as : 2
same functionality compared -> since : 1
functionality compared since -> we : 1
compared since we -> now : 1
since we now -> have : 1
we now have -> and : 1
we now have -> all : 1
we now have -> only : 1
we now have -> an : 1
now have and -> we : 1
have and we -> will : 1
will also create -> others : 1
will also create -> a : 1
also create others -> and : 1
create others and -> these : 1
others and these -> are : 1
and these are -> and : 1
these are and -> the : 1
these are and -> does : 1
are and the -> declaration : 1
are and the -> following : 1
are and the -> is : 1
and the declaration -> of : 1
the declaration of -> the : 4
the declaration of -> data : 2
declaration of the -> class : 1
declaration of the -> data : 3
the class should -> be : 2
as int the -> first : 1
as int the -> given : 1
int the first -> node : 2
the first node -> in : 2
the first node -> and : 1
first node in -> the : 2
node in the -> or : 4
node in the -> left : 1
node in the -> similar : 1
node in the -> we : 1
node in the -> cell : 2
node in the -> same : 1
in the or -> null : 4
the or null -> if : 4
or null if -> the : 2
or null if -> void : 2
null if the -> last : 2
if the last -> node : 2
the last node -> in : 2
last node in -> the : 2
null if void -> void : 2
if void void -> void : 2
void void void -> t : 2
void void void -> additional : 2
void void void -> void : 1
void void void -> that : 1
void void t -> int : 2
void t int -> void : 2
t int void -> void : 2
int void void -> void : 2
int void void -> bool : 3
int void void -> we : 1
void void additional -> int : 2
void additional int -> void : 2
additional int void -> you : 1
additional int void -> an : 1
int void you -> can : 1
void you can -> see : 1
you can see -> in : 1
the preceding declaration -> we : 2
preceding declaration we -> have : 1
preceding declaration we -> derive : 1
declaration we have -> which : 1
have which has -> the : 1
which has the -> same : 1
which has the -> then : 1
has the same -> functionality : 1
same functionality as -> the : 1
same functionality as -> operations : 1
functionality as the -> which : 1
as the which -> is : 2
used to inform -> us : 1
to inform us -> about : 1
inform us about -> the : 1
us about the -> number : 1
about the number -> of : 1
in the there -> is : 1
there is also -> operation : 1
is also operation -> to : 1
also operation to -> make : 1
operation to make -> it : 1
to make it -> easier : 1
make it easier -> to : 1
it easier to -> print : 1
easier to print -> the : 1
print the content -> of : 2
the content of -> the : 2
content of the -> an : 1
content of the -> using : 1
the linkedlist first -> operation : 1
linkedlist first operation -> we : 1
first operation we -> are : 1
operation we are -> going : 1
to discuss is -> it : 1
to discuss is -> removing : 1
discuss is it -> will : 1
is it will -> return : 1
is it will -> append : 1
return the of -> the : 1
return the of -> return : 3
the selected it -> will : 1
selected it will -> return : 1
return if the -> selected : 1
return if the -> stack : 1
return if the -> middle : 2
return if the -> node : 1
if the selected -> index : 2
if the selected -> is : 1
the selected index -> is : 5
the selected index -> delete : 2
selected index is -> out : 1
selected index is -> as : 1
selected index is -> i : 2
selected index is -> similar : 1
the method should -> be : 1
method should be -> as : 1
index return start -> from : 1
return start from -> the : 1
start from the -> node : 1
from the node -> iterate : 1
the node iterate -> through : 1
node iterate through -> the : 1
through the linked -> list : 1
linked list until -> it : 1
linked list until -> we : 1
finds the selected -> i : 1
selected i i -> node : 1
selected i i -> index : 2
i i node -> simply : 1
i node simply -> return : 1
node simply return -> the : 1
simply return the -> node : 1
simply return the -> linear : 1
return the node -> return : 1
return the node -> must : 1
the node return -> we : 1
node return we -> can : 1
operation is since -> it : 1
iterate through elements -> that : 1
through elements that -> the : 1
elements that the -> class : 1
that the class -> in : 1
the class in -> the : 1
the class in -> we : 1
class in the -> best : 1
class in the -> preceding : 1
class in the -> code : 1
the best the -> complexity : 2
the best the -> searched : 1
the best the -> time : 2
best the complexity -> can : 1
best the complexity -> is : 1
can be if -> the : 1
be if the -> selected : 1
index is as -> we : 1
is as we -> discussed : 1
is as we -> can : 3
is as we -> put : 1
discussed the complexity -> is : 1
the complexity is -> always : 1
the complexity is -> also : 1
the complexity is -> since : 1
complexity is always -> matter : 1
is always matter -> which : 1
always matter which -> index : 1
matter which index -> is : 1
which index is -> an : 1
index is an -> item : 1
is an item -> in : 1
the linkedlist move -> on : 1
linkedlist move on -> to : 1
on to operation -> for : 1
to operation for -> the : 1
operation for the -> there : 1
operation for the -> data : 1
for the there -> are : 1
the there are -> four : 1
the there are -> three : 1
the there are -> the : 1
are four cases -> for : 1
four cases for -> this : 1
cases for this -> and : 1
for this and -> they : 1
this and they -> new : 1
and they new -> item : 1
they new item -> is : 1
new item is -> inserted : 3
new item is -> added : 1
item is inserted -> at : 1
item is inserted -> into : 1
item is inserted -> in : 1
is inserted at -> the : 1
inserted at the -> beginning : 1
of the linked -> which : 2
of the linked -> where : 1
of the linked -> list : 3
of the linked -> to : 1
of the linked -> please : 1
of the linked -> we : 1
the linked which -> is : 2
linked which is -> so : 2
which is so -> that : 1
which is so -> it : 1
is so that -> it : 1
it becomes the -> new : 2
becomes the new -> new : 2
the new new -> item : 2
new new item -> is : 2
item is added -> to : 1
is added to -> an : 1
added to an -> empty : 1
to an empty -> linked : 1
an empty linked -> if : 1
empty linked if -> the : 1
linked if the -> linked : 1
if the linked -> list : 6
list has only -> one : 1
has only one -> point : 1
has only one -> item : 1
has only one -> child : 1
has only one -> for : 1
only one point -> to : 1
one point to -> the : 1
point to the -> only : 1
point to the -> current : 6
point to the -> new : 5
point to the -> pointer : 1
point to the -> the : 2
point to the -> beginning : 1
to the only -> new : 1
the only new -> item : 1
only new item -> is : 1
is inserted into -> the : 1
inserted into the -> last : 1
inserted into the -> queue : 1
into the last -> of : 1
the last of -> the : 1
last of the -> linked : 1
is so it -> becomes : 1
is inserted in -> the : 1
inserted in the -> other : 1
inserted in the -> last : 1
in the other -> position : 2
the other position -> of : 2
other position of -> the : 2
position of the -> linked : 2
position of the -> selected : 1
position of the -> suppose : 1
position of the -> we : 1
position of the -> vector : 1
position of the -> found : 1
position of the -> when : 1
position of the -> searched : 3
position of the -> first : 1
position of the -> value : 1
position of the -> the : 1
position of the -> word : 1
position of the -> pattern : 1
position of the -> element : 1
the linked where -> to : 1
linked where to -> create : 1
where to create -> the : 1
create the implementation -> for : 1
the implementation for -> inserting : 1
implementation for inserting -> an : 1
for inserting an -> for : 1
inserting an for -> cases : 1
an for cases -> and : 1
for cases and -> we : 1
cases and we -> can : 1
we can solve -> these : 1
we can solve -> a : 1
can solve these -> problems : 1
solve these problems -> by : 1
these problems by -> creating : 1
problems by creating -> an : 1
by creating an -> the : 1
creating an the -> implementation : 1
an the implementation -> of : 1
implementation of this -> operation : 5
implementation of this -> method : 1
implementation of this -> data : 1
of this operation -> is : 11
of this operation -> will : 2
of this operation -> should : 1
of this operation -> for : 1
of this operation -> depend : 1
this operation is -> simple : 1
this operation is -> regardless : 1
this operation is -> also : 1
this operation is -> in : 2
this operation is -> the : 2
this operation is -> still : 2
this operation is -> as : 1
this operation is -> for : 4
this operation is -> always : 1
operation is simple -> and : 1
is simple and -> as : 1
simple and as -> we : 1
and as we -> can : 2
and as we -> discussed : 1
and as we -> already : 1
the following create -> a : 2
following create a -> new : 2
a new node -> new : 10
a new node -> point : 6
a new node -> and : 1
a new node -> to : 2
a new node -> based : 1
a new node -> the : 1
a new node -> as : 4
a new node -> node : 1
a new node -> if : 1
a new node -> these : 1
new node new -> the : 7
new node new -> insert : 2
new node new -> if : 1
new node new -> node : 5
new node new -> print : 2
node new the -> current : 6
node new the -> next : 1
new the current -> head : 2
new the current -> tail : 2
new the current -> will : 2
the current head -> will : 2
the current head -> now : 2
the current head -> is : 1
current head will -> no : 2
head will no -> longer : 2
no longer become -> a : 6
longer become a -> so : 6
become a so -> the : 6
a so the -> next : 6
so the next -> pointer : 8
the next pointer -> of : 10
next pointer of -> the : 11
next pointer of -> this : 1
of the new -> node : 6
of the new -> to : 3
of the new -> should : 2
the new node -> point : 3
the new node -> now : 8
the new node -> to : 3
the new node -> points : 1
the new node -> will : 2
new node point -> to : 3
new node point -> the : 6
node point to -> the : 3
to the current -> the : 3
to the current -> head : 2
to the current -> if : 6
to the current -> top : 2
to the current -> now : 2
to the current -> we : 1
to the current -> item : 1
the current the -> new : 3
the current the -> method : 1
the current the -> pointer : 1
the current the -> line : 1
the current the -> current : 2
current the new -> node : 4
new node now -> become : 7
new node now -> becomes : 1
node now become -> the : 7
now become the -> head : 2
now become the -> tail : 2
now become the -> back : 1
now become the -> if : 1
now become the -> one : 1
become the head -> if : 2
the head if -> the : 2
head if the -> linked : 2
linked list is -> the : 2
linked list is -> empty : 1
linked list is -> just : 2
linked list is -> similar : 1
list is the -> tail : 2
is the tail -> is : 2
the tail is -> also : 2
tail is also -> the : 2
is also the -> tail : 2
is also the -> the : 1
is also the -> same : 2
is also the -> one : 1
also the tail -> one : 2
the tail one -> element : 4
tail one element -> is : 4
one element is -> on : 1
one element is -> note : 1
one element is -> we : 6
one element is -> last : 1
one element is -> the : 2
one element is -> complexity : 4
one element is -> to : 2
one element is -> two : 1
element is on -> the : 1
is on the -> preceding : 1
is on the -> left : 1
preceding the operation -> will : 1
the operation will -> create : 1
the operation will -> insert : 1
the operation will -> remove : 1
the operation will -> show : 1
the operation will -> be : 4
the operation will -> iterate : 1
operation will create -> a : 1
a new then -> assign : 2
a new then -> link : 1
new then assign -> it : 2
then assign it -> to : 2
assign it to -> the : 2
it to the -> new : 2
it to the -> method : 2
it to the -> previous : 1
it to the -> left : 1
it to the -> right : 1
it to the -> current : 1
it to the -> phone : 1
to the new -> if : 3
to the new -> the : 6
to the new -> and : 1
to the new -> so : 1
the new if -> the : 2
the new if -> is : 1
the new if -> no : 1
new if the -> linked : 1
new if the -> queue : 1
new if the -> only : 1
new if the -> given : 2
list is empty -> before : 1
is empty before -> applying : 1
empty before applying -> this : 1
before applying this -> the : 1
applying this the -> new : 1
this the new -> will : 1
the new will -> also : 1
new will also -> become : 1
will also become -> a : 1
also become a -> new : 1
become a new -> for : 1
a new for -> the : 1
new for the -> complexity : 1
for the complexity -> of : 2
operation is regardless -> of : 2
is regardless of -> the : 2
regardless of the -> number : 3
of the list -> case : 1
of the list -> containing : 1
of the list -> are : 1
the list case -> in : 1
list case in -> the : 1
case in the -> inserting : 1
case in the -> inner : 1
case in the -> worst : 1
in the inserting -> we : 1
the inserting we -> can : 1
inserting we can -> implement : 1
can implement the -> this : 1
implement the this -> operation : 1
the this operation -> is : 1
operation is also -> simple : 1
is also simple -> and : 1
also simple and -> we : 1
simple and we -> just : 1
and we just -> need : 1
need to create -> a : 2
need to create -> which : 1
the new the -> pointer : 1
the new the -> new : 2
the new the -> previous : 2
the new the -> node : 1
new the pointer -> of : 3
of the previous -> will : 1
the previous will -> point : 1
previous will point -> to : 1
will point to -> this : 3
will point to -> current : 1
will point to -> the : 1
point to this -> new : 4
to this new -> the : 2
to this new -> of : 1
to this new -> element : 1
to this new -> and : 1
this new the -> code : 1
this new the -> implementation : 2
new the code -> for : 1
for this operation -> should : 1
for this operation -> is : 2
this operation should -> be : 2
operation should be -> as : 9
as if the -> linked : 2
as if the -> deque : 1
as if the -> first : 1
list is just -> simply : 2
is just simply -> invoke : 3
just simply invoke -> create : 3
simply invoke create -> a : 3
invoke create a -> new : 3
the current tail -> will : 2
the current tail -> point : 2
the current tail -> set : 1
current tail will -> no : 2
tail will no -> longer : 2
of the current -> tail : 2
of the current -> the : 1
of the current -> node : 3
of the current -> other : 1
of the current -> as : 1
of the current -> should : 2
of the current -> now : 1
of the current -> element : 1
of the current -> point : 2
of the current -> if : 1
of the current -> to : 1
of the current -> index : 1
of the current -> is : 1
current tail point -> to : 2
tail point to -> the : 2
new the new -> node : 2
become the tail -> one : 2
element is note -> that : 1
is note that -> we : 1
note that we -> might : 1
that we might -> run : 1
we might run -> the : 1
might run the -> operation : 1
run the operation -> when : 1
the operation when -> the : 1
operation when the -> linked : 1
when the linked -> list : 1
list has no -> if : 1
has no if -> this : 1
no if this -> case : 1
if this case -> will : 1
this case will -> happen : 1
case will happen -> and : 1
will happen and -> we : 1
happen and we -> can : 1
we can simply -> invoke : 1
can simply invoke -> the : 1
simply invoke the -> complexity : 1
invoke the complexity -> of : 1
linked list it -> will : 1
list it will -> even : 1
it will even -> invoke : 1
will even invoke -> the : 1
even invoke the -> operation : 1
invoke the operation -> since : 1
invoke the operation -> if : 2
invoke the operation -> the : 1
invoke the operation -> as : 1
the operation since -> the : 1
operation since the -> complexity : 1
since the complexity -> is : 1
complexity is also -> for : 1
is also for -> case : 1
also for case -> we : 1
for case we -> need : 1
case we need -> to : 1
need to traverse -> the : 4
need to traverse -> until : 1
to traverse the -> elements : 1
to traverse the -> the : 2
to traverse the -> once : 1
to traverse the -> from : 2
to traverse the -> ancestors : 2
traverse the elements -> of : 1
traverse the elements -> the : 3
linked list to -> find : 1
list to find -> the : 1
find the two -> elements : 1
the two elements -> where : 1
two elements where -> we : 1
elements where we -> want : 1
where we want -> to : 1
want to insert -> the : 1
want to insert -> a : 1
to insert the -> new : 1
to insert the -> reference : 1
to insert the -> this : 1
insert the new -> element : 1
insert the new -> item : 1
insert the new -> if : 1
the new element -> between : 1
the new element -> to : 2
the new element -> will : 1
the new element -> we : 1
new element between -> we : 1
element between we -> will : 1
between we will -> call : 1
we will call -> them : 1
we will call -> operation : 1
will call them -> and : 1
call them and -> after : 1
them and after -> we : 1
and after we -> find : 1
after we find -> we : 3
after we find -> node : 1
after we find -> the : 1
we find we -> then : 1
we find we -> can : 1
we find we -> swap : 1
we find we -> will : 1
find we then -> create : 1
we then create -> a : 1
then create a -> new : 1
a new the -> pointer : 2
of to the -> new : 1
new and then -> point : 1
and then point -> the : 1
then point the -> pointer : 1
point the pointer -> of : 3
point the pointer -> to : 1
new node to -> the : 5
new node to -> as : 1
node to the -> the : 1
node to the -> current : 3
node to the -> new : 1
node to the -> linked : 1
the operation should -> be : 5
be as t -> check : 2
as t check -> if : 2
t check if -> the : 2
of index if -> inserting : 2
of index if -> removing : 2
index if inserting -> a : 2
if inserting a -> new : 4
inserting a new -> if : 2
inserting a new -> else : 2
inserting a new -> element : 1
inserting a new -> an : 1
inserting a new -> key : 1
a new if -> inserting : 2
a new if -> hash : 1
new if inserting -> a : 2
a new else -> start : 2
new else start -> to : 2
else start to -> find : 2
else start to -> traverse : 2
start to find -> previous : 3
to find previous -> from : 3
find previous from -> the : 3
previous from the -> prevnode : 3
from the prevnode -> traverse : 2
from the prevnode -> this : 1
from the prevnode -> find : 2
the prevnode traverse -> the : 2
prevnode traverse the -> elements : 2
the elements the -> selected : 2
the elements the -> last : 1
elements the selected -> index : 2
index is i -> i : 2
is i i -> index : 2
i i index -> prevnode : 4
i index prevnode -> create : 2
i index prevnode -> the : 2
index prevnode create -> the : 2
prevnode create the -> next : 2
create the next -> node : 2
the next node -> which : 2
next node which -> the : 2
node which the -> element : 2
which the element -> after : 2
which the element -> next : 1
the element after -> previous : 2
element after previous -> nextnode : 2
after previous nextnode -> create : 2
previous nextnode create -> a : 2
nextnode create a -> new : 2
node new insert -> this : 2
new insert this -> new : 2
insert this new -> node : 2
this new node -> the : 2
this new node -> to : 1
this new node -> will : 1
new node the -> previous : 2
new node the -> following : 1
node the previous -> node : 2
the previous node -> and : 2
the previous node -> of : 1
the previous node -> in : 1
previous node and -> the : 2
node and the -> next : 2
the next one -> element : 2
next one element -> is : 2
element is we -> need : 1
element is we -> can : 3
element is we -> are : 1
element is we -> have : 1
is we need -> to : 2
traverse the the -> complexity : 2
traverse the the -> class : 1
operation is in -> the : 1
operation is in -> both : 1
operation is in -> all : 1
complexity is since -> we : 1
is since we -> might : 1
is since we -> have : 1
is since we -> can : 1
since we might -> insert : 1
we might insert -> a : 1
might insert a -> or : 1
insert a or -> a : 1
a or a -> using : 1
a or a -> right : 1
a or a -> a : 1
or a using -> this : 1
a using this -> the : 1
using this the -> index : 1
this the index -> of : 1
in the find -> out : 1
the find out -> the : 1
out the position -> of : 2
traverse the once -> the : 1
the once the -> selected : 1
once the selected -> value : 1
the selected value -> is : 1
the selected value -> may : 1
selected value is -> matched : 1
value is matched -> with : 1
is matched with -> the : 2
matched with the -> value : 1
matched with the -> of : 1
matched with the -> closed : 1
with the value -> of : 2
current the method -> just : 1
the method just -> needs : 1
method just needs -> to : 1
just needs to -> return : 1
just needs to -> remove : 1
needs to return -> its : 1
to return its -> current : 1
return its current -> position : 1
its current position -> the : 1
current position the -> implementation : 1
position the implementation -> of : 1
as if linkedlist -> is : 1
if linkedlist is -> just : 1
linkedlist is just -> return : 1
is just return -> return : 1
is just return -> null : 1
just return return -> need : 1
return return need -> to : 1
return need to -> count : 1
need to count -> the : 1
to count the -> int : 1
count the int -> index : 1
the int index -> traverse : 1
int index traverse -> from : 1
index traverse from -> the : 1
traverse from the -> head : 1
traverse from the -> we : 1
from the head -> node : 1
the head node -> traverse : 1
head node traverse -> until : 1
node traverse until -> the : 1
traverse until the -> selected : 2
until the selected -> is : 1
until the selected -> index : 1
the selected is -> matched : 1
the selected is -> not : 1
selected is matched -> with : 1
with the of -> the : 2
the current node -> this : 1
the current node -> points : 1
the current node -> will : 3
current node this -> will : 1
node this will -> if : 1
this will if -> the : 1
will if the -> selected : 1
selected is not -> return : 1
is not return -> return : 3
not return return -> since : 1
not return return -> keynode : 2
return return since -> we : 1
return since we -> need : 1
since we need -> to : 1
since we need -> a : 1
this operation will -> be : 2
operation will be -> the : 1
operation will be -> as : 7
operation will be -> since : 1
be the selected -> value : 1
selected value may -> be : 1
value may be -> found : 1
may be found -> in : 1
be found in -> the : 2
be found in -> if : 6
be found in -> file : 2
in the first -> position : 2
in the first -> we : 2
in the first -> element : 2
the first position -> so : 1
the first position -> of : 2
first position so -> that : 1
position so that -> the : 1
will be in -> the : 11
be in the -> best : 1
be in the -> leftmost : 1
be in the -> right : 5
be in the -> left : 3
be in the -> correct : 1
be in the -> implementation : 1
be in the -> worst : 1
the best an -> item : 1
best an item -> from : 1
the linkedlist to -> the : 1
linkedlist to the -> inserting : 1
to the inserting -> the : 1
the inserting the -> removing : 1
inserting the removing -> operation : 1
the removing operation -> also : 1
the removing operation -> can : 1
removing operation also -> has : 1
operation also has -> several : 1
also has several -> and : 1
has several and -> they : 1
several and they -> removed : 1
and they removed -> item : 1
they removed item -> is : 1
removed item is -> in : 3
item is in -> the : 3
item is in -> which : 1
in the which -> is : 4
in the which -> are : 1
which is removed -> item : 1
is removed item -> is : 1
is in which -> removed : 1
in which removed -> item : 1
which removed item -> is : 1
the linked to -> case : 1
linked to case -> the : 1
to case the -> implementation : 1
case the implementation -> is : 1
the implementation is -> we : 1
the implementation is -> operation : 1
implementation is we -> just : 1
is we just -> need : 7
need to point -> the : 2
need to point -> to : 1
need to point -> of : 1
to point the -> pointer : 2
the pointer to -> the : 1
pointer to the -> node : 1
pointer to the -> existing : 1
to the node -> which : 1
to the node -> traverse : 1
to the node -> before : 2
the node which -> is : 1
node which is -> pointed : 1
which is pointed -> by : 1
is pointed by -> the : 1
pointed by the -> pointer : 1
pointed by the -> and : 1
pointed by the -> hash : 2
by the pointer -> of : 1
the current other -> the : 1
current other the -> second : 1
other the second -> and : 1
other the second -> line : 1
the second and -> delete : 1
the second and -> so : 1
the second and -> when : 1
second and delete -> the : 1
and delete the -> first : 1
delete the first -> element : 1
the linked please -> see : 1
linked please see -> the : 1
please see the -> following : 13
the following do -> nothing : 1
the following do -> the : 1
following do nothing -> if : 1
do nothing if -> list : 7
do nothing if -> index : 2
do nothing if -> stack : 1
do nothing if -> deque : 2
nothing if list -> is : 7
if list is -> save : 3
if list is -> if : 2
if list is -> do : 2
list is save -> the : 3
is save the -> current : 4
save the current -> to : 6
the current to -> a : 6
the current to -> node : 1
the current to -> so : 1
current to a -> new : 6
to a new -> node : 6
node point the -> head : 2
node point the -> tail : 1
node point the -> front : 1
node point the -> to : 2
point the head -> to : 2
the head to -> the : 2
head to the -> element : 2
to the element -> next : 4
to the element -> before : 2
the element next -> to : 5
element next to -> the : 5
next to the -> current : 4
next to the -> node : 1
current head now -> safe : 2
head now safe -> to : 2
now safe to -> the : 10
safe to the -> first : 5
safe to the -> last : 3
safe to the -> selected : 2
the first delete -> one : 3
the first delete -> if : 2
first delete one -> element : 2
first delete one -> item : 1
delete one element -> is : 7
the preceding regardless -> of : 1
preceding regardless of -> the : 1
list the complexity -> of : 1
list the complexity -> will : 1
is the we -> have : 1
is the we -> need : 1
have to traverse -> all : 1
have to traverse -> the : 2
have to traverse -> to : 4
to traverse all -> list : 1
traverse all list -> elements : 1
traverse all list -> the : 1
all list elements -> so : 1
list elements so -> that : 1
elements so that -> we : 1
elements so that -> the : 1
elements so that -> now : 1
have two last -> which : 1
two last which -> are : 1
last which are -> in : 1
which are in -> and : 1
are in and -> we : 1
in and we -> set : 1
and we set -> the : 1
we set the -> pointer : 1
we set the -> iterator : 1
the node to -> point : 1
the node to -> the : 1
node to point -> to : 1
to point to -> after : 1
to point to -> the : 2
to point to -> a : 1
point to after -> we : 1
to after we -> can : 1
to after we -> find : 1
after we can -> safely : 2
after we can -> recursively : 1
after we can -> remove : 1
after we can -> replace : 1
after we can -> decide : 1
we can safely -> remove : 4
can safely remove -> the : 3
can safely remove -> node : 1
safely remove the -> last : 2
safely remove the -> element : 1
remove the last -> since : 1
remove the last -> the : 1
remove the last -> character : 1
the last since -> this : 1
last since this -> operation : 1
since this operation -> must : 1
this operation must -> traverse : 1
operation must traverse -> all : 1
must traverse all -> list : 1
all list the -> complexity : 1
complexity will the -> implementation : 1
will the implementation -> of : 1
be as do -> nothing : 8
as do nothing -> if : 9
list is if -> list : 2
is if list -> element : 2
if list element -> is : 2
list element is -> only : 2
element is only -> just : 3
is only just -> simply : 3
only just simply -> call : 3
just simply call -> start : 1
just simply call -> save : 2
simply call start -> to : 1
call start to -> find : 1
the prevnode this -> is : 1
prevnode this is -> the : 1
this is the -> candidate : 1
this is the -> only : 1
this is the -> has : 1
is the candidate -> removed : 1
the candidate removed -> items : 1
candidate removed items -> which : 1
removed items which -> the : 1
items which the -> element : 1
the node traverse -> the : 1
node traverse the -> elements : 1
elements the last -> prevnode : 1
the last prevnode -> node : 1
last prevnode node -> the : 1
prevnode node the -> prevnode : 1
node the prevnode -> now : 1
the prevnode now -> becomes : 1
prevnode now becomes -> the : 1
now becomes the -> so : 1
now becomes the -> one : 1
becomes the so -> the : 1
of the point -> to : 2
the point to -> tail : 1
the point to -> the : 1
point to tail -> now : 1
to tail now -> safe : 1
tail now safe -> to : 1
to the last -> delete : 3
to the last -> now : 2
to the last -> position : 1
to the last -> iterator : 1
to the last -> the : 1
to the last -> character : 2
the last delete -> one : 3
last delete one -> element : 3
element is last -> operation : 1
is last operation -> is : 1
last operation is -> which : 1
last operation is -> we : 1
operation is which -> will : 1
operation is which -> is : 2
is which will -> remove : 1
is which will -> be : 1
which will remove -> the : 1
will remove the -> list : 1
will remove the -> item : 1
remove the list -> element : 1
the list element -> the : 1
list element the -> first : 1
element the first -> and : 1
the first and -> the : 1
the first and -> second : 2
the first and -> we : 1
first and the -> last : 1
and the last -> in : 1
and the last -> index : 1
the last in -> this : 1
this we need -> to : 2
this we need -> a : 1
to traverse until -> the : 1
index is similar -> to : 1
similar to we -> need : 1
similar to we -> have : 1
to we need -> to : 1
need to find -> the : 4
need to find -> out : 5
find the element -> before : 1
find the element -> the : 2
find the element -> with : 2
the element before -> and : 1
the element before -> the : 2
element before and -> after : 1
before and after -> the : 1
and after the -> selected : 1
and after the -> make : 1
after the selected -> after : 1
the selected after -> we : 1
selected after we -> find : 1
find we can -> link : 1
we can link -> them : 1
can link them -> together : 1
link them together -> and : 1
them together and -> then : 1
together and then -> we : 1
and then we -> can : 2
and then we -> increase : 1
and then we -> will : 1
then we can -> safely : 1
then we can -> merge : 1
then we can -> perform : 2
remove the element -> in : 2
remove the element -> from : 1
the element in -> the : 2
the element in -> we : 1
in the selected -> the : 1
the selected the -> code : 1
selected the code -> will : 1
list is do -> nothing : 2
is do nothing -> if : 2
nothing if index -> is : 2
if index is -> out : 2
index if removing -> the : 2
if removing the -> current : 4
removing the current -> if : 2
removing the current -> else : 2
the current if -> removing : 2
the current if -> the : 8
current if removing -> the : 2
the current else -> start : 2
current else start -> to : 2
start to traverse -> the : 2
traverse the from -> the : 2
traverse the from -> root : 1
the from the -> prevnode : 2
the prevnode find -> the : 2
prevnode find the -> element : 2
element the selected -> i : 2
index prevnode the -> removed : 2
prevnode the removed -> element : 2
the removed element -> is : 2
removed element is -> the : 2
is the node -> the : 2
is the node -> of : 1
node the nextnode -> will : 2
the nextnode will -> be : 2
nextnode will be -> the : 2
be the neighbor -> prevnode : 2
the neighbor prevnode -> if : 2
neighbor prevnode if -> the : 2
prevnode if the -> node : 2
if the node -> is : 5
the node is -> nextnode : 2
the node is -> a : 2
the node is -> return : 1
node is nextnode -> link : 2
is nextnode link -> the : 2
nextnode link the -> prevnode : 2
link the prevnode -> to : 2
the prevnode to -> now : 2
prevnode to now -> safe : 2
to now safe -> to : 2
to the selected -> index : 2
selected index delete -> one : 2
index delete one -> element : 2
we will invoke -> the : 1
the operation if -> the : 1
the operation if -> no : 1
operation if the -> and : 1
if the and -> will : 1
the and will -> invoke : 1
the and will -> get : 1
and will invoke -> now : 1
will invoke now -> clear : 1
invoke now clear -> that : 1
now clear that -> in : 1
clear that in -> the : 1
that in the -> best : 1
best case the -> is : 1
best case the -> worst : 1
case the is -> the : 1
the is the -> complexity : 1
the is the -> sum : 1
the complexity in -> the : 1
complexity in the -> worst : 1
complexity in the -> best : 2
in the worst -> the : 2
in the worst -> an : 1
in the worst -> case : 1
in the worst -> since : 1
in the worst -> we : 1
in the worst -> and : 1
the worst the -> complexity : 1
the worst the -> doublylinkedlist : 1
the worst the -> minimum : 1
the worst the -> time : 1
worst the complexity -> the : 1
the complexity the -> linkedlist : 1
complexity the linkedlist -> time : 1
the linkedlist time -> to : 1
linkedlist time to -> consume : 1
time to consume -> our : 1
to consume our -> new : 1
type in our -> we : 1
in our we -> can : 1
our we can -> use : 1
our we can -> see : 1
can use all -> of : 1
use all of -> the : 1
the operations of -> the : 2
operations of the -> data : 1
operations of the -> since : 1
we will try -> to : 3
we will try -> all : 1
will try to -> initialize : 1
will try to -> remove : 1
will try to -> store : 1
try to initialize -> a : 1
to initialize a -> new : 1
a new add -> several : 1
new add several -> and : 1
add several and -> then : 1
several and then -> invoke : 1
several and then -> built : 1
and then invoke -> the : 1
then invoke the -> and : 1
the and worry -> about : 1
and worry about -> invoking : 1
worry about invoking -> these : 1
about invoking these -> operations : 1
invoking these operations -> in : 1
these operations in -> a : 1
operations in a -> specific : 1
operations in a -> priority : 1
operations in a -> hash : 1
in a specific -> as : 1
specific as long -> as : 1
as long as -> we : 1
as long as -> is : 1
long as we -> have : 1
we have instantiated -> the : 1
have instantiated the -> everything : 1
instantiated the everything -> will : 1
the everything will -> work : 1
everything will work -> since : 1
will work since -> we : 1
work since we -> have : 1
we have restricted -> the : 1
have restricted the -> out : 1
restricted the out -> of : 1
the out of -> bound : 1
the out of -> range : 1
out of bound -> without : 1
of bound without -> further : 1
bound without further -> the : 1
without further the -> file : 1
further the file -> namespace : 1
file namespace linkedlist -> print : 1
file namespace linkedlist -> it : 1
namespace linkedlist print -> the : 1
linkedlist print the -> list : 1
list cout cout -> print : 2
list cout cout -> get : 2
list cout cout -> return : 1
list cout cout -> itr : 1
cout cout print -> the : 2
cout cout get -> value : 2
cout get value -> of : 2
get value of -> the : 2
the second it -> should : 2
the second it -> make : 1
the second it -> does : 1
second it should -> be : 2
it should be -> cout : 2
it should be -> find : 1
it should be -> itr : 1
it should be -> and : 1
it should be -> in : 2
it should be -> key : 2
it should be -> queue : 1
it should be -> we : 1
it should be -> int : 1
should be cout -> value : 2
be cout value -> of : 2
cout value of -> the : 2
the second get -> cout : 1
second get cout -> cout : 1
get cout cout -> cout : 1
cout endl find -> the : 2
endl find the -> position : 2
find the position -> of : 12
find the position -> means : 1
position of value -> it : 2
position of value -> int : 1
position of value -> the : 1
position of value -> in : 1
position of value -> we : 1
of value it -> must : 1
of value it -> should : 1
value it must -> be : 1
it must be -> cout : 1
it must be -> invalid : 1
it must be -> return : 1
must be cout -> position : 1
be cout position -> of : 1
cout position of -> value : 1
of value int -> srch : 1
value int srch -> cout : 1
int srch cout -> srch : 1
srch cout srch -> endl : 1
cout srch endl -> remove : 1
srch endl remove -> first : 1
endl remove first -> cout : 2
remove first cout -> the : 2
first cout the -> first : 2
cout the first -> cout : 1
cout the first -> itr : 1
the first cout -> remove : 1
the first cout -> list : 1
first cout remove -> fifth : 1
cout remove fifth -> cout : 2
remove fifth cout -> the : 2
fifth cout the -> fifth : 2
cout the fifth -> cout : 1
cout the fifth -> itr : 1
the fifth cout -> remove : 1
fifth cout remove -> tenth : 1
cout remove tenth -> cout : 1
remove tenth cout -> the : 1
tenth cout the -> tenth : 1
cout the tenth -> nothing : 1
the tenth nothing -> cout : 1
tenth nothing cout -> return : 1
nothing cout return -> are : 1
cout return are -> commenting : 1
return are commenting -> lines : 1
are commenting lines -> before : 1
commenting lines before -> each : 1
lines before each -> code : 1
before each code -> line : 1
each code line -> to : 1
code line to -> indicate : 1
line to indicate -> the : 1
to indicate the -> expected : 1
to indicate the -> end : 1
to indicate the -> priority : 1
indicate the expected -> to : 1
the expected to -> display : 1
expected to display -> the : 1
to display the -> we : 1
display the we -> use : 1
use the method -> with : 1
use the method -> or : 1
use the method -> instead : 1
the method with -> the : 1
method with the -> following : 1
with the following -> node : 1
with the following -> t : 1
with the following -> code : 1
with the following -> as : 1
with the following -> single : 1
with the following -> invoking : 1
with the following -> the : 1
with the following -> bstnode : 1
with the following -> return : 1
with the following -> balance : 1
with the following -> int : 1
the following node -> node : 1
following node node -> if : 1
node node if -> we : 1
node node if -> both : 1
node node if -> right : 2
node if we -> build : 1
the following window -> in : 1
following window in -> our : 1
window in our -> the : 1
in our the -> doubly : 1
our the doubly -> linked : 1
list linked is -> almost : 1
linked is almost -> the : 1
is almost the -> same : 2
almost the same -> as : 2
as the singly -> linked : 1
the singly linked -> except : 1
the singly linked -> list : 1
singly linked except -> used : 1
linked except used -> by : 1
except used by -> doubly : 1
used by doubly -> linked : 1
by doubly linked -> list : 1
list has pointer -> instead : 1
has pointer instead -> of : 1
pointer instead of -> only : 1
instead of only -> having : 1
of only having -> the : 1
only having the -> existence : 1
having the existence -> of : 1
the existence of -> the : 3
existence of the -> pointer : 2
existence of the -> we : 1
the pointer will -> make : 1
pointer will make -> the : 1
will make the -> doubly : 1
will make the -> time : 1
make the doubly -> linked : 1
linked list possible -> to : 1
list possible to -> move : 1
possible to move -> backwards : 1
to move backwards -> from : 1
move backwards from -> to : 1
backwards from to -> as : 1
from to as -> a : 1
from to as -> the : 1
to as a -> we : 1
we can reduce -> the : 1
can reduce the -> complexity : 1
reduce the complexity -> of : 1
complexity of operation -> to : 1
complexity of operation -> of : 1
complexity of operation -> in : 1
of operation to -> like : 1
of operation to -> retrieve : 1
operation to like -> we : 1
to like we -> have : 1
like we have -> in : 1
have in the -> singly : 1
in the singly -> linked : 1
linked list data -> we : 1
list data we -> are : 1
data we are -> going : 5
to discuss this -> in : 2
to discuss this -> further : 1
in this as -> of : 1
this as of -> prepare : 1
as of prepare -> the : 1
of prepare the -> new : 1
prepare the new -> data : 1
the new data -> the : 1
data the data -> we : 1
data the data -> type : 1
data we build -> a : 1
build a doubly -> linked : 1
a doubly linked -> we : 1
a doubly linked -> is : 1
doubly linked we -> need : 1
linked we need -> to : 1
need to add -> a : 1
need to add -> properties : 1
need to add -> some : 1
to add a -> pointer : 1
to add a -> new : 1
add a pointer -> to : 1
a pointer to -> the : 1
to the existing -> data : 1
the existing data -> to : 1
existing data to -> avoid : 1
data to avoid -> any : 1
to avoid any -> we : 1
avoid any we -> will : 1
any we will -> create : 1
we will create -> a : 3
data type with -> the : 1
type with the -> following : 1
the following t -> only : 1
following t only -> difference : 1
t only difference -> between : 1
only difference between -> and : 1
difference between and -> is : 1
difference between and -> iterator : 1
between and is -> the : 1
and is the -> existence : 1
and is the -> complexity : 1
and is the -> length : 1
and is the -> difference : 1
is the existence -> of : 1
the pointer well -> as : 1
pointer well as -> the : 1
well as the -> data : 1
well as the -> source : 3
data type name -> by : 1
type name by -> using : 1
name by using -> this : 1
using this new -> data : 1
this new data -> we : 1
going to refactor -> the : 1
the preceding adt -> into : 1
preceding adt into -> several : 1
adt into several -> operations : 1
into several operations -> in : 1
list is similar -> to : 1
similar to singly -> linked : 1
to singly linked -> we : 1
singly linked we -> can : 1
linked we can -> refactor : 1
can refactor our -> existing : 1
refactor our existing -> adt : 1
our existing adt -> to : 1
existing adt to -> build : 1
adt to build -> a : 1
new adt since -> they : 1
adt since they -> have : 1
since they have -> the : 1
since they have -> to : 1
since they have -> no : 1
they have the -> same : 1
the same available -> operations : 1
same available operations -> but : 1
available operations but -> with : 1
operations but with -> different : 1
but with different -> the : 1
with different the -> implementation : 1
different the implementation -> of : 1
implementation of and -> operations : 1
of and operations -> is : 2
and operations is -> the : 1
and operations is -> where : 1
operations is the -> same : 1
the same for -> these : 1
same for these -> two : 1
for these two -> adts : 1
these two adts -> because : 1
two adts because -> the : 1
adts because the -> traversal : 1
because the traversal -> process : 1
the traversal process -> for : 1
traversal process for -> each : 1
process for each -> element : 1
for each element -> will : 1
each element will -> still : 1
element will still -> move : 1
will still move -> in : 1
still move in -> so : 1
move in so -> we : 1
in so we -> discuss : 1
in so we -> can : 1
so we discuss -> it : 1
we discuss it -> and : 1
discuss it and -> since : 1
it and since -> can : 1
and since can -> move : 1
since can move -> we : 1
can move we -> will : 1
move we will -> make : 1
make a new -> operation : 1
a new operation -> named : 1
new operation named -> to : 1
operation named to -> leverage : 1
named to leverage -> our : 1
to leverage our -> data : 1
leverage our data -> to : 1
our data to -> make : 1
data to make -> this : 1
to make this -> here : 1
make this here -> is : 1
this here is -> the : 1
this here is -> a : 1
is the declaration -> of : 3
the data int -> the : 1
data int the -> first : 1
int void an -> we : 1
void an we -> discussed : 1
an we discussed -> in : 1
we discussed in -> the : 3
we discussed in -> binary : 1
we discussed in -> this : 1
discussed in the -> we : 1
discussed in the -> previous : 2
discussed in the -> data : 1
can have for -> the : 1
have for the -> complexity : 1
have for the -> time : 1
of this can -> happen : 1
this can happen -> now : 1
can happen now -> since : 1
happen now since -> we : 1
now since we -> have : 1
have the pointer -> in : 1
the pointer in -> each : 1
pointer in each -> to : 1
in each to -> do : 1
each to do -> we : 1
to do we -> just : 2
to do we -> swap : 1
to do we -> are : 1
to do we -> will : 1
to do we -> can : 2
to do we -> need : 2
do we just -> need : 2
need to pick -> the : 1
to pick the -> node : 1
pick the node -> and : 1
the node and -> then : 1
node and then -> assign : 1
node and then -> assigning : 1
node and then -> assigns : 1
node and then -> to : 1
assign the previous -> node : 1
previous node of -> the : 1
node of the -> current : 1
node of the -> tree : 1
the current as -> the : 1
the current as -> reference : 1
current as the -> new : 1
as the new -> after : 1
as the new -> front : 1
the new after -> we : 1
the last the -> implementation : 1
the last the -> output : 1
last the implementation -> of : 1
of the will -> be : 1
of the will -> use : 1
the will be -> as : 1
the will be -> the : 1
simply call save -> the : 2
call save the -> current : 2
point the tail -> to : 1
the tail to -> the : 1
tail to the -> element : 1
element before the -> current : 2
before the current -> tail : 1
before the current -> set : 1
current tail set -> the : 1
tail set the -> new : 1
set the new -> next : 2
set the new -> element : 1
set the new -> minimum : 1
the new next -> pointer : 2
new next pointer -> of : 2
the new to -> null : 2
the new to -> the : 2
the new to -> solve : 1
new to null -> since : 2
to null since -> we : 2
null since we -> are : 2
null since we -> have : 1
since we are -> going : 5
the last now -> safe : 2
last now safe -> to : 2
the the pointer -> of : 1
of the must -> point : 1
the must point -> to : 1
must point to -> so : 1
point to so -> we : 1
to so we -> can : 1
can refactor operation -> as : 1
refactor operation as -> do : 1
operation as do -> nothing : 1
first delete if -> still : 2
delete if still -> any : 2
if still any -> element : 2
still any element -> in : 2
the the previous -> pointer : 2
the previous pointer -> of : 6
previous pointer of -> the : 6
of the should -> point : 2
the should point -> to : 2
should point to -> one : 2
should point to -> the : 4
point to one -> element : 2
to one element -> is : 2
is the when -> we : 1
when we link -> the : 1
we link the -> two : 1
link the two -> nodes : 1
the two nodes -> between : 1
two nodes between -> the : 1
nodes between the -> removed : 1
between the removed -> we : 1
the removed we -> also : 1
removed we also -> need : 1
to the pointer -> of : 2
of the right -> element : 1
the right element -> to : 1
right element to -> the : 1
element to the -> left : 1
to the left -> the : 1
to the left -> side : 1
to the left -> and : 1
to the left -> to : 1
to the left -> of : 1
to the left -> sub : 2
to the left -> subtree : 1
to the left -> otherwise : 1
the left the -> implementation : 1
the left the -> array : 1
left the implementation -> will : 1
the implementation will -> be : 2
implementation will be -> as : 1
implementation will be -> those : 1
element is complexity -> of : 4
is complexity of -> this : 3
is complexity of -> is : 1
as the operation -> of : 1
the operation of -> data : 1
the operation of -> searching : 1
operation of data -> in : 1
of data in -> the : 2
best case and -> in : 1
best case and -> worst : 1
case and in -> the : 1
the worst an -> to : 1
worst an to -> the : 1
an to the -> existence : 1
to the existence -> of : 1
refactor the inserting -> operation : 1
the inserting operation -> in : 1
the inserting operation -> can : 1
inserting operation in -> the : 1
operation in the -> data : 6
operation in the -> since : 1
operation in the -> bst : 1
operation in the -> avl : 3
operation in the -> we : 1
the data of -> the : 1
data of the -> point : 1
the new so -> that : 1
new so that -> we : 1
can have the -> as : 1
can have the -> following : 1
have the as -> create : 1
the as create -> a : 1
as create a -> new : 3
as create a -> code : 1
current if the -> current : 4
current if the -> first : 1
current if the -> key : 1
current if the -> left : 1
current if the -> right : 1
if the current -> head : 1
if the current -> the : 1
if the current -> is : 1
if the current -> exists : 1
if the current -> item : 1
current head is -> the : 1
head is the -> previous : 1
is the previous -> pointer : 2
the current should -> point : 2
current should point -> to : 2
the the new -> node : 2
operation is still -> the : 2
is still the -> we : 1
is still the -> same : 1
still the we -> need : 1
new to the -> node : 1
new to the -> pointer : 1
new to the -> hash : 1
the node before -> the : 1
the node before -> this : 1
node before the -> implementation : 1
before the implementation -> of : 1
implementation of operation -> will : 2
implementation of operation -> in : 9
implementation of operation -> should : 2
implementation of operation -> for : 1
implementation of operation -> to : 1
implementation of operation -> of : 1
of operation will -> be : 2
new the previous -> pointer : 2
the new should -> point : 2
new should point -> to : 2
complexity of is -> the : 1
to point of -> the : 1
point of the -> node : 1
the node after -> the : 1
node after the -> new : 1
after the new -> element : 1
new element to -> this : 1
new element to -> create : 1
new element to -> be : 4
element to this -> new : 1
this new of -> the : 1
new of the -> new : 1
new node points -> to : 1
node points to -> the : 2
node before this -> new : 1
before this new -> the : 1
new the implementation -> of : 2
still the same -> as : 1
same as of -> the : 1
as of the -> best : 1
case the worst -> the : 1
worst the doublylinkedlist -> the : 1
the doublylinkedlist the -> and : 1
doublylinkedlist the and -> data : 1
data types have -> the : 1
types have the -> exact : 1
have the exact -> same : 2
the exact same -> we : 1
the exact same -> output : 1
the exact same -> time : 1
the exact same -> spelling : 2
exact same we -> can : 1
same we can -> use : 1
can use in -> function : 1
use in function -> of : 1
in function of -> file : 1
function of file -> in : 1
of file in -> the : 1
file in the -> project : 1
in the project -> to : 1
the project to -> consume : 1
project to consume -> the : 1
consume the data -> the : 1
the code works -> like : 1
code works like -> a : 1
works like a -> charm : 1
like a charm -> when : 1
a charm when -> i : 1
charm when i -> try : 1
when i try -> and : 1
i try and -> produces : 1
try and produces -> the : 1
and produces the -> exact : 1
produces the exact -> same : 1
exact same output -> as : 1
output as the -> output : 1
as the output -> of : 1
the since have -> a : 1
since have a -> here : 1
have a here -> is : 1
a here is -> the : 1
code to apply -> to : 1
to apply to -> the : 1
apply to the -> backward : 1
to the backward -> movement : 1
the backward movement -> in : 1
backward movement in -> the : 1
movement in the -> file : 1
namespace linkedlist it -> will : 1
linkedlist it will -> be : 1
will be printed -> print : 1
be printed print -> the : 1
printed print the -> list : 1
will be displayed -> in : 1
will be displayed -> if : 1
will be displayed -> from : 1
will be displayed -> on : 1
be displayed in -> the : 1
displayed in the -> following : 1
the following list -> and : 1
following list and -> linkedlist : 1
linkedlist using has -> three : 1
using has three -> data : 1
has three data -> types : 1
has three data -> and : 1
three data types -> which : 1
three data types -> and : 1
data types which -> we : 1
types which we -> can : 1
use to store -> specific : 1
to store specific -> items : 1
store specific items -> such : 1
specific items such -> and : 1
items such and -> can : 1
such and can -> be : 1
and can be -> used : 2
and can be -> is : 1
be used as -> can : 1
be used as -> and : 1
be used as -> they : 1
used as can -> be : 1
as can be -> used : 1
used as and -> can : 1
as and can -> be : 1
used as they -> both : 1
as they both -> have : 1
they both have -> and : 1
they both have -> the : 1
both have and -> removing : 1
have and removing -> the : 1
and removing the -> method : 1
and removing the -> declare : 1
removing the method -> names : 1
the method names -> they : 1
method names they -> have : 1
names they have -> are : 1
they have are -> different : 1
have are different -> with : 1
are different with -> our : 1
different with our -> developed : 1
with our developed -> data : 1
our developed data -> and : 1
developed data and -> we : 1
data and we -> are : 1
going to and -> is : 1
going to and -> conquer : 1
to and is -> similar : 1
and is similar -> to : 1
similar to which -> is : 1
to which is -> like : 1
to which is -> we : 1
to which is -> from : 1
to which is -> in : 1
which is like -> an : 1
is like an -> is : 1
like an is -> a : 1
is a container -> to : 1
a container to -> store : 1
container to store -> a : 1
store a bunch -> of : 1
a bunch of -> items : 1
a bunch of -> opened : 1
bunch of items -> the : 1
items the vector -> can : 1
the vector can -> double : 1
vector can double -> its : 1
can double its -> size : 1
double its size -> automatically : 1
its size automatically -> if : 1
size automatically if -> we : 1
automatically if we -> insert : 1
if we insert -> a : 3
if we insert -> the : 1
a new item -> when : 1
a new item -> in : 4
a new item -> to : 1
a new item -> into : 1
a new item -> from : 1
new item when -> its : 1
item when its -> capacity : 1
when its capacity -> has : 1
its capacity has -> been : 1
capacity has been -> vectors : 1
has been vectors -> have : 1
been vectors have -> many : 1
vectors have many -> member : 1
have many member -> functions : 1
many member functions -> that : 1
member functions that -> arrays : 1
functions that arrays -> and : 1
that arrays and -> provide : 1
arrays and provide -> iterators : 1
and provide iterators -> that : 1
provide iterators that -> act : 1
iterators that act -> like : 1
that act like -> pointers : 1
act like pointers -> but : 1
like pointers but -> forget : 1
pointers but forget -> to : 1
but forget to -> include : 1
forget to include -> header : 1
forget to include -> at : 1
to include header -> at : 1
include header at -> the : 1
beginning of code -> we : 1
beginning of code -> file : 1
of code we -> are : 1
code we are -> going : 1
to use to -> create : 1
to use to -> the : 1
use to create -> a : 1
a new vector -> we : 1
a new vector -> containing : 1
new vector we -> can : 1
vector we can -> initialize : 1
can initialize it -> as : 1
initialize it as -> initialize : 1
it as initialize -> a : 1
as initialize a -> vectorlist : 1
as initialize a -> get : 1
as initialize a -> linked : 1
initialize a vectorlist -> preceding : 1
a vectorlist preceding -> code : 1
vectorlist preceding code -> will : 1
preceding code will -> create : 1
code will create -> a : 1
new vector containing -> three : 1
vector containing three -> we : 1
containing three we -> can : 1
three we can -> initialize : 1
can initialize an -> empty : 1
initialize an empty -> vector : 1
an empty vector -> and : 1
empty vector and -> insert : 1
vector and insert -> the : 1
and insert the -> vector : 1
insert the vector -> using : 1
the vector using -> method : 1
vector using method -> as : 1
using method as -> initialize : 1
method as initialize -> a : 1
initialize a get -> the : 1
a get the -> item : 1
get the item -> of : 1
the item of -> the : 1
of the specific -> we : 1
the specific we -> can : 1
specific we can -> use : 1
the method or -> we : 1
method or we -> can : 1
or we can -> use : 1
or we can -> notate : 1
use the square -> bracket : 1
the square bracket -> as : 1
square bracket as -> we : 1
bracket as we -> can : 1
following code get -> value : 1
code get value -> based : 1
get value based -> on : 1
value based on -> the : 1
on the i -> j : 1
the i j -> it : 1
i j it -> is : 1
j it is -> better : 1
it is better -> to : 1
is better to -> always : 1
better to always -> use : 1
to always use -> the : 1
always use the -> method : 1
the method instead -> of : 1
method instead of -> the : 1
of the operator -> when : 1
the operator when -> we : 1
operator when we -> want : 1
when we want -> to : 1
want to access -> the : 1
access the specific -> element : 1
the specific element -> by : 1
specific element by -> its : 1
element by its -> index : 1
by its index -> in : 1
its index in -> a : 1
index in a -> vector : 1
in a vector -> this : 1
a vector this -> is : 1
vector this is -> when : 1
this is when -> we : 1
when we accidentally -> access : 1
we accidentally access -> the : 1
accidentally access the -> out : 1
access the out -> of : 1
out of range -> the : 1
of range the -> method : 1
range the method -> will : 1
the method will -> throw : 1
the method will -> return : 1
method will throw -> an : 1
will throw an -> the : 1
will throw an -> to : 1
throw an the -> operator : 1
an the operator -> will : 1
the operator will -> give : 1
operator will give -> an : 1
will give an -> undefined : 1
give an undefined -> data : 1
an undefined data -> type : 1
undefined data type -> that : 1
that is used -> when : 1
that is used -> to : 1
that is used -> if : 1
is used when -> applying : 1
is used when -> we : 1
used when applying -> a : 1
when applying a -> vector : 1
applying a vector -> is : 1
a vector is -> an : 1
vector is an -> this : 1
is an this -> is : 1
an this is -> a : 1
this is a -> pointer : 1
is a pointer -> that : 1
a pointer that -> is : 1
pointer that is -> used : 1
used to point -> to : 1
point to a -> specific : 1
point to a -> chaining : 1
to a specific -> position : 1
a specific position -> of : 1
specific position of -> the : 1
of the suppose -> we : 2
the suppose we -> are : 1
the suppose we -> have : 1
the suppose we -> want : 1
suppose we are -> going : 2
going to insert -> a : 2
going to insert -> an : 1
to insert a -> new : 8
to insert a -> character : 1
to insert a -> we : 1
new item in -> the : 5
to initialize the -> iterator : 1
initialize the iterator -> first : 1
the iterator first -> before : 1
iterator first before -> we : 1
first before we -> execute : 1
before we execute -> the : 1
we execute the -> as : 1
execute the as -> we : 1
following code initialize -> an : 1
code initialize an -> insert : 1
initialize an insert -> a : 1
an insert a -> new : 2
first position of -> the : 1
first position of -> each : 1
the we set -> the : 1
set the iterator -> to : 2
the iterator to -> the : 3
the iterator to -> point : 1
iterator to the -> beginning : 1
iterator to the -> end : 1
iterator to the -> desired : 1
to the beginning -> of : 2
of the then -> pass : 1
of the then -> comparing : 1
the then pass -> it : 1
then pass it -> to : 1
pass it to -> the : 1
the method as -> insert : 2
method as insert -> an : 2
as insert an -> item : 2
insert an item -> to : 3
an item to -> the : 3
an item to -> become : 1
item to the -> first : 1
item to the -> last : 2
item to the -> the : 1
the first can -> also : 1
first can also -> insert : 1
can also insert -> a : 1
also insert a -> new : 1
new item to -> the : 1
the last position -> of : 1
the last position -> pointer : 1
the last position -> the : 1
the last position -> in : 1
the last position -> has : 1
last position of -> the : 1
of the vector -> by : 1
of the vector -> first : 1
the vector by -> setting : 1
vector by setting -> the : 1
by setting the -> iterator : 1
by setting the -> pointer : 1
setting the iterator -> to : 1
to the end -> of : 3
to the end -> index : 1
end of then -> passing : 1
of then passing -> it : 1
then passing it -> to : 1
passing it to -> the : 1
the last iterator -> is : 1
last iterator is -> a : 1
iterator is a -> in : 1
is a in -> other : 1
a in other -> trying : 1
in other trying -> to : 1
other trying to -> get : 1
trying to get -> the : 1
value of will -> throw : 1
of will throw -> an : 1
throw an to -> insert : 1
an to insert -> a : 1
new item into -> the : 1
into the middle -> of : 1
we can set -> the : 1
can set the -> iterator : 1
iterator to point -> to : 1
beginning of and -> then : 1
of and then -> we : 1
then we increase -> the : 1
we increase the -> iterator : 1
we increase the -> exponentially : 1
we increase the -> hash : 2
we increase the -> variable : 1
increase the iterator -> to : 1
to the desired -> the : 1
the desired the -> following : 1
the desired the -> implementation : 1
desired the following -> is : 1
code snippet that -> will : 1
snippet that will -> insert : 1
that will insert -> a : 1
will insert a -> new : 1
in the fourth -> insert : 1
the fourth insert -> an : 1
fourth insert an -> item : 1
the the vector -> is : 1
vector is also -> the : 1
the the fourth -> element : 1
the fourth element -> is : 1
fourth element is -> laid : 1
element is laid -> in : 1
is laid in -> the : 1
laid in the -> search : 1
in the search -> for : 1
the search for -> the : 1
for the desired -> we : 1
the desired we -> can : 2
desired we can -> use : 2
can use method -> provided : 2
use method provided -> by : 2
method provided by -> the : 2
provided by the -> to : 2
by the to -> use : 2
the to use -> this : 2
to use this -> we : 2
use this we -> need : 1
use this we -> also : 1
need to include -> an : 1
need to include -> the : 1
need to include -> it : 1
to include an -> algorithm : 1
include an algorithm -> header : 1
an algorithm header -> at : 1
algorithm header at -> the : 1
the code this -> method : 1
code this method -> needs : 1
this method needs -> three : 1
method needs three -> first : 1
needs three first -> position : 1
three first position -> pointer : 1
first position pointer -> the : 1
position pointer the -> last : 1
pointer the last -> position : 1
last position pointer -> and : 1
position pointer and -> the : 1
pointer and the -> value : 1
and the value -> we : 2
and the value -> of : 3
the value we -> are : 3
value we are -> going : 2
value we are -> looking : 1
method will return -> the : 1
return the position -> of : 1
of the found -> item : 1
the found item -> as : 1
found item as -> the : 1
item as the -> if : 1
item as the -> which : 1
as the if -> no : 1
the if no -> elements : 1
the if no -> key : 1
if no elements -> the : 1
no elements the -> function : 1
elements the function -> returns : 1
the function returns -> the : 1
function returns the -> last : 1
returns the last -> position : 1
last position the -> code : 1
position the code -> snippet : 1
code snippet to -> search : 1
snippet to search -> for : 1
to search for -> an : 2
to search for -> a : 3
to search for -> the : 1
search for an -> item : 2
for an item -> in : 2
vector is as -> search : 1
is as search -> it : 1
is as search -> the : 2
as search it -> should : 1
search it should -> be : 1
should be find -> cout : 1
be find cout -> found : 1
find cout found -> in : 1
cout found in -> cout : 2
found in cout -> not : 2
found in cout -> endl : 1
in cout not -> found : 2
cout not found -> in : 2
not found in -> endl : 1
not found in -> cout : 1
not found in -> if : 2
not found in -> avl : 1
found in endl -> last : 1
in endl last -> operation : 1
endl last operation -> we : 1
last operation we -> need : 1
operation we need -> is : 1
we need is -> to : 1
need is to -> remove : 1
is to remove -> an : 1
to remove an -> item : 1
to remove an -> element : 1
from the desired -> we : 1
this we also -> need : 1
to include the -> algorithm : 1
include the algorithm -> similar : 1
the algorithm similar -> to : 1
algorithm similar to -> the : 1
out the beginning -> of : 1
the vector first -> by : 1
vector first by -> using : 1
first by using -> an : 1
using an we -> can : 1
using an we -> have : 1
we can then -> increment : 1
we can then -> display : 1
can then increment -> the : 1
then increment the -> iterator : 1
increment the iterator -> by : 1
the iterator by -> as : 1
iterator by as -> many : 1
by as many -> as : 1
as many as -> the : 1
many as the -> index : 1
as the index -> positions : 1
as the index -> and : 1
as the index -> by : 1
the index positions -> we : 1
index positions we -> are : 1
positions we are -> going : 1
going to if -> we : 1
to if we -> run : 1
run the second -> element : 1
the second element -> of : 1
second element of -> the : 1
be as remove -> the : 1
as remove the -> the : 1
the the complete -> source : 1
the complete source -> code : 1
complete source code -> of : 1
source code of -> this : 1
code of this -> vector : 1
of this vector -> you : 1
this vector you -> can : 1
vector you can -> find : 1
can find on -> the : 1
find on the -> code : 1
on the code -> repository : 1
on the code -> should : 1
the code repository -> of : 1
code repository of -> this : 1
repository of this -> book : 1
this book under -> folder : 1
book under folder -> inside : 1
under folder inside -> has : 1
folder inside has -> a : 1
inside has a -> template : 1
has a template -> class : 1
template class that -> implements : 1
class that implements -> the : 1
that implements the -> doubly : 1
implements the doubly -> linked : 1
doubly linked since -> it : 1
linked since it -> also : 1
since it also -> contains : 1
it also contains -> all : 1
also contains all -> of : 1
contains all of -> the : 1
operations that the -> data : 1
data type forget -> to : 1
type forget to -> include : 1
to include at -> the : 1
include at the -> beginning : 1
of code file -> if : 1
code file if -> we : 1
file if we -> are : 1
use data the -> usage : 1
data the usage -> of : 1
the usage of -> the : 2
the usage of -> recursion : 1
usage of the -> iterator : 1
usage of the -> linear : 1
of the iterator -> is : 1
the iterator is -> also : 1
iterator is also -> the : 1
also the same -> as : 2
same as data -> we : 1
as data we -> will : 1
will refactor our -> code : 1
refactor our code -> in : 1
our code in -> the : 1
of the project -> so : 1
the project so -> that : 1
project so that -> we : 1
use the data -> the : 2
use the data -> type : 1
be as initialize -> a : 1
be as initialize -> total : 1
initialize a linked -> print : 1
a linked print -> the : 1
linked print the -> list : 1
cout cout itr -> itr : 1
cout itr itr -> print : 1
itr itr print -> the : 1
itr print the -> list : 1
the second itr -> cout : 1
second itr cout -> cout : 1
itr cout cout -> cout : 1
value it should -> be : 1
should be itr -> find : 1
be itr find -> if : 1
itr find if -> cout : 1
find if cout -> found : 1
if cout found -> in : 1
in cout endl -> remove : 1
the first itr -> cout : 1
first itr cout -> remove : 1
itr cout remove -> fifth : 1
the fifth itr -> cout : 1
fifth itr cout -> return : 1
itr cout return -> we : 1
code we need -> a : 1
need a method -> since : 1
a method since -> the : 1
method since the -> iterator : 1
since the iterator -> of : 1
the iterator of -> the : 1
iterator of the -> type : 1
the type is -> not : 1
type is not -> a : 1
is not a -> random : 1
is not a -> ease : 1
not a random -> access : 1
a random access -> and : 1
random access and -> so : 1
access and so -> we : 1
so we need -> to : 2
so we need -> function : 1
need to increment -> it : 1
to increment it -> as : 1
increment it as -> many : 1
it as many -> times : 1
as many times -> as : 1
many times as -> the : 1
times as the -> desired : 1
as the desired -> the : 1
desired the implementation -> of : 1
this method is -> as : 1
method is as -> int : 1
is as int -> i : 1
is as int -> int : 3
is as int -> if : 1
is as int -> we : 1
as int i -> i : 1
int i i -> return : 1
i i return -> print : 1
i i return -> return : 1
i return print -> out : 1
return print out -> the : 1
out the elements -> of : 1
the following method -> for : 1
following method for -> l : 1
method for l -> l : 1
for l l -> cout : 1
l l cout -> if : 1
l cout if -> we : 1
cout if we -> build : 1
the following have -> successfully : 1
following have successfully -> built : 1
have successfully built -> our : 1
have successfully built -> others : 1
successfully built our -> own : 1
built our own -> data : 1
our own data -> structures : 1
own data structures -> in : 1
structures in and -> have : 1
in and have -> found : 1
and have found -> out : 1
have found out -> the : 1
found out the -> time : 1
each data as -> we : 1
data as we -> have : 1
we have each -> data : 1
have each data -> structure : 1
each data structure -> has : 1
each data structure -> that : 1
each data structure -> we : 1
data structure has -> its : 1
structure has its -> own : 1
its own strengths -> and : 1
own strengths and -> for : 1
strengths and for -> by : 1
and for by -> using : 1
for by using -> we : 1
by using we -> can : 1
by using we -> initially : 2
using we can -> access : 1
access the last -> element : 1
the last element -> faster : 1
the last element -> has : 1
the last element -> to : 1
the last element -> of : 1
last element faster -> than : 1
element faster than -> in : 1
faster than in -> the : 1
in the removing -> the : 1
the removing the -> first : 1
removing the first -> element : 1
first element will -> take : 1
element will take -> even : 1
will take even -> more : 1
take even more -> we : 1
even more we -> remove : 1
more we remove -> the : 1
we remove the -> first : 1
we remove the -> element : 1
remove the first -> element : 1
remove the first -> node : 1
first element since -> it : 1
element since it -> needs : 1
needs to the -> array : 1
the array inside -> the : 1
array inside the -> the : 1
inside the the -> next : 1
the the next -> we : 1
next we are -> going : 7
to build other -> data : 1
build other data -> structures : 1
other data structures -> based : 1
data structures based -> on : 1
structures based on -> the : 1
data structures we -> have : 1
structures we have -> discussed : 1
discussed in this -> these : 1
discussed in this -> please : 1
discussed in this -> linear : 1
discussed in this -> the : 1
discussed in this -> hash : 1
in this these -> are : 1
this these are -> and : 1
are and does -> indexing : 1
and does indexing -> do : 1
does indexing do -> we : 1
indexing do we -> find : 1
do we find -> out : 1
we find out -> how : 1
many elements an -> array : 1
elements an array -> does : 1
an array does -> a : 1
array does a -> pointer : 1
does a pointer -> in : 1
a pointer in -> we : 1
pointer in we -> have : 1
pointer named how -> do : 1
named how do -> we : 1
how do we -> get : 1
do we get -> the : 1
we get the -> value : 1
we get the -> following : 1
of the address -> that : 1
that the points -> four : 1
the points four -> common : 1
points four common -> operations : 1
four common operations -> in : 1
common operations in -> list : 1
operations in list -> node : 1
in list node -> has : 1
list node has -> two : 1
has two please -> is : 1
two please is -> the : 1
difference between a -> singly : 1
between a singly -> linked : 1
list and a -> doubly : 1
and a doubly -> linked : 1
doubly linked is -> the : 1
linked is the -> stl : 1
is the stl -> function : 1
the stl function -> that : 1
stl function that -> we : 1
function that we -> can : 1
can use for -> list : 1
use for list -> and : 1
for list and -> linked : 1
and linked list -> in : 1
linked list in -> of : 1
list in of -> time : 1
in of time -> complexity : 1
of time complexity -> for : 1
complexity for each -> data : 1
for each data -> structure : 2
structure that we -> have : 1
in this please -> take : 1
this please take -> a : 1
a look the -> following : 1
look the following -> reading : 1
the following reading -> sources : 1
following reading sources -> you : 1
reading sources you -> may : 1
sources you may -> find : 1
you may find -> stacks : 1
may find stacks -> and : 1
find stacks and -> the : 1
stacks and the -> previous : 1
and the previous -> we : 1
we discussed several -> linear : 2
discussed several linear -> data : 2
several linear data -> which : 1
several linear data -> such : 1
linear data which -> were : 1
data which were -> linked : 1
which were linked -> and : 1
were linked and -> doubly : 1
linked and doubly -> linked : 1
and doubly linked -> in : 1
doubly linked in -> this : 1
linked in this -> we : 1
to discuss other -> linear : 1
discuss other linear -> data : 1
other linear data -> and : 1
linear data and -> those : 1
linear data and -> data : 1
data and those -> are : 1
and those are -> and : 1
those are and -> the : 1
and the following -> are : 1
and the following -> that : 1
the following are -> the : 3
the following are -> topics : 1
following are the -> topics : 1
following are the -> popular : 1
following are the -> steps : 1
to discuss regarding -> these : 1
discuss regarding these -> three : 1
regarding these three -> data : 1
these three data -> a : 1
these three data -> types : 1
three data a -> stack : 1
data a stack -> adt : 1
a stack adt -> and : 1
stack adt and -> then : 1
adt and then -> and : 3
and then and -> popping : 1
and then and -> dequeuing : 2
then and popping -> elements : 1
and popping elements -> in : 1
popping elements in -> this : 1
elements in this -> a : 2
elements in this -> follow : 1
in this a -> queue : 1
in this a -> dequeue : 1
this a queue -> adt : 1
a queue adt -> and : 1
queue adt and -> then : 1
then and dequeuing -> elements : 2
and dequeuing elements -> in : 2
dequeuing elements in -> this : 2
this a dequeue -> adt : 1
a dequeue adt -> and : 1
dequeue adt and -> then : 1
in this follow -> along : 2
this follow along -> with : 2
with this as -> well : 3
this as well -> as : 3
as the source -> we : 1
as the source -> you : 1
as the source -> code : 1
github at a -> stack : 1
github at a -> binary : 1
github at a -> is : 1
at a stack -> type : 1
a stack type -> is : 1
stack type is -> a : 1
type is a -> list : 2
a list with -> some : 2
a list with -> a : 1
list with some -> restriction : 1
list with some -> restrictions : 1
with some restriction -> in : 1
some restriction in -> the : 1
restriction in the -> it : 1
in the it -> can : 1
in the it -> will : 1
in the it -> calls : 1
the it can -> only : 1
can only perform -> the : 1
only perform the -> operations : 1
only perform the -> following : 1
perform the operations -> called : 1
the operations called -> the : 1
operations called the -> there : 1
called the there -> are : 1
are three basic -> operations : 1
three basic operations -> in : 2
basic operations in -> data : 1
basic operations in -> the : 1
basic operations in -> a : 2
basic operations in -> linear : 1
operations in data -> and : 1
in data and -> they : 1
data and they -> are : 1
used to fetch -> the : 4
to fetch the -> value : 1
to fetch the -> the : 1
to fetch the -> operation : 1
to fetch the -> height : 2
to fetch the -> so : 1
to fetch the -> element : 2
fetch the value -> of : 1
of the top -> position : 1
of the top -> item : 1
of the top -> the : 1
the top position -> item : 1
the top position -> of : 1
top position item -> the : 1
position item the -> operation : 1
item the operation -> will : 1
operation will insert -> the : 1
will insert the -> new : 1
in the top -> and : 1
in the top -> the : 1
the top and -> the : 1
top and the -> operation : 1
and the operation -> will : 1
and the operation -> in : 1
operation will remove -> the : 1
the top the -> stack : 1
the top the -> operation : 1
top the stack -> is : 1
the stack is -> also : 1
the stack is -> not : 1
the stack is -> the : 2
the stack is -> when : 1
the stack is -> if : 1
the stack is -> or : 1
stack is also -> known : 1
is also known -> as : 2
known as in -> first : 2
as in first -> data : 1
as in first -> type : 1
in first data -> support : 1
first data support -> these : 1
data support these -> three : 1
support these three -> we : 1
these three we -> will : 1
three we will -> add : 1
will add one -> operation : 1
add one operation -> to : 1
one operation to -> the : 1
operation to the -> which : 1
to the which -> is : 1
which is to -> indicate : 1
is to indicate -> whether : 1
to indicate whether -> the : 1
to indicate whether -> iteration : 1
to indicate whether -> or : 1
indicate whether the -> stack : 1
whether the stack -> has : 1
whether the stack -> is : 1
the stack has -> elements : 1
stack has elements -> or : 1
has elements or -> please : 1
elements or please -> take : 1
or please take -> a : 1
look at following -> stack : 1
at following stack -> we : 1
following stack we -> can : 1
stack we can -> see : 1
we have storage -> containing : 1
have storage containing -> a : 1
storage containing a -> bunch : 1
containing a bunch -> of : 1
bunch of opened -> side : 1
of opened side -> is : 1
opened side is -> the : 1
side is the -> top : 1
side is the -> backside : 1
is the top -> side : 1
the top side -> so : 1
top side so -> that : 1
side so that -> we : 1
can only put -> and : 1
only put and -> take : 1
put and take -> the : 1
and take the -> number : 1
take the number -> from : 1
the number from -> that : 1
number from that -> we : 1
from that we -> can : 1
can also take -> a : 1
also take a -> peek : 1
take a peek -> at : 1
a peek at -> the : 1
peek at the -> topmost : 1
peek at the -> the : 1
at the topmost -> number : 1
the topmost number -> from : 1
topmost number from -> the : 1
from the top -> real : 1
from the top -> position : 1
from the top -> so : 1
the top real -> we : 1
top real we -> can : 1
real we can -> imagine : 1
we can imagine -> that : 1
can imagine that -> the : 1
imagine that the -> stack : 1
that the stack -> implementation : 1
that the stack -> is : 1
the stack implementation -> is : 1
stack implementation is -> like : 1
implementation is like -> when : 1
is like when -> we : 1
like when we -> wear : 1
when we wear -> many : 1
we wear many -> bangles : 1
wear many bangles -> on : 1
many bangles on -> our : 1
bangles on our -> we : 1
on our we -> put : 1
on our we -> can : 1
on our we -> we : 1
our we put -> on : 1
we put on -> the : 1
put on the -> bangles : 1
on the bangles -> one : 1
the bangles one -> by : 1
bangles one by -> one : 1
by one on -> our : 1
one on our -> hand : 1
on our hand -> only : 1
our hand only -> from : 1
hand only from -> one : 1
only from one -> while : 1
only from one -> an : 1
from one while -> taking : 1
one while taking -> off : 1
while taking off -> the : 1
taking off the -> the : 1
off the the -> last : 1
the the last -> bangle : 1
the the last -> stored : 1
the last bangle -> we : 1
last bangle we -> wear : 1
bangle we wear -> is : 1
we wear is -> the : 1
wear is the -> first : 1
the first bangle -> we : 1
first bangle we -> can : 1
bangle we can -> due : 1
we can due -> to : 1
can due to -> this : 1
due to this -> is : 1
to this is -> the : 1
is the only -> time : 1
the only time -> we : 1
only time we -> have : 1
time we have -> access : 1
time we have -> added : 1
we have access -> to : 1
have access to -> wearing : 1
access to wearing -> and : 1
to wearing and -> removing : 1
wearing and removing -> the : 1
removing the declare -> the : 1
the declare the -> class : 1
declare the class -> in : 1
class in we -> are : 1
in we are -> going : 1
to use our -> preceding : 1
use our preceding -> data : 1
use our preceding -> bst : 1
our preceding data -> type : 1
type to data -> similar : 1
to data similar -> to : 1
data similar to -> data : 1
similar to data -> we : 3
to data we -> need : 1
to data we -> can : 1
to data we -> are : 1
data we need -> private : 1
we need private -> variable : 1
need private variable -> to : 1
private variable to -> hold : 2
variable to hold -> the : 3
hold the number -> of : 1
also need another -> private : 1
need another private -> variable : 1
another private variable -> to : 1
hold the top -> node : 1
the top node -> so : 1
top node so -> that : 1
node so that -> the : 1
that the operation -> can : 1
the operation can -> easily : 1
operation can easily -> find : 1
can easily find -> the : 1
easily find the -> value : 1
find the value -> of : 2
find the value -> and : 1
the top item -> from : 1
top item from -> this : 1
item from this -> the : 1
from this the -> will : 1
this the will -> be : 1
be the following -> is : 1
declaration of data -> type : 1
declaration of data -> so : 1
of data type -> that : 1
of data type -> since : 1
of data type -> for : 1
type that we -> can : 1
in the int -> bool : 1
the int bool -> t : 1
int bool t -> void : 2
int bool t -> t : 1
bool t void -> void : 2
t void void -> we : 1
t void void -> to : 1
t void void -> void : 1
void void we -> can : 2
void we can -> see : 3
preceding code and -> as : 1
code and as -> we : 1
discussed we have -> another : 1
discussed we have -> to : 1
discussed we have -> the : 1
have another method -> used : 1
another method used -> to : 1
method used to -> ensure : 1
used to ensure -> that : 1
ensure that has -> at : 1
that has at -> least : 2
has at least -> one : 3
least one item -> before : 1
least one item -> otherwise : 1
one item before -> we : 1
item before we -> invoke : 1
before we invoke -> and : 1
we invoke and -> otherwise : 1
invoke and otherwise -> we : 1
and otherwise we -> will : 1
otherwise we will -> face : 1
we will face -> a : 1
will face a -> the : 1
face a the -> value : 1
a the value -> in : 1
stack the data -> we : 1
can only get -> the : 1
only get the -> value : 1
top the operation -> will : 1
operation will show -> the : 1
will show the -> value : 1
show the value -> of : 1
operation is as -> we : 1
following code just -> return : 1
code just return -> the : 1
just return the -> of : 3
the of return -> we : 1
the of return -> it : 1
the of return -> the : 1
can the operation -> just : 1
the operation just -> returns : 1
operation just returns -> the : 1
just returns the -> value : 3
of so no -> matter : 1
so no matter -> how : 1
no matter how -> many : 1
matter how many -> items : 1
how many items -> there : 1
many items there -> are : 1
items there are -> the : 1
there are the -> complexity : 1
there are the -> is : 1
are the complexity -> of : 1
this operation for -> both : 1
operation for both -> the : 1
both the best -> case : 1
both the best -> and : 4
case and worst -> case : 1
worst case and -> forget : 1
case and forget -> to : 1
and forget to -> invoke : 1
forget to invoke -> the : 2
to invoke the -> method : 1
to invoke the -> before : 1
to invoke the -> we : 2
to invoke the -> preceding : 1
to invoke the -> search : 1
invoke the method -> prior : 1
the method prior -> to : 1
method prior to -> the : 1
prior to the -> invocation : 1
to the invocation -> of : 1
the invocation of -> we : 1
the invocation of -> binary : 1
invocation of we -> should : 1
of we should -> not : 1
we should not -> invoke : 1
should not invoke -> the : 1
not invoke the -> operation : 1
operation if no -> item : 1
if no item -> in : 1
no item in -> since : 1
item in since -> it : 1
in since it -> can : 1
since it can -> cause : 1
since it can -> find : 1
it can cause -> a : 1
can cause a -> the : 1
cause a the -> method : 1
a the method -> itself : 1
the method itself -> simply : 1
method itself simply -> if : 1
itself simply if -> at : 1
simply if at -> least : 1
if at least -> one : 3
if at least -> two : 1
one item otherwise -> it : 1
item otherwise it -> returns : 1
otherwise it returns -> the : 1
otherwise it returns -> and : 1
it returns the -> implementation : 1
returns the implementation -> of : 1
implementation of us -> complexity : 1
of us complexity -> and : 1
us complexity and -> should : 1
complexity and should -> be : 1
and should be -> as : 1
and should be -> full : 1
be as return -> true : 1
be as return -> currentsize : 1
as return true -> if : 1
return true if -> there : 1
true if there -> are : 1
if there are -> no : 1
there are no -> return : 1
there are no -> swapped : 1
there are no -> more : 1
are no return -> return : 1
no return return -> the : 1
return return the -> items : 1
return return the -> preceding : 1
return return the -> node : 1
return the items -> of : 1
the stack we -> discussed : 1
stack we discussed -> we : 1
discussed we can -> only : 2
can only add -> a : 1
only add a -> new : 1
add a new -> item : 1
add a new -> node : 2
add a new -> element : 1
add a new -> to : 1
new item from -> the : 1
top position of -> since : 1
position of since -> the : 1
of since the -> in : 1
since the in -> similar : 1
the in similar -> in : 1
in similar in -> we : 1
similar in we -> can : 1
we can utilize -> the : 1
can utilize the -> implementation : 1
utilize the implementation -> of : 1
implementation of in -> data : 1
of in data -> type : 1
in data type -> to : 2
in data type -> adapts : 1
in data type -> will : 1
in data type -> containing : 1
type to be -> implemented : 1
to be implemented -> in : 1
be implemented in -> the : 1
implemented in the -> operation : 1
in the operation -> in : 1
data the implementation -> of : 1
be as create -> a : 3
new the next -> pointer : 1
pointer of this -> new : 3
of this new -> will : 1
of this new -> node : 2
of this new -> add : 1
this new will -> point : 1
new will point -> to : 1
point to current -> the : 1
to current the -> new : 1
node now becomes -> the : 1
becomes the one -> item : 1
the one item -> is : 1
one item is -> preceding : 1
one item is -> operation : 1
item is preceding -> code : 1
is preceding code -> snippet : 1
snippet is similar -> to : 1
to the implementation -> of : 6
of operation in -> data : 2
of operation in -> the : 3
of operation in -> operation : 1
of operation in -> take : 1
of operation in -> int : 1
of operation in -> is : 1
of operation in -> an : 1
operation in data -> except : 1
operation in data -> type : 2
operation in data -> an : 1
in data except -> it : 1
data except it -> have : 1
except it have -> a : 1
it have a -> we : 1
have a we -> just : 1
a we just -> need : 1
new then link -> that : 1
then link that -> to : 1
link that to -> the : 1
that to the -> current : 1
the current top -> node : 1
the current top -> the : 1
current top node -> by : 1
top node by -> setting : 1
node by setting -> the : 1
setting the pointer -> of : 1
current top the -> complexity : 1
top the complexity -> of : 1
is the items -> from : 1
the stack removing -> an : 1
stack removing an -> item : 1
removing an item -> in : 1
type is similar -> to : 3
similar to operation -> in : 5
similar to operation -> of : 1
to operation in -> the : 3
to operation in -> a : 3
can only access -> the : 1
only access the -> top : 1
access the top -> we : 1
the top we -> simply : 1
top we simply -> remove : 1
we simply remove -> the : 1
simply remove the -> first : 1
first node and -> make : 1
node and make -> the : 1
and make the -> variable : 1
make the variable -> handle : 1
the variable handle -> the : 1
variable handle the -> second : 1
handle the second -> the : 1
the second the -> implementation : 2
the second the -> third : 1
the second the -> code : 1
second the implementation -> of : 2
of operation should -> be : 2
nothing if stack -> is : 1
if stack is -> prepare : 1
stack is prepare -> the : 1
is prepare the -> current : 1
prepare the current -> to : 1
current to node -> the : 1
to node the -> new : 1
node the new -> node : 1
new node will -> the : 1
new node will -> and : 1
new node will -> point : 1
node will the -> next : 1
node will the -> current : 2
will the next -> pointer : 1
the current now -> safe : 3
current now safe -> to : 3
delete one item -> is : 1
item is operation -> in : 1
is operation in -> data : 1
data type adapts -> the : 1
type adapts the -> operation : 1
adapts the operation -> in : 1
operation in they -> both : 1
in they both -> have : 1
both have the -> exact : 1
exact same time -> which : 1
same time which -> is : 1
time which is -> for : 1
which is for -> best : 1
is for best -> and : 1
for best and -> worst : 1
best and worst -> case : 4
best and worst -> forget : 1
best and worst -> an : 3
best and worst -> the : 2
best and worst -> if : 1
best and worst -> is : 1
worst case a -> stack : 1
case a stack -> time : 1
a stack time -> to : 1
stack time to -> play : 1
time to play -> with : 1
to play with -> our : 1
play with our -> new : 1
with our new -> data : 1
create our preceding -> diagram : 1
our preceding diagram -> using : 1
preceding diagram using -> and : 1
diagram using and -> then : 1
using and then -> print : 1
of the using -> to : 1
the using to -> ensure : 1
using to ensure -> that : 1
stack is not -> we : 1
is not we -> are : 1
is not we -> add : 1
is not we -> can : 2
not we are -> going : 1
to use operation -> and : 1
use operation and -> use : 1
operation and use -> operation : 1
and use operation -> to : 1
use operation to -> get : 1
operation to get -> the : 2
get the topmost -> element : 1
the topmost element -> to : 1
topmost element to -> print : 1
element to print -> the : 1
print the the -> code : 1
file namespace stackint -> store : 1
namespace stackint store -> several : 1
stackint store several -> numbers : 1
store several numbers -> to : 1
several numbers to -> the : 3
numbers to the -> list : 3
list the element -> of : 3
the element of -> get : 3
element of get -> the : 3
of get the -> top : 1
of get the -> front : 2
get the top -> cout : 1
the top cout -> remove : 1
the top cout -> return : 1
top cout remove -> the : 1
cout remove the -> top : 1
cout remove the -> front : 2
remove the top -> cout : 1
remove the top -> element : 1
top cout return -> on : 1
cout return on -> the : 1
return on the -> preceding : 1
preceding the first -> number : 1
the first number -> we : 2
first number we -> store : 1
first number we -> get : 1
number we store -> in : 1
we store in -> the : 1
store in the -> in : 1
in the in -> this : 1
in the in -> other : 1
in this be -> at : 1
this be at -> the : 1
be at the -> bottom : 1
be at the -> first : 1
at the bottom -> position : 1
the bottom position -> of : 1
bottom position of -> the : 1
of the when -> we : 1
of the when -> linear : 1
when we call -> the : 1
we call the -> the : 1
we call the -> function : 1
call the the -> last : 1
the last stored -> number : 1
last stored number -> will : 1
stored number will -> be : 1
number will be -> removed : 1
will be removed -> the : 1
will be removed -> if : 1
be removed the -> following : 1
removed the following -> output : 1
following output will -> be : 2
output will be -> displayed : 2
be displayed if -> we : 1
displayed if we -> build : 1
preceding the last -> number : 1
the last number -> we : 1
last number we -> put : 1
number we put -> into : 1
we put into -> the : 1
put into the -> stack : 1
into the stack -> is : 1
stack is the -> first : 1
stack is the -> expression : 1
number we get -> when : 1
we get when -> we : 1
get when we -> invoke : 1
when we invoke -> the : 1
when we invoke -> will : 1
we invoke the -> stack : 1
we invoke the -> we : 1
invoke the stack -> adt : 1
the stack adt -> implementation : 1
stack adt implementation -> of : 1
adt implementation of -> the : 1
stack is when -> the : 1
is when the -> programming : 1
when the programming -> language : 1
the programming language -> checks : 1
programming language checks -> the : 1
language checks the -> parenthesis : 1
checks the parenthesis -> for : 1
the parenthesis for -> in : 1
parenthesis for in -> we : 1
for in we -> need : 1
need to scope -> the : 1
to scope the -> bunch : 1
scope the bunch -> of : 1
the bunch of -> lines : 1
the bunch of -> phone : 1
bunch of lines -> using : 1
of lines using -> curly : 1
lines using curly -> braces : 1
using curly braces -> when : 1
curly braces when -> initializing : 1
braces when initializing -> an : 1
when initializing an -> we : 1
initializing an we -> need : 1
need a square -> bracket : 1
a square bracket -> to : 1
square bracket to -> define : 1
bracket to define -> the : 1
define the length -> of : 1
the length of -> the : 8
the length of -> a : 1
the length of -> is : 1
the length of -> pattern : 1
length of the -> it : 1
length of the -> array : 1
length of the -> we : 3
length of the -> input : 1
length of the -> target : 1
length of the -> and : 1
of the it -> needs : 1
of the it -> only : 1
the it needs -> to : 1
needs to ensure -> that : 1
that the open -> curly : 1
the open curly -> the : 1
open curly the -> closed : 1
curly the closed -> curly : 1
the closed curly -> or : 1
closed curly or -> the : 1
curly or the -> open : 1
or the open -> square : 1
the open square -> bracket : 1
open square bracket -> has : 1
square bracket has -> the : 1
bracket has the -> close : 1
has the close -> square : 1
the close square -> see : 1
close square see -> the : 1
square see the -> following : 1
the following possibility -> for : 1
following possibility for -> the : 1
possibility for the -> parenthesis : 1
for the parenthesis -> are : 1
the parenthesis are -> three : 1
parenthesis are three -> lines : 1
are three lines -> in : 1
three lines in -> the : 1
lines in the -> preceding : 1
the preceding parenthesis -> expression : 1
preceding parenthesis expression -> for : 1
parenthesis expression for -> in : 1
expression for in -> the : 1
for in the -> first : 1
for in the -> course : 1
the first we -> can : 1
the first we -> will : 1
first we can -> see : 1
see that each -> opened : 1
that each opened -> parenthesis : 1
each opened parenthesis -> has : 1
each opened parenthesis -> to : 1
opened parenthesis has -> its : 1
parenthesis has its -> own : 1
its own closed -> also : 1
own closed also -> matched : 1
closed also matched -> for : 1
also matched for -> each : 1
matched for each -> opened : 1
for each opened -> parenthesis : 1
opened parenthesis to -> find : 1
opened parenthesis to -> be : 1
parenthesis to find -> out : 1
out the closed -> the : 1
the closed the -> proof : 1
closed the proof -> that : 1
the proof that -> it : 1
proof that it -> is : 1
that it is -> a : 1
is a valid -> parenthesis : 1
a valid parenthesis -> expression : 1
valid parenthesis expression -> is : 1
parenthesis expression is -> as : 1
expression is as -> the : 1
expression is as -> we : 1
is as the -> second : 1
is as the -> last : 1
is as the -> data : 1
as the second -> parenthesis : 1
the second parenthesis -> also : 1
second parenthesis also -> has : 1
parenthesis also has -> its : 1
also has its -> closed : 1
has its closed -> the : 1
its closed the -> first : 1
closed the first -> opened : 1
the first opened -> square : 1
first opened square -> bracket : 1
opened square bracket -> must : 1
square bracket must -> find : 1
bracket must find -> the : 1
must find the -> closed : 1
find the closed -> square : 1
the closed square -> bracket : 1
the closed square -> in : 1
closed square bracket -> before : 1
square bracket before -> it : 1
bracket before it -> finds : 1
before it finds -> the : 1
finds the other -> closed : 1
the other closed -> in : 1
other closed in -> other : 1
closed in other -> the : 1
in other the -> second : 1
the second line -> is : 1
second line is -> an : 1
line is an -> invalid : 1
is an invalid -> parenthesis : 1
an invalid parenthesis -> the : 1
invalid parenthesis the -> proof : 1
parenthesis the proof -> is : 1
the proof is -> as : 2
proof is as -> the : 2
as the last -> we : 1
as the last -> position : 1
the last we -> can : 2
the last we -> need : 1
last we can -> see : 1
last we can -> omit : 1
see that an -> opened : 1
that an opened -> squared : 1
an opened squared -> bracket : 1
opened squared bracket -> without : 1
squared bracket without -> the : 1
bracket without the -> closed : 1
without the closed -> square : 1
closed square in -> this : 1
square in this -> the : 1
this the stack -> will : 1
the stack will -> leave : 1
stack will leave -> one : 1
will leave one -> element : 1
leave one element -> in : 1
one element in -> the : 1
one element in -> a : 1
in the storage -> so : 1
the storage so -> that : 1
storage so that -> the : 1
that the parentheses -> expression : 1
the parentheses expression -> is : 1
parentheses expression is -> the : 1
expression is the -> proof : 1
is the proof -> is : 1
we built design -> code : 1
built design code -> to : 1
design code to -> check : 1
code to check -> the : 1
code to check -> a : 1
code to check -> if : 1
to check the -> validity : 1
to check the -> character : 1
to check the -> balance : 2
check the validity -> of : 1
the validity of -> the : 1
validity of the -> parenthesis : 1
of the parenthesis -> every : 1
the parenthesis every -> time : 1
parenthesis every time -> the : 1
every time the -> code : 1
time the code -> retrieves : 1
the code retrieves -> the : 1
code retrieves the -> opened : 1
retrieves the opened -> it : 1
the opened it -> just : 1
opened it just -> needs : 1
it just needs -> the : 1
it just needs -> to : 1
just needs the -> opened : 1
needs the opened -> parenthesis : 1
the opened parenthesis -> in : 1
opened parenthesis in -> the : 1
parenthesis in the -> stack : 1
the stack using -> when : 1
stack using when -> the : 1
using when the -> closed : 1
when the closed -> parenthesis : 1
the closed parenthesis -> it : 1
closed parenthesis it -> needs : 1
parenthesis it needs -> to : 1
needs to check -> whether : 1
to check whether -> the : 2
to check whether -> a : 2
check whether the -> stack : 1
check whether the -> queue : 2
stack is if -> the : 1
is if the -> expression : 1
is if the -> value : 1
is if the -> given : 1
if the expression -> must : 1
the expression must -> be : 1
expression must be -> invalid : 1
must be invalid -> since : 1
must be invalid -> as : 1
be invalid since -> there : 1
invalid since there -> is : 1
since there is -> no : 2
since there is -> a : 1
there is no -> opened : 1
there is no -> it : 1
there is no -> free : 2
is no opened -> parenthesis : 1
no opened parenthesis -> to : 1
parenthesis to be -> we : 1
to be we -> retrieve : 1
to be we -> can : 1
to be we -> have : 1
to be we -> increase : 1
to be we -> decrease : 1
be we retrieve -> the : 1
we retrieve the -> top : 1
retrieve the top -> element : 1
the top element -> using : 1
the top element -> by : 1
top element using -> the : 1
element using the -> if : 1
using the if -> the : 1
the if the -> value : 1
the if the -> deque : 1
the if the -> item : 1
the if the -> return : 7
the if the -> two : 1
the if the -> key : 4
the if the -> given : 1
the if the -> empty : 1
the if the -> inputted : 1
if the value -> is : 3
if the value -> of : 3
value is not -> matched : 1
value is not -> stored : 1
is not matched -> with : 1
not matched with -> the : 1
with the closed -> it : 1
the closed it -> must : 1
closed it must -> be : 1
be invalid as -> in : 1
invalid as in -> if : 1
as in if -> the : 1
in if the -> parenthesis : 1
in if the -> tree : 1
in if the -> return : 1
if the parenthesis -> is : 1
the parenthesis is -> it : 1
parenthesis is it -> just : 1
is it just -> needs : 1
needs to remove -> the : 1
top element by -> using : 1
by using until -> the : 1
using until the -> expression : 1
until the expression -> has : 1
the expression has -> been : 1
expression has been -> we : 1
has been we -> can : 1
been we can -> decide : 1
can decide whether -> the : 1
whether the expression -> is : 1
the expression is -> valid : 1
the expression is -> return : 1
the expression is -> otherwise : 1
the expression is -> as : 1
expression is valid -> if : 1
is valid if -> no : 1
valid if no -> element : 1
if no element -> left : 1
if no element -> before : 1
no element left -> in : 1
element left in -> the : 1
left in the -> the : 1
for this scenario -> is : 1
this scenario is -> as : 1
scenario is as -> isvalid : 1
is as isvalid -> int : 1
as isvalid int -> n : 1
isvalid int n -> stackchar : 1
int n stackchar -> for : 1
n stackchar for -> i : 1
stackchar for i -> i : 1
i if input -> is : 1
if input is -> opened : 1
input is opened -> just : 1
is opened just -> store : 1
opened just store -> it : 1
just store it -> in : 1
store it in -> the : 1
it in the -> else : 1
it in the -> repeated : 1
in the else -> else : 1
the else else -> check : 1
else else check -> when : 1
else check when -> the : 1
check when the -> is : 1
when the is -> closed : 1
the is closed -> else : 1
is closed else -> if : 1
closed else if -> if : 1
else if if -> the : 1
if if the -> stack : 1
if if the -> node : 2
if the stack -> is : 2
stack is or -> the : 1
is or the -> last : 1
or the last -> parenthesis : 1
the last parenthesis -> is : 1
last parenthesis is -> than : 1
parenthesis is than -> the : 1
is than the -> one : 1
is than the -> current : 1
than the one -> we : 1
the one we -> are : 1
the one we -> built : 1
one we are -> then : 1
we are then -> the : 1
are then the -> expression : 1
then the expression -> is : 1
expression is return -> else : 1
is return else -> return : 1
return else return -> else : 1
return else return -> if : 2
return else return -> return : 2
else return else -> return : 1
else return if -> the : 1
else return if -> val : 1
is the expression -> is : 1
expression is otherwise -> if : 1
is otherwise if -> return : 1
otherwise if return -> return : 1
if return return -> we : 1
if return return -> a : 1
we can invoke -> the : 5
we can invoke -> and : 1
we can invoke -> avl : 1
can invoke the -> preceding : 4
can invoke the -> operation : 1
invoke the preceding -> method : 1
invoke the preceding -> we : 3
invoke the preceding -> code : 2
invoke the preceding -> operations : 1
the preceding method -> using : 1
preceding method using -> the : 1
following code prepare -> array : 1
code prepare array -> for : 1
prepare array for -> the : 1
array for the -> char : 1
for the char -> ask : 1
the char ask -> user : 1
char ask user -> to : 1
ask user to -> input : 1
to input the -> cout : 1
to input the -> string : 1
input the cout -> type : 1
the cout type -> the : 1
cout type the -> parenthesis : 1
type the parenthesis -> expression : 1
the parenthesis expression -> cout : 1
parenthesis expression cout -> press : 1
expression cout press -> cin : 1
cout press cin -> check : 1
press cin check -> the : 1
cin check the -> bool : 1
check the bool -> bo : 1
the bool bo -> notify : 1
bool bo notify -> the : 1
bo notify the -> cout : 1
notify the cout -> cout : 1
the cout cout -> expr : 1
cout cout expr -> expression : 1
cout expr expression -> is : 1
expr expression is -> cout : 1
expression is cout -> cout : 1
the code and -> supply : 1
code and supply -> the : 1
and supply the -> following : 1
supply the following -> will : 1
the following will -> say : 1
following will say -> that : 1
will say that -> the : 1
that the expression -> is : 1
the following can -> try : 1
the following can -> divide : 1
following can try -> other : 1
can try other -> parentheses : 1
try other parentheses -> expressions : 1
other parentheses expressions -> to : 1
parentheses expressions to -> ensure : 1
expressions to ensure -> that : 1
the code we -> have : 1
code we have -> built : 1
have built a -> queue : 1
built a queue -> type : 1
a queue type -> is : 1
queue type is -> a : 1
with some restrictions -> to : 1
some restrictions to -> the : 1
restrictions to the -> effect : 1
to the effect -> that : 1
the effect that -> the : 1
effect that the -> inserting : 1
that the inserting -> operation : 1
inserting operation can -> only : 1
operation can only -> be : 2
only be performed -> from : 3
be performed from -> one : 1
be performed from -> the : 3
be performed from -> both : 1
performed from one -> side : 1
from one side -> the : 1
one side the -> and : 1
side the and -> the : 1
the and the -> removing : 1
the and the -> pointer : 1
the and the -> sorting : 1
the and the -> algorithm : 1
the and the -> a : 1
and the removing -> operation : 1
removing operation can -> only : 1
performed from the -> other : 1
performed from the -> back : 1
performed from the -> front : 1
from the other -> side : 1
the other side -> similar : 1
other side similar -> to : 1
side similar to -> data : 1
can develop the -> data : 1
develop the data -> type : 1
data type by -> using : 1
type by using -> the : 1
using the data -> for : 1
the data for -> we : 1
data for we -> can : 1
data for we -> will : 1
we can adopt -> the : 1
can adopt the -> operation : 1
adopt the operation -> in : 1
data type since -> we : 2
type since we -> are : 2
to insert an -> element : 1
insert an element -> from : 1
element from is -> similar : 1
from is similar -> to : 1
similar to in -> data : 1
to in data -> for : 1
in data for -> we : 1
for we will -> use : 1
use the implementation -> of : 2
the data data -> type : 1
type is also -> known : 1
in first type -> since : 1
first type since -> the : 1
since the element -> that : 1
since the element -> number : 1
the element that -> is : 1
that is inserted -> from : 1
is inserted from -> the : 1
inserted from the -> back : 1
from the back -> will : 2
from the back -> of : 1
from the back -> which : 2
from the back -> to : 1
the back will -> travel : 1
the back will -> be : 1
back will travel -> to : 1
will travel to -> the : 1
travel to the -> front : 1
to the front -> side : 1
the front side -> before : 1
the front side -> which : 1
the front side -> and : 1
front side before -> it : 1
side before it -> can : 1
before it can -> be : 1
can be take -> a : 1
be take a -> look : 1
the following diagram -> showing : 1
the following diagram -> of : 1
the following diagram -> to : 1
following diagram showing -> the : 1
diagram showing the -> we : 1
showing the we -> can : 1
the preceding a -> line : 1
the preceding a -> nested : 1
the preceding a -> searching : 1
preceding a line -> of : 1
a line of -> queueing : 1
line of queueing -> numbers : 1
of queueing numbers -> which : 1
queueing numbers which -> has : 1
numbers which has -> two : 1
which has two -> sides : 1
has two sides -> we : 1
two sides we -> insert : 1
sides we insert -> a : 1
insert a number -> from : 1
from the right -> side : 1
the right side -> is : 1
right side is -> the : 1
is the backside -> in : 1
the backside in -> the : 1
backside in the -> and : 1
in the and -> it : 1
in the and -> a : 1
in the and -> the : 1
in the and -> they : 1
in the and -> used : 1
the and it -> then : 1
and it then -> travels : 1
it then travels -> to : 1
then travels to -> the : 1
travels to the -> left : 1
the left side -> until : 1
the left side -> and : 1
left side until -> at : 1
side until at -> the : 1
until at the -> frontside : 1
at the frontside -> and : 1
the frontside and -> is : 1
frontside and is -> ready : 1
and is ready -> to : 1
is ready to -> this : 1
ready to this -> data : 1
to this data -> type : 1
similar to a -> queue : 1
similar to a -> binary : 1
similar to a -> jump : 1
similar to a -> as : 1
to a queue -> in : 1
a queue in -> real : 1
queue in real -> for : 1
in real for -> a : 1
real for a -> queue : 1
for a queue -> at : 1
a queue at -> a : 1
queue at a -> where : 1
at a where -> we : 1
a where we -> have : 1
where we have -> to : 1
have to stand -> in : 1
to stand in -> a : 1
stand in a -> line : 1
in a line -> from : 1
a line from -> the : 1
line from the -> back : 1
the back of -> the : 2
back of the -> queue : 1
back of the -> the : 1
of the queue -> and : 1
the queue and -> wait : 1
queue and wait -> until : 1
and wait until -> all : 1
wait until all -> of : 1
until all of -> the : 1
of the people -> in : 1
the people in -> front : 1
people in front -> of : 1
in front of -> us : 1
front of us -> have : 1
of us have -> been : 1
us have been -> following : 1
have been following -> is : 1
been following is -> the : 1
the data quite -> similar : 1
data quite similar -> to : 1
quite similar to -> the : 2
to the declaration -> of : 1
of data so -> please : 1
data so please -> take : 1
so please take -> a : 1
take a int -> bool : 1
a int bool -> t : 1
void void to -> data : 1
void to data -> the : 1
to data the -> data : 1
data type also -> adopts : 1
type also adopts -> the : 1
also adopts the -> data : 1
adopts the data -> it : 1
the data it -> has : 1
the data it -> depend : 1
data it has -> two : 1
it has two -> private : 1
has two private -> and : 1
two private and -> instead : 1
private and instead -> of : 1
and instead of -> and : 1
instead of and -> data : 1
and data it -> also : 1
data it also -> has : 1
it also has -> operation : 1
also has operation -> to : 1
has operation to -> retrieve : 1
operation to retrieve -> the : 3
to retrieve the -> an : 1
to retrieve the -> minimum : 1
to retrieve the -> maximum : 1
retrieve the an -> operation : 1
the an operation -> to : 1
an operation to -> insert : 1
operation to insert -> a : 2
new element in -> the : 2
new element in -> if : 1
new element in -> a : 1
the and a -> operation : 1
and a operation -> to : 1
a operation to -> remove : 1
operation to remove -> the : 1
operation to remove -> an : 1
remove the a -> value : 1
the a value -> from : 1
the a value -> if : 1
from queue we -> discussed : 1
queue we discussed -> we : 1
can only fetch -> the : 1
only fetch the -> front : 1
fetch the front -> value : 1
the front value -> of : 1
front value of -> the : 1
implement the operation -> to : 1
the operation to -> get : 1
the operation to -> ensure : 1
the operation to -> fetch : 1
the operation to -> insert : 1
the operation to -> peek : 1
of the front -> the : 2
the front the -> implementation : 1
the front the -> time : 1
front the implementation -> should : 2
be as just -> return : 2
as just return -> the : 2
of return it -> just : 1
return it just -> returns : 1
it just returns -> the : 2
front the time -> complexity : 1
complexity for this -> operation : 2
operation is for -> both : 4
operation is for -> the : 1
is for both -> best : 4
is for both -> the : 1
is for both -> case : 1
for both best -> and : 6
both best and -> worst : 8
and worst forget -> to : 1
worst forget to -> invoke : 1
invoke the before -> invoking : 1
the before invoking -> the : 1
before invoking the -> operation : 1
before invoking the -> implementation : 1
invoking the operation -> to : 1
operation to ensure -> that : 1
that the queue -> is : 1
the queue is -> not : 1
the queue is -> the : 1
the queue is -> similar : 1
the queue is -> empty : 2
the queue is -> it : 1
the queue is -> to : 1
queue is not -> the : 1
is not the -> implementation : 1
is not the -> searched : 6
is not the -> hash : 1
not the implementation -> of : 1
of operation for -> the : 1
for the data -> type : 1
type is completely -> the : 1
is completely the -> same : 1
completely the same -> as : 1
as the implementation -> of : 2
in data an -> element : 1
data an element -> into : 1
queue a new -> item : 1
data type can -> only : 1
type can only -> be : 1
the back which -> means : 1
the back which -> is : 1
back which means -> the : 1
which means the -> newly : 1
means the newly -> inserted : 1
the newly inserted -> item : 1
newly inserted item -> will : 1
inserted item will -> be : 1
item will be -> pointed : 1
will be pointed -> by : 1
be pointed by -> the : 1
by the and -> the : 1
and the pointer -> of : 2
the current element -> will : 1
current element will -> point : 1
element will point -> to : 1
this new element -> to : 1
element to create -> a : 1
a new chaining -> it : 1
new chaining it -> can : 1
chaining it can -> be : 1
can be applied -> if : 1
be applied if -> at : 1
applied if at -> least : 1
least one element -> before : 1
least one element -> or : 1
one element before -> we : 1
element before we -> insert : 1
element before we -> enqueue : 1
before we insert -> the : 1
we insert the -> new : 1
we insert the -> first : 1
we insert the -> the : 2
we insert the -> data : 1
new if is -> empty : 1
if is empty -> when : 1
is empty when -> we : 1
empty when we -> are : 1
when we are -> going : 2
new we have -> to : 1
have to set -> the : 1
element to be -> the : 2
element to be -> checked : 1
element to be -> we : 2
element to be -> then : 1
to be the -> front : 1
to be the -> reference : 1
be the front -> and : 1
the front and -> the : 1
the front and -> back : 2
front and the -> back : 1
and the back -> explore : 1
the back explore -> the : 1
back explore the -> following : 1
explore the following -> create : 1
node new if -> the : 3
if the queue -> is : 3
queue is the -> new : 1
is the new -> node : 1
node will and -> if : 1
will and if -> at : 1
and if at -> least : 1
least one in -> the : 1
one in the -> the : 1
the the current -> be : 1
the current be -> the : 1
current be the -> back : 1
be the back -> element : 1
the back element -> so : 1
back element so -> the : 1
element so the -> next : 1
the current point -> to : 2
current point to -> the : 2
become the back -> one : 1
the back one -> element : 1
back one element -> is : 1
preceding code there -> are : 1
code there are -> two : 1
there are two -> conditions : 1
are two conditions -> when : 1
two conditions when -> inserting : 1
conditions when inserting -> a : 1
when inserting a -> new : 1
data it depend -> on : 1
number of elements -> inside : 1
number of elements -> in : 4
number of elements -> of : 2
of elements inside -> the : 1
elements inside the -> data : 2
inside the data -> so : 1
inside the data -> the : 1
inside the data -> types : 1
the data so -> the : 1
data so the -> time : 1
so the time -> complexity : 4
operation is always -> for : 1
is always for -> both : 1
always for both -> best : 1
and worst an -> element : 3
worst an element -> from : 2
worst an element -> into : 1
an element can -> also : 1
element can also -> be : 1
also be performed -> from : 2
from the front -> side : 1
from the front -> we : 1
from the front -> which : 1
front side which -> is : 1
side which is -> done : 1
which is done -> by : 3
done by using -> this : 1
done by using -> we : 2
using this is -> similar : 1
this is similar -> to : 1
data the current -> front : 1
the current front -> node : 1
current front node -> and : 1
front node and -> then : 1
and then assigning -> the : 1
then assigning the -> next : 1
assigning the next -> element : 1
the next element -> as : 1
the next element -> of : 3
next element as -> the : 1
element as the -> new : 1
the new front -> the : 1
new front the -> implementation : 1
point the front -> to : 1
the front to -> the : 1
front to the -> element : 1
element is to -> the : 1
element is to -> will : 1
is to the -> operation : 1
is to the -> preceding : 1
the operation does -> not : 1
operation does not -> depend : 1
does not depend -> on : 1
not depend on -> the : 3
of items inside -> the : 1
items inside the -> data : 1
data the time -> complexity : 2
and worst the -> queue : 1
and worst the -> deque : 1
and worst the -> function : 1
worst the queue -> create : 1
the queue create -> a : 1
queue create a -> new : 1
queue create a -> binary : 1
a new instance -> that : 1
new instance that -> contains : 1
instance that contains -> the : 1
that contains the -> different : 1
contains the different -> as : 1
the different as -> shown : 1
different as shown -> in : 1
in the earlier -> the : 1
the earlier the -> element : 1
earlier the element -> will : 1
the element will -> be : 1
element will be -> inserted : 2
will be inserted -> by : 1
will be inserted -> in : 1
be inserted by -> using : 1
inserted by using -> the : 1
can then display -> all : 1
then display all -> queue : 1
display all queue -> elements : 1
all queue elements -> by : 1
queue elements by -> using : 1
elements by using -> and : 1
using and the -> code : 1
file namespace queueint -> enqueue : 1
namespace queueint enqueue -> several : 1
queueint enqueue several -> numbers : 1
enqueue several numbers -> to : 2
get the front -> cout : 2
get the front -> then : 1
the front cout -> remove : 2
the front cout -> return : 2
the front cout -> initialize : 1
front cout remove -> the : 2
remove the front -> cout : 3
front cout return -> contrast : 1
front cout return -> if : 1
cout return contrast -> to : 1
return contrast to -> the : 1
contrast to the -> data : 1
data the first -> element : 1
first element inserted -> into : 1
element inserted into -> the : 1
the queue will -> be : 1
queue will be -> the : 1
be the first -> element : 1
first element that -> will : 1
element that will -> be : 1
be removed if -> we : 1
removed if we -> invoke : 1
if we invoke -> the : 1
if we invoke -> operation : 1
invoke the we -> should : 1
invoke the we -> can : 2
the we should -> get : 1
we should get -> the : 1
should get the -> following : 1
following output if -> we : 1
output if we -> build : 1
run the a -> deque : 1
the a deque -> for : 1
a deque for -> is : 1
deque for is -> a : 1
for is a -> queue : 1
is a queue -> that : 1
a queue that -> can : 1
queue that can -> insert : 1
that can insert -> and : 1
can insert and -> remove : 1
insert and remove -> items : 1
insert and remove -> an : 1
insert and remove -> the : 1
and remove items -> from : 1
remove items from -> two : 1
items from two -> build : 1
from two build -> this : 1
two build this -> data : 1
build this data -> we : 1
this data we -> are : 1
going to adopt -> type : 1
to adopt type -> we : 1
adopt type we -> already : 1
type we already -> built : 1
we already built -> in : 1
already built in -> the : 1
built in the -> previous : 1
the previous similar -> to : 1
previous similar to -> type : 1
similar to type -> also : 1
to type also -> has : 1
type also has -> the : 1
also has the -> operation : 1
has the operation -> to : 1
operation to fetch -> the : 2
fetch the the -> operation : 1
the the operation -> in : 1
the the operation -> of : 1
data type will -> become : 2
data type will -> have : 1
type will become -> in : 2
will become in -> the : 1
will become in -> data : 1
become in the -> data : 1
data and the -> operation : 1
data and the -> owner : 1
become in data -> since : 1
in data since -> we : 1
data since we -> adopt : 1
since we adopt -> the : 1
we adopt the -> data : 1
adopt the data -> type : 1
data type instead -> the : 1
data type instead -> of : 2
type instead the -> implementation : 1
instead the implementation -> will : 1
will be those -> we : 1
be those we -> are : 1
those we are -> also : 1
build the following -> operation : 1
the following operation -> to : 1
following operation to -> fetch : 1
fetch the operation -> to : 1
into the front -> it : 1
the front it -> will : 1
front it will -> be : 1
will be similar -> to : 3
be similar to -> the : 2
be similar to -> a : 1
operation in operation -> to : 1
in operation to -> remove : 1
remove an element -> from : 1
remove an element -> by : 1
back will be -> similar : 1
operation in take -> a : 1
in take a -> look : 1
following diagram of -> the : 1
diagram of the -> data : 1
the data on -> the : 1
data on the -> preceding : 1
preceding the declaration -> of : 1
the data structure -> should : 1
data structure should -> be : 1
structure should be -> as : 1
as int bool -> t : 1
bool t t -> void : 1
t t void -> void : 1
void void that -> we : 1
void that we -> now : 1
that we now -> use : 1
we now use -> data : 1
now use data -> type : 1
use data type -> instead : 1
use data type -> if : 1
type instead of -> data : 1
type instead of -> a : 1
instead of data -> type : 1
implementation of data -> type : 1
data type for -> data : 1
type for data -> a : 1
for data a -> value : 1
data a value -> from : 1
from a implementation -> of : 1
a implementation of -> the : 1
the and operations -> for : 1
and operations for -> data : 1
operations for data -> type : 1
for data type -> is : 1
type is the -> same : 1
the for data -> for : 1
for data for -> the : 1
data for the -> it : 1
for the it -> just : 1
the it just -> returns : 1
return the implementation -> of : 3
this operation depend -> on : 1
operation depend on -> the : 1
of the complexity -> of : 1
the deque are -> two : 1
the deque are -> going : 1
deque are two -> ways : 1
ways to enqueue -> a : 1
to enqueue a -> new : 2
enqueue a new -> element : 2
enqueue a new -> just : 1
into the data -> the : 1
data the front -> side : 1
front side and -> from : 1
side and from -> the : 1
and from the -> back : 1
the back to -> enqueue : 1
back to enqueue -> a : 1
new element from -> the : 1
the front we -> can : 1
front we can -> use : 1
the which will -> create : 1
the which will -> traverse : 1
which will create -> a : 1
new node and -> then : 1
and then assigns -> the : 1
then assigns the -> pointer : 1
assigns the pointer -> of : 1
current the pointer -> of : 1
current node points -> to : 1
new the node -> will : 1
the node will -> change : 1
node will change -> to : 1
will change to -> the : 1
change to the -> new : 1
if the only -> node : 1
the only node -> that : 1
only node that -> resides : 1
node that resides -> in : 1
that resides in -> the : 1
resides in the -> the : 1
the the will -> also : 1
the will also -> point : 1
will also point -> to : 1
also point to -> this : 1
implementation of should -> be : 3
of should be -> as : 3
the current will -> no : 2
current will no -> longer : 2
the current is -> the : 1
the current is -> greater : 1
current is the -> previous : 1
become the if -> the : 1
if the deque -> is : 2
the deque is -> the : 1
the deque is -> just : 1
deque is the -> is : 1
is the is -> also : 1
is the is -> in : 1
is the is -> then : 3
is the is -> terminal : 1
the is also -> the : 1
also the one -> element : 1
the one element -> is : 2
is to will -> create : 1
to will create -> a : 1
current node will -> point : 1
current node will -> be : 2
node will point -> to : 2
this new and -> the : 1
new and the -> pointer : 1
the current we -> have : 1
the current we -> go : 1
current we have -> a : 1
a new so -> we : 1
new so we -> assign : 1
so we assign -> the : 1
assign the node -> to : 1
new if no -> element : 1
no element before -> we : 1
before we enqueue -> a : 1
we enqueue a -> new : 1
a new just -> ignore : 1
new just ignore -> the : 1
just ignore the -> preceding : 1
ignore the preceding -> step : 1
the preceding step -> and : 1
preceding step and -> invoke : 1
step and invoke -> the : 1
and invoke the -> operation : 1
the operation the -> implementation : 1
operation the implementation -> should : 1
deque is just -> simply : 1
become the one -> element : 1
element is two -> enqueueing : 1
is two enqueueing -> operations : 1
two enqueueing operations -> we : 1
enqueueing operations we -> have : 1
operations we have -> built : 1
have built do -> not : 1
built do not -> depend : 1
do not depend -> on : 2
number of so -> their : 1
of so their -> complexity : 1
so their complexity -> is : 1
their complexity is -> for : 1
complexity is for -> both : 1
the deque to -> enqueueing : 1
deque to enqueueing -> a : 1
to enqueueing a -> new : 1
enqueueing a new -> dequeuing : 1
a new dequeuing -> an : 1
new dequeuing an -> element : 1
dequeuing an element -> in : 1
element in type -> can : 1
in type can -> also : 1
type can also -> be : 1
performed from both -> the : 1
from both the -> front : 1
both the front -> and : 2
front and back -> when : 1
front and back -> we : 1
and back when -> we : 1
back when we -> are : 1
going to dequeue -> from : 1
going to dequeue -> an : 1
to dequeue from -> the : 1
dequeue from the -> front : 1
the front which -> is : 1
front which is -> done : 1
using we initially -> assign : 2
we initially assign -> the : 2
initially assign the -> new : 1
initially assign the -> to : 1
the current exists -> then : 1
current exists then -> it : 1
exists then it -> points : 1
then it points -> its : 1
it points its -> pointer : 1
points its pointer -> to : 1
its pointer to -> safe : 1
pointer to safe -> to : 1
to safe to -> delete : 1
safe to delete -> the : 2
to delete the -> frontmost : 1
to delete the -> the : 1
to delete the -> if : 1
delete the frontmost -> the : 1
the frontmost the -> implementation : 1
frontmost the implementation -> of : 1
nothing if deque -> is : 2
if deque is -> save : 1
if deque is -> if : 1
deque is save -> the : 1
point the to -> the : 2
to dequeue an -> element : 1
dequeue an element -> from : 1
back which is -> done : 1
assign the to -> of : 1
the to of -> the : 1
to of the -> we : 1
the we just -> point : 1
the we just -> need : 2
we just point -> the : 1
just point the -> pointer : 1
current to so -> that : 1
to so that -> it : 1
that it no -> longer : 1
it no longer -> points : 1
no longer points -> to : 1
longer points to -> the : 1
to the safe -> to : 1
the safe to -> delete : 1
delete the the -> implementation : 1
deque is if -> deque : 1
is if deque -> element : 1
if deque element -> is : 1
deque element is -> only : 1
the current set -> the : 1
current set the -> new : 1
is we have -> designed : 1
is we have -> to : 1
we have designed -> do : 1
have designed do -> not : 1
designed do not -> depend : 1
of the deque -> so : 1
the deque so -> we : 1
deque so we -> can : 1
complexity of these -> two : 1
of these two -> operations : 1
these two operations -> both : 1
two operations both -> best : 1
operations both best -> and : 1
worst the deque -> are : 1
deque are going -> to : 1
create a deque -> containing : 1
a deque containing -> the : 1
deque containing the -> elements : 1
containing the elements -> shown : 1
the elements shown -> in : 1
elements shown in -> the : 1
the preceding since -> the : 1
preceding since the -> data : 1
since the data -> type : 1
use the operation -> to : 1
operation to peek -> at : 1
to peek at -> the : 1
at the the -> value : 1
the the value -> will : 1
the value will -> be : 2
value will be -> displayed : 1
value will be -> every : 1
value will be -> at : 1
value will be -> stored : 1
be displayed from -> back : 1
displayed from back -> to : 1
from back to -> the : 1
to the code -> will : 1
file namespace deque -> enqueue : 1
namespace deque enqueue -> several : 1
deque enqueue several -> numbers : 1
preceding we get -> the : 1
the following this -> we : 1
following this we -> have : 1
successfully built others -> linear : 1
built others linear -> data : 1
others linear data -> and : 1
data and data -> we : 1
and data we -> can : 1
can use data -> type : 1
if we need -> storage : 3
if we need -> to : 2
we need storage -> that : 2
we need storage -> which : 1
need storage that -> only : 1
need storage that -> can : 1
storage that only -> has : 1
that only has -> one : 1
only has one -> side : 1
has one side -> to : 1
one side to -> insert : 1
side to insert -> and : 1
to insert and -> remove : 2
and remove an -> can : 1
remove an can -> use : 1
an can use -> type : 1
can use type -> if : 1
use type if -> we : 1
need storage which -> has : 1
storage which has -> to : 1
which has to -> insert : 1
has to insert -> and : 1
the element from -> a : 1
element from a -> different : 1
from a different -> and : 1
a different and -> if : 1
different and if -> we : 1
storage that can -> be : 1
accessed from two -> both : 1
from two both -> the : 1
two both the -> front : 1
and back we -> can : 1
back we can -> use : 1
complexity for all -> of : 1
complexity for all -> cases : 1
for all of -> the : 1
the operations in -> these : 1
operations in these -> three : 1
in these three -> data : 1
types and depend -> on : 1
and depend on -> the : 1
of the elements -> in : 1
of the elements -> of : 1
of the elements -> so : 1
the elements in -> the : 1
the elements in -> an : 1
elements in the -> data : 3
elements in the -> left : 1
elements in the -> hash : 9
elements in the -> linked : 1
data the next -> we : 1
to discuss various -> sorting : 1
discuss various sorting -> algorithms : 1
various sorting algorithms -> to : 1
sorting algorithms to -> arrange : 1
algorithms to arrange -> the : 1
arrange the elements -> inside : 1
the elements inside -> the : 1
the data types -> we : 1
the data types -> can : 1
data types we -> have : 1
types we have -> discussed : 1
have discussed so -> three : 1
have discussed so -> far : 1
discussed so three -> basic : 1
so three basic -> operations : 1
the data does -> lifo : 1
data does lifo -> refer : 1
does lifo refer -> to : 1
lifo refer to -> and : 1
refer to and -> with : 1
to and with -> which : 1
and with which -> data : 1
with which data -> type : 1
which data type -> in : 1
in this is -> it : 1
this is it -> an : 1
is it an -> example : 1
it an example -> of : 1
an example of -> stack : 1
example of stack -> implementation : 1
of stack implementation -> in : 1
stack implementation in -> real : 1
stack implementation in -> a : 1
implementation in real -> is : 1
in real is -> stack : 1
real is stack -> implementation : 1
is stack implementation -> in : 1
implementation in a -> programming : 1
in a programming -> is : 1
a programming is -> deque : 1
programming is deque -> also : 1
is deque also -> known : 1
deque also known -> is : 1
also known is -> the : 1
known is the -> difference : 1
difference between queue -> and : 1
between queue and -> is : 1
queue and is -> the : 1
data types can -> you : 1
types can you -> guess : 1
can you guess -> why : 1
you guess why -> the : 1
guess why the -> number : 1
why the number -> of : 1
of elements in -> the : 4
of elements in -> ascending : 1
data type affect -> the : 1
type affect the -> you : 1
affect the you -> can : 1
the you can -> refer : 1
you can refer -> to : 4
can refer to -> the : 4
following data elements -> using : 1
a sorting the -> previous : 1
a sorting the -> a : 1
sorting the previous -> we : 1
linear data such -> as : 1
such as linked -> and : 2
as linked and -> in : 1
as linked and -> starting : 1
linked and in -> this : 1
and in this -> we : 1
going to arrange -> data : 1
to arrange data -> elements : 1
arrange data elements -> in : 1
data elements in -> a : 1
in a list -> using : 2
in a list -> by : 1
a list using -> some : 1
a list using -> a : 1
list using some -> sorting : 1
using some sorting -> algorithm : 1
some sorting algorithm -> the : 1
sorting algorithm the -> following : 1
sorting algorithm the -> output : 1
algorithm the following -> are : 1
algorithm the following -> is : 1
are the popular -> sorting : 1
the popular sorting -> algorithms : 1
popular sorting algorithms -> that : 1
sorting algorithms that -> we : 1
sorting algorithms that -> give : 1
sorting algorithms that -> are : 1
algorithms that we -> are : 1
the source you -> are : 1
the source you -> will : 1
source you are -> going : 1
you are going -> to : 1
going to require -> the : 1
to require the -> desktop : 1
and linux block -> ide : 1
linux block ide -> will : 1
block ide will -> find : 4
github at sort -> is : 1
at sort is -> a : 1
sort is a -> simple : 1
sort is a -> sorting : 3
is a simple -> sorting : 1
is a simple -> searching : 1
is a simple -> example : 1
a simple sorting -> but : 1
simple sorting but -> it : 1
sorting but it -> has : 1
but it has -> a : 2
has a slow -> process : 1
a slow process -> it : 1
slow process it -> an : 1
process it an -> input : 1
it an input -> list : 1
an input list -> into : 2
an input list -> is : 1
input list into -> two : 3
list into two -> sublist : 2
list into two -> the : 1
into two sublist -> of : 2
two sublist of -> items : 2
sublist of items -> already : 2
sublist of items -> remaining : 2
of items already -> right : 1
of items already -> sorted : 1
items already right -> a : 1
already right a -> sublist : 1
right a sublist -> of : 1
a sublist of -> items : 2
of items remaining -> to : 2
items remaining to -> be : 2
remaining to be -> sorted : 2
to be sorted -> in : 2
to be sorted -> and : 1
be sorted in -> the : 2
sorted in the -> rest : 2
sorted in the -> left : 1
in the rest -> of : 2
going to list -> of : 1
to list of -> elements : 1
list of elements -> in : 1
elements in ascending -> the : 1
in ascending the -> algorithm : 1
in ascending the -> lowest : 1
ascending the algorithm -> will : 1
the algorithm will -> greatest : 1
the algorithm will -> return : 1
the algorithm will -> calculate : 1
the algorithm will -> iterate : 1
algorithm will greatest -> value : 1
will greatest value -> to : 1
greatest value to -> the : 1
to the right -> position : 1
to the right -> sublist : 1
to the right -> we : 2
to the right -> return : 1
to the right -> sub : 1
to the right -> go : 1
the right position -> followed : 1
the right position -> the : 1
the right position -> as : 2
right position followed -> by : 1
position followed by -> the : 1
by the second -> and : 1
second and so -> similar : 1
similar to air -> bubbles : 1
to air bubbles -> when : 1
air bubbles when -> they : 1
bubbles when they -> rise : 1
when they rise -> to : 1
they rise to -> the : 1
rise to the -> suppose : 1
to the suppose -> we : 1
an array of -> unsorted : 1
an array of -> these : 1
an array of -> when : 1
array of unsorted -> elements : 1
of unsorted elements -> and : 1
unsorted elements and -> are : 1
elements and are -> going : 1
and are going -> to : 1
going to sort -> them : 1
going to sort -> in : 1
going to sort -> this : 1
going to sort -> the : 2
going to sort -> an : 2
going to sort -> are : 1
to sort them -> using : 1
sort them using -> the : 1
them using the -> bubble : 1
using the bubble -> sort : 2
the bubble sort -> the : 1
the bubble sort -> we : 1
the bubble sort -> time : 1
bubble sort the -> following : 1
sort the following -> are : 1
are the steps -> required : 1
are the steps -> to : 2
the steps required -> to : 1
steps required to -> perform : 1
required to perform -> the : 1
to perform the -> sorting : 1
to perform the -> first : 1
perform the sorting -> each : 1
the sorting each -> pair : 1
sorting each pair -> of : 1
each pair of -> adjacent : 3
each pair of -> left : 1
each pair of -> if : 1
each pair of -> string : 1
pair of adjacent -> for : 1
pair of adjacent -> and : 1
pair of adjacent -> items : 2
of adjacent for -> instance : 1
adjacent for instance -> with : 1
for instance with -> with : 1
instance with with -> and : 1
with with and -> so : 1
with with and -> with : 1
with and so -> that : 1
with and so -> it : 1
with and so -> use : 1
and so that -> pair : 1
so that pair -> if : 1
that pair if -> the : 1
pair if the -> items : 1
if the items -> are : 1
if the items -> we : 1
the items are -> not : 1
the items are -> which : 1
items are not -> in : 1
are not in -> the : 2
not in the -> correct : 2
in the correct -> since : 1
in the correct -> order : 1
in the correct -> so : 1
in the correct -> the : 2
in the correct -> position : 3
in the correct -> we : 1
in the correct -> which : 1
in the correct -> based : 1
the correct since -> we : 1
correct since we -> are : 1
to sort in -> the : 1
sort in the -> correct : 1
the correct order -> will : 1
correct order will -> and : 1
order will and -> so : 1
will and so -> the : 1
and so the -> first : 1
so the first -> and : 1
first and second -> steps : 1
first and second -> this : 1
and second steps -> until : 1
second steps until -> the : 1
steps until the -> end : 1
until the end -> of : 2
array is the -> largest : 1
array is the -> step : 1
is the largest -> item : 1
the largest item -> is : 1
largest item is -> in : 1
in the last -> we : 2
can omit this -> item : 1
omit this item -> and : 1
this item and -> repeat : 1
item and repeat -> step : 1
and repeat step -> until : 1
repeat step until -> step : 1
step until step -> until : 1
until step until -> no : 1
step until no -> swap : 1
until no swap -> item : 1
no swap item -> is : 1
swap item is -> create : 1
item is create -> an : 1
is create an -> unsorted : 1
create an unsorted -> array : 1
an unsorted array -> containing : 1
unsorted array containing -> six : 1
array containing six -> by : 1
containing six by -> using : 1
six by using -> the : 1
bubble sort we -> are : 1
sort we are -> going : 1
to sort this -> we : 1
sort this we -> will : 1
we will pick -> the : 1
we will pick -> as : 1
will pick the -> first : 1
pick the first -> pair : 1
pick the first -> position : 1
the first pair -> of : 1
first pair of -> adjacent : 1
of adjacent and -> since : 1
adjacent and since -> is : 1
and since is -> greater : 2
since is greater -> than : 2
greater than we -> have : 1
than we have -> to : 1
have to swap -> the : 1
have to swap -> with : 1
to swap the -> position : 1
to swap the -> pivot : 1
swap the position -> and : 1
the position and -> now : 1
position and now -> the : 1
and now the -> array : 1
now the array -> we : 1
the array we -> need : 1
the array we -> and : 1
the array we -> pass : 1
the array we -> used : 2
array we need -> to : 1
need to swap -> and : 1
need to swap -> these : 1
need to swap -> the : 1
to swap and -> the : 1
swap and the -> greatest : 1
and the greatest -> item : 1
the greatest item -> in : 2
greatest item in -> the : 2
in the each -> pair : 1
the each pair -> of : 1
of adjacent items -> in : 1
of adjacent items -> if : 1
adjacent items in -> comparison : 1
items in comparison -> will : 1
in comparison will -> swap : 1
comparison will swap -> the : 1
will swap the -> pair : 1
will swap the -> last : 1
swap the pair -> so : 1
the pair so -> be : 1
pair so be -> the : 1
so be the -> last : 1
be the last -> position : 1
last position in -> the : 1
position in the -> by : 1
position in the -> input : 1
position in the -> we : 1
position in the -> the : 1
in the by -> the : 1
in the by -> repeating : 1
the by the -> array : 2
by the array -> will : 2
by the array -> should : 2
the array will -> is : 1
the array will -> then : 1
the array will -> be : 1
array will is -> now : 1
will is now -> in : 1
is now in -> the : 2
now in the -> correct : 2
now in the -> right : 1
the correct so -> we : 1
correct so we -> need : 1
to include it -> in : 1
include it in -> the : 1
in the repeated -> in : 1
the repeated in -> the : 1
repeated in the -> remaining : 1
in the remaining -> unsorted : 1
the remaining unsorted -> we : 1
the remaining unsorted -> in : 1
remaining unsorted we -> do : 1
unsorted we do -> the : 1
we do the -> same : 1
do the same -> process : 1
do the same -> preceding : 1
the same process -> as : 1
same process as -> we : 1
process as we -> did : 1
preceding we compare -> and : 1
we compare and -> so : 1
we compare and -> we : 1
compare and so -> no : 1
and so no -> swapping : 1
so no swapping -> is : 1
no swapping is -> and : 1
no swapping is -> when : 1
swapping is and -> then : 1
and then compare -> and : 1
and then compare -> it : 1
then compare and -> where : 1
compare and where -> again : 1
and where again -> no : 1
where again no -> swapping : 1
again no swapping -> is : 1
swapping is when -> we : 1
when we compare -> and : 1
compare and we -> need : 1
and we need -> to : 3
to swap these -> items : 1
swap these items -> so : 1
these items so -> the : 1
items so the -> array : 1
so the array -> we : 1
array we and -> they : 1
we and they -> need : 1
and they need -> to : 1
they need to -> be : 1
need to be -> swapped : 1
to be swapped -> so : 1
to be swapped -> with : 1
be swapped so -> now : 1
swapped so now -> in : 1
so now in -> the : 1
correct the array -> will : 1
array will then -> function : 1
will then function -> will : 1
then function will -> go : 1
function will go -> on : 1
will go on -> until : 1
go on until -> there : 2
on until there -> is : 2
until there is -> nothing : 2
there is nothing -> to : 1
there is nothing -> left : 1
is nothing to -> be : 1
nothing to be -> we : 1
can go further -> and : 1
go further and -> develop : 1
further and develop -> code : 1
and develop code -> for : 1
develop code for -> this : 1
for this sorting -> we : 1
for this sorting -> algorithm : 1
this sorting we -> will : 1
this sorting we -> sort : 1
sorting we will -> have : 1
function that passes -> an : 1
that passes an -> array : 1
passes an array -> and : 1
an array and -> the : 1
array and the -> length : 1
array and the -> range : 1
array and the -> value : 2
and the length -> of : 2
array as the -> array : 1
array as the -> pivot : 1
as the array -> we : 1
array we pass -> to : 1
pass to this -> function : 1
to this function -> will : 1
this function will -> be : 2
this function will -> return : 1
function will be -> so : 1
function will be -> and : 1
function will be -> log : 1
function will be -> where : 1
function will be -> for : 1
function will be -> as : 2
will be so -> we : 1
be so we -> need : 1
we need function -> provided : 1
need function provided -> by : 1
function provided by -> stl : 1
provided by stl -> in : 1
by stl in -> in : 1
stl in in -> this : 1
in in this -> we : 1
we have variable -> to : 1
have variable to -> hold : 1
hold the remaining -> unsorted : 1
remaining unsorted in -> the : 1
unsorted in the -> this : 1
in the this -> variable : 1
in the this -> means : 1
in the this -> function : 1
in the this -> we : 1
the this variable -> is : 1
variable is set -> with : 1
is set with -> the : 1
set with the -> length : 1
with the length -> of : 1
the we then -> iterate : 1
the we then -> pick : 1
the we then -> compare : 1
we then iterate -> all : 1
we then iterate -> through : 1
then iterate all -> unsorted : 1
iterate all unsorted -> elements : 1
all unsorted elements -> until : 1
unsorted elements until -> there : 1
elements until there -> are : 1
until there are -> no : 1
are no swapped -> which : 1
no swapped which -> is : 1
swapped which is -> marked : 1
which is marked -> by : 1
is marked by -> as : 1
marked by as -> we : 1
by as we -> discussed : 1
we discussed when -> we : 1
discussed when we -> unsorted : 1
when we unsorted -> we : 1
we unsorted we -> swap : 1
unsorted we swap -> each : 1
we swap each -> pair : 1
swap each pair -> of : 1
adjacent items if -> they : 1
items if they -> are : 1
if they are -> not : 1
if they are -> an : 1
if they are -> cout : 1
they are not -> in : 1
correct the code -> should : 1
namespace int flag -> for : 1
int flag for -> swapping : 1
flag for swapping -> bool : 1
for swapping bool -> the : 1
swapping bool the -> value : 1
bool the value -> will : 1
will be every -> time : 1
be every time -> one : 1
every time one -> element : 1
time one element -> has : 1
one element has -> been : 1
element has been -> int : 1
element has been -> so : 1
element has been -> if : 1
has been int -> unsortedelements : 1
been int unsortedelements -> if : 1
int unsortedelements if -> at : 1
unsortedelements if at -> least : 1
at least two -> element : 1
least two element -> are : 1
two element are -> it : 1
element are it -> will : 1
are it will -> be : 1
will be isswapped -> iterate : 1
be isswapped iterate -> through : 1
isswapped iterate through -> the : 1
through the i -> i : 1
the i i -> unsortedelements : 1
the i i -> arrsize : 1
the i i -> move : 1
i i unsortedelements -> if : 1
i unsortedelements if -> isswapped : 1
unsortedelements if isswapped -> after : 1
if isswapped after -> the : 1
isswapped after the -> last : 1
after the last -> element : 1
last element has -> been : 1
has been so -> it : 1
been so it -> will : 1
will be ignored -> in : 1
be ignored in -> the : 1
ignored in the -> next : 1
in the next -> do : 1
in the next -> for : 1
the next do -> comparison : 1
next do comparison -> again : 1
do comparison again -> if : 1
comparison again if -> swapped : 1
again if swapped -> all : 1
if swapped all -> elements : 1
swapped all elements -> have : 1
all elements have -> been : 1
elements have been -> cout : 1
have been cout -> initialize : 1
been cout initialize -> a : 1
cout initialize a -> new : 13
a new int -> int : 13
new int int -> arrsize : 13
int int arrsize -> display : 7
int int arrsize -> define : 6
int arrsize display -> the : 7
arrsize display the -> initial : 7
arrsize display the -> sorted : 2
display the initial -> cout : 7
the initial cout -> for : 7
initial cout for -> i : 7
cout for i -> cout : 6
cout for i -> i : 1
cout cout sort -> the : 7
cout sort the -> array : 7
sort the array -> with : 7
sort the array -> by : 1
the array with -> bubblesort : 2
the array with -> selectionsort : 1
the array with -> insertionsort : 1
the array with -> mergesort : 1
the array with -> quicksort : 2
array with bubblesort -> display : 2
with bubblesort display -> the : 2
bubblesort display the -> sorted : 2
display the sorted -> cout : 7
the sorted cout -> array : 7
sorted cout array -> for : 7
cout array for -> i : 7
array for i -> cout : 6
array for i -> i : 1
preceding we used -> flag : 1
we used flag -> to : 1
used flag to -> indicate : 1
flag to indicate -> whether : 1
indicate whether iteration -> is : 1
whether iteration is -> needed : 1
iteration is needed -> or : 1
is needed or -> useful : 1
needed or useful -> to : 1
or useful to -> stop : 1
useful to stop -> the : 1
to stop the -> iteration : 1
stop the iteration -> if : 1
the iteration if -> we : 1
iteration if we -> pass : 1
if we pass -> a : 2
we pass a -> sorted : 4
pass a sorted -> array : 2
pass a sorted -> list : 1
pass a sorted -> for : 1
a sorted array -> to : 1
a sorted array -> on : 1
a sorted array -> as : 1
a sorted array -> containing : 1
sorted array to -> the : 1
array to the -> so : 1
to the so -> it : 1
to the so -> why : 1
the so it -> will : 1
it will only -> need : 1
it will only -> execute : 1
it will only -> take : 1
will only need -> to : 1
only need to -> iterate : 1
through the input -> array : 1
the input array -> elements : 1
the input array -> into : 3
the input array -> halved : 1
input array elements -> the : 1
array elements the -> time : 1
elements the time -> complexity : 1
of this function -> the : 1
of this function -> is : 2
of this function -> will : 1
this function the -> best : 1
function the best -> case : 1
best case if -> we : 2
best case if -> the : 2
best case if -> no : 1
case if we -> pass : 1
case if we -> build : 1
case if we -> found : 1
case if we -> have : 1
sorted array on -> the : 1
array on the -> and : 1
on the and -> since : 1
the and since -> a : 1
and since a -> nested : 1
since a nested -> iteration : 1
a nested iteration -> in : 1
nested iteration in -> the : 1
iteration in the -> bubble : 1
in the bubble -> sort : 1
bubble sort time -> complexity : 1
sort time complexity -> for : 1
for the worst -> case : 1
for the worst -> for : 1
worst case if -> we : 2
preceding we should -> see : 2
should see the -> following : 2
on the to -> also : 1
the to also -> divides : 1
the to also -> a : 1
to also divides -> an : 1
also divides an -> input : 1
divides an input -> list : 1
divides an input -> array : 1
items already sorted -> in : 1
already sorted in -> the : 1
in the left -> side : 1
in the left -> and : 3
in the left -> which : 1
in the left -> by : 1
in the left -> the : 1
in the left -> sublist : 1
in the left -> with : 1
in the left -> subtree : 4
in the left -> we : 1
in the left -> print : 1
left side and -> a : 1
side and a -> sublist : 1
and a sublist -> of : 1
of the if -> we : 7
of the if -> the : 2
of the if -> all : 1
of the if -> no : 1
to sort the -> input : 1
to sort the -> array : 1
to sort the -> left : 1
to sort the -> list : 1
to sort the -> two : 1
to sort the -> is : 1
to sort the -> it : 1
to sort the -> elements : 1
sort the input -> list : 1
the input list -> in : 1
the input list -> is : 1
the input list -> into : 1
input list in -> ascending : 1
list in ascending -> the : 1
ascending the lowest -> items : 1
the lowest items -> will : 1
lowest items will -> be : 1
items will be -> in : 1
in the leftmost -> position : 1
the leftmost position -> in : 1
leftmost position in -> the : 1
in the input -> these : 1
the input these -> are : 1
input these are -> the : 1
the steps to -> perform : 1
the steps to -> convert : 2
steps to perform -> a : 1
perform a selection -> sort : 1
a selection sort -> on : 1
selection sort on -> a : 1
sort on a -> given : 1
a given input -> the : 1
given input the -> first : 1
input the first -> index : 1
the first index -> of : 4
the first index -> and : 1
the first index -> with : 1
the first index -> is : 1
first index of -> the : 4
of the unsorted -> sublist : 2
of the unsorted -> starting : 1
of the unsorted -> and : 1
of the unsorted -> it : 2
the unsorted sublist -> and : 1
the unsorted sublist -> that : 1
the unsorted sublist -> remains : 1
the unsorted sublist -> while : 2
unsorted sublist and -> mark : 1
sublist and mark -> it : 1
and mark it -> as : 2
mark it as -> if : 1
mark it as -> the : 1
it as if -> the : 1
if the first -> sorting : 1
if the first -> time : 1
if the first -> cell : 1
the first sorting -> the : 1
first sorting the -> index : 1
sorting the index -> should : 1
the index should -> be : 1
index should be -> through : 1
should be through -> the : 1
be through the -> elements : 1
through the elements -> of : 1
through the elements -> from : 1
the unsorted starting -> at : 1
unsorted starting at -> its : 1
starting at its -> first : 1
at its first -> first : 1
its first first -> it : 1
first first it -> should : 1
first it should -> be : 1
should be and -> compare : 1
be and compare -> the : 1
and compare the -> element : 1
and compare the -> sorted : 1
compare the element -> in : 1
in the iteration -> of : 1
the iteration of -> if : 1
the iteration of -> the : 1
iteration of if -> the : 1
of if the -> value : 1
the current index -> is : 1
the current index -> finishing : 1
the current index -> if : 1
the current index -> right : 1
current index is -> lower : 1
index is lower -> than : 1
lower than the -> first : 1
lower than the -> reference : 1
lower than the -> right : 1
lower than the -> left : 1
lower than the -> pivot : 2
lower than the -> by : 1
lower than the -> the : 1
lower than the -> searched : 5
lower than the -> algorithm : 1
than the first -> set : 1
the first set -> the : 1
first set the -> current : 1
set the current -> index : 1
set the current -> as : 1
current index finishing -> the : 1
index finishing the -> unsorted : 1
finishing the unsorted -> elements : 1
the unsorted elements -> swap : 1
the unsorted elements -> j : 1
unsorted elements swap -> each : 1
elements swap each -> value : 1
swap each value -> of : 1
each value of -> the : 1
of the index -> of : 1
of the index -> is : 1
the unsorted and -> step : 1
unsorted and step -> unsorted : 1
and step unsorted -> sublist : 1
step unsorted sublist -> has : 1
unsorted sublist has -> only : 1
sublist has only -> one : 1
only one item -> borrow : 1
one item borrow -> the : 1
item borrow the -> unsorted : 1
borrow the unsorted -> array : 1
the unsorted array -> we : 1
unsorted array we -> used : 1
array we used -> in : 4
we used in -> the : 4
we used in -> jump : 1
used in the -> preceding : 2
used in the -> previous : 1
used in the -> binary : 1
the preceding bubble -> sort : 1
preceding bubble sort -> which : 1
bubble sort which -> has : 1
sort which has -> the : 1
has the then -> perform : 1
the then perform -> the : 1
then perform the -> selection : 1
perform the selection -> sort : 1
the selection sort -> algorithm : 1
the selection sort -> function : 1
selection sort algorithm -> on : 1
sort algorithm on -> in : 1
sort algorithm on -> we : 1
algorithm on in -> the : 1
on in the -> first : 1
first we will -> pick : 1
will pick as -> the : 1
pick as the -> of : 1
pick as the -> first : 1
pick as the -> we : 2
pick as the -> reference : 1
pick as the -> it : 1
pick as the -> pivot : 1
the of we -> iterate : 1
of we iterate -> through : 1
we iterate through -> to : 1
we iterate through -> the : 2
iterate through to -> and : 1
iterate through to -> the : 1
through to and -> find : 1
to and find -> the : 1
and find the -> lowest : 1
and find the -> correct : 1
and find the -> index : 1
and find the -> middle : 1
find the lowest -> item : 1
find the lowest -> contrary : 1
the lowest item -> in : 3
the lowest item -> so : 1
lowest item in -> the : 3
we can now -> swap : 1
can now swap -> and : 1
now swap and -> as : 1
swap and as -> in : 1
and as in -> the : 1
the following stores -> the : 1
following stores the -> sorted : 1
stores the sorted -> we : 1
the sorted we -> can : 1
sorted we can -> pick : 1
sorted we can -> merge : 1
we can pick -> as : 1
can pick as -> the : 1
as the first -> index : 1
unsorted sublist that -> holds : 1
sublist that holds -> through : 1
that holds through -> the : 1
holds through the -> iteration : 1
through the iteration -> of : 1
iteration of the -> unsorted : 1
the unsorted it -> is : 1
the unsorted it -> to : 1
unsorted it is -> found : 1
it is found -> is : 1
is found is -> the : 1
found is the -> lowest : 1
is the lowest -> so : 1
the lowest so -> not : 1
lowest so not -> swapped : 1
so not swapped -> with : 1
not swapped with -> please : 1
swapped with please -> see : 1
with please see -> the : 1
the following got -> the : 1
following got the -> first : 1
got the first -> index : 1
unsorted it to -> the : 1
to the previous -> it : 1
to the previous -> node : 1
the previous it -> be : 1
previous it be -> swapped : 1
it be swapped -> with : 1
be swapped with -> anything : 1
be swapped with -> the : 1
swapped with anything -> since : 1
with anything since -> the : 1
anything since the -> lowest : 1
since the lowest -> item : 1
in the unsorted -> as : 1
the unsorted as -> we : 1
unsorted as we -> can : 1
the following of -> and : 1
the following of -> shown : 1
following of and -> have : 1
of and have -> been : 1
and have been -> the : 1
have been the -> go : 1
have been the -> code : 1
been the go -> on : 1
the go on -> until : 1
is nothing left -> to : 1
nothing left to -> be : 1
left to be -> we : 1
be we have -> now : 1
be we have -> to : 1
we have now -> understood : 1
have now understood -> the : 1
now understood the -> concept : 1
understood the concept -> of : 1
concept of selection -> we : 1
of selection we -> can : 1
selection we can -> develop : 1
develop a code -> to : 1
a code to -> make : 1
a code to -> solve : 1
a code to -> convert : 3
a code to -> check : 1
code to make -> performing : 1
to make performing -> selection : 1
make performing selection -> sorts : 1
performing selection sorts -> a : 1
selection sorts a -> lot : 1
sorts a lot -> similar : 1
a lot similar -> to : 1
lot similar to -> the : 1
to the selection -> sort : 1
selection sort function -> will : 1
sort function will -> also : 1
function will also -> pass : 1
will also pass -> that : 1
also pass that -> needs : 1
pass that needs -> to : 1
that needs to -> be : 1
needs to be -> sorted : 1
be sorted and -> the : 1
sorted and the -> length : 1
we then pick -> the : 1
then pick the -> first : 1
position of each -> unsorted : 1
position of each -> character : 1
of each unsorted -> sublist : 1
each unsorted sublist -> to : 1
unsorted sublist to -> be : 1
sublist to be -> swapped : 1
swapped with the -> lowest : 1
with the lowest -> item : 1
in the current -> unsorted : 1
in the current -> the : 1
in the current -> index : 1
the current unsorted -> this : 1
current unsorted this -> will : 1
unsorted this will -> be : 1
this will be -> repeated : 1
will be repeated -> until : 1
be repeated until -> the : 1
repeated until the -> unsorted : 1
until the unsorted -> sublist : 1
unsorted sublist remains -> at : 1
sublist remains at -> one : 1
remains at one -> the : 1
at one the -> code : 1
one the code -> should : 1
namespace int variable -> to : 1
int variable to -> store : 1
variable to store -> the : 1
to store the -> index : 1
to store the -> sorted : 1
to store the -> negative : 1
store the index -> of : 1
store the index -> in : 1
of the minimum -> in : 1
the minimum in -> each : 1
minimum in each -> int : 1
in each int -> iterate : 1
each int iterate -> until : 1
int iterate until -> the : 1
until the i -> i : 1
i i arrsize -> set : 1
i arrsize set -> the : 1
arrsize set the -> first : 1
set the first -> unsorted : 1
set the first -> item : 1
the first unsorted -> as : 1
the first unsorted -> with : 1
first unsorted as -> the : 1
unsorted as the -> minimum : 1
as the minimum -> minindex : 1
the minimum minindex -> iterate : 1
minimum minindex iterate -> through : 1
minindex iterate through -> the : 1
through the unsorted -> elements : 1
unsorted elements j -> i : 1
elements j i -> j : 1
j i j -> set : 1
i j set -> the : 1
j set the -> new : 1
the new minimum -> if : 1
new minimum if -> the : 1
minimum if the -> saved : 1
if the saved -> minimum : 1
the saved minimum -> value : 1
saved minimum value -> is : 1
minimum value is -> than : 1
value is than -> the : 1
than the current -> index : 1
than the current -> we : 1
current index if -> minindex : 1
index if minindex -> swap : 1
if minindex swap -> the : 1
minindex swap the -> the : 1
swap the the -> first : 1
the the first -> unsorted : 1
the the first -> thing : 1
first unsorted with -> the : 1
unsorted with the -> minimum : 1
with the minimum -> cout : 1
the minimum cout -> initialize : 1
minimum cout initialize -> a : 1
array with selectionsort -> display : 1
with selectionsort display -> the : 1
selectionsort display the -> sorted : 1
preceding a nested -> loop : 1
a nested loop -> in : 2
nested loop in -> a : 2
loop in a -> the : 2
a the outer -> loop : 2
outer loop is -> used : 2
loop is used -> to : 5
used to iterate -> the : 2
used to iterate -> through : 1
used to iterate -> to : 1
iterate the unsorted -> sublist : 2
unsorted sublist while -> the : 2
sublist while the -> inner : 2
while the inner -> loop : 2
inner loop is -> used : 2
used to find -> the : 5
used to find -> a : 1
the lowest contrary -> to : 1
lowest contrary to -> bubble : 1
contrary to bubble -> selection : 1
to bubble selection -> sort : 1
bubble selection sort -> cannot : 1
selection sort cannot -> detect : 1
sort cannot detect -> whether : 1
cannot detect whether -> an : 1
detect whether an -> input : 1
whether an input -> list : 1
input list is -> sorted : 1
input list is -> sorting : 1
list is sorted -> at : 1
is sorted at -> the : 1
sorted at the -> beginning : 1
of this sorting -> algorithm : 3
of this sorting -> as : 1
this sorting algorithm -> is : 1
this sorting algorithm -> will : 1
this sorting algorithm -> become : 1
this sorting algorithm -> the : 1
this sorting algorithm -> in : 1
algorithm is for -> both : 1
algorithm is for -> the : 1
the best and -> worst : 3
the best and -> the : 1
and worst if -> we : 1
worst if we -> build : 1
preceding we are -> going : 5
going to see -> the : 3
to see the -> following : 3
on the sort -> is : 1
the sort is -> a : 1
is a sorting -> algorithm : 3
a sorting algorithm -> that : 3
sorting algorithm that -> is : 2
sorting algorithm that -> arranges : 1
algorithm that is -> similar : 1
algorithm that is -> used : 1
that is similar -> a : 1
is similar a -> hand : 1
similar a hand -> of : 1
a hand of -> poker : 2
hand of poker -> this : 1
hand of poker -> is : 1
of poker this -> sorting : 1
poker this sorting -> algorithm : 1
sorting algorithm will -> also : 1
sorting algorithm will -> give : 1
algorithm will also -> divide : 1
will also divide -> the : 1
also divide the -> list : 1
divide the list -> into : 1
the list into -> a : 1
the list into -> left : 1
list into a -> sorted : 1
into a sorted -> and : 1
a sorted and -> unsorted : 1
sorted and unsorted -> sublist : 1
and unsorted sublist -> in : 1
unsorted sublist in -> the : 1
sublist in the -> sorting : 1
in the sorting -> for : 1
the sorting for -> pick : 1
sorting for pick -> an : 1
for pick an -> item : 1
pick an item -> as : 1
pick an item -> to : 1
an item as -> a : 1
item as a -> then : 1
as a then -> go : 1
a then go -> through : 1
then go through -> the : 1
through the sorted -> sublist : 2
through the sorted -> to : 1
the sorted sublist -> and : 1
the sorted sublist -> that : 1
sorted sublist and -> find : 1
sublist and find -> the : 1
find the correct -> position : 2
the correct position -> based : 1
the correct position -> to : 1
the correct position -> in : 1
the correct position -> and : 1
the correct position -> the : 1
correct position based -> on : 1
position based on -> performing : 1
based on performing -> a : 1
on performing a -> this : 1
performing a this -> process : 1
a this process -> is : 1
this process is -> repeated : 1
this process is -> usually : 1
process is repeated -> until : 1
is repeated until -> all : 1
repeated until all -> the : 1
until all the -> items : 1
all the items -> are : 1
items are which -> means : 1
are which means -> that : 1
which means that -> we : 1
have to iterate -> through : 5
have to iterate -> string : 1
have to iterate -> the : 1
through all of -> the : 2
of the use -> our : 1
the use our -> previous : 1
use our previous -> then : 1
our previous then -> perform : 1
previous then perform -> an : 1
then perform an -> insertion : 1
perform an insertion -> sort : 1
an insertion sort -> algorithm : 1
insertion sort algorithm -> on : 1
algorithm on we -> as : 1
on we as -> the : 1
we as the -> sorted : 1
as the sorted -> so : 1
the sorted so -> we : 1
sorted so we -> pick : 1
sorted so we -> can : 1
so we pick -> as : 1
we pick as -> the : 4
the we compare -> the : 1
we compare the -> reference : 1
we compare the -> elements : 1
compare the reference -> which : 1
the reference which -> is : 1
reference which is -> with : 1
which is with -> the : 2
is with the -> sorted : 1
is with the -> following : 1
with the sorted -> see : 1
the sorted see -> the : 1
sorted see the -> following : 1
following is lower -> than : 1
lower than will -> be : 1
than will be -> shifted : 1
than will be -> and : 1
will be shifted -> to : 3
be shifted to -> and : 1
be shifted to -> the : 2
shifted to and -> since : 1
to and since -> no : 1
to and since -> its : 1
and since no -> more : 1
since no more -> items : 1
no more items -> are : 1
more items are -> in : 1
items are in -> the : 1
are in the -> sorted : 1
are in the -> except : 1
in the sorted -> is : 1
in the sorted -> as : 1
in the sorted -> imagine : 1
in the sorted -> from : 1
the sorted is -> put : 1
sorted is put -> and : 1
is put and -> in : 1
put and in -> the : 1
the sorted as -> we : 1
sorted as we -> can : 1
following we move -> to : 1
we move to -> which : 1
we move to -> the : 1
move to which -> is : 1
which is we -> will : 1
which is we -> then : 1
is we will -> set : 1
is we will -> try : 1
will set it -> as : 1
set it as -> a : 1
it as a -> reference : 1
as a reference -> item : 1
a reference item -> rather : 1
reference item rather -> than : 1
item rather than -> iterating : 1
rather than iterating -> through : 1
than iterating through -> the : 1
iterating through the -> sorted : 1
sorted sublist that -> contains : 1
sublist that contains -> and : 1
that contains and -> we : 1
contains and we -> will : 1
will have something -> similar : 1
have something similar -> to : 1
something similar to -> the : 1
following is compared -> with : 1
is compared with -> will : 2
is compared with -> since : 1
is compared with -> we : 1
compared with will -> be : 2
with will be -> shifted : 2
shifted to the -> place : 2
to the place -> and : 1
to the place -> of : 1
the place and -> since : 1
place and since -> is : 1
greater than now -> by : 1
than now by -> the : 1
now by the -> array : 1
array will be -> as : 1
as we pick -> as : 1
as the reference -> and : 1
the reference and -> then : 1
reference and then -> iterate : 1
and then iterate -> through : 2
then iterate through -> to : 1
then iterate through -> the : 1
then iterate through -> pattern : 1
through to the -> sorted : 1
to the sorted -> which : 1
the sorted which -> is : 1
sorted which is -> and : 1
is and please -> see : 1
and please see -> the : 1
following the reference -> item : 1
the reference item -> is : 2
the reference item -> since : 1
the reference item -> and : 1
reference item is -> compared : 2
item is compared -> with : 2
the place of -> the : 1
place of the -> reference : 1
of the reference -> item : 1
reference item since -> lower : 1
item since lower -> than : 1
since lower than -> the : 2
than the reference -> item : 1
than the reference -> value : 1
compared with since -> greater : 1
with since greater -> than : 1
since greater than -> will : 1
greater than will -> be : 1
will be and -> as : 1
will be and -> then : 1
will be and -> since : 1
be and as -> we : 1
following do the -> same : 1
the same preceding -> iteration : 1
same preceding iteration -> for : 1
preceding iteration for -> the : 1
iteration for the -> remaining : 1
for the remaining -> and : 1
the remaining and -> until : 1
remaining and until -> got : 1
and until got -> a : 1
until got a -> sorted : 1
got a sorted -> array : 1
sorted array as -> design : 1
sorted array as -> a : 1
array as design -> code : 1
as design code -> based : 1
design code based -> on : 1
code based on -> the : 1
iterate each element -> to : 1
each element to -> be : 1
be the reference -> item : 1
reference item and -> based : 1
item and based -> on : 1
and based on -> this : 1
on this reference -> we : 1
this reference we -> can : 1
reference we can -> iterate : 1
we can iterate -> the : 1
we can iterate -> through : 1
can iterate the -> sorted : 1
iterate the sorted -> the : 1
the sorted the -> code : 1
sorted the code -> should : 1
namespace int iterate -> to : 1
int iterate to -> all : 1
iterate to all -> i : 1
to all i -> i : 1
all i i -> set : 1
i i set -> the : 1
i set the -> current : 1
current as reference -> int : 1
as reference int -> refvalue : 1
reference int refvalue -> variable : 1
int refvalue variable -> to : 1
refvalue variable to -> shift : 1
variable to shift -> the : 1
to shift the -> to : 1
to shift the -> element : 1
to shift the -> minimum : 1
shift the to -> right : 1
the to right -> int : 1
to right int -> iterate : 1
right int iterate -> through : 1
the sorted to -> insert : 1
sorted to insert -> the : 1
insert the reference -> in : 1
the reference in -> right : 1
the reference in -> the : 2
reference in right -> i : 1
in right i -> j : 1
right i j -> if : 1
i j if -> the : 1
j if the -> value : 1
current is greater -> than : 1
the reference value -> move : 1
the reference value -> is : 1
reference value move -> the : 1
value move the -> current : 1
move the current -> value : 1
the current value -> to : 1
the current value -> of : 1
current value to -> right : 1
value to right -> put : 1
to right put -> the : 1
right put the -> reference : 1
put the reference -> in : 2
reference in the -> current : 2
current the line -> to : 1
the line to -> put : 1
line to put -> the : 1
to put the -> reference : 1
to put the -> greater : 1
current index right -> cout : 1
index right cout -> initialize : 1
right cout initialize -> a : 1
array with insertionsort -> display : 1
with insertionsort display -> the : 1
insertionsort display the -> sorted : 1
in the to -> also : 1
to also a -> nested : 1
also a nested -> loop : 1
correct position to -> insert : 1
position to insert -> the : 1
insert the this -> will : 1
the this will -> make : 1
this will make -> the : 1
make the time -> complexity : 2
sorting algorithm become -> the : 1
algorithm become the -> worst : 1
become the worst -> case : 1
worst case in -> the : 1
in the inner -> we : 1
the inner we -> have : 1
inner we have -> an : 1
have an comparison -> that : 1
an comparison that -> will : 1
comparison that will -> break : 1
that will break -> the : 1
will break the -> inner : 1
break the inner -> loop : 1
inner loop if -> the : 1
if the reference -> value : 1
reference value is -> greater : 1
value is greater -> than : 4
than the biggest -> item : 1
the biggest item -> in : 1
biggest item in -> the : 1
the sorted imagine -> we : 1
sorted imagine we -> pass : 1
imagine we pass -> a : 1
a sorted list -> to : 1
a sorted list -> by : 1
sorted list to -> will : 1
list to will -> ignore : 1
to will ignore -> it : 1
will ignore it -> will : 1
ignore it will -> only : 1
will only execute -> so : 1
only execute so -> for : 1
execute so for -> the : 1
so for the -> best : 1
for the best -> case : 3
for the best -> the : 2
for the best -> it : 1
for the best -> time : 1
for the best -> we : 1
best case scenario -> the : 1
case scenario the -> time : 1
scenario the time -> complexity : 1
algorithm the output -> on : 1
the output on -> the : 2
on the screen -> should : 1
on the screen -> will : 1
the screen should -> be : 1
screen should be -> as : 1
as follows when -> we : 1
follows when we -> build : 1
the preceding sort -> is : 1
preceding sort is -> an : 1
sort is an -> efficient : 1
is an efficient -> sorting : 1
an efficient sorting -> divides : 1
efficient sorting divides -> the : 1
sorting divides the -> input : 1
divides the input -> array : 3
input array into -> two : 3
input array into -> left : 1
input array into -> three : 1
input array into -> several : 1
array into two -> parts : 1
array into two -> the : 2
array into two -> which : 1
array into two -> sublists : 1
array into two -> then : 1
into two parts -> of : 1
two parts of -> a : 1
parts of a -> it : 1
of a it -> sorts : 1
a it sorts -> each : 1
it sorts each -> sublist : 1
sorts each sublist -> and : 1
each sublist and -> then : 1
sublist and then -> merges : 1
sublist and then -> the : 1
and then merges -> to : 1
then merges to -> sort : 1
merges to sort -> each : 1
to sort each -> the : 1
sort each the -> algorithm : 1
each the algorithm -> divides : 1
the algorithm divides -> the : 1
algorithm divides the -> sublist : 1
divides the sublist -> in : 1
the sublist in -> two : 1
sublist in two -> if : 1
in two if -> this : 1
two if this -> sublist : 1
if this sublist -> of : 1
this sublist of -> the : 1
sublist of the -> sublist : 1
of the sublist -> can : 1
of the sublist -> search : 1
the sublist can -> be : 1
sublist can be -> two : 1
sublist can be -> divided : 1
can be two -> then : 1
be two then -> it : 1
two then it -> will : 1
then it will -> the : 1
it will the -> idea : 1
will the idea -> of : 1
the idea of -> the : 1
idea of the -> merge : 1
of the merge -> sort : 2
the merge sort -> is : 1
the merge sort -> algorithm : 1
merge sort is -> that : 1
sort is that -> it : 1
it will merge -> all : 1
will merge all -> the : 1
merge all the -> sorted : 1
all the sorted -> sublists : 1
the sorted sublists -> into : 1
sorted sublists into -> the : 1
sublists into the -> fully : 1
into the fully -> sorted : 1
the fully sorted -> we : 1
the fully sorted -> array : 2
fully sorted we -> have : 1
sorted we have -> an : 1
array containing these -> as : 1
array containing these -> elements : 1
containing these as -> shown : 1
these as shown -> in : 1
following can divide -> the : 1
can divide the -> array : 1
can divide the -> selected : 1
divide the array -> which : 1
divide the array -> into : 1
the array which -> the : 1
array which the -> first : 1
which the first -> sublist : 1
the first sublist -> can : 1
first sublist can -> be : 1
can be divided -> as : 1
be divided as -> well : 1
divided as well -> to : 1
as well to -> become : 1
well to become -> we : 1
to become we -> can : 1
become we can -> sort : 1
we can sort -> these : 1
we can sort -> it : 1
can sort these -> sublists : 1
sort these sublists -> and : 1
these sublists and -> they : 1
sublists and they -> will : 1
and they will -> be : 1
they will be -> and : 1
they will be -> in : 2
they will be -> exactly : 1
be and then -> we : 1
we can merge -> this : 1
we can merge -> these : 1
can merge this -> sublist : 1
merge this sublist -> so : 1
this sublist so -> that : 1
sublist so that -> it : 2
it becomes as -> shown : 1
becomes as shown -> in : 1
following we have -> one : 1
following we have -> two : 1
we have one -> sorted : 1
have one sorted -> we : 1
one sorted we -> need : 1
sorted we need -> to : 1
need to sort -> another : 1
need to sort -> the : 1
to sort another -> we : 1
sort another we -> can : 1
another we can -> divide : 1
we can divide -> this : 1
we can divide -> the : 1
can divide this -> sublist : 1
divide this sublist -> to : 1
this sublist to -> become : 1
sublist to become -> and : 1
to become and -> then : 1
to become and -> these : 1
become and then -> sort : 1
and then sort -> them : 1
then sort them -> partially : 1
sort them partially -> to : 1
them partially to -> become : 1
partially to become -> and : 1
become and these -> sublists : 1
and these sublists -> can : 1
these sublists can -> be : 1
sublists can be -> merged : 1
can be merged -> and : 1
be merged and -> become : 1
merged and become -> as : 1
and become as -> we : 1
become as we -> can : 1
have two sorted -> we : 1
two sorted we -> can : 1
can merge these -> two : 1
merge these two -> sublists : 1
these two sublists -> to : 1
two sublists to -> become : 1
sublists to become -> as : 1
to become as -> shown : 1
become as shown -> in : 1
the following designing -> a : 1
following designing a -> code : 1
designing a code -> for : 1
a code for -> a : 1
code for a -> merge : 1
for a merge -> we : 1
a merge we -> need : 1
merge we need -> to : 1
to have two -> functions : 1
have two functions -> to : 1
two functions to -> perform : 1
functions to perform -> the : 1
perform the first -> function : 1
function is which -> passes : 1
is which passes -> an : 1
which passes an -> a : 1
passes an a -> start : 1
an a start -> a : 1
a start a -> middle : 1
start a middle -> and : 1
a middle and -> an : 1
middle and an -> end : 1
and an end -> this : 1
an end this -> function : 1
end this function -> is : 1
this function is -> used : 5
this function is -> where : 2
function is used -> when : 1
function is used -> to : 4
used when we -> have : 1
an array where -> each : 1
array where each -> half : 1
where each half -> part : 1
each half part -> has : 1
half part has -> been : 1
part has been -> for : 1
has been for -> we : 1
been for we -> did : 1
for we did -> in : 1
preceding the implementation -> should : 1
as int int -> int : 8
int int numbers -> of : 1
int numbers of -> elements : 1
numbers of elements -> that : 1
of elements that -> will : 1
elements that will -> be : 1
will be from -> startindex : 1
be from startindex -> until : 1
from startindex until -> int : 1
startindex until int -> totalelements : 1
until int totalelements -> endindex : 1
int totalelements endindex -> startindex : 1
totalelements endindex startindex -> temporary : 1
endindex startindex temporary -> array : 1
startindex temporary array -> to : 1
temporary array to -> store : 1
array to store -> merged : 1
to store merged -> int : 1
store merged int -> temparray : 1
merged int temparray -> new : 1
int temparray new -> index : 1
temparray new index -> of : 1
new index of -> left : 1
index of left -> int : 1
of left int -> leftindex : 1
left int leftindex -> index : 1
int leftindex index -> of : 1
leftindex index of -> right : 1
index of right -> int : 1
of right int -> rightindex : 1
right int rightindex -> middleindex : 1
int rightindex middleindex -> index : 1
rightindex middleindex index -> of : 1
middleindex index of -> merged : 1
index of merged -> int : 1
of merged int -> mergedindex : 1
merged int mergedindex -> merge : 1
int mergedindex merge -> the : 1
mergedindex merge the -> two : 1
merge the two -> while : 1
merge the two -> sorted : 1
the two while -> middleindex : 1
two while middleindex -> rightindex : 1
while middleindex rightindex -> store : 1
middleindex rightindex store -> the : 1
rightindex store the -> left : 1
store the left -> if : 1
the left if -> lower : 1
left if lower -> than : 1
if lower than -> the : 2
than the right -> go : 1
than the right -> subtree : 1
the right go -> to : 2
right go to -> next : 1
right go to -> the : 1
go to next -> left : 2
go to next -> right : 2
go to next -> merged : 3
to next left -> subarray : 2
next left subarray -> store : 1
next left subarray -> go : 1
left subarray store -> the : 1
subarray store the -> right : 1
store the right -> if : 1
the right if -> lower : 1
right if lower -> than : 1
than the left -> go : 1
the left go -> to : 1
left go to -> next : 1
to next right -> subarray : 2
next right subarray -> go : 2
right subarray go -> to : 2
subarray go to -> next : 3
to next merged -> array : 3
next merged array -> if : 2
next merged array -> the : 1
merged array if -> any : 2
array if any -> remaining : 2
if any remaining -> element : 2
any remaining element -> in : 2
remaining element in -> left : 1
remaining element in -> right : 1
element in left -> that : 1
in left that -> is : 1
left that is -> not : 1
is not stored -> to : 2
is not stored -> in : 1
not stored to -> merged : 2
stored to merged -> array : 2
to merged array -> while : 2
merged array while -> go : 2
array while go -> to : 2
while go to -> next : 2
left subarray go -> to : 1
element in right -> that : 1
in right that -> is : 1
right that is -> not : 1
merged array the -> merged : 1
array the merged -> array : 1
the merged array -> has : 1
merged array has -> been : 1
array has been -> copy : 1
has been copy -> the : 1
been copy the -> elements : 1
copy the elements -> to : 1
the elements to -> the : 1
elements to the -> original : 1
elements to the -> we : 1
to the original -> for : 1
the original for -> i : 1
original for i -> i : 1
i i remove -> the : 1
i remove the -> temporary : 1
remove the temporary -> array : 1
the temporary array -> we : 1
the temporary array -> into : 1
temporary array we -> can : 1
preceding we to -> store : 1
we to store -> the : 1
store the sorted -> array : 1
the sorted array -> as : 1
result of the -> two : 1
result of the -> preceding : 2
of the two -> sorted : 1
of the two -> lists : 1
of the two -> if : 1
of the two -> recurse : 1
the two sorted -> sublists : 1
the two sorted -> to : 1
two sorted sublists -> being : 1
sorted sublists being -> it : 1
sublists being it -> will : 1
being it will -> rearrange : 1
it will rearrange -> the : 1
will rearrange the -> array : 1
rearrange the array -> by : 2
the array by -> merging : 1
the array by -> using : 1
the array by -> dequeuing : 1
array by merging -> these : 1
by merging these -> two : 1
merging these two -> after : 1
these two after -> this : 1
two after this -> is : 1
after this is -> put : 1
this is put -> all : 1
is put all -> of : 1
put all of -> the : 1
of the correct -> this : 1
the correct this -> will : 1
correct this will -> copy : 1
this will copy -> the : 1
will copy the -> temporary : 1
copy the temporary -> array : 1
temporary array into -> the : 1
array into the -> original : 1
array into the -> new : 1
into the original -> we : 1
the original we -> have : 1
original we have -> a : 1
have a really -> random : 1
a really random -> we : 1
really random we -> need : 1
random we need -> another : 1
we need another -> named : 1
need another named -> to : 1
another named to -> separate : 1
named to separate -> the : 1
to separate the -> array : 1
to separate the -> chaining : 2
separate the array -> into : 1
the array into -> two : 3
the array into -> several : 1
into two the -> should : 1
into two the -> time : 1
into two the -> and : 1
two the should -> be : 1
the should be -> as : 1
int int only -> perform : 4
int only perform -> sort : 2
int only perform -> searching : 2
only perform sort -> if : 2
perform sort if -> the : 2
sort if the -> end : 2
if the end -> index : 4
the end index -> is : 4
the end index -> return : 1
end index is -> higher : 4
index is higher -> than : 2
index is higher -> or : 2
is higher than -> start : 2
is higher than -> the : 1
higher than start -> find : 1
higher than start -> if : 1
than start find -> middle : 1
start find middle -> int : 2
find middle int -> middleindex : 3
middle int middleindex -> sort : 1
middle int middleindex -> startindex : 1
middle int middleindex -> lowindex : 1
int middleindex sort -> left : 1
middleindex sort left -> sort : 1
sort left sort -> right : 1
left sort right -> middleindex : 1
sort right middleindex -> merge : 1
right middleindex merge -> the : 1
middleindex merge the -> left : 1
merge the left -> and : 1
the left and -> the : 2
the left and -> be : 1
the left and -> is : 1
the left and -> right : 4
the left and -> node : 1
left and the -> right : 1
left and the -> rest : 1
left and the -> most : 1
and the right -> we : 1
and the right -> in : 1
and the right -> subtree : 1
and the right -> height : 1
the right we -> can : 1
the right we -> compare : 1
the right we -> will : 3
the right we -> pick : 1
right we can -> see : 1
right we can -> find : 1
preceding the will -> call : 1
the will call -> itself : 1
will call itself -> incursively : 1
call itself incursively -> until : 1
itself incursively until -> the : 1
incursively until the -> halved : 1
until the halved -> sublist : 1
the halved sublist -> cannot : 1
halved sublist cannot -> be : 1
sublist cannot be -> divided : 1
cannot be divided -> any : 3
cannot be divided -> this : 1
be divided any -> it : 1
be divided any -> in : 1
be divided any -> and : 1
divided any it -> then : 1
any it then -> invokes : 1
it then invokes -> function : 1
then invokes function -> we : 1
invokes function we -> created : 1
function we created -> previously : 1
we created previously -> to : 1
created previously to -> merge : 1
previously to merge -> the : 1
to merge the -> two : 1
two sorted to -> invoke : 1
sorted to invoke -> we : 1
to invoke we -> can : 1
to invoke we -> are : 1
invoke we can -> make : 1
invoke we can -> use : 1
we can make -> the : 1
make the following -> function : 1
following function using -> the : 1
function using the -> preceding : 1
using the preceding -> array : 1
using the preceding -> we : 1
the previous cout -> initialize : 1
previous cout initialize -> a : 1
array with mergesort -> arrsize : 1
with mergesort arrsize -> display : 1
mergesort arrsize display -> the : 1
the we invoked -> function : 1
we invoked function -> and : 1
invoked function and -> passed : 1
function and passed -> an : 1
and passed an -> input : 1
passed an input -> array : 1
an input array -> and : 1
an input array -> into : 3
input array and -> the : 1
and the range -> of : 1
the range of -> the : 1
range of the -> element : 1
of the element -> we : 1
of the element -> this : 1
of the element -> stored : 1
the element we -> desired : 1
element we desired -> to : 1
we desired to -> which : 1
desired to which -> is : 1
which is from -> index : 1
is from index -> to : 1
from index to -> the : 1
index to the -> last : 1
last the output -> of : 1
preceding code has -> been : 1
code has been -> saved : 1
has been saved -> in : 1
been saved in -> should : 1
saved in should -> be : 1
in should be -> as : 1
as we need -> to : 3
find the time -> complexity : 1
this sorting as -> we : 1
sorting as we -> discussed : 1
have to divide -> the : 3
to divide the -> input : 3
to divide the -> array : 1
to divide the -> number : 1
divide the input -> array : 1
divide the input -> into : 1
divide the input -> list : 1
input array halved -> divide : 1
array halved divide -> these : 1
halved divide these -> sublists : 1
divide these sublists -> into : 1
these sublists into -> another : 1
sublists into another -> two : 1
into another two -> halved : 1
another two halved -> and : 1
two halved and -> so : 1
halved and so -> on : 1
and so on -> until : 1
so on until -> only : 1
on until only -> one : 1
until only one -> element : 1
only one element -> remains : 1
only one element -> in : 1
one element remains -> in : 1
element remains in -> the : 1
remains in the -> the : 1
the the sublist -> elements : 1
the sublist elements -> will : 1
sublist elements will -> be : 1
elements will be -> passed : 1
will be passed -> to : 1
be passed to -> where : 1
passed to where -> the : 1
to where the -> time : 1
where the time -> complexity : 1
where the time -> consumption : 1
the it only -> contains : 1
it only contains -> one : 2
only contains one -> level : 1
only contains one -> we : 1
contains one level -> while : 1
one level while -> in : 1
level while in -> the : 1
while in the -> analysis : 1
in the analysis -> for : 1
the analysis for -> the : 1
analysis for the -> function : 1
for the function -> that : 1
the function that -> invokes : 1
function that invokes -> will : 1
that invokes will -> be : 1
invokes will be -> as : 1
as the preceding -> we : 2
will have the -> level : 1
will have the -> following : 4
will have the -> time : 3
will have the -> fifth : 1
will have the -> avl : 1
will have the -> smallest : 1
have the level -> only : 1
the level only -> one : 1
level only one -> element : 1
in a sublist -> so : 1
a sublist so -> that : 1
divided any in -> this : 1
any in this -> we : 2
have the following -> on : 1
have the following -> to : 1
have the following -> bucket : 1
have the following -> black : 1
have the following -> output : 1
have the following -> left : 1
have the following -> we : 1
have the following -> array : 1
have the following -> class : 1
have the following -> time : 1
the following on -> the : 1
the following on -> this : 1
following on the -> preceding : 1
the preceding for -> level : 1
preceding for level -> we : 1
for level we -> will : 1
level we will -> have : 1
have the time -> complexity : 3
time complexity before -> we : 1
complexity before we -> call : 1
before we call -> which : 1
we call which -> is : 1
call which is -> since : 1
complexity of function -> itself : 1
complexity of function -> will : 3
complexity of function -> is : 3
of function itself -> is : 1
itself is the -> time : 1
is the time -> complexity : 1
is the time -> was : 1
merge sort algorithm -> is : 1
sort algorithm is -> log : 1
algorithm is log -> for : 1
is log for -> both : 1
log for both -> the : 1
worst case sort -> is : 1
case sort is -> almost : 1
sort is almost -> the : 1
as the other -> sorting : 1
the other sorting -> algorithms : 1
other sorting algorithms -> we : 1
algorithms we have -> discussed : 1
discussed so far -> as : 1
so far as -> it : 1
far as it -> divides : 1
as it divides -> the : 1
it divides the -> input : 1
it divides the -> decimal : 1
into two which -> are : 1
two which are -> the : 1
two which are -> these : 1
two which are -> referred : 1
which are the -> left : 1
which are the -> power : 1
are the left -> sublist : 1
the left sublist -> and : 4
the left sublist -> we : 1
left sublist and -> the : 1
left sublist and -> as : 1
left sublist and -> then : 1
left sublist and -> right : 3
sublist and the -> right : 1
the right in -> quick : 1
right in quick -> the : 1
in quick the -> process : 1
quick the process -> of : 1
process of dividing -> the : 1
of dividing the -> array : 1
dividing the array -> into : 2
into two sublists -> is : 1
two sublists is -> called : 1
sublists is called -> the : 1
is called the -> partition : 1
called the partition -> process : 1
the partition process -> will : 1
partition process will -> pick : 1
process will pick -> an : 1
will pick an -> item : 1
item to become -> a : 1
become a and -> it : 1
a and it -> will : 1
and it will -> then : 1
and it will -> last : 1
it will then -> use : 1
will then use -> the : 1
then use the -> pivot : 1
use the pivot -> to : 1
the pivot to -> divide : 1
pivot to divide -> the : 1
the input into -> two : 1
input into two -> if : 1
into two if -> we : 1
two if we -> are : 1
to sort an -> array : 2
sort an array -> in : 1
sort an array -> which : 1
an array in -> ascending : 1
array in ascending -> all : 1
in ascending all -> items : 1
ascending all items -> that : 1
all items that -> are : 1
items that are -> lower : 1
that are lower -> than : 1
are lower than -> the : 2
than the pivot -> will : 1
than the pivot -> so : 1
the pivot will -> be : 3
pivot will be -> moved : 1
pivot will be -> in : 2
will be moved -> to : 1
be moved to -> the : 1
moved to the -> left : 1
and the rest -> will : 1
the rest will -> be : 1
rest will be -> in : 1
in the right -> after : 1
in the right -> we : 2
in the right -> which : 1
in the right -> to : 1
in the right -> and : 1
in the right -> so : 1
in the right -> it : 1
in the right -> when : 1
in the right -> position : 3
in the right -> subtree : 4
in the right -> place : 1
in the right -> the : 1
the right after -> running : 1
right after running -> the : 1
after running the -> partition : 1
running the partition -> we : 1
the partition we -> will : 1
partition we will -> ensure : 1
we will ensure -> that : 1
will ensure that -> the : 1
that the pivot -> is : 2
the pivot is -> in : 3
pivot is in -> the : 3
correct position in -> the : 1
we can choose -> the : 1
we can choose -> any : 1
we can choose -> is : 1
can choose the -> item : 1
choose the item -> that : 1
the item that -> will : 1
item that will -> be : 1
be the we -> will : 1
we will always -> choose : 1
we will always -> pass : 1
we will always -> traverse : 1
we will always -> search : 1
we will always -> find : 1
we will always -> remove : 1
will always choose -> the : 1
always choose the -> first : 1
choose the first -> item : 2
first item of -> the : 1
as the pivot -> in : 1
as the pivot -> and : 1
the pivot in -> this : 1
the pivot in -> the : 1
pivot in this -> we : 1
an array we -> are : 1
an array we -> want : 1
array we are -> going : 1
array by using -> the : 1
using the quick -> sort : 1
the quick sort -> please : 1
the quick sort -> algorithm : 1
the quick sort -> we : 1
the quick sort -> is : 1
quick sort please -> see : 1
sort please see -> the : 1
following we choose -> the : 1
we choose the -> first : 1
first item as -> the : 1
first item as -> int : 1
through the remaining -> elements : 1
the remaining elements -> and : 1
remaining elements and -> compare : 1
elements and compare -> each : 1
and compare each -> item : 1
compare each item -> with : 1
each item with -> the : 1
item with the -> when : 1
with the when -> we : 1
when we they -> are : 1
we they are -> lower : 1
we they are -> understand : 1
they are lower -> than : 1
the pivot so -> they : 1
pivot so they -> will : 1
so they will -> be : 1
left and be -> the : 1
and be the -> and : 1
be the and -> are : 1
and are also -> not : 1
and are also -> in : 1
are also not -> they : 1
also not they -> will : 1
not they will -> be : 1
right we compare -> with : 1
we compare with -> the : 1
we compare with -> our : 1
compare with the -> and : 1
compare with the -> pivot : 1
compare with the -> searched : 2
with the and -> we : 1
the and we -> can : 2
the and we -> have : 1
the and we -> will : 1
see that its -> value : 1
that its value -> is : 1
value is we -> need : 1
move it to -> the : 2
the left to -> do : 1
left to do -> we : 1
do we swap -> it : 1
we swap it -> with : 1
we swap it -> since : 1
swap it with -> the : 2
it with the -> first : 1
it with the -> so : 1
it with the -> searched : 1
it with the -> characters : 1
it with the -> node : 1
first element in -> the : 1
the right which -> is : 1
right which is -> the : 1
which is the -> last : 1
which is the -> best : 3
which is the -> worst : 4
which is the -> code : 1
which is the -> same : 1
which is the -> optimal : 1
is the last -> is : 1
the last is -> but : 1
last is but -> we : 1
is but we -> need : 1
but we need -> to : 1
move it since -> lower : 1
it since lower -> than : 1
than the by -> the : 1
the array should -> be : 5
the array should -> look : 1
array should be -> as : 6
be as complete -> the : 1
as complete the -> we : 1
complete the we -> can : 1
complete the we -> need : 1
we can swap -> the : 2
we can swap -> it : 1
can swap the -> pivot : 2
swap the pivot -> with : 3
the pivot with -> the : 3
pivot with the -> last : 3
with the last -> item : 3
with the last -> existing : 1
the left which -> is : 1
left which is -> although : 1
left which is -> called : 1
which is although -> we : 1
is although we -> have : 1
we have it -> will : 1
have it will -> be : 1
the left by -> the : 1
left by the -> pivot : 1
left by the -> item : 1
by the pivot -> is : 1
correct position and -> the : 1
position and the -> array : 1
and the array -> should : 1
have two unsorted -> the : 1
two unsorted the -> left : 1
unsorted the left -> sublist : 1
sublist and as -> the : 1
and as the -> right : 1
and as the -> number : 1
as the right -> we : 1
as the right -> when : 1
right we will -> use : 1
right we will -> always : 1
right we will -> do : 1
use the quick -> sort : 1
quick sort algorithm -> to : 1
sort algorithm to -> sort : 1
algorithm to sort -> these : 1
to sort these -> starting : 1
sort these starting -> from : 1
these starting from -> the : 1
starting from the -> left : 1
starting from the -> most : 1
starting from the -> we : 1
from the left -> we : 1
the left we -> pick : 1
the left we -> might : 1
left we pick -> as : 1
we then compare -> with : 2
then compare with -> the : 3
with the pivot -> and : 1
the pivot and -> mark : 1
the pivot and -> then : 1
pivot and mark -> it : 1
it as the -> right : 1
the right when -> we : 1
the right when -> it : 1
right when we -> find : 1
when we find -> we : 1
find we swap -> it : 1
swap it since -> it : 1
it since it -> should : 1
since it should -> be : 1
should be in -> the : 2
left the array -> should : 1
the preceding is -> the : 1
the preceding is -> in : 1
preceding is the -> is : 1
the is in -> the : 1
the is in -> index : 1
left and is -> in : 1
and is in -> the : 1
the right to -> complete : 1
right to complete -> the : 1
to complete the -> we : 1
last item of -> the : 1
of the left -> because : 1
of the left -> sublist : 1
of the left -> height : 1
the left because -> it : 1
left because it -> only : 1
because it only -> contains : 1
contains one we -> just : 1
one we just -> swap : 1
we just swap -> with : 1
just swap with -> the : 1
swap with the -> only : 1
swap with the -> larger : 1
swap with the -> last : 1
with the only -> left : 1
the only left -> sublist : 1
only left sublist -> item : 1
left sublist item -> by : 1
sublist item by -> the : 1
item by the -> array : 1
preceding is in -> the : 1
the right and -> are : 1
right and are -> also : 1
are also in -> the : 1
also in the -> right : 2
the right so -> we : 1
right so we -> now : 1
so we now -> have : 1
now have all -> of : 1
have all of -> the : 1
left sublist we -> move : 1
sublist we move -> to : 1
move to the -> right : 1
move to the -> second : 1
the right sublist -> and : 1
right sublist and -> pick : 1
sublist and pick -> as : 1
and pick as -> the : 1
as the it -> compares : 1
the it compares -> with : 1
it compares with -> and : 1
compares with and -> so : 1
so it should -> be : 1
the right it -> then : 1
right it then -> compares : 1
it then compares -> with : 1
then compares with -> which : 1
compares with which -> is : 1
with which is -> also : 1
with which is -> please : 1
which is also -> in : 1
is also in -> the : 1
right when it -> is : 1
when it is -> compared : 1
it is compared -> with : 1
compared with we -> have : 1
to swap with -> since : 1
swap with since -> is : 1
with since is -> lower : 1
since is lower -> than : 2
than the the -> array : 1
than the the -> preceding : 1
the the array -> should : 1
array should look -> as : 1
look as we -> can : 1
then the pivot -> will : 1
right position the -> array : 1
position the array -> should : 1
be as is -> now : 1
as is now -> in : 1
right position as -> so : 1
right position as -> the : 1
position as so -> we : 1
as so we -> can : 1
we can move -> it : 1
can move it -> to : 1
right we pick -> as : 1
pivot and then -> compare : 1
then compare it -> with : 2
compare it with -> and : 1
compare it with -> the : 2
it with and -> mark : 1
with and mark -> as : 1
and mark as -> being : 1
mark as being -> the : 1
as being the -> right : 1
being the right -> since : 1
the right since -> we : 1
right since we -> have : 1
have any elements -> in : 1
any elements in -> the : 1
the left with -> the : 1
left with the -> result : 1
with the result -> that : 1
the result that -> the : 1
result that the -> pivot : 1
correct position the -> last : 1
position the last -> which : 1
the last which -> is : 1
last which is -> is : 1
which is is -> automatically : 1
is is automatically -> in : 1
is automatically in -> the : 1
automatically in the -> right : 1
position as the -> fully : 1
as the fully -> sorted : 1
fully sorted array -> should : 1
fully sorted array -> by : 1
sorted array should -> be : 1
create a code -> to : 2
code to solve -> the : 1
to solve the -> quick : 1
to solve the -> we : 1
solve the quick -> sort : 1
quick sort we -> need : 1
sort we need -> a : 1
need a function -> that : 1
need a function -> to : 1
that will divide -> an : 1
will divide an -> input : 1
divide an input -> array : 1
array into left -> and : 1
into left and -> right : 2
left and right -> sublists : 1
left and right -> the : 1
left and right -> prior : 1
left and right -> to : 1
left and right -> we : 2
left and right -> return : 1
left and right -> subtrees : 1
left and right -> after : 1
left and right -> minheapnode : 1
left and right -> leftchild : 1
left and right -> of : 1
and right sublists -> and : 1
right sublists and -> put : 1
sublists and put -> the : 1
and put the -> pivot : 1
put the pivot -> in : 1
pivot in the -> correct : 1
the correct we -> need : 1
correct we need -> a : 1
function to call -> to : 1
to call to -> recursively : 1
call to recursively -> invoke : 1
to recursively invoke -> itself : 1
recursively invoke itself -> to : 1
invoke itself to -> sort : 1
itself to sort -> the : 1
sort the left -> and : 1
sort the left -> sublist : 1
and right the -> code : 1
right the code -> should : 1
namespace int int -> int : 1
int int set -> the : 1
int set the -> first : 1
item as int -> pivot : 1
as int pivot -> left : 1
int pivot left -> sublist : 1
pivot left sublist -> and : 1
sublist and right -> are : 1
sublist and right -> return : 1
sublist and right -> sublist : 1
and right are -> initially : 1
right are initially -> int : 1
are initially int -> middleindex : 1
initially int middleindex -> iterate : 1
int middleindex iterate -> through : 1
middleindex iterate through -> n : 1
iterate through n -> for : 1
through n for -> i : 1
n for i -> startindex : 1
for i startindex -> i : 1
i startindex i -> if : 1
startindex i if -> the : 1
i if the -> current : 1
the current item -> is : 1
the current item -> which : 1
current item is -> on : 1
item is on -> the : 1
on the left -> prepare : 1
the left prepare -> a : 1
left prepare a -> seat : 1
prepare a seat -> by : 1
a seat by -> shifting : 1
seat by shifting -> middle : 1
by shifting middle -> the : 1
shifting middle the -> the : 1
middle the the -> member : 1
the the member -> of : 1
the member of -> right : 1
member of right -> swap : 1
of right swap -> it : 1
right swap it -> to : 1
swap it to -> the : 1
current item which -> member : 1
item which member -> of : 1
which member of -> left : 1
member of left -> by : 1
member of left -> we : 1
of left by -> the : 1
by the item -> member : 1
the item member -> of : 1
item member of -> left : 1
of left we -> can : 1
left we can -> swap : 1
can swap it -> with : 1
so the pivot -> will : 1
the correct which -> is : 1
correct which is -> between : 1
which is between -> left : 1
is between left -> sublist : 1
between left sublist -> and : 1
and right return -> the : 1
and right return -> preceding : 1
right return the -> index : 1
index of to -> be : 1
of to be -> used : 1
used by next -> quick : 1
by next quick -> return : 1
next quick return -> int : 1
quick return int -> int : 1
return int int -> int : 1
than start if -> retrieve : 1
start if retrieve -> pivot : 1
if retrieve pivot -> position : 1
retrieve pivot position -> from : 1
pivot position from -> this : 1
position from this -> pivotindex : 1
from this pivotindex -> is : 1
this pivotindex is -> the : 1
pivotindex is the -> index : 1
is the index -> of : 6
index of element -> that : 1
of element that -> is : 1
that is in -> correct : 1
is in correct -> int : 1
in correct int -> pivotindex : 1
correct int pivotindex -> sort : 1
int pivotindex sort -> left : 1
pivotindex sort left -> pivotindex : 1
sort left pivotindex -> pivotindex : 1
left pivotindex pivotindex -> sort : 1
pivotindex pivotindex sort -> right : 1
pivotindex sort right -> pivotindex : 1
sort right pivotindex -> cout : 1
right pivotindex cout -> initialize : 1
pivotindex cout initialize -> a : 1
array with quicksort -> arrsize : 1
array with quicksort -> display : 1
with quicksort arrsize -> display : 1
quicksort arrsize display -> the : 1
return we build -> and : 5
on the quick -> sort : 1
quick sort is -> similar : 1
sort is similar -> to : 1
similar to merge -> sort : 1
to merge sort -> in : 1
merge sort in -> dividing : 1
sort in dividing -> an : 1
in dividing an -> input : 1
dividing an input -> array : 1
two the time -> complexity : 2
complexity of quick -> sort : 1
of quick sort -> log : 1
quick sort log -> the : 1
quick sort log -> for : 1
sort log the -> best : 1
log the best -> case : 1
worst case we -> may : 1
case we may -> pick : 1
we may pick -> the : 1
may pick the -> lowest : 1
pick the lowest -> or : 1
the lowest or -> the : 1
lowest or the -> greatest : 1
or the greatest -> element : 1
the greatest element -> as : 1
greatest element as -> a : 1
element as a -> pivot : 1
as a pivot -> so : 1
a pivot so -> that : 1
pivot so that -> we : 1
through all in -> this : 1
all in this -> the : 1
this the time -> complexity : 1
time complexity will -> sort : 1
time complexity will -> be : 11
time complexity will -> we : 1
complexity will sort -> is : 1
will sort is -> a : 1
algorithm that arranges -> items : 1
that arranges items -> based : 1
arranges items based -> on : 1
items based on -> a : 1
items based on -> the : 2
on a suppose -> we : 1
a suppose we -> have : 2
array containing unsorted -> items : 1
containing unsorted items -> with : 1
unsorted items with -> a : 1
items with a -> range : 1
with a range -> between : 1
a range between -> to : 1
range between to -> we : 1
between to we -> can : 1
can sort it -> by : 1
sort it by -> counting : 1
it by counting -> the : 1
by counting the -> number : 1
counting the number -> of : 1
of items based -> on : 1
on the range -> as : 1
the range as -> the : 1
range as the -> say : 1
as the say -> we : 1
the say we -> have : 1
say we have -> an : 1
say we have -> approximately : 1
array of these -> in : 1
of these in -> a : 1
these in a -> simple : 1
in a simple -> we : 1
a simple we -> just : 1
simple we just -> need : 1
need to frequency -> of : 1
to frequency of -> the : 1
frequency of the -> occurrence : 1
frequency of the -> we : 1
frequency of the -> unsigned : 1
of the occurrence -> of : 1
the occurrence of -> each : 1
the occurrence of -> the : 1
occurrence of each -> we : 1
of each we -> through : 1
of each we -> will : 1
of each we -> need : 1
each we through -> the : 1
we through the -> range : 1
through the range -> from : 1
the range from -> to : 1
range from to -> to : 1
from to to -> output : 1
from to to -> find : 1
to to output -> the : 1
to output the -> items : 1
output the items -> in : 1
the items in -> a : 1
items in a -> sorted : 1
in a sorted -> will : 1
in a sorted -> list : 1
a sorted will -> have : 1
sorted will have -> an : 1
array containing the -> following : 2
following we count -> the : 1
we count the -> occurrence : 1
count the occurrence -> frequency : 1
the occurrence frequency -> of : 1
occurrence frequency of -> each : 1
frequency of each -> occur : 1
of each occur -> only : 1
each occur only -> and : 1
occur only and -> occur : 1
only and occur -> and : 1
and occur and -> occur : 1
occur and occur -> three : 1
and occur three -> and : 1
occur three and -> item : 1
three and item -> never : 1
and item never -> this : 1
item never this -> can : 1
never this can -> be : 1
this can be -> seen : 1
following on this -> we : 1
we can reconstruct -> the : 2
can reconstruct the -> array : 2
reconstruct the array -> from : 1
reconstruct the array -> based : 1
reconstruct the array -> starting : 1
the array from -> the : 1
the array from -> to : 1
array from the -> lowest : 1
from the lowest -> item : 1
from the lowest -> digit : 1
lowest item so -> that : 1
item so that -> we : 1
that we end -> up : 1
we end up -> with : 1
end up with -> the : 1
up with the -> following : 1
following code for -> counting : 1
code for counting -> sort : 1
for counting sort -> is : 1
counting sort is -> quite : 1
counting sort is -> where : 1
sort is quite -> we : 1
is quite we -> just : 2
quite we just -> need : 2
need to prepare -> with : 1
to prepare with -> the : 1
prepare with the -> item : 1
with the item -> range : 1
the item range -> as : 1
item range as -> its : 1
range as its -> length : 1
as its length -> and : 1
its length and -> then : 1
length and then -> put : 1
and then put -> the : 1
then put the -> occurrence : 1
put the occurrence -> of : 1
occurrence of the -> item : 1
of the item -> in : 1
item in that -> we : 1
in that we -> can : 1
the array based -> on : 1
array based on -> the : 1
namespace int create -> with : 1
namespace int create -> ten : 1
int create with -> assumption : 1
create with assumption -> that : 1
with assumption that -> all : 1
assumption that all -> element : 1
that all element -> are : 1
all element are -> from : 1
element are from -> to : 1
are from to -> int : 1
from to int -> countersize : 1
to int countersize -> int : 1
int countersize int -> counterarray : 1
countersize int counterarray -> new : 1
int counterarray new -> int : 1
counterarray new int -> increase : 1
new int increase -> the : 1
int increase the -> respective : 1
increase the respective -> counter : 1
the respective counter -> by : 1
respective counter by -> i : 1
counter by i -> i : 1
by i i -> counter : 1
i i counter -> for : 1
i counter for -> iterating : 1
counter for iterating -> the : 1
for iterating the -> arrcounter : 1
iterating the arrcounter -> int : 1
the arrcounter int -> arrcounter : 1
arrcounter int arrcounter -> i : 1
int arrcounter i -> i : 2
arrcounter i i -> restore : 1
arrcounter i i -> get : 1
i i restore -> element : 1
i restore element -> to : 1
restore element to -> decrease : 1
restore element to -> remove : 1
element to decrease -> counter : 1
to decrease counter -> by : 1
decrease counter by -> cout : 1
counter by cout -> initialize : 1
by cout initialize -> a : 1
two the first -> iteration : 1
the first iteration -> is : 1
first iteration is -> used : 1
iteration is used -> to : 1
the array elements -> and : 1
the array elements -> to : 1
array elements and -> put : 1
elements and put -> them : 1
and put them -> into : 1
put them into -> the : 1
them into the -> respective : 1
into the respective -> the : 1
the respective the -> second : 1
respective the second -> one : 1
the second one -> is : 1
second one is -> used : 1
one is used -> to : 1
used to reconstruct -> the : 1
to reconstruct the -> initial : 1
reconstruct the initial -> array : 1
the initial array -> so : 1
initial array so -> that : 1
array so that -> it : 1
it will become -> a : 1
will become a -> sorted : 1
become a sorted -> please : 1
a sorted please -> note : 1
sorted please note -> even : 1
please note even -> though : 1
note even though -> there : 1
even though there -> is : 1
though there is -> a : 1
is a loop -> inside : 1
a loop inside -> the : 1
loop inside the -> second : 1
inside the second -> it : 1
inside the second -> loop : 1
second it make -> the : 1
it make the -> time : 1
time complexity become -> this : 1
complexity become this -> is : 1
become this is -> because : 1
is because the -> second : 1
because the second -> loop : 1
the second loop -> iterates : 1
the second loop -> is : 1
the second loop -> will : 1
second loop iterates -> through : 1
loop iterates through -> the : 2
iterates through the -> counter : 1
iterates through the -> array : 2
through the counter -> is : 1
the counter is -> the : 1
counter is the -> key : 1
is the key -> in : 1
the key in -> counting : 1
the key in -> the : 2
the key in -> that : 1
key in counting -> and : 1
in counting and -> only : 1
counting and only -> the : 1
and only the -> loop : 1
only the loop -> iterates : 1
the loop iterates -> through : 1
the array so -> for : 1
the array so -> we : 1
array so for -> both : 1
so for both -> best : 1
worst case the -> time : 1
worst case the -> output : 1
case the time -> complexity : 1
of this counting -> sort : 1
this counting sort -> is : 1
sort is where -> is : 1
is where is -> the : 12
where is the -> number : 2
where is the -> elements : 1
where is the -> index : 3
where is the -> total : 6
where is the -> decimal : 1
where is the -> length : 4
where is the -> height : 7
is the number -> of : 2
number of we -> can : 1
we can ignore -> the : 1
we can ignore -> variable : 1
can ignore the -> variable : 1
ignore the variable -> if : 1
the variable if -> is : 1
variable if is -> very : 1
if is very -> small : 1
is very small -> so : 1
very small so -> that : 1
small so that -> the : 1
be the output -> of : 1
be as sort -> is : 1
as sort is -> a : 1
is used if -> the : 1
used if the -> items : 1
the items we -> are : 1
items we are -> going : 1
to sort are -> in : 1
sort are in -> a : 1
are in a -> large : 1
a large for -> from : 1
large for from -> to : 1
for from to -> in : 1
from to in -> this : 1
from to in -> the : 1
to in this -> sorting : 1
to in this -> we : 1
in this sorting -> we : 1
sorting we sort -> from : 1
sorting we sort -> the : 1
we sort from -> the : 1
sort from the -> digit : 1
from the digit -> until : 1
the digit until -> the : 1
digit until the -> most : 1
until the most -> significant : 1
the most significant -> digit : 1
the most significant -> we : 1
most significant digit -> we : 1
significant digit we -> are : 1
digit we are -> going : 1
going to involve -> the : 1
to involve the -> queue : 1
involve the queue -> data : 1
the queue data -> structure : 1
queue data structure -> we : 1
data structure we -> learned : 1
data structure we -> the : 1
data structure we -> can : 1
structure we learned -> in : 1
we learned in -> stacks : 1
learned in stacks -> and : 1
in stacks and -> since : 1
stacks and since -> we : 1
will be putting -> the : 1
be putting the -> equal : 1
putting the equal -> digit : 1
the equal digit -> in : 1
equal digit in -> the : 1
digit in the -> this : 1
digit in the -> reset : 1
the this means -> we : 1
this means we -> need : 1
means we need -> ten : 1
we need ten -> queues : 1
need ten queues -> to : 1
ten queues to -> represent : 1
queues to represent -> the : 1
represent the digits -> to : 1
the digits to -> suppose : 1
digits to suppose -> we : 1
to suppose we -> have : 1
an array with -> the : 1
an array with -> at : 2
array with the -> following : 1
the following as -> we : 1
following as we -> can : 1
following we populate -> each : 1
we populate each -> item : 1
populate each item -> based : 1
each item based -> on : 1
item based on -> the : 1
on the least -> significant : 1
least significant digit -> last : 1
least significant digit -> second : 1
significant digit last -> and : 1
digit last and -> store : 1
last and store -> them : 1
and store them -> in : 1
store them in -> their : 1
store them in -> a : 1
them in their -> respective : 1
in their respective -> queue : 1
their respective queue -> the : 1
respective queue the -> diagram : 1
queue the diagram -> for : 1
the diagram for -> this : 1
diagram for this -> is : 1
for this is -> as : 1
this is as -> we : 1
as we put -> them : 1
we put them -> in : 1
put them in -> the : 1
we can dequeue -> each : 1
can dequeue each -> bucket : 1
dequeue each bucket -> from : 2
each bucket from -> to : 3
bucket from to -> in : 1
bucket from to -> and : 1
bucket from to -> as : 1
to in the -> preceding : 1
preceding we enqueue -> the : 1
we enqueue the -> bucket : 1
enqueue the bucket -> from : 1
the bucket from -> the : 1
bucket from the -> top : 1
the top so -> we : 1
top so we -> dequeue : 1
so we dequeue -> it : 1
we dequeue it -> from : 1
dequeue it from -> the : 1
it from the -> the : 1
it from the -> bottom : 1
it from the -> discuss : 1
the the diagram -> should : 1
the diagram should -> be : 1
diagram should be -> as : 1
we can repeat -> the : 1
can repeat the -> but : 1
repeat the but -> this : 1
the but this -> time : 1
but this time -> for : 1
this time for -> the : 1
time for the -> second : 1
time for the -> best : 1
for the second -> least : 1
the second least -> significant : 1
second least significant -> digit : 1
significant digit second -> digit : 1
digit second digit -> from : 1
second digit from -> the : 1
digit from the -> if : 1
digit from the -> and : 1
digit from the -> previous : 1
from the if -> the : 1
if the item -> contains : 1
the item contains -> only : 1
item contains only -> one : 1
contains only one -> the : 1
only one the -> rest : 1
one the rest -> of : 1
of the digits -> will : 1
the digits will -> be : 1
digits will be -> the : 1
be the collection -> should : 1
the collection should -> be : 1
collection should be -> as : 1
as we dequeue -> each : 1
we dequeue each -> bucket : 1
from to and -> should : 1
to and should -> have : 1
and should have -> the : 1
should have the -> following : 1
following to the -> third : 1
to the third -> digit : 1
the third digit -> from : 1
third digit from -> the : 1
from the and -> we : 1
we can collect -> them : 1
we can collect -> the : 1
can collect them -> into : 1
collect them into -> buckets : 1
them into buckets -> as : 1
into buckets as -> the : 1
buckets as the -> preceding : 1
we can rearrange -> the : 1
we can rearrange -> a : 1
can rearrange the -> array : 1
array by dequeuing -> each : 1
array by dequeuing -> all : 1
by dequeuing each -> bucket : 1
dequeuing each bucket -> from : 1
to as the -> last : 1
to as the -> and : 1
last position has -> to : 1
position has to -> be : 1
to be collected -> is : 1
be collected is -> the : 1
collected is the -> most : 1
is the most -> significant : 1
most significant we -> will : 1
significant we will -> have : 1
the following bucket -> we : 1
following bucket we -> can : 1
bucket we can -> get : 1
can get a -> the : 1
can get a -> hash : 1
get a the -> fully : 1
a the fully -> sorted : 1
sorted array by -> dequeuing : 1
by dequeuing all -> of : 1
dequeuing all of -> the : 1
of the buckets -> from : 1
the buckets from -> the : 1
buckets from the -> lowest : 1
the lowest digit -> to : 1
lowest digit to -> the : 1
digit to the -> greatest : 1
to the greatest -> as : 1
to the greatest -> is : 1
to the greatest -> to : 1
to the greatest -> which : 1
the greatest as -> shown : 1
greatest as shown -> in : 1
the following design -> the : 1
following design the -> code : 1
design the code -> for : 1
sorting algorithm in -> the : 1
algorithm in the -> the : 1
algorithm in the -> following : 1
the first thing -> we : 1
the first thing -> the : 1
first thing we -> need : 1
thing we need -> to : 1
to know in -> performing : 1
know in performing -> this : 1
in performing this -> algorithm : 1
performing this algorithm -> is : 1
this algorithm is -> the : 1
this algorithm is -> as : 1
algorithm is the -> greatest : 1
algorithm is the -> difference : 1
is the greatest -> item : 1
in the inputted -> this : 1
the inputted this -> is : 1
inputted this is -> because : 1
because we need -> to : 1
through the digit -> of : 1
the digit of -> once : 1
digit of once -> we : 1
of once we -> have : 1
once we have -> found : 1
we have found -> we : 1
we have found -> that : 1
have found we -> can : 1
found we can -> iterate : 1
can iterate through -> the : 1
through the number -> of : 1
number of digits -> in : 1
of digits in -> the : 1
digits in the -> item : 1
in the item -> by : 1
the item by -> diving : 1
item by diving -> it : 1
by diving it -> by : 1
diving it by -> an : 1
it by an -> starting : 1
by an starting -> and : 1
an starting and -> so : 1
starting and so -> to : 1
and so to -> get : 1
so to get -> the : 1
get the selected -> we : 1
divide the selected -> item : 1
selected item by -> its : 1
item by its -> current : 1
by its current -> exponential : 1
its current exponential -> and : 1
current exponential and -> then : 1
exponential and then -> find : 1
and then find -> the : 1
then find the -> of : 1
find the of -> the : 1
int create ten -> buckets : 1
create ten buckets -> for : 1
ten buckets for -> each : 1
buckets for each -> buckets : 1
for each buckets -> new : 1
each buckets new -> find : 1
buckets new find -> the : 1
new find the -> largest : 1
find the largest -> int : 1
find the largest -> denomination : 1
the largest int -> largestelement : 1
largest int largestelement -> i : 1
int largestelement i -> i : 1
largestelement i i -> largestelement : 1
i i largestelement -> iterate : 1
i largestelement iterate -> through : 1
largestelement iterate through -> every : 1
iterate through every -> using : 1
through every using -> exponetial : 1
every using exponetial -> to : 1
using exponetial to -> find : 1
exponetial to find -> the : 1
find the exp -> exp : 1
the exp exp -> iterate : 1
exp exp iterate -> the : 1
exp iterate the -> i : 1
iterate the i -> i : 1
i i move -> element : 1
i move element -> into : 1
move element into -> respective : 1
element into respective -> reconstruct : 1
into respective reconstruct -> the : 1
respective reconstruct the -> array : 1
the array starting -> the : 1
array starting the -> smallest : 1
starting the smallest -> digit : 1
the smallest digit -> in : 1
smallest digit in -> the : 1
in the reset -> the : 1
the reset the -> array : 1
reset the array -> counter : 1
the array counter -> before : 1
array counter before -> int : 1
counter before int -> arrcounter : 1
before int arrcounter -> i : 1
i i get -> all : 1
i get all -> elements : 1
get all elements -> from : 1
all elements from -> the : 1
elements from the -> get : 1
elements from the -> beginning : 2
from the get -> the : 1
the get the -> front : 1
the front then -> restore : 1
front then restore -> element : 1
then restore element -> to : 1
element to remove -> the : 1
front cout initialize -> a : 1
with quicksort display -> the : 1
quicksort display the -> sorted : 1
we can skip -> the : 1
can skip the -> first : 1
skip the first -> loop : 1
the first loop -> since : 1
first loop since -> only : 1
loop since only -> there : 1
since only there -> to : 1
only there to -> find : 1
there to find -> out : 1
out the greatest -> the : 1
the greatest the -> second : 1
greatest the second -> loop : 1
second loop is -> used : 1
to iterate to -> the : 1
iterate to the -> number : 1
to the number -> of : 1
number of or -> we : 1
of or we -> can : 1
notate it as -> each : 1
it as each -> iteration : 1
as each iteration -> of : 1
each iteration of -> will : 1
iteration of will -> iterate : 1
of will iterate -> through : 1
array elements to -> collect : 1
elements to collect -> all : 1
to collect all -> of : 1
collect all of -> the : 1
of the items -> based : 1
the items based -> on : 1
on the key -> as : 1
the key as -> we : 1
the key as -> well : 1
key as we -> did : 1
did for counting -> the : 1
for counting the -> time : 1
counting the time -> complexity : 2
the code inside -> the : 1
code inside the -> second : 1
second loop will -> be : 1
loop will be -> the : 1
be the same -> as : 2
as the time -> complexity : 1
of the counting -> the : 1
the counting the -> time : 1
of function will -> be : 3
be and since -> we : 1
can ignore variable -> if : 1
ignore variable if -> very : 1
variable if very -> the : 1
if very the -> time : 1
very the time -> complexity : 1
complexity of a -> radix : 1
of a radix -> sort : 1
a radix sort -> will : 1
radix sort will -> for : 1
sort will for -> both : 1
will for both -> the : 1
case the output -> on : 1
the screen will -> be : 1
screen will be -> as : 1
as follows if -> we : 1
follows if we -> build : 1
we have understood -> the : 1
have understood the -> sorting : 1
understood the sorting -> algorithms : 1
the sorting algorithms -> concept : 1
the sorting algorithms -> we : 1
sorting algorithms concept -> and : 1
algorithms concept and -> all : 1
concept and all -> common : 1
and all common -> sorting : 1
all common sorting -> algorithms : 1
common sorting algorithms -> in : 1
sorting algorithms in -> we : 1
we have looked -> at : 1
have looked at -> the : 1
looked at the -> slowest : 1
at the slowest -> sorting : 1
the slowest sorting -> algorithms : 1
slowest sorting algorithms -> that : 1
algorithms that give -> the : 1
that give the -> time : 1
give the time -> complexity : 1
time complexity bubble -> selection : 1
complexity bubble selection -> and : 1
bubble selection and -> insertion : 1
selection and insertion -> if : 1
and insertion if -> we : 1
insertion if we -> are : 1
we are we -> can : 1
are we can -> have : 1
can have time -> complexity : 2
have time complexity -> for : 4
complexity for both -> bubble : 1
complexity for both -> the : 1
for both bubble -> sort : 1
both bubble sort -> and : 1
bubble sort and -> insertion : 1
sort and insertion -> sort : 1
and insertion sort -> since : 1
insertion sort since -> they : 1
sort since they -> can : 1
since they can -> detect : 1
they can detect -> whether : 1
can detect whether -> we : 1
detect whether we -> pass : 1
whether we pass -> a : 1
a sorted for -> selection : 1
sorted for selection -> we : 1
for selection we -> will : 1
selection we will -> still : 1
we will still -> have : 1
we will still -> store : 1
will still have -> a : 1
still have a -> time : 1
have a time -> complexity : 1
a time complexity -> of : 1
a time complexity -> operation : 1
complexity of even -> after : 1
of even after -> the : 1
even after the -> input : 1
after the input -> list : 1
list is sorting -> algorithms : 1
is sorting algorithms -> that : 1
algorithms that are -> faster : 1
algorithms that are -> frequently : 1
that are faster -> than : 1
are faster than -> the : 1
faster than the -> three : 1
faster than the -> binary : 1
than the three -> preceding : 1
the three preceding -> algorithms : 1
three preceding algorithms -> are : 1
preceding algorithms are -> merge : 1
algorithms are merge -> sort : 1
are merge sort -> and : 1
merge sort and -> quick : 2
sort and quick -> their : 1
sort and quick -> sort : 1
and quick their -> time : 1
quick their time -> complexity : 1
their time complexity -> is : 2
time complexity is -> log : 1
time complexity is -> the : 1
time complexity is -> an : 1
time complexity is -> and : 1
time complexity is -> where : 1
complexity is log -> since : 1
is log since -> they : 1
log since they -> have : 1
they have to -> divide : 1
two the and -> the : 1
the sorting are -> counting : 1
sorting are counting -> sort : 1
are counting sort -> and : 1
counting sort and -> radix : 1
sort and radix -> sort : 1
and radix sort -> since : 1
radix sort since -> their : 1
sort since their -> time : 1
since their time -> complexity : 1
complexity is the -> next : 1
is the next -> we : 1
to discuss a -> technique : 1
to discuss a -> balanced : 1
discuss a technique -> to : 1
a technique to -> search : 1
a technique to -> point : 1
a technique to -> store : 1
technique to search -> for : 1
item in an -> array : 1
in an array -> or : 1
an array or -> a : 2
array or a -> list : 1
array or a -> but : 1
or a list -> by : 1
a list by -> using : 1
a list by -> sorting : 1
a list by -> dividing : 1
list by using -> a : 1
a sorting we -> sort : 1
we sort the -> left : 1
and right sublist -> from : 1
right sublist from -> the : 1
sublist from the -> partition : 1
from the partition -> method : 1
the partition method -> in : 1
partition method in -> quick : 1
method in quick -> sort : 1
in quick sort -> using : 1
quick sort using -> other : 1
sort using other -> sorting : 1
using other sorting -> we : 1
other sorting we -> have : 1
sorting we have -> an : 1
an array which -> consists : 2
array which consists -> what : 1
array which consists -> of : 1
which consists what -> sorting : 1
consists what sorting -> algorithm : 1
what sorting algorithm -> will : 1
algorithm will give -> you : 1
will give you -> the : 1
give you the -> fastest : 1
you the fastest -> time : 1
the fastest time -> can : 1
fastest time can -> merge : 1
time can merge -> sort : 1
can merge sort -> and : 1
and quick sort -> log : 1
sort log for -> their : 1
log for their -> time : 1
for their time -> sorting : 1
their time sorting -> algorithm : 1
time sorting algorithm -> is : 1
algorithm is similar -> to : 1
similar to arranging -> a : 1
to arranging a -> hand : 1
arranging a hand -> of : 1
of poker is -> the : 1
poker is the -> best : 1
the best sorting -> algorithm : 1
best sorting algorithm -> if : 1
sorting algorithm if -> we : 1
algorithm if we -> are : 1
consists of reference -> you : 1
of reference you -> can : 1
reference you can -> refer : 1
the following out -> an : 1
following out an -> element : 1
using searching the -> previous : 1
searching the previous -> we : 1
we discussed various -> techniques : 1
we discussed various -> searching : 1
discussed various techniques -> to : 1
various techniques to -> arrange : 1
techniques to arrange -> a : 1
to arrange a -> list : 1
arrange a list -> by : 1
list by sorting -> in : 1
by sorting in -> this : 1
sorting in this -> we : 1
going to various -> to : 1
to various to -> search : 1
various to search -> a : 1
to search a -> specific : 1
search a specific -> value : 1
specific value on -> a : 1
value on a -> list : 1
on a list -> and : 1
list and find -> the : 1
find the index -> where : 2
the index where -> several : 1
the index where -> is : 1
index where several -> searching : 1
where several searching -> algorithms : 1
several searching algorithms -> we : 1
searching algorithms we -> are : 1
searching algorithms we -> discussed : 1
this chapter need -> a : 1
chapter need a -> sorted : 1
need a sorted -> so : 1
a sorted so -> we : 1
can apply one -> of : 1
apply one of -> algorithms : 1
one of algorithms -> we : 1
of algorithms we -> discussed : 1
algorithms we discussed -> in : 3
the previous by -> the : 1
previous by the -> end : 1
by the end -> of : 1
of this we -> will : 2
of this we -> have : 1
will be able -> to : 1
able to understand -> and : 1
to understand and -> apply : 1
understand and apply -> the : 1
and apply the -> following : 1
apply the following -> searching : 1
the following searching -> follow : 1
following searching follow -> along : 1
searching follow along -> with : 1
with this including -> the : 4
this including the -> source : 4
require the pc -> or : 4
the pc or -> notebook : 4
on github is -> a : 1
github is a -> simple : 1
a simple searching -> algorithm : 1
simple searching algorithm -> to : 1
searching algorithm to -> find : 3
searching algorithm to -> the : 1
algorithm to find -> out : 2
algorithm to find -> the : 2
find out an -> item : 1
out an item -> in : 1
item in a -> list : 1
list using a -> sequential : 1
using a sequential -> it : 1
a sequential it -> means : 1
sequential it means -> that : 1
that we start -> looking : 1
we start looking -> at : 1
start looking at -> the : 1
looking at the -> first : 1
first item in -> the : 1
in the then -> move : 1
the then move -> to : 1
then move to -> the : 1
to the second -> the : 1
second the third -> the : 1
the third the -> fourth : 1
third the fourth -> and : 1
the fourth and -> so : 1
fourth and so -> in : 1
and so in -> data : 1
so in data -> in : 1
in data in -> lists : 1
and linked and -> stacks : 1
linked and stacks -> and : 1
and stacks and -> when : 1
stacks and when -> we : 1
when we discussed -> data : 1
we discussed data -> we : 1
discussed data we -> designed : 1
data we designed -> a : 1
we designed a -> searching : 1
designed a searching -> algorithm : 1
a searching algorithm -> for : 1
a searching algorithm -> to : 2
a searching algorithm -> that : 1
searching algorithm for -> each : 1
algorithm for each -> data : 1
structure we the -> searching : 1
we the searching -> algorithm : 1
searching algorithm uses -> a : 1
algorithm uses a -> linear : 1
uses a linear -> searching : 1
a linear searching -> a : 1
linear searching a -> linear : 1
linear search refresh -> our : 1
search refresh our -> memory : 1
refresh our memory -> about : 1
our memory about -> linear : 1
memory about linear -> pick : 1
about linear pick -> a : 1
linear pick a -> random : 1
pick a random -> array : 1
a random array -> that : 1
random array that -> contains : 1
array that contains -> we : 1
that contains we -> then : 1
contains we then -> have : 1
we then have -> to : 1
then have to -> find : 1
have to find -> the : 4
have to find -> a : 1
have to find -> out : 1
have to find -> another : 1
index where is -> as : 1
where is as -> we : 1
in the is -> in : 1
is in index -> the : 1
in index the -> array : 1
index the array -> is : 1
array is if -> we : 1
if we find -> an : 1
if we find -> a : 1
if we find -> the : 2
we find an -> unexisting : 1
find an unexisting -> the : 1
an unexisting the -> algorithm : 1
unexisting the algorithm -> the : 1
the algorithm the -> following : 1
is the method -> of : 1
the method of -> linear : 1
method of linear -> search : 1
of linear search -> named : 1
linear search named -> int : 1
search named int -> int : 1
named int int -> int : 1
through the start -> to : 1
the start to -> the : 1
start to the -> end : 1
end index return -> the : 1
index return the -> searched : 1
return the searched -> i : 1
the searched i -> i : 1
searched i i -> return : 1
return return if -> no : 1
return return if -> val : 1
return return if -> we : 1
if no val -> is : 1
no val is -> return : 1
val is return -> we : 1
the we pass -> an : 1
we pass an -> and : 1
pass an and -> the : 1
an and the -> value : 1
going to search -> the : 1
going to search -> based : 1
going to search -> key : 1
to search the -> algorithm : 1
to search the -> position : 1
search the algorithm -> then : 1
the algorithm then -> iterates : 1
algorithm then iterates -> through : 1
then iterates through -> the : 1
array from to -> the : 1
to the algorithm -> will : 1
algorithm will return -> the : 1
the index if -> the : 1
index if the -> value : 1
value is if -> the : 1
not stored in -> the : 1
stored in the -> it : 1
stored in the -> middle : 1
stored in the -> in : 1
stored in the -> chaining : 1
stored in the -> data : 2
stored in the -> hash : 4
stored in the -> correct : 1
stored in the -> right : 1
will simply return -> the : 1
return the linear -> search : 1
linear search create -> a : 1
search create a -> function : 1
create a function -> to : 1
create a function -> in : 1
function to invoke -> as : 1
to invoke as -> cout : 1
invoke as cout -> initialize : 1
as cout initialize -> a : 1
int arrsize define -> value : 6
arrsize define value -> to : 6
define value to -> be : 6
value to be -> int : 6
value to be -> inserted : 1
to be int -> searchedvalue : 6
be int searchedvalue -> find : 6
int searchedvalue find -> the : 6
searchedvalue find the -> searched : 6
find the searched -> value : 7
find the searched -> or : 1
find the searched -> the : 1
the searched value -> using : 6
the searched value -> is : 9
the searched value -> will : 1
the searched value -> might : 1
the searched value -> in : 2
the searched value -> must : 1
the searched value -> if : 1
the searched value -> to : 1
searched value using -> linear : 1
searched value using -> binary : 1
searched value using -> ternary : 1
searched value using -> interpolation : 1
searched value using -> jump : 1
searched value using -> blockindex : 1
value using linear -> int : 1
using linear int -> i : 1
linear int i -> arrsize : 1
int i arrsize -> notify : 4
i arrsize notify -> user : 4
arrsize notify user -> the : 4
notify user the -> if : 7
user the if -> the : 7
if the return -> is : 7
if the return -> the : 1
the return is -> not : 6
the return is -> the : 1
return is not -> the : 6
not the searched -> value : 6
searched value is -> cout : 7
searched value is -> stored : 1
searched value is -> the : 1
value is cout -> searchedvalue : 6
value is cout -> second : 1
is cout searchedvalue -> is : 6
cout searchedvalue is -> found : 6
searchedvalue is found -> in : 6
is found in -> index : 6
is found in -> the : 2
found in index -> cout : 6
in index cout -> i : 6
index cout i -> cout : 6
cout i cout -> not : 6
i cout not -> find : 6
cout not find -> value : 6
not find value -> cout : 6
find value cout -> return : 6
value cout return -> the : 1
value cout return -> shown : 1
value cout return -> we : 3
value cout return -> is : 1
preceding we try -> to : 1
we try to -> find : 4
try to find -> the : 3
try to find -> out : 2
of value the -> following : 1
value the following -> output : 1
following output occurs -> if : 1
output occurs if -> we : 1
occurs if we -> build : 1
preceding code that -> is : 1
code that is -> written : 1
that is written -> in : 1
is written in -> we : 1
written in we -> see : 1
in we see -> that : 1
see that it -> has : 1
to iterate all -> array : 1
iterate all array -> elements : 1
all array elements -> until : 1
array elements until -> it : 1
elements until it -> finds : 1
finds the searched -> in : 1
the searched in -> the : 1
searched in the -> best : 1
best the searched -> value : 1
searched value will -> be : 1
will be at -> the : 1
the first so -> the : 1
first so the -> time : 1
time complexity would -> the : 1
complexity would the -> searched : 1
would the searched -> value : 1
searched value might -> not : 1
value might not -> be : 1
might not be -> found : 1
not be found -> in : 1
and the algorithm -> has : 1
and the algorithm -> implementation : 1
the algorithm has -> to : 1
algorithm has to -> iterate : 1
to iterate until -> the : 1
of the that -> is : 1
the that is -> the : 1
that is the -> worst : 1
is the worst -> with : 1
is the worst -> a : 2
is the worst -> the : 1
is the worst -> out : 1
the worst with -> is : 1
worst with is -> a : 1
with is a -> searching : 1
is a searching -> algorithm : 2
of the searched -> value : 2
of the searched -> and : 1
of the searched -> the : 1
of the searched -> is : 1
searched value in -> a : 2
searched value in -> each : 1
value in a -> list : 1
value in a -> sorted : 1
value in a -> skewed : 4
list by dividing -> the : 2
by dividing the -> list : 1
by dividing the -> array : 1
by dividing the -> number : 1
dividing the list -> into : 1
list into left -> and : 1
and right prior -> to : 1
right prior to -> performing : 1
prior to performing -> this : 1
to performing this -> searching : 1
performing this searching -> we : 1
this searching we -> have : 2
this searching we -> are : 1
searching we have -> to : 2
have to sort -> the : 1
sort the list -> using : 1
the list using -> the : 1
list using the -> sorting : 1
using the sorting -> algorithms : 1
the data elements -> using : 1
a sorting binary -> search : 1
sorting binary search -> we : 1
search we have -> a : 1
search we have -> an : 2
search we have -> to : 2
have a sorted -> array : 1
sorted array containing -> these : 1
containing these elements -> we : 1
these elements we -> need : 1
elements we need -> to : 1
first thing the -> binary : 1
thing the binary -> search : 1
the binary search -> does : 1
the binary search -> on : 2
the binary search -> algorithm : 2
the binary search -> which : 1
the binary search -> except : 1
the binary search -> to : 2
the binary search -> from : 1
the binary search -> the : 2
the binary search -> tree : 1
binary search does -> is : 1
search does is -> to : 1
does is to -> find : 1
is to find -> the : 1
find the middle -> then : 1
find the middle -> value : 1
the middle then -> compares : 1
middle then compares -> it : 1
then compares it -> with : 1
compares it with -> the : 1
with the searched -> since : 2
with the searched -> value : 1
with the searched -> if : 2
the searched since -> got : 1
the searched since -> is : 1
searched since got -> elements : 1
since got elements -> on : 1
got elements on -> the : 1
elements on the -> the : 1
on the the -> middle : 1
on the the -> area : 1
on the the -> preceding : 1
on the the -> function : 1
the the middle -> index : 1
the the middle -> it : 1
the middle index -> is : 2
the middle index -> based : 1
the middle index -> using : 1
the middle index -> when : 1
the middle index -> as : 1
the middle index -> can : 1
middle index is -> the : 1
middle index is -> not : 1
index is the -> array : 1
index is the -> hash : 1
is the array -> is : 1
is the array -> of : 1
array is a -> and : 1
is a and -> the : 1
a and the -> value : 1
a and the -> quicksort : 1
index is we -> compare : 1
is we compare -> with : 1
compare with our -> searched : 1
with our searched -> which : 1
our searched which -> is : 1
searched which is -> since : 1
since the middle -> value : 1
the middle value -> is : 8
middle value is -> greater : 3
middle value is -> which : 1
middle value is -> the : 2
middle value is -> lower : 2
than the value -> we : 1
we are looking -> the : 1
are looking the -> searched : 1
looking the searched -> value : 1
searched value must -> be : 1
value must be -> to : 1
must be to -> the : 1
be to the -> left : 1
the left of -> the : 1
left of the -> middle : 1
of the middle -> we : 1
of the middle -> the : 1
the middle we -> can : 1
middle we can -> take : 1
can take the -> left : 1
take the left -> subarray : 1
the left subarray -> and : 1
left subarray and -> have : 1
subarray and have -> these : 1
and have these -> we : 1
have these we -> perform : 1
these we perform -> the : 1
we perform the -> binary : 1
we perform the -> since : 1
perform the binary -> search : 2
binary search on -> this : 2
search on this -> subarray : 1
search on this -> we : 1
on this subarray -> and : 1
this subarray and -> find : 1
subarray and find -> the : 1
value is which -> is : 1
lower than so -> we : 2
than so we -> take : 1
than so we -> can : 1
so we take -> the : 1
we take the -> right : 1
take the right -> subarray : 1
the right subarray -> and : 1
right subarray and -> get : 1
subarray and get -> these : 1
and get these -> we : 1
get these we -> now : 1
these we now -> have : 1
now have only -> three : 1
have only three -> elements : 1
only three elements -> to : 1
three elements to -> be : 1
elements to be -> by : 1
to be by -> performing : 1
be by performing -> the : 1
by performing the -> binary : 1
performing the binary -> search : 1
we will find -> the : 3
of the value -> the : 1
the value the -> code : 1
value the code -> for : 1
for the binary -> search : 1
binary search algorithm -> is : 2
binary search algorithm -> in : 1
binary search algorithm -> and : 1
binary search algorithm -> with : 1
search algorithm is -> as : 1
search algorithm is -> in : 1
search algorithm is -> for : 1
search algorithm is -> search : 1
algorithm is as -> int : 1
algorithm is as -> a : 1
only perform searching -> if : 2
perform searching if -> the : 2
searching if the -> end : 2
is higher or -> equals : 2
higher or equals -> to : 2
or equals to -> start : 2
equals to start -> find : 2
to start find -> middle : 1
to start find -> index : 1
int middleindex startindex -> if : 1
middleindex startindex if -> the : 1
startindex if the -> middle : 1
if the middle -> value : 6
is the searched -> then : 2
is the searched -> value : 1
the searched then -> return : 2
the searched then -> perform : 4
the searched then -> we : 1
searched then return -> the : 2
then return the -> return : 2
return the return -> if : 2
return the return -> we : 3
the return if -> the : 3
than the searched -> then : 5
than the searched -> it : 3
than the searched -> we : 1
searched then perform -> another : 4
then perform another -> binary : 2
then perform another -> ternary : 2
then perform another -> interpolation : 2
perform another binary -> search : 2
another binary search -> to : 2
binary search to -> the : 4
binary search to -> find : 1
binary search to -> sort : 1
search to the -> left : 2
search to the -> right : 2
search to the -> sub : 2
search to the -> subarray : 1
the left sub -> middleindex : 2
left sub middleindex -> else : 2
sub middleindex else -> return : 2
middleindex else return -> middleindex : 2
else return middleindex -> if : 2
return middleindex if -> the : 2
middleindex if the -> middle : 2
value is lower -> than : 3
the right return -> middleindex : 1
right return middleindex -> just : 1
return middleindex just -> in : 2
middleindex just in -> case : 2
just in case -> no : 3
in case no -> any : 3
case no any -> value : 3
no any value -> return : 3
any value return -> we : 2
any value return -> interpolation : 1
value return we -> can : 2
preceding we call -> the : 1
preceding we call -> iteration : 1
call the function -> recursively : 1
the function recursively -> for : 1
function recursively for -> a : 1
recursively for a -> sublist : 1
for a sublist -> it : 1
a sublist it -> has : 1
sublist it has -> after : 1
it has after -> performing : 1
has after performing -> the : 1
after performing the -> function : 1
performing the function -> will : 1
function will find -> the : 2
searched value if -> it : 1
value if it -> finds : 1
if it finds -> the : 1
if it finds -> one : 1
if it finds -> unmatched : 1
finds the middle -> the : 1
the middle the -> searched : 1
the middle the -> implementation : 1
the middle the -> time : 1
middle the searched -> we : 1
the searched we -> can : 1
the searched we -> increase : 1
searched we can -> see : 1
see in function -> we : 1
in function we -> use : 1
function we use -> recursion : 1
we use recursion -> instead : 1
use recursion instead -> of : 1
recursion instead of -> iteration : 1
instead of iteration -> to : 1
of iteration to -> repeat : 1
iteration to repeat -> function : 1
to repeat function -> the : 1
repeat function the -> usage : 1
function the usage -> of : 1
usage of recursion -> will : 1
of recursion will -> make : 1
recursion will make -> our : 1
will make our -> function : 1
make our function -> simpler : 1
our function simpler -> and : 1
function simpler and -> more : 1
simpler and more -> recursion : 1
and more recursion -> will : 1
more recursion will -> be : 1
recursion will be -> an : 1
will be an -> infinite : 1
be an infinite -> loop : 1
an infinite loop -> if : 1
infinite loop if -> you : 1
loop if you -> miss : 1
if you miss -> a : 1
you miss a -> basis : 1
miss a basis -> if : 1
a basis if -> you : 1
basis if you -> are : 1
if you are -> interested : 2
interested in learning -> more : 1
interested in learning -> about : 2
in learning more -> about : 1
learning more about -> you : 1
more about you -> can : 1
about you can -> refer : 1
to the functional -> method : 1
the functional method -> invocation : 1
functional method invocation -> using : 1
method invocation using -> recursive : 1
invocation using recursive -> published : 1
using recursive published -> by : 1
recursive published by -> binary : 1
published by binary -> search : 1
by binary search -> following : 1
binary search following -> is : 1
search following is -> the : 1
is the function -> which : 1
the function which -> invokes : 1
function which invokes -> cout : 1
which invokes cout -> initialize : 1
invokes cout initialize -> a : 1
value using binary -> int : 1
using binary int -> i : 1
binary int i -> arrsize : 1
cout return shown -> in : 1
return shown in -> the : 1
going to find -> the : 1
of value in -> the : 1
the array containing -> the : 1
the following screenshot -> demonstrates : 1
following screenshot demonstrates -> the : 1
screenshot demonstrates the -> output : 1
demonstrates the output -> that : 1
the output that -> we : 2
output that we -> should : 2
that we should -> see : 2
should see on -> the : 1
see on the -> console : 1
the console if -> we : 1
console if we -> run : 1
code we can -> find : 1
find in time -> complexity : 1
in time complexity -> of : 1
complexity of binary -> search : 3
of binary search -> algorithm : 1
of binary search -> is : 2
of binary search -> we : 1
algorithm is in -> the : 1
the worst since -> we : 2
worst since we -> have : 1
worst since we -> may : 1
into two then -> each : 1
two then each -> subarray : 1
then each subarray -> into : 1
each subarray into -> two : 1
subarray into two -> until : 1
into two until -> we : 1
two until we -> find : 1
until we find -> the : 4
we find the -> searched : 1
we find the -> position : 1
we find the -> key : 1
we find the -> maximum : 1
we find the -> minimum : 1
we find the -> first : 2
we find the -> inputted : 1
we find the -> next : 1
we find the -> we : 1
the searched or -> until : 1
searched or until -> the : 1
or until the -> subarray : 1
until the subarray -> cannot : 1
the subarray cannot -> be : 1
subarray cannot be -> divided : 1
be divided this -> searching : 1
divided this searching -> algorithm : 1
this searching algorithm -> can : 1
this searching algorithm -> is : 1
searching algorithm can -> give : 1
algorithm can give -> time : 1
can give time -> complexity : 1
give time complexity -> in : 1
case if the -> searched : 1
case if the -> first : 1
if the searched -> value : 1
value is stored -> in : 1
is stored in -> the : 4
is stored in -> for : 1
the middle position -> if : 1
the middle position -> in : 1
middle position if -> we : 1
position if we -> search : 1
if we search -> in : 1
if we search -> for : 1
if we search -> it : 1
we search in -> the : 1
search in the -> preceding : 1
search in the -> loop : 1
preceding a searching -> algorithm : 1
searching algorithm that -> divides : 1
algorithm that divides -> an : 1
that divides an -> input : 1
array into three -> array : 1
into three array -> of : 1
three array of -> the : 1
array of the -> first : 1
the first of -> the : 1
first of the -> last : 1
of the last -> and : 1
of the last -> int : 1
of the last -> then : 1
the last and -> an : 1
last and an -> array : 1
and an array -> between : 1
an array between -> these : 1
array between these -> two : 1
between these two -> it : 1
these two it -> needs : 1
two it needs -> to : 1
needs to pick -> two : 1
to pick two -> which : 1
pick two which -> are : 1
which are these -> two : 1
are these two -> indexes : 1
these two indexes -> are : 1
two indexes are -> calculated : 1
indexes are calculated -> based : 1
are calculated based -> on : 1
calculated based on -> the : 1
on the first -> index : 1
first index and -> the : 1
index and the -> last : 1
index and the -> highest : 1
the last index -> of : 1
last index of -> the : 1
of the input -> ternary : 1
of the input -> whether : 1
the input ternary -> search : 1
input ternary search -> we : 1
ternary search we -> have : 1
an array as -> we : 1
array as we -> have : 1
have in a -> binary : 1
in a binary -> and : 1
in a binary -> the : 1
in a binary -> search : 2
in a binary -> tree : 1
a binary and -> want : 1
binary and want -> to : 1
and want to -> search : 2
want to search -> for : 2
want to search -> and : 1
search for a -> value : 2
search for a -> pattern : 1
search for a -> key : 3
search for a -> given : 1
for a value -> the : 1
for a value -> of : 1
a value the -> array : 1
value the array -> so : 1
array so we -> will : 1
have the fifth -> index : 1
the fifth index -> as : 1
fifth index as -> the : 1
index as the -> index : 2
the index and -> ninth : 1
index and ninth -> index : 1
and ninth index -> as : 1
ninth index as -> the : 1
the index by -> using : 1
index by using -> these : 1
by using these -> two : 1
using these two -> we : 1
these two we -> can : 1
two we can -> find : 1
two we can -> just : 1
value in each -> area : 1
in each area -> using : 1
each area using -> the : 1
area using the -> ternary : 1
using the ternary -> search : 1
ternary search algorithm -> itself : 1
ternary search algorithm -> in : 1
search algorithm itself -> the : 1
algorithm itself the -> code : 1
itself the code -> of : 1
the code of -> a : 1
code of a -> ternary : 1
of a ternary -> search : 1
a ternary search -> algorithm : 1
search algorithm in -> is : 1
search algorithm in -> picking : 1
algorithm in is -> as : 1
in is as -> int : 1
in is as -> bstnode : 1
start find index -> of : 1
find index of -> area : 2
index of area -> of : 2
of area of -> the : 2
area of the -> first : 1
area of the -> last : 2
area of the -> ternary : 1
the first int -> middleleftindex : 1
first int middleleftindex -> startindex : 1
int middleleftindex startindex -> find : 1
middleleftindex startindex find -> index : 1
startindex find index -> of : 1
the last int -> middlerightindex : 1
last int middlerightindex -> middleleftindex : 1
int middlerightindex middleleftindex -> if : 1
middlerightindex middleleftindex if -> val : 1
middleleftindex if val -> is : 2
if val is -> at : 4
val is at -> then : 2
val is at -> the : 3
is at then -> return : 2
at then return -> return : 1
at then return -> else : 1
then return return -> if : 1
return if val -> is : 2
then return else -> return : 1
is at the -> are : 1
is at the -> area : 1
is at the -> between : 1
is at the -> remainder : 1
is at the -> last : 1
at the are -> of : 1
the are of -> the : 1
are of the -> first : 1
the first then -> perform : 1
first then perform -> another : 1
perform another ternary -> search : 2
another ternary search -> to : 2
ternary search to -> this : 2
search to this -> middleleftindex : 1
search to this -> else : 1
to this middleleftindex -> else : 1
this middleleftindex else -> return : 1
middleleftindex else return -> middleleftindex : 1
else return middleleftindex -> if : 1
return middleleftindex if -> val : 1
at the area -> of : 1
the area of -> the : 2
the last then -> perform : 1
last then perform -> another : 1
to this else -> return : 1
this else return -> middlerightindex : 1
else return middlerightindex -> the : 1
return middlerightindex the -> val : 1
middlerightindex the val -> is : 1
the val is -> at : 1
at the between -> middleleftindex : 1
the between middleleftindex -> and : 1
between middleleftindex and -> middlerightindex : 1
middleleftindex and middlerightindex -> return : 1
and middlerightindex return -> middleleftindex : 1
middlerightindex return middleleftindex -> middlerightindex : 1
return middleleftindex middlerightindex -> just : 1
middleleftindex middlerightindex just -> in : 1
middlerightindex just in -> case : 1
in the after -> we : 1
the after we -> compare : 1
the after we -> can : 2
after we compare -> the : 1
compare the elements -> at : 1
the elements at -> the : 1
elements at the -> two : 1
at the two -> indexes : 1
at the two -> trees : 1
the two indexes -> with : 1
two indexes with -> the : 1
indexes with the -> searched : 1
searched value to -> guess : 1
value to guess -> where : 1
to guess where -> the : 1
guess where the -> searched : 1
where the searched -> value : 1
is the ternary -> search : 1
ternary search invoke -> we : 1
search invoke we -> can : 1
use the cout -> initialize : 1
the cout initialize -> a : 1
value using ternary -> int : 1
using ternary int -> i : 1
ternary int i -> arrsize : 1
the the area -> of : 1
of the ternary -> search : 1
ternary search is -> always : 1
search is always -> one : 1
is always one -> the : 1
always one the -> time : 1
one the time -> complexity : 1
of this search -> algorithm : 1
this search algorithm -> is : 1
is for the -> worst : 1
is for the -> average : 1
the worst for -> the : 1
worst for the -> best : 1
best the time -> complexity : 2
complexity is an -> improvement : 1
is an improvement -> of : 1
an improvement of -> the : 1
an improvement of -> binary : 2
improvement of the -> binary : 1
of the binary -> search : 2
of the binary -> digit : 1
algorithm in picking -> the : 1
in picking the -> middle : 1
picking the middle -> instead : 1
picking the middle -> element : 1
the middle instead -> of : 1
middle instead of -> always : 1
instead of always -> picking : 1
of always picking -> the : 1
always picking the -> middle : 1
the middle element -> to : 1
middle element to -> be : 1
to be checked -> to : 1
be checked to -> a : 1
checked to a -> searched : 1
to a searched -> value : 1
a searched value -> like : 1
a searched value -> in : 1
searched value like -> in : 1
value like in -> a : 1
like in a -> binary : 1
a binary the -> middle : 1
binary the middle -> index : 2
index is not -> always : 1
is not always -> at : 1
not always at -> the : 1
always at the -> middle : 1
at the middle -> position : 1
middle position in -> an : 1
position in an -> interpolation : 1
in an interpolation -> the : 1
an interpolation the -> algorithm : 1
interpolation the algorithm -> will : 1
algorithm will calculate -> the : 1
will calculate the -> middle : 1
calculate the middle -> index : 3
calculate the middle -> the : 1
middle index based -> on : 1
index based on -> the : 1
on the searched -> and : 1
the searched and -> pick : 1
the searched and -> just : 1
searched and pick -> the : 1
and pick the -> nearest : 1
pick the nearest -> element : 1
the nearest element -> from : 1
nearest element from -> the : 1
from the searched -> similar : 1
the searched similar -> to : 1
searched similar to -> the : 1
to the binary -> in : 1
to the binary -> search : 1
the binary in -> the : 1
the binary in -> we : 1
binary in the -> interpolation : 1
in the interpolation -> search : 1
the interpolation search -> we : 1
the interpolation search -> interpolation : 1
the interpolation search -> is : 1
the interpolation search -> improves : 1
the interpolation search -> with : 1
interpolation search we -> have : 1
have to pass -> an : 1
to pass an -> array : 1
pass an array -> we : 1
array we want -> to : 1
to search and -> define : 1
search and define -> the : 1
and define the -> lowest : 1
define the lowest -> index : 1
the lowest index -> and : 1
lowest index and -> the : 1
and the highest -> then : 1
the highest then -> calculate : 1
highest then calculate -> the : 1
middle index using -> the : 1
index using the -> following : 1
the following interpolation -> search : 1
following interpolation search -> borrow : 1
interpolation search borrow -> the : 1
search borrow the -> array : 1
borrow the array -> we : 1
in the binary -> search : 1
binary search which -> find : 1
search which find -> as : 1
which find as -> we : 1
find as we -> discussed : 1
discussed in binary -> the : 1
in binary the -> middle : 1
middle index when -> it : 1
index when it -> runs : 1
when it runs -> before : 1
it runs before -> we : 1
runs before we -> find : 1
before we find -> the : 1
the position means -> it : 1
position means it -> needs : 1
means it needs -> four : 1
it needs four -> invocation : 1
needs four invocation -> by : 1
four invocation by -> using : 1
invocation by using -> interpolation : 1
by using interpolation -> we : 1
using interpolation we -> just : 1
interpolation we just -> need : 1
just need two -> invocation : 1
just need two -> invocations : 1
need two invocation -> of : 1
two invocation of -> an : 1
invocation of an -> interpolation : 1
of an interpolation -> search : 1
an interpolation search -> prove : 1
interpolation search prove -> we : 1
search prove we -> use : 1
prove we use -> but : 1
we use but -> just : 1
use but just -> replace : 1
but just replace -> with : 1
just replace with -> the : 1
replace with the -> formula : 1
with the formula -> in : 1
the formula in -> the : 1
formula in the -> preceding : 1
preceding we pass -> the : 1
we pass the -> array : 1
pass the array -> and : 1
the array and -> we : 1
array and we -> are : 1
to search based -> on : 1
search based on -> those : 1
based on those -> we : 1
on those we -> can : 1
those we can -> calculate : 1
middle index as -> result : 1
index as result -> of : 1
as result of -> the : 2
the preceding calculation -> is : 2
preceding calculation is -> and : 1
preceding calculation is -> which : 1
calculation is and -> as : 1
is and as -> an : 1
and as an -> integer : 1
as an integer -> it : 1
an integer it -> will : 1
integer it will -> it : 1
it will it -> equal : 1
will it equal -> is : 1
it equal is -> lower : 1
equal is lower -> than : 1
we can eliminate -> start : 1
can eliminate start -> the : 1
eliminate start the -> search : 1
start the search -> from : 1
the search from -> index : 1
search from index -> the : 1
from index the -> middle : 1
index the middle -> index : 1
middle index can -> be : 1
index can be -> calculated : 1
can be calculated -> as : 1
be calculated as -> result : 1
calculated as result -> of : 1
calculation is which -> we : 1
is which we -> now : 1
which we now -> stored : 1
we now stored -> at : 1
now stored at -> we : 1
stored at we -> have : 1
at we have -> successfully : 1
have successfully found -> the : 1
successfully found the -> position : 1
found the position -> of : 1
searched and just -> need : 1
and just need -> two : 1
need two invocations -> of : 1
two invocations of -> the : 1
invocations of the -> interpolation : 1
of the interpolation -> search : 1
of the interpolation -> for : 1
interpolation search is -> just : 1
interpolation search is -> faster : 1
search is just -> an : 1
is just an -> improvement : 1
just an improvement -> of : 1
improvement of binary -> the : 1
improvement of binary -> search : 1
of binary the -> implementation : 1
binary the implementation -> of : 1
implementation of interpolation -> search : 1
of interpolation search -> in : 1
interpolation search in -> is : 1
search in is -> similar : 1
in is similar -> to : 1
binary search except -> the : 1
search except the -> way : 1
except the way -> we : 1
way we calculate -> the : 1
we calculate the -> middle : 1
middle the implementation -> be : 1
the implementation be -> as : 1
implementation be as -> int : 1
int int find -> middle : 1
int find middle -> int : 1
int middleindex lowindex -> if : 1
middleindex lowindex if -> the : 1
lowindex if the -> middle : 1
perform another interpolation -> search : 2
another interpolation search -> to : 2
interpolation search to -> the : 2
the right sub -> return : 1
right sub return -> middleindex : 1
sub return middleindex -> just : 1
value return interpolation -> search : 1
return interpolation search -> can : 1
interpolation search can -> use : 1
search can use -> similar : 1
can use similar -> to : 1
use similar to -> binary : 1
similar to binary -> search : 1
to binary search -> to : 1
search to find -> the : 1
search to find -> for : 1
find the shown -> in : 1
the shown in -> the : 1
the following cout -> initialize : 2
the following cout -> to : 1
the following cout -> string : 1
the following cout -> input : 1
the following cout -> table : 1
the following cout -> change : 1
following cout initialize -> a : 2
value using interpolation -> int : 1
using interpolation int -> i : 1
interpolation int i -> arrsize : 1
cout return is -> the : 1
return is the -> output : 1
return is the -> searched : 1
is the output -> that : 1
is the output -> we : 1
to a binary -> as : 1
to a binary -> we : 1
a binary as -> we : 1
a binary as -> shown : 1
binary as we -> can : 1
binary as we -> the : 1
following we discussed -> the : 1
discussed the time -> complexity : 1
binary search is -> the : 1
binary search is -> after : 1
search is the -> interpolation : 1
is the interpolation -> search : 1
search is faster -> than : 1
is faster than -> the : 1
than the binary -> since : 1
the binary since -> the : 1
binary since the -> interpolation : 1
since the interpolation -> search : 1
interpolation search improves -> the : 1
search improves the -> calculation : 1
improves the calculation -> of : 1
the calculation of -> the : 1
middle the time -> complexity : 1
the interpolation for -> the : 1
interpolation for the -> best : 1
the algorithm is -> a : 1
the algorithm is -> still : 1
the algorithm is -> addition : 1
algorithm is a -> searching : 1
algorithm is a -> jump : 1
algorithm is a -> linear : 1
position of a -> searched : 1
of a searched -> value : 1
sorted list by -> dividing : 1
array into several -> jumping : 1
array into several -> in : 1
into several jumping -> to : 1
several jumping to -> the : 1
jumping to the -> first : 1
the then comparing -> the : 1
then comparing the -> value : 1
comparing the value -> of : 1
first index with -> the : 1
index with the -> searched : 1
the searched if -> the : 2
searched if the -> value : 1
searched if the -> is : 1
first index is -> greater : 1
index is greater -> than : 1
the searched it -> the : 1
the searched it -> then : 1
the searched it -> jumps : 1
searched it the -> previous : 1
it the previous -> then : 1
the previous then -> starts : 1
previous then starts -> a : 1
then starts a -> linear : 1
starts a linear -> search : 1
linear search of -> the : 1
search of the -> jump : 1
of the jump -> search : 1
the jump search -> we : 1
jump search we -> have : 1
jump search we -> want : 1
array containing and -> we : 1
containing and we -> want : 1
and we want -> to : 2
want to find -> the : 2
of value we -> will : 1
value we will -> set : 1
set the jump -> step : 1
the jump step -> by : 1
the jump step -> where : 1
jump step by -> the : 1
step by the -> square : 1
by the square -> root : 1
the square root -> elements : 1
square root elements -> since : 1
root elements since -> the : 1
elements since the -> element : 1
the element number -> of : 1
element number of -> the : 1
is the step -> will : 1
the step will -> be : 1
step will be -> we : 1
be we will -> now : 1
we will now -> compare : 1
will now compare -> the : 1
now compare the -> value : 1
compare the value -> of : 1
value of index -> and : 1
of index and -> when : 1
index and when -> the : 1
and when the -> algorithm : 1
when the algorithm -> with : 1
the algorithm with -> the : 1
algorithm with the -> value : 1
value of is -> lower : 1
of is lower -> than : 1
searched it then -> jumps : 1
it then jumps -> to : 1
it then jumps -> backward : 1
then jumps to -> and : 1
jumps to and -> compares : 1
jumps to and -> finds : 1
to and compares -> its : 1
and compares its -> value : 1
compares its value -> with : 1
its value with -> since : 1
value with since -> the : 1
with since the -> value : 1
since the value -> is : 1
searched it jumps -> to : 1
it jumps to -> and : 1
to and finds -> that : 2
and finds that -> is : 1
and finds that -> now : 1
finds that is -> greater : 1
greater than it -> then : 1
than it then -> jumps : 1
then jumps backward -> to : 1
jumps backward to -> and : 1
backward to and -> performs : 1
to and performs -> the : 1
and performs the -> linear : 1
performs the linear -> search : 1
linear search and -> to : 1
search and to -> find : 1
and to find -> the : 3
value and get -> the : 1
and get the -> position : 1
and get the -> key : 1
get the position -> of : 1
implementation of jump -> search : 1
of jump search -> in : 1
of jump search -> as : 1
jump search in -> code : 1
search in code -> is : 1
in code is -> as : 1
code is as -> int : 1
int int impossible -> to : 2
int impossible to -> search : 2
impossible to search -> in : 2
to search in -> array : 2
search in array -> contains : 2
in array contains -> zero : 2
array contains zero -> or : 2
contains zero or -> less : 2
zero or less -> if : 2
or less if -> return : 2
less if return -> defining : 1
less if return -> start : 1
if return defining -> step : 1
return defining step -> used : 1
defining step used -> to : 1
step used to -> jump : 1
used to jump -> the : 1
to jump the -> int : 1
jump the int -> step : 1
the int step -> start : 1
int step start -> comparing : 1
step start comparing -> from : 1
start comparing from -> index : 2
comparing from index -> int : 1
comparing from index -> blockindex : 1
from index int -> blockindex : 1
index int blockindex -> increase : 1
int blockindex increase -> the : 1
blockindex increase the -> blockindex : 2
increase the blockindex -> by : 1
increase the blockindex -> if : 1
the blockindex by -> the : 1
blockindex by the -> if : 1
by the if -> blockindex : 1
the if blockindex -> is : 1
if blockindex is -> lower : 2
blockindex is lower -> than : 2
lower than array -> and : 2
than array and -> the : 2
value of element -> in : 3
of element in -> is : 2
of element in -> if : 1
element in is -> still : 2
in is still -> lower : 2
is still lower -> than : 5
still lower than -> searched : 2
still lower than -> the : 1
still lower than -> then : 1
still lower than -> it : 1
lower than searched -> while : 2
than searched while -> arrsize : 2
searched while arrsize -> blockindex : 1
searched while arrsize -> after : 1
while arrsize blockindex -> after : 1
arrsize blockindex after -> find : 1
blockindex after find -> the : 1
after find the -> perform : 1
after find the -> perfom : 1
find the perform -> linear : 1
the perform linear -> search : 1
perform linear search -> to : 1
linear search to -> the : 1
to the sub -> defined : 2
the sub defined -> by : 2
sub defined by -> the : 2
defined by the -> step : 1
defined by the -> blockindex : 1
by the step -> blockindex : 1
the step blockindex -> or : 1
step blockindex or -> return : 1
blockindex or return -> blockindex : 2
or return blockindex -> jump : 1
or return blockindex -> we : 1
return blockindex jump -> search : 1
blockindex jump search -> we : 1
search we want -> to : 1
position of in -> the : 1
in the as -> we : 1
in the as -> the : 1
we did earlier -> in : 1
did earlier in -> this : 1
earlier in this -> we : 1
value using jump -> int : 1
using jump int -> i : 1
jump int i -> notify : 1
int i notify -> user : 2
i notify user -> the : 2
the we decide -> the : 1
we decide the -> jump : 1
decide the jump -> step : 1
jump step where -> is : 1
step where is -> the : 1
is the elements -> we : 1
the elements we -> will : 1
elements we will -> have : 1
complexity of jump -> search : 1
jump search as -> both : 1
search as both -> best : 1
as both best -> and : 1
and worst is -> similar : 1
worst is similar -> to : 1
to a jump -> since : 1
to a jump -> as : 1
a jump since -> divides : 1
jump since divides -> the : 1
since divides the -> input : 1
into several in -> exponential : 1
several in exponential -> the : 1
in exponential the -> step : 1
exponential the step -> we : 1
the step we -> jump : 1
step we jump -> is : 1
we jump is -> increased : 1
jump is increased -> exponentially : 1
is increased exponentially -> in : 1
increased exponentially in -> exponential : 1
exponentially in exponential -> we : 1
in exponential we -> initially : 1
exponential we initially -> compare : 1
we initially compare -> the : 1
initially compare the -> second : 1
compare the second -> index : 1
the second index -> then : 1
second index then -> compare : 1
index then compare -> with : 1
if the is -> still : 1
the is still -> lower : 1
searched we increase -> the : 1
increase the exponentially -> to : 1
the exponentially to -> and : 1
exponentially to and -> so : 1
to and so -> until : 1
and so until -> the : 1
so until the -> is : 1
until the is -> higher : 1
the is higher -> than : 1
higher than the -> searched : 1
searched then we -> can : 1
we can perform -> the : 2
can perform the -> binary : 1
can perform the -> sublist : 1
to the subarray -> defined : 1
the subarray defined -> by : 1
subarray defined by -> exponential : 1
defined by exponential -> search : 1
by exponential search -> use : 1
exponential search use -> the : 1
search use the -> array : 1
use the array -> we : 1
used in jump -> to : 1
in jump to -> perform : 1
jump to perform -> an : 1
to perform an -> exponential : 1
perform an exponential -> and : 1
an exponential and -> we : 1
exponential and we -> will : 1
will also find -> value : 1
also find value -> we : 1
find value we -> then : 1
value we then -> compare : 1
searched since is -> lower : 1
than the algorithm -> is : 1
algorithm is still -> lower : 1
lower than then -> moves : 1
than then moves -> to : 1
then moves to -> and : 1
moves to and -> since : 1
moves to and -> finds : 1
and since its -> value : 1
since its value -> is : 1
value is still -> lower : 1
lower than it -> moves : 1
than it moves -> to : 1
it moves to -> and : 1
finds that now -> greater : 1
that now greater -> than : 1
now greater than -> after : 1
greater than after -> the : 1
greater than after -> we : 1
than after the -> algorithm : 1
after the algorithm -> performs : 1
the algorithm performs -> the : 1
algorithm performs the -> binary : 1
performs the binary -> search : 1
binary search from -> to : 1
search from to -> to : 1
to to find -> the : 1
the searched the -> implementation : 1
the searched the -> second : 1
searched the implementation -> of : 1
of the exponent -> search : 1
the exponent search -> in : 1
exponent search in -> will : 1
search in will -> be : 1
in will be -> as : 1
if return start -> comparing : 1
return start comparing -> from : 1
from index blockindex -> increase : 1
index blockindex increase -> the : 1
the blockindex if -> blockindex : 1
blockindex if blockindex -> is : 1
while arrsize after -> find : 1
arrsize after find -> the : 1
find the perfom -> binary : 1
the perfom binary -> search : 1
perfom binary search -> to : 1
by the blockindex -> or : 1
the blockindex or -> return : 1
return blockindex we -> can : 1
blockindex we can -> see : 1
calculate the step -> as : 1
the step as -> we : 1
step as we -> did : 1
in the jump -> since : 1
the jump since -> the : 1
jump since the -> step : 1
since the step -> is : 1
the step is -> increased : 1
step is increased -> by : 1
is increased by -> exponential : 1
increased by exponential -> the : 1
by exponential the -> invoke : 1
exponential the invoke -> the : 1
the invoke the -> preceding : 1
following function cout -> initialize : 1
following function cout -> cout : 1
following function cout -> input : 1
function cout initialize -> a : 1
value using blockindex -> int : 1
using blockindex int -> i : 1
blockindex int i -> notify : 1
to be displaying -> similar : 1
be displaying similar -> output : 1
displaying similar output -> to : 1
similar output to -> a : 1
output to a -> jump : 1
a jump as -> find : 1
jump as find -> the : 1
as find the -> performance : 1
as find the -> maximum : 1
find the performance -> of : 1
performance of this -> searching : 1
of this searching -> we : 1
of this searching -> algorithm : 1
have to calculate -> all : 1
to calculate all -> processes : 1
calculate all processes -> in : 1
all processes in -> the : 1
processes in the -> which : 1
the which are -> loop : 1
which are loop -> and : 1
are loop and -> a : 1
loop and a -> binary : 1
and a binary -> search : 1
binary search in -> the : 1
the loop the -> algorithm : 1
the loop the -> number : 1
loop the algorithm -> takes : 1
the algorithm takes -> where : 1
algorithm takes where -> is : 1
takes where is -> the : 1
searched the second -> process : 1
the second process -> is : 1
second process is -> the : 1
process is the -> invocation : 1
is the invocation -> of : 1
invocation of binary -> as : 1
of binary as -> we : 1
as we the -> time : 1
we the time -> complexity : 1
search is after -> the : 1
is after the -> loop : 1
after the loop -> the : 1
loop the number -> of : 1
number of array -> elements : 1
of array elements -> are : 1
array elements are -> no : 1
elements are no -> longer : 1
are no longer -> but : 1
no longer but -> the : 1
longer but the -> second : 1
but the second -> time : 1
the second time -> complexity : 1
second time complexity -> will : 1
be as as -> a : 1
as as a -> whole : 1
as as a -> technique : 1
as a whole -> processes : 1
a whole processes -> in : 1
whole processes in -> exponential : 1
processes in exponential -> search : 1
in exponential search -> will : 1
exponential search will -> we : 1
search will we -> can : 1
will we can -> omit : 1
a constant the -> time : 1
constant the time -> complexity : 1
algorithm is where -> is : 1
the searched is -> used : 1
searched is used -> to : 1
used to detect -> a : 1
to detect a -> presence : 1
detect a presence -> of : 1
a presence of -> one : 2
presence of one -> list : 2
of one list -> in : 2
one list in -> another : 2
list in another -> suppose : 1
list in another -> which : 1
in another suppose -> we : 1
another suppose we -> have : 1
have a list -> say : 1
a list say -> the : 1
list say the -> first : 1
list say the -> second : 1
say the first -> and : 1
first and we -> want : 1
want to ensure -> that : 1
that the list -> is : 1
the list is -> present : 1
list is present -> in : 1
is present in -> another : 1
is present in -> the : 1
present in another -> list : 1
in another list -> say : 1
another list say -> the : 1
say the second -> then : 1
the second then -> we : 1
second then we -> can : 1
perform the sublist -> search : 1
perform the sublist -> we : 1
sublist search to -> find : 1
to find for -> the : 1
find for the -> first : 1
first list contains -> these : 1
list contains these -> and : 1
list contains these -> at : 1
contains these and -> the : 1
these and the -> second : 1
these and the -> probability : 1
and the second -> list : 1
the second list -> contains : 1
second list contains -> these : 1
contains these at -> a : 1
these at a -> we : 1
at a we -> see : 1
a we see -> that : 1
that the first -> list : 1
first list presents -> in : 1
list presents in -> the : 1
presents in the -> second : 1
in the second -> sublist : 1
the second sublist -> search : 1
second sublist search -> algorithm : 1
sublist search algorithm -> works : 1
search algorithm works -> by : 1
algorithm works by -> comparing : 1
works by comparing -> the : 1
by comparing the -> first : 1
comparing the first -> element : 1
first list with -> element : 1
first list with -> elements : 1
first list with -> all : 1
list with element -> of : 1
with element of -> the : 1
if the two -> values : 1
the two values -> it : 1
two values it -> goes : 1
values it goes -> to : 1
it goes to -> the : 1
goes to the -> next : 1
to the next -> element : 2
next element of -> the : 4
next element of -> second : 1
second it does -> this : 1
it does this -> until : 1
does this until -> the : 1
this until the -> two : 1
until the two -> then : 1
the two then -> checks : 1
two then checks -> the : 1
then checks the -> succeeding : 1
checks the succeeding -> elements : 1
the succeeding elements -> of : 1
succeeding elements of -> the : 1
list with elements -> of : 1
with elements of -> the : 1
the second if -> all : 1
second if all -> elements : 1
if all elements -> then : 1
all elements then -> it : 1
elements then it -> returns : 1
then it returns -> it : 1
it returns it -> returns : 1
returns it returns -> sublist : 1
it returns sublist -> search : 1
returns sublist search -> design : 1
sublist search design -> the : 1
search design the -> program : 1
design the program -> for : 1
the program for -> this : 1
program for this -> searching : 1
for this searching -> we : 1
searching we are -> going : 1
going to develop -> function : 1
to develop function -> that : 1
develop function that -> will : 1
that will compare -> the : 1
will compare the -> first : 1
will compare the -> character : 1
compare the first -> element : 1
list with all -> elements : 1
with all elements -> of : 1
second the code -> should : 1
be as node -> node : 2
as node node -> if : 1
as node node -> cannot : 1
node if both -> are : 1
if both are -> just : 1
both are just -> return : 1
are just return -> null : 1
just return null -> secondlist : 2
return null secondlist -> return : 1
return null secondlist -> null : 1
null secondlist return -> if : 1
null secondlist return -> compare : 1
secondlist return if -> one : 1
return if one -> is : 1
if one is -> null : 1
one is null -> but : 1
is null but -> the : 1
null but the -> other : 1
but the other -> is : 1
the other is -> just : 1
other is just -> return : 1
null secondlist null -> secondlist : 1
secondlist null secondlist -> return : 1
secondlist return compare -> the : 1
return compare the -> if : 1
compare the if -> not : 1
the if not -> check : 1
if not check -> next : 1
not check next -> element : 1
check next element -> of : 2
element of second -> if : 1
of second if -> if : 1
second if if -> check : 1
if if check -> return : 1
if check return -> check : 1
check return check -> next : 1
return check next -> element : 1
the first return -> we : 1
first return we -> can : 1
the it calls -> itself : 1
it calls itself -> when : 1
calls itself when -> moving : 1
itself when moving -> to : 1
when moving to -> the : 1
moving to the -> next : 1
moving to the -> please : 1
second and when -> it : 1
and when it -> finds : 1
when it finds -> it : 1
it finds it -> performs : 1
finds it performs -> function : 1
it performs function -> to : 1
performs function to -> ensure : 1
function to ensure -> the : 1
ensure the remaining -> second : 1
the remaining second -> list : 1
remaining second list -> elements : 1
second list elements -> match : 1
list elements match -> all : 1
elements match all -> the : 1
match all the -> second : 1
all the second -> the : 1
implementation of will -> be : 1
of will be -> as : 1
of will be -> the : 1
of will be -> please : 1
node node cannot -> be : 1
node cannot be -> since : 1
cannot be since -> it : 1
be since it -> will : 1
will be to -> null : 1
will be to -> and : 1
be to null -> return : 1
to null return -> the : 1
null return the -> end : 1
return the end -> of : 1
first list return -> compare : 1
list return compare -> value : 1
return compare value -> of : 1
compare value of -> each : 1
of each compare -> next : 1
each compare next -> return : 1
compare next return -> return : 1
next return return -> the : 1
preceding we also -> see : 1
we also see -> invokes : 1
also see invokes -> itself : 1
see invokes itself -> to : 1
invokes itself to -> prove : 1
itself to prove -> that : 1
that the next -> element : 1
the two lists -> remains : 1
two lists remains -> the : 1
lists remains the -> this : 1
remains the this -> function : 1
the this function -> will : 1
the this function -> is : 2
the this function -> returns : 4
function will return -> if : 1
return if it -> finds : 1
it finds one -> element : 1
finds one element -> that : 1
one element that -> if : 1
element that if -> it : 1
that if it -> has : 1
if it has -> iterated : 1
if it has -> the : 1
it has iterated -> all : 1
it has iterated -> through : 1
has iterated all -> elements : 1
iterated all elements -> of : 1
the first it -> will : 1
first it will -> return : 1
will return sublist -> search : 1
return sublist search -> perform : 1
sublist search perform -> the : 1
search perform the -> sublist : 1
the sublist we -> can : 1
sublist we can -> invoke : 1
can invoke and -> pass : 1
invoke and pass -> two : 1
and pass two -> the : 1
pass two the -> following : 1
two the following -> function : 1
two the following -> is : 1
following function will -> create : 1
function will create -> two : 1
will create two -> lists : 1
create two lists -> and : 1
two lists and -> invoke : 1
lists and invoke -> cout : 1
and invoke cout -> initialize : 1
invoke cout initialize -> first : 1
cout initialize first -> node : 1
initialize first node -> new : 1
first node new -> node : 1
node new node -> new : 7
node new print -> the : 2
new print the -> first : 1
new print the -> second : 1
print the first -> cout : 1
first cout list -> initialize : 1
cout list initialize -> second : 1
list initialize second -> node : 1
initialize second node -> new : 1
second node new -> node : 1
print the second -> cout : 1
the second cout -> notify : 1
second cout notify -> user : 1
cout notify user -> the : 1
is cout second -> list : 1
cout second list -> is : 1
second list is -> cout : 1
list is cout -> cout : 1
cout cout in -> first : 1
cout in first -> return : 1
in first return -> if : 1
first return if -> we : 1
the we notate -> as : 1
we notate as -> the : 1
notate as the -> number : 1
as the number -> of : 2
number of first -> elements : 1
of first elements -> and : 1
first elements and -> as : 1
elements and as -> the : 1
number of second -> we : 1
of second we -> will : 1
second we will -> have : 1
sublist search as -> since : 1
search as since -> the : 1
as since the -> algorithm : 1
since the algorithm -> will : 1
algorithm will iterate -> through : 1
iterate through each -> element : 1
through each element -> of : 1
element of both -> the : 1
of both the -> first : 1
both the first -> and : 1
and second this -> we : 1
second this we -> discussed : 1
this we discussed -> various : 1
this we discussed -> the : 1
discussed various searching -> from : 1
various searching from -> the : 1
searching from the -> fastest : 1
from the fastest -> searching : 1
the fastest searching -> algorithm : 1
fastest searching algorithm -> to : 1
algorithm to the -> to : 1
to the to -> get : 1
the to get -> a : 1
to get a -> faster : 1
to get a -> minimum : 1
to get a -> hash : 1
get a faster -> searching : 1
a faster searching -> we : 1
faster searching we -> can : 1
searching we can -> use : 1
use the interpolation -> search : 1
interpolation search with -> since : 1
search with since -> it : 1
with since it -> can : 1
with since it -> has : 1
it can find -> the : 1
find the nearest -> middle : 1
the nearest middle -> index : 1
nearest middle index -> from : 1
middle index from -> a : 1
index from a -> searched : 1
from a searched -> the : 1
a searched the -> others : 1
searched the others -> are : 1
the others are -> binary : 1
others are binary -> search : 1
are binary search -> with : 1
binary search with -> and : 1
search with and -> exponential : 1
with and exponential -> search : 1
and exponential search -> with : 1
and exponential search -> which : 1
and exponential search -> we : 1
exponential search with -> where : 1
search with where -> is : 1
with where is -> the : 1
index of searched -> the : 1
of searched the -> moderate : 1
searched the moderate -> searching : 1
the moderate searching -> algorithm : 1
moderate searching algorithm -> is : 1
is a jump -> which : 1
a jump which -> has : 1
jump which has -> and : 1
which has and -> the : 1
has and the -> slowest : 1
and the slowest -> algorithm : 1
the slowest algorithm -> is : 1
slowest algorithm is -> a : 1
is a linear -> algorithm : 1
a linear algorithm -> with : 1
linear algorithm with -> since : 1
algorithm with since -> it : 1
has to check -> all : 1
to check all -> list : 1
check all list -> contrary : 1
all list contrary -> to : 1
list contrary to -> other : 1
contrary to other -> searching : 1
to other searching -> algorithms : 1
other searching algorithms -> we : 1
in this linear -> also : 1
this linear also -> be : 1
linear also be -> applied : 1
applied to an -> unsorted : 1
to an unsorted -> the : 1
an unsorted the -> next : 1
unsorted the next -> we : 1
to discuss several -> common : 1
discuss several common -> algorithms : 1
several common algorithms -> that : 1
common algorithms that -> are : 1
that are frequently -> used : 1
are frequently used -> in : 1
frequently used in -> data : 1
used in data -> type : 1
type to gain -> the : 1
to gain the -> best : 1
gain the best -> is : 1
the best is -> the : 1
best is the -> simplest : 1
the simplest search -> does : 1
simplest search does -> linear : 1
search does linear -> search : 1
does linear search -> algorithm : 1
linear search algorithm -> is : 1
linear search algorithm -> with : 1
algorithm is search -> algorithm : 1
is search algorithm -> or : 1
search algorithm or -> ternary : 1
algorithm or ternary -> search : 1
or ternary search -> does : 1
ternary search does -> interpolation : 1
search does interpolation -> search : 1
does interpolation search -> algorithm : 1
interpolation search algorithm -> become : 1
search algorithm become -> an : 1
algorithm become an -> improvement : 1
become an improvement -> of : 1
to choose between -> binary : 1
choose between binary -> search : 1
between binary search -> algorithm : 1
search algorithm and -> exponential : 2
algorithm and exponential -> search : 2
exponential search which -> should : 1
search which should -> we : 1
which should we -> pick : 1
should we pick -> to : 1
we pick to -> get : 1
pick to get -> the : 1
get the fastest -> execution : 1
the fastest execution -> time : 1
fastest execution time -> is : 1
execution time is -> a : 1
time is a -> similarity : 1
is a similarity -> between : 1
similarity between jump -> search : 1
between jump search -> algorithm : 1
jump search algorithm -> and : 1
exponential search we -> need : 1
search we need -> a : 1
need a presence -> of : 1
in another which -> search : 1
another which search -> algorithm : 1
which search algorithm -> should : 1
search algorithm should -> we : 1
algorithm should we -> further : 1
should we further -> you : 1
we further you -> can : 1
further you can -> refer : 1
the following with -> the : 1
following with the -> string : 1
string data the -> previous : 1
previous we have -> discussed : 1
have discussed several -> simple : 1
discussed several simple -> data : 1
several simple data -> such : 1
simple data such -> as : 1
linked and starting -> from : 1
and starting from -> this : 1
starting from this -> we : 1
from this we -> are : 1
discuss data this -> chapter : 1
data this chapter -> will : 1
this chapter will -> discuss : 1
chapter will discuss -> the : 1
will discuss the -> data : 1
will discuss the -> predecessor : 1
discuss the data -> including : 1
the data including -> how : 1
data including how -> to : 1
including how to -> and : 1
to and solve -> several : 2
and solve several -> problems : 2
solve several problems -> in : 3
several problems in -> the : 3
problems in the -> data : 3
data the following -> are : 1
data the following -> is : 1
following are topics -> that : 1
are topics that -> will : 1
topics that will -> be : 1
will be discussed -> in : 1
be discussed in -> this : 1
this the data -> type : 1
type in out -> whether : 1
string is an -> anagram : 1
is an anagram -> or : 1
is an anagram -> of : 1
an anagram or -> a : 1
an anagram or -> not : 1
anagram or a -> sequence : 1
or a sequence -> of : 1
sequence of binary -> digits : 1
of binary digits -> as : 1
binary digits as -> binary : 1
digits as binary -> a : 1
as binary a -> subsequence : 1
binary a subsequence -> of : 1
subsequence of a -> a : 1
subsequence of a -> as : 1
subsequence of a -> string : 1
of a a -> pattern : 1
of a a -> the : 1
a a pattern -> in : 1
a pattern in -> a : 1
pattern in a -> follow : 1
pattern in a -> we : 1
in a follow -> along : 1
a follow along -> with : 2
on github in -> is : 1
github in is -> a : 1
in is a -> data : 1
type that stores -> a : 1
that stores a -> collection : 1
stores a collection -> of : 1
collection of this -> collection : 1
of this collection -> can : 1
this collection can -> form : 1
collection can form -> a : 1
can form a -> word : 1
form a word -> or : 1
a word or -> some : 1
a word or -> a : 1
word or some -> information : 1
or some information -> that : 1
some information that -> can : 1
information that can -> be : 1
can be understood -> by : 1
be understood by -> it : 1
understood by it -> can : 1
by it can -> also : 1
it can also -> form : 1
can also form -> a : 1
also form a -> sentence : 1
form a sentence -> from : 1
a sentence from -> several : 1
sentence from several -> in : 1
from several in -> this : 1
several in this -> we : 1
to discuss how -> to : 3
to construct and -> use : 1
to construct and -> implement : 1
construct and use -> the : 1
and use the -> data : 1
type in a -> string : 1
using character a -> string : 1
character a string -> can : 1
a string can -> be : 1
string can be -> composed : 1
can be composed -> by : 1
be composed by -> using : 1
composed by using -> an : 1
using an array -> of : 1
array of when -> we : 1
of when we -> compose : 1
when we compose -> a : 1
we compose a -> string : 1
compose a string -> using : 1
string using an -> we : 1
an we have -> to : 1
an we have -> a : 1
have to reserve -> a : 1
to reserve a -> space : 1
reserve a space -> to : 1
a space to -> store : 1
space to store -> a : 1
store a character -> at : 1
a character at -> the : 2
character at the -> last : 1
character at the -> end : 1
at the last -> element : 1
at the last -> i : 1
last element to -> indicate : 1
element to indicate -> the : 1
a variable containing -> a : 1
variable containing a -> name : 1
containing a name -> of : 1
a name of -> a : 1
name of a -> person : 1
of a person -> called : 1
a person called -> we : 1
person called we -> need : 1
called we need -> an : 1
we need an -> array : 2
need an array -> with : 2
array with at -> least : 2
with at least -> six : 2
at least six -> since : 1
at least six -> elements : 1
at least six -> to : 1
least six since -> is : 1
six since is -> composed : 1
since is composed -> of : 1
is composed of -> five : 1
composed of five -> please : 1
of five please -> take : 1
five please take -> a : 1
least six elements -> to : 1
six elements to -> store : 1
elements to store -> a : 1
store a string -> containing : 1
a string containing -> five : 1
a string containing -> letters : 1
string containing five -> there : 1
containing five there -> are : 1
five there are -> several : 1
there are several -> ways : 1
there are several -> implementations : 1
there are several -> data : 1
are several ways -> to : 1
several ways to -> create : 1
create a string -> using : 1
create a string -> variable : 1
using character these -> are : 1
character these are -> some : 1
these are some -> of : 1
are some of -> the : 1
some of the -> preceding : 2
some of the -> standard : 1
the preceding pieces -> of : 1
preceding pieces of -> the : 1
pieces of the -> first : 1
the first line -> and : 1
first line and -> second : 1
line and second -> line : 1
and second line -> are : 1
second line are -> used : 1
line are used -> to : 1
used to construct -> arrays : 1
used to construct -> a : 1
to construct arrays -> that : 1
construct arrays that -> set : 1
arrays that set -> their : 1
that set their -> length : 1
set their length -> automatically : 1
their length automatically -> based : 1
length automatically based -> on : 1
automatically based on -> initial : 1
based on initial -> in : 1
on initial in -> the : 1
initial in the -> third : 1
in the third -> and : 1
the third and -> fourth : 1
third and fourth -> we : 1
and fourth we -> specify : 1
fourth we specify -> the : 1
we specify the -> length : 1
specify the length -> of : 1
can choose any -> one : 1
choose any one -> of : 1
any one of -> the : 1
one of the -> four : 1
of the four -> preceding : 1
the four preceding -> lines : 1
four preceding lines -> of : 1
preceding lines of -> code : 1
of code to -> create : 1
code to create -> a : 1
a string variable -> named : 1
string variable named -> containing : 1
variable named containing -> as : 1
named containing as -> its : 1
containing as its -> problem : 1
as its problem -> comes : 1
its problem comes -> when : 1
problem comes when -> we : 1
comes when we -> need : 1
need to modify -> the : 2
need to modify -> our : 1
need to modify -> class : 1
to modify the -> string : 1
to modify the -> for : 1
modify the string -> by : 1
the string by -> adding : 1
string by adding -> one : 1
by adding one -> for : 1
adding one for -> the : 1
one for the -> array : 1
for the array -> cannot : 1
the array cannot -> be : 1
array cannot be -> we : 1
cannot be we -> have : 1
have to create -> another : 1
create another array -> with : 1
another array with -> our : 1
array with our -> desired : 1
with our desired -> then : 1
our desired then -> copy : 1
desired then copy -> the : 1
then copy the -> old : 1
copy the old -> array : 1
the old array -> into : 1
old array into -> the : 1
into the new -> to : 1
into the new -> element : 1
new to solve -> the : 1
solve the we -> can : 1
can use class -> provided : 1
use class provided -> by : 1
class provided by -> which : 1
provided by which -> we : 1
by which we -> will : 1
discuss in the -> next : 1
discuss in the -> upcoming : 1
the next for -> more : 1
next for more -> flexibility : 1
more flexibility is -> data : 1
flexibility is data -> type : 1
is data type -> in : 1
in the standard -> template : 1
standard template we -> can : 1
template we can -> use : 1
can use it -> to : 1
use it to -> replace : 1
it to replace -> characters : 1
to replace characters -> in : 1
replace characters in -> an : 1
characters in an -> since : 1
in an since -> it : 1
an since it -> has : 1
has more flexibility -> the : 1
more flexibility the -> biggest : 1
flexibility the biggest -> advantage : 1
the biggest advantage -> to : 1
biggest advantage to -> using : 1
advantage to using -> this : 1
to using this -> data : 1
using this data -> type : 1
using this data -> the : 1
instead of a -> characters : 1
of a characters -> array : 1
a characters array -> is : 1
characters array is -> that : 1
array is that -> the : 1
that the can -> be : 1
the can be -> extended : 1
can be extended -> dynamically : 1
be extended dynamically -> in : 1
extended dynamically in -> other : 1
dynamically in other -> functionalities : 1
in other functionalities -> that : 1
other functionalities that -> it : 1
functionalities that it -> has : 1
it has are -> as : 1
has are as -> this : 1
are as this -> function : 1
as this function -> is : 1
used to get -> input : 1
to get input -> from : 1
get input from -> the : 1
input from the -> user : 1
and then store -> it : 1
then store it -> to : 1
store it to -> a : 1
it to a -> character : 1
it to a -> decimal : 1
to a character -> stream : 1
a character stream -> in : 1
character stream in -> this : 1
stream in this -> function : 1
in this function -> is : 1
used to insert -> a : 3
used to insert -> several : 1
insert a character -> at : 1
at the end -> of : 2
used to remove -> the : 1
used to remove -> a : 1
the last character -> from : 1
the last character -> of : 5
the last character -> to : 1
last character from -> the : 1
character from the -> this : 1
from the this -> function : 1
used to retrieve -> of : 1
to retrieve of -> character : 1
retrieve of character -> in : 1
of character in -> the : 1
of character in -> characters : 1
character in the -> this : 1
this function returns -> an : 2
this function returns -> a : 2
function returns an -> iterator : 2
returns an iterator -> pointing : 2
an iterator pointing -> to : 2
iterator pointing to -> the : 3
pointing to the -> first : 1
pointing to the -> last : 2
the first character -> of : 1
first character of -> the : 1
character of the -> this : 3
character of the -> will : 1
character of the -> string : 2
character of the -> suspected : 1
character of the -> the : 1
last character of -> the : 5
function returns a -> reverse : 2
returns a reverse -> iterator : 2
a reverse iterator -> pointing : 2
reverse iterator pointing -> to : 1
reverse iterator pointing -> at : 1
iterator pointing at -> character : 1
pointing at character -> of : 1
at character of -> the : 1
the will use -> some : 1
will use some -> of : 1
use some of -> the : 1
the preceding functions -> in : 1
preceding functions in -> a : 1
functions in a -> discussion : 1
in a discussion -> later : 1
a discussion later -> on : 1
discussion later on -> in : 1
later on in -> this : 1
on in this -> with : 1
in this with -> collection : 1
in this with -> we : 1
this with collection -> of : 1
with collection of -> characters : 1
collection of characters -> is : 1
of characters is -> used : 1
characters is used -> to : 1
construct a word -> or : 1
word or a -> the : 1
or a the -> position : 1
a the position -> of : 1
of each character -> in : 1
each character in -> a : 1
character in a -> word : 1
in a word -> since : 1
in a word -> processor : 1
a word since -> different : 1
word since different -> character : 1
since different character -> positions : 1
different character positions -> can : 1
character positions can -> cause : 1
positions can cause -> the : 1
can cause the -> word : 1
cause the word -> to : 1
the word to -> have : 1
word to have -> different : 1
to have different -> for : 1
have different for -> when : 1
different for when -> you : 1
for when you -> rearrange : 1
when you rearrange -> the : 1
you rearrange the -> characters : 1
rearrange the characters -> in : 1
the characters in -> you : 1
characters in you -> will : 1
in you will -> get : 1
you will get -> are : 1
will get are -> two : 1
get are two -> methods : 1
are two methods -> in : 1
two methods in -> strings : 1
methods in strings -> to : 1
in strings to -> find : 1
strings to find -> another : 1
to find another -> word : 1
to find another -> possible : 2
find another word -> from : 1
another word from -> a : 1
word from a -> or : 1
from a or -> to : 1
a or to -> ensure : 1
a or to -> is : 1
or to ensure -> a : 1
to ensure a -> word : 1
to ensure a -> collision : 1
ensure a word -> has : 1
a word has -> exactly : 1
word has exactly -> the : 1
has exactly the -> same : 1
exactly the same -> spelling : 1
exactly the same -> elements : 1
exactly the same -> as : 2
exactly the same -> with : 1
the same spelling -> both : 1
same spelling both -> forward : 3
spelling both forward -> and : 3
both forward and -> play : 1
both forward and -> and : 1
both forward and -> we : 1
forward and play -> with : 1
and play with -> a : 1
play with a -> word : 1
create an is -> a : 1
is a word -> that : 1
a word that -> is : 1
word that is -> produced : 1
that is produced -> by : 1
is produced by -> rearranging : 1
produced by rearranging -> the : 1
by rearranging the -> letters : 1
rearranging the letters -> of : 1
the letters of -> the : 1
letters of the -> word : 1
of the word -> take : 1
of the word -> we : 1
the word take -> a : 1
word take a -> look : 1
at the word -> we : 1
the word we -> can : 2
word we can -> say : 1
word we can -> use : 1
say that is -> anagram : 1
that is anagram -> of : 1
is anagram of -> since : 1
anagram of since -> uses : 1
of since uses -> all : 1
since uses all -> the : 1
uses all the -> original : 1
all the original -> letters : 1
the original letters -> of : 1
original letters of -> exactly : 1
letters of exactly -> not : 1
of exactly not -> only : 1
exactly not only -> from : 1
not only from -> one : 1
from one an -> anagram : 1
one an anagram -> can : 1
an anagram can -> also : 1
anagram can also -> be : 1
also be created -> and : 1
be created and -> can : 1
created and can -> two : 1
and can two -> or : 1
can two or -> more : 1
two or more -> is : 1
or more is -> an : 1
more is an -> anagram : 1
an anagram of -> or : 1
an anagram of -> whether : 1
anagram of or -> of : 1
of or of -> an : 1
or of an -> anagram : 1
of an anagram -> of : 1
anagram of whether -> two : 1
of whether two -> strings : 1
whether two strings -> are : 1
two strings are -> an : 1
two strings are -> continue : 1
strings are an -> anagram : 1
are an anagram -> or : 1
are an anagram -> if : 1
anagram or not -> is : 1
or not is -> quite : 1
not is quite -> we : 1
sort the two -> and : 1
the two and -> compare : 1
two and compare -> the : 1
compare the sorted -> they : 1
the sorted they -> are : 1
sorted they are -> an : 1
they are an -> anagram : 1
they are an -> invoking : 1
an anagram if -> both : 1
anagram if both -> sorted : 1
if both sorted -> strings : 1
both sorted strings -> are : 1
sorted strings are -> exactly : 1
strings are exactly -> the : 1
are exactly the -> take : 1
exactly the take -> a : 1
the following string -> string : 1
following string string -> anagram : 1
string string anagram -> is : 1
string anagram is -> not : 1
anagram is not -> case : 2
is not case -> so : 2
is not case -> we : 1
not case so -> we : 2
case so we -> convert : 2
so we convert -> all : 2
we convert all -> to : 2
convert all to -> anagram : 1
convert all to -> palindrome : 1
all to anagram -> does : 1
to anagram does -> not : 1
anagram does not -> care : 1
does not care -> about : 2
not care about -> so : 2
care about so -> we : 2
about so we -> remove : 2
so we remove -> all : 2
we remove all -> spaces : 2
remove all spaces -> if : 2
remove all spaces -> in : 1
all spaces if -> we : 1
all spaces if -> palindrome : 1
spaces if we -> sort : 1
if we sort -> and : 1
we sort and -> if : 1
sort and if -> they : 1
and if they -> both : 1
if they both -> are : 1
they both are -> they : 1
both are they -> will : 1
are they will -> be : 1
will be exactly -> same : 1
be exactly same -> after : 1
exactly same after -> return : 1
same after return -> we : 1
after return we -> can : 1
the preceding beside -> sorting : 1
preceding beside sorting -> the : 1
beside sorting the -> two : 1
sorting the two -> we : 1
the two we -> transform : 1
the two we -> can : 1
two we transform -> the : 1
we transform the -> strings : 1
transform the strings -> into : 1
the strings into -> since : 1
strings into since -> anagram : 1
into since anagram -> is : 1
since anagram is -> not : 1
not case we -> also : 1
case we also -> remove : 1
we also remove -> all : 1
also remove all -> spaces : 1
all spaces in -> the : 1
spaces in the -> since : 1
the since space -> matter : 1
since space matter -> in : 1
space matter in -> an : 1
matter in an -> after : 1
in an after -> we : 1
an after we -> have : 1
we have sorted -> the : 1
have sorted the -> two : 1
sorted the two -> we : 1
we can just -> compare : 1
can just compare -> them : 1
just compare them -> to : 1
compare them to -> determine : 1
them to determine -> if : 1
to determine if -> they : 1
determine if they -> are : 1
are an invoking -> we : 1
an invoking we -> need : 1
invoking we need -> to : 1
to pass two -> strings : 1
pass two strings -> as : 1
two strings as -> the : 1
strings as the -> in : 1
as the in -> the : 2
following we ask -> the : 1
we ask the -> user : 1
ask the user -> to : 2
input the string -> using : 1
the string using -> function : 1
string using function -> before : 1
using function before -> invoking : 1
function before invoking -> the : 1
invoking the implementation -> of : 1
implementation of function -> should : 1
of function should -> be : 1
function should be -> as : 1
be as cout -> input : 1
as cout input -> string : 1
cout input string -> cout : 3
input string cout -> string : 4
string cout string -> input : 2
string cout string -> check : 3
string cout string -> generate : 1
cout string input -> string : 1
cout string input -> second : 1
string input string -> cout : 1
cout string check -> if : 3
string check if -> they : 1
string check if -> it : 1
string check if -> is : 1
check if they -> are : 1
they are cout -> and : 1
are cout and -> cout : 1
cout and cout -> are : 1
and cout are -> cout : 1
cout are cout -> cout : 1
are cout cout -> cout : 1
cout return preceding -> code : 5
return preceding code -> can : 6
code can be -> found : 8
can be found -> in : 8
can be found -> as : 1
can be found -> by : 1
can be found -> if : 1
found in if -> we : 6
found in if -> return : 2
in if we -> build : 8
the the preceding -> we : 2
the the preceding -> bst : 1
see that and -> we : 1
that and we -> have : 1
have a result -> that : 1
a result that -> of : 1
result that of -> and : 1
that of and -> are : 1
of and are -> an : 1
and are an -> time : 1
are an time -> complexity : 1
an time complexity -> of : 1
an time complexity -> for : 2
an time complexity -> if : 1
an time complexity -> in : 1
will be log -> where : 1
be log where -> is : 1
log where is -> the : 2
is the total -> characters : 1
is the total -> keys : 1
is the total -> number : 5
the total characters -> on : 1
total characters on -> the : 1
characters on the -> one : 1
on the one -> since : 1
the one since -> we : 1
one since we -> use : 1
since we use -> to : 1
use to sort -> the : 1
sort the is -> doing : 1
the is doing -> comparison : 1
is doing comparison -> similar : 1
doing comparison similar -> to : 1
comparison similar to -> quick : 1
similar to quick -> whether : 1
to quick whether -> a : 1
quick whether a -> word : 1
is a is -> a : 1
a is a -> or : 1
a is a -> simple : 1
is a or -> sequence : 1
a or sequence -> of : 1
or sequence of -> that : 1
sequence of that -> has : 1
of that has -> the : 1
that has the -> exact : 1
has the exact -> same : 2
exact same spelling -> both : 2
forward and and -> are : 1
and and are -> some : 1
and are some -> examples : 1
are some examples -> of : 1
some examples of -> the : 1
examples of the -> similar : 1
of the similar -> to : 1
the similar to -> the : 1
the similar to -> if : 1
the similar to -> operation : 1
can also construct -> a : 1
also construct a -> palindrome : 1
construct a palindrome -> from : 1
a palindrome from -> more : 1
palindrome from more -> than : 1
from more than -> one : 1
more than one -> for : 1
than one for -> nut : 1
one for nut -> for : 1
for nut for -> a : 1
nut for a -> jar : 1
for a jar -> of : 1
a jar of -> or : 1
jar of or -> lemon : 1
of or lemon -> no : 1
or lemon no -> check : 1
lemon no check -> if : 1
no check if -> a : 1
check if a -> string : 3
if a string -> is : 3
if a string -> satisfies : 1
string is we -> have : 1
have to compare -> each : 1
have to compare -> it : 1
to compare each -> pair : 2
compare each pair -> of : 2
pair of left -> character : 1
of left character -> and : 1
left character and -> right : 1
character and right -> starting : 1
and right starting -> from : 1
right starting from -> the : 1
from the most -> left : 1
the most left -> and : 1
most left and -> the : 1
and the most -> right : 1
the most right -> then : 1
most right then -> moving : 1
right then moving -> to : 1
then moving to -> the : 1
to the please -> see : 1
the please see -> the : 1
following the word -> as : 1
the word as -> we : 1
word as we -> can : 1
need to check -> the : 3
need to check -> if : 3
need to check -> whether : 1
check the character -> at : 1
the character at -> index : 1
character at index -> with : 1
at index with -> with : 1
index with with -> and : 1
with and with -> since : 1
and with since -> all : 1
with since all -> comparisons : 1
since all comparisons -> are : 1
all comparisons are -> the : 1
comparisons are the -> string : 1
are the string -> is : 1
the string is -> a : 2
the string is -> not : 1
is a we -> can : 1
we can do -> it : 1
we can do -> the : 1
can do it -> by : 1
do it by -> iterating : 1
it by iterating -> string : 1
by iterating string -> the : 1
iterating string the -> iteration : 1
string the iteration -> will : 1
the iteration will -> break : 1
iteration will break -> if : 1
will break if -> it : 1
break if it -> finds : 1
it finds unmatched -> pair : 1
finds unmatched pair -> or : 1
unmatched pair or -> it : 1
pair or it -> has : 1
or it has -> iterated : 1
has iterated through -> the : 1
iterated through the -> code : 1
through the code -> to : 1
to check a -> palindrome : 1
check a palindrome -> is : 1
a palindrome is -> as : 1
palindrome is as -> string : 1
is as string -> palindrome : 1
is as string -> if : 1
as string palindrome -> is : 1
string palindrome is -> not : 1
palindrome is not -> case : 1
all to palindrome -> does : 1
to palindrome does -> not : 1
palindrome does not -> care : 1
spaces if palindrome -> detector : 1
if palindrome detector -> starting : 1
palindrome detector starting -> from : 1
detector starting from -> leftmost : 1
starting from leftmost -> and : 1
from leftmost and -> rightmost : 1
leftmost and rightmost -> of : 1
and rightmost of -> the : 1
rightmost of the -> int : 1
of the int -> left : 1
the int left -> int : 1
int left int -> right : 1
left int right -> comparing : 1
int right comparing -> the : 1
right comparing the -> current : 1
comparing the current -> and : 1
the current and -> rightmost : 1
current and rightmost -> until : 1
and rightmost until -> all : 1
rightmost until all -> elements : 1
until all elements -> are : 1
all elements are -> checked : 1
all elements are -> stored : 1
elements are checked -> until : 1
are checked until -> unmatched : 1
checked until unmatched -> characters : 1
until unmatched characters -> are : 1
unmatched characters are -> return : 1
characters are return -> if : 1
are return if -> all : 1
return if all -> characters : 1
if all characters -> which : 1
if all characters -> in : 1
if all characters -> of : 3
all characters which -> are : 1
characters which are -> are : 1
which are are -> it : 1
are are it -> must : 1
are it must -> be : 1
must be return -> end : 1
be return end -> of : 1
return end of -> palindrome : 1
end of palindrome -> detector : 2
of palindrome detector -> to : 1
of palindrome detector -> with : 1
palindrome detector to -> the : 1
detector to the -> preceding : 1
to the preceding -> implementation : 1
to the preceding -> to : 1
to the preceding -> we : 1
the preceding implementation -> also : 1
preceding implementation also -> converts : 1
implementation also converts -> all : 1
also converts all -> characters : 1
converts all characters -> to : 1
all characters to -> uppercase : 1
characters to uppercase -> and : 1
to uppercase and -> removes : 1
uppercase and removes -> after : 1
and removes after -> it : 1
removes after it -> runs : 1
after it runs -> loop : 1
it runs loop -> procedure : 1
runs loop procedure -> and : 1
loop procedure and -> compares : 1
procedure and compares -> each : 1
and compares each -> pair : 1
compares each pair -> of : 1
pair of if -> it : 1
of if it -> successfully : 1
if it successfully -> iterates : 1
it successfully iterates -> through : 1
successfully iterates through -> all : 1
iterates through all -> string : 1
through all string -> we : 1
through all string -> then : 1
through all string -> the : 1
all string we -> can : 1
string we can -> say : 1
string we can -> replace : 1
that the string -> is : 1
is a it -> will : 1
a it will -> return : 1
a it will -> convert : 1
will return and -> it : 1
return and it -> means : 1
and it means -> the : 1
it means the -> string : 1
means the string -> is : 1
string is not -> a : 1
string is not -> longer : 1
not a ease -> our : 1
a ease our -> understanding : 1
ease our understanding -> of : 1
our understanding of -> the : 1
of the flow -> of : 1
flow of we -> will : 1
of we will -> use : 2
will use loop -> the : 1
use loop the -> stl : 1
loop the stl -> has : 1
the stl has -> provided : 1
stl has provided -> functionality : 1
has provided functionality -> to : 1
provided functionality to -> compare : 1
functionality to compare -> each : 1
pair of string -> we : 1
of string we -> can : 1
we can replace -> the : 2
can replace the -> preceding : 1
can replace the -> target : 1
replace the preceding -> from : 1
the preceding from -> palindrome : 1
preceding from palindrome -> detector : 1
from palindrome detector -> end : 1
palindrome detector end -> of : 1
detector end of -> palindrome : 1
palindrome detector with -> the : 1
detector with the -> following : 1
the following single -> line : 1
following single line -> of : 1
single line of -> check : 1
line of check -> whether : 1
of check whether -> a : 1
check whether a -> string : 1
check whether a -> given : 1
check whether a -> hash : 1
is a palindrome -> or : 1
a palindrome or -> we : 1
palindrome or we -> need : 1
or we need -> to : 1
need to invoke -> function : 1
to invoke function -> and : 1
invoke function and -> pass : 1
function and pass -> a : 1
and pass a -> string : 1
pass a string -> to : 1
a string to -> we : 1
a string to -> create : 1
string to we -> can : 1
we can ask -> the : 1
can ask the -> user : 1
to input a -> string : 1
input a string -> by : 1
a string by -> using : 1
string by using -> as : 1
by using as -> we : 2
the cout input -> string : 1
check if it -> is : 1
if it is -> cout : 1
if it is -> a : 1
it is cout -> str : 1
is cout str -> is : 1
cout str is -> cout : 1
str is cout -> cout : 1
cout cout a -> cout : 1
cout a cout -> return : 1
cout return can -> find : 1
return can find -> the : 1
find the following -> code : 1
following code in -> if : 1
code in if -> we : 1
to iterate string -> elements : 1
iterate string elements -> so : 1
string elements so -> the : 1
elements so the -> time : 1
complexity is and -> since : 1
can omit we -> can : 1
omit we can -> say : 1
of function is -> a : 1
of function is -> log : 1
of function is -> where : 1
is a string -> from : 1
is a string -> that : 1
is a string -> derived : 1
from binary is -> a : 1
binary is a -> string : 2
binary is a -> subsequence : 1
a string that -> represents : 1
string that represents -> a : 1
that represents a -> number : 1
represents a number -> in : 1
a number in -> binary : 1
number in binary -> format : 1
in binary format -> and : 1
binary format and -> only : 1
format and only -> contains : 1
and only contains -> and : 1
only contains and -> supposing : 1
contains and supposing -> we : 1
and supposing we -> have : 1
supposing we have -> a : 1
have a number -> the : 1
a number the -> binary : 1
number the binary -> string : 1
the binary string -> will : 1
the binary string -> of : 2
binary string will -> be : 1
string will be -> or : 1
string will be -> which : 1
string will be -> returned : 1
or the binary -> string : 1
binary string of -> is : 2
string of is -> string : 1
string of is -> we : 1
of is string -> is : 1
is string is -> usually : 1
string is usually -> used : 1
usually used to -> hold : 1
usually used to -> store : 1
usually used to -> implement : 1
used to hold -> such : 1
to hold such -> as : 1
hold such as -> suppose : 1
such as suppose -> we : 1
as suppose we -> have : 1
the following black -> and : 1
following black and -> white : 1
black and white -> black : 1
and white black -> is : 1
white black is -> represented : 1
black is represented -> by : 1
is represented by -> and : 1
is represented by -> we : 1
represented by and -> white : 1
by and white -> is : 1
and white is -> represented : 1
white is represented -> by : 1
represented by we -> can : 1
by we can -> create : 1
the following binary -> string : 1
the following binary -> the : 1
the following binary -> tree : 1
following binary string -> to : 1
string to represent -> the : 1
represent the preceding -> decimal : 1
the preceding decimal -> to : 1
preceding decimal to -> binary : 1
to binary we -> have : 1
binary we have -> discussed : 1
the previous the -> binary : 1
previous the binary -> string : 1
of is we -> can : 1
we can convert -> a : 1
can convert a -> decimal : 1
convert a decimal -> number : 3
a decimal number -> into : 1
a decimal number -> to : 2
a decimal number -> cin : 1
decimal number into -> a : 1
number into a -> binary : 1
number into a -> small : 1
into a binary -> digit : 1
a binary digit -> by : 1
a binary digit -> of : 1
binary digit by -> dividing : 1
digit by dividing -> the : 1
dividing the number -> by : 1
the number by -> until : 1
number by until -> it : 1
by until it -> cannot : 1
until it cannot -> be : 1
divided any and -> collect : 1
any and collect -> the : 1
and collect the -> remainder : 1
collect the remainder -> of : 1
the remainder of -> each : 2
remainder of each -> the : 1
remainder of each -> and : 1
of each the -> steps : 1
each the steps -> to : 1
steps to convert -> into : 1
steps to convert -> to : 1
to convert into -> binary : 1
convert into binary -> is : 1
into binary is -> divided : 1
binary is divided -> by : 2
is divided by -> is : 13
divided by is -> remainder : 13
by is remainder -> is : 13
is remainder is -> is : 3
is remainder is -> at : 1
is remainder is -> divided : 8
is remainder is -> our : 1
remainder is is -> divided : 3
is is divided -> by : 3
remainder is at -> the : 1
at the remainder -> of : 1
of each and -> read : 1
each and read -> it : 1
and read it -> from : 1
read it from -> the : 1
from the bottom -> to : 1
the bottom to -> the : 1
bottom to the -> so : 1
the so why -> we : 1
so why we -> have : 1
why we have -> as : 1
we have as -> a : 1
we have as -> it : 1
have as a -> binary : 1
as a binary -> digit : 1
binary digit of -> try : 1
binary digit of -> is : 1
digit of try -> another : 1
of try another -> larger : 1
try another larger -> which : 1
another larger which -> is : 1
larger which is -> here : 1
which is here -> are : 1
is here are -> the : 1
to convert to -> binary : 1
convert to binary -> is : 1
convert to binary -> string : 1
to binary is -> divided : 1
remainder is divided -> by : 8
remainder is our -> preceding : 1
is our preceding -> we : 1
that the binary -> digit : 1
the binary digit -> of : 1
the binary digit -> with : 1
digit of is -> since : 1
of is since -> we : 1
have to read -> the : 1
to read the -> remainder : 1
read the remainder -> from : 1
the remainder from -> bottom : 1
remainder from bottom -> to : 1
from bottom to -> time : 1
bottom to time -> to : 1
to time to -> write : 1
time to write -> a : 1
write a code -> to : 3
code to convert -> a : 2
code to convert -> binary : 1
to convert a -> decimal : 1
to convert a -> binary : 1
to convert a -> given : 1
decimal number to -> a : 1
decimal number to -> binary : 1
number to a -> binary : 1
a binary we -> will : 1
binary we will -> use : 1
will use and -> it : 1
use and it -> will : 1
it will last -> if : 1
it will last -> for : 1
will last if -> the : 1
last if the -> division : 1
if the division -> result : 1
the division result -> is : 1
division result is -> more : 1
result is more -> than : 1
is more than -> the : 1
more than the -> code : 1
than the code -> should : 1
as int initial -> string : 1
int initial string -> binarystring : 1
initial string binarystring -> only : 1
string binarystring only -> perform : 1
binarystring only perform -> this : 1
only perform this -> if : 1
perform this if -> decimalnumber : 1
this if decimalnumber -> is : 1
if decimalnumber is -> greater : 1
decimalnumber is greater -> than : 1
greater than reset -> binarystring : 1
than reset binarystring -> declare : 1
reset binarystring declare -> a : 1
binarystring declare a -> variable : 1
declare a variable -> for : 1
a variable for -> division : 1
variable for division -> initialize : 1
for division initialize -> the : 1
division initialize the -> division : 1
initialize the division -> perform : 1
the division perform -> these : 1
division perform these -> until : 1
perform these until -> the : 1
these until the -> quot : 1
until the quot -> is : 1
the quot is -> dv : 1
quot is dv -> binarystring : 1
is dv binarystring -> return : 1
dv binarystring return -> the : 1
binarystring return the -> binary : 1
return the binary -> return : 1
the binary return -> the : 1
binary return the -> preceding : 1
ensure the number -> passed : 1
the number passed -> to : 1
number passed to -> the : 1
function is greater -> than : 1
than after we -> perform : 1
than after we -> find : 1
after we perform -> to : 1
we perform to -> divide : 1
perform to divide -> the : 1
divide the number -> with : 1
the number with -> and : 1
number with and -> convert : 1
with and convert -> the : 1
and convert the -> remainder : 1
convert the remainder -> to : 1
the remainder to -> the : 1
remainder to the -> data : 1
data type using -> then : 1
type using then -> concatenate : 1
using then concatenate -> string : 1
then concatenate string -> result : 1
concatenate string result -> into : 1
string result into -> it : 1
result into it -> will : 1
into it will -> last : 1
will last for -> as : 1
last for as -> long : 1
for as long -> as : 1
long as is -> greater : 1
as is greater -> than : 1
greater than invoke -> we : 1
than invoke we -> just : 1
invoke we just -> need : 1
pass a single -> decimal : 1
a single decimal -> number : 1
single decimal number -> that : 1
decimal number that -> we : 1
number that we -> can : 1
can get from -> the : 1
get from the -> as : 1
get from the -> operation : 1
from the as -> shown : 1
the as shown -> in : 1
following cout to -> binary : 1
cout to binary -> input : 1
to binary input -> a : 1
binary input a -> decimal : 1
input a decimal -> int : 1
a decimal int -> cout : 1
decimal int cout -> a : 1
int cout a -> decimal : 1
cout a decimal -> number : 1
decimal number cin -> convert : 1
number cin convert -> to : 1
cin convert to -> binary : 1
to binary string -> binarystring : 1
to binary string -> and : 1
binary string binarystring -> show : 1
string binarystring show -> the : 1
binarystring show the -> result : 1
show the result -> to : 4
the result to -> cout : 4
result to cout -> string : 1
result to cout -> of : 1
result to cout -> subsequences : 1
result to cout -> patternstr : 1
to cout string -> of : 1
cout string of -> cout : 1
string of cout -> is : 1
of cout is -> cout : 2
of cout is -> decnumber : 1
run the the -> following : 1
be displayed on -> the : 1
displayed on the -> it : 1
on the it -> divides : 1
the it divides -> the : 1
divides the decimal -> number : 1
the decimal number -> by : 2
decimal number by -> and : 1
decimal number by -> adding : 1
number by and -> divides : 1
by and divides -> the : 1
and divides the -> result : 1
divides the result -> by : 1
the result by -> again : 1
result by again -> and : 1
by again and -> the : 1
again and the -> time : 1
and the time -> complexity : 1
function is log -> where : 1
is log where -> is : 1
is the decimal -> binary : 1
the decimal binary -> string : 1
decimal binary string -> to : 1
string to this -> we : 1
to this we -> are : 1
going to write -> a : 1
to convert binary -> string : 1
convert binary string -> into : 1
binary string into -> a : 1
string into a -> decimal : 1
into a decimal -> to : 1
a decimal to -> do : 1
decimal to do -> we : 1
do we are -> going : 1
use to the -> power : 1
to the power -> of : 1
the power of -> formula : 1
power of formula -> to : 1
of formula to -> get : 1
formula to get -> the : 1
get the decimal -> we : 1
get the decimal -> number : 1
the decimal we -> will : 1
decimal we will -> multiply : 1
decimal we will -> iterate : 1
we will multiply -> the : 1
will multiply the -> last : 1
multiply the last -> digit : 1
the last digit -> of : 1
last digit of -> the : 1
digit of the -> binary : 1
binary digit with -> then : 1
binary digit with -> and : 1
digit with then -> multiply : 1
with then multiply -> the : 1
then multiply the -> next : 1
multiply the next -> binary : 1
the next binary -> digit : 1
next binary digit -> with : 1
digit with and -> so : 1
and so use -> our : 1
so use our -> binary : 1
use our binary -> digit : 1
our binary digit -> from : 1
binary digit from -> the : 1
the previous which -> is : 1
previous which is -> and : 1
is and convert -> it : 1
and convert it -> to : 1
convert it to -> a : 1
to a decimal -> please : 1
to a decimal -> we : 1
a decimal please -> see : 1
decimal please see -> the : 1
following diagram to -> find : 1
diagram to find -> out : 1
out the will -> get : 1
the will get -> the : 1
number by adding -> all : 1
by adding all -> the : 1
adding all the -> results : 1
all the results -> of : 1
the results of -> write : 1
results of write -> a : 1
of write a -> code : 1
convert a binary -> string : 1
a binary string -> to : 1
string to a -> decimal : 1
a decimal we -> will : 1
we will iterate -> through : 1
all string then -> multiply : 1
string then multiply -> each : 1
then multiply each -> character : 1
multiply each character -> by : 1
each character by -> the : 1
character by the -> code : 1
by the code -> should : 1
be as string -> initial : 1
be as string -> string : 1
be as string -> bool : 1
be as string -> impossible : 1
as string initial -> int : 1
string initial int -> decnumber : 1
initial int decnumber -> variable : 1
int decnumber variable -> for : 1
decnumber variable for -> current : 1
variable for current -> power : 1
for current power -> int : 1
current power int -> declare : 1
power int declare -> reverse : 1
int declare reverse -> iterate : 1
declare reverse iterate -> all : 1
reverse iterate all -> characters : 1
iterate all characters -> in : 1
all characters in -> from : 1
all characters in -> have : 1
characters in from -> the : 1
in from the -> last : 1
in from the -> minimum : 1
from the last -> character : 2
from the last -> reason : 1
last character to -> the : 1
character to the -> first : 1
first for it -> n : 1
for it n -> it : 1
it n it -> if : 1
n it if -> character : 1
it if character -> is : 1
if character is -> add : 1
if character is -> not : 1
character is add -> decnumber : 1
is add decnumber -> with : 1
add decnumber with -> power : 1
decnumber with power -> of : 1
with power of -> current : 1
power of current -> char : 1
of current char -> c : 1
current char c -> decnumber : 1
char c decnumber -> return : 1
c decnumber return -> the : 1
decnumber return the -> return : 1
we call iteration -> to : 1
call iteration to -> iterate : 1
iteration to iterate -> the : 1
iterate the string -> elements : 1
iterate the string -> since : 1
the string elements -> if : 1
the string elements -> from : 1
string elements if -> we : 1
elements if we -> found : 1
if we found -> character : 1
if we found -> since : 1
if we found -> the : 1
we found character -> we : 1
found character we -> add : 1
character we add -> with : 1
we add with -> the : 1
add with the -> current : 1
with the current -> value : 1
with the current -> if : 1
current value of -> we : 1
value of we -> just : 1
of we just -> ignore : 1
we just ignore -> if : 1
just ignore if -> we : 1
ignore if we -> found : 1
we found since -> everything : 1
found since everything -> is : 1
since everything is -> multiplied : 1
everything is multiplied -> by : 1
is multiplied by -> is : 1
multiplied by is -> and : 1
by is and -> affect : 1
is and affect -> the : 1
and affect the -> after : 1
affect the after -> iteration : 1
the after iteration -> is : 1
after iteration is -> we : 1
iteration is we -> just : 1
need to return -> the : 4
need to return -> return : 1
to return the -> value : 3
to return the -> return : 1
to return the -> implementation : 1
to return the -> updated : 1
the value stored -> by : 1
value stored by -> invoke : 1
stored by invoke -> the : 1
by invoke the -> preceding : 1
following cout string -> to : 1
cout string to -> input : 1
string to input -> binary : 1
to input binary -> string : 1
input binary string -> cout : 1
binary string cout -> binary : 1
string cout binary -> string : 1
cout binary string -> convert : 1
binary string convert -> to : 1
string convert to -> int : 1
convert to int -> decnumber : 1
to int decnumber -> show : 1
int decnumber show -> the : 1
decnumber show the -> result : 1
to cout of -> cout : 1
cout of cout -> is : 1
cout of cout -> return : 1
cout is decnumber -> return : 1
is decnumber return -> preceding : 1
decnumber return preceding -> code : 1
on the quite -> easy : 1
the quite easy -> to : 2
quite easy to -> find : 1
quite easy to -> check : 1
easy to find -> out : 1
complexity of since -> we : 1
of since we -> have : 1
through the string -> its : 1
through the string -> elements : 1
the string its -> time : 1
string its time -> complexity : 1
its time complexity -> is : 1
complexity is where -> is : 1
is the length -> of : 6
length of a -> binary : 1
of a binary -> is : 2
of a binary -> tree : 1
a binary is -> a : 2
a string derived -> from : 1
string derived from -> another : 1
from another string -> by : 1
another string by -> deleting : 1
string by deleting -> some : 1
by deleting some -> characters : 1
deleting some characters -> without : 1
some characters without -> changing : 1
characters without changing -> the : 1
without changing the -> order : 1
changing the order -> of : 1
of the remaining -> suppose : 1
the remaining suppose -> we : 1
remaining suppose we -> have : 1
have a the -> subsequences : 1
a the subsequences -> of : 1
the subsequences of -> this : 1
subsequences of this -> word : 1
of this word -> would : 1
this word would -> and : 1
word would and -> subsequences : 1
would and subsequences -> from : 1
and subsequences from -> a : 1
from a find -> out : 1
a find out -> all : 1
find out all -> subsequences : 1
out all subsequences -> of : 1
all subsequences of -> a : 1
subsequences of a -> we : 1
subsequences of a -> now : 1
of a we -> need : 2
of a we -> started : 1
through all characters -> of : 1
all characters of -> the : 5
all characters of -> for : 1
characters of the -> we : 1
characters of the -> suspected : 1
characters of the -> string : 1
characters of the -> so : 1
characters of the -> if : 1
characters of the -> pattern : 1
we also create -> a : 1
also create a -> bit : 1
also create a -> new : 1
create a bit -> counter : 1
a bit counter -> variable : 2
bit counter variable -> to : 1
bit counter variable -> when : 1
counter variable to -> mark : 1
variable to mark -> which : 1
to mark which -> element : 1
mark which element -> position : 1
which element position -> should : 1
element position should -> be : 1
position should be -> considered : 1
should be considered -> to : 1
be considered to -> take : 1
considered to take -> as : 1
to take as -> a : 1
take as a -> also : 1
as a also -> known : 1
a also known -> as : 1
as the power -> set : 1
the power set -> of : 2
power set of -> is : 1
power set of -> the : 1
set of is -> the : 1
is the set -> of : 1
the set of -> all : 1
set of all -> subsets : 1
of all subsets -> of : 1
all subsets of -> suppose : 1
subsets of suppose -> we : 1
we have three -> characters : 1
have three characters -> in : 1
three characters in -> a : 1
characters in a -> which : 1
in a which -> are : 1
a which are -> the : 1
are the power -> set : 1
set of the -> string : 1
of the string -> will : 1
of the string -> simplicity : 1
of the string -> the : 1
of the string -> have : 1
the string will -> be : 1
will be which -> is : 4
be which is -> as : 1
be which is -> the : 3
which is as -> empty : 1
which is as -> insert : 1
is as empty -> using : 1
as empty using -> the : 1
empty using the -> power : 1
empty using the -> following : 1
using the power -> we : 1
the power we -> can : 1
power we can -> create : 1
create the code -> to : 1
code to generate -> subsequence : 1
code to generate -> subsequences : 1
to generate subsequence -> of : 1
generate subsequence of -> a : 1
of a as -> string : 1
a as string -> return : 1
as string return -> value : 1
string return value -> is : 1
return value is -> on : 1
value is on -> retrieve : 1
is on retrieve -> str : 1
on retrieve str -> int : 1
retrieve str int -> strlen : 1
str int strlen -> bitcounter : 1
int strlen bitcounter -> is : 1
strlen bitcounter is -> used : 1
bitcounter is used -> to : 1
used to character -> int : 1
to character int -> bitcounter : 1
character int bitcounter -> check : 1
int bitcounter check -> from : 1
bitcounter check from -> to : 1
check from to -> empty : 1
from to empty -> subset : 1
to empty subset -> is : 1
empty subset is -> for : 1
subset is for -> i : 1
is for i -> i : 1
i i temporary -> to : 1
i temporary to -> store : 1
temporary to store -> current : 1
to store current -> string : 1
store current string -> subsequence : 1
current string subsequence -> construct : 1
string subsequence construct -> the : 1
subsequence construct the -> new : 1
construct the new -> subsequence : 1
the new subsequence -> for : 1
new subsequence for -> j : 1
subsequence for j -> j : 1
for j j -> check : 1
for j j -> for : 1
for j j -> x : 1
j j check -> if : 1
j check if -> bit : 1
check if bit -> in : 1
if bit in -> the : 1
bit in the -> bitcounter : 1
in the bitcounter -> is : 1
the bitcounter is -> if : 1
bitcounter is if -> pick : 1
is if pick -> character : 1
if pick character -> from : 1
pick character from -> if : 1
character from if -> subsequence : 1
from if subsequence -> put : 1
if subsequence put -> it : 1
subsequence put it -> to : 1
put it to -> return : 1
it to return -> the : 1
preceding we generate -> subsequences : 1
we generate subsequences -> by : 1
generate subsequences by -> using : 1
subsequences by using -> a : 1
using a bit -> we : 1
a bit we -> then : 1
bit we then -> construct : 1
we then construct -> a : 1
then construct a -> new : 1
construct a new -> subsequence : 1
a new subsequence -> based : 1
new subsequence based -> on : 1
subsequence based on -> which : 1
based on which -> is : 1
on which is -> set : 1
which is set -> in : 1
is set in -> the : 1
set in the -> bit : 1
in the bit -> counter : 1
the bit counter -> to : 1
bit counter to -> invoke : 1
counter to invoke -> the : 1
following cout input -> string : 1
cout string generate -> myvector : 1
string generate myvector -> show : 1
generate myvector show -> the : 1
myvector show the -> result : 2
to cout subsequences -> of : 1
cout subsequences of -> cout : 1
subsequences of cout -> for : 1
of cout for -> it : 1
cout for it -> it : 1
for it it -> cout : 2
for it it -> if : 1
it it cout -> cout : 2
it cout cout -> return : 1
it cout cout -> cout : 1
the the function -> has : 1
the function has -> times : 1
function has times -> bit : 1
has times bit -> and : 1
times bit and -> inside : 1
bit and inside -> this : 1
and inside this -> iteration : 1
inside this iteration -> it : 1
this iteration it -> has : 1
iteration it has -> had : 1
it has had -> to : 1
has had to -> iterate : 1
had to iterate -> again : 1
to iterate again -> through : 1
iterate again through -> all : 1
again through all -> string : 1
all string the -> time : 1
string the time -> complexity : 1
function is where -> is : 3
the input whether -> a : 1
input whether a -> string : 1
of another have -> successfully : 1
another have successfully -> created : 1
have successfully created -> code : 1
have successfully created -> a : 1
successfully created code -> to : 1
created code to -> generate : 1
to generate subsequences -> of : 1
generate subsequences of -> a : 1
of a now -> we : 1
a now we -> are : 1
now we are -> going : 1
to check if -> a : 1
to check if -> to : 1
to check if -> all : 1
to check if -> the : 1
of another to -> do : 1
another to do -> we : 1
do we will -> compare : 1
do we will -> have : 1
we will compare -> the : 1
we will compare -> with : 1
compare the character -> of : 1
the character of -> two : 1
the character of -> the : 1
character of two -> strings : 1
of two strings -> from : 1
of two strings -> are : 1
two strings from -> the : 1
strings from the -> last : 1
the last reason -> we : 1
last reason we -> compare : 1
reason we compare -> from : 1
we compare from -> the : 1
compare from the -> last : 1
the string simplicity -> of : 1
string simplicity of -> checking : 1
simplicity of checking -> the : 1
of checking the -> index : 1
checking the index -> against : 1
the index against -> rather : 1
index against rather -> than : 1
against rather than -> keeping : 1
rather than keeping -> track : 1
than keeping track -> of : 1
keeping track of -> the : 1
track of the -> final : 1
of the final -> index : 1
the final index -> of : 1
final index of -> both : 1
index of both -> is : 1
of both is -> a : 1
both is a -> subsequence : 1
of a string -> is : 1
of a string -> in : 1
string is the -> index : 1
index of is -> the : 1
index of it -> means : 1
of it means -> that : 1
will compare with -> continue : 1
compare with continue -> until : 1
with continue until -> all : 1
continue until all -> suspected : 1
until all suspected -> subsequence : 1
all suspected subsequence -> string : 1
suspected subsequence string -> characters : 1
suspected subsequence string -> have : 1
subsequence string characters -> have : 1
string characters have -> been : 1
characters have been -> if : 1
have been if -> compare : 1
have been if -> there : 1
been if compare -> the : 1
if compare the -> last : 1
compare the last -> character : 1
of the suspected -> subsequence : 2
the suspected subsequence -> with : 1
the suspected subsequence -> string : 1
suspected subsequence with -> the : 1
subsequence with the -> character : 1
with the character -> before : 1
the character before -> the : 1
character before the -> last : 1
before the last -> character : 1
the string the -> code : 1
string the code -> should : 1
as string string -> int : 1
string string int -> int : 1
string int int -> if : 1
int int if -> all : 1
int if all -> characters : 1
characters in have -> been : 1
in have been -> it : 1
have been it -> means : 1
been it means -> that : 1
that the is -> of : 1
the is of -> if : 1
is of if -> return : 1
if return there -> is : 1
return there is -> some : 1
there is some -> characters : 1
is some characters -> in : 1
some characters in -> that : 1
characters in that -> matched : 1
in that matched -> with : 1
that matched with -> so : 1
matched with so -> return : 1
with so return -> if : 1
so return if -> return : 1
return if return -> if : 1
return if last -> characters : 1
if last characters -> of : 1
last characters of -> two : 1
characters of two -> strings : 1
strings are continue -> to : 1
are continue to -> check : 1
continue to check -> another : 1
to check another -> if : 1
check another if -> return : 1
another if return -> x : 1
if return x -> y : 1
return x y -> if : 1
x y if -> check : 1
y if check -> the : 1
if check the -> second : 1
check the second -> last : 1
the second last -> of : 1
second last of -> return : 1
last of return -> y : 1
of return y -> we : 1
return y we -> can : 1
y we can -> see : 1
function if all -> characters : 1
subsequence string have -> been : 1
string have been -> iterated : 2
have been iterated -> the : 2
been iterated the -> process : 1
been iterated the -> result : 1
iterated the process -> is : 1
the process is -> done : 1
process is done -> and : 1
is done and -> the : 1
done and the -> result : 1
and the result -> is : 1
the result is -> if : 1
result is if -> all : 1
is if all -> characters : 1
the string have -> been : 1
iterated the result -> will : 1
the result will -> be : 1
result will be -> after : 1
will be after -> we : 1
be after we -> can : 1
we can recursively -> run : 1
can recursively run -> the : 1
recursively run the -> to : 1
run the to -> invoke : 1
the to invoke -> the : 1
function cout cout -> if : 1
cout cout if -> string : 1
cout if string -> is : 1
if string is -> a : 1
a cout of -> input : 1
cout of input -> first : 1
of input first -> string : 1
input first string -> cout : 1
first string cout -> string : 1
string input second -> string : 1
input second string -> cout : 1
second string cout -> string : 1
check if is -> subsequence : 1
if is subsequence -> of : 1
is subsequence of -> cout : 1
subsequence of cout -> is : 1
of cout return -> preceding : 1
output on our -> we : 2
in the function -> the : 1
function is recursively -> invoked : 1
is recursively invoked -> for : 1
recursively invoked for -> all : 1
invoked for all -> characters : 1
for all characters -> of : 1
length of is -> an : 1
of is an -> algorithm : 1
is an algorithm -> to : 1
an algorithm to -> find : 1
out the location -> of : 1
the location of -> a : 1
location of a -> string : 1
a string in -> another : 1
a string in -> using : 1
string in another -> this : 1
in another this -> process : 1
another this process -> is : 1
process is usually -> used : 1
usually used in -> a : 1
used in a -> word : 1
a word processor -> as : 2
word processor as -> notepad : 2
processor as notepad -> or : 2
as notepad or -> sublime : 2
notepad or sublime -> to : 1
notepad or sublime -> can : 1
or sublime to -> find : 1
sublime to find -> a : 1
to find a -> word : 1
to find a -> string : 1
to find a -> given : 2
find a word -> position : 1
find a word -> in : 1
a word position -> in : 1
word position in -> a : 1
position in a -> look : 1
in a look -> at : 1
at the quick -> brown : 1
the quick brown -> fox : 1
quick brown fox -> jumps : 1
brown fox jumps -> over : 1
fox jumps over -> the : 1
jumps over the -> lazy : 1
over the lazy -> if : 1
the lazy if -> we : 1
lazy if we -> need : 1
can use this -> algorithm : 1
use this algorithm -> and : 1
this algorithm and -> pass : 1
algorithm and pass -> the : 1
and pass the -> might : 1
pass the might -> be : 1
the might be -> confused : 1
might be confused -> with : 1
be confused with -> and : 1
confused with and -> pattern : 1
with and pattern -> the : 1
and pattern the -> latter : 1
pattern the latter -> of : 1
the latter of -> which : 1
latter of which -> we : 1
of which we -> are : 1
which we are -> going : 1
this with we -> can : 1
with we can -> check : 1
we can check -> if : 3
we can check -> whether : 1
can check if -> a : 1
can check if -> the : 1
can check if -> each : 1
a string satisfies -> a : 1
string satisfies a -> given : 1
satisfies a given -> while : 1
a given while -> in : 1
given while in -> this : 1
while in this -> section : 1
this section be -> discovering : 1
section be discovering -> how : 1
be discovering how -> to : 1
discovering how to -> find : 1
how to find -> a : 1
how to find -> out : 2
find a string -> a : 1
a string a -> in : 1
string a in -> another : 1
a in another -> if : 1
in another if -> interested : 1
another if interested -> in : 1
if interested in -> learning : 1
in learning about -> regex : 1
in learning about -> these : 1
learning about regex -> in : 1
about regex in -> you : 1
regex in you -> can : 1
in you can -> go : 1
you can go -> find : 1
can go find -> the : 1
go find the -> position : 1
of the pattern -> in : 1
of the pattern -> are : 1
the pattern in -> a : 1
in a we -> have : 2
in a we -> can : 1
in a we -> also : 1
the elements from -> the : 1
the beginning until -> the : 2
beginning until the -> last : 2
until the last -> possible : 2
the last possible -> in : 1
the last possible -> element : 2
last possible in -> our : 1
possible in our -> preceding : 1
in our preceding -> we : 2
have a string -> containing : 1
string containing letters -> and : 1
containing letters and -> want : 1
letters and want -> to : 1
for a pattern -> which : 1
a pattern which -> contains : 1
pattern which contains -> three : 1
which contains three -> for : 1
contains three for -> we : 1
three for we -> just : 1
for we just -> need : 1
the string since -> impossible : 1
string since impossible -> to : 1
since impossible to -> find : 1
impossible to find -> the : 1
find the character -> of : 1
the the string -> we : 1
string we start -> to : 1
we start to -> iterate : 1
start to iterate -> the : 1
iterate the then -> compare : 1
the then compare -> it : 1
with the characters -> of : 1
the characters of -> the : 1
the if all -> characters : 1
the pattern are -> matched : 1
pattern are matched -> with : 1
are matched with -> string : 1
matched with string -> the : 1
with string the -> pattern : 1
string the pattern -> is : 1
the pattern is -> found : 1
pattern is found -> in : 1
the code string -> string : 1
code string string -> retrieve : 1
string string retrieve -> string : 1
string retrieve string -> int : 1
retrieve string int -> strlen : 1
string int strlen -> int : 1
int strlen int -> patlen : 1
strlen int patlen -> only : 1
int patlen only -> perform : 1
patlen only perform -> the : 1
perform the following -> if : 1
the following if -> pattern : 1
following if pattern -> string : 1
if pattern string -> is : 1
pattern string is -> not : 1
is not longer -> target : 1
not longer target -> iterate : 1
longer target iterate -> through : 1
target iterate through -> target : 1
iterate through target -> string : 1
through target string -> from : 1
target string from -> the : 1
string from the -> beginning : 1
the beginning the -> last : 1
beginning the last -> possible : 1
last possible element -> pattern : 1
last possible element -> i : 1
possible element pattern -> is : 1
element pattern is -> at : 1
pattern is at -> the : 1
the last i -> i : 1
last i i -> strlen : 1
i i strlen -> int : 1
i i strlen -> inside : 1
i strlen int -> start : 1
strlen int start -> comparing : 1
int start comparing -> pattern : 1
start comparing pattern -> j : 1
comparing pattern j -> quit : 1
pattern j quit -> from : 1
j quit from -> inner : 1
quit from inner -> if : 1
from inner if -> character : 1
inner if character -> is : 1
character is not -> if : 1
is not if -> inner : 1
is not if -> get : 1
not if inner -> is : 1
if inner is -> it : 1
inner is it -> means : 1
is it means -> that : 3
means that pattern -> is : 1
that pattern is -> in : 1
pattern is in -> the : 1
in the target -> store : 1
the target store -> the : 1
target store the -> index : 1
the index in -> return : 1
index in return -> the : 1
in return the -> return : 1
that the pattern -> size : 1
the pattern size -> is : 1
pattern size is -> lower : 1
size is lower -> than : 1
lower than or -> equal : 1
than or equal -> to : 2
or equal to -> the : 1
or equal to -> after : 1
equal to the -> target : 1
equal to the -> sum : 1
to the target -> string : 1
the target string -> size : 1
target string size -> we : 1
string size we -> iterate : 1
size we iterate -> through : 1
string elements from -> the : 1
possible element i -> i : 1
element i i -> strlen : 1
i strlen inside -> this : 1
strlen inside this -> we : 1
inside this we -> iterate : 1
this we iterate -> through : 1
through the pattern -> to : 1
the pattern to -> find : 1
pattern to find -> out : 1
if it matches -> the : 1
it matches the -> target : 1
matches the target -> to : 1
the target to -> invoke : 1
target to invoke -> the : 1
function cout input -> target : 1
cout input target -> string : 1
input target string -> cout : 1
target string cout -> target : 1
string cout target -> string : 1
cout target string -> input : 1
target string input -> pattern : 1
string input pattern -> string : 1
input pattern string -> cout : 1
pattern string cout -> pattern : 1
string cout pattern -> string : 1
cout pattern string -> find : 1
pattern string find -> the : 1
string find the -> myvector : 1
find the myvector -> show : 1
the myvector show -> the : 1
to cout patternstr -> is : 1
cout patternstr is -> cout : 1
patternstr is cout -> at : 1
is cout at -> index : 1
cout at index -> for : 1
at index for -> it : 1
index for it -> it : 1
our we we -> have : 1
through all possible -> target : 1
all possible target -> string : 1
possible target string -> elements : 1
target string elements -> and : 1
string elements and -> then : 1
elements and then -> iterate : 1
iterate through pattern -> the : 1
through pattern the -> time : 1
pattern the time -> complexity : 1
length of pattern -> string : 1
of pattern string -> and : 1
pattern string and -> is : 1
string and is -> the : 1
of the target -> this : 1
the target this -> we : 1
target this we -> have : 1
have discussed how -> to : 1
discussed how to -> construct : 1
string in using -> we : 1
in using we -> then : 1
using we then -> used : 1
we then used -> it : 1
then used it -> to : 1
used it to -> solve : 1
it to solve -> several : 1
to solve several -> problems : 1
can rearrange a -> string : 1
rearrange a string -> to : 1
string to create -> another : 1
create another which -> is : 1
is called an -> we : 1
called an we -> also : 1
an we also -> can : 1
we also can -> detect : 1
we also can -> define : 1
also can detect -> if : 1
can detect if -> a : 1
detect if a -> string : 1
is a if -> it : 1
is a if -> both : 1
a if it -> has : 1
forward and we -> have : 1
have discussed binary -> and : 1
discussed binary and -> can : 1
binary and can -> now : 1
and can now -> convert : 1
can now convert -> a : 1
now convert a -> decimal : 1
number to binary -> string : 1
binary string and -> vice : 1
string and vice -> string : 1
and vice string -> problem : 1
vice string problem -> we : 1
string problem we -> have : 1
problem we have -> solved : 1
we have solved -> is : 1
have solved is -> checking : 1
solved is checking -> whether : 1
is checking whether -> a : 1
checking whether a -> string : 1
of another we -> have : 1
have successfully generated -> subsequences : 1
successfully generated subsequences -> from : 1
generated subsequences from -> a : 1
we have learned -> how : 3
have learned how -> a : 1
have learned how -> to : 2
learned how a -> word : 1
how a word -> processor : 1
or sublime can -> find : 1
sublime can find -> a : 1
can find a -> word : 1
can find a -> bst : 1
a word in -> a : 1
word in a -> document : 1
in a document -> using : 1
a document using -> pattern : 1
document using pattern -> the : 1
using pattern the -> next : 1
pattern the next -> we : 1
to discuss another -> data : 3
discuss another data -> which : 2
discuss another data -> the : 1
is a tree -> and : 1
is a tree -> that : 1
a tree and -> the : 1
tree and the -> algorithm : 1
the algorithm implementation -> of : 1
algorithm implementation of -> this : 1
of this data -> is : 1
this data is -> the : 1
is the use -> of : 3
use of character -> in : 1
character in characters -> is : 1
in characters is -> the : 1
characters is the -> difference : 1
between and iterator -> do : 1
and iterator do -> you : 1
iterator do you -> implement : 1
do you implement -> and : 1
you implement and -> is : 1
implement and is -> the : 1
difference between an -> anagram : 1
between an anagram -> and : 1
an anagram and -> a : 1
anagram and a -> is : 1
and a is -> the : 1
use of a -> binary : 1
use of a -> bit : 1
subsequence of is -> the : 1
of a bit -> counter : 1
counter variable when -> generating : 1
variable when generating -> subsequences : 1
when generating subsequences -> from : 1
generating subsequences from -> a : 1
from a many -> times : 1
a many times -> is : 1
many times is -> outer : 1
times is outer -> iteration : 1
is outer iteration -> performed : 1
outer iteration performed -> in : 1
iteration performed in -> the : 1
performed in the -> pattern : 1
in the pattern -> searching : 1
the pattern searching -> further : 1
pattern searching further -> please : 1
searching further please -> visit : 1
further please visit -> the : 2
further please visit -> these : 1
please visit the -> following : 2
visit the following -> a : 1
visit the following -> books : 1
the following a -> hierarchical : 1
the following a -> node : 1
following a hierarchical -> tree : 1
hierarchical tree the -> previous : 1
tree the previous -> we : 1
we discussed using -> a : 1
discussed using a -> string : 1
a string as -> a : 1
string as a -> data : 1
as a data -> structure : 1
as a data -> pair : 1
data structure and -> tried : 1
data structure and -> stored : 1
structure and tried -> to : 1
and tried to -> and : 1
tried to and -> solve : 1
data in this -> we : 1
a tree that -> stores : 1
tree that stores -> data : 1
that stores data -> in : 2
stores data in -> a : 2
in a hierarchical -> this : 1
in a hierarchical -> tree : 1
a hierarchical this -> we : 1
hierarchical this we -> are : 1
discuss the following -> the : 1
following the tree -> data : 1
tree data the -> binary : 1
data the binary -> search : 1
binary search the -> binary : 1
binary search the -> priority : 1
search the binary -> search : 1
search the priority -> queue : 1
the priority queue -> using : 1
the priority queue -> is : 1
the priority queue -> to : 1
using a binary -> follow : 1
a binary follow -> along : 1
binary follow along -> with : 1
source you will -> require : 1
you will require -> the : 1
will require the -> desktop : 1
at a binary -> tree : 1
binary tree is -> a : 1
binary tree is -> the : 1
tree is a -> hierarchical : 1
is a hierarchical -> data : 1
a hierarchical data -> structure : 1
hierarchical data structure -> whose : 1
hierarchical data structure -> is : 1
hierarchical data structure -> and : 1
data structure whose -> behavior : 1
structure whose behavior -> is : 1
whose behavior is -> similar : 1
behavior is similar -> to : 1
to a as -> it : 1
a as it -> contains : 1
as it contains -> root : 1
it contains root -> and : 1
contains root and -> leaves : 1
root and leaves -> node : 1
and leaves node -> that : 1
leaves node that -> has : 1
node that has -> no : 3
node that has -> at : 1
node that has -> only : 2
node that has -> two : 2
has no the -> of : 1
no the of -> a : 1
the of a -> binary : 1
the of a -> group : 1
tree is the -> topmost : 1
tree is the -> node : 1
is the topmost -> each : 1
the topmost each -> node : 1
topmost each node -> can : 1
each node can -> have : 1
node can have -> at : 1
can have at -> most : 1
have at most -> two : 1
at most two -> which : 1
most two which -> are : 1
which are referred -> to : 1
are referred to -> as : 1
referred to as -> the : 1
as the and -> the : 1
and the a -> node : 1
and the a -> value : 1
the a node -> that : 1
a node that -> has : 4
least one child -> becomes : 1
one child becomes -> a : 1
child becomes a -> of : 1
becomes a of -> its : 1
a of its -> a : 1
of its a -> node : 1
its a node -> that : 1
has no child -> is : 1
no child is -> please : 1
child is please -> take : 1
is please take -> a : 2
following binary the -> preceding : 1
binary the preceding -> binary : 1
the preceding binary -> tree : 2
preceding binary tree -> we : 1
preceding binary tree -> a : 1
binary tree we -> can : 1
binary tree we -> need : 1
tree we can -> conclude : 1
tree we can -> use : 1
tree we can -> see : 1
we can conclude -> the : 1
can conclude the -> root : 1
conclude the root -> of : 1
the root of -> the : 1
root of the -> tree : 1
of the tree -> is : 1
of the tree -> containing : 1
of the tree -> since : 1
the tree is -> the : 1
the tree is -> left : 1
the tree is -> right : 1
the tree is -> avl : 1
the tree is -> still : 1
the node of -> element : 1
the node of -> a : 1
node of element -> since : 1
of element since -> the : 1
element since the -> topmost : 1
since the topmost -> children : 1
the topmost children -> of : 1
topmost children of -> element : 1
children of element -> are : 1
of element are -> element : 1
element are element -> and : 1
are element and -> element : 3
element and element -> parent : 1
element and element -> since : 1
element and element -> as : 2
and element parent -> of : 1
element parent of -> are : 1
parent of are -> four : 1
of are four -> leaves : 1
are four leaves -> in : 1
four leaves in -> the : 1
leaves in the -> and : 1
they are element -> element : 1
are element element -> element : 1
element element element -> and : 1
element element and -> element : 1
and element since -> they : 1
element since they -> have : 1
they have no -> hierarchical : 1
have no hierarchical -> data : 1
no hierarchical data -> structure : 1
data structure is -> usually : 1
structure is usually -> used : 1
to store information -> that : 1
store information that -> forms : 1
information that forms -> a : 1
that forms a -> such : 1
forms a such -> as : 1
a such as -> a : 1
such as a -> file : 1
as a file -> system : 1
a file system -> of : 1
file system of -> a : 1
system of a -> implement : 1
of a implement -> the : 1
a implement the -> binary : 1
implement the binary -> in : 1
binary in we -> need : 1
need a data -> structure : 1
data structure so -> that : 1
structure so that -> it : 1
it can store -> the : 1
store the key -> as : 1
store the key -> in : 1
key as well -> as : 1
well as pointers -> for : 1
as pointers for -> left : 1
pointers for left -> and : 1
for left and -> right : 1
and right to -> do : 1
right to do -> we : 1
do we can -> create : 1
do we can -> check : 1
the following class -> in : 1
the following class -> int : 1
following class in -> int : 1
class in int -> treenode : 1
in int treenode -> treenode : 1
int treenode treenode -> preceding : 1
treenode treenode preceding -> data : 1
treenode preceding data -> structure : 1
preceding data structure -> will : 1
data structure will -> store : 1
structure will store -> each : 1
will store each -> node : 1
store each node -> of : 1
each node of -> the : 1
the tree containing -> the : 1
tree containing the -> element : 1
containing the element -> along : 1
the element along -> with : 1
element along with -> the : 1
along with the -> left : 1
with the left -> and : 1
and right we -> going : 1
and right we -> also : 1
right we going -> to : 1
we going to -> create : 1
create a helper -> function : 1
a helper function -> to : 1
helper function to -> create : 1
function to create -> a : 1
a new as -> int : 1
new as int -> create : 1
as int create -> a : 1
int create a -> new : 1
a new treenode -> node : 1
new treenode node -> new : 1
treenode node new -> assign : 1
node new assign -> a : 1
new assign a -> initialize : 1
assign a initialize -> left : 1
a initialize left -> and : 1
initialize left and -> right : 2
right return preceding -> function : 1
return preceding function -> will : 1
preceding function will -> ease : 1
function will ease -> us : 1
will ease us -> into : 1
ease us into -> inserting : 1
us into inserting -> a : 1
into inserting a -> new : 1
new an existing -> create : 1
an existing create -> a : 1
existing create a -> binary : 1
create a binary -> as : 1
create a binary -> heap : 1
binary as shown -> in : 1
the preceding diagram -> by : 1
preceding diagram by -> using : 1
diagram by using -> here : 1
by using here -> are : 1
using here are -> the : 1
are the the -> node : 1
the the node -> containing : 1
the node containing -> element : 1
node containing element -> as : 1
containing element as -> creating : 1
element as creating -> root : 1
as creating root -> root : 1
creating root root -> initializing : 1
root root initializing -> the : 1
root initializing the -> add : 1
initializing the add -> two : 1
the add two -> children : 1
add two children -> to : 1
add two children -> for : 2
two children to -> the : 1
children to the -> and : 1
to the and -> element : 1
to the and -> will : 1
to the and -> we : 1
the and element -> as : 1
and element as -> add : 3
element as add -> children : 3
as add children -> to : 3
add children to -> root : 1
add children to -> element : 2
children to root -> we : 1
to root we -> have : 1
root we have -> to : 1
have to add -> two : 1
to add two -> children : 2
two children for -> element : 2
children for element -> which : 2
for element which -> are : 2
element which are -> element : 2
which are element -> and : 2
children to element -> we : 1
children to element -> a : 1
to element we -> are : 1
element we are -> going : 1
going to add -> two : 1
to element a -> binary : 1
element a binary -> search : 1
search tree search -> is : 1
tree search is -> a : 1
search is a -> sorted : 1
is a sorted -> binary : 1
a sorted binary -> where : 1
sorted binary where -> we : 1
binary where we -> can : 1
easily search for -> any : 1
easily search for -> a : 1
search for any -> key : 1
for any key -> using : 1
any key using -> the : 1
key using the -> binary : 1
using the binary -> search : 1
search to sort -> the : 1
sort the it -> has : 1
the it has -> to : 1
has to have -> the : 1
the following left -> subtree : 1
following left subtree -> contains : 1
left subtree contains -> only : 1
subtree contains only -> a : 2
contains only a -> key : 2
only a key -> smaller : 1
only a key -> greater : 1
a key smaller -> than : 1
key smaller than -> the : 1
smaller than the -> right : 1
smaller than the -> and : 1
smaller than the -> currently : 1
smaller than the -> current : 1
smaller than the -> smallest : 1
the right subtree -> contains : 1
the right subtree -> are : 1
the right subtree -> and : 1
the right subtree -> of : 2
the right subtree -> then : 1
right subtree contains -> only : 1
a key greater -> than : 1
key greater than -> the : 1
than the cannot -> duplicate : 1
the cannot duplicate -> the : 1
cannot duplicate the -> key : 1
duplicate the key -> having : 1
the key having -> the : 1
key having the -> preceding : 1
having the preceding -> we : 1
for a key -> value : 1
for a key -> from : 1
for a key -> in : 1
a key value -> as : 1
key value as -> well : 1
value as well -> as : 1
well as find -> the : 1
find the maximum -> or : 1
find the maximum -> key : 3
find the maximum -> height : 1
the maximum or -> minimum : 1
maximum or minimum -> key : 1
or minimum key -> suppose : 1
minimum key suppose -> we : 1
key suppose we -> have : 1
the preceding tree -> it : 1
preceding tree it -> has : 1
tree it has -> been : 1
has been sorted -> since : 1
been sorted since -> all : 1
sorted since all -> of : 1
since all of -> the : 1
of the keys -> in : 4
of the keys -> we : 1
the keys in -> the : 4
keys in the -> left : 1
keys in the -> right : 1
keys in the -> which : 3
keys in the -> sorted : 1
keys in the -> tree : 2
the left subtree -> are : 1
the left subtree -> if : 1
the left subtree -> of : 1
the left subtree -> from : 1
the left subtree -> please : 1
the left subtree -> and : 1
left subtree are -> smaller : 1
subtree are smaller -> than : 1
are smaller than -> the : 1
than the and -> all : 1
the and all -> of : 1
and all of -> the : 1
right subtree are -> greater : 1
subtree are greater -> than : 1
are greater than -> the : 1
the preceding bst -> is : 1
the preceding bst -> as : 1
preceding bst is -> a : 1
bst is a -> balanced : 1
is a balanced -> bst : 1
is a balanced -> when : 1
balanced bst since -> it : 1
balanced bst since -> both : 1
bst since it -> has : 1
has a balanced -> left : 1
has a balanced -> all : 1
a balanced left -> and : 1
balanced left and -> right : 1
right we also -> can : 1
also can define -> the : 1
can define the -> preceding : 1
define the preceding -> bst : 1
preceding bst as -> a : 1
bst as a -> balanced : 1
as a balanced -> bst : 1
bst since both -> the : 1
since both the -> left : 1
both the left -> and : 1
and right subtrees -> have : 1
right subtrees have -> an : 1
subtrees have an -> equal : 1
have an equal -> are : 1
an equal are -> going : 1
equal are going -> to : 1
discuss this further -> in : 1
this further in -> the : 1
further in the -> upcoming : 2
the upcoming since -> we : 1
upcoming since we -> have : 1
have to put -> the : 1
put the greater -> new : 1
the greater new -> key : 1
greater new key -> in : 1
new key in -> the : 2
new key in -> a : 1
key in the -> right : 1
key in the -> left : 1
key in the -> if : 1
key in the -> bst : 1
key in the -> vector : 1
key in the -> operations : 1
key in the -> first : 2
right subtree and -> the : 1
subtree and the -> smaller : 1
subtree and the -> right : 1
and the smaller -> new : 1
the smaller new -> key : 1
smaller new key -> in : 1
left we might -> find : 1
we might find -> an : 1
might find an -> unbalanced : 1
find an unbalanced -> called : 1
an unbalanced called -> a : 1
unbalanced called a -> or : 1
or a right -> please : 1
a right please -> see : 1
right please see -> the : 2
the following preceding -> image : 1
following preceding image -> is : 1
preceding image is -> a : 1
image is a -> sample : 1
is a sample -> of : 1
a sample of -> a : 1
sample of a -> left : 1
of a left -> since : 1
a left since -> no : 1
left since no -> right : 1
since no right -> we : 1
no right we -> can : 1
find a bst -> that : 1
a bst that -> has : 1
bst that has -> no : 1
has no left -> which : 1
no left which -> is : 1
called a right -> as : 1
a right as -> shown : 1
right as shown -> in : 1
in the two -> skewed : 1
the two skewed -> bst : 1
two skewed bst -> the : 1
skewed bst the -> height : 1
bst the height -> of : 1
the height of -> the : 9
the height of -> each : 3
the height of -> a : 2
height of the -> bst : 1
height of the -> if : 5
height of the -> since : 1
height of the -> in : 1
height of the -> return : 1
of the bst -> becomes : 1
the bst becomes -> taller : 1
bst becomes taller -> since : 1
becomes taller since -> the : 1
taller since the -> height : 1
since the height -> equals : 1
the height equals -> to : 1
height equals to -> is : 1
equals to is -> the : 1
the total keys -> in : 1
total keys in -> the : 1
which is comparing -> this : 1
is comparing this -> with : 1
comparing this with -> the : 1
with the balanced -> the : 1
the balanced the -> height : 1
the balanced the -> right : 1
the balanced the -> left : 1
balanced the height -> is : 1
the height is -> only : 1
the height is -> always : 1
height is only -> create : 1
is only create -> a : 1
only create a -> bst : 1
create a bst -> in : 1
bst in we -> need : 1
to modify our -> class : 1
modify our class -> in : 1
our class in -> the : 1
tree we need -> to : 1
to add properties -> so : 1
add properties so -> that : 1
properties so that -> we : 1
we can track -> the : 1
can track the -> parent : 1
track the parent -> of : 1
the parent of -> each : 1
the parent of -> the : 1
the parent of -> and : 1
the parent of -> will : 1
parent of each -> it : 1
of each it -> will : 1
each it will -> make : 1
it will make -> things : 1
will make things -> easier : 1
make things easier -> for : 1
things easier for -> us : 1
easier for us -> when : 1
for us when -> we : 1
us when we -> traverse : 1
when we traverse -> the : 1
we traverse the -> the : 1
as int bstnode -> bstnode : 2
int bstnode bstnode -> bstnode : 3
bstnode bstnode bstnode -> are : 1
bstnode bstnode bstnode -> new : 1
bstnode bstnode bstnode -> int : 1
bstnode bstnode are -> several : 1
bstnode are several -> basic : 1
are several basic -> operations : 1
several basic operations -> which : 1
basic operations which -> bst : 1
operations which bst -> usually : 1
which bst usually -> and : 1
bst usually and -> they : 1
usually and they -> are : 1
they are as -> used : 1
they are as -> a : 1
they are as -> is : 1
are as used -> to : 1
as used to -> add : 1
used to add -> a : 1
the first time -> we : 1
first time we -> have : 1
we have added -> a : 1
added a the -> node : 1
a the node -> we : 1
the node we -> inserted : 1
node we inserted -> will : 1
we inserted will -> be : 1
inserted will be -> a : 1
be a is -> used : 1
a is used -> to : 1
used to print -> all : 1
to print all -> of : 1
print all of -> the : 2
the sorted from -> the : 1
sorted from the -> smallest : 1
from the smallest -> key : 2
the smallest key -> to : 2
the smallest key -> which : 1
smallest key to -> the : 2
key to the -> greatest : 2
key to the -> we : 1
the greatest is -> used : 1
greatest is used -> to : 1
find a given -> key : 1
find a given -> node : 1
a given key -> in : 4
a given key -> from : 1
a given key -> exists : 1
a given key -> prior : 1
a given key -> we : 1
given key in -> the : 1
given key in -> a : 3
if the key -> exists : 1
if the key -> is : 8
if the key -> in : 1
the key exists -> it : 1
key exists it -> returns : 1
exists it returns -> otherwise : 1
it returns otherwise -> it : 1
returns otherwise it -> returns : 1
it returns and -> used : 1
returns and used -> to : 1
and used to -> find : 2
find the minimum -> key : 3
find the minimum -> or : 1
find the minimum -> and : 2
find the minimum -> number : 1
find the minimum -> coin : 1
the minimum key -> and : 2
the minimum key -> value : 2
the minimum key -> of : 2
the minimum key -> until : 1
minimum key and -> the : 1
minimum key and -> operation : 1
key and the -> maximum : 1
key and the -> worst : 1
and the maximum -> key : 1
the maximum key -> that : 1
the maximum key -> the : 1
the maximum key -> return : 1
the maximum key -> value : 2
the maximum key -> of : 2
maximum key that -> exist : 1
key that exist -> in : 1
that exist in -> the : 1
exist in the -> and : 1
exist in the -> hash : 1
the and used -> to : 1
find the successor -> and : 2
find the successor -> or : 1
find the successor -> of : 1
the successor and -> predecessor : 2
the successor and -> the : 1
the successor and -> then : 1
successor and predecessor -> of : 2
and predecessor of -> a : 1
and predecessor of -> the : 1
of a given -> we : 1
of a given -> key : 4
a given we -> are : 1
a given we -> will : 1
given we are -> going : 1
discuss these later -> in : 1
these later in -> the : 1
later in the -> upcoming : 1
the upcoming is -> used : 1
upcoming is used -> to : 1
to remove a -> given : 1
remove a given -> key : 1
given key from -> discuss : 1
key from discuss -> operations : 1
from discuss operations -> a : 1
discuss operations a -> new : 1
operations a new -> key : 1
operations a new -> a : 1
a a key -> into : 1
a key into -> the : 1
key into the -> bst : 2
into the bst -> is : 2
the bst is -> actually : 1
the bst is -> where : 2
bst is actually -> adding : 1
is actually adding -> a : 1
actually adding a -> new : 1
new node based -> on : 1
on the behavior -> of : 1
the behavior of -> the : 1
behavior of the -> each : 1
of the each -> time : 1
of the each -> divided : 1
the each time -> we : 1
time we want -> to : 1
insert a we -> have : 1
to compare it -> with : 1
with the node -> no : 1
the node no -> the : 1
node no the -> inserted : 1
no the inserted -> key : 1
the inserted key -> becomes : 1
inserted key becomes -> a : 1
key becomes a -> and : 1
becomes a and -> check : 1
a and check -> whether : 1
and check whether -> smaller : 1
check whether smaller -> or : 1
whether smaller or -> greater : 1
smaller or greater -> than : 1
or greater than -> the : 2
than the if -> the : 1
if the given -> key : 8
the given key -> is : 10
the given key -> with : 1
the given key -> not : 1
the given key -> then : 4
the given key -> exist : 1
given key is -> greater : 3
given key is -> smaller : 3
given key is -> else : 1
given key is -> if : 1
given key is -> still : 1
given key is -> then : 1
key is greater -> than : 1
key is greater -> key : 2
key is greater -> the : 2
than the currently -> selected : 2
currently selected then -> go : 1
selected then go -> to : 1
then go to -> the : 1
then go to -> right : 2
then go to -> left : 2
go to the -> right : 2
go to the -> left : 2
go to the -> leftmost : 2
go to the -> rightmost : 1
left subtree if -> the : 1
subtree if the -> given : 1
key is smaller -> than : 2
key is smaller -> key : 2
key is smaller -> the : 2
is smaller than -> the : 3
is smaller than -> or : 1
currently selected keep -> checking : 1
selected keep checking -> this : 1
keep checking this -> until : 1
checking this until -> a : 1
this until a -> node : 1
until a node -> with : 1
a node with -> no : 1
node with no -> child : 1
with no child -> so : 1
no child so -> that : 1
child so that -> we : 1
operation in int -> if : 1
in int if -> bst : 1
int if bst -> create : 1
if bst create -> a : 1
bst create a -> new : 1
new node as -> or : 2
new node as -> a : 2
node as or -> reached : 2
as or reached -> no : 2
or reached no -> any : 2
reached no any -> child : 2
no any child -> so : 2
any child so -> we : 2
child so we -> can : 2
we can insert -> a : 2
we can insert -> new : 1
we can insert -> all : 1
can insert a -> new : 3
new node node -> new : 1
node node new -> if : 1
is greater key -> then : 2
greater key then -> go : 2
key then go -> to : 4
go to right -> else : 2
to right else -> if : 2
right else if -> the : 2
right else if -> get : 2
else if the -> given : 2
is smaller key -> then : 2
smaller key then -> go : 2
go to left -> return : 1
go to left -> get : 1
to left return -> we : 1
left return we -> can : 1
to pass the -> selected : 1
pass the selected -> node : 1
the selected node -> and : 1
the selected node -> when : 1
selected node and -> a : 1
node and a -> new : 1
and a new -> key : 1
new key to -> the : 1
will always pass -> the : 1
always pass the -> node : 1
pass the node -> as : 1
the node as -> the : 1
node as the -> selected : 1
as the selected -> node : 1
selected node when -> performing : 1
node when performing -> so : 1
when performing so -> we : 1
performing so we -> can : 1
preceding code with -> the : 1
code with the -> following : 1
the following invoking -> and : 1
following invoking and -> passing : 1
invoking and passing -> root : 2
and passing root -> node : 1
and passing root -> bstnode : 1
passing root node -> and : 1
root node and -> given : 1
node and given -> root : 1
and given root -> on : 1
given root on -> the : 1
root on the -> implementation : 1
on the implementation -> of : 1
implementation of we -> can : 1
time complexity to -> insert : 1
time complexity to -> find : 1
complexity to insert -> a : 1
bst is where -> is : 2
is the height -> of : 7
a the time -> complexity : 1
the best if -> we : 2
best if we -> insert : 1
best if we -> search : 1
into a skewed -> the : 1
a skewed the -> time : 2
skewed the time -> complexity : 2
the total number -> of : 7
total number of -> keys : 3
total number of -> elements : 4
number of keys -> in : 2
number of keys -> for : 1
of keys in -> the : 2
the worst a -> bst : 1
the worst a -> node : 1
worst a bst -> in : 1
bst in have -> successfully : 1
in have successfully -> created : 1
successfully created a -> new : 1
created a new -> bst : 1
a new bst -> and : 1
new bst and -> can : 1
bst and can -> insert : 1
and can insert -> a : 1
key into we -> need : 1
into we need -> to : 1
need to implement -> the : 1
implement the which -> will : 1
which will traverse -> the : 1
will traverse the -> bst : 1
traverse the bst -> in : 1
the bst in -> order : 1
bst in order -> from : 1
in order from -> the : 1
order from the -> smallest : 1
the greatest to -> achieve : 1
greatest to achieve -> we : 1
to achieve we -> will : 1
achieve we will -> go : 1
we will go -> to : 1
will go to -> the : 1
to the leftmost -> node : 2
the leftmost node -> and : 2
leftmost node and -> then : 1
leftmost node and -> get : 1
and then to -> the : 1
then to the -> rightmost : 1
to the rightmost -> the : 1
to the rightmost -> node : 1
the rightmost the -> code : 1
rightmost the code -> should : 1
be as stop -> printing : 1
as stop printing -> if : 1
stop printing if -> no : 1
printing if no -> node : 1
if no node -> get : 1
no node get -> the : 1
node get the -> smallest : 1
get the smallest -> key : 1
smallest key which -> is : 1
key which is -> in : 1
which is in -> the : 2
which is in -> one : 1
the left print -> the : 1
left print the -> continue : 1
print the continue -> to : 1
the continue to -> the : 1
continue to the -> greatest : 1
the greatest which -> is : 1
greatest which is -> in : 1
will always traverse -> from : 1
will always traverse -> to : 1
always traverse from -> the : 1
from the we -> can : 3
code as traverse -> the : 1
as traverse the -> from : 1
the from root -> then : 1
from root then -> print : 1
root then print -> all : 1
then print all -> time : 1
then print all -> preceding : 1
print all time -> complexity : 1
all time complexity -> of : 1
of keys for -> both : 1
keys for both -> the : 1
best and the -> worst : 1
and the worst -> cases : 2
and the worst -> since : 1
and the worst -> case : 1
and the worst -> is : 1
the worst cases -> since : 1
the worst cases -> where : 1
worst cases since -> it : 1
cases since it -> will : 1
it will always -> traverse : 1
always traverse to -> all : 1
traverse to all -> out : 1
traverse to all -> elements : 1
to all out -> whether : 1
all out whether -> a : 1
have a bst -> and : 1
a bst and -> need : 1
bst and need -> to : 1
and need to -> find : 1
out if a -> key : 1
if a key -> exists : 1
if a key -> is : 1
exists in the -> quite : 1
in the quite -> easy : 1
easy to check -> whether : 1
whether a given -> key : 1
given key exists -> in : 1
in a since -> we : 1
a since we -> just : 1
need to compare -> the : 1
to compare the -> given : 1
compare the given -> key : 1
given key with -> the : 1
key with the -> current : 1
key with the -> we : 1
the key is -> smaller : 1
the key is -> not : 4
the key is -> the : 1
the key is -> update : 1
the key is -> we : 1
the key is -> return : 1
the key is -> then : 1
current we go -> to : 1
we go to -> the : 2
the left otherwise -> we : 1
left otherwise we -> go : 1
otherwise we go -> to : 1
we will do -> this : 1
will do this -> until : 1
do this until -> we : 1
this until we -> find : 1
find the key -> or : 1
the key or -> when : 1
key or when -> there : 1
or when there -> are : 1
when there are -> no : 1
are no more -> nodes : 1
no more nodes -> to : 1
more nodes to -> the : 1
nodes to the -> implementation : 1
int the given -> key : 1
int the given -> node : 2
given key not -> found : 1
key not found -> in : 1
in if return -> the : 1
in if return -> target : 1
if return the -> given : 1
return the given -> key : 1
return the given -> is : 2
key is else -> return : 1
is else return -> the : 1
else return the -> given : 2
the given is -> greater : 1
the given is -> smaller : 1
given is greater -> current : 1
is greater current -> else : 1
greater current else -> return : 1
current else return -> the : 1
given is smaller -> current : 1
is smaller current -> return : 1
smaller current return -> we : 1
current return we -> will : 1
return we will -> always : 2
will always search -> for : 1
always search for -> a : 1
a key from -> the : 1
key from the -> we : 1
key from the -> phone : 1
key from the -> element : 1
another function as -> invoking : 1
function as invoking -> and : 1
as invoking and -> passing : 1
passing root bstnode -> result : 1
root bstnode result -> if : 1
bstnode result if -> key : 1
result if key -> is : 1
if key is -> returns : 1
if key is -> not : 3
key is returns -> otherwise : 1
is returns otherwise -> returns : 1
returns otherwise returns -> return : 1
otherwise returns return -> result : 1
returns return result -> null : 1
return result null -> false : 1
result null false -> time : 1
null false time -> complexity : 1
false time complexity -> to : 1
complexity to find -> out : 1
out a key -> in : 1
in the bst -> is : 1
in the bst -> that : 1
we find a -> key : 1
find a key -> which : 1
a key which -> lies : 1
key which lies -> in : 1
which lies in -> the : 1
lies in the -> root : 1
in the root -> the : 1
the root the -> time : 1
root the time -> complexity : 1
in a skewed -> the : 1
in a skewed -> left : 3
in a skewed -> right : 3
worst the minimum -> and : 1
out the minimum -> and : 1
maximum key values -> in : 1
maximum key values -> from : 1
key values in -> a : 1
values in a -> bst : 1
in a bst -> is : 3
a bst is -> also : 1
a bst is -> as : 2
bst is also -> quite : 1
is also quite -> to : 1
also quite to -> get : 1
quite to get -> a : 1
get a minimum -> key : 1
a minimum key -> we : 1
a minimum key -> in : 1
minimum key we -> just : 1
key we just -> need : 1
need to go -> to : 3
to go to -> the : 2
to go to -> cell : 1
node and get -> the : 1
get the key -> on : 1
the key on -> the : 1
key on the -> we : 1
the rightmost node -> and : 1
rightmost node and -> we : 1
node and we -> will : 1
maximum key the -> following : 1
key the following -> is : 1
retrieve the minimum -> key : 1
key and operation -> to : 1
and operation to -> retrieve : 1
retrieve the maximum -> key : 1
maximum key return -> else : 1
key return else -> return : 1
else return return -> return : 2
return return return -> else : 1
return return return -> if : 1
return return return -> a : 1
return return else -> return : 1
if we cannot -> find : 1
we cannot find -> the : 1
the minimum or -> maximum : 1
minimum or maximum -> value : 1
minimum or maximum -> values : 1
or maximum value -> in : 1
maximum value in -> the : 2
since we assume -> that : 1
we assume that -> the : 1
assume that the -> tree : 1
that the tree -> can : 1
that the tree -> is : 1
the tree can -> only : 1
tree can only -> have : 1
can only have -> a : 1
only have a -> positive : 1
have a positive -> if : 1
a positive if -> we : 1
positive if we -> intend : 1
if we intend -> to : 1
we intend to -> store : 1
intend to store -> the : 1
store the negative -> integer : 1
the negative integer -> as : 1
negative integer as -> we : 1
integer as we -> need : 1
modify the for -> by : 1
the for by -> returning : 1
for by returning -> if : 1
by returning if -> no : 1
returning if no -> minimum : 1
if no minimum -> or : 1
no minimum or -> maximum : 1
or maximum values -> are : 1
maximum values are -> we : 1
values are we -> will : 1
are we will -> always : 1
will always find -> the : 1
always find the -> minimum : 1
key values from -> the : 1
values from the -> so : 1
from the so -> we : 1
the preceding operations -> as : 1
preceding operations as -> return : 1
operations as return -> return : 1
as return return -> to : 1
return return to -> the : 1
return to the -> the : 2
the the time -> complexity : 3
complexity of and -> operations : 1
operations is where -> is : 1
maximum key value -> in : 2
key value in -> a : 4
a skewed left -> the : 2
a skewed left -> bst : 1
skewed left the -> time : 2
left the time -> complexity : 2
the best since -> it : 1
best since it -> have : 1
since it have -> any : 1
it have any -> right : 1
have any right -> this : 1
any right this -> also : 1
right this also -> happens : 1
this also happens -> if : 1
also happens if -> we : 1
happens if we -> find : 1
minimum key value -> in : 2
a skewed right -> the : 2
a skewed right -> since : 1
skewed right the -> worst : 1
skewed right the -> time : 1
right the worst -> case : 1
worst case will -> appear : 1
case will appear -> if : 1
will appear if -> we : 1
appear if we -> try : 1
if we try -> to : 3
skewed left bst -> or : 1
skewed left bst -> tree : 1
left bst or -> try : 1
bst or try -> to : 1
or try to -> find : 1
skewed right since -> the : 1
right since the -> time : 1
will be out -> the : 1
be out the -> successor : 1
in a properties -> that : 1
a properties that -> we : 1
properties that we -> can : 1
can find from -> a : 1
find from a -> bst : 1
from a bst -> are : 1
a bst are -> and : 1
bst are and -> we : 1
are and we -> are : 1
to create two -> functions : 1
create two functions -> named : 1
two functions named -> and : 1
functions named and -> in : 1
named and in -> but : 1
and in but -> before : 1
in but before -> we : 1
but before we -> create : 1
before we create -> the : 1
we create the -> discuss : 1
create the discuss -> how : 1
the discuss how -> to : 1
successor and the -> predecessor : 1
and the predecessor -> of : 1
a key of -> a : 2
key of a -> in : 1
key of a -> suppose : 1
of a in -> this : 1
of a in -> adjacent : 1
a in this -> we : 2
learn about the -> successor : 1
about the successor -> and : 1
successor and then -> we : 1
then we will -> discuss : 1
discuss the predecessor -> in : 1
the predecessor in -> the : 1
predecessor in the -> upcoming : 1
the upcoming are -> three : 1
the upcoming are -> going : 1
upcoming are three -> rules : 1
are three rules -> to : 1
three rules to -> find : 1
rules to find -> out : 1
of a suppose -> we : 1
have a that -> we : 1
a that we -> have : 1
we have searched -> for : 1
have searched for -> using : 1
searched for using -> the : 1
for using the -> previous : 1
using the previous -> we : 1
previous we will -> also : 1
also use our -> preceding : 1
our preceding bst -> to : 1
our preceding bst -> from : 1
preceding bst to -> find : 1
bst to find -> out : 1
a specific the -> successor : 1
specific the successor -> of : 1
successor of can -> be : 1
of can be -> found : 1
be found as -> has : 1
found as has -> a : 1
as has a -> right : 1
has a right -> the : 1
a right the -> successor : 1
right the successor -> of : 1
successor of will -> be : 1
be the minimum -> integer : 1
the minimum integer -> in : 3
minimum integer in -> the : 3
integer in the -> right : 2
integer in the -> no : 2
integer in the -> left : 2
right subtree of -> from : 1
right subtree of -> please : 1
subtree of from -> our : 2
of from our -> preceding : 2
from our preceding -> if : 2
from our preceding -> the : 1
from our preceding -> give : 1
from our preceding -> we : 1
our preceding if -> will : 2
preceding if will -> give : 2
if will give -> us : 2
will give us -> since : 2
give us since -> the : 2
us since the -> minimum : 1
us since the -> first : 1
since the minimum -> integer : 1
subtree of please -> take : 1
of please take -> a : 1
the following does -> not : 1
following does not -> have : 1
not have a -> right : 1
not have a -> left : 1
have a right -> we : 1
have a right -> create : 1
a right we -> have : 1
right we have -> to : 1
traverse the ancestors -> of : 1
traverse the ancestors -> we : 1
the ancestors of -> until : 1
ancestors of until -> we : 1
of until we -> find : 1
find the first -> which : 2
the first which -> is : 3
first which is -> greater : 1
first which is -> lower : 1
first which is -> as : 1
greater than node -> after : 1
than node after -> we : 1
node after we -> find : 1
we find node -> we : 1
find node we -> will : 1
will see that -> node : 1
will see that -> the : 1
see that node -> is : 1
that node is -> the : 1
node is the -> maximum : 1
is the maximum -> element : 1
is the maximum -> integer : 1
is the maximum -> key : 2
is the maximum -> remove : 1
the maximum element -> in : 1
the maximum element -> has : 1
the maximum element -> from : 1
the maximum element -> which : 1
maximum element in -> the : 1
left subtree of -> from : 1
since the first -> greater : 1
the first greater -> ancestor : 1
first greater ancestor -> compared : 1
greater ancestor compared -> with : 1
ancestor compared with -> which : 1
compared with which -> is : 1
which is please -> take : 1
which is please -> see : 1
the maximum integer -> in : 3
maximum integer in -> the : 3
in the no -> successor : 1
in the no -> predecessor : 1
the no successor -> of : 1
no successor of -> from : 1
successor of from -> the : 1
of from the -> preceding : 1
the preceding if -> we : 2
preceding if we -> run : 1
preceding if we -> we : 1
we run we -> will : 1
run we will -> get : 1
will get which -> means : 1
get which means -> no : 1
which means no -> successor : 1
which means no -> predecessor : 1
means no successor -> has : 1
no successor has -> been : 1
successor has been -> since : 1
has been since -> is : 1
been since is -> the : 1
since is the -> maximum : 1
maximum key of -> the : 1
maximum key of -> left : 1
key of the -> on : 1
key of the -> we : 1
key of the -> inputted : 1
key of the -> given : 1
of the on -> our : 1
the on our -> preceding : 1
on our preceding -> discussion : 1
our preceding discussion -> about : 1
preceding discussion about -> how : 1
discussion about how -> to : 1
about how to -> find : 1
a function in -> with : 1
a function in -> the : 1
function in with -> the : 1
in with the -> following : 1
following the successor -> is : 1
the successor is -> the : 1
successor is the -> minimum : 1
is the minimum -> key : 1
minimum key of -> right : 1
minimum key of -> the : 1
key of right -> if : 1
of right if -> return : 1
right if return -> if : 1
if no any -> right : 1
if no any -> left : 1
if no any -> that : 1
no any right -> bstnode : 1
any right bstnode -> parentnode : 1
right bstnode parentnode -> bstnode : 1
bstnode parentnode bstnode -> currentnode : 2
parentnode bstnode currentnode -> if : 2
bstnode currentnode if -> currentnode : 2
currentnode if currentnode -> is : 2
if currentnode is -> not : 2
currentnode is not -> root : 2
is not root -> currentnode : 2
not root currentnode -> is : 2
root currentnode is -> its : 2
currentnode is its -> right : 1
currentnode is its -> left : 1
is its right -> continue : 1
its right continue -> moving : 1
right continue moving -> while : 1
continue moving while -> currentnode : 2
moving while currentnode -> parentnode : 2
while currentnode parentnode -> if : 2
currentnode parentnode if -> parentnode : 2
parentnode if parentnode -> is : 2
if parentnode is -> not : 2
parentnode is not -> then : 2
is not then -> the : 2
not then the -> key : 2
then the key -> of : 2
the key of -> parentnode : 2
key of parentnode -> the : 2
of parentnode the -> successor : 1
of parentnode the -> predecessor : 1
parentnode the successor -> of : 1
successor of return -> parentnode : 1
of return parentnode -> null : 2
return parentnode null -> since : 1
return parentnode null -> similar : 1
parentnode null since -> we : 1
a given node -> we : 1
given node we -> have : 1
node we have -> to : 2
have to prior -> to : 1
to prior to -> invoking : 1
prior to invoking -> the : 2
to invoking the -> preceding : 2
invoking the preceding -> the : 2
preceding the complete -> code : 2
code for searching -> for : 2
for searching for -> the : 2
searching for the -> successor : 1
searching for the -> predecessor : 1
for the successor -> of : 1
bst is as -> search : 2
as search the -> node : 2
search the node -> bstnode : 2
the node bstnode -> keynode : 2
node bstnode keynode -> return : 2
bstnode keynode return -> the : 2
keynode return the -> if : 2
return the if -> the : 2
key is not -> found : 4
key is not -> it : 1
key is not -> we : 1
key is not -> append : 1
key is not -> so : 1
is not found -> successor : 1
is not found -> predecessor : 1
is not found -> just : 2
not found successor -> is : 1
found successor is -> not : 1
successor is not -> return : 1
return return keynode -> null : 2
return keynode null -> our : 1
return keynode null -> to : 1
keynode null our -> preceding : 1
null our preceding -> we : 1
that the average -> time : 1
the average time -> complexity : 1
average time complexity -> of : 1
complexity of running -> the : 2
of running the -> operation : 2
running the operation -> is : 2
operation is where -> is : 2
of a maximum -> key : 1
a maximum key -> in : 1
maximum key in -> a : 1
right the time -> complexity : 1
the worst out -> the : 1
worst out the -> predecessor : 1
a a left -> the : 1
a left the -> predecessor : 1
left the predecessor -> be : 1
the predecessor be -> the : 1
predecessor be the -> maximum : 1
be the maximum -> integer : 1
left subtree from -> our : 1
subtree from our -> preceding : 1
our preceding the -> maximum : 1
our preceding the -> time : 1
our preceding the -> following : 1
preceding the maximum -> integer : 1
left subtree please -> take : 1
subtree please take -> a : 1
the following not -> have : 1
following not have -> a : 1
have a left -> we : 1
have a left -> create : 1
a left we -> have : 1
left we have -> to : 1
the ancestors we -> find : 1
ancestors we find -> the : 1
lower than after -> we : 1
find we will -> see : 1
that the minimum -> element : 1
the minimum element -> of : 1
minimum element of -> the : 1
of the traversed -> from : 1
the traversed from -> our : 1
traversed from our -> preceding : 1
our preceding give -> the : 1
preceding give the -> first : 1
give the first -> lower : 1
the first lower -> ancestor : 1
first lower ancestor -> compared : 1
lower ancestor compared -> which : 1
ancestor compared which -> please : 1
compared which please -> take : 1
which please take -> a : 1
following the minimum -> integer : 1
the no predecessor -> from : 1
no predecessor from -> the : 1
predecessor from the -> preceding : 1
we we will -> which : 1
we will which -> means : 1
will which means -> no : 1
means no predecessor -> is : 1
no predecessor is -> found : 1
predecessor is found -> the : 1
is found the -> minimum : 1
found the minimum -> key : 1
can implement operation -> in : 1
implement operation in -> as : 1
operation in as -> the : 1
in as the -> predecessor : 1
as the predecessor -> is : 1
the predecessor is -> the : 1
predecessor is the -> maximum : 1
key of left -> if : 1
of left if -> return : 1
left if return -> if : 1
no any left -> bstnode : 1
any left bstnode -> parentnode : 1
left bstnode parentnode -> bstnode : 1
is its left -> continue : 1
its left continue -> moving : 1
left continue moving -> while : 1
parentnode the predecessor -> of : 1
predecessor of return -> parentnode : 1
parentnode null similar -> to : 1
null similar to -> we : 1
to we have -> to : 1
have to search -> for : 1
have to search -> the : 1
for the node -> of : 1
node of a -> given : 1
given key prior -> to : 1
key prior to -> invoking : 1
for the predecessor -> of : 1
not found predecessor -> is : 1
found predecessor is -> not : 1
predecessor is not -> return : 1
keynode null to -> our : 1
null to our -> preceding : 1
preceding the time -> complexity : 2
of a minimum -> key : 1
minimum key in -> a : 1
worst a node -> based : 1
a given last -> operation : 1
given last operation -> in : 1
last operation in -> the : 1
the bst that -> we : 1
bst that we -> are : 1
discuss is removing -> a : 1
is removing a -> node : 1
removing a node -> based : 1
removing a node -> from : 1
given we will -> create : 1
create a operation -> in : 1
a operation in -> there : 1
operation in there -> are : 1
in there are -> three : 1
are three possible -> cases : 1
three possible cases -> for : 1
possible cases for -> removing : 1
cases for removing -> a : 1
for removing a -> node : 1
a node from -> a : 1
node from a -> and : 1
from a and -> they : 1
a and they -> are : 1
are as a -> leaf : 1
as a leaf -> node : 1
a leaf node -> that : 1
leaf node that -> have : 1
node that have -> any : 1
that have any -> in : 1
have any in -> this : 1
this we just -> need : 1
need to remove -> the : 2
remove the from -> our : 1
the from our -> preceding : 1
we can remove -> and : 1
we can remove -> the : 1
we can remove -> node : 1
can remove and -> since : 1
remove and since -> they : 1
and since they -> are : 1
since they are -> leaves : 1
they are leaves -> with : 1
are leaves with -> no : 1
leaves with no -> a : 1
with no a -> node : 1
no a node -> that : 1
that has only -> one : 2
only one child -> a : 1
only one child -> at : 4
one child a -> left : 1
child a left -> or : 1
a left or -> right : 1
left or right -> in : 1
or right in -> this : 1
right in this -> we : 2
have to connect -> the : 1
connect the child -> to : 1
the child to -> the : 1
child to the -> parent : 1
to the parent -> of : 1
parent of the -> after : 1
of the after -> we : 2
can remove the -> target : 1
remove the target -> node : 1
the target node -> as : 1
the target node -> with : 1
the target node -> we : 1
target node as -> an : 1
node as an -> if : 1
as an if -> we : 1
an if we -> want : 1
want to remove -> node : 2
to remove node -> we : 1
to remove node -> and : 1
remove node we -> have : 1
have to point -> pointer : 1
to point pointer -> of : 1
point pointer of -> node : 1
pointer of node -> to : 1
of node to -> node : 1
node to node -> make : 1
to node make -> the : 1
node make the -> left : 1
make the left -> node : 1
the left node -> of : 1
left node of -> points : 1
node of points -> to : 1
of points to -> we : 1
points to we -> can : 1
safely remove node -> a : 1
remove node a -> node : 1
node a node -> that : 1
that has two -> children : 1
that has two -> the : 1
has two children -> and : 1
two children and -> right : 1
two children and -> find : 2
children and right -> in : 1
and right in -> this : 1
successor of the -> after : 1
replace the target -> node : 1
target node with -> the : 1
node with the -> successor : 1
with the successor -> suppose : 1
the successor suppose -> we : 1
successor suppose we -> want : 1
remove node and -> that : 1
remove node and -> replace : 1
node and that -> we : 1
that we as -> its : 1
we as its -> we : 1
as its we -> can : 1
its we can -> remove : 1
can remove node -> and : 1
node and replace -> it : 1
and replace it -> with : 1
and replace it -> the : 1
replace it with -> node : 1
it with node -> node : 1
with node node -> will : 1
node node will -> have : 1
node will have -> two : 1
will have two -> node : 1
have two node -> in : 1
two node in -> the : 1
left and node -> in : 1
and node in -> the : 1
in the similar -> to : 1
similar to if -> the : 1
to if the -> target : 1
if the target -> node : 1
target node we -> just : 1
node we just -> need : 1
operation in is -> as : 1
is as bstnode -> int : 1
as bstnode int -> the : 1
bstnode int the -> given : 1
the given node -> not : 2
given node not -> found : 2
node not found -> in : 2
if return target -> node : 2
return target node -> is : 2
target node is -> if : 2
node is if -> if : 2
is if if -> the : 2
node is a -> leaf : 2
is a leaf -> the : 2
a leaf the -> node : 2
leaf the node -> can : 2
the node can -> be : 2
node can be -> safely : 2
can be safely -> if : 2
be safely if -> null : 2
safely if null -> node : 2
if null node -> the : 2
null node the -> node : 2
node the node -> have : 6
the node have -> only : 4
the node have -> two : 2
node have only -> one : 4
have only one -> child : 4
one child at -> else : 4
child at else -> if : 4
at else if -> null : 4
else if null -> the : 4
if null the -> only : 4
null the only -> child : 4
the only child -> will : 4
only child will -> be : 4
child will be -> connected : 4
will be connected -> the : 4
be connected the -> of : 4
connected the of -> node : 4
the of node -> bypass : 4
of node bypass -> node : 4
node bypass node -> the : 4
bypass node the -> node : 4
node have two -> children : 2
have two children -> and : 2
children and find -> successor : 2
and find successor -> or : 2
find successor or -> predecessor : 2
successor or predecessor -> to : 2
successor or predecessor -> of : 1
or predecessor to -> avoid : 2
predecessor to avoid -> int : 2
to avoid int -> successorkey : 2
avoid int successorkey -> replace : 2
int successorkey replace -> key : 2
successorkey replace key -> with : 2
replace key with -> delete : 2
key with delete -> the : 2
with delete the -> old : 2
delete the old -> target : 2
the old target -> key : 2
old target key -> is : 2
target key is -> smaller : 2
target key is -> greater : 2
is smaller the -> given : 2
smaller the given -> key : 2
given key then -> search : 4
key then search -> to : 4
key then search -> the : 2
then search to -> else : 2
then search to -> return : 1
then search to -> only : 1
search to else -> if : 2
to else if -> target : 2
else if target -> key : 2
if target key -> is : 2
is greater the -> given : 2
greater the given -> key : 2
search to return -> the : 1
return the updated -> return : 1
return the updated -> avl : 2
the updated return -> we : 1
updated return we -> will : 1
will always remove -> a : 1
always remove a -> node : 1
remove a node -> starting : 1
a node starting -> from : 1
node starting from -> the : 1
we can simplify -> the : 1
can simplify the -> preceding : 1
simplify the preceding -> operation : 1
the preceding operation -> by : 1
preceding operation by -> creating : 1
operation by creating -> the : 1
by creating the -> following : 1
creating the following -> root : 1
the following root -> shown : 1
following root shown -> in : 1
root shown in -> the : 1
for both case -> node : 1
both case node -> that : 1
case node that -> has : 3
has no and -> case : 1
no and case -> node : 1
and case node -> that : 1
only one for -> case : 1
one for case -> node : 1
for case node -> that : 1
has two the -> time : 1
the successor or -> predecessor : 1
or predecessor of -> the : 1
predecessor of the -> the : 1
predecessor of the -> keys : 1
the the bst -> we : 1
the bst we -> have : 1
bst we have -> a : 1
new adt called -> class : 1
adt called class -> with : 1
called class with -> the : 1
class with the -> following : 1
the following bstnode -> bstnode : 1
following bstnode bstnode -> int : 1
bstnode bstnode int -> void : 1
bstnode bstnode int -> bstnode : 1
bstnode int void -> bstnode : 1
bstnode int void -> void : 2
int void bstnode -> int : 1
void bstnode int -> int : 1
bstnode int int -> int : 1
int int bstnode -> int : 1
int bstnode int -> void : 2
void void bool -> int : 1
void void bool -> void : 2
void void bool -> we : 1
void bool int -> int : 1
bool int int -> int : 1
int void instantiate -> a : 1
void instantiate a -> bst : 1
instantiate a bst -> we : 1
a bst we -> can : 1
bst we can -> write : 1
we can write -> the : 1
can write the -> following : 1
write the following -> instantiate : 1
the following instantiate -> bst : 1
following instantiate bst -> tree : 1
instantiate bst tree -> new : 1
bst tree new -> running : 1
tree new running -> the : 1
new running the -> preceding : 1
preceding we now -> have : 1
now have an -> instance : 1
have an instance -> of : 1
the class which -> is : 1
class which is -> stored : 1
which is stored -> in : 1
stored in for -> we : 1
in for we -> can : 1
can add several -> elements : 1
add several elements -> to : 1
several elements to -> the : 1
create a tree -> containing : 1
a tree containing -> exactly : 1
tree containing exactly -> the : 1
containing exactly the -> same : 1
the same elements -> of : 1
same elements of -> our : 1
elements of our -> preceding : 1
of our preceding -> the : 1
preceding the following -> code : 1
snippet is used -> to : 1
to insert several -> elements : 1
insert several elements -> using : 1
several elements using -> define : 1
elements using define -> key : 1
using define key -> value : 1
define key value -> to : 1
key value to -> be : 1
to be inserted -> to : 3
be inserted to -> inserting : 1
be inserted to -> a : 1
be inserted to -> hash : 1
inserted to inserting -> key : 1
to inserting key -> can : 1
inserting key can -> validate : 1
key can validate -> the : 1
can validate the -> elements : 1
validate the elements -> by : 1
the elements by -> traversing : 1
elements by traversing -> the : 1
by traversing the -> in : 1
traversing the in -> order : 1
the in order -> using : 1
in order using -> as : 1
order using as -> traversing : 1
using as traversing -> tree : 1
as traversing tree -> in : 1
traversing tree in -> then : 1
tree in then -> print : 1
in then print -> all : 1
print all preceding -> code : 1
all preceding code -> snippet : 1
will print all -> of : 1
the tree in -> from : 1
tree in from -> the : 1
from the minimum -> key : 1
minimum key until -> the : 1
key until the -> maximum : 1
until the maximum -> we : 1
the maximum we -> are : 1
maximum we are -> going : 1
going to invoke -> we : 1
invoke we are -> going : 1
going to try -> and : 1
to try and -> find : 1
try and find -> and : 1
and find and -> as : 1
find and as -> we : 1
as we already -> key : 1
we already key -> but : 1
already key but -> key : 1
key but key -> here : 1
but key here -> is : 1
key here is -> the : 3
code to invoke -> the : 1
invoke the search -> key : 1
the search key -> it : 3
search key it -> should : 4
key it should -> be : 3
key it should -> not : 1
should be key -> b : 1
should be key -> value : 1
be key b -> cout : 1
key b cout -> cout : 1
b cout cout -> search : 1
b cout cout -> insert : 1
cout cout search -> key : 1
cout search key -> it : 1
it should not -> be : 3
should not be -> key : 1
should not be -> node : 1
should not be -> cout : 1
not be key -> cout : 1
be key cout -> cout : 1
key cout cout -> can : 1
cout cout can -> also : 1
cout can also -> find : 1
can also find -> the : 1
also find the -> minimum : 1
and maximum keys -> in : 1
maximum keys in -> the : 1
tree using and -> as : 1
using and as -> retrieving : 1
and as retrieving -> minimum : 1
as retrieving minimum -> and : 1
retrieving minimum and -> maximum : 1
maximum key key -> to : 1
key key to -> find : 1
key to find -> the : 1
key to find -> if : 2
a key we -> can : 2
key we can -> use : 2
key we can -> have : 1
key we can -> do : 1
can use and -> to : 1
use and to -> find : 1
find the predecessor -> of : 1
can use we -> will : 1
use we will -> find : 1
the keys we -> the : 1
keys we the -> previous : 1
we the previous -> that : 1
the previous that -> out : 1
previous that out -> the : 1
that out the -> successor : 1
in a and -> out : 1
a and out -> the : 1
and out the -> predecessor : 1
and out the -> this : 1
in a section -> the : 1
a section the -> code : 1
section the code -> will : 1
be as finding -> should : 1
as finding should -> be : 1
finding should be -> should : 2
should be should -> be : 4
be should be -> should : 2
be should be -> or : 2
should be or -> finding : 1
should be or -> last : 1
be or finding -> should : 1
or finding should -> be : 1
be or last -> operation : 1
or last operation -> is : 1
operation is we -> will : 1
try to remove -> and : 1
to remove and -> we : 1
remove and we -> will : 1
will call operation -> again : 1
call operation again -> to : 1
operation again to -> prove : 1
again to prove -> that : 1
that the selected -> keys : 1
the selected keys -> have : 1
selected keys have -> been : 1
keys have been -> the : 1
been the code -> snippet : 1
snippet will be -> as : 1
be as removing -> a : 1
as removing a -> key : 2
removing a key -> key : 1
removing a key -> in : 1
a key key -> printing : 1
key key printing -> all : 1
key printing all -> keys : 1
printing all keys -> key : 1
all keys key -> and : 1
keys key and -> should : 1
key and should -> be : 1
should be full -> code : 1
be full code -> can : 1
full code can -> be : 2
found in file -> of : 1
found in file -> in : 1
in file of -> if : 1
file of if -> we : 1
of if we -> build : 1
in the got -> all : 1
the got all -> of : 1
got all of -> the : 1
of the expected -> outputs : 1
the expected outputs -> for : 1
expected outputs for -> each : 1
outputs for each -> a : 1
for each a -> balanced : 1
each a balanced -> bst : 1
balanced bst we -> discussed : 1
bst we discussed -> earlier : 1
discussed earlier in -> the : 1
earlier in the -> a : 1
in the a -> binary : 1
the a binary -> search : 1
the a binary -> heap : 1
search tree possible -> to : 1
tree possible to -> have : 1
possible to have -> a : 1
have a skewed -> tree : 2
a skewed tree -> left : 1
a skewed tree -> in : 1
skewed tree left -> or : 1
tree left or -> and : 1
left or and -> cause : 1
or and cause -> the : 1
and cause the -> time : 1
cause the time -> complexity : 1
complexity of several -> operations : 1
of several operations -> to : 1
several operations to -> become : 1
operations to become -> slow : 1
to become slow -> for : 1
become slow for -> where : 1
slow for where -> is : 1
for where is -> the : 1
discuss a balanced -> binary : 1
a balanced binary -> search : 1
a balanced binary -> another : 1
balanced binary search -> tree : 1
balanced binary search -> it : 1
search tree to -> ensure : 1
tree to ensure -> that : 1
that we get -> a : 1
we get a -> skewed : 1
get a skewed -> there : 1
a skewed there -> are : 1
skewed there are -> several : 1
are several implementations -> needed : 1
several implementations needed -> to : 1
implementations needed to -> create : 1
needed to create -> a : 1
create a balanced -> we : 1
a balanced we -> will : 1
a balanced we -> have : 1
balanced we will -> only : 1
we will only -> focus : 1
we will only -> discuss : 1
will only focus -> on : 1
only focus on -> which : 1
focus on which -> was : 1
on which was -> invented : 1
which was invented -> by : 1
was invented by -> and : 1
invented by and -> in : 1
by and in -> and : 1
and in and -> after : 1
in and after -> the : 1
after the make -> a : 1
the make a -> balanced : 1
make a balanced -> we : 1
make a balanced -> tree : 1
balanced we have -> to : 1
have to know -> the : 1
know the height -> of : 1
height of each -> node : 1
height of each -> we : 2
each node in -> the : 1
to modify class -> by : 1
modify class by -> adding : 1
class by adding -> a : 1
a new property -> as : 1
new property as -> int : 1
property as int -> bstnode : 1
bstnode bstnode new -> property : 1
bstnode new property -> is : 1
new property is -> used : 1
property is used -> to : 1
used to track -> the : 1
to track the -> height : 1
to track the -> total : 2
track the height -> of : 1
each we will -> also : 1
a new method -> to : 1
new method to -> fetch : 1
method to fetch -> the : 1
fetch the height -> of : 2
height of a -> which : 1
height of a -> will : 1
of a which -> is : 1
a which is -> with : 1
the following return -> the : 1
following return the -> height : 1
return the height -> of : 1
of the return -> if : 1
node is return -> node : 1
is return node -> null : 1
return node null -> see : 1
node null see -> our : 1
null see our -> preceding : 1
see our preceding -> bst : 1
preceding bst from -> the : 1
bst from the -> previous : 1
the previous if -> it : 1
previous if it -> is : 1
a balanced when -> we : 1
balanced when we -> invoke : 1
we invoke will -> return : 1
invoke will return -> since : 1
will return since -> no : 1
return since no -> edge : 1
since no edge -> in : 1
no edge in -> node : 1
edge in node -> on : 1
in node on -> the : 1
node on the -> other : 1
the other to -> get : 1
other to get -> the : 1
get the we -> just : 1
need to fetch -> the : 1
fetch the so -> in : 1
the so in -> our : 1
so in our -> preceding : 1
can invoke avl -> tree : 1
invoke avl tree -> is : 1
avl tree is -> basically : 1
avl tree is -> similar : 2
avl tree is -> as : 1
avl tree is -> where : 1
avl tree is -> also : 1
tree is basically -> a : 1
basically a but -> it : 1
a but it -> has : 1
a balanced all -> operations : 1
balanced all operations -> in : 1
all operations in -> the : 2
in the avl -> tree : 2
in the avl -> which : 1
in the avl -> the : 1
the avl tree -> will : 2
the avl tree -> is : 1
the avl tree -> have : 1
avl tree will -> be : 2
tree will be -> the : 1
tree will be -> where : 1
same as they -> are : 1
as they are -> in : 1
they are in -> the : 1
in the except -> for : 1
the except for -> and : 1
the except for -> the : 1
except for and -> to : 1
for and to -> find : 1
find the height -> of : 1
each we need -> to : 1
the maximum height -> between : 1
maximum height between -> the : 1
height between the -> left : 1
between the left -> subtree : 1
between the left -> height : 1
left subtree and -> the : 1
right subtree then -> the : 1
subtree then the -> the : 1
then the the -> following : 1
then the the -> middle : 1
code is used -> to : 1
of a will -> add : 1
a will add -> the : 1
will add the -> preceding : 1
preceding code to -> our : 1
code to our -> new : 1
to our new -> avl : 1
our new avl -> and : 1
new avl and -> which : 1
avl and which -> we : 1
and which we -> will : 1
the upcoming balanced -> bst : 1
upcoming balanced bst -> can : 1
balanced bst can -> be : 1
bst can be -> achieved : 1
can be achieved -> if : 1
be achieved if -> the : 1
achieved if the -> difference : 1
if the difference -> of : 1
the difference of -> the : 1
difference of the -> left : 1
the left height -> and : 2
left height and -> the : 1
left height and -> right : 1
height and the -> right : 1
the right height -> is : 1
right height is -> no : 1
right height is -> this : 1
height is no -> more : 1
is no more -> than : 1
no more than -> please : 1
more than please -> see : 1
than please see -> the : 1
the following mathematical -> on : 1
following mathematical on -> the : 1
mathematical on the -> preceding : 1
can initialize variable -> with : 1
initialize variable with -> the : 1
variable with the -> following : 1
the following balance -> the : 1
following balance the -> tree : 1
balance the tree -> is : 1
tree is left -> heavy : 1
is left heavy -> and : 1
left heavy and -> we : 1
heavy and we -> need : 2
need to rotate -> the : 2
to rotate the -> left : 1
to rotate the -> right : 1
rotate the left -> in : 1
rotate the left -> tree : 1
the left in -> if : 1
left in if -> the : 1
if the tree -> is : 1
tree is right -> heavy : 1
is right heavy -> and : 1
right heavy and -> we : 1
rotate the right -> please : 1
rotate the right -> tree : 1
the right please -> see : 1
get the right -> tree : 1
the right tree -> if : 1
the right tree -> to : 1
right tree if -> we : 1
tree if we -> rotate : 2
if we rotate -> the : 2
we rotate the -> left : 1
we rotate the -> right : 1
the left tree -> to : 1
the left tree -> if : 1
left tree to -> the : 1
tree to the -> and : 1
tree to the -> based : 1
and will get -> the : 1
get the left -> tree : 1
left tree if -> we : 1
right tree to -> the : 1
to the based -> on : 1
can create and -> operations : 1
create and operations -> as : 1
and operations as -> the : 1
operations as the -> node : 1
as the node -> must : 1
the node must -> have : 2
node must have -> a : 2
must have a -> right : 1
must have a -> left : 1
must have a -> on : 1
a right create -> a : 1
right create a -> new : 2
node as a -> that : 2
as a that -> will : 2
a that will -> be : 2
be a balanced -> bstnode : 2
a balanced bstnode -> balancednode : 2
balanced bstnode balancednode -> the : 2
bstnode balancednode the -> balanced : 2
balancednode the balanced -> node : 2
the balanced node -> will : 2
balanced node will -> the : 2
will the current -> the : 2
current the current -> node : 2
node will be -> of : 2
will be of -> the : 2
be of the -> balanced : 2
of the balanced -> the : 2
balanced the right -> child : 1
the right child -> of : 3
right child of -> current : 1
right child of -> balanced : 1
right child of -> the : 1
child of current -> will : 2
of current will -> be : 2
current will be -> balanced : 2
will be balanced -> left : 1
will be balanced -> right : 1
be balanced left -> if : 1
balanced left if -> balanced : 1
left if balanced -> node : 1
if balanced node -> has : 2
balanced node has -> left : 1
balanced node has -> right : 1
node has left -> point : 1
has left point -> the : 1
left point the -> parent : 1
point the parent -> to : 2
the parent to -> the : 2
parent to the -> current : 2
if the left -> child : 1
the left child -> of : 3
left child of -> balanced : 1
left child of -> current : 1
left child of -> key : 1
child of balanced -> will : 2
of balanced will -> be : 2
balanced will be -> the : 2
be the current -> refresh : 2
the current refresh -> the : 2
current refresh the -> refresh : 2
refresh the refresh -> the : 2
the refresh the -> balanced : 2
refresh the balanced -> return : 2
the balanced return -> return : 2
balanced return return -> the : 1
balanced return return -> will : 1
a left create -> a : 1
left create a -> new : 1
balanced the left -> child : 1
be balanced right -> if : 1
balanced right if -> balanced : 1
right if balanced -> node : 1
node has right -> point : 1
has right point -> the : 1
right point the -> parent : 1
if the right -> child : 1
return return will -> use : 1
return will use -> the : 1
use the preceding -> and : 1
the preceding and -> operations : 1
preceding and operations -> in : 1
and operations in -> the : 1
the upcoming and -> operations : 1
upcoming and operations -> a : 1
and operations a -> new : 1
new a new -> key : 1
key into an -> avl : 1
into an avl -> tree : 1
an avl tree -> is : 4
tree is similar -> to : 2
similar to inserting -> a : 1
to inserting a -> new : 1
a the difference -> is : 1
difference is that -> we : 1
check the balance -> of : 1
check the balance -> after : 1
the balance of -> the : 1
balance of the -> inserted : 1
of the inserted -> the : 1
the inserted the -> parent : 1
inserted the parent -> as : 1
the parent as -> we : 1
parent as we -> discussed : 1
have the formula -> to : 1
the formula to -> make : 1
the formula to -> find : 1
formula to make -> a : 1
a balanced tree -> by : 1
balanced tree by -> balancing : 1
tree by balancing -> the : 1
by balancing the -> left : 1
balancing the left -> and : 1
and right after -> we : 1
right after we -> can : 1
can decide if -> we : 1
decide if we -> have : 1
have to rotate -> it : 1
to rotate it -> left : 1
rotate it left -> or : 1
it left or -> the : 1
left or the -> implementation : 1
or the implementation -> of : 1
operation in an -> avl : 1
in an avl -> tree : 2
in an avl -> the : 1
tree is as -> int : 1
as int if -> avl : 1
int if avl -> tree : 1
if avl tree -> create : 1
avl tree create -> a : 1
tree create a -> new : 1
new node if -> node : 1
node if node -> new : 1
if node new -> if : 1
to left get -> the : 1
left get the -> int : 1
get the int -> balance : 2
the int balance -> if : 2
int balance if -> left : 2
balance if left -> if : 2
if left if -> get : 2
left if get -> left : 2
if get left -> int : 2
get left int -> if : 2
left int if -> node : 2
int if node -> node : 4
if node node -> if : 2
if node node -> refresh : 2
node if right -> else : 2
if right else -> if : 2
else if get -> right : 2
if get right -> int : 2
get right int -> if : 2
right int if -> node : 2
node node refresh -> return : 2
node refresh return -> the : 2
refresh return the -> updated : 2
the updated avl -> return : 2
updated avl return -> the : 1
updated avl return -> to : 1
avl return the -> implementation : 1
of operation of -> the : 1
of operation of -> an : 1
operation of the -> avl : 1
operation of the -> we : 1
operation of the -> algorithm : 1
of the avl -> tree : 1
to operation of -> the : 1
is the which -> is : 1
that the height -> is : 1
height is always -> balanced : 1
is always balanced -> in : 1
always balanced in -> an : 1
balanced in an -> avl : 1
an avl the -> height : 1
avl the height -> will : 1
the height will -> always : 1
height will always -> the : 1
will always the -> time : 1
always the time -> complexity : 1
operation of an -> avl : 1
of an avl -> tree : 1
tree is where -> is : 1
of elements of -> the : 2
of the a -> given : 1
of the a -> a : 2
the a given -> a : 1
a given a -> key : 1
given a key -> in : 1
key in an -> avl : 1
tree is also -> the : 1
same as removing -> a : 1
a we also -> need : 1
the balance after -> removing : 1
balance after removing -> the : 1
after removing the -> here : 1
removing the here -> is : 1
the here is -> the : 1
the avl which -> has : 1
avl which has -> been : 1
which has been -> updated : 1
has been updated -> with : 1
been updated with -> balance : 1
updated with balance -> int : 1
with balance int -> the : 1
balance int the -> given : 1
found in avl -> if : 1
in avl if -> return : 1
avl if return -> target : 1
search to only -> perform : 1
to only perform -> rotation : 1
only perform rotation -> if : 1
perform rotation if -> node : 1
rotation if node -> is : 1
if node is -> not : 1
node is not -> if : 1
not if get -> the : 1
if get the -> int : 1
avl return to -> operation : 1
return to operation -> in : 1
the avl the -> time : 1
avl the time -> complexity : 1
the tree since -> we : 1
tree since we -> can : 1
tree is avl -> we : 1
is avl we -> will : 1
avl we will -> have : 1
have the avl -> class : 1
the avl class -> as : 1
avl class as -> avl : 1
class as avl -> public : 1
as avl public -> bstnode : 1
avl public bstnode -> int : 1
public bstnode int -> bstnode : 1
bstnode int bstnode -> bstnode : 1
bstnode int bstnode -> int : 1
declaration we derive -> class : 1
we derive class -> from : 1
derive class from -> which : 1
class from which -> we : 1
from which we -> discussed : 1
discussed we just -> need : 1
need to define -> and : 1
to define and -> since : 1
define and since -> we : 1
have to maintain -> the : 2
to maintain the -> we : 1
to maintain the -> sorted : 1
maintain the we -> need : 1
to use and -> are : 1
use and are -> now : 1
and are now -> going : 1
are now going -> to : 1
now going to -> balance : 1
going to balance -> our : 1
to balance our -> preceding : 1
balance our preceding -> skewed : 1
our preceding skewed -> left : 1
preceding skewed left -> bst : 1
left bst tree -> example : 1
bst tree example -> which : 1
tree example which -> contains : 1
example which contains -> the : 1
contains the following -> and : 1
the following and -> to : 1
following and to -> create : 1
and to create -> an : 1
create an avl -> first : 1
an avl first -> we : 1
avl first we -> have : 1
first we have -> to : 2
have to instantiate -> an : 1
to instantiate an -> class : 1
instantiate an class -> instance : 1
an class instance -> as : 1
class instance as -> instantiate : 1
instance as instantiate -> bst : 1
as instantiate bst -> avltree : 1
instantiate bst avltree -> new : 1
bst avltree new -> we : 1
avltree new we -> insert : 1
new we insert -> the : 1
new we insert -> a : 1
insert the first -> which : 1
is as insert -> first : 1
as insert first -> we : 1
insert first we -> insert : 1
first we insert -> key : 1
we insert key -> the : 1
insert key the -> tree : 1
key the tree -> will : 1
the tree will -> look : 1
tree will look -> as : 1
will look as -> add : 1
look as add -> key : 1
as add key -> we : 1
as add key -> it : 2
as add key -> next : 1
add key we -> will : 1
key we will -> insert : 1
we will insert -> key : 1
will insert key -> when : 1
insert key when -> the : 1
key when the -> key : 1
when the key -> is : 1
key is the -> tree : 1
is the tree -> becomes : 1
the tree becomes -> unbalance : 1
the tree becomes -> unbalanced : 1
the tree becomes -> will : 1
tree becomes unbalance -> since : 1
becomes unbalance since -> will : 1
unbalance since will -> be : 1
since will be -> a : 1
be a child -> of : 1
a child of -> to : 1
child of to -> keep : 1
of to keep -> it : 1
to keep it -> we : 1
keep it we -> will : 1
we will rotate -> it : 1
will rotate it -> right : 1
rotate it right -> the : 1
it right the -> the : 1
right the the -> code : 1
be as add -> key : 3
add key it -> will : 3
key it will -> rotate : 3
it will rotate -> right : 3
will rotate right -> the : 3
rotate right the -> balance : 3
right the balance -> we : 1
right the balance -> last : 1
right the balance -> a : 1
the balance we -> insert : 1
balance we insert -> into : 1
we insert into -> the : 1
insert into the -> after : 1
into the after -> inserting : 1
the after inserting -> the : 1
after inserting the -> the : 1
inserting the the -> tree : 1
the the tree -> is : 1
the the tree -> becomes : 2
tree is still -> balanced : 1
is still balanced -> since : 1
still balanced since -> the : 1
balanced since the -> difference : 1
since the difference -> between : 1
height and right -> height : 1
and right height -> is : 1
height is this -> the : 1
is this the -> code : 1
this the code -> should : 1
add key next -> key : 1
key next key -> is : 1
next key is -> when : 1
key is when -> we : 2
insert the the -> tree : 2
tree becomes unbalanced -> will : 1
becomes unbalanced will -> be : 1
unbalanced will be -> the : 1
be the parent -> of : 1
parent of and -> the : 1
and the parent -> of : 1
parent of will -> be : 1
will be please -> see : 1
be please see -> the : 1
the following add -> key : 1
following add key -> it : 1
the balance last -> key : 1
balance last key -> is : 1
last key is -> when : 1
tree becomes will -> become : 1
becomes will become -> the : 1
will become the -> key : 1
become the key -> will : 1
the key will -> be : 1
key will be -> the : 2
be the left -> child : 1
child of key -> will : 1
of key will -> be : 1
be the right -> child : 1
child of the -> which : 1
the balance a -> binary : 1
balance a binary -> heap : 1
binary heap is -> a : 1
is a completely -> binary : 1
a completely binary -> tree : 1
completely binary tree -> that : 1
binary tree that -> is : 1
tree that is -> usually : 1
that is usually -> used : 1
used to implement -> a : 1
a priority please -> look : 1
priority please look -> at : 1
following binary tree -> which : 1
binary tree which -> is : 1
tree which is -> representing : 1
which is representing -> the : 1
is representing the -> priority : 1
representing the priority -> we : 1
the priority we -> can : 1
the priority we -> will : 1
priority we can -> each : 1
we can each -> node : 1
can each node -> has : 1
each node has -> its : 1
node has its -> own : 1
its own key -> and : 1
own key and -> also : 1
key and also -> a : 1
and also a -> number : 1
also a number -> below : 1
a number below -> each : 1
number below each -> node : 1
below each node -> to : 1
each node to -> indicate : 1
node to indicate -> the : 1
indicate the priority -> of : 1
the priority of -> the : 1
priority of the -> element : 1
the element this -> the : 1
element this the -> maximum : 1
this the maximum -> element : 1
maximum element has -> higher : 1
element has higher -> the : 1
has higher the -> priority : 1
higher the priority -> queue : 1
priority queue is -> usually : 1
queue is usually -> represented : 1
is usually represented -> in : 1
usually represented in -> so : 1
represented in so -> we : 1
following array as -> a : 1
as a representation -> of : 1
a representation of -> the : 1
representation of the -> preceding : 1
the preceding priority -> queue : 1
preceding priority queue -> create : 1
priority queue create -> a : 1
binary heap in -> we : 1
heap in we -> will : 1
will have which -> will : 1
have which will -> be : 1
will be increased -> when : 1
be increased when -> an : 1
increased when an -> element : 1
is inserted and -> will : 1
inserted and will -> be : 1
will be decreased -> when : 1
be decreased when -> an : 1
decreased when an -> element : 1
element is there -> are : 1
is there are -> four : 1
are four basic -> operations : 1
four basic operations -> in : 3
four basic operations -> and : 1
in a priority -> and : 1
a priority and -> they : 1
priority and they -> are : 1
are as is -> used : 1
as is used -> to : 1
used to check -> whether : 1
whether the queue -> is : 2
queue is similar -> to : 1
operation in a -> queue : 3
in a queue -> data : 3
a queue data -> is : 3
queue data is -> used : 3
data is used -> to : 3
into the similar -> to : 1
fetch the element -> with : 2
the element with -> the : 2
the element with -> given : 2
element with the -> greatest : 2
with the greatest -> similar : 1
with the greatest -> order : 1
the greatest similar -> to : 1
greatest similar to -> operation : 1
the greatest order -> before : 1
greatest order before -> removing : 1
order before removing -> it : 1
before removing it -> from : 1
removing it from -> the : 1
from the discuss -> these : 1
the discuss these -> operations : 1
discuss these operations -> further : 1
these operations further -> in : 1
operations further in -> the : 1
upcoming are going -> use : 1
are going use -> container : 1
going use container -> in : 1
use container in -> the : 1
container in the -> implementation : 1
in the implementation -> of : 2
implementation of heap -> since : 1
implementation of heap -> is : 1
of heap since -> the : 1
heap since the -> binary : 1
since the binary -> heap : 1
the binary heap -> developed : 1
binary heap developed -> starts : 1
heap developed starts -> from : 1
developed starts from -> index : 1
starts from index -> while : 1
starts from index -> we : 1
from index while -> the : 1
index while the -> vector : 1
while the vector -> container : 1
the vector container -> starts : 1
vector container starts -> from : 1
container starts from -> index : 1
from index we -> use : 1
index we use -> index : 1
we use index -> in : 1
use index in -> the : 1
index in the -> vector : 1
the vector instead -> filling : 1
vector instead filling -> index : 1
instead filling index -> with : 1
filling index with -> to : 1
index with to -> indicate : 1
with to indicate -> that : 1
indicate that not -> if : 1
that not if -> the : 1
not if the -> heap : 1
heap is variable -> can : 1
is variable can -> be : 1
variable can be -> used : 1
used to indicate -> whether : 1
indicate whether or -> not : 1
not the heap -> is : 1
heap is we -> just : 1
check if to -> determine : 1
if to determine -> that : 1
to determine that -> the : 1
determine that the -> heap : 1
that the heap -> is : 1
heap is the -> following : 1
following is an -> implementation : 1
is an implementation -> of : 1
an implementation of -> heap : 1
of heap is -> empty : 1
heap is empty -> if : 1
is empty if -> heapsize : 1
empty if heapsize -> return : 1
if heapsize return -> heapsize : 1
heapsize return heapsize -> preceding : 1
return heapsize preceding -> sample : 1
heapsize preceding sample -> code : 1
preceding sample code -> will : 1
sample code will -> run : 1
code will run -> on : 1
will run on -> since : 1
run on since -> just : 1
on since just -> simply : 1
since just simply -> getting : 1
just simply getting -> a : 1
simply getting a -> new : 1
getting a new -> element : 1
new element will -> be : 1
be inserted in -> the : 1
last we need -> to : 1
need to shift -> the : 2
shift the element -> up : 1
the element up -> to : 1
element up to -> ensure : 1
up to ensure -> that : 1
ensure that it -> will : 1
the right place -> based : 1
right place based -> on : 1
place based on -> the : 1
the to do -> we : 2
do we need -> to : 2
do we need -> hash : 1
to create which -> will : 1
create which will -> swap : 1
which will swap -> two : 1
will swap two -> adjacent : 1
swap two adjacent -> elements : 1
two adjacent elements -> so : 1
adjacent elements so -> that : 1
that the vector -> will : 1
the vector will -> be : 1
vector will be -> in : 1
be as void -> do : 1
as void do -> nothing : 1
void do nothing -> in : 1
do nothing in -> if : 1
nothing in if -> if : 1
in if if -> swap : 1
if if swap -> recurse : 1
if swap recurse -> until : 1
swap recurse until -> we : 1
recurse until we -> have : 1
until we have -> we : 1
we have we -> can : 1
have we can -> create : 1
can create operation -> as : 1
create operation as -> add : 1
operation as add -> a : 1
as add a -> new : 1
element in if -> store : 1
element in if -> the : 1
in if store -> the : 1
if store the -> key : 1
the vector last -> shift : 1
vector last shift -> we : 1
last shift we -> can : 1
shift we can -> see : 1
preceding it invokes -> operation : 1
it invokes operation -> as : 1
invokes operation as -> since : 1
operation as since -> operation : 1
as since operation -> has : 1
since operation has -> a : 1
operation has a -> time : 1
has a time -> complexity : 1
has a time -> of : 1
time complexity operation -> will : 1
complexity operation will -> also : 1
operation will also -> be : 1
will also be -> the : 1
also be the -> the : 1
be the the -> maximum : 1
the maximum value -> is : 1
the maximum value -> in : 1
the maximum value -> using : 1
maximum value is -> quite : 1
maximum value is -> in : 1
value is quite -> simple : 1
is quite simple -> since : 1
quite simple since -> it : 1
simple since it -> is : 1
since it is -> stored : 1
it is stored -> in : 1
the in other -> in : 1
in other in -> index : 1
other in index -> to : 1
in index to -> do : 1
index to do -> we : 1
to return return -> return : 1
return return a -> simple : 1
return return a -> t : 1
return a simple -> the : 1
a simple the -> time : 1
simple the time -> complexity : 1
complexity for operation -> is : 1
for operation is -> the : 1
the maximum remove -> the : 1
maximum remove the -> maximum : 1
remove the maximum -> element : 1
maximum element from -> the : 1
from the priority -> we : 1
priority we will -> need : 1
we will need -> to : 1
will need to -> use : 1
to use after -> we : 1
use after we -> remove : 1
after we remove -> the : 1
element in we -> will : 1
we will place -> the : 1
will place the -> minimum : 1
place the minimum -> value : 1
the minimum value -> in : 1
the minimum value -> down : 1
minimum value in -> root : 1
value in root -> to : 1
in root to -> replace : 1
root to replace -> the : 1
to replace the -> maximum : 1
to replace the -> two : 1
replace the maximum -> element : 1
maximum element which -> was : 1
element which was -> just : 1
which was just -> we : 1
was just we -> need : 1
just we need -> to : 1
shift the minimum -> value : 1
minimum value down -> to : 1
value down to -> the : 1
down to the -> leaf : 1
to the leaf -> of : 1
the leaf of -> the : 1
leaf of the -> to : 1
need to also -> create : 1
to also create -> as : 1
also create as -> for : 1
create as for -> just : 1
as for just -> do : 1
for just do -> initialize : 1
just do initialize -> int : 1
do initialize int -> swapid : 1
initialize int swapid -> compare : 1
int swapid compare -> with : 1
swapid compare with -> left : 1
swapid compare with -> right : 1
compare with left -> if : 1
with left if -> if : 1
left if if -> heapsize : 1
if if heapsize -> swapid : 2
if heapsize swapid -> compare : 1
if heapsize swapid -> swap : 1
heapsize swapid compare -> with : 1
compare with right -> if : 1
with right if -> if : 1
right if if -> heapsize : 1
heapsize swapid swap -> with : 1
swapid swap with -> the : 1
with the larger -> of : 1
the larger of -> the : 1
larger of the -> two : 1
the two if -> swap : 1
two if swap -> downwards : 1
if swap downwards -> with : 1
swap downwards with -> the : 1
downwards with the -> of : 1
the two recurse -> until : 1
two recurse until -> the : 1
recurse until the -> we : 1
until the we -> discussed : 1
discussed we will -> swap : 1
we will swap -> the : 1
swap the last -> element : 1
last element of -> root : 1
element of root -> and : 1
of root and -> then : 1
root and then -> shift : 1
and then shift -> down : 1
then shift down -> here : 1
shift down here -> is : 1
down here is -> the : 1
implementation of maximum -> value : 1
of maximum value -> is : 1
is in int -> maxval : 1
in int maxval -> swap : 1
int maxval swap -> with : 1
maxval swap with -> the : 1
the last existing -> fix : 1
last existing fix -> heap : 1
existing fix heap -> property : 1
fix heap property -> return : 1
heap property return -> the : 1
property return the -> maximum : 1
return the maximum -> return : 1
the maximum return -> we : 1
maximum return we -> can : 1
implementation is operation -> invokes : 1
is operation invokes -> the : 1
operation invokes the -> time : 1
invokes the time -> complexity : 1
be the a -> binary : 1
a priority we -> should : 1
priority we should -> have : 1
we should have -> class : 1
should have class -> implementation : 1
have class implementation -> as : 1
class implementation as -> int : 1
implementation as int -> three : 1
as int three -> helper : 1
int three helper -> navigation : 1
three helper navigation -> int : 1
helper navigation int -> return : 1
navigation int return -> int : 1
int return int -> return : 2
return int return -> int : 1
return int return -> void : 1
int return void -> void : 1
return void void -> bool : 1
void bool void -> int : 1
void bool void -> we : 1
bool void int -> int : 1
int int are -> going : 1
int are going -> to : 1
create a priority -> queue : 1
queue using this -> data : 1
this data the -> following : 1
snippet for data -> instantiate : 1
for data instantiate -> priority : 1
data instantiate priority -> priorityqueue : 1
instantiate priority priorityqueue -> new : 1
priority priorityqueue new -> we : 1
priorityqueue new we -> insert : 1
new we can -> check : 1
new we can -> use : 1
can check whether -> the : 1
queue is empty -> by : 2
is empty by -> using : 2
empty by using -> the : 1
empty by using -> as : 1
following code check -> if : 1
code check if -> the : 1
queue is it -> should : 1
is it should -> be : 1
should be queue -> b : 1
be queue b -> cout : 1
queue b cout -> cout : 1
cout cout insert -> a : 1
cout insert a -> new : 1
following code insert -> a : 1
code insert a -> new : 1
a new to -> we : 1
a new to -> the : 1
a new to -> prove : 1
new to we -> can : 1
we discussed and -> now : 1
discussed and now -> it : 1
and now it -> should : 1
now it should -> say : 1
it should say -> we : 1
should say we -> insert : 1
say we insert -> three : 1
we insert three -> new : 1
insert three new -> elements : 1
three new elements -> as : 1
new elements as -> insert : 1
elements as insert -> others : 1
as insert others -> the : 1
insert others the -> maximum : 1
others the maximum -> value : 1
in the queue -> is : 1
queue is to -> ensure : 1
is to ensure -> we : 1
to ensure we -> can : 1
ensure we can -> call : 1
we can call -> as : 1
can call as -> peek : 1
call as peek -> the : 1
as peek the -> maximum : 1
peek the maximum -> it : 1
the maximum it -> should : 1
maximum it should -> be : 1
should be we -> can : 1
we can extract -> the : 1
can extract the -> maximum : 1
extract the maximum -> value : 1
maximum value using -> the : 1
value using the -> as : 1
the as extract -> maximum : 1
as extract maximum -> if : 1
extract maximum if -> we : 1
maximum if we -> invoke : 1
we invoke operation -> it : 1
invoke operation it -> should : 1
operation it should -> return : 1
it should return -> the : 1
should return the -> full : 1
return the full -> code : 1
in file in -> if : 1
file in if -> we : 1
on the this -> we : 1
the this we -> discussed : 1
the this we -> have : 1
discussed the hierarchical -> data : 1
discussed the hierarchical -> tree : 1
the hierarchical data -> structure : 1
structure and stored -> information : 1
and stored information -> in : 1
stored information in -> the : 1
information in the -> form : 1
in the form -> of : 1
the form of -> a : 1
form of a -> we : 1
a we started -> our : 1
we started our -> discussion : 1
started our discussion -> by : 1
our discussion by -> creating : 1
discussion by creating -> a : 1
by creating a -> tree : 1
creating a tree -> from : 1
a tree from -> several : 1
tree from several -> and : 1
from several and -> then : 1
and then built -> a : 1
then built a -> binary : 1
built a binary -> search : 1
search tree where -> we : 1
tree where we -> can : 1
we can search -> for : 1
we can search -> if : 1
can search for -> a : 1
for a given -> key : 1
given key we -> can : 1
can have a -> skewed : 1
can have a -> balanced : 1
skewed tree in -> a : 1
tree in a -> binary : 1
binary search and -> so : 1
search and so -> we : 1
so we build -> an : 1
we build an -> avl : 1
build an avl -> which : 1
an avl which -> can : 1
avl which can -> balance : 1
which can balance -> all : 1
can balance all -> of : 1
balance all of -> the : 1
the elements so -> that : 1
have a balanced -> binary : 1
have a balanced -> futher : 1
balanced binary another -> tree : 1
binary another tree -> data : 1
another tree data -> structure : 1
tree data structure -> implementation : 1
data structure implementation -> is : 1
structure implementation is -> the : 1
implementation is the -> binary : 1
is the binary -> which : 1
the binary which -> we : 1
binary which we -> used : 1
which we used -> to : 1
we used to -> build : 1
build a priority -> where : 1
a priority where -> we : 1
priority where we -> can : 1
can access an -> element : 1
access an element -> based : 1
based on its -> the : 1
on its the -> next : 1
its the next -> we : 1
construct and implement -> the : 1
implement the hash -> structure : 1
the hash structure -> in : 1
hash structure in -> algorithm : 1
structure in algorithm -> is : 1
in algorithm is -> the : 1
difference between class -> in : 1
between class in -> a : 1
class in a -> binary : 2
binary tree and -> class : 1
tree and class -> in : 1
and class in -> a : 1
binary search are -> the : 1
search are the -> advantages : 1
are the advantages -> of : 1
the advantages of -> the : 1
advantages of the -> binary : 1
search tree over -> the : 1
tree over the -> binary : 1
over the binary -> can : 1
the binary can -> the : 1
binary can the -> avl : 1
can the avl -> tree : 1
avl tree have -> a : 1
tree have a -> balanced : 1
a balanced futher -> please : 1
balanced futher please -> visit : 1
futher please visit -> these : 1
please visit these -> a : 1
please visit these -> following : 1
visit these a -> value : 1
these a value -> to : 1
a hash the -> previous : 1
a hash the -> preceding : 1
hash the previous -> we : 1
the hierarchical tree -> data : 1
hierarchical tree data -> which : 1
tree data which -> is : 1
a data that -> stores : 1
data that stores -> data : 1
in a in -> this : 1
another data the -> hash : 1
data the hash -> which : 1
the hash which -> stores : 1
the hash which -> is : 2
hash which stores -> data : 1
which stores data -> based : 1
stores data based -> on : 1
data based on -> a : 1
on a the -> following : 1
a the following -> topics : 1
the following topics -> are : 1
following topics are -> discussed : 1
topics are discussed -> in : 1
are discussed in -> this : 1
in this hash -> a : 1
this hash a -> collision : 1
a collision in -> a : 1
collision in a -> hash : 3
chaining technique to -> handle : 1
chaining technique to -> the : 1
chaining technique to -> store : 1
technique to handle -> a : 2
to handle a -> an : 1
to handle a -> follow : 1
handle a an -> open : 1
a an open -> addressing : 1
an open addressing -> technique : 3
open addressing technique -> to : 1
open addressing technique -> all : 1
open addressing technique -> are : 1
open addressing technique -> stored : 1
open addressing technique -> just : 1
addressing technique to -> handle : 1
handle a follow -> along : 1
github at acquainted -> with : 1
at acquainted with -> hash : 1
with hash we -> want : 1
hash we want -> to : 1
want to store -> a : 1
store a collection -> of : 1
collection of for -> a : 1
of for a -> phone : 1
of for a -> chess : 1
for a phone -> and : 1
a phone and -> say : 1
phone and say -> we : 1
and say we -> have : 1
we have approximately -> in : 1
have approximately in -> previous : 1
approximately in previous -> we : 1
in previous we -> also : 1
previous we also -> discussed : 1
also discussed several -> data : 1
discussed several data -> and : 1
several data and -> here : 1
data and here -> we : 1
and here we -> can : 1
here we can -> consider : 1
we can consider -> using : 1
can consider using -> one : 1
consider using one -> of : 1
using one of -> we : 1
one of we -> can : 1
can use an -> array : 1
use an array -> or : 1
or a but -> we : 1
a but we -> have : 1
but we have -> to : 1
have to provide -> a : 1
to provide a -> million : 2
provide a million -> slots : 1
provide a million -> memory : 1
a million slots -> of : 1
million slots of -> data : 1
slots of data -> in : 1
to add some -> phone : 1
add some phone -> numbers : 1
some phone numbers -> we : 1
phone numbers we -> have : 1
phone numbers we -> will : 1
numbers we have -> to : 1
have to resize -> the : 1
to resize the -> the : 1
resize the the -> operation : 1
operation of searching -> will : 1
of searching will -> be : 1
searching will be -> since : 1
will be since -> we : 2
be since we -> have : 2
have to use -> a : 1
to use a -> linear : 1
to use a -> priority : 1
use a linear -> search : 1
search algorithm with -> time : 2
algorithm with time -> complexity : 2
with time complexity -> where : 1
with time complexity -> if : 1
time complexity where -> the : 1
complexity where the -> time : 1
the time consumption -> will : 1
time consumption will -> increase : 1
consumption will increase -> if : 1
will increase if -> we : 1
increase if we -> add : 1
if we add -> data : 1
we add data -> to : 1
add data to -> the : 1
data to the -> we : 1
data to the -> back : 1
data to the -> hash : 2
data to the -> implementation : 1
use a binary -> search : 1
time complexity if -> we : 2
complexity if we -> manage : 1
complexity if we -> have : 1
if we manage -> to : 1
we manage to -> sort : 1
manage to sort -> the : 1
sort the elements -> of : 1
the list containing -> the : 1
list containing the -> bunch : 1
list containing the -> inputted : 1
containing the bunch -> of : 1
bunch of phone -> the : 1
of phone the -> insert : 1
phone the insert -> operation : 1
the insert operation -> will : 1
insert operation will -> be : 1
maintain the sorted -> data : 1
the sorted data -> structure : 1
sorted data structure -> we : 1
structure we can -> choose : 1
can choose is -> the : 1
choose is the -> balanced : 1
is the balanced -> binary : 1
the balanced binary -> search : 1
binary search it -> can : 1
search it can -> give : 1
it can give -> us : 1
it can give -> an : 1
can give us -> a : 1
give us a -> moderate : 1
us a moderate -> time : 1
a moderate time -> since : 1
moderate time since -> it : 1
time since it -> will : 1
be to and -> remove : 1
to and remove -> the : 1
remove the it -> still : 1
the it still -> depends : 1
it still depends -> on : 1
still depends on -> the : 1
on the total -> number : 1
in small solve -> this : 1
small solve this -> we : 1
solve this we -> are : 2
solve this we -> need : 1
going to construct -> a : 1
a data this -> data : 1
data this data -> type : 1
type will have -> a : 1
have a to -> convert : 1
a to convert -> a : 1
convert a given -> big : 1
a given big -> phone : 1
given big phone -> number : 1
big phone number -> into : 1
phone number into -> a : 1
into a small -> integer : 1
a small integer -> by : 1
small integer by -> using : 1
integer by using -> a : 1
using a hash -> we : 1
using a hash -> if : 1
a hash we -> need : 1
a hash we -> will : 1
a hash we -> have : 1
hash we need -> to : 2
need to provide -> a : 1
a million memory -> we : 1
million memory we -> can : 1
memory we can -> determine : 1
we can determine -> a : 1
can determine a -> table : 1
determine a table -> size : 1
a table size -> for : 1
table size for -> the : 1
size for the -> hash : 1
for the hash -> we : 1
for the hash -> so : 1
the hash we -> will : 3
the hash we -> need : 1
the hash we -> can : 3
the hash we -> check : 1
hash we will -> map : 1
hash we will -> try : 1
hash we will -> implement : 1
hash we will -> have : 1
we will map -> the : 1
will map the -> integer : 1
map the integer -> value : 1
the integer value -> to : 1
integer value to -> the : 1
to the index -> of : 1
of the hash -> phone : 1
of the hash -> which : 1
of the hash -> table : 1
the hash phone -> number : 1
hash phone number -> usually : 1
phone number usually -> contains : 1
number usually contains -> at : 1
usually contains at -> least : 1
contains at least -> six : 1
contains at least -> one : 1
least six to -> seven : 1
six to seven -> for : 1
to seven for -> the : 1
seven for the -> sake : 1
for the sake -> of : 1
the sake of -> we : 1
sake of we -> will : 1
will use phone -> numbers : 1
use phone numbers -> in : 1
phone numbers in -> the : 1
numbers in the -> example : 1
in the example -> in : 1
the example in -> this : 1
example in this -> here : 1
in this here -> is : 1
list of phone -> numbers : 1
of phone numbers -> we : 1
numbers we will -> use : 1
will use in -> several : 1
use in several -> examples : 1
in several examples -> in : 1
several examples in -> upcoming : 1
examples in upcoming -> we : 1
in upcoming we -> can : 1
we have phone -> and : 1
we have phone -> number : 2
have phone and -> each : 1
phone and each -> number : 1
and each number -> is : 1
each number is -> owned : 1
number is owned -> by : 1
is owned by -> a : 1
owned by a -> person : 1
by a person -> as : 1
a person as -> stated : 1
person as stated -> in : 1
as stated in -> the : 1
going to store -> data : 1
data in and -> column : 1
in and column -> as : 1
and column as -> a : 1
column as a -> data : 1
a data pair -> in : 1
data pair in -> a : 1
pair in a -> hash : 1
hash table in -> the : 1
table in the -> upcoming : 1
the upcoming data -> in : 1
upcoming data in -> a : 1
hash the preceding -> we : 1
we have ten -> phone : 1
have ten phone -> number : 1
ten phone number -> to : 1
phone number to -> be : 1
number to be -> inserted : 1
inserted to a -> hash : 1
to a hash -> we : 1
try to store -> them : 1
to store them -> in : 1
them in a -> hash : 1
hash table which -> has : 1
table which has -> seven : 1
which has seven -> as : 1
has seven as -> we : 1
seven as we -> have : 1
discussed in preceding -> we : 1
in preceding we -> need : 1
need a hash -> function : 1
a hash function -> to : 1
hash function to -> get : 1
function to get -> a : 1
get a hash -> key : 2
a hash key -> from : 2
a hash key -> for : 4
a hash key -> is : 1
hash key from -> the : 2
hash key from -> hash : 6
from the phone -> number : 1
the phone number -> so : 1
the phone number -> by : 1
the phone number -> contains : 1
the phone number -> name : 1
the phone number -> we : 1
the phone number -> with : 1
the phone number -> will : 1
the phone number -> list : 3
phone number so -> it : 1
number so it -> can : 1
can be stored -> to : 1
be stored to -> the : 1
stored to the -> hash : 1
to the hash -> the : 1
to the hash -> it : 1
to the hash -> we : 1
to the hash -> which : 1
to the hash -> table : 2
the hash the -> hash : 1
the hash the -> implementation : 4
the hash the -> illustration : 1
hash the hash -> key : 1
the hash key -> can : 1
the hash key -> to : 2
the hash key -> is : 1
the hash key -> of : 4
the hash key -> has : 4
the hash key -> here : 2
the hash key -> we : 1
hash key can -> be : 1
key can be -> found : 1
be found by -> find : 1
found by find -> out : 1
by find out -> the : 1
out the remainder -> if : 1
out the remainder -> when : 1
the remainder if -> we : 1
remainder if we -> divide : 1
if we divide -> the : 1
we divide the -> phone : 2
divide the phone -> number : 2
phone number by -> the : 1
number by the -> total : 1
by the total -> slot : 1
the total slot -> of : 2
total slot of -> the : 1
total slot of -> table : 1
slot of the -> hash : 1
is please see -> the : 1
the following table -> which : 1
following table which -> contain : 1
table which contain -> the : 1
which contain the -> mapping : 1
contain the mapping -> of : 1
the mapping of -> hash : 1
mapping of hash -> key : 1
of hash key -> with : 1
hash key with -> the : 1
the preceding there -> are : 2
preceding there are -> several : 1
preceding there are -> bold : 1
are several data -> that : 1
several data that -> have : 1
data that have -> same : 1
that have same -> hash : 1
have same hash -> for : 1
same hash for -> key : 1
hash for key -> has : 1
for key has -> three : 1
key has three -> data : 1
three data and -> key : 1
data and key -> has : 1
and key has -> two : 1
key has two -> since : 1
has two since -> each : 1
two since each -> slot : 1
since each slot -> in : 1
each slot in -> the : 1
slot in the -> hash : 1
slot in the -> linear : 2
in the hash -> table : 10
in the hash -> it : 1
in the hash -> on : 1
in the hash -> we : 3
in the hash -> suppose : 1
in the hash -> the : 5
in the hash -> to : 1
the hash table -> can : 1
the hash table -> if : 1
the hash table -> point : 1
the hash table -> has : 2
the hash table -> must : 1
the hash table -> and : 1
the hash table -> is : 3
the hash table -> as : 1
the hash table -> a : 1
the hash table -> using : 1
the hash table -> itself : 1
the hash table -> each : 1
the hash table -> until : 1
the hash table -> even : 1
the hash table -> we : 1
the hash table -> data : 1
hash table can -> only : 1
table can only -> contain : 1
can only contain -> one : 1
only contain one -> this : 1
contain one this -> cannot : 1
one this cannot -> happen : 1
this cannot happen -> since : 1
cannot happen since -> called : 1
happen since called -> in : 1
since called in -> hash : 1
called in hash -> to : 1
in hash to -> solve : 1
hash to solve -> this : 1
to solve this -> we : 2
how to prevent -> the : 1
to prevent the -> collision : 1
to prevent the -> we : 1
prevent the collision -> in : 1
the collision in -> next : 1
collision in next -> we : 1
in next we -> have : 1
next we have -> discussed : 1
have discussed there -> will : 1
discussed there will -> be : 1
be a possibility -> that : 1
a possibility that -> one : 1
possibility that one -> key : 1
that one key -> is : 1
one key is -> used : 1
key is used -> by : 1
is used by -> two : 1
used by two -> values : 1
by two values -> or : 1
two values or -> since : 1
values or since -> we : 1
or since we -> map : 1
since we map -> a : 1
we map a -> big : 1
map a big -> key : 1
a big key -> to : 1
big key to -> a : 1
key to a -> small : 1
to a small -> this : 1
a small this -> situation : 1
small this situation -> is : 1
this situation is -> called : 1
situation is called -> a : 1
called a where -> there : 1
a where there -> is : 1
where there is -> another : 1
there is another -> key : 1
is another key -> that : 1
another key that -> will : 1
key that will -> be : 1
will be mapped -> to : 1
be mapped to -> an : 1
mapped to an -> occupied : 1
to an occupied -> to : 1
an occupied to -> solve : 1
occupied to solve -> this : 1
need a collision -> handling : 1
a collision handling -> and : 1
a collision handling -> technique : 1
collision handling and -> here : 1
handling and here -> are : 1
and here are -> the : 1
are the ways -> to : 1
the ways to -> handle : 1
ways to handle -> is : 1
to handle is -> a : 1
handle is a -> technique : 1
is a technique -> to : 2
technique to point -> each : 1
to point each -> cell : 1
point each cell -> in : 1
each cell in -> a : 1
each cell in -> the : 2
cell in a -> hash : 1
hash table to -> a : 1
table to a -> chaining : 1
to a chaining -> or : 1
to a chaining -> node : 1
a chaining or -> a : 1
chaining or a -> linked : 1
or a linked -> the : 1
a linked the -> same : 1
linked the same -> hash : 1
the same hash -> key : 1
the same hash -> we : 1
same hash key -> for : 1
hash key for -> a : 1
hash key for -> the : 2
hash key for -> each : 2
hash key for -> an : 1
key for a -> different : 1
for a different -> value : 1
a different value -> will : 1
different value will -> be : 1
will be stored -> in : 7
in the chaining -> is : 1
the chaining is -> a : 1
chaining is a -> technique : 1
chaining is a -> collision : 1
technique to store -> all : 2
to store all -> elements : 1
to store all -> element : 1
store all elements -> in : 1
all elements in -> the : 6
all elements in -> table : 1
hash table if -> a : 1
table if a -> collision : 1
if a collision -> is : 2
a collision is -> about : 2
collision is about -> to : 2
is about to -> the : 1
is about to -> based : 1
about to the -> technique : 1
to the technique -> will : 1
the technique will -> find : 1
technique will find -> another : 1
will find another -> slot : 1
find another slot -> by : 1
another slot by -> performing : 1
slot by performing -> some : 1
by performing some -> calculation : 1
performing some calculation -> to : 1
some calculation to -> ensure : 1
calculation to ensure -> a : 1
ensure a collision -> will : 1
a collision will -> not : 2
a collision will -> since : 1
collision will not -> implement : 1
collision will not -> since : 1
will not implement -> all : 1
not implement all -> collision : 1
implement all collision -> handling : 1
all collision handling -> techniques : 1
collision handling techniques -> in : 1
handling techniques in -> a : 1
techniques in a -> hash : 1
hash table by -> developing : 1
table by developing -> several : 1
by developing several -> adts : 1
developing several adts -> in : 1
several adts in -> a : 1
adts in a -> separate : 1
in a separate -> chaining : 1
separate chaining is -> a : 1
is a collision -> handling : 1
collision handling technique -> that : 1
handling technique that -> will : 1
technique that will -> make : 1
that will make -> each : 1
will make each -> cell : 1
make each cell -> in : 1
cell in the -> hash : 2
hash table point -> to : 1
table point to -> a : 1
a chaining node -> containing : 1
chaining node containing -> values : 1
node containing values -> with : 1
containing values with -> the : 1
values with the -> same : 1
same hash we -> are : 1
hash we are -> going : 1
create an adt -> named : 1
an adt named -> to : 1
adt named to -> handle : 1
named to handle -> the : 1
handle the preceding -> phone : 1
the preceding phone -> number : 1
preceding phone number -> since : 1
phone number since -> the : 1
number since the -> phone : 1
since the phone -> number : 1
phone number contains -> only : 1
number contains only -> it : 1
contains only it -> will : 1
only it will -> be : 1
and the owner -> of : 1
the owner of -> the : 1
owner of the -> phone : 1
of the phone -> number : 1
phone number name -> will : 1
number name will -> be : 1
name will be -> stored : 1
the data if -> the : 1
data if the -> phone : 1
if the phone -> number : 1
phone number we -> have : 1
number we have -> are : 1
we have are -> saved : 1
have are saved -> as : 1
are saved as -> we : 1
remove the dash -> character : 1
the dash character -> will : 1
dash character will -> be : 1
character will be -> four : 1
character will be -> the : 1
will be four -> basic : 1
be four basic -> operations : 1
basic operations and -> they : 1
operations and they -> is : 1
and they is -> used : 1
they is used -> to : 1
the hash it -> passes : 1
the hash it -> will : 1
hash it passes -> an : 1
it passes an -> as : 1
passes an as -> a : 1
an as a -> key : 1
as a key -> and : 1
a key and -> a : 1
key and a -> as : 1
and a as -> a : 1
a as a -> it : 1
as a it -> then : 1
as a it -> almost : 1
a it then -> finds : 1
it then finds -> a : 1
then finds a -> hash : 1
finds a hash -> key : 1
key for the -> inputted : 2
for the inputted -> the : 1
for the inputted -> we : 1
the inputted the -> inputted : 1
inputted the inputted -> key : 1
the inputted key -> is : 5
the inputted key -> and : 1
the inputted key -> in : 1
the inputted key -> we : 1
inputted key is -> found : 1
inputted key is -> if : 1
inputted key is -> not : 1
inputted key is -> we : 2
key is found -> in : 1
hash it will -> update : 1
it will update -> the : 1
will update the -> value : 1
update the value -> of : 2
if no key -> is : 1
no key is -> it : 1
key is it -> will : 1
it will append -> a : 1
will append a -> new : 1
append a new -> node : 1
to the linked -> list : 2
linked list containing -> the : 1
containing the inputted -> key : 1
inputted key and -> inputted : 1
key and inputted -> is : 1
and inputted is -> used : 1
inputted is used -> to : 1
of the inputted -> it : 1
of the inputted -> similar : 1
the inputted it -> will : 1
inputted it will -> return : 1
the value if -> the : 1
value if the -> inputted : 1
if the inputted -> key : 5
key is if -> it : 1
key is if -> the : 1
is if it -> will : 1
if it will -> return : 1
will return an -> empty : 1
return an empty -> is : 1
an empty is -> used : 1
empty is used -> to : 1
used to delete -> an : 1
to delete an -> existing : 1
delete an existing -> inputted : 1
an existing inputted -> if : 1
existing inputted if -> the : 1
inputted if the -> inputted : 3
is not it -> will : 1
not it will -> do : 1
it will do -> is : 1
will do is -> used : 1
do is used -> to : 1
the user if -> the : 1
user if the -> hash : 1
if the hash -> table : 3
if the hash -> key : 4
hash table has -> at : 1
hash table has -> a : 1
table has at -> least : 1
one element or -> if : 1
element or if -> there : 1
or if there -> is : 1
is no it -> will : 1
no it will -> return : 1
will return it -> returns : 1
return it returns -> we : 1
it returns we -> will : 1
returns we will -> have : 1
will have four -> we : 1
have four we -> are : 1
four we are -> going : 1
going to have -> the : 1
following class int -> void : 1
class int void -> void : 1
void bool we -> can : 1
bool we can -> see : 1
have a declaration -> to : 1
a declaration to -> generate : 1
declaration to generate -> a : 1
to generate a -> hash : 1
generate a hash -> key : 1
key for each -> inputted : 1
key for each -> do : 1
for each inputted -> and : 1
each inputted and -> since : 1
inputted and since -> we : 1
need a chaining -> we : 1
a chaining we -> declare : 1
chaining we declare -> a : 1
we declare a -> in : 1
declare a in -> data : 1
a in data -> type : 1
data type containing -> a : 1
type containing a -> hash : 1
containing a hash -> we : 1
hash we have -> discussed : 1
have discussed a -> hash : 1
discussed a hash -> key : 1
hash key is -> obtained : 1
hash key is -> we : 1
key is obtained -> by : 1
is obtained by -> finding : 1
obtained by finding -> out : 1
by finding out -> the : 1
finding out the -> remainder : 1
the remainder when -> we : 1
remainder when we -> divide : 1
when we divide -> the : 1
phone number with -> the : 1
number with the -> total : 1
with the total -> slot : 1
slot of table -> to : 1
of table to -> generate : 1
table to generate -> the : 1
to generate the -> hash : 1
generate the hash -> we : 1
we will implement -> the : 1
will implement the -> function : 1
implement the function -> as : 1
function as return -> key : 1
as return key -> we : 1
return key we -> have : 1
key we have -> data : 1
we have data -> we : 1
have data we -> define : 1
data we define -> as : 1
we define as -> by : 1
define as by -> using : 1
as by using -> this : 1
using this we -> can : 1
key for an -> inputted : 1
for an inputted -> key : 1
an inputted key -> in : 1
inputted key in -> the : 2
in the operations -> of : 1
the since the -> implementation : 1
since the implementation -> of : 1
of the function -> is : 3
of the function -> for : 1
of the function -> we : 1
of the function -> will : 2
function is quite -> the : 1
is quite the -> time : 1
quite the time -> complexity : 1
will be for -> all : 1
be for all -> an : 1
for all an -> insert : 1
all an insert -> a : 1
a new pair -> of : 1
new pair of -> and : 1
of and to -> the : 1
and to the -> hash : 1
and to the -> steps : 1
out a hash -> key : 1
the inputted we -> traverse : 1
inputted we traverse -> to : 1
we traverse to -> chaining : 1
traverse to chaining -> node : 1
to chaining node -> in : 1
chaining node in -> the : 2
chaining node in -> selected : 2
chaining node in -> cell : 1
in the cell -> pointed : 2
the cell pointed -> by : 2
cell pointed by -> the : 2
cell pointed by -> hash : 1
by the hash -> key : 2
hash key to -> find : 2
to find if -> the : 2
find if the -> the : 1
find if the -> if : 1
if the the -> given : 1
if the the -> smallest : 1
the the given -> new : 1
the given new -> pair : 1
given new pair -> data : 1
new pair data -> for : 1
pair data for -> if : 1
data for if -> the : 1
for if the -> hash : 1
for if the -> key : 2
key is we -> just : 3
key is we -> update : 1
go to cell -> then : 1
to cell then -> traverse : 1
cell then traverse -> to : 1
then traverse to -> the : 1
traverse to the -> list : 1
traverse to the -> end : 2
traverse to the -> linked : 1
the list in -> that : 1
list in that -> cell : 1
in that cell -> to : 1
in that cell -> matches : 1
that cell to -> find : 1
cell to find -> out : 1
out the inputted -> if : 1
the inputted if -> the : 2
is we update -> the : 1
we update the -> value : 1
value of that -> if : 1
of that if -> the : 1
that if the -> key : 1
not we add -> the : 1
add the pair -> of : 1
the pair of -> data : 1
pair of data -> to : 1
of data to -> the : 1
to the back -> of : 1
implementation of operations -> should : 1
of operations should -> be : 1
operations should be -> as : 1
as string bool -> iskeyfound : 1
string bool iskeyfound -> get : 1
bool iskeyfound get -> hash : 1
iskeyfound get hash -> key : 1
get hash key -> from : 6
key from hash -> int : 6
from hash int -> hashkey : 3
from hash int -> hashindex : 3
hash int hashkey -> iterate : 2
hash int hashkey -> get : 1
int hashkey iterate -> through : 2
hashkey iterate through -> chaining : 2
iterate through chaining -> node : 2
through chaining node -> in : 2
node in selected -> for : 2
in selected for -> if : 2
selected for if -> the : 2
key is update -> the : 1
is update the -> if : 1
update the if -> iskeyfound : 1
the if iskeyfound -> if : 1
if iskeyfound if -> key : 1
iskeyfound if key -> is : 1
is not append -> at : 1
not append at -> the : 1
append at the -> if : 1
at the if -> we : 1
if we can -> see : 1
preceding code because -> is : 1
code because is -> similar : 1
because is similar -> to : 1
have an time -> complexity : 3
case if no -> hash : 1
if no hash -> key : 1
no hash key -> stored : 1
hash key stored -> before : 1
key stored before -> in : 1
stored before in -> the : 1
before in the -> hash : 1
the hash on -> average : 1
hash on average -> and : 1
on average and -> in : 2
average and in -> the : 2
the worst we -> will : 1
worst we will -> have : 1
to traverse to -> the : 3
to traverse to -> all : 1
the a a -> we : 2
a a we -> will : 1
a a we -> erase : 1
a we will -> get : 1
value of an -> inputted : 1
of an inputted -> to : 1
an inputted to -> do : 1
inputted to do -> first : 1
to do first -> we : 1
do first we -> need : 1
first we need -> to : 1
out the hash -> key : 1
hash key of -> the : 2
hash key of -> that : 1
hash key of -> collision : 1
the inputted similar -> to : 1
inputted similar to -> the : 1
the we to -> the : 1
we to the -> chaining : 1
to the chaining -> node : 1
the chaining node -> in : 2
the chaining node -> for : 1
if the if -> the : 1
if the empty -> string : 1
the empty string -> will : 1
empty string will -> be : 1
will be returned -> the : 1
be returned the -> implementation : 1
returned the implementation -> of : 1
be as get -> hash : 3
as get hash -> key : 4
key is return -> the : 1
is return the -> value : 1
value of if -> return : 1
return if this -> statement : 2
if this statement -> is : 2
this statement is -> it : 2
statement is it -> means : 2
that the key -> is : 1
is not so -> just : 1
not so just -> return : 1
so just return -> empty : 1
just return empty -> return : 1
return empty return -> to : 1
empty return to -> the : 1
the the best -> case : 1
complexity will we -> found : 1
will we found -> the : 1
we found the -> inputted : 1
we found the -> key : 1
found the inputted -> key : 1
we will both -> the : 1
will both the -> average : 1
both the average -> and : 2
average and the -> worst : 3
since we may -> have : 1
may have to -> traverse : 1
a we erase -> a : 1
we erase a -> found : 1
erase a found -> key : 1
a found key -> node : 1
found key node -> from : 1
key node from -> the : 1
node from the -> chaining : 1
from the chaining -> node : 1
node in cell -> pointed : 1
in cell pointed -> by : 1
pointed by hash -> similar : 1
by hash similar -> to : 1
hash similar to -> the : 1
list until we -> find : 1
find the inputted -> if : 1
need to delete -> the : 1
delete the if -> the : 1
delete the if -> if : 1
delete the if -> find : 1
inputted key we -> simply : 1
key we simply -> do : 1
we simply do -> the : 1
simply do the -> implementation : 1
do the implementation -> of : 1
int hashkey get -> the : 1
hashkey get the -> auto : 1
get the auto -> tranverse : 1
the auto tranverse -> the : 1
auto tranverse the -> chaining : 1
tranverse the chaining -> node : 1
chaining node for -> it : 1
node for it -> it : 1
it it if -> the : 1
it if the -> key : 1
key is then -> delete : 2
is then delete -> the : 2
then delete the -> if : 2
then delete the -> element : 1
the if if -> key : 1
if if key -> is : 1
not found just -> do : 2
found just do -> we : 2
just do we -> will : 1
just do we -> have : 1
will have for -> the : 1
the function for -> the : 1
function for the -> best : 1
found the key -> in : 1
the linked we -> will : 1
linked we will -> also : 1
also have an -> time : 1
for the average -> and : 2
to all elements -> in : 1
the linked an -> we : 1
linked an we -> need : 1
whether a hash -> table : 1
hash table is -> empty : 2
hash table is -> b : 1
hash table is -> a : 1
hash table is -> we : 1
hash table is -> bool : 1
hash table is -> cout : 1
hash table is -> exactly : 1
table is empty -> or : 1
table is empty -> using : 1
is empty or -> to : 1
is empty or -> by : 1
empty or to -> do : 1
or to do -> we : 1
check if each -> cell : 1
if each cell -> in : 1
table has a -> list : 1
has a list -> that : 1
a list that -> contains : 1
list that contains -> at : 1
that contains at -> least : 1
least one the -> implementation : 1
one the implementation -> of : 1
as initialize total -> int : 1
initialize total int -> totalelement : 1
total int totalelement -> count : 1
int totalelement count -> all : 1
totalelement count all -> elements : 1
count all elements -> in : 1
elements in table -> for : 1
in table for -> i : 1
table for i -> i : 1
i i totalelement -> if : 1
i totalelement if -> the : 1
totalelement if the -> total : 1
if the total -> element : 1
the total element -> is : 1
total element is -> not : 1
total element is -> return : 1
element is not -> the : 1
not the hash -> table : 1
hash table must -> not : 1
table must not -> be : 1
must not be -> if : 1
not be if -> totalelement : 1
be if totalelement -> return : 1
if totalelement return -> if : 1
totalelement return if -> this : 1
means that total -> element : 1
that total element -> is : 1
element is return -> we : 1
preceding function we -> have : 1
iterate the hash -> table : 1
hash table and -> find : 1
table and find -> out : 1
out if the -> cell : 1
if the cell -> is : 1
the cell is -> empty : 1
cell is empty -> or : 1
empty or by -> using : 1
or by using -> the : 1
can get an -> time : 2
get an time -> complexity : 1
get an time -> the : 1
the first cell -> is : 1
first cell is -> not : 1
cell is not -> on : 1
is not on -> average : 1
not on average -> and : 1
worst the time -> complexity : 1
be a hashtable -> adt : 1
the we apply -> the : 2
we apply the -> using : 1
we apply the -> adt : 1
apply the using -> the : 1
the using the -> separate : 1
using the separate -> chaining : 2
the separate chaining -> technique : 1
the separate chaining -> we : 3
technique to the -> see : 1
to the see -> how : 1
the see how -> a : 1
see how a -> separate : 1
how a separate -> chaining : 1
chaining technique works -> to : 1
technique works to -> handle : 1
works to handle -> we : 1
to handle we -> have : 1
handle we have -> phone : 1
have phone number -> owned : 2
phone number owned -> by : 13
phone number owned -> in : 1
number owned by -> the : 1
number owned by -> which : 2
number owned by -> adam : 1
number owned by -> lindsey : 1
number owned by -> in : 6
number owned by -> it : 1
number owned by -> has : 1
owned by the -> phone : 1
by the phone -> number : 1
phone number will -> generate : 1
number will generate -> for : 1
will generate for -> the : 1
generate for the -> hash : 1
the hash so -> the : 1
hash so the -> data : 1
so the data -> will : 1
the data will -> be : 1
data will be -> stored : 1
stored in cell -> next : 1
stored in cell -> phone : 1
stored in cell -> the : 1
in cell next -> is : 1
cell next is -> phone : 1
next is phone -> number : 1
is phone number -> owned : 2
owned by which -> will : 2
by which will -> be : 2
in cell phone -> number : 5
cell phone number -> owned : 5
owned by adam -> in : 1
by adam in -> cell : 1
adam in cell -> phone : 1
owned by lindsey -> in : 1
by lindsey in -> cell : 1
lindsey in cell -> phone : 1
owned by in -> cell : 5
owned by in -> that : 1
by in cell -> and : 2
by in cell -> everything : 1
by in cell -> phone : 1
by in cell -> all : 1
in cell and -> phone : 2
in cell and -> link : 1
cell and phone -> number : 2
and phone number -> owned : 2
in cell everything -> has : 1
cell everything has -> been : 1
everything has been -> running : 1
has been running -> since : 1
been running since -> no : 1
running since no -> collision : 1
since no collision -> has : 1
no collision has -> if : 1
collision has if -> we : 1
has if we -> store : 1
if we store -> the : 1
we store the -> data : 1
the data to -> the : 2
which is phone -> number : 1
owned by it -> will : 1
by it will -> have : 1
it will have -> as : 1
will have as -> the : 1
have as the -> hash : 1
as the hash -> but : 1
as the hash -> and : 1
the hash but -> the : 1
hash but the -> hash : 1
but the hash -> key : 1
hash key has -> been : 4
key has been -> occupied : 4
has been occupied -> by : 4
been occupied by -> phone : 1
been occupied by -> another : 3
occupied by phone -> number : 1
by phone number -> in : 1
phone number in -> this : 1
will still store -> the : 1
still store the -> data : 1
data in cell -> and : 1
cell and link -> to : 1
and link to -> the : 1
previous node in -> the : 1
the same after -> storing : 1
same after storing -> all : 1
after storing all -> data : 1
storing all data -> in : 1
all data in -> the : 1
the following time -> to : 1
following time to -> apply : 1
time to apply -> our : 1
to apply our -> adt : 1
apply our adt -> to : 1
our adt to -> the : 1
adt to the -> phone : 1
to the phone -> number : 3
phone number list -> we : 3
number list we -> had : 3
list we had -> at : 3
we had at -> the : 3
had at the -> beginning : 3
beginning of this -> we : 2
beginning of this -> an : 1
beginning of this -> since : 1
beginning of this -> the : 1
have to instance -> a : 1
to instance a -> class : 1
instance a class -> in : 1
a class in -> the : 1
code as hashtable -> new : 1
as hashtable new -> prove : 1
hashtable new prove -> that : 1
new prove that -> is : 1
prove that is -> initialized : 1
that is initialized -> with : 1
is initialized with -> an : 1
initialized with an -> empty : 1
with an empty -> we : 1
an empty we -> can : 1
empty we can -> invoke : 1
the operation as -> check : 1
operation as check -> if : 1
check if hash -> table : 4
if hash table -> is : 4
if hash table -> have : 1
table is b -> cout : 1
is b cout -> table : 1
b cout table -> is : 3
cout table is -> cout : 4
cout table is -> not : 4
table is cout -> table : 4
table is cout -> a : 1
is cout table -> is : 4
table is not -> we : 2
table is not -> cout : 2
not we can -> insert : 2
can insert new -> data : 1
insert new data -> by : 1
new data by -> using : 1
using the then -> checking : 1
the then checking -> if : 1
then checking if -> the : 1
checking if the -> hash : 1
is empty using -> the : 1
following code adding -> a : 1
code adding a -> data : 1
adding a data -> check : 2
a data check -> if : 2
data check if -> hash : 2
table is a -> cout : 1
a cout table -> is : 1
can insert all -> remaining : 1
insert all remaining -> data : 1
all remaining data -> to : 1
remaining data to -> the : 1
hash table as -> adding : 1
table as adding -> others : 1
as adding others -> we : 1
adding others we -> have : 1
others we have -> all : 1
we have all -> data : 1
have all data -> stored : 1
all data stored -> in : 1
data stored in -> the : 1
hash we can -> search : 1
hash we can -> collect : 1
hash we can -> use : 1
can search if -> a : 1
search if a -> key : 1
a key is -> present : 1
key is present -> in : 1
the hash suppose -> we : 1
hash suppose we -> are : 1
to search key -> we : 1
search key we -> can : 1
can do the -> search : 1
do the search -> key : 1
be key value -> for : 1
key value for -> key : 1
value for key -> key : 1
value for key -> cout : 1
for key key -> name : 1
key key name -> cout : 1
key name cout -> for : 2
name cout for -> key : 3
cout for key -> cout : 8
for key cout -> is : 8
for key cout -> key : 1
key cout is -> cout : 4
key cout is -> not : 4
is cout for -> key : 4
is not remove -> the : 1
not remove the -> the : 1
the the key -> should : 1
the key should -> be : 1
key should be -> not : 1
should be not -> found : 1
be not found -> if : 1
not found if -> we : 1
found if we -> search : 1
we search it -> the : 1
search it the -> code : 1
it the code -> snippet : 1
snippet is as -> remove : 1
is as remove -> key : 1
as remove key -> then : 1
remove key then -> search : 2
then search the -> it : 2
search the it -> should : 2
the it should -> not : 2
not be node -> of : 1
be node of -> key : 1
node of key -> key : 1
node of key -> cout : 1
of key key -> cout : 1
key key cout -> for : 1
key cout for -> key : 1
is not of -> we : 1
not of we -> have : 1
of we have -> tried : 1
we have tried -> all : 1
have tried all -> operations : 1
tried all operations -> in : 1
will have onscreen -> if : 1
have onscreen if -> we : 1
onscreen if we -> build : 1
run the project -> from : 1
the project from -> the : 1
project from the -> the : 1
open addressing we -> discussed : 1
addressing we discussed -> earlier : 1
discussed earlier at -> beginning : 1
earlier at beginning -> of : 1
at beginning of -> this : 1
of this an -> open : 1
this an open -> addressing : 1
addressing technique all -> elements : 1
technique all elements -> in : 1
hash table a -> collision : 1
table a collision -> will : 1
will not since -> there : 1
not since there -> is : 1
a calculation that -> will : 1
calculation that will -> be : 1
will be performed -> if : 1
be performed if -> a : 1
performed if a -> collision : 1
about to based -> on : 1
to based on -> this : 1
can have three -> types : 1
have three types -> of : 1
three types of -> open : 2
types of open -> addressing : 2
of open addressing -> difference : 1
of open addressing -> technique : 1
open addressing difference -> between : 1
addressing difference between -> the : 1
between the three -> is : 1
the three is -> the : 1
three is the -> formula : 1
is the formula -> for : 2
the formula for -> finding : 2
the formula for -> calculating : 1
formula for finding -> the : 2
for finding the -> next : 2
finding the next -> free : 2
the next free -> space : 1
the next free -> then : 3
the next free -> we : 1
the next free -> slot : 2
next free space -> if : 1
free space if -> the : 1
space if the -> hash : 1
of the given -> element : 1
the given element -> has : 1
given element has -> been : 1
has been if -> the : 1
been if the -> hash : 1
occupied by another -> we : 3
by another we -> use : 3
another we use -> the : 3
the following formula -> to : 3
following formula to -> find : 3
formula to find -> the : 3
formula to find -> another : 1
find the next -> free : 4
next free then -> increase : 1
next free then -> a : 2
free then increase -> from : 1
then increase from -> until : 1
increase from until -> a : 1
from until a -> free : 1
until a free -> slot : 4
a free slot -> is : 6
free slot is -> here : 1
free slot is -> the : 3
free slot is -> by : 2
slot is here -> is : 1
is here is -> the : 2
the is then -> try : 3
the is then -> the : 1
is then try -> if : 3
then try if -> the : 3
try if the -> slot : 3
if the slot -> is : 4
the slot is -> still : 3
the slot is -> if : 1
slot is still -> try : 3
is still try -> repeat : 3
still try repeat -> it : 3
try repeat it -> by : 3
repeat it by -> increasing : 3
it by increasing -> until : 3
by increasing until -> a : 3
increasing until a -> free : 3
slot is the -> hash : 2
slot is the -> three : 1
is the hash -> key : 2
is the hash -> if : 1
free then a -> free : 2
then a free -> slot : 2
slot is by -> using : 2
is by using -> the : 2
the we increase -> the : 2
increase the hash -> key : 2
hash key here -> is : 2
is the three -> types : 1
the three types -> of : 1
addressing technique are -> similar : 1
technique are similar -> yet : 1
are similar yet -> different : 1
similar yet different -> in : 1
yet different in -> the : 1
different in the -> formula : 1
in the formula -> for : 1
next free we -> will : 1
free we will -> only : 1
will only discuss -> linear : 1
only discuss linear -> probing : 1
discuss linear probing -> in : 1
linear probing in -> this : 1
probing in this -> are : 1
in this are -> also : 1
this are also -> four : 1
are also four -> basic : 1
also four basic -> operations : 1
operations in linear -> probing : 1
in linear probing -> similar : 1
linear probing similar -> to : 1
probing similar to -> separate : 1
similar to separate -> the : 1
separate the chaining -> they : 1
separate the chaining -> we : 1
the chaining they -> are : 1
chaining they are -> the : 1
the and these -> four : 1
and these four -> operations : 1
these four operations -> have : 1
four operations have -> totally : 1
operations have totally -> the : 1
have totally the -> same : 1
totally the same -> functionality : 1
functionality as operations -> in : 1
as operations in -> the : 1
in the separate -> chaining : 2
separate chaining we -> will : 2
separate chaining we -> are : 1
chaining we will -> add : 1
chaining we will -> try : 1
will add a -> new : 1
new to prove -> that : 1
prove that an -> inserted : 1
that an inserted -> element : 1
an inserted element -> is : 1
inserted element is -> stored : 1
element is stored -> in : 1
the correct based -> on : 1
correct based on -> the : 1
will have class -> declaration : 1
have class declaration -> as : 1
class declaration as -> int : 1
declaration as int -> hashelement : 1
as int hashelement -> hashelement : 1
int hashelement hashelement -> int : 1
hashelement hashelement int -> void : 1
hashelement int void -> void : 1
bool void we -> can : 1
we have put -> all : 1
have put all -> the : 1
put all the -> elements : 1
all the elements -> in : 1
elements in an -> and : 1
in an and -> marked : 1
an and marked -> a : 1
and marked a -> slot : 1
marked a slot -> that : 1
a slot that -> has : 1
slot that has -> been : 1
that has been -> deleted : 1
has been deleted -> as : 1
been deleted as -> we : 1
deleted as we -> will : 1
as we will -> track : 1
we will track -> the : 1
will track the -> number : 1
track the number -> of : 1
hash table using -> the : 1
table using the -> we : 1
need a new -> data : 1
type named to -> be : 1
named to be -> stored : 1
to be stored -> in : 1
hash the implementation -> of : 4
the is as -> int : 1
as int we -> need : 1
int we need -> to : 1
need to reset -> and : 1
to reset and -> initialize : 1
reset and initialize -> the : 1
and initialize the -> and : 1
initialize the and -> we : 1
have a constructor -> implementation : 1
a constructor implementation -> as : 1
constructor implementation as -> initialize : 1
implementation as initialize -> current : 1
as initialize current -> size : 1
initialize current size -> as : 1
current size as -> currentsize : 1
size as currentsize -> initialize : 1
as currentsize initialize -> arr : 1
currentsize initialize arr -> new : 1
initialize arr new -> hashelement : 1
arr new hashelement -> i : 1
new hashelement i -> i : 1
hashelement i i -> specify : 1
i i specify -> deleted : 1
i specify deleted -> node : 1
specify deleted node -> deletedelement : 1
deleted node deletedelement -> new : 1
node deletedelement new -> develop : 1
deletedelement new develop -> all : 1
new develop all -> operations : 1
develop all operations -> we : 1
all operations we -> need : 1
operations we need -> in : 1
we need in -> this : 1
need in this -> adt : 1
in this adt -> in : 1
this adt in -> the : 1
adt in the -> upcoming : 1
the upcoming have -> a : 1
upcoming have a -> function : 1
function in the -> linear : 1
in the linear -> probing : 4
the linear probing -> it : 1
the linear probing -> if : 1
the linear probing -> calculation : 1
the linear probing -> consider : 1
the linear probing -> since : 1
the linear probing -> technique : 4
linear probing it -> is : 1
probing it is -> exactly : 1
it is exactly -> the : 1
is exactly the -> same : 2
chaining we are -> not : 1
we are not -> going : 1
are not going -> to : 1
not going to -> discuss : 1
to discuss it -> anymore : 1
discuss it anymore -> in : 1
it anymore in -> this : 1
anymore in this -> the : 1
this the insert -> a : 1
the insert a -> new : 1
a hash first -> we : 1
hash first we -> obtain : 1
first we obtain -> a : 1
we obtain a -> hash : 1
obtain a hash -> key : 1
from the element -> using : 1
element using after -> we : 1
using after we -> have : 1
have the hash -> we : 1
hash we check -> if : 1
we check if -> the : 1
slot is if -> not : 1
is if not -> we : 1
if not we -> check : 1
not we check -> another : 1
we check another -> free : 1
check another free -> slot : 1
another free slot -> using : 1
free slot using -> the : 1
slot using the -> linear : 2
using the linear -> formula : 1
using the linear -> probing : 3
the linear formula -> we : 1
linear formula we -> discussed : 1
formula we discussed -> at : 1
we discussed at -> the : 1
discussed at the -> beginning : 1
of this since -> the : 1
this since the -> open : 1
since the open -> addressing : 1
addressing technique stored -> all : 1
technique stored all -> elements : 1
stored all elements -> in : 1
hash table itself -> at : 1
table itself at -> the : 1
itself at the -> beginning : 1
the function we -> need : 1
function we need -> to : 1
check if all -> slots : 1
if all slots -> have : 1
all slots have -> been : 1
slots have been -> if : 1
been if there -> is : 1
is no free -> the : 1
is no free -> space : 1
no free the -> function : 1
free the function -> will : 1
function will do -> each : 1
will do each -> time : 1
do each time -> a : 1
each time a -> new : 1
time a new -> element : 2
be we increase -> the : 1
increase the variable -> to : 1
variable to track -> the : 1
track the total -> elements : 2
the total elements -> in : 2
total elements in -> the : 2
as string impossible -> to : 1
string impossible to -> store : 1
impossible to store -> a : 1
store a new -> if : 1
new if hash -> table : 1
hash table have -> free : 1
table have free -> if : 1
have free if -> create : 1
free if create -> a : 1
if create a -> temporary : 1
create a temporary -> to : 1
a temporary to -> be : 1
temporary to be -> inserted : 1
inserted to hash -> hashelement : 1
to hash hashelement -> temp : 1
hash hashelement temp -> new : 1
hashelement temp new -> get : 1
temp new get -> hash : 1
new get hash -> key : 1
hash int hashindex -> find : 3
int hashindex find -> next : 1
int hashindex find -> the : 2
hashindex find next -> free : 1
find next free -> using : 1
next free using -> linear : 1
free using linear -> null : 1
using linear null -> key : 1
linear null key -> hashindex : 1
null key hashindex -> if : 1
key hashindex if -> new : 1
hashindex if new -> element : 1
if new element -> to : 1
to be then -> increase : 1
be then increase -> the : 1
then increase the -> current : 1
increase the current -> null : 1
the current null -> see : 1
current null see -> the : 1
null see the -> two : 1
see the two -> statements : 1
the two statements -> in : 1
two statements in -> the : 1
code snippet as -> is : 1
snippet as is -> the : 1
as is the -> formula : 1
formula for calculating -> the : 1
calculating the next -> free : 1
next free slot -> in : 1
next free slot -> if : 1
free slot in -> the : 1
linear probing if -> we : 1
probing if we -> want : 1
want to use -> quadratic : 1
to use quadratic -> probing : 2
use quadratic probing -> or : 2
quadratic probing or -> double : 3
probing or double -> we : 1
probing or double -> hashing : 2
or double we -> just : 1
double we just -> need : 1
need to replace -> the : 1
replace the two -> bold : 1
the two bold -> statements : 1
two bold statements -> with : 1
bold statements with -> a : 1
statements with a -> correct : 1
with a correct -> in : 1
a correct in -> average : 1
correct in average -> and : 1
in average and -> worst : 1
worst the function -> will : 1
function will give -> for : 1
will give for -> the : 1
give for the -> time : 1
the time for -> the : 1
give an time -> a : 1
an time a -> to : 1
time a to -> the : 1
a to the -> preceding : 1
a to the -> since : 1
preceding to search -> for : 1
value of a -> we : 1
need to obtain -> the : 1
to obtain the -> hash : 1
obtain the hash -> key : 1
key of that -> given : 1
of that given -> key : 1
that given key -> using : 1
given key using -> we : 1
key using we -> check : 1
using we check -> the : 1
we check the -> cell : 1
check the cell -> which : 1
the cell which -> the : 1
cell which the -> index : 1
which the index -> is : 1
the hash if -> the : 1
hash if the -> key : 1
hash if the -> given : 1
key in that -> cell : 1
that cell matches -> with : 1
cell matches with -> the : 1
with the given -> we : 1
the given we -> just : 1
given we just -> need : 1
find another possible -> slot : 3
another possible slot -> using : 2
another possible slot -> in : 1
possible slot using -> the : 1
possible slot using -> a : 1
linear probing calculation -> until : 1
probing calculation until -> the : 1
calculation until the -> given : 1
until the given -> key : 1
key is still -> not : 1
is still not -> just : 1
still not just -> return : 1
not just return -> an : 1
just return an -> string : 1
return an string -> to : 1
an string to -> notify : 1
string to notify -> the : 1
to notify the -> user : 1
notify the user -> that : 1
the user that -> the : 1
user that the -> given : 1
that the given -> key : 1
given key exist -> in : 1
key exist in -> the : 1
function is as -> get : 1
function is as -> string : 1
is as get -> hash : 1
hashindex find the -> element : 2
element with given -> if : 1
element with given -> null : 1
with given if -> element : 1
given if element -> is : 1
if element is -> then : 2
element is then -> return : 1
element is then -> mark : 1
is then return -> its : 1
then return its -> return : 1
return its return -> keep : 1
its return keep -> looking : 1
return keep looking -> for : 1
keep looking for -> the : 2
looking for the -> using : 2
for the using -> linear : 2
the using linear -> hashindex : 2
using linear hashindex -> not : 1
using linear hashindex -> if : 1
linear hashindex not -> found : 1
hashindex not found -> return : 1
not found return -> return : 1
found return return -> we : 1
there are bold -> statements : 1
are bold statements -> to : 1
bold statements to -> indicate : 1
statements to indicate -> that : 1
indicate that a -> linear : 1
that a linear -> probing : 1
linear probing we -> can : 1
probing we can -> change : 1
can change these -> statements : 1
change these statements -> with : 1
these statements with -> the : 1
statements with the -> quadratic : 1
with the quadratic -> probing : 1
the quadratic probing -> or : 1
or double hashing -> calculations : 1
or double hashing -> the : 1
double hashing calculations -> if : 1
hashing calculations if -> we : 1
calculations if we -> want : 1
want to replace -> with : 1
to replace with -> one : 1
replace with one -> of : 1
with one of -> those : 1
one of those -> the : 1
of those the -> time : 1
those the time -> complexity : 1
time complexity we -> will : 2
complexity we will -> get : 2
will get from -> this : 1
will get from -> the : 1
get from this -> operation : 1
from this operation -> is : 1
and worst in -> the : 2
worst in the -> best : 2
the best we -> can : 1
the best we -> will : 2
best we can -> get : 1
an time the -> remove : 1
time the remove -> an : 1
the remove an -> element : 1
an element by -> using : 1
using a given -> first : 1
a given first -> we : 1
given first we -> have : 1
search the position -> of : 1
the element stored -> by : 1
element stored by -> using : 1
stored by using -> a : 1
a hash if -> the : 1
the if find -> another : 1
if find another -> possible : 1
slot using a -> linear : 1
linear probing then -> delete : 1
probing then delete -> the : 1
delete the element -> if : 1
the element if -> time : 1
element if time -> a : 1
if time a -> new : 1
be we decrease -> to : 1
we decrease to -> track : 1
decrease to track -> the : 1
with given null -> if : 1
given null if -> element : 1
null if element -> is : 1
is then mark -> the : 1
then mark the -> cell : 1
mark the cell -> as : 1
the cell as -> reduce : 1
cell as reduce -> no : 1
as reduce no -> need : 1
reduce no need -> to : 1
no need to -> search : 1
need to search -> keep : 1
to search keep -> looking : 1
search keep looking -> for : 1
linear hashindex if -> key : 1
hashindex if key -> is : 1
do we have -> bold : 1
we have bold -> statements : 1
have bold statements -> in : 1
bold statements in -> the : 1
the preceding they -> are : 1
preceding they are -> the : 1
are the formula -> to : 1
possible slot in -> the : 1
linear probing consider -> changing : 1
probing consider changing -> those : 1
consider changing those -> statements : 1
changing those statements -> if : 1
those statements if -> you : 1
statements if you -> need : 1
if you need -> to : 1
you need to -> use : 1
double hashing the -> time : 1
hashing the time -> complexity : 1
from the operation -> is : 1
is in both -> average : 1
in both average -> and : 1
both average and -> worst : 1
best we will -> get : 1
best we will -> have : 1
will get time -> an : 1
get time an -> we : 1
time an we -> have : 1
have a variable -> that : 1
a variable that -> stores : 1
variable that stores -> the : 1
that stores the -> total : 1
stores the total -> number : 1
the hash to -> see : 1
hash to see -> if : 1
to see if -> the : 2
see if the -> hash : 1
see if the -> new : 1
table is we -> just : 1
if the equals -> to : 1
the equals to -> the : 1
equals to the -> implementation : 1
as return currentsize -> with : 1
return currentsize with -> operation : 1
currentsize with operation -> in : 1
with operation in -> our : 1
operation in our -> previous : 1
in our previous -> separate : 1
our previous separate -> chaining : 2
previous separate chaining -> guaranteed : 1
previous separate chaining -> as : 1
separate chaining guaranteed -> to : 1
chaining guaranteed to -> have : 1
guaranteed to have -> time : 1
to have time -> complexity : 1
for all cases -> with : 1
all cases with -> a : 1
cases with a -> in : 1
with a in -> the : 1
a in the -> linear : 1
linear probing since -> we : 1
probing since we -> have : 1
we have tracked -> the : 1
have tracked the -> size : 1
tracked the size -> of : 1
the size of -> the : 2
size of the -> hash : 1
size of the -> the : 1
hash table each -> time : 1
table each time -> performed : 1
each time performed -> and : 1
time performed and -> a : 1
performed and a -> iterating : 1
and a iterating -> the : 1
a iterating the -> hash : 1
iterating the hash -> we : 1
can collect the -> pairs : 1
collect the pairs -> of : 1
the pairs of -> key : 1
pairs of key -> and : 1
of key and -> then : 1
of key and -> the : 1
key and then -> print : 1
then print them -> to : 1
print them to -> the : 1
will use this -> operation : 1
use this operation -> to : 1
this operation to -> see : 1
operation to see -> if : 1
if the new -> element : 1
new element we -> insert : 1
element we insert -> is : 1
we insert is -> stored : 1
insert is stored -> in : 1
the right the -> implementation : 1
right the implementation -> of : 1
be as iterate -> through : 1
as iterate through -> i : 1
iterate through i -> i : 1
through i i -> just : 1
i i just -> print : 1
i just print -> the : 1
just print the -> if : 1
print the if -> it : 1
the if it -> null : 1
if it null -> cout : 1
it null cout -> cout : 1
null cout cout -> cout : 1
cout cout the -> operation : 1
cout the operation -> will : 1
operation will iterate -> through : 1
through the hash -> table : 1
hash table until -> the : 1
table until the -> size : 1
until the size -> of : 1
is in all -> an : 1
in all an -> hashtable : 1
all an hashtable -> adt : 1
apply the adt -> we : 2
the adt we -> built : 2
adt we built -> using : 2
we built using -> the : 3
built using the -> linear : 2
built using the -> separate : 1
probing technique we -> will : 1
technique we will -> first : 1
we will first -> see : 1
will first see -> how : 1
first see how -> the : 1
see how the -> linear : 1
how the linear -> probing : 1
probing technique handles -> a : 1
technique handles a -> collision : 1
handles a collision -> by : 1
a collision by -> applying : 1
collision by applying -> it : 1
by applying it -> to : 1
applying it to -> the : 1
will also define -> as : 1
also define as -> which : 1
define as which -> is : 1
as which is -> the : 1
same as our -> previous : 1
as our previous -> separate : 1
separate chaining as -> a : 1
chaining as a -> comparison : 1
as a comparison -> to : 1
a comparison to -> separate : 1
comparison to separate -> the : 1
the chaining we -> have : 1
chaining we have -> phone : 1
in cell the -> next : 1
cell the next -> is : 1
the next is -> which : 1
next is which -> will : 1
stored in phone -> number : 1
in phone number -> owned : 1
number owned in -> cell : 1
owned in cell -> phone : 1
in cell all -> elements : 1
cell all elements -> are : 1
elements are stored -> in : 1
are stored in -> an : 1
stored in an -> appropriate : 1
in an appropriate -> hash : 1
an appropriate hash -> if : 1
appropriate hash if -> we : 1
hash if we -> insert : 1
insert the data -> into : 1
the data into -> the : 1
data into the -> hash : 1
into the hash -> a : 1
collision will since -> phone : 1
will since phone -> number : 1
since phone number -> owned : 1
owned by has -> as : 1
by has as -> the : 1
has as the -> hash : 1
the hash and -> exactly : 1
hash and exactly -> the : 1
and exactly the -> same : 1
same as to -> prevent : 1
as to prevent -> the : 1
prevent the we -> use : 1
we use linear -> which : 1
use linear which -> increases : 1
linear which increases -> the : 1
which increases the -> hash : 1
increases the hash -> key : 1
key of collision -> then : 1
of collision then -> performs : 1
collision then performs -> modulo : 1
then performs modulo -> to : 1
performs modulo to -> in : 1
modulo to in -> this : 1
will get as -> a : 1
get as a -> new : 1
as a new -> hash : 1
a new hash -> key : 1
new hash key -> since : 1
hash key since -> cell : 1
key since cell -> is : 1
since cell is -> still : 1
cell is still -> we : 1
is still we -> can : 1
still we can -> store : 1
can store phone -> number : 1
store phone number -> owned : 1
by in that -> for : 1
in that for -> until : 1
that for until -> they : 1
for until they -> be : 1
until they be -> stored : 1
they be stored -> in : 1
hash table even -> if : 1
table even if -> we : 1
even if we -> perform : 1
if we perform -> the : 1
perform the since -> there : 1
the since there -> is : 1
no free space -> anymore : 1
free space anymore -> in : 1
space anymore in -> the : 1
anymore in the -> hash : 1
hash the illustration -> will : 1
be as apply -> the : 1
as apply the -> adt : 1
code to the -> phone : 1
this the usage -> of : 1
of the linear -> probing : 1
probing technique is -> quite : 1
technique is quite -> similar : 1
is quite similar -> to : 1
to the one -> we : 1
one we built -> using : 1
will try all -> operations : 1
try all operations -> as : 1
all operations as -> shown : 1
operations as shown -> in : 1
following cout table -> open : 1
cout table open -> addressing : 1
table open addressing -> linear : 1
open addressing linear -> cout : 1
addressing linear cout -> hashtable : 1
linear cout hashtable -> hashtable : 1
cout hashtable hashtable -> new : 1
hashtable hashtable new -> check : 1
hashtable new check -> if : 1
new check if -> hash : 1
table is bool -> b : 1
is bool b -> cout : 1
bool b cout -> table : 1
not cout adding -> a : 1
not cout adding -> others : 1
cout adding a -> data : 1
is cout a -> b : 1
a b cout -> table : 1
cout adding others -> print : 1
adding others print -> the : 1
others print the -> search : 1
print the search -> key : 1
should be int -> key : 1
be int key -> cout : 1
int key cout -> value : 1
key cout value -> for : 1
cout value for -> key : 1
key cout key -> string : 1
key cout key -> name : 1
cout key string -> name : 1
key string name -> cout : 1
string name cout -> for : 1
not cout remove -> key : 1
cout remove key -> then : 1
not be cout -> node : 1
be cout node -> of : 1
cout node of -> key : 1
of key cout -> key : 1
cout key name -> cout : 1
not cout return -> if : 1
following output in -> the : 1
output in the -> the : 1
that the order -> of : 1
order of all -> elements : 1
of all elements -> in : 1
table is exactly -> the : 1
the same with -> our : 1
same with our -> previous : 1
with our previous -> we : 1
our previous we -> can : 1
say that we -> have : 1
have successfully performed -> a : 1
successfully performed a -> linear : 1
performed a linear -> probing : 1
linear probing an -> open : 1
probing an open -> addressing : 1
addressing technique just -> stores : 1
technique just stores -> all : 1
just stores all -> elements : 1
stores all elements -> in : 1
hash table we -> have : 1
table we have -> to : 1
define the equal -> to : 1
the equal to -> or : 1
the equal to -> global : 1
equal to or -> greater : 1
to or greater -> than : 1
than the total -> of : 1
the total of -> inserted : 1
the total of -> all : 1
total of inserted -> unless : 1
of inserted unless -> there : 1
inserted unless there -> will : 1
unless there will -> be : 1
will be some -> elements : 1
be some elements -> that : 1
some elements that -> cannot : 1
elements that cannot -> be : 1
that cannot be -> stored : 1
cannot be stored -> in : 1
can use separate -> chaining : 1
use separate chaining -> technique : 1
store all element -> in : 1
all element in -> hash : 1
element in hash -> are : 1
in hash are -> several : 1
hash are several -> other : 1
are several other -> hash : 1
several other hash -> table : 1
other hash table -> data : 1
table data types -> that : 1
types that have -> better : 1
that have better -> such : 1
have better such -> as : 1
better such as -> perfect : 1
such as perfect -> cuckoo : 1
as perfect cuckoo -> and : 1
perfect cuckoo and -> hopscotch : 1
cuckoo and hopscotch -> if : 1
and hopscotch if -> you : 1
hopscotch if you -> are : 1
learning about these -> hashing : 1
about these hashing -> you : 1
these hashing you -> can : 1
hashing you can -> check : 1
you can check -> links : 1
can check links -> in : 1
check links in -> the : 1
links in the -> this : 1
have discussed another -> data : 1
discussed another data -> type : 1
another data type -> called : 1
data type called -> a : 1
type called a -> although : 1
called a although -> a : 1
a although a -> collision : 1
although a collision -> can : 1
a collision can -> happen : 1
collision can happen -> to : 1
can happen to -> the : 1
happen to the -> hash : 1
table data we -> have : 1
learned how to -> handle : 1
learned how to -> construct : 1
to handle it -> by : 1
handle it by -> using : 1
it by using -> a : 1
chaining technique or -> open : 1
technique or open -> addressing : 1
or open addressing -> regarding : 1
open addressing regarding -> the : 1
addressing regarding the -> open : 1
regarding the open -> addressing : 1
open addressing it -> has : 1
addressing it has -> three : 1
it has three -> different : 1
has three different -> kinds : 1
three different kinds -> of : 1
different kinds of -> and : 1
kinds of and -> they : 1
of and they -> are : 1
they are relatively -> similar : 1
are relatively similar -> in : 1
relatively similar in -> terms : 1
similar in terms -> of : 1
in terms of -> the : 1
terms of the -> except : 1
except for the -> way : 1
for the way -> in : 1
the way in -> which : 1
way in which -> we : 1
in which we -> find : 1
which we find -> the : 1
free slot if -> the : 1
slot if the -> hash : 1
hash key we -> need : 1
key we need -> to : 1
need to insert -> has : 1
to insert has -> been : 1
insert has been -> the : 1
has been the -> next : 1
been the next -> we : 1
to discuss common -> algorithm : 1
discuss common algorithm -> paradigms : 1
common algorithm paradigms -> to : 1
paradigms to design -> algorithms : 1
to design algorithms -> specifically : 1
design algorithms specifically -> for : 1
algorithms specifically for -> a : 1
specifically for a -> certain : 1
for a certain -> is : 1
a certain is -> collision : 1
a certain is -> the : 1
certain is collision -> in : 1
is collision in -> a : 1
a hash techniques -> to : 1
hash techniques to -> handle : 1
techniques to handle -> collision : 1
to handle collision -> in : 1
handle collision in -> a : 1
a hash four -> basic : 1
hash four basic -> operations : 1
a hash does -> we : 1
hash does we -> obtain : 1
does we obtain -> hash : 1
we obtain hash -> key : 1
obtain hash key -> for : 1
for each do -> we : 1
each do we -> need : 1
we need hash -> table : 1
need hash table -> data : 1
table data type -> although : 1
data type although -> we : 1
type although we -> have : 1
we have already -> had : 1
have already had -> others : 1
already had others -> data : 1
had others data -> type : 1
others data type -> such : 1
such as and -> linked : 1
such as and -> gather : 1
as and linked -> further : 1
and linked further -> please : 1
linked further please -> visit : 1
visit these following -> of : 1
these following of -> algorithms : 1
following of algorithms -> in : 1
in real we -> have : 1
real we have -> learned : 1
to construct data -> structures : 1
construct data structures -> and : 1
structures and implement -> sorting : 1
and implement sorting -> and : 1
implement sorting and -> searching : 1
sorting and searching -> in : 1
and searching in -> this : 1
searching in this -> final : 1
in this final -> we : 1
this final we -> are : 1
final we are -> going : 1
discuss the implementation -> of : 1
implementation of algorithms -> in : 1
in real here -> are : 1
real here are -> the : 1
are the algorithms -> we : 1
the algorithms we -> are : 1
to and conquer -> follow : 1
and conquer follow -> along : 1
conquer follow along -> with : 1
code you require -> the : 1
you require the -> pc : 1
at a is -> that : 1
a is that -> without : 1
is that without -> future : 1
that without future -> that : 1
without future that -> some : 1
future that some -> local : 1
that some local -> what : 1
some local what -> you : 1
local what you -> can : 1
what you can -> is : 1
you can is -> for : 1
can is for -> we : 1
is for we -> the : 1
for we the -> equal : 1
we the equal -> to : 1
equal to global -> if : 1
to global if -> this : 1
global if this -> is : 1
if this is -> the : 1
is the has -> a : 1
the has a -> if : 1
has a if -> best : 1
a if best -> then : 1
if best then -> greedy : 1
best then greedy -> algorithms : 1
then greedy algorithms -> are : 1
greedy algorithms are -> than : 1
algorithms are than -> algorithms : 1
are than algorithms -> required : 1
than algorithms required -> an : 1
algorithms required an -> optimum : 1
required an optimum -> is : 1
an optimum is -> an : 1
optimum is an -> optimization : 1
is an optimization -> problem : 1
an optimization problem -> technique : 1
optimization problem technique -> to : 1
problem technique to -> find : 1
technique to find -> an : 1
to find an -> optimal : 1
find an optimal -> solution : 1
an optimal solution -> maximal : 1
optimal solution maximal -> or : 1
solution maximal or -> this : 1
maximal or this -> is : 1
or this is -> in : 1
this is in -> contrast : 1
is in contrast -> to : 1
in contrast to -> a : 1
contrast to a -> global : 1
to a global -> which : 1
a global which -> is : 1
global which is -> the : 1
is the optimal -> solution : 1
the optimal solution -> among : 1
optimal solution among -> all : 1
solution among all -> possible : 1
among all possible -> not : 1
all possible not -> just : 1
possible not just -> those : 1
not just those -> in : 1
just those in -> several : 1
those in several -> candidate : 1
in several candidate -> the : 1
several candidate the -> you : 1
candidate the you -> are : 1
you are working -> at : 1
are working at -> a : 1
working at a -> cash : 1
at a cash -> counter : 1
a cash counter -> at : 1
cash counter at -> a : 1
counter at a -> theme : 1
at a theme -> are : 1
a theme are -> provided : 1
theme are provided -> all : 1
are provided all -> different : 1
provided all different -> types : 1
all different types -> of : 1
different types of -> coins : 1
types of coins -> available : 1
of coins available -> in : 1
coins available in -> infinite : 1
available in infinite -> you : 1
in infinite you -> have : 1
infinite you have -> to : 1
you have to -> find : 1
the minimum number -> of : 1
minimum number of -> coins : 1
number of coins -> for : 1
of coins for -> making : 1
coins for making -> illustration : 1
for making illustration -> of : 1
making illustration of -> a : 1
illustration of a -> consider : 1
of a consider -> the : 1
a consider the -> provide : 1
consider the provide -> largest : 1
the provide largest -> give : 1
provide largest give -> out : 1
largest give out -> out : 1
give out out -> a : 1
out out a -> a : 1
out a a -> doing : 1
a a doing -> we : 1
a doing we -> guaranteed : 1
doing we guaranteed -> minimize : 1
we guaranteed minimize -> the : 1
guaranteed minimize the -> analyze : 1
minimize the analyze -> how : 1
the analyze how -> coin : 1
analyze how coin -> changing : 1
how coin changing -> to : 1
coin changing to -> get : 1
changing to get -> the : 1
the value for -> minimum : 1
value for minimum -> coin : 1
for minimum coin -> change : 1
minimum coin change -> call : 1
minimum coin change -> for : 1
coin change call -> it : 1
change call it -> we : 1
call it we -> have : 1
it we have -> to : 1
the largest denomination -> that : 1
largest denomination that -> is : 1
denomination that is -> smaller : 1
that is smaller -> than : 1
smaller than or -> equal : 1
equal to after -> we : 1
find the we -> subtract : 1
the we subtract -> with : 1
we subtract with -> the : 1
subtract with the -> repeat : 1
with the repeat -> this : 1
the repeat this -> process : 1
repeat this process -> until : 1
this process until -> is : 1
process until is -> the : 1
until is the -> following : 1
is the solution -> of : 1
the solution of -> the : 1
solution of the -> problem : 1
of the problem -> in : 1
the problem in -> all : 1
problem in all -> denominations : 1
in all denominations -> of : 1
all denominations of -> double : 1
denominations of double -> int : 1
of double int -> totaldenom : 1
double int totaldenom -> initialize : 1
int totaldenom initialize -> result : 1
totaldenom initialize result -> as : 1
initialize result as -> a : 1
result as a -> traverse : 1
as a traverse -> through : 1
a traverse through -> all : 1
traverse through all -> for : 1
through all for -> i : 1
all for i -> totaldenom : 1
for i totaldenom -> i : 1
i totaldenom i -> find : 1
totaldenom i find -> while : 1
i find while -> changingnominal : 1
find while changingnominal -> if : 1
while changingnominal if -> no : 1
changingnominal if no -> any : 1
no any that -> can : 1
any that can -> be : 1
can be given -> just : 1
be given just -> exit : 1
given just exit -> the : 1
just exit the -> if : 1
exit the if -> print : 1
the if print -> for : 1
if print for -> i : 1
print for i -> i : 1
cout cout we -> can : 1
cout we can -> see : 1
preceding the function -> will : 1
the minimum coin -> change : 1
coin change for -> the : 1
change for the -> given : 1
for the given -> for : 1
the given for -> the : 1
given for the -> best : 1
the best time -> we : 1
best time we -> check : 1
time we check -> whether : 1
we check whether -> still : 1
check whether still -> any : 1
whether still any -> denomination : 1
still any denomination -> remaining : 1
any denomination remaining -> in : 1
denomination remaining in -> each : 1
remaining in each -> denomination : 1
in each denomination -> list : 1
each denomination list -> if : 1
denomination list if -> is : 1
list if is -> smaller : 1
if is smaller -> than : 1
than the smallest -> available : 1
the smallest available -> we : 1
smallest available we -> need : 1
available we need -> to : 1
need to continue -> the : 1
to continue the -> by : 1
continue the by -> doing : 1
the by doing -> we : 1
by doing we -> can : 1
doing we can -> have : 1
will have time -> complexity : 1
worst cases where -> is : 1
cases where is -> the : 1
the to apply -> the : 1
following cout change -> initialize : 1
cout change initialize -> the : 1
change initialize the -> change : 1
initialize the change -> float : 1
the change float -> change : 1
change float change -> getting : 1
float change getting -> the : 1
change getting the -> cout : 1
getting the cout -> number : 1
the cout number -> of : 1
cout number of -> change : 1
number of change -> for : 1
of change for -> cout : 1
change for cout -> change : 1
for cout change -> is : 1
cout change is -> return : 1
change is return -> we : 1
code we will -> see : 1
on the algorithm -> all : 1
the algorithm all -> monetary : 1
algorithm all monetary -> but : 1
all monetary but -> we : 1
monetary but we -> prove : 1
but we prove -> work : 1
we prove work -> the : 1
prove work the -> huffman : 1
work the huffman -> coding : 1
huffman coding of -> the : 1
coding of the -> the : 1
the the greedy -> algorithms : 1
the greedy algorithms -> is : 1
greedy algorithms is -> huffman : 1
algorithms is huffman -> used : 1
is huffman used -> in : 1
huffman used in -> compression : 1
used in compression -> algorithm : 1
in compression algorithm -> because : 1
compression algorithm because -> a : 1
algorithm because a -> it : 1
because a it -> will : 1
it will convert -> input : 1
will convert input -> character : 1
convert input character -> into : 1
input character into -> the : 1
character into the -> most : 1
into the most -> frequent : 1
the most frequent -> character : 1
most frequent character -> will : 1
frequent character will -> have : 1
frequent character will -> be : 1
character will have -> the : 1
have the smallest -> code : 1
the smallest code -> and : 1
smallest code and -> the : 1
code and the -> least : 1
the least frequent -> character : 1
least frequent character -> will : 1
be the largest -> variable : 1
the largest variable -> length : 1
largest variable length -> codes : 1
variable length codes -> are : 1
length codes are -> are : 1
codes are are -> parts : 1
are are parts -> building : 1
are parts building -> a : 1
parts building a -> from : 1
building a from -> input : 1
a from input -> characters : 1
from input characters -> and : 1
input characters and -> traversing : 1
characters and traversing -> and : 1
and traversing and -> codes : 1
traversing and codes -> build : 1
and codes build -> a : 1
codes build a -> huffman : 1
build a huffman -> we : 1
a huffman we -> need : 1
huffman we need -> a : 1
need a node -> type : 1
a node type -> that : 1
node type that -> can : 1
type that can -> hold : 1
that can hold -> a : 1
can hold a -> character : 1
hold a character -> and : 1
a character and -> a : 1
character and a -> frequency : 1
and a frequency -> of : 1
a frequency of -> the : 1
use a priority -> queue : 1
priority queue as -> a : 1
priority queue as -> representing : 1
queue as a -> minimum : 1
as a minimum -> we : 1
a minimum we -> name : 1
minimum we name -> the : 1
we name the -> node : 1
name the node -> type : 1
the node type -> with : 1
node type with -> implementation : 1
type with implementation -> as : 1
with implementation as -> input : 1
implementation as input -> char : 1
as input char -> frequency : 1
input char frequency -> of : 1
char frequency of -> the : 1
of the unsigned -> left : 1
the unsigned left -> and : 1
unsigned left and -> right : 1
and right minheapnode -> unsigned : 1
right minheapnode unsigned -> initialize : 1
minheapnode unsigned initialize -> left : 1
unsigned initialize left -> and : 1
and right leftchild -> rightchild : 1
right leftchild rightchild -> we : 1
leftchild rightchild we -> build : 1
rightchild we build -> the : 1
we build the -> priority : 1
build the priority -> queue : 1
priority queue to -> construct : 1
queue to construct -> the : 1
construct the huffman -> we : 1
the huffman we -> had : 1
huffman we had -> discussed : 1
we had discussed -> in : 2
had discussed in -> a : 2
discussed in a -> hierarchical : 1
discussed in a -> previous : 1
hierarchical tree we -> can : 1
can use priority -> queue : 1
use priority queue -> as : 1
queue as representing -> of : 1
as representing of -> will : 1
representing of will -> build : 1
of will build -> a : 1
will build a -> function : 1
build a function -> named : 1
a function named -> that : 1
function named that -> will : 1
named that will -> construct : 1
that will construct -> a : 1
will construct a -> huffman : 1
construct a huffman -> tree : 1
a huffman tree -> by : 1
huffman tree by -> using : 1
tree by using -> the : 1
using the given -> data : 1
the given data -> with : 1
given data with -> the : 1
data with the -> following : 1
following int int -> minheapnode : 1
int int minheapnode -> create : 1
int minheapnode create -> a : 1
minheapnode create a -> min : 1
create a min -> heap : 1
a min heap -> inserts : 1
min heap inserts -> all : 1
heap inserts all -> characters : 1
inserts all characters -> of : 1
characters of for -> i : 1
of for i -> i : 1
i i iterate -> while : 1
i iterate while -> size : 1
iterate while size -> of : 1
while size of -> heap : 1
size of heap -> become : 1
of heap become -> while : 1
heap become while -> extract : 1
become while extract -> the : 1
while extract the -> two : 1
extract the two -> freq : 1
the two freq -> items : 1
two freq items -> from : 1
freq items from -> min : 1
items from min -> left : 1
from min left -> right : 1
min left right -> create : 1
left right create -> a : 1
a new internal -> node : 1
new internal node -> frequency : 1
internal node frequency -> equal : 1
node frequency equal -> to : 1
frequency equal to -> the : 1
to the sum -> of : 1
the sum of -> two : 1
the sum of -> of : 1
sum of two -> nodes : 1
of two nodes -> make : 1
two nodes make -> two : 1
nodes make two -> extracted : 1
make two extracted -> node : 1
two extracted node -> as : 1
extracted node as -> left : 1
node as left -> and : 1
as left and -> right : 1
and right of -> this : 1
right of this -> new : 1
this new add -> this : 1
new add this -> to : 1
add this to -> the : 1
this to the -> min : 1
to the min -> heap : 1
the min heap -> is : 1
min heap is -> a : 1
is a special -> for : 1
a special for -> internal : 1
special for internal -> not : 1
for internal not -> top : 1
internal not top -> new : 1
not top new -> print : 1
top new print -> huffman : 1
new print huffman -> codes : 1
print huffman codes -> the : 1
huffman codes the -> huffman : 1
codes the huffman -> tree : 1
the huffman tree -> built : 1
huffman tree built -> be : 1
tree built be -> by : 1
built be by -> a : 1
be by a -> using : 1
by a using -> the : 1
a using the -> following : 1
following a node -> addding : 1
a node addding -> to : 1
node addding to -> remove : 1
addding to remove -> highest : 1
to remove highest -> to : 1
remove highest to -> get : 1
highest to get -> please : 1
to get please -> see : 1
get please see -> the : 1
the following compare -> function : 1
following compare function -> implementation : 1
compare function implementation -> we : 1
function implementation we -> used : 1
implementation we used -> in : 1
the preceding bool -> minheapnode : 1
preceding bool minheapnode -> minheapnode : 1
bool minheapnode minheapnode -> a : 1
minheapnode minheapnode a -> new : 1
minheapnode a new -> node : 1
new node these -> and : 1
node these and -> the : 1
and the probability -> to : 1
the probability to -> sum : 1
probability to sum -> the : 1
to sum the -> new : 1
sum the new -> node : 1
node to as -> new : 1
to as new -> remaining : 1
as new remaining -> node : 1
new remaining node -> tree : 1
remaining node tree -> we : 1
node tree we -> can : 1
can see at -> the : 1
see at the -> end : 1
have the function -> traverse : 1
the function traverse -> the : 1
function traverse the -> tree : 1
traverse the tree -> then : 1
the tree then -> display : 1
tree then display -> the : 1
then display the -> data : 1
display the data -> to : 1
as string if -> if : 1
string if if -> cout : 1
if if cout -> cout : 1
if cout cout -> str : 1
cout cout str -> str : 1
cout str str -> str : 1
str str str -> are : 1
str str are -> two : 1
str are two -> details : 1
are two details -> the : 1
two details the -> information : 1
details the information -> must : 1
the information must -> be : 1
information must be -> compressed : 1
must be compressed -> otherwise : 1
be compressed otherwise -> it : 1
compressed otherwise it -> would : 1
otherwise it would -> are : 1
it would are -> this : 1
would are this -> table : 1
are this table -> would : 1
this table would -> possible : 1
table would possible -> and : 1
would possible and -> the : 1
possible and the -> will : 1
and the will -> of : 1
the will of -> be : 1
will of be -> original : 1
of be original -> left : 1
be original left -> large : 1
original left large -> size : 1
left large size -> of : 1
large size of -> table : 1
size of table -> second : 1
of table second -> this : 1
table second this -> a : 1
second this a -> the : 1
this a the -> the : 1
a the the -> and : 1
the the and -> second : 1
the the and -> of : 1
the and second -> pass : 1
and second pass -> the : 1
second pass the -> obviously : 1
pass the obviously -> a : 1
the obviously a -> property : 1
obviously a property -> for : 1
a property for -> a : 1
property for a -> program : 1
for a program -> with : 1
a program with -> large : 1
program with large -> huffman : 1
with large huffman -> suppose : 1
large huffman suppose -> we : 1
huffman suppose we -> a : 1
suppose we a -> contains : 1
we a contains -> the : 1
a contains the -> plus : 1
contains the plus -> blank : 1
the plus blank -> and : 1
plus blank and -> the : 1
blank and the -> following : 1
the following that -> huffman : 1
following that huffman -> coding : 1
that huffman coding -> uses : 1
huffman coding uses -> fewer : 1
coding uses fewer -> assume : 1
uses fewer assume -> the : 1
fewer assume the -> number : 1
assume the number -> characters : 1
the number characters -> is : 1
number characters is -> be : 1
characters is be -> maintain : 1
is be maintain -> a : 1
be maintain a -> forest : 1
maintain a forest -> of : 1
a forest of -> a : 1
forest of a -> tree : 1
of a tree -> sum : 1
a tree sum -> of : 1
tree sum of -> of : 1
sum of of -> ties : 1
sum of of -> the : 1
of of ties -> form : 1
of ties form -> a : 1
ties form a -> new : 1
form a new -> and : 1
new and at -> beginning : 1
and at beginning -> the : 1
at beginning the -> there : 1
beginning the there -> are : 1
are the is -> one : 1
the is one -> an : 1
is one an -> huffman : 1
one an huffman -> a : 1
an huffman a -> will : 1
huffman a will -> make : 1
a will make -> operation : 1
will make operation -> of : 1
make operation of -> the : 1
the algorithm in -> the : 1
following of shown -> small : 1
of shown small -> at : 1
shown small at -> the : 1
small at the -> two : 1
the two trees -> weight : 1
two trees weight -> merged : 1
trees weight merged -> name : 1
weight merged name -> the : 1
merged name the -> be : 1
name the be -> left : 1
the be left -> the : 1
be left the -> is : 1
left the is -> the : 1
is the sum -> of : 1
of of the -> and : 1
of of the -> when : 1
the and can -> be : 1
can be is -> a : 1
be is a -> to : 1
is a to -> the : 1
to the since -> a : 1
the since a -> set : 1
since a set -> the : 1
a set the -> right : 1
set the right -> a : 1
the right a -> give : 1
right a give -> an : 1
a give an -> the : 1
give an the -> choice : 1
an the choice -> priority : 1
the choice priority -> depends : 1
choice priority depends -> on : 1
priority depends on -> how : 1
on how large -> in : 1
how large in -> an : 1
large in an -> ascii : 1
in an ascii -> small : 1
an ascii small -> enough : 1
ascii small enough -> running : 1
small enough running -> time : 1
enough running time -> in : 1
running time in -> an : 1
time in an -> running : 1
in an running -> time : 1
an running time -> will : 1
running time will -> spent : 1
time will spent -> disk : 1
will spent disk -> required : 1
spent disk required -> read : 1
disk required read -> the : 1
required read the -> input : 1
read the input -> write : 1
the input write -> and : 1
input write and -> conquer : 1
write and conquer -> algorithms : 1
and conquer algorithms -> is : 1
conquer algorithms is -> and : 1
algorithms is and -> term : 1
is and term -> problems : 1
and term problems -> solved : 1
term problems solved -> base : 1
problems solved base -> shows : 1
solved base shows -> solution : 1
base shows solution -> the : 1
shows solution the -> original : 1
solution the original -> then : 1
the original then -> from : 1
original then from -> the : 1
then from the -> you : 1
from the you -> a : 1
the you a -> this : 1
you a this -> algorithm : 1
a this algorithm -> the : 1
this algorithm the -> the : 1
algorithm the the -> subproblems : 1
the the subproblems -> the : 1
the subproblems the -> text : 1
subproblems the text -> recursive : 1
the text recursive -> calls : 1
text recursive calls -> are : 1
recursive calls are -> called : 1
calls are called -> and : 1
are called and -> conquer : 1
called and conquer -> whose : 1
and conquer whose -> contains : 1
conquer whose contains -> one : 1
whose contains one -> and : 1
contains one and -> combines : 1
one and combines -> to : 1
and combines to -> solve : 1
combines to solve -> divide : 1
to solve divide -> conquer : 1
solve divide conquer -> solves : 1
divide conquer solves -> each : 1
conquer solves each -> must : 1
solves each must -> be : 1
each must be -> smaller : 1
must be smaller -> than : 1
be smaller than -> original : 1
smaller than original -> and : 1
than original and -> a : 1
original and a -> base : 1
and a base -> generally : 1
a base generally -> that : 1
base generally that -> be : 1
generally that be -> without : 1
that be without -> can : 1
be without can -> a : 1
without can a -> and : 1
can a and -> and : 1
a and and -> to : 1
and and to -> the : 1
to the steps -> of : 1
the steps of -> the : 1
steps of the -> each : 1
the each divided -> creates : 1
each divided creates -> and : 1
divided creates and -> more : 1
creates and more -> than : 1
and more than -> two : 1
than two and -> creates : 1
two and creates -> least : 1
and creates least -> a : 1
creates least a -> algorithm : 1
least a algorithm -> if : 1
a algorithm if -> more : 1
algorithm if more -> result : 1
if more result -> looks : 1
more result looks -> following : 1
result looks following -> some : 1
looks following some -> of : 1
following some of -> the : 1
of the standard -> algorithms : 1
the standard algorithms -> discussed : 1
standard algorithms discussed -> in : 1
algorithms discussed in -> previous : 1
discussed in previous -> chapters : 1
in previous chapters -> that : 1
previous chapters that -> are : 1
chapters that are -> divide : 1
that are divide -> and : 1
divide and search -> a : 1
and search a -> searching : 1
search a searching -> in : 1
a searching in -> element : 1
searching in element -> the : 1
in element the -> value : 1
element the value -> of : 1
return the is -> then : 1
is then the -> the : 1
the middle it -> for : 1
middle it for -> right : 1
it for right -> middle : 1
for right middle -> a : 1
right middle a -> sorting : 1
middle a sorting -> the : 1
sorting the a -> pivot : 1
the a pivot -> the : 1
a pivot the -> in : 1
pivot the in -> a : 1
the in a -> elements : 1
the in a -> standard : 1
in a elements -> pivot : 1
a elements pivot -> to : 1
elements pivot to -> of : 1
pivot to of -> and : 1
to of and -> recursively : 1
of and recursively -> the : 1
and recursively the -> the : 1
recursively the the -> and : 1
the and of -> the : 1
the and of -> another : 1
and of the -> pivot : 1
of the pivot -> sort : 1
the pivot sort -> a : 1
pivot sort a -> divides : 1
sort a divides -> array : 1
a divides array -> recursively : 1
divides array recursively -> them : 1
array recursively them -> merges : 1
recursively them merges -> are : 1
them merges are -> some : 1
merges are some -> more : 1
are some more -> examples : 1
some more examples -> of : 1
more examples of -> divide : 1
examples of divide -> and : 1
of divide and -> conquer : 1
and conquer algorithm -> implementation : 1
conquer algorithm implementation -> solving : 1
algorithm implementation solving -> selection : 1
implementation solving selection -> problems : 1
solving selection problems -> and : 1
selection problems and -> solving : 1
problems and solving -> matrix : 1
and solving matrix -> selection : 1
solving matrix selection -> selection : 1
matrix selection selection -> us : 1
selection selection us -> element : 1
selection us element -> in : 1
us element in -> a : 1
in a of -> of : 1
a of of -> the : 1
a of of -> a : 1
the when linear -> average : 1
when linear average -> it : 1
linear average it -> a : 1
average it a -> case : 1
it a case -> solved : 1
a case solved -> by : 1
case solved by -> sorting : 1
solved by sorting -> but : 1
by sorting but -> a : 1
sorting but a -> it : 1
but a it -> unknown : 1
a it unknown -> or : 1
it unknown or -> not : 1
unknown or not -> algorithm : 1
or not algorithm -> a : 1
not algorithm a -> assuming : 1
algorithm a assuming -> that : 1
a assuming that -> larger : 1
assuming that larger -> cutoff : 1
that larger cutoff -> point : 1
larger cutoff point -> elements : 1
cutoff point elements -> simply : 1
point elements simply -> an : 1
elements simply an -> as : 1
simply an as -> the : 1
an as the -> the : 1
the the elements -> are : 1
the elements are -> and : 1
elements are and -> elements : 1
are and elements -> are : 1
and elements are -> to : 1
elements are to -> larger : 1
are to larger -> contains : 1
to larger contains -> no : 1
larger contains no -> than : 1
contains no than -> if : 1
no than if -> in : 1
than if in -> can : 1
if in can -> be : 1
in can be -> found : 1
be found if -> the : 1
found if the -> the : 1
the the smallest -> element : 1
the smallest element -> the : 1
smallest element the -> element : 1
element the element -> the : 1
element the main -> this : 1
the main this -> algorithm : 1
main this algorithm -> quicksort : 1
this algorithm quicksort -> there : 1
algorithm quicksort there -> is : 1
quicksort there is -> only : 1
there is only -> instead : 1
is only instead -> of : 1
only instead of -> get : 1
instead of get -> a : 1
of get a -> good : 1
get a good -> the : 1
a good the -> key : 1
good the key -> idea : 1
the key idea -> to : 1
key idea to -> of : 1
idea to of -> instead : 1
to of instead -> finding : 1
of instead finding -> a : 1
instead finding a -> sample : 1
finding a sample -> the : 1
a sample the -> several : 1
sample the several -> pivot : 1
the several pivot -> selection : 1
several pivot selection -> is : 1
pivot selection is -> elements : 1
selection is elements -> into : 1
is elements into -> groups : 1
elements into groups -> of : 1
into groups of -> ignoring : 1
groups of ignoring -> of : 1
of ignoring of -> each : 1
ignoring of each -> a : 1
of each a -> of : 1
each a of -> this : 1
a of this -> the : 1
this the then -> use : 1
the then use -> as : 1
then use as -> divider : 1
use as divider -> to : 1
as divider to -> get : 1
divider to get -> and : 1
to get and -> sets : 1
get and sets -> as : 1
and sets as -> we : 1
sets as we -> discussed : 1
we discussed will -> the : 1
discussed will the -> median : 1
will the median -> five : 1
the median five -> the : 1
median five the -> quick : 1
five the quick -> which : 1
the quick which -> we : 1
quick which we -> show : 1
which we show -> that : 1
we show that -> of : 1
show that of -> five : 1
that of five -> partitioning : 1
of five partitioning -> guarantees : 1
five partitioning guarantees -> that : 1
partitioning guarantees that -> subproblem : 1
guarantees that subproblem -> roughly : 1
that subproblem roughly -> as : 1
subproblem roughly as -> matrix : 1
roughly as matrix -> multiplication : 1
as matrix multiplication -> two : 1
matrix multiplication two -> the : 1
multiplication two the -> following : 1
following is a -> compute : 1
is a compute -> where : 1
a compute where -> and : 1
compute where and -> on : 1
where and on -> from : 1
and on from -> to : 1
on from to -> compute : 1
from to compute -> we : 1
to compute we -> the : 1
compute we the -> in : 1
we the in -> with : 1
the in with -> column : 1
in with column -> in : 1
with column in -> as : 1
column in as -> arrays : 1
in as arrays -> begin : 1
as arrays begin -> at : 1
arrays begin at -> index : 1
begin at index -> the : 1
at index the -> of : 1
index the of -> preceding : 1
the of preceding -> problem : 1
of preceding problem -> int : 1
preceding problem int -> int : 1
problem int int -> for : 1
int int for -> i : 1
int for i -> i : 1
i i for -> j : 1
i for j -> j : 1
j j for -> k : 1
j for k -> k : 1
for k k -> a : 1
k k a -> it : 1
k a it -> was : 1
a it was -> that : 1
it was that -> for : 1
was that for -> but : 1
that for but -> idea : 1
for but idea -> of : 1
but idea of -> is : 1
idea of is -> matrix : 1
of is matrix -> into : 1
is matrix into -> it : 1
matrix into it -> is : 1
it is to -> the : 1
preceding we do -> eight : 1
we do eight -> multiplications : 1
do eight multiplications -> for : 1
eight multiplications for -> matrices : 1
multiplications for matrices -> of : 1
for matrices of -> size : 1
matrices of size -> x : 1
of size x -> and : 1
size x and -> matrix : 1
x and matrix -> if : 1
and matrix if -> then : 1
matrix if then -> will : 1
if then will -> be : 1
then will be -> as : 1
be as there -> such : 1
as there such -> case : 1
there such case -> when : 1
such case when -> a : 1
case when a -> power : 1
when a power -> of : 1
a power of -> but : 1
power of but -> basically : 1
of but basically -> the : 1
but basically the -> than : 1
basically the than -> a : 1
the than a -> is : 1
than a is -> it : 1
a is it -> not : 1
is it not -> generalize : 1
it not generalize -> for : 1
not generalize for -> when : 1
generalize for when -> they : 1
for when they -> zero : 1
when they zero -> run : 1
they zero run -> floating : 1
zero run floating -> point : 1
run floating point -> stable : 1
floating point stable -> the : 1
point stable the -> classic : 1
stable the classic -> seen : 1
the classic seen -> a : 1
classic seen a -> be : 1
seen a be -> as : 1
a be as -> a : 1
be as a -> in : 1
as a in -> many : 1
a in many -> cases : 1
in many cases -> a : 1
many cases a -> improvement : 1
cases a improvement -> a : 1
a improvement a -> more : 1
improvement a more -> exhaustive : 1
a more exhaustive -> any : 1
more exhaustive any -> be : 1
exhaustive any be -> directly : 1
any be directly -> a : 1
be directly a -> but : 1
directly a but -> that : 1
a but that -> often : 1
but that often -> the : 1
that often the -> will : 1
often the will -> not : 1
the will not -> justice : 1
will not justice -> the : 1
not justice the -> will : 1
justice the will -> when : 1
the will when -> we : 1
will when we -> that : 1
when we that -> to : 1
we that to -> we : 1
that to we -> a : 1
to we a -> more : 1
we a more -> to : 1
a more to -> the : 1
more to the -> by : 1
to the by -> rewriting : 1
the by rewriting -> recursive : 1
by rewriting recursive -> a : 1
rewriting recursive a -> algorithm : 1
recursive a algorithm -> that : 1
a algorithm that -> the : 1
a algorithm that -> performs : 1
algorithm that the -> technique : 1
that the technique -> makes : 1
the technique makes -> use : 1
technique makes use -> approach : 1
makes use approach -> is : 1
use approach is -> dynamic : 1
approach is dynamic -> saw : 1
is dynamic saw -> that : 1
dynamic saw that -> natural : 1
saw that natural -> the : 1
that natural the -> numbers : 1
natural the numbers -> is : 1
the numbers is -> here : 1
numbers is here -> is : 1
code to compute -> fibonacci : 1
to compute fibonacci -> numbers : 1
compute fibonacci numbers -> in : 1
fibonacci numbers in -> inefficient : 1
numbers in inefficient -> long : 1
in inefficient long -> if : 1
inefficient long if -> return : 1
long if return -> return : 1
return a t -> t : 1
a t t -> since : 1
t t since -> has : 1
t since has -> the : 1
since has the -> in : 1
has the in -> the : 1
as the on -> compute : 1
the on compute -> number : 1
on compute number -> of : 1
compute number of -> all : 1
number of all -> needed : 1
of all needed -> and : 1
all needed and -> we : 1
needed and we -> only : 1
and we only -> need : 1
we only need -> the : 1
only need the -> most : 1
need the most -> fibonacci : 1
the most fibonacci -> please : 1
most fibonacci please -> see : 1
fibonacci please see -> the : 1
following function long -> return : 1
function long return -> long : 1
long return long -> long : 1
return long long -> last : 1
long long last -> long : 1
long last long -> long : 1
last long long -> nexttolast : 1
long long nexttolast -> long : 1
long nexttolast long -> long : 1
nexttolast long long -> answer : 1
long long answer -> i : 1
long answer i -> i : 1
answer i i -> answer : 1
i i answer -> last : 1
i answer last -> nexttolast : 1
answer last nexttolast -> last : 1
last nexttolast last -> return : 1
nexttolast last return -> that : 1
last return that -> recursive : 1
return that recursive -> algorithm : 1
that recursive algorithm -> slow : 1
recursive algorithm slow -> algorithm : 1
algorithm slow algorithm -> to : 1
slow algorithm to -> to : 1
algorithm to to -> one : 1
to to one -> makes : 1
to one makes -> a : 1
one makes a -> actually : 1
makes a actually -> if : 1
a actually if -> one : 1
actually if one -> draws : 1
if one draws -> out : 1
one draws out -> entire : 1
draws out entire -> we : 1
out entire we -> that : 1
entire we that -> computed : 1
we that computed -> three : 1
that computed three -> computed : 1
computed three computed -> programming : 1
three computed programming -> and : 1
computed programming and -> the : 1
a value if -> want : 1
value if want -> to : 1
if want to -> changes : 1
want to changes -> for : 1
to changes for -> and : 1
changes for and -> an : 1
for and an -> infinite : 1
and an infinite -> of : 1
an infinite of -> valued : 1
infinite of valued -> can : 1
of valued can -> make : 1
valued can make -> the : 1
make the for -> and : 1
the for and -> there : 1
for and there -> four : 1
and there four -> and : 1
there four and -> the : 1
four and the -> output : 1
and the output -> should : 2
the output should -> and : 1
the output should -> be : 1
output should and -> there : 1
should and there -> five : 1
and there five -> and : 1
there five and -> the : 1
five and the -> output : 1
output should be -> count : 1
should be count -> the : 1
be count the -> total : 1
count the total -> of : 1
total of all -> solutions : 1
of all solutions -> two : 1
all solutions two -> that : 1
solutions two that -> contain : 1
two that contain -> coin : 1
that contain coin -> that : 1
contain coin that -> contain : 1
coin that contain -> of : 1
that contain of -> is : 1
contain of is -> the : 1
the array of -> coins : 1
array of coins -> we : 1
of coins we -> is : 1
coins we is -> the : 1
we is the -> length : 1
the and is -> value : 1
and is value -> we : 1
is value we -> have : 1
value we have -> as : 1
have as it -> can : 1
as it can -> be : 1
can be written -> the : 1
be written the -> sum : 1
written the sum -> has : 1
the sum has -> the : 1
sum has the -> optimal : 1
has the optimal -> the : 1
the optimal the -> solutions : 1
optimal the solutions -> the : 1
the solutions the -> implementation : 1
solutions the implementation -> of : 1
int int base -> int : 1
int base int -> for : 1
base int for -> for : 1
int for for -> i : 1
for for i -> i : 1
i i fill -> the : 1
i fill the -> table : 1
fill the table -> up : 1
the table up -> for : 1
table up for -> i : 1
up for i -> i : 1
i i n -> for : 1
i n for -> j : 1
n for j -> j : 1
j j x -> excluding : 1
j x excluding -> y : 1
x excluding y -> x : 1
excluding y x -> return : 1
y x return -> time : 1
x return time -> the : 1
return time the -> above : 1
time the above -> solution : 1
the above solution -> for : 1
above solution for -> is : 1
solution for is -> algorithm : 1
for is algorithm -> consists : 1
is algorithm consists -> of : 1
algorithm consists of -> for : 1
consists of for -> instance : 1
of for instance -> we : 1
for instance we -> have : 1
instance we have -> a : 1
have a text -> between : 1
a text between -> whether : 1
text between whether -> an : 1
between whether an -> a : 1
whether an a -> text : 1
an a text -> pattern : 1
a text pattern -> there : 1
text pattern there -> or : 1
pattern there or -> after : 1
there or after -> each : 1
or after each -> it : 1
after each it -> by : 1
each it by -> exactly : 1
it by exactly -> algorithm : 1
by exactly algorithm -> a : 1
exactly algorithm a -> in : 1
algorithm a in -> addition : 1
a in addition -> and : 1
in addition and -> text : 1
addition and text -> because : 1
and text because -> we : 1
text because we -> care : 1
because we care -> about : 1
we care about -> during : 1
care about during -> the : 1
about during the -> text : 1
during the text -> character : 1
the text character -> any : 1
text character any -> the : 1
character any the -> this : 1
any the this -> is : 1
the this is -> for : 1
this is for -> expected : 1
is for expected -> of : 1
for expected of -> the : 1
expected of the -> the : 1
the the algorithm -> for : 1
the algorithm for -> the : 1
algorithm for the -> on : 1
for the on -> the : 1
the on the -> search : 1
on the search -> and : 1
and and for -> in : 1
and for in -> sequential : 1
for in sequential -> simply : 1
in sequential simply -> compares : 1
sequential simply compares -> successive : 1
simply compares successive -> elements : 1
compares successive elements -> of : 1
successive elements of -> a : 1
elements of a -> list : 1
of a list -> with : 1
list with a -> until : 1
with a until -> a : 1
a until a -> found : 1
until a found -> exhausted : 1
a found exhausted -> without : 1
found exhausted without -> a : 1
exhausted without a -> a : 1
without a a -> search : 1
a a search -> the : 1
a search the -> a : 1
search the a -> selection : 1
the a selection -> entire : 1
a selection entire -> n : 1
selection entire n -> is : 1
entire n is -> to : 1
n is to -> its : 1
is to its -> and : 1
to its and -> replace : 1
its and replace -> it : 1
replace it the -> smallest : 1
it the smallest -> is : 1
the smallest is -> position : 1
smallest is position -> in : 1
is position in -> the : 1
the the scanned -> in : 1
the scanned in -> order : 1
scanned in order -> find : 1
in order find -> element : 1
order find element -> among : 1
find element among -> and : 1
element among and -> with : 1
among and with -> the : 1
and with the -> is : 1
with the is -> put : 1
the is put -> after : 1
is put after -> basic : 1
put after basic -> of : 1
after basic of -> a : 1
basic of a -> selection : 1
of a selection -> the : 1
a selection the -> algorithm : 1
selection the algorithm -> of : 1
the algorithm of -> is : 1
algorithm of is -> bubble : 1
of is bubble -> of : 1
is bubble of -> a : 1
bubble of a -> in : 1
a in adjacent -> of : 1
in adjacent of -> the : 1
adjacent of the -> list : 1
the list are -> exchanged : 1
list are exchanged -> they : 1
are exchanged they -> is : 1
exchanged they is -> then : 1
they is then -> swap : 1
is then swap -> and : 1
then swap and -> of : 1
swap and of -> is : 1
and of is -> the : 1
the the of -> key : 1
the of key -> and : 1
the worst is -> preceding : 1
worst is preceding -> of : 1
is preceding of -> bubble : 1
preceding of bubble -> improved : 1
of bubble improved -> a : 1
bubble improved a -> the : 1
improved a the -> list : 1
a the list -> exchanges : 1
the list exchanges -> the : 1
list exchanges the -> list : 1
exchanges the list -> has : 1
the list has -> in : 1
list has in -> and : 1
has in and -> will : 1
in and will -> be : 1
the worst and -> weaknesses : 1
worst and weaknesses -> of : 1
weaknesses of a -> wide : 1
of a wide -> applicability : 1
a wide applicability -> is : 1
wide applicability is -> known : 1
applicability is known -> for : 1
is known for -> for : 1
known for for -> some : 1
for for some -> such : 1
for some such -> as : 1
some such as -> string : 1
such as string -> matrix : 1
as string matrix -> yields : 1
string matrix yields -> simple : 1
matrix yields simple -> such : 1
yields simple such -> sum : 1
simple such sum -> n : 1
such sum n -> finding : 1
sum n finding -> the : 1
n finding the -> a : 1
finding the a -> the : 1
a the approach -> are : 1
the approach are -> algorithms : 1
approach are algorithms -> are : 1
are algorithms are -> unacceptably : 1
algorithms are unacceptably -> is : 1
are unacceptably is -> neither : 1
unacceptably is neither -> as : 1
is neither as -> as : 1
neither as as -> as : 1
as as as -> a : 1
as a technique -> uses : 1
a technique uses -> a : 1
technique uses a -> of : 1
uses a of -> randomness : 1
a of randomness -> of : 1
of randomness of -> its : 1
randomness of its -> it : 1
of its it -> typically : 1
its it typically -> to : 1
it typically to -> reduce : 1
typically to reduce -> either : 1
to reduce either -> running : 1
reduce either running -> the : 1
either running the -> in : 1
running the in -> a : 1
in a standard -> algorithm : 1
a standard algorithm -> by : 1
standard algorithm by -> generating : 1
algorithm by generating -> a : 1
by generating a -> random : 1
generating a random -> a : 1
a random a -> and : 1
random a and -> making : 1
a and making -> the : 1
and making the -> help : 1
making the help -> a : 1
the help a -> situation : 1
help a situation -> doubt : 1
a situation doubt -> by : 1
situation doubt by -> a : 1
doubt by a -> or : 1
by a or -> a : 1
or a a -> card : 1
a a card -> a : 1
a card a -> deck : 2
card a deck -> make : 2
a deck make -> a : 2
deck make a -> this : 1
deck make a -> we : 1
make a this -> a : 1
a this a -> by : 1
this a by -> in : 1
a by in -> to : 1
by in to -> obtain : 1
in to obtain -> a : 1
to obtain a -> that : 1
obtain a that -> but : 1
a that but -> would : 1
that but would -> be : 1
but would be -> the : 1
would be the -> algorithm : 1
be the algorithm -> is : 1
algorithm is addition -> to : 1
is addition to -> its : 1
addition to its -> a : 1
to its a -> of : 1
its a of -> random : 1
a of random -> it : 1
of random it -> for : 1
random it for -> purpose : 1
it for purpose -> even : 1
for purpose even -> a : 1
purpose even a -> fixed : 1
even a fixed -> different : 1
a fixed different -> runs : 1
fixed different runs -> a : 1
different runs a -> may : 1
runs a may -> give : 1
a may give -> different : 1
may give different -> a : 1
give different a -> of : 1
different a of -> of : 1
of of a -> when : 1
of a when -> time : 1
a when time -> of : 1
when time of -> a : 1
time of a -> randomized : 1
of a randomized -> a : 1
a randomized a -> random : 1
randomized a random -> algorithms : 1
a random algorithms -> traced : 1
random algorithms traced -> back : 1
algorithms traced back -> but : 1
traced back but -> central : 1
back but central -> importance : 1
but central importance -> recognized : 1
central importance recognized -> only : 1
importance recognized only -> years : 1
recognized only years -> the : 1
only years the -> was : 1
years the was -> randomized : 1
the was randomized -> solovay : 1
was randomized solovay -> and : 1
randomized solovay and -> a : 1
solovay and a -> an : 1
and a an -> case : 1
a an case -> solution : 1
an case solution -> acceptable : 1
case solution acceptable -> to : 1
solution acceptable to -> erroneous : 1
acceptable to erroneous -> an : 1
to erroneous an -> is : 1
erroneous an is -> in : 1
an is in -> the : 1
the by repeating -> the : 1
by repeating the -> randomized : 1
repeating the randomized -> algorithm : 1
the randomized algorithm -> several : 1
randomized algorithm several -> subsamples : 1
algorithm several subsamples -> comparing : 1
several subsamples comparing -> their : 1
subsamples comparing their -> it : 1
comparing their it -> is : 1
their it is -> common : 1
it is common -> randomized : 1
is common randomized -> to : 1
common randomized to -> amplify : 1
randomized to amplify -> of : 1
to amplify of -> the : 1
amplify of the -> too : 1
of the too -> the : 1
the too the -> running : 1
too the running -> the : 1
the running the -> for : 1
running the for -> such : 1
the for such -> as : 1
for such as -> and : 1
as and gather -> the : 1
and gather the -> distribution : 1
gather the distribution -> their : 1
the distribution their -> input : 1
distribution their input -> data : 1
their input data -> by : 1
input data by -> certain : 1
data by certain -> useful : 1
by certain useful -> to : 1
certain useful to -> which : 1
useful to which -> is : 1
is in one -> every : 1
in one every -> fixed : 1
one every fixed -> input : 1
every fixed input -> almost : 1
fixed input almost -> all : 1
input almost all -> to : 1
almost all to -> though : 1
all to though -> cause : 1
to though cause -> algorithm : 1
though cause algorithm -> in : 1
cause algorithm in -> a : 1
algorithm in a -> similar : 1
in a similar -> randomized : 1
a similar randomized -> divide : 1
similar randomized divide -> and : 1
randomized divide and -> conquer : 1
and conquer are -> based : 1
conquer are based -> on : 1
are based on -> cannot : 1
based on cannot -> random : 1
on cannot random -> randomized : 1
cannot random randomized -> are : 1
random randomized are -> a : 1
randomized are a -> pseudorandom : 1
are a pseudorandom -> generator : 1
a pseudorandom generator -> a : 1
pseudorandom generator a -> true : 1
generator a true -> the : 1
a true the -> a : 1
true the a -> it : 1
the a it -> is : 1
a it is -> a : 1
is a range -> of : 1
range of an -> extremely : 1
of an extremely -> the : 1
an extremely the -> two : 1
extremely the two -> types : 1
the two types -> that : 1
two types that -> randomized : 1
types that randomized -> often : 1
that randomized often -> or : 1
randomized often or -> a : 1
often or a -> smaller : 1
or a smaller -> than : 1
a smaller than -> that : 1
smaller than that -> of : 1
than that of -> best : 1
that of best -> we : 1
of best we -> of : 1
best we of -> for : 1
we of for -> but : 1
of for but -> even : 1
for but even -> more : 1
but even more -> if : 1
even more if -> we : 1
more if we -> at : 1
if we at -> the : 1
we at the -> various : 1
at the various -> randomized : 1
the various randomized -> we : 1
various randomized we -> they : 1
randomized we they -> are : 1
they are understand -> to : 1
are understand to -> introduction : 1
understand to introduction -> of : 1
to introduction of -> suffices : 1
introduction of suffices -> to : 1
of suffices to -> a : 1
suffices to a -> deterministic : 1
to a deterministic -> with : 1
a deterministic with -> behavior : 1
deterministic with behavior -> a : 1
with behavior a -> algorithm : 1
behavior a algorithm -> that : 1
algorithm that performs -> well : 1
that performs well -> high : 1
performs well high -> probability : 1
well high probability -> possible : 1
high probability possible -> algorithms : 1
probability possible algorithms -> in : 1
possible algorithms in -> they : 1
algorithms in they -> these : 1
in they these -> or : 1
they these or -> the : 1
these or the -> time : 1
or the time -> complexity : 1
time complexity this -> a : 1
complexity this a -> and : 1
this a and -> the : 1
and the quicksort -> always : 1
the quicksort always -> sorts : 1
quicksort always sorts -> input : 1
always sorts input -> expected : 1
sorts input expected -> quicksort : 1
input expected quicksort -> result : 1
expected quicksort result -> with : 1
quicksort result with -> some : 1
result with some -> algorithms : 1
with some algorithms -> deterministic : 1
some algorithms deterministic -> and : 1
algorithms deterministic and -> out : 1
deterministic and out -> the : 1
out the this -> implementation : 1
the this implementation -> of : 1
this implementation of -> algorithm : 1
implementation of algorithm -> produces : 1
of algorithm produces -> minimum : 1
algorithm produces minimum -> cut : 1
produces minimum cut -> with : 1
minimum cut with -> probability : 1
cut with probability -> equal : 1
with probability equal -> to : 1
probability equal to -> number : 1
equal to number -> and : 1
to number and -> has : 1
number and has -> a : 1
and has a -> time : 1
a time of -> another : 1
time of another -> example : 1
of another example -> is : 1
another example is -> the : 1
example is the -> for : 1
is the for -> number : 1
the for number -> our : 1
for number our -> must : 1
number our must -> have : 1
our must have -> a : 1
have a on -> a : 1
a on a -> since : 1
on a since -> will : 1
a since will -> depend : 1
since will depend -> be : 1
will depend be -> to : 1
depend be to -> that : 1
be to that -> to : 1
to that to -> random : 1
that to random -> have : 1
to random have -> pseudorandom : 1
random have pseudorandom -> these : 1
have pseudorandom these -> this : 1
pseudorandom these this -> said : 1
these this said -> than : 1
this said than -> only : 1
said than only -> a : 1
than only a -> we : 1
only a we -> a : 1
a we a -> or : 1
we a or -> to : 1
or to is -> to : 1
to is to -> might : 1
is to might -> record : 1
to might record -> time : 1
might record time -> that : 1
record time that -> counts : 1
time that counts -> of : 1
that counts of -> seconds : 1
counts of seconds -> since : 1
of seconds since -> a : 1
seconds since a -> of : 1
since a of -> is : 1
a of is -> one : 1
of is one -> second : 1
is one second -> is : 1
one second is -> a : 1
second is a -> the : 1
is a the -> might : 1
is a the -> complex : 1
a the might -> at : 1
the might at -> while : 1
might at while -> is : 1
at while is -> the : 1
while is the -> time : 1
the time was -> recorded : 1
time was recorded -> in : 1
was recorded in -> program : 1
recorded in program -> was : 1
in program was -> the : 1
program was the -> of : 1
was the of -> numbers : 1
the of numbers -> that : 1
of numbers that -> would : 1
numbers that would -> far : 1
that would far -> the : 1
would far the -> time : 1
far the time -> to : 1
the time to -> be : 1
time to be -> essentially : 1
to be essentially -> that : 1
be essentially that -> what : 1
essentially that what -> is : 1
that what is -> a : 1
what is a -> numbers : 1
is a numbers -> if : 1
a numbers if -> a : 1
numbers if a -> heads : 1
if a heads -> be : 1
a heads be -> come : 1
heads be come -> up : 1
be come up -> heads : 1
come up heads -> simplest : 1
up heads simplest -> to : 1
heads simplest to -> linear : 1
simplest to linear -> which : 1
to linear which -> are : 1
linear which are -> is : 1
which are is -> the : 1
are is the -> implementation : 1
of the const -> int : 1
the const int -> a : 1
const int a -> const : 1
int a const -> int : 1
a const int -> m : 1
const int m -> int : 1
int m int -> explicit : 1
m int explicit -> initialvalue : 1
int explicit initialvalue -> int : 1
explicit initialvalue int -> double : 1
initialvalue int double -> int : 1
int double int -> int : 1
double int int -> initialvalue : 1
int int initialvalue -> state : 1
int initialvalue state -> state : 1
initialvalue state state -> return : 1
state state return -> state : 1
state return state -> return : 1
return state return -> return : 1
state return return -> of : 1
return return of -> randomized : 1
return of randomized -> will : 1
of randomized will -> now : 1
randomized will now -> work : 1
will now work -> on : 1
now work on -> writing : 1
work on writing -> a : 1
on writing a -> to : 1
writing a to -> verify : 1
a to verify -> the : 1
to verify the -> a : 1
verify the a -> public : 1
the a public -> a : 1
a public a -> or : 1
public a or -> task : 1
a or task -> is : 1
or task is -> captcha : 1
task is captcha -> time : 1
is captcha time -> and : 1
captcha time and -> user : 1
time and user -> human : 1
and user human -> or : 1
user human or -> not : 1
human or not -> captcha : 1
or not captcha -> as : 1
not captcha as -> the : 1
captcha as the -> set : 1
as the set -> captcha : 1
the set captcha -> stored : 1
set captcha stored -> a : 1
captcha stored a -> that : 1
stored a that -> a : 1
a that a -> captcha : 1
that a captcha -> a : 1
a captcha a -> random : 1
captcha a random -> generated : 1
a random generated -> using : 1
random generated using -> a : 1
generated using a -> number : 1
using a number -> a : 1
a number a -> new : 1
number a new -> this : 1
a new this -> of : 1
new this of -> to : 1
this of to -> generate : 1
of to generate -> captcha : 1
to generate captcha -> is : 1
generate captcha is -> the : 1
captcha is the -> implementation : 1
implementation of code -> for : 1
of code for -> generating : 1
code for generating -> a : 1
for generating a -> char : 1
generating a char -> chrs : 1
a char chrs -> generate : 1
char chrs generate -> n : 1
chrs generate n -> above : 1
generate n above -> add : 1
n above add -> characters : 1
above add characters -> string : 1
add characters string -> captcha : 1
characters string captcha -> return : 1
string captcha return -> design : 1
captcha return design -> examine : 1
return design examine -> as : 1
design examine as -> name : 1
examine as name -> backtrack : 1
as name backtrack -> to : 1
name backtrack to -> we : 1
backtrack to we -> start : 1
to we start -> one : 1
we start one -> possible : 1
start one possible -> move : 1
one possible move -> of : 1
possible move of -> available : 1
move of available -> moves : 1
of available moves -> and : 1
available moves and -> the : 1
moves and the -> are : 1
and the are -> able : 1
the are able -> to : 1
are able to -> the : 1
able to the -> with : 1
to the with -> we : 1
the with we -> will : 1
with we will -> we : 1
we will we -> and : 1
will we and -> other : 1
we and other -> solve : 1
and other solve -> if : 1
other solve if -> moves : 1
solve if moves -> we : 1
if moves we -> there : 1
moves we there -> solution : 1
we there solution -> in : 1
there solution in -> a : 1
solution in a -> to : 1
in a to -> a : 1
a to a -> of : 1
to a of -> with : 1
a of with -> always : 1
of with always -> the : 1
with always the -> and : 1
always the and -> even : 1
the and even -> some : 1
and even some -> a : 1
even some a -> exhaustive : 1
some a exhaustive -> search : 1
a exhaustive search -> notation : 1
exhaustive search notation -> resembling : 1
search notation resembling -> a : 1
notation resembling a -> simplified : 1
resembling a simplified -> programming : 1
a simplified programming -> for : 1
simplified programming for -> this : 1
programming for this -> algorithm : 1
for this algorithm -> is : 1
as a path -> the : 1
a path the -> starting : 1
path the starting -> check : 1
the starting check -> selected : 1
starting check selected -> is : 1
check selected is -> if : 1
selected is if -> and : 1
is if and -> to : 1
if and to -> rest : 1
and to rest -> the : 1
to rest the -> if : 1
rest the if -> returns : 1
the if returns -> undo : 1
if returns undo -> current : 1
returns undo current -> and : 1
undo current and -> end : 1
current and end -> of : 1
and end of -> the : 1
of the no -> of : 1
the no of -> is : 1
no of is -> pretty : 1
of is pretty -> but : 1
is pretty but -> algorithm : 1
pretty but algorithm -> any : 1
but algorithm any -> be : 1
algorithm any be -> a : 1
any be a -> furniture : 1
be a furniture -> in : 1
a furniture in -> a : 1
a new example -> a : 1
new example a -> problem : 1
example a problem -> a : 1
a problem a -> new : 1
problem a new -> many : 1
a new many -> to : 1
new many to -> but : 1
many to but -> only : 1
to but only -> a : 1
but only a -> are : 1
only a are -> of : 1
a are of -> placed : 1
are of placed -> the : 1
of placed the -> if : 1
placed the if -> then : 1
the if then -> the : 1
if then the -> if : 1
then the if -> we : 1
if we reach -> a : 1
we reach a -> all : 1
reach a all -> placement : 1
a all placement -> have : 1
all placement have -> the : 1
placement have the -> and : 1
and of another -> undo : 1
of another undo -> and : 1
another undo and -> if : 1
undo and if -> all : 1
and if all -> first : 1
if all first -> there : 1
all first there -> placement : 1
first there placement -> of : 1
there placement of -> is : 1
placement of is -> with : 1
of is with -> a : 1
is with a -> algorithm : 1
with a algorithm -> it : 1
a algorithm it -> not : 1
algorithm it not -> all : 1
it not all -> arrangements : 1
not all arrangements -> placing : 1
all arrangements placing -> in : 1
arrangements placing in -> kitchen : 1
placing in kitchen -> bad : 1
in kitchen bad -> arrangements : 1
kitchen bad arrangements -> discarded : 1
bad arrangements discarded -> because : 1
arrangements discarded because -> subset : 1
discarded because subset -> of : 1
because subset of -> the : 1
subset of the -> arrangement : 1
of the arrangement -> is : 1
the arrangement is -> the : 1
arrangement is the -> of : 1
of a group -> possibilities : 1
a group possibilities -> in : 1
group possibilities in -> as : 1
possibilities in as -> is : 1
in as is -> a : 1
a if both -> a : 1
if both a -> not : 1
both a not -> a : 1
a not a -> matter : 1
not a matter -> that : 1
a matter that -> loses : 1
matter that loses -> always : 1
that loses always -> be : 1
loses always be -> certain : 1
always be certain -> known : 1
be certain known -> and : 1
certain known and -> be : 1
known and be -> handled : 1
and be handled -> a : 1
be handled a -> lookup : 1
handled a lookup -> other : 1
a lookup other -> such : 1
lookup other such -> as : 1
such as taking -> the : 1
as taking the -> center : 1
taking the center -> it : 1
the center it -> is : 1
center it is -> if : 1
it is if -> using : 1
is if using -> a : 1
if using a -> table : 1
using a table -> we : 1
a table we -> always : 1
table we always -> a : 1
we always a -> move : 1
always a move -> on : 1
a move on -> general : 1
move on general -> is : 1
on general is -> to : 1
general is to -> evaluation : 1
is to evaluation -> to : 1
to evaluation to -> a : 1
evaluation to a -> a : 1
to a a -> a : 1
a a a -> win : 1
a a win -> for : 1
a win for -> a : 1
win for a -> of : 1
for a of -> a : 1
a of a -> a : 1
a a the -> has : 1
a the has -> would : 1
the has would -> a : 1
has would a -> a : 1
would a a -> position : 1
a a position -> assignment : 1
a position assignment -> be : 1
position assignment be -> by : 1
assignment be by -> examining : 1
be by examining -> board : 1
by examining board -> a : 1
examining board a -> if : 1
board a if -> a : 1
a if a -> is : 1
if a is -> position : 1
a is position -> is : 1
is position is -> assuming : 1
position is assuming -> is : 1
is assuming is -> known : 1
assuming is known -> as : 1
is known as -> a : 2
known as a -> one : 1
known as a -> it : 1
as a one -> player : 1
a one player -> is : 1
one player is -> the : 1
player is the -> value : 1
is the value -> of : 1
value of while -> the : 1
of while the -> player : 1
while the player -> position : 1
the player position -> of : 1
player position of -> p : 1
position of p -> is : 1
of p is -> that : 1
p is that -> p : 1
is that p -> by : 1
that p by -> if : 1
p by if -> the : 1
by if the -> computer : 1
if the computer -> to : 1
the computer to -> move : 1
computer to move -> in : 1
to move in -> recursively : 1
move in recursively -> the : 1
in recursively the -> of : 1
recursively the of -> successor : 1
the of successor -> move : 1
of successor move -> the : 1
successor move the -> of : 1
move the of -> are : 1
the of are -> recursively : 1
of are recursively -> represents : 1
are recursively represents -> the : 1
recursively represents the -> most : 1
represents the most -> reply : 1
the most reply -> for : 1
most reply for -> costly : 1
reply for costly -> where : 1
for costly where -> to : 1
costly where to -> the : 1
where to the -> opening : 1
to the opening -> since : 1
the opening since -> at : 1
opening since at -> stage : 1
since at stage -> the : 1
at stage the -> is : 1
stage the is -> a : 1
a the complex -> such : 1
the complex such -> it : 1
complex such it -> obviously : 1
such it obviously -> the : 1
it obviously the -> terminal : 1
obviously the terminal -> in : 1
the terminal in -> we : 1
terminal in we -> a : 1
in we a -> certain : 1
we a certain -> is : 1
certain is the -> is : 1
the is terminal -> are : 1
is terminal are -> a : 1
terminal are a -> that : 1
are a that -> value : 1
a that value -> of : 1
that value of -> for : 1
value of for -> a : 1
for a chess -> such : 1
a chess such -> variables : 1
chess such variables -> the : 1
such variables the -> relative : 1
variables the relative -> and : 1
the relative and -> positional : 1
relative and positional -> crucial : 1
and positional crucial -> for : 1
positional crucial for -> because : 1
crucial for because -> selection : 1
for because selection -> maximizing : 1
because selection maximizing -> basic : 1
selection maximizing basic -> the : 1
maximizing basic the -> programs : 1
basic the programs -> is : 1
the programs is -> up : 1
programs is up -> fewer : 1
is up fewer -> losing : 1
up fewer losing -> one : 1
fewer losing one -> that : 1
losing one that -> we : 1
one that we -> have : 1
we have seen -> to : 1
have seen to -> a : 1
seen to a -> to : 1
to a to -> keep : 1
a to keep -> all : 1
to keep all -> been : 1
keep all been -> for : 1
all been for -> in : 1
been for in -> the : 1
in the course -> of : 1
the course of -> searching : 1
course of searching -> examine : 1
of searching examine -> if : 1
searching examine if -> the : 1
examine if the -> second : 1
if the second -> occurrence : 1
the second occurrence -> a : 1
second occurrence a -> not : 1
occurrence a not -> it : 1
a not it -> essentially : 1
not it essentially -> becomes : 1
it essentially becomes -> a : 1
essentially becomes a -> structure : 1
becomes a structure -> is : 1
a structure is -> known : 1
structure is known -> as : 1
a it almost -> always : 1
it almost always -> implemented : 1
almost always implemented -> in : 1
always implemented in -> save : 1
implemented in save -> a : 1
in save a -> chess : 1
save a chess -> where : 1
a chess where -> are : 1
chess where are -> few : 1
where are few -> a : 1
are few a -> search : 1
few a search -> one : 1
a search one -> is : 1
search one is -> as : 1
one is as -> this : 1
is as this -> we : 1
as this we -> have : 1
have discussed applications -> of : 1
discussed applications of -> we : 1
applications of we -> can : 1
can solve a -> problem : 1
solve a problem -> using : 1
a problem using -> the : 1
problem using the -> greedy : 1
using the greedy -> we : 1
the greedy we -> can : 1
greedy we can -> improve : 1
we can improve -> matrix : 1
we can improve -> the : 1
can improve matrix -> multiplication : 1
improve matrix multiplication -> time : 1
matrix multiplication time -> performance : 1
multiplication time performance -> using : 1
time performance using -> the : 1
performance using the -> using : 1
using the using -> dynamic : 1
the using dynamic -> we : 1
using dynamic we -> can : 1
dynamic we can -> improve : 1
can improve the -> time : 1
improve the time -> complexity : 1
complexity of fibonacci -> number : 1
of fibonacci number -> by : 1
fibonacci number by -> removing : 1
number by removing -> the : 1
by removing the -> we : 1
removing the we -> can : 1
see that selection -> sort : 1
that selection sort -> and : 1
selection sort and -> bubble : 1
sort and bubble -> which : 1
and bubble which -> we : 1
bubble which we -> had : 1
which we had -> discussed : 1
in a previous -> are : 1
a previous are -> we : 1
previous are we -> have : 1
are we have -> found : 1
have found that -> using : 1
found that using -> a : 1
that using a -> randomized : 1
using a randomized -> algorithm : 1
a randomized algorithm -> could : 1
randomized algorithm could -> help : 1
algorithm could help -> in : 1
could help in -> a : 1
help in a -> situation : 1
in a situation -> of : 1
a situation of -> such : 1
situation of such -> as : 1
such as flipping -> a : 1
as flipping a -> coin : 1
flipping a coin -> or : 1
a coin or -> drawing : 1
coin or drawing -> a : 1
or drawing a -> card : 1
drawing a card -> a : 1
make a we -> used : 1
a we used -> a : 1
we used a -> backtracking : 1
used a backtracking -> algorithm : 1
a backtracking algorithm -> to : 1
backtracking algorithm to -> arrange : 1
algorithm to arrange -> furniture : 1
to arrange furniture -> in : 1
arrange furniture in -> a : 1
a new house -> or : 1
new house or -> to : 1
house or to -> play : 1
or to play -> a : 1
to play a -> is : 1
play a is -> the : 1
the best algorithm -> we : 1
best algorithm we -> can : 1
algorithm we can -> use : 1
use to solve -> is : 1
to solve is -> algorithm : 1
solve is algorithm -> better : 1
is algorithm better -> in : 1
algorithm better in -> multiplying : 1
better in multiplying -> a : 1
in multiplying a -> is : 1
multiplying a is -> a : 1
a simple example -> of : 1
simple example of -> backtracking : 1
example of backtracking -> algorithm : 1
of backtracking algorithm -> do : 1
backtracking algorithm do -> we : 1
algorithm do we -> use : 1
do we use -> to : 1
use to generate -> further : 1
to generate further -> please : 1
generate further please -> visit : 1
the following books -> you : 1
following books you -> may : 1
you may you -> enjoyed : 1
may you enjoyed -> this : 1
you enjoyed this -> you : 1
enjoyed this you -> may : 1
this you may -> be : 1
you may be -> interested : 1
may be interested -> in : 1
be interested in -> these : 1
interested in these -> other : 1
in these other -> books : 1
these other books -> by : 1
other books by -> high : 1
books by high -> viktor : 1
by high viktor -> of : 1
high viktor of -> modern : 1
viktor of modern -> constructs : 1
of modern constructs -> and : 1
modern constructs and -> hardware : 1
constructs and hardware -> such : 1
and hardware such -> as : 1
hardware such as -> cpu : 1
such as cpu -> cache : 1
as cpu cache -> to : 1
cpu cache to -> boost : 1
cache to boost -> specialized : 1
to boost specialized -> data : 1
boost specialized data -> structures : 1
specialized data structures -> for : 1
data structures for -> modern : 1
structures for modern -> metaprogramming : 1
for modern metaprogramming -> techniques : 1
modern metaprogramming techniques -> to : 1
metaprogramming techniques to -> reduce : 1
techniques to reduce -> runtime : 1
to reduce runtime -> efficient : 1
reduce runtime efficient -> memory : 1
runtime efficient memory -> management : 1
efficient memory management -> using : 1
memory management using -> custom : 1
management using custom -> memory : 1
using custom memory -> boilerplate : 1
custom memory boilerplate -> code : 1
memory boilerplate code -> using : 1
boilerplate code using -> reflection : 1
code using reflection -> the : 1
using reflection the -> benefits : 1
reflection the benefits -> of : 1
the benefits of -> concurrent : 1
benefits of concurrent -> optimizations : 1
of concurrent optimizations -> with : 1
concurrent optimizations with -> preserved : 1
optimizations with preserved -> readability : 1
with preserved readability -> using : 1
preserved readability using -> proxy : 1
readability using proxy -> insights : 1
using proxy insights -> into : 1
proxy insights into -> subtle : 1
insights into subtle -> optimizations : 1
into subtle optimizations -> used : 1
subtle optimizations used -> by : 1
optimizations used by -> stl : 1
used by stl -> the : 1
by stl the -> range : 1
stl the range -> library : 1
the range library -> for : 1
range library for -> expressive : 1
library for expressive -> your : 1
for expressive your -> code : 1
expressive your code -> over : 1
your code over -> cpu : 1
code over cpu -> and : 1
over cpu and -> without : 1
cpu and without -> compromising : 1
and without compromising -> the : 1
without compromising the -> arthur : 1
compromising the arthur -> your : 1
the arthur your -> own : 1
arthur your own -> iterator : 1
your own iterator -> and : 1
own iterator and -> thread : 1
iterator and thread -> every : 1
and thread every -> standard : 1
thread every standard -> container : 1
every standard container -> and : 1
standard container and -> every : 1
container and every -> standard : 1
and every standard -> your : 1
every standard your -> code : 1
standard your code -> by : 1
your code by -> replacing : 1
code by replacing -> with : 1
by replacing with -> smart : 1
replacing with smart -> the : 1
with smart the -> difference : 1
smart the difference -> between : 1
difference between monomorphic -> polymorphic : 1
between monomorphic polymorphic -> and : 1
monomorphic polymorphic and -> generic : 1
polymorphic and generic -> the : 1
and generic the -> meaning : 1
generic the meaning -> and : 1
the meaning and -> applications : 1
meaning and applications -> of : 1
and applications of -> vocabulary : 1
applications of vocabulary -> product : 1
of vocabulary product -> type : 1
vocabulary product type -> and : 1
product type and -> sum : 1
type and sum -> a : 1
and sum a -> review : 1
sum a review -> let : 1
what you share -> your : 1
you share your -> thoughts : 1
share your thoughts -> on : 1
your thoughts on -> this : 1
thoughts on this -> book : 1
on this book -> with : 1
this book with -> others : 1
book with others -> by : 1
with others by -> leaving : 1
others by leaving -> a : 1
by leaving a -> review : 1
leaving a review -> on : 1
that you bought -> it : 1
you bought it -> you : 1
bought it you -> purchased : 1
it you purchased -> the : 1
you purchased the -> book : 1
purchased the book -> from : 1
the book from -> please : 1
book from please -> leave : 1
from please leave -> us : 1
please leave us -> an : 1
leave us an -> honest : 1
us an honest -> review : 1
an honest review -> on : 1
honest review on -> this : 1
review on this -> amazon : 1
on this amazon -> this : 1
this amazon this -> is : 1
amazon this is -> vital : 1
this is vital -> so : 1
is vital so -> that : 1
vital so that -> other : 1
that other potential -> readers : 1
other potential readers -> can : 1
readers can see -> and : 1
can see and -> use : 1
to make purchasing -> we : 1
make purchasing we -> can : 1
purchasing we can -> understand : 1
we can understand -> what : 1
understand what our -> customers : 1
what our customers -> think : 1
our customers think -> about : 1
customers think about -> our : 1
feedback on the -> title : 1
on the title -> that : 1
the title that -> they : 1
title that they -> have : 1
that they have -> worked : 1
they have worked -> with : 1
worked with packt -> to : 1
with packt to -> it : 1
packt to it -> will : 1
to it will -> only : 1
will only take -> a : 1
only take a -> few : 1
take a few -> minutes : 1
a few minutes -> of : 1
few minutes of -> your : 1
minutes of your -> but : 1
of your but -> is : 1
your but is -> valuable : 1
but is valuable -> to : 1
is valuable to -> other : 1
valuable to other -> potential : 1
to other potential -> our : 1
other potential our -> and : 1
potential our and -> thank : 1
