rights : 1
prior : 1
permission : 1
brief : 1
quotations : 1
preparation : 1
contained : 1
sold : 1
dealers : 1
held : 1
liable : 1
damages : 1
alleged : 1
indirectly : 1
endeavored : 1
trademark : 1
products : 1
sandeep : 1
ketan : 1
safis : 1
jason : 1
shraddha : 1
june : 1
digital : 1
leading : 1
plan : 1
personal : 1
advance : 1
coding : 1
ebooks : 1
skill : 1
plans : 1
video : 1
bookmark : 1
epub : 1
upgrade : 1
entitled : 1
discount : 1
touch : 1
discounts : 1
career : 1
llvm : 1
coauthored : 1
fanatic : 1
enthusiast : 1
college : 1
excelled : 1
garnered : 1
image : 1
graphics : 1
virtue : 1
quest : 1
eagerly : 1
authored : 1
shares : 1
learnings : 1
recipient : 1
mvp : 1
award : 1
science : 1
vanderbilt : 1
recruiting : 1
submit : 1
highlights : 1
evolved : 1
talks : 1
focuses : 1
deals : 1
delves : 1
emailed : 1
downloads : 1
onscreen : 1
unzip : 1
bundle : 1
bundles : 1
images : 1
dummy : 1
wish : 1
mkdir : 1
menus : 1
notes : 1
mention : 1
questions : 1
mistakes : 1
mistake : 1
report : 1
selecting : 1
clicking : 1
errata : 1
submission : 1
entering : 1
illegal : 1
contact : 1
expertise : 1
contributing : 1
purchase : 1
ibm : 1
presentation : 1
pc : 1
character : 1
existed : 1
worldwide : 1
vendors : 1
vendor : 1
sensor : 1
near : 1
solving : 1
gathering : 1
schedules : 1
locally : 1
xevent : 1
select : 1
exposuremask : 1
cascading : 1
selected : 1
displaying : 1
redraw : 1
successful : 1
edition : 1
runaway : 1
nt : 1
prtotype : 1
winapi : 1
hinstance : 1
lpstr : 1
msg : 1
wc : 1
procedure : 1
minimalist : 1
mac : 1
peruse : 1
directives : 1
bunch : 1
legal : 1
directive : 1
qmessagebox : 1
clicked : 1
qpushbutton : 1
stripped : 1
displays : 1
messaging : 1
annotated : 1
frameworks : 1
bonus : 1
mutability : 1
candidates : 1
rss : 1
operational : 1
conal : 1
elliott : 1
paul : 1
hudak : 1
community : 1
strict : 1
gaining : 1
traction : 1
emergence : 1
testimony : 1
sticking : 1
necessitated : 1
throw : 1
placeholder : 1
decided : 1
deviating : 1
ienumerator : 1
requestor : 1
polled : 1
employs : 1
pulling : 1
pushes : 1
handed : 1
employing : 1
beneficial : 1
environments : 1
striven : 1
priority : 1
simpleobserver : 1
capability : 1
naturally : 1
speculate : 1
dedicated : 1
bounding : 1
rect : 1
hbrush : 1
brush : 1
cstring : 1
mywindow : 1
derives : 1
restriction : 1
rectangular : 1
schematic : 1
route : 1
wired : 1
cpaintdc : 1
cbrush : 1
cpen : 1
cfont : 1
crgn : 1
draws : 1
width : 1
devise : 1
cpoint : 1
speaking : 1
non : 1
cmouseapp : 1
wire : 1
duals : 1
captures : 1
movements : 1
wet : 1
ideals : 1
proficient : 1
master : 1
reiterate : 1
underpinning : 1
briefly : 1
emphasizing : 1
standardized : 1
revision : 1
wave : 1
relying : 1
squarely : 1
aegis : 1
superb : 1
resorting : 1
esoteric : 1
enhancements : 1
parameterization : 1
udt : 1
substituted : 1
exploits : 1
indirect : 1
tons : 1
mimic : 1
checked : 1
relational : 1
routines : 1
initializer : 1
augment : 1
expressiveness : 1
myriad : 1
responsibility : 1
enough : 1
rope : 1
shoot : 1
yourself : 1
substitute : 1
mimics : 1
templated : 1
sacrificed : 1
partly : 1
inadvertent : 1
universe : 1
innovations : 1
collector : 1
delve : 1
advancing : 1
deducing : 1
inferences : 1
vt : 1
specifies : 1
deduced : 1
infers : 1
figure : 1
vcw : 1
ending : 1
synthesize : 1
ts : 1
synthesizes : 1
understands : 1
unpacking : 1
alias : 1
mutation : 1
indicted : 1
lvalue : 1
refreence : 1
swapping : 1
temporaries : 1
floatbuffer : 1
steal : 1
grabbed : 1
null : 1
stolen : 1
pinter : 1
movable : 1
leak : 1
slow : 1
referencing : 1
deque : 1
smartpointer : 1
counting : 1
pointing : 1
counts : 1
orgininal : 1
sp : 1
destruction : 1
defunct : 1
remarkable : 1
negative : 1
accumulate : 1
binaryoperation : 1
overloading : 1
bubble : 1
cmplambda : 1
stops : 1
expanding : 1
study : 1
specifying : 1
captured : 1
formalism : 1
invented : 1
alonzo : 1
american : 1
evaluations : 1
arity : 1
cached : 1
constexpr : 1
curried : 1
copiable : 1
printnumber : 1
displaynum : 1
lambdaprint : 1
drag : 1
piped : 1
offered : 1
lisp : 1
irritating : 1
silly : 1
expository : 1
addone : 1
compositional : 1
pipable : 1
paramter : 1
pipableclosure : 1
xs : 1
pipableclosurebinary : 1
fnclosure : 1
decalre : 1
highlight : 1
fold : 1
matching : 1
inferring : 1
geeky : 1
infrastructure : 1
enumerablerange : 1
inner : 1
enumerable : 1
stick : 1
tweak : 1
decoupled : 1
observablerange : 1
uniquely : 1
identifies : 1
pointed : 1
ob : 1
stubbed : 1
affair : 1
firmly : 1
believed : 1
dobbs : 1
advocated : 1
characteristic : 1
eating : 1
popcorn : 1
watch : 1
movie : 1
decades : 1
multitasking : 1
renewed : 1
increasing : 1
cramming : 1
silicon : 1
cram : 1
physical : 1
eras : 1
felt : 1
intel : 1
announced : 1
game : 1
behaving : 1
differently : 1
chip : 1
increase : 1
ghz : 1
warned : 1
empowers : 1
minimizing : 1
overlapping : 1
periods : 1
exploiting : 1
dennis : 1
ritchie : 1
brian : 1
norm : 1
inclusion : 1
multithreading : 1
supporting : 1
terminates : 1
children : 1
initializing : 1
overloaded : 1
interpreted : 1
interpretation : 1
unnecessary : 1
completes : 1
absence : 1
terminated : 1
cleans : 1
asserts : 1
verified : 1
confirm : 1
finishes : 1
detaching : 1
overwritten : 1
addressed : 1
figured : 1
keeping : 1
probable : 1
casting : 1
usefulness : 1
capturing : 1
showcase : 1
losing : 1
spawns : 1
attempts : 1
transferring : 1
transfers : 1
unaffected : 1
moment : 1
corrupting : 1
permanently : 1
assertion : 1
regression : 1
bugs : 1
outcome : 1
relative : 1
bits : 1
deletion : 1
half : 1
complexity : 1
alter : 1
databases : 1
therefore : 1
lockable : 1
thereby : 1
restricting : 1
consist : 1
mark : 1
discussing : 1
observed : 1
cascaded : 1
older : 1
protects : 1
acquires : 1
socket : 1
dynamically : 1
bounded : 1
cycle : 1
arise : 1
music : 1
willing : 1
nice : 1
lets : 1
arguing : 1
argue : 1
serve : 1
advice : 1
intentions : 1
cleaner : 1
attempt : 1
exceptional : 1
hardest : 1
ultimately : 1
remain : 1
slower : 1
regards : 1
optionally : 1
anywhere : 1
prevented : 1
released : 1
periodically : 1
waste : 1
utilized : 1
meets : 1
degrades : 1
expresses : 1
waited : 1
parity : 1
confirmed : 1
appropriately : 1
functionalities : 1
mydata : 1
letting : 1
safeguard : 1
supply : 1
assigns : 1
importance : 1
association : 1
kickstart : 1
prone : 1
faster : 1
strike : 1
balance : 1
exposes : 1
representation : 1
constructing : 1
lower : 1
launching : 1
channel : 1
wants : 1
representing : 1
sorts : 1
pseudo : 1
obtaining : 1
accessed : 1
caught : 1
encapsulates : 1
picks : 1
referring : 1
rewrite : 1
fetching : 1
beautify : 1
overall : 1
appearance : 1
decide : 1
idle : 1
deciding : 1
limitation : 1
employed : 1
needing : 1
threaded : 1
specification : 1
massive : 1
relate : 1
laid : 1
occupies : 1
hangs : 1
chances : 1
enforce : 1
interrupted : 1
serious : 1
against : 1
preclusion : 1
overwrite : 1
agree : 1
morphs : 1
executable : 1
contract : 1
mandating : 1
obey : 1
optimized : 1
tailor : 1
synchronizations : 1
adopted : 1
invariance : 1
allowed : 1
queried : 1
signature : 1
indeed : 1
expand : 1
involving : 1
flg : 1
irrespective : 1
permissible : 1
destroy : 1
ideal : 1
sequenced : 1
reset : 1
achieves : 1
mutual : 1
exclusion : 1
busy : 1
compensate : 1
noted : 1
replaces : 1
restrictive : 1
compares : 1
lacks : 1
switched : 1
halfway : 1
denotes : 1
respect : 1
valid : 1
consequences : 1
mandatory : 1
decrement : 1
atomically : 1
loaded : 1
subtraction : 1
significance : 1
expert : 1
relationships : 1
affect : 1
leslie : 1
lamport : 1
synchronizes : 1
totally : 1
begins : 1
shorten : 1
establishing : 1
acquiring : 1
releasing : 1
unprotected : 1
barrier : 1
reasoning : 1
spin : 1
heavyweight : 1
lightweight : 1
impose : 1
incrementing : 1
counters : 1
decrementing : 1
incremented : 1
compound : 1
ensured : 1
dequeue : 1
skills : 1
mass : 1
publication : 1
category : 1
venerable : 1
navigating : 1
reversing : 1
traits : 1
pertaining : 1
broadcast : 1
mutates : 1
anotherobserver : 1
consumption : 1
modularity : 1
asking : 1
today : 1
judging : 1
publish : 1
canonicalizing : 1
circumvent : 1
limits : 1
diligent : 1
looping : 1
presentations : 1
interaction : 1
jumping : 1
confused : 1
discussions : 1
struggling : 1
complexities : 1
minds : 1
digress : 1
outlook : 1
transition : 1
approached : 1
iteratively : 1
mystical : 1
tradition : 1
originated : 1
western : 1
gloss : 1
guru : 1
philosopher : 1
proponent : 1
vedanta : 1
school : 1
supreme : 1
governs : 1
manifestations : 1
absolute : 1
brahman : 1
affirmation : 1
negation : 1
proof : 1
contradiction : 1
depict : 1
english : 1
titled : 1
unitive : 1
dk : 1
branches : 1
theories : 1
am : 1
dabbled : 1
strategy : 1
bloat : 1
falls : 1
shape : 1
bfs : 1
dfs : 1
sense : 1
grounding : 1
calculator : 1
purposefully : 1
parser : 1
repo : 1
tie : 1
redirect : 1
constant : 1
num : 1
reflects : 1
expresison : 1
binaryexpr : 1
terminal : 1
unaryexpr : 1
plus : 1
minus : 1
walker : 1
treeevaluatorvisitor : 1
polish : 1
reversepolishevaluator : 1
notation : 1
basis : 1
says : 1
presupposes : 1
cognizance : 1
anomaly : 1
guessed : 1
discriminator : 1
exprkind : 1
flattener : 1
subroutine : 1
linearizing : 1
eachn : 1
reducing : 1
cornerstone : 1
forced : 1
advised : 1
cdr : 1
pulls : 1
face : 1
intermediary : 1
readily : 1
hub : 1
unsuscribe : 1
farg : 1
eventsourcevaluesubject : 1
apt : 1
assumptions : 1
owned : 1
resulttr : 1
probability : 1
distributions : 1
inching : 1
digressed : 1
unifies : 1
realizing : 1
thinking : 1
essence : 1
perspective : 1
parallels : 1
bigger : 1
huge : 1
donald : 1
scientist : 1
stanford : 1
university : 1
professor : 1
asked : 1
frequently : 1
sorted : 1
pascal : 1
doug : 1
mcilroy : 1
tr : 1
uniq : 1
sed : 1
bag : 1
comprehend : 1
hundreds : 1
jonah : 1
corner : 1
stone : 1
deferred : 1
warranted : 1
referentially : 1
transparent : 1
computed : 1
emulated : 1
basics : 1
envisaged : 1
arithematic : 1
tantamount : 1
divide : 1
sheds : 1
light : 1
projected : 1
parallelized : 1
irit : 1
inspect : 1
logs : 1
off : 1
orchestrate : 1
serialize : 1
streamify : 1
streamfiy : 1
clarifies : 1
host : 1
functioning : 1
liberally : 1
halfving : 1
neg : 1
doubles : 1
flips : 1
scales : 1
halve : 1
ss : 1
ingest : 1
glued : 1
injected : 1
buffers : 1
almost : 1
analyzing : 1
acyclic : 1
labeled : 1
ranked : 1
magic : 1
proto : 1
turned : 1
erwin : 1
unruh : 1
electronic : 1
touted : 1
quintessential : 1
matrix : 1
designer : 1
mutating : 1
perused : 1
worth : 1
anyone : 1
communications : 1
channels : 1
convenience : 1
relatively : 1
authoring : 1
space : 1
m : 1
raftlib : 1
plenty : 1
ourselves : 1
coverage : 1
prerequisite : 1
toward : 1
systematic : 1
betweene : 1
delegated : 1
backbone : 1
frp : 1
selection : 1
optimization : 1
bottom : 1
dormant : 1
organizes : 1
preservation : 1
avoidance : 1
encoded : 1
identified : 1
provision : 1
tensorflow : 1
structured : 1
everyone : 1
issued : 1
primarily : 1
aim : 1
elucidate : 1
sufficient : 1
minor : 1
besides : 1
varying : 1
helpful : 1
integrating : 1
bases : 1
concatenate : 1
consulted : 1
recieving : 1
visualize : 1
flows : 1
visualization : 1
cues : 1
timelines : 1
timeline : 1
nineteen : 1
samples : 1
manipulating : 1
choosing : 1
std : 1
distinguish : 1
yield : 1
theread : 1
andn : 1
flatmapped : 1
merges : 1
produced : 1
red : 1
ball : 1
green : 1
diamonds : 1
renaming : 1
suits : 1
oncat : 1
concats : 1
concatenation : 1
preserves : 1
lies : 1
tap : 1
somebody : 1
confluence : 1
exploration : 1
finally : 1
scratch : 1
activities : 1
connects : 1
opaque : 1
dom : 1
missed : 1
countless : 1
internet : 1
vanilla : 1
un : 1
nontrivial : 1
simultaneously : 1
sophisticated : 1
caching : 1
buffering : 1
retreive : 1
printf : 1
retained : 1
duration : 1
replaysubject : 1
harnessing : 1
allowing : 1
harnessed : 1
monitoring : 1
latency : 1
streamed : 1
borrows : 1
facts : 1
workers : 1
bearing : 1
manually : 1
emission : 1
late : 1
affects : 1
above : 1
closest : 1
functionfor : 1
fall : 1
categories : 1
repeats : 1
individual : 1
past : 1
accumulator : 1
unusual : 1
span : 1
located : 1
periodic : 1
fewer : 1
goals : 1
outlines : 1
combining : 1
merging : 1
recently : 1
recover : 1
mirrors : 1
toolbox : 1
disposable : 1
lifespan : 1
satisfies : 1
whichever : 1
interleaving : 1
precisely : 1
begun : 1
gained : 1
ecosystem : 1
activex : 1
plausible : 1
tiny : 1
portability : 1
thrive : 1
webkit : 1
media : 1
filesystem : 1
opengl : 1
she : 1
numerous : 1
bindings : 1
gcc : 1
scripting : 1
proprietary : 1
controls : 1
emulating : 1
christened : 1
inflexible : 1
speed : 1
designable : 1
contextual : 1
inheritance : 1
removes : 1
identifiable : 1
senders : 1
identities : 1
identity : 1
central : 1
loosely : 1
completely : 1
signatures : 1
flexible : 1
pluggable : 1
happened : 1
discover : 1
convenient : 1
rendered : 1
buttons : 1
extend : 1
tells : 1
rejected : 1
posts : 1
posted : 1
compressed : 1
flickering : 1
supplies : 1
finds : 1
codes : 1
entirely : 1
lgpl : 1
pleasant : 1
debugger : 1
mingw : 1
clang : 1
permits : 1
passive : 1
terminating : 1
save : 1
residing : 1
verify : 1
installed : 1
installation : 1
builds : 1
steps : 1
rebuild : 1
customize : 1
propertied : 1
signaling : 1
lay : 1
belongs : 1
tracking : 1
center : 1
thick : 1
qgroupbox : 1
qvboxlayout : 1
sizes : 1
exactly : 1
resizing : 1
hover : 1
pressing : 1
customizing : 1
eye : 1
bridge : 1
qobject : 1
definitions : 1
implanted : 1
sees : 1
tracing : 1
adjusting : 1
larger : 1
stretch : 1
factor : 1
signle : 1
config : 1
xdock : 1
ydock : 1
border : 1
dockable : 1
fun : 1
gravitydock : 1
indicator : 1
integrates : 1
proceeding : 1
proliferation : 1
struggled : 1
viral : 1
medium : 1
adopters : 1
conducted : 1
seminars : 1
popularize : 1
magazines : 1
carry : 1
columns : 1
featuring : 1
wisdom : 1
experts : 1
german : 1
mathematician : 1
friedrich : 1
gauss : 1
masters : 1
apprenticeship : 1
styles : 1
cataloging : 1
practices : 1
architect : 1
towns : 1
namely : 1
ralph : 1
richard : 1
affectionately : 1
addison : 1
wesley : 1
fueled : 1
engineers : 1
siemens : 1
mainly : 1
documented : 1
wiley : 1
douglas : 1
tao : 1
ace : 1
chair : 1
maintains : 1
flood : 1
integration : 1
gregor : 1
hope : 1
boby : 1
deepak : 1
eric : 1
jim : 1
arlow : 1
illa : 1
skewed : 1
occurring : 1
architecting : 1
alexander : 1
engineering : 1
smalltalk : 1
agnostic : 1
middleware : 1
pipes : 1
configuration : 1
strategized : 1
eager : 1
lifecycle : 1
distributive : 1
volume : 1
underpinnings : 1
deficiencies : 1
duo : 1
possess : 1
complicates : 1
suffers : 1
pulled : 1
absolutely : 1
maintainable : 1
improved : 1
slight : 1
nudge : 1
similarities : 1
illustrate : 1
filenames : 1
undertaken : 1
silence : 1
issuing : 1
warnings : 1
compiling : 1
psize : 1
presence : 1
destructors : 1
therapy : 1
redirects : 1
traversing : 1
dirhelper : 1
root : 1
ifilefoldervisitor : 1
spits : 1
ad : 1
scores : 1
flattening : 1
said : 1
dirname : 1
expanded : 1
pathname : 1
eventually : 1
ahead : 1
arrives : 1
timeout : 1
strategies : 1
rootdir : 1
vary : 1
regularly : 1
tidying : 1
dependencies : 1
viable : 1
behsubject : 1
parents : 1
bs : 1
recomputation : 1
decouples : 1
publicly : 1
accessible : 1
pending : 1
attempting : 1
quality : 1
considerably : 1
dispatcher : 1
declares : 1
leakage : 1
opens : 1
upto : 1
fread : 1
nread : 1
conents : 1
rlambda : 1
holder : 1
pdescription : 1
ev : 1
skeleton : 1
bells : 1
dosomethingwithevent : 1
fireevent : 1
conduit : 1
enhancement : 1
largely : 1
delved : 1
broader : 1
cognitive : 1
rxjava : 1
akka : 1
rxjs : 1
browser : 1
consoler : 1
delivering : 1
pages : 1
planning : 1
apache : 1
iis : 1
traffic : 1
apps : 1
proxies : 1
browsers : 1
reflective : 1
duck : 1
typing : 1
servers : 1
keywords : 1
representational : 1
spearheaded : 1
roy : 1
fielding : 1
crud : 1
versed : 1
vogue : 1
soap : 1
interact : 1
ppl : 1
protocol : 1
utilities : 1
filestream : 1
requesttask : 1
composed : 1
outstanding : 1
taskss : 1
pause : 1
persist : 1
concentrating : 1
listens : 1
naming : 1
ok : 1
deciphered : 1
closes : 1
untill : 1
shut : 1
protocols : 1
requisite : 1
succeeded : 1
abhinav : 1
chrome : 1
plugin : 1
went : 1
company : 1
formed : 1
asthana : 1
curlcode : 1
lib : 1
setup : 1
pings : 1
facets : 1
initiative : 1
bundled : 1
conent : 1
stake : 1
monopolized : 1
embed : 1
devekioers : 1
obj : 1
marius : 1
thankful : 1
him : 1
shoop : 1
dumps : 1
workhorse : 1
jvalue : 1
processsing : 1
extracted : 1
generating : 1
mock : 1
deleting : 1
verb : 1
diagnostics : 1
lookup : 1
del : 1
records : 1
populated : 1
bodies : 1
delegating : 1
breaking : 1
art : 1
originally : 1
chunks : 1
concatenates : 1
say : 1
cater : 1
sprung : 1
years : 1
suites : 1
deployable : 1
organization : 1
intelligence : 1
decentralized : 1
presenting : 1
uniformly : 1
ought : 1
researched : 1
roundtrip : 1
principle : 1
denote : 1
persisting : 1
columnar : 1
portal : 1
shopping : 1
rdbms : 1
dbs : 1
motto : 1
soa : 1
evolution : 1
popularizing : 1
automate : 1
provisioning : 1
vm : 1
cloud : 1
aws : 1
google : 1
technology : 1
brought : 1
realm : 1
containerization : 1
cluster : 1
described : 1
decision : 1
responsive : 1
responses : 1
undertaking : 1
acclimatized : 1
embodied : 1
purists : 1
family : 1
manipulate : 1
asynchrony : 1
complicated : 1
scalability : 1
arisen : 1
manifesto : 1
responsiveness : 1
detected : 1
confidence : 1
defend : 1
correlated : 1
containment : 1
workload : 1
reallocating : 1
providing : 1
interdependent : 1
modules : 1
recipients : 1
composable : 1
resilient : 1
qualities : 1
detection : 1
imperative : 1
detects : 1
throws : 1
variety : 1
backup : 1
graceful : 1
needed : 1
abd : 1
occurrence : 1
continuing : 1
meaningful : 1
resumed : 1
replacing : 1
resumes : 1
till : 1
translating : 1
fragment : 1
worthwhile : 1
anomalies : 1
encounter : 1
predictable : 1
opportunity : 1
omit : 1
retries : 1
gracefully : 1
throwing : 1
parts : 1
millions : 1
likely : 1
legacy : 1
remove : 1
too : 1
eptr : 1
conclude : 1
effective : 1
meeting : 1
roles : 1
employee : 1
reduced : 1
lost : 1
avg : 1
supplying : 1
keyboard : 1
entries : 1
connections : 1
appactive : 1
appinactive : 1
appdata : 1
appclose : 1
datafromapp : 1
recieved : 1
visited : 1
emphasis : 1
pillars : 1
enjoyed : 1
wisnu : 1
exponential : 1
impact : 1
heap : 1
radix : 1
viktor : 1
metaprogramming : 1
runtime : 1
boilerplate : 1
reflection : 1
benefits : 1
preserved : 1
proxy : 1
compromising : 1
thoughts : 1
bought : 1
honest : 1
amazon : 1
vital : 1
purchasing : 1
customers : 1
minutes : 1
valuable : 1
transmitted : 2
articles : 2
effort : 2
express : 2
companies : 2
livery : 2
online : 2
tools : 2
videos : 2
pdf : 2
sign : 2
actively : 2
involved : 2
macos : 2
linux : 2
fox : 2
experienced : 2
distribution : 2
solve : 2
big : 2
blog : 2
phd : 2
becoming : 2
thousands : 2
tech : 2
classical : 2
deduction : 2
iterative : 2
diagrams : 2
scan : 2
tale : 2
runloop : 2
extremely : 2
elementary : 2
lays : 2
explains : 2
dsel : 2
manipulation : 2
suffice : 2
account : 2
extract : 2
rich : 2
check : 2
conventions : 2
throughout : 2
cd : 2
indicates : 2
boxes : 2
tricks : 2
email : 2
aspect : 2
although : 2
grateful : 2
link : 2
unbiased : 2
feedback : 2
thank : 2
mode : 2
batch : 2
concern : 2
resorted : 2
relied : 2
callbacks : 2
began : 2
prominent : 2
tried : 2
extensions : 2
outline : 2
respond : 2
bulk : 2
matters : 2
appreciate : 2
issues : 2
treats : 2
elucidation : 2
desktop : 2
gist : 2
interest : 2
press : 2
polling : 2
corporation : 2
uint : 2
wparam : 2
lparam : 2
field : 2
responds : 2
translated : 2
toolkit : 2
mobile : 2
macros : 2
removing : 2
myapp : 2
qdialog : 2
job : 2
binding : 2
python : 2
mix : 2
maps : 2
arrays : 2
restrictions : 2
graphical : 2
pretty : 2
converted : 2
datatypes : 2
themselves : 2
haskell : 2
mixing : 2
mental : 2
aside : 2
conform : 2
reactivex : 2
customexception : 2
demand : 2
specifically : 2
aggregates : 2
corresponds : 2
duality : 2
illustrated : 2
looking : 2
concreteenumberable : 2
enumerator : 2
integers : 2
generator : 2
converting : 2
low : 2
evennumberobservable : 2
moving : 2
rectangle : 2
onto : 2
stipulated : 2
crect : 2
height : 2
checks : 2
windowhandler : 2
canned : 2
feet : 2
firm : 2
exposed : 2
familiarize : 2
introducing : 2
whirlwind : 2
minimum : 2
objective : 2
penalty : 2
microprocessor : 2
raise : 2
raising : 2
minimize : 2
overhead : 2
pay : 2
despite : 2
maintained : 2
implied : 2
increment : 2
prefix : 2
purposes : 2
overflow : 2
underflow : 2
goal : 2
paradigms : 2
life : 2
turing : 2
changed : 2
decade : 2
maximum : 2
statements : 2
scala : 2
listings : 2
simplify : 2
vtdbl : 2
instantiation : 2
recursion : 2
hint : 2
printing : 2
universal : 2
kinds : 2
ri : 2
visible : 2
expensive : 2
implicitly : 2
cloning : 2
assigning : 2
facility : 2
optimize : 2
lifetimes : 2
dqiter : 2
dtor : 2
track : 2
destroyed : 2
remaining : 2
existence : 2
effect : 2
become : 2
nullptr : 2
readability : 2
cnt : 2
accum : 2
reduction : 2
init : 2
adjacent : 2
cmp : 2
swaplambda : 2
mathematical : 2
calculus : 2
currying : 2
breaks : 2
recursive : 2
bind : 2
func : 2
wrap : 2
prototype : 2
fooclass : 2
coming : 2
someone : 2
sumfunction : 2
invocations : 2
highlighting : 2
generation : 2
intent : 2
folds : 2
w : 2
optional : 2
retval : 2
requirements : 2
obs : 2
talked : 2
ever : 2
sutter : 2
journal : 2
lunch : 2
aims : 2
correlate : 2
sudden : 2
manufacturers : 2
cpus : 2
human : 2
year : 2
challenge : 2
switches : 2
ignored : 2
writes : 2
construction : 2
alternatives : 2
leaving : 2
child : 2
probably : 2
myfact : 2
resolved : 2
accepting : 2
launches : 2
doubly : 2
partially : 2
assertions : 2
violated : 2
great : 2
leads : 2
duplicate : 2
avoiding : 2
referred : 2
protecting : 2
skip : 2
scrambled : 2
rewritten : 2
practice : 2
acquisition : 2
allocated : 2
imagine : 2
siblings : 2
proceed : 2
scenario : 2
straightforward : 2
adopt : 2
deadlocks : 2
demands : 2
discipline : 2
unlocked : 2
recommended : 2
unnecessarily : 2
drop : 2
retrieving : 2
marking : 2
little : 2
tailored : 2
flags : 2
iterates : 2
adapt : 2
mutable : 2
topmost : 2
holds : 2
empty : 2
unhandled : 2
looked : 2
awareness : 2
simulated : 2
potentially : 2
operate : 2
sends : 2
puts : 2
refers : 2
internally : 2
similarly : 2
match : 2
consumed : 2
obtained : 2
responsible : 2
whatever : 2
taking : 2
async : 2
essentially : 2
precise : 2
achieving : 2
modify : 2
enforced : 2
accesses : 2
states : 2
identify : 2
apart : 2
conversions : 2
correspond : 2
simulates : 2
guarded : 2
testing : 2
initially : 2
equal : 2
spurious : 2
differ : 2
assumed : 2
listed : 2
forms : 2
equality : 2
intuition : 2
strings : 2
statement : 2
dive : 2
establishes : 2
revisit : 2
performant : 2
tag : 2
contrast : 2
places : 2
levels : 2
roll : 2
members : 2
tail : 2
deleted : 2
enqueue : 2
reusable : 2
oriented : 2
cataloged : 2
grouped : 2
deliver : 2
walk : 2
ux : 2
relay : 2
eventsource : 2
separation : 2
controlled : 2
environment : 2
indirection : 2
facilitate : 2
blocks : 2
abstract : 2
reaches : 2
seems : 2
according : 2
bliss : 2
axiology : 2
mappings : 2
viewed : 2
modelling : 2
categorized : 2
modeled : 2
linearized : 2
amenable : 2
linearize : 2
trees : 2
normally : 2
concrete : 2
operands : 2
turn : 2
lval : 2
rval : 2
iexprvisitor : 2
describe : 2
brevity : 2
ret : 2
doublestack : 2
traverse : 2
evaluating : 2
dresult : 2
ondata : 2
evaluated : 2
demonstrated : 2
amount : 2
realized : 2
legendary : 2
sor : 2
total : 2
assembled : 2
pn : 2
iterated : 2
elaborate : 2
bothering : 2
accumulates : 2
accumulated : 2
strop : 2
directed : 2
dag : 2
sorting : 2
processes : 2
propagating : 2
cells : 2
mutate : 2
triggered : 2
kernels : 2
connecting : 2
hi : 2
statistical : 2
studied : 2
meat : 2
typically : 2
mutated : 2
parse : 2
opportunities : 2
downloaded : 2
incorporate : 2
passes : 2
append : 2
preserving : 2
depicts : 2
combined : 2
reductions : 2
schema : 2
seed : 2
consequence : 2
delegate : 2
configure : 2
differences : 2
explore : 2
confusion : 2
names : 2
lamda : 2
post : 2
balls : 2
maybe : 2
appends : 2
interval : 2
components : 2
dissect : 2
loss : 2
cache : 2
deeper : 2
consulting : 2
behaves : 2
owns : 2
schedulable : 2
judicious : 2
pure : 2
termination : 2
resubscribing : 2
sent : 2
multiplatform : 2
capabilities : 2
qml : 2
target : 2
emulation : 2
efficiency : 2
seamless : 2
driven : 2
union : 2
official : 2
component : 2
accepted : 2
meet : 2
extended : 2
resize : 2
cpp : 2
includepath : 2
override : 2
leaves : 2
alignment : 2
settings : 2
rxevt : 2
monitor : 2
wide : 2
stretching : 2
directories : 2
completed : 2
scaling : 2
gamma : 2
inspiration : 2
erich : 2
john : 2
known : 2
catalogs : 2
martin : 2
et : 2
gang : 2
creators : 2
mission : 2
spans : 2
insights : 2
concerned : 2
navigation : 2
aligned : 2
filename : 2
folders : 2
fileinformation : 2
filenode : 2
entrynode : 2
ivis : 2
pname : 2
itr : 2
subdirectories : 2
dirs : 2
firenforget : 2
directoryemitter : 2
uncomment : 2
decides : 2
concreteobject : 2
loans : 2
bytes : 2
closed : 2
mediator : 2
fairly : 2
bridging : 2
exposing : 2
business : 2
disk : 2
listener : 2
simpleserver : 2
incoming : 2
binds : 2
spit : 2
pressed : 2
textual : 2
nominmax : 2
httpkeyvaluedbengine : 2
encounters : 2
resulting : 2
pos : 2
expose : 2
automated : 2
mindset : 2
formats : 2
devops : 2
policies : 2
aggregator : 2
downstream : 2
centralized : 2
choreography : 2
loose : 2
undergo : 2
live : 2
resilience : 2
elasticity : 2
restart : 2
failed : 2
translate : 2
queued : 2
onerror : 2
invalid : 2
salaries : 2
namespaces : 2
role : 2
min : 2
appevent : 2
algorithm : 2
optimizations : 2
retrieval : 3
accuracy : 3
nor : 3
caused : 3
built : 3
offers : 3
technical : 3
experience : 3
compilation : 3
ported : 3
toolkits : 3
technologies : 3
author : 3
insight : 3
color : 3
holistic : 3
recap : 3
efficient : 3
assume : 3
introduces : 3
couple : 3
moves : 3
pieces : 3
fit : 3
purchased : 3
register : 3
latest : 3
hosted : 3
words : 3
attention : 3
lines : 3
title : 3
location : 3
website : 3
leave : 3
opinion : 3
manager : 3
shift : 3
responding : 3
apis : 3
multithreaded : 3
treating : 3
determined : 3
rapid : 3
screen : 3
prototypes : 3
aware : 3
goes : 3
detailed : 3
idiomatic : 3
extra : 3
linguistic : 3
extension : 3
compatible : 3
dispatching : 3
closer : 3
globally : 3
beyond : 3
coupled : 3
resort : 3
regarding : 3
regardless : 3
sets : 3
notifying : 3
involve : 3
enumerate : 3
closely : 3
classified : 3
ui : 3
exchange : 3
pushing : 3
bound : 3
nested : 3
walks : 3
robustness : 3
automatically : 3
cmouseframe : 3
clock : 3
dispatched : 3
subsystem : 3
computes : 3
coordinate : 3
centered : 3
notifies : 3
ideas : 3
stage : 3
nuances : 3
touched : 3
abstractions : 3
additions : 3
strength : 3
easier : 3
automatic : 3
wrappers : 3
mind : 3
higher : 3
wherever : 3
underlying : 3
constructors : 3
initialize : 3
postfix : 3
demonstration : 3
placement : 3
gave : 3
fast : 3
favorite : 3
garbage : 3
implicit : 3
inference : 3
borrowed : 3
infer : 3
keyword : 3
forwarding : 3
times : 3
large : 3
temporary : 3
length : 3
compilers : 3
argc : 3
removed : 3
increases : 3
multiply : 3
comparison : 3
compare : 3
mathematics : 3
typename : 3
referenced : 3
closure : 3
simulate : 3
treat : 3
ordinary : 3
chaining : 3
several : 3
commands : 3
semantic : 3
safe : 3
thrown : 3
portable : 3
herb : 3
influential : 3
article : 3
cores : 3
reached : 3
fundamental : 3
instruction : 3
happen : 3
hardware : 3
actually : 3
illusion : 3
expecting : 3
increased : 3
managing : 3
discussion : 3
exiting : 3
chance : 3
ends : 3
join : 3
finished : 3
direct : 3
false : 3
sharing : 3
factorial : 3
clear : 3
currently : 3
modifying : 3
begin : 3
invariants : 3
broken : 3
linked : 3
invariant : 3
placing : 3
wikipedia : 3
modifications : 3
simplest : 3
protection : 3
commonly : 3
enter : 3
enters : 3
avoids : 3
unlocks : 3
biggest : 3
person : 3
spawn : 3
acquired : 3
storing : 3
availability : 3
meaning : 3
prepared : 3
criteria : 3
requirement : 3
boddready : 3
fill : 3
journey : 3
remains : 3
preferred : 3
sending : 3
ready : 3
unique : 3
synchronized : 3
propagate : 3
packaged : 3
calculate : 3
choose : 3
improve : 3
multithread : 3
enforcing : 3
constraints : 3
minimal : 3
highly : 3
guaranteed : 3
divided : 3
conventional : 3
distinct : 3
whereas : 3
cleared : 3
primitive : 3
talk : 3
varies : 3
edge : 3
relationship : 3
bother : 3
head : 3
crux : 3
jump : 3
composites : 3
oldstate : 3
adds : 3
decouple : 3
designing : 3
step : 3
nicely : 3
advaita : 3
indian : 3
structural : 3
subset : 3
rpn : 3
machine : 3
depending : 3
flattenvisitor : 3
pushed : 3
inserted : 3
manipulates : 3
scalar : 3
instantiating : 3
determines : 3
outputs : 3
whose : 3
verbose : 3
edges : 3
organized : 3
developed : 3
repository : 3
enabling : 3
kernel : 3
immutability : 3
onnext : 3
appending : 3
flatmap : 3
merged : 3
colored : 3
blue : 3
comprehensive : 3
view : 3
eventloop : 3
delay : 3
refer : 3
hints : 3
collects : 3
recent : 3
emissions : 3
connectable : 3
paint : 3
subclasses : 3
communicate : 3
dispatches : 3
handcode : 3
integrated : 3
frame : 3
updating : 3
headers : 3
cursor : 3
christopher : 3
posa : 3
believe : 3
dn : 3
os : 3
traverses : 3
printfoldervisitor : 3
currdir : 3
activeobject : 3
immediately : 3
resourceloan : 3
inserts : 3
functionality : 3
deletes : 3
continuation : 3
exists : 3
persistence : 3
polyglot : 3
deploy : 3
deployment : 3
inactive : 3
neither : 4
publishing : 4
full : 4
industry : 4
practical : 4
ebook : 4
ansi : 4
developing : 4
implementer : 4
computer : 4
industrial : 4
concerns : 4
loops : 4
limitations : 4
word : 4
libcurl : 4
orchestration : 4
pipeable : 4
foundation : 4
facilities : 4
applicable : 4
initializes : 4
draw : 4
major : 4
advent : 4
complex : 4
fresh : 4
earlier : 4
proper : 4
exit : 4
third : 4
compiled : 4
macro : 4
away : 4
respective : 4
making : 4
nothing : 4
natural : 4
behind : 4
computations : 4
changing : 4
generally : 4
introduce : 4
appears : 4
yet : 4
defining : 4
insert : 4
unlike : 4
equivalent : 4
force : 4
rules : 4
comfortable : 4
dealt : 4
thanks : 4
widely : 4
enhanced : 4
designers : 4
expressive : 4
notable : 4
arithmetic : 4
precision : 4
identical : 4
power : 4
evaluates : 4
query : 4
hard : 4
helper : 4
extensively : 4
j : 4
bfr : 4
candidate : 4
limited : 4
populate : 4
leverages : 4
simplifies : 4
assumption : 4
swap : 4
cycles : 4
performs : 4
capture : 4
involves : 4
depends : 4
unix : 4
operating : 4
combine : 4
overload : 4
via : 4
clients : 4
matter : 4
processors : 4
activity : 4
hands : 4
enabled : 4
users : 4
multicore : 4
processor : 4
finish : 4
mean : 4
noticed : 4
launched : 4
storage : 4
lead : 4
undefined : 4
typical : 4
five : 4
joined : 4
terminate : 4
completion : 4
accessing : 4
immutable : 4
reading : 4
usually : 4
special : 4
document : 4
trying : 4
occurs : 4
ways : 4
unlock : 4
protect : 4
holding : 4
raii : 4
dealing : 4
ipod : 4
listen : 4
unless : 4
intended : 4
locked : 4
avoided : 4
checking : 4
status : 4
conditional : 4
consuming : 4
bevenready : 4
raised : 4
pop : 4
marked : 4
latter : 4
concurrently : 4
behave : 4
promises : 4
able : 4
policy : 4
consists : 4
others : 4
switch : 4
isolation : 4
observe : 4
determine : 4
replace : 4
six : 4
high : 4
explained : 4
significant : 4
secondary : 4
inherit : 4
specialized : 4
coupling : 4
subjects : 4
explaining : 4
canonical : 4
hierarchical : 4
ast : 4
pipeline : 4
receives : 4
fn : 4
mapped : 4
focused : 4
focusing : 4
reduce : 4
intuitive : 4
propagated : 4
basically : 4
schedulers : 4
concatenated : 4
merge : 4
containing : 4
combines : 4
subclass : 4
positions : 4
overridden : 4
vertical : 4
click : 4
gravity : 4
early : 4
enterprise : 4
distributed : 4
deployed : 4
isdir : 4
rs : 4
buffer : 4
eventbus : 4
entrypoint : 4
endpoints : 4
postman : 4
addr : 4
app : 4
wcout : 4
db : 4
record : 4
endpoint : 4
independently : 4
appended : 4
resume : 4
visit : 5
fully : 5
exclusive : 5
open : 5
gaze : 5
visual : 5
concat : 5
characteristics : 5
review : 5
paradigm : 5
developer : 5
covers : 5
discusses : 5
composing : 5
correct : 5
sure : 5
windowing : 5
think : 5
platforms : 5
traditional : 5
adding : 5
messages : 5
react : 5
actions : 5
posix : 5
runs : 5
xlib : 5
entry : 5
qapplication : 5
deep : 5
gain : 5
difficult : 5
external : 5
aggregating : 5
easy : 5
represented : 5
fp : 5
iteration : 5
nature : 5
entity : 5
ideally : 5
boost : 5
instantiates : 5
integer : 5
chosen : 5
defines : 5
fires : 5
again : 5
sake : 5
philosophical : 5
essential : 5
domain : 5
stands : 5
feel : 5
helped : 5
enables : 5
wraps : 5
ieee : 5
exceptions : 5
powerful : 5
meta : 5
reflect : 5
sections : 5
lists : 5
recursively : 5
z : 5
copying : 5
intermediate : 5
warrants : 5
movement : 5
containers : 5
few : 5
anonymous : 5
definition : 5
pack : 5
lots : 5
beginning : 5
hold : 5
committee : 5
switching : 5
path : 5
instructions : 5
solution : 5
reach : 5
initial : 5
having : 5
newly : 5
executing : 5
interesting : 5
longer : 5
old : 5
situation : 5
copied : 5
otherwise : 5
transferred : 5
cause : 5
occur : 5
random : 5
independent : 5
max : 5
obvious : 5
effectively : 5
replaced : 5
covering : 5
ground : 5
returning : 5
receiving : 5
specifications : 5
catch : 5
executes : 5
load : 5
usual : 5
trivial : 5
spawned : 5
ten : 5
prerequisites : 5
inherited : 5
whenever : 5
visitors : 5
reverse : 5
entire : 5
four : 5
op : 5
xml : 5
ls : 5
algorithms : 5
twice : 5
workings : 5
producers : 5
subscribes : 5
attach : 5
ints : 5
combination : 5
period : 5
attached : 5
coordinator : 5
port : 5
clicks : 5
creator : 5
qlabel : 5
architectural : 5
directorynode : 5
uri : 5
test : 5
tool : 5
resuming : 5
retry : 5
except : 6
embedded : 6
ensure : 6
directly : 6
especially : 6
corba : 6
searching : 6
general : 6
philosophy : 6
peek : 6
versus : 6
utility : 6
layouts : 6
navigate : 6
loan : 6
bus : 6
short : 6
includes : 6
knowledge : 6
quickly : 6
present : 6
download : 6
success : 6
relevant : 6
appear : 6
taken : 6
care : 6
found : 6
detect : 6
did : 6
uniform : 6
handles : 6
managed : 6
manages : 6
callback : 6
retrieved : 6
sometimes : 6
leveraged : 6
generated : 6
mapping : 6
down : 6
outside : 6
aggregated : 6
applying : 6
computational : 6
encode : 6
anything : 6
choice : 6
asynchronously : 6
stuff : 6
happening : 6
java : 6
waits : 6
scenarios : 6
synchronous : 6
thus : 6
subtle : 6
simply : 6
dispatch : 6
oncompleted : 6
further : 6
trigger : 6
towards : 6
came : 6
production : 6
lifetime : 6
far : 6
zero : 6
floating : 6
wrapping : 6
saw : 6
principles : 6
outlined : 6
previously : 6
search : 6
idiom : 6
explicitly : 6
d : 6
syntax : 6
fixed : 6
deal : 6
generates : 6
perfect : 6
suited : 6
assign : 6
positive : 6
functors : 6
page : 6
routine : 6
accepts : 6
p : 6
represents : 6
ease : 6
variant : 6
leveraging : 6
private : 6
original : 6
exploit : 6
paths : 6
issue : 6
pairs : 6
concept : 6
hence : 6
situations : 6
moved : 6
term : 6
conditions : 6
locking : 6
addition : 6
relies : 6
itself : 6
fetch : 6
terms : 6
sub : 6
building : 6
scheme : 6
failure : 6
easily : 6
contain : 6
sequentially : 6
send : 6
compute : 6
forget : 6
flattened : 6
evaluator : 6
enum : 6
nodes : 6
temp : 6
advantages : 6
functor : 6
peter : 6
sanjay : 6
raju : 6
subscribing : 6
property : 6
predefined : 6
dynamic : 6
microservice : 6
format : 6
verbs : 6
ucout : 6
books : 7
learning : 7
versions : 7
receive : 7
starting : 7
gnu : 7
partial : 7
manage : 7
modeling : 7
conceptual : 7
concepts : 7
box : 7
github : 7
site : 7
became : 7
excellent : 7
performing : 7
network : 7
reader : 7
supposed : 7
invokes : 7
moc : 7
still : 7
scope : 7
sequences : 7
among : 7
raw : 7
designed : 7
entities : 7
understood : 7
notify : 7
praseed : 7
converts : 7
meant : 7
conversion : 7
res : 7
declarations : 7
construct : 7
templates : 7
below : 7
declare : 7
stop : 7
arbitrary : 7
giving : 7
overloads : 7
allow : 7
chain : 7
l : 7
derived : 7
unsubscribe : 7
cpu : 7
detail : 7
ensures : 7
accept : 7
declaration : 7
modified : 7
consider : 7
thing : 7
internal : 7
explain : 7
quite : 7
option : 7
primitives : 7
including : 7
tries : 7
handy : 7
communication : 7
retrieves : 7
relaxed : 7
named : 7
acquire : 7
performed : 7
behavioral : 7
forward : 7
pair : 7
static : 7
square : 7
aggregation : 7
engine : 7
acts : 7
emitting : 7
slot : 7
me : 7
controller : 7
kirk : 7
keys : 7
mentioned : 8
less : 8
native : 8
share : 8
spreadsheet : 8
boolean : 8
rxcurl : 8
rvalue : 8
references : 8
continue : 8
database : 8
twitter : 8
copies : 8
address : 8
potential : 8
creation : 8
require : 8
treated : 8
transformation : 8
pull : 8
infinite : 8
mfc : 8
index : 8
dependent : 8
destructor : 8
coordinates : 8
errors : 8
abstraction : 8
due : 8
f : 8
problematic : 8
piece : 8
command : 8
consume : 8
best : 8
continues : 8
initialized : 8
properties : 8
instantiated : 8
transfer : 8
never : 8
soon : 8
deadlock : 8
protected : 8
constructed : 8
applies : 8
synchronize : 8
received : 8
atomicity : 8
options : 8
propagation : 8
suitable : 8
content : 8
linear : 8
transform : 8
printed : 8
resultant : 8
e : 8
description : 8
produces : 8
monsieur : 8
sri : 8
factory : 8
final : 8
packt : 9
collection : 9
worked : 9
replay : 9
quick : 9
setting : 9
idioms : 9
readers : 9
find : 9
structures : 9
followed : 9
computing : 9
advanced : 9
update : 9
block : 9
close : 9
why : 9
management : 9
processed : 9
sources : 9
chapters : 9
something : 9
additional : 9
doing : 9
points : 9
whole : 9
omitted : 9
odd : 9
follows : 9
show : 9
upon : 9
snippets : 9
smartfloat : 9
compile : 9
familiar : 9
assigned : 9
usage : 9
lambdas : 9
advantage : 9
composition : 9
flexibility : 9
least : 9
evaluate : 9
shell : 9
try : 9
transformed : 9
consumers : 9
getting : 9
mechanisms : 9
invocation : 9
parent : 9
true : 9
normal : 9
predicate : 9
promise : 9
lazy : 9
requests : 9
analysis : 9
seconds : 9
connected : 9
layout : 9
payload : 9
performance : 10
problems : 10
local : 10
interested : 10
overview : 10
integral : 10
variants : 10
iterators : 10
existing : 10
necessary : 10
connection : 10
handled : 10
people : 10
consult : 10
button : 10
sample : 10
idea : 10
represent : 10
notifications : 10
core : 10
fact : 10
push : 10
updates : 10
small : 10
within : 10
robust : 10
manner : 10
smart : 10
expects : 10
iterate : 10
clearly : 10
around : 10
container : 10
technique : 10
requires : 10
feature : 10
useful : 10
instantiate : 10
published : 10
reason : 10
per : 10
prevent : 10
back : 10
cases : 10
guarantees : 10
ability : 10
locks : 10
flag : 10
futures : 10
consistent : 10
hierarchies : 10
architecture : 10
fire : 10
included : 10
evaluation : 10
directory : 10
subscribed : 10
schedule : 10
url : 10
salary : 10
stored : 11
made : 11
either : 11
appropriate : 11
please : 11
free : 11
his : 11
authors : 11
tour : 11
starts : 11
understanding : 11
wonderful : 11
platform : 11
programmers : 11
invoking : 11
details : 11
give : 11
background : 11
handler : 11
declarative : 11
notified : 11
becomes : 11
difference : 11
implementing : 11
real : 11
area : 11
position : 11
everything : 11
generic : 11
compared : 11
expressions : 11
size : 11
y : 11
side : 11
else : 11
sort : 11
compose : 11
line : 11
iterable : 11
consumer : 11
separate : 11
could : 11
actual : 11
interleaved : 11
consistency : 11
diagram : 11
scheduled : 11
filtered : 11
expr : 11
subs : 11
shown : 11
handlers : 11
gives : 12
working : 12
modification : 12
introduction : 12
transformations : 12
aggregate : 12
active : 12
folder : 12
table : 12
works : 12
style : 12
pointers : 12
later : 12
required : 12
queue : 12
connect : 12
go : 12
notion : 12
languages : 12
toy : 12
related : 12
blocking : 12
filters : 12
prints : 12
act : 12
body : 12
unary : 12
allows : 12
binary : 12
callable : 12
parallel : 12
r : 12
leverage : 12
going : 12
behavior : 12
mutexes : 12
applied : 12
flatten : 12
topological : 12
coordination : 12
group : 12
project : 12
applications : 13
information : 13
cannot : 13
guarantee : 13
development : 13
cost : 13
marble : 13
average : 13
pipe : 13
curl : 13
build : 13
top : 13
launch : 13
approach : 13
popular : 13
achieved : 13
filtering : 13
implementations : 13
considered : 13
got : 13
much : 13
purpose : 13
response : 13
really : 13
keep : 13
want : 13
vector : 13
stores : 13
invoked : 13
had : 13
lot : 13
specify : 13
during : 13
left : 13
indicate : 13
val : 13
creating : 13
running : 13
declared : 13
shared : 13
results : 13
supplied : 13
problem : 13
wrote : 13
critical : 14
interfaces : 14
context : 14
updated : 14
dialog : 14
control : 14
c : 14
certain : 14
expected : 14
convert : 14
rather : 14
focus : 14
sinks : 14
comes : 14
parameters : 14
resources : 14
instead : 14
complete : 14
worker : 14
tree : 14
sequential : 14
release : 14
well : 15
know : 15
files : 15
specific : 15
hot : 15
initialization : 15
together : 15
enable : 15
threading : 15
topics : 15
would : 15
across : 15
then : 15
though : 15
message : 15
header : 15
include : 15
added : 15
observers : 15
supports : 15
seen : 15
passing : 15
hello : 15
means : 15
execute : 15
graph : 15
last : 16
right : 16
developers : 16
global : 16
oop : 16
wrapper : 16
follow : 16
come : 16
models : 16
kind : 16
documentation : 16
being : 16
level : 16
array : 16
explicit : 16
possible : 16
who : 16
instances : 16
n : 16
avoid : 16
section : 16
b : 16
often : 16
race : 16
place : 16
version : 17
he : 17
apply : 17
hierarchy : 17
let : 17
way : 17
variadic : 17
aspects : 17
examples : 17
until : 17
calling : 17
produce : 17
logic : 17
executed : 17
signal : 17
notification : 17
makes : 17
element : 17
needs : 17
bit : 17
retrieve : 17
widget : 17
primary : 18
microsoft : 18
libraries : 18
important : 18
computation : 18
cold : 18
introduced : 18
provided : 18
text : 18
techniques : 18
scheduling : 18
display : 18
creates : 18
point : 18
framework : 18
generate : 18
pass : 18
listing : 18
achieve : 18
change : 18
sink : 18
current : 18
ownership : 18
tasks : 18
future : 18
widgets : 18
may : 19
form : 19
provide : 19
range : 19
better : 19
cell : 19
service : 19
action : 19
scheduler : 19
sdk : 19
producer : 19
input : 19
always : 19
subscribers : 19
classic : 19
item : 19
waiting : 19
second : 19
count : 19
changes : 19
long : 19
v : 19
html : 19
read : 20
stack : 20
discuss : 20
cover : 20
along : 20
perform : 20
loop : 20
gets : 20
implements : 20
whether : 20
console : 20
might : 20
copy : 20
constructor : 20
default : 20
condition : 20
slots : 20
request : 20
streamulus : 21
catalog : 21
snippet : 21
api : 21
define : 21
iterator : 21
calls : 21
end : 21
shows : 21
resource : 21
sum : 21
returned : 21
state : 21
windows : 22
own : 22
under : 22
things : 22
microservices : 22
provides : 22
common : 22
name : 22
mostly : 22
done : 22
put : 22
add : 22
s : 22
series : 22
struct : 22
happens : 22
started : 22
classes : 22
corresponding : 22
programmer : 23
window : 23
services : 23
basic : 23
user : 23
various : 23
takes : 23
three : 23
elements : 23
delete : 23
semantics : 23
similar : 23
lock : 23
systems : 24
arguments : 24
exception : 24
features : 24
passed : 24
single : 24
software : 25
topic : 25
x : 25
web : 25
client : 25
once : 25
run : 25
variables : 25
methods : 25
specified : 25
start : 25
up : 26
parallelism : 26
stl : 26
custom : 26
since : 26
contents : 26
invoke : 26
subscriber : 26
sequence : 26
parameter : 26
now : 26
contains : 26
demonstrates : 26
every : 27
learn : 27
chapter : 27
supported : 27
subscription : 27
file : 27
work : 27
base : 27
many : 27
without : 28
flow : 28
implement : 28
constructs : 28
particular : 28
numbers : 28
variable : 28
synchronization : 28
no : 29
like : 29
out : 29
pointer : 29
subject : 29
those : 29
uses : 29
objects : 29
store : 29
member : 29
ordering : 29
node : 29
written : 30
access : 30
world : 30
server : 30
good : 30
because : 30
assignment : 30
than : 30
mutex : 30
your : 31
demonstrate : 31
defined : 31
reference : 31
must : 31
discussed : 31
emit : 31
json : 32
order : 32
given : 32
does : 32
next : 32
argument : 32
were : 33
compiler : 33
inside : 33
very : 33
t : 33
them : 34
move : 34
process : 34
char : 34
concurrent : 35
time : 35
what : 35
mechanism : 35
both : 35
implemented : 35
public : 35
label : 35
part : 36
just : 36
filter : 36
signals : 36
helps : 36
wait : 36
subscribe : 36
over : 37
rx : 37
understand : 37
learned : 37
multiple : 37
asynchronous : 38
case : 38
concurrency : 38
items : 38
here : 38
interface : 38
their : 39
first : 39
make : 40
expression : 40
simple : 40
observables : 40
task : 40
book : 41
design : 41
bool : 41
already : 41
visitor : 41
programs : 42
example : 42
structure : 42
even : 42
processing : 43
http : 43
created : 43
system : 43
print : 44
patterns : 44
main : 44
emitted : 44
composite : 45
returns : 45
list : 45
gof : 46
handle : 46
types : 47
covered : 47
based : 47
execution : 48
operation : 48
emits : 48
handling : 49
number : 49
template : 49
take : 49
support : 50
before : 50
help : 51
observer : 51
been : 52
different : 52
while : 52
between : 53
map : 53
each : 53
string : 54
us : 55
after : 55
where : 56
gui : 56
streams : 56
result : 56
another : 57
so : 57
our : 58
was : 58
virtual : 58
do : 59
rest : 60
functional : 60
see : 60
id : 61
most : 62
lambda : 62
need : 62
output : 62
available : 63
should : 63
const : 63
writing : 64
key : 65
same : 65
get : 66
application : 66
implementation : 66
modern : 67
but : 67
any : 68
functions : 68
instance : 68
only : 68
i : 68
memory : 69
look : 69
called : 69
associated : 69
error : 70
previous : 71
call : 71
method : 71
threads : 71
operations : 72
they : 72
set : 73
mouse : 74
through : 76
used : 76
double : 76
more : 80
also : 81
language : 81
these : 82
preceding : 83
pattern : 84
qt : 84
cout : 85
events : 87
about : 89
type : 89
there : 91
atomic : 93
operators : 93
other : 93
rxcpp : 97
values : 97
create : 97
standard : 98
operator : 98
one : 101
new : 103
source : 104
namespace : 105
some : 106
all : 107
model : 107
two : 107
such : 109
void : 111
its : 116
when : 120
not : 121
use : 122
object : 122
program : 127
value : 135
write : 136
following : 138
how : 140
library : 146
at : 149
has : 151
stream : 153
into : 159
auto : 161
int : 167
which : 168
reactive : 169
you : 171
if : 175
class : 192
observable : 199
event : 207
or : 210
thread : 218
code : 221
have : 236
it : 242
data : 251
function : 262
from : 274
return : 289
on : 298
programming : 321
using : 343
by : 344
are : 403
with : 425
can : 439
this : 469
be : 471
will : 482
an : 490
as : 516
that : 524
for : 578
we : 704
in : 1016
is : 1067
and : 1420
of : 1585
to : 1751
a : 1769
the : 4849
reactive concurrent and -> asynchronous : 1
concurrent and asynchronous -> applications : 1
and asynchronous applications -> using : 1
asynchronous applications using -> the : 1
applications using the -> rxcpp : 1
applications using the -> the : 1
applications using the -> microservice : 1
using the rxcpp -> library : 3
using the rxcpp -> there : 1
using the rxcpp -> such : 1
using the rxcpp -> in : 1
using the rxcpp -> based : 1
the rxcpp library -> and : 5
the rxcpp library -> with : 3
the rxcpp library -> uses : 1
the rxcpp library -> in : 3
the rxcpp library -> to : 2
the rxcpp library -> can : 4
the rxcpp library -> is : 5
the rxcpp library -> supports : 1
the rxcpp library -> implements : 1
the rxcpp library -> folder : 1
the rxcpp library -> provides : 1
rxcpp library and -> modern : 1
rxcpp library and -> its : 7
library and modern -> reactive : 1
and modern reactive -> packt : 1
modern reactive packt -> rights : 1
reactive packt rights -> no : 1
packt rights no -> part : 1
rights no part -> of : 1
no part of -> this : 1
part of this -> book : 1
of this book -> may : 1
of this book -> to : 1
of this book -> and : 1
of this book -> feel : 1
of this book -> into : 1
of this book -> have : 3
this book may -> be : 1
book may be -> stored : 1
may be stored -> in : 1
be stored in -> a : 1
be stored in -> the : 1
stored in a -> retrieval : 1
in a retrieval -> or : 1
a retrieval or -> transmitted : 1
retrieval or transmitted -> in : 1
or transmitted in -> any : 1
transmitted in any -> form : 1
in any form -> or : 1
in any form -> on : 1
any form or -> by : 1
form or by -> any : 1
or by any -> without : 1
by any without -> the : 1
any without the -> prior : 1
without the prior -> written : 1
the prior written -> permission : 1
prior written permission -> of : 1
written permission of -> the : 1
permission of the -> except : 1
of the except -> in : 1
the except in -> the : 1
except in the -> case : 1
in the case -> of : 17
in the case -> all : 1
the case of -> brief : 1
the case of -> memory : 1
the case of -> a : 1
the case of -> the : 4
the case of -> arguments : 1
the case of -> reactive : 1
the case of -> since : 1
the case of -> functional : 1
the case of -> we : 2
the case of -> it : 1
the case of -> visitor : 1
the case of -> static : 1
the case of -> polyglot : 2
the case of -> applications : 1
the case of -> gui : 1
case of brief -> quotations : 1
of brief quotations -> embedded : 1
brief quotations embedded -> in : 1
quotations embedded in -> critical : 1
embedded in critical -> articles : 1
in critical articles -> or : 1
critical articles or -> effort : 1
articles or effort -> has : 1
or effort has -> been : 1
effort has been -> made : 1
has been made -> in : 1
been made in -> the : 1
made in the -> preparation : 1
in the preparation -> of : 1
the preparation of -> this : 1
preparation of this -> book : 1
this book to -> ensure : 1
book to ensure -> the : 1
to ensure the -> accuracy : 2
to ensure the -> order : 1
ensure the accuracy -> of : 2
the accuracy of -> the : 1
the accuracy of -> this : 1
the accuracy of -> our : 1
accuracy of the -> information : 1
of the information -> the : 1
the information the -> information : 1
information the information -> contained : 1
the information contained -> in : 1
information contained in -> this : 1
contained in this -> book : 1
in this book -> is : 1
in this book -> by : 1
in this book -> are : 1
this book is -> sold : 1
this book is -> this : 1
this book is -> a : 1
book is sold -> without : 1
is sold without -> either : 1
sold without either -> express : 1
without either express -> or : 1
either express or -> neither : 1
express or neither -> the : 1
or neither the -> nor : 1
neither the nor -> packt : 1
the nor packt -> publishing : 1
nor packt publishing -> or : 1
packt publishing or -> its : 1
publishing or its -> dealers : 1
or its dealers -> and : 1
its dealers and -> will : 1
dealers and will -> be : 1
and will be -> held : 1
and will be -> used : 1
and will be -> invoked : 1
and will be -> by : 1
and will be -> connected : 1
and will be -> using : 1
will be held -> liable : 1
be held liable -> for : 1
held liable for -> any : 1
liable for any -> damages : 1
for any damages -> caused : 1
any damages caused -> or : 1
damages caused or -> alleged : 1
caused or alleged -> to : 1
or alleged to -> have : 1
alleged to have -> been : 1
to have been -> caused : 1
have been caused -> directly : 1
been caused directly -> or : 1
caused directly or -> indirectly : 1
directly or indirectly -> by : 1
or indirectly by -> this : 1
indirectly by this -> publishing : 1
by this publishing -> has : 1
this publishing has -> endeavored : 1
publishing has endeavored -> to : 1
has endeavored to -> provide : 1
endeavored to provide -> trademark : 1
to provide trademark -> information : 1
provide trademark information -> about : 1
trademark information about -> all : 1
information about all -> of : 1
about all of -> the : 1
all of the -> companies : 1
all of the -> multithreading : 1
all of the -> threads : 1
all of the -> move : 1
all of the -> modifications : 1
all of the -> other : 1
all of the -> elements : 1
all of the -> preceding : 1
all of the -> items : 1
all of the -> widgets : 2
all of the -> future : 1
all of the -> including : 1
all of the -> signals : 1
all of the -> events : 1
all of the -> virtual : 1
all of the -> and : 1
all of the -> arguments : 1
all of the -> values : 1
of the companies -> and : 1
the companies and -> products : 1
companies and products -> mentioned : 1
and products mentioned -> in : 1
products mentioned in -> this : 1
mentioned in this -> book : 1
this book by -> the : 1
book by the -> appropriate : 1
by the appropriate -> use : 1
the appropriate use -> of : 1
appropriate use of -> packt : 1
use of packt -> publishing : 1
of packt publishing -> cannot : 1
packt publishing cannot -> guarantee : 1
publishing cannot guarantee -> the : 1
cannot guarantee the -> accuracy : 1
guarantee the accuracy -> of : 1
accuracy of this -> sandeep : 1
of this sandeep -> development : 1
this sandeep development -> ketan : 1
sandeep development ketan -> safis : 1
development ketan safis -> jason : 1
ketan safis jason -> shraddha : 1
safis jason shraddha -> june : 1
jason shraddha june -> by : 1
shraddha june by -> packt : 1
june by packt -> publishing : 1
by packt publishing -> livery : 1
packt publishing livery -> livery : 1
publishing livery livery -> is : 1
livery livery is -> an : 1
livery is an -> online : 1
is an online -> digital : 1
an online digital -> library : 1
online digital library -> that : 1
digital library that -> gives : 1
library that gives -> you : 1
that gives you -> full : 1
gives you full -> access : 1
you full access -> to : 1
full access to -> over : 1
access to over -> books : 1
to over books -> and : 1
over books and -> as : 1
books and as -> well : 1
and as well -> as : 2
as well as -> industry : 1
as well as -> a : 1
as well as -> memory : 1
as well as -> an : 1
as well as -> various : 1
as well as -> many : 1
well as industry -> leading : 1
as industry leading -> tools : 1
industry leading tools -> to : 1
leading tools to -> help : 1
tools to help -> you : 1
to help you -> plan : 1
to help you -> understand : 1
help you plan -> your : 1
you plan your -> personal : 1
plan your personal -> development : 1
your personal development -> and : 1
personal development and -> advance : 1
development and advance -> your : 1
and advance your -> for : 1
advance your for -> more : 1
your for more -> please : 1
for more please -> visit : 1
more please visit -> our : 1
please visit our -> less : 1
visit our less -> time : 1
our less time -> learning : 1
less time learning -> and : 1
time learning and -> more : 1
learning and more -> time : 1
and more time -> coding : 1
more time coding -> with : 1
time coding with -> practical : 1
coding with practical -> ebooks : 1
with practical ebooks -> and : 1
practical ebooks and -> videos : 1
ebooks and videos -> from : 1
and videos from -> over : 1
videos from over -> industry : 1
from over industry -> your : 1
over industry your -> learning : 1
industry your learning -> with : 1
your learning with -> skill : 1
learning with skill -> plans : 1
with skill plans -> built : 1
skill plans built -> especially : 1
plans built especially -> for : 1
built especially for -> a : 1
especially for a -> free : 1
for a free -> ebook : 1
a free ebook -> or : 1
free ebook or -> video : 1
ebook or video -> every : 1
or video every -> is : 1
video every is -> fully : 1
every is fully -> and : 1
is fully and -> and : 1
fully and and -> bookmark : 1
and and bookmark -> you : 1
and bookmark you -> know : 1
bookmark you know -> that : 1
you know that -> packt : 1
know that packt -> offers : 1
that packt offers -> ebook : 1
packt offers ebook -> versions : 1
offers ebook versions -> of : 1
ebook versions of -> every : 1
versions of every -> book : 1
of every book -> with : 1
every book with -> pdf : 1
book with pdf -> and : 1
with pdf and -> epub : 1
pdf and epub -> files : 1
and epub files -> you : 1
epub files you -> can : 1
files you can -> upgrade : 1
you can upgrade -> to : 1
can upgrade to -> the : 1
upgrade to the -> ebook : 1
to the ebook -> version : 1
the ebook version -> at : 1
ebook version at -> and : 1
version at and -> as : 1
at and as -> a : 1
and as a -> print : 1
as a print -> book : 1
a print book -> you : 1
print book you -> are : 1
book you are -> entitled : 1
you are entitled -> to : 1
are entitled to -> a : 1
entitled to a -> discount : 1
to a discount -> on : 1
a discount on -> the : 1
discount on the -> ebook : 1
on the ebook -> get : 1
the ebook get -> in : 1
ebook get in -> touch : 1
get in touch -> with : 1
in touch with -> us : 1
touch with us -> at : 1
with us at -> for : 1
us at for -> more : 1
at for more -> you : 1
for more you -> can : 1
more you can -> also : 1
you can also -> read : 1
can also read -> a : 1
also read a -> collection : 1
read a collection -> of : 1
a collection of -> free : 1
a collection of -> forward : 1
a collection of -> visitor : 1
a collection of -> pairs : 1
collection of free -> technical : 1
of free technical -> sign : 1
free technical sign -> up : 1
technical sign up -> for : 1
sign up for -> a : 1
up for a -> range : 1
for a range -> of : 1
a range of -> free : 1
a range of -> values : 2
a range of -> an : 1
range of free -> and : 1
of free and -> receive : 1
free and receive -> exclusive : 1
and receive exclusive -> discounts : 1
receive exclusive discounts -> and : 1
exclusive discounts and -> offers : 1
discounts and offers -> on : 1
and offers on -> packt : 1
offers on packt -> books : 1
on packt books -> and : 1
packt books and -> the : 1
books and the -> been : 1
and the been -> working : 1
the been working -> in : 1
been working in -> the : 1
working in the -> software : 1
in the software -> industry : 1
in the software -> design : 1
the software industry -> for : 1
software industry for -> the : 1
industry for the -> last : 1
for the last -> starting : 1
the last starting -> his : 1
last starting his -> career : 1
starting his career -> as : 1
his career as -> a : 1
career as a -> systems : 1
as a systems -> programmer : 1
a systems programmer -> using : 1
systems programmer using -> ansi : 1
programmer using ansi -> he : 1
using ansi he -> has : 1
ansi he has -> been : 1
he has been -> actively : 1
he has been -> a : 1
has been actively -> involved : 1
been actively involved -> in : 1
actively involved in -> developing : 1
involved in developing -> native : 1
in developing native -> systems : 1
developing native systems -> using : 1
native systems using -> on : 1
systems using on -> gnu : 1
using on gnu -> and : 1
on gnu and -> macos : 1
gnu and macos -> he : 1
and macos he -> has : 1
macos he has -> experience : 1
he has experience -> in : 1
has experience in -> and : 1
experience in and -> corba : 1
in and corba -> programming : 1
and corba programming -> using : 1
corba programming using -> in : 1
programming using in -> the : 1
using in the -> last : 1
using in the -> programs : 1
in the last -> he : 1
in the last -> decade : 1
in the last -> we : 1
the last he -> has : 1
last he has -> worked : 1
he has worked -> with : 2
has worked with -> and : 1
has worked with -> gui : 1
has worked with -> a : 1
worked with and -> is : 1
with and is -> the : 1
with and is -> synchronous : 1
and is the -> primary : 1
is the primary -> implementer : 1
the primary implementer -> of : 1
primary implementer of -> the : 2
implementer of the -> compilation : 1
implementer of the -> rxcpp : 1
of the compilation -> which : 1
the compilation which -> has : 1
compilation which has -> been : 1
which has been -> ported : 1
which has been -> emitted : 1
has been ported -> to : 1
been ported to -> with : 1
been ported to -> microsoft : 1
ported to with -> an : 1
to with an -> llvm : 1
with an llvm -> he : 1
an llvm he -> coauthored : 1
llvm he coauthored -> design : 1
he coauthored design -> by : 1
coauthored design by -> packt : 1
design by packt -> been : 1
by packt been -> a : 1
packt been a -> performance : 1
been a performance -> fanatic : 1
a performance fanatic -> and : 1
performance fanatic and -> a : 1
fanatic and a -> programming : 1
and a programming -> language : 1
a programming language -> enthusiast : 1
programming language enthusiast -> right : 1
language enthusiast right -> from : 1
enthusiast right from -> his : 1
right from his -> college : 1
from his college -> where : 1
his college where -> he : 1
college where he -> excelled : 1
where he excelled -> in : 1
he excelled in -> microsoft : 1
excelled in microsoft -> windows : 1
in microsoft windows -> programming : 1
microsoft windows programming -> and : 1
windows programming and -> gnu : 1
programming and gnu -> linux : 1
and gnu linux -> he : 1
gnu linux he -> garnered : 1
linux he garnered -> experience : 1
he garnered experience -> in : 1
garnered experience in -> working : 1
experience in working -> with : 1
in working with -> image : 1
working with image -> and : 1
with image and -> computer : 1
image and computer -> graphics : 1
and computer graphics -> programs : 1
computer graphics programs -> by : 1
graphics programs by -> virtue : 1
programs by virtue -> of : 1
by virtue of -> working : 1
virtue of working -> with : 1
of working with -> companies : 1
working with companies -> such : 1
with companies such -> as : 1
companies such as -> quest : 1
such as quest -> and : 1
as quest and -> has : 1
quest and has -> been : 1
and has been -> eagerly : 1
and has been -> given : 1
and has been -> helpful : 1
has been eagerly -> following : 1
been eagerly following -> the : 1
eagerly following the -> standard : 1
following the standard -> and : 1
the standard and -> rxcpp : 1
standard and rxcpp -> libraries : 1
and rxcpp libraries -> as : 1
and rxcpp libraries -> to : 1
rxcpp libraries as -> part : 1
libraries as part -> of : 1
as part of -> his : 5
as part of -> the : 11
as part of -> most : 1
as part of -> a : 1
part of his -> he : 1
part of his -> getting : 1
part of his -> twitter : 2
part of his -> phd : 1
of his he -> has : 1
his he has -> worked : 1
worked with gui -> toolkits : 1
with gui toolkits -> such : 1
gui toolkits such -> as : 1
toolkits such as -> and : 1
such as and -> fox : 1
such as and -> corba : 1
such as and -> rxcpp : 1
such as and -> so : 1
such as and -> similar : 1
such as and -> we : 3
such as and -> operators : 1
such as and -> atomically : 1
such as and -> the : 2
such as and -> execute : 1
such as and -> as : 1
such as and -> follow : 1
such as and -> identified : 1
such as and -> any : 1
such as and -> there : 1
such as and -> come : 2
such as and -> are : 1
such as and -> duck : 1
such as and -> rest : 1
such as and -> a : 1
such as and -> convert : 1
such as and -> to : 1
as and fox -> the : 1
and fox the -> a : 1
fox the a -> software : 1
the a software -> open : 1
a software open -> source : 1
software open source -> and : 1
open source and -> he : 1
open source and -> proprietary : 1
source and he -> is : 1
and he is -> experienced : 1
he is experienced -> in : 1
is experienced in -> using : 1
experienced in using -> modern : 1
in using modern -> data : 1
using modern data -> distribution : 1
modern data distribution -> reactive : 1
data distribution reactive -> and : 1
distribution reactive and -> stream : 1
reactive and stream -> processing : 1
and stream processing -> to : 1
stream processing to -> solve : 1
stream processing to -> complete : 1
processing to solve -> new : 1
to solve new -> problems : 1
solve new problems -> in : 1
new problems in -> big : 1
problems in big -> data : 1
in big data -> and : 1
big data and -> industrial : 1
data and industrial -> has : 1
and industrial has -> authored : 1
industrial has authored -> blog : 1
has authored blog -> and : 1
authored blog and -> the : 1
blog and the -> he : 1
and the he -> shares : 1
the he shares -> his : 1
he shares his -> learnings : 1
shares his learnings -> on : 1
his learnings on -> his : 1
learnings on his -> and : 1
on his and -> at : 1
his and at -> local : 1
and at local -> code : 1
at local code -> and : 1
local code and -> he : 1
code and he -> has : 1
and he has -> been : 1
has been a -> recipient : 1
has been a -> problematic : 1
has been a -> source : 1
been a recipient -> of : 1
a recipient of -> the : 1
recipient of the -> microsoft : 1
of the microsoft -> mvp : 1
of the microsoft -> rest : 1
the microsoft mvp -> award : 1
microsoft mvp award -> in : 1
mvp award in -> development : 1
award in development -> technologies : 1
in development technologies -> for : 1
development technologies for -> he : 1
technologies for he -> has : 1
for he has -> a : 1
he has a -> phd : 1
has a phd -> in : 1
a phd in -> computer : 1
phd in computer -> science : 1
in computer science -> from : 1
computer science from -> vanderbilt : 1
science from vanderbilt -> is : 1
from vanderbilt is -> searching : 1
vanderbilt is searching -> for : 1
is searching for -> authors : 2
searching for authors -> like : 2
for authors like -> interested : 1
for authors like -> this : 1
authors like interested -> in : 1
like interested in -> becoming : 1
interested in becoming -> an : 2
in becoming an -> author : 1
in becoming an -> if : 1
becoming an author -> for : 1
an author for -> please : 1
author for please -> visit : 1
for please visit -> and : 1
please visit and -> apply : 1
visit and apply -> we : 1
and apply we -> have : 1
apply we have -> worked : 1
we have worked -> with : 1
have worked with -> thousands : 1
have worked with -> packt : 1
worked with thousands -> of : 1
with thousands of -> developers : 1
thousands of developers -> and : 1
of developers and -> tech : 1
developers and tech -> just : 1
and tech just -> like : 1
tech just like -> to : 1
just like to -> help : 1
like to help -> them : 1
to help them -> share : 1
help them share -> their : 1
them share their -> insight : 1
share their insight -> with : 1
their insight with -> the : 1
insight with the -> global : 1
with the global -> tech : 1
the global tech -> you : 1
global tech you -> can : 1
tech you can -> make : 1
you can make -> a : 1
can make a -> general : 1
make a general -> apply : 1
a general apply -> for : 1
general apply for -> a : 1
apply for a -> specific : 1
for a specific -> hot : 1
for a specific -> the : 1
for a specific -> task : 1
a specific hot -> topic : 1
specific hot topic -> that : 1
hot topic that -> we : 1
topic that we -> are : 1
that we are -> recruiting : 1
that we are -> coupling : 1
that we are -> interested : 1
that we are -> going : 1
we are recruiting -> an : 1
are recruiting an -> author : 1
recruiting an author -> or : 1
an author or -> submit : 1
author or submit -> your : 1
or submit your -> own : 1
submit your own -> of : 1
your own of -> and : 1
own of and -> reactive : 1
of and reactive -> the : 1
and reactive the -> the : 1
reactive the the -> is : 1
the the is -> searching : 1
the is searching -> for : 1
authors like this -> book : 1
like this book -> is : 1
book is this -> book : 1
is this book -> get : 1
this book get -> the : 1
book get the -> most : 1
get the most -> out : 2
the most out -> of : 2
most out of -> this : 2
out of this -> the : 1
out of this -> order : 1
of this the -> example : 1
this the example -> code : 1
the example code -> the : 1
the example code -> can : 1
the example code -> files : 1
example code the -> color : 1
code the color -> in : 1
the color in -> programming : 1
color in programming -> model : 1
in programming model -> overview : 3
programming model overview -> and : 5
model overview and -> programming : 1
model overview and -> introduces : 1
model overview and -> x : 1
model overview and -> we : 1
model overview and -> and : 1
overview and programming -> programming : 1
and programming programming -> on : 1
programming programming on -> x : 1
programming on x -> programming : 1
programming on x -> x : 1
on x programming -> on : 1
x programming on -> microsoft : 1
programming on microsoft -> programming : 1
programming on microsoft -> corporation : 1
on microsoft programming -> under : 1
microsoft programming under -> programming : 1
programming under programming -> under : 1
programming under programming -> of : 1
under programming under -> programming : 1
under programming of -> classical : 1
programming of classical -> event : 1
of classical event -> processing : 2
classical event processing -> programming : 1
classical event processing -> whole : 1
event processing programming -> reactive : 1
processing programming reactive -> key : 1
processing programming reactive -> programming : 1
programming reactive key -> interfaces : 1
reactive key interfaces -> of : 1
key interfaces of -> a : 2
key interfaces of -> the : 1
interfaces of a -> reactive : 2
of a reactive -> reactive : 1
of a reactive -> error : 1
of a reactive -> help : 1
of a reactive -> in : 1
of a reactive -> handling : 1
of a reactive -> now : 1
of a reactive -> how : 1
of a reactive -> and : 1
of a reactive -> when : 1
a reactive reactive -> events : 1
reactive reactive events -> to : 1
reactive events to -> philosophy : 1
events to philosophy -> of : 1
to philosophy of -> our : 1
philosophy of our -> tour : 1
philosophy of our -> programming : 1
philosophy of our -> purpose : 1
of our tour -> of : 1
our tour of -> modern : 1
tour of modern -> and : 6
of modern and -> its : 6
modern and its -> key : 7
and its key -> key : 1
and its key -> covers : 1
and its key -> concurrency : 1
and its key -> classic : 1
and its key -> abstraction : 1
and its key -> the : 1
and its key -> in : 1
its key key -> concerns : 1
key key concerns -> of : 1
key concerns of -> the : 2
concerns of the -> programming : 2
of the programming -> cost : 1
of the programming -> far : 1
of the programming -> this : 1
of the programming -> deduction : 1
of the programming -> is : 1
of the programming -> even : 1
of the programming -> languages : 1
the programming cost -> to : 1
programming cost to -> for : 1
cost to for -> writing : 1
to for writing -> better : 3
for writing better -> deduction : 1
for writing better -> memory : 1
for writing better -> these : 1
for writing better -> programming : 1
writing better deduction -> and : 1
better deduction and -> initialization : 1
deduction and initialization -> of : 1
and initialization of -> and : 1
initialization of and -> and : 1
of and and -> partial : 1
and and partial -> function : 1
and partial function -> functions : 1
and partial function -> advantage : 1
partial function functions -> together : 1
function functions together -> with : 1
functions together with -> the : 2
together with the -> important : 1
together with the -> unix : 1
with the important -> for : 1
the important for -> loops : 1
important for loops -> and : 1
for loops and -> concurrency : 1
for loops and -> this : 1
loops and concurrency -> and : 1
and concurrency and -> parallelism : 2
concurrency and parallelism -> in : 10
concurrency and parallelism -> were : 1
and parallelism in -> is : 1
and parallelism in -> discusses : 1
and parallelism in -> and : 2
and parallelism in -> has : 1
and parallelism in -> multiple : 1
and parallelism in -> memory : 1
and parallelism in -> you : 1
and parallelism in -> in : 1
and parallelism in -> we : 1
parallelism in is -> world : 1
parallelism in is -> a : 1
in is world -> of : 1
is world of -> concurrency : 1
world of concurrency -> arguments : 1
world of concurrency -> get : 1
of concurrency arguments -> into : 1
concurrency arguments into -> a : 1
arguments into a -> data : 1
arguments into a -> fixed : 1
arguments into a -> we : 1
arguments into a -> thread : 3
arguments into a -> ownership : 1
into a data -> between : 1
a data between -> with : 1
data between with -> stack : 1
between with stack -> data : 1
with stack data -> and : 1
stack data and -> programming : 1
data and programming -> in : 1
and programming in -> parallelism : 1
and programming in -> discusses : 1
and programming in -> give : 1
and programming in -> there : 1
and programming in -> the : 1
and programming in -> we : 1
programming in parallelism -> in : 1
in parallelism in -> and : 1
parallelism in and -> memory : 1
parallelism in and -> programming : 1
parallelism in and -> introduced : 1
parallelism in and -> and : 1
in and memory -> access : 1
and memory access -> and : 1
memory access and -> modification : 1
memory access and -> the : 1
access and modification -> operations : 1
and modification operations -> and : 1
modification operations and -> types : 1
operations and types -> in : 2
and types in -> atomic : 1
and types in -> a : 1
types in atomic -> integral : 1
in atomic integral -> pointer : 1
in atomic integral -> the : 1
atomic integral pointer -> primary : 1
integral pointer primary -> class : 1
pointer primary class -> data : 1
primary class data -> structure : 1
class data structure -> to : 1
data structure to -> gof : 1
data structure to -> work : 1
data structure to -> store : 2
data structure to -> evaluate : 1
data structure to -> represent : 1
structure to gof -> observer : 1
to gof observer -> limitations : 1
gof observer limitations -> of : 1
observer limitations of -> the : 1
limitations of the -> gof : 2
of the gof -> observer : 3
the gof observer -> holistic : 2
the gof observer -> pattern : 3
the gof observer -> gof : 2
gof observer holistic -> look : 2
observer holistic look -> at : 2
holistic look at -> gof : 2
holistic look at -> design : 1
look at gof -> oop : 1
look at gof -> design : 1
at gof oop -> programming : 1
gof oop programming -> model : 1
oop programming model -> and : 2
programming model and -> pattern : 1
programming model and -> how : 3
programming model and -> section : 1
programming model and -> rx : 1
programming model and -> its : 1
model and pattern -> for : 1
and pattern for -> expression : 1
pattern for expression -> the : 1
pattern for expression -> demonstrate : 1
for expression the -> composite : 1
expression the composite -> for : 1
the composite for -> iterative : 2
the composite for -> someone : 1
composite for iterative -> and : 1
composite for iterative -> have : 1
for iterative and -> filter : 1
iterative and filter -> operations : 1
and filter operations -> on : 2
filter operations on -> the : 2
operations on the -> the : 1
operations on the -> same : 3
operations on the -> is : 1
on the the -> gaze : 1
on the the -> function : 1
the the gaze -> for : 1
the gaze for -> to : 1
the gaze for -> a : 1
the gaze for -> have : 1
gaze for to -> event : 1
for to event -> stream : 1
to event stream -> programming : 4
event stream programming -> using : 4
event stream programming -> before : 1
event stream programming -> is : 1
event stream programming -> we : 1
stream programming using -> is : 1
stream programming using -> the : 3
stream programming using -> focuses : 1
stream programming using -> we : 1
stream programming using -> chapter : 1
programming using is -> stream : 1
using is stream -> programming : 1
is stream programming -> of : 1
is stream programming -> we : 1
stream programming of -> the : 2
programming of the -> stream : 2
of the stream -> programming : 4
of the stream -> to : 2
of the stream -> expressions : 1
of the stream -> will : 1
of the stream -> sequentially : 1
of the stream -> after : 1
of the stream -> one : 1
the stream programming -> stream : 1
the stream programming -> of : 1
the stream programming -> programming : 1
the stream programming -> oop : 1
the stream programming -> we : 1
stream programming stream -> programming : 1
programming stream programming -> using : 1
programming using the -> streams : 2
programming using the -> rest : 4
programming using the -> qt : 1
programming using the -> public : 1
programming using the -> first : 1
programming using the -> operators : 1
using the streams -> simple : 1
using the streams -> this : 1
the streams simple -> stream : 1
streams simple stream -> values : 1
simple stream values -> using : 1
stream values using -> the : 1
values using the -> stream : 2
using the stream -> stl : 1
using the stream -> that : 1
the stream stl -> and : 1
stream stl and -> the : 1
stl and the -> stream : 2
and the stream -> word : 1
and the stream -> library : 1
the stream word -> about : 1
stream word about -> the : 1
word about the -> streams : 2
word about the -> reactive : 2
about the streams -> of : 1
about the streams -> library : 1
the streams of -> event : 1
streams of event -> stream : 1
of event stream -> streamulus : 1
of event stream -> we : 1
of event stream -> programming : 2
of event stream -> events : 1
of event stream -> treating : 1
event stream streamulus -> library : 1
stream streamulus library -> and : 1
streamulus library and -> its : 2
library and its -> programming : 9
library and its -> nuances : 1
library and its -> the : 1
and its programming -> streamulus : 2
and its programming -> simple : 1
and its programming -> streams : 1
and its programming -> basic : 1
and its programming -> this : 1
and its programming -> we : 1
and its programming -> model : 1
and its programming -> the : 2
and its programming -> gui : 1
its programming streamulus -> a : 1
its programming streamulus -> from : 1
programming streamulus a -> peek : 1
streamulus a peek -> into : 2
a peek into -> its : 2
a peek into -> the : 1
peek into its -> streamulus : 1
peek into its -> library : 1
into its streamulus -> a : 1
its streamulus a -> look : 1
streamulus a look -> into : 2
a look into -> expression : 2
look into expression -> spreadsheet : 1
look into expression -> will : 1
into expression spreadsheet -> library : 1
expression spreadsheet library -> another : 1
spreadsheet library another -> do : 1
library another do -> these : 1
another do these -> things : 1
do these things -> have : 2
these things have -> to : 2
things have to -> do : 2
have to do -> with : 2
to do with -> rx : 2
to do with -> access : 1
to do with -> the : 1
do with rx -> to : 1
do with rx -> the : 1
with rx to -> data : 1
rx to data -> flow : 1
to data flow -> computation : 5
data flow computation -> and : 5
data flow computation -> introduction : 1
data flow computation -> programmers : 1
data flow computation -> organizes : 1
data flow computation -> framework : 1
data flow computation -> even : 1
flow computation and -> the : 5
computation and the -> rxcpp : 5
and the rxcpp -> data : 1
and the rxcpp -> starts : 1
and the rxcpp -> and : 1
and the rxcpp -> library : 2
and the rxcpp -> this : 1
and the rxcpp -> documentation : 1
and the rxcpp -> we : 2
and the rxcpp -> the : 1
the rxcpp data -> flow : 1
rxcpp data flow -> computation : 1
flow computation introduction -> to : 1
computation introduction to -> the : 1
introduction to the -> rxcpp : 2
to the rxcpp -> rxcpp : 1
to the rxcpp -> library : 3
to the rxcpp -> will : 1
to the rxcpp -> documentation : 1
the rxcpp rxcpp -> library : 1
rxcpp rxcpp library -> and : 1
its programming simple -> and : 1
programming simple and -> transformations : 1
simple and transformations -> with : 1
and transformations with -> values : 1
and transformations with -> following : 1
transformations with values -> from : 1
with values from -> observables : 1
values from observables -> from : 1
from observables from -> observable : 1
observables from observable -> from : 1
from observable from -> observable : 1
observable from observable -> introduction : 1
from observable introduction -> to : 1
observable introduction to -> marble : 1
introduction to marble -> diagrams : 2
to marble diagrams -> for : 2
marble diagrams for -> visual : 2
diagrams for visual -> average : 1
diagrams for visual -> is : 1
for visual average -> scan : 1
visual average scan -> operators : 1
average scan operators -> through : 1
scan operators through -> the : 1
operators through the -> pipe : 2
through the pipe -> with : 1
through the pipe -> rxcpp : 1
the pipe with -> tale : 1
pipe with tale -> of : 1
with tale of -> two : 1
tale of two -> versus : 2
of two versus -> concat : 2
two versus concat -> operators : 1
two versus concat -> source : 1
versus concat operators -> that : 1
concat operators that -> are : 1
operators that are -> of : 2
that are of -> peek : 1
that are of -> interest : 1
that are of -> now : 1
are of peek -> into : 1
of peek into -> the : 1
peek into the -> things : 2
peek into the -> programming : 1
peek into the -> contents : 1
into the things -> we : 2
the things we -> covered : 2
things we covered -> the : 1
things we covered -> rx : 1
we covered the -> key : 1
we covered the -> core : 1
we covered the -> concurrency : 1
we covered the -> topic : 1
we covered the -> necessary : 1
we covered the -> subscription : 1
covered the key -> a : 1
the key a -> versus : 1
key a versus -> cold : 1
a versus cold -> observables : 1
versus cold observables -> and : 1
cold observables and -> the : 1
observables and the -> replay : 2
and the replay -> and : 1
and the replay -> hot : 1
the replay and -> their : 1
replay and their -> variants : 1
and their variants -> versus : 1
and their variants -> the : 1
and their variants -> observer : 1
their variants versus -> runloop : 1
variants versus runloop -> utility : 1
versus runloop utility -> and : 1
runloop utility and -> boolean : 1
utility and boolean -> and : 1
and boolean and -> aggregate : 1
boolean and aggregate -> observable : 1
and aggregate observable -> gui : 1
aggregate observable gui -> programming : 1
observable gui programming -> using : 1
gui programming using -> quick : 1
gui programming using -> deals : 1
gui programming using -> you : 1
gui programming using -> the : 2
gui programming using -> detailed : 1
gui programming using -> scheduling : 1
gui programming using -> gui : 1
gui programming using -> operators : 1
gui programming using -> design : 1
gui programming using -> we : 2
gui programming using -> qt : 1
gui programming using -> patterns : 1
programming using quick -> introduction : 1
using quick introduction -> to : 1
quick introduction to -> qt : 3
introduction to qt -> gui : 3
to qt gui -> object : 1
to qt gui -> qt : 1
to qt gui -> is : 1
qt gui object -> and : 1
gui object and -> qt : 1
object and qt -> event : 1
and qt event -> model : 1
and qt event -> the : 1
and qt event -> we : 1
qt event model -> with : 1
event model with -> an : 2
model with an -> a : 1
model with an -> this : 1
with an a -> custom : 1
with an a -> and : 1
an a custom -> the : 1
a custom the -> application : 1
custom the application -> the : 1
the application the -> the : 1
the application the -> logic : 1
the application the -> label : 1
the application the -> size : 1
application the the -> rxcpp : 1
the the rxcpp -> library : 2
the the rxcpp -> returns : 1
rxcpp library with -> the : 3
library with the -> qt : 3
with the qt -> event : 3
with the qt -> get : 1
the qt event -> event : 1
the qt event -> custom : 1
the qt event -> loop : 1
the qt event -> already : 1
the qt event -> namespace : 1
the qt event -> system : 1
qt event event -> filter : 1
event event filter -> a : 1
event filter a -> reactive : 2
filter a reactive -> the : 1
filter a reactive -> mentioned : 1
a reactive the -> window : 1
a reactive the -> next : 1
reactive the window -> setting : 1
the window setting -> layouts : 2
window setting layouts -> and : 2
setting layouts and -> type : 1
setting layouts and -> write : 1
layouts and type -> specific : 1
and type specific -> introduction : 1
type specific introduction -> to : 1
specific introduction to -> patterns : 1
introduction to patterns -> and : 2
to patterns and -> idioms : 1
to patterns and -> the : 1
patterns and idioms -> for : 5
and idioms for -> rx : 4
and idioms for -> reactive : 1
idioms for rx -> oop : 1
idioms for rx -> delves : 1
idioms for rx -> for : 1
idioms for rx -> have : 1
for rx oop -> and : 1
rx oop and -> design : 1
oop and design -> patterns : 2
and design patterns -> pattern : 1
and design patterns -> reached : 1
design patterns pattern -> design : 1
patterns pattern design -> pattern : 1
pattern design pattern -> design : 1
design pattern design -> patterns : 1
pattern design patterns -> to : 1
design patterns to -> reactive : 2
design patterns to -> appreciate : 1
patterns to reactive -> the : 1
patterns to reactive -> though : 1
patterns to reactive -> programming : 1
to reactive the -> hierarchy : 1
reactive the hierarchy -> to : 1
the hierarchy to -> navigate : 2
hierarchy to navigate -> through : 2
to navigate through -> iterators : 1
to navigate through -> visitor : 1
navigate through iterators -> to : 1
through iterators to -> cell : 1
iterators to cell -> active : 1
to cell active -> object : 1
cell active object -> loan : 1
active object loan -> event : 1
object loan event -> bus : 1
loan event bus -> microservices : 1
event bus microservices -> using : 1
bus microservices using -> language : 1
microservices using language -> and : 1
using language and -> web : 1
language and web -> rest : 1
language and web -> most : 1
and web rest -> programming : 1
web rest programming -> rest : 1
rest programming rest -> client : 1
programming rest client -> programming : 1
rest client programming -> using : 1
client programming using -> the : 2
using the rest -> server : 1
using the rest -> the : 1
using the rest -> rest : 1
using the rest -> have : 1
using the rest -> maybe : 1
the rest server -> programming : 1
rest server programming -> using : 1
server programming using -> the : 2
the rest the -> http : 1
the rest the -> class : 1
the rest the -> endpoints : 1
rest the http -> server : 1
the http server -> using : 2
the http server -> we : 1
http server using -> curl : 2
server using curl -> and : 2
using curl and -> libcurl : 1
using curl and -> is : 1
curl and libcurl -> and : 1
and libcurl and -> the : 1
libcurl and the -> http : 2
and the http -> client : 2
and the http -> handlers : 1
the http client -> curl : 1
the http client -> api : 1
the http client -> programming : 1
the http client -> have : 1
http client curl -> wrapper : 1
client curl wrapper -> json : 1
curl wrapper json -> and : 1
wrapper json and -> http : 1
json and http -> rest : 1
json and http -> payload : 1
and http rest -> rest : 1
http rest rest -> rest : 1
rest rest rest -> services : 1
rest rest services -> using : 1
rest services using -> the : 2
services using the -> rxcurl : 2
using the rxcurl -> word : 1
using the rxcurl -> written : 1
the rxcurl word -> about : 1
rxcurl word about -> the : 1
about the reactive -> microservices : 2
about the reactive -> programming : 1
the reactive microservices -> orchestration : 1
the reactive microservices -> have : 1
reactive microservices orchestration -> and : 1
microservices orchestration and -> web : 1
orchestration and web -> service : 1
and web service -> streams : 1
web service streams -> and : 1
service streams and -> handling : 1
streams and handling -> short : 1
streams and handling -> discusses : 1
streams and handling -> this : 2
and handling short -> recap : 1
handling short recap -> of : 1
short recap of -> the : 3
recap of the -> characteristics : 3
of the characteristics -> of : 3
the characteristics of -> a : 3
the characteristics of -> reactive : 1
characteristics of a -> reactive : 3
a reactive error -> and : 1
reactive error and -> exception : 1
error and exception -> handling : 2
error and exception -> we : 1
and exception handling -> an : 1
and exception handling -> a : 1
exception handling an -> action : 1
handling an action -> on : 1
an action on -> an : 2
an action on -> the : 1
action on an -> when : 1
action on an -> an : 1
on an when -> an : 1
an when an -> error : 1
when an error -> when : 1
when an error -> with : 1
when an error -> how : 2
when an error -> error : 1
when an error -> many : 1
when an error -> the : 1
an error when -> an : 1
error when an -> error : 1
an error with -> the : 1
error with the -> and : 1
with the and -> error : 1
with the and -> scala : 1
with the and -> so : 1
with the and -> another : 1
with the and -> the : 1
the and error -> stream : 1
and error stream -> handling : 1
and error stream -> short : 1
error stream handling -> some : 1
stream handling some -> based : 1
stream handling some -> we : 1
handling some based -> on : 1
some based on -> stream : 1
some based on -> the : 1
based on stream -> event : 1
based on stream -> this : 1
on stream event -> handling : 1
stream event handling -> books : 1
event handling books -> you : 1
handling books you -> may : 1
books you may -> a : 1
books you may -> you : 1
you may a -> review : 1
may a review -> let : 1
a review let -> other : 2
review let other -> readers : 2
let other readers -> know : 2
other readers know -> what : 2
readers know what -> you : 2
know what you -> book : 1
know what you -> share : 1
what you book -> will : 1
you book will -> help : 1
book will help -> you : 1
will help you -> learn : 1
will help you -> to : 1
help you learn -> how : 1
you learn how -> to : 1
learn how to -> implement : 1
learn how to -> launch : 1
learn how to -> create : 1
learn how to -> handle : 2
how to implement -> the : 1
to implement the -> reactive : 1
to implement the -> dialog : 1
to implement the -> observables : 1
to implement the -> http : 1
implement the reactive -> programming : 1
the reactive programming -> paradigm : 1
the reactive programming -> it : 1
the reactive programming -> model : 18
the reactive programming -> the : 2
the reactive programming -> we : 2
the reactive programming -> you : 2
the reactive programming -> more : 1
the reactive programming -> because : 1
the reactive programming -> in : 2
reactive programming paradigm -> with : 1
programming paradigm with -> and : 1
paradigm with and -> build : 1
with and build -> asynchronous : 1
and build asynchronous -> and : 1
build asynchronous and -> concurrent : 2
asynchronous and concurrent -> the : 1
asynchronous and concurrent -> find : 1
and concurrent the -> book : 1
and concurrent the -> rxjava : 1
concurrent the book -> includes : 1
the book includes -> problems : 1
book includes problems -> that : 1
includes problems that -> you : 1
problems that you -> will : 1
that you will -> solve : 1
that you will -> see : 1
you will solve -> with : 1
will solve with -> the : 1
solve with the -> reactive : 1
with the reactive -> programming : 2
reactive programming it -> highlights : 1
programming it highlights -> the : 1
it highlights the -> way : 1
highlights the way -> event : 1
the way event -> processing : 1
way event processing -> has : 1
event processing has -> evolved : 1
processing has evolved -> in : 1
has evolved in -> the : 1
evolved in the -> programming : 1
in the programming -> you : 1
in the programming -> architecture : 1
the programming you -> will : 1
programming you will -> learn : 1
you will learn -> about : 5
you will learn -> how : 1
will learn about -> concurrency : 1
will learn about -> microservices : 1
will learn about -> the : 2
will learn about -> concepts : 1
will learn about -> event : 1
will learn about -> microservice : 1
learn about concurrency -> in : 1
about concurrency in -> and : 1
concurrency in and -> functional : 1
in and functional -> reactive : 1
and functional reactive -> constructs : 1
functional reactive constructs -> in : 1
reactive constructs in -> functional : 1
reactive constructs in -> modern : 1
constructs in functional -> programming : 1
in functional programming -> and : 1
in functional programming -> most : 1
functional programming and -> programming : 1
functional programming and -> streams : 1
programming and programming -> will : 1
and programming will -> enable : 1
programming will enable -> you : 1
will enable you -> to : 1
enable you to -> write : 1
you to write -> efficient : 1
you to write -> robust : 1
to write efficient -> after : 1
write efficient after -> you : 1
efficient after you -> will : 1
after you will -> learn : 1
learn about microservices -> in : 1
about microservices in -> and : 1
microservices in and -> create : 1
in and create -> your : 1
and create your -> custom : 1
create your custom -> operators : 1
your custom operators -> for : 1
custom operators for -> this : 1
custom operators for -> rxcpp : 1
operators for this -> book : 1
for this book -> is : 1
for this book -> from : 1
book is a -> developer : 1
is a developer -> interested : 1
a developer interested -> in : 1
developer interested in -> using : 1
interested in using -> reactive : 1
in using reactive -> programming : 1
using reactive programming -> to : 1
reactive programming to -> build : 1
reactive programming to -> cache : 1
programming to build -> asynchronous : 1
to build asynchronous -> and : 1
and concurrent find -> this : 1
concurrent find this -> book : 1
find this book -> extremely : 1
this book extremely -> this : 1
book extremely this -> book : 1
extremely this book -> assume : 1
this book assume -> any : 1
book assume any -> previous : 1
assume any previous -> knowledge : 1
any previous knowledge -> of : 1
previous knowledge of -> reactive : 1
knowledge of reactive -> this : 1
of reactive this -> book : 1
of reactive this -> we : 1
reactive this book -> programming : 1
this book programming -> model : 1
book programming model -> overview : 1
overview and introduces -> some : 1
and introduces some -> key : 1
introduces some key -> data : 1
some key data -> structures : 2
key data structures -> of : 3
data structures of -> the : 3
structures of the -> rx : 2
structures of the -> reactive : 1
of the rx -> programming : 5
of the rx -> dispatching : 1
of the rx -> takes : 1
the rx programming -> it : 1
the rx programming -> model : 8
the rx programming -> we : 1
the rx programming -> rx : 1
rx programming it -> also : 1
programming it also -> covers : 1
it also covers -> gui : 1
also covers gui -> event : 1
covers gui event -> an : 1
gui event an -> overview : 1
event an overview -> of : 1
an overview of -> reactive : 1
overview of reactive -> and : 1
overview of reactive -> programming : 1
of reactive and -> an : 1
reactive and an -> implementation : 1
and an implementation -> of : 1
an implementation of -> gui : 1
an implementation of -> class : 1
an implementation of -> threads : 1
an implementation of -> a : 1
an implementation of -> the : 1
implementation of gui -> versions : 1
of gui versions -> of : 1
gui versions of -> different : 1
versions of different -> interfaces : 1
of different interfaces -> on : 1
different interfaces on -> top : 1
interfaces on top -> of : 2
on top of -> tour : 1
on top of -> mfc : 1
on top of -> the : 4
top of tour -> of : 1
of tour of -> modern : 1
its key covers -> type : 1
key covers type -> variadic : 1
covers type variadic -> rvalue : 1
type variadic rvalue -> references : 2
variadic rvalue references -> and : 2
rvalue references and -> move : 3
references and move -> lambda : 2
references and move -> object : 1
and move lambda -> elementary : 2
move lambda elementary -> functional : 2
lambda elementary functional -> pipeable : 2
elementary functional pipeable -> and : 2
functional pipeable and -> implementation : 2
pipeable and implementation -> of : 2
and implementation of -> iterators : 2
implementation of iterators -> and : 2
of iterators and -> concurrency : 1
of iterators and -> in : 1
iterators and concurrency -> and : 1
parallelism in discusses -> the : 1
in discusses the -> threading : 1
in discusses the -> facilities : 1
discusses the threading -> library : 1
the threading library -> available : 2
the threading library -> introduced : 1
threading library available -> in : 2
library available in -> the : 1
library available in -> standard : 1
available in the -> you : 1
available in the -> processors : 1
available in the -> standard : 8
available in the -> future : 1
available in the -> int : 1
available in the -> rxcpp : 1
available in the -> for : 1
in the you -> will : 1
the you will -> learn : 1
the you will -> be : 1
will learn how -> to : 4
will learn how -> we : 1
will learn how -> iterators : 1
how to launch -> and : 4
to launch and -> manage : 3
to launch and -> wait : 1
launch and manage -> a : 3
and manage a -> and : 3
manage a and -> discuss : 1
manage a and -> how : 1
manage a and -> discussed : 1
a and discuss -> different : 1
and discuss different -> aspects : 1
discuss different aspects -> of : 1
different aspects of -> the : 2
aspects of the -> threading : 2
aspects of the -> the : 2
aspects of the -> reactive : 1
aspects of the -> qt : 1
of the threading -> this : 1
of the threading -> such : 1
the threading this -> chapter : 1
threading this chapter -> lays : 1
this chapter lays -> a : 2
chapter lays a -> good : 2
lays a good -> foundation : 2
a good foundation -> for : 2
good foundation for -> concurrency : 2
foundation for concurrency -> support : 2
for concurrency support -> introduced : 2
concurrency support introduced -> in : 2
support introduced in -> modern : 2
introduced in modern -> and : 1
introduced in modern -> to : 1
in modern and -> programming : 1
modern and programming -> in : 1
programming in discusses -> the : 1
discusses the facilities -> provided : 2
the facilities provided -> by : 2
facilities provided by -> the : 3
provided by the -> standard : 4
provided by the -> xlib : 1
provided by the -> programming : 1
by the standard -> library : 4
by the standard -> to : 1
by the standard -> which : 1
by the standard -> this : 1
the standard library -> for : 1
the standard library -> is : 1
the standard library -> ensures : 1
the standard library -> has : 4
the standard library -> to : 4
the standard library -> applies : 1
the standard library -> can : 1
the standard library -> such : 1
the standard library -> allows : 1
the standard library -> that : 1
standard library for -> writing : 1
library for writing -> it : 1
for writing it -> also : 1
writing it also -> discusses : 1
it also discusses -> the : 1
also discusses the -> new : 1
discusses the new -> memory : 1
the new memory -> model : 2
new memory model -> that : 2
memory model that -> is : 2
memory model that -> helps : 1
model that is -> available : 2
that is available -> with : 2
that is available -> in : 1
is available with -> the : 2
is available with -> open : 1
available with the -> modern : 2
available with the -> programming : 1
available with the -> and : 1
available with the -> standard : 2
available with the -> function : 1
available with the -> rxcpp : 1
with the modern -> to : 1
with the modern -> after : 1
the modern to -> talks : 1
modern to talks -> about : 1
to talks about -> the : 1
talks about the -> gof : 1
about the gof -> observer : 2
about the gof -> pattern : 2
gof observer pattern -> and : 2
gof observer pattern -> is : 1
gof observer pattern -> also : 1
observer pattern and -> explains : 1
observer pattern and -> understood : 1
pattern and explains -> its : 1
and explains its -> you : 1
explains its you -> will : 1
its you will -> learn : 1
learn about the -> gof : 1
learn about the -> set : 1
the gof pattern -> in : 2
the gof pattern -> and : 1
the gof pattern -> catalog : 6
the gof pattern -> we : 1
the gof pattern -> is : 1
gof pattern in -> the : 2
pattern in the -> context : 2
pattern in the -> category : 1
in the context -> of : 11
in the context -> where : 1
the context of -> modeling : 2
the context of -> mathematics : 1
the context of -> functional : 1
the context of -> thread : 1
the context of -> gof : 1
the context of -> the : 2
the context of -> distributed : 1
the context of -> independent : 1
the context of -> changes : 1
context of modeling -> an : 2
of modeling an -> expression : 2
modeling an expression -> to : 1
modeling an expression -> we : 1
an expression to -> event : 1
expression to event -> stream : 1
programming using focuses -> on : 1
using focuses on -> the : 1
focuses on the -> topic : 1
on the topic -> of : 1
the topic of -> event : 3
the topic of -> reactive : 2
the topic of -> observables : 1
the topic of -> the : 2
the topic of -> stream : 1
the topic of -> hot : 1
the topic of -> scheduling : 1
topic of event -> stream : 3
event stream we -> will : 1
stream we will -> also : 1
we will also -> look : 1
we will also -> keep : 1
we will also -> explain : 1
will also look -> at : 1
also look at -> the : 1
look at the -> streamulus : 1
look at the -> the : 2
look at the -> programming : 1
look at the -> cases : 1
look at the -> following : 2
look at the -> operations : 1
look at the -> problem : 1
look at the -> is : 1
look at the -> map : 1
look at the -> operator : 1
look at the -> mechanism : 1
look at the -> topic : 1
look at the -> using : 1
look at the -> concreteobject : 1
look at the -> event : 1
look at the -> library : 1
look at the -> header : 1
look at the -> defines : 1
look at the -> marble : 1
at the streamulus -> which : 2
the streamulus which -> provides : 2
streamulus which provides -> a : 2
which provides a -> dsel : 2
provides a dsel -> approach : 2
a dsel approach -> to : 2
dsel approach to -> the : 2
approach to the -> manipulation : 2
to the manipulation -> of : 2
the manipulation of -> event : 2
manipulation of event -> followed : 1
manipulation of event -> we : 1
of event followed -> by : 1
event followed by -> a : 1
followed by a -> couple : 1
followed by a -> small : 1
followed by a -> call : 2
by a couple -> of : 1
a couple of -> to : 1
a couple of -> things : 1
a couple of -> programs : 1
couple of to -> data : 1
of to data -> flow : 1
the rxcpp starts -> with : 1
rxcpp starts with -> a : 1
starts with a -> conceptual : 1
with a conceptual -> overview : 2
a conceptual overview -> of : 2
conceptual overview of -> the : 2
overview of the -> data : 2
of the data -> flow : 2
of the data -> while : 1
of the data -> the : 1
of the data -> state : 1
of the data -> available : 1
the data flow -> computing : 3
the data flow -> computation : 1
data flow computing -> paradigm : 2
data flow computing -> to : 1
flow computing paradigm -> and : 2
computing paradigm and -> moves : 1
computing paradigm and -> moved : 1
paradigm and moves -> quickly : 1
and moves quickly -> to : 1
moves quickly to -> writing : 1
quickly to writing -> some : 2
to writing some -> basic : 2
writing some basic -> you : 1
writing some basic -> rxcpp : 1
some basic you -> will : 1
basic you will -> learn : 1
about the set -> of : 2
the set of -> operators : 2
set of operators -> supported : 2
set of operators -> not : 1
of operators supported -> by : 3
operators supported by -> the : 3
supported by the -> the : 1
supported by the -> with : 1
supported by the -> language : 2
supported by the -> evaluator : 1
supported by the -> in : 2
supported by the -> rxcpp : 1
supported by the -> rest : 3
by the the -> key : 1
by the the -> following : 1
by the the -> library : 1
the the key -> gives : 1
the key gives -> you : 1
key gives you -> an : 1
gives you an -> understanding : 1
you an understanding -> of : 1
an understanding of -> how : 2
an understanding of -> event : 1
understanding of how -> pieces : 2
of how pieces -> of : 2
how pieces of -> the : 2
pieces of the -> rx : 2
rx programming model -> fit : 2
rx programming model -> can : 3
rx programming model -> works : 1
rx programming model -> in : 1
rx programming model -> defines : 1
rx programming model -> is : 1
programming model fit -> the : 1
programming model fit -> we : 1
model fit the -> chapter : 1
fit the chapter -> starts : 1
the chapter starts -> with : 1
chapter starts with -> observables : 1
starts with observables -> and : 1
with observables and -> moves : 1
with observables and -> quickly : 1
observables and moves -> on : 1
and moves on -> to : 1
moves on to -> cover : 1
on to cover -> the : 1
to cover the -> subscription : 1
to cover the -> most : 1
cover the subscription -> mechanism : 1
the subscription mechanism -> and : 2
subscription mechanism and -> scheduler : 1
subscription mechanism and -> its : 1
mechanism and scheduler -> gui : 1
and scheduler gui -> programming : 1
scheduler gui programming -> using : 1
programming using deals -> with : 1
using deals with -> the : 1
deals with the -> topic : 1
with the topic -> of : 3
topic of reactive -> gui : 2
of reactive gui -> programming : 2
reactive gui programming -> using : 3
programming using you -> will : 1
using you will -> learn : 1
learn about concepts -> in : 1
about concepts in -> the : 2
concepts in the -> qt : 2
in the qt -> such : 2
in the qt -> object : 1
in the qt -> framework : 1
the qt such -> as : 2
qt such as -> the : 2
such as the -> qt : 2
such as the -> releasing : 1
such as the -> designer : 1
such as the -> caching : 1
such as the -> gcc : 1
such as the -> it : 1
as the qt -> object : 2
the qt object -> the : 2
the qt object -> signals : 1
the qt object -> qt : 1
the qt object -> base : 1
qt object the -> and : 2
qt object the -> following : 1
object the and -> signals : 2
the and signals -> and : 2
and signals and -> you : 1
and signals and -> we : 1
signals and you -> will : 1
and you will -> write : 1
you will write -> an : 1
will write an -> application : 1
will write an -> even : 1
write an application -> to : 2
an application to -> handle : 5
application to handle -> mouse : 5
application to handle -> qt : 1
to handle mouse -> events : 5
to handle mouse -> the : 1
handle mouse events -> and : 2
handle mouse events -> in : 3
mouse events and -> filter : 3
mouse events and -> the : 1
events and filter -> after : 1
events and filter -> them : 2
and filter after -> this : 1
filter after this -> you : 1
after this you -> will : 1
this you will -> also : 1
this you will -> see : 1
you will also -> learn : 1
will also learn -> topic : 1
also learn topic -> of : 1
learn topic of -> how : 1
topic of how -> we : 1
of how we -> can : 1
how we can -> create : 4
how we can -> implement : 1
how we can -> convert : 1
how we can -> adapt : 1
how we can -> use : 2
how we can -> consume : 1
how we can -> invoke : 2
how we can -> access : 1
how we can -> expose : 1
how we can -> leverage : 1
we can create -> custom : 1
we can create -> an : 3
we can create -> our : 1
we can create -> from : 1
can create custom -> reactive : 1
create custom reactive -> operators : 1
custom reactive operators -> in : 1
reactive operators in -> should : 1
operators in should -> an : 1
in should an -> existing : 1
should an existing -> set : 1
an existing set -> of : 1
existing set of -> operators : 1
of operators not -> suffice : 1
operators not suffice -> for : 1
not suffice for -> the : 1
suffice for the -> this : 1
for the this -> topic : 1
the this topic -> also : 1
this topic also -> helps : 1
topic also helps -> you : 1
also helps you -> create : 1
helps you create -> composite : 1
you create composite -> operators : 1
create composite operators -> by : 1
composite operators by -> composing : 1
operators by composing -> the : 1
by composing the -> existing : 1
by composing the -> creation : 1
composing the existing -> this : 1
the existing this -> topic : 1
existing this topic -> is : 1
this topic is -> not : 2
this topic is -> covered : 1
topic is not -> present : 1
topic is not -> in : 1
is not present -> in : 1
not present in -> the : 2
present in the -> but : 1
present in the -> output : 1
present in the -> directories : 1
present in the -> a : 1
present in the -> the : 1
in the but -> it : 1
the but it -> is : 1
but it is -> available : 1
it is available -> for : 1
is available for -> download : 1
available for download -> patterns : 1
for download patterns -> and : 1
download patterns and -> idioms : 1
for rx delves -> into : 1
rx delves into -> the : 1
delves into the -> wonderful : 1
into the wonderful -> world : 2
the wonderful world -> of : 3
wonderful world of -> design : 3
world of design -> patterns : 3
of design patterns -> and : 2
of design patterns -> to : 1
design patterns and -> starting : 2
design patterns and -> hierarchies : 1
design patterns and -> the : 1
design patterns and -> idioms : 1
patterns and starting -> with : 2
and starting with -> gof : 2
starting with gof -> design : 2
with gof design -> we : 2
with gof design -> patterns : 1
gof design we -> will : 1
gof design we -> moved : 1
design we will -> move : 1
we will move -> on : 1
we will move -> towards : 1
will move on -> to : 1
move on to -> reactive : 1
move on to -> the : 2
on to reactive -> programming : 2
to reactive programming -> microservices : 1
to reactive programming -> we : 1
to reactive programming -> helps : 1
reactive programming microservices -> using : 1
programming microservices using -> covers : 1
microservices using covers -> how : 1
using covers how -> the : 1
covers how the -> rx : 1
how the rx -> programming : 3
programming model can -> be : 4
model can be -> used : 2
model can be -> understood : 1
model can be -> considered : 1
can be used -> to : 11
can be used -> along : 2
can be used -> effectively : 1
can be used -> in : 1
can be used -> for : 1
can be used -> as : 1
be used to -> write : 3
be used to -> draw : 1
be used to -> express : 1
be used to -> indicate : 1
be used to -> compare : 1
be used to -> share : 1
be used to -> display : 1
be used to -> navigate : 1
be used to -> access : 1
be used to -> react : 1
be used to -> translate : 1
be used to -> process : 1
used to write -> reactive : 2
used to write -> a : 1
to write reactive -> microservices : 2
to write reactive -> gui : 1
to write reactive -> some : 1
write reactive microservices -> using : 2
reactive microservices using -> it : 1
reactive microservices using -> as : 1
microservices using it -> introduces : 1
using it introduces -> you : 1
it introduces you -> to : 1
introduces you to -> the : 1
you to the -> microsoft : 2
to the microsoft -> rest : 2
the microsoft rest -> sdk : 2
the microsoft rest -> we : 1
microsoft rest sdk -> and : 2
rest sdk and -> its : 2
sdk and its -> programming : 2
its programming streams -> and : 1
programming streams and -> handling : 1
and handling discusses -> error : 1
handling discusses error -> handling : 1
discusses error handling -> in : 1
error handling in -> along : 2
error handling in -> scheduled : 1
handling in along -> with : 2
in along with -> some : 2
along with some -> of : 2
with some of -> the : 2
some of the -> advanced : 2
some of the -> in : 1
some of the -> constructs : 1
some of the -> language : 1
some of the -> key : 3
some of the -> functions : 1
some of the -> operators : 1
some of the -> most : 1
some of the -> common : 1
some of the -> basic : 1
some of the -> keyboard : 1
of the advanced -> constructs : 2
the advanced constructs -> and : 2
advanced constructs and -> operators : 2
constructs and operators -> that : 1
constructs and operators -> to : 1
and operators that -> handle : 1
operators that handle -> streams : 1
that handle streams -> in : 1
handle streams in -> the : 2
streams in the -> we : 1
streams in the -> rxcpp : 1
in the we -> will : 2
in the we -> can : 1
in the we -> call : 1
in the we -> divide : 1
in the we -> came : 1
in the we -> initialize : 1
in the we -> provided : 1
the we will -> discuss : 1
the we will -> cover : 1
the we will -> use : 2
the we will -> be : 1
the we will -> map : 1
the we will -> apply : 1
the we will -> take : 1
the we will -> start : 1
the we will -> generate : 1
the we will -> explain : 1
we will discuss -> how : 2
we will discuss -> the : 3
we will discuss -> in : 1
we will discuss -> an : 1
will discuss how -> to : 2
discuss how to -> continue : 2
discuss how to -> share : 1
discuss how to -> wait : 1
discuss how to -> design : 1
how to continue -> streams : 2
to continue streams -> when : 2
continue streams when -> an : 2
streams when an -> error : 2
an error how -> to : 2
error how to -> wait : 2
how to wait -> for : 3
to wait for -> the : 4
to wait for -> events : 1
to wait for -> a : 2
wait for the -> producer : 2
wait for the -> new : 1
wait for the -> thread : 2
for the producer -> of : 2
the producer of -> the : 3
producer of the -> stream : 2
producer of the -> range : 1
the stream to -> correct : 2
the stream to -> understand : 1
the stream to -> new : 1
stream to correct -> the : 2
to correct the -> error : 2
correct the error -> and : 2
the error and -> continue : 2
the error and -> switch : 1
the error and -> emit : 1
the error and -> immediately : 1
the error and -> try : 1
error and continue -> the : 2
and continue the -> and : 2
continue the and -> how : 2
the and how -> to : 2
and how to -> perform : 2
and how to -> use : 2
and how to -> synchronize : 1
and how to -> handle : 1
and how to -> effectively : 1
and how to -> consume : 1
and how to -> write : 1
how to perform -> common : 2
to perform common -> operations : 2
perform common operations -> that : 2
common operations that -> are : 2
operations that are -> applicable : 2
that are applicable -> to : 2
are applicable to -> both : 2
applicable to both -> success : 2
to both success -> and : 2
both success and -> error : 2
both success and -> failure : 1
success and error -> get : 1
success and error -> we : 1
and error get -> the : 1
error get the -> most : 1
of this order -> to : 1
this order to -> follow : 1
order to follow -> the : 1
to follow the -> topics : 1
to follow the -> conventions : 1
follow the topics -> in : 1
the topics in -> this : 1
topics in this -> you : 1
in this you -> need : 1
in this you -> can : 1
in this you -> might : 1
this you need -> to : 1
you need to -> have : 1
you need to -> call : 1
you need to -> bother : 1
you need to -> be : 1
you need to -> work : 1
you need to -> learn : 1
need to have -> a : 2
to have a -> knowledge : 1
to have a -> nested : 1
to have a -> different : 1
to have a -> firm : 1
have a knowledge -> of : 1
a knowledge of -> the : 1
knowledge of the -> example : 1
knowledge of the -> programming : 1
knowledge of the -> venerable : 1
of the example -> code : 1
example code can -> download : 1
code can download -> the : 1
can download the -> example : 1
can download the -> code : 1
can download the -> postman : 1
download the example -> code : 1
example code files -> for : 1
code files for -> this : 1
files for this -> book : 1
this book from -> your : 1
book from your -> account : 1
from your account -> at : 1
your account at -> if : 1
account at if -> you : 1
at if you -> purchased : 1
if you purchased -> this : 1
you purchased this -> book : 1
purchased this book -> you : 1
this book you -> can : 1
book you can -> visit : 1
you can visit -> and : 1
can visit and -> register : 1
visit and register -> to : 1
and register to -> have : 1
register to have -> the : 1
to have the -> files : 1
have the files -> emailed : 1
the files emailed -> directly : 1
files emailed directly -> to : 1
emailed directly to -> can : 1
directly to can -> download : 1
to can download -> the : 1
download the code -> files : 1
the code files -> by : 1
code files by -> following : 1
files by following -> these : 1
by following these -> in : 1
following these in -> or : 1
these in or -> register : 1
in or register -> at : 1
or register at -> the : 1
register at the -> on : 1
at the on -> downloads : 1
the on downloads -> the : 1
on downloads the -> name : 1
downloads the name -> of : 1
the name of -> the : 1
the name of -> abhinav : 1
name of the -> book : 1
of the book -> in : 1
the book in -> the : 1
book in the -> box : 1
in the box -> and : 1
the box and -> follow : 1
box and follow -> the : 1
and follow the -> onscreen : 1
and follow the -> no : 1
follow the onscreen -> the : 1
the onscreen the -> file : 1
onscreen the file -> is : 1
the file is -> please : 1
file is please -> make : 1
is please make -> sure : 1
please make sure -> that : 1
make sure that -> you : 1
make sure that -> when : 1
sure that you -> unzip : 1
that you unzip -> or : 1
you unzip or -> extract : 1
unzip or extract -> the : 1
or extract the -> folder : 1
extract the folder -> using : 1
the folder using -> the : 1
folder using the -> latest : 1
using the latest -> version : 1
the latest version -> for : 1
latest version for -> for : 1
version for for -> for : 1
for for for -> code : 1
for for code -> bundle : 1
for code bundle -> for : 1
code bundle for -> the : 1
bundle for the -> book : 1
for the book -> is : 1
the book is -> also : 1
book is also -> hosted : 1
is also hosted -> on : 1
also hosted on -> github : 1
hosted on github -> case : 1
on github case -> an : 1
github case an -> update : 1
case an update -> to : 1
an update to -> the : 1
update to the -> it : 1
to the it -> will : 1
the it will -> be : 1
the it will -> print : 1
it will be -> updated : 1
it will be -> used : 1
it will be -> executing : 1
it will be -> passed : 1
will be updated -> on : 1
will be updated -> to : 1
be updated on -> the : 1
updated on the -> existing : 1
on the existing -> github : 1
the existing github -> also : 1
existing github also -> have : 1
github also have -> other : 1
also have other -> code : 1
have other code -> bundles : 1
other code bundles -> from : 1
code bundles from -> our : 1
bundles from our -> rich : 1
from our rich -> catalog : 1
our rich catalog -> of : 1
rich catalog of -> books : 1
catalog of books -> and : 1
of books and -> videos : 1
books and videos -> available : 1
and videos available -> check : 1
videos available check -> them : 1
available check them -> the : 1
check them the -> color : 1
them the color -> also : 1
the color also -> provide : 1
color also provide -> a : 1
also provide a -> pdf : 1
provide a pdf -> file : 1
a pdf file -> that : 1
pdf file that -> has : 1
file that has -> color : 1
that has color -> images : 1
has color images -> of : 1
color images of -> the : 1
images of the -> used : 1
of the used -> in : 1
the used in -> this : 1
used in this -> you : 1
this you can -> download : 1
this you can -> search : 1
you can download -> it : 1
you can download -> the : 1
can download it -> are : 1
download it are -> a : 1
it are a -> number : 1
are a number -> of : 1
a number of -> text : 1
a number of -> concepts : 1
a number of -> variants : 1
number of text -> conventions : 1
of text conventions -> used : 1
text conventions used -> throughout : 1
conventions used throughout -> this : 1
used throughout this -> words : 1
throughout this words -> in : 1
this words in -> database : 1
words in database -> table : 1
in database table -> folder : 1
database table folder -> file : 1
table folder file -> dummy : 1
folder file dummy -> user : 1
file dummy user -> and : 1
dummy user and -> twitter : 1
user and twitter -> is : 1
and twitter is -> an : 1
twitter is an -> preceding : 1
is an preceding -> code : 1
an preceding code -> snippet : 1
preceding code snippet -> initializes : 4
preceding code snippet -> includes : 1
preceding code snippet -> gets : 1
preceding code snippet -> is : 1
preceding code snippet -> should : 1
preceding code snippet -> implements : 1
code snippet initializes -> a : 2
code snippet initializes -> the : 2
snippet initializes a -> structure : 2
initializes a structure -> by : 2
a structure by -> the : 2
structure by the -> name : 2
by the name -> modern : 1
by the name -> for : 1
by the name -> of : 1
the name modern -> with : 1
name modern with -> a : 1
modern with a -> necessary : 2
with a necessary -> template : 2
a necessary template -> for : 2
necessary template for -> a : 2
template for a -> block : 1
template for a -> the : 1
for a block -> of : 1
a block of -> code : 1
block of code -> is : 1
block of code -> to : 1
of code is -> set : 1
of code is -> exactly : 1
code is set -> as : 1
is set as -> close : 1
is set as -> the : 1
set as close -> connection : 1
as close connection -> to : 1
close connection to -> server : 3
connection to server -> we : 1
connection to server -> input : 1
connection to server -> return : 1
to server we -> wish : 1
server we wish -> to : 1
we wish to -> draw : 1
wish to draw -> your : 1
to draw your -> attention : 1
draw your attention -> to : 1
your attention to -> a : 1
attention to a -> particular : 1
to a particular -> part : 1
to a particular -> instance : 1
a particular part -> of : 1
particular part of -> a : 1
part of a -> code : 1
part of a -> compositional : 1
of a code -> the : 1
a code the -> relevant : 1
code the relevant -> lines : 1
the relevant lines -> or : 1
relevant lines or -> items : 1
lines or items -> are : 1
or items are -> set : 1
items are set -> in : 1
are set in -> close : 1
are set in -> the : 1
set in close -> connection : 1
in close connection -> to : 1
to server input -> or : 1
server input or -> output : 1
input or output -> is : 1
or output is -> written : 1
output is written -> as : 1
is written as -> mkdir : 1
written as mkdir -> cd : 1
as mkdir cd -> indicates : 1
mkdir cd indicates -> a : 1
cd indicates a -> new : 1
indicates a new -> an : 1
a new an -> important : 1
new an important -> or : 1
an important or -> that : 1
important or that -> you : 1
or that you -> see : 1
that you see -> for : 1
you see for -> words : 1
see for words -> in : 1
for words in -> menus : 1
words in menus -> or : 1
in menus or -> dialog : 1
menus or dialog -> boxes : 1
or dialog boxes -> appear : 1
dialog boxes appear -> in : 1
boxes appear in -> the : 1
appear in the -> text : 1
in the text -> like : 1
the text like -> here : 1
text like here -> is : 1
like here is -> an : 1
here is an -> windowing : 1
here is an -> operational : 1
is an windowing -> it : 1
an windowing it -> is : 1
windowing it is -> called : 2
it is called -> or : 1
it is called -> a : 2
is called or -> important : 1
called or important -> notes : 1
or important notes -> appear : 1
important notes appear -> like : 1
notes appear like -> and : 1
appear like and -> tricks : 1
like and tricks -> appear : 1
and tricks appear -> like : 1
tricks appear like -> in : 1
appear like in -> from : 1
like in from -> our : 1
in from our -> readers : 1
from our readers -> is : 1
our readers is -> always : 1
readers is always -> email : 1
is always email -> and : 1
always email and -> mention : 1
email and mention -> the : 1
and mention the -> book : 1
mention the book -> title : 1
the book title -> in : 1
book title in -> the : 1
title in the -> subject : 1
in the subject -> of : 1
the subject of -> your : 1
the subject of -> philosophy : 1
subject of your -> if : 1
of your if -> you : 1
your if you -> have : 1
if you have -> questions : 1
if you have -> found : 1
if you have -> a : 1
you have questions -> about : 1
have questions about -> any : 1
questions about any -> aspect : 1
about any aspect -> of : 1
any aspect of -> this : 1
aspect of this -> please : 1
of this please -> email : 1
this please email -> us : 1
please email us -> at : 1
email us at -> although : 1
us at although -> we : 1
at although we -> have : 1
although we have -> taken : 1
we have taken -> every : 1
have taken every -> care : 1
taken every care -> to : 1
every care to -> ensure : 1
care to ensure -> the : 1
accuracy of our -> mistakes : 1
of our mistakes -> do : 1
our mistakes do -> if : 1
mistakes do if -> you : 1
do if you -> have : 1
you have found -> a : 1
have found a -> mistake : 1
found a mistake -> in : 1
a mistake in -> this : 1
mistake in this -> we : 1
in this we -> would : 1
in this we -> are : 3
in this we -> will : 10
in this we -> need : 1
in this we -> learned : 1
in this we -> have : 1
this we would -> be : 1
we would be -> grateful : 2
we would be -> able : 1
would be grateful -> if : 2
be grateful if -> you : 2
grateful if you -> would : 2
if you would -> report : 1
if you would -> provide : 1
you would report -> this : 1
would report this -> to : 1
report this to -> please : 1
this to please -> visit : 1
to please visit -> selecting : 1
please visit selecting -> your : 1
visit selecting your -> clicking : 1
selecting your clicking -> on : 1
your clicking on -> the : 1
clicking on the -> errata : 1
on the errata -> submission : 1
the errata submission -> form : 1
errata submission form -> and : 1
submission form and -> entering : 1
form and entering -> the : 1
and entering the -> if : 1
entering the if -> you : 1
the if you -> come : 1
if you come -> across : 1
you come across -> any : 1
come across any -> illegal : 1
across any illegal -> copies : 1
any illegal copies -> of : 1
illegal copies of -> our : 1
copies of our -> works : 1
of our works -> in : 1
our works in -> any : 1
works in any -> form : 1
any form on -> the : 1
form on the -> we : 1
on the we -> would : 1
on the we -> have : 2
on the we -> are : 1
on the we -> can : 1
the we would -> be : 2
you would provide -> us : 1
would provide us -> with : 1
provide us with -> the : 1
us with the -> location : 1
us with the -> conceptual : 1
with the location -> address : 1
the location address -> or : 1
location address or -> website : 1
address or website -> please : 1
or website please -> contact : 1
website please contact -> us : 1
please contact us -> at : 1
contact us at -> with : 1
us at with -> a : 1
at with a -> link : 1
with a link -> to : 1
a link to -> the : 1
link to the -> you : 1
to the you -> are : 1
the you are -> interested : 1
the you are -> expected : 1
you are interested -> in : 2
are interested in -> becoming : 1
are interested in -> either : 1
are interested in -> exposuremask : 1
are interested in -> as : 1
are interested in -> doing : 1
becoming an if -> there : 1
an if there -> is : 1
if there is -> a : 4
if there is -> no : 2
if there is -> plenty : 1
if there is -> data : 1
if there is -> an : 1
there is a -> topic : 1
there is a -> sequence : 1
there is a -> mechanism : 2
there is a -> probable : 1
there is a -> real : 1
there is a -> write : 1
there is a -> simple : 1
there is a -> global : 1
there is a -> single : 1
there is a -> between : 1
there is a -> change : 2
there is a -> notion : 1
there is a -> composite : 1
there is a -> value : 1
there is a -> set : 1
there is a -> provision : 1
there is a -> marked : 1
there is a -> delay : 1
there is a -> subscription : 1
there is a -> subscriber : 1
there is a -> need : 1
there is a -> function : 1
there is a -> a : 1
there is a -> chance : 1
is a topic -> that : 1
a topic that -> you : 1
topic that you -> have : 1
that you have -> expertise : 1
you have expertise -> in : 1
have expertise in -> and : 1
expertise in and -> you : 1
in and you -> are : 1
and you are -> interested : 1
interested in either -> writing : 1
in either writing -> or : 1
either writing or -> contributing : 1
writing or contributing -> to : 1
or contributing to -> a : 1
contributing to a -> please : 1
to a please -> visit : 1
a please visit -> leave : 1
please visit leave -> a : 1
visit leave a -> once : 1
leave a once -> you : 1
a once you -> have : 1
once you have -> read : 1
once you have -> understood : 1
you have read -> and : 1
have read and -> used : 1
read and used -> this : 1
and used this -> why : 1
used this why -> not : 1
this why not -> leave : 1
why not leave -> a : 1
not leave a -> review : 1
leave a review -> on : 1
a review on -> the : 2
review on the -> site : 2
on the site -> that : 2
the site that -> you : 2
site that you -> purchased : 1
site that you -> bought : 1
that you purchased -> it : 1
you purchased it -> potential : 1
purchased it potential -> readers : 1
it potential readers -> can : 1
potential readers can -> then : 1
potential readers can -> see : 1
readers can then -> see : 1
can then see -> and : 1
then see and -> use : 1
see and use -> your : 2
and use your -> unbiased : 2
use your unbiased -> opinion : 2
your unbiased opinion -> to : 2
unbiased opinion to -> make : 2
opinion to make -> purchase : 1
opinion to make -> purchasing : 1
to make purchase -> we : 1
make purchase we -> at : 1
purchase we at -> packt : 1
we at packt -> can : 1
at packt can -> understand : 1
packt can understand -> what : 1
can understand what -> you : 1
can understand what -> our : 1
understand what you -> think : 1
what you think -> about : 1
you think about -> our : 1
think about our -> and : 2
about our and -> our : 2
our and our -> authors : 2
and our authors -> can : 2
our authors can -> see : 2
authors can see -> your : 2
can see your -> feedback : 2
see your feedback -> on : 2
your feedback on -> their : 1
your feedback on -> the : 1
feedback on their -> thank : 1
on their thank -> more : 1
their thank more -> information : 1
thank more information -> about : 1
more information about -> please : 1
information about please -> programming : 1
about please programming -> model : 1
please programming model -> overview : 1
overview and x -> windows : 1
and x windows -> microsoft : 1
x windows microsoft -> and : 1
windows microsoft and -> ibm : 1
microsoft and ibm -> presentation : 1
and ibm presentation -> manager : 1
ibm presentation manager -> made : 1
presentation manager made -> gui : 1
manager made gui -> programming : 1
made gui programming -> popular : 1
gui programming popular -> on : 1
programming popular on -> the : 1
popular on the -> pc : 1
on the pc -> this : 1
the pc this -> was : 1
pc this was -> a : 1
this was a -> major : 1
was a major -> shift : 1
a major shift -> from : 1
major shift from -> the : 1
shift from the -> character : 1
from the character -> mode : 1
the character mode -> user : 1
character mode user -> interface : 1
mode user interface -> and : 1
user interface and -> batch : 1
interface and batch -> process : 1
and batch process -> style : 1
batch process style -> programming : 1
process style programming -> models : 1
style programming models -> that : 1
programming models that -> existed : 1
models that existed -> before : 1
that existed before -> responding : 1
existed before responding -> to : 1
before responding to -> events : 1
responding to events -> became : 1
responding to events -> in : 1
to events became -> a : 1
events became a -> major : 1
became a major -> concern : 1
a major concern -> for : 1
major concern for -> software : 1
concern for software -> developers : 1
for software developers -> worldwide : 1
software developers worldwide -> and : 1
developers worldwide and -> platform : 1
worldwide and platform -> vendors : 1
and platform vendors -> resorted : 1
platform vendors resorted -> to : 1
vendors resorted to -> the : 1
resorted to the -> creation : 1
to the creation -> of : 1
to the creation -> and : 1
the creation of -> apis : 1
the creation of -> a : 1
the creation of -> the : 1
creation of apis -> that : 1
of apis that -> relied : 1
apis that relied -> on : 1
that relied on -> function : 1
relied on function -> pointers : 1
on function pointers -> and : 1
function pointers and -> callbacks : 1
pointers and callbacks -> to : 1
and callbacks to -> enable : 1
callbacks to enable -> programmers : 1
to enable programmers -> to : 2
enable programmers to -> handle : 1
enable programmers to -> work : 1
programmers to handle -> the : 1
to handle the -> the : 1
to handle the -> signals : 1
to handle the -> qt : 1
to handle the -> emitted : 1
to handle the -> signaling : 1
to handle the -> mouse : 1
to handle the -> in : 1
to handle the -> use : 1
handle the the -> programming : 1
the the programming -> models : 1
the the programming -> model : 1
the programming models -> were : 1
the programming models -> of : 1
programming models were -> mostly : 1
models were mostly -> based : 1
were mostly based -> on : 1
mostly based on -> the : 2
based on the -> multithreaded : 1
based on the -> key : 1
based on the -> class : 1
based on the -> mfc : 1
based on the -> notion : 2
based on the -> number : 2
based on the -> system : 1
based on the -> return : 1
based on the -> experience : 1
based on the -> technical : 1
based on the -> of : 1
based on the -> modern : 1
based on the -> parameters : 1
based on the -> results : 2
based on the -> hints : 1
based on the -> type : 1
based on the -> we : 2
based on the -> naming : 1
based on the -> string : 1
based on the -> roles : 1
based on the -> and : 1
based on the -> is : 1
based on the -> latest : 1
on the multithreaded -> and : 1
the multithreaded and -> with : 1
multithreaded and with -> the : 1
and with the -> advent : 1
and with the -> help : 1
with the advent -> of : 3
the advent of -> better : 1
the advent of -> writing : 1
the advent of -> functional : 1
the advent of -> developers : 1
advent of better -> most : 1
of better most -> platforms : 1
better most platforms -> began : 1
most platforms began -> to : 1
platforms began to -> support : 1
began to support -> handling : 1
to support handling -> events : 1
support handling events -> other : 1
handling events other -> asynchronous : 1
events other asynchronous -> became : 1
other asynchronous became -> more : 1
asynchronous became more -> complex : 1
became more complex -> and : 1
more complex and -> responding : 1
complex and responding -> to : 1
and responding to -> events : 1
to events in -> the : 1
events in the -> traditional : 1
in the traditional -> way : 1
the traditional way -> became : 1
traditional way became -> less : 1
way became less -> even : 1
became less even -> though : 1
less even though -> excellent : 1
even though excellent -> gui : 1
though excellent gui -> toolkits : 1
excellent gui toolkits -> made : 1
gui toolkits made -> their : 1
toolkits made their -> event : 1
made their event -> handling : 1
their event handling -> was : 1
event handling was -> done : 1
handling was done -> mostly : 1
was done mostly -> using : 1
done mostly using -> message : 1
mostly using message -> function : 1
using message function -> pointer : 1
message function pointer -> based : 1
function pointer based -> and : 1
pointer based and -> other : 1
based and other -> a : 1
and other a -> prominent : 1
other a prominent -> compiler : 1
a prominent compiler -> vendor : 1
prominent compiler vendor -> even : 1
compiler vendor even -> tried : 1
vendor even tried -> adding : 1
even tried adding -> language : 1
tried adding language -> extensions : 1
adding language extensions -> to : 1
language extensions to -> the : 1
extensions to the -> language : 1
to the language -> to : 1
to the language -> and : 1
to the language -> which : 1
to the language -> is : 1
to the language -> beginning : 1
the language to -> enable : 1
the language to -> wrap : 1
language to enable -> better : 1
to enable better -> windows : 1
enable better windows -> handling : 1
better windows handling -> require : 1
windows handling require -> a : 1
handling require a -> fresh : 1
require a fresh -> look : 1
a fresh look -> at : 2
fresh look at -> the : 2
at the the -> modern : 1
at the the -> operator : 1
the the modern -> standard : 1
the modern standard -> has : 1
modern standard has -> support : 1
standard has support -> for : 1
has support for -> functional : 1
has support for -> four : 1
support for functional -> concurrency : 1
for functional concurrency -> a : 1
functional concurrency a -> memory : 1
concurrency a memory -> and : 1
a memory and -> better : 1
memory and better -> memory : 1
and better memory -> management : 1
better memory management -> techniques : 1
better memory management -> through : 1
memory management techniques -> to : 1
management techniques to -> enable : 1
techniques to enable -> programmers : 1
programmers to work -> with : 1
to work with -> asynchronous : 1
to work with -> reactive : 1
to work with -> a : 1
to work with -> the : 1
to work with -> an : 1
work with asynchronous -> data : 1
with asynchronous data -> streams : 2
with asynchronous data -> by : 2
asynchronous data streams -> treating : 1
asynchronous data streams -> using : 1
asynchronous data streams -> and : 1
data streams treating -> events : 1
streams treating events -> as : 1
treating events as -> this : 1
treating events as -> streams : 1
events as this -> is : 1
as this is -> achieved : 1
this is achieved -> using : 1
this is achieved -> by : 1
is achieved using -> a : 1
achieved using a -> programming : 1
using a programming -> model : 1
a programming model -> called : 1
a programming model -> where : 1
a programming model -> the : 1
programming model called -> reactive : 1
model called reactive -> to : 1
called reactive to -> put : 1
reactive to put -> things : 1
to put things -> in : 2
to put things -> into : 1
put things in -> this : 1
put things in -> proper : 1
things in this -> chapter : 1
in this chapter -> will : 1
in this chapter -> we : 1
in this chapter -> is : 1
in this chapter -> are : 2
in this chapter -> can : 1
this chapter will -> outline : 1
this chapter will -> be : 1
chapter will outline -> the : 1
will outline the -> following : 1
outline the following -> programming : 1
the following programming -> model : 1
following programming model -> and : 1
model and how -> it : 1
model and how -> we : 1
model and how -> events : 1
and how it -> has : 1
how it has -> been : 1
it has been -> implemented : 1
it has been -> removed : 1
has been implemented -> in : 1
been implemented in -> various : 1
implemented in various -> is : 1
in various is -> reactive : 1
various is reactive -> models : 1
is reactive models -> of : 1
reactive models of -> reactive : 1
models of reactive -> simple : 1
of reactive simple -> programs : 1
reactive simple programs -> to : 1
simple programs to -> make : 1
programs to make -> conceptual : 1
to make conceptual -> understanding : 1
make conceptual understanding -> philosophy : 1
conceptual understanding philosophy -> of : 1
understanding philosophy of -> our : 1
of our programming -> programming : 1
our programming programming -> is : 1
programming programming is -> a : 1
programming is a -> programming : 1
programming is a -> technique : 1
programming is a -> good : 1
programming is a -> need : 1
is a programming -> model : 1
programming model where -> flow : 1
model where flow -> control : 1
where flow control -> is : 1
flow control is -> determined : 1
control is determined -> by : 1
is determined by -> examples : 1
is determined by -> the : 1
determined by examples -> of : 1
by examples of -> events : 1
examples of events -> are : 1
of events are -> mouse : 1
events are mouse -> key : 1
are mouse key -> sensor : 1
mouse key sensor -> messages : 1
key sensor messages -> from : 1
sensor messages from -> other : 1
messages from other -> and : 1
from other and -> so : 1
other and so -> an : 1
and so an -> application : 1
so an application -> has : 1
an application has -> the : 1
application has the -> mechanism : 1
has the mechanism -> to : 1
the mechanism to -> detect : 1
mechanism to detect -> events : 1
to detect events -> on : 1
detect events on -> a : 1
events on a -> near : 1
on a near -> and : 1
a near and -> respond : 1
near and respond -> or : 1
and respond or -> react : 1
respond or react -> to : 1
or react to -> them : 1
react to them -> by : 1
to them by -> invoking : 1
them by invoking -> the : 1
by invoking the -> appropriate : 1
by invoking the -> api : 1
by invoking the -> function : 1
by invoking the -> the : 1
invoking the appropriate -> event : 1
the appropriate event -> handling : 1
appropriate event handling -> since : 1
event handling since -> the : 1
handling since the -> bulk : 1
since the bulk -> of : 1
the bulk of -> the : 2
bulk of the -> earlier : 1
bulk of the -> code : 1
of the earlier -> event : 1
the earlier event -> processing : 1
earlier event processing -> programs : 1
event processing programs -> were : 1
processing programs were -> written : 1
programs were written -> using : 1
programs were written -> to : 1
were written using -> they : 1
written using they -> resorted : 1
using they resorted -> to : 1
they resorted to -> techniques : 1
resorted to techniques -> such : 1
to techniques such -> as : 1
techniques such as -> callbacks : 1
techniques such as -> event : 1
techniques such as -> immutable : 1
techniques such as -> variadic : 1
techniques such as -> the : 1
such as callbacks -> function : 1
as callbacks function -> to : 1
callbacks function to -> write : 1
function to write -> those : 1
to write those -> event : 1
write those event -> later : 1
those event later -> systems : 1
event later systems -> such : 1
later systems such -> as : 1
systems such as -> visual : 1
such as visual -> and : 1
as visual and -> other : 1
visual and other -> rapid : 1
and other rapid -> application : 1
other rapid application -> development : 1
rapid application development -> tools : 1
rapid application development -> for : 1
application development tools -> did : 1
development tools did -> add : 1
tools did add -> native : 1
did add native -> support : 1
add native support -> for : 1
native support for -> to : 1
support for to -> make : 1
for to make -> matters : 1
to make matters -> more : 1
to make matters -> write : 1
make matters more -> we : 1
matters more we -> will : 1
more we will -> take : 1
we will take -> a : 7
will take a -> tour : 1
will take a -> look : 6
will take a -> step : 1
take a tour -> of : 1
a tour of -> the : 2
tour of the -> event : 2
tour of the -> modern : 2
tour of the -> key : 1
of the event -> handling : 1
of the event -> processing : 1
of the event -> sink : 1
of the event -> streams : 1
the event handling -> mechanism : 1
the event handling -> is : 1
event handling mechanism -> of : 1
handling mechanism of -> the : 1
mechanism of the -> various : 1
of the various -> this : 1
the various this -> will : 1
various this will -> help : 1
this will help -> readers : 1
this will help -> us : 1
will help readers -> appreciate : 1
help readers appreciate -> the : 1
readers appreciate the -> issues : 1
appreciate the issues -> that : 1
the issues that -> reactive : 1
issues that reactive -> programming : 1
that reactive programming -> models : 1
that reactive programming -> covers : 1
that reactive programming -> is : 1
reactive programming models -> are : 1
programming models are -> solving : 1
programming models are -> available : 1
programming models are -> for : 1
models are solving -> a : 1
are solving a -> gui : 1
solving a gui -> programming : 1
a gui programming -> programming : 1
a gui programming -> which : 1
gui programming programming -> treats : 1
programming programming treats -> data : 1
programming treats data -> as : 1
treats data as -> streams : 1
data as streams -> and : 1
as streams and -> events : 1
streams and events -> in : 1
and events in -> windowing : 1
events in windowing -> systems : 1
in windowing systems -> can : 1
windowing systems can -> be : 1
systems can be -> treated : 1
can be treated -> as : 2
be treated as -> streams : 1
be treated as -> learning : 1
be treated as -> a : 1
treated as streams -> to : 1
as streams to -> be : 1
streams to be -> processed : 1
to be processed -> in : 1
to be processed -> by : 1
to be processed -> on : 1
be processed in -> a : 1
processed in a -> uniform : 1
in a uniform -> the : 1
a uniform the -> reactive : 1
uniform the reactive -> programming : 1
reactive programming model -> provides : 1
reactive programming model -> and : 2
reactive programming model -> using : 1
reactive programming model -> warrants : 1
reactive programming model -> can : 1
reactive programming model -> with : 2
reactive programming model -> unifies : 1
reactive programming model -> into : 1
reactive programming model -> treats : 1
reactive programming model -> in : 2
reactive programming model -> is : 4
reactive programming model -> to : 1
reactive programming model -> helps : 1
programming model provides -> support : 1
model provides support -> for : 1
provides support for -> gathering : 1
support for gathering -> events : 1
for gathering events -> from : 1
gathering events from -> different : 1
events from different -> sources : 1
from different sources -> as : 1
from different sources -> by : 1
different sources as -> filtering : 1
sources as filtering -> the : 1
as filtering the -> transformation : 1
filtering the transformation -> of : 1
the transformation of -> performing : 1
transformation of performing -> actions : 1
of performing actions -> on : 1
performing actions on -> and : 1
performing actions on -> preceding : 1
actions on and -> so : 1
on and so -> the : 1
and so the -> programming : 1
and so the -> modern : 1
and so the -> standard : 1
and so the -> topics : 1
and so the -> gang : 1
and so the -> right : 1
so the programming -> model : 1
the programming model -> handles : 1
the programming model -> of : 4
the programming model -> has : 1
the programming model -> things : 1
the programming model -> is : 1
programming model handles -> scheduling : 1
model handles scheduling -> details : 1
handles scheduling details -> as : 1
scheduling details as -> part : 1
details as part -> of : 1
part of the -> this : 1
part of the -> haskell : 1
part of the -> code : 1
part of the -> standard : 3
part of the -> language : 2
part of the -> ordering : 1
part of the -> the : 1
part of the -> expression : 1
part of the -> since : 1
part of the -> marble : 1
part of the -> any : 1
part of the -> sdk : 2
part of the -> initiative : 1
part of the -> rest : 1
part of the -> after : 1
part of the -> we : 2
of the this -> chapter : 1
of the this -> can : 1
of the this -> preserves : 1
the this chapter -> is : 1
this chapter is -> mostly : 1
this chapter is -> written : 1
this chapter is -> to : 4
chapter is mostly -> based : 1
is mostly based -> on : 1
on the key -> data : 1
the key data -> structures : 1
of the reactive -> programming : 6
of the reactive -> system : 1
of the reactive -> through : 1
of the reactive -> the : 1
and how we -> can : 1
we can implement -> basic : 1
we can implement -> sophisticated : 1
we can implement -> what : 1
can implement basic -> reactive : 1
implement basic reactive -> in : 1
basic reactive in -> an : 1
reactive in an -> reactive : 1
in an reactive -> the : 1
an reactive the -> code : 1
reactive the code -> written : 1
the code written -> will : 1
code written will -> be : 1
written will be -> asynchronous : 1
will be asynchronous -> and : 1
be asynchronous and -> the : 1
asynchronous and the -> examples : 1
and the examples -> from : 1
the examples from -> this : 1
examples from this -> chapter : 1
from this chapter -> are : 1
this chapter are -> we : 1
this chapter are -> the : 1
this chapter are -> entirely : 1
chapter are we -> give : 1
are we give -> the : 1
we give the -> necessary : 1
we give the -> parameters : 1
give the necessary -> background : 2
the necessary background -> information : 1
the necessary background -> to : 1
necessary background information -> and : 1
background information and -> language : 1
information and language -> constructs : 1
and language constructs -> in : 1
language constructs in -> the : 1
constructs in the -> following : 1
in the following -> chapters : 1
in the following -> understand : 1
in the following -> we : 6
in the following -> sections : 1
in the following -> chapter : 1
in the following -> code : 3
in the following -> wikipedia : 1
in the following -> long : 1
in the following -> contains : 1
in the following -> the : 3
in the following -> int : 1
in the following -> pipes : 1
in the following -> and : 1
the following chapters -> before : 1
the following chapters -> will : 1
following chapters before -> out : 1
chapters before out -> of : 1
before out of -> order : 1
out of order -> execution : 1
of order execution -> and : 1
order execution and -> schedules : 1
execution and schedules -> are : 1
and schedules are -> these : 1
schedules are these -> implementations : 1
are these implementations -> are : 1
these implementations are -> here : 1
implementations are here -> for : 1
are here for -> elucidation : 1
here for elucidation -> and : 1
for elucidation and -> can : 1
elucidation and can -> be : 1
and can be -> treated : 1
and can be -> called : 1
treated as learning -> programming : 1
as learning programming -> on : 1
learning programming on -> x : 1
on x x -> windows : 1
x x windows -> programming : 1
x windows programming -> model : 1
windows programming model -> is : 1
programming model is -> a : 1
programming model is -> to : 1
programming model is -> an : 1
programming model is -> also : 1
programming model is -> asynchronous : 1
programming model is -> very : 1
programming model is -> natural : 1
programming model is -> suitable : 1
model is a -> is : 1
is a is -> mostly : 1
a is mostly -> supported : 1
is mostly supported -> on : 1
mostly supported on -> posix : 1
supported on posix -> and : 1
on posix and -> has : 1
posix and has -> even : 1
and has even -> been : 1
has even been -> ported : 1
even been ported -> to : 1
ported to microsoft -> in : 1
to microsoft in -> x : 1
microsoft in x -> is : 1
in x is -> a : 1
x is a -> network : 1
is a network -> windowing : 1
a network windowing -> which : 1
network windowing which -> required : 1
windowing which required -> a : 1
which required a -> window : 1
required a window -> manager : 1
a window manager -> to : 1
a window manager -> that : 1
window manager to -> manage : 1
manager to manage -> the : 1
to manage the -> windows : 1
to manage the -> lifetime : 1
to manage the -> traffic : 1
manage the windows -> the : 1
the windows the -> screen : 1
windows the screen -> contents : 1
the screen contents -> are : 1
screen contents are -> managed : 1
contents are managed -> by : 1
are managed by -> the : 1
managed by the -> x : 1
managed by the -> rxcpp : 1
by the x -> server : 1
the x server -> and : 1
x server and -> the : 1
server and the -> client : 1
and the client -> library : 1
the client library -> will : 1
client library will -> pull : 1
library will pull -> the : 1
will pull the -> contents : 1
pull the contents -> and : 1
the contents and -> display : 1
contents and display -> them : 1
and display them -> on : 1
display them on -> the : 1
them on the -> local : 1
on the local -> in : 1
the local in -> desktop : 1
local in desktop -> the : 1
in desktop the -> server : 1
desktop the server -> runs : 1
the server runs -> locally : 1
server runs locally -> on : 1
runs locally on -> the : 1
locally on the -> same : 1
on the same -> the : 1
on the same -> is : 1
on the same -> but : 1
on the same -> atomic : 5
the same the -> following : 1
the same the -> year : 1
the same the -> invariant : 1
the same the -> usage : 1
the same the -> library : 1
the same the -> difference : 1
the same the -> subscribers : 1
same the following -> program : 1
the following program -> will : 5
the following program -> helps : 1
the following program -> demonstrates : 4
the following program -> with : 1
the following program -> is : 2
the following program -> streams : 1
the following program -> produces : 1
the following program -> uses : 1
following program will -> help : 3
following program will -> clearly : 1
following program will -> demonstrate : 2
following program will -> explain : 1
program will help -> the : 1
program will help -> us : 2
will help the -> reader : 2
will help the -> application : 1
help the reader -> understand : 1
help the reader -> to : 1
the reader understand -> the : 1
the reader understand -> that : 1
reader understand the -> gist : 1
understand the gist -> of : 2
the gist of -> the : 1
the gist of -> what : 1
gist of the -> xlib : 1
of the xlib -> programming : 1
the xlib programming -> model : 1
xlib programming model -> and : 1
and how events -> are : 2
how events are -> handled : 3
events are handled -> in : 3
are handled in -> the : 1
are handled in -> those : 1
are handled in -> as : 1
handled in the -> display : 1
in the display -> window : 1
the display window -> xevent : 1
display window xevent -> char : 1
window xevent char -> int : 1
xevent char int -> preceding : 1
char int preceding -> code : 1
int preceding code -> snippet : 1
code snippet includes -> the : 1
snippet includes the -> proper : 1
includes the proper -> header : 1
the proper header -> files : 1
proper header files -> that : 1
header files that -> a : 1
files that a -> programmer : 1
that a programmer -> is : 1
that a programmer -> should : 2
that a programmer -> has : 2
that a programmer -> who : 1
a programmer is -> supposed : 1
programmer is supposed -> to : 1
is supposed to -> include : 1
is supposed to -> take : 1
is supposed to -> be : 2
supposed to include -> to : 1
to include to -> get : 1
include to get -> the : 1
to get the -> function : 1
to get the -> event : 1
to get the -> definitions : 1
to get the -> connections : 1
get the function -> prototypes : 1
the function prototypes -> provided : 1
function prototypes provided -> by : 1
prototypes provided by -> the : 1
by the xlib -> c : 1
the xlib c -> there : 1
xlib c there -> are : 1
c there are -> some : 1
there are some -> data : 1
there are some -> limitations : 1
there are some -> key : 1
there are some -> more : 1
are some data -> structures : 1
some data structures -> that : 1
data structures that -> a : 1
structures that a -> programmer : 1
a programmer should -> be : 2
programmer should be -> aware : 1
programmer should be -> comfortable : 1
should be aware -> of : 1
be aware of -> while : 1
be aware of -> the : 1
aware of while -> writing : 1
of while writing -> xlib : 1
while writing xlib -> programs : 1
writing xlib programs -> from : 1
xlib programs from -> people : 1
programs from people -> use : 1
from people use -> libraries : 1
people use libraries -> such : 1
use libraries such -> as : 1
libraries such as -> fox : 1
libraries such as -> and : 2
libraries such as -> of : 1
such as fox -> and : 1
as fox and -> so : 1
fox and so -> on : 1
and so on -> to : 1
and so on -> are : 3
and so on -> is : 2
so on to -> write : 1
on to write -> x : 1
on to write -> this : 1
to write x -> open : 1
write x open -> connection : 1
x open connection -> with : 1
open connection with -> the : 1
connection with the -> server : 1
with the server -> display : 1
the server display -> if : 1
server display if -> open : 1
display if open -> s : 1
if open s -> create : 1
open s create -> window : 1
s create window -> window : 1
create window window -> select : 1
window window select -> kind : 1
window select kind -> of : 1
select kind of -> events : 1
kind of events -> we : 1
of events we -> are : 1
events we are -> interested : 1
we are interested -> in : 2
we are interested -> following : 1
interested in exposuremask -> map : 1
in exposuremask map -> the : 1
exposuremask map the -> window : 1
map the window -> preceding : 1
the window preceding -> code : 1
window preceding code -> snippet : 1
snippet initializes the -> server : 1
snippet initializes the -> qt : 1
initializes the server -> and : 1
the server and -> creates : 1
the server and -> return : 1
the server and -> invoke : 1
server and creates -> a : 1
and creates a -> window : 1
and creates a -> composite : 1
creates a window -> to : 1
a window to -> certain : 1
window to certain -> most : 1
to certain most -> x : 1
certain most x -> windows : 1
most x windows -> programs : 1
x windows programs -> run : 1
windows programs run -> under : 1
programs run under -> a : 1
run under a -> window : 1
under a window -> manager : 1
window manager that -> manages : 1
manager that manages -> the : 1
that manages the -> cascading : 1
manages the cascading -> selected : 1
the cascading selected -> the : 1
cascading selected the -> messages : 1
selected the messages -> that : 1
the messages that -> are : 1
messages that are -> of : 1
are of interest -> to : 1
of interest to -> us : 1
interest to us -> by : 1
to us by -> invoking : 1
us by invoking -> the : 1
invoking the api -> call : 1
the api call -> before : 1
api call before -> displaying : 1
call before displaying -> the : 1
before displaying the -> event : 1
displaying the event -> loop : 1
the event loop -> for : 1
the event loop -> generally : 1
event loop for -> draw : 1
loop for draw -> or : 1
for draw or -> redraw : 1
draw or redraw -> the : 1
or redraw the -> window : 1
redraw the window -> if : 1
the window if -> exit : 1
window if exit -> on : 1
if exit on -> key : 1
exit on key -> press : 1
on key press -> if : 1
key press if -> the : 1
press if the -> program : 1
if the program -> goes : 1
the program goes -> to : 1
program goes to -> an : 1
goes to an -> infinite : 1
to an infinite -> loop : 1
an infinite loop -> while : 1
an infinite loop -> where : 1
an infinite loop -> or : 1
infinite loop while -> polling : 1
loop while polling -> for : 1
while polling for -> any : 1
polling for any -> and : 1
for any and -> the : 1
any and the -> appropriate : 1
and the appropriate -> xlib : 1
the appropriate xlib -> api : 1
appropriate xlib api -> will : 1
xlib api will -> be : 1
api will be -> used : 1
will be used -> to : 3
will be used -> for : 1
will be used -> as : 2
will be used -> because : 1
used to draw -> a : 1
to draw a -> string : 1
draw a string -> on : 1
a string on -> the : 1
string on the -> in : 1
on the in -> windowing : 1
on the in -> this : 1
the in windowing -> it : 1
in windowing it -> is : 1
is called a -> the : 2
is called a -> variadic : 1
is called a -> there : 1
is called a -> hot : 1
is called a -> cold : 1
called a the -> retrieval : 1
called a the -> preferred : 1
a the retrieval -> of : 1
the retrieval of -> events : 1
retrieval of events -> will : 1
of events will -> be : 1
events will be -> done : 1
will be done -> by : 1
will be done -> to : 1
be done by -> the : 1
done by the -> api : 1
done by the -> the : 1
by the api -> close : 1
the api close -> connection : 1
api close connection -> to : 1
to server return -> we : 1
server return we -> are : 1
return we are -> out : 1
we are out -> of : 1
are out of -> the : 1
out of the -> infinite : 2
out of the -> odd : 1
out of the -> is : 1
out of the -> template : 1
of the infinite -> message : 1
of the infinite -> the : 1
of the infinite -> wait : 1
the infinite message -> the : 1
infinite message the -> connection : 1
message the connection -> to : 1
the connection to -> the : 1
connection to the -> server : 1
to the server -> will : 1
to the server -> we : 1
to the server -> an : 1
the server will -> be : 1
server will be -> programming : 1
will be programming -> on : 1
be programming on -> microsoft : 1
on microsoft corporation -> created : 1
microsoft corporation created -> a : 1
corporation created a -> gui : 1
created a gui -> programming : 1
gui programming which -> can : 1
programming which can -> be : 1
which can be -> considered : 1
which can be -> processed : 1
which can be -> retrieved : 1
can be considered -> as : 5
can be considered -> the : 2
can be considered -> a : 3
be considered as -> the : 2
be considered as -> implementing : 1
be considered as -> an : 1
be considered as -> sort : 1
be considered as -> some : 1
be considered as -> a : 1
considered as the -> most : 1
considered as the -> confluence : 1
as the most -> successful : 1
as the most -> popular : 1
the most successful -> windowing : 1
most successful windowing -> system : 1
successful windowing system -> in : 1
windowing system in -> the : 1
system in the -> the : 1
system in the -> world : 1
in the the -> third : 1
in the the -> previous : 1
in the the -> implementation : 1
in the the -> function : 2
in the the -> and : 1
in the the -> candidate : 1
in the the -> routine : 1
in the the -> method : 1
in the the -> red : 1
in the the -> original : 1
in the the -> class : 1
in the the -> response : 2
in the the -> value : 1
in the the -> keys : 1
the the third -> edition : 1
the third edition -> of : 1
third edition of -> the : 1
edition of the -> windows : 1
of the windows -> software : 1
the windows software -> was : 1
windows software was -> a : 1
software was a -> runaway : 1
was a runaway -> success : 1
a runaway success -> and : 1
runaway success and -> microsoft : 1
success and microsoft -> followed : 1
and microsoft followed -> this : 1
microsoft followed this -> with : 1
followed this with -> the : 1
this with the -> windows : 1
with the windows -> nt : 1
the windows nt -> and : 1
windows nt and -> windows : 1
nt and windows -> let : 1
and windows let -> us : 1
windows let us -> look : 1
let us look -> at : 1
us look at -> the : 2
us look at -> some : 1
at the programming -> model : 1
programming model of -> microsoft : 1
programming model of -> the : 3
model of microsoft -> windows : 1
of microsoft windows -> microsoft : 1
microsoft windows microsoft -> documentation : 1
windows microsoft documentation -> for : 1
microsoft documentation for -> a : 1
documentation for a -> detailed : 1
for a detailed -> look : 1
a detailed look -> at : 1
detailed look at -> how : 1
look at how -> this : 2
look at how -> processes : 1
look at how -> to : 1
at how this -> programming : 1
at how this -> can : 1
how this programming -> model : 1
this programming model -> the : 1
programming model the -> following : 1
programming model the -> api : 1
programming model the -> toy : 1
model the following -> program : 1
will help us -> understand : 4
will help us -> write : 1
will help us -> to : 3
help us understand -> the : 2
help us understand -> how : 2
us understand the -> gist : 1
us understand the -> programming : 1
gist of what -> is : 1
of what is -> involved : 1
of what is -> in : 1
what is involved -> in : 1
is involved in -> writing : 1
involved in writing -> windows : 1
in writing windows -> programming : 1
writing windows programming -> using : 1
windows programming using -> prtotype : 1
programming using prtotype -> for : 1
using prtotype for -> the : 1
prtotype for the -> event : 1
for the event -> handler : 1
for the event -> sinks : 1
for the event -> stream : 1
the event handler -> callback : 1
event handler callback -> uint : 1
handler callback uint -> wparam : 1
callback uint wparam -> lparam : 2
uint wparam lparam -> entry : 1
uint wparam lparam -> case : 1
wparam lparam entry -> point : 1
lparam entry point -> for : 1
entry point for -> a : 1
entry point for -> the : 1
point for a -> idiomatic : 1
for a idiomatic -> windows : 1
a idiomatic windows -> api : 1
idiomatic windows api -> winapi : 1
windows api winapi -> hinstance : 1
api winapi hinstance -> lpstr : 1
winapi hinstance lpstr -> int : 1
hinstance lpstr int -> msg : 1
lpstr int msg -> wc : 1
int msg wc -> return : 1
msg wc return -> preceding : 1
wc return preceding -> code : 1
return preceding code -> snippet : 4
return preceding code -> snippets : 2
return preceding code -> implements : 2
return preceding code -> demonstrates : 1
the name for -> modern : 1
name for modern -> with : 1
for modern with -> a : 1
for a the -> most : 1
a the most -> important : 1
the most important -> field : 1
the most important -> additions : 1
the most important -> semantic : 1
the most important -> feature : 1
the most important -> thing : 1
the most important -> problem : 1
the most important -> use : 1
the most important -> structure : 1
most important field -> in : 1
important field in -> the : 1
field in the -> structure : 1
in the structure -> is : 1
the structure is -> which : 1
the structure is -> amenable : 1
the structure is -> defined : 1
structure is which -> is : 1
is which is -> the : 1
is which is -> of : 1
which is the -> address : 1
which is the -> most : 1
which is the -> and : 1
which is the -> sum : 1
is the address -> of : 1
the address of -> the : 1
address of the -> function : 1
address of the -> pointed : 1
of the function -> that : 1
of the function -> once : 1
of the function -> are : 2
of the function -> is : 2
of the function -> by : 1
the function that -> responds : 1
the function that -> launches : 1
the function that -> created : 1
the function that -> will : 1
function that responds -> to : 1
that responds to -> the : 1
responds to the -> event : 1
to the event -> inside : 1
to the event -> which : 1
to the event -> every : 1
to the event -> libraries : 1
to the event -> sink : 2
to the event -> filter : 1
the event inside -> an : 1
event inside an -> instance : 1
inside an instance -> of : 1
an instance of -> this : 1
an instance of -> with : 1
an instance of -> auto : 1
an instance of -> the : 12
an instance of -> and : 1
an instance of -> a : 3
an instance of -> type : 1
an instance of -> observable : 1
an instance of -> subject : 1
an instance of -> to : 1
an instance of -> an : 1
an instance of -> through : 1
instance of this -> windows : 1
of this windows -> return : 1
this windows return -> will : 1
windows return will -> invoke : 1
return will invoke -> the : 1
will invoke the -> on : 1
invoke the on -> modern : 1
the on modern -> api : 1
on modern api -> call : 1
modern api call -> to : 1
api call to -> create : 1
call to create -> a : 1
to create a -> window : 1
to create a -> composition : 1
to create a -> mechanism : 1
to create a -> critical : 1
to create a -> composite : 1
to create a -> new : 1
to create a -> project : 1
to create a -> dialog : 1
to create a -> catalog : 1
to create a -> node : 1
to create a -> we : 1
to create a -> the : 1
create a window -> based : 1
a window based -> on : 1
window based on -> the : 1
on the class -> name : 1
the class name -> provided : 1
class name provided -> in : 1
name provided in -> the : 1
provided in the -> return : 1
in the return -> preceding : 1
the return preceding -> code : 1
code snippet gets -> into : 1
snippet gets into -> an : 1
gets into an -> infinite : 1
into an infinite -> loop : 2
infinite loop where -> messages : 1
loop where messages -> will : 1
where messages will -> be : 1
messages will be -> retrieved : 1
messages will be -> dispatched : 1
will be retrieved -> from : 1
be retrieved from -> the : 1
retrieved from the -> message : 1
retrieved from the -> source : 1
from the message -> queue : 1
the message queue -> until : 1
message queue until -> we : 1
queue until we -> get : 1
until we get -> the : 1
we get the -> message : 1
get the message -> takes : 1
the message takes -> us : 1
message takes us -> out : 1
takes us out -> of : 1
us out of -> the : 1
the infinite the -> messages : 1
infinite the messages -> will : 1
the messages will -> sometimes : 1
messages will sometimes -> be : 1
will sometimes be -> translated : 1
sometimes be translated -> before : 1
be translated before -> calling : 1
translated before calling -> the : 1
before calling the -> api : 1
calling the api -> invokes : 1
the api invokes -> the : 1
api invokes the -> window : 1
invokes the window -> callback : 1
the window callback -> procedure : 1
window callback procedure -> callback : 1
callback procedure callback -> uint : 1
procedure callback uint -> wparam : 1
wparam lparam case -> return : 1
lparam case return -> preceding : 1
case return preceding -> code : 1
code snippet is -> a : 1
snippet is a -> minimalist : 1
is a minimalist -> you : 1
a minimalist you -> can : 1
minimalist you can -> consult : 1
you can consult -> microsoft : 1
you can consult -> the : 1
can consult microsoft -> documentation : 1
consult microsoft documentation -> to : 1
microsoft documentation to -> learn : 1
documentation to learn -> about : 1
documentation to learn -> more : 3
documentation to learn -> there : 1
documentation to learn -> server : 1
to learn about -> windows : 1
to learn about -> writing : 1
learn about windows -> api : 1
about windows api -> programming : 1
windows api programming -> and : 1
api programming and -> how : 1
programming and how -> events : 1
handled in those -> programming : 1
in those programming -> under : 1
those programming under -> qt : 1
programming under qt -> framework : 1
under qt framework -> is : 1
qt framework is -> an : 1
qt framework is -> designed : 1
framework is an -> and : 1
is an and -> gui : 1
an and gui -> toolkit : 1
and gui toolkit -> that : 1
gui toolkit that -> runs : 1
toolkit that runs -> on : 1
that runs on -> gnu : 1
that runs on -> multiple : 1
runs on gnu -> macos : 1
on gnu macos -> and : 1
gnu macos and -> other : 1
macos and other -> mac : 1
and other mac -> the : 1
other mac the -> toolkit : 1
mac the toolkit -> has : 1
the toolkit has -> been : 1
toolkit has been -> compiled : 1
has been compiled -> into : 1
been compiled into -> embedded : 1
compiled into embedded -> systems : 1
into embedded systems -> and : 1
embedded systems and -> mobile : 1
systems and mobile -> the : 1
and mobile the -> programming : 1
mobile the programming -> model : 1
programming model has -> leveraged : 1
model has leveraged -> something : 1
has leveraged something -> called : 1
leveraged something called -> object : 1
something called object -> which : 1
called object which -> will : 1
object which will -> peruse : 1
object which will -> loop : 1
which will peruse -> the : 1
will peruse the -> source : 1
peruse the source -> code : 1
the source code -> for : 1
the source code -> of : 2
the source code -> to : 1
the source code -> in : 1
the source code -> from : 1
source code for -> directives : 1
source code for -> the : 1
code for directives -> bunch : 1
for directives bunch -> of : 1
directives bunch of -> macros : 1
bunch of macros -> and : 1
of macros and -> language : 1
macros and language -> extensions : 1
and language extensions -> embedded : 1
language extensions embedded -> in : 1
extensions embedded in -> the : 1
embedded in the -> source : 1
embedded in the -> and : 1
in the source -> and : 1
in the source -> observable : 1
in the source -> is : 1
the source and -> generate : 1
the source and -> they : 1
source and generate -> appropriate : 1
and generate appropriate -> additional : 1
generate appropriate additional -> source : 1
appropriate additional source -> code : 1
additional source code -> to : 1
source code to -> generate : 1
source code to -> a : 1
source code to -> create : 1
code to generate -> event : 1
code to generate -> or : 1
to generate event -> before : 1
generate event before -> the : 1
event before the -> compiler : 1
before the compiler -> gets : 1
the compiler gets -> the : 1
compiler gets the -> source : 1
gets the source -> the : 1
the source the -> moc : 1
the source the -> output : 1
source the moc -> pass : 1
the moc pass -> has : 1
moc pass has -> to : 1
pass has to -> run : 1
has to run -> to : 1
to run to -> generate : 1
run to generate -> legal : 1
to generate legal -> ansi : 1
generate legal ansi -> by : 1
legal ansi by -> removing : 1
ansi by removing -> those : 1
by removing those -> extra : 1
removing those extra -> linguistic : 1
those extra linguistic -> constructs : 1
extra linguistic constructs -> specific : 1
linguistic constructs specific -> to : 1
constructs specific to -> the : 1
specific to the -> qt : 1
to the qt -> consult : 1
the qt consult -> the : 1
qt consult the -> qt : 1
consult the qt -> documentation : 1
the qt documentation -> to : 1
qt documentation to -> learn : 1
to learn more -> about : 4
learn more about -> the : 1
learn more about -> lambda : 1
learn more about -> this : 1
learn more about -> after : 1
learn more about -> a : 1
more about the -> following : 1
about the following -> simple : 1
the following simple -> qt : 1
the following simple -> example : 1
following simple qt -> program : 1
simple qt program -> will : 1
qt program will -> demonstrate : 1
program will demonstrate -> the : 2
program will demonstrate -> how : 1
will demonstrate the -> key : 1
will demonstrate the -> use : 1
will demonstrate the -> usage : 1
will demonstrate the -> replay : 1
will demonstrate the -> whole : 1
demonstrate the key -> aspects : 1
the key aspects -> of : 2
key aspects of -> qt : 1
key aspects of -> reactive : 1
aspects of qt -> programming : 1
of qt programming -> and : 1
qt programming and -> its : 1
programming and its -> event : 1
and its event -> processing : 1
its event processing -> myapp : 1
event processing myapp -> public : 1
processing myapp public -> qdialog : 1
myapp public qdialog -> when : 1
public qdialog when -> the : 1
qdialog when the -> button : 1
when the button -> is : 1
the button is -> run : 1
the button is -> the : 1
button is run -> macro : 1
is run macro -> is : 1
run macro is -> a : 1
macro is a -> directive : 1
is a directive -> to : 1
a directive to -> the : 1
directive to the -> moc : 1
to the moc -> to : 1
the moc to -> generate : 1
moc to generate -> an : 1
to generate an -> when : 1
generate an when -> we : 1
an when we -> connect : 1
when we connect -> the : 1
we connect the -> event : 1
connect the event -> source : 1
the event source -> to : 1
the event source -> and : 1
the event source -> is : 2
the event source -> from : 1
the event source -> this : 1
the event source -> in : 1
event source to -> an : 1
source to an -> event : 1
to an event -> an : 2
to an event -> data : 1
an event an -> entry : 1
an event an -> appropriate : 1
event an entry -> will : 1
an entry will -> be : 1
entry will be -> given : 1
will be given -> to : 1
be given to -> the : 1
given to the -> the : 1
to the the -> generated : 1
to the the -> designers : 1
to the the -> preceding : 1
to the the -> environment : 1
to the the -> patterns : 1
to the the -> scheduler : 1
to the the -> class : 1
to the the -> main : 1
to the the -> programming : 1
to the the -> code : 1
to the the -> microservices : 1
to the the -> aggregation : 1
the the generated -> code : 1
the generated code -> will : 1
generated code will -> be : 1
code will be -> compiled : 1
code will be -> sufficient : 1
code will be -> as : 1
will be compiled -> along : 1
be compiled along -> with : 1
compiled along with -> the : 1
along with the -> code : 1
along with the -> synchronization : 1
along with the -> lambda : 1
along with the -> constructor : 1
along with the -> top : 1
along with the -> left : 1
with the code -> to : 1
the code to -> produce : 1
the code to -> see : 1
the code to -> be : 1
the code to -> create : 1
the code to -> support : 1
code to produce -> an : 1
to produce an -> void : 1
produce an void -> qmessagebox : 1
an void qmessagebox -> clicked : 1
void qmessagebox clicked -> the : 1
qmessagebox clicked the -> qpushbutton : 1
clicked the qpushbutton -> language : 1
the qpushbutton language -> extension : 1
qpushbutton language extension -> will : 1
language extension will -> be : 1
extension will be -> stripped : 1
will be stripped -> away : 1
be stripped away -> by : 1
stripped away by -> the : 1
away by the -> moc : 1
by the moc -> doing : 1
the moc doing -> the : 1
moc doing the -> job : 1
doing the job -> of : 1
the job of -> source : 1
job of source -> code : 1
of source code -> to : 1
of source code -> order : 1
code to a -> form : 1
to a form -> compatible : 1
to a form -> that : 1
a form compatible -> with : 1
form compatible with -> the : 1
compatible with the -> ansi : 1
with the ansi -> qapplication : 1
the ansi qapplication -> myapp : 1
ansi qapplication myapp -> return : 1
qapplication myapp return -> preceding : 1
myapp return preceding -> code : 1
initializes the qt -> application : 1
the qt application -> object : 1
qt application object -> and : 1
application object and -> displays : 1
object and displays -> the : 1
and displays the -> main : 1
displays the main -> for : 1
the main for -> all : 1
the main for -> l : 1
main for all -> practical : 1
for all practical -> qt : 1
all practical qt -> is : 1
practical qt is -> the : 1
qt is the -> most : 1
is the most -> prominent : 1
is the most -> common : 1
the most prominent -> application : 1
most prominent application -> development : 1
prominent application development -> framework : 1
application development framework -> for : 2
development framework for -> the : 1
development framework for -> writing : 1
framework for the -> language : 1
for the language -> and : 1
the language and -> it : 1
the language and -> its : 1
the language and -> the : 1
the language and -> in : 1
language and it -> also : 1
and it also -> has : 1
it also has -> got : 1
also has got -> a : 1
has got a -> good : 1
has got a -> facility : 1
got a good -> binding : 1
a good binding -> to : 1
good binding to -> the : 1
binding to the -> python : 1
to the python -> programming : 1
the python programming -> programming : 1
the python programming -> christened : 1
python programming programming -> under : 1
programming programming under -> microsoft : 1
programming under microsoft -> foundation : 1
under microsoft foundation -> class : 1
microsoft foundation class -> library : 1
foundation class library -> is : 1
class library is -> still : 1
library is still -> a : 1
is still a -> popular : 1
still a popular -> library : 1
a popular library -> with : 1
popular library with -> which : 1
library with which -> to : 1
with which to -> write : 1
which to write -> microsoft : 1
to write microsoft -> desktop : 1
write microsoft desktop -> it : 1
microsoft desktop it -> does : 1
desktop it does -> have : 1
it does have -> some : 1
does have some -> support : 1
have some support -> for : 1
some support for -> web : 1
support for web -> programming : 1
for web programming -> if : 1
web programming if -> we : 1
programming if we -> mix : 1
if we mix -> template : 1
we mix template -> along : 1
mix template along -> with : 1
template along with -> being : 1
along with being -> a : 1
with being a -> mfc : 1
being a mfc -> uses : 1
a mfc uses -> a : 1
mfc uses a -> mechanism : 1
uses a mechanism -> called : 1
a mechanism called -> message : 1
mechanism called message -> mapping : 1
called message mapping -> to : 1
message mapping to -> handle : 1
mapping to handle -> a : 1
to handle a -> sample : 1
handle a sample -> event : 1
a sample event -> handling : 1
sample event handling -> table : 1
event handling table -> given : 1
handling table given -> as : 1
table given as -> macros : 1
given as macros -> is : 1
as macros is -> part : 1
macros is part -> of : 1
is part of -> every : 1
part of every -> mfc : 1
part of every -> command : 1
of every mfc -> preceding : 1
every mfc preceding -> message : 1
mfc preceding message -> map : 1
preceding message map -> will : 1
message map will -> respond : 1
map will respond -> to : 1
will respond to -> and : 1
respond to and -> standard : 1
to and standard -> windows : 1
and standard windows -> api : 1
standard windows api -> deep : 1
standard windows api -> messaging : 1
windows api deep -> down : 1
api deep down -> these : 1
deep down these -> message : 1
down these message -> maps : 1
these message maps -> are : 1
message maps are -> arrays : 1
maps are arrays -> on : 1
are arrays on -> to : 1
arrays on to -> which : 1
on to which -> we : 1
to which we -> will : 1
which we will -> use : 1
we will use -> as : 1
we will use -> an : 1
we will use -> rxcpp : 1
we will use -> the : 2
will use as -> an : 1
use as an -> index : 1
as an index -> for : 1
an index for -> dispatching : 1
index for dispatching -> the : 1
for dispatching the -> on : 1
dispatching the on -> closer : 1
the on closer -> it : 1
on closer it -> is : 1
closer it is -> not : 1
it is not -> much : 1
it is not -> recommended : 1
it is not -> noticed : 1
it is not -> unusual : 1
it is not -> widely : 1
it is not -> subscribed : 1
is not much -> different : 2
not much different -> from : 2
much different from -> the : 2
different from the -> standard : 1
different from the -> preceding : 1
different from the -> main : 1
from the standard -> windows : 1
the standard windows -> api : 1
windows api messaging -> code : 1
api messaging code -> listing : 1
messaging code listing -> is : 1
code listing is -> not : 1
listing is not -> given : 1
is not given -> here : 1
not given here -> because : 1
given here because -> we : 1
here because we -> have : 1
because we have -> globally : 1
because we have -> a : 1
we have globally -> a : 1
have globally a -> gui : 1
globally a gui -> implementation : 1
a gui implementation -> of : 1
gui implementation of -> one : 1
implementation of one -> of : 1
of one of -> the : 2
one of the -> key : 2
one of the -> types : 1
one of the -> most : 5
one of the -> hardest : 1
one of the -> lambda : 1
one of the -> things : 1
one of the -> qualities : 1
of the key -> interfaces : 1
of the key -> features : 1
of the key -> advantages : 1
of the key -> operators : 1
of the key -> topics : 1
of the key -> pillars : 1
the key interfaces -> for : 1
the key interfaces -> of : 1
key interfaces for -> the : 1
interfaces for the -> reactive : 1
for the reactive -> programming : 1
programming model using -> the : 1
model using the -> implementation : 1
using the implementation -> is : 1
the implementation is -> based : 1
the implementation is -> not : 1
implementation is based -> on : 1
is based on -> the : 3
is based on -> a : 1
is based on -> three : 1
on the mfc -> library : 1
the mfc library -> and : 1
mfc library and -> the : 1
library and the -> reader : 1
and the reader -> can : 1
and the reader -> is : 1
the reader can -> go : 1
reader can go -> through : 1
can go through -> the : 1
go through the -> annotated : 1
go through the -> source : 1
through the annotated -> listing : 1
the annotated listing -> to : 1
annotated listing to -> gain : 1
listing to gain -> an : 1
to gain an -> understanding : 1
gain an understanding -> of : 1
understanding of event -> processing : 1
of event processing -> in : 1
event processing in -> programming : 1
processing in programming -> object : 1
in programming object -> processing : 1
programming object processing -> frameworks : 1
object processing frameworks -> such : 1
processing frameworks such -> as : 1
frameworks such as -> and : 1
as and corba -> do : 1
and corba do -> have : 1
corba do have -> their : 1
do have their -> own : 1
have their own -> event : 1
their own event -> processing : 1
own event processing -> the : 1
event processing the -> event : 1
processing the event -> model : 1
the event model -> is : 1
event model is -> based : 1
model is based -> on : 1
on the notion -> of : 3
the notion of -> connection : 1
the notion of -> defined : 1
the notion of -> copy : 1
the notion of -> the : 2
the notion of -> there : 1
the notion of -> container : 1
notion of connection -> points : 1
of connection points -> by : 1
connection points by -> and : 1
points by and -> corba : 1
by and corba -> does : 1
and corba does -> have : 1
corba does have -> its : 1
does have its -> own : 1
have its own -> event : 1
have its own -> copy : 1
its own event -> service : 1
own event service -> corba : 1
event service corba -> standard : 1
service corba standard -> provides : 1
corba standard provides -> both : 1
standard provides both -> and : 1
provides both and -> event : 1
both and event -> and : 1
and event and -> corba : 1
event and corba -> are : 1
and corba are -> beyond : 1
corba are beyond -> the : 1
are beyond the -> scope : 1
beyond the scope -> of : 3
the scope of -> this : 4
the scope of -> its : 1
scope of this -> book : 1
scope of this -> namespace : 1
scope of this -> and : 1
scope of this -> you : 1
this book and -> the : 1
book and the -> reader : 1
book and the -> associated : 1
the reader is -> expected : 1
reader is expected -> to : 1
is expected to -> consult : 1
is expected to -> be : 1
expected to consult -> the : 1
to consult the -> respective : 1
consult the respective -> of : 1
the respective of -> classical : 1
respective of classical -> event : 1
event processing whole -> purpose : 1
processing whole purpose -> of : 1
whole purpose of -> making : 1
whole purpose of -> wrapping : 1
purpose of making -> a : 1
of making a -> tour : 1
making a tour -> of : 1
the event processing -> supported : 1
event processing supported -> by : 1
processing supported by -> various : 1
supported by various -> platforms : 1
by various platforms -> was : 1
various platforms was -> to : 1
platforms was to -> put : 1
was to put -> things : 1
put things into -> the : 1
things into the -> proper : 1
things into the -> same : 1
into the proper -> the : 1
the proper the -> event : 1
proper the event -> response : 1
the event response -> logic : 1
event response logic -> in : 1
response logic in -> these : 1
logic in these -> platforms : 1
in these platforms -> is : 1
these platforms is -> mostly : 1
platforms is mostly -> coupled : 1
is mostly coupled -> with : 1
mostly coupled with -> the : 1
coupled with the -> platform : 1
with the platform -> where : 1
the platform where -> the : 1
platform where the -> code : 1
where the code -> is : 1
the code is -> with : 1
the code is -> identical : 1
the code is -> written : 1
the code is -> obvious : 1
the code is -> required : 1
the code is -> fairly : 1
the code is -> about : 1
the code is -> very : 1
the code is -> intended : 1
code is with -> the : 1
is with the -> advent : 1
advent of writing -> code : 1
of writing code -> is : 1
of writing code -> with : 1
writing code is -> difficult : 1
code is difficult -> and : 1
is difficult and -> declarative : 1
difficult and declarative -> programming : 1
and declarative programming -> models : 1
declarative programming models -> are : 1
models are available -> with : 1
are available with -> the : 1
with the programming -> but : 1
with the programming -> model : 1
with the programming -> they : 1
with the programming -> we : 1
the programming but -> the : 1
the programming but -> this : 1
programming but the -> event : 1
but the event -> sources : 1
the event sources -> are : 1
event sources are -> mostly : 1
sources are mostly -> outside : 1
are mostly outside -> the : 1
mostly outside the -> the : 1
outside the the -> language : 1
the the language -> does : 1
the language does -> not : 1
language does not -> have : 2
language does not -> provide : 1
does not have -> a : 2
does not have -> automatic : 1
not have a -> standard : 1
not have a -> main : 1
have a standard -> gui : 1
a standard gui -> programming : 1
standard gui programming -> an : 1
gui programming an -> interface : 1
programming an interface -> standard : 1
an interface standard -> to : 1
interface standard to -> access : 1
standard to access -> external : 1
to access external -> and : 1
access external and -> so : 1
external and so -> what : 1
and so what -> is : 1
so what is -> the : 1
what is the -> way : 2
what is the -> real : 1
is the way -> events : 1
is the way -> we : 1
is the way -> to : 1
the way events -> and : 1
way events and -> data : 1
events and data -> from : 2
and data from -> external : 1
and data from -> different : 1
data from external -> sources : 1
from external sources -> can : 1
external sources can -> be : 1
sources can be -> aggregated : 1
sources can be -> stl : 1
can be aggregated -> into : 1
be aggregated into -> streams : 1
aggregated into streams -> and : 1
into streams and -> by : 1
streams and by -> using : 1
and by using -> functional : 1
by using functional -> programming : 1
using functional programming -> constructs : 2
using functional programming -> following : 1
functional programming constructs -> such : 2
functional programming constructs -> are : 1
functional programming constructs -> to : 1
functional programming constructs -> support : 2
functional programming constructs -> added : 1
programming constructs such -> as : 1
programming constructs such -> and : 1
constructs such as -> lambda : 2
constructs such as -> condition : 1
such as lambda -> functions : 2
such as lambda -> automatic : 1
such as lambda -> functional : 1
as lambda functions -> can : 1
as lambda functions -> and : 1
lambda functions can -> be : 1
functions can be -> processed : 1
can be processed -> very : 1
can be processed -> by : 1
can be processed -> using : 1
be processed very -> the : 1
processed very the -> added : 1
very the added -> bonus : 1
the added bonus -> is : 1
added bonus is -> that : 1
bonus is that -> if : 1
is that if -> we : 1
that if we -> resort : 1
if we resort -> to : 1
we resort to -> some : 1
resort to some -> kind : 1
to some kind -> of : 1
some kind of -> restrictions : 1
some kind of -> syntax : 1
some kind of -> interleaved : 1
some kind of -> helper : 1
some kind of -> understanding : 1
some kind of -> pattern : 1
kind of restrictions -> regarding : 1
of restrictions regarding -> the : 1
restrictions regarding the -> mutability : 1
regarding the mutability -> of : 1
the mutability of -> variables : 1
mutability of variables -> and : 1
of variables and -> and : 1
variables and and -> parallelism : 1
and and parallelism -> are : 1
and parallelism are -> built : 1
parallelism are built -> into : 1
are built into -> the : 1
built into the -> stream : 1
into the stream -> processing : 1
into the stream -> for : 1
into the stream -> to : 1
the stream processing -> programming : 1
the stream processing -> with : 1
the stream processing -> we : 1
stream processing programming -> reactive : 1
programming reactive programming -> is : 1
reactive programming is -> nothing : 2
reactive programming is -> that : 1
reactive programming is -> the : 1
reactive programming is -> about : 1
reactive programming is -> aligned : 1
reactive programming is -> all : 1
reactive programming is -> a : 1
programming is nothing -> but : 2
is nothing but -> programming : 2
is nothing but -> a : 1
nothing but programming -> with : 2
but programming with -> asynchronous : 2
programming with asynchronous -> data : 2
asynchronous data by -> applying : 2
data by applying -> various : 2
by applying various -> operations : 2
applying various operations -> on : 2
various operations on -> we : 2
operations on we -> can : 2
on we can -> achieve : 2
on we can -> compose : 1
we can achieve -> different : 2
can achieve different -> computational : 2
achieve different computational -> the : 2
different computational the -> primary : 2
computational the primary -> task : 2
the primary task -> in : 2
primary task in -> a : 2
task in a -> reactive : 2
in a reactive -> program : 2
in a reactive -> a : 1
in a reactive -> manner : 1
in a reactive -> to : 1
in a reactive -> the : 1
in a reactive -> before : 1
a reactive program -> is : 2
a reactive program -> should : 1
reactive program is -> to : 2
program is to -> convert : 2
is to convert -> data : 2
to convert data -> into : 3
convert data into -> regardless : 2
convert data into -> the : 1
data into regardless -> of : 2
into regardless of -> what : 1
into regardless of -> the : 1
regardless of what -> the : 1
of what the -> source : 1
what the source -> of : 1
the source of -> the : 3
the source of -> to : 1
source of the -> data : 1
source of the -> event : 1
source of the -> primary : 1
the data while -> writing : 1
the data while -> another : 1
data while writing -> modern : 1
while writing modern -> graphical : 1
while writing modern -> the : 1
writing modern graphical -> user : 1
modern graphical user -> interface : 1
graphical user interface -> we : 1
user interface we -> process : 1
user interface we -> will : 1
interface we process -> mouse : 1
we process mouse -> most : 1
process mouse most -> systems : 1
mouse most systems -> get : 1
most systems get -> a : 1
systems get a -> callback : 1
get a callback -> and : 1
a callback and -> process : 1
callback and process -> these : 1
and process these -> events : 1
process these events -> as : 1
these events as -> and : 1
events as and -> when : 1
as and when -> they : 1
as and when -> the : 2
and when they -> most : 1
when they most -> of : 1
they most of -> the : 1
most of the -> the : 1
most of the -> features : 1
most of the -> operators : 1
most of the -> semantics : 1
most of the -> innovations : 1
most of the -> stl : 1
most of the -> evaluation : 1
most of the -> computation : 1
most of the -> examples : 1
most of the -> programming : 1
most of the -> applicable : 1
most of the -> web : 1
most of the -> preceding : 1
of the the -> handler : 1
of the the -> reader : 1
of the the -> next : 1
of the the -> following : 2
of the the -> public : 1
of the the -> thread : 1
of the the -> mutex : 1
of the the -> call : 1
of the the -> contract : 1
of the the -> notification : 1
of the the -> visitor : 1
of the the -> method : 1
of the the -> existing : 1
of the the -> rxcpp : 1
of the the -> contents : 1
of the the -> map : 1
of the the -> class : 1
of the the -> dockable : 1
of the the -> value : 1
of the the -> prototypes : 1
the the handler -> does : 1
the handler does -> a : 1
the handler does -> is : 1
handler does a -> series : 1
does a series -> of : 1
a series of -> filtering : 1
a series of -> function : 1
a series of -> invocations : 1
a series of -> numbers : 5
a series of -> random : 1
a series of -> to : 1
a series of -> filters : 2
a series of -> value : 1
a series of -> functors : 1
a series of -> small : 1
a series of -> such : 1
a series of -> transformations : 1
a series of -> or : 1
a series of -> requests : 1
series of filtering -> operations : 1
of filtering operations -> before : 1
filtering operations before -> it : 1
operations before it -> invokes : 1
before it invokes -> the : 1
it invokes the -> action : 1
invokes the action -> methods : 1
invokes the action -> that : 1
the action methods -> associated : 1
action methods associated -> with : 1
methods associated with -> the : 1
associated with the -> event : 1
associated with the -> and : 2
associated with the -> thread : 1
associated with the -> instance : 1
associated with the -> the : 4
associated with the -> data : 1
associated with the -> function : 1
associated with the -> first : 1
associated with the -> task : 1
associated with the -> corresponding : 1
associated with the -> shared : 1
associated with the -> most : 1
associated with the -> through : 1
associated with the -> library : 1
with the event -> in : 1
the event in -> this : 1
the event in -> a : 1
event in this -> particular : 1
in this particular -> reactive : 1
in this particular -> the : 1
in this particular -> we : 2
in this particular -> case : 1
in this particular -> due : 1
this particular reactive -> programming : 1
particular reactive programming -> helps : 1
reactive programming helps -> us : 1
reactive programming helps -> you : 1
programming helps us -> in : 1
helps us in -> aggregating : 1
us in aggregating -> the : 1
in aggregating the -> mouse : 1
aggregating the mouse -> events : 1
the mouse events -> into : 1
the mouse events -> in : 1
the mouse events -> such : 1
the mouse events -> group : 1
the mouse events -> and : 1
mouse events into -> a : 1
events into a -> collection : 1
into a collection -> and : 1
a collection and -> sets : 1
collection and sets -> a : 1
and sets a -> filter : 1
sets a filter -> on : 1
a filter on -> them : 1
filter on them -> before : 1
on them before -> notifying : 1
them before notifying -> the : 1
before notifying the -> handler : 1
before notifying the -> as : 1
notifying the handler -> in : 1
the handler in -> this : 1
handler in this -> the : 1
in this the -> logic : 1
in this the -> number : 1
in this the -> predicate : 1
in this the -> advantage : 1
in this the -> key : 1
in this the -> primary : 1
in this the -> label : 2
in this the -> description : 1
in this the -> service : 1
in this the -> programs : 1
in this the -> error : 1
in this the -> application : 1
this the logic -> does : 1
the logic does -> not : 1
logic does not -> get : 1
does not get -> executed : 1
not get executed -> model : 1
get executed model -> is : 1
executed model is -> well : 1
model is well -> and : 1
is well and -> it : 1
well and it -> is : 1
and it is -> very : 2
and it is -> up : 1
and it is -> the : 1
and it is -> program : 1
and it is -> required : 1
and it is -> possible : 1
and it is -> highly : 1
it is very -> easy : 2
it is very -> expensive : 1
is very easy -> to : 2
very easy to -> encode : 1
very easy to -> write : 1
easy to encode -> by : 1
to encode by -> application : 1
encode by application -> pretty : 1
by application pretty -> much : 1
application pretty much -> anything : 1
pretty much anything -> can : 1
much anything can -> be : 1
anything can be -> converted : 1
can be converted -> into : 1
be converted into -> a : 1
converted into a -> such : 1
into a such -> candidates : 1
a such candidates -> include : 1
such candidates include -> twitter : 1
candidates include twitter -> blog : 1
include twitter blog -> rss : 1
twitter blog rss -> and : 1
blog rss and -> so : 1
rss and so -> functional : 1
and so functional -> programming : 1
so functional programming -> techniques : 1
functional programming techniques -> are : 1
functional programming techniques -> such : 1
functional programming techniques -> to : 1
programming techniques are -> really : 1
techniques are really -> good : 1
are really good -> at : 1
really good at -> processing : 1
good at processing -> a : 1
good at processing -> data : 1
at processing a -> language : 1
processing a language -> such : 1
a language such -> as : 2
language such as -> modern : 1
language such as -> or : 1
such as modern -> with : 1
as modern with -> excellent : 1
modern with excellent -> support : 1
with excellent support -> for : 1
excellent support for -> is : 1
excellent support for -> concurrent : 1
support for is -> a : 1
for is a -> natural : 1
is a natural -> choice : 1
is a natural -> in : 1
a natural choice -> for : 1
natural choice for -> writing : 1
choice for writing -> reactive : 1
choice for writing -> industrial : 1
for writing reactive -> the : 1
for writing reactive -> our : 1
for writing reactive -> client : 1
writing reactive the -> basic : 1
reactive the basic -> idea : 1
the basic idea -> behind : 1
basic idea behind -> reactive : 1
idea behind reactive -> programming : 1
behind reactive programming -> is : 1
programming is that -> there : 1
is that there -> are : 1
that there are -> certain : 1
there are certain -> datatypes : 1
there are certain -> common : 1
are certain datatypes -> that : 1
certain datatypes that -> represent : 1
datatypes that represent -> a : 1
that represent a -> value : 1
represent a value -> over : 1
a value over -> these : 1
value over these -> datatypes : 1
over these datatypes -> rather : 1
these datatypes rather -> data : 1
datatypes rather data -> are : 1
rather data are -> represented : 1
data are represented -> as : 1
are represented as -> observable : 1
represented as observable -> sequences : 1
as observable sequences -> in : 1
observable sequences in -> this : 1
sequences in this -> programming : 1
sequences in this -> this : 1
in this programming -> computations : 1
this programming computations -> that : 1
programming computations that -> involve : 1
computations that involve -> these : 1
that involve these -> changing : 1
involve these changing -> values : 1
these changing values -> in : 1
changing values in -> themselves : 1
values in themselves -> have : 1
in themselves have -> values : 1
themselves have values -> that : 1
have values that -> change : 1
values that change -> over : 1
that change over -> and : 1
change over and -> will : 1
over and will -> need : 1
and will need -> to : 1
will need to -> asynchronously : 1
will need to -> bother : 1
need to asynchronously -> receive : 1
to asynchronously receive -> notifications : 1
asynchronously receive notifications -> and : 1
receive notifications and -> when : 1
receive notifications and -> react : 1
notifications and when -> the : 1
and when the -> dependent : 1
and when the -> values : 1
and when the -> system : 1
when the dependent -> data : 1
the dependent data -> reactive : 1
dependent data reactive -> programming : 1
data reactive programming -> languages : 1
reactive programming languages -> support : 1
programming languages support -> functional : 1
languages support functional -> programming : 1
support functional programming -> functional : 1
functional programming functional -> programming : 1
programming functional programming -> constructs : 1
constructs such and -> so : 1
such and so -> on : 1
so on are -> good : 1
so on are -> better : 1
so on are -> bounded : 1
on are good -> for : 1
are good for -> processing : 1
good for processing -> programming : 1
good for processing -> composites : 1
good for processing -> as : 1
for processing programming -> asynchronous : 1
processing programming asynchronous -> data : 1
programming asynchronous data -> streams : 1
data streams using -> functional : 1
streams using functional -> programming : 1
programming constructs are -> generally : 1
constructs are generally -> called : 1
are generally called -> functional : 1
generally called functional -> reactive : 1
called functional reactive -> programming : 1
functional reactive programming -> all : 1
functional reactive programming -> in : 2
reactive programming all -> practical : 1
programming all practical -> the : 1
all practical the -> here : 1
practical the here -> is : 1
the here is -> an : 1
the here is -> already : 1
is an operational -> consult : 1
an operational consult -> the : 1
operational consult the -> work : 1
consult the work -> done : 1
the work done -> by : 1
work done by -> conal : 1
done by conal -> elliott : 1
by conal elliott -> and : 1
conal elliott and -> paul : 1
elliott and paul -> hudak : 1
and paul hudak -> as : 1
paul hudak as -> part : 1
hudak as part -> of : 1
of the haskell -> community : 1
the haskell community -> to : 1
haskell community to -> understand : 1
community to understand -> the : 1
to understand the -> strict : 1
to understand the -> method : 1
to understand the -> programming : 2
to understand the -> internal : 1
to understand the -> workings : 1
to understand the -> semantic : 1
to understand the -> let : 1
to understand the -> following : 1
to understand the -> behavior : 1
understand the strict -> mixing : 1
the strict mixing -> reactive : 1
strict mixing reactive -> programming : 1
mixing reactive programming -> with : 1
reactive programming with -> fp : 1
programming with fp -> is : 1
with fp is -> gaining : 1
fp is gaining -> traction : 1
is gaining traction -> among : 1
gaining traction among -> developers : 1
traction among developers -> these : 1
among developers these -> the : 1
developers these the -> emergence : 1
these the emergence -> of : 1
the emergence of -> libraries : 1
emergence of libraries -> such : 1
of libraries such -> as : 3
as and rxcpp -> and : 1
and rxcpp and -> so : 1
rxcpp and so -> on : 1
so on is -> a : 2
on is a -> testimony : 1
on is a -> massive : 1
is a testimony -> to : 1
a testimony to -> though : 1
testimony to though -> reactive : 1
to though reactive -> programming : 1
though reactive programming -> is : 1
programming is the -> core : 1
is the core -> subject : 1
is the core -> to : 1
the core subject -> of : 1
core subject of -> this : 1
subject of this -> in : 1
of this in -> this : 1
this in this -> chapter : 1
this chapter we -> will : 2
chapter we will -> be : 1
chapter we will -> get : 1
we will be -> sticking : 1
we will be -> implementing : 1
we will be -> using : 4
we will be -> highlighting : 1
we will be -> covering : 2
we will be -> focusing : 2
we will be -> subscribing : 1
we will be -> handling : 1
will be sticking -> to : 1
be sticking to -> an : 1
sticking to an -> oop : 1
to an oop -> this : 1
an oop this -> is : 1
oop this is -> necessitated : 1
this is necessitated -> because : 1
is necessitated because -> of : 1
necessitated because of -> the : 1
because of the -> fact : 2
because of the -> nature : 1
because of the -> meta : 1
because of the -> immutability : 1
because of the -> judicious : 1
because of the -> minimal : 1
because of the -> infinite : 1
of the fact -> that : 2
the fact that -> we : 2
the fact that -> references : 1
the fact that -> they : 1
the fact that -> it : 1
the fact that -> our : 1
the fact that -> the : 1
the fact that -> there : 1
the fact that -> an : 1
fact that we -> need : 1
fact that we -> can : 1
that we need -> to : 3
we need to -> introduce : 1
we need to -> follow : 2
we need to -> filter : 1
we need to -> have : 1
we need to -> create : 3
we need to -> consider : 1
we need to -> specify : 1
we need to -> reason : 1
we need to -> take : 1
we need to -> flatten : 1
we need to -> reverse : 1
we need to -> bother : 1
we need to -> store : 1
we need to -> detect : 1
we need to -> go : 1
we need to -> evaluate : 1
we need to -> aggregate : 1
we need to -> place : 1
we need to -> use : 2
we need to -> cover : 1
we need to -> implement : 2
we need to -> bridge : 1
we need to -> add : 2
we need to -> resort : 1
we need to -> configure : 1
we need to -> understand : 1
we need to -> handle : 2
need to introduce -> some : 1
to introduce some -> standard : 1
introduce some standard -> interfaces : 1
some standard interfaces -> in : 1
standard interfaces in -> using : 1
interfaces in using -> virtual : 1
in using virtual -> necessary : 1
using virtual necessary -> for : 1
virtual necessary for -> doing : 1
necessary for doing -> reactive : 1
for doing reactive -> later : 1
doing reactive later -> after : 1
reactive later after -> learning : 1
later after learning -> about : 1
after learning about -> fp : 1
learning about fp -> constructs : 1
about fp constructs -> supported : 1
fp constructs supported -> by : 1
constructs supported by -> readers : 1
supported by readers -> can : 1
by readers can -> do : 1
readers can do -> some : 1
can do some -> mental : 1
do some mental -> model : 1
some mental model -> mapping : 1
mental model mapping -> from : 1
model mapping from -> oop : 1
mapping from oop -> to : 1
from oop to -> fp : 1
oop to fp -> we : 1
to fp we -> will : 1
fp we will -> also : 1
will also keep -> away : 1
also keep away -> from : 1
keep away from -> concurrency : 1
away from concurrency -> stuff : 1
from concurrency stuff -> to : 1
concurrency stuff to -> focus : 1
stuff to focus -> on : 1
to focus on -> software : 2
to focus on -> the : 2
focus on software -> interfaces : 1
focus on software -> a : 1
on software interfaces -> in : 1
software interfaces in -> this : 1
interfaces in this -> tour : 1
in this tour -> of : 1
this tour of -> the : 1
of the modern -> and : 1
of the modern -> language : 1
the modern and -> its : 1
its key concurrency -> and : 1
key concurrency and -> parallelism : 1
in and programming -> in : 2
programming in give -> the : 1
in give the -> necessary : 1
necessary background to -> understand : 1
background to understand -> reactive : 1
to understand reactive -> programming : 1
understand reactive programming -> using : 1
reactive programming using -> fp : 1
reactive programming using -> functional : 1
reactive programming using -> some : 1
reactive programming using -> the : 1
programming using fp -> key : 1
using fp key -> interfaces : 1
fp key interfaces -> of : 1
a reactive help -> you : 1
reactive help you -> understand : 1
help you understand -> what : 1
help you understand -> how : 1
you understand what -> is : 1
understand what is -> really : 1
what is really -> happening : 1
is really happening -> inside : 1
really happening inside -> a : 1
happening inside a -> reactive : 1
inside a reactive -> we : 1
a reactive we -> will : 1
a reactive we -> need : 1
reactive we will -> write : 2
we will write -> some : 2
we will write -> two : 1
we will write -> a : 9
will write some -> toy : 1
will write some -> programs : 1
write some toy -> programs : 1
some toy programs -> to : 1
toy programs to -> put : 1
programs to put -> things : 1
things in proper -> from : 1
in proper from -> a : 1
proper from a -> software : 1
from a software -> design : 1
a software design -> point : 1
software design point -> of : 1
design point of -> if : 1
point of if -> you : 1
of if you -> keep : 1
if you keep -> aside : 1
you keep aside -> to : 1
keep aside to -> focus : 1
aside to focus -> on : 1
on software a -> reactive : 1
on software a -> group : 1
software a reactive -> program : 1
reactive program should -> event : 1
program should event -> source : 1
should event source -> that : 1
event source that -> implements : 1
source that implements -> event : 1
that implements event -> sink : 1
implements event sink -> that : 1
event sink that -> implements : 1
sink that implements -> mechanism : 1
that implements mechanism -> to : 1
implements mechanism to -> add : 1
mechanism to add -> subscribers : 1
to add subscribers -> to : 1
add subscribers to -> an : 1
subscribers to an -> event : 1
an event data -> appears : 1
event data appears -> at : 1
data appears at -> the : 1
appears at the -> subscribers : 1
at the subscribers -> will : 1
the subscribers will -> be : 1
subscribers will be -> this : 1
will be this -> particular : 1
will be this -> happens : 1
will be this -> means : 1
be this particular -> we : 1
this particular we -> have : 1
this particular we -> do : 1
this particular we -> need : 1
this particular we -> will : 1
particular we have -> written : 1
we have written -> code : 1
we have written -> the : 1
we have written -> programs : 1
we have written -> a : 1
have written code -> using : 1
written code using -> classic : 1
code using classic -> this : 1
using classic this -> have : 1
classic this have -> not : 1
this have not -> yet : 1
have not yet -> introduced : 1
not yet introduced -> modern : 1
yet introduced modern -> we : 1
introduced modern we -> have : 1
modern we have -> also : 1
we have also -> used : 1
we have also -> created : 1
we have also -> omitted : 1
we have also -> implemented : 1
have also used -> raw : 1
also used raw -> something : 1
used raw something -> which : 1
raw something which -> we : 1
something which we -> can : 1
which we can -> modern : 1
which we can -> enumerate : 1
we can modern -> the : 1
can modern the -> code : 1
modern the code -> in : 1
the code in -> this : 1
the code in -> topological : 1
the code in -> as : 1
code in this -> chapter : 1
chapter is written -> to : 1
is written to -> conform : 1
is written to -> demonstrate : 1
written to conform -> to : 1
to conform to -> the : 1
to conform to -> while : 1
conform to the -> reactivex : 1
to the reactivex -> documentation : 1
the reactivex documentation -> in : 1
reactivex documentation in -> in : 1
documentation in in -> we : 1
in in we -> do : 1
in we do -> not : 1
we do not -> use : 1
we do not -> handle : 1
we do not -> gain : 1
we do not -> do : 1
do not use -> techniques : 1
not use techniques -> like : 1
use techniques like -> we : 1
techniques like we -> do : 1
like we do -> in : 1
like we do -> commands : 1
we do in -> java : 1
do in java -> or : 1
in java or -> let : 1
java or let -> us : 1
or let us -> define : 1
let us define -> and : 1
let us define -> two : 1
let us define -> function : 1
us define and -> a : 1
define and a -> once : 1
and a once -> struct : 1
a once struct -> customexception : 1
once struct customexception -> const : 1
struct customexception const -> char : 1
customexception const char -> const : 1
const char const -> throw : 1
char const throw -> return : 1
const throw return -> class : 1
throw return class -> is : 1
return class is -> just : 1
class is just -> a : 1
is just a -> placeholder : 1
is just a -> small : 1
just a placeholder -> to : 1
a placeholder to -> make : 1
placeholder to make -> the : 1
to make the -> interface : 1
to make the -> reader : 1
to make the -> code : 1
to make the -> listing : 1
to make the -> life : 1
to make the -> idea : 1
to make the -> difference : 1
to make the -> mouse : 1
to make the -> cold : 1
make the interface -> since : 1
the interface since -> we : 1
interface since we -> have : 1
since we have -> decided : 1
we have decided -> that : 1
have decided that -> we : 1
decided that we -> will : 1
that we will -> only : 1
that we will -> be : 2
that we will -> specify : 1
that we will -> get : 1
that we will -> discuss : 1
that we will -> filter : 1
we will only -> use : 1
we will only -> focus : 1
will only use -> classic : 1
only use classic -> in : 1
use classic in -> this : 1
classic in this -> we : 1
this we are -> not : 1
this we are -> going : 3
this we are -> returning : 1
this we are -> subscribing : 1
this we are -> filtering : 1
we are not -> deviating : 1
we are not -> copying : 1
are not deviating -> from : 1
not deviating from -> class : 1
deviating from class -> ienumerator : 1
from class ienumerator -> virtual : 1
class ienumerator virtual -> bool : 1
ienumerator virtual bool -> virtual : 1
virtual bool virtual -> t : 1
virtual bool virtual -> long : 1
bool virtual t -> omitted : 1
virtual t omitted -> virtual : 1
t omitted virtual -> destructor : 1
omitted virtual destructor -> for : 2
virtual destructor for -> class : 1
virtual destructor for -> interface : 1
destructor for class -> virtual : 1
for class virtual -> omitted : 1
class virtual omitted -> virtual : 1
virtual omitted virtual -> destructor : 1
destructor for interface -> is : 1
for interface is -> used : 1
interface is used -> by : 1
is used by -> the : 1
used by the -> data : 1
by the data -> source : 1
the data source -> from : 1
the data source -> will : 1
the data source -> is : 2
the data source -> and : 1
the data source -> be : 1
data source from -> which : 1
source from which -> we : 1
from which we -> can : 1
from which we -> wrote : 1
we can enumerate -> data : 1
we can enumerate -> over : 1
can enumerate data -> and : 1
enumerate data and -> will : 1
data and will -> be : 1
be used for -> iteration : 1
be used for -> failure : 1
be used for -> writing : 1
used for iteration -> by : 1
for iteration by -> the : 1
iteration by the -> purpose : 1
by the purpose -> of : 1
the purpose of -> defining : 1
the purpose of -> the : 2
the purpose of -> this : 2
purpose of defining -> interfaces : 1
of defining interfaces -> for : 1
defining interfaces for -> iterator : 1
interfaces for iterator -> is : 1
for iterator is -> to : 1
iterator is to -> make : 1
is to make -> the : 1
make the reader -> understand : 1
reader understand that -> they : 1
understand that they -> are : 1
that they are -> very : 1
they are very -> closely : 1
are very closely -> related : 1
very closely related -> to : 1
closely related to -> we : 1
related to we -> will : 1
to we will -> define : 1
to we will -> once : 1
to we will -> model : 1
to we will -> focus : 1
we will define -> as : 1
we will define -> some : 1
we will define -> visitors : 1
will define as -> class : 1
define as class -> virtual : 1
as class virtual -> void : 1
class virtual void -> virtual : 1
class virtual void -> fn : 1
virtual void virtual -> void : 4
virtual void virtual -> bool : 1
virtual void virtual -> we : 1
void virtual void -> virtual : 3
void virtual void -> if : 1
void virtual bool -> is : 1
virtual bool is -> the : 1
bool is the -> interface : 1
is the interface -> that : 1
the interface that -> the : 1
interface that the -> data : 1
that the data -> sink : 1
that the data -> source : 1
that the data -> has : 1
the data sink -> will : 1
data sink will -> use : 1
sink will use -> to : 1
will use to -> receive : 1
use to receive -> notifications : 1
to receive notifications -> from : 1
to receive notifications -> and : 1
receive notifications from -> the : 1
notifications from the -> data : 1
from the data -> the : 1
from the data -> source : 1
the data the -> data : 1
the data the -> event : 1
the data the -> streamulus : 1
data the data -> source : 1
data the data -> sources : 1
data source will -> implement : 1
source will implement -> the : 1
will implement the -> have : 1
will implement the -> following : 1
implement the have -> defined : 1
the have defined -> interface : 1
have defined interface -> and : 1
defined interface and -> it : 1
interface and it -> has : 2
and it has -> got : 1
and it has -> the : 2
and it has -> been : 1
it has got -> three : 1
has got three -> they : 1
got three they -> are : 1
three they are -> the : 1
they are the -> item : 1
they are the -> cornerstone : 1
are the item -> is : 1
the item is -> notified : 1
item is notified -> to : 1
is notified to -> the : 1
notified to the -> there : 1
notified to the -> and : 1
notified to the -> observers : 1
to the there -> is : 1
the there is -> no : 1
the there is -> a : 3
there is no -> more : 1
there is no -> restriction : 1
there is no -> data : 1
there is no -> enforced : 1
there is no -> code : 1
there is no -> global : 1
there is no -> value : 1
there is no -> difference : 1
there is no -> precise : 1
there is no -> centralized : 1
is no more -> and : 1
is no more -> will : 1
no more and -> an : 1
more and an -> exception : 1
and an exception -> is : 2
an exception is -> is : 1
an exception is -> passed : 1
exception is is -> implemented : 1
is is implemented -> by : 1
is implemented by -> the : 2
implemented by the -> event : 1
implemented by the -> nested : 1
implemented by the -> person : 1
implemented by the -> derived : 1
by the event -> source : 1
event source and -> event : 1
source and event -> sinks : 2
and event sinks -> can : 1
and event sinks -> are : 1
event sinks can -> insert : 1
event sinks can -> do : 1
sinks can insert -> objects : 1
can insert objects -> that : 1
insert objects that -> to : 1
objects that to -> receive : 1
that to receive -> reactive : 1
to receive reactive -> programs : 1
receive reactive programs -> can : 1
reactive programs can -> be : 1
programs can be -> classified : 1
can be classified -> as : 1
can be classified -> into : 1
be classified as -> and : 1
classified as and -> the : 1
as and the -> system : 1
as and the -> atomic : 1
as and the -> result : 1
as and the -> edges : 1
as and the -> signals : 1
and the system -> waits : 1
the system waits -> for : 1
system waits for -> a : 1
waits for a -> demand : 1
waits for a -> stack : 1
waits for a -> key : 1
for a demand -> to : 1
a demand to -> push : 1
demand to push -> the : 1
to push the -> data : 1
push the data -> streams : 1
the data streams -> to : 1
the data streams -> from : 1
data streams to -> the : 1
streams to the -> requestor : 1
to the requestor -> subscriber : 1
the requestor subscriber -> in : 1
requestor subscriber in -> our : 1
subscriber in our -> this : 1
in our this -> is : 1
our this is -> the : 1
our this is -> appropriate : 1
this is the -> classic : 1
this is the -> initial : 1
this is the -> reason : 1
this is the -> task : 1
this is the -> only : 1
this is the -> area : 1
this is the -> crux : 1
is the classic -> case : 1
the classic case -> where : 1
classic case where -> the : 1
case where the -> data : 1
where the data -> source : 1
where the data -> is : 1
where the data -> arrives : 1
data source is -> actively : 1
data source is -> pushing : 1
source is actively -> polled : 1
is actively polled -> for : 1
actively polled for -> more : 1
polled for more -> this : 1
for more this -> employs : 1
more this employs -> the : 1
this employs the -> iterator : 1
employs the iterator -> and : 1
the iterator and -> interfaces : 1
iterator and interfaces -> are : 1
and interfaces are -> specifically : 1
interfaces are specifically -> designed : 1
are specifically designed -> for : 1
specifically designed for -> such : 1
designed for such -> scenarios : 1
for such scenarios -> that : 1
such scenarios that -> are : 1
scenarios that are -> synchronous : 1
that are synchronous -> in : 1
are synchronous in -> nature : 1
synchronous in nature -> application : 1
in nature application -> can : 1
nature application can -> block : 1
application can block -> while : 1
can block while -> pulling : 1
block while pulling -> on : 1
while pulling on -> the : 1
pulling on the -> other : 1
on the other -> a : 1
on the other -> can : 1
on the other -> in : 1
the other a -> system : 1
other a system -> aggregates : 1
a system aggregates -> events : 1
system aggregates events -> and : 1
aggregates events and -> pushes : 1
events and pushes -> through : 1
and pushes through -> a : 1
pushes through a -> signal : 1
through a signal -> network : 1
a signal network -> to : 1
signal network to -> achieve : 1
network to achieve -> the : 1
to achieve the -> in : 1
to achieve the -> abstraction : 1
to achieve the -> class : 1
achieve the in -> this : 1
the in this -> unlike : 1
the in this -> particular : 1
the in this -> we : 4
the in this -> a : 1
in this unlike -> the : 1
this unlike the -> data : 1
unlike the data -> and : 1
the data and -> related : 1
data and related -> updates : 1
and related updates -> are : 1
related updates are -> handed : 1
updates are handed -> to : 1
are handed to -> the : 1
handed to the -> subscriber : 1
to the subscriber -> from : 2
to the subscriber -> through : 1
the subscriber from -> the : 2
subscriber from the -> source : 1
subscriber from the -> created : 1
from the source -> sequences : 1
from the source -> transformed : 1
from the source -> ability : 1
from the source -> that : 2
from the source -> observable : 3
from the source -> converts : 1
from the source -> to : 1
from the source -> return : 1
from the source -> and : 1
from the source -> combine : 1
the source sequences -> in : 1
source sequences in -> this : 1
in this this -> asynchronous : 1
this this asynchronous -> nature : 1
this asynchronous nature -> is : 1
asynchronous nature is -> achieved : 1
nature is achieved -> by : 1
is achieved by -> not : 1
is achieved by -> following : 1
is achieved by -> enforcing : 1
is achieved by -> the : 1
achieved by not -> blocking : 1
by not blocking -> the : 1
not blocking the -> but : 1
blocking the but -> rather : 1
the but rather -> making : 1
but rather making -> it : 1
rather making it -> react : 1
making it react -> to : 1
it react to -> the : 1
react to the -> as : 1
react to the -> another : 1
to the as -> you : 1
to the as -> the : 1
the as you -> can : 1
as you can -> employing : 1
as you can -> the : 1
you can employing -> this : 1
can employing this -> push : 1
employing this push -> pattern : 1
this push pattern -> is : 1
push pattern is -> more : 1
pattern is more -> beneficial : 1
is more beneficial -> in : 1
more beneficial in -> rich : 1
beneficial in rich -> ui : 1
in rich ui -> environments : 1
rich ui environments -> where : 1
ui environments where -> you : 1
environments where you -> want : 1
where you want -> to : 2
where you want -> a : 1
you want to -> block : 1
you want to -> know : 1
want to block -> the : 1
to block the -> main : 1
to block the -> this : 1
block the main -> ui : 1
the main ui -> thread : 1
main ui thread -> while : 1
ui thread while -> waiting : 1
thread while waiting -> for : 1
while waiting for -> some : 1
waiting for some -> this : 1
for some this -> becomes : 1
some this becomes -> thus : 1
this becomes thus -> making : 1
becomes thus making -> reactive : 1
thus making reactive -> programs : 1
making reactive programs -> you : 1
reactive programs you -> take : 1
programs you take -> a : 1
you take a -> closer : 2
take a closer -> there : 1
take a closer -> all : 1
a closer there -> is : 1
closer there is -> only : 1
there is only -> a : 1
is only a -> subtle : 1
only a subtle -> difference : 1
a subtle difference -> between : 1
subtle difference between -> these : 1
difference between these -> two : 1
between these two -> can : 1
these two can -> be : 1
two can be -> considered : 1
be considered the -> equivalent : 1
be considered the -> canonical : 1
considered the equivalent -> of : 1
the equivalent of -> the : 1
equivalent of the -> in : 1
equivalent of the -> expression : 1
of the in -> they : 1
of the in -> to : 1
of the in -> classic : 1
of the in -> this : 1
of the in -> a : 1
of the in -> our : 1
of the in -> some : 1
the in they -> are : 1
in they are -> when : 1
in they are -> as : 1
they are when -> two : 1
are when two -> entities : 1
when two entities -> exchange : 1
two entities exchange -> one : 1
entities exchange one -> pull : 1
exchange one pull -> corresponds : 1
one pull corresponds -> to : 1
pull corresponds to -> another : 1
corresponds to another -> entity : 1
to another entity -> pushing : 1
another entity pushing -> the : 1
entity pushing the -> this : 1
pushing the this -> duality : 1
the this duality -> is : 1
this duality is -> illustrated : 1
duality is illustrated -> in : 1
is illustrated in -> the : 1
illustrated in the -> following : 1
the following understand -> this : 1
following understand this -> duality : 1
understand this duality -> by : 1
this duality by -> looking : 1
duality by looking -> at : 1
by looking at -> this : 1
looking at this -> sample : 1
at this sample -> a : 1
this sample a -> number : 1
sample a number -> sequence : 1
a number sequence -> have : 1
number sequence have -> striven : 1
sequence have striven -> to : 1
have striven to -> use : 1
striven to use -> classic : 1
to use classic -> constructs : 1
use classic constructs -> to : 1
classic constructs to -> write : 1
constructs to write -> programs : 1
to write programs -> for : 1
to write programs -> that : 1
write programs for -> this : 1
programs for this -> particular : 1
for this particular -> chapter : 1
for this particular -> implementation : 1
for this particular -> we : 1
this particular chapter -> as : 1
this particular chapter -> and : 1
particular chapter as -> there : 1
chapter as there -> are : 1
as there are -> chapters : 1
as there are -> cases : 1
there are chapters -> on : 1
are chapters on -> modern : 1
chapters on modern -> language : 1
on modern language -> language : 1
modern language language -> level : 1
language language level -> and : 1
language level and -> related : 1
level and related -> topics : 1
and related topics -> for : 1
related topics for -> implementing : 1
topics for implementing -> reactive : 1
for implementing reactive -> constructs : 1
implementing reactive constructs -> in : 1
constructs in modern -> namespace : 1
in modern namespace -> concreteenumberable : 1
modern namespace concreteenumberable -> public : 1
namespace concreteenumberable public -> int : 1
concreteenumberable public int -> int : 1
public int int -> class : 1
public int int -> bool : 1
int int class -> enumerator : 1
int class enumerator -> public : 1
class enumerator public -> int : 1
enumerator public int -> int : 1
int int bool -> return : 1
int int bool -> for : 1
int bool return -> index : 1
bool return index -> ideally : 1
return index ideally -> the : 1
index ideally the -> next : 1
ideally the next -> function : 1
the next function -> should : 1
next function should -> an : 1
function should an -> it : 1
should an it -> just : 1
an it just -> returns : 1
it just returns -> when : 1
just returns when -> the : 1
returns when the -> bound : 1
returns when the -> mouse : 1
when the bound -> has : 1
the bound has -> int : 1
bound has int -> return : 1
has int return -> return : 1
int return return -> new : 1
return return new -> preceding : 1
return new preceding -> class : 1
new preceding class -> takes : 1
preceding class takes -> an : 1
class takes an -> array : 1
takes an array -> of : 2
an array of -> integers : 1
an array of -> filters : 1
an array of -> as : 1
an array of -> the : 2
an array of -> keys : 2
an array of -> json : 1
array of integers -> as : 1
of integers as -> a : 1
integers as a -> parameter : 1
as a parameter -> and : 6
as a parameter -> or : 1
as a parameter -> to : 1
as a parameter -> with : 1
a parameter and -> we : 1
a parameter and -> chain : 1
a parameter and -> the : 1
a parameter and -> returns : 2
a parameter and -> calls : 1
parameter and we -> can : 1
and we can -> enumerate : 1
and we can -> apply : 1
and we can -> delegate : 1
and we can -> invoke : 1
and we can -> place : 1
and we can -> now : 1
can enumerate over -> the : 1
enumerate over the -> elements : 1
over the elements -> as : 1
the elements as -> we : 1
elements as we -> have : 1
as we have -> implemented : 1
as we have -> seen : 2
as we have -> also : 1
we have implemented -> the : 1
we have implemented -> conversion : 1
we have implemented -> an : 1
have implemented the -> logic : 1
implemented the logic -> is : 1
the logic is -> implemented : 1
the logic is -> ad : 1
logic is implemented -> by : 1
by the nested -> which : 1
the nested which -> implements : 1
nested which implements -> int : 1
which implements int -> has : 1
implements int has -> used : 1
int has used -> raw : 1
has used raw -> pointers : 1
used raw pointers -> on : 1
raw pointers on -> purpose : 1
pointers on purpose -> here : 1
on purpose here -> as : 1
purpose here as -> we : 1
here as we -> not : 1
as we not -> introduced : 1
we not introduced -> using : 1
not introduced using -> will : 1
introduced using will -> be : 1
using will be -> need : 1
will be need -> to : 1
be need to -> use : 1
need to use -> boost : 1
need to use -> the : 1
need to use -> a : 1
to use boost -> library : 1
use boost library -> an : 1
boost library an -> concreteenumberable : 1
library an concreteenumberable -> new : 1
an concreteenumberable new -> numbers : 1
concreteenumberable new numbers -> while : 1
new numbers while -> cout : 1
numbers while cout -> delete : 1
while cout delete -> return : 1
cout delete return -> main : 1
delete return main -> program : 1
return main program -> instantiates : 1
main program instantiates -> an : 1
program instantiates an -> implementation : 1
instantiates an implementation -> of : 1
implementation of class -> and : 1
implementation of class -> t : 1
implementation of class -> class : 1
of class and -> walks : 1
class and walks -> through : 1
and walks through -> each : 1
walks through each -> will : 1
through each will -> write : 1
each will write -> an : 1
write an even -> number : 2
an even number -> sequence : 1
an even number -> is : 1
an even number -> into : 1
even number sequence -> generator : 1
number sequence generator -> to : 1
sequence generator to -> demonstrate : 1
generator to demonstrate -> how : 1
to demonstrate how -> these : 1
to demonstrate how -> basic : 1
demonstrate how these -> data : 1
how these data -> types : 1
these data types -> work : 1
data types work -> together : 1
types work together -> in : 1
work together in -> converting : 1
work together in -> discuss : 1
together in converting -> a : 1
in converting a -> program : 1
converting a program -> to : 1
a program to -> a : 1
a program to -> demonstrate : 1
a program to -> see : 1
a program to -> print : 1
program to a -> push : 1
to a push -> the : 1
a push the -> robustness : 1
push the robustness -> aspect : 1
the robustness aspect -> is : 1
robustness aspect is -> given : 1
aspect is given -> low : 1
is given low -> priority : 1
given low priority -> to : 1
low priority to -> keep : 1
priority to keep -> the : 1
to keep the -> listing : 4
to keep the -> code : 1
keep the listing -> namespace : 1
keep the listing -> bool : 1
keep the listing -> and : 1
keep the listing -> write : 1
the listing namespace -> evennumberobservable : 1
listing namespace evennumberobservable -> int : 1
namespace evennumberobservable int -> int : 1
evennumberobservable int int -> bool : 1
int bool for -> i : 1
bool for i -> i : 1
for i i -> if : 4
for i i -> void : 1
for i i -> myfact : 1
for i i -> i : 11
i i if -> return : 2
i i if -> try : 2
i if return -> preceding : 1
i if return -> writing : 1
if return preceding -> program : 1
return preceding program -> takes : 1
preceding program takes -> an : 1
program takes an -> array : 1
array of filters -> out : 1
of filters out -> of : 1
filters out of -> the : 1
of the odd -> and : 1
the odd and -> if : 1
odd and if -> an : 1
and if an -> even : 1
if an even -> integer : 1
an even integer -> is : 1
even integer is -> in : 1
integer is in -> this : 1
is in this -> particular : 1
is in this -> the : 1
this particular the -> data : 1
particular the data -> source : 1
source is pushing -> data : 1
is pushing data -> the : 1
pushing data the -> implementation : 1
data the implementation -> of : 1
the implementation of -> is : 2
the implementation of -> pattern : 1
the implementation of -> this : 1
the implementation of -> function : 1
the implementation of -> the : 5
implementation of is -> given : 1
implementation of is -> limited : 1
of is given -> as : 1
is given as -> simpleobserver : 1
given as simpleobserver -> public : 1
as simpleobserver public -> void : 1
simpleobserver public void -> cout : 1
public void cout -> value : 1
void cout value -> void : 1
cout value void -> cout : 1
value void cout -> void : 1
void cout void -> customexception : 1
cout void customexception -> implements : 1
void customexception implements -> interface : 1
customexception implements interface -> and : 1
implements interface and -> it : 1
it has the -> capability : 1
it has the -> following : 1
has the capability -> to : 1
the capability to -> receive : 1
capability to receive -> notifications : 1
notifications and react -> to : 1
and react to -> int : 1
react to int -> evennumberobservable : 1
to int evennumberobservable -> new : 1
int evennumberobservable new -> new : 1
evennumberobservable new new -> delete : 1
new new delete -> delete : 1
new delete delete -> return : 2
delete delete return -> the : 1
delete delete return -> int : 1
delete return the -> preceding : 1
return the preceding -> you : 1
return the preceding -> two : 1
the preceding you -> see : 1
the preceding you -> can : 1
preceding you see -> how : 1
you see how -> one : 1
you see how -> the : 1
see how one -> can : 1
how one can -> naturally : 1
how one can -> convert : 1
how one can -> enable : 1
how one can -> create : 1
how one can -> read : 1
one can naturally -> subscribe : 1
can naturally subscribe -> for : 1
naturally subscribe for -> even : 1
subscribe for even -> numbers : 1
for even numbers -> from : 1
even numbers from -> an : 1
numbers from an -> observable : 1
from an observable -> sequence : 1
an observable sequence -> of : 1
observable sequence of -> natural : 1
sequence of natural -> the : 1
of natural the -> system : 1
natural the system -> will : 1
the system will -> automatically : 1
system will automatically -> the : 1
will automatically the -> values : 1
automatically the values -> to : 1
the values to -> the : 1
values to the -> when : 1
values to the -> console : 1
to the when -> an : 1
to the when -> we : 1
the when an -> even : 1
the when an -> error : 1
when an even -> number : 1
even number is -> the : 1
number is the -> code : 1
number is the -> event : 1
number is the -> output : 1
is the code -> gives : 1
the code gives -> explicit : 1
code gives explicit -> implementations : 1
gives explicit implementations -> for : 1
explicit implementations for -> key : 1
implementations for key -> interfaces : 1
for key interfaces -> so : 1
key interfaces so -> that : 1
interfaces so that -> one : 1
so that one -> can : 1
that one can -> or : 1
that one can -> write : 1
one can or -> speculate : 1
can or speculate -> what : 1
or speculate what -> really : 1
speculate what really -> happens : 1
what really happens -> under : 1
really happens under -> the : 1
happens under the -> events : 1
under the events -> to : 1
the events to -> have : 1
the events to -> a : 1
the events to -> the : 1
events to have -> now : 1
to have now -> understood : 1
have now understood -> how : 1
now understood how -> one : 1
understood how one -> can : 1
one can convert -> an : 1
can convert an -> pull : 1
can convert an -> stl : 1
convert an pull -> program : 1
an pull program -> to : 1
pull program to -> an : 1
program to an -> push : 1
to an push -> in : 1
an push in -> real : 1
push in real -> the : 1
in real the -> event : 1
real the event -> source : 1
event source is -> not : 1
event source is -> supposed : 1
source is not -> as : 1
is not as -> simple : 1
not as simple -> as : 1
as simple as -> we : 1
simple as we -> found : 1
as we found -> in : 1
we found in -> the : 1
found in the -> number : 1
in the number -> stream : 1
the number stream -> example : 1
number stream example -> given : 1
stream example given -> let : 1
example given let -> us : 1
given let us -> see : 1
let us see -> how : 1
us see how -> we : 1
see how we -> can : 2
we can convert -> a : 1
we can convert -> an : 1
can convert a -> event : 1
can convert a -> cold : 1
convert a event -> into : 1
a event into -> a : 1
event into a -> stream : 1
into a stream -> with : 1
into a stream -> for : 1
a stream with -> a : 1
stream with a -> small : 1
with a small -> mfc : 1
a small mfc -> have : 1
small mfc have -> chosen : 1
mfc have chosen -> mfc : 1
have chosen mfc -> for : 1
chosen mfc for -> this : 1
mfc for this -> particular : 1
this particular implementation -> because : 1
particular implementation because -> we : 1
implementation because we -> have : 1
we have a -> chapter : 1
we have a -> virtual : 1
we have a -> better : 1
we have a -> functional : 1
we have a -> choice : 1
have a chapter -> dedicated : 1
a chapter dedicated -> to : 1
chapter dedicated to -> reactive : 1
dedicated to reactive -> in : 1
to reactive in -> that : 1
reactive in that -> we : 1
in that we -> will : 1
in that we -> learned : 1
will be implementing -> reactive : 1
be implementing reactive -> programs : 1
implementing reactive programs -> in : 1
reactive programs in -> idiomatic : 1
reactive programs in -> the : 1
programs in idiomatic -> asynchronous : 1
in idiomatic asynchronous -> in : 1
idiomatic asynchronous in -> this : 1
asynchronous in this -> mfc : 1
in this mfc -> we : 1
this mfc we -> simply : 1
mfc we simply -> do : 1
we simply do -> a : 1
simply do a -> filtering : 1
do a filtering -> operation : 1
a filtering operation -> to : 1
filtering operation to -> see : 1
operation to see -> whether : 1
to see whether -> the : 2
to see whether -> invariants : 1
see whether the -> mouse : 1
see whether the -> value : 1
whether the mouse -> is : 1
whether the mouse -> position : 1
the mouse is -> moving : 1
the mouse is -> we : 1
mouse is moving -> in : 1
is moving in -> a : 1
moving in a -> bounding : 1
in a bounding -> rectangle : 1
a bounding rectangle -> if : 1
bounding rectangle if -> notify : 1
rectangle if notify -> the : 1
if notify the -> we : 1
notify the we -> are : 1
the we are -> using : 2
the we are -> passing : 1
the we are -> planning : 1
the we are -> only : 1
we are using -> synchronous : 1
we are using -> the : 2
we are using -> an : 1
we are using -> constructs : 1
we are using -> fire : 1
we are using -> here : 2
we are using -> and : 1
we are using -> smart : 1
we are using -> a : 1
we are using -> external : 1
are using synchronous -> dispatch : 1
using synchronous dispatch -> this : 1
synchronous dispatch this -> example : 1
dispatch this example -> is : 1
this example is -> synchronous : 1
example is synchronous -> namespace : 1
is synchronous namespace -> cmouseframe : 1
synchronous namespace cmouseframe -> rect : 1
namespace cmouseframe rect -> point : 1
cmouseframe rect point -> hbrush : 1
rect point hbrush -> brush : 1
point hbrush brush -> cstring : 1
hbrush brush cstring -> mywindow : 1
brush cstring mywindow -> clock : 1
cstring mywindow clock -> by : 1
mywindow clock by -> praseed : 1
clock by praseed -> preceding : 1
by praseed preceding -> part : 1
praseed preceding part -> of : 1
preceding part of -> the : 1
of the code -> defines : 1
of the code -> given : 1
of the code -> for : 1
of the code -> is : 2
of the code -> will : 2
of the code -> may : 1
the code defines -> a : 1
code defines a -> class : 1
defines a class -> that : 1
a class that -> derives : 1
a class that -> wraps : 1
a class that -> mimics : 1
a class that -> returns : 1
a class that -> will : 1
a class that -> can : 1
a class that -> aggregates : 1
a class that -> emits : 1
a class that -> decouples : 1
class that derives -> from : 1
that derives from -> the : 1
derives from the -> library : 1
from the library -> the : 1
from the library -> and : 1
from the library -> github : 1
the library the -> class : 1
library the class -> and : 1
the class and -> also : 1
the class and -> display : 1
class and also -> implements : 1
and also implements -> interface : 1
also implements interface -> to : 1
implements interface to -> force : 1
interface to force -> the : 1
to force the -> programmer : 1
force the programmer -> to : 1
the programmer to -> implement : 1
the programmer to -> obey : 1
programmer to implement -> a : 1
to implement a -> vector : 1
implement a vector -> of : 1
a vector of -> will : 1
vector of will -> store : 1
of will store -> the : 1
will store the -> list : 2
will store the -> result : 1
store the list -> of : 2
the list of -> or : 1
the list of -> when : 1
the list of -> subscribers : 2
the list of -> sinks : 1
the list of -> values : 1
the list of -> files : 2
list of or -> for : 1
of or for -> this : 1
or for this -> we : 1
for this we -> will : 1
this we will -> have : 1
this we will -> cover : 7
this we will -> deal : 1
this we will -> implement : 1
this we will -> discuss : 1
this we will -> parallelism : 1
this we will -> gof : 1
this we will -> revisit : 1
this we will -> call : 1
this we will -> look : 1
this we will -> the : 1
this we will -> write : 2
this we will -> in : 1
this we will -> quick : 1
this we will -> create : 2
this we will -> take : 1
we will have -> only : 1
we will have -> an : 1
we will have -> lots : 1
will have only -> one : 1
have only one -> there : 1
only one there -> is : 1
one there is -> no : 1
is no restriction -> on : 1
no restriction on -> the : 1
restriction on the -> number : 1
on the number -> of : 3
the number of -> the : 1
the number of -> given : 1
the number of -> arguments : 1
the number of -> positive : 1
the number of -> threads : 4
the number of -> cpu : 1
the number of -> elements : 1
the number of -> parameters : 1
the number of -> available : 1
the number of -> items : 2
the number of -> visitors : 1
the number of -> node : 1
the number of -> int : 1
number of the -> virtual : 1
of the virtual -> bool : 1
of the virtual -> machine : 1
of the virtual -> methods : 1
the virtual bool -> return : 1
virtual bool return -> method : 1
virtual bool return -> isdir : 1
bool return method -> just : 1
return method just -> stores : 1
method just stores -> the : 1
just stores the -> reference : 1
just stores the -> name : 1
stores the reference -> to : 1
the reference to -> the : 2
reference to the -> onto : 1
reference to the -> and : 1
reference to the -> but : 1
reference to the -> internal : 1
reference to the -> actual : 1
reference to the -> producer : 1
reference to the -> consumers : 1
to the onto -> a : 1
the onto a -> vector : 1
onto a vector -> and : 1
a vector and -> returns : 1
vector and returns -> when : 1
and returns when -> the : 1
when the mouse -> is : 1
mouse is we -> get : 1
is we get -> notification : 1
we get notification -> from : 1
get notification from -> the : 1
notification from the -> library : 1
notification from the -> create : 1
notification from the -> source : 2
the library and -> if : 1
the library and -> both : 1
the library and -> its : 1
library and if -> it : 1
and if it -> is : 1
if it is -> in : 1
if it is -> to : 1
if it is -> not : 1
it is in -> a : 1
is in a -> rectangular : 1
is in a -> book : 1
is in a -> we : 1
in a rectangular -> be : 1
a rectangular be -> notified : 1
rectangular be notified -> notification : 1
be notified notification -> code : 1
notified notification code -> is : 1
notification code is -> as : 1
code is as -> bool : 1
code is as -> that : 1
code is as -> count : 1
is as bool -> it : 1
as bool it -> while : 1
bool it while -> in : 1
it while in -> a : 1
while in a -> real : 1
in a real -> world : 1
in a real -> the : 1
a real world -> rx : 1
real world rx -> programs : 1
world rx programs -> there : 1
rx programs there -> is : 1
programs there is -> a : 1
is a sequence -> stipulated : 1
a sequence stipulated -> to : 1
sequence stipulated to -> call : 1
stipulated to call -> oncompleted : 1
to call oncompleted -> will : 1
call oncompleted will -> be : 1
oncompleted will be -> called : 1
will be called -> only : 1
will be called -> on : 1
will be called -> return : 1
will be called -> nineteen : 1
will be called -> with : 1
will be called -> multiple : 1
will be called -> when : 1
be called only -> when : 1
called only when -> all : 1
only when all -> the : 1
when all the -> data : 1
all the data -> is : 1
all the data -> emitted : 1
all the data -> events : 1
the data is -> is : 1
the data is -> represented : 1
the data is -> the : 3
data is is -> written : 1
is is written -> to : 1
written to demonstrate -> the : 1
to demonstrate the -> call : 1
to demonstrate the -> use : 2
to demonstrate the -> usage : 2
to demonstrate the -> whole : 1
to demonstrate the -> gof : 1
to demonstrate the -> functioning : 1
to demonstrate the -> pattern : 1
to demonstrate the -> various : 1
to demonstrate the -> working : 1
demonstrate the call -> return : 1
the call return -> method : 1
call return method -> walks : 1
return method walks -> through : 1
method walks through -> the : 1
walks through the -> and : 1
walks through the -> graph : 1
through the and -> calls : 1
the and calls -> the : 1
and calls the -> method : 2
calls the method -> of : 3
calls the method -> to : 1
the method of -> the : 2
the method of -> each : 1
the method of -> second : 1
the method of -> expr : 1
the method of -> looking : 1
the method of -> consumers : 1
method of the -> it : 1
method of the -> a : 1
of the it -> also : 1
of the it -> is : 1
the it also -> calls : 1
it also calls -> the : 1
also calls the -> method : 1
method of each -> instance : 1
of each instance -> of : 1
each instance of -> the : 2
instance of the -> rx : 1
instance of the -> template : 1
instance of the -> associated : 1
instance of the -> standard : 1
instance of the -> composite : 1
instance of the -> visitor : 1
instance of the -> streamulus : 1
instance of the -> the : 1
instance of the -> gravity : 1
instance of the -> mediator : 1
instance of the -> eventbus : 1
instance of the -> an : 1
instance of the -> events : 1
instance of the -> server : 2
instance of the -> resources : 1
the rx dispatching -> mechanism : 1
rx dispatching mechanism -> follows : 1
dispatching mechanism follows -> certain : 1
mechanism follows certain -> rules : 1
follows certain rules -> while : 1
certain rules while -> calling : 1
rules while calling -> the : 1
while calling the -> if : 1
calling the if -> method : 1
the if method -> is : 1
if method is -> no : 1
method is no -> more : 1
no more will -> be : 1
more will be -> called : 1
be called on -> the : 1
called on the -> same : 1
the same is -> no : 1
same is no -> further : 1
is no further -> messages : 1
no further messages -> will : 1
further messages will -> be : 1
will be dispatched -> to : 1
be dispatched to -> the : 1
dispatched to the -> if : 1
dispatched to the -> subscribers : 1
to the if -> we : 1
to the if -> a : 1
to the if -> there : 1
the if we -> need : 1
the if we -> place : 1
if we need -> to : 1
need to follow -> the : 1
need to follow -> these : 1
follow the conventions -> stipulated : 1
the conventions stipulated -> by : 1
conventions stipulated by -> the : 1
stipulated by the -> rx : 1
by the rx -> model : 1
the rx model -> the : 1
rx model the -> listing : 1
model the listing -> will : 1
the listing will -> get : 1
listing will get -> the : 1
will get the -> purpose : 1
will get the -> method : 1
will get the -> it : 1
will get the -> pattern : 1
get the purpose -> of : 1
purpose of the -> code : 1
purpose of the -> following : 1
the code given -> here : 2
code given here -> is : 2
given here is -> to : 2
given here is -> only : 1
given here is -> meant : 1
here is to -> show : 1
here is to -> set : 1
is to show -> how : 1
is to show -> the : 1
to show how -> the : 1
to show how -> you : 1
show how the -> rx : 1
programming model works -> in : 1
model works in -> a : 1
works in a -> schematic : 1
in a schematic -> int : 1
a schematic int -> return : 1
schematic int return -> void : 1
int return void -> method : 1
return void method -> is : 1
void method is -> invoked : 1
method is invoked -> to : 2
method is invoked -> by : 1
is invoked to -> set : 1
is invoked to -> trigger : 1
invoked to set -> the : 1
to set the -> current : 1
to set the -> state : 1
to set the -> flag : 1
to set the -> context : 1
set the current -> point : 2
the current point -> where : 1
the current point -> by : 1
current point where -> the : 1
point where the -> text : 1
where the text -> has : 1
the text has -> to : 1
text has to -> be : 1
has to be -> the : 1
has to be -> comfortable : 1
has to be -> read : 1
has to be -> changed : 1
has to be -> linearized : 1
has to be -> written : 2
has to be -> flattened : 1
has to be -> familiar : 1
to be the -> method : 1
to be the -> same : 1
to be the -> can : 1
be the method -> is : 1
the method is -> invoked : 1
the method is -> we : 1
invoked to trigger -> a : 1
to trigger a -> message : 1
to trigger a -> computational : 1
trigger a message -> and : 1
a message and -> subsystem : 1
message and subsystem -> will : 1
and subsystem will -> route : 1
subsystem will route -> it : 1
will route it -> to : 1
route it to -> it : 1
it to it -> is : 1
to it is -> wired : 1
to it is -> destroyed : 1
it is wired -> in : 1
is wired in -> the : 1
wired in the -> void : 1
in the void -> cpaintdc : 1
the void cpaintdc -> cbrush : 1
void cpaintdc cbrush -> int : 1
cpaintdc cbrush int -> crect : 1
cbrush int crect -> cpen : 1
int crect cpen -> char : 1
crect cpen char -> reactive : 1
cpen char reactive -> cfont : 1
char reactive cfont -> new : 1
reactive cfont new -> crgn : 1
cfont new crgn -> method : 1
new crgn method -> is : 1
crgn method is -> invoked : 1
is invoked by -> the : 1
invoked by the -> framework : 1
invoked by the -> thread : 1
invoked by the -> http : 1
by the framework -> when : 1
the framework when -> the : 1
framework when the -> call : 1
when the call -> is : 1
when the call -> to : 1
the call is -> the : 1
call is the -> method : 1
is the method -> draws : 1
the method draws -> the : 1
method draws the -> reactive : 1
draws the reactive -> on : 1
the reactive on -> the : 1
reactive on the -> void : 1
on the void -> int : 1
the void int -> int : 1
void int int -> width : 1
int int width -> height : 1
int width height -> height : 1
width height height -> method : 1
height height method -> computes : 1
height method computes -> the : 1
method computes the -> bound : 1
computes the bound -> of : 1
the bound of -> the : 1
bound of the -> client : 1
of the client -> area : 1
of the client -> side : 1
the client area -> of : 1
client area of -> the : 1
area of the -> and : 1
of the and -> converts : 1
of the and -> it : 1
of the and -> functions : 1
of the and -> axiology : 1
of the and -> the : 1
of the and -> if : 1
of the and -> which : 1
of the and -> position : 1
of the and -> we : 1
the and converts -> coordinates : 1
and converts coordinates -> to : 1
converts coordinates to -> devise : 1
coordinates to devise -> this : 1
to devise this -> computation : 1
devise this computation -> can : 1
this computation can -> be : 1
computation can be -> better : 1
can be better -> done : 1
be better done -> through : 1
better done through -> world : 1
done through world -> coordinate : 1
through world coordinate -> void : 1
world coordinate void -> cpoint : 1
coordinate void cpoint -> int : 1
void cpoint int -> crect : 1
cpoint int crect -> point : 1
int crect point -> in : 1
crect point in -> a : 1
point in a -> real : 1
a real the -> points : 1
real the points -> will : 1
the points will -> be : 1
points will be -> into : 1
will be into -> a : 1
be into a -> list : 1
into a list -> if : 1
into a list -> is : 1
into a list -> sequence : 1
into a list -> and : 2
a list if -> ideally : 1
list if ideally -> speaking : 1
if ideally speaking -> this : 1
ideally speaking this -> notification : 1
speaking this notification -> has : 1
this notification has -> to : 1
notification has to -> through : 1
has to through -> a : 1
to through a -> non : 1
through a non -> blocking : 1
a non blocking -> method : 1
non blocking method -> checks : 1
blocking method checks -> whether : 1
method checks whether -> the : 1
checks whether the -> mouse : 1
the mouse position -> is : 1
mouse position is -> within : 1
position is within -> a : 1
is within a -> rectangle : 1
within a rectangle -> centered : 1
a rectangle centered -> inside : 1
rectangle centered inside -> the : 1
centered inside the -> screen : 1
inside the screen -> and : 1
the screen and -> fires : 1
screen and fires -> the : 1
and fires the -> notification : 1
fires the notification -> to : 1
the notification to -> the : 1
notification to the -> windowhandler : 1
to the windowhandler -> public : 1
the windowhandler public -> cmouseframe : 1
windowhandler public cmouseframe -> virtual : 1
public cmouseframe virtual -> window : 1
cmouseframe virtual window -> virtual : 1
virtual window virtual -> void : 1
window virtual void -> virtual : 1
virtual void if -> preceding : 1
void if preceding -> class : 1
if preceding class -> implements : 1
preceding class implements -> and : 1
class implements and -> handles : 1
implements and handles -> the : 1
and handles the -> event : 1
handles the event -> notified : 1
the event notified -> which : 1
event notified which -> implements : 1
notified which implements -> in : 1
which implements in -> this : 1
implements in this -> canned : 1
in this canned -> we : 1
this canned we -> set : 1
canned we set -> the : 1
we set the -> current : 1
current point by -> invoking : 1
point by invoking -> method : 1
by invoking method -> to : 1
invoking method to -> draw : 1
method to draw -> the : 1
to draw the -> string : 1
draw the string -> at : 1
the string at -> the : 1
string at the -> mouse : 1
at the mouse -> cmouseapp : 1
the mouse cmouseapp -> windowhandler : 1
mouse cmouseapp windowhandler -> int : 1
cmouseapp windowhandler int -> cmouseframe : 1
windowhandler int cmouseframe -> new : 1
int cmouseframe new -> new : 1
cmouseframe new new -> wire : 1
new new wire -> the : 1
new wire the -> observer : 1
wire the observer -> to : 1
the observer to -> the : 1
observer to the -> event : 1
observer to the -> stream : 1
the event which -> implements : 1
event which implements -> return : 1
which implements return -> virtual : 1
implements return virtual -> if : 1
return virtual if -> delete : 1
virtual if delete -> philosophy : 1
if delete philosophy -> of : 1
delete philosophy of -> our : 1
of our purpose -> of : 1
our purpose of -> this : 1
purpose of this -> chapter : 3
of this chapter -> is : 4
of this chapter -> and : 1
of this chapter -> will : 1
chapter is to -> introduce : 2
chapter is to -> cover : 1
chapter is to -> highlight : 1
is to introduce -> readers : 1
is to introduce -> how : 1
to introduce readers -> to : 1
introduce readers to -> the : 1
readers to the -> key : 1
readers to the -> right : 1
to the key -> interfaces : 1
interfaces of the -> mode : 1
of the mode -> they : 1
the mode they -> and : 1
mode they and -> they : 1
they and they -> are : 1
and they are -> in : 1
and they are -> not : 1
and they are -> mostly : 1
and they are -> completely : 1
and they are -> for : 1
and they are -> scheduled : 1
they are in -> fact : 1
they are in -> the : 1
are in fact -> the : 1
in fact the -> duals : 1
fact the duals -> of : 1
the duals of -> and : 1
duals of and -> we : 1
of and we -> learned : 1
and we learned -> how : 1
we learned how -> to : 8
we learned how -> oop : 1
learned how to -> model : 2
learned how to -> synchronize : 1
learned how to -> execute : 1
learned how to -> write : 2
learned how to -> create : 2
learned how to -> flatten : 1
learned how to -> enable : 1
learned how to -> handle : 1
learned how to -> expose : 1
how to model -> those : 1
how to model -> a : 1
to model those -> interfaces : 1
model those interfaces -> in : 1
those interfaces in -> classic : 1
interfaces in classic -> and : 1
in classic and -> had : 1
classic and had -> toy : 1
and had toy -> implementations : 1
had toy implementations -> of : 1
toy implementations of -> all : 1
implementations of all -> of : 1
of all of -> we : 1
of all of -> the : 1
all of we -> implemented : 1
of we implemented -> a : 1
we implemented a -> gui : 1
implemented a gui -> program : 1
a gui program -> that : 1
gui program that -> captures : 1
program that captures -> mouse : 1
that captures mouse -> movements : 1
captures mouse movements -> and : 1
mouse movements and -> notifies : 1
movements and notifies -> a : 1
and notifies a -> list : 1
notifies a list -> of : 1
a list of -> these : 1
a list of -> types : 1
a list of -> once : 3
a list of -> values : 1
a list of -> filtering : 1
a list of -> further : 1
a list of -> to : 1
a list of -> files : 1
a list of -> for : 1
a list of -> pairs : 1
list of these -> toy : 1
of these toy -> implementations : 1
these toy implementations -> are : 1
toy implementations are -> to : 1
implementations are to -> get : 1
are to get -> our : 1
to get our -> feet : 2
get our feet -> wet : 1
get our feet -> stream : 1
our feet wet -> with : 1
feet wet with -> the : 1
wet with the -> ideas : 1
with the ideas -> and : 1
the ideas and -> ideals : 1
ideas and ideals -> of : 1
and ideals of -> the : 1
ideals of the -> our : 1
of the our -> implementations : 1
the our implementations -> can : 1
our implementations can -> be : 1
implementations can be -> considered : 1
considered as implementing -> of : 1
as implementing of -> reactive : 1
implementing of reactive -> be : 1
of reactive be -> proficient : 1
reactive be proficient -> in : 1
be proficient in -> reactive : 1
proficient in reactive -> a : 1
in reactive a -> programmer : 1
reactive a programmer -> has : 2
a programmer has -> to : 5
programmer has to -> be : 2
programmer has to -> understand : 1
programmer has to -> conform : 1
programmer has to -> undergo : 1
to be comfortable -> with : 2
be comfortable with -> the : 1
be comfortable with -> while : 1
be comfortable with -> it : 1
be comfortable with -> template : 1
comfortable with the -> following : 1
with the following -> linguistic : 1
with the following -> set : 1
with the following -> rebuild : 1
with the following -> resuming : 1
the following linguistic -> constructs : 1
following linguistic constructs -> provided : 1
linguistic constructs provided -> by : 1
constructs provided by -> modern : 2
provided by modern -> programming : 2
by modern programming -> constructs : 1
by modern programming -> handles : 1
modern programming constructs -> provided : 1
programming constructs provided -> by : 1
modern programming handles -> it : 1
programming handles it -> for : 1
handles it for -> stream : 1
it for stream -> of : 1
for stream of -> libraries : 1
stream of libraries -> such : 1
such as of -> rxcpp : 1
as of rxcpp -> in : 1
of rxcpp in -> gui : 1
rxcpp in gui -> and : 1
in gui and -> web : 1
gui and web -> reactive : 1
and web reactive -> programming : 1
web reactive programming -> errors : 1
reactive programming errors -> and : 1
programming errors and -> chapter : 1
errors and chapter -> was : 1
and chapter was -> mostly : 1
chapter was mostly -> about : 1
was mostly about -> key : 1
mostly about key -> idioms : 1
about key idioms -> and : 1
key idioms and -> why : 1
idioms and why -> we : 1
and why we -> require : 1
why we require -> a : 1
we require a -> robust : 1
require a robust -> model : 1
a robust model -> for : 1
robust model for -> handling : 1
model for handling -> asynchronous : 1
for handling asynchronous -> the : 1
handling asynchronous the -> next : 1
asynchronous the next -> three : 1
the next three -> chapters : 1
next three chapters -> will : 1
three chapters will -> cover : 1
chapters will cover -> language : 1
chapters will cover -> reactive : 1
will cover language -> features : 1
cover language features -> of : 1
language features of -> modern : 1
features of modern -> handling : 1
features of modern -> versions : 1
features of modern -> programming : 1
of modern handling -> with : 1
modern handling with -> standard : 1
handling with standard -> and : 1
with standard and -> programming : 1
standard and programming -> possible : 1
and programming possible -> by : 1
programming possible by -> memory : 1
possible by memory -> model : 1
by memory model -> the : 1
memory model the -> preceding : 1
model the preceding -> topics : 1
the preceding topics -> will : 1
preceding topics will -> give : 1
topics will give -> the : 1
will give the -> user : 1
give the user -> a : 1
the user a -> firm : 1
user a firm -> foundation : 1
a firm foundation -> from : 1
firm foundation from -> which : 1
foundation from which -> to : 1
from which to -> master : 1
which to master -> functional : 1
to master functional -> reactive : 1
master functional reactive -> to : 1
functional reactive to -> we : 1
reactive to we -> will : 1
we will once -> again : 1
will once again -> return : 1
once again return -> to : 1
again return to -> the : 1
return to the -> topic : 1
return to the -> void : 1
to the topic -> of : 2
topic of observables -> and : 1
of observables and -> implement : 1
of observables and -> execute : 1
observables and implement -> interfaces : 1
and implement interfaces -> in : 1
implement interfaces in -> a : 1
interfaces in a -> functional : 1
in a functional -> manner : 1
a functional manner -> to : 1
functional manner to -> reiterate : 1
manner to reiterate -> some : 1
to reiterate some -> of : 1
reiterate some of -> the : 1
the in to -> event : 1
in to event -> stream : 1
programming using we -> will : 2
programming using we -> started : 1
using we will -> move : 1
using we will -> learn : 1
will move towards -> the : 1
move towards the -> advanced : 1
towards the advanced -> event : 1
the advanced event -> stream : 1
advanced event stream -> processing : 1
event stream processing -> topics : 1
event stream processing -> to : 1
stream processing topics -> with : 1
processing topics with -> the : 1
topics with the -> help : 1
with the help -> of : 8
the help of -> two : 1
the help of -> your : 1
the help of -> one : 1
the help of -> move : 1
the help of -> futures : 1
the help of -> standard : 1
the help of -> atomic : 1
the help of -> sequential : 1
help of two -> libraries : 1
of two libraries -> that : 1
two libraries that -> use : 1
libraries that use -> specific : 1
that use specific -> embedded : 1
use specific embedded -> approach : 1
specific embedded approach -> towards : 1
embedded approach towards -> event : 1
approach towards event -> stream : 1
towards event stream -> the : 1
event stream the -> stage : 1
stream the stage -> will : 1
the stage will -> be : 1
stage will be -> set : 1
will be set -> for : 1
will be set -> and : 1
be set for -> the : 1
set for the -> user : 1
for the user -> to : 1
the user to -> be : 1
the user to -> determine : 1
the user to -> create : 1
the user to -> handle : 1
user to be -> exposed : 1
to be exposed -> to : 1
be exposed to -> the : 1
exposed to the -> rxcpp : 1
exposed to the -> outside : 1
and its nuances -> to : 1
its nuances to -> write : 1
nuances to write -> modern : 1
to write modern -> in : 1
to write modern -> can : 1
write modern in -> to : 1
modern in to -> data : 1
in to data -> flow : 2
the rxcpp and -> the : 1
the rxcpp and -> reactive : 1
rxcpp and the -> key : 1
rxcpp and the -> qt : 1
and the key -> we : 1
the key we -> will : 1
the key we -> subscribe : 1
key we will -> cover : 1
we will cover -> this : 1
we will cover -> most : 1
we will cover -> the : 8
we will cover -> them : 1
we will cover -> and : 1
will cover this -> wonderful : 1
cover this wonderful -> the : 1
this wonderful the -> following : 1
wonderful the following -> chapters : 1
following chapters will -> cover : 1
will cover reactive -> gui : 1
cover reactive gui -> programming : 1
using the qt -> library : 1
using the qt -> gui : 1
using the qt -> framework : 1
using the qt -> creator : 1
the qt library -> and : 1
the qt library -> has : 1
qt library and -> advanced : 1
library and advanced -> operators : 1
and advanced operators -> in : 1
advanced operators in -> last : 1
operators in last -> three : 1
in last three -> chapters : 1
last three chapters -> cover : 1
three chapters cover -> advanced : 1
chapters cover advanced -> topics : 1
cover advanced topics -> of : 1
advanced topics of -> reactive : 1
topics of reactive -> design : 1
of reactive design -> in : 1
reactive design in -> and : 1
design in and -> handling : 1
in and handling -> by : 1
and handling by -> the : 1
handling by the -> end : 1
by the end -> of : 1
the end of -> the : 9
the end of -> before : 1
end of the -> the : 3
end of the -> first : 1
end of the -> before : 1
end of the -> function : 1
end of the -> critical : 1
end of the -> data : 1
end of the -> newly : 1
the the reader -> who : 1
the reader who -> started : 1
reader who started -> with : 1
who started with -> classic : 1
started with classic -> will : 1
with classic will -> have : 1
classic will have -> covered : 1
will have covered -> a : 1
have covered a -> lot : 2
covered a lot -> of : 2
a lot of -> not : 1
a lot of -> new : 1
a lot of -> tricks : 1
a lot of -> modern : 1
a lot of -> background : 1
a lot of -> ground : 1
a lot of -> computing : 1
a lot of -> such : 1
lot of not -> only : 1
of not only -> in : 1
not only in -> writing : 1
only in writing -> reactive : 1
in writing reactive -> programs : 1
writing reactive programs -> but : 1
reactive programs but -> in : 1
programs but in -> the : 1
but in the -> language : 1
but in the -> case : 1
in the language -> because : 1
the language because -> of : 1
language because of -> the : 1
of the nature -> of : 1
the nature of -> the : 1
nature of the -> we : 1
of the we -> will : 3
of the we -> have : 1
of the we -> also : 3
of the we -> are : 1
of the we -> aggregate : 1
of the we -> simply : 1
of the we -> introduced : 1
will cover most -> of : 1
cover most of -> the : 1
of the features -> of : 1
the features of -> the : 1
the features of -> a : 1
features of the -> time : 1
features of the -> language : 1
of the time -> of : 1
the time of -> this : 1
the time of -> it : 1
time of this -> we : 1
of this we -> learned : 1
this we learned -> about : 2
this we learned -> how : 3
we learned about -> some : 1
we learned about -> programming : 1
we learned about -> are : 1
we learned about -> the : 4
we learned about -> concepts : 1
learned about some -> key : 1
about some key -> data : 1
rx programming we -> implemented : 1
programming we implemented -> toy : 1
we implemented toy -> versions : 1
implemented toy versions -> of : 1
toy versions of -> them : 1
versions of them -> to : 1
of them to -> familiarize : 1
of them to -> invoke : 1
them to familiarize -> us : 1
to familiarize us -> with : 1
familiarize us with -> the : 1
with the conceptual -> nuances : 1
the conceptual nuances -> underpinning : 1
conceptual nuances underpinning -> we : 1
nuances underpinning we -> started : 1
underpinning we started -> with : 1
we started with -> how : 1
we started with -> library : 1
we started with -> a : 3
we started with -> observables : 1
started with how -> gui : 1
with how gui -> events : 1
how gui events -> were : 1
gui events were -> handled : 1
events were handled -> by : 1
were handled by -> windows : 1
handled by windows -> xlib : 1
by windows xlib -> and : 1
windows xlib and -> we : 1
xlib and we -> briefly : 1
and we briefly -> touched : 1
we briefly touched -> upon : 1
briefly touched upon -> how : 1
touched upon how -> events : 1
upon how events -> are : 1
handled in as -> a : 1
in as a -> quick : 1
as a quick -> overview : 1
a quick overview -> of : 2
quick overview of -> reactive : 1
quick overview of -> gui : 1
of reactive programming -> was : 1
of reactive programming -> in : 1
of reactive programming -> using : 2
of reactive programming -> stream : 1
of reactive programming -> are : 1
of reactive programming -> is : 1
reactive programming was -> after : 1
programming was after -> introducing : 1
was after introducing -> some : 1
after introducing some -> we : 1
introducing some we -> implemented : 1
some we implemented -> them : 1
we implemented them -> from : 1
implemented them from -> a : 1
them from a -> gui : 1
from a gui -> version : 1
a gui version -> of : 1
gui version of -> these : 1
version of these -> interfaces : 1
of these interfaces -> on : 1
these interfaces on -> top : 1
top of mfc -> was : 1
of mfc was -> implemented : 1
mfc was implemented -> for : 1
was implemented for -> the : 1
implemented for the -> sake : 1
for the sake -> of : 4
the sake of -> also : 1
the sake of -> we : 2
the sake of -> ease : 1
the sake of -> with : 1
sake of also -> dealt : 1
of also dealt -> with : 1
also dealt with -> the : 1
dealt with the -> key : 2
dealt with the -> topic : 1
dealt with the -> patterns : 1
with the key -> philosophical : 1
with the key -> point : 1
the key philosophical -> aspects : 1
key philosophical aspects -> of : 1
philosophical aspects of -> the : 1
the the next -> we : 1
the next we -> will : 13
the next we -> learn : 1
next we will -> make : 1
next we will -> deal : 1
next we will -> learn : 6
next we will -> start : 1
next we will -> cover : 1
next we will -> take : 2
next we will -> demonstrate : 1
we will make -> a : 1
will make a -> whirlwind : 1
make a whirlwind -> tour : 1
a whirlwind tour -> of : 1
whirlwind tour of -> the : 2
the key features -> of : 1
key features of -> modern : 1
of modern versions -> emphasizing : 1
modern versions emphasizing -> on : 1
versions emphasizing on -> move : 1
emphasizing on move -> type : 1
on move type -> smart : 1
move type smart -> and : 1
type smart and -> so : 1
smart and so -> this : 1
and so this -> is : 1
and so this -> modification : 1
so this is -> essential : 1
this is essential -> for : 1
is essential for -> writing : 1
essential for writing -> even : 1
for writing even -> basic : 1
writing even basic -> code : 1
even basic code -> for : 1
basic code for -> reactive : 1
code for reactive -> tour : 1
for reactive tour -> of : 1
reactive tour of -> modern : 1
its key classic -> programming : 1
key classic programming -> language : 1
classic programming language -> was : 1
programming language was -> standardized : 1
language was standardized -> in : 1
was standardized in -> and : 1
standardized in and -> it : 1
in and it -> was : 1
in and it -> is : 1
and it was -> followed : 1
it was followed -> by : 1
was followed by -> a : 1
by a small -> revision : 1
a small revision -> in : 1
small revision in -> to : 1
revision in to -> support : 1
in to support -> advanced : 1
to support advanced -> developers : 1
support advanced developers -> relied : 1
advanced developers relied -> on : 1
developers relied on -> the : 1
relied on the -> boost : 1
on the boost -> library : 1
the boost library -> and : 1
boost library and -> other : 1
library and other -> public : 1
and other public -> domain : 1
other public domain -> thanks : 1
public domain thanks -> to : 1
domain thanks to -> the : 1
thanks to the -> next : 1
thanks to the -> robust : 1
to the next -> wave : 1
to the next -> the : 1
to the next -> have : 1
to the next -> you : 1
to the next -> where : 1
the next wave -> of : 1
next wave of -> the : 1
wave of the -> language : 1
of the language -> was : 1
of the language -> have : 1
of the language -> also : 1
of the language -> gives : 1
of the language -> the : 1
of the language -> to : 1
of the language -> has : 1
of the language -> defines : 1
the language was -> and : 1
language was and -> now : 1
was and now -> developers : 1
and now developers -> can : 1
now developers can -> encode : 1
developers can encode -> most : 1
can encode most -> widely : 1
encode most widely -> used : 1
most widely used -> abstractions : 1
widely used abstractions -> by : 1
used abstractions by -> other : 1
abstractions by other -> without : 1
by other without -> relying : 1
other without relying -> on : 1
without relying on -> external : 1
relying on external -> even : 1
on external even -> threads : 1
external even threads -> and : 1
even threads and -> which : 1
threads and which -> came : 1
and which came -> squarely : 1
which came squarely -> under : 1
came squarely under -> the : 1
squarely under the -> aegis : 1
under the aegis -> of : 1
the aegis of -> are : 1
aegis of are -> now : 1
of are now -> part : 1
are now part -> of : 1
now part of -> the : 1
of the standard -> modern : 1
of the standard -> a : 1
of the standard -> header : 1
of the standard -> library : 1
of the standard -> committee : 1
of the standard -> the : 1
of the standard -> atomic : 2
the standard modern -> stands : 1
standard modern stands -> for : 1
modern stands for -> versions : 1
stands for versions -> contains : 1
for versions contains -> superb : 1
versions contains superb -> additions : 1
contains superb additions -> to : 1
superb additions to -> the : 1
additions to the -> language : 3
language and its -> that : 1
and its that -> make : 1
its that make -> the : 1
that make the -> choice : 1
make the choice -> for : 1
the choice for -> writing : 1
for writing industrial -> strength : 1
writing industrial strength -> production : 1
industrial strength production -> the : 1
strength production the -> features : 1
production the features -> covered : 1
the features covered -> in : 1
features covered in -> this : 1
covered in this -> chapter : 1
covered in this -> our : 1
covered in this -> about : 1
covered in this -> the : 1
chapter are the -> minimum : 1
are the minimum -> set : 1
the minimum set -> of : 1
minimum set of -> features : 1
set of features -> that : 1
of features that -> a : 1
features that a -> programmer : 2
has to understand -> to : 1
to understand to -> work : 1
understand to work -> with : 1
work with reactive -> programming : 1
with reactive programming -> constructs : 1
reactive programming constructs -> in : 1
reactive programming constructs -> easier : 1
programming constructs in -> general : 1
constructs in general -> and : 1
in general and -> rxcpp : 1
in general and -> observables : 1
in general and -> the : 1
general and rxcpp -> in : 1
and rxcpp in -> primary : 1
and rxcpp in -> we : 1
rxcpp in primary -> objective : 1
in primary objective -> of : 1
primary objective of -> this : 1
objective of this -> chapter : 1
is to cover -> the : 1
cover the most -> important : 1
most important additions -> to : 1
important additions to -> the : 1
the language which -> makes : 1
language which makes -> implementing : 1
which makes implementing -> reactive : 1
makes implementing reactive -> programming : 1
implementing reactive programming -> constructs : 1
programming constructs easier -> without : 1
constructs easier without -> resorting : 1
easier without resorting -> to : 1
without resorting to -> esoteric : 1
resorting to esoteric -> language : 1
to esoteric language -> constructs : 1
esoteric language constructs -> such : 1
language constructs such -> as : 1
as lambda automatic -> type : 1
lambda automatic type -> rvalue : 1
automatic type rvalue -> move : 1
type rvalue move -> and : 1
rvalue move and -> language : 1
move and language -> level : 1
and language level -> concurrency : 1
language level concurrency -> are : 1
level concurrency are -> some : 1
concurrency are some -> of : 1
are some of -> the : 1
are some of -> close : 1
of the constructs -> which : 1
the constructs which -> the : 1
constructs which the -> authors : 1
which the authors -> of : 1
the authors of -> this : 3
authors of this -> book : 3
this book feel -> that : 1
book feel that -> programmer : 1
feel that programmer -> should : 1
that programmer should -> in : 1
programmer should in -> this : 1
should in this -> we : 1
will cover the -> following : 5
will cover the -> wonderful : 1
will cover the -> and : 1
will cover the -> characteristics : 1
cover the following -> concerns : 1
cover the following -> is : 1
cover the following -> short : 2
cover the following -> introduction : 1
the following concerns -> for : 1
following concerns for -> programming : 1
concerns for programming -> language : 1
for programming language -> enhancements : 1
programming language enhancements -> to : 1
language enhancements to -> for : 1
enhancements to for -> writing : 1
writing better memory -> management : 1
memory management through -> rvalue : 1
management through rvalue -> references : 1
through rvalue references -> and : 1
and move object -> lifetime : 1
move object lifetime -> management : 1
object lifetime management -> using : 1
lifetime management using -> an : 1
management using an -> enhanced : 1
using an enhanced -> set : 1
an enhanced set -> of : 1
enhanced set of -> smart : 1
set of smart -> parameterization : 1
of smart parameterization -> using : 1
smart parameterization using -> lambda : 1
parameterization using lambda -> functions : 1
using lambda functions -> and : 1
using lambda functions -> we : 1
lambda functions and -> wrappers : 1
lambda functions and -> lambda : 1
lambda functions and -> you : 1
lambda functions and -> move : 1
functions and wrappers -> iterators : 1
and wrappers iterators -> and : 1
wrappers iterators and -> observers : 1
iterators and observers -> put : 1
and observers put -> everything : 1
observers put everything -> key : 1
put everything key -> concerns : 1
everything key concerns -> of : 1
the programming far -> as : 1
programming far as -> are : 1
far as are -> the : 1
as are the -> three : 1
are the three -> key : 1
the three key -> concerns : 1
three key concerns -> that : 1
key concerns that -> programming : 1
concerns that programming -> language : 1
that programming language -> designers : 1
programming language designers -> keep : 1
language designers keep -> in : 1
designers keep in -> mind : 1
keep in mind -> were : 1
keep in mind -> while : 1
keep in mind -> that : 1
in mind were -> still : 1
mind were still -> as : 1
were still as -> cost : 1
still as cost -> abstraction : 1
as cost abstraction -> no : 1
cost abstraction no -> performance : 1
abstraction no performance -> penalty : 1
no performance penalty -> for : 1
performance penalty for -> higher : 1
penalty for higher -> level : 1
for higher level -> a : 1
higher level a -> defined : 1
level a defined -> or : 1
a defined or -> class : 1
defined or class -> should : 1
or class should -> be : 1
class should be -> as : 1
should be as -> expressive : 1
should be as -> operation : 1
be as expressive -> as : 2
as expressive as -> a : 1
as expressive as -> the : 1
expressive as a -> udt : 1
as a udt -> can : 1
a udt can -> be : 1
udt can be -> substituted : 1
can be substituted -> wherever : 1
be substituted wherever -> are : 1
substituted wherever are -> expected : 1
wherever are expected -> in : 1
are expected in -> generic : 1
expected in generic -> data : 1
in generic data -> structures : 1
generic data structures -> and : 1
data structures and -> will : 1
data structures and -> wisnu : 1
structures and will -> discuss : 1
and will discuss -> these : 1
will discuss these -> cost : 1
discuss these cost -> programming : 1
these cost programming -> language : 1
cost programming language -> has : 1
programming language has -> always : 1
programming language has -> got : 1
language has always -> helped : 1
has always helped -> developers : 1
always helped developers -> to : 1
helped developers to -> write : 1
developers to write -> code : 1
to write code -> that : 1
to write code -> in : 1
to write code -> for : 1
write code that -> exploits : 1
code that exploits -> the : 1
that exploits the -> microprocessor : 1
exploits the microprocessor -> which : 1
the microprocessor which -> generated : 1
microprocessor which generated -> code : 1
which generated code -> and : 1
generated code and -> also : 1
code and also -> raise : 1
and also raise -> the : 1
also raise the -> level : 1
raise the level -> of : 1
the level of -> abstraction : 1
level of abstraction -> when : 1
of abstraction when -> it : 1
abstraction when it -> while : 1
when it while -> raising : 1
it while raising -> the : 1
while raising the -> the : 1
raising the the -> designers : 1
the the designers -> of : 1
the the designers -> have : 1
the designers of -> the : 1
the designers of -> rx : 1
designers of the -> language : 1
the language have -> always : 1
language have always -> tried : 1
have always tried -> to : 1
always tried to -> minimize : 1
tried to minimize -> their : 1
to minimize their -> performance : 1
minimize their performance -> this : 1
their performance this -> is : 1
performance this is -> called : 1
this is called -> zero : 1
this is called -> a : 1
this is called -> lazy : 1
is called zero -> cost : 1
called zero cost -> abstraction : 1
zero cost abstraction -> or : 1
zero cost abstraction -> do : 1
cost abstraction or -> zero : 1
abstraction or zero -> overhead : 1
or zero overhead -> cost : 1
zero overhead cost -> the : 1
overhead cost the -> only : 1
cost the only -> notable : 1
the only notable -> penalty : 1
only notable penalty -> you : 1
notable penalty you -> pay : 1
penalty you pay -> is : 1
you pay is -> the : 1
pay is the -> cost : 1
is the cost -> of : 1
the cost of -> indirect : 1
the cost of -> a : 1
the cost of -> no : 1
cost of indirect -> calls : 1
of indirect calls -> function : 1
indirect calls function -> while : 1
calls function while -> dispatching : 1
function while dispatching -> virtual : 1
while dispatching virtual -> despite : 1
dispatching virtual despite -> adding : 1
virtual despite adding -> tons : 1
despite adding tons -> of : 1
adding tons of -> features : 1
tons of features -> to : 1
of features to -> the : 1
features to the -> the : 1
the designers have -> maintained : 1
designers have maintained -> the : 1
have maintained the -> cost : 1
maintained the cost -> guarantee : 1
the cost guarantee -> implied : 1
cost guarantee implied -> by : 1
guarantee implied by -> the : 1
implied by the -> language : 1
by the language -> from : 1
by the language -> and : 2
the language from -> its : 1
language from its -> helps : 1
from its helps -> a : 1
its helps a -> developer : 1
helps a developer -> to : 1
a developer to -> write : 1
developer to write -> user : 1
to write user -> defined : 1
write user defined -> types : 1
user defined types -> or : 1
defined types or -> classes : 1
types or classes -> that : 1
or classes that -> can : 1
classes that can -> be : 1
classes that can -> wrap : 1
that can be -> as : 1
that can be -> potentially : 1
that can be -> applied : 1
that can be -> downloaded : 1
that can be -> a : 1
that can be -> passed : 1
that can be -> used : 2
that can be -> easily : 1
that can be -> emitted : 1
can be as -> expressive : 1
can be as -> event : 1
expressive as the -> types : 1
as the types -> of : 1
the types of -> the : 1
types of the -> programming : 1
the programming this -> enables : 1
programming this enables -> one : 1
this enables one -> to : 1
enables one to -> write : 1
one to write -> a : 1
one to write -> good : 1
to write a -> arithmetic : 1
to write a -> function : 1
to write a -> data : 3
to write a -> concurrent : 1
to write a -> we : 1
to write a -> using : 1
to write a -> program : 1
to write a -> header : 1
to write a -> microservices : 1
write a arithmetic -> class : 1
a arithmetic class -> as : 1
arithmetic class as -> in : 1
class as in -> some : 1
as in some -> which : 1
in some which -> contains : 1
some which contains -> all : 1
which contains all -> the : 1
contains all the -> features : 1
all the features -> of : 1
features of a -> double : 1
of a double -> or : 1
a double or -> for : 1
double or for -> the : 1
or for the -> sake : 1
or for the -> client : 1
sake of we -> have : 2
of we have -> defined : 1
of we have -> implemented : 1
we have defined -> a : 1
have defined a -> class : 1
defined a class -> that : 1
class that wraps -> ieee : 1
that wraps ieee -> double : 1
wraps ieee double -> precision : 1
ieee double precision -> floating : 3
double precision floating -> point : 3
double precision floating -> points : 1
precision floating point -> numbers : 1
precision floating point -> number : 1
precision floating point -> the : 1
floating point numbers -> and : 1
point numbers and -> most : 1
numbers and most -> of : 1
and most of -> the : 3
of the operators -> available : 1
of the operators -> and : 1
of the operators -> an : 1
the operators available -> to : 1
operators available to -> the : 1
available to the -> double : 1
available to the -> calling : 1
available to the -> user : 1
to the double -> data : 1
the double data -> type : 1
double data type -> is : 1
data type is -> the : 1
type is the -> following : 1
type is the -> same : 1
is the following -> code : 1
is the following -> program : 1
the following code -> snippets : 4
the following code -> snippet : 2
the following code -> we : 1
the following code -> helps : 1
the following code -> does : 1
the following code -> can : 1
the following code -> for : 1
the following code -> are : 1
the following code -> is : 1
the following code -> which : 1
the following code -> shows : 1
the following code -> implements : 1
the following code -> dumps : 1
following code snippets -> show : 2
following code snippets -> will : 1
following code snippets -> help : 1
code snippets show -> that : 1
code snippets show -> the : 1
snippets show that -> one : 1
show that one -> can : 1
one can write -> types : 1
can write types -> that : 1
write types that -> mimic : 1
types that mimic -> the : 1
that mimic the -> semantics : 1
mimic the semantics -> of : 1
the semantics of -> types : 1
the semantics of -> basic : 1
the semantics of -> one : 1
the semantics of -> the : 1
the semantics of -> int : 1
semantics of types -> such : 1
of types such -> as : 1
types such as -> or : 1
types such as -> and : 1
such as or -> namespace : 1
such as or -> some : 1
such as or -> long : 1
such as or -> these : 1
as or namespace -> smartfloat : 1
or namespace smartfloat -> double : 1
namespace smartfloat double -> underlying : 1
smartfloat double underlying -> const : 1
double underlying const -> other : 1
underlying const other -> operator : 1
const other operator -> const : 1
other operator const -> other : 1
operator const other -> if : 1
operator const other -> return : 5
operator const other -> bool : 1
const other if -> this : 1
other if this -> return : 1
if this return -> operator : 1
this return operator -> value : 1
return operator value -> return : 1
operator value return -> class : 1
value return class -> wraps : 1
return class wraps -> a : 1
class wraps a -> double : 1
wraps a double -> value : 1
a double value -> and : 1
double value and -> has : 1
value and has -> defined : 1
and has defined -> some : 1
has defined some -> constructors : 1
defined some constructors -> and : 1
some constructors and -> assignment : 1
constructors and assignment -> operators : 2
and assignment operators -> to : 1
and assignment operators -> and : 1
assignment operators to -> initialize : 1
operators to initialize -> instances : 1
to initialize instances -> in : 1
initialize instances in -> the : 1
instances in the -> following : 1
the following we -> will : 6
the following we -> are : 1
the following we -> can : 1
the following we -> invoke : 1
following we will -> define : 1
following we will -> discuss : 1
following we will -> be : 2
following we will -> shift : 1
following we will -> quickly : 1
will define some -> operators : 1
define some operators -> that : 1
some operators that -> help : 1
operators that help -> to : 2
that help to -> increment : 1
that help to -> recover : 1
help to increment -> the : 1
to increment the -> both : 1
increment the both -> the : 1
the both the -> prefix : 1
both the prefix -> and : 1
the prefix and -> postfix : 1
prefix and postfix -> variants : 1
and postfix variants -> of : 1
postfix variants of -> operators : 1
variants of operators -> are : 1
of operators are -> operator : 1
operators are operator -> return : 1
are operator return -> smartfloat : 1
operator return smartfloat -> operator : 2
return smartfloat operator -> postfix : 1
return smartfloat operator -> smartfloat : 1
smartfloat operator postfix -> smartfloat : 1
operator postfix smartfloat -> return : 1
postfix smartfloat return -> operator : 1
smartfloat return operator -> return : 1
return operator return -> smartfloat : 1
return operator return -> virtual : 1
smartfloat operator smartfloat -> return : 1
operator smartfloat return -> preceding : 1
smartfloat return preceding -> code : 1
preceding code snippets -> implement : 2
code snippets implement -> increment : 1
code snippets implement -> style : 1
snippets implement increment -> operators : 1
implement increment operators -> prefix : 1
increment operators prefix -> and : 1
operators prefix and -> and : 1
prefix and and -> are : 1
and and are -> meant : 1
and are meant -> for : 1
and are meant -> to : 1
are meant for -> demonstration : 1
meant for demonstration -> purposes : 1
for demonstration purposes -> in : 1
for demonstration purposes -> subscribed : 1
demonstration purposes in -> a : 1
purposes in a -> we : 1
in a we -> will : 1
in a we -> can : 1
a we will -> check : 1
a we will -> only : 1
we will check -> for : 1
will check for -> floating : 1
check for floating -> point : 1
for floating point -> overflow : 1
floating point overflow -> and : 1
floating point overflow -> or : 1
point overflow and -> underflow : 1
overflow and underflow -> to : 1
and underflow to -> make : 1
underflow to make -> the : 1
make the code -> more : 1
make the code -> considerably : 1
the code more -> the : 1
code more the -> whole : 1
more the whole -> purpose : 1
the whole purpose -> of : 1
purpose of wrapping -> a : 1
of wrapping a -> type : 1
wrapping a type -> is : 1
a type is -> to : 1
type is to -> write : 1
is to write -> robust : 1
is to write -> code : 1
to write robust -> operator : 1
to write robust -> another : 1
to write robust -> rest : 1
write robust operator -> double : 1
robust operator double -> x : 1
operator double x -> return : 3
operator double x -> operator : 1
double x return -> operator : 2
double x return -> preceding : 1
x return operator -> double : 2
return operator double -> x : 2
return operator double -> return : 1
double x operator -> double : 1
x operator double -> x : 1
x return preceding -> code : 1
snippets implement style -> assignment : 1
implement style assignment -> operators : 1
style assignment operators -> and : 1
assignment operators and -> once : 1
assignment operators and -> and : 2
operators and once -> to : 1
and once to -> make : 1
once to make -> the : 1
make the listing -> we : 1
the listing we -> have : 1
listing we have -> not : 1
we have not -> checked : 1
we have not -> implemented : 3
we have not -> added : 1
we have not -> covered : 1
we have not -> taken : 1
we have not -> started : 1
have not checked -> whether : 1
not checked whether -> any : 1
checked whether any -> floating : 1
whether any floating -> point : 1
any floating point -> overflow : 1
point overflow or -> underflow : 1
overflow or underflow -> is : 1
or underflow is -> we : 1
underflow is we -> do : 1
is we do -> not : 1
do not handle -> exceptions : 1
not handle exceptions -> as : 1
handle exceptions as -> well : 1
exceptions as well -> here : 1
as well here -> to : 1
well here to -> keep : 1
here to keep -> the : 1
the listing bool -> operator : 1
listing bool operator -> const : 1
bool operator const -> other : 6
const other return -> bool : 4
const other return -> preceding : 1
other return bool -> operator : 4
return bool operator -> const : 4
const other bool -> operator : 1
other bool operator -> const : 1
other return preceding -> code : 1
preceding code implements -> relational : 1
preceding code implements -> an : 1
code implements relational -> operators : 1
implements relational operators -> and : 1
relational operators and -> most : 1
operators and most -> of : 1
of the semantics -> associated : 1
the semantics associated -> with : 1
semantics associated with -> double : 1
associated with double -> precision : 1
with double precision -> floating : 1
precision floating points -> have : 1
floating points have -> been : 1
points have been -> implemented : 1
have been implemented -> as : 1
been implemented as -> operator : 1
implemented as operator -> int : 1
as operator int -> return : 1
operator int return -> operator : 1
int return operator -> double : 1
operator double return -> the : 1
double return the -> sake : 1
double return the -> resultant : 1
return the sake -> of : 1
have implemented conversion -> operators : 1
implemented conversion operators -> to : 1
conversion operators to -> and : 1
operators to and -> we : 1
to and we -> will : 1
and we will -> write : 1
and we will -> look : 1
and we will -> the : 1
and we will -> reverse : 1
and we will -> cover : 1
and we will -> explore : 1
and we will -> focus : 1
will write two -> functions : 1
write two functions -> to : 1
two functions to -> aggregate : 1
two functions to -> use : 1
functions to aggregate -> values : 1
to aggregate values -> stored : 1
aggregate values stored -> in : 1
values stored in -> an : 1
stored in an -> the : 1
stored in an -> stl : 1
in an the -> first : 1
an the first -> function : 1
an the first -> value : 1
the first function -> expects : 1
first function expects -> an : 1
function expects an -> array : 1
expects an array -> of : 3
array of as -> parameter : 1
of as parameter -> and : 1
as parameter and -> the : 1
parameter and the -> second : 1
parameter and the -> body : 1
and the second -> one : 2
and the second -> value : 1
and the second -> label : 1
and the second -> stream : 1
the second one -> expects : 1
the second one -> returns : 1
second one expects -> a : 1
one expects a -> array : 1
expects a array -> as : 1
a array as -> the : 1
array as the -> code : 1
array as the -> value : 1
as the code -> is : 1
code is identical -> in : 1
is identical in -> both : 1
identical in both -> routines : 1
in both routines -> and : 1
both routines and -> only : 1
routines and only -> the : 1
and only the -> type : 1
only the type -> both : 1
the type both -> will : 1
type both will -> produce : 1
both will produce -> the : 1
will produce the -> same : 1
will produce the -> following : 2
produce the same -> double : 1
produce the same -> colored : 1
the same double -> int : 1
same double int -> count : 1
double int count -> double : 1
int count double -> value : 1
count double value -> int : 1
double value int -> value : 1
value int value -> return : 3
int value return -> smartfloat : 1
int value return -> using : 1
int value return -> templated : 1
value return smartfloat -> int : 1
return smartfloat int -> count : 1
smartfloat int count -> smartfloat : 1
int count smartfloat -> value : 1
count smartfloat value -> int : 1
smartfloat value int -> value : 1
value return using -> initializer : 1
return using initializer -> double : 1
using initializer double -> smartfloat : 1
initializer double smartfloat -> double : 1
double smartfloat double -> res : 1
smartfloat double res -> will : 1
double res will -> call : 1
res will call -> the : 2
will call the -> double : 1
will call the -> smartfloat : 1
call the double -> cout : 1
the double cout -> res : 1
double cout res -> res : 1
cout res res -> will : 1
res res will -> call : 1
call the smartfloat -> cout : 1
the smartfloat cout -> res : 1
smartfloat cout res -> language : 1
cout res language -> helps : 1
res language helps -> us : 1
language helps us -> write : 1
helps us write -> expressive : 1
us write expressive -> types : 1
write expressive types -> that : 1
expressive types that -> augment : 1
types that augment -> the : 1
that augment the -> semantics : 1
augment the semantics -> of : 1
semantics of basic -> the : 1
of basic the -> expressiveness : 1
basic the expressiveness -> of : 1
the expressiveness of -> the : 1
expressiveness of the -> language : 1
the language also -> helps : 1
language also helps -> one : 1
also helps one -> to : 1
helps one to -> write : 1
to write good -> value : 1
write good value -> types : 1
good value types -> and : 1
value types and -> reference : 1
types and reference -> types : 1
and reference types -> using : 1
reference types using -> a : 1
types using a -> myriad : 1
using a myriad -> of : 1
a myriad of -> techniques : 1
myriad of techniques -> supported : 1
of techniques supported -> by : 1
techniques supported by -> the : 1
by the with -> support : 1
the with support -> for : 1
with support for -> operator : 1
with support for -> developing : 1
support for operator -> conversion : 1
for operator conversion -> placement : 1
operator conversion placement -> and : 1
conversion placement and -> other : 1
placement and other -> related : 1
and other related -> the : 1
other related the -> language : 1
related the language -> has : 1
the language has -> taken : 1
the language has -> helped : 1
the language has -> a : 1
the language has -> adopted : 1
language has taken -> the : 1
has taken the -> class : 1
taken the class -> design : 1
the class design -> to : 1
class design to -> a : 1
design to a -> higher : 1
to a higher -> level : 1
a higher level -> compared : 1
higher level compared -> to : 1
level compared to -> other : 1
compared to other -> languages : 1
to other languages -> of : 1
to other languages -> also : 1
other languages of -> its : 1
languages of its -> with : 1
of its with -> power : 1
its with power -> comes : 1
with power comes -> responsibility : 1
power comes responsibility -> and : 1
comes responsibility and -> the : 1
responsibility and the -> language : 1
and the language -> sometimes : 1
and the language -> design : 1
and the language -> has : 1
the language sometimes -> gives : 1
language sometimes gives -> you : 1
sometimes gives you -> enough : 1
gives you enough -> rope : 1
you enough rope -> to : 1
enough rope to -> shoot : 1
rope to shoot -> yourself : 1
to shoot yourself -> in : 1
shoot yourself in -> the : 1
yourself in the -> the : 1
the the previous -> we : 1
the the previous -> program : 1
the previous we -> saw : 3
the previous we -> defined : 1
the previous we -> looked : 1
the previous we -> learned : 3
the previous we -> already : 1
the previous we -> were : 1
the previous we -> created : 2
the previous we -> will : 1
the previous we -> manually : 1
previous we saw -> how : 1
previous we saw -> that : 2
we saw how -> a : 1
we saw how -> to : 2
saw how a -> type : 1
how a type -> can : 1
a type can -> be : 1
type can be -> used : 1
type can be -> constructed : 1
used to express -> all : 1
to express all -> the : 1
express all the -> operations : 1
all the operations -> done : 1
the operations done -> on : 1
operations done on -> a : 1
done on a -> another : 1
on a another -> goal : 1
a another goal -> of : 1
another goal of -> is : 1
goal of is -> to : 1
of is to -> write : 1
write code in -> a : 1
code in a -> generic : 1
code in a -> cpp : 1
in a generic -> manner : 1
in a generic -> but : 1
a generic manner -> where : 1
generic manner where -> we : 1
manner where we -> can : 1
where we can -> substitute : 1
we can substitute -> a : 1
can substitute a -> class : 1
substitute a class -> that : 1
class that mimics -> the : 1
that mimics the -> semantics : 1
mimics the semantics -> of : 1
semantics of one -> of : 1
of the types -> such : 1
the types such -> as : 1
as and so -> from : 1
as and so -> empowers : 1
and so from -> t : 1
so from t -> int : 1
from t int -> count : 1
t int count -> t : 1
int count t -> value : 1
count t value -> int : 1
t value int -> value : 1
value return templated -> version : 1
return templated version -> of : 1
templated version of -> double : 1
version of double -> res : 1
of double res -> cout : 1
double res cout -> res : 1
res cout res -> programming : 1
cout res programming -> language : 1
res programming language -> supports : 1
programming language supports -> different : 1
language supports different -> programming : 1
supports different programming -> paradigms : 1
different programming paradigms -> and : 1
programming paradigms and -> the : 1
paradigms and the -> three : 1
and the three -> principles : 1
the three principles -> outlined : 1
three principles outlined -> previously : 1
principles outlined previously -> are : 1
principles outlined previously -> have : 1
outlined previously are -> just : 1
previously are just -> some : 1
are just some -> of : 1
just some of -> the : 1
the language gives -> support : 1
the language gives -> flexibility : 1
language gives support -> for : 1
gives support for -> constructs : 1
support for constructs -> that : 1
for constructs that -> can : 1
constructs that can -> help : 1
that can help -> create : 1
that can help -> us : 1
can help create -> robust : 1
help create robust -> types : 1
create robust types -> for : 1
robust types for -> writing : 1
types for writing -> better : 1
writing better these -> three : 1
better these three -> principles : 1
these three principles -> gave : 1
three principles gave -> us : 1
principles gave us -> a : 1
gave us a -> powerful : 1
us a powerful -> and : 1
a powerful and -> fast : 1
powerful and fast -> programming : 1
and fast programming -> language : 1
fast programming language -> for : 1
programming language for -> modern : 1
language for modern -> add : 1
for modern add -> a : 1
modern add a -> lot : 1
add a lot -> of : 1
lot of new -> abstractions : 1
of new abstractions -> to : 1
new abstractions to -> make : 1
abstractions to make -> the : 1
make the life -> of : 1
the life of -> a : 1
life of a -> programmer : 1
of a programmer -> but : 1
of a programmer -> to : 1
a programmer but -> the : 1
programmer but the -> three : 1
but the three -> design : 1
the three design -> principles : 1
three design principles -> outlined : 1
design principles outlined -> previously : 1
outlined previously have -> not : 1
previously have not -> been : 1
have not been -> sacrificed : 1
not been sacrificed -> in : 1
been sacrificed in -> any : 1
sacrificed in any -> to : 1
in any to -> achieve : 1
any to achieve -> those : 1
to achieve those -> this : 1
achieve those this -> was : 1
those this was -> partly : 1
this was partly -> possible : 1
was partly possible -> because : 1
partly possible because -> of : 1
possible because of -> the : 2
of the meta -> programming : 1
the meta programming -> support : 1
meta programming support -> the : 1
programming support the -> language : 1
support the language -> had : 1
the language had -> due : 1
language had due -> to : 1
had due to -> the : 1
due to the -> inadvertent : 1
due to the -> fact : 1
due to the -> delay : 1
due to the -> functional : 1
to the inadvertent -> of : 1
the inadvertent of -> the : 1
inadvertent of the -> template : 1
of the template -> read : 1
of the template -> argument : 1
of the template -> as : 1
the template read -> about : 1
template read about -> meta : 1
read about meta -> and : 1
about meta and -> turing : 1
meta and turing -> with : 1
and turing with -> the : 1
turing with the -> help : 1
help of your -> favorite : 1
of your favorite -> search : 1
your favorite search -> to : 1
your favorite search -> visitor : 1
favorite search to -> for : 1
search to for -> writing : 1
writing better programming -> language : 1
better programming language -> universe : 1
programming language universe -> has : 1
language universe has -> changed : 1
universe has changed -> a : 1
has changed a -> lot : 1
changed a lot -> in : 1
a lot in -> the : 1
a lot in -> popularizing : 1
lot in the -> last : 1
the last decade -> and : 1
last decade and -> those : 1
decade and those -> changes : 1
and those changes -> should : 1
those changes should -> reflect : 1
changes should reflect -> in : 1
should reflect in -> programming : 1
reflect in programming -> language : 1
in programming language -> in : 1
programming language in -> its : 1
language in its -> new : 1
in its new -> most : 1
its new most -> of : 1
new most of -> the : 1
of the innovations -> in : 1
the innovations in -> modern : 1
innovations in modern -> involve : 1
in modern involve -> handling : 1
modern involve handling -> advanced : 1
involve handling advanced -> abstractions : 1
handling advanced abstractions -> and : 1
advanced abstractions and -> the : 1
abstractions and the -> introduction : 1
and the introduction -> of : 1
the introduction of -> functional : 1
introduction of functional -> programming : 1
of functional programming -> constructs : 1
of functional programming -> techniques : 1
of functional programming -> model : 1
programming constructs to -> support : 1
constructs to support -> language : 1
to support language -> level : 1
support language level -> most : 1
language level most -> modern : 1
level most modern -> languages : 1
most modern languages -> have : 1
modern languages have -> got : 1
languages have got -> a : 1
have got a -> garbage : 1
got a garbage -> collector : 1
a garbage collector -> and : 1
garbage collector and -> a : 1
collector and a -> manages : 1
and a manages -> these : 1
a manages these -> the : 1
manages these the -> programming : 1
these the programming -> language : 1
the programming language -> does : 2
the programming language -> also : 1
the programming language -> has : 1
the programming language -> to : 1
programming language does -> not : 2
not have automatic -> garbage : 1
have automatic garbage -> collection : 1
automatic garbage collection -> as : 1
garbage collection as -> part : 1
collection as part -> of : 1
the language the -> programming : 1
language the programming -> languages : 1
the programming languages -> with : 1
the programming languages -> that : 1
programming languages with -> its : 1
languages with its -> implicit : 1
with its implicit -> guarantee : 1
its implicit guarantee -> of : 1
implicit guarantee of -> zero : 1
guarantee of zero -> cost : 1
of zero cost -> abstraction : 1
cost abstraction do -> not : 1
abstraction do not -> pay : 1
do not pay -> for : 1
not pay for -> what : 1
pay for what -> you : 1
for what you -> do : 1
what you do -> not : 1
you do not -> and : 1
do not and -> maximum : 1
not and maximum -> has : 1
and maximum has -> to : 1
maximum has to -> resort : 1
has to resort -> to : 1
to resort to -> a : 1
to resort to -> timeout : 1
resort to a -> lot : 1
to a lot -> of : 1
lot of tricks -> and : 1
of tricks and -> meta : 1
tricks and meta -> programming : 1
and meta programming -> techniques : 1
meta programming techniques -> to : 1
programming techniques to -> achieve : 1
programming techniques to -> exploit : 1
programming techniques to -> write : 1
techniques to achieve -> the : 1
achieve the abstraction -> level : 1
the abstraction level -> supported : 1
abstraction level supported -> by : 1
level supported by -> a : 1
supported by a -> language : 1
by a language -> such : 1
as or some -> of : 1
or some of -> them : 1
some of them -> are : 2
of them are -> outlined : 1
of them are -> published : 1
them are outlined -> in : 1
are outlined in -> the : 1
outlined in the -> following : 1
outlined in the -> previous : 1
the following sections -> and : 1
following sections and -> you : 1
sections and you -> can : 1
and you can -> delve : 1
and you can -> do : 1
and you can -> consult : 1
and you can -> infer : 1
you can delve -> into : 1
can delve into -> these : 1
delve into these -> topics : 1
into these topics -> the : 1
these topics the -> website : 1
topics the website -> is : 1
the website is -> a : 1
website is a -> good : 1
is a good -> site : 1
is a good -> example : 1
is a good -> mechanism : 1
is a good -> approach : 1
a good site -> for : 1
good site for -> advancing : 1
site for advancing -> your : 1
for advancing your -> knowledge : 1
advancing your knowledge -> of : 1
your knowledge of -> the : 1
the programming deduction -> and : 1
programming deduction and -> modern : 1
deduction and modern -> language : 1
and modern language -> compiler : 1
modern language compiler -> does : 1
language compiler does -> a : 1
compiler does a -> wonderful : 1
does a wonderful -> job : 1
a wonderful job -> of : 1
wonderful job of -> deducing : 1
job of deducing -> types : 1
of deducing types -> from : 1
deducing types from -> the : 1
types from the -> expressions : 1
from the expressions -> and : 1
the expressions and -> statements : 1
expressions and statements -> specified : 1
and statements specified -> by : 1
statements specified by -> the : 1
specified by the -> most : 1
specified by the -> and : 1
specified by the -> count : 1
by the most -> modern : 1
by the most -> recently : 1
the most modern -> programming : 1
most modern programming -> languages : 1
modern programming languages -> do : 1
programming languages do -> have : 1
languages do have -> support : 1
do have support -> for : 1
have support for -> type : 1
support for type -> inference : 1
for type inference -> and : 1
type inference and -> so : 1
inference and so -> does : 1
and so does -> modern : 1
so does modern -> this : 1
does modern this -> is : 1
modern this is -> an : 1
this is an -> idiom : 1
this is an -> atomic : 1
this is an -> this : 1
this is an -> example : 1
is an idiom -> borrowed : 1
an idiom borrowed -> from : 1
idiom borrowed from -> functional : 1
borrowed from functional -> programming : 1
from functional programming -> languages : 1
functional programming languages -> such : 1
programming languages such -> as : 1
languages such as -> haskell : 1
such as haskell -> and : 1
as haskell and -> type : 1
haskell and type -> inferences : 1
and type inferences -> are : 1
type inferences are -> already : 1
inferences are already -> available : 1
are already available -> with : 1
already available with -> the : 1
the and scala -> programming : 1
and scala programming -> we : 1
scala programming we -> will : 1
programming we will -> write : 2
programming we will -> be : 1
will write a -> small : 1
will write a -> function : 1
will write a -> simple : 2
will write a -> tree : 1
will write a -> program : 2
will write a -> basic : 2
write a small -> program : 1
write a small -> global : 1
a small program -> to : 1
small program to -> us : 1
program to us -> with : 1
to us with -> type : 1
us with type -> namespace : 1
with type namespace -> vt : 1
type namespace vt -> explicitly : 1
namespace vt explicitly -> specify : 1
vt explicitly specify -> the : 1
explicitly specify the -> type : 1
specify the type -> makes : 1
specify the type -> of : 1
the type makes -> it : 1
type makes it -> for : 1
makes it for -> it : 1
it for it -> it : 1
for it it -> cout : 1
it it cout -> let : 1
it it cout -> evaluates : 1
it cout let -> the : 1
cout let the -> compiler : 1
let the compiler -> infer : 1
let the compiler -> do : 1
the compiler infer -> the : 1
compiler infer the -> type : 1
infer the type -> for : 1
the type for -> for : 1
type for for -> cout : 1
for for cout -> return : 1
for cout return -> keyword : 1
cout return keyword -> specifies : 1
return keyword specifies -> that : 1
keyword specifies that -> the : 1
specifies that the -> type : 1
that the type -> of : 1
the type of -> the : 2
the type of -> expression : 1
the type of -> a : 1
the type of -> argument : 1
the type of -> task : 1
the type of -> event : 1
type of the -> variable : 1
type of the -> wrapper : 1
type of the -> function : 1
type of the -> http : 1
of the variable -> will : 1
the variable will -> be : 1
variable will be -> deduced : 1
will be deduced -> by : 1
be deduced by -> the : 1
deduced by the -> compiler : 1
by the compiler -> based : 1
by the compiler -> will : 1
by the compiler -> as : 1
by the compiler -> and : 1
the compiler based -> on : 1
compiler based on -> initialization : 1
based on initialization -> and : 1
on initialization and -> the : 1
initialization and the -> return : 1
and the return -> values : 1
the return values -> of : 1
return values of -> functions : 1
values of functions -> specified : 1
of functions specified -> in : 1
functions specified in -> the : 1
functions specified in -> lambda : 1
specified in the -> in : 1
specified in the -> constructor : 1
specified in the -> the : 1
in the in -> this : 2
in the in -> a : 1
in the in -> the : 2
particular we do -> not : 1
do not gain -> as : 1
not gain as -> our : 1
gain as our -> declarations : 1
as our declarations -> get : 1
our declarations get -> more : 1
declarations get more -> it : 1
get more it -> is : 1
more it is -> better : 1
it is better -> to : 2
is better to -> let : 1
is better to -> use : 1
better to let -> the : 1
to let the -> compiler : 1
the compiler do -> the : 1
compiler do the -> type : 1
do the type -> our : 1
the type our -> code : 1
type our code -> listings : 1
our code listings -> will : 1
code listings will -> use : 1
listings will use -> auto : 1
will use auto -> to : 1
use auto to -> simplify : 1
auto to simplify -> the : 1
to simplify the -> code : 1
simplify the code -> throughout : 1
the code throughout -> the : 1
code throughout the -> let : 1
throughout the let -> us : 1
the let us -> write : 2
the let us -> define : 1
the let us -> handcode : 1
the let us -> jump : 1
let us write -> a : 5
let us write -> an : 1
us write a -> simple : 2
us write a -> piece : 1
us write a -> flattening : 1
us write a -> function : 1
write a simple -> program : 5
write a simple -> lambda : 1
a simple program -> to : 4
a simple program -> that : 3
simple program to -> make : 1
simple program to -> demonstrate : 2
simple program to -> pull : 1
program to make -> the : 1
make the idea -> even : 1
the idea even -> more : 1
idea even more -> namespace : 1
even more namespace -> vtdbl : 1
more namespace vtdbl -> auto : 1
namespace vtdbl auto -> type : 1
vtdbl auto type -> will : 1
auto type will -> be : 1
type will be -> auto : 1
will be auto -> size : 1
be auto size -> auto : 1
auto size auto -> specify : 1
size auto specify -> a : 1
auto specify a -> auto : 1
specify a auto -> cout : 1
a auto cout -> size : 1
auto cout size -> iterate : 1
cout size iterate -> compiler : 1
size iterate compiler -> infers : 1
iterate compiler infers -> the : 1
compiler infers the -> for : 1
infers the for -> auto : 1
the for auto -> it : 1
the for auto -> cout : 1
for auto it -> it : 1
auto it it -> cout : 1
it cout evaluates -> to : 1
cout evaluates to -> iterator : 1
evaluates to iterator -> to : 1
to iterator to -> vector : 1
iterator to vector -> of : 1
to vector of -> for : 1
vector of for -> cout : 1
of for cout -> this : 1
for cout this -> will : 1
cout this will -> change : 1
cout this will -> be : 1
this will change -> the : 1
will change the -> first : 1
will change the -> expressions : 1
change the first -> element : 1
the first element -> of : 1
the first element -> in : 1
first element of -> vtdbl : 1
element of vtdbl -> now : 1
of vtdbl now -> iterate : 1
vtdbl now iterate -> to : 1
now iterate to -> reflect : 1
iterate to reflect -> the : 1
to reflect the -> for : 1
to reflect the -> mutation : 1
to reflect the -> this : 1
reflect the for -> auto : 1
for auto cout -> return : 1
auto cout return -> preceding : 1
cout return preceding -> code : 1
preceding code demonstrates -> the : 1
code demonstrates the -> use : 1
demonstrates the use -> of : 1
the use of -> type : 1
the use of -> this : 1
the use of -> namespace : 2
the use of -> while : 1
the use of -> at : 1
the use of -> and : 2
the use of -> the : 1
the use of -> atomic : 2
the use of -> standard : 1
the use of -> spreadsheet : 1
the use of -> auto : 1
the use of -> signals : 1
the use of -> multiple : 1
the use of -> a : 1
use of type -> inference : 1
of type inference -> while : 1
type inference while -> writing : 1
inference while writing -> modern : 1
writing modern the -> programming : 1
modern the programming -> language : 1
programming language also -> has : 1
language also has -> a : 1
also has a -> new : 1
has a new -> keyword : 1
a new keyword -> that : 1
new keyword that -> helps : 1
keyword that helps -> to : 1
that helps to -> query : 1
that helps to -> write : 1
that helps to -> group : 1
helps to query -> the : 1
to query the -> type : 1
query the type -> of : 1
type of expression -> given : 1
of expression given -> as : 1
expression given as -> the : 1
given as the -> general : 1
as the general -> form : 1
the general form -> of : 1
general form of -> the : 1
form of the -> keyword : 1
of the keyword -> is : 1
the keyword is -> the : 1
keyword is the -> following : 1
following program helps -> to : 1
program helps to -> demonstrate : 1
helps to demonstrate -> the : 1
demonstrate the use -> of : 4
demonstrate the use -> to : 1
use of this -> particular : 1
of this particular -> namespace : 1
this particular namespace -> return : 1
particular namespace return -> return : 1
namespace return return -> return : 2
return return return -> type : 1
return return return -> x : 1
return return return -> compose : 1
return return return -> return : 3
return return return -> auto : 1
return return return -> the : 1
return return return -> delete : 1
return return return -> double : 1
return return type -> is : 1
return type is -> data : 1
type is data -> type : 1
is data type -> of : 1
data type of -> x : 1
type of x -> is : 1
of x is -> same : 1
x is same -> as : 1
is same as -> return : 2
same as return -> type : 2
as return type -> of : 2
return type of -> and : 1
return type of -> in : 1
return type of -> the : 1
type of and -> type : 1
of and type -> of : 1
and type of -> y : 1
type of y -> is : 1
of y is -> same : 1
y is same -> as : 1
type of in -> should : 1
of in should -> print : 1
in should print -> i : 1
in should print -> c : 1
in should print -> d : 1
in should print -> f : 1
should print i -> cout : 1
print i cout -> in : 1
i cout in -> should : 1
cout in should -> print : 2
should print c -> char : 1
print c char -> cout : 1
c char cout -> struct : 1
char cout struct -> a : 1
cout struct a -> double : 1
struct a double -> const : 1
a double const -> a : 1
double const a -> new : 1
const a new -> type : 1
a new type -> is : 1
new type is -> type : 1
type is type -> is : 1
is type is -> const : 1
type is const -> in : 1
is const in -> should : 1
const in should -> print : 1
should print d -> cout : 1
print d cout -> cout : 1
d cout cout -> in : 1
cout cout in -> should : 1
should print f -> cout : 1
print f cout -> return : 1
f cout return -> is : 1
cout return is -> a : 1
return is a -> construct : 1
return is a -> smart : 1
return is a -> variadic : 1
return is a -> wrapper : 1
is a construct -> and : 1
a construct and -> it : 1
construct and it -> helps : 1
and it helps -> to : 1
it helps to -> specify : 1
it helps to -> drag : 1
it helps to -> relay : 1
helps to specify -> the : 1
to specify the -> type : 1
to specify the -> semantics : 1
to specify the -> object : 1
type of a -> variable : 1
of a variable -> compiler : 1
a variable compiler -> will : 1
variable compiler will -> do : 1
compiler will do -> the : 1
compiler will do -> type : 1
will do the -> hard : 1
do the hard -> work : 1
the hard work -> to : 1
hard work to -> figure : 1
work to figure -> it : 1
to figure it -> and : 1
figure it and -> also : 1
it and also -> helps : 1
and also helps -> us : 1
also helps us -> to : 1
helps us to -> force : 1
helps us to -> detect : 1
helps us to -> build : 1
helps us to -> unsubscribe : 1
us to force -> a : 1
to force a -> type : 1
force a type -> on : 1
a type on -> a : 1
type on a -> variable : 1
on a variable -> the : 1
on a variable -> cannot : 1
a variable the -> initialization : 1
variable the initialization -> of : 1
the initialization of -> had : 1
the initialization of -> modern : 1
initialization of had -> some : 1
of had some -> kind : 1
had some kind -> of : 1
kind of syntax -> for : 1
of syntax for -> the : 1
syntax for the -> initialization : 1
for the initialization -> of : 1
initialization of modern -> supports : 1
of modern supports -> uniform : 1
modern supports uniform -> initialization : 1
supports uniform initialization -> have : 1
uniform initialization have -> already : 1
initialization have already -> seen : 1
have already seen -> examples : 1
have already seen -> in : 1
have already seen -> how : 1
already seen examples -> in : 1
seen examples in -> the : 1
examples in the -> type : 1
examples in the -> previous : 1
in the type -> inference : 1
the type inference -> the : 1
type inference the -> language : 1
inference the language -> provides : 1
the language provides -> helper : 1
language provides helper -> classes : 1
provides helper classes -> to : 1
helper classes to -> developers : 1
classes to developers -> to : 1
to developers to -> support : 1
developers to support -> uniform : 1
to support uniform -> initialization : 1
support uniform initialization -> for : 1
uniform initialization for -> their : 1
initialization for their -> custom : 1
for their custom -> namespace : 1
their custom namespace -> void : 1
custom namespace void -> vcw : 1
namespace void vcw -> in : 1
void vcw in -> function : 1
vcw in function -> for : 1
in function for -> n : 1
function for n -> n : 1
for n n -> preceding : 1
for n n -> for : 1
n n preceding -> listing : 1
n preceding listing -> shows : 1
preceding listing shows -> how : 1
listing shows how -> one : 1
shows how one -> can : 2
one can enable -> initialization : 1
can enable initialization -> lists : 1
enable initialization lists -> for : 1
initialization lists for -> a : 1
lists for a -> custom : 1
for a custom -> class : 1
a custom class -> created : 1
custom class created -> by : 1
class created by -> a : 1
created by a -> and : 1
by a and -> there : 1
a and there -> is : 1
and there is -> support : 1
there is support -> for : 1
is support for -> variadic : 1
support for variadic -> templates : 1
for variadic templates -> as : 1
variadic templates as -> part : 1
templates as part -> of : 1
the standard a -> variadic : 1
standard a variadic -> template : 1
a variadic template -> is : 1
a variadic template -> function : 1
variadic template is -> a : 1
template is a -> template : 1
is a template -> class : 2
is a template -> parameter : 1
a template class -> or : 1
a template class -> that : 1
template class or -> template : 1
class or template -> function : 1
or template function -> that : 1
template function that -> takes : 1
function that takes -> a : 1
function that takes -> an : 2
function that takes -> as : 1
that takes a -> variable : 1
takes a variable -> number : 1
a variable number -> in : 1
variable number in -> a : 1
number in a -> template : 1
in a template -> in : 1
a template in -> classic : 1
template in classic -> template : 1
in classic template -> instantiation : 1
classic template instantiation -> happens : 1
template instantiation happens -> with : 1
instantiation happens with -> a : 1
happens with a -> fixed : 1
with a fixed -> number : 1
a fixed number -> of : 3
fixed number of -> variadic : 1
fixed number of -> if : 1
fixed number of -> arguments : 1
fixed number of -> retries : 1
number of variadic -> templates : 1
of variadic templates -> are : 1
variadic templates are -> supported : 1
templates are supported -> both : 1
are supported both -> at : 1
supported both at -> class : 1
both at class -> level : 1
at class level -> and : 1
class level and -> function : 1
level and function -> in : 1
and function in -> this : 1
function in this -> we : 1
we will deal -> with : 2
will deal with -> variadic : 1
will deal with -> the : 1
will deal with -> many : 1
deal with variadic -> functions : 1
with variadic functions -> as : 1
variadic functions as -> they : 1
functions as they -> are : 1
as they are -> used : 1
they are used -> extensively : 1
are used extensively -> in : 1
used extensively in -> writing : 1
extensively in writing -> programming : 1
in writing programming -> and : 1
writing programming and -> pipeable : 1
programming and pipeable -> namespace : 1
and pipeable namespace -> add : 1
pipeable namespace add -> given : 1
namespace add given -> below : 1
add given below -> is : 1
given below is -> a : 1
below is a -> base : 1
is a base -> case : 1
a base case -> for : 1
base case for -> ending : 1
case for ending -> compile : 1
for ending compile -> return : 1
ending compile return -> end : 1
compile return end -> declare : 1
return end declare -> a : 1
end declare a -> variadic : 1
declare a variadic -> function : 1
a variadic function -> is : 1
a variadic function -> and : 1
variadic function is -> called : 1
function is called -> parameter : 1
function is called -> to : 1
is called parameter -> the : 1
called parameter the -> synthesize : 1
parameter the synthesize -> a : 1
the synthesize a -> function : 1
synthesize a function -> based : 1
a function based -> on : 2
function based on -> the : 2
number of given -> by : 1
of given by -> the : 1
given by the -> compiler : 1
the compiler will -> do : 1
the compiler will -> invoke : 1
will do type -> class : 1
do type class -> ts : 1
type class ts -> return : 1
class ts return -> first : 1
ts return first -> int : 1
return first int -> n : 1
first int n -> cout : 1
int n cout -> n : 1
n cout n -> the : 1
cout n the -> preceding : 1
n the preceding -> the : 1
the preceding the -> compiler : 1
the preceding the -> variables : 1
the preceding the -> thread : 1
the preceding the -> argument : 1
the preceding the -> instance : 1
the preceding the -> mutex : 2
the preceding the -> of : 1
the preceding the -> loop : 1
the preceding the -> class : 1
the preceding the -> function : 1
the preceding the -> program : 1
preceding the compiler -> synthesizes : 1
the compiler synthesizes -> a : 1
compiler synthesizes a -> function : 1
synthesizes a function -> based : 1
number of arguments -> the : 1
number of arguments -> is : 1
number of arguments -> of : 1
of arguments the -> compiler : 1
arguments the compiler -> understands : 1
the compiler understands -> that : 1
compiler understands that -> is : 1
understands that is -> a : 1
that is a -> variadic : 2
is a variadic -> function : 1
is a variadic -> template : 1
is a variadic -> argument : 1
variadic function and -> generates : 1
function and generates -> the : 1
and generates the -> code : 1
generates the code -> by : 1
the code by -> recursively : 1
code by recursively -> unpacking : 1
code by recursively -> expanding : 1
by recursively unpacking -> the : 1
recursively unpacking the -> parameters : 1
unpacking the parameters -> during : 1
the parameters during -> compile : 1
parameters during compile -> compile : 1
during compile compile -> time : 1
compile compile time -> recursion : 1
compile time recursion -> will : 1
compile time recursion -> on : 1
time recursion will -> stop : 1
recursion will stop -> when : 1
will stop when -> the : 1
stop when the -> compiler : 1
stop when the -> application : 1
when the compiler -> has : 1
the compiler has -> processed : 1
compiler has processed -> all : 1
has processed all -> the : 1
processed all the -> the : 1
all the the -> base : 1
all the the -> method : 1
the the base -> case : 1
the base case -> version : 1
base case version -> is : 1
case version is -> a : 1
version is a -> hint : 1
is a hint -> to : 1
a hint to -> the : 2
hint to the -> compiler : 2
to the compiler -> to : 1
to the compiler -> when : 1
to the compiler -> that : 1
the compiler to -> stop : 1
the compiler to -> execute : 1
compiler to stop -> the : 1
to stop the -> next : 1
stop the next -> program : 1
the next program -> shows : 1
next program shows -> how : 1
program shows how -> variadic : 1
program shows how -> you : 1
shows how variadic -> templates : 1
how variadic templates -> and : 1
variadic templates and -> perfect : 1
variadic templates and -> expression : 1
templates and perfect -> forwarding : 1
and perfect forwarding -> can : 1
and perfect forwarding -> to : 1
perfect forwarding can -> be : 1
forwarding can be -> used : 1
write a function -> that : 3
write a function -> to : 1
a function that -> takes : 2
a function that -> uses : 1
a function that -> accepts : 1
a function that -> might : 1
a function that -> acts : 1
a function that -> gets : 1
a function that -> returns : 1
that takes an -> arbitrary : 1
that takes an -> observer : 1
takes an arbitrary -> number : 1
an arbitrary number -> of : 2
arbitrary number of -> namespace : 1
arbitrary number of -> threads : 1
number of namespace -> print : 1
of namespace print -> values : 1
namespace print values -> to : 1
print values to -> the : 1
to the console -> for : 2
to the console -> in : 1
to the console -> with : 1
to the console -> will : 1
to the console -> of : 1
to the console -> ucout : 1
the console for -> basic : 1
the console for -> diagnostics : 1
console for basic -> these : 1
for basic these -> are : 1
basic these are -> base : 1
these are base -> case : 1
are base case -> cout : 1
base case cout -> value : 1
case cout value -> cout : 1
cout value cout -> value : 1
value cout value -> three : 1
cout value three -> variants : 1
value three variants -> of : 1
three variants of -> print : 1
three variants of -> a : 1
variants of print -> the : 1
of print the -> argument : 1
print the argument -> to : 1
the argument to -> the : 2
the argument to -> be : 1
argument to the -> we : 1
argument to the -> and : 1
argument to the -> thread : 1
argument to the -> constructor : 1
argument to the -> later : 1
argument to the -> a : 1
argument to the -> is : 1
argument to the -> function : 1
argument to the -> string : 1
to the we -> have : 1
to the we -> will : 1
to the we -> are : 1
to the we -> print : 1
the we have -> functions : 1
the we have -> also : 2
the we have -> other : 1
the we have -> done : 1
the we have -> written : 2
the we have -> used : 1
the we have -> only : 1
the we have -> seen : 1
we have functions -> for : 1
have functions for -> printing : 1
functions for printing -> and : 1
for printing and -> using : 1
printing and using -> these : 1
and using these -> functions : 1
using these functions -> as : 1
these functions as -> a : 1
functions as a -> base : 1
as a base -> we : 1
as a base -> class : 1
a base we -> will : 1
base we will -> write : 1
function that uses -> universal : 1
that uses universal -> references : 1
uses universal references -> and : 1
universal references and -> perfect : 1
references and perfect -> forwarding : 1
perfect forwarding to -> write : 1
perfect forwarding to -> invoke : 1
forwarding to write -> functions : 1
to write functions -> that : 1
write functions that -> take : 1
functions that take -> arbitrary : 1
functions that take -> an : 1
that take arbitrary -> you : 1
take arbitrary you -> have : 1
arbitrary you have -> been : 1
you have been -> programming : 1
have been programming -> in : 1
been programming in -> for : 1
programming in for -> a : 1
in for a -> long : 1
for a long -> you : 1
for a long -> why : 1
a long you -> might : 1
long you might -> be : 1
you might be -> familiar : 1
might be familiar -> with : 1
be familiar with -> the : 1
be familiar with -> functional : 1
familiar with the -> fact : 1
familiar with the -> template : 1
familiar with the -> programming : 2
with the fact -> that : 1
fact that references -> help : 1
that references help -> you : 1
references help you -> to : 1
help you to -> alias : 1
help you to -> avoid : 2
help you to -> write : 1
you to alias -> a : 1
to alias a -> variable : 1
alias a variable -> and : 1
a variable and -> you : 1
variable and you -> can : 1
you can do -> assignment : 1
you can do -> is : 1
can do assignment -> to : 1
do assignment to -> the : 1
assignment to the -> references : 1
to the references -> to : 1
the references to -> reflect : 1
references to reflect -> the : 1
reflect the mutation -> in : 1
the mutation in -> the : 1
mutation in the -> variable : 1
in the variable -> the : 1
the variable the -> kinds : 1
variable the kinds -> of : 1
the kinds of -> reference : 1
kinds of reference -> supported : 1
of reference supported -> by : 1
reference supported by -> were : 1
supported by were -> called : 1
by were called -> they : 1
were called they -> were : 1
called they were -> references : 1
they were references -> to : 1
were references to -> variables : 1
references to variables -> that : 1
to variables that -> can : 1
variables that can -> come : 1
that can come -> in : 1
can come in -> the : 1
come in the -> left : 1
come in the -> primary : 1
in the left -> side : 1
the left side -> of : 1
the left side -> label : 1
left side of -> the : 1
side of the -> the : 1
side of the -> in : 1
side of the -> subject : 2
side of the -> http : 1
the the following -> code : 3
the the following -> table : 1
the the following -> program : 1
snippets show the -> use : 1
show the use -> of : 1
use of namespace -> int : 2
of namespace int -> cout : 1
of namespace int -> argc : 1
namespace int cout -> i : 1
int cout i -> ri : 1
cout i ri -> ri : 1
i ri ri -> cout : 1
ri ri cout -> i : 1
ri cout i -> prints : 1
cout i prints -> is : 1
i prints is -> an : 1
prints is an -> instance : 1
is an instance -> in : 1
is an instance -> method : 1
an instance in -> modern : 1
instance in modern -> there : 1
in modern there -> is : 1
modern there is -> the : 1
there is the -> notion : 1
is the notion -> of : 2
notion of defined -> as : 1
of defined as -> anything : 1
defined as anything -> that : 1
as anything that -> is : 1
anything that is -> not : 1
that is not -> an : 1
is not an -> kind : 1
not an kind -> of : 1
an kind of -> stuff : 1
kind of stuff -> that : 1
of stuff that -> can : 1
stuff that can -> appear : 1
that can appear -> on : 1
can appear on -> the : 1
appear on the -> right : 1
appear on the -> screen : 1
on the right -> side : 2
on the right -> and : 1
the right side -> of : 1
the right side -> expression : 1
the right side -> will : 1
right side of -> the : 1
the in classic -> there : 1
in classic there -> was : 1
classic there was -> no : 1
there was no -> notion : 1
was no notion -> of : 1
no notion of -> an : 1
notion of an -> modern : 1
of an modern -> introduced : 1
an modern introduced -> namespace : 1
modern introduced namespace -> j : 1
introduced namespace j -> x : 1
namespace j x -> z : 1
j x z -> x : 2
x z x -> cout : 1
x z x -> y : 1
z x cout -> z : 1
x cout z -> z : 1
cout z z -> cout : 1
z z cout -> z : 1
z cout z -> j : 1
cout z j -> are : 1
z j are -> indicted : 1
j are indicted -> by : 1
are indicted by -> two : 1
indicted by two -> the : 1
by two the -> following : 1
two the following -> program : 1
program will clearly -> demonstrate : 1
will clearly demonstrate -> the : 1
clearly demonstrate the -> use : 1
use of while -> invoking : 1
of while invoking -> namespace : 1
while invoking namespace -> int : 1
invoking namespace int -> a : 1
namespace int a -> a : 1
namespace int a -> make : 1
int a a -> int : 1
a a int -> a : 1
a int a -> cout : 1
int a cout -> cout : 1
a cout cout -> a : 1
cout cout a -> j : 1
cout a j -> x : 1
a j x -> z : 1
z x y -> should : 1
x y should -> call : 1
y should call -> rvalue : 1
should call rvalue -> reference : 1
call rvalue reference -> calls : 1
rvalue reference calls -> lvalue : 1
reference calls lvalue -> refreence : 1
calls lvalue refreence -> real : 1
lvalue refreence real -> power : 1
refreence real power -> of : 1
real power of -> is : 1
power of is -> visible : 1
of is visible -> in : 1
is visible in -> the : 1
visible in the -> case : 1
case of memory -> the : 1
of memory the -> programming : 1
memory the programming -> language : 1
language has got -> the : 1
has got the -> notion : 1
got the notion -> of : 1
notion of copy -> constructor : 1
of copy constructor -> and : 1
copy constructor and -> assignment : 1
copy constructor and -> copy : 1
constructor and assignment -> they : 1
and assignment they -> mostly : 1
assignment they mostly -> copy : 1
they mostly copy -> the : 1
mostly copy the -> source : 1
copy the source -> object : 1
the source object -> with : 1
source object with -> the : 1
object with the -> help : 1
object with the -> task : 1
help of one -> can : 1
of one can -> avoid : 1
one can avoid -> expensive : 1
can avoid expensive -> copying : 1
avoid expensive copying -> by : 1
expensive copying by -> swapping : 1
copying by swapping -> as : 1
by swapping as -> are : 1
swapping as are -> temporaries : 1
as are temporaries -> or : 1
are temporaries or -> intermediate : 1
temporaries or intermediate -> the : 1
or intermediate the -> following : 1
intermediate the following -> section : 1
the following section -> demonstrates : 1
following section demonstrates -> programming : 1
section demonstrates programming -> language : 1
demonstrates programming language -> implicitly : 1
programming language implicitly -> warrants : 1
language implicitly warrants -> a : 1
implicitly warrants a -> copy : 1
warrants a copy -> assignment : 1
a copy assignment -> and : 1
copy assignment and -> a : 1
assignment and a -> destructor : 1
and a destructor -> times : 1
a destructor times -> with : 1
destructor times with -> every : 1
times with every -> class : 1
with every class -> designed : 1
every class designed -> by : 1
class designed by -> this : 1
designed by this -> is : 1
by this is -> meant : 1
this is meant -> to : 1
is meant to -> do : 1
is meant to -> point : 1
is meant to -> handle : 1
meant to do -> resource : 1
to do resource -> management : 1
do resource management -> while : 1
resource management while -> cloning : 1
management while cloning -> an : 1
while cloning an -> object : 1
cloning an object -> or : 1
an object or -> while : 1
object or while -> assigning : 1
or while assigning -> to : 1
while assigning to -> an : 1
assigning to an -> existing : 1
to an existing -> sometimes : 1
an existing sometimes -> it : 1
existing sometimes it -> is : 1
sometimes it is -> very : 1
is very expensive -> to : 1
very expensive to -> copy : 1
expensive to copy -> an : 1
to copy an -> object : 1
copy an object -> and : 1
an object and -> the : 1
an object and -> adds : 1
object and the -> movement : 1
and the movement -> of : 1
the movement of -> ownership : 1
movement of ownership -> helps : 1
of ownership helps -> in : 1
ownership helps in -> writing : 1
helps in writing -> fast : 1
in writing fast -> modern : 1
writing fast modern -> has : 1
fast modern has -> got : 1
modern has got -> a : 1
got a facility -> to : 1
a facility to -> provide : 1
facility to provide -> a : 1
to provide a -> move : 1
to provide a -> conceptual : 1
to provide a -> response : 1
provide a move -> constructor : 1
a move constructor -> and : 1
move constructor and -> a : 1
constructor and a -> move : 1
and a move -> assignment : 1
a move assignment -> operator : 1
move assignment operator -> to : 1
move assignment operator -> of : 1
assignment operator to -> help : 1
operator to help -> developers : 1
to help developers -> avoid : 1
to help developers -> connect : 1
help developers avoid -> copying : 1
developers avoid copying -> large : 1
avoid copying large -> during : 1
copying large during -> the : 1
large during the -> creation : 1
during the creation -> of : 1
creation of a -> new : 1
of a new -> object : 1
a new object -> or : 1
new object or -> assignment : 1
object or assignment -> to : 1
or assignment to -> a : 1
assignment to a -> new : 1
to a new -> can : 1
to a new -> which : 1
a new can -> act : 1
new can act -> as : 1
can act as -> a : 1
can act as -> an : 1
can act as -> both : 1
act as a -> hint : 1
act as a -> limited : 1
act as a -> pair : 1
act as a -> operator : 1
act as a -> notification : 1
as a hint -> to : 1
the compiler when -> temporary : 1
compiler when temporary -> objects : 1
when temporary objects -> are : 1
temporary objects are -> a : 1
objects are a -> move : 1
are a move -> version : 1
a move version -> of : 2
move version of -> a : 1
move version of -> assignment : 1
version of a -> constructor : 1
version of a -> we : 1
of a constructor -> or : 1
a constructor or -> a : 1
constructor or a -> move : 1
or a move -> version : 1
version of assignment -> is : 1
of assignment is -> better : 1
assignment is better -> suited : 1
is better suited -> for : 1
better suited for -> the : 2
better suited for -> gui : 1
suited for the -> namespace : 1
suited for the -> concurrent : 1
for the namespace -> floatbuffer : 1
the namespace floatbuffer -> double : 1
namespace floatbuffer double -> int : 1
floatbuffer double int -> copy : 1
double int copy -> copy : 1
int copy copy -> assignment : 1
copy copy assignment -> operator : 1
copy assignment operator -> source : 1
copy assignment operator -> is : 1
assignment operator source -> code : 1
operator source code -> is : 1
source code is -> if : 1
code is if -> if : 1
is if if -> bfr : 1
if if bfr -> free : 1
if bfr free -> memory : 1
bfr free memory -> of : 1
free memory of -> the : 1
memory of the -> current : 1
of the current -> count : 1
the current count -> bfr : 1
current count bfr -> new : 1
count bfr new -> return : 1
bfr new return -> move : 1
new return move -> constructor : 1
return move constructor -> to : 1
move constructor to -> enable : 1
move constructor to -> optimize : 1
constructor to enable -> move : 1
to enable move -> the : 1
enable move the -> modern : 1
move the modern -> stl : 1
the modern stl -> containers : 1
modern stl containers -> supports : 1
stl containers supports -> move : 1
containers supports move -> cout : 1
supports move cout -> move : 1
move cout move -> since : 1
cout move since -> it : 1
move since it -> is : 1
since it is -> a : 2
it is a -> move : 1
it is a -> lockable : 1
it is a -> bit : 1
it is a -> resource : 1
it is a -> part : 1
is a move -> we : 1
a move we -> are : 1
move we are -> not : 1
are not copying -> elements : 1
not copying elements -> the : 1
copying elements the -> source : 1
elements the source -> we : 1
the source we -> just : 1
source we just -> assign : 1
we just assign -> the : 1
we just assign -> null : 1
just assign the -> pointers : 1
assign the pointers -> to : 1
the pointers to -> steal : 1
pointers to steal -> bfr : 1
to steal bfr -> count : 1
steal bfr count -> now : 1
bfr count now -> that : 1
count now that -> we : 1
now that we -> have : 3
that we have -> grabbed : 1
that we have -> implementations : 1
that we have -> learned : 1
that we have -> not : 1
that we have -> in : 1
that we have -> omitted : 1
that we have -> a : 2
that we have -> created : 1
that we have -> updated : 1
that we have -> covered : 1
we have grabbed -> our : 1
have grabbed our -> we : 1
grabbed our we -> just : 1
our we just -> assign : 1
just assign null -> source : 1
assign null source -> move : 1
null source move -> assignment : 1
source move assignment -> if : 1
move assignment if -> free : 1
assignment if free -> the : 1
if free the -> existing : 1
free the existing -> copy : 1
the existing copy -> the : 1
existing copy the -> data : 1
copy the data -> pointer : 1
the data pointer -> and : 1
data pointer and -> its : 1
pointer and its -> length : 1
and its length -> from : 1
its length from -> source : 1
length from source -> bfr : 1
from source bfr -> count : 1
source bfr count -> we : 1
bfr count we -> have : 1
count we have -> stolen : 1
we have stolen -> the : 1
have stolen the -> now : 1
stolen the now -> set : 1
the now set -> the : 1
now set the -> pinter : 1
set the pinter -> to : 1
the pinter to -> return : 1
pinter to return -> create : 1
to return create -> a : 1
return create a -> vector : 1
create a vector -> object : 1
a vector object -> and : 1
vector object and -> add : 1
object and add -> a : 1
and add a -> few : 1
add a few -> elements : 1
a few elements -> to : 1
few elements to -> since : 1
elements to since -> stl : 1
to since stl -> supports : 1
since stl supports -> move : 1
stl supports move -> semantics : 1
supports move semantics -> move : 1
move semantics move -> methods : 1
semantics move methods -> will : 1
move methods will -> be : 1
methods will be -> in : 1
will be in -> this : 1
will be in -> the : 2
be in this -> particular : 1
this particular case -> compilers : 1
particular case compilers -> are : 1
case compilers are -> function : 1
compilers are function -> can : 1
are function can -> be : 1
function can be -> used : 2
function can be -> a : 1
used to indicate -> passing : 1
used to indicate -> to : 1
to indicate passing -> that : 1
indicate passing that -> the : 1
passing that the -> candidate : 1
that the candidate -> object : 1
the candidate object -> is : 1
candidate object is -> movable : 1
object is movable -> and : 1
is movable and -> the : 1
movable and the -> compiler : 1
and the compiler -> will : 1
and the compiler -> generates : 1
compiler will invoke -> appropriate : 1
will invoke appropriate -> methods : 1
invoke appropriate methods -> assignment : 1
appropriate methods assignment -> or : 1
methods assignment or -> move : 1
assignment or move -> constructor : 1
or move constructor -> to : 1
constructor to optimize -> the : 1
to optimize the -> cost : 1
to optimize the -> code : 1
optimize the cost -> associated : 1
the cost associated -> with : 1
cost associated with -> memory : 1
associated with memory -> is : 1
with memory is -> a : 1
memory is a -> to : 1
is a to -> an : 1
is a to -> understand : 1
a to an -> rvalue : 1
to an rvalue -> object : 1
an rvalue object -> lifetimes : 1
rvalue object lifetimes -> has : 1
object lifetimes has -> been : 1
lifetimes has been -> a : 1
been a problematic -> area : 1
a problematic area -> for : 1
problematic area for -> the : 1
area for the -> programming : 1
for the programming -> if : 1
the programming if -> the : 1
programming if the -> developer : 1
if the developer -> is : 1
the developer is -> not : 1
developer is not -> the : 1
is not the -> program : 1
is not the -> practice : 1
not the program -> can : 1
the program can -> leak : 1
program can leak -> memory : 1
can leak memory -> and : 1
leak memory and -> will : 1
memory and will -> slow : 1
and will slow -> down : 1
will slow down -> smart : 1
slow down smart -> pointers : 1
down smart pointers -> are : 1
smart pointers are -> wrapper : 1
pointers are wrapper -> classes : 1
are wrapper classes -> around : 1
wrapper classes around -> a : 1
classes around a -> raw : 1
around a raw -> pointer : 1
a raw pointer -> where : 2
a raw pointer -> to : 1
raw pointer where -> operators : 1
raw pointer where -> there : 1
pointer where operators -> such : 1
where operators such -> and : 1
operators such and -> referencing : 1
such and referencing -> are : 1
and referencing are -> smart : 1
referencing are smart -> pointers : 1
are smart pointers -> can : 1
smart pointers can -> do : 1
pointers can do -> object : 1
can do object -> lifetime : 1
do object lifetime -> act : 1
object lifetime act -> as : 1
lifetime act as -> a : 1
as a limited -> form : 1
a limited form -> of : 1
limited form of -> garbage : 1
form of garbage -> free : 1
of garbage free -> and : 1
garbage free and -> so : 1
free and so -> the : 1
so the modern -> language : 1
the modern language -> is : 1
the modern language -> provides : 1
the modern language -> functional : 1
modern language is -> a : 1
language is a -> wrapper : 1
is a wrapper -> for : 1
is a wrapper -> to : 1
is a wrapper -> around : 1
is a wrapper -> over : 1
is a wrapper -> on : 1
a wrapper for -> a : 1
wrapper for a -> raw : 1
for a raw -> pointer : 1
for a raw -> it : 1
pointer where there -> is : 1
where there is -> exclusive : 1
there is exclusive -> ownership : 1
is exclusive ownership -> with : 1
exclusive ownership with -> the : 1
ownership with the -> the : 1
with the the -> following : 1
with the the -> purpose : 1
with the the -> function : 2
with the the -> output : 2
with the the -> template : 1
with the the -> previous : 1
with the the -> methods : 1
following code snippet -> will : 1
following code snippet -> demonstrates : 1
code snippet will -> demonstrate : 1
snippet will demonstrate -> the : 1
namespace int argc -> char : 2
int argc char -> define : 1
int argc char -> cout : 1
int argc char -> double : 1
argc char define -> a : 1
char define a -> smart : 1
define a smart -> pointer : 1
a smart pointer -> for : 2
a smart pointer -> that : 1
a smart pointer -> type : 1
smart pointer for -> stl : 1
smart pointer for -> server : 1
pointer for stl -> deque : 1
for stl deque -> populate : 1
stl deque populate -> values : 1
deque populate values -> leverages : 1
populate values leverages -> auto : 1
values leverages auto -> dqiter : 1
leverages auto dqiter -> while : 1
auto dqiter while -> dqiter : 1
dqiter while dqiter -> cout : 1
while dqiter cout -> smartpointer : 1
dqiter cout smartpointer -> will : 1
cout smartpointer will -> free : 1
smartpointer will free -> and : 1
will free and -> dtor : 1
free and dtor -> will : 1
and dtor will -> be : 1
dtor will be -> called : 1
be called return -> is : 1
called return is -> a : 1
is a smart -> pointer : 1
smart pointer that -> uses : 1
pointer that uses -> reference : 1
that uses reference -> counting : 1
uses reference counting -> to : 1
reference counting to -> keep : 1
counting to keep -> track : 1
to keep track -> of : 1
keep track of -> references : 1
track of references -> made : 1
of references made -> to : 1
references made to -> a : 1
made to a -> particular : 1
a particular instance -> of : 2
particular instance of -> an : 1
particular instance of -> any : 1
instance of an -> the : 1
instance of an -> instance : 1
of an the -> underlying : 1
an the underlying -> object : 1
the underlying object -> is : 1
underlying object is -> destroyed : 1
object is destroyed -> when : 1
is destroyed when -> the : 1
destroyed when the -> last : 1
when the last -> remaining : 1
the last remaining -> pointing : 1
last remaining pointing -> to : 1
remaining pointing to -> it : 1
pointing to it -> is : 1
it is destroyed -> or : 1
is destroyed or -> namespace : 1
destroyed or namespace -> even : 1
or namespace even -> if : 1
namespace even if -> you : 1
even if you -> pass : 1
if you pass -> by : 1
you pass by -> the : 1
pass by the -> update : 1
by the update -> is : 1
the update is -> visible : 1
update is visible -> to : 1
is visible to -> as : 1
visible to as -> copy : 1
to as copy -> constructor : 1
as copy constructor -> counts : 1
copy constructor counts -> to : 1
constructor counts to -> the : 1
counts to the -> orgininal : 1
to the orgininal -> passed : 1
the orgininal passed -> by : 1
orgininal passed by -> have : 1
passed by have -> created : 1
by have created -> a : 1
have created a -> char : 1
have created a -> set : 1
have created a -> producer : 1
have created a -> new : 1
created a char -> auto : 1
a char auto -> sp : 1
char auto sp -> the : 1
auto sp the -> output : 1
sp the output -> should : 1
the output should -> be : 1
output should be -> is : 1
should be is -> a : 1
be is a -> container : 1
be is a -> direct : 1
is a container -> for : 1
a container for -> a : 1
a container for -> ieee : 1
container for a -> raw : 1
a raw it -> is : 1
raw it is -> created : 1
it is created -> as : 1
is created as -> a : 1
created as a -> copy : 1
as a copy -> of : 1
a copy of -> a : 1
a copy of -> the : 1
copy of a -> the : 1
of a the -> existence : 1
of a the -> examples : 1
of a the -> following : 1
of a the -> transfer : 1
a the existence -> or : 1
the existence or -> destruction : 1
existence or destruction -> of : 1
or destruction of -> copies : 1
destruction of copies -> of : 1
of copies of -> a : 1
copies of a -> have : 2
of a have -> no : 1
of a have -> been : 1
a have no -> effect : 1
have no effect -> on : 1
no effect on -> the : 1
effect on the -> or : 1
on the or -> its : 1
the or its -> other : 1
or its other -> after : 1
its other after -> all : 1
other after all -> copies : 1
after all copies -> of : 1
all copies of -> a : 1
a have been -> all : 1
have been all -> copies : 1
been all copies -> become : 1
all copies become -> the : 1
copies become the -> following : 1
become the following -> program : 1
following program demonstrates -> a : 1
following program demonstrates -> the : 1
following program demonstrates -> int : 1
following program demonstrates -> subtle : 1
program demonstrates a -> mechanism : 1
demonstrates a mechanism -> that : 1
a mechanism that -> helps : 1
a mechanism that -> was : 1
mechanism that helps -> us : 1
that helps us -> to : 1
that helps us -> count : 1
us to detect -> defunct : 1
us to detect -> type : 1
to detect defunct -> pointers : 1
detect defunct pointers -> using : 1
defunct pointers using -> namespace : 1
pointers using namespace -> int : 1
using namespace int -> argc : 1
using namespace int -> generate : 1
using namespace int -> a : 1
using namespace int -> chain : 1
using namespace int -> create : 1
argc char cout -> this : 1
char cout this -> will : 1
this will be -> will : 1
this will be -> discussed : 1
this will be -> a : 1
will be will -> go : 1
be will go -> out : 1
will go out -> of : 1
go out of -> the : 1
of the is -> always : 1
of the is -> controlled : 1
the is always -> else : 1
is always else -> part : 1
always else part -> will : 1
else part will -> be : 1
part will be -> as : 1
will be as -> is : 1
will be as -> thread : 1
be as is -> nullptr : 1
as is nullptr -> now : 1
is nullptr now -> cout : 1
nullptr now cout -> cout : 1
now cout cout -> return : 1
cout cout return -> had : 1
cout return had -> a : 1
return had a -> smart : 1
had a smart -> pointer : 1
smart pointer type -> called : 1
pointer type called -> and : 1
type called and -> it : 1
called and it -> has : 1
has been removed -> from : 1
been removed from -> the : 1
removed from the -> language : 1
from the language -> one : 1
the language one -> needs : 1
language one needs -> to : 1
one needs to -> use : 1
one needs to -> learn : 1
needs to use -> of : 1
to use of -> the : 1
use of the -> major : 1
use of the -> raii : 1
of the major -> additions : 1
the major additions -> to : 1
major additions to -> the : 1
the language is -> lambda : 1
language is lambda -> functions : 1
is lambda functions -> and : 1
functions and lambda -> they : 1
and lambda they -> are : 1
lambda they are -> anonymous : 1
they are anonymous -> functions : 1
are anonymous functions -> that : 1
anonymous functions that -> the : 1
functions that the -> programmer : 1
that the programmer -> can : 1
the programmer can -> define : 1
programmer can define -> at : 1
can define at -> the : 1
define at the -> call : 1
at the call -> site : 1
at the call -> auto : 1
the call site -> to : 1
call site to -> perform : 1
site to perform -> some : 1
to perform some -> this : 1
to perform some -> based : 1
perform some this -> simplifies : 1
some this simplifies -> the : 1
this simplifies the -> logic : 1
simplifies the logic -> and : 1
the logic and -> code : 1
logic and code -> readability : 1
and code readability -> also : 1
code readability also -> increases : 1
readability also increases -> in : 1
also increases in -> a : 1
increases in a -> remarkable : 1
in a remarkable -> than : 1
a remarkable than -> defining : 1
remarkable than defining -> what : 1
than defining what -> a : 1
defining what a -> lambda : 1
what a lambda -> function : 1
a lambda function -> let : 1
a lambda function -> to : 1
a lambda function -> as : 1
a lambda function -> inside : 1
a lambda function -> that : 1
a lambda function -> for : 1
lambda function let -> us : 1
function let us -> write : 1
write a piece -> of : 2
a piece of -> code : 5
a piece of -> software : 1
piece of code -> that : 2
piece of code -> or : 1
piece of code -> called : 1
piece of code -> the : 1
piece of code -> is : 1
of code that -> helps : 1
of code that -> computes : 1
of code that -> are : 1
code that helps -> us : 1
helps us count -> the : 1
us count the -> number : 1
count the number -> of : 2
number of positive -> numbers : 1
of positive numbers -> in : 1
positive numbers in -> a : 1
numbers in a -> in : 1
in a in -> this : 1
a in this -> we : 1
a in this -> is : 1
a in this -> when : 1
this we need -> to : 1
need to filter -> out : 1
to filter out -> the : 1
to filter out -> auto : 1
filter out the -> negative : 1
out the negative -> values : 1
the negative values -> and : 1
negative values and -> count : 1
values and count -> the : 1
and count the -> we : 1
count the we -> will : 1
will use an -> stl : 1
use an stl -> to : 1
an stl to -> write : 1
stl to write -> the : 1
to write the -> namespace : 1
to write the -> visitor : 1
to write the -> server : 1
write the namespace -> auto : 1
the namespace auto -> define : 1
namespace auto define -> a : 2
auto define a -> lambda : 1
auto define a -> binaryoperation : 1
define a lambda -> function : 1
lambda function to -> filter : 1
function to filter -> out : 1
function to filter -> a : 1
filter out auto -> filter : 1
out auto filter -> const : 1
auto filter const -> value : 1
filter const value -> auto : 1
const value auto -> cout : 1
value auto cout -> cnt : 1
auto cout cnt -> the : 1
cout cnt the -> preceding : 1
cnt the preceding -> code : 1
the preceding code -> the : 3
the preceding code -> snippet : 1
the preceding code -> may : 2
preceding code the -> variable : 1
preceding code the -> function : 1
preceding code the -> instance : 1
code the variable -> filter : 1
the variable filter -> is : 1
variable filter is -> assigned : 1
filter is assigned -> an : 1
is assigned an -> anonymous : 1
is assigned an -> expression : 1
assigned an anonymous -> function : 1
an anonymous function -> and : 1
anonymous function and -> we : 1
function and we -> are : 1
and we are -> using : 3
are using the -> filter : 1
are using the -> qt : 1
are using the -> operator : 1
using the filter -> in : 1
the filter in -> the : 1
filter in the -> let : 1
in the let -> us : 1
a simple lambda -> function : 1
simple lambda function -> that : 1
lambda function that -> we : 1
lambda function that -> takes : 1
function that we -> will : 1
we will specify -> at : 1
will specify at -> the : 1
specify at the -> function : 1
at the function -> call : 1
the function call -> we : 1
the function call -> requests : 1
function call we -> will : 1
call we will -> be : 1
will be using -> stl : 1
will be using -> in : 2
will be using -> function : 1
will be using -> a : 1
will be using -> the : 3
be using stl -> accumulate : 1
using stl accumulate -> to : 1
stl accumulate to -> aggregate : 1
accumulate to aggregate -> the : 1
to aggregate the -> values : 1
aggregate the values -> inside : 1
the values inside -> a : 1
the values inside -> of : 1
values inside a -> namespace : 1
inside a namespace -> auto : 1
a namespace auto -> define : 1
define a binaryoperation -> lambda : 1
a binaryoperation lambda -> at : 1
binaryoperation lambda at -> the : 1
lambda at the -> call : 1
the call auto -> accum : 1
call auto accum -> const : 1
auto accum const -> auto : 1
accum const auto -> const : 1
const auto const -> s : 1
auto const s -> cout : 1
const s cout -> accum : 1
s cout accum -> and : 1
cout accum and -> classic : 1
accum and classic -> while : 1
and classic while -> using : 1
classic while using -> we : 1
while using we -> extensively : 1
using we extensively -> use : 1
we extensively use -> function : 1
extensively use function -> objects : 1
use function objects -> or : 1
use function objects -> and : 1
function objects or -> functors : 1
objects or functors -> by : 1
or functors by -> overloading : 1
functors by overloading -> function : 1
by overloading function -> operators : 1
overloading function operators -> to : 1
function operators to -> write : 1
operators to write -> transformation : 1
to write transformation -> filters : 1
write transformation filters -> reduction : 1
transformation filters reduction -> on : 1
filters reduction on -> stl : 1
reduction on stl -> namespace : 1
on stl namespace -> functors : 1
stl namespace functors -> to : 1
namespace functors to -> add : 1
functors to add -> and : 1
to add and -> multiply : 1
add and multiply -> two : 1
and multiply two -> t : 1
multiply two t -> operator : 1
two t operator -> const : 1
t operator const -> a : 2
operator const a -> return : 2
const a return -> init : 2
a return init -> multiply : 1
a return init -> double : 1
return init multiply -> t : 1
init multiply t -> operator : 1
multiply t operator -> const : 1
return init double -> sum : 1
init double sum -> cout : 1
double sum cout -> sum : 1
sum cout sum -> sum : 1
cout sum sum -> a : 1
sum sum a -> b : 1
sum a b -> return : 1
a b return -> a : 1
a b return -> we : 1
b return a -> cout : 2
b return a -> b : 1
return a cout -> sum : 1
return a cout -> following : 1
a cout sum -> double : 1
cout sum double -> cout : 1
sum double cout -> a : 1
double cout a -> const : 1
cout a const -> b : 1
a const b -> return : 2
const b return -> a : 2
a cout following -> program : 1
cout following program -> clearly : 1
following program clearly -> demonstrates : 1
program clearly demonstrates -> the : 1
clearly demonstrates the -> usage : 1
demonstrates the usage -> of : 2
the usage of -> lambda : 1
the usage of -> method : 1
the usage of -> sequential : 1
the usage of -> the : 3
the usage of -> libcurl : 1
usage of lambda -> by : 1
of lambda by -> writing : 1
lambda by writing -> a : 1
by writing a -> toy : 1
by writing a -> simple : 1
by writing a -> visitor : 1
by writing a -> wrapper : 1
writing a toy -> sort : 1
a toy sort -> we : 1
toy sort we -> will : 1
sort we will -> we : 1
we will we -> can : 1
will we can -> use : 1
we can use -> function : 1
we can use -> range : 1
we can use -> type : 1
we can use -> unix : 1
we can use -> an : 1
we can use -> a : 2
we can use -> the : 5
we can use -> this : 1
we can use -> postman : 1
we can use -> and : 1
can use function -> objects : 1
function objects and -> lambdas : 1
objects and lambdas -> to : 1
and lambdas to -> write : 1
lambdas to write -> equivalent : 1
to write equivalent -> the : 1
write equivalent the -> code : 1
equivalent the code -> is : 1
code is written -> in : 1
is written in -> a : 1
written in a -> generic : 1
written in a -> manner : 1
a generic but -> it : 1
generic but it -> makes : 1
but it makes -> an : 1
it makes an -> assumption : 1
makes an assumption -> that : 2
an assumption that -> numbers : 1
an assumption that -> there : 1
an assumption that -> each : 1
assumption that numbers -> are : 1
that numbers are -> expected : 1
numbers are expected -> or : 1
are expected or -> a : 1
expected or a -> user : 1
or a user -> defined : 1
or a user -> activity : 1
a user defined -> namespace : 1
user defined namespace -> generic : 1
defined namespace generic -> functions : 1
namespace generic functions -> for : 1
generic functions for -> comparison : 1
functions for comparison -> and : 1
for comparison and -> a : 1
comparison and a -> a : 1
and a a -> b : 1
a a b -> a : 1
a b a -> t : 1
b a t -> c : 1
a t c -> and : 1
t c and -> are : 1
c and are -> generic : 1
and are generic -> functions : 1
are generic functions -> that : 1
generic functions that -> will : 1
functions that will -> be : 1
that will be -> used : 1
used to compare -> adjacent : 1
to compare adjacent -> elements : 1
compare adjacent elements -> and : 1
adjacent elements and -> swap : 1
elements and swap -> while : 1
and swap while -> performing : 1
swap while performing -> the : 1
while performing the -> sort : 1
performing the sort -> t : 1
the sort t -> int : 1
sort t int -> length : 1
t int length -> int : 1
t int length -> auto : 1
int length int -> if : 1
length int if -> with : 1
int if with -> cmp : 1
if with cmp -> and : 1
with cmp and -> writing : 1
cmp and writing -> a : 1
and writing a -> bubble : 1
and writing a -> implementation : 1
and writing a -> visitor : 1
writing a bubble -> sort : 1
a bubble sort -> is : 1
bubble sort is -> a : 1
sort is a -> simple : 1
is a simple -> we : 1
is a simple -> pattern : 1
is a simple -> example : 1
is a simple -> with : 1
a simple we -> need : 1
simple we need -> to : 1
have a nested -> loop : 1
a nested loop -> where : 1
nested loop where -> we : 1
loop where we -> will : 1
where we will -> compare : 1
where we will -> take : 1
we will compare -> two : 1
will compare two -> elements : 1
compare two elements -> and : 1
two elements and -> if : 1
elements and if -> cmp : 1
and if cmp -> returns : 1
if cmp returns -> we : 1
cmp returns we -> will : 1
returns we will -> invoke : 1
we will invoke -> swap : 1
will invoke swap -> to : 1
invoke swap to -> exchange : 1
swap to exchange -> t : 1
to exchange t -> int : 1
exchange t int -> length : 1
int length auto -> cmplambda : 1
length auto cmplambda -> a : 1
auto cmplambda a -> const : 1
cmplambda a const -> b : 1
return a b -> auto : 1
a b auto -> swaplambda : 1
a b auto -> c : 1
b auto swaplambda -> a : 1
auto swaplambda a -> b : 1
swaplambda a b -> auto : 1
b auto c -> int : 1
auto c int -> if : 1
c int if -> swaplambda : 1
int if swaplambda -> the : 1
if swaplambda the -> preceding : 1
swaplambda the preceding -> we : 1
the preceding we -> define : 1
the preceding we -> have : 1
the preceding we -> will : 1
the preceding we -> are : 1
preceding we define -> the : 1
we define the -> comparison : 1
define the comparison -> and : 1
the comparison and -> swap : 1
comparison and swap -> function : 1
and swap function -> as : 1
swap function as -> the : 1
function as the -> lambda : 1
function as the -> initialization : 1
as the lambda -> function : 1
the lambda function -> a : 1
the lambda function -> of : 3
lambda function a -> mechanism : 1
function a mechanism -> to : 1
a mechanism to -> specify : 1
a mechanism to -> convert : 1
a mechanism to -> execute : 1
a mechanism to -> flatten : 1
a mechanism to -> invoke : 1
mechanism to specify -> a : 1
to specify a -> piece : 1
to specify a -> different : 1
specify a piece -> of : 1
of code or -> expression : 1
code or expression -> often : 1
or expression often -> called : 1
expression often called -> anonymous : 1
often called anonymous -> the : 1
called anonymous the -> definition : 1
anonymous the definition -> can : 1
the definition can -> be : 1
definition can be -> given : 1
can be given -> in : 1
be given in -> a : 1
given in a -> syntax : 1
in a syntax -> specified : 1
a syntax specified -> by : 1
syntax specified by -> the : 1
by the and -> be : 1
the and be -> assigned : 1
and be assigned -> to : 1
be assigned to -> a : 1
assigned to a -> passed : 1
to a passed -> as : 1
a passed as -> a : 1
passed as a -> parameter : 1
passed as a -> typename : 1
a parameter or -> returned : 1
parameter or returned -> from : 1
or returned from -> a : 1
returned from a -> in : 1
from a in -> the : 1
a in the -> preceding : 1
a in the -> previous : 1
a in the -> things : 1
a in the -> body : 1
in the preceding -> the : 3
in the preceding -> we : 2
in the preceding -> is : 1
in the preceding -> int : 1
in the preceding -> categories : 1
preceding the variables -> and : 1
the variables and -> are : 1
variables and are -> examples : 1
and are examples -> of : 1
are examples of -> anonymous : 1
examples of anonymous -> functions : 1
of anonymous functions -> specified : 1
anonymous functions specified -> in : 1
specified in lambda -> body : 1
in lambda body -> of : 1
lambda body of -> the : 1
body of the -> lambda : 2
body of the -> method : 1
body of the -> response : 1
body of the -> we : 2
body of the -> string : 1
body of the -> concatenates : 1
of the lambda -> functions : 1
of the lambda -> by : 1
of the lambda -> methods : 1
of the lambda -> function : 2
the lambda functions -> is : 1
lambda functions is -> not : 1
functions is not -> much : 1
from the preceding -> function : 1
from the preceding -> is : 1
the preceding function -> learn : 1
preceding function learn -> more : 1
function learn more -> about : 1
more about lambda -> functions : 1
about lambda functions -> and : 1
functions and you -> can : 1
can consult the -> page : 1
consult the page -> at : 1
the page at -> const : 1
page at const -> i : 1
at const i -> i : 1
const i i -> cout : 1
i i cout -> routine : 1
i cout routine -> just : 1
cout routine just -> cycles : 1
routine just cycles -> through : 1
just cycles through -> the : 1
cycles through the -> elements : 1
cycles through the -> array : 1
through the elements -> in : 1
the elements in -> the : 2
elements in the -> container : 1
elements in the -> queue : 1
in the container -> and : 1
the container and -> prints : 1
container and prints -> the : 1
and prints the -> contents : 1
and prints the -> index : 1
prints the contents -> to : 1
prints the contents -> of : 1
the contents to -> the : 1
contents to the -> int : 1
to the int -> argc : 1
to the int -> cnt : 1
the int argc -> char : 1
argc char double -> cout : 1
char double cout -> cout : 1
double cout cout -> and : 1
cout cout and -> partial : 1
cout and partial -> function : 1
partial function advantage -> of : 1
function advantage of -> lambdas : 1
advantage of lambdas -> is : 1
of lambdas is -> you : 1
lambdas is you -> can : 1
is you can -> compose : 1
you can compose -> two : 1
can compose two -> functions : 1
compose two functions -> together : 1
compose two functions -> auto : 1
two functions together -> to : 1
functions together to -> create : 1
together to create -> a : 1
create a composition -> of : 1
a composition of -> functions : 1
composition of functions -> as : 1
of functions as -> you : 1
functions as you -> do : 1
as you do -> in : 1
you do in -> mathematics : 1
do in mathematics -> about : 1
in mathematics about -> function : 1
mathematics about function -> composition : 1
about function composition -> in : 1
function composition in -> the : 1
composition in the -> context : 1
context of mathematics -> and : 1
of mathematics and -> functional : 1
mathematics and functional -> using : 1
and functional using -> favorite : 1
functional using favorite -> search : 1
using favorite search -> the : 1
favorite search the -> following : 1
search the following -> program : 1
program demonstrates the -> this : 1
program demonstrates the -> workings : 2
demonstrates the this -> is : 1
the this is -> a : 2
the this is -> the : 1
the this is -> one : 1
the this is -> very : 1
this is a -> toy : 1
this is a -> private : 1
this is a -> norm : 1
this is a -> great : 1
this is a -> difficult : 1
this is a -> guarantee : 1
this is a -> partially : 1
this is a -> very : 1
this is a -> good : 1
this is a -> convenient : 1
this is a -> json : 1
this is a -> boolean : 1
this is a -> place : 1
is a toy -> implementation : 1
a toy implementation -> and : 1
a toy implementation -> of : 1
toy implementation and -> writing : 1
implementation and writing -> a : 1
writing a implementation -> is : 1
a implementation is -> beyond : 1
implementation is beyond -> the : 1
is beyond the -> scope : 2
of this namespace -> base : 1
this namespace base -> case : 1
namespace base case -> compile : 1
base case compile -> time : 1
case compile time -> stops : 1
compile time stops -> typename : 1
time stops typename -> return : 1
stops typename return -> return : 1
typename return return -> performs : 1
return return performs -> compile : 1
return performs compile -> time : 1
performs compile time -> recursion : 1
time recursion on -> number : 1
recursion on number -> of : 1
on number of -> return : 1
number of return -> return : 1
of return return -> is : 1
return return is -> a : 1
return return is -> another : 1
variadic template function -> and : 1
template function and -> the : 1
function and the -> compiler : 1
the compiler generates -> code : 1
compiler generates code -> by : 1
generates code by -> recursively : 1
by recursively expanding -> the : 1
recursively expanding the -> arguments : 1
expanding the arguments -> until : 1
the arguments until -> all : 1
arguments until all -> the : 1
until all the -> arguments : 1
until all the -> children : 1
all the arguments -> are : 1
the arguments are -> in : 1
arguments are in -> the : 1
are in the -> preceding : 1
are in the -> command : 1
preceding we have -> used : 1
we have used -> to : 1
we have used -> the : 2
have used to -> indicate : 1
to indicate to -> the : 1
indicate to the -> compiler : 1
indicate to the -> client : 3
the compiler that -> we : 1
compiler that we -> should : 1
that we should -> capture : 1
we should capture -> all : 1
should capture all -> variables : 1
capture all variables -> referenced : 1
all variables referenced -> in : 1
variables referenced in -> the : 1
referenced in the -> body : 1
in the body -> of : 3
the body of -> the : 6
the lambda by -> you : 1
lambda by you -> can : 1
by you can -> study : 1
you can study -> more : 1
can study more -> about : 1
study more about -> closure : 1
more about closure -> and : 1
about closure and -> variable : 1
closure and variable -> capture : 1
and variable capture -> in : 1
variable capture in -> the : 1
capture in the -> context : 1
context of functional -> the : 1
of functional the -> language : 1
functional the language -> gives : 1
language gives flexibility -> to : 1
gives flexibility to -> variables : 1
flexibility to variables -> by : 1
to variables by -> value : 1
variables by value -> well : 1
by value well -> as : 1
value well as -> using : 1
well as using -> or : 1
as using or -> by : 1
using or by -> specifying : 1
or by specifying -> variables : 1
by specifying variables -> to : 1
specifying variables to -> be : 1
variables to be -> captured : 1
to be captured -> explicitly : 1
be captured explicitly -> as : 1
captured explicitly as -> functional : 1
explicitly as functional -> programming : 1
as functional programming -> paradigm : 1
functional programming paradigm -> is : 1
programming paradigm is -> based : 1
paradigm is based -> on : 1
based on a -> mathematical : 1
based on a -> technique : 1
on a mathematical -> formalism : 1
a mathematical formalism -> called : 1
mathematical formalism called -> lambda : 1
formalism called lambda -> calculus : 1
called lambda calculus -> invented : 1
lambda calculus invented -> by : 1
calculus invented by -> alonzo : 1
invented by alonzo -> an : 1
by alonzo an -> american : 1
alonzo an american -> the : 1
an american the -> lambda : 1
american the lambda -> calculus : 1
the lambda calculus -> supports : 1
lambda calculus supports -> only : 1
calculus supports only -> unary : 1
supports only unary -> functions : 1
only unary functions -> and : 1
unary functions and -> currying : 1
functions and currying -> is : 1
and currying is -> a : 1
currying is a -> technique : 1
is a technique -> that : 1
is a technique -> where : 1
a technique that -> breaks : 1
technique that breaks -> a : 1
that breaks a -> multiple : 1
breaks a multiple -> argument : 1
a multiple argument -> function : 1
multiple argument function -> into : 1
argument function into -> a : 1
function into a -> series : 1
into a series -> of : 1
series of function -> evaluations : 1
of function evaluations -> that : 1
function evaluations that -> take : 1
evaluations that take -> one : 1
that take one -> argument : 1
take one argument -> at : 1
one argument at -> a : 1
argument at a -> lambdas : 1
at a lambdas -> and : 1
a lambdas and -> writing : 1
lambdas and writing -> functions : 1
and writing functions -> in : 1
writing functions in -> a : 1
functions in a -> specific : 1
in a specific -> we : 1
a specific we -> can : 1
specific we can -> simulate : 1
we can simulate -> currying : 1
can simulate currying -> in : 1
simulate currying in -> return : 1
currying in return -> return : 1
in return return -> return : 1
return return x -> y : 1
return x y -> partial : 1
x y partial -> function : 1
y partial function -> application : 1
partial function application -> involves : 1
function application involves -> the : 1
application involves the -> conversion : 1
involves the conversion -> of : 1
the conversion of -> functions : 1
the conversion of -> to : 1
conversion of functions -> with : 1
of functions with -> multiple : 1
functions with multiple -> arguments : 1
with multiple arguments -> into : 1
multiple arguments into -> a : 1
into a fixed -> number : 1
number of if -> the : 1
of if the -> fixed : 1
if the fixed -> number : 1
the fixed number -> of : 1
of arguments is -> less : 1
arguments is less -> than : 1
is less than -> the : 1
less than the -> arity : 1
less than the -> let : 1
than the arity -> of : 1
the arity of -> the : 1
arity of the -> a : 1
of the a -> new : 1
of the a -> instance : 1
of the a -> spreadsheet : 1
of the a -> production : 1
the a new -> function : 1
a new function -> will : 1
a new function -> that : 1
new function will -> be : 1
function will be -> returned : 1
function will be -> we : 1
function will be -> invoked : 1
function will be -> applied : 2
function will be -> explained : 1
function will be -> called : 1
will be returned -> that : 1
will be returned -> to : 1
be returned that -> expects : 1
returned that expects -> the : 1
that expects the -> rest : 1
expects the rest -> of : 1
the rest of -> the : 4
rest of the -> when : 1
rest of the -> system : 1
rest of the -> the : 1
rest of the -> code : 1
of the when -> all : 1
the when all -> parameters : 1
when all parameters -> are : 1
all parameters are -> the : 1
parameters are the -> function : 1
are the function -> will : 1
the function will -> be : 2
the function will -> exit : 1
the function will -> unlock : 1
the function will -> return : 1
will be we -> can : 1
will be we -> have : 1
be we can -> treat : 1
be we can -> also : 1
we can treat -> the : 3
can treat the -> partial : 1
can treat the -> input : 1
can treat the -> node : 1
treat the partial -> application : 1
the partial application -> as : 1
partial application as -> some : 1
application as some -> form : 1
as some form -> parameters : 1
some form parameters -> are : 1
form parameters are -> cached : 1
parameters are cached -> until : 1
are cached until -> we : 1
cached until we -> receive : 1
until we receive -> all : 1
we receive all -> of : 1
receive all of -> them : 1
all of them -> to : 1
them to invoke -> the : 1
to invoke the -> following : 1
to invoke the -> class : 1
to invoke the -> preceding : 1
to invoke the -> void : 1
to invoke the -> conversion : 1
invoke the following -> code : 1
following code we -> have : 1
code we have -> constructs : 1
we have constructs -> like : 1
have constructs like -> template : 1
constructs like template -> parameter : 1
like template parameter -> pack : 1
template parameter pack -> and : 1
template parameter pack -> is : 1
parameter pack and -> variadic : 2
pack and variadic -> template : 1
pack and variadic -> templates : 1
and variadic template -> parameter : 1
variadic template parameter -> pack : 1
parameter pack is -> a : 2
parameter pack is -> called : 1
pack is a -> template : 1
pack is a -> function : 1
a template parameter -> that : 1
template parameter that -> accepts : 1
parameter that accepts -> zero : 2
that accepts zero -> or : 2
accepts zero or -> more : 2
zero or more -> template : 1
zero or more -> function : 1
or more template -> arguments : 1
more template arguments -> or : 1
template arguments or -> a : 1
arguments or a -> function : 1
or a function -> parameter : 1
a function parameter -> pack : 1
a function parameter -> that : 1
function parameter pack -> is : 1
is a function -> parameter : 1
is a function -> that : 3
is a function -> called : 1
function parameter that -> accepts : 1
or more function -> a : 1
more function a -> template : 1
function a template -> with : 1
a template with -> at : 1
template with at -> least : 1
with at least -> one : 1
at least one -> parameter : 1
at least one -> thread : 1
at least one -> this : 2
at least one -> element : 1
at least one -> the : 1
least one parameter -> pack : 1
one parameter pack -> is : 1
pack is called -> a : 1
called a variadic -> a : 1
a variadic a -> good : 1
variadic a good -> idea : 1
a good idea -> about : 1
good idea about -> parameter : 1
idea about parameter -> pack : 1
about parameter pack -> and : 1
and variadic templates -> is : 1
variadic templates is -> necessary : 1
templates is necessary -> for : 1
is necessary for -> understanding : 1
is necessary for -> any : 1
necessary for understanding -> if : 1
for understanding if -> constexpr : 1
understanding if constexpr -> base : 1
if constexpr base -> evaluate : 1
constexpr base evaluate -> and : 1
base evaluate and -> return : 1
evaluate and return -> the : 1
and return the -> return : 1
and return the -> old : 1
and return the -> new : 1
return the return -> recursive : 1
the return recursive -> bind : 1
return recursive bind -> and : 1
recursive bind and -> return : 1
bind and return -> return : 1
and return return -> return : 1
return return compose -> two : 1
return compose two -> functions : 1
two functions auto -> val : 1
functions auto val -> const : 1
auto val const -> const : 1
val const const -> a : 1
const const a -> val : 1
const a val -> cout : 1
a val cout -> val : 1
val cout val -> print : 1
val cout val -> return : 1
cout val print -> invoke : 1
val print invoke -> the : 1
print invoke the -> curried : 1
invoke the curried -> auto : 1
the curried auto -> p : 1
curried auto p -> cout : 1
auto p cout -> p : 1
p cout p -> compose : 1
cout p compose -> a : 1
p compose a -> set : 1
compose a set -> of : 1
a set of -> function : 1
a set of -> callable : 1
a set of -> mechanisms : 1
a set of -> assertions : 1
a set of -> associated : 1
a set of -> libraries : 1
a set of -> for : 1
a set of -> they : 1
a set of -> patterns : 1
a set of -> techniques : 1
a set of -> dependent : 1
a set of -> which : 1
a set of -> primitive : 1
a set of -> visualization : 1
a set of -> we : 1
a set of -> such : 1
a set of -> commonly : 1
a set of -> values : 1
a set of -> records : 1
a set of -> prerequisites : 1
set of function -> auto : 1
of function auto -> func : 1
function auto func -> const : 1
auto func const -> const : 1
func const const -> n : 1
const const n -> const : 1
const n const -> n : 1
const n const -> cout : 1
n const n -> const : 1
n const cout -> invoke : 1
const cout invoke -> partial : 1
cout invoke partial -> functions : 1
invoke partial functions -> giving : 1
partial functions giving -> different : 1
functions giving different -> wrappers : 1
giving different wrappers -> are : 1
different wrappers are -> classes : 1
wrappers are classes -> that : 1
are classes that -> can : 1
that can wrap -> any : 1
can wrap any -> function : 1
wrap any function -> or : 1
any function or -> lambdas : 1
function or lambdas -> into : 1
or lambdas into -> a : 1
lambdas into a -> copiable : 1
into a copiable -> the : 1
a copiable the -> type : 1
copiable the type -> of : 1
of the wrapper -> depends : 1
the wrapper depends -> upon : 1
wrapper depends upon -> the : 1
depends upon the -> function : 1
upon the function -> prototype : 1
the function prototype -> of : 2
function prototype of -> the : 2
prototype of the -> from : 1
prototype of the -> thread : 1
of the from -> the : 1
the from the -> header : 1
from the header -> represents : 1
the header represents -> a : 1
header represents a -> function : 1
represents a function -> requires : 1
a function requires -> namespace : 1
function requires namespace -> simple : 1
requires namespace simple -> function : 1
namespace simple function -> cout : 1
simple function cout -> val : 1
function cout val -> a : 1
cout val a -> class : 1
val a class -> which : 1
a class which -> overloads : 1
class which overloads -> function : 1
which overloads function -> printnumber : 1
overloads function printnumber -> void : 1
function printnumber void -> const : 1
printnumber void const -> i : 1
void const i -> to : 1
const i to -> demonstrate : 1
i to demonstrate -> the : 1
demonstrate the usage -> of : 3
usage of method -> fooclass : 1
of method fooclass -> int : 1
method fooclass int -> void : 1
fooclass int void -> const : 1
int void const -> number : 1
void const number -> ordinary : 1
const number ordinary -> function : 1
number ordinary function -> displaynum : 1
ordinary function displaynum -> through : 1
function displaynum through -> lambda : 1
displaynum through lambda -> functions : 1
through lambda functions -> lambdaprint : 1
lambda functions lambdaprint -> wrapping : 1
functions lambdaprint wrapping -> member : 1
lambdaprint wrapping member -> functions : 1
wrapping member functions -> of : 1
member functions of -> a : 1
functions of a -> class : 1
of a class -> display : 1
a class display -> creating : 1
class display creating -> an : 1
display creating an -> const : 1
creating an const -> fooclass : 1
an const fooclass -> class : 1
const fooclass class -> display : 1
fooclass class display -> will : 1
class display will -> be : 1
display will be -> using : 1
be using in -> our : 1
be using in -> the : 1
using in our -> code : 1
in our code -> extensively : 1
our code extensively -> in : 1
code extensively in -> the : 1
extensively in the -> coming : 1
in the coming -> as : 1
the coming as -> it : 1
coming as it -> helps : 1
as it helps -> to : 1
helps to drag -> function : 1
to drag function -> calls : 1
drag function calls -> as : 1
function calls as -> functions : 1
calls as functions -> together : 1
as functions together -> with : 1
with the unix -> operating : 1
the unix operating -> command : 1
unix operating command -> line : 1
operating command line -> shell : 1
command line shell -> allows : 1
command line shell -> offered : 1
command line shell -> every : 1
line shell allows -> the : 1
shell allows the -> standard : 1
allows the standard -> output : 1
the standard output -> of : 1
the standard output -> stream : 1
the standard output -> for : 1
the standard output -> this : 1
standard output of -> one : 1
output of one -> function : 1
output of one -> program : 1
output of one -> operator : 1
of one function -> to : 1
one function to -> be : 1
function to be -> piped : 1
function to be -> and : 1
to be piped -> into : 1
be piped into -> the : 1
piped into the -> another : 1
into the another -> to : 1
the another to -> form : 1
another to form -> a : 1
to form a -> filter : 1
to form a -> composite : 2
to form a -> new : 1
form a filter -> this : 1
a filter this -> feature : 1
filter this feature -> became : 1
this feature became -> part : 1
feature became part -> of : 1
became part of -> every : 1
of every command -> line : 1
every command line -> shell : 1
line shell offered -> as : 1
shell offered as -> part : 1
offered as part -> of : 1
part of most -> operating : 1
of most operating -> while : 1
most operating while -> writing : 1
operating while writing -> functional : 1
while writing functional -> style : 1
writing functional style -> when : 1
functional style when -> we : 1
style when we -> combine : 1
when we combine -> methods : 1
we combine methods -> through : 1
combine methods through -> functional : 1
methods through functional -> the : 1
through functional the -> code : 1
functional the code -> becomes : 1
the code becomes -> hard : 1
code becomes hard -> to : 1
becomes hard to -> read : 1
hard to read -> because : 1
to read because -> of : 1
read because of -> deep : 1
because of deep -> with : 1
of deep with -> modern : 1
deep with modern -> we : 1
with modern we -> can : 1
modern we can -> overload : 1
modern we can -> use : 1
we can overload -> the : 1
can overload the -> pipe : 1
overload the pipe -> operator : 1
the pipe operator -> to : 2
the pipe operator -> are : 1
the pipe operator -> avoids : 1
pipe operator to -> allow : 1
pipe operator to -> compose : 1
operator to allow -> chaining : 1
to allow chaining -> several : 1
allow chaining several -> functions : 1
chaining several functions -> like : 1
several functions like -> we : 1
functions like we -> do : 1
we do commands -> in : 1
do commands in -> a : 1
commands in a -> unix : 1
in a unix -> shell : 1
a unix shell -> or : 1
unix shell or -> that : 1
shell or that -> is : 1
or that is -> why : 1
that is why -> someone : 1
that is why -> you : 1
is why someone -> the : 1
why someone the -> lisp : 1
someone the lisp -> language : 1
the lisp language -> as : 1
lisp language as -> lots : 1
language as lots -> of : 1
as lots of -> irritating : 1
lots of irritating -> and : 1
of irritating and -> silly : 1
irritating and silly -> the : 1
and silly the -> rxcpp : 1
silly the rxcpp -> library : 1
rxcpp library uses -> the : 1
library uses the -> operator : 1
uses the operator -> extensively : 1
uses the operator -> to : 1
uses the operator -> instead : 1
the operator extensively -> to : 1
operator extensively to -> compose : 1
extensively to compose -> functions : 1
to compose functions -> the : 1
compose functions the -> following : 1
functions the following -> code : 1
following code helps -> us : 1
code helps us -> understand : 1
helps us understand -> how : 1
us understand how -> one : 1
us understand how -> the : 1
us understand how -> scheduling : 1
understand how one -> can : 1
one can create -> pipeable : 1
one can create -> a : 1
can create pipeable -> we : 1
create pipeable we -> will : 1
pipeable we will -> take : 1
take a look -> at : 20
a look at -> how : 3
a look at -> what : 1
a look at -> the : 10
a look at -> two : 1
a look at -> this : 4
a look at -> int : 1
a look at -> design : 1
a look at -> another : 1
a look at -> writing : 1
how this can -> be : 1
how this can -> simplify : 1
this can be -> implemented : 1
this can be -> achieved : 3
this can be -> replaced : 1
this can be -> translated : 1
this can be -> a : 1
this can be -> considered : 1
this can be -> understood : 1
this can be -> done : 1
this can be -> handy : 2
this can be -> an : 1
can be implemented -> in : 1
can be implemented -> for : 1
be implemented in -> the : 1
implemented in the -> code : 1
implemented in the -> and : 1
in the code -> given : 1
in the code -> now : 1
in the code -> if : 1
in the code -> will : 1
in the code -> are : 1
in the code -> namespace : 1
here is only -> good : 1
is only good -> for : 1
only good for -> expository : 1
good for expository -> namespace : 1
for expository namespace -> addone : 1
expository namespace addone -> auto : 1
namespace addone auto -> const : 1
addone auto const -> return : 1
auto const return -> x : 2
auto const return -> return : 1
const return x -> sumfunction : 1
const return x -> binary : 1
return x sumfunction -> auto : 1
x sumfunction auto -> const : 1
sumfunction auto const -> return : 1
return x binary -> preceding : 1
x binary preceding -> code : 1
binary preceding code -> creates : 1
preceding code creates -> a : 1
code creates a -> set : 1
code creates a -> object : 1
creates a set -> of : 2
set of callable -> classes : 1
of callable classes -> and : 1
callable classes and -> it : 1
classes and it -> will : 1
and it will -> be : 2
and it will -> printed : 1
be used as -> part : 1
be used as -> a : 2
be used as -> the : 1
used as part -> of : 1
of a compositional -> chain : 1
a compositional chain -> of : 1
compositional chain of -> we : 1
chain of we -> need : 1
of we need -> to : 1
need to create -> a : 2
need to create -> an : 1
create a mechanism -> to : 1
mechanism to convert -> an : 1
to convert an -> arbitrary : 1
to convert an -> tree : 1
convert an arbitrary -> function : 1
an arbitrary function -> to : 1
arbitrary function to -> a : 1
function to a -> create : 1
function to a -> return : 1
function to a -> pair : 1
to a create -> a : 1
a create a -> pipable : 1
a create a -> data : 1
create a pipable -> closure : 1
a pipable closure -> function : 1
pipable closure function -> uses : 1
closure function uses -> variadic : 1
function uses variadic -> templates : 1
uses variadic templates -> paramter : 1
variadic templates paramter -> pipableclosure : 1
templates paramter pipableclosure -> xs : 1
paramter pipableclosure xs -> is : 1
pipableclosure xs is -> a : 1
xs is a -> universal : 1
is a universal -> perfect : 1
a universal perfect -> a : 1
universal perfect a -> helper : 1
perfect a helper -> function : 1
a helper function -> which : 1
helper function which -> converts : 1
function which converts -> a : 1
which converts a -> function : 1
converts a function -> to : 1
a function to -> a : 2
a function to -> filter : 1
a function to -> yield : 1
a function to -> each : 1
a function to -> map : 1
to a return -> declare : 1
a return declare -> a : 1
return declare a -> closure : 1
return declare a -> pipe : 1
return declare a -> unary : 1
declare a closure -> for : 1
a closure for -> pipableclosurebinary : 1
closure for pipableclosurebinary -> auto : 1
for pipableclosurebinary auto -> const : 1
pipableclosurebinary auto const -> return : 1
const return return -> declare : 1
const return return -> class : 1
return return declare -> a : 1
declare a pipe -> uses : 1
declare a pipe -> const : 1
a pipe uses -> perfect : 1
pipe uses perfect -> forwarding : 1
uses perfect forwarding -> to : 1
forwarding to invoke -> the : 1
invoke the class -> declare : 1
the class declare -> a : 1
class declare a -> pipe : 1
a pipe const -> return : 1
pipe const return -> declare : 1
const return declare -> a : 1
declare a unary -> function : 1
a unary function -> const : 1
a unary function -> as : 1
unary function const -> fnclosure : 1
function const fnclosure -> int : 1
const fnclosure int -> value : 1
fnclosure int value -> value : 1
int value value -> decalre : 1
value value decalre -> a : 1
value decalre a -> binary : 1
decalre a binary -> function : 1
a binary function -> const : 1
binary function const -> sumfunction : 1
function const sumfunction -> int : 1
const sumfunction int -> we : 1
sumfunction int we -> can : 1
int we can -> create : 1
can create an -> instance : 1
can create an -> anomaly : 1
can create an -> observable : 2
create an instance -> of : 7
instance of with -> a : 1
of with a -> unary : 1
with a unary -> function : 1
unary function as -> a : 1
function as a -> parameter : 1
function as a -> or : 1
function as a -> some : 1
parameter and chain -> together : 1
and chain together -> a : 1
chain together a -> series : 1
together a series -> of : 1
series of invocations -> to : 1
of invocations to -> the : 1
invocations to the -> the : 1
the the preceding -> code : 1
code snippet should -> print : 1
snippet should print -> three : 1
should print three -> on : 1
print three on -> the : 1
three on the -> we : 1
have also created -> instance : 1
also created instance -> to : 1
created instance to -> string : 1
instance to string -> together : 1
to string together -> both : 1
string together both -> unary : 1
together both unary -> and : 1
both unary and -> binary : 1
unary and binary -> we : 1
and binary we -> have : 1
binary we have -> covered : 1
we have covered -> the : 3
we have covered -> most : 1
we have covered -> here : 1
we have covered -> quite : 1
we have covered -> all : 1
have covered the -> most : 1
have covered the -> following : 1
have covered the -> essential : 1
covered the most -> important : 1
most important semantic -> changes : 1
important semantic changes -> to : 1
semantic changes to -> the : 1
changes to the -> language : 1
the language beginning -> with : 1
language beginning with -> the : 1
beginning with the -> the : 1
the the purpose -> of : 1
is to highlight -> key : 1
to highlight key -> changes : 1
highlight key changes -> that : 1
key changes that -> might : 1
changes that might -> be : 1
that might be -> useful : 1
might be useful -> in : 1
be useful in -> writing : 1
useful in writing -> idiomatic : 1
in writing idiomatic -> modern : 1
writing idiomatic modern -> the : 1
idiomatic modern the -> standard : 1
modern the standard -> added : 1
the standard added -> some : 1
standard added some -> more : 1
added some more -> stuff : 1
some more stuff -> into : 1
more stuff into -> the : 1
stuff into the -> we : 1
into the we -> will : 1
into the we -> would : 1
into the we -> then : 1
will be highlighting -> a : 1
be highlighting a -> few : 1
highlighting a few -> more : 1
a few more -> features : 1
few more features -> of : 1
more features of -> the : 1
language to wrap -> up : 1
to wrap up -> this : 1
wrap up this -> support : 1
up this support -> for : 1
this support for -> fold : 1
support for fold -> expressions : 1
for fold expressions -> to : 1
fold expressions to -> ease : 1
expressions to ease -> the : 1
to ease the -> generation : 1
to ease the -> use : 1
ease the generation -> of : 1
the generation of -> variadic : 1
the generation of -> the : 1
generation of variadic -> the : 1
of variadic the -> compiler : 1
variadic the compiler -> does : 1
the compiler does -> pattern : 1
compiler does pattern -> matching : 1
does pattern matching -> and : 1
pattern matching and -> code : 1
matching and code -> by : 1
and code by -> inferring : 1
code by inferring -> the : 1
by inferring the -> intent : 1
inferring the intent -> of : 1
the intent of -> the : 2
intent of the -> the : 1
intent of the -> programmer : 1
code snippet demonstrates -> the : 1
snippet demonstrates the -> requires : 1
demonstrates the requires -> namespace : 1
the requires namespace -> return : 1
requires namespace return -> return : 1
return return auto -> a : 1
return auto a -> cout : 1
return auto a -> auto : 1
auto a cout -> a : 1
a cout a -> cout : 1
a cout a -> int : 1
cout a cout -> folds : 1
a cout folds -> from : 1
cout folds from -> should : 1
folds from should -> produce : 2
from should produce -> world : 2
should produce world -> auto : 2
produce world auto -> b : 1
produce world auto -> c : 1
world auto b -> cout : 1
auto b cout -> b : 1
b cout b -> folds : 1
cout b folds -> from : 1
b folds from -> should : 1
world auto c -> cout : 1
auto c cout -> c : 1
c cout c -> expected : 1
cout c expected -> output : 1
c expected output -> on : 1
expected output on -> the : 1
output on the -> console : 2
on the console -> is : 1
on the console -> three : 1
on the console -> should : 1
the console is -> as : 1
console is as -> hello : 1
is as hello -> world : 1
as hello world -> hello : 1
hello world hello -> world : 1
world hello world -> geeky : 1
hello world geeky -> definition : 1
world geeky definition -> of : 1
geeky definition of -> variant : 1
definition of variant -> would : 1
of variant would -> be : 1
variant would be -> safe : 1
would be safe -> we : 1
be safe we -> can : 1
safe we can -> give : 1
we can give -> a : 1
can give a -> list : 1
give a list -> of : 1
list of types -> as : 1
of types as -> a : 1
types as a -> template : 1
types as a -> atomic : 1
as a template -> argument : 1
a template argument -> while : 1
a template argument -> as : 1
template argument while -> defining : 1
argument while defining -> at : 1
while defining at -> any : 1
defining at any -> given : 1
at any given -> the : 1
any given the -> object : 1
given the object -> will : 1
the object will -> hold : 1
the object will -> be : 1
object will hold -> only : 1
will hold only -> one : 1
hold only one -> type : 1
only one type -> of : 1
one type of -> data : 1
type of data -> out : 1
of data out -> of : 1
data out of -> the : 1
the template argument -> will : 1
template argument will -> be : 1
argument will be -> thrown : 1
will be thrown -> if : 2
be thrown if -> we : 1
be thrown if -> the : 1
thrown if we -> try : 1
if we try -> to : 1
we try to -> access : 1
try to access -> an : 1
to access an -> index : 1
access an index -> that : 1
an index that -> does : 1
index that does -> not : 1
that does not -> hold : 1
that does not -> emit : 1
does not hold -> the : 1
not hold the -> current : 1
hold the current -> the : 1
hold the current -> and : 1
the current the -> following : 1
current the following -> code : 1
following code does -> not : 1
code does not -> handle : 1
does not handle -> this : 1
does not handle -> the : 1
not handle this -> namespace : 1
handle this namespace -> v : 1
this namespace v -> v : 1
namespace v v -> contains : 1
v v contains -> now : 1
v contains now -> contains : 1
contains now contains -> cout : 1
now contains cout -> w : 1
contains cout w -> assign : 1
cout w assign -> to : 1
w assign to -> cout : 1
assign to cout -> w : 1
to cout w -> to : 1
cout w to -> cout : 1
w to cout -> important : 1
to cout important -> supports : 1
cout important supports -> features : 1
important supports features -> such : 1
supports features such -> as : 1
features such as -> memory : 1
features such as -> lambda : 1
features such as -> error : 1
such as memory -> and : 1
as memory and -> asynchronous : 1
memory and asynchronous -> which : 1
and asynchronous which -> are : 1
asynchronous which are -> covered : 1
which are covered -> in : 1
are covered in -> the : 1
covered in the -> next : 1
covered in the -> previous : 2
covered in the -> online : 1
in the next -> two : 1
in the next -> we : 8
in the next -> followed : 1
in the next -> dive : 1
in the next -> there : 1
in the next -> the : 1
the next two -> the : 1
next two the -> language : 1
two the language -> offers : 1
the language offers -> support : 1
language offers support -> for : 1
offers support for -> optional : 1
support for optional -> data : 1
for optional data -> types : 1
optional data types -> and : 1
data types and -> the : 1
types and the -> one : 1
and the one -> of : 1
and the one -> along : 1
the one of -> the : 1
of the most -> important : 2
of the most -> notable : 1
of the most -> fundamental : 1
of the most -> useful : 1
of the most -> popular : 2
most important feature -> is : 1
important feature is -> parallel : 1
feature is parallel -> versions : 1
is parallel versions -> of : 1
parallel versions of -> most : 1
versions of most -> of : 1
of most of -> the : 1
of the stl -> for : 1
the stl for -> loops : 1
stl for loops -> and : 1
loops and this -> we : 1
and this we -> will : 1
we will implement -> for : 1
will implement for -> loops : 1
implement for loops -> on : 1
for loops on -> a : 1
loops on a -> custom : 1
on a custom -> type : 1
on a custom -> label : 1
a custom type -> written : 1
custom type written -> by : 1
type written by -> us : 1
written by us -> to : 1
by us to -> help : 1
us to help -> you : 1
you understand how -> all : 1
understand how all -> the : 1
how all the -> things : 1
all the things -> mentioned : 1
the things mentioned -> earlier : 1
things mentioned earlier -> in : 1
mentioned earlier in -> this : 1
earlier in this -> chapter : 1
this chapter can -> be : 1
chapter can be -> put : 1
can be put -> together : 1
can be put -> inside : 1
be put together -> to : 1
put together to -> write : 1
together to write -> programs : 1
write programs that -> support : 1
programs that support -> modern : 1
that support modern -> we : 1
support modern we -> implement : 1
modern we implement -> a : 1
we implement a -> class : 1
implement a class -> that : 1
class that returns -> a : 1
that returns a -> series : 1
that returns a -> list : 1
returns a series -> of : 1
series of numbers -> within : 1
series of numbers -> from : 1
series of numbers -> to : 1
series of numbers -> that : 1
series of numbers -> as : 1
of numbers within -> a : 1
numbers within a -> bound : 1
within a bound -> and : 1
a bound and -> will : 1
bound and will -> implement : 1
and will implement -> infrastructure : 1
will implement infrastructure -> support : 1
implement infrastructure support -> for : 1
infrastructure support for -> the : 1
support for the -> iteration : 1
support for the -> type : 1
support for the -> activex : 1
support for the -> and : 1
for the iteration -> of : 1
the iteration of -> the : 1
iteration of the -> values : 1
of the values -> based : 1
of the values -> inside : 1
the values based -> on : 1
values based on -> for : 1
based on for -> we : 1
on for we -> write : 1
for we write -> version : 1
we write version -> by : 1
write version by -> leveraging : 1
version by leveraging -> the : 1
by leveraging the -> for : 1
by leveraging the -> flexibility : 1
by leveraging the -> rxcurl : 1
leveraging the for -> after : 1
the for after -> some : 1
for after some -> the : 1
after some the -> implementation : 1
some the implementation -> will : 1
the implementation will -> be : 1
implementation will be -> transformed : 1
will be transformed -> to : 1
will be transformed -> using : 1
be transformed to -> key : 1
transformed to key -> interface : 1
to key interface -> of : 1
key interface of -> reactive : 1
interface of reactive -> the : 1
of reactive the -> implementation : 1
of reactive the -> iterable : 1
reactive the implementation -> of : 1
implementation of pattern -> here : 1
of pattern here -> is : 1
pattern here is -> just : 1
here is just -> for : 1
is just for -> elucidation : 1
is just for -> demonstrate : 1
just for elucidation -> purpose : 1
for elucidation purpose -> should : 1
elucidation purpose should -> not : 1
purpose should not -> be : 1
should not be -> considered : 1
not be considered -> as : 1
considered as an -> industrial : 1
as an industrial -> strength : 1
an industrial strength -> implementation : 1
an industrial strength -> db : 1
industrial strength implementation -> of : 1
strength implementation of -> these : 1
implementation of these -> following : 1
of these following -> class : 1
these following class -> is : 1
following class is -> a : 1
class is a -> nested : 1
class is a -> visitor : 1
is a nested -> we : 1
a nested we -> can : 1
nested we can -> use : 1
can use range -> based : 1
use range based -> for : 1
range based for -> loop : 1
range based for -> l : 1
based for loop -> as : 1
for loop as -> given : 1
loop as given -> below : 1
as given below -> the : 1
given below the -> main : 1
below the main -> for : 1
main for l -> l : 1
for l l -> namespace : 1
for l l -> instantiate : 1
l l namespace -> long : 1
l namespace long -> enumerablerange : 1
namespace long enumerablerange -> class : 1
long enumerablerange class -> iterable : 1
enumerablerange class iterable -> public : 1
class iterable public -> const : 1
iterable public const -> pointer : 2
public const pointer -> reference : 2
const pointer reference -> long : 2
pointer reference long -> reference : 2
reference long reference -> const : 2
long reference const -> return : 2
reference const return -> explicit : 2
const return explicit -> val : 2
return explicit val -> end : 2
explicit val end -> return : 2
val end return -> iterable : 2
end return iterable -> iterable : 2
return iterable iterable -> retval : 2
iterable iterable retval -> return : 2
iterable retval return -> bool : 2
retval return bool -> return : 2
return bool return -> bool : 2
return bool return -> preceding : 1
return bool return -> iterable : 1
return bool return -> isdir : 1
bool return bool -> return : 2
bool return preceding -> code : 1
code implements an -> inner : 1
code implements an -> event : 1
implements an inner -> class : 1
an inner class -> derived : 1
inner class derived -> from : 1
class derived from -> to : 1
class derived from -> will : 1
derived from to -> take : 1
from to take -> care : 1
to take care -> of : 3
take care of -> the : 3
care of the -> requirements : 1
care of the -> structural : 1
care of the -> late : 1
of the requirements -> for : 1
the requirements for -> a : 1
requirements for a -> type : 1
for a type -> to : 1
a type to -> be : 1
a type to -> store : 1
a type to -> represent : 1
type to be -> enumerable : 1
to be enumerable -> through : 1
be enumerable through -> for : 1
enumerable through for -> we : 1
through for we -> will : 1
for we will -> now : 1
we will now -> write : 1
will now write -> two : 1
now write two -> public : 1
write two public -> and : 1
two public and -> so : 1
public and so -> consumers : 1
and so consumers -> of : 1
so consumers of -> the : 1
consumers of the -> class : 1
of the class -> can : 1
of the class -> are : 1
of the class -> must : 1
of the class -> will : 1
of the class -> used : 1
of the class -> supported : 1
the class can -> use : 1
class can use -> for : 1
can use for -> return : 1
use for return -> iterable : 1
for return iterable -> return : 1
return iterable return -> start : 2
return iterable return -> iterable : 1
iterable return start -> end : 2
return start end -> end : 2
start end end -> we : 1
start end end -> generate : 1
end end we -> can : 1
end we can -> write : 1
we can write -> code : 2
we can write -> a : 1
we can write -> reactive : 1
can write code -> to : 2
write code to -> consume : 1
write code to -> process : 1
write code to -> generate : 1
code to consume -> the : 1
to consume the -> preceding : 1
to consume the -> harnessed : 1
consume the preceding -> class : 1
the preceding class -> as : 1
the preceding class -> can : 1
the preceding class -> int : 1
preceding class as -> l : 1
class as l -> l : 1
as l l -> the : 1
l l the -> previous : 1
l the previous -> we : 1
previous we defined -> the : 1
we defined the -> idea : 1
defined the idea -> was : 1
the idea was -> to : 1
idea was to -> stick : 1
was to stick -> with : 1
to stick with -> the : 1
stick with the -> documentation : 1
with the documentation -> of : 1
the documentation of -> reactive : 1
the documentation of -> the : 1
documentation of reactive -> the : 1
reactive the iterable -> class : 1
the iterable class -> is : 1
iterable class is -> very : 1
class is very -> similar : 1
is very similar -> to : 2
very similar to -> the : 2
similar to the -> implementation : 1
similar to the -> mutex : 1
similar to the -> class : 1
similar to the -> previous : 4
similar to the -> code : 1
similar to the -> default : 1
to the implementation -> in : 1
to the implementation -> as : 1
to the implementation -> to : 1
the implementation in -> the : 1
implementation in the -> previous : 1
in the previous -> as : 1
in the previous -> the : 2
in the previous -> object : 1
in the previous -> we : 6
in the previous -> val : 1
in the previous -> situations : 1
in the previous -> an : 1
in the previous -> this : 1
in the previous -> before : 1
in the previous -> average : 1
in the previous -> operator : 1
in the previous -> chapters : 1
in the previous -> two : 1
in the previous -> resilience : 1
in the previous -> replace : 1
in the previous -> that : 1
the previous as -> outlined : 1
previous as outlined -> in : 1
as outlined in -> the : 1
the previous the -> preceding : 1
the previous the -> rest : 1
the previous the -> error : 1
the previous the -> source : 1
previous the preceding -> class : 1
preceding class can -> be : 1
class can be -> made : 1
can be made -> push : 1
be made push -> if : 1
made push if -> we : 1
push if we -> tweak : 1
if we tweak -> the : 1
we tweak the -> code : 1
tweak the code -> a : 1
the code a -> let : 1
code a let -> us : 1
a let us -> write : 1
us write an -> class : 1
write an class -> that : 1
an class that -> contains : 1
class that contains -> three : 1
that contains three -> we : 1
contains three we -> will : 1
three we will -> be : 1
be using function -> wrappers : 1
using function wrappers -> available : 1
function wrappers available -> with : 1
wrappers available with -> standard : 1
available with standard -> library : 1
with standard library -> to : 1
standard library to -> define : 1
standard library to -> achieve : 2
standard library to -> perform : 1
standard library to -> write : 1
library to define -> the : 1
to define the -> observer : 1
define the observer -> class : 1
the observer class -> given : 1
observer class given -> here : 1
class given here -> contains : 1
given here contains -> a : 1
here contains a -> that : 1
contains a that -> stores : 1
a that stores -> the : 1
that stores the -> list : 1
that stores the -> last : 1
stores the list -> of : 1
list of when -> a : 1
of when a -> new : 1
when a new -> number : 1
a new number -> is : 1
new number is -> the : 1
is the event -> will : 1
is the event -> flow : 1
the event will -> be : 2
event will be -> notified : 1
event will be -> determined : 1
will be notified -> to : 2
will be notified -> by : 1
be notified to -> all : 1
be notified to -> the : 1
notified to all -> if : 1
to all if -> we : 1
all if we -> dispatch : 1
if we dispatch -> the : 1
we dispatch the -> notification : 1
dispatch the notification -> call : 1
the notification call -> from : 1
notification call from -> an : 1
call from an -> asynchronous : 1
from an asynchronous -> the : 1
an asynchronous the -> consumer : 1
an asynchronous the -> key : 1
asynchronous the consumer -> is : 1
the consumer is -> decoupled : 1
consumer is decoupled -> from : 1
is decoupled from -> the : 1
decoupled from the -> producer : 1
from the producer -> of : 1
of the range -> we : 1
the range we -> have : 1
range we have -> not : 1
have not implemented -> interface : 1
have not implemented -> methods : 1
have not implemented -> other : 1
not implemented interface -> for : 1
implemented interface for -> the : 1
interface for the -> following : 1
interface for the -> visitor : 1
for the following -> but : 1
for the following -> pseudo : 1
for the following -> string : 1
the following but -> we : 1
following but we -> can : 1
but we can -> subscribe : 1
but we can -> always : 1
but we can -> add : 1
we can subscribe -> to : 1
can subscribe to -> notifications : 1
can subscribe to -> an : 2
subscribe to notifications -> through : 1
to notifications through -> subscribe : 1
notifications through subscribe -> long : 1
through subscribe long -> observablerange : 1
subscribe long observablerange -> container : 1
long observablerange container -> to : 1
observablerange container to -> store : 1
container to store -> int : 1
to store int -> will : 1
store int will -> store : 1
int will store -> the : 1
list of subscribers -> in : 1
list of subscribers -> and : 1
of subscribers in -> an : 1
subscribers in an -> as : 1
subscribers in an -> asynchronous : 1
in an as -> an : 1
an as an -> the : 1
as an the -> first : 1
the first value -> in : 1
first value in -> the : 1
value in the -> is : 2
value in the -> flag : 1
value in the -> the : 1
value in the -> order : 1
value in the -> stream : 1
in the is -> the : 1
in the is -> an : 1
the is the -> reference : 1
the is the -> stream : 1
is the reference -> to : 1
to the and -> the : 3
to the and -> it : 1
to the and -> is : 1
the and the -> second : 1
the and the -> thread : 1
the and the -> functor : 1
the and the -> project : 1
the and the -> request : 1
the and the -> http : 1
the and the -> twitter : 1
the and the -> following : 1
the and the -> resultant : 1
the and the -> function : 1
the and the -> based : 1
the second value -> in : 1
second value in -> the : 1
the is an -> integer : 1
the is an -> event : 1
is an integer -> that : 1
an integer that -> uniquely : 1
integer that uniquely -> identifies : 1
that uniquely identifies -> the : 1
uniquely identifies the -> consumers : 1
identifies the consumers -> are : 1
the consumers are -> supposed : 1
the consumers are -> not : 1
consumers are supposed -> to : 1
are supposed to -> unsubscribe : 1
are supposed to -> define : 1
are supposed to -> be : 1
supposed to unsubscribe -> by : 1
to unsubscribe by -> using : 1
unsubscribe by using -> the : 1
by using the -> id : 1
by using the -> new : 1
by using the -> observable : 1
by using the -> if : 1
by using the -> the : 1
by using the -> class : 1
by using the -> rxcpp : 2
by using the -> a : 1
using the id -> returned : 1
the id returned -> by : 1
id returned by -> the : 1
returned by the -> subscribe : 1
returned by the -> including : 1
by the subscribe -> the : 1
by the subscribe -> twice : 1
the subscribe the -> following : 1
the subscribe the -> filter : 1
the subscribe the -> code : 1
subscribe the following -> implementation : 1
the following implementation -> of : 1
following implementation of -> iterable : 1
implementation of iterable -> not : 1
of iterable not -> allow : 1
iterable not allow -> to : 1
not allow to -> take : 1
allow to take -> address : 1
to take address -> of : 1
take address of -> the : 1
of the pointed -> value : 1
the pointed value -> will : 1
pointed value will -> be : 1
value will be -> code : 1
value will be -> set : 1
value will be -> put : 1
value will be -> notified : 1
value will be -> interleaved : 2
value will be -> we : 1
will be code -> is : 1
be code is -> just : 1
code is just -> for : 1
just for demonstrate -> iterable : 1
for demonstrate iterable -> public : 1
demonstrate iterable public -> const : 1
bool return iterable -> return : 1
iterable return iterable -> return : 1
end end generate -> values : 1
end generate values -> between : 1
generate values between -> the : 1
values between the -> this : 1
between the this -> is : 1
is a private -> method : 1
a private method -> and : 1
private method and -> will : 1
method and will -> be : 1
will be invoked -> from : 1
will be invoked -> by : 3
be invoked from -> the : 1
invoked from the -> ideally : 1
from the ideally -> we : 1
the ideally we -> should : 1
ideally we should -> invoke : 1
we should invoke -> this : 1
should invoke this -> method : 1
invoke this method -> with : 1
this method with -> subscribers : 1
method with subscribers -> auto : 1
with subscribers auto -> l : 1
subscribers auto l -> for : 1
auto l for -> obs : 1
l for obs -> const : 1
for obs const -> ob : 1
obs const ob -> the : 1
const ob the -> public : 1
ob the public -> interface : 1
the public interface -> of : 1
the public interface -> to : 1
public interface of -> the : 1
interface of the -> call : 1
interface of the -> reactive : 1
of the call -> include : 1
the call include -> generate : 1
call include generate -> which : 1
include generate which -> the : 1
generate which the -> generation : 1
which the generation -> of : 1
generation of the -> the : 1
the the public -> interface : 1
public interface to -> trigger : 1
interface to trigger -> of : 1
to trigger of -> the : 1
trigger of the -> can : 1
of the can -> be : 1
the can be -> via : 1
can be via -> to : 1
be via to -> return : 1
via to return -> to : 1
to return to -> the : 1
to the void -> subscribe : 1
to the void -> const : 1
to the void -> void : 1
the void subscribe -> the : 1
void subscribe the -> clients : 1
subscribe the clients -> expects : 1
the clients expects -> notification : 1
clients expects notification -> can : 1
expects notification can -> register : 1
notification can register -> int : 1
can register int -> return : 1
register int return -> has : 1
int return has -> just : 1
return has just -> stubbed : 1
has just stubbed -> unsubscribe : 1
just stubbed unsubscribe -> to : 1
stubbed unsubscribe to -> the : 1
unsubscribe to the -> listing : 1
to the listing -> void : 1
the listing void -> int : 1
listing void int -> call : 1
void int call -> the : 1
int call the -> range : 1
call the range -> based : 1
the range based -> for : 1
based for l -> l : 1
l l instantiate -> an : 1
l instantiate an -> instance : 1
instantiate an instance -> of : 1
instance of auto -> j : 1
of auto j -> observer : 1
auto j observer -> long : 1
j observer long -> r : 1
observer long r -> subscribe : 1
long r subscribe -> to : 1
r subscribe to -> the : 1
subscribe to the -> int : 1
subscribe to the -> and : 1
subscribe to the -> the : 1
subscribe to the -> of : 1
subscribe to the -> observable : 1
the int cnt -> events : 1
int cnt events -> to : 1
cnt events to -> generate : 1
events to generate -> return : 1
to generate return -> this : 1
generate return this -> we : 1
return this we -> learned : 1
return this we -> have : 1
learned about programming -> language : 1
about programming language -> features : 1
programming language features -> that : 1
language features that -> a : 1
should be comfortable -> with : 1
comfortable with while -> writing : 1
with while writing -> reactive : 1
while writing reactive -> or : 1
writing reactive or -> for : 1
reactive or for -> that : 1
or for that -> matter : 1
for that matter -> any : 1
that matter any -> kind : 1
matter any kind -> of : 1
any kind of -> we : 1
any kind of -> hierarchical : 1
kind of we -> talked : 1
of we talked -> about : 1
we talked about -> type : 1
we talked about -> which : 1
talked about type -> variadic : 1
about type variadic -> rvalue : 1
iterators and in -> the : 1
and in the -> next : 1
and in the -> application : 1
and in the -> rxcpp : 1
next we learn -> about : 1
we learn about -> concurrent : 1
learn about concurrent -> programming : 1
about concurrent programming -> support : 1
concurrent programming support -> provided : 1
programming support provided -> by : 1
support provided by -> the : 1
by the programming -> concurrency : 1
the programming concurrency -> and : 1
programming concurrency and -> parallelism : 1
parallelism in has -> had : 1
in has had -> excellent : 1
has had excellent -> support : 1
had excellent support -> for : 1
support for concurrent -> programming : 1
for concurrent programming -> ever : 1
concurrent programming ever -> since : 1
programming ever since -> the : 1
ever since the -> language : 1
since the language -> standard : 1
the language standard -> came : 1
the language standard -> provides : 1
language standard came -> until : 1
standard came until -> threading : 1
came until threading -> was : 1
until threading was -> an : 1
threading was an -> affair : 1
was an affair -> that : 1
an affair that -> was : 1
affair that was -> handled : 1
that was handled -> by : 1
was handled by -> the : 1
handled by the -> microsoft : 1
handled by the -> system : 1
by the microsoft -> corporation : 1
the microsoft corporation -> had : 1
microsoft corporation had -> its : 1
corporation had its -> own : 1
had its own -> threading : 1
its own threading -> and : 1
own threading and -> other : 1
threading and other -> platforms : 1
and other platforms -> supported : 1
other platforms supported -> the : 1
platforms supported the -> posix : 1
supported the posix -> threading : 1
the posix threading -> a : 1
posix threading a -> threading : 1
threading a threading -> mechanism : 1
a threading mechanism -> as : 1
threading mechanism as -> part : 1
mechanism as part -> of : 1
language has helped -> programmers : 1
has helped programmers -> write : 1
helped programmers write -> portable : 1
programmers write portable -> code : 1
write portable code -> that : 1
portable code that -> runs : 1
code that runs -> on : 1
runs on multiple -> original : 1
on multiple original -> standard : 1
multiple original standard -> was : 1
original standard was -> published : 1
standard was published -> in : 1
was published in -> and : 1
published in and -> the : 1
in and the -> language : 1
the language design -> committee : 1
language design committee -> firmly : 1
design committee firmly -> believed : 1
committee firmly believed -> that : 1
firmly believed that -> gui : 1
believed that gui -> and : 1
that gui and -> so : 1
gui and so -> on : 1
on are better -> left : 1
are better left -> to : 1
better left to -> the : 1
left to the -> herb : 1
to the herb -> sutter : 1
the herb sutter -> published : 1
herb sutter published -> an : 1
sutter published an -> influential : 1
published an influential -> article : 1
published an influential -> book : 1
an influential article -> in : 1
influential article in -> the : 1
article in the -> dobbs : 1
in the dobbs -> journal : 1
the dobbs journal -> free : 1
dobbs journal free -> lunch : 1
journal free lunch -> is : 1
free lunch is -> where : 1
free lunch is -> software : 1
lunch is where -> he : 1
is where he -> advocated : 1
where he advocated -> programming : 1
he advocated programming -> techniques : 1
advocated programming techniques -> to : 1
techniques to exploit -> multiple : 1
to exploit multiple -> cores : 1
exploit multiple cores -> available : 1
multiple cores available -> in : 1
cores available in -> the : 1
in the processors -> of : 1
the processors of -> those : 1
processors of those -> while : 1
of those while -> writing : 1
those while writing -> parallel : 1
while writing parallel -> functional : 1
writing parallel functional -> programming : 1
parallel functional programming -> models : 1
functional programming models -> are : 1
models are for -> the : 1
are for the -> features : 1
for the features -> such : 1
the features such -> as : 1
functions and move -> and : 1
and move and -> memory : 1
move and memory -> guarantee : 1
and memory guarantee -> helps : 1
memory guarantee helps -> people : 1
guarantee helps people -> write : 1
helps people write -> concurrent : 1
people write concurrent -> or : 1
write concurrent or -> parallel : 1
concurrent or parallel -> code : 1
or parallel code -> without : 1
parallel code without -> much : 1
code without much -> this : 1
without much this -> chapter : 1
much this chapter -> aims : 1
this chapter aims -> to : 1
chapter aims to -> enable : 1
aims to enable -> developers : 1
to enable developers -> to : 1
enable developers to -> leverage : 1
developers to leverage -> thread : 1
to leverage thread -> libraries : 1
leverage thread libraries -> and : 1
thread libraries and -> their : 1
libraries and their -> best : 1
and their best -> this : 1
their best this -> we : 1
best this we -> will : 1
the following is -> characteristic : 1
following is characteristic -> hello : 1
is characteristic hello -> world : 1
characteristic hello world -> program : 1
hello world program -> using : 1
world program using -> multiple : 1
program using multiple -> to : 1
using multiple to -> manage : 1
multiple to manage -> the : 1
manage the lifetime -> and : 1
the lifetime and -> resources : 1
lifetime and resources -> of : 1
and resources of -> data : 1
resources of data -> between : 1
of data between -> to : 1
of data between -> and : 1
data between to -> write : 1
between to write -> a : 1
write a data -> is : 1
write a data -> parallelism : 1
write a data -> write : 1
a data is -> a : 1
data is a -> basic : 1
is a basic -> concurrency : 1
a basic concurrency -> stands : 1
basic concurrency stands -> for : 1
concurrency stands for -> more : 1
stands for more -> than : 1
for more than -> one : 1
for more than -> two : 1
more than one -> activity : 1
more than one -> consider : 1
more than one -> the : 1
more than one -> and : 1
than one activity -> happening : 1
one activity happening -> at : 1
activity happening at -> the : 1
happening at the -> same : 2
at the same -> we : 1
at the same -> and : 1
at the same -> the : 2
at the same -> time : 4
at the same -> imagine : 1
at the same -> it : 1
the same we -> can : 1
same we can -> correlate : 1
we can correlate -> concurrency : 1
can correlate concurrency -> to : 1
correlate concurrency to -> many : 1
concurrency to many -> of : 1
to many of -> our : 1
many of our -> such : 1
of our such -> as : 1
our such as -> eating : 1
such as eating -> popcorn : 1
as eating popcorn -> while : 1
eating popcorn while -> we : 1
popcorn while we -> watch : 1
while we watch -> a : 1
we watch a -> movie : 1
watch a movie -> or : 1
a movie or -> using : 1
movie or using -> two : 1
or using two -> hands : 1
using two hands -> for : 1
two hands for -> separate : 1
hands for separate -> functions : 1
for separate functions -> at : 1
separate functions at -> the : 1
functions at the -> same : 1
the same and -> so : 1
same and so -> well : 1
and so well -> what : 1
so well what -> is : 1
well what is -> concurrency : 1
what is concurrency -> in : 1
is concurrency in -> a : 1
concurrency in a -> systems : 1
in a systems -> were : 1
a systems were -> enabled : 1
systems were enabled -> to : 1
were enabled to -> do : 1
enabled to do -> task : 1
to do task -> switching : 1
do task switching -> decades : 1
task switching decades -> and : 1
switching decades and -> multitasking : 1
decades and multitasking -> operating : 1
and multitasking operating -> systems : 1
multitasking operating systems -> have : 1
operating systems have -> been : 1
systems have been -> in : 1
have been in -> existence : 1
been in existence -> for : 1
in existence for -> a : 1
existence for a -> long : 1
a long why -> is : 1
long why is -> there : 1
why is there -> renewed : 1
is there renewed -> interest : 1
there renewed interest -> in : 1
renewed interest in -> concurrency : 1
interest in concurrency -> all : 1
in concurrency all -> of : 1
concurrency all of -> a : 1
all of a -> sudden : 2
of a sudden -> in : 1
of a sudden -> the : 1
a sudden in -> the : 1
sudden in the -> computing : 1
in the computing -> the : 1
the computing the -> microprocessor : 1
computing the microprocessor -> manufacturers : 1
the microprocessor manufacturers -> were : 1
microprocessor manufacturers were -> increasing : 1
manufacturers were increasing -> computing : 1
were increasing computing -> power : 1
increasing computing power -> by : 1
computing power by -> cramming : 1
power by cramming -> more : 1
by cramming more -> and : 1
cramming more and -> more : 1
more and more -> silicon : 1
and more silicon -> into : 1
more silicon into -> a : 1
silicon into a -> at : 1
into a at -> a : 1
a at a -> certain : 1
at a certain -> stage : 1
a certain stage -> in : 1
certain stage in -> the : 1
stage in the -> they : 1
in the they -> could : 1
the they could -> not : 1
they could not -> cram : 1
could not cram -> more : 1
not cram more -> things : 1
cram more things -> into : 1
more things into -> the : 1
into the same -> area : 1
the same area -> as : 1
same area as -> they : 1
area as they -> reached : 1
as they reached -> fundamental : 1
they reached fundamental -> physical : 1
reached fundamental physical -> the : 1
fundamental physical the -> cpus : 1
physical the cpus -> of : 1
the cpus of -> those : 1
cpus of those -> eras : 1
of those eras -> had : 1
those eras had -> a : 1
eras had a -> single : 1
had a single -> path : 1
a single path -> of : 1
single path of -> execution : 1
path of execution -> at : 1
path of execution -> in : 1
of execution at -> a : 1
of execution at -> the : 1
execution at a -> time : 1
at a time -> and : 1
at a time -> when : 3
a time and -> they : 1
time and they -> were : 1
time and they -> may : 1
and they were -> running : 1
they were running -> multiple : 1
were running multiple -> paths : 1
running multiple paths -> of : 1
multiple paths of -> instructions : 1
multiple paths of -> execution : 1
paths of instructions -> by : 1
of instructions by -> switching : 1
instructions by switching -> tasks : 1
by switching tasks -> of : 1
switching tasks of -> at : 1
tasks of at -> the : 1
of at the -> cpu : 1
of at the -> end : 1
at the cpu -> only : 1
the cpu only -> one : 1
cpu only one -> instruction : 1
only one instruction -> stream : 1
one instruction stream -> was : 1
instruction stream was -> getting : 1
stream was getting -> and : 1
was getting and -> as : 1
getting and as -> things : 1
and as things -> happen : 1
as things happen -> very : 1
things happen very -> fast : 1
happen very fast -> to : 1
very fast to -> human : 1
fast to human -> the : 1
to human the -> users : 1
human the users -> felt : 1
the users felt -> actions : 1
users felt actions -> were : 1
felt actions were -> happening : 1
actions were happening -> at : 1
were happening at -> the : 1
same the year -> intel : 1
the year intel -> announced : 1
year intel announced -> their : 1
intel announced their -> new : 1
announced their new -> multicore : 1
their new multicore -> processors : 1
new multicore processors -> support : 1
multicore processors support -> multiple : 1
processors support multiple -> paths : 1
support multiple paths -> of : 1
paths of execution -> at : 1
execution at the -> hardware : 1
at the hardware -> which : 1
the hardware which -> was : 1
hardware which was -> a : 1
which was a -> game : 1
was a game -> instead : 1
a game instead -> of : 1
game instead of -> one : 1
instead of one -> processor : 1
of one processor -> doing : 1
one processor doing -> every : 1
processor doing every -> task : 1
doing every task -> by : 1
every task by -> switching : 1
task by switching -> between : 1
by switching between -> multicore : 1
switching between multicore -> processors : 1
between multicore processors -> came : 1
multicore processors came -> as : 1
multicore processors came -> to : 1
processors came as -> a : 1
came as a -> solution : 1
as a solution -> to : 1
a solution to -> actually : 1
solution to actually -> perform : 1
to actually perform -> them : 1
actually perform them -> in : 1
perform them in -> but : 1
them in but -> this : 1
in but this -> introduced : 1
but this introduced -> another : 1
this introduced another -> challenge : 1
introduced another challenge -> to : 1
another challenge to -> the : 1
challenge to the -> to : 1
to the to -> write : 1
to the to -> instantiate : 1
the to write -> their : 1
to write their -> code : 1
write their code -> to : 1
their code to -> leverage : 1
code to leverage -> the : 1
to leverage the -> issue : 1
to leverage the -> synchronization : 1
to leverage the -> class : 1
leverage the issue -> of : 1
the issue of -> the : 1
issue of the -> actual : 1
of the actual -> hardware : 1
the actual hardware -> concurrency : 1
actual hardware concurrency -> behaving : 1
hardware concurrency behaving -> differently : 1
concurrency behaving differently -> compared : 1
behaving differently compared -> to : 1
differently compared to -> the : 1
compared to the -> illusion : 1
compared to the -> available : 1
compared to the -> traditional : 1
to the illusion -> created : 1
the illusion created -> by : 1
illusion created by -> the : 1
created by the -> task : 1
created by the -> code : 1
by the task -> switches : 1
the task switches -> until : 1
task switches until -> the : 1
switches until the -> multicore : 1
until the multicore -> processors : 1
the multicore processors -> came : 1
processors came to -> the : 1
came to the -> chip : 1
to the chip -> manufacturers : 1
the chip manufacturers -> were : 1
chip manufacturers were -> in : 1
manufacturers were in -> a : 1
were in a -> race : 1
in a race -> to : 1
a race to -> increase : 1
race to increase -> their : 1
to increase their -> computing : 1
increase their computing -> expecting : 1
their computing expecting -> that : 1
computing expecting that -> it : 1
expecting that it -> might : 1
that it might -> reach : 1
it might reach -> ghz : 1
might reach ghz -> before : 1
reach ghz before -> the : 1
ghz before the -> end : 1
before the end -> of : 1
of the first -> decade : 1
of the first -> ten : 1
the first decade -> of : 1
first decade of -> the : 1
decade of the -> as : 1
of the as -> herb : 1
of the as -> shown : 1
of the as -> we : 1
the as herb -> sutter : 1
as herb sutter -> free : 1
herb sutter free -> lunch : 1
sutter free lunch -> is : 1
lunch is software -> is : 1
is software is -> to : 1
software is to -> take : 1
is to take -> advantage : 1
to take advantage -> of : 2
take advantage of -> this : 1
take advantage of -> the : 1
advantage of this -> increased : 1
advantage of this -> indirection : 1
advantage of this -> kind : 1
of this increased -> computing : 1
this increased computing -> it : 1
increased computing it -> must : 1
computing it must -> be : 1
it must be -> designed : 1
it must be -> avoided : 1
must be designed -> to : 1
be designed to -> run : 1
designed to run -> multiple : 1
to run multiple -> tasks : 1
run multiple tasks -> herb : 1
multiple tasks herb -> warned : 1
tasks herb warned -> the : 1
herb warned the -> programmers : 1
warned the programmers -> that : 1
the programmers that -> those : 1
programmers that those -> who : 1
that those who -> ignored : 1
those who ignored -> concurrency : 1
who ignored concurrency -> must : 1
ignored concurrency must -> also : 1
concurrency must also -> take : 1
must also take -> that : 1
also take that -> into : 1
take that into -> account : 1
that into account -> while : 1
into account while -> writing : 1
account while writing -> a : 1
while writing a -> modern : 1
writing a modern -> standard : 1
a modern standard -> libraries : 1
modern standard libraries -> provide : 1
standard libraries provide -> a : 1
libraries provide a -> set : 1
provide a set -> of : 1
set of mechanisms -> to : 1
of mechanisms to -> support : 1
mechanisms to support -> concurrency : 1
to support concurrency -> and : 1
support concurrency and -> first : 1
concurrency and first -> and : 1
and first and -> along : 1
first and along -> with : 1
and along with -> the : 1
with the synchronization -> objects : 1
the synchronization objects -> as : 1
synchronization objects as -> and : 1
objects as and -> so : 1
and so empowers -> the : 1
so empowers the -> programmers : 1
empowers the programmers -> to : 1
the programmers to -> write : 1
programmers to write -> a : 1
write a concurrent -> multithreaded : 1
a concurrent multithreaded -> code : 1
concurrent multithreaded code -> using : 1
multithreaded code using -> standard : 1
code using standard -> to : 1
using standard to -> use : 1
standard to use -> parallelism : 1
to use parallelism -> in : 1
use parallelism in -> and : 1
in and introduced -> the : 1
and introduced the -> classes : 1
introduced the classes -> and : 1
the classes and -> which : 1
the classes and -> are : 1
classes and which -> work : 1
and which work -> in : 1
which work in -> pairs : 1
work in pairs -> to : 2
in pairs to -> separate : 2
pairs to separate -> the : 1
pairs to separate -> task : 1
to separate the -> function : 1
separate the function -> invocation : 1
the function invocation -> and : 1
function invocation and -> wait : 1
invocation and wait -> for : 2
and wait for -> to : 1
and wait for -> another : 1
and wait for -> for : 1
and wait for -> their : 1
wait for to -> avoid : 1
for to avoid -> the : 1
to avoid the -> additional : 1
to avoid the -> coupling : 1
to avoid the -> loss : 1
to avoid the -> infinite : 1
avoid the additional -> overhead : 1
the additional overhead -> of : 1
additional overhead of -> managing : 1
overhead of managing -> introduced : 1
of managing introduced -> a : 1
managing introduced a -> class : 1
introduced a class -> called : 1
a class called -> which : 1
class called which -> will : 1
called which will -> be : 1
which will be -> covered : 1
will be covered -> in : 3
be covered in -> detail : 2
be covered in -> and : 1
covered in detail -> in : 2
in detail in -> the : 2
in detail in -> this : 2
in detail in -> a : 1
in detail in -> of : 1
detail in the -> following : 2
the following chapter -> where : 1
following chapter where -> the : 1
chapter where the -> focus : 1
where the focus -> of : 1
the focus of -> discussion : 1
focus of discussion -> will : 1
of discussion will -> be : 1
discussion will be -> writing : 1
will be writing -> concurrent : 1
be writing concurrent -> programs : 1
writing concurrent programs -> at : 1
concurrent programs at -> least : 1
programs at least -> minimizing : 1
at least minimizing -> wherever : 1
least minimizing wherever -> is : 1
minimizing wherever is -> when : 1
wherever is when -> two : 1
is when two -> or : 1
when two or -> more : 1
two or more -> threads : 1
two or more -> the : 1
two or more -> bits : 1
two or more -> mutexes : 2
two or more -> observables : 1
or more threads -> or : 1
more threads or -> execution : 1
threads or execution -> paths : 1
or execution paths -> can : 1
execution paths can -> and : 1
paths can and -> complete : 1
can and complete -> in : 1
and complete in -> overlapping : 1
complete in overlapping -> time : 1
in overlapping time -> periods : 1
overlapping time periods -> some : 1
time periods some -> kind : 1
periods some kind -> of : 1
kind of interleaved -> parallelism : 1
of interleaved parallelism -> means : 1
interleaved parallelism means -> two : 1
parallelism means two -> tasks : 1
means two tasks -> can : 1
two tasks can -> run : 1
tasks can run -> at : 1
can run at -> the : 1
run at the -> same : 1
the same time -> you : 1
the same time -> another : 1
the same time -> and : 1
the same time -> more : 1
same time you -> see : 1
time you see -> on : 1
you see on -> a : 1
see on a -> multicore : 1
on a multicore -> concurrency : 1
a multicore concurrency -> is : 1
multicore concurrency is -> about : 1
concurrency is about -> response : 1
is about response -> time : 1
about response time -> and : 1
response time and -> parallelism : 1
time and parallelism -> is : 1
and parallelism is -> mostly : 1
and parallelism is -> achieved : 1
parallelism is mostly -> about : 1
is mostly about -> exploiting : 1
mostly about exploiting -> available : 1
about exploiting available -> world : 1
exploiting available world -> of : 1
available world of -> concurrency : 1
of concurrency get -> started : 1
concurrency get started -> with : 1
get started with -> our : 1
get started with -> the : 1
get started with -> gui : 1
get started with -> this : 1
started with our -> first : 1
with our first -> program : 1
our first program -> using : 1
first program using -> the : 1
program using the -> you : 1
using the you -> are : 1
you are expected -> to : 1
are expected to -> have : 1
expected to have -> or : 1
to have or -> later : 1
have or later -> to : 1
or later to -> compile : 1
later to compile -> the : 1
to compile the -> programs : 1
compile the programs -> we : 1
the programs we -> are : 1
programs we are -> going : 1
we are going -> to : 6
are going to -> discuss : 3
are going to -> create : 1
are going to -> write : 2
going to discuss -> in : 2
going to discuss -> how : 1
to discuss in -> this : 2
discuss in this -> take : 1
discuss in this -> chapter : 1
discuss in this -> and : 1
in this take -> a : 2
this take a -> classic : 1
this take a -> look : 1
take a classic -> hello : 1
a classic hello -> world : 1
classic hello world -> example : 1
hello world example -> as : 1
hello world example -> from : 1
world example as -> a : 1
example as a -> reference : 1
as a reference -> before : 1
as a reference -> to : 1
a reference before -> going : 1
reference before going -> into : 1
before going into -> a : 1
going into a -> hello : 1
into a hello -> thanks : 1
a hello thanks -> to : 1
hello thanks to -> dennis : 1
thanks to dennis -> ritchie : 1
to dennis ritchie -> and : 1
dennis ritchie and -> brian : 1
ritchie and brian -> this : 1
and brian this -> is : 1
brian this is -> a : 1
is a norm -> for : 1
a norm for -> all : 1
norm for all -> int : 1
for all int -> program : 1
all int program -> simply : 1
int program simply -> writes : 1
program simply writes -> hello : 1
simply writes hello -> world : 1
writes hello world -> into : 1
hello world into -> the : 1
world into the -> standard : 1
world into the -> problem : 1
into the standard -> output : 3
into the standard -> library : 1
into the standard -> console : 1
standard output stream -> the : 1
standard output stream -> from : 1
output stream the -> see : 1
stream the see -> another : 1
the see another -> example : 1
see another example -> that : 1
another example that -> does : 1
example that does -> the : 1
that does the -> same : 1
does the same -> but : 1
the same but -> using : 1
the same but -> the : 1
same but using -> a : 1
but using a -> background : 1
using a background -> thread : 1
a background thread -> called : 1
background thread called -> a : 1
thread called a -> worker : 1
called a worker -> thread : 1
a worker thread -> the : 1
a worker thread -> and : 1
worker thread the -> following : 1
thread the following -> function : 1
the following function -> will : 1
following function will -> be : 1
be invoked by -> the : 2
be invoked by -> consumers : 1
be invoked by -> giving : 1
by the thread -> library : 1
the thread library -> void : 1
thread library void -> int : 1
library void int -> creates : 1
void int creates -> a : 1
int creates a -> new : 1
creates a new -> thread : 1
creates a new -> which : 1
creates a new -> the : 2
creates a new -> retrieves : 1
a new thread -> and : 1
a new thread -> which : 1
a new thread -> started : 1
a new thread -> is : 1
a new thread -> of : 1
a new thread -> return : 1
a new thread -> as : 1
new thread and -> execute : 1
thread and execute -> on : 1
and execute on -> waiting : 1
execute on waiting -> for : 1
on waiting for -> the : 1
waiting for the -> to : 1
waiting for the -> newly : 1
waiting for the -> thread : 1
waiting for the -> completion : 1
waiting for the -> no : 1
waiting for the -> other : 1
waiting for the -> mutex : 1
waiting for the -> stack : 1
waiting for the -> result : 1
for the to -> complete : 1
the to complete -> its : 1
to complete its -> execution : 3
to complete its -> both : 1
to complete its -> sequence : 1
complete its execution -> before : 1
complete its execution -> using : 1
complete its execution -> by : 1
its execution before -> exiting : 1
execution before exiting -> from : 1
before exiting from -> the : 1
exiting from the -> program : 1
exiting from the -> sequence : 1
from the program -> first : 1
the program first -> difference : 1
program first difference -> with : 1
first difference with -> traditional : 1
difference with traditional -> code : 1
with traditional code -> is : 1
traditional code is -> the : 1
code is the -> inclusion : 1
code is the -> whose : 1
is the inclusion -> of : 1
the inclusion of -> the : 1
inclusion of the -> standard : 1
the standard header -> all : 1
the standard header -> the : 1
standard header all -> of : 1
header all of -> the : 1
of the multithreading -> support : 1
the multithreading support -> functions : 1
multithreading support functions -> and : 1
support functions and -> classes : 1
functions and classes -> are : 1
and classes are -> declared : 1
classes are declared -> in : 1
are declared in -> this : 1
declared in this -> new : 1
declared in this -> class : 1
in this new -> but : 1
this new but -> to : 1
new but to -> achieve : 1
but to achieve -> synchronization : 1
to achieve synchronization -> and : 1
achieve synchronization and -> shared : 1
synchronization and shared -> data : 1
and shared data -> the : 1
shared data the -> supporting : 1
data the supporting -> classes : 1
the supporting classes -> are : 1
supporting classes are -> available : 1
classes are available -> in : 1
are available in -> other : 1
are available in -> standard : 1
are available in -> the : 2
available in other -> if : 1
in other if -> you : 1
other if you -> are : 1
if you are -> familiar : 1
if you are -> not : 1
you are familiar -> with : 1
are familiar with -> threads : 1
are familiar with -> stl : 1
familiar with threads -> in : 1
with threads in -> windows : 1
threads in windows -> or : 1
in windows or -> posix : 1
windows or posix -> all : 1
or posix all -> threads : 1
posix all threads -> require : 1
all threads require -> an : 1
threads require an -> initial : 1
require an initial -> the : 1
an initial the -> same : 1
initial the same -> concept : 1
the same concept -> is : 1
same concept is -> what : 1
concept is what -> the : 1
is what the -> standard : 1
what the standard -> library : 1
standard library is -> also : 1
library is also -> in : 1
is also in -> this : 1
also in this -> is : 1
in this is -> the : 2
is the initial -> function : 1
the initial function -> of : 1
the initial function -> the : 1
the initial function -> for : 1
initial function of -> a : 1
function of a -> thread : 1
function of a -> mutex : 1
function of a -> condition : 1
of a thread -> declared : 1
of a thread -> is : 1
of a thread -> out : 1
of a thread -> sharing : 1
a thread declared -> in : 1
thread declared in -> the : 1
declared in the -> main : 1
declared in the -> y : 1
declared in the -> base : 1
in the main -> the : 1
in the main -> we : 2
in the main -> in : 1
in the main -> thread : 1
in the main -> this : 1
the main the -> initial : 1
main the initial -> function : 1
initial function the -> function : 1
function the function -> is : 1
the function is -> specified : 1
the function is -> invoked : 1
the function is -> checking : 1
the function is -> an : 2
the function is -> a : 1
the function is -> called : 1
the function is -> once : 1
function is specified -> in : 1
is specified in -> the : 1
in the constructor -> of : 1
in the constructor -> and : 1
the constructor of -> the : 1
the constructor of -> as : 1
constructor of the -> object : 1
of the object -> and : 1
of the object -> holding : 1
the object and -> construction : 1
the object and -> object : 1
object and construction -> starts : 1
and construction starts -> the : 1
construction starts the -> execution : 1
starts the execution -> of : 1
the execution of -> the : 7
the execution of -> a : 2
the execution of -> an : 1
the execution of -> scheduler : 1
execution of the -> most : 1
execution of the -> and : 1
execution of the -> an : 1
execution of the -> the : 2
execution of the -> standard : 1
execution of the -> observer : 1
the most notable -> difference : 1
most notable difference -> is : 1
notable difference is -> that : 1
difference is that -> now : 1
is that now -> the : 1
that now the -> application : 1
now the application -> writes : 1
the application writes -> the : 1
application writes the -> message : 1
writes the message -> into : 1
the message into -> a : 1
message into a -> standard : 1
into a standard -> output : 1
into a standard -> library : 1
a standard output -> stream : 1
output stream from -> a : 1
stream from a -> new : 1
stream from a -> range : 1
from a new -> thread : 1
new thread which -> results : 1
thread which results -> in : 1
which results in -> having : 1
results in having -> two : 1
in having two -> threads : 1
having two threads -> or : 1
two threads or -> a : 1
threads or a -> path : 1
or a path -> of : 1
a path of -> execution : 1
of execution in -> this : 1
execution in this -> once : 1
in this once -> the : 1
this once the -> new : 1
once the new -> thread : 1
the new thread -> has : 2
the new thread -> of : 1
new thread has -> been : 1
new thread has -> had : 1
thread has been -> the : 1
has been the -> main : 1
has been the -> position : 1
been the main -> thread : 1
the main thread -> continues : 1
the main thread -> is : 1
the main thread -> in : 1
the main thread -> needs : 1
the main thread -> details : 3
the main thread -> id : 4
the main thread -> subscribed : 1
the main thread -> create : 1
main thread continues -> its : 1
thread continues its -> if : 1
continues its if -> the : 1
its if the -> main : 1
if the main -> thread : 1
main thread is -> not : 1
thread is not -> waiting : 1
is not waiting -> for : 1
not waiting for -> the : 2
for the newly -> started : 1
the newly started -> thread : 1
newly started thread -> to : 1
started thread to -> the : 1
thread to the -> function : 1
to the function -> would : 1
to the function -> associated : 1
to the function -> of : 1
to the function -> both : 1
to the function -> that : 1
the function would -> end : 1
function would end -> and : 1
would end and -> thus : 1
end and thus -> that : 1
and thus that -> would : 1
thus that would -> be : 1
that would be -> the : 1
would be the -> end : 1
be the end -> of : 1
of the before -> the : 1
the before the -> new : 1
the before the -> data : 1
before the new -> thread : 1
thread has had -> the : 1
has had the -> chance : 1
had the chance -> to : 1
the chance to -> finish : 1
chance to finish -> its : 1
to finish its -> this : 1
finish its this -> is : 1
its this is -> the : 1
is the reason -> for : 1
the reason for -> calling : 1
the reason for -> that : 1
the reason for -> this : 1
reason for calling -> before : 1
for calling before -> the : 1
calling before the -> main : 1
before the main -> thread : 1
main thread in -> order : 1
thread in order -> to : 1
in order to -> wait : 1
in order to -> supply : 1
in order to -> allow : 1
in order to -> get : 1
in order to -> display : 1
order to wait -> for : 1
for the new -> which : 1
the new which -> is : 1
new which is -> started : 1
new which is -> the : 1
which is started -> the : 1
is started the -> execution : 1
started the execution -> starts : 1
the execution starts -> at : 1
execution starts at -> the : 1
starts at the -> user : 1
at the user -> entry : 1
the user entry -> point : 1
user entry point -> the : 1
entry point the -> execution : 1
point the execution -> of : 1
the and it -> will : 2
the and it -> cycles : 1
will be executing -> in : 1
be executing in -> a : 1
executing in a -> default : 1
in a default -> thread : 1
a default thread -> been : 1
default thread been -> every : 1
thread been every -> program : 1
been every program -> will : 1
every program will -> have : 1
program will have -> at : 1
will have at -> least : 1
have at least -> one : 1
least one thread -> of : 1
one thread of -> during : 1
thread of during -> the : 1
of during the -> execution : 1
during the execution -> of : 3
of the an -> arbitrary : 1
of the an -> instance : 1
the an arbitrary -> number : 1
number of threads -> can : 1
number of threads -> are : 1
number of threads -> from : 1
number of threads -> using : 1
number of threads -> that : 1
number of threads -> spawned : 1
of threads can -> be : 1
threads can be -> created : 1
can be created -> through : 1
can be created -> outside : 1
be created through -> a : 1
created through a -> standard : 1
through a standard -> library : 1
a standard library -> or : 1
a standard library -> makes : 1
standard library or -> these : 1
library or these -> threads : 1
or these threads -> can : 1
these threads can -> run : 1
threads can run -> in : 1
can run in -> parallel : 1
run in parallel -> if : 1
in parallel if -> the : 1
parallel if the -> cpu : 1
if the cpu -> cores : 1
the cpu cores -> are : 1
cpu cores are -> available : 1
cores are available -> to : 1
are available to -> execute : 1
available to execute -> if : 1
to execute if -> the : 1
execute if the -> number : 1
if the number -> of : 1
of threads are -> more : 1
threads are more -> than : 1
are more than -> the : 1
more than the -> number : 1
than the number -> of : 2
number of cpu -> even : 1
of cpu even -> though : 1
cpu even though -> there : 1
even though there -> is : 2
though there is -> we : 1
though there is -> no : 1
there is we -> cannot : 1
is we cannot -> run : 1
we cannot run -> all : 1
cannot run all -> of : 1
run all of -> the : 1
of the threads -> thread : 1
the threads thread -> switching : 1
threads thread switching -> happens : 1
thread switching happens -> here : 1
switching happens here -> as : 1
happens here as -> a : 1
here as a -> program : 1
as a program -> can : 1
a program can -> launch : 1
program can launch -> any : 1
can launch any -> number : 1
launch any number -> of : 1
any number of -> threads : 1
any number of -> arguments : 1
of threads from -> the : 1
threads from the -> main : 1
from the main -> and : 1
from the main -> thread : 1
the main and -> those : 1
main and those -> threads : 1
and those threads -> run : 1
those threads run -> the : 1
threads run the -> initial : 1
run the initial -> as : 1
the initial as -> we : 1
initial as we -> can : 1
as we can -> the : 1
as we can -> turn : 1
as we can -> see : 1
as we can -> connect : 1
we can the -> initial : 1
can the initial -> function : 1
initial function for -> a : 1
function for a -> program : 1
for a program -> thread : 1
a program thread -> is : 1
program thread is -> and : 1
thread is and -> the : 1
is and the -> program : 1
is and the -> two : 1
is and the -> function : 1
is and the -> data : 1
and the program -> ends : 1
the program ends -> when : 1
program ends when -> the : 1
ends when the -> main : 1
when the main -> returns : 1
the main returns -> from : 1
main returns from -> its : 1
returns from its -> this : 1
from its this -> terminates : 1
its this terminates -> all : 1
this terminates all -> the : 1
terminates all the -> parallel : 1
all the parallel -> the : 1
the parallel the -> main : 1
parallel the main -> thread : 1
main thread needs -> to : 1
thread needs to -> wait : 2
needs to wait -> until : 1
needs to wait -> for : 1
to wait until -> all : 1
to wait until -> a : 1
to wait until -> the : 1
wait until all -> the : 1
all the children -> threads : 1
the children threads -> finish : 1
children threads finish -> see : 1
threads finish see -> how : 1
finish see how -> the : 1
see how the -> launch : 1
see how the -> values : 1
see how the -> library : 1
how the launch -> and : 1
the launch and -> join : 1
launch and join -> of : 1
and join of -> threads : 1
join of threads -> the : 1
of threads the -> previous : 1
threads the previous -> we : 1
we saw that -> the : 1
we saw that -> producers : 1
saw that the -> initialization : 1
that the initialization -> function : 1
the initialization function -> is : 2
initialization function is -> passed : 1
initialization function is -> accepting : 1
initialization function is -> now : 1
function is passed -> as : 1
function is passed -> by : 1
is passed as -> an : 1
passed as an -> argument : 1
passed as an -> associated : 1
as an argument -> to : 2
as an argument -> into : 1
an argument to -> the : 2
and the thread -> gets : 1
the thread gets -> this : 1
thread gets this -> function : 1
gets this function -> runs : 1
this function runs -> on : 1
function runs on -> its : 1
runs on its -> own : 1
on its own -> the : 1
its own the -> thread : 1
own the thread -> launch : 1
the thread launch -> happens : 1
thread launch happens -> during : 1
launch happens during -> the : 1
happens during the -> thread : 1
happens during the -> the : 1
during the thread -> but : 1
the thread but -> the : 1
thread but the -> initialization : 1
but the initialization -> functions : 1
the initialization functions -> can : 1
initialization functions can -> have : 1
functions can have -> other : 1
can have other -> alternatives : 1
have other alternatives -> as : 1
other alternatives as -> a : 1
alternatives as a -> function : 1
as a function -> object : 1
a function object -> is : 1
a function object -> can : 1
function object is -> another : 1
object is another -> possible : 1
is another possible -> argument : 1
another possible argument -> in : 1
possible argument in -> a : 1
argument in a -> thread : 1
in a thread -> the : 1
in a thread -> managed : 1
a thread the -> standard : 1
thread the standard -> library : 1
standard library ensures -> that : 1
library ensures that -> the : 1
ensures that the -> works : 1
ensures that the -> launched : 1
ensures that the -> object : 1
ensures that the -> variable : 1
that the works -> with : 1
the works with -> any : 1
works with any -> callable : 1
with any callable -> modern : 1
with any callable -> object : 1
any callable modern -> standard : 1
callable modern standard -> supports : 1
modern standard supports -> threads : 1
standard supports threads -> to : 1
supports threads to -> be : 1
threads to be -> initialized : 1
to be initialized -> pointers : 1
be initialized pointers -> in : 1
initialized pointers in -> the : 1
pointers in the -> previous : 1
the previous object -> that : 1
previous object that -> implements : 1
object that implements -> the : 1
that implements the -> call : 1
implements the call -> callable : 1
the call callable -> entity : 1
call callable entity -> is : 1
callable entity is -> a : 1
entity is a -> candidate : 1
is a candidate -> for : 1
a candidate for -> initializing : 1
a candidate for -> writing : 1
candidate for initializing -> a : 1
for initializing a -> this : 1
initializing a this -> enables : 1
a this enables -> the : 1
this enables the -> to : 1
enables the to -> accept : 1
the to accept -> a : 1
to accept a -> class : 1
accept a class -> object : 1
a class object -> with : 1
class object with -> an : 1
object with an -> overloaded : 1
with an overloaded -> function : 1
an overloaded function -> call : 1
overloaded function call -> void : 1
function call void -> the : 1
call void the -> newly : 1
void the newly -> created : 1
the newly created -> thread : 1
the newly created -> us : 1
the newly created -> auto : 1
the newly created -> the : 1
newly created thread -> copies : 1
created thread copies -> the : 1
thread copies the -> object : 1
thread copies the -> value : 1
copies the object -> into : 1
the object into -> its : 1
object into its -> hence : 1
into its hence -> the : 1
its hence the -> copy : 1
its hence the -> result : 1
hence the copy -> behavior : 1
the copy behavior -> must : 1
copy behavior must -> be : 1
behavior must be -> we : 1
must be we -> can : 1
we can also -> use : 2
we can also -> call : 1
we can also -> write : 1
can also use -> to : 1
can also use -> a : 1
can also use -> microsoft : 1
also use to -> avoid : 1
use to avoid -> problems : 1
to avoid problems -> related : 1
avoid problems related -> to : 1
problems related to -> you : 1
related to you -> pass : 1
to you pass -> temporary : 1
you pass temporary -> instead : 1
pass temporary instead -> of : 1
temporary instead of -> a : 1
instead of a -> function : 2
instead of a -> it : 1
instead of a -> we : 1
of a function -> the : 1
of a function -> that : 1
of a function -> a : 1
of a function -> as : 1
a function the -> syntax : 1
function the syntax -> is : 1
the syntax is -> as : 1
syntax is as -> code : 1
is as code -> can : 1
as code can -> be : 1
code can be -> interpreted : 1
can be interpreted -> by : 1
be interpreted by -> the : 1
interpreted by the -> compiler : 1
the compiler as -> a : 1
compiler as a -> declaration : 1
as a declaration -> of : 1
a declaration of -> a : 1
declaration of a -> function : 1
declaration of a -> a : 1
function that accepts -> a : 1
that accepts a -> function : 1
accepts a function -> pointer : 1
a function pointer -> and : 1
function pointer and -> returns : 1
pointer and returns -> we : 1
and returns we -> can : 1
returns we can -> avoid : 1
we can avoid -> this : 1
can avoid this -> by : 1
avoid this by -> using : 1
this by using -> the : 1
using the new -> uniform : 1
the new uniform -> initialization : 1
new uniform initialization -> as : 1
uniform initialization as -> extra : 1
initialization as extra -> set : 1
as extra set -> of : 1
extra set of -> as : 1
set of as -> given : 1
of as given -> in : 1
as given in -> the : 2
given in the -> following : 2
given in the -> preceding : 1
following code can -> also : 1
code can also -> avoid : 1
can also avoid -> the : 1
also avoid the -> interpretation : 1
avoid the interpretation -> of : 1
the interpretation of -> object : 1
interpretation of object -> declaration : 1
of object declaration -> into : 1
object declaration into -> a : 1
declaration into a -> function : 1
into a function -> interesting : 1
a function interesting -> way : 1
function interesting way -> to : 1
interesting way to -> launch : 1
way to launch -> a : 1
to launch a -> thread : 1
launch a thread -> is : 1
a thread is -> by : 1
a thread is -> the : 1
a thread is -> a : 1
thread is by -> giving : 1
is by giving -> the : 1
by giving the -> lambdas : 1
by giving the -> second : 1
by giving the -> requisite : 1
giving the lambdas -> as : 1
the lambdas as -> an : 1
lambdas as an -> argument : 1
an argument into -> a : 1
argument into a -> lambdas : 1
into a lambdas -> can : 1
a lambdas can -> capture : 1
lambdas can capture -> local : 1
can capture local -> variables : 1
capture local variables -> and : 1
local variables and -> thus : 1
variables and thus -> avoid : 1
and thus avoid -> unnecessary : 1
thus avoid unnecessary -> usage : 1
avoid unnecessary usage -> of : 1
unnecessary usage of -> any : 1
usage of any -> lambdas : 1
of any lambdas -> are : 1
any lambdas are -> very : 1
lambdas are very -> useful : 1
are very useful -> when : 1
very useful when -> it : 1
useful when it -> comes : 1
when it comes -> to : 4
it comes to -> writing : 1
it comes to -> synchronization : 1
it comes to -> actual : 1
it comes to -> concurrent : 1
it comes to -> scheduling : 1
comes to writing -> anonymous : 1
to writing anonymous -> but : 1
writing anonymous but -> that : 1
anonymous but that -> mean : 1
but that mean -> that : 1
that mean that -> they : 1
mean that they -> should : 1
that they should -> be : 1
they should be -> used : 1
should be used -> lambda : 1
should be used -> if : 1
should be used -> in : 1
be used lambda -> function : 1
used lambda function -> can : 1
lambda function can -> be : 1
be used along -> with : 2
used along with -> a : 1
used along with -> return : 1
along with a -> thread : 1
with a thread -> declaration : 1
with a thread -> function : 1
a thread declaration -> as : 1
thread declaration as -> the : 1
declaration as the -> hello : 1
as the hello -> world : 1
the hello world -> you : 1
the hello world -> qt : 1
hello world you -> might : 1
world you might -> have : 1
you might have -> noticed : 3
you might have -> seen : 1
you might have -> guessed : 1
might have noticed -> the : 1
might have noticed -> that : 2
have noticed the -> use : 1
noticed the use -> of : 1
use of at -> the : 1
at the end -> of : 5
end of before -> leaving : 1
of before leaving -> from : 1
before leaving from -> the : 1
leaving from the -> the : 1
from the the -> call : 1
from the the -> signal : 1
from the the -> slots : 1
from the the -> gof : 1
from the the -> associated : 1
from the the -> request : 1
from the the -> rxcpp : 1
the the call -> to : 3
the call to -> on : 1
the call to -> cleans : 1
the call to -> will : 1
the call to -> it : 1
the call to -> destructor : 1
the call to -> locks : 1
the call to -> the : 6
the call to -> must : 1
the call to -> function : 1
the call to -> uses : 1
call to on -> the : 1
to on the -> associated : 1
to on the -> is : 1
on the associated -> thread : 1
the associated thread -> instance : 1
associated thread instance -> ensures : 1
thread instance ensures -> that : 1
instance ensures that -> the : 1
that the launched -> function : 1
the launched function -> will : 1
launched function will -> wait : 1
function will wait -> until : 1
will wait until -> the : 1
wait until the -> background : 1
wait until the -> anomalies : 1
until the background -> thread : 1
the background thread -> completes : 1
background thread completes -> its : 1
thread completes its -> in : 1
completes its in -> the : 1
its in the -> absence : 1
in the absence -> of : 1
the absence of -> the : 1
absence of the -> thread : 1
of the thread -> will : 1
of the thread -> initialization : 1
of the thread -> into : 1
the thread will -> be : 1
the thread will -> probably : 1
thread will be -> terminated : 1
thread will be -> using : 1
thread will be -> scheduled : 1
will be terminated -> before : 1
be terminated before -> the : 1
terminated before the -> thread : 1
before the thread -> starts : 1
the thread starts -> until : 1
thread starts until -> the : 1
starts until the -> current : 1
until the current -> context : 1
the current context -> is : 1
current context is -> finished : 1
context is finished -> child : 1
is finished child -> threads : 1
finished child threads -> will : 1
child threads will -> also : 1
threads will also -> be : 1
will also be -> is : 1
will also be -> part : 1
also be is -> a : 1
is a direct -> either : 1
a direct either -> waiting : 1
direct either waiting -> for : 1
either waiting for -> the : 1
for the thread -> to : 3
the thread to -> finish : 1
the thread to -> ensure : 1
the thread to -> complete : 2
the thread to -> run : 1
thread to finish -> or : 1
to finish or -> to : 1
finish or to -> get : 1
or to get -> more : 1
to get more -> control : 1
get more control -> over : 1
more control over -> the : 1
control over the -> we : 1
control over the -> in : 1
control over the -> execution : 1
over the we -> have : 1
we have other -> mechanisms : 1
have other mechanisms -> such : 1
other mechanisms such -> as : 2
mechanisms such as -> condition : 1
mechanisms such as -> handling : 1
such as condition -> and : 2
as condition and -> and : 1
as condition and -> futures : 1
condition and and -> they : 1
and and they -> will : 1
and they will -> be : 1
they will be -> discussed : 1
they will be -> a : 1
will be discussed -> in : 3
be discussed in -> the : 1
be discussed in -> this : 1
be discussed in -> detail : 1
discussed in the -> later : 1
discussed in the -> previous : 2
in the later -> sections : 1
the later sections -> of : 1
later sections of -> this : 2
sections of this -> chapter : 1
sections of this -> you : 1
this chapter and -> the : 1
chapter and the -> next : 1
chapter and the -> previous : 1
and the next -> the : 1
and the next -> one : 1
the next the -> call : 1
the next the -> class : 1
the next the -> purpose : 1
next the call -> to : 1
call to cleans -> up : 1
to cleans up -> the : 1
cleans up the -> storage : 1
up the storage -> associated : 1
the storage associated -> with : 1
storage associated with -> the : 1
the and so -> it : 1
the and so -> on : 1
the and so -> we : 1
the and so -> in : 1
and so it -> ensures : 1
so it ensures -> that : 1
it ensures that -> the : 1
that the object -> is : 1
the object is -> no : 1
the object is -> local : 1
the object is -> the : 1
the object is -> defined : 1
object is no -> longer : 1
is no longer -> associated : 1
is no longer -> holding : 1
no longer associated -> with : 1
longer associated with -> the : 1
with the thread -> that : 1
the thread that -> was : 1
thread that was -> this : 1
that was this -> asserts : 1
was this asserts -> that : 1
this asserts that -> the : 1
asserts that the -> function : 1
that the function -> can : 1
that the function -> will : 1
that the function -> prototype : 1
that the function -> that : 1
that the function -> continues : 1
the function can -> only : 1
the function can -> accept : 1
function can only -> be : 1
can only be -> called : 1
can only be -> avoided : 1
can only be -> performed : 1
only be called -> once : 1
be called once -> per : 1
be called once -> or : 1
called once per -> the : 1
once per the -> call : 1
per the call -> to : 1
call to will -> always : 1
to will always -> return : 1
will always return -> false : 1
always return false -> after : 1
return false after -> a : 1
false after a -> call : 1
after a call -> to : 1
a call to -> the : 5
a call to -> function : 1
call to the -> previous : 2
call to the -> which : 1
call to the -> function : 2
call to the -> appropriate : 1
call to the -> accumulator : 1
call to the -> respective : 1
call to the -> correct : 1
call to the -> observable : 1
call to the -> the : 1
call to the -> void : 1
call to the -> microservices : 1
call to the -> service : 1
call to the -> server : 1
to the previous -> example : 1
to the previous -> in : 1
to the previous -> and : 1
to the previous -> mouse : 1
to the previous -> code : 1
to the previous -> examples : 1
the previous example -> with : 1
the previous example -> can : 1
previous example with -> a : 1
example with a -> function : 1
with a function -> object : 1
function object can -> be : 1
object can be -> modified : 1
object can be -> achieved : 1
can be modified -> as : 1
be modified as -> follows : 1
modified as follows -> to : 1
as follows to -> understand : 1
follows to understand -> void : 1
to understand void -> for : 1
understand void for -> i : 1
void for i -> i : 6
i i void -> int : 1
i i void -> for : 2
i void int -> this : 1
void int this -> at : 1
int this at -> the : 1
this at the -> end : 1
the the thread -> object : 1
the thread object -> is : 1
thread object is -> verified : 1
object is verified -> to : 1
is verified to -> confirm : 1
verified to confirm -> whether : 1
to confirm whether -> the : 1
confirm whether the -> thread : 1
whether the thread -> is : 1
the thread is -> still : 1
the thread is -> using : 1
the thread is -> a : 1
the thread is -> referenced : 1
thread is still -> in : 1
is still in -> we : 1
still in we -> call : 1
in we call -> to : 1
we call to -> see : 1
call to see -> its : 1
to see its -> return : 1
see its return -> value : 1
its return value -> before : 1
return value before -> we : 1
value before we -> place : 1
before we place -> the : 1
we place the -> join : 1
place the join -> prevent : 1
the join prevent -> the : 1
join prevent the -> wait : 1
prevent the wait -> on : 1
the wait on -> there : 1
wait on there -> is : 1
on there is -> a : 1
is a mechanism -> that : 1
is a mechanism -> used : 1
is a mechanism -> within : 1
mechanism that was -> introduced : 1
that was introduced -> by : 1
was introduced by -> the : 1
introduced by the -> standard : 2
the standard to -> continue : 1
standard to continue -> even : 1
to continue even -> if : 1
continue even if -> the : 1
even if the -> parent : 1
even if the -> expected : 1
if the parent -> function : 1
the parent function -> finishes : 1
parent function finishes -> its : 1
function finishes its -> this : 1
finishes its this -> can : 1
its this can -> be : 1
can be achieved -> using : 1
can be achieved -> by : 5
be achieved using -> another : 1
achieved using another -> standard : 1
using another standard -> are : 1
another standard are -> a : 1
standard are a -> couple : 1
are a couple -> of : 1
couple of things -> that : 1
of things that -> we : 1
things that we -> need : 1
need to consider -> before : 1
to consider before -> detaching : 1
consider before detaching -> a : 1
before detaching a -> the : 1
detaching a the -> thread : 1
a the thread -> will : 1
a the thread -> then : 1
thread will probably -> still : 1
will probably still -> be : 1
probably still be -> running : 1
still be running -> when : 1
be running when -> as : 1
running when as -> per : 1
when as per -> the : 1
as per the -> implementation : 1
as per the -> this : 1
as per the -> specifications : 1
as per the -> mouse : 1
as per the -> reactive : 1
per the implementation -> given : 1
the implementation given -> in : 1
implementation given in -> the : 1
preceding the thread -> is : 1
thread is using -> the : 1
is using the -> reference : 1
using the reference -> of : 1
the reference of -> a : 1
reference of a -> local : 1
of a local -> variable : 1
a local variable -> created : 1
local variable created -> in : 1
variable created in -> which : 1
created in which -> is : 1
in which is -> not : 1
which is not -> a : 1
is not a -> good : 1
not a good -> the : 1
a good the -> old : 1
good the old -> stack : 1
the old stack -> variables : 1
old stack variables -> can : 1
stack variables can -> be : 1
variables can be -> overwritten : 1
can be overwritten -> at : 1
be overwritten at -> any : 1
overwritten at any -> time : 1
at any time -> on : 1
any time on -> most : 1
time on most -> these : 1
on most these -> situations : 1
most these situations -> must : 1
these situations must -> always : 1
situations must always -> be : 1
must always be -> addressed : 1
must always be -> true : 1
must always be -> initialized : 1
always be addressed -> while : 1
be addressed while -> using : 1
addressed while using -> in : 1
while using in -> your : 1
using in your -> the : 1
in your the -> most : 1
your the most -> common : 1
the most common -> way : 1
the most common -> cause : 1
the most common -> qt : 1
most common way -> of : 1
common way of -> handling : 1
way of handling -> this : 1
of handling this -> situation : 1
handling this situation -> is : 1
this situation is -> making : 1
situation is making -> a : 1
is making a -> thread : 1
making a thread -> and : 1
a thread and -> copying : 1
a thread and -> different : 1
a thread and -> placing : 1
thread and copying -> the : 1
and copying the -> data : 1
copying the data -> into : 1
the data into -> the : 1
data into the -> thread : 1
data into the -> stream : 1
data into the -> tensorflow : 1
into the thread -> instead : 1
the thread instead -> of : 1
thread instead of -> sharing : 1
instead of sharing -> arguments : 1
of sharing arguments -> into : 1
sharing arguments into -> a : 1
into a we -> have : 1
into a we -> can : 1
a we have -> figured : 1
a we have -> already : 1
a we have -> managed : 1
we have figured -> out : 1
have figured out -> how : 1
figured out how -> to : 1
out how to -> launch : 1
out how to -> design : 1
launch and wait -> over : 1
and wait over -> a : 1
wait over a -> see : 1
over a see -> how : 1
a see how -> to : 1
see how to -> pass : 1
see how to -> access : 1
how to pass -> arguments : 2
to pass arguments -> into : 2
pass arguments into -> a : 2
into a thread -> initialization : 1
into a thread -> function : 1
into a thread -> go : 1
a thread initialization -> look : 1
a thread initialization -> arguments : 1
thread initialization look -> at : 1
initialization look at -> an : 1
look at an -> example : 3
at an example -> to : 1
at an example -> that : 2
an example to -> find : 1
example to find -> the : 1
to find the -> factorial : 1
to find the -> sum : 1
find the factorial -> of : 1
the factorial of -> a : 1
factorial of a -> factorial : 1
of a factorial -> long : 1
a factorial long -> long : 1
factorial long long -> void : 1
long long void -> myfact : 1
long void myfact -> for : 1
void myfact for -> i : 1
myfact for i -> i : 1
i i myfact -> of : 1
i myfact of -> number : 1
myfact of number -> is : 1
of number is -> int : 1
number is int -> factorial : 1
is int factorial -> this : 1
int factorial this -> it : 1
factorial this it -> is : 1
this it is -> clear : 1
it is clear -> that : 1
is clear that -> passing : 1
clear that passing -> arguments : 1
that passing arguments -> into : 1
passing arguments into -> a : 2
a thread function -> or : 1
a thread function -> where : 1
thread function or -> a : 1
function or a -> thread : 1
function or a -> in : 1
or a thread -> callable : 1
a thread callable -> object : 1
thread callable object -> can : 1
callable object can -> be : 1
be achieved by -> passing : 3
be achieved by -> another : 1
be achieved by -> using : 1
achieved by passing -> additional : 1
achieved by passing -> the : 2
by passing additional -> arguments : 1
passing additional arguments -> into : 1
additional arguments into -> an : 1
arguments into an -> one : 1
into an one -> thing : 1
an one thing -> we : 1
one thing we -> must : 1
thing we must -> keep : 1
we must keep -> in : 1
must keep in -> arguments : 1
keep in arguments -> passed : 1
in arguments passed -> are : 1
arguments passed are -> copied : 1
passed are copied -> into : 1
are copied into -> the : 1
copied into the -> internal : 2
into the internal -> storage : 1
into the internal -> will : 1
the internal storage -> for : 1
internal storage for -> further : 1
storage for further -> it : 1
for further it -> is : 1
further it is -> important : 1
it is important -> for : 1
is important for -> a : 1
important for a -> execution : 1
for a execution -> to : 1
a execution to -> have : 1
execution to have -> its : 1
to have its -> own : 1
its own copy -> of : 1
its own copy -> assignment : 1
own copy of -> as : 1
copy of as -> we : 1
of as we -> have : 1
we have seen -> the : 2
we have seen -> that : 2
we have seen -> how : 1
have seen the -> problems : 1
have seen the -> importance : 1
have seen the -> the : 1
seen the problems -> associated : 1
the problems associated -> with : 2
problems associated with -> local : 1
problems associated with -> threads : 1
associated with local -> variables : 1
with local variables -> going : 1
local variables going -> out : 1
variables going out -> of : 1
going out of -> to : 1
out of to -> discuss : 1
of to discuss -> passing : 1
to discuss passing -> arguments : 1
discuss passing arguments -> into : 1
a thread go -> back : 1
thread go back -> to : 1
go back to -> our : 1
back to our -> first : 1
back to our -> threads : 1
to our first -> hello : 1
our first hello -> world : 1
first hello world -> example : 1
world example from -> this : 1
example from this -> this : 1
from this this -> the : 1
this this the -> function : 1
this the function -> takes : 1
this the function -> expects : 1
this the function -> is : 1
the function takes -> as : 1
function takes as -> an : 1
takes as an -> but : 1
as an but -> we : 1
an but we -> are : 1
but we are -> passing : 1
we are passing -> a : 1
we are passing -> as : 1
are passing a -> as : 1
passing a as -> an : 1
a as an -> argument : 1
to the thread -> only : 1
to the thread -> as : 1
to the thread -> is : 1
to the thread -> to : 1
the thread only -> in : 1
thread only in -> the : 1
only in the -> case : 1
case of a -> thread : 1
thread is the -> argument : 1
is the argument -> and : 1
the argument and -> copied : 1
argument and copied -> into : 1
and copied into -> the : 1
the internal will -> be : 1
internal will be -> converted : 1
will be converted -> to : 1
be converted to -> the : 1
converted to the -> type : 1
to the type -> of : 1
type of argument -> supplied : 1
of argument supplied -> to : 1
argument supplied to -> a : 1
argument supplied to -> the : 1
supplied to a -> thread : 1
to a thread -> must : 1
a thread must -> be : 1
thread must be -> chosen : 1
must be chosen -> while : 1
must be chosen -> appropriately : 1
be chosen while -> keeping : 1
chosen while keeping -> this : 1
while keeping this -> in : 1
keeping this in -> see : 1
this in see -> what : 1
in see what -> happens : 1
in see what -> the : 1
see what happens -> if : 1
see what happens -> when : 1
what happens if -> a : 1
happens if a -> pointer : 1
if a pointer -> is : 1
a pointer is -> supplied : 1
pointer is supplied -> to : 1
is supplied to -> the : 1
supplied to the -> thread : 3
supplied to the -> subscriber : 1
the thread as -> an : 1
thread as an -> void : 1
as an void -> char : 1
an void char -> const : 1
void char const -> hello : 1
char const hello -> the : 1
const hello the -> preceding : 1
hello the preceding -> the : 1
preceding the argument -> supplied : 1
the argument supplied -> to : 1
thread is a -> pointer : 1
thread is a -> representation : 1
is a pointer -> to : 1
a pointer to -> the : 2
pointer to the -> local : 1
pointer to the -> first : 1
pointer to the -> next : 1
pointer to the -> structure : 1
pointer to the -> head : 1
to the local -> variable : 1
the local variable -> there : 1
local variable there -> is : 1
variable there is -> a : 1
is a probable -> chance : 1
a probable chance -> that : 1
probable chance that -> the : 1
chance that the -> function : 1
chance that the -> streams : 1
function will exit -> before : 1
will exit before -> the : 1
exit before the -> conversion : 1
before the conversion -> of : 1
conversion of to -> happens : 1
of to happens -> on : 1
to happens on -> the : 1
happens on the -> this : 1
on the this -> could : 1
the this could -> lead : 1
this could lead -> to : 1
could lead to -> an : 2
could lead to -> the : 1
lead to an -> undefined : 2
to an undefined -> this : 1
to an undefined -> the : 1
an undefined this -> problem : 1
undefined this problem -> can : 1
this problem can -> be : 1
problem can be -> resolved : 1
can be resolved -> by : 1
be resolved by -> casting : 1
resolved by casting -> the : 1
by casting the -> variable : 1
casting the variable -> into : 1
the variable into -> in : 1
variable into in -> the : 1
into in the -> declaration : 1
in the declaration -> as : 1
the declaration as -> look : 1
declaration as look -> at : 1
as look at -> the : 1
as look at -> a : 1
at the cases -> where : 1
the cases where -> you : 1
cases where you -> want : 1
you want a -> reference : 1
want a reference -> to : 1
a reference to -> get : 1
a reference to -> the : 4
a reference to -> actual : 1
a reference to -> based : 1
reference to get -> updated : 1
to get updated -> in : 1
get updated in -> the : 2
updated in the -> in : 1
updated in the -> first : 1
the in a -> typical : 1
the in a -> this : 1
in a typical -> the : 1
in a typical -> command : 1
a typical the -> thread : 1
typical the thread -> copies : 1
the thread copies -> the : 1
copies the value -> supplied : 1
the value supplied -> to : 1
value supplied to -> the : 1
thread to ensure -> a : 1
to ensure a -> safe : 1
ensure a safe -> but : 1
a safe but -> the : 1
safe but the -> standard : 1
but the standard -> library : 1
standard library has -> also : 2
standard library has -> introduced : 1
standard library has -> provided : 1
library has also -> provided : 2
has also provided -> a : 2
also provided a -> means : 1
also provided a -> set : 1
provided a means -> to : 1
a means to -> pass : 1
means to pass -> the : 1
to pass the -> argument : 1
pass the argument -> by : 1
the argument by -> reference : 1
argument by reference -> to : 1
by reference to -> a : 1
reference to a -> in : 1
to a in -> many : 1
a in many -> practical : 1
in many practical -> you : 1
many practical you -> might : 1
practical you might -> have : 1
might have seen -> that : 1
might have seen -> the : 1
have seen that -> a : 1
have seen that -> sequentially : 1
have seen that -> event : 1
have seen that -> the : 2
seen that a -> shared : 1
that a shared -> data : 1
a shared data -> structure : 2
shared data structure -> is : 1
shared data structure -> will : 1
shared data structure -> requires : 1
data structure is -> getting : 1
structure is getting -> updated : 1
is getting updated -> inside : 1
getting updated inside -> a : 1
updated inside a -> the : 1
inside a the -> following : 1
a the following -> example : 2
the following example -> shows : 2
the following example -> demonstrates : 1
the following example -> handles : 1
following example shows -> how : 2
example shows how -> to : 2
shows how to -> achieve : 1
shows how to -> use : 1
how to achieve -> pass : 1
to achieve pass -> by : 1
achieve pass by -> reference : 1
pass by reference -> in : 1
by reference in -> a : 1
reference in a -> the : 1
in a the -> preceding : 1
in a the -> thread : 1
in a the -> operation : 1
a the preceding -> wrapping : 1
the preceding wrapping -> the : 1
preceding wrapping the -> arguments : 1
wrapping the arguments -> passed : 1
the arguments passed -> into : 1
arguments passed into -> the : 1
passed into the -> constructor : 2
passed into the -> function : 1
passed into the -> stream : 1
into the constructor -> with : 1
into the constructor -> of : 1
the constructor with -> ensures : 1
constructor with ensures -> that : 1
with ensures that -> the : 1
that the variable -> supplied : 1
the variable supplied -> inside : 1
variable supplied inside -> the : 1
supplied inside the -> thread : 1
inside the thread -> is : 1
thread is referenced -> to : 1
is referenced to -> the : 1
referenced to the -> actual : 1
to the actual -> you : 1
to the actual -> see : 1
the actual you -> might : 1
actual you might -> have : 1
have noticed that -> the : 2
noticed that the -> function : 2
the thread initialization -> function : 1
thread initialization function -> is : 1
function is accepting -> a : 1
is accepting a -> reference : 1
accepting a reference -> to : 1
to the but -> why : 1
the but why -> do : 1
but why do -> you : 1
why do you -> still : 1
do you still -> need : 1
you still need -> an : 1
still need an -> wrapping : 1
need an wrapping -> for : 1
an wrapping for -> thread : 1
wrapping for thread -> consider : 1
for thread consider -> the : 1
thread consider the -> following : 1
consider the following -> code : 1
following code for -> thread : 1
code for thread -> this : 1
for thread this -> the : 1
thread this the -> function : 1
the function expects -> the : 1
the function expects -> a : 1
function expects the -> argument : 1
expects the argument -> to : 1
argument to be -> treated : 1
to be treated -> as : 1
treated as a -> reference : 1
reference to actual -> but : 1
to actual but -> when : 1
actual but when -> used : 1
but when used -> as : 1
when used as -> a : 1
used as a -> thread : 1
used as a -> boolean : 1
used as a -> mechanism : 1
as a thread -> initialization : 1
thread initialization arguments -> are : 1
initialization arguments are -> simply : 1
arguments are simply -> copied : 1
are simply copied -> when : 1
simply copied when -> the : 1
copied when the -> call : 1
call to it -> will : 1
to it will -> pass : 1
to it will -> only : 1
it will pass -> a : 1
will pass a -> reference : 1
pass a reference -> to : 1
to the internal -> copies : 1
to the internal -> implementation : 1
the internal copies -> of : 1
internal copies of -> arguments : 1
copies of arguments -> and : 1
of arguments and -> not : 1
arguments and not -> a : 1
and not a -> reference : 1
not a reference -> to : 1
the actual see -> the : 1
actual see the -> usefulness : 1
see the usefulness -> of : 1
the usefulness of -> lambda : 1
usefulness of lambda -> expressions : 1
of lambda expressions -> for : 1
lambda expressions for -> in : 1
expressions for in -> the : 1
for in the -> following : 1
following we are -> going : 1
going to create -> five : 1
to create five -> threads : 1
create five threads -> and : 1
five threads and -> put : 1
threads and put -> those : 1
and put those -> into : 1
put those into -> a : 1
those into a -> vector : 1
into a vector -> each : 1
a vector each -> thread : 1
vector each thread -> will : 1
each thread will -> be : 1
be using a -> lambda : 1
using a lambda -> function : 2
lambda function as -> the : 1
as the initialization -> the : 1
the initialization the -> threads : 1
initialization the threads -> initialized : 1
the threads initialized -> in : 1
threads initialized in -> the : 1
initialized in the -> following : 1
following code are -> capturing : 1
code are capturing -> the : 1
are capturing the -> loop : 1
capturing the loop -> index : 1
the loop index -> by : 1
loop index by -> for : 1
index by for -> i : 1
by for i -> i : 1
i i i -> vector : 1
i i i -> output : 1
i i i -> the : 1
i i i -> i : 8
i i i -> function : 1
i i i -> write : 1
i i i -> void : 2
i i i -> this : 2
i i i -> bevenready : 2
i i vector -> container : 1
i vector container -> threads : 1
vector container threads -> store : 1
container threads store -> five : 1
threads store five -> threads : 1
store five threads -> that : 1
five threads that -> have : 1
threads that have -> been : 1
that have been -> created : 1
have been created -> inside : 1
been created inside -> the : 1
created inside the -> they : 1
inside the they -> are : 1
the they are -> joined : 1
the they are -> suitable : 1
they are joined -> at : 1
are joined at -> the : 1
joined at the -> end : 1
the function once -> the : 1
function once the -> execution : 1
once the execution -> is : 1
the execution is -> the : 1
the execution is -> totally : 1
execution is the -> output : 1
is the output -> for : 1
is the output -> stream : 1
the output for -> the : 1
output for the -> preceding : 2
output for the -> code : 1
for the preceding -> code : 2
for the preceding -> template : 1
for the preceding -> the : 1
preceding code may -> look : 2
code may look -> as : 2
code may look -> like : 1
may look as -> thread : 2
look as thread -> thread : 2
as thread thread -> thread : 2
thread thread thread -> thread : 6
thread thread thread -> output : 1
thread thread thread -> the : 1
thread thread output -> of : 1
thread output of -> the : 1
output of the -> program : 6
output of the -> green : 1
output of the -> preceding : 5
output of the -> code : 3
output of the -> previous : 2
of the program -> could : 1
of the program -> losing : 1
of the program -> was : 1
of the program -> remains : 1
of the program -> is : 2
of the program -> will : 1
the program could -> be : 1
program could be -> different : 1
could be different -> for : 1
be different for -> each : 1
different for each -> this : 1
for each this -> program : 1
each this program -> is : 1
this program is -> a : 1
this program is -> always : 1
this program is -> written : 1
program is a -> good : 1
program is a -> wrapper : 1
program is a -> simple : 1
program is a -> we : 1
a good example -> to : 2
good example to -> showcase : 1
good example to -> model : 1
example to showcase -> the : 1
to showcase the -> associated : 1
showcase the associated -> with : 1
the associated with -> concurrent : 1
the associated with -> the : 1
associated with concurrent -> in : 1
associated with concurrent -> code : 1
with concurrent in -> the : 1
concurrent in the -> following : 1
will discuss the -> move : 1
will discuss the -> available : 1
will discuss the -> code : 1
discuss the move -> properties : 1
the move properties -> of : 1
move properties of -> a : 1
properties of a -> the : 1
a the examples -> discussed : 1
the examples discussed -> so : 1
examples discussed so -> far : 1
discussed so far -> in : 1
so far in -> this : 2
so far in -> the : 1
far in this -> you : 1
far in this -> book : 1
this you might -> have : 1
function that launches -> the : 1
that launches the -> thread : 1
launches the thread -> has : 1
the thread has -> to : 1
thread has to -> wait : 1
has to wait -> for : 1
thread to complete -> its : 3
its execution using -> the : 1
execution using the -> otherwise : 1
using the otherwise -> it : 1
the otherwise it -> will : 1
otherwise it will -> call : 1
it will call -> with : 1
it will call -> on : 1
will call with -> a : 1
call with a -> cost : 1
with a cost -> of : 1
a cost of -> the : 1
cost of the -> program : 1
the program losing -> control : 1
program losing control -> over : 1
losing control over -> the : 1
over the in -> modern : 1
the in modern -> many : 1
the in modern -> we : 1
in modern many -> standard : 1
modern many standard -> types : 1
many standard types -> are : 1
standard types are -> but : 1
types are but -> cannot : 1
are but cannot -> be : 1
but cannot be -> is : 1
cannot be is -> one : 1
be is one -> of : 1
is one of -> this : 1
is one of -> the : 4
one of this -> means : 1
of this means -> that : 1
this means that -> the : 2
this means that -> they : 1
this means that -> you : 1
this means that -> we : 2
means that the -> ownership : 1
means that the -> threads : 1
means that the -> processor : 1
means that the -> class : 1
means that the -> problems : 1
that the ownership -> of : 1
the ownership of -> a : 2
the ownership of -> back : 1
the ownership of -> the : 2
ownership of a -> execution : 1
ownership of a -> thread : 1
of a execution -> can : 1
a execution can -> be : 1
execution can be -> moved : 1
can be moved -> between : 1
can be moved -> inside : 1
be moved between -> instances : 1
moved between instances -> with : 1
between instances with -> the : 1
instances with the -> help : 1
help of move -> are : 1
of move are -> many : 1
move are many -> situations : 1
are many situations -> where : 1
many situations where -> we : 1
situations where we -> want : 1
where we want -> to : 1
we want to -> move : 1
we want to -> deliver : 1
we want to -> a : 1
we want to -> replace : 1
we want to -> applications : 1
want to move -> the : 1
to move the -> ownership : 1
move the ownership -> to : 1
the ownership to -> another : 1
the ownership to -> some : 1
ownership to another -> for : 1
to another for -> if : 1
another for if -> we : 1
for if we -> want : 1
if we want -> the : 1
we want the -> thread : 1
want the thread -> to : 1
thread to run -> in : 1
thread to run -> asynchronously : 1
to run in -> the : 1
to run in -> multiple : 1
run in the -> background : 1
run in the -> main : 1
in the background -> without : 1
the background without -> waiting : 1
background without waiting -> for : 1
without waiting for -> it : 1
waiting for it -> on : 1
waiting for it -> to : 1
for it on -> the : 1
it on the -> function : 1
on the function -> that : 1
function that created -> the : 1
that created the -> this : 1
created the this -> can : 1
the this can -> be : 3
by passing the -> thread : 1
by passing the -> ownership : 1
passing the thread -> ownership : 1
the thread ownership -> to : 1
thread ownership to -> a : 1
ownership to a -> calling : 1
to a calling -> function : 1
a calling function -> rather : 1
calling function rather -> than : 1
function rather than -> waiting : 1
rather than waiting -> for : 1
than waiting for -> it : 1
for it to -> complete : 1
it to complete -> in : 1
to complete in -> the : 1
complete in the -> created : 1
in the created -> in : 1
the created in -> another : 1
created in another -> pass : 1
in another pass -> the : 1
another pass the -> ownership : 1
pass the ownership -> to : 1
ownership to some -> other : 1
to some other -> which : 1
some other which -> will : 1
other which will -> wait : 1
which will wait -> for : 1
will wait for -> the : 1
complete its both -> of : 1
its both of -> these : 1
both of these -> cases : 1
of these cases -> can : 1
these cases can -> be : 1
cases can be -> achieved : 1
passing the ownership -> from : 1
the ownership from -> one : 1
ownership from one -> thread : 1
from one thread -> instance : 1
one thread instance -> to : 1
thread instance to -> explain : 1
instance to explain -> let : 1
to explain let -> us : 1
explain let us -> define : 1
us define two -> functions : 1
define two functions -> to : 1
functions to use -> as : 1
to use as -> the : 1
use as the -> thread : 1
as the thread -> void : 1
as the thread -> functions : 1
as the thread -> execution : 1
the thread void -> look : 1
thread void look -> into : 1
void look into -> the : 1
look into the -> main : 1
look into the -> atomic : 1
look into the -> sequentially : 1
look into the -> way : 1
look into the -> code : 1
into the main -> function : 1
the main function -> that : 1
main function that -> spawns : 1
function that spawns -> threads : 1
that spawns threads -> from : 1
spawns threads from -> previously : 1
threads from previously -> declared : 1
from previously declared -> ownership : 1
previously declared ownership -> of : 1
declared ownership of -> is : 1
ownership of is -> transferred : 2
of is transferred -> to : 2
is transferred to -> the : 1
is transferred to -> was : 1
transferred to the -> preceding : 1
to the preceding -> a : 1
the preceding a -> new : 1
preceding a new -> thread : 1
new thread started -> with : 1
thread started with -> in : 1
started with in -> the : 1
with in the -> first : 1
with in the -> previous : 1
in the first -> line : 1
in the first -> table : 1
in the first -> label : 1
the first line -> of : 2
first line of -> ownership : 1
first line of -> they : 1
line of ownership -> is : 1
of ownership is -> then : 1
ownership is then -> transferred : 1
is then transferred -> to : 2
then transferred to -> using : 1
then transferred to -> by : 1
transferred to using -> the : 1
to using the -> which : 1
using the which -> is : 1
the which is -> invoking : 1
the which is -> a : 1
the which is -> included : 1
the which is -> stored : 1
which is invoking -> the : 1
is invoking the -> move : 1
is invoking the -> default : 1
invoking the move -> constructor : 1
the move constructor -> of : 1
move constructor of -> which : 1
constructor of which -> is : 1
of which is -> associated : 2
of which is -> defined : 1
of which is -> different : 1
which is associated -> with : 4
is associated with -> the : 3
is associated with -> since : 1
with the instance -> has : 1
the instance has -> no : 1
instance has no -> associated : 1
has no associated -> thread : 1
no associated thread -> of : 1
associated thread of -> the : 1
associated thread of -> execution : 2
associated thread of -> assume : 1
thread of the -> initialization : 1
thread of the -> operators : 1
of the initialization -> function : 1
function is now -> associated : 1
is now associated -> with : 1
now associated with -> a : 1
associated with a -> new : 1
associated with a -> running : 1
associated with a -> lock : 1
associated with a -> separate : 1
associated with a -> common : 1
associated with a -> future : 1
with a new -> thread : 1
new thread is -> started : 1
thread is started -> using : 1
is started using -> an : 1
started using an -> which : 1
using an which -> invokes : 1
an which invokes -> the : 1
which invokes the -> move : 1
invokes the move -> assignment : 1
the move assignment -> operator : 1
the move assignment -> by : 1
assignment operator of -> which : 1
assignment operator of -> this : 1
assignment operator of -> atomic : 1
operator of which -> is : 1
associated with since -> we : 1
with since we -> are : 1
since we are -> using : 2
are using an -> an : 1
using an an -> explicit : 1
an an explicit -> call : 1
an explicit call -> to : 2
explicit call to -> is : 1
explicit call to -> which : 1
call to is -> not : 1
to is not -> thread : 1
is not thread -> instance : 1
not thread instance -> created : 1
thread instance created -> without : 1
instance created without -> any : 1
created without any -> associated : 1
without any associated -> thread : 1
any associated thread -> execution : 1
any associated thread -> of : 1
associated thread execution -> ownership : 1
thread execution ownership -> of : 1
execution ownership of -> is : 1
transferred to was -> instantiated : 1
to was instantiated -> without : 1
was instantiated without -> any : 1
instantiated without any -> thread : 1
without any thread -> of : 1
any thread of -> which : 1
thread of which -> means : 1
thread of which -> is : 1
of which means -> it : 1
which means it -> is : 1
means it is -> invoking : 1
it is invoking -> the : 1
invoking the default -> the : 1
the default the -> ownership : 1
default the ownership -> currently : 1
the ownership currently -> associated : 1
ownership currently associated -> with : 1
currently associated with -> is : 1
currently associated with -> he : 1
associated with is -> then : 1
with is then -> transferred : 1
transferred to by -> the : 1
to by the -> move : 1
by the move -> assignment : 1
move assignment by -> explicitly : 1
assignment by explicitly -> calling : 1
by explicitly calling -> the : 1
explicitly calling the -> no : 1
calling the no -> need : 1
the no need -> to : 1
no need to -> join : 1
need to join -> no : 1
to join no -> longer : 1
join no longer -> has : 1
no longer has -> any : 1
longer has any -> associated : 1
has any associated -> thread : 1
thread of execution -> if : 1
thread of execution -> are : 1
thread of execution -> to : 1
of execution if -> if : 1
execution if if -> return : 1
if if return -> the : 1
if return the -> instances : 1
return the instances -> with : 1
the instances with -> an : 2
instances with an -> associated : 2
with an associated -> thread : 2
an associated thread -> of : 2
of execution are -> joined : 1
execution are joined -> before : 1
are joined before -> the : 1
joined before the -> program : 1
before the program -> and : 1
the program and -> are : 1
program and are -> the : 1
and are the -> instances : 1
are the instances -> with : 1
thread of assume -> that : 1
of assume that -> the : 1
assume that the -> following : 1
that the following -> code : 1
following code is -> present : 1
code is present -> before : 1
is present before -> the : 1
present before the -> threads : 1
before the threads -> the : 1
before the threads -> are : 1
the threads the -> preceding : 1
threads the preceding -> the : 1
preceding the instance -> is : 1
the instance is -> already : 1
instance is already -> associated : 1
is already associated -> with : 1
already associated with -> a : 1
with a running -> function : 1
a running function -> when : 1
running function when -> attempts : 1
function when attempts -> to : 1
when attempts to -> transfer : 1
attempts to transfer -> the : 1
to transfer the -> ownership : 1
to transfer the -> wisdom : 1
transfer the ownership -> of : 1
ownership of back -> to : 1
of back to -> is : 1
back to is -> called : 1
to is called -> to : 1
is called to -> terminate : 1
is called to -> start : 2
called to terminate -> the : 1
to terminate the -> this : 1
terminate the this -> guarantees : 1
the this guarantees -> the : 1
the this guarantees -> safe : 1
this guarantees the -> consistency : 1
guarantees the consistency -> of : 1
the consistency of -> the : 1
consistency of the -> move : 1
of the move -> support : 1
of the move -> semantic : 1
the move support -> in : 1
move support in -> helps : 1
support in helps -> in : 1
in helps in -> transferring : 1
helps in transferring -> the : 1
in transferring the -> ownership : 1
transferring the ownership -> of : 1
a thread out -> of : 1
thread out of -> a : 1
out of a -> the : 1
following example demonstrates -> such : 1
example demonstrates such -> a : 1
demonstrates such a -> return : 1
such a return -> void : 1
a return void -> t : 1
return void t -> the : 1
void t the -> function : 1
t the function -> returns : 1
the function returns -> the : 1
the function returns -> if : 1
the function returns -> an : 2
the function returns -> in : 1
function returns the -> associated : 1
function returns the -> so : 1
function returns the -> of : 1
returns the associated -> with : 1
the the function -> calls : 1
the the function -> returns : 2
the the function -> is : 1
the the function -> of : 1
the the function -> waits : 1
the the function -> has : 1
the the function -> notifies : 2
the function calls -> and : 1
function calls and -> then : 1
calls and then -> returns : 1
and then returns -> the : 1
then returns the -> thread : 1
returns the thread -> which : 1
the thread which -> is : 1
the thread which -> we : 1
thread which is -> an : 1
which is an -> rvalue : 1
which is an -> atomic : 1
is an rvalue -> that : 1
an rvalue that -> is : 1
rvalue that is -> assigned : 1
that is assigned -> to : 1
is assigned to -> an : 1
is assigned to -> input : 1
assigned to an -> this : 1
to an this -> transfers : 1
an this transfers -> the : 1
this transfers the -> ownership : 1
transfers the ownership -> of : 1
ownership of the -> thread : 1
ownership of the -> existing : 1
the thread into -> the : 1
thread into the -> object : 1
into the object -> and : 1
object and object -> is : 1
and object is -> waiting : 1
object is waiting -> for : 1
is waiting for -> the : 3
for the completion -> of : 1
the completion of -> thread : 1
the completion of -> an : 1
completion of thread -> execution : 1
of thread execution -> in : 1
thread execution in -> the : 1
execution in the -> transferred : 1
execution in the -> thread : 1
in the transferred -> data : 1
the transferred data -> between : 1
transferred data between -> have : 1
data between have -> seen : 1
between have seen -> how : 1
have seen how -> to : 1
have seen how -> this : 1
seen how to -> start : 1
how to start -> a : 1
to start a -> thread : 1
start a thread -> and : 1
thread and different -> methods : 1
and different methods -> of : 1
different methods of -> managing : 1
methods of managing -> discuss : 1
of managing discuss -> how : 1
managing discuss how -> to : 1
how to share -> data : 1
to share data -> between : 2
share data between -> one : 1
share data between -> the : 1
data between one -> key : 1
between one key -> feature : 1
one key feature -> of : 1
key feature of -> concurrency : 1
feature of concurrency -> is : 1
of concurrency is -> its : 1
concurrency is its -> ability : 1
is its ability -> to : 2
its ability to -> share : 1
its ability to -> transfer : 1
ability to share -> data : 1
data between the -> threads : 1
between the threads -> in : 1
the threads in -> see : 1
the threads in -> the : 1
threads in see -> what : 1
see what the -> problems : 1
what the problems -> associated : 1
associated with threads -> accessing : 1
with threads accessing -> common : 1
threads accessing common -> data : 1
accessing common data -> be : 1
common data be -> a : 1
data be a -> problem : 1
be a problem -> if : 1
be a problem -> in : 1
a problem if -> the : 1
problem if the -> data : 1
if the data -> shared : 1
the data shared -> between : 1
data shared between -> threads : 1
shared between threads -> is : 1
between threads is -> immutable : 1
between threads is -> managed : 1
threads is immutable -> because : 1
is immutable because -> the : 1
immutable because the -> data : 1
because the data -> read : 1
the data read -> by : 1
data read by -> one : 1
read by one -> thread : 1
by one thread -> is : 1
one thread is -> unaffected : 1
one thread is -> reading : 1
thread is unaffected -> by : 1
is unaffected by -> whether : 1
unaffected by whether -> the : 1
by whether the -> other : 1
whether the other -> threads : 1
the other threads -> are : 1
other threads are -> reading : 1
threads are reading -> the : 1
are reading the -> same : 1
reading the same -> data : 1
the same data -> or : 1
same data or -> the : 1
data or the -> moment : 1
or the moment -> threads : 1
the moment threads -> start : 1
moment threads start -> modifying : 1
threads start modifying -> shared : 1
start modifying shared -> data : 1
modifying shared data -> is : 1
shared data is -> when : 1
data is when -> problems : 1
is when problems -> begin : 1
when problems begin -> to : 1
problems begin to -> if : 1
begin to if -> the : 1
to if the -> threads : 1
if the threads -> are : 1
the threads are -> accessing : 1
the threads are -> stack : 1
threads are accessing -> a : 1
are accessing a -> common : 1
accessing a common -> data : 1
a common data -> the : 1
common data the -> invariants : 1
data the invariants -> associated : 1
the invariants associated -> with : 1
invariants associated with -> the : 1
with the data -> structure : 1
the data structure -> are : 1
the data structure -> with : 1
the data structure -> permanently : 1
the data structure -> by : 1
the data structure -> to : 1
data structure are -> broken : 1
structure are broken -> if : 1
are broken if -> an : 1
broken if an -> update : 1
if an update -> is : 1
an update is -> in : 1
update is in -> this : 1
this the number -> of : 1
number of elements -> is : 1
of elements is -> stored : 1
elements is stored -> in : 1
is stored in -> the : 2
is stored in -> val : 1
stored in the -> data : 1
stored in the -> we : 1
stored in the -> the : 1
in the data -> which : 1
in the data -> flow : 1
the data which -> usually : 1
data which usually -> requires : 1
which usually requires -> the : 1
usually requires the -> modification : 1
requires the modification -> of : 1
the modification of -> more : 1
modification of more -> than : 2
of more than -> one : 2
than one consider -> the : 1
one consider the -> delete : 1
consider the delete -> operation : 1
the delete operation -> of : 1
delete operation of -> a : 1
operation of a -> tree : 1
of a tree -> or : 1
of a tree -> in : 1
a tree or -> a : 1
tree or a -> doubly : 1
or a doubly -> linked : 2
a doubly linked -> if : 1
a doubly linked -> because : 1
doubly linked if -> you : 1
linked if you -> do : 1
if you do -> anything : 1
you do anything -> special : 1
do anything special -> to : 1
anything special to -> ensure : 1
special to ensure -> if : 1
to ensure if -> one : 1
ensure if one -> thread : 1
if one thread -> is : 1
thread is reading -> the : 1
is reading the -> data : 1
reading the data -> while : 1
data while another -> is : 1
while another is -> removing : 1
another is removing -> a : 1
is removing a -> it : 1
removing a it -> is : 1
a it is -> quite : 1
a it is -> a : 1
a it is -> useful : 1
it is quite -> possible : 1
is quite possible -> for : 1
quite possible for -> the : 1
possible for the -> reading : 1
for the reading -> thread : 1
the reading thread -> to : 1
reading thread to -> see : 1
thread to see -> the : 1
to see the -> data : 1
to see the -> operations : 1
to see the -> accumulated : 1
to see the -> program : 1
to see the -> results : 3
to see the -> semantics : 1
to see the -> necessary : 1
see the data -> structure : 1
data structure with -> a : 1
structure with a -> partially : 1
with a partially -> removed : 1
a partially removed -> so : 1
a partially removed -> node : 1
partially removed so -> the : 1
removed so the -> invariant : 1
so the invariant -> is : 1
the invariant is -> this : 1
invariant is this -> might : 1
is this might -> end : 1
this might end -> up : 1
might end up -> corrupting : 1
end up corrupting -> the : 1
up corrupting the -> data : 1
corrupting the data -> structure : 1
data structure permanently -> and : 1
structure permanently and -> could : 1
permanently and could -> lead : 1
and could lead -> to : 2
lead to the -> program : 1
to the program -> invariant : 1
the program invariant -> is : 1
program invariant is -> a : 1
invariant is a -> set : 1
is a set -> of : 2
set of assertions -> that : 1
of assertions that -> must : 1
assertions that must -> always : 1
that must always -> be : 1
always be true -> during : 1
be true during -> the : 1
true during the -> execution : 1
execution of a -> program : 1
execution of a -> first : 1
of a program -> or : 1
of a program -> with : 1
of a program -> are : 1
a program or -> lifetime : 1
a program or -> process : 1
program or lifetime -> of : 1
or lifetime of -> an : 1
lifetime of an -> placing : 1
of an placing -> proper : 1
an placing proper -> assertion : 1
placing proper assertion -> within : 1
proper assertion within -> the : 1
assertion within the -> code : 1
within the code -> to : 1
code to see -> whether : 1
see whether invariants -> have : 1
whether invariants have -> been : 1
invariants have been -> violated : 1
have been violated -> will : 1
been violated will -> result : 1
violated will result -> in : 1
will result in -> robust : 1
will result in -> code : 1
result in robust -> this : 1
in robust this -> is : 1
robust this is -> a : 1
is a great -> way : 1
a great way -> to : 1
great way to -> document : 1
way to document -> software : 1
to document software -> as : 1
document software as -> well : 1
software as well -> as : 1
well as a -> good : 1
as a good -> mechanism : 1
a good mechanism -> to : 2
good mechanism to -> prevent : 1
good mechanism to -> implement : 1
mechanism to prevent -> regression : 1
to prevent regression -> more : 1
prevent regression more -> can : 1
regression more can -> be : 1
more can be -> read : 2
can be read -> about : 1
can be read -> on : 1
be read about -> this : 1
read about this -> in : 1
about this in -> the : 1
this in the -> following : 1
this in the -> which : 1
this in the -> case : 1
this in the -> next : 1
the following wikipedia -> often : 1
the following wikipedia -> dealing : 1
following wikipedia often -> leads : 1
wikipedia often leads -> to : 1
often leads to -> a : 1
leads to a -> situation : 1
leads to a -> scenario : 1
to a situation -> called : 1
a situation called -> which : 1
situation called which -> is : 1
called which is -> the : 1
most common cause -> of : 1
common cause of -> bugs : 1
cause of bugs -> in : 1
of bugs in -> concurrent : 1
bugs in concurrent -> in : 1
in concurrent in -> race : 1
concurrent in race -> condition : 1
in race condition -> means : 1
race condition means -> that : 1
race condition means -> a : 1
condition means that -> the : 1
that the threads -> race : 1
the threads race -> to : 1
threads race to -> perform : 1
race to perform -> their : 1
to perform their -> respective : 1
perform their respective -> the : 1
their respective the -> outcome : 1
respective the outcome -> depends : 1
the outcome depends -> on : 1
outcome depends on -> the : 1
depends on the -> relative : 1
depends on the -> platform : 1
depends on the -> result : 1
on the relative -> ordering : 1
the relative ordering -> of : 1
relative ordering of -> the : 1
ordering of the -> execution : 1
of the execution -> of : 1
execution of an -> operation : 1
of an operation -> in : 1
of an operation -> requires : 1
an operation in -> two : 1
operation in two -> or : 1
in two or -> more : 1
or more the -> term : 1
more the term -> race : 1
the term race -> condition : 1
term race condition -> means : 1
condition means a -> problematic : 1
means a problematic -> race : 1
a problematic race -> normal : 1
problematic race normal -> race : 1
race normal race -> conditions : 1
normal race conditions -> cause : 1
race conditions cause -> any : 1
conditions cause any -> problematic : 1
cause any problematic -> race : 1
any problematic race -> conditions : 1
problematic race conditions -> usually : 1
problematic race conditions -> can : 1
race conditions usually -> occur : 1
conditions usually occur -> where : 1
usually occur where -> the : 1
occur where the -> completion : 1
where the completion -> of : 1
completion of an -> operation : 1
an operation requires -> modification : 1
operation requires modification -> of : 1
requires modification of -> two : 1
requires modification of -> more : 1
modification of two -> or : 1
of two or -> more : 2
or more bits -> of : 1
more bits of -> such : 1
bits of such -> as : 1
of such as -> deletion : 1
of such as -> in : 1
such as deletion -> of : 1
as deletion of -> a : 1
deletion of a -> node : 1
of a node -> in : 1
of a node -> and : 1
a node in -> a : 1
node in a -> tree : 1
in a tree -> data : 1
a tree data -> structure : 1
tree data structure -> or : 1
data structure or -> a : 1
structure or a -> doubly : 1
doubly linked because -> the : 1
linked because the -> modification : 1
because the modification -> must : 1
the modification must -> access : 1
modification must access -> separate : 1
must access separate -> pieces : 1
access separate pieces -> of : 1
separate pieces of -> these : 1
pieces of these -> must : 1
of these must -> be : 1
these must be -> modified : 1
must be modified -> in : 1
be modified in -> separate : 1
modified in separate -> instructions : 1
in separate instructions -> when : 1
separate instructions when -> another : 1
instructions when another -> thread : 1
when another thread -> is : 1
another thread is -> trying : 1
thread is trying -> to : 1
is trying to -> access : 1
is trying to -> our : 1
trying to access -> the : 1
to access the -> data : 1
to access the -> value : 1
to access the -> rest : 1
access the data -> this : 1
access the data -> associated : 1
the data this -> occurs : 1
data this occurs -> when : 1
this occurs when -> half : 1
occurs when half -> of : 1
when half of -> the : 1
half of the -> previous : 1
of the previous -> modifications : 1
of the previous -> value : 1
of the previous -> program : 2
the previous modifications -> have : 1
previous modifications have -> been : 1
modifications have been -> conditions : 1
have been conditions -> are : 1
been conditions are -> often : 1
conditions are often -> very : 1
are often very -> hard : 1
often very hard -> to : 1
very hard to -> find : 1
hard to find -> and : 1
to find and -> hard : 1
find and hard -> to : 1
and hard to -> duplicate : 1
hard to duplicate -> because : 1
to duplicate because -> they : 1
duplicate because they -> occur : 1
because they occur -> in : 1
they occur in -> a : 1
occur in a -> very : 1
occur in a -> multithreaded : 1
in a very -> short : 1
a very short -> window : 1
very short window -> of : 1
short window of -> for : 1
window of for -> software : 1
of for software -> that : 1
for software that -> uses : 1
software that uses -> the : 1
that uses the -> major : 1
that uses the -> int : 1
that uses the -> operator : 1
uses the major -> complexity : 1
the major complexity -> of : 1
major complexity of -> implementation : 1
complexity of implementation -> comes : 1
of implementation comes -> from : 1
implementation comes from -> avoiding : 1
comes from avoiding -> problematic : 1
from avoiding problematic -> race : 1
avoiding problematic race -> are : 1
problematic race are -> many : 1
race are many -> ways : 1
are many ways -> to : 1
many ways to -> deal : 1
ways to deal -> with : 1
to deal with -> problematic : 1
deal with problematic -> race : 1
with problematic race -> the : 1
problematic race the -> common : 1
race the common -> and : 1
the common and -> simplest : 1
common and simplest -> option : 1
and simplest option -> is : 1
simplest option is -> to : 1
option is to -> use : 1
option is to -> alter : 1
is to use -> which : 1
is to use -> struct : 1
to use which -> are : 1
use which are -> protection : 1
which are protection -> this : 1
are protection this -> wraps : 1
protection this wraps -> the : 1
this wraps the -> data : 1
wraps the data -> structure : 1
data structure by -> using : 1
structure by using -> some : 1
by using some -> locking : 1
by using some -> simple : 1
using some locking -> mechanisms : 1
some locking mechanisms -> to : 1
locking mechanisms to -> prevent : 1
mechanisms to prevent -> the : 1
to prevent the -> access : 1
to prevent the -> invocation : 1
to prevent the -> data : 1
prevent the access -> of : 1
the access of -> other : 1
access of other -> threads : 1
of other threads -> during : 1
other threads during -> its : 1
threads during its -> we : 1
during its we -> will : 1
its we will -> discuss : 1
discuss the available -> synchronization : 1
the available synchronization -> primitives : 1
available synchronization primitives -> and : 1
synchronization primitives and -> their : 1
synchronization primitives and -> condition : 1
primitives and their -> uses : 1
and their uses -> in : 1
their uses in -> detail : 1
uses in detail -> in : 1
detail in this -> option : 1
detail in this -> particular : 1
in this option -> is : 1
this option is -> to : 1
is to alter -> the : 1
to alter the -> design : 1
alter the design -> of : 1
the design of -> your : 1
design of your -> data : 1
of your data -> structure : 1
your data structure -> and : 1
data structure and -> its : 1
data structure and -> create : 1
structure and its -> invariants : 1
and its invariants -> so : 1
its invariants so -> that : 1
invariants so that -> the : 1
so that the -> modification : 1
so that the -> function : 1
that the modification -> guarantees : 1
the modification guarantees -> the : 1
modification guarantees the -> sequential : 1
guarantees the sequential -> consistency : 1
the sequential consistency -> of : 1
sequential consistency of -> your : 1
sequential consistency of -> two : 1
consistency of your -> even : 1
of your even -> across : 1
your even across -> multiple : 1
even across multiple -> this : 1
across multiple this -> is : 1
multiple this is -> a : 1
is a difficult -> way : 1
a difficult way -> of : 1
difficult way of -> writing : 1
way of writing -> programs : 1
way of writing -> code : 1
of writing programs -> and : 1
writing programs and -> is : 1
programs and is -> commonly : 1
and is commonly -> referred : 1
is commonly referred -> to : 1
commonly referred to -> as : 1
referred to as -> programming : 1
referred to as -> in : 1
to as programming -> and : 1
as programming and -> the : 1
programming and the -> memory : 1
and the memory -> model : 1
the memory model -> will : 1
the memory model -> and : 1
the memory model -> consists : 1
the memory model -> is : 1
the memory model -> has : 1
memory model will -> be : 1
model will be -> covered : 1
covered in and -> programming : 1
programming in there -> are : 1
in there are -> other : 1
in there are -> six : 1
there are other -> mechanisms : 1
are other mechanisms -> such : 1
such as handling -> the : 1
as handling the -> updates : 1
handling the updates -> to : 1
the updates to -> a : 1
updates to a -> data : 1
to a data -> structure : 2
a data structure -> as : 1
a data structure -> using : 1
a data structure -> to : 2
a data structure -> called : 1
a data structure -> where : 1
a data structure -> and : 1
data structure as -> a : 1
structure as a -> as : 1
structure as a -> we : 1
as a as -> updates : 1
a as updates -> to : 1
as updates to -> databases : 1
updates to databases -> are : 1
to databases are -> done : 1
databases are done -> within : 1
are done within -> this : 1
done within this -> topic : 1
within this topic -> is : 1
is not in -> the : 1
not in the -> scope : 1
not in the -> minds : 1
not in the -> following : 1
in the scope -> of : 1
of this and -> therefore : 1
this and therefore -> it : 1
and therefore it -> be : 1
therefore it be -> consider : 1
it be consider -> the : 1
be consider the -> most : 1
consider the most -> basic : 1
the most basic -> mechanism : 1
most basic mechanism -> in : 1
basic mechanism in -> standard : 1
mechanism in standard -> for : 1
in standard for -> protecting : 1
standard for protecting -> shared : 1
for protecting shared -> which : 1
protecting shared which -> is : 1
shared which is -> mutex : 1
shared which is -> the : 1
which is mutex -> is : 1
is mutex is -> a : 1
mutex is a -> mechanism : 1
mutex is a -> waste : 1
a mechanism used -> in : 1
mechanism used in -> concurrency : 1
used in concurrency -> control : 1
in concurrency control -> to : 1
concurrency control to -> prevent : 1
control to prevent -> race : 1
to prevent race -> the : 1
prevent race the -> function : 1
race the function -> of : 1
the function of -> a : 2
the function of -> as : 1
the function of -> which : 1
the function of -> if : 1
the function of -> in : 1
the function of -> the : 1
of a mutex -> is : 1
of a mutex -> in : 1
a mutex is -> to : 1
a mutex is -> a : 1
mutex is to -> prevent : 1
is to prevent -> a : 1
to prevent a -> thread : 1
prevent a thread -> of : 1
a thread of -> execution : 1
of execution to -> enter : 1
execution to enter -> its : 1
to enter its -> at : 1
enter its at -> the : 1
its at the -> same : 1
same time another -> concurrent : 1
time another concurrent -> thread : 1
another concurrent thread -> enters : 1
concurrent thread enters -> its : 1
thread enters its -> own : 1
enters its own -> critical : 1
its own critical -> it : 1
own critical it -> is : 1
critical it is -> a : 1
is a lockable -> object : 1
a lockable object -> designed : 1
lockable object designed -> to : 1
object designed to -> signal : 1
designed to signal -> when : 1
to signal when -> the : 1
signal when the -> critical : 1
when the critical -> sections : 1
the critical sections -> of : 1
critical sections of -> code : 1
sections of code -> need : 1
of code need -> exclusive : 1
code need exclusive -> thereby : 1
need exclusive thereby -> restricting : 1
exclusive thereby restricting -> other : 1
thereby restricting other -> concurrent : 1
restricting other concurrent -> threads : 1
other concurrent threads -> with : 1
concurrent threads with -> the : 1
threads with the -> same : 1
with the same -> protection : 1
with the same -> function : 1
with the same -> arguments : 1
the same protection -> in : 1
same protection in -> execution : 1
protection in execution -> as : 1
in execution as -> well : 1
execution as well -> as : 1
well as memory -> the : 1
as memory the -> standard : 1
memory the standard -> introduced : 1
the standard introduced -> class : 1
standard introduced class -> into : 1
introduced class into -> the : 1
class into the -> standard : 1
library to achieve -> data : 1
library to achieve -> parallelism : 1
to achieve data -> protection : 1
achieve data protection -> across : 1
data protection across -> concurrent : 1
protection across concurrent -> class : 1
across concurrent class -> consist : 1
concurrent class consist -> of : 1
class consist of -> the : 1
consist of the -> and : 1
the and functions -> to : 1
and functions to -> create : 1
and functions to -> enable : 1
functions to create -> a : 1
functions to create -> critical : 1
functions to create -> functions : 1
create a critical -> section : 1
a critical section -> in : 1
a critical section -> of : 1
a critical section -> using : 1
critical section in -> one : 1
critical section in -> discuss : 1
section in one -> thing : 1
in one thing -> to : 1
one thing to -> keep : 1
thing to keep -> in : 1
to keep in -> mind : 1
in mind while -> using : 1
mind while using -> the : 1
while using the -> member : 1
using the member -> functions : 1
using the member -> object : 1
the member functions -> to : 1
the member functions -> and : 1
member functions to -> create : 1
to create critical -> sections : 1
create critical sections -> is : 1
critical sections is -> that : 1
sections is that -> you : 1
is that you -> should : 1
that you should -> never : 1
you should never -> skip : 1
should never skip -> an : 1
never skip an -> unlock : 1
skip an unlock -> function : 1
an unlock function -> associated : 1
unlock function associated -> with : 1
function associated with -> a : 1
function associated with -> signals : 2
function associated with -> the : 1
with a lock -> function : 1
a lock function -> to : 1
lock function to -> mark : 1
function to mark -> the : 1
to mark the -> critical : 1
mark the critical -> section : 1
the critical section -> in : 1
the critical section -> is : 1
section in discuss -> the : 1
in discuss the -> same : 1
discuss the same -> code : 1
the same code -> we : 1
same code we -> used : 1
code we used -> for : 1
we used for -> discussing : 1
used for discussing -> lambdas : 1
for discussing lambdas -> with : 1
discussing lambdas with -> we : 1
lambdas with we -> observed : 1
with we observed -> that : 1
we observed that -> the : 1
observed that the -> output : 1
that the output -> of : 1
that the output -> is : 2
the output of -> the : 8
the output of -> this : 3
the output of -> one : 2
the program was -> scrambled : 1
program was scrambled -> due : 1
was scrambled due -> to : 1
scrambled due to -> a : 1
due to a -> race : 1
to a race -> condition : 1
a race condition -> with : 1
race condition with -> a : 1
condition with a -> common : 1
with a common -> and : 1
with a common -> event : 1
a common and -> that : 1
common and that -> code : 1
and that code -> is : 1
that code is -> now : 1
code is now -> being : 1
is now being -> rewritten : 1
is now being -> using : 1
now being rewritten -> using : 1
being rewritten using -> to : 1
rewritten using to -> print : 1
using to print -> the : 1
to print the -> thread : 1
to print the -> the : 1
to print the -> contents : 2
to print the -> json : 1
print the thread -> int : 1
the thread int -> for : 1
thread int for -> i : 1
int for i -> i : 2
i i output -> for : 1
i output for -> the : 1
thread thread the -> preceding : 1
thread the preceding -> the : 1
preceding the mutex -> is : 1
preceding the mutex -> that : 1
the mutex is -> used : 1
the mutex is -> locked : 1
the mutex is -> protected : 1
mutex is used -> to : 1
is used to -> protect : 1
is used to -> retrieve : 1
is used to -> quickly : 1
is used to -> invoke : 1
used to protect -> the : 1
to protect the -> shared : 1
to protect the -> write : 1
to protect the -> the : 1
protect the shared -> which : 1
the shared which -> is : 1
is the and -> cascaded : 1
the and cascaded -> unlike : 1
and cascaded unlike -> the : 1
cascaded unlike the -> older : 1
unlike the older -> the : 1
the older the -> addition : 1
older the addition -> of : 1
the addition of -> a : 1
addition of a -> mutex : 1
a mutex in -> the : 1
mutex in the -> code : 1
mutex in the -> constructor : 1
mutex in the -> this : 1
the code now -> avoids : 1
code now avoids -> the : 1
now avoids the -> scrambled : 1
avoids the scrambled -> but : 1
the scrambled but -> it : 1
scrambled but it -> will : 1
but it will -> appear : 1
it will appear -> in : 1
will appear in -> a : 1
appear in a -> random : 1
in a random -> the : 1
a random the -> use : 1
random the use -> of : 1
use of and -> functions : 1
use of and -> range : 1
of and functions -> in : 1
and functions in -> class : 1
functions in class -> guarantees : 1
in class guarantees -> the : 1
class guarantees the -> output : 1
guarantees the output -> is : 1
the output is -> not : 1
the output is -> assigned : 1
the output is -> synchronized : 1
the output is -> well : 1
the output is -> printed : 1
output is not -> the : 1
not the practice -> to : 1
the practice to -> call : 1
practice to call -> member : 1
to call member -> functions : 1
call member functions -> directly : 1
member functions directly -> is : 1
functions directly is -> not : 1
directly is not -> because : 1
is not because -> you : 1
not because you -> need : 1
because you need -> to : 2
need to call -> unlock : 1
need to call -> the : 1
need to call -> wait : 1
to call unlock -> on : 1
call unlock on -> every : 1
unlock on every -> code : 1
on every code -> path : 1
every code path -> in : 1
code path in -> the : 1
path in the -> including : 1
path in the -> and : 1
in the including -> the : 1
the including the -> exception : 1
the including the -> custom : 1
including the exception -> scenarios : 1
the exception scenarios -> as : 1
exception scenarios as -> standard : 1
scenarios as standard -> introduced : 1
as standard introduced -> a : 1
standard introduced a -> new : 1
introduced a new -> template : 1
introduced a new -> function : 1
a new template -> which : 1
new template which -> implemented : 1
template which implemented -> the : 1
which implemented the -> acquisition : 1
implemented the acquisition -> is : 1
the acquisition is -> idiom : 1
acquisition is idiom -> for : 1
is idiom for -> a : 1
idiom for a -> it : 1
for a it -> locks : 1
a it locks -> the : 1
it locks the -> supplied : 1
locks the supplied -> mutex : 1
the supplied mutex -> in : 1
supplied mutex in -> the : 1
the constructor and -> unlocks : 1
the constructor and -> destructor : 2
constructor and unlocks -> it : 1
and unlocks it -> in : 1
unlocks it in -> the : 1
it in the -> the : 1
it in the -> context : 1
it in the -> visitor : 1
the the implementation -> of : 1
implementation of this -> template : 1
of this template -> class : 1
of this template -> see : 1
this template class -> is : 1
template class is -> available : 1
class is available -> in : 1
is available in -> the : 3
is available in -> is : 1
is available in -> observable : 1
in the standard -> header : 1
in the standard -> library : 4
in the standard -> starting : 1
in the standard -> unique : 1
in the standard -> operations : 1
in the standard -> this : 1
in the standard -> while : 1
in the standard -> they : 1
standard header the -> previous : 1
header the previous -> example : 1
previous example can -> be : 1
example can be -> rewritten : 1
can be rewritten -> using : 1
be rewritten using -> as : 1
rewritten using as -> int : 1
using as int -> for : 1
as int for -> i : 1
i i the -> preceding : 1
i the preceding -> the : 1
the mutex that -> protects : 1
mutex that protects -> the : 1
that protects the -> critical : 1
protects the critical -> section : 1
critical section is -> at : 1
section is at -> global : 1
is at global -> scope : 1
at global scope -> and : 1
global scope and -> the : 1
scope and the -> object : 1
and the object -> is : 2
and the object -> a : 1
and the object -> properties : 1
object is local -> to : 1
is local to -> the : 1
local to the -> lambda : 1
to the lambda -> each : 1
the lambda each -> time : 1
lambda each time -> thread : 1
each time thread -> execution : 1
time thread execution -> this : 1
thread execution this -> as : 1
execution this as -> soon : 1
this as soon -> as : 2
as soon as -> the : 4
as soon as -> any : 1
as soon as -> becomes : 1
soon as the -> object : 1
soon as the -> thread : 1
soon as the -> data : 1
soon as the -> push : 1
as the object -> is : 1
object is the -> mutex : 1
object is the -> copy : 1
is the mutex -> acquires : 1
the mutex acquires -> the : 1
mutex acquires the -> it : 1
acquires the it -> unlocks : 1
the it unlocks -> the : 1
it unlocks the -> mutex : 1
unlocks the mutex -> with : 1
unlocks the mutex -> and : 1
the mutex with -> the : 1
mutex with the -> call : 1
mutex with the -> raii : 1
with the call -> to : 1
call to destructor -> when : 1
to destructor when -> the : 1
destructor when the -> lambda : 1
when the lambda -> execution : 1
the lambda execution -> is : 1
lambda execution is -> is : 1
execution is is -> a : 1
is is a -> idiom : 1
is is a -> very : 1
is a idiom -> where : 1
a idiom where -> the : 1
idiom where the -> lifetime : 1
where the lifetime -> of : 1
the lifetime of -> entities : 1
lifetime of entities -> such : 1
of entities such -> as : 1
entities such as -> socket : 1
such as socket -> dynamically : 1
as socket dynamically -> allocated : 1
socket dynamically allocated -> memory : 1
dynamically allocated memory -> on : 1
allocated memory on -> the : 1
memory on the -> and : 1
on the and -> so : 1
on the and -> these : 1
on the and -> the : 1
on are bounded -> to : 1
are bounded to -> the : 1
bounded to the -> life : 1
to the life -> cycle : 1
the life cycle -> of : 1
life cycle of -> the : 1
cycle of the -> object : 1
the object holding -> you : 1
object holding you -> can : 1
holding you can -> read : 1
you can read -> more : 2
can read more -> about : 2
read more about -> raii : 1
read more about -> service : 1
more about raii -> at : 1
about raii at -> the : 1
raii at the -> following : 1
at the following -> wikipedia : 1
at the following -> program : 1
at the following -> flatten : 1
following wikipedia dealing -> with : 1
wikipedia dealing with -> the : 1
dealing with the -> biggest : 1
dealing with the -> prerequisites : 1
with the biggest -> problem : 1
the biggest problem -> that : 1
biggest problem that -> can : 1
problem that can -> arise : 1
that can arise -> is : 1
can arise is -> a : 1
arise is a -> to : 1
a to understand -> what : 1
to understand what -> deadlock : 1
understand what deadlock -> just : 1
what deadlock just -> imagine : 1
deadlock just imagine -> an : 1
just imagine an -> for : 1
imagine an for -> an : 1
an for an -> ipod : 1
for an ipod -> to : 1
an ipod to -> achieve : 1
ipod to achieve -> its : 1
to achieve its -> it : 1
achieve its it -> requires : 1
its it requires -> both : 1
it requires both -> an : 1
requires both an -> ipod : 1
both an ipod -> as : 1
an ipod as -> well : 1
ipod as well -> as : 1
well as an -> if : 1
as an if -> two : 1
an if two -> siblings : 1
if two siblings -> share : 1
two siblings share -> one : 1
siblings share one -> there : 1
share one there -> are : 1
one there are -> situations : 1
there are situations -> where : 1
are situations where -> both : 1
situations where both -> want : 1
where both want -> to : 1
both want to -> listen : 1
want to listen -> to : 1
to listen to -> music : 1
listen to music -> at : 1
to music at -> the : 1
music at the -> same : 1
the same imagine -> one : 1
same imagine one -> person : 1
imagine one person -> got : 1
one person got -> their : 1
person got their -> hands : 1
got their hands -> on : 1
their hands on -> the : 1
hands on the -> ipod : 1
on the ipod -> and : 1
the ipod and -> the : 1
ipod and the -> other : 1
and the other -> got : 1
the other got -> the : 1
other got the -> and : 1
got the and -> neither : 1
the and neither -> of : 1
and neither of -> them : 1
neither of them -> is : 1
of them is -> willing : 1
them is willing -> to : 1
is willing to -> share : 1
willing to share -> the : 1
to share the -> item : 1
share the item -> they : 1
the item they -> now : 1
item they now -> they : 1
they now they -> are : 1
now they are -> unless : 1
they are unless -> one : 1
are unless one -> of : 1
unless one of -> them : 1
one of them -> tries : 1
of them tries -> to : 1
them tries to -> be : 1
tries to be -> nice : 1
to be nice -> and : 1
be nice and -> lets : 1
nice and lets -> the : 1
and lets the -> other : 1
lets the other -> person : 1
the other person -> listen : 1
other person listen -> to : 1
person listen to -> the : 1
listen to the -> siblings : 1
listen to the -> event : 1
to the siblings -> are : 1
the siblings are -> arguing : 1
siblings are arguing -> over : 1
are arguing over -> an : 1
arguing over an -> ipod : 1
over an ipod -> and : 1
an ipod and -> an : 1
ipod and an -> but : 1
and an but -> coming : 1
an but coming -> back : 1
but coming back -> to : 1
coming back to -> our : 1
to our threads -> argue : 1
our threads argue -> over : 1
threads argue over -> the : 1
argue over the -> locks : 1
over the locks -> on : 1
the locks on -> each : 1
locks on each -> thread : 1
on each thread -> has : 1
on each thread -> the : 1
each thread has -> one : 1
thread has one -> mutex : 1
has one mutex -> and : 1
one mutex and -> is : 1
mutex and is -> waiting : 1
and is waiting -> for : 1
for the no -> mutex : 1
the no mutex -> can : 1
no mutex can -> proceed : 1
mutex can proceed -> because : 1
can proceed because -> each : 1
proceed because each -> thread : 1
because each thread -> is : 1
each thread is -> waiting : 1
each thread is -> intended : 1
each thread is -> clearly : 1
thread is waiting -> for : 1
for the other -> thread : 1
the other thread -> to : 1
other thread to -> release : 1
thread to release -> its : 1
to release its -> this : 1
release its this -> scenario : 1
its this scenario -> is : 1
this scenario is -> called : 1
scenario is called -> deadlock : 1
is called deadlock -> is : 1
called deadlock is -> sometimes : 1
deadlock is sometimes -> quite : 1
is sometimes quite -> straightforward : 1
sometimes quite straightforward -> because : 1
quite straightforward because -> different : 1
straightforward because different -> mutexes : 1
because different mutexes -> serve : 1
different mutexes serve -> different : 1
mutexes serve different -> but : 1
serve different but -> there : 1
different but there -> are : 1
but there are -> instances : 1
there are instances -> where : 1
are instances where -> handling : 1
instances where handling -> such : 1
where handling such -> situations : 1
handling such situations -> is : 1
such situations is -> not : 1
situations is not -> that : 1
is not that -> the : 1
not that the -> best : 1
that the best -> advice : 1
the best advice -> i : 1
best advice i -> can : 1
advice i can -> give : 1
i can give -> you : 1
can give you -> to : 1
give you to -> avoid : 1
you to avoid -> deadlock : 1
you to avoid -> deadlocks : 1
you to avoid -> the : 1
to avoid deadlock -> is : 1
avoid deadlock is -> to : 1
deadlock is to -> always : 1
is to always -> lock : 1
to always lock -> multiple : 1
always lock multiple -> mutexes : 1
lock multiple mutexes -> in : 1
multiple mutexes in -> the : 1
mutexes in the -> same : 1
in the same -> you : 1
in the same -> as : 1
in the same -> way : 1
in the same -> the : 1
in the same -> hence : 1
in the same -> there : 1
in the same -> it : 1
the same you -> will : 1
same you will -> never : 1
you will never -> get : 1
will never get -> deadlock : 1
never get deadlock -> an : 1
get deadlock an -> example : 1
deadlock an example -> of : 1
an example of -> a : 1
example of a -> program : 1
example of a -> reactive : 1
example of a -> system : 1
a program with -> two : 1
program with two -> each : 1
with two each -> thread : 1
two each thread -> is : 1
thread is intended -> to : 1
is intended to -> print : 1
is intended to -> use : 1
is intended to -> group : 1
intended to print -> odd : 1
to print odd -> numbers : 2
to print odd -> and : 1
print odd numbers -> and : 1
print odd numbers -> void : 1
odd numbers and -> even : 1
numbers and even -> numbers : 1
and even numbers -> since : 1
and even numbers -> using : 1
even numbers since -> the : 1
numbers since the -> intentions : 1
since the intentions -> of : 1
the intentions of -> the : 1
intentions of the -> two : 1
of the two -> threads : 1
the two threads -> are : 1
the two threads -> is : 1
two threads are -> the : 1
threads are the -> program : 1
are the program -> uses : 1
the program uses -> two : 1
program uses two -> mutexes : 1
uses two mutexes -> to : 1
two mutexes to -> control : 1
mutexes to control -> each : 1
to control each -> the : 1
control each the -> shared : 1
each the shared -> resource : 1
the shared resource -> between : 1
shared resource between -> the : 1
resource between the -> two : 1
between the two -> threads : 1
two threads is -> look : 1
two threads is -> replaced : 1
threads is look -> at : 1
is look at -> the : 1
following program with -> a : 1
program with a -> deadlock : 1
with a deadlock -> global : 1
a deadlock global -> mutexes : 1
deadlock global mutexes -> function : 1
global mutexes function -> to : 1
mutexes function to -> print : 1
function to print -> even : 1
function to print -> all : 1
function to print -> odd : 1
to print even -> numbers : 1
print even numbers -> void : 1
even numbers void -> for : 1
numbers void for -> i : 2
i i function -> is : 1
i function is -> defined : 1
function is defined -> to : 1
is defined to -> print : 1
defined to print -> all : 1
to print all -> the : 2
print all the -> positive : 2
all the positive -> even : 1
all the positive -> odd : 1
the positive even -> numbers : 1
positive even numbers -> into : 1
even numbers into -> the : 1
numbers into the -> standard : 1
the standard console -> which : 1
standard console which -> are : 1
console which are -> less : 1
which are less -> than : 1
are less than -> the : 1
than the let -> us : 1
us define function -> to : 1
define function to -> print : 1
the positive odd -> numbers : 1
positive odd numbers -> less : 1
odd numbers less -> than : 1
numbers less than -> as : 1
less than as -> function : 1
than as function -> to : 1
as function to -> print : 1
odd numbers void -> for : 1
i i write -> the : 1
i write the -> function : 1
write the function -> to : 1
the function to -> spawn : 1
the function to -> clear : 1
the function to -> trigger : 1
the function to -> be : 1
the function to -> call : 1
function to spawn -> two : 1
to spawn two -> independent : 1
spawn two independent -> threads : 1
two independent threads -> to : 1
independent threads to -> print : 1
threads to print -> odd : 1
print odd and -> even : 1
odd and even -> numbers : 1
even numbers using -> the : 1
numbers using the -> previously : 1
using the previously -> defined : 1
the previously defined -> functions : 1
previously defined functions -> as : 1
defined functions as -> the : 1
functions as the -> thread : 1
the thread functions -> for : 1
thread functions for -> each : 1
functions for each -> auto : 1
for each auto -> max : 1
each auto max -> if : 1
auto max if -> if : 1
max if if -> this : 1
if if this -> is : 1
if this is -> protected : 1
this is protected -> with : 1
is protected with -> two : 1
is protected with -> instead : 1
protected with two -> and : 1
with two and -> which : 1
two and which -> perform : 1
and which perform -> locking : 1
which perform locking -> in : 1
perform locking in -> a : 1
locking in a -> different : 1
in a different -> with : 1
in a different -> and : 1
a different with -> this : 1
different with this -> we : 1
with this we -> always : 1
with this we -> are : 1
this we always -> ends : 1
we always ends -> up : 1
always ends up -> in : 1
ends up in -> since : 1
up in since -> each : 1
in since each -> thread : 1
since each thread -> is : 1
thread is clearly -> waiting : 1
is clearly waiting -> for : 1
clearly waiting for -> the : 1
for the mutex -> locked : 1
the mutex locked -> by : 1
mutex locked by -> the : 1
locked by the -> other : 1
by the other -> running : 1
the other running -> this : 1
other running this -> code : 1
running this code -> would : 1
this code would -> result : 1
code would result -> in : 1
would result in -> a : 1
result in a -> as : 1
in a as -> mentioned : 1
a as mentioned -> deadlock : 1
as mentioned deadlock -> can : 1
mentioned deadlock can -> be : 1
deadlock can be -> avoided : 1
can be avoided -> by : 2
be avoided by -> locking : 1
be avoided by -> enforced : 1
be avoided by -> atomic : 1
avoided by locking -> them : 1
by locking them -> in : 1
locking them in -> the : 1
them in the -> same : 1
them in the -> dialog : 1
the same as -> for : 2
the same as -> the : 1
same as for -> i : 1
same as for -> except : 1
as for i -> i : 1
i void for -> i : 2
i i this -> code : 1
i i this -> as : 1
i this code -> is : 1
this code is -> clearly : 1
this code is -> as : 1
code is clearly -> not : 1
is clearly not -> you : 1
clearly not you -> already : 1
not you already -> know : 1
you already know -> that : 1
already know that -> using : 1
already know that -> mutexes : 1
know that using -> a : 1
that using a -> mutex : 1
using a mutex -> with : 1
a mutex with -> the : 1
with the raii -> idiom : 1
the raii idiom -> makes : 1
the raii idiom -> to : 1
raii idiom makes -> the : 1
idiom makes the -> code : 1
makes the code -> cleaner : 1
the code cleaner -> and : 1
code cleaner and -> but : 1
cleaner and but -> to : 1
and but to -> ensure : 1
but to ensure -> the : 1
ensure the order -> of : 1
the order of -> the : 1
the order of -> for : 1
the order of -> content : 1
order of the -> standard : 1
library has introduced -> a : 1
has introduced a -> new : 1
new function that -> can : 1
function that can -> lock : 1
that can lock -> two : 1
can lock two -> or : 1
lock two or -> more : 1
or more mutexes -> in : 1
or more mutexes -> at : 1
more mutexes in -> one : 1
mutexes in one -> go : 1
in one go -> without : 1
in one go -> for : 1
one go without -> deadlock : 1
go without deadlock -> the : 1
without deadlock the -> following : 1
deadlock the following -> example : 1
how to use -> this : 1
how to use -> them : 1
how to use -> futures : 1
how to use -> and : 1
how to use -> the : 2
how to use -> arrays : 1
to use this -> for : 1
use this for -> our : 1
this for our -> previous : 1
for our previous -> for : 1
our previous for -> i : 1
previous for i -> i : 1
i this as -> soon : 1
the thread execution -> enters : 1
thread execution enters -> the : 1
execution enters the -> the : 1
enters the the -> call : 1
enters the the -> mutex : 1
call to locks -> the : 1
to locks the -> two : 1
locks the two -> two : 1
the two two -> instances : 1
two two instances -> are : 1
two instances are -> constructed : 1
instances are constructed -> for : 1
are constructed for -> each : 1
constructed for each -> the : 1
for each the -> parameter : 1
for each the -> order : 1
each the parameter -> is : 1
the parameter is -> supplied : 1
parameter is supplied -> in : 1
is supplied in -> addition : 1
supplied in addition -> to : 1
in addition to -> the : 1
in addition to -> as : 1
addition to the -> mutex : 1
addition to the -> constructor : 1
to the mutex -> instance : 1
to the mutex -> can : 1
the mutex instance -> to : 1
mutex instance to -> to : 1
instance to to -> indicate : 1
to to indicate -> that : 1
to indicate that -> the : 3
indicate that the -> mutexes : 1
indicate that the -> operation : 1
indicate that the -> value : 1
that the mutexes -> are : 1
the mutexes are -> already : 1
mutexes are already -> and : 1
are already and -> they : 1
already and they -> should : 1
and they should -> just : 1
they should just -> adopt : 1
should just adopt -> the : 1
just adopt the -> ownership : 1
adopt the ownership -> of : 1
of the existing -> lock : 1
the existing lock -> on : 1
existing lock on -> the : 1
lock on the -> mutex : 1
on the mutex -> rather : 1
the mutex rather -> than : 1
mutex rather than -> attempt : 1
rather than attempt -> to : 1
than attempt to -> lock : 1
attempt to lock -> the : 1
to lock the -> mutex : 1
lock the mutex -> in : 1
the mutex in -> the : 1
the mutex in -> order : 1
in the this -> guarantees : 1
in the this -> dialog : 1
in the this -> process : 1
in the this -> means : 1
this guarantees safe -> even : 1
guarantees safe even -> in : 1
safe even in -> exceptional : 1
even in exceptional -> can : 1
in exceptional can -> help : 1
exceptional can help -> you : 1
can help you -> to : 1
to avoid deadlocks -> in : 1
avoid deadlocks in -> cases : 1
deadlocks in cases -> where : 1
in cases where -> the : 1
cases where the -> program : 1
where the program -> demands : 1
the program demands -> the : 1
program demands the -> locking : 1
demands the locking -> of : 1
the locking of -> two : 1
locking of two -> or : 1
more mutexes at -> the : 1
mutexes at the -> same : 1
the same it -> help : 1
the same it -> will : 1
same it help -> if : 1
it help if -> they : 1
help if they -> are : 1
if they are -> acquired : 1
if they are -> if : 1
if they are -> in : 1
they are acquired -> deadlocks : 1
are acquired deadlocks -> are : 1
acquired deadlocks are -> one : 1
deadlocks are one -> of : 1
are one of -> the : 1
of the hardest -> problems : 1
the hardest problems -> that : 1
hardest problems that -> can : 1
problems that can -> occur : 1
that can occur -> in : 1
can occur in -> a : 1
in a multithreaded -> it : 1
a multithreaded it -> ultimately : 1
multithreaded it ultimately -> relies : 1
it ultimately relies -> on : 1
ultimately relies on -> the : 1
relies on the -> discipline : 1
relies on the -> parallel : 1
on the discipline -> of : 1
the discipline of -> a : 1
discipline of a -> programmer : 1
a programmer to -> not : 1
a programmer to -> incorporate : 1
programmer to not -> get : 1
to not get -> into : 1
not get into -> any : 1
get into any -> deadlock : 1
into any deadlock -> with : 1
any deadlock with -> to : 1
deadlock with to -> provides : 1
with to provides -> a : 1
to provides a -> bit : 1
provides a bit -> more : 1
a bit more -> flexibility : 1
a bit more -> fully : 1
a bit more -> attempting : 1
bit more flexibility -> in : 1
more flexibility in -> instance : 1
flexibility in instance -> always : 1
in instance always -> own : 1
instance always own -> a : 1
always own a -> mutex : 1
own a mutex -> associated : 1
a mutex associated -> with : 1
mutex associated with -> you : 1
associated with you -> can : 1
with you can -> pass : 1
you can pass -> as : 1
can pass as -> a : 1
pass as a -> second : 1
as a second -> argument : 2
a second argument -> to : 2
second argument to -> the : 3
to the constructor -> to : 1
to the constructor -> and : 1
the constructor to -> manage : 1
constructor to manage -> a : 1
to manage a -> lock : 1
manage a lock -> on : 1
a lock on -> a : 1
lock on a -> mutex : 1
on a mutex -> similar : 1
a mutex similar -> to : 1
mutex similar to -> the : 1
the mutex can -> remain : 1
mutex can remain -> unlocked : 1
can remain unlocked -> during : 1
remain unlocked during -> construction : 1
unlocked during construction -> by : 1
during construction by -> passing : 1
construction by passing -> as : 1
by passing as -> a : 1
by passing as -> the : 1
passing as a -> second : 1
to the later -> in : 1
the later in -> the : 1
later in the -> a : 1
in the a -> lock : 1
in the a -> string : 1
the a lock -> can : 1
a lock can -> be : 1
lock can be -> acquired : 1
can be acquired -> by : 1
be acquired by -> calling : 1
acquired by calling -> on : 1
by calling on -> the : 1
calling on the -> same : 1
same but the -> flexibility : 1
but the flexibility -> available : 1
the flexibility available -> comes : 1
flexibility available comes -> with : 1
available comes with -> a : 1
comes with a -> it : 1
with a it -> is : 1
is a bit -> slower : 1
is a bit -> but : 1
is a bit -> difficult : 1
a bit slower -> than : 1
bit slower than -> in : 1
slower than in -> regards : 1
than in regards -> to : 1
in regards to -> storing : 1
regards to storing -> this : 1
to storing this -> extra : 1
storing this extra -> information : 1
this extra information -> and : 1
extra information and -> is : 1
information and is -> in : 1
and is in -> need : 1
is in need -> of : 1
in need of -> an : 1
need of an -> it : 1
of an it -> is : 1
an it is -> recommended : 1
it is recommended -> to : 1
is recommended to -> use : 1
recommended to use -> unless : 1
to use unless -> there : 1
use unless there -> is : 1
unless there is -> a : 1
is a real -> need : 1
a real need -> for : 1
real need for -> the : 1
need for the -> flexibility : 1
for the flexibility -> that : 1
the flexibility that -> interesting : 1
flexibility that interesting -> feature : 1
that interesting feature -> about : 1
interesting feature about -> is : 1
feature about is -> its : 1
about is its -> ability : 1
ability to transfer -> since : 1
to transfer since -> must : 1
transfer since must -> own : 1
since must own -> its : 1
must own its -> associated : 1
own its associated -> this : 1
its associated this -> results : 1
associated this results -> in : 1
this results in -> the : 1
results in the -> ownership : 1
results in the -> this : 1
in the ownership -> transfer : 1
the ownership transfer -> of : 1
ownership transfer of -> similar : 1
transfer of similar -> to : 1
of similar to -> the : 1
to the class -> is : 1
to the class -> handles : 1
the class is -> also : 1
the class is -> such : 1
the class is -> derived : 1
the class is -> supposed : 1
class is also -> a : 1
is also a -> move : 1
is also a -> interesting : 1
also a move -> only : 1
a move only -> all : 1
move only all -> of : 1
only all of -> the : 1
the move semantic -> language : 1
move semantic language -> nuances : 1
semantic language nuances -> and : 1
language nuances and -> rvalue : 1
nuances and rvalue -> reference : 1
and rvalue reference -> handling : 1
rvalue reference handling -> available : 1
reference handling available -> in : 1
handling available in -> the : 1
standard library applies -> to : 1
library applies to -> as : 1
applies to as -> availability : 1
to as availability -> of : 1
as availability of -> member : 1
availability of member -> functions : 1
of member functions -> such : 1
member functions such -> as : 1
functions such as -> and : 2
as and similar -> to : 1
and similar to -> increases : 1
and similar to -> the : 1
similar to increases -> the : 1
to increases the -> flexibility : 1
increases the flexibility -> of : 1
the flexibility of -> its : 1
the flexibility of -> as : 1
the flexibility of -> the : 1
flexibility of its -> use : 1
of its use -> in : 1
its use in -> code : 1
use in code -> compared : 1
in code compared -> the : 1
code compared the -> ability : 1
compared the ability -> to : 1
the ability to -> release : 1
the ability to -> access : 1
the ability to -> subscribe : 1
the ability to -> communicate : 1
ability to release -> the : 1
to release the -> lock : 1
release the lock -> before : 1
the lock before -> an : 1
lock before an -> instance : 1
before an instance -> is : 1
an instance is -> meaning : 1
instance is meaning -> that : 1
is meaning that -> you : 1
meaning that you -> can : 1
that you can -> optionally : 1
that you can -> use : 1
that you can -> actually : 1
that you can -> handcode : 1
that you can -> loans : 1
you can optionally -> release : 1
can optionally release -> it : 1
optionally release it -> anywhere : 1
release it anywhere -> in : 1
it anywhere in -> the : 1
anywhere in the -> code : 1
the code if -> obvious : 1
code if obvious -> that : 1
if obvious that -> the : 1
obvious that the -> lock : 1
that the lock -> is : 1
the lock is -> no : 1
the lock is -> marking : 1
lock is no -> longer : 1
no longer holding -> down : 1
longer holding down -> the : 1
holding down the -> lock : 1
down the lock -> unnecessarily : 1
the lock unnecessarily -> can : 1
lock unnecessarily can -> drop : 1
unnecessarily can drop -> the : 1
can drop the -> performance : 1
drop the performance -> of : 1
the performance of -> the : 3
performance of the -> application : 1
performance of the -> in : 1
performance of the -> code : 1
of the application -> since : 1
of the application -> dialog : 1
of the application -> the : 1
of the application -> window : 2
of the application -> gof : 1
the application since -> the : 1
application since the -> threads : 1
since the threads -> waiting : 1
the threads waiting -> for : 1
threads waiting for -> locks : 1
waiting for locks -> are : 1
for locks are -> prevented : 1
locks are prevented -> from : 1
are prevented from -> executing : 1
prevented from executing -> for : 1
from executing for -> longer : 1
executing for longer -> than : 1
for longer than -> is : 1
longer than is -> is : 1
than is is -> a : 1
is a very -> handy : 1
is a very -> simple : 1
a very handy -> feature : 1
very handy feature -> introduced : 1
handy feature introduced -> by : 1
feature introduced by -> the : 1
the standard which -> supports : 1
standard which supports -> raii : 1
which supports raii -> and : 1
supports raii and -> it : 1
raii and it -> can : 1
and it can -> effectively : 1
and it can -> be : 1
and it can -> pass : 1
it can effectively -> minimize : 1
can effectively minimize -> the : 1
effectively minimize the -> size : 1
minimize the size -> of : 1
the size of -> a : 1
the size of -> the : 2
size of a -> critical : 1
of a critical -> section : 2
critical section of -> the : 1
section of the -> applicable : 1
section of the -> class : 1
section of the -> header : 1
of the applicable -> data : 1
of the applicable -> patterns : 1
the applicable data -> result : 1
applicable data result -> the : 1
data result the -> preceding : 1
result the preceding -> you : 1
preceding you can -> see : 1
you can see -> the : 1
can see the -> locking : 1
can see the -> declarations : 1
can see the -> value : 1
see the locking -> achieved : 1
the locking achieved -> by : 1
locking achieved by -> leveraging : 1
achieved by leveraging -> the : 1
leveraging the flexibility -> of : 1
flexibility of as -> the : 1
of as the -> function : 1
as the function -> starts : 1
as the function -> returns : 1
the function starts -> its : 1
function starts its -> an : 1
starts its an -> object : 1
its an object -> is : 1
an object is -> constructed : 1
an object is -> then : 1
object is constructed -> with : 1
is constructed with -> in : 1
constructed with in -> an : 1
with in an -> unlocked : 1
in an unlocked -> data : 1
an unlocked data -> is : 1
unlocked data is -> prepared : 1
data is prepared -> with : 1
is prepared with -> which : 1
prepared with which -> require : 1
with which require -> exclusive : 1
which require exclusive -> it : 1
require exclusive it -> is : 1
exclusive it is -> executing : 1
it is executing -> before : 1
is executing before -> retrieving : 1
executing before retrieving -> the : 1
before retrieving the -> prepared : 1
retrieving the prepared -> the : 1
the prepared the -> is : 1
prepared the is -> marking : 1
the is marking -> the : 1
is marking the -> beginning : 1
is marking the -> end : 1
marking the beginning -> of : 1
the beginning of -> a : 1
beginning of a -> critical : 1
critical section using -> the : 1
section using the -> lock : 1
using the lock -> member : 1
the lock member -> function : 1
lock member function -> in : 1
member function in -> as : 1
member function in -> will : 1
function in as -> soon : 1
in as soon -> as : 1
as the data -> retrieval : 1
as the data -> flows : 1
the data retrieval -> is : 1
data retrieval is -> the : 1
retrieval is the -> lock : 1
is the lock -> is : 1
lock is marking -> the : 1
marking the end -> of : 1
of the critical -> followed : 1
the critical followed -> by : 1
critical followed by -> a : 1
by a call -> to : 2
to the which -> again : 1
to the which -> will : 1
the which again -> does : 1
which again does -> not : 1
again does not -> require : 1
does not require -> exclusive : 1
not require exclusive -> is : 1
require exclusive is -> getting : 1
exclusive is getting -> executed : 1
is getting executed -> before : 1
getting executed before -> the : 1
executed before the -> execution : 1
before the execution -> of : 1
the the mutex -> is : 2
mutex is locked -> to : 1
is locked to -> protect : 1
locked to protect -> the : 1
protect the write -> which : 1
the write which -> updates : 1
write which updates -> the : 1
which updates the -> processed : 1
updates the processed -> when : 1
the processed when -> exiting : 1
processed when exiting -> the : 1
when exiting the -> the : 1
exiting the the -> lock : 1
the the lock -> gets : 1
the lock gets -> released : 1
lock gets released -> when : 1
gets released when -> the : 1
released when the -> local : 1
when the local -> instance : 1
the local instance -> of : 1
local instance of -> is : 1
instance of is -> already : 1
of is already -> know : 1
is already know -> that : 1
know that mutexes -> can : 1
that mutexes can -> be : 1
mutexes can be -> used : 1
used to share -> common : 1
to share common -> resources : 1
share common resources -> and : 1
common resources and -> synchronize : 1
resources and synchronize -> operations : 1
and synchronize operations -> between : 1
synchronize operations between -> but : 1
operations between but -> synchronization : 1
between but synchronization -> using : 1
but synchronization using -> mutexes : 1
synchronization using mutexes -> is : 1
using mutexes is -> a : 2
mutexes is a -> little : 1
mutexes is a -> popular : 1
is a little -> complex : 1
a little complex -> and : 1
little complex and -> if : 1
complex and if -> you : 1
and if you -> are : 1
you are not -> in : 1
are not in -> this : 1
are not in -> the : 1
not in this -> we : 1
wait for events -> with : 1
for events with -> condition : 1
events with condition -> variables : 1
with condition variables -> and : 1
condition variables and -> how : 1
variables and how -> to : 1
to use them -> for : 1
use them for -> synchronization : 1
them for synchronization -> in : 1
for synchronization in -> an : 1
synchronization in an -> easier : 1
in an easier -> it : 1
an easier it -> comes : 1
easier it comes -> to : 1
comes to synchronization -> using : 1
to synchronization using -> if : 1
synchronization using if -> the : 1
using if the -> waiting : 1
if the waiting -> thread : 1
the waiting thread -> has : 1
waiting thread has -> acquired : 1
thread has acquired -> a : 1
has acquired a -> lock : 1
acquired a lock -> over : 1
a lock over -> a : 1
lock over a -> it : 1
over a it -> be : 1
a it be -> locked : 1
it be locked -> by : 1
be locked by -> any : 1
locked by any -> other : 1
by any other -> waiting : 1
any other waiting -> for : 1
other waiting for -> one : 1
waiting for one -> thread : 1
for one thread -> to : 1
one thread to -> complete : 1
its execution by -> checking : 1
execution by checking -> on : 1
by checking on -> a : 1
checking on a -> status : 1
on a status -> flag : 1
a status flag -> periodically : 1
status flag periodically -> that : 1
flag periodically that -> is : 1
periodically that is -> protected : 1
that is protected -> by : 2
is protected by -> a : 1
is protected by -> the : 2
protected by a -> mutex : 1
by a mutex -> is : 1
is a waste -> of : 1
a waste of -> cpu : 1
waste of cpu -> this : 1
of cpu this -> is : 1
cpu this is -> because : 1
this is because -> these : 1
this is because -> it : 1
is because these -> resources : 1
because these resources -> can : 1
these resources can -> be : 1
resources can be -> effectively : 1
can be effectively -> utilized : 1
be effectively utilized -> by : 1
effectively utilized by -> other : 1
utilized by other -> threads : 1
by other threads -> in : 1
other threads in -> the : 2
threads in the -> system : 2
threads in the -> same : 1
in the system -> rather : 1
in the system -> should : 1
in the system -> the : 1
the system rather -> than : 1
system rather than -> having : 1
rather than having -> to : 1
than having to -> wait : 1
having to wait -> for : 1
wait for a -> longer : 1
wait for a -> specific : 1
for a longer -> address : 1
a longer address -> these : 1
longer address these -> the : 1
address these the -> standard : 1
these the standard -> library : 1
library has provided -> two : 1
has provided two -> implementations : 1
provided two implementations -> of : 1
two implementations of -> conditional : 1
two implementations of -> this : 1
implementations of conditional -> and : 1
of conditional and -> both : 1
conditional and both -> are : 1
and both are -> declared : 1
both are declared -> inside : 1
are declared inside -> the : 2
declared inside the -> library : 2
inside the library -> and : 1
inside the library -> header : 1
library and both -> the : 1
and both the -> implementations : 1
both the implementations -> need : 1
the implementations need -> to : 1
implementations need to -> work : 1
need to work -> with : 2
work with a -> mutex : 1
work with a -> simple : 1
with a mutex -> to : 1
a mutex to -> synchronize : 1
mutex to synchronize -> the : 1
to synchronize the -> implementation : 1
to synchronize the -> operations : 1
to synchronize the -> calls : 1
synchronize the implementation -> of : 1
of is limited -> to : 1
is limited to -> working : 1
is limited to -> the : 1
limited to working -> with : 1
to working with -> on : 1
working with on -> the : 1
with on the -> other : 1
the other can -> work : 1
other can work -> with : 1
can work with -> anything : 1
work with anything -> that : 1
with anything that -> meets : 1
anything that meets -> criteria : 1
that meets criteria -> hence : 1
meets criteria hence -> because : 1
criteria hence because -> of : 1
hence because of -> its : 1
because of its -> generic : 1
of its generic -> ends : 1
its generic ends -> up : 1
generic ends up -> consuming : 1
ends up consuming -> more : 1
up consuming more -> memory : 1
consuming more memory -> and : 1
more memory and -> degrades : 1
memory and degrades -> it : 1
and degrades it -> is : 1
degrades it is -> not : 1
is not recommended -> unless : 1
not recommended unless -> a : 1
recommended unless a -> tailored : 1
unless a tailored -> requirement : 1
a tailored requirement -> is : 1
tailored requirement is -> in : 1
requirement is in -> following : 1
is in following -> program : 1
in following program -> is : 1
following program is -> an : 1
following program is -> a : 2
program is an -> implementation : 1
is an implementation -> of : 1
implementation of threads -> that : 1
of threads that -> we : 1
of threads that -> were : 1
threads that we -> discussed : 1
that we discussed -> when : 1
that we discussed -> in : 1
we discussed when -> we : 1
discussed when we -> talked : 1
when we talked -> about : 1
talked about which -> is : 1
about which is -> now : 1
which is now -> being : 1
now being using -> condition : 1
being using condition -> auto : 1
using condition auto -> bevenready : 1
condition auto bevenready -> auto : 1
auto bevenready auto -> boddready : 1
bevenready auto boddready -> void : 1
auto boddready void -> for : 1
boddready void for -> i : 1
i i bevenready -> boddready : 2
i bevenready boddready -> program : 1
i bevenready boddready -> function : 1
bevenready boddready program -> starts : 1
boddready program starts -> with : 1
program starts with -> the : 1
starts with the -> declaration : 1
with the declaration -> of : 1
the declaration of -> a : 1
the declaration of -> all : 1
of a a -> conditional : 1
of a a -> object : 1
a a conditional -> and : 1
a conditional and -> two : 1
conditional and two -> boolean : 1
and two boolean -> flags : 1
two boolean flags -> globally : 1
boolean flags globally -> so : 1
flags globally so -> that : 1
globally so that -> we : 1
so that we -> can : 2
that we can -> synchronize : 1
that we can -> have : 1
that we can -> transform : 1
that we can -> compose : 1
that we can -> apply : 1
that we can -> track : 1
we can synchronize -> them : 1
can synchronize them -> between : 1
synchronize them between -> two : 1
them between two -> the : 1
between two the -> function : 1
two the function -> gets : 1
the function gets -> executed : 1
function gets executed -> in : 2
gets executed in -> a : 2
gets executed in -> another : 1
executed in a -> worker : 1
executed in a -> separate : 1
in a worker -> thread : 1
worker thread and -> prints : 2
worker thread and -> subscription : 1
thread and prints -> only : 2
and prints only -> even : 1
and prints only -> odd : 1
prints only even -> numbers : 1
only even numbers -> starting : 1
even numbers starting -> from : 1
numbers starting from -> when : 1
numbers starting from -> like : 1
starting from when -> it : 1
from when it -> enters : 1
when it enters -> the : 1
it enters the -> the : 1
mutex is protected -> with : 1
protected with instead -> of : 1
with instead of -> we : 1
instead of we -> will : 1
of we will -> see : 1
of we will -> mutate : 1
of we will -> explore : 1
we will see -> the : 2
will see the -> reason : 1
will see the -> use : 1
will see the -> value : 1
see the reason -> for : 1
reason for that -> in : 1
for that in -> a : 1
that in a -> the : 1
the thread then -> calls : 1
thread then calls -> the : 1
then calls the -> function : 1
calls the function -> in : 1
the function in -> passing : 1
function in passing -> the : 1
in passing the -> lock : 1
passing the lock -> object : 1
the lock object -> and : 1
lock object and -> a : 1
object and a -> lambda : 1
and a lambda -> predicate : 1
a lambda predicate -> function : 1
lambda predicate function -> that : 1
predicate function that -> expresses : 1
function that expresses -> the : 1
that expresses the -> condition : 1
expresses the condition -> being : 1
the condition being -> waited : 1
condition being waited -> this : 1
being waited this -> can : 1
waited this can -> be : 1
can be replaced -> with : 1
be replaced with -> any : 1
replaced with any -> callable : 1
any callable object -> that : 1
any callable object -> such : 1
callable object that -> returns : 1
object that returns -> in : 1
that returns in -> this : 1
returns in this -> the : 1
this the predicate -> function : 1
the predicate function -> returns : 1
predicate function returns -> the : 1
returns the so -> that : 1
the so that -> the : 1
the function continues -> execution : 1
function continues execution -> when : 1
continues execution when -> it : 1
execution when it -> becomes : 1
when it becomes -> if : 1
it becomes if -> the : 1
becomes if the -> predicate : 1
if the predicate -> returns : 1
the predicate returns -> the : 1
predicate returns the -> function : 1
returns the function -> will : 1
function will unlock -> the : 1
will unlock the -> mutex : 1
unlock the mutex -> and : 1
the mutex and -> wait : 1
the mutex and -> continues : 1
mutex and wait -> for : 1
wait for another -> thread : 1
for another thread -> to : 1
another thread to -> notify : 1
thread to notify -> hence : 1
to notify hence -> the : 1
notify hence the -> object : 1
hence the object -> comes : 1
the object comes -> handy : 1
object comes handy -> here : 1
comes handy here -> with : 1
handy here with -> the : 1
here with the -> provided : 1
with the provided -> flexibility : 1
the provided flexibility -> to : 1
provided flexibility to -> lock : 1
flexibility to lock -> and : 1
to lock and -> soon : 1
lock and soon -> as : 1
and soon as -> prints : 1
soon as prints -> the : 1
as prints the -> loop : 1
prints the loop -> the : 1
the loop the -> flag : 1
loop the flag -> is : 1
the flag is -> raised : 2
the flag is -> cleared : 2
flag is raised -> to : 2
is raised to -> false : 1
is raised to -> and : 1
is raised to -> followed : 1
raised to false -> and : 1
to false and -> raised : 1
false and raised -> to : 1
and raised to -> the : 1
raised to the -> call : 1
to the call -> to : 1
the function associated -> with : 2
associated with signals -> the : 2
with signals the -> waiting : 2
signals the waiting -> odd : 1
signals the waiting -> even : 1
the waiting odd -> thread : 1
waiting odd thread -> to : 1
odd thread to -> write : 1
thread to write -> an : 2
to write an -> odd : 1
to write an -> even : 1
to write an -> instance : 1
to write an -> application : 1
write an odd -> number : 1
an odd number -> into : 1
odd number into -> the : 1
number into the -> standard : 2
standard output for -> i : 1
output for i -> i : 1
bevenready boddready function -> gets : 1
boddready function gets -> executed : 1
executed in another -> worker : 1
in another worker -> thread : 1
another worker thread -> and : 1
prints only odd -> numbers : 1
only odd numbers -> starting : 1
odd numbers starting -> from : 1
starting from like -> the : 1
from like the -> a : 1
like the a -> loop : 1
the a loop -> iterates : 1
a loop iterates -> and : 1
loop iterates and -> prints : 1
iterates and prints -> the : 1
prints the index -> that : 1
the index that -> is : 1
index that is -> protected : 1
protected by the -> globally : 1
protected by the -> side : 1
by the globally -> declared : 1
the globally declared -> conditional : 1
globally declared conditional -> variable : 1
declared conditional variable -> and : 1
conditional variable and -> unlike : 1
variable and unlike -> the : 1
and unlike the -> the : 1
unlike the the -> predicate : 1
the the predicate -> used : 1
the predicate used -> in : 1
predicate used in -> the : 1
used in the -> function : 1
used in the -> previous : 1
used in the -> the : 1
used in the -> output : 1
in the function -> of : 1
in the function -> where : 1
in the function -> forms : 1
of a condition -> variable : 1
a condition variable -> returns : 1
condition variable returns -> and : 1
variable returns and -> the : 1
returns and the -> flag : 1
and the flag -> is : 1
raised to and -> is : 1
to and is -> raised : 1
and is raised -> to : 1
raised to followed -> by : 1
to followed by -> calling : 1
followed by calling -> the : 1
by calling the -> function : 1
by calling the -> the : 2
by calling the -> observer : 1
calling the function -> associated : 1
the waiting even -> thread : 1
waiting even thread -> to : 1
even thread to -> write : 1
even number into -> the : 1
standard output this -> interleaved : 1
output this interleaved -> printing : 1
this interleaved printing -> of : 1
interleaved printing of -> even : 1
printing of even -> and : 1
of even and -> odd : 1
even and odd -> numbers : 1
and odd numbers -> continues : 1
odd numbers continues -> until : 1
numbers continues until -> the : 1
continues until the -> max : 1
until the max -> auto : 1
the max auto -> max : 1
max auto max -> bevenready : 1
auto max bevenready -> if : 1
max bevenready if -> if : 1
bevenready if if -> main : 1
if if main -> function : 1
if main function -> launches : 1
main function launches -> two : 1
function launches two -> background : 1
launches two background -> which : 1
two background which -> is : 1
background which is -> associated : 1
with the function -> and : 1
with the function -> can : 1
the function and -> which : 1
the function and -> never : 1
function and which -> is : 1
and which is -> associated : 1
the the output -> starts : 1
the the output -> of : 1
the output starts -> when : 1
output starts when -> even : 1
starts when even -> parity : 1
when even parity -> is : 1
even parity is -> confirmed : 1
parity is confirmed -> by : 1
is confirmed by -> raising : 1
confirmed by raising -> the : 1
by raising the -> flag : 1
raising the flag -> to : 1
the flag to -> true : 1
flag to true -> before : 1
to true before -> the : 1
true before the -> threads : 1
threads are stack -> data : 1
are stack data -> we : 1
stack data we -> have : 1
data we have -> discussed : 1
we have discussed -> how : 1
we have discussed -> the : 1
we have discussed -> facilities : 1
have discussed how -> to : 1
discussed how to -> launch : 1
a and how -> to : 1
how to synchronize -> the : 1
how to synchronize -> actions : 1
synchronize the operations -> between : 1
the operations between -> concurrent : 1
operations between concurrent -> when : 1
between concurrent when -> it : 1
concurrent when it -> comes : 1
comes to actual -> the : 1
to actual the -> data : 1
actual the data -> is : 1
data is represented -> in : 1
is represented in -> the : 2
represented in the -> form : 2
represented in the -> following : 1
in the form -> of : 2
the form of -> data : 1
the form of -> a : 1
form of data -> which : 1
of data which -> must : 1
data which must -> be : 1
which must be -> chosen : 1
be chosen appropriately -> for : 1
chosen appropriately for -> the : 1
appropriately for the -> situation : 1
for the situation -> to : 1
the situation to -> guarantee : 1
situation to guarantee -> the : 1
to guarantee the -> performance : 1
guarantee the performance -> of : 1
to discuss how -> to : 2
how to design -> a : 1
how to design -> an : 1
to design a -> concurrent : 1
design a concurrent -> stack : 1
a concurrent stack -> using : 1
concurrent stack using -> conditional : 1
stack using conditional -> variables : 1
using conditional variables -> and : 1
conditional variables and -> the : 1
variables and the -> following : 1
and the following -> program : 1
and the following -> code : 1
a wrapper to -> which : 1
wrapper to which -> is : 1
to which is -> declared : 1
to which is -> an : 1
which is declared -> under : 1
is declared under -> the : 1
declared under the -> library : 1
declared under the -> signals : 1
under the library -> header : 1
the library header -> and : 1
the library header -> there : 1
library header and -> the : 1
header and the -> stack : 1
and the stack -> wrapper : 1
the stack wrapper -> will : 1
stack wrapper will -> be : 1
wrapper will be -> available : 1
will be available -> with : 1
will be available -> in : 1
be available with -> different : 1
available with different -> overloads : 1
with different overloads -> for : 1
different overloads for -> pop : 1
overloads for pop -> and : 1
for pop and -> push : 1
pop and push -> functionalities : 1
and push functionalities -> has : 1
push functionalities has -> been : 1
functionalities has been -> done : 1
has been done -> to : 2
has been done -> for : 1
been done to -> keep : 1
been done to -> show : 1
done to keep -> the : 1
the listing and -> this : 1
listing and this -> also : 1
and this also -> demonstrates : 1
this also demonstrates -> how : 1
also demonstrates how -> we : 1
demonstrates how we -> can : 5
we can adapt -> a : 1
can adapt a -> sequential : 1
adapt a sequential -> data : 1
a sequential data -> structure : 1
sequential data structure -> to : 1
structure to work -> in : 1
to work in -> a : 1
work in a -> concurrent : 1
in a concurrent -> class : 1
a concurrent class -> stack : 1
concurrent class stack -> mutable : 1
class stack mutable -> mydata : 1
stack mutable mydata -> class : 1
mutable mydata class -> contains : 1
mydata class contains -> an : 1
class contains an -> object : 1
contains an object -> to : 1
an object to -> the : 1
an object to -> safeguard : 1
object to the -> template : 1
object to the -> returns : 1
to the template -> class : 1
the template class -> along : 1
template class along -> with : 1
class along with -> member : 1
class along with -> the : 1
along with member -> variables : 1
with member variables -> for : 1
member variables for -> and : 1
variables for and -> the : 1
for and the -> constructor : 1
for and the -> copy : 1
for and the -> assignment : 1
for and the -> typename : 1
and the constructor -> and : 1
constructor and destructor -> of : 1
constructor and destructor -> private : 1
and destructor of -> the : 1
destructor of the -> class : 1
the class are -> marked : 1
class are marked -> as : 1
are marked as -> letting : 1
are marked as -> deleted : 1
marked as letting -> the : 1
as letting the -> compiler : 1
letting the compiler -> generate : 1
the compiler generate -> a : 1
compiler generate a -> default : 1
generate a default -> implementation : 1
a default implementation -> for : 1
default implementation for -> and : 1
implementation for and -> the : 1
and the copy -> assignment : 1
the copy assignment -> operator : 1
assignment operator is -> marked : 1
operator is marked -> as : 1
is marked as -> delete : 1
marked as delete -> to : 1
as delete to -> prevent : 1
delete to prevent -> the : 1
prevent the invocation -> of : 1
the invocation of -> the : 2
invocation of the -> assignment : 1
invocation of the -> functions : 1
invocation of the -> function : 1
invocation of the -> operator : 1
of the assignment -> operator : 2
of the assignment -> while : 1
the assignment operator -> of : 2
the assignment operator -> as : 1
operator of this -> class : 1
of this class -> at : 1
of this class -> hi : 1
this class at -> compile : 1
class at compile -> time : 1
at compile time -> the : 1
compile time the -> copy : 1
time the copy -> constructor : 1
the copy constructor -> is : 1
the copy constructor -> and : 1
copy constructor is -> which : 1
constructor is which -> copies : 1
is which copies -> the : 1
which copies the -> member : 1
copies the member -> object : 1
the member object -> by : 1
the member object -> to : 1
member object by -> invoking : 1
object by invoking -> its : 1
by invoking its -> own : 1
invoking its own -> copy : 1
own copy assignment -> which : 1
copy assignment which -> is : 1
assignment which is -> protected : 1
which is protected -> by : 1
by the side -> void : 1
the side void -> member : 1
side void member -> function : 1
void member function -> is : 1
member function is -> wrapping : 1
function is wrapping -> the : 1
is wrapping the -> function : 1
wrapping the function -> of : 1
function of as -> you : 1
of as you -> can : 1
of as you -> have : 1
you can the -> mutex : 1
can the mutex -> member : 1
the mutex member -> is : 1
mutex member is -> locked : 1
member is locked -> by : 1
is locked by -> an : 1
locked by an -> object : 1
by an object -> to : 1
by an object -> when : 1
object to safeguard -> the : 1
to safeguard the -> operation : 1
safeguard the operation -> that : 1
the operation that -> follows : 1
the operation that -> you : 1
operation that follows -> in : 1
that follows in -> the : 1
follows in the -> next : 1
the next followed -> by : 1
next followed by -> the : 1
followed by the -> function : 2
by the function -> is : 1
by the function -> to : 1
function is invoked -> using : 1
is invoked using -> the : 1
invoked using the -> member : 1
member object to -> raise : 1
object to raise -> an : 1
to raise an -> event : 1
raise an event -> to : 1
an event to -> notify : 1
event to notify -> the : 1
to notify the -> waiting : 1
to notify the -> moc : 1
to notify the -> as : 1
notify the waiting -> threads : 1
the waiting threads -> over : 1
waiting threads over -> this : 1
threads over this -> same : 1
over this same -> condition : 1
this same condition -> there : 1
same condition there -> are : 1
condition there are -> two : 1
there are two -> overloads : 1
there are two -> sorts : 1
there are two -> put : 1
there are two -> implementations : 1
there are two -> ways : 1
there are two -> which : 1
are two overloads -> of : 1
two overloads of -> the : 1
overloads of the -> operation : 1
overloads of the -> function : 2
of the operation -> that : 1
operation that you -> will : 1
you will see -> in : 1
you will see -> the : 1
will see in -> the : 1
see in the -> following : 1
following code which -> wait : 1
code which wait -> over : 1
which wait over -> this : 1
wait over this -> condition : 1
over this condition -> variable : 1
this condition variable -> to : 1
condition variable to -> get : 1
variable to get -> bool : 1
to get bool -> if : 1
get bool if -> return : 1
bool if return -> return : 1
if return return -> function : 1
if return return -> is : 1
return return function -> takes : 1
return function takes -> a : 1
function takes a -> template : 1
takes a template -> argument : 1
template argument as -> a : 1
argument as a -> since : 1
as a since -> the : 1
a since the -> implementation : 1
since the implementation -> never : 1
the implementation never -> waits : 1
implementation never waits -> for : 1
never waits for -> the : 1
never waits for -> a : 1
waits for the -> stack : 1
for the stack -> to : 2
the stack to -> fill : 2
stack to fill -> at : 3
to fill at -> least : 3
fill at least -> one : 3
least one this -> uses : 1
least one this -> implementation : 1
one this uses -> the : 1
this uses the -> object : 1
uses the object -> to : 1
the object to -> protect : 1
object to protect -> the : 1
protect the the -> function : 1
function returns if -> the : 1
returns if the -> stack : 1
if the stack -> is : 2
the stack is -> otherwise : 1
the stack is -> void : 1
the stack is -> empty : 1
the stack is -> then : 1
stack is otherwise -> it : 1
is otherwise it -> returns : 1
otherwise it returns -> the : 1
it returns the -> output : 1
returns the output -> is : 1
output is assigned -> to : 1
assigned to input -> a : 1
to input a -> reference : 1
input a reference -> argument : 1
a reference argument -> by : 1
reference argument by -> invoking : 1
argument by invoking -> the : 1
invoking the function -> of : 1
function of which -> returns : 1
of which returns -> the : 1
which returns the -> topmost : 1
which returns the -> result : 1
returns the topmost -> element : 1
the topmost element -> in : 1
the topmost element -> from : 1
topmost element in -> the : 1
element in the -> followed : 1
element in the -> array : 1
element in the -> as : 1
element in the -> function : 1
element in the -> stack : 1
in the followed -> by : 1
the followed by -> the : 1
function to clear -> the : 1
to clear the -> topmost : 1
clear the topmost -> element : 1
topmost element from -> the : 1
element from the -> all : 1
from the all -> overloads : 1
the all overloads -> for : 1
all overloads for -> the : 1
overloads for the -> function : 1
for the function -> invoke : 1
for the function -> a : 1
the function invoke -> the : 1
function invoke the -> function : 1
invoke the function -> followed : 1
invoke the function -> to : 1
the function followed -> by : 1
function followed by -> a : 1
function of if -> return : 1
of if return -> return : 1
return is another -> overload : 1
is another overload -> of : 1
another overload of -> the : 1
another overload of -> which : 1
overload of the -> which : 1
of the which -> returns : 1
of the which -> is : 1
the which returns -> an : 1
which returns an -> instance : 1
returns an instance -> of : 2
the template as -> you : 1
template as you -> have : 1
as you have -> already : 2
as you have -> seen : 1
you have already -> the : 1
you have already -> seen : 1
have already the -> function : 1
already the function -> and : 1
function and never -> waits : 1
and never waits -> for : 1
for a stack -> to : 1
a stack to -> fill : 1
one this implementation -> uses : 1
this implementation uses -> if : 1
implementation uses if -> the : 1
uses if the -> internal : 1
if the internal -> stack : 1
the internal stack -> is : 1
internal stack is -> the : 1
stack is the -> function : 1
is the function -> returns : 1
function returns an -> instance : 1
function returns an -> observable : 1
instance of and -> holds : 1
instance of and -> also : 1
of and holds -> no : 1
and holds no -> element : 1
holds no element -> of : 1
no element of -> the : 1
element of the -> a : 1
element of the -> stack : 1
element of the -> aggregate : 1
element of the -> input : 1
element of the -> stream : 1
the a instance -> that : 1
the a instance -> provides : 1
the a instance -> can : 1
a instance that -> holds : 1
instance that holds -> the : 1
that holds the -> top : 1
holds the top -> element : 1
the top element -> of : 1
the top element -> into : 1
top element of -> the : 1
of the stack -> is : 1
stack is void -> return : 1
is void return -> return : 1
void return return -> return : 1
return return the -> overloads : 1
return return the -> a : 1
return the overloads -> of : 1
the overloads of -> the : 1
the function are -> not : 1
the function are -> which : 1
function are not -> waiting : 1
are not waiting -> for : 1
least one element -> if : 1
one element if -> it : 1
element if it -> is : 1
it is to -> achieve : 1
is to achieve -> two : 1
to achieve two -> more : 1
achieve two more -> overloads : 1
two more overloads -> of : 1
more overloads of -> the : 1
function are which -> uses : 1
are which uses -> the : 1
which uses the -> wait : 1
uses the wait -> function : 1
the wait function -> associated : 1
wait function associated -> with : 1
with the first -> implementation : 1
the first implementation -> returns : 1
first implementation returns -> the : 1
implementation returns the -> template : 1
returns the template -> value : 1
the template value -> as : 1
template value as -> an : 1
value as an -> output : 1
as an output -> and : 1
an output and -> the : 1
output and the -> second : 1
second one returns -> an : 1
one returns an -> both : 1
returns an both -> functions : 1
an both functions -> use : 1
both functions use -> to : 1
functions use to -> control : 1
use to control -> the : 1
to control the -> mutex : 1
control the mutex -> in : 1
mutex in order -> to : 1
order to supply -> the : 1
to supply the -> function : 1
supply the function -> of : 1
function of in -> the : 1
of in the -> the : 1
of in the -> gof : 1
of in the -> we : 1
function is checking -> whether : 1
is checking whether -> the : 1
checking whether the -> stack : 1
whether the stack -> is : 1
stack is empty -> or : 1
is empty or -> if : 1
is empty or -> global : 1
empty or if -> the : 1
or if the -> stack : 1
stack is then -> the : 1
is then the -> function : 1
then the function -> unlocks : 1
the function unlocks -> the : 1
function unlocks the -> mutex : 1
mutex and continues -> to : 1
and continues to -> wait : 1
continues to wait -> until : 1
wait until a -> notification : 1
until a notification -> is : 1
a notification is -> received : 1
notification is received -> from : 1
is received from -> the : 1
received from the -> as : 1
from the as -> soon : 1
the as soon -> as : 1
as the push -> is : 1
the push is -> the : 1
push is the -> predicate : 1
is the predicate -> will : 1
the predicate will -> return : 1
predicate will return -> and : 1
will return and -> continues : 1
return and continues -> its : 1
and continues its -> the : 1
continues its the -> function : 1
its the function -> overload : 1
its the function -> must : 1
the function overload -> takes : 1
function overload takes -> the : 1
overload takes the -> template : 1
takes the template -> reference : 1
the template reference -> and : 1
template reference and -> assigns : 1
reference and assigns -> the : 1
and assigns the -> top : 1
assigns the top -> element : 1
top element into -> the : 1
element into the -> input : 1
into the input -> and : 1
the input and -> the : 1
input and the -> latter : 1
and the latter -> implementation : 1
and the latter -> will : 1
the latter implementation -> returns : 1
latter implementation returns -> an : 1
implementation returns an -> holding : 1
returns an holding -> the : 1
an holding the -> top : 1
holding the top -> this : 1
the top this -> we : 1
top this we -> discussed : 1
this we discussed -> the : 1
this we discussed -> error : 1
we discussed the -> threading : 1
we discussed the -> synchronization : 1
we discussed the -> new : 1
we discussed the -> difference : 1
discussed the threading -> library : 1
available in standard -> we : 1
available in standard -> library : 1
in standard we -> saw : 1
standard we saw -> how : 1
saw how to -> launch : 1
saw how to -> use : 1
a and discussed -> different : 1
and discussed different -> aspects : 1
discussed different aspects -> of : 1
the threading such -> as : 1
threading such as -> how : 1
such as how -> to : 1
as how to -> pass : 1
into a ownership -> management : 1
a ownership management -> of : 1
ownership management of -> a : 1
management of a -> thread : 1
a thread sharing -> of : 1
thread sharing of -> data : 1
sharing of data -> between : 1
data between and -> so : 1
between and so -> the : 1
so the standard -> threading : 1
the standard threading -> library : 1
standard threading library -> can : 1
threading library can -> execute : 1
library can execute -> most : 1
can execute most -> callable : 1
execute most callable -> objects : 1
most callable objects -> as : 1
callable objects as -> we : 1
objects as we -> have : 1
seen the importance -> of : 1
the importance of -> all : 1
importance of all -> the : 1
of all the -> available : 1
all the available -> callable : 1
the available callable -> objects : 1
available callable objects -> in : 1
callable objects in -> association : 1
objects in association -> with : 1
in association with -> such : 1
association with such -> as : 1
with such as -> and : 1
as and we -> discussed : 1
as and we -> also : 1
as and we -> have : 1
and we discussed -> the : 2
discussed the synchronization -> primitives : 1
the synchronization primitives -> available : 1
synchronization primitives available -> in : 1
synchronization primitives available -> with : 1
primitives available in -> the : 1
the standard starting -> with : 1
standard starting with -> the : 1
starting with the -> simple : 1
with the simple -> the : 1
the simple the -> use : 1
simple the use -> of : 1
of the raii -> idiom : 1
raii idiom to -> protect : 1
idiom to protect -> mutexes : 1
to protect mutexes -> from : 1
protect mutexes from -> unhandled : 1
mutexes from unhandled -> exit : 1
from unhandled exit -> cases : 1
unhandled exit cases -> to : 1
exit cases to -> avoid : 1
cases to avoid -> explicit : 1
to avoid explicit -> and : 1
avoid explicit and -> using : 1
explicit and using -> classes : 1
and using classes -> such : 1
using classes such -> as : 1
classes such as -> and : 1
and we also -> discussed : 1
we also discussed -> condition : 1
we also discussed -> how : 1
also discussed condition -> variables : 1
discussed condition variables -> in : 1
condition variables in -> the : 1
variables in the -> context : 1
context of thread -> this : 1
of thread this -> chapter : 1
thread this chapter -> lays : 1
in modern to -> kickstart : 1
modern to kickstart -> the : 1
to kickstart the -> journey : 1
kickstart the journey -> of : 1
the journey of -> this : 1
journey of this -> book : 1
this book into -> functional : 1
book into functional -> the : 1
into functional the -> following : 1
functional the following -> we : 1
will be covering -> more : 1
will be covering -> to : 1
be covering more -> concurrency : 1
covering more concurrency -> library : 1
more concurrency library -> features : 1
concurrency library features -> in : 1
library features in -> such : 1
features in such -> as : 1
in such as -> parallelism : 1
such as parallelism -> and : 1
as parallelism and -> and : 1
parallelism and and -> programming : 1
and and programming -> in : 2
programming in the -> previous : 1
programming in the -> case : 2
previous we looked -> at : 1
we looked at -> the : 2
looked at the -> threading : 1
looked at the -> streamulus : 1
at the threading -> library : 1
threading library introduced -> by : 1
library introduced by -> modern : 1
introduced by modern -> and : 1
by modern and -> various : 1
by modern and -> also : 1
modern and various -> ways : 1
and various ways -> to : 1
various ways to -> and : 1
ways to and -> synchronize : 1
to and synchronize -> the : 1
and synchronize the -> way : 1
synchronize the way -> of : 1
the way of -> writing : 1
the way of -> implementing : 1
writing code with -> threads : 1
code with threads -> is : 1
with threads is -> a : 1
threads is a -> rather : 1
is a rather -> low : 1
a rather low -> level : 1
rather low level -> and : 1
low level and -> is : 1
level and is -> prone : 1
and is prone -> to : 1
is prone to -> potential : 1
prone to potential -> errors : 1
to potential errors -> associated : 1
potential errors associated -> with : 1
errors associated with -> concurrent : 1
with concurrent code -> and : 1
concurrent code and -> so : 1
code and so -> even : 1
and so even -> though : 1
so even though -> it : 1
even though it -> is : 2
though it is -> not : 2
is not noticed -> by : 1
not noticed by -> many : 1
noticed by many -> the : 1
by many the -> modern : 1
many the modern -> language : 1
modern language provides -> a : 1
language provides a -> standard : 1
provides a standard -> memory : 1
provides a standard -> thread : 1
a standard memory -> model : 2
standard memory model -> that : 1
standard memory model -> for : 1
model that helps -> to : 1
helps to write -> concurrent : 1
to write concurrent -> code : 1
write concurrent code -> to : 1
concurrent code to -> be : 1
code to be -> a : 1
code to be -> guarded : 1
to be a -> concurrent : 1
to be a -> value : 1
to be a -> better : 1
to be a -> complete : 1
be a concurrent -> programming : 1
a concurrent programming -> language : 1
a concurrent programming -> the : 1
concurrent programming language -> from : 1
programming language from -> the : 1
language from the -> ground : 1
from the ground -> a : 1
the ground a -> language : 1
ground a language -> has : 1
a language has -> to : 1
language has to -> provide : 1
has to provide -> certain : 1
to provide certain -> guarantees : 1
provide certain guarantees -> to : 1
certain guarantees to -> the : 1
guarantees to the -> developer : 1
to the developer -> regarding : 1
the developer regarding -> memory : 1
developer regarding memory -> access : 1
regarding memory access -> and : 1
access and the -> order : 1
and the order -> in : 1
the order in -> which : 5
order in which -> things : 1
order in which -> variables : 1
order in which -> the : 2
order in which -> stream : 1
order in which -> we : 1
in which things -> will : 1
which things will -> be : 1
things will be -> executed : 1
things will be -> you : 1
will be executed -> during : 1
will be executed -> in : 1
be executed during -> if : 1
executed during if -> we : 1
during if we -> are : 1
if we are -> using : 1
if we are -> implementing : 1
are using constructs -> such : 1
using constructs such -> as : 1
condition and futures -> to : 1
and futures to -> signal : 1
futures to signal -> one : 1
to signal one -> need : 1
signal one need -> to : 1
one need to -> be : 1
need to be -> aware : 1
need to be -> comfortable : 1
need to be -> is : 1
need to be -> used : 1
to be aware -> of : 1
aware of the -> memory : 1
of the memory -> but : 1
of the memory -> model : 1
of the memory -> and : 1
the memory but -> awareness : 1
memory but awareness -> of : 1
but awareness of -> the : 1
awareness of the -> memory : 1
awareness of the -> structure : 1
memory model and -> its : 1
model and its -> guarantees : 1
model and its -> cognitive : 1
and its guarantees -> will : 1
its guarantees will -> help : 1
guarantees will help -> us : 1
help us write -> faster : 1
us write faster -> concurrent : 1
write faster concurrent -> code : 1
faster concurrent code -> using : 1
concurrent code using -> programming : 1
code using programming -> locks : 1
using programming locks -> can : 1
programming locks can -> be : 1
locks can be -> simulated : 1
can be simulated -> using : 1
be simulated using -> something : 1
simulated using something -> called : 1
using something called -> atomic : 1
something called atomic -> and : 1
called atomic and -> we : 1
atomic and we -> will : 1
we will look -> at : 2
will look at -> this : 1
will look at -> the : 1
look at this -> technique : 1
look at this -> int : 1
look at this -> supported : 1
look at this -> factory : 1
look at this -> this : 1
at this technique -> in : 1
this technique in -> we : 1
technique in we -> discussed : 1
in we discussed -> in : 1
we discussed in -> tour : 1
we discussed in -> the : 1
we discussed in -> this : 1
discussed in tour -> of : 1
in tour of -> modern : 1
its key abstraction -> remains : 1
key abstraction remains -> one : 1
abstraction remains one -> of : 1
remains one of -> the : 1
the most fundamental -> principles : 1
most fundamental principles -> of : 1
fundamental principles of -> the : 1
principles of the -> programming : 1
the programming is -> always : 1
programming is always -> a : 1
is always a -> system : 1
always a system -> and : 1
a system and -> the : 1
a system and -> provide : 1
system and the -> standard : 1
and the standard -> committee : 1
the standard committee -> managed : 1
the standard committee -> has : 1
the standard committee -> handled : 1
standard committee managed -> to : 1
committee managed to -> strike : 1
managed to strike -> a : 1
to strike a -> good : 1
strike a good -> balance : 1
a good balance -> between : 1
good balance between -> abstraction : 1
balance between abstraction -> mechanisms : 1
between abstraction mechanisms -> supported : 1
abstraction mechanisms supported -> by : 1
mechanisms supported by -> the : 1
language and the -> ability : 1
and the ability -> to : 2
ability to access -> resources : 1
to access resources -> to : 1
access resources to -> write : 1
resources to write -> system : 1
to write system -> exposes : 1
write system exposes -> atomic : 1
system exposes atomic -> types : 1
exposes atomic types -> and : 1
atomic types and -> a : 1
atomic types and -> atomic : 2
types and a -> set : 1
and a set -> of : 1
set of associated -> operations : 1
of associated operations -> to : 1
associated operations to -> have : 1
operations to have -> control : 1
to have control -> over : 1
have control over -> the : 1
over the execution -> of : 1
standard committee has -> published : 1
committee has published -> detailed : 1
has published detailed -> semantics : 1
published detailed semantics -> of : 1
detailed semantics of -> the : 1
semantics of the -> memory : 1
semantics of the -> in : 1
semantics of the -> library : 1
the memory and -> the : 1
memory and the -> language : 1
language has a -> set : 1
has a set -> of : 1
set of libraries -> that : 1
of libraries that -> help : 1
libraries that help -> programmers : 1
that help programmers -> to : 1
help programmers to -> exploit : 1
programmers to exploit -> the : 1
to exploit the -> previous : 1
exploit the previous -> we : 1
previous we learned -> how : 3
previous we learned -> the : 1
to synchronize actions -> in : 1
synchronize actions in -> separate : 1
actions in separate -> threads : 1
in separate threads -> using : 1
separate threads using -> condition : 1
threads using condition -> this : 1
using condition this -> chapter : 1
condition this chapter -> discusses : 1
this chapter discusses -> the : 1
chapter discusses the -> facilities : 1
library to perform -> parallelism : 1
to perform parallelism -> using : 1
perform parallelism using -> in : 1
parallelism using in -> this : 1
using in this -> we : 1
using in this -> instead : 1
we will parallelism -> in : 1
will parallelism in -> memory : 1
parallelism in memory -> types : 1
parallelism in memory -> access : 1
in memory types -> and : 1
memory types and -> atomic : 1
types and atomic -> operations : 2
types and atomic -> operators : 1
and atomic operations -> and : 1
and atomic operations -> that : 1
atomic operations and -> memory : 1
operations and memory -> to : 1
and memory to -> write : 1
memory to write -> a : 1
a data parallelism -> in : 1
data parallelism in -> is : 1
in is a -> computation : 1
is a computation -> that : 1
a computation that -> can : 1
computation that can -> be : 1
can be potentially -> executed : 1
be potentially executed -> concurrently : 1
potentially executed concurrently -> with : 1
executed concurrently with -> other : 1
concurrently with other -> a : 1
concurrently with other -> tasks : 1
with other a -> thread : 1
other a thread -> is : 1
is a representation -> of : 1
a representation of -> a : 1
representation of a -> in : 1
of a in -> the : 1
how to execute -> a : 1
to execute a -> task : 2
execute a task -> concurrently : 1
execute a task -> like : 1
a task concurrently -> with : 1
task concurrently with -> other : 1
with other tasks -> launched : 1
other tasks launched -> by : 1
tasks launched by -> constructing : 1
launched by constructing -> object : 1
by constructing object -> with : 1
constructing object with -> the : 1
with the task -> as : 1
with the task -> launched : 1
the task as -> its : 1
task as its -> argument : 1
task as its -> template : 1
as its argument -> to : 1
as its argument -> and : 1
its argument to -> the : 1
to the a -> task : 1
to the a -> basic : 1
the a task -> can : 1
a task can -> be : 1
task can be -> any : 1
can be any -> callable : 1
can be any -> of : 1
be any callable -> object : 1
callable object such -> as : 1
object such as -> a : 1
such as a -> or : 1
as a or -> a : 1
as a or -> the : 1
a or a -> but : 1
a or a -> active : 1
or a but -> this : 1
a but this -> approach : 1
but this approach -> of : 1
this approach of -> executing : 1
approach of executing -> a : 1
of executing a -> function : 1
executing a function -> concurrently : 1
a function concurrently -> using : 1
function concurrently using -> is : 1
concurrently using is -> called : 1
using is called -> a : 1
a the preferred -> choice : 1
the preferred choice -> for : 1
preferred choice for -> concurrent : 1
choice for concurrent -> execution : 1
for concurrent execution -> is : 1
concurrent execution is -> a : 1
execution is a -> and : 1
is a and -> this : 1
is a and -> qml : 1
is a and -> can : 1
a and this -> will : 1
and this will -> be : 2
discussed in this -> the : 3
this the advantage -> of : 1
the advantage of -> a : 1
advantage of a -> approach : 1
of a approach -> over : 1
a approach over -> a : 1
approach over a -> approach : 1
over a approach -> is : 1
a approach is -> to : 1
approach is to -> operate : 1
is to operate -> at : 1
to operate at -> the : 1
operate at the -> conceptual : 1
at the conceptual -> level : 1
the conceptual level -> of : 1
conceptual level of -> tasks : 1
level of tasks -> rather : 1
of tasks rather -> than : 1
tasks rather than -> directly : 1
rather than directly -> at : 1
than directly at -> the : 1
directly at the -> lower : 1
at the lower -> level : 1
the lower level -> of : 1
lower level of -> threads : 1
level of threads -> and : 1
of threads and -> parallelism : 1
threads and parallelism -> is : 1
parallelism is achieved -> by : 1
achieved by following -> standard : 1
by following standard -> library : 1
following standard library -> and : 1
standard library and -> promise : 1
library and promise -> for : 1
and promise for -> returning : 1
promise for returning -> a : 1
for returning a -> value : 1
for returning a -> for : 1
returning a value -> from : 1
a value from -> a : 1
value from a -> task : 1
from a task -> associated : 1
a task associated -> with : 1
task associated with -> a : 1
with a separate -> to : 1
a separate to -> help : 1
separate to help -> launch : 1
to help launch -> tasks : 1
help launch tasks -> and : 1
launch tasks and -> provide : 1
tasks and provide -> a : 1
and provide a -> mechanism : 1
provide a mechanism -> for : 1
provide a mechanism -> to : 1
a mechanism for -> returning : 1
a mechanism for -> the : 1
mechanism for returning -> a : 1
returning a for -> launching : 1
a for launching -> a : 1
for launching a -> task : 1
launching a task -> similar : 1
a task similar -> to : 1
task similar to -> a : 1
similar to a -> function : 1
similar to a -> single : 1
similar to a -> or : 1
to a function -> and : 1
to a function -> they : 1
a function and -> tasks : 1
a function and -> has : 1
function and tasks -> often : 1
and tasks often -> behave : 1
tasks often behave -> like : 1
often behave like -> a : 1
behave like a -> data : 1
like a data -> channel : 1
a data channel -> of : 1
data channel of -> the : 1
channel of the -> sending : 1
of the sending -> often : 1
the sending often -> called : 1
sending often called -> sends : 1
often called sends -> data : 1
called sends data -> to : 1
sends data to -> a : 1
data to a -> receiving : 1
to a receiving -> often : 1
a receiving often -> called : 1
receiving often called -> the : 1
often called the -> important : 1
called the important -> notion : 1
the important notion -> about : 1
important notion about -> futures : 1
notion about futures -> and : 1
about futures and -> promises : 1
futures and promises -> is : 1
futures and promises -> work : 1
futures and promises -> in : 1
futures and promises -> with : 1
and promises is -> that : 1
promises is that -> they : 1
is that they -> enable : 1
that they enable -> a : 1
they enable a -> transfer : 1
enable a transfer -> of : 1
a transfer of -> values : 1
transfer of values -> between : 1
transfer of values -> is : 1
of values between -> two : 1
values between two -> tasks : 1
between two tasks -> without : 1
two tasks without -> the : 1
tasks without the -> explicit : 1
without the explicit -> use : 1
the explicit use -> of : 1
explicit use of -> a : 1
explicit use of -> or : 1
use of a -> the : 1
use of a -> message : 1
a the transfer -> of : 1
the transfer of -> values : 1
of values is -> handled : 1
values is handled -> by : 1
is handled by -> the : 1
by the system -> the : 1
the system the -> basic : 1
the system the -> lifetimes : 1
system the basic -> concept : 1
the basic concept -> behind : 1
basic concept behind -> when : 1
concept behind when -> a : 1
behind when a -> task : 1
when a task -> wants : 1
a task wants -> to : 1
task wants to -> pass : 1
wants to pass -> a : 1
to pass a -> value : 1
pass a value -> into : 1
a value into -> it : 1
value into it -> puts : 1
into it puts -> the : 1
it puts the -> value : 1
puts the value -> into : 1
the value into -> a : 2
the value into -> the : 1
value into a -> standard : 1
value into a -> running : 1
value into a -> seed : 1
standard library makes -> sure : 1
library makes sure -> that : 1
makes sure that -> the : 1
makes sure that -> thread : 1
makes sure that -> destructors : 1
sure that the -> future : 1
that the future -> associated : 1
the future associated -> with : 1
future associated with -> this : 1
associated with this -> promise : 1
associated with this -> it : 1
with this promise -> gets : 1
this promise gets -> this : 1
promise gets this -> the : 1
gets this the -> other : 1
this the other -> task : 1
the other task -> can : 1
other task can -> read : 1
task can read -> this : 1
can read this -> value : 1
read this value -> from : 1
this value from -> this : 1
value from this -> following : 1
from this following -> diagram : 1
this following diagram -> has : 1
following diagram has -> to : 1
diagram has to -> be : 1
to be read -> from : 1
be read from -> the : 1
read from the -> right : 1
read from the -> same : 1
read from the -> things : 1
from the right -> to : 1
the right to -> the : 1
right to the -> future : 1
to the future -> comes : 1
the future comes -> in : 1
future comes in -> handy : 1
comes in handy -> if : 1
comes in handy -> in : 1
in handy if -> a : 1
handy if a -> calling : 1
if a calling -> thread : 1
a calling thread -> needs : 1
calling thread needs -> to : 1
a specific the -> future : 1
a specific the -> lambda : 1
specific the future -> representing : 1
the future representing -> this : 1
future representing this -> event : 1
representing this event -> makes : 1
this event makes -> itself : 1
event makes itself -> available : 1
makes itself available -> to : 1
itself available to -> the : 1
to the calling -> and : 1
the calling and -> the : 1
calling and the -> calling : 1
and the calling -> thread : 1
the calling thread -> can : 1
calling thread can -> access : 1
thread can access -> the : 1
can access the -> value : 2
access the value -> once : 1
access the value -> associated : 1
access the value -> you : 1
the value once -> the : 1
value once the -> future : 1
once the future -> is : 1
the future is -> ready : 1
future is ready -> a : 1
is ready a -> value : 1
ready a value -> is : 1
a value is -> set : 1
a value is -> if : 1
value is set -> to : 1
is set to -> a : 2
is set to -> promise : 1
is set to -> handling : 1
is set to -> center : 1
is set to -> allow : 1
set to a -> corresponding : 1
set to a -> thick : 1
to a corresponding -> during : 1
a corresponding during -> its : 1
corresponding during its -> a : 1
during its a -> future : 1
its a future -> may : 1
a future may -> have : 1
future may have -> data : 1
may have data -> associated : 1
have data associated -> with : 1
data associated with -> it : 1
data associated with -> the : 1
data associated with -> even : 1
associated with it -> or : 1
associated with it -> using : 1
with it or -> once : 1
it or once -> the : 1
or once the -> event : 1
once the event -> data : 1
the event data -> will : 1
the event data -> to : 1
event data will -> be : 1
data will be -> available : 1
data will be -> assembled : 1
data will be -> lost : 1
be available in -> the : 1
in the future -> and : 1
the future and -> it : 1
the future and -> handle : 1
future and it -> be : 1
and it be -> template : 1
it be template -> classes : 1
be template classes -> associated : 1
template classes associated -> with : 1
classes associated with -> parallelism : 1
associated with parallelism -> are : 1
with parallelism are -> declared : 1
parallelism are declared -> inside : 1
library header there -> are : 1
header there are -> two : 1
are two sorts -> of : 1
two sorts of -> futures : 1
sorts of futures -> available : 1
of futures available -> in : 1
futures available in -> the : 1
the standard unique -> futures : 1
standard unique futures -> and : 1
unique futures and -> shared : 1
futures and shared -> futures : 1
and shared futures -> you : 1
shared futures you -> can : 1
futures you can -> correlate : 1
you can correlate -> these : 1
can correlate these -> with : 1
correlate these with -> the : 1
these with the -> smart : 1
with the smart -> pointers : 1
the smart pointers -> and : 1
smart pointers and -> the : 1
pointers and the -> instance : 1
and the instance -> refers : 1
the instance refers -> to : 1
instance refers to -> the : 1
refers to the -> one : 1
to the one -> and : 1
the one and -> only : 1
one and only -> instance : 1
and only instance -> of : 1
only instance of -> the : 1
of the associated -> on : 1
the associated on -> the : 1
associated on the -> multiple : 1
on the multiple -> instances : 1
the multiple instances -> of : 1
multiple instances of -> may : 1
multiple instances of -> the : 1
instances of may -> point : 1
of may point -> to : 1
may point to -> the : 1
point to the -> same : 1
point to the -> third : 1
to the same -> in : 1
the same in -> the : 1
same in the -> case : 1
the case all -> the : 1
case all the -> instances : 1
all the instances -> associated : 1
the instances associated -> with : 1
instances associated with -> a : 1
a common event -> will : 1
common event will -> become : 1
event will become -> ready : 1
will become ready -> at : 1
become ready at -> the : 1
ready at the -> same : 1
same time and -> they : 1
and they may -> access : 1
they may access -> the : 1
may access the -> data : 1
the data associated -> with : 1
the the template -> parameter : 1
the template parameter -> is : 1
template parameter is -> the : 1
parameter is the -> associated : 1
is the associated -> and : 1
the associated and -> template : 1
associated and template -> specifications : 1
and template specifications -> should : 1
template specifications should -> be : 1
specifications should be -> used : 1
be used if -> there : 1
used if there -> is : 1
is no data -> associated : 1
no data associated -> with : 1
associated with even -> though : 1
with even though -> data : 1
with even though -> there : 1
even though data -> communication : 1
though data communication -> between : 1
data communication between -> threads : 1
communication between threads -> is : 1
threads is managed -> internally : 1
is managed internally -> by : 1
managed internally by -> the : 1
internally by the -> future : 1
by the future -> objects : 1
the future objects -> themselves : 1
future objects themselves -> provide : 1
objects themselves provide -> synchronized : 1
themselves provide synchronized -> multiple : 1
provide synchronized multiple -> must : 1
synchronized multiple must -> be : 1
multiple must be -> protected : 1
must be protected -> with : 1
be protected with -> mutexes : 1
protected with mutexes -> or : 1
with mutexes or -> other : 1
mutexes or other -> synchronization : 1
or other synchronization -> classes : 1
other synchronization classes -> and : 1
synchronization classes and -> work : 1
classes and work -> in : 1
and work in -> pairs : 1
to separate task -> invocation : 1
separate task invocation -> and : 1
task invocation and -> wait : 1
wait for for -> an : 1
for for an -> we : 1
for an we -> can : 1
an we can -> access : 1
an we can -> use : 1
we can access -> the : 1
we can access -> these : 1
the value associated -> with : 2
value associated with -> it : 1
value associated with -> a : 1
value associated with -> the : 1
with it using -> the : 1
it using the -> similarly : 1
using the similarly -> for : 1
the similarly for -> there : 1
similarly for there -> are : 1
for there are -> two : 1
are two put -> operation : 1
two put operation -> functions : 1
put operation functions -> available : 1
operation functions available -> with : 1
functions available with -> it : 1
available with it -> and : 1
with it and -> to : 1
it and to -> match : 1
and to match -> the : 1
to match the -> for : 1
match the for -> a : 1
the for a -> promise : 1
the for a -> class : 1
for a promise -> you : 1
a promise you -> can : 1
promise you can -> either : 1
you can either -> give : 1
can either give -> it : 1
either give it -> a : 1
give it a -> value : 1
it a value -> by : 1
a value by -> or : 1
value by or -> pass : 1
by or pass -> an : 1
or pass an -> exception : 1
pass an exception -> to : 1
an exception to -> it : 1
exception to it -> using : 1
to it using -> for : 1
it using for -> the : 1
using for the -> following : 1
using for the -> launch : 1
the following pseudo -> code : 1
following pseudo code -> helps : 1
pseudo code helps -> you : 1
code helps you -> see : 1
helps you see -> how : 1
how the values -> are : 1
the values are -> set : 1
the values are -> int : 1
the values are -> added : 1
values are set -> in : 1
set in the -> promise : 1
set in the -> corresponding : 1
set in the -> mouse : 1
in the promise -> and : 1
the promise and -> how : 1
promise and how -> things : 1
and how things -> are : 1
how things are -> consumed : 1
things are consumed -> in : 1
are consumed in -> the : 1
consumed in the -> function : 1
the function where -> invocation : 1
function where invocation -> to : 1
where invocation to -> is : 1
invocation to is -> invoked : 1
to is invoked -> promise : 1
is invoked promise -> associated : 1
invoked promise associated -> with : 1
promise associated with -> the : 1
the task launched -> void : 1
task launched void -> try : 1
launched void try -> t : 1
launched void try -> an : 1
void try t -> can : 1
try t can -> be : 1
t can be -> retrieved : 1
can be retrieved -> by : 2
can be retrieved -> later : 1
be retrieved by -> can : 1
be retrieved by -> at : 1
retrieved by can -> be : 1
by can be -> retrieved : 1
retrieved by at -> the : 1
by at the -> future : 1
at the future -> when : 1
the future when -> we : 1
future when we -> call : 1
when we call -> the : 1
we call the -> get : 1
we call the -> operator : 1
we call the -> method : 1
call the get -> will : 1
the get will -> propagate : 1
get will propagate -> the : 1
will propagate the -> exception : 1
propagate the exception -> the : 1
the exception the -> preceding : 1
exception the preceding -> the : 1
preceding the of -> type : 1
the of type -> is : 1
of type is -> set : 1
type is set -> to : 1
set to promise -> after : 1
to promise after -> processing : 1
promise after processing -> and : 1
after processing and -> obtaining : 1
processing and obtaining -> a : 1
and obtaining a -> if : 1
obtaining a if -> any : 1
a if any -> exception : 1
if any exception -> happens : 1
any exception happens -> during : 1
exception happens during -> the : 1
during the the -> exception : 1
the the exception -> is : 1
the exception is -> also : 1
exception is also -> set : 1
is also set -> to : 1
also set to -> see : 1
set to see -> how : 1
to see how -> to : 1
to see how -> the : 1
how to access -> the : 1
the value you -> future : 1
value you future -> corresponding : 1
you future corresponding -> to : 1
future corresponding to -> task : 1
corresponding to task -> already : 1
to task already -> launched : 1
task already launched -> void : 1
already launched void -> try : 1
void try an -> exception : 1
try an exception -> will : 1
an exception will -> be : 1
exception will be -> thrown : 1
thrown if the -> corresponding : 1
if the corresponding -> promise : 1
the corresponding promise -> had : 1
the corresponding promise -> is : 1
corresponding promise had -> set : 1
promise had set -> an : 1
had set an -> exception : 1
set an exception -> retrieve : 1
an exception retrieve -> the : 1
exception retrieve the -> value : 1
retrieve the value -> sets : 1
retrieve the value -> and : 1
the value sets -> by : 1
value sets by -> the : 1
sets by the -> t : 1
by the t -> result : 1
the t result -> handle : 1
t result handle -> exception : 1
result handle exception -> the : 1
handle exception the -> value : 1
exception the value -> set : 1
the value set -> in : 1
value set in -> the : 1
in the corresponding -> promise : 1
corresponding promise is -> accessed : 1
promise is accessed -> using : 1
is accessed using -> the : 1
accessed using the -> future : 1
using the future -> passed : 1
the future passed -> as : 1
future passed as -> an : 1
as an associated -> with : 1
an associated with -> retrieves : 1
associated with retrieves -> the : 1
with retrieves the -> value : 1
retrieves the value -> stored : 1
the value stored -> during : 1
value stored during -> the : 1
stored during the -> execution : 1
call to must -> be : 1
to must be -> prepared : 1
must be prepared -> to : 1
be prepared to -> catch : 1
prepared to catch -> the : 1
to catch the -> exception : 1
catch the exception -> transmitted : 1
the exception transmitted -> through : 1
exception transmitted through -> the : 1
transmitted through the -> future : 1
through the future -> and : 1
future and handle -> after : 1
and handle after -> we : 1
handle after we -> will : 1
after we will -> show : 1
we will show -> a : 1
we will show -> how : 1
will show a -> complete : 1
show a complete -> example : 1
a complete example -> where : 1
complete example where -> futures : 1
example where futures -> and : 1
where futures and -> promises : 1
and promises work -> together : 1
promises work together -> in : 1
together in discuss -> how : 1
in discuss how -> we : 1
discuss how we -> get : 1
how we get -> a : 1
we get a -> return : 1
we get a -> notification : 1
get a return -> value : 1
a return value -> associated : 1
return value associated -> with : 1
with a future -> into : 1
a future into -> your : 1
future into your -> code : 1
into your code -> that : 1
your code that -> needs : 1
code that needs -> the : 1
that needs the -> is : 1
needs the is -> a : 1
the is a -> template : 1
the is a -> callable : 1
the is a -> functional : 1
template class that -> is : 1
template class that -> provides : 1
class that is -> available : 1
to achieve parallelism -> with : 1
achieve parallelism with -> the : 1
parallelism with the -> help : 1
help of futures -> and : 1
of futures and -> by : 1
futures and by -> setting : 1
and by setting -> up : 1
by setting up -> futures : 1
setting up futures -> and : 1
up futures and -> promises : 1
and promises in -> it : 1
promises in it -> simplifies : 1
in it simplifies -> setting : 1
it simplifies setting -> up : 1
simplifies setting up -> a : 1
setting up a -> task : 1
up a task -> without : 1
a task without -> any : 1
task without any -> explicit : 1
without any explicit -> locks : 1
any explicit locks -> for : 1
explicit locks for -> sharing : 1
locks for sharing -> the : 1
for sharing the -> a : 1
sharing the a -> instance : 1
a instance provides -> a : 1
instance provides a -> wrapper : 1
provides a wrapper -> over : 1
a wrapper over -> to : 1
a wrapper over -> a : 1
a wrapper over -> class : 1
wrapper over to -> put : 1
wrapper over to -> implement : 1
over to put -> the : 1
to put the -> return : 1
to put the -> reactive : 1
put the return -> value : 1
the return value -> or : 2
return value or -> exception : 1
return value or -> a : 1
value or exception -> caught : 1
value or exception -> into : 1
or exception caught -> into : 1
exception caught into -> a : 1
caught into a -> the : 1
into a the -> member : 1
a the member -> function : 1
the member function -> in : 1
function in will -> give : 1
in will give -> you : 1
will give you -> the : 1
give you the -> future : 1
you the future -> instance : 1
the future instance -> associated : 1
the future instance -> is : 1
future instance associated -> with : 1
instance associated with -> the : 1
with the corresponding -> look : 1
the corresponding look -> at : 2
corresponding look at -> an : 2
an example that -> uses : 2
an example that -> demonstrates : 2
example that uses -> a : 1
example that uses -> int : 1
that uses a -> packaged : 1
uses a packaged -> task : 1
a packaged task -> to : 1
packaged task to -> find : 1
task to find -> the : 1
find the sum -> of : 1
the sum of -> all : 2
the sum of -> elements : 2
the sum of -> numbers : 1
the sum of -> of : 1
sum of all -> elements : 2
of all elements -> in : 1
of all elements -> from : 1
all elements in -> a : 1
elements in a -> vector : 2
in a vector -> working : 1
in a vector -> int : 1
a vector working -> of : 1
vector working of -> promise : 1
working of promise -> is : 1
of promise is -> deep : 1
promise is deep -> inside : 1
is deep inside -> the : 1
deep inside the -> implementation : 1
inside the implementation -> of : 1
implementation of function -> to : 1
of function to -> calculate : 1
function to calculate -> the : 2
to calculate the -> sum : 3
calculate the sum -> of : 3
sum of elements -> in : 2
of elements in -> an : 1
of elements in -> a : 1
of elements in -> stl : 1
elements in an -> integer : 1
in an integer -> vector : 1
an integer vector -> int : 1
integer vector int -> int : 1
vector int int -> sum : 2
int int sum -> return : 2
int sum return -> int : 2
sum return int -> creating : 1
sum return int -> task : 1
return int creating -> a : 1
int creating a -> encapsulates : 1
creating a encapsulates -> a : 1
a encapsulates a -> function : 1
encapsulates a function -> fetch : 1
a function fetch -> associated : 1
function fetch associated -> future : 1
fetch associated future -> from : 2
associated future from -> result : 1
associated future from -> async : 1
future from result -> pass : 1
from result pass -> to : 1
result pass to -> thread : 1
pass to thread -> to : 1
to thread to -> run : 1
to run asynchronously -> fetch : 1
run asynchronously fetch -> the : 1
asynchronously fetch the -> result : 1
fetch the result -> of : 2
the result of -> the : 5
the result of -> as : 1
the result of -> assignment : 1
the result of -> a : 1
result of the -> value : 2
result of the -> assignment : 2
result of the -> computation : 1
of the value -> returned : 2
of the value -> with : 1
the value returned -> by : 2
value returned by -> int : 2
returned by int -> sum : 2
by int sum -> sum : 2
int sum sum -> return : 2
sum sum return -> object : 1
sum sum return -> when : 1
sum return object -> takes : 1
return object takes -> the : 1
object takes the -> type : 1
takes the type -> of : 1
type of task -> as : 1
of task as -> its : 1
as its template -> argument : 1
its template argument -> and : 1
template argument and -> the : 1
argument and the -> function : 1
and the function -> pointer : 1
and the function -> will : 2
and the function -> is : 1
the function pointer -> as : 1
function pointer as -> a : 1
pointer as a -> constructor : 1
as a constructor -> the : 1
a constructor the -> future : 1
constructor the future -> instance : 1
future instance is -> obtained : 1
instance is obtained -> through : 1
is obtained through -> the : 1
obtained through the -> call : 1
through the call -> to : 1
call to function -> of : 1
call to function -> picks : 1
to function of -> the : 1
function of the -> task : 1
function of the -> function : 1
function of the -> application : 1
function of the -> subscribe : 1
function of the -> method : 1
of the task -> the : 1
of the task -> continuation : 1
the task the -> explicit : 1
task the explicit -> is : 1
the explicit is -> used : 1
explicit is used -> since : 1
is used since -> the : 1
used since the -> instances : 1
since the instances -> cannot : 1
the instances cannot -> be : 1
instances cannot be -> this : 1
cannot be this -> is : 1
be this is -> because : 1
is because it -> is : 1
because it is -> a : 1
is a resource -> handle : 1
a resource handle -> and : 1
resource handle and -> is : 1
handle and is -> responsible : 1
and is responsible -> for : 1
is responsible for -> whatever : 1
is responsible for -> responding : 1
responsible for whatever -> resources : 1
for whatever resources -> its : 1
whatever resources its -> task : 1
resources its task -> may : 1
its task may -> a : 1
task may a -> call : 1
may a call -> to : 1
to function picks -> up : 1
function picks up -> the : 1
picks up the -> result : 1
up the result -> from : 1
the result from -> the : 2
result from the -> task : 2
result from the -> lambda : 1
from the task -> and : 1
from the task -> that : 1
from the task -> are : 1
the task and -> prints : 1
task and prints -> see : 1
and prints see -> how : 1
prints see how -> can : 1
see how can -> be : 1
how can be -> used : 1
along with return -> instead : 1
with return instead -> of : 1
return instead of -> a : 1
a function a -> lambda : 1
function a lambda -> is : 1
a lambda is -> passed : 1
lambda is passed -> into : 1
is passed into -> the : 2
constructor of as -> you : 1
already seen in -> previous : 1
seen in previous -> for : 1
in previous for -> a : 1
previous for a -> small : 1
for a small -> block : 1
a small block -> of : 1
small block of -> code : 1
of code to -> run : 1
code to run -> lambdas : 1
to run lambdas -> come : 1
run lambdas come -> in : 1
lambdas come in -> the : 1
in the primary -> notion : 1
in the primary -> thread : 1
the primary notion -> behind : 1
primary notion behind -> futures : 1
notion behind futures -> is : 1
behind futures is -> to : 1
futures is to -> be : 1
is to be -> able : 1
to be able -> to : 1
be able to -> get : 1
be able to -> compare : 1
be able to -> block : 1
be able to -> see : 1
able to get -> results : 1
to get results -> without : 1
get results without -> having : 1
results without having -> any : 1
without having any -> concern : 1
having any concern -> for : 1
any concern for -> the : 1
concern for the -> mechanisms : 1
for the mechanisms -> for : 1
the mechanisms for -> managing : 1
mechanisms for managing -> these : 1
for managing these -> two : 1
managing these two -> operations : 1
these two operations -> are : 1
two operations are -> running : 1
operations are running -> in : 1
are running in -> two : 1
running in two -> different : 1
in two different -> threads : 1
in two different -> int : 1
two different threads -> and : 1
different threads and -> thus : 1
threads and thus -> are : 1
and thus are -> provides : 1
thus are provides -> a : 1
are provides a -> mechanism : 1
provides a mechanism -> to : 1
mechanism to execute -> a : 1
a task like -> a : 1
task like a -> function : 1
like a function -> that : 1
function that might -> or : 1
that might or -> might : 1
might or might -> not : 1
or might not -> execute : 1
might not execute -> in : 1
not execute in -> we : 1
execute in we -> are : 1
in we are -> referring : 1
we are referring -> which : 1
are referring which -> manages : 1
referring which manages -> the : 1
which manages the -> threading : 1
which manages the -> resources : 1
manages the threading -> detail : 1
the threading detail -> takes : 1
threading detail takes -> a : 1
detail takes a -> callable : 1
takes a callable -> object : 1
a callable object -> as : 1
callable object as -> its : 1
object as its -> argument : 1
its argument and -> returns : 1
argument and returns -> an : 1
and returns an -> will : 1
returns an will -> store : 1
an will store -> the : 1
store the result -> or : 1
store the result -> which : 1
the result or -> exception : 1
result or exception -> from : 1
or exception from -> the : 1
exception from the -> task : 1
exception from the -> source : 1
the task that -> has : 1
the task that -> gets : 1
task that has -> been : 1
that has been -> rewrite : 1
that has been -> aggregated : 1
has been rewrite -> our : 1
been rewrite our -> previous : 1
rewrite our previous -> example : 1
our previous example -> to : 1
previous example to -> calculate : 1
example to calculate -> the : 1
all elements from -> a : 1
elements from a -> vector : 1
from a vector -> using : 1
a vector using -> function : 1
a vector using -> namespace : 1
vector using function -> to : 1
using function to -> calculate : 1
a vector int -> int : 1
return int task -> launch : 1
int task launch -> using : 1
task launch using -> fetch : 1
launch using fetch -> the : 1
using fetch the -> result : 1
sum return when -> using : 1
return when using -> for : 1
when using for -> the : 1
for the launch -> of : 1
the launch of -> a : 1
launch of a -> task : 1
of a task -> and : 1
a task and -> fetching : 1
task and fetching -> result : 1
and fetching result -> from : 1
fetching result from -> the : 1
the task are -> following : 1
task are following -> straightforward : 1
are following straightforward -> with : 1
following straightforward with -> task : 1
straightforward with task -> in : 1
with task in -> the : 1
task in the -> preceding : 1
the preceding is -> taking : 1
the preceding is -> a : 1
preceding is taking -> three : 1
is taking three -> the : 1
taking three the -> launch : 1
three the launch -> policy : 1
the launch policy -> of : 1
launch policy of -> task : 1
policy of task -> meaning : 1
of task meaning -> that : 1
task meaning that -> executes : 1
meaning that executes -> the : 1
that executes the -> task : 1
executes the task -> on : 1
the task on -> a : 1
task on a -> new : 1
on a new -> thread : 1
new thread of -> spawn : 1
new thread of -> which : 1
thread of spawn -> a : 1
of spawn a -> new : 1
spawn a new -> but : 1
a new but -> is : 1
new but is -> if : 1
but is if -> both : 1
is if both -> the : 1
if both the -> flags : 1
both the flags -> are : 1
the flags are -> set : 1
flags are set -> as : 1
are set as -> in : 1
set as in -> and : 1
as in and -> it : 1
it is up -> to : 1
is up to -> the : 1
up to the -> implementation : 2
up to the -> internal : 1
the implementation as -> to : 1
implementation as to -> whether : 1
as to whether -> to : 1
to whether to -> perform : 1
whether to perform -> an : 1
to perform an -> asynchronous : 1
to perform an -> action : 1
perform an asynchronous -> execution : 1
an asynchronous execution -> or : 1
asynchronous execution or -> lazy : 1
execution or lazy -> if : 1
or lazy if -> you : 1
lazy if you -> explicitly : 1
if you explicitly -> pass : 1
you explicitly pass -> any : 1
explicitly pass any -> launch : 1
pass any launch -> policy : 1
any launch policy -> into : 1
launch policy into -> it : 1
policy into it -> is : 1
into it is -> again : 1
it is again -> up : 1
is again up -> to : 1
again up to -> the : 1
the implementation to -> choose : 1
implementation to choose -> the : 1
to choose the -> method : 1
to choose the -> appropriate : 1
choose the method -> of : 1
method of second -> argument : 1
of second argument -> to : 1
to the is -> a : 1
is a callable -> and : 1
a callable and -> it : 1
callable and it -> can : 1
it can be -> a : 1
it can be -> as : 1
can be a -> function : 1
can be a -> potential : 1
can be a -> composite : 2
can be a -> source : 1
can be a -> microservice : 1
be a function -> function : 1
a function function -> or : 1
function function or -> a : 1
or a in -> this : 1
is the task -> that : 1
task that gets -> executed : 1
that gets executed -> in : 1
in a separate -> third : 1
a separate third -> argument : 1
separate third argument -> is : 1
third argument is -> the : 1
argument is the -> input : 1
is the input -> parameter : 1
the input parameter -> to : 1
the input parameter -> is : 1
input parameter to -> the : 1
parameter to the -> that : 1
to the that -> is : 1
the that is -> a : 1
the that is -> why : 1
a variadic argument -> and : 1
variadic argument and -> it : 1
argument and it -> can : 1
argument and it -> is : 1
it can pass -> the : 1
can pass the -> number : 1
pass the number -> of : 1
number of parameters -> required : 1
of parameters required -> for : 1
parameters required for -> a : 1
required for a -> task : 1
for a task -> callable : 1
a task callable -> see : 1
task callable see -> how : 1
callable see how -> and : 1
see how and -> lambda : 1
how and lambda -> go : 1
and lambda go -> together : 1
lambda go together -> for : 1
go together for -> the : 1
together for the -> same : 1
for the same -> fetch : 1
the same fetch -> associated : 1
same fetch associated -> future : 1
future from async -> return : 1
from async return -> this : 1
async return this -> the : 1
return this the -> callable : 1
this the callable -> object : 1
the callable object -> argument : 1
callable object argument -> has : 1
object argument has -> a : 1
argument has a -> lambda : 1
has a lambda -> function : 1
lambda function inside -> which : 1
function inside which -> returns : 1
inside which returns -> the : 1
returns the result -> of : 1
result of as -> simple : 1
of as simple -> operations : 1
as simple operations -> along : 1
simple operations along -> with : 1
operations along with -> the : 1
with the lambda -> beautify : 1
the lambda beautify -> the : 1
lambda beautify the -> overall : 1
beautify the overall -> appearance : 1
the overall appearance -> and : 1
overall appearance and -> improve : 1
appearance and improve -> you : 1
and improve you -> have : 1
improve you have -> to : 1
you have to -> think : 1
you have to -> follow : 1
have to think -> about : 1
to think about -> threads : 1
think about threads -> and : 1
about threads and -> but : 1
threads and but -> just : 1
and but just -> think : 1
but just think -> in : 1
just think in -> terms : 1
think in terms -> of : 1
in terms of -> tasks : 1
in terms of -> control : 2
in terms of -> data : 1
in terms of -> we : 1
terms of tasks -> that : 1
of tasks that -> do : 1
tasks that do -> the : 1
that do the -> computations : 1
do the computations -> and : 1
the computations and -> that : 1
computations and that -> you : 1
and that you -> know : 1
that you know -> how : 1
you know how -> many : 1
know how many -> threads : 1
how many threads -> will : 1
how many threads -> to : 1
many threads will -> be : 1
threads will be -> used : 1
be used because -> up : 1
used because up -> to : 1
because up to -> the : 1
the internal implementation -> to : 1
internal implementation to -> decide : 1
implementation to decide -> based : 1
to decide based -> on : 1
decide based on -> the : 1
on the system -> resources : 1
the system resources -> available : 1
system resources available -> at : 1
resources available at -> the : 1
available at the -> time : 1
available at the -> github : 1
at the time -> of : 1
time of it -> checks : 1
of it checks -> for : 1
it checks for -> the : 1
checks for the -> idle : 1
for the idle -> cores : 1
the idle cores -> that : 1
idle cores that -> are : 1
cores that are -> available : 1
that are available -> before : 1
that are available -> in : 2
are available before -> deciding : 1
available before deciding -> how : 1
before deciding how -> many : 1
deciding how many -> threads : 1
many threads to -> this : 1
threads to this -> points : 1
to this points -> to : 1
this points to -> the : 1
points to the -> obvious : 1
points to the -> first : 1
points to the -> third : 1
points to the -> tail : 1
to the obvious -> limitation : 1
the obvious limitation -> with : 1
obvious limitation with -> in : 1
limitation with in -> that : 1
with in that -> it : 1
in that it -> needs : 1
that it needs -> to : 1
it needs to -> be : 1
it needs to -> process : 1
needs to be -> employed : 1
needs to be -> noted : 1
needs to be -> added : 1
needs to be -> filtered : 1
needs to be -> as : 1
needs to be -> studied : 1
needs to be -> processed : 1
to be employed -> for : 1
be employed for -> tasks : 1
employed for tasks -> that : 1
for tasks that -> share : 1
tasks that share -> resources : 1
that share resources -> needing : 1
share resources needing -> memory : 1
resources needing memory -> classic : 1
needing memory classic -> was : 1
memory classic was -> essentially : 1
classic was essentially -> a : 1
was essentially a -> single : 1
essentially a single -> threaded : 1
a single threaded -> even : 1
single threaded even -> though : 1
threaded even though -> people : 1
even though people -> were : 1
though people were -> writing : 1
people were writing -> multithread : 1
were writing multithread -> programs : 1
writing multithread programs -> in : 1
multithread programs in -> they : 1
programs in they -> were : 1
in they were -> using : 1
they were using -> respective : 1
were using respective -> platform : 1
using respective platform -> threading : 1
respective platform threading -> facilities : 1
platform threading facilities -> to : 1
threading facilities to -> write : 1
facilities to write -> modern : 1
write modern can -> be : 1
modern can be -> considered : 1
be considered a -> concurrent : 1
be considered a -> coupled : 1
be considered a -> kind : 1
considered a concurrent -> programming : 1
concurrent programming the -> language : 1
programming the language -> standard : 1
language standard provides -> a : 1
standard provides a -> standard : 1
a standard thread -> and : 1
standard thread and -> task : 1
thread and task -> mechanism : 1
and task mechanism -> we : 1
task mechanism we -> have : 1
mechanism we have -> already : 1
we have already -> with : 1
we have already -> covered : 3
we have already -> seen : 1
we have already -> demonstrated : 1
have already with -> the : 1
already with the -> help : 1
help of standard -> since : 1
of standard since -> it : 1
standard since it -> is : 1
is a part -> of : 1
a part of -> the : 2
the standard the -> language : 1
standard the language -> specification : 1
the language specification -> has : 1
language specification has -> defined : 1
specification has defined -> how : 1
has defined how -> things : 1
defined how things -> should : 1
how things should -> behave : 1
things should behave -> across : 1
should behave across -> the : 1
behave across the -> platform : 1
across the platform -> in : 1
the platform in -> a : 1
platform in a -> precise : 1
in a precise -> having : 1
a precise having -> a : 1
precise having a -> consistent : 1
having a consistent -> behavior : 1
a consistent behavior -> for : 1
consistent behavior for -> and : 1
behavior for and -> so : 1
for and so -> on : 1
is a massive -> challenge : 1
a massive challenge -> that : 1
massive challenge that -> the : 1
challenge that the -> standard : 1
that the standard -> committee : 1
standard committee handled -> really : 1
committee handled really -> the : 1
handled really the -> committee : 1
really the committee -> designed : 1
the committee designed -> and : 1
committee designed and -> specified : 1
designed and specified -> a : 1
and specified a -> standard : 1
specified a standard -> memory : 1
memory model for -> achieving : 1
model for achieving -> consistent : 1
for achieving consistent -> behavior : 1
achieving consistent behavior -> while : 1
consistent behavior while -> the : 1
behavior while the -> program : 1
while the program -> is : 1
the program is -> the : 1
the program is -> shown : 1
the program is -> as : 2
program is the -> memory : 1
is the memory -> model : 1
is the memory -> order : 1
memory model consists -> of : 1
model consists of -> two : 1
consists of two -> which : 1
of two which -> relate : 1
two which relate -> to : 1
which relate to -> how : 1
relate to how -> data : 1
to how data -> is : 1
how data is -> laid : 1
data is laid -> out : 1
is laid out -> in : 1
laid out in -> which : 1
out in which -> deal : 1
in which deal -> with : 1
which deal with -> the : 1
deal with the -> concurrent : 1
deal with the -> topic : 1
with the concurrent -> access : 1
the concurrent access -> of : 1
concurrent access of -> a : 1
access of a -> all : 1
of a all -> data : 1
a all data -> is : 1
all data is -> made : 1
data is made -> up : 1
is made up -> of : 1
made up of -> the : 1
up of the -> language : 1
the language defines -> an : 1
language defines an -> object : 1
defines an object -> as : 1
an object as -> a : 1
object as a -> of : 1
object as a -> there : 1
as a of -> which : 1
a of which -> is : 1
which is defined -> with : 1
is defined with -> its : 1
defined with its -> type : 1
with its type -> and : 1
its type and -> objects : 1
type and objects -> can : 1
and objects can -> be : 1
objects can be -> an : 1
can be an -> instance : 1
can be an -> added : 1
can be an -> issue : 1
be an instance -> of : 2
instance of a -> fundamental : 1
instance of a -> composite : 1
instance of a -> but : 1
instance of a -> which : 1
of a fundamental -> type : 1
a fundamental type -> such : 1
fundamental type such -> as : 1
type such as -> an : 1
such as an -> int : 1
as an int -> or : 1
an int or -> or : 1
int or or -> instances : 1
or or instances -> of : 1
or instances of -> some : 1
instances of some -> objects : 1
of some objects -> may : 1
some objects may -> have : 1
objects may have -> sub : 1
may have sub -> but : 1
have sub but -> others : 1
sub but others -> the : 1
but others the -> key : 1
others the key -> point : 1
the key point -> is : 2
key point is -> that : 1
key point is -> the : 1
point is that -> every : 1
is that every -> variable : 1
that every variable -> is : 1
every variable is -> an : 1
variable is an -> including : 1
is an including -> the : 1
an including the -> objects : 1
including the objects -> of : 1
the objects of -> other : 1
the objects of -> this : 1
objects of other -> and : 1
of other and -> every : 1
other and every -> object : 1
and every object -> occupies : 1
every object occupies -> at : 1
object occupies at -> least : 1
occupies at least -> some : 1
at least some -> memory : 1
least some memory -> take : 1
some memory take -> a : 1
memory take a -> look : 1
look at what -> this : 1
at what this -> has : 1
what this has -> to : 1
this has to -> do : 1
has to do -> with : 2
do with access -> and : 1
with access and -> multithread : 1
access and multithread -> everything : 1
and multithread everything -> hangs : 1
multithread everything hangs -> on : 1
everything hangs on -> those : 1
hangs on those -> memory : 1
on those memory -> if : 1
those memory if -> multiple : 1
memory if multiple -> threads : 1
if multiple threads -> access : 1
multiple threads access -> different : 1
threads access different -> memory : 1
access different memory -> everything : 1
different memory everything -> works : 1
memory everything works -> but : 1
everything works but -> if : 1
works but if -> two : 1
but if two -> threads : 1
if two threads -> access : 1
two threads access -> the : 1
threads access the -> same : 1
access the same -> memory : 1
the same memory -> then : 1
the same memory -> location : 1
same memory then -> you : 1
memory then you -> must : 1
then you must -> be : 1
you must be -> very : 1
you must be -> able : 1
must be very -> as : 1
be very as -> you : 1
very as you -> have : 1
you have seen -> in : 1
have seen in -> concurrency : 1
seen in concurrency -> and : 1
in concurrency and -> parallelism : 6
parallelism in multiple -> threads : 1
in multiple threads -> trying : 1
in multiple threads -> using : 1
multiple threads trying -> to : 1
threads trying to -> read : 1
trying to read -> from : 1
to read from -> the : 1
to read from -> this : 1
from the same -> memory : 1
from the same -> the : 1
same memory location -> introduce : 1
memory location introduce -> no : 1
location introduce no -> but : 1
introduce no but -> as : 1
no but as -> soon : 1
but as soon -> as : 1
soon as any -> thread : 1
as any thread -> tries : 1
any thread tries -> to : 1
thread tries to -> modify : 1
thread tries to -> read : 1
tries to modify -> data : 1
to modify data -> in : 1
modify data in -> a : 1
data in a -> common : 1
data in a -> any : 1
data in a -> json : 1
data in a -> stream : 1
in a common -> memory : 1
a common memory -> chances : 1
common memory chances -> for : 1
memory chances for -> occur : 1
chances for occur -> come : 1
for occur come -> into : 1
occur come into -> the : 1
come into the -> problematic : 1
into the problematic -> race : 1
the problematic race -> conditions : 1
race conditions can -> only : 1
conditions can only -> be : 1
only be avoided -> by : 1
avoided by enforced -> ordering : 1
by enforced ordering -> between : 1
enforced ordering between -> the : 1
enforced ordering between -> multiple : 1
ordering between the -> access : 2
between the access -> in : 2
the access in -> multiple : 1
the access in -> two : 1
access in multiple -> as : 1
in multiple as -> discussed : 1
multiple as discussed -> in : 1
as discussed in -> concurrency : 2
as discussed in -> the : 1
as discussed in -> atomic : 1
discussed in concurrency -> and : 3
in memory access -> using : 1
memory access using -> mutexes : 1
access using mutexes -> is : 1
is a popular -> the : 1
a popular the -> other : 1
popular the other -> way : 1
the other way -> is : 1
other way is -> to : 1
way is to -> leverage : 1
is to leverage -> the : 2
leverage the synchronization -> properties : 1
the synchronization properties -> of : 1
synchronization properties of -> by : 1
properties of by -> enforcing : 1
of by enforcing -> ordering : 1
by enforcing ordering -> between : 1
enforcing ordering between -> the : 1
access in two -> in : 1
in two in -> later : 1
two in later -> sections : 1
in later sections -> of : 1
of this you -> will : 1
of this you -> can : 1
see the use -> of : 2
use of atomic -> operations : 1
use of atomic -> integral : 1
of atomic operations -> to : 1
of atomic operations -> also : 1
of atomic operations -> such : 1
atomic operations to -> enforce : 1
operations to enforce -> operation : 1
to enforce operation -> appears : 1
enforce operation appears -> to : 1
operation appears to -> the : 1
appears to the -> rest : 1
to the rest -> of : 1
to the rest -> the : 1
of the system -> and : 1
of the system -> to : 1
the system and -> occurs : 1
system and occurs -> at : 1
and occurs at -> once : 1
occurs at once -> without : 1
at once without -> being : 1
once without being -> interrupted : 1
without being interrupted -> task : 1
being interrupted task -> switch : 1
interrupted task switch -> happens : 1
task switch happens -> during : 1
switch happens during -> atomic : 1
switch happens during -> a : 1
happens during atomic -> in : 1
during atomic in -> concurrent : 1
atomic in concurrent -> atomicity : 1
in concurrent atomicity -> is : 1
concurrent atomicity is -> a : 1
atomicity is a -> guarantee : 1
is a guarantee -> of : 1
is a guarantee -> against : 1
a guarantee of -> isolation : 1
guarantee of isolation -> from : 1
of isolation from -> concurrent : 1
isolation from concurrent -> and : 1
from concurrent and -> more : 1
concurrent and more -> can : 1
and more can -> be : 1
be read on -> this : 1
read on this -> topic : 1
on this topic -> at : 1
this topic at -> the : 1
topic at the -> wikipedia : 1
at the wikipedia -> article : 1
the wikipedia article -> there : 1
wikipedia article there -> is : 1
article there is -> no : 1
is no enforced -> ordering : 1
no enforced ordering -> between : 1
ordering between multiple -> accesses : 1
between multiple accesses -> to : 1
multiple accesses to -> a : 1
accesses to a -> single : 1
to a single -> memory : 1
to a single -> it : 1
to a single -> mouse : 1
a single memory -> location : 1
single memory location -> from : 1
memory location from -> different : 1
location from different -> one : 1
from different one -> or : 1
different one or -> both : 1
one or both -> accesses : 1
or both accesses -> are : 1
both accesses are -> not : 1
accesses are not -> if : 1
are not if -> there : 1
not if there -> is : 1
is a write -> then : 1
a write then -> it : 1
write then it -> can : 1
then it can -> cause : 1
it can cause -> a : 1
can cause a -> data : 1
cause a data -> race : 1
a data race -> and : 1
data race and -> could : 1
race and could -> lead : 1
an undefined the -> data : 1
undefined the data -> race : 1
the data race -> is : 1
data race is -> a : 1
race is a -> serious : 1
is a serious -> and : 1
a serious and -> it : 1
serious and it -> must : 1
and it must -> be : 1
must be avoided -> at : 1
be avoided at -> all : 1
avoided at all -> the : 1
at all the -> undefined : 1
all the undefined -> behavior : 1
the undefined behavior -> can : 1
undefined behavior can -> be : 1
behavior can be -> avoided : 1
avoided by atomic -> but : 1
by atomic but -> it : 1
atomic but it -> prevent : 1
but it prevent -> the : 1
it prevent the -> race : 1
prevent the race -> the : 1
the race the -> atomic : 1
race the atomic -> operation : 1
the atomic operation -> makes : 1
the atomic operation -> in : 1
the atomic operation -> follows : 1
atomic operation makes -> sure : 1
operation makes sure -> that : 1
sure that thread -> switching : 1
that thread switching -> never : 1
thread switching never -> happens : 1
switching never happens -> when : 1
never happens when -> the : 1
happens when the -> operation : 1
happens when the -> modification : 1
when the operation -> is : 1
the operation is -> going : 1
operation is going -> this : 1
is going this -> is : 1
going this is -> a : 1
a guarantee against -> interleaved : 1
guarantee against interleaved -> access : 1
against interleaved access -> to : 1
interleaved access to -> the : 1
access to the -> atomic : 1
access to the -> communications : 1
to the atomic -> operations : 1
the atomic operations -> guarantee : 1
atomic operations guarantee -> the : 1
operations guarantee the -> preclusion : 1
guarantee the preclusion -> of : 1
the preclusion of -> the : 1
preclusion of the -> interleaved : 1
of the interleaved -> memory : 1
the interleaved memory -> access : 1
interleaved memory access -> but : 1
memory access but -> cannot : 1
access but cannot -> prevent : 1
but cannot prevent -> race : 1
cannot prevent race -> conditions : 1
prevent race conditions -> there : 1
race conditions there -> is : 1
conditions there is -> potential : 1
there is potential -> to : 1
is potential to -> overwrite : 1
potential to overwrite -> modification : 1
to overwrite modification -> a : 1
overwrite modification a -> program : 1
modification a program -> or : 1
program or process -> is : 1
or process is -> in : 1
process is in -> all : 1
is in all -> the : 1
in all the -> threads : 1
all the threads -> in : 1
the system should -> agree : 1
system should agree -> on : 1
should agree on -> the : 1
agree on the -> modification : 1
on the modification -> order : 1
the modification order -> the : 1
modification order the -> every : 1
order the every -> program : 1
the every program -> is : 1
every program is -> executed : 1
every program is -> a : 1
program is executed -> in : 1
is executed in -> an : 1
executed in an -> which : 1
in an which -> involves : 1
an which involves -> the : 1
which involves the -> instruction : 1
involves the instruction -> virtual : 1
the instruction virtual -> and : 1
instruction virtual and -> so : 1
virtual and so -> this : 1
so this modification -> order : 1
this modification order -> is : 1
modification order is -> a : 1
order is a -> between : 1
is a between -> the : 1
is a between -> enqueue : 1
a between the -> programmer : 1
between the programmer -> and : 1
the programmer and -> that : 1
programmer and that -> is : 1
and that is -> defined : 1
that is defined -> by : 1
is defined by -> the : 1
defined by the -> memory : 1
defined by the -> standard : 1
by the memory -> the : 1
the memory the -> system : 1
memory the system -> consists : 1
the system consists -> of : 1
system consists of -> the : 1
consists of the -> compiler : 1
of the compiler -> which : 1
the compiler which -> morphs : 1
compiler which morphs -> the : 1
which morphs the -> program : 1
morphs the program -> into : 1
the program into -> executable : 1
program into executable -> the : 1
into executable the -> which : 1
executable the which -> executes : 1
the which executes -> the : 1
which executes the -> instruction : 1
which executes the -> popular : 1
executes the instruction -> set : 1
the instruction set -> specified : 1
instruction set specified -> in : 1
set specified in -> the : 1
the the and -> associated : 1
the and associated -> states : 1
and associated states -> of : 1
associated states of -> the : 1
states of the -> the : 1
the the contract -> requires : 1
the contract requires -> mandating : 1
contract requires mandating -> the : 1
requires mandating the -> programmer : 1
mandating the programmer -> to : 1
programmer to obey -> certain : 1
to obey certain -> which : 1
obey certain which -> enables : 1
certain which enables -> the : 1
which enables the -> system : 1
enables the system -> to : 1
the system to -> generate : 1
the system to -> qt : 1
system to generate -> a : 1
to generate a -> fully : 1
to generate a -> stream : 1
generate a fully -> optimized : 1
a fully optimized -> this : 1
fully optimized this -> set : 1
optimized this set -> of : 1
this set of -> rules : 1
set of rules -> that : 1
of rules that -> a : 1
rules that a -> programmer : 1
has to conform -> to : 1
conform to while -> writing : 1
to while writing -> code : 1
while writing code -> to : 1
writing code to -> access : 1
code to access -> memory : 1
to access memory -> is : 1
access memory is -> achieved : 1
memory is achieved -> with : 1
is achieved with -> the : 1
achieved with the -> help : 1
help of atomic -> types : 1
of atomic types -> and : 1
of atomic types -> do : 1
atomic operations that -> were : 1
operations that were -> introduced : 1
that were introduced -> in : 1
were introduced in -> the : 1
introduced in the -> standard : 1
the standard operations -> are : 1
standard operations are -> not : 1
operations are not -> only : 1
are not only -> but : 1
not only but -> they : 1
only but they -> create : 1
but they create -> synchronization : 1
they create synchronization -> and : 1
create synchronization and -> order : 1
synchronization and order -> constraints : 1
and order constraints -> on : 1
and order constraints -> to : 1
order constraints on -> the : 1
constraints on the -> compared : 1
on the compared -> to : 1
the compared to -> synchronization : 1
compared to synchronization -> primitives : 1
to synchronization primitives -> and : 1
primitives and condition -> discussed : 1
and condition discussed -> in : 1
condition discussed in -> concurrency : 1
parallelism in you -> can : 1
in you can -> tailor : 1
you can tailor -> synchronizations : 1
can tailor synchronizations -> and : 1
tailor synchronizations and -> order : 1
synchronizations and order -> constraints : 1
order constraints to -> your : 1
constraints to your -> the : 1
to your the -> important : 1
your the important -> take : 1
the important take -> away : 1
important take away -> from : 1
take away from -> the : 1
away from the -> memory : 1
from the memory -> model : 1
memory model is -> even : 1
model is even -> though : 1
is even though -> the : 1
even though the -> language : 1
though the language -> has : 1
language has adopted -> a : 1
has adopted a -> lot : 1
adopted a lot -> of : 1
lot of modern -> programming : 1
of modern programming -> idioms : 1
of modern programming -> and : 1
modern programming idioms -> and : 1
programming idioms and -> language : 1
idioms and language -> as : 1
and language as -> a : 1
language as a -> system : 1
as a system -> has : 1
a system has -> given : 1
system has given -> more : 1
has given more -> control : 1
given more control -> to : 1
more control to -> your : 1
control to your -> memory : 1
to your memory -> resources : 1
your memory resources -> to : 1
memory resources to -> optimize : 1
resources to optimize -> the : 1
optimize the code -> as : 1
the code as -> you : 1
code as you -> operations : 1
as you operations -> and : 1
you operations and -> types : 1
types in a -> operation : 1
types in a -> hierarchy : 1
in a operation -> might : 1
a operation might -> be : 1
operation might be -> seen : 1
might be seen -> as : 1
be seen as -> by : 1
seen as by -> other : 1
as by other -> as : 1
by other as -> discussed : 1
other as discussed -> in : 1
parallelism in in -> such : 1
in in such -> the : 1
in such the -> invariance : 1
in such the -> standard : 1
in such the -> exchange : 1
in such the -> thread : 1
such the invariance -> associated : 1
the invariance associated -> with : 1
invariance associated with -> the : 1
with the shared -> data : 1
the shared data -> structure : 1
data structure will -> be : 1
structure will be -> this : 1
be this happens -> when : 1
this happens when -> the : 1
when the modification -> to : 1
the modification to -> a : 1
modification to a -> shared : 1
to a shared -> data : 1
data structure requires -> modification : 1
structure requires modification -> of : 1
than one the -> best : 1
one the best -> example : 1
the best example -> of : 1
best example of -> this : 1
example of this -> is : 1
of this is -> a : 1
is a partially -> removed : 1
partially removed node -> of : 1
removed node of -> a : 1
node of a -> binary : 1
node of a -> graph : 1
of a binary -> if : 1
a binary if -> another : 1
binary if another -> thread : 1
if another thread -> tries : 1
another thread tries -> to : 1
tries to read -> from : 1
read from this -> data : 1
from this data -> structure : 1
this data structure -> at : 1
data structure at -> the : 1
structure at the -> same : 1
same the invariant -> will : 1
the invariant will -> be : 1
invariant will be -> broken : 1
will be broken -> and : 1
be broken and -> could : 1
broken and could -> result : 1
and could result -> in : 1
could result in -> undefined : 1
result in undefined -> an : 1
in undefined an -> you : 1
undefined an you -> observe : 1
an you observe -> an : 1
you observe an -> operation : 1
observe an operation -> from : 1
an operation from -> any : 1
operation from any -> thread : 1
from any thread -> in : 1
any thread in -> the : 1
thread in the -> because : 1
in the because -> atomic : 1
the because atomic -> operations : 1
because atomic operations -> are : 1
atomic operations are -> if : 1
operations are if -> any : 1
are if any -> operation : 1
if any operation -> as : 1
any operation as -> associated : 1
operation as associated -> with : 1
as associated with -> an : 1
associated with an -> object : 1
with an object -> is : 1
object is then -> all : 1
is then all -> of : 1
then all of -> the : 1
of the modifications -> to : 1
the modifications to -> the : 1
modifications to the -> object : 1
to the object -> are : 1
the object are -> also : 1
object are also -> has : 1
are also has -> provided : 1
also has provided -> atomic : 1
has provided atomic -> types : 1
provided atomic types -> so : 1
atomic types so -> that : 1
types so that -> you : 1
so that you -> can : 2
you can use -> atomicity : 1
you can use -> the : 1
you can use -> to : 1
can use atomicity -> as : 1
use atomicity as -> you : 1
atomicity as you -> atomic : 1
as you atomic -> types : 1
you atomic types -> defined : 1
atomic types defined -> by : 1
types defined by -> the : 1
standard library can -> be : 1
library can be -> found : 2
library can be -> perused : 1
library can be -> leveraged : 1
library can be -> downloaded : 1
library can be -> used : 2
library can be -> in : 1
can be found -> in : 1
can be found -> will : 1
be found in -> header : 1
found in header -> the : 1
in header the -> system : 1
header the system -> guarantees : 1
the system guarantees -> the : 1
system guarantees the -> atomicity : 1
guarantees the atomicity -> to : 1
the atomicity to -> these : 1
atomicity to these -> types : 1
to these types -> and : 1
these types and -> all : 1
types and all -> the : 1
and all the -> related : 1
all the related -> operations : 1
the related operations -> with : 1
related operations with -> these : 1
operations with these -> some : 1
with these some -> operations : 1
these some operations -> may : 1
some operations may -> not : 1
operations may not -> be : 1
may not be -> but : 1
not be but -> the : 1
be but the -> system : 1
but the system -> creates : 1
the system creates -> the : 1
system creates the -> illusion : 1
creates the illusion -> of : 1
the illusion of -> atomicity : 1
illusion of atomicity -> in : 1
of atomicity in -> such : 1
atomicity in such -> the : 1
such the standard -> atomic : 1
the standard atomic -> types : 1
the standard atomic -> and : 1
the standard atomic -> beginning : 1
the standard atomic -> integral : 1
the standard atomic -> type : 1
standard atomic types -> use : 1
standard atomic types -> are : 1
atomic types use -> a : 1
types use a -> member : 1
use a member -> that : 1
a member that -> allows : 1
member that allows -> the : 1
that allows the -> user : 1
allows the user -> to : 2
user to determine -> whether : 1
to determine whether -> operations : 1
determine whether operations -> on : 1
whether operations on -> a : 1
operations on a -> given : 1
operations on a -> data : 1
on a given -> type : 1
a given type -> are : 1
given type are -> done : 1
type are done -> directly : 1
are done directly -> with : 1
done directly with -> atomic : 1
directly with atomic -> instructions : 1
with atomic instructions -> returns : 1
atomic instructions returns -> or : 1
instructions returns or -> done : 1
returns or done -> using : 1
or done using -> internal : 1
done using internal -> locks : 1
using internal locks -> by : 1
internal locks by -> the : 1
locks by the -> compiler : 1
the compiler and -> library : 1
compiler and library -> returns : 1
and library returns -> is : 1
library returns is -> different : 1
returns is different -> among : 1
is different among -> all : 1
different among all -> atomic : 1
among all atomic -> the : 1
all atomic the -> operations : 1
atomic the operations -> on : 1
the operations on -> this : 1
the operations on -> atomic : 1
the operations on -> the : 1
operations on this -> type : 1
on this type -> are : 1
this type are -> required : 1
type are required -> to : 1
are required to -> be : 2
required to be -> atomic : 1
required to be -> in : 1
to be atomic -> as : 1
be atomic as -> per : 1
atomic as per -> the : 1
per the this -> provide : 1
the this provide -> member : 1
this provide member -> this : 1
provide member this -> is : 1
member this is -> a : 1
a very simple -> type : 1
very simple type -> with : 1
simple type with -> a : 1
type with a -> minimal : 1
with a minimal -> set : 1
a minimal set -> of : 1
minimal set of -> allowed : 1
set of allowed -> operations : 1
of allowed operations -> such : 1
allowed operations such -> as : 1
operations such as -> can : 1
operations such as -> and : 3
operations such as -> various : 1
such as can -> be : 1
as can be -> either : 1
can be either -> queried : 1
be either queried -> or : 1
either queried or -> or : 1
queried or or -> the : 1
or or the -> remaining : 1
or the remaining -> atomic : 1
the remaining atomic -> types : 1
remaining atomic types -> follow : 1
atomic types follow -> a : 1
types follow a -> similar : 1
follow a similar -> signature : 1
a similar signature -> as : 1
similar signature as -> per : 1
signature as per -> the : 1
per the specifications -> of : 1
the specifications of -> class : 1
the specifications of -> these : 1
the specifications of -> relaxed : 1
specifications of class -> these : 1
of class these -> compared : 1
class these compared -> to : 1
these compared to -> are : 1
compared to are -> a : 1
to are a -> bit : 1
are a bit -> more : 1
bit more fully -> but : 1
more fully but -> not : 1
fully but not -> all : 1
but not all -> operations : 1
not all operations -> are : 1
all operations are -> always : 1
operations are always -> the : 1
are always the -> atomicity : 1
always the atomicity -> of : 1
the atomicity of -> highly : 1
atomicity of highly -> depends : 1
of highly depends -> on : 1
highly depends on -> the : 1
on the platform -> as : 1
the platform as -> on : 1
platform as on -> popular : 1
as on popular -> the : 1
on popular the -> atomic : 1
popular the atomic -> variants : 1
the atomic variants -> of : 1
atomic variants of -> types : 1
variants of types -> are : 1
of types are -> indeed : 1
types are indeed -> but : 1
are indeed but -> this : 1
indeed but this -> is : 1
but this is -> not : 1
this is not -> guaranteed : 1
is not guaranteed -> of : 1
not guaranteed of -> using : 1
guaranteed of using -> template : 1
of using template -> you : 1
using template you -> can : 1
template you can -> use : 1
can use the -> direct : 1
can use the -> method : 1
can use the -> cell : 1
can use the -> tool : 1
can use the -> resultant : 1
can use the -> library : 1
use the direct -> types : 1
the direct types -> supplied : 1
direct types supplied -> by : 1
types supplied by -> the : 1
supplied by the -> as : 1
supplied by the -> the : 1
by the as -> given : 1
the as given -> in : 1
the following long -> with : 1
following long with -> all : 1
long with all -> of : 1
with all of -> these : 1
all of these -> basic : 1
all of these -> including : 1
all of these -> reverse : 1
of these basic -> atomic : 1
these basic atomic -> the : 1
basic atomic the -> standard : 1
atomic the standard -> library : 1
provided a set -> of : 1
set of for -> atomic : 1
of for atomic -> types : 1
for atomic types -> compared : 1
atomic types compared -> to : 1
types compared to -> the : 1
to the available -> in : 1
the available in -> the : 1
standard library such -> as : 1
library such as -> there : 1
library such as -> the : 1
such as there -> is : 1
as there is -> a : 1
a simple pattern -> to : 1
simple pattern to -> identify : 1
pattern to identify -> the : 1
to identify the -> corresponding : 1
identify the corresponding -> atomic : 1
the corresponding atomic -> version : 1
corresponding atomic version -> of : 1
atomic version of -> for : 1
version of for -> any : 1
of for any -> standard : 1
for any standard -> use : 1
any standard use -> the : 1
standard use the -> the : 1
use the the -> following : 1
the following table -> lists : 2
the following table -> gives : 1
the following table -> contains : 1
the following table -> outlines : 1
the following table -> shows : 1
following table lists -> the : 1
following table lists -> some : 1
table lists the -> standard : 1
lists the standard -> atomic : 1
standard atomic and -> their : 1
atomic and their -> corresponding : 1
and their corresponding -> class : 1
and their corresponding -> values : 1
their corresponding class -> templates : 1
corresponding class templates -> are : 1
class templates are -> not : 1
templates are not -> just : 1
are not just -> a : 1
not just a -> set : 1
just a set -> of : 1
set of they -> have : 1
of they have -> a : 1
of they have -> got : 1
they have a -> primary : 1
have a primary -> template : 1
a primary template -> to : 1
primary template to -> expand : 1
template to expand -> and : 1
to expand and -> an : 1
expand and an -> atomic : 1
and an atomic -> variant : 1
an atomic variant -> of : 2
atomic variant of -> the : 1
atomic variant of -> a : 1
variant of the -> being : 1
of the being -> a : 1
the being a -> generic : 1
being a generic -> template : 1
a generic template -> the : 1
generic template the -> operations : 1
template the operations -> supported : 1
the operations supported -> are : 1
the operations supported -> by : 1
operations supported are -> limited : 1
supported are limited -> to : 1
are limited to -> each : 1
limited to each -> of : 1
to each of -> the : 1
each of the -> operations : 1
each of the -> standard : 1
each of the -> concrete : 1
each of the -> aspects : 1
each of the -> nodes : 1
of the operations -> on : 1
operations on atomic -> types : 2
operations on atomic -> we : 1
operations on atomic -> and : 1
operations on atomic -> is : 1
on atomic types -> has : 1
on atomic types -> are : 1
on atomic types -> performed : 1
atomic types has -> an : 1
types has an -> optional : 1
has an optional -> argument : 1
an optional argument -> to : 1
optional argument to -> specify : 1
argument to specify -> the : 1
specify the semantics -> that : 1
the semantics that -> are : 1
semantics that are -> the : 1
that are the -> concepts : 1
are the concepts -> of : 1
the concepts of -> memory : 1
concepts of memory -> ordering : 1
of memory ordering -> will : 2
memory ordering will -> be : 2
ordering will be -> covered : 1
ordering will be -> discussed : 1
detail in a -> later : 1
in a later -> section : 1
a later section -> of : 1
later section of -> this : 1
section of this -> for : 1
of this for -> just : 1
this for just -> keep : 1
for just keep -> in : 1
just keep in -> mind : 1
in mind that -> all : 1
mind that all -> atomic : 1
that all atomic -> operations : 1
all atomic operations -> can : 1
all atomic operations -> is : 1
all atomic operations -> on : 1
all atomic operations -> in : 1
atomic operations can -> be : 1
operations can be -> divided : 1
operations can be -> achieved : 1
can be divided -> into : 1
can be divided -> methods : 1
be divided into -> three : 1
divided into three -> these : 1
into three these -> operations : 1
three these operations -> can : 1
these operations can -> have : 2
operations can have -> or : 2
can have or -> these : 2
can have or -> default : 1
have or these -> can : 1
have or these -> operations : 1
or these can -> have : 1
these can have -> or : 1
or these operations -> can : 1
have or default -> memory : 1
or default memory -> ordering : 1
default memory ordering -> for : 1
memory ordering for -> all : 1
memory ordering for -> certain : 1
ordering for all -> atomic : 1
for all atomic -> operations : 2
atomic operations is -> to : 2
operations is to -> conventional : 1
operations is to -> provide : 1
is to conventional -> standard : 1
to conventional standard -> standard : 1
conventional standard standard -> atomic : 1
standard standard atomic -> types : 1
atomic types are -> not : 1
atomic types are -> defined : 1
types are not -> or : 1
are not or -> this : 1
not or this -> means : 1
or this means -> that : 1
means that they -> have : 1
that they have -> no : 1
that they have -> worked : 1
they have no -> copy : 1
have no copy -> constructors : 1
no copy constructors -> or : 1
copy constructors or -> copy : 1
constructors or copy -> assignment : 1
or copy assignment -> apart : 1
copy assignment apart -> from : 1
assignment apart from -> direct : 1
apart from direct -> member : 1
from direct member -> they : 1
direct member they -> support : 1
member they support -> from : 1
they support from -> and : 1
support from and -> implicit : 1
from and implicit -> conversions : 1
and implicit conversions -> to : 1
implicit conversions to -> the : 1
conversions to the -> corresponding : 1
to the corresponding -> all : 1
to the corresponding -> slot : 1
to the corresponding -> slots : 1
to the corresponding -> the : 1
the corresponding all -> operations : 1
corresponding all operations -> on : 1
all operations on -> atomic : 1
all operations on -> it : 1
types are defined -> as : 1
are defined as -> and : 1
defined as and -> assignment : 1
as and assignment -> and : 1
and assignment and -> involve : 1
assignment and involve -> two : 1
and involve two -> an : 1
involve two an -> operation : 1
two an operation -> involving : 1
an operation involving -> two : 1
operation involving two -> distinct : 1
involving two distinct -> objects : 1
two distinct objects -> cannot : 1
distinct objects cannot -> be : 1
objects cannot be -> in : 1
cannot be in -> both : 1
be in both -> the : 1
in both the -> value : 1
both the value -> must : 1
the value must -> read : 1
value must read -> from : 1
must read from -> one : 1
read from one -> object : 1
from one object -> and : 1
one object and -> be : 1
object and be -> written : 1
and be written -> to : 1
be written to -> the : 1
written to the -> these : 1
to the these -> operations : 1
the these operations -> cannot : 1
these operations cannot -> be : 1
operations cannot be -> considered : 1
cannot be considered -> look : 1
be considered look -> at : 1
considered look at -> the : 1
at the operations -> that : 1
the operations that -> you : 1
operations that you -> can : 1
you can actually -> perform : 1
can actually perform -> on : 1
actually perform on -> each : 1
perform on each -> of : 1
on each of -> the : 1
standard atomic beginning -> with : 1
atomic beginning with -> represents : 1
beginning with represents -> a : 1
with represents a -> boolean : 1
represents a boolean -> and : 1
a boolean and -> it : 1
boolean and it -> is : 1
it is the -> simplest : 1
it is the -> store : 1
it is the -> corner : 1
is the simplest -> among : 1
is the simplest -> widget : 1
the simplest among -> all : 1
simplest among all -> the : 1
among all the -> atomic : 1
all the atomic -> types : 1
the atomic types -> in : 1
the atomic types -> and : 1
atomic types in -> the : 2
types in the -> standard : 1
types in the -> first : 1
types in the -> system : 1
the standard this -> is : 2
standard this is -> the : 2
is the only -> type : 1
is the only -> atomic : 1
is the only -> change : 1
the only type -> where : 1
only type where -> all : 1
type where all -> operations : 1
where all operations -> on : 1
operations on it -> are : 1
on it are -> required : 1
it are required -> to : 1
to be in -> every : 1
to be in -> a : 2
be in every -> this : 1
in every this -> type : 1
every this type -> is : 1
this type is -> very : 1
type is very -> hence : 1
is very hence -> it : 1
very hence it -> is : 1
hence it is -> intended : 1
it is intended -> as : 1
it is intended -> to : 1
is intended as -> a : 1
intended as a -> building : 1
as a building -> block : 1
a building block -> object : 1
building block object -> must : 1
block object must -> always : 1
object must always -> be : 1
always be initialized -> with : 1
be initialized with -> to : 1
initialized with to -> set : 1
with to set -> the : 1
set the state -> to : 1
the state to -> flg : 1
state to flg -> is : 1
to flg is -> the : 1
flg is the -> only : 1
the only atomic -> type : 1
only atomic type -> that : 1
atomic type that -> requires : 1
type that requires -> such : 1
that requires such -> irrespective : 1
requires such irrespective -> of : 1
such irrespective of -> the : 1
irrespective of the -> scope : 1
of the scope -> of : 1
scope of its -> once : 1
of its once -> it : 1
its once it -> is : 1
once it is -> there : 1
it is there -> are : 1
is there are -> only : 1
there are only -> three : 1
are only three -> operations : 1
only three operations -> permissible : 1
three operations permissible -> with : 1
operations permissible with -> this : 1
permissible with this -> destroy : 1
with this destroy -> clear : 1
this destroy clear -> or : 1
destroy clear or -> set : 1
clear or set -> a : 1
or set a -> query : 1
set a query -> for : 1
a query for -> the : 1
query for the -> previous : 1
for the previous -> these : 1
the previous these -> correspond : 1
previous these correspond -> to : 1
these correspond to -> the : 1
correspond to the -> member : 1
to the member -> and : 1
the member and -> the : 1
member and the -> member : 1
and the member -> is : 1
the member is -> a : 1
the member is -> initialized : 1
member is a -> whereas : 1
is a whereas -> is : 1
a whereas is -> a : 1
whereas is a -> as : 1
is a as -> discussed : 1
a as discussed -> in : 1
the previous val -> the : 1
previous val the -> preceding : 1
val the preceding -> code : 1
code the function -> call : 1
function call requests -> that : 1
call requests that -> the : 1
requests that the -> flag : 1
that the flag -> is : 1
flag is cleared -> with : 1
flag is cleared -> by : 1
is cleared with -> default : 1
cleared with default -> memory : 1
with default memory -> which : 1
default memory which -> is : 1
memory which is -> while : 1
which is while -> the : 1
is while the -> call : 1
while the call -> to : 1
call to uses -> the : 1
to uses the -> relaxed : 1
uses the relaxed -> semantics : 1
the relaxed semantics -> on : 1
relaxed semantics on -> this : 1
semantics on this -> in : 1
on this in -> the : 1
in the which -> are : 1
in the which -> manages : 1
the which are -> explicitly : 1
which are explicitly -> used : 1
are explicitly used -> for : 1
explicitly used for -> setting : 1
used for setting -> the : 1
for setting the -> flag : 1
setting the flag -> and : 1
the flag and -> retrieving : 1
flag and retrieving -> the : 1
and retrieving the -> old : 1
retrieving the old -> primitive : 1
the old primitive -> implementation : 1
old primitive implementation -> of : 1
primitive implementation of -> makes : 1
implementation of makes -> it : 1
of makes it -> ideal : 1
makes it ideal -> for : 1
it ideal for -> the : 1
ideal for the -> see : 1
for the see -> an : 1
the see an -> example : 1
see an example -> void : 1
an example void -> simulates : 1
example void simulates -> a : 1
void simulates a -> lock : 1
simulates a lock -> and : 1
a lock and -> while : 1
lock and while -> do : 1
and while do -> some : 1
while do some -> action : 1
do some action -> often : 1
do some action -> take : 1
some action often -> the : 1
action often the -> code : 1
often the code -> to : 1
to be guarded -> will : 1
be guarded will -> be : 1
guarded will be -> sequenced : 1
will be sequenced -> void : 1
be sequenced void -> end : 1
sequenced void end -> of : 1
void end of -> section : 1
end of section -> to : 1
of section to -> be : 1
section to be -> release : 1
to be release -> the : 1
be release the -> preceding : 1
release the preceding -> code : 1
code the instance -> variable : 1
the instance variable -> is : 1
instance variable is -> cleared : 1
variable is cleared -> in : 1
is cleared in -> the : 1
cleared in the -> lock : 1
in the lock -> it : 1
the lock it -> tries : 1
lock it tries -> to : 1
it tries to -> set : 1
tries to set -> the : 1
set the flag -> by : 1
the flag by -> testing : 1
flag by testing -> the : 1
by testing the -> to : 1
testing the to -> see : 1
the to see -> whether : 1
whether the value -> is : 1
the value is -> the : 2
the value is -> string : 1
the value is -> number : 1
the value is -> not : 1
the value is -> otherwise : 1
value is the -> value : 2
is the value -> is : 1
is the value -> will : 1
is the value -> that : 1
the value will -> be : 5
be set and -> we : 1
set and we -> will : 1
we will the -> the : 1
we will the -> topic : 1
will the the -> value : 1
the the value -> in : 1
the the value -> will : 1
the the value -> is : 1
the value in -> the : 2
in the flag -> will : 1
the flag will -> only : 1
flag will only -> be : 1
will only be -> reset : 1
only be reset -> when : 1
be reset when -> the : 1
reset when the -> flag : 1
when the flag -> is : 1
is cleared by -> the : 1
cleared by the -> in : 1
by the in -> other : 1
by the in -> our : 1
by the in -> some : 1
by the in -> the : 1
the in other -> this : 1
in other this -> implementation : 1
other this implementation -> achieves : 1
this implementation achieves -> mutual : 1
implementation achieves mutual -> exclusion : 1
achieves mutual exclusion -> with : 1
mutual exclusion with -> a : 1
exclusion with a -> busy : 1
with a busy -> wait : 1
a busy wait -> in : 1
busy wait in -> of : 1
wait in of -> its : 1
in of its -> cannot : 1
of its cannot -> be : 1
its cannot be -> used : 1
cannot be used -> as : 1
cannot be used -> for : 1
as a boolean -> atomic : 1
a boolean atomic -> and : 1
boolean atomic and -> it : 1
atomic and it -> support : 1
and it support -> any : 1
it support any -> look : 1
support any look -> into : 1
any look into -> to : 1
look into to -> compensate : 1
into to compensate -> the : 1
to compensate the -> requirement : 1
compensate the requirement -> of : 1
the requirement of -> atomic : 1
requirement of atomic -> boolean : 1
of atomic boolean -> is : 1
atomic boolean is -> a : 1
boolean is a -> atomic : 1
is a atomic -> boolean : 1
a atomic boolean -> type : 1
atomic boolean type -> compared : 1
boolean type compared -> to : 1
type compared to -> but : 1
compared to but -> neither : 1
to but neither -> nor : 1
but neither nor -> assignment : 1
neither nor assignment -> with : 1
nor assignment with -> this : 1
assignment with this -> the : 1
with this the -> value : 1
with this the -> stl : 1
this the value -> of : 1
the value of -> object : 1
the value of -> types : 1
the value of -> the : 6
value of object -> can : 1
of object can -> initially : 1
object can initially -> be : 1
can initially be -> or : 1
initially be or -> the : 1
be or the -> objects : 1
or the objects -> of : 1
objects of this -> type : 1
of this type -> can : 1
this type can -> be : 1
can be constructed -> or : 1
can be constructed -> and : 1
can be constructed -> by : 2
be constructed or -> assigned : 1
constructed or assigned -> values : 1
or assigned values -> from : 1
assigned values from -> a : 1
values from a -> thing : 1
from a thing -> needs : 1
a thing needs -> to : 1
thing needs to -> be : 1
to be noted -> about : 1
be noted about -> the : 1
noted about the -> assignment : 1
about the assignment -> operator : 1
operator of atomic -> which : 1
of atomic which -> is : 1
atomic which is -> that : 1
which is that -> the : 1
is that the -> operator : 1
is that the -> code : 1
is that the -> reactive : 1
that the operator -> returns : 1
the operator returns -> the : 1
the operator returns -> an : 1
operator returns the -> value : 1
returns the value -> of : 1
value of types -> rather : 1
of types rather -> than : 1
types rather than -> the : 1
rather than the -> conventional : 1
than the conventional -> scheme : 1
the conventional scheme -> of : 1
conventional scheme of -> returning : 1
scheme of returning -> if : 1
of returning if -> a : 1
returning if a -> reference : 1
if a reference -> is : 1
a reference is -> returned : 1
reference is returned -> instead : 1
is returned instead -> of : 1
returned instead of -> a : 1
of a it -> would : 1
a it would -> create : 1
it would create -> a : 1
would create a -> situation : 1
create a situation -> where : 1
a situation where -> the : 1
situation where the -> result : 1
where the result -> of : 1
result of assignment -> gets : 1
of assignment gets -> the : 1
assignment gets the -> result : 1
gets the result -> of : 1
result of a -> modification : 1
of a modification -> by : 1
a modification by -> another : 1
modification by another -> that : 1
by another that -> if : 1
another that if -> it : 1
that if it -> depends : 1
if it depends -> on : 1
it depends on -> the : 1
on the result -> of : 1
the assignment while -> returning : 1
assignment while returning -> the : 1
while returning the -> result : 1
returning the result -> of : 1
assignment operator as -> a : 1
operator as a -> this : 1
as a this -> additional : 1
a this additional -> load : 1
this additional load -> can : 1
additional load can -> be : 1
load can be -> and : 1
can be and -> you : 1
can be and -> the : 1
be and you -> can : 1
you can infer -> that : 1
can infer that -> the : 1
infer that the -> value : 1
that the value -> obtained : 1
that the value -> is : 1
the value obtained -> is : 1
value obtained is -> the : 1
obtained is the -> value : 1
the value that -> has : 1
value that has -> actually : 1
that has actually -> been : 1
has actually been -> move : 1
actually been move -> on : 1
been move on -> to : 1
on to the -> operations : 1
on to the -> will : 1
on to the -> declarative : 1
on to the -> topic : 1
on to the -> important : 1
on to the -> next : 1
on to the -> base : 1
to the operations -> supported : 1
to the operations -> available : 1
operations supported by -> first : 1
supported by first -> and : 1
by first and -> member : 1
first and member -> which : 1
and member which -> is : 1
member which is -> available : 1
which is available -> in : 1
which is available -> at : 1
available in is -> used : 1
in is used -> for : 1
is used for -> write : 1
used for write -> operations : 1
for write operations -> or : 1
write operations or -> and : 1
operations or and -> it : 1
or and it -> replaces : 1
and it replaces -> the : 1
it replaces the -> corresponding : 1
replaces the corresponding -> restrictive : 1
the corresponding restrictive -> function : 1
corresponding restrictive function -> of : 1
restrictive function of -> the : 1
function is an -> atomic : 1
function is an -> instead : 1
is an atomic -> store : 1
is an atomic -> supports : 1
is an atomic -> load : 1
an atomic store -> the : 1
atomic store the -> function : 1
store the function -> has : 1
the function has -> been : 1
the function has -> one : 1
function has been -> effectively : 1
has been effectively -> replaced : 1
been effectively replaced -> with : 1
effectively replaced with -> a : 1
replaced with a -> more : 1
with a more -> generic : 1
a more generic -> member : 1
more generic member -> function : 1
generic member function -> that : 1
member function that -> allows : 1
function that allows -> you : 1
that allows you -> to : 1
allows you to -> replace : 1
allows you to -> chain : 1
allows you to -> use : 1
you to replace -> the : 1
to replace the -> stored : 1
replace the stored -> value : 1
the stored value -> with : 1
stored value with -> a : 1
value with a -> chosen : 1
with a chosen -> new : 1
a chosen new -> one : 1
chosen new one -> and : 1
new one and -> retrieves : 1
one and retrieves -> the : 1
and retrieves the -> original : 1
and retrieves the -> data : 1
retrieves the original -> this : 1
the original this -> is : 1
original this is -> an : 1
an atomic supports -> a : 1
atomic supports a -> simple : 1
supports a simple -> query : 1
a simple query -> of : 1
simple query of -> the : 1
query of the -> value : 1
the value with -> an : 1
value with an -> explicit : 1
with an explicit -> call : 1
call to which -> is : 1
an atomic load -> val : 1
atomic load val -> from : 1
load val from -> introduces : 1
val from introduces -> an : 1
from introduces an -> operation : 1
introduces an operation -> to : 1
an operation to -> perform : 1
operation to perform -> which : 1
to perform which -> executes : 1
perform which executes -> the : 1
executes the popular -> atomic : 1
the popular atomic -> this : 1
popular atomic this -> operation : 1
atomic this operation -> stores : 1
this operation stores -> a : 1
operation stores a -> new : 1
stores a new -> value : 1
a new value -> if : 1
a new value -> to : 1
new value if -> the : 1
value if the -> current : 1
if the current -> value : 1
the current value -> is : 1
current value is -> equal : 1
value is equal -> to : 1
is equal to -> an : 1
equal to an -> expected : 1
to an expected -> this : 1
an expected this -> is : 1
expected this is -> called : 1
called a there -> are : 1
a there are -> two : 1
a there are -> various : 1
are two implementations -> of : 1
implementations of this -> operation : 1
of this operation -> that : 1
this operation that -> are : 1
operation that are -> available : 1
in standard library -> atomic : 1
standard library atomic -> and : 1
library atomic and -> this : 1
atomic and this -> operation : 1
and this operation -> compares : 1
this operation compares -> the : 1
operation compares the -> value : 1
compares the value -> of : 1
value of the -> atomic : 2
value of the -> evaluator : 1
value of the -> expression : 1
value of the -> t : 1
value of the -> cells : 1
value of the -> the : 1
of the atomic -> variable : 1
of the atomic -> the : 1
the atomic variable -> with : 1
the atomic variable -> is : 1
atomic variable with -> a : 1
variable with a -> supplied : 1
with a supplied -> expected : 1
a supplied expected -> value : 1
supplied expected value -> and : 1
expected value and -> stores : 1
expected value and -> original : 1
value and stores -> the : 1
and stores the -> supplied : 1
and stores the -> data : 1
stores the supplied -> value : 1
the supplied value -> if : 1
supplied value if -> they : 1
value if they -> are : 1
they are if -> these : 1
are if these -> values : 1
if these values -> are : 1
these values are -> not : 1
values are not -> the : 1
are not the -> expected : 1
not the expected -> value : 1
the expected value -> is : 1
the expected value -> and : 1
expected value is -> updated : 1
value is updated -> with : 1
is updated with -> the : 1
updated with the -> actual : 1
updated with the -> current : 1
updated with the -> the : 1
with the actual -> value : 1
the actual value -> of : 1
the actual value -> equal : 1
actual value of -> the : 1
the atomic the -> return : 1
atomic the return -> type : 1
the return type -> of : 1
function is a -> which : 1
is a which -> is : 1
a which is -> if : 1
which is if -> the : 1
is if the -> store : 1
if the store -> was : 1
the store was -> it : 1
store was it -> is : 1
was it is -> the : 1
is the store -> might : 1
the store might -> not : 1
store might not -> be : 1
might not be -> even : 1
not be even -> if : 1
be even if -> the : 1
if the expected -> value : 1
value and original -> value : 1
and original value -> are : 1
original value are -> in : 1
value are in -> such : 1
are in such -> the : 1
such the exchange -> of : 1
the exchange of -> value : 1
exchange of value -> will : 1
of value will -> not : 1
value will not -> happen : 1
will not happen -> and : 1
not happen and -> the : 1
happen and the -> function : 1
function will return -> this : 1
will return this -> most : 1
return this most -> often : 1
this most often -> happens : 1
most often happens -> on : 1
often happens on -> a : 1
happens on a -> platform : 1
on a platform -> that : 1
a platform that -> lacks : 1
platform that lacks -> single : 1
that lacks single -> which : 1
lacks single which -> means : 1
single which means -> that : 1
which means that -> the : 1
that the processor -> cannot : 1
the processor cannot -> guarantee : 1
processor cannot guarantee -> that : 1
cannot guarantee that -> the : 1
guarantee that the -> operation : 1
guarantee that the -> operations : 1
guarantee that the -> input : 1
that the operation -> will : 2
that the operation -> was : 1
the operation will -> be : 1
the operation will -> an : 1
operation will be -> executed : 1
be executed in -> such : 1
executed in such -> the : 1
such the thread -> performing : 1
the thread performing -> the : 1
thread performing the -> operation : 1
performing the operation -> might : 1
the operation might -> get : 1
operation might get -> switched : 1
might get switched -> out : 1
get switched out -> halfway : 1
switched out halfway -> through : 1
out halfway through -> executing : 1
halfway through executing -> the : 1
through executing the -> sequence : 1
executing the sequence -> of : 1
the sequence of -> instructions : 1
sequence of instructions -> associated : 1
of instructions associated -> with : 1
instructions associated with -> the : 1
the and another -> thread : 1
and another thread -> will : 1
another thread will -> be : 1
will be scheduled -> in : 1
be scheduled in -> its : 1
be scheduled in -> two : 1
scheduled in its -> place : 1
in its place -> by : 1
its place by -> the : 1
place by the -> operating : 1
by the operating -> system : 1
the operating system -> with : 1
operating system with -> a : 1
system with a -> given : 1
with a given -> condition : 1
a given condition -> of : 1
given condition of -> more : 1
condition of more -> threads : 1
of more threads -> running : 1
more threads running -> than : 1
threads running than -> the : 1
running than the -> number : 1
number of available -> this : 1
of available this -> condition : 1
available this condition -> is : 1
this condition is -> called : 1
condition is called -> can : 1
is called can -> cause : 1
called can cause -> spurious : 1
can cause spurious -> it : 1
cause spurious it -> should : 1
spurious it should -> be : 1
it should be -> used : 1
be used in -> a : 2
used in a -> expected : 1
used in a -> gui : 1
in a expected -> the : 1
a expected the -> preceding : 1
expected the preceding -> the : 1
preceding the loop -> continues : 1
the loop continues -> to : 1
loop continues to -> iterate : 1
continues to iterate -> as : 1
to iterate as -> long : 1
iterate as long -> as : 1
as long as -> expected : 1
long as expected -> is : 1
as expected is -> and : 1
expected is and -> it : 1
is and it -> denotes : 1
and it denotes -> that : 1
it denotes that -> spurious : 1
denotes that spurious -> failure : 1
that spurious failure -> is : 1
spurious failure is -> happening : 1
failure is happening -> to : 1
is happening to -> on : 1
happening to on -> the : 1
on the is -> guaranteed : 1
on the is -> a : 1
on the is -> performed : 1
the is guaranteed -> to : 1
is guaranteed to -> return : 1
guaranteed to return -> if : 1
to return if -> the : 1
return if the -> actual : 1
if the actual -> value : 1
actual value equal -> to : 1
value equal to -> the : 1
equal to the -> expected : 1
to the expected -> this : 1
the expected this -> can : 1
expected this can -> avoid : 1
this can avoid -> the : 1
can avoid the -> need : 1
avoid the need -> for : 1
the need for -> loops : 1
need for loops -> as : 1
for loops as -> in : 1
loops as in -> the : 1
as in the -> previous : 1
as in the -> gof : 1
as in the -> case : 1
the previous situations -> where : 1
previous situations where -> you : 1
situations where you -> want : 1
want to know -> the : 1
to know the -> status : 1
to know the -> structure : 1
know the status -> of : 1
the status of -> variables : 1
status of variables -> with : 1
of variables with -> respect : 1
variables with respect -> to : 1
with respect to -> running : 1
respect to running -> functions : 1
to running functions -> can : 1
running functions can -> take : 1
functions can take -> two : 1
can take two -> parameters : 1
take two parameters -> in : 1
two parameters in -> order : 1
parameters in order -> to : 1
order to allow -> the : 1
to allow the -> semantics : 1
allow the semantics -> to : 2
the semantics to -> differ : 1
the semantics to -> be : 1
semantics to differ -> in : 1
to differ in -> success : 1
differ in success -> and : 1
in success and -> failure : 1
success and failure -> those : 1
success and failure -> if : 1
and failure those -> semantics : 1
failure those semantics -> are : 1
those semantics are -> only : 1
semantics are only -> valid : 1
are only valid -> for : 1
only valid for -> store : 1
valid for store -> operations : 1
for store operations -> and : 1
store operations and -> cannot : 1
operations and cannot -> be : 1
and cannot be -> used : 1
used for failure -> since : 1
for failure since -> a : 1
failure since a -> store : 1
since a store -> operation : 1
a store operation -> you : 1
store operation you -> specify : 1
operation you specify -> any : 1
you specify any -> the : 1
you specify any -> ordering : 1
specify any the -> default : 1
any the default -> will : 1
the default will -> be : 1
default will be -> taken : 1
will be taken -> for : 1
be taken for -> both : 1
taken for both -> success : 1
for both success -> and : 1
and failure if -> you : 1
failure if you -> specify : 1
if you specify -> any : 1
specify any ordering -> for : 1
any ordering for -> then : 1
ordering for then -> assumed : 1
for then assumed -> to : 1
then assumed to -> be : 1
assumed to be -> the : 1
be the same -> as : 1
be the same -> for : 1
be the same -> can : 1
as for except -> that : 1
for except that -> the : 1
except that the -> release : 1
that the release -> part : 1
the release part -> of : 1
release part of -> the : 1
of the ordering -> is : 1
the ordering is -> becomes : 1
ordering is becomes -> and : 1
is becomes and -> becomes : 1
becomes and becomes -> specifications : 1
and becomes specifications -> and : 1
becomes specifications and -> consequences : 1
specifications and consequences -> of : 1
and consequences of -> memory : 1
consequences of memory -> ordering : 1
discussed in detail -> in : 1
detail in of -> this : 1
in of this -> see : 1
of this see -> the : 1
this see the -> use : 1
of atomic integral -> types : 1
atomic integral types -> as : 1
atomic integral types -> neither : 1
integral types as -> a : 1
as a atomic -> integral : 1
a atomic integral -> to : 1
atomic integral to -> standard : 1
integral to standard -> atomic : 1
to standard atomic -> integral : 1
standard atomic integral -> types : 1
standard atomic integral -> such : 1
integral types neither -> nor : 1
types neither nor -> they : 1
neither nor they -> can : 1
nor they can -> be : 1
they can be -> constructed : 1
they can be -> anything : 1
be constructed and -> assigned : 1
constructed and assigned -> from : 1
and assigned from -> the : 1
assigned from the -> corresponding : 1
from the corresponding -> standard : 1
from the corresponding -> event : 1
the corresponding standard -> apart : 1
corresponding standard apart -> from : 1
standard apart from -> the : 1
apart from the -> mandatory : 1
from the mandatory -> member : 1
the mandatory member -> the : 1
mandatory member the -> standard : 1
member the standard -> atomic : 1
atomic integral such -> as : 1
integral such as -> or : 1
as or long -> also : 1
or long also -> have : 1
long also have -> and : 1
also have and -> member : 1
have and member -> with : 1
and member with -> similar : 1
member with similar -> semantics : 1
with similar semantics -> to : 1
similar semantics to -> those : 1
semantics to those -> of : 1
to those of -> integral : 1
those of integral -> variants : 1
of integral variants -> of : 1
integral variants of -> atomic : 1
variants of atomic -> types : 1
atomic types do -> support : 1
types do support -> mathematical : 1
do support mathematical -> operations : 1
support mathematical operations -> such : 1
mathematical operations such -> as : 1
as and operators -> and : 1
and operators and -> and : 1
operators and and -> both : 2
operators and and -> available : 1
operators and and -> slots : 1
and and both -> and : 2
and both and -> and : 1
and both and -> use : 1
both and and -> decrement : 1
and and decrement -> operators : 1
and decrement operators -> with : 1
decrement operators with -> and : 1
operators with and -> named : 1
with and named -> such : 1
and named such -> as : 1
named such as -> and : 1
as and atomically -> perform : 1
and atomically perform -> their : 1
atomically perform their -> operations : 1
perform their operations -> and : 1
their operations and -> return : 1
operations and return -> the : 1
return the old -> but : 1
the old but -> the : 1
old but the -> operators : 1
but the operators -> return : 1
the operators return -> the : 1
operators return the -> new : 1
return the new -> and : 1
return the new -> the : 1
the new and -> work : 1
new and work -> as : 1
and work as -> per : 1
work as per -> usual : 1
as per usual -> the : 1
per usual the -> performs : 1
usual the performs -> the : 1
the performs the -> but : 1
performs the but -> returns : 1
the but returns -> the : 1
but returns the -> old : 1
returns the old -> and : 1
the old and -> operators : 1
old and operators -> perform : 1
and operators perform -> the : 1
operators perform the -> operation : 1
perform the operation -> and : 1
the operation and -> return : 1
operation and return -> the : 1
the new the -> following : 1
new the following -> simple : 1
following simple example -> can : 1
simple example can -> easily : 1
example can easily -> demonstrate : 1
can easily demonstrate -> the : 1
easily demonstrate the -> specifications : 1
demonstrate the specifications -> of : 1
specifications of these -> returned : 1
of these returned -> from : 1
these returned from -> after : 1
returned from after -> value : 4
from after value -> returned : 3
from after value -> value : 1
after value returned -> from : 3
value returned from -> after : 3
after value value -> after : 2
value value after -> value : 2
value after value -> value : 1
value after value -> output : 1
after value output -> for : 1
value output for -> this : 1
output for this -> code : 1
for this code -> should : 1
this code should -> look : 1
code should look -> as : 1
should look as -> returned : 1
look as returned -> from : 1
as returned from -> result : 1
returned from result -> after : 4
from result after -> result : 4
result after result -> returned : 3
result after result -> after : 2
after result returned -> from : 3
result returned from -> result : 3
after result after -> result : 1
after result after -> and : 1
result after and -> all : 1
after and all -> of : 1
and all of -> the : 1
of the other -> listed : 1
the other listed -> atomic : 1
other listed atomic -> types : 1
listed atomic types -> in : 1
the first table -> are : 1
first table are -> atomic : 1
table are atomic -> integral : 1
are atomic integral -> look : 1
atomic integral look -> into : 1
integral look into -> the : 1
into the atomic -> pointer : 1
the atomic pointer -> pointer : 1
the atomic pointer -> type : 1
atomic pointer pointer -> with : 1
pointer pointer with -> the : 1
pointer with the -> usual : 1
with the usual -> set : 1
the usual set -> of : 1
usual set of -> operations : 1
set of operations -> such : 1
of operations such -> as : 1
and the atomic -> pointer : 1
atomic pointer type -> is : 1
pointer type is -> loaded : 1
type is loaded -> with : 1
is loaded with -> the : 1
loaded with the -> pointer : 1
with the pointer -> arithmetic : 1
the pointer arithmetic -> the : 1
pointer arithmetic the -> member : 1
arithmetic the member -> functions : 1
member functions and -> provide : 1
functions and provide -> operation : 1
and provide operation -> support : 1
provide operation support -> for : 1
operation support for -> the : 1
for the type -> to : 1
the type to -> do : 1
type to do -> atomic : 1
to do atomic -> addition : 1
do atomic addition -> and : 1
atomic addition and -> subtraction : 1
addition and subtraction -> on : 1
and subtraction on -> the : 1
subtraction on the -> stored : 1
on the stored -> and : 1
the stored and -> the : 1
stored and the -> operators : 1
and the operators -> and : 1
the operators and -> and : 1
the operators and -> a : 1
the operators and -> observers : 1
the operators and -> methods : 1
both and use -> the : 1
and use the -> and : 1
and use the -> operator : 1
use the and -> operators : 1
the and operators -> work : 2
the and operators -> write : 1
and operators work -> in : 2
operators work in -> the : 2
work in the -> same : 1
work in the -> previous : 1
the same way -> as : 1
same way as -> standard : 1
way as standard -> pointer : 1
as standard pointer -> arithmetic : 1
standard pointer arithmetic -> if : 1
pointer arithmetic if -> is : 1
arithmetic if is -> an : 1
if is an -> object : 1
is an object -> points : 1
is an object -> that : 1
an object points -> to : 1
object points to -> the : 1
to the first -> entry : 1
to the first -> element : 1
to the first -> time : 1
the first entry -> of : 1
first entry of -> an : 1
entry of an -> array : 1
of an array -> of : 1
array of the -> changes : 1
array of the -> request : 1
of the changes -> it : 1
the changes it -> to : 1
changes it to -> point : 1
it to point -> to : 1
to point to -> the : 1
to the third -> element : 2
the third element -> in : 2
third element in -> the : 2
in the array -> and : 1
the array and -> returns : 1
array and returns -> a : 1
and returns a -> raw : 1
and returns a -> observable : 1
and returns a -> fresh : 1
and returns a -> the : 1
returns a raw -> pointer : 1
raw pointer to -> that : 1
pointer to that -> points : 1
to that points -> to : 1
that points to -> the : 1
in the as -> discussed : 1
in the as -> new : 1
the as discussed -> in : 1
discussed in atomic -> integral : 1
atomic integral the -> named : 1
integral the named -> functions : 1
the named functions -> such : 1
named functions such -> as : 1
as and execute -> the : 1
and execute the -> operation : 1
and execute the -> action : 1
execute the operation -> on : 1
the operation on -> atomic : 1
the operation on -> a : 1
operation on atomic -> but : 1
on atomic but -> return : 1
atomic but return -> the : 1
but return the -> pointer : 1
return the pointer -> to : 1
the pointer to -> the : 2
first element in -> the : 1
the function forms -> of : 1
function forms of -> atomic : 1
forms of atomic -> operations : 1
atomic operations also -> allow : 1
operations also allow -> the : 1
also allow the -> semantics : 1
semantics to be -> specified : 1
to be specified -> in : 1
be specified in -> an : 1
specified in an -> additional : 1
in an additional -> argument : 1
an additional argument -> to : 1
additional argument to -> the : 1
the function both -> and : 1
function both and -> are : 1
both and are -> they : 1
and are they -> can : 1
are they can -> use : 1
they can use -> any : 1
can use any -> memory : 1
use any memory -> ordering : 1
any memory ordering -> semantics : 1
memory ordering semantics -> in : 1
memory ordering semantics -> only : 1
ordering semantics in -> a : 1
semantics in a -> standard : 1
in a standard -> atomic : 1
a standard atomic -> for : 1
standard atomic for -> the : 1
atomic for the -> operator : 1
for the operator -> memory : 1
the operator memory -> ordering : 1
operator memory ordering -> cannot : 1
memory ordering cannot -> be : 1
ordering cannot be -> so : 1
cannot be so -> these : 1
be so these -> operators : 1
so these operators -> will : 1
these operators will -> always : 1
operators will always -> have : 1
will always have -> primary : 1
always have primary -> class : 1
have primary class -> primary : 1
primary class primary -> class : 1
class primary class -> template : 1
primary class template -> in : 1
class template in -> the : 1
template in the -> standard : 1
standard library allows -> the : 1
library allows the -> user : 1
user to create -> an : 1
to create an -> atomic : 1
to create an -> instance : 1
to create an -> syntax : 1
to create an -> observable : 1
to create an -> mouse : 1
create an atomic -> variant : 1
variant of a -> to : 1
of a to -> use : 1
a to use -> a : 1
to use a -> type : 1
to use a -> bit : 1
to use a -> fixed : 1
use a type -> as : 1
a type as -> an : 1
type as an -> atomic : 1
as an atomic -> you : 1
an atomic you -> have : 1
atomic you have -> to : 1
have to follow -> some : 1
to follow some -> criteria : 1
follow some criteria -> before : 1
some criteria before -> implementing : 1
criteria before implementing -> the : 1
before implementing the -> for : 1
implementing the for -> a : 1
for a class -> is : 1
a class is -> possible : 1
class is possible -> if : 1
is possible if -> this : 1
possible if this -> type : 1
if this type -> has : 1
this type has -> a : 1
type has a -> trivial : 1
has a trivial -> this : 1
a trivial this -> means : 1
a trivial this -> allows : 1
trivial this means -> that : 1
that the class -> should : 1
the class should -> not : 1
class should not -> contain : 1
should not contain -> any : 1
not contain any -> virtual : 1
contain any virtual -> functions : 1
any virtual functions -> or : 1
virtual functions or -> virtual : 1
functions or virtual -> base : 1
or virtual base -> classes : 1
virtual base classes -> and : 1
base classes and -> must : 1
classes and must -> use : 1
and must use -> the : 1
must use the -> default : 1
use the default -> every : 1
the default every -> base : 1
default every base -> class : 1
every base class -> and : 1
base class and -> data : 1
class and data -> member : 1
and data member -> of : 1
data member of -> the : 1
member of the -> class : 1
the class must -> have : 1
class must have -> a : 1
must have a -> trivial : 1
have a trivial -> this : 1
trivial this allows -> the : 1
this allows the -> compiler : 1
allows the compiler -> to : 1
compiler to execute -> an : 1
to execute an -> equivalent : 1
execute an equivalent -> operation : 1
an equivalent operation -> for : 1
equivalent operation for -> assignment : 1
operation for assignment -> since : 1
for assignment since -> there : 1
assignment since there -> is : 1
since there is -> no : 1
is no code -> to : 1
no code to -> with : 1
code to with -> the : 1
to with the -> requirements : 1
with the requirements -> on : 1
the requirements on -> assignment : 1
requirements on assignment -> the : 1
on assignment the -> types : 1
assignment the types -> must : 1
the types must -> be : 1
types must be -> equality : 1
must be equality -> this : 1
be equality this -> means : 1
equality this means -> that : 1
means that you -> must : 1
that you must -> be : 1
must be able -> to : 1
able to compare -> the : 1
to compare the -> instances : 1
compare the instances -> for : 1
the instances for -> equality : 1
instances for equality -> using : 1
for equality using -> this : 1
equality using this -> guarantee : 1
using this guarantee -> is : 1
this guarantee is -> required : 1
this guarantee is -> called : 1
guarantee is required -> to : 1
is required to -> ensure : 1
is required to -> run : 1
required to ensure -> that : 1
to ensure that -> the : 1
ensure that the -> operation : 1
operation will an -> instance : 1
will an instance -> of : 1
standard atomic type -> with : 1
atomic type with -> the : 1
type with the -> type : 1
with the type -> that : 1
the type that -> the : 1
type that the -> interface : 1
that the interface -> is : 1
the interface is -> limited : 1
interface is limited -> to : 1
limited to the -> operations : 1
the operations available -> for : 1
operations available for -> and : 1
available for and -> the : 1
and the assignment -> from : 1
the assignment from -> and : 1
assignment from and -> conversion : 1
from and conversion -> to : 1
and conversion to -> an : 1
conversion to an -> instance : 1
to an instance -> of : 2
instance of type -> have : 1
of type have -> already : 1
type have already -> learned : 1
have already learned -> about : 3
have already learned -> that : 3
already learned about -> the : 2
already learned about -> and : 1
learned about the -> atomic : 1
learned about the -> linguistic : 1
learned about the -> gof : 2
learned about the -> set : 1
learned about the -> creation : 1
learned about the -> rxcpp : 1
learned about the -> http : 1
about the atomic -> types : 1
and atomic operators -> available : 1
atomic operators available -> in : 1
operators available in -> the : 1
the standard while -> performing : 1
standard while performing -> operations : 1
while performing operations -> on : 1
performing operations on -> atomic : 1
on atomic we -> need : 1
atomic we need -> to : 1
need to specify -> memory : 1
to specify memory -> ordering : 1
specify memory ordering -> for : 1
ordering for certain -> we : 1
for certain we -> will : 1
certain we will -> talk : 1
we will talk -> about : 1
will talk about -> the : 1
talk about the -> significance : 1
about the significance -> and : 1
the significance and -> use : 1
significance and use -> cases : 1
and use cases -> for : 1
use cases for -> the : 1
cases for the -> different : 1
for the different -> the : 1
the different the -> key : 1
different the key -> idea : 1
the key idea -> behind : 1
the key idea -> of : 1
key idea behind -> atomic : 1
idea behind atomic -> operations : 1
behind atomic operations -> is : 1
is to provide -> synchronization : 1
to provide synchronization -> in : 1
provide synchronization in -> data : 1
synchronization in data -> access : 1
in data access -> across : 1
data access across -> multiple : 1
access across multiple -> and : 1
across multiple and -> this : 1
multiple and this -> is : 1
and this is -> achieved : 1
and this is -> a : 1
achieved by enforcing -> the : 1
by enforcing the -> order : 1
enforcing the order -> of : 1
order of for -> if : 1
of for if -> writing : 1
for if writing -> to : 1
if writing to -> the : 1
writing to the -> data : 1
to the data -> happens : 1
the data happens -> before : 1
data happens before -> the : 1
happens before the -> read : 1
before the read -> from : 1
the read from -> the : 1
from the things -> will : 1
the things will -> be : 1
will be you -> are : 1
be you are -> in : 1
you are in -> there : 1
are in there -> are : 1
there are six -> options : 1
are six options -> available : 1
six options available -> with : 1
options available with -> the : 1
with the standard -> library : 1
with the standard -> synchronization : 1
standard library that -> can : 1
library that can -> be : 2
can be applied -> to : 1
can be applied -> for : 1
be applied to -> operations : 1
be applied to -> a : 1
applied to operations -> on : 1
to operations on -> atomic : 1
on atomic and -> for : 1
on atomic and -> dive : 1
atomic and for -> all : 1
and for all -> atomic : 1
atomic operations on -> atomic : 1
atomic operations on -> the : 1
on atomic is -> the : 1
atomic is the -> memory : 1
the memory order -> by : 1
memory order by -> default : 1
order by default -> unless : 1
by default unless -> you : 1
default unless you -> specify : 1
unless you specify -> something : 1
you specify something -> six : 1
specify something six -> options : 1
something six options -> can : 1
six options can -> be : 1
options can be -> classified : 1
be classified into -> three : 1
classified into three -> consistent : 1
into three consistent -> cost : 1
three consistent cost -> of : 1
consistent cost of -> execution : 1
cost of execution -> varies : 1
of execution varies -> with : 1
execution varies with -> different : 1
varies with different -> cpus : 1
with different cpus -> for : 1
different cpus for -> different : 1
cpus for different -> the : 1
for different the -> availability : 1
different the availability -> of : 1
the availability of -> distinct : 1
availability of distinct -> models : 1
of distinct models -> allows : 1
distinct models allows -> an : 1
models allows an -> expert : 1
allows an expert -> to : 1
an expert to -> take : 1
expert to take -> advantage : 1
advantage of the -> increased : 1
advantage of the -> catalog : 1
of the increased -> performance : 1
the increased performance -> of : 1
increased performance of -> more : 1
performance of more -> ordering : 1
of more ordering -> relationships : 1
more ordering relationships -> compared : 1
ordering relationships compared -> to : 1
relationships compared to -> blocking : 1
compared to blocking -> sequentially : 1
to blocking sequentially -> consistent : 1
blocking sequentially consistent -> but : 1
sequentially consistent but -> to : 1
consistent but to -> choose : 1
but to choose -> the : 1
choose the appropriate -> memory : 1
the appropriate memory -> model : 1
appropriate memory model -> as : 1
memory model as -> one : 1
model as one -> should : 1
as one should -> understand : 1
one should understand -> how : 1
should understand how -> these : 1
understand how these -> options : 1
how these options -> affect : 1
these options affect -> the : 1
options affect the -> behavior : 1
affect the behavior -> of : 1
the behavior of -> the : 2
behavior of the -> look : 1
behavior of the -> extended : 1
behavior of the -> schedulers : 1
of the look -> into : 1
the look into -> the : 1
into the sequentially -> consistent : 1
the sequentially consistent -> model : 1
sequentially consistent model -> concept : 1
consistent model concept -> of : 1
model concept of -> sequential : 1
concept of sequential -> consistency : 1
of sequential consistency -> was : 1
of sequential consistency -> in : 1
of sequential consistency -> allows : 1
sequential consistency was -> defined : 1
consistency was defined -> by : 1
was defined by -> leslie : 1
defined by leslie -> lamport : 1
by leslie lamport -> in : 1
leslie lamport in -> sequential : 1
lamport in sequential -> consistency : 1
in sequential consistency -> provides : 1
sequential consistency provides -> two : 1
consistency provides two -> guarantees : 1
provides two guarantees -> in : 1
two guarantees in -> the : 1
guarantees in the -> execution : 1
in the execution -> of : 1
of a first -> and : 1
a first and -> memory : 1
first and memory -> ordering : 1
and memory ordering -> the : 1
memory ordering the -> instructions : 1
ordering the instructions -> of : 1
the instructions of -> a : 1
instructions of a -> program : 1
a program are -> executed : 1
program are executed -> in : 1
are executed in -> source : 1
executed in source -> code : 1
in source code -> or : 1
source code or -> an : 1
code or an -> illusion : 1
or an illusion -> of : 1
an illusion of -> source : 1
illusion of source -> code : 1
source code order -> will : 1
code order will -> be : 1
order will be -> guaranteed : 1
order will be -> the : 1
will be guaranteed -> by : 1
be guaranteed by -> the : 1
guaranteed by the -> there : 1
by the there -> is : 1
is a global -> order : 1
is a global -> that : 1
a global order -> of : 1
global order of -> all : 1
order of all -> atomic : 1
of all atomic -> operations : 1
atomic operations in -> all : 1
operations in all -> a : 1
operations in all -> threads : 1
in all a -> the : 1
all a the -> global : 1
a the global -> ordering : 1
the global ordering -> behavior : 1
global ordering behavior -> of : 1
ordering behavior of -> sequential : 1
behavior of sequential -> consistency : 1
sequential consistency in -> which : 1
consistency in which -> all : 1
in which all -> operations : 1
which all operations -> in : 1
all operations in -> all : 1
in all threads -> take : 1
all threads take -> place : 1
threads take place -> in : 1
take place in -> a : 1
place in a -> global : 1
in a global -> clock : 1
a global clock -> is : 1
global clock is -> an : 1
clock is an -> interesting : 1
is an interesting -> high : 1
an interesting high -> but : 1
interesting high but -> is : 1
high but is -> also : 1
but is also -> a : 1
also a interesting -> thing : 1
a interesting thing -> about : 1
interesting thing about -> sequential : 1
thing about sequential -> consistency : 1
about sequential consistency -> is : 1
sequential consistency is -> that : 1
consistency is that -> the : 1
that the code -> works : 1
the code works -> as : 1
code works as -> per : 1
works as per -> our : 1
as per our -> intuition : 1
per our intuition -> of : 1
our intuition of -> multiple : 1
intuition of multiple -> concurrent : 1
of multiple concurrent -> but : 1
multiple concurrent but -> with : 1
concurrent but with -> the : 1
but with the -> cost : 1
with the cost -> of : 1
cost of a -> lot : 1
of a lot -> of : 1
lot of background -> work : 1
of background work -> being : 1
background work being -> done : 1
work being done -> by : 1
being done by -> the : 1
a simple example -> to : 3
simple example to -> give : 1
simple example to -> count : 1
simple example to -> understand : 1
example to give -> us : 1
to give us -> an : 1
give us an -> edge : 1
us an edge -> into : 1
an edge into -> sequential : 1
edge into sequential -> void : 1
into sequential void -> result : 1
sequential void result -> void : 1
void result void -> result : 1
result void result -> int : 1
void result int -> result : 1
result int result -> preceding : 1
int result preceding -> program : 1
result preceding program -> synchronizes : 1
preceding program synchronizes -> the : 1
program synchronizes the -> threads : 1
synchronizes the threads -> and : 1
the threads and -> with : 1
threads and with -> the : 1
help of sequential -> because : 1
of sequential because -> of : 1
sequential because of -> sequential : 1
because of sequential -> the : 1
of sequential the -> execution : 1
sequential the execution -> is : 1
execution is totally -> so : 1
is totally so -> the : 1
totally so the -> output : 1
so the output -> of : 1
output of this -> program : 1
output of this -> code : 3
of this program -> is : 1
program is always -> as : 1
is always as -> sequential : 1
always as sequential -> consistency : 1
as sequential consistency -> waits : 1
sequential consistency waits -> in : 1
consistency waits in -> the : 1
waits in the -> while : 1
in the while -> loop : 1
the while loop -> until : 1
while loop until -> the : 1
loop until the -> atomic : 1
until the atomic -> variable : 1
atomic variable is -> as : 1
variable is as -> soon : 1
is as soon -> as : 1
soon as becomes -> in : 1
as becomes in -> continues : 1
becomes in continues -> its : 1
in continues its -> hence : 1
continues its hence -> the : 1
hence the result -> always : 1
the result always -> gets : 1
result always gets -> updated : 1
always gets updated -> with : 1
gets updated with -> strings : 1
gets updated with -> the : 1
updated with strings -> in : 1
with strings in -> the : 1
strings in the -> same : 1
same the usage -> of : 1
usage of sequential -> consistency : 1
sequential consistency allows -> both : 1
consistency allows both -> threads : 1
allows both threads -> to : 1
both threads to -> see : 1
threads to see -> the : 1
see the operations -> in : 1
the operations in -> other : 1
operations in other -> threads : 1
in other threads -> in : 1
the same hence -> both : 1
same hence both -> threads : 1
hence both threads -> follow : 1
both threads follow -> the : 1
threads follow the -> same : 1
follow the same -> global : 1
follow the same -> the : 1
the same global -> time : 1
same global time -> the : 1
global time the -> loop : 1
time the loop -> statement : 1
the loop statement -> also : 1
loop statement also -> helps : 1
statement also helps -> to : 1
also helps to -> hold : 1
also helps to -> send : 1
helps to hold -> the : 1
to hold the -> time : 1
to hold the -> the : 1
hold the time -> clock : 1
the time clock -> for : 1
time clock for -> the : 1
clock for the -> synchronization : 1
for the synchronization -> of : 1
the synchronization of -> both : 1
synchronization of both -> details : 1
of both details -> will : 1
both details will -> follow : 1
details will follow -> in : 1
will follow in -> the : 1
will follow in -> other : 1
follow in the -> next : 1
the next dive -> deep : 1
next dive deep -> into : 1
dive deep into -> semantics : 1
deep into semantics -> provided : 1
into semantics provided -> by : 1
semantics provided by -> the : 1
is the area -> where : 1
the area where -> the : 1
area where the -> intuition : 1
where the intuition -> about : 1
the intuition about -> ordering : 1
intuition about ordering -> in : 1
about ordering in -> multithread : 1
ordering in multithread -> code : 1
in multithread code -> begins : 1
multithread code begins -> to : 1
code begins to -> because : 1
begins to because -> there : 1
to because there -> is : 1
because there is -> no : 1
is no global -> synchronization : 1
no global synchronization -> between : 1
global synchronization between -> threads : 1
synchronization between threads -> in : 1
between threads in -> semantics : 1
threads in semantics -> of : 1
in semantics of -> atomic : 1
semantics of atomic -> these : 1
of atomic these -> semantics : 1
atomic these semantics -> only : 1
these semantics only -> allow : 1
semantics only allow -> synchronization : 1
only allow synchronization -> between : 1
allow synchronization between -> atomic : 1
synchronization between atomic -> operations : 1
between atomic operations -> on : 1
the same atomic -> to : 1
the same atomic -> variable : 3
the same atomic -> variables : 1
the same atomic -> type : 1
same atomic to -> the : 1
atomic to the -> load : 1
to the load -> operation : 1
the load operation -> on : 1
load operation on -> an : 1
operation on an -> atomic : 1
on an atomic -> variable : 1
an atomic variable -> performing : 1
atomic variable performing -> in : 1
variable performing in -> one : 1
performing in one -> thread : 1
in one thread -> can : 1
one thread can -> be : 1
thread can be -> synchronized : 1
can be synchronized -> with : 1
be synchronized with -> store : 1
synchronized with store -> operation : 1
with store operation -> happening : 1
store operation happening -> on : 1
operation happening on -> the : 1
happening on the -> same : 1
same atomic variable -> in : 1
same atomic variable -> and : 1
same atomic variable -> on : 1
atomic variable in -> some : 1
variable in some -> other : 1
in some other -> a : 1
in some other -> parts : 1
some other a -> programmer : 1
other a programmer -> must : 1
a programmer must -> extract : 1
a programmer must -> understand : 1
programmer must extract -> this : 1
must extract this -> feature : 1
extract this feature -> that : 1
this feature that -> establishes : 1
feature that establishes -> a : 1
that establishes a -> relationship : 1
establishes a relationship -> between : 1
a relationship between -> atomic : 1
relationship between atomic -> variables : 1
between atomic variables -> to : 1
atomic variables to -> synchronize : 1
variables to synchronize -> between : 1
to synchronize between -> this : 1
synchronize between this -> makes : 1
between this makes -> working : 1
this makes working -> with : 1
makes working with -> an : 1
working with an -> model : 1
with an model -> a : 1
an model a -> bit : 1
model a bit -> but : 1
a bit but -> at : 1
a bit but -> after : 1
bit but at -> the : 1
but at the -> same : 1
but at the -> cost : 1
same time more -> the : 1
time more the -> semantics : 1
more the semantics -> shorten : 1
the semantics shorten -> the : 1
semantics shorten the -> journey : 1
shorten the journey -> towards : 1
the journey towards -> because : 1
journey towards because -> you : 1
towards because you -> need : 1
need to bother -> about : 3
to bother about -> synchronization : 1
to bother about -> is : 1
to bother about -> when : 1
bother about synchronization -> of : 1
about synchronization of -> but : 1
synchronization of but -> synchronization : 1
of but synchronization -> of : 1
but synchronization of -> the : 1
synchronization of the -> same : 1
of the same -> atomic : 1
of the same -> services : 1
same atomic variables -> in : 1
atomic variables in -> different : 1
variables in different -> threads : 1
in different threads -> is : 1
in different threads -> using : 1
different threads is -> the : 1
threads is the -> one : 1
is the one -> we : 1
the one we -> need : 1
one we need -> to : 1
need to reason -> we : 1
to reason we -> explained : 1
reason we explained -> the : 1
we explained the -> key : 1
explained the key -> idea : 1
key idea of -> semantics : 1
idea of semantics -> is : 1
of semantics is -> the : 1
semantics is the -> synchronization : 1
is the synchronization -> between : 1
the synchronization between -> a : 1
synchronization between a -> release : 1
between a release -> operation : 1
a release operation -> with : 1
a release operation -> that : 1
release operation with -> an : 1
operation with an -> acquire : 1
with an acquire -> operation : 1
an acquire operation -> on : 1
an acquire operation -> involves : 1
acquire operation on -> the : 1
operation on the -> same : 1
atomic variable and -> establishing : 1
variable and establishing -> an : 1
and establishing an -> in : 1
establishing an in -> addition : 1
an in addition -> to : 1
addition to as -> the : 1
to as the -> name : 1
as the name -> an : 1
as the name -> loans : 1
the name an -> acquire : 1
name an acquire -> operation : 1
acquire operation involves -> acquiring : 1
operation involves acquiring -> a : 1
involves acquiring a -> which : 1
acquiring a which -> includes : 1
a which includes -> the : 1
which includes the -> operations : 1
which includes the -> event : 1
includes the operations -> used : 1
the operations used -> to : 1
operations used to -> read : 1
used to read -> an : 1
to read an -> atomic : 1
read an atomic -> such : 1
an atomic such -> as : 1
atomic such as -> the : 1
as the releasing -> of : 1
the releasing of -> a : 1
releasing of a -> lock : 1
of a lock -> is : 1
a lock is -> a : 1
lock is a -> release : 1
is a release -> which : 1
is a release -> in : 1
is a release -> operation : 1
a release which -> consists : 1
release which consists -> of : 1
which consists of -> atomic : 1
consists of atomic -> operations : 1
atomic operations such -> and : 1
operations such and -> other : 1
such and other -> the : 1
and other the -> lock : 1
and other the -> tool : 1
other the lock -> of : 1
the lock of -> a : 1
lock of a -> is : 1
of a is -> an : 1
a is an -> acquire : 1
is an acquire -> whereas : 1
an acquire whereas -> the : 1
acquire whereas the -> unlock : 1
whereas the unlock -> is : 1
the unlock is -> a : 1
unlock is a -> release : 1
a release in -> a : 1
release in a -> the : 1
a the operation -> on : 1
operation on a -> variable : 1
a variable cannot -> be : 1
variable cannot be -> taken : 1
cannot be taken -> outside : 1
be taken outside -> in : 1
taken outside in -> either : 1
outside in either -> a : 1
in either a -> variable : 1
either a variable -> can : 1
a variable can -> be : 1
variable can be -> moved : 1
be moved inside -> a : 1
moved inside a -> because : 1
inside a because -> the : 1
a because the -> variable : 1
because the variable -> moves : 1
the variable moves -> from : 1
variable moves from -> an : 1
moves from an -> unprotected : 1
from an unprotected -> area : 1
an unprotected area -> to : 1
unprotected area to -> a : 1
area to a -> protected : 1
to a protected -> this : 1
a protected this -> is : 1
protected this is -> represented : 1
this is represented -> in : 1
the following contains -> an : 1
following contains an -> acquire : 1
contains an acquire -> barrier : 1
an acquire barrier -> and : 1
acquire barrier and -> a : 1
barrier and a -> release : 1
and a release -> the : 1
a release the -> same : 1
release the same -> reasoning : 1
the same reasoning -> can : 1
same reasoning can -> be : 1
reasoning can be -> applied : 1
be applied for -> starting : 1
applied for starting -> a : 1
for starting a -> thread : 1
starting a thread -> and : 1
thread and placing -> a : 1
and placing a -> on : 1
placing a on -> a : 1
a on a -> and : 1
on a and -> the : 1
a and the -> operations : 1
a and the -> event : 1
and the operations -> related : 1
the operations related -> to : 1
operations related to -> all : 1
related to all -> other : 1
to all other -> synchronization : 1
all other synchronization -> primitives : 1
other synchronization primitives -> available : 1
other synchronization primitives -> around : 1
primitives available with -> the : 1
the standard synchronization -> takes : 1
standard synchronization takes -> place : 1
synchronization takes place -> at : 1
takes place at -> atomic : 1
place at atomic -> variable : 1
at atomic variable -> level : 1
atomic variable level -> rather : 1
variable level rather -> than : 1
level rather than -> at : 1
rather than at -> thread : 1
than at thread -> revisit : 1
at thread revisit -> the : 1
thread revisit the -> been : 1
revisit the been -> implemented : 1
the been implemented -> using : 1
been implemented using -> void : 1
implemented using void -> acquire : 1
using void acquire -> lock : 1
void acquire lock -> and : 1
acquire lock and -> spin : 1
lock and spin -> while : 1
and spin while -> void : 1
spin while void -> release : 1
while void release -> lock : 1
void release lock -> this : 1
release lock this -> the : 1
lock this the -> function : 1
is an instead -> of : 1
an instead of -> using : 1
instead of using -> the : 1
of using the -> default : 1
using the default -> sequentially : 1
the default sequentially -> consistent : 2
default sequentially consistent -> memory : 1
default sequentially consistent -> const : 1
sequentially consistent memory -> ordering : 1
consistent memory ordering -> that : 1
memory ordering that -> was : 1
ordering that was -> used : 1
that was used -> in : 1
was used in -> the : 1
the previous an -> explicit : 1
previous an explicit -> acquire : 1
an explicit acquire -> memory : 1
explicit acquire memory -> ordering : 1
acquire memory ordering -> flag : 1
memory ordering flag -> is : 1
ordering flag is -> used : 1
flag is used -> the : 1
is used the -> which : 1
used the which -> is : 1
which is a -> release : 1
release operation that -> was : 1
operation that was -> also : 1
that was also -> using : 1
was also using -> default : 1
also using default -> memory : 1
using default memory -> has : 1
default memory has -> now : 1
memory has now -> been : 1
has now been -> replaced : 1
now been replaced -> with : 1
been replaced with -> explicit : 1
replaced with explicit -> release : 1
with explicit release -> the : 1
explicit release the -> heavyweight : 1
release the heavyweight -> synchronization : 1
the heavyweight synchronization -> with : 1
heavyweight synchronization with -> sequential : 1
synchronization with sequential -> consistency : 1
with sequential consistency -> of : 1
consistency of two -> threads : 1
of two threads -> is : 1
threads is replaced -> by : 1
is replaced by -> the : 1
replaced by the -> lightweight : 1
by the lightweight -> and : 1
the lightweight and -> performant : 1
lightweight and performant -> the : 1
and performant the -> number : 1
performant the number -> of : 1
of threads using -> the : 1
threads using the -> increases : 1
threads using the -> the : 1
using the increases -> more : 1
the increases more -> than : 1
increases more than -> two : 1
more than two -> the : 1
more than two -> ever : 1
than two the -> general : 1
two the general -> acquire : 1
the general acquire -> semantics : 1
general acquire semantics -> using : 1
acquire semantics using -> will : 1
semantics using will -> not : 1
using will not -> be : 1
will not be -> because : 1
will not be -> able : 1
not be because -> the : 1
be because the -> lock : 1
because the lock -> method : 1
the lock method -> becomes : 1
lock method becomes -> an : 1
method becomes an -> the : 1
becomes an the -> memory : 1
an the memory -> model : 1
memory model has -> to : 1
model has to -> be : 1
to be changed -> to : 1
be changed to -> we : 1
changed to we -> have : 1
to we have -> seen : 1
seen that sequentially -> consistent : 1
that sequentially consistent -> ordering : 1
sequentially consistent ordering -> ensures : 1
consistent ordering ensures -> synchronization : 1
ordering ensures synchronization -> between : 1
ensures synchronization between -> while : 1
synchronization between while -> ordering : 1
between while ordering -> establishes : 1
while ordering establishes -> ordering : 1
ordering establishes ordering -> between : 1
establishes ordering between -> read : 1
ordering between read -> and : 1
between read and -> write : 1
read and write -> operations : 1
and write operations -> on : 1
write operations on -> the : 1
atomic variable on -> multiple : 1
variable on multiple -> see : 1
on multiple see -> the : 1
multiple see the -> specifications : 1
see the specifications -> of : 1
specifications of relaxed -> memory : 1
of relaxed memory -> on : 1
relaxed memory on -> atomic : 1
memory on atomic -> types : 1
atomic types performed -> with : 1
types performed with -> relaxed : 1
performed with relaxed -> memory : 1
with relaxed memory -> ordering : 1
relaxed memory ordering -> using : 1
relaxed memory ordering -> semantics : 1
relaxed memory ordering -> ensures : 1
memory ordering using -> the : 1
ordering using the -> tag : 1
using the tag -> are : 1
the tag are -> not : 1
tag are not -> synchronization : 1
are not synchronization -> in : 1
not synchronization in -> contrast : 1
synchronization in contrast -> with : 1
in contrast with -> other : 1
contrast with other -> ordering : 1
with other ordering -> options : 1
other ordering options -> that : 1
ordering options that -> are : 1
options that are -> available : 1
the standard they -> do : 1
standard they do -> not : 1
they do not -> impose : 1
they do not -> know : 1
they do not -> consider : 1
do not impose -> an : 1
not impose an -> order : 1
impose an order -> among : 1
an order among -> concurrent : 1
order among concurrent -> memory : 1
among concurrent memory -> the : 1
concurrent memory the -> relaxed : 1
memory the relaxed -> memory : 1
the relaxed memory -> ordering : 2
ordering semantics only -> guarantee : 1
semantics only guarantee -> that : 1
only guarantee that -> the : 1
that the operations -> on : 1
same atomic type -> inside : 1
atomic type inside -> the : 1
type inside the -> same : 1
inside the same -> thread : 1
the same thread -> cannot : 1
same thread cannot -> be : 1
thread cannot be -> and : 1
cannot be and -> this : 1
be and this -> guarantee : 1
and this guarantee -> is : 1
guarantee is called -> order : 1
is called order -> in : 1
called order in -> relaxed : 1
order in relaxed -> ordering : 1
in relaxed ordering -> only : 1
relaxed ordering only -> guarantees : 1
ordering only guarantees -> atomicity : 1
only guarantees atomicity -> and : 1
guarantees atomicity and -> modification : 1
atomicity and modification -> order : 1
and modification order -> other : 1
modification order other -> threads : 1
order other threads -> can : 1
other threads can -> see : 1
threads can see -> these : 1
can see these -> operations : 1
see these operations -> in : 1
these operations in -> different : 1
operations in different -> memory : 1
in different memory -> ordering : 1
different memory ordering -> can : 1
memory ordering can -> be : 1
ordering can be -> used : 1
be used effectively -> in : 1
used effectively in -> places : 1
effectively in places -> where : 1
in places where -> synchronization : 1
places where synchronization -> or : 1
where synchronization or -> ordering : 1
synchronization or ordering -> is : 1
or ordering is -> not : 1
ordering is not -> and : 1
is not and -> atomicity : 1
not and atomicity -> can : 1
and atomicity can -> be : 1
atomicity can be -> an : 1
be an added -> advantage : 1
an added advantage -> for : 1
added advantage for -> performance : 1
advantage for performance -> one : 1
for performance one -> typical : 1
performance one typical -> example : 1
one typical example -> would : 1
typical example would -> be : 1
example would be -> incrementing : 1
would be incrementing -> such : 1
be incrementing such -> as : 1
incrementing such as -> reference : 1
such as reference -> counters : 1
as reference counters -> of : 1
reference counters of -> where : 1
counters of where -> they : 1
of where they -> only : 1
where they only -> require : 1
they only require -> but : 1
only require but -> decrementing : 1
require but decrementing -> the : 1
but decrementing the -> reference : 1
decrementing the reference -> count : 1
the reference count -> needs : 1
reference count needs -> synchronization : 1
count needs synchronization -> with : 1
needs synchronization with -> the : 1
synchronization with the -> destructor : 1
with the destructor -> of : 1
the destructor of -> this : 1
destructor of this -> template : 1
this template see -> a : 1
template see a -> simple : 1
see a simple -> example : 1
example to count -> the : 1
to count the -> number : 1
threads that were -> spawned : 1
that were spawned -> with : 1
were spawned with -> relaxed : 1
spawned with relaxed -> count : 1
with relaxed count -> void : 1
relaxed count void -> int : 1
count void int -> for : 1
void int for -> n : 1
int for n -> n : 1
n n for -> t : 1
n for t -> of : 1
for t of -> spawned : 1
t of spawned -> threads : 1
of spawned threads -> count : 1
of spawned threads -> output : 1
spawned threads count -> this : 1
threads count this -> ten : 1
count this ten -> threads : 1
this ten threads -> are : 1
ten threads are -> spawned : 1
threads are spawned -> from : 1
are spawned from -> function : 1
spawned from function -> with : 1
from function with -> a : 1
function with a -> thread : 1
thread function where -> on : 1
function where on -> each : 1
where on each -> thread : 1
each thread the -> atomic : 1
thread the atomic -> integer : 1
the atomic integer -> value : 1
atomic integer value -> is : 1
integer value is -> incremented : 1
value is incremented -> by : 1
is incremented by -> one : 1
incremented by one -> using : 1
by one using -> the : 1
one using the -> atomic : 1
using the atomic -> operation : 1
atomic operation in -> contrast : 1
operation in contrast -> to : 1
in contrast to -> compound : 1
contrast to compound -> assignment : 1
to compound assignment -> operators : 1
compound assignment operators -> and : 1
and and available -> with : 1
and available with -> the : 1
function can accept -> the : 1
can accept the -> memory : 1
accept the memory -> ordering : 1
the memory ordering -> argument : 1
memory ordering argument -> and : 1
ordering argument and -> it : 1
it is program -> prints : 1
is program prints -> the : 1
program prints the -> number : 1
prints the number -> of : 1
of threads spawned -> in : 1
threads spawned in -> the : 1
spawned in the -> program : 1
in the program -> as : 1
the program as -> of : 1
program as of -> spawned : 1
as of spawned -> threads : 1
spawned threads output -> of : 1
threads output of -> the : 1
the program remains -> the : 1
program remains the -> same : 1
remains the same -> for : 1
the same for -> any : 1
the same for -> all : 1
the same for -> other : 1
same for any -> other : 1
for any other -> relevant : 1
for any other -> case : 1
any other relevant -> but : 1
other relevant but -> the : 1
relevant but the -> relaxed : 1
but the relaxed -> memory : 1
memory ordering ensures -> atomicity : 1
ordering ensures atomicity -> and : 1
ensures atomicity and -> thus : 1
atomicity and thus -> we : 1
and thus we -> have : 1
thus we have -> discussed : 1
have discussed the -> levels : 1
discussed the levels -> of : 1
the levels of -> the : 1
levels of the -> different : 1
of the different -> memory : 1
the different memory -> and : 1
different memory and -> their : 1
memory and their -> effect : 1
and their effect -> on : 1
their effect on -> atomic : 1
effect on atomic -> and : 1
atomic and dive -> into : 1
and dive into -> an : 1
dive into an -> implementation : 1
into an implementation -> of : 1
implementation of a -> data : 1
of a data -> structure : 1
of a data -> and : 1
data structure using -> atomic : 1
structure using atomic -> data : 1
using atomic data -> structure : 1
atomic data structure -> we : 1
data structure we -> already : 1
structure we already -> the : 1
we already the -> data : 1
already the data -> in : 1
the data in -> an : 1
the data in -> such : 1
the data in -> a : 1
data in an -> actual : 1
in an actual -> system : 1
an actual system -> is : 1
actual system is -> often : 1
system is often -> represented : 1
is often represented -> in : 1
often represented in -> the : 1
form of a -> data : 1
a data and -> when : 1
data and when -> it : 1
and when it -> comes : 1
comes to concurrent -> operations : 1
to concurrent operations -> on : 1
concurrent operations on -> a : 1
on a data -> performance : 1
a data performance -> is : 1
data performance is -> a : 1
performance is a -> big : 1
is a big -> in : 1
a big in -> concurrency : 1
big in concurrency -> and : 1
parallelism in we -> learned : 1
in we learned -> how : 1
how to write -> a : 3
how to write -> reactive : 1
how to write -> handlers : 1
write a we -> used : 1
a we used -> locks : 1
we used locks -> and : 1
used locks and -> condition : 1
locks and condition -> variables : 1
and condition variables -> to : 1
condition variables to -> implement : 1
variables to implement -> to : 1
to implement to -> explain : 1
implement to explain -> how : 1
to explain how -> to : 1
explain how to -> write : 1
a data write -> a : 1
data write a -> very : 1
write a very -> basic : 1
a very basic -> queue : 1
very basic queue -> system : 1
basic queue system -> using : 1
queue system using -> a : 1
system using a -> paradigm : 1
system using a -> pattern : 1
using a paradigm -> without : 1
a paradigm without -> using : 1
paradigm without using -> locks : 1
without using locks -> or : 1
using locks or -> condition : 1
locks or condition -> this : 1
or condition this -> will : 1
condition this will -> improve : 1
this will improve -> the : 1
will improve the -> performance : 1
improve the performance -> of : 1
the code for -> rather : 1
the code for -> the : 1
code for rather -> than : 1
for rather than -> using : 1
rather than using -> a : 1
than using a -> wrapper : 1
using a wrapper -> over : 1
wrapper over a -> standard : 1
over a standard -> data : 1
a standard data -> we : 1
a standard data -> donald : 1
standard data we -> will : 1
data we will -> roll : 1
data we will -> construct : 1
we will roll -> it : 1
will roll it -> out : 1
roll it out -> from : 1
it out from -> we : 1
out from we -> have : 1
from we have -> made : 1
from we have -> written : 1
we have made -> an : 1
have made an -> assumption : 1
made an assumption -> that : 1
assumption that there -> is : 1
that there is -> a : 2
that there is -> an : 1
is a single -> producer : 1
a single producer -> and : 1
single producer and -> a : 1
producer and a -> single : 1
and a single -> consumer : 1
a single consumer -> in : 1
single consumer in -> this : 1
consumer in this -> class : 1
consumer in this -> mutates : 1
in this class -> struct : 1
in this class -> as : 1
this class struct -> node : 1
class struct node -> const : 1
struct node const -> return : 1
node const return -> return : 1
return return class -> contains : 1
return class contains -> a : 1
class contains a -> structure : 1
contains a structure -> to : 1
a structure to -> represent : 1
structure to represent -> a : 1
structure to represent -> an : 1
to represent a -> queue : 1
represent a queue -> node : 1
a queue node -> with : 1
queue node with -> data : 1
node with data -> members : 1
with data members -> to : 1
data members to -> represent : 1
members to represent -> the : 1
to represent the -> data : 1
to represent the -> four : 1
to represent the -> primitive : 1
represent the data -> of : 1
the data of -> a : 1
data of a -> node : 1
a node and -> a : 1
node and a -> pointer : 1
and a pointer -> to : 1
next the class -> contains : 1
the class contains -> two : 1
class contains two -> instances : 1
contains two instances -> of : 1
two instances of -> an : 1
instances of an -> atomic : 1
of an atomic -> pointer : 1
an atomic pointer -> to : 1
atomic pointer to -> the : 1
to the structure -> which : 1
the structure which -> is : 1
structure which is -> already : 1
which is already -> defined : 1
is already defined -> inside : 1
already defined inside -> the : 1
defined inside the -> one : 1
inside the one -> instance : 1
the one instance -> stores : 1
one instance stores -> the : 1
instance stores the -> pointer : 1
stores the pointer -> to : 1
to the head -> node : 1
the head node -> of : 2
head node of -> the : 2
node of the -> while : 1
node of the -> queue : 1
of the while -> the : 1
the while the -> other : 1
while the other -> points : 1
the other points -> to : 1
other points to -> the : 1
to the tail -> a : 1
the tail a -> is : 1
tail a is -> used : 1
a is used -> to : 1
used to retrieve -> the : 1
to retrieve the -> head : 1
to retrieve the -> of : 1
to retrieve the -> data : 1
to retrieve the -> content : 1
to retrieve the -> if : 1
to retrieve the -> contents : 1
to retrieve the -> and : 1
retrieve the head -> node : 1
of the queue -> by : 1
the queue by -> calling : 1
queue by calling -> an : 1
by calling an -> atomic : 1
calling an atomic -> but : 1
an atomic but -> only : 1
atomic but only -> if : 1
but only if -> the : 1
only if the -> queue : 1
only if the -> event : 1
if the queue -> contains : 1
the queue contains -> at : 1
queue contains at -> least : 1
contains at least -> one : 1
least one the -> atomic : 1
one the atomic -> operation : 1
atomic operation follows -> the : 1
operation follows the -> default : 1
follows the default -> sequentially : 1
sequentially consistent const -> delete : 1
consistent const delete -> head : 1
const delete head -> node : 1
delete head node -> is : 1
head node is -> instantiated : 1
node is instantiated -> and : 1
is instantiated and -> the : 1
instantiated and the -> tail : 1
and the tail -> points : 1
the tail points -> to : 1
tail points to -> that : 1
points to that -> memory : 1
to that memory -> when : 1
that memory when -> the : 1
memory when the -> queue : 1
when the queue -> object : 1
the queue object -> is : 1
queue object is -> the : 1
is the copy -> constructor : 1
constructor and copy -> assignment : 1
and copy assignment -> operators : 1
copy assignment operators -> are : 1
assignment operators are -> marked : 1
operators are marked -> as : 1
marked as deleted -> to : 1
as deleted to -> prevent : 1
deleted to prevent -> them : 1
to prevent them -> from : 1
prevent them from -> being : 1
them from being -> inside : 1
from being inside -> the : 1
being inside the -> all : 1
inside the all -> of : 1
the all of -> the : 1
of the elements -> in : 1
in the queue -> are : 1
the queue are -> deleted : 1
queue are deleted -> return : 1
are deleted return -> const : 1
deleted return const -> delete : 1
return const delete -> return : 1
const delete return -> void : 1
delete return void -> p : 1
return void p -> new : 1
void p new -> const : 1
p new const -> preceding : 1
new const preceding -> code : 1
const preceding code -> snippet : 1
code snippet implements -> standard : 1
code snippet implements -> a : 1
snippet implements standard -> queue : 1
implements standard queue -> which : 1
standard queue which -> are : 1
queue which are -> enqueue : 1
which are enqueue -> and : 1
are enqueue and -> we : 1
enqueue and we -> have : 1
and we have -> ensured : 1
and we have -> treated : 1
we have ensured -> that : 1
have ensured that -> there : 1
ensured that there -> is : 1
a between enqueue -> and : 1
between enqueue and -> dequeue : 1
enqueue and dequeue -> using : 1
and dequeue using -> the : 1
dequeue using the -> swap : 1
using the swap -> and : 1
the swap and -> store : 1
swap and store -> atomic : 1
and store atomic -> this : 1
store atomic this -> we : 1
atomic this we -> have : 1
this we have -> discussed : 1
this we have -> instantiated : 1
this we have -> included : 1
this we have -> leveraged : 1
this we have -> covered : 1
this we have -> seen : 1
have discussed facilities -> provided : 1
discussed facilities provided -> by : 1
library to write -> we : 1
library to write -> our : 1
to write we -> saw : 1
write we saw -> how : 1
to use futures -> and : 1
use futures and -> promises : 1
and promises with -> and : 1
promises with and -> we : 1
with and we -> discussed : 1
discussed the new -> memory : 1
the modern after -> we : 1
modern after we -> covered : 1
after we covered -> atomic : 1
we covered atomic -> and : 1
covered atomic and -> operations : 1
atomic and operations -> associated : 1
and operations associated -> with : 1
operations associated with -> the : 1
with the most -> important : 1
most important thing -> that : 1
important thing that -> we : 1
thing that we -> learned : 1
that we learned -> about : 1
that we learned -> more : 1
learned about are -> the : 1
about are the -> various : 1
are the various -> semantics : 1
the various semantics -> of : 1
various semantics of -> the : 1
in a this -> particular : 1
a this particular -> chapter : 1
particular chapter and -> the : 1
and the previous -> one : 1
the previous one -> will : 1
previous one will -> enable : 1
one will enable -> us : 1
will enable us -> to : 1
enable us to -> reason : 1
us to reason -> about : 1
to reason about -> the : 1
reason about the -> concurrency : 1
about the concurrency -> aspects : 1
the concurrency aspects -> of : 1
concurrency aspects of -> the : 1
reactive programming the -> following : 1
reactive programming the -> reactive : 1
reactive programming the -> rxcpp : 1
reactive programming the -> operator : 1
programming the following -> we : 1
we will shift -> our : 1
will shift our -> attention : 1
shift our attention -> from : 1
our attention from -> language : 1
attention from language -> and : 1
from language and -> concurrency : 1
language and concurrency -> to : 1
and concurrency to -> the : 1
concurrency to the -> standard : 1
to the standard -> interface : 1
the standard interface -> of : 1
standard interface of -> the : 1
reactive programming we -> will : 1
reactive programming we -> learned : 1
reactive programming we -> also : 1
reactive programming we -> covered : 1
be covering to -> the : 1
covering to the -> last : 1
to the last -> three : 1
the last three -> we : 1
last three we -> learned : 1
three we learned -> about : 1
about the linguistic -> features : 1
the linguistic features -> of : 1
linguistic features of -> modern : 1
modern programming and -> so : 1
programming and so -> the : 1
so the topics -> covered : 1
the topics covered -> there : 1
topics covered there -> can : 1
covered there can -> be : 1
there can be -> considered : 1
considered as sort -> of : 1
as sort of -> prerequisites : 1
sort of prerequisites -> to : 1
of prerequisites to -> start : 1
prerequisites to start -> learning : 1
to start learning -> about : 1
start learning about -> the : 1
learning about the -> reactive : 1
programming the reactive -> programming : 2
programming model warrants -> skills : 1
model warrants skills -> in : 1
warrants skills in -> functional : 1
skills in functional -> concurrent : 1
in functional concurrent -> design : 1
functional concurrent design -> and : 1
concurrent design and -> event : 1
design and event -> stream : 1
and event stream -> to : 1
and event stream -> subscribers : 1
event stream to -> name : 1
stream to name -> a : 1
to name a -> we : 1
to name a -> the : 1
to name a -> of : 1
name a we -> have : 1
have already covered -> or : 1
have already covered -> the : 2
have already covered -> lots : 1
already covered or -> touched : 1
covered or touched -> upon : 1
or touched upon -> functional : 1
touched upon functional -> and : 1
upon functional and -> some : 1
functional and some -> topics : 1
and some topics -> that : 1
some topics that -> are : 1
topics that are -> related : 1
that are related -> to : 1
are related to -> scheduling : 1
are related to -> what : 1
related to scheduling -> in : 1
to scheduling in -> the : 1
scheduling in the -> previous : 1
scheduling in the -> main : 1
scheduling in the -> key : 1
the previous this -> we : 1
previous this we -> will : 1
cover the wonderful -> world : 1
patterns to appreciate -> the : 1
to appreciate the -> crux : 1
appreciate the crux -> of : 1
the crux of -> reactive : 1
the crux of -> the : 2
crux of reactive -> programming : 1
reactive programming in -> general : 2
reactive programming in -> believe : 1
reactive programming in -> a : 2
reactive programming in -> the : 1
reactive programming in -> and : 1
programming in general -> and : 2
general and observables -> in : 1
and observables in -> in : 1
observables in in -> the : 1
in in the -> next : 2
stream programming before -> we : 1
programming before we -> jump : 1
before we jump -> into : 1
we jump into -> the : 1
jump into the -> rxcpp : 1
into the rxcpp -> the : 1
the rxcpp the -> design : 1
the rxcpp the -> aim : 1
the rxcpp the -> key : 1
rxcpp the design -> pattern : 1
the design pattern -> movement : 2
design pattern movement -> reached : 1
design pattern movement -> started : 1
design pattern movement -> is : 1
pattern movement reached -> critical : 1
movement reached critical -> mass : 1
reached critical mass -> with : 1
critical mass with -> the : 1
mass with the -> publication : 1
with the publication -> of : 1
the publication of -> a : 1
publication of a -> book : 1
of a book -> elements : 1
a book elements -> of : 1
book elements of -> reusable : 1
elements of reusable -> object : 1
elements of reusable -> this : 1
of reusable object -> oriented : 1
reusable object oriented -> by : 1
object oriented by -> of : 1
oriented by of -> who : 1
by of who -> cataloged : 1
of who cataloged -> a : 1
who cataloged a -> set : 1
cataloged a set -> of : 1
set of patterns -> grouped : 1
of patterns grouped -> into : 1
patterns grouped into -> and : 1
grouped into and -> behavioral : 1
into and behavioral -> the : 2
and behavioral the -> gof : 1
and behavioral the -> original : 1
behavioral the gof -> catalog : 1
the gof catalog -> defined : 1
the gof catalog -> was : 1
the gof catalog -> and : 1
gof catalog defined -> the : 1
catalog defined the -> observer : 1
defined the observer -> pattern : 1
the observer pattern -> in : 1
observer pattern in -> the : 1
in the category -> of : 1
the category of -> behavioral : 1
category of behavioral -> a : 1
of behavioral a -> key : 1
behavioral a key -> message : 1
a key message -> we : 1
key message we -> want : 1
message we want -> to : 1
want to deliver -> here : 1
to deliver here -> is : 1
deliver here is -> that : 1
here is that -> the : 1
that the reactive -> programming : 4
can be understood -> through : 1
can be understood -> by : 1
be understood through -> knowledge : 1
understood through knowledge -> of : 1
through knowledge of -> the : 1
of the venerable -> gof : 1
the venerable gof -> in : 1
venerable gof in -> this : 1
gof in this -> we : 1
we will gof -> observer : 1
will gof observer -> of : 1
gof observer of -> the : 1
observer of the -> gof : 1
look at design -> patterns : 2
at design patterns -> and : 2
patterns and hierarchies -> using : 1
and hierarchies using -> composite : 1
hierarchies using composite -> design : 1
using composite design -> processing : 1
composite design processing -> of : 1
design processing of -> composites : 1
processing of composites -> using : 1
of composites using -> the : 1
composites using the -> composite : 1
using the composite -> and : 1
using the composite -> the : 2
using the composite -> can : 1
the composite and -> navigating : 1
composite and navigating -> through : 1
and navigating through -> the : 1
navigating through the -> iterator : 1
through the iterator -> from : 1
the iterator from -> iterator : 1
iterator from iterator -> to : 1
from iterator to -> by : 1
iterator to by -> reversing : 1
to by reversing -> the : 1
by reversing the -> gof : 1
reversing the gof -> observer : 1
gof observer gof -> observer : 1
gof observer gof -> pattern : 1
observer gof observer -> pattern : 1
observer pattern is -> also : 1
pattern is also -> referred : 1
is also referred -> to : 1
also referred to -> as : 1
to as in -> the : 1
in the gof -> the : 1
in the gof -> pattern : 1
in the gof -> repository : 1
the gof the -> idea : 1
gof the idea -> is : 1
the idea is -> that : 1
idea is that -> emits : 1
is that emits -> will : 1
that emits will -> have : 1
emits will have -> a : 1
will have a -> relationship : 1
have a relationship -> with : 1
a relationship with -> event : 1
relationship with event -> sinks : 1
with event sinks -> that : 1
event sinks that -> listen : 1
sinks that listen -> to : 1
that listen to -> the : 1
the event every -> have : 1
event every have -> a : 1
every have a -> mechanism : 1
have a mechanism -> for : 1
mechanism for the -> event : 1
mechanism for the -> the : 1
mechanism for the -> dynamic : 1
the event sinks -> to : 1
the event sinks -> can : 1
the event sinks -> implement : 1
the event sinks -> when : 1
event sinks to -> subscribe : 1
sinks to subscribe -> in : 1
to subscribe in -> order : 1
subscribe in order -> to : 1
order to get -> different : 1
to get different -> types : 1
get different types -> of : 1
different types of -> a : 1
types of a -> single : 1
of a single -> emit : 1
a single emit -> multiple : 1
single emit multiple -> an : 1
emit multiple an -> send : 1
multiple an send -> notifications : 1
an send notifications -> to : 1
send notifications to -> thousands : 1
notifications to thousands -> of : 1
to thousands of -> subscribers : 1
thousands of subscribers -> sinks : 1
of subscribers sinks -> or : 1
subscribers sinks or -> there : 1
sinks or there -> is : 1
or there is -> a : 1
is a change -> in : 2
a change in -> state : 1
a change in -> the : 2
change in state -> or : 1
in state or -> something : 1
state or something -> significant : 1
or something significant -> happens : 1
something significant happens -> in : 1
significant happens in -> its : 1
happens in its -> the : 1
in its the -> walk : 1
its the walk -> through : 1
the walk through -> the : 1
walk through the -> list : 1
through the list -> of : 3
through the list -> void : 1
of subscribers and -> notify : 1
subscribers and notify -> them : 1
and notify them -> one : 1
notify them one -> by : 1
them one by -> the : 1
one by the -> gof : 1
by the gof -> book : 1
the gof book -> was : 1
the gof book -> and : 1
gof book was -> written : 1
book was written -> at : 2
was written at -> a : 2
written at a -> time : 2
a time when -> the : 3
time when the -> world : 3
when the world -> was : 3
the world was -> mostly : 1
the world was -> really : 1
the world was -> struggling : 1
world was mostly -> doing : 1
was mostly doing -> sequential : 1
mostly doing sequential -> topics : 1
doing sequential topics -> such : 1
sequential topics such -> as : 1
topics such as -> concurrency : 2
topics such as -> and : 1
such as concurrency -> were : 1
such as concurrency -> and : 1
as concurrency were -> mostly : 1
concurrency were mostly -> related : 1
were mostly related -> to : 1
mostly related to -> libraries : 1
related to libraries -> or : 1
to libraries or -> the : 1
libraries or the -> thread : 1
or the thread -> we : 1
the thread we -> will : 1
thread we will -> write : 1
program to demonstrate -> the : 2
program to demonstrate -> a : 1
demonstrate the whole -> idea : 1
demonstrate the whole -> technique : 1
the whole idea -> of : 1
whole idea of -> the : 1
idea of the -> observer : 1
idea of the -> structure : 1
of the observer -> the : 1
of the observer -> for : 1
of the observer -> in : 1
of the observer -> this : 1
of the observer -> methods : 1
the observer the -> purpose : 1
observer the purpose -> is : 1
the purpose is -> to : 1
purpose is to -> quickly : 1
purpose is to -> demonstrate : 2
is to quickly -> understand : 1
to quickly understand -> the : 1
quickly understand the -> observer : 1
understand the observer -> and : 1
the observer and -> ideas : 1
observer and ideas -> such : 1
and ideas such -> as : 1
ideas such as -> robustness : 1
such as robustness -> have : 1
as robustness have -> been : 1
robustness have been -> given : 1
have been given -> secondary : 1
been given secondary -> the : 1
given secondary the -> listing : 1
secondary the listing -> is : 1
the listing is -> and : 1
listing is and -> easily : 1
is and easily -> using : 1
and easily using -> namespace : 1
easily using namespace -> forward : 1
using namespace forward -> declaration : 1
using namespace forward -> declarations : 1
namespace forward declaration -> of : 1
forward declaration of -> event : 1
declaration of event -> sink : 1
of event sink -> class : 1
event sink class -> toy : 1
event sink class -> for : 1
sink class toy -> implementation : 1
class toy implementation -> of : 1
toy implementation of -> class : 2
toy implementation of -> active : 1
of class t -> t : 1
class t t -> is : 1
t t is -> expected : 1
t is expected -> to : 1
expected to be -> a : 1
be a value -> type : 1
a value type -> state : 1
value type state -> bool : 1
type state bool -> void : 1
state bool void -> for : 1
bool void for -> sink : 1
void for sink -> t : 1
for sink t -> return : 1
sink t return -> void : 1
t return void -> state : 1
return void state -> previous : 1
return void state -> write : 1
void state previous -> code : 1
state previous code -> snippet : 1
previous code snippet -> implements : 1
previous code snippet -> instantiates : 1
previous code snippet -> generates : 1
previous code snippet -> creates : 2
previous code snippet -> converts : 1
previous code snippet -> prints : 1
previous code snippet -> calls : 1
snippet implements a -> trivial : 1
implements a trivial -> which : 1
a trivial which -> can : 1
trivial which can -> potentially : 1
which can potentially -> store : 1
can potentially store -> an : 1
potentially store an -> integral : 1
store an integral -> value : 1
an integral value -> as : 1
integral value as -> the : 1
value as the -> in : 1
as the in -> modern : 1
as the in -> this : 1
in modern we -> can : 1
can use type -> traits : 1
use type traits -> to : 1
type traits to -> detect : 1
traits to detect -> whether : 1
to detect whether -> the : 2
to detect whether -> a : 1
detect whether the -> consumer : 1
detect whether the -> number : 1
whether the consumer -> has : 1
the consumer has -> instantiated : 1
consumer has instantiated -> this : 1
has instantiated this -> class : 1
instantiated this class -> with : 1
this class with -> an : 1
class with an -> integral : 1
class with an -> a : 1
with an integral -> since : 1
an integral since -> our : 1
integral since our -> focus : 1
since our focus -> is : 1
our focus is -> on : 1
focus is on -> we : 1
is on we -> have : 1
on we have -> not : 1
on we have -> already : 1
have not added -> assertions : 1
not added assertions -> pertaining : 1
added assertions pertaining -> to : 1
assertions pertaining to -> type : 1
pertaining to type -> in : 1
to type in -> the : 1
type in the -> next : 1
the next there -> is : 1
next there is -> a : 1
is a notion -> called : 1
a notion called -> as : 1
notion called as -> constraints : 1
called as constraints -> in : 1
as constraints in -> other : 1
constraints in other -> that : 1
in other that -> will : 1
other that will -> help : 1
that will help -> in : 1
that will help -> us : 2
that will help -> the : 1
will help in -> enforcing : 1
help in enforcing -> that : 1
in enforcing that -> directly : 1
enforcing that directly -> type : 1
that directly type -> in : 1
directly type in -> a : 1
type in a -> an : 1
in a an -> store : 1
a an store -> lots : 1
an store lots -> of : 1
store lots of -> variables : 1
lots of variables -> or : 1
of variables or -> streams : 1
variables or streams -> of : 1
or streams of -> any : 1
streams of any -> changes : 1
of any changes -> in : 1
any changes in -> them : 1
changes in them -> will : 1
in them will -> be : 1
them will be -> broadcast : 1
will be broadcast -> to : 1
be broadcast to -> all : 1
broadcast to all -> in : 1
to all in -> the : 1
all in the -> when : 1
in the when -> a : 1
the when a -> consumer : 1
when a consumer -> of : 1
a consumer of -> the : 1
consumer of the -> event : 1
the event sink -> itself : 1
the event sink -> observer : 1
the event sink -> have : 1
the event sink -> event : 1
the event sink -> will : 1
event sink itself -> is : 1
sink itself is -> the : 1
itself is the -> consumer : 1
is the consumer -> in : 1
the consumer in -> this : 1
in this mutates -> the : 1
this mutates the -> the : 1
mutates the the -> method : 1
the the method -> will : 2
the the method -> receives : 1
the the method -> returns : 1
the the method -> immediately : 1
the the method -> url : 1
the method will -> get : 1
the method will -> be : 1
the method will -> redirect : 1
method will get -> the : 1
get the method -> works : 1
the method works -> through : 1
method works through -> the : 1
works through the -> list : 1
list of sinks -> and : 1
of sinks and -> invokes : 1
sinks and invokes -> the : 1
and invokes the -> event : 1
invokes the event -> sinks : 1
sinks can do -> the : 1
can do the -> tasks : 1
do the tasks -> that : 1
the tasks that -> are : 1
tasks that are -> specific : 1
that are specific -> to : 1
are specific to -> their : 1
specific to their -> we : 1
to their we -> have : 1
their we have -> not : 1
not implemented methods -> such : 1
implemented methods such -> as : 1
methods such as -> unsubscribe : 1
such as unsubscribe -> to : 1
as unsubscribe to -> focus : 1
unsubscribe to focus -> on : 1
focus on the -> core : 2
focus on the -> running : 1
focus on the -> implementation : 1
focus on the -> tasks : 1
on the core -> an : 1
on the core -> reactive : 1
the core an -> event : 1
core an event -> sink : 1
an event sink -> class : 1
sink class for -> the : 1
class for the -> preceding : 1
the preceding template -> class : 1
preceding template class -> t : 1
template class t -> oldstate : 1
class t oldstate -> virtual : 1
t oldstate virtual -> virtual : 1
oldstate virtual virtual -> void : 1
virtual virtual void -> t : 1
virtual virtual void -> double : 1
virtual void t -> state : 1
void t state -> cout : 1
t state cout -> state : 1
state cout state -> oldstate : 1
cout state oldstate -> oldstate : 1
state oldstate oldstate -> cout : 1
oldstate oldstate cout -> state : 1
oldstate cout state -> state : 1
cout state state -> class : 1
state state class -> has : 1
state class has -> implemented : 1
class has implemented -> the : 1
has implemented the -> method : 1
has implemented the -> there : 1
implemented the method -> to : 1
the method to -> do : 1
the method to -> emit : 1
the method to -> create : 1
the method to -> generate : 1
the method to -> print : 1
method to do -> a : 1
to do a -> task : 1
do a task -> that : 1
a task that -> is : 1
task that is -> relevant : 1
that is relevant -> for : 1
is relevant for -> its : 1
relevant for its -> it : 1
for its it -> just : 1
its it just -> prints : 1
it just prints -> the : 1
just prints the -> values : 1
prints the values -> of : 1
the values of -> the : 2
the values of -> other : 1
values of the -> old : 1
values of the -> cell : 1
of the old -> state : 1
the old state -> and : 1
old state and -> current : 1
state and current -> state : 1
and current state -> onto : 1
current state onto -> the : 1
state onto the -> in : 1
onto the in -> real : 1
the in real -> sinks : 1
in real sinks -> might : 1
real sinks might -> modify : 1
sinks might modify -> a : 1
might modify a -> ux : 1
modify a ux -> element : 1
a ux element -> or : 1
ux element or -> relay : 1
element or relay -> the : 1
or relay the -> propagation : 1
relay the propagation -> of : 1
the propagation of -> state : 1
the propagation of -> an : 1
the propagation of -> data : 1
propagation of state -> to : 1
of state to -> other : 1
state to other -> objects : 1
to other objects -> through : 1
other objects through -> also : 1
objects through also -> write : 1
through also write -> another : 1
also write another -> event : 1
write another event -> which : 1
another event which -> will : 1
event which will -> inherit : 1
which will inherit -> from : 1
will inherit from -> a : 1
will inherit from -> the : 1
inherit from a -> simple : 1
from a simple -> specialized : 1
a simple specialized -> observe : 1
simple specialized observe -> class : 1
specialized observe class -> anotherobserver : 1
observe class anotherobserver -> public : 1
class anotherobserver public -> virtual : 1
anotherobserver public virtual -> virtual : 1
public virtual virtual -> void : 1
virtual void double -> state : 1
void double state -> cout : 1
double state cout -> specialized : 1
state cout specialized -> state : 1
cout specialized state -> have : 1
specialized state have -> implemented : 1
state have implemented -> a : 1
have implemented a -> specialized : 1
implemented a specialized -> version : 1
a specialized version -> of : 1
specialized version of -> the : 1
version of the -> observer : 2
the observer for -> demonstration : 1
observer for demonstration -> this : 1
for demonstration this -> has : 1
demonstration this has -> been : 1
this has been -> done : 2
this has been -> a : 1
done to show -> that : 1
to show that -> we : 1
show that we -> can : 1
we can have -> subscribers : 1
we can have -> a : 1
we can have -> multiple : 1
can have subscribers -> that : 1
have subscribers that -> are : 1
subscribers that are -> instances : 1
that are instances -> of : 1
are instances of -> two : 1
instances of two -> classes : 1
of two classes -> can : 1
two classes can -> be : 1
classes can be -> inherited : 1
can be inherited -> from : 1
be inherited from -> here : 1
inherited from here -> we : 1
from here we -> do : 1
here we do -> not : 1
do not do -> much : 2
not do much -> when : 1
not do much -> and : 1
do much when -> we : 1
much when we -> get : 1
when we get -> a : 1
get a notification -> from : 1
a notification from -> the : 1
from the create -> two : 1
the create two -> instance : 1
create two instance -> of : 1
two instance of -> observer : 1
instance of observer -> and : 1
of observer and -> subscribe : 1
observer and subscribe -> new : 1
and subscribe new -> new : 1
subscribe new new -> change : 1
new new change -> the : 1
new change the -> state : 1
change the state -> of : 2
the state of -> the : 2
state of the -> eventsource : 1
state of the -> the : 1
of the eventsource -> this : 1
the eventsource this -> should : 1
eventsource this should -> trigger : 1
this should trigger -> call : 1
should trigger call -> to : 1
trigger call to -> update : 1
call to update -> of : 1
to update of -> the : 1
update of the -> sink : 1
of the sink -> previous : 1
the sink previous -> code : 1
sink previous code -> snippet : 1
code snippet instantiates -> an : 1
snippet instantiates an -> object : 1
instantiates an object -> and : 1
object and adds -> two : 1
and adds two -> when : 1
adds two when -> we : 1
two when we -> change : 1
when we change -> the : 1
we change the -> state : 1
the the notification -> will : 1
the notification will -> be : 1
notification will be -> received : 1
notification will be -> issued : 1
will be received -> by : 1
be received by -> the : 1
received by the -> this : 1
by the this -> is : 2
is the crux -> of : 1
crux of the -> observer : 1
crux of the -> reactive : 1
the observer in -> a : 1
observer in a -> normal : 1
in a normal -> oop : 1
a normal oop -> the : 1
normal oop the -> consumption : 1
oop the consumption -> of : 1
the consumption of -> objects : 1
consumption of objects -> is : 1
of objects is -> done : 1
objects is done -> in : 1
is done in -> the : 1
done in the -> following : 1
the following the -> a : 1
the following the -> strop : 1
the following the -> observable : 1
the following the -> position : 1
the following the -> previous : 1
following the a -> method : 1
the a method -> to : 1
a method to -> compute : 1
a method to -> emit : 1
method to compute -> some : 1
to compute some -> value : 1
compute some value -> or : 1
some value or -> change : 1
value or change -> something : 1
or change something -> useful : 1
change something useful -> based : 1
something useful based -> on : 1
useful based on -> the : 1
on the return -> value : 1
value or a -> change : 1
value or a -> sequence : 1
or a change -> in : 1
change in the -> in : 1
change in the -> cell : 1
change in the -> value : 1
the in the -> case : 4
the in the -> preceding : 1
the in the -> the : 1
the in the -> following : 1
the in the -> context : 1
case of the -> we : 1
case of the -> stream : 1
case of the -> evaluation : 1
case of the -> order : 1
we have done -> the : 1
have done the -> the : 1
done the the -> object : 1
the the object -> for : 1
the object for -> the : 1
object for the -> notification : 1
for the notification -> by : 1
the notification by -> implementing : 1
notification by implementing -> observers : 1
by implementing observers -> event : 1
implementing observers event -> something : 1
observers event something -> changes : 1
event something changes -> at : 1
something changes at -> the : 1
changes at the -> you : 1
at the you -> will : 1
you will be -> something : 1
will be something -> with : 1
be something with -> the : 1
something with the -> value : 1
with the value -> received : 1
the value received -> through : 1
value received through -> the : 1
received through the -> function : 1
through the function -> outlined : 1
the function outlined -> here : 1
function outlined here -> helps : 1
outlined here helps -> in : 1
here helps in -> the : 1
helps in the -> separation : 1
helps in the -> scheduling : 1
in the separation -> of : 1
the separation of -> and : 1
separation of and -> modularity : 1
of and modularity -> has : 1
and modularity has -> been : 1
modularity has been -> this : 1
has been this -> is : 1
been this is -> a : 1
mechanism to implement -> rather : 1
to implement rather -> than : 1
implement rather than -> polling : 1
rather than polling -> for : 1
than polling for -> you : 1
polling for you -> are : 1
for you are -> asking : 1
you are asking -> to : 1
are asking to -> be : 1
asking to be -> most : 1
to be most -> gui : 1
be most gui -> toolkits : 1
most gui toolkits -> today : 1
gui toolkits today -> use : 1
toolkits today use -> similar : 1
today use similar -> limitations : 1
use similar limitations -> of : 1
similar limitations of -> the : 1
observer gof pattern -> book : 1
gof pattern book -> was : 1
pattern book was -> written : 1
world was really -> doing : 1
was really doing -> sequential : 1
really doing sequential -> the : 1
doing sequential the -> architecture : 1
sequential the architecture -> of : 1
the architecture of -> observer : 1
architecture of observer -> pattern : 1
of observer pattern -> implementation : 1
observer pattern implementation -> had : 1
pattern implementation had -> lot : 1
implementation had lot -> of : 1
had lot of -> judging : 1
lot of judging -> from : 1
of judging from -> the : 1
judging from the -> current : 1
from the current -> programming : 1
the current programming -> model : 1
current programming model -> world : 1
programming model world -> here : 1
model world here -> are : 1
world here are -> some : 1
here are some -> of : 1
here are some -> important : 1
some of close -> coupling : 1
of close coupling -> between : 1
close coupling between -> subjects : 1
coupling between subjects -> and : 1
between subjects and -> lifetime : 1
subjects and lifetime -> of : 1
and lifetime of -> the : 1
lifetime of the -> is : 1
the is controlled -> by : 1
is controlled by -> the : 1
controlled by the -> can : 1
by the can -> block : 1
the can block -> the : 1
can block the -> implementation : 1
can block the -> style : 1
block the implementation -> is : 1
implementation is not -> filtering : 1
implementation is not -> writing : 1
is not filtering -> is : 1
not filtering is -> done : 1
filtering is done -> at : 1
is done at -> the : 1
done at the -> sink : 1
done at the -> aggregation : 1
at the sink -> ideally : 1
the sink ideally -> the : 1
sink ideally the -> data : 1
ideally the data -> should : 1
the data should -> be : 1
data should be -> filtered : 1
should be filtered -> at : 1
should be filtered -> other : 1
be filtered at -> the : 1
filtered at the -> place : 1
at the place -> where : 1
the place where -> the : 1
place where the -> data : 1
data is the -> subject : 1
data is the -> handler : 1
data is the -> event : 1
is the subject -> before : 1
the subject before -> of : 1
subject before of -> the : 1
before of the -> observers : 1
of the observers -> do : 1
the observers do -> not : 1
observers do not -> do : 1
do much and -> the : 1
much and the -> cpu : 1
and the cpu -> cycles : 1
the cpu cycles -> will : 1
cpu cycles will -> be : 1
cycles will be -> should : 1
will be should -> ideally : 1
be should ideally -> publish : 1
should ideally publish -> the : 1
ideally publish the -> value : 1
publish the value -> to : 1
the value to -> the : 5
value to the -> the : 1
value to the -> if : 1
value to the -> for : 1
value to the -> converts : 1
value to the -> please : 1
value to the -> and : 1
the the environment -> should : 1
the environment should -> notify : 1
environment should notify -> all : 1
should notify all -> the : 1
notify all the -> this : 1
all the this -> level : 1
the this level -> of : 1
this level of -> indirection : 1
level of indirection -> can : 1
of indirection can -> facilitate : 1
indirection can facilitate -> techniques : 1
can facilitate techniques -> such : 1
facilitate techniques such -> as : 1
such as event -> event : 1
as event event -> event : 1
event event event -> and : 1
event event and -> canonicalizing : 1
event and canonicalizing -> the : 1
and canonicalizing the -> event : 1
canonicalizing the event -> data : 1
event data to -> name : 1
data to name -> a : 1
name a the -> advent : 1
a the advent -> of : 1
advent of functional -> programming : 1
programming techniques such -> as : 1
such as immutable -> functional : 1
as immutable functional -> functional : 1
immutable functional functional -> style : 1
functional functional style -> concurrent : 1
functional style concurrent -> and : 1
style concurrent and -> so : 1
concurrent and so -> we : 1
and so we -> can : 2
and so we -> also : 1
so we can -> circumvent : 1
so we can -> place : 1
we can circumvent -> the : 1
can circumvent the -> limits : 1
circumvent the limits -> of : 1
the limits of -> the : 1
limits of the -> classic : 1
of the classic -> observer : 2
the classic observer -> the : 1
the classic observer -> a : 1
the classic observer -> pattern : 1
classic observer the -> solution : 1
observer the solution -> outlined : 1
the solution outlined -> by : 1
solution outlined by -> the : 1
outlined by the -> industry : 1
by the industry -> is : 1
the industry is -> the : 1
industry is the -> notion : 1
notion of the -> classic : 1
notion of the -> structure : 1
notion of the -> library : 1
classic observer a -> diligent : 1
observer a diligent -> reader : 1
a diligent reader -> might : 1
diligent reader might -> have : 1
reader might have -> seen : 1
seen the the -> asynchronous : 1
the the asynchronous -> programming : 1
the the asynchronous -> invocation : 1
the the asynchronous -> method : 1
the asynchronous programming -> model : 1
the asynchronous programming -> design : 1
asynchronous programming model -> to : 1
asynchronous programming model -> based : 1
programming model to -> be : 1
programming model to -> the : 1
model to be -> the : 1
be the can -> make : 1
the can make -> asynchronous : 1
can make asynchronous -> calls : 1
make asynchronous calls -> to : 1
make asynchronous calls -> in : 1
asynchronous calls to -> the : 1
calls to the -> subscribers : 1
calls to the -> print : 1
calls to the -> subscribing : 1
to the subscribers -> rather : 1
to the subscribers -> in : 1
the subscribers rather -> than : 1
subscribers rather than -> looping : 1
rather than looping -> the : 1
than looping the -> subscribers : 1
looping the subscribers -> by : 1
the subscribers by -> using : 1
subscribers by using -> a : 1
by using a -> fire : 2
by using a -> visitor : 1
by using a -> subject : 1
using a fire -> and : 2
a fire and -> forget : 3
fire and forget -> we : 1
fire and forget -> the : 2
fire and forget -> idiom : 1
fire and forget -> in : 1
fire and forget -> asynchronous : 1
and forget we -> can : 1
forget we can -> decouple : 1
we can decouple -> the : 1
can decouple the -> from : 1
decouple the from -> its : 1
the from its -> the : 1
from its the -> invocation : 1
its the invocation -> can : 1
the invocation can -> be : 1
invocation can be -> done : 1
can be done -> from : 1
can be done -> at : 1
can be done -> as : 1
can be done -> in : 1
be done from -> a : 1
done from a -> background : 1
from a background -> async : 1
a background async -> or : 1
background async or -> packaged : 1
async or packaged -> or : 1
or packaged or -> a : 1
packaged or a -> suitable : 1
or a suitable -> mechanism : 1
a suitable mechanism -> for : 1
suitable mechanism for -> the : 1
for the the -> asynchronous : 1
for the the -> project : 1
the asynchronous invocation -> of : 1
asynchronous invocation of -> notification : 1
invocation of notification -> methods : 1
of notification methods -> has : 1
notification methods has -> the : 1
methods has the -> added : 1
has the added -> advantage : 1
the added advantage -> that : 1
added advantage that -> if : 1
advantage that if -> any : 1
that if any -> of : 1
if any of -> blocks : 1
any of blocks -> getting : 1
of blocks getting -> into : 1
blocks getting into -> an : 1
getting into an -> infinite : 1
infinite loop or -> a : 1
loop or a -> others : 1
or a others -> can : 1
a others can -> still : 1
others can still -> get : 1
can still get -> the : 1
still get the -> the : 1
get the the -> asynchronous : 1
the asynchronous method -> works : 1
asynchronous method works -> on : 1
method works on -> the : 1
works on the -> following : 1
on the following -> methods : 1
the following methods -> for : 1
following methods for -> handling : 1
methods for handling -> and : 1
for handling and -> the : 1
handling and the -> end : 1
and the end -> of : 1
data the event -> sink : 1
event sink observer -> interface : 1
sink observer interface -> should : 1
observer interface should -> have : 1
interface should have -> and : 1
should have and -> event : 1
have and event -> sink : 1
and event sink -> should : 1
event sink should -> implement : 1
event sink should -> subscribe : 1
sink should implement -> the : 1
should implement the -> observer : 1
implement the observer -> should : 1
the observer should -> have : 1
observer should have -> subscribe : 1
should have subscribe -> and : 1
have subscribe and -> unsubscribe : 1
subscribe and unsubscribe -> event : 1
subscribe and unsubscribe -> is : 1
and unsubscribe event -> sink : 1
unsubscribe event sink -> should : 1
sink should subscribe -> to : 1
should subscribe to -> an : 1
subscribe to an -> instance : 1
subscribe to an -> observable : 2
instance of observable -> through : 1
of observable through -> subscribe : 1
observable through subscribe -> an : 1
through subscribe an -> event : 1
subscribe an event -> the : 1
an event the -> observer : 1
event the observer -> will : 1
the observer will -> be : 1
observer will be -> notified : 1
be notified by -> the : 1
notified by the -> of : 1
by the of -> these : 1
by the of -> elements : 1
the of these -> things : 1
of these things -> were : 1
these things were -> already : 1
things were already -> mentioned : 1
were already mentioned -> in : 1
already mentioned in -> programming : 1
mentioned in programming -> model : 1
overview and we -> did : 1
and we did -> not : 1
we did not -> cover : 1
did not cover -> the : 1
not cover the -> asynchronous : 1
cover the asynchronous -> part : 1
the asynchronous part -> in : 1
asynchronous part in -> this : 1
part in this -> we : 1
we will revisit -> those : 1
will revisit those -> based : 1
revisit those based -> on : 1
those based on -> the : 1
on the experience -> which : 1
the experience which -> authors : 1
experience which authors -> had : 1
which authors had -> based : 1
authors had based -> on : 1
had based on -> the : 1
on the technical -> presentations : 1
the technical presentations -> and : 1
technical presentations and -> interaction : 1
presentations and interaction -> with : 1
and interaction with -> jumping : 1
interaction with jumping -> right : 1
with jumping right -> into : 1
jumping right into -> the : 1
right into the -> model : 1
into the model -> of : 1
the model of -> programming : 1
model of programming -> does : 1
of programming does -> not : 1
programming does not -> help : 1
does not help -> in : 1
does not help -> write : 1
not help in -> most : 1
help in most -> developers : 1
in most developers -> are : 1
most developers are -> confused : 1
developers are confused -> regarding : 1
are confused regarding -> because : 1
confused regarding because -> of : 1
regarding because of -> the : 1
fact that they -> do : 1
that they do -> not : 1
do not know -> what : 1
not know what -> particular : 1
know what particular -> problem : 1
what particular problem -> this : 1
particular problem this -> pattern : 1
problem this pattern -> the : 1
this pattern the -> classic : 1
pattern the classic -> gof : 1
the classic gof -> observer : 1
classic gof observer -> implementation : 1
classic gof observer -> patterns : 1
gof observer implementation -> given : 1
observer implementation given -> here : 1
implementation given here -> is : 1
is to set -> the : 1
set the context -> for : 1
the context for -> discussions : 1
context for discussions -> on : 1
for discussions on -> observable : 1
discussions on observable -> holistic : 1
on observable holistic -> look : 1
observable holistic look -> at : 1
at gof design -> pattern : 1
gof design pattern -> movement : 1
pattern movement started -> at : 1
movement started at -> a : 1
started at a -> time : 1
world was struggling -> to : 1
was struggling to -> come : 1
struggling to come -> to : 1
to come to -> terms : 1
come to terms -> with : 1
to terms with -> complexities : 1
terms with complexities -> of : 1
with complexities of -> software : 1
complexities of software -> design : 1
of software design -> the : 1
software design the -> gof : 1
design the gof -> book : 1
gof book and -> the : 1
and the associated -> pattern : 1
the associated pattern -> catalog : 1
associated pattern catalog -> gave : 1
pattern catalog gave -> developers : 1
catalog gave developers -> a : 1
gave developers a -> set : 1
developers a set -> of : 1
set of techniques -> for : 1
of techniques for -> designing : 1
techniques for designing -> topics : 1
for designing topics -> such : 1
designing topics such -> as : 1
as concurrency and -> parallelism : 1
and parallelism were -> not : 1
parallelism were not -> in : 1
were not in -> the : 1
in the minds -> of : 1
the minds of -> the : 1
minds of the -> people : 1
of the people -> who : 1
the people who -> designed : 1
people who designed -> the : 1
who designed the -> their : 1
designed the their -> work : 1
the their work -> did : 1
their work did -> not : 1
work did not -> reflect : 1
did not reflect -> have : 1
not reflect have -> seen : 1
reflect have seen -> that : 1
seen that event -> handling : 1
that event handling -> through : 1
event handling through -> the : 1
handling through the -> classic : 1
through the classic -> observer : 1
classic observer pattern -> has : 1
observer pattern has -> some : 1
pattern has some -> which : 1
has some which -> might : 1
some which might -> be : 1
which might be -> a : 1
might be a -> problem : 1
a problem in -> some : 1
problem in some -> what : 1
in some what -> is : 1
some what is -> the : 1
the way we -> need : 1
way we need -> to : 1
need to take -> a : 1
to take a -> fresh : 1
to take a -> approach : 1
take a fresh -> look : 1
at the problem -> of : 1
the problem of -> event : 1
the problem of -> and : 1
problem of event -> handling : 1
of event handling -> by : 1
event handling by -> taking : 1
handling by taking -> a : 1
by taking a -> step : 1
taking a step -> we : 1
a step we -> will : 1
step we will -> digress : 1
we will digress -> into : 1
will digress into -> the : 1
digress into the -> subject : 1
into the subject -> of : 1
into the subject -> by : 1
subject of philosophy -> a : 1
of philosophy a -> bit : 1
philosophy a bit -> to : 1
a bit to -> have : 1
a bit to -> reach : 1
bit to have -> a : 1
have a different -> outlook : 1
a different outlook -> on : 1
different outlook on -> the : 1
outlook on the -> problem : 1
on the problem -> that : 1
the problem that -> the : 1
problem that the -> reactive : 1
programming model with -> observable : 1
programming model with -> so : 1
model with observable -> is : 1
with observable is -> trying : 1
observable is trying -> to : 1
trying to our -> will : 1
to our will -> help : 1
our will help -> us : 1
help us to -> transition : 1
help us to -> navigate : 1
help us to -> transform : 1
help us to -> process : 1
help us to -> detect : 1
help us to -> communicate : 1
help us to -> support : 1
us to transition -> nicely : 1
to transition nicely -> from : 1
transition nicely from -> gof : 1
nicely from gof -> patterns : 1
from gof patterns -> to : 2
gof patterns to -> the : 1
gof patterns to -> reactive : 1
patterns to the -> world : 1
to the world -> of : 1
the world of -> reactive : 1
world of reactive -> programming : 1
programming using functional -> programming : 1
functional programming following -> content : 1
programming following content -> in : 1
following content in -> this : 1
content in this -> section : 1
in this section -> is : 1
this section is -> bit : 1
this section is -> a : 1
section is bit -> abstract : 1
section is bit -> conceptual : 1
is bit abstract -> and : 1
bit abstract and -> has : 1
abstract and has -> been : 1
has been given -> here : 1
has been given -> as : 1
been given here -> to : 1
given here to -> provide : 1
here to provide -> a : 1
provide a conceptual -> background : 1
a conceptual background -> from : 1
conceptual background from -> which : 1
background from which -> of : 1
from which of -> this : 1
which of this -> book : 1
this book have -> approached : 1
this book have -> extended : 1
this book have -> added : 1
book have approached -> the : 1
have approached the -> subject : 1
approached the subject -> covered : 1
the subject covered -> in : 1
subject covered in -> this : 2
in this our -> approach : 1
this our approach -> to : 1
our approach to -> explaining : 1
approach to explaining -> observables : 1
to explaining observables -> starts : 1
explaining observables starts -> from : 1
observables starts from -> the : 1
starts from the -> gof : 1
from the gof -> pattern : 2
gof pattern and -> iteratively : 1
gof pattern and -> reactive : 1
pattern and iteratively -> reaches : 1
and iteratively reaches -> the : 1
iteratively reaches the -> topic : 1
reaches the topic -> of : 1
topic of the -> idea : 1
topic of the -> we : 1
of the idea -> of : 1
the idea of -> this : 1
idea of this -> approach : 1
of this approach -> came : 1
this approach came -> from : 1
approach came from -> a : 1
came from a -> book : 1
from a book -> on : 1
a book on -> advaita : 1
book on advaita -> a : 1
on advaita a -> mystical : 1
advaita a mystical -> philosophical : 1
a mystical philosophical -> tradition : 1
mystical philosophical tradition -> that : 1
philosophical tradition that -> originated : 1
tradition that originated -> in : 1
that originated in -> the : 1
originated in the -> topic : 1
in the topic -> has : 1
the topic has -> been : 1
topic has been -> explained : 1
has been explained -> in : 1
been explained in -> western : 1
explained in western -> philosophical : 1
in western philosophical -> if : 1
western philosophical if -> a : 1
philosophical if a -> matter : 1
if a matter -> seems : 1
a matter seems -> bit : 1
matter seems bit -> feel : 1
seems bit feel -> free : 1
bit feel free -> to : 1
feel free to -> gloss : 1
free to gloss -> over : 1
to gloss over -> guru : 1
gloss over guru -> was : 1
over guru was -> an : 1
guru was an -> indian : 1
was an indian -> philosopher : 1
an indian philosopher -> who : 1
indian philosopher who -> was : 1
philosopher who was -> a : 1
who was a -> proponent : 1
was a proponent -> of : 1
a proponent of -> the : 1
proponent of the -> advaita : 1
of the advaita -> vedanta : 1
the advaita vedanta -> an : 1
advaita vedanta an -> indian : 1
vedanta an indian -> philosophical : 1
an indian philosophical -> school : 1
indian philosophical school -> based : 1
philosophical school based -> on : 1
school based on -> the : 1
on the of -> a : 1
the of a -> supreme : 1
of a supreme -> force : 1
a supreme force -> that : 1
supreme force that -> governs : 1
force that governs -> all : 1
that governs all -> of : 1
governs all of -> according : 1
all of according -> to : 1
of according to -> this : 1
according to this -> philosophical : 1
to this philosophical -> whatever : 1
this philosophical whatever -> we : 1
philosophical whatever we -> see : 1
whatever we see -> around : 1
we see around -> be : 1
see around be -> it : 1
around be it -> or : 1
be it or -> are : 1
it or are -> manifestations : 1
or are manifestations -> of : 1
are manifestations of -> the : 1
manifestations of the -> absolute : 1
of the absolute -> brahman : 1
the absolute brahman -> in : 1
absolute brahman in -> and : 1
brahman in and -> its : 1
in and its -> only : 1
and its only -> positive : 1
its only positive -> affirmation : 1
only positive affirmation -> is : 1
positive affirmation is -> philosophy : 1
affirmation is philosophy -> uses : 1
is philosophy uses -> negation : 1
philosophy uses negation -> and : 1
uses negation and -> proof : 1
negation and proof -> by : 1
and proof by -> contradiction : 1
proof by contradiction -> to : 1
by contradiction to -> depict : 1
contradiction to depict -> this : 1
to depict this -> can : 1
depict this can -> be : 1
can be translated -> into : 1
be translated into -> the : 1
translated into the -> english : 1
into the english -> language : 1
the english language -> as : 1
english language as -> and : 1
language as and -> bliss : 1
as and bliss -> implied : 1
and bliss implied -> meaning : 1
bliss implied meaning -> of : 1
implied meaning of -> bliss : 1
meaning of bliss -> is : 1
of bliss is -> in : 1
bliss is in -> a : 1
in a book -> titled : 1
a book titled -> unitive : 1
book titled unitive -> by : 1
titled unitive by -> dk : 1
unitive by dk -> print : 1
by dk print -> new : 1
dk print new -> he : 1
print new he -> gives : 1
new he gives -> a : 1
he gives a -> mapping : 1
gives a mapping -> of : 1
a mapping of -> to : 1
mapping of to -> and : 1
of to and -> axiology : 1
to and axiology -> three : 1
and axiology three -> primary : 1
axiology three primary -> branches : 1
three primary branches -> of : 1
primary branches of -> the : 1
branches of the -> and : 1
the and axiology -> are : 1
and axiology are -> the : 1
axiology are the -> theories : 1
are the theories -> of : 1
the theories of -> and : 1
theories of and -> values : 1
of and values -> the : 1
and values the -> following : 1
values the following -> table : 1
following table gives -> possible : 1
table gives possible -> mappings : 1
gives possible mappings -> of : 1
possible mappings of -> to : 1
mappings of to -> other : 1
of to other -> entities : 1
to other entities -> that : 1
other entities that -> mean : 1
entities that mean -> more : 1
that mean more -> or : 1
mean more or -> less : 1
more or less -> the : 1
more or less -> do : 1
more or less -> identical : 1
or less the -> am : 1
less the am -> can : 1
the am can -> i : 1
am can i -> should : 1
can i should -> i : 1
i should i -> advaita : 1
should i advaita -> the : 1
i advaita the -> whole : 1
advaita the whole -> world : 1
the whole world -> is : 1
whole world is -> viewed : 1
world is viewed -> as : 1
is viewed as -> and : 1
viewed as and -> from : 1
as and from -> the : 1
and from the -> we : 1
and from the -> the : 1
and from the -> pattern : 1
from the we -> will : 1
we will map -> the : 1
will map the -> problems : 1
map the problems -> in : 1
the problems in -> the : 1
problems in the -> software : 1
the software design -> world : 1
software design world -> into : 1
design world into -> the : 1
into the problem -> of : 1
problem of and -> every : 1
of and every -> system : 1
and every system -> in : 1
every system in -> the : 1
in the world -> can : 1
the world can -> be : 1
world can be -> viewed : 1
can be viewed -> from : 1
be viewed from -> the : 1
viewed from the -> and : 1
from the and -> functional : 1
the and functional -> the : 1
and functional the -> canonical : 1
functional the canonical -> structure : 1
the canonical structure -> for : 1
canonical structure for -> a : 1
structure for a -> oop : 1
for a oop -> programs : 1
a oop programs -> is : 1
oop programs is -> we : 1
programs is we -> will : 1
is we will -> model : 1
is we will -> pop : 1
we will model -> the : 1
we will model -> a : 1
will model the -> world : 1
model the world -> we : 1
the world we -> are : 1
world we are -> interested : 1
interested in as -> hierarchies : 1
in as hierarchies -> and : 1
as hierarchies and -> process : 1
hierarchies and process -> them : 1
and process them -> in : 1
process them in -> a : 1
them in a -> canonical : 1
in a canonical -> the : 1
a canonical the -> gof : 1
canonical the gof -> pattern : 1
gof pattern catalog -> has : 4
gof pattern catalog -> to : 1
gof pattern catalog -> have : 1
pattern catalog has -> got : 1
pattern catalog has -> another : 1
pattern catalog has -> a : 1
pattern catalog has -> an : 1
catalog has got -> composite : 1
has got composite -> pattern : 1
got composite pattern -> for : 1
composite pattern for -> modelling : 1
pattern for modelling -> hierarchies : 1
for modelling hierarchies -> and : 1
modelling hierarchies and -> visitor : 1
hierarchies and visitor -> pattern : 1
and visitor pattern -> to : 1
and visitor pattern -> act : 1
visitor pattern to -> process : 1
pattern to process -> oop : 1
to process oop -> programming : 1
process oop programming -> model : 1
model and section -> is : 1
and section is -> bit : 1
is bit conceptual -> in : 1
bit conceptual in -> nature : 1
conceptual in nature -> and : 1
in nature and -> those : 1
nature and those -> of : 1
and those of -> you : 1
those of you -> who : 2
of you who -> have : 1
of you who -> are : 1
you who have -> not : 1
who have not -> dabbled : 1
have not dabbled -> with : 1
not dabbled with -> gof : 1
dabbled with gof -> design : 1
gof design patterns -> will : 1
gof design patterns -> with : 1
design patterns will -> find : 1
patterns will find -> it : 1
will find it -> a : 1
find it a -> bit : 1
it a bit -> the : 1
a bit the -> best : 1
bit the best -> strategy : 1
the best strategy -> could : 1
best strategy could -> be : 1
strategy could be -> to : 1
could be to -> skip : 1
be to skip -> this : 1
to skip this -> section : 1
skip this section -> and : 1
this section and -> focus : 1
section and focus -> on : 1
and focus on -> the : 1
on the running -> once : 1
the running once -> you : 1
running once you -> have : 1
you have understood -> the : 2
have understood the -> running : 1
have understood the -> gof : 1
understood the running -> this : 1
the running this -> particular : 1
running this particular -> section : 1
this particular section -> can : 1
particular section can -> be : 1
section can be -> programming : 1
can be programming -> is : 1
be programming is -> very : 1
programming is very -> good : 1
is very good -> at : 1
very good at -> modeling : 1
good at modeling -> in : 1
at modeling in -> the : 1
modeling in the -> hierarchy : 1
in the hierarchy -> can : 1
the hierarchy can -> be : 1
hierarchy can be -> considered : 1
considered the canonical -> data : 1
the canonical data -> model : 1
canonical data model -> for : 1
data model for -> the : 1
model for the -> of : 1
for the of -> in : 1
the of in -> the : 1
gof pattern we -> model : 1
pattern we model -> hierarchies : 1
we model hierarchies -> using : 1
model hierarchies using -> the : 1
hierarchies using the -> composite : 2
the composite the -> composite : 1
the composite the -> hierarchy : 1
composite the composite -> pattern : 1
the composite pattern -> is : 2
the composite pattern -> and : 1
composite pattern is -> categorized : 1
composite pattern is -> the : 1
pattern is categorized -> as : 1
is categorized as -> a : 1
categorized as a -> structural : 1
as a structural -> whenever : 1
a structural whenever -> there : 1
structural whenever there -> is : 1
whenever there is -> a : 2
is a composite -> pattern : 1
a composite pattern -> the : 1
a composite pattern -> style : 1
composite pattern the -> visitor : 1
pattern the visitor -> pattern : 1
the visitor pattern -> will : 1
the visitor pattern -> is : 2
the visitor pattern -> has : 1
the visitor pattern -> becomes : 1
visitor pattern will -> also : 1
pattern will also -> be : 1
also be part -> of : 1
be part of -> the : 1
the the visitor -> pattern : 1
visitor pattern is -> good : 1
visitor pattern is -> the : 1
pattern is good -> for : 1
pattern is good -> at : 1
is good for -> processing : 2
is good for -> people : 1
is good for -> the : 1
is good for -> modeling : 2
for processing composites -> to : 1
processing composites to -> add : 1
composites to add -> behavior : 1
to add behavior -> to : 1
add behavior to -> the : 1
behavior to the -> the : 1
the the patterns -> come : 1
the patterns come -> as : 1
patterns come as -> a : 1
come as a -> pair : 1
as a pair -> in : 1
as a pair -> to : 1
a pair in -> of : 1
pair in of -> one : 1
in of one -> instance : 1
of one instance -> of : 1
one instance of -> the : 1
of the composite -> can : 1
of the composite -> to : 1
of the composite -> for : 1
of the composite -> as : 1
of the composite -> will : 1
the composite can -> be : 1
the composite can -> process : 1
composite can be -> processed : 1
be processed by -> different : 1
be processed by -> an : 1
processed by different -> in : 1
by different in -> a : 1
different in a -> compiler : 1
in a compiler -> the : 1
a compiler the -> syntax : 1
compiler the syntax -> will : 1
the syntax will -> be : 1
syntax will be -> modeled : 1
will be modeled -> as : 1
be modeled as -> a : 1
modeled as a -> composite : 1
as a composite -> and : 1
as a composite -> we : 1
a composite and -> there : 1
a composite and -> process : 1
composite and there -> will : 1
and there will -> be : 1
there will be -> visitor : 1
there will be -> a : 1
there will be -> scores : 1
there will be -> multiple : 1
will be visitor -> implementations : 1
be visitor implementations -> for : 1
visitor implementations for -> type : 1
implementations for type -> code : 1
for type code -> code : 1
type code code -> and : 1
code code and -> static : 1
code and static -> analysis : 1
and static analysis -> to : 1
static analysis to -> name : 1
analysis to name -> a : 1
name a of -> the : 1
a of the -> problems : 1
of the problems -> with : 1
the problems with -> the : 1
problems with the -> visitor : 1
with the visitor -> pattern : 1
pattern is the -> fact : 1
pattern is the -> for : 1
pattern is the -> way : 1
pattern is the -> standard : 1
is the fact -> that : 3
fact that it -> has : 1
that it has -> to : 1
it has to -> have : 1
has to have -> some : 2
to have some -> notion : 1
to have some -> idea : 1
have some notion -> of : 1
some notion of -> the : 1
of the structure -> of : 4
the structure of -> the : 5
structure of the -> composite : 2
structure of the -> this : 1
structure of the -> behavioral : 1
structure of the -> in : 1
the composite to -> do : 1
the composite to -> navigate : 1
composite to do -> the : 1
to do the -> will : 1
to do the -> this : 1
to do the -> scheduling : 1
to do the -> lookup : 1
do the will -> result : 1
the will result -> in : 1
result in code -> bloat : 1
in code bloat -> in : 1
code bloat in -> the : 1
bloat in the -> context : 1
the context where -> it : 1
context where it -> needs : 1
where it needs -> to : 1
needs to process -> a : 1
to process a -> filtered : 1
to process a -> after : 1
to process a -> stream : 1
process a filtered -> subset : 1
a filtered subset -> of : 1
filtered subset of -> the : 1
subset of the -> available : 1
subset of the -> design : 1
of the available -> data : 1
the available data -> in : 1
available data in -> the : 1
data in the -> composite : 1
in the composite -> we : 1
the composite we -> might : 1
composite we might -> require : 1
we might require -> different : 1
might require different -> visitors : 1
require different visitors -> for : 1
different visitors for -> each : 1
visitors for each -> filter : 1
for each filter -> the : 1
each filter the -> gof : 1
filter the gof -> pattern : 1
catalog has another -> pattern : 1
has another pattern -> that : 1
another pattern that -> falls : 1
pattern that falls -> into : 1
that falls into -> the : 1
falls into the -> behavioral : 1
into the behavioral -> called : 1
the behavioral called -> something : 1
behavioral called something -> that : 1
called something that -> every : 1
something that every -> programmer : 1
that every programmer -> is : 1
every programmer is -> familiar : 1
programmer is familiar -> the : 1
is familiar the -> iterator : 1
familiar the iterator -> pattern : 1
the iterator pattern -> is : 3
the iterator pattern -> pulls : 1
iterator pattern is -> good : 1
iterator pattern is -> and : 1
iterator pattern is -> the : 2
is good at -> processing : 1
at processing data -> in : 1
processing data in -> a : 1
in a any -> kind : 1
a any kind -> of : 1
kind of hierarchical -> structure : 1
of hierarchical structure -> has : 1
hierarchical structure has -> to : 1
structure has to -> be : 1
to be linearized -> or : 1
be linearized or -> flattened : 1
linearized or flattened -> to : 1
or flattened to -> be : 1
flattened to be -> in : 1
be in a -> shape : 1
be in a -> state : 1
in a shape -> amenable : 1
a shape amenable -> to : 1
shape amenable to -> be : 1
amenable to be -> processed : 1
processed by an -> an : 1
by an an -> example : 1
an an example -> could : 1
an example could -> be : 1
example could be -> a : 1
could be a -> which : 1
be a which -> can : 1
a which can -> be : 1
be processed using -> a : 1
processed using a -> bfs : 1
using a bfs -> iterator : 1
a bfs iterator -> or : 1
bfs iterator or -> a : 1
iterator or a -> dfs : 1
or a dfs -> for : 1
a dfs for -> the : 1
dfs for the -> application : 1
for the application -> all : 1
for the application -> server : 1
the application all -> of : 1
application all of -> a : 1
a sudden the -> tree : 1
sudden the tree -> appears : 1
the tree appears -> as : 1
tree appears as -> a : 1
appears as a -> linear : 1
as a linear -> we : 1
as a linear -> write : 1
a linear we -> need : 1
linear we need -> to : 1
need to flatten -> the : 1
to flatten the -> hierarchies : 1
to flatten the -> hierarchy : 2
to flatten the -> expression : 1
flatten the hierarchies -> to : 1
the hierarchies to -> be : 1
hierarchies to be -> in : 1
in a state -> where : 1
a state where -> the : 1
state where the -> structure : 1
where the structure -> is : 1
structure is amenable -> to : 1
is amenable to -> the : 1
amenable to the -> process : 1
to the process -> will : 1
the process will -> be : 1
process will be -> implemented : 1
will be implemented -> by : 1
be implemented by -> the : 2
be implemented by -> eventsource : 1
by the person -> who : 1
the person who -> has : 1
person who has -> implemented : 1
who has implemented -> the : 1
implemented the there -> are : 1
the there are -> some : 1
the there are -> subtle : 1
are some limitations -> to : 1
some limitations to -> the : 1
limitations to the -> iterator : 1
to the iterator -> pattern : 1
pattern is and -> we : 1
is and we -> will : 1
we will reverse -> the : 1
will reverse the -> gaze : 1
reverse the gaze -> and : 1
reverse the gaze -> for : 1
the gaze and -> make : 1
gaze and make -> the : 1
and make the -> system : 1
make the system -> using : 1
the system using -> a : 1
using a pattern -> called : 1
a pattern called -> an : 1
pattern called an -> enhanced : 1
called an enhanced -> version : 1
an enhanced version -> of : 1
enhanced version of -> the : 1
the observer this -> section : 1
observer this section -> is : 1
section is a -> bit : 1
bit but after -> going : 1
but after going -> through : 1
after going through -> the : 1
going through the -> entire : 1
going through the -> listing : 1
through the entire -> you : 1
the entire you -> can : 1
entire you can -> come : 1
you can come -> back : 1
can come back -> and : 1
come back and -> make : 1
back and make -> sense : 1
and make sense -> of : 1
make sense of -> what : 1
sense of what -> is : 1
what is in -> a : 1
a we can -> sum : 1
a we can -> use : 1
a we can -> pipe : 1
a we can -> iterate : 1
we can sum -> up : 1
can sum up -> the : 1
sum up the -> whole : 1
up the whole -> thing : 1
the whole thing -> as : 1
whole thing as -> can : 1
thing as can -> model : 1
as can model -> hierarchical : 1
can model hierarchical -> structures : 1
model hierarchical structures -> using : 1
hierarchical structures using -> the : 1
structures using the -> composite : 1
composite can process -> the : 1
can process the -> composite : 1
process the composite -> using : 2
the composite using -> the : 1
the composite using -> a : 1
composite using the -> visitor : 1
using the visitor -> can : 1
using the visitor -> pattern : 1
the visitor can -> flatten : 1
visitor can flatten -> or : 1
can flatten or -> linearize : 1
flatten or linearize -> the : 1
or linearize the -> composite : 1
linearize the composite -> to : 1
composite to navigate -> it : 1
to navigate it -> through : 1
navigate it through -> follow : 1
it through follow -> a : 1
through follow a -> pull : 1
follow a pull -> method : 1
a pull method -> and : 1
pull method and -> we : 1
method and we -> need : 1
and we need -> to : 2
need to reverse -> the : 1
to reverse the -> gaze : 1
to reverse the -> where : 1
gaze for a -> we : 1
for a we -> have : 1
we have managed -> to : 2
have managed to -> reach : 1
have managed to -> write : 1
managed to reach -> the : 1
to reach the -> way : 1
reach the way -> of : 1
way of implementing -> and : 1
of implementing and -> iterators : 1
implementing and iterators -> are : 1
and iterators are -> push : 1
iterators are push -> is : 1
are push is -> another : 1
push is another -> will : 1
is another will -> implement : 1
another will implement -> all : 1
will implement all -> of : 1
implement all of -> the : 1
of the preceding -> points : 1
of the preceding -> program : 5
of the preceding -> data : 1
the preceding points -> to : 1
preceding points to -> have : 1
points to have -> a : 1
have a firm -> grounding : 1
a firm grounding -> on : 1
firm grounding on -> pattern : 1
grounding on pattern -> for : 1
on pattern for -> expression : 1
for expression demonstrate -> the : 1
expression demonstrate the -> journey : 1
demonstrate the journey -> from : 1
the journey from -> the : 1
journey from the -> gof : 1
pattern catalog to -> we : 1
catalog to we -> will : 1
will model a -> calculator : 1
model a calculator -> as : 1
a calculator as -> a : 1
calculator as a -> running : 1
as a running -> since : 1
a running since -> expression : 1
running since expression -> trees : 1
since expression trees -> or : 1
expression trees or -> ast : 1
trees or ast -> are : 1
or ast are -> hierarchical : 1
ast are hierarchical -> in : 1
are hierarchical in -> they : 1
hierarchical in they -> will : 1
in they will -> be : 1
will be a -> good : 1
will be a -> gravity : 1
will be a -> method : 1
be a good -> example : 1
example to model -> as : 1
to model as -> a : 1
model as a -> composite : 1
a composite we -> have : 1
a composite we -> use : 1
composite we have -> purposefully : 1
we have purposefully -> omitted : 1
have purposefully omitted -> writing : 1
purposefully omitted writing -> a : 1
omitted writing a -> parser : 1
writing a parser -> to : 1
a parser to -> keep : 1
parser to keep -> the : 1
keep the code -> listing : 1
the code listing -> available : 1
the code listing -> in : 1
the code listing -> fit : 1
code listing available -> int : 1
listing available int -> the : 1
available int the -> code : 1
int the code -> base : 1
the code base -> using : 1
code base using -> namespace : 1
base using namespace -> of : 1
using namespace of -> operators : 1
namespace of operators -> supported : 1
by the evaluator -> enum : 1
the evaluator enum -> class : 1
evaluator enum class -> have : 1
enum class have -> defined : 1
class have defined -> an : 1
have defined an -> enum : 1
defined an enum -> type : 1
an enum type -> to : 1
enum type to -> represent : 1
type to represent -> the : 1
type to represent -> an : 1
represent the four -> binary : 1
the four binary -> operators : 1
four binary operators -> and : 1
binary operators and -> two : 1
operators and two -> unary : 1
and two unary -> operators : 1
two unary operators -> other : 1
unary operators other -> than : 1
operators other than -> the : 1
other than the -> standard : 1
other than the -> three : 1
than the standard -> we : 1
the standard we -> have : 1
standard we have -> included : 1
we have included -> a : 1
we have included -> two : 1
have included a -> custom : 1
included a custom -> header : 1
a custom header -> which : 1
custom header which -> is : 1
header which is -> available : 1
is available at -> the : 1
is available at -> go : 1
at the github -> repo : 1
the github repo -> associated : 1
github repo associated -> with : 1
repo associated with -> this : 1
with this it -> contains : 1
this it contains -> code : 1
it contains code -> for : 1
contains code for -> the : 1
code for the -> compose : 1
code for the -> node : 1
code for the -> best : 1
code for the -> preceding : 1
code for the -> http : 1
for the compose -> function : 1
the compose function -> and : 1
compose function and -> pipe : 1
function and pipe -> operator : 1
and pipe operator -> for : 1
pipe operator for -> functional : 1
operator for functional -> we : 1
for functional we -> can : 1
functional we can -> use : 1
can use unix -> pipeline : 1
use unix pipeline -> style : 1
unix pipeline style -> composition : 1
pipeline style composition -> to : 1
style composition to -> tie : 1
composition to tie -> together : 1
to tie together -> a : 1
tie together a -> collection : 1
together a collection -> of : 1
collection of forward -> declarations : 1
of forward declarations -> for : 1
forward declarations for -> the : 1
declarations for the -> composites : 1
for the composites -> class : 1
the composites class -> stores : 1
composites class stores -> ieee : 1
class stores ieee -> double : 1
stores ieee double -> precision : 1
floating point number -> class : 1
point number class -> node : 1
number class node -> for : 1
class node for -> binary : 1
class node for -> unary : 1
node for binary -> expression : 1
for binary expression -> class : 1
binary expression class -> node : 1
expression class node -> for : 1
node for unary -> expression : 1
for unary expression -> class : 1
unary expression class -> interface : 1
unary expression class -> unaryexpr : 1
expression class interface -> for : 1
class interface for -> the : 1
for the visitor -> every : 1
the visitor every -> node : 2
visitor every node -> in : 2
every node in -> the : 3
node in the -> expression : 1
node in the -> list : 1
node in the -> there : 1
node in the -> class : 1
in the expression -> tree : 1
the expression tree -> will : 1
the expression tree -> to : 1
the expression tree -> that : 1
the expression tree -> into : 1
expression tree will -> inherit : 1
tree will inherit -> from : 1
inherit from the -> expr : 1
from the expr -> class : 1
the expr class -> class : 1
the expr class -> accepts : 1
expr class class -> expr : 1
class class expr -> the : 1
class expr the -> standard : 1
expr the standard -> visitor : 1
the standard visitor -> double : 1
standard visitor double -> dispatch : 1
visitor double dispatch -> method : 1
double dispatch method -> normally : 1
dispatch method normally -> return : 1
method normally return -> value : 1
normally return value -> of : 1
return value of -> accept : 1
value of accept -> method : 1
of accept method -> are : 1
accept method are -> and : 1
method are and -> classes : 1
are and classes -> store : 1
and classes store -> the : 1
classes store the -> result : 1
the result which -> can : 1
result which can -> be : 1
be retrieved later -> virtual : 1
retrieved later virtual -> double : 1
later virtual double -> virtual : 1
virtual double virtual -> the : 1
virtual double virtual -> double : 2
double virtual the -> visitor : 1
virtual the visitor -> interface : 1
the visitor interface -> contains : 1
the visitor interface -> class : 1
the visitor interface -> dispatches : 1
visitor interface contains -> methods : 2
interface contains methods -> for : 1
interface contains methods -> to : 1
contains methods for -> each : 1
methods for each -> of : 1
for each of -> the : 1
for each of -> those : 1
of the concrete -> node : 1
the concrete node -> normal : 1
concrete node normal -> practice : 1
node normal practice -> is : 1
normal practice is -> to : 1
practice is to -> use : 1
to use struct -> virtual : 1
use struct virtual -> double : 1
struct virtual double -> virtual : 1
double virtual double -> virtual : 1
double virtual double -> act : 1
virtual double act -> as : 1
double act as -> the : 1
act as the -> base : 1
as the base -> class : 1
the base class -> for : 1
the base class -> function : 1
the base class -> that : 1
the base class -> to : 1
the base class -> the : 2
base class for -> all : 2
base class for -> data : 1
class for all -> the : 1
class for all -> members : 1
for all the -> nodes : 1
for all the -> the : 1
for all the -> node : 1
for all the -> outstanding : 1
all the nodes -> that : 1
the nodes that -> are : 1
nodes that are -> part : 1
that are part -> of : 1
are part of -> the : 1
of the expression -> since : 1
of the expression -> and : 1
of the expression -> on : 1
the expression since -> our : 1
expression since our -> purpose : 1
since our purpose -> is : 1
our purpose is -> to : 2
is to demonstrate -> the : 2
is to demonstrate -> that : 1
demonstrate the gof -> we : 1
the gof we -> support : 1
gof we support -> only : 1
we support only -> binary : 1
support only binary -> and : 1
only binary and -> unary : 1
binary and unary -> the : 1
binary and unary -> see : 1
and unary the -> accept : 1
unary the accept -> method : 1
the accept method -> in : 1
accept method in -> the : 1
method in the -> expr : 1
method in the -> this : 1
in the expr -> class : 1
expr class accepts -> a : 1
class accepts a -> visitor : 1
accepts a visitor -> reference : 1
a visitor reference -> as : 1
visitor reference as -> a : 1
reference as a -> parameter : 1
and the body -> of : 1
of the method -> will : 1
of the method -> for : 1
method will be -> the : 1
method will be -> invoked : 2
will be the -> same : 2
will be the -> value : 1
will be the -> last : 1
will be the -> execution : 1
will be the -> resilient : 1
same for all -> the : 1
method will redirect -> the : 1
will redirect the -> call : 1
redirect the call -> to : 1
to the appropriate -> handler : 1
to the appropriate -> node : 1
the appropriate handler -> on : 1
appropriate handler on -> the : 1
handler on the -> visitor : 1
on the visitor -> to : 1
on the visitor -> in : 1
the visitor to -> gain : 1
visitor to gain -> more : 1
to gain more -> insight : 2
gain more insight -> into : 2
more insight into -> the : 1
more insight into -> these : 1
insight into the -> whole : 1
into the whole -> subject : 1
the whole subject -> covered : 1
whole subject covered -> in : 1
in this about -> by : 1
this about by -> searching : 1
about by searching -> the : 1
by searching the -> web : 2
searching the web -> using : 1
searching the web -> service : 1
the web using -> your : 1
web using your -> favorite : 1
using your favorite -> search : 1
favorite search visitor -> interface : 1
search visitor interface -> contains : 1
contains methods to -> process : 1
methods to process -> all : 1
to process all -> the : 1
process all the -> node : 1
all the node -> types : 2
the node types -> supported : 1
the node types -> focus : 1
node types supported -> by : 1
types supported by -> the : 1
the in our -> there : 1
the in our -> the : 1
in our there -> are : 1
our there are -> methods : 1
there are methods -> for : 1
are methods for -> processing : 1
methods for processing -> constant : 1
for processing constant -> binary : 1
processing constant binary -> and : 1
constant binary and -> unary : 1
and unary see -> the : 1
unary see the -> code : 1
see the code -> for : 1
for the node -> we : 1
the node we -> start : 1
node we start -> with : 1
we start with -> the : 1
start with the -> number : 1
start with the -> class : 1
with the number -> class : 1
the number class -> to : 1
number class to -> represent : 1
class to represent -> ieee : 1
to represent ieee -> interface : 1
represent ieee interface -> class : 1
ieee interface class -> number : 1
interface class number -> public : 1
class number public -> expr : 1
number public expr -> double : 1
public expr double -> double : 1
expr double double -> return : 1
double double return -> void : 1
double double return -> class : 1
double return void -> num : 1
return void num -> double : 1
void num double -> return : 1
num double return -> number : 1
double return number -> class : 1
return number class -> wraps : 1
number class wraps -> an : 1
class wraps an -> ieee : 1
wraps an ieee -> double : 1
an ieee double -> precision : 1
floating point the -> code : 1
point the code -> is : 1
code is obvious -> and : 1
is obvious and -> all : 1
obvious and all -> we : 1
and all we -> need : 1
all we need -> to : 1
bother about is -> the : 1
about is the -> content : 1
is the content -> of : 1
the content of -> the : 1
the content of -> a : 1
content of the -> the : 1
the method receives -> a : 1
method receives a -> parameter : 1
receives a parameter -> of : 1
a parameter of -> the : 1
parameter of the -> routine : 1
of the routine -> just : 1
the routine just -> reflects : 1
routine just reflects -> the : 1
just reflects the -> call : 1
reflects the call -> back : 1
the call back -> to : 2
call back to -> the : 2
back to the -> appropriate : 1
back to the -> correct : 1
back to the -> client : 1
the appropriate node -> on : 1
appropriate node on -> the : 1
node on the -> visitor : 1
the visitor in -> this : 1
the visitor in -> certain : 1
visitor in this -> it : 1
in this it -> will : 1
this it will -> call : 1
this it will -> not : 1
will call on -> modeling : 1
call on modeling -> binary : 1
on modeling binary -> expresison : 1
modeling binary expresison -> class : 1
binary expresison class -> binaryexpr : 1
expresison class binaryexpr -> public : 1
class binaryexpr public -> expr : 1
binaryexpr public expr -> operator : 1
public expr operator -> r : 1
expr operator r -> operator : 1
operator r operator -> op : 1
r operator op -> left : 1
operator op left -> right : 1
op left right -> op : 1
left right op -> operator : 1
right op operator -> return : 1
op operator return -> return : 1
operator return return -> return : 1
return return delete -> delete : 1
return delete delete -> double : 1
delete delete double -> return : 1
delete double return -> class : 1
double return class -> models : 1
double return class -> will : 1
return class models -> a : 1
class models a -> binary : 1
class models a -> folder : 1
models a binary -> operation : 1
a binary operation -> with : 1
binary operation with -> left : 1
operation with left -> and : 1
with left and -> right : 1
left and right -> the : 1
and right the -> operands : 1
right the operands -> can : 1
the operands can -> be : 1
operands can be -> any : 1
be any of -> the : 1
any of the -> classes : 1
of the classes -> in : 1
the classes in -> the : 1
classes in the -> the : 1
classes in the -> qt : 1
the the candidate -> classes : 1
the candidate classes -> are : 1
candidate classes are -> and : 1
classes are and -> this : 1
are and this -> can : 1
and this can -> go : 1
and this can -> be : 1
this can go -> to : 1
can go to -> an : 1
go to an -> arbitrary : 1
to an arbitrary -> the : 1
an arbitrary the -> terminal : 1
arbitrary the terminal -> node : 1
the terminal node -> is : 1
terminal node is -> number : 1
node is number -> in : 1
is number in -> our : 1
number in our -> the : 1
in our the -> previous : 1
in our the -> class : 1
in our the -> composite : 1
our the previous -> code : 1
the previous code -> has : 1
the previous code -> makes : 1
previous code has -> support : 1
code has support -> for : 1
support for four -> binary : 1
for four binary -> unary : 1
four binary unary -> expression : 1
binary unary expression -> class : 1
expression class unaryexpr -> public : 1
class unaryexpr public -> expr : 1
unaryexpr public expr -> expr : 1
public expr expr -> operator : 1
expr expr operator -> expr : 1
expr operator expr -> operator : 1
operator expr operator -> op : 1
expr operator op -> right : 1
operator op right -> op : 1
op right op -> return : 1
right op return -> operator : 1
op return operator -> return : 1
operator return virtual -> delete : 1
return virtual delete -> right : 1
virtual delete right -> double : 1
delete right double -> return : 1
right double return -> method : 1
double return method -> models : 1
return method models -> a : 1
method models a -> unary : 1
models a unary -> expression : 1
a unary expression -> with : 1
unary expression with -> an : 1
expression with an -> operator : 1
with an operator -> and : 1
an operator and -> a : 1
operator and a -> right : 1
and a right -> side : 1
a right side -> we : 1
right side we -> support : 1
side we support -> unary : 1
we support unary -> plus : 1
support unary plus -> and : 1
unary plus and -> unary : 1
plus and unary -> minus : 1
and unary minus -> for : 1
unary minus for -> this : 1
minus for this -> the : 1
for this the -> right : 1
for this the -> code : 1
this the right -> side : 1
right side expression -> can : 1
side expression can -> in : 1
expression can in -> turn : 1
can in turn -> be : 1
in turn be -> a : 1
turn be a -> or : 1
be a or -> now : 1
a or now -> that : 1
or now that -> we : 1
we have implementations -> for : 1
have implementations for -> all : 1
implementations for all -> the : 1
node types focus -> on : 1
types focus on -> the : 1
on the implementation -> of : 1
implementation of the -> visitor : 1
implementation of the -> unsubscribe : 1
implementation of the -> belongs : 1
implementation of the -> active : 2
implementation of the -> following : 1
implementation of the -> eventbus : 1
of the visitor -> we : 1
of the visitor -> this : 1
the visitor we -> will : 1
visitor we will -> write : 1
write a tree -> walker : 1
a tree walker -> and : 1
tree walker and -> evaluator : 1
walker and evaluator -> to : 1
and evaluator to -> compute : 1
evaluator to compute -> the : 1
to compute the -> value : 1
compute the value -> of : 1
of the evaluator -> for : 1
the evaluator for -> expression : 1
evaluator for expression -> composite : 1
for expression composite -> using : 1
expression composite using -> visitor : 1
composite using visitor -> pattern : 1
using visitor pattern -> class : 1
visitor pattern class -> treeevaluatorvisitor : 1
pattern class treeevaluatorvisitor -> public : 1
class treeevaluatorvisitor public -> double : 1
treeevaluatorvisitor public double -> return : 1
public double return -> double : 1
double return double -> operator : 2
double return double -> return : 1
return double operator -> temp : 3
double operator temp -> double : 2
double operator temp -> cout : 2
operator temp double -> lval : 1
operator temp double -> rval : 1
temp double lval -> double : 1
double lval double -> rval : 1
lval double rval -> return : 1
double rval return -> lval : 1
double rval return -> does : 1
rval return lval -> double : 1
return lval double -> operator : 1
lval double operator -> temp : 1
temp double rval -> return : 1
rval return does -> a : 1
return does a -> walk : 1
does a walk -> of : 1
a walk of -> the : 1
walk of the -> ast : 1
of the ast -> and : 1
the ast and -> recursively : 1
ast and recursively -> evaluates : 1
and recursively evaluates -> the : 1
recursively evaluates the -> write : 1
evaluates the write -> an : 1
the write an -> expression : 1
write an expression -> processor : 1
an expression processor -> implementation : 1
expression processor implementation -> of : 1
processor implementation of -> that : 1
implementation of that -> will : 1
of that will -> print : 1
that will print -> the : 1
will print the -> expression : 1
will print the -> numbers : 1
print the expression -> tree : 1
expression tree to -> the : 1
tree to the -> console : 1
the console in -> polish : 1
console in polish -> visitor : 1
in polish visitor -> to : 1
polish visitor to -> print : 1
visitor to print -> expression : 1
to print expression -> in : 1
print expression in -> reversepolishevaluator : 1
expression in reversepolishevaluator -> public : 1
in reversepolishevaluator public -> iexprvisitor : 1
reversepolishevaluator public iexprvisitor -> double : 1
public iexprvisitor double -> return : 1
iexprvisitor double return -> double : 1
operator temp cout -> return : 2
temp cout return -> double : 1
temp cout return -> rpn : 1
cout return double -> operator : 1
cout return rpn -> notation : 1
return rpn notation -> is : 1
rpn notation is -> also : 1
notation is also -> called : 1
is also called -> the : 1
is also called -> a : 1
also called the -> postfix : 1
called the postfix -> where : 1
the postfix where -> the : 1
postfix where the -> operator : 1
where the operator -> comes : 1
the operator comes -> after : 1
the operator comes -> in : 1
operator comes after -> the : 1
comes after the -> they : 1
after the they -> are : 1
they are suitable -> for : 1
are suitable for -> processing : 1
are suitable for -> writing : 1
suitable for processing -> using : 1
for processing using -> an : 1
for processing using -> the : 1
processing using an -> evaluation : 1
using an evaluation -> they : 1
an evaluation they -> form : 1
evaluation they form -> the : 1
they form the -> basis : 1
form the basis -> of : 1
the basis of -> the : 1
basis of the -> virtual : 1
the virtual machine -> architecture : 1
virtual machine architecture -> leveraged : 1
machine architecture leveraged -> by : 1
architecture leveraged by -> the : 1
leveraged by the -> java : 1
by the java -> virtual : 1
the java virtual -> machine : 1
java virtual machine -> and : 1
virtual machine and -> the : 1
machine and the -> write : 1
and the write -> a : 1
the write a -> main : 1
the write a -> to : 1
the write a -> toy : 1
write a main -> function : 3
write a main -> program : 1
a main function -> to : 3
main function to -> put : 3
function to put -> everything : 3
to put everything -> int : 1
to put everything -> the : 1
to put everything -> we : 1
put everything int -> char : 1
everything int char -> new : 1
int char new -> new : 4
char new new -> new : 1
char new new -> double : 1
char new new -> will : 1
char new new -> s : 1
new new new -> double : 1
new new new -> write : 1
new new double -> result : 2
new double result -> cout : 2
double result cout -> is : 1
double result cout -> result : 1
result cout is -> result : 1
cout is result -> code : 1
is result code -> snippet : 1
result code snippet -> creates : 1
code snippet creates -> an : 1
code snippet creates -> a : 2
snippet creates an -> instance : 1
creates an instance -> of : 2
of a composite -> instance : 1
a composite instance -> of : 1
composite instance of -> and : 1
of and also -> instantiates : 1
and also instantiates -> an : 1
also instantiates an -> instances : 1
instantiates an instances -> of : 1
an instances of -> and : 1
instances of and -> the : 1
of and the -> method : 1
of and the -> next : 1
of and the -> new : 1
and the method -> of : 1
and the method -> got : 1
method of expr -> is : 1
of expr is -> called : 1
expr is called -> to : 1
called to start -> we : 1
called to start -> the : 1
to start we -> will : 1
start we will -> see : 1
see the value -> of : 1
see the value -> being : 1
the expression and -> an : 1
expression and an -> rpn : 1
and an rpn -> equivalent : 1
an rpn equivalent -> of : 1
rpn equivalent of -> the : 1
the expression on -> the : 1
expression on the -> in : 1
how to create -> a : 2
how to create -> custom : 1
create a composite -> and : 1
create a composite -> structure : 1
composite and process -> the : 1
and process the -> composite : 1
composite using a -> visitor : 1
using a visitor -> other : 1
using a visitor -> meant : 1
a visitor other -> potential : 1
visitor other potential -> examples : 1
other potential examples -> for : 1
potential examples for -> are : 1
examples for are -> storing : 1
for are storing -> directory : 1
are storing directory -> contents : 1
storing directory contents -> and : 1
directory contents and -> their : 1
contents and their -> xml : 1
and their xml -> document : 1
their xml document -> and : 1
xml document and -> so : 1
document and so -> popular : 1
and so popular -> opinion : 1
so popular opinion -> says : 1
popular opinion says -> if : 1
opinion says if -> you : 1
says if you -> know : 1
if you know -> the : 1
you know the -> you : 1
know the you -> have : 1
the you have -> understood : 1
understood the gof -> pattern : 1
pattern catalog have -> seen : 1
catalog have seen -> that : 1
seen that the -> composite : 1
seen that the -> source : 1
that the composite -> pattern : 1
composite pattern and -> visitor : 1
pattern and visitor -> pattern : 1
visitor pattern act -> as : 1
pattern act as -> a : 1
a pair to -> take : 1
pair to take -> care : 1
of the structural -> and : 1
the structural and -> behavioral : 1
structural and behavioral -> aspects : 1
and behavioral aspects -> of : 1
behavioral aspects of -> a : 2
aspects of a -> system : 1
aspects of a -> fp : 1
aspects of a -> illustrate : 1
of a system -> and : 1
of a system -> where : 1
of a system -> to : 2
system and provide -> some : 1
and provide some -> the : 1
provide some the -> visitor : 1
some the visitor -> has : 1
the visitor has -> to : 1
visitor has to -> be : 1
to be written -> in : 1
to be written -> for : 1
be written in -> a : 1
in a manner -> that : 1
in a manner -> suitable : 1
a manner that -> presupposes : 1
manner that presupposes -> the : 1
that presupposes the -> cognizance : 1
presupposes the cognizance -> of : 1
the cognizance of -> the : 1
cognizance of the -> structure : 1
be a potential -> problem : 1
a potential problem -> from : 1
potential problem from -> an : 1
problem from an -> abstraction : 1
from an abstraction -> an : 1
an abstraction an -> implementer : 1
abstraction an implementer -> of : 1
an implementer of -> a : 1
implementer of a -> hierarchy : 1
of a hierarchy -> can : 1
a hierarchy can -> provide : 1
hierarchy can provide -> a : 1
can provide a -> mechanism : 1
mechanism to flatten -> the : 1
flatten the hierarchy -> into : 2
the hierarchy into -> a : 4
hierarchy into a -> list : 2
hierarchy into a -> sequence : 1
hierarchy into a -> we : 1
a list is -> possible : 1
a list is -> empty : 1
list is possible -> in : 1
is possible in -> most : 1
possible in most -> this : 1
in most this -> will : 1
most this will -> enable : 1
this will enable -> the : 1
will enable the -> api : 1
enable the api -> implementer : 1
the api implementer -> to : 1
api implementer to -> provide : 1
implementer to provide -> an : 1
to provide an -> the : 1
provide an the -> api : 1
an the api -> is : 1
the api is -> good : 1
api is good -> for : 1
for processing as -> see : 1
processing as see -> how : 1
as see how -> it : 1
see how it -> the : 1
how it the -> composite : 1
it the composite -> for : 1
for iterative have -> already : 1
iterative have already -> learned : 1
already learned that -> the : 1
already learned that -> we : 1
already learned that -> reactive : 2
learned that the -> visitor : 1
that the visitor -> pattern : 1
visitor pattern has -> to : 1
pattern has to -> know : 1
has to know -> the : 1
know the structure -> of : 1
composite for someone -> to : 1
for someone to -> write : 1
someone to write -> an : 1
write an instance -> of : 1
the visitor this -> can : 1
visitor this can -> create : 1
this can create -> an : 1
create an anomaly -> called : 1
an anomaly called -> the : 1
anomaly called the -> gof : 1
called the gof -> pattern : 1
catalog has a -> pattern : 1
has a pattern -> that : 1
a pattern that -> will : 1
a pattern that -> can : 1
pattern that will -> help : 1
us to navigate -> the : 1
to navigate the -> contents : 1
navigate the contents -> of : 1
the contents of -> a : 4
the contents of -> an : 2
the contents of -> the : 10
contents of a -> tree : 1
contents of a -> folder : 1
contents of a -> here : 1
contents of a -> as : 1
contents of a -> web : 1
a tree in -> a : 1
tree in a -> you : 1
in a you -> might : 1
a you might -> have : 1
might have guessed -> it : 1
have guessed it -> the : 1
guessed it the -> iterator : 1
it the iterator -> pattern : 1
is the for -> the : 1
the for the -> iterator : 1
the for the -> second : 1
for the iterator -> to : 1
the iterator to -> do : 1
iterator to do -> its : 1
to do its -> the : 1
do its the -> composite : 1
its the composite -> has : 1
the composite has -> to : 1
the composite has -> been : 1
the composite has -> only : 1
composite has to -> be : 1
to be flattened -> into : 1
be flattened into -> a : 2
flattened into a -> list : 1
flattened into a -> stream : 1
a list sequence -> or : 1
list sequence or -> write : 1
sequence or write -> some : 1
or write some -> code : 1
write some code -> to : 1
some code to -> flatten : 1
code to flatten -> the : 1
flatten the expression -> tree : 1
expression tree that -> we : 1
tree that we -> modeled : 1
that we modeled -> in : 1
we modeled in -> the : 1
modeled in the -> previous : 1
the previous before -> we : 1
previous before we -> write : 1
before we write -> the : 1
we write the -> logic : 1
write the logic -> to : 1
the logic to -> flatten : 1
logic to flatten -> a : 1
to flatten a -> create : 1
flatten a create -> a : 1
create a data -> structure : 1
structure to store -> the : 2
to store the -> contents : 1
to store the -> expression : 1
to store the -> as : 1
store the contents -> of : 2
contents of an -> ast : 1
contents of an -> each : 1
of an ast -> as : 1
an ast as -> a : 1
ast as a -> every : 1
as a every -> node : 1
a every node -> in : 1
in the list -> has : 1
the list has -> to : 1
list has to -> store : 1
has to store -> either : 1
to store either -> an : 1
store either an -> operator : 1
either an operator -> or : 1
an operator or -> depending : 1
operator or depending -> upon : 1
or depending upon -> whether : 1
depending upon whether -> we : 1
upon whether we -> need : 1
whether we need -> to : 1
need to store -> operators : 1
to store operators -> or : 1
store operators or -> we : 1
operators or we -> describe : 1
or we describe -> a : 1
we describe a -> data : 1
describe a data -> structure : 1
data structure called -> for : 1
structure called for -> this : 1
called for this -> a : 1
for this a -> enum : 1
this a enum -> to : 1
a enum to -> store : 1
enum to store -> discriminator : 1
to store discriminator -> operator : 1
store discriminator operator -> or : 1
discriminator operator or -> a : 1
operator or a -> enum : 1
or a enum -> class : 1
a enum class -> operator : 1
enum class operator -> value : 1
class operator value -> a : 1
operator value a -> data : 1
value a data -> structure : 1
store the expression -> a : 1
the expression a -> node : 1
expression a node -> will : 1
a node will -> either : 1
node will either -> be : 1
will either be -> a : 1
either be a -> operator : 1
be a operator -> or : 1
a operator or -> value : 1
operator or value -> struct : 1
or value struct -> exprkind : 1
value struct exprkind -> double : 1
struct exprkind double -> operator : 1
exprkind double operator -> bool : 1
double operator bool -> operator : 1
operator bool operator -> op : 1
bool operator op -> return : 1
operator op return -> bool : 1
op return bool -> string : 1
return bool string -> void : 1
bool string void -> code : 1
string void code -> omitted : 1
void code omitted -> for : 1
code omitted for -> brevity : 1
omitted for brevity -> store : 1
for brevity store -> the : 1
brevity store the -> contents : 1
contents of the -> composite : 1
contents of the -> the : 1
contents of the -> stream : 2
contents of the -> second : 1
contents of the -> this : 1
contents of the -> output : 1
contents of the -> int : 1
contents of the -> as : 1
contents of the -> storage : 1
the composite as -> a : 1
composite as a -> linear : 1
a linear write -> a : 1
linear write a -> class : 1
write a class -> that : 3
class that will -> flatten : 1
that will flatten -> the : 1
will flatten the -> a : 1
will flatten the -> composite : 1
will flatten the -> list : 1
flatten the a -> flattener : 1
the a flattener -> for : 1
a flattener for -> expressions : 1
flattener for expressions -> class : 1
for expressions class -> flattenvisitor : 1
expressions class flattenvisitor -> public : 1
class flattenvisitor public -> iexprvisitor : 1
class flattenvisitor public -> list : 1
flattenvisitor public iexprvisitor -> return : 1
public iexprvisitor return -> return : 1
iexprvisitor return return -> return : 1
return return double -> double : 1
return double double -> double : 1
double double double -> return : 1
return class will -> flatten : 1
class will flatten -> the : 1
flatten the composite -> node : 1
the composite node -> to : 1
composite node to -> a : 1
node to a -> list : 1
to a list -> of : 2
to a list -> and : 2
list of once -> the : 1
list of once -> we : 2
of once the -> composite : 1
once the composite -> has : 1
composite has been -> it : 1
has been it -> is : 1
been it is -> possible : 1
it is possible -> to : 3
is possible to -> process : 1
is possible to -> specify : 1
is possible to -> set : 1
possible to process -> items : 1
to process items -> using : 1
process items using -> the : 1
items using the -> iterator : 1
using the iterator -> write : 1
using the iterator -> a : 1
using the iterator -> most : 1
the iterator write -> a : 1
iterator write a -> small : 1
a small global -> function : 1
small global function -> to : 1
global function to -> convert : 1
global function to -> iterate : 1
function to convert -> an : 1
convert an tree -> to : 1
an tree to -> ret : 1
tree to ret -> global : 1
to ret global -> subroutine : 1
ret global subroutine -> will : 1
global subroutine will -> flatten : 1
subroutine will flatten -> an : 1
will flatten an -> arbitrary : 1
flatten an arbitrary -> expression : 1
an arbitrary expression -> tree : 1
arbitrary expression tree -> of : 1
expression tree of -> a : 1
tree of a -> list : 1
of a list -> of : 1
of once we -> have : 2
once we have -> flattened : 1
once we have -> mapped : 1
once we have -> linearized : 1
once we have -> the : 1
we have flattened -> the : 1
have flattened the -> we : 1
flattened the we -> can : 1
the we can -> use : 2
the we can -> have : 1
the we can -> also : 1
the we can -> exploit : 1
the we can -> see : 2
the we can -> test : 1
the we can -> issue : 1
can use an -> iterator : 1
use an iterator -> to : 1
an iterator to -> process : 1
iterator to process -> the : 1
to process the -> after : 1
to process the -> items : 1
to process the -> nodes : 1
process the after -> linearizing : 1
the after linearizing -> the : 1
after linearizing the -> structure : 1
linearizing the structure -> as : 1
the structure as -> a : 1
as a we -> can : 1
can use a -> stack : 1
can use a -> write : 1
use a stack -> data : 1
a stack data -> structure : 1
stack data structure -> to : 1
structure to evaluate -> the : 1
to evaluate the -> expression : 2
to evaluate the -> the : 1
evaluate the expression -> data : 1
evaluate the expression -> only : 1
the expression data -> to : 1
expression data to -> produce : 1
data to produce -> the : 1
to produce the -> a : 1
produce the a -> minimal : 1
the a minimal -> stack : 1
a minimal stack -> to : 1
minimal stack to -> evaluate : 1
stack to evaluate -> rpn : 1
to evaluate rpn -> expression : 1
evaluate rpn expression -> class : 1
rpn expression class -> doublestack : 1
expression class doublestack -> public : 1
class doublestack public -> void : 1
doublestack public void -> double : 1
public void double -> a : 1
void double a -> double : 1
double a double -> double : 1
a double double -> a : 1
double double a -> return : 2
double a return -> is : 1
double a return -> int : 1
a return is -> a : 1
a wrapper around -> the : 1
wrapper around the -> stl : 1
around the stl -> stack : 1
the stl stack -> this : 1
stl stack this -> can : 1
stack this can -> be : 1
considered as some -> kind : 1
as some kind -> of : 1
kind of helper -> routine : 1
of helper routine -> to : 1
helper routine to -> keep : 1
routine to keep -> the : 1
the listing write -> an : 1
listing write an -> evaluator : 1
write an evaluator -> for : 1
an evaluator for -> the : 1
evaluator for the -> flattened : 1
for the flattened -> we : 1
the flattened we -> will : 1
flattened we will -> iterate : 1
we will iterate -> through : 1
will iterate through -> and : 1
iterate through and -> push : 1
through and push -> the : 1
and push the -> value : 1
push the value -> to : 1
the if a -> value : 1
if a value -> is : 1
value is if -> an : 1
is if an -> operator : 1
if an operator -> is : 1
an operator is -> we : 1
an operator is -> never : 1
operator is we -> will : 1
we will pop -> the : 1
will pop the -> values : 1
pop the values -> from : 1
the values from -> the : 1
the values from -> though : 1
values from the -> stack : 1
values from the -> observable : 1
values from the -> source : 1
values from the -> the : 1
values from the -> db : 1
values from the -> second : 1
from the stack -> and : 1
the stack and -> apply : 1
stack and apply -> the : 1
and apply the -> the : 1
apply the the -> result : 1
the the result -> is : 1
the result is -> pushed : 1
the result is -> passed : 1
result is pushed -> into : 1
is pushed into -> the : 1
pushed into the -> stack : 1
into the stack -> once : 1
the stack once -> at : 1
stack once at -> the : 1
once at the -> end : 1
the the existing -> element : 1
the existing element -> in : 1
existing element in -> the : 1
in the stack -> will : 1
the stack will -> be : 1
stack will be -> the : 1
be the value -> associated : 1
with the through -> eachn : 1
the through eachn -> element : 1
through eachn element -> of : 1
eachn element of -> expression : 1
element of expression -> list : 1
of expression list -> double : 1
expression list double -> doublestack : 1
list double doublestack -> double : 1
double doublestack double -> s : 1
doublestack double s -> ls : 1
double s ls -> if : 1
s ls if -> else : 1
ls if else -> if : 1
if else if -> else : 2
if else if -> n : 1
if else if -> return : 1
else if else -> if : 3
else if n -> else : 1
if n else -> if : 1
n else if -> else : 1
else if return -> global : 1
if return global -> function : 1
return global function -> evaluate : 1
global function evaluate -> an : 1
function evaluate an -> expression : 1
evaluate an expression -> tree : 1
an expression tree -> double : 1
an expression tree -> using : 1
expression tree double -> r : 1
tree double r -> return : 1
double r return -> write : 1
r return write -> a : 1
return write a -> main : 1
return write a -> utility : 1
a main program -> that : 1
main program that -> will : 1
program that will -> call : 1
program that will -> help : 1
program that will -> demonstrate : 1
program that will -> subscribe : 1
program that will -> schedule : 1
program that will -> traverse : 1
that will call -> this : 1
will call this -> function : 1
call this function -> to : 1
call this function -> if : 1
this function to -> evaluate : 1
function to evaluate -> the : 1
evaluate the the -> code : 1
the the code -> listing : 1
the the code -> is : 1
code listing in -> the : 1
listing in the -> evaluator : 1
in the evaluator -> is : 1
the evaluator is -> easy : 1
evaluator is easy -> to : 1
is easy to -> understand : 1
is easy to -> customize : 1
easy to understand -> because : 1
to understand because -> we : 1
understand because we -> are : 1
because we are -> reducing : 1
we are reducing -> a : 1
are reducing a -> in : 1
reducing a in -> the : 1
in the things -> were : 1
the things were -> not : 1
things were not -> int : 1
were not int -> char : 1
not int char -> new : 1
result cout result -> and : 1
cout result and -> filter : 1
result and filter -> operations : 1
is a functional -> operator : 1
a functional operator -> where : 1
functional operator where -> a : 1
operator where a -> function : 1
where a function -> will : 1
a function will -> be : 1
will be applied -> to : 1
will be applied -> on : 1
applied to a -> filter : 1
to a filter -> will : 1
a filter will -> apply : 1
filter will apply -> a : 1
will apply a -> predicate : 1
will apply a -> filter : 1
apply a predicate -> to : 1
a predicate to -> a : 1
predicate to a -> list : 1
a list and -> return : 1
a list and -> traverse : 1
a list and -> processing : 1
a list and -> navigate : 1
list and return -> another : 1
and return another -> they : 1
return another they -> are : 1
another they are -> the : 1
are the cornerstone -> of : 1
the cornerstone of -> any : 1
cornerstone of any -> functional : 1
of any functional -> processing : 1
any functional processing -> they : 1
functional processing they -> are : 1
processing they are -> also : 1
they are also -> called : 2
are also called -> we : 1
are also called -> properties : 1
also called we -> can : 1
called we can -> write : 1
can write a -> generic : 1
write a generic -> map : 1
a generic map -> using : 1
generic map using -> for : 1
map using for -> and : 1
using for and -> the : 1
and the typename -> r : 1
the typename r -> r : 1
typename r r -> return : 1
typename r r -> r : 1
r r return -> also : 1
r return also -> write : 1
return also write -> a : 1
also write a -> function : 1
to filter a -> assume : 1
filter a assume -> only : 1
a assume only -> a : 1
assume only a -> list : 1
only a list -> will : 1
a list will -> be : 1
list will be -> the : 1
the same can -> work : 1
same can work -> on : 1
can work on -> we : 1
work on we -> can : 1
we can compose -> a : 1
we can compose -> an : 1
can compose a -> function : 1
compose a function -> using : 1
a function using -> the : 1
function using the -> pipe : 1
function using the -> and : 1
function using the -> void : 1
using the pipe -> the : 1
using the pipe -> operator : 1
the pipe the -> composite : 1
pipe the composite -> function : 1
the composite function -> can : 1
composite function can -> also : 1
function can also -> be : 1
can also be -> passed : 1
can also be -> considered : 1
also be passed -> as : 1
be passed as -> a : 1
be passed as -> parameters : 1
as a typename -> r : 1
a typename r -> r : 1
r r r -> fn : 1
r r fn -> r : 1
r fn r -> auto : 1
fn r auto -> first : 1
r auto first -> last : 1
auto first last -> result : 1
first last result -> bool : 1
last result bool -> inserted : 1
result bool inserted -> while : 1
bool inserted while -> if : 1
inserted while if -> inserted : 1
while if inserted -> if : 1
if inserted if -> return : 1
inserted if return -> this : 1
if return this -> implementation : 1
return this implementation -> of : 1
this implementation of -> due : 1
implementation of due -> to : 1
of due to -> limitations : 1
due to limitations -> in : 1
to limitations in -> we : 1
limitations in we -> were : 1
in we were -> forced : 1
we were forced -> to : 1
were forced to -> roll : 1
forced to roll -> our : 1
to roll our -> own : 1
roll our own -> iteration : 1
our own iteration -> it : 1
own iteration it -> is : 1
iteration it is -> generally : 1
it is generally -> advised : 1
is generally advised -> to : 1
generally advised to -> use : 1
advised to use -> the : 1
to use the -> stl : 1
to use the -> iterate : 1
to use the -> operator : 2
to use the -> event : 1
to use the -> signals : 1
to use the -> error : 1
use the stl -> implementation : 1
the stl implementation -> of : 1
stl implementation of -> functions : 1
implementation of functions -> to : 1
of functions to -> write : 1
of functions to -> form : 1
functions to write -> for : 1
to write for -> this : 1
write for this -> particular : 1
particular we need -> to : 1
need to detect -> whether : 1
detect whether a -> list : 1
whether a list -> is : 1
list is empty -> or : 1
empty or global -> function : 1
or global function -> to : 1
function to iterate -> through : 1
to iterate through -> the : 1
iterate through the -> list : 2
the list void -> s : 1
list void s -> for : 1
void s for -> n : 1
s for n -> s : 1
for n s -> write : 1
n s write -> a : 1
s write a -> main : 1
put everything the -> code : 1
everything the code -> will : 1
the code will -> demonstrate : 1
the code will -> be : 1
the code will -> look : 3
code will demonstrate -> how : 1
will demonstrate how -> to : 1
will demonstrate how -> we : 1
demonstrate how to -> use : 1
to use and -> in : 1
use and in -> the : 1
in the application -> the : 1
application the logic -> for : 1
the logic for -> functional : 1
logic for functional -> composition : 1
for functional composition -> and : 1
functional composition and -> the : 1
composition and the -> pipe : 1
and the pipe -> operator : 1
pipe operator are -> available : 1
operator are available -> in : 1
in the int -> char : 1
the int char -> new : 1
the int char -> qapplication : 1
new new will -> flatten : 1
new will flatten -> the : 1
flatten the list -> and : 1
the list and -> filter : 1
list and filter -> will : 1
and filter will -> by : 1
filter will by -> applied : 1
will by applied -> auto : 1
by applied auto -> cd : 1
applied auto cd -> return : 1
auto cd return -> square : 1
cd return square -> the : 1
return square the -> value : 1
square the value -> and : 1
the value and -> multiply : 1
the value and -> call : 1
value and multiply -> by : 1
and multiply by -> used : 1
multiply by used -> as : 1
by used as -> composition : 1
used as composition -> operator : 1
as composition operator -> see : 1
composition operator see -> for : 1
operator see for -> details : 1
see for details -> auto : 1
for details auto -> cdr : 1
details auto cdr -> s : 1
auto cdr s -> return : 1
cdr s return -> s : 1
s return s -> return : 1
s return s -> s : 2
return s return -> routine : 1
s return routine -> creates : 1
return routine creates -> a : 1
routine creates a -> new : 1
a new which -> contains : 1
a new which -> is : 1
new which contains -> only : 1
which contains only -> the : 1
contains only the -> values : 1
only the values -> or : 1
the values or -> operands : 1
values or operands -> used : 1
or operands used -> in : 1
operands used in -> the : 1
the the routine -> applies : 1
the routine applies -> a : 1
routine applies a -> composite : 1
applies a composite -> function : 1
a composite function -> on : 1
a composite function -> using : 2
composite function on -> the : 1
function on the -> list : 1
on the list -> of : 1
on the list -> to : 1
list of values -> to : 1
list of values -> and : 1
of values to -> return : 1
values to return -> a : 1
to return a -> new : 1
return a new -> the : 1
a new the -> gaze : 1
a new the -> second : 2
a new the -> execution : 1
new the gaze -> for : 1
gaze for have -> already : 1
for have already -> learned : 1
learned that we -> can : 1
we can transform -> a : 1
can transform a -> composite : 1
transform a composite -> to : 1
a composite to -> a : 1
composite to a -> list : 1
list and traverse -> them : 1
and traverse them -> through : 1
traverse them through -> an : 1
them through an -> the : 1
through an the -> iterator : 1
an the iterator -> pattern : 1
iterator pattern pulls -> data : 1
pattern pulls data -> from : 1
pulls data from -> the : 1
data from the -> data : 1
data from the -> event : 1
data source and -> manipulates : 1
source and manipulates -> the : 1
and manipulates the -> result : 1
manipulates the result -> at : 1
the result at -> the : 1
result at the -> consumer : 1
at the consumer -> the : 1
the consumer the -> most : 1
consumer the most -> important : 1
most important problem -> we : 1
important problem we -> face : 1
problem we face -> is : 1
we face is -> that : 1
face is that -> we : 1
is that we -> are : 1
we are coupling -> our : 1
are coupling our -> and : 1
coupling our and -> event : 1
our and event -> the : 1
and event the -> gof : 1
event the gof -> observer : 1
observer pattern also -> does : 1
pattern also does -> not : 1
also does not -> help : 1
not help write -> a : 1
help write a -> class : 1
class that can -> act : 1
that can act -> as : 1
act as an -> event : 1
act as an -> intermediary : 1
act as an -> observable : 1
as an event -> which : 1
an event which -> the : 1
event which the -> sinks : 1
which the sinks -> will : 1
the sinks will -> subscribe : 1
the sinks will -> not : 1
sinks will subscribe -> by : 1
will subscribe by -> having : 1
subscribe by having -> an : 1
by having an -> event : 1
having an event -> we : 1
an event we -> an : 1
event we an -> object : 1
we an object -> that : 1
an object that -> will : 1
an object that -> has : 1
object that will -> act : 1
that will act -> as : 1
will act as -> an : 1
will act as -> a : 1
as an intermediary -> between : 1
an intermediary between -> the : 1
intermediary between the -> and : 1
between the and -> event : 1
between the and -> methods : 1
the and event -> one : 1
and event one -> advantage : 1
event one advantage -> of : 1
one advantage of -> this : 1
of this indirection -> is : 1
this indirection is -> readily : 1
indirection is readily -> obvious : 1
is readily obvious -> from : 1
readily obvious from -> the : 1
obvious from the -> fact : 1
obvious from the -> the : 1
from the fact -> that : 1
fact that our -> class : 1
that our class -> can : 1
our class can -> and : 1
class can and -> filter : 1
can and filter -> out : 1
and filter out -> events : 1
filter out events -> before : 1
out events before -> they : 1
events before they -> reach : 1
before they reach -> the : 1
they reach the -> the : 1
reach the the -> consumer : 1
the the consumer -> can : 1
the consumer can -> even : 1
consumer can even -> set : 1
can even set -> transformation : 1
even set transformation -> and : 1
set transformation and -> filtering : 1
transformation and filtering -> criteria : 1
transformation and filtering -> can : 1
and filtering criteria -> at : 1
filtering criteria at -> the : 1
criteria at the -> event : 1
at the event -> hub : 1
at the event -> consumer : 1
the event hub -> observer : 1
event hub observer -> interface : 1
hub observer interface -> struct : 1
observer interface struct -> observer : 1
interface struct observer -> int : 1
struct observer int -> interface : 1
observer int interface -> to : 1
int interface to -> be : 1
interface to be -> implemented : 1
to be implemented -> by : 1
implemented by eventsource -> struct : 1
by eventsource struct -> observable : 1
eventsource struct observable -> virtual : 1
struct observable virtual -> bool : 1
observable virtual bool -> observer : 1
virtual bool observer -> obs : 1
virtual bool observer -> return : 1
bool observer obs -> did : 1
observer obs did -> not : 1
obs did not -> implement : 1
did not implement -> unsuscribe : 1
not implement unsuscribe -> have : 1
implement unsuscribe have -> already : 1
unsuscribe have already -> covered : 1
already covered the -> and : 1
already covered the -> core : 1
already covered the -> topic : 1
covered the and -> in : 1
the and in -> programming : 1
and in programming -> model : 1
overview and and -> tour : 1
and and tour -> of : 1
and tour of -> modern : 1
its key the -> implements : 1
key the implements -> and : 1
the implements and -> the : 1
implements and the -> event : 1
and the event -> sinks : 2
and the event -> and : 1
and the event -> sink : 1
event sinks implement -> the : 1
sinks implement the -> a : 1
implement the a -> class : 1
the a class -> derived : 1
a class derived -> from : 1
derived from will -> implement : 1
from will implement -> the : 1
implement the following -> receiving : 1
the following receiving -> of : 1
following receiving of -> the : 1
receiving of the -> class : 1
the class will -> be : 1
class will be -> derived : 1
will be derived -> from : 1
be derived from -> and : 1
derived from and -> has : 1
derived from and -> sometimes : 1
from and has -> to : 1
and has to -> to : 1
has to to -> implemented : 1
to to implemented -> in : 1
to implemented in -> our : 1
implemented in our -> toy : 1
in our toy -> implementation : 1
our toy implementation -> of : 1
of class class -> farg : 1
class class farg -> class : 1
class farg class -> eventsourcevaluesubject : 1
farg class eventsourcevaluesubject -> public : 1
class eventsourcevaluesubject public -> observable : 1
eventsourcevaluesubject public observable -> t : 1
public observable t -> and : 1
observable t and -> are : 1
t and are -> functions : 1
and are functions -> that : 1
are functions that -> can : 1
are functions that -> take : 1
are functions that -> connect : 1
functions that can -> help : 1
can help us -> to : 2
us to transform -> and : 1
to transform and -> filter : 1
transform and filter -> the : 1
and filter the -> values : 1
filter the values -> before : 1
the values before -> they : 1
values before they -> are : 1
before they are -> dispatched : 1
they are dispatched -> to : 1
are dispatched to -> the : 1
the subscribers in -> an : 1
in an asynchronous -> we : 1
in an asynchronous -> the : 1
in an asynchronous -> manner : 1
an asynchronous we -> give : 1
asynchronous we give -> these : 1
we give these -> values : 1
give these values -> as : 1
these values as -> parameters : 1
values as parameters -> when : 1
as parameters when -> we : 1
parameters when we -> instantiate : 1
when we instantiate -> the : 1
we instantiate the -> we : 1
instantiate the we -> have : 1
have written the -> code : 1
written the code -> under : 1
the code under -> the : 1
code under the -> assumption : 1
under the assumption -> that : 1
the assumption that -> only : 1
assumption that only -> the : 1
that only the -> object : 1
only the object -> will : 1
object will be -> stored : 1
object will be -> returned : 1
will be stored -> in : 1
can have a -> list : 1
have a list -> or : 1
a list or -> vector : 1
list or vector -> of : 1
or vector of -> expressions : 1
vector of expressions -> and : 1
of expressions and -> stream : 1
expressions and stream -> the : 1
and stream the -> value : 1
stream the value -> to : 1
to the for -> implementation : 1
the for implementation -> a : 1
for implementation a -> scalar : 1
implementation a scalar -> value : 1
a scalar value -> can : 1
scalar value can -> be : 1
value can be -> pushed : 1
can be pushed -> to : 1
be pushed to -> the : 1
pushed to the -> state : 1
to the state -> used : 1
the state used -> raw : 1
state used raw -> pointer : 1
used raw pointer -> real : 1
raw pointer real -> a : 1
pointer real a -> is : 1
real a is -> more : 1
a is more -> apt : 1
is more apt -> here : 1
more apt here -> virtual : 1
apt here virtual -> bool : 1
here virtual bool -> observer : 1
bool observer return -> have : 1
observer return have -> made : 1
return have made -> some : 1
have made some -> assumptions : 1
made some assumptions -> that : 1
some assumptions that -> the : 1
assumptions that the -> objects : 1
that the objects -> will : 1
the objects will -> be : 1
objects will be -> owned : 1
will be owned -> by : 1
be owned by -> the : 1
owned by the -> we : 1
by the we -> have : 1
by the we -> can : 1
by the we -> talk : 1
have also omitted -> the : 1
also omitted the -> implementation : 1
omitted the implementation -> of : 2
of the unsubscribe -> the : 1
the unsubscribe the -> constructor : 1
unsubscribe the constructor -> takes : 1
the constructor takes -> an : 1
constructor takes an -> a : 1
takes an a -> predicate : 1
an a predicate -> can : 1
a predicate can -> be : 1
predicate can be -> a : 1
be a composite -> function : 2
composite function using -> the : 2
using the and -> a : 1
using the and -> transformations : 1
using the and -> some : 1
using the and -> rxcpp : 1
using the and -> one : 1
the and a -> function : 1
the and a -> producer : 1
the and a -> look : 1
and a function -> can : 1
and a function -> to : 1
a function can -> be : 1
using the void -> double : 1
the void double -> ret : 1
void double ret -> auto : 1
double ret auto -> result : 1
ret auto result -> apply : 1
auto result apply -> mapping : 1
result apply mapping -> logic : 1
apply mapping logic -> auto : 1
mapping logic auto -> resulttr : 1
logic auto resulttr -> filter : 1
auto resulttr filter -> if : 1
resulttr filter if -> evaluating : 1
filter if evaluating -> the : 1
if evaluating the -> the : 1
evaluating the the -> scalar : 1
the the scalar -> value : 1
the scalar value -> will : 1
scalar value will -> be : 1
will be put -> into : 1
be put into -> an : 1
put into an -> stl : 1
into an stl -> the : 1
into an stl -> list : 1
an stl the -> map : 1
stl the map -> function : 1
the map function -> will : 1
the map function -> this : 1
map function will -> be : 1
be applied on -> the : 2
applied on the -> list : 1
applied on the -> data : 1
applied on the -> usage : 1
applied on the -> returns : 1
the list to -> transform : 1
list to transform -> the : 1
to transform the -> in : 1
transform the in -> we : 1
the in we -> will : 1
in we will -> handle : 1
in we will -> override : 1
we will handle -> a : 1
will handle a -> list : 1
handle a list -> of : 1
we have mapped -> or : 1
have mapped or -> transformed : 1
mapped or transformed -> the : 1
or transformed the -> we : 1
transformed the we -> will : 1
we will apply -> a : 1
apply a filter -> to : 1
a filter to -> the : 1
filter to the -> if : 1
the if there -> is : 1
is no value -> in : 1
no value in -> the : 1
the method returns -> without : 1
method returns without -> notifying : 1
returns without notifying -> the : 1
without notifying the -> double : 1
notifying the double -> for : 1
the double for -> sink : 1
double for sink -> return : 1
for sink return -> result : 1
sink return result -> double : 1
return result double -> dresult : 1
result double dresult -> this : 1
double dresult this -> we : 1
dresult this we -> will : 1
we will call -> to : 1
we will call -> dosomethingwithevent : 1
will call to -> dispatch : 1
call to dispatch -> the : 1
to dispatch the -> data : 1
to dispatch the -> event : 1
dispatch the data -> to : 1
the data to -> the : 1
data to the -> event : 1
data to the -> input : 1
data to the -> stream : 1
data to the -> sink : 1
data to the -> source : 1
the event libraries -> use : 1
event libraries use -> a : 1
libraries use a -> piece : 1
use a piece -> of : 1
of code called -> scheduler : 1
code called scheduler -> to : 1
called scheduler to -> do : 1
scheduler to do -> this : 1
to do this -> part : 1
do this part -> of : 1
this part of -> the : 1
of the since -> we : 1
the since we -> are : 1
are using fire -> and : 1
using fire and -> the : 1
fire and the -> sinks : 1
and the sinks -> will : 1
sinks will not -> be : 1
not be able -> to : 1
able to block -> the : 1
block the this -> is : 1
this is one -> of : 1
most important use -> cases : 1
important use cases -> of : 1
use cases of -> return : 1
use cases of -> the : 1
cases of return -> void : 1
of return void -> state : 1
void state write -> a : 1
state write a -> method : 1
write a method -> to : 1
method to emit -> random : 1
method to emit -> a : 1
to emit random -> expressions : 1
emit random expressions -> based : 1
random expressions based -> on : 1
expressions based on -> the : 1
on the modern -> random : 1
the modern random -> number : 1
modern random number -> generator : 1
random number generator -> with : 1
number generator with -> a : 1
generator with a -> uniform : 1
with a uniform -> probability : 1
a uniform probability -> the : 1
uniform probability the -> choice : 1
probability the choice -> of : 1
the choice of -> this : 1
the choice of -> programming : 1
choice of this -> distribution : 1
of this distribution -> is : 1
this distribution is -> rather : 1
distribution is rather -> we : 1
is rather we -> can : 1
rather we can -> try : 1
we can try -> other : 1
can try other -> distributions : 1
try other distributions -> as : 1
other distributions as -> well : 1
distributions as well -> to : 1
as well to -> see : 1
well to see -> different : 1
to see different -> int : 1
see different int -> double : 1
different int double -> mean : 1
int double mean -> return : 1
double mean return -> new : 1
mean return new -> new : 1
return new new -> new : 1
new new write -> a : 1
new write a -> main : 1
put everything we -> will : 1
everything we will -> instantiate : 1
we will instantiate -> the : 1
will instantiate the -> class : 1
instantiate the class -> with : 1
the class with -> an : 1
an a and -> a : 1
a and a -> int : 1
and a int -> char : 1
a int char -> new : 1
a int char -> concreteobject : 1
new new s -> return : 1
new s return -> s : 1
return s s -> return : 2
s s return -> s : 1
s s return -> instantiating : 1
s return instantiating -> the : 1
return instantiating the -> we : 1
instantiating the we -> have : 1
have used the -> pipe : 1
have used the -> term : 1
used the pipe -> operator : 1
operator to compose -> two : 1
operator to compose -> and : 1
to compose two -> this : 1
compose two this -> is : 1
two this is -> to : 1
this is to -> demonstrate : 1
to demonstrate that -> we : 1
demonstrate that we -> can : 1
can compose an -> arbitrary : 1
compose an arbitrary -> list : 1
an arbitrary list -> of : 1
arbitrary list of -> functions : 1
list of functions -> to : 1
functions to form -> a : 1
form a composite -> when : 1
form a composite -> of : 1
a composite when -> we : 1
composite when we -> write : 1
when we write -> rxcpp : 1
we write rxcpp -> we : 1
write rxcpp we -> will : 1
rxcpp we will -> exploit : 1
we will exploit -> this : 1
will exploit this -> technique : 1
exploit this technique -> a : 1
this technique a -> observer : 1
technique a observer -> observer : 1
a observer observer -> double : 1
observer observer double -> cout : 1
observer double cout -> value : 1
double cout value -> r : 1
cout value r -> const : 1
cout value r -> this : 1
value r const -> double : 1
r const double -> r : 1
const double r -> cout : 1
double r cout -> value : 1
r cout value -> r : 1
value r this -> we : 1
r this we -> have : 1
we have instantiated -> two : 1
have instantiated two -> objects : 1
instantiated two objects -> and : 1
two objects and -> assigned : 1
objects and assigned -> them : 1
and assigned them -> to : 1
assigned them to -> the : 1
them to the -> ondata : 1
them to the -> the : 1
to the ondata -> member : 1
the ondata member -> using : 1
ondata member using -> lambda : 1
member using lambda -> functions : 1
lambda functions we -> have : 1
functions we have -> not : 1
not implemented other -> this : 1
implemented other this -> is : 1
other this is -> for : 1
this is for -> demonstration : 1
is for demonstration -> purposes : 1
demonstration purposes subscribed -> to : 1
purposes subscribed to -> event : 1
subscribed to event -> notification : 1
to event notification -> using : 1
event notification using -> the : 1
notification using the -> we : 1
using the we -> have : 1
using the we -> are : 1
we have only -> implemented : 1
have only implemented -> the : 1
only implemented the -> ondata : 1
implemented the ondata -> implementing : 1
the ondata implementing -> are : 1
ondata implementing are -> trivial : 1
implementing are trivial -> expr : 1
are trivial expr -> int : 1
trivial expr int -> i : 1
expr int i -> cout : 1
int i cout -> i : 1
i cout i -> expr : 1
cout i expr -> delete : 1
i expr delete -> evaluated : 1
expr delete evaluated -> a : 1
delete evaluated a -> series : 1
evaluated a series -> of : 1
series of random -> expressions : 1
of random expressions -> by : 1
random expressions by -> setting : 1
expressions by setting -> the : 1
by setting the -> expression : 1
setting the expression -> to : 1
the expression to -> the : 1
expression to the -> after : 1
to the after -> transformation : 1
the after transformation -> and : 1
after transformation and -> if : 1
transformation and if -> there : 1
and if there -> is : 1
is a value -> the : 1
a value the -> value : 1
value the value -> will : 1
it will printed -> to : 1
will printed to -> the : 1
printed to the -> with : 1
printed to the -> more : 1
printed to the -> by : 1
printed to the -> values : 1
printed to the -> observable : 1
to the with -> we : 1
the with we -> have : 1
with we have -> managed : 1
with we have -> learned : 1
managed to write -> a : 1
write a using -> we : 1
a using we -> have : 1
using we have -> demonstrated : 1
using we have -> covered : 1
we have demonstrated -> the : 1
have demonstrated the -> following : 1
demonstrated the following -> in : 1
the following in -> this : 1
following in this -> an : 1
in this an -> expression : 1
this an expression -> tree : 1
expression tree using -> a : 1
tree using a -> a : 1
using a a -> composite : 1
a a composite -> through : 1
a composite through -> the : 1
composite through the -> visitor : 1
through the visitor -> the : 1
the visitor the -> expression : 1
visitor the expression -> tree : 1
expression tree into -> a : 1
tree into a -> list : 1
list and processing -> it : 1
and processing it -> through : 1
processing it through -> iterators : 1
it through iterators -> the : 1
through iterators the -> gaze : 1
iterators the gaze -> from : 1
the gaze from -> to : 1
gaze from to -> the : 1
from to the -> event : 1
from to the -> http : 1
event sink have -> covered : 1
sink have covered -> a : 1
lot of ground -> in : 1
of ground in -> this : 1
of ground in -> understanding : 1
of ground in -> explaining : 1
ground in this -> inching : 1
in this inching -> towards : 1
this inching towards -> the : 1
inching towards the -> reactive : 1
towards the reactive -> programming : 1
programming we learned -> about : 1
pattern and understood -> its : 1
and understood its -> we : 1
understood its we -> digressed : 1
its we digressed -> into : 1
we digressed into -> philosophy : 1
digressed into philosophy -> to : 1
into philosophy to -> understand : 1
philosophy to understand -> the : 1
understand the method -> of : 1
method of looking -> at : 1
of looking at -> the : 1
looking at the -> world : 1
at the world -> from : 1
the world from -> a : 1
world from a -> and : 1
from a and -> functional : 1
a and functional -> we : 1
and functional we -> learned : 1
functional we learned -> about : 1
an expression we -> learned : 1
expression we learned -> how : 1
how to flatten -> the : 1
list and navigate -> them : 1
and navigate them -> through : 1
navigate them through -> the : 1
them through the -> we : 1
through the we -> transformed : 1
the we transformed -> the : 1
we transformed the -> scheme : 1
transformed the scheme -> of : 1
the scheme of -> things : 1
the scheme of -> iteration : 1
scheme of things -> a : 1
of things a -> bit : 1
things a bit -> to : 1
bit to reach -> observables : 1
to reach observables -> work : 1
reach observables work -> with : 1
observables work with -> but : 1
work with but -> in : 1
with but in -> our : 1
but in our -> case : 1
in our case -> it : 1
our case it -> was : 1
case it was -> a : 1
it was a -> scalar : 1
it was a -> chrome : 1
was a scalar -> in : 1
a scalar in -> the : 1
scalar in the -> next : 1
we will learn -> about : 2
we will learn -> how : 5
learn about event -> stream : 1
about event stream -> processing : 1
processing to complete -> our : 1
to complete our -> prerequisites : 1
complete our prerequisites -> for : 1
our prerequisites for -> learning : 1
prerequisites for learning -> reactive : 1
for learning reactive -> to : 1
learning reactive to -> event : 1
reactive to event -> stream : 1
programming using chapter -> will : 1
using chapter will -> be : 1
chapter will be -> the : 2
be the last -> in : 1
the last in -> the : 1
last in the -> series : 1
in the series -> of : 1
the series of -> chapters : 1
series of chapters -> required : 1
of chapters required -> for : 1
chapters required for -> programming : 1
required for programming -> reactive : 1
for programming reactive -> systems : 1
programming reactive systems -> using : 1
reactive systems using -> the : 1
systems using the -> reason : 1
using the reason -> why : 1
the reason why -> we : 1
reason why we -> need : 1
why we need -> to : 1
need to go -> through : 1
to go through -> quite : 1
go through quite -> a : 1
through quite a -> number : 1
quite a number -> of : 1
number of concepts -> is : 1
of concepts is -> due : 1
concepts is due -> to : 1
is due to -> the : 1
to the fact -> that : 1
fact that the -> reactive : 1
programming model unifies -> a : 1
model unifies a -> lot : 1
unifies a lot -> of : 1
lot of computing -> concepts : 1
of computing concepts -> in : 1
computing concepts in -> realizing : 1
concepts in realizing -> its : 1
in realizing its -> robust : 1
realizing its robust -> programming : 1
its robust programming -> to : 1
robust programming to -> start : 1
programming to start -> thinking : 1
to start thinking -> in : 1
start thinking in -> a : 1
thinking in a -> reactive : 1
a reactive a -> programmer : 1
to be familiar -> with : 1
familiar with functional -> the : 1
with functional the -> asynchronous : 1
functional the asynchronous -> programming : 1
asynchronous programming design -> scheduling : 1
programming design scheduling -> data : 1
design scheduling data -> flow : 1
scheduling data flow -> programming : 1
data flow programming -> and : 1
flow programming and -> even : 1
programming and even -> a : 1
and even a -> bit : 1
even a bit -> of : 1
a bit of -> graph : 1
a bit of -> ground : 3
bit of graph -> we : 1
of graph we -> started : 1
graph we started -> the : 1
we started the -> book : 1
started the book -> with : 1
the book with -> a : 1
book with a -> peek : 1
with a peek -> into : 1
into the programming -> models : 1
into the programming -> model : 1
programming models of -> various : 1
models of various -> gui : 1
of various gui -> systems : 1
various gui systems -> and : 1
gui systems and -> ways : 1
systems and ways -> to : 1
and ways to -> structure : 1
ways to structure -> our : 1
to structure our -> code : 1
structure our code -> around : 1
our code around -> we : 1
code around we -> covered : 1
around we covered -> the : 1
covered the core -> essence : 1
covered the core -> of : 1
the core essence -> of : 1
core essence of -> modern : 1
essence of modern -> tour : 1
of modern tour -> of : 1
modern tour of -> modern : 1
its key in -> concurrency : 1
key in concurrency -> and : 1
in and and -> programming : 1
programming in we -> covered : 1
in we covered -> the : 1
covered the concurrency -> supported : 1
the concurrency supported -> by : 1
concurrency supported by -> the : 1
language and in -> to : 1
and in to -> we : 1
in to we -> focused : 1
to we focused -> on : 1
we focused on -> how : 1
focused on how -> to : 1
on how to -> put : 1
how to put -> the : 1
put the reactive -> programming : 1
programming model into -> perspective : 1
model into perspective -> by : 1
into perspective by -> dealing : 1
perspective by dealing -> with : 1
by dealing with -> it : 1
dealing with it -> in : 1
with it in -> the : 1
with it in -> a : 1
context of gof -> what : 1
of gof what -> is : 1
gof what is -> left : 1
what is left -> is : 1
is left is -> event : 1
left is event -> stream : 1
is event stream -> now : 1
event stream now -> we : 1
stream now we -> will : 1
now we will -> be : 1
will be focusing -> on : 2
be focusing on -> the : 1
be focusing on -> which : 1
focusing on the -> processing : 1
focusing on the -> and : 1
on the processing -> of : 1
the processing of -> event : 1
processing of event -> streams : 1
of event streams -> or : 1
of event streams -> easier : 1
event streams or -> event : 1
streams or event -> stream : 1
or event stream -> in : 1
event stream in -> this : 1
event stream in -> the : 1
stream in this -> we : 1
at the is -> the : 1
is the stream -> programming : 1
stream programming programming -> using : 1
programming programming using -> with : 1
programming using with -> a : 1
using with a -> public : 1
with a public -> domain : 1
a public domain -> programming : 1
a public domain -> library : 1
a public domain -> that : 1
public domain programming -> using : 1
domain programming using -> stream : 1
programming using stream -> is : 1
using stream is -> stream : 1
stream is stream -> programming : 1
stream programming we -> get : 1
stream programming we -> can : 1
stream programming we -> have : 1
programming we get -> into : 1
we get into -> the : 1
get into the -> topic : 1
get into the -> programming : 1
get into the -> meat : 2
into the topic -> of : 1
take a step -> back : 1
a step back -> to : 1
step back to -> look : 1
back to look -> at : 1
to look at -> parallels : 1
to look at -> reactive : 1
look at parallels -> with : 1
at parallels with -> the : 1
parallels with the -> posix : 1
with the posix -> shell : 1
the posix shell -> programming : 1
posix shell programming -> in : 1
shell programming in -> a : 1
programming in a -> typical : 1
programming in a -> broader : 1
programming in a -> loose : 1
a typical command -> line : 1
typical command line -> shell : 1
line shell every -> command : 1
shell every command -> is : 1
every command is -> a : 1
command is a -> program : 1
is a program -> and : 1
is a program -> structure : 1
a program and -> every : 1
program and every -> program : 1
and every program -> is : 1
is a we -> can : 1
we can pipe -> the : 1
can pipe the -> output : 2
pipe the output -> of : 2
of one program -> to : 1
one program to -> another : 1
program to another -> program : 1
to another program -> after : 1
another program after -> achieving : 1
program after achieving -> a : 1
after achieving a -> computational : 1
achieving a computational -> objective : 1
a computational objective -> or : 1
computational objective or -> in : 1
objective or in -> we : 1
or in we -> can : 1
in we can -> chain : 1
in we can -> write : 1
we can chain -> a : 1
can chain a -> series : 1
chain a series -> of : 1
series of to -> achieve : 1
of to achieve -> bigger : 1
to achieve bigger -> computational : 1
achieve bigger computational -> we : 1
bigger computational we -> can : 1
computational we can -> see : 1
we can see -> it : 1
we can see -> that : 1
we can see -> the : 2
can see it -> as : 1
see it as -> a : 1
it as a -> stream : 1
as a stream -> of : 3
a stream of -> data : 2
a stream of -> entities : 1
a stream of -> numbers : 3
a stream of -> an : 1
a stream of -> mouse : 1
a stream of -> they : 1
a stream of -> ux : 1
stream of data -> passing : 1
stream of data -> propagating : 1
stream of data -> in : 1
of data passing -> through : 1
data passing through -> a : 1
passing through a -> series : 1
through a series -> of : 1
series of filters -> or : 1
series of filters -> and : 1
of filters or -> transformations : 1
filters or transformations -> to : 1
or transformations to -> fetch : 1
transformations to fetch -> the : 1
to fetch the -> we : 1
fetch the we -> can : 1
can also call -> the : 1
also call the -> preceding : 1
call the preceding -> process : 1
the preceding process -> as : 1
preceding process as -> there : 1
process as there -> are : 1
there are cases -> where : 1
are cases where -> huge : 1
cases where huge -> programs : 1
where huge programs -> are : 1
huge programs are -> being : 1
programs are being -> replaced : 1
are being replaced -> by : 1
being replaced by -> small : 1
replaced by small -> amount : 1
by small amount -> of : 1
small amount of -> shell : 1
small amount of -> data : 1
amount of shell -> code : 1
of shell code -> using : 1
shell code using -> the : 1
code using the -> same : 1
using the same -> process : 1
the same process -> can : 1
same process can -> be : 1
process can be -> realized : 1
can be realized -> in : 1
be realized in -> a : 1
realized in a -> by : 1
in a by -> treating : 1
a by treating -> the : 1
by treating the -> input : 1
treating the input -> of : 1
the input of -> a : 1
input of a -> function : 1
a function as -> a : 2
a or the -> data : 1
or the data -> can : 1
the data can -> be : 1
data can be -> passed : 1
data can be -> streamed : 1
can be passed -> from : 1
can be passed -> on : 1
be passed from -> one : 1
passed from one -> function : 1
from one function -> or : 1
one function or -> function : 1
function or function -> object : 1
or function object -> another : 1
function object another -> as : 1
object another as -> a : 1
another as a -> standard : 1
as a standard -> data : 1
standard data donald -> the : 1
data donald the -> legendary : 1
donald the legendary -> computer : 1
the legendary computer -> scientist : 1
legendary computer scientist -> and : 1
computer scientist and -> stanford : 1
scientist and stanford -> university : 1
and stanford university -> professor : 1
stanford university professor -> was : 1
university professor was -> asked : 1
professor was asked -> to : 1
was asked to -> write : 1
asked to write -> a : 1
write a program -> a : 1
write a program -> that : 6
write a program -> to : 3
a program a -> text : 1
program a text -> file : 1
a text file -> and : 1
text file and -> determines : 1
file and determines -> frequently : 1
and determines frequently -> used : 1
determines frequently used -> out : 1
frequently used out -> a : 1
used out a -> sorted : 1
out a sorted -> list : 1
a sorted list -> of : 1
sorted list of -> words : 1
list of words -> along : 1
of words along -> with : 1
words along with -> their : 1
along with their -> solution : 1
with their solution -> was : 1
their solution was -> a : 1
solution was a -> pascal : 1
was a pascal -> doug : 1
a pascal doug -> mcilroy : 1
pascal doug mcilroy -> realized : 1
doug mcilroy realized -> the : 1
mcilroy realized the -> same : 1
realized the same -> with : 1
the same with -> just : 1
same with just -> the : 1
with just the -> following : 1
just the following -> shell : 1
the following shell -> n : 1
following shell n -> tr : 1
shell n tr -> sor : 1
n tr sor -> t : 1
tr sor t -> uniq : 1
sor t uniq -> sor : 1
t uniq sor -> t : 1
uniq sor t -> sed : 1
sor t sed -> much : 1
t sed much -> for : 1
sed much for -> the : 1
much for the -> power : 1
for the power -> of : 1
the power of -> command : 1
power of command -> of : 1
of command of -> the : 1
command of the -> stream : 1
stream programming oop -> programs : 1
programming oop programs -> model : 1
oop programs model -> hierarchies : 1
programs model hierarchies -> and : 1
model hierarchies and -> processing : 1
hierarchies and processing -> hierarchies : 1
and processing hierarchies -> is : 1
processing hierarchies is -> mostly : 1
hierarchies is mostly -> a : 1
is mostly a -> difficult : 1
mostly a difficult -> process : 1
a difficult process -> compared : 1
difficult process compared -> to : 1
process compared to -> processing : 1
compared to processing -> a : 1
to processing a -> linear : 1
processing a linear -> in : 1
a linear in -> the : 1
linear in the -> case : 1
programming we can -> treat : 1
programming we can -> write : 1
programming we can -> filter : 1
treat the input -> as : 1
the input as -> a : 1
input as a -> stream : 1
stream of entities -> put : 1
of entities put -> into : 1
entities put into -> a : 1
put into a -> container : 1
into a container -> and : 1
a container and -> the : 1
container and the -> output : 1
and the output -> as : 1
the output as -> a : 1
output as a -> bag : 1
as a bag -> of : 1
a bag of -> without : 1
bag of without -> modifying : 1
of without modifying -> the : 1
without modifying the -> input : 1
without modifying the -> source : 1
modifying the input -> data : 1
the input data -> using : 1
input data using -> generic : 1
data using generic -> programming : 1
using generic programming -> we : 1
generic programming we -> can : 1
code to process -> some : 1
to process some -> advantages : 1
process some advantages -> of : 1
some advantages of -> this : 1
advantages of this -> model : 1
of this model -> programming : 1
this model programming -> simplifies : 1
model programming simplifies -> program : 1
programming simplifies program -> can : 1
simplifies program can -> support : 1
program can support -> lazy : 1
can support lazy -> evaluation : 1
support lazy evaluation -> and : 1
lazy evaluation and -> functional : 1
lazy evaluation and -> transformations : 1
evaluation and functional -> style : 1
and functional style -> are : 1
functional style are -> better : 1
style are better -> suited : 1
are better suited -> for : 1
for the concurrent -> programming : 1
the concurrent programming -> model : 1
concurrent programming model -> streams : 1
programming model streams -> are : 1
model streams are -> can : 1
streams are can -> compose : 1
are can compose -> functions : 1
can compose functions -> to : 1
compose functions to -> create : 1
to create functions -> to : 1
create functions to -> process : 1
functions to process -> facilitate : 1
to process facilitate -> the : 1
process facilitate the -> declarative : 1
facilitate the declarative -> programming : 1
the declarative programming -> can : 1
declarative programming can -> and : 1
programming can and -> transform : 1
can and transform -> data : 1
and transform data -> from : 1
transform data from -> different : 1
data from different -> decouple : 1
data from different -> sources : 1
from different decouple -> data : 1
different decouple data -> sources : 1
decouple data sources -> and : 1
data sources and -> the : 1
sources and the -> entities : 1
and the entities -> that : 1
the entities that -> process : 1
entities that process -> improve : 1
that process improve -> code : 1
process improve code -> can : 1
improve code can -> comprehend : 1
code can comprehend -> code : 1
can comprehend code -> can : 1
comprehend code can -> exploit : 1
code can exploit -> data : 1
can exploit data -> parallelism : 1
exploit data parallelism -> and : 1
data parallelism and -> task : 1
parallelism and task -> can : 1
and task can -> leverage : 1
task can leverage -> hundreds : 1
can leverage hundreds -> of : 1
leverage hundreds of -> stream : 1
hundreds of stream -> operators : 1
of stream operators -> to : 1
of stream operators -> ranked : 1
stream operators to -> process : 1
operators to process -> stream : 1
operators to process -> and : 1
to process stream -> programming : 1
process stream programming -> using : 1
the streams this -> we : 1
streams this we -> will : 1
will the topic -> of : 1
topic of stream -> programming : 1
of stream programming -> using : 1
of stream programming -> as : 1
using the public -> domain : 1
the public domain -> library : 1
public domain library -> written : 2
domain library written -> by : 1
domain library written -> over : 1
library written by -> jonah : 1
library written by -> kirk : 1
written by jonah -> library : 1
by jonah library -> is : 1
jonah library is -> hosted : 1
library is hosted -> the : 1
is hosted the -> api : 1
hosted the api -> documentation : 1
the api documentation -> is : 1
api documentation is -> available : 1
documentation is available -> an : 1
is available an -> introduction : 1
available an introduction -> has : 1
an introduction has -> been : 1
introduction has been -> given : 1
been given as -> from : 1
given as from -> the : 1
as from the -> library : 1
the library github -> is : 1
library github is -> a : 1
github is a -> library : 1
is a library -> that : 5
is a library -> for : 1
is a library -> and : 1
a library that -> provides : 1
a library that -> makes : 1
a library that -> enables : 1
a library that -> is : 1
a library that -> can : 1
library that provides -> lazy : 1
that provides lazy -> evaluation : 1
provides lazy evaluation -> and : 1
evaluation and transformations -> on : 1
and transformations on -> to : 1
transformations on to -> ease : 1
on to ease -> the : 1
ease the use -> of : 1
use of standard -> library : 1
of standard library -> containers : 1
standard library containers -> and : 1
library containers and -> supports : 1
containers and supports -> many : 1
and supports many -> common : 1
supports many common -> functional : 1
many common functional -> operations : 1
common functional operations -> such : 1
functional operations such -> as : 1
as and as -> well : 1
well as various -> other : 1
as various other -> useful : 1
various other useful -> operations : 1
other useful operations -> such : 1
useful operations such -> as : 1
such as various -> set : 1
as various set -> operations : 1
various set operations -> partial : 1
set operations partial -> and : 1
operations partial and -> adjacent : 1
partial and adjacent -> as : 1
and adjacent as -> well : 1
adjacent as well -> as : 1
well as many -> can : 1
as many can -> see : 1
many can see -> that : 1
can see that -> a : 1
can see that -> the : 1
can see that -> map : 1
see that a -> programmer : 1
a programmer who -> is : 1
programmer who is -> familiar : 1
who is familiar -> with : 1
is familiar with -> the : 1
with the template -> will : 1
the template will -> clearly : 1
template will clearly -> be : 1
will clearly be -> at : 1
clearly be at -> ease : 1
be at ease -> with : 1
at ease with -> this : 1
ease with this -> the : 1
this the stl -> containers : 1
the stl containers -> are : 1
stl containers are -> treated : 1
containers are treated -> stream : 1
are treated stream -> data : 1
treated stream data -> source : 1
stream data source -> the : 1
data source the -> stl : 1
source the stl -> algorithms : 1
the stl algorithms -> can : 1
stl algorithms can -> be : 1
algorithms can be -> on : 1
can be on -> the : 1
be on the -> stream : 1
on the stream -> data : 1
the stream data -> the : 1
stream data the -> library : 1
data the library -> uses : 1
the library uses -> functional : 1
library uses functional -> programming : 1
uses functional programming -> idioms : 1
functional programming idioms -> supported : 1
programming idioms supported -> by : 1
idioms supported by -> modern : 1
supported by modern -> and : 1
modern and also -> supports : 1
and also supports -> lazy : 1
also supports lazy -> the : 1
supports lazy the -> concept : 1
lazy the concept -> of : 1
the concept of -> lazy : 1
the concept of -> stream : 1
the concept of -> reactive : 1
concept of lazy -> evaluation : 1
of lazy evaluation -> is : 1
lazy evaluation is -> very : 1
evaluation is very -> significant : 1
is very significant -> as : 1
very significant as -> it : 1
significant as it -> is : 1
as it is -> the : 1
is the corner -> stone : 1
the corner stone -> of : 1
corner stone of -> functional : 1
stone of functional -> programming : 1
functional programming model -> and : 1
model and rx -> programming : 1
and rx programming -> there : 1
rx programming there -> are : 1
programming there are -> two : 1
programming there are -> some : 1
are two ways -> to : 1
two ways to -> evaluate : 1
ways to evaluate -> arguments : 1
to evaluate arguments -> to : 1
evaluate arguments to -> a : 1
arguments to a -> function : 1
a function they -> are : 1
function they are -> as : 1
they are as -> the : 1
they are as -> write : 1
are as the -> case : 1
are as the -> previous : 1
as the case -> of : 1
case of arguments -> are : 1
of arguments are -> evaluated : 1
arguments are evaluated -> in : 1
are evaluated in -> the : 1
evaluated in the -> before : 1
in the before -> being : 1
in the before -> getting : 1
the before being -> passed : 1
before being passed -> to : 1
being passed to -> the : 1
passed to the -> most : 1
passed to the -> which : 1
passed to the -> base : 1
passed to the -> once : 1
to the most -> conventional : 1
the most conventional -> programming : 1
most conventional programming -> languages : 1
conventional programming languages -> follow : 1
programming languages follow -> this : 1
languages follow this -> in : 1
follow this in -> the : 1
of the evaluation -> of : 2
the evaluation of -> the : 1
the evaluation of -> functions : 1
evaluation of the -> variables : 1
of the variables -> is : 1
the variables is -> deferred : 1
variables is deferred -> until : 1
is deferred until -> the : 1
deferred until the -> result : 1
until the result -> of : 1
of the computation -> is : 2
the computation is -> warranted : 1
the computation is -> based : 1
computation is warranted -> in : 1
is warranted in -> the : 1
warranted in the -> context : 1
context of the -> some : 1
context of the -> microsoft : 1
of the some -> functional : 1
the some functional -> programming : 1
some functional programming -> such : 1
functional programming such -> as : 1
programming such as -> and : 1
as and follow -> the : 1
follow the no -> in : 1
the no in -> functional : 1
no in functional -> programming : 1
functional programming most -> of : 1
programming most of -> the : 1
evaluation of functions -> is : 1
of functions is -> referentially : 1
functions is referentially -> transparent : 1
is referentially transparent -> invocation : 1
referentially transparent invocation -> of : 1
transparent invocation of -> the : 1
of the functions -> does : 1
of the functions -> using : 1
the functions does -> not : 1
functions does not -> produce : 1
does not produce -> we : 1
not produce we -> need : 1
produce we need -> to : 1
need to evaluate -> the : 1
the expression only -> once : 1
expression only once -> a : 1
only once a -> particular : 1
once a particular -> value : 1
a particular value -> as : 1
particular value as -> and : 1
value as and -> the : 1
and the result -> can : 1
the result can -> be : 1
result can be -> when : 1
can be when -> the : 1
be when the -> evaluation : 1
when the evaluation -> with : 1
the evaluation with -> the : 1
evaluation with the -> same : 1
the same function -> with : 1
same function with -> the : 1
function with the -> same : 1
the same arguments -> appears : 1
same arguments appears -> once : 1
arguments appears once -> again : 1
appears once again -> for : 1
once again for -> this : 1
again for this -> is : 1
for this is -> called : 1
is called lazy -> evaluation : 1
called lazy evaluation -> can : 1
lazy evaluation can -> be : 1
evaluation can be -> considered : 1
considered a coupled -> of : 1
a coupled of -> the : 1
coupled of the -> previously : 1
of the previously -> computed : 1
the previously computed -> the : 1
previously computed the -> programming : 1
computed the programming -> language : 1
does not provide -> support : 1
not provide support -> for : 1
provide support for -> lazy : 1
support for lazy -> evaluation : 1
for lazy evaluation -> of : 1
lazy evaluation of -> function : 1
evaluation of function -> parameters : 1
of function parameters -> by : 1
function parameters by -> but : 1
parameters by but -> can : 1
by but can -> be : 1
but can be -> emulated : 1
can be emulated -> using : 1
be emulated using -> different : 1
emulated using different -> techniques : 1
using different techniques -> such : 1
different techniques such -> as : 1
such as variadic -> templates : 1
as variadic templates -> and : 1
templates and expression -> simple : 1
and expression simple -> stream : 1
expression simple stream -> get : 1
simple stream get -> started : 1
stream get started -> with : 1
started with the -> write : 1
with the write -> a : 1
write a to -> generate : 1
a to generate -> a : 1
generate a stream -> of : 1
stream of numbers -> and : 2
stream of numbers -> range : 1
of numbers and -> compute : 1
of numbers and -> passes : 1
numbers and compute -> the : 1
and compute the -> square : 1
compute the square -> of : 1
the square of -> the : 1
square of the -> first : 1
the first ten -> using : 1
first ten using -> namespace : 1
ten using namespace -> using : 1
using namespace using -> namespace : 40
namespace using namespace -> using : 25
namespace using namespace -> int : 3
namespace using namespace -> double : 1
namespace using namespace -> struct : 2
namespace using namespace -> functors : 1
namespace using namespace -> simpleserver : 1
namespace using namespace -> include : 4
namespace using namespace -> define : 1
namespace using namespace -> the : 1
namespace using namespace -> application : 1
namespace int generate -> a : 1
int generate a -> series : 1
int generate a -> range : 2
generate a series -> of : 2
series of value -> map : 1
of value map -> a : 1
value map a -> take : 1
map a take -> first : 1
a take first -> ten : 1
take first ten -> items : 1
first ten items -> sum : 1
ten items sum -> aggregate : 1
items sum aggregate -> int : 1
sum aggregate int -> total : 1
aggregate int total -> return : 1
int total return -> x : 1
total return x -> apply : 1
return x apply -> square : 1
x apply square -> on : 1
apply square on -> each : 1
square on each -> elements : 1
on each elements -> first : 1
each elements first -> ten : 1
elements first ten -> sum : 1
first ten sum -> the : 1
ten sum the -> stream : 1
sum the stream -> contents : 1
the stream contents -> print : 1
stream contents print -> the : 1
contents print the -> result : 1
print the result -> cout : 1
the result cout -> total : 1
result cout total -> previous : 1
cout total previous -> code : 1
total previous code -> snippet : 1
code snippet generates -> a : 1
snippet generates a -> list : 1
generates a list -> of : 1
of values and -> the : 1
of values and -> an : 1
values and the -> generated : 1
and the generated -> values : 1
the generated values -> will : 1
generated values will -> be : 1
values will be -> transformed : 1
be transformed using -> the : 1
transformed using the -> map : 1
using the map -> function : 1
map function this -> computing : 1
function this computing -> the : 1
this computing the -> when : 1
computing the when -> ten : 1
the when ten -> elements : 1
when ten elements -> are : 1
ten elements are -> assembled : 1
elements are assembled -> in : 1
are assembled in -> the : 1
assembled in the -> we : 1
the we call -> the : 1
call the operator -> sum : 1
the operator sum -> on : 1
operator sum on -> the : 1
sum on the -> values : 1
on the values -> using : 1
the values using -> the : 1
the stream that -> we : 1
stream that we -> understand : 1
that we understand -> the : 1
we understand the -> basics : 1
understand the basics -> of : 1
the basics of -> stream : 1
basics of stream -> programming : 1
stream programming as -> envisaged : 1
programming as envisaged -> by : 1
as envisaged by -> the : 1
envisaged by the -> stream : 1
by the stream -> write : 1
the stream write -> a : 1
stream write a -> piece : 1
code that computes -> the : 1
that computes the -> average : 1
computes the average -> of : 1
the average of -> numbers : 2
the average of -> a : 1
average of numbers -> stored : 1
average of numbers -> emitted : 1
of numbers stored -> in : 1
numbers stored in -> using : 1
stored in using -> namespace : 1
in using namespace -> using : 1
int a make -> a : 1
a make a -> stream : 1
make a stream -> and : 1
a stream and -> reduce : 1
a stream and -> application : 1
stream and reduce -> auto : 1
and reduce auto -> val : 1
reduce auto val -> compute : 1
auto val compute -> the : 1
val compute the -> arithematic : 1
compute the arithematic -> average : 1
the arithematic average -> cout : 1
arithematic average cout -> previous : 1
average cout previous -> code : 1
cout previous code -> snippet : 1
snippet creates a -> stream : 1
snippet creates a -> set : 1
creates a stream -> out : 1
a stream out -> of : 2
stream out of -> and : 1
stream out of -> we : 1
out of and -> applies : 1
of and applies -> a : 1
and applies a -> reduction : 1
applies a reduction -> process : 1
a reduction process -> using : 1
reduction process using -> the : 1
process using the -> it : 1
using the it -> is : 1
the it is -> tantamount : 1
the it is -> better : 1
it is tantamount -> to : 1
is tantamount to -> aggregating : 1
tantamount to aggregating -> the : 1
to aggregating the -> values : 1
aggregating the values -> in : 1
the values in -> the : 2
values in the -> we : 1
values in the -> order : 1
values in the -> past : 1
values in the -> dependent : 1
values in the -> and : 1
the we divide -> the : 1
we divide the -> aggregated : 1
divide the aggregated -> value : 1
the aggregated value -> with : 1
aggregated value with -> by : 1
value with by -> the : 1
with by the -> of : 1
the of elements -> in : 1
elements in stl -> and : 1
in stl and -> the : 1
the stream library -> can : 1
stream library can -> with : 1
library can with -> the : 1
can with the -> stl : 1
with the stl -> the : 1
the stl the -> following : 1
stl the following -> code : 1
code snippets will -> map : 1
snippets will map -> a : 1
will map a -> function : 1
map a function -> on : 1
a function on -> and : 1
a function on -> each : 1
function on and -> resultant : 1
on and resultant -> data : 1
and resultant data -> is : 1
resultant data is -> to : 1
data is to -> a : 1
is to a -> vector : 1
to a vector -> using : 1
vector using namespace -> using : 1
using namespace double -> double : 1
namespace double double -> a : 1
a return int -> values : 1
return int values -> outputs : 1
int values outputs -> a : 1
values outputs a -> return : 1
outputs a return -> pn : 1
a return pn -> outputs : 1
return pn outputs -> cout : 1
pn outputs cout -> pn : 1
outputs cout pn -> previous : 1
cout pn previous -> code : 1
pn previous code -> snippet : 1
code snippet converts -> into : 1
snippet converts into -> a : 1
converts into a -> applies : 1
into a applies -> the : 1
a applies the -> square : 1
applies the square -> and : 1
the square and -> converts : 1
square and converts -> the : 1
and converts the -> stuff : 1
converts the stuff -> back : 1
the stuff back -> to : 1
stuff back to -> after : 1
back to after -> the : 1
to after the -> vector : 1
after the vector -> is : 1
the vector is -> iterated : 1
vector is iterated -> to : 1
is iterated to -> print : 1
is iterated to -> do : 1
iterated to print -> the : 1
print the the -> library : 1
the the library -> documentation : 1
the the library -> manages : 1
the the library -> can : 1
the library documentation -> is : 1
library documentation is -> very : 1
documentation is very -> elaborate : 1
is very elaborate -> and : 1
very elaborate and -> contains : 1
elaborate and contains -> lot : 1
and contains lot -> of : 1
contains lot of -> code : 1
lot of code -> you : 1
of code you -> can : 1
code you can -> use : 1
can use to -> write : 1
use to write -> code : 1
write code for -> consult : 1
code for consult -> the : 1
for consult the -> api : 1
consult the api -> available : 1
the api available -> at : 1
api available at -> word : 1
available at word -> about : 1
at word about -> the : 1
the streams library -> is : 1
streams library is -> a : 1
library is a -> piece : 1
library is a -> library : 1
library is a -> a : 1
is a piece -> of : 1
piece of software -> with : 1
piece of software -> called : 1
of software with -> an : 1
software with an -> intuitive : 1
with an intuitive -> programming : 1
an intuitive programming -> any : 1
an intuitive programming -> of : 1
intuitive programming any -> programmer : 1
programming any programmer -> who : 1
any programmer who -> has : 1
programmer who has -> worked : 1
who has worked -> with : 1
worked with a -> functional : 1
with a functional -> programming : 1
a functional programming -> and : 1
programming and streams -> programming : 1
and streams programming -> will : 1
streams programming will -> really : 1
programming will really -> be : 1
will really be -> comfortable : 1
really be comfortable -> with : 1
comfortable with it -> in : 1
it in a -> matter : 1
it in a -> local : 1
it in a -> reactive : 1
it in a -> graceful : 1
in a matter -> of : 1
a matter of -> those : 1
matter of those -> of : 1
of those of -> you : 1
you who are -> familiar : 1
who are familiar -> with : 1
familiar with stl -> will : 1
with stl will -> also : 1
stl will also -> find : 1
will also find -> the : 1
also find the -> library : 1
find the library -> to : 1
the library to -> be : 1
the library to -> access : 1
the library to -> issue : 1
library to be -> very : 1
to be very -> intuitive : 1
be very intuitive -> as : 1
very intuitive as -> from : 1
intuitive as from -> a : 1
as from a -> programming : 1
from a programming -> model : 1
from a programming -> interface : 1
model the api -> can : 1
the api can -> be : 1
api can be -> divided : 1
be divided methods -> intermediate : 1
divided methods intermediate -> operators : 1
methods intermediate operators -> immutable : 1
intermediate operators immutable -> intermediate : 1
operators immutable intermediate -> previously : 1
immutable intermediate previously -> mentioned : 1
intermediate previously mentioned -> of : 1
previously mentioned of -> the : 1
mentioned of the -> library : 1
of the library -> sheds : 1
of the library -> much : 1
of the library -> itself : 1
of the library -> can : 2
of the library -> is : 2
of the library -> provides : 1
the library sheds -> light : 1
library sheds light -> on : 1
sheds light on -> the : 1
light on the -> each : 1
on the each -> of : 1
the each of -> the : 1
of the aspects -> of : 1
the aspects of -> this : 1
aspects of this -> wonderful : 1
of this wonderful -> have : 1
of this wonderful -> library : 1
this wonderful have -> got : 1
wonderful have got -> some : 1
have got some -> kind : 1
got some kind -> of : 1
kind of understanding -> about : 1
of understanding about -> the : 1
understanding about the -> working : 1
about the working -> stream : 1
the working stream -> programming : 1
working stream programming -> when : 1
stream programming when -> we : 1
programming when we -> process : 1
when we process -> events : 1
we process events -> as : 1
process events as -> it : 1
events as it -> can : 1
as it can -> be : 1
be as event -> stream : 1
as event stream -> in : 1
stream in the -> programming : 1
the programming architecture -> is : 1
programming architecture is -> being : 1
architecture is being -> projected : 1
is being projected -> as : 1
being projected as -> a : 1
projected as a -> better : 1
as a better -> model : 1
a better model -> for : 1
better model for -> a : 1
model for a -> wonderful : 1
for a wonderful -> example : 1
a wonderful example -> of : 2
wonderful example of -> software : 1
wonderful example of -> how : 1
example of software -> that : 1
of software that -> relies : 1
software that relies -> on : 1
that relies on -> event : 1
that relies on -> streamulus : 1
relies on event -> stream : 1
on event stream -> programming : 1
stream programming is -> version : 1
programming is version -> control : 1
is version control -> in : 1
version control in -> a : 1
control in a -> version : 1
in a version -> control : 1
a version control -> everything : 1
version control everything -> is : 1
control everything is -> treated : 1
everything is treated -> as : 1
is treated as -> an : 1
treated as an -> typical : 1
as an typical -> examples : 1
an typical examples -> include : 1
typical examples include -> checking : 1
examples include checking -> out : 1
include checking out -> the : 1
checking out the -> and : 1
out the and -> of : 1
the and of -> event : 1
and of event -> stream : 1
event stream events -> stream : 1
stream events stream -> and : 1
events stream and -> systems : 1
stream and systems -> has : 1
and systems has -> many : 1
systems has many -> advantages : 1
has many advantages -> compared : 1
has many advantages -> over : 1
many advantages compared -> to : 1
advantages compared to -> the : 1
to the traditional -> event : 1
the traditional event -> programming : 1
traditional event programming -> some : 1
event programming some -> of : 1
programming some of -> the : 1
the key advantages -> source : 1
key advantages source -> and : 1
advantages source and -> event : 1
event sinks are -> not : 1
sinks are not -> sinks : 1
are not sinks -> can : 1
not sinks can -> process : 1
sinks can process -> events : 1
can process events -> without : 1
process events without -> bothering : 1
events without bothering -> with : 1
without bothering with -> event : 1
bothering with event -> can : 1
with event can -> apply : 1
event can apply -> stream : 1
can apply stream -> processing : 1
apply stream processing -> operators : 1
stream processing operators -> to : 1
processing operators to -> process : 1
to process and -> filter : 1
process and filter -> transformation : 1
and filter transformation -> and : 1
filter transformation and -> filtering : 1
and filtering can -> be : 1
filtering can be -> done : 1
be done at -> the : 1
at the aggregation -> events : 1
the aggregation events -> can : 1
aggregation events can -> be : 1
events can be -> propagated : 1
events can be -> received : 1
events can be -> constructed : 1
can be propagated -> through : 1
can be propagated -> to : 1
be propagated through -> a : 1
propagated through a -> processing : 1
through a processing -> can : 1
a processing can -> be : 1
processing can be -> parallelized : 1
can be parallelized -> easily : 1
be parallelized easily -> parallelism : 1
parallelized easily parallelism -> streamulus : 1
easily parallelism streamulus -> library : 1
parallelism streamulus library -> and : 1
programming streamulus from -> irit : 1
streamulus from irit -> is : 1
from irit is -> a : 1
irit is a -> library : 1
library that makes -> the : 1
that makes the -> programming : 1
makes the programming -> of : 1
the programming of -> event : 1
programming of event -> streams : 1
event streams easier -> with : 1
streams easier with -> a : 1
easier with a -> programming : 1
with a programming -> which : 1
a programming which -> implements : 1
programming which implements -> embedded : 1
which implements embedded -> to : 1
implements embedded to -> understand : 1
embedded to understand -> the : 1
understand the programming -> inspect : 1
understand the programming -> model : 2
the programming inspect -> a : 1
programming inspect a -> program : 1
inspect a program -> that : 1
a program that -> streams : 1
a program that -> clarifies : 1
a program that -> will : 3
a program that -> demonstrates : 1
a program that -> uses : 1
program that streams -> data : 1
that streams data -> into : 1
streams data into -> a : 1
data into a -> class : 1
data into a -> linear : 1
into a class -> that : 1
class that aggregates -> received : 1
that aggregates received -> using : 1
aggregates received using -> namespace : 1
received using namespace -> using : 1
using namespace struct -> print : 1
using namespace struct -> employee : 1
namespace struct print -> static : 1
struct print static -> double : 1
print static double -> t : 1
static double t -> const : 1
double t const -> return : 1
t const return -> double : 1
t const return -> preceding : 1
const return double -> preceding : 1
return double preceding -> functor : 1
double preceding functor -> just : 1
preceding functor just -> accumulates : 1
functor just accumulates -> the : 1
just accumulates the -> value : 1
accumulates the value -> passed : 1
accumulates the value -> into : 1
the value passed -> into : 1
value passed into -> a : 1
passed into a -> static : 1
into a static -> for : 1
a static for -> each : 1
static for each -> invocation : 1
for each invocation -> of : 1
each invocation of -> the : 1
the function by -> the : 1
function by the -> template : 1
by the template -> the : 1
the template the -> value : 1
the template the -> function : 1
template the value -> accumulated : 1
the value accumulated -> so : 1
value accumulated so -> far : 1
accumulated so far -> will : 1
so far will -> be : 1
far will be -> printed : 1
will be printed -> to : 3
will be printed -> on : 1
be printed to -> the : 4
to the more -> on : 1
the more on -> this : 1
more on this -> can : 1
more on this -> below : 1
on this can -> be : 1
be understood by -> going : 1
understood by going -> through : 1
by going through -> the : 1
by going through -> a : 1
through the listing -> as : 1
the listing as -> using : 1
listing as using -> namespace : 1
as using namespace -> define : 1
using namespace define -> an : 1
using namespace define -> a : 1
namespace define an -> input : 1
define an input -> stream : 2
an input stream -> of : 2
input stream of -> whose : 2
stream of whose -> name : 2
of whose name -> is : 2
whose name is -> s : 2
name is s -> true : 1
name is s -> false : 1
is s true -> verbose : 1
s true verbose -> construct : 1
true verbose construct -> a : 1
verbose construct a -> streamulus : 2
construct a streamulus -> instance : 2
a streamulus instance -> streamulus : 2
streamulus instance streamulus -> create : 1
streamulus instance streamulus -> define : 1
instance streamulus create -> a : 1
streamulus create a -> stream : 1
create a stream -> using : 1
create a stream -> out : 1
a stream using -> the : 1
stream using the -> template : 1
stream using the -> all : 1
stream using the -> and : 1
stream using the -> we : 1
stream using the -> range : 1
using the template -> the : 1
template the function -> expects : 1
function expects a -> parameter : 1
expects a parameter -> that : 1
a parameter that -> determines : 1
parameter that determines -> whether : 1
that determines whether -> logs : 1
determines whether logs -> should : 1
whether logs should -> be : 1
logs should be -> printed : 1
should be printed -> to : 1
to the by -> giving : 1
the by giving -> the : 1
giving the second -> parameter : 1
the second parameter -> as : 1
second parameter as -> we : 1
parameter as we -> can : 1
we can turn -> off : 1
can turn off -> verbose : 1
turn off verbose -> we : 1
off verbose we -> need : 1
verbose we need -> to : 1
of the streamulus -> engine : 1
the streamulus engine -> to : 1
the streamulus engine -> does : 1
streamulus engine to -> orchestrate : 1
engine to orchestrate -> the : 1
to orchestrate the -> data : 1
orchestrate the data -> the : 1
data the streamulus -> engine : 1
streamulus engine does -> a : 1
engine does a -> topological : 1
does a topological -> sort : 1
a topological sort -> of : 1
a topological sort -> on : 3
a topological sort -> to : 1
a topological sort -> can : 1
topological sort of -> the : 1
sort of the -> stream : 1
the stream expressions -> to : 1
stream expressions to -> determine : 1
expressions to determine -> the : 1
to determine the -> change : 1
to determine the -> linear : 1
to determine the -> execution : 1
determine the change -> propagation : 1
the change propagation -> for : 1
the change propagation -> by : 1
change propagation for -> each : 1
propagation for each -> element : 1
for each element -> of : 1
each element of -> the : 3
of the aggregate -> the : 1
the aggregate the -> received : 1
aggregate the received -> value : 1
the received value -> into : 1
received value into -> a : 1
into a running -> print : 1
a running print -> it : 1
running print it -> use : 1
print it use -> the : 1
it use the -> strop : 1
use the strop -> to : 1
the strop to -> serialize : 1
strop to serialize -> calls : 1
to serialize calls -> to : 1
serialize calls to -> the : 1
to the print -> functor : 1
the print functor -> we : 1
print functor we -> just : 1
functor we just -> we : 1
we just we -> can : 1
just we can -> create : 1
can create our -> own : 1
create our own -> stream : 1
our own stream -> and : 1
own stream and -> usually : 1
stream and usually -> streamify : 1
and usually streamify -> would : 1
usually streamify would -> suffice : 1
streamify would suffice -> for : 1
would suffice for -> streamfiy : 1
suffice for streamfiy -> creates : 1
for streamfiy creates -> a : 1
streamfiy creates a -> single : 1
creates a single -> event : 1
a single event -> functor : 1
single event functor -> and : 1
event functor and -> a : 1
functor and a -> insert : 1
and a insert -> data : 1
a insert data -> to : 1
insert data to -> the : 1
to the input -> stream : 1
the input stream -> int : 1
the input stream -> and : 1
the input stream -> based : 1
input stream int -> return : 1
stream int return -> previous : 1
int return previous -> code : 2
return previous code -> snippets : 1
return previous code -> snippet : 1
return previous code -> pings : 1
return previous code -> creates : 1
previous code snippets -> emit : 1
previous code snippets -> bind : 1
previous code snippets -> demonstrate : 1
code snippets emit -> some : 1
snippets emit some -> values : 1
emit some values -> into : 1
some values into -> the : 2
values into the -> we : 2
values into the -> source : 1
would be able -> to : 1
able to see -> the : 1
see the accumulated -> sum : 1
the accumulated sum -> to : 1
accumulated sum to -> be : 1
sum to be -> printed : 1
to be printed -> on : 1
be printed on -> the : 1
be printed on -> to : 1
printed on the -> console : 1
the console three -> in : 1
console three in -> the : 1
three in the -> main : 1
the main we -> invoke : 1
the main we -> are : 2
main we invoke -> the : 1
we invoke the -> function : 1
we invoke the -> when : 1
we invoke the -> composition : 1
function to trigger -> all : 1
to trigger all -> the : 1
trigger all the -> that : 1
all the that -> we : 1
the that we -> have : 1
we have learned -> how : 2
we have learned -> about : 1
we have learned -> so : 1
have learned how -> the : 1
have learned how -> to : 3
learned how the -> streamulus : 1
how the streamulus -> systems : 1
how the streamulus -> library : 1
the streamulus systems -> work : 1
streamulus systems work -> with : 1
systems work with -> a : 1
with a simple -> write : 1
with a simple -> using : 1
a simple write -> a : 1
simple write a -> program : 1
simple write a -> simple : 1
program that clarifies -> the : 1
that clarifies the -> semantics : 1
clarifies the semantics -> of : 1
the library much -> the : 1
library much the -> following : 1
much the following -> program : 1
following program streams -> data : 1
program streams data -> through : 1
streams data through -> a : 1
data through a -> host : 1
through a host -> of : 1
a host of -> single : 1
host of single -> argument : 1
of single argument -> functors : 1
single argument functors -> to : 1
argument functors to -> demonstrate : 1
functors to demonstrate -> the : 1
demonstrate the functioning -> of : 1
the functioning of -> the : 1
functioning of the -> we : 1
the we also -> use : 1
the we also -> mentioned : 1
the we also -> covered : 1
the we also -> learned : 1
the we also -> retrieve : 1
we also use -> stream : 1
also use stream -> expressions : 1
use stream expressions -> liberally : 1
stream expressions liberally -> in : 1
expressions liberally in -> the : 1
liberally in the -> using : 1
in the using -> namespace : 1
the using namespace -> using : 1
the using namespace -> active : 1
using namespace functors -> for : 1
namespace functors for -> and : 1
functors for and -> halfving : 1
for and halfving -> values : 1
and halfving values -> struct : 1
halfving values struct -> twice : 1
values struct twice -> t : 1
struct twice t -> const : 1
twice t const -> struct : 1
t const struct -> neg : 1
const struct neg -> t : 1
struct neg t -> return : 1
neg t return -> struct : 1
t return struct -> t : 1
return struct t -> const : 1
struct t const -> return : 1
const return preceding -> set : 1
return preceding set -> of : 1
preceding set of -> functors : 1
set of functors -> in : 1
of functors in -> the : 1
functors in the -> functor : 1
in the functor -> doubles : 1
the functor doubles -> the : 1
functor doubles the -> the : 1
doubles the the -> functor : 1
the the functor -> flips : 1
the functor flips -> the : 1
functor flips the -> sign : 1
flips the sign -> of : 1
the sign of -> the : 1
sign of the -> and : 1
and the functor -> scales : 1
the functor scales -> the : 1
functor scales the -> value : 1
scales the value -> by : 1
the value by -> to : 1
value by to -> halve : 1
by to halve -> the : 1
to halve the -> value : 1
halve the value -> of : 1
of the t -> value : 1
the t value -> return : 1
t value return -> struct : 1
value return struct -> const : 1
return struct const -> ss : 1
struct const ss -> return : 1
const ss return -> the : 1
ss return the -> preceding : 1
the preceding two -> function : 1
the preceding two -> helper : 1
preceding two function -> objects : 1
two function objects -> work : 1
function objects work -> is : 1
objects work is -> first : 1
work is first -> one : 1
is first one -> just : 1
first one just -> outputs : 1
one just outputs -> the : 1
just outputs the -> value : 1
outputs the value -> to : 1
to the converts -> the : 1
the converts the -> argument : 1
converts the argument -> to : 1
to the string -> using : 1
the string using -> the : 1
string using the -> define : 1
string using the -> retrieve : 1
using the define -> an : 1
the define an -> input : 1
is s false -> verbose : 1
s false verbose -> construct : 1
false verbose construct -> a : 1
instance streamulus define -> a : 1
streamulus define a -> data : 1
define a data -> flow : 1
a data flow -> graph : 1
a data flow -> computation : 1
data flow graph -> for : 1
data flow graph -> dormant : 1
flow graph for -> stream : 1
graph for stream -> based : 1
for stream based -> computation : 1
stream based computation -> ingest : 1
based computation ingest -> data : 1
computation ingest data -> into : 1
ingest data into -> the : 1
the stream for -> created : 1
stream for created -> to : 1
for created to -> process : 1
created to process -> a : 1
process a after -> instantiating : 1
a after instantiating -> the : 1
after instantiating the -> object : 1
instantiating the object -> we : 1
the object we -> glued : 1
object we glued -> a : 1
we glued a -> series : 1
glued a series -> of : 1
series of functors -> through : 1
of functors through -> a : 1
functors through a -> stream : 1
through a stream -> the : 1
a stream the -> operation : 1
stream the operation -> can : 1
the operation can -> be : 1
operation can be -> considered : 1
considered a kind -> of : 1
a kind of -> functional : 1
a kind of -> prerequisite : 1
kind of functional -> composition : 1
of functional composition -> with : 1
functional composition with -> a : 1
composition with a -> single : 1
with a single -> argument : 1
a single argument -> after : 1
single argument after -> setting : 1
argument after setting -> up : 1
after setting up -> the : 1
setting up the -> we : 1
up the we -> injected : 1
the we injected -> data : 1
we injected data -> to : 1
injected data to -> the : 1
to the stream -> using : 3
to the stream -> processing : 1
the stream using -> the : 3
using the all -> action : 1
the all action -> return : 1
all action return -> streamulus : 1
action return streamulus -> a : 1
return streamulus a -> peek : 1
into its library -> basically : 1
its library basically -> creates : 1
library basically creates -> a : 1
basically creates a -> change : 1
creates a change -> propagation : 1
a change propagation -> graph : 1
change propagation graph -> to : 1
propagation graph to -> ease : 1
graph to ease -> stream : 1
to ease stream -> we : 1
ease stream we -> can : 1
stream we can -> treat : 1
treat the node -> of : 1
the node of -> a : 1
of a graph -> as : 1
a graph as -> and : 1
graph as and -> the : 1
and the edges -> as : 1
the edges as -> buffers : 1
edges as buffers -> that : 1
as buffers that -> take : 1
buffers that take -> the : 1
that take the -> data : 1
take the data -> from : 1
the data from -> one : 1
the data from -> the : 1
the data from -> a : 1
data from one -> node : 1
from one node -> to : 1
one node to -> almost : 1
node to almost -> all : 1
to almost all -> data : 1
almost all data -> flow : 1
all data flow -> systems : 1
data flow systems -> follow : 1
flow systems follow -> the : 1
systems follow the -> same : 1
same the library -> helps : 1
the library helps -> us : 1
library helps us -> to : 1
us to build -> a : 1
to build a -> graph : 1
to build a -> widget : 1
build a graph -> of : 1
a graph of -> dependent : 1
graph of dependent -> which : 1
of dependent which -> help : 1
dependent which help -> us : 1
which help us -> propagate : 1
help us propagate -> the : 1
us propagate the -> changes : 1
propagate the changes -> to : 1
the changes to -> child : 1
changes to child -> the : 1
to child the -> order : 1
child the order -> in : 1
in which variables -> should : 1
which variables should -> be : 1
variables should be -> updated : 1
should be updated -> will : 1
be updated will -> be : 1
updated will be -> defined : 1
will be defined -> by : 1
be defined by -> doing : 1
defined by doing -> a : 1
by doing a -> topological : 2
doing a topological -> sort : 2
topological sort on -> the : 3
sort on the -> graph : 3
on the graph -> is : 1
on the graph -> will : 1
on the graph -> data : 1
the graph is -> a : 1
graph is a -> data : 1
is a data -> structure : 1
data structure where -> a : 1
structure where a -> set : 1
where a set -> of : 1
set of dependent -> entities : 1
of dependent entities -> is : 1
dependent entities is -> represented : 1
entities is represented -> as : 1
is represented as -> nodes : 1
represented as nodes -> and : 1
as nodes and -> their : 1
nodes and their -> relationship : 1
and their relationship -> between : 1
their relationship between -> in : 1
relationship between in -> computer : 1
between in computer -> especially : 1
in computer especially -> when : 1
computer especially when -> it : 1
especially when it -> comes : 1
comes to scheduling -> and : 1
to scheduling and -> analyzing : 1
scheduling and analyzing -> a : 1
and analyzing a -> particular : 1
analyzing a particular -> version : 1
a particular version -> of : 1
particular version of -> called : 1
version of called -> directed : 1
of called directed -> acyclic : 1
called directed acyclic -> is : 1
directed acyclic is -> preferred : 1
acyclic is preferred -> for : 1
is preferred for -> its : 1
preferred for its -> unique : 1
for its unique -> a : 1
its unique a -> dag : 1
unique a dag -> is : 1
a dag is -> a : 1
dag is a -> directed : 1
is a directed -> graph : 1
a directed graph -> without : 1
directed graph without -> we : 1
graph without we -> can : 1
without we can -> perform : 1
we can perform -> an : 1
can perform an -> operation : 1
perform an operation -> called : 1
an operation called -> a : 1
operation called a -> topological : 1
called a topological -> sort : 1
topological sort to -> determine : 1
sort to determine -> the : 1
determine the linear -> order : 1
the linear order -> in : 1
linear order in -> which : 1
in which the -> entities : 1
in which the -> input : 1
which the entities -> are : 1
the entities are -> the : 1
entities are the -> topological : 1
are the topological -> sorting : 1
the topological sorting -> can : 1
topological sorting can -> only : 1
sorting can only -> be : 1
only be performed -> on : 1
be performed on -> a : 1
performed on a -> dag : 1
on a dag -> and : 1
a dag and -> they : 1
dag and they -> are : 1
they are not -> in : 1
following we can -> find : 1
we can find -> multiple : 1
can find multiple -> topological : 1
find multiple topological -> streamulus : 1
multiple topological streamulus -> a : 1
multiple topological streamulus -> engine : 1
topological streamulus a -> look : 1
into expression will -> take : 1
expression will take -> a : 1
at how processes -> expressions : 1
how processes expressions -> using : 1
processes expressions using -> a : 1
expressions using a -> simple : 1
using a simple -> stream : 1
using a simple -> label : 1
a simple stream -> x : 1
simple stream x -> expression : 1
stream x expression -> will : 1
x expression will -> produce : 1
expression will produce -> the : 1
produce the following -> the : 1
produce the following -> we : 1
following the strop -> stands : 1
the strop stands -> for : 1
strop stands for -> stream : 1
stands for stream -> operators : 1
for stream operators -> and : 1
stream operators and -> each : 1
operators and each -> of : 1
and each of -> the : 1
of the nodes -> is : 1
the nodes is -> organized : 1
nodes is organized -> as : 1
is organized as -> a : 2
organized as a -> the : 1
organized as a -> matrix : 1
as a the -> node : 1
a the node -> has : 1
the node has -> been : 1
node has been -> labeled : 1
has been labeled -> a : 1
been labeled a -> topological : 1
labeled a topological -> sort : 1
the graph will -> be : 1
graph will be -> done : 1
be done to -> determine : 1
done to determine -> the : 1
determine the execution -> the : 1
the execution the -> following : 1
the execution the -> pattern : 1
execution the following -> diagram : 1
the following diagram -> shows : 1
following diagram shows -> a : 1
diagram shows a -> topological : 1
shows a topological -> sort : 1
topological sort can -> have : 1
sort can have -> multiple : 1
can have multiple -> topological : 1
can have multiple -> operator : 1
have multiple topological -> streamulus : 1
topological streamulus engine -> walks : 1
topological streamulus engine -> performs : 1
streamulus engine walks -> through : 1
engine walks through -> the : 1
through the graph -> to : 1
the graph to -> find : 1
graph to find -> out : 1
to find out -> the : 1
find out the -> order : 1
out the order -> in : 1
in which stream -> operators : 1
which stream operators -> have : 1
stream operators have -> to : 1
operators have to -> be : 1
have to be -> applied : 1
have to be -> retained : 1
to be applied -> on : 1
on the data -> propagating : 1
the data propagating -> through : 1
data propagating through -> the : 1
data propagating through -> a : 1
propagating through the -> the : 1
through the the -> label : 1
through the the -> library : 1
through the the -> function : 1
the the label -> stands : 1
the label stands -> for : 1
label stands for -> after : 1
stands for after -> topological : 1
for after topological -> a : 1
after topological a -> linear : 1
topological a linear -> list : 1
a linear list -> of : 1
a linear list -> class : 1
linear list of -> stream : 1
list of stream -> operators : 1
stream operators ranked -> by : 1
operators ranked by -> topological : 1
ranked by topological -> order : 1
by topological order -> will : 1
topological order will -> be : 1
be the execution -> engine : 1
the execution engine -> will : 1
execution engine will -> execute : 1
engine will execute -> the : 1
will execute the -> code : 1
execute the code -> in : 1
code in topological -> streamulus : 1
in topological streamulus -> engine : 1
streamulus engine performs -> its : 1
engine performs its -> magic : 1
performs its magic -> using : 1
its magic using -> the : 1
magic using the -> boost : 1
using the boost -> proto : 1
the boost proto -> the : 1
boost proto the -> latter : 1
proto the latter -> manages : 1
the latter manages -> expression : 1
latter manages expression -> trees : 1
manages expression trees -> for : 1
expression trees for -> the : 1
trees for the -> streamulus : 1
for the streamulus -> to : 1
the streamulus to -> really : 1
streamulus to really -> go : 1
to really go -> through : 1
really go through -> the : 1
through the source -> code : 1
source code of -> the : 2
source code of -> this : 1
code of the -> you : 1
code of the -> library : 1
of the you -> need : 1
of the you -> can : 1
the you need -> to : 1
comfortable with template -> meta : 1
with template meta -> especially : 1
template meta especially -> expression : 1
meta especially expression -> meta : 1
especially expression meta -> programming : 1
expression meta programming -> is : 1
meta programming is -> a : 1
a technique where -> we : 1
technique where we -> write : 1
where we write -> code : 1
we write code -> to : 1
to generate or -> transform : 1
generate or transform -> source : 1
or transform source -> it : 1
transform source it -> turned : 1
source it turned -> out : 1
it turned out -> that : 1
turned out that -> the : 1
out that the -> template : 1
that the template -> mechanism : 1
the template mechanism -> was : 1
template mechanism was -> turing : 1
mechanism was turing -> complete : 1
was turing complete -> by : 1
turing complete by -> erwin : 1
complete by erwin -> unruh : 1
by erwin unruh -> in : 1
erwin unruh in -> the : 1
unruh in the -> year : 1
in the year -> spreadsheet : 1
the year spreadsheet -> library : 1
year spreadsheet library -> electronic : 1
spreadsheet library electronic -> spreadsheet : 1
library electronic spreadsheet -> is : 1
electronic spreadsheet is -> often : 1
spreadsheet is often -> touted : 1
is often touted -> as : 1
often touted as -> the : 1
touted as the -> quintessential : 1
as the quintessential -> example : 1
the quintessential example -> of : 1
quintessential example of -> a : 1
a reactive in -> a : 1
reactive in a -> a : 1
in a a -> page : 1
a a page -> is : 1
a page is -> organized : 1
page is organized -> as : 1
as a matrix -> of : 1
a matrix of -> when : 1
matrix of when -> is : 1
of when is -> a : 1
when is a -> all : 1
is a all -> dependent : 1
a all dependent -> cells : 1
all dependent cells -> will : 1
dependent cells will -> be : 1
cells will be -> to : 1
will be to -> reflect : 1
be to reflect -> the : 1
reflect the this -> happens : 1
the this happens -> for : 1
this happens for -> every : 1
happens for every -> in : 1
for every in -> modelling : 1
every in modelling -> a : 1
in modelling a -> spreadsheet : 1
modelling a spreadsheet -> is : 1
a spreadsheet is -> if : 1
a spreadsheet is -> a : 1
spreadsheet is if -> you : 1
is if you -> have : 1
you have a -> library : 1
have a library -> such : 1
a library such -> as : 1
as the designer -> of : 1
the designer of -> the : 1
designer of the -> library : 1
the library itself -> wrote : 1
library itself wrote -> another : 1
itself wrote another -> library : 1
wrote another library -> that : 1
another library that -> relies : 1
library that relies -> on : 1
relies on streamulus -> for : 1
on streamulus for -> change : 1
streamulus for change -> is : 1
for change is -> a : 1
change is a -> library : 1
library that enables -> that : 1
that enables that -> setting : 1
enables that setting -> up : 1
that setting up -> variables : 1
setting up variables -> where : 1
up variables where -> each : 1
variables where each -> cell : 1
where each cell -> is : 1
each cell is -> assigned : 1
cell is assigned -> an : 1
assigned an expression -> that : 1
an expression that -> can : 1
expression that can -> contain : 1
that can contain -> the : 1
can contain the -> values : 1
contain the values -> of : 1
values of other -> changes : 1
of other changes -> are : 1
other changes are -> propagated : 1
changes are propagated -> to : 1
are propagated to -> all : 1
propagated to all -> dependent : 1
to all dependent -> as : 1
all dependent as -> in : 1
dependent as in -> a : 1
as in a -> spreadsheet : 1
as in a -> write : 1
in a spreadsheet -> was : 1
a spreadsheet was -> developed : 1
spreadsheet was developed -> to : 1
was developed to -> demonstrate : 1
developed to demonstrate -> the : 1
use of spreadsheet -> is : 1
of spreadsheet is -> a : 1
spreadsheet is a -> it : 1
spreadsheet is a -> wonderful : 1
is a it -> uses : 1
a it uses -> boost : 1
it uses boost -> and : 1
uses boost and -> so : 1
boost and so -> put : 1
and so put -> these : 1
so put these -> three : 1
put these three -> libraries : 1
these three libraries -> in : 1
three libraries in -> your : 1
libraries in your -> include : 1
in your include -> the : 1
your include the -> details : 1
include the details -> of : 1
the details of -> the : 1
details of the -> library : 1
the library can -> be : 3
be found will -> go : 1
found will go -> through : 1
will go through -> a : 1
go through a -> sample : 1
go through a -> code : 1
through a sample -> program : 1
a sample program -> that : 1
a sample program -> to : 1
sample program that -> leverages : 1
program that leverages -> the : 1
that leverages the -> which : 1
leverages the which -> is : 1
which is included -> in : 1
is included in -> the : 1
included in the -> github : 1
included in the -> class : 1
in the github -> repository : 1
the github repository -> int : 2
github repository int -> main : 1
github repository int -> char : 1
repository int main -> const : 1
int main const -> char : 1
main const char -> using : 1
const char using -> namespace : 1
char using namespace -> spreadsheet : 1
using namespace spreadsheet -> a : 1
namespace spreadsheet a -> b : 1
spreadsheet a b -> c : 1
a b c -> d : 1
b c d -> e : 1
c d e -> f : 1
d e f -> previous : 1
e f previous -> code : 1
f previous code -> snippet : 1
set of which -> acts : 1
of which acts -> as : 1
which acts as -> a : 1
which acts as -> the : 1
acts as a -> container : 1
acts as a -> base : 1
acts as a -> mediator : 1
acts as a -> conduit : 1
as a container -> for : 1
container for ieee -> after : 1
for ieee after -> we : 1
ieee after we -> have : 1
after we have -> initialized : 1
we have initialized -> the : 1
have initialized the -> we : 1
initialized the we -> will : 1
we will start -> mutating : 1
we will start -> using : 1
will start mutating -> the : 1
start mutating the -> values : 1
mutating the values -> of : 1
of the cell -> with : 1
the cell with -> the : 1
cell with the -> following : 1
the following set -> of : 1
following set of -> we : 1
set of we -> will : 1
set of we -> can : 1
we will mutate -> the : 1
will mutate the -> values : 1
mutate the values -> with : 1
the values with -> the : 1
values with the -> preceding : 1
with the preceding -> after : 1
with the preceding -> two : 1
the preceding after -> each : 1
preceding after each -> assignment : 1
after each assignment -> through : 1
each assignment through -> the : 1
assignment through the -> a : 1
through the a -> computational : 1
the a computational -> pass : 1
a computational pass -> will : 1
computational pass will -> get : 1
pass will get -> triggered : 1
will get triggered -> through : 1
will get triggered -> here : 1
get triggered through -> the : 1
triggered through the -> the : 1
the library manages -> the : 1
library manages the -> underlying : 1
manages the underlying -> previous : 1
the underlying previous -> code : 1
underlying previous code -> snippet : 1
code snippet prints -> the : 1
snippet prints the -> value : 1
prints the value -> of : 1
of the cells -> to : 1
the cells to -> the : 1
cells to the -> once : 1
to the once -> we : 1
to the once -> the : 1
the once we -> will : 1
once we will -> change : 1
we will change -> the : 1
change the expressions -> to : 1
the expressions to -> trigger : 1
expressions to trigger -> a : 1
trigger a computational -> flow : 1
a computational flow -> return : 1
computational flow return -> source : 1
flow return source -> code : 1
return source code -> of : 1
can be perused -> to : 1
be perused to -> understand : 1
perused to understand -> the : 1
understand the internal -> workings : 1
the internal workings -> of : 1
internal workings of -> the : 1
workings of the -> a : 1
workings of the -> we : 1
workings of the -> client : 1
workings of the -> task : 1
the a spreadsheet -> is : 1
is a wonderful -> example : 1
example of how -> the : 1
of how the -> streamulus : 1
the streamulus library -> can : 1
streamulus library can -> be : 1
can be leveraged -> to : 1
be leveraged to -> write : 1
leveraged to write -> robust : 1
write robust another -> is : 1
robust another is -> a : 1
another is a -> library : 1
library that is -> worth : 1
that is worth -> checking : 1
is worth checking -> out : 1
worth checking out -> for : 1
checking out for -> anyone : 1
out for anyone -> who : 1
for anyone who -> are : 1
anyone who are -> interested : 1
who are interested -> in : 1
interested in doing -> parallel : 1
in doing parallel -> programming : 1
doing parallel programming -> or : 1
parallel programming or -> the : 1
programming or the -> library : 1
or the library -> is : 1
the library is -> available : 2
the library is -> really : 1
library is available -> the : 1
library is available -> at : 1
is available the -> following : 1
available the following -> description : 1
the following description -> is : 1
following description is -> available : 1
description is available -> from : 1
is available from -> the : 1
available from the -> preceding : 1
preceding is a -> library : 1
a library for -> enabling : 1
library for enabling -> parallel : 1
for enabling parallel -> using : 1
enabling parallel using -> simple : 1
parallel using simple -> operators : 1
using simple operators -> like : 1
simple operators like -> the : 1
operators like the -> streams : 1
like the streams -> that : 1
the streams that -> you : 1
streams that you -> would : 1
that you would -> use : 1
you would use -> for : 1
would use for -> string : 1
use for string -> you : 1
for string you -> can : 1
string you can -> link : 1
you can link -> parallel : 1
can link parallel -> compute : 1
link parallel compute -> kernels : 1
parallel compute kernels -> with : 1
compute kernels with -> we : 1
kernels with we -> do : 1
with we do -> away : 1
we do away -> with : 1
do away with -> explicit : 1
away with explicit -> use : 1
with explicit use -> of : 1
use of or -> any : 1
of or any -> other : 1
or any other -> parallel : 1
any other parallel -> threading : 1
other parallel threading -> these : 1
parallel threading these -> are : 1
threading these are -> often : 1
these are often -> creating : 1
are often creating -> model : 1
often creating model -> allows : 1
creating model allows -> access : 1
model allows access -> to : 1
allows access to -> the : 1
to the communications -> channels : 1
the communications channels -> connecting : 1
communications channels connecting -> each : 1
channels connecting each -> compute : 1
connecting each compute -> the : 1
each compute the -> full : 1
compute the full -> system : 1
the full system -> has : 1
full system has -> many : 1
system has many -> and : 1
has many and -> convenience : 1
many and convenience -> features : 1
and convenience features -> that : 1
convenience features that -> enable : 1
features that enable -> relatively : 1
that enable relatively -> simple : 1
enable relatively simple -> authoring : 1
relatively simple authoring -> of : 1
simple authoring of -> performant : 1
authoring of performant -> be : 1
of performant be -> covering : 1
performant be covering -> in : 1
be covering in -> detail : 1
covering in detail -> in : 1
this particular due -> to : 1
particular due to -> space : 1
due to space -> a : 1
to space a -> wonderful : 1
space a wonderful -> talk : 1
a wonderful talk -> by : 1
wonderful talk by -> the : 1
talk by the -> author : 1
by the author -> of : 1
the author of -> the : 1
author of the -> library : 1
available at go -> through : 1
at go through -> a : 1
through a code -> snippet : 1
a code snippet -> that : 1
code snippet that -> shows : 1
snippet that shows -> the : 1
that shows the -> working : 1
shows the working -> of : 1
the working of -> this : 1
the working of -> json : 1
working of this -> class : 1
this class hi -> public : 1
class hi public -> virtual : 1
hi public virtual -> int : 1
public virtual int -> int : 1
virtual int int -> char : 1
int int char -> instantiate : 1
int char instantiate -> print : 1
int char instantiate -> a : 1
char instantiate print -> kernel : 1
instantiate print kernel -> instantiate : 1
print kernel instantiate -> hello : 1
kernel instantiate hello -> world : 1
instantiate hello world -> kernel : 1
hello world kernel -> hi : 1
world kernel hi -> make : 1
kernel hi make -> a : 1
hi make a -> map : 1
make a map -> object : 1
a map object -> add : 1
map object add -> kernels : 1
object add kernels -> to : 1
add kernels to -> both : 1
kernels to both -> hello : 1
to both hello -> and : 1
both hello and -> p : 1
hello and p -> are : 1
and p are -> executed : 1
p are executed -> concurrently : 1
are executed concurrently -> m : 1
executed concurrently m -> hello : 1
concurrently m hello -> execute : 1
m hello execute -> the : 1
hello execute the -> map : 1
execute the map -> a : 1
the map a -> you : 1
map a you -> are : 1
a you are -> supposed : 1
you are supposed -> to : 1
supposed to define -> a : 1
to define a -> kernel : 1
define a kernel -> for : 1
a kernel for -> custom : 1
kernel for custom -> computation : 1
for custom computation -> and : 1
custom computation and -> use : 1
computation and use -> the : 1
use the operator -> to : 2
use the operator -> at : 1
the operator to -> stream : 1
the operator to -> compose : 1
the operator to -> map : 1
the operator to -> avoid : 1
the operator to -> get : 1
operator to stream -> the : 1
to stream the -> in : 1
stream the in -> the : 1
preceding the class -> is : 1
class is such -> a : 1
is such a -> consult : 1
such a consult -> at : 1
a consult at -> the : 1
consult at the -> preceding : 1
at the preceding -> raftlib : 1
the preceding raftlib -> and : 1
preceding raftlib and -> source : 1
raftlib and source -> code : 1
and source code -> examples : 1
source code examples -> to : 1
code examples to -> learn : 1
examples to learn -> more : 1
more about this -> wonderful : 1
about this wonderful -> do : 1
this wonderful do -> these : 1
wonderful do these -> things : 1
with rx the -> reactive : 1
rx the reactive -> programming : 1
programming model treats -> events : 1
model treats events -> as : 1
treats events as -> a : 1
events as a -> stream : 1
of data propagating -> through : 1
propagating through a -> for : 1
through a for -> this : 1
a for this -> to : 1
for this to -> we : 1
this to we -> need : 1
to we need -> to : 1
need to aggregate -> event : 1
to aggregate event -> elements : 1
aggregate event elements -> to : 1
event elements to -> a : 1
elements to a -> data : 1
structure and create -> a : 1
and create a -> stream : 1
and create a -> worker : 1
out of we -> even : 1
of we even -> apply : 1
we even apply -> statistical : 1
even apply statistical -> techniques : 1
apply statistical techniques -> to : 1
statistical techniques to -> sample : 1
techniques to sample -> if : 1
to sample if -> there : 1
sample if there -> is : 1
there is plenty -> of : 1
is plenty of -> the : 1
plenty of the -> generated : 1
of the generated -> stream : 1
the generated stream -> can : 1
generated stream can -> be : 1
stream can be -> filtered : 1
can be filtered -> and : 1
be filtered and -> transformed : 1
be filtered and -> of : 1
filtered and transformed -> at : 1
and transformed at -> the : 1
transformed at the -> source : 1
at the source -> level : 1
the source level -> using : 1
source level using -> functional : 1
level using functional -> before : 1
using functional before -> being : 1
functional before being -> notified : 1
before being notified -> to : 1
being notified to -> the : 1
to the observers -> who : 1
the observers who -> waiting : 1
observers who waiting -> to : 1
who waiting to -> get : 1
waiting to get -> the : 1
get the event -> source : 1
source is supposed -> to : 1
supposed to take -> a : 1
take a approach -> to : 1
a approach to -> to : 1
approach to to -> avoid : 1
to to avoid -> the : 1
avoid the coupling -> between : 1
the coupling between -> event : 1
coupling between event -> source : 1
between event source -> sinks : 1
event source sinks -> and : 1
source sinks and -> the : 1
sinks and the -> event : 1
event sinks when -> to : 1
sinks when to -> dispatch : 1
when to dispatch -> the : 1
dispatch the event -> will : 1
will be determined -> by : 1
be determined by -> scheduling : 1
determined by scheduling -> software : 1
by scheduling software -> which : 1
scheduling software which -> runs : 1
software which runs -> the : 1
which runs the -> functional : 1
runs the functional -> transformation : 1
the functional transformation -> pipeline : 1
functional transformation pipeline -> in : 1
transformation pipeline in -> an : 1
pipeline in an -> asynchronous : 1
asynchronous the key -> elements : 1
the key elements -> of : 3
key elements of -> reactive : 1
key elements of -> the : 2
elements of reactive -> programming : 1
reactive programming stream -> of : 1
programming stream of -> data : 1
of data in -> which : 1
of data in -> a : 1
data in which -> others : 1
in which others -> are : 1
which others are -> which : 1
others are which -> is : 1
are which is -> interested : 1
which is interested -> in : 1
is interested in -> an : 1
interested in an -> observable : 1
in an observable -> and : 1
an observable and -> subscribe : 1
an observable and -> emit : 3
an observable and -> the : 1
an observable and -> a : 1
an observable and -> waits : 1
an observable and -> an : 1
an observable and -> returns : 1
observable and subscribe -> for : 1
and subscribe for -> determines : 1
subscribe for determines -> when : 1
for determines when -> the : 1
determines when the -> stream : 1
when the stream -> should : 1
the stream should -> be : 1
stream should be -> propagated : 1
should be propagated -> down : 1
be propagated down -> the : 1
propagated down the -> operators : 1
down the operators -> filtering : 1
the operators filtering -> and : 1
operators filtering and -> a : 1
filtering and a -> the : 1
and a the -> of : 1
a the of -> the : 1
the of the -> rx : 1
the of the -> events : 1
the rx takes -> an : 1
rx takes an -> for : 1
takes an for -> filtering : 1
an for filtering -> and : 1
for filtering and -> transformation : 1
filtering and transformation -> asynchronously : 1
and transformation asynchronously -> before : 1
transformation asynchronously before -> notifying : 1
asynchronously before notifying -> the : 1
notifying the as -> this : 1
the as this -> we : 1
the as this -> code : 1
as this we -> covered : 1
this we covered -> the : 1
this we covered -> quite : 1
this we covered -> how : 1
covered the topic -> of : 2
event stream treating -> events : 1
stream treating events -> as : 1
events as streams -> has : 1
as streams has -> many : 1
streams has many -> advantages : 1
many advantages over -> the : 1
advantages over the -> traditional : 1
over the traditional -> we : 1
the traditional we -> started : 1
traditional we started -> with : 1
started with library -> and : 1
with library and -> learned : 1
library and learned -> about : 1
and learned about -> its : 1
learned about its -> programming : 1
about its programming -> we : 1
its programming we -> also : 1
its programming we -> wrote : 1
programming we also -> wrote : 1
programming we also -> covered : 1
we also wrote -> some : 1
also wrote some -> programs : 1
wrote some programs -> to : 2
some programs to -> familiarize : 1
some programs to -> understand : 1
programs to familiarize -> ourselves : 1
to familiarize ourselves -> with : 1
familiarize ourselves with -> the : 1
ourselves with the -> library : 1
with the library -> and : 1
with the library -> will : 1
and its the -> library : 1
its the library -> has : 1
the library has -> excellent : 1
library has excellent -> documentation : 1
has excellent documentation -> and : 1
excellent documentation and -> you : 1
documentation and you -> should : 1
and you should -> consult : 1
you should consult -> its : 1
should consult its -> documentation : 1
consult its documentation -> to : 1
its documentation to -> learn : 1
more about after -> streams : 1
about after streams -> we : 1
after streams we -> looked : 1
streams we looked -> at : 1
of event we -> wrote : 1
event we wrote -> a : 1
we wrote a -> couple : 1
we wrote a -> basic : 1
we wrote a -> mouse : 1
we wrote a -> rest : 1
wrote a couple -> of : 1
couple of programs -> and : 1
of programs and -> also : 1
programs and also -> studied : 1
and also studied -> some : 1
also studied some -> sample : 1
studied some sample -> programs : 1
some sample programs -> that : 1
sample programs that -> come : 1
sample programs that -> we : 1
programs that come -> with : 1
that come with -> the : 1
come with the -> we : 1
with the we -> also : 1
we also mentioned -> the : 1
also mentioned the -> an : 1
mentioned the an -> the : 1
the an the -> stream : 1
an the stream -> processing : 1
stream processing with -> the : 1
processing with the -> coverage : 1
with the coverage -> of : 1
the coverage of -> event : 1
coverage of event -> stream : 1
programming we have -> now : 1
we have now -> finished : 1
have now finished -> dealing : 1
now finished dealing -> with : 1
finished dealing with -> the : 1
with the prerequisites -> for : 1
the prerequisites for -> understanding : 1
prerequisites for understanding -> reactive : 1
for understanding reactive -> programming : 1
understanding reactive programming -> in : 1
general and the -> rxcpp : 1
rxcpp library in -> in : 1
rxcpp library in -> particular : 1
rxcpp library in -> we : 1
library in in -> the : 1
will start using -> the : 1
start using the -> rxcpp : 1
rxcpp library to -> get : 1
rxcpp library to -> write : 1
library to get -> into : 1
to get into -> the : 1
model of the -> reactive : 1
model of the -> rxcpp : 2
model of the -> namespace : 1
the reactive system -> to : 1
reactive system to -> data : 1
system to data -> flow : 1
the rxcpp this -> chapter : 1
rxcpp this chapter -> we : 1
we will get -> into : 1
we will get -> all : 1
will get into -> the : 1
into the meat -> of : 2
the meat of -> the : 2
meat of the -> reactive : 1
meat of the -> take : 1
reactive programming you -> can : 1
reactive programming you -> take : 1
programming you can -> consider : 1
you can consider -> the : 1
can consider the -> earlier : 1
consider the earlier -> chapters : 1
the earlier chapters -> as : 1
earlier chapters as -> a : 1
chapters as a -> kind : 1
as a kind -> of : 1
kind of prerequisite -> to : 1
of prerequisite to -> understanding : 1
prerequisite to understanding -> the : 1
to understanding the -> reactive : 1
understanding the reactive -> programming : 1
reactive programming more -> specifically : 1
programming more specifically -> functional : 1
more specifically functional -> reactive : 1
specifically functional reactive -> if : 1
functional reactive if -> we : 1
reactive if we -> look : 1
if we look -> we : 1
we look we -> covered : 1
look we covered -> the : 1
covered the necessary -> which : 1
the necessary which -> includes : 1
necessary which includes -> the : 1
includes the event -> programming : 1
the event programming -> models : 1
event programming models -> on : 1
programming models on -> various : 1
models on various -> gui : 1
on various gui -> whirlwind : 1
various gui whirlwind -> tour : 1
gui whirlwind tour -> of : 1
modern language functional -> concurrency : 1
language functional concurrency -> for : 1
functional concurrency for -> better : 1
concurrency for better -> concurrent : 1
for better concurrent -> programming : 1
better concurrent programming -> models : 1
concurrent programming models -> a : 1
programming models a -> step : 1
models a step -> toward : 1
a step toward -> declarative : 1
step toward declarative -> design : 1
toward declarative design -> patterns : 1
declarative design patterns -> and : 1
patterns and the -> concept : 1
patterns and the -> pattern : 1
patterns and the -> jim : 1
patterns and the -> reactive : 1
and the concept -> of : 1
concept of stream -> of : 1
of stream of -> these : 1
stream of these -> topics : 1
of these topics -> come : 1
these topics come -> together : 1
topics come together -> in : 1
come together in -> a : 1
together in a -> systematic : 1
in a systematic -> manner : 1
a systematic manner -> in : 1
systematic manner in -> the : 1
manner in the -> case : 1
case of reactive -> reactive : 1
of reactive reactive -> programming : 1
reactive reactive programming -> is : 1
reactive reactive programming -> patterns : 1
regardless of the -> source : 1
regardless of the -> application : 1
of the source -> of : 1
of the source -> observables : 1
the event streams -> are : 1
event streams are -> typically : 1
streams are typically -> called : 1
are typically called -> observables : 1
typically called observables -> and : 1
called observables and -> event : 1
observables and event -> stream : 1
event stream subscribers -> are : 1
stream subscribers are -> called : 1
subscribers are called -> betweene : 1
are called betweene -> observables : 1
called betweene observables -> and : 1
betweene observables and -> there : 1
observables and there -> are : 1
and there are -> stream : 1
and there are -> some : 1
there are stream -> operators : 1
are stream operators -> it : 1
stream operators it -> is : 1
operators it is -> implicitly : 1
it is implicitly -> assumed : 1
is implicitly assumed -> that : 1
implicitly assumed that -> the : 1
assumed that the -> data : 1
data source be -> mutated : 1
source be mutated -> while : 1
be mutated while -> data : 1
mutated while data -> is : 1
while data is -> passed : 1
data is passed -> through : 1
is passed through -> we : 1
passed through we -> can : 1
through we can -> have : 1
have multiple operator -> paths : 1
multiple operator paths -> between : 1
operator paths between -> observables : 1
paths between observables -> and : 1
between observables and -> immutability : 1
between observables and -> their : 1
between observables and -> observers : 1
between observables and -> we : 1
observables and immutability -> gives : 1
and immutability gives -> options : 1
immutability gives options -> for : 1
gives options for -> and : 1
options for and -> scheduling : 1
for and scheduling -> can : 1
and scheduling can -> be : 1
scheduling can be -> delegated : 1
can be delegated -> to : 1
be delegated to -> a : 1
delegated to a -> special : 1
to a special -> piece : 1
a special piece -> of : 1
special piece of -> software : 1
of software called -> thus : 1
software called thus -> stream : 1
called thus stream -> and : 1
thus stream and -> schedulers : 1
stream and schedulers -> form : 1
and schedulers form -> the : 1
schedulers form the -> backbone : 1
form the backbone -> of : 1
the backbone of -> the : 1
backbone of the -> frp : 1
of the frp -> this : 1
the frp this -> we : 1
frp this we -> will : 1
the following short -> discussion : 1
the following short -> recap : 1
following short discussion -> about : 1
short discussion about -> the : 1
discussion about the -> data : 1
about the data -> flow : 1
flow computing to -> the : 1
computing to the -> rxcpp : 1
its programming basic -> rxcpp : 1
programming basic rxcpp -> programs : 1
basic rxcpp programs -> to : 1
rxcpp programs to -> get : 1
programs to get -> our : 1
our feet stream -> map : 1
feet stream map -> more : 1
stream map more -> data : 1
map more data -> flow : 1
more data flow -> computation : 1
flow computation programmers -> encode : 1
computation programmers encode -> their : 1
programmers encode their -> program : 1
encode their program -> in : 1
their program in -> terms : 1
program in terms -> of : 2
terms of control -> that : 1
terms of control -> the : 1
of control that -> means : 1
control that means -> we : 1
that means we -> encode : 1
means we encode -> programs : 1
we encode programs -> as : 1
encode programs as -> a : 1
programs as a -> series : 1
as a series -> of : 1
series of small -> statements : 1
of small statements -> or : 1
small statements or -> functions : 1
statements or functions -> with : 1
or functions with -> their : 1
functions with their -> associated : 1
with their associated -> we : 1
their associated we -> use : 1
associated we use -> such : 1
we use such -> as : 1
use such as -> selection : 1
such as selection -> iteration : 1
as selection iteration -> and : 1
selection iteration and -> recursive : 1
iteration and recursive -> to : 1
and recursive to -> encode : 1
recursive to encode -> our : 1
to encode our -> handling : 1
encode our handling -> concurrency : 1
our handling concurrency -> and : 1
handling concurrency and -> state : 1
concurrency and state -> management : 1
and state management -> for : 1
state management for -> these : 1
management for these -> types : 1
for these types -> of : 1
these types of -> program : 1
types of program -> are : 1
of program are -> really : 1
program are really -> problematic : 1
are really problematic -> and : 1
really problematic and -> they : 1
problematic and they -> lead : 1
and they lead -> to : 1
they lead to -> subtle : 1
lead to subtle -> we : 1
to subtle we -> need : 1
subtle we need -> to : 1
need to place -> locks : 1
to place locks -> and : 1
place locks and -> other : 1
locks and other -> synchronization : 1
and other synchronization -> primitives : 1
synchronization primitives around -> shared : 1
primitives around shared -> mutable : 1
around shared mutable -> at : 1
shared mutable at -> the : 1
mutable at the -> compiler : 1
at the compiler -> the : 1
the compiler the -> language : 1
compiler the language -> compiler : 1
the language compiler -> will : 1
language compiler will -> parse : 1
compiler will parse -> the : 1
will parse the -> source : 1
parse the source -> code : 1
code to create -> an : 1
code to create -> the : 1
code to create -> and : 1
create an syntax -> do : 1
an syntax do -> type : 1
syntax do type -> code : 1
do type code -> and : 1
type code and -> code : 1
code and code -> in : 1
and code in -> ast : 1
code in ast -> is : 1
in ast is -> an : 1
ast is an -> information : 1
is an information -> flow : 1
an information flow -> graph : 1
information flow graph -> where : 1
flow graph where -> you : 1
graph where you -> can : 1
where you can -> perform : 1
you can perform -> analysis : 1
can perform analysis -> level : 1
perform analysis level -> and : 1
analysis level and -> analysis : 1
level and analysis -> to : 1
and analysis to -> exploit : 1
analysis to exploit -> code : 1
to exploit code -> pipeline : 1
exploit code pipeline -> optimization : 1
code pipeline optimization -> at : 1
pipeline optimization at -> the : 1
optimization at the -> processor : 1
at the processor -> even : 1
the processor even -> though : 1
processor even though -> programmers : 1
even though programmers -> encode : 1
though programmers encode -> programs : 1
programmers encode programs -> in : 1
encode programs in -> terms : 1
programs in terms -> of : 1
of control the -> compiler : 1
control the compiler -> least : 1
the compiler least -> some : 1
compiler least some -> part : 1
least some part -> of : 1
some part of -> tries : 1
part of tries -> to : 1
of tries to -> see : 1
tries to see -> the : 1
see the program -> in : 1
the program in -> terms : 1
terms of data -> flow : 1
of data flow -> as : 1
data flow as -> the : 1
flow as the -> bottom : 1
as the bottom -> line : 1
the bottom line -> here : 1
bottom line here -> is : 1
line here is -> the : 1
here is the -> fact : 1
here is the -> dirname : 1
fact that there -> is : 1
there is an -> implicit : 1
there is an -> option : 2
there is an -> the : 1
there is an -> error : 1
is an implicit -> data : 1
an implicit data -> flow : 1
implicit data flow -> graph : 1
flow graph dormant -> in : 1
graph dormant in -> every : 1
dormant in every -> data : 1
in every data -> flow : 1
every data flow -> computation : 1
flow computation organizes -> computation : 1
computation organizes computation -> as : 1
organizes computation as -> an : 1
computation as an -> explicit : 1
as an explicit -> where : 1
an explicit where -> nodes : 1
explicit where nodes -> are : 1
where nodes are -> computations : 1
nodes are computations -> and : 1
are computations and -> edges : 1
computations and edges -> are : 1
and edges are -> paths : 1
edges are paths -> for : 1
are paths for -> data : 1
paths for data -> to : 1
for data to -> flow : 1
data to flow -> between : 1
to flow between -> the : 1
flow between the -> if : 1
between the if -> we : 1
if we place -> certain : 1
we place certain -> restrictions : 1
place certain restrictions -> as : 1
certain restrictions as -> preservation : 1
restrictions as preservation -> of : 1
as preservation of -> the : 1
preservation of the -> data : 1
the data state -> by : 1
data state by -> working : 1
state by working -> on : 1
by working on -> a : 1
working on a -> copy : 1
on a copy -> of : 1
copy of the -> input : 1
of the input -> avoidance : 1
of the input -> stream : 1
the input avoidance -> of : 1
input avoidance of -> on : 1
avoidance of on -> computations : 1
of on computations -> at : 1
on computations at -> the : 1
computations at the -> we : 1
at the we -> can : 1
we can exploit -> opportunities : 1
can exploit opportunities -> for : 1
exploit opportunities for -> the : 1
opportunities for the -> scheduler : 1
for the scheduler -> will : 1
the scheduler will -> find : 1
scheduler will find -> opportunities : 1
will find opportunities -> for : 1
find opportunities for -> parallelism : 1
opportunities for parallelism -> by : 1
for parallelism by -> doing : 1
parallelism by doing -> a : 1
the graph data -> we : 1
graph data we -> will : 1
we will construct -> the : 1
will construct the -> graph : 1
construct the graph -> using : 1
the graph using -> streams : 1
graph using streams -> and : 1
using streams and -> operations : 1
streams and operations -> on : 1
and operations on -> streams : 1
operations on streams -> this : 1
on streams this -> can : 1
streams this can -> be : 1
be done as -> operators : 1
done as operators -> can : 1
as operators can -> be : 1
operators can be -> encoded : 1
operators can be -> categorized : 1
operators can be -> constructed : 1
can be encoded -> as : 1
be encoded as -> which : 1
encoded as which -> do : 1
as which do -> some : 1
which do some -> local : 1
do some local -> there : 1
some local there -> is : 1
local there is -> a : 1
set of primitive -> standard : 1
of primitive standard -> such : 1
primitive standard such -> as : 1
standard such as -> and : 1
as and identified -> by : 1
and identified by -> the : 1
identified by the -> functional : 1
by the functional -> programming : 1
the functional programming -> there : 1
the functional programming -> constructs : 1
functional programming there -> is : 1
programming there is -> a : 1
is a provision -> in : 1
a provision in -> the : 1
provision in the -> data : 1
flow computation framework -> to : 1
computation framework to -> convert : 1
framework to convert -> data : 1
into the tensorflow -> library : 1
the tensorflow library -> for : 1
tensorflow library for -> machine : 1
library for machine -> learning : 1
for machine learning -> is : 1
machine learning is -> one : 1
learning is one -> library : 1
is one library -> that : 1
one library that -> uses : 1
library that uses -> this : 1
that uses this -> the : 1
uses this the -> rxcpp : 1
this the rxcpp -> library : 1
rxcpp library can -> also : 1
rxcpp library can -> be : 3
library can also -> be : 1
also be considered -> as : 1
considered as a -> data : 1
as a data -> flow : 1
flow computation even -> though : 1
computation even though -> graph : 1
even though graph -> creation : 1
though graph creation -> is : 1
graph creation is -> not : 1
creation is not -> fully : 1
is not fully -> as : 1
not fully as -> in : 1
fully as in -> the : 1
case of since -> functional : 1
of since functional -> programming : 1
since functional programming -> constructs : 2
programming constructs support -> lazy : 1
programming constructs support -> composition : 1
constructs support lazy -> we : 1
support lazy we -> are : 1
lazy we are -> creating : 1
we are creating -> a : 2
are creating a -> computation : 1
are creating a -> class : 1
creating a computation -> flow : 1
a computation flow -> when : 1
computation flow when -> we : 1
flow when we -> construct : 1
when we construct -> a : 1
we construct a -> stream : 1
construct a stream -> pipeline : 1
a stream pipeline -> with : 1
stream pipeline with -> asynchronous : 1
pipeline with asynchronous -> data : 1
data streams and -> introduction : 1
streams and introduction -> to : 1
and introduction to -> the : 1
the rxcpp will -> be : 1
rxcpp will be -> using : 1
be using the -> rxcpp : 1
be using the -> std : 1
be using the -> tool : 1
to write our -> reactive : 1
to write our -> logic : 1
to write our -> this : 1
write our reactive -> programs : 1
our reactive programs -> in : 1
programs in the -> rest : 1
in the rest -> of : 1
rxcpp library is -> a : 2
rxcpp library is -> structured : 1
rxcpp library is -> by : 1
rxcpp library is -> kirk : 1
rxcpp library is -> so : 1
can be downloaded -> from : 2
be downloaded from -> a : 1
be downloaded from -> the : 1
downloaded from a -> github : 1
from a github -> relies : 1
a github relies -> on : 1
github relies on -> modern : 1
relies on modern -> such : 1
on modern such -> as : 1
modern such as -> lambda : 1
as lambda functional -> and : 1
lambda functional and -> to : 1
functional and to -> implement : 1
and to implement -> reactive : 1
to implement reactive -> programming : 1
implement reactive programming -> the : 1
programming the rxcpp -> library : 1
library is structured -> along : 1
is structured along -> the : 1
structured along the -> lines : 1
along the lines -> of : 1
the lines of -> libraries : 1
lines of libraries -> such : 1
as and any -> other : 1
and any other -> reactive : 1
any other reactive -> programming : 1
other reactive programming -> there : 1
reactive programming there -> are : 1
are some key -> constructs : 1
some key constructs -> that : 1
key constructs that -> everyone : 1
constructs that everyone -> should : 1
that everyone should -> understand : 1
everyone should understand -> before : 1
should understand before -> they : 1
understand before they -> write : 1
before they write -> the : 1
they write the -> first : 1
write the first -> line : 1
line of they -> subscribe : 1
of they subscribe -> to : 1
they subscribe to -> the : 1
the and is -> a : 1
and is a -> library : 1
and is a -> factory : 1
and is a -> tool : 1
a library and -> most : 1
library and most -> of : 1
computation is based -> on : 1
the library provides -> lot : 1
library provides lot -> of : 1
provides lot of -> primitives : 1
lot of primitives -> to : 1
of primitives to -> create : 1
primitives to create -> observable : 1
to create observable -> streams : 1
create observable streams -> from : 1
observable streams from -> various : 1
streams from various -> data : 1
streams from various -> the : 1
from various data -> the : 1
various data the -> data : 1
the data sources -> can : 1
data sources can -> be : 1
can be stl -> and : 1
be stl and -> so : 1
stl and so -> we : 1
stl and so -> simple : 1
we can place -> operators : 1
we can place -> a : 1
we can place -> handlers : 1
can place operators -> between : 1
place operators between -> observables : 1
operators between observables -> and : 1
observables and their -> consumers : 1
and their consumers -> as : 1
their consumers as -> since : 1
consumers as since -> functional : 1
as since functional -> programming : 1
constructs support composition -> of : 1
support composition of -> we : 1
composition of we -> can : 1
of we can -> place : 1
of we can -> implement : 1
of we can -> also : 1
of we can -> use : 1
can place a -> chain : 1
place a chain -> of : 1
a chain of -> operators : 1
chain of operators -> as : 1
of operators as -> a : 1
operators as a -> single : 1
as a single -> entity : 1
a single entity -> between : 1
single entity between -> observables : 1
entity between observables -> and : 1
observables and observers -> who : 1
and observers who -> subscribe : 1
observers who subscribe -> to : 1
who subscribe to -> the : 1
the the scheduler -> associated : 1
the scheduler associated -> with : 1
scheduler associated with -> the : 1
the library will -> make : 1
library will make -> sure : 1
will make sure -> that : 1
sure that when -> data : 1
that when data -> is : 1
when data is -> available : 1
data is available -> in : 1
available in observable -> it : 1
in observable it -> will : 1
observable it will -> be : 1
will be passed -> through : 1
will be passed -> to : 1
be passed through -> the : 1
passed through the -> operators : 1
through the operators -> and : 1
operators and a -> notification : 1
and a notification -> will : 1
a notification will -> be : 1
will be issued -> to : 1
be issued to -> if : 1
issued to if -> there : 1
to if there -> is : 1
there is data -> out : 1
is data out -> after : 1
data out after -> a : 1
out after a -> series : 1
after a series -> of : 1
of filters and -> the : 1
filters and the -> observers : 1
and the observers -> will : 1
the observers will -> need : 1
observers will need -> to : 1
bother about when -> one : 1
about when one -> of : 1
when one of -> the : 1
the lambda methods -> from : 1
lambda methods from -> subscribers : 1
methods from subscribers -> are : 1
from subscribers are -> the : 1
subscribers are the -> observers : 1
are the observers -> can : 1
the observers can -> focus : 1
observers can focus -> on : 1
can focus on -> the : 1
on the tasks -> for : 1
the tasks for -> which : 1
tasks for which -> they : 1
for which they -> are : 1
which they are -> primarily : 1
they are primarily -> rxcpp : 1
are primarily rxcpp -> library : 1
primarily rxcpp library -> and : 1
its programming this -> we : 1
programming this we -> will : 1
write some programs -> that : 1
some programs that -> will : 1
programs that will -> help : 1
the reader to -> understand : 1
reader to understand -> the : 1
of the rxcpp -> the : 1
of the rxcpp -> in : 2
of the rxcpp -> library : 2
of the rxcpp -> and : 1
rxcpp the aim -> of : 1
the aim of -> these : 1
aim of these -> programs : 1
of these programs -> is : 1
these programs is -> to : 1
programs is to -> elucidate : 1
is to elucidate -> rx : 1
to elucidate rx -> concepts : 1
elucidate rx concepts -> and : 1
rx concepts and -> they : 1
concepts and they -> are : 1
they are mostly -> trivial : 1
are mostly trivial -> in : 1
mostly trivial in -> the : 1
trivial in the -> code : 1
will be sufficient -> for : 1
be sufficient for -> a : 1
sufficient for a -> programmer : 1
for a programmer -> to : 1
programmer to incorporate -> them : 1
to incorporate them -> into : 1
incorporate them into -> a : 1
them into a -> production : 1
into a production -> implementation : 1
a production implementation -> with : 1
a production implementation -> requires : 1
production implementation with -> minor : 1
implementation with minor -> data : 1
with minor data -> producers : 1
minor data producers -> and : 1
data producers and -> their : 1
producers and their -> observables : 1
and their observables -> will : 1
their observables will -> be : 1
observables will be -> based : 1
will be based -> on : 1
be based on -> stl : 1
based on stl -> and : 1
on stl and -> so : 1
and so simple -> write : 1
so simple write -> a : 1
simple program that -> will : 2
simple program that -> demonstrates : 1
the rxcpp in -> this : 3
the rxcpp in -> the : 1
rxcpp in this -> particular : 1
rxcpp in this -> we : 1
rxcpp in this -> discuss : 1
rxcpp in this -> the : 1
particular we will -> have : 1
will have an -> observable : 1
will have an -> and : 1
have an observable -> stream : 1
an observable stream -> and : 3
an observable stream -> from : 2
an observable stream -> using : 1
an observable stream -> of : 1
observable stream and -> an : 1
observable stream and -> connect : 1
observable stream and -> stop : 1
observable stream and -> produces : 1
stream and an -> observer : 1
and an observer -> that : 1
and an observer -> to : 1
an observer that -> subscribes : 1
observer that subscribes -> to : 1
that subscribes to -> the : 1
that subscribes to -> in : 1
subscribes to the -> we : 1
we will generate -> a : 1
will generate a -> series : 1
of numbers from -> to : 1
numbers from to -> using : 1
from to using -> a : 1
to using a -> range : 1
using a range -> after : 1
a range after -> creating : 1
range after creating -> the : 1
after creating the -> range : 1
creating the range -> of : 1
the range of -> values : 1
range of values -> and : 1
range of values -> apply : 2
values and an -> observable : 1
and an observable -> over : 1
an observable over -> we : 1
observable over we -> will : 1
over we will -> attach : 1
we will attach -> a : 1
will attach a -> subscriber : 1
attach a subscriber -> to : 1
a subscriber to -> the : 1
subscriber to the -> when : 1
the when we -> execute : 1
when we execute -> the : 1
we execute the -> it : 1
execute the it -> will : 1
it will print -> a : 1
will print a -> series : 1
print a series -> of : 1
of numbers to -> the : 1
numbers to the -> console : 2
the console with -> an : 1
console with an -> additional : 1
with an additional -> int : 1
an additional int -> create : 1
additional int create -> an : 1
int create an -> a : 1
int create an -> observable : 1
create an a -> stream : 1
an a stream -> of : 1
an a stream -> operator : 1
of numbers range -> will : 1
numbers range will -> produce : 1
range will produce -> a : 1
will produce a -> sequence : 1
produce a sequence -> from : 1
a sequence from -> to : 1
sequence from to -> auto : 1
from to auto -> observable : 1
to auto observable -> subscribe : 1
auto observable subscribe -> onnext : 1
auto observable subscribe -> twice : 1
observable subscribe onnext -> and : 1
subscribe onnext and -> oncompleted : 1
onnext and oncompleted -> lambda : 1
and oncompleted lambda -> given : 1
oncompleted lambda given -> preceding : 1
lambda given preceding -> program : 1
given preceding program -> will : 1
preceding program will -> print : 1
preceding program will -> produce : 1
program will print -> the : 1
print the numbers -> to : 1
the numbers to -> the : 1
the console will -> be : 1
console will be -> emitted : 1
will be emitted -> to : 1
be emitted to -> the : 1
emitted to the -> this : 1
emitted to the -> response : 1
to the this -> program : 1
the this program -> demonstrates : 1
this program demonstrates -> how : 1
program demonstrates how -> we : 3
program demonstrates how -> the : 1
create an observable -> stream : 3
create an observable -> for : 1
create an observable -> auto : 1
create an observable -> with : 1
stream and connect -> an : 1
and connect an -> observer : 1
connect an observer -> to : 1
an observer to -> the : 1
an observer to -> observable : 1
an observer to -> a : 1
an observer to -> process : 1
the and transformations -> with : 1
transformations with following -> program : 1
with following program -> will : 1
understand how the -> filter : 1
how the filter -> and : 1
the filter and -> operators : 1
filter and operators -> besides : 1
and operators besides -> the : 1
operators besides the -> usual : 1
besides the usual -> mechanism : 1
the usual mechanism -> of : 1
usual mechanism of -> connecting : 1
mechanism of connecting -> an : 1
of connecting an -> observer : 1
connecting an observer -> to : 1
observer to observable -> streams : 1
to observable streams -> using : 1
observable streams using -> the : 1
streams using the -> subscribe : 1
using the subscribe -> the : 1
subscribe the filter -> method : 1
the filter method -> evaluates : 1
filter method evaluates -> a : 1
method evaluates a -> predicate : 1
evaluates a predicate -> on : 1
a predicate on -> each : 1
predicate on each -> item : 1
on each item -> of : 1
each item of -> the : 1
item of the -> and : 1
the and if -> the : 1
and if the -> evaluation : 1
and if the -> observable : 1
if the evaluation -> happens : 1
the evaluation happens -> to : 1
evaluation happens to -> produce : 1
happens to produce -> a : 1
to produce a -> positive : 1
to produce a -> new : 1
to produce a -> string : 1
produce a positive -> the : 1
a positive the -> item : 1
positive the item -> will : 1
the item will -> be : 1
item will be -> present : 1
will be present -> in : 1
be present in -> the : 1
in the output -> the : 1
in the output -> maybe : 1
in the output -> of : 1
the output the -> operator : 1
output the operator -> applies : 1
the operator applies -> an : 1
operator applies an -> expression : 1
applies an expression -> on : 1
an expression on -> each : 1
expression on each -> element : 1
on each element -> of : 2
input stream and -> helps : 1
stream and helps -> produce : 1
and helps produce -> an : 1
helps produce an -> output : 1
produce an output -> int : 1
an output int -> auto : 1
output int auto -> values : 1
int auto values -> return : 1
int auto values -> auto : 1
int auto values -> scan : 1
int auto values -> operator : 1
int auto values -> from : 2
auto values return -> v : 2
auto values return -> emit : 1
values return v -> preceding : 1
values return v -> from : 1
return v preceding -> program : 1
v preceding program -> generates : 1
preceding program generates -> a : 1
program generates a -> stream : 1
generates a stream -> of : 1
numbers and passes -> the : 1
and passes the -> stream : 1
passes the stream -> through : 1
the stream through -> a : 1
stream through a -> filter : 1
through a filter -> the : 1
a filter the -> function : 1
filter the function -> tries : 1
the function tries -> to : 1
function tries to -> detect : 1
tries to detect -> whether : 1
whether the number -> is : 1
the number is -> the : 1
the output stream -> will : 1
output stream will -> be : 1
stream will be -> passed : 1
stream will be -> printed : 1
be passed to -> the : 1
the which will -> square : 1
which will square -> the : 1
will square the -> contents : 1
square the contents -> of : 1
the the contents -> of : 1
the stream will -> be : 1
to the values -> from : 1
values from though -> rx : 1
from though rx -> is : 1
though rx is -> meant : 1
rx is meant -> for : 1
is meant for -> processing : 1
meant for processing -> data : 1
for processing data -> varying : 1
processing data varying -> over : 1
data varying over -> we : 1
varying over we -> can : 1
over we can -> convert : 1
convert an stl -> container : 1
an stl container -> into : 1
stl container into -> a : 1
container into a -> reactive : 1
into a reactive -> we : 1
reactive we need -> to : 1
use the iterate -> operator : 1
the iterate operator -> to : 1
iterate operator to -> do : 1
operator to do -> the : 1
do the this -> can : 1
can be handy -> at : 1
can be handy -> in : 1
be handy at -> times : 1
handy at times -> and : 1
at times and -> has : 1
times and has -> been : 1
has been helpful -> in : 1
been helpful in -> integrating : 1
helpful in integrating -> code : 1
in integrating code -> from : 1
integrating code from -> code : 1
code from code -> bases : 1
from code bases -> that : 1
code bases that -> use : 1
bases that use -> auto : 1
that use auto -> values : 1
use auto values -> observables : 1
auto values observables -> from : 1
values observables from -> we : 1
observables from we -> have : 1
have written programs -> that : 1
written programs that -> create : 1
programs that create -> an : 1
that create an -> observable : 1
observable stream from -> a : 1
observable stream from -> int : 1
from a range -> object : 1
a range object -> or : 1
range object or -> stl : 1
object or stl -> see : 1
or stl see -> how : 1
stl see how -> we : 1
stream from int -> auto : 1
from int auto -> ints : 1
int auto ints -> preceding : 1
int auto ints -> int : 1
auto ints preceding -> program : 1
ints preceding program -> calls : 1
preceding program calls -> the : 1
program calls the -> method : 1
to emit a -> series : 1
emit a series -> of : 1
of numbers that -> are : 1
numbers that are -> perfect : 1
that are perfect -> those : 1
are perfect those -> numbers : 1
perfect those numbers -> will : 1
those numbers will -> be : 1
numbers will be -> printed : 1
to the observable -> can : 2
to the observable -> side : 2
to the observable -> stream : 2
to the observable -> part : 1
the observable can -> concatenate : 1
the observable can -> be : 1
observable can concatenate -> two : 1
can concatenate two -> streams : 1
concatenate two streams -> to : 1
two streams to -> form : 1
streams to form -> a : 1
form a new -> stream : 1
a new stream -> and : 1
a new stream -> by : 1
a new stream -> is : 1
new stream and -> this : 1
stream and this -> can : 1
be handy in -> some : 1
handy in some -> see : 1
in some see -> how : 1
some see how -> this : 1
see how this -> works : 1
how this works -> by : 1
this works by -> writing : 1
works by writing -> a : 1
writing a simple -> int : 1
a simple int -> auto : 1
simple int auto -> values : 1
auto values auto -> return : 1
values auto return -> auto : 1
auto return auto -> return : 1
return auto return -> int : 1
auto return int -> concat : 1
auto return int -> tale : 1
auto return int -> n : 1
return int concat -> operators : 1
int concat operators -> append : 1
concat operators append -> the : 1
operators append the -> streams : 1
append the streams -> one : 1
the streams one -> after : 1
streams one after -> another : 1
one after another -> by : 1
after another by -> preserving : 1
another by preserving -> the : 1
by preserving the -> from : 1
preserving the from -> observable : 1
the from observable -> following : 1
from observable following -> program : 1
observable following program -> shows : 1
following program shows -> how : 1
shows how you -> can : 2
how you can -> subscribe : 1
how you can -> merge : 1
how you can -> leverage : 1
you can subscribe -> to : 1
to an observable -> stream : 1
to an observable -> and : 1
to an observable -> of : 2
to an observable -> for : 1
to an observable -> name : 1
stream and stop -> the : 1
and stop the -> the : 1
stop the the -> program : 1
the the program -> just : 1
the program just -> shows : 1
program just shows -> the : 1
just shows the -> options : 1
shows the options -> and : 1
the options and -> documentation : 1
options and documentation -> should : 1
and documentation should -> be : 1
documentation should be -> consulted : 1
should be consulted -> int : 1
be consulted int -> auto : 1
consulted int auto -> subs : 1
int auto subs -> auto : 1
auto subs auto -> values : 1
subs auto values -> if : 1
auto values if -> stop : 1
values if stop -> recieving : 1
if stop recieving -> events : 1
stop recieving events -> introduction : 1
recieving events introduction -> to : 1
events introduction to -> marble : 1
for visual is -> difficult : 1
visual is difficult -> to : 1
is difficult to -> visualize : 1
difficult to visualize -> reactive : 1
to visualize reactive -> as : 1
visualize reactive as -> the : 1
reactive as the -> data : 1
the data flows -> the : 1
data flows the -> designers : 1
flows the designers -> of : 1
designers of rx -> systems : 1
of rx systems -> have : 1
rx systems have -> created : 1
systems have created -> a : 1
created a set -> of : 1
set of visualization -> cues : 1
of visualization cues -> called : 1
visualization cues called -> int : 1
cues called int -> auto : 1
called int auto -> ints : 1
auto ints int -> n : 3
ints int n -> than : 1
ints int n -> with : 1
ints int n -> apply : 1
int n than -> giving : 1
n than giving -> a : 1
than giving a -> description : 1
giving a description -> of : 1
a description of -> marble : 1
description of marble -> look : 1
of marble look -> at : 1
marble look at -> a : 1
look at a -> marble : 1
look at a -> simple : 1
at a marble -> diagram : 1
a marble diagram -> that : 1
marble diagram that -> depicts : 2
diagram that depicts -> the : 2
that depicts the -> top : 1
that depicts the -> the : 1
depicts the top -> part : 1
the top part -> of : 1
top part of -> the : 1
of the marble -> diagram : 1
the marble diagram -> shows : 1
the marble diagram -> that : 1
marble diagram shows -> two : 1
marble diagram shows -> the : 1
marble diagram shows -> unlike : 1
diagram shows two -> and : 1
shows two and -> those : 1
two and those -> timelines : 1
and those timelines -> will : 1
those timelines will -> be : 1
timelines will be -> combined : 1
will be combined -> together : 1
be combined together -> by : 1
combined together by -> appending : 1
together by appending -> the : 1
by appending the -> contents : 1
by appending the -> second : 1
by appending the -> minimum : 1
appending the contents -> of : 1
of the second -> timeline : 1
the second timeline -> to : 1
second timeline to -> the : 1
timeline to the -> first : 1
the first time -> line : 1
first time line -> to : 1
time line to -> form : 1
line to form -> a : 1
a composite of -> the : 1
composite of the -> primary : 1
of the primary -> advantages : 1
of the primary -> goals : 1
the primary advantages -> of : 1
primary advantages of -> processing : 1
advantages of processing -> is : 1
of processing is -> the : 1
processing is the -> fact : 1
we can apply -> functional : 1
we can apply -> standard : 1
can apply functional -> programming : 1
apply functional programming -> primitives : 1
functional programming primitives -> on : 1
programming primitives on -> in : 1
primitives on in -> rxcpp : 1
on in rxcpp -> the : 1
in rxcpp the -> processing : 1
in rxcpp the -> key : 1
rxcpp the processing -> is : 1
the processing is -> done : 1
processing is done -> using : 1
is done using -> they : 1
done using they -> are : 1
using they are -> nothing : 1
they are nothing -> but : 1
are nothing but -> and : 1
nothing but and -> reductions : 1
but and reductions -> on : 1
and reductions on -> we : 1
reductions on we -> have : 1
already seen how -> the : 1
seen how the -> and : 1
how the and -> operators : 1
the previous average -> operator : 1
previous average operator -> computes : 1
average operator computes -> the : 1
operator computes the -> arithmetic : 1
computes the arithmetic -> mean : 1
the arithmetic mean -> of : 1
arithmetic mean of -> values : 1
mean of values -> from : 1
of values from -> the : 2
from the observable -> the : 1
the observable the -> other : 1
observable the other -> statistical : 1
the other statistical -> operators : 1
other statistical operators -> supported : 1
statistical operators supported -> following : 1
operators supported following -> program : 1
supported following program -> just : 1
following program just -> demonstrates : 1
program just demonstrates -> the : 1
just demonstrates the -> the : 1
demonstrates the the -> schema : 1
the the schema -> is : 1
the schema is -> the : 1
schema is the -> same : 1
is the same -> for : 1
is the same -> as : 1
same for other -> operators : 1
for other operators -> in : 1
other operators in -> the : 1
operators in the -> preceding : 2
operators in the -> sample : 1
operators in the -> before : 1
operators in the -> composition : 1
the preceding int -> auto : 1
preceding int auto -> values : 1
auto values scan -> operator : 1
values scan operator -> applies : 1
scan operator applies -> a : 1
operator applies a -> function : 1
applies a function -> on : 1
function on each -> element : 1
the stream sequentially -> and : 1
stream sequentially and -> accumulates : 1
sequentially and accumulates -> the : 1
and accumulates the -> value : 1
into a seed -> the : 1
a seed the -> following : 1
seed the following -> program : 1
following program produces -> the : 1
program produces the -> average : 1
produces the average -> of : 1
average of a -> series : 1
of a series -> of : 1
of numbers as -> and : 1
numbers as and -> when : 1
when the values -> are : 1
values are int -> int : 1
are int int -> count : 1
int int count -> auto : 1
int count auto -> values : 1
count auto values -> int : 1
auto values int -> return : 1
values int return -> seed : 1
int return seed -> through : 1
return seed through -> running : 1
seed through running -> average : 1
through running average -> will : 1
running average will -> be : 1
average will be -> printed : 1
printed on to -> the : 1
to the will -> be : 2
the will be -> called : 2
the will be -> connected : 1
be called nineteen -> times : 1
called nineteen times -> before : 1
nineteen times before -> is : 1
times before is -> operators : 1
before is operators -> through : 1
is operators through -> the : 1
the pipe rxcpp -> library : 1
pipe rxcpp library -> allows : 1
rxcpp library allows -> you : 1
library allows you -> to : 2
you to chain -> or : 1
to chain or -> compose : 1
chain or compose -> operators : 1
or compose operators -> to : 1
compose operators to -> enable : 1
operators to enable -> operator : 1
to enable operator -> the : 1
enable operator the -> library : 1
operator the library -> allows : 1
the library allows -> you : 1
you to use -> the : 1
to compose and -> programmers : 1
compose and programmers -> can : 1
and programmers can -> pipe : 1
programmers can pipe -> the : 1
of one operator -> to : 1
one operator to -> another : 1
operator to another -> as : 1
to another as -> if : 1
another as if -> they : 1
as if they -> are : 1
in the command -> line : 1
the command line -> of : 1
command line of -> a : 1
line of a -> unix : 1
of a unix -> this : 1
a unix this -> enables : 1
unix this enables -> us : 1
this enables us -> to : 1
enables us to -> a : 1
us to a -> piece : 1
to a piece -> of : 1
of code the -> following : 1
code the following -> program : 1
following program uses -> the : 1
program uses the -> operator : 1
operator to map -> a : 1
to map a -> rxcpp : 1
map a rxcpp -> samples : 1
a rxcpp samples -> contain : 1
rxcpp samples contain -> many : 1
samples contain many -> examples : 1
contain many examples -> using : 1
many examples using -> pipe : 1
examples using pipe -> namespace : 1
using pipe namespace -> rx : 1
pipe namespace rx -> using : 1
namespace rx using -> namespace : 3
rx using namespace -> using : 3
namespace int chain -> map : 1
int chain map -> to : 1
chain map to -> the : 1
map to the -> range : 1
to the range -> using : 1
the range using -> the : 1
range using the -> pipe : 1
pipe operator avoids -> the : 1
operator avoids the -> use : 1
avoids the use -> of : 1
use of auto -> ints : 1
of auto ints -> int : 1
int n with -> have : 1
n with have -> already : 1
with have already -> learned : 1
learned about and -> observers : 1
about and observers -> in : 1
and observers in -> the : 1
observers in the -> previous : 1
previous we already -> know : 1
we already know -> between : 1
already know between -> observables : 1
know between observables -> and : 1
observables and we -> can : 1
can apply standard -> rx : 1
apply standard rx -> operators : 1
standard rx operators -> to : 1
rx operators to -> filter : 1
operators to filter -> and : 1
to filter and -> transform : 1
filter and transform -> in : 1
filter and transform -> sequences : 1
and transform in -> the : 1
transform in the -> case : 1
case of functional -> we : 1
of functional we -> write : 1
functional we write -> immutable : 1
we write immutable -> functions : 1
write immutable functions -> without : 1
immutable functions without -> and : 1
functions without and -> a : 1
without and a -> consequence : 1
and a consequence -> of : 1
a consequence of -> immutability : 1
consequence of immutability -> is : 1
of immutability is -> the : 1
immutability is the -> potential : 1
is the potential -> for : 1
the potential for -> an : 1
potential for an -> the : 1
for an the -> order : 1
an the order -> in : 1
in which we -> evaluate : 1
which we evaluate -> does : 1
we evaluate does -> not : 1
evaluate does not -> if : 1
does not if -> we : 1
not if we -> can : 1
if we can -> guarantee : 1
we can guarantee -> that : 1
can guarantee that -> the : 1
that the input -> to : 1
the input to -> an : 1
input to an -> operator : 1
to an operator -> is : 1
operator is never -> since : 1
is never since -> an : 1
never since an -> rx : 1
since an rx -> program : 1
an rx program -> will : 1
rx program will -> be : 1
program will be -> manipulating : 1
will be manipulating -> multiple : 1
be manipulating multiple -> observers : 1
manipulating multiple observers -> and : 1
multiple observers and -> we : 1
observers and we -> can : 1
we can delegate -> the : 1
can delegate the -> task : 1
delegate the task -> of : 1
the task of -> choosing : 1
task of choosing -> the : 1
of choosing the -> execution : 1
choosing the execution -> order : 1
the execution order -> to : 1
execution order to -> a : 1
order to a -> scheduler : 1
to a scheduler -> by : 1
a scheduler by -> rxcpp : 1
scheduler by rxcpp -> will : 1
by rxcpp will -> schedule : 1
rxcpp will schedule -> the : 1
will schedule the -> execution : 1
schedule the execution -> in : 2
the execution in -> the : 1
the execution in -> different : 1
in the thread -> which : 1
thread which we -> called : 1
which we called -> it : 1
we called it -> is : 1
called it is -> possible : 1
possible to specify -> a : 1
specify a different -> thread : 1
a different thread -> using : 1
different thread using -> the : 1
thread using the -> and : 1
the and some -> observable : 1
and some observable -> operators : 1
some observable operators -> take : 1
observable operators take -> a : 1
operators take a -> scheduler : 1
take a scheduler -> as : 1
a scheduler as -> a : 1
scheduler as a -> where : 1
as a where -> execution : 1
a where execution -> can : 1
where execution can -> happen : 1
execution can happen -> in : 1
can happen in -> a : 1
happen in a -> thread : 1
a thread managed -> by : 1
thread managed by -> the : 1
by the rxcpp -> library : 2
by the rxcpp -> we : 1
rxcpp library supports -> the : 1
library supports the -> following : 1
supports the following -> two : 1
supports the following -> lists : 1
the following two -> scheduler : 1
following two scheduler -> rxcpp : 1
two scheduler rxcpp -> library : 1
scheduler rxcpp library -> is : 1
library is by -> but : 1
is by but -> you : 1
by but you -> can : 1
but you can -> configure : 1
you can configure -> it : 1
can configure it -> to : 1
configure it to -> run : 1
it to run -> in : 1
run in multiple -> threads : 1
multiple threads using -> certain : 1
threads using certain -> int : 1
using certain int -> generate : 1
certain int generate -> a : 1
generate a range -> of : 2
of values apply -> square : 2
values apply square -> function : 2
apply square function -> auto : 2
square function auto -> values : 2
function auto values -> return : 2
values return emit -> the : 1
return emit the -> current : 1
emit the current -> thread : 2
the current thread -> details : 3
current thread details -> thread : 2
current thread details -> void : 1
thread details thread -> id : 5
details thread id -> another : 1
details thread id -> preceding : 1
details thread id -> have : 1
details thread id -> the : 1
details thread id -> output : 1
thread id another -> make : 1
id another make -> it : 1
another make it -> blocking : 2
make it blocking -> to : 1
make it blocking -> too : 1
it blocking to -> thread : 1
blocking to thread -> id : 1
to thread id -> v : 1
thread id v -> print : 2
thread id v -> auto : 2
id v print -> the : 2
v print the -> main : 2
print the main -> thread : 6
main thread details -> thread : 3
thread id preceding -> program : 1
thread id preceding -> lambda : 1
id preceding program -> will : 1
program will produce -> the : 1
using the std -> thread : 1
the std thread -> id : 1
std thread id -> to : 1
thread id to -> help : 1
id to help -> us : 1
to help us -> distinguish : 1
help us distinguish -> the : 1
us distinguish the -> items : 1
distinguish the items -> scheduled : 1
the items scheduled -> in : 1
items scheduled in -> the : 1
scheduled in the -> new : 1
scheduled in the -> secondary : 1
scheduled in the -> worker : 1
in the new -> thread : 1
which is different -> from : 1
is different from -> the : 1
main thread id -> observable : 1
main thread id -> following : 1
main thread id -> thread : 3
main thread id -> take : 1
main thread id -> stream : 1
thread id observable -> thread : 27
id observable thread -> id : 27
observable thread id -> observable : 23
observable thread id -> oncompleted : 1
observable thread id -> error : 2
observable thread id -> invalid : 2
thread id oncompleted -> main : 1
id oncompleted main -> thread : 1
oncompleted main thread -> id : 1
thread id following -> program : 1
id following program -> will : 1
usage of the -> there : 1
usage of the -> programming : 1
usage of the -> json : 1
usage of the -> operator : 1
of the there -> are : 1
of the there -> is : 1
there are subtle -> differences : 1
are subtle differences -> between : 1
subtle differences between -> the : 1
differences between the -> and : 1
the and methods -> in : 1
and methods in -> terms : 1
methods in terms -> of : 1
terms of we -> will : 1
we will explore -> this : 1
we will explore -> the : 1
will explore this -> in : 1
explore this in -> the : 1
next the purpose -> of : 1
of the following -> listing : 1
of the following -> code : 1
the following listing -> is : 1
following listing is -> to : 1
listing is to -> show : 1
to show the -> options : 1
show the options -> available : 1
the options available -> for : 1
options available for -> declarative : 1
available for declarative -> a : 1
for declarative a -> global : 1
declarative a global -> mutex : 1
a global mutex -> for : 2
global mutex for -> output : 2
mutex for output -> print : 1
mutex for output -> int : 1
for output print -> the : 1
output print the -> current : 1
print the current -> thread : 1
thread details void -> thread : 1
details void thread -> id : 1
void thread id -> a : 1
thread id a -> function : 1
id a function -> to : 1
function to yield -> control : 1
to yield control -> to : 1
yield control to -> other : 1
control to other -> threads : 1
to other threads -> void : 1
other threads void -> bool : 1
threads void bool -> y : 1
void bool y -> if : 1
bool y if -> int : 1
y if int -> auto : 1
if int auto -> threads : 1
int auto threads -> auto : 1
auto threads auto -> values : 1
threads auto values -> schedule : 1
auto values schedule -> it : 1
values schedule it -> in : 1
schedule it in -> another : 3
schedule it in -> yet : 3
it in another -> thread : 3
in another thread -> auto : 2
in another thread -> schedule : 1
another thread auto -> return : 1
another thread auto -> schedule : 1
another thread auto -> observable : 1
thread auto return -> schedule : 1
auto return schedule -> it : 1
return schedule it -> in : 1
it in yet -> another : 3
in yet another -> theread : 1
in yet another -> thread : 2
yet another theread -> auto : 1
another theread auto -> return : 1
theread auto return -> int : 1
return int tale -> of : 1
int tale of -> two : 1
versus concat source -> of : 1
concat source of -> confusion : 1
source of confusion -> among : 1
source of confusion -> for : 1
of confusion among -> developers : 1
confusion among developers -> is : 1
among developers is -> often : 1
developers is often -> centered : 1
is often centered -> around : 1
often centered around -> the : 1
centered around the -> map : 1
around the map -> and : 1
the map and -> map : 2
the map and -> subscribed : 1
the map and -> stores : 1
map and map -> their : 1
map and map -> more : 1
map and map -> in : 1
and map their -> differences : 1
map their differences -> are : 1
their differences are -> really : 1
differences are really -> subtle : 1
are really subtle -> and : 1
really subtle and -> we : 1
subtle and we -> will : 1
will cover them -> in : 1
cover them in -> this : 1
them in this -> take : 1
at the map -> operator : 1
the map operator -> andn : 1
map operator andn -> how : 1
operator andn how -> it : 1
andn how it -> namespace : 1
how it namespace -> int : 1
it namespace int -> apply : 1
namespace int apply -> flatmap : 1
namespace int apply -> concat : 1
int apply flatmap -> on : 1
apply flatmap on -> the : 1
flatmap on the -> array : 1
on the array -> of : 2
the array of -> names : 2
array of names -> flatmap : 1
array of names -> concat : 1
of names flatmap -> returns : 1
names flatmap returns -> an : 1
flatmap returns an -> map : 1
returns an map -> returns : 1
an map returns -> t : 1
map returns t -> the : 1
returns t the -> first : 2
t the first -> lamda : 2
the first lamda -> creates : 2
first lamda creates -> a : 2
lamda creates a -> new : 2
new the second -> lambda : 2
the second lambda -> manipulates : 2
second lambda manipulates -> primary : 2
lambda manipulates primary -> observable : 2
manipulates primary observable -> and : 2
primary observable and -> flatmapped : 1
primary observable and -> concatenated : 1
observable and flatmapped -> observable : 1
and flatmapped observable -> auto : 1
flatmapped observable auto -> values : 1
observable auto values -> v : 2
observable auto values -> interval : 1
observable auto values -> subscribe : 1
auto values v -> return : 2
values v return -> f : 2
v return f -> s : 2
return f s -> s : 2
f s s -> as : 2
s s as -> usual : 2
s as usual -> subscribe : 2
as usual subscribe -> here : 2
usual subscribe here -> the : 2
subscribe here the -> value : 2
here the value -> will : 2
will be interleaved -> as : 2
be interleaved as -> merges : 1
be interleaved as -> concats : 1
interleaved as merges -> the : 1
as merges the -> two : 1
merges the two -> streams : 1
the two streams -> f : 2
two streams f -> previous : 1
two streams f -> is : 1
streams f previous -> program : 1
f previous program -> produces : 1
previous program produces -> output : 1
program produces output -> in : 1
produces output in -> an : 1
output in an -> interleaved : 2
in an interleaved -> the : 1
in an interleaved -> but : 1
an interleaved the -> output : 1
interleaved the output -> of : 1
program is shown -> as : 1
is shown as -> the : 1
shown as the -> reason : 1
as the reason -> for : 1
reason for this -> behavior : 1
reason for this -> could : 1
for this behavior -> has : 1
this behavior has -> to : 1
behavior has to -> do : 1
do with the -> post : 1
with the post -> processing : 1
the post processing -> of : 1
post processing of -> the : 1
processing of the -> stream : 1
the stream after -> the : 1
stream after the -> mapping : 1
after the mapping -> praseed : 1
the mapping praseed -> monsieur : 1
mapping praseed monsieur -> praseed : 1
praseed monsieur praseed -> peter : 1
praseed monsieur praseed -> sri : 1
monsieur praseed peter -> sri : 1
praseed peter sri -> praseed : 1
peter sri praseed -> monsieur : 1
sri praseed monsieur -> peter : 1
praseed monsieur peter -> sanjay : 1
monsieur peter sanjay -> sri : 1
peter sanjay sri -> peter : 1
sanjay sri peter -> monsieur : 1
sri peter monsieur -> sanjay : 1
peter monsieur sanjay -> raju : 1
monsieur sanjay raju -> sri : 1
sanjay raju sri -> sanjay : 1
raju sri sanjay -> monsieur : 1
sri sanjay monsieur -> raju : 1
sanjay monsieur raju -> sri : 1
monsieur raju sri -> raju : 2
raju sri raju -> hello : 2
sri raju hello -> following : 2
raju hello following -> marble : 2
hello following marble -> diagram : 2
following marble diagram -> shows : 2
following marble diagram -> clearly : 2
following marble diagram -> will : 1
diagram shows the -> schema : 1
shows the schema -> of : 1
the schema of -> the : 1
schema of the -> the : 1
the the map -> applies : 1
the map applies -> the : 1
map applies the -> lambda : 1
applies the lambda -> on : 1
the lambda on -> the : 1
lambda on the -> observable : 1
on the observable -> stream : 1
on the observable -> from : 1
the observable stream -> and : 1
the observable stream -> to : 1
the observable stream -> is : 1
the observable stream -> by : 1
stream and produces -> a : 1
and produces a -> new : 1
produces a new -> observable : 1
a new observable -> the : 1
a new observable -> without : 1
new observable the -> streams : 1
observable the streams -> produced : 1
the streams produced -> are : 1
streams produced are -> merged : 1
produced are merged -> together : 1
are merged together -> to : 1
merged together to -> provide : 1
together to provide -> the : 1
to provide the -> in : 1
provide the in -> the : 1
the the red -> ball : 1
the red ball -> gets : 1
red ball gets -> transformed : 1
ball gets transformed -> into : 1
gets transformed into -> a : 1
transformed into a -> pair : 1
into a pair -> of : 1
a pair of -> similarly : 1
a pair of -> int : 1
a pair of -> values : 1
pair of similarly -> colored : 1
of similarly colored -> whereas : 1
similarly colored whereas -> the : 1
colored whereas the -> output : 1
whereas the output -> of : 1
of the green -> and : 1
the green and -> blue : 1
green and blue -> balls : 1
and blue balls -> produces : 1
and blue balls -> produce : 1
blue balls produces -> interleaved : 1
balls produces interleaved -> diamonds : 1
produces interleaved diamonds -> as : 1
interleaved diamonds as -> output : 1
diamonds as output -> in : 1
as output in -> the : 1
output in the -> newly : 1
output in the -> order : 1
in the newly -> created : 1
newly created us -> look : 1
created us look -> at : 1
at the operator -> by : 1
the operator by -> going : 1
operator by going -> through : 1
going through a -> the : 1
through a the -> program : 1
a the program -> listing : 1
the program listing -> is : 1
program listing is -> the : 1
listing is the -> only : 1
the only change -> is : 1
only change is -> the : 1
change is the -> renaming : 1
is the renaming -> of : 1
the renaming of -> the : 1
renaming of the -> with : 1
of the with -> even : 1
the with even -> though : 1
is no difference -> in : 1
no difference in -> the : 1
difference in the -> there : 1
difference in the -> output : 1
in the there -> is : 1
in the there -> will : 1
is a marked -> difference : 1
a marked difference -> in : 1
marked difference in -> the : 1
the output maybe -> produces : 1
output maybe produces -> output : 1
maybe produces output -> that : 1
produces output that -> suits : 1
output that suits -> the : 1
that suits the -> mental : 1
suits the mental -> model : 1
the mental model -> of : 1
mental model of -> the : 1
of the namespace -> int : 1
the namespace int -> apply : 1
int apply concat -> map : 1
apply concat map -> on : 1
concat map on -> the : 1
map on the -> array : 1
of names concat -> map : 1
names concat map -> returns : 1
concat map returns -> an : 1
map returns an -> oncat : 1
returns an oncat -> returns : 1
an oncat returns -> t : 1
oncat returns t -> the : 1
observable and concatenated -> observable : 1
and concatenated observable -> auto : 1
concatenated observable auto -> values : 1
interleaved as concats -> the : 1
as concats the -> two : 1
concats the two -> streams : 1
streams f is -> how : 1
f is how -> the : 1
is how the -> output : 1
how the output -> will : 1
the output will -> praseed : 1
output will praseed -> monsieur : 1
will praseed monsieur -> praseed : 1
monsieur praseed sri -> praseed : 1
praseed sri praseed -> peter : 1
sri praseed peter -> monsieur : 1
praseed peter monsieur -> peter : 1
peter monsieur peter -> sri : 1
monsieur peter sri -> peter : 1
peter sri peter -> sanjay : 1
sri peter sanjay -> monsieur : 1
peter sanjay monsieur -> sanjay : 1
sanjay monsieur sanjay -> sri : 1
monsieur sanjay sri -> sanjay : 1
sanjay sri sanjay -> raju : 1
sri sanjay raju -> monsieur : 1
sanjay raju monsieur -> raju : 1
raju monsieur raju -> sri : 1
diagram shows unlike -> the : 1
shows unlike the -> flatmap : 1
unlike the flatmap -> marble : 1
the flatmap marble -> the : 1
flatmap marble the -> output : 1
marble the output -> is : 1
output is synchronized -> and : 1
is synchronized and -> blue : 1
synchronized and blue -> balls : 1
blue balls produce -> the : 1
balls produce the -> same : 1
the same colored -> output : 1
same colored output -> in : 1
colored output in -> the : 1
in the order -> in : 1
in the order -> that : 2
which the input -> is : 1
the input is -> the : 1
input is the -> case : 1
is the case -> of : 1
case of we -> got : 2
of we got -> the : 2
we got the -> output : 1
we got the -> value : 1
got the output -> in : 1
the output in -> an : 1
an interleaved but -> in : 1
interleaved but in -> the : 1
got the value -> in : 1
the order that -> we : 2
order that we -> expected : 1
order that we -> operators : 1
that we expected -> the : 1
we expected the -> what : 1
expected the what -> is : 1
the what is -> the : 1
is the real -> difference : 1
the real difference -> to : 1
real difference to -> make : 1
difference to make -> the : 1
make the difference -> take : 1
the difference take -> a : 1
difference take a -> look : 1
look at two -> and : 1
at two and -> look : 1
two and look -> into : 1
and look into -> the : 1
into the way -> the : 1
the way the -> concatenation : 1
the way the -> and : 1
way the concatenation -> of : 1
the concatenation of -> the : 1
concatenation of the -> streams : 1
of the streams -> it : 1
of the streams -> in : 1
of the streams -> corresponding : 1
the streams it -> basically : 1
streams it basically -> appends : 1
it basically appends -> the : 1
basically appends the -> contents : 1
appends the contents -> of : 1
the stream one -> after : 1
stream one after -> the : 1
one after the -> preserving : 1
one after the -> that : 1
after the preserving -> the : 1
the preserving the -> int : 1
preserving the int -> auto : 1
the int auto -> auto : 1
the int auto -> values : 1
int auto auto -> auto : 2
auto auto auto -> values : 2
auto auto values -> following : 2
auto values following -> marble : 2
values following marble -> diagram : 2
marble diagram clearly -> shows : 2
diagram clearly shows -> what : 2
clearly shows what -> happens : 2
shows what happens -> when : 2
what happens when -> a : 1
what happens when -> two : 1
what happens when -> we : 1
happens when a -> operator : 1
when a operator -> is : 1
a operator is -> applied : 1
operator is applied -> on : 1
is applied on -> two : 1
applied on two -> we : 1
on two we -> create : 1
two we create -> a : 1
we create a -> new : 1
we create a -> we : 1
create a new -> stream : 1
create a new -> observable : 1
create a new -> subscription : 1
new stream by -> appending : 1
stream by appending -> the : 1
appending the second -> to : 1
the second to -> the : 1
second to the -> contents : 1
to the contents -> of : 1
the this preserves -> the : 1
this preserves the -> see : 1
preserves the see -> what : 1
the see what -> happens : 1
happens when two -> streams : 1
when two streams -> are : 1
two streams are -> the : 1
streams are the -> following : 1
are the following -> code : 1
following code shows -> how : 1
code shows how -> you : 1
you can merge -> two : 1
can merge two -> int : 1
merge two int -> auto : 1
two int auto -> auto : 1
happens when we -> merge : 1
when we merge -> two : 1
we merge two -> observable : 1
merge two observable -> the : 1
two observable the -> contents : 1
observable the contents -> of : 1
of the output -> queue : 1
the output queue -> will : 1
output queue will -> be : 1
queue will be -> an : 1
will be an -> interleaved : 1
be an interleaved -> combination : 1
an interleaved combination -> of : 1
interleaved combination of -> two : 1
combination of two -> map : 1
of two map -> and : 1
two map and -> map : 1
and map more -> or : 1
map more or -> less : 1
or less do -> the : 1
less do the -> same : 1
do the same -> the : 1
same the difference -> lies : 1
the difference lies -> in : 1
difference lies in -> the : 1
lies in the -> way : 1
in the way -> values : 1
the way values -> are : 1
way values are -> combined : 1
values are combined -> the : 1
are combined the -> map : 1
combined the map -> uses : 1
the map uses -> the : 1
map uses the -> while : 1
map uses the -> in : 1
uses the while -> map : 1
the while map -> uses : 1
while map uses -> the : 1
uses the in -> the : 1
of the order -> does : 1
the order does -> not : 1
order does not -> the : 1
does not the -> operator : 1
not the operator -> appends : 1
the operator appends -> observables : 1
operator appends observables -> one : 1
appends observables one -> after : 1
observables one after -> the : 1
after the that -> is : 1
is why you -> get : 1
why you get -> the : 1
you get the -> values : 1
get the values -> in : 1
that we operators -> that : 1
we operators that -> are : 1
are of now -> understand : 1
of now understand -> the : 1
now understand the -> crux : 1
understand the crux -> of : 1
reactive programming because -> we : 1
programming because we -> covered : 1
because we covered -> basic : 1
we covered basic -> topics : 1
covered basic topics -> such : 1
basic topics such -> as : 1
as and there -> are : 1
are some more -> operators : 1
some more operators -> we : 1
more operators we -> should : 1
operators we should -> know : 1
we should know -> about : 1
should know about -> to : 1
know about to -> write : 1
about to write -> our : 1
write our logic -> in : 1
our logic in -> this : 1
logic in this -> we : 1
cover the and -> we : 1
the and we -> will : 2
the and we -> need : 1
the and we -> wrote : 1
will explore the -> which : 1
explore the which -> helps : 1
the which helps -> peek : 1
which helps peek -> into : 1
helps peek into -> the : 1
into the contents -> of : 1
of the int -> create : 1
the int create -> a : 1
int create a -> mapped : 1
int create a -> subscription : 1
int create a -> coordination : 1
int create a -> factory : 1
int create a -> subject : 1
create a mapped -> observable : 1
a mapped observable -> auto : 1
mapped observable auto -> ints : 1
observable auto ints -> int : 1
int n apply -> the : 1
n apply the -> tap : 1
apply the tap -> operator : 1
the tap operator -> will : 1
tap operator will -> act : 1
operator will act -> as : 1
as a operator -> auto : 1
a operator auto -> values : 1
operator auto values -> do : 1
auto values do -> some : 1
values do some -> action : 1
some action take -> a : 1
action take a -> look : 1
the the operator -> takes : 1
the operator takes -> an : 1
operator takes an -> observable : 2
takes an observable -> factory : 1
takes an observable -> as : 1
takes an observable -> and : 1
an observable factory -> as : 1
observable factory as -> a : 1
factory as a -> parameter : 1
a parameter to -> create : 1
parameter to create -> an : 1
an observable for -> each : 1
an observable for -> a : 1
an observable for -> have : 1
observable for each -> client : 1
observable for each -> an : 1
for each client -> that : 1
each client that -> subscribes : 1
client that subscribes -> to : 1
subscribes to in -> the : 1
to in the -> following : 1
to in the -> event : 1
following we invoke -> the : 1
invoke the when -> somebody : 1
the when somebody -> tries : 1
when somebody tries -> to : 1
somebody tries to -> connect : 1
tries to connect -> to : 1
to connect to -> the : 2
connect to the -> specified : 1
connect to the -> signals : 1
to the specified -> int : 1
the specified int -> auto : 1
specified int auto -> return : 1
int auto return -> int : 1
return int n -> auto : 1
int n auto -> ints : 1
n auto ints -> operator : 1
auto ints operator -> emits : 1
ints operator emits -> an : 1
operator emits an -> observable : 2
emits an observable -> that : 3
an observable that -> contains : 1
an observable that -> takes : 1
an observable that -> refers : 1
an observable that -> does : 1
an observable that -> emits : 7
an observable that -> never : 1
an observable that -> repeats : 1
observable that contains -> the : 1
that contains the -> contents : 1
that contains the -> rules : 1
that contains the -> from : 1
that contains the -> result : 1
contains the contents -> of : 1
of an each -> containing : 1
an each containing -> at : 1
each containing at -> most : 1
containing at most -> the : 1
at most the -> number : 1
most the number -> of : 1
number of items -> specified : 1
number of items -> emitted : 1
of items specified -> by : 1
items specified by -> the : 1
by the count -> this : 1
the count this -> will : 1
count this will -> help : 1
us to process -> the : 1
process the items -> in : 1
the items in -> a : 1
items in a -> manner : 1
items in a -> cpp : 1
a manner suitable -> for : 1
manner suitable for -> the : 1
suitable for the -> int : 1
for the int -> auto : 1
for the int -> char : 1
auto values operator -> emits : 1
values operator emits -> an : 1
observable that takes -> the : 1
that takes the -> interval : 1
takes the interval -> period : 1
the interval period -> as : 1
interval period as -> a : 1
period as a -> there : 1
as a there -> is : 1
as a there -> are : 1
a there is -> an : 1
is an option -> to : 2
an option to -> specify : 1
an option to -> return : 1
an option to -> wait : 1
option to specify -> the : 1
specify the object -> as : 1
the object as -> a : 1
there are various -> versions : 1
are various versions -> of : 1
various versions of -> this : 1
versions of this -> function : 1
of this function -> in : 1
this function in -> the : 1
function in the -> have : 1
in the have -> shown : 1
in the have -> a : 1
the have shown -> one : 1
have shown one -> in : 1
shown one in -> the : 1
one in the -> following : 1
the following int -> auto : 1
following int auto -> scheduler : 1
int auto scheduler -> auto : 1
auto scheduler auto -> period : 1
scheduler auto period -> auto : 1
auto period auto -> values : 1
period auto values -> final : 1
auto values final -> peek : 1
values final peek -> into : 1
final peek into -> the : 1
we covered rx -> programming : 1
covered rx programming -> model : 1
as the confluence -> of : 1
the confluence of -> the : 1
confluence of the -> patterns : 1
of the patterns -> and : 1
the patterns and -> get : 1
patterns and get -> a : 1
and get a -> comprehensive : 1
get a comprehensive -> view : 1
a comprehensive view -> of : 1
comprehensive view of -> the : 1
view of the -> whole : 1
of the whole -> you : 1
the whole you -> need : 1
whole you need -> to : 1
work with the -> programming : 1
programming model things -> make : 1
model things make -> much : 1
things make much -> at : 1
make much at -> some : 1
much at some -> reach : 1
at some reach -> a : 1
some reach a -> where : 1
reach a where -> everything : 1
a where everything -> will : 1
where everything will -> make : 1
everything will make -> so : 1
will make so -> we : 1
make so we -> have : 1
so we have -> covered : 1
so we have -> learned : 1
covered the following -> and : 1
the following and -> and : 1
the following and -> for : 1
the following and -> services : 1
following and and -> intermediate : 1
and and intermediate -> and : 1
and intermediate and -> intermediate : 1
intermediate and intermediate -> is : 1
and intermediate is -> just : 1
intermediate is just -> the : 1
is just the -> and : 1
just the and -> we : 1
need to cover -> many : 1
to cover many -> more : 1
cover many more -> topics : 1
many more topics -> to : 1
more topics to -> get : 1
topics to get -> familiar : 1
to get familiar -> with : 1
get familiar with -> the : 1
the programming they -> and : 1
programming they and -> cold : 1
they and cold -> observables : 1
and cold observables -> gui : 1
cold observables gui -> programming : 1
observables gui programming -> using : 1
programming using detailed -> exploration : 1
using detailed exploration -> of : 1
detailed exploration of -> rx : 1
exploration of rx -> components : 1
of rx components -> gui : 1
rx components gui -> programming : 1
components gui programming -> using : 1
programming using scheduling -> gui : 1
using scheduling gui -> programming : 1
scheduling gui programming -> using : 1
programming using gui -> systems : 1
using gui systems -> gui : 1
gui systems gui -> programming : 1
systems gui programming -> using : 1
programming using operators -> gui : 1
using operators gui -> programming : 1
operators gui programming -> using : 1
programming using design -> patterns : 1
using design patterns -> patterns : 1
design patterns patterns -> and : 1
patterns patterns and -> idioms : 1
for rx for -> robustness : 1
rx for robustness -> streams : 1
for robustness streams -> and : 1
robustness streams and -> handling : 1
and handling this -> we : 2
handling this we -> covered : 1
handling this we -> have : 1
we covered quite -> a : 1
covered quite a -> bit : 3
quite a bit -> of : 3
bit of ground -> in : 2
bit of ground -> on : 1
ground in understanding -> the : 1
in understanding the -> rx : 1
understanding the rx -> programming : 1
programming model in -> and : 1
programming model in -> which : 1
programming model in -> to : 1
programming model in -> the : 1
model in and -> rxcpp : 1
in and rxcpp -> in : 1
rxcpp in we -> started : 1
in we started -> with : 1
started with a -> conceptual : 1
started with a -> quick : 1
started with a -> set : 1
paradigm and moved -> quickly : 1
and moved quickly -> to : 1
moved quickly to -> writing : 1
some basic rxcpp -> after : 1
basic rxcpp after -> introducing : 1
rxcpp after introducing -> rx : 1
after introducing rx -> marble : 1
introducing rx marble -> we : 1
rx marble we -> learned : 1
marble we learned -> about : 1
the rxcpp we -> also : 1
the rxcpp we -> have : 1
the rxcpp we -> started : 1
the rxcpp we -> visited : 1
rxcpp we also -> introduced : 1
we also introduced -> the : 1
also introduced the -> important : 1
introduced the important -> topic : 1
the important topic -> of : 2
important topic of -> and : 1
important topic of -> subjects : 1
topic of and -> finally : 1
of and finally -> we : 1
and finally we -> discussed : 1
finally we discussed -> the : 1
discussed the difference -> between : 1
the difference between -> the : 1
difference between the -> map : 1
between the map -> and : 1
and map in -> the : 1
map in the -> next : 1
will cover and -> advanced : 1
cover and advanced -> and : 1
and advanced and -> topics : 1
advanced and topics -> that : 1
and topics that -> we : 1
topics that we -> have : 1
have not covered -> in : 1
not covered in -> this : 1
this the key -> the : 1
the key the -> previous : 1
the key the -> schedulers : 1
key the previous -> we : 1
previous we were -> introduced : 1
we were introduced -> to : 1
were introduced to -> the : 1
introduced to the -> rxcpp : 1
programming we wrote -> some : 1
we wrote some -> programs : 1
programs to understand -> the : 1
understand the workings -> of : 1
the workings of -> the : 3
the workings of -> int : 1
we also covered -> the : 2
also covered the -> essential : 1
also covered the -> a : 1
covered the essential -> elements : 1
covered the essential -> aspects : 1
the essential elements -> of : 1
essential elements of -> the : 1
elements of the -> rxcpp : 3
we will in -> some : 1
will in some -> the : 1
in some the -> key : 1
some the key -> elements : 1
library in particular -> and : 1
in particular and -> the : 1
particular and the -> reactive : 1
and the reactive -> programming : 2
model in which -> include : 1
in which include -> the : 1
which include the -> and : 1
include the and -> their : 1
the and their -> variants : 1
their variants the -> key : 1
variants the key -> aspects : 1
aspects of reactive -> programming : 2
reactive programming are -> as : 1
reactive programming are -> closely : 1
programming are as -> are : 1
are as are -> streams : 1
as are streams -> to : 1
are streams to -> which : 1
streams to which -> observers : 1
to which observers -> can : 1
which observers can -> subscribe : 1
observers can subscribe -> for : 1
can subscribe for -> subject : 1
subscribe for subject -> is : 1
for subject is -> a : 1
subject is a -> combination : 1
is a combination -> of : 1
a combination of -> observables : 1
a combination of -> observers : 1
combination of observables -> and : 1
observables and execute -> the : 1
execute the action -> associated : 1
the action associated -> with : 1
action associated with -> operators : 1
associated with operators -> and : 1
with operators and -> help : 1
operators and help -> the : 1
and help the -> flow : 1
help the flow -> of : 1
the flow of -> data : 1
the flow of -> the : 1
the flow of -> these : 1
flow of data -> from : 1
of data from -> observables : 1
data from observables -> to : 1
from observables to -> are : 1
observables to are -> functions : 1
to are functions -> that : 1
that take an -> observable : 1
take an observable -> and : 1
observable and emit -> another : 1
observable and emit -> this : 2
observable and emit -> only : 1
and emit another -> the : 1
emit another the -> previous : 1
another the previous -> we : 1
previous we created -> observables : 1
previous we created -> an : 1
we created observables -> from : 1
created observables from -> scratch : 1
observables from scratch -> and : 1
from scratch and -> wrote : 1
scratch and wrote -> subscribers : 1
and wrote subscribers -> to : 1
wrote subscribers to -> those : 1
subscribers to those -> in : 1
to those in -> all : 1
those in all -> of : 1
in all of -> our : 1
in all of -> these : 1
all of our -> the : 1
of our the -> observables : 1
our the observables -> created : 1
the observables created -> an : 1
observables created an -> instance : 1
created an instance -> of : 1
the the class -> produces : 1
the the class -> also : 1
the the class -> demonstrates : 1
the the class -> is : 1
the class produces -> an : 1
class produces an -> event : 1
produces an event -> in : 1
an event in -> other : 1
event in other -> observables : 1
in other observables -> are : 1
other observables are -> functions : 1
observables are functions -> that : 1
functions that connect -> subscribers : 1
that connect subscribers -> to : 1
connect subscribers to -> before : 1
subscribers to before -> we : 1
to before we -> dissect : 1
before we dissect -> an : 1
we dissect an -> observable : 1
dissect an observable -> and : 1
observable and the -> core : 1
observable and the -> collection : 1
and the core -> activities : 1
the core activities -> related : 1
core activities related -> to : 1
activities related to -> observable : 1
related to observable -> is : 1
to observable is -> a : 1
observable is a -> function : 1
observable is a -> reason : 1
takes an observer -> as : 1
an observer as -> a : 1
observer as a -> parameter : 1
parameter and returns -> a : 2
returns a observable -> connects : 1
a observable connects -> an : 1
observable connects an -> observer : 1
connects an observer -> to : 1
observer to a -> producer : 1
to a producer -> is : 1
to a producer -> instance : 1
a producer is -> opaque : 1
a producer is -> a : 1
producer is opaque -> for : 1
is opaque for -> producer : 1
opaque for producer -> is : 1
for producer is -> a : 1
producer is a -> source : 2
is a source -> of : 2
a source of -> values : 2
a source of -> data : 1
a source of -> confusion : 1
a source of -> inspiration : 1
source of values -> for : 2
of values for -> an : 2
values for an -> observer : 1
values for an -> producers : 1
for an observer -> is : 1
an observer is -> an : 1
an observer is -> attached : 1
observer is an -> object : 1
object that has -> the : 1
that has the -> and : 1
that has the -> same : 1
has the and -> a : 1
and a producer -> is : 1
for an producers -> can : 1
an producers can -> be : 1
producers can be -> dom : 1
can be dom -> iterators : 1
be dom iterators -> over : 1
dom iterators over -> and : 1
iterators over and -> so : 1
over and so -> they : 1
and so they -> can : 1
so they can -> be : 1
can be anything -> that : 1
be anything that -> can : 1
anything that can -> be : 1
be a source -> of : 1
source of data -> that : 1
of data that -> can : 1
data that can -> be : 1
be passed on -> to : 1
passed on to -> an : 1
passed on to -> the : 1
on to an -> next : 1
to an next -> in : 1
an next in -> versus : 1
next in versus -> cold : 1
in versus cold -> most : 1
versus cold most -> of : 1
cold most of -> the : 1
of the examples -> in : 1
the examples in -> the : 1
saw that producers -> were : 1
that producers were -> created : 1
producers were created -> in : 1
were created in -> observable : 1
created in observable -> a : 1
in observable a -> producer : 1
observable a producer -> can : 1
a producer can -> be : 1
producer can be -> created : 1
producer can be -> put : 1
be created outside -> an : 1
created outside an -> observable : 1
outside an observable -> and : 1
observable and a -> reference : 1
and a reference -> to : 1
to the producer -> can : 1
the producer can -> be : 1
be put inside -> the : 1
put inside the -> observable : 1
inside the observable -> an : 1
the observable an -> observable : 1
observable an observable -> that : 1
observable that refers -> to : 1
that refers to -> a : 1
refers to a -> producer : 1
a producer instance -> inside : 1
producer instance inside -> it : 1
instance inside it -> is : 1
inside it is -> called : 1
called a hot -> any : 1
a hot any -> observable : 1
hot any observable -> we : 1
any observable we -> have : 1
observable we have -> created : 1
we have created -> a : 2
created a producer -> inside : 1
a producer inside -> is : 1
producer inside is -> called : 1
inside is called -> a : 1
called a cold -> to : 1
a cold to -> make : 1
cold to make -> matters : 1
make matters write -> a : 1
matters write a -> program : 1
to demonstrate a -> cold : 1
demonstrate a cold -> int : 1
a cold int -> char : 1
cold int char -> get : 1
int char get -> a : 1
char get a -> coordination : 1
get a coordination -> auto : 2
a coordination auto -> eventloop : 1
a coordination auto -> coordination : 1
coordination auto eventloop -> create : 1
auto eventloop create -> a : 3
eventloop create a -> cold : 3
create a cold -> observable : 3
a cold observable -> auto : 1
a cold observable -> will : 1
a cold observable -> into : 1
a cold observable -> to : 1
a cold observable -> convert : 2
cold observable auto -> values : 1
auto values interval -> creates : 1
values interval creates -> a : 1
interval creates a -> cold : 1
creates a cold -> as : 1
a cold as -> the : 1
cold as the -> producer : 1
as the producer -> for : 1
the producer for -> the : 1
producer for the -> event : 1
the event stream -> is : 1
the event stream -> using : 1
event stream is -> instantiated : 1
stream is instantiated -> by : 1
is instantiated by -> the : 1
instantiated by the -> a : 1
by the a -> cold : 1
the a cold -> observable : 1
cold observable will -> emit : 1
observable will emit -> data : 1
will emit data -> when : 1
emit data when -> a : 1
data when a -> subscription : 1
when a subscription -> or : 1
a subscription or -> an : 1
a subscription or -> the : 1
subscription or an -> observer : 1
or an observer -> is : 1
observer is attached -> to : 1
is attached to -> the : 1
attached to the -> even : 1
attached to the -> subject : 2
attached to the -> class : 1
to the even -> if : 1
the even if -> there : 1
even if there -> is : 1
is a delay -> in : 1
a delay in -> the : 1
delay in the -> result : 1
in the result -> will : 1
in the result -> the : 1
the result will -> be : 2
result will be -> this : 1
result will be -> send : 1
be this means -> that : 1
means that we -> will : 1
means that we -> know : 1
will get all -> the : 1
get all the -> data : 1
the data emitted -> by : 1
data emitted by -> the : 1
emitted by the -> subscribe : 1
emitted by the -> program : 1
emitted by the -> source : 9
emitted by the -> most : 1
the subscribe twice -> make : 1
subscribe twice make -> a : 1
twice make a -> blocking : 1
make a blocking -> subscription : 3
make a blocking -> call : 2
a blocking subscription -> to : 3
blocking subscription to -> see : 4
subscription to see -> the : 3
subscription to see -> results : 1
see the results -> wait : 3
the results wait -> for : 3
results wait for -> two : 3
wait for two -> seconds : 9
for two seconds -> output : 2
for two seconds -> the : 2
for two seconds -> writing : 1
for two seconds -> is : 1
for two seconds -> have : 1
for two seconds -> return : 2
two seconds output -> emitted : 1
two seconds output -> of : 1
seconds output emitted -> by : 1
output emitted by -> the : 1
by the program -> is : 1
program is as -> for : 1
program is as -> we : 1
program is as -> thread : 3
program is as -> display : 1
program is as -> error : 1
is as for -> each : 1
as for each -> the : 1
each the order -> of : 1
order of content -> in : 1
of content in -> the : 1
content in the -> console : 1
in the console -> may : 1
the console may -> as : 1
console may as -> we : 1
may as we -> are : 1
as we are -> scheduling : 1
we are scheduling -> the : 1
are scheduling the -> execution : 1
scheduling the execution -> of : 1
the observer methods -> in : 1
the observer methods -> are : 1
observer methods in -> the : 1
methods in the -> same : 1
the same there -> be : 1
same there be -> any : 1
there be any -> data : 1
be any data -> loss : 1
any data loss -> due : 1
data loss due -> to : 1
loss due to -> the : 1
to the delay -> in : 1
the delay in -> oncompleted : 1
delay in oncompleted -> can : 1
in oncompleted can -> convert : 1
oncompleted can convert -> a : 1
convert a cold -> observable : 1
cold observable into -> a : 1
observable into a -> hot : 1
observable into a -> cold : 1
observable into a -> connectable : 1
into a hot -> observable : 1
a hot observable -> by : 1
a hot observable -> will : 1
a hot observable -> emits : 1
a hot observable -> into : 1
a hot observable -> using : 1
hot observable by -> calling : 1
observable by calling -> the : 2
calling the the -> consequence : 1
calling the the -> method : 1
the the consequence -> of : 1
the consequence of -> converting : 1
consequence of converting -> a : 1
of converting a -> cold : 1
converting a cold -> observable : 1
cold observable to -> a : 1
cold observable to -> hot : 2
observable to a -> hot : 1
observable to a -> set : 1
to a hot -> observable : 1
hot observable will -> be : 1
observable will be -> data : 1
will be data -> being : 1
be data being -> missed : 1
data being missed -> by : 1
being missed by -> later : 1
missed by later -> a : 1
by later a -> hot : 1
later a hot -> observable : 1
hot observable emits -> data : 1
hot observable emits -> whether : 1
observable emits data -> whether : 1
emits data whether -> there : 1
data whether there -> is : 1
whether there is -> a : 2
is a subscription -> or : 1
subscription or the -> following : 1
or the following -> program : 1
or the following -> table : 1
program demonstrates int -> char : 1
demonstrates int char -> auto : 1
int char auto -> eventloop : 2
int char auto -> values : 1
int char auto -> observable : 1
char auto eventloop -> create : 2
cold observable convert -> cold : 2
observable convert cold -> observable : 2
convert cold observable -> to : 2
observable to hot -> observable : 2
to hot observable -> using : 2
hot observable using -> auto : 2
hot observable using -> the : 1
observable using auto -> values : 2
using auto values -> subscribe : 2
auto values subscribe -> twice : 2
auto values subscribe -> from : 1
auto values subscribe -> first : 1
values subscribe twice -> connect : 1
values subscribe twice -> start : 1
subscribe twice connect -> to : 1
twice connect to -> start : 1
connect to start -> emitting : 1
to start emitting -> values : 1
start emitting values -> make : 2
emitting values make -> a : 2
values make a -> blocking : 2
two seconds the -> next : 1
two seconds the -> values : 1
seconds the next -> we : 1
at the mechanism -> supported : 1
the mechanism supported -> by : 1
mechanism supported by -> from : 1
supported by from -> a : 1
by from a -> programming : 1
a programming interface -> this : 1
programming interface this -> is : 1
interface this is -> just : 1
this is just -> a : 1
just a small -> take : 1
a small take -> a : 1
small take a -> look : 1
at this int -> char : 1
this int char -> auto : 1
subscribe twice start -> emitting : 1
twice start emitting -> values : 1
seconds output of -> the : 1
is as we -> can : 1
is as we -> discussed : 1
see that the -> output : 1
output is well -> that : 1
is well that -> the : 1
well that the -> output : 1
output is printed -> in : 1
is printed in -> the : 1
printed in the -> correct : 1
in the correct -> oncompleted : 1
the correct oncompleted -> observables : 1
correct oncompleted observables -> and : 1
oncompleted observables and -> the : 1
the replay hot -> observable : 1
replay hot observable -> emits : 1
observable emits whether -> there : 1
emits whether there -> is : 1
is a subscriber -> available : 1
a subscriber available -> or : 1
subscriber available or -> this : 1
available or this -> can : 1
or this can -> be : 1
be an issue -> there : 1
an issue there -> is : 1
issue there is -> a : 1
a mechanism within -> reactive : 1
mechanism within reactive -> programming : 1
within reactive programming -> to : 1
programming to cache -> data : 1
to cache data -> so : 1
cache data so -> that : 1
data so that -> later : 1
so that later -> subscribers : 1
that later subscribers -> can : 1
later subscribers can -> be : 1
subscribers can be -> notified : 1
can be notified -> of : 1
be notified of -> the : 1
notified of the -> data : 1
the data available -> with : 1
data available with -> an : 1
available with an -> we : 1
with an we -> can : 1
use the method -> to : 1
method to create -> such : 1
to create such -> an : 1
create such an -> write : 1
such an write -> a : 1
an write a -> program : 1
that will demonstrate -> the : 1
demonstrate the replay -> which : 1
the replay which -> is : 1
replay which is -> useful : 1
which is useful -> when : 1
is useful when -> writing : 1
is useful when -> we : 1
useful when writing -> hot : 1
when writing hot -> int : 1
writing hot int -> char : 1
hot int char -> auto : 1
char auto values -> subscribe : 1
values subscribe from -> the : 1
subscribe from the -> beginning : 1
from the beginning -> start : 1
the beginning start -> emitting : 1
beginning start emitting -> wait : 1
start emitting wait -> before : 1
emitting wait before -> subscribing : 1
wait before subscribing -> wait : 1
before subscribing wait -> for : 1
subscribing wait for -> two : 1
two seconds writing -> reactive : 1
seconds writing reactive -> you : 1
writing reactive you -> really : 1
reactive you really -> need : 1
you really need -> to : 1
really need to -> understand : 1
need to understand -> the : 2
understand the semantic -> difference : 1
the semantic difference -> between : 1
semantic difference between -> hot : 1
difference between hot -> and : 1
between hot and -> cold : 1
hot and cold -> we : 2
and cold we -> have : 1
and cold we -> covered : 1
cold we have -> touched : 1
we have touched -> on : 1
have touched on -> only : 1
touched on only -> some : 1
on only some -> aspects : 1
only some aspects -> of : 1
some aspects of -> please : 1
aspects of please -> refer : 1
of please refer -> to : 1
please refer to -> the : 1
refer to the -> rxcpp : 1
refer to the -> following : 1
refer to the -> source : 1
the rxcpp documentation -> and : 1
the rxcpp documentation -> to : 1
rxcpp documentation and -> reactivex : 1
documentation and reactivex -> documentation : 1
and reactivex documentation -> to : 1
reactivex documentation to -> learn : 1
to learn there -> are : 1
learn there are -> countless : 1
there are countless -> articles : 1
are countless articles -> available : 1
countless articles available -> on : 1
articles available on -> the : 1
available on the -> internet : 1
on the internet -> on : 1
the internet on -> this : 1
internet on this -> and : 1
on this and -> their : 1
this and their -> variants : 1
their variants observer -> subscribes : 1
variants observer subscribes -> to : 1
observer subscribes to -> an : 1
subscribes to an -> observable : 1
observable and waits -> for : 1
and waits for -> events : 1
waits for events -> to : 1
for events to -> be : 1
events to be -> observers : 1
events to be -> and : 1
to be observers -> were : 1
be observers were -> already : 1
observers were already -> covered : 1
were already covered -> in : 1
already covered in -> the : 1
previous we will -> be : 1
focusing on which -> are : 1
on which are -> a : 1
which are a -> combination : 1
are a combination -> of : 1
combination of observers -> and : 1
of observers and -> a : 1
observers and a -> subscriber : 1
and a subscriber -> has : 1
a subscriber has -> the : 1
subscriber has the -> facility : 1
has the facility -> to : 1
the facility to -> with : 1
facility to with -> a : 1
to with a -> vanilla : 1
with a vanilla -> you : 1
a vanilla you -> can : 1
vanilla you can -> only : 1
you can only -> the : 1
can only the -> following : 1
only the following -> program : 1
program will explain -> these : 1
will explain these -> concepts : 1
explain these concepts -> very : 1
these concepts very -> int : 1
concepts very int -> create : 1
very int create -> a : 1
create a subscription -> object : 1
create a subscription -> auto : 1
a subscription object -> auto : 1
subscription object auto -> subscription : 1
object auto subscription -> create : 1
auto subscription create -> a : 1
subscription create a -> subscription : 1
a subscription auto -> subscriber : 1
subscription auto subscriber -> if : 1
subscription auto subscriber -> return : 1
auto subscriber if -> demonstrates : 1
subscriber if demonstrates -> un : 1
if demonstrates un -> subscribes : 1
demonstrates un subscribes -> for : 1
un subscribes for -> i : 1
subscribes for i -> i : 1
if return writing -> nontrivial : 1
return writing nontrivial -> programs : 1
writing nontrivial programs -> with : 1
nontrivial programs with -> concurrency : 1
programs with concurrency -> and : 1
with concurrency and -> the : 1
concurrency and the -> ability : 1
ability to subscribe -> and : 1
to subscribe and -> unsubscribe : 1
and unsubscribe is -> very : 1
unsubscribe is very -> take : 1
is very take -> a : 1
very take a -> deeper : 1
take a deeper -> look : 1
a deeper look -> at : 1
deeper look at -> the : 1
at the topic -> by : 1
the topic by -> consulting : 1
topic by consulting -> the : 1
by consulting the -> rxcpp : 1
by consulting the -> we : 1
consulting the rxcpp -> subject : 1
the rxcpp subject -> is : 1
rxcpp subject is -> an : 1
subject is an -> entity : 1
is an entity -> simultaneously : 1
is an entity -> or : 1
an entity simultaneously -> an : 1
entity simultaneously an -> observer : 1
simultaneously an observer -> and : 1
an observer and -> an : 1
an observer and -> act : 1
observer and an -> it : 1
and an it -> helps : 1
an it helps -> to : 1
helps to relay -> notifications : 1
to relay notifications -> from : 1
relay notifications from -> one : 1
notifications from one -> observable : 1
from one observable -> to : 1
one observable to -> a : 1
to a set -> of : 1
can implement sophisticated -> techniques : 1
implement sophisticated techniques -> such : 1
sophisticated techniques such -> as : 1
as the caching -> and : 1
the caching and -> buffering : 1
caching and buffering -> of : 1
and buffering of -> we : 1
buffering of we -> can : 1
also use a -> subject : 1
use a subject -> to : 1
a subject to -> convert : 1
a subject to -> retrieve : 1
subject to convert -> a : 1
to convert a -> hot : 1
convert a hot -> observable : 1
hot observable into -> a : 1
into a cold -> there : 1
a cold there -> are : 1
cold there are -> four : 1
there are four -> variants : 1
are four variants -> of : 1
four variants of -> subjects : 1
variants of subjects -> implemented : 1
variants of subjects -> scheduler : 1
of subjects implemented -> in : 1
subjects implemented in -> they : 1
implemented in they -> are : 1
are as write -> a : 1
as write a -> simple : 1
that will subscribe -> data : 1
will subscribe data -> as : 1
subscribe data as -> an : 1
data as an -> observer : 1
as an observer -> and : 1
observer and act -> as : 1
and act as -> an : 1
as an observable -> for : 1
observable for a -> pair : 1
for a pair -> of : 1
pair of int -> char : 1
of int char -> create : 1
of int char -> auto : 1
of int char -> instantiate : 1
int char create -> an : 2
char create an -> instance : 2
instance of subject -> retreive : 1
of subject retreive -> the : 1
subject retreive the -> observable : 1
retreive the observable -> attached : 1
the observable attached -> to : 1
observable attached to -> the : 1
to the subject -> auto : 2
the subject auto -> observable : 1
the subject auto -> subscriber : 1
subject auto observable -> subscribe : 1
observable subscribe twice -> int : 1
subscribe twice int -> v : 1
twice int v -> int : 1
int v int -> v : 2
v int v -> get : 1
v int v -> auto : 1
int v get -> the : 2
v get the -> subscriber : 2
get the subscriber -> interface : 2
the subscriber interface -> attached : 1
the subscriber interface -> auto : 1
subscriber interface attached -> to : 1
interface attached to -> the : 1
subject auto subscriber -> emit : 1
auto subscriber emit -> series : 1
auto subscriber emit -> data : 1
subscriber emit series -> of : 1
emit series of -> values : 1
series of values -> wait : 1
of values wait -> for : 1
values wait for -> two : 1
two seconds is -> a : 1
seconds is a -> variant : 1
is a variant -> of : 2
a variant of -> subject : 2
variant of subject -> that : 2
of subject that -> stores : 2
subject that stores -> the : 1
subject that stores -> data : 1
stores the last -> emitted : 1
the last emitted -> value : 1
last emitted value -> as : 1
emitted value as -> part : 1
value as part -> of : 1
of the any -> new : 1
the any new -> subscriber : 1
any new subscriber -> will : 1
new subscriber will -> get : 1
subscriber will get -> the : 1
get the it -> behaves : 1
the it behaves -> like : 1
it behaves like -> a : 1
behaves like a -> normal : 1
like a normal -> is : 1
a normal is -> also : 1
normal is also -> called : 1
also called a -> property : 1
called a property -> or : 1
a property or -> a : 1
a property or -> variable : 1
property or a -> it : 1
or a it -> is : 1
it is useful -> in : 1
is useful in -> scenarios : 1
useful in scenarios -> where : 1
in scenarios where -> we : 1
scenarios where we -> update : 1
where we update -> a : 1
we update a -> particular : 1
update a particular -> cell : 1
a particular cell -> or : 1
particular cell or -> memory : 1
cell or memory -> with : 1
or memory with -> a : 1
memory with a -> series : 1
with a series -> of : 1
series of such -> as : 1
such as in -> a : 1
in a write -> a : 1
a write a -> program : 1
a write a -> class : 1
program that demonstrates -> the : 2
that demonstrates the -> workings : 1
that demonstrates the -> usage : 1
that demonstrates the -> aggregation : 1
demonstrates the workings -> of : 3
workings of int -> char : 1
char auto observable -> int : 1
auto observable int -> v : 2
observable int v -> int : 1
observable int v -> get : 1
int v auto -> subscriber : 1
v auto subscriber -> int : 1
auto subscriber int -> n : 1
subscriber int n -> printf : 1
int n printf -> value : 1
n printf value -> is : 1
printf value is -> a : 1
value is a -> variant : 1
that stores data -> that : 1
stores data that -> has : 1
data that has -> already : 1
data that has -> been : 1
that has already -> been : 1
has already been -> we : 1
has already been -> there : 1
already been we -> can : 1
been we can -> specify : 1
we can specify -> parameters : 1
can specify parameters -> to : 1
specify parameters to -> indicate : 1
parameters to indicate -> how : 1
to indicate how -> many : 1
indicate how many -> values : 1
how many values -> have : 1
many values have -> to : 1
values have to -> be : 1
to be retained -> by : 1
be retained by -> the : 1
retained by the -> this : 1
this is very -> handy : 1
is very handy -> when : 1
very handy when -> dealing : 1
handy when dealing -> with : 1
when dealing with -> hot : 1
dealing with hot -> prototypes : 1
with hot prototypes -> for : 1
hot prototypes for -> various : 1
prototypes for various -> replay : 1
for various replay -> overloads : 1
various replay overloads -> are : 1
replay overloads are -> as : 1
overloads are as -> replay : 1
are as replay -> coordination : 1
as replay coordination -> replay : 1
replay coordination replay -> coordination : 1
replay coordination replay -> duration : 1
coordination replay coordination -> replay : 1
coordination replay duration -> coordination : 1
replay duration coordination -> write : 1
duration coordination write -> a : 1
coordination write a -> program : 1
program to see -> the : 1
see the semantics -> of : 1
semantics of int -> char : 1
char instantiate a -> replaysubject : 1
instantiate a replaysubject -> get : 1
a replaysubject get -> the : 1
replaysubject get the -> observable : 1
get the observable -> interface : 1
the observable interface -> auto : 1
the observable interface -> and : 1
observable interface auto -> observable : 1
interface auto observable -> int : 1
subscriber interface auto -> subscriber : 1
interface auto subscriber -> emit : 1
subscriber emit data -> add : 1
emit data add -> a : 1
data add a -> new : 1
add a new -> subscriber : 1
a new subscriber -> a : 1
new subscriber a -> normal : 1
subscriber a normal -> subject : 1
a normal subject -> will : 1
normal subject will -> drop : 1
subject will drop -> data : 1
will drop data -> replay : 1
drop data replay -> subject : 1
data replay subject -> will : 1
replay subject will -> not : 1
subject will not -> int : 1
will not int -> v : 1
not int v -> wait : 1
int v wait -> for : 1
v wait for -> two : 1
two seconds have -> covered : 1
seconds have covered -> three : 1
have covered three -> variants : 1
covered three variants -> of : 1
variants of a -> subject : 1
of a subject -> in : 1
a subject in -> this : 1
a subject in -> its : 1
subject in this -> the : 1
this the primary -> use : 1
the primary use -> case : 1
the primary use -> cases : 1
primary use case -> is : 1
use case is -> harnessing : 1
use case is -> aggregating : 1
case is harnessing -> events : 1
is harnessing events -> and : 1
harnessing events and -> data : 1
different sources by -> using : 1
sources by using -> the : 1
using the observable -> interface : 1
using the observable -> supplied : 1
observable interface and -> allowing : 1
interface and allowing -> a : 1
and allowing a -> group : 1
allowing a group -> of : 1
a group of -> subscribers : 1
a group of -> engineers : 1
group of subscribers -> to : 1
of subscribers to -> consume : 1
subscribers to consume -> the : 1
consume the harnessed -> can : 1
the harnessed can -> act : 1
harnessed can act -> as : 1
act as both -> an : 1
as both an -> observable : 1
both an observable -> and : 1
observable and an -> observer : 1
observer to process -> streams : 1
to process streams -> of : 1
process streams of -> is : 1
streams of is -> useful : 1
of is useful -> for : 1
is useful for -> monitoring : 1
useful for monitoring -> changes : 1
for monitoring changes -> in : 1
monitoring changes in -> a : 1
changes in a -> property : 1
in a property -> or : 1
property or variable -> over : 1
or variable over -> a : 1
variable over a -> period : 1
over a period -> of : 1
a period of -> will : 1
period of will -> help : 1
of will help -> you : 1
avoid the loss -> of : 1
the loss of -> data : 1
loss of data -> due : 1
of data due -> to : 1
data due to -> latency : 1
due to latency -> in : 1
to latency in -> a : 1
latency in a -> is : 1
in a is -> a : 1
a is a -> subject : 1
is a subject -> that : 1
is a subject -> in : 1
a subject that -> has : 1
subject that has -> synchronization : 1
that has synchronization -> logic : 1
has synchronization logic -> built : 1
synchronization logic built -> into : 1
logic built into -> its : 1
built into its -> rxcpp : 1
into its rxcpp -> library : 1
its rxcpp library -> provides : 1
rxcpp library provides -> a : 1
rxcpp library provides -> mechanisms : 1
library provides a -> declarative : 1
provides a declarative -> threading : 1
a declarative threading -> thanks : 1
declarative threading thanks -> to : 1
threading thanks to -> the : 1
to the robust -> scheduling : 1
the robust scheduling -> subsystem : 1
robust scheduling subsystem -> packaged : 1
scheduling subsystem packaged -> with : 1
subsystem packaged with -> from : 1
packaged with from -> an : 1
with from an -> data : 1
from an data -> can : 1
an data can -> be : 1
can be streamed -> through : 1
be streamed through -> different : 1
streamed through different -> paths : 1
through different paths -> along : 1
different paths along -> the : 1
paths along the -> change : 1
along the change -> propagation : 1
change propagation by -> giving : 1
propagation by giving -> hints : 1
by giving hints -> to : 1
giving hints to -> the : 1
hints to the -> stream : 1
stream processing we -> can : 1
processing we can -> schedule : 1
we can schedule -> the : 1
can schedule the -> execution : 1
execution in different -> the : 1
in different the -> same : 1
different the same -> or : 1
the same or -> a : 1
same or a -> background : 1
or a background -> this : 1
a background this -> helps : 1
background this helps -> to : 1
this helps to -> capture : 1
helps to capture -> the : 1
to capture the -> intent : 1
capture the intent -> of : 1
of the programmer -> much : 1
the programmer much -> declarative : 1
programmer much declarative -> scheduling : 1
much declarative scheduling -> model : 1
declarative scheduling model -> in : 1
scheduling model in -> rxcpp : 1
model in rxcpp -> is : 1
in rxcpp is -> possible : 1
rxcpp is possible -> because : 1
is possible because -> of : 1
is possible because -> the : 1
of the immutability -> of : 1
the immutability of -> the : 1
immutability of the -> streams : 1
the streams in -> an : 1
streams in an -> a : 1
in an a -> stream : 1
a stream operator -> takes : 1
stream operator takes -> an : 1
an observable as -> a : 1
observable as a -> parameter : 1
returns a fresh -> observable : 1
a fresh observable -> as : 1
a fresh observable -> for : 1
fresh observable as -> the : 1
observable as the -> the : 1
as the the -> input : 1
the the input -> parameter : 1
input parameter is -> not : 1
parameter is not -> this : 1
is not this -> helps : 1
not this helps -> in : 1
this helps in -> the : 1
in the scheduling -> subsystem : 1
the scheduling subsystem -> of : 1
scheduling subsystem of -> rxcpp : 1
subsystem of rxcpp -> contains : 1
of rxcpp contains -> the : 1
rxcpp contains the -> following : 1
contains the following -> of : 1
contains the following -> data : 1
the following of -> rxcpp : 1
following of rxcpp -> borrows : 1
of rxcpp borrows -> its : 1
rxcpp borrows its -> scheduling : 1
borrows its scheduling -> architecture : 1
its scheduling architecture -> from : 1
scheduling architecture from -> the : 1
architecture from the -> on : 1
from the on -> scheduler : 1
the on scheduler -> and : 1
on scheduler and -> worker : 1
scheduler and worker -> idioms : 1
and worker idioms -> used : 1
worker idioms used -> by : 1
idioms used by -> here : 1
used by here -> are : 1
by here are -> some : 1
are some important -> facts : 1
some important facts -> scheduler : 1
important facts scheduler -> has : 1
facts scheduler has -> a : 1
scheduler has a -> scheduler : 1
has a scheduler -> can : 1
a scheduler can -> create : 1
scheduler can create -> lots : 1
can create lots -> of : 1
create lots of -> workers : 1
lots of workers -> in : 1
of workers in -> the : 1
workers in the -> worker : 1
in the worker -> owns : 1
in the worker -> thread : 1
the worker owns -> a : 1
worker owns a -> queue : 1
owns a queue -> of : 1
a queue of -> schedulable : 1
queue of schedulable -> in : 1
of schedulable in -> the : 1
schedulable in the -> owns : 1
in the owns -> a : 1
the owns a -> function : 1
owns a function -> and : 1
function and has -> a : 1
and has a -> functions : 1
and has a -> coordinator : 1
has a functions -> a : 1
a functions a -> factory : 1
functions a factory -> for : 1
a factory for -> a : 1
a factory for -> the : 1
factory for a -> coordinator : 1
for a coordinator -> and : 1
a coordinator and -> has : 1
a coordinator and -> create : 1
coordinator and has -> a : 1
has a coordinator -> has : 1
a coordinator has -> a : 1
coordinator has a -> worker : 1
has a worker -> and : 1
a worker and -> is : 1
worker and is -> a : 1
is a factory -> for : 1
factory for the -> observables : 1
for the observables -> and : 1
the observables and -> have : 1
observables and have -> been : 1
and have been -> using : 1
have been using -> rx : 1
been using rx -> in : 1
using rx in -> our : 1
rx in our -> without : 1
in our without -> bothering : 1
our without bothering -> about : 1
without bothering about -> how : 1
bothering about how -> they : 1
about how they -> work : 1
how they work -> under : 1
they work under -> the : 1
work under the -> write : 1
under the write -> a : 1
write a toy -> which : 1
a toy which -> will : 1
toy which will -> help : 1
which will help -> us : 1
understand how scheduling -> works : 1
how scheduling works -> under : 1
scheduling works under -> the : 1
works under the -> int : 1
under the int -> get : 1
the int get -> a : 1
int get a -> coordination : 1
coordination auto coordination -> create : 1
auto coordination create -> a : 1
coordination create a -> worker : 1
create a worker -> instance : 1
create a worker -> auto : 1
a worker instance -> through : 1
worker instance through -> a : 1
instance through a -> factory : 1
through a factory -> method : 1
a factory method -> auto : 1
factory method auto -> worker : 1
method auto worker -> create : 1
auto worker create -> a : 1
worker create a -> action : 1
create a action -> object : 1
a action object -> auto : 1
action object auto -> executed : 1
object auto executed -> in : 1
auto executed in -> thread : 1
executed in thread -> create : 1
in thread create -> a : 1
thread create a -> schedulable : 1
thread create a -> coordination : 1
create a schedulable -> and : 1
a schedulable and -> schedule : 1
schedulable and schedule -> the : 1
and schedule the -> action : 1
schedule the action -> auto : 1
the action auto -> scheduled : 1
action auto scheduled -> return : 1
auto scheduled return -> all : 1
scheduled return all -> operators : 1
return all operators -> that : 1
all operators that -> take : 1
operators that take -> multiple : 1
that take multiple -> streams : 1
take multiple streams -> as : 1
multiple streams as -> or : 1
streams as or -> deal : 1
as or deal -> with : 1
or deal with -> tasks : 1
deal with tasks -> that : 1
with tasks that -> have : 1
tasks that have -> a : 1
that have a -> bearing : 1
have a bearing -> on : 1
a bearing on -> take : 1
bearing on take -> a : 1
on take a -> function : 1
take a function -> as : 1
as a some -> of : 1
a some of -> the : 1
the functions using -> a : 1
functions using a -> particular : 1
using a particular -> scheduler : 1
a particular scheduler -> are : 1
particular scheduler are -> as : 1
scheduler are as -> the : 1
as the previous -> we : 1
previous we manually -> scheduled : 1
we manually scheduled -> an : 1
manually scheduled an -> action : 1
scheduled an action -> in : 1
an action in -> is : 1
action in is -> nothing : 1
in is nothing -> but : 1
nothing but a -> move : 1
but a move -> on : 1
a move on -> to : 1
to the declarative -> aspects : 1
the declarative aspects -> we : 1
declarative aspects we -> will : 1
aspects we will -> write : 1
that will schedule -> tasks : 1
will schedule tasks -> using : 1
schedule tasks using -> a : 1
tasks using a -> int : 1
using a int -> create : 1
a int create -> a : 1
create a coordination -> function : 1
create a coordination -> functionfor : 1
a coordination function -> auto : 1
coordination function auto -> coordination : 1
function auto coordination -> instantiate : 1
auto coordination instantiate -> a : 1
coordination instantiate a -> coordinator : 1
instantiate a coordinator -> and : 1
coordinator and create -> a : 1
a worker auto -> worker : 1
worker auto worker -> start : 1
auto worker start -> and : 1
worker start and -> the : 1
start and the -> period : 1
and the period -> auto : 1
the period auto -> start : 1
period auto start -> auto : 1
auto start auto -> period : 1
start auto period -> create : 1
auto period create -> an : 1
period create an -> observable : 1
an observable auto -> values : 1
values subscribe first -> time : 1
subscribe first time -> using : 1
first time using -> a : 1
time using a -> worker : 1
using a worker -> start : 1
a worker start -> the : 1
worker start the -> emission : 1
start the emission -> of : 1
the emission of -> values : 1
emission of values -> add : 1
of values add -> blocking : 1
values add blocking -> subscription : 1
add blocking subscription -> to : 1
to see results -> return : 1
see results return -> created : 1
results return created -> a : 1
return created a -> hot : 1
created a hot -> observable : 1
observable using the -> replay : 1
using the replay -> mechanism : 1
the replay mechanism -> to : 1
replay mechanism to -> take : 1
mechanism to take -> care : 1
of the late -> subscription : 1
the late subscription -> by : 1
late subscription by -> some : 1
subscription by some -> we : 1
by some we -> also : 1
some we also -> created : 1
we also created -> a : 1
also created a -> worker : 1
created a worker -> to : 1
a worker to -> do : 1
worker to do -> the : 1
do the scheduling -> for : 1
the scheduling for -> subscription : 1
scheduling for subscription -> and : 1
for subscription and -> to : 1
subscription and to -> connect : 1
and to connect -> the : 1
to connect the -> observers : 1
connect the observers -> with : 1
the observers with -> the : 1
observers with the -> the : 1
the previous program -> demonstrates : 1
the previous program -> will : 1
the previous program -> is : 1
previous program demonstrates -> how : 1
demonstrates how the -> scheduler : 1
demonstrates how the -> propagation : 1
how the scheduler -> works : 1
the scheduler works -> in : 1
scheduler works in -> versus : 1
works in versus -> and : 1
in versus and -> operators : 1
versus and operators -> behave : 1
and operators behave -> in : 1
operators behave in -> a : 1
behave in a -> different : 1
a different and -> this : 1
different and this -> has : 1
and this has -> been : 1
been a source -> of : 1
of confusion for -> reactive : 1
confusion for reactive -> programming : 1
for reactive programming -> the : 1
programming the operator -> changes : 1
the operator changes -> the : 1
operator changes the -> thread : 1
changes the thread -> of : 1
the thread of -> the : 1
operators and observers -> below : 1
and observers below -> in : 1
observers below in -> the : 1
below in the -> case : 1
case of it -> affects : 1
of it affects -> the : 1
it affects the -> operators : 1
affects the operators -> and : 1
operators and methods -> that : 1
and methods that -> are : 1
methods that are -> above : 1
that are above -> and : 1
are above and -> below : 1
above and below -> it : 1
and below it -> as : 1
below it as -> the : 1
it as the -> following : 1
as the following -> program : 2
program demonstrates subtle -> changes : 1
demonstrates subtle changes -> in : 1
subtle changes in -> the : 1
changes in the -> caused : 1
changes in the -> ability : 1
in the caused -> by : 1
the caused by -> the : 1
caused by the -> way : 1
by the way -> the : 1
way the and -> operators : 1
and operators write -> a : 1
operators write a -> program : 1
program that uses -> the : 2
uses the int -> print : 1
the int print -> the : 1
int print the -> main : 3
thread id thread -> id : 3
id thread id -> is : 3
thread id is -> we : 2
thread id is -> map : 3
thread id is -> instantiate : 1
id is we -> are : 2
is we are -> using : 2
are using here -> the : 2
using here the -> map : 2
here the map -> will : 1
here the map -> and : 1
the map will -> use : 1
map will use -> the : 1
will use the -> main : 1
will use the -> secondary : 1
will use the -> library : 1
will use the -> functionality : 1
use the main -> thread : 1
main thread subscribed -> lambda : 1
thread subscribed lambda -> will : 1
subscribed lambda will -> use : 2
lambda will use -> a : 1
lambda will use -> the : 1
will use a -> new : 1
use a new -> thread : 1
new thread return -> wait : 1
thread return wait -> for : 2
return wait for -> two : 2
two seconds return -> output : 2
seconds return output -> of : 2
return output of -> the : 3
the preceding program -> is : 3
the preceding program -> clearly : 1
the preceding program -> shows : 1
preceding program is -> as : 3
is as thread -> id : 3
as thread id -> is : 3
as thread id -> observable : 1
id is map -> map : 2
id is map -> subs : 1
is map map -> subs : 1
is map map -> sub : 1
map map subs -> map : 1
map subs map -> subs : 7
subs map subs -> map : 5
subs map subs -> subs : 1
subs map subs -> output : 1
map subs subs -> output : 1
subs subs output -> of : 1
subs output of -> the : 2
preceding program clearly -> shows : 1
program clearly shows -> that : 1
clearly shows that -> map : 1
clearly shows that -> only : 1
clearly shows that -> changes : 1
shows that map -> worked : 1
that map worked -> in : 1
map worked in -> the : 1
worked in the -> primary : 1
worked in the -> secondary : 1
the primary thread -> and : 1
primary thread and -> the : 1
thread and the -> method : 1
the method got -> scheduled : 1
method got scheduled -> in : 1
got scheduled in -> the : 1
in the secondary -> this : 2
the secondary this -> clearly : 2
secondary this clearly -> shows : 2
this clearly shows -> that : 2
shows that only -> worked : 1
that only worked -> on : 1
only worked on -> operators : 1
worked on operators -> and : 1
on operators and -> subscribers : 1
operators and subscribers -> below : 1
and subscribers below -> write : 1
subscribers below write -> a : 1
below write a -> more : 1
write a more -> or : 1
a more or -> less : 1
or less identical -> program : 1
less identical program -> that : 1
identical program that -> uses : 1
the operator instead -> of : 1
operator instead of -> the : 1
instead of the -> take : 1
instead of the -> xml : 1
of the take -> a : 2
the take a -> look : 2
look at int -> print : 1
at int print -> the : 1
map and subscribed -> lambda : 1
and subscribed lambda -> will : 1
use the secondary -> thread : 1
the secondary thread -> return : 1
secondary thread return -> wait : 1
is map subs -> map : 1
map subs output -> of : 1
preceding program shows -> that : 1
program shows that -> both : 1
shows that both -> map : 1
that both map -> and : 1
both map and -> subscription : 1
map and subscription -> methods : 1
and subscription methods -> worked : 1
and subscription methods -> were : 1
subscription methods worked -> in : 1
methods worked in -> the : 1
shows that changes -> the : 1
that changes the -> threading : 1
changes the threading -> behavior : 1
the threading behavior -> of : 1
threading behavior of -> items : 1
behavior of items -> before : 1
of items before -> and : 1
of items before -> beginning : 1
items before and -> after : 1
before and after -> runloop : 1
and after runloop -> rxcpp : 1
after runloop rxcpp -> library : 1
runloop rxcpp library -> does : 1
rxcpp library does -> not : 1
library does not -> have : 1
have a main -> thread : 1
a main thread -> the : 1
main thread the -> closest : 1
thread the closest -> you : 1
the closest you -> can : 1
closest you can -> do : 1
can do is -> to : 1
do is to -> leverage : 1
leverage the class -> to : 1
the class to -> simulate : 1
class to simulate -> scheduling : 1
to simulate scheduling -> in : 1
simulate scheduling in -> the : 1
the main in -> the : 1
main in the -> following : 1
following the observable -> executes : 1
the observable executes -> in : 1
observable executes in -> a : 1
executes in a -> background : 1
in a background -> and : 1
a background and -> the : 1
background and the -> subscription : 1
and the subscription -> methods : 1
and the subscription -> method : 1
the subscription methods -> run : 1
subscription methods run -> in : 1
methods run in -> the : 1
main we are -> using : 1
main we are -> performing : 1
are using and -> to : 1
using and to -> achieve : 1
and to achieve -> this : 1
to achieve this -> int : 1
achieve this int -> print : 1
this int print -> the : 1
id is instantiate -> a : 1
is instantiate a -> object : 1
instantiate a object -> which : 1
a object which -> will : 1
which will loop -> in : 1
will loop in -> the : 1
loop in the -> main : 1
main thread create -> a : 1
a coordination functionfor -> run : 1
coordination functionfor run -> loop : 1
functionfor run loop -> auto : 1
run loop auto -> auto : 1
loop auto auto -> this : 1
auto auto this -> will : 1
auto this will -> get : 1
this will get -> executed : 2
will get executed -> in : 2
get executed in -> worker : 1
get executed in -> main : 1
executed in worker -> return : 1
in worker return -> this : 1
worker return this -> will : 1
return this will -> get : 1
executed in main -> thread : 1
in main thread -> execute : 1
main thread execute -> the : 1
thread execute the -> run : 1
execute the run -> loop : 1
the run loop -> while : 1
run loop while -> while : 1
loop while while -> return : 1
while while return -> output : 1
while return output -> of : 1
map map sub -> sub : 1
map map sub -> map : 1
map sub sub -> map : 1
map sub sub -> can : 1
sub sub map -> map : 1
sub map map -> sub : 1
map sub map -> sub : 1
sub map sub -> sub : 1
sub sub can -> see : 1
sub can see -> that : 1
see that map -> was : 1
that map was -> scheduled : 1
map was scheduled -> in : 1
was scheduled in -> the : 1
the worker thread -> and : 1
thread and subscription -> methods : 1
subscription methods were -> executed : 1
methods were executed -> in : 1
were executed in -> the : 1
executed in the -> main : 1
the main this -> is : 1
main this is -> enabled : 1
this is enabled -> because : 1
is enabled because -> of : 1
enabled because of -> the : 1
of the judicious -> placement : 1
the judicious placement -> of : 1
judicious placement of -> the : 1
placement of the -> and : 1
the and which -> we : 1
and which we -> covered : 1
and which we -> use : 1
which we covered -> in : 2
we covered in -> the : 1
we covered in -> rxcpp : 1
the previous operator -> is : 1
previous operator is -> a : 1
operator is a -> function : 1
function that acts -> on : 1
that acts on -> an : 1
acts on an -> observable : 1
on an observable -> to : 1
an observable to -> produce : 1
observable to produce -> a : 1
produce a new -> in : 1
a new in -> the : 1
new in the -> the : 1
the the original -> observable : 1
the original observable -> is : 1
original observable is -> not : 1
observable is not -> mutated : 1
is not mutated -> but : 1
not mutated but -> is : 1
mutated but is -> a : 1
but is a -> pure : 1
is a pure -> we : 1
a pure we -> have : 1
pure we have -> already : 1
already covered lots -> of : 1
covered lots of -> operators : 1
lots of operators -> in : 1
of operators in -> the : 1
in the sample -> programs : 1
the sample programs -> that : 1
programs that we -> have : 1
we have in -> gui : 1
have in gui -> programming : 1
in gui programming -> using : 2
to create custom -> operators : 1
create custom operators -> to : 1
custom operators to -> work : 1
operators to work -> on : 1
to work on -> the : 1
to work on -> a : 1
work on the -> fact : 1
on the fact -> that : 1
fact that an -> operator : 1
that an operator -> does : 1
an operator does -> not : 1
operator does not -> mutate : 1
does not mutate -> an : 1
not mutate an -> observable : 1
mutate an observable -> is : 1
an observable is -> a : 1
is a reason -> why : 1
a reason why -> declarative : 1
reason why declarative -> scheduling : 1
why declarative scheduling -> works : 1
declarative scheduling works -> in : 1
scheduling works in -> the : 1
works in the -> rx : 1
in the rx -> programming : 1
rx programming rx -> operators : 1
programming rx operators -> can : 1
rx operators can -> be : 1
can be categorized -> as : 1
be categorized as -> are : 1
categorized as are -> some : 1
as are some -> operators : 1
as are some -> essential : 1
are some operators -> available : 1
some operators available -> that : 1
operators available that -> do : 1
available that do -> not : 1
that do not -> fall : 1
do not fall -> into : 1
not fall into -> these : 1
fall into these -> we : 1
into these we -> will : 1
these we will -> outline : 1
we will outline -> some : 1
will outline some -> of : 1
outline some of -> the : 1
the key operators -> in : 1
key operators in -> the : 1
the preceding categories -> in : 1
preceding categories in -> a : 1
categories in a -> table : 1
in a table -> for : 1
a table for -> quick : 1
table for quick -> operators : 1
for quick operators -> will : 1
quick operators will -> help : 1
operators will help -> one : 1
will help one -> to : 1
help one to -> create : 2
one to create -> various : 1
one to create -> a : 1
to create various -> kinds : 1
create various kinds -> of : 1
various kinds of -> observables : 1
kinds of observables -> from : 1
of observables from -> input : 1
observables from input -> we : 1
from input we -> have : 1
input we have -> already : 1
have already demonstrated -> the : 1
already demonstrated the -> use : 1
demonstrated the use -> of : 1
of and range -> in : 1
and range in -> our : 1
range in our -> example : 1
in our example -> consult : 1
our example consult -> these : 1
example consult these -> examples : 1
consult these examples -> and : 1
these examples and -> the : 1
examples and the -> rxcpp : 1
rxcpp documentation to -> learn : 1
more about a -> table : 1
about a table -> containing : 1
a table containing -> some : 2
table containing some -> of : 2
containing some of -> the : 2
the operators an -> observable : 1
operators an observable -> by : 1
an observable by -> calling : 1
calling the observer -> method : 1
the observer method -> a : 1
observer method a -> fresh : 1
method a fresh -> observable : 1
fresh observable for -> each : 1
for each an -> observable : 1
each an observable -> that : 1
observable that does -> not : 1
does not emit -> anything : 1
does not emit -> the : 2
not emit anything -> only : 1
emit anything only -> an : 1
anything only an -> observable : 1
only an observable -> based : 1
an observable based -> on : 1
observable based on -> the : 2
on the parameters -> an : 1
the parameters an -> observable : 1
parameters an observable -> that : 1
observable that emits -> a : 4
observable that emits -> an : 1
observable that emits -> only : 1
observable that emits -> observables : 1
observable that emits -> the : 1
observable that emits -> true : 2
observable that emits -> each : 1
that emits a -> sequence : 1
that emits a -> single : 1
that emits a -> range : 1
that emits a -> value : 1
that emits a -> termination : 1
that emits a -> signal : 1
emits a sequence -> of : 1
a sequence of -> values : 1
a sequence of -> the : 1
sequence of values -> in : 1
of values in -> a : 1
of values in -> the : 1
values in a -> time : 1
in a time -> an : 1
a time an -> observable : 1
time an observable -> that : 1
emits a single -> an : 1
a single an -> observable : 1
single an observable -> that : 1
emits a range -> of : 1
range of an -> observable : 1
of an observable -> that : 2
observable that never -> emits : 1
that never emits -> an : 1
never emits an -> observable : 1
observable that repeats -> a : 1
that repeats a -> stream : 1
repeats a stream -> of : 1
stream of an -> observable : 1
emits a value -> after : 1
a value after -> a : 1
value after a -> delay : 1
after a delay -> specified : 1
a delay specified -> as : 1
delay specified as -> a : 1
specified as a -> an : 1
as a an -> observable : 1
a an observable -> that : 1
that emits an -> operators : 1
that emits an -> item : 2
emits an operators -> help : 1
an operators help -> one : 1
operators help one -> to : 1
new observable without -> modifying : 1
observable without modifying -> the : 1
modifying the source -> they : 1
the source they -> act : 1
source they act -> on : 1
they act on -> individual : 1
act on individual -> items : 1
on individual items -> in : 1
individual items in -> the : 1
items in the -> source : 1
items in the -> same : 1
the source observable -> by : 2
the source observable -> and : 2
the source observable -> that : 4
the source observable -> within : 1
the source observable -> if : 1
the source observable -> satisfies : 1
the source observable -> emitted : 2
source observable by -> applying : 1
source observable by -> resubscribing : 1
observable by applying -> a : 1
by applying a -> lambda : 1
applying a lambda -> to : 1
a lambda to -> a : 1
lambda to a -> table : 1
to a table -> containing : 1
the most useful -> transformation : 1
most useful transformation -> operators : 1
useful transformation operators -> is : 1
transformation operators is -> as : 1
operators is as -> that : 1
is as that -> collects : 1
is as that -> we : 1
as that collects -> values : 1
that collects values -> in : 1
collects values in -> the : 1
in the past -> and : 1
the past and -> emits : 1
past and emits -> them : 1
and emits them -> that : 1
emits them that -> emits : 1
them that emits -> the : 1
that emits the -> results : 2
that emits the -> items : 2
that emits the -> most : 1
that emits the -> same : 2
that emits the -> contents : 1
emits the results -> of : 2
the results of -> applying : 1
the results of -> each : 1
the results of -> this : 2
results of applying -> a : 1
of applying a -> function : 1
applying a function -> to : 1
to a pair -> of : 1
pair of values -> emitted : 1
of values emitted -> by : 1
values emitted by -> the : 1
by the source -> observable : 5
by the source -> that : 2
by the source -> or : 1
by the source -> of : 1
source observable and -> the : 1
source observable and -> emit : 1
and the collection -> that : 1
the collection that -> helps : 1
collection that helps -> to : 1
helps to group -> values : 1
to group values -> from : 1
group values from -> an : 1
values from an -> that : 1
from an that -> emits : 1
an that emits -> the : 1
emits the items -> from : 1
emits the items -> emitted : 1
the items from -> the : 3
items from the -> source : 5
the source transformed -> by : 1
source transformed by -> the : 1
transformed by the -> specified : 1
by the specified -> that : 1
the specified that -> emits : 1
specified that emits -> the : 1
results of each -> call : 1
of each call -> to : 1
each call to -> the : 1
to the accumulator -> that : 1
the accumulator that -> emits : 1
accumulator that emits -> each : 1
that emits each -> at : 1
that emits each -> of : 1
emits each at -> count : 1
each at count -> items : 1
at count items -> from : 1
count items from -> the : 1
the source ability -> to : 1
source ability to -> filter : 1
ability to filter -> streams : 1
to filter streams -> is : 1
filter streams is -> a : 1
streams is a -> common : 1
is a common -> activity : 1
a common activity -> in : 1
common activity in -> stream : 1
activity in stream -> it : 1
in stream it -> is : 1
stream it is -> not : 1
is not unusual -> that : 1
not unusual that -> the : 1
unusual that the -> rx : 1
that the rx -> programming : 1
programming model defines -> a : 1
model defines a -> lot : 1
defines a lot -> of : 1
lot of such -> the : 1
of such the -> filtering : 1
of such the -> following : 1
such the filtering -> operators : 1
the filtering operators -> are : 1
filtering operators are -> mostly : 1
operators are mostly -> predicate : 1
are mostly predicate -> functions : 1
mostly predicate functions -> or : 1
predicate functions or -> the : 1
functions or the -> following : 1
following table contains -> a : 1
table contains a -> list : 1
contains a list -> of : 1
list of filtering -> that : 1
of filtering that -> emits : 1
filtering that emits -> an : 1
emits an item -> if : 1
emits an item -> located : 1
emits an item -> or : 1
an item if -> a : 1
item if a -> particular : 1
if a particular -> time : 1
a particular time -> span : 1
particular time span -> has : 1
time span has -> passed : 1
span has passed -> without : 1
has passed without -> emitting : 1
passed without emitting -> another : 1
without emitting another -> item : 1
emitting another item -> from : 1
another item from -> the : 1
item from the -> source : 1
the source that -> emits : 4
source that emits -> those : 1
source that emits -> a : 1
source that emits -> only : 1
source that emits -> the : 1
that emits those -> items : 1
emits those items -> from : 1
those items from -> the : 1
source observable that -> are : 1
source observable that -> the : 1
source observable that -> is : 1
source observable that -> emits : 1
observable that are -> that : 1
that are that -> emits : 1
are that emits -> an : 1
an item located -> at : 1
item located at -> a : 1
located at a -> specified : 1
at a specified -> index : 1
a specified index -> that : 1
specified index that -> emits : 1
index that emits -> only : 1
that emits only -> those : 1
that emits only -> the : 4
emits only those -> items : 1
only those items -> emitted : 1
those items emitted -> by : 1
items emitted by -> the : 6
items emitted by -> that : 1
items emitted by -> an : 5
observable that the -> filter : 1
that the filter -> evaluates : 1
the filter evaluates -> as : 1
filter evaluates as -> that : 1
evaluates as that -> emits : 1
as that emits -> only : 1
emits only the -> very : 2
emits only the -> first : 1
emits only the -> last : 1
only the very -> first : 1
only the very -> last : 1
the very first -> item : 1
very first item -> emitted : 1
first item emitted -> by : 1
item emitted by -> the : 3
item emitted by -> each : 1
item emitted by -> an : 3
emits a termination -> notification : 1
a termination notification -> from : 1
termination notification from -> the : 1
the very last -> item : 1
very last item -> emitted : 1
last item emitted -> by : 1
emits the most -> recent : 1
the most recent -> items : 1
the most recent -> value : 1
most recent items -> emitted : 1
recent items emitted -> by : 1
source observable within -> periodic : 1
observable within periodic -> time : 1
within periodic time -> that : 1
periodic time that -> is : 1
time that is -> identical : 1
that is identical -> to : 2
is identical to -> the : 2
identical to the -> source : 2
to the source -> except : 2
to the source -> of : 1
to the source -> instead : 1
to the source -> the : 1
to the source -> from : 1
to the source -> independent : 1
the source except -> that : 2
source except that -> it : 2
except that it -> does : 2
that it does -> not : 2
it does not -> emit : 2
not emit the -> first : 1
not emit the -> last : 1
emit the first -> t : 1
the first t -> items : 2
first t items -> that : 1
first t items -> emitted : 1
t items that -> the : 2
items that the -> source : 2
that the source -> observable : 2
that the source -> sequence : 1
observable that is -> identical : 1
emit the last -> t : 1
the last t -> items : 2
last t items -> that : 1
last t items -> emitted : 1
only the first -> t : 1
t items emitted -> by : 2
the source or -> all : 1
source or all -> of : 1
or all of -> the : 1
of the items -> from : 1
source observable if -> that : 1
observable if that -> observable : 1
if that observable -> emits : 1
that observable emits -> fewer : 1
observable emits fewer -> than : 1
emits fewer than -> t : 1
fewer than t -> that : 1
than t that -> emits : 1
t that emits -> only : 1
only the last -> t : 1
the primary goals -> of : 1
primary goals of -> the : 1
goals of the -> rx : 1
model is to -> decouple : 1
is to decouple -> the : 1
to decouple the -> event : 1
decouple the event -> source : 1
event source from -> event : 1
source from event -> there : 1
from event there -> is : 1
event there is -> a : 2
is a need -> for : 1
is a need -> that : 1
a need for -> operators : 1
need for operators -> that : 1
for operators that -> can : 1
operators that can -> combine : 1
operators that can -> be : 1
that can combine -> streams : 1
can combine streams -> from : 1
combine streams from -> various : 1
from various the -> rxcpp : 1
various the rxcpp -> library : 1
rxcpp library implements -> a : 1
library implements a -> set : 1
implements a set -> of : 1
set of such -> the : 1
such the following -> table : 1
following table outlines -> a : 1
table outlines a -> set : 1
outlines a set -> of : 1
set of commonly -> used : 1
of commonly used -> combining : 1
commonly used combining -> an : 1
used combining an -> item : 1
combining an item -> is : 1
an item is -> emitted : 1
item is emitted -> by : 1
is emitted by -> either : 1
emitted by either -> of : 1
by either of -> two : 1
either of two -> combine : 1
of two combine -> the : 1
two combine the -> latest : 1
combine the latest -> item : 1
the latest item -> emitted : 1
latest item emitted -> by : 1
emitted by each -> observable : 1
by each observable -> via : 1
each observable via -> a : 1
observable via a -> specified : 1
via a specified -> function : 2
a specified function -> and : 2
specified function and -> emit : 1
specified function and -> emits : 1
function and emit -> items : 1
and emit items -> based : 1
emit items based -> on : 1
items based on -> the : 1
on the results -> of : 2
results of this -> combines : 1
results of this -> are : 1
of this combines -> multiple : 1
this combines multiple -> observables : 1
combines multiple observables -> into : 1
multiple observables into -> one : 1
observables into one -> by : 1
into one by -> merging : 1
one by merging -> their : 1
by merging their -> emits : 1
merging their emits -> a : 1
their emits a -> specified : 1
emits a specified -> sequence : 1
a specified sequence -> of : 1
specified sequence of -> items : 1
sequence of items -> before : 1
sequence of items -> in : 1
sequence of items -> emitted : 1
items before beginning -> to : 1
before beginning to -> emit : 1
beginning to emit -> the : 1
to emit the -> items : 1
to emit the -> value : 1
emit the items -> from : 1
the source converts -> an : 1
source converts an -> observable : 1
converts an observable -> that : 1
that emits observables -> into : 1
emits observables into -> a : 1
observables into a -> single : 1
into a single -> observable : 1
a single observable -> that : 1
single observable that -> emits : 1
the items emitted -> by : 1
the most recently -> emitted : 1
most recently emitted -> of : 1
recently emitted of -> those : 1
emitted of those -> combines : 1
of those combines -> the : 1
those combines the -> emissions : 1
combines the emissions -> of : 1
the emissions of -> multiple : 1
emissions of multiple -> observables : 1
of multiple observables -> together : 1
multiple observables together -> via : 1
observables together via -> a : 1
together via a -> specified : 1
function and emits -> single : 1
and emits single -> items : 1
emits single items -> for : 1
single items for -> each : 1
items for each -> combination : 1
for each combination -> based : 1
each combination based -> on : 1
combination based on -> the : 1
of this are -> operators : 1
this are operators -> that : 1
are operators that -> help : 1
are operators that -> evaluate : 1
help to recover -> from : 1
to recover from -> error : 1
recover from error -> notifications : 1
from error notifications -> from : 1
error notifications from -> an : 1
notifications from an -> take : 1
notifications from an -> the : 1
from an take -> a : 1
an take a -> look : 1
at this supported -> by : 1
this supported by -> observable : 1
supported by observable -> that : 1
by observable that -> mirrors : 1
observable that mirrors -> the : 1
that mirrors the -> source : 1
mirrors the source -> resubscribing : 1
the source resubscribing -> to : 1
source resubscribing to -> it : 1
resubscribing to it -> if : 1
to it if -> it : 1
it if it -> calls : 1
if it calls -> up : 1
it calls up -> to : 1
calls up to -> a : 1
up to a -> specified : 1
to a specified -> number : 1
a specified number -> of : 1
specified number of -> utility : 1
number of utility -> following : 1
of utility following -> is : 1
utility following is -> a : 1
following is a -> toolbox : 1
is a toolbox -> of : 1
a toolbox of -> useful : 1
toolbox of useful -> operators : 1
of useful operators -> for : 1
useful operators for -> working : 1
operators for working -> with : 1
for working with -> that : 1
working with that -> emits : 1
with that emits -> the : 1
emits the same -> items : 1
emits the same -> sequence : 1
the same items -> as : 1
same items as -> the : 1
items as the -> source : 1
as the source -> then : 1
the source then -> invokes : 1
source then invokes -> the : 1
then invokes the -> given : 1
invokes the given -> the : 1
the given the -> scheduler : 1
given the scheduler -> on : 1
the scheduler on -> which : 1
scheduler on which -> an : 1
on which an -> observer : 1
which an observer -> will : 1
an observer will -> observe : 1
observer will observe -> this : 1
will observe this -> upon : 1
observe this upon -> the : 1
this upon the -> emissions : 1
upon the emissions -> and : 1
the emissions and -> notifications : 1
emissions and notifications -> from : 1
and notifications from -> an : 1
from an the -> scheduler : 1
an the scheduler -> an : 1
the scheduler an -> observable : 1
scheduler an observable -> should : 1
an observable should -> use : 1
observable should use -> when : 1
should use when -> it : 1
use when it -> is : 1
when it is -> subscribed : 1
when it is -> class : 1
it is subscribed -> a : 1
is subscribed a -> disposable : 1
subscribed a disposable -> resource : 1
a disposable resource -> that : 1
disposable resource that -> has : 1
resource that has -> the : 1
has the same -> lifespan : 1
the same lifespan -> as : 1
same lifespan as -> the : 1
lifespan as the -> and : 1
as the and -> boolean : 1
as the and -> it : 1
the and boolean -> following : 1
and boolean following -> are : 1
boolean following are -> operators : 1
following are operators -> that : 1
operators that evaluate -> one : 1
that evaluate one -> or : 1
evaluate one or -> more : 1
one or more -> observables : 1
or more observables -> or : 1
or more observables -> without : 1
more observables or -> items : 1
observables or items -> emitted : 1
or items emitted -> by : 2
emitted by that -> emits : 1
by that emits -> true : 1
that emits true -> if : 3
that emits true -> only : 1
emits true if -> every : 1
emits true if -> the : 2
true if every -> item : 1
if every item -> emitted : 1
every item emitted -> by : 1
source observable satisfies -> a : 1
observable satisfies a -> specified : 1
satisfies a specified -> it : 1
a specified it -> emits : 1
specified it emits -> that : 1
it emits that -> emits : 2
emits that emits -> the : 1
emits that emits -> true : 1
the same sequence -> as : 1
the same sequence -> of : 2
same sequence as -> whichever : 1
sequence as whichever -> of : 1
as whichever of -> the : 1
whichever of the -> source : 1
the source observables -> first : 1
source observables first -> emitted : 1
observables first emitted -> an : 1
first emitted an -> item : 1
emitted an item -> or : 1
an item or -> sent : 1
an item or -> items : 1
item or sent -> a : 1
or sent a -> termination : 1
sent a termination -> observable : 1
a termination observable -> that : 1
termination observable that -> emits : 1
true if the -> source : 2
true if the -> event : 1
if the source -> observable : 2
if the source -> generates : 1
source observable emitted -> a : 2
observable emitted a -> specified : 2
emitted a specified -> otherwise : 2
a specified otherwise -> it : 2
specified otherwise it -> emits : 2
otherwise it emits -> observable : 1
otherwise it emits -> that : 1
it emits observable -> that : 1
emits observable that -> emits : 1
emits true only -> if : 1
true only if -> both : 1
only if both -> sequences : 1
if both sequences -> terminate : 1
both sequences terminate -> normally : 1
sequences terminate normally -> after : 1
terminate normally after -> emitting : 1
normally after emitting -> the : 1
after emitting the -> same : 1
emitting the same -> sequence : 1
same sequence of -> items : 1
same sequence of -> emitted : 1
of items in -> the : 1
same it will -> emit : 1
it will emit -> items : 1
will emit items -> emitted : 1
emit items emitted -> by : 1
emitted by an -> observable : 6
emitted by an -> the : 1
emitted by an -> and : 2
emitted by an -> a : 1
emitted by an -> object : 1
by an observable -> until : 2
by an observable -> after : 2
by an observable -> and : 2
an observable until -> a : 2
observable until a -> second : 1
observable until a -> specified : 1
until a second -> observable : 1
a second observable -> emits : 2
second observable emits -> an : 2
observable emits an -> items : 1
observable emits an -> item : 1
emits an items -> emitted : 1
an items emitted -> by : 1
until a specified -> condition : 1
a specified condition -> becomes : 2
specified condition becomes -> items : 1
specified condition becomes -> and : 1
condition becomes items -> emitted : 1
becomes items emitted -> by : 1
an observable after -> a : 2
observable after a -> second : 1
observable after a -> specified : 1
after a second -> observable : 1
item or items -> emitted : 1
after a specified -> condition : 1
condition becomes and -> aggregate : 1
becomes and aggregate -> operators : 1
and aggregate operators -> operate : 1
aggregate operators operate -> on : 1
operators operate on -> the : 1
operate on the -> entire : 1
on the entire -> sequence : 1
the entire sequence -> of : 1
entire sequence of -> items : 1
of items emitted -> by : 2
by an the -> average : 1
an the average -> of : 1
of numbers emitted -> by : 2
numbers emitted by -> an : 2
and emit this -> the : 1
and emit this -> observable : 1
emit this the -> emissions : 1
this the emissions -> from : 1
the emissions from -> two : 1
emissions from two -> or : 1
from two or -> more : 1
more observables without -> interleaving : 1
observables without interleaving -> the : 1
without interleaving the -> number : 1
interleaving the number -> of : 1
and emit only -> this : 1
emit only this -> and : 1
only this and -> emit : 1
this and emit -> the : 1
and emit the -> item : 2
and emit the -> final : 1
emit the item -> emitted : 2
the item emitted -> by : 2
by an and -> emit : 2
an and emit -> the : 2
by an a -> function : 1
an a function -> to : 1
function to each -> item : 1
to each item -> emitted : 1
each item emitted -> by : 1
emit the final -> the : 1
the final the -> sum : 1
final the sum -> of : 1
sum of numbers -> emitted : 1
emit this observable -> observable : 1
this observable observable -> are : 1
observable observable are -> special : 1
observable are special -> observables : 1
are special observables -> that : 1
special observables that -> have : 1
observables that have -> more : 1
that have more -> precisely : 1
have more precisely -> controlled : 1
more precisely controlled -> subscription : 1
precisely controlled subscription -> the : 1
controlled subscription the -> following : 1
subscription the following -> table : 1
table lists some -> of : 1
lists some of -> a : 1
some of a -> connectable : 1
of a connectable -> observable : 1
a connectable observable -> to : 1
a connectable observable -> behave : 1
connectable observable to -> begin : 1
observable to begin -> emitting : 1
to begin emitting -> items : 1
begin emitting items -> to : 1
emitting items to -> its : 1
items to its -> an : 1
to its an -> ordinary : 1
its an ordinary -> observable : 1
an ordinary observable -> into : 1
ordinary observable into -> a : 1
into a connectable -> a : 1
a connectable a -> connectable : 1
connectable a connectable -> observable : 1
connectable observable behave -> like : 1
observable behave like -> an : 1
behave like an -> ordinary : 1
like an ordinary -> that : 1
an ordinary that -> all : 1
ordinary that all -> observers : 1
that all observers -> see : 1
all observers see -> the : 1
observers see the -> same : 1
see the same -> sequence : 1
sequence of emitted -> even : 1
of emitted even -> if : 1
emitted even if -> they : 1
even if they -> subscribe : 1
if they subscribe -> after : 1
they subscribe after -> the : 1
subscribe after the -> observable : 1
after the observable -> has : 1
the observable has -> begun : 1
the observable has -> finished : 1
the observable has -> experienced : 1
observable has begun -> emitting : 1
has begun emitting -> this : 1
begun emitting this -> we : 1
emitting this we -> gained : 1
this we gained -> an : 1
we gained an -> understanding : 1
gained an understanding -> of : 1
model fit we -> started : 1
fit we started -> with : 1
started with observables -> and : 1
observables and quickly -> moved : 1
and quickly moved -> on : 1
quickly moved on -> to : 1
moved on to -> the : 2
moved on to -> reactive : 1
topic of hot -> and : 1
of hot and -> cold : 1
cold we covered -> the : 1
covered the subscription -> mechanism : 1
mechanism and its -> we : 1
and its we -> then : 1
its we then -> moved : 1
we then moved -> on : 1
then moved on -> to : 1
to the important -> topic : 1
topic of subjects -> and : 1
of subjects and -> understood : 1
subjects and understood -> how : 1
and understood how -> a : 1
understood how a -> number : 1
how a number -> of : 1
number of variants -> of : 1
of variants of -> subjects : 1
of subjects scheduler -> we : 1
subjects scheduler we -> classified : 1
scheduler we classified -> various : 1
we classified various -> operators : 1
classified various operators -> available : 1
various operators available -> with : 1
operators available with -> the : 1
with the rxcpp -> in : 1
rxcpp in the -> next : 1
learn how we -> can : 1
can use this -> knowledge : 1
use this knowledge -> to : 1
this knowledge to -> write : 1
knowledge to write -> gui : 1
to write gui -> programs : 1
write gui programs -> in : 1
gui programs in -> a : 1
programs in a -> reactive : 1
a reactive manner -> using : 1
reactive manner using -> the : 1
manner using the -> qt : 1
the qt gui -> programming : 1
the qt gui -> application : 1
qt gui programming -> using : 1
programming using qt -> ecosystem : 1
using qt ecosystem -> is : 1
qt ecosystem is -> a : 1
ecosystem is a -> comprehensive : 1
is a comprehensive -> based : 1
a comprehensive based -> framework : 1
comprehensive based framework -> for : 1
based framework for -> writing : 1
framework for writing -> and : 1
framework for writing -> software : 1
for writing and -> multiplatform : 1
writing and multiplatform -> gui : 1
and multiplatform gui -> if : 1
multiplatform gui if -> you : 1
gui if you -> write : 1
if you write -> your : 1
you write your -> programs : 1
write your programs -> using : 1
your programs using -> the : 1
programs using the -> portable : 1
using the portable -> core : 1
the portable core -> of : 1
portable core of -> the : 1
core of the -> you : 1
core of the -> reactive : 1
the you can -> leverage : 1
the you can -> download : 1
the you can -> refer : 1
you can leverage -> the : 2
can leverage the -> once : 1
can leverage the -> rxcurl : 1
can leverage the -> programming : 1
leverage the once -> and : 1
the once and -> compile : 1
once and compile -> supported : 1
and compile supported -> by : 1
compile supported by -> the : 1
the in some -> people : 1
the in some -> instances : 1
in some people -> use : 1
some people use -> the : 1
people use the -> such : 1
use the such -> as : 1
the such as -> support : 1
such as support -> for : 1
as support for -> the : 1
for the activex -> programming : 1
the activex programming -> model : 1
activex programming model -> for : 1
programming model for -> writing : 1
model for writing -> come : 1
for writing come -> across : 1
writing come across -> situations : 1
come across situations -> where : 1
across situations where -> qt : 1
situations where qt -> is : 1
where qt is -> preferred : 1
qt is preferred -> over : 1
is preferred over -> mfc : 1
preferred over mfc -> for : 1
over mfc for -> writing : 1
mfc for writing -> applications : 1
for writing applications -> in : 1
writing applications in -> a : 1
applications in a -> plausible : 1
in a plausible -> reason : 1
a plausible reason -> for : 1
plausible reason for -> this : 1
for this could -> be : 1
this could be -> ease : 1
could be ease -> of : 1
be ease of -> as : 1
ease of as -> qt : 1
of as qt -> uses : 1
as qt uses -> a : 1
qt uses a -> very : 1
uses a very -> tiny : 1
a very tiny -> subset : 1
very tiny subset -> of : 1
tiny subset of -> language : 1
subset of language -> features : 1
of language features -> for : 1
language features for -> its : 1
features for its -> the : 1
for its the -> original : 1
its the original -> goal : 1
the original goal -> of : 1
original goal of -> the : 1
goal of the -> framework : 1
of the framework -> of : 1
the framework of -> single : 1
framework of single -> source : 1
of single source -> portability : 1
single source portability -> across : 1
source portability across -> feature : 1
portability across feature -> availability : 1
across feature availability -> of : 1
feature availability of -> source : 1
availability of source -> and : 1
of source and -> make : 1
source and make -> it : 1
and make it -> a : 1
make it a -> very : 1
it a very -> this : 1
a very this -> has : 1
very this has -> helped : 1
this has helped -> it : 1
has helped it -> thrive : 1
helped it thrive -> for : 1
it thrive for -> more : 1
thrive for more -> than : 1
than two ever -> since : 1
two ever since -> its : 1
ever since its -> first : 1
since its first -> in : 1
its first in -> provides : 1
first in provides -> a : 1
in provides a -> complete : 1
provides a complete -> interface : 1
a complete interface -> with : 1
complete interface with -> support : 1
interface with support -> for : 1
support for developing -> multiplatform : 1
for developing multiplatform -> gui : 1
developing multiplatform gui -> webkit : 1
multiplatform gui webkit -> media : 1
gui webkit media -> filesystem : 1
webkit media filesystem -> opengl : 1
media filesystem opengl -> and : 1
filesystem opengl and -> so : 1
opengl and so -> covering : 1
and so covering -> the : 1
so covering the -> full : 1
covering the full -> features : 1
the full features -> of : 1
full features of -> this : 1
features of this -> wonderful : 1
this wonderful library -> would : 1
wonderful library would -> take : 1
library would take -> a : 1
would take a -> book : 1
take a book -> of : 1
a book of -> its : 2
book of its -> the : 1
book of its -> what : 1
of its the -> purpose : 1
its the purpose -> of : 1
to introduce how -> to : 1
introduce how to -> write : 1
write reactive gui -> by : 1
reactive gui by -> leveraging : 1
gui by leveraging -> qt : 1
by leveraging qt -> and : 1
leveraging qt and -> the : 1
qt and the -> rxcpp : 1
qt and the -> framework : 1
rxcpp we have -> already : 1
the core of -> the : 1
model in to -> data : 1
rxcpp the key -> it : 1
rxcpp the key -> we : 1
the key it -> is : 1
key it is -> time : 1
it is time -> to : 2
is time to -> put : 1
is time to -> start : 1
time to put -> what : 1
to put what -> we : 1
put what we -> learned : 1
what we learned -> in : 1
we learned in -> the : 1
learned in the -> previous : 1
the previous chapters -> into : 1
previous chapters into -> the : 1
chapters into the -> qt : 1
into the qt -> framework : 1
into the qt -> file : 1
the qt framework -> itself : 1
the qt framework -> combines : 1
the qt framework -> have : 1
the qt framework -> want : 1
the qt framework -> is : 1
the qt framework -> from : 1
the qt framework -> has : 1
the qt framework -> leverages : 1
qt framework itself -> has : 1
framework itself has -> a : 1
itself has a -> robust : 1
has a robust -> event : 2
a robust event -> processing : 1
a robust event -> we : 1
robust event processing -> and : 1
event processing and -> one : 1
processing and one -> needs : 1
and one needs -> to : 1
needs to learn -> these : 1
to learn these -> library : 1
learn these library -> he : 1
these library he -> or : 1
library he or -> she : 1
he or she -> can : 1
or she can -> incorporate : 1
she can incorporate -> rxcpp : 1
can incorporate rxcpp -> constructs : 1
incorporate rxcpp constructs -> into : 1
rxcpp constructs into -> the : 1
constructs into the -> this : 1
into the this -> we : 1
the this we -> will : 1
the this we -> dealt : 1
we will quick -> introduction : 1
will quick introduction -> to : 1
qt gui qt -> qt : 1
gui qt qt -> event : 1
qt qt event -> with : 1
qt event with -> an : 1
event with an -> the : 1
with an the -> rxcpp : 1
an the rxcpp -> library : 1
qt event custom -> operators : 1
event custom operators -> in : 1
custom operators in -> quick : 1
operators in quick -> introduction : 1
in quick introduction -> to : 1
qt gui is -> a : 1
gui is a -> application : 1
is a application -> development : 1
a application development -> framework : 1
for writing software -> that : 1
writing software that -> can : 1
software that can -> run : 1
that can run -> on : 1
can run on -> numerous : 1
run on numerous -> platforms : 1
on numerous platforms -> as : 1
numerous platforms as -> a : 1
platforms as a -> native : 1
as a native -> application : 1
a native application -> without : 1
native application without -> changing : 1
application without changing -> much : 1
without changing much -> with : 1
changing much with -> native : 1
much with native -> platform : 1
with native platform -> capabilities : 1
native platform capabilities -> and : 1
platform capabilities and -> aside : 1
capabilities and aside -> from : 1
and aside from -> gui : 1
aside from gui -> we : 1
from gui we -> can : 1
gui we can -> also : 1
can also write -> console : 1
also write console -> or : 1
write console or -> applications : 1
console or applications -> using : 1
or applications using -> the : 1
using the the -> primary : 1
using the the -> application : 1
using the the -> observable : 1
using the the -> first : 1
the the primary -> use : 1
primary use cases -> are : 1
use cases are -> graphical : 1
cases are graphical -> user : 1
are graphical user -> applications : 1
graphical user applications -> using : 1
user applications using -> qt : 1
applications using qt -> are : 1
using qt are -> usually : 1
qt are usually -> written : 1
are usually written -> in : 1
usually written in -> qml : 1
written in qml -> bindings : 1
in qml bindings -> to : 1
qml bindings to -> other : 1
bindings to other -> languages : 1
other languages also -> qt : 1
languages also qt -> simplifies : 1
also qt simplifies -> many : 1
qt simplifies many -> aspects : 1
simplifies many aspects -> of : 1
many aspects of -> using : 1
aspects of using -> comprehensive : 1
of using comprehensive -> and : 1
using comprehensive and -> powerful : 1
comprehensive and powerful -> apis : 1
and powerful apis -> and : 1
powerful apis and -> qt : 1
apis and qt -> supports : 1
and qt supports -> many : 1
qt supports many -> compiler : 1
supports many compiler -> such : 1
many compiler such -> as : 1
compiler such as -> the : 1
as the gcc -> compiler : 1
the gcc compiler -> and : 1
gcc compiler and -> the : 1
compiler and the -> visual : 1
and the visual -> qt : 1
the visual qt -> also : 1
visual qt also -> provides : 1
qt also provides -> qt : 1
also provides qt -> quick : 1
provides qt quick -> includes : 1
qt quick includes -> a : 1
quick includes a -> declarative : 1
includes a declarative -> scripting : 1
a declarative scripting -> language : 1
declarative scripting language -> based : 1
scripting language based -> on : 1
language based on -> to : 1
based on to -> write : 1
to write this -> helps : 1
write this helps -> with : 1
this helps with -> rapid : 1
helps with rapid -> application : 1
with rapid application -> development : 1
application development for -> mobile : 1
development for mobile -> although : 1
for mobile although -> the : 1
mobile although the -> logic : 1
although the logic -> can : 1
the logic can -> be : 1
logic can be -> written : 1
can be written -> using : 1
be written using -> native : 1
written using native -> code : 1
using native code -> for : 1
native code for -> the : 1
for the best -> possible : 1
the best possible -> the : 1
best possible the -> combination : 1
possible the combination -> provides : 1
the combination provides -> the : 1
combination provides the -> best : 1
provides the best -> of : 1
the best of -> declarative : 1
best of declarative -> development : 1
of declarative development -> and : 1
declarative development and -> native : 1
development and native -> code : 1
and native code -> is : 1
native code is -> currently : 1
code is currently -> being : 1
is currently being -> developed : 1
currently being developed -> and : 1
being developed and -> maintained : 1
developed and maintained -> by : 1
and maintained by -> the : 1
maintained by the -> qt : 1
by the qt -> and : 1
the qt and -> the : 1
the qt and -> rxcpp : 1
and the framework -> is : 1
the framework is -> available : 1
framework is available -> with : 1
available with open -> source : 1
with open source -> and : 1
source and proprietary -> when : 1
and proprietary when -> first : 1
proprietary when first -> qt : 1
when first qt -> used : 1
first qt used -> its : 1
qt used its -> own : 1
used its own -> paint : 1
its own paint -> engine : 1
own paint engine -> and : 1
paint engine and -> controls : 1
engine and controls -> by : 1
and controls by -> emulating : 1
controls by emulating -> the : 1
by emulating the -> look : 1
emulating the look -> and : 1
the look and -> feel : 1
look and feel -> of : 1
look and feel -> under : 1
look and feel -> across : 1
and feel of -> a : 1
feel of a -> different : 1
of a different -> platform : 1
a different platform -> to : 1
different platform to -> the : 1
platform to the -> custom : 1
to the custom -> paint : 1
the custom paint -> one : 1
custom paint one -> can : 1
paint one can -> create : 1
can create a -> windows : 1
create a windows -> look : 1
a windows look -> and : 1
windows look and -> feel : 1
and feel under -> gnu : 1
feel under gnu -> this : 1
under gnu this -> helped : 1
gnu this helped -> developers : 1
this helped developers -> easily : 1
helped developers easily -> port : 1
developers easily port -> across : 1
easily port across -> because : 1
port across because -> of : 1
across because of -> the : 1
of the minimal -> target : 1
the minimal target -> platform : 1
minimal target platform -> as : 1
target platform as -> the : 1
platform as the -> emulation : 1
as the emulation -> was : 1
the emulation was -> qt : 1
emulation was qt -> started : 1
was qt started -> to : 1
qt started to -> use : 1
started to use -> apis : 1
to use apis -> for : 1
use apis for -> the : 1
apis for the -> with : 1
for the with -> its : 1
the with its -> own : 1
with its own -> native : 1
its own native -> widget : 1
own native widget -> this : 1
native widget this -> resolved : 1
widget this resolved -> the : 1
this resolved the -> issue : 1
resolved the issue -> with : 1
the issue with -> emulation : 1
issue with emulation -> of : 1
with emulation of -> own : 1
emulation of own -> paint : 1
of own paint -> but : 1
own paint but -> at : 1
paint but at -> the : 1
at the cost -> of : 1
cost of no -> more : 1
of no more -> uniform : 1
no more uniform -> look : 1
more uniform look -> and : 1
uniform look and -> feel : 1
and feel across -> the : 1
feel across the -> qt : 1
across the qt -> library : 1
qt library has -> an : 1
library has an -> excellent : 1
has an excellent -> binding : 1
an excellent binding -> with : 1
excellent binding with -> the : 1
binding with the -> python : 1
with the python -> programming : 1
python programming christened -> as : 1
programming christened as -> are : 1
christened as are -> some : 1
are some essential -> things : 1
some essential things -> a : 1
essential things a -> programmer : 1
things a programmer -> must : 1
programmer must understand -> before : 1
must understand before -> leverages : 1
understand before leverages -> the : 1
before leverages the -> in : 1
leverages the in -> the : 1
we will quickly -> cover : 1
will quickly cover -> aspects : 1
quickly cover aspects -> of : 1
cover aspects of -> the : 1
of the qt -> object : 2
qt object signals -> and : 1
object signals and -> the : 1
signals and the -> event : 1
the event and -> the : 1
event and the -> object : 1
event and the -> mouse : 1
the object a -> gui : 1
object a gui -> both : 1
a gui both -> efficiency : 1
gui both efficiency -> flexibility : 1
both efficiency flexibility -> are : 1
efficiency flexibility are -> key : 1
flexibility are key -> the : 1
are key the -> standard : 1
key the standard -> object : 1
the standard object -> model : 1
standard object model -> provides : 1
object model provides -> very : 1
model provides very -> efficient : 1
provides very efficient -> but : 1
very efficient but -> its : 1
efficient but its -> static : 1
but its static -> nature : 1
its static nature -> is : 1
static nature is -> inflexible : 1
nature is inflexible -> in : 1
is inflexible in -> certain : 1
inflexible in certain -> problematic : 1
in certain problematic -> the : 1
certain problematic the -> qt : 1
problematic the qt -> framework : 1
qt framework combines -> the : 1
framework combines the -> speed : 1
combines the speed -> of : 1
the speed of -> with : 1
speed of with -> the : 1
of with the -> flexibility : 1
of with the -> evolution : 1
with the flexibility -> of : 1
flexibility of the -> qt : 1
qt object qt -> object : 1
object qt object -> the : 1
object the following -> and : 1
following and for -> seamless : 1
and for seamless -> object : 1
for seamless object -> and : 1
seamless object and -> designable : 1
object and designable -> events : 1
and designable events -> and : 1
designable events and -> event : 1
events and event -> internally : 1
and event internally -> driven : 1
event internally driven -> enabling : 1
internally driven enabling -> work : 1
driven enabling work -> in : 1
enabling work in -> many : 1
work in many -> of : 1
in many of -> the : 1
many of the -> tasks : 1
of the tasks -> in : 1
the tasks in -> an : 1
tasks in an -> with : 1
in an with -> contextual : 1
an with contextual -> string : 1
with contextual string -> pointers : 1
contextual string pointers -> that : 1
string pointers that -> are : 1
pointers that are -> automatically : 1
that are automatically -> set : 1
are automatically set -> to : 1
automatically set to -> when : 1
set to when -> the : 1
to when the -> referenced : 1
when the referenced -> object : 1
the referenced object -> is : 1
referenced object is -> working : 1
object is working -> across : 1
is working across -> library : 1
working across library -> of : 1
across library of -> these : 1
library of these -> features : 1
of these features -> are : 1
these features are -> implemented : 1
features are implemented -> as : 1
are implemented as -> standard : 1
are implemented as -> passive : 1
implemented as standard -> based : 1
as standard based -> on : 1
standard based on -> inheritance : 1
based on inheritance -> from : 1
on inheritance from -> like : 1
inheritance from like -> signals : 1
from like signals -> and : 1
like signals and -> slots : 1
signals and slots -> and : 1
signals and slots -> mechanism : 3
signals and slots -> system : 1
signals and slots -> can : 1
signals and slots -> for : 1
signals and slots -> the : 2
and slots and -> the : 1
slots and the -> object : 1
the object properties -> require : 1
object properties require -> the : 1
properties require the -> system : 1
require the system -> provided : 1
the system provided -> by : 1
system provided by -> own : 1
provided by own -> the : 1
by own the -> system : 1
own the system -> is : 1
the system is -> an : 1
system is an -> extension : 1
is an extension -> of : 1
an extension of -> the : 1
extension of the -> to : 1
of the to -> make : 1
the to make -> it : 1
to make it -> better : 1
make it better -> suited : 1
it better suited -> for : 1
suited for gui -> the : 1
for gui the -> moc : 1
gui the moc -> acts : 1
the moc acts -> as : 1
moc acts as -> an : 1
acts as an -> generates : 1
as an generates -> code : 1
an generates code -> based : 1
generates code based -> on : 1
code based on -> the : 1
on the hints -> embedded : 1
the hints embedded -> in : 1
hints embedded in -> the : 1
in the and -> removes : 1
in the and -> execute : 1
in the and -> so : 1
in the and -> java : 1
in the and -> cycles : 1
in the and -> decentralized : 1
the and removes -> those : 1
and removes those -> hints : 1
removes those hints -> for : 1
those hints for -> an : 1
hints for an -> ansi : 1
for an ansi -> compiler : 1
an ansi compiler -> to : 1
ansi compiler to -> perform : 1
compiler to perform -> its : 1
to perform its -> normal : 1
perform its normal -> compilation : 1
its normal compilation -> us : 1
normal compilation us -> look : 1
compilation us look -> at : 1
look at some -> classes : 1
at some classes -> in : 1
some classes in -> the : 1
qt object base -> class : 1
object base class -> of : 1
base class of -> all : 1
class of all -> qt : 1
of all qt -> objects : 1
all qt objects -> template : 1
qt objects template -> class : 1
objects template class -> that : 1
class that provides -> guarded : 1
class that provides -> the : 1
that provides guarded -> pointers : 1
provides guarded pointers -> to : 1
guarded pointers to -> signals : 1
pointers to signals -> from : 1
to signals from -> identifiable : 1
signals from identifiable -> senders : 1
from identifiable senders -> like : 1
identifiable senders like -> a : 1
senders like a -> union : 1
like a union -> for : 1
a union for -> the : 1
union for the -> most : 1
for the most -> common : 1
most common qt -> data : 1
common qt data -> types : 1
qt data types -> information : 1
data types information -> about : 1
types information about -> a : 1
information about a -> class : 1
about a class -> about : 1
a class about -> an : 1
class about an -> enumerator : 1
about an enumerator -> about : 1
an enumerator about -> a : 1
enumerator about a -> member : 1
about a member -> function : 1
a member function -> about : 1
member function about -> qt : 1
function about qt -> objects : 1
about qt objects -> about : 1
qt objects about -> a : 1
objects about a -> property : 1
about a property -> named : 1
a property named -> types : 1
property named types -> in : 1
named types in -> the : 1
system the lifetimes -> of : 1
the lifetimes of -> multiple : 1
lifetimes of multiple -> objects : 1
of multiple objects -> are : 1
multiple objects are -> generally : 1
objects are generally -> treated : 1
are generally treated -> as : 1
generally treated as -> not : 1
treated as not -> identities : 1
as not identities -> are : 1
not identities are -> not : 1
identities are not -> copied : 1
are not copied -> or : 1
not copied or -> cloning : 1
copied or cloning -> an : 1
or cloning an -> identity : 1
cloning an identity -> is : 1
an identity is -> a : 1
identity is a -> more : 1
is a more -> complex : 1
a more complex -> operation : 1
more complex operation -> than : 1
complex operation than -> copying : 1
operation than copying -> or : 1
than copying or -> assigning : 1
copying or assigning -> a : 1
or assigning a -> and : 1
assigning a and -> all : 1
a and all -> subclasses : 1
and all subclasses -> of : 1
all subclasses of -> or : 1
subclasses of or -> have : 1
of or have -> their : 1
or have their -> copy : 1
have their copy -> constructors : 1
their copy constructors -> and : 1
copy constructors and -> assignment : 1
and and slots -> are : 2
and slots are -> mechanisms : 1
and slots are -> alternatives : 1
and slots are -> loosely : 1
slots are mechanisms -> used : 1
are mechanisms used -> in : 1
mechanisms used in -> qt : 1
used in qt -> to : 1
in qt to -> achieve : 1
qt to achieve -> communication : 1
to achieve communication -> between : 1
achieve communication between -> the : 1
communication between the -> signals : 1
between the signals -> and : 1
the signals and -> slots : 5
and slots mechanism -> is : 1
and slots mechanism -> for : 2
slots mechanism is -> a : 1
mechanism is a -> central : 1
is a central -> feature : 1
a central feature -> of : 1
central feature of -> as : 1
feature of as -> a : 1
of as a -> gui : 1
as a gui -> widgets : 1
a gui widgets -> get : 1
gui widgets get -> notified : 1
widgets get notified -> about : 1
get notified about -> changes : 1
notified about changes -> in : 1
about changes in -> other : 1
changes in other -> widgets : 1
in other widgets -> in : 1
other widgets in -> qt : 1
widgets in qt -> through : 1
in qt through -> this : 1
qt through this -> in : 1
through this in -> objects : 1
this in objects -> of : 1
in objects of -> any : 1
objects of any -> kind : 1
of any kind -> communicate : 1
any kind communicate -> with : 1
kind communicate with -> one : 1
communicate with one -> another : 1
with one another -> using : 1
one another using -> this : 1
another using this -> for : 1
using this for -> when : 1
this for when -> a : 1
for when a -> user : 1
when a user -> clicks : 1
a user clicks -> on : 1
a user clicks -> inside : 1
user clicks on -> a : 1
user clicks on -> the : 1
clicks on a -> close : 1
clicks on a -> custom : 1
on a close -> we : 1
a close we -> probably : 1
close we probably -> want : 1
we probably want -> the : 1
probably want the -> function : 1
want the function -> to : 1
to be and -> slots : 1
to be and -> dispatched : 1
be and slots -> are : 1
slots are alternatives -> to : 1
are alternatives to -> the : 1
alternatives to the -> callback : 1
to the callback -> technique : 1
the callback technique -> in : 1
callback technique in -> a : 1
technique in a -> signal : 1
in a signal -> gets : 1
a signal gets -> emitted : 1
signal gets emitted -> when : 1
gets emitted when -> a : 1
emitted when a -> particular : 1
when a particular -> event : 1
when a particular -> group : 1
a particular event -> all : 1
particular event all -> of : 1
event all of -> the : 1
of the widgets -> in : 1
of the widgets -> and : 1
the widgets in -> the : 2
widgets in the -> qt : 1
widgets in the -> implementation : 1
qt framework have -> predefined : 1
framework have predefined -> but : 1
have predefined but -> we : 1
predefined but we -> can : 2
we can always -> subclass : 1
can always subclass -> a : 1
always subclass a -> widget : 1
subclass a widget -> to : 1
a widget to -> add : 1
widget to add -> our : 1
to add our -> own : 1
add our own -> signals : 1
our own signals -> to : 1
own signals to -> a : 1
signals to a -> slot : 1
to a slot -> is : 1
a slot is -> a : 1
slot is a -> function : 1
function that gets -> called : 1
that gets called -> in : 1
that gets called -> every : 1
gets called in -> response : 1
called in response -> to : 2
in response to -> a : 1
in response to -> certain : 1
response to a -> similar : 1
to a similar -> to : 1
a similar to -> predefined : 1
similar to predefined -> the : 1
to predefined the -> qt : 1
to predefined the -> widget : 1
predefined the qt -> widgets : 1
the qt widgets -> have : 1
qt widgets have -> many : 1
widgets have many -> predefined : 1
have many predefined -> but : 1
many predefined but -> we : 1
we can add -> custom : 1
can add custom -> slots : 1
add custom slots -> to : 1
custom slots to -> handle : 1
slots to handle -> the : 2
handle the signals -> that : 1
the signals that -> we : 1
the signals that -> correspond : 1
the signals that -> emit : 1
signals that we -> are : 1
are interested following -> diagram : 1
interested following diagram -> from : 1
following diagram from -> official : 1
diagram from official -> documentation : 1
from official documentation -> demonstrates : 1
official documentation demonstrates -> how : 1
documentation demonstrates how -> communication : 1
demonstrates how communication -> happens : 1
how communication happens -> through : 1
communication happens through -> signals : 1
happens through signals -> and : 1
through signals and -> and : 1
signals and and -> slots : 1
slots are loosely -> coupled : 1
are loosely coupled -> communication : 1
loosely coupled communication -> the : 1
coupled communication the -> class : 1
communication the class -> that : 1
the class that -> emits : 1
class that emits -> a : 1
class that emits -> the : 1
emits a signal -> care : 1
emits a signal -> connected : 1
a signal care -> about : 1
signal care about -> the : 1
care about the -> slot : 1
about the slot -> which : 1
the slot which -> receives : 1
slot which receives -> the : 1
which receives the -> signals : 1
receives the signals -> are : 1
the signals are -> a : 1
signals are a -> perfect : 1
are a perfect -> example : 1
a perfect example -> of : 1
perfect example of -> fire : 1
example of fire -> and : 1
of fire and -> forget : 1
and forget the -> signals : 1
and forget the -> pushing : 1
forget the signals -> and : 1
and slots system -> ensures : 1
slots system ensures -> that : 1
system ensures that -> if : 1
ensures that if -> a : 1
that if a -> signal : 1
if a signal -> is : 1
a signal is -> connected : 1
a signal is -> the : 1
signal is connected -> to : 1
is connected to -> a : 1
connected to a -> the : 1
to a the -> slot : 1
a the slot -> will : 1
the slot will -> be : 1
slot will be -> called : 1
be called with -> the : 1
called with the -> parameters : 1
with the parameters -> at : 1
the parameters at -> the : 1
parameters at the -> right : 1
at the right -> both : 1
the right both -> signals : 1
right both signals -> and : 1
both signals and -> slots : 1
both signals and -> receiving : 1
and slots can -> take : 1
slots can take -> any : 1
can take any -> number : 1
take any number -> of : 1
of arguments of -> any : 1
arguments of any -> and : 1
of any and -> they : 1
any and they -> are : 1
they are completely -> type : 1
are completely type -> the : 1
completely type the -> signatures : 1
type the signatures -> of : 1
the signatures of -> both : 1
signatures of both -> signals : 1
of both signals -> and : 1
signals and receiving -> slots : 1
and receiving slots -> must : 1
receiving slots must -> the : 1
slots must the -> compilers : 1
must the compilers -> can : 1
the compilers can -> help : 1
compilers can help -> us : 1
to detect type -> as : 1
detect type as -> a : 1
type as a -> objects : 1
as a objects -> inherited : 1
a objects inherited -> from : 1
objects inherited from -> or : 1
inherited from or -> any : 1
from or any -> of : 1
or any of -> its : 1
any of its -> subclasses : 1
of its subclasses -> can : 1
its subclasses can -> contain : 1
subclasses can contain -> signals : 1
can contain signals -> and : 1
contain signals and -> signals : 1
signals and signals -> are : 1
and signals are -> emitted : 1
signals are emitted -> by : 1
are emitted by -> an : 1
an object when -> it : 1
object when it -> changes : 1
when it changes -> its : 1
it changes its -> which : 1
changes its which -> may : 1
its which may -> be : 1
which may be -> interesting : 1
may be interesting -> to : 1
be interesting to -> other : 1
interesting to other -> the : 1
to other the -> object : 1
other the object -> know : 1
the object know -> if : 1
object know if -> there : 1
know if there -> are : 1
if there are -> any : 1
if there are -> several : 1
there are any -> objects : 1
are any objects -> at : 1
any objects at -> the : 1
objects at the -> receiving : 1
at the receiving -> a : 1
the receiving a -> signal : 1
receiving a signal -> can : 1
a signal can -> be : 1
signal can be -> connected : 1
can be connected -> to : 2
be connected to -> as : 1
be connected to -> the : 3
be connected to -> and : 1
connected to as -> many : 1
to as many -> slots : 1
as many slots -> as : 1
many slots as -> we : 1
slots as we -> can : 1
we can connect -> as : 1
can connect as -> many : 1
connect as many -> signals : 1
as many signals -> as : 1
many signals as -> we : 1
signals as we -> want : 1
as we want -> to : 1
want to a -> single : 1
a single it -> is : 1
single it is -> even : 1
it is even -> possible : 1
is even possible -> to : 1
even possible to -> connect : 1
possible to connect -> a : 1
to connect a -> signal : 1
connect a signal -> to : 1
a signal to -> another : 1
signal to another -> signal : 1
to another signal -> chaining : 1
another signal chaining -> is : 1
signal chaining is -> signals : 1
chaining is signals -> and : 1
is signals and -> systems : 1
signals and systems -> make : 1
and systems make -> an : 1
systems make an -> extremely : 1
make an extremely -> flexible : 1
an extremely flexible -> and : 1
extremely flexible and -> pluggable : 1
flexible and pluggable -> component : 1
and pluggable component -> programming : 1
pluggable component programming -> events : 1
component programming events -> represent : 1
programming events represent -> things : 1
events represent things -> that : 1
represent things that -> have : 1
things that have -> happened : 1
that have happened -> within : 1
have happened within -> an : 1
happened within an -> application : 1
within an application -> or : 1
an application or -> a : 1
application or a -> user : 1
a user activity -> that : 1
user activity that -> the : 1
activity that the -> application : 1
that the application -> needs : 1
the application needs -> to : 1
application needs to -> know : 1
needs to know -> in : 1
to know in -> events : 1
know in events -> are : 1
in events are -> the : 1
events are the -> objects : 1
events are the -> subscribe : 1
are the objects -> derived : 1
the objects derived -> from : 1
objects derived from -> an : 1
derived from an -> abstract : 1
from an abstract -> events : 1
an abstract events -> can : 1
abstract events can -> be : 1
can be received -> and : 1
be received and -> handled : 1
received and handled -> by : 2
and handled by -> any : 1
and handled by -> both : 1
handled by any -> instance : 1
by any instance -> of : 1
any instance of -> a : 1
of a but -> they : 1
a but they -> are : 1
but they are -> especially : 1
they are especially -> relevant : 1
are especially relevant -> to : 1
especially relevant to -> an : 1
relevant to an -> event : 1
event an appropriate -> subclass : 1
an appropriate subclass -> instance : 1
appropriate subclass instance -> gets : 1
subclass instance gets -> constructed : 1
instance gets constructed -> and : 1
gets constructed and -> its : 1
constructed and its -> a : 1
and its a -> particular : 1
its a particular -> instance : 1
instance of any -> relevant : 1
of any relevant -> by : 1
any relevant by -> calling : 1
relevant by calling -> its : 1
by calling its -> this : 1
calling its this -> function : 1
its this function -> does : 1
this function does -> not : 1
function does not -> handle : 1
not handle the -> event : 1
handle the event -> based : 1
the event based -> on : 1
event based on -> the : 1
on the type -> of : 1
type of event -> it : 1
type of event -> and : 1
of event it -> calls : 1
event it calls -> an : 1
it calls an -> event : 1
calls an event -> handler : 1
an event handler -> for : 1
event handler for -> that : 1
handler for that -> specific : 1
for that specific -> type : 1
that specific type -> of : 1
specific type of -> event : 1
of event and -> sends : 1
event and sends -> a : 1
and sends a -> response : 1
sends a response -> based : 1
a response based -> on : 1
response based on -> whether : 1
based on whether -> the : 1
on whether the -> event : 1
whether the event -> was : 2
the event was -> accepted : 2
event was accepted -> or : 2
was accepted or -> such : 1
was accepted or -> rejected : 1
accepted or such -> as : 1
or such as -> and : 1
as and come -> from : 2
and come from -> the : 2
come from the -> application : 1
come from the -> window : 1
come from the -> term : 1
from the application -> such : 1
the application such -> as : 1
application such as -> and : 1
from the window -> and : 1
the window and -> such : 1
window and such -> as : 1
and such as -> come : 1
such as come -> from : 1
as come from -> other : 1
come from other -> most : 1
from other most -> events : 1
other most events -> have : 1
most events have -> specific : 1
events have specific -> subclasses : 1
have specific subclasses -> derived : 1
specific subclasses derived -> from : 1
subclasses derived from -> and : 1
from and sometimes -> functions : 1
and sometimes functions -> to : 1
sometimes functions to -> meet : 1
functions to meet -> the : 1
to meet the -> specific : 1
to meet the -> demands : 1
meet the specific -> behavior : 1
the specific behavior -> of : 1
specific behavior of -> the : 1
of the extended -> to : 1
the extended to -> class : 1
extended to class -> adds : 1
to class adds -> and : 1
class adds and -> functions : 1
adds and functions -> to : 1
functions to enable -> widgets : 1
to enable widgets -> to : 1
enable widgets to -> discover : 1
widgets to discover -> the : 1
to discover the -> positions : 1
discover the positions -> of : 1
the positions of -> the : 1
positions of the -> mouse : 2
of the mouse -> event : 1
of the mouse -> the : 1
of the mouse -> area : 2
of the mouse -> will : 1
of the mouse -> display : 2
of the mouse -> along : 1
the mouse event -> has : 1
mouse event has -> a : 1
event has a -> type : 1
has a type -> associated : 1
a type associated -> with : 1
type associated with -> defined : 1
associated with defined -> under : 1
with defined under -> and : 1
defined under and -> this : 1
under and this -> is : 1
is a convenient -> source : 1
a convenient source -> of : 1
convenient source of -> type : 1
source of type -> information : 1
of type information -> that : 1
type information that -> is : 1
information that is -> used : 1
that is used -> to : 1
used to quickly -> identify : 1
to quickly identify -> what : 1
quickly identify what -> subclass : 1
identify what subclass -> the : 1
what subclass the -> event : 1
subclass the event -> has : 1
the event has -> been : 1
event has been -> constructed : 1
has been constructed -> events : 1
been constructed events -> are : 1
constructed events are -> rendered : 1
events are rendered -> by : 1
are rendered by -> calling : 1
rendered by calling -> associated : 1
by calling associated -> virtual : 1
calling associated virtual -> the : 1
associated virtual the -> virtual : 1
virtual the virtual -> function : 1
the virtual function -> is : 1
the virtual function -> if : 1
virtual function is -> responsible : 1
function is responsible -> for : 1
responsible for responding -> as : 1
for responding as -> if : 1
responding as if -> custom : 1
as if custom -> virtual : 1
if custom virtual -> function : 1
custom virtual function -> implementations : 1
virtual function implementations -> do : 1
function implementations do -> not : 1
implementations do not -> perform : 1
do not perform -> all : 1
not perform all -> that : 1
perform all that -> is : 1
all that is -> we : 1
that is we -> may : 1
is we may -> need : 1
we may need -> to : 1
may need to -> call : 1
to call the -> base : 1
call the base -> the : 1
call the base -> class : 1
the base the -> following : 1
base the following -> example : 1
following example handles -> the : 1
example handles the -> left : 1
handles the left -> mouse : 1
the left mouse -> button : 1
the left mouse -> inside : 1
left mouse button -> clicks : 1
left mouse button -> else : 1
left mouse button -> press : 1
mouse button clicks -> on : 1
button clicks on -> a : 1
a custom label -> while : 1
a custom label -> class : 1
a custom label -> in : 1
custom label while -> passing : 1
label while passing -> all : 1
while passing all -> other : 1
passing all other -> button : 1
all other button -> clicks : 1
other button clicks -> to : 1
button clicks to -> the : 1
clicks to the -> base : 1
to the base -> if : 1
to the base -> class : 2
to the base -> url : 1
the base if -> handle : 1
base if handle -> left : 1
if handle left -> mouse : 1
handle left mouse -> button : 1
mouse button else -> pass : 1
button else pass -> on : 1
else pass on -> other : 1
pass on other -> buttons : 1
on other buttons -> to : 1
other buttons to -> base : 1
buttons to base -> we : 1
to base we -> want : 1
base we want -> to : 1
want to replace -> base : 1
to replace base -> class : 1
replace base class -> we : 1
base class we -> must : 1
base class we -> can : 1
class we must -> implement : 1
we must implement -> everything : 1
must implement everything -> in : 1
implement everything in -> the : 1
everything in the -> virtual : 1
in the virtual -> function : 1
virtual function if -> the : 1
function if the -> requirement : 1
if the requirement -> is : 1
the requirement is -> to : 1
requirement is to -> simply : 1
is to simply -> extend : 1
to simply extend -> base : 1
simply extend base -> class : 1
extend base class -> we : 1
class we can -> implement : 1
can implement what -> we : 1
implement what we -> and : 1
what we and -> call : 1
we and call -> the : 1
and call the -> base : 1
and call the -> the : 1
base class function -> for : 1
class function for -> any : 1
function for any -> other : 1
any other case -> that : 1
other case that -> we : 1
case that we -> want : 1
that we want -> to : 1
want to applications -> that : 1
to applications that -> are : 1
applications that are -> using : 1
that are using -> the : 1
qt framework want -> to : 1
framework want to -> send : 1
want to send -> their : 1
to send their -> own : 1
send their own -> just : 1
their own just -> like : 1
own just like -> the : 1
just like the -> suitable : 1
like the suitable -> custom : 1
the suitable custom -> events : 1
suitable custom events -> can : 1
custom events can -> be : 1
be constructed by -> using : 1
be constructed by -> composing : 1
constructed by using -> event : 1
by using event -> objects : 1
by using event -> subscription : 1
using event objects -> and : 1
event objects and -> sending : 1
objects and sending -> them : 1
and sending them -> with : 1
sending them with -> and : 1
them with and -> is : 1
and is synchronous -> in : 1
is synchronous in -> it : 1
synchronous in it -> processes : 1
in it processes -> the : 1
it processes the -> event : 1
processes the event -> for : 1
the event for -> many : 1
event for many -> event : 1
for many event -> there : 1
many event there -> is : 1
a function called -> which : 1
function called which -> tells : 1
called which tells -> us : 1
which tells us -> whether : 1
tells us whether -> the : 1
us whether the -> event : 1
accepted or rejected -> by : 1
or rejected by -> the : 1
rejected by the -> last : 1
by the last -> handler : 1
the last handler -> that : 1
last handler that -> was : 1
handler that was -> is : 1
that was is -> asynchronous : 1
was is asynchronous -> in : 1
is asynchronous in -> it : 1
is asynchronous in -> and : 1
asynchronous in it -> posts : 1
in it posts -> the : 1
it posts the -> event : 1
posts the event -> in : 1
event in a -> queue : 1
in a queue -> for : 1
a queue for -> later : 1
queue for later -> the : 1
for later the -> next : 1
later the next -> time : 1
the next time -> main : 1
next time main -> event : 1
time main event -> loop : 1
main event loop -> it : 1
event loop it -> dispatches : 1
loop it dispatches -> all : 1
it dispatches all -> posted : 1
dispatches all posted -> with : 1
all posted with -> some : 1
posted with some -> for : 1
with some for -> if : 1
some for if -> there : 1
for if there -> are : 1
there are several -> resize : 1
are several resize -> they : 1
several resize they -> are : 1
resize they are -> compressed : 1
they are compressed -> into : 1
are compressed into -> as : 1
compressed into as -> a : 1
into as a -> union : 1
as a union -> of : 1
a union of -> all : 1
union of all -> resize : 1
of all resize -> which : 1
all resize which -> avoids : 1
resize which avoids -> flickering : 1
which avoids flickering -> in : 1
avoids flickering in -> the : 1
flickering in the -> user : 1
in the user -> qt : 1
the user qt -> the : 1
user qt the -> signals : 1
qt the signals -> and : 1
slots mechanism for -> the : 1
slots mechanism for -> object : 1
for the dynamic -> property : 1
the dynamic property -> and : 1
the dynamic property -> the : 1
the dynamic property -> addition : 1
dynamic property and -> type : 1
property and type -> qt : 1
and type qt -> system : 1
type qt system -> is : 1
qt system is -> based : 1
system is based -> on : 1
based on three -> key : 1
on three key -> the : 1
three key the -> base : 1
key the base -> class : 1
base class that -> provides : 1
that provides the -> advantages : 1
provides the advantages -> of : 1
the advantages of -> the : 1
advantages of the -> system : 1
system to qt -> the : 1
to qt the -> macro : 1
qt the macro -> to : 1
the macro to -> provide : 1
macro to provide -> in : 1
to provide in -> the : 1
provide in the -> private : 1
in the private -> section : 1
the private section -> of : 2
private section of -> the : 2
the class used -> to : 1
class used to -> enable : 1
used to enable -> such : 1
to enable such -> as : 1
enable such as -> dynamic : 1
such as dynamic -> and : 1
as dynamic and -> it : 1
dynamic and it -> supplies : 1
and it supplies -> each : 1
it supplies each -> subclass : 1
supplies each subclass -> with : 1
each subclass with -> the : 1
subclass with the -> necessary : 1
with the necessary -> code : 1
the necessary code -> to : 1
necessary code to -> implement : 1
code to implement -> moc : 1
to implement moc -> executes : 1
implement moc executes -> before : 1
moc executes before -> the : 1
executes before the -> actual : 1
before the actual -> compilation : 1
the actual compilation -> of : 1
actual compilation of -> a : 1
compilation of a -> qt : 1
of a qt -> source : 1
a qt source -> when : 1
qt source when -> the : 1
source when the -> moc : 1
when the moc -> finds : 1
the moc finds -> class : 1
moc finds class -> declarations : 1
finds class declarations -> that : 1
class declarations that -> contain : 1
declarations that contain -> the : 1
that contain the -> it : 1
contain the it -> produces : 1
the it produces -> another : 1
it produces another -> source : 1
produces another source -> with : 1
another source with -> for : 1
source with for -> each : 1
with for each -> of : 1
each of those -> this : 1
of those this -> generated : 1
those this generated -> source : 1
this generated source -> file : 1
generated source file -> is : 1
source file is -> either : 1
file is either -> included : 1
is either included -> source : 1
either included source -> more : 1
included source more -> compiled : 1
source more compiled -> and : 1
more compiled and -> linked : 1
compiled and linked -> with : 1
and linked with -> the : 1
linked with the -> qt : 1
the qt get -> started : 1
qt get started -> with : 1
started with gui -> application : 1
with gui application -> development : 1
gui application development -> using : 2
gui application development -> it : 1
application development using -> before : 1
application development using -> we : 1
development using before -> getting : 1
using before getting -> into : 1
before getting into -> the : 1
before getting into -> error : 1
getting into the -> following : 1
into the following -> download : 1
the following download -> qt : 1
following download qt -> sdk : 1
download qt sdk -> and : 1
qt sdk and -> qt : 1
sdk and qt -> creator : 1
and qt creator -> from : 1
and qt creator -> uses : 1
qt creator from -> official : 1
creator from official -> site : 1
from official site -> the : 1
official site the -> codes : 1
site the codes -> that : 1
the codes that -> we : 1
codes that we -> are : 1
chapter are entirely -> lgpl : 1
are entirely lgpl -> compatible : 1
entirely lgpl compatible -> and : 1
lgpl compatible and -> will : 1
compatible and will -> be : 1
will be by -> writing : 1
be by writing -> pure : 1
by writing pure -> the : 1
writing pure the -> qt : 1
pure the qt -> framework : 1
framework is designed -> to : 1
is designed to -> be : 1
designed to be -> pleasant : 1
to be pleasant -> and : 1
be pleasant and -> intuitive : 1
pleasant and intuitive -> so : 1
and intuitive so -> that : 1
intuitive so that -> you : 1
you can handcode -> an : 1
can handcode an -> entire : 1
handcode an entire -> application : 1
an entire application -> without : 1
entire application without -> using : 1
application without using -> the : 1
without using the -> qt : 1
the qt creator -> creator : 1
qt creator creator -> is : 1
creator creator is -> a : 1
creator is a -> and : 1
a and qml -> integrated : 1
and qml integrated -> development : 1
qml integrated development -> a : 1
integrated development a -> part : 1
development a part -> of : 1
of the sdk -> for : 1
of the sdk -> using : 1
the sdk for -> the : 1
sdk for the -> qt : 1
for the qt -> gui : 1
qt gui application -> development : 1
application development it -> includes : 1
development it includes -> a : 1
it includes a -> visual : 1
includes a visual -> debugger : 1
a visual debugger -> and : 1
visual debugger and -> an : 1
debugger and an -> integrated : 1
and an integrated -> gui : 1
an integrated gui -> layout : 1
integrated gui layout -> and : 1
gui layout and -> forms : 1
layout and forms -> the : 1
and forms the -> features : 1
forms the features -> include : 1
the features include -> syntax : 1
features include syntax -> highlighting : 1
include syntax highlighting -> and : 1
syntax highlighting and -> qt : 1
highlighting and qt -> creator : 1
qt creator uses -> the : 1
creator uses the -> compiler : 1
uses the compiler -> from : 1
the compiler from -> the : 1
the compiler from -> issuing : 1
compiler from the -> gnu : 1
from the gnu -> compiler : 1
the gnu compiler -> collection : 1
gnu compiler collection -> on : 1
compiler collection on -> linux : 1
collection on linux -> and : 1
on linux and -> on : 1
linux and on -> it : 1
and on it -> can : 1
on it can -> use : 1
it can use -> mingw : 1
can use mingw -> or : 1
use mingw or -> with : 1
mingw or with -> the : 1
or with the -> default : 1
with the default -> and : 1
the default and -> can : 1
default and can -> also : 1
and can also -> use : 1
also use microsoft -> console : 1
use microsoft console -> when : 1
microsoft console when -> compiled : 1
console when compiled -> from : 1
when compiled from -> source : 1
compiled from source -> clang : 1
from source clang -> is : 1
source clang is -> also : 1
clang is also -> begin : 1
is also begin -> with : 1
also begin with -> a : 1
begin with a -> simple : 1
a simple using -> a : 1
simple using a -> label : 1
using a label -> in : 1
a label in -> this : 1
label in this -> we : 1
we will create -> and : 1
we will create -> an : 1
we will create -> a : 1
will create and -> show : 1
create and show -> a : 1
and show a -> label : 1
show a label -> with : 1
a label with -> the : 1
a label with -> instantiated : 1
label with the -> text : 1
with the text -> int : 1
with the text -> when : 1
the text int -> main : 1
text int main -> qapplication : 1
int main qapplication -> qlabel : 1
main qapplication qlabel -> return : 1
qapplication qlabel return -> this : 1
qlabel return this -> we : 1
have included two -> and : 1
included two and -> the : 1
two and the -> object : 1
object is defined -> in : 1
is defined in -> the : 1
is defined in -> string : 1
defined in the -> which : 1
the which manages -> the : 1
manages the resources -> in : 1
the resources in -> an : 1
the resources in -> use : 1
resources in an -> and : 1
in an and -> it : 1
an and it -> is : 1
an and it -> has : 1
it is required -> to : 1
required to run -> any : 1
to run any -> qt : 1
run any qt -> this : 1
any qt this -> object : 1
qt this object -> accepts : 1
this object accepts -> the : 1
object accepts the -> arguments : 1
accepts the arguments -> from : 1
the arguments from -> the : 1
arguments from the -> when : 1
from the when -> is : 1
the when is -> the : 1
when is the -> qt : 1
is the qt -> event : 1
qt event loop -> gets : 1
event loop gets -> is : 1
loop gets is -> a : 1
gets is a -> program : 1
a program structure -> that : 1
program structure that -> permits : 1
structure that permits -> events : 1
that permits events -> to : 1
permits events to -> be : 1
be and dispatched -> to : 1
and dispatched to -> in : 1
dispatched to in -> an : 1
to in an -> certain : 1
in an certain -> functions : 1
an certain functions -> are : 1
certain functions are -> implemented : 1
functions are implemented -> as : 1
implemented as passive -> interfaces : 1
as passive interfaces -> that : 1
passive interfaces that -> get : 1
interfaces that get -> called : 1
that get called -> in : 1
get called in -> response : 1
response to certain -> the : 1
to certain the -> event : 1
certain the event -> loop : 1
event loop generally -> continues : 1
loop generally continues -> running : 1
generally continues running -> until : 1
continues running until -> a : 1
running until a -> terminating : 1
until a terminating -> event : 1
a terminating event -> occurs : 1
terminating event occurs -> user : 1
event occurs user -> clicks : 1
occurs user clicks -> on : 1
clicks on the -> for : 1
on the for -> is : 1
the for is -> the : 1
for is the -> simplest : 1
the simplest widget -> among : 1
simplest widget among -> all : 1
widget among all -> qt : 1
among all qt -> defined : 1
all qt defined -> in : 1
qt defined in -> in : 1
defined in in -> this : 1
in in this -> the : 1
this the label -> is : 1
this the label -> gets : 1
the label is -> instantiated : 1
label is instantiated -> with : 1
is instantiated with -> the : 2
instantiated with the -> text : 1
instantiated with the -> custom : 1
the text when -> gets : 1
text when gets -> a : 1
when gets a -> label : 1
gets a label -> with : 1
label with instantiated -> text : 1
with instantiated text -> will : 1
instantiated text will -> appear : 1
text will appear -> on : 1
will appear on -> the : 1
on the screen -> in : 1
the screen in -> its : 1
screen in its -> own : 1
in its own -> window : 1
in its own -> and : 1
its own window -> to : 1
own window to -> build : 1
window to build -> and : 1
to build and -> run : 1
to build and -> before : 1
build and run -> the : 3
and run the -> the : 1
and run the -> as : 1
and run the -> introduction : 1
and run the -> this : 1
run the the -> first : 1
the the first -> thing : 1
the the first -> stream : 1
the first thing -> we : 1
first thing we -> need : 1
thing we need -> is : 1
we need is -> a : 1
need is a -> project : 1
is a project -> to : 1
a project to -> create : 1
project to create -> a : 1
create a project -> file : 2
a project file -> and : 1
a project file -> for : 1
project file and -> compile : 1
project file and -> add : 1
file and compile -> the : 1
and compile the -> we : 1
compile the we -> need : 1
the we need -> to : 1
to follow these -> a : 1
to follow these -> we : 1
follow these a -> directory : 1
these a directory -> and : 1
a directory and -> save : 1
a directory and -> creates : 1
directory and save -> the : 1
and save the -> source : 1
save the source -> code : 1
source code in -> a : 1
in a cpp -> residing : 1
in a cpp -> void : 1
a cpp residing -> in : 1
cpp residing in -> this : 1
residing in this -> a : 1
in this a -> shell : 1
in this a -> new : 1
this a shell -> and : 1
a shell and -> verify : 1
shell and verify -> the : 1
and verify the -> version : 1
verify the version -> of : 1
the version of -> installed : 1
version of installed -> by : 1
of installed by -> using : 1
installed by using -> the : 1
using the if -> be : 1
the if be -> the : 1
if be the -> installation : 1
be the installation -> path : 1
the installation path -> needs : 1
installation path needs -> to : 1
path needs to -> be : 1
to be added -> to : 1
be added to -> the : 1
added to the -> environment : 1
added to the -> observable : 1
to the environment -> change : 1
the environment change -> the : 1
environment change the -> directory : 1
change the directory -> into : 1
the directory into -> the : 1
directory into the -> qt : 1
the qt file -> path : 1
qt file path -> in : 1
file path in -> the : 1
the and execute -> this : 1
and execute this -> will : 1
execute this will -> create : 1
this will create -> a : 1
will create a -> project : 1
will create a -> composite : 1
will create a -> simple : 1
project file for -> the : 1
file for the -> the : 1
the the project -> file : 1
the project file -> and : 1
the project file -> to : 1
file and add -> the : 1
and add the -> following : 1
add the following -> line : 2
add the following -> the : 1
the following line -> to : 1
the following line -> of : 1
following line to -> the : 1
line to the -> file : 1
to the file -> after : 1
the file after -> includepath : 1
file after includepath -> qt : 1
after includepath qt -> widgets : 1
includepath qt widgets -> run : 1
qt widgets run -> arguments : 1
widgets run arguments -> to : 1
run arguments to -> create : 1
arguments to create -> the : 1
to create the -> file : 1
to create the -> class : 1
to create the -> widget : 1
create the file -> that : 1
the file that -> contains : 1
file that contains -> the : 1
contains the rules -> to : 1
the rules to -> build : 1
rules to build -> your : 1
to build your -> or : 1
build your or -> depending : 1
your or depending -> on : 1
or depending on -> the : 1
depending on the -> which : 1
on the which -> builds : 1
the which builds -> the : 1
which builds the -> application : 1
builds the application -> according : 1
the application according -> to : 1
application according to -> the : 1
according to the -> rules : 1
to the rules -> specified : 1
the rules specified -> in : 1
rules specified in -> you : 1
specified in you -> run : 1
in you run -> the : 1
you run the -> a : 1
run the a -> small : 1
the a small -> window : 1
a small window -> with : 1
small window with -> a : 1
window with a -> label : 1
with a label -> steps : 1
a label steps -> to : 1
label steps to -> building : 1
steps to building -> any : 1
to building any -> qt : 1
building any qt -> gui : 1
any qt gui -> applications : 1
qt gui applications -> are : 1
gui applications are -> the : 1
applications are the -> except : 1
are the except -> for : 1
the except for -> the : 1
except for the -> changes : 1
for the changes -> that : 1
the changes that -> may : 1
changes that may -> be : 1
that may be -> required : 1
may be required -> in : 1
be required in -> project : 1
required in project -> for : 1
in project for -> all : 1
project for all -> of : 1
for all of -> the : 1
of the future -> examples : 1
the future examples -> that : 1
future examples that -> we : 1
examples that we -> will : 1
examples that we -> discussed : 1
will discuss in -> this : 1
in this and -> means : 1
in this and -> the : 1
this and means -> to : 1
and means to -> follow : 1
means to follow -> these : 1
follow these we -> go : 1
these we go -> on : 1
we go on -> to : 1
go on to -> the : 1
the next have -> some : 1
next have some -> replace : 1
have some replace -> the : 1
some replace the -> instantiation : 1
replace the instantiation -> with : 1
the instantiation with -> the : 1
instantiation with the -> following : 1
the following rebuild -> and : 1
following rebuild and -> run : 1
rebuild and run -> the : 1
run the as -> this : 1
as this code -> it : 1
this code it -> is : 1
code it is -> easy : 1
it is easy -> to : 1
easy to customize -> the : 1
to customize the -> user : 1
customize the user -> interface : 1
the user interface -> by : 1
user interface by -> using : 1
interface by using -> some : 1
using some simple -> the : 1
some simple the -> next : 1
simple the next -> we : 1
how to handle -> the : 1
how to handle -> system : 1
how to handle -> qt : 1
how to handle -> errors : 1
how to handle -> exceptions : 1
handle the qt -> events : 1
the qt events -> and : 1
the qt events -> using : 1
qt events and -> the : 1
qt events and -> signals : 1
events and the -> use : 1
events and the -> we : 1
and the use -> of : 1
use of signals -> and : 1
of signals and -> slots : 1
and slots for -> object : 1
slots for object -> event : 1
for object event -> model : 1
object event model -> with : 1
with an this -> we : 1
with an this -> can : 1
an this we -> will : 2
will create an -> application : 1
create an application -> to : 1
mouse events in -> we : 1
mouse events in -> a : 4
events in we -> will : 1
we will override -> the : 1
will override the -> mouse : 1
override the mouse -> events : 1
override the mouse -> such : 1
events in a -> custom : 1
events in a -> implement : 1
events in a -> and : 1
events in a -> label : 1
in a custom -> and : 1
a custom and -> handle : 1
a custom and -> created : 1
custom and handle -> them : 1
and handle them -> in : 1
handle them in -> the : 1
in the dialog -> where : 1
the dialog where -> the : 1
dialog where the -> custom : 1
where the custom -> label : 1
the custom label -> is : 1
the custom label -> the : 1
custom label is -> the : 1
label is the -> approach : 1
is the approach -> to : 1
the approach to -> this : 1
approach to this -> application : 1
to this application -> is : 1
this application is -> as : 1
application is as -> a : 1
is as a -> custom : 1
as a custom -> inherited : 1
a custom inherited -> from : 1
custom inherited from -> the : 1
inherited from the -> framework : 1
from the framework -> and : 1
the framework and -> override : 1
framework and override -> the : 1
and override the -> mouse : 1
the mouse such -> as : 1
mouse such as -> and : 1
and the signals -> that : 1
signals that correspond -> to : 1
that correspond to -> these : 1
correspond to these -> events : 1
to these events -> in : 1
these events in -> and : 1
events in and -> emit : 1
in and emit -> them : 1
and emit them -> from : 1
emit them from -> the : 1
them from the -> corresponding : 1
the corresponding event -> a : 1
the corresponding event -> bool : 1
corresponding event a -> dialog : 1
event a dialog -> class : 1
a dialog class -> inherited : 1
dialog class inherited -> from : 1
class inherited from -> and : 1
class inherited from -> defined : 1
inherited from and -> handcode : 1
from and handcode -> the : 1
and handcode the -> positions : 1
handcode the positions -> and : 1
the positions and -> layouts : 1
the positions and -> sizes : 1
positions and layouts -> of : 1
and layouts of -> all : 1
layouts of all -> of : 1
of the including -> the : 1
including the custom -> widget : 1
the custom widget -> created : 1
custom widget created -> to : 1
widget created to -> handle : 1
created to handle -> mouse : 1
handle mouse the -> dialog : 1
mouse the dialog -> define : 1
the dialog define -> the : 1
dialog define the -> slots : 1
define the slots -> to : 1
the slots to -> handle : 1
handle the emitted -> signals : 1
the emitted signals -> from : 1
emitted signals from -> and : 1
signals from and -> display : 1
from and display -> the : 1
and display the -> appropriate : 1
display the appropriate -> results : 1
the appropriate results -> in : 1
appropriate results in -> the : 1
the this dialog -> under : 1
this dialog under -> the : 1
dialog under the -> and : 1
under the and -> the : 1
and the project -> file : 1
project file to -> build : 1
file to build -> a : 1
build a widget -> application : 1
a widget application -> and : 1
widget application and -> get : 1
application and get -> it : 1
and get it -> up : 1
get it up -> and : 1
it up and -> a : 1
up and a -> custom : 1
and a custom -> write : 1
a custom write -> the : 1
custom write the -> header : 1
write the header -> file : 1
the header file -> to : 2
header file to -> declare : 1
header file to -> create : 1
header file to -> see : 1
file to declare -> the : 1
to declare the -> class : 1
declare the class -> class : 1
the class class -> public : 1
the class class -> class : 1
the class class -> resourceloan : 1
class class public -> qlabel : 1
class class public -> qobject : 1
class public qlabel -> explicit : 2
public qlabel explicit -> void : 1
public qlabel explicit -> int : 1
qlabel explicit void -> void : 1
explicit void void -> void : 1
void void void -> int : 1
void void void -> and : 1
void void void -> void : 3
void void void -> qlabel : 1
void void void -> the : 1
void void void -> previous : 1
void void void -> create : 1
void void int -> void : 1
void int void -> void : 1
int void void -> void : 1
void void and -> are : 1
void and are -> defined : 1
and are defined -> under : 1
are defined under -> the : 1
defined under the -> included : 1
defined under the -> classes : 1
defined under the -> namespace : 1
under the included -> and : 1
the included and -> the : 1
included and the -> class : 1
and the class -> is : 1
and the class -> has : 1
class is derived -> from : 1
is derived from -> inherit : 1
derived from inherit -> its : 1
from inherit its -> default : 1
inherit its default -> and : 1
its default and -> propertied : 1
default and propertied -> to : 1
and propertied to -> handle : 1
propertied to handle -> the : 1
handle the signaling -> the : 1
the signaling the -> private : 1
signaling the private -> section : 1
of the header -> we : 1
the header we -> have : 1
header we have -> added : 1
we have added -> a : 1
we have added -> support : 1
have added a -> macro : 1
added a macro -> to : 1
a macro to -> notify : 1
macro to notify -> the : 1
notify the moc -> that : 1
the moc that -> it : 1
moc that it -> must : 1
that it must -> generate : 1
it must generate -> code : 1
must generate code -> for : 1
generate code for -> this : 1
generate code for -> enabling : 1
code for this -> the : 1
this the code -> is : 1
code is required -> for : 1
is required for -> the : 1
required for the -> signals : 1
for the signals -> and : 1
and slots the -> type : 2
slots the type -> and : 2
the type and -> the : 3
type and the -> dynamic : 2
type and the -> operator : 1
and the dynamic -> property : 2
dynamic property the -> class : 1
property the class -> along : 1
the class along -> with : 1
with the constructor -> the : 1
the constructor the -> mouse : 1
constructor the mouse -> events : 1
mouse events such -> and : 1
events such and -> the : 1
such and the -> public : 1
and the public -> integer : 1
the public integer -> variables : 1
public integer variables -> hold : 1
integer variables hold -> the : 1
variables hold the -> current : 1
the current and -> coordinates : 1
the current and -> positions : 1
current and coordinates -> of : 1
and coordinates of -> the : 1
coordinates of the -> mouse : 2
the mouse the -> signals : 1
the mouse the -> application : 1
the mouse the -> event : 1
the mouse the -> text : 2
mouse the signals -> emitted : 1
the signals emitted -> from : 3
signals emitted from -> each : 1
signals emitted from -> the : 2
emitted from each -> mouse : 1
from each mouse -> event : 1
each mouse event -> are : 1
mouse event are -> declared : 1
event are declared -> under : 1
are declared under -> the : 1
under the signals -> define : 1
the signals define -> these : 1
signals define these -> items : 1
define these items -> in : 1
these items in -> a : 1
a cpp void -> emit : 1
cpp void emit -> the : 1
void emit the -> the : 1
void emit the -> event : 1
emit the the -> parent : 1
the the parent -> is : 1
the the parent -> widget : 1
the parent is -> passed : 1
parent is passed -> on : 1
is passed on -> to : 1
base class to -> inherit : 1
class to inherit -> the : 1
to inherit the -> unhandled : 1
inherit the unhandled -> cases : 1
the unhandled cases -> in : 1
unhandled cases in -> the : 1
cases in the -> overridden : 1
in the overridden -> and : 1
the overridden and -> the : 1
overridden and the -> coordinate : 1
and the coordinate -> variables : 1
the coordinate variables -> are : 1
coordinate variables are -> initialized : 1
variables are initialized -> to : 1
are initialized to -> in : 1
initialized to in -> the : 1
in the event -> the : 1
the event the -> member : 1
the event the -> signal : 1
event the member -> variables : 1
the member variables -> holding : 1
the member variables -> and : 1
member variables holding -> the : 1
variables holding the -> mouse : 1
holding the mouse -> coordinates : 1
the mouse coordinates -> get : 1
the mouse coordinates -> auto : 3
mouse coordinates get -> and : 1
coordinates get and -> a : 1
get and a -> signal : 1
and a signal -> is : 1
signal is the -> dialog : 1
is the dialog -> using : 1
the dialog using -> can : 1
dialog using can -> connect : 1
using can connect -> this : 1
can connect this -> signal : 1
connect this signal -> to : 1
this signal to -> the : 1
signal to the -> corresponding : 1
the corresponding slot -> in : 1
corresponding slot in -> the : 1
slot in the -> parent : 1
in the parent -> dialog : 1
in the parent -> widget : 1
the parent dialog -> class : 1
parent dialog class -> and : 1
dialog class and -> update : 1
class and update -> the : 1
and update the -> emit : 1
and update the -> we : 1
update the emit -> void : 1
the emit void -> emit : 1
emit void emit -> the : 1
emit the event -> the : 1
event the signal -> is : 1
the signal is -> and : 1
the signal is -> these : 1
signal is and -> from : 1
is and from -> the : 1
the the signal -> is : 1
signal is these -> signals : 1
is these signals -> get : 1
these signals get -> connected : 1
signals get connected -> to : 1
get connected to -> corresponding : 1
connected to corresponding -> slots : 1
to corresponding slots -> in : 1
corresponding slots in -> the : 1
slots in the -> parent : 1
the parent widget -> and : 1
the parent widget -> upon : 1
parent widget and -> update : 1
widget and update -> the : 1
update the we -> have : 1
have written a -> custom : 1
written a custom -> label : 1
custom label class -> to : 1
label class to -> handle : 1
class to handle -> the : 1
handle the mouse -> the : 1
mouse the application -> the : 1
application the label -> class : 1
the label class -> has : 1
label class has -> been : 1
class has been -> we : 1
has been we -> need : 1
been we need -> to : 1
need to implement -> the : 1
need to implement -> an : 1
implement the dialog -> class : 1
the dialog class -> to : 1
dialog class to -> place : 1
class to place -> all : 1
to place all -> of : 1
place all of -> the : 1
the widgets and -> handle : 1
widgets and handle -> all : 1
and handle all -> of : 1
handle all of -> the : 1
of the signals -> emitted : 1
emitted from the -> start : 1
emitted from the -> the : 1
emitted from the -> of : 1
emitted from the -> event : 2
from the start -> with : 1
the start with -> the : 1
with the class -> class : 2
class class class -> dialog : 1
class class dialog -> public : 1
class dialog public -> qdialog : 1
dialog public qdialog -> explicit : 1
public qdialog explicit -> private : 1
qdialog explicit private -> void : 1
explicit private void -> void : 1
private void void -> void : 1
void void qlabel -> qlabel : 1
void qlabel qlabel -> we : 1
qlabel qlabel we -> are : 1
qlabel we are -> creating : 1
creating a class -> inherited : 1
a class inherited -> from : 1
inherited from defined -> under : 1
from defined under -> the : 1
under the classes -> and : 1
classes and are -> forward : 1
and are forward -> declared : 1
are forward declared -> in : 1
forward declared in -> this : 1
this class as -> the : 1
class as the -> actual : 1
as the actual -> libraries : 1
the actual libraries -> will : 1
actual libraries will -> be : 1
libraries will be -> included : 1
will be included -> in : 1
be included in -> the : 1
in the class -> definition : 1
in the class -> hierarchy : 1
the class definition -> as : 1
class definition as -> we : 1
definition as we -> already : 1
as we already -> macro : 1
we already macro -> must : 1
already macro must -> be : 1
macro must be -> included : 1
must be included -> to : 1
be included to -> generate : 1
included to generate -> code : 1
to generate code -> for : 1
code for enabling -> signals : 1
for enabling signals -> and : 1
enabling signals and -> slots : 1
dynamic property addition -> to : 1
property addition to -> the : 1
and destructor private -> slots : 1
destructor private slots -> are : 1
private slots are -> declared : 1
slots are declared -> to : 1
are declared to -> connect : 1
declared to connect -> to : 1
to the signals -> emitted : 1
the the slots -> are : 1
the slots are -> normal : 1
slots are normal -> and : 1
are normal and -> can : 1
normal and can -> be : 1
can be called -> their : 1
be called their -> only : 1
called their only -> special : 1
their only special -> feature : 1
only special feature -> is : 1
special feature is -> that : 1
feature is that -> signals : 1
is that signals -> can : 1
that signals can -> be : 1
signals can be -> connected : 1
connected to the -> will : 1
connected to the -> signal : 1
connected to the -> declaration : 1
connected to the -> corresponding : 1
will be connected -> to : 3
to the signal -> emitted : 2
to the signal -> which : 1
the signal emitted -> from : 2
signal emitted from -> the : 2
from the of -> will : 1
the of will -> be : 1
of will be -> connected : 1
connected to and -> will : 1
to and will -> be : 1
to the declaration -> of : 1
declaration of all -> widget : 1
of all widget -> pointers : 1
all widget pointers -> and : 1
widget pointers and -> one : 1
pointers and one -> private : 1
and one private -> function : 1
one private function -> done : 1
private function done -> to : 1
function done to -> instantiate : 1
done to instantiate -> and : 1
to instantiate and -> lay : 1
to instantiate and -> set : 1
instantiate and lay -> out : 1
and lay out -> the : 1
lay out the -> widgets : 1
out the widgets -> in : 1
in the implementation -> of : 1
of the belongs -> in : 1
the belongs in -> handling : 1
belongs in handling -> the : 1
in handling the -> the : 1
handling the the -> title : 1
the the title -> of : 1
the title of -> the : 1
title of the -> application : 1
the application dialog -> is : 1
application dialog is -> set : 1
dialog is set -> to : 1
set to handling -> the : 1
to handling the -> gets : 1
handling the gets -> function : 1
the gets function -> will : 1
gets function will -> be : 1
will be explained -> after : 1
be explained after -> creating : 1
explained after creating -> and : 1
after creating and -> setting : 1
creating and setting -> the : 1
and setting the -> layouts : 1
setting the layouts -> calling : 1
the layouts calling -> the : 1
layouts calling the -> signals : 1
calling the signals -> that : 1
signals that emit -> from : 1
that emit from -> objects : 1
emit from objects -> are : 1
from objects are -> connected : 1
objects are connected -> to : 1
are connected to -> the : 1
the corresponding slots -> declared : 1
corresponding slots declared -> in : 1
slots declared in -> the : 1
in the y -> is : 1
the y is -> the : 1
y is the -> slot : 1
is the slot -> to : 2
the slot to -> the : 2
slot to the -> signal : 2
from the event -> of : 1
from the event -> that : 1
from the event -> stream : 1
from the event -> or : 1
the event of -> in : 1
the event of -> object : 1
event of in -> this : 1
of in this -> the : 1
the label gets -> updated : 1
label gets updated -> with : 1
with the current -> mouse : 1
with the current -> and : 1
the current mouse -> and : 1
current mouse and -> updates : 1
mouse and updates -> its : 1
and updates its -> text : 1
updates its text -> to : 1
its text to -> function : 1
text to function -> is : 1
to function is -> the : 1
function is the -> slot : 1
the signal which -> has : 1
signal which has -> been : 1
has been emitted -> from : 1
been emitted from -> the : 1
the event that -> gets : 1
event that gets -> called : 1
gets called every -> time : 1
called every time -> a : 1
every time a -> user : 1
time a user -> clicks : 1
user clicks inside -> of : 1
clicks inside of -> the : 1
inside of the -> mouse : 1
inside of the -> project : 1
inside of the -> lambda : 2
inside of the -> will : 1
inside of the -> streams : 1
the mouse area -> the : 1
the mouse area -> label : 2
mouse area the -> function : 1
area the function -> updates : 1
the function updates -> the : 1
function updates the -> text : 1
updates the text -> in : 2
the text in -> label : 2
the text in -> is : 1
the text in -> the : 1
the text in -> also : 1
text in label -> as : 1
text in label -> to : 1
in label as -> whenever : 1
label as whenever -> the : 1
as whenever the -> mouse : 1
whenever the mouse -> leaves : 1
the mouse leaves -> the : 1
mouse leaves the -> mouse : 1
leaves the mouse -> the : 2
mouse the event -> of : 1
event of object -> emits : 1
of object emits -> a : 1
object emits a -> signal : 1
a signal connected -> to : 1
signal connected to -> slot : 1
connected to slot -> it : 1
to slot it -> updates : 1
slot it updates -> the : 1
it updates the -> text : 1
in label to -> the : 1
label to the -> to : 1
the to instantiate -> and : 1
instantiate and set -> the : 1
and set the -> layouts : 1
and set the -> layout : 1
set the layouts -> in : 1
the layouts in -> the : 1
layouts in the -> as : 1
layouts in the -> and : 1
the as new -> this : 1
as new this -> the : 1
new this the -> is : 1
new this the -> error : 1
this the is -> instantiated : 1
the is instantiated -> with : 1
with the custom -> label : 1
custom label the -> label : 1
label the label -> properties : 1
the label properties -> are : 1
label properties are -> modified : 1
properties are modified -> as : 1
are modified as -> the : 1
modified as the -> label : 1
as the label -> text : 1
the label text -> modified : 1
label text modified -> to : 1
text modified to -> mouse : 1
modified to mouse -> tracking : 1
to mouse tracking -> is : 1
mouse tracking is -> enabled : 1
tracking is enabled -> inside : 1
is enabled inside -> the : 1
enabled inside the -> the : 1
inside the the -> alignment : 1
the the alignment -> is : 1
the alignment is -> set : 1
alignment is set -> to : 1
set to center -> and : 1
to center and -> the : 1
center and the -> frame : 1
and the frame -> style : 1
the frame style -> is : 1
frame style is -> set : 1
style is set -> to : 1
to a thick -> new : 1
a thick new -> y : 1
thick new y -> new : 1
new y new -> current : 1
y new current -> label : 1
new current label -> objects : 1
current label objects -> and : 1
label objects and -> are : 1
objects and are -> updating : 1
and are updating -> its : 1
are updating its -> such : 1
updating its such -> as : 1
its such as -> text : 1
such as text -> alignment : 1
as text alignment -> and : 1
text alignment and -> frame : 1
alignment and frame -> similar : 1
and frame similar -> to : 1
frame similar to -> but : 1
similar to but -> the : 1
to but the -> text : 1
but the text -> in : 1
text in is -> initially : 1
in is initially -> set : 1
is initially set -> to : 1
initially set to -> y : 1
set to y -> and : 1
to y and -> the : 1
y and the -> label : 1
and the label -> to : 1
the label to -> current : 1
label to current -> qgroupbox : 1
to current qgroupbox -> new : 1
current qgroupbox new -> qvboxlayout : 1
qgroupbox new qvboxlayout -> new : 1
new qvboxlayout new -> a : 1
qvboxlayout new a -> vertical : 1
new a vertical -> box : 1
a vertical box -> layout : 1
a vertical box -> created : 1
vertical box layout -> is : 1
box layout is -> and : 1
layout is and -> and : 1
is and and -> label : 1
and and label -> widgets : 1
and label widgets -> are : 1
label widgets are -> added : 1
label widgets are -> created : 1
widgets are added -> to : 1
widgets are added -> into : 1
are added to -> a : 2
are added to -> the : 1
added to a -> group : 1
added to a -> delete : 1
to a group -> box : 1
a group box -> is : 1
group box is -> created : 1
group box is -> made : 1
box is created -> with : 1
is created with -> the : 2
created with the -> tag : 1
created with the -> at : 1
created with the -> to : 1
with the tag -> the : 1
the tag the -> layout : 1
tag the layout -> of : 1
the layout of -> the : 2
layout of the -> group : 1
layout of the -> application : 1
of the group -> box : 1
the group box -> is : 1
box is made -> into : 1
is made into -> a : 1
made into a -> vertical : 1
into a vertical -> box : 1
vertical box created -> with : 1
box created with -> the : 1
with the at -> the : 1
the at the -> positions : 1
at the positions -> and : 1
positions and sizes -> of : 1
and sizes of -> the : 1
sizes of the -> mouse : 1
mouse area label -> and : 1
mouse area label -> auto : 1
mouse area label -> larger : 1
area label and -> the : 1
label and the -> mouse : 1
and the mouse -> events : 1
and the mouse -> look : 1
and the mouse -> coordinates : 3
and the mouse -> cursor : 1
mouse events group -> box : 1
events group box -> are : 1
group box are -> set : 1
box are set -> to : 1
are set to -> predefined : 1
set to predefined -> the : 1
predefined the widget -> creation : 1
the widget creation -> and : 1
widget creation and -> layout : 1
creation and layout -> settings : 1
and layout settings -> are : 1
layout settings are -> the : 1
settings are the -> can : 1
are the can -> now : 1
the can now -> write : 1
can now write -> to : 1
now write to -> create : 1
write to create -> the : 1
create the class -> and : 1
class and display -> int : 1
and display int -> char : 1
display int char -> qapplication : 1
int char qapplication -> dialog : 1
int char qapplication -> create : 1
int char qapplication -> auto : 1
char qapplication dialog -> return : 1
qapplication dialog return -> piece : 1
dialog return piece -> of : 1
return piece of -> code : 1
code is exactly -> like : 1
is exactly like -> the : 1
exactly like the -> hello : 1
like the hello -> world : 1
hello world qt -> application : 1
world qt application -> that : 1
qt application that -> we : 1
application that we -> instead : 1
that we instead -> of : 1
we instead of -> a : 1
of a we -> are : 1
of a we -> will : 1
a we are -> instantiating : 1
we are instantiating -> the : 1
are instantiating the -> class : 1
instantiating the class -> we : 1
the class we -> resizing : 1
class we resizing -> the : 1
we resizing the -> dialog : 1
resizing the dialog -> window : 1
the dialog window -> frame : 1
dialog window frame -> to : 1
window frame to -> a : 1
frame to a -> predefined : 1
to a predefined -> value : 1
a predefined value -> by : 1
a predefined value -> of : 1
predefined value by -> using : 1
value by using -> the : 1
the the application -> is : 1
the application is -> ready : 1
the application is -> a : 1
application is ready -> to : 1
is ready to -> build : 1
ready to build -> and : 1
build and before -> building : 1
and before building -> the : 1
before building the -> let : 1
building the let -> us : 1
let us handcode -> the : 1
us handcode the -> project : 1
handcode the project -> widgets : 1
the project widgets -> sources : 1
project widgets sources -> headers : 1
widgets sources headers -> build : 1
sources headers build -> the : 1
headers build the -> application : 1
build the application -> and : 1
the application and -> run : 1
application and run -> a : 1
and run a -> dialog : 1
run a dialog -> box : 1
a dialog box -> will : 1
dialog box will -> pop : 1
box will pop -> up : 1
will pop up -> as : 1
will pop up -> again : 1
pop up as -> follows : 1
up as follows -> we : 1
as follows we -> hover : 1
follows we hover -> the : 1
we hover the -> mouse : 1
hover the mouse -> pointer : 1
the mouse pointer -> through : 1
the mouse pointer -> leaves : 1
mouse pointer through -> the : 1
pointer through the -> left : 1
through the left -> side : 1
left side label -> the : 1
side label the -> coordinates : 1
label the coordinates -> of : 1
the coordinates of -> the : 1
the mouse will -> get : 1
mouse will get -> updated : 1
will get updated -> in : 1
the first label -> on : 1
first label on -> the : 1
label on the -> right : 2
the right and -> the : 1
right and the -> second : 1
the second label -> on : 1
the second label -> will : 1
second label on -> the : 1
right side will -> display : 1
side will display -> the : 1
will display the -> pressing : 1
display the pressing -> any : 1
the pressing any -> mouse : 1
pressing any mouse -> button : 1
any mouse button -> in : 1
mouse button in -> the : 1
button in the -> mouse : 1
in the mouse -> the : 1
in the mouse -> coordinate : 1
mouse the text -> in : 1
mouse the text -> will : 1
text in the -> second : 1
in the second -> label : 1
second label will -> change : 1
label will change -> to : 1
will change to -> the : 1
change to the -> mouse : 1
to the mouse -> pointer : 1
to the mouse -> along : 1
mouse pointer leaves -> the : 1
pointer leaves the -> mouse : 1
the text will -> be : 1
text will be -> updated : 1
be updated to -> this : 1
updated to this -> we : 1
to this we -> learned : 1
create a dialog -> widgets : 1
a dialog widgets -> under : 1
dialog widgets under -> a : 1
widgets under a -> layouts : 1
under a layouts -> in : 1
a layouts in -> the : 1
so we also -> learned : 1
we also learned -> how : 1
we also learned -> about : 1
also learned how -> to : 1
how to enable -> customizing : 1
to enable customizing -> a : 1
enable customizing a -> widget : 1
customizing a widget -> label : 1
a widget label -> and : 1
widget label and -> how : 1
label and how -> to : 1
to handle system -> we : 1
handle system we -> then : 1
system we then -> learned : 1
we then learned -> about : 1
then learned about -> the : 1
about the creation -> and : 1
the creation and -> connection : 1
the creation and -> size : 1
the creation and -> subscription : 1
creation and connection -> of : 1
and connection of -> objects : 1
connection of objects -> using : 1
of objects using -> signals : 1
objects using signals -> and : 1
using signals and -> we : 1
signals and we -> used : 1
signals and we -> wrote : 1
and we used -> all : 1
we used all -> of : 1
used all of -> these : 1
of these including -> a : 1
these including a -> custom : 1
including a custom -> and : 1
custom and created -> an : 1
and created an -> application : 1
created an application -> to : 1
to handle qt -> mouse : 1
to handle qt -> especially : 1
handle qt mouse -> events : 1
qt mouse events -> in : 1
qt mouse events -> using : 1
in a implement -> a : 1
a implement a -> similar : 1
implement a similar -> application : 1
a similar application -> to : 1
similar application to -> handle : 1
in a and -> display : 1
a and display -> mouse : 1
and display mouse -> coordinates : 1
display mouse coordinates -> in : 1
mouse coordinates in -> another : 1
coordinates in another -> the : 1
in another the -> event : 1
another the event -> handling : 1
event handling is -> performed : 1
handling is performed -> by : 1
is performed by -> using : 1
is performed by -> appending : 1
performed by using -> event : 1
using event subscription -> and : 1
event subscription and -> event : 1
subscription and event -> observables : 1
and event observables -> and : 1
event observables and -> qt : 1
observables and qt -> event : 1
qt event the -> rxcpp : 1
event the rxcpp -> library : 1
qt event already -> saw : 1
event already saw -> the : 1
already saw the -> qt : 1
saw the qt -> framework : 1
qt framework from -> a : 1
framework from a -> eye : 1
from a eye -> view : 1
a eye view -> in : 1
eye view in -> the : 1
view in the -> previous : 1
handle qt especially -> mouse : 1
qt especially mouse -> events : 1
especially mouse events -> and : 1
and the we -> also : 1
also learned about -> library : 1
learned about library -> and : 1
about library and -> its : 1
its programming model -> in : 1
model in the -> previous : 1
the previous two -> in : 1
previous two in -> the : 1
two in the -> we : 1
the we came -> across : 1
we came across -> many : 1
came across many -> significant : 1
across many significant -> reactive : 1
many significant reactive -> operators : 1
significant reactive operators -> that : 1
reactive operators that -> matter : 1
operators that matter -> while : 1
that matter while -> writing : 1
matter while writing -> programs : 1
while writing programs -> leveraging : 1
writing programs leveraging -> the : 1
programs leveraging the -> reactive : 1
leveraging the reactive -> this : 1
the reactive this -> we : 1
reactive this we -> are : 1
reactive this we -> will : 1
going to write -> an : 1
going to write -> a : 1
in a label -> which : 1
a label which -> is : 1
label which is -> similar : 1
which is similar -> to : 1
is similar to -> the : 1
the previous in -> this : 1
previous in this -> instead : 1
in this instead -> of : 2
this instead of -> handling : 1
this instead of -> creating : 1
instead of handling -> mouse : 1
of handling mouse -> events : 1
handling mouse events -> to : 1
mouse events to -> emit : 1
events to emit -> signals : 1
to emit signals -> we : 1
emit signals we -> did : 1
signals we did -> in : 1
we did in -> the : 1
did in the -> last : 1
the last we -> will : 1
last we will -> be : 1
will be subscribing -> to : 1
be subscribing to -> qt : 1
subscribing to qt -> mouse : 1
to qt mouse -> events : 1
mouse events using -> subscriber : 1
events using subscriber -> and : 1
using subscriber and -> will : 1
subscriber and will -> filter : 1
and will filter -> different : 1
will filter different -> mouse : 1
filter different mouse -> events : 1
different mouse events -> from : 1
mouse events from -> the : 1
events from the -> resultant : 1
events from the -> widget : 2
from the resultant -> mouse : 1
the resultant mouse -> events : 1
resultant mouse events -> the : 1
mouse events the -> events : 1
events the events -> are : 1
the events are -> not : 1
events are not -> filtered : 1
are not filtered -> will : 1
not filtered will -> be : 1
filtered will be -> related : 1
will be related -> to : 1
be related to -> the : 1
related to the -> event : 1
the event filter -> a : 1
a reactive mentioned -> the : 1
reactive mentioned the -> qt : 1
mentioned the qt -> framework : 1
qt framework has -> a : 1
framework has a -> robust : 1
robust event we -> need : 1
event we need -> to : 1
need to bridge -> between : 1
to bridge between -> the : 1
bridge between the -> qt : 1
between the qt -> and : 1
qt and rxcpp -> scheme : 1
and rxcpp scheme -> of : 1
rxcpp scheme of -> to : 1
scheme of to -> get : 1
of to get -> started : 1
to get started -> with : 1
started with this -> we : 1
write a header -> wrapping : 1
a header wrapping -> the : 1
header wrapping the -> required : 1
wrapping the required -> rxcpp : 1
the required rxcpp -> headers : 1
required rxcpp headers -> and : 1
rxcpp headers and -> the : 1
headers and the -> qt : 1
and the qt -> event : 1
and the qt -> proceeding : 1
qt event namespace -> rxevt : 1
event namespace rxevt -> event : 1
namespace rxevt event -> filter : 1
rxevt event filter -> object : 1
event filter object -> class : 1
event filter object -> that : 1
filter object class -> class : 1
object class class -> public : 1
class public qobject -> library : 1
public qobject library -> is : 1
qobject library is -> included : 1
library is included -> to : 1
is included to -> get : 1
included to get -> the : 1
get the definitions -> for : 1
the definitions for -> and : 1
definitions for and -> which : 1
for and which -> we : 1
which we use -> in : 1
we use in -> this : 1
use in this -> and : 1
this and the -> library : 1
and the library -> for : 1
the library for -> the : 1
library for the -> entire : 1
for the entire -> header : 1
the entire header -> file : 1
entire header file -> is : 1
header file is -> defined : 1
file is defined -> under : 1
is defined under -> the : 1
under the namespace -> is : 1
the namespace is -> a : 1
namespace is a -> qt : 1
is a qt -> event : 1
a qt event -> filter : 1
qt event filter -> class : 1
event filter class -> implanted : 1
filter class implanted -> to : 1
class implanted to -> the : 1
implanted to the -> only : 1
to the only -> qt : 1
the only qt -> events : 1
only qt events -> the : 1
qt events the -> member : 1
events the member -> is : 1
member is initialized -> to : 1
is initialized to -> achieve : 1
initialized to achieve -> the : 1
achieve the class -> has : 1
the class has -> two : 1
the class has -> the : 1
class has two -> member : 1
has two member -> the : 1
two member the -> first : 1
member the first -> one : 1
the first one -> is : 1
first one is -> which : 1
one is which -> is : 1
which is of -> and : 1
is of and -> the : 1
the next one -> is : 1
next one is -> to : 1
one is to -> hold : 1
is to hold -> the : 1
hold the the -> the : 1
the the the -> parent : 1
parent widget upon -> which : 1
widget upon which -> events : 1
upon which events -> need : 1
which events need -> to : 1
events need to -> be : 1
to be is -> passed : 1
be is passed -> to : 1
is passed to -> the : 1
base class the -> member : 1
base class the -> method : 1
class the member -> variables : 1
member variables and -> get : 1
variables and get -> initialized : 1
and get initialized -> with : 1
get initialized with -> the : 1
initialized with the -> that : 1
with the that -> needs : 1
the that needs -> to : 1
that needs to -> be : 1
to be filtered -> and : 1
filtered and of -> the : 1
and of the -> corresponding : 1
and of the -> new : 1
and of the -> these : 1
of the corresponding -> event : 1
corresponding event bool -> return : 1
event bool return -> have : 1
bool return have -> overridden : 1
return have overridden -> the : 1
have overridden the -> function : 1
overridden the function -> to : 1
function to call -> only : 1
to call only -> if : 1
call only if -> the : 1
if the event -> type : 1
if the event -> should : 1
the event type -> is : 2
event type is -> the : 1
event type is -> also : 1
same as the -> initialized : 1
as the initialized -> the : 1
the initialized the -> is : 1
initialized the is -> an : 1
is an event -> filter : 1
is an event -> by : 1
an event filter -> object : 1
filter object that -> receives : 1
object that receives -> all : 1
that receives all -> events : 1
receives all events -> that : 1
all events that -> are : 1
events that are -> sent : 1
that are sent -> to : 1
are sent to -> this : 1
sent to this -> the : 1
to this the -> filter : 1
to this the -> object : 1
this the filter -> can : 1
the filter can -> either : 1
filter can either -> stop : 1
can either stop -> the : 1
either stop the -> event : 1
stop the event -> or : 1
the event or -> forward : 1
the event or -> data : 1
event or forward -> it : 1
or forward it -> to : 1
forward it to -> this : 1
it to this -> the : 1
this the object -> receives : 1
the object receives -> events : 1
object receives events -> via : 1
receives events via -> its : 1
events via its -> the : 1
via its the -> function : 1
the function must -> return : 1
function must return -> true : 1
must return true -> if : 1
return true if -> the : 1
the event should -> be : 1
event should be -> filtered : 1
be filtered other -> it : 1
filtered other it -> must : 1
other it must -> return : 1
it must return -> write : 1
must return write -> a : 1
write a utility -> function : 1
a utility function -> under : 1
utility function under -> the : 1
function under the -> same : 1
under the same -> header : 1
the same header -> file : 1
same header file -> to : 1
file to create -> and : 1
to create and -> return : 1
to create and -> set : 1
create and return -> from : 1
and return from -> the : 1
return from the -> event : 1
event stream using -> utility : 1
stream using utility -> function : 1
using utility function -> to : 1
utility function to -> retrieve : 1
function to retrieve -> the : 1
retrieve the of -> filtered : 1
the of filtered -> events : 1
of filtered events -> return : 1
filtered events return -> return : 1
events return return -> rxevt : 1
return return rxevt -> this : 1
return rxevt this -> we : 1
rxevt this we -> are : 1
we are returning -> the : 1
are returning the -> observable : 1
returning the observable -> of : 1
the observable of -> from : 1
observable of from -> the : 1
of from the -> stream : 1
from the stream -> of : 1
the stream of -> events : 1
stream of events -> that : 1
of events that -> we : 1
events that we -> will : 1
we will filter -> using : 1
will filter using -> the : 1
filter using the -> a : 1
using the a -> instance : 1
using the a -> simple : 2
using the a -> global : 1
a instance can -> be : 1
instance can be -> set : 1
can be set -> to : 1
be set to -> monitor : 1
set to monitor -> the : 1
to monitor the -> events : 1
monitor the events -> of : 1
the events of -> another : 1
events of another -> instance : 1
of another instance -> before : 1
another instance before -> the : 1
instance before the -> latter : 1
before the latter -> object : 1
the latter object -> even : 1
latter object even -> sees : 1
object even sees -> this : 1
even sees this -> a : 1
sees this a -> really : 1
this a really -> powerful : 1
a really powerful -> feature : 1
really powerful feature -> of : 1
powerful feature of -> event : 1
feature of event -> the : 1
of event the -> call : 1
event the call -> of : 1
the call of -> function : 1
call of function -> makes : 1
of function makes -> it : 1
function makes it -> and : 1
makes it and -> the : 1
it and the -> class : 1
class has the -> conditions : 1
has the conditions -> to : 1
the conditions to -> perform : 1
conditions to perform -> the : 1
to perform the -> window : 1
perform the window -> setting : 1
layouts and write -> the : 1
and write the -> application : 1
write the application -> code : 1
the application code -> to : 1
application code to -> create : 1
create the widget -> which : 1
the widget which -> contains : 1
widget which contains -> two : 1
which contains two -> label : 1
contains two label -> one : 1
two label one -> label : 1
label one label -> will : 1
one label will -> be : 1
label will be -> used : 1
used as the -> mouse : 1
as the mouse -> similar : 1
the mouse similar -> to : 1
mouse similar to -> the : 1
the previous and -> the : 1
previous and the -> latter : 1
the latter will -> be : 1
latter will be -> used : 1
used to display -> the : 1
to display the -> filtered : 1
to display the -> aggregated : 2
display the filtered -> mouse : 1
the filtered mouse -> event : 1
the filtered mouse -> button : 1
filtered mouse event -> and : 1
mouse event and -> the : 1
the mouse look -> into : 1
mouse look into -> the : 1
into the code -> in : 1
code in as -> two : 1
in as two -> we : 1
as two we -> will : 1
two we will -> discuss : 1
discuss the code -> to : 1
create and set -> the : 1
create and set -> properties : 2
set the layout -> for : 1
the layout for -> the : 1
layout for the -> int : 1
char qapplication create -> the : 1
qapplication create the -> application : 1
create the application -> window : 1
the application window -> auto : 1
the application window -> is : 1
the application window -> widget : 1
the application window -> the : 1
application window auto -> widget : 1
window auto widget -> create : 1
auto widget create -> and : 1
widget create and -> set : 1
and set properties -> of : 2
set properties of -> mouse : 1
set properties of -> message : 1
properties of mouse -> area : 1
of mouse area -> label : 1
area label auto -> new : 1
label auto new -> create : 1
label auto new -> y : 1
auto new create -> and : 1
new create and -> set : 1
properties of message -> display : 1
of message display -> label : 1
message display label -> auto : 1
display label auto -> new : 1
auto new y -> have : 1
new y have -> included : 1
y have included -> the : 1
have included the -> file : 1
included the file -> to : 1
the file to -> use : 1
file to use -> the : 1
use the event -> filtering : 1
the event filtering -> mechanism : 1
event filtering mechanism -> implemented : 1
filtering mechanism implemented -> using : 1
mechanism implemented using -> in : 1
implemented using in -> this : 1
instead of creating -> these : 1
of creating these -> widgets : 1
creating these widgets -> inside : 1
these widgets inside -> of : 1
widgets inside of -> a : 1
inside of a -> a : 1
a a object -> is : 1
a object is -> and : 1
object is and -> the : 1
and the two -> widgets : 1
the two widgets -> are : 1
two widgets are -> added : 1
are added into -> a : 1
added into a -> this : 1
into a this -> is : 1
a this is -> set : 1
this is set -> as : 1
set as the -> layout : 1
as the layout -> of : 1
application the size -> of : 1
size of the -> application : 1
size of the -> which : 1
application window is -> a : 1
window is a -> predefined : 1
is a predefined -> value : 1
predefined value of -> wide : 1
value of wide -> and : 1
of wide and -> similar : 1
wide and similar -> to : 1
the previous mouse -> tracing : 1
previous mouse tracing -> is : 1
mouse tracing is -> enabled : 1
tracing is enabled -> for : 1
is enabled for -> the : 1
enabled for the -> first : 1
for the first -> adjusting : 1
the first adjusting -> the : 1
first adjusting the -> size : 1
adjusting the size -> policy : 1
the size policy -> of : 1
size policy of -> widgets : 1
size policy of -> both : 1
policy of widgets -> to : 1
of widgets to -> allow : 1
widgets to allow -> stretching : 1
to allow stretching -> inside : 1
allow stretching inside -> the : 1
stretching inside the -> vertical : 1
inside the vertical -> layout : 2
the vertical layout -> auto : 1
the vertical layout -> this : 1
vertical layout auto -> layout : 1
layout auto layout -> new : 1
auto layout new -> size : 1
layout new size -> policy : 1
new size policy -> of : 1
policy of both -> widgets : 1
of both widgets -> is : 1
both widgets is -> set : 1
widgets is set -> to : 1
set to allow -> for : 1
to allow for -> the : 1
allow for the -> stretching : 1
for the stretching -> of : 1
the stretching of -> widgets : 1
stretching of widgets -> inside : 1
of widgets inside -> the : 1
widgets inside the -> vertical : 1
vertical layout this -> allows : 1
layout this allows -> us : 1
this allows us -> to : 1
allows us to -> make : 1
us to make -> the : 1
make the mouse -> area : 1
area label larger -> than : 1
label larger than -> the : 1
larger than the -> status : 1
than the status -> display : 1
the status display -> the : 1
status display the -> function : 1
display the function -> sets : 1
the function sets -> the : 1
function sets the -> stretch : 1
sets the stretch -> factor : 1
the stretch factor -> at : 1
stretch factor at -> the : 1
factor at the -> position : 1
at the position -> index : 1
the position index -> to : 1
position index to -> type : 1
index to type -> specific : 1
to type specific -> code : 1
type specific code -> to : 1
specific code to -> subscribe : 1
code to subscribe -> to : 1
to subscribe to -> the : 1
to the of -> mouse : 1
the of mouse -> as : 1
of mouse as -> button : 1
mouse as button -> button : 1
as button button -> program : 1
button button program -> is : 1
button program is -> as : 1
is as display -> the : 1
as display the -> mouse : 1
display the mouse -> move : 1
display the mouse -> signle : 1
display the mouse -> double : 1
the mouse move -> message : 1
mouse move message -> and : 1
move message and -> the : 1
message and the -> mouse : 3
mouse coordinates auto -> me : 3
coordinates auto me -> moving : 1
coordinates auto me -> single : 1
coordinates auto me -> double : 1
auto me moving -> x : 1
me moving x -> y : 1
moving x y -> function : 1
x y function -> returns : 1
y function returns -> the : 1
returns the of -> the : 1
of the events -> from : 2
of the events -> to : 1
the events from -> based : 1
the events from -> the : 2
events from based -> on : 1
from based on -> the : 1
are passing as -> the : 1
passing as the -> in : 1
passing as the -> argument : 1
we are subscribing -> to : 1
are subscribing to -> an : 1
subscribing to an -> observable : 1
an observable of -> events : 1
an observable of -> is : 1
an observable of -> the : 2
observable of events -> in : 1
of events in -> which : 1
events in which -> are : 1
in which are -> of : 1
in which are -> called : 1
which are of -> we : 1
are of we -> are : 1
of we are -> updating : 1
of we are -> changing : 1
of we are -> expecting : 1
we are updating -> the : 1
are updating the -> text : 1
updating the text -> with : 1
the text with -> the : 1
text with the -> current : 1
current and positions -> of : 1
and positions of -> the : 1
the mouse display -> the : 2
mouse display the -> mouse : 2
the mouse signle -> click : 1
mouse signle click -> message : 1
signle click message -> and : 1
click message and -> the : 2
auto me single -> click : 1
me single click -> at : 1
single click at -> x : 1
click at x -> y : 2
at x y -> to : 1
at x y -> return : 1
x y to -> an : 1
y to an -> observable : 1
observable of is -> returned : 1
of is returned -> by : 1
is returned by -> the : 1
by the including -> only : 1
the including only -> events : 1
including only events -> of : 1
only events of -> the : 1
events of the -> type : 1
of the type -> the : 2
of the type -> output : 1
of the type -> and : 1
the type the -> text : 1
the type the -> merge : 1
type the text -> is : 1
the text is -> updated : 1
text is updated -> in : 1
is updated in -> with : 1
updated in with -> the : 1
in with the -> position : 1
with the position -> of : 1
the position of -> the : 2
the position of -> this : 1
the position of -> needs : 1
the position of -> is : 1
position of the -> mouse : 2
the mouse double -> click : 1
mouse double click -> message : 1
double click message -> and : 1
auto me double -> click : 1
me double click -> at : 1
double click at -> x : 1
x y return -> end : 1
y return end -> of : 1
return end of -> main : 1
end of main -> the : 1
of main the -> event : 1
main the event -> type : 1
type is also -> handled : 1
is also handled -> similar : 1
also handled similar -> to : 1
handled similar to -> a : 1
a single mouse -> and : 1
single mouse and -> the : 1
mouse and the -> text : 1
and the text -> in : 1
text in also -> updated : 1
in also updated -> with : 1
also updated with -> the : 1
application window widget -> is : 1
window widget is -> and : 1
widget is and -> the : 1
to start the -> event : 1
to start the -> indicate : 1
start the event -> project : 1
the event project -> is : 1
event project is -> as : 1
project is as -> core : 1
is as core -> widgets : 1
as core widgets -> config : 1
core widgets config -> target : 1
widgets config target -> includepath : 1
config target includepath -> include : 1
target includepath include -> sources : 1
includepath include sources -> headers : 1
include sources headers -> the : 1
sources headers the -> rxcpp : 1
headers the rxcpp -> library : 1
is a a -> folder : 1
is a a -> collection : 1
a a folder -> named : 1
a folder named -> is : 1
folder named is -> created : 1
named is created -> inside : 1
is created inside -> of : 1
created inside of -> the : 1
of the project -> and : 1
the project and -> the : 1
project and the -> rxcpp : 1
rxcpp library folder -> is : 1
library folder is -> copied : 1
folder is copied -> updating : 1
is copied updating -> will : 1
copied updating will -> help : 1
updating will help -> the : 1
help the application -> to : 1
the application to -> fetch : 1
application to fetch -> any : 1
to fetch any -> include : 1
fetch any include -> files : 1
any include files -> present : 1
include files present -> in : 1
files present in -> the : 1
in the directories -> specified : 1
the directories specified -> build : 1
directories specified build -> and : 1
specified build and -> run : 1
run the introduction -> to : 1
the introduction to -> is : 1
introduction to is -> a : 1
to is a -> public : 1
is a public -> domain : 1
library written over -> library : 1
written over library -> and : 1
over library and -> makes : 1
library and makes -> it : 1
and makes it -> easy : 1
makes it easy -> to : 1
it easy to -> program : 1
easy to program -> with : 1
to program with -> qt : 1
program with qt -> events : 1
with qt events -> and : 1
events and signals -> in : 1
and signals in -> a : 1
signals in a -> reactive : 1
a reactive to -> understand : 1
reactive to understand -> the : 1
understand the let -> us : 1
let us jump -> into : 1
us jump into -> an : 1
jump into an -> example : 1
into an example -> so : 1
an example so -> that : 1
example so that -> we : 1
we can track -> the : 1
can track the -> mouse : 1
track the mouse -> events : 1
and filter them -> using : 1
and filter them -> by : 1
filter them using -> the : 1
them using the -> observable : 1
the observable supplied -> by : 1
observable supplied by -> the : 1
downloaded from the -> github : 1
from the github -> repository : 1
repository int char -> qapplication : 1
char qapplication auto -> widget : 1
qapplication auto widget -> new : 1
auto widget new -> auto : 1
widget new auto -> xdock : 1
new auto xdock -> new : 1
auto xdock new -> auto : 1
xdock new auto -> ydock : 1
new auto ydock -> new : 1
auto ydock new -> preceding : 1
ydock new preceding -> code : 1
new preceding code -> which : 1
preceding code which -> acts : 1
code which acts -> as : 1
acts as the -> parent : 1
as the parent -> of : 1
the parent of -> two : 1
parent of two -> other : 1
of two other -> two : 1
two other two -> label : 1
other two label -> widgets : 1
two label widgets -> are : 1
widgets are created -> to : 1
are created to -> move : 1
created to move -> inside : 1
to move inside -> the : 1
move inside the -> parent : 1
inside the parent -> along : 1
the parent along -> the : 1
parent along the -> top : 1
along the top -> and : 2
the top and -> left : 2
top and left -> border : 1
top and left -> edges : 1
and left border -> of : 1
left border of -> the : 1
border of the -> the : 1
the the dockable -> label : 1
the dockable label -> along : 1
dockable label along -> the : 1
label along the -> is : 1
along the is -> colored : 1
along the is -> blue : 1
the is colored -> and : 1
is colored and -> the : 1
colored and the -> one : 1
the one along -> the : 1
one along the -> is : 1
the is blue -> in : 1
is blue in -> auto : 1
blue in auto -> me : 1
in auto me -> return : 1
auto me return -> auto : 2
me return auto -> me : 2
return auto me -> the : 1
return auto me -> this : 1
auto me the -> preceding : 1
me the preceding -> the : 1
preceding the function -> filters : 1
the function filters -> all : 1
function filters all -> of : 1
filters all of -> the : 1
from the widget -> except : 1
from the widget -> window : 1
the widget except -> for : 1
widget except for -> and : 1
except for and -> returns : 1
for and returns -> a : 1
returns a the -> here : 1
a the here -> is : 1
here is already -> filtered : 1
is already filtered -> with : 1
already filtered with -> those : 1
filtered with those -> mouse : 1
with those mouse -> events : 1
those mouse events -> if : 1
mouse events if -> the : 1
events if the -> button : 1
if the button -> is : 1
button is the -> left : 1
is the left -> mouse : 1
left mouse inside -> the : 1
mouse inside the -> lambda : 1
inside the lambda -> function : 1
inside the lambda -> of : 1
lambda function of -> we : 1
lambda function of -> the : 2
function of we -> are : 1
we are changing -> the : 1
are changing the -> cursor : 1
changing the cursor -> into : 1
the cursor into -> we : 1
cursor into we -> also : 1
into we also -> set : 1
we also set -> the : 1
also set the -> position : 1
set the position -> of : 1
the mouse along -> with : 2
mouse along with -> the : 2
with the top -> edge : 1
the top edge -> of : 1
top edge of -> the : 1
edge of the -> and : 1
edge of the -> auto : 1
the and position -> to : 1
and position to -> the : 1
position to the -> mouse : 1
with the left -> edge : 1
the left edge -> of : 1
left edge of -> the : 1
of the auto -> me : 1
the auto me -> return : 1
auto me this -> we : 1
me this we -> are : 1
we are filtering -> all : 1
we are filtering -> the : 1
are filtering all -> the : 1
filtering all the -> events : 1
all the events -> from : 1
the widget window -> using : 1
widget window using -> the : 1
window using the -> the : 1
the the observable -> here : 1
the observable here -> is : 1
observable here is -> a : 1
here is a -> stream : 1
here is a -> hot : 1
is a stream -> of : 1
stream of mouse -> events : 1
of mouse events -> with : 1
mouse events with -> both : 1
events with both -> and : 1
with both and -> left : 1
both and left -> mouse : 1
and left mouse -> button : 1
mouse button press -> events : 1
button press events -> are : 1
press events are -> the : 1
are the subscribe -> the : 1
subscribe the code -> updates : 1
the code updates -> the : 1
code updates the -> position : 1
updates the position -> and : 1
the position and -> along : 1
position and along -> the : 1
and along the -> top : 1
and left edges -> of : 1
left edges of -> the : 1
edges of the -> return : 1
of the return -> the : 1
the return the -> filtered : 1
return the filtered -> mouse : 1
filtered mouse button -> release : 1
mouse button release -> events : 1
button release events -> are : 1
release events are -> and : 1
events are and -> the : 1
are and the -> mouse : 1
are and the -> data : 1
the mouse cursor -> is : 1
the mouse cursor -> when : 1
mouse cursor is -> set : 1
cursor is set -> back : 1
is set back -> to : 1
set back to -> to : 1
back to to -> add : 1
to to add -> some : 1
to add some -> more : 1
add some more -> fun : 1
some more fun -> to : 1
more fun to -> this : 1
fun to this -> create : 1
to this create -> one : 1
this create one -> more : 1
create one more -> similar : 1
one more similar -> to : 1
more similar to -> and : 1
similar to and -> this : 1
to and this -> will : 1
be a gravity -> the : 1
a gravity the -> gravity : 1
gravity the gravity -> object : 1
the gravity object -> will : 1
gravity object will -> follow : 1
object will follow -> the : 1
will follow the -> mouse : 1
follow the mouse -> cursor : 1
mouse cursor when -> it : 1
cursor when it -> is : 1
it is class -> public : 1
is class public -> qlabel : 1
qlabel explicit int -> we : 1
explicit int we -> must : 1
int we must -> create : 1
we must create -> an : 1
must create an -> instance : 1
of the gravity -> widget : 1
the gravity widget -> under : 1
gravity widget under -> the : 1
widget under the -> application : 1
under the application -> window : 1
application window the -> newly : 1
window the newly -> created : 1
newly created auto -> gravitydock : 1
created auto gravitydock -> new : 1
auto gravitydock new -> to : 1
gravitydock new to -> the : 1
new to the -> creation : 1
creation and size -> settings : 1
and size settings -> of : 1
size settings of -> and : 1
settings of and -> the : 1
and the new -> object : 1
the new object -> has : 1
new object has -> been : 1
object has been -> the : 1
been the position -> of : 1
position of this -> object : 1
of this object -> must : 1
this object must -> be : 1
object must be -> set : 1
must be set -> in : 1
be set in -> the : 1
the mouse coordinate -> values : 1
mouse coordinate values -> whenever : 1
coordinate values whenever -> a : 1
values whenever a -> event : 1
whenever a event -> is : 1
a event is -> inside : 1
event is inside -> of : 1
is inside of -> the : 1
of the subscribe -> method : 1
the subscribe method -> for : 1
subscribe method for -> we : 1
method for we -> need : 2
for we need -> to : 2
need to add -> the : 2
to add the -> following : 2
following line of -> the : 1
line of the -> position : 1
of the position -> of : 1
position of needs -> to : 1
of needs to -> be : 1
to be as -> per : 1
be as per -> the : 1
per the mouse -> to : 1
the mouse to -> achieve : 1
mouse to achieve -> inside : 1
to achieve inside -> of : 1
achieve inside of -> the : 1
the method for -> we : 1
following the position -> of : 1
position of is -> updated : 1
of is updated -> to : 1
is updated to -> a : 1
updated to a -> new : 1
is the sum -> of : 1
sum of of -> the : 1
of of the -> previous : 1
the previous value -> and : 1
previous value and -> of : 1
value and of -> the : 1
of the new -> we : 1
the new we -> are : 1
new we are -> filtering : 1
are filtering the -> qt : 1
filtering the qt -> events : 1
qt events using -> the : 1
events using the -> and : 1
the and rxcpp -> libraries : 1
rxcpp libraries to -> create : 1
libraries to create -> an : 1
create an mouse -> position : 1
an mouse position -> indicator : 1
mouse position indicator -> and : 1
position indicator and -> a : 1
indicator and a -> gravity : 1
and a gravity -> build : 1
a gravity build -> and : 1
gravity build and -> run : 1
run the this -> we : 1
this we dealt -> with : 1
we dealt with -> the : 1
using we started -> with : 1
with a quick -> overview : 1
overview of gui -> application : 1
of gui application -> development : 1
development using we -> learned : 1
using we learned -> about : 1
learned about concepts -> in : 1
and we wrote -> a : 2
wrote a basic -> application : 1
a basic application -> using : 1
basic application using -> a : 1
application using a -> simple : 1
application using a -> custom : 1
a simple label -> we : 1
simple label we -> wrote : 1
label we wrote -> a : 1
wrote a mouse -> event : 1
a mouse event -> handling : 1
mouse event handling -> application : 1
event handling application -> using : 1
handling application using -> a : 1
using a custom -> label : 1
custom label in -> that : 1
label in that -> we : 1
we learned more -> about : 1
learned more about -> how : 1
more about how -> the : 1
about how the -> qt : 1
how the qt -> event : 1
qt event system -> and : 1
event system and -> how : 1
system and how -> to : 1
use the signals -> and : 1
mechanism for object -> we : 1
for object we -> wrote : 1
object we wrote -> an : 1
we wrote an -> application : 1
wrote an application -> to : 1
filter them by -> using : 1
them by using -> subscription : 1
by using subscription -> model : 1
using subscription model -> and : 1
subscription model and -> qt : 1
model and qt -> event : 1
qt event we -> covered : 1
event we covered -> how : 1
we covered how -> rxcpp : 1
we covered how -> the : 1
covered how rxcpp -> can : 1
how rxcpp can -> be : 2
rxcpp can be -> used : 2
in a gui -> framework : 1
in a gui -> this : 1
a gui framework -> as : 1
gui framework as -> to : 1
framework as to -> follow : 1
as to follow -> a : 1
to follow a -> reactive : 1
follow a reactive -> programming : 1
a reactive programming -> we : 1
covered the a -> public : 1
the a public -> domain : 1
public domain that -> integrates : 1
domain that integrates -> rxcpp : 1
that integrates rxcpp -> and : 1
integrates rxcpp and -> the : 1
the qt proceeding -> to : 1
qt proceeding to -> the : 1
proceeding to the -> next : 1
the next you -> need : 1
next you need -> to : 1
need to learn -> about : 1
learn about writing -> operators : 1
about writing operators -> for : 1
writing operators for -> rxcpp : 1
operators for rxcpp -> this : 1
operators for rxcpp -> books : 1
for rxcpp this -> topic : 1
rxcpp this topic -> is : 1
topic is covered -> in : 1
is covered in -> the : 1
in the online -> you : 1
the online you -> can : 1
online you can -> refer : 1
you can refer -> to : 2
can refer to -> the : 2
to the following -> you : 1
the following you -> have : 1
following you have -> completed : 1
you have completed -> reading : 1
have completed reading -> the : 1
completed reading the -> preceding : 1
reading the preceding -> mentioned : 1
the preceding mentioned -> we : 1
preceding mentioned we -> can : 1
mentioned we can -> proceed : 1
we can proceed -> to : 1
can proceed to -> the : 1
proceed to the -> next : 1
the next where -> we : 1
next where we -> will : 1
idioms for reactive -> patterns : 1
for reactive patterns -> and : 1
reactive patterns and -> idioms : 1
for rx have -> covered : 1
rx have covered -> quite : 1
have covered quite -> a : 2
of ground on -> using : 1
ground on using -> the : 1
on using the -> reactive : 1
using the reactive -> programming : 1
model with so -> we : 1
with so we -> have : 1
have learned about -> the : 1
about the rxcpp -> library : 1
its programming the -> key : 1
its programming the -> rest : 1
programming the key -> elements : 1
rxcpp and reactive -> gui : 1
and reactive gui -> this : 1
reactive gui this -> we : 1
gui this we -> will : 1
gui this we -> discussed : 1
the following introduction -> to : 1
following introduction to -> patterns : 1
and the pattern -> patterns : 1
the pattern patterns -> and : 1
pattern patterns and -> reactive : 1
patterns and reactive -> reactive : 1
patterns and reactive -> programming : 1
and reactive reactive -> programming : 1
reactive programming patterns -> and : 1
programming patterns and -> oop : 1
patterns and oop -> and : 1
and oop and -> design : 1
design patterns reached -> a : 1
patterns reached a -> critical : 1
reached a critical -> thanks : 1
a critical thanks -> to : 1
critical thanks to -> proliferation : 1
thanks to proliferation -> of : 1
to proliferation of -> good : 1
proliferation of good -> compilers : 1
of good compilers -> in : 1
good compilers in -> the : 1
compilers in the -> early : 1
in the early -> the : 1
the early the -> programmers : 1
early the programmers -> of : 1
the programmers of -> the : 1
programmers of the -> early : 1
of the early -> often : 1
the early often -> struggled : 1
early often struggled -> to : 1
often struggled to -> understand : 1
struggled to understand -> oop : 1
to understand oop -> and : 1
understand oop and -> how : 1
oop and how -> to : 1
how to effectively -> use : 1
to effectively use -> it : 1
effectively use it -> in : 1
use it in -> large : 1
it in large -> without : 1
in large without -> a : 1
large without a -> viral : 1
without a viral -> medium : 1
a viral medium -> such : 1
viral medium such -> as : 1
medium such as -> the : 1
as the it -> was : 1
the it was -> quite : 1
it was quite -> a : 1
was quite a -> early : 1
quite a early -> adopters : 1
a early adopters -> published : 1
early adopters published -> technical : 1
adopters published technical -> wrote : 1
published technical wrote -> in : 1
technical wrote in -> and : 1
wrote in and -> conducted : 1
in and conducted -> seminars : 1
and conducted seminars -> to : 1
conducted seminars to -> popularize : 1
seminars to popularize -> oop : 1
to popularize oop -> magazines : 1
popularize oop magazines -> such : 1
oop magazines such -> journal : 1
magazines such journal -> and : 1
such journal and -> used : 1
journal and used -> to : 1
and used to -> carry : 1
used to carry -> columns : 1
to carry columns -> featuring : 1
carry columns featuring -> was : 1
columns featuring was -> a : 1
featuring was a -> need : 1
was a need -> to : 1
a need to -> transfer : 1
a need to -> free : 1
need to transfer -> the : 1
transfer the wisdom -> of : 1
the wisdom of -> experts : 1
wisdom of experts -> to : 1
of experts to -> the : 1
experts to the -> programming : 1
to the programming -> but : 1
programming but this -> knowledge : 1
but this knowledge -> propagation : 1
this knowledge propagation -> was : 1
knowledge propagation was -> not : 1
propagation was not -> the : 1
was not the -> legendary : 1
not the legendary -> german : 1
the legendary german -> mathematician : 1
legendary german mathematician -> friedrich : 1
german mathematician friedrich -> learn : 1
mathematician friedrich learn -> from : 1
friedrich learn from -> the : 1
learn from the -> though : 1
from the though -> gauss : 1
the though gauss -> had : 1
though gauss had -> mathematics : 1
gauss had mathematics -> in : 1
had mathematics in -> his : 1
mathematics in his -> statement : 1
in his statement -> is : 1
his statement is -> true : 1
statement is true -> for : 1
is true for -> any : 1
true for any -> human : 1
for any human -> masters : 1
any human masters -> of : 1
human masters of -> oop : 1
masters of oop -> technique : 1
of oop technique -> were : 1
oop technique were -> and : 1
technique were and -> the : 1
were and the -> apprenticeship : 1
and the apprenticeship -> model : 1
the apprenticeship model -> was : 1
apprenticeship model was -> not : 1
model was not -> scaling : 1
was not scaling -> published : 1
not scaling published -> an : 1
scaling published an -> influential : 1
an influential book -> styles : 1
an influential book -> which : 1
influential book styles -> and : 1
book styles and -> dealt : 1
styles and dealt -> with : 1
and dealt with -> the : 2
with the patterns -> associated : 1
the patterns associated -> with : 1
patterns associated with -> usage : 1
associated with usage -> of : 1
with usage of -> the : 1
the programming even -> though : 1
programming even though -> it : 1
is not widely -> authors : 1
not widely authors -> consider : 1
widely authors consider -> it : 1
authors consider it -> a : 1
consider it a -> notable : 1
it a notable -> book : 1
a notable book -> for : 1
notable book for -> cataloging : 1
book for cataloging -> the : 1
for cataloging the -> best : 1
cataloging the best -> practices : 1
the best practices -> and : 1
best practices and -> techniques : 1
practices and techniques -> for : 1
and techniques for -> gamma : 1
techniques for gamma -> began : 1
for gamma began -> to : 1
gamma began to -> work : 1
began to work -> on : 1
work on a -> pattern : 1
on a pattern -> catalog : 1
a pattern catalog -> as : 1
pattern catalog as -> part : 1
catalog as part -> of : 1
of his getting -> inspiration : 1
his getting inspiration -> from : 1
getting inspiration from -> a : 1
inspiration from a -> building : 1
from a building -> architect : 1
a building architect -> named : 1
building architect named -> christopher : 1
architect named christopher -> christopher : 1
named christopher christopher -> pattern : 1
christopher christopher pattern -> of : 1
christopher pattern of -> towns : 1
pattern of towns -> and : 1
of towns and -> a : 1
towns and a -> source : 1
and a source -> of : 1
source of inspiration -> for : 1
of inspiration for -> erich : 1
inspiration for erich -> after : 1
for erich after -> people : 1
erich after people -> with : 1
after people with -> similar : 1
people with similar -> namely : 1
with similar namely -> ralph : 1
similar namely ralph -> john : 1
namely ralph john -> and : 1
ralph john and -> richard : 1
john and richard -> joined : 1
and richard joined -> hands : 1
richard joined hands -> with : 1
joined hands with -> erich : 1
hands with erich -> gamma : 1
with erich gamma -> to : 1
erich gamma to -> create : 1
gamma to create -> a : 1
create a catalog -> of : 1
a catalog of -> design : 1
catalog of design -> now : 1
of design now -> affectionately : 1
design now affectionately -> known : 1
now affectionately known -> as : 1
affectionately known as -> of : 1
known as of -> design : 1
as of design -> addison : 1
of design addison -> wesley : 1
design addison wesley -> published : 1
addison wesley published -> the : 1
wesley published the -> patterns : 1
published the patterns -> elements : 1
the patterns elements -> of : 1
patterns elements of -> reusable : 1
of reusable this -> soon : 1
reusable this soon -> became : 1
this soon became -> a : 1
soon became a -> great : 1
became a great -> reference : 1
a great reference -> for : 1
great reference for -> and : 1
reference for and -> fueled : 1
for and fueled -> software : 1
and fueled software -> the : 1
fueled software the -> gof : 1
software the gof -> catalog : 1
gof catalog was -> mostly : 1
catalog was mostly -> focused : 1
was mostly focused -> on : 1
mostly focused on -> software : 1
mostly focused on -> designing : 1
focused on software -> a : 1
software a group -> of : 1
group of engineers -> from : 1
of engineers from -> siemens : 1
engineers from siemens -> published : 1
from siemens published -> the : 1
siemens published the -> oriented : 1
published the oriented -> software : 1
the oriented software -> which : 1
oriented software which -> mainly : 1
software which mainly -> focused : 1
which mainly focused -> on : 1
mainly focused on -> the : 1
focused on the -> architectural : 1
on the architectural -> aspects : 1
the architectural aspects -> of : 1
architectural aspects of -> building : 1
aspects of building -> a : 1
of building a -> the : 1
building a the -> entire : 1
a the entire -> posa : 1
the entire posa -> pattern : 1
entire posa pattern -> catalog : 1
posa pattern catalog -> was : 1
pattern catalog was -> documented : 1
catalog was documented -> in : 1
was documented in -> five : 1
documented in five -> published : 1
in five published -> by : 1
five published by -> john : 1
published by john -> wiley : 1
by john wiley -> and : 1
john wiley and -> the : 1
wiley and the -> group : 1
and the group -> was : 1
the group was -> joined : 1
group was joined -> by : 1
was joined by -> douglas : 1
joined by douglas -> the : 1
by douglas the -> creator : 1
douglas the creator -> of : 1
the creator of -> the : 1
creator of the -> communication : 1
of the communication -> network : 1
the communication network -> programming : 1
communication network programming -> library : 1
network programming library -> and : 1
programming library and -> tao : 1
library and tao -> ace : 1
and tao ace -> he : 1
tao ace he -> later : 1
ace he later -> became : 1
he later became -> the : 1
later became the -> chair : 1
became the chair -> of : 1
the chair of -> management : 1
chair of management -> which : 1
of management which -> and : 1
management which and -> maintains : 1
which and maintains -> such : 1
and maintains such -> as : 1
maintains such as -> corba : 1
such as corba -> and : 1
as corba and -> flood : 1
corba and flood -> of : 1
and flood of -> activity : 1
flood of activity -> followed : 1
of activity followed -> the : 1
activity followed the -> two : 1
followed the two -> preceding : 1
the two preceding -> further : 1
two preceding further -> notable : 1
preceding further notable -> pattern : 1
further notable pattern -> catalogs : 1
notable pattern catalogs -> are : 1
pattern catalogs are -> as : 1
catalogs are as -> of : 1
are as of -> enterprise : 1
as of enterprise -> application : 1
of enterprise application -> by : 1
enterprise application by -> martin : 1
application by martin -> et : 1
by martin et -> integration : 1
martin et integration -> by : 1
et integration by -> gregor : 1
integration by gregor -> hope : 1
by gregor hope -> and : 1
gregor hope and -> boby : 1
hope and boby -> by : 1
and boby by -> deepak : 1
boby by deepak -> et : 1
by deepak et -> driven : 1
deepak et driven -> by : 1
et driven by -> eric : 1
driven by eric -> enterprise : 1
by eric enterprise -> patterns : 1
eric enterprise patterns -> and : 1
enterprise patterns and -> the : 1
and the jim -> arlow : 1
the jim arlow -> and : 1
jim arlow and -> illa : 1
arlow and illa -> though : 1
and illa though -> these : 1
illa though these -> books : 1
though these books -> were : 1
these books were -> significant : 1
books were significant -> in : 1
were significant in -> their : 1
significant in their -> own : 1
in their own -> they : 1
their own they -> were : 1
own they were -> skewed : 1
they were skewed -> towards : 1
were skewed towards -> the : 1
skewed towards the -> area : 1
towards the area -> of : 1
the area of -> enterprise : 1
the area of -> with : 1
area of enterprise -> software : 1
of enterprise software -> for : 1
enterprise software for -> the : 1
software for the -> gof : 1
for the gof -> catalog : 1
gof catalog and -> the : 1
catalog and the -> posa : 1
and the posa -> catalog : 1
the posa catalog -> are : 1
posa catalog are -> the : 1
catalog are the -> most : 1
are the most -> pattern : 1
are the most -> popular : 1
the most pattern -> pattern : 1
most pattern pattern -> is : 1
pattern pattern is -> a : 1
pattern is a -> named : 1
pattern is a -> viable : 1
is a named -> solution : 1
a named solution -> to : 1
named solution to -> a : 1
solution to a -> commonly : 1
to a commonly -> occurring : 1
a commonly occurring -> problem : 1
commonly occurring problem -> in : 1
occurring problem in -> software : 1
problem in software -> patterns : 1
in software patterns -> are : 1
software patterns are -> most : 1
patterns are most -> often : 1
are most often -> cataloged : 1
most often cataloged -> in : 1
often cataloged in -> some : 1
cataloged in some -> kind : 1
in some kind -> of : 1
kind of pattern -> some : 1
of pattern some -> of : 1
pattern some of -> them : 1
them are published -> as : 1
are published as -> the : 1
published as the -> most : 1
the most popular -> and : 1
the most popular -> techniques : 1
the most popular -> methods : 1
the most popular -> commands : 1
the most popular -> libraries : 1
most popular and -> widely : 1
popular and widely -> used : 1
and widely used -> pattern : 1
widely used pattern -> catalog : 1
used pattern catalog -> is : 1
pattern catalog is -> gang : 1
catalog is gang -> of : 1
is gang of -> four : 1
gang of four -> named : 1
gang of four -> divided : 1
of four named -> after : 1
four named after -> the : 1
named after the -> creators : 1
after the creators -> of : 1
the creators of -> the : 1
creators of the -> started : 1
of the started -> the : 1
the started the -> pattern : 1
started the pattern -> the : 1
the pattern the -> creators : 1
the pattern the -> composite : 1
pattern the creators -> were : 1
the creators were -> mostly : 1
creators were mostly -> focused : 1
were mostly focused -> on : 1
focused on designing -> and : 1
on designing and -> architecting : 1
designing and architecting -> the : 1
and architecting the -> ideas : 1
architecting the ideas -> of : 1
the ideas of -> christopher : 1
ideas of christopher -> alexander : 1
of christopher alexander -> were : 1
christopher alexander were -> borrowed : 1
alexander were borrowed -> to : 1
were borrowed to -> software : 1
borrowed to software -> engineering : 1
to software engineering -> discipline : 1
software engineering discipline -> and : 1
engineering discipline and -> applied : 1
discipline and applied -> to : 1
and applied to -> application : 1
applied to application -> and : 1
to application and -> so : 1
application and so -> the : 1
so the gang -> of : 1
the gang of -> four : 1
of four divided -> the : 1
four divided the -> catalog : 1
divided the catalog -> into : 1
the catalog into -> and : 1
catalog into and -> behavioral : 1
behavioral the original -> book : 1
the original book -> used : 1
original book used -> and : 1
book used and -> smalltalk : 1
used and smalltalk -> for : 1
and smalltalk for -> explaining : 1
smalltalk for explaining -> the : 1
for explaining the -> these : 1
explaining the these -> patterns : 1
the these patterns -> have : 1
these patterns have -> been : 1
patterns have been -> ported : 1
have been ported -> and : 1
been ported and -> leveraged : 1
ported and leveraged -> in : 1
and leveraged in -> most : 1
leveraged in most -> of : 1
in most of -> the : 2
programming languages that -> take : 1
languages that take -> a : 1
that take a -> look : 1
at this factory -> of : 1
this factory of -> observer : 1
factory of observer -> template : 1
of observer template -> believe : 1
observer template believe -> that : 1
template believe that -> a : 1
believe that a -> good : 1
that a good -> understanding : 1
a good understanding -> of : 1
good understanding of -> gof : 1
understanding of gof -> patterns : 1
of gof patterns -> is : 1
gof patterns is -> necessary : 1
patterns is necessary -> for : 1
necessary for any -> these : 1
for any these -> patterns : 1
any these patterns -> occur : 1
these patterns occur -> regardless : 1
patterns occur regardless -> of : 1
occur regardless of -> the : 1
the application gof -> patterns : 1
application gof patterns -> help : 1
gof patterns help -> us : 1
patterns help us -> to : 1
us to communicate -> and : 1
to communicate and -> reason : 1
communicate and reason -> about : 1
and reason about -> systems : 1
reason about systems -> in : 1
about systems in -> a : 1
systems in a -> language : 1
in a language -> agnostic : 1
a language agnostic -> they : 1
language agnostic they -> are : 1
agnostic they are -> widely : 1
they are widely -> implemented : 1
are widely implemented -> in : 1
widely implemented in -> the : 1
the and java -> the : 1
and java the -> qt : 1
java the qt -> framework : 1
qt framework leverages -> the : 1
framework leverages the -> patterns : 1
leverages the patterns -> in : 1
the patterns in -> the : 1
patterns in the -> gof : 1
the gof repository -> for : 1
gof repository for -> giving : 1
repository for giving -> an : 1
for giving an -> intuitive : 1
giving an intuitive -> programming : 1
intuitive programming of -> software : 1
programming of software -> is : 1
of software is -> an : 1
software is an -> influential : 1
is an influential -> book : 1
influential book which -> covers : 1
book which covers -> most : 1
which covers most -> of : 1
covers most of -> the : 1
the applicable patterns -> for : 1
applicable patterns for -> developing : 1
patterns for developing -> mission : 1
for developing mission -> critical : 1
developing mission critical -> the : 1
mission critical the -> catalog : 1
critical the catalog -> is : 1
the catalog is -> good : 1
the catalog is -> that : 1
catalog is good -> for : 1
good for people -> who : 1
for people who -> write : 1
people who write -> mission : 1
who write mission -> critical : 1
write mission critical -> of : 1
mission critical of -> large : 1
critical of large -> especially : 1
of large especially -> database : 1
large especially database -> distributed : 1
especially database distributed -> middleware : 1
database distributed middleware -> and : 1
distributed middleware and -> so : 1
middleware and so -> another : 1
and so another -> advantage : 1
so another advantage -> of : 1
another advantage of -> the : 1
another advantage of -> this : 1
of the catalog -> is : 1
catalog is that -> it : 1
is that it -> is : 1
that it is -> well : 1
it is well -> suited : 1
is well suited -> for : 2
well suited for -> which : 1
well suited for -> fire : 1
suited for which -> spans : 1
for which spans -> five : 1
which spans five -> published : 1
spans five published -> is : 1
five published is -> listed : 1
published is listed -> in : 1
is listed in -> the : 1
listed in the -> following : 1
the following pipes -> and : 1
following pipes and -> command : 1
pipes and command -> view : 1
and command view -> access : 1
command view access -> and : 1
view access and -> configuration : 1
access and configuration -> component : 1
and configuration component -> extension : 1
configuration component extension -> handling : 1
component extension handling -> asynchronous : 1
extension handling asynchronous -> completion : 1
handling asynchronous completion -> strategized : 1
asynchronous completion strategized -> locking : 1
completion strategized locking -> monitor : 1
strategized locking monitor -> acquisition : 1
locking monitor acquisition -> lazy : 1
monitor acquisition lazy -> eager : 1
acquisition lazy eager -> partial : 1
lazy eager partial -> resource : 1
eager partial resource -> lifecycle : 1
partial resource lifecycle -> release : 1
resource lifecycle release -> pattern : 1
lifecycle release pattern -> language : 1
release pattern language -> for : 1
pattern language for -> distributive : 1
language for distributive -> of : 1
for distributive of -> patterns : 1
distributive of patterns -> from : 1
of patterns from -> different : 1
patterns from different -> catalogs : 1
from different catalogs -> in : 1
different catalogs in -> the : 1
catalogs in the -> context : 1
context of distributed -> patterns : 1
of distributed patterns -> and : 1
distributed patterns and -> pattern : 1
patterns and pattern -> last : 1
and pattern last -> volume : 1
pattern last volume -> gives : 1
last volume gives -> some : 1
volume gives some -> about : 1
gives some about -> pattern : 1
some about pattern -> and : 1
about pattern and -> posa : 1
pattern and posa -> catalog : 1
and posa catalog -> needs : 1
posa catalog needs -> to : 1
catalog needs to -> be : 1
to be studied -> to : 1
be studied to -> gain : 1
studied to gain -> deep : 1
to gain deep -> insights : 1
gain deep insights -> into : 1
deep insights into -> the : 1
insights into the -> architectural : 1
into the architectural -> underpinnings : 1
the architectural underpinnings -> of : 1
architectural underpinnings of -> which : 1
underpinnings of which -> are : 1
of which are -> deployed : 1
which are deployed -> across : 1
are deployed across -> the : 1
deployed across the -> we : 1
across the we -> believe : 1
the we believe -> despite : 1
we believe despite -> its : 1
believe despite its -> this : 1
despite its this -> catalog : 1
its this catalog -> has : 1
this catalog has -> not : 1
catalog has not -> received : 1
has not received -> the : 1
not received the -> attention : 1
received the attention -> it : 1
the attention it -> design : 1
attention it design -> pattern : 1
it design pattern -> gof : 1
design pattern gof -> pattern : 1
pattern gof pattern -> and : 1
pattern and reactive -> programming : 1
and reactive programming -> have : 1
and reactive programming -> are : 1
and reactive programming -> is : 1
reactive programming have -> a : 1
programming have a -> deeper : 1
have a deeper -> connection : 1
a deeper connection -> that : 1
deeper connection that -> is : 1
connection that is -> obvious : 1
that is obvious -> from : 1
is obvious from -> the : 1
the the gof -> pattern : 1
gof pattern is -> mostly : 1
pattern is mostly -> concerned : 1
is mostly concerned -> with : 2
mostly concerned with -> writing : 1
mostly concerned with -> shared : 1
concerned with writing -> reactive : 1
with writing reactive -> programming : 1
writing reactive programming -> is : 1
programming is about -> functional : 1
is about functional -> stream : 1
about functional stream -> and : 1
functional stream and -> we : 1
stream and we -> already : 1
and we already -> learned : 1
we already learned -> that : 1
learned that reactive -> programming : 2
reactive programming covers -> some : 1
programming covers some -> deficiencies : 1
covers some deficiencies -> in : 1
some deficiencies in -> classic : 1
deficiencies in classic -> gof : 1
in classic gof -> observer : 1
gof observer patterns -> the : 1
observer patterns the -> first : 1
patterns the first -> section : 1
the first section -> of : 1
first section of -> to : 1
section of to -> we : 1
of to we -> covered : 1
to we covered -> this : 1
we covered this -> programs : 1
covered this programs -> are : 1
this programs are -> basically : 1
programs are basically -> about : 1
are basically about -> modeling : 1
basically about modeling -> and : 1
about modeling and -> from : 1
modeling and from -> the : 1
from the pattern -> the : 1
pattern the composite -> pattern : 1
the way to -> model : 1
way to model -> wherever : 1
to model wherever -> there : 1
model wherever there -> is : 1
wherever there is -> a : 1
a a collection -> of : 1
collection of visitor -> implementations : 1
of visitor implementations -> will : 1
visitor implementations will -> follow : 1
implementations will follow -> in : 1
follow in other -> the : 1
in other the -> duo : 1
other the duo -> is : 1
the duo is -> the : 1
duo is the -> canonical : 1
is the canonical -> pattern : 1
the canonical pattern -> for : 1
canonical pattern for -> writing : 1
pattern for writing -> visitor : 1
for writing visitor -> implementations : 1
writing visitor implementations -> should : 1
visitor implementations should -> possess : 1
implementations should possess -> some : 1
should possess some -> awareness : 1
possess some awareness -> of : 1
some awareness of -> the : 1
of the behavioral -> processing : 1
the behavioral processing -> using : 1
behavioral processing using -> the : 1
processing using the -> visitor : 1
processing using the -> iterator : 1
visitor pattern becomes -> as : 1
pattern becomes as -> the : 1
becomes as the -> number : 1
as the number -> of : 1
number of visitors -> adding : 1
of visitors adding -> transformations : 1
visitors adding transformations -> and : 1
adding transformations and -> filters : 1
transformations and filters -> to : 2
transformations and filters -> are : 1
transformations and filters -> on : 2
and filters to -> the : 1
and filters to -> sequences : 1
filters to the -> processing : 1
to the processing -> further : 1
the processing further -> complicates : 1
processing further complicates -> the : 1
further complicates the -> the : 1
complicates the the -> iterator : 1
the the iterator -> which : 1
the iterator which -> is : 1
iterator which is -> good : 1
which is good -> for : 1
good for the -> navigation : 1
for the navigation -> of : 1
the navigation of -> a : 1
navigation of a -> or : 1
of a or -> list : 1
a or list -> of : 1
or list of -> using : 1
list of using -> programming : 1
of using programming -> we : 1
using programming we -> can : 1
we can filter -> and : 1
can filter and -> transform : 1
and transform sequences -> very : 1
transform sequences very -> language : 1
sequences very language -> integrated : 1
very language integrated -> query : 1
language integrated query -> and : 1
integrated query and -> processing : 1
query and processing -> in : 1
and processing in -> java : 1
processing in java -> and : 1
in java and -> are : 1
java and are -> good : 1
and are good -> examples : 1
are good examples -> of : 1
good examples of -> the : 1
examples of the -> iterator : 1
of the iterator -> how : 1
the iterator how -> will : 1
iterator how will -> we : 1
how will we -> transform : 1
will we transform -> the : 1
we transform the -> hierarchical : 1
transform the hierarchical -> data : 1
the hierarchical data -> into : 1
hierarchical data into -> a : 1
into a linear -> most : 1
into a linear -> list : 1
a linear most -> hierarchies : 1
linear most hierarchies -> can : 1
most hierarchies can -> be : 2
hierarchies can be -> flattened : 2
can be flattened -> into : 1
can be flattened -> to : 1
a stream for -> further : 1
stream for further -> people : 1
for further people -> have : 1
further people have -> started : 1
people have started -> doing : 1
have started doing -> the : 1
started doing the -> their : 1
doing the their -> hierarchies : 1
the their hierarchies -> using : 1
their hierarchies using -> the : 1
composite the hierarchy -> into : 1
into a sequence -> by : 1
a sequence by -> using : 1
sequence by using -> a : 1
a visitor meant -> for : 1
visitor meant for -> the : 1
meant for the -> those : 1
for the those -> sequences : 1
the those sequences -> using : 1
those sequences using -> the : 1
sequences using the -> iterator : 1
the iterator a -> series : 1
iterator a series -> of : 1
series of transformations -> and : 1
of transformations and -> filters : 2
filters to sequences -> before : 1
to sequences before -> performing : 1
sequences before performing -> actions : 1
before performing actions -> on : 1
actions on preceding -> method : 1
on preceding method -> is : 1
preceding method is -> called : 1
method is called -> the : 1
is called the -> method : 1
is called the -> node : 1
called the method -> of : 1
method of consumers -> or : 1
of consumers or -> clients : 1
consumers or clients -> pull : 1
or clients pull -> the : 1
clients pull the -> data : 1
pull the data -> from : 1
event or data -> source : 1
or data source -> to : 1
data source to -> process : 1
source to process -> this : 1
to process this -> scheme : 1
to process this -> we : 1
process this scheme -> suffers : 1
this scheme suffers -> from : 1
scheme suffers from -> the : 1
suffers from the -> following : 1
from the following -> data : 1
the following data -> is : 1
the following data -> following : 1
following data is -> unnecessarily : 1
data is unnecessarily -> pulled : 1
is unnecessarily pulled -> into : 1
unnecessarily pulled into -> the : 1
pulled into the -> transformations : 1
into the transformations -> and : 1
the transformations and -> filters : 1
and filters are -> applied : 1
filters are applied -> to : 1
are applied to -> the : 1
applied to the -> event : 1
event sink event -> sink : 1
sink event sink -> can : 1
event sink can -> block : 1
sink can block -> the : 1
block the style -> is : 1
the style is -> not : 1
style is not -> good : 1
is not good -> for : 1
not good for -> asynchronous : 1
good for asynchronous -> where : 1
for asynchronous where -> data : 1
asynchronous where data -> varies : 1
where data varies -> over : 1
data varies over -> good : 1
varies over good -> solution : 1
over good solution -> to : 1
good solution to -> the : 1
solution to the -> problem : 1
to the problem -> is : 1
the problem is -> to : 1
problem is to -> reverse : 1
is to reverse -> the : 1
reverse the where -> data : 1
the where data -> is : 1
where data is -> pushed : 1
data is pushed -> from : 1
is pushed from -> the : 1
pushed from the -> server : 1
from the server -> asynchronously : 1
the server asynchronously -> as : 1
server asynchronously as -> a : 1
asynchronously as a -> and : 1
as a and -> the : 1
as a and -> eventually : 1
event sink will -> react : 1
sink will react -> to : 1
will react to -> the : 1
to the another -> advantage : 1
the another advantage -> of : 1
of this kind -> of : 1
this kind of -> system : 1
kind of system -> is : 1
of system is -> the : 1
system is the -> placement : 1
is the placement -> of : 1
the placement of -> transformations : 1
placement of transformations -> and : 1
and filters on -> the : 1
and filters on -> nodes : 1
filters on the -> event : 1
on the event -> source : 2
event source this -> leads : 1
source this leads -> to : 1
this leads to -> a : 1
to a scenario -> where : 1
a scenario where -> only : 1
scenario where only -> data : 1
where only data -> that : 1
only data that -> is : 1
data that is -> absolutely : 1
data that is -> often : 1
that is absolutely -> essential : 1
is absolutely essential -> needs : 1
absolutely essential needs -> to : 1
essential needs to -> be : 1
be processed on -> the : 1
processed on the -> sink : 1
on the sink -> scheme : 1
the sink scheme -> is : 1
sink scheme is -> as : 1
scheme is as -> data : 1
is as data -> is : 1
as data is -> treated : 1
data is treated -> in : 1
is treated in -> which : 1
treated in which -> are : 1
which are called -> can : 1
are called can -> apply : 1
called can apply -> a : 1
can apply a -> series : 1
apply a series -> of : 1
series of or -> higher : 1
of or higher -> order : 1
or higher order -> to : 1
higher order to -> operator : 1
order to operator -> always : 1
to operator always -> takes : 1
operator always takes -> an : 1
always takes an -> observable : 1
observable and returns -> another : 1
and returns another -> can : 1
returns another can -> subscribe : 1
another can subscribe -> to : 1
observable for have -> standard : 1
for have standard -> mechanisms : 1
have standard mechanisms -> to : 1
standard mechanisms to -> process : 1
mechanisms to process -> this : 1
process this we -> learned : 1
learned how oop -> patterns : 1
how oop patterns -> and : 1
oop patterns and -> reactive : 1
programming are closely -> judicious : 1
are closely judicious -> mixing : 1
closely judicious mixing -> of : 1
judicious mixing of -> both : 1
mixing of both -> paradigms : 1
of both paradigms -> produces : 1
both paradigms produces -> high : 1
paradigms produces high -> maintainable : 1
produces high maintainable -> we : 1
high maintainable we -> also : 1
maintainable we also -> discussed : 1
also discussed how -> oop : 1
discussed how oop -> design : 1
how oop design -> patterns : 1
oop design patterns -> can : 1
design patterns can -> be : 1
patterns can be -> transformed : 1
can be transformed -> the : 1
can be transformed -> into : 1
be transformed the -> to : 1
transformed the to -> leverage : 1
the to leverage -> iterator : 1
to leverage iterator -> we : 1
leverage iterator we -> discussed : 1
iterator we discussed -> how : 1
we discussed how -> the : 1
discussed how the -> scheme : 1
how the scheme -> of : 1
scheme of iteration -> can : 1
of iteration can -> be : 1
iteration can be -> improved : 1
can be improved -> with : 1
be improved with -> a : 1
improved with a -> slight : 1
with a slight -> nudge : 1
a slight nudge -> fire : 1
slight nudge fire -> and : 1
nudge fire and -> forget : 1
and forget idiom -> on : 1
forget idiom on -> the : 1
idiom on the -> event : 1
event source in -> the : 1
source in the -> next : 1
we will demonstrate -> the : 1
the whole technique -> by : 1
whole technique by -> writing : 1
technique by writing -> design : 1
by writing design -> patterns : 1
writing design patterns -> to : 1
to reactive though -> the : 1
reactive though the -> design : 1
though the design -> pattern : 1
pattern movement is -> aligned : 1
movement is aligned -> with : 1
is aligned with -> and : 1
aligned with and -> reactive : 1
with and reactive -> programming : 1
programming is aligned -> towards : 1
is aligned towards -> there : 1
aligned towards there -> are : 1
towards there are -> close : 1
there are close -> similarities : 1
are close similarities -> between : 1
close similarities between -> in : 1
similarities between in -> a : 1
between in a -> previous : 1
in a previous -> we : 1
a previous we -> learned : 1
we learned the -> oop : 1
learned the oop -> model : 1
the oop model -> is : 1
oop model is -> good : 1
model is good -> for : 2
good for modeling -> the : 2
for modeling the -> structural : 1
for modeling the -> behavioral : 1
modeling the structural -> aspects : 1
the structural aspects -> of : 1
structural aspects of -> a : 1
of a fp -> model : 1
a fp model -> is : 1
fp model is -> good : 1
modeling the behavioral -> aspects : 1
the behavioral aspects -> of : 1
of a illustrate -> the : 1
a illustrate the -> connection : 1
illustrate the connection -> between : 1
the connection between -> oop : 1
connection between oop -> and : 1
between oop and -> reactive : 1
oop and reactive -> we : 1
and reactive we -> will : 1
that will traverse -> directories : 1
will traverse directories -> to : 1
traverse directories to -> enumerate : 1
directories to enumerate -> files : 1
to enumerate files -> and : 1
enumerate files and -> within : 1
files and within -> a : 1
and within a -> given : 1
within a given -> will : 1
a given will -> create : 1
given will create -> a : 1
a composite structure -> that : 1
composite structure that -> contains : 1
structure that contains -> the : 1
contains the from -> that : 1
the from that -> models : 1
from that models -> file : 1
from that models -> folder : 1
that models file -> from : 1
models file from -> that : 1
file from that -> models : 1
that models folder -> defining : 1
models folder defining -> the : 1
folder defining the -> preceding : 1
defining the preceding -> we : 1
preceding we will -> define : 1
will define visitors -> for : 1
define visitors for -> the : 1
visitors for the -> filenames : 1
for the filenames -> and : 1
the filenames and -> folder : 1
filenames and folder -> a : 1
and folder a -> composite : 1
folder a composite -> hierarchy : 1
a composite hierarchy -> to : 1
composite hierarchy to -> a : 1
hierarchy to a -> list : 1
list of further -> get : 1
of further get -> into : 1
further get into -> the : 1
at this this -> is : 1
this this is -> omitted : 1
this is omitted -> in : 1
is omitted in -> posix : 1
omitted in posix -> version : 1
in posix version -> using : 1
posix version using -> namespace : 1
version using namespace -> forward : 1
namespace forward declarations -> model : 1
forward declarations model -> class : 1
declarations model class -> class : 1
model class class -> the : 1
class class the -> visitor : 1
class the visitor -> interface : 1
visitor interface class -> preceding : 1
visitor interface class -> virtual : 1
interface class preceding -> forward : 1
class preceding forward -> declarations : 1
preceding forward declarations -> are : 1
forward declarations are -> undertaken : 1
declarations are undertaken -> to : 1
are undertaken to -> silence : 1
undertaken to silence -> the : 1
to silence the -> compiler : 1
silence the compiler -> from : 1
compiler from issuing -> errors : 1
from issuing errors -> and : 1
issuing errors and -> warnings : 1
errors and warnings -> while : 1
and warnings while -> compiling : 1
warnings while compiling -> the : 1
while compiling the -> the : 1
compiling the the -> stores : 1
the the stores -> a : 1
the stores a -> filename : 1
the stores a -> folder : 1
stores a filename -> and : 1
a filename and -> its : 1
filename and its -> size : 1
and its size -> as : 1
its size as -> an : 1
size as an -> instance : 1
as an instance -> the : 1
an instance the -> stores : 1
instance the stores -> a : 1
stores a folder -> name : 1
a folder name -> and : 1
folder name and -> a : 1
name and a -> list : 1
and a list -> of : 1
list of to -> indicate : 1
of to indicate -> the : 1
to indicate the -> files : 1
to indicate the -> kind : 1
to indicate the -> action : 1
indicate the files -> and : 1
the files and -> folders : 2
files and folders -> within : 1
files and folders -> in : 1
and folders within -> a : 1
folders within a -> the : 1
within a the -> hierarchy : 1
a the hierarchy -> is : 1
the hierarchy is -> processed : 1
hierarchy is processed -> by : 1
is processed by -> the : 1
processed by the -> we : 1
see the declarations -> as : 1
the declarations as -> a : 1
declarations as a -> type : 1
as a type -> to : 1
type to store -> fileinformation : 1
to store fileinformation -> struct : 1
store fileinformation struct -> string : 1
fileinformation struct string -> long : 1
struct string long -> string : 1
string long string -> psize : 1
long string psize -> name : 1
string psize name -> base : 1
psize name base -> class : 1
name base class -> for : 1
class for data -> structure : 1
for data structure -> class : 1
data structure class -> string : 1
structure class string -> int : 1
class string int -> long : 1
string int long -> virtual : 1
int long virtual -> bool : 1
long virtual bool -> virtual : 1
bool virtual long -> virtual : 1
virtual long virtual -> void : 2
long virtual void -> virtual : 1
long virtual void -> ivis : 1
void virtual we -> create : 1
virtual we create -> a : 1
create a we -> need : 1
create a we -> call : 1
a we need -> to : 1
create a node -> class : 1
a node class -> that : 1
node class that -> acts : 1
class that acts -> as : 1
that acts as -> a : 1
a base class -> for : 1
for all members -> of : 1
all members of -> the : 1
members of the -> in : 1
our the class -> does : 1
the class does -> we : 1
class does we -> store : 1
does we store -> the : 1
we store the -> file : 1
store the file -> or : 1
the file or -> folder : 1
file or folder -> the : 1
or folder the -> and : 1
folder the and -> so : 1
and so in -> the : 1
so in the -> base : 1
so in the -> rxcpp : 1
in the base -> other : 1
in the base -> class : 1
the base other -> than : 1
base other than -> the : 1
than the three -> virtual : 1
the three virtual -> which : 1
three virtual which -> should : 1
virtual which should -> be : 1
which should be -> implemented : 1
should be implemented -> by : 1
by the derived -> we : 1
the derived we -> have : 1
derived we have -> a : 1
have a virtual -> as : 1
a virtual as -> the : 1
virtual as the -> presence : 1
as the presence -> of : 1
the presence of -> a : 1
presence of a -> virtual : 1
of a virtual -> destructor : 1
a virtual destructor -> makes : 1
virtual destructor makes -> sure : 1
destructor makes sure -> that : 1
sure that destructors -> in : 1
that destructors in -> therapy : 1
destructors in therapy -> are : 1
in therapy are -> called : 1
therapy are called -> as : 1
are called as -> shown : 1
called as shown -> here : 1
as shown here -> visitor : 1
shown here visitor -> interface : 1
here visitor interface -> class : 1
interface class virtual -> void : 1
virtual void fn -> virtual : 1
void fn virtual -> void : 1
fn virtual void -> dn : 1
virtual void dn -> we : 1
void dn we -> define : 1
dn we define -> a : 1
we define a -> hierarchy : 1
we define a -> visitor : 1
define a hierarchy -> using : 1
a hierarchy using -> a : 1
hierarchy using a -> composite : 1
using a composite -> pattern : 1
composite pattern style -> we : 1
pattern style we -> define : 1
style we define -> a : 1
define a visitor -> interface : 1
a visitor interface -> to : 1
a visitor interface -> that : 1
visitor interface to -> process : 1
interface to process -> the : 1
process the nodes -> in : 1
the nodes in -> the : 1
nodes in the -> for : 1
in the for -> each : 1
in the for -> the : 1
in the for -> for : 1
the for each -> node : 1
for each node -> in : 1
each node in -> the : 1
the there will -> be : 1
be a method -> for : 1
a method for -> it : 1
method for it -> in : 1
for it in -> the : 1
in the visitor -> every : 1
the class hierarchy -> of : 1
class hierarchy of -> the : 1
hierarchy of the -> composite : 1
the composite will -> have : 1
composite will have -> an : 1
have an and -> the : 1
an and the -> visitor : 1
an and the -> code : 1
and the visitor -> interface : 1
visitor interface dispatches -> the : 1
interface dispatches the -> call : 1
dispatches the call -> to : 1
dispatches the call -> back : 1
to the respective -> the : 1
the respective the -> method : 1
respective the method -> dispatches : 1
the method dispatches -> the : 1
method dispatches the -> call : 1
to the correct -> method : 1
to the correct -> visitor : 1
the correct method -> in : 1
correct method in -> the : 1
the this process -> is : 1
this process is -> called : 1
process is called -> the : 1
called the node -> which : 1
the node which -> represents : 1
node which represents -> files : 1
node which represents -> directory : 1
which represents files -> class : 1
represents files class -> filenode : 1
files class filenode -> public : 1
class filenode public -> entrynode : 1
filenode public entrynode -> long : 1
public entrynode long -> isdir : 1
entrynode long isdir -> name : 1
long isdir name -> size : 1
isdir name size -> filenode : 1
name size filenode -> name : 1
size filenode name -> virtual : 1
filenode name virtual -> bool : 1
name virtual bool -> return : 1
bool return isdir -> string : 2
return isdir string -> return : 2
isdir string return -> virtual : 1
isdir string return -> void : 1
string return virtual -> long : 1
return virtual long -> virtual : 1
virtual void ivis -> class : 1
void ivis class -> just : 1
void ivis class -> models : 1
ivis class just -> stores : 1
class just stores -> the : 1
stores the name -> and : 1
the name and -> the : 1
name and the -> size : 1
and the size -> of : 1
which is stored -> in : 1
the class also -> implements : 1
class also implements -> all : 1
also implements all -> of : 1
implements all of -> the : 1
the virtual methods -> declared : 1
virtual methods declared -> in : 1
methods declared in -> the : 1
class the method -> redirects : 1
the method redirects -> the : 1
method redirects the -> call : 1
redirects the call -> to : 1
the correct visitor -> level : 1
correct visitor level -> as : 1
visitor level as -> shown : 1
level as shown -> node : 1
as shown node -> which : 1
shown node which -> represents : 1
which represents directory -> class : 1
represents directory class -> directorynode : 1
directory class directorynode -> public : 1
class directorynode public -> entrynode : 1
directorynode public entrynode -> isdir : 1
public entrynode isdir -> name : 1
entrynode isdir name -> bool : 1
isdir name bool -> string : 1
name bool string -> pname : 1
bool string pname -> long : 1
string pname long -> return : 1
pname long return -> bool : 1
long return bool -> directorynode : 1
return bool directorynode -> return : 1
bool directorynode return -> bool : 1
directorynode return bool -> return : 1
string return void -> name : 1
string return void -> v : 1
return void name -> long : 1
void name long -> void : 1
name long void -> ivis : 1
long void ivis -> class : 1
ivis class models -> a : 1
models a folder -> with : 1
a folder with -> a : 1
folder with a -> list : 1
with a list -> of : 1
list of files -> and : 2
list of files -> uses : 1
of files and -> we : 1
of files and -> issue : 1
files and we -> are : 1
are using smart -> pointers : 1
using smart pointers -> to : 1
smart pointers to -> store : 1
pointers to store -> the : 1
store the as -> we : 1
the as we -> have : 1
the as we -> there : 1
have also implemented -> all : 1
also implemented all -> virtual : 1
implemented all virtual -> functions : 1
all virtual functions -> associated : 1
virtual functions associated -> with : 1
functions associated with -> the : 1
the the methods -> and : 1
the methods and -> are : 1
methods and are -> meant : 1
are meant to -> populate : 1
meant to populate -> the : 1
to populate the -> while : 1
to populate the -> data : 1
populate the while -> traversing : 1
the while traversing -> the : 1
while traversing the -> directory : 1
traversing the directory -> using : 1
the directory using -> the : 1
directory using the -> os : 1
using the os -> specific : 1
the os specific -> we : 1
os specific we -> populate : 1
specific we populate -> a : 1
we populate a -> directory : 1
populate a directory -> with : 1
a directory with -> the : 1
directory with the -> preceding : 1
preceding two helper -> has : 1
two helper has -> to : 1
helper has to -> be : 1
be written for -> each : 1
written for each -> os : 1
for each os -> class : 1
each os class -> dirhelper : 1
os class dirhelper -> static : 1
class dirhelper static -> directorynode : 1
dirhelper static directorynode -> do : 1
static directorynode do -> some : 1
directorynode do some -> os : 1
do some os -> specific : 1
some os specific -> stuff : 1
os specific stuff -> to : 1
specific stuff to -> retrieve : 1
stuff to retrieve -> hierarchy : 1
to retrieve hierarchy -> from : 1
retrieve hierarchy from -> the : 1
hierarchy from the -> root : 1
from the root -> folder : 1
the root folder -> return : 1
root folder return -> logic : 1
folder return logic -> varies : 1
return logic varies -> between : 1
logic varies between -> windows : 1
varies between windows -> and : 1
between windows and -> gnu : 1
windows and gnu -> we : 1
and gnu we -> have : 1
gnu we have -> omitted : 1
we have omitted -> the : 2
we have omitted -> exception : 1
have omitted the -> source : 1
have omitted the -> implementation : 1
omitted the source -> code : 1
source code from -> the : 1
code from the -> the : 1
the the associated -> website : 1
the associated website -> contains : 1
associated website contains -> the : 1
website contains the -> full : 1
contains the full -> source : 1
the full source -> code : 1
full source code -> for : 1
preceding the program -> recursively : 1
the program recursively -> traverses : 1
program recursively traverses -> the : 1
recursively traverses the -> directory : 1
traverses the directory -> to : 1
the directory to -> populate : 1
directory to populate -> the : 1
populate the data -> as : 1
the data as -> shown : 1
the data as -> the : 1
data as shown -> a : 1
as shown a -> visitor : 1
as shown a -> toy : 1
shown a visitor -> interface : 1
visitor interface that -> prints : 1
interface that prints -> the : 1
that prints the -> contents : 1
of a folder -> class : 1
a folder class -> printfoldervisitor : 1
folder class printfoldervisitor -> public : 1
class printfoldervisitor public -> ifilefoldervisitor : 1
printfoldervisitor public ifilefoldervisitor -> void : 1
public ifilefoldervisitor void -> fn : 1
ifilefoldervisitor void fn -> void : 1
void fn void -> dn : 1
fn void dn -> cout : 1
void dn cout -> a : 1
dn cout a -> directory : 1
cout a directory -> ls : 1
a directory ls -> for : 1
directory ls for -> itr : 1
ls for itr -> ls : 2
for itr ls -> class : 2
itr ls class -> is : 1
itr ls class -> collects : 1
ls class is -> a : 1
is a visitor -> implementation : 1
a visitor implementation -> that : 1
a visitor implementation -> is : 1
a visitor implementation -> for : 1
visitor implementation that -> spits : 1
implementation that spits -> the : 1
that spits the -> file : 1
spits the file -> and : 1
the file and -> folder : 1
file and folder -> information : 1
and folder information -> to : 1
folder information to -> the : 1
information to the -> the : 1
information to the -> associated : 1
the class demonstrates -> how : 1
class demonstrates how -> a : 1
demonstrates how a -> basic : 1
how a basic -> visitor : 1
a basic visitor -> can : 1
basic visitor can -> be : 1
visitor can be -> implemented : 1
be implemented for -> a : 1
implemented for a -> in : 1
for a in -> our : 1
a in our -> the : 1
our the composite -> has : 1
composite has only -> two : 1
has only two -> and : 1
only two and -> it : 1
two and it -> is : 1
easy to write -> the : 1
write the visitor -> in : 1
visitor in certain -> the : 1
in certain the -> number : 1
certain the number -> of : 1
number of node -> types : 1
of node types -> in : 1
node types in -> a : 1
in a hierarchy -> are : 1
a hierarchy are -> and : 1
hierarchy are and -> writing : 1
are and writing -> a : 1
writing a visitor -> implementation : 2
visitor implementation is -> not : 1
is not writing -> filters : 1
not writing filters -> and : 1
writing filters and -> transformations : 1
filters and transformations -> for : 1
and transformations for -> visitors : 1
transformations for visitors -> can : 1
for visitors can -> be : 1
visitors can be -> and : 1
be and the -> logic : 1
and the logic -> is : 1
logic is ad -> write : 1
is ad write -> a : 1
ad write a -> program : 1
program to print -> the : 1
print the contents -> of : 2
of a here -> it : 1
a here it -> string : 1
here it string -> directory : 1
it string directory -> search : 1
string directory search -> files : 1
directory search files -> including : 1
search files including -> subdirectories : 2
files including subdirectories -> directorynode : 2
including subdirectories directorynode -> if : 2
subdirectories directorynode if -> dirs : 2
directorynode if dirs -> printfoldervisitor : 1
directorynode if dirs -> flattenvisitor : 1
if dirs printfoldervisitor -> new : 1
dirs printfoldervisitor new -> printfoldervisitor : 1
printfoldervisitor new printfoldervisitor -> delete : 1
new printfoldervisitor delete -> delete : 1
printfoldervisitor delete delete -> preceding : 1
delete delete preceding -> function : 1
delete preceding function -> recursively : 1
preceding function recursively -> traverses : 1
function recursively traverses -> a : 1
recursively traverses a -> directory : 1
traverses a directory -> and : 1
directory and creates -> a : 1
creates a composite -> we : 1
composite we use -> to : 1
we use to -> print : 1
use to print -> the : 1
the as shown -> char : 2
the as shown -> entrypoint : 1
as shown char -> the : 1
as shown char -> cell : 1
shown char the -> hierarchy : 1
char the hierarchy -> to : 1
navigate through visitor -> implementation : 1
through visitor implementation -> has : 1
visitor implementation has -> to : 1
implementation has to -> have : 1
have some idea -> of : 1
some idea of -> the : 1
in some instances -> of : 1
some instances of -> composite : 1
instances of composite -> there : 1
of composite there -> will : 1
composite there will -> be : 1
will be scores -> of : 1
be scores of -> visitors : 1
scores of visitors -> to : 1
of visitors to -> be : 1
visitors to be -> applying : 1
to be applying -> transformations : 1
be applying transformations -> and : 1
applying transformations and -> filters : 1
filters on nodes -> is : 1
on nodes is -> a : 1
nodes is a -> bit : 1
a bit difficult -> in : 1
bit difficult in -> the : 1
difficult in the -> case : 1
case of visitor -> the : 1
of visitor the -> gof : 1
visitor the gof -> pattern : 1
catalog has an -> iterator : 1
has an iterator -> pattern : 1
an iterator pattern -> that : 1
iterator pattern that -> can : 1
pattern that can -> be : 2
used to navigate -> a : 1
to navigate a -> sequence : 1
navigate a sequence -> of : 1
sequence of the -> problem : 1
of the problem -> how : 1
the problem how -> can : 1
problem how can -> we : 1
how can we -> linearize : 1
can we linearize -> a : 1
we linearize a -> hierarchy : 1
linearize a hierarchy -> for : 1
a hierarchy for -> processing : 1
hierarchy for processing -> using : 1
the iterator most -> hierarchies : 1
iterator most hierarchies -> can : 1
be flattened to -> a : 1
flattened to a -> or : 1
to a or -> stream : 1
to a or -> in : 1
a or stream -> by : 1
or stream by -> writing : 1
stream by writing -> a : 1
visitor implementation for -> that : 1
implementation for that -> let : 1
for that let -> us : 1
that let us -> write : 1
write a flattening -> visitor : 1
a flattening visitor -> for : 1
flattening visitor for -> the : 1
visitor for the -> said : 1
for the said -> a : 1
the said a -> look : 1
said a look -> at : 1
the following flatten -> the : 1
following flatten the -> into : 1
flatten the into -> a : 1
the into a -> linear : 1
linear list class -> flattenvisitor : 1
list class flattenvisitor -> public : 1
flattenvisitor public list -> string : 1
public list string -> currdir : 1
list string currdir -> return : 1
string currdir return -> void : 1
currdir return void -> fn : 1
return void fn -> currdir : 1
void fn currdir -> void : 1
fn currdir void -> dn : 1
currdir void dn -> currdir : 1
void dn currdir -> ls : 1
dn currdir ls -> for : 1
currdir ls for -> itr : 1
ls class collects -> the : 1
class collects the -> files : 1
collects the files -> and : 1
and folders in -> an : 1
folders in an -> stl : 1
in an stl -> for : 1
in an stl -> map : 1
an stl for -> each : 1
stl for each -> we : 1
for each we -> iterate : 1
each we iterate -> through : 1
we iterate through -> the : 1
files and issue -> the : 1
and issue the -> using : 1
issue the using -> the : 1
the using the -> familiar : 1
using the familiar -> double : 1
the familiar double -> let : 1
familiar double let -> us : 1
double let us -> write : 1
function that returns -> a : 1
returns a list -> of : 1
list of for -> us : 1
of for us -> to : 1
for us to -> iterate : 1
us to iterate -> here : 1
to iterate here -> is : 1
iterate here is -> the : 1
is the dirname -> search : 1
the dirname search -> files : 1
dirname search files -> including : 1
if dirs flattenvisitor -> new : 1
dirs flattenvisitor new -> delete : 1
flattenvisitor new delete -> delete : 1
delete return int -> char : 1
return int char -> rs : 1
return int char -> directoryemitter : 1
int char rs -> as : 1
char rs as -> rs : 1
rs as rs -> cout : 1
as rs cout -> class : 1
rs cout class -> traverses : 1
cout class traverses -> the : 1
class traverses the -> hierarchy : 1
traverses the hierarchy -> and : 1
the hierarchy and -> collects : 1
hierarchy and collects -> the : 1
and collects the -> fully : 1
collects the fully -> expanded : 1
the fully expanded -> pathname : 1
fully expanded pathname -> into : 1
expanded pathname into -> an : 1
pathname into an -> stl : 1
an stl list -> once : 1
stl list once -> we : 1
list once we -> have : 1
we have linearized -> the : 1
have linearized the -> hierarchy : 1
linearized the hierarchy -> into : 1
we can iterate -> over : 1
can iterate over -> have : 1
iterate over have -> learned : 1
over have learned -> how : 1
to model a -> hierarchy : 1
model a hierarchy -> as : 1
a hierarchy as -> a : 1
hierarchy as a -> and : 1
a and eventually -> flatten : 1
and eventually flatten -> it : 1
eventually flatten it -> to : 1
flatten it to -> a : 1
it to a -> form : 1
a form that -> is : 1
form that is -> suitable : 1
that is suitable -> for : 1
is suitable for -> navigation : 1
is suitable for -> avoiding : 1
is suitable for -> aggregating : 1
suitable for navigation -> with : 1
for navigation with -> the : 1
navigation with the -> iterator : 1
with the iterator -> in : 1
the iterator in -> the : 1
iterator in the -> next : 1
learn how iterators -> can : 1
how iterators can -> be : 1
iterators can be -> transformed : 1
be transformed into -> we : 1
transformed into we -> will : 1
into we will -> use : 1
will use rxcpp -> to : 1
use rxcpp to -> implement : 1
rxcpp to implement -> the : 1
implement the observables -> by : 1
the observables by -> using : 1
observables by using -> a : 1
forget the pushing -> values : 1
the pushing values -> from : 1
pushing values from -> the : 1
the source to -> the : 1
source to the -> iterators : 1
to the iterators -> to : 1
the iterators to -> iterator : 1
iterators to iterator -> pattern : 1
to iterator pattern -> is : 1
is the standard -> mechanism : 1
the standard mechanism -> to : 1
standard mechanism to -> pull : 1
mechanism to pull -> data : 1
to pull data -> from : 1
to pull data -> res : 1
pull data from -> stl : 1
data from stl -> and : 1
from stl and -> they : 1
stl and they -> are : 1
they are for -> data : 1
are for data -> that : 1
for data that -> has : 1
has been aggregated -> in : 1
been aggregated in -> the : 1
aggregated in the -> this : 1
the this means -> that : 1
that we know -> ahead : 1
we know ahead -> of : 1
know ahead of -> time : 1
ahead of time -> how : 1
of time how -> much : 1
time how much -> data : 1
how much data -> is : 1
how much data -> there : 1
much data is -> supposed : 1
data is supposed -> to : 1
supposed to be -> or : 1
supposed to be -> overridden : 1
supposed to be -> notified : 1
to be or -> that : 1
be or that -> the : 1
or that the -> data : 1
the data has -> already : 1
data has already -> been : 1
already been there -> are : 1
been there are -> scenarios : 1
there are scenarios -> where : 1
are scenarios where -> the : 1
scenarios where the -> data : 1
the data arrives -> asynchronously : 1
data arrives asynchronously -> and : 1
arrives asynchronously and -> the : 1
asynchronously and the -> consumers : 1
and the consumers -> are : 1
consumers are not -> aware : 1
are not aware -> of : 1
not aware of -> how : 1
aware of how -> much : 1
of how much -> data : 1
much data there -> is : 1
data there is -> or : 1
there is or -> when : 1
is or when -> the : 1
or when the -> data : 1
when the data -> in : 1
data in such -> iterators : 1
in such iterators -> need : 1
such iterators need -> to : 1
iterators need to -> or : 1
need to or -> we : 1
to or we -> need : 1
or we need -> to : 1
need to resort -> to : 1
resort to timeout -> strategies : 1
to timeout strategies -> to : 1
timeout strategies to -> handle : 1
strategies to handle -> the : 1
handle the in -> such : 1
the in such -> a : 1
in such a -> a : 1
such a a -> approach : 1
a a approach -> seems : 1
a approach seems -> to : 1
approach seems to -> be : 1
seems to be -> a : 1
be a better -> using : 1
a better using -> the : 1
better using the -> subject : 1
using the subject -> construct : 1
the subject construct -> of : 1
subject construct of -> we : 1
construct of we -> can : 1
use a write -> a : 1
emits the contents -> of : 1
of a as -> shown : 1
a as shown -> a : 1
shown a toy -> implementation : 1
implementation of active -> object : 1
of active object -> template : 1
active object template -> struct : 1
object template struct -> activeobject : 1
template struct activeobject -> void : 1
struct activeobject void -> return : 1
activeobject void return -> the : 1
void return the -> class : 1
return the class -> uses : 1
the class uses -> a : 1
class uses a -> firenforget : 1
uses a firenforget -> mechanism : 1
a firenforget mechanism -> to : 1
firenforget mechanism to -> push : 1
mechanism to push -> data : 1
to push data -> to : 1
push data to -> the : 1
to the sink -> class : 1
the sink class -> directoryemitter : 1
sink class directoryemitter -> string : 1
class directoryemitter string -> active : 1
directoryemitter string active -> object : 1
string active object -> a : 1
active object a -> pattern : 1
object a pattern -> in : 1
a pattern in -> own : 1
pattern in own -> right : 1
in own right -> more : 1
own right more -> on : 1
right more on -> this : 1
on this below -> s : 1
this below s -> rootdir : 1
below s rootdir -> subscribe : 1
s rootdir subscribe -> fileinformation : 1
rootdir subscribe fileinformation -> item : 1
subscribe fileinformation item -> cout : 1
fileinformation item cout -> bool : 1
item cout bool -> return : 1
cout bool return -> result : 1
bool return result -> uncomment : 1
return result uncomment -> the : 1
result uncomment the -> below : 1
uncomment the below -> line : 1
the below line -> to : 1
below line to -> return : 1
line to return -> immediately : 1
to return immediately -> double : 1
return immediately double -> dresult : 1
immediately double dresult -> return : 1
double dresult return -> iterate : 1
dresult return iterate -> over : 1
return iterate over -> the : 1
iterate over the -> list : 1
over the list -> of : 1
of files uses -> activeobject : 1
files uses activeobject -> pattern : 1
uses activeobject pattern -> to : 1
activeobject pattern to -> do : 1
pattern to do -> firenforget : 1
to do firenforget -> bool : 1
do firenforget bool -> rs : 1
firenforget bool rs -> a : 1
bool rs a -> rs : 1
rs a rs -> return : 1
a rs return -> int : 1
rs return int -> char : 1
int char directoryemitter -> return : 1
char directoryemitter return -> class : 1
directoryemitter return class -> uses : 1
return class uses -> modern : 1
class uses modern -> construct : 1
uses modern construct -> to : 1
modern construct to -> make : 1
construct to make -> asynchronous : 1
to make asynchronous -> calls : 1
asynchronous calls in -> a : 1
calls in a -> fire : 1
calls in a -> synchronous : 1
in a fire -> and : 1
and forget in -> the : 1
forget in the -> preceding : 1
preceding we are -> waiting : 1
we are waiting -> for : 1
are waiting for -> the : 1
for the result -> we : 1
the result we -> can : 1
result we can -> uncomment : 1
we can uncomment -> to : 1
can uncomment to -> return : 1
uncomment to return -> cell : 1
to return cell -> have : 1
return cell have -> already : 1
cell have already -> learned : 1
programming is all -> about : 1
is all about -> processing : 1
all about processing -> values : 1
about processing values -> that : 1
processing values that -> vary : 1
values that vary -> over : 1
that vary over -> they : 1
vary over they -> are : 1
over they are -> centered : 1
over they are -> also : 1
they are centered -> on : 1
are centered on -> the : 1
centered on the -> notion : 1
notion of there -> are : 1
of there are -> two : 1
are two which -> are : 1
two which are -> as : 1
which are as -> a : 1
which are as -> which : 1
are as a -> cell : 1
as a cell -> is : 1
a cell is -> an : 1
cell is an -> entity : 1
an entity or -> a : 1
entity or a -> memory : 1
or a memory -> where : 1
a memory where -> values : 1
memory where values -> are : 1
where values are -> regularly : 1
values are regularly -> updated : 1
are regularly updated -> over : 1
regularly updated over -> they : 1
updated over they -> are : 1
also called properties -> or : 1
called properties or -> in : 1
properties or in -> some : 1
or in some -> a : 1
in some a -> stream : 1
some a stream -> represents : 1
a stream represents -> a : 1
stream represents a -> stream : 1
represents a stream -> of : 1
stream of they -> are : 1
of they are -> data : 1
they are data -> that : 1
are data that -> is : 1
that is often -> associated : 1
is often associated -> with : 1
often associated with -> when : 1
associated with when -> people : 1
with when people -> think : 1
when people think -> of : 1
people think of -> they : 1
think of they -> have : 1
they have got -> stream : 1
have got stream -> variant : 1
got stream variant -> of : 1
stream variant of -> will : 1
variant of will -> implement : 1
of will implement -> a : 1
will implement a -> toy : 1
implement a toy -> version : 1
a toy version -> of : 1
toy version of -> a : 1
will only focus -> on : 1
only focus on -> implementing : 1
focus on implementing -> basic : 1
on implementing basic -> the : 1
implementing basic the -> code : 1
basic the code -> needs : 1
the code needs -> tidying : 1
code needs tidying -> up : 1
needs tidying up -> for : 1
tidying up for -> production : 1
up for production -> following : 1
for production following -> implementation : 1
production following implementation -> can : 1
following implementation can -> be : 1
implementation can be -> if : 1
can be if -> we : 1
be if we -> are : 1
we are implementing -> a : 1
are implementing a -> cell : 1
implementing a cell -> controller : 1
a cell controller -> class : 1
cell controller class -> that : 1
cell controller class -> can : 1
controller class that -> each : 1
class that each -> cell : 1
that each cell -> will : 1
that each cell -> has : 1
each cell will -> when : 1
cell will when -> there : 1
will when there -> is : 1
when there is -> change : 1
when there is -> an : 1
there is change -> in : 1
is change in -> the : 1
in the cell -> controller : 1
the cell controller -> class : 1
controller class can -> update : 1
class can update -> the : 1
can update the -> dependencies : 1
update the dependencies -> by : 1
the dependencies by -> evaluating : 1
dependencies by evaluating -> this : 1
by evaluating this -> implementation : 1
evaluating this implementation -> shows : 1
this implementation shows -> how : 1
implementation shows how -> the : 1
shows how the -> cell : 1
how the cell -> pattern : 1
the cell pattern -> is : 1
the cell pattern -> to : 1
cell pattern is -> a : 1
is a viable -> mechanism : 1
a viable mechanism -> for : 1
viable mechanism for -> dependent : 1
mechanism for dependent -> using : 1
for dependent using -> namespace : 1
dependent using namespace -> class : 1
using namespace class -> cell : 1
namespace class cell -> string : 1
class cell string -> return : 1
cell string return -> void : 1
return void v -> double : 1
void v double -> return : 1
v double return -> return : 1
double return return -> name : 1
return return name -> behsubject : 1
return name behsubject -> new : 1
name behsubject new -> bool : 1
behsubject new bool -> a : 1
new bool a -> b : 1
bool a b -> if : 1
a b if -> return : 1
b if return -> int : 1
if return int -> i : 1
return int i -> p : 1
int i p -> parents : 1
i p parents -> i : 1
p parents i -> a : 1
parents i a -> b : 1
i a b -> return : 1
b return we -> will : 1
return we will -> just : 1
we will just -> add : 1
will just add -> two : 1
just add two -> parent : 1
add two parent -> in : 1
two parent in -> real : 1
parent in real -> we : 1
in real we -> need : 1
in real we -> can : 1
real we need -> to : 1
to implement an -> expression : 1
implement an expression -> evaluator : 1
an expression evaluator -> bool : 1
expression evaluator bool -> string : 1
evaluator bool string -> as : 1
bool string as -> bs : 1
string as bs -> if : 1
as bs if -> return : 1
bs if return -> auto : 1
if return auto -> a : 1
auto a auto -> b : 1
a auto b -> return : 1
auto b return -> bool : 1
b return bool -> s : 1
return bool s -> if : 1
return bool s -> not : 1
bool s if -> return : 1
s if return -> a : 1
if return a -> return : 1
return a return -> bool : 1
a return bool -> s : 1
bool s not -> implemented : 1
s not implemented -> cell : 1
not implemented cell -> class : 1
implemented cell class -> makes : 1
cell class makes -> an : 1
class makes an -> assumption : 1
assumption that each -> cell : 1
each cell has -> two : 1
cell has two -> parent : 1
has two parent -> and : 1
two parent and -> whenever : 1
parent and whenever -> there : 1
and whenever there -> is : 1
in the value -> of : 1
be we have -> implemented : 1
have implemented an -> addition : 1
implemented an addition -> operator : 1
an addition operator -> keep : 1
addition operator keep -> listings : 1
operator keep listings -> the : 1
keep listings the -> method : 1
listings the method -> implements : 1
the method implements -> the : 1
method implements the -> as : 1
implements the as -> shown : 1
shown char cell -> cell : 1
char cell cell -> cell : 1
cell cell cell -> cell : 2
cell cell cell -> attach : 1
cell cell attach -> a : 1
cell attach a -> to : 1
attach a to -> c : 1
a to c -> attach : 1
to c attach -> b : 1
c attach b -> to : 1
attach b to -> c : 1
b to c -> c : 1
to c c -> is : 1
c c is -> a : 1
c is a -> b : 1
is a b -> attach : 1
is a b -> should : 1
a b attach -> c : 1
b attach c -> to : 1
attach c to -> e : 1
c to e -> attach : 1
to e attach -> d : 1
e attach d -> to : 1
attach d to -> e : 1
d to e -> e : 1
to e e -> is : 1
e e is -> c : 1
e is c -> d : 1
is c d -> or : 1
c d or -> e : 1
d or e -> is : 1
or e is -> a : 1
e is a -> b : 1
a b should -> print : 1
b should print -> cout : 1
should print cout -> is : 3
print cout is -> should : 3
cout is should -> print : 2
cout is should -> be : 1
is should print -> cout : 2
is should be -> zero : 1
should be zero -> cout : 1
be zero cout -> is : 1
zero cout is -> main : 1
cout is main -> program : 1
is main program -> demonstrates : 1
main program demonstrates -> how : 2
use the cell -> pattern : 1
cell pattern to -> propagate : 1
pattern to propagate -> changes : 1
to propagate changes -> down : 1
propagate changes down -> into : 1
changes down into -> the : 1
down into the -> by : 1
into the by -> changing : 1
the by changing -> we : 1
by changing we -> force : 1
changing we force -> the : 1
we force the -> recomputation : 1
force the recomputation -> of : 1
the recomputation of -> values : 1
recomputation of values -> in : 1
in the dependent -> active : 1
the dependent active -> object : 1
dependent active object -> active : 1
active object active -> object : 1
object active object -> is : 1
active object is -> a : 1
object is a -> class : 1
is a class -> that : 1
class that decouples -> method : 1
that decouples method -> invocations : 1
decouples method invocations -> and : 1
method invocations and -> method : 1
invocations and method -> and : 1
and method and -> is : 1
method and is -> well : 1
and is well -> suited : 1
suited for fire -> and : 1
for fire and -> forget : 1
and forget asynchronous -> a : 1
forget asynchronous a -> scheduler : 1
asynchronous a scheduler -> attached : 1
a scheduler attached -> to : 1
scheduler attached to -> the : 1
the class handles -> the : 1
class handles the -> execution : 1
handles the execution -> the : 1
execution the pattern -> consists : 1
the pattern consists -> of : 1
pattern consists of -> six : 1
consists of six -> which : 1
of six which -> are : 1
six which are -> as : 1
are as which -> provides : 1
as which provides -> an : 1
which provides an -> interface : 1
provides an interface -> for : 1
an interface for -> clients : 1
interface for clients -> with : 1
for clients with -> publicly : 1
clients with publicly -> accessible : 1
with publicly accessible -> interface : 1
publicly accessible interface -> that : 1
accessible interface that -> defines : 1
interface that defines -> the : 1
that defines the -> method : 1
defines the method -> request : 1
the method request -> on : 1
method request on -> an : 1
request on an -> active : 1
on an active -> list : 1
an active list -> of : 1
active list of -> pending : 1
list of pending -> requests : 1
of pending requests -> from : 1
pending requests from -> which : 1
requests from which -> decides : 1
from which decides -> what : 1
which decides what -> request : 1
decides what request -> to : 1
what request to -> execute : 1
request to execute -> implementation : 1
to execute implementation -> of : 1
execute implementation of -> the : 1
of the active -> object : 2
the active object -> callback : 1
the active object -> this : 1
active object callback -> or : 1
object callback or -> for : 1
callback or for -> the : 1
for the client -> to : 1
the client to -> receive : 1
the client to -> indicate : 1
client to receive -> the : 1
to receive the -> will : 1
receive the will -> dissect : 1
the will dissect -> an : 1
will dissect an -> implementation : 1
dissect an implementation -> of : 1
active object this -> program : 1
object this program -> is : 1
program is written -> for : 1
is written for -> for : 1
written for for -> production : 1
for for production -> we : 1
for production we -> need : 1
production we need -> to : 1
use a bit -> more : 1
bit more attempting -> a : 1
more attempting a -> production : 1
attempting a production -> quality : 1
a production quality -> implementation : 1
production quality implementation -> would : 1
quality implementation would -> make : 1
implementation would make -> the : 1
would make the -> code : 1
the code considerably -> take : 1
code considerably take -> a : 1
considerably take a -> look : 1
at the using -> namespace : 1
using namespace active -> object : 1
namespace active object -> pattern : 1
active object pattern -> implementation : 1
object pattern implementation -> template : 1
pattern implementation template -> class : 1
implementation template class -> activeobject : 1
template class activeobject -> dispatcher : 1
class activeobject dispatcher -> object : 1
activeobject dispatcher object -> s : 1
dispatcher object s -> virtual : 1
object s virtual -> void : 1
s virtual void -> void : 1
virtual void void -> return : 1
void void return -> virtual : 1
void return virtual -> preceding : 1
return virtual preceding -> implementation : 1
virtual preceding implementation -> declares : 1
preceding implementation declares -> an : 1
implementation declares an -> instance : 1
declares an instance -> of : 1
instance of to -> act : 1
of to act -> as : 1
to act as -> a : 1
as a notification -> the : 1
a notification the -> method : 1
notification the method -> places : 1
the method places -> the : 1
method places the -> value : 1
places the value -> into : 1
value into the -> subject : 1
the subject by -> invoking : 1
subject by invoking -> the : 1
invoking the the -> method : 1
the method immediately -> and : 1
method immediately and -> the : 1
immediately and the -> subscription : 1
the subscription method -> will : 1
subscription method will -> retrieve : 1
method will retrieve -> the : 1
will retrieve the -> value : 1
value and call -> the : 1
call the the -> class : 1
class is supposed -> to : 1
to be overridden -> by : 1
be overridden by -> a : 1
overridden by a -> concrete : 1
by a concrete -> take : 1
a concrete take -> a : 1
concrete take a -> look : 1
at the concreteobject -> public : 1
the concreteobject public -> virtual : 1
concreteobject public virtual -> void : 1
public virtual void -> a : 1
virtual void a -> cout : 1
void a cout -> a : 1
cout a int -> char : 1
int char concreteobject -> int : 1
char concreteobject int -> return : 1
concreteobject int return -> previous : 1
code snippet calls -> the : 1
snippet calls the -> with : 1
calls the with -> a : 1
the with a -> double : 1
with a double -> on : 1
a double on -> the : 1
double on the -> we : 1
the value being -> the : 1
value being the -> overridden : 1
being the overridden -> method : 1
the overridden method -> is : 1
overridden method is -> automatically : 1
method is automatically -> loan : 1
is automatically loan -> loan : 1
automatically loan loan -> as : 1
loan loan as -> the : 1
loan as the -> name : 1
the name loans -> a : 1
name loans a -> resource : 1
loans a resource -> to : 1
a resource to -> your : 1
resource to your -> it : 1
to your it -> performs : 1
your it performs -> the : 1
it performs the -> following : 1
performs the following -> creates : 1
the following creates -> a : 1
following creates a -> resource : 1
creates a resource -> that : 1
a resource that -> you : 1
resource that you -> can : 1
you can loans -> the : 1
can loans the -> resource : 1
loans the resource -> to : 1
the resource to -> the : 2
resource to the -> function : 1
resource to the -> the : 1
function that will -> use : 1
that will use -> function : 1
will use function -> is : 1
use function is -> passed : 1
is passed by -> the : 1
is passed by -> we : 1
passed by the -> resource : 1
by the resource -> is : 1
the resource is -> following : 1
resource is following -> code : 1
is following code -> implements : 1
following code implements -> the : 1
following code implements -> an : 1
code implements the -> resource : 1
implements the resource -> loan : 1
the resource loan -> pattern : 1
resource loan pattern -> for : 1
resource loan pattern -> is : 1
loan pattern for -> resource : 1
pattern for resource -> the : 1
for resource the -> pattern : 1
resource the pattern -> helps : 1
the pattern helps -> to : 1
pattern helps to -> avoid : 1
helps to avoid -> resource : 1
to avoid resource -> leakage : 1
avoid resource leakage -> when : 1
resource leakage when -> writing : 1
leakage when writing -> using : 1
when writing using -> namespace : 1
writing using namespace -> implementation : 1
using namespace implementation -> of : 1
namespace implementation of -> resource : 1
implementation of resource -> loan : 1
of resource loan -> the : 1
resource loan the -> implementation : 1
loan the implementation -> opens : 1
the implementation opens -> a : 1
implementation opens a -> file : 1
opens a file -> and : 1
a file and -> does : 1
file and does -> not : 1
and does not -> pass : 1
does not pass -> the : 1
not pass the -> file : 1
pass the file -> handle : 1
the file handle -> to : 1
the file handle -> is : 1
file handle to -> user : 1
handle to user -> defined : 1
to user defined -> the : 1
user defined the -> ownership : 1
defined the ownership -> remains : 1
the ownership remains -> with : 1
ownership remains with -> the : 1
remains with the -> class : 1
class class resourceloan -> file : 1
class resourceloan file -> string : 1
resourceloan file string -> filename : 1
file string filename -> file : 1
string filename file -> read : 1
filename file read -> upto : 1
file read upto -> bytes : 1
read upto bytes -> to : 1
upto bytes to -> a : 1
bytes to a -> buffer : 1
to a buffer -> return : 1
a buffer return -> the : 1
buffer return the -> buffer : 1
return the buffer -> contents : 1
the buffer contents -> and : 1
buffer contents and -> number : 1
contents and number -> of : 1
and number of -> bytes : 1
number of bytes -> int : 1
of bytes int -> val : 1
bytes int val -> func : 1
int val func -> if : 1
val func if -> nullptr : 1
func if nullptr -> return : 1
if nullptr return -> char : 1
nullptr return char -> int : 1
return char int -> result : 1
char int result -> fread : 1
int result fread -> return : 1
result fread return -> close : 1
fread return close -> the : 1
return close the -> resource : 1
close the resource -> a : 1
the resource a -> sample : 1
resource a sample -> program : 1
sample program to -> invoke : 1
program to invoke -> the : 1
invoke the preceding -> class : 1
preceding class int -> char : 1
class int char -> resourceloan : 1
int char resourceloan -> int : 1
char resourceloan int -> nread : 1
resourceloan int nread -> the : 1
int nread the -> conents : 1
nread the conents -> of : 1
the conents of -> the : 1
conents of the -> buffer : 1
of the buffer -> and : 1
the buffer and -> size : 1
buffer and size -> of : 1
and size of -> buffer : 1
size of buffer -> is : 1
of buffer is -> stored : 1
buffer is stored -> in : 1
stored in val -> auto : 1
in val auto -> rlambda : 1
val auto rlambda -> int : 1
auto rlambda int -> val : 1
rlambda int val -> cout : 1
int val cout -> val : 1
cout val return -> the : 1
val return the -> file : 1
return the file -> handle : 1
file handle is -> not : 1
file handle is -> closed : 1
handle is not -> available : 1
is not available -> to : 1
not available to -> the : 1
to the user -> defined : 1
the user defined -> lambda : 1
user defined lambda -> while : 1
defined lambda while -> when : 1
lambda while when -> the : 1
while when the -> resourceloan : 1
when the resourceloan -> object : 1
the resourceloan object -> goes : 1
resourceloan object goes -> out : 1
object goes out -> of : 1
goes out of -> scope : 1
out of scope -> file : 1
of scope file -> handle : 1
scope file handle -> is : 1
handle is closed -> return : 1
is closed return -> resource : 1
closed return resource -> loan : 1
return resource loan -> pattern : 1
loan pattern is -> suitable : 1
pattern is suitable -> for : 1
suitable for avoiding -> resource : 1
for avoiding resource -> the : 1
avoiding resource the -> holder : 1
resource the holder -> of : 1
the holder of -> the : 1
holder of the -> resource : 1
of the resource -> never : 1
the resource never -> hands : 1
resource never hands -> the : 1
never hands the -> handle : 1
hands the handle -> or : 1
the handle or -> pointer : 1
handle or pointer -> over : 1
or pointer over -> to : 1
pointer over to -> the : 1
over to the -> resource : 1
to the resource -> to : 1
the the main -> program : 1
the main program -> demonstrates : 1
we can consume -> the : 1
can consume the -> event : 1
consume the event -> bus : 1
the event bus -> event : 1
event bus event -> bus : 1
bus event bus -> acts : 1
event bus acts -> as : 1
bus acts as -> a : 1
as a mediator -> between : 1
a mediator between -> event : 1
mediator between event -> sources : 1
between event sources -> and : 1
event sources and -> event : 1
sources and event -> an : 1
and event an -> event : 1
event an event -> or : 1
an event or -> emits : 1
event or emits -> the : 1
or emits the -> events : 1
emits the events -> to : 1
events to a -> and : 1
to a and -> classes : 1
a and classes -> that : 1
and classes that -> have : 1
classes that have -> subscribed : 1
that have subscribed -> to : 1
have subscribed to -> events : 1
subscribed to events -> will : 1
to events will -> get : 1
events will get -> the : 1
get the pattern -> could : 1
the pattern could -> be : 1
pattern could be -> an : 1
could be an -> instance : 1
of the mediator -> in : 1
the mediator in -> an : 1
mediator in an -> event : 1
in an event -> bus : 1
an event bus -> we : 1
event bus we -> have : 1
bus we have -> the : 1
we have the -> classes : 1
we have the -> we : 1
have the classes -> that : 1
the classes that -> produce : 1
classes that produce -> classes : 1
that produce classes -> that : 1
produce classes that -> consume : 1
classes that consume -> classes : 1
that consume classes -> that : 1
consume classes that -> act : 1
classes that act -> as : 1
that act as -> producers : 1
act as producers -> and : 1
as producers and -> the : 1
producers and the -> implementation : 1
and the implementation -> that : 1
the implementation that -> we : 1
implementation that we -> have : 1
implements an event -> using : 1
an event using -> namespace : 1
event using namespace -> event : 1
using namespace event -> information : 1
namespace event information -> struct : 1
event information struct -> int : 1
information struct int -> int : 1
struct int int -> string : 1
int int string -> id : 1
int string id -> description : 1
string id description -> pdescription : 1
id description pdescription -> id : 1
description pdescription id -> description : 1
pdescription id description -> void : 1
id description void -> cout : 1
description void cout -> error : 1
void cout error -> id : 1
cout error id -> cout : 1
error id cout -> description : 1
id cout description -> struct : 1
cout description struct -> models : 1
description struct models -> an : 1
struct models an -> and : 1
models an and -> it : 1
has the following -> event : 1
has the following -> features : 1
the following event -> error : 1
following event error -> description : 1
event error description -> of : 1
error description of -> the : 1
description of the -> rest : 1
of the rest -> of : 1
of the rest -> a : 1
code is fairly -> here : 1
is fairly here -> it : 1
fairly here it -> the : 1
here it the -> following : 1
it the following -> method : 1
the following method -> will : 1
following method will -> be : 1
invoked by consumers -> template : 1
by consumers template -> void : 1
consumers template void -> t : 1
template void t -> ev : 1
void t ev -> forward : 1
t ev forward -> declarations : 1
ev forward declarations -> template : 1
forward declarations template -> class : 1
declarations template class -> event : 1
template class event -> producer : 1
class event producer -> just : 1
event producer just -> inserts : 1
producer just inserts -> event : 1
just inserts event -> to : 1
inserts event to -> a : 1
event to a -> bus : 1
to a bus -> template : 1
a bus template -> class : 1
bus template class -> producer : 1
template class producer -> string : 1
class producer string -> pname : 1
producer string pname -> name : 1
string pname name -> bool : 1
pname name bool -> return : 1
name bool return -> of : 1
bool return of -> the : 1
return of the -> producer : 1
of the producer -> class : 1
the producer class -> is : 1
producer class is -> fairly : 1
class is fairly -> the : 1
is fairly the -> skeleton : 1
fairly the skeleton -> implementation : 1
the skeleton implementation -> is : 1
skeleton implementation is -> rather : 1
implementation is rather -> the : 1
is rather the -> method : 1
rather the method -> takes : 1
the method takes -> a : 1
method takes a -> compatible : 1
takes a compatible -> as : 1
a compatible as -> a : 1
compatible as a -> parameter : 1
parameter and calls -> the : 1
the a production -> implementation : 1
production implementation requires -> some : 1
implementation requires some -> bells : 1
requires some bells -> and : 1
some bells and -> take : 1
bells and take -> a : 1
and take a -> look : 1
the event consumer -> subscribes : 1
event consumer subscribes -> to : 1
consumer subscribes to -> a : 1
subscribes to a -> subject : 1
to a subject -> to : 1
subject to retrieve -> events : 1
to retrieve events -> template : 1
retrieve events template -> class : 1
events template class -> consumer : 1
template class consumer -> string : 1
class consumer string -> the : 1
consumer string the -> subscription : 1
string the subscription -> member : 1
the subscription member -> helps : 1
subscription member helps -> us : 1
member helps us -> to : 1
us to unsubscribe -> to : 1
to unsubscribe to -> an : 1
unsubscribe to an -> observable : 1
an observable name -> connect : 1
observable name connect -> a : 1
name connect a -> consumer : 1
connect a consumer -> to : 1
a consumer to -> a : 1
a consumer to -> the : 1
consumer to a -> event : 1
to a event -> bus : 1
a event bus -> bool : 1
event bus bool -> if : 1
bus bool if -> already : 1
bool if already -> if : 1
if already if -> create : 1
already if create -> a : 1
if create a -> new : 1
a new subscription -> we : 1
new subscription we -> will : 1
subscription we will -> call : 1
will call dosomethingwithevent -> method : 1
call dosomethingwithevent method -> from : 1
dosomethingwithevent method from -> lambda : 1
method from lambda -> function : 1
from lambda function -> subscription : 1
lambda function subscription -> auto : 1
function subscription auto -> subscriber : 1
auto subscriber return -> dtor : 1
subscriber return dtor -> bool : 1
return dtor bool -> if : 1
dtor bool if -> functionality : 1
bool if functionality -> is : 1
if functionality is -> pretty : 1
functionality is pretty -> the : 1
is pretty the -> method : 1
pretty the method -> does : 1
the method does -> the : 1
method does the -> work : 1
does the work -> of : 1
the work of -> subscribing : 1
work of subscribing -> to : 1
of subscribing to -> the : 1
subscribing to the -> observable : 2
the observable side -> of : 2
observable side of -> the : 2
of the subject -> in : 1
of the subject -> new : 1
the subject in -> the : 1
subject in the -> each : 1
in the each -> time : 1
the each time -> a : 1
each time a -> new : 1
time a new -> connection : 1
a new connection -> request : 1
new connection request -> comes : 1
connection request comes -> the : 1
request comes the -> existing : 1
comes the existing -> subscription : 1
the existing subscription -> is : 1
existing subscription is -> as : 1
subscription is as -> shown : 1
is as shown -> the : 1
as shown the -> implementation : 1
shown the implementation -> of : 1
of the eventbus -> class : 1
of the eventbus -> create : 1
the eventbus class -> we : 1
eventbus class we -> have : 1
class we have -> not : 1
have not taken -> care : 1
not taken care -> of : 1
taken care of -> concurrency : 1
care of concurrency -> issues : 1
of concurrency issues -> as : 1
concurrency issues as -> our : 1
issues as our -> purpose : 1
as our purpose -> is : 1
demonstrate the pattern -> template : 1
the pattern template -> class : 1
pattern template class -> eventbus : 1
template class eventbus -> reference : 1
class eventbus reference -> to : 1
eventbus reference to -> the : 1
to the consumers -> get : 1
the consumers get -> notification : 1
consumers get notification -> by : 1
get notification by -> subscribing : 1
notification by subscribing -> to : 1
by subscribing to -> the : 1
the subject new -> add : 1
subject new add -> a : 1
new add a -> consumer : 1
add a consumer -> to : 1
consumer to the -> bool : 1
to the bool -> b : 1
the bool b -> fire : 1
bool b fire -> the : 1
b fire the -> bool : 1
fire the bool -> fireevent : 1
the bool fireevent -> event : 1
bool fireevent event -> return : 1
fireevent event return -> string : 1
event return string -> return : 1
return string return -> return : 1
string return return -> acts : 1
return return acts -> as : 1
return acts as -> a : 1
as a conduit -> between : 1
a conduit between -> the : 1
conduit between the -> producers : 1
between the producers -> and : 1
the producers and -> we : 1
producers and we -> are : 1
are using a -> under : 1
using a under -> the : 1
a under the -> to : 1
under the to -> notify : 1
the to notify -> the : 1
notify the as -> shown : 1
as shown entrypoint -> int : 1
shown entrypoint int -> char : 1
entrypoint int char -> create : 1
the eventbus create -> a : 1
eventbus create a -> producer : 1
create a producer -> and : 1
a producer and -> two : 1
producer and two -> consumers : 1
and two consumers -> add : 1
two consumers add -> consumers : 1
consumers add consumers -> to : 1
add consumers to -> the : 1
consumers to the -> eventbus : 1
to the eventbus -> fire : 1
the eventbus fire -> an : 1
eventbus fire an -> fire : 1
fire an fire -> another : 1
an fire another -> by : 1
fire another by -> creating : 1
another by creating -> a : 1
by creating a -> second : 1
creating a second -> producer : 1
a second producer -> the : 1
second producer the -> main : 1
producer the main -> we : 1
we are performing -> the : 1
are performing the -> following : 1
performing the following -> an : 1
the following an -> instance : 1
following an instance -> of : 1
the an instance -> of : 1
of an instance -> of : 1
events to the -> have : 1
to the have -> only : 1
the have only -> covered : 1
have only covered -> a : 1
only covered a -> subset : 1
covered a subset -> of : 1
a subset of -> the : 1
of the design -> patterns : 1
the design patterns -> that : 1
design patterns that -> are : 1
patterns that are -> suitable : 1
that are suitable -> for : 1
suitable for writing -> reactive : 1
writing reactive our -> focus : 1
reactive our focus -> has : 1
our focus has -> been : 1
focus has been -> on : 1
has been on -> bridging : 1
been on bridging -> the : 1
on bridging the -> gof : 1
bridging the gof -> design : 1
the gof design -> patterns : 1
design patterns with -> the : 1
patterns with the -> reactive : 1
programming in believe -> that : 1
in believe that -> the : 1
believe that the -> reactive : 1
model is an -> enhanced : 1
is an enhanced -> implementation : 1
an enhanced implementation -> of : 1
enhanced implementation of -> classic : 1
implementation of classic -> gof : 1
of classic gof -> design : 1
classic gof design -> the : 1
gof design the -> enhancement : 1
design the enhancement -> is : 1
the enhancement is -> possible : 1
enhancement is possible -> due : 1
is possible due -> to : 1
possible due to -> the : 1
to the functional -> programming : 1
programming constructs added -> to : 1
constructs added to -> modern : 1
added to modern -> programming : 1
to modern programming -> in : 1
modern programming in -> programming : 1
programming in programming -> is : 1
in programming is -> a : 1
a good approach -> for : 1
good approach for -> writing : 1
approach for writing -> modern : 1
for writing modern -> this : 1
writing modern this -> chapter : 1
modern this chapter -> was : 1
this chapter was -> largely : 1
chapter was largely -> based : 1
was largely based -> on : 1
largely based on -> that : 1
based on that -> very : 1
on that very -> this : 1
that very this -> we : 1
very this we -> delved : 1
this we delved -> into : 1
we delved into -> the : 1
delved into the -> wonderful : 1
design we moved -> on : 1
we moved on -> to : 1
programming we covered -> patterns : 1
we covered patterns -> such : 1
covered patterns such -> as : 1
patterns such as -> active : 1
such as active -> resource : 1
as active resource -> and : 1
active resource and -> event : 1
resource and event -> bridging : 1
and event bridging -> from : 1
event bridging from -> gof : 1
bridging from gof -> patterns : 1
programming helps you -> to : 1
helps you to -> look : 1
you to look -> at : 1
look at reactive -> programming : 1
at reactive programming -> in : 1
in a broader -> the : 1
a broader the -> next : 1
broader the next -> we : 1
learn about microservice -> development : 1
about microservice development -> using : 1
microservice development using -> microservices : 1
development using microservices -> using : 1
using microservices using -> we : 1
microservices using we -> have : 1
the essential aspects -> of : 1
essential aspects of -> reactive : 1
programming using some -> of : 1
using some of -> the : 1
the key topics -> covered : 1
key topics covered -> reactive : 1
topics covered reactive -> programming : 1
covered reactive programming -> model : 1
and its cognitive -> rxcpp : 1
its cognitive rxcpp -> library : 1
cognitive rxcpp library -> and : 1
its programming gui -> programming : 1
programming gui programming -> using : 1
programming using patterns -> and : 1
using patterns and -> the : 1
programming you take -> a : 1
a closer all -> the : 1
closer all the -> examples : 1
all the examples -> so : 1
the examples so -> far : 2
examples so far -> in : 1
examples so far -> have : 1
this book are -> related : 1
book are related -> to : 1
related to what -> happens : 1
to what happens -> inside : 1
what happens inside -> a : 1
happens inside a -> we : 1
inside a we -> were : 1
a we were -> essentially : 1
we were essentially -> focusing : 1
were essentially focusing -> on : 1
essentially focusing on -> shared : 1
focusing on shared -> memory : 1
on shared memory -> parallel : 1
shared memory parallel -> and : 1
memory parallel and -> concurrent : 1
parallel and concurrent -> the : 1
concurrent the rxjava -> is : 1
the rxjava is -> mostly : 1
rxjava is mostly -> concerned : 1
concerned with shared -> memory : 1
with shared memory -> concurrent : 1
shared memory concurrent -> and : 1
memory concurrent and -> parallel : 1
concurrent and parallel -> a : 1
and parallel a -> system : 1
parallel a system -> such : 1
a system such -> as : 1
system such as -> akka : 1
such as akka -> applies : 1
as akka applies -> the : 1
akka applies the -> reactive : 1
applies the reactive -> programming : 1
model to the -> distributed : 1
to the distributed -> in : 1
the distributed in -> we : 1
distributed in we -> can : 1
can write reactive -> logic : 1
write reactive logic -> that : 1
reactive logic that -> spans : 1
logic that spans -> the : 1
that spans the -> the : 1
spans the the -> reactive : 1
the the reactive -> programming : 1
model is also -> good : 1
is also good -> for : 1
also good for -> exposing : 1
good for exposing -> web : 1
for exposing web -> services : 1
exposing web services -> and : 1
web services and -> consuming : 1
services and consuming -> the : 1
and consuming the -> rxjs : 1
consuming the rxjs -> library : 1
the rxjs library -> is : 1
rxjs library is -> mostly : 1
library is mostly -> used : 1
is mostly used -> for : 1
mostly used for -> consuming : 1
used for consuming -> services : 1
for consuming services -> from : 1
consuming services from -> a : 1
services from a -> browser : 1
from a browser -> the : 1
a browser the -> rxcpp : 1
browser the rxcpp -> library : 1
used for writing -> web : 1
for writing web -> clients : 1
writing web clients -> for : 1
web clients for -> aggregating : 1
clients for aggregating -> the : 1
for aggregating the -> contents : 1
aggregating the contents -> from : 1
the contents from -> various : 1
contents from various -> service : 1
from various service -> we : 1
various service we -> can : 1
service we can -> leverage : 1
we can leverage -> rxcpp : 1
we can leverage -> the : 1
can leverage rxcpp -> from : 1
leverage rxcpp from -> a : 1
rxcpp from a -> consoler : 1
from a consoler -> and : 1
a consoler and -> gui : 1
consoler and gui -> another : 1
and gui another -> use : 1
gui another use -> case : 1
another use case -> is : 1
case is aggregating -> data : 1
is aggregating data -> from : 1
aggregating data from -> multiple : 1
data from multiple -> services : 1
from multiple services -> and : 1
multiple services and -> delivering : 1
services and delivering -> it : 1
and delivering it -> to : 1
delivering it to -> web : 1
it to web -> this : 1
to web this -> we : 1
web this we -> will : 1
write a basic -> web : 1
write a basic -> http : 1
a basic web -> using : 1
basic web using -> that : 1
web using that -> will : 1
using that will -> leverage : 1
that will leverage -> the : 1
will leverage the -> rest : 1
leverage the rest -> sdk : 1
the rest sdk -> to : 1
the rest sdk -> supports : 1
the rest sdk -> follows : 2
the rest sdk -> documentation : 1
the rest sdk -> http : 1
the rest sdk -> has : 1
rest sdk to -> write : 1
sdk to write -> the : 1
write the server -> part : 1
the server part -> and : 1
server part and -> use : 1
part and use -> its : 1
and use its -> client : 1
use its client -> library : 1
its client library -> to : 1
client library to -> consume : 1
library to consume -> those : 1
to consume those -> in : 1
consume those in -> the : 1
those in the -> we : 1
we will explain -> what : 1
will explain what -> microservices : 1
explain what microservices -> are : 1
what microservices are -> and : 1
microservices are and -> how : 1
are and how -> to : 1
how to consume -> we : 1
to consume we -> will : 1
consume we will -> also : 1
will also explain -> how : 1
also explain how -> rxcpp : 1
explain how rxcpp -> can : 1
used to access -> rest : 1
to access rest -> endpoints : 1
access rest endpoints -> and : 1
rest endpoints and -> html : 1
endpoints and html -> pages : 1
and html pages -> by : 1
html pages by -> writing : 1
pages by writing -> a : 1
writing a wrapper -> on : 1
a wrapper on -> top : 3
wrapper on top -> of : 4
top of the -> we : 2
top of the -> class : 1
top of the -> libcurl : 1
we are planning -> to : 1
are planning to -> leverage : 1
planning to leverage -> kirk : 1
to leverage kirk -> rxcurl : 1
leverage kirk rxcurl -> library : 1
kirk rxcurl library -> as : 1
rxcurl library as -> part : 1
library as part -> of : 1
of his twitter -> analysis : 2
his twitter analysis -> to : 1
his twitter analysis -> we : 1
twitter analysis to -> demonstrate : 1
analysis to demonstrate -> this : 1
to demonstrate this -> language : 1
demonstrate this language -> and : 1
this language and -> web : 1
and web most -> applications : 1
web most applications -> are : 1
most applications are -> developed : 1
applications are developed -> using : 1
are developed using -> and : 1
developed using and -> other : 1
using and other -> for : 1
and other for -> these : 1
other for these -> people : 1
for these people -> place : 1
these people place -> reverse : 1
people place reverse -> such : 1
place reverse such -> as : 1
reverse such as -> apache : 1
such as apache -> web : 1
as apache web -> or : 1
apache web or -> iis : 1
web or iis -> to : 1
or iis to -> manage : 1
iis to manage -> the : 1
manage the traffic -> to : 1
the traffic to -> the : 1
traffic to the -> apps : 1
to the apps -> written : 1
the apps written -> in : 1
apps written in -> all : 1
written in all -> of : 1
of these reverse -> proxies : 1
these reverse proxies -> are : 1
reverse proxies are -> written : 1
proxies are written -> in : 1
are written in -> most : 1
written in most -> of : 1
of the web -> browsers : 1
the web browsers -> and : 1
web browsers and -> http : 1
browsers and http -> client : 1
and http client -> such : 1
http client such -> as : 1
client such as -> and : 1
as and are -> written : 1
and are written -> using : 1
and are written -> with : 1
are written using -> reason : 1
written using reason -> why : 1
using reason why -> and : 1
reason why and -> other : 1
why and other -> dynamic : 1
and other dynamic -> languages : 1
other dynamic languages -> as : 1
dynamic languages as -> and : 1
languages as and -> became : 1
as and became -> popular : 1
and became popular -> is : 1
became popular is -> that : 1
popular is that -> these : 1
is that these -> languages : 1
that these languages -> support : 1
these languages support -> reflective : 1
languages support reflective -> capabilities : 1
support reflective capabilities -> the : 1
reflective capabilities the -> case : 1
capabilities the case -> of : 1
case of static -> such : 1
of static such -> as : 1
static such as -> and : 1
as and duck -> typing : 1
and duck typing -> by : 1
duck typing by -> dynamic : 1
typing by dynamic -> these : 1
by dynamic these -> features : 1
dynamic these features -> help : 1
these features help -> the : 1
features help the -> web : 1
help the web -> application : 1
the web application -> servers : 1
web application servers -> to : 1
application servers to -> load : 1
servers to load -> handlers : 1
to load handlers -> read : 1
load handlers read -> about : 1
handlers read about -> them : 1
read about them -> by : 1
about them by -> searching : 1
them by searching -> for : 1
by searching for -> keywords : 1
searching for keywords -> such : 1
for keywords such -> as : 1
keywords such as -> and : 1
as and rest -> programming : 1
and rest programming -> which : 1
rest programming which -> stands : 1
programming which stands -> for : 1
which stands for -> representational : 1
stands for representational -> state : 1
for representational state -> is : 1
representational state is -> an : 1
state is an -> architectural : 1
is an architectural -> style : 1
an architectural style -> spearheaded : 1
architectural style spearheaded -> by : 1
style spearheaded by -> roy : 1
spearheaded by roy -> fielding : 1
by roy fielding -> as : 1
roy fielding as -> part : 1
fielding as part -> of : 1
of his phd -> it : 1
his phd it -> is : 1
phd it is -> one : 1
it is one -> of : 2
most popular techniques -> for : 1
popular techniques for -> exposing : 1
techniques for exposing -> and : 1
for exposing and -> consuming : 1
exposing and consuming -> web : 1
and consuming web -> rest : 1
consuming web rest -> follows : 1
web rest follows -> a : 1
rest follows a -> approach : 1
follows a approach -> and : 1
a approach and -> nicely : 1
approach and nicely -> maps : 1
and nicely maps -> to : 1
nicely maps to -> the : 1
maps to the -> crud : 1
to the crud -> which : 1
the crud which -> is : 1
crud which is -> popular : 1
which is popular -> among : 1
is popular among -> programmers : 1
popular among programmers -> who : 1
among programmers who -> are : 1
programmers who are -> versed : 1
who are versed -> in : 1
are versed in -> writing : 1
versed in writing -> enterprise : 1
in writing enterprise -> business : 1
writing enterprise business -> we : 1
enterprise business we -> use : 1
business we use -> object : 1
we use object -> known : 1
use object known -> as : 1
object known as -> payload : 1
known as payload -> while : 1
as payload while -> writing : 1
payload while writing -> rest : 1
while writing rest -> instead : 1
writing rest instead -> of : 1
rest instead of -> the : 1
of the xml -> format : 1
the xml format -> is : 1
xml format is -> in : 1
format is in -> vogue : 1
is in vogue -> for : 1
in vogue for -> soap : 1
vogue for soap -> the : 1
for soap the -> rest : 1
soap the rest -> programming : 1
the rest programming -> model : 1
rest programming model -> relies : 1
programming model relies -> on : 1
model relies on -> http : 1
relies on http -> verbs : 1
on http verbs -> to : 1
http verbs to -> indicate : 1
http verbs to -> instance : 1
http verbs to -> the : 1
verbs to indicate -> the : 1
indicate the kind -> of : 1
the kind of -> operations : 1
the kind of -> action : 1
kind of operations -> to : 1
of operations to -> be : 1
operations to be -> executed : 1
to be executed -> while : 1
be executed while -> receiving : 1
executed while receiving -> a : 1
while receiving a -> rest : 1
receiving a rest -> api : 1
a rest api -> the : 1
rest api the -> most : 1
api the most -> popular : 1
most popular methods -> supported : 1
popular methods supported -> creates : 1
methods supported creates -> a : 1
supported creates a -> new : 1
a new retrieves -> a : 1
new retrieves a -> updates : 1
retrieves a updates -> an : 1
a updates an -> existing : 1
updates an existing -> resource : 1
an existing resource -> a : 1
existing resource a -> new : 1
resource a new -> behaves : 1
a new behaves -> like : 1
new behaves like -> deletes : 1
behaves like deletes -> a : 1
like deletes a -> rest : 1
deletes a rest -> rest : 1
a rest rest -> sdk : 1
rest rest sdk -> is : 1
rest rest sdk -> programming : 1
rest sdk is -> a : 1
sdk is a -> microsoft : 1
is a microsoft -> project : 1
a microsoft project -> for : 1
microsoft project for -> communication : 1
project for communication -> in : 1
for communication in -> native : 1
communication in native -> code : 1
in native code -> using : 1
native code using -> a : 1
code using a -> modern : 1
using a modern -> asynchronous : 1
a modern asynchronous -> api : 1
modern asynchronous api -> this : 1
asynchronous api this -> project : 1
api this project -> aims : 1
this project aims -> to : 1
project aims to -> help : 1
aims to help -> developers : 1
help developers connect -> to : 1
developers connect to -> and : 1
connect to and -> interact : 1
to and interact -> with : 1
and interact with -> the : 1
interact with the -> sdk : 1
with the sdk -> has : 1
the sdk has -> the : 1
sdk has the -> following : 1
the following features -> that : 1
following features that -> help : 1
features that help -> you : 1
that help you -> to : 1
write robust rest -> sdk : 1
robust rest sdk -> relies : 1
rest sdk relies -> on : 1
sdk relies on -> the : 1
on the parallel -> patterns : 1
the parallel patterns -> task : 1
parallel patterns task -> the : 1
patterns task the -> ppl : 1
task the ppl -> tasks : 1
the ppl tasks -> is : 1
ppl tasks is -> a : 1
tasks is a -> powerful : 1
is a powerful -> model : 1
is a powerful -> http : 1
a powerful model -> for : 1
powerful model for -> composing : 1
model for composing -> asynchronous : 1
for composing asynchronous -> operations : 1
composing asynchronous operations -> based : 1
asynchronous operations based -> on : 1
operations based on -> modern : 1
based on modern -> the : 1
on modern the -> rest : 1
modern the rest -> sdk : 1
rest sdk supports -> windows : 1
sdk supports windows -> windows : 1
supports windows windows -> store : 1
windows windows store -> and : 1
windows store and -> client : 1
store and client -> programming : 1
and client programming -> using : 1
the rest rest -> sdk : 1
rest sdk programming -> model : 1
sdk programming model -> is : 1
model is asynchronous -> in : 1
asynchronous in and -> we : 1
in and we -> can : 1
we can invoke -> the : 4
can invoke the -> api : 1
can invoke the -> http : 1
can invoke the -> operation : 1
can invoke the -> method : 1
invoke the api -> calls : 1
the api calls -> in : 1
api calls in -> a : 1
in a synchronous -> manner : 2
a synchronous manner -> as : 2
synchronous manner as -> the : 1
synchronous manner as -> consult : 1
manner as the -> following : 1
demonstrate how we -> can : 1
invoke the http -> client : 1
http client api -> calls : 1
client api calls -> the : 1
api calls the -> program : 1
calls the program -> demonstrates : 1
the program demonstrates -> the : 1
the client side -> of : 1
client side of -> the : 1
of the http -> protocol : 1
of the http -> such : 1
of the http -> request : 1
the http protocol -> supported : 1
http protocol supported -> by : 1
protocol supported by -> the : 1
by the rest -> we : 2
by the rest -> the : 1
the rest we -> use : 1
the rest we -> worked : 1
rest we use -> a : 1
we use a -> technique : 1
use a technique -> called : 1
a technique called -> technique : 1
a technique called -> task : 1
technique called technique -> of : 1
called technique of -> chaining : 1
technique of chaining -> blocks : 1
of chaining blocks -> of : 1
chaining blocks of -> to : 1
blocks of to -> retrieve : 1
of to retrieve -> the : 1
retrieve the data -> from : 1
data from a -> web : 1
from a web -> page : 1
a web page -> and : 2
a web page -> using : 1
web page and -> store : 1
web page and -> persist : 1
page and store -> it : 1
and store it -> in : 1
store it in -> a : 1
in a local -> disk : 1
a local disk -> the : 1
local disk the -> rest : 1
disk the rest -> sdk : 1
rest sdk follows -> an : 2
sdk follows an -> asynchronous : 2
follows an asynchronous -> model : 1
follows an asynchronous -> programming : 1
an asynchronous model -> and : 1
asynchronous model and -> we : 1
model and we -> chain : 1
and we chain -> operations : 1
we chain operations -> we : 1
chain operations we -> invoke : 1
operations we invoke -> the : 1
invoke the composition -> using : 1
the composition using -> the : 1
composition using the -> a : 1
the a simple -> http : 1
the a simple -> program : 1
a simple http -> client : 1
simple http client -> to : 1
http client to -> demonstrate : 1
client to demonstrate -> rest : 1
to demonstrate rest -> sdk : 1
demonstrate rest sdk -> client : 1
rest sdk client -> programming : 1
sdk client programming -> model : 1
client programming model -> the : 1
client programming model -> supported : 1
model the toy -> sample : 1
the toy sample -> shows : 1
toy sample shows -> how : 1
sample shows how -> one : 1
one can read -> contents : 1
can read contents -> of : 1
read contents of -> a : 1
of a web -> page : 2
web page using -> namespace : 1
page using namespace -> common : 1
using namespace common -> utilities : 1
using namespace common -> features : 1
using namespace common -> http : 1
namespace common utilities -> like : 1
common utilities like -> string : 1
utilities like string -> conversions : 1
like string conversions -> using : 1
string conversions using -> namespace : 1
conversions using namespace -> common : 1
namespace common features -> like : 1
common features like -> using : 1
features like using -> namespace : 1
like using namespace -> common : 1
namespace common http -> functionality : 1
common http functionality -> using : 1
http functionality using -> namespace : 1
functionality using namespace -> http : 1
using namespace http -> client : 1
namespace http client -> features : 1
http client features -> using : 1
client features using -> namespace : 1
features using namespace -> asynchronous : 1
using namespace asynchronous -> streams : 1
namespace asynchronous streams -> int : 1
asynchronous streams int -> auto : 1
streams int auto -> filestream : 1
int auto filestream -> open : 1
auto filestream open -> stream : 1
filestream open stream -> to : 1
open stream to -> output : 1
stream to output -> requesttask : 1
to output requesttask -> create : 1
output requesttask create -> to : 1
requesttask create to -> send : 1
create to send -> the : 1
to send the -> build : 1
to send the -> most : 1
send the build -> request : 1
the build request -> uri : 1
build request uri -> and : 1
request uri and -> start : 1
uri and start -> the : 1
and start the -> return : 1
start the return -> response : 1
the return response -> status : 1
return response status -> return : 1
response status return -> return : 1
status return return -> we : 1
return return we -> have : 1
return we have -> not : 1
have not started -> just : 1
not started just -> composed : 1
started just composed -> set : 1
just composed set -> of : 1
composed set of -> tasks : 1
set of tasks -> in : 1
of tasks in -> a : 1
tasks in a -> continuation : 1
in a continuation -> style : 1
a continuation style -> wait : 1
continuation style wait -> for : 1
style wait for -> all : 1
wait for all -> the : 1
all the outstanding -> to : 1
the outstanding to -> complete : 1
outstanding to complete -> and : 1
to complete and -> handle : 1
complete and handle -> any : 1
and handle any -> if : 1
handle any if -> any : 1
any if any -> try : 1
if any try -> all : 1
any try all -> taskss : 1
try all taskss -> will : 1
all taskss will -> get : 1
taskss will get -> triggered : 1
get triggered here -> catch : 1
triggered here catch -> pause : 1
here catch pause -> for : 1
catch pause for -> a : 1
pause for a -> key : 1
for a key -> return : 1
for a key -> to : 1
a key return -> program : 1
key return program -> demonstrates : 1
return program demonstrates -> the : 1
the task continuation -> style : 1
task continuation style -> of : 1
continuation style of -> the : 1
style of the -> bulk : 1
of the bulk -> of : 1
code is about -> composing : 1
is about composing -> and : 1
about composing and -> the : 1
composing and the -> actual : 1
and the actual -> execution : 1
the actual execution -> starts : 1
actual execution starts -> when : 1
execution starts when -> the : 1
starts when the -> method : 1
when the method -> is : 1
method is we -> can : 1
is we can -> invoke : 1
invoke the operation -> in : 1
invoke the operation -> to : 1
the operation in -> a : 1
operation in a -> synchronous : 1
manner as consult -> the : 1
as consult the -> rest : 1
consult the rest -> sdk : 1
rest sdk documentation -> to : 1
sdk documentation to -> learn : 1
to learn server -> programming : 1
learn server programming -> using : 1
the rest have -> already : 1
rest have already -> learned : 1
about the http -> client : 1
http client programming -> model : 1
programming model supported -> by : 1
model supported by -> the : 1
rest we worked -> with : 1
we worked with -> the : 1
worked with the -> asynchronous : 1
with the asynchronous -> api : 1
the asynchronous api -> to : 1
asynchronous api to -> retrieve : 1
api to retrieve -> the : 1
retrieve the content -> of : 1
content of a -> web : 1
page and persist -> it : 1
and persist it -> into : 1
persist it into -> a : 1
it into a -> disk : 1
into a disk -> it : 1
a disk it -> is : 1
disk it is -> time : 1
time to start -> concentrating : 1
to start concentrating -> on : 1
start concentrating on -> the : 1
concentrating on the -> rest : 1
on the rest -> sdk : 1
rest sdk http -> server : 1
sdk http server -> the : 1
http server the -> rest : 1
server the rest -> sdk : 1
rest sdk has -> a : 1
sdk has a -> listener : 1
has a listener -> interface : 1
a listener interface -> that : 1
listener interface that -> will : 1
interface that will -> handle : 1
that will handle -> the : 1
will handle the -> http : 1
handle the http -> and : 1
the http and -> we : 1
the http and -> the : 1
http and we -> can : 1
can place handlers -> for : 1
place handlers for -> each : 1
handlers for each -> type : 1
handlers for each -> request : 1
for each type -> of : 1
each type of -> the : 1
the http such -> as : 1
http such as -> and : 1
as and a -> simple : 1
and a simple -> web : 1
a simple web -> application : 1
simple web application -> with : 1
web application with -> rest : 1
application with rest -> sdk : 1
with rest sdk -> we : 1
with rest sdk -> class : 1
rest sdk we -> can : 1
sdk we can -> use : 1
can use postman -> or : 1
use postman or -> curl : 1
postman or curl -> to : 1
or curl to -> test : 1
curl to test -> the : 1
to test the -> server : 1
to test the -> http : 1
test the server -> using : 1
the server using -> namespace : 1
server using namespace -> using : 1
using namespace simpleserver -> is : 1
namespace simpleserver is -> a : 1
simpleserver is a -> wrapper : 1
wrapper over class -> available : 1
over class available -> with : 1
class available with -> rest : 1
available with rest -> sdk : 1
rest sdk class -> simpleserver : 1
sdk class simpleserver -> return : 1
class simpleserver return -> return : 1
simpleserver return return -> handlers : 1
return return handlers -> for : 1
return handlers for -> http : 1
handlers for http -> verbs : 1
for http verbs -> void : 1
http verbs void -> void : 1
verbs void void -> void : 1
void void the -> http : 1
void the http -> listener : 1
the http listener -> class : 1
http listener class -> class : 1
listener class class -> is : 1
class class is -> basically : 1
class is basically -> a : 1
is basically a -> wrapper : 1
basically a wrapper -> on : 1
the class supported -> by : 1
class supported by -> the : 1
rest the class -> listens : 1
the class listens -> for : 1
class listens for -> the : 1
listens for the -> incoming : 1
for the incoming -> http : 1
the incoming http -> and : 1
incoming http and -> it : 1
http and it -> is : 1
possible to set -> request : 1
to set request -> handlers : 1
set request handlers -> for : 1
request handlers for -> each : 1
for each request -> type : 1
each request type -> and : 1
request type and -> so : 1
type and so -> when : 1
and so when -> a : 1
so when a -> request : 1
when a request -> will : 1
a request will -> dispatch : 1
request will dispatch -> the : 1
will dispatch the -> request : 1
dispatch the request -> information : 1
the request information -> to : 1
request information to -> the : 1
to the associated -> the : 1
the associated the -> constructor : 1
associated the constructor -> binds : 1
the constructor binds -> http : 1
constructor binds http -> verbs : 1
binds http verbs -> to : 1
verbs to instance -> methods : 1
to instance methods -> based : 1
instance methods based -> on : 1
methods based on -> the : 1
on the naming -> we : 1
the naming we -> can : 1
naming we can -> infer : 1
we can infer -> what : 1
can infer what -> is : 1
infer what is -> happening : 1
what is happening -> previous : 1
is happening previous -> code : 1
happening previous code -> snippets : 1
code snippets bind -> the : 1
snippets bind the -> request : 1
bind the request -> handlers : 1
the request handlers -> to : 1
request handlers to -> the : 1
handlers to the -> we : 1
we are only -> focusing : 1
are only focusing -> on : 1
only focusing on -> the : 1
the and these -> verbs : 1
and these verbs -> are : 1
these verbs are -> the : 1
verbs are the -> most : 1
most popular commands -> supported : 1
popular commands supported -> by : 1
commands supported by -> rest : 1
supported by rest -> for : 1
by rest for -> this : 1
rest for this -> what : 1
for this what -> we : 1
this what we -> do : 1
what we do -> is : 1
we do is -> spit : 1
do is spit -> the : 1
is spit the -> http : 1
spit the http -> request : 1
the http request -> details : 1
the http request -> and : 1
http request details -> on : 1
request details on -> the : 1
details on the -> server : 1
on the server -> console : 1
the server console -> and : 1
server console and -> return : 1
console and return -> ok : 1
and return ok -> and : 1
return ok and -> a : 1
ok and a -> string : 1
and a string -> which : 1
a string which -> indicates : 1
string which indicates -> success : 1
which indicates success -> of : 1
indicates success of -> operations : 1
success of operations -> void : 1
of operations void -> ucout : 1
operations void ucout -> operation : 1
void ucout operation -> void : 3
void ucout operation -> previous : 1
ucout operation void -> ucout : 3
operation void ucout -> operation : 3
ucout operation previous -> code : 1
operation previous code -> block : 1
previous code block -> follows : 1
code block follows -> a : 1
block follows a -> pattern : 1
follows a pattern -> that : 1
can be easily -> deciphered : 1
be easily deciphered -> by : 1
easily deciphered by -> any : 1
deciphered by any -> all : 1
by any all -> the : 1
any all the -> handler : 1
all the handler -> does : 1
handler does is -> print : 1
does is print -> the : 1
is print the -> request : 1
print the request -> parameters : 1
the request parameters -> to : 1
request parameters to -> the : 1
parameters to the -> console : 1
the console of -> the : 1
console of the -> server : 1
of the server -> and : 2
of the server -> void : 1
server and return -> a : 1
and return a -> string : 1
return a string -> to : 1
a string to -> the : 1
string to the -> client : 1
string to the -> return : 1
to the client -> to : 1
to the client -> that : 3
to the client -> expects : 1
client to indicate -> that : 1
the operation was -> we : 1
operation was we -> will : 1
was we will -> show : 1
will show how -> we : 1
show how we -> can : 1
can access these -> services : 1
access these services -> through : 1
these services through -> the : 1
services through the -> postman : 1
through the postman -> and : 1
the postman and -> curl : 1
postman and curl -> a : 1
and curl a -> smart : 1
curl a smart -> pointer : 1
pointer for server -> start : 1
for server start -> the : 1
server start the -> server : 1
start the server -> with : 1
the server with -> the : 1
server with the -> given : 1
with the given -> url : 1
the given url -> void : 1
given url void -> build : 1
url void build -> our : 1
void build our -> uri : 1
build our uri -> from : 1
our uri from -> the : 1
uri from the -> address : 1
from the address -> given : 1
the address given -> we : 1
address given we -> just : 1
given we just -> append : 1
we just append -> to : 1
just append to -> the : 1
append to the -> base : 1
the base url -> auto : 1
base url auto -> addr : 1
url auto addr -> create : 1
auto addr create -> an : 1
addr create an -> instance : 1
server and invoke -> wait : 1
and invoke wait -> to : 1
invoke wait to -> start : 1
wait to start -> the : 1
start the indicate -> the : 1
the indicate the -> start : 1
indicate the start -> and : 1
the start and -> spit : 1
start and spit -> uri : 1
and spit uri -> to : 1
spit uri to -> the : 1
uri to the -> console : 1
the console ucout -> for : 1
console ucout for -> requests : 1
ucout for requests -> addr : 2
for requests addr -> simply : 1
for requests addr -> void : 1
requests addr simply -> closes : 1
addr simply closes -> the : 1
simply closes the -> close : 1
closes the close -> returns : 1
the close returns -> need : 1
close returns need -> to : 1
returns need to -> call : 1
to call wait -> to : 1
call wait to -> invoke : 1
wait to invoke -> the : 1
invoke the void -> entrypoint : 1
the void entrypoint -> function : 1
void entrypoint function -> int : 1
entrypoint function int -> port : 2
function int port -> if : 2
int port if -> port : 1
int port if -> address : 1
port if port -> create : 1
if port create -> the : 1
port create the -> server : 1
create the server -> uri : 1
the server uri -> base : 1
server uri base -> address : 1
uri base address -> address : 1
base address address -> enter : 1
address address enter -> to : 1
address enter to -> wait : 1
address enter to -> return : 1
enter to wait -> untill : 1
to wait untill -> some : 1
wait untill some -> one : 1
untill some one -> has : 1
some one has -> pressed : 1
one has pressed -> a : 1
has pressed a -> shut : 1
pressed a shut -> the : 1
a shut the -> server : 1
shut the server -> down : 1
the server down -> return : 1
server down return -> main : 1
down return main -> function : 1
return main function -> instantiates : 1
main function instantiates -> an : 1
function instantiates an -> instance : 1
instantiates an instance -> of : 1
instance of through -> the : 1
of through the -> the : 1
the function waits -> for : 1
function waits for -> a : 1
a key to -> be : 1
key to be -> pressed : 1
to be pressed -> before : 1
be pressed before -> the : 1
pressed before the -> function : 1
before the function -> is : 1
function is once -> we : 1
is once we -> have : 1
have the we -> can : 1
use the tool -> or : 1
the tool or -> postman : 1
tool or postman -> to : 1
or postman to -> test : 1
postman to test -> how : 1
to test how -> the : 1
test how the -> program : 1
how the program -> the : 1
the program the -> http : 1
program the http -> server : 1
curl and is -> a : 1
is a tool -> that : 1
a tool that -> is : 1
tool that is -> portable : 1
that is portable -> across : 1
is portable across -> gnu : 1
portable across gnu -> and : 1
across gnu and -> other : 1
gnu and other -> the : 1
other the tool -> helps : 1
the tool helps -> to : 1
tool helps to -> transfer : 1
helps to transfer -> data : 1
to transfer data -> using : 1
transfer data using -> various : 1
data using various -> application : 1
using various application -> some : 1
various application some -> of : 1
application some of -> the : 1
of the common -> protocols : 1
the common protocols -> supported : 1
common protocols supported -> include : 1
protocols supported include -> and : 1
supported include and -> will : 1
include and will -> be : 1
using the tool -> to : 1
the tool to -> test : 1
tool to test -> the : 1
tool to test -> these : 1
test the http -> server : 1
http server we -> the : 1
server we the -> utility : 1
we the utility -> can : 1
the utility can -> be : 1
utility can be -> invoked : 1
can be invoked -> by : 1
invoked by giving -> the : 1
giving the requisite -> parameters : 1
the requisite parameters -> to : 1
requisite parameters to -> place : 1
parameters to place -> http : 1
to place http -> requests : 1
place http requests -> with : 1
http requests with -> associated : 1
requests with associated -> we : 1
with associated we -> give : 1
associated we give -> the : 1
give the parameters -> for : 1
the parameters for -> invoking : 1
parameters for invoking -> the : 1
for invoking the -> and : 1
invoking the and -> the : 1
and the request -> to : 1
the request to -> the : 1
request to the -> server : 1
the server we -> put : 1
the server we -> just : 1
server we put -> get : 1
we put get -> the : 1
put get the -> previous : 1
get the previous -> command : 1
the previous command -> in : 1
previous command in -> a : 1
command in a -> batch : 1
in a batch -> file : 1
a batch file -> or : 1
batch file or -> shell : 1
file or shell -> depending : 1
or shell depending -> upon : 1
shell depending upon -> your : 1
depending upon your -> the : 1
upon your the -> output : 1
your the output -> on : 1
the output on -> the : 1
the console should -> be : 1
console should be -> as : 1
be as operation -> succeeded : 1
as operation succeeded -> get : 1
operation succeeded get -> operation : 1
succeeded get operation -> by : 1
get operation by -> consulting : 1
operation by consulting -> the : 1
consulting the we -> can : 1
we can test -> the : 1
can test the -> other : 1
test the other -> http : 1
the other http -> verbs : 1
other http verbs -> as : 1
http verbs as -> is : 1
verbs as is -> a : 1
as is a -> powerful : 1
a powerful http -> client : 1
powerful http client -> for : 1
http client for -> testing : 1
client for testing -> it : 1
for testing it -> started : 1
testing it started -> as : 1
it started as -> a : 1
started as a -> side : 1
as a side -> project : 1
a side project -> of : 1
side project of -> an : 1
project of an -> indian : 1
of an indian -> developer : 1
an indian developer -> by : 1
indian developer by -> the : 1
developer by the -> name : 1
name of abhinav -> it : 1
of abhinav it -> was : 1
abhinav it was -> a : 1
was a chrome -> plugin : 1
a chrome plugin -> that : 1
chrome plugin that -> went : 1
plugin that went -> it : 1
that went it -> is : 1
went it is -> an : 1
it is an -> independent : 1
is an independent -> platform : 1
an independent platform -> and : 1
independent platform and -> there : 1
platform and there -> exists : 1
and there exists -> a : 1
there exists a -> company : 1
exists a company -> formed : 1
a company formed -> around : 1
company formed around -> the : 1
formed around the -> of : 1
around the of -> which : 1
the of which -> asthana : 1
of which asthana -> is : 1
which asthana is -> the : 1
asthana is the -> you : 1
is the you -> can : 1
download the postman -> tool : 1
the postman tool -> to : 1
postman tool to -> test : 1
to test these -> libcurl : 1
test these libcurl -> and : 1
these libcurl and -> the : 1
http client have -> already : 1
client have already -> come : 1
have already come -> across : 1
already come across -> the : 1
come across the -> curl : 1
across the curl -> the : 1
the curl the -> curl : 1
curl the curl -> utility : 1
the curl utility -> is : 1
curl utility is -> a : 1
utility is a -> wrapper : 1
use the library -> to : 2
library to access -> the : 1
access the rest -> services : 1
the rest services -> in : 1
the rest services -> by : 1
rest services in -> this : 1
services in this -> to : 1
in this to -> get : 1
this to get -> you : 1
to get you -> familiar : 1
get you familiar -> with : 1
you familiar with -> the : 1
the programming we -> will : 1
a basic http -> client : 1
basic http client -> using : 1
http client using -> the : 1
client using the -> a : 1
usage of libcurl -> library : 1
of libcurl library -> entrypoint : 1
libcurl library entrypoint -> for : 1
library entrypoint for -> the : 1
entrypoint for the -> program : 1
for the program -> int : 1
the program int -> curl : 1
program int curl -> curlcode : 1
int curl curlcode -> initialize : 1
curl curlcode initialize -> the : 1
curlcode initialize the -> library : 1
initialize the library -> curl : 1
the library curl -> set : 1
library curl set -> the : 1
curl set the -> url : 1
set the url -> to : 1
set the url -> and : 1
the url to -> support : 1
the url to -> retrieve : 1
url to support -> url : 1
to support url -> we : 1
support url we -> need : 1
url we need -> to : 1
need to configure -> the : 1
to configure the -> lib : 1
configure the lib -> curl : 1
the lib curl -> library : 1
lib curl library -> with : 1
curl library with -> now : 1
library with now -> we : 1
with now we -> have : 1
now we have -> setup : 1
we have setup -> the : 1
have setup the -> options : 1
setup the options -> invoke : 1
the options invoke -> the : 1
options invoke the -> operation : 1
the operation to -> pull : 1
operation to pull -> data : 1
pull data res -> if : 1
data res if -> print : 1
res if print -> the : 1
if print the -> error : 1
print the error -> on : 1
the error on -> console : 1
error on console -> cout : 1
on console cout -> return : 1
console cout return -> previous : 1
cout return previous -> code : 1
previous code pings -> the : 1
code pings the -> url : 1
pings the url -> to : 1
url to retrieve -> its : 1
to retrieve its -> contents : 1
retrieve its contents -> and : 1
its contents and -> prints : 1
contents and prints -> them : 1
and prints them -> to : 1
prints them to -> the : 1
model is very -> and : 1
is very and -> the : 1
very and the -> documentation : 1
and the documentation -> of : 1
documentation of the -> library : 1
library is really -> it : 1
is really it -> is : 1
really it is -> one : 1
most popular libraries -> for : 1
popular libraries for -> accessing : 1
libraries for accessing -> the : 1
for accessing the -> application : 1
for accessing the -> rest : 1
accessing the application -> curl : 1
the application curl -> wrapper : 1
application curl wrapper -> primary : 1
curl wrapper primary -> implementer : 1
wrapper primary implementer -> of : 1
library is kirk -> who : 1
is kirk who -> is : 1
kirk who is -> currently : 1
who is currently -> associated : 1
is currently associated -> with : 1
associated with he -> wrote : 1
with he wrote -> a : 1
he wrote a -> twitter : 1
wrote a twitter -> analysis : 1
a twitter analysis -> sample : 1
twitter analysis sample -> app : 1
analysis sample app -> to : 1
sample app to -> demonstrate : 1
app to demonstrate -> the : 1
demonstrate the various -> facets : 1
the various facets -> of : 1
various facets of -> reactive : 1
facets of reactive -> one : 1
of reactive one -> of : 1
reactive one of -> the : 1
of the things -> he : 1
the things he -> did : 1
things he did -> as : 1
he did as -> part : 1
did as part -> of : 1
of the initiative -> was : 1
the initiative was -> write : 1
initiative was write -> a : 1
was write a -> reactive : 1
write a reactive -> wrapper : 1
a reactive wrapper -> over : 1
reactive wrapper over -> to : 1
over to implement -> the : 1
implement the http -> and : 1
http and the -> authors : 1
and the authors -> of : 1
book have extended -> the : 1
have extended the -> code : 1
extended the code -> to : 1
code to support -> the : 1
to support the -> and : 2
to support the -> you : 1
support the and -> a : 1
support the and -> we : 1
and a look -> at : 1
at the library -> bundled : 1
the library bundled -> with : 1
library bundled with -> the : 1
bundled with the -> source : 1
with the source -> code : 1
code of this -> a : 1
of this a -> simple : 1
this a simple -> program : 1
program to pull -> http : 1
to pull http -> conent : 1
pull http conent -> using : 1
http conent using -> a : 1
conent using a -> rx : 1
using a rx -> wrapper : 1
a rx wrapper -> on : 1
rx wrapper on -> top : 1
of the libcurl -> using : 1
the libcurl using -> namespace : 1
libcurl using namespace -> using : 1
using namespace include -> curl : 2
using namespace include -> the : 2
namespace include curl -> library : 2
include curl library -> and : 2
curl library and -> rxcpp : 2
library and rxcpp -> library : 2
and rxcpp library -> using : 2
rxcpp library using -> namespace : 2
library using namespace -> using : 2
namespace include the -> modified : 2
include the modified -> rxcurl : 2
the modified rxcurl -> library : 2
modified rxcurl library -> from : 2
rxcurl library from -> kirk : 2
library from kirk -> twitter : 2
from kirk twitter -> analysis : 2
kirk twitter analysis -> app : 2
twitter analysis app -> using : 2
twitter analysis app -> only : 1
analysis app using -> namespace : 2
app using namespace -> int : 1
app using namespace -> the : 1
namespace int create -> a : 1
create a factory -> object : 1
a factory object -> to : 1
factory object to -> create : 1
object to create -> http : 1
to create http -> the : 1
create http the -> structure : 1
http the structure -> is : 1
structure is defined -> in : 1
defined in string -> url : 1
in string url -> auto : 1
string url auto -> factory : 1
url auto factory -> auto : 1
auto factory auto -> request : 1
factory auto request -> return : 1
auto request return -> created : 1
auto request return -> previous : 1
request return created -> an : 1
return created an -> by : 1
created an by -> using : 1
an by using -> the : 1
using the class -> for : 1
the class for -> creating : 1
class for creating -> the : 1
for creating the -> http : 1
creating the http -> the : 1
the http the -> function : 1
http the function -> just : 1
the function just -> retrieves : 1
function just retrieves -> the : 1
just retrieves the -> body : 1
retrieves the body -> of : 1
of the response -> the : 1
the response the -> most : 1
response the most -> important : 1
most important structure -> in : 1
important structure in -> the : 1
structure in the -> whole : 1
in the whole -> code : 1
the whole code -> is : 1
whole code is -> the : 1
is the whose -> definition : 1
the whose definition -> is : 1
whose definition is -> as : 1
definition is as -> string : 1
is as string -> string : 1
as string string -> string : 1
string string string -> make : 1
string string make -> a : 1
string make a -> blocking : 1
a blocking call -> to : 3
blocking call to -> the : 2
blocking call to -> we : 1
observable can be -> subscribed : 1
can be subscribed -> for : 1
be subscribed for -> using : 1
subscribed for using -> a : 1
for using a -> lambda : 1
that takes as -> the : 1
that takes as -> a : 1
takes as the -> function : 1
function returns in -> the : 1
returns in the -> body : 1
the we aggregate -> the : 1
we aggregate the -> content : 1
aggregate the content -> to : 1
the content to -> produce : 1
the content to -> form : 1
content to produce -> a : 1
produce a string -> using : 1
a string using -> the : 1
using the retrieve -> the : 1
the retrieve the -> html : 1
retrieve the html -> content : 2
the html content -> form : 2
html content form -> the : 2
content form the -> site : 2
form the site -> string : 2
the site string -> string : 2
site string string -> temp : 2
string string temp -> html : 2
string temp html -> print : 1
string temp html -> return : 1
temp html print -> to : 1
html print to -> the : 1
print to the -> cout : 1
to the cout -> html : 1
the cout html -> is : 1
cout html is -> subscribed : 1
html is subscribed -> with : 1
is subscribed with -> a : 1
subscribed with a -> which : 1
with a which -> stake : 1
a which stake -> the : 1
which stake the -> string : 1
stake the string -> as : 1
the string as -> a : 1
string as a -> in : 1
as a in -> the : 1
the we simply -> assign : 1
we simply assign -> the : 1
simply assign the -> string : 1
assign the string -> containing : 1
the string containing -> the : 1
string containing the -> html : 1
containing the html -> to : 1
the html to -> the : 1
html to the -> we : 1
the we print -> the : 1
we print the -> value : 1
print the value -> to : 1
to the please -> take : 1
the please take -> a : 1
please take a -> look : 1
at the header -> file : 1
file to see -> how : 1
how the library -> json : 1
the library json -> and : 1
library json and -> http : 1
and http payload -> format : 1
http payload format -> for : 1
payload format for -> invoking : 1
format for invoking -> web : 1
for invoking web -> services : 1
invoking web services -> monopolized : 1
web services monopolized -> by : 1
services monopolized by -> the : 1
monopolized by the -> xml : 1
by the xml -> the : 1
the xml the -> services : 1
xml the services -> mostly : 1
the services mostly -> support : 1
services mostly support -> the : 1
mostly support the -> xml : 1
support the xml -> with : 1
the xml with -> the : 1
xml with the -> advent : 1
advent of developers -> use : 1
of developers use -> object : 1
developers use object -> as : 1
use object as -> the : 1
object as the -> payload : 1
as the payload -> the : 1
the payload the -> following : 1
payload the following -> table : 1
following table shows -> a : 1
table shows a -> comparison : 1
shows a comparison -> between : 1
a comparison between -> xml : 1
comparison between xml -> and : 1
between xml and -> the : 1
xml and the -> corresponding : 1
and the corresponding -> json : 1
the corresponding json -> json : 1
corresponding json json -> format : 1
json json format -> contains : 1
json format contains -> the : 1
format contains the -> following : 1
following data following -> json : 1
data following json -> we : 1
following json we -> have : 1
json we have -> covered : 1
have covered most -> of : 1
covered most of -> the : 1
the preceding data -> the : 1
preceding data the -> mappings : 1
data the mappings -> the : 1
the mappings the -> value : 1
mappings the value -> is : 1
value is string -> type : 1
is string type -> the : 1
string type the -> value : 1
type the value -> is : 1
value is number -> this : 1
is number this -> is : 1
number this is -> a : 1
is a json -> this : 1
a json this -> is : 1
json this is -> an : 1
is an this -> is : 1
an this is -> a : 1
is a boolean -> code : 1
a boolean code -> is : 1
boolean code is -> as : 1
as that we -> have : 1
have a better -> understanding : 1
a better understanding -> of : 1
better understanding of -> json : 1
understanding of json -> and : 1
of json and -> its : 1
json and its -> core : 1
and its core -> we : 1
its core we -> will : 1
core we will -> write : 1
of the json -> available : 1
the json available -> as : 1
json available as -> part : 1
available as part -> of : 2
the rest a -> console : 1
rest a console -> application : 1
a console application -> to : 1
console application to -> demonstrate : 1
application to demonstrate -> json : 1
to demonstrate json -> api : 1
demonstrate json api -> available : 1
json api available -> as : 1
api available as -> part : 1
the sdk using -> namespace : 1
sdk using namespace -> using : 1
namespace define a -> simple : 1
define a simple -> struct : 1
a simple struct -> to : 1
simple struct to -> demonstrate : 1
struct to demonstrate -> the : 1
demonstrate the working -> of : 1
working of json -> api : 1
of json api -> struct : 1
json api struct -> int : 1
api struct int -> double : 1
struct int double -> convert : 1
int double convert -> a : 1
double convert a -> json : 1
convert a json -> object : 1
a json object -> to : 2
a json object -> group : 1
a json object -> devekioers : 1
a json object -> java : 1
a json object -> create : 1
a json object -> is : 2
json object to -> a : 1
json object to -> the : 1
object to a -> struct : 1
to a struct -> static : 1
a struct static -> return : 1
struct static return -> method : 1
static return method -> converts : 1
return method converts -> a : 1
method converts a -> json : 1
converts a json -> object : 1
to the returns -> a : 1
the returns a -> reference : 1
returns a reference -> to : 1
reference to based -> on : 1
to based on -> the : 1
on the string -> that : 1
the string that -> we : 1
string that we -> used : 1
that we used -> to : 1
we used to -> index : 1
used to index -> the : 1
to index the -> reference : 1
index the reference -> is : 1
the reference is -> used : 1
reference is used -> to : 1
used to invoke -> the : 1
invoke the conversion -> such : 1
the conversion such -> as : 1
conversion such as -> and : 1
as and convert -> a : 1
and convert a -> struct : 1
convert a struct -> to : 1
a struct to -> a : 1
struct to a -> json : 1
to a json -> value : 1
a json value -> result : 1
json value result -> return : 1
value result return -> is : 1
result return is -> an : 1
return is an -> instance : 1
an instance method -> of : 1
instance method of -> which : 1
method of which -> helps : 1
of which helps -> to : 1
which helps to -> produce : 1
helps to produce -> json : 1
to produce json -> output : 1
produce json output -> from : 1
json output from -> the : 1
output from the -> instance : 1
from the instance -> we : 1
the instance we -> use : 1
instance we use -> conversion : 1
we use conversion -> methods : 1
use conversion methods -> to : 1
conversion methods to -> transfer : 1
methods to transfer -> instance : 1
to transfer instance -> data : 1
transfer instance data -> to : 1
instance data to -> we : 1
data to we -> will : 1
we will focus -> on : 2
will focus on -> how : 1
will focus on -> exception : 1
focus on how -> we : 1
on how we -> can : 1
can create from -> create : 1
create from create -> a : 1
from create a -> json : 1
create a json -> object : 4
json object group -> and : 1
object group and -> embed : 1
group and embed -> and : 1
and embed and -> array : 1
embed and array -> in : 1
and array in -> void : 1
array in void -> create : 1
in void create -> a : 1
void create a -> json : 1
json object devekioers -> on : 1
object devekioers on -> short : 1
devekioers on short -> description : 1
on short description -> here : 1
short description here -> create : 1
description here create -> a : 1
here create a -> json : 1
json object java -> create : 1
object java create -> a : 1
java create a -> json : 1
json object create -> the : 1
object create the -> items : 1
create the items -> array : 1
the items array -> assign : 1
the items array -> as : 1
items array assign -> the : 1
array assign the -> items : 1
assign the items -> array : 1
items array as -> the : 1
as the value -> for : 1
the value for -> the : 1
value for the -> resources : 1
for the resources -> key : 1
the resources key -> write : 1
resources key write -> the : 1
key write the -> current : 1
write the current -> json : 1
the current json -> value : 1
current json value -> to : 1
json value to -> wide : 1
value to wide -> char : 1
to wide char -> string : 1
wide char string -> stream : 1
char string stream -> display : 1
string stream display -> the : 1
stream display the -> string : 1
display the string -> stream : 1
the string stream -> int : 1
string stream int -> wcout : 1
stream int wcout -> create : 1
int wcout create -> an : 1
wcout create an -> struct : 1
create an struct -> and : 1
an struct and -> assign : 1
struct and assign -> some : 1
and assign some -> values : 1
assign some values -> into : 1
the we then -> invoke : 1
we then invoke -> to : 1
then invoke to -> create : 1
invoke to create -> a : 1
a we call -> the : 1
call the method -> to : 1
method to generate -> the : 1
to generate the -> json : 1
generate the json -> textual : 1
the json textual -> port : 1
json textual port -> obj : 1
textual port obj -> wcout : 1
port obj wcout -> previous : 1
obj wcout previous -> code : 1
wcout previous code -> snippets : 1
code snippets demonstrate -> the : 1
snippets demonstrate the -> use : 1
the use to -> parse : 1
use to parse -> textual : 1
to parse textual -> strings : 1
parse textual strings -> to : 1
textual strings to -> produce : 1
strings to produce -> we : 1
to produce we -> invoked : 1
produce we invoked -> the : 1
we invoked the -> method : 1
invoked the method -> to : 1
method to print -> the : 1
print the json -> string : 1
the json string -> to : 1
json string to -> the : 1
to the return -> rest : 1
the return rest -> rest : 1
return rest rest -> this : 1
rest rest this -> we : 1
rest this we -> have : 1
we have leveraged -> code : 1
have leveraged code -> from : 1
leveraged code from -> marius : 1
code from marius -> excellent : 1
from marius excellent -> article : 1
marius excellent article -> about : 1
excellent article about -> the : 1
article about the -> rest : 1
about the rest -> in : 1
the rest in -> the : 1
rest in the -> database : 1
in the database -> code : 1
the database code -> is : 1
database code is -> borrowed : 1
code is borrowed -> from : 1
is borrowed from -> his : 1
borrowed from his -> the : 1
from his the -> authors : 1
his the authors -> are : 1
the authors are -> thankful : 1
authors are thankful -> to : 1
are thankful to -> him : 1
thankful to him -> for : 1
to him for -> the : 1
him for the -> excellent : 1
for the excellent -> available : 1
the excellent available -> at : 1
excellent available at -> write : 1
available at write -> a : 1
at write a -> microservice : 1
write a microservice -> that : 1
a microservice that -> puts : 1
microservice that puts -> everything : 1
that puts everything -> we : 1
puts everything we -> have : 1
everything we have -> learned : 1
have learned so -> far : 1
learned so far -> in : 1
far in the -> context : 1
microsoft rest we -> will : 1
rest we will -> consume : 1
we will consume -> the : 1
will consume the -> rest : 1
consume the rest -> services : 1
rest services by -> leveraging : 1
services by leveraging -> the : 1
leveraging the rxcurl -> library : 1
the rxcurl library -> written : 1
rxcurl library written -> by : 1
written by kirk -> shoop : 1
written by kirk -> originally : 1
by kirk shoop -> as : 1
kirk shoop as -> part : 1
shoop as part -> of : 1
twitter analysis we -> have : 1
analysis we have -> added : 1
have added support -> to : 1
have added support -> for : 1
added support to -> the : 1
support to the -> delete : 1
to the delete -> and : 1
to the delete -> list : 1
the delete and -> put : 1
delete and put -> the : 1
and put the -> rest : 1
put the rest -> service : 1
the rest service -> implemented : 1
rest service implemented -> here : 1
service implemented here -> supports : 1
implemented here supports -> the : 1
here supports the -> following : 1
the following lists -> all : 1
following lists all -> the : 1
lists all the -> pairs : 1
all the pairs -> in : 1
the pairs in -> the : 1
pairs in the -> the : 1
the the response -> will : 2
the response will -> be : 2
response will be -> in : 2
be in the -> retrieves : 1
be in the -> the : 1
be in the -> inserts : 1
be in the -> deletes : 1
be in the -> have : 1
be in the -> previous : 1
in the retrieves -> values : 1
the retrieves values -> corresponding : 1
retrieves values corresponding -> to : 1
values corresponding to -> an : 1
corresponding to an -> array : 1
to an array -> of : 1
of the request -> should : 1
the request should -> be : 3
request should be -> in : 3
should be in -> the : 3
should be in -> format : 3
in the inserts -> a : 1
the inserts a -> collection : 1
inserts a collection -> of : 1
collection of pairs -> into : 1
of pairs into -> the : 1
pairs into the -> the : 1
into the the -> request : 1
the the request -> should : 2
in the deletes -> an : 1
the deletes an -> array : 1
deletes an array -> of : 1
array of keys -> and : 1
array of keys -> as : 1
of keys and -> their : 1
keys and their -> corresponding : 1
their corresponding values -> from : 1
corresponding values from -> the : 1
the have a -> look : 1
have a look -> at : 1
at the defines -> the : 1
the defines the -> entry : 1
defines the entry -> point : 1
the entry point -> for : 1
point for the -> console : 1
for the console -> nominmax : 1
the console nominmax -> nominmax : 1
console nominmax nominmax -> include : 1
nominmax nominmax include -> using : 1
nominmax include using -> namespace : 1
include using namespace -> using : 1
using namespace the -> following : 1
using namespace the -> we : 1
namespace the following -> code : 1
following code dumps -> a : 1
code dumps a -> json : 1
dumps a json -> to : 1
a json to -> the : 1
json to the -> void : 1
the void const -> wcout : 1
void const wcout -> a : 1
const wcout a -> workhorse : 1
wcout a workhorse -> routine : 1
a workhorse routine -> to : 1
workhorse routine to -> perform : 1
routine to perform -> an : 1
perform an action -> on : 1
action on the -> request : 1
on the request -> data : 1
the request data -> type : 1
request data type -> takes : 1
data type takes -> a : 1
type takes a -> lambda : 1
takes a lambda -> as : 1
a lambda as -> parameter : 1
lambda as parameter -> along : 1
as parameter along -> with : 1
parameter along with -> request : 1
along with request -> type : 1
with request type -> the : 1
request type the -> lambda : 1
type the lambda -> should : 1
the lambda should -> contain : 1
lambda should contain -> the : 1
should contain the -> action : 1
contain the action -> it : 1
the action it -> is : 1
action it is -> or : 1
it is or -> delete : 1
is or delete -> void : 1
or delete void -> const : 1
delete void const -> auto : 1
void const auto -> result : 1
const auto result -> auto : 1
auto result auto -> const : 1
result auto const -> jvalue : 1
auto const jvalue -> if : 1
const jvalue if -> invoke : 1
jvalue if invoke -> the : 1
if invoke the -> lambda : 1
invoke the lambda -> catch : 1
the lambda catch -> const : 1
lambda catch const -> do : 1
catch const do -> exception : 1
const do exception -> processsing : 1
do exception processsing -> wcout : 1
exception processsing wcout -> is : 1
processsing wcout is -> a : 1
wcout is a -> global : 1
a global that -> takes : 1
global that takes -> as : 1
takes as a -> parameter : 1
a parameter with -> a : 1
parameter with a -> lambda : 1
with a lambda -> with : 1
a lambda with -> a : 1
lambda with a -> specific : 1
with a specific -> the : 1
specific the lambda -> takes : 1
the lambda takes -> two : 1
lambda takes two -> incoming : 1
takes two incoming -> json : 1
two incoming json -> object : 1
incoming json object -> of : 1
json object of -> the : 1
object of the -> type : 1
the type output -> json : 1
type output json -> object : 1
output json object -> that : 1
json object that -> contains : 1
object that contains -> the : 1
contains the result -> from : 1
from the lambda -> json : 1
from the lambda -> given : 1
the lambda json -> payload : 1
lambda json payload -> is : 1
json payload is -> extracted : 1
payload is extracted -> and : 1
is extracted and -> passed : 1
extracted and passed -> to : 1
and passed to -> the : 1
the once the -> data : 1
once the data -> is : 1
is the handler -> lambda : 1
the handler lambda -> is : 1
handler lambda is -> since : 1
lambda is since -> the : 1
is since the -> result : 1
since the result -> is : 1
result is passed -> by : 1
passed by we -> can : 1
by we can -> use : 1
use the resultant -> json : 1
the resultant json -> for : 1
resultant json for -> generating : 1
json for generating -> the : 1
for generating the -> http : 1
generating the http -> we : 1
the http we -> will : 1
http we will -> create : 1
create a simple -> data : 1
a simple data -> store : 1
simple data store -> to : 1
data store to -> simulate : 1
store to simulate -> an : 1
to simulate an -> a : 1
simulate an a -> mock : 1
an a mock -> data : 1
a mock data -> base : 1
mock data base -> engine : 1
data base engine -> which : 1
base engine which -> simulates : 1
engine which simulates -> a : 1
which simulates a -> db : 1
simulates a db -> in : 1
a db in -> real : 1
db in real -> one : 1
in real one -> should : 1
real one should -> use : 1
one should use -> an : 1
should use an -> industrial : 1
use an industrial -> strength : 1
industrial strength db -> class : 1
strength db class -> httpkeyvaluedbengine : 1
db class httpkeyvaluedbengine -> map : 1
class httpkeyvaluedbengine map -> which : 1
httpkeyvaluedbengine map which -> we : 1
map which we -> update : 1
which we update -> and : 1
we update and -> delete : 1
update and delete -> data : 1
and delete data -> pairs : 1
delete data pairs -> are : 1
data pairs are -> stored : 1
pairs are stored -> in : 1
are stored in -> an : 1
an stl map -> for : 1
stl map for -> the : 1
map for the -> sake : 1
sake of ease -> of : 1
of ease of -> in : 1
ease of in -> the : 1
the we initialize -> the : 1
we initialize the -> map : 1
initialize the map -> with : 1
the map with -> some : 1
map with some -> we : 1
with some we -> can : 1
some we can -> use : 1
can use and -> to : 1
use and to -> add : 1
and to add -> additional : 1
to add additional -> and : 1
add additional and -> for : 1
additional and for -> deleting : 1
and for deleting -> get : 1
for deleting get -> iterates : 1
deleting get iterates -> through : 1
get iterates through -> the : 1
iterates through the -> map : 1
through the map -> and : 1
map and stores -> the : 1
stores the data -> in : 1
in a json -> it : 1
a json it -> is : 1
json it is -> emitted : 1
it is emitted -> to : 1
is emitted to -> the : 1
to the response -> stream : 1
the response stream -> void : 1
response stream void -> auto : 1
stream void auto -> for : 1
void auto for -> const : 1
auto for const -> p : 1
for const p -> method : 1
const p method -> will : 1
p method will -> be : 1
by the http -> when : 1
the http when -> it : 1
http when it -> encounters : 1
when it encounters -> an : 2
it encounters an -> http : 1
it encounters an -> error : 1
encounters an http -> verb : 1
an http verb -> as : 1
http verb as -> part : 1
verb as part -> of : 1
of the after -> creating : 1
the after creating -> we : 1
after creating we -> stuff : 1
creating we stuff -> the : 1
we stuff the -> contents : 1
stuff the contents -> of : 1
of the storage -> map : 1
the storage map -> into : 1
storage map into -> the : 1
map into the -> resulting : 1
into the resulting -> json : 1
the resulting json -> object : 1
resulting json object -> is : 1
json object is -> returned : 2
json object is -> populated : 1
object is returned -> to : 2
is returned to -> the : 1
is returned to -> indicate : 2
returned to the -> http : 1
returned to the -> instantiates : 1
to the http -> post : 1
to the http -> there : 1
the http post -> retrieves : 1
http post retrieves -> a : 1
post retrieves a -> set : 1
retrieves a set -> of : 1
set of values -> from : 1
from the db -> the : 1
the db the -> payload : 1
db the payload -> should : 1
the payload should -> be : 1
payload should be -> in : 3
be in format -> void : 3
in format void -> const : 3
format void const -> write : 1
format void const -> for : 1
format void const -> we : 1
void const write -> to : 1
const write to -> the : 1
write to the -> console : 1
write to the -> schedule : 1
console for diagnostics -> for : 1
for diagnostics for -> const : 1
diagnostics for const -> e : 1
for const e -> if : 3
const e if -> auto : 3
e if auto -> key : 3
if auto key -> auto : 3
auto key auto -> pos : 2
auto key auto -> value : 1
key auto pos -> if : 2
auto pos if -> indicate : 1
auto pos if -> else : 1
pos if indicate -> to : 1
if indicate to -> the : 2
the client that -> key : 1
the client that -> we : 2
client that key -> is : 1
that key is -> not : 1
key is not -> found : 1
is not found -> else : 1
not found else -> store : 1
found else store -> the : 1
else store the -> key : 1
store the key -> value : 1
the key value -> pair : 1
key value pair -> in : 1
value pair in -> the : 1
pair in the -> result : 1
the result the -> result : 1
result the result -> will : 1
will be send -> back : 1
be send back -> to : 1
send back to -> the : 1
the client expects -> an : 1
client expects an -> array : 1
array of json -> values : 1
of json values -> in : 1
json values in -> the : 1
the and cycles -> through : 1
and cycles through -> each : 1
cycles through each -> element : 1
through each element -> and : 1
each element and -> retrieves : 1
element and retrieves -> the : 1
retrieves the data -> corresponding : 1
the data corresponding -> to : 1
data corresponding to -> the : 1
corresponding to the -> keys : 1
corresponding to the -> group : 1
to the keys -> the : 1
the keys the -> resultant : 1
keys the resultant -> object : 1
the resultant object -> stores : 1
the resultant object -> will : 1
resultant object stores -> the : 1
object stores the -> returned : 1
stores the returned -> if : 1
the returned if -> some : 1
returned if some -> keys : 1
if some keys -> are : 1
some keys are -> not : 1
keys are not -> present : 1
are not present -> in : 1
the a string -> is : 1
a string is -> returned : 1
string is returned -> to : 1
returned to indicate -> that : 1
returned to indicate -> the : 1
value is not -> put : 1
is not put -> updates : 1
not put updates -> if : 1
put updates if -> new : 1
updates if new -> key : 1
if new key -> is : 1
new key is -> found : 1
key is found -> inserts : 1
is found inserts -> it : 1
found inserts it -> rest : 1
inserts it rest -> payload : 1
it rest payload -> should : 1
rest payload should -> be : 2
void const for -> const : 1
const for const -> e : 1
key auto value -> if : 1
auto value if -> indicate : 1
value if indicate -> to : 1
client that we -> have : 2
created a new -> record : 1
a new record -> else : 1
a new record -> expects : 1
new record else -> indicate : 1
record else indicate -> to : 1
else indicate to -> the : 1
we have updated -> a : 1
have updated a -> new : 1
updated a new -> record : 1
new record expects -> a : 1
record expects a -> list : 1
expects a list -> of : 1
list of pairs -> in : 1
of pairs in -> json : 1
pairs in json -> the : 1
in json the -> collection : 1
json the collection -> of : 1
the collection of -> keys : 1
collection of keys -> is : 1
of keys is -> iterated : 1
keys is iterated -> to : 1
iterated to do -> the : 1
do the lookup -> into : 1
the lookup into -> the : 1
lookup into the -> if : 1
into the if -> the : 1
the if the -> key : 2
if the key -> already : 1
if the key -> is : 1
the key already -> exists : 1
key already exists -> in : 1
already exists in -> the : 1
exists in the -> the : 1
value is otherwise -> the : 1
is otherwise the -> is : 1
otherwise the is -> inserted : 1
the is inserted -> into : 1
is inserted into -> the : 1
inserted into the -> a : 1
into the a -> json : 1
the a json -> object : 1
indicate the action -> performed : 1
the action performed -> on : 1
action performed on -> each : 1
performed on each -> key : 1
on each key -> it : 1
each key it -> was : 1
key it was -> an : 1
it was an -> insert : 1
was an insert -> or : 1
an insert or -> an : 1
insert or an -> del : 1
or an del -> deletes : 1
an del deletes -> a : 1
del deletes a -> set : 1
deletes a set -> of : 1
set of records -> rest : 1
of records rest -> payload : 1
records rest payload -> should : 1
void const we -> aggregate : 1
const we aggregate -> all : 1
we aggregate all -> keys : 1
aggregate all keys -> into : 1
all keys into -> this : 1
keys into this -> set : 1
into this set -> and : 1
this set and -> delete : 1
set and delete -> in : 1
and delete in -> one : 1
delete in one -> go : 1
one go for -> const : 1
go for const -> e : 1
pos if else -> insert : 1
if else insert -> in : 1
else insert in -> to : 1
insert in to -> the : 1
in to the -> delete : 1
the delete list -> all : 1
delete list all -> for : 1
list all for -> const : 1
all for const -> key : 1
for const key -> expects : 1
const key expects -> an : 1
key expects an -> array : 1
of keys as -> the : 1
keys as the -> and : 1
and it cycles -> through : 1
it cycles through -> the : 1
through the array -> to : 1
the array to -> retrieve : 1
array to retrieve -> the : 1
retrieve the if -> the : 1
the key is -> already : 1
key is already -> present : 1
is already present -> in : 1
already present in -> the : 1
the the keys -> are : 1
the keys are -> added : 1
keys are added -> to : 1
to a delete -> list : 1
a delete list -> an : 1
delete list an -> stl : 1
list an stl -> a : 1
an stl a -> json : 1
stl a json -> object : 1
object is populated -> with : 1
is populated with -> the : 1
populated with the -> kind : 1
with the kind -> of : 1
kind of action -> taken : 1
of action taken -> on : 1
action taken on -> a : 1
taken on a -> the : 1
on a the -> resultant : 1
a the resultant -> object : 1
resultant object will -> be : 1
be returned to -> the : 1
to the instantiates -> the : 1
the instantiates the -> global : 1
instantiates the global -> instance : 1
the global instance -> of : 1
global instance of -> db : 1
instance of db -> httpkeyvaluedbengine : 1
of db httpkeyvaluedbengine -> that : 1
db httpkeyvaluedbengine that -> we : 1
httpkeyvaluedbengine that we -> have : 1
have a functional -> simulated : 1
a functional simulated -> database : 1
functional simulated database -> we : 1
simulated database we -> will : 1
database we will -> use : 1
use the functionality -> of : 1
the functionality of -> the : 1
functionality of the -> database : 1
of the database -> to : 1
the database to -> the : 1
database to the -> outside : 1
to the outside -> world : 1
to the outside -> have : 1
to the outside -> sometimes : 1
the outside world -> as : 1
outside world as -> a : 1
world as a -> rest : 1
as a rest -> service : 1
a rest service -> endpoint : 2
rest service endpoint -> with : 1
rest service endpoint -> to : 1
service endpoint with -> the : 1
endpoint with the -> and : 1
the http handlers -> will : 1
http handlers will -> just : 1
handlers will just -> delegate : 1
will just delegate -> the : 1
just delegate the -> call : 1
delegate the call -> to : 1
code is very -> similar : 1
to the code -> that : 1
the code that -> we : 1
code that we -> wrote : 1
that we wrote -> for : 1
we wrote for -> the : 1
wrote for the -> return : 1
for the return -> return : 1
the return return -> void : 1
return return void -> void : 1
return void void -> void : 1
void void previous -> code : 1
void previous code -> binds : 1
previous code binds -> the : 1
code binds the -> http : 1
binds the http -> verbs : 1
the http verbs -> to : 1
verbs to the -> corresponding : 1
the corresponding the -> bodies : 1
corresponding the bodies -> of : 1
the bodies of -> the : 1
bodies of the -> handlers : 1
of the handlers -> are : 1
the handlers are -> similar : 1
the handlers are -> just : 1
handlers are similar -> in : 1
are similar in -> as : 1
similar in as -> the : 1
in as the -> handlers : 1
as the handlers -> are : 1
handlers are just -> delegating : 1
are just delegating -> the : 1
just delegating the -> call : 1
delegating the call -> to : 1
the void void -> void : 1
void void create -> an : 1
void create an -> instance : 1
the server void -> auto : 1
server void auto -> addr : 1
void auto addr -> ucout : 1
auto addr ucout -> for : 1
addr ucout for -> requests : 1
requests addr void -> the : 1
addr void the -> entrypoint : 1
void the entrypoint -> function : 1
the entrypoint function -> int : 1
port if address -> enter : 1
if address enter -> to : 1
enter to return -> code : 1
to return code -> for : 1
return code for -> the : 1
for the http -> controller : 1
the http controller -> is : 1
http controller is -> not : 1
controller is not -> different : 1
is not different -> from : 1
not different from -> which : 1
different from which -> we : 1
which we wrote -> earlier : 1
we wrote earlier -> in : 1
wrote earlier in -> the : 1
earlier in the -> we : 1
the we provided -> the : 1
we provided the -> listing : 1
provided the listing -> here : 1
the listing here -> for : 1
listing here for -> the : 1
here for the -> sake : 1
sake of with -> we : 1
of with we -> have : 1
how to expose -> a : 1
to expose a -> rest : 1
expose a rest -> service : 1
expose a rest -> endpoint : 1
service endpoint to -> the : 1
endpoint to the -> outside : 1
the outside have -> already : 1
outside have already -> discussed : 1
have already discussed -> how : 1
already discussed how -> we : 1
discussed how we -> can : 1
we can expose -> a : 1
can expose a -> rest : 1
a rest endpoint -> and : 1
rest endpoint and -> how : 1
endpoint and how -> to : 1
to write handlers -> for : 1
write handlers for -> the : 1
handlers for the -> various : 1
for the various -> http : 1
the various http -> in : 1
various http in -> a : 1
http in a -> microservices : 1
in a microservices -> architecture : 1
in a microservices -> there : 1
a microservices architecture -> we : 1
microservices architecture we -> will : 1
architecture we will -> have : 1
will have lots -> of : 1
have lots of -> rest : 1
lots of rest -> endpoints : 1
of rest endpoints -> deployed : 1
rest endpoints deployed -> the : 1
endpoints deployed the -> process : 1
deployed the process -> of : 1
the process of -> breaking : 1
the process of -> provisioning : 1
process of breaking -> a : 1
of breaking a -> service : 1
breaking a service -> into : 1
a service into -> a : 1
service into a -> microservice : 1
into a microservice -> is : 1
a microservice is -> an : 1
microservice is an -> art : 1
is an art -> that : 1
an art that -> is : 1
art that is -> highly : 1
that is highly -> dependent : 1
is highly dependent -> upon : 1
highly dependent upon -> the : 1
dependent upon the -> microservices : 1
upon the microservices -> are : 1
the microservices are -> exposed : 1
microservices are exposed -> to : 1
are exposed to -> the : 1
the outside sometimes -> through : 1
outside sometimes through -> aggregation : 1
sometimes through aggregation -> the : 1
through aggregation the -> aggregation : 1
aggregation the aggregation -> services : 1
the aggregation services -> are : 1
aggregation services are -> a : 1
services are a -> candidate : 1
are a candidate -> for : 1
candidate for writing -> reactive : 1
writing reactive client -> logic : 1
reactive client logic -> for : 1
client logic for -> accessing : 1
logic for accessing -> the : 1
accessing the rest -> since : 1
the rest since -> network : 1
rest since network -> calls : 1
since network calls -> are : 1
network calls are -> the : 1
calls are the -> reactive : 1
are the reactive -> programming : 1
model is natural -> rest : 1
is natural rest -> services : 1
natural rest services -> using : 1
the rxcurl written -> by : 1
rxcurl written by -> kirk : 1
by kirk originally -> had : 1
kirk originally had -> support : 1
originally had support -> only : 1
had support only -> for : 1
support only for -> the : 1
only for the -> and : 1
for the and -> the : 2
and the twitter -> analysis : 1
the twitter analysis -> app : 1
analysis app only -> warrants : 1
app only warrants -> the : 1
only warrants the -> authors : 1
warrants the authors -> of : 1
book have added -> support : 1
added support for -> the : 1
code snippets help -> us : 1
snippets help us -> to : 1
us to support -> the : 1
support the you -> can : 1
source of to -> see : 1
of to see -> the : 1
see the necessary -> changes : 1
the necessary changes -> to : 1
necessary changes to -> support : 1
changes to support -> additional : 1
to support additional -> using : 1
support additional using -> namespace : 1
additional using namespace -> using : 1
namespace the we -> can : 1
we can issue -> requests : 1
can issue requests -> by : 1
issue requests by -> calling : 1
requests by calling -> the : 1
the method url -> http : 1
method url http -> body : 1
url http body -> of : 1
http body of -> the : 1
of the string -> url : 1
the string url -> string : 1
string url string -> string : 1
url string string -> body : 1
string string body -> auto : 1
string body auto -> request : 1
body auto request -> return : 1
request return previous -> code : 1
previous code creates -> a : 1
previous code creates -> an : 1
creates a object -> by : 1
a object by -> composing : 1
object by composing -> the : 1
composing the creation -> of : 1
creation of the -> http : 1
http request and -> a : 1
request and a -> function : 1
function to map -> from : 1
to map from -> to : 1
map from to -> the : 1
the http there -> is : 1
http there is -> an : 1
option to return -> chunks : 1
to return chunks -> of : 1
return chunks of -> we : 1
chunks of we -> are : 1
we are expecting -> only : 1
are expecting only -> a : 1
expecting only a -> small : 1
only a small -> amount : 1
a small amount -> of : 1
amount of data -> make : 1
of data make -> a : 1
data make a -> blocking : 1
previous code makes -> a : 1
code makes a -> blocking : 1
makes a blocking -> call : 1
call to we -> created : 1
to we created -> the : 1
we created the -> body : 1
created the body -> of : 1
of the concatenates -> the : 1
the concatenates the -> content : 1
concatenates the content -> to : 1
content to form -> another : 1
to form another -> in : 1
form another in -> real : 1
another in real -> we : 1
real we can -> make : 1
we can make -> this : 1
can make this -> call : 1
make this call -> in : 1
this call in -> an : 1
call in an -> asynchronous : 1
an asynchronous manner -> as : 1
asynchronous manner as -> that : 1
manner as that -> involves : 1
as that involves -> a : 1
that involves a -> little : 1
involves a little -> more : 1
a little more -> programming : 1
little more programming -> the : 1
more programming the -> code : 1
programming the code -> listing : 1
code listing fit -> in : 1
listing fit in -> the : 1
fit in the -> available : 1
in the available -> page : 1
the available page -> retrieve : 1
available page retrieve -> the : 1
page retrieve the -> html : 1
temp html return -> the : 1
html return the -> int : 1
return the int -> set : 1
the int set -> the : 1
int set the -> url : 1
the url and -> create : 1
url and create -> the : 1
and create the -> rxcurl : 1
create the rxcurl -> object : 1
the rxcurl object -> string : 1
rxcurl object string -> url : 1
object string url -> factory : 1
string url factory -> default : 1
url factory default -> header : 1
factory default header -> values : 1
default header values -> invoke : 1
header values invoke -> get : 1
values invoke get -> to : 1
invoke get to -> retrieve : 1
get to retrieve -> the : 1
retrieve the contents -> string : 1
the contents string -> html : 1
contents string html -> cout : 1
string html cout -> html : 1
html cout html -> retrieve : 1
html cout html -> add : 1
html cout html -> see : 1
html cout html -> html : 1
cout html retrieve -> values : 1
html retrieve values -> for : 1
retrieve values for -> the : 1
values for the -> following : 1
the following string -> body : 1
following string body -> html : 1
string body html -> cout : 1
body html cout -> html : 3
cout html add -> new : 1
html add new -> values : 1
add new values -> using : 1
new values using -> put : 1
values using put -> body : 1
using put body -> html : 1
put body html -> cout : 1
cout html see -> whether : 1
html see whether -> values : 1
see whether values -> has : 1
whether values has -> been : 1
values has been -> added : 1
has been added -> html : 1
been added html -> cout : 1
added html cout -> database : 1
html cout database -> cout : 2
cout database cout -> html : 2
database cout html -> delete : 1
database cout html -> method : 1
cout html delete -> a : 1
html delete a -> particular : 1
delete a particular -> record : 1
a particular record -> body : 1
particular record body -> html : 1
record body html -> cout : 1
cout html html -> cout : 1
html html cout -> database : 1
cout html method -> demonstrates : 1
html method demonstrates -> how : 1
method demonstrates how -> we : 1
invoke the method -> created : 1
the method created -> by : 1
method created by -> the : 1
by the code -> has : 1
the code has -> been : 1
code has been -> provided : 1
has been provided -> to : 1
been provided to -> show : 1
provided to show -> how : 1
show how you -> can : 1
leverage the rxcurl -> we : 1
the rxcurl we -> can : 1
rxcurl we can -> use : 1
library to issue -> multiple : 1
to issue multiple -> requests : 1
issue multiple requests -> asynchronously : 1
multiple requests asynchronously -> and : 1
requests asynchronously and -> wait : 1
asynchronously and wait -> for : 1
wait for their -> completion : 1
for their completion -> as : 1
their completion as -> word : 1
completion as word -> about : 1
as word about -> the : 1
reactive microservices have -> learned : 1
microservices have learned -> how : 1
write a microservices -> controller : 1
a microservices controller -> using : 1
microservices controller using -> the : 1
controller using the -> rest : 1
the rest maybe -> we : 1
rest maybe we -> can : 1
maybe we can -> say : 1
we can say -> that : 1
can say that -> the : 1
say that the -> server : 1
that the server -> we : 1
server we just -> implemented : 1
we just implemented -> can : 1
just implemented can -> be : 1
implemented can be -> a : 1
be a microservice -> in : 1
a microservice in -> a : 1
microservice in a -> microservices : 1
a microservices there -> will : 1
microservices there will -> be : 1
will be multiple -> services : 1
be multiple services -> hosted : 1
multiple services hosted -> in : 1
services hosted in -> different : 1
hosted in different -> boxes : 1
in different boxes -> containers : 1
different boxes containers -> or : 1
boxes containers or -> virtual : 1
containers or virtual -> and : 1
or virtual and -> the : 1
virtual and the -> microservices : 1
and the microservices -> controller : 1
the microservices controller -> will : 2
microservices controller will -> access : 1
microservices controller will -> aggregate : 1
controller will access -> these : 1
will access these -> independently : 1
access these independently -> deployed : 1
these independently deployed -> services : 1
independently deployed services -> to : 1
deployed services to -> cater : 1
services to cater -> to : 1
to cater to -> the : 1
cater to the -> the : 1
the the microservices -> controller : 1
controller will aggregate -> output : 1
will aggregate output -> from : 1
aggregate output from -> different : 1
output from different -> services : 1
from different services -> to : 1
different services to -> send : 1
services to send -> as : 1
to send as -> a : 1
send as a -> response : 1
as a response -> to : 1
a response to -> the : 3
response to the -> a : 1
response to the -> rest : 1
response to the -> ui : 1
the a basic -> architecture : 1
a basic architecture -> for : 1
basic architecture for -> a : 1
architecture for a -> microservice : 1
for a microservice -> application : 1
a microservice application -> is : 1
microservice application is -> shown : 1
application is shown -> in : 1
is shown in -> the : 1
shown in the -> following : 1
following the previous -> the : 1
previous the rest -> client : 1
the rest client -> makes : 1
rest client makes -> an : 1
client makes an -> http : 1
makes an http -> call : 1
an http call -> to : 1
http call to -> the : 1
to the microservices -> which : 1
the microservices which -> wraps : 1
microservices which wraps -> the : 1
which wraps the -> controller : 1
wraps the controller -> invokes : 1
the controller invokes -> three : 1
controller invokes three -> microservices : 1
invokes three microservices -> to : 1
three microservices to -> retrieve : 1
microservices to retrieve -> the : 1
retrieve the and -> the : 1
and the resultant -> data : 1
the resultant data -> will : 1
resultant data will -> be : 1
will be assembled -> or : 1
be assembled or -> merged : 1
assembled or merged -> to : 1
or merged to -> provide : 1
merged to provide -> a : 1
provide a response -> to : 1
rest the endpoints -> can : 1
the endpoints can -> be : 1
endpoints can be -> deployed : 1
can be deployed -> in : 1
be deployed in -> a : 1
deployed in a -> container : 1
in a container -> or : 1
a container or -> in : 1
container or in -> different : 1
or in different -> using : 1
in different using -> technologies : 1
different using technologies -> such : 1
using technologies such -> as : 1
technologies such as -> to : 1
such as to -> martin : 1
as to martin -> term : 1
to martin term -> has : 1
martin term has -> sprung : 1
term has sprung -> up : 1
has sprung up -> over : 1
sprung up over -> the : 1
up over the -> last : 1
over the last -> few : 1
the last few -> years : 1
last few years -> to : 1
few years to -> describe : 1
years to describe -> a : 1
to describe a -> particular : 1
describe a particular -> way : 1
a particular way -> of : 1
particular way of -> designing : 1
way of designing -> software : 1
of designing software -> applications : 1
designing software applications -> as : 1
software applications as -> suites : 1
applications as suites -> of : 1
as suites of -> independently : 1
suites of independently -> deployable : 1
of independently deployable -> while : 1
independently deployable while -> there : 1
deployable while there -> is : 1
while there is -> no : 1
is no precise -> definition : 1
no precise definition -> of : 1
precise definition of -> this : 1
definition of this -> architectural : 1
of this architectural -> there : 1
this architectural there -> are : 1
architectural there are -> certain : 1
are certain common -> characteristics : 1
certain common characteristics -> around : 1
common characteristics around -> organization : 1
characteristics around organization -> around : 1
around organization around -> business : 1
organization around business -> automated : 1
around business automated -> intelligence : 1
business automated intelligence -> in : 1
automated intelligence in -> the : 1
intelligence in the -> and : 1
the and decentralized -> control : 1
and decentralized control -> of : 1
decentralized control of -> languages : 1
control of languages -> and : 1
of languages and -> topic : 1
languages and topic -> of : 1
and topic of -> microservices : 1
topic of microservices -> architecture : 1
of microservices architecture -> is : 1
microservices architecture is -> a : 1
architecture is a -> subject : 1
subject in its -> own : 1
its own and -> the : 1
own and the -> topic : 1
and the topic -> warrants : 1
the topic warrants -> a : 1
topic warrants a -> book : 1
warrants a book -> of : 1
of its what -> we : 1
its what we -> have : 1
what we have -> covered : 1
have covered here -> is : 1
covered here is -> how : 1
here is how -> we : 1
is how we -> can : 1
leverage the programming -> language : 1
programming language to -> write : 1
language to write -> web : 1
to write web -> applications : 1
write web applications -> in : 1
web applications in -> this : 1
applications in this -> the : 1
this the description -> given : 1
the description given -> here : 1
description given here -> is : 1
here is meant -> to : 1
meant to point -> readers : 1
to point readers -> to : 1
point readers to -> the : 1
to the right -> the : 1
the right the -> reactive : 1
right the reactive -> programming : 1
model is suitable -> for : 1
suitable for aggregating -> information : 1
for aggregating information -> from : 1
aggregating information from -> different : 1
information from different -> service : 1
from different service -> endpoints : 1
different service endpoints -> and : 1
service endpoints and -> presenting : 1
endpoints and presenting -> it : 1
and presenting it -> uniformly : 1
presenting it uniformly -> to : 1
it uniformly to -> the : 1
uniformly to the -> the : 1
the the aggregation -> of : 1
the aggregation of -> the : 1
the aggregation of -> data : 1
aggregation of the -> services : 1
of the services -> is : 1
the services is -> the : 1
services is the -> key : 1
is the key -> which : 1
the key which -> ought : 1
key which ought -> to : 1
which ought to -> be : 1
ought to be -> researched : 1
to be researched -> by : 1
be researched by -> the : 1
researched by the -> we : 1
the we talk -> about : 1
we talk about -> microservices : 1
talk about microservices -> we : 1
about microservices we -> need : 1
microservices we need -> to : 1
understand the following -> orchestration : 1
the following orchestration -> and : 1
following orchestration and -> service : 1
orchestration and service -> web : 1
and service web -> service : 1
service web service -> will : 1
web service will -> discuss : 1
service will discuss -> them : 1
will discuss them -> in : 1
discuss them in -> detail : 1
them in detail -> in : 1
following and services -> are : 1
and services are -> mostly : 1
services are mostly -> services : 1
are mostly services -> and : 1
mostly services and -> are : 1
services and are -> written : 1
are written with -> a : 1
written with a -> mindset : 1
with a mindset -> in : 1
a mindset in -> which : 1
mindset in which -> a : 1
in which a -> network : 1
which a network -> roundtrip : 1
a network roundtrip -> is : 1
network roundtrip is -> the : 1
roundtrip is the -> core : 1
the core to -> reduce : 1
core to reduce -> the : 1
to reduce the -> network : 1
reduce the network -> developers : 1
the network developers -> often : 1
network developers often -> created : 1
developers often created -> payload : 1
often created payload -> formats : 1
created payload formats -> that : 1
payload formats that -> were : 1
formats that were -> composite : 1
that were composite -> in : 1
were composite in -> an : 1
composite in an -> endpoint : 1
in an endpoint -> or : 1
an endpoint or -> a : 1
endpoint or a -> uri : 1
or a uri -> was : 1
a uri was -> used : 1
uri was used -> to : 1
was used to -> handle : 1
used to handle -> more : 1
to handle more -> than : 1
handle more than -> one : 1
than one and -> violated : 1
one and violated -> the : 1
and violated the -> principle : 1
violated the principle -> of : 1
the principle of -> separation : 1
principle of separation -> of : 1
of separation of -> the : 1
separation of the -> microservices : 1
of the microservices -> architecture : 1
the microservices architecture -> expects : 1
microservices architecture expects -> the : 1
architecture expects the -> services : 1
expects the services -> to : 1
the services to -> perform : 1
services to perform -> a : 1
to perform a -> single : 1
perform a single -> and : 1
a single and -> payload : 1
single and payload -> formats : 1
and payload formats -> are : 1
payload formats are -> tailored : 1
formats are tailored -> for : 1
are tailored for -> in : 1
tailored for in -> this : 1
for in this -> the : 1
this the service -> becomes : 1
the service becomes -> persistence : 1
service becomes persistence -> is : 1
becomes persistence is -> a : 1
persistence is a -> term : 1
is a term -> used : 1
a term used -> to : 1
term used to -> denote : 1
used to denote -> the : 1
to denote the -> use : 1
denote the use -> of : 1
use of multiple -> storage : 1
of multiple storage -> technologies : 1
multiple storage technologies -> while : 1
storage technologies while -> persisting : 1
technologies while persisting -> the : 1
while persisting the -> the : 1
persisting the the -> term : 1
the the term -> come : 1
the term come -> from : 1
term come from -> the : 1
from the term -> where : 1
the term where -> the : 1
term where the -> choice : 1
where the choice -> of : 1
choice of programming -> language : 1
of programming language -> is : 1
programming language is -> determined : 1
language is determined -> by : 1
determined by the -> in : 1
case of polyglot -> we : 2
of polyglot we -> mix : 1
of polyglot we -> have : 1
polyglot we mix -> different : 1
we mix different -> programming : 1
mix different programming -> the : 1
different programming the -> authors : 1
programming the authors -> have : 1
the authors have -> come : 1
authors have come -> across : 1
have come across -> systems : 1
come across systems -> that : 1
across systems that -> use : 1
systems that use -> java : 1
that use java -> for : 1
use java for -> the : 1
java for the -> application : 1
the application server -> scala : 1
application server scala -> for : 1
server scala for -> stream : 1
scala for stream -> for : 1
for stream for -> for : 1
stream for for -> writing : 1
for for writing -> the : 1
for writing the -> web : 1
writing the web -> of : 1
the web of -> for : 1
web of for -> the : 1
of for the -> in : 1
for the in -> the : 1
polyglot we have -> a : 1
have a choice -> of : 1
a choice of -> using : 1
choice of using -> document : 1
of using document -> graph : 1
using document graph -> columnar : 1
document graph columnar -> and : 1
graph columnar and -> even : 1
columnar and even -> time : 1
and even time -> series : 1
even time series -> portal : 1
time series portal -> is : 1
series portal is -> a : 1
portal is a -> classic : 1
is a classic -> example : 1
a classic example -> of : 1
classic example of -> a : 1
a system where -> polyglot : 1
system where polyglot -> persistence : 1
where polyglot persistence -> can : 1
polyglot persistence can -> be : 1
persistence can be -> really : 1
can be really -> such : 1
be really such -> a : 1
really such a -> platform : 1
such a platform -> will : 1
a platform will -> deal : 1
platform will deal -> with : 1
deal with many -> types : 1
with many types -> of : 1
many types of -> data : 1
types of data -> shopping : 1
of data shopping -> and : 1
data shopping and -> completed : 1
shopping and completed -> instead : 1
and completed instead -> of : 1
completed instead of -> trying : 1
instead of trying -> to : 1
of trying to -> store : 1
trying to store -> all : 1
to store all -> this : 1
store all this -> data : 1
all this data -> in : 1
this data in -> one : 1
data in one -> we : 1
in one we -> might : 1
one we might -> use : 1
we might use -> rdbms : 1
might use rdbms -> record : 1
use rdbms record -> dbs : 1
rdbms record dbs -> and : 1
record dbs and -> a : 1
dbs and a -> document : 1
and a document -> database : 1
a document database -> for : 1
document database for -> storing : 1
database for storing -> and : 1
for storing and -> so : 1
storing and so -> the : 1
so the right -> persistence : 1
the right persistence -> model : 1
right persistence model -> for : 1
persistence model for -> your : 1
model for your -> is : 1
for your is -> the : 1
your is the -> main : 1
is the main -> motto : 1
the main motto -> biggest : 1
main motto biggest -> difference : 1
motto biggest difference -> between : 1
biggest difference between -> microservices : 1
difference between microservices -> architecture : 1
between microservices architecture -> and : 1
microservices architecture and -> traditional : 1
architecture and traditional -> soa : 1
and traditional soa -> is : 1
traditional soa is -> in : 1
soa is in -> the : 1
is in the -> area : 1
in the area -> of : 1
area of with -> the : 1
with the evolution -> of : 1
the evolution of -> container : 1
evolution of container -> we : 1
of container we -> can : 1
container we can -> deploy : 1
we can deploy -> services : 1
can deploy services -> independently : 1
deploy services independently -> and : 1
services independently and -> in : 1
services independently and -> aggregate : 1
independently and in -> isolation : 1
and in isolation -> very : 1
in isolation very -> the : 1
isolation very the -> devops : 1
very the devops -> movement : 1
the devops movement -> helped : 1
devops movement helped -> a : 1
movement helped a -> lot : 1
helped a lot -> in : 1
lot in popularizing -> the : 1
in popularizing the -> independent : 1
popularizing the independent -> deployment : 1
the independent deployment -> model : 1
independent deployment model -> of : 1
deployment model of -> services : 1
model of services -> and : 1
of services and -> we : 1
services and we -> can : 1
we can now -> automate : 1
can now automate -> the : 1
now automate the -> process : 1
automate the process -> of : 1
process of provisioning -> a : 1
of provisioning a -> vm : 1
provisioning a vm -> and : 1
a vm and -> associated : 1
vm and associated -> containers : 1
and associated containers -> with : 1
associated containers with -> additional : 1
containers with additional -> virtual : 1
with additional virtual -> load : 1
additional virtual load -> and : 1
virtual load and -> auto : 1
load and auto -> scaling : 1
and auto scaling -> in : 1
auto scaling in -> deployment : 1
scaling in deployment -> policies : 1
in deployment policies -> attached : 1
deployment policies attached -> to : 1
policies attached to -> a : 1
attached to a -> cloud : 1
to a cloud -> such : 1
a cloud such -> as : 1
cloud such as -> aws : 1
such as aws -> or : 1
as aws or -> google : 1
aws or google -> policies : 1
or google policies -> help : 1
google policies help -> you : 1
policies help you -> deploy : 1
help you deploy -> the : 1
you deploy the -> microservices : 1
deploy the microservices -> in : 1
the microservices in -> an : 1
microservices in an -> automatic : 1
in an automatic -> manner : 1
an automatic manner -> a : 1
automatic manner a -> developing : 1
manner a developing -> applications : 1
a developing applications -> using : 1
developing applications using -> the : 1
using the microservice -> architectural : 1
the microservice architectural -> the : 1
microservice architectural the -> notion : 1
architectural the notion -> of : 1
notion of container -> technology : 1
of container technology -> will : 1
container technology will -> pop : 1
technology will pop -> up : 1
pop up again -> and : 1
up again and -> an : 1
again and an -> associated : 1
and an associated -> called : 1
an associated called -> is : 1
associated called is -> brought : 1
called is brought -> into : 1
is brought into -> the : 1
brought into the -> realm : 1
into the realm -> of : 1
the realm of -> covering : 1
realm of covering -> devops : 1
of covering devops -> and : 1
covering devops and -> containerization : 1
devops and containerization -> cluster : 1
and containerization cluster -> in : 1
containerization cluster in -> the : 1
cluster in the -> context : 1
context of independent -> deployment : 1
of independent deployment -> is : 1
independent deployment is -> beyond : 1
deployment is beyond -> the : 1
you can search -> for : 1
can search for -> and : 1
search for and -> as : 1
for and as -> to : 1
and as to -> gain : 1
as to gain -> more : 1
insight into these -> orchestration : 1
into these orchestration -> and : 1
these orchestration and -> start : 1
orchestration and start -> with : 1
and start with -> service : 1
start with service -> you : 1
with service you -> put : 1
service you put -> together : 1
you put together -> several : 1
put together several -> services : 1
together several services -> by : 1
several services by -> a : 1
services by a -> fixed : 1
by a fixed -> this : 1
a fixed this -> logic : 1
fixed this logic -> is : 1
this logic is -> described : 1
logic is described -> in : 1
is described in -> a : 1
described in a -> single : 1
in a single -> but : 1
a single but -> we : 1
single but we -> might : 1
but we might -> deploy : 1
we might deploy -> multiple : 1
might deploy multiple -> instances : 1
deploy multiple instances -> of : 1
instances of the -> same : 1
the same services -> for : 1
same services for -> an : 1
services for an -> aggregator : 1
for an aggregator -> service : 1
an aggregator service -> will : 2
aggregator service will -> call : 1
aggregator service will -> spawn : 1
service will call -> these : 1
will call these -> services : 1
call these services -> independently : 1
these services independently -> and : 1
independently and aggregate -> the : 1
and aggregate the -> data : 1
aggregate the data -> for : 1
the data for -> the : 1
data for the -> downstream : 1
for the downstream -> on : 1
the downstream on -> the : 1
downstream on the -> other : 1
the other in -> service : 1
other in service -> the : 1
in service the -> decision : 1
service the decision -> logic : 1
the decision logic -> is : 1
decision logic is -> distributed : 1
logic is distributed -> with : 1
is distributed with -> no : 1
distributed with no -> centralized : 1
with no centralized -> there : 1
no centralized there -> is : 1
centralized there is -> no : 1
is no centralized -> a : 1
no centralized a -> call : 1
centralized a call -> to : 1
to the service -> will : 1
the service will -> trigger : 1
service will trigger -> multiple : 1
will trigger multiple -> calls : 1
trigger multiple calls -> between : 1
multiple calls between -> the : 1
calls between the -> before : 1
between the before -> the : 1
before the data -> reaches : 1
the data reaches -> the : 1
data reaches the -> downstream : 1
reaches the downstream -> service : 1
the downstream service -> choreography : 1
downstream service choreography -> requires : 1
service choreography requires -> more : 1
choreography requires more -> effort : 1
requires more effort -> than : 1
more effort than -> implementing : 1
effort than implementing -> you : 1
than implementing you -> can : 1
implementing you can -> read : 1
more about service -> orchestration : 1
about service orchestration -> and : 1
service orchestration and -> choreography : 1
orchestration and choreography -> by : 1
and choreography by -> searching : 1
choreography by searching -> the : 1
the web service -> processing : 1
web service processing -> of : 1
service processing of -> web : 1
processing of web -> requests : 1
of web requests -> is : 1
web requests is -> nicely : 1
requests is nicely -> mapped : 1
is nicely mapped -> to : 1
nicely mapped to -> the : 1
mapped to the -> reactive : 1
to the reactive -> programming : 1
case of applications -> with : 1
of applications with -> responsive : 1
of applications with -> tree : 1
applications with responsive -> we : 1
with responsive we -> typically : 1
responsive we typically -> make : 1
we typically make -> a : 1
typically make a -> call : 1
make a call -> to : 1
the server an -> aggregator : 1
server an aggregator -> service : 1
service will spawn -> a : 1
will spawn a -> series : 1
spawn a series -> of : 1
series of requests -> the : 1
of requests the -> resulting : 1
requests the resulting -> responses : 1
the resulting responses -> are : 1
resulting responses are -> aggregated : 1
responses are aggregated -> to : 1
are aggregated to -> give : 1
aggregated to give -> a : 1
to give a -> response : 1
give a response -> to : 1
to the ui -> the : 1
the ui the -> modified : 1
ui the modified -> can : 1
the modified can -> be : 1
modified can be -> used : 1
as a mechanism -> to : 1
mechanism to invoke -> multiple : 1
to invoke multiple -> this : 1
invoke multiple this -> we : 1
multiple this we -> covered : 1
covered how the -> rx : 1
microservices using as -> part : 1
using as part -> of : 1
the we introduced -> you : 1
we introduced you -> to : 1
introduced you to -> the : 1
programming the rest -> sdk : 1
an asynchronous programming -> model : 1
programming model based -> on : 1
model based on -> a : 1
on a technique -> called : 1
technique called task -> continuation : 1
called task continuation -> while : 1
task continuation while -> writing : 1
continuation while writing -> to : 1
while writing to -> write : 1
writing to write -> rest : 1
to write rest -> we : 1
write rest we -> leveraged : 1
rest we leveraged -> kirk : 1
we leveraged kirk -> with : 1
leveraged kirk with -> some : 1
kirk with some -> modifications : 1
with some modifications -> to : 1
some modifications to -> support : 1
modifications to support -> the : 1
wrote a rest -> server : 1
a rest server -> and : 1
rest server and -> consumed : 1
server and consumed -> it : 1
and consumed it -> in : 1
consumed it in -> a : 1
reactive the next -> we : 1
to handle errors -> and : 1
to handle errors -> as : 1
handle errors and -> exceptions : 1
errors and exceptions -> using : 1
errors and exceptions -> decides : 1
and exceptions using -> the : 1
exceptions using the -> constructs : 1
using the constructs -> available : 1
the constructs available -> in : 1
constructs available in -> the : 1
in the rxcpp -> streams : 1
in the rxcpp -> library : 1
in the rxcpp -> programs : 1
in the rxcpp -> we : 1
the rxcpp streams -> and : 1
rxcpp streams and -> handling : 1
ground in explaining -> modern : 1
in explaining modern -> techniques : 1
explaining modern techniques -> and : 1
modern techniques and -> the : 1
techniques and the -> rxcpp : 1
rxcpp we started -> with : 1
with a set -> of : 1
set of prerequisites -> for : 1
of prerequisites for -> undertaking : 1
prerequisites for undertaking -> reactive : 1
for undertaking reactive -> programming : 1
undertaking reactive programming -> using : 1
using the first -> six : 1
the first six -> chapters : 1
first six chapters -> were : 1
six chapters were -> mostly : 1
chapters were mostly -> about : 1
were mostly about -> prerequisites : 1
mostly about prerequisites -> and : 1
about prerequisites and -> getting : 1
prerequisites and getting -> acclimatized : 1
and getting acclimatized -> with : 1
getting acclimatized with -> the : 1
acclimatized with the -> features : 1
with the features -> that : 1
the features that -> are : 1
features that are -> embodied : 1
that are embodied -> in : 1
are embodied in -> functional : 1
embodied in functional -> reactive : 1
in functional reactive -> programming : 1
programming in and -> in : 1
in and in -> the : 1
library in we -> have : 1
in we have -> used : 1
used the term -> functional : 1
the term functional -> reactive : 1
term functional reactive -> programming : 1
in a loose -> are : 1
a loose are -> leveraging : 1
loose are leveraging -> functional : 1
are leveraging functional -> programming : 1
leveraging functional programming -> techniques : 1
techniques to write -> reactive : 1
write reactive some -> purists : 1
reactive some purists -> differ : 1
some purists differ -> from : 1
purists differ from -> us : 1
differ from us -> on : 1
from us on -> they : 1
us on they -> do : 1
on they do -> not : 1
do not consider -> the : 1
not consider the -> rx : 1
consider the rx -> family : 1
the rx family -> of : 1
rx family of -> libraries : 1
family of libraries -> to : 1
of libraries to -> be : 1
libraries to be -> a : 1
be a complete -> implementation : 1
a complete implementation -> of : 1
complete implementation of -> functional : 1
implementation of functional -> reactive : 1
of functional reactive -> the : 1
functional reactive the -> biggest : 1
reactive the biggest -> shift : 1
the biggest shift -> a : 1
biggest shift a -> programmer : 1
shift a programmer -> has : 1
has to undergo -> is : 1
to undergo is -> the : 1
undergo is the -> mindset : 1
is the mindset -> change : 1
the mindset change -> to : 1
mindset change to -> adopt : 1
change to adopt -> a : 1
to adopt a -> declarative : 1
adopt a declarative -> programming : 1
a declarative programming -> we : 1
declarative programming we -> design : 1
programming we design -> elaborate : 1
we design elaborate -> data : 1
design elaborate data -> and : 1
elaborate data and -> write : 1
data and write -> algorithms : 1
and write algorithms -> upon : 1
write algorithms upon -> those : 1
algorithms upon those -> data : 1
upon those data -> to : 1
those data to -> write : 1
data to write -> our : 1
write our this -> is : 1
this is appropriate -> for : 1
is appropriate for -> programs : 1
appropriate for programs -> that : 1
for programs that -> manipulate : 1
programs that manipulate -> data : 1
that manipulate data -> that : 1
manipulate data that -> exists : 1
data that exists -> in : 1
that exists in -> when : 1
exists in when -> time : 1
in when time -> comes : 1
when time comes -> into : 1
time comes into -> the : 1
comes into the -> asynchrony : 1
into the asynchrony -> is : 1
the asynchrony is -> a : 1
asynchrony is a -> natural : 1
a natural in -> reactive : 1
natural in reactive -> we : 1
in reactive we -> reduce : 1
reactive we reduce -> complicated : 1
we reduce complicated -> data : 1
reduce complicated data -> structures : 1
complicated data structures -> into : 1
data structures into -> streams : 1
structures into streams -> of : 1
into streams of -> data : 1
streams of data -> and : 1
of data and -> place : 1
data and place -> operators : 1
and place operators -> in : 1
place operators in -> the : 1
the before getting -> notified : 1
before getting notified -> to : 1
getting notified to -> perform : 1
notified to perform -> some : 1
perform some based -> on : 1
seen how this -> can : 1
this can simplify -> programming : 1
can simplify programming -> in : 1
simplify programming in -> the : 1
case of gui -> web : 1
of gui web -> and : 1
gui web and -> console : 1
web and console -> using : 1
and console using -> the : 1
console using the -> programming : 1
using the programming -> our : 1
the programming our -> we : 1
programming our we -> have : 1
our we have -> omitted : 1
have omitted exception -> handling : 1
omitted exception handling -> error : 1
exception handling error -> logic : 1
handling error logic -> in : 1
error logic in -> reactive : 1
logic in reactive -> this : 1
in reactive this -> was : 1
reactive this was -> on : 1
this was on -> so : 1
was on so -> as : 1
on so as -> to : 1
so as to -> focus : 1
as to focus -> on : 1
the core reactive -> elements : 1
core reactive elements -> and : 1
reactive elements and -> their : 1
elements and their -> now : 1
and their now -> that : 1
their now that -> we : 1
have covered all -> of : 1
covered all of -> the : 1
focus on exception -> handling : 1
on exception handling -> in : 1
exception handling in -> a : 1
handling in a -> reactive : 1
a reactive before -> getting : 1
reactive before getting -> into : 1
getting into error -> and : 1
into error and -> exception : 1
and exception we -> will : 1
exception we will -> cover : 1
cover the characteristics -> of : 1
characteristics of reactive -> this : 1
following short recap -> of : 1
a reactive handling -> and : 1
reactive handling and -> error : 1
handling and error -> stream : 1
error stream short -> recap : 1
stream short recap -> of : 1
a reactive now -> live : 1
reactive now live -> in : 1
now live in -> a : 1
live in a -> world : 1
in a world -> that : 1
a world that -> warrants : 1
world that warrants -> increased : 1
that warrants increased -> scalability : 1
warrants increased scalability -> and : 1
increased scalability and -> rapid : 1
scalability and rapid -> the : 1
and rapid the -> concept : 1
rapid the concept -> of : 1
concept of reactive -> programming : 1
a need that -> has : 1
need that has -> arisen : 1
that has arisen -> to : 1
has arisen to -> meet : 1
arisen to meet -> the : 1
meet the demands -> of : 1
the demands of -> high : 1
demands of high -> and : 1
of high and -> quick : 1
high and quick -> as : 1
and quick as -> per : 1
quick as per -> the : 1
per the reactive -> manifesto : 1
the reactive manifesto -> reactive : 1
reactive manifesto reactive -> systems : 1
manifesto reactive systems -> the : 1
reactive systems the -> ability : 1
systems the ability -> a : 1
the ability a -> to : 1
ability a to -> complete : 1
a to complete -> assigned : 1
to complete assigned -> tasks : 1
complete assigned tasks -> within : 1
assigned tasks within -> a : 1
tasks within a -> responsiveness : 1
within a responsiveness -> also : 1
a responsiveness also -> means : 1
responsiveness also means -> that : 1
also means that -> the : 1
that the problems -> are : 1
the problems are -> detected : 1
problems are detected -> and : 1
are detected and -> dealt : 1
detected and dealt -> with : 1
point is the -> consistent : 1
is the consistent -> behavior : 1
the consistent behavior -> of : 1
consistent behavior of -> a : 1
behavior of a -> consistency : 1
of a consistency -> helps : 1
a consistency helps -> the : 1
consistency helps the -> users : 1
helps the users -> to : 1
the users to -> build : 1
users to build -> confidence : 1
to build confidence -> in : 1
build confidence in -> the : 1
confidence in the -> in : 1
context of changes -> in : 1
of changes in -> the : 1
in the ability -> of : 1
the ability of -> a : 2
ability of a -> system : 2
a system to -> defend : 1
a system to -> adapt : 1
system to defend -> itself : 1
to defend itself -> from : 1
defend itself from -> failure : 1
itself from failure -> is : 1
from failure is -> it : 1
failure is it -> is : 1
is it is -> correlated : 1
it is correlated -> to : 1
is correlated to -> the : 1
correlated to the -> as : 1
the as the -> consistency : 1
as the consistency -> guarantees : 1
the consistency guarantees -> error : 1
consistency guarantees error -> handling : 1
guarantees error handling -> as : 1
error handling as -> resilience : 1
handling as resilience -> is : 1
as resilience is -> achieved : 1
resilience is achieved -> by : 1
achieved by the -> isolation : 1
by the isolation -> and : 1
the isolation and -> containment : 1
isolation and containment -> of : 1
and containment of -> components : 1
containment of components -> subject : 1
of components subject -> to : 1
components subject to -> error : 1
subject to error -> situation : 1
to error situation -> and : 1
error situation and -> protecting : 1
situation and protecting -> the : 1
and protecting the -> system : 1
protecting the system -> from : 1
the system from -> elasticity : 1
system from elasticity -> is : 1
from elasticity is -> the : 1
elasticity is the -> ability : 1
is the ability -> of : 1
system to adapt -> to : 1
to adapt to -> workload : 1
adapt to workload -> changes : 1
to workload changes -> by : 1
workload changes by -> reallocating : 1
changes by reallocating -> the : 1
by reallocating the -> resources : 1
reallocating the resources -> required : 1
the resources required -> in : 1
resources required in -> an : 1
required in an -> automated : 1
in an automated -> in : 1
an automated in -> at : 1
automated in at -> each : 1
in at each -> instance : 1
at each instance -> of : 1
of the resources -> in : 1
resources in use -> match : 1
in use match -> the : 1
use match the -> demand : 1
match the demand -> as : 1
the demand as -> closely : 1
demand as closely -> as : 1
as closely as -> reactive : 1
closely as reactive -> systems : 1
as reactive systems -> achieve : 1
reactive systems achieve -> elasticity : 1
systems achieve elasticity -> by : 1
achieve elasticity by -> providing : 1
elasticity by providing -> relevant : 1
by providing relevant -> live : 1
providing relevant live -> performance : 1
relevant live performance -> systems : 1
live performance systems -> achieve : 1
performance systems achieve -> isolation : 1
systems achieve isolation -> and : 1
achieve isolation and -> the : 1
isolation and the -> loose : 1
and the loose -> coupling : 1
the loose coupling -> of : 1
loose coupling of -> systems : 1
coupling of systems -> through : 1
of systems through -> the : 1
systems through the -> ability : 1
through the ability -> to : 1
ability to communicate -> through : 1
to communicate through -> the : 1
communicate through the -> asynchronous : 1
through the asynchronous -> with : 1
the asynchronous with -> the : 1
asynchronous with the -> use : 1
with the use -> of : 1
of a message -> the : 1
a message the -> interdependent : 1
message the interdependent -> processing : 1
the interdependent processing -> of : 1
interdependent processing of -> different : 1
processing of different -> modules : 1
of different modules -> and : 1
different modules and -> commands : 1
modules and commands -> is : 1
and commands is -> made : 1
commands is made -> possible : 1
is made possible -> in : 1
made possible in -> reactive : 1
possible in reactive -> communication : 1
in reactive communication -> through : 1
reactive communication through -> architecture : 1
communication through architecture -> allows : 1
through architecture allows -> the : 1
architecture allows the -> recipients : 1
allows the recipients -> to : 1
the recipients to -> consume : 1
recipients to consume -> resources : 1
to consume resources -> only : 1
consume resources only -> when : 1
resources only when -> reactive : 1
only when reactive -> systems : 1
when reactive systems -> are : 1
reactive systems are -> made : 1
systems are made -> composable : 1
are made composable -> by : 1
made composable by -> applying : 1
composable by applying -> these : 1
by applying these -> principles : 1
applying these principles -> at : 1
these principles at -> all : 1
principles at all -> levels : 1
at all levels -> of : 1
all levels of -> their : 1
levels of their -> focus : 1
of their focus -> of : 1
their focus of -> this : 1
focus of this -> chapter : 1
be the resilient -> properties : 1
the resilient properties -> of : 1
resilient properties of -> the : 1
properties of the -> reactive : 1
the reactive through -> explaining : 1
reactive through explaining -> advanced : 1
through explaining advanced -> streams : 1
explaining advanced streams -> and : 1
advanced streams and -> error : 1
streams and error -> error : 1
and error error -> and : 1
error error and -> exception : 1
exception handling a -> no : 1
handling a no -> system : 1
a no system -> is : 1
no system is -> as : 1
system is as -> we : 1
as we discussed -> in : 1
the previous resilience -> is : 1
previous resilience is -> one : 1
resilience is one -> of : 1
of the qualities -> of : 1
the qualities of -> a : 1
qualities of a -> reactive : 1
a reactive how -> a : 1
reactive how a -> system : 1
how a system -> handles : 1
a system handles -> errors : 1
system handles errors -> and : 1
handles errors and -> exceptions : 1
and exceptions decides -> the : 1
exceptions decides the -> future : 1
decides the future -> of : 1
the future of -> that : 1
future of that -> early : 1
of that early -> detection : 1
that early detection -> and : 1
early detection and -> the : 1
detection and the -> seamless : 1
and the seamless -> handling : 1
the seamless handling -> of : 1
seamless handling of -> errors : 1
handling of errors -> makes : 1
of errors makes -> a : 1
errors makes a -> system : 1
makes a system -> consistent : 1
a system consistent -> and : 1
system consistent and -> compared : 1
consistent and compared -> to : 1
and compared to -> imperative : 1
compared to imperative -> programming : 1
to imperative programming -> the : 1
imperative programming the -> reactive : 1
programming model helps -> the : 1
model helps the -> user : 1
helps the user -> to : 1
user to handle -> errors : 1
handle errors as -> and : 1
errors as and -> when : 1
when the system -> detects : 1
the system detects -> an : 1
system detects an -> error : 1
detects an error -> or : 1
an error or -> throws : 1
error or throws -> an : 1
or throws an -> this : 1
throws an this -> we : 1
at how to -> handle : 1
to handle exceptions -> and : 1
to handle exceptions -> when : 1
handle exceptions and -> errors : 1
exceptions and errors -> by : 1
and errors by -> using : 1
errors by using -> the : 1
the rxcpp there -> are : 1
rxcpp there are -> a : 1
there are a -> variety : 1
are a variety -> of : 1
a variety of -> rxcpp : 1
variety of rxcpp -> operators : 1
of rxcpp operators -> that : 1
rxcpp operators that -> can : 1
used to react -> to : 1
to react to -> notifications : 1
react to notifications -> from : 1
to notifications from -> for : 1
notifications from for -> we : 1
from for we -> the : 1
for we the -> error : 1
we the error -> by : 1
the error by -> exiting : 1
error by exiting -> from : 1
by exiting from -> the : 1
from the sequence -> the : 1
the sequence the -> error : 1
sequence the error -> and : 1
error and switch -> over : 1
and switch over -> to : 1
switch over to -> a : 1
over to a -> backup : 1
to a backup -> observable : 1
a backup observable -> to : 1
backup observable to -> continue : 1
observable to continue -> the : 1
to continue the -> the : 1
to continue the -> propagation : 1
to continue the -> normal : 1
continue the the -> error : 1
the the error -> and : 1
error and emit -> a : 1
and emit a -> default : 1
emit a default -> the : 1
a default the -> error : 1
default the error -> and : 1
error and immediately -> try : 1
and immediately try -> to : 1
immediately try to -> restart : 1
try to restart -> the : 2
to restart the -> failed : 2
restart the failed -> the : 1
restart the failed -> after : 1
the failed the -> error : 1
failed the error -> and : 1
error and try -> to : 1
and try to -> restart : 1
the failed after -> some : 1
failed after some -> exception : 1
after some exception -> handling : 1
some exception handling -> is : 1
exception handling is -> possible : 1
handling is possible -> because : 1
possible because the -> contains : 1
because the contains -> three : 1
the contains three -> method : 1
contains three method -> is : 1
three method is -> meant : 1
method is meant -> to : 1
meant to handle -> exceptions : 1
handle exceptions when -> they : 1
exceptions when they -> or : 1
when they or -> when : 1
they or when -> they : 1
or when they -> are : 1
when they are -> thrown : 1
they are thrown -> by : 1
are thrown by -> or : 1
thrown by or -> any : 1
by or any -> operators : 1
or any operators -> in : 1
any operators in -> the : 1
in the composition -> the : 1
the composition the -> examples : 1
composition the examples -> so : 1
so far have -> ignored : 1
far have ignored -> the : 1
have ignored the -> error : 1
ignored the error -> handling : 1
the error handling -> aspects : 1
error handling aspects -> of : 1
handling aspects of -> the : 1
the the prototypes -> for : 1
the prototypes for -> the : 1
prototypes for the -> observer : 1
for the observer -> methods : 1
observer methods are -> as : 1
methods are as -> an : 1
are as an -> action : 1
as an action -> on : 1
on an an -> error : 1
an an error -> we : 1
an error we -> need : 1
error we need -> to : 1
need to handle -> it : 1
need to handle -> resource : 1
to handle it -> in : 1
handle it in -> a : 1
in a graceful -> so : 1
a graceful so -> in : 1
graceful so in -> the : 1
the rxcpp programs -> discussed : 1
rxcpp programs discussed -> in : 1
programs discussed in -> this : 1
this the programs -> were : 1
the programs were -> written : 1
were written to -> only : 1
written to only -> handle : 1
to only handle -> the : 1
only handle the -> and : 1
handle the and -> scenarios : 1
the and scenarios -> in : 1
and scenarios in -> the : 1
scenarios in the -> the : 1
function has one -> more : 1
has one more -> where : 1
one more where -> it : 1
more where it -> can : 1
where it can -> accept : 1
it can accept -> a : 1
can accept a -> lambda : 1
accept a lambda -> function : 1
lambda function for -> scenarios : 1
function for scenarios -> as : 1
for scenarios as -> look : 1
scenarios as look -> at : 1
at a simple -> example : 1
example to understand -> how : 1
to understand how -> to : 1
to understand how -> effective : 1
understand how to -> use : 1
use the error -> handler : 1
the error handler -> inside : 1
the error handler -> is : 1
error handler inside -> the : 1
handler inside the -> int : 1
inside the int -> creating : 1
the int creating -> observable : 1
int creating observable -> with : 1
int creating observable -> streams : 1
creating observable with -> an : 1
observable with an -> error : 1
with an error -> appended : 1
an error appended -> a : 1
error appended a -> canned : 1
appended a canned -> example : 1
a canned example -> to : 1
canned example to -> demonstrate : 1
example to demonstrate -> error : 1
to demonstrate error -> auto : 1
demonstrate error auto -> values : 1
error auto values -> from : 2
auto values from -> the : 1
auto values from -> resuming : 1
auto values from -> subscription : 1
auto values from -> final : 1
from the second -> the : 1
the second the -> function : 1
the second the -> coordinator : 1
second the function -> passed : 1
the function passed -> into : 1
function passed into -> the : 1
into the function -> invokes : 1
the function invokes -> the : 1
function invokes the -> action : 1
the action that -> is : 1
action that is -> needed : 1
that is needed -> when : 1
is needed when -> there : 1
needed when there -> is : 1
is an the -> output : 1
an the output -> of : 1
code will look -> like : 3
will look like -> error : 2
will look like -> resuming : 2
will look like -> thread : 1
look like error -> from : 2
like error from -> the : 1
like error from -> with : 1
error from the -> previous : 1
error from the -> final : 1
from the previous -> the : 1
previous the error -> is : 1
the error is -> appended : 2
error is appended -> to : 2
is appended to -> the : 2
appended to the -> observable : 1
appended to the -> stream : 1
observable stream to -> the : 1
stream to the -> discussion : 1
to the discussion -> on : 1
the discussion on -> handling : 1
discussion on handling -> at : 1
on handling at -> the : 1
handling at the -> subscriber : 1
at the subscriber -> see : 1
the subscriber see -> how : 1
subscriber see how -> an : 1
see how an -> exception : 1
how an exception -> can : 1
an exception can -> be : 1
exception can be -> propagated : 1
be propagated to -> the : 1
propagated to the -> subscriber : 1
the subscriber through -> the : 1
subscriber through the -> observable : 1
through the observable -> int : 1
the observable int -> create : 1
observable int create -> a : 1
create a subject -> instance : 1
a subject instance -> and : 1
subject instance and -> retrieve : 1
instance and retrieve -> subscriber : 1
and retrieve subscriber -> abd : 1
retrieve subscriber abd -> observable : 1
subscriber abd observable -> handle : 1
abd observable handle -> auto : 1
observable handle auto -> subscriber : 1
handle auto subscriber -> auto : 1
auto subscriber auto -> observable : 1
auto subscriber auto -> auto : 1
subscriber auto observable -> previous : 1
auto observable previous -> code : 1
observable previous code -> creates : 1
code creates an -> instance : 1
of a which -> we : 1
a which we -> covered : 1
covered in rxcpp -> the : 1
key we subscribe -> to : 1
we subscribe to -> the : 1
the observable part -> of : 1
observable part of -> the : 1
we also retrieve -> the : 1
also retrieve the -> subscriber : 1
retrieve the subscriber -> handle : 1
the subscriber handle -> to : 1
subscriber handle to -> emit : 1
handle to emit -> the : 1
emit the value -> or : 1
the value or -> exception : 1
or exception into -> the : 1
exception into the -> for : 1
into the for -> i : 1
the for i -> i : 1
i if try -> catch : 2
if try catch -> emit : 1
if try catch -> eptr : 1
try catch emit -> function : 1
catch emit function -> emits : 1
emit function emits -> a : 1
function emits a -> new : 1
emits a new -> value : 1
new value to -> the : 1
be called multiple -> the : 1
called multiple the -> function : 1
multiple the function -> be : 1
the function be -> called : 1
function be called -> once : 1
called once or -> is : 1
once or is -> being : 1
or is being -> invoked : 1
is being invoked -> on : 1
being invoked on -> the : 1
invoked on the -> the : 1
the function notifies -> the : 2
function notifies the -> subscriber : 2
notifies the subscriber -> that : 2
the subscriber that -> the : 2
subscriber that the -> observable : 2
that the observable -> has : 2
observable has finished -> sending : 1
has finished sending -> the : 1
finished sending the -> observable : 1
sending the observable -> will : 1
the observable will -> not : 1
observable will not -> call : 1
will not call -> this : 1
will not call -> or : 1
not call this -> function : 1
this function if -> it : 1
function if it -> has : 1
if it has -> already : 1
it has already -> invoked : 1
has already invoked -> the : 1
already invoked the -> the : 1
invoked the the -> function : 1
observable has experienced -> an : 1
has experienced an -> error : 1
experienced an error -> and : 1
an error and -> if : 1
error and if -> the : 1
if the observable -> calls : 1
the observable calls -> this : 1
observable calls this -> it : 1
calls this it -> will : 1
it will not -> call : 1
not call or -> when : 1
call or when -> an : 1
or when an -> error : 1
an error error -> occurrence : 1
error error occurrence -> breaks : 1
error occurrence breaks -> the : 1
occurrence breaks the -> sequence : 1
breaks the sequence -> flow : 1
the sequence flow -> of : 1
sequence flow of -> a : 1
flow of a -> standard : 1
of a standard -> reactive : 1
a standard reactive -> the : 1
standard reactive the -> rxcpp : 1
reactive the rxcpp -> library : 1
library provides mechanisms -> to : 1
provides mechanisms to -> invoke : 1
mechanisms to invoke -> actions : 1
to invoke actions -> on : 1
invoke actions on -> an : 1
actions on an -> error : 1
on an error -> users : 1
an error users -> want : 1
error users want -> to : 1
users want to -> resume : 1
want to resume -> the : 1
to resume the -> sequence : 2
to resume the -> flow : 1
resume the sequence -> with : 2
the sequence with -> a : 1
the sequence with -> this : 1
sequence with a -> default : 1
with a default -> what : 1
with a default -> single : 2
a default what -> int : 1
default what int -> create : 1
what int create -> an : 1
an observable with -> appended : 1
observable with appended -> error : 1
with appended error -> auto : 1
appended error auto -> values : 1
values from resuming -> with : 1
from resuming with -> another : 1
resuming with another -> stream : 1
resuming with another -> the : 1
with another stream -> return : 1
another stream return -> observable : 1
stream return observable -> operator : 1
return observable operator -> gets : 1
observable operator gets -> executed : 1
operator gets executed -> if : 1
gets executed if -> there : 1
executed if there -> is : 1
is an error -> in : 1
an error in -> the : 1
error in the -> in : 1
this a new -> stream : 1
new stream is -> returned : 1
stream is returned -> from : 1
is returned from -> the : 1
returned from the -> lambda : 1
the lambda given -> as : 1
lambda given as -> a : 1
given as a -> to : 1
as a to -> resume : 1
a to resume -> the : 1
sequence with this -> new : 1
with this new -> this : 1
this new this -> the : 1
this the error -> propagation : 1
this the error -> itself : 1
this the error -> handler : 1
the error propagation -> can : 1
error propagation can -> be : 1
propagation can be -> by : 1
can be by -> continuing : 1
be by continuing -> with : 1
by continuing with -> a : 1
continuing with a -> meaningful : 1
with a meaningful -> the : 1
a meaningful the -> output : 1
meaningful the output -> of : 1
previous program will -> look : 1
program will look -> like : 1
program will look -> as : 1
look like resuming -> error : 2
like resuming error -> from : 2
resuming error from -> well : 1
resuming error from -> source : 1
error from well -> as : 1
from well as -> resuming : 1
well as resuming -> with : 1
as resuming with -> another : 1
with another the -> sequence : 1
another the sequence -> can : 1
the sequence can -> be : 1
sequence can be -> resumed : 1
can be resumed -> with : 1
be resumed with -> a : 1
resumed with a -> default : 1
a default single -> in : 1
a default single -> value : 1
default single in -> the : 1
single in the -> previous : 1
the previous replace -> the : 1
previous replace the -> invocation : 1
replace the invocation -> of : 1
of the operator -> with : 1
of the operator -> to : 1
the operator with -> the : 1
operator with the -> following : 1
the following resuming -> with : 1
following resuming with -> a : 1
resuming with a -> default : 1
default single value -> return : 1
single value return -> after : 1
value return after -> replacing : 1
return after replacing -> the : 1
after replacing the -> will : 1
replacing the will -> look : 1
the will look -> like : 1
error from source -> look : 1
from source look -> at : 1
source look at -> the : 1
at the marble -> diagram : 1
depicts the the -> function : 1
returns an observable -> instance : 1
returns an observable -> that : 1
returns an observable -> of : 2
an observable instance -> when : 1
observable instance when -> it : 1
instance when it -> encounters : 1
encounters an error -> from : 1
an error from -> a : 1
error from a -> particular : 1
from a particular -> the : 1
a particular the -> stream : 1
particular the stream -> switches : 1
the stream switches -> to : 1
stream switches to -> the : 1
switches to the -> new : 1
to the new -> observable : 1
the new observable -> and : 1
new observable and -> resumes : 1
observable and resumes -> the : 1
and resumes the -> operator : 1
resumes the operator -> comes : 1
operator comes in -> handy : 1
in handy in -> many : 1
handy in many -> where : 1
in many where -> the : 1
many where the -> user : 1
where the user -> needs : 1
the user needs -> to : 1
user needs to -> continue : 1
needs to continue -> the : 1
continue the propagation -> of : 1
propagation of an -> for : 1
of an for -> between : 1
an for between -> the : 1
for between the -> creation : 1
between the creation -> and : 1
creation and subscription -> of : 1
and subscription of -> the : 1
subscription of the -> there : 1
is a chance -> that : 1
a chance that -> the : 1
that the streams -> may : 1
the streams may -> undergo : 1
streams may undergo -> different : 1
may undergo different -> transformations : 1
undergo different transformations -> and : 1
different transformations and -> as : 1
transformations and as -> explained : 1
and as explained -> in : 1
as explained in -> gui : 1
explained in gui -> programming : 1
using the operators -> can : 1
the operators can -> be : 1
constructed by composing -> existing : 1
by composing existing -> rxcpp : 1
composing existing rxcpp -> in : 1
existing rxcpp in -> such : 1
rxcpp in such -> it : 1
in such it -> is : 2
such it is -> intended : 1
such it is -> worthwhile : 1
intended to use -> the : 1
the operator at -> every : 1
operator at every -> single : 1
at every single -> stage : 1
every single stage -> of : 1
single stage of -> aggregation : 1
stage of aggregation -> and : 1
of aggregation and -> transformations : 1
aggregation and transformations -> to : 1
and transformations to -> translate : 1
transformations to translate -> the : 1
to translate the -> till : 1
to translate the -> when : 1
translate the till -> the : 1
the till the -> subscription : 1
till the subscription -> similar : 1
the subscription similar -> to : 1
subscription similar to -> the : 1
to the default -> value : 1
the default value -> or : 1
default value or -> a : 1
or a sequence -> emitted : 1
a sequence emitted -> from : 1
sequence emitted from -> this : 1
emitted from this -> the : 1
from this the -> error : 1
the error itself -> can : 1
error itself can -> be : 1
itself can be -> to : 1
can be to -> resume : 1
be to resume -> the : 1
resume the flow -> of : 1
flow of the -> error : 1
of the error -> until : 1
the error until -> the : 1
error until the -> error : 1
until the error -> return : 1
the error return -> translating : 1
error return translating -> exception : 1
return translating exception -> from : 1
translating exception from -> the : 1
the source return -> previous : 1
source return previous -> fragment : 1
return previous fragment -> of : 1
previous fragment of -> code : 1
fragment of code -> explains : 1
of code explains -> how : 1
code explains how -> the : 1
explains how the -> operator : 1
how the operator -> can : 1
the operator can -> be : 1
operator can be -> used : 1
used to translate -> the : 1
translate the when -> an : 1
an error many -> the : 1
error many the -> normal : 1
many the normal -> sequence : 1
the normal sequence -> may : 1
normal sequence may -> be : 1
sequence may be -> broken : 1
may be broken -> by : 1
be broken by -> a : 1
broken by a -> temporary : 1
by a temporary -> failure : 1
a temporary failure -> on : 1
temporary failure on -> the : 1
failure on the -> producer : 1
on the producer -> in : 1
the producer in -> such : 1
producer in such -> it : 1
it is worthwhile -> to : 1
is worthwhile to -> have : 1
worthwhile to have -> an : 1
to have an -> option : 1
have an option -> to : 1
option to wait -> until : 1
until the anomalies -> are : 1
the anomalies are -> fixed : 1
anomalies are fixed -> at : 1
are fixed at -> the : 1
fixed at the -> producer : 1
at the producer -> to : 1
the producer to -> continue : 1
producer to continue -> the : 1
continue the normal -> execution : 1
the normal execution -> rxcpp : 1
normal execution rxcpp -> gives : 1
execution rxcpp gives -> the : 1
rxcpp gives the -> users : 1
gives the users -> a : 1
the users a -> very : 1
users a very -> similar : 1
a very similar -> option : 1
very similar option -> to : 1
similar option to -> retry : 1
option to retry -> when : 1
to retry when -> an : 1
retry when an -> error : 1
an error the -> retry : 1
error the retry -> option : 1
the retry option -> is : 1
retry option is -> best : 1
option is best -> suited : 1
is best suited -> to : 1
best suited to -> when : 1
suited to when -> you : 1
to when you -> are : 1
when you are -> expecting : 1
you are expecting -> the : 1
are expecting the -> sequence : 1
expecting the sequence -> to : 1
the sequence to -> encounter : 1
sequence to encounter -> predictable : 1
to encounter predictable -> retry : 1
encounter predictable retry -> operator : 1
predictable retry operator -> responds : 1
retry operator responds -> to : 1
operator responds to -> an : 1
responds to an -> notification : 1
to an notification -> from : 1
an notification from -> the : 1
observable by resubscribing -> to : 1
by resubscribing to -> the : 1
resubscribing to the -> source : 1
the source instead -> of : 1
source instead of -> passing : 1
instead of passing -> that : 1
of passing that -> call : 1
passing that call -> through : 1
that call through -> to : 1
call through to -> its : 1
through to its -> this : 1
through to its -> even : 1
to its this -> gives : 1
its this gives -> the : 1
this gives the -> source : 1
gives the source -> another : 1
the source another -> opportunity : 1
source another opportunity -> to : 1
another opportunity to -> complete : 1
opportunity to complete -> its : 1
complete its sequence -> without : 1
its sequence without -> an : 1
sequence without an -> the : 1
without an the -> retry : 1
an the retry -> always : 1
the retry always -> passes : 1
retry always passes -> notifications : 1
always passes notifications -> through : 1
passes notifications through -> to : 1
notifications through to -> its : 1
to its even -> from : 1
its even from -> sequences : 1
even from sequences -> that : 1
from sequences that -> terminate : 1
sequences that terminate -> with : 1
that terminate with -> an : 1
terminate with an -> this : 1
an this can -> cause : 1
this can cause -> duplicate : 1
can cause duplicate -> the : 1
cause duplicate the -> following : 1
duplicate the following -> marble : 1
the following marble -> diagram : 1
marble diagram will -> explain : 1
diagram will explain -> this : 1
will explain this -> is : 1
explain this is -> an : 1
is an example -> that : 1
that uses int -> auto : 1
uses int auto -> values : 1
values from subscription -> this : 1
from subscription this -> as : 1
subscription this as -> the : 1
this as the -> error : 1
as the error -> is : 1
using the operator -> to : 1
operator to avoid -> the : 1
avoid the infinite -> because : 1
the infinite because -> of : 1
infinite because of -> the : 1
the infinite wait -> on : 1
infinite wait on -> the : 1
wait on the -> retry : 1
on the retry -> operator : 1
the retry operator -> in : 1
retry operator in -> error : 1
operator in error -> the : 1
in error the -> subscriber : 1
error the subscriber -> can : 1
the subscriber can -> omit : 1
subscriber can omit -> error : 1
can omit error -> handler : 1
omit error handler -> used : 1
error handler used -> in : 1
handler used in -> the : 1
of this code -> will : 2
of this code -> is : 1
this code will -> of : 1
this code will -> be : 1
code will of -> the : 1
will of the -> it : 1
better to use -> a : 1
use a fixed -> number : 1
number of retries -> for : 1
of retries for -> error : 1
retries for error -> this : 1
for error this -> can : 1
error this can -> be : 1
achieved by another -> overload : 1
by another overload -> of : 1
overload of which -> accepts : 1
of which accepts -> the : 1
which accepts the -> number : 1
accepts the number -> of : 1
number of int -> auto : 1
of int auto -> source : 1
int auto source -> from : 1
auto source from -> output : 1
source from output -> for : 1
from output for -> the : 1
for the code -> will : 1
error from with -> the : 1
from with the -> in : 1
with the in -> this : 1
the source sequence -> in : 1
source sequence in -> rxcpp : 1
sequence in rxcpp -> can : 1
in rxcpp can -> terminate : 1
rxcpp can terminate -> gracefully : 1
can terminate gracefully -> after : 1
terminate gracefully after -> throwing : 1
gracefully after throwing -> the : 1
after throwing the -> operator : 1
throwing the operator -> is : 1
the operator is -> useful : 1
the operator is -> it : 1
operator is useful -> when : 1
useful when we -> are : 1
when we are -> using : 1
are using external -> or : 1
using external or -> when : 1
external or when -> a : 1
or when a -> need : 1
when a need -> to : 1
need to free -> up : 1
to free up -> some : 1
free up some -> resources : 1
up some resources -> allocated : 1
some resources allocated -> in : 1
resources allocated in -> some : 1
allocated in some -> other : 1
some other parts -> of : 1
other parts of -> the : 1
parts of the -> as : 1
as we there -> are : 1
we there are -> millions : 1
there are millions -> of : 1
are millions of -> lines : 1
millions of lines -> of : 1
of lines of -> code : 1
lines of code -> that : 1
code that are -> already : 1
that are already -> written : 1
are already written -> for : 1
already written for -> building : 1
written for building -> various : 1
for building various -> systems : 1
building various systems -> and : 1
various systems and -> it : 1
systems and it -> is : 1
it is highly -> likely : 1
is highly likely -> that : 1
highly likely that -> we : 1
likely that we -> need : 1
to handle resource -> management : 1
handle resource management -> when : 1
resource management when -> using : 1
management when using -> legacy : 1
when using legacy -> external : 1
using legacy external -> this : 1
legacy external this -> is : 1
external this is -> a : 1
is a place -> where : 1
a place where -> in : 1
place where in -> int : 1
where in int -> auto : 1
in int auto -> values : 1
values from final -> action : 1
from final action -> final : 1
final action final -> operator : 1
action final operator -> adds : 1
final operator adds -> a : 1
operator adds a -> new : 1
adds a new -> action : 1
a new action -> at : 1
new action at -> the : 1
action at the -> end : 1
of the newly -> created : 1
newly created the -> output : 1
created the output -> of : 1
previous program is -> as : 1
is as error -> from : 1
as error from -> the : 1
from the final -> can : 1
the final can -> be : 1
final can be -> in : 1
can be in -> the : 1
can be in -> meeting : 1
the previous that -> if : 1
previous that if -> the : 1
that if the -> source : 1
the source generates -> an : 1
source generates an -> the : 1
generates an the -> final : 1
an the final -> action : 1
the final action -> is : 1
the final action -> and : 1
final action is -> still : 1
action is still -> if : 1
is still if -> we : 1
still if we -> remove : 1
if we remove -> the : 1
we remove the -> error : 1
remove the error -> concatenated : 1
the error concatenated -> to : 1
error concatenated to -> the : 1
concatenated to the -> source : 1
source the output -> of : 1
the program will -> look : 1
will look as -> oncompleted : 1
look as oncompleted -> the : 1
as oncompleted the -> final : 1
oncompleted the final -> action : 1
final action and -> error : 1
action and error -> already : 1
and error already -> covered : 1
error already covered -> the : 1
topic of scheduling -> in : 1
of scheduling in -> the : 1
in the key -> the : 1
key the schedulers -> in : 1
the schedulers in -> rxcpp : 1
schedulers in rxcpp -> queue : 1
in rxcpp queue -> up : 1
rxcpp queue up -> the : 1
queue up the -> values : 1
up the values -> and : 1
the values and -> deliver : 1
values and deliver -> the : 1
and deliver the -> queued : 1
deliver the queued -> up : 1
the queued up -> the : 1
queued up the -> supplied : 1
up the supplied -> the : 1
the supplied the -> coordination : 1
supplied the coordination -> could : 1
the coordination could -> be : 1
coordination could be -> the : 1
could be the -> current : 1
be the current -> execution : 1
the current execution -> the : 1
current execution the -> rxcpp : 1
execution the rxcpp -> run : 1
the rxcpp run -> event : 1
rxcpp run event -> or : 1
run event or -> a : 1
event or a -> new : 1
or a new -> the : 1
new the execution -> of : 1
execution of scheduler -> operations : 1
of scheduler operations -> can : 1
scheduler operations can -> be : 1
achieved by using -> the : 1
the rxcpp such -> as : 1
rxcpp such as -> or : 1
rxcpp such as -> and : 1
as or these -> operators : 1
or these operators -> accept : 1
these operators accept -> the : 1
operators accept the -> chosen : 1
accept the chosen -> coordination : 1
the chosen coordination -> as : 1
chosen coordination as -> an : 1
coordination as an -> by : 1
as an by -> the : 1
an by the -> rxcpp : 1
library is so -> it : 1
is so it -> does : 1
so it does -> the : 1
it does the -> scheduler : 1
does the scheduler -> the : 1
the scheduler the -> user : 1
scheduler the user -> has : 1
the user has -> to : 1
user has to -> explicitly : 1
has to explicitly -> choose : 1
to explicitly choose -> the : 1
explicitly choose the -> thread : 1
choose the thread -> in : 1
the thread in -> which : 1
thread in which -> execution : 1
in which execution -> int : 1
which execution int -> generate : 1
execution int generate -> a : 1
return v from -> emit : 1
return v from -> random : 1
v from emit -> the : 1
from emit the -> current : 1
thread id have -> created : 1
id have created -> an : 1
have created an -> observable : 1
created an observable -> stream : 2
observable stream using -> the : 1
using the range -> and : 1
the range and -> have : 1
range and have -> concatenated : 1
and have concatenated -> an : 1
have concatenated an -> to : 1
concatenated an to -> demonstrate : 1
an to demonstrate -> how : 1
demonstrate how basic -> error : 1
how basic error -> handling : 1
basic error handling -> works : 1
error handling works -> with : 1
handling works with -> schedulers : 1
works with schedulers -> in : 1
with schedulers in -> another : 1
schedulers in another -> make : 1
in another make -> it : 1
it blocking too -> thread : 1
blocking too thread -> id : 1
too thread id -> v : 1
thread id the -> observable : 1
id the observable -> stream : 1
observable stream is -> subscribed : 1
stream is subscribed -> into : 1
is subscribed into -> a : 1
subscribed into a -> new : 1
into a new -> thread : 1
new thread as -> its : 1
thread as its -> similar : 1
as its similar -> to : 1
its similar to -> the : 1
the previous examples -> that : 1
previous examples that -> we : 1
error handler is -> provided : 1
handler is provided -> with : 1
is provided with -> the : 1
provided with the -> the : 1
the code may -> look : 1
may look like -> thread : 1
look like thread -> id : 2
like thread id -> observable : 2
thread id error -> from : 2
id error from -> main : 2
error from main -> thread : 2
from main thread -> id : 2
thread id take -> a : 1
id take a -> look : 1
look at another -> with : 1
at another with -> two : 1
another with two -> subscribers : 1
with two subscribers -> from : 1
two subscribers from -> the : 1
subscribers from the -> same : 1
same the subscribers -> are : 1
the subscribers are -> supposed : 1
subscribers are supposed -> to : 1
to be notified -> in : 1
be notified in -> two : 1
notified in two -> different : 1
two different int -> auto : 1
different int auto -> subscriber : 1
int auto subscriber -> auto : 1
subscriber auto auto -> instance : 1
auto auto instance -> is : 1
auto instance is -> created : 1
instance is created -> to : 1
is created to -> add : 1
created to add -> data : 1
to add data -> to : 1
add data to -> the : 1
the source from -> the : 1
source from the -> subject : 1
from the subject -> one : 1
the subject one -> subscriber : 1
subject one subscriber -> and : 1
one subscriber and -> two : 1
subscriber and two -> observables : 1
and two observables -> are : 1
two observables are -> to : 1
observables are to -> be : 1
observables are to -> handle : 1
are to be -> scheduled : 1
to be scheduled -> in : 1
scheduled in two -> distinct : 1
in two distinct -> auto : 1
two distinct auto -> onnext : 1
distinct auto onnext -> thread : 1
auto onnext thread -> id : 2
onnext thread id -> v : 2
id v auto -> onerror : 2
v auto onerror -> thread : 2
auto onerror thread -> id : 2
onerror thread id -> lambda : 1
onerror thread id -> preceding : 1
thread id lambda -> functions : 1
id lambda functions -> are : 1
lambda functions are -> declared : 1
lambda functions are -> defined : 1
lambda functions are -> protected : 1
functions are declared -> for : 1
are declared for -> use : 1
declared for use -> with : 1
for use with -> the : 1
use with the -> with : 1
with the with -> mutex : 1
the with mutex -> synchronization : 1
with mutex synchronization -> applied : 1
mutex synchronization applied -> on : 1
synchronization applied on -> the : 1
on the usage -> of : 1
operator to get -> an : 1
to get an -> organized : 1
get an organized -> placing : 1
an organized placing -> a : 1
organized placing a -> mutex : 1
placing a mutex -> around : 1
a mutex around -> will : 1
mutex around will -> avoid : 1
around will avoid -> interleaved : 1
will avoid interleaved -> if : 1
avoid interleaved if -> the : 1
interleaved if the -> thread : 1
if the thread -> switch : 1
the thread switch -> happens : 1
thread switch happens -> during : 1
happens during a -> write : 1
during a write -> to : 1
a write to -> the : 1
to the schedule -> it : 1
the schedule it -> in : 1
another thread schedule -> it : 1
thread schedule it -> in : 1
yet another thread -> observables : 1
yet another thread -> auto : 1
another thread observables -> are : 1
thread observables are -> retrieved : 1
observables are retrieved -> from : 1
are retrieved from -> the : 1
source and they -> are : 1
they are scheduled -> to : 1
are scheduled to -> observe : 1
scheduled to observe -> from : 1
to observe from -> separate : 1
observe from separate -> for : 1
from separate for -> the : 1
separate for the -> function : 1
the function a -> separate : 1
function a separate -> thread : 1
a separate thread -> is : 1
separate thread is -> specified : 1
thread is specified -> as : 1
is specified as -> the : 1
specified as the -> coordinator : 1
as the coordinator -> by : 1
the coordinator by -> passing : 1
coordinator by passing -> as : 1
as the argument -> in : 1
the argument in -> the : 1
argument in the -> for : 1
for the second -> the : 1
second the coordinator -> is : 1
the coordinator is -> an : 1
coordinator is an -> event : 1
an event by -> passing : 1
event by passing -> into : 1
by passing into -> adding : 1
passing into adding -> new : 1
into adding new -> values : 1
adding new values -> into : 1
new values into -> the : 1
into the source -> stream : 1
the source stream -> adding : 1
source stream adding -> error : 1
stream adding error -> into : 1
adding error into -> stream : 1
error into stream -> when : 1
into stream when -> exception : 1
stream when exception -> occurs : 1
when exception occurs -> for : 1
exception occurs for -> i : 1
occurs for i -> i : 1
try catch eptr -> wait : 1
catch eptr wait -> for : 1
eptr wait for -> two : 1
seconds the values -> are : 1
values are added -> to : 1
observable stream by -> using : 1
stream by using -> a : 1
using a subject -> and : 1
a subject and -> an : 1
subject and an -> exception : 1
exception is passed -> into : 1
stream to understand -> the : 1
understand the behavior -> of : 1
of the schedulers -> and : 1
the schedulers and -> error : 1
schedulers and error -> handlers : 1
and error handlers -> the : 1
error handlers the -> output : 1
handlers the output -> of : 1
be as thread -> id : 1
thread id invalid -> string : 2
id invalid string -> position : 1
id invalid string -> example : 1
invalid string position -> observable : 1
string position observable -> thread : 1
position observable thread -> id : 1
invalid string example -> demonstrates : 1
string example demonstrates -> how : 1
example demonstrates how -> the : 1
how the propagation -> of : 1
propagation of data -> happens : 1
of data happens -> through : 1
data happens through -> two : 1
happens through two -> separate : 1
through two separate -> observables : 1
two separate observables -> that : 1
separate observables that -> are : 1
observables that are -> subscribed : 1
that are subscribed -> to : 1
are subscribed to -> a : 1
subscribed to a -> common : 1
to a common -> the : 1
a common the -> error : 1
common the error -> generated : 1
the error generated -> in : 1
error generated in -> the : 1
generated in the -> source : 1
the source is -> received : 1
source is received -> and : 1
is received and -> handled : 1
handled by both -> of : 1
by both of -> the : 1
both of the -> observables : 1
of the observables -> at : 1
the observables at -> the : 1
observables at the -> corresponding : 1
at the corresponding -> look : 1
example that demonstrates -> how : 1
example that demonstrates -> the : 1
that demonstrates how -> error : 1
demonstrates how error -> handling : 1
how error handling -> can : 1
error handling can -> be : 1
handling can be -> done : 1
be done in -> scheduling : 1
done in scheduling -> by : 1
in scheduling by -> using : 1
scheduling by using -> the : 1
the a global -> mutex : 1
for output int -> creating : 1
output int creating -> observable : 1
creating observable streams -> auto : 1
observable streams auto -> return : 1
streams auto return -> v : 1
auto return v -> auto : 1
auto return v -> from : 1
return v auto -> return : 1
v auto return -> v : 1
v from random -> observable : 1
from random observable -> streams : 1
random observable streams -> on : 1
observable streams on -> integers : 1
streams on integers -> are : 1
on integers are -> created : 1
integers are created -> using : 1
are created using -> the : 1
created using the -> and : 1
the and one -> stream : 1
and one stream -> is : 1
one stream is -> concatenated : 1
stream is concatenated -> with : 1
is concatenated with -> an : 1
concatenated with an -> to : 1
with an to -> explain : 1
an to explain -> error : 1
to explain error -> handling : 1
explain error handling -> in : 1
handling in scheduled -> schedule : 1
in scheduled schedule -> it : 1
scheduled schedule it -> in : 1
thread auto schedule -> it : 1
auto schedule it -> in : 1
thread auto observable -> streams : 1
auto observable streams -> are : 1
observable streams are -> queued : 1
streams are queued -> up : 1
are queued up -> in : 1
queued up in -> different : 1
up in different -> threads : 1
different threads using -> the : 1
the first stream -> is : 1
first stream is -> scheduled : 1
stream is scheduled -> with : 1
stream is scheduled -> on : 1
is scheduled with -> an : 1
scheduled with an -> event : 1
with an event -> loop : 1
an event loop -> as : 1
event loop as -> its : 1
loop as its -> coordination : 1
as its coordination -> and : 1
its coordination and -> the : 1
coordination and the -> second : 1
the second stream -> is : 1
second stream is -> scheduled : 1
is scheduled on -> another : 1
scheduled on another -> auto : 1
on another auto -> onnext : 1
another auto onnext -> thread : 1
id preceding lambda -> functions : 1
preceding lambda functions -> are : 1
functions are defined -> to : 1
are defined to -> be : 1
defined to be -> passed : 1
to be passed -> as : 1
passed as parameters -> in : 1
as parameters in -> place : 1
parameters in place -> of : 1
in place of -> and : 1
place of and -> of : 1
of and of -> the : 1
of the these -> lambda : 1
the these lambda -> functions : 1
these lambda functions -> are : 1
functions are protected -> with : 1
are protected with -> to : 1
protected with to -> synchronize : 1
with to synchronize -> the : 1
synchronize the calls -> to : 1
the calls to -> the : 1
to the subscribing -> the : 1
the subscribing the -> merged : 1
subscribing the merged -> sequence : 1
the merged sequence -> print : 1
merged sequence print -> the : 1
sequence print the -> main : 1
thread id output -> of : 1
id output of -> the : 1
thread id stream -> handling : 1
id stream handling -> some : 1
handling some we -> conclude : 1
some we conclude -> this : 1
we conclude this -> discuss : 1
conclude this discuss -> a : 1
this discuss a -> few : 1
discuss a few -> to : 1
a few to -> work : 1
few to work -> with : 1
work with an -> system : 1
with an system -> using : 1
an system using -> the : 1
system using the -> rxcpp : 1
in this discuss -> two : 1
this discuss two -> examples : 1
discuss two examples -> to : 1
two examples to -> understand : 1
examples to understand -> how : 1
understand how effective -> the : 1
how effective the -> rxcpp : 1
effective the rxcpp -> library : 1
be in meeting -> we : 1
in meeting we -> will : 1
meeting we will -> discuss : 1
will discuss an -> example : 1
discuss an example -> that : 1
demonstrates the aggregation -> of : 1
aggregation of data -> in : 1
in a stream -> and : 1
stream and application -> event : 1
and application event -> using : 1
application event using -> the : 1
event using the -> rxcpp : 1
the rxcpp based -> on : 1
rxcpp based on -> stream : 1
on stream this -> the : 1
stream this the -> stream : 1
this the stream -> item : 1
the stream item -> is : 1
stream item is -> a : 1
item is a -> type : 1
is a type -> to : 1
to represent an -> and : 1
to represent an -> is : 1
represent an and -> the : 1
and the code -> is : 1
code is intended -> to : 1
intended to group -> the : 1
to group the -> input : 1
group the input -> stream : 1
input stream based -> on : 1
stream based on -> the : 1
on the roles -> and : 1
the roles and -> salaries : 1
roles and salaries -> of : 1
and salaries of -> namespace : 1
salaries of namespace -> rx : 1
of namespace rx -> using : 1
namespace struct employee -> string : 1
struct employee string -> string : 1
employee string string -> int : 1
string string int -> libraries : 1
string int libraries -> and : 1
int libraries and -> namespaces : 1
libraries and namespaces -> required : 1
libraries and namespaces -> that : 1
and namespaces required -> in : 1
namespaces required in -> the : 1
required in the -> code : 1
the code are -> and : 1
code are and -> the : 1
and the data -> structure : 1
and the data -> will : 1
represent an is -> the : 1
an is the -> type : 1
is the type -> is : 1
the type is -> a : 1
type is a -> simple : 1
a simple with -> data : 1
simple with data -> items : 1
with data items -> such : 1
data items such -> as : 1
items such as -> and : 1
we have treated -> the : 1
have treated the -> salary : 1
treated the salary -> field : 1
the salary field -> as : 1
salary field as -> an : 1
field as an -> group : 1
as an group -> salaries : 1
an group salaries -> by : 1
group salaries by -> role : 1
salaries by role -> auto : 1
by role auto -> return : 1
role auto return -> return : 1
auto return return -> the : 1
return the a -> subject : 1
the a subject -> is : 1
a subject is -> created : 1
subject is created -> with : 1
with the to -> create : 1
the to create -> a : 1
create a the -> based : 1
a the based -> on : 1
the based on -> role : 1
the based on -> the : 1
based on role -> and : 1
on role and -> is : 1
role and is -> performed : 1
and is performed -> on : 1
is performed on -> the : 1
performed on the -> observable : 1
the observable from -> the : 1
observable from the -> the : 1
the rxcpp returns -> an : 1
rxcpp returns an -> observable : 1
emits each of -> which : 1
each of which -> corresponds : 1
of which corresponds -> to : 1
which corresponds to -> a : 1
corresponds to a -> unique : 1
to a unique -> pair : 1
a unique pair -> from : 1
unique pair from -> the : 1
pair from the -> source : 1
the source combine -> min : 1
source combine min -> max : 1
combine min max -> and : 1
min max and -> average : 1
max and average -> reductions : 1
and average reductions -> based : 1
average reductions based -> on : 1
reductions based on -> auto : 1
based on auto -> result : 1
on auto result -> return : 1
auto result return -> int : 1
result return int -> int : 1
return int int -> double : 1
int int double -> return : 1
int int double -> count : 1
int double return -> double : 1
return double return -> the : 1
return the resultant -> observable : 1
the resultant observable -> combines : 1
resultant observable combines -> the : 1
observable combines the -> observable : 1
combines the observable -> based : 1
the observable based -> on : 1
and the based -> on : 1
the is performed -> by : 1
performed by appending -> the : 1
appending the minimum -> maximum : 1
the minimum maximum -> and : 1
minimum maximum and -> average : 1
maximum and average -> salary : 1
and average salary -> per : 1
average salary per -> the : 1
salary per the -> lambda : 1
per the lambda -> inside : 1
the lambda inside -> of : 1
lambda inside of -> the : 1
of the will -> be : 1
be called when -> all : 1
called when all -> of : 1
when all of -> the : 1
of the arguments -> have : 1
the arguments have -> a : 1
arguments have a -> in : 1
have a in -> this : 1
in this when -> a : 1
this when a -> particular : 1
a particular group -> all : 1
particular group all -> of : 1
group all of -> the : 1
values inside of -> the : 1
the streams corresponding -> to : 1
streams corresponding to -> the : 1
to the group -> are : 1
the group are -> reduced : 1
group are reduced -> to : 1
are reduced to -> single : 1
reduced to single -> the : 1
to single the -> lambda : 1
single the lambda -> is : 1
the lambda is -> called : 1
lambda is called -> only : 1
is called only -> once : 1
called only once -> per : 1
only once per -> with : 1
once per with -> the : 1
per with the -> final : 1
with the final -> value : 1
the final value -> of : 1
final value of -> each : 1
value of each -> the : 1
of each the -> map : 1
each the map -> applied : 1
the map applied -> on : 1
map applied on -> the : 1
on the returns -> an : 1
the returns an -> observable : 1
observable of the -> type : 2
and the operator -> returns : 1
operator returns an -> observable : 1
type the merge -> is : 1
the merge is -> applied : 1
merge is applied -> to : 1
is applied to -> prevent : 1
applied to prevent -> the : 1
prevent the data -> as : 1
data as the -> grouped : 1
as the grouped -> observable : 1
the grouped observable -> is : 1
grouped observable is -> and : 1
observable is and -> the : 1
the data will -> be : 1
will be lost -> if : 1
be lost if -> it : 1
lost if it -> is : 1
is not subscribed -> to : 1
not subscribed to -> display : 1
subscribed to display -> the : 1
display the aggregated -> result : 2
the aggregated result -> int : 1
the aggregated result -> of : 1
aggregated result int -> int : 1
result int int -> int : 1
int int int -> double : 1
int double count -> salary : 1
double count salary -> range : 1
count salary range -> min : 1
count salary range -> average : 3
salary range min -> max : 1
range min max -> average : 1
min max average -> salary : 1
max average salary -> avg : 1
average salary avg -> supplying : 1
salary avg supplying -> input : 1
avg supplying input -> data : 1
supplying input data -> return : 1
input data return -> resultant : 1
data return resultant -> observable : 1
return resultant observable -> is : 1
resultant observable is -> then : 1
observable is then -> in : 1
is then in -> order : 1
then in order -> to : 1
order to display -> the : 1
aggregated result of -> input : 1
result of input -> the : 1
of input the -> data : 1
input the data -> items : 1
the data items -> are : 1
data items are -> supplied : 1
items are supplied -> to : 1
are supplied to -> the : 1
from the created -> with : 1
the created with -> in : 1
created with in -> the : 1
previous the source -> can : 1
the source can -> be : 1
source can be -> such : 1
can be such -> as : 1
be such as -> data : 1
such as data -> retrieved : 1
as data retrieved -> over : 1
data retrieved over -> the : 1
retrieved over the -> network : 1
over the network -> or : 1
the network or -> from : 1
network or from -> another : 1
or from another -> since : 1
from another since -> the : 1
another since the -> observable : 1
since the observable -> created : 1
the observable created -> here : 1
observable created here -> is : 1
created here is -> a : 1
is a hot -> aggregation : 1
a hot aggregation -> is : 1
hot aggregation is -> performed : 1
aggregation is performed -> based : 1
is performed based -> on : 1
performed based on -> the : 1
on the latest -> data : 1
the latest data -> output : 1
latest data output -> of : 1
data output of -> this : 1
is as count -> salary : 1
as count salary -> range : 1
salary range average -> salary : 3
range average salary -> count : 2
range average salary -> event : 1
average salary count -> salary : 2
salary count salary -> range : 2
average salary event -> handling : 1
salary event handling -> following : 1
event handling following -> example : 1
handling following example -> is : 1
following example is -> a : 1
example is a -> with : 1
is a with -> events : 1
a with events -> to : 1
with events to -> represent : 1
events to represent -> the : 1
represent the primitive -> operations : 1
the primitive operations -> of : 1
primitive operations of -> a : 1
operations of a -> user : 1
of a user -> interface : 1
a user interface -> we : 1
interface we will -> be : 1
will be handling -> the : 1
be handling the -> flow : 1
handling the flow -> of : 1
flow of these -> events : 1
of these events -> by : 1
these events by -> using : 1
events by using -> rxcpp : 1
by using rxcpp -> in : 1
using rxcpp in -> this : 1
this the application -> is : 1
application is a -> and : 1
a and can -> easily : 1
and can easily -> be : 1
can easily be -> mapped : 1
easily be mapped -> to : 1
be mapped to -> a : 1
mapped to a -> gui : 1
to a gui -> this : 1
a gui this -> has : 1
a gui this -> we : 1
gui this has -> been : 1
been done for -> brevity : 1
done for brevity -> in : 1
for brevity in -> the : 1
brevity in the -> code : 1
the code namespace -> rx : 1
code namespace rx -> using : 1
using namespace application -> events : 1
namespace application events -> enum : 1
application events enum -> class : 1
events enum class -> appevent : 1
enum class appevent -> other : 1
class appevent other -> libraries : 1
appevent other libraries -> and : 1
other libraries and -> namespaces : 1
and namespaces that -> we : 1
namespaces that we -> will : 1
in the programs -> are : 1
the programs are -> included : 1
programs are included -> an : 1
are included an -> enum : 1
included an enum -> is : 1
an enum is -> to : 1
enum is to -> represent : 1
is to represent -> some : 1
to represent some -> of : 1
represent some of -> the : 1
of the basic -> event : 1
the basic event -> states : 1
basic event states -> that : 1
event states that -> can : 1
states that can -> be : 1
can be emitted -> from : 1
be emitted from -> a : 1
emitted from a -> generic : 1
from a generic -> a : 1
a generic a -> or : 1
generic a or -> a : 1
or a active -> i : 1
a active i -> or : 1
active i or -> i : 1
i or i -> inactive : 1
or i inactive -> d : 1
i inactive d -> or : 1
inactive d or -> d : 1
d or d -> data : 1
or d data -> c : 1
d data c -> or : 1
data c or -> c : 1
c or c -> close : 1
or c close -> f : 1
c close f -> or : 1
close f or -> f : 1
f or f -> finish : 1
or f finish -> default : 1
f finish default -> other : 1
finish default other -> auto : 1
default other auto -> events : 1
other auto events -> application : 1
auto events application -> for : 1
events application for -> int : 1
application for int -> key : 1
for int key -> appevent : 1
int key appevent -> switch : 1
key appevent switch -> case : 1
appevent switch case -> case : 1
switch case case -> case : 1
case case case -> case : 2
case case case -> if : 1
case case if -> else : 1
case if else -> return : 1
if else return -> the : 1
else return the -> previous : 1
return the previous -> we : 1
we created an -> observable : 1
observable stream of -> type : 1
stream of type -> by : 1
of type by -> mapping : 1
type by mapping -> some : 1
by mapping some -> of : 1
mapping some of -> the : 1
of the keyboard -> entries : 1
the keyboard entries -> to : 1
keyboard entries to -> defined : 1
entries to defined -> event : 1
to defined event -> the : 1
defined event the -> infinite : 1
event the infinite -> loop : 1
the infinite loop -> inside : 1
infinite loop inside -> the : 1
loop inside the -> lambda : 1
the lambda of -> function : 1
lambda of function -> represents : 1
of function represents -> the : 1
function represents the -> in : 1
represents the in -> gui : 1
the in gui -> to : 1
in gui to -> make : 1
gui to make -> the : 1
make the cold -> observable : 1
the cold observable -> declare : 1
cold observable declare -> into : 1
observable declare into -> and : 1
declare into and -> to : 1
into and to -> get : 1
and to get -> the : 1
get the connections -> to : 1
the connections to -> the : 1
connections to the -> source : 1
the source independent -> of : 1
source independent of -> following : 1
independent of following -> the : 1
of following the -> operator : 1
following the operator -> is : 1
operator is it -> also : 1
is it also -> helps : 1
it also helps -> to : 1
helps to send -> the : 1
send the most -> recent : 1
most recent value -> in : 1
recent value in -> the : 1
in the stream -> to : 1
stream to new -> event : 1
to new event -> fires : 1
new event fires -> when : 1
event fires when -> application : 3
event fires when -> data : 1
fires when application -> is : 3
when application is -> active : 1
when application is -> inactive : 1
when application is -> closed : 1
application is active -> auto : 1
is active auto -> appactive : 1
active auto appactive -> return : 1
auto appactive return -> event : 1
appactive return event -> event : 1
return event event -> fires : 3
event event fires -> when : 3
application is inactive -> auto : 1
is inactive auto -> appinactive : 1
inactive auto appinactive -> return : 1
auto appinactive return -> event : 1
appinactive return event -> event : 1
fires when data -> stream : 1
when data stream -> starts : 1
data stream starts -> auto : 1
stream starts auto -> appdata : 1
starts auto appdata -> return : 1
auto appdata return -> event : 1
appdata return event -> event : 1
application is closed -> auto : 1
is closed auto -> appclose : 1
closed auto appclose -> return : 1
auto appclose return -> event : 1
appclose return event -> filtered : 1
return event filtered -> observables : 1
event filtered observables -> are : 1
filtered observables are -> to : 1
are to handle -> the : 1
handle the use -> cases : 1
the use cases -> of : 1
cases of the -> reactive : 1
the reactive the -> observable : 1
reactive the observable -> filters : 1
the observable filters -> out : 1
observable filters out -> whenever : 1
filters out whenever -> an : 1
out whenever an -> event : 1
whenever an event -> is : 1
an event is -> available : 1
event is available -> in : 1
the for for -> and : 1
for for and -> for : 1
for and for -> auto : 1
and for auto -> datafromapp : 1
for auto datafromapp -> return : 1
auto datafromapp return -> return : 1
datafromapp return return -> all : 1
return return all -> the : 1
return all the -> data : 1
the data events -> stop : 1
data events stop -> when : 1
events stop when -> the : 1
when the application -> goes : 1
the application goes -> inactive : 1
application goes inactive -> only : 1
goes inactive only -> listen : 1
inactive only listen -> to : 1
only listen to -> most : 1
listen to most -> recent : 1
to most recent -> data : 1
most recent data -> stop : 1
recent data stop -> everything : 1
data stop everything -> when : 1
stop everything when -> event : 1
everything when event -> recieved : 1
when event recieved -> return : 1
event recieved return -> program : 1
recieved return program -> will : 1
return program will -> start : 1
program will start -> accepting : 1
will start accepting -> the : 1
start accepting the -> data : 1
accepting the data -> streams : 1
data streams from -> the : 1
streams from the -> events : 1
from the events -> observable : 1
the events observable -> only : 1
events observable only -> if : 1
observable only if -> event : 1
only if event -> is : 1
if event is -> the : 1
event is the -> application : 1
is the application -> will : 2
the application will -> accept : 1
the application will -> exit : 1
application will accept -> the : 1
will accept the -> data : 1
accept the data -> is : 1
the event flow -> will : 1
event flow will -> resume : 1
flow will resume -> only : 1
will resume only -> when : 1
resume only when -> the : 1
only when the -> next : 1
when the next -> is : 1
the next is -> when : 1
next is when -> or : 1
is when or -> is : 1
when or is -> the : 1
or is the -> application : 1
application will exit -> similar : 1
will exit similar -> to : 1
exit similar to -> a : 1
a or in -> a : 1
or in a -> gui : 1
we discussed error -> handling : 2
discussed error handling -> in : 1
discussed error handling -> we : 1
and operators to -> handle : 1
operators to handle -> streams : 1
to handle streams -> in : 1
rxcpp we visited -> the : 1
we visited the -> basic : 1
visited the basic -> principles : 1
the basic principles -> of : 1
basic principles of -> a : 1
principles of a -> reactive : 1
a reactive and -> gave : 1
reactive and gave -> more : 1
and gave more -> emphasis : 1
gave more emphasis -> to : 1
more emphasis to -> one : 1
emphasis to one -> of : 1
to one of -> the : 1
the key pillars -> of : 1
key pillars of -> a : 1
pillars of a -> reactive : 1
a reactive when -> we : 1
reactive when we -> discussed : 1
when we discussed -> error : 1
error handling we -> discussed : 1
handling we discussed -> features : 1
we discussed features -> such : 1
discussed features such -> as : 1
such as error -> handlers : 1
as error handlers -> which : 1
error handlers which -> need : 1
handlers which need -> to : 1
which need to -> be : 1
to be used -> with : 1
be used with -> we : 1
used with we -> discussed : 1
with we discussed -> rxcpp : 1
we discussed rxcpp -> such : 1
discussed rxcpp such -> as : 1
as and to -> discuss : 1
and to discuss -> how : 1
and error we -> discussed : 1
error we discussed -> two : 1
we discussed two -> sample : 1
discussed two sample -> to : 1
two sample to -> understand : 1
sample to understand -> more : 1
to understand more -> about : 1
understand more about -> stream : 1
more about stream -> these : 1
about stream these -> programs : 1
stream these programs -> illustrated : 1
these programs illustrated -> how : 1
programs illustrated how -> the : 1
illustrated how the -> rxcpp : 1
how the rxcpp -> library : 1
used to process -> a : 1
process a stream -> of : 1
stream of ux -> events : 1
of ux events -> using : 1
ux events using -> a : 1
events using a -> console : 1
using a console -> and : 1
a console and -> aggregate : 1
console and aggregate -> data : 1
and aggregate data -> the : 1
aggregate data the -> next : 1
data the next -> we : 1
look at writing -> custom : 1
at writing custom -> operators : 1
writing custom operators -> for : 1
for rxcpp books -> you : 1
rxcpp books you -> may : 1
you may you -> enjoyed : 1
may you enjoyed -> this : 1
you enjoyed this -> you : 1
enjoyed this you -> may : 1
this you may -> be : 1
you may be -> interested : 1
may be interested -> in : 1
be interested in -> these : 1
interested in these -> other : 1
in these other -> books : 1
these other books -> by : 1
other books by -> data : 1
books by data -> structures : 1
by data structures -> and : 1
structures and wisnu -> how : 1
and wisnu how -> to : 1
wisnu how to -> use : 1
to use arrays -> and : 1
use arrays and -> lists : 1
arrays and lists -> to : 1
and lists to -> get : 1
lists to get -> better : 1
to get better -> results : 1
get better results -> in : 1
better results in -> complex : 1
results in complex -> enhanced : 1
in complex enhanced -> applications : 1
complex enhanced applications -> by : 1
enhanced applications by -> using : 1
applications by using -> and : 1
by using and -> searching : 1
using and searching -> algorithms : 1
and searching algorithms -> such : 1
searching algorithms such -> as : 1
algorithms such as -> linear : 1
such as linear -> binary : 1
as linear binary -> jump : 1
linear binary jump -> exponential : 1
binary jump exponential -> and : 1
jump exponential and -> a : 1
exponential and a -> positive : 1
and a positive -> impact : 1
a positive impact -> on : 1
positive impact on -> the : 1
impact on the -> efficiency : 1
on the efficiency -> of : 1
the efficiency of -> applications : 1
efficiency of applications -> with : 1
applications with tree -> the : 1
with tree the -> design : 1
tree the design -> used : 1
the design used -> in : 1
design used in -> sorting : 1
used in sorting -> algorithms : 1
in sorting algorithms -> like : 1
sorting algorithms like -> heap : 1
algorithms like heap -> quick : 1
like heap quick -> merge : 1
heap quick merge -> sort : 1
quick merge sort -> and : 1
merge sort and -> radix : 1
sort and radix -> various : 1
and radix various -> common : 1
radix various common -> algorithms : 1
various common algorithms -> in : 1
common algorithms in -> string : 1
algorithms in string -> data : 1
in string data -> out : 1
string data out -> how : 1
data out how -> to : 1
to design an -> algorithm : 1
design an algorithm -> for : 1
an algorithm for -> a : 1
algorithm for a -> specific : 1
a specific task -> using : 1
specific task using -> the : 1
task using the -> common : 1
using the common -> algorithm : 1
the common algorithm -> high : 1
common algorithm high -> viktor : 1
algorithm high viktor -> of : 1
high viktor of -> modern : 1
viktor of modern -> constructs : 1
of modern constructs -> and : 1
modern constructs and -> hardware : 1
constructs and hardware -> such : 1
and hardware such -> as : 1
hardware such as -> cpu : 1
such as cpu -> cache : 1
as cpu cache -> to : 1
cpu cache to -> boost : 1
cache to boost -> specialized : 1
to boost specialized -> data : 1
boost specialized data -> structures : 1
specialized data structures -> for : 1
data structures for -> modern : 1
structures for modern -> metaprogramming : 1
for modern metaprogramming -> techniques : 1
modern metaprogramming techniques -> to : 1
metaprogramming techniques to -> reduce : 1
techniques to reduce -> runtime : 1
to reduce runtime -> efficient : 1
reduce runtime efficient -> memory : 1
runtime efficient memory -> management : 1
efficient memory management -> using : 1
memory management using -> custom : 1
management using custom -> memory : 1
using custom memory -> boilerplate : 1
custom memory boilerplate -> code : 1
memory boilerplate code -> using : 1
boilerplate code using -> reflection : 1
code using reflection -> the : 1
using reflection the -> benefits : 1
reflection the benefits -> of : 1
the benefits of -> concurrent : 1
benefits of concurrent -> optimizations : 1
of concurrent optimizations -> with : 1
concurrent optimizations with -> preserved : 1
optimizations with preserved -> readability : 1
with preserved readability -> using : 1
preserved readability using -> proxy : 1
readability using proxy -> insights : 1
using proxy insights -> into : 1
proxy insights into -> subtle : 1
insights into subtle -> optimizations : 1
into subtle optimizations -> used : 1
subtle optimizations used -> by : 1
optimizations used by -> stl : 1
used by stl -> the : 1
by stl the -> range : 1
stl the range -> library : 1
the range library -> for : 1
range library for -> expressive : 1
library for expressive -> your : 1
for expressive your -> code : 1
expressive your code -> over : 1
your code over -> cpu : 1
code over cpu -> and : 1
over cpu and -> without : 1
cpu and without -> compromising : 1
and without compromising -> a : 1
without compromising a -> review : 1
compromising a review -> let : 1
what you share -> your : 1
you share your -> thoughts : 1
share your thoughts -> on : 1
your thoughts on -> this : 1
thoughts on this -> book : 1
on this book -> with : 1
this book with -> others : 1
book with others -> by : 1
with others by -> leaving : 1
others by leaving -> a : 1
by leaving a -> review : 1
leaving a review -> on : 1
that you bought -> it : 1
you bought it -> you : 1
bought it you -> purchased : 1
it you purchased -> the : 1
you purchased the -> book : 1
purchased the book -> from : 1
the book from -> please : 1
book from please -> leave : 1
from please leave -> us : 1
please leave us -> an : 1
leave us an -> honest : 1
us an honest -> review : 1
an honest review -> on : 1
honest review on -> this : 1
review on this -> amazon : 1
on this amazon -> this : 1
this amazon this -> is : 1
amazon this is -> vital : 1
this is vital -> so : 1
is vital so -> that : 1
vital so that -> other : 1
so that other -> potential : 1
that other potential -> readers : 1
other potential readers -> can : 1
readers can see -> and : 1
can see and -> use : 1
to make purchasing -> we : 1
make purchasing we -> can : 1
purchasing we can -> understand : 1
we can understand -> what : 1
understand what our -> customers : 1
what our customers -> think : 1
our customers think -> about : 1
customers think about -> our : 1
feedback on the -> title : 1
on the title -> that : 1
the title that -> they : 1
title that they -> have : 1
they have worked -> with : 1
worked with packt -> to : 1
with packt to -> it : 1
packt to it -> will : 1
it will only -> take : 1
will only take -> a : 1
only take a -> few : 1
take a few -> minutes : 1
a few minutes -> of : 1
few minutes of -> your : 1
minutes of your -> but : 1
of your but -> is : 1
your but is -> valuable : 1
but is valuable -> to : 1
is valuable to -> other : 1
valuable to other -> potential : 1
to other potential -> our : 1
other potential our -> and : 1
potential our and -> thank : 1
